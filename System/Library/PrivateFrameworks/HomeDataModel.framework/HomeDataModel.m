uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *result = *a2;
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_0(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

uint64_t block_destroy_helper_12()
{
  return swift_release();
}

uint64_t block_destroy_helper_13()
{
  return swift_release();
}

uint64_t block_destroy_helper_14()
{
  return swift_release();
}

uint64_t block_destroy_helper_15()
{
  return swift_release();
}

uint64_t block_destroy_helper_16()
{
  return swift_release();
}

uint64_t block_destroy_helper_17()
{
  return swift_release();
}

uint64_t block_destroy_helper_18()
{
  return swift_release();
}

uint64_t block_destroy_helper_19()
{
  return swift_release();
}

uint64_t block_destroy_helper_20()
{
  return swift_release();
}

uint64_t block_destroy_helper_21()
{
  return swift_release();
}

uint64_t block_destroy_helper_22()
{
  return swift_release();
}

uint64_t block_destroy_helper_23()
{
  return swift_release();
}

uint64_t block_destroy_helper_24()
{
  return swift_release();
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_14(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_15(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_16(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_17(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_18(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_19(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_20(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_21(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_22(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_23(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_24(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t objectdestroy_20Tm()
{
  swift_unknownObjectRelease();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t objectdestroy_20Tm_0(uint64_t *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 32) & ~v4;
  uint64_t v6 = v4 | 7;
  unint64_t v7 = (((*(void *)(v3 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v1, v7 + 16, v6);
}

uint64_t objectdestroy_27Tm()
{
  swift_unknownObjectRelease();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t objectdestroy_27Tm_0(uint64_t a1)
{
  swift_unknownObjectRelease();

  return MEMORY[0x270FA0238](v1, a1, 7);
}

uint64_t objectdestroy_27Tm_1()
{
  uint64_t v1 = sub_251F34DA0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 47) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  __swift_destroy_boxed_opaque_existential_0(v0 + v6);

  return MEMORY[0x270FA0238](v0, ((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v5);
}

uint64_t objectdestroyTm()
{
  _Block_release(*(const void **)(v0 + 40));

  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t objectdestroyTm_0()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9F008);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t objectdestroyTm_1()
{
  swift_unknownObjectRelease();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t objectdestroyTm_2()
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 32);

  return MEMORY[0x270FA0238](v0, 72, 7);
}

uint64_t objectdestroy_48Tm()
{
  uint64_t v1 = sub_251F34DA0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t objectdestroyTm_3(uint64_t a1)
{
  swift_unknownObjectRelease();

  return MEMORY[0x270FA0238](v1, a1, 7);
}

uint64_t objectdestroyTm_4()
{
  uint64_t v1 = *(void *)(type metadata accessor for ScrubberElement(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v5 = v0 + v3;
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v7 = sub_251F34DA0();
  uint64_t v8 = *(void *)(v7 - 8);
  v9 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v9(v0 + v3, v7);
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v10 = type metadata accessor for ReachabilityEvent();
    uint64_t v11 = v5 + *(int *)(v10 + 24);
    uint64_t v12 = sub_251F34D20();
    v13 = *(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);
    v13(v11, v12);
    v13(v5 + *(int *)(v10 + 28), v12);
    uint64_t v14 = v4;
  }
  else
  {
    uint64_t v31 = v8;
    uint64_t v34 = v4;
    v15 = (int *)type metadata accessor for CameraClip();
    uint64_t v16 = v5 + v15[5];
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    v32 = *(unsigned int (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
    uint64_t v33 = v17;
    if (!v32(v16, 1) && !(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v16, 1, v7)) {
      v9(v16, v7);
    }
    v30 = v9;
    uint64_t v18 = v5 + v15[6];
    uint64_t v19 = sub_251F34D20();
    v20 = *(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8);
    v20(v18, v19);
    v20(v5 + v15[7], v19);
    swift_bridgeObjectRelease();
    uint64_t v21 = v5 + v15[11];
    uint64_t v22 = sub_251F34B70();
    uint64_t v23 = *(void *)(v22 - 8);
    v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
    if (!v24(v21, 1, v22)) {
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
    }
    uint64_t v25 = v5 + v15[12];
    if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v32)(v25, 1, v33)
      && !(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v25, 1, v7))
    {
      v30(v25, v7);
    }
    uint64_t v26 = v5 + v15[14];
    if (!v24(v26, 1, v22)) {
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v26, v22);
    }
    uint64_t v27 = v5 + v15[15];
    unsigned int v28 = v24(v27, 1, v22);
    uint64_t v3 = (v2 + 40) & ~v2;
    uint64_t v14 = v34;
    if (!v28) {
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v27, v22);
    }
  }

  return MEMORY[0x270FA0238](v0, v3 + v14, v2 | 7);
}

uint64_t sub_2519F6994@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    int v4 = 0;
    uint64_t v5 = (int *)(a1 + 32);
    do
    {
      int v7 = *v5++;
      int v6 = v7;
      if ((v7 & ~v4) == 0) {
        int v6 = 0;
      }
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    int v4 = 0;
  }
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

uint64_t sub_2519F69F0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    int v4 = 0;
    uint64_t v5 = (unsigned __int8 *)(a1 + 32);
    do
    {
      int v7 = *v5++;
      int v6 = v7;
      if ((v7 & ~v4) == 0) {
        int v6 = 0;
      }
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    LOBYTE(v4) = 0;
  }
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

uint64_t sub_2519F6A48@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = 0;
    uint64_t v5 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v7 = *v5++;
      uint64_t v6 = v7;
      if ((v7 & ~v4) == 0) {
        uint64_t v6 = 0;
      }
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

uint64_t StaticService.set(for:options:context:)(uint64_t a1, uint64_t a2, uint64_t *a3, _OWORD *a4)
{
  *(void *)(v5 + 384) = a1;
  *(void *)(v5 + 392) = a2;
  uint64_t v6 = *a3;
  *(void *)(v5 + 400) = v4;
  *(void *)(v5 + 408) = v6;
  long long v7 = a4[1];
  *(_OWORD *)(v5 + 416) = *a4;
  *(_OWORD *)(v5 + 432) = v7;
  return MEMORY[0x270FA2498](sub_2519F6AD0, 0, 0);
}

uint64_t sub_2519F6AD0()
{
  uint64_t v52 = v0;
  v49 = (unsigned __int8 *)(v0 + 56);
  v46 = (_OWORD *)(v0 + 216);
  uint64_t v1 = (_OWORD *)(v0 + 248);
  uint64_t v2 = (_OWORD *)(v0 + 280);
  v48 = (_OWORD *)(v0 + 312);
  uint64_t v3 = *(void *)(v0 + 392);
  uint64_t v4 = *(void *)(v3 + 64);
  uint64_t v40 = v3 + 64;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(v3 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & v4;
  int64_t v41 = (unint64_t)(63 - v6) >> 6;
  v44 = (_OWORD *)(v0 + 184);
  uint64_t v42 = v0 + 144;
  uint64_t v43 = v0 + 64;
  v39 = (_OWORD *)(v0 + 104);
  uint64_t v45 = *(void *)(v0 + 392);
  uint64_t v8 = swift_bridgeObjectRetain();
  int64_t v11 = 0;
  uint64_t v12 = (void *)MEMORY[0x263F8EE80];
  while (1)
  {
    *(void *)(v0 + 448) = v12;
    if (v7)
    {
      unint64_t v14 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      int64_t v47 = v11;
      unint64_t v15 = v14 | (v11 << 6);
    }
    else
    {
      int64_t v16 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_48;
      }
      if (v16 >= v41)
      {
LABEL_40:
        swift_release();
        *(void *)(v0 + 456) = sub_251F35C80();
        *(void *)(v0 + 464) = sub_251F35C70();
        uint64_t v35 = sub_251F35C00();
        uint64_t v37 = v36;
        uint64_t v8 = (uint64_t)sub_2519F701C;
        uint64_t v9 = v35;
        uint64_t v10 = v37;
        return MEMORY[0x270FA2498](v8, v9, v10);
      }
      unint64_t v17 = *(void *)(v40 + 8 * v16);
      int64_t v18 = v11 + 1;
      if (!v17)
      {
        int64_t v18 = v11 + 2;
        if (v11 + 2 >= v41) {
          goto LABEL_40;
        }
        unint64_t v17 = *(void *)(v40 + 8 * v18);
        if (!v17)
        {
          int64_t v18 = v11 + 3;
          if (v11 + 3 >= v41) {
            goto LABEL_40;
          }
          unint64_t v17 = *(void *)(v40 + 8 * v18);
          if (!v17)
          {
            int64_t v18 = v11 + 4;
            if (v11 + 4 >= v41) {
              goto LABEL_40;
            }
            unint64_t v17 = *(void *)(v40 + 8 * v18);
            if (!v17)
            {
              int64_t v18 = v11 + 5;
              if (v11 + 5 >= v41) {
                goto LABEL_40;
              }
              unint64_t v17 = *(void *)(v40 + 8 * v18);
              if (!v17)
              {
                uint64_t v19 = v11 + 6;
                if (v11 + 6 >= v41) {
                  goto LABEL_40;
                }
                unint64_t v17 = *(void *)(v40 + 8 * v19);
                if (!v17)
                {
                  while (1)
                  {
                    int64_t v18 = v19 + 1;
                    if (__OFADD__(v19, 1)) {
                      goto LABEL_49;
                    }
                    if (v18 >= v41) {
                      goto LABEL_40;
                    }
                    unint64_t v17 = *(void *)(v40 + 8 * v18);
                    ++v19;
                    if (v17) {
                      goto LABEL_25;
                    }
                  }
                }
                int64_t v18 = v11 + 6;
              }
            }
          }
        }
      }
LABEL_25:
      unint64_t v7 = (v17 - 1) & v17;
      int64_t v47 = v18;
      unint64_t v15 = __clz(__rbit64(v17)) + (v18 << 6);
    }
    char v20 = *(unsigned char *)(*(void *)(v45 + 48) + v15);
    sub_251A0D51C(*(void *)(v45 + 56) + 32 * v15, v0 + 24);
    *(unsigned char *)(v0 + 16) = v20;
    long long v21 = *(_OWORD *)(v0 + 32);
    *(_OWORD *)v49 = *(_OWORD *)(v0 + 16);
    *(_OWORD *)(v0 + 72) = v21;
    *(void *)(v0 + 88) = *(void *)(v0 + 48);
    sub_251A1A568(0, (unint64_t *)&qword_26B21F180);
    unsigned __int8 v22 = *(unsigned char *)(v0 + 56);
    *(unsigned char *)(v0 + 176) = v22;
    sub_251A0D51C(v43, (uint64_t)v44);
    sub_251A0D578(v44, v46);
    unsigned __int8 v50 = v22;
    static HMService.convert(_:characteristicKind:)((uint64_t)v46, &v50, (uint64_t)v1);
    sub_251A1B064((uint64_t)v46, &qword_26B21E190);
    *(unsigned char *)(v0 + 136) = *(unsigned char *)(v0 + 56);
    sub_251A0D51C(v43, v42);
    if (*(void *)(v0 + 272))
    {
      sub_251A0D578(v1, v2);
    }
    else
    {
      sub_251A0D51C(v42, (uint64_t)v39);
      sub_251A0D578(v39, v2);
      sub_251A1B064((uint64_t)v1, &qword_26B21E190);
    }
    sub_251A1B064(v0 + 136, &qword_269B9C5F0);
    uint64_t v23 = *v49;
    v24 = v2;
    sub_251A0D51C((uint64_t)v2, (uint64_t)v48);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v51 = v12;
    unint64_t v26 = sub_2519FEF28(v23, (void (*)(uint64_t))CharacteristicKind.rawValue.getter, (uint64_t (*)(void))CharacteristicKind.rawValue.getter);
    uint64_t v27 = v12[2];
    BOOL v28 = (v9 & 1) == 0;
    uint64_t v8 = v27 + v28;
    if (__OFADD__(v27, v28))
    {
      __break(1u);
LABEL_47:
      __break(1u);
LABEL_48:
      __break(1u);
LABEL_49:
      __break(1u);
      return MEMORY[0x270FA2498](v8, v9, v10);
    }
    char v29 = v9;
    if (v12[3] < v8) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v2 = v24;
      if (v9) {
        goto LABEL_4;
      }
    }
    else
    {
      sub_251A13A5C(&qword_269B9CB48);
      uint64_t v12 = v51;
      uint64_t v2 = v24;
      if (v29)
      {
LABEL_4:
        v13 = (_OWORD *)(v12[7] + 32 * v26);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v13);
        sub_251A0D578(v48, v13);
        goto LABEL_5;
      }
    }
LABEL_36:
    v12[(v26 >> 6) + 8] |= 1 << v26;
    *(unsigned char *)(v12[6] + v26) = v23;
    uint64_t v8 = (uint64_t)sub_251A0D578(v48, (_OWORD *)(v12[7] + 32 * v26));
    uint64_t v32 = v12[2];
    BOOL v33 = __OFADD__(v32, 1);
    uint64_t v34 = v32 + 1;
    if (v33) {
      goto LABEL_47;
    }
    v12[2] = v34;
LABEL_5:
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v2);
    uint64_t v8 = sub_251A1B064((uint64_t)v49, &qword_269B9C5F0);
    uint64_t v1 = (_OWORD *)(v0 + 248);
    int64_t v11 = v47;
  }
  sub_251A014E8(v8, isUniquelyReferenced_nonNull_native);
  uint64_t v12 = v51;
  unint64_t v30 = sub_2519FEF28(v23, (void (*)(uint64_t))CharacteristicKind.rawValue.getter, (uint64_t (*)(void))CharacteristicKind.rawValue.getter);
  if ((v29 & 1) == (v31 & 1))
  {
    unint64_t v26 = v30;
    uint64_t v2 = v24;
    if (v29) {
      goto LABEL_4;
    }
    goto LABEL_36;
  }
  return sub_251F36BA0();
}

uint64_t sub_2519F701C()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_2519F70B4, 0, 0);
}

uint64_t sub_2519F70B4()
{
  *(void *)(v0 + 472) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_2519F7140, v2, v1);
}

uint64_t sub_2519F7140()
{
  swift_release();
  *(void *)(v0 + 480) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_2519F71B4, 0, 0);
}

uint64_t sub_2519F71B4()
{
  *(void *)(v0 + 488) = sub_251F34D50();
  *(void *)(v0 + 496) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_2519F724C, v2, v1);
}

uint64_t sub_2519F724C()
{
  uint64_t v1 = (void *)v0[61];
  uint64_t v2 = (void *)v0[60];
  swift_release();
  v0[63] = objc_msgSend(v2, sel_serviceFor_, v1);

  return MEMORY[0x270FA2498](sub_2519F72DC, 0, 0);
}

uint64_t sub_2519F72DC()
{
  uint64_t v1 = *(void **)(v0 + 504);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 408);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EBB0);
    uint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_251F38640;
    *(void *)(v3 + 32) = v1;
    uint64_t v16 = v3;
    sub_251F35AE0();
    *(void *)(v0 + 512) = v16;
    id v4 = v1;
    swift_bridgeObjectRetain();
    if ((v2 & 0x402) == 2)
    {
      uint64_t v5 = (void *)swift_task_alloc();
      *(void *)(v0 + 528) = v5;
      *uint64_t v5 = v0;
      v5[1] = sub_2519F76A4;
      uint64_t v6 = *(void *)(v0 + 448);
      uint64_t v7 = *(void *)(v0 + 384);
      return sub_251E1D578(v7, v16, v6);
    }
    else
    {
      long long v12 = *(_OWORD *)(v0 + 432);
      *(_OWORD *)(v0 + 344) = *(_OWORD *)(v0 + 416);
      *(_OWORD *)(v0 + 360) = v12;
      v13 = (void *)swift_task_alloc();
      *(void *)(v0 + 520) = v13;
      void *v13 = v0;
      v13[1] = sub_2519F7508;
      uint64_t v14 = *(void *)(v0 + 448);
      uint64_t v15 = *(void *)(v0 + 384);
      return sub_251E1E460(v15, v0 + 376, (_OWORD *)(v0 + 344), v16, v14);
    }
  }
  else
  {
    uint64_t v9 = *(void *)(v0 + 384);
    uint64_t v10 = type metadata accessor for StateSnapshot(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
    swift_bridgeObjectRelease();
    int64_t v11 = *(uint64_t (**)(void))(v0 + 8);
    return v11();
  }
}

uint64_t sub_2519F7508()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_2519F763C, 0, 0);
}

uint64_t sub_2519F763C()
{
  uint64_t v1 = *(void **)(v0 + 504);
  swift_bridgeObjectRelease();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_2519F76A4()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_2519F763C, 0, 0);
}

uint64_t sub_2519F77D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F240);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for StaticAccessory(0);
  MEMORY[0x270FA5388](v9);
  int64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 48))(a1, 1) == 1)
  {
    sub_251A1B064(a1, &qword_26B21F240);
    sub_251BB83B4(a2, (uint64_t)v8);
    uint64_t v13 = sub_251F34DA0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a2, v13);
    return sub_251A1B064((uint64_t)v8, &qword_26B21F240);
  }
  else
  {
    sub_251A1AF1C(a1, (uint64_t)v11, type metadata accessor for StaticAccessory);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_251A0C480((uint64_t)v11, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v18;
    swift_bridgeObjectRelease();
    uint64_t v16 = sub_251F34DA0();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(a2, v16);
  }
}

uint64_t sub_2519F79F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for StaticService();
  MEMORY[0x270FA5388](v9);
  int64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 48))(a1, 1) == 1)
  {
    sub_251A1B064(a1, qword_26B21EE20);
    sub_251BB8360(a2, (uint64_t)v8);
    uint64_t v13 = sub_251F34DA0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a2, v13);
    return sub_251A1B064((uint64_t)v8, qword_26B21EE20);
  }
  else
  {
    sub_251A1AF1C(a1, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticService);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_251A0BCF4((uint64_t)v11, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v18;
    swift_bridgeObjectRelease();
    uint64_t v16 = sub_251F34DA0();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(a2, v16);
  }
}

uint64_t sub_2519F7C18(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2203A0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for StateSnapshot(0);
  MEMORY[0x270FA5388](v9);
  int64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 48))(a1, 1) == 1)
  {
    sub_251A1B064(a1, &qword_26B2203A0);
    sub_251BB85F4(a2, (uint64_t)v8);
    uint64_t v13 = sub_251F34DA0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a2, v13);
    return sub_251A1B064((uint64_t)v8, &qword_26B2203A0);
  }
  else
  {
    sub_251A1AF1C(a1, (uint64_t)v11, type metadata accessor for StateSnapshot);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_251A0CAD0((uint64_t)v11, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v18;
    swift_bridgeObjectRelease();
    uint64_t v16 = sub_251F34DA0();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(a2, v16);
  }
}

uint64_t sub_2519F7E38(uint64_t a1, __int16 a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CB38);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for StaticEndpoint();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_251A1B064(a1, &qword_269B9CB38);
    unint64_t v13 = sub_2519FE5CC(a2);
    if (v14)
    {
      unint64_t v15 = v13;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v17 = *v3;
      uint64_t v21 = *v3;
      *uint64_t v3 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_251A15D74((uint64_t (*)(void))type metadata accessor for StaticEndpoint, &qword_269B9CB30, (uint64_t (*)(void))type metadata accessor for StaticEndpoint, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
        uint64_t v17 = v21;
      }
      sub_251A1AF1C(*(void *)(v17 + 56) + *(void *)(v10 + 72) * v15, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
      sub_251E3A4FC(v15, v17);
      *uint64_t v3 = v17;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    }
    return sub_251A1B064((uint64_t)v8, &qword_269B9CB38);
  }
  else
  {
    sub_251A1AF1C(a1, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
    char v18 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v21 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_251A0D1D0((uint64_t)v12, a2, v18);
    *uint64_t v3 = v21;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_2519F80DC(uint64_t a1, uint64_t a2)
{
  return sub_2519F84B8(a1, a2, (void (*)(_OWORD *, uint64_t, uint64_t))sub_251A0D3B4, (void (*)(_OWORD *__return_ptr, uint64_t))sub_251BB8648);
}

uint64_t sub_2519F8108(uint64_t a1, unsigned int a2)
{
  uint64_t v3 = v2;
  if (*(unsigned __int8 *)(a1 + 32) == 254)
  {
    sub_251A1B064(a1, &qword_269B9CA90);
    unint64_t v5 = sub_2519FE94C(a2);
    if (v6)
    {
      unint64_t v7 = v5;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v9 = *v2;
      uint64_t v12 = *v3;
      *uint64_t v3 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_251A13198();
        uint64_t v9 = v12;
      }
      sub_251A1A5BC(*(void *)(v9 + 56) + 40 * v7, (uint64_t)v14);
      sub_251E3A8C8(v7, v9);
      *uint64_t v3 = v9;
      swift_bridgeObjectRelease();
    }
    else
    {
      memset(v14, 0, sizeof(v14));
      char v15 = -2;
    }
    return sub_251A1B064((uint64_t)v14, &qword_269B9CA90);
  }
  else
  {
    sub_251A1A5BC(a1, (uint64_t)v14);
    char v10 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_251A0DB24((uint64_t)v14, a2, v10);
    *uint64_t v2 = v13;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_2519F822C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC90);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for StaticMatterDevice();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_251A1B064(a1, &qword_26B21EC90);
    unint64_t v13 = sub_2519FE588(a2);
    if (v14)
    {
      unint64_t v15 = v13;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v17 = *v3;
      uint64_t v21 = *v3;
      *uint64_t v3 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_251A133C8();
        uint64_t v17 = v21;
      }
      sub_251A1AF1C(*(void *)(v17 + 56) + *(void *)(v10 + 72) * v15, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
      sub_251E3AA84(v15, v17);
      *uint64_t v3 = v17;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    }
    return sub_251A1B064((uint64_t)v8, &qword_26B21EC90);
  }
  else
  {
    sub_251A1AF1C(a1, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
    char v18 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v21 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_251A0DC78((uint64_t)v12, a2, v18);
    *uint64_t v3 = v21;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_2519F848C(uint64_t a1, uint64_t a2)
{
  return sub_2519F84B8(a1, a2, (void (*)(_OWORD *, uint64_t, uint64_t))sub_251A0E0F8, (void (*)(_OWORD *__return_ptr, uint64_t))sub_251BB88CC);
}

uint64_t sub_2519F84B8(uint64_t a1, uint64_t a2, void (*a3)(_OWORD *, uint64_t, uint64_t), void (*a4)(_OWORD *__return_ptr, uint64_t))
{
  if (*(void *)(a1 + 24))
  {
    sub_251A0D578((_OWORD *)a1, v11);
    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v10 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    a3(v11, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v4 = v10;
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_251A1B064(a1, &qword_26B21E190);
    a4(v11, a2);
    return sub_251A1B064((uint64_t)v11, &qword_26B21E190);
  }
}

uint64_t sub_2519F8580(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  if (*(void *)(a1 + 24))
  {
    sub_251A0D578((_OWORD *)a1, v14);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v12 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_251A0E6AC(v14, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v12;
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_251A1B064(a1, &qword_26B21E190);
    unint64_t v7 = sub_2519FE8E0(a2);
    if (v8)
    {
      unint64_t v9 = v7;
      char v10 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v11 = *v2;
      uint64_t v13 = *v3;
      *uint64_t v3 = 0x8000000000000000;
      if ((v10 & 1) == 0)
      {
        sub_251A145E4();
        uint64_t v11 = v13;
      }
      sub_251A0D578((_OWORD *)(*(void *)(v11 + 56) + 32 * v9), v14);
      sub_251E3B318(v9, v11);
      *uint64_t v3 = v11;
      swift_bridgeObjectRelease();
    }
    else
    {
      memset(v14, 0, sizeof(v14));
    }
    return sub_251A1B064((uint64_t)v14, &qword_26B21E190);
  }
}

uint64_t sub_2519F8694(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E708);
  MEMORY[0x270FA5388](v6 - 8);
  char v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for StaticActionSet();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 48))(a1, 1) == 1)
  {
    sub_251A1B064(a1, &qword_26B21E708);
    sub_251BB8C9C(a2, (uint64_t)v8);
    uint64_t v13 = sub_251F34DA0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a2, v13);
    return sub_251A1B064((uint64_t)v8, &qword_26B21E708);
  }
  else
  {
    sub_251A1AF1C(a1, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_251A0EE68((uint64_t)v11, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v18;
    swift_bridgeObjectRelease();
    uint64_t v16 = sub_251F34DA0();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(a2, v16);
  }
}

uint64_t sub_2519F88B4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F108);
  MEMORY[0x270FA5388](v6 - 8);
  char v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for StaticCharacteristic();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 48))(a1, 1) == 1)
  {
    sub_251A1B064(a1, &qword_26B21F108);
    sub_251BB8CF0(a2, (uint64_t)v8);
    return sub_251A1B064((uint64_t)v8, &qword_26B21F108);
  }
  else
  {
    sub_251A1AF1C(a1, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v16 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_251A0F2D8((uint64_t)v11, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v16;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_2519F8A64(uint64_t a1, __int16 a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CA50);
  MEMORY[0x270FA5388](v6 - 8);
  char v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ActionEndpoint();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_251A1B064(a1, &qword_269B9CA50);
    unint64_t v13 = sub_2519FE5CC(a2);
    if (v14)
    {
      unint64_t v15 = v13;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v17 = *v3;
      uint64_t v21 = *v3;
      *uint64_t v3 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_251A15D74((uint64_t (*)(void))type metadata accessor for ActionEndpoint, &qword_269B9CA58, (uint64_t (*)(void))type metadata accessor for ActionEndpoint, (uint64_t (*)(void))type metadata accessor for ActionEndpoint);
        uint64_t v17 = v21;
      }
      sub_251A1AF1C(*(void *)(v17 + 56) + *(void *)(v10 + 72) * v15, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ActionEndpoint);
      sub_251E3C3D8(v15, v17);
      *uint64_t v3 = v17;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    }
    return sub_251A1B064((uint64_t)v8, &qword_269B9CA50);
  }
  else
  {
    sub_251A1AF1C(a1, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ActionEndpoint);
    char v18 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v21 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_251A0F878((uint64_t)v12, a2, v18);
    *uint64_t v3 = v21;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_2519F8D08(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C908);
  MEMORY[0x270FA5388](v6 - 8);
  char v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ScrubberElement(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 48))(a1, 1) == 1)
  {
    sub_251A1B064(a1, &qword_269B9C908);
    sub_251BB90B0(a2, (uint64_t)v8);
    uint64_t v13 = sub_251F34DA0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a2, v13);
    return sub_251A1B064((uint64_t)v8, &qword_269B9C908);
  }
  else
  {
    sub_251A1AF1C(a1, (uint64_t)v11, type metadata accessor for ScrubberElement);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_251A10380((uint64_t)v11, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v18;
    swift_bridgeObjectRelease();
    uint64_t v16 = sub_251F34DA0();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(a2, v16);
  }
}

uint64_t sub_2519F8F28(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C9A8);
  MEMORY[0x270FA5388](v6 - 8);
  char v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for StaticLightProfile();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 48))(a1, 1) == 1)
  {
    sub_251A1B064(a1, &qword_269B9C9A8);
    sub_251BB9104(a2, (uint64_t)v8);
    uint64_t v13 = sub_251F34DA0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a2, v13);
    return sub_251A1B064((uint64_t)v8, &qword_269B9C9A8);
  }
  else
  {
    sub_251A1AF1C(a1, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_251A10610((uint64_t)v11, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v18;
    swift_bridgeObjectRelease();
    uint64_t v16 = sub_251F34DA0();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(a2, v16);
  }
}

uint64_t sub_2519F9148(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C9E0);
  MEMORY[0x270FA5388](v6 - 8);
  char v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for IconTextValueStringDataHolder();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 48))(a1, 1) == 1)
  {
    sub_251A1B064(a1, &qword_269B9C9E0);
    sub_251BB9158(a2, (uint64_t)v8);
    sub_251A1ADEC(a2, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
    return sub_251A1B064((uint64_t)v8, &qword_269B9C9E0);
  }
  else
  {
    sub_251A1AF1C(a1, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v16 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_251A10B18((uint64_t)v11, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v16;
    swift_bridgeObjectRelease();
    return sub_251A1ADEC(a2, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
  }
}

uint64_t StaticService.set(_:for:options:context:)(uint64_t a1, uint64_t a2, unsigned char *a3, uint64_t *a4, _OWORD *a5)
{
  *(void *)(v6 + 128) = a1;
  *(void *)(v6 + 136) = a2;
  *(unsigned char *)(v6 + 208) = *a3;
  uint64_t v7 = *a4;
  *(void *)(v6 + 144) = v5;
  *(void *)(v6 + 152) = v7;
  long long v8 = a5[1];
  *(_OWORD *)(v6 + 160) = *a5;
  *(_OWORD *)(v6 + 176) = v8;
  return MEMORY[0x270FA2498](sub_2519F9368, 0, 0);
}

uint64_t sub_2519F9368()
{
  long long v11 = *(_OWORD *)(v0 + 160);
  long long v12 = *(_OWORD *)(v0 + 176);
  uint64_t v1 = *(void *)(v0 + 152);
  char v2 = *(unsigned char *)(v0 + 208);
  uint64_t v3 = *(void *)(v0 + 136);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C600);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_251F38650;
  *(unsigned char *)(inited + 32) = v2;
  sub_251A0D51C(v3, inited + 40);
  unint64_t v5 = sub_2519FA2DC(inited);
  *(void *)(v0 + 192) = v5;
  *(void *)(v0 + 120) = v1;
  *(_OWORD *)(v0 + 88) = v11;
  *(_OWORD *)(v0 + 104) = v12;
  uint64_t v6 = swift_task_alloc();
  *(void *)(v0 + 200) = v6;
  *(void *)uint64_t v6 = v0;
  *(void *)(v6 + 8) = sub_2519F94AC;
  uint64_t v7 = *(void *)(v0 + 144);
  uint64_t v8 = *(void *)(v0 + 120);
  *(void *)(v6 + 384) = *(void *)(v0 + 128);
  *(void *)(v6 + 392) = v5;
  *(void *)(v6 + 400) = v7;
  *(void *)(v6 + 408) = v8;
  long long v9 = *(_OWORD *)(v0 + 104);
  *(_OWORD *)(v6 + 416) = *(_OWORD *)(v0 + 88);
  *(_OWORD *)(v6 + 432) = v9;
  return MEMORY[0x270FA2498](sub_2519F6AD0, 0, 0);
}

uint64_t sub_2519F94AC()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

unint64_t sub_2519F95BC(uint64_t a1)
{
  return sub_2519FAA0C(a1, &qword_269B9CAE0, &qword_269B9CAE8);
}

unint64_t sub_2519F95D0(uint64_t a1)
{
  return sub_2519F983C(a1, &qword_26B21EB60, &qword_26B21FFB0, type metadata accessor for StateSnapshot, type metadata accessor for StateSnapshot);
}

unint64_t sub_2519F960C(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB70);
    char v2 = (void *)sub_251F36700();
  }
  else
  {
    char v2 = (void *)MEMORY[0x263F8EE80];
  }
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E6C8);
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    uint64_t v9 = *(int *)(v4 + 48);
    unint64_t v10 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v21[1] = a1;
    uint64_t v11 = a1 + v10;
    uint64_t v12 = *(void *)(v5 + 72);
    swift_retain();
    while (1)
    {
      sub_251A1B128(v11, (uint64_t)v7, &qword_26B21E6C8);
      unint64_t result = sub_2519FE994((uint64_t)v7);
      if (v14) {
        break;
      }
      unint64_t v15 = result;
      *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      uint64_t v16 = v2[6];
      uint64_t v17 = sub_251F34DA0();
      unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v16 + *(void *)(*(void *)(v17 - 8) + 72) * v15, v7, v17);
      *(void *)(v2[7] + 8 * v15) = *(void *)&v7[v9];
      uint64_t v18 = v2[2];
      BOOL v19 = __OFADD__(v18, 1);
      uint64_t v20 = v18 + 1;
      if (v19) {
        goto LABEL_12;
      }
      v2[2] = v20;
      v11 += v12;
      if (!--v8)
      {
        swift_release();
        goto LABEL_10;
      }
    }
    __break(1u);
LABEL_12:
    __break(1u);
  }
  else
  {
LABEL_10:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  return result;
}

unint64_t sub_2519F9800(uint64_t a1)
{
  return sub_2519F983C(a1, &qword_26B21E5C8, &qword_26B21FFC8, (uint64_t (*)(void))type metadata accessor for StaticActionSet, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
}

unint64_t sub_2519F983C(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  char v29 = a4;
  unint64_t v30 = a5;
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(a2);
    uint64_t v7 = (void *)sub_251F36700();
  }
  else
  {
    uint64_t v7 = (void *)MEMORY[0x263F8EE80];
  }
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(a1 + 16);
  if (v13)
  {
    uint64_t v14 = (uint64_t)&v12[*(int *)(v9 + 48)];
    unint64_t v15 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    v28[1] = a1;
    uint64_t v16 = a1 + v15;
    uint64_t v17 = *(void *)(v10 + 72);
    swift_retain();
    while (1)
    {
      sub_251A1B128(v16, (uint64_t)v12, a3);
      unint64_t result = sub_2519FE994((uint64_t)v12);
      if (v19) {
        break;
      }
      unint64_t v20 = result;
      *(void *)((char *)v7 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      uint64_t v21 = v7[6];
      uint64_t v22 = sub_251F34DA0();
      (*(void (**)(unint64_t, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v21 + *(void *)(*(void *)(v22 - 8) + 72) * v20, v12, v22);
      uint64_t v23 = v7[7];
      uint64_t v24 = v29(0);
      unint64_t result = sub_251A1AF1C(v14, v23 + *(void *)(*(void *)(v24 - 8) + 72) * v20, v30);
      uint64_t v25 = v7[2];
      BOOL v26 = __OFADD__(v25, 1);
      uint64_t v27 = v25 + 1;
      if (v26) {
        goto LABEL_12;
      }
      v7[2] = v27;
      v16 += v17;
      if (!--v13)
      {
        swift_release();
        goto LABEL_10;
      }
    }
    __break(1u);
LABEL_12:
    __break(1u);
  }
  else
  {
LABEL_10:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  return result;
}

unint64_t sub_2519F9A5C(uint64_t a1)
{
  return sub_2519FBF28(a1, &qword_269B9C910);
}

unint64_t sub_2519F9A68(uint64_t a1)
{
  return sub_2519F983C(a1, &qword_26B21F1C8, &qword_26B21FFC0, type metadata accessor for StaticAccessory, type metadata accessor for StaticAccessory);
}

unint64_t sub_2519F9AA4(uint64_t a1)
{
  return sub_2519F983C(a1, &qword_269B9C920, &qword_26B21FD38, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
}

unint64_t sub_2519F9AE0(uint64_t a1)
{
  return sub_2519F983C(a1, &qword_269B9C918, &qword_26B21FFD8, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
}

unint64_t sub_2519F9B1C(uint64_t a1)
{
  return sub_2519F983C(a1, &qword_26B21F1D0, &qword_26B21FFE0, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
}

unint64_t sub_2519F9B58(uint64_t a1)
{
  return sub_2519F983C(a1, &qword_269B9C900, &qword_26B21FFE8, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
}

unint64_t sub_2519F9B94(uint64_t a1)
{
  return sub_2519F983C(a1, &qword_26B21F1B8, &qword_26B21FFB8, (uint64_t (*)(void))type metadata accessor for StaticService, (uint64_t (*)(void))type metadata accessor for StaticService);
}

unint64_t sub_2519F9BD0(uint64_t a1)
{
  return sub_2519F983C(a1, &qword_269B9CAC8, &qword_26B21FFD0, type metadata accessor for StaticHH2Update, type metadata accessor for StaticHH2Update);
}

unint64_t sub_2519F9C0C(uint64_t a1)
{
  return sub_2519F983C(a1, &qword_269B9CAB8, &qword_26B21F2F0, (uint64_t (*)(void))type metadata accessor for StaticZone, (uint64_t (*)(void))type metadata accessor for StaticZone);
}

unint64_t sub_2519F9C48(uint64_t a1)
{
  return sub_2519F983C(a1, &qword_26B21EB58, &qword_26B21FFA0, type metadata accessor for StaticRoom, type metadata accessor for StaticRoom);
}

unint64_t sub_2519F9C84(uint64_t a1)
{
  return sub_2519F983C(a1, &qword_26B21ED88, &qword_26B21FFA8, (uint64_t (*)(void))type metadata accessor for StaticUser, (uint64_t (*)(void))type metadata accessor for StaticUser);
}

unint64_t sub_2519F9CC0(uint64_t a1)
{
  return sub_2519F983C(a1, &qword_26B21F1C0, &qword_26B21FD30, (uint64_t (*)(void))type metadata accessor for StaticResident, (uint64_t (*)(void))type metadata accessor for StaticResident);
}

unint64_t sub_2519F9CFC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    char v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CA20);
  char v2 = (void *)sub_251F36700();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (char *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 2);
    unint64_t v6 = *((void *)v4 - 1);
    char v7 = *v4;
    id v8 = *((id *)v4 - 3);
    sub_251A1A870(v5, v6, v7);
    unint64_t result = sub_2519FE68C((uint64_t)v8);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v2[6] + 8 * result) = v8;
    uint64_t v11 = v2[7] + 24 * result;
    *(void *)uint64_t v11 = v5;
    *(void *)(v11 + 8) = v6;
    *(unsigned char *)(v11 + 16) = v7;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v4 += 32;
    v2[2] = v14;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2519F9E38(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C938);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    char v7 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C940);
  uint64_t v6 = sub_251F36700();
  char v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_251A1B128(v12, (uint64_t)v5, &qword_269B9C938);
    unint64_t result = sub_2519FE810((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = type metadata accessor for BatchRequestError.ID();
    unint64_t result = sub_251A1AF1C((uint64_t)v5, v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, (uint64_t (*)(void))type metadata accessor for BatchRequestError.ID);
    *(void *)(v7[7] + 8 * v16) = *(void *)&v5[v9];
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2519FA028(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C930);
  uint64_t v2 = (void *)sub_251F36700();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (char *)(a1 + 64);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 3);
    uint64_t v6 = *((void *)v4 - 2);
    uint64_t v7 = *((void *)v4 - 1);
    char v8 = *v4;
    id v9 = *((id *)v4 - 4);
    sub_251A1A550(v5, v6, v7, v8);
    unint64_t result = sub_2519FE68C((uint64_t)v9);
    if (v11) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v2[6] + 8 * result) = v9;
    uint64_t v12 = v2[7] + 32 * result;
    *(void *)uint64_t v12 = v5;
    *(void *)(v12 + 8) = v6;
    *(void *)(v12 + 16) = v7;
    *(unsigned char *)(v12 + 24) = v8;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 40;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2519FA168(uint64_t a1)
{
  return sub_2519F983C(a1, &qword_269B9CA78, &qword_269B9CB10, (uint64_t (*)(void))type metadata accessor for StaticHome, (uint64_t (*)(void))type metadata accessor for StaticHome);
}

unint64_t sub_2519FA1A4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C9F0);
  uint64_t v2 = sub_251F36700();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_251A1B128(v6, (uint64_t)&v15, &qword_269B9CB18);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_2519FE798(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    char v11 = (uint64_t *)(v3[6] + 16 * result);
    *char v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_251A0D578(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2519FA2DC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CB48);
  uint64_t v2 = sub_251F36700();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_251A1B128(v6, (uint64_t)v13, &qword_269B9CB50);
    char v7 = v13[0];
    unint64_t result = sub_2519FEF28(v13[0], (void (*)(uint64_t))CharacteristicKind.rawValue.getter, (uint64_t (*)(void))CharacteristicKind.rawValue.getter);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(unsigned char *)(v3[6] + result) = v7;
    unint64_t result = (unint64_t)sub_251A0D578(&v14, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2519FA424(uint64_t a1)
{
  return sub_2519F983C(a1, &qword_269B9C948, &qword_26B21F2F8, (uint64_t (*)(void))type metadata accessor for StaticEndpoint, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
}

unint64_t sub_2519FA460(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C8D0);
  uint64_t v2 = (void *)sub_251F36700();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v5 = (uint64_t)*(v4 - 2);
    uint64_t v6 = (uint64_t)*(v4 - 1);
    char v7 = *v4;
    swift_bridgeObjectRetain();
    id v8 = v7;
    unint64_t result = sub_2519FE798(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    BOOL v11 = (uint64_t *)(v2[6] + 16 * result);
    *BOOL v11 = v5;
    v11[1] = v6;
    *(void *)(v2[7] + 8 * result) = v8;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2519FA57C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED10);
  uint64_t v2 = (void *)sub_251F36700();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = a1 + 40;
  while (1)
  {
    uint64_t v5 = *(void *)(v4 - 8);
    uint64_t v6 = *(void *)v4;
    uint64_t v7 = *(void *)(v4 + 8);
    long long v16 = *(_OWORD *)(v4 + 16);
    uint64_t v8 = *(void *)(v4 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_2519FE798(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    BOOL v11 = (uint64_t *)(v2[6] + 16 * result);
    *BOOL v11 = v5;
    v11[1] = v6;
    uint64_t v12 = v2[7] + 32 * result;
    *(void *)uint64_t v12 = v7;
    *(_OWORD *)(v12 + 8) = v16;
    *(void *)(v12 + 24) = v8;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v2[2] = v15;
    v4 += 48;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2519FA6D4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED18);
  uint64_t v2 = (void *)sub_251F36700();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_2519FE798(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v10 = (uint64_t *)(v2[6] + 16 * result);
    *char v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2519FA7F0(uint64_t a1)
{
  return sub_2519FAA0C(a1, &qword_269B9CAC0, &qword_26B21F040);
}

unint64_t sub_2519FA804(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C9B0);
    uint64_t v2 = (void *)sub_251F36700();
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
  }
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CB00);
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    uint64_t v9 = *(int *)(v4 + 48);
    unint64_t v10 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v21[1] = a1;
    uint64_t v11 = a1 + v10;
    uint64_t v12 = *(void *)(v5 + 72);
    swift_retain();
    while (1)
    {
      sub_251A1B128(v11, (uint64_t)v7, &qword_269B9CB00);
      unint64_t result = sub_2519FE994((uint64_t)v7);
      if (v14) {
        break;
      }
      unint64_t v15 = result;
      *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      uint64_t v16 = v2[6];
      uint64_t v17 = sub_251F34DA0();
      unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v16 + *(void *)(*(void *)(v17 - 8) + 72) * v15, v7, v17);
      *(unsigned char *)(v2[7] + v15) = v7[v9];
      uint64_t v18 = v2[2];
      BOOL v19 = __OFADD__(v18, 1);
      uint64_t v20 = v18 + 1;
      if (v19) {
        goto LABEL_12;
      }
      v2[2] = v20;
      v11 += v12;
      if (!--v8)
      {
        swift_release();
        goto LABEL_10;
      }
    }
    __break(1u);
LABEL_12:
    __break(1u);
  }
  else
  {
LABEL_10:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  return result;
}

unint64_t sub_2519FA9F8(uint64_t a1)
{
  return sub_2519FAA0C(a1, &qword_269B9CAF0, &qword_269B9CAF8);
}

unint64_t sub_2519FAA0C(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(a2);
    uint64_t v5 = (void *)sub_251F36700();
  }
  else
  {
    uint64_t v5 = (void *)MEMORY[0x263F8EE80];
  }
  __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v6 = MEMORY[0x270FA5388]();
  uint64_t v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a1 + 16);
  if (v10)
  {
    uint64_t v11 = *(int *)(v6 + 48);
    unint64_t v12 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v23[1] = a1;
    uint64_t v13 = a1 + v12;
    uint64_t v14 = *(void *)(v7 + 72);
    swift_retain();
    while (1)
    {
      sub_251A1B128(v13, (uint64_t)v9, a3);
      unint64_t result = sub_2519FE994((uint64_t)v9);
      if (v16) {
        break;
      }
      unint64_t v17 = result;
      *(void *)((char *)v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      uint64_t v18 = v5[6];
      uint64_t v19 = sub_251F34DA0();
      unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v18 + *(void *)(*(void *)(v19 - 8) + 72) * v17, v9, v19);
      *(void *)(v5[7] + 8 * v17) = *(void *)&v9[v11];
      uint64_t v20 = v5[2];
      BOOL v21 = __OFADD__(v20, 1);
      uint64_t v22 = v20 + 1;
      if (v21) {
        goto LABEL_12;
      }
      v5[2] = v22;
      v13 += v14;
      if (!--v10)
      {
        swift_release();
        goto LABEL_10;
      }
    }
    __break(1u);
LABEL_12:
    __break(1u);
  }
  else
  {
LABEL_10:
    swift_bridgeObjectRelease();
    return (unint64_t)v5;
  }
  return result;
}

unint64_t sub_2519FABF8(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C888);
    uint64_t v2 = (void *)sub_251F36700();
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
  }
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E6C0);
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    uint64_t v9 = &v7[*(int *)(v4 + 48)];
    unint64_t v10 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v23[1] = a1;
    uint64_t v11 = a1 + v10;
    uint64_t v12 = *(void *)(v5 + 72);
    swift_retain();
    while (1)
    {
      sub_251A1B128(v11, (uint64_t)v7, &qword_26B21E6C0);
      unint64_t result = sub_2519FE994((uint64_t)v7);
      if (v14) {
        break;
      }
      unint64_t v15 = result;
      *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      uint64_t v16 = v2[6];
      uint64_t v17 = sub_251F34DA0();
      unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v16 + *(void *)(*(void *)(v17 - 8) + 72) * v15, v7, v17);
      uint64_t v18 = (_OWORD *)(v2[7] + 32 * v15);
      long long v19 = *((_OWORD *)v9 + 1);
      *uint64_t v18 = *(_OWORD *)v9;
      v18[1] = v19;
      uint64_t v20 = v2[2];
      BOOL v21 = __OFADD__(v20, 1);
      uint64_t v22 = v20 + 1;
      if (v21) {
        goto LABEL_12;
      }
      v2[2] = v22;
      v11 += v12;
      if (!--v8)
      {
        swift_release();
        goto LABEL_10;
      }
    }
    __break(1u);
LABEL_12:
    __break(1u);
  }
  else
  {
LABEL_10:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  return result;
}

void *sub_2519FADF4(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C998);
    uint64_t v2 = (void *)sub_251F36700();
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
  }
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC40);
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    return v2;
  }
  uint64_t v9 = *(int *)(v4 + 48);
  unint64_t v10 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v24 = a1;
  uint64_t v27 = *(void *)(v5 + 72);
  swift_retain();
  sub_251A1B128(a1 + v10, (uint64_t)v7, &qword_26B21EC40);
  unint64_t v11 = sub_2519FE994((uint64_t)v7);
  if (v12)
  {
LABEL_10:
    __break(1u);
LABEL_11:
    swift_release();
    goto LABEL_12;
  }
  unint64_t v13 = v11;
  BOOL v26 = &v7[v9];
  uint64_t v25 = sub_251F34DA0();
  uint64_t v14 = *(void *)(v25 - 8);
  unint64_t v15 = *(void (**)(unint64_t, char *, uint64_t))(v14 + 32);
  uint64_t v16 = *(void *)(v14 + 72);
  uint64_t v17 = v24 + v27 + v10;
  while (1)
  {
    *(void *)((char *)v2 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v13;
    v15(v2[6] + v16 * v13, v7, v25);
    unint64_t result = memmove((void *)(v2[7] + (v13 << 7)), v26, 0x80uLL);
    uint64_t v19 = v2[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      break;
    }
    v2[2] = v21;
    if (!--v8) {
      goto LABEL_11;
    }
    uint64_t v22 = v17 + v27;
    sub_251A1B128(v17, (uint64_t)v7, &qword_26B21EC40);
    unint64_t v13 = sub_2519FE994((uint64_t)v7);
    uint64_t v17 = v22;
    if (v23) {
      goto LABEL_10;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_2519FB03C(uint64_t a1)
{
  return sub_2519FAA0C(a1, &qword_269B9C878, &qword_26B21EC48);
}

unint64_t sub_2519FB050(uint64_t a1)
{
  return sub_2519FAA0C(a1, &qword_269B9C868, &qword_26B21EC50);
}

unint64_t sub_2519FB064(uint64_t a1)
{
  return sub_2519FBB54(a1, &qword_26B21F1E0);
}

unint64_t sub_2519FB070(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FE88);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (void *)((char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E5D0);
  uint64_t v6 = sub_251F36700();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_251A1B128(v12, (uint64_t)v5, &qword_26B21FE88);
    unint64_t result = sub_2519FEAB8(v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0);
    unint64_t result = sub_251A1AF1C((uint64_t)v5, v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, type metadata accessor for PhoenixMetricsAggregator.IntervalKey);
    *(void *)(v7[7] + 8 * v16) = *(void *)((char *)v5 + v9);
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2519FB260(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F0D8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F1D8);
  uint64_t v6 = sub_251F36700();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = (uint64_t)&v5[*(int *)(v2 + 48)];
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v23[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_251A1B128(v12, (uint64_t)v5, &qword_26B21F0D8);
    char v14 = *v5;
    unint64_t result = sub_2519FEF28(*v5, (void (*)(uint64_t))CharacteristicKind.rawValue.getter, (uint64_t (*)(void))CharacteristicKind.rawValue.getter);
    if (v16) {
      break;
    }
    unint64_t v17 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(unsigned char *)(v7[6] + result) = v14;
    uint64_t v18 = v7[7];
    uint64_t v19 = type metadata accessor for StaticCharacteristic();
    unint64_t result = sub_251A1AF1C(v9, v18 + *(void *)(*(void *)(v19 - 8) + 72) * v17, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
    uint64_t v20 = v7[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_11;
    }
    v7[2] = v22;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2519FB470(uint64_t a1)
{
  return sub_2519FAA0C(a1, &qword_26B21EB78, &qword_26B21FFF8);
}

unint64_t sub_2519FB484(uint64_t a1)
{
  return sub_2519FAA0C(a1, &qword_26B21EB68, &qword_26B21FFF0);
}

unint64_t sub_2519FB498(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CA80);
    uint64_t v2 = (void *)sub_251F36700();
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
  }
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CA88);
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    uint64_t v9 = *(int *)(v4 + 48);
    unint64_t v10 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v21[1] = a1;
    uint64_t v11 = a1 + v10;
    uint64_t v12 = *(void *)(v5 + 72);
    swift_retain();
    while (1)
    {
      sub_251A1B128(v11, (uint64_t)v7, &qword_269B9CA88);
      unint64_t result = sub_2519FE994((uint64_t)v7);
      if (v14) {
        break;
      }
      unint64_t v15 = result;
      *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      uint64_t v16 = v2[6];
      uint64_t v17 = sub_251F34DA0();
      unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v16 + *(void *)(*(void *)(v17 - 8) + 72) * v15, v7, v17);
      *(unsigned char *)(v2[7] + v15) = v7[v9];
      uint64_t v18 = v2[2];
      BOOL v19 = __OFADD__(v18, 1);
      uint64_t v20 = v18 + 1;
      if (v19) {
        goto LABEL_12;
      }
      v2[2] = v20;
      v11 += v12;
      if (!--v8)
      {
        swift_release();
        goto LABEL_10;
      }
    }
    __break(1u);
LABEL_12:
    __break(1u);
  }
  else
  {
LABEL_10:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  return result;
}

unint64_t sub_2519FB68C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CA30);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CA28);
  uint64_t v6 = sub_251F36700();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_251A1B128(v12, (uint64_t)v5, &qword_269B9CA30);
    unint64_t result = sub_2519FED18((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = _s7MergeIdVMa();
    unint64_t result = sub_251A1AF1C((uint64_t)v5, v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, (uint64_t (*)(void))_s7MergeIdVMa);
    *(void *)(v7[7] + 8 * v16) = *(void *)&v5[v9];
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2519FB87C(uint64_t a1)
{
  return sub_2519FAA0C(a1, &qword_269B9C8F8, &qword_269B9CA08);
}

unint64_t sub_2519FB890(uint64_t a1)
{
  return sub_2519FAA0C(a1, &qword_269B9C8F0, &qword_269B9CA00);
}

unint64_t sub_2519FB8A4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C9E8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C9D8);
  uint64_t v6 = sub_251F36700();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = (uint64_t)&v5[*(int *)(v2 + 48)];
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v24[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_251A1B128(v12, (uint64_t)v5, &qword_269B9C9E8);
    unint64_t result = sub_2519FEFC8((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
    sub_251A1AF1C((uint64_t)v5, v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
    uint64_t v19 = v7[7];
    uint64_t v20 = type metadata accessor for IconTextValueStringDataHolder();
    unint64_t result = sub_251A1AF1C(v9, v19 + *(void *)(*(void *)(v20 - 8) + 72) * v16, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
    uint64_t v21 = v7[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      goto LABEL_11;
    }
    v7[2] = v23;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2519FBAD0(uint64_t a1)
{
  return sub_2519F983C(a1, &qword_269B9C9B8, &qword_269B9C9C0, (uint64_t (*)(void))type metadata accessor for ActionService, (uint64_t (*)(void))type metadata accessor for ActionService);
}

unint64_t sub_2519FBB0C(uint64_t a1)
{
  return sub_2519F983C(a1, &qword_269B9C9A0, &qword_26B21F030, (uint64_t (*)(void))type metadata accessor for StaticLightProfile, (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
}

unint64_t sub_2519FBB48(uint64_t a1)
{
  return sub_2519FBB54(a1, &qword_269B9C990);
}

unint64_t sub_2519FBB54(uint64_t a1, uint64_t *a2)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v3 = (void *)sub_251F36700();
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  uint64_t v5 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v6 = *(v5 - 2);
    uint64_t v7 = *(v5 - 1);
    uint64_t v8 = *v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_2519FE798(v6, v7);
    if (v10) {
      break;
    }
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    unint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *unint64_t v11 = v6;
    v11[1] = v7;
    *(void *)(v3[7] + 8 * result) = v8;
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2519FBC6C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C988);
  uint64_t v2 = (void *)sub_251F36700();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_2519FE798(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v10 = (uint64_t *)(v2[6] + 16 * result);
    *char v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2519FBD80(uint64_t a1)
{
  return sub_2519F983C(a1, &qword_269B9C8B8, &qword_269B9C8C0, type metadata accessor for ScrubberElement, type metadata accessor for ScrubberElement);
}

unint64_t sub_2519FBDBC(uint64_t a1)
{
  return sub_2519F983C(a1, &qword_269B9C8D8, &qword_26B21F038, (uint64_t (*)(void))type metadata accessor for StaticTelevisionProfile, (uint64_t (*)(void))type metadata accessor for StaticTelevisionProfile);
}

unint64_t sub_2519FBDF8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C8E0);
  uint64_t v2 = (void *)sub_251F36700();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_2519FE798(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v11 = v5;
    v11[1] = v6;
    BOOL v12 = (void *)(v2[7] + 16 * result);
    *BOOL v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2519FBF1C(uint64_t a1)
{
  return sub_2519FBF28(a1, &qword_269B9C8B0);
}

unint64_t sub_2519FBF28(uint64_t a1, uint64_t *a2)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v3 = (void *)sub_251F36700();
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  uint64_t v5 = (void *)(a1 + 40);
  while (1)
  {
    unsigned __int8 v6 = *((unsigned char *)v5 - 8);
    uint64_t v7 = *v5;
    swift_bridgeObjectRetain();
    unint64_t result = sub_2519FE754(v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v3[6] + result) = v6;
    *(void *)(v3[7] + 8 * result) = v7;
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v3[2] = v12;
    v5 += 2;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2519FC028(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C8A0);
  uint64_t v2 = sub_251F36700();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_251A1B128(v6, (uint64_t)v15, &qword_269B9C8A8);
    unint64_t result = sub_2519FEA74((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_251A0D578(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t StaticService.toggle(options:context:)(uint64_t a1, void *a2, _OWORD *a3)
{
  *(void *)(v4 + 760) = v3;
  *(void *)(v4 + 752) = a1;
  *(void *)(v4 + 768) = type metadata accessor for StaticService();
  *(void *)(v4 + 776) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F108);
  *(void *)(v4 + 784) = swift_task_alloc();
  *(void *)(v4 + 792) = *a2;
  long long v7 = a3[1];
  *(_OWORD *)(v4 + 800) = *a3;
  *(_OWORD *)(v4 + 816) = v7;
  return MEMORY[0x270FA2498](sub_2519FC254, 0, 0);
}

uint64_t sub_2519FC254()
{
  uint64_t v93 = v0;
  if (!StaticService.canBeToggled.getter())
  {
    if (qword_26B21F2C0 != -1) {
      swift_once();
    }
    uint64_t v15 = *(void *)(v0 + 776);
    uint64_t v16 = *(void *)(v0 + 760);
    uint64_t v17 = sub_251F350A0();
    __swift_project_value_buffer(v17, (uint64_t)qword_26B21F290);
    sub_251A1AEB4(v16, v15, (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t v18 = sub_251F35080();
    os_log_type_t v19 = sub_251F35FB0();
    BOOL v20 = os_log_type_enabled(v18, v19);
    uint64_t v21 = *(void *)(v0 + 776);
    if (v20)
    {
      uint64_t v22 = *(void *)(v0 + 768);
      uint64_t v23 = swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      uint64_t v91 = v24;
      *(_DWORD *)uint64_t v23 = 136315394;
      *(void *)(v0 + 744) = sub_251A00E84(0xD000000000000018, 0x8000000251F67D40, &v91);
      sub_251F361D0();
      *(_WORD *)(v23 + 12) = 2080;
      uint64_t v25 = (uint64_t *)(v21 + *(int *)(v22 + 20));
      uint64_t v26 = *v25;
      unint64_t v27 = v25[1];
      swift_bridgeObjectRetain();
      *(void *)(v0 + 728) = sub_251A00E84(v26, v27, &v91);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      sub_251A1ADEC(v21, (uint64_t (*)(void))type metadata accessor for StaticService);
      _os_log_impl(&dword_2519F3000, v18, v19, "%s Service '%s' is not toggleable.", (uint8_t *)v23, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v24, -1, -1);
      MEMORY[0x2533AC760](v23, -1, -1);
    }
    else
    {
      sub_251A1ADEC(*(void *)(v0 + 776), (uint64_t (*)(void))type metadata accessor for StaticService);
    }

    goto LABEL_15;
  }
  uint64_t v1 = *(void *)(v0 + 760);
  int v2 = *(unsigned __int8 *)(v1 + *(int *)(*(void *)(v0 + 768) + 88));
  LOBYTE(v91) = *(unsigned char *)(v1 + *(int *)(*(void *)(v0 + 768) + 88));
  ServiceKind.togglingCharacteristicKind.getter(&v92);
  unsigned __int8 v3 = v92;
  if (v92 == 174
    || (uint64_t v91 = *(void *)(*(void *)(v0 + 760) + *(int *)(*(void *)(v0 + 768) + 112)),
        char v4 = sub_251B457DC(&v92),
        v4 == 2))
  {
    switch(v2)
    {
      case 14:
      case 51:
      case 52:
        uint64_t v91 = *(void *)(*(void *)(v0 + 760) + *(int *)(*(void *)(v0 + 768) + 112));
        unsigned __int8 v92 = -98;
        Swift::Int_optional v95 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v92);
        if (v95.is_nil) {
          break;
        }
        uint64_t v5 = *(void *)(v0 + 824);
        uint64_t v6 = *(void *)(v0 + 816);
        long long v87 = *(_OWORD *)(v0 + 800);
        uint64_t v7 = *(void *)(v0 + 792);
        uint64_t v8 = 100;
        if (v95.value > 0) {
          uint64_t v8 = 0;
        }
        *(void *)(v0 + 688) = MEMORY[0x263F8D6C8];
        *(void *)(v0 + 664) = v8;
        __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C600);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_251F38650;
        *(unsigned char *)(inited + 32) = -98;
        sub_251A0D51C(v0 + 664, inited + 40);
        unint64_t v10 = sub_2519FA2DC(inited);
        *(void *)(v0 + 848) = v10;
        *(void *)(v0 + 704) = v7;
        *(_OWORD *)(v0 + 472) = v87;
        *(void *)(v0 + 488) = v6;
        *(void *)(v0 + 496) = v5;
        uint64_t v11 = swift_task_alloc();
        *(void *)(v0 + 856) = v11;
        *(void *)uint64_t v11 = v0;
        *(void *)(v11 + 8) = sub_2519FD070;
        uint64_t v12 = *(void *)(v0 + 760);
        uint64_t v13 = *(void *)(v0 + 752);
        *(void *)(v11 + 392) = v10;
        *(void *)(v11 + 400) = v12;
        *(void *)(v11 + 384) = v13;
        *(void *)(v11 + 408) = *(void *)(v0 + 704);
        *(_OWORD *)(v11 + 416) = *(_OWORD *)(v0 + 472);
        long long v14 = *(_OWORD *)(v0 + 488);
        goto LABEL_19;
      case 19:
        uint64_t v91 = *(void *)(*(void *)(v0 + 760) + *(int *)(*(void *)(v0 + 768) + 112));
        unsigned __int8 v92 = -107;
        Swift::Int_optional v96 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v92);
        if (v96.is_nil) {
          break;
        }
        uint64_t v39 = *(void *)(v0 + 824);
        uint64_t v40 = *(void *)(v0 + 816);
        long long v89 = *(_OWORD *)(v0 + 800);
        uint64_t v41 = *(void *)(v0 + 792);
        *(void *)(v0 + 560) = MEMORY[0x263F8D6C8];
        *(void *)(v0 + 536) = v96.value != 1;
        __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C600);
        uint64_t v42 = swift_initStackObject();
        *(_OWORD *)(v42 + 16) = xmmword_251F38650;
        *(unsigned char *)(v42 + 32) = -107;
        sub_251A0D51C(v0 + 536, v42 + 40);
        unint64_t v43 = sub_2519FA2DC(v42);
        *(void *)(v0 + 864) = v43;
        *(void *)(v0 + 696) = v41;
        *(_OWORD *)(v0 + 632) = v89;
        *(void *)(v0 + 648) = v40;
        *(void *)(v0 + 656) = v39;
        uint64_t v11 = swift_task_alloc();
        *(void *)(v0 + 872) = v11;
        *(void *)uint64_t v11 = v0;
        *(void *)(v11 + 8) = sub_2519FD1CC;
        uint64_t v44 = *(void *)(v0 + 760);
        uint64_t v45 = *(void *)(v0 + 752);
        *(void *)(v11 + 392) = v43;
        *(void *)(v11 + 400) = v44;
        *(void *)(v11 + 384) = v45;
        *(void *)(v11 + 408) = *(void *)(v0 + 696);
        *(_OWORD *)(v11 + 416) = *(_OWORD *)(v0 + 632);
        long long v14 = *(_OWORD *)(v0 + 648);
        goto LABEL_19;
      case 30:
        uint64_t v91 = *(void *)(*(void *)(v0 + 760) + *(int *)(*(void *)(v0 + 768) + 112));
        unsigned __int8 v92 = -100;
        Swift::Int_optional v97 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v92);
        if (v97.is_nil) {
          break;
        }
        uint64_t v46 = *(void *)(v0 + 824);
        uint64_t v47 = *(void *)(v0 + 816);
        long long v90 = *(_OWORD *)(v0 + 800);
        uint64_t v48 = *(void *)(v0 + 792);
        *(void *)(v0 + 432) = MEMORY[0x263F8D6C8];
        *(void *)(v0 + 408) = v97.value != 1;
        __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C600);
        uint64_t v49 = swift_initStackObject();
        *(_OWORD *)(v49 + 16) = xmmword_251F38650;
        *(unsigned char *)(v49 + 32) = -100;
        sub_251A0D51C(v0 + 408, v49 + 40);
        unint64_t v50 = sub_2519FA2DC(v49);
        *(void *)(v0 + 880) = v50;
        *(void *)(v0 + 712) = v48;
        *(_OWORD *)(v0 + 504) = v90;
        *(void *)(v0 + 520) = v47;
        *(void *)(v0 + 528) = v46;
        uint64_t v11 = swift_task_alloc();
        *(void *)(v0 + 888) = v11;
        *(void *)uint64_t v11 = v0;
        *(void *)(v11 + 8) = sub_2519FD328;
        uint64_t v51 = *(void *)(v0 + 760);
        uint64_t v52 = *(void *)(v0 + 752);
        *(void *)(v11 + 392) = v50;
        *(void *)(v11 + 400) = v51;
        *(void *)(v11 + 384) = v52;
        *(void *)(v11 + 408) = *(void *)(v0 + 712);
        *(_OWORD *)(v11 + 416) = *(_OWORD *)(v0 + 504);
        long long v14 = *(_OWORD *)(v0 + 520);
        goto LABEL_19;
      case 35:
        uint64_t v53 = *(void *)(*(void *)(v0 + 760) + *(int *)(*(void *)(v0 + 768) + 112));
        uint64_t v91 = v53;
        unsigned __int8 v92 = -96;
        Swift::Int_optional v98 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v92);
        if (v98.is_nil) {
          break;
        }
        if (!*(void *)(v53 + 16))
        {
          uint64_t v62 = *(void *)(v0 + 784);
          uint64_t v63 = type metadata accessor for StaticCharacteristic();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 56))(v62, 1, 1, v63);
LABEL_33:
          sub_251A1B064(*(void *)(v0 + 784), &qword_26B21F108);
          break;
        }
        Swift::Int value = v98.value;
        swift_bridgeObjectRetain();
        unint64_t v55 = sub_2519FEF28(160, (void (*)(uint64_t))CharacteristicKind.rawValue.getter, (uint64_t (*)(void))CharacteristicKind.rawValue.getter);
        uint64_t v56 = *(void *)(v0 + 784);
        if (v57)
        {
          unint64_t v58 = v55;
          uint64_t v59 = *(void *)(v53 + 56);
          uint64_t v60 = type metadata accessor for StaticCharacteristic();
          uint64_t v61 = *(void *)(v60 - 8);
          sub_251A1AEB4(v59 + *(void *)(v61 + 72) * v58, v56, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v61 + 56))(v56, 0, 1, v60);
        }
        else
        {
          uint64_t v60 = type metadata accessor for StaticCharacteristic();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v56, 1, 1, v60);
        }
        uint64_t v64 = *(void *)(v0 + 784);
        swift_bridgeObjectRelease();
        type metadata accessor for StaticCharacteristic();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 48))(v64, 1, v60) == 1) {
          goto LABEL_33;
        }
        uint64_t v65 = *(void *)(v0 + 784);
        v66 = (uint64_t *)(v65 + *(int *)(v60 + 44));
        uint64_t v67 = *v66;
        uint64_t v68 = v66[1];
        uint64_t v69 = v66[2];
        unint64_t v70 = v66[3];
        uint64_t v71 = v66[4];
        sub_251A11E3C(*v66, v68, v69, v70);
        sub_251A1ADEC(v65, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
        if (v70 >> 8 == 0xFFFFFFFF) {
          break;
        }
        if (!(v70 >> 62))
        {
          if (!v71)
          {
            if (v69 <= 1) {
              uint64_t v72 = 1;
            }
            else {
              uint64_t v72 = v69;
            }
            uint64_t v71 = sub_251A1815C(v68, v67, v72);
          }
          uint64_t v73 = *(void *)(v71 + 16);
          if (v73)
          {
            uint64_t v74 = *(void *)(v71 + 32);
            if (v74 != 3)
            {
LABEL_50:
              v77 = (_OWORD *)(v0 + 376);
              uint64_t v78 = *(void *)(v0 + 824);
              uint64_t v79 = *(void *)(v0 + 816);
              long long v86 = *(_OWORD *)(v0 + 800);
              uint64_t v80 = *(void *)(v0 + 792);
              swift_bridgeObjectRelease();
              uint64_t v81 = 3;
              if (value == 3) {
                uint64_t v81 = v74;
              }
              *(void *)(v0 + 624) = MEMORY[0x263F8D6C8];
              *(void *)(v0 + 600) = v81;
              __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C600);
              uint64_t v82 = swift_initStackObject();
              *(_OWORD *)(v82 + 16) = xmmword_251F38650;
              *(unsigned char *)(v82 + 32) = -96;
              sub_251A0D51C(v0 + 600, v82 + 40);
              unint64_t v83 = sub_2519FA2DC(v82);
              *(void *)(v0 + 896) = v83;
              *(void *)(v0 + 720) = v80;
              _OWORD *v77 = v86;
              *(void *)(v0 + 392) = v79;
              *(void *)(v0 + 400) = v78;
              v84 = (void *)swift_task_alloc();
              *(void *)(v0 + 904) = v84;
              void *v84 = v0;
              v84[1] = sub_2519FD484;
              uint64_t v85 = *(void *)(v0 + 752);
              return StaticService.set(for:options:context:)(v85, v83, (uint64_t *)(v0 + 720), v77);
            }
            if (v73 != 1)
            {
              uint64_t v75 = 5;
              do
              {
                uint64_t v76 = v75 - 3;
                if (__OFADD__(v75 - 4, 1))
                {
                  __break(1u);
                  JUMPOUT(0x2519FCE78);
                }
                uint64_t v74 = *(void *)(v71 + 8 * v75);
                if (v74 != 3) {
                  goto LABEL_50;
                }
                ++v75;
              }
              while (v76 != v73);
            }
          }
          swift_bridgeObjectRelease();
          break;
        }
        sub_251A11E60(v67, v68, v69, v70);
        break;
      default:
        break;
    }
LABEL_15:
    uint64_t v28 = *(void *)(v0 + 752);
    uint64_t v29 = type metadata accessor for StateSnapshot(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v28, 1, 1, v29);
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v30 = *(uint64_t (**)(void))(v0 + 8);
    return v30();
  }
  uint64_t v32 = *(void *)(v0 + 824);
  uint64_t v33 = *(void *)(v0 + 816);
  long long v88 = *(_OWORD *)(v0 + 800);
  uint64_t v34 = *(void *)(v0 + 792);
  *(void *)(v0 + 464) = MEMORY[0x263F8D4F8];
  *(unsigned char *)(v0 + 440) = (v4 & 1) == 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C600);
  uint64_t v35 = swift_initStackObject();
  *(_OWORD *)(v35 + 16) = xmmword_251F38650;
  *(unsigned char *)(v35 + 32) = v3;
  sub_251A0D51C(v0 + 440, v35 + 40);
  unint64_t v36 = sub_2519FA2DC(v35);
  *(void *)(v0 + 832) = v36;
  *(void *)(v0 + 736) = v34;
  *(_OWORD *)(v0 + 568) = v88;
  *(void *)(v0 + 584) = v33;
  *(void *)(v0 + 592) = v32;
  uint64_t v11 = swift_task_alloc();
  *(void *)(v0 + 840) = v11;
  *(void *)uint64_t v11 = v0;
  *(void *)(v11 + 8) = sub_2519FCF14;
  uint64_t v37 = *(void *)(v0 + 760);
  uint64_t v38 = *(void *)(v0 + 752);
  *(void *)(v11 + 392) = v36;
  *(void *)(v11 + 400) = v37;
  *(void *)(v11 + 384) = v38;
  *(void *)(v11 + 408) = *(void *)(v0 + 736);
  *(_OWORD *)(v11 + 416) = *(_OWORD *)(v0 + 568);
  long long v14 = *(_OWORD *)(v0 + 584);
LABEL_19:
  *(_OWORD *)(v11 + 432) = v14;
  return MEMORY[0x270FA2498](sub_2519F6AD0, 0, 0);
}

uint64_t sub_2519FCF14()
{
  uint64_t v1 = *v0 + 440;
  uint64_t v4 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  int v2 = *(uint64_t (**)(void))(v4 + 8);
  return v2();
}

uint64_t sub_2519FD070()
{
  uint64_t v1 = *v0 + 664;
  uint64_t v4 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  int v2 = *(uint64_t (**)(void))(v4 + 8);
  return v2();
}

uint64_t sub_2519FD1CC()
{
  uint64_t v1 = *v0 + 536;
  uint64_t v4 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  int v2 = *(uint64_t (**)(void))(v4 + 8);
  return v2();
}

uint64_t sub_2519FD328()
{
  uint64_t v1 = *v0 + 408;
  uint64_t v4 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  int v2 = *(uint64_t (**)(void))(v4 + 8);
  return v2();
}

uint64_t sub_2519FD484()
{
  uint64_t v1 = *v0 + 600;
  uint64_t v4 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  int v2 = *(uint64_t (**)(void))(v4 + 8);
  return v2();
}

uint64_t sub_2519FD5EC()
{
  return sub_251F36CB0();
}

id sub_2519FD61C()
{
  return *v0;
}

uint64_t sub_2519FD624@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_2519FD62C(uint64_t a1, uint64_t a2)
{
  return sub_2519FE45C(a1, a2, MEMORY[0x270FA9BA8]);
}

uint64_t sub_2519FD644(uint64_t a1, id *a2)
{
  uint64_t result = sub_251F356D0();
  *a2 = 0;
  return result;
}

uint64_t sub_2519FD6BC(uint64_t a1, id *a2)
{
  char v3 = sub_251F356E0();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_2519FD73C@<X0>(uint64_t *a1@<X8>)
{
  sub_251F356F0();
  uint64_t v2 = sub_251F356C0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

unsigned __int8 *sub_2519FD784@<X0>(unsigned __int8 *result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_2519FD794(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

void *sub_2519FD7A0@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_2519FD7B0(void *a1@<X8>)
{
  *a1 = *v1;
}

_DWORD *sub_2519FD7BC@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(unsigned char *)(a2 + 4) = 0;
  return result;
}

void sub_2519FD7CC(_DWORD *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_2519FD7D8()
{
  return sub_251F36D00();
}

uint64_t sub_2519FD820()
{
  return sub_251F36CE0();
}

uint64_t sub_2519FD84C()
{
  return sub_251F36D00();
}

uint64_t sub_2519FD890()
{
  return sub_251F36BE0();
}

uint64_t sub_2519FD8F0()
{
  return sub_251F36BD0();
}

uint64_t sub_2519FD954()
{
  return sub_251F349A0();
}

void *sub_2519FD9B4@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_2519FD9C4()
{
  return sub_251F36CC0();
}

_DWORD *sub_2519FD9F4@<X0>(_DWORD *result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_2519FDA00()
{
  return sub_251F36D00();
}

uint64_t sub_2519FDA48()
{
  return sub_251F36D00();
}

uint64_t sub_2519FDA8C()
{
  return sub_251F36D00();
}

uint64_t sub_2519FDAD4()
{
  return sub_251F36D00();
}

uint64_t sub_2519FDB18(uint64_t a1, uint64_t a2)
{
  return sub_2519FE45C(a1, a2, MEMORY[0x263F8D308]);
}

uint64_t sub_2519FDB38()
{
  return sub_251F356F0();
}

uint64_t sub_2519FDB5C()
{
  return sub_251F34A00();
}

uint64_t sub_2519FDBBC()
{
  return sub_251F349C0();
}

uint64_t sub_2519FDC1C(void *a1)
{
  sub_251A186A4(&qword_269B9C820, type metadata accessor for HMError);
  id v2 = a1;
  return sub_251F349B0();
}

uint64_t sub_2519FDCA0()
{
  id v1 = *v0;
  uint64_t v2 = sub_251F36140();

  return v2;
}

uint64_t sub_2519FDCD8()
{
  return sub_251F349F0();
}

uint64_t sub_2519FDD48()
{
  return sub_251F36D00();
}

BOOL sub_2519FDDAC(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

void sub_2519FDDC0(void *a1@<X8>)
{
  *a1 = 0;
}

void *sub_2519FDDC8@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_2519FDDDC@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

void *sub_2519FDDF0@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_2519FDE04(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void *sub_2519FDE34@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_2519FDE60@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v5 == 0;
  return result;
}

void *sub_2519FDE84(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_2519FDE98(void *result)
{
  *v1 &= *result;
  return result;
}

void *sub_2519FDEAC(void *result)
{
  *v1 ^= *result;
  return result;
}

void *sub_2519FDEC0@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_2519FDED4(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_2519FDEE8(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_2519FDEFC(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_2519FDF10()
{
  return *v0 == 0;
}

uint64_t sub_2519FDF20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x270F9E7D8](a1, a4, a2, a5, a3);
}

void *sub_2519FDF38(void *result)
{
  *v1 &= ~*result;
  return result;
}

BOOL sub_2519FDF4C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void sub_2519FDF60(_DWORD *a1@<X8>)
{
  *a1 = 0;
}

_DWORD *sub_2519FDF68@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

_DWORD *sub_2519FDF7C@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_2519FDF90(_DWORD *a1, int *a2)
{
  int v3 = *a2;
  int v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

_DWORD *sub_2519FDFC0@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  int v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(_DWORD *)a2 = v3;
  *(unsigned char *)(a2 + 4) = v3 == 0;
  return result;
}

int *sub_2519FDFEC@<X0>(int *result@<X0>, uint64_t a2@<X8>)
{
  int v3 = *result;
  int v4 = *v2;
  *v2 |= *result;
  int v5 = v4 & v3;
  *(_DWORD *)a2 = v5;
  *(unsigned char *)(a2 + 4) = v5 == 0;
  return result;
}

_DWORD *sub_2519FE010(_DWORD *result)
{
  *v1 |= *result;
  return result;
}

_DWORD *sub_2519FE024(_DWORD *result)
{
  *v1 ^= *result;
  return result;
}

_DWORD *sub_2519FE038@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_2519FE04C(_DWORD *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_2519FE060()
{
  return *v0 == 0;
}

_DWORD *sub_2519FE070(_DWORD *result)
{
  *v1 &= ~*result;
  return result;
}

_DWORD *sub_2519FE084@<X0>(_DWORD *result@<X0>, int *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

_DWORD *sub_2519FE098(_DWORD *result)
{
  *v1 &= *result;
  return result;
}

BOOL sub_2519FE0AC(_DWORD *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_2519FE0C0(_DWORD *a1)
{
  return (*a1 & ~*v1) == 0;
}

uint64_t sub_2519FE0D4()
{
  uint64_t v0 = sub_251F356F0();
  uint64_t v2 = v1;
  if (v0 == sub_251F356F0() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_251F36B10();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_2519FE160()
{
  return sub_251F349D0() & 1;
}

BOOL sub_2519FE1DC(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_2519FE1F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_251F356C0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_2519FE238@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_251F356F0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_2519FE264(uint64_t a1)
{
  uint64_t v2 = sub_251A186A4(&qword_269B9CBC8, type metadata accessor for URLResourceKey);
  uint64_t v3 = sub_251A186A4(&qword_269B9CBD0, type metadata accessor for URLResourceKey);
  uint64_t v4 = MEMORY[0x263F8D320];

  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_2519FE320(uint64_t a1)
{
  uint64_t v2 = sub_251A186A4(&qword_269B9CBD8, type metadata accessor for HMSignificantEvent);
  uint64_t v3 = sub_251A186A4(&qword_269B9CBE0, type metadata accessor for HMSignificantEvent);
  uint64_t v4 = MEMORY[0x263F8D320];

  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_2519FE3DC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_251A191D4(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t sub_2519FE41C@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  int v3 = sub_251A1920C(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t sub_2519FE45C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_251F356F0();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_2519FE4A0()
{
  sub_251F356F0();
  sub_251F357B0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2519FE4F4()
{
  sub_251F356F0();
  sub_251F36CA0();
  sub_251F357B0();
  uint64_t v0 = sub_251F36D00();
  swift_bridgeObjectRelease();
  return v0;
}

unint64_t sub_2519FE568(uint64_t a1)
{
  return sub_2519FEF28(a1, (void (*)(uint64_t))CharacteristicKind.rawValue.getter, (uint64_t (*)(void))CharacteristicKind.rawValue.getter);
}

unint64_t sub_2519FE588(uint64_t a1)
{
  uint64_t v2 = sub_251F36C90();

  return sub_2519FF138(a1, v2);
}

unint64_t sub_2519FE5CC(unsigned __int16 a1)
{
  uint64_t v3 = MEMORY[0x2533ABBC0](*(void *)(v1 + 40), a1, 2);

  return sub_2519FF1D4(a1, v3);
}

unint64_t sub_2519FE614(char a1)
{
  sub_251F36CA0();
  sub_251F36CE0();
  uint64_t v2 = sub_251F36D00();

  return sub_2519FF274(a1, v2);
}

unint64_t sub_2519FE68C(uint64_t a1)
{
  uint64_t v2 = sub_251F36110();

  return sub_2519FF328(a1, v2);
}

unint64_t sub_2519FE6D0(uint64_t a1)
{
  sub_251F36CA0();
  sub_251F36CE0();
  sub_251F36CE0();
  uint64_t v2 = sub_251F36D00();

  return sub_2519FF444(a1 & 0xFFFFFFFFFFLL, v2);
}

unint64_t sub_2519FE754(unsigned __int8 a1)
{
  uint64_t v2 = sub_251EAE504();

  return sub_2519FF4D8(a1, v2);
}

unint64_t sub_2519FE798(uint64_t a1, uint64_t a2)
{
  sub_251F36CA0();
  sub_251F357B0();
  uint64_t v4 = sub_251F36D00();

  return sub_2519FF750(a1, a2, v4);
}

unint64_t sub_2519FE810(uint64_t a1)
{
  sub_251F36CA0();
  sub_251F34DA0();
  sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
  sub_251F35610();
  type metadata accessor for BatchRequestError.ID();
  CharacteristicKind.rawValue.getter();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_251F36D00();

  return sub_2519FF834(a1, v2);
}

unint64_t sub_2519FE8E0(int a1)
{
  sub_251F36CA0();
  sub_251F36CE0();
  uint64_t v2 = sub_251F36D00();

  return sub_2519FFA48(a1, v2);
}

unint64_t sub_2519FE94C(unsigned int a1)
{
  uint64_t v3 = MEMORY[0x2533ABBC0](*(void *)(v1 + 40), a1, 4);

  return sub_2519FFA48(a1, v3);
}

unint64_t sub_2519FE994(uint64_t a1)
{
  sub_251F34DA0();
  sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
  uint64_t v2 = sub_251F35600();
  return sub_2519FFAE4(a1, v2);
}

unint64_t sub_2519FEA08(unsigned __int8 a1)
{
  sub_251F36CA0();
  sub_251AA9B28();
  uint64_t v2 = sub_251F36D00();

  return sub_2519FFC5C(a1, v2);
}

unint64_t sub_2519FEA74(uint64_t a1)
{
  uint64_t v2 = sub_251F36380();

  return sub_251A00058(a1, v2);
}

unint64_t sub_2519FEAB8(void *a1)
{
  sub_251F36CA0();
  sub_251F357B0();
  uint64_t v2 = (uint64_t)a1 + *(int *)(type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0) + 20);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1B128(v2, (uint64_t)v5, &qword_26B21FF90);
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
  if (v8 == 1)
  {
    sub_251F36CC0();
  }
  else
  {
    MEMORY[0x270FA5388](v8);
    unint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v5, v6);
    sub_251F36CC0();
    sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
    sub_251F35610();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  uint64_t v11 = sub_251F36D00();
  return sub_251A00120(a1, v11);
}

unint64_t sub_2519FECAC(unsigned __int8 a1)
{
  sub_251F36CA0();
  sub_251F36CB0();
  uint64_t v2 = sub_251F36D00();

  return sub_251A00610(a1, v2);
}

unint64_t sub_2519FED18(uint64_t a1)
{
  sub_251F36CA0();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1B128(a1, (uint64_t)v4, &qword_26B21FF90);
  uint64_t v5 = sub_251F34DA0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (v7 == 1)
  {
    sub_251F36CC0();
  }
  else
  {
    MEMORY[0x270FA5388](v7);
    uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v4, v5);
    sub_251F36CC0();
    sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
    sub_251F35610();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  _s7MergeIdVMa();
  sub_251F357B0();
  uint64_t v10 = sub_251F36D00();
  return sub_251A006B0(a1, v10);
}

unint64_t sub_2519FEF0C(uint64_t a1)
{
  return sub_2519FEF28(a1, (void (*)(uint64_t))ServiceKind.rawValue.getter, (uint64_t (*)(void))ServiceKind.rawValue.getter);
}

unint64_t sub_2519FEF28(uint64_t a1, void (*a2)(uint64_t), uint64_t (*a3)(void))
{
  uint64_t v6 = sub_251F36CA0();
  a2(v6);
  sub_251F357B0();
  swift_bridgeObjectRelease();
  uint64_t v7 = sub_251F36D00();
  return sub_251A00BAC(a1, v7, a3);
}

unint64_t sub_2519FEFC8(uint64_t a1)
{
  sub_251F36CA0();
  StaticAccessory.hash(into:)(v4);
  type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
  StaticService.hash(into:)(v4);
  StaticCharacteristic.hash(into:)((uint64_t)v4);
  uint64_t v2 = sub_251F36D00();

  return sub_251A00CD8(a1, v2);
}

unint64_t sub_2519FF064(uint64_t a1)
{
  sub_251F36CA0();
  sub_251F36CB0();
  uint64_t v2 = sub_251F36D00();

  return sub_2519FF138(a1, v2);
}

unint64_t sub_2519FF0D0(unsigned __int8 a1)
{
  sub_251F36CA0();
  sub_251F36CB0();
  uint64_t v2 = sub_251F36D00();
  return sub_251A00610(a1, v2);
}

unint64_t sub_2519FF138(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_2519FF1D4(unsigned __int16 a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(unsigned __int16 *)(v7 + 2 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(unsigned __int16 *)(v7 + 2 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_2519FF274(char a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    int v7 = dword_251F398A8[a1];
    uint64_t v8 = *(void *)(v2 + 48);
    if (dword_251F398A8[*(char *)(v8 + result)] != v7)
    {
      uint64_t v9 = ~v5;
      for (unint64_t result = (result + 1) & v9;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v9)
      {
        if (dword_251F398A8[*(char *)(v8 + result)] == v7) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_2519FF328(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    sub_251A1A568(0, (unint64_t *)&qword_26B21F170);
    id v6 = *(id *)(*(void *)(v2 + 48) + 8 * i);
    char v7 = sub_251F36120();

    if ((v7 & 1) == 0)
    {
      uint64_t v8 = ~v4;
      for (unint64_t i = (i + 1) & v8; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v8)
      {
        id v9 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v10 = sub_251F36120();

        if (v10) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_2519FF444(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v6 = ~v4;
    do
    {
      uint64_t v7 = *(void *)(v2 + 48) + 8 * result;
      if (*(_DWORD *)v7 == a1 && dword_251F398A8[*(char *)(v7 + 4)] == dword_251F398A8[a1 << 24 >> 56]) {
        break;
      }
      unint64_t result = (result + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_2519FF4D8(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0x8000000251F64710;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          uint64_t v8 = "13-AA62-01754F256DD5";
          goto LABEL_11;
        case 2:
          uint64_t v8 = "73-A058-C5E64BC487B2";
          goto LABEL_11;
        case 3:
          uint64_t v8 = "CE-986D-63B28F62C9E3";
          goto LABEL_11;
        case 4:
          uint64_t v8 = "60-AD68-D91053B75F44";
          goto LABEL_11;
        case 5:
          uint64_t v8 = "7E-BE63-1D00B1500545";
          goto LABEL_11;
        case 6:
          uint64_t v8 = "17-A590-755E1AAC02AE";
LABEL_11:
          unint64_t v7 = (unint64_t)v8 | 0x8000000000000000;
          break;
        case 7:
          unint64_t v7 = 0x8000000251F64860;
          break;
        default:
          break;
      }
      unint64_t v9 = 0x8000000251F64710;
      switch(v6)
      {
        case 1:
          char v10 = "13-AA62-01754F256DD5";
          goto LABEL_23;
        case 2:
          char v10 = "73-A058-C5E64BC487B2";
          goto LABEL_23;
        case 3:
          char v10 = "CE-986D-63B28F62C9E3";
          goto LABEL_23;
        case 4:
          char v10 = "60-AD68-D91053B75F44";
          goto LABEL_23;
        case 5:
          unint64_t v9 = 0x8000000251F64800;
          goto LABEL_20;
        case 6:
          char v10 = "17-A590-755E1AAC02AE";
LABEL_23:
          if (v7 != ((unint64_t)v10 | 0x8000000000000000)) {
            goto LABEL_24;
          }
          goto LABEL_28;
        case 7:
          if (v7 == 0x8000000251F64860) {
            goto LABEL_28;
          }
          goto LABEL_24;
        default:
LABEL_20:
          if (v7 == v9)
          {
LABEL_28:
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_24:
          char v11 = sub_251F36B10();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v11) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_2519FF750(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    char v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_251F36B10() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_251F36B10() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_2519FF834(uint64_t a1, uint64_t a2)
{
  uint64_t v20 = type metadata accessor for BatchRequestError.ID();
  MEMORY[0x270FA5388]();
  unint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v9 = a2 & ~v8;
  if (((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
    return v9;
  }
  uint64_t v10 = ~v8;
  uint64_t v11 = *(void *)(v5 + 72);
  while (1)
  {
    sub_251A1AEB4(*(void *)(v2 + 48) + v11 * v9, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for BatchRequestError.ID);
    if ((sub_251F34D70() & 1) == 0) {
      goto LABEL_4;
    }
    uint64_t v13 = *(int *)(v20 + 20);
    char v14 = v7[v13];
    LOBYTE(v13) = *(unsigned char *)(a1 + v13);
    char v22 = v14;
    char v21 = v13;
    unint64_t v15 = CharacteristicKind.rawValue.getter();
    uint64_t v17 = v16;
    if (v15 == CharacteristicKind.rawValue.getter() && v17 == v18) {
      break;
    }
    char v12 = sub_251F36B10();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v12) {
      goto LABEL_9;
    }
LABEL_4:
    sub_251A1ADEC((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for BatchRequestError.ID);
    unint64_t v9 = (v9 + 1) & v10;
    if (((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
      return v9;
    }
  }
  swift_bridgeObjectRelease_n();
LABEL_9:
  sub_251A1ADEC((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for BatchRequestError.ID);
  return v9;
}

unint64_t sub_2519FFA48(int a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(_DWORD *)(v7 + 4 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(_DWORD *)(v7 + 4 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_2519FFAE4(uint64_t a1, uint64_t a2)
{
  uint64_t v15 = a1;
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  uint64_t v14 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v13 = ~v3;
    uint64_t v5 = sub_251F34DA0();
    uint64_t v6 = *(void **)(v5 - 8);
    uint64_t v7 = (void (*)(char *, unint64_t, uint64_t))v6[2];
    uint64_t v8 = v6[8];
    uint64_t v9 = v6[9];
    uint64_t v10 = (void (**)(char *, uint64_t))(v6 + 1);
    do
    {
      MEMORY[0x270FA5388]();
      v7((char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), *(void *)(v16 + 48) + v9 * v4, v5);
      sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
      char v11 = sub_251F35650();
      (*v10)((char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
      if (v11) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v13;
    }
    while (((*(void *)(v14 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_2519FFC5C(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xEB00000000656D61;
      unint64_t v8 = 0x4E79616C70736944;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unint64_t v7 = 0xE600000000000000;
          unint64_t v8 = 0x44496D6F6F52;
          break;
        case 2:
          unint64_t v8 = 0x6E6564496E6F6349;
          unint64_t v7 = 0xEE00726569666974;
          break;
        case 3:
          unint64_t v7 = 0xE800000000000000;
          unint64_t v8 = 0x657469726F766146;
          break;
        case 4:
          unint64_t v8 = 0x61446E4F776F6853;
          unint64_t v7 = 0xEF6472616F626873;
          break;
        case 5:
          unint64_t v7 = 0x8000000251F66D10;
          unint64_t v8 = 0xD000000000000017;
          break;
        case 6:
          unint64_t v7 = 0xE800000000000000;
          unint64_t v8 = 0x657A6953656C6954;
          break;
        case 7:
          unint64_t v8 = 0x746169636F737341;
          unint64_t v7 = 0xEE00657079546465;
          break;
        case 8:
          unint64_t v8 = 0x496564756C636E49;
          unint64_t v7 = 0xEF7375746174536ELL;
          break;
        case 9:
          unint64_t v8 = 0x6564644165746144;
          unint64_t v7 = 0xE900000000000064;
          break;
        default:
          break;
      }
      unint64_t v9 = 0xEB00000000656D61;
      switch(v6)
      {
        case 1:
          unint64_t v9 = 0xE600000000000000;
          if (v8 == 0x44496D6F6F52) {
            goto LABEL_15;
          }
          goto LABEL_16;
        case 2:
          uint64_t v11 = 0x6E6564496E6F6349;
          uint64_t v12 = 0x726569666974;
          goto LABEL_31;
        case 3:
          unint64_t v9 = 0xE800000000000000;
          if (v8 != 0x657469726F766146) {
            goto LABEL_16;
          }
          goto LABEL_15;
        case 4:
          unint64_t v9 = 0xEF6472616F626873;
          if (v8 != 0x61446E4F776F6853) {
            goto LABEL_16;
          }
          goto LABEL_15;
        case 5:
          unint64_t v9 = 0x8000000251F66D10;
          if (v8 != 0xD000000000000017) {
            goto LABEL_16;
          }
          goto LABEL_15;
        case 6:
          unint64_t v9 = 0xE800000000000000;
          if (v8 != 0x657A6953656C6954) {
            goto LABEL_16;
          }
          goto LABEL_15;
        case 7:
          uint64_t v11 = 0x746169636F737341;
          uint64_t v12 = 0x657079546465;
LABEL_31:
          unint64_t v9 = v12 & 0xFFFFFFFFFFFFLL | 0xEE00000000000000;
          if (v8 != v11) {
            goto LABEL_16;
          }
          goto LABEL_15;
        case 8:
          unint64_t v9 = 0xEF7375746174536ELL;
          if (v8 != 0x496564756C636E49) {
            goto LABEL_16;
          }
          goto LABEL_15;
        case 9:
          unint64_t v9 = 0xE900000000000064;
          if (v8 != 0x6564644165746144) {
            goto LABEL_16;
          }
          goto LABEL_15;
        default:
          if (v8 != 0x4E79616C70736944) {
            goto LABEL_16;
          }
LABEL_15:
          if (v7 == v9)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_16:
          char v10 = sub_251F36B10();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v10) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_251A00058(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    do
    {
      sub_251A1A45C(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      char v7 = MEMORY[0x2533AB2D0](v9, a1);
      sub_251A1A624((uint64_t)v9);
      if (v7) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_251A00120(void *a1, uint64_t a2)
{
  uint64_t v39 = type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0);
  MEMORY[0x270FA5388](v39);
  char v7 = (void *)((char *)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = v2 + 64;
  uint64_t v42 = v2 + 64;
  uint64_t v43 = v2;
  uint64_t v9 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v10 = a2 & ~v9;
  if (((*(void *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
    return v10;
  }
  uint64_t v11 = *(void *)(v5 + 72);
  uint64_t v40 = ~v9;
  uint64_t v41 = v11;
  uint64_t v37 = a1;
  uint64_t v38 = (char *)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  while (1)
  {
    sub_251A1AEB4(*(void *)(v43 + 48) + v41 * v10, (uint64_t)v7, type metadata accessor for PhoenixMetricsAggregator.IntervalKey);
    BOOL v12 = *v7 == *a1 && v7[1] == a1[1];
    if (!v12 && (sub_251F36B10() & 1) == 0) {
      goto LABEL_5;
    }
    unint64_t v46 = v10;
    uint64_t v13 = *(int *)(v39 + 20);
    uint64_t v14 = (uint64_t)v7 + v13;
    uint64_t v15 = (uint64_t)a1 + v13;
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    uint64_t v45 = v36;
    uint64_t v17 = *(void *)(*(void *)(v16 - 8) + 64);
    MEMORY[0x270FA5388](v16 - 8);
    unint64_t v18 = (v17 + 15) & 0xFFFFFFFFFFFFFFF0;
    os_log_type_t v19 = (char *)v36 - v18;
    sub_251A1B128(v15, (uint64_t)v36 - v18, &qword_26B21FF90);
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E6B8);
    uint64_t v44 = v36;
    uint64_t v21 = MEMORY[0x270FA5388](v20 - 8);
    uint64_t v23 = (char *)v36 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v24 = (uint64_t)&v23[*(int *)(v21 + 56)];
    sub_251A1B128(v14, (uint64_t)v23, &qword_26B21FF90);
    sub_251A1B128((uint64_t)v36 - v18, v24, &qword_26B21FF90);
    uint64_t v25 = sub_251F34DA0();
    uint64_t v26 = *(void *)(v25 - 8);
    unint64_t v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
    uint64_t v28 = v27(v23, 1, v25);
    if (v28 == 1) {
      break;
    }
    v36[1] = v36;
    MEMORY[0x270FA5388](v28);
    uint64_t v29 = (char *)v36 - v18;
    sub_251A1B128((uint64_t)v23, (uint64_t)v36 - v18, &qword_26B21FF90);
    uint64_t v30 = v27((char *)v24, 1, v25);
    if (v30 == 1)
    {
      sub_251A1B064((uint64_t)v36 - v18, &qword_26B21FF90);
      (*(void (**)(char *, uint64_t))(v26 + 8))((char *)v36 - v18, v25);
      goto LABEL_4;
    }
    MEMORY[0x270FA5388](v30);
    uint64_t v32 = (char *)v36 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, uint64_t, uint64_t))(v26 + 32))(v32, v24, v25);
    sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
    char v33 = sub_251F35650();
    uint64_t v34 = *(void (**)(char *, uint64_t))(v26 + 8);
    v34(v32, v25);
    sub_251A1B064((uint64_t)v19, &qword_26B21FF90);
    v34(v29, v25);
    sub_251A1B064((uint64_t)v23, &qword_26B21FF90);
    unint64_t v10 = v46;
    a1 = v37;
    char v7 = v38;
    if (v33) {
      goto LABEL_18;
    }
LABEL_5:
    sub_251A1ADEC((uint64_t)v7, type metadata accessor for PhoenixMetricsAggregator.IntervalKey);
    unint64_t v10 = (v10 + 1) & v40;
    if (((*(void *)(v42 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
      return v10;
    }
  }
  sub_251A1B064((uint64_t)v36 - v18, &qword_26B21FF90);
  if (v27((char *)v24, 1, v25) != 1)
  {
LABEL_4:
    sub_251A1B064((uint64_t)v23, &qword_26B21E6B8);
    unint64_t v10 = v46;
    a1 = v37;
    char v7 = v38;
    goto LABEL_5;
  }
  sub_251A1B064((uint64_t)v23, &qword_26B21FF90);
  unint64_t v10 = v46;
  char v7 = v38;
LABEL_18:
  sub_251A1ADEC((uint64_t)v7, type metadata accessor for PhoenixMetricsAggregator.IntervalKey);
  return v10;
}

unint64_t sub_251A00610(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_251A006B0(uint64_t a1, uint64_t a2)
{
  uint64_t v47 = a1;
  uint64_t v40 = _s7MergeIdVMa();
  MEMORY[0x270FA5388](v40);
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v2 + 64;
  uint64_t v45 = v2 + 64;
  uint64_t v46 = v2;
  uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v9 = a2 & ~v8;
  if ((*(void *)(v7 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v42 = ~v8;
    uint64_t v43 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v44 = *(void *)(v4 + 72);
    unint64_t v10 = &qword_26B21FF90;
    do
    {
      uint64_t v11 = *(void *)(v46 + 48);
      unint64_t v50 = v9;
      sub_251A1AEB4(v11 + v44 * v9, (uint64_t)v6, (uint64_t (*)(void))_s7MergeIdVMa);
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(v10);
      uint64_t v49 = &v39;
      uint64_t v13 = *(void *)(*(void *)(v12 - 8) + 64);
      MEMORY[0x270FA5388](v12 - 8);
      unint64_t v14 = (v13 + 15) & 0xFFFFFFFFFFFFFFF0;
      uint64_t v15 = (char *)&v39 - v14;
      sub_251A1B128(v47, (uint64_t)&v39 - v14, v10);
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E6B8);
      uint64_t v48 = &v39;
      uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
      os_log_type_t v19 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v20 = (uint64_t)&v19[*(int *)(v17 + 56)];
      sub_251A1B128((uint64_t)v6, (uint64_t)v19, v10);
      sub_251A1B128((uint64_t)&v39 - v14, v20, v10);
      uint64_t v21 = sub_251F34DA0();
      uint64_t v22 = *(void *)(v21 - 8);
      uint64_t v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48);
      uint64_t v24 = v23(v19, 1, v21);
      if (v24 == 1)
      {
        sub_251A1B064((uint64_t)&v39 - v14, v10);
        int v25 = v23((char *)v20, 1, v21);
        uint64_t v6 = v43;
        if (v25 != 1) {
          goto LABEL_10;
        }
        sub_251A1B064((uint64_t)v19, v10);
        unint64_t v9 = v50;
      }
      else
      {
        uint64_t v41 = &v39;
        MEMORY[0x270FA5388](v24);
        uint64_t v26 = (char *)&v39 - v14;
        sub_251A1B128((uint64_t)v19, (uint64_t)&v39 - v14, v10);
        uint64_t v27 = v23((char *)v20, 1, v21);
        if (v27 == 1)
        {
          sub_251A1B064((uint64_t)&v39 - v14, v10);
          (*(void (**)(char *, uint64_t))(v22 + 8))((char *)&v39 - v14, v21);
          uint64_t v6 = v43;
LABEL_10:
          sub_251A1B064((uint64_t)v19, &qword_26B21E6B8);
          unint64_t v9 = v50;
          goto LABEL_4;
        }
        MEMORY[0x270FA5388](v27);
        uint64_t v29 = v10;
        uint64_t v30 = (char *)&v39 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, uint64_t, uint64_t))(v22 + 32))(v30, v20, v21);
        sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
        char v31 = sub_251F35650();
        uint64_t v32 = *(void (**)(char *, uint64_t))(v22 + 8);
        char v33 = v30;
        unint64_t v10 = v29;
        v32(v33, v21);
        sub_251A1B064((uint64_t)v15, v29);
        v32(v26, v21);
        sub_251A1B064((uint64_t)v19, v29);
        unint64_t v9 = v50;
        uint64_t v6 = v43;
        if ((v31 & 1) == 0) {
          goto LABEL_4;
        }
      }
      uint64_t v34 = *(int *)(v40 + 20);
      uint64_t v35 = *(void *)&v6[v34];
      uint64_t v36 = *(void *)&v6[v34 + 8];
      uint64_t v37 = (void *)(v47 + v34);
      if (v35 == *v37 && v36 == v37[1] || (sub_251F36B10() & 1) != 0)
      {
        sub_251A1ADEC((uint64_t)v6, (uint64_t (*)(void))_s7MergeIdVMa);
        return v9;
      }
LABEL_4:
      sub_251A1ADEC((uint64_t)v6, (uint64_t (*)(void))_s7MergeIdVMa);
      unint64_t v9 = (v9 + 1) & v42;
    }
    while (((*(void *)(v45 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  return v9;
}

unint64_t sub_251A00BAC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a2 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v8 = ~v5;
    while (1)
    {
      uint64_t v9 = a3();
      uint64_t v11 = v10;
      if (v9 == a3() && v11 == v12) {
        break;
      }
      char v14 = sub_251F36B10();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v14 & 1) == 0)
      {
        unint64_t v6 = (v6 + 1) & v8;
        if ((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6)) {
          continue;
        }
      }
      return v6;
    }
    swift_bridgeObjectRelease_n();
  }
  return v6;
}

unint64_t sub_251A00CD8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v10 = a2 & ~v9;
  if ((*(void *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = ~v9;
    uint64_t v12 = *(void *)(v6 + 72);
    while (1)
    {
      sub_251A1AEB4(*(void *)(v2 + 48) + v12 * v10, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
      if ((_s13HomeDataModel15StaticAccessoryV2eeoiySbAC_ACtFZ_0((uint64_t)v8, a1) & 1) != 0
        && (_s13HomeDataModel13StaticServiceV2eeoiySbAC_ACtFZ_0((uint64_t)&v8[*(int *)(v5 + 20)], a1 + *(int *)(v5 + 20)) & 1) != 0
        && _s13HomeDataModel20StaticCharacteristicV2eeoiySbAC_ACtFZ_0((uint64_t)&v8[*(int *)(v5 + 24)], a1 + *(int *)(v5 + 24)))
      {
        break;
      }
      sub_251A1ADEC((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
      unint64_t v10 = (v10 + 1) & v11;
      if (((*(void *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        return v10;
      }
    }
    sub_251A1ADEC((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
  }
  return v10;
}

uint64_t sub_251A00E84(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_251A00F58(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_251A0D51C((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_251A0D51C((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  return v7;
}

uint64_t sub_251A00F58(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_251F361E0();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_251A01114(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_251F364C0();
  if (!v8)
  {
    sub_251F36670();
    __break(1u);
LABEL_17:
    uint64_t result = sub_251F36710();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_251A01114(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_251A011AC(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_251A0138C(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_251A0138C(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_251A011AC(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_251A01324(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_251F36410();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_251F36670();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_251F35820();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    sub_251F36710();
    __break(1u);
LABEL_14:
    uint64_t result = sub_251F36670();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

void *sub_251A01324(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E8);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_251A0138C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E8);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251A014DC(uint64_t a1, int a2)
{
  return sub_251A05F00(a1, a2, &qword_269B9CAE0);
}

uint64_t sub_251A014E8(uint64_t a1, char a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CB48);
  uint64_t v6 = sub_251F366F0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v32 = v2;
  uint64_t v33 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v11) {
      break;
    }
    os_log_type_t v19 = (void *)(v5 + 64);
    unint64_t v20 = *(void *)(v33 + 8 * v18);
    ++v14;
    if (!v20)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v11) {
        goto LABEL_34;
      }
      unint64_t v20 = *(void *)(v33 + 8 * v14);
      if (!v20)
      {
        int64_t v21 = v18 + 2;
        if (v21 >= v11)
        {
LABEL_34:
          swift_release();
          unint64_t v3 = v32;
          if ((a2 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v20 = *(void *)(v33 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            int64_t v14 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_43;
            }
            if (v14 >= v11) {
              goto LABEL_34;
            }
            unint64_t v20 = *(void *)(v33 + 8 * v14);
            ++v21;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v21;
      }
    }
LABEL_21:
    unint64_t v10 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_22:
    char v22 = *(unsigned char *)(*(void *)(v5 + 48) + v17);
    uint64_t v23 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v17);
    if (a2) {
      sub_251A0D578(v23, v34);
    }
    else {
      sub_251A0D51C((uint64_t)v23, (uint64_t)v34);
    }
    sub_251F36CA0();
    CharacteristicKind.rawValue.getter();
    sub_251F357B0();
    swift_bridgeObjectRelease();
    uint64_t result = sub_251F36D00();
    uint64_t v24 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v25 = result & ~v24;
    unint64_t v26 = v25 >> 6;
    if (((-1 << v25) & ~*(void *)(v12 + 8 * (v25 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v25) & ~*(void *)(v12 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v29 = v26 == v28;
        if (v26 == v28) {
          unint64_t v26 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v12 + 8 * v26);
      }
      while (v30 == -1);
      unint64_t v15 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(unsigned char *)(*(void *)(v7 + 48) + v15) = v22;
    uint64_t result = (uint64_t)sub_251A0D578(v34, (_OWORD *)(*(void *)(v7 + 56) + 32 * v15));
    ++*(void *)(v7 + 16);
  }
  swift_release();
  unint64_t v3 = v32;
  os_log_type_t v19 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
  if (v31 >= 64) {
    bzero(v19, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *os_log_type_t v19 = -1 << v31;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *unint64_t v3 = v7;
  return result;
}

uint64_t sub_251A017F8(uint64_t a1, int a2)
{
  return sub_251A01888(a1, a2, (uint64_t (*)(void))type metadata accessor for StaticActionSet, &qword_26B21E5C8, (uint64_t (*)(void))type metadata accessor for StaticActionSet, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
}

uint64_t sub_251A01840(uint64_t a1, int a2)
{
  return sub_251A01888(a1, a2, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile, &qword_269B9C920, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
}

uint64_t sub_251A01888(uint64_t a1, int a2, uint64_t (*a3)(void), uint64_t *a4, uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  uint64_t v51 = a6;
  unint64_t v55 = a5;
  uint64_t v8 = v6;
  uint64_t v10 = a3(0);
  uint64_t v53 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v57 = (uint64_t)&v48 - v11;
  uint64_t v12 = *v6;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  int v54 = a2;
  uint64_t v13 = sub_251F366F0();
  uint64_t v14 = v13;
  if (!*(void *)(v12 + 16)) {
    goto LABEL_41;
  }
  uint64_t v15 = 1 << *(unsigned char *)(v12 + 32);
  uint64_t v16 = *(void *)(v12 + 64);
  unint64_t v50 = (void *)(v12 + 64);
  if (v15 < 64) {
    uint64_t v17 = ~(-1 << v15);
  }
  else {
    uint64_t v17 = -1;
  }
  unint64_t v18 = v17 & v16;
  uint64_t v48 = v6;
  int64_t v49 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v19 = v13 + 64;
  uint64_t result = swift_retain();
  int64_t v21 = 0;
  for (i = v12; ; uint64_t v12 = i)
  {
    if (v18)
    {
      unint64_t v23 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v24 = v23 | (v21 << 6);
      goto LABEL_22;
    }
    int64_t v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v49) {
      break;
    }
    unint64_t v26 = v50;
    unint64_t v27 = v50[v25];
    ++v21;
    if (!v27)
    {
      int64_t v21 = v25 + 1;
      if (v25 + 1 >= v49) {
        goto LABEL_34;
      }
      unint64_t v27 = v50[v21];
      if (!v27)
      {
        int64_t v28 = v25 + 2;
        if (v28 >= v49)
        {
LABEL_34:
          swift_release();
          uint64_t v8 = v48;
          if ((v54 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v27 = v50[v28];
        if (!v27)
        {
          while (1)
          {
            int64_t v21 = v28 + 1;
            if (__OFADD__(v28, 1)) {
              goto LABEL_43;
            }
            if (v21 >= v49) {
              goto LABEL_34;
            }
            unint64_t v27 = v50[v21];
            ++v28;
            if (v27) {
              goto LABEL_21;
            }
          }
        }
        int64_t v21 = v28;
      }
    }
LABEL_21:
    unint64_t v18 = (v27 - 1) & v27;
    unint64_t v24 = __clz(__rbit64(v27)) + (v21 << 6);
LABEL_22:
    uint64_t v29 = sub_251F34DA0();
    uint64_t v30 = *(void *)(v29 - 8);
    MEMORY[0x270FA5388](v29);
    uint64_t v32 = (char *)&v48 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v34 = *(void *)(v33 + 72);
    unint64_t v35 = *(void *)(v12 + 48) + v34 * v24;
    uint64_t v56 = v36;
    if (v54)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v30 + 32))((char *)&v48 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0), v35, v29);
      uint64_t v37 = *(void *)(v12 + 56);
      uint64_t v38 = *(void *)(v53 + 72);
      sub_251A1AF1C(v37 + v38 * v24, v57, v55);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v30 + 16))((char *)&v48 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0), v35, v29);
      uint64_t v39 = *(void *)(v12 + 56);
      uint64_t v38 = *(void *)(v53 + 72);
      sub_251A1AEB4(v39 + v38 * v24, v57, v51);
    }
    sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
    uint64_t result = sub_251F35600();
    uint64_t v40 = -1 << *(unsigned char *)(v14 + 32);
    unint64_t v41 = result & ~v40;
    unint64_t v42 = v41 >> 6;
    if (((-1 << v41) & ~*(void *)(v19 + 8 * (v41 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v41) & ~*(void *)(v19 + 8 * (v41 >> 6)))) | v41 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v43 = 0;
      unint64_t v44 = (unint64_t)(63 - v40) >> 6;
      do
      {
        if (++v42 == v44 && (v43 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v45 = v42 == v44;
        if (v42 == v44) {
          unint64_t v42 = 0;
        }
        v43 |= v45;
        uint64_t v46 = *(void *)(v19 + 8 * v42);
      }
      while (v46 == -1);
      unint64_t v22 = __clz(__rbit64(~v46)) + (v42 << 6);
    }
    *(void *)(v19 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    (*(void (**)(unint64_t, char *, uint64_t))(v30 + 32))(*(void *)(v14 + 48) + v34 * v22, v32, v29);
    uint64_t result = sub_251A1AF1C(v57, *(void *)(v14 + 56) + v38 * v22, v55);
    ++*(void *)(v14 + 16);
  }
  swift_release();
  uint64_t v8 = v48;
  unint64_t v26 = v50;
  if ((v54 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v47 = 1 << *(unsigned char *)(v12 + 32);
  if (v47 >= 64) {
    bzero(v26, ((unint64_t)(v47 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v26 = -1 << v47;
  }
  *(void *)(v12 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v8 = v14;
  return result;
}

uint64_t sub_251A01D40(uint64_t a1, int a2)
{
  return sub_251A01888(a1, a2, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup, &qword_269B9C900, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
}

uint64_t sub_251A01D88(uint64_t a1, int a2)
{
  return sub_251A01888(a1, a2, type metadata accessor for StaticRoom, &qword_26B21EB58, type metadata accessor for StaticRoom, type metadata accessor for StaticRoom);
}

uint64_t sub_251A01DD0(uint64_t a1, int a2)
{
  return sub_251A01888(a1, a2, (uint64_t (*)(void))type metadata accessor for StaticService, &qword_26B21F1B8, (uint64_t (*)(void))type metadata accessor for StaticService, (uint64_t (*)(void))type metadata accessor for StaticService);
}

uint64_t sub_251A01E18(uint64_t a1, int a2)
{
  return sub_251A01888(a1, a2, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem, &qword_269B9C918, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
}

uint64_t sub_251A01E60(uint64_t a1, int a2)
{
  return sub_251A01888(a1, a2, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile, &qword_26B21F1D0, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
}

uint64_t sub_251A01EA8(uint64_t a1, int a2)
{
  return sub_251A01888(a1, a2, type metadata accessor for StaticAccessory, &qword_26B21F1C8, type metadata accessor for StaticAccessory, type metadata accessor for StaticAccessory);
}

uint64_t sub_251A01EF0(uint64_t a1, int a2)
{
  return sub_251A01888(a1, a2, (uint64_t (*)(void))type metadata accessor for StaticUser, &qword_26B21ED88, (uint64_t (*)(void))type metadata accessor for StaticUser, (uint64_t (*)(void))type metadata accessor for StaticUser);
}

uint64_t sub_251A01F38(uint64_t a1, int a2)
{
  return sub_251A01888(a1, a2, (uint64_t (*)(void))type metadata accessor for StaticZone, &qword_269B9CAB8, (uint64_t (*)(void))type metadata accessor for StaticZone, (uint64_t (*)(void))type metadata accessor for StaticZone);
}

uint64_t sub_251A01F80(uint64_t a1, int a2)
{
  return sub_251A01888(a1, a2, (uint64_t (*)(void))type metadata accessor for StaticResident, &qword_26B21F1C0, (uint64_t (*)(void))type metadata accessor for StaticResident, (uint64_t (*)(void))type metadata accessor for StaticResident);
}

uint64_t sub_251A01FC8(uint64_t a1, int a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB70);
  int v44 = a2;
  uint64_t v6 = sub_251F366F0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v9 = *(void *)(v5 + 64);
  char v43 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v10 = ~(-1 << v8);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & v9;
  unint64_t v41 = v2;
  int64_t v42 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v16 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      int64_t v45 = v14;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v42) {
      break;
    }
    uint64_t v19 = v43;
    unint64_t v20 = v43[v18];
    int64_t v21 = v14 + 1;
    if (!v20)
    {
      int64_t v21 = v14 + 2;
      if (v14 + 2 >= v42) {
        goto LABEL_34;
      }
      unint64_t v20 = v43[v21];
      if (!v20)
      {
        uint64_t v22 = v14 + 3;
        if (v14 + 3 >= v42)
        {
LABEL_34:
          swift_release();
          unint64_t v3 = v41;
          if ((v44 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v20 = v43[v22];
        if (!v20)
        {
          while (1)
          {
            int64_t v21 = v22 + 1;
            if (__OFADD__(v22, 1)) {
              goto LABEL_43;
            }
            if (v21 >= v42) {
              goto LABEL_34;
            }
            unint64_t v20 = v43[v21];
            ++v22;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v21 = v14 + 3;
      }
    }
LABEL_21:
    unint64_t v11 = (v20 - 1) & v20;
    int64_t v45 = v21;
    unint64_t v17 = __clz(__rbit64(v20)) + (v21 << 6);
LABEL_22:
    uint64_t v23 = sub_251F34DA0();
    uint64_t v24 = *(void *)(v23 - 8);
    MEMORY[0x270FA5388](v23);
    unint64_t v26 = (char *)&v41 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v28 = *(void *)(v27 + 72);
    unint64_t v29 = *(void *)(v5 + 48) + v28 * v17;
    uint64_t v46 = v30;
    if (v44) {
      (*(void (**)(char *, unint64_t, uint64_t))(v24 + 32))((char *)&v41 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), v29, v23);
    }
    else {
      (*(void (**)(char *, unint64_t, uint64_t))(v24 + 16))((char *)&v41 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), v29, v23);
    }
    uint64_t v31 = v5;
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v17);
    sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
    uint64_t result = sub_251F35600();
    uint64_t v33 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v34 = result & ~v33;
    unint64_t v35 = v34 >> 6;
    if (((-1 << v34) & ~*(void *)(v12 + 8 * (v34 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v34) & ~*(void *)(v12 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v36 = 0;
      unint64_t v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v38 = v35 == v37;
        if (v35 == v37) {
          unint64_t v35 = 0;
        }
        v36 |= v38;
        uint64_t v39 = *(void *)(v12 + 8 * v35);
      }
      while (v39 == -1);
      unint64_t v15 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v24 + 32))(*(void *)(v7 + 48) + v28 * v15, v26, v23);
    *(void *)(*(void *)(v7 + 56) + 8 * v15) = v32;
    ++*(void *)(v7 + 16);
    int64_t v14 = v45;
    uint64_t v5 = v31;
  }
  swift_release();
  unint64_t v3 = v41;
  uint64_t v19 = v43;
  if ((v44 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v40 = 1 << *(unsigned char *)(v5 + 32);
  if (v40 >= 64) {
    bzero(v19, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v19 = -1 << v40;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *unint64_t v3 = v7;
  return result;
}

uint64_t sub_251A023CC(uint64_t a1, char a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C930);
  char v39 = a2;
  uint64_t v6 = sub_251F366F0();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    char v36 = v2;
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    BOOL v38 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v37 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v19 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v20 = v19 | (v13 << 6);
      }
      else
      {
        int64_t v21 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v21 >= v37) {
          goto LABEL_33;
        }
        unint64_t v22 = v38[v21];
        ++v13;
        if (!v22)
        {
          int64_t v13 = v21 + 1;
          if (v21 + 1 >= v37) {
            goto LABEL_33;
          }
          unint64_t v22 = v38[v13];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v37)
            {
LABEL_33:
              swift_release();
              unint64_t v3 = v36;
              if (v39)
              {
                uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
                if (v35 >= 64) {
                  bzero(v38, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *BOOL v38 = -1 << v35;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v22 = v38[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v13 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v37) {
                  goto LABEL_33;
                }
                unint64_t v22 = v38[v13];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v23;
          }
        }
LABEL_30:
        unint64_t v10 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v13 << 6);
      }
      uint64_t v28 = *(void **)(*(void *)(v5 + 48) + 8 * v20);
      uint64_t v29 = *(void *)(v5 + 56) + 32 * v20;
      uint64_t v30 = *(void *)v29;
      uint64_t v31 = *(void *)(v29 + 8);
      uint64_t v32 = *(void *)(v29 + 16);
      char v33 = *(unsigned char *)(v29 + 24);
      if ((v39 & 1) == 0)
      {
        id v34 = v28;
        sub_251A1A550(v30, v31, v32, v33);
      }
      uint64_t result = sub_251F36110();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v26 = v16 == v25;
          if (v16 == v25) {
            unint64_t v16 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v11 + 8 * v16);
        }
        while (v27 == -1);
        unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(void *)(*(void *)(v7 + 48) + 8 * v17) = v28;
      uint64_t v18 = *(void *)(v7 + 56) + 32 * v17;
      *(void *)uint64_t v18 = v30;
      *(void *)(v18 + 8) = v31;
      *(void *)(v18 + 16) = v32;
      *(unsigned char *)(v18 + 24) = v33;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *unint64_t v3 = v7;
  return result;
}

uint64_t sub_251A026CC(uint64_t a1, int a2)
{
  return sub_251A01888(a1, a2, (uint64_t (*)(void))type metadata accessor for StaticHome, &qword_269B9CA78, (uint64_t (*)(void))type metadata accessor for StaticHome, (uint64_t (*)(void))type metadata accessor for StaticHome);
}

uint64_t sub_251A02714(uint64_t a1, char a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CA48);
  uint64_t result = sub_251F366F0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v30 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v12 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v16 = v15 | (v8 << 6);
        unint64_t v17 = v16 << 8;
        if (a2) {
          goto LABEL_10;
        }
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v19 >= v12) {
          goto LABEL_33;
        }
        unint64_t v20 = v30[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v12) {
            goto LABEL_33;
          }
          unint64_t v20 = v30[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v12)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                unint64_t v3 = v2;
                goto LABEL_40;
              }
              uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
              if (v29 >= 64) {
                bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v30 = -1 << v29;
              }
              unint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v30[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v12) {
                  goto LABEL_33;
                }
                unint64_t v20 = v30[v8];
                ++v21;
                if (v20) {
                  goto LABEL_22;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_22:
        unint64_t v11 = (v20 - 1) & v20;
        unint64_t v16 = __clz(__rbit64(v20)) + (v8 << 6);
        unint64_t v17 = v16 << 8;
        if (a2)
        {
LABEL_10:
          char v18 = *(unsigned char *)(*(void *)(v5 + 48) + v16);
          sub_251A1A930(*(void *)(v5 + 56) + v17, (uint64_t)v31);
          goto LABEL_24;
        }
      }
      char v18 = *(unsigned char *)(*(void *)(v5 + 48) + v16);
      sub_251A1A930(*(void *)(v5 + 56) + v17, (uint64_t)v31);
      sub_251A1AF84((uint64_t)v31);
LABEL_24:
      sub_251A1A930((uint64_t)v31, (uint64_t)v32);
      sub_251F36CA0();
      sub_251F36CE0();
      uint64_t result = sub_251F36D00();
      uint64_t v22 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v13 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v23) & ~*(void *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v13 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v14 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(unsigned char *)(*(void *)(v7 + 48) + v14) = v18;
      uint64_t result = sub_251A1A930((uint64_t)v32, *(void *)(v7 + 56) + (v14 << 8));
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *unint64_t v3 = v7;
  return result;
}

uint64_t sub_251A02A24(uint64_t a1, int a2)
{
  return sub_251A08BB4(a1, a2, (uint64_t (*)(void))type metadata accessor for StaticEndpoint, &qword_269B9CB30, (uint64_t (*)(void))type metadata accessor for StaticEndpoint, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
}

uint64_t sub_251A02A6C(uint64_t a1, char a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C8D0);
  char v38 = a2;
  uint64_t v6 = sub_251F366F0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v35 = v2;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36) {
      break;
    }
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v37 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          unint64_t v3 = v35;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v36) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v37 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void **)(*(void *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v33 = v32;
    }
    sub_251F36CA0();
    sub_251F357B0();
    uint64_t result = sub_251F36D00();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    char v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *char v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  unint64_t v3 = v35;
  uint64_t v22 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v22 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *unint64_t v3 = v7;
  return result;
}

uint64_t sub_251A02D7C(uint64_t a1, char a2)
{
  return sub_251A0A594(a1, a2, &qword_269B9C860);
}

uint64_t sub_251A02D88(uint64_t a1, char a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C858);
  char v38 = a2;
  uint64_t v6 = sub_251F366F0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  int64_t v36 = v2;
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v11) {
      break;
    }
    int64_t v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v37 + 8 * v23);
    ++v14;
    if (!v25)
    {
      int64_t v14 = v23 + 1;
      if (v23 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v37 + 8 * v14);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v11)
        {
LABEL_33:
          swift_release();
          unint64_t v3 = v36;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v37 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v14 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v37 + 8 * v14);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v14 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    uint64_t v32 = (uint64_t *)(*(void *)(v5 + 48) + v31);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    long long v39 = *(_OWORD *)(*(void *)(v5 + 56) + v31);
    if ((v38 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_251F36CA0();
    sub_251F357B0();
    uint64_t result = sub_251F36D00();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v17 == v28;
        if (v17 == v28) {
          unint64_t v17 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v12 + 8 * v17);
      }
      while (v30 == -1);
      unint64_t v18 = __clz(__rbit64(~v30)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = 16 * v18;
    unint64_t v20 = (void *)(*(void *)(v7 + 48) + v19);
    *unint64_t v20 = v34;
    v20[1] = v33;
    *(_OWORD *)(*(void *)(v7 + 56) + v19) = v39;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  unint64_t v3 = v36;
  int64_t v24 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v24, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v24 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *unint64_t v3 = v7;
  return result;
}

uint64_t sub_251A03098(uint64_t a1, char a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C958);
  uint64_t result = sub_251F366F0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v33 = (uint64_t *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v30 = -1 << v9;
    uint64_t v31 = v9;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v32 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v20 >= v32) {
          goto LABEL_33;
        }
        unint64_t v21 = v33[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v32) {
            goto LABEL_33;
          }
          unint64_t v21 = v33[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v32)
            {
LABEL_33:
              if (a2)
              {
                if (v31 >= 64) {
                  bzero(v33, 8 * v32);
                }
                else {
                  *uint64_t v33 = v30;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v21 = v33[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_41;
                }
                if (v8 >= v32) {
                  goto LABEL_33;
                }
                unint64_t v21 = v33[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      uint64_t v27 = *(void *)(*(void *)(v5 + 48) + 8 * v19);
      uint64_t v28 = *(void *)(v5 + 56) + 24 * v19;
      uint64_t v29 = *(void *)v28;
      long long v34 = *(_OWORD *)(v28 + 8);
      if ((a2 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      uint64_t result = sub_251F36C90();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v25 = v15 == v24;
          if (v15 == v24) {
            unint64_t v15 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        unint64_t v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(void *)(*(void *)(v7 + 48) + 8 * v16) = v27;
      uint64_t v17 = *(void *)(v7 + 56) + 24 * v16;
      *(void *)uint64_t v17 = v29;
      *(_OWORD *)(v17 + 8) = v34;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *unint64_t v3 = v7;
  return result;
}

uint64_t sub_251A0337C(uint64_t a1, char a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C978);
  uint64_t result = sub_251F366F0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v30 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v29 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v19 >= v29) {
          goto LABEL_33;
        }
        unint64_t v20 = v30[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v29) {
            goto LABEL_33;
          }
          unint64_t v20 = v30[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v29)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                unint64_t v3 = v2;
                goto LABEL_40;
              }
              uint64_t v28 = 1 << *(unsigned char *)(v5 + 32);
              if (v28 >= 64) {
                bzero(v30, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v30 = -1 << v28;
              }
              unint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v30[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v29) {
                  goto LABEL_33;
                }
                unint64_t v20 = v30[v8];
                ++v21;
                if (v20) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_30:
        unint64_t v11 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      char v26 = *(unsigned char *)(*(void *)(v5 + 48) + v18);
      uint64_t v27 = *(void *)(*(void *)(v5 + 56) + 8 * v18);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_251F36CA0();
      sub_251F36CE0();
      uint64_t result = sub_251F36D00();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v24 = v15 == v23;
          if (v15 == v23) {
            unint64_t v15 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v12 + 8 * v15);
        }
        while (v25 == -1);
        unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(unsigned char *)(*(void *)(v7 + 48) + v16) = v26;
      *(void *)(*(void *)(v7 + 56) + 8 * v16) = v27;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *unint64_t v3 = v7;
  return result;
}

uint64_t sub_251A03658(uint64_t a1, char a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C968);
  uint64_t result = sub_251F366F0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v30 = v3;
    uint64_t v31 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v12 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v16 = v15 | (v8 << 6);
      }
      else
      {
        int64_t v17 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v17 >= v12) {
          goto LABEL_34;
        }
        unint64_t v18 = v31[v17];
        ++v8;
        if (!v18)
        {
          int64_t v8 = v17 + 1;
          if (v17 + 1 >= v12) {
            goto LABEL_34;
          }
          unint64_t v18 = v31[v8];
          if (!v18)
          {
            int64_t v19 = v17 + 2;
            if (v19 >= v12)
            {
LABEL_34:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                unint64_t v3 = v30;
                goto LABEL_41;
              }
              uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
              if (v29 >= 64) {
                bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v31 = -1 << v29;
              }
              unint64_t v3 = v30;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v18 = v31[v19];
            if (!v18)
            {
              while (1)
              {
                int64_t v8 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_43;
                }
                if (v8 >= v12) {
                  goto LABEL_34;
                }
                unint64_t v18 = v31[v8];
                ++v19;
                if (v18) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v19;
          }
        }
LABEL_21:
        unint64_t v11 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v8 << 6);
      }
      uint64_t v20 = *(unsigned int *)(*(void *)(v5 + 48) + 4 * v16);
      uint64_t v21 = *(void *)(v5 + 56) + 40 * v16;
      if (a2) {
        sub_251A1A5BC(v21, (uint64_t)v32);
      }
      else {
        sub_251A1B128(v21, (uint64_t)v32, &qword_269B9C970);
      }
      uint64_t result = MEMORY[0x2533ABBC0](*(void *)(v7 + 40), v20, 4);
      uint64_t v22 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v13 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v23) & ~*(void *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v13 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v14 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_DWORD *)(*(void *)(v7 + 48) + 4 * v14) = v20;
      uint64_t result = sub_251A1A5BC((uint64_t)v32, *(void *)(v7 + 56) + 40 * v14);
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_41:
  *unint64_t v3 = v7;
  return result;
}

uint64_t sub_251A0392C(uint64_t a1, char a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C980);
  uint64_t result = sub_251F366F0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v30 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v29 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v19 >= v29) {
          goto LABEL_33;
        }
        unint64_t v20 = v30[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v29) {
            goto LABEL_33;
          }
          unint64_t v20 = v30[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v29)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                unint64_t v3 = v2;
                goto LABEL_40;
              }
              uint64_t v28 = 1 << *(unsigned char *)(v5 + 32);
              if (v28 >= 64) {
                bzero(v30, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v30 = -1 << v28;
              }
              unint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v30[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v29) {
                  goto LABEL_33;
                }
                unint64_t v20 = v30[v8];
                ++v21;
                if (v20) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_30:
        unint64_t v11 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      char v26 = *(unsigned char *)(*(void *)(v5 + 48) + v18);
      uint64_t v27 = *(void *)(*(void *)(v5 + 56) + 8 * v18);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_251F36CA0();
      sub_251F36CE0();
      uint64_t result = sub_251F36D00();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v24 = v15 == v23;
          if (v15 == v23) {
            unint64_t v15 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v12 + 8 * v15);
        }
        while (v25 == -1);
        unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(unsigned char *)(*(void *)(v7 + 48) + v16) = v26;
      *(void *)(*(void *)(v7 + 56) + 8 * v16) = v27;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *unint64_t v3 = v7;
  return result;
}

uint64_t sub_251A03C08(uint64_t a1, int a2)
{
  return sub_251A01888(a1, a2, (uint64_t (*)(void))type metadata accessor for StaticEndpoint, &qword_269B9C948, (uint64_t (*)(void))type metadata accessor for StaticEndpoint, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
}

uint64_t sub_251A03C50(uint64_t a1, char a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for StaticMatterDevice();
  uint64_t v38 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C950);
  char v9 = a2;
  uint64_t result = sub_251F366F0();
  uint64_t v11 = result;
  if (*(void *)(v8 + 16))
  {
    uint64_t v35 = v3;
    int64_t v12 = 0;
    uint64_t v13 = *(void *)(v8 + 64);
    uint64_t v37 = (void *)(v8 + 64);
    uint64_t v14 = 1 << *(unsigned char *)(v8 + 32);
    if (v14 < 64) {
      uint64_t v15 = ~(-1 << v14);
    }
    else {
      uint64_t v15 = -1;
    }
    unint64_t v16 = v15 & v13;
    int64_t v36 = (unint64_t)(v14 + 63) >> 6;
    uint64_t v17 = result + 64;
    while (1)
    {
      if (v16)
      {
        unint64_t v19 = __clz(__rbit64(v16));
        v16 &= v16 - 1;
        unint64_t v20 = v19 | (v12 << 6);
      }
      else
      {
        int64_t v21 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v37;
        if (v21 >= v36) {
          goto LABEL_34;
        }
        unint64_t v22 = v37[v21];
        ++v12;
        if (!v22)
        {
          int64_t v12 = v21 + 1;
          if (v21 + 1 >= v36) {
            goto LABEL_34;
          }
          unint64_t v22 = v37[v12];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v36)
            {
LABEL_34:
              if ((v9 & 1) == 0)
              {
                uint64_t result = swift_release();
                unint64_t v3 = v35;
                goto LABEL_41;
              }
              uint64_t v34 = 1 << *(unsigned char *)(v8 + 32);
              if (v34 >= 64) {
                bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v37 = -1 << v34;
              }
              unint64_t v3 = v35;
              *(void *)(v8 + 16) = 0;
              break;
            }
            unint64_t v22 = v37[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v12 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_43;
                }
                if (v12 >= v36) {
                  goto LABEL_34;
                }
                unint64_t v22 = v37[v12];
                ++v23;
                if (v22) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v12 = v23;
          }
        }
LABEL_21:
        unint64_t v16 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v12 << 6);
      }
      uint64_t v24 = *(void *)(*(void *)(v8 + 48) + 8 * v20);
      uint64_t v25 = *(void *)(v38 + 72);
      uint64_t v26 = *(void *)(v8 + 56) + v25 * v20;
      if (v9) {
        sub_251A1AF1C(v26, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
      }
      else {
        sub_251A1AEB4(v26, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
      }
      uint64_t result = sub_251F36C90();
      uint64_t v27 = -1 << *(unsigned char *)(v11 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v17 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v28) & ~*(void *)(v17 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v17 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v18 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v17 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(void *)(*(void *)(v11 + 48) + 8 * v18) = v24;
      uint64_t result = sub_251A1AF1C((uint64_t)v7, *(void *)(v11 + 56) + v25 * v18, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
      ++*(void *)(v11 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_41:
  *unint64_t v3 = v11;
  return result;
}

uint64_t sub_251A03FDC(uint64_t a1, char a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED18);
  char v36 = a2;
  uint64_t v6 = sub_251F366F0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    unint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_251F36CA0();
    sub_251F357B0();
    uint64_t result = sub_251F36D00();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  unint64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *unint64_t v3 = v7;
  return result;
}

uint64_t sub_251A042F4(uint64_t a1, char a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED10);
  char v40 = a2;
  uint64_t v6 = sub_251F366F0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v39 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v37 = v2;
  int64_t v38 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v38) {
      break;
    }
    unint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v39 + 8 * v22);
    ++v13;
    if (!v24)
    {
      int64_t v13 = v22 + 1;
      if (v22 + 1 >= v38) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v39 + 8 * v13);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v38)
        {
LABEL_33:
          swift_release();
          unint64_t v3 = v37;
          if ((v40 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v39 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v13 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v38) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v39 + 8 * v13);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_31:
    uint64_t v30 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void *)(v5 + 56) + 32 * v21;
    uint64_t v34 = *(void *)v33;
    long long v41 = *(_OWORD *)(v33 + 8);
    uint64_t v35 = *(void *)(v33 + 24);
    if ((v40 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_251F36CA0();
    sub_251F357B0();
    uint64_t result = sub_251F36D00();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v16 == v27;
        if (v16 == v27) {
          unint64_t v16 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v11 + 8 * v16);
      }
      while (v29 == -1);
      unint64_t v17 = __clz(__rbit64(~v29)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v32;
    v18[1] = v31;
    uint64_t v19 = *(void *)(v7 + 56) + 32 * v17;
    *(void *)uint64_t v19 = v34;
    *(_OWORD *)(v19 + 8) = v41;
    *(void *)(v19 + 24) = v35;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  unint64_t v3 = v37;
  unint64_t v23 = (void *)(v5 + 64);
  if ((v40 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
  if (v36 >= 64) {
    bzero(v23, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v36;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *unint64_t v3 = v7;
  return result;
}

uint64_t sub_251A04644(uint64_t a1, int a2)
{
  return sub_251A0465C(a1, a2, &qword_269B9CB20);
}

uint64_t sub_251A04650(uint64_t a1, int a2)
{
  return sub_251A0465C(a1, a2, &qword_269B9CAC0);
}

uint64_t sub_251A0465C(uint64_t a1, int a2, uint64_t *a3)
{
  unint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  int v44 = a2;
  uint64_t v7 = sub_251F366F0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_41;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 64);
  int64_t v42 = (void *)(v6 + 64);
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  char v40 = v3;
  int64_t v41 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v15 = 0;
  for (i = v6; ; uint64_t v6 = i)
  {
    if (v12)
    {
      unint64_t v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v18 = v17 | (v15 << 6);
      goto LABEL_22;
    }
    int64_t v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v19 >= v41) {
      break;
    }
    unint64_t v20 = v42;
    unint64_t v21 = v42[v19];
    ++v15;
    if (!v21)
    {
      int64_t v15 = v19 + 1;
      if (v19 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v21 = v42[v15];
      if (!v21)
      {
        int64_t v22 = v19 + 2;
        if (v22 >= v41)
        {
LABEL_34:
          swift_release();
          unint64_t v4 = v40;
          if ((v44 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v21 = v42[v22];
        if (!v21)
        {
          while (1)
          {
            int64_t v15 = v22 + 1;
            if (__OFADD__(v22, 1)) {
              goto LABEL_43;
            }
            if (v15 >= v41) {
              goto LABEL_34;
            }
            unint64_t v21 = v42[v15];
            ++v22;
            if (v21) {
              goto LABEL_21;
            }
          }
        }
        int64_t v15 = v22;
      }
    }
LABEL_21:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v18 = __clz(__rbit64(v21)) + (v15 << 6);
LABEL_22:
    uint64_t v23 = sub_251F34DA0();
    uint64_t v24 = *(void *)(v23 - 8);
    MEMORY[0x270FA5388](v23);
    char v26 = (char *)&v40 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v28 = *(void *)(v27 + 72);
    unint64_t v29 = *(void *)(v6 + 48) + v28 * v18;
    uint64_t v45 = v30;
    if (v44)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v24 + 32))((char *)&v40 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), v29, v23);
      id v31 = *(id *)(*(void *)(v6 + 56) + 8 * v18);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v24 + 16))((char *)&v40 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), v29, v23);
      id v31 = *(id *)(*(void *)(v6 + 56) + 8 * v18);
    }
    sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
    uint64_t result = sub_251F35600();
    uint64_t v32 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v33 = result & ~v32;
    unint64_t v34 = v33 >> 6;
    if (((-1 << v33) & ~*(void *)(v13 + 8 * (v33 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v33) & ~*(void *)(v13 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v35 = 0;
      unint64_t v36 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (++v34 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v37 = v34 == v36;
        if (v34 == v36) {
          unint64_t v34 = 0;
        }
        v35 |= v37;
        uint64_t v38 = *(void *)(v13 + 8 * v34);
      }
      while (v38 == -1);
      unint64_t v16 = __clz(__rbit64(~v38)) + (v34 << 6);
    }
    *(void *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v24 + 32))(*(void *)(v8 + 48) + v28 * v16, v26, v23);
    *(void *)(*(void *)(v8 + 56) + 8 * v16) = v31;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  unint64_t v4 = v40;
  unint64_t v20 = v42;
  if ((v44 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v39 = 1 << *(unsigned char *)(v6 + 32);
  if (v39 >= 64) {
    bzero(v20, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v20 = -1 << v39;
  }
  *(void *)(v6 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *unint64_t v4 = v8;
  return result;
}

uint64_t sub_251A04A64(uint64_t a1, int a2)
{
  return sub_251A01888(a1, a2, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent, &qword_269B9CAD0, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent);
}

uint64_t sub_251A04AAC(uint64_t a1, char a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C840);
  uint64_t v6 = sub_251F366F0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_42;
  }
  unint64_t v33 = v2;
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v34 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  swift_retain();
  int64_t v13 = 0;
LABEL_9:
  if (v10)
  {
    unint64_t v19 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v20 = v19 | (v13 << 6);
    goto LABEL_31;
  }
  int64_t v21 = v13 + 1;
  if (__OFADD__(v13, 1)) {
    goto LABEL_43;
  }
  if (v21 >= v11)
  {
    swift_release();
    unint64_t v3 = v33;
    int64_t v22 = (void *)(v5 + 64);
    if (a2)
    {
LABEL_38:
      uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
      if (v31 >= 64) {
        bzero(v22, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
      }
      else {
        *int64_t v22 = -1 << v31;
      }
      *(void *)(v5 + 16) = 0;
    }
  }
  else
  {
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v34 + 8 * v21);
    ++v13;
    if (v23) {
      goto LABEL_30;
    }
    int64_t v13 = v21 + 1;
    if (v21 + 1 >= v11) {
      goto LABEL_35;
    }
    unint64_t v23 = *(void *)(v34 + 8 * v13);
    if (v23)
    {
LABEL_30:
      unint64_t v10 = (v23 - 1) & v23;
      unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
      char v29 = *(unsigned char *)(*(void *)(v5 + 48) + v20);
      uint64_t v30 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v20);
      if (a2) {
        sub_251A0D578(v30, v35);
      }
      else {
        sub_251A0D51C((uint64_t)v30, (uint64_t)v35);
      }
      sub_251F36CA0();
      sub_251F357B0();
      swift_bridgeObjectRelease();
      uint64_t v14 = sub_251F36D00();
      uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v16 = v14 & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_8;
      }
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v15) >> 6;
      while (++v17 != v26 || (v25 & 1) == 0)
      {
        BOOL v27 = v17 == v26;
        if (v17 == v26) {
          unint64_t v17 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v17);
        if (v28 != -1)
        {
          unint64_t v18 = __clz(__rbit64(~v28)) + (v17 << 6);
LABEL_8:
          *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
          *(unsigned char *)(*(void *)(v7 + 48) + v18) = v29;
          sub_251A0D578(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v18));
          ++*(void *)(v7 + 16);
          goto LABEL_9;
        }
      }
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
      JUMPOUT(0x251A04EFCLL);
    }
    int64_t v24 = v21 + 2;
    if (v24 < v11)
    {
      unint64_t v23 = *(void *)(v34 + 8 * v24);
      if (!v23)
      {
        while (1)
        {
          int64_t v13 = v24 + 1;
          if (__OFADD__(v24, 1)) {
            goto LABEL_44;
          }
          if (v13 >= v11) {
            goto LABEL_35;
          }
          unint64_t v23 = *(void *)(v34 + 8 * v13);
          ++v24;
          if (v23) {
            goto LABEL_30;
          }
        }
      }
      int64_t v13 = v24;
      goto LABEL_30;
    }
LABEL_35:
    swift_release();
    unint64_t v3 = v33;
    if (a2) {
      goto LABEL_38;
    }
  }
LABEL_42:
  uint64_t result = swift_release();
  *unint64_t v3 = v7;
  return result;
}

uint64_t sub_251A04F24(uint64_t a1, char a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C838);
  uint64_t result = sub_251F366F0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v34 = (uint64_t *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v31 = -1 << v9;
    uint64_t v32 = v9;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v20 >= v33) {
          goto LABEL_33;
        }
        unint64_t v21 = v34[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v33) {
            goto LABEL_33;
          }
          unint64_t v21 = v34[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v33)
            {
LABEL_33:
              if (a2)
              {
                if (v32 >= 64) {
                  bzero(v34, 8 * v33);
                }
                else {
                  *uint64_t v34 = v31;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v21 = v34[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_41;
                }
                if (v8 >= v33) {
                  goto LABEL_33;
                }
                unint64_t v21 = v34[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      uint64_t v27 = *(unsigned __int16 *)(*(void *)(v5 + 48) + 2 * v19);
      uint64_t v28 = *(void *)(v5 + 56) + 24 * v19;
      long long v35 = *(_OWORD *)v28;
      uint64_t v29 = *(void *)(v28 + 16);
      if ((a2 & 1) == 0)
      {
        id v30 = (id)v35;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      uint64_t result = MEMORY[0x2533ABBC0](*(void *)(v7 + 40), v27, 2);
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v25 = v15 == v24;
          if (v15 == v24) {
            unint64_t v15 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        unint64_t v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_WORD *)(*(void *)(v7 + 48) + 2 * v16) = v27;
      uint64_t v17 = *(void *)(v7 + 56) + 24 * v16;
      *(_OWORD *)uint64_t v17 = v35;
      *(void *)(v17 + 16) = v29;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *unint64_t v3 = v7;
  return result;
}

uint64_t sub_251A0520C(uint64_t a1, char a2, uint64_t *a3)
{
  unint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t result = sub_251F366F0();
  uint64_t v8 = result;
  if (*(void *)(v6 + 16))
  {
    int64_t v9 = 0;
    uint64_t v10 = (uint64_t *)(v6 + 64);
    uint64_t v11 = 1 << *(unsigned char *)(v6 + 32);
    uint64_t v30 = -1 << v11;
    uint64_t v31 = v11;
    if (v11 < 64) {
      uint64_t v12 = ~(-1 << v11);
    }
    else {
      uint64_t v12 = -1;
    }
    unint64_t v13 = v12 & *(void *)(v6 + 64);
    int64_t v32 = (unint64_t)(v11 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v13)
      {
        unint64_t v19 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        unint64_t v20 = v19 | (v9 << 6);
      }
      else
      {
        int64_t v21 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v32) {
          goto LABEL_33;
        }
        unint64_t v22 = v10[v21];
        ++v9;
        if (!v22)
        {
          int64_t v9 = v21 + 1;
          if (v21 + 1 >= v32) {
            goto LABEL_33;
          }
          unint64_t v22 = v10[v9];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v32)
            {
LABEL_33:
              if (a2)
              {
                if (v31 >= 64) {
                  bzero((void *)(v6 + 64), 8 * v32);
                }
                else {
                  *uint64_t v10 = v30;
                }
                *(void *)(v6 + 16) = 0;
              }
              break;
            }
            unint64_t v22 = v10[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v9 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_41;
                }
                if (v9 >= v32) {
                  goto LABEL_33;
                }
                unint64_t v22 = v10[v9];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v9 = v23;
          }
        }
LABEL_30:
        unint64_t v13 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v9 << 6);
      }
      uint64_t v28 = *(unsigned __int16 *)(*(void *)(v6 + 48) + 2 * v20);
      uint64_t v29 = *(void *)(*(void *)(v6 + 56) + 8 * v20);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      uint64_t result = MEMORY[0x2533ABBC0](*(void *)(v8 + 40), v28, 2);
      uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v16 = result & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v14 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v14 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v26 = v17 == v25;
          if (v17 == v25) {
            unint64_t v17 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v14 + 8 * v17);
        }
        while (v27 == -1);
        unint64_t v18 = __clz(__rbit64(~v27)) + (v17 << 6);
      }
      *(void *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(_WORD *)(*(void *)(v8 + 48) + 2 * v18) = v28;
      *(void *)(*(void *)(v8 + 56) + 8 * v18) = v29;
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
  *unint64_t v4 = v8;
  return result;
}

uint64_t sub_251A054BC(uint64_t a1, char a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C9F0);
  uint64_t v6 = sub_251F366F0();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v34 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v13 << 6);
      }
      else
      {
        int64_t v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33) {
          goto LABEL_34;
        }
        unint64_t v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          int64_t v13 = v18 + 1;
          if (v18 + 1 >= v33) {
            goto LABEL_34;
          }
          unint64_t v19 = v34[v13];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              unint64_t v3 = v2;
              if (a2)
              {
                uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
                if (v32 >= 64) {
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v34 = -1 << v32;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v13 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_34;
                }
                unint64_t v19 = v34[v13];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v13 = v20;
          }
        }
LABEL_21:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      int64_t v21 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
      uint64_t v23 = *v21;
      uint64_t v22 = v21[1];
      char v24 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v17);
      if (a2)
      {
        sub_251A0D578(v24, v35);
      }
      else
      {
        sub_251A0D51C((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_251F36CA0();
      sub_251F357B0();
      uint64_t result = sub_251F36D00();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      uint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
      void *v15 = v23;
      v15[1] = v22;
      uint64_t result = (uint64_t)sub_251A0D578(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *unint64_t v3 = v7;
  return result;
}

uint64_t sub_251A057BC(uint64_t a1, char a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CA20);
  char v38 = a2;
  uint64_t v6 = sub_251F366F0();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    long long v35 = v2;
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    BOOL v37 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v36 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v19 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v20 = v19 | (v13 << 6);
      }
      else
      {
        int64_t v21 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v21 >= v36) {
          goto LABEL_33;
        }
        unint64_t v22 = v37[v21];
        ++v13;
        if (!v22)
        {
          int64_t v13 = v21 + 1;
          if (v21 + 1 >= v36) {
            goto LABEL_33;
          }
          unint64_t v22 = v37[v13];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v36)
            {
LABEL_33:
              swift_release();
              unint64_t v3 = v35;
              if (v38)
              {
                uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
                if (v34 >= 64) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *BOOL v37 = -1 << v34;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v22 = v37[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v13 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v36) {
                  goto LABEL_33;
                }
                unint64_t v22 = v37[v13];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v23;
          }
        }
LABEL_30:
        unint64_t v10 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v13 << 6);
      }
      char v28 = *(void **)(*(void *)(v5 + 48) + 8 * v20);
      uint64_t v29 = *(void *)(v5 + 56) + 24 * v20;
      uint64_t v30 = *(void *)v29;
      unint64_t v31 = *(void *)(v29 + 8);
      char v32 = *(unsigned char *)(v29 + 16);
      if ((v38 & 1) == 0)
      {
        id v33 = v28;
        sub_251A1A870(v30, v31, v32);
      }
      uint64_t result = sub_251F36110();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v26 = v16 == v25;
          if (v16 == v25) {
            unint64_t v16 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v11 + 8 * v16);
        }
        while (v27 == -1);
        unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(void *)(*(void *)(v7 + 48) + 8 * v17) = v28;
      uint64_t v18 = *(void *)(v7 + 56) + 24 * v17;
      *(void *)uint64_t v18 = v30;
      *(void *)(v18 + 8) = v31;
      *(unsigned char *)(v18 + 16) = v32;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *unint64_t v3 = v7;
  return result;
}

uint64_t sub_251A05AB4(uint64_t a1, int a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for BatchRequestError.ID();
  uint64_t v41 = *(void *)(v5 - 8);
  uint64_t v42 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C940);
  int v43 = a2;
  uint64_t v9 = sub_251F366F0();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  char v40 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  char v38 = v2;
  int64_t v39 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v14)
    {
      unint64_t v19 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v20 = v19 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v39) {
      break;
    }
    unint64_t v22 = v40;
    unint64_t v23 = v40[v21];
    ++v17;
    if (!v23)
    {
      int64_t v17 = v21 + 1;
      if (v21 + 1 >= v39) {
        goto LABEL_34;
      }
      unint64_t v23 = v40[v17];
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v39)
        {
LABEL_34:
          swift_release();
          unint64_t v3 = v38;
          if ((v43 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = v40[v24];
        if (!v23)
        {
          while (1)
          {
            int64_t v17 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v39) {
              goto LABEL_34;
            }
            unint64_t v23 = v40[v17];
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v24;
      }
    }
LABEL_21:
    unint64_t v14 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_22:
    uint64_t v25 = *(void *)(v41 + 72);
    uint64_t v26 = *(void *)(v8 + 48) + v25 * v20;
    if (v43)
    {
      sub_251A1AF1C(v26, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for BatchRequestError.ID);
      uint64_t v27 = *(void **)(*(void *)(v8 + 56) + 8 * v20);
    }
    else
    {
      sub_251A1AEB4(v26, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for BatchRequestError.ID);
      uint64_t v27 = *(void **)(*(void *)(v8 + 56) + 8 * v20);
      id v28 = v27;
    }
    sub_251F36CA0();
    sub_251F34DA0();
    sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
    sub_251F35610();
    char v44 = v7[*(int *)(v42 + 20)];
    CharacteristicKind.rawValue.getter();
    sub_251F357B0();
    swift_bridgeObjectRelease();
    uint64_t result = sub_251F36D00();
    uint64_t v29 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v30 = result & ~v29;
    unint64_t v31 = v30 >> 6;
    if (((-1 << v30) & ~*(void *)(v15 + 8 * (v30 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v30) & ~*(void *)(v15 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v32 = 0;
      unint64_t v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v34 = v31 == v33;
        if (v31 == v33) {
          unint64_t v31 = 0;
        }
        v32 |= v34;
        uint64_t v35 = *(void *)(v15 + 8 * v31);
      }
      while (v35 == -1);
      unint64_t v18 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t result = sub_251A1AF1C((uint64_t)v7, *(void *)(v10 + 48) + v25 * v18, (uint64_t (*)(void))type metadata accessor for BatchRequestError.ID);
    *(void *)(*(void *)(v10 + 56) + 8 * v18) = v27;
    ++*(void *)(v10 + 16);
  }
  swift_release();
  unint64_t v3 = v38;
  unint64_t v22 = v40;
  if ((v43 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v36 = 1 << *(unsigned char *)(v8 + 32);
  if (v36 >= 64) {
    bzero(v22, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v36;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *unint64_t v3 = v10;
  return result;
}

uint64_t sub_251A05EF4(uint64_t a1, int a2)
{
  return sub_251A05F00(a1, a2, &qword_269B9CAF0);
}

uint64_t sub_251A05F00(uint64_t a1, int a2, uint64_t *a3)
{
  unint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  int v44 = a2;
  uint64_t v7 = sub_251F366F0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_41;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 64);
  uint64_t v42 = (void *)(v6 + 64);
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  char v40 = v3;
  int64_t v41 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v15 = 0;
  for (i = v6; ; uint64_t v6 = i)
  {
    if (v12)
    {
      unint64_t v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v18 = v17 | (v15 << 6);
      goto LABEL_22;
    }
    int64_t v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v19 >= v41) {
      break;
    }
    unint64_t v20 = v42;
    unint64_t v21 = v42[v19];
    ++v15;
    if (!v21)
    {
      int64_t v15 = v19 + 1;
      if (v19 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v21 = v42[v15];
      if (!v21)
      {
        int64_t v22 = v19 + 2;
        if (v22 >= v41)
        {
LABEL_34:
          swift_release();
          unint64_t v4 = v40;
          if ((v44 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v21 = v42[v22];
        if (!v21)
        {
          while (1)
          {
            int64_t v15 = v22 + 1;
            if (__OFADD__(v22, 1)) {
              goto LABEL_43;
            }
            if (v15 >= v41) {
              goto LABEL_34;
            }
            unint64_t v21 = v42[v15];
            ++v22;
            if (v21) {
              goto LABEL_21;
            }
          }
        }
        int64_t v15 = v22;
      }
    }
LABEL_21:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v18 = __clz(__rbit64(v21)) + (v15 << 6);
LABEL_22:
    uint64_t v23 = sub_251F34DA0();
    uint64_t v24 = *(void *)(v23 - 8);
    MEMORY[0x270FA5388]();
    uint64_t v26 = (char *)&v40 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v28 = *(void *)(v27 + 72);
    unint64_t v29 = *(void *)(v6 + 48) + v28 * v18;
    uint64_t v45 = v30;
    if (v44)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v24 + 32))((char *)&v40 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), v29, v23);
      uint64_t v31 = *(void *)(*(void *)(v6 + 56) + 8 * v18);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v24 + 16))((char *)&v40 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), v29, v23);
      uint64_t v31 = *(void *)(*(void *)(v6 + 56) + 8 * v18);
      swift_bridgeObjectRetain();
    }
    sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
    uint64_t result = sub_251F35600();
    uint64_t v32 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v33 = result & ~v32;
    unint64_t v34 = v33 >> 6;
    if (((-1 << v33) & ~*(void *)(v13 + 8 * (v33 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v33) & ~*(void *)(v13 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v35 = 0;
      unint64_t v36 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (++v34 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v37 = v34 == v36;
        if (v34 == v36) {
          unint64_t v34 = 0;
        }
        v35 |= v37;
        uint64_t v38 = *(void *)(v13 + 8 * v34);
      }
      while (v38 == -1);
      unint64_t v16 = __clz(__rbit64(~v38)) + (v34 << 6);
    }
    *(void *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v24 + 32))(*(void *)(v8 + 48) + v28 * v16, v26, v23);
    *(void *)(*(void *)(v8 + 56) + 8 * v16) = v31;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  unint64_t v4 = v40;
  unint64_t v20 = v42;
  if ((v44 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v39 = 1 << *(unsigned char *)(v6 + 32);
  if (v39 >= 64) {
    bzero(v20, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v20 = -1 << v39;
  }
  *(void *)(v6 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *unint64_t v4 = v8;
  return result;
}

uint64_t sub_251A06308(uint64_t a1, char a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C848);
  uint64_t result = sub_251F366F0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v30 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v12 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v16 = v15 | (v8 << 6);
      }
      else
      {
        int64_t v17 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v17 >= v12) {
          goto LABEL_34;
        }
        unint64_t v18 = v30[v17];
        ++v8;
        if (!v18)
        {
          int64_t v8 = v17 + 1;
          if (v17 + 1 >= v12) {
            goto LABEL_34;
          }
          unint64_t v18 = v30[v8];
          if (!v18)
          {
            int64_t v19 = v17 + 2;
            if (v19 >= v12)
            {
LABEL_34:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                unint64_t v3 = v2;
                goto LABEL_41;
              }
              uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
              if (v29 >= 64) {
                bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v30 = -1 << v29;
              }
              unint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v18 = v30[v19];
            if (!v18)
            {
              while (1)
              {
                int64_t v8 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_43;
                }
                if (v8 >= v12) {
                  goto LABEL_34;
                }
                unint64_t v18 = v30[v8];
                ++v19;
                if (v18) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v19;
          }
        }
LABEL_21:
        unint64_t v11 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v8 << 6);
      }
      int v20 = *(_DWORD *)(*(void *)(v5 + 48) + 4 * v16);
      unint64_t v21 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v16);
      if (a2) {
        sub_251A0D578(v21, v31);
      }
      else {
        sub_251A0D51C((uint64_t)v21, (uint64_t)v31);
      }
      sub_251F36CA0();
      sub_251F36CE0();
      uint64_t result = sub_251F36D00();
      uint64_t v22 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v13 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v23) & ~*(void *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v13 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v14 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(_DWORD *)(*(void *)(v7 + 48) + 4 * v14) = v20;
      uint64_t result = (uint64_t)sub_251A0D578(v31, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_41:
  *unint64_t v3 = v7;
  return result;
}

uint64_t sub_251A065E0(uint64_t a1, int a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C888);
  int v49 = a2;
  uint64_t v6 = sub_251F366F0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v9 = *(void *)(v5 + 64);
  uint64_t v47 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v10 = ~(-1 << v8);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & v9;
  uint64_t v45 = v2;
  int64_t v46 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  for (i = v5; ; uint64_t v5 = i)
  {
    if (v11)
    {
      unint64_t v17 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      int64_t v50 = v14;
      unint64_t v18 = v17 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v19 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v19 >= v46) {
      break;
    }
    int v20 = v47;
    unint64_t v21 = v47[v19];
    int64_t v22 = v14 + 1;
    if (!v21)
    {
      int64_t v22 = v14 + 2;
      if (v14 + 2 >= v46) {
        goto LABEL_34;
      }
      unint64_t v21 = v47[v22];
      if (!v21)
      {
        uint64_t v23 = v14 + 3;
        if (v14 + 3 >= v46)
        {
LABEL_34:
          swift_release();
          unint64_t v3 = v45;
          if ((v49 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v21 = v47[v23];
        if (!v21)
        {
          while (1)
          {
            int64_t v22 = v23 + 1;
            if (__OFADD__(v23, 1)) {
              goto LABEL_43;
            }
            if (v22 >= v46) {
              goto LABEL_34;
            }
            unint64_t v21 = v47[v22];
            ++v23;
            if (v21) {
              goto LABEL_21;
            }
          }
        }
        int64_t v22 = v14 + 3;
      }
    }
LABEL_21:
    unint64_t v11 = (v21 - 1) & v21;
    int64_t v50 = v22;
    unint64_t v18 = __clz(__rbit64(v21)) + (v22 << 6);
LABEL_22:
    uint64_t v24 = sub_251F34DA0();
    uint64_t v25 = *(void *)(v24 - 8);
    MEMORY[0x270FA5388](v24);
    BOOL v27 = (char *)&v44 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v29 = *(void *)(v28 + 72);
    unint64_t v30 = *(void *)(v5 + 48) + v29 * v18;
    uint64_t v51 = v31;
    if (v49)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v25 + 32))((char *)&v44 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0), v30, v24);
      uint64_t v32 = *(void *)(v5 + 56) + 32 * v18;
      long long v52 = *(_OWORD *)v32;
      unint64_t v33 = *(void **)(v32 + 16);
      unint64_t v34 = *(void **)(v32 + 24);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v25 + 16))((char *)&v44 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0), v30, v24);
      uint64_t v35 = *(void *)(v5 + 56) + 32 * v18;
      long long v52 = *(_OWORD *)v35;
      unint64_t v33 = *(void **)(v35 + 16);
      unint64_t v34 = *(void **)(v35 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_251A1A4CC(v33);
      sub_251A1A4CC(v34);
    }
    sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
    uint64_t result = sub_251F35600();
    uint64_t v36 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v37 = result & ~v36;
    unint64_t v38 = v37 >> 6;
    if (((-1 << v37) & ~*(void *)(v12 + 8 * (v37 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v37) & ~*(void *)(v12 + 8 * (v37 >> 6)))) | v37 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v39 = 0;
      unint64_t v40 = (unint64_t)(63 - v36) >> 6;
      do
      {
        if (++v38 == v40 && (v39 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v41 = v38 == v40;
        if (v38 == v40) {
          unint64_t v38 = 0;
        }
        v39 |= v41;
        uint64_t v42 = *(void *)(v12 + 8 * v38);
      }
      while (v42 == -1);
      unint64_t v15 = __clz(__rbit64(~v42)) + (v38 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v25 + 32))(*(void *)(v7 + 48) + v29 * v15, v27, v24);
    uint64_t v16 = *(void *)(v7 + 56) + 32 * v15;
    *(_OWORD *)uint64_t v16 = v52;
    *(void *)(v16 + 16) = v33;
    *(void *)(v16 + 24) = v34;
    ++*(void *)(v7 + 16);
    int64_t v14 = v50;
  }
  swift_release();
  unint64_t v3 = v45;
  int v20 = v47;
  if ((v49 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v43 = 1 << *(unsigned char *)(v5 + 32);
  if (v43 >= 64) {
    bzero(v20, ((unint64_t)(v43 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int v20 = -1 << v43;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *unint64_t v3 = v7;
  return result;
}

uint64_t sub_251A06A34(uint64_t a1, int a2)
{
  return sub_251A05F00(a1, a2, &qword_269B9C868);
}

uint64_t sub_251A06A40(uint64_t a1, int a2)
{
  return sub_251A06A8C(a1, a2, &qword_269B9C870, (void (*)(unint64_t, unsigned char *))sub_251A1A444);
}

uint64_t sub_251A06A60(uint64_t a1, int a2)
{
  return sub_251A05F00(a1, a2, &qword_269B9C878);
}

uint64_t sub_251A06A6C(uint64_t a1, int a2)
{
  return sub_251A06A8C(a1, a2, &qword_269B9C880, (void (*)(unint64_t, unsigned char *))sub_251A1A444);
}

uint64_t sub_251A06A8C(uint64_t a1, int a2, uint64_t *a3, void (*a4)(unint64_t, unsigned char *))
{
  uint64_t v44 = a4;
  uint64_t v5 = v4;
  uint64_t v7 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  int v43 = a2;
  uint64_t v8 = sub_251F366F0();
  uint64_t v9 = v8;
  if (*(void *)(v7 + 16))
  {
    char v39 = v4;
    uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
    uint64_t v11 = *(void *)(v7 + 64);
    BOOL v41 = (void *)(v7 + 64);
    if (v10 < 64) {
      uint64_t v12 = ~(-1 << v10);
    }
    else {
      uint64_t v12 = -1;
    }
    unint64_t v13 = v12 & v11;
    int64_t v40 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = v8 + 64;
    uint64_t result = swift_retain();
    int64_t v16 = 0;
    for (i = v7; ; uint64_t v7 = i)
    {
      if (v13)
      {
        unint64_t v18 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        unint64_t v19 = v18 | (v16 << 6);
      }
      else
      {
        int64_t v20 = v16 + 1;
        if (__OFADD__(v16, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v20 >= v40) {
          goto LABEL_34;
        }
        unint64_t v21 = v41[v20];
        ++v16;
        if (!v21)
        {
          int64_t v16 = v20 + 1;
          if (v20 + 1 >= v40) {
            goto LABEL_34;
          }
          unint64_t v21 = v41[v16];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v40)
            {
LABEL_34:
              swift_release();
              uint64_t v5 = v39;
              if (v43)
              {
                uint64_t v38 = 1 << *(unsigned char *)(v7 + 32);
                if (v38 >= 64) {
                  bzero(v41, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *BOOL v41 = -1 << v38;
                }
                *(void *)(v7 + 16) = 0;
              }
              break;
            }
            unint64_t v21 = v41[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v16 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_41;
                }
                if (v16 >= v40) {
                  goto LABEL_34;
                }
                unint64_t v21 = v41[v16];
                ++v22;
                if (v21) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v16 = v22;
          }
        }
LABEL_21:
        unint64_t v13 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
      }
      uint64_t v23 = sub_251F34DA0();
      uint64_t v24 = *(void *)(v23 - 8);
      MEMORY[0x270FA5388](v23);
      uint64_t v26 = (char *)&v39 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v28 = *(void *)(v27 + 72);
      unint64_t v29 = *(void *)(v7 + 48) + v28 * v19;
      uint64_t v45 = v30;
      if (v43)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v24 + 32))((char *)&v39 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), v29, v23);
        v44(*(void *)(v7 + 56) + 40 * v19, v46);
      }
      else
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v24 + 16))((char *)&v39 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), v29, v23);
        sub_251A1A4EC(*(void *)(v7 + 56) + 40 * v19, (uint64_t)v46);
      }
      sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
      uint64_t result = sub_251F35600();
      uint64_t v31 = -1 << *(unsigned char *)(v9 + 32);
      unint64_t v32 = result & ~v31;
      unint64_t v33 = v32 >> 6;
      if (((-1 << v32) & ~*(void *)(v14 + 8 * (v32 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v32) & ~*(void *)(v14 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v34 = 0;
        unint64_t v35 = (unint64_t)(63 - v31) >> 6;
        do
        {
          if (++v33 == v35 && (v34 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v36 = v33 == v35;
          if (v33 == v35) {
            unint64_t v33 = 0;
          }
          v34 |= v36;
          uint64_t v37 = *(void *)(v14 + 8 * v33);
        }
        while (v37 == -1);
        unint64_t v17 = __clz(__rbit64(~v37)) + (v33 << 6);
      }
      *(void *)(v14 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      (*(void (**)(unint64_t, char *, uint64_t))(v24 + 32))(*(void *)(v9 + 48) + v28 * v17, v26, v23);
      uint64_t result = ((uint64_t (*)(unsigned char *, unint64_t))v44)(v46, *(void *)(v9 + 56) + 40 * v17);
      ++*(void *)(v9 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v5 = v9;
  return result;
}

uint64_t sub_251A06EB0(uint64_t a1, int a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C998);
  int v62 = a2;
  uint64_t v6 = sub_251F366F0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  unint64_t v58 = v2;
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v9 = *(void *)(v5 + 64);
  uint64_t v60 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v10 = ~(-1 << v8);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & v9;
  int64_t v59 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  for (i = v5; ; uint64_t v5 = i)
  {
    if (v11)
    {
      unint64_t v24 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      int64_t v76 = v14;
      unint64_t v25 = v24 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v26 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v26 >= v59) {
      break;
    }
    uint64_t v27 = v60;
    unint64_t v28 = v60[v26];
    int64_t v29 = v14 + 1;
    if (!v28)
    {
      int64_t v29 = v14 + 2;
      if (v14 + 2 >= v59) {
        goto LABEL_34;
      }
      unint64_t v28 = v60[v29];
      if (!v28)
      {
        uint64_t v30 = v14 + 3;
        if (v14 + 3 >= v59)
        {
LABEL_34:
          swift_release();
          unint64_t v3 = v58;
          goto LABEL_36;
        }
        unint64_t v28 = v60[v30];
        if (!v28)
        {
          while (1)
          {
            int64_t v29 = v30 + 1;
            if (__OFADD__(v30, 1)) {
              goto LABEL_43;
            }
            if (v29 >= v59) {
              goto LABEL_34;
            }
            unint64_t v28 = v60[v29];
            ++v30;
            if (v28) {
              goto LABEL_21;
            }
          }
        }
        int64_t v29 = v14 + 3;
      }
    }
LABEL_21:
    unint64_t v11 = (v28 - 1) & v28;
    int64_t v76 = v29;
    unint64_t v25 = __clz(__rbit64(v28)) + (v29 << 6);
LABEL_22:
    uint64_t v31 = sub_251F34DA0();
    uint64_t v32 = *(void *)(v31 - 8);
    MEMORY[0x270FA5388](v31);
    char v34 = (char *)&v57 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v77 = v35;
    uint64_t v36 = *(void *)(v32 + 72);
    if (v62)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v32 + 32))(v34, *(void *)(v5 + 48) + v36 * v25, v31);
      uint64_t v37 = (uint64_t *)(*(void *)(v5 + 56) + (v25 << 7));
      uint64_t v72 = *v37;
      uint64_t v70 = v37[1];
      uint64_t v68 = v37[2];
      uint64_t v66 = v37[3];
      uint64_t v64 = v37[4];
      uint64_t v38 = v37[6];
      uint64_t v63 = v37[5];
      uint64_t v39 = v37[7];
      uint64_t v75 = v37[8];
      uint64_t v73 = v37[9];
      uint64_t v71 = v37[10];
      uint64_t v69 = v37[11];
      uint64_t v67 = v37[12];
      uint64_t v65 = v37[13];
      uint64_t v41 = v37[14];
      uint64_t v40 = v37[15];
      *(void *)&long long v74 = v41;
      *((void *)&v74 + 1) = v40;
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v32 + 16))(v34, *(void *)(v5 + 48) + v36 * v25, v31);
      uint64_t v42 = (long long *)(*(void *)(v5 + 56) + (v25 << 7));
      long long v43 = v42[4];
      long long v44 = v42[5];
      long long v45 = v42[7];
      long long v83 = v42[6];
      long long v84 = v45;
      long long v81 = v43;
      long long v82 = v44;
      long long v47 = *v42;
      long long v46 = v42[1];
      long long v48 = v42[3];
      long long v79 = v42[2];
      long long v80 = v48;
      v78[0] = v47;
      v78[1] = v46;
      long long v74 = v84;
      uint64_t v73 = *((void *)&v81 + 1);
      uint64_t v75 = v81;
      uint64_t v69 = *((void *)&v82 + 1);
      uint64_t v71 = v82;
      uint64_t v65 = *((void *)&v83 + 1);
      uint64_t v67 = v83;
      uint64_t v70 = *((void *)&v47 + 1);
      uint64_t v72 = v47;
      uint64_t v66 = *((void *)&v46 + 1);
      uint64_t v68 = v46;
      uint64_t v64 = v79;
      uint64_t v38 = v48;
      uint64_t v63 = *((void *)&v79 + 1);
      uint64_t v39 = *((void *)&v48 + 1);
      sub_251A1A678((uint64_t)v78);
    }
    sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
    uint64_t result = sub_251F35600();
    uint64_t v49 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v50 = result & ~v49;
    unint64_t v51 = v50 >> 6;
    if (((-1 << v50) & ~*(void *)(v12 + 8 * (v50 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v50) & ~*(void *)(v12 + 8 * (v50 >> 6)))) | v50 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v52 = 0;
      unint64_t v53 = (unint64_t)(63 - v49) >> 6;
      do
      {
        if (++v51 == v53 && (v52 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v54 = v51 == v53;
        if (v51 == v53) {
          unint64_t v51 = 0;
        }
        v52 |= v54;
        uint64_t v55 = *(void *)(v12 + 8 * v51);
      }
      while (v55 == -1);
      unint64_t v15 = __clz(__rbit64(~v55)) + (v51 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v32 + 32))(*(void *)(v7 + 48) + v36 * v15, v34, v31);
    int64_t v16 = (void *)(*(void *)(v7 + 56) + (v15 << 7));
    uint64_t v17 = v70;
    *int64_t v16 = v72;
    v16[1] = v17;
    uint64_t v18 = v66;
    v16[2] = v68;
    v16[3] = v18;
    uint64_t v19 = v63;
    v16[4] = v64;
    v16[5] = v19;
    v16[6] = v38;
    v16[7] = v39;
    uint64_t v20 = v73;
    v16[8] = v75;
    v16[9] = v20;
    uint64_t v21 = v69;
    v16[10] = v71;
    v16[11] = v21;
    uint64_t v22 = v65;
    v16[12] = v67;
    v16[13] = v22;
    uint64_t v23 = *((void *)&v74 + 1);
    v16[14] = v74;
    v16[15] = v23;
    ++*(void *)(v7 + 16);
    int64_t v14 = v76;
  }
  swift_release();
  unint64_t v3 = v58;
  uint64_t v27 = v60;
LABEL_36:
  if (v62)
  {
    uint64_t v56 = 1 << *(unsigned char *)(v5 + 32);
    if (v56 >= 64) {
      bzero(v27, ((unint64_t)(v56 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *uint64_t v27 = -1 << v56;
    }
    *(void *)(v5 + 16) = 0;
  }
LABEL_41:
  uint64_t result = swift_release();
  *unint64_t v3 = v7;
  return result;
}

uint64_t sub_251A074D8(uint64_t a1, char a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CB08);
  uint64_t v6 = sub_251F366F0();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v33 = v2;
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v9 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v10 = ~(-1 << v8);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v12 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v13 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v15 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v18 = v17 | (v15 << 6);
      }
      else
      {
        int64_t v19 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        if (v19 >= v12) {
          goto LABEL_34;
        }
        unint64_t v20 = v9[v19];
        ++v15;
        if (!v20)
        {
          int64_t v15 = v19 + 1;
          if (v19 + 1 >= v12) {
            goto LABEL_34;
          }
          unint64_t v20 = v9[v15];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v12)
            {
LABEL_34:
              swift_release();
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                unint64_t v3 = v33;
                goto LABEL_41;
              }
              uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
              if (v32 >= 64) {
                bzero((void *)(v5 + 64), ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v9 = -1 << v32;
              }
              unint64_t v3 = v33;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v9[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v15 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_43;
                }
                if (v15 >= v12) {
                  goto LABEL_34;
                }
                unint64_t v20 = v9[v15];
                ++v21;
                if (v20) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v15 = v21;
          }
        }
LABEL_21:
        unint64_t v11 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v15 << 6);
      }
      uint64_t v22 = *(void **)(*(void *)(v5 + 48) + 8 * v18);
      uint64_t v23 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v18);
      if (a2)
      {
        sub_251A0D578(v23, v34);
      }
      else
      {
        sub_251A0D51C((uint64_t)v23, (uint64_t)v34);
        id v24 = v22;
      }
      uint64_t result = sub_251F36110();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v13 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v26) & ~*(void *)(v13 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v13 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v16 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(void *)(*(void *)(v7 + 48) + 8 * v16) = v22;
      uint64_t result = (uint64_t)sub_251A0D578(v34, (_OWORD *)(*(void *)(v7 + 56) + 32 * v16));
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_41:
  *unint64_t v3 = v7;
  return result;
}

uint64_t sub_251A077AC(uint64_t a1, int a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for RoomType(0);
  uint64_t v42 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CAD8);
  int v43 = a2;
  uint64_t v9 = sub_251F366F0();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  uint64_t v41 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  uint64_t v39 = v2;
  int64_t v40 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v14)
    {
      unint64_t v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v40) {
      break;
    }
    uint64_t v23 = v41;
    unint64_t v24 = v41[v22];
    ++v17;
    if (!v24)
    {
      int64_t v17 = v22 + 1;
      if (v22 + 1 >= v40) {
        goto LABEL_34;
      }
      unint64_t v24 = v41[v17];
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v40)
        {
LABEL_34:
          swift_release();
          unint64_t v3 = v39;
          if ((v43 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v24 = v41[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v17 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v40) {
              goto LABEL_34;
            }
            unint64_t v24 = v41[v17];
            ++v25;
            if (v24) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v25;
      }
    }
LABEL_21:
    unint64_t v14 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    unint64_t v26 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v21);
    uint64_t v28 = *v26;
    uint64_t v27 = v26[1];
    uint64_t v29 = *(void *)(v42 + 72);
    uint64_t v30 = *(void *)(v8 + 56) + v29 * v21;
    if (v43)
    {
      sub_251A1AF1C(v30, (uint64_t)v7, type metadata accessor for RoomType);
    }
    else
    {
      sub_251A1AEB4(v30, (uint64_t)v7, type metadata accessor for RoomType);
      swift_bridgeObjectRetain();
    }
    sub_251F36CA0();
    sub_251F357B0();
    uint64_t result = sub_251F36D00();
    uint64_t v31 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v15 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v18 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    int64_t v19 = (void *)(*(void *)(v10 + 48) + 16 * v18);
    *int64_t v19 = v28;
    v19[1] = v27;
    uint64_t result = sub_251A1AF1C((uint64_t)v7, *(void *)(v10 + 56) + v29 * v18, type metadata accessor for RoomType);
    ++*(void *)(v10 + 16);
  }
  swift_release();
  unint64_t v3 = v39;
  uint64_t v23 = v41;
  if ((v43 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v8 + 32);
  if (v38 >= 64) {
    bzero(v23, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v23 = -1 << v38;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *unint64_t v3 = v10;
  return result;
}

uint64_t sub_251A07B8C(uint64_t a1, char a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E5D0);
  uint64_t v10 = (void *)sub_251F366F0();
  if (*(void *)(v9 + 16))
  {
    uint64_t v27 = v3;
    uint64_t v11 = 1 << *(unsigned char *)(v9 + 32);
    uint64_t v12 = (void *)(v9 + 64);
    uint64_t v13 = -1;
    if (v11 < 64) {
      uint64_t v13 = ~(-1 << v11);
    }
    unint64_t v14 = v13 & *(void *)(v9 + 64);
    int64_t v15 = (unint64_t)(v11 + 63) >> 6;
    uint64_t result = swift_retain();
    int64_t v17 = 0;
    while (1)
    {
      if (v14)
      {
        unint64_t v19 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        unint64_t v20 = v19 | (v17 << 6);
      }
      else
      {
        int64_t v21 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
          __break(1u);
LABEL_32:
          __break(1u);
          return result;
        }
        if (v21 >= v15) {
          goto LABEL_23;
        }
        unint64_t v22 = v12[v21];
        ++v17;
        if (!v22)
        {
          int64_t v17 = v21 + 1;
          if (v21 + 1 >= v15) {
            goto LABEL_23;
          }
          unint64_t v22 = v12[v17];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v15)
            {
LABEL_23:
              swift_release();
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                unint64_t v3 = v27;
                goto LABEL_30;
              }
              uint64_t v25 = 1 << *(unsigned char *)(v9 + 32);
              if (v25 >= 64) {
                bzero((void *)(v9 + 64), ((unint64_t)(v25 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v12 = -1 << v25;
              }
              unint64_t v3 = v27;
              *(void *)(v9 + 16) = 0;
              break;
            }
            unint64_t v22 = v12[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v17 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_32;
                }
                if (v17 >= v15) {
                  goto LABEL_23;
                }
                unint64_t v22 = v12[v17];
                ++v23;
                if (v22) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v17 = v23;
          }
        }
LABEL_20:
        unint64_t v14 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v17 << 6);
      }
      uint64_t v24 = *(void *)(v9 + 48) + *(void *)(v6 + 72) * v20;
      if (a2)
      {
        sub_251A1AF1C(v24, (uint64_t)v8, type metadata accessor for PhoenixMetricsAggregator.IntervalKey);
        uint64_t v18 = *(void *)(*(void *)(v9 + 56) + 8 * v20);
      }
      else
      {
        sub_251A1AEB4(v24, (uint64_t)v8, type metadata accessor for PhoenixMetricsAggregator.IntervalKey);
        uint64_t v18 = *(void *)(*(void *)(v9 + 56) + 8 * v20);
        swift_bridgeObjectRetain();
      }
      uint64_t result = sub_251A10CC4((uint64_t)v8, v18, v10);
    }
  }
  uint64_t result = swift_release();
LABEL_30:
  *unint64_t v3 = v10;
  return result;
}

uint64_t sub_251A07E4C(uint64_t a1, int a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for StaticCharacteristic();
  uint64_t v39 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F1D8);
  int v40 = a2;
  uint64_t v9 = sub_251F366F0();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  uint64_t v38 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  BOOL v36 = v2;
  int64_t v37 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v14)
    {
      unint64_t v19 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v20 = v19 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v37) {
      break;
    }
    unint64_t v22 = v38;
    unint64_t v23 = v38[v21];
    ++v17;
    if (!v23)
    {
      int64_t v17 = v21 + 1;
      if (v21 + 1 >= v37) {
        goto LABEL_34;
      }
      unint64_t v23 = v38[v17];
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v37)
        {
LABEL_34:
          swift_release();
          unint64_t v3 = v36;
          if ((v40 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = v38[v24];
        if (!v23)
        {
          while (1)
          {
            int64_t v17 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v37) {
              goto LABEL_34;
            }
            unint64_t v23 = v38[v17];
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v24;
      }
    }
LABEL_21:
    unint64_t v14 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_22:
    char v25 = *(unsigned char *)(*(void *)(v8 + 48) + v20);
    uint64_t v26 = *(void *)(v39 + 72);
    uint64_t v27 = *(void *)(v8 + 56) + v26 * v20;
    if (v40) {
      sub_251A1AF1C(v27, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
    }
    else {
      sub_251A1AEB4(v27, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
    }
    sub_251F36CA0();
    char v41 = v25;
    CharacteristicKind.rawValue.getter();
    sub_251F357B0();
    swift_bridgeObjectRelease();
    uint64_t result = sub_251F36D00();
    uint64_t v28 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v15 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v29) & ~*(void *)(v15 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v33 = v30 == v32;
        if (v30 == v32) {
          unint64_t v30 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v15 + 8 * v30);
      }
      while (v34 == -1);
      unint64_t v18 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(unsigned char *)(*(void *)(v10 + 48) + v18) = v25;
    uint64_t result = sub_251A1AF1C((uint64_t)v7, *(void *)(v10 + 56) + v26 * v18, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
    ++*(void *)(v10 + 16);
  }
  swift_release();
  unint64_t v3 = v36;
  unint64_t v22 = v38;
  if ((v40 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v35 = 1 << *(unsigned char *)(v8 + 32);
  if (v35 >= 64) {
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v35;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *unint64_t v3 = v10;
  return result;
}

uint64_t sub_251A08234(uint64_t a1, int a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CA80);
  int v44 = a2;
  uint64_t v6 = sub_251F366F0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v9 = *(void *)(v5 + 64);
  int v43 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v10 = ~(-1 << v8);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & v9;
  char v41 = v2;
  int64_t v42 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v16 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      int64_t v45 = v14;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v42) {
      break;
    }
    unint64_t v19 = v43;
    unint64_t v20 = v43[v18];
    int64_t v21 = v14 + 1;
    if (!v20)
    {
      int64_t v21 = v14 + 2;
      if (v14 + 2 >= v42) {
        goto LABEL_34;
      }
      unint64_t v20 = v43[v21];
      if (!v20)
      {
        uint64_t v22 = v14 + 3;
        if (v14 + 3 >= v42)
        {
LABEL_34:
          swift_release();
          unint64_t v3 = v41;
          if ((v44 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v20 = v43[v22];
        if (!v20)
        {
          while (1)
          {
            int64_t v21 = v22 + 1;
            if (__OFADD__(v22, 1)) {
              goto LABEL_43;
            }
            if (v21 >= v42) {
              goto LABEL_34;
            }
            unint64_t v20 = v43[v21];
            ++v22;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v21 = v14 + 3;
      }
    }
LABEL_21:
    unint64_t v11 = (v20 - 1) & v20;
    int64_t v45 = v21;
    unint64_t v17 = __clz(__rbit64(v20)) + (v21 << 6);
LABEL_22:
    uint64_t v23 = sub_251F34DA0();
    uint64_t v24 = *(void *)(v23 - 8);
    MEMORY[0x270FA5388](v23);
    uint64_t v26 = (char *)&v41 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v28 = *(void *)(v27 + 72);
    unint64_t v29 = *(void *)(v5 + 48) + v28 * v17;
    uint64_t v46 = v30;
    if (v44) {
      (*(void (**)(char *, unint64_t, uint64_t))(v24 + 32))((char *)&v41 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), v29, v23);
    }
    else {
      (*(void (**)(char *, unint64_t, uint64_t))(v24 + 16))((char *)&v41 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), v29, v23);
    }
    uint64_t v31 = v5;
    char v32 = *(unsigned char *)(*(void *)(v5 + 56) + v17);
    sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
    uint64_t result = sub_251F35600();
    uint64_t v33 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v34 = result & ~v33;
    unint64_t v35 = v34 >> 6;
    if (((-1 << v34) & ~*(void *)(v12 + 8 * (v34 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v34) & ~*(void *)(v12 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v36 = 0;
      unint64_t v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v38 = v35 == v37;
        if (v35 == v37) {
          unint64_t v35 = 0;
        }
        v36 |= v38;
        uint64_t v39 = *(void *)(v12 + 8 * v35);
      }
      while (v39 == -1);
      unint64_t v15 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v24 + 32))(*(void *)(v7 + 48) + v28 * v15, v26, v23);
    *(unsigned char *)(*(void *)(v7 + 56) + v15) = v32;
    ++*(void *)(v7 + 16);
    int64_t v14 = v45;
    uint64_t v5 = v31;
  }
  swift_release();
  unint64_t v3 = v41;
  unint64_t v19 = v43;
  if ((v44 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v40 = 1 << *(unsigned char *)(v5 + 32);
  if (v40 >= 64) {
    bzero(v19, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v19 = -1 << v40;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *unint64_t v3 = v7;
  return result;
}

uint64_t sub_251A08638(uint64_t a1, char a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C8E8);
  uint64_t result = sub_251F366F0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    uint64_t v30 = v3;
    int64_t v8 = 0;
    uint64_t v9 = (void *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v20 = v19 | (v8 << 6);
      }
      else
      {
        int64_t v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v21 >= v13) {
          goto LABEL_33;
        }
        unint64_t v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          int64_t v8 = v21 + 1;
          if (v21 + 1 >= v13) {
            goto LABEL_33;
          }
          unint64_t v22 = v9[v8];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v13)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                unint64_t v3 = v30;
                goto LABEL_40;
              }
              uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
              if (v29 >= 64) {
                bzero((void *)(v5 + 64), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v9 = -1 << v29;
              }
              unint64_t v3 = v30;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v8 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v13) {
                  goto LABEL_33;
                }
                unint64_t v22 = v9[v8];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v23;
          }
        }
LABEL_30:
        unint64_t v12 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      uint64_t v28 = *(void *)(*(void *)(v5 + 48) + 8 * v20);
      long long v31 = *(_OWORD *)(*(void *)(v5 + 56) + 16 * v20);
      if ((a2 & 1) == 0) {
        swift_unknownObjectRetain();
      }
      uint64_t result = sub_251F36C90();
      uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v16 = result & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v14 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v14 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v26 = v17 == v25;
          if (v17 == v25) {
            unint64_t v17 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v14 + 8 * v17);
        }
        while (v27 == -1);
        unint64_t v18 = __clz(__rbit64(~v27)) + (v17 << 6);
      }
      *(void *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(void *)(*(void *)(v7 + 48) + 8 * v18) = v28;
      *(_OWORD *)(*(void *)(v7 + 56) + 16 * v18) = v31;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *unint64_t v3 = v7;
  return result;
}

uint64_t sub_251A088FC(uint64_t a1, char a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CA70);
  uint64_t result = sub_251F366F0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v31 = -1 << v10;
    uint64_t v32 = v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v20 = v19 | (v8 << 6);
      }
      else
      {
        int64_t v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v33) {
          goto LABEL_33;
        }
        unint64_t v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          int64_t v8 = v21 + 1;
          if (v21 + 1 >= v33) {
            goto LABEL_33;
          }
          unint64_t v22 = v9[v8];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v33)
            {
LABEL_33:
              if (a2)
              {
                if (v32 >= 64) {
                  bzero((void *)(v5 + 64), 8 * v33);
                }
                else {
                  *uint64_t v9 = v31;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v8 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_41;
                }
                if (v8 >= v33) {
                  goto LABEL_33;
                }
                unint64_t v22 = v9[v8];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v23;
          }
        }
LABEL_30:
        unint64_t v12 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      uint64_t v28 = 8 * v20;
      uint64_t v29 = *(void *)(*(void *)(v5 + 48) + v28);
      uint64_t v30 = *(void *)(*(void *)(v5 + 56) + v28);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      uint64_t result = sub_251F36C90();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v26 = v16 == v25;
          if (v16 == v25) {
            unint64_t v16 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = 8 * v17;
      *(void *)(*(void *)(v7 + 48) + v18) = v29;
      *(void *)(*(void *)(v7 + 56) + v18) = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *unint64_t v3 = v7;
  return result;
}

uint64_t sub_251A08BB4(uint64_t a1, int a2, uint64_t (*a3)(void), uint64_t *a4, uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  int v43 = a6;
  uint64_t v9 = v6;
  uint64_t v11 = a3(0);
  uint64_t v44 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v40 - v12;
  uint64_t v14 = *v6;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  int v45 = a2;
  uint64_t result = sub_251F366F0();
  uint64_t v16 = result;
  if (*(void *)(v14 + 16))
  {
    int64_t v17 = 0;
    uint64_t v18 = *(void *)(v14 + 64);
    int64_t v42 = (void *)(v14 + 64);
    uint64_t v19 = 1 << *(unsigned char *)(v14 + 32);
    if (v19 < 64) {
      uint64_t v20 = ~(-1 << v19);
    }
    else {
      uint64_t v20 = -1;
    }
    unint64_t v21 = v20 & v18;
    uint64_t v40 = v9;
    int64_t v41 = (unint64_t)(v19 + 63) >> 6;
    uint64_t v22 = result + 64;
    while (1)
    {
      if (v21)
      {
        unint64_t v24 = __clz(__rbit64(v21));
        v21 &= v21 - 1;
        unint64_t v25 = v24 | (v17 << 6);
      }
      else
      {
        int64_t v26 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v42;
        if (v26 >= v41) {
          goto LABEL_34;
        }
        unint64_t v27 = v42[v26];
        ++v17;
        if (!v27)
        {
          int64_t v17 = v26 + 1;
          if (v26 + 1 >= v41) {
            goto LABEL_34;
          }
          unint64_t v27 = v42[v17];
          if (!v27)
          {
            int64_t v28 = v26 + 2;
            if (v28 >= v41)
            {
LABEL_34:
              if ((v45 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v9 = v40;
                goto LABEL_41;
              }
              uint64_t v39 = 1 << *(unsigned char *)(v14 + 32);
              if (v39 >= 64) {
                bzero(v42, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *int64_t v42 = -1 << v39;
              }
              uint64_t v9 = v40;
              *(void *)(v14 + 16) = 0;
              break;
            }
            unint64_t v27 = v42[v28];
            if (!v27)
            {
              while (1)
              {
                int64_t v17 = v28 + 1;
                if (__OFADD__(v28, 1)) {
                  goto LABEL_43;
                }
                if (v17 >= v41) {
                  goto LABEL_34;
                }
                unint64_t v27 = v42[v17];
                ++v28;
                if (v27) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v17 = v28;
          }
        }
LABEL_21:
        unint64_t v21 = (v27 - 1) & v27;
        unint64_t v25 = __clz(__rbit64(v27)) + (v17 << 6);
      }
      uint64_t v29 = *(unsigned __int16 *)(*(void *)(v14 + 48) + 2 * v25);
      uint64_t v30 = *(void *)(v44 + 72);
      uint64_t v31 = *(void *)(v14 + 56) + v30 * v25;
      if (v45) {
        sub_251A1AF1C(v31, (uint64_t)v13, a5);
      }
      else {
        sub_251A1AEB4(v31, (uint64_t)v13, v43);
      }
      uint64_t result = MEMORY[0x2533ABBC0](*(void *)(v16 + 40), v29, 2);
      uint64_t v32 = -1 << *(unsigned char *)(v16 + 32);
      unint64_t v33 = result & ~v32;
      unint64_t v34 = v33 >> 6;
      if (((-1 << v33) & ~*(void *)(v22 + 8 * (v33 >> 6))) != 0)
      {
        unint64_t v23 = __clz(__rbit64((-1 << v33) & ~*(void *)(v22 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v35 = 0;
        unint64_t v36 = (unint64_t)(63 - v32) >> 6;
        do
        {
          if (++v34 == v36 && (v35 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          BOOL v37 = v34 == v36;
          if (v34 == v36) {
            unint64_t v34 = 0;
          }
          v35 |= v37;
          uint64_t v38 = *(void *)(v22 + 8 * v34);
        }
        while (v38 == -1);
        unint64_t v23 = __clz(__rbit64(~v38)) + (v34 << 6);
      }
      *(void *)(v22 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
      *(_WORD *)(*(void *)(v16 + 48) + 2 * v23) = v29;
      uint64_t result = sub_251A1AF1C((uint64_t)v13, *(void *)(v16 + 56) + v30 * v23, a5);
      ++*(void *)(v16 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_41:
  *uint64_t v9 = v16;
  return result;
}

uint64_t sub_251A08F20(uint64_t a1, int a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C9B0);
  int v44 = a2;
  uint64_t v6 = sub_251F366F0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v9 = *(void *)(v5 + 64);
  int v43 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v10 = ~(-1 << v8);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & v9;
  int64_t v41 = v2;
  int64_t v42 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v16 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      int64_t v45 = v14;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v42) {
      break;
    }
    uint64_t v19 = v43;
    unint64_t v20 = v43[v18];
    int64_t v21 = v14 + 1;
    if (!v20)
    {
      int64_t v21 = v14 + 2;
      if (v14 + 2 >= v42) {
        goto LABEL_34;
      }
      unint64_t v20 = v43[v21];
      if (!v20)
      {
        uint64_t v22 = v14 + 3;
        if (v14 + 3 >= v42)
        {
LABEL_34:
          swift_release();
          unint64_t v3 = v41;
          if ((v44 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v20 = v43[v22];
        if (!v20)
        {
          while (1)
          {
            int64_t v21 = v22 + 1;
            if (__OFADD__(v22, 1)) {
              goto LABEL_43;
            }
            if (v21 >= v42) {
              goto LABEL_34;
            }
            unint64_t v20 = v43[v21];
            ++v22;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v21 = v14 + 3;
      }
    }
LABEL_21:
    unint64_t v11 = (v20 - 1) & v20;
    int64_t v45 = v21;
    unint64_t v17 = __clz(__rbit64(v20)) + (v21 << 6);
LABEL_22:
    uint64_t v23 = sub_251F34DA0();
    uint64_t v24 = *(void *)(v23 - 8);
    MEMORY[0x270FA5388](v23);
    int64_t v26 = (char *)&v41 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v28 = *(void *)(v27 + 72);
    unint64_t v29 = *(void *)(v5 + 48) + v28 * v17;
    uint64_t v46 = v30;
    if (v44) {
      (*(void (**)(char *, unint64_t, uint64_t))(v24 + 32))((char *)&v41 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), v29, v23);
    }
    else {
      (*(void (**)(char *, unint64_t, uint64_t))(v24 + 16))((char *)&v41 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), v29, v23);
    }
    uint64_t v31 = v5;
    char v32 = *(unsigned char *)(*(void *)(v5 + 56) + v17);
    sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
    uint64_t result = sub_251F35600();
    uint64_t v33 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v34 = result & ~v33;
    unint64_t v35 = v34 >> 6;
    if (((-1 << v34) & ~*(void *)(v12 + 8 * (v34 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v34) & ~*(void *)(v12 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v36 = 0;
      unint64_t v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v38 = v35 == v37;
        if (v35 == v37) {
          unint64_t v35 = 0;
        }
        v36 |= v38;
        uint64_t v39 = *(void *)(v12 + 8 * v35);
      }
      while (v39 == -1);
      unint64_t v15 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v24 + 32))(*(void *)(v7 + 48) + v28 * v15, v26, v23);
    *(unsigned char *)(*(void *)(v7 + 56) + v15) = v32;
    ++*(void *)(v7 + 16);
    int64_t v14 = v45;
    uint64_t v5 = v31;
  }
  swift_release();
  unint64_t v3 = v41;
  uint64_t v19 = v43;
  if ((v44 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v40 = 1 << *(unsigned char *)(v5 + 32);
  if (v40 >= 64) {
    bzero(v19, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v19 = -1 << v40;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *unint64_t v3 = v7;
  return result;
}

uint64_t sub_251A09324(uint64_t a1, int a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CA38);
  int v44 = a2;
  uint64_t v6 = sub_251F366F0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v9 = *(void *)(v5 + 64);
  int64_t v42 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v10 = ~(-1 << v8);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & v9;
  uint64_t v40 = v2;
  int64_t v41 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  for (i = v5; ; uint64_t v5 = i)
  {
    if (v11)
    {
      unint64_t v16 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v41) {
      break;
    }
    uint64_t v19 = v42;
    unint64_t v20 = v42[v18];
    ++v14;
    if (!v20)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v20 = v42[v14];
      if (!v20)
      {
        int64_t v21 = v18 + 2;
        if (v21 >= v41)
        {
LABEL_34:
          swift_release();
          unint64_t v3 = v40;
          if ((v44 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v20 = v42[v21];
        if (!v20)
        {
          while (1)
          {
            int64_t v14 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_43;
            }
            if (v14 >= v41) {
              goto LABEL_34;
            }
            unint64_t v20 = v42[v14];
            ++v21;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v21;
      }
    }
LABEL_21:
    unint64_t v11 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_22:
    uint64_t v22 = sub_251F34DA0();
    uint64_t v23 = *(void *)(v22 - 8);
    MEMORY[0x270FA5388](v22);
    uint64_t v25 = (char *)&v40 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v27 = *(void *)(v26 + 72);
    unint64_t v28 = *(void *)(v5 + 48) + v27 * v17;
    uint64_t v45 = v29;
    if (v44)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v23 + 32))((char *)&v40 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0), v28, v22);
      uint64_t v30 = *(void **)(*(void *)(v5 + 56) + 8 * v17);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v23 + 16))((char *)&v40 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0), v28, v22);
      uint64_t v30 = *(void **)(*(void *)(v5 + 56) + 8 * v17);
      id v31 = v30;
    }
    sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
    uint64_t result = sub_251F35600();
    uint64_t v32 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v33 = result & ~v32;
    unint64_t v34 = v33 >> 6;
    if (((-1 << v33) & ~*(void *)(v12 + 8 * (v33 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v33) & ~*(void *)(v12 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v35 = 0;
      unint64_t v36 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (++v34 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v37 = v34 == v36;
        if (v34 == v36) {
          unint64_t v34 = 0;
        }
        v35 |= v37;
        uint64_t v38 = *(void *)(v12 + 8 * v34);
      }
      while (v38 == -1);
      unint64_t v15 = __clz(__rbit64(~v38)) + (v34 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v23 + 32))(*(void *)(v7 + 48) + v27 * v15, v25, v22);
    *(void *)(*(void *)(v7 + 56) + 8 * v15) = v30;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  unint64_t v3 = v40;
  uint64_t v19 = v42;
  if ((v44 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v39 = 1 << *(unsigned char *)(v5 + 32);
  if (v39 >= 64) {
    bzero(v19, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v19 = -1 << v39;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *unint64_t v3 = v7;
  return result;
}

uint64_t sub_251A09730(uint64_t a1, int a2)
{
  return sub_251A05F00(a1, a2, &qword_269B9CA40);
}

uint64_t sub_251A0973C(uint64_t a1, int a2)
{
  return sub_251A0465C(a1, a2, &qword_26B21ED90);
}

uint64_t sub_251A09748(uint64_t a1, char a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CA10);
  char v6 = a2;
  uint64_t v7 = sub_251F366F0();
  uint64_t v8 = v7;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v34 = v5 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v5 + 64);
  uint64_t v32 = v2;
  int64_t v33 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v19 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v20 = v19 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v33) {
      break;
    }
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v34 + 8 * v21);
    ++v14;
    if (!v23)
    {
      int64_t v14 = v21 + 1;
      if (v21 + 1 >= v33) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v34 + 8 * v14);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v33)
        {
LABEL_33:
          swift_release();
          unint64_t v3 = v32;
          if ((v6 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v34 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v14 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v33) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v34 + 8 * v14);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v24;
      }
    }
LABEL_30:
    unint64_t v11 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_31:
    char v29 = *(unsigned char *)(*(void *)(v5 + 48) + v20);
    uint64_t v30 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v6 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_251F36CA0();
    ServiceKind.rawValue.getter();
    sub_251F357B0();
    swift_bridgeObjectRelease();
    uint64_t result = sub_251F36D00();
    uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v17 == v26;
        if (v17 == v26) {
          unint64_t v17 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v17);
      }
      while (v28 == -1);
      unint64_t v18 = __clz(__rbit64(~v28)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(unsigned char *)(*(void *)(v8 + 48) + v18) = v29;
    *(void *)(*(void *)(v8 + 56) + 8 * v18) = v30;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  unint64_t v3 = v32;
  uint64_t v22 = (void *)(v5 + 64);
  if ((v6 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
  if (v31 >= 64) {
    bzero(v22, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v22 = -1 << v31;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *unint64_t v3 = v8;
  return result;
}

uint64_t sub_251A09A5C(uint64_t a1, int a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C8F8);
  int v43 = a2;
  uint64_t v6 = sub_251F366F0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v9 = *(void *)(v5 + 64);
  int64_t v41 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v10 = ~(-1 << v8);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & v9;
  uint64_t v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  for (i = v5; ; uint64_t v5 = i)
  {
    if (v11)
    {
      unint64_t v16 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v40) {
      break;
    }
    unint64_t v19 = v41;
    unint64_t v20 = v41[v18];
    ++v14;
    if (!v20)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v40) {
        goto LABEL_34;
      }
      unint64_t v20 = v41[v14];
      if (!v20)
      {
        int64_t v21 = v18 + 2;
        if (v21 >= v40)
        {
LABEL_34:
          swift_release();
          unint64_t v3 = v39;
          if ((v43 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v20 = v41[v21];
        if (!v20)
        {
          while (1)
          {
            int64_t v14 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_43;
            }
            if (v14 >= v40) {
              goto LABEL_34;
            }
            unint64_t v20 = v41[v14];
            ++v21;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v21;
      }
    }
LABEL_21:
    unint64_t v11 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_22:
    uint64_t v22 = sub_251F34DA0();
    uint64_t v23 = *(void *)(v22 - 8);
    MEMORY[0x270FA5388](v22);
    char v25 = (char *)&v39 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v27 = *(void *)(v26 + 72);
    unint64_t v28 = *(void *)(v5 + 48) + v27 * v17;
    uint64_t v44 = v29;
    if (v43)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v23 + 32))((char *)&v39 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0), v28, v22);
      uint64_t v30 = *(void *)(*(void *)(v5 + 56) + 8 * v17);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v23 + 16))((char *)&v39 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0), v28, v22);
      uint64_t v30 = *(void *)(*(void *)(v5 + 56) + 8 * v17);
      swift_retain();
    }
    sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
    uint64_t result = sub_251F35600();
    uint64_t v31 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v12 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v32) & ~*(void *)(v12 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v12 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v15 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v23 + 32))(*(void *)(v7 + 48) + v27 * v15, v25, v22);
    *(void *)(*(void *)(v7 + 56) + 8 * v15) = v30;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  unint64_t v3 = v39;
  unint64_t v19 = v41;
  if ((v43 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v19, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v19 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *unint64_t v3 = v7;
  return result;
}

uint64_t sub_251A09E68(uint64_t a1, int a2)
{
  return sub_251A05F00(a1, a2, &qword_269B9C8F0);
}

uint64_t sub_251A09E74(uint64_t a1, int a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for IconTextValueStringDataHolder();
  uint64_t v37 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
  uint64_t v38 = *(void *)(v8 - 8);
  uint64_t v39 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C9D8);
  int v40 = a2;
  uint64_t v12 = sub_251F366F0();
  uint64_t v13 = (void *)v12;
  if (*(void *)(v11 + 16))
  {
    uint64_t v14 = 1 << *(unsigned char *)(v11 + 32);
    uint64_t v15 = *(void *)(v11 + 64);
    unint64_t v35 = (void *)(v11 + 64);
    if (v14 < 64) {
      uint64_t v16 = ~(-1 << v14);
    }
    else {
      uint64_t v16 = -1;
    }
    unint64_t v17 = v16 & v15;
    unint64_t v33 = v2;
    int64_t v34 = (unint64_t)(v14 + 63) >> 6;
    uint64_t v18 = v12 + 64;
    uint64_t result = swift_retain();
    int64_t v20 = 0;
    for (i = v11; ; uint64_t v11 = i)
    {
      if (v17)
      {
        unint64_t v23 = __clz(__rbit64(v17));
        v17 &= v17 - 1;
        unint64_t v24 = v23 | (v20 << 6);
      }
      else
      {
        int64_t v25 = v20 + 1;
        if (__OFADD__(v20, 1))
        {
          __break(1u);
LABEL_33:
          __break(1u);
          return result;
        }
        uint64_t v26 = v35;
        if (v25 >= v34) {
          goto LABEL_24;
        }
        unint64_t v27 = v35[v25];
        ++v20;
        if (!v27)
        {
          int64_t v20 = v25 + 1;
          if (v25 + 1 >= v34) {
            goto LABEL_24;
          }
          unint64_t v27 = v35[v20];
          if (!v27)
          {
            int64_t v28 = v25 + 2;
            if (v28 >= v34)
            {
LABEL_24:
              swift_release();
              if ((v40 & 1) == 0)
              {
                uint64_t result = swift_release();
                unint64_t v3 = v33;
                goto LABEL_31;
              }
              uint64_t v31 = 1 << *(unsigned char *)(v11 + 32);
              if (v31 >= 64) {
                bzero(v26, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v26 = -1 << v31;
              }
              unint64_t v3 = v33;
              *(void *)(v11 + 16) = 0;
              break;
            }
            unint64_t v27 = v35[v28];
            if (!v27)
            {
              while (1)
              {
                int64_t v20 = v28 + 1;
                if (__OFADD__(v28, 1)) {
                  goto LABEL_33;
                }
                if (v20 >= v34) {
                  goto LABEL_24;
                }
                unint64_t v27 = v35[v20];
                ++v28;
                if (v27) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v20 = v28;
          }
        }
LABEL_21:
        unint64_t v17 = (v27 - 1) & v27;
        unint64_t v24 = __clz(__rbit64(v27)) + (v20 << 6);
      }
      uint64_t v29 = *(void *)(v38 + 72);
      uint64_t v30 = *(void *)(v11 + 48) + v29 * v24;
      if (v40)
      {
        sub_251A1AF1C(v30, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
        uint64_t v21 = *(void *)(v37 + 72);
        sub_251A1AF1C(*(void *)(v11 + 56) + v21 * v24, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
      }
      else
      {
        sub_251A1AEB4(v30, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
        uint64_t v21 = *(void *)(v37 + 72);
        sub_251A1AEB4(*(void *)(v11 + 56) + v21 * v24, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
      }
      sub_251F36CA0();
      StaticAccessory.hash(into:)(v41);
      StaticService.hash(into:)(v41);
      StaticCharacteristic.hash(into:)((uint64_t)v41);
      sub_251F36D00();
      unint64_t v22 = sub_251F36290();
      *(void *)(v18 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      sub_251A1AF1C((uint64_t)v10, v13[6] + v29 * v22, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
      uint64_t result = sub_251A1AF1C((uint64_t)v7, v13[7] + v21 * v22, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
      ++v13[2];
    }
  }
  uint64_t result = swift_release();
LABEL_31:
  *unint64_t v3 = v13;
  return result;
}

uint64_t sub_251A0A2CC(uint64_t a1, char a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C9D0);
  uint64_t result = sub_251F366F0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v30 = a2;
    int64_t v8 = 0;
    uint64_t v31 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v12 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v16 = v15 | (v8 << 6);
      }
      else
      {
        int64_t v17 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v17 >= v12) {
          goto LABEL_31;
        }
        unint64_t v18 = v31[v17];
        ++v8;
        if (!v18)
        {
          int64_t v8 = v17 + 1;
          if (v17 + 1 >= v12) {
            goto LABEL_31;
          }
          unint64_t v18 = v31[v8];
          if (!v18)
          {
            int64_t v19 = v17 + 2;
            if (v19 >= v12)
            {
LABEL_31:
              if ((v30 & 1) == 0)
              {
                uint64_t result = swift_release();
                unint64_t v3 = v2;
                goto LABEL_38;
              }
              uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
              if (v29 >= 64) {
                bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v31 = -1 << v29;
              }
              unint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v18 = v31[v19];
            if (!v18)
            {
              while (1)
              {
                int64_t v8 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v12) {
                  goto LABEL_31;
                }
                unint64_t v18 = v31[v8];
                ++v19;
                if (v18) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v19;
          }
        }
LABEL_21:
        unint64_t v11 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v8 << 6);
      }
      char v20 = *(unsigned char *)(*(void *)(v5 + 48) + v16);
      uint64_t v21 = *(void *)(*(void *)(v5 + 56) + 8 * v16);
      sub_251F36CA0();
      sub_251F36CB0();
      uint64_t result = sub_251F36D00();
      uint64_t v22 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v13 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v23) & ~*(void *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v13 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v14 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(unsigned char *)(*(void *)(v7 + 48) + v14) = v20;
      *(void *)(*(void *)(v7 + 56) + 8 * v14) = v21;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  *unint64_t v3 = v7;
  return result;
}

uint64_t sub_251A0A594(uint64_t a1, char a2, uint64_t *a3)
{
  unint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  char v37 = a2;
  uint64_t v7 = sub_251F366F0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v36 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  int64_t v35 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v35) {
      break;
    }
    unint64_t v23 = (void *)(v6 + 64);
    unint64_t v24 = *(void *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v36 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_33:
          swift_release();
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v35) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v36 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v11 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    char v30 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void *)(*(void *)(v6 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_251F36CA0();
    sub_251F357B0();
    uint64_t result = sub_251F36D00();
    uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    int64_t v19 = (void *)(*(void *)(v8 + 48) + 16 * v18);
    *int64_t v19 = v32;
    v19[1] = v31;
    *(void *)(*(void *)(v8 + 56) + 8 * v18) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  unint64_t v23 = (void *)(v6 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v6 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v34;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *unint64_t v4 = v8;
  return result;
}

uint64_t sub_251A0A8A8(uint64_t a1, char a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C988);
  char v37 = a2;
  uint64_t v6 = sub_251F366F0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  int64_t v35 = v2;
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    unint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v36 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          unint64_t v3 = v35;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v36 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    char v30 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void *)(*(void *)(v5 + 56) + 8 * v21);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_251F36CA0();
    sub_251F357B0();
    uint64_t result = sub_251F36D00();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    int64_t v19 = (void *)(*(void *)(v7 + 48) + 16 * v18);
    *int64_t v19 = v32;
    v19[1] = v31;
    *(void *)(*(void *)(v7 + 56) + 8 * v18) = v33;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  unint64_t v3 = v35;
  unint64_t v23 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *unint64_t v3 = v7;
  return result;
}

uint64_t sub_251A0ABB0(uint64_t a1, int a2)
{
  return sub_251A06A8C(a1, a2, &qword_269B9C928, (void (*)(unint64_t, unsigned char *))sub_251A1A444);
}

uint64_t sub_251A0ABD0(uint64_t a1, int a2)
{
  return sub_251A01888(a1, a2, (uint64_t (*)(void))type metadata accessor for StaticLightProfile, &qword_269B9C9A0, (uint64_t (*)(void))type metadata accessor for StaticLightProfile, (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
}

uint64_t sub_251A0AC18(uint64_t a1, char a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = _s7MergeIdVMa();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CA28);
  unint64_t v10 = (void *)sub_251F366F0();
  if (*(void *)(v9 + 16))
  {
    unint64_t v27 = v3;
    uint64_t v11 = 1 << *(unsigned char *)(v9 + 32);
    uint64_t v12 = (void *)(v9 + 64);
    uint64_t v13 = -1;
    if (v11 < 64) {
      uint64_t v13 = ~(-1 << v11);
    }
    unint64_t v14 = v13 & *(void *)(v9 + 64);
    int64_t v15 = (unint64_t)(v11 + 63) >> 6;
    uint64_t result = swift_retain();
    int64_t v17 = 0;
    while (1)
    {
      if (v14)
      {
        unint64_t v19 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        unint64_t v20 = v19 | (v17 << 6);
      }
      else
      {
        int64_t v21 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
          __break(1u);
LABEL_32:
          __break(1u);
          return result;
        }
        if (v21 >= v15) {
          goto LABEL_23;
        }
        unint64_t v22 = v12[v21];
        ++v17;
        if (!v22)
        {
          int64_t v17 = v21 + 1;
          if (v21 + 1 >= v15) {
            goto LABEL_23;
          }
          unint64_t v22 = v12[v17];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v15)
            {
LABEL_23:
              swift_release();
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                unint64_t v3 = v27;
                goto LABEL_30;
              }
              uint64_t v25 = 1 << *(unsigned char *)(v9 + 32);
              if (v25 >= 64) {
                bzero((void *)(v9 + 64), ((unint64_t)(v25 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v12 = -1 << v25;
              }
              unint64_t v3 = v27;
              *(void *)(v9 + 16) = 0;
              break;
            }
            unint64_t v22 = v12[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v17 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_32;
                }
                if (v17 >= v15) {
                  goto LABEL_23;
                }
                unint64_t v22 = v12[v17];
                ++v23;
                if (v22) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v17 = v23;
          }
        }
LABEL_20:
        unint64_t v14 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v17 << 6);
      }
      uint64_t v24 = *(void *)(v9 + 48) + *(void *)(v6 + 72) * v20;
      if (a2)
      {
        sub_251A1AF1C(v24, (uint64_t)v8, (uint64_t (*)(void))_s7MergeIdVMa);
        uint64_t v18 = *(void *)(*(void *)(v9 + 56) + 8 * v20);
      }
      else
      {
        sub_251A1AEB4(v24, (uint64_t)v8, (uint64_t (*)(void))_s7MergeIdVMa);
        uint64_t v18 = *(void *)(*(void *)(v9 + 56) + 8 * v20);
        swift_bridgeObjectRetain();
      }
      uint64_t result = sub_251A10F40((uint64_t)v8, v18, v10);
    }
  }
  uint64_t result = swift_release();
LABEL_30:
  *unint64_t v3 = v10;
  return result;
}

uint64_t sub_251A0AED8(uint64_t a1, char a2)
{
  return sub_251A0AEE4(a1, a2, &qword_269B9C8B0);
}

uint64_t sub_251A0AEE4(uint64_t a1, char a2, uint64_t *a3)
{
  unint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  char v36 = a2;
  uint64_t v7 = sub_251F366F0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v33 = v3;
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v35 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  int64_t v34 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  swift_retain();
  int64_t v13 = 0;
LABEL_8:
  if (v11)
  {
    unint64_t v15 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    unint64_t v16 = v15 | (v13 << 6);
    goto LABEL_22;
  }
  int64_t v17 = v13 + 1;
  if (__OFADD__(v13, 1)) {
    goto LABEL_41;
  }
  if (v17 >= v34)
  {
    swift_release();
    unint64_t v4 = v33;
    uint64_t v18 = (void *)(v6 + 64);
    if (v36)
    {
LABEL_36:
      uint64_t v31 = 1 << *(unsigned char *)(v6 + 32);
      if (v31 >= 64) {
        bzero(v18, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
      }
      else {
        *uint64_t v18 = -1 << v31;
      }
      *(void *)(v6 + 16) = 0;
    }
  }
  else
  {
    uint64_t v18 = (void *)(v6 + 64);
    unint64_t v19 = *(void *)(v35 + 8 * v17);
    ++v13;
    if (v19) {
      goto LABEL_21;
    }
    int64_t v13 = v17 + 1;
    if (v17 + 1 >= v34) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v35 + 8 * v13);
    if (v19)
    {
LABEL_21:
      unint64_t v11 = (v19 - 1) & v19;
      unint64_t v16 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_22:
      char v21 = *(unsigned char *)(*(void *)(v6 + 48) + v16);
      uint64_t v22 = *(void *)(*(void *)(v6 + 56) + 8 * v16);
      if ((v36 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_251F36CA0();
      sub_251F357B0();
      swift_bridgeObjectRelease();
      uint64_t v23 = sub_251F36D00();
      uint64_t v24 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v25 = v23 & ~v24;
      unint64_t v26 = v25 >> 6;
      if (((-1 << v25) & ~*(void *)(v12 + 8 * (v25 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v25) & ~*(void *)(v12 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_7;
      }
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v24) >> 6;
      while (++v26 != v28 || (v27 & 1) == 0)
      {
        BOOL v29 = v26 == v28;
        if (v26 == v28) {
          unint64_t v26 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v12 + 8 * v26);
        if (v30 != -1)
        {
          unint64_t v14 = __clz(__rbit64(~v30)) + (v26 << 6);
LABEL_7:
          *(void *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
          *(unsigned char *)(*(void *)(v8 + 48) + v14) = v21;
          *(void *)(*(void *)(v8 + 56) + 8 * v14) = v22;
          ++*(void *)(v8 + 16);
          goto LABEL_8;
        }
      }
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      JUMPOUT(0x251A0B2C0);
    }
    int64_t v20 = v17 + 2;
    if (v20 < v34)
    {
      unint64_t v19 = *(void *)(v35 + 8 * v20);
      if (!v19)
      {
        while (1)
        {
          int64_t v13 = v20 + 1;
          if (__OFADD__(v20, 1)) {
            goto LABEL_42;
          }
          if (v13 >= v34) {
            goto LABEL_33;
          }
          unint64_t v19 = *(void *)(v35 + 8 * v13);
          ++v20;
          if (v19) {
            goto LABEL_21;
          }
        }
      }
      int64_t v13 = v20;
      goto LABEL_21;
    }
LABEL_33:
    swift_release();
    unint64_t v4 = v33;
    if (v36) {
      goto LABEL_36;
    }
  }
LABEL_40:
  uint64_t result = swift_release();
  *unint64_t v4 = v8;
  return result;
}

uint64_t sub_251A0B2E0(uint64_t a1, char a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C9C8);
  uint64_t result = sub_251F366F0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v32 = a2;
    int64_t v8 = 0;
    uint64_t v33 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v12 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v17 = v16 | (v8 << 6);
      }
      else
      {
        int64_t v18 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v18 >= v12) {
          goto LABEL_31;
        }
        unint64_t v19 = v33[v18];
        ++v8;
        if (!v19)
        {
          int64_t v8 = v18 + 1;
          if (v18 + 1 >= v12) {
            goto LABEL_31;
          }
          unint64_t v19 = v33[v8];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v12)
            {
LABEL_31:
              if ((v32 & 1) == 0)
              {
                uint64_t result = swift_release();
                unint64_t v3 = v2;
                goto LABEL_38;
              }
              uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
              if (v31 >= 64) {
                bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v33 = -1 << v31;
              }
              unint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v19 = v33[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v8 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v12) {
                  goto LABEL_31;
                }
                unint64_t v19 = v33[v8];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v20;
          }
        }
LABEL_21:
        unint64_t v11 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v8 << 6);
      }
      uint64_t v21 = 8 * v17;
      uint64_t v22 = *(void *)(*(void *)(v5 + 48) + v21);
      uint64_t v23 = *(void *)(*(void *)(v5 + 56) + v21);
      sub_251F36CA0();
      sub_251F36CB0();
      uint64_t result = sub_251F36D00();
      uint64_t v24 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v25 = result & ~v24;
      unint64_t v26 = v25 >> 6;
      if (((-1 << v25) & ~*(void *)(v13 + 8 * (v25 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v25) & ~*(void *)(v13 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v27 = 0;
        unint64_t v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v29 = v26 == v28;
          if (v26 == v28) {
            unint64_t v26 = 0;
          }
          v27 |= v29;
          uint64_t v30 = *(void *)(v13 + 8 * v26);
        }
        while (v30 == -1);
        unint64_t v14 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(void *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      uint64_t v15 = 8 * v14;
      *(void *)(*(void *)(v7 + 48) + v15) = v22;
      *(void *)(*(void *)(v7 + 56) + v15) = v23;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  *unint64_t v3 = v7;
  return result;
}

uint64_t sub_251A0B5B0(uint64_t a1, char a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C8A0);
  uint64_t v6 = sub_251F366F0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v11) {
      break;
    }
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v14;
    if (!v23)
    {
      int64_t v14 = v21 + 1;
      if (v21 + 1 >= v11) {
        goto LABEL_34;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v14);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v11)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v14 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v14 >= v11) {
              goto LABEL_34;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v14);
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v24;
      }
    }
LABEL_21:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_22:
    uint64_t v25 = *(void *)(v5 + 48) + 40 * v20;
    if (a2)
    {
      long long v26 = *(_OWORD *)v25;
      long long v27 = *(_OWORD *)(v25 + 16);
      uint64_t v40 = *(void *)(v25 + 32);
      long long v38 = v26;
      long long v39 = v27;
      sub_251A0D578((_OWORD *)(*(void *)(v5 + 56) + 32 * v20), v37);
    }
    else
    {
      sub_251A1A45C(v25, (uint64_t)&v38);
      sub_251A0D51C(*(void *)(v5 + 56) + 32 * v20, (uint64_t)v37);
    }
    uint64_t result = sub_251F36380();
    uint64_t v28 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v12 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v29) & ~*(void *)(v12 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v33 = v30 == v32;
        if (v30 == v32) {
          unint64_t v30 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v12 + 8 * v30);
      }
      while (v34 == -1);
      unint64_t v15 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t v16 = *(void *)(v7 + 48) + 40 * v15;
    long long v17 = v38;
    long long v18 = v39;
    *(void *)(v16 + 32) = v40;
    *(_OWORD *)uint64_t v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    uint64_t result = (uint64_t)sub_251A0D578(v37, (_OWORD *)(*(void *)(v7 + 56) + 32 * v15));
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v22 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v22 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *unint64_t v3 = v7;
  return result;
}

uint64_t sub_251A0B8C8(uint64_t a1, int a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C890);
  int v49 = a2;
  uint64_t v6 = sub_251F366F0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v9 = *(void *)(v5 + 64);
  long long v47 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v10 = ~(-1 << v8);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & v9;
  uint64_t v45 = v2;
  int64_t v46 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  for (i = v5; ; uint64_t v5 = i)
  {
    if (v11)
    {
      unint64_t v17 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      int64_t v50 = v14;
      unint64_t v18 = v17 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v19 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v19 >= v46) {
      break;
    }
    unint64_t v20 = v47;
    unint64_t v21 = v47[v19];
    int64_t v22 = v14 + 1;
    if (!v21)
    {
      int64_t v22 = v14 + 2;
      if (v14 + 2 >= v46) {
        goto LABEL_34;
      }
      unint64_t v21 = v47[v22];
      if (!v21)
      {
        uint64_t v23 = v14 + 3;
        if (v14 + 3 >= v46)
        {
LABEL_34:
          swift_release();
          unint64_t v3 = v45;
          if ((v49 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v21 = v47[v23];
        if (!v21)
        {
          while (1)
          {
            int64_t v22 = v23 + 1;
            if (__OFADD__(v23, 1)) {
              goto LABEL_43;
            }
            if (v22 >= v46) {
              goto LABEL_34;
            }
            unint64_t v21 = v47[v22];
            ++v23;
            if (v21) {
              goto LABEL_21;
            }
          }
        }
        int64_t v22 = v14 + 3;
      }
    }
LABEL_21:
    unint64_t v11 = (v21 - 1) & v21;
    int64_t v50 = v22;
    unint64_t v18 = __clz(__rbit64(v21)) + (v22 << 6);
LABEL_22:
    uint64_t v24 = sub_251F34DA0();
    uint64_t v25 = *(void *)(v24 - 8);
    MEMORY[0x270FA5388](v24);
    long long v27 = (char *)&v44 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v29 = *(void *)(v28 + 72);
    unint64_t v30 = *(void *)(v5 + 48) + v29 * v18;
    uint64_t v51 = v31;
    if (v49)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v25 + 32))((char *)&v44 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0), v30, v24);
      unint64_t v32 = (uint64_t *)(*(void *)(v5 + 56) + 16 * v18);
      uint64_t v33 = *v32;
      uint64_t v34 = v32[1];
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v25 + 16))((char *)&v44 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0), v30, v24);
      uint64_t v35 = (uint64_t *)(*(void *)(v5 + 56) + 16 * v18);
      uint64_t v33 = *v35;
      uint64_t v34 = v35[1];
      swift_bridgeObjectRetain();
    }
    sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
    uint64_t result = sub_251F35600();
    uint64_t v36 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v37 = result & ~v36;
    unint64_t v38 = v37 >> 6;
    if (((-1 << v37) & ~*(void *)(v12 + 8 * (v37 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v37) & ~*(void *)(v12 + 8 * (v37 >> 6)))) | v37 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v39 = 0;
      unint64_t v40 = (unint64_t)(63 - v36) >> 6;
      do
      {
        if (++v38 == v40 && (v39 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v41 = v38 == v40;
        if (v38 == v40) {
          unint64_t v38 = 0;
        }
        v39 |= v41;
        uint64_t v42 = *(void *)(v12 + 8 * v38);
      }
      while (v42 == -1);
      unint64_t v15 = __clz(__rbit64(~v42)) + (v38 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v25 + 32))(*(void *)(v7 + 48) + v29 * v15, v27, v24);
    uint64_t v16 = (void *)(*(void *)(v7 + 56) + 16 * v15);
    *uint64_t v16 = v33;
    v16[1] = v34;
    ++*(void *)(v7 + 16);
    int64_t v14 = v50;
  }
  swift_release();
  unint64_t v3 = v45;
  unint64_t v20 = v47;
  if ((v49 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v43 = 1 << *(unsigned char *)(v5 + 32);
  if (v43 >= 64) {
    bzero(v20, ((unint64_t)(v43 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v20 = -1 << v43;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *unint64_t v3 = v7;
  return result;
}

uint64_t sub_251A0BCE8(uint64_t a1, uint64_t a2, char a3)
{
  return sub_251A0E9DC(a1, a2, a3, &qword_269B9CAE0);
}

uint64_t sub_251A0BCF4(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_2519FE994(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 >= v13 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v16 = *v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t v18 = type metadata accessor for StaticService();
      return sub_251A1B0C0(a1, v17 + *(void *)(*(void *)(v18 - 8) + 72) * v10, (uint64_t (*)(void))type metadata accessor for StaticService);
    }
    goto LABEL_11;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_251A11F14((uint64_t (*)(void))type metadata accessor for StaticService, &qword_26B21F1B8, (uint64_t (*)(void))type metadata accessor for StaticService, (uint64_t (*)(void))type metadata accessor for StaticService);
    goto LABEL_7;
  }
  sub_251A01888(v13, a3 & 1, (uint64_t (*)(void))type metadata accessor for StaticService, &qword_26B21F1B8, (uint64_t (*)(void))type metadata accessor for StaticService, (uint64_t (*)(void))type metadata accessor for StaticService);
  unint64_t v20 = sub_2519FE994(a2);
  if ((v14 & 1) != (v21 & 1))
  {
LABEL_14:
    sub_251F34DA0();
    uint64_t result = sub_251F36BA0();
    __break(1u);
    return result;
  }
  unint64_t v10 = v20;
  uint64_t v16 = *v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:
  uint64_t v22 = sub_251F34DA0();
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)&v26 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v25 + 16))(v24, a2);
  return sub_251A111B8(v10, (uint64_t)v24, a1, v16, (uint64_t (*)(void))type metadata accessor for StaticService, (uint64_t (*)(void))type metadata accessor for StaticService);
}

uint64_t sub_251A0BF78(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_2519FE994(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 >= v13 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v16 = *v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t v18 = type metadata accessor for StaticMediaSystem();
      return sub_251A1B0C0(a1, v17 + *(void *)(*(void *)(v18 - 8) + 72) * v10, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
    }
    goto LABEL_11;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_251A11F14((uint64_t (*)(void))type metadata accessor for StaticMediaSystem, &qword_269B9C918, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
    goto LABEL_7;
  }
  sub_251A01888(v13, a3 & 1, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem, &qword_269B9C918, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
  unint64_t v20 = sub_2519FE994(a2);
  if ((v14 & 1) != (v21 & 1))
  {
LABEL_14:
    sub_251F34DA0();
    uint64_t result = sub_251F36BA0();
    __break(1u);
    return result;
  }
  unint64_t v10 = v20;
  uint64_t v16 = *v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:
  uint64_t v22 = sub_251F34DA0();
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)&v26 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v25 + 16))(v24, a2);
  return sub_251A111B8(v10, (uint64_t)v24, a1, v16, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
}

uint64_t sub_251A0C1FC(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_2519FE994(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 >= v13 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v16 = *v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t v18 = type metadata accessor for StaticMediaProfile();
      return sub_251A1B0C0(a1, v17 + *(void *)(*(void *)(v18 - 8) + 72) * v10, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
    }
    goto LABEL_11;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_251A11F14((uint64_t (*)(void))type metadata accessor for StaticMediaProfile, &qword_26B21F1D0, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
    goto LABEL_7;
  }
  sub_251A01888(v13, a3 & 1, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile, &qword_26B21F1D0, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
  unint64_t v20 = sub_2519FE994(a2);
  if ((v14 & 1) != (v21 & 1))
  {
LABEL_14:
    sub_251F34DA0();
    uint64_t result = sub_251F36BA0();
    __break(1u);
    return result;
  }
  unint64_t v10 = v20;
  uint64_t v16 = *v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:
  uint64_t v22 = sub_251F34DA0();
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)&v26 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v25 + 16))(v24, a2);
  return sub_251A111B8(v10, (uint64_t)v24, a1, v16, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
}

uint64_t sub_251A0C480(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_2519FE994(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 >= v13 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v16 = *v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t v18 = type metadata accessor for StaticAccessory(0);
      return sub_251A1B0C0(a1, v17 + *(void *)(*(void *)(v18 - 8) + 72) * v10, type metadata accessor for StaticAccessory);
    }
    goto LABEL_11;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_251A11F14(type metadata accessor for StaticAccessory, &qword_26B21F1C8, type metadata accessor for StaticAccessory, type metadata accessor for StaticAccessory);
    goto LABEL_7;
  }
  sub_251A01888(v13, a3 & 1, type metadata accessor for StaticAccessory, &qword_26B21F1C8, type metadata accessor for StaticAccessory, type metadata accessor for StaticAccessory);
  unint64_t v20 = sub_2519FE994(a2);
  if ((v14 & 1) != (v21 & 1))
  {
LABEL_14:
    sub_251F34DA0();
    uint64_t result = sub_251F36BA0();
    __break(1u);
    return result;
  }
  unint64_t v10 = v20;
  uint64_t v16 = *v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:
  uint64_t v22 = sub_251F34DA0();
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)&v26 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v25 + 16))(v24, a2);
  return sub_251A111B8(v10, (uint64_t)v24, a1, v16, type metadata accessor for StaticAccessory, type metadata accessor for StaticAccessory);
}

uint64_t sub_251A0C704(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_2519FE994(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 >= v13 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v16 = *v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t v18 = type metadata accessor for StaticHH2Update(0);
      return sub_251A1B0C0(a1, v17 + *(void *)(*(void *)(v18 - 8) + 72) * v10, type metadata accessor for StaticHH2Update);
    }
    goto LABEL_11;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_251A11F14(type metadata accessor for StaticHH2Update, &qword_269B9CAC8, type metadata accessor for StaticHH2Update, type metadata accessor for StaticHH2Update);
    goto LABEL_7;
  }
  sub_251A01888(v13, a3 & 1, type metadata accessor for StaticHH2Update, &qword_269B9CAC8, type metadata accessor for StaticHH2Update, type metadata accessor for StaticHH2Update);
  unint64_t v20 = sub_2519FE994(a2);
  if ((v14 & 1) != (v21 & 1))
  {
LABEL_14:
    sub_251F34DA0();
    uint64_t result = sub_251F36BA0();
    __break(1u);
    return result;
  }
  unint64_t v10 = v20;
  uint64_t v16 = *v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:
  uint64_t v22 = sub_251F34DA0();
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)&v26 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v25 + 16))(v24, a2);
  return sub_251A111B8(v10, (uint64_t)v24, a1, v16, type metadata accessor for StaticHH2Update, type metadata accessor for StaticHH2Update);
}

uint64_t sub_251A0C988(uint64_t a1, unsigned __int8 a2, char a3)
{
  unint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_2519FE754(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_251A17968(&qword_269B9C910);
LABEL_7:
    uint64_t v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    *(unsigned char *)(v16[6] + v10) = a2;
    *(void *)(v16[7] + 8 * v10) = a1;
    uint64_t v19 = v16[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (!v20)
    {
      v16[2] = v21;
      return result;
    }
    goto LABEL_14;
  }
  sub_251A0AEE4(result, a3 & 1, &qword_269B9C910);
  uint64_t result = sub_2519FE754(a2);
  if ((v14 & 1) == (v18 & 1))
  {
    unint64_t v10 = result;
    uint64_t v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_251F36BA0();
  __break(1u);
  return result;
}

uint64_t sub_251A0CAD0(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_2519FE994(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 >= v13 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v16 = *v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t v18 = type metadata accessor for StateSnapshot(0);
      return sub_251A1B0C0(a1, v17 + *(void *)(*(void *)(v18 - 8) + 72) * v10, type metadata accessor for StateSnapshot);
    }
    goto LABEL_11;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_251A11F14(type metadata accessor for StateSnapshot, &qword_26B21EB60, type metadata accessor for StateSnapshot, type metadata accessor for StateSnapshot);
    goto LABEL_7;
  }
  sub_251A01888(v13, a3 & 1, type metadata accessor for StateSnapshot, &qword_26B21EB60, type metadata accessor for StateSnapshot, type metadata accessor for StateSnapshot);
  unint64_t v20 = sub_2519FE994(a2);
  if ((v14 & 1) != (v21 & 1))
  {
LABEL_14:
    sub_251F34DA0();
    uint64_t result = sub_251F36BA0();
    __break(1u);
    return result;
  }
  unint64_t v10 = v20;
  uint64_t v16 = *v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:
  uint64_t v22 = sub_251F34DA0();
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)&v26 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v25 + 16))(v24, a2);
  return sub_251A111B8(v10, (uint64_t)v24, a1, v16, type metadata accessor for StateSnapshot, type metadata accessor for StateSnapshot);
}

uint64_t sub_251A0CD54(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_2519FE994(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 >= result && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v16 = *v4;
    if (v14)
    {
LABEL_8:
      *(void *)(v16[7] + 8 * v10) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_251A12544();
    goto LABEL_7;
  }
  sub_251A01FC8(result, a3 & 1);
  uint64_t result = sub_2519FE994(a2);
  if ((v14 & 1) != (v17 & 1))
  {
LABEL_14:
    sub_251F34DA0();
    uint64_t result = sub_251F36BA0();
    __break(1u);
    return result;
  }
  unint64_t v10 = result;
  uint64_t v16 = *v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:
  uint64_t v18 = sub_251F34DA0();
  MEMORY[0x270FA5388](v18);
  unint64_t v20 = (char *)&v22 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v21 + 16))(v20, a2);
  return sub_251A112AC(v10, (uint64_t)v20, a1, v16);
}

id sub_251A0CEF0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5, char a6)
{
  uint64_t v7 = v6;
  uint64_t v13 = *v6;
  unint64_t v15 = sub_2519FE68C((uint64_t)a5);
  uint64_t v16 = *(void *)(v13 + 16);
  BOOL v17 = (v14 & 1) == 0;
  uint64_t v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v19 = v14;
  uint64_t v20 = *(void *)(v13 + 24);
  if (v20 >= v18 && (a6 & 1) != 0) {
    goto LABEL_7;
  }
  if (v20 >= v18 && (a6 & 1) == 0)
  {
    sub_251A127FC();
LABEL_7:
    uint64_t v21 = (void *)*v7;
    if (v19)
    {
LABEL_8:
      uint64_t v22 = v21[7] + 32 * v15;
      id result = (id)sub_251A1A5A4(*(void *)v22, *(void *)(v22 + 8), *(void *)(v22 + 16), *(unsigned char *)(v22 + 24));
      *(void *)uint64_t v22 = a1;
      *(void *)(v22 + 8) = a2;
      *(void *)(v22 + 16) = a3;
      *(unsigned char *)(v22 + 24) = a4;
      return result;
    }
    goto LABEL_11;
  }
  sub_251A023CC(v18, a6 & 1);
  unint64_t v24 = sub_2519FE68C((uint64_t)a5);
  if ((v19 & 1) != (v25 & 1))
  {
LABEL_17:
    sub_251A1A568(0, (unint64_t *)&qword_26B21F170);
    id result = (id)sub_251F36BA0();
    __break(1u);
    return result;
  }
  unint64_t v15 = v24;
  uint64_t v21 = (void *)*v7;
  if (v19) {
    goto LABEL_8;
  }
LABEL_11:
  v21[(v15 >> 6) + 8] |= 1 << v15;
  *(void *)(v21[6] + 8 * v15) = a5;
  uint64_t v26 = v21[7] + 32 * v15;
  *(void *)uint64_t v26 = a1;
  *(void *)(v26 + 8) = a2;
  *(void *)(v26 + 16) = a3;
  *(unsigned char *)(v26 + 24) = a4;
  uint64_t v27 = v21[2];
  BOOL v28 = __OFADD__(v27, 1);
  uint64_t v29 = v27 + 1;
  if (v28)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  void v21[2] = v29;

  return a5;
}

uint64_t sub_251A0D0A0(uint64_t a1, char a2, char a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_2519FE614(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_251A12A30();
      goto LABEL_7;
    }
    sub_251A02714(v13, a3 & 1);
    unint64_t v19 = sub_2519FE614(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      unint64_t v10 = v19;
      uint64_t v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_251F36BA0();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v16 = *v4;
  if (v14)
  {
LABEL_8:
    uint64_t v17 = v16[7] + (v10 << 8);
    return sub_251A1B008(a1, v17);
  }
LABEL_13:

  return sub_251A11364(v10, a2, a1, v16);
}

uint64_t sub_251A0D1D0(uint64_t a1, __int16 a2, char a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_2519FE5CC(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    char v14 = v9;
    uint64_t v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      uint64_t v16 = *v4;
      if (v14)
      {
LABEL_8:
        uint64_t v17 = v16[7];
        uint64_t v18 = type metadata accessor for StaticEndpoint();
        return sub_251A1B0C0(a1, v17 + *(void *)(*(void *)(v18 - 8) + 72) * v10, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
      }
      return sub_251A11B28(v10, a2, a1, v16, (uint64_t (*)(void))type metadata accessor for StaticEndpoint, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_251A15D74((uint64_t (*)(void))type metadata accessor for StaticEndpoint, &qword_269B9CB30, (uint64_t (*)(void))type metadata accessor for StaticEndpoint, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
      goto LABEL_7;
    }
    sub_251A08BB4(v13, a3 & 1, (uint64_t (*)(void))type metadata accessor for StaticEndpoint, &qword_269B9CB30, (uint64_t (*)(void))type metadata accessor for StaticEndpoint, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
    unint64_t v20 = sub_2519FE5CC(a2);
    if ((v14 & 1) == (v21 & 1))
    {
      unint64_t v10 = v20;
      uint64_t v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
      return sub_251A11B28(v10, a2, a1, v16, (uint64_t (*)(void))type metadata accessor for StaticEndpoint, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
    }
  }
  uint64_t result = sub_251F36BA0();
  __break(1u);
  return result;
}

_OWORD *sub_251A0D3B4(_OWORD *a1, uint64_t a2, char a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_2519FEF28(a2, (void (*)(uint64_t))CharacteristicKind.rawValue.getter, (uint64_t (*)(void))CharacteristicKind.rawValue.getter);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_251A13A5C(&qword_269B9CB48);
      goto LABEL_7;
    }
    sub_251A014E8(v13, a3 & 1);
    unint64_t v19 = sub_2519FEF28(a2, (void (*)(uint64_t))CharacteristicKind.rawValue.getter, (uint64_t (*)(void))CharacteristicKind.rawValue.getter);
    if ((v14 & 1) == (v20 & 1))
    {
      unint64_t v10 = v19;
      uint64_t v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
      return sub_251A11530(v10, a2, a1, v16);
    }
LABEL_15:
    uint64_t result = (_OWORD *)sub_251F36BA0();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v16 = *v4;
  if ((v14 & 1) == 0) {
    return sub_251A11530(v10, a2, a1, v16);
  }
LABEL_8:
  uint64_t v17 = (_OWORD *)(v16[7] + 32 * v10);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v17);

  return sub_251A0D578(a1, v17);
}

uint64_t sub_251A0D51C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

_OWORD *sub_251A0D578(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

void sub_251A0D588(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_2519FE798(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_251A12C40();
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];

      *(void *)(v19 + 8 * v12) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_251A02A6C(v15, a4 & 1);
  unint64_t v20 = sub_2519FE798(a2, a3);
  if ((v16 & 1) != (v21 & 1))
  {
LABEL_17:
    sub_251F36BA0();
    __break(1u);
    return;
  }
  unint64_t v12 = v20;
  uint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  uint64_t v22 = (uint64_t *)(v18[6] + 16 * v12);
  *uint64_t v22 = a2;
  v22[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v23 = v18[2];
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18[2] = v25;

  swift_bridgeObjectRetain();
}

unint64_t sub_251A0D6F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6 = (void **)v5;
  unint64_t v12 = (void *)*v5;
  unint64_t v14 = sub_2519FE588(a4);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a5 & 1) != 0)
  {
LABEL_7:
    unint64_t v20 = *v6;
    if (v18)
    {
LABEL_8:
      char v21 = (uint64_t *)(v20[7] + 24 * v14);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t result = swift_bridgeObjectRelease();
      *char v21 = a1;
      v21[1] = a2;
      void v21[2] = a3;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_251A12FAC();
    goto LABEL_7;
  }
  sub_251A03098(v17, a5 & 1);
  unint64_t v23 = sub_2519FE588(a4);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_15:
    unint64_t result = sub_251F36BA0();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  unint64_t v20 = *v6;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:

  return sub_251A113CC(v14, a4, a1, a2, a3, v20);
}

uint64_t sub_251A0D858(uint64_t a1, unsigned __int16 a2, char a3)
{
  return sub_251A0D870(a1, a2, a3, &qword_269B9CAA0);
}

uint64_t sub_251A0D864(uint64_t a1, unsigned __int16 a2, char a3)
{
  return sub_251A0D870(a1, a2, a3, &qword_269B9C960);
}

uint64_t sub_251A0D870(uint64_t a1, unsigned __int16 a2, char a3, uint64_t *a4)
{
  uint64_t v6 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_2519FE5CC(a2);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_251A13DF4(a4);
LABEL_7:
    char v18 = (void *)*v6;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(_WORD *)(v18[6] + 2 * v12) = a2;
    *(void *)(v18[7] + 8 * v12) = a1;
    uint64_t v21 = v18[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (!v22)
    {
      v18[2] = v23;
      return result;
    }
    goto LABEL_14;
  }
  sub_251A0520C(result, a3 & 1, a4);
  uint64_t result = sub_2519FE5CC(a2);
  if ((v16 & 1) == (v20 & 1))
  {
    unint64_t v12 = result;
    char v18 = (void *)*v6;
    if (v16) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_251F36BA0();
  __break(1u);
  return result;
}

int64_t sub_251A0D9B4(uint64_t a1, char a2, char a3)
{
  return sub_251A0D9D4(a1, a2, a3, &qword_269B9C978, (void (*)(void))sub_251A0337C);
}

int64_t sub_251A0D9D4(uint64_t a1, char a2, char a3, uint64_t *a4, void (*a5)(void))
{
  uint64_t v8 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_2519FE614(a2);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  int64_t result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  int64_t v19 = *(void *)(v12 + 24);
  if (v19 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= result && (a3 & 1) == 0)
  {
    int64_t result = (int64_t)sub_251A17968(a4);
LABEL_7:
    char v20 = (void *)*v8;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];
      int64_t result = swift_bridgeObjectRelease();
      *(void *)(v21 + 8 * v14) = a1;
      return result;
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    *(unsigned char *)(v20[6] + v14) = a2;
    *(void *)(v20[7] + 8 * v14) = a1;
    uint64_t v23 = v20[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (!v24)
    {
      v20[2] = v25;
      return result;
    }
    goto LABEL_14;
  }
  a5();
  int64_t result = sub_2519FE614(a2);
  if ((v18 & 1) == (v22 & 1))
  {
    unint64_t v14 = result;
    char v20 = (void *)*v8;
    if (v18) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  int64_t result = sub_251F36BA0();
  __break(1u);
  return result;
}

uint64_t sub_251A0DB24(uint64_t a1, unsigned int a2, char a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_2519FE94C(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_251A13198();
      goto LABEL_7;
    }
    sub_251A03658(v13, a3 & 1);
    unint64_t v19 = sub_2519FE94C(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      unint64_t v10 = v19;
      BOOL v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_251F36BA0();
    __break(1u);
    return result;
  }
LABEL_7:
  BOOL v16 = *v4;
  if (v14)
  {
LABEL_8:
    uint64_t v17 = v16[7] + 40 * v10;
    return sub_251A1AE4C(a1, v17);
  }
LABEL_13:

  return sub_251A1141C(v10, a2, a1, v16);
}

int64_t sub_251A0DC58(uint64_t a1, char a2, char a3)
{
  return sub_251A0D9D4(a1, a2, a3, &qword_269B9C980, (void (*)(void))sub_251A0392C);
}

uint64_t sub_251A0DC78(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_2519FE588(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 >= v13 && (a3 & 1) != 0)
  {
LABEL_7:
    BOOL v16 = *v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t v18 = type metadata accessor for StaticMatterDevice();
      return sub_251A1B0C0(a1, v17 + *(void *)(*(void *)(v18 - 8) + 72) * v10, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
    }
    goto LABEL_11;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_251A133C8();
    goto LABEL_7;
  }
  sub_251A03C50(v13, a3 & 1);
  unint64_t v20 = sub_2519FE588(a2);
  if ((v14 & 1) != (v21 & 1))
  {
LABEL_15:
    uint64_t result = sub_251F36BA0();
    __break(1u);
    return result;
  }
  unint64_t v10 = v20;
  BOOL v16 = *v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:

  return sub_251A11488(v10, a2, a1, v16);
}

uint64_t sub_251A0DDCC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_2519FE798(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_251A13644();
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_251A03FDC(v15, a4 & 1);
  unint64_t v21 = sub_2519FE798(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_17:
    uint64_t result = sub_251F36BA0();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  uint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  uint64_t v23 = (uint64_t *)(v18[6] + 16 * v12);
  *uint64_t v23 = a2;
  v23[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v24 = v18[2];
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18[2] = v26;

  return swift_bridgeObjectRetain();
}

uint64_t sub_251A0DF3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v8 = v7;
  uint64_t v15 = *v7;
  unint64_t v17 = sub_2519FE798(a5, a6);
  uint64_t v18 = *(void *)(v15 + 16);
  BOOL v19 = (v16 & 1) == 0;
  uint64_t v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v21 = v16;
  uint64_t v22 = *(void *)(v15 + 24);
  if (v22 >= v20 && (a7 & 1) != 0) {
    goto LABEL_7;
  }
  if (v22 >= v20 && (a7 & 1) == 0)
  {
    sub_251A137FC();
LABEL_7:
    uint64_t v23 = (void *)*v8;
    if (v21)
    {
LABEL_8:
      uint64_t v24 = (void *)(v23[7] + 32 * v17);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      void *v24 = a1;
      v24[1] = a2;
      void v24[2] = a3;
      v24[3] = a4;
      return result;
    }
    goto LABEL_11;
  }
  sub_251A042F4(v20, a7 & 1);
  unint64_t v26 = sub_2519FE798(a5, a6);
  if ((v21 & 1) != (v27 & 1))
  {
LABEL_17:
    uint64_t result = sub_251F36BA0();
    __break(1u);
    return result;
  }
  unint64_t v17 = v26;
  uint64_t v23 = (void *)*v8;
  if (v21) {
    goto LABEL_8;
  }
LABEL_11:
  v23[(v17 >> 6) + 8] |= 1 << v17;
  BOOL v28 = (uint64_t *)(v23[6] + 16 * v17);
  *BOOL v28 = a5;
  v28[1] = a6;
  uint64_t v29 = (void *)(v23[7] + 32 * v17);
  *uint64_t v29 = a1;
  v29[1] = a2;
  v29[2] = a3;
  v29[3] = a4;
  uint64_t v30 = v23[2];
  BOOL v31 = __OFADD__(v30, 1);
  uint64_t v32 = v30 + 1;
  if (v31)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  void v23[2] = v32;

  return swift_bridgeObjectRetain();
}

_OWORD *sub_251A0E0F8(_OWORD *a1, char a2, char a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_2519FEA08(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_251A13A5C(&qword_269B9C840);
      goto LABEL_7;
    }
    sub_251A04AAC(v13, a3 & 1);
    unint64_t v19 = sub_2519FEA08(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      unint64_t v10 = v19;
      char v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
      return sub_251A11530(v10, a2, a1, v16);
    }
LABEL_15:
    uint64_t result = (_OWORD *)sub_251F36BA0();
    __break(1u);
    return result;
  }
LABEL_7:
  char v16 = *v4;
  if ((v14 & 1) == 0) {
    return sub_251A11530(v10, a2, a1, v16);
  }
LABEL_8:
  unint64_t v17 = (_OWORD *)(v16[7] + 32 * v10);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v17);

  return sub_251A0D578(a1, v17);
}

uint64_t sub_251A0E230(uint64_t a1, unsigned __int16 a2, char a3)
{
  return sub_251A0D870(a1, a2, a3, &qword_269B9C9F8);
}

_OWORD *sub_251A0E23C(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_2519FE798(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_251A13F94();
      goto LABEL_7;
    }
    sub_251A054BC(v15, a4 & 1);
    unint64_t v21 = sub_2519FE798(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      uint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = (_OWORD *)sub_251F36BA0();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    unint64_t v19 = (_OWORD *)(v18[7] + 32 * v12);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
    return sub_251A0D578(a1, v19);
  }
LABEL_13:
  sub_251A115E8(v12, a2, a3, a1, v18);

  return (_OWORD *)swift_bridgeObjectRetain();
}

id sub_251A0E390(uint64_t a1, uint64_t a2, char a3, void *a4, char a5)
{
  uint64_t v6 = v5;
  uint64_t v11 = *v5;
  unint64_t v13 = sub_2519FE68C((uint64_t)a4);
  uint64_t v14 = *(void *)(v11 + 16);
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v17 = v12;
  uint64_t v18 = *(void *)(v11 + 24);
  if (v18 >= v16 && (a5 & 1) != 0) {
    goto LABEL_7;
  }
  if (v18 >= v16 && (a5 & 1) == 0)
  {
    sub_251A1417C();
LABEL_7:
    unint64_t v19 = (void *)*v6;
    if (v17)
    {
LABEL_8:
      uint64_t v20 = v19[7] + 24 * v13;
      id result = (id)sub_251A1AD70(*(void *)v20, *(void *)(v20 + 8), *(unsigned char *)(v20 + 16));
      *(void *)uint64_t v20 = a1;
      *(void *)(v20 + 8) = a2;
      *(unsigned char *)(v20 + 16) = a3;
      return result;
    }
    goto LABEL_11;
  }
  sub_251A057BC(v16, a5 & 1);
  unint64_t v22 = sub_2519FE68C((uint64_t)a4);
  if ((v17 & 1) != (v23 & 1))
  {
LABEL_17:
    sub_251A1A568(0, (unint64_t *)&qword_26B21F170);
    id result = (id)sub_251F36BA0();
    __break(1u);
    return result;
  }
  unint64_t v13 = v22;
  unint64_t v19 = (void *)*v6;
  if (v17) {
    goto LABEL_8;
  }
LABEL_11:
  v19[(v13 >> 6) + 8] |= 1 << v13;
  *(void *)(v19[6] + 8 * v13) = a4;
  uint64_t v24 = v19[7] + 24 * v13;
  *(void *)uint64_t v24 = a1;
  *(void *)(v24 + 8) = a2;
  *(unsigned char *)(v24 + 16) = a3;
  uint64_t v25 = v19[2];
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (v26)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v19[2] = v27;

  return a4;
}

void sub_251A0E52C(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v8 = type metadata accessor for BatchRequestError.ID();
  MEMORY[0x270FA5388](v8);
  unint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (void *)*v3;
  unint64_t v13 = sub_2519FE810(a2);
  uint64_t v14 = v11[2];
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v17 = v12;
  uint64_t v18 = v11[3];
  if (v18 >= v16 && (a3 & 1) != 0)
  {
LABEL_7:
    unint64_t v19 = *v4;
    if (v17)
    {
LABEL_8:
      uint64_t v20 = v19[7];

      *(void *)(v20 + 8 * v13) = a1;
      return;
    }
    goto LABEL_11;
  }
  if (v18 >= v16 && (a3 & 1) == 0)
  {
    sub_251A14350();
    goto LABEL_7;
  }
  sub_251A05AB4(v16, a3 & 1);
  unint64_t v21 = sub_2519FE810(a2);
  if ((v17 & 1) != (v22 & 1))
  {
LABEL_14:
    sub_251F36BA0();
    __break(1u);
    return;
  }
  unint64_t v13 = v21;
  unint64_t v19 = *v4;
  if (v17) {
    goto LABEL_8;
  }
LABEL_11:
  sub_251A1AEB4(a2, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for BatchRequestError.ID);
  sub_251A11654(v13, (uint64_t)v10, a1, v19);
}

_OWORD *sub_251A0E6AC(_OWORD *a1, int a2, char a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_2519FE8E0(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_251A145E4();
      goto LABEL_7;
    }
    sub_251A06308(v13, a3 & 1);
    unint64_t v19 = sub_2519FE8E0(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      unint64_t v10 = v19;
      uint64_t v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    type metadata accessor for MTRAttributeIDType(0);
    id result = (_OWORD *)sub_251F36BA0();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v16 = *v4;
  if (v14)
  {
LABEL_8:
    char v17 = (_OWORD *)(v16[7] + 32 * v10);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v17);
    return sub_251A0D578(a1, v17);
  }
LABEL_13:

  return sub_251A11708(v10, a2, a1, v16);
}

void sub_251A0E7E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v7 = (void **)v6;
  char v14 = (void *)*v6;
  unint64_t v16 = sub_2519FE994(a5);
  uint64_t v17 = v14[2];
  BOOL v18 = (v15 & 1) == 0;
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v20 = v15;
  uint64_t v21 = v14[3];
  if (v21 >= v19 && (a6 & 1) != 0)
  {
LABEL_7:
    char v22 = *v7;
    if (v20)
    {
LABEL_8:
      uint64_t v23 = (uint64_t *)(v22[7] + 32 * v16);
      uint64_t v24 = (void *)v23[2];
      uint64_t v25 = (void *)v23[3];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_251A1A4DC(v24);
      sub_251A1A4DC(v25);
      *uint64_t v23 = a1;
      v23[1] = a2;
      void v23[2] = a3;
      v23[3] = a4;
      return;
    }
    goto LABEL_11;
  }
  if (v21 >= v19 && (a6 & 1) == 0)
  {
    sub_251A147A8();
    goto LABEL_7;
  }
  sub_251A065E0(v19, a6 & 1);
  unint64_t v26 = sub_2519FE994(a5);
  if ((v20 & 1) != (v27 & 1))
  {
LABEL_14:
    sub_251F34DA0();
    sub_251F36BA0();
    __break(1u);
    return;
  }
  unint64_t v16 = v26;
  char v22 = *v7;
  if (v20) {
    goto LABEL_8;
  }
LABEL_11:
  uint64_t v28 = sub_251F34DA0();
  MEMORY[0x270FA5388](v28);
  uint64_t v30 = (char *)&v32 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v31 + 16))(v30, a5);
  sub_251A11770(v16, (uint64_t)v30, a1, a2, a3, a4, v22);
}

uint64_t sub_251A0E9D0(uint64_t a1, uint64_t a2, char a3)
{
  return sub_251A0E9DC(a1, a2, a3, &qword_269B9C868);
}

uint64_t sub_251A0E9DC(uint64_t a1, uint64_t a2, char a3, uint64_t *a4)
{
  uint64_t v6 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_2519FE994(a2);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a3 & 1) != 0)
  {
LABEL_7:
    BOOL v18 = *v6;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a3 & 1) == 0)
  {
    sub_251A173A0(a4);
    goto LABEL_7;
  }
  sub_251A05F00(v15, a3 & 1, a4);
  unint64_t v21 = sub_2519FE994(a2);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_14:
    sub_251F34DA0();
    uint64_t result = sub_251F36BA0();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  BOOL v18 = *v6;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  sub_251F34DA0();
  MEMORY[0x270FA5388]();
  uint64_t v24 = (char *)&v26 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v25 + 16))(v24, a2);
  return sub_251A112AC(v12, (uint64_t)v24, a1, v18);
}

uint64_t sub_251A0EB90(uint64_t a1, uint64_t a2, char a3)
{
  return sub_251A0E9DC(a1, a2, a3, &qword_269B9C878);
}

uint64_t sub_251A0EB9C(uint64_t *a1, uint64_t a2, char a3)
{
  unint64_t v4 = v3;
  uint64_t v7 = *a1;
  uint64_t v8 = a1[1];
  uint64_t v9 = a1[2];
  uint64_t v10 = a1[4];
  uint64_t v47 = a1[3];
  uint64_t v48 = v10;
  uint64_t v11 = a1[6];
  uint64_t v49 = a1[5];
  uint64_t v50 = v11;
  uint64_t v12 = a1[8];
  uint64_t v51 = a1[7];
  uint64_t v52 = v12;
  uint64_t v13 = a1[10];
  uint64_t v53 = a1[9];
  uint64_t v54 = v13;
  uint64_t v14 = a1[12];
  uint64_t v55 = a1[11];
  uint64_t v56 = v14;
  uint64_t v15 = a1[14];
  uint64_t v57 = a1[13];
  uint64_t v58 = v15;
  uint64_t v59 = a1[15];
  uint64_t v16 = *v3;
  unint64_t v18 = sub_2519FE994(a2);
  uint64_t v19 = *(void *)(v16 + 16);
  BOOL v20 = (v17 & 1) == 0;
  uint64_t v21 = v19 + v20;
  if (__OFADD__(v19, v20))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v22 = v17;
  uint64_t v23 = *(void *)(v16 + 24);
  if (v23 >= v21 && (a3 & 1) != 0)
  {
LABEL_7:
    if (v22)
    {
LABEL_8:
      unint64_t v24 = *(void *)(*v4 + 56) + (v18 << 7);
      long long v25 = *(_OWORD *)(v24 + 48);
      long long v27 = *(_OWORD *)v24;
      long long v26 = *(_OWORD *)(v24 + 16);
      v60[2] = *(_OWORD *)(v24 + 32);
      v60[3] = v25;
      v60[0] = v27;
      v60[1] = v26;
      long long v28 = *(_OWORD *)(v24 + 112);
      long long v30 = *(_OWORD *)(v24 + 64);
      long long v29 = *(_OWORD *)(v24 + 80);
      v60[6] = *(_OWORD *)(v24 + 96);
      v60[7] = v28;
      v60[4] = v30;
      v60[5] = v29;
      uint64_t result = sub_251A1A774((uint64_t)v60);
      *(void *)unint64_t v24 = v7;
      *(void *)(v24 + 8) = v8;
      uint64_t v32 = v47;
      *(void *)(v24 + 16) = v9;
      *(void *)(v24 + 24) = v32;
      uint64_t v33 = v49;
      *(void *)(v24 + 32) = v48;
      *(void *)(v24 + 40) = v33;
      uint64_t v34 = v51;
      *(void *)(v24 + 48) = v50;
      *(void *)(v24 + 56) = v34;
      uint64_t v35 = v53;
      *(void *)(v24 + 64) = v52;
      *(void *)(v24 + 72) = v35;
      uint64_t v36 = v55;
      *(void *)(v24 + 80) = v54;
      *(void *)(v24 + 88) = v36;
      uint64_t v37 = v57;
      *(void *)(v24 + 96) = v56;
      *(void *)(v24 + 104) = v37;
      uint64_t v38 = v59;
      *(void *)(v24 + 112) = v58;
      *(void *)(v24 + 120) = v38;
      return result;
    }
    goto LABEL_11;
  }
  if (v23 >= v21 && (a3 & 1) == 0)
  {
    sub_251A14DBC();
    goto LABEL_7;
  }
  sub_251A06EB0(v21, a3 & 1);
  unint64_t v39 = sub_2519FE994(a2);
  if ((v22 & 1) != (v40 & 1))
  {
LABEL_14:
    sub_251F34DA0();
    uint64_t result = sub_251F36BA0();
    __break(1u);
    return result;
  }
  unint64_t v18 = v39;
  if (v22) {
    goto LABEL_8;
  }
LABEL_11:
  BOOL v41 = (void *)*v4;
  uint64_t v42 = sub_251F34DA0();
  MEMORY[0x270FA5388](v42);
  uint64_t v44 = (char *)&v46 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v45 + 16))(v44, a2);
  *(void *)&long long v61 = v7;
  *((void *)&v61 + 1) = v8;
  uint64_t v62 = v9;
  uint64_t v63 = v47;
  uint64_t v64 = v48;
  uint64_t v65 = v49;
  uint64_t v66 = v50;
  uint64_t v67 = v51;
  uint64_t v68 = v52;
  uint64_t v69 = v53;
  uint64_t v70 = v54;
  uint64_t v71 = v55;
  uint64_t v72 = v56;
  uint64_t v73 = v57;
  uint64_t v74 = v58;
  uint64_t v75 = v59;
  return sub_251A11844(v18, (uint64_t)v44, &v61, v41);
}

uint64_t sub_251A0EE68(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_2519FE994(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 >= v13 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v16 = *v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t v18 = type metadata accessor for StaticActionSet();
      return sub_251A1B0C0(a1, v17 + *(void *)(*(void *)(v18 - 8) + 72) * v10, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
    }
    goto LABEL_11;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_251A11F14((uint64_t (*)(void))type metadata accessor for StaticActionSet, &qword_26B21E5C8, (uint64_t (*)(void))type metadata accessor for StaticActionSet, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
    goto LABEL_7;
  }
  sub_251A01888(v13, a3 & 1, (uint64_t (*)(void))type metadata accessor for StaticActionSet, &qword_26B21E5C8, (uint64_t (*)(void))type metadata accessor for StaticActionSet, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
  unint64_t v20 = sub_2519FE994(a2);
  if ((v14 & 1) != (v21 & 1))
  {
LABEL_14:
    sub_251F34DA0();
    uint64_t result = sub_251F36BA0();
    __break(1u);
    return result;
  }
  unint64_t v10 = v20;
  uint64_t v16 = *v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:
  uint64_t v22 = sub_251F34DA0();
  MEMORY[0x270FA5388](v22);
  unint64_t v24 = (char *)&v26 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v25 + 16))(v24, a2);
  return sub_251A111B8(v10, (uint64_t)v24, a1, v16, (uint64_t (*)(void))type metadata accessor for StaticActionSet, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
}

uint64_t sub_251A0F0EC(uint64_t a1, void *a2, char a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v8 = type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0);
  MEMORY[0x270FA5388](v8);
  unint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (void *)*v3;
  unint64_t v13 = sub_2519FEAB8(a2);
  uint64_t v14 = v11[2];
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v17 = v12;
  uint64_t v18 = v11[3];
  if (v18 >= v16 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v19 = *v4;
    if (v17)
    {
LABEL_8:
      uint64_t v20 = v19[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v20 + 8 * v13) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v18 >= v16 && (a3 & 1) == 0)
  {
    sub_251A176F4(type metadata accessor for PhoenixMetricsAggregator.IntervalKey, &qword_26B21E5D0, type metadata accessor for PhoenixMetricsAggregator.IntervalKey, type metadata accessor for PhoenixMetricsAggregator.IntervalKey);
    goto LABEL_7;
  }
  sub_251A07B8C(v16, a3 & 1);
  unint64_t v22 = sub_2519FEAB8(a2);
  if ((v17 & 1) != (v23 & 1))
  {
LABEL_14:
    uint64_t result = sub_251F36BA0();
    __break(1u);
    return result;
  }
  unint64_t v13 = v22;
  uint64_t v19 = *v4;
  if (v17) {
    goto LABEL_8;
  }
LABEL_11:
  sub_251A1AEB4((uint64_t)a2, (uint64_t)v10, type metadata accessor for PhoenixMetricsAggregator.IntervalKey);
  return sub_251A11C00(v13, (uint64_t)v10, a1, v19, type metadata accessor for PhoenixMetricsAggregator.IntervalKey, type metadata accessor for PhoenixMetricsAggregator.IntervalKey);
}

uint64_t sub_251A0F2D8(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_2519FEF28(a2, (void (*)(uint64_t))CharacteristicKind.rawValue.getter, (uint64_t (*)(void))CharacteristicKind.rawValue.getter);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 >= v13 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v16 = *v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t v18 = type metadata accessor for StaticCharacteristic();
      return sub_251A1B0C0(a1, v17 + *(void *)(*(void *)(v18 - 8) + 72) * v10, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
    }
    goto LABEL_11;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_251A154F8();
    goto LABEL_7;
  }
  sub_251A07E4C(v13, a3 & 1);
  unint64_t v20 = sub_2519FEF28(a2, (void (*)(uint64_t))CharacteristicKind.rawValue.getter, (uint64_t (*)(void))CharacteristicKind.rawValue.getter);
  if ((v14 & 1) != (v21 & 1))
  {
LABEL_15:
    uint64_t result = sub_251F36BA0();
    __break(1u);
    return result;
  }
  unint64_t v10 = v20;
  uint64_t v16 = *v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:

  return sub_251A119C8(v10, a2, a1, v16);
}

uint64_t sub_251A0F45C(char a1, uint64_t a2, char a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_2519FE994(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 >= result && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v16 = *v4;
    if (v14)
    {
LABEL_8:
      *(unsigned char *)(v16[7] + v10) = a1 & 1;
      return result;
    }
    goto LABEL_11;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_251A15770();
    goto LABEL_7;
  }
  sub_251A08234(result, a3 & 1);
  uint64_t result = sub_2519FE994(a2);
  if ((v14 & 1) != (v17 & 1))
  {
LABEL_14:
    sub_251F34DA0();
    uint64_t result = sub_251F36BA0();
    __break(1u);
    return result;
  }
  unint64_t v10 = result;
  uint64_t v16 = *v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:
  uint64_t v18 = sub_251F34DA0();
  MEMORY[0x270FA5388](v18);
  unint64_t v20 = (char *)&v22 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v21 + 16))(v20, a2);
  return sub_251A11A70(v10, (uint64_t)v20, a1 & 1, v16);
}

uint64_t sub_251A0F5FC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_2519FE588(a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_251A15A24();
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = (void *)(v18[7] + 16 * v12);
      uint64_t result = swift_unknownObjectRelease();
      *uint64_t v19 = a1;
      v19[1] = a2;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(void *)(v18[6] + 8 * v12) = a3;
    uint64_t v21 = (void *)(v18[7] + 16 * v12);
    *uint64_t v21 = a1;
    v21[1] = a2;
    uint64_t v22 = v18[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (!v23)
    {
      v18[2] = v24;
      return result;
    }
    goto LABEL_14;
  }
  sub_251A08638(result, a4 & 1);
  uint64_t result = sub_2519FE588(a3);
  if ((v16 & 1) == (v20 & 1))
  {
    unint64_t v12 = result;
    uint64_t v18 = (void *)*v5;
    if (v16) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_251F36BA0();
  __break(1u);
  return result;
}

uint64_t sub_251A0F73C(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_2519FE588(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_251A15BD0();
LABEL_7:
    char v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    uint64_t v19 = 8 * v10;
    *(void *)(v16[6] + v19) = a2;
    *(void *)(v16[7] + v19) = a1;
    uint64_t v20 = v16[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (!v21)
    {
      v16[2] = v22;
      return result;
    }
    goto LABEL_14;
  }
  sub_251A088FC(result, a3 & 1);
  uint64_t result = sub_2519FE588(a2);
  if ((v14 & 1) == (v18 & 1))
  {
    unint64_t v10 = result;
    char v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_251F36BA0();
  __break(1u);
  return result;
}

uint64_t sub_251A0F878(uint64_t a1, __int16 a2, char a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_2519FE5CC(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    char v14 = v9;
    uint64_t v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      char v16 = *v4;
      if (v14)
      {
LABEL_8:
        uint64_t v17 = v16[7];
        uint64_t v18 = type metadata accessor for ActionEndpoint();
        return sub_251A1B0C0(a1, v17 + *(void *)(*(void *)(v18 - 8) + 72) * v10, (uint64_t (*)(void))type metadata accessor for ActionEndpoint);
      }
      return sub_251A11B28(v10, a2, a1, v16, (uint64_t (*)(void))type metadata accessor for ActionEndpoint, (uint64_t (*)(void))type metadata accessor for ActionEndpoint);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_251A15D74((uint64_t (*)(void))type metadata accessor for ActionEndpoint, &qword_269B9CA58, (uint64_t (*)(void))type metadata accessor for ActionEndpoint, (uint64_t (*)(void))type metadata accessor for ActionEndpoint);
      goto LABEL_7;
    }
    sub_251A08BB4(v13, a3 & 1, (uint64_t (*)(void))type metadata accessor for ActionEndpoint, &qword_269B9CA58, (uint64_t (*)(void))type metadata accessor for ActionEndpoint, (uint64_t (*)(void))type metadata accessor for ActionEndpoint);
    unint64_t v20 = sub_2519FE5CC(a2);
    if ((v14 & 1) == (v21 & 1))
    {
      unint64_t v10 = v20;
      char v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
      return sub_251A11B28(v10, a2, a1, v16, (uint64_t (*)(void))type metadata accessor for ActionEndpoint, (uint64_t (*)(void))type metadata accessor for ActionEndpoint);
    }
  }
  uint64_t result = sub_251F36BA0();
  __break(1u);
  return result;
}

uint64_t sub_251A0FA5C(char a1, uint64_t a2, char a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_2519FE994(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 >= result && (a3 & 1) != 0)
  {
LABEL_7:
    char v16 = *v4;
    if (v14)
    {
LABEL_8:
      *(unsigned char *)(v16[7] + v10) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_251A15FD0();
    goto LABEL_7;
  }
  sub_251A08F20(result, a3 & 1);
  uint64_t result = sub_2519FE994(a2);
  if ((v14 & 1) != (v17 & 1))
  {
LABEL_14:
    sub_251F34DA0();
    uint64_t result = sub_251F36BA0();
    __break(1u);
    return result;
  }
  unint64_t v10 = result;
  char v16 = *v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:
  uint64_t v18 = sub_251F34DA0();
  MEMORY[0x270FA5388](v18);
  unint64_t v20 = (char *)&v22 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v21 + 16))(v20, a2);
  return sub_251A11A70(v10, (uint64_t)v20, a1, v16);
}

uint64_t sub_251A0FBF8(uint64_t a1, uint64_t a2, char a3)
{
  return sub_251A0E9DC(a1, a2, a3, &qword_269B9CA40);
}

uint64_t sub_251A0FC04(uint64_t a1, uint64_t a2, char a3)
{
  return sub_251A0E9DC(a1, a2, a3, &qword_26B21EB68);
}

void sub_251A0FC10(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_2519FE994(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 >= v13 && (a3 & 1) != 0)
  {
LABEL_7:
    char v16 = *v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];

      *(void *)(v17 + 8 * v10) = a1;
      return;
    }
    goto LABEL_11;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_251A16574(&qword_26B21EB78);
    goto LABEL_7;
  }
  sub_251A0465C(v13, a3 & 1, &qword_26B21EB78);
  unint64_t v18 = sub_2519FE994(a2);
  if ((v14 & 1) != (v19 & 1))
  {
LABEL_14:
    sub_251F34DA0();
    sub_251F36BA0();
    __break(1u);
    return;
  }
  unint64_t v10 = v18;
  char v16 = *v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:
  uint64_t v20 = sub_251F34DA0();
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)&v24 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v23 + 16))(v22, a2);
  sub_251A112AC(v10, (uint64_t)v22, a1, v16);
}

uint64_t sub_251A0FDC8(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_2519FE994(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 >= v13 && (a3 & 1) != 0)
  {
LABEL_7:
    char v16 = *v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t result = swift_release();
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_251A16840();
    goto LABEL_7;
  }
  sub_251A09A5C(v13, a3 & 1);
  unint64_t v19 = sub_2519FE994(a2);
  if ((v14 & 1) != (v20 & 1))
  {
LABEL_14:
    sub_251F34DA0();
    uint64_t result = sub_251F36BA0();
    __break(1u);
    return result;
  }
  unint64_t v10 = v19;
  char v16 = *v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:
  uint64_t v21 = sub_251F34DA0();
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v25 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v24 + 16))(v23, a2);
  return sub_251A112AC(v10, (uint64_t)v23, a1, v16);
}

uint64_t sub_251A0FF70(uint64_t a1, uint64_t a2, char a3)
{
  return sub_251A0E9DC(a1, a2, a3, &qword_269B9C8F0);
}

uint64_t sub_251A0FF7C(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_2519FE994(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 >= v13 && (a3 & 1) != 0)
  {
LABEL_7:
    char v16 = *v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t v18 = type metadata accessor for ActionService();
      return sub_251A1B0C0(a1, v17 + *(void *)(*(void *)(v18 - 8) + 72) * v10, (uint64_t (*)(void))type metadata accessor for ActionService);
    }
    goto LABEL_11;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_251A11F14((uint64_t (*)(void))type metadata accessor for ActionService, &qword_269B9C9B8, (uint64_t (*)(void))type metadata accessor for ActionService, (uint64_t (*)(void))type metadata accessor for ActionService);
    goto LABEL_7;
  }
  sub_251A01888(v13, a3 & 1, (uint64_t (*)(void))type metadata accessor for ActionService, &qword_269B9C9B8, (uint64_t (*)(void))type metadata accessor for ActionService, (uint64_t (*)(void))type metadata accessor for ActionService);
  unint64_t v20 = sub_2519FE994(a2);
  if ((v14 & 1) != (v21 & 1))
  {
LABEL_14:
    sub_251F34DA0();
    uint64_t result = sub_251F36BA0();
    __break(1u);
    return result;
  }
  unint64_t v10 = v20;
  char v16 = *v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:
  uint64_t v22 = sub_251F34DA0();
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)&v26 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v25 + 16))(v24, a2);
  return sub_251A111B8(v10, (uint64_t)v24, a1, v16, (uint64_t (*)(void))type metadata accessor for ActionService, (uint64_t (*)(void))type metadata accessor for ActionService);
}

uint64_t sub_251A10200(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_2519FE798(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_251A16FD8(&qword_269B9C990);
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_251A0A594(v15, a4 & 1, &qword_269B9C990);
  unint64_t v21 = sub_2519FE798(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_17:
    uint64_t result = sub_251F36BA0();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  uint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  uint64_t v23 = (uint64_t *)(v18[6] + 16 * v12);
  *uint64_t v23 = a2;
  v23[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v24 = v18[2];
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18[2] = v26;

  return swift_bridgeObjectRetain();
}

uint64_t sub_251A10380(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_2519FE994(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 >= v13 && (a3 & 1) != 0)
  {
LABEL_7:
    char v16 = *v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t v18 = type metadata accessor for ScrubberElement(0);
      return sub_251A1B0C0(a1, v17 + *(void *)(*(void *)(v18 - 8) + 72) * v10, type metadata accessor for ScrubberElement);
    }
    goto LABEL_11;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_251A11F14(type metadata accessor for ScrubberElement, &qword_269B9C8B8, type metadata accessor for ScrubberElement, type metadata accessor for ScrubberElement);
    goto LABEL_7;
  }
  sub_251A01888(v13, a3 & 1, type metadata accessor for ScrubberElement, &qword_269B9C8B8, type metadata accessor for ScrubberElement, type metadata accessor for ScrubberElement);
  unint64_t v20 = sub_2519FE994(a2);
  if ((v14 & 1) != (v21 & 1))
  {
LABEL_14:
    sub_251F34DA0();
    uint64_t result = sub_251F36BA0();
    __break(1u);
    return result;
  }
  unint64_t v10 = v20;
  char v16 = *v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:
  uint64_t v22 = sub_251F34DA0();
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)&v26 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v25 + 16))(v24, a2);
  return sub_251A111B8(v10, (uint64_t)v24, a1, v16, type metadata accessor for ScrubberElement, type metadata accessor for ScrubberElement);
}

uint64_t sub_251A10604(uint64_t a1, uint64_t a2, char a3)
{
  return sub_251A0E9DC(a1, a2, a3, &qword_269B9CA18);
}

uint64_t sub_251A10610(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_2519FE994(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 >= v13 && (a3 & 1) != 0)
  {
LABEL_7:
    char v16 = *v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t v18 = type metadata accessor for StaticLightProfile();
      return sub_251A1B0C0(a1, v17 + *(void *)(*(void *)(v18 - 8) + 72) * v10, (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
    }
    goto LABEL_11;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_251A11F14((uint64_t (*)(void))type metadata accessor for StaticLightProfile, &qword_269B9C9A0, (uint64_t (*)(void))type metadata accessor for StaticLightProfile, (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
    goto LABEL_7;
  }
  sub_251A01888(v13, a3 & 1, (uint64_t (*)(void))type metadata accessor for StaticLightProfile, &qword_269B9C9A0, (uint64_t (*)(void))type metadata accessor for StaticLightProfile, (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
  unint64_t v20 = sub_2519FE994(a2);
  if ((v14 & 1) != (v21 & 1))
  {
LABEL_14:
    sub_251F34DA0();
    uint64_t result = sub_251F36BA0();
    __break(1u);
    return result;
  }
  unint64_t v10 = v20;
  char v16 = *v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:
  uint64_t v22 = sub_251F34DA0();
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)&v26 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v25 + 16))(v24, a2);
  return sub_251A111B8(v10, (uint64_t)v24, a1, v16, (uint64_t (*)(void))type metadata accessor for StaticLightProfile, (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
}

uint64_t sub_251A10894(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_2519FE994(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 >= v13 && (a3 & 1) != 0)
  {
LABEL_7:
    char v16 = *v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t v18 = type metadata accessor for StaticTelevisionProfile();
      return sub_251A1B0C0(a1, v17 + *(void *)(*(void *)(v18 - 8) + 72) * v10, (uint64_t (*)(void))type metadata accessor for StaticTelevisionProfile);
    }
    goto LABEL_11;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_251A11F14((uint64_t (*)(void))type metadata accessor for StaticTelevisionProfile, &qword_269B9C8D8, (uint64_t (*)(void))type metadata accessor for StaticTelevisionProfile, (uint64_t (*)(void))type metadata accessor for StaticTelevisionProfile);
    goto LABEL_7;
  }
  sub_251A01888(v13, a3 & 1, (uint64_t (*)(void))type metadata accessor for StaticTelevisionProfile, &qword_269B9C8D8, (uint64_t (*)(void))type metadata accessor for StaticTelevisionProfile, (uint64_t (*)(void))type metadata accessor for StaticTelevisionProfile);
  unint64_t v20 = sub_2519FE994(a2);
  if ((v14 & 1) != (v21 & 1))
  {
LABEL_14:
    sub_251F34DA0();
    uint64_t result = sub_251F36BA0();
    __break(1u);
    return result;
  }
  unint64_t v10 = v20;
  char v16 = *v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:
  uint64_t v22 = sub_251F34DA0();
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)&v26 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v25 + 16))(v24, a2);
  return sub_251A111B8(v10, (uint64_t)v24, a1, v16, (uint64_t (*)(void))type metadata accessor for StaticTelevisionProfile, (uint64_t (*)(void))type metadata accessor for StaticTelevisionProfile);
}

uint64_t sub_251A10B18(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v8 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
  MEMORY[0x270FA5388](v8);
  unint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (void *)*v3;
  unint64_t v13 = sub_2519FEFC8(a2);
  uint64_t v14 = v11[2];
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v17 = v12;
  uint64_t v18 = v11[3];
  if (v18 >= v16 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v19 = *v4;
    if (v17)
    {
LABEL_8:
      uint64_t v20 = v19[7];
      uint64_t v21 = type metadata accessor for IconTextValueStringDataHolder();
      return sub_251A1B0C0(a1, v20 + *(void *)(*(void *)(v21 - 8) + 72) * v13, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
    }
    goto LABEL_11;
  }
  if (v18 >= v16 && (a3 & 1) == 0)
  {
    sub_251A16B18();
    goto LABEL_7;
  }
  sub_251A09E74(v16, a3 & 1);
  unint64_t v23 = sub_2519FEFC8(a2);
  if ((v17 & 1) != (v24 & 1))
  {
LABEL_14:
    uint64_t result = sub_251F36BA0();
    __break(1u);
    return result;
  }
  unint64_t v13 = v23;
  uint64_t v19 = *v4;
  if (v17) {
    goto LABEL_8;
  }
LABEL_11:
  sub_251A1AEB4(a2, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
  return sub_251A11D38(v13, (uint64_t)v10, a1, v19);
}

uint64_t sub_251A10CC4(uint64_t a1, uint64_t a2, void *a3)
{
  sub_251F36CA0();
  sub_251F357B0();
  uint64_t v6 = type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0);
  uint64_t v7 = a1 + *(int *)(v6 + 20);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v8 - 8);
  unint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1B128(v7, (uint64_t)v10, &qword_26B21FF90);
  uint64_t v11 = sub_251F34DA0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11);
  if (v13 == 1)
  {
    sub_251F36CC0();
  }
  else
  {
    MEMORY[0x270FA5388](v13);
    BOOL v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v15, v10, v11);
    sub_251F36CC0();
    sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
    sub_251F35610();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  }
  sub_251F36D00();
  unint64_t v16 = sub_251F36290();
  *(void *)((char *)a3 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v16;
  uint64_t result = sub_251A1AF1C(a1, a3[6] + *(void *)(*(void *)(v6 - 8) + 72) * v16, type metadata accessor for PhoenixMetricsAggregator.IntervalKey);
  *(void *)(a3[7] + 8 * v16) = a2;
  ++a3[2];
  return result;
}

uint64_t sub_251A10F40(uint64_t a1, uint64_t a2, void *a3)
{
  sub_251F36CA0();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1B128(a1, (uint64_t)v8, &qword_26B21FF90);
  uint64_t v9 = sub_251F34DA0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9);
  if (v11 == 1)
  {
    sub_251F36CC0();
  }
  else
  {
    MEMORY[0x270FA5388](v11);
    uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v8, v9);
    sub_251F36CC0();
    sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
    sub_251F35610();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  }
  uint64_t v14 = _s7MergeIdVMa();
  sub_251F357B0();
  sub_251F36D00();
  unint64_t v15 = sub_251F36290();
  *(void *)((char *)a3 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v15;
  uint64_t result = sub_251A1AF1C(a1, a3[6] + *(void *)(*(void *)(v14 - 8) + 72) * v15, (uint64_t (*)(void))_s7MergeIdVMa);
  *(void *)(a3[7] + 8 * v15) = a2;
  ++a3[2];
  return result;
}

uint64_t sub_251A111B8(unint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v12 = a4[6];
  uint64_t v13 = sub_251F34DA0();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v12 + *(void *)(*(void *)(v13 - 8) + 72) * a1, a2, v13);
  uint64_t v14 = a4[7];
  uint64_t v15 = a5(0);
  uint64_t result = sub_251A1AF1C(a3, v14 + *(void *)(*(void *)(v15 - 8) + 72) * a1, a6);
  uint64_t v17 = a4[2];
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18) {
    __break(1u);
  }
  else {
    a4[2] = v19;
  }
  return result;
}

uint64_t sub_251A112AC(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_251F34DA0();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

uint64_t sub_251A11364(unint64_t a1, char a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(unsigned char *)(a4[6] + a1) = a2;
  uint64_t result = sub_251A1A930(a3, a4[7] + (a1 << 8));
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

unint64_t sub_251A113CC(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  a6[(result >> 6) + 8] |= 1 << result;
  *(void *)(a6[6] + 8 * result) = a2;
  uint64_t v6 = (void *)(a6[7] + 24 * result);
  *uint64_t v6 = a3;
  v6[1] = a4;
  v6[2] = a5;
  uint64_t v7 = a6[2];
  BOOL v8 = __OFADD__(v7, 1);
  uint64_t v9 = v7 + 1;
  if (v8) {
    __break(1u);
  }
  else {
    a6[2] = v9;
  }
  return result;
}

uint64_t sub_251A1141C(unint64_t a1, int a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_DWORD *)(a4[6] + 4 * a1) = a2;
  uint64_t result = sub_251A1A5BC(a3, a4[7] + 40 * a1);
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

uint64_t sub_251A11488(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t v7 = a4[7];
  uint64_t v8 = type metadata accessor for StaticMatterDevice();
  uint64_t result = sub_251A1AF1C(a3, v7 + *(void *)(*(void *)(v8 - 8) + 72) * a1, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
  uint64_t v10 = a4[2];
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    a4[2] = v12;
  }
  return result;
}

_OWORD *sub_251A11530(unint64_t a1, char a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(unsigned char *)(a4[6] + a1) = a2;
  uint64_t result = sub_251A0D578(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

unint64_t sub_251A11598(unint64_t result, __int16 a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  a6[(result >> 6) + 8] |= 1 << result;
  *(_WORD *)(a6[6] + 2 * result) = a2;
  uint64_t v6 = (void *)(a6[7] + 24 * result);
  *uint64_t v6 = a3;
  v6[1] = a4;
  v6[2] = a5;
  uint64_t v7 = a6[2];
  BOOL v8 = __OFADD__(v7, 1);
  uint64_t v9 = v7 + 1;
  if (v8) {
    __break(1u);
  }
  else {
    a6[2] = v9;
  }
  return result;
}

_OWORD *sub_251A115E8(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v6 = (void *)(a5[6] + 16 * a1);
  *uint64_t v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_251A0D578(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

uint64_t sub_251A11654(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = type metadata accessor for BatchRequestError.ID();
  uint64_t result = sub_251A1AF1C(a2, v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, (uint64_t (*)(void))type metadata accessor for BatchRequestError.ID);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

_OWORD *sub_251A11708(unint64_t a1, int a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_DWORD *)(a4[6] + 4 * a1) = a2;
  uint64_t result = sub_251A0D578(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

uint64_t sub_251A11770(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  a7[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v14 = a7[6];
  uint64_t v15 = sub_251F34DA0();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v14 + *(void *)(*(void *)(v15 - 8) + 72) * a1, a2, v15);
  uint64_t v17 = (void *)(a7[7] + 32 * a1);
  *uint64_t v17 = a3;
  v17[1] = a4;
  v17[2] = a5;
  v17[3] = a6;
  uint64_t v18 = a7[2];
  BOOL v19 = __OFADD__(v18, 1);
  uint64_t v20 = v18 + 1;
  if (v19) {
    __break(1u);
  }
  else {
    a7[2] = v20;
  }
  return result;
}

uint64_t sub_251A11844(unint64_t a1, uint64_t a2, long long *a3, void *a4)
{
  long long v22 = *a3;
  long long v20 = a3[2];
  long long v21 = a3[1];
  long long v18 = a3[4];
  long long v19 = a3[3];
  long long v16 = a3[6];
  long long v17 = a3[5];
  uint64_t v7 = *((void *)a3 + 14);
  uint64_t v8 = *((void *)a3 + 15);
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v9 = a4[6];
  uint64_t v10 = sub_251F34DA0();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v9 + *(void *)(*(void *)(v10 - 8) + 72) * a1, a2, v10);
  uint64_t v12 = a4[7] + (a1 << 7);
  *(_OWORD *)uint64_t v12 = v22;
  *(_OWORD *)(v12 + 16) = v21;
  *(_OWORD *)(v12 + 32) = v20;
  *(_OWORD *)(v12 + 48) = v19;
  *(_OWORD *)(v12 + 64) = v18;
  *(_OWORD *)(v12 + 80) = v17;
  *(_OWORD *)(v12 + 96) = v16;
  *(void *)(v12 + 112) = v7;
  *(void *)(v12 + 120) = v8;
  uint64_t v13 = a4[2];
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    a4[2] = v15;
  }
  return result;
}

_OWORD *sub_251A11960(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t result = sub_251A0D578(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

uint64_t sub_251A119C8(unint64_t a1, char a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(unsigned char *)(a4[6] + a1) = a2;
  uint64_t v7 = a4[7];
  uint64_t v8 = type metadata accessor for StaticCharacteristic();
  uint64_t result = sub_251A1AF1C(a3, v7 + *(void *)(*(void *)(v8 - 8) + 72) * a1, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
  uint64_t v10 = a4[2];
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    a4[2] = v12;
  }
  return result;
}

uint64_t sub_251A11A70(unint64_t a1, uint64_t a2, char a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_251F34DA0();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  *(unsigned char *)(a4[7] + a1) = a3;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

uint64_t sub_251A11B28(unint64_t a1, __int16 a2, uint64_t a3, void *a4, uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_WORD *)(a4[6] + 2 * a1) = a2;
  uint64_t v10 = a4[7];
  uint64_t v11 = a5(0);
  uint64_t result = sub_251A1AF1C(a3, v10 + *(void *)(*(void *)(v11 - 8) + 72) * a1, a6);
  uint64_t v13 = a4[2];
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    a4[2] = v15;
  }
  return result;
}

uint64_t sub_251A11BD4(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_251A11C00(a1, a2, a3, a4, (uint64_t (*)(void))_s7MergeIdVMa, (uint64_t (*)(void))_s7MergeIdVMa);
}

uint64_t sub_251A11C00(unint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v11 = a4[6];
  uint64_t v12 = a5(0);
  uint64_t result = sub_251A1AF1C(a2, v11 + *(void *)(*(void *)(v12 - 8) + 72) * a1, a6);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v14 = a4[2];
  BOOL v15 = __OFADD__(v14, 1);
  uint64_t v16 = v14 + 1;
  if (v15) {
    __break(1u);
  }
  else {
    a4[2] = v16;
  }
  return result;
}

unint64_t sub_251A11CAC(unint64_t result, char a2, uint64_t a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  *(unsigned char *)(a4[6] + result) = a2;
  *(void *)(a4[7] + 8 * result) = a3;
  uint64_t v4 = a4[2];
  BOOL v5 = __OFADD__(v4, 1);
  uint64_t v6 = v4 + 1;
  if (v5) {
    __break(1u);
  }
  else {
    a4[2] = v6;
  }
  return result;
}

unint64_t sub_251A11CF0(unint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  uint64_t v4 = 8 * result;
  *(void *)(a4[6] + v4) = a2;
  *(void *)(a4[7] + v4) = a3;
  uint64_t v5 = a4[2];
  BOOL v6 = __OFADD__(v5, 1);
  uint64_t v7 = v5 + 1;
  if (v6) {
    __break(1u);
  }
  else {
    a4[2] = v7;
  }
  return result;
}

uint64_t sub_251A11D38(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
  sub_251A1AF1C(a2, v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
  uint64_t v10 = a4[7];
  uint64_t v11 = type metadata accessor for IconTextValueStringDataHolder();
  uint64_t result = sub_251A1AF1C(a3, v10 + *(void *)(*(void *)(v11 - 8) + 72) * a1, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
  uint64_t v13 = a4[2];
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    a4[2] = v15;
  }
  return result;
}

void *sub_251A11E24()
{
  return sub_251A173A0(&qword_269B9CAE0);
}

void *sub_251A11E30()
{
  return sub_251A13A5C(&qword_269B9CB48);
}

uint64_t sub_251A11E3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((unint64_t)a4 >> 8 != 0xFFFFFFFF) {
    return sub_251A11E50(a1, a2, a3, a4);
  }
  return a1;
}

uint64_t sub_251A11E50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((a4 & 0x8000000000000000) == 0) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_251A11E60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((unint64_t)a4 >> 8 != 0xFFFFFFFF) {
    return sub_251A11E74(a1, a2, a3, a4);
  }
  return a1;
}

uint64_t sub_251A11E74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((a4 & 0x8000000000000000) == 0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_251A11E84()
{
  return sub_251A11F14((uint64_t (*)(void))type metadata accessor for StaticActionSet, &qword_26B21E5C8, (uint64_t (*)(void))type metadata accessor for StaticActionSet, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
}

void *sub_251A11ECC()
{
  return sub_251A11F14((uint64_t (*)(void))type metadata accessor for StaticCameraProfile, &qword_269B9C920, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
}

void *sub_251A11F14(uint64_t (*a1)(void), uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  uint64_t v43 = a3;
  uint64_t v44 = a4;
  uint64_t v6 = a1(0);
  uint64_t v42 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v41 = (uint64_t)&v37 - v7;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v38 = v4;
  uint64_t v8 = *v4;
  uint64_t v9 = sub_251F366E0();
  uint64_t v10 = *(void *)(v8 + 16);
  uint64_t v46 = v9;
  if (!v10)
  {
    uint64_t result = (void *)swift_release();
    uint64_t v36 = v46;
    uint64_t v35 = v38;
LABEL_28:
    *uint64_t v35 = v36;
    return result;
  }
  uint64_t v11 = v9;
  uint64_t result = (void *)(v9 + 64);
  unint64_t v13 = (unint64_t)((1 << *(unsigned char *)(v11 + 32)) + 63) >> 6;
  if (v11 != v8 || (unint64_t)result >= v8 + 64 + 8 * v13)
  {
    uint64_t result = memmove(result, (const void *)(v8 + 64), 8 * v13);
    uint64_t v11 = v46;
  }
  int64_t v15 = 0;
  *(void *)(v11 + 16) = *(void *)(v8 + 16);
  uint64_t v16 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v45 = v8;
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & *(void *)(v8 + 64);
  uint64_t v39 = v8 + 64;
  int64_t v40 = (unint64_t)(v16 + 63) >> 6;
  for (i = v46; ; uint64_t result = (void *)sub_251A1AF1C(v30, *(void *)(i + 56) + v31, v44))
  {
    if (v18)
    {
      unint64_t v20 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v21 = v20 | (v15 << 6);
      uint64_t v22 = v45;
      goto LABEL_12;
    }
    int64_t v32 = v15 + 1;
    uint64_t v22 = v45;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v32 >= v40) {
      goto LABEL_26;
    }
    unint64_t v33 = *(void *)(v39 + 8 * v32);
    ++v15;
    if (!v33)
    {
      int64_t v15 = v32 + 1;
      if (v32 + 1 >= v40) {
        goto LABEL_26;
      }
      unint64_t v33 = *(void *)(v39 + 8 * v15);
      if (!v33) {
        break;
      }
    }
LABEL_25:
    unint64_t v18 = (v33 - 1) & v33;
    unint64_t v21 = __clz(__rbit64(v33)) + (v15 << 6);
LABEL_12:
    uint64_t v23 = sub_251F34DA0();
    uint64_t v24 = *(void *)(v23 - 8);
    MEMORY[0x270FA5388](v23);
    uint64_t v26 = (char *)&v37 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
    unint64_t v28 = *(void *)(v27 + 72) * v21;
    (*(void (**)(char *, unint64_t, uint64_t))(v24 + 16))(v26, *(void *)(v22 + 48) + v28, v23);
    uint64_t v29 = *(void *)(v22 + 56);
    uint64_t v30 = v41;
    unint64_t v31 = *(void *)(v42 + 72) * v21;
    sub_251A1AEB4(v29 + v31, v41, v43);
    (*(void (**)(unint64_t, char *, uint64_t))(v24 + 32))(*(void *)(i + 48) + v28, v26, v23);
  }
  int64_t v34 = v32 + 2;
  if (v34 >= v40)
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t v35 = v38;
    uint64_t v36 = v46;
    goto LABEL_28;
  }
  unint64_t v33 = *(void *)(v39 + 8 * v34);
  if (v33)
  {
    int64_t v15 = v34;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v15 = v34 + 1;
    if (__OFADD__(v34, 1)) {
      break;
    }
    if (v15 >= v40) {
      goto LABEL_26;
    }
    unint64_t v33 = *(void *)(v39 + 8 * v15);
    ++v34;
    if (v33) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_251A12274()
{
  return sub_251A11F14((uint64_t (*)(void))type metadata accessor for StaticServiceGroup, &qword_269B9C900, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
}

void *sub_251A122BC()
{
  return sub_251A11F14(type metadata accessor for StaticRoom, &qword_26B21EB58, type metadata accessor for StaticRoom, type metadata accessor for StaticRoom);
}

void *sub_251A12304()
{
  return sub_251A11F14((uint64_t (*)(void))type metadata accessor for StaticService, &qword_26B21F1B8, (uint64_t (*)(void))type metadata accessor for StaticService, (uint64_t (*)(void))type metadata accessor for StaticService);
}

void *sub_251A1234C()
{
  return sub_251A11F14((uint64_t (*)(void))type metadata accessor for StaticMediaSystem, &qword_269B9C918, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
}

void *sub_251A12394()
{
  return sub_251A11F14((uint64_t (*)(void))type metadata accessor for StaticMediaProfile, &qword_26B21F1D0, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
}

void *sub_251A123DC()
{
  return sub_251A11F14(type metadata accessor for StaticAccessory, &qword_26B21F1C8, type metadata accessor for StaticAccessory, type metadata accessor for StaticAccessory);
}

void *sub_251A12424()
{
  return sub_251A11F14((uint64_t (*)(void))type metadata accessor for StaticUser, &qword_26B21ED88, (uint64_t (*)(void))type metadata accessor for StaticUser, (uint64_t (*)(void))type metadata accessor for StaticUser);
}

void *sub_251A1246C()
{
  return sub_251A11F14((uint64_t (*)(void))type metadata accessor for StaticZone, &qword_269B9CAB8, (uint64_t (*)(void))type metadata accessor for StaticZone, (uint64_t (*)(void))type metadata accessor for StaticZone);
}

void *sub_251A124B4()
{
  return sub_251A11F14((uint64_t (*)(void))type metadata accessor for StaticResident, &qword_26B21F1C0, (uint64_t (*)(void))type metadata accessor for StaticResident, (uint64_t (*)(void))type metadata accessor for StaticResident);
}

void *sub_251A124FC()
{
  return sub_251A11F14(type metadata accessor for StateSnapshot, &qword_26B21EB60, type metadata accessor for StateSnapshot, type metadata accessor for StateSnapshot);
}

void *sub_251A12544()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB70);
  unint64_t v28 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = sub_251F366E0();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
    uint64_t result = (void *)swift_release();
    uint64_t v26 = v28;
LABEL_28:
    *uint64_t v26 = v3;
    return result;
  }
  uint64_t result = (void *)(v2 + 64);
  unint64_t v5 = (unint64_t)((1 << *(unsigned char *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v5) {
    uint64_t result = memmove(result, (const void *)(v1 + 64), 8 * v5);
  }
  int64_t v7 = 0;
  uint64_t v8 = *(void *)(v1 + 16);
  uint64_t v31 = v3;
  uint64_t v32 = v1;
  *(void *)(v3 + 16) = v8;
  uint64_t v9 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(v1 + 64);
  uint64_t v29 = v1 + 64;
  int64_t v30 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v12 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v13 = v12 | (v7 << 6);
      uint64_t v14 = v32;
      goto LABEL_12;
    }
    int64_t v23 = v7 + 1;
    uint64_t v14 = v32;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v23 >= v30) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v29 + 8 * v23);
    ++v7;
    if (!v24)
    {
      int64_t v7 = v23 + 1;
      if (v23 + 1 >= v30) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v29 + 8 * v7);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v11 = (v24 - 1) & v24;
    unint64_t v13 = __clz(__rbit64(v24)) + (v7 << 6);
LABEL_12:
    uint64_t v15 = sub_251F34DA0();
    uint64_t v16 = *(void *)(v15 - 8);
    MEMORY[0x270FA5388](v15);
    unint64_t v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
    unint64_t v20 = *(void *)(v19 + 72) * v13;
    (*(void (**)(char *, unint64_t, uint64_t))(v16 + 16))(v18, *(void *)(v14 + 48) + v20, v15);
    uint64_t v21 = 8 * v13;
    uint64_t v22 = *(void *)(*(void *)(v14 + 56) + v21);
    uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v16 + 32))(*(void *)(v3 + 48) + v20, v18, v15);
    *(void *)(*(void *)(v3 + 56) + v21) = v22;
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v30)
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t v26 = v28;
    uint64_t v3 = v31;
    goto LABEL_28;
  }
  unint64_t v24 = *(void *)(v29 + 8 * v25);
  if (v24)
  {
    int64_t v7 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v7 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v7 >= v30) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v29 + 8 * v7);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_251A127FC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C930);
  unint64_t v28 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = sub_251F366E0();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *unint64_t v28 = v3;
    return result;
  }
  uint64_t result = (void *)(v2 + 64);
  uint64_t v5 = v1 + 64;
  unint64_t v6 = (unint64_t)((1 << *(unsigned char *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v6) {
    uint64_t result = memmove(result, (const void *)(v1 + 64), 8 * v6);
  }
  int64_t v8 = 0;
  *(void *)(v3 + 16) = *(void *)(v1 + 16);
  uint64_t v9 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(v1 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v8 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v12) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v5 + 8 * v25);
    ++v8;
    if (!v26)
    {
      int64_t v8 = v25 + 1;
      if (v25 + 1 >= v12) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v5 + 8 * v8);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v11 = (v26 - 1) & v26;
    unint64_t v14 = __clz(__rbit64(v26)) + (v8 << 6);
LABEL_12:
    uint64_t v15 = 8 * v14;
    uint64_t v16 = *(void **)(*(void *)(v1 + 48) + 8 * v14);
    uint64_t v17 = 32 * v14;
    uint64_t v18 = *(void *)(v1 + 56) + v17;
    uint64_t v19 = *(void *)v18;
    uint64_t v20 = *(void *)(v18 + 8);
    uint64_t v21 = *(void *)(v18 + 16);
    char v22 = *(unsigned char *)(v18 + 24);
    *(void *)(*(void *)(v3 + 48) + v15) = v16;
    uint64_t v23 = *(void *)(v3 + 56) + v17;
    *(void *)uint64_t v23 = v19;
    *(void *)(v23 + 8) = v20;
    *(void *)(v23 + 16) = v21;
    *(unsigned char *)(v23 + 24) = v22;
    id v24 = v16;
    uint64_t result = (void *)sub_251A1A550(v19, v20, v21, v22);
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v12) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v5 + 8 * v27);
  if (v26)
  {
    int64_t v8 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v8 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v8 >= v12) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v5 + 8 * v8);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_251A129E8()
{
  return sub_251A11F14((uint64_t (*)(void))type metadata accessor for StaticHome, &qword_269B9CA78, (uint64_t (*)(void))type metadata accessor for StaticHome, (uint64_t (*)(void))type metadata accessor for StaticHome);
}

void *sub_251A12A30()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CA48);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_251F366E0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    char v16 = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    sub_251A1A930(*(void *)(v2 + 56) + (v15 << 8), (uint64_t)v20);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = v16;
    sub_251A1A930((uint64_t)v20, *(void *)(v4 + 56) + (v15 << 8));
    uint64_t result = (void *)sub_251A1AF84((uint64_t)v20);
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_251A12BF8()
{
  return sub_251A15D74((uint64_t (*)(void))type metadata accessor for StaticEndpoint, &qword_269B9CB30, (uint64_t (*)(void))type metadata accessor for StaticEndpoint, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
}

id sub_251A12C40()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C8D0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_251F366E0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    int64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void **)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = v20;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_251A12DF4()
{
  return sub_251A16FD8(&qword_269B9C860);
}

void *sub_251A12E00()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C858);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_251F366E0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    int64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    long long v20 = *(_OWORD *)(*(void *)(v2 + 56) + v16);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = v19;
    v21[1] = v18;
    *(_OWORD *)(*(void *)(v4 + 56) + v16) = v20;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_251A12FAC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C958);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_251F366E0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 24 * v15;
    uint64_t v19 = *(void *)(v2 + 56) + v18;
    uint64_t v20 = *(void *)v19;
    long long v21 = *(_OWORD *)(v19 + 8);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t v22 = *(void *)(v4 + 56) + v18;
    *(void *)uint64_t v22 = v20;
    *(_OWORD *)(v22 + 8) = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_251A1318C()
{
  return sub_251A17968(&qword_269B9C978);
}

void *sub_251A13198()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C968);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_251F366E0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v22 = v1;
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      int64_t v9 = v19 + 1;
      if (v19 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v9);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 4 * v15;
    int v17 = *(_DWORD *)(*(void *)(v2 + 48) + 4 * v15);
    uint64_t v18 = 40 * v15;
    sub_251A1B128(*(void *)(v2 + 56) + 40 * v15, (uint64_t)v23, &qword_269B9C970);
    *(_DWORD *)(*(void *)(v4 + 48) + v16) = v17;
    id result = (void *)sub_251A1A5BC((uint64_t)v23, *(void *)(v4 + 56) + v18);
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v13)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v1 = v22;
    goto LABEL_28;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_251A13380()
{
  return sub_251A11F14((uint64_t (*)(void))type metadata accessor for StaticEndpoint, &qword_269B9C948, (uint64_t (*)(void))type metadata accessor for StaticEndpoint, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
}

void *sub_251A133C8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for StaticMatterDevice();
  uint64_t v25 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C950);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_251F366E0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    id result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v7;
    return result;
  }
  unint64_t v24 = v1;
  id result = (void *)(v6 + 64);
  uint64_t v9 = v5 + 64;
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v9 + 8 * v10) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  }
  int64_t v11 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v5 + 64);
  int64_t v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v17 = v16 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v21 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v21 >= v15) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v9 + 8 * v21);
    ++v11;
    if (!v22)
    {
      int64_t v11 = v21 + 1;
      if (v21 + 1 >= v15) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v9 + 8 * v11);
      if (!v22) {
        break;
      }
    }
LABEL_22:
    unint64_t v14 = (v22 - 1) & v22;
    unint64_t v17 = __clz(__rbit64(v22)) + (v11 << 6);
LABEL_9:
    uint64_t v18 = 8 * v17;
    uint64_t v19 = *(void *)(*(void *)(v5 + 48) + 8 * v17);
    unint64_t v20 = *(void *)(v25 + 72) * v17;
    sub_251A1AEB4(*(void *)(v5 + 56) + v20, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
    *(void *)(*(void *)(v7 + 48) + v18) = v19;
    id result = (void *)sub_251A1AF1C((uint64_t)v4, *(void *)(v7 + 56) + v20, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v15)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v1 = v24;
    goto LABEL_25;
  }
  unint64_t v22 = *(void *)(v9 + 8 * v23);
  if (v22)
  {
    int64_t v11 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v11 >= v15) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v9 + 8 * v11);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_251A13644()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED18);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_251F366E0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    int64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_251A137FC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED10);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_251F366E0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v27 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v13) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v27);
    ++v9;
    if (!v28)
    {
      int64_t v9 = v27 + 1;
      if (v27 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v28 = *(void *)(v6 + 8 * v9);
      if (!v28) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v28 - 1) & v28;
    unint64_t v15 = __clz(__rbit64(v28)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    uint64_t v21 = *(void *)(v2 + 56) + v20;
    uint64_t v22 = *(void *)v21;
    uint64_t v23 = *(void *)(v21 + 24);
    int64_t v24 = (void *)(*(void *)(v4 + 48) + v16);
    long long v25 = *(_OWORD *)(v21 + 8);
    void *v24 = v19;
    v24[1] = v18;
    uint64_t v26 = *(void *)(v4 + 56) + v20;
    *(void *)uint64_t v26 = v22;
    *(_OWORD *)(v26 + 8) = v25;
    *(void *)(v26 + 24) = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v29 = v27 + 2;
  if (v29 >= v13) {
    goto LABEL_26;
  }
  unint64_t v28 = *(void *)(v6 + 8 * v29);
  if (v28)
  {
    int64_t v9 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v9);
    ++v29;
    if (v28) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_251A139F0()
{
  return sub_251A16574(&qword_269B9CB20);
}

id sub_251A139FC()
{
  return sub_251A16574(&qword_269B9CAC0);
}

void *sub_251A13A08()
{
  return sub_251A11F14((uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent, &qword_269B9CAD0, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent);
}

void *sub_251A13A50()
{
  return sub_251A13A5C(&qword_269B9C840);
}

void *sub_251A13A5C(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_251F366E0();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v14) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v7 + 8 * v18);
    ++v10;
    if (!v19)
    {
      int64_t v10 = v18 + 1;
      if (v18 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v7 + 8 * v10);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v10 << 6);
LABEL_12:
    char v17 = *(unsigned char *)(*(void *)(v3 + 48) + v16);
    sub_251A0D51C(*(void *)(v3 + 56) + 32 * v16, (uint64_t)v21);
    *(unsigned char *)(*(void *)(v5 + 48) + v16) = v17;
    id result = sub_251A0D578(v21, (_OWORD *)(*(void *)(v5 + 56) + 32 * v16));
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v14) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v7 + 8 * v20);
  if (v19)
  {
    int64_t v10 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v7 + 8 * v10);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_251A13C14()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C838);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_251F366E0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      int64_t v9 = v24 + 1;
      if (v24 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v6 + 8 * v9);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v25 - 1) & v25;
    unint64_t v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 2 * v15;
    __int16 v17 = *(_WORD *)(*(void *)(v2 + 48) + 2 * v15);
    uint64_t v18 = 24 * v15;
    uint64_t v19 = *(void *)(v2 + 56) + v18;
    uint64_t v20 = *(void *)(v19 + 16);
    long long v21 = *(_OWORD *)v19;
    *(_WORD *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t v22 = *(void *)(v4 + 56) + v18;
    *(_OWORD *)uint64_t v22 = v21;
    *(void *)(v22 + 16) = v20;
    id v23 = (id)v21;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v13) {
    goto LABEL_26;
  }
  unint64_t v25 = *(void *)(v6 + 8 * v26);
  if (v25)
  {
    int64_t v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v9);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_251A13DF4(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_251F366E0();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v14) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v7 + 8 * v21);
    ++v10;
    if (!v22)
    {
      int64_t v10 = v21 + 1;
      if (v21 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v7 + 8 * v10);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v22 - 1) & v22;
    unint64_t v16 = __clz(__rbit64(v22)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 2 * v16;
    __int16 v18 = *(_WORD *)(*(void *)(v3 + 48) + 2 * v16);
    uint64_t v19 = 8 * v16;
    uint64_t v20 = *(void *)(*(void *)(v3 + 56) + v19);
    *(_WORD *)(*(void *)(v5 + 48) + v17) = v18;
    *(void *)(*(void *)(v5 + 56) + v19) = v20;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v14) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v7 + 8 * v23);
  if (v22)
  {
    int64_t v10 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v7 + 8 * v10);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_251A13F94()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C9F0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_251F366E0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t v25 = v1;
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    sub_251A0D51C(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    int64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v21 = v19;
    v21[1] = v18;
    sub_251A0D578(v26, (_OWORD *)(*(void *)(v4 + 56) + v20));
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_251A1417C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CA20);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_251F366E0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 24 * v15;
    uint64_t v19 = *(void *)(v2 + 56) + v18;
    uint64_t v20 = *(void *)v19;
    unint64_t v21 = *(void *)(v19 + 8);
    char v22 = *(unsigned char *)(v19 + 16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t v23 = *(void *)(v4 + 56) + v18;
    *(void *)uint64_t v23 = v20;
    *(void *)(v23 + 8) = v21;
    *(unsigned char *)(v23 + 16) = v22;
    id v24 = v17;
    id result = (void *)sub_251A1A870(v20, v21, v22);
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_251A14350()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for BatchRequestError.ID();
  uint64_t v25 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C940);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_251F366E0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    id result = (id)swift_release();
LABEL_25:
    *uint64_t v1 = v7;
    return result;
  }
  id v24 = v1;
  id result = (id)(v6 + 64);
  uint64_t v9 = v5 + 64;
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v9 + 8 * v10) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  }
  int64_t v11 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v5 + 64);
  int64_t v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v17 = v16 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v21 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v21 >= v15) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v9 + 8 * v21);
    ++v11;
    if (!v22)
    {
      int64_t v11 = v21 + 1;
      if (v21 + 1 >= v15) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v9 + 8 * v11);
      if (!v22) {
        break;
      }
    }
LABEL_22:
    unint64_t v14 = (v22 - 1) & v22;
    unint64_t v17 = __clz(__rbit64(v22)) + (v11 << 6);
LABEL_9:
    unint64_t v18 = *(void *)(v25 + 72) * v17;
    sub_251A1AEB4(*(void *)(v5 + 48) + v18, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for BatchRequestError.ID);
    uint64_t v19 = 8 * v17;
    uint64_t v20 = *(void **)(*(void *)(v5 + 56) + 8 * v17);
    sub_251A1AF1C((uint64_t)v4, *(void *)(v7 + 48) + v18, (uint64_t (*)(void))type metadata accessor for BatchRequestError.ID);
    *(void *)(*(void *)(v7 + 56) + v19) = v20;
    id result = v20;
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v15)
  {
LABEL_23:
    id result = (id)swift_release();
    uint64_t v1 = v24;
    goto LABEL_25;
  }
  unint64_t v22 = *(void *)(v9 + 8 * v23);
  if (v22)
  {
    int64_t v11 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v11 >= v15) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v9 + 8 * v11);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_251A145D8()
{
  return sub_251A173A0(&qword_269B9CAF0);
}

void *sub_251A145E4()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C848);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_251F366E0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      int64_t v9 = v19 + 1;
      if (v19 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v9);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 4 * v15;
    int v17 = *(_DWORD *)(*(void *)(v2 + 48) + 4 * v15);
    uint64_t v18 = 32 * v15;
    sub_251A0D51C(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v22);
    *(_DWORD *)(*(void *)(v4 + 48) + v16) = v17;
    id result = sub_251A0D578(v22, (_OWORD *)(*(void *)(v4 + 56) + v18));
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v13) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_251A147A8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C888);
  uint64_t v36 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = sub_251F366E0();
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v40 = v2;
  if (!v3)
  {
    id result = (void *)swift_release();
    uint64_t v35 = v40;
    int64_t v34 = v36;
LABEL_28:
    *int64_t v34 = v35;
    return result;
  }
  uint64_t v4 = v2;
  id result = (void *)(v2 + 64);
  unint64_t v6 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  uint64_t v38 = (const void *)(v1 + 64);
  if (v4 != v1 || (unint64_t)result >= v1 + 64 + 8 * v6)
  {
    id result = memmove(result, v38, 8 * v6);
    uint64_t v4 = v40;
  }
  int64_t v8 = 0;
  *(void *)(v4 + 16) = *(void *)(v1 + 16);
  uint64_t v9 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v39 = v1;
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(v1 + 64);
  int64_t v37 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v40;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      int64_t v41 = v8;
      unint64_t v14 = v13 | (v8 << 6);
      uint64_t v15 = v39;
      goto LABEL_12;
    }
    int64_t v30 = v8 + 1;
    uint64_t v15 = v39;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v30 >= v37) {
      goto LABEL_26;
    }
    unint64_t v31 = *((void *)v38 + v30);
    int64_t v32 = v8 + 1;
    if (!v31)
    {
      int64_t v32 = v30 + 1;
      if (v30 + 1 >= v37) {
        goto LABEL_26;
      }
      unint64_t v31 = *((void *)v38 + v32);
      if (!v31) {
        break;
      }
    }
LABEL_25:
    unint64_t v11 = (v31 - 1) & v31;
    int64_t v41 = v32;
    unint64_t v14 = __clz(__rbit64(v31)) + (v32 << 6);
LABEL_12:
    uint64_t v16 = sub_251F34DA0();
    uint64_t v17 = *(void *)(v16 - 8);
    MEMORY[0x270FA5388](v16);
    int64_t v19 = (char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
    unint64_t v21 = *(void *)(v20 + 72) * v14;
    (*(void (**)(char *, unint64_t, uint64_t))(v17 + 16))(v19, *(void *)(v15 + 48) + v21, v16);
    uint64_t v22 = *(void *)(v15 + 56);
    uint64_t v23 = 32 * v14;
    id v24 = (long long *)(v22 + 32 * v14);
    uint64_t v25 = (void *)*((void *)v24 + 2);
    unint64_t v26 = (void *)*((void *)v24 + 3);
    unint64_t v27 = *(void *)(v12 + 48) + v21;
    unint64_t v28 = *(void (**)(unint64_t, char *, uint64_t))(v17 + 32);
    long long v42 = *v24;
    v28(v27, v19, v16);
    uint64_t v29 = *(void *)(v12 + 56) + v23;
    *(_OWORD *)uint64_t v29 = v42;
    *(void *)(v29 + 16) = v25;
    *(void *)(v29 + 24) = v26;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_251A1A4CC(v25);
    id result = sub_251A1A4CC(v26);
    int64_t v8 = v41;
  }
  int64_t v33 = v30 + 2;
  if (v33 >= v37)
  {
LABEL_26:
    id result = (void *)swift_release();
    int64_t v34 = v36;
    uint64_t v35 = v40;
    goto LABEL_28;
  }
  unint64_t v31 = *((void *)v38 + v33);
  if (v31)
  {
    int64_t v32 = v33;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v32 = v33 + 1;
    if (__OFADD__(v33, 1)) {
      break;
    }
    if (v32 >= v37) {
      goto LABEL_26;
    }
    unint64_t v31 = *((void *)v38 + v32);
    ++v33;
    if (v31) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_251A14AB8()
{
  return sub_251A173A0(&qword_269B9C868);
}

void *sub_251A14AC4()
{
  return sub_251A14B10(&qword_269B9C870, (uint64_t (*)(unsigned char *, uint64_t))sub_251A1A444);
}

void *sub_251A14AE4()
{
  return sub_251A173A0(&qword_269B9C878);
}

void *sub_251A14AF0()
{
  return sub_251A14B10(&qword_269B9C880, (uint64_t (*)(unsigned char *, uint64_t))sub_251A1A444);
}

void *sub_251A14B10(uint64_t *a1, uint64_t (*a2)(unsigned char *, uint64_t))
{
  uint64_t v29 = a2;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  unint64_t v26 = v2;
  uint64_t v3 = *v2;
  uint64_t v4 = sub_251F366E0();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *unint64_t v26 = v5;
    return result;
  }
  id result = (void *)(v4 + 64);
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v3 + 64);
  uint64_t v27 = v3 + 64;
  int64_t v28 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v13 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v14 = v13 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v28) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v27 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v28) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v27 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v14 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v15 = sub_251F34DA0();
    uint64_t v16 = *(void *)(v15 - 8);
    MEMORY[0x270FA5388](v15);
    uint64_t v18 = (char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
    unint64_t v20 = *(void *)(v19 + 72) * v14;
    (*(void (**)(char *, unint64_t, uint64_t))(v16 + 16))(v18, *(void *)(v3 + 48) + v20, v15);
    uint64_t v21 = 40 * v14;
    sub_251A1A4EC(*(void *)(v3 + 56) + v21, (uint64_t)v30);
    (*(void (**)(unint64_t, char *, uint64_t))(v16 + 32))(*(void *)(v5 + 48) + v20, v18, v15);
    id result = (void *)v29(v30, *(void *)(v5 + 56) + v21);
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v28) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v27 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v28) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v27 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_251A14DBC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C998);
  uint64_t v38 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = sub_251F366E0();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v38 = v3;
    return result;
  }
  id result = (void *)(v2 + 64);
  unint64_t v5 = (unint64_t)((1 << *(unsigned char *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v5) {
    id result = memmove(result, (const void *)(v1 + 64), 8 * v5);
  }
  int64_t v7 = 0;
  *(void *)(v3 + 16) = *(void *)(v1 + 16);
  uint64_t v8 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(v1 + 64);
  uint64_t v39 = v1 + 64;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      unint64_t v11 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v12 = v11 | (v7 << 6);
      goto LABEL_12;
    }
    int64_t v34 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v34 >= v40) {
      goto LABEL_26;
    }
    unint64_t v35 = *(void *)(v39 + 8 * v34);
    ++v7;
    if (!v35)
    {
      int64_t v7 = v34 + 1;
      if (v34 + 1 >= v40) {
        goto LABEL_26;
      }
      unint64_t v35 = *(void *)(v39 + 8 * v7);
      if (!v35) {
        break;
      }
    }
LABEL_25:
    unint64_t v10 = (v35 - 1) & v35;
    unint64_t v12 = __clz(__rbit64(v35)) + (v7 << 6);
LABEL_12:
    uint64_t v13 = sub_251F34DA0();
    uint64_t v14 = *(void *)(v13 - 8);
    MEMORY[0x270FA5388](v13);
    uint64_t v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
    unint64_t v18 = *(void *)(v17 + 72) * v12;
    (*(void (**)(char *, unint64_t, uint64_t))(v14 + 16))(v16, *(void *)(v1 + 48) + v18, v13);
    unint64_t v19 = v12 << 7;
    unint64_t v20 = (long long *)(*(void *)(v1 + 56) + v19);
    long long v22 = *v20;
    long long v21 = v20[1];
    long long v23 = v20[2];
    long long v44 = v20[3];
    long long v24 = v20[4];
    long long v25 = v20[5];
    long long v26 = v20[7];
    long long v47 = v20[6];
    long long v48 = v26;
    long long v45 = v24;
    long long v46 = v25;
    long long v42 = v21;
    long long v43 = v23;
    long long v41 = v22;
    (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(*(void *)(v3 + 48) + v18, v16, v13);
    uint64_t v27 = (_OWORD *)(*(void *)(v3 + 56) + v19);
    long long v28 = v45;
    long long v29 = v46;
    long long v30 = v48;
    v27[6] = v47;
    v27[7] = v30;
    v27[4] = v28;
    v27[5] = v29;
    long long v31 = v41;
    long long v32 = v42;
    long long v33 = v44;
    v27[2] = v43;
    v27[3] = v33;
    *uint64_t v27 = v31;
    v27[1] = v32;
    id result = (void *)sub_251A1A678((uint64_t)&v41);
  }
  int64_t v36 = v34 + 2;
  if (v36 >= v40) {
    goto LABEL_26;
  }
  unint64_t v35 = *(void *)(v39 + 8 * v36);
  if (v35)
  {
    int64_t v7 = v36;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v7 = v36 + 1;
    if (__OFADD__(v36, 1)) {
      break;
    }
    if (v7 >= v40) {
      goto LABEL_26;
    }
    unint64_t v35 = *(void *)(v39 + 8 * v7);
    ++v36;
    if (v35) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_251A1509C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CB08);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_251F366E0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      int64_t v9 = v19 + 1;
      if (v19 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v9);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 32 * v15;
    sub_251A0D51C(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v22);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    sub_251A0D578(v22, (_OWORD *)(*(void *)(v4 + 56) + v18));
    id result = v17;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v13) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_251A15264()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for RoomType(0);
  uint64_t v29 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CAD8);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_251F366E0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    id result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v7;
    return result;
  }
  uint64_t v27 = v1;
  id result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v28 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v23 >= v14) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_23;
      }
      unint64_t v24 = *(void *)(v28 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_9:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v16);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    unint64_t v21 = *(void *)(v29 + 72) * v16;
    sub_251A1AEB4(*(void *)(v5 + 56) + v21, (uint64_t)v4, type metadata accessor for RoomType);
    long long v22 = (void *)(*(void *)(v7 + 48) + v17);
    *long long v22 = v19;
    v22[1] = v20;
    sub_251A1AF1C((uint64_t)v4, *(void *)(v7 + 56) + v21, type metadata accessor for RoomType);
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v1 = v27;
    goto LABEL_25;
  }
  unint64_t v24 = *(void *)(v28 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_251A154F8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for StaticCharacteristic();
  uint64_t v24 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F1D8);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_251F366E0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    id result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v7;
    return result;
  }
  int64_t v23 = v1;
  id result = (void *)(v6 + 64);
  uint64_t v9 = v5 + 64;
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v9 + 8 * v10) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  }
  int64_t v11 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v5 + 64);
  int64_t v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v17 = v16 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v20 >= v15) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v9 + 8 * v20);
    ++v11;
    if (!v21)
    {
      int64_t v11 = v20 + 1;
      if (v20 + 1 >= v15) {
        goto LABEL_23;
      }
      unint64_t v21 = *(void *)(v9 + 8 * v11);
      if (!v21) {
        break;
      }
    }
LABEL_22:
    unint64_t v14 = (v21 - 1) & v21;
    unint64_t v17 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_9:
    char v18 = *(unsigned char *)(*(void *)(v5 + 48) + v17);
    unint64_t v19 = *(void *)(v24 + 72) * v17;
    sub_251A1AEB4(*(void *)(v5 + 56) + v19, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
    *(unsigned char *)(*(void *)(v7 + 48) + v17) = v18;
    id result = (void *)sub_251A1AF1C((uint64_t)v4, *(void *)(v7 + 56) + v19, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v15)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v1 = v23;
    goto LABEL_25;
  }
  unint64_t v21 = *(void *)(v9 + 8 * v22);
  if (v21)
  {
    int64_t v11 = v22;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v11 >= v15) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v9 + 8 * v11);
    ++v22;
    if (v21) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_251A15770()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CA80);
  uint64_t v27 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = sub_251F366E0();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
    id result = (void *)swift_release();
    int64_t v25 = v27;
LABEL_28:
    *int64_t v25 = v3;
    return result;
  }
  id result = (void *)(v2 + 64);
  unint64_t v5 = (unint64_t)((1 << *(unsigned char *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v5) {
    id result = memmove(result, (const void *)(v1 + 64), 8 * v5);
  }
  int64_t v7 = 0;
  uint64_t v8 = *(void *)(v1 + 16);
  uint64_t v30 = v3;
  uint64_t v31 = v1;
  *(void *)(v3 + 16) = v8;
  uint64_t v9 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(v1 + 64);
  uint64_t v28 = v1 + 64;
  int64_t v29 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v12 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v13 = v12 | (v7 << 6);
      uint64_t v14 = v31;
      goto LABEL_12;
    }
    int64_t v22 = v7 + 1;
    uint64_t v14 = v31;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v29) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v28 + 8 * v22);
    ++v7;
    if (!v23)
    {
      int64_t v7 = v22 + 1;
      if (v22 + 1 >= v29) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v28 + 8 * v7);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v11 = (v23 - 1) & v23;
    unint64_t v13 = __clz(__rbit64(v23)) + (v7 << 6);
LABEL_12:
    uint64_t v15 = sub_251F34DA0();
    uint64_t v16 = *(void *)(v15 - 8);
    MEMORY[0x270FA5388](v15);
    char v18 = (char *)&v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
    unint64_t v20 = *(void *)(v19 + 72) * v13;
    (*(void (**)(char *, unint64_t, uint64_t))(v16 + 16))(v18, *(void *)(v14 + 48) + v20, v15);
    char v21 = *(unsigned char *)(*(void *)(v14 + 56) + v13);
    id result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v16 + 32))(*(void *)(v3 + 48) + v20, v18, v15);
    *(unsigned char *)(*(void *)(v3 + 56) + v13) = v21;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v29)
  {
LABEL_26:
    id result = (void *)swift_release();
    int64_t v25 = v27;
    uint64_t v3 = v30;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v28 + 8 * v24);
  if (v23)
  {
    int64_t v7 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v7 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v7 >= v29) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v28 + 8 * v7);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_251A15A24()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C8E8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_251F366E0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 16 * v15;
    long long v19 = *(_OWORD *)(*(void *)(v2 + 56) + v18);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(_OWORD *)(*(void *)(v4 + 56) + v18) = v19;
    id result = (void *)swift_unknownObjectRetain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_251A15BD0()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CA70);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_251F366E0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_251A15D74(uint64_t (*a1)(void), uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  long long v32 = a3;
  long long v33 = a4;
  uint64_t v6 = v4;
  uint64_t v7 = a1(0);
  uint64_t v31 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7 - 8);
  int64_t v9 = (char *)&v30 - v8;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v10 = *v4;
  uint64_t v11 = sub_251F366E0();
  uint64_t v12 = v11;
  if (!*(void *)(v10 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    *uint64_t v6 = v12;
    return result;
  }
  uint64_t v30 = v6;
  id result = (void *)(v11 + 64);
  uint64_t v14 = v10 + 64;
  unint64_t v15 = (unint64_t)((1 << *(unsigned char *)(v12 + 32)) + 63) >> 6;
  if (v12 != v10 || (unint64_t)result >= v10 + 64 + 8 * v15) {
    id result = memmove(result, (const void *)(v10 + 64), 8 * v15);
  }
  int64_t v17 = 0;
  *(void *)(v12 + 16) = *(void *)(v10 + 16);
  uint64_t v18 = 1 << *(unsigned char *)(v10 + 32);
  uint64_t v19 = -1;
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  unint64_t v20 = v19 & *(void *)(v10 + 64);
  int64_t v21 = (unint64_t)(v18 + 63) >> 6;
  while (1)
  {
    if (v20)
    {
      unint64_t v22 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      unint64_t v23 = v22 | (v17 << 6);
      goto LABEL_12;
    }
    int64_t v27 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v27 >= v21) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v14 + 8 * v27);
    ++v17;
    if (!v28)
    {
      int64_t v17 = v27 + 1;
      if (v27 + 1 >= v21) {
        goto LABEL_26;
      }
      unint64_t v28 = *(void *)(v14 + 8 * v17);
      if (!v28) {
        break;
      }
    }
LABEL_25:
    unint64_t v20 = (v28 - 1) & v28;
    unint64_t v23 = __clz(__rbit64(v28)) + (v17 << 6);
LABEL_12:
    uint64_t v24 = 2 * v23;
    __int16 v25 = *(_WORD *)(*(void *)(v10 + 48) + 2 * v23);
    unint64_t v26 = *(void *)(v31 + 72) * v23;
    sub_251A1AEB4(*(void *)(v10 + 56) + v26, (uint64_t)v9, v32);
    *(_WORD *)(*(void *)(v12 + 48) + v24) = v25;
    id result = (void *)sub_251A1AF1C((uint64_t)v9, *(void *)(v12 + 56) + v26, v33);
  }
  int64_t v29 = v27 + 2;
  if (v29 >= v21)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v6 = v30;
    goto LABEL_28;
  }
  unint64_t v28 = *(void *)(v14 + 8 * v29);
  if (v28)
  {
    int64_t v17 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v17 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v17 >= v21) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v14 + 8 * v17);
    ++v29;
    if (v28) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_251A15FD0()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C9B0);
  int64_t v27 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = sub_251F366E0();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
    id result = (void *)swift_release();
    __int16 v25 = v27;
LABEL_28:
    *__int16 v25 = v3;
    return result;
  }
  id result = (void *)(v2 + 64);
  unint64_t v5 = (unint64_t)((1 << *(unsigned char *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v5) {
    id result = memmove(result, (const void *)(v1 + 64), 8 * v5);
  }
  int64_t v7 = 0;
  uint64_t v8 = *(void *)(v1 + 16);
  uint64_t v30 = v3;
  uint64_t v31 = v1;
  *(void *)(v3 + 16) = v8;
  uint64_t v9 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(v1 + 64);
  uint64_t v28 = v1 + 64;
  int64_t v29 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v12 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v13 = v12 | (v7 << 6);
      uint64_t v14 = v31;
      goto LABEL_12;
    }
    int64_t v22 = v7 + 1;
    uint64_t v14 = v31;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v29) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v28 + 8 * v22);
    ++v7;
    if (!v23)
    {
      int64_t v7 = v22 + 1;
      if (v22 + 1 >= v29) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v28 + 8 * v7);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v11 = (v23 - 1) & v23;
    unint64_t v13 = __clz(__rbit64(v23)) + (v7 << 6);
LABEL_12:
    uint64_t v15 = sub_251F34DA0();
    uint64_t v16 = *(void *)(v15 - 8);
    MEMORY[0x270FA5388](v15);
    uint64_t v18 = (char *)&v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
    unint64_t v20 = *(void *)(v19 + 72) * v13;
    (*(void (**)(char *, unint64_t, uint64_t))(v16 + 16))(v18, *(void *)(v14 + 48) + v20, v15);
    char v21 = *(unsigned char *)(*(void *)(v14 + 56) + v13);
    id result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v16 + 32))(*(void *)(v3 + 48) + v20, v18, v15);
    *(unsigned char *)(*(void *)(v3 + 56) + v13) = v21;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v29)
  {
LABEL_26:
    id result = (void *)swift_release();
    __int16 v25 = v27;
    uint64_t v3 = v30;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v28 + 8 * v24);
  if (v23)
  {
    int64_t v7 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v7 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v7 >= v29) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v28 + 8 * v7);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_251A16284()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CA38);
  uint64_t v31 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = sub_251F366E0();
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v35 = v2;
  if (!v3)
  {
    id result = (id)swift_release();
    uint64_t v29 = v35;
    uint64_t v28 = v31;
LABEL_28:
    *uint64_t v28 = v29;
    return result;
  }
  uint64_t v4 = v2;
  id result = (id)(v2 + 64);
  unint64_t v6 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v1 || (unint64_t)result >= v1 + 64 + 8 * v6)
  {
    id result = memmove(result, (const void *)(v1 + 64), 8 * v6);
    uint64_t v4 = v35;
  }
  int64_t v8 = 0;
  *(void *)(v4 + 16) = *(void *)(v1 + 16);
  uint64_t v9 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v34 = v1;
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(v1 + 64);
  uint64_t v32 = v1 + 64;
  int64_t v33 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v35;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v8 << 6);
      uint64_t v15 = v34;
      goto LABEL_12;
    }
    int64_t v25 = v8 + 1;
    uint64_t v15 = v34;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v33) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v32 + 8 * v25);
    ++v8;
    if (!v26)
    {
      int64_t v8 = v25 + 1;
      if (v25 + 1 >= v33) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v32 + 8 * v8);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v11 = (v26 - 1) & v26;
    unint64_t v14 = __clz(__rbit64(v26)) + (v8 << 6);
LABEL_12:
    uint64_t v16 = sub_251F34DA0();
    uint64_t v17 = *(void *)(v16 - 8);
    MEMORY[0x270FA5388](v16);
    uint64_t v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
    unint64_t v21 = *(void *)(v20 + 72) * v14;
    (*(void (**)(char *, unint64_t, uint64_t))(v17 + 16))(v19, *(void *)(v15 + 48) + v21, v16);
    uint64_t v22 = *(void *)(v15 + 56);
    uint64_t v23 = 8 * v14;
    int64_t v24 = *(void **)(v22 + 8 * v14);
    (*(void (**)(unint64_t, char *, uint64_t))(v17 + 32))(*(void *)(v12 + 48) + v21, v19, v16);
    *(void *)(*(void *)(v12 + 56) + v23) = v24;
    id result = v24;
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v33)
  {
LABEL_26:
    id result = (id)swift_release();
    uint64_t v28 = v31;
    uint64_t v29 = v35;
    goto LABEL_28;
  }
  unint64_t v26 = *(void *)(v32 + 8 * v27);
  if (v26)
  {
    int64_t v8 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v8 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v8 >= v33) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v32 + 8 * v8);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_251A16550()
{
  return sub_251A173A0(&qword_269B9CA40);
}

id sub_251A1655C()
{
  return sub_251A16574(&qword_26B21EB78);
}

id sub_251A16568()
{
  return sub_251A16574(&qword_26B21ED90);
}

id sub_251A16574(uint64_t *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v31 = v1;
  uint64_t v2 = *v1;
  uint64_t v3 = sub_251F366E0();
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v35 = v3;
  if (!v4)
  {
    id result = (id)swift_release();
    uint64_t v29 = v35;
    uint64_t v28 = v31;
LABEL_28:
    *uint64_t v28 = v29;
    return result;
  }
  uint64_t v5 = v3;
  id result = (id)(v3 + 64);
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
  {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
    uint64_t v5 = v35;
  }
  int64_t v9 = 0;
  *(void *)(v5 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v34 = v2;
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  uint64_t v32 = v2 + 64;
  int64_t v33 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v13 = v35;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      uint64_t v16 = v34;
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    uint64_t v16 = v34;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v33) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v32 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v33) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v32 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v17 = sub_251F34DA0();
    uint64_t v18 = *(void *)(v17 - 8);
    MEMORY[0x270FA5388](v17);
    uint64_t v20 = (char *)&v30 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
    unint64_t v22 = *(void *)(v21 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v18 + 16))(v20, *(void *)(v16 + 48) + v22, v17);
    uint64_t v23 = 8 * v15;
    int64_t v24 = *(void **)(*(void *)(v16 + 56) + v23);
    (*(void (**)(unint64_t, char *, uint64_t))(v18 + 32))(*(void *)(v13 + 48) + v22, v20, v17);
    *(void *)(*(void *)(v13 + 56) + v23) = v24;
    id result = v24;
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v33)
  {
LABEL_26:
    id result = (id)swift_release();
    uint64_t v28 = v31;
    uint64_t v29 = v35;
    goto LABEL_28;
  }
  unint64_t v26 = *(void *)(v32 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v33) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v32 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_251A16834()
{
  return sub_251A17968(&qword_269B9CA10);
}

void *sub_251A16840()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C8F8);
  uint64_t v31 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = sub_251F366E0();
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v35 = v2;
  if (!v3)
  {
    id result = (void *)swift_release();
    uint64_t v29 = v35;
    uint64_t v28 = v31;
LABEL_28:
    *uint64_t v28 = v29;
    return result;
  }
  uint64_t v4 = v2;
  id result = (void *)(v2 + 64);
  unint64_t v6 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v1 || (unint64_t)result >= v1 + 64 + 8 * v6)
  {
    id result = memmove(result, (const void *)(v1 + 64), 8 * v6);
    uint64_t v4 = v35;
  }
  int64_t v8 = 0;
  *(void *)(v4 + 16) = *(void *)(v1 + 16);
  uint64_t v9 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v34 = v1;
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(v1 + 64);
  uint64_t v32 = v1 + 64;
  int64_t v33 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v35;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v8 << 6);
      uint64_t v15 = v34;
      goto LABEL_12;
    }
    int64_t v25 = v8 + 1;
    uint64_t v15 = v34;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v33) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v32 + 8 * v25);
    ++v8;
    if (!v26)
    {
      int64_t v8 = v25 + 1;
      if (v25 + 1 >= v33) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v32 + 8 * v8);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v11 = (v26 - 1) & v26;
    unint64_t v14 = __clz(__rbit64(v26)) + (v8 << 6);
LABEL_12:
    uint64_t v16 = sub_251F34DA0();
    uint64_t v17 = *(void *)(v16 - 8);
    MEMORY[0x270FA5388](v16);
    uint64_t v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
    unint64_t v21 = *(void *)(v20 + 72) * v14;
    (*(void (**)(char *, unint64_t, uint64_t))(v17 + 16))(v19, *(void *)(v15 + 48) + v21, v16);
    uint64_t v22 = *(void *)(v15 + 56);
    uint64_t v23 = 8 * v14;
    uint64_t v24 = *(void *)(v22 + 8 * v14);
    (*(void (**)(unint64_t, char *, uint64_t))(v17 + 32))(*(void *)(v12 + 48) + v21, v19, v16);
    *(void *)(*(void *)(v12 + 56) + v23) = v24;
    id result = (void *)swift_retain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v33)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v28 = v31;
    uint64_t v29 = v35;
    goto LABEL_28;
  }
  unint64_t v26 = *(void *)(v32 + 8 * v27);
  if (v26)
  {
    int64_t v8 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v8 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v8 >= v33) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v32 + 8 * v8);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_251A16B0C()
{
  return sub_251A173A0(&qword_269B9C8F0);
}

void *sub_251A16B18()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for IconTextValueStringDataHolder();
  uint64_t v29 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
  uint64_t v28 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  unint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C9D8);
  uint64_t v8 = *v0;
  uint64_t v9 = sub_251F366E0();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16))
  {
    id result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v10;
    return result;
  }
  int64_t v27 = v1;
  id result = (void *)(v9 + 64);
  uint64_t v12 = v8 + 64;
  unint64_t v13 = (unint64_t)((1 << *(unsigned char *)(v10 + 32)) + 63) >> 6;
  if (v10 != v8 || (unint64_t)result >= v12 + 8 * v13) {
    id result = memmove(result, (const void *)(v8 + 64), 8 * v13);
  }
  int64_t v14 = 0;
  *(void *)(v10 + 16) = *(void *)(v8 + 16);
  uint64_t v15 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & *(void *)(v8 + 64);
  int64_t v18 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      unint64_t v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v20 = v19 | (v14 << 6);
      goto LABEL_9;
    }
    int64_t v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v23 >= v18) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v12 + 8 * v23);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v23 + 1;
      if (v23 + 1 >= v18) {
        goto LABEL_23;
      }
      unint64_t v24 = *(void *)(v12 + 8 * v14);
      if (!v24) {
        break;
      }
    }
LABEL_22:
    unint64_t v17 = (v24 - 1) & v24;
    unint64_t v20 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_9:
    unint64_t v21 = *(void *)(v28 + 72) * v20;
    sub_251A1AEB4(*(void *)(v8 + 48) + v21, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
    unint64_t v22 = *(void *)(v29 + 72) * v20;
    sub_251A1AEB4(*(void *)(v8 + 56) + v22, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
    sub_251A1AF1C((uint64_t)v7, *(void *)(v10 + 48) + v21, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
    id result = (void *)sub_251A1AF1C((uint64_t)v4, *(void *)(v10 + 56) + v22, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v18)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v1 = v27;
    goto LABEL_25;
  }
  unint64_t v24 = *(void *)(v12 + 8 * v25);
  if (v24)
  {
    int64_t v14 = v25;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v14 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v14 >= v18) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v12 + 8 * v14);
    ++v25;
    if (v24) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_251A16E48()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C9D0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_251F366E0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v20 = __clz(__rbit64(v18));
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = v20 + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_251A16FD8(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_251F366E0();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v7 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 16 * v16;
    unint64_t v18 = (void *)(*(void *)(v3 + 48) + 16 * v16);
    uint64_t v19 = v18[1];
    uint64_t v20 = 8 * v16;
    uint64_t v21 = *(void *)(*(void *)(v3 + 56) + v20);
    unint64_t v22 = (void *)(*(void *)(v5 + 48) + v17);
    *unint64_t v22 = *v18;
    v22[1] = v19;
    *(void *)(*(void *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v7 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_251A17188()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C988);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_251F366E0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_251A17338()
{
  return sub_251A14B10(&qword_269B9C928, (uint64_t (*)(unsigned char *, uint64_t))sub_251A1A444);
}

void *sub_251A17358()
{
  return sub_251A11F14(type metadata accessor for ScrubberElement, &qword_269B9C8B8, type metadata accessor for ScrubberElement, type metadata accessor for ScrubberElement);
}

void *sub_251A173A0(uint64_t *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v32 = v1;
  uint64_t v2 = *v1;
  uint64_t v3 = sub_251F366E0();
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v36 = v3;
  if (!v4)
  {
    id result = (void *)swift_release();
    uint64_t v30 = v36;
    uint64_t v29 = v32;
LABEL_28:
    *uint64_t v29 = v30;
    return result;
  }
  uint64_t v5 = v3;
  id result = (void *)(v3 + 64);
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
  {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
    uint64_t v5 = v36;
  }
  int64_t v9 = 0;
  *(void *)(v5 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v35 = v2;
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  uint64_t v33 = v2 + 64;
  int64_t v34 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v13 = v36;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      uint64_t v16 = v35;
      goto LABEL_12;
    }
    int64_t v26 = v9 + 1;
    uint64_t v16 = v35;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v26 >= v34) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v33 + 8 * v26);
    ++v9;
    if (!v27)
    {
      int64_t v9 = v26 + 1;
      if (v26 + 1 >= v34) {
        goto LABEL_26;
      }
      unint64_t v27 = *(void *)(v33 + 8 * v9);
      if (!v27) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v27 - 1) & v27;
    unint64_t v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    uint64_t v17 = sub_251F34DA0();
    uint64_t v18 = *(void *)(v17 - 8);
    MEMORY[0x270FA5388]();
    uint64_t v20 = (char *)&v31 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
    unint64_t v22 = *(void *)(v21 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v18 + 16))(v20, *(void *)(v16 + 48) + v22, v17);
    uint64_t v23 = *(void *)(v16 + 56);
    uint64_t v24 = 8 * v15;
    uint64_t v25 = *(void *)(v23 + 8 * v15);
    (*(void (**)(unint64_t, char *, uint64_t))(v18 + 32))(*(void *)(v13 + 48) + v22, v20, v17);
    *(void *)(*(void *)(v13 + 56) + v24) = v25;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v34)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v29 = v32;
    uint64_t v30 = v36;
    goto LABEL_28;
  }
  unint64_t v27 = *(void *)(v33 + 8 * v28);
  if (v27)
  {
    int64_t v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v9 >= v34) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v33 + 8 * v9);
    ++v28;
    if (v27) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_251A17664()
{
  return sub_251A11F14((uint64_t (*)(void))type metadata accessor for StaticLightProfile, &qword_269B9C9A0, (uint64_t (*)(void))type metadata accessor for StaticLightProfile, (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
}

void *sub_251A176AC()
{
  return sub_251A176F4((uint64_t (*)(void))_s7MergeIdVMa, &qword_269B9CA28, (uint64_t (*)(void))_s7MergeIdVMa, (uint64_t (*)(void))_s7MergeIdVMa);
}

void *sub_251A176F4(uint64_t (*a1)(void), uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  uint64_t v32 = a3;
  uint64_t v33 = a4;
  uint64_t v6 = v4;
  uint64_t v7 = a1(0);
  uint64_t v31 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7 - 8);
  int64_t v9 = (char *)&v30 - v8;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v10 = *v4;
  uint64_t v11 = sub_251F366E0();
  uint64_t v12 = v11;
  if (!*(void *)(v10 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    *uint64_t v6 = v12;
    return result;
  }
  uint64_t v30 = v6;
  id result = (void *)(v11 + 64);
  uint64_t v14 = v10 + 64;
  unint64_t v15 = (unint64_t)((1 << *(unsigned char *)(v12 + 32)) + 63) >> 6;
  if (v12 != v10 || (unint64_t)result >= v10 + 64 + 8 * v15) {
    id result = memmove(result, (const void *)(v10 + 64), 8 * v15);
  }
  int64_t v17 = 0;
  *(void *)(v12 + 16) = *(void *)(v10 + 16);
  uint64_t v18 = 1 << *(unsigned char *)(v10 + 32);
  uint64_t v19 = -1;
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  unint64_t v20 = v19 & *(void *)(v10 + 64);
  int64_t v21 = (unint64_t)(v18 + 63) >> 6;
  while (1)
  {
    if (v20)
    {
      unint64_t v22 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      unint64_t v23 = v22 | (v17 << 6);
      goto LABEL_12;
    }
    int64_t v27 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v27 >= v21) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v14 + 8 * v27);
    ++v17;
    if (!v28)
    {
      int64_t v17 = v27 + 1;
      if (v27 + 1 >= v21) {
        goto LABEL_26;
      }
      unint64_t v28 = *(void *)(v14 + 8 * v17);
      if (!v28) {
        break;
      }
    }
LABEL_25:
    unint64_t v20 = (v28 - 1) & v28;
    unint64_t v23 = __clz(__rbit64(v28)) + (v17 << 6);
LABEL_12:
    unint64_t v24 = *(void *)(v31 + 72) * v23;
    sub_251A1AEB4(*(void *)(v10 + 48) + v24, (uint64_t)v9, v32);
    uint64_t v25 = 8 * v23;
    uint64_t v26 = *(void *)(*(void *)(v10 + 56) + 8 * v23);
    sub_251A1AF1C((uint64_t)v9, *(void *)(v12 + 48) + v24, v33);
    *(void *)(*(void *)(v12 + 56) + v25) = v26;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v29 = v27 + 2;
  if (v29 >= v21)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v6 = v30;
    goto LABEL_28;
  }
  unint64_t v28 = *(void *)(v14 + 8 * v29);
  if (v28)
  {
    int64_t v17 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v17 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v17 >= v21) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v14 + 8 * v17);
    ++v29;
    if (v28) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_251A1795C()
{
  return sub_251A17968(&qword_269B9C8B0);
}

void *sub_251A17968(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_251F366E0();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v14) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v7 + 8 * v18);
    ++v10;
    if (!v19)
    {
      int64_t v10 = v18 + 1;
      if (v18 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v7 + 8 * v10);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = *(void *)(*(void *)(v3 + 56) + 8 * v16);
    *(unsigned char *)(*(void *)(v5 + 48) + v16) = *(unsigned char *)(*(void *)(v3 + 48) + v16);
    *(void *)(*(void *)(v5 + 56) + 8 * v16) = v17;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v14) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v7 + 8 * v20);
  if (v19)
  {
    int64_t v10 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v7 + 8 * v10);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_251A17B04()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C9C8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_251F366E0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v21 = __clz(__rbit64(v19));
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = v21 + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_251A17C94()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C8A0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_251F366E0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      int64_t v9 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v6 + 8 * v9);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 40 * v15;
    sub_251A1A45C(*(void *)(v2 + 48) + 40 * v15, (uint64_t)v25);
    uint64_t v17 = 32 * v15;
    sub_251A0D51C(*(void *)(v2 + 56) + v17, (uint64_t)v24);
    uint64_t v18 = *(void *)(v4 + 48) + v16;
    long long v19 = v25[0];
    long long v20 = v25[1];
    *(void *)(v18 + 32) = v26;
    *(_OWORD *)uint64_t v18 = v19;
    *(_OWORD *)(v18 + 16) = v20;
    id result = sub_251A0D578(v24, (_OWORD *)(*(void *)(v4 + 56) + v17));
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v13) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v6 + 8 * v23);
  if (v22)
  {
    int64_t v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v9);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_251A17E7C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C890);
  int64_t v34 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = sub_251F366E0();
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v38 = v2;
  if (!v3)
  {
    id result = (void *)swift_release();
    uint64_t v33 = v38;
    uint64_t v32 = v34;
LABEL_28:
    *uint64_t v32 = v33;
    return result;
  }
  uint64_t v4 = v2;
  id result = (void *)(v2 + 64);
  unint64_t v6 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v1 || (unint64_t)result >= v1 + 64 + 8 * v6)
  {
    id result = memmove(result, (const void *)(v1 + 64), 8 * v6);
    uint64_t v4 = v38;
  }
  int64_t v8 = 0;
  *(void *)(v4 + 16) = *(void *)(v1 + 16);
  uint64_t v9 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v37 = v1;
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(v1 + 64);
  uint64_t v35 = v1 + 64;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v38;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      int64_t v39 = v8;
      unint64_t v14 = v13 | (v8 << 6);
      uint64_t v15 = v37;
      goto LABEL_12;
    }
    int64_t v28 = v8 + 1;
    uint64_t v15 = v37;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v28 >= v36) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v35 + 8 * v28);
    int64_t v30 = v8 + 1;
    if (!v29)
    {
      int64_t v30 = v28 + 1;
      if (v28 + 1 >= v36) {
        goto LABEL_26;
      }
      unint64_t v29 = *(void *)(v35 + 8 * v30);
      if (!v29) {
        break;
      }
    }
LABEL_25:
    unint64_t v11 = (v29 - 1) & v29;
    int64_t v39 = v30;
    unint64_t v14 = __clz(__rbit64(v29)) + (v30 << 6);
LABEL_12:
    uint64_t v16 = sub_251F34DA0();
    uint64_t v17 = *(void *)(v16 - 8);
    MEMORY[0x270FA5388](v16);
    long long v19 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
    unint64_t v21 = *(void *)(v20 + 72) * v14;
    (*(void (**)(char *, unint64_t, uint64_t))(v17 + 16))(v19, *(void *)(v15 + 48) + v21, v16);
    uint64_t v22 = *(void *)(v15 + 56);
    uint64_t v23 = 16 * v14;
    unint64_t v24 = (uint64_t *)(v22 + 16 * v14);
    uint64_t v25 = *v24;
    uint64_t v26 = v24[1];
    (*(void (**)(unint64_t, char *, uint64_t))(v17 + 32))(*(void *)(v12 + 48) + v21, v19, v16);
    int64_t v27 = (void *)(*(void *)(v12 + 56) + v23);
    *int64_t v27 = v25;
    v27[1] = v26;
    id result = (void *)swift_bridgeObjectRetain();
    int64_t v8 = v39;
  }
  int64_t v31 = v28 + 2;
  if (v31 >= v36)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v32 = v34;
    uint64_t v33 = v38;
    goto LABEL_28;
  }
  unint64_t v29 = *(void *)(v35 + 8 * v31);
  if (v29)
  {
    int64_t v30 = v31;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v30 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      break;
    }
    if (v30 >= v36) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v35 + 8 * v30);
    ++v31;
    if (v29) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_251A1815C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3;
  uint64_t v4 = a2;
  uint64_t v5 = a1;
  uint64_t result = sub_251A190B4(a1, a2, a3);
  uint64_t v7 = result;
  uint64_t v8 = v3 >> 63;
  if (result > 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CB40);
    uint64_t v9 = (uint64_t *)swift_allocObject();
    int64_t v10 = _swift_stdlib_malloc_size(v9);
    int v11 = 0;
    unint64_t v12 = 0;
    LOBYTE(v13) = 0;
    uint64_t v15 = v10 - 32;
    BOOL v14 = v10 < 32;
    uint64_t v16 = v10 - 25;
    uint64_t result = (uint64_t)v9;
    if (v14) {
      uint64_t v15 = v16;
    }
    uint64_t v17 = v15 >> 3;
    v9[2] = v7;
    v9[3] = 2 * v17;
    uint64_t v18 = v9 + 4;
    uint64_t v19 = (v17 & 0x7FFFFFFFFFFFFFFFLL) - v7;
    while (v7)
    {
      uint64_t v21 = v5;
      BOOL v22 = v5 <= v4;
      if (v3 > 0) {
        BOOL v22 = v5 >= v4;
      }
      if (v22)
      {
        if (v11 & 1 | (v5 != v4)) {
          goto LABEL_61;
        }
        if (v13)
        {
          int v11 = 1;
          uint64_t v5 = v4;
          BOOL v13 = 1;
        }
        else
        {
          if (v12 == 0x8000000000000000) {
            goto LABEL_62;
          }
          BOOL v13 = 0;
          int v11 = 1;
          uint64_t v5 = v4;
        }
      }
      else
      {
        BOOL v20 = __OFADD__(v5, v3);
        if (v20) {
          uint64_t v5 = v8 ^ 0x7FFFFFFFFFFFFFFFLL;
        }
        else {
          v5 += v3;
        }
        if (v20) {
          unint64_t v12 = 0x8000000000000000;
        }
        else {
          unint64_t v12 = 0;
        }
        BOOL v13 = !v20;
      }
      *v18++ = v21;
      if (!--v7) {
        goto LABEL_27;
      }
    }
LABEL_60:
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  if (result < 0) {
    goto LABEL_63;
  }
  int v11 = 0;
  unint64_t v12 = 0;
  BOOL v13 = 0;
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v19 = *(void *)(MEMORY[0x263F8EE78] + 24) >> 1;
  uint64_t v18 = (uint64_t *)(MEMORY[0x263F8EE78] + 32);
LABEL_27:
  uint64_t v45 = v8 ^ 0x7FFFFFFFFFFFFFFFLL;
  while (1)
  {
    BOOL v23 = v5 <= v4;
    if (v3 > 0) {
      BOOL v23 = v5 >= v4;
    }
    if (v23) {
      break;
    }
    uint64_t v24 = v5 + v3;
    if (__OFADD__(v5, v3))
    {
      BOOL v13 = 0;
      unint64_t v12 = 0x8000000000000000;
      uint64_t v24 = v45;
      if (v19)
      {
        uint64_t v24 = v45;
        goto LABEL_52;
      }
    }
    else
    {
      unint64_t v12 = 0;
      BOOL v13 = 1;
      if (v19) {
        goto LABEL_52;
      }
    }
LABEL_40:
    unint64_t v25 = *(void *)(result + 24);
    if ((uint64_t)((v25 >> 1) + 0x4000000000000000) < 0) {
      goto LABEL_59;
    }
    BOOL v46 = v13;
    int v47 = v11;
    uint64_t v26 = v4;
    uint64_t v27 = v3;
    unint64_t v28 = v12;
    int64_t v29 = v25 & 0xFFFFFFFFFFFFFFFELL;
    if (v29 <= 1) {
      uint64_t v30 = 1;
    }
    else {
      uint64_t v30 = v29;
    }
    int64_t v31 = (void *)result;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CB40);
    uint64_t v32 = (void *)swift_allocObject();
    int64_t v33 = _swift_stdlib_malloc_size(v32);
    uint64_t v34 = v33 - 32;
    BOOL v14 = v33 < 32;
    uint64_t v35 = v33 - 25;
    int64_t v36 = v31;
    if (v14) {
      uint64_t v34 = v35;
    }
    uint64_t v37 = v34 >> 3;
    v32[2] = v30;
    v32[3] = 2 * (v34 >> 3);
    unint64_t v38 = (unint64_t)(v32 + 4);
    uint64_t v39 = v31[3] >> 1;
    if (v31[2])
    {
      int64_t v40 = v31 + 4;
      if (v32 != v31 || v38 >= (unint64_t)v40 + 8 * v39)
      {
        memmove(v32 + 4, v40, 8 * v39);
        int64_t v36 = v31;
      }
      void v36[2] = 0;
    }
    uint64_t v18 = (uint64_t *)(v38 + 8 * v39);
    uint64_t v19 = (v37 & 0x7FFFFFFFFFFFFFFFLL) - v39;
    swift_release();
    uint64_t result = (uint64_t)v32;
    unint64_t v12 = v28;
    uint64_t v3 = v27;
    uint64_t v4 = v26;
    BOOL v13 = v46;
    int v11 = v47;
LABEL_52:
    BOOL v41 = __OFSUB__(v19--, 1);
    if (v41)
    {
      __break(1u);
LABEL_59:
      __break(1u);
      goto LABEL_60;
    }
    *v18++ = v5;
    uint64_t v5 = v24;
  }
  if (!((v5 != v4) | v11 & 1) && (v13 || v12 != 0x8000000000000000))
  {
    int v11 = 1;
    uint64_t v24 = v5;
    if (v19)
    {
      uint64_t v24 = v5;
      goto LABEL_52;
    }
    goto LABEL_40;
  }
  unint64_t v42 = *(void *)(result + 24);
  if (v42 < 2) {
    return result;
  }
  unint64_t v43 = v42 >> 1;
  BOOL v41 = __OFSUB__(v43, v19);
  unint64_t v44 = v43 - v19;
  if (!v41)
  {
    *(void *)(result + 16) = v44;
    return result;
  }
LABEL_64:
  __break(1u);
  return result;
}

void type metadata accessor for HMDaysOfTheWeek(uint64_t a1)
{
}

void type metadata accessor for HMPresenceEventType(uint64_t a1)
{
}

__n128 __swift_memcpy24_4(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for GaugeDataHolder(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for GaugeDataHolder(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 24) = v3;
  return result;
}

void type metadata accessor for CMTime(uint64_t a1)
{
}

void type metadata accessor for MTRBasicInformationColor(uint64_t a1)
{
}

void type metadata accessor for MTRBasicInformationProductFinish(uint64_t a1)
{
}

void type metadata accessor for MTRCommandIDType(uint64_t a1)
{
}

void type metadata accessor for MTRPowerSourceBatChargeState(uint64_t a1)
{
}

void type metadata accessor for MTRPowerSourceBatChargeLevel(uint64_t a1)
{
}

void type metadata accessor for MTRPowerSourceFeature(uint64_t a1)
{
}

void type metadata accessor for MTRPowerSourceStatus(uint64_t a1)
{
}

void type metadata accessor for HMError(uint64_t a1)
{
}

void type metadata accessor for MTTimerState(uint64_t a1)
{
}

void type metadata accessor for MTAlarmRepeatSchedule(uint64_t a1)
{
}

void type metadata accessor for MTRDeviceState(uint64_t a1)
{
}

void type metadata accessor for HMMediaSystemRoleType(uint64_t a1)
{
}

void type metadata accessor for MTRAttributeIDType(uint64_t a1)
{
}

uint64_t sub_251A18614()
{
  return sub_251A186A4(&qword_269B9C750, type metadata accessor for MTRAttributeIDType);
}

uint64_t sub_251A1865C()
{
  return sub_251A186A4(&qword_269B9C758, type metadata accessor for MTRDeviceState);
}

uint64_t sub_251A186A4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_251A186EC()
{
  return sub_251A186A4(&qword_269B9C760, type metadata accessor for HMError);
}

uint64_t sub_251A18734()
{
  return sub_251A186A4(&qword_269B9C768, type metadata accessor for HMError);
}

uint64_t sub_251A1877C()
{
  return sub_251A186A4(&qword_269B9C770, type metadata accessor for MTRPowerSourceStatus);
}

uint64_t sub_251A187C4()
{
  return sub_251A186A4(&qword_269B9C778, type metadata accessor for MTRPowerSourceFeature);
}

uint64_t sub_251A1880C()
{
  return sub_251A186A4(&qword_269B9C780, type metadata accessor for MTRPowerSourceFeature);
}

uint64_t sub_251A18854()
{
  return sub_251A186A4(&qword_269B9C788, type metadata accessor for MTRPowerSourceFeature);
}

uint64_t sub_251A1889C()
{
  return sub_251A186A4(&qword_269B9C790, type metadata accessor for MTRPowerSourceFeature);
}

uint64_t sub_251A188E4()
{
  return sub_251A186A4(&qword_269B9C798, type metadata accessor for MTRPowerSourceBatChargeLevel);
}

uint64_t sub_251A1892C()
{
  return sub_251A186A4(&qword_269B9C7A0, type metadata accessor for MTRPowerSourceBatChargeState);
}

uint64_t sub_251A18974()
{
  return sub_251A186A4(&qword_269B9C7A8, type metadata accessor for MTRCommandIDType);
}

uint64_t sub_251A189BC()
{
  return sub_251A186A4(&qword_269B9C7B0, type metadata accessor for MTRBasicInformationProductFinish);
}

uint64_t sub_251A18A04()
{
  return sub_251A186A4(&qword_269B9C7B8, type metadata accessor for MTRBasicInformationColor);
}

uint64_t sub_251A18A4C()
{
  return sub_251A186A4(&qword_269B9C7C0, type metadata accessor for HMPresenceEventType);
}

uint64_t sub_251A18A94()
{
  return sub_251A186A4(&qword_269B9C7C8, type metadata accessor for HMDaysOfTheWeek);
}

uint64_t sub_251A18ADC()
{
  return sub_251A186A4(&qword_269B9C7D0, type metadata accessor for HMDaysOfTheWeek);
}

uint64_t sub_251A18B24()
{
  return sub_251A186A4(&qword_269B9C7D8, type metadata accessor for HMDaysOfTheWeek);
}

uint64_t sub_251A18B6C()
{
  return sub_251A186A4(&qword_269B9C7E0, type metadata accessor for HMDaysOfTheWeek);
}

uint64_t sub_251A18BB4()
{
  return sub_251A186A4(&qword_269B9C7E8, type metadata accessor for HMError);
}

uint64_t sub_251A18BFC()
{
  return sub_251A186A4(&qword_269B9C7F0, type metadata accessor for HMError);
}

uint64_t sub_251A18C44()
{
  return sub_251A186A4(&qword_269B9C7F8, type metadata accessor for HMError);
}

uint64_t sub_251A18C8C()
{
  return sub_251A186A4(&qword_269B9C800, type metadata accessor for Code);
}

void type metadata accessor for Code(uint64_t a1)
{
}

uint64_t sub_251A18CE8()
{
  return sub_251A186A4(&qword_269B9C808, type metadata accessor for Code);
}

unint64_t sub_251A18D34()
{
  unint64_t result = qword_269B9C810;
  if (!qword_269B9C810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9C810);
  }
  return result;
}

uint64_t sub_251A18D88()
{
  return sub_251A186A4(&qword_269B9C818, type metadata accessor for Code);
}

uint64_t sub_251A18DD0()
{
  return sub_251A186A4(&qword_269B9C820, type metadata accessor for HMError);
}

uint64_t sub_251A18E18(double a1, double a2, double a3)
{
  uint64_t result = sub_251A19160(a1, a2, a3);
  uint64_t v7 = result;
  if (result > 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CAB0);
    uint64_t v8 = (double *)swift_allocObject();
    uint64_t result = _swift_stdlib_malloc_size(v8);
    char v9 = 0;
    uint64_t v10 = 0;
    uint64_t v11 = result - 32;
    if (result < 32) {
      uint64_t v11 = result - 25;
    }
    uint64_t v12 = v11 >> 3;
    *((void *)v8 + 2) = v7;
    *((void *)v8 + 3) = 2 * v12;
    BOOL v13 = v8 + 4;
    uint64_t v14 = (v12 & 0x7FFFFFFFFFFFFFFFLL) - v7;
    double i = a1;
    while (v7)
    {
      double v17 = i;
      BOOL v18 = i <= a2;
      if (a3 > 0.0) {
        BOOL v18 = i >= a2;
      }
      if (v18)
      {
        if (v9 & 1 | (i != a2)) {
          goto LABEL_47;
        }
        char v9 = 1;
      }
      else
      {
        BOOL v16 = __OFADD__(v10++, 1);
        if (v16) {
          goto LABEL_46;
        }
        double i = a1 + (double)v10 * a3;
      }
      *v13++ = v17;
      if (!--v7) {
        goto LABEL_16;
      }
    }
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  if (result < 0)
  {
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
    return result;
  }
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v8 = (double *)MEMORY[0x263F8EE78];
  uint64_t v14 = *(void *)(MEMORY[0x263F8EE78] + 24) >> 1;
  BOOL v13 = (double *)(MEMORY[0x263F8EE78] + 32);
  for (double i = a1; ; double i = v20)
  {
LABEL_16:
    BOOL v19 = i <= a2;
    if (a3 > 0.0) {
      BOOL v19 = i >= a2;
    }
    if (!v19)
    {
      BOOL v16 = __OFADD__(v10++, 1);
      if (v16) {
        goto LABEL_43;
      }
      double v20 = a1 + (double)v10 * a3;
      if (v14) {
        goto LABEL_36;
      }
      goto LABEL_24;
    }
    if ((i != a2) | v9 & 1) {
      break;
    }
    char v9 = 1;
    double v20 = i;
    if (v14)
    {
      double v20 = i;
      goto LABEL_36;
    }
LABEL_24:
    unint64_t v21 = *((void *)v8 + 3);
    if ((uint64_t)((v21 >> 1) + 0x4000000000000000) < 0) {
      goto LABEL_44;
    }
    int64_t v22 = v21 & 0xFFFFFFFFFFFFFFFELL;
    if (v22 <= 1) {
      uint64_t v23 = 1;
    }
    else {
      uint64_t v23 = v22;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CAB0);
    uint64_t v24 = (double *)swift_allocObject();
    int64_t v25 = _swift_stdlib_malloc_size(v24);
    uint64_t v26 = v25 - 32;
    if (v25 < 32) {
      uint64_t v26 = v25 - 25;
    }
    uint64_t v27 = v26 >> 3;
    *((void *)v24 + 2) = v23;
    *((void *)v24 + 3) = 2 * (v26 >> 3);
    unint64_t v28 = (unint64_t)(v24 + 4);
    uint64_t v29 = *((void *)v8 + 3) >> 1;
    if (*((void *)v8 + 2))
    {
      uint64_t v30 = v8 + 4;
      if (v24 != v8 || v28 >= (unint64_t)v30 + 8 * v29) {
        memmove(v24 + 4, v30, 8 * v29);
      }
      v8[2] = 0.0;
    }
    BOOL v13 = (double *)(v28 + 8 * v29);
    uint64_t v14 = (v27 & 0x7FFFFFFFFFFFFFFFLL) - v29;
    uint64_t result = swift_release();
    uint64_t v8 = v24;
LABEL_36:
    BOOL v16 = __OFSUB__(v14--, 1);
    if (v16)
    {
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
      goto LABEL_45;
    }
    *v13++ = i;
  }
  unint64_t v31 = *((void *)v8 + 3);
  if (v31 >= 2)
  {
    unint64_t v32 = v31 >> 1;
    BOOL v16 = __OFSUB__(v32, v14);
    unint64_t v33 = v32 - v14;
    if (v16) {
      goto LABEL_49;
    }
    *((void *)v8 + 2) = v33;
  }
  return (uint64_t)v8;
}

uint64_t sub_251A190B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = 0;
  char v5 = 0;
  unint64_t v6 = 0;
  char v7 = 0;
  do
  {
    BOOL v11 = a1 <= a2;
    if (a3 > 0) {
      BOOL v11 = a1 >= a2;
    }
    if (v11)
    {
      if ((a1 != a2) | v5 & 1) {
        return result;
      }
      if (v7)
      {
        char v5 = 1;
        a1 = a2;
        char v7 = 1;
      }
      else
      {
        if (v6 == 0x8000000000000000) {
          return result;
        }
        char v7 = 0;
        char v5 = 1;
        a1 = a2;
      }
    }
    else
    {
      BOOL v8 = __OFADD__(a1, a3);
      a1 += a3;
      char v9 = v8;
      BOOL v10 = (v9 & 1) == 0;
      if (v9)
      {
        a1 = (a3 >> 63) ^ 0x7FFFFFFFFFFFFFFFLL;
        unint64_t v6 = 0x8000000000000000;
      }
      else
      {
        unint64_t v6 = 0;
      }
      char v7 = v10;
    }
    BOOL v8 = __OFADD__(result++, 1);
  }
  while (!v8);
  __break(1u);
  return result;
}

uint64_t sub_251A19160(double a1, double a2, double a3)
{
  uint64_t result = 0;
  char v4 = 0;
  uint64_t v5 = 0;
  double v6 = a1;
  do
  {
    BOOL v8 = v6 <= a2;
    if (a3 > 0.0) {
      BOOL v8 = v6 >= a2;
    }
    if (v8)
    {
      if ((v6 != a2) | v4 & 1) {
        return result;
      }
      char v4 = 1;
    }
    else
    {
      BOOL v7 = __OFADD__(v5++, 1);
      if (v7) {
        goto LABEL_12;
      }
      double v6 = a1 + (double)v5 * a3;
    }
    BOOL v7 = __OFADD__(result++, 1);
  }
  while (!v7);
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_251A191D4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t result = 0;
  char v4 = (uint64_t *)(a1 + 32);
  do
  {
    uint64_t v6 = *v4++;
    uint64_t v5 = v6;
    if ((v6 & ~result) == 0) {
      uint64_t v5 = 0;
    }
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_251A1920C(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = result;
  LODWORD(result) = 0;
  char v3 = (int *)(v2 + 32);
  do
  {
    int v5 = *v3++;
    int v4 = v5;
    if ((v5 & ~result) == 0) {
      int v4 = 0;
    }
    uint64_t result = v4 | result;
    --v1;
  }
  while (v1);
  return result;
}

unint64_t sub_251A19244(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE80];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C8C8);
  char v3 = (void *)sub_251F36700();
  uint64_t v4 = *(unsigned int *)(a1 + 32);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 36);
  uint64_t v6 = *(void *)(a1 + 40);
  char v7 = *(unsigned char *)(a1 + 48);
  unint64_t result = sub_2519FE6D0(v4 | (v5 << 32));
  if (v9)
  {
LABEL_7:
    __break(1u);
    return MEMORY[0x263F8EE80];
  }
  BOOL v10 = (char *)(a1 + 72);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = v3[6] + 8 * result;
    *(_DWORD *)uint64_t v11 = v4;
    *(unsigned char *)(v11 + 4) = v5;
    uint64_t v12 = v3[7] + 16 * result;
    *(void *)uint64_t v12 = v6;
    *(unsigned char *)(v12 + 8) = v7;
    uint64_t v13 = v3[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      break;
    }
    v3[2] = v15;
    sub_251A1A4B8(v6, v7);
    if (!--v1) {
      return (unint64_t)v3;
    }
    uint64_t v4 = *((unsigned int *)v10 - 4);
    uint64_t v5 = *(v10 - 12);
    uint64_t v6 = *((void *)v10 - 1);
    char v7 = *v10;
    unint64_t result = sub_2519FE6D0(v4 | (v5 << 32));
    v10 += 24;
    if (v16) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_251A19364(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE80];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C8E8);
  char v3 = (void *)sub_251F36700();
  uint64_t v4 = *(void *)(a1 + 32);
  long long v14 = *(_OWORD *)(a1 + 40);
  unint64_t result = sub_2519FE588(v4);
  long long v6 = v14;
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_unknownObjectRetain();
    return (unint64_t)v3;
  }
  BOOL v8 = (_OWORD *)(a1 + 64);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v4;
    *(_OWORD *)(v3[7] + 16 * result) = v6;
    uint64_t v9 = v3[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      break;
    }
    v3[2] = v11;
    if (!--v1) {
      goto LABEL_8;
    }
    uint64_t v12 = (_OWORD *)((char *)v8 + 24);
    uint64_t v4 = *((void *)v8 - 1);
    long long v15 = *v8;
    swift_unknownObjectRetain();
    unint64_t result = sub_2519FE588(v4);
    BOOL v8 = v12;
    long long v6 = v15;
    if (v13) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_251A19474(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF18);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (uint64_t *)((char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C950);
    char v7 = (void *)sub_251F36700();
    uint64_t v8 = (uint64_t)v5 + *(int *)(v2 + 48);
    uint64_t v9 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v10 = *(void *)(v3 + 72);
    while (1)
    {
      sub_251A1B128(v9, (uint64_t)v5, &qword_26B21FF18);
      uint64_t v11 = *v5;
      unint64_t result = sub_2519FE588(*v5);
      if (v13) {
        break;
      }
      unint64_t v14 = result;
      *(void *)((char *)v7 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(void *)(v7[6] + 8 * result) = v11;
      uint64_t v15 = v7[7];
      uint64_t v16 = type metadata accessor for StaticMatterDevice();
      unint64_t result = sub_251A1AF1C(v8, v15 + *(void *)(*(void *)(v16 - 8) + 72) * v14, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
      uint64_t v17 = v7[2];
      BOOL v18 = __OFADD__(v17, 1);
      uint64_t v19 = v17 + 1;
      if (v18) {
        goto LABEL_10;
      }
      v7[2] = v19;
      v9 += v10;
      if (!--v6) {
        return (unint64_t)v7;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE80];
  }
  return result;
}

unint64_t sub_251A19638(void *a1)
{
  uint64_t v1 = a1[2];
  if (!v1) {
    return MEMORY[0x263F8EE80];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CA70);
  uint64_t v3 = (void *)sub_251F36700();
  uint64_t v5 = a1[4];
  uint64_t v4 = a1[5];
  unint64_t result = sub_2519FE588(v5);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  uint64_t v8 = a1 + 7;
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v3[6] + v9) = v5;
    *(void *)(v3[7] + v9) = v4;
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      break;
    }
    v3[2] = v12;
    if (!--v1) {
      goto LABEL_8;
    }
    char v13 = v8 + 2;
    uint64_t v5 = *(v8 - 1);
    uint64_t v14 = *v8;
    swift_bridgeObjectRetain();
    unint64_t result = sub_2519FE588(v5);
    uint64_t v8 = v13;
    uint64_t v4 = v14;
    if (v15) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_251A19738(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C848);
    uint64_t v3 = (void *)sub_251F36700();
    for (uint64_t i = a1 + 32; ; i += 40)
    {
      sub_251A1B128(i, (uint64_t)&v11, &qword_269B9C850);
      int v5 = v11;
      unint64_t result = sub_2519FE8E0(v11);
      if (v7) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_DWORD *)(v3[6] + 4 * result) = v5;
      unint64_t result = (unint64_t)sub_251A0D578(&v12, (_OWORD *)(v3[7] + 32 * result));
      uint64_t v8 = v3[2];
      BOOL v9 = __OFADD__(v8, 1);
      uint64_t v10 = v8 + 1;
      if (v9) {
        goto LABEL_10;
      }
      v3[2] = v10;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE80];
  }
  return result;
}

unint64_t sub_251A1983C(uint64_t a1)
{
  return sub_251A19D4C(a1, &qword_269B9CAA0);
}

unint64_t sub_251A19848(uint64_t a1)
{
  return sub_251A19D4C(a1, &qword_269B9C960);
}

unint64_t sub_251A19854(uint64_t a1)
{
  return sub_251A19E6C(a1, &qword_269B9C978, (uint64_t (*)(uint64_t))sub_2519FE614);
}

unint64_t sub_251A19874(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C968);
    uint64_t v3 = (void *)sub_251F36700();
    for (uint64_t i = a1 + 32; ; i += 48)
    {
      sub_251A1B128(i, (uint64_t)&v11, &qword_269B9CA98);
      unsigned int v5 = v11;
      unint64_t result = sub_2519FE94C(v11);
      if (v7) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_DWORD *)(v3[6] + 4 * result) = v5;
      unint64_t result = sub_251A1A5BC((uint64_t)&v12, v3[7] + 40 * result);
      uint64_t v8 = v3[2];
      BOOL v9 = __OFADD__(v8, 1);
      uint64_t v10 = v8 + 1;
      if (v9) {
        goto LABEL_10;
      }
      v3[2] = v10;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE80];
  }
  return result;
}

unint64_t sub_251A19984(uint64_t a1)
{
  return sub_251A19E6C(a1, &qword_269B9CA60, (uint64_t (*)(uint64_t))sub_2519FE614);
}

uint64_t sub_251A199A4(void *a1)
{
  uint64_t v1 = a1[2];
  if (!v1) {
    return MEMORY[0x263F8EE80];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CA48);
  uint64_t v3 = (void *)sub_251F36700();
  memcpy(__dst, a1 + 4, 0x104uLL);
  char v4 = __dst[0];
  unint64_t v5 = sub_2519FE614(__dst[0]);
  if (v6)
  {
LABEL_7:
    __break(1u);
    return MEMORY[0x263F8EE80];
  }
  char v7 = (char *)(a1 + 37);
  while (1)
  {
    *(void *)((char *)v3 + ((v5 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v5;
    *(unsigned char *)(v3[6] + v5) = v4;
    uint64_t result = sub_251A1A930((uint64_t)&__dst[8], v3[7] + (v5 << 8));
    uint64_t v9 = v3[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      break;
    }
    v3[2] = v11;
    sub_251A1A98C((uint64_t)__dst);
    if (!--v1) {
      return (uint64_t)v3;
    }
    memcpy(__dst, v7, 0x104uLL);
    char v4 = __dst[0];
    unint64_t v5 = sub_2519FE614(__dst[0]);
    v7 += 264;
    if (v12) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_251A19AD0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE80];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C958);
  uint64_t v3 = (void *)sub_251F36700();
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  long long v18 = *(_OWORD *)(a1 + 48);
  unint64_t result = sub_2519FE588(v4);
  long long v7 = v18;
  if (v8)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  uint64_t v9 = (_OWORD *)(a1 + 80);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v4;
    uint64_t v10 = v3[7] + 24 * result;
    *(void *)uint64_t v10 = v5;
    *(_OWORD *)(v10 + 8) = v7;
    uint64_t v11 = v3[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      break;
    }
    v3[2] = v13;
    if (!--v1) {
      goto LABEL_8;
    }
    uint64_t v14 = v9 + 2;
    uint64_t v4 = *((void *)v9 - 2);
    uint64_t v15 = *((void *)v9 - 1);
    long long v17 = *v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_2519FE588(v4);
    uint64_t v9 = v14;
    uint64_t v5 = v15;
    long long v7 = v17;
    if (v16) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_251A19C30(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE80];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CB28);
  uint64_t v3 = (void *)sub_251F36700();
  int v4 = *(_DWORD *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  char v6 = *(unsigned char *)(a1 + 48);
  unint64_t result = sub_2519FE8E0(v4);
  if (v8)
  {
LABEL_7:
    __break(1u);
    return MEMORY[0x263F8EE80];
  }
  uint64_t v9 = (char *)(a1 + 72);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_DWORD *)(v3[6] + 4 * result) = v4;
    uint64_t v10 = v3[7] + 16 * result;
    *(void *)uint64_t v10 = v5;
    *(unsigned char *)(v10 + 8) = v6;
    uint64_t v11 = v3[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      break;
    }
    v3[2] = v13;
    sub_251A1A4B8(v5, v6);
    if (!--v1) {
      return (unint64_t)v3;
    }
    int v4 = *((_DWORD *)v9 - 4);
    uint64_t v5 = *((void *)v9 - 1);
    char v6 = *v9;
    unint64_t result = sub_2519FE8E0(v4);
    v9 += 24;
    if (v14) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_251A19D40(uint64_t a1)
{
  return sub_251A19D4C(a1, &qword_269B9C9F8);
}

unint64_t sub_251A19D4C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return MEMORY[0x263F8EE80];
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  int v4 = (void *)sub_251F36700();
  unsigned __int16 v5 = *(_WORD *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  unint64_t result = sub_2519FE5CC(v5);
  if (v8)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v4;
  }
  uint64_t v9 = (void *)(a1 + 56);
  while (1)
  {
    *(void *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_WORD *)(v4[6] + 2 * result) = v5;
    *(void *)(v4[7] + 8 * result) = v6;
    uint64_t v10 = v4[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      break;
    }
    v4[2] = v12;
    if (!--v2) {
      goto LABEL_8;
    }
    uint64_t v13 = v9 + 2;
    unsigned __int16 v5 = *((_WORD *)v9 - 4);
    uint64_t v14 = *v9;
    swift_bridgeObjectRetain();
    unint64_t result = sub_2519FE5CC(v5);
    uint64_t v9 = v13;
    uint64_t v6 = v14;
    if (v15) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_251A19E4C(uint64_t a1)
{
  return sub_251A19E6C(a1, &qword_269B9CAA8, (uint64_t (*)(uint64_t))sub_2519FECAC);
}

unint64_t sub_251A19E6C(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return MEMORY[0x263F8EE80];
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v6 = (void *)sub_251F36700();
  LOBYTE(v7) = *(unsigned char *)(a1 + 32);
  uint64_t v8 = *(void *)(a1 + 40);
  unint64_t result = a3(v7);
  if (v10)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v6;
  }
  BOOL v11 = (uint64_t *)(a1 + 56);
  while (1)
  {
    *(void *)((char *)v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v6[6] + result) = v7;
    *(void *)(v6[7] + 8 * result) = v8;
    uint64_t v12 = v6[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      break;
    }
    v6[2] = v14;
    if (!--v3) {
      goto LABEL_8;
    }
    char v15 = v11 + 2;
    uint64_t v7 = *((unsigned __int8 *)v11 - 8);
    uint64_t v16 = *v11;
    swift_bridgeObjectRetain();
    unint64_t result = a3(v7);
    BOOL v11 = v15;
    uint64_t v8 = v16;
    if (v17) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_251A19F80(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CA68);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unsigned __int16 v5 = (unsigned __int16 *)((char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CA58);
    uint64_t v7 = (void *)sub_251F36700();
    uint64_t v8 = (uint64_t)v5 + *(int *)(v2 + 48);
    uint64_t v9 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v10 = *(void *)(v3 + 72);
    while (1)
    {
      sub_251A1B128(v9, (uint64_t)v5, &qword_269B9CA68);
      unsigned __int16 v11 = *v5;
      unint64_t result = sub_2519FE5CC(*v5);
      if (v13) {
        break;
      }
      unint64_t v14 = result;
      *(void *)((char *)v7 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_WORD *)(v7[6] + 2 * result) = v11;
      uint64_t v15 = v7[7];
      uint64_t v16 = type metadata accessor for ActionEndpoint();
      unint64_t result = sub_251A1AF1C(v8, v15 + *(void *)(*(void *)(v16 - 8) + 72) * v14, (uint64_t (*)(void))type metadata accessor for ActionEndpoint);
      uint64_t v17 = v7[2];
      BOOL v18 = __OFADD__(v17, 1);
      uint64_t v19 = v17 + 1;
      if (v18) {
        goto LABEL_10;
      }
      v7[2] = v19;
      v9 += v10;
      if (!--v6) {
        return (unint64_t)v7;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE80];
  }
  return result;
}

unint64_t sub_251A1A144(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE80];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C898);
  uint64_t v3 = (void *)sub_251F36700();
  unsigned __int8 v4 = *(unsigned char *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 48);
  unint64_t result = sub_2519FF0D0(v4);
  if (v8)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  uint64_t v9 = (void *)(a1 + 72);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v3[6] + result) = v4;
    uint64_t v10 = (void *)(v3[7] + 16 * result);
    *uint64_t v10 = v6;
    v10[1] = v5;
    uint64_t v11 = v3[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      break;
    }
    v3[2] = v13;
    if (!--v1) {
      goto LABEL_8;
    }
    unint64_t v14 = v9 + 3;
    unsigned __int8 v4 = *((unsigned char *)v9 - 16);
    uint64_t v6 = *(v9 - 1);
    uint64_t v15 = *v9;
    swift_bridgeObjectRetain();
    unint64_t result = sub_2519FF0D0(v4);
    uint64_t v9 = v14;
    uint64_t v5 = v15;
    if (v16) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_251A1A254(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C9C8);
    uint64_t v3 = (void *)sub_251F36700();
    for (uint64_t i = (uint64_t *)(a1 + 40); ; i += 2)
    {
      uint64_t v5 = *(i - 1);
      uint64_t v6 = *i;
      unint64_t result = sub_2519FF064(v5);
      if (v8) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      uint64_t v9 = 8 * result;
      *(void *)(v3[6] + v9) = v5;
      *(void *)(v3[7] + v9) = v6;
      uint64_t v10 = v3[2];
      BOOL v11 = __OFADD__(v10, 1);
      uint64_t v12 = v10 + 1;
      if (v11) {
        goto LABEL_10;
      }
      v3[2] = v12;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE80];
  }
  return result;
}

unint64_t sub_251A1A32C(uint64_t a1)
{
  return sub_251A1A344(a1, &qword_269B9C828);
}

unint64_t sub_251A1A338(uint64_t a1)
{
  return sub_251A1A344(a1, &qword_269B9C830);
}

unint64_t sub_251A1A344(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return MEMORY[0x263F8EE80];
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  unsigned __int8 v4 = (void *)sub_251F36700();
  unsigned __int8 v5 = *(unsigned char *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  unint64_t result = sub_2519FF0D0(v5);
  if (v8)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v4;
  }
  uint64_t v9 = (void *)(a1 + 56);
  while (1)
  {
    *(void *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v4[6] + result) = v5;
    *(void *)(v4[7] + 8 * result) = v6;
    uint64_t v10 = v4[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      break;
    }
    v4[2] = v12;
    if (!--v2) {
      goto LABEL_8;
    }
    uint64_t v13 = v9 + 2;
    unsigned __int8 v5 = *((unsigned char *)v9 - 8);
    uint64_t v14 = *v9;
    swift_bridgeObjectRetain();
    unint64_t result = sub_2519FF0D0(v5);
    uint64_t v9 = v13;
    uint64_t v6 = v14;
    if (v15) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_251A1A444(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_251A1A45C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_251A1A4B8(uint64_t a1, char a2)
{
  if (a2 == 3) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

id sub_251A1A4CC(id result)
{
  if ((unint64_t)result >= 6) {
    return result;
  }
  return result;
}

void sub_251A1A4DC(id a1)
{
  if ((unint64_t)a1 >= 6) {
}
  }

uint64_t sub_251A1A4EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_251A1A550(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 == 2) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_251A1A568(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_251A1A5A4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 == 2) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_251A1A5BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C970);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_251A1A624(uint64_t a1)
{
  return a1;
}

uint64_t sub_251A1A678(uint64_t a1)
{
  uint64_t v3 = *(void **)(a1 + 112);
  uint64_t v4 = *(void **)(a1 + 120);
  swift_unknownObjectRetain();
  swift_retain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_retain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  sub_251A1A4CC(v3);
  sub_251A1A4CC(v4);
  return a1;
}

uint64_t sub_251A1A774(uint64_t a1)
{
  uint64_t v3 = *(void **)(a1 + 112);
  uint64_t v4 = *(void **)(a1 + 120);
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  sub_251A1A4DC(v3);
  sub_251A1A4DC(v4);
  return a1;
}

uint64_t sub_251A1A870(uint64_t result, unint64_t a2, char a3)
{
  if (a3 == 4) {
    return sub_251A1A894(result, a2);
  }
  if (a3 == 3) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_251A1A894(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t sub_251A1A8EC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_251F34DA0();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_251A1A930(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_251A1A98C(uint64_t a1)
{
  long long v3 = *(_OWORD *)(a1 + 216);
  sub_251A1AA24(*(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144), *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    v3,
    *((uint64_t *)&v3 + 1),
    *(void *)(a1 + 232),
    *(void *)(a1 + 240),
    *(void *)(a1 + 248),
    *(_DWORD *)(a1 + 256));
  return a1;
}

void sub_251A1AA24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,unsigned int a32)
{
  if (a32 >> 29 == 2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_251A1AC64(a7, a8, a9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_251A1ACA8(a16, a17, a18, a19, a20, a21, a22, a23, a24, a25);
  }
  else if (!(a32 >> 29))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
}

uint64_t sub_251A1AC64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_251A1ACA8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_251A1AD5C(a7, a8, a9, a10);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_251A1AD5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4 != 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_251A1AD70(uint64_t result, unint64_t a2, char a3)
{
  if (a3 == 4) {
    return sub_251A1AD94(result, a2);
  }
  if (a3 == 3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_251A1AD94(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t sub_251A1ADEC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_251A1AE4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C970);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_251A1AEB4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_251A1AF1C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_251A1AF84(uint64_t a1)
{
  long long v3 = *(_OWORD *)(a1 + 208);
  sub_251A1AA24(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    v3,
    *((uint64_t *)&v3 + 1),
    *(void *)(a1 + 224),
    *(void *)(a1 + 232),
    *(void *)(a1 + 240),
    *(_DWORD *)(a1 + 248));
  return a1;
}

uint64_t sub_251A1B008(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_251A1B064(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_251A1B0C0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_251A1B128(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void type metadata accessor for URLResourceKey(uint64_t a1)
{
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

void type metadata accessor for HMCharacteristicValueCurrentSecuritySystemState(uint64_t a1)
{
}

void type metadata accessor for DataModelContext(uint64_t a1)
{
}

void type metadata accessor for CMTimeFlags(uint64_t a1)
{
}

void type metadata accessor for HMSignificantEvent(uint64_t a1)
{
}

uint64_t sub_251A1B204()
{
  return sub_251A186A4(&qword_269B9CB90, type metadata accessor for HMSignificantEvent);
}

uint64_t sub_251A1B24C()
{
  return sub_251A186A4(&qword_269B9CB98, type metadata accessor for HMSignificantEvent);
}

uint64_t sub_251A1B294()
{
  return sub_251A186A4(&qword_269B9CBA0, type metadata accessor for HMSignificantEvent);
}

uint64_t sub_251A1B2DC()
{
  return sub_251A186A4(&qword_269B9CBA8, type metadata accessor for HMCharacteristicValueCurrentSecuritySystemState);
}

uint64_t sub_251A1B324()
{
  return sub_251A186A4(&qword_269B9CBB0, type metadata accessor for URLResourceKey);
}

uint64_t sub_251A1B36C()
{
  return sub_251A186A4(&qword_269B9CBB8, type metadata accessor for URLResourceKey);
}

uint64_t sub_251A1B3B4()
{
  return sub_251A186A4(&qword_269B9CBC0, type metadata accessor for URLResourceKey);
}

void type metadata accessor for HMMediaPlaybackState(uint64_t a1)
{
}

void sub_251A1B410(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_251A1B4AC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 == 2) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_251A1B4C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = type metadata accessor for IconTextValueStringDataHolder();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(v5 + 32);
  int v7 = *(unsigned __int8 *)(v6 + 24);
  if (v7 != 255) {
    sub_251A1B604(*(void *)v6, *(void *)(v6 + 8), *(void *)(v6 + 16), v7);
  }
  uint64_t v8 = a1 + *(int *)(a2 + 20);
  type metadata accessor for TilesFilter();
  uint64_t result = swift_getEnumCaseMultiPayload();
  if ((result - 1) <= 2)
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)*(&off_26536E198 + (int)result - 1));
    BOOL v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
    return v11(v8, v10);
  }
  return result;
}

uint64_t sub_251A1B604(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 == 2) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_251A1B620(uint64_t a1)
{
  return a1;
}

uint64_t sub_251A1B67C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_indexTm);
}

uint64_t sub_251A1B694(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_indexTm);
}

uint64_t type metadata accessor for IrrigationStatusItem(uint64_t a1)
{
  return sub_251A1C6FC(a1, (uint64_t *)&unk_269B9CC08);
}

uint64_t sub_251A1B6D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  int v7 = (int *)type metadata accessor for IconTextValueStringDataHolder();
  uint64_t v8 = v7[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = v7[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = v7[7];
  char v15 = (void *)(a1 + v14);
  char v16 = (void *)(a2 + v14);
  void *v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = v7[8];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = (long long *)(a2 + v17);
  int v20 = *(unsigned __int8 *)(a2 + v17 + 24);
  if (*(unsigned __int8 *)(a1 + v17 + 24) == 255)
  {
    if (v20 == 255)
    {
      long long v32 = *v19;
      *(_OWORD *)(v18 + 9) = *(long long *)((char *)v19 + 9);
      *(_OWORD *)uint64_t v18 = v32;
      if (a1 == a2) {
        return a1;
      }
    }
    else
    {
      uint64_t v28 = *(void *)v19;
      uint64_t v29 = *((void *)v19 + 1);
      uint64_t v30 = *((void *)v19 + 2);
      sub_251A1B4AC(v28, v29, v30, v20);
      *(void *)uint64_t v18 = v28;
      *(void *)(v18 + 8) = v29;
      *(void *)(v18 + 16) = v30;
      *(unsigned char *)(v18 + 24) = v20;
      if (a1 == a2) {
        return a1;
      }
    }
  }
  else if (v20 == 255)
  {
    sub_251A1B620(v18);
    long long v31 = *(long long *)((char *)v19 + 9);
    *(_OWORD *)uint64_t v18 = *v19;
    *(_OWORD *)(v18 + 9) = v31;
    if (a1 == a2) {
      return a1;
    }
  }
  else
  {
    uint64_t v21 = *(void *)v19;
    uint64_t v22 = *((void *)v19 + 1);
    uint64_t v23 = *((void *)v19 + 2);
    sub_251A1B4AC(v21, v22, v23, v20);
    uint64_t v24 = *(void *)v18;
    uint64_t v25 = *(void *)(v18 + 8);
    uint64_t v26 = *(void *)(v18 + 16);
    *(void *)uint64_t v18 = v21;
    *(void *)(v18 + 8) = v22;
    *(void *)(v18 + 16) = v23;
    char v27 = *(unsigned char *)(v18 + 24);
    *(unsigned char *)(v18 + 24) = v20;
    sub_251A1B604(v24, v25, v26, v27);
    if (a1 == a2) {
      return a1;
    }
  }
  uint64_t v33 = *(int *)(a3 + 20);
  uint64_t v34 = (void *)(a1 + v33);
  uint64_t v35 = (const void *)(a2 + v33);
  sub_251A1DFC4(a1 + v33, (uint64_t (*)(void))type metadata accessor for TilesFilter);
  uint64_t v36 = type metadata accessor for TilesFilter();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC00);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v39 - 8) + 16))(v34, v35, v39);
      swift_storeEnumTagMultiPayload();
      break;
    case 2:
      uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CBF8);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v40 - 8) + 16))(v34, v35, v40);
      swift_storeEnumTagMultiPayload();
      break;
    case 1:
      uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CBF0);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v38 - 8) + 16))(v34, v35, v38);
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t sub_251A1BA34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  int v7 = (int *)type metadata accessor for IconTextValueStringDataHolder();
  uint64_t v8 = v7[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  uint64_t v13 = v7[6];
  uint64_t v14 = (void *)(a1 + v13);
  char v15 = (uint64_t *)(a2 + v13);
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  *uint64_t v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  uint64_t v18 = v7[7];
  uint64_t v19 = (void *)(a1 + v18);
  int v20 = (uint64_t *)(a2 + v18);
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  *uint64_t v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  uint64_t v23 = v7[8];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  int v26 = *(unsigned __int8 *)(a1 + v23 + 24);
  if (v26 == 255)
  {
LABEL_6:
    *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
    *(_OWORD *)(v24 + 9) = *(_OWORD *)(v25 + 9);
    if (a1 == a2) {
      return a1;
    }
    goto LABEL_7;
  }
  int v27 = *(unsigned __int8 *)(v25 + 24);
  if (v27 == 255)
  {
    sub_251A1B620(v24);
    goto LABEL_6;
  }
  uint64_t v28 = *(void *)(v25 + 16);
  uint64_t v29 = *(void *)v24;
  uint64_t v30 = *(void *)(v24 + 8);
  uint64_t v31 = *(void *)(v24 + 16);
  *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
  *(void *)(v24 + 16) = v28;
  *(unsigned char *)(v24 + 24) = v27;
  sub_251A1B604(v29, v30, v31, v26);
  if (a1 == a2) {
    return a1;
  }
LABEL_7:
  uint64_t v32 = *(int *)(a3 + 20);
  uint64_t v33 = (void *)(a1 + v32);
  uint64_t v34 = (const void *)(a2 + v32);
  sub_251A1DFC4(a1 + v32, (uint64_t (*)(void))type metadata accessor for TilesFilter);
  uint64_t v35 = type metadata accessor for TilesFilter();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC00);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v38 - 8) + 32))(v33, v34, v38);
      swift_storeEnumTagMultiPayload();
      break;
    case 2:
      uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CBF8);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v39 - 8) + 32))(v33, v34, v39);
      swift_storeEnumTagMultiPayload();
      break;
    case 1:
      uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CBF0);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v37 - 8) + 32))(v33, v34, v37);
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t sub_251A1BCF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_indexTm_0);
}

uint64_t sub_251A1BD08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_indexTm_0);
}

uint64_t type metadata accessor for ValveStatusItem(uint64_t a1)
{
  return sub_251A1C6FC(a1, (uint64_t *)&unk_269B9CC18);
}

uint64_t *sub_251A1BD40(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v29 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v29 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_251F34DA0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = (int *)type metadata accessor for IconTextValueStringDataHolder();
    uint64_t v9 = v8[5];
    uint64_t v10 = (uint64_t *)((char *)a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    uint64_t v13 = *v11;
    uint64_t v12 = v11[1];
    *uint64_t v10 = v13;
    v10[1] = v12;
    uint64_t v14 = v8[6];
    char v15 = (uint64_t *)((char *)a1 + v14);
    uint64_t v16 = (uint64_t *)((char *)a2 + v14);
    uint64_t v17 = v16[1];
    void *v15 = *v16;
    v15[1] = v17;
    uint64_t v18 = v8[7];
    uint64_t v19 = (uint64_t *)((char *)a1 + v18);
    int v20 = (uint64_t *)((char *)a2 + v18);
    uint64_t v21 = v20[1];
    *uint64_t v19 = *v20;
    v19[1] = v21;
    uint64_t v22 = v8[8];
    uint64_t v23 = (char *)a1 + v22;
    uint64_t v24 = (char *)a2 + v22;
    int v25 = *((unsigned __int8 *)a2 + v22 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v25 == 255)
    {
      *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
      *(_OWORD *)(v23 + 9) = *(_OWORD *)(v24 + 9);
    }
    else
    {
      uint64_t v26 = *(void *)v24;
      uint64_t v27 = *((void *)v24 + 1);
      uint64_t v28 = *((void *)v24 + 2);
      sub_251A1B4AC(v26, v27, v28, v25);
      *(void *)uint64_t v23 = v26;
      *((void *)v23 + 1) = v27;
      *((void *)v23 + 2) = v28;
      v23[24] = v25;
    }
    uint64_t v30 = *(int *)(a3 + 20);
    uint64_t v31 = (char *)a1 + v30;
    uint64_t v32 = (char *)a2 + v30;
    uint64_t v33 = type metadata accessor for TilesFilter();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 3:
        uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC00);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v31, v32, v36);
        swift_storeEnumTagMultiPayload();
        break;
      case 2:
        uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CBF8);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v31, v32, v37);
        swift_storeEnumTagMultiPayload();
        break;
      case 1:
        uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CBF0);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v31, v32, v35);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_251A1C018(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for IconTextValueStringDataHolder();
  uint64_t v8 = v7[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  uint64_t v13 = v7[6];
  uint64_t v14 = (void *)(a1 + v13);
  char v15 = (void *)(a2 + v13);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  uint64_t v17 = v7[7];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  uint64_t v20 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v20;
  uint64_t v21 = v7[8];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  int v24 = *(unsigned __int8 *)(a2 + v21 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v24 == 255)
  {
    *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
    *(_OWORD *)(v22 + 9) = *(_OWORD *)(v23 + 9);
  }
  else
  {
    uint64_t v25 = *(void *)v23;
    uint64_t v26 = *(void *)(v23 + 8);
    uint64_t v27 = *(void *)(v23 + 16);
    sub_251A1B4AC(v25, v26, v27, v24);
    *(void *)uint64_t v22 = v25;
    *(void *)(v22 + 8) = v26;
    *(void *)(v22 + 16) = v27;
    *(unsigned char *)(v22 + 24) = v24;
  }
  uint64_t v28 = *(int *)(a3 + 20);
  uint64_t v29 = (void *)(a1 + v28);
  uint64_t v30 = (const void *)(a2 + v28);
  uint64_t v31 = type metadata accessor for TilesFilter();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC00);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v34 - 8) + 16))(v29, v30, v34);
      swift_storeEnumTagMultiPayload();
      break;
    case 2:
      uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CBF8);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v35 - 8) + 16))(v29, v30, v35);
      swift_storeEnumTagMultiPayload();
      break;
    case 1:
      uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CBF0);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v33 - 8) + 16))(v29, v30, v33);
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t sub_251A1C2A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for IconTextValueStringDataHolder();
  *(_OWORD *)(a1 + v7[5]) = *(_OWORD *)(a2 + v7[5]);
  *(_OWORD *)(a1 + v7[6]) = *(_OWORD *)(a2 + v7[6]);
  *(_OWORD *)(a1 + v7[7]) = *(_OWORD *)(a2 + v7[7]);
  uint64_t v8 = v7[8];
  uint64_t v9 = (_OWORD *)(a1 + v8);
  uint64_t v10 = (_OWORD *)(a2 + v8);
  *(_OWORD *)((char *)v9 + 9) = *(_OWORD *)((char *)v10 + 9);
  *uint64_t v9 = *v10;
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (const void *)(a2 + v11);
  uint64_t v14 = type metadata accessor for TilesFilter();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC00);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v17 - 8) + 32))(v12, v13, v17);
      swift_storeEnumTagMultiPayload();
      break;
    case 2:
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CBF8);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v18 - 8) + 32))(v12, v13, v18);
      swift_storeEnumTagMultiPayload();
      break;
    case 1:
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CBF0);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v16 - 8) + 32))(v12, v13, v16);
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t sub_251A1C4B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251A1C4C4);
}

uint64_t __swift_get_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for IconTextValueStringDataHolder();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = type metadata accessor for TilesFilter();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_251A1C5C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251A1C5D4);
}

uint64_t __swift_store_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for IconTextValueStringDataHolder();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = type metadata accessor for TilesFilter();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t type metadata accessor for FaucetStatusItem(uint64_t a1)
{
  return sub_251A1C6FC(a1, (uint64_t *)&unk_269B9CC28);
}

uint64_t sub_251A1C6FC(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_251A1C734()
{
  uint64_t result = type metadata accessor for IconTextValueStringDataHolder();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for TilesFilter();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_251A1C7FC(uint64_t a1, uint64_t a2, uint64_t (*a3)(char *), uint64_t a4)
{
  uint64_t v8 = type metadata accessor for StaticService();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v50 = (char *)v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)v47 - v13;
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)v47 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v48 = (uint64_t)v47 - v18;
  uint64_t v19 = *(void *)(a2 + 56);
  uint64_t v55 = a2 + 56;
  uint64_t v59 = a1;
  uint64_t v20 = -1 << *(unsigned char *)(a2 + 32);
  if (-v20 < 64) {
    uint64_t v21 = ~(-1 << -(char)v20);
  }
  else {
    uint64_t v21 = -1;
  }
  unint64_t v22 = v21 & v19;
  v47[1] = -1 << *(unsigned char *)(a2 + 32);
  int64_t v54 = (unint64_t)(63 - v20) >> 6;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v24 = 0;
  uint64_t v52 = a4;
  uint64_t v53 = a2;
  uint64_t v51 = v9;
  uint64_t v49 = v14;
  uint64_t v25 = (uint64_t)v50;
  while (1)
  {
    if (v22)
    {
      unint64_t v26 = __clz(__rbit64(v22));
      v22 &= v22 - 1;
      unint64_t v27 = v26 | (v24 << 6);
      goto LABEL_26;
    }
    int64_t v28 = v24 + 1;
    if (__OFADD__(v24, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v28 >= v54) {
      goto LABEL_28;
    }
    unint64_t v29 = *(void *)(v55 + 8 * v28);
    int64_t v30 = v24 + 1;
    if (!v29)
    {
      int64_t v30 = v24 + 2;
      if (v24 + 2 >= v54) {
        goto LABEL_28;
      }
      unint64_t v29 = *(void *)(v55 + 8 * v30);
      if (!v29)
      {
        int64_t v30 = v24 + 3;
        if (v24 + 3 >= v54) {
          goto LABEL_28;
        }
        unint64_t v29 = *(void *)(v55 + 8 * v30);
        if (!v29)
        {
          int64_t v30 = v24 + 4;
          if (v24 + 4 >= v54) {
            goto LABEL_28;
          }
          unint64_t v29 = *(void *)(v55 + 8 * v30);
          if (!v29)
          {
            int64_t v30 = v24 + 5;
            if (v24 + 5 >= v54) {
              goto LABEL_28;
            }
            unint64_t v29 = *(void *)(v55 + 8 * v30);
            if (!v29) {
              break;
            }
          }
        }
      }
    }
LABEL_25:
    unint64_t v22 = (v29 - 1) & v29;
    unint64_t v27 = __clz(__rbit64(v29)) + (v30 << 6);
    int64_t v24 = v30;
LABEL_26:
    sub_251A1E024(*(void *)(a2 + 48) + *(void *)(v9 + 72) * v27, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for StaticService);
    sub_251A1E2E8((uint64_t)v14, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for StaticService);
    char v32 = a3(v17);
    uint64_t v33 = (uint64_t)v17;
    if (v32)
    {
      int64_t v58 = v24;
      uint64_t v34 = v48;
      sub_251A1E2E8((uint64_t)v17, v48, (uint64_t (*)(void))type metadata accessor for StaticService);
      sub_251A1E2E8(v34, v25, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v35 = sub_251F34DA0();
      uint64_t v57 = v47;
      uint64_t v36 = *(void *)(v35 - 8);
      uint64_t v37 = MEMORY[0x270FA5388](v35);
      uint64_t v39 = (char *)v47 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v56 = v47;
      MEMORY[0x270FA5388](v37);
      uint64_t v40 = v17;
      BOOL v41 = a3;
      unint64_t v43 = (char *)v47 - v42;
      (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))((char *)v47 - v42, v25, v35);
      unint64_t v44 = v43;
      a3 = v41;
      uint64_t v17 = v40;
      int64_t v24 = v58;
      sub_251A637B8(v39, v44);
      uint64_t v45 = v39;
      uint64_t v14 = v49;
      uint64_t v46 = v35;
      a2 = v53;
      (*(void (**)(char *, uint64_t))(v36 + 8))(v45, v46);
      uint64_t v9 = v51;
      uint64_t v33 = v25;
    }
    uint64_t result = sub_251A1DFC4(v33, (uint64_t (*)(void))type metadata accessor for StaticService);
  }
  int64_t v31 = v24 + 6;
  if (v24 + 6 >= v54)
  {
LABEL_28:
    sub_251A1E630();
    swift_release();
    return v59;
  }
  unint64_t v29 = *(void *)(v55 + 8 * v31);
  if (v29)
  {
    int64_t v30 = v24 + 6;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v30 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      break;
    }
    if (v30 >= v54) {
      goto LABEL_28;
    }
    unint64_t v29 = *(void *)(v55 + 8 * v30);
    ++v31;
    if (v29) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_251A1CCB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for TilesFilter();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for IconTextValueStringDataHolder();
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for IrrigationStatusItem(0);
  uint64_t v62 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_251A1C7FC(MEMORY[0x263F8EE88], a1, (uint64_t (*)(char *))sub_251A1D2D0, 0);
  swift_bridgeObjectRelease();
  if (*(void *)(v13 + 16))
  {
    uint64_t v55 = (int *)v7;
    uint64_t v57 = v12;
    int64_t v58 = v6;
    uint64_t v59 = v4;
    uint64_t v60 = v10;
    uint64_t v61 = a2;
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    int64_t v54 = v48;
    v48[1] = *(void *)(*(void *)(v14 - 8) + 64);
    MEMORY[0x270FA5388](v14 - 8);
    unint64_t v49 = (v15 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v16 = (char *)v48 - v49;
    uint64_t v17 = sub_251F34DA0();
    uint64_t v18 = v13;
    uint64_t v19 = *(void *)(v17 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v16, 1, 1, v17);
    uint64_t v20 = static String.hfLocalized(_:)(0xD000000000000022, 0x8000000251F67FA0);
    uint64_t v52 = v21;
    uint64_t v53 = v20;
    static String.hfLocalized(_:)(0xD000000000000033, 0x8000000251F67FD0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_251F38650;
    uint64_t v56 = v18;
    uint64_t v23 = *(void *)(v18 + 16);
    uint64_t v24 = MEMORY[0x263F8D750];
    *(void *)(v22 + 56) = MEMORY[0x263F8D6C8];
    *(void *)(v22 + 64) = v24;
    *(void *)(v22 + 32) = v23;
    uint64_t v25 = sub_251F35710();
    uint64_t v50 = v26;
    uint64_t v51 = v25;
    swift_bridgeObjectRelease();
    uint64_t v27 = swift_bridgeObjectRelease();
    uint64_t v28 = v17;
    uint64_t v29 = MEMORY[0x270FA5388](v27);
    int64_t v31 = (char *)v48 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
    MEMORY[0x270FA5388](v29);
    char v32 = (char *)v48 - v49;
    sub_251A1E280((uint64_t)v16, (uint64_t)v48 - v49);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v32, 1, v28) == 1)
    {
      sub_251F34D90();
      sub_251A1B064((uint64_t)v16, &qword_26B21FF90);
      sub_251A1B064((uint64_t)v32, &qword_26B21FF90);
      uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
    }
    else
    {
      sub_251A1B064((uint64_t)v16, &qword_26B21FF90);
      uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
      v33(v31, v32, v28);
    }
    uint64_t v36 = v55;
    v33(v9, v31, v28);
    uint64_t v37 = &v9[v36[5]];
    *(void *)uint64_t v37 = 0xD00000000000001BLL;
    *((void *)v37 + 1) = 0x8000000251F659B0;
    uint64_t v38 = &v9[v36[6]];
    uint64_t v39 = v52;
    *(void *)uint64_t v38 = v53;
    *((void *)v38 + 1) = v39;
    uint64_t v40 = &v9[v36[7]];
    uint64_t v41 = v50;
    *(void *)uint64_t v40 = v51;
    *((void *)v40 + 1) = v41;
    uint64_t v42 = &v9[v36[8]];
    *(void *)uint64_t v42 = 0;
    *((void *)v42 + 1) = 0;
    *((void *)v42 + 2) = 0;
    v42[24] = -1;
    uint64_t v43 = (uint64_t)v57;
    uint64_t v44 = sub_251A1E2E8((uint64_t)v9, (uint64_t)v57, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
    MEMORY[0x270FA5388](v44);
    v48[-2] = v56;
    uint64_t v63 = type metadata accessor for StaticService();
    uint64_t v45 = (uint64_t)v58;
    sub_251F34EF0();
    swift_bridgeObjectRelease();
    swift_storeEnumTagMultiPayload();
    uint64_t v46 = v60;
    sub_251A1E2E8(v45, v43 + *(int *)(v60 + 20), (uint64_t (*)(void))type metadata accessor for TilesFilter);
    uint64_t v47 = v61;
    sub_251A1E2E8(v43, v61, type metadata accessor for IrrigationStatusItem);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v62 + 56))(v47, 0, 1, v46);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v62 + 56);
    return v34(a2, 1, 1, v10);
  }
}

uint64_t sub_251A1D2D0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StaticService();
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = MEMORY[0x270FA5388](v3);
  uint64_t v8 = &v14[-v7];
  int v9 = *(unsigned __int8 *)(a1 + *(int *)(v6 + 80));
  sub_251A1E024(a1, (uint64_t)&v14[-v7], (uint64_t (*)(void))type metadata accessor for StaticService);
  if (v9 == 1)
  {
    v14[6] = v8[*(int *)(v2 + 88)];
    if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v10 == 0x8000000251F64CE0)
    {
      swift_bridgeObjectRelease();
      sub_251A1DFC4((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticService);
      sub_251A1E024(a1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticService);
LABEL_7:
      uint64_t v16 = *(void *)&v5[*(int *)(v2 + 112)];
      unsigned __int8 v15 = 65;
      char v12 = sub_251B457DC(&v15);
      sub_251A1DFC4((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticService);
      return v12 & 1;
    }
    char v11 = sub_251F36B10();
    swift_bridgeObjectRelease();
    sub_251A1DFC4((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticService);
    sub_251A1E024(a1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticService);
    if (v11) {
      goto LABEL_7;
    }
  }
  else
  {
    sub_251A1DFC4((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticService);
    sub_251A1E024(a1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticService);
  }
  sub_251A1DFC4((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticService);
  return 0;
}

uint64_t sub_251A1D53C@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC38);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v19 = v4;
  uint64_t v20 = v5;
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC40);
  sub_251F34980();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC48);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  char v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC50);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  unsigned __int8 v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1E590(&qword_269B9CC58, &qword_269B9CC50);
  sub_251F34990();
  swift_getKeyPath();
  sub_251F34920();
  swift_release();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  a2[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC60);
  a2[4] = sub_251A1E358();
  __swift_allocate_boxed_opaque_existential_1(a2);
  sub_251A1E590(&qword_269B9CCA0, &qword_269B9CC38);
  sub_251A1E590(&qword_269B9CCA8, &qword_269B9CC48);
  sub_251A1E5D4();
  sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
  uint64_t v16 = v19;
  sub_251F34940();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v7, v16);
}

uint64_t sub_251A1D878@<X0>(uint64_t a1@<X8>)
{
  return sub_251A1E024(v1, a1, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
}

uint64_t sub_251A1D8AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_251A1E024(v2 + *(int *)(a1 + 20), a2, (uint64_t (*)(void))type metadata accessor for TilesFilter);
}

uint64_t sub_251A1D8E4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = &v14[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for StaticService();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = &v14[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  LOBYTE(v16) = *(unsigned char *)(a1 + *(int *)(v7 + 88));
  if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v10 == 0x8000000251F64B90)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v11 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0) {
      goto LABEL_7;
    }
  }
  sub_251A1DB28(a1, (uint64_t)v4);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
  {
    sub_251A1E2E8((uint64_t)v4, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t v16 = *(void *)&v9[*(int *)(v5 + 112)];
    unsigned __int8 v15 = 65;
    char v12 = sub_251B457DC(&v15);
    sub_251A1DFC4((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticService);
    return v12 & 1;
  }
  sub_251A1B064((uint64_t)v4, qword_26B21EE20);
LABEL_7:
  uint64_t v16 = *(void *)(a1 + *(int *)(v5 + 112));
  unsigned __int8 v15 = 3;
  char v12 = sub_251B457DC(&v15);
  return v12 & 1;
}

uint64_t sub_251A1DB28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for StaticService();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(a1 + *(int *)(v6 + 108));
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10)
  {
    uint64_t v18 = v5;
    uint64_t v19 = a2;
    uint64_t v11 = v9 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v12 = *(void *)(v5 + 72);
    uint64_t v17 = v9;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_251A1E024(v11, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticService);
      char v20 = v8[*(int *)(v4 + 88)];
      if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v13 == 0x8000000251F65130) {
        break;
      }
      char v14 = sub_251F36B10();
      swift_bridgeObjectRelease();
      if (v14) {
        goto LABEL_10;
      }
      sub_251A1DFC4((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticService);
      v11 += v12;
      if (!--v10)
      {
        uint64_t v15 = 1;
        a2 = v19;
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease();
LABEL_10:
    a2 = v19;
    sub_251A1E2E8((uint64_t)v8, v19, (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t v15 = 0;
LABEL_11:
    uint64_t v5 = v18;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = 1;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a2, v15, 1, v4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_251A1DD44(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = &v17[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for StaticService();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = &v17[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  LOBYTE(v19) = *(unsigned char *)(a1 + *(int *)(v7 + 88));
  if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v10 == 0x8000000251F64B90)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v11 = sub_251F36B10();
    swift_bridgeObjectRelease();
    char v12 = 0;
    if ((v11 & 1) == 0) {
      return v12 & 1;
    }
  }
  sub_251A1DB28(a1, (uint64_t)v4);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_251A1B064((uint64_t)v4, qword_26B21EE20);
    char v12 = 0;
  }
  else
  {
    sub_251A1E2E8((uint64_t)v4, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t v19 = *(void *)(a1 + *(int *)(v5 + 112));
    unsigned __int8 v18 = 3;
    char v13 = sub_251B457DC(&v18);
    uint64_t v19 = *(void *)&v9[*(int *)(v5 + 112)];
    unsigned __int8 v18 = 65;
    char v14 = sub_251B457DC(&v18);
    sub_251A1DFC4((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticService);
    char v15 = v13 == 2;
    if (v14 != 2) {
      char v15 = 0;
    }
    if (v13 != 2 && v14 != 2) {
      char v15 = ((v14 & 1) == 0) ^ v13;
    }
    char v12 = v15 ^ 1;
  }
  return v12 & 1;
}

uint64_t sub_251A1DFC4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_251A1E024(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_251A1E08C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StaticService();
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v15) = *(unsigned char *)(a1 + *(int *)(v3 + 88));
  if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v6 == 0x8000000251F65130)
  {
    swift_bridgeObjectRelease();
    sub_251A1E024(a1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticService);
  }
  else
  {
    char v7 = sub_251F36B10();
    swift_bridgeObjectRelease();
    sub_251A1E024(a1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticService);
    if ((v7 & 1) == 0)
    {
      sub_251A1DFC4((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticService);
      char v12 = 0;
      return v12 & 1;
    }
  }
  uint64_t v15 = *(void *)&v5[*(int *)(v2 + 112)];
  uint64_t v8 = v15;
  HIBYTE(v14) = 65;
  char v9 = sub_251B457DC((unsigned __int8 *)&v14 + 7);
  uint64_t v15 = v8;
  HIBYTE(v14) = 3;
  char v10 = sub_251B457DC((unsigned __int8 *)&v14 + 7);
  sub_251A1DFC4((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticService);
  char v11 = v9 == 2;
  if (v10 != 2) {
    char v11 = 0;
  }
  if (v9 != 2 && v10 != 2) {
    char v11 = ((v10 & 1) == 0) ^ v9;
  }
  char v12 = v11 ^ 1;
  return v12 & 1;
}

uint64_t sub_251A1E280(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_251A1E2E8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_251A1E350@<X0>(uint64_t *a1@<X8>)
{
  return sub_251A1D53C(*(void *)(v1 + 16), a1);
}

unint64_t sub_251A1E358()
{
  unint64_t result = qword_269B9CC68;
  if (!qword_269B9CC68)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B9CC60);
    sub_251A1E3C8();
    sub_251A1E510();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9CC68);
  }
  return result;
}

unint64_t sub_251A1E3C8()
{
  unint64_t result = qword_269B9CC70;
  if (!qword_269B9CC70)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B9CC38);
    sub_251A1E490(&qword_269B9CC78, &qword_269B9CC80);
    sub_251A1E490(&qword_269B9CC88, &qword_26B21E348);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9CC70);
  }
  return result;
}

uint64_t sub_251A1E490(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B9CC40);
    sub_251A1A8EC(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_251A1E510()
{
  unint64_t result = qword_269B9CC90;
  if (!qword_269B9CC90)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B9CC48);
    sub_251A1E590(&qword_269B9CC98, &qword_269B9CC50);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9CC90);
  }
  return result;
}

uint64_t sub_251A1E590(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_251A1E5D4()
{
  unint64_t result = qword_269B9CCB0;
  if (!qword_269B9CCB0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B9CC40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9CCB0);
  }
  return result;
}

uint64_t sub_251A1E630()
{
  return swift_release();
}

uint64_t sub_251A1E63C()
{
  sub_251A1E6A4();
  uint64_t result = sub_251F36180();
  qword_26B220CC0 = result;
  return result;
}

unint64_t sub_251A1E6A4()
{
  unint64_t result = qword_26B21ED08;
  if (!qword_26B21ED08)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B21ED08);
  }
  return result;
}

uint64_t PhoenixMetricsAggregator.IntervalKey.identifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PhoenixMetricsAggregator.IntervalKey.homeId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0) + 20);

  return sub_251A1E280(v3, a1);
}

uint64_t type metadata accessor for PhoenixMetricsAggregator.IntervalKey(uint64_t a1)
{
  return sub_251A1C6FC(a1, (uint64_t *)&unk_26B21FE78);
}

uint64_t PhoenixMetricsAggregator.IntervalKey.description.getter()
{
  uint64_t v1 = sub_251F34DA0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (uint64_t)v0 + *(int *)(type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0) + 20);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1E280(v5, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v8, 1, v1) == 1)
  {
    sub_251A1B064((uint64_t)v8, &qword_26B21FF90);
    uint64_t v9 = *v0;
    swift_bridgeObjectRetain();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v8, v1);
    uint64_t v10 = v0[1];
    v12[0] = *v0;
    v12[1] = v10;
    swift_bridgeObjectRetain();
    sub_251F35800();
    sub_251A1A8EC((unint64_t *)&qword_26B21E6B0);
    sub_251F36AB0();
    sub_251F35800();
    swift_bridgeObjectRelease();
    uint64_t v9 = v12[0];
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return v9;
}

uint64_t PhoenixMetricsAggregator.IntervalKey.init(identifier:homeId:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = a1;
  a4[1] = a2;
  uint64_t v5 = (uint64_t)a4 + *(int *)(type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0) + 20);

  return sub_251A1E9B4(a3, v5);
}

uint64_t sub_251A1E9B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t PhoenixMetricsAggregator.IntervalKey.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + *(int *)(type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0) + 20);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1E280(v1, (uint64_t)v4);
  uint64_t v5 = sub_251F34DA0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (v7 == 1) {
    return sub_251F36CC0();
  }
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v11 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v10, v4, v5);
  sub_251F36CC0();
  sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
  sub_251F35610();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v10, v5);
}

BOOL sub_251A1EBF4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_251A1EC10()
{
  return sub_251F36CB0();
}

uint64_t sub_251A1EC40()
{
  if (*v0) {
    return 0x6449656D6F68;
  }
  else {
    return 0x696669746E656469;
  }
}

uint64_t sub_251A1EC7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251A26D40(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251A1ECA4()
{
  return 0;
}

void sub_251A1ECB0(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_251A1ECBC(uint64_t a1)
{
  unint64_t v2 = sub_251A23F88();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251A1ECF8(uint64_t a1)
{
  unint64_t v2 = sub_251A23F88();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t PhoenixMetricsAggregator.IntervalKey.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E5D8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251A23F88();
  sub_251F36DA0();
  v8[15] = 0;
  sub_251F369D0();
  if (!v1)
  {
    type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0);
    v8[14] = 1;
    sub_251F34DA0();
    sub_251A1A8EC(&qword_26B21E348);
    sub_251F36970();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t PhoenixMetricsAggregator.IntervalKey.hashValue.getter()
{
  sub_251F36CA0();
  sub_251F357B0();
  uint64_t v1 = v0 + *(int *)(type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0) + 20);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1E280(v1, (uint64_t)v4);
  uint64_t v5 = sub_251F34DA0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (v7 == 1)
  {
    sub_251F36CC0();
  }
  else
  {
    MEMORY[0x270FA5388](v7);
    uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v4, v5);
    sub_251F36CC0();
    sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
    sub_251F35610();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  return sub_251F36D00();
}

uint64_t PhoenixMetricsAggregator.IntervalKey.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v17 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CCB8);
  uint64_t v18 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (void *)((char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251A23F88();
  sub_251F36D90();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  uint64_t v10 = v18;
  char v20 = 0;
  *uint64_t v9 = sub_251F36830();
  v9[1] = v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  v16[1] = v16;
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34DA0();
  char v19 = 1;
  sub_251A1A8EC(&qword_269B9CC80);
  sub_251F367D0();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v6, v4);
  sub_251A1E9B4((uint64_t)v14, (uint64_t)v9 + *(int *)(v7 + 20));
  sub_251A29354((uint64_t)v9, v17, type metadata accessor for PhoenixMetricsAggregator.IntervalKey);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return sub_251A293BC((uint64_t)v9, type metadata accessor for PhoenixMetricsAggregator.IntervalKey);
}

uint64_t sub_251A1F368(uint64_t a1, uint64_t a2)
{
  sub_251F357B0();
  uint64_t v4 = v2 + *(int *)(a2 + 20);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1E280(v4, (uint64_t)v7);
  uint64_t v8 = sub_251F34DA0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
  if (v10 == 1) {
    return sub_251F36CC0();
  }
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v14 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v13, v7, v8);
  sub_251F36CC0();
  sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
  sub_251F35610();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v13, v8);
}

uint64_t sub_251A1F51C(uint64_t a1, uint64_t a2)
{
  sub_251F36CA0();
  sub_251F357B0();
  uint64_t v4 = v2 + *(int *)(a2 + 20);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1E280(v4, (uint64_t)v7);
  uint64_t v8 = sub_251F34DA0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
  if (v10 == 1)
  {
    sub_251F36CC0();
  }
  else
  {
    MEMORY[0x270FA5388](v10);
    uint64_t v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v12, v7, v8);
    sub_251F36CC0();
    sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
    sub_251F35610();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  }
  return sub_251F36D00();
}

uint64_t sub_251A1F6E4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return PhoenixMetricsAggregator.IntervalKey.init(from:)(a1, a2);
}

uint64_t sub_251A1F6FC(void *a1)
{
  return PhoenixMetricsAggregator.IntervalKey.encode(to:)(a1);
}

uint64_t PhoenixMetricsAggregator.OpenInterval.hash(into:)()
{
  sub_251F357B0();
  uint64_t v1 = v0 + *(int *)(type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0) + 20);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1E280(v1, (uint64_t)v4);
  uint64_t v5 = sub_251F34DA0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (v7 == 1)
  {
    sub_251F36CC0();
  }
  else
  {
    MEMORY[0x270FA5388](v7);
    uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v4, v5);
    sub_251F36CC0();
    sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
    sub_251F35610();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  type metadata accessor for PhoenixMetricsAggregator.OpenInterval(0);
  sub_251F365B0();
  sub_251A240EC(&qword_269B9CCC0, MEMORY[0x263F8F6D8]);
  return sub_251F35610();
}

uint64_t static PhoenixMetricsAggregator.OpenInterval.== infix(_:_:)(void *a1, void *a2)
{
  if (!_s13HomeDataModel24PhoenixMetricsAggregatorC11IntervalKeyV2eeoiySbAE_AEtFZ_0(a1, a2)) {
    return 0;
  }
  type metadata accessor for PhoenixMetricsAggregator.OpenInterval(0);

  return sub_251F36590();
}

uint64_t PhoenixMetricsAggregator.OpenInterval.hashValue.getter()
{
  sub_251F36CA0();
  sub_251F357B0();
  uint64_t v1 = v0 + *(int *)(type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0) + 20);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1E280(v1, (uint64_t)v4);
  uint64_t v5 = sub_251F34DA0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (v7 == 1)
  {
    sub_251F36CC0();
  }
  else
  {
    MEMORY[0x270FA5388](v7);
    uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v4, v5);
    sub_251F36CC0();
    sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
    sub_251F35610();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  type metadata accessor for PhoenixMetricsAggregator.OpenInterval(0);
  sub_251F365B0();
  sub_251A240EC(&qword_269B9CCC0, MEMORY[0x263F8F6D8]);
  sub_251F35610();
  return sub_251F36D00();
}

uint64_t sub_251A1FBC0()
{
  sub_251F357B0();
  uint64_t v1 = v0 + *(int *)(type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0) + 20);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1E280(v1, (uint64_t)v4);
  uint64_t v5 = sub_251F34DA0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (v7 == 1)
  {
    sub_251F36CC0();
  }
  else
  {
    MEMORY[0x270FA5388](v7);
    uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v4, v5);
    sub_251F36CC0();
    sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
    sub_251F35610();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  sub_251F365B0();
  sub_251A240EC(&qword_269B9CCC0, MEMORY[0x263F8F6D8]);
  return sub_251F35610();
}

uint64_t sub_251A1FDD8()
{
  sub_251F36CA0();
  sub_251F357B0();
  uint64_t v1 = v0 + *(int *)(type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0) + 20);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1E280(v1, (uint64_t)v4);
  uint64_t v5 = sub_251F34DA0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (v7 == 1)
  {
    sub_251F36CC0();
  }
  else
  {
    MEMORY[0x270FA5388](v7);
    uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v4, v5);
    sub_251F36CC0();
    sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
    sub_251F35610();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  sub_251F365B0();
  sub_251A240EC(&qword_269B9CCC0, MEMORY[0x263F8F6D8]);
  sub_251F35610();
  return sub_251F36D00();
}

uint64_t sub_251A20004(void *a1, void *a2)
{
  if (!static PhoenixMetricsAggregator.IntervalKey.== infix(_:_:)(a1, a2)) {
    return 0;
  }

  return sub_251F36590();
}

uint64_t PhoenixMetricsAggregator.HighSnapshotActivityAnalyticsEvent.eventName.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PhoenixMetricsAggregator.HighSnapshotActivityAnalyticsEvent.domainPrefix.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PhoenixMetricsAggregator.HighSnapshotActivityAnalyticsEvent.totalSnapshotTime.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t PhoenixMetricsAggregator.HighSnapshotActivityAnalyticsEvent.totalSnapshotTime.setter(uint64_t result)
{
  *(void *)(v1 + 32) = result;
  return result;
}

uint64_t (*PhoenixMetricsAggregator.HighSnapshotActivityAnalyticsEvent.totalSnapshotTime.modify())()
{
  return nullsub_1;
}

uint64_t PhoenixMetricsAggregator.HighSnapshotActivityAnalyticsEvent.aggregationInterval.getter()
{
  return *(void *)(v0 + 40);
}

uint64_t PhoenixMetricsAggregator.HighSnapshotActivityAnalyticsEvent.aggregationInterval.setter(uint64_t result)
{
  *(void *)(v1 + 40) = result;
  return result;
}

uint64_t (*PhoenixMetricsAggregator.HighSnapshotActivityAnalyticsEvent.aggregationInterval.modify())()
{
  return nullsub_1;
}

uint64_t PhoenixMetricsAggregator.HighSnapshotActivityAnalyticsEvent.maxSnapshotTime.getter()
{
  return *(void *)(v0 + 48);
}

uint64_t PhoenixMetricsAggregator.HighSnapshotActivityAnalyticsEvent.maxSnapshotTime.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 48) = result;
  *(unsigned char *)(v2 + 56) = a2 & 1;
  return result;
}

uint64_t (*PhoenixMetricsAggregator.HighSnapshotActivityAnalyticsEvent.maxSnapshotTime.modify())()
{
  return nullsub_1;
}

double PhoenixMetricsAggregator.HighSnapshotActivityAnalyticsEvent.snapshotTimeToIntervalRatio.getter()
{
  return *(double *)(v0 + 64);
}

void PhoenixMetricsAggregator.HighSnapshotActivityAnalyticsEvent.snapshotTimeToIntervalRatio.setter(double a1)
{
  *(double *)(v1 + 64) = a1;
}

uint64_t (*PhoenixMetricsAggregator.HighSnapshotActivityAnalyticsEvent.snapshotTimeToIntervalRatio.modify())()
{
  return nullsub_1;
}

uint64_t PhoenixMetricsAggregator.HighSnapshotActivityAnalyticsEvent.numberOfHomes.getter()
{
  return *(void *)(v0 + 72);
}

uint64_t PhoenixMetricsAggregator.HighSnapshotActivityAnalyticsEvent.numberOfHomes.setter(uint64_t result)
{
  *(void *)(v1 + 72) = result;
  return result;
}

uint64_t (*PhoenixMetricsAggregator.HighSnapshotActivityAnalyticsEvent.numberOfHomes.modify())()
{
  return nullsub_1;
}

uint64_t PhoenixMetricsAggregator.HighSnapshotActivityAnalyticsEvent.currentHomeSizeScore.getter()
{
  return *(void *)(v0 + 80);
}

uint64_t PhoenixMetricsAggregator.HighSnapshotActivityAnalyticsEvent.currentHomeSizeScore.setter(uint64_t result)
{
  *(void *)(v1 + 80) = result;
  return result;
}

uint64_t (*PhoenixMetricsAggregator.HighSnapshotActivityAnalyticsEvent.currentHomeSizeScore.modify())()
{
  return nullsub_1;
}

uint64_t PhoenixMetricsAggregator.HighSnapshotActivityAnalyticsEvent.isPhoenixEnabled.getter()
{
  return *(unsigned __int8 *)(v0 + 88);
}

uint64_t PhoenixMetricsAggregator.HighSnapshotActivityAnalyticsEvent.processName.getter()
{
  uint64_t v1 = *(void *)(v0 + 96);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PhoenixMetricsAggregator.HighSnapshotActivityAnalyticsEvent.init(totalSnapshotTime:aggregationInterval:maxSnapshotTime:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  *(unsigned char *)(v8 + 184) = a8;
  *(void *)(v8 + 96) = a6;
  *(void *)(v8 + 104) = a7;
  *(void *)(v8 + 80) = a4;
  *(void *)(v8 + 88) = a5;
  *(void *)(v8 + 64) = a2;
  *(void *)(v8 + 72) = a3;
  *(void *)(v8 + 56) = a1;
  return MEMORY[0x270FA2498](sub_251A20264, 0, 0);
}

uint64_t sub_251A20264()
{
  *(void *)(v0 + 40) = &type metadata for HomeAppFeatures;
  unint64_t v1 = sub_251A23FFC();
  *(unsigned char *)(v0 + 16) = 3;
  *(void *)(v0 + 48) = v1;
  *(unsigned char *)(v0 + 185) = sub_251F34F60() & 1;
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  id v2 = objc_msgSend(self, sel_processInfo);
  id v3 = objc_msgSend(v2, sel_processName);

  uint64_t v4 = sub_251F356F0();
  uint64_t v6 = v5;

  *(void *)(v0 + 112) = v4;
  *(void *)(v0 + 120) = v6;
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_251F36DB0();
  *(void *)(v0 + 128) = v7;
  *(void *)(v0 + 136) = v8;
  double v9 = (double)v7 * 1000000000.0 + (double)v8 * 0.000000001;
  uint64_t v10 = sub_251F36DB0();
  *(void *)(v0 + 144) = v10;
  *(void *)(v0 + 152) = v11;
  if (v9 / ((double)v10 * 1000000000.0 + (double)v11 * 0.000000001) <= 0.1)
  {
    uint64_t v14 = *(_OWORD **)(v0 + 56);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v14[5] = 0u;
    v14[6] = 0u;
    v14[3] = 0u;
    v14[4] = 0u;
    v14[1] = 0u;
    _OWORD v14[2] = 0u;
    *uint64_t v14 = 0u;
    uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
    return v15();
  }
  else
  {
    sub_251F35C80();
    *(void *)(v0 + 160) = sub_251F35C70();
    uint64_t v13 = sub_251F35C00();
    return MEMORY[0x270FA2498](sub_251A204C0, v13, v12);
  }
}

uint64_t sub_251A204C0()
{
  swift_release();
  sub_251A207D8((uint64_t *)(v0 + 16));
  *(_OWORD *)(v0 + 168) = *(_OWORD *)(v0 + 16);
  return MEMORY[0x270FA2498](sub_251A20548, 0, 0);
}

uint64_t sub_251A20548()
{
  uint64_t result = sub_251F36DB0();
  double v3 = round(((double)result * 1000000000.0 + (double)v2 * 0.000000001) / 1000000.0);
  if ((~*(void *)&v3 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v3 <= -1.0)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v3 >= 1.84467441e19)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t result = sub_251F36DB0();
  double v5 = round(((double)result * 1000000000.0 + (double)v4 * 0.000000001) / 1000000.0);
  if ((~*(void *)&v5 & 0x7FF0000000000000) == 0)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v5 <= -1.0)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v5 >= 1.84467441e19)
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (*(unsigned char *)(v0 + 184))
  {
    unint64_t v8 = 0;
    char v9 = 1;
    goto LABEL_13;
  }
  uint64_t result = sub_251F36DB0();
  double v7 = round(((double)result * 1000000000.0 + (double)v6 * 0.000000001) / 1000000.0);
  if ((~*(void *)&v7 & 0x7FF0000000000000) == 0) {
    goto LABEL_22;
  }
  if (v7 <= -1.0)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= 1.84467441e19)
  {
LABEL_24:
    __break(1u);
    return result;
  }
  unint64_t v8 = (unint64_t)v7;
  char v9 = *(unsigned char *)(v0 + 184) & 1;
LABEL_13:
  double v10 = (double)*(uint64_t *)(v0 + 136) * 0.000000001 + (double)*(uint64_t *)(v0 + 128) * 1000000000.0;
  uint64_t v12 = *(void *)(v0 + 112);
  uint64_t v11 = *(void *)(v0 + 120);
  char v13 = *(unsigned char *)(v0 + 185);
  uint64_t v14 = *(void *)(v0 + 56);
  double v15 = (double)*(uint64_t *)(v0 + 152) * 0.000000001 + (double)*(uint64_t *)(v0 + 144) * 1000000000.0;
  long long v16 = *(_OWORD *)(v0 + 168);
  *(void *)uint64_t v14 = 0xD000000000000014;
  *(void *)(v14 + 8) = 0x8000000251F68030;
  *(void *)(v14 + 16) = 0xD000000000000018;
  *(void *)(v14 + 24) = 0x8000000251F68050;
  *(void *)(v14 + 32) = (unint64_t)v3;
  *(void *)(v14 + 40) = (unint64_t)v5;
  *(void *)(v14 + 48) = v8;
  *(unsigned char *)(v14 + 56) = v9;
  *(double *)(v14 + 64) = v10 / v15;
  *(_OWORD *)(v14 + 72) = v16;
  *(unsigned char *)(v14 + 88) = v13;
  *(void *)(v14 + 96) = v12;
  *(void *)(v14 + 104) = v11;
  swift_bridgeObjectRelease();
  uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
  return v17();
}

uint64_t sub_251A207D8@<X0>(uint64_t *a1@<X8>)
{
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  uint64_t v2 = (id *)(qword_26B21FF50 + OBJC_IVAR____TtC13HomeDataModel9DataModel_homeManager);
  swift_beginAccess();
  if (!*v2)
  {
    uint64_t v5 = 0;
    goto LABEL_7;
  }
  id v3 = objc_msgSend(*v2, sel_homes);
  sub_251A27C8C();
  unint64_t v4 = sub_251F35AC0();

  if (!(v4 >> 62))
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease();
LABEL_7:
    swift_getKeyPath();
    sub_251A240EC((unint64_t *)&qword_26B21F280, (void (*)(uint64_t))type metadata accessor for DataModel);
    sub_251F34F10();
    swift_release();
    swift_beginAccess();
    uint64_t result = sub_251D9C01C();
    *a1 = v5;
    a1[1] = result;
    return result;
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_251F366C0();
  swift_bridgeObjectRelease_n();
  if ((v5 & 0x8000000000000000) == 0) {
    goto LABEL_7;
  }
  uint64_t result = sub_251F36670();
  __break(1u);
  return result;
}

unint64_t sub_251A209E0(char a1)
{
  unint64_t result = 0x6D614E746E657665;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x72506E69616D6F64;
      break;
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    case 4:
      unint64_t result = 0x7370616E5378616DLL;
      break;
    case 5:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 6:
      unint64_t result = 0x664F7265626D756ELL;
      break;
    case 7:
      unint64_t result = 0xD000000000000014;
      break;
    case 8:
      unint64_t result = 0xD000000000000010;
      break;
    case 9:
      unint64_t result = 0x4E737365636F7270;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t _s13HomeDataModel0A11AppFeaturesO9hashValueSivg_0()
{
  return sub_251F36D00();
}

uint64_t sub_251A20BA0()
{
  return sub_251F36D00();
}

unint64_t sub_251A20BE4()
{
  return sub_251A209E0(*v0);
}

uint64_t sub_251A20BEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251A26E38(a1, a2);
  *a3 = result;
  return result;
}

void sub_251A20C14(unsigned char *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_251A20C20(uint64_t a1)
{
  unint64_t v2 = sub_251A24050();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251A20C5C(uint64_t a1)
{
  unint64_t v2 = sub_251A24050();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t PhoenixMetricsAggregator.HighSnapshotActivityAnalyticsEvent.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CCD0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v25 = *(void *)(v1 + 24);
  uint64_t v26 = v7;
  uint64_t v8 = *(void *)(v1 + 32);
  uint64_t v23 = *(void *)(v1 + 40);
  uint64_t v24 = v8;
  uint64_t v22 = *(void *)(v1 + 48);
  int v21 = *(unsigned __int8 *)(v1 + 56);
  uint64_t v9 = *(void *)(v1 + 72);
  uint64_t v18 = *(void *)(v1 + 80);
  uint64_t v19 = v9;
  v17[3] = *(unsigned __int8 *)(v1 + 88);
  uint64_t v10 = *(void *)(v1 + 104);
  uint64_t v20 = *(void *)(v1 + 96);
  uint64_t v11 = a1[3];
  uint64_t v12 = a1;
  uint64_t v14 = v13;
  __swift_project_boxed_opaque_existential_1(v12, v11);
  sub_251A24050();
  sub_251F36DA0();
  char v37 = 0;
  uint64_t v15 = v27;
  sub_251F369D0();
  if (!v15)
  {
    uint64_t v27 = v10;
    char v36 = 1;
    sub_251F36910();
    char v35 = 2;
    sub_251F36A10();
    char v34 = 3;
    sub_251F36A10();
    char v33 = 4;
    sub_251F36960();
    char v32 = 5;
    sub_251F369F0();
    char v31 = 6;
    sub_251F36A10();
    char v30 = 7;
    sub_251F36A10();
    char v29 = 8;
    sub_251F369E0();
    char v28 = 9;
    sub_251F369D0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v14);
}

uint64_t sub_251A20F90()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_251A20FC0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_251A20FF0(void *a1)
{
  return PhoenixMetricsAggregator.HighSnapshotActivityAnalyticsEvent.encode(to:)(a1);
}

uint64_t sub_251A21008()
{
  return 1;
}

uint64_t _s13HomeDataModel13UIKitFeaturesO9hashValueSivg_0()
{
  return sub_251F36D00();
}

uint64_t sub_251A21054()
{
  return sub_251F36CB0();
}

uint64_t sub_251A2107C()
{
  return sub_251F36D00();
}

uint64_t sub_251A210C8()
{
  return 0;
}

uint64_t sub_251A2126C(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    sub_251A3E2E0(0, v2, 0);
    uint64_t result = v9;
    uint64_t v4 = a1 + 40;
    do
    {
      uint64_t v5 = *(void *)(*(void *)v4 + 16);
      uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 16);
      uint64_t v10 = result;
      unint64_t v8 = *(void *)(result + 16);
      unint64_t v7 = *(void *)(result + 24);
      if (v8 >= v7 >> 1)
      {
        sub_251A3E2E0(v7 > 1, v8 + 1, 1);
        uint64_t result = v10;
      }
      *(void *)(result + 16) = v8 + 1;
      *(double *)(result + 8 * v8 + 32) = -(1.0 - (double)v5 / (double)v6);
      v4 += 16;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_251A21358()
{
  sub_251F36400();
  swift_bridgeObjectRelease();
  strcpy((char *)v1, "[Aggregation-");
  PhoenixMetricsAggregator.IntervalKey.description.getter();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  _s8IntervalV11AggregationVMa(0);
  sub_251A21464();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  return v1[0];
}

uint64_t sub_251A21464()
{
  return 0;
}

uint64_t sub_251A21648(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E5E8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  unint64_t v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251A28B94();
  sub_251F36DA0();
  LOBYTE(v15) = 0;
  type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0);
  sub_251A240EC(&qword_26B21E3D0, (void (*)(uint64_t))type metadata accessor for PhoenixMetricsAggregator.IntervalKey);
  sub_251F36A20();
  if (!v2)
  {
    uint64_t v9 = (long long *)(v3 + *(int *)(_s8IntervalV11AggregationVMa(0) + 20));
    uint64_t v10 = *((void *)v9 + 10);
    long long v11 = v9[1];
    long long v15 = *v9;
    long long v16 = v11;
    long long v12 = v9[3];
    long long v17 = v9[2];
    long long v18 = v12;
    long long v19 = v9[4];
    uint64_t v20 = v10;
    v14[15] = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E588);
    sub_251A1E590(&qword_26B21E580, &qword_26B21E588);
    sub_251F36A20();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_251A21860()
{
  uint64_t v1 = v0;
  sub_251F36CA0();
  sub_251F357B0();
  uint64_t v2 = v0 + *(int *)(type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0) + 20);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1E280(v2, (uint64_t)v5);
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
  if (v8 == 1)
  {
    sub_251F36CC0();
  }
  else
  {
    MEMORY[0x270FA5388](v8);
    uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v5, v6);
    sub_251F36CC0();
    sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
    sub_251F35610();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  uint64_t v12 = *(void *)(v1 + *(int *)(_s8IntervalV11AggregationVMa(0) + 20) + 80);
  sub_251F36CB0();
  sub_251F36E10();
  sub_251F36E10();
  sub_251F36E10();
  sub_251F36E10();
  sub_251F36E10();
  return sub_251F36D00();
}

uint64_t sub_251A21ABC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v4 = type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v23 = (uint64_t)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CD70);
  uint64_t v21 = *(void *)(v6 - 8);
  uint64_t v22 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = _s8IntervalV11AggregationVMa(0);
  MEMORY[0x270FA5388](v9);
  long long v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251A28B94();
  sub_251F36D90();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  uint64_t v12 = v21;
  uint64_t v13 = (uint64_t)v11;
  LOBYTE(v24) = 0;
  sub_251A240EC(&qword_269B9CD78, (void (*)(uint64_t))type metadata accessor for PhoenixMetricsAggregator.IntervalKey);
  uint64_t v14 = v22;
  sub_251F36880();
  sub_251A292F0(v23, v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E588);
  char v30 = 1;
  sub_251A1E590(&qword_269B9CD80, &qword_26B21E588);
  sub_251F36880();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v14);
  uint64_t v15 = v29;
  uint64_t v16 = v13 + *(int *)(v9 + 20);
  long long v17 = v25;
  *(_OWORD *)uint64_t v16 = v24;
  *(_OWORD *)(v16 + 16) = v17;
  long long v18 = v27;
  *(_OWORD *)(v16 + 32) = v26;
  *(_OWORD *)(v16 + 48) = v18;
  *(_OWORD *)(v16 + 64) = v28;
  *(void *)(v16 + 80) = v15;
  sub_251A29354(v13, v20, _s8IntervalV11AggregationVMa);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return sub_251A293BC(v13, _s8IntervalV11AggregationVMa);
}

uint64_t sub_251A21E0C()
{
  sub_251F36CA0();
  sub_251F357B0();
  uint64_t v1 = v0 + *(int *)(type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0) + 20);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1E280(v1, (uint64_t)v4);
  uint64_t v5 = sub_251F34DA0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (v7 == 1)
  {
    sub_251F36CC0();
  }
  else
  {
    MEMORY[0x270FA5388](v7);
    uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v4, v5);
    sub_251F36CC0();
    sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
    sub_251F35610();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  _s8IntervalVMa(0);
  sub_251F365B0();
  sub_251A240EC(&qword_269B9CCC0, MEMORY[0x263F8F6D8]);
  sub_251F35610();
  sub_251F35610();
  return sub_251F36D00();
}

uint64_t sub_251A22058()
{
  if (*v0) {
    return 0x7363697274656DLL;
  }
  else {
    return 7955819;
  }
}

uint64_t sub_251A2208C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251A2739C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251A220B4(uint64_t a1)
{
  unint64_t v2 = sub_251A28B94();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251A220F0(uint64_t a1)
{
  unint64_t v2 = sub_251A28B94();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251A22130(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  sub_251F357B0();
  uint64_t v5 = v2 + *(int *)(type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0) + 20);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1E280(v5, (uint64_t)v8);
  uint64_t v9 = sub_251F34DA0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9);
  if (v11 == 1)
  {
    sub_251F36CC0();
  }
  else
  {
    MEMORY[0x270FA5388](v11);
    uint64_t v13 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v8, v9);
    sub_251F36CC0();
    sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
    sub_251F35610();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  }
  uint64_t v14 = v4 + *(int *)(a2 + 20);
  uint64_t v15 = *(void *)(v14 + 72);
  v17[0] = *(void *)(v14 + 80);
  v17[1] = v15;
  sub_251F36CB0();
  sub_251F36E10();
  sub_251F36E10();
  sub_251F36E10();
  sub_251F36E10();
  return sub_251F36E10();
}

uint64_t sub_251A22374(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  sub_251F36CA0();
  sub_251F357B0();
  uint64_t v5 = v2 + *(int *)(type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0) + 20);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1E280(v5, (uint64_t)v8);
  uint64_t v9 = sub_251F34DA0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9);
  if (v11 == 1)
  {
    sub_251F36CC0();
  }
  else
  {
    MEMORY[0x270FA5388](v11);
    uint64_t v13 = (char *)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v8, v9);
    sub_251F36CC0();
    sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
    sub_251F35610();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  }
  uint64_t v15 = *(void *)(v4 + *(int *)(a2 + 20) + 80);
  sub_251F36CB0();
  sub_251F36E10();
  sub_251F36E10();
  sub_251F36E10();
  sub_251F36E10();
  sub_251F36E10();
  return sub_251F36D00();
}

uint64_t sub_251A225D0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_251A21ABC(a1, a2);
}

uint64_t sub_251A225E8(void *a1)
{
  return sub_251A21648(a1);
}

uint64_t sub_251A22604()
{
  sub_251F357B0();
  uint64_t v1 = v0 + *(int *)(type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0) + 20);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1E280(v1, (uint64_t)v4);
  uint64_t v5 = sub_251F34DA0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (v7 == 1)
  {
    sub_251F36CC0();
  }
  else
  {
    MEMORY[0x270FA5388](v7);
    uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v4, v5);
    sub_251F36CC0();
    sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
    sub_251F35610();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  sub_251F365B0();
  sub_251A240EC(&qword_269B9CCC0, MEMORY[0x263F8F6D8]);
  sub_251F35610();
  return sub_251F35610();
}

uint64_t sub_251A22838()
{
  sub_251F36CA0();
  sub_251F357B0();
  uint64_t v1 = v0 + *(int *)(type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0) + 20);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1E280(v1, (uint64_t)v4);
  uint64_t v5 = sub_251F34DA0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (v7 == 1)
  {
    sub_251F36CC0();
  }
  else
  {
    MEMORY[0x270FA5388](v7);
    uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v4, v5);
    sub_251F36CC0();
    sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
    sub_251F35610();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  sub_251F365B0();
  sub_251A240EC(&qword_269B9CCC0, MEMORY[0x263F8F6D8]);
  sub_251F35610();
  sub_251F35610();
  return sub_251F36D00();
}

uint64_t sub_251A22A80(void *a1, void *a2)
{
  if (!static PhoenixMetricsAggregator.IntervalKey.== infix(_:_:)(a1, a2) || (sub_251F36590() & 1) == 0) {
    return 0;
  }

  return sub_251F36590();
}

uint64_t sub_251A22B00()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v29 = v0;
  uint64_t v30 = v2 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(v2 + 64);
  sub_251A2729C(v1);
  int64_t v31 = (unint64_t)(v3 + 63) >> 6;
  uint64_t v32 = v2;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v7 = 0;
  uint64_t v8 = 0;
  uint64_t v9 = MEMORY[0x263F8EE78];
  do
  {
    if (v5)
    {
      unint64_t v12 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v13 = v12 | (v7 << 6);
    }
    else
    {
      int64_t v14 = v7 + 1;
      if (__OFADD__(v7, 1)) {
        goto LABEL_42;
      }
      if (v14 >= v31) {
        goto LABEL_39;
      }
      unint64_t v15 = *(void *)(v30 + 8 * v14);
      ++v7;
      if (!v15)
      {
        int64_t v7 = v14 + 1;
        if (v14 + 1 >= v31) {
          goto LABEL_39;
        }
        unint64_t v15 = *(void *)(v30 + 8 * v7);
        if (!v15)
        {
          int64_t v7 = v14 + 2;
          if (v14 + 2 >= v31) {
            goto LABEL_39;
          }
          unint64_t v15 = *(void *)(v30 + 8 * v7);
          if (!v15)
          {
            int64_t v7 = v14 + 3;
            if (v14 + 3 >= v31) {
              goto LABEL_39;
            }
            unint64_t v15 = *(void *)(v30 + 8 * v7);
            if (!v15)
            {
              int64_t v7 = v14 + 4;
              if (v14 + 4 >= v31) {
                goto LABEL_39;
              }
              unint64_t v15 = *(void *)(v30 + 8 * v7);
              if (!v15)
              {
                int64_t v16 = v14 + 5;
                if (v16 >= v31) {
                  goto LABEL_39;
                }
                unint64_t v15 = *(void *)(v30 + 8 * v16);
                if (!v15)
                {
                  while (1)
                  {
                    int64_t v7 = v16 + 1;
                    if (__OFADD__(v16, 1)) {
                      goto LABEL_43;
                    }
                    if (v7 >= v31) {
                      goto LABEL_39;
                    }
                    unint64_t v15 = *(void *)(v30 + 8 * v7);
                    ++v16;
                    if (v15) {
                      goto LABEL_25;
                    }
                  }
                }
                int64_t v7 = v16;
              }
            }
          }
        }
      }
LABEL_25:
      unint64_t v5 = (v15 - 1) & v15;
      unint64_t v13 = __clz(__rbit64(v15)) + (v7 << 6);
    }
    uint64_t v17 = *(void *)(*(void *)(v32 + 56) + 8 * v13);
    int64_t v18 = *(void *)(v17 + 16);
    if (v18)
    {
      uint64_t v19 = v9;
      sub_251A3E2C0(0, v18, 0);
      uint64_t result = v9;
      uint64_t v20 = (uint64_t *)(v17 + 32);
      unint64_t v21 = *(void *)(v9 + 16);
      do
      {
        uint64_t v23 = *v20;
        v20 += 2;
        uint64_t v22 = v23;
        uint64_t v33 = result;
        unint64_t v24 = *(void *)(result + 24);
        unint64_t v25 = v21 + 1;
        if (v21 >= v24 >> 1)
        {
          sub_251A3E2C0(v24 > 1, v21 + 1, 1);
          uint64_t result = v33;
        }
        *(void *)(result + 16) = v25;
        *(void *)(result + 8 * v21++ + 32) = v22;
        --v18;
      }
      while (v18);
      uint64_t v9 = v19;
LABEL_34:
      uint64_t v26 = 0;
      uint64_t v10 = 0;
      do
      {
        uint64_t v27 = *(void *)(result + 8 * v26 + 32);
        BOOL v28 = __OFADD__(v10, v27);
        v10 += v27;
        if (v28)
        {
          __break(1u);
          goto LABEL_41;
        }
        ++v26;
      }
      while (v25 != v26);
      uint64_t result = swift_bridgeObjectRelease();
      if ((v10 & 0x8000000000000000) == 0) {
        goto LABEL_5;
      }
      sub_251F36670();
      __break(1u);
LABEL_39:
      swift_release();
      sub_251A272C8(v29);
      return v8;
    }
    unint64_t v25 = *(void *)(v9 + 16);
    if (v25)
    {
      uint64_t result = v9;
      goto LABEL_34;
    }
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v10 = 0;
LABEL_5:
    BOOL v11 = __CFADD__(v8, v10);
    v8 += v10;
  }
  while (!v11);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
  return result;
}

void sub_251A22E00(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

void sub_251A22E08(void *a1@<X8>)
{
  *a1 = MEMORY[0x263F8EE78];
}

uint64_t sub_251A22E18(char *a1, char *a2)
{
  return sub_251DB2080(*a1, *a2);
}

uint64_t sub_251A22E24()
{
  return sub_251F36D00();
}

uint64_t sub_251A22EAC()
{
  sub_251F357B0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_251A22F20()
{
  return sub_251F36D00();
}

uint64_t sub_251A22FA4(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CD40);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251A28EE0();
  sub_251F36DA0();
  char v10 = 0;
  sub_251F36A00();
  if (!v1)
  {
    char v9 = 1;
    sub_251F36A00();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_251A2310C@<X0>(char *a1@<X8>)
{
  return sub_251A23804(a1);
}

void sub_251A23118(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x746E756F635F30;
  if (*v1) {
    uint64_t v2 = 0x7265746C69665F31;
  }
  unint64_t v3 = 0xE700000000000000;
  if (*v1) {
    unint64_t v3 = 0xEA00000000006465;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_251A2315C()
{
  if (*v0) {
    return 0x7265746C69665F31;
  }
  else {
    return 0x746E756F635F30;
  }
}

uint64_t sub_251A2319C@<X0>(char *a1@<X8>)
{
  return sub_251A23900(a1);
}

uint64_t sub_251A231A8(uint64_t a1)
{
  unint64_t v2 = sub_251A28EE0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251A231E4(uint64_t a1)
{
  unint64_t v2 = sub_251A28EE0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251A23220@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_251A28D3C(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_251A2324C(void *a1)
{
  return sub_251A22FA4(a1);
}

char *sub_251A23268(uint64_t a1)
{
  sub_251F345B0();
  swift_allocObject();
  sub_251F345A0();
  uint64_t v4 = sub_251F34570();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v7 + 16))(v6, a1);
  sub_251F34580();
  long long v8 = *(_OWORD *)(v1 + 16);
  v18[0] = *(_OWORD *)v1;
  v18[1] = v8;
  v18[2] = *(_OWORD *)(v1 + 32);
  uint64_t v19 = *(void *)(v1 + 48);
  sub_251A272F4();
  uint64_t v9 = sub_251F34590();
  if (!v2)
  {
    uint64_t v11 = v9;
    unint64_t v12 = v10;
    uint64_t v13 = sub_251F35740();
    MEMORY[0x270FA5388](v13 - 8);
    uint64_t v6 = (char *)v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_251F35730();
    uint64_t v15 = sub_251F35700();
    if (v16)
    {
      uint64_t v6 = (char *)v15;
      sub_251A1AD94(v11, v12);
      swift_release();
      return v6;
    }
    sub_251A27348();
    swift_allocError();
    swift_willThrow();
    sub_251A1AD94(v11, v12);
  }
  swift_release();
  return v6;
}

uint64_t sub_251A23480(void *a1)
{
  unint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E5E0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  long long v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251A28BE8();
  sub_251F36DA0();
  long long v9 = v3[1];
  long long v13 = *v3;
  long long v14 = v9;
  long long v15 = v3[2];
  char v12 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E578);
  sub_251A1E590(&qword_26B21E570, &qword_26B21E578);
  sub_251F36A20();
  if (!v2)
  {
    *(void *)&long long v13 = *((void *)v3 + 6);
    char v12 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E460);
    sub_251A28C3C();
    sub_251F36A20();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_251A23654(char *a1, char *a2)
{
  return sub_251DB212C(*a1, *a2);
}

uint64_t sub_251A23660()
{
  return sub_251F36D00();
}

uint64_t sub_251A236F0()
{
  sub_251F357B0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_251A2376C()
{
  return sub_251F36D00();
}

uint64_t sub_251A237F8@<X0>(char *a1@<X8>)
{
  return sub_251A23804(a1);
}

uint64_t sub_251A23804@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_251F36750();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_251A23860(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x4D6F697461725F30;
  if (*v1) {
    uint64_t v2 = 0x73746E756F635F31;
  }
  unint64_t v3 = 0xEE00736369727465;
  if (*v1) {
    unint64_t v3 = 0xE800000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_251A238AC()
{
  if (*v0) {
    return 0x73746E756F635F31;
  }
  else {
    return 0x4D6F697461725F30;
  }
}

uint64_t sub_251A238F4@<X0>(char *a1@<X8>)
{
  return sub_251A23900(a1);
}

uint64_t sub_251A23900@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_251F36750();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_251A23960(uint64_t a1)
{
  unint64_t v2 = sub_251A28BE8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251A2399C(uint64_t a1)
{
  unint64_t v2 = sub_251A28BE8();

  return MEMORY[0x270FA00B8](a1, v2);
}

double sub_251A239D8@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_251A28F34(a1, v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    double result = *(double *)&v7;
    *(_OWORD *)(a2 + 32) = v7;
    *(void *)(a2 + 48) = v8;
  }
  return result;
}

uint64_t sub_251A23A28(void *a1)
{
  return sub_251A23480(a1);
}

BOOL sub_251A23A40(void *a1, void *a2)
{
  BOOL result = 0;
  if (_s13HomeDataModel24PhoenixMetricsAggregatorC11IntervalKeyV2eeoiySbAE_AEtFZ_0(a1, a2))
  {
    uint64_t v4 = *(int *)(_s8IntervalV11AggregationVMa(0) + 20);
    if (*(void *)((char *)a1 + v4) == *(void *)((char *)a2 + v4)
      && (sub_251F36E00() & 1) != 0
      && (sub_251F36E00() & 1) != 0
      && (sub_251F36E00() & 1) != 0
      && (sub_251F36E00() & 1) != 0
      && (sub_251F36E00() & 1) != 0)
    {
      return 1;
    }
  }
  return result;
}

BOOL _s13HomeDataModel24PhoenixMetricsAggregatorC11IntervalKeyV2eeoiySbAE_AEtFZ_0(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (v5 = sub_251F36B10(), BOOL result = 0, (v5 & 1) != 0))
  {
    uint64_t v7 = type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0);
    uint64_t v8 = (uint64_t)a1 + *(int *)(v7 + 20);
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    v30[3] = v30;
    uint64_t v10 = *(void *)(*(void *)(v9 - 8) + 64);
    MEMORY[0x270FA5388](v9 - 8);
    unint64_t v11 = (v10 + 15) & 0xFFFFFFFFFFFFFFF0;
    char v12 = (char *)v30 - v11;
    sub_251A1E280(v8, (uint64_t)v30 - v11);
    v30[2] = v30;
    uint64_t v13 = MEMORY[0x270FA5388]((char *)a2 + *(int *)(v7 + 20));
    long long v14 = (char *)v30 - v11;
    sub_251A1E280(v13, (uint64_t)v30 - v11);
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E6B8);
    v30[1] = v30;
    uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
    int64_t v18 = (char *)v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v19 = (uint64_t)&v18[*(int *)(v16 + 56)];
    sub_251A1E280((uint64_t)v30 - v11, (uint64_t)v18);
    sub_251A1E280((uint64_t)v30 - v11, v19);
    uint64_t v20 = sub_251F34DA0();
    uint64_t v21 = *(void *)(v20 - 8);
    uint64_t v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
    uint64_t v23 = v22(v18, 1, v20);
    if (v23 == 1)
    {
      sub_251A1B064((uint64_t)v30 - v11, &qword_26B21FF90);
      sub_251A1B064((uint64_t)v30 - v11, &qword_26B21FF90);
      if (v22((char *)v19, 1, v20) == 1)
      {
        sub_251A1B064((uint64_t)v18, &qword_26B21FF90);
        return 1;
      }
    }
    else
    {
      v30[0] = v30;
      MEMORY[0x270FA5388](v23);
      unint64_t v24 = (char *)v30 - v11;
      sub_251A1E280((uint64_t)v18, (uint64_t)v30 - v11);
      uint64_t v25 = v22((char *)v19, 1, v20);
      if (v25 != 1)
      {
        MEMORY[0x270FA5388](v25);
        uint64_t v27 = (char *)v30 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, uint64_t, uint64_t))(v21 + 32))(v27, v19, v20);
        sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
        char v28 = sub_251F35650();
        uint64_t v29 = *(void (**)(char *, uint64_t))(v21 + 8);
        v29(v27, v20);
        sub_251A1B064((uint64_t)v14, &qword_26B21FF90);
        sub_251A1B064((uint64_t)v12, &qword_26B21FF90);
        v29(v24, v20);
        sub_251A1B064((uint64_t)v18, &qword_26B21FF90);
        return (v28 & 1) != 0;
      }
      sub_251A1B064((uint64_t)v30 - v11, &qword_26B21FF90);
      sub_251A1B064((uint64_t)v30 - v11, &qword_26B21FF90);
      (*(void (**)(char *, uint64_t))(v21 + 8))((char *)v30 - v11, v20);
    }
    sub_251A1B064((uint64_t)v18, &qword_26B21E6B8);
    return 0;
  }
  return result;
}

unint64_t sub_251A23F88()
{
  unint64_t result = qword_26B21E3A8;
  if (!qword_26B21E3A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B21E3A8);
  }
  return result;
}

uint64_t type metadata accessor for PhoenixMetricsAggregator.OpenInterval(uint64_t a1)
{
  return sub_251A1C6FC(a1, (uint64_t *)&unk_26B21E3E0);
}

unint64_t sub_251A23FFC()
{
  unint64_t result = qword_26B21FD50;
  if (!qword_26B21FD50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B21FD50);
  }
  return result;
}

unint64_t sub_251A24050()
{
  unint64_t result = qword_269B9CCD8;
  if (!qword_269B9CCD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9CCD8);
  }
  return result;
}

uint64_t sub_251A240A4()
{
  return sub_251A240EC(&qword_26B21E3D8, (void (*)(uint64_t))type metadata accessor for PhoenixMetricsAggregator.IntervalKey);
}

uint64_t sub_251A240EC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_251A24134()
{
  return sub_251A240EC(&qword_269B9CCE0, (void (*)(uint64_t))type metadata accessor for PhoenixMetricsAggregator.OpenInterval);
}

unint64_t sub_251A2417C(uint64_t a1)
{
  unint64_t result = sub_251A241A4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_251A241A4()
{
  unint64_t result = qword_269B9CCE8;
  if (!qword_269B9CCE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9CCE8);
  }
  return result;
}

uint64_t *_s11IntervalKeyVwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *unint64_t v3 = *a2;
    unint64_t v3 = (uint64_t *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_251F34DA0();
    uint64_t v10 = *(void *)(v9 - 8);
    unint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v3;
}

uint64_t _s11IntervalKeyVwxx(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_251F34DA0();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

void *_s11IntervalKeyVwcp(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_251F34DA0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  swift_bridgeObjectRetain();
  if (v10(v7, 1, v8))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(v6, v7, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

void *_s11IntervalKeyVwca(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_251F34DA0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

_OWORD *_s11IntervalKeyVwtk(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_251F34DA0();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

void *_s11IntervalKeyVwta(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_251F34DA0();
  uint64_t v11 = *(void *)(v10 - 8);
  int v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t _s11IntervalKeyVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251A249A8);
}

uint64_t sub_251A249A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t _s11IntervalKeyVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251A24A70);
}

uint64_t sub_251A24A70(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_251A24B1C()
{
  sub_251A24BB4();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_251A24BB4()
{
  if (!qword_26B21FF98)
  {
    sub_251F34DA0();
    unint64_t v0 = sub_251F36190();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B21FF98);
    }
  }
}

uint64_t *_s12OpenIntervalVwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0) + 20);
    uint64_t v9 = (char *)v4 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_251F34DA0();
    uint64_t v12 = *(void *)(v11 - 8);
    int v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = *(int *)(a3 + 20);
    uint64_t v17 = (char *)v4 + v16;
    int64_t v18 = (char *)a2 + v16;
    uint64_t v19 = sub_251F365B0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return v4;
}

uint64_t _s12OpenIntervalVwxx(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0) + 20);
  uint64_t v5 = sub_251F34DA0();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 20);
  uint64_t v8 = sub_251F365B0();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);

  return v9(v7, v8);
}

void *_s12OpenIntervalVwcp(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0) + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_251F34DA0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = *(int *)(a3 + 20);
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = sub_251F365B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  return a1;
}

void *_s12OpenIntervalVwca(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0) + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_251F34DA0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 20);
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = sub_251F365B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

_OWORD *_s12OpenIntervalVwtk(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0) + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_251F34DA0();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = *(int *)(a3 + 20);
  int v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_251F365B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  return a1;
}

void *_s12OpenIntervalVwta(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0) + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_251F34DA0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  uint64_t v16 = *(int *)(a3 + 20);
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = sub_251F365B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 40))(v17, v18, v19);
  return a1;
}

uint64_t _s12OpenIntervalVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_5Tm);
}

uint64_t _s12OpenIntervalVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_6Tm);
}

uint64_t sub_251A255E4()
{
  uint64_t result = type metadata accessor for PhoenixMetricsAggregator.IntervalKey(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_251F365B0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for IconTextValueStringDataHolder.AttachedData(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t _s34HighSnapshotActivityAnalyticsEventVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t _s34HighSnapshotActivityAnalyticsEventVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  uint64_t v5 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s34HighSnapshotActivityAnalyticsEventVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v4 = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 48) = v4;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy112_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t _s34HighSnapshotActivityAnalyticsEventVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  uint64_t v6 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s34HighSnapshotActivityAnalyticsEventVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 112)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s34HighSnapshotActivityAnalyticsEventVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 112) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 112) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PhoenixMetricsAggregator.HighSnapshotActivityAnalyticsEvent()
{
  return &type metadata for PhoenixMetricsAggregator.HighSnapshotActivityAnalyticsEvent;
}

uint64_t _s5BatchVwxx()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s5BatchVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s5BatchVwca(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

_OWORD *_s5BatchVwta(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s5BatchVwet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s5BatchVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s5BatchVMa()
{
  return &_s5BatchVN;
}

char *sub_251A25B94(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (char *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = (char *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0) + 20);
    uint64_t v9 = &v4[v8];
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_251F34DA0();
    uint64_t v12 = *(void *)(v11 - 8);
    int v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = *(int *)(a3 + 20);
    uint64_t v17 = &v4[v16];
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = sub_251F365B0();
    uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
    v20(v17, v18, v19);
    v20(&v4[*(int *)(a3 + 24)], (char *)a2 + *(int *)(a3 + 24), v19);
  }
  return v4;
}

uint64_t sub_251A25D88(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0) + 20);
  uint64_t v5 = sub_251F34DA0();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 20);
  uint64_t v8 = sub_251F365B0();
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v11)((void *)(v8 - 8), v7, v8);
  uint64_t v9 = a1 + *(int *)(a2 + 24);

  return v11(v9, v8);
}

char *sub_251A25EC4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  uint64_t v7 = *(int *)(type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0) + 20);
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = sub_251F34DA0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = *(int *)(a3 + 20);
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  uint64_t v17 = sub_251F365B0();
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
  v18(v15, v16, v17);
  v18(&a1[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v17);
  return a1;
}

char *sub_251A26068(char *a1, char *a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = *((void *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0) + 20);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_251F34DA0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 20);
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = sub_251F365B0();
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 24);
  v19(v16, v17, v18);
  v19(&a1[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v18);
  return a1;
}

char *sub_251A26278(char *a1, char *a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = *(int *)(type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0) + 20);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_251F34DA0();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = *(int *)(a3 + 20);
  int v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_251F365B0();
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32);
  v16(v13, v14, v15);
  v16(&a1[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v15);
  return a1;
}

char *sub_251A2640C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0) + 20);
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = sub_251F34DA0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  uint64_t v16 = *(int *)(a3 + 20);
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v19 = sub_251F365B0();
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 40);
  v20(v17, v18, v19);
  v20(&a1[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v19);
  return a1;
}

uint64_t sub_251A2660C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251A26620);
}

uint64_t __swift_get_extra_inhabitant_index_5Tm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_251F365B0();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_251A2671C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251A26730);
}

uint64_t __swift_store_extra_inhabitant_index_6Tm(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_251F365B0();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t _s8IntervalVMa(uint64_t a1)
{
  return sub_251A1C6FC(a1, (uint64_t *)&unk_26B21FEA8);
}

uint64_t sub_251A26858()
{
  uint64_t result = type metadata accessor for PhoenixMetricsAggregator.IntervalKey(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_251F365B0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t _s34HighSnapshotActivityAnalyticsEventV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s34HighSnapshotActivityAnalyticsEventV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *uint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251A26A7CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

uint64_t sub_251A26AA4(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_251A26AAC(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

ValueMetadata *_s34HighSnapshotActivityAnalyticsEventV10CodingKeysOMa()
{
  return &_s34HighSnapshotActivityAnalyticsEventV10CodingKeysON;
}

unsigned char *sub_251A26ACC(unsigned char *result, char a2)
{
  *uint64_t result = a2 & 1;
  return result;
}

ValueMetadata *_s11IntervalKeyV10CodingKeysOMa()
{
  return &_s11IntervalKeyV10CodingKeysON;
}

unint64_t sub_251A26AEC()
{
  unint64_t result = qword_269B9CCF0;
  if (!qword_269B9CCF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9CCF0);
  }
  return result;
}

unint64_t sub_251A26B44()
{
  unint64_t result = qword_269B9CCF8;
  if (!qword_269B9CCF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9CCF8);
  }
  return result;
}

uint64_t sub_251A26B98()
{
  return sub_251A240EC(&qword_269B9CD00, (void (*)(uint64_t))_s8IntervalVMa);
}

unint64_t sub_251A26BE4()
{
  unint64_t result = qword_269B9CD08;
  if (!qword_269B9CD08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9CD08);
  }
  return result;
}

unint64_t sub_251A26C3C()
{
  unint64_t result = qword_269B9CD10;
  if (!qword_269B9CD10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9CD10);
  }
  return result;
}

unint64_t sub_251A26C94()
{
  unint64_t result = qword_26B21E3B8;
  if (!qword_26B21E3B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B21E3B8);
  }
  return result;
}

unint64_t sub_251A26CEC()
{
  unint64_t result = qword_26B21E3B0;
  if (!qword_26B21E3B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B21E3B0);
  }
  return result;
}

uint64_t sub_251A26D40(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6449656D6F68 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_251A26E38(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D614E746E657665 && a2 == 0xE900000000000065;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x72506E69616D6F64 && a2 == 0xEC00000078696665 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000251F68070 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000251F68090 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7370616E5378616DLL && a2 == 0xEF656D6954746F68 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x8000000251F680B0 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x664F7265626D756ELL && a2 == 0xED000073656D6F48 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000251F680D0 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000251F680F0 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x4E737365636F7270 && a2 == 0xEB00000000656D61)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 9;
    }
    else {
      return 10;
    }
  }
}

uint64_t sub_251A2729C(uint64_t a1)
{
  return a1;
}

uint64_t sub_251A272C8(uint64_t a1)
{
  return a1;
}

unint64_t sub_251A272F4()
{
  unint64_t result = qword_26B21E410;
  if (!qword_26B21E410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B21E410);
  }
  return result;
}

unint64_t sub_251A27348()
{
  unint64_t result = qword_269B9CD18;
  if (!qword_269B9CD18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9CD18);
  }
  return result;
}

uint64_t sub_251A2739C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 7955819 && a2 == 0xE300000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7363697274656DLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_251A27480@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = a1;
  uint64_t v3 = sub_251A2126C(a1);
  sub_251D9C59C(v3, (uint64_t)v118);
  swift_bridgeObjectRelease();
  uint64_t v102 = v118[0];
  uint64_t v4 = v118[1];
  uint64_t v5 = v118[2];
  uint64_t v6 = v118[3];
  uint64_t v7 = v118[4];
  uint64_t v8 = v118[5];
  uint64_t v105 = *(void *)(v2 + 16);
  if (!v105)
  {
    swift_bridgeObjectRelease();
    uint64_t v100 = 0;
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v12 = (void *)MEMORY[0x263F8EE80];
LABEL_80:
    sub_251A27C7C(v100);
    sub_251A27C7C(v9);
    uint64_t result = sub_251A27C7C((uint64_t)v10);
    *a2 = v102;
    a2[1] = v4;
    a2[2] = v5;
    a2[3] = v6;
    a2[4] = v7;
    a2[5] = v8;
    a2[6] = v12;
    return result;
  }
  v107 = 0;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  unint64_t v11 = 0;
  uint64_t v12 = (void *)MEMORY[0x263F8EE80];
  uint64_t v106 = v2 + 32;
  uint64_t v104 = v2;
LABEL_4:
  if (v11 < *(void *)(v2 + 16))
  {
    unint64_t v108 = v11;
    v110 = (void (*)(void *@<X8>))v9;
    uint64_t v13 = (void *)(v106 + 16 * v11);
    uint64_t v15 = *v13;
    uint64_t v14 = v13[1];
    uint64_t v16 = *(void *)(*v13 + 16);
    v114 = v10;
    uint64_t v116 = v14;
    if (v16)
    {
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      uint64_t v17 = v15 + 48;
      uint64_t v18 = MEMORY[0x263F8EE80];
      uint64_t v19 = v107;
      while (1)
      {
        uint64_t v20 = sub_251F36430();
        uint64_t v22 = v21;
        sub_251A27C7C((uint64_t)v19);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v25 = sub_2519FE798(v20, v22);
        uint64_t v26 = *(void *)(v18 + 16);
        BOOL v27 = (v24 & 1) == 0;
        uint64_t v28 = v26 + v27;
        if (__OFADD__(v26, v27)) {
          break;
        }
        char v29 = v24;
        if (*(void *)(v18 + 24) >= v28)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            sub_251A12E00();
          }
        }
        else
        {
          sub_251A02D88(v28, isUniquelyReferenced_nonNull_native);
          unint64_t v30 = sub_2519FE798(v20, v22);
          if ((v29 & 1) != (v31 & 1)) {
            goto LABEL_92;
          }
          unint64_t v25 = v30;
        }
        swift_bridgeObjectRelease();
        if ((v29 & 1) == 0)
        {
          *(void *)(v18 + 8 * (v25 >> 6) + 64) |= 1 << v25;
          uint64_t v32 = (uint64_t *)(*(void *)(v18 + 48) + 16 * v25);
          *uint64_t v32 = v20;
          v32[1] = v22;
          uint64_t v33 = (void *)(*(void *)(v18 + 56) + 16 * v25);
          *uint64_t v33 = 0;
          v33[1] = 0;
          uint64_t v34 = *(void *)(v18 + 16);
          uint64_t v35 = v34 + 1;
          BOOL v36 = __OFADD__(v34, 1);
          swift_bridgeObjectRetain();
          if (v36) {
            goto LABEL_88;
          }
          *(void *)(v18 + 16) = v35;
        }
        swift_bridgeObjectRetain();
        uint64_t v37 = *(void *)(v18 + 56);
        swift_bridgeObjectRelease();
        uint64_t v38 = (void *)(v37 + 16 * v25);
        if (__OFADD__(*v38, 1)) {
          goto LABEL_84;
        }
        v17 += 24;
        ++*v38;
        swift_bridgeObjectRelease();
        uint64_t v19 = sub_251A22E00;
        if (!--v16)
        {
          swift_bridgeObjectRelease_n();
          uint64_t v39 = sub_251A22E00;
          uint64_t v14 = v116;
          goto LABEL_23;
        }
      }
LABEL_83:
      __break(1u);
LABEL_84:
      __break(1u);
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v18 = MEMORY[0x263F8EE80];
      uint64_t v39 = v107;
LABEL_23:
      v107 = v39;
      uint64_t v40 = *(void *)(v14 + 16);
      if (!v40)
      {
        uint64_t v42 = v110;
LABEL_41:
        unint64_t v109 = v108 + 1;
        v111 = v42;
        swift_bridgeObjectRelease();
        int64_t v65 = 0;
        uint64_t v112 = v18 + 64;
        uint64_t v66 = 1 << *(unsigned char *)(v18 + 32);
        if (v66 < 64) {
          uint64_t v67 = ~(-1 << v66);
        }
        else {
          uint64_t v67 = -1;
        }
        unint64_t v68 = v67 & *(void *)(v18 + 64);
        int64_t v113 = (unint64_t)(v66 + 63) >> 6;
        uint64_t v10 = v114;
        if (v68)
        {
LABEL_45:
          uint64_t v115 = (v68 - 1) & v68;
          int64_t v117 = v65;
          unint64_t v69 = __clz(__rbit64(v68)) | (v65 << 6);
          goto LABEL_60;
        }
        while (1)
        {
          int64_t v70 = v65 + 1;
          if (__OFADD__(v65, 1)) {
            break;
          }
          if (v70 >= v113) {
            goto LABEL_3;
          }
          unint64_t v71 = *(void *)(v112 + 8 * v70);
          int64_t v72 = v65 + 1;
          if (!v71)
          {
            int64_t v72 = v65 + 2;
            if (v65 + 2 >= v113) {
              goto LABEL_3;
            }
            unint64_t v71 = *(void *)(v112 + 8 * v72);
            if (!v71)
            {
              int64_t v72 = v65 + 3;
              if (v65 + 3 >= v113) {
                goto LABEL_3;
              }
              unint64_t v71 = *(void *)(v112 + 8 * v72);
              if (!v71)
              {
                uint64_t v73 = v65 + 4;
                if (v65 + 4 >= v113)
                {
LABEL_3:
                  swift_release();
                  uint64_t v2 = v104;
                  unint64_t v11 = v109;
                  uint64_t v9 = (uint64_t)v111;
                  if (v109 != v105) {
                    goto LABEL_4;
                  }
                  swift_bridgeObjectRelease();
                  uint64_t v100 = (uint64_t)v107;
                  goto LABEL_80;
                }
                unint64_t v71 = *(void *)(v112 + 8 * v73);
                if (!v71)
                {
                  while (1)
                  {
                    int64_t v72 = v73 + 1;
                    if (__OFADD__(v73, 1)) {
                      goto LABEL_90;
                    }
                    if (v72 >= v113) {
                      goto LABEL_3;
                    }
                    unint64_t v71 = *(void *)(v112 + 8 * v72);
                    ++v73;
                    if (v71) {
                      goto LABEL_59;
                    }
                  }
                }
                int64_t v72 = v65 + 4;
              }
            }
          }
LABEL_59:
          uint64_t v115 = (v71 - 1) & v71;
          int64_t v117 = v72;
          unint64_t v69 = __clz(__rbit64(v71)) + (v72 << 6);
LABEL_60:
          uint64_t v74 = 16 * v69;
          uint64_t v75 = (uint64_t *)(*(void *)(v18 + 48) + v74);
          uint64_t v76 = *v75;
          uint64_t v77 = v75[1];
          uint64_t v78 = (uint64_t *)(*(void *)(v18 + 56) + v74);
          uint64_t v80 = *v78;
          uint64_t v79 = v78[1];
          swift_bridgeObjectRetain();
          sub_251A27C7C((uint64_t)v10);
          char v81 = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v83 = sub_2519FE798(v76, v77);
          uint64_t v84 = v12[2];
          BOOL v85 = (v82 & 1) == 0;
          uint64_t v86 = v84 + v85;
          if (__OFADD__(v84, v85))
          {
            __break(1u);
LABEL_82:
            __break(1u);
            goto LABEL_83;
          }
          char v87 = v82;
          if (v12[3] >= v86)
          {
            if ((v81 & 1) == 0) {
              sub_251A12DF4();
            }
          }
          else
          {
            sub_251A02D7C(v86, v81);
            unint64_t v88 = sub_2519FE798(v76, v77);
            if ((v87 & 1) != (v89 & 1)) {
              goto LABEL_92;
            }
            unint64_t v83 = v88;
          }
          swift_bridgeObjectRelease();
          if ((v87 & 1) == 0)
          {
            v12[(v83 >> 6) + 8] |= 1 << v83;
            long long v90 = (uint64_t *)(v12[6] + 16 * v83);
            *long long v90 = v76;
            v90[1] = v77;
            *(void *)(v12[7] + 8 * v83) = MEMORY[0x263F8EE78];
            uint64_t v91 = v12[2];
            uint64_t v92 = v91 + 1;
            BOOL v93 = __OFADD__(v91, 1);
            swift_bridgeObjectRetain();
            if (v93) {
              goto LABEL_82;
            }
            void v12[2] = v92;
          }
          swift_bridgeObjectRetain();
          uint64_t v94 = v12[7];
          swift_bridgeObjectRelease();
          Swift::Int_optional v95 = *(void **)(v94 + 8 * v83);
          char v96 = swift_isUniquelyReferenced_nonNull_native();
          *(void *)(v94 + 8 * v83) = v95;
          if ((v96 & 1) == 0)
          {
            Swift::Int_optional v95 = sub_251F0F8A8(0, v95[2] + 1, 1, v95);
            *(void *)(v94 + 8 * v83) = v95;
          }
          unint64_t v98 = v95[2];
          unint64_t v97 = v95[3];
          if (v98 >= v97 >> 1)
          {
            Swift::Int_optional v95 = sub_251F0F8A8((void *)(v97 > 1), v98 + 1, 1, v95);
            *(void *)(v94 + 8 * v83) = v95;
          }
          v95[2] = v98 + 1;
          v99 = &v95[2 * v98];
          v99[4] = v80;
          v99[5] = v79;
          swift_bridgeObjectRelease();
          uint64_t v10 = sub_251A22E08;
          unint64_t v68 = v115;
          int64_t v65 = v117;
          if (v115) {
            goto LABEL_45;
          }
        }
LABEL_87:
        __break(1u);
LABEL_88:
        __break(1u);
LABEL_89:
        __break(1u);
LABEL_90:
        __break(1u);
        goto LABEL_91;
      }
      uint64_t v41 = v14 + 48;
      uint64_t v42 = v110;
      while (1)
      {
        uint64_t v43 = sub_251F36430();
        uint64_t v45 = v44;
        sub_251A27C7C((uint64_t)v42);
        char v46 = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v48 = sub_2519FE798(v43, v45);
        uint64_t v49 = *(void *)(v18 + 16);
        BOOL v50 = (v47 & 1) == 0;
        uint64_t v51 = v49 + v50;
        if (__OFADD__(v49, v50)) {
          break;
        }
        char v52 = v47;
        if (*(void *)(v18 + 24) >= v51)
        {
          if ((v46 & 1) == 0) {
            sub_251A12E00();
          }
        }
        else
        {
          sub_251A02D88(v51, v46);
          unint64_t v53 = sub_2519FE798(v43, v45);
          if ((v52 & 1) != (v54 & 1)) {
            goto LABEL_92;
          }
          unint64_t v48 = v53;
        }
        swift_bridgeObjectRelease();
        if ((v52 & 1) == 0)
        {
          *(void *)(v18 + 8 * (v48 >> 6) + 64) |= 1 << v48;
          uint64_t v55 = (uint64_t *)(*(void *)(v18 + 48) + 16 * v48);
          *uint64_t v55 = v43;
          v55[1] = v45;
          uint64_t v56 = (void *)(*(void *)(v18 + 56) + 16 * v48);
          *uint64_t v56 = 0;
          v56[1] = 0;
          uint64_t v57 = *(void *)(v18 + 16);
          uint64_t v58 = v57 + 1;
          BOOL v59 = __OFADD__(v57, 1);
          swift_bridgeObjectRetain();
          if (v59) {
            goto LABEL_89;
          }
          *(void *)(v18 + 16) = v58;
        }
        swift_bridgeObjectRetain();
        uint64_t v60 = *(void *)(v18 + 56);
        swift_bridgeObjectRelease();
        uint64_t v61 = v60 + 16 * v48;
        uint64_t v63 = *(void *)(v61 + 8);
        uint64_t v62 = (void *)(v61 + 8);
        uint64_t v64 = v63 + 1;
        if (__OFADD__(v63, 1)) {
          goto LABEL_86;
        }
        v41 += 24;
        *uint64_t v62 = v64;
        swift_bridgeObjectRelease();
        uint64_t v42 = sub_251A22E00;
        if (!--v40) {
          goto LABEL_41;
        }
      }
    }
    __break(1u);
LABEL_86:
    __break(1u);
    goto LABEL_87;
  }
LABEL_91:
  __break(1u);
LABEL_92:
  uint64_t result = sub_251F36BA0();
  __break(1u);
  return result;
}

uint64_t sub_251A27C7C(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

unint64_t sub_251A27C8C()
{
  unint64_t result = qword_26B21F2D0;
  if (!qword_26B21F2D0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B21F2D0);
  }
  return result;
}

uint64_t _s5BatchV11AggregationV5CountVwet(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t _s5BatchV11AggregationV5CountVwst(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)unint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

ValueMetadata *_s5BatchV11AggregationV5CountVMa()
{
  return &_s5BatchV11AggregationV5CountVN;
}

uint64_t _s5BatchV11AggregationVwxx()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s5BatchV11AggregationVwcp(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  return a1;
}

void *_s5BatchV11AggregationVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s5BatchV11AggregationVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s5BatchV11AggregationVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s5BatchV11AggregationVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s5BatchV11AggregationVMa()
{
  return &_s5BatchV11AggregationVN;
}

uint64_t _s5ErrorOwet(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *_s5ErrorOwst(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x251A27FE0);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_251A28008()
{
  return 0;
}

ValueMetadata *_s5ErrorOMa()
{
  return &_s5ErrorON;
}

uint64_t *sub_251A28020(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0) + 20);
    uint64_t v9 = (char *)v4 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_251F34DA0();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = *(int *)(a3 + 20);
    uint64_t v17 = (char *)v4 + v16;
    uint64_t v18 = (char *)a2 + v16;
    long long v19 = *((_OWORD *)v18 + 3);
    *((_OWORD *)v17 + 2) = *((_OWORD *)v18 + 2);
    *((_OWORD *)v17 + 3) = v19;
    *((_OWORD *)v17 + 4) = *((_OWORD *)v18 + 4);
    *((void *)v17 + 10) = *((void *)v18 + 10);
    long long v20 = *((_OWORD *)v18 + 1);
    *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
    *((_OWORD *)v17 + 1) = v20;
  }
  return v4;
}

uint64_t sub_251A281D8(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = a1 + *(int *)(type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0) + 20);
  uint64_t v3 = sub_251F34DA0();
  uint64_t v6 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v3);
  if (!result)
  {
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    return v5(v2, v3);
  }
  return result;
}

void *sub_251A282AC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0) + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_251F34DA0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = *(int *)(a3 + 20);
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  long long v17 = *((_OWORD *)v16 + 3);
  *((_OWORD *)v15 + 2) = *((_OWORD *)v16 + 2);
  *((_OWORD *)v15 + 3) = v17;
  *((_OWORD *)v15 + 4) = *((_OWORD *)v16 + 4);
  *((void *)v15 + 10) = *((void *)v16 + 10);
  long long v18 = *((_OWORD *)v16 + 1);
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  *((_OWORD *)v15 + 1) = v18;
  return a1;
}

void *sub_251A28414(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0) + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_251F34DA0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 20);
  uint64_t v16 = (void *)((char *)a1 + v15);
  long long v17 = (void *)((char *)a2 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  void v16[2] = v17[2];
  v16[3] = v17[3];
  v16[4] = v17[4];
  v16[5] = v17[5];
  v16[6] = v17[6];
  v16[7] = v17[7];
  v16[8] = v17[8];
  v16[9] = v17[9];
  v16[10] = v17[10];
  return a1;
}

_OWORD *sub_251A28620(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0) + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_251F34DA0();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = *(int *)(a3 + 20);
  int v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  long long v15 = *((_OWORD *)v14 + 3);
  *((_OWORD *)v13 + 2) = *((_OWORD *)v14 + 2);
  *((_OWORD *)v13 + 3) = v15;
  *((_OWORD *)v13 + 4) = *((_OWORD *)v14 + 4);
  *((void *)v13 + 10) = *((void *)v14 + 10);
  long long v16 = *((_OWORD *)v14 + 1);
  *(_OWORD *)int v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = v16;
  return a1;
}

void *sub_251A28778(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0) + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_251F34DA0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  uint64_t v16 = *(int *)(a3 + 20);
  long long v17 = (char *)a1 + v16;
  long long v18 = (char *)a2 + v16;
  long long v19 = *((_OWORD *)v18 + 1);
  *(_OWORD *)long long v17 = *(_OWORD *)v18;
  *((_OWORD *)v17 + 1) = v19;
  long long v20 = *((_OWORD *)v18 + 3);
  *((_OWORD *)v17 + 2) = *((_OWORD *)v18 + 2);
  *((_OWORD *)v17 + 3) = v20;
  *((_OWORD *)v17 + 4) = *((_OWORD *)v18 + 4);
  *((void *)v17 + 10) = *((void *)v18 + 10);
  return a1;
}

uint64_t sub_251A2893C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251A28950);
}

uint64_t sub_251A28950(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_251A289BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251A289D0);
}

uint64_t sub_251A289D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t _s8IntervalV11AggregationVMa(uint64_t a1)
{
  return sub_251A1C6FC(a1, (uint64_t *)&unk_26B21E438);
}

uint64_t sub_251A28A60()
{
  uint64_t result = type metadata accessor for PhoenixMetricsAggregator.IntervalKey(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_251A28AF4()
{
  return sub_251A240EC(&qword_269B9CD20, (void (*)(uint64_t))_s8IntervalV11AggregationVMa);
}

unint64_t sub_251A28B40()
{
  unint64_t result = qword_269B9CD28;
  if (!qword_269B9CD28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9CD28);
  }
  return result;
}

unint64_t sub_251A28B94()
{
  unint64_t result = qword_26B21E418;
  if (!qword_26B21E418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B21E418);
  }
  return result;
}

unint64_t sub_251A28BE8()
{
  unint64_t result = qword_26B21E3F0;
  if (!qword_26B21E3F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B21E3F0);
  }
  return result;
}

unint64_t sub_251A28C3C()
{
  unint64_t result = qword_26B21E468[0];
  if (!qword_26B21E468[0])
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B21E460);
    sub_251A2922C(&qword_26B21E5A8, (void (*)(void))sub_251A28CE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26B21E468);
  }
  return result;
}

unint64_t sub_251A28CE8()
{
  unint64_t result = qword_26B21E408;
  if (!qword_26B21E408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B21E408);
  }
  return result;
}

uint64_t sub_251A28D3C(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CD30);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v7);
  sub_251A28EE0();
  sub_251F36D90();
  if (!v1)
  {
    v9[15] = 0;
    uint64_t v7 = sub_251F36860();
    v9[14] = 1;
    sub_251F36860();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v7;
}

unint64_t sub_251A28EE0()
{
  unint64_t result = qword_269B9CD38;
  if (!qword_269B9CD38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9CD38);
  }
  return result;
}

uint64_t sub_251A28F34@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CD48);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251A28BE8();
  sub_251F36D90();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E578);
  char v18 = 0;
  sub_251A1E590(&qword_269B9CD50, &qword_26B21E578);
  sub_251F36880();
  uint64_t v9 = v19;
  uint64_t v10 = v20;
  uint64_t v11 = v21;
  uint64_t v12 = v22;
  uint64_t v13 = v23;
  uint64_t v14 = v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E460);
  char v18 = 1;
  sub_251A29180();
  sub_251F36880();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v15 = v19;
  uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  *a2 = v9;
  a2[1] = v10;
  a2[2] = v11;
  a2[3] = v12;
  a2[4] = v13;
  a2[5] = v14;
  a2[6] = v15;
  return result;
}

unint64_t sub_251A29180()
{
  unint64_t result = qword_269B9CD58;
  if (!qword_269B9CD58)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B21E460);
    sub_251A2922C(&qword_269B9CD60, (void (*)(void))sub_251A2929C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9CD58);
  }
  return result;
}

uint64_t sub_251A2922C(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B21E5A0);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_251A2929C()
{
  unint64_t result = qword_269B9CD68;
  if (!qword_269B9CD68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9CD68);
  }
  return result;
}

uint64_t sub_251A292F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_251A29354(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_251A293BC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

ValueMetadata *_s5BatchV11AggregationV5CountV10CodingKeysOMa()
{
  return &_s5BatchV11AggregationV5CountV10CodingKeysON;
}

ValueMetadata *_s5BatchV11AggregationV10CodingKeysOMa()
{
  return &_s5BatchV11AggregationV10CodingKeysON;
}

uint64_t _s9TimeEventO15SignificantTimeOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s11IntervalKeyV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251A29598);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s8IntervalV11AggregationV10CodingKeysOMa()
{
  return &_s8IntervalV11AggregationV10CodingKeysON;
}

unint64_t sub_251A295D4()
{
  unint64_t result = qword_269B9CD88;
  if (!qword_269B9CD88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9CD88);
  }
  return result;
}

unint64_t sub_251A2962C()
{
  unint64_t result = qword_269B9CD90;
  if (!qword_269B9CD90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9CD90);
  }
  return result;
}

unint64_t sub_251A29684()
{
  unint64_t result = qword_269B9CD98;
  if (!qword_269B9CD98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9CD98);
  }
  return result;
}

unint64_t sub_251A296DC()
{
  unint64_t result = qword_269B9CDA0;
  if (!qword_269B9CDA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9CDA0);
  }
  return result;
}

unint64_t sub_251A29734()
{
  unint64_t result = qword_269B9CDA8;
  if (!qword_269B9CDA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9CDA8);
  }
  return result;
}

unint64_t sub_251A2978C()
{
  unint64_t result = qword_26B21E400;
  if (!qword_26B21E400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B21E400);
  }
  return result;
}

unint64_t sub_251A297E4()
{
  unint64_t result = qword_26B21E3F8;
  if (!qword_26B21E3F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B21E3F8);
  }
  return result;
}

unint64_t sub_251A2983C()
{
  unint64_t result = qword_26B21E428;
  if (!qword_26B21E428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B21E428);
  }
  return result;
}

unint64_t sub_251A29894()
{
  unint64_t result = qword_26B21E420;
  if (!qword_26B21E420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B21E420);
  }
  return result;
}

Swift::Bool __swiftcall HMHome.shouldShowNoAccessOutsideOfSchedule(forRestrictedUser:)(HMUser forRestrictedUser)
{
  int v2 = v1;
  id v4 = objc_msgSend(v1, sel_homeAccessControlForUser_, forRestrictedUser.super.isa);
  id v5 = objc_msgSend(v4, sel_restrictedGuestAccessSettings);
  if (!v5)
  {
    if (qword_269B9C340 != -1) {
      swift_once();
    }
    uint64_t v55 = sub_251F350A0();
    __swift_project_value_buffer(v55, (uint64_t)qword_269B9FF90);
    uint64_t v56 = forRestrictedUser.super.isa;
    id v57 = v4;
    uint64_t v58 = v56;
    id v59 = v57;
    uint64_t v60 = sub_251F35080();
    os_log_type_t v61 = sub_251F35FD0();
    if (os_log_type_enabled(v60, v61))
    {
      uint64_t v62 = swift_slowAlloc();
      unint64_t v98 = (void *)swift_slowAlloc();
      v99 = (void *)swift_slowAlloc();
      v101 = v99;
      *(_DWORD *)uint64_t v62 = 136315650;
      sub_251A00E84(0xD000000000000037, 0x8000000251F68160, (uint64_t *)&v101);
      sub_251F361D0();
      *(_WORD *)(v62 + 12) = 2080;
      id v63 = [(objc_class *)v58 name];
      uint64_t v64 = sub_251F356F0();
      unint64_t v66 = v65;

      sub_251A00E84(v64, v66, (uint64_t *)&v101);
      sub_251F361D0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v62 + 22) = 2112;
      uint64_t v100 = (uint64_t)v59;
      id v67 = v59;
      sub_251F361D0();
      unint64_t v68 = v98;
      *unint64_t v98 = v59;

      _os_log_impl(&dword_2519F3000, v60, v61, "%s: user = %s. Returning false because restrictedGuestAccessSettings is nil. accessControl = %@", (uint8_t *)v62, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v68, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v99, -1, -1);
      MEMORY[0x2533AC760](v62, -1, -1);
    }
    else
    {
    }
    goto LABEL_18;
  }
  unsigned int v6 = v5;
  id v7 = objc_msgSend(v5, sel_guestAccessSchedule);
  if (!v7)
  {
    if (qword_269B9C340 != -1) {
      swift_once();
    }
    uint64_t v69 = sub_251F350A0();
    __swift_project_value_buffer(v69, (uint64_t)qword_269B9FF90);
    int64_t v70 = forRestrictedUser.super.isa;
    id v71 = v4;
    id v72 = v6;
    uint64_t v73 = v70;
    id v74 = v71;
    id v75 = v72;
    uint64_t v76 = sub_251F35080();
    os_log_type_t v77 = sub_251F35FD0();
    int v78 = v77;
    if (os_log_type_enabled(v76, v77))
    {
      uint64_t v79 = swift_slowAlloc();
      unint64_t v97 = (void *)swift_slowAlloc();
      unint64_t v98 = (void *)swift_slowAlloc();
      v101 = v98;
      *(_DWORD *)uint64_t v79 = 136315906;
      sub_251A00E84(0xD000000000000037, 0x8000000251F68160, (uint64_t *)&v101);
      sub_251F361D0();
      *(_WORD *)(v79 + 12) = 2080;
      id v80 = [(objc_class *)v73 name];
      v99 = v6;
      uint64_t v81 = sub_251F356F0();
      LODWORD(v96) = v78;
      unint64_t v83 = v82;

      sub_251A00E84(v81, v83, (uint64_t *)&v101);
      sub_251F361D0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v79 + 22) = 2112;
      id v84 = v74;
      sub_251F361D0();
      BOOL v85 = v97;
      *unint64_t v97 = v74;

      *(_WORD *)(v79 + 32) = 2112;
      uint64_t v100 = (uint64_t)v75;
      id v86 = v75;
      sub_251F361D0();
      v85[1] = v99;

      _os_log_impl(&dword_2519F3000, v76, (os_log_type_t)v96, "%s: user = %s. Returning false because rgAccessSchedule is nil. accessControl = %@. rgAccessSettings = %@.", (uint8_t *)v79, 0x2Au);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v85, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v98, -1, -1);
      MEMORY[0x2533AC760](v79, -1, -1);
    }
    else
    {
    }
LABEL_18:
    LOBYTE(v21) = 0;
    return (char)v21;
  }
  id v8 = v7;
  v99 = v6;
  unint64_t v98 = self;
  uint64_t v9 = sub_251F34D20();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v88 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34CF0();
  uint64_t v21 = (void *)sub_251F34C70();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  id v13 = objc_msgSend(v2, sel_timeZone);
  uint64_t v14 = sub_251F34ED0();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v94 = v16;
  uint64_t v17 = (char *)&v88 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34EB0();

  char v18 = (void *)sub_251F34E90();
  uint64_t v19 = *(void (**)(char *, void *))(v15 + 8);
  uint64_t v96 = v15 + 8;
  unint64_t v97 = (void *)v14;
  Swift::Int_optional v95 = v19;
  v19(v17, (void *)v14);
  uint64_t v20 = v8;
  LODWORD(v8) = objc_msgSend(v98, sel_isDate_withinAllowedTimeForSchedule_forHomeInTimeZone_, v21, v8, v18);

  LODWORD(v21) = v8 ^ 1;
  if (qword_269B9C340 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_251F350A0();
  __swift_project_value_buffer(v22, (uint64_t)qword_269B9FF90);
  uint64_t v23 = forRestrictedUser.super.isa;
  id v24 = v4;
  id v25 = v20;
  id v26 = v2;
  BOOL v27 = v23;
  id v28 = v24;
  id v29 = v25;
  id v30 = v26;
  char v31 = sub_251F35080();
  os_log_type_t v32 = sub_251F35FD0();
  int v33 = v32;
  if (os_log_type_enabled(v31, v32))
  {
    uint64_t v34 = swift_slowAlloc();
    BOOL v93 = (void *)swift_slowAlloc();
    uint64_t v92 = swift_slowAlloc();
    v101 = (void *)v92;
    *(_DWORD *)uint64_t v34 = 136316418;
    os_log_t v91 = v31;
    uint64_t v100 = sub_251A00E84(0xD000000000000037, 0x8000000251F68160, (uint64_t *)&v101);
    id v88 = v30;
    sub_251F361D0();
    *(_WORD *)(v34 + 12) = 2080;
    id v35 = [(objc_class *)v27 name];
    LODWORD(v98) = v21;
    id v36 = v35;
    uint64_t v37 = sub_251F356F0();
    int v90 = v33;
    unint64_t v39 = v38;

    uint64_t v100 = sub_251A00E84(v37, v39, (uint64_t *)&v101);
    sub_251F361D0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v34 + 22) = 1024;
    LODWORD(v100) = v98;
    sub_251F361D0();
    *(_WORD *)(v34 + 28) = 2112;
    uint64_t v100 = (uint64_t)v28;
    id v40 = v28;
    id v89 = v40;
    sub_251F361D0();
    uint64_t v41 = v93;
    *BOOL v93 = v28;

    *(_WORD *)(v34 + 38) = 2112;
    uint64_t v100 = (uint64_t)v29;
    id v42 = v29;
    sub_251F361D0();
    v41[1] = v20;

    *(_WORD *)(v34 + 48) = 2080;
    MEMORY[0x270FA5388](v43);
    uint64_t v45 = (char *)&v88 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
    id v46 = v88;
    id v47 = objc_msgSend(v88, sel_timeZone);
    sub_251F34EB0();

    sub_251A2A4CC();
    unint64_t v48 = v97;
    uint64_t v21 = (void *)sub_251F36AB0();
    unint64_t v50 = v49;
    v95(v45, v48);
    uint64_t v51 = (uint64_t)v21;
    LOBYTE(v21) = (_BYTE)v98;
    uint64_t v100 = sub_251A00E84(v51, v50, (uint64_t *)&v101);
    sub_251F361D0();

    swift_bridgeObjectRelease();
    os_log_t v52 = v91;
    _os_log_impl(&dword_2519F3000, v91, (os_log_type_t)v90, "%s: user = %s. Returning %{BOOL}d. accessControl = %@. guestAccessSchedule = %@. timeZone = %s", (uint8_t *)v34, 0x3Au);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
    unint64_t v53 = v93;
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v53, -1, -1);
    uint64_t v54 = v92;
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v54, -1, -1);
    MEMORY[0x2533AC760](v34, -1, -1);
  }
  else
  {
  }
  return (char)v21;
}

unint64_t sub_251A2A4CC()
{
  unint64_t result = qword_269B9CDB0;
  if (!qword_269B9CDB0)
  {
    sub_251F34ED0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9CDB0);
  }
  return result;
}

ValueMetadata *type metadata accessor for MatterSnapshotModerator.LimitedSnapshotController()
{
  return &type metadata for MatterSnapshotModerator.LimitedSnapshotController;
}

uint64_t _s25LimitedSnapshotControllerV11DeviceStateVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s25LimitedSnapshotControllerV11DeviceStateVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s25LimitedSnapshotControllerV11DeviceStateVwca(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t _s25LimitedSnapshotControllerV11DeviceStateVwta(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s25LimitedSnapshotControllerV11DeviceStateVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s25LimitedSnapshotControllerV11DeviceStateVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s25LimitedSnapshotControllerV11DeviceStateVMa()
{
  return &_s25LimitedSnapshotControllerV11DeviceStateVN;
}

uint64_t sub_251A2A734(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = a2;
  uint64_t v38 = sub_251A2BF48(a1, v3, ObjectType, a2);
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  if (!*(void *)(v8 + 16)
    || (unint64_t v12 = sub_2519FE5CC(a3), (v13 & 1) == 0)
    || (uint64_t v14 = *(void *)(*(void *)(v9 + 56) + 8 * v12), !*(void *)(v14 + 16)))
  {
    if (qword_26B21ECD0 != -1) {
      swift_once();
    }
    uint64_t v23 = sub_251F350A0();
    __swift_project_value_buffer(v23, (uint64_t)qword_26B21ECB8);
    swift_unknownObjectRetain();
    id v24 = sub_251F35080();
    os_log_type_t v25 = sub_251F35FD0();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = swift_slowAlloc();
      os_log_t log = (os_log_t)swift_slowAlloc();
      uint64_t v40 = (uint64_t)log;
      *(_DWORD *)uint64_t v26 = 136315650;
      sub_251A00E84(0xD00000000000001DLL, 0x8000000251F681D0, &v40);
      sub_251F361D0();
      *(_WORD *)(v26 + 12) = 512;
      uint64_t v27 = a3;
      sub_251F361D0();
      *(_WORD *)(v26 + 16) = 2048;
      (*(void (**)(uint64_t, uint64_t))(v7 + 16))(ObjectType, v7);
      sub_251F361D0();
      swift_unknownObjectRelease();
      _os_log_impl(&dword_2519F3000, v24, v25, "%s Reading clusterKinds for endpoint:%hu device:%llu", (uint8_t *)v26, 0x1Au);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](log, -1, -1);
      MEMORY[0x2533AC760](v26, -1, -1);
    }
    else
    {

      swift_unknownObjectRelease();
      uint64_t v27 = a3;
    }
    if ((*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(v27, ObjectType, v7))
    {
      uint64_t v29 = v28;
      uint64_t v30 = swift_getObjectType();
      uint64_t v14 = MatterDescriptorCluster.availableClusterKinds.getter(v30, v29);
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v14 = MEMORY[0x263F8EE88];
    }
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v40 = v9;
    sub_251A0D858(v14, v27, isUniquelyReferenced_nonNull_native);
    uint64_t v32 = v40;
    swift_bridgeObjectRelease();
    uint64_t v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 16))(ObjectType, v7);
    char v34 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v40 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_251A0D6F8(v38, v32, v11, v33, v34);
    *uint64_t v3 = v40;
    goto LABEL_17;
  }
  uint64_t v15 = qword_26B21ECD0;
  swift_bridgeObjectRetain();
  if (v15 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_251F350A0();
  __swift_project_value_buffer(v16, (uint64_t)qword_26B21ECB8);
  swift_bridgeObjectRetain_n();
  swift_unknownObjectRetain();
  uint64_t v17 = sub_251F35080();
  os_log_type_t v18 = sub_251F35FD0();
  if (!os_log_type_enabled(v17, v18))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease_n();

LABEL_17:
    swift_bridgeObjectRelease();
    return v14;
  }
  uint64_t v19 = swift_slowAlloc();
  uint64_t v37 = swift_slowAlloc();
  uint64_t v40 = v37;
  *(_DWORD *)uint64_t v19 = 136315906;
  sub_251A00E84(0xD00000000000001DLL, 0x8000000251F681D0, &v40);
  sub_251F361D0();
  *(_WORD *)(v19 + 12) = 512;
  sub_251F361D0();
  *(_WORD *)(v19 + 16) = 2048;
  (*(void (**)(uint64_t, uint64_t))(v7 + 16))(ObjectType, v7);
  sub_251F361D0();
  swift_unknownObjectRelease();
  *(_WORD *)(v19 + 26) = 2080;
  sub_251A2C2DC();
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_251F35E50();
  unint64_t v22 = v21;
  swift_bridgeObjectRelease();
  sub_251A00E84(v20, v22, &v40);
  sub_251F361D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_2519F3000, v17, v18, "%s Using cached clusterKinds value for endpoint:%hu device:%llu: %s", (uint8_t *)v19, 0x24u);
  swift_arrayDestroy();
  MEMORY[0x2533AC760](v37, -1, -1);
  MEMORY[0x2533AC760](v19, -1, -1);

  return v14;
}

uint64_t sub_251A2AD4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)a3;
  __int16 v4 = *(_WORD *)(a3 + 8);
  char v5 = *(unsigned char *)(a3 + 10);
  uint64_t v14 = *(void *)a3;
  __int16 v15 = v4;
  char v16 = v5;
  sub_251A2AF60(a1, a2, (uint64_t)&v14, 0xFFFBu, (uint64_t)&v17);
  if (v20)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CDC0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CDD0);
    if (swift_dynamicCast()) {
      return v14;
    }
  }
  else
  {
    sub_251A1B064((uint64_t)&v17, &qword_269B9CDC8);
  }
  if (qword_26B21ECD0 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_251F350A0();
  __swift_project_value_buffer(v7, (uint64_t)qword_26B21ECB8);
  uint64_t v8 = sub_251F35080();
  os_log_type_t v9 = sub_251F35FB0();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315138;
    uint64_t v14 = v11;
    uint64_t v17 = v3;
    __int16 v18 = v4;
    char v19 = v5;
    uint64_t v12 = ClusterPath.description.getter();
    uint64_t v17 = sub_251A00E84(v12, v13, &v14);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2519F3000, v8, v9, "Failed to get attribute list for cluster %s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v11, -1, -1);
    MEMORY[0x2533AC760](v10, -1, -1);
  }

  return MEMORY[0x263F8EE78];
}

void sub_251A2AF60(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned int a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v57 = *(void *)a3;
  unsigned __int16 v8 = *(_WORD *)(a3 + 8);
  char v9 = *(unsigned char *)(a3 + 10);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v54 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 16);
  uint64_t v11 = v54(ObjectType, a2);
  uint64_t v55 = v5;
  sub_251B7499C(v11, *v5);
  if (!v13) {
    goto LABEL_16;
  }
  uint64_t v14 = v12;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*(void *)(v14 + 16)
    || (unint64_t v15 = sub_2519FE5CC(v8), (v16 & 1) == 0)
    || (uint64_t v17 = *(void *)(*(void *)(v14 + 56) + 8 * v15),
        swift_bridgeObjectRetain(),
        swift_bridgeObjectRelease(),
        !*(void *)(v17 + 16))
    || (unint64_t v18 = sub_2519FE614(v9), (v19 & 1) == 0))
  {
    swift_bridgeObjectRelease();
LABEL_16:
    unsigned __int16 v20 = v8;
    goto LABEL_17;
  }
  unsigned __int16 v20 = v8;
  uint64_t v21 = *(void *)(*(void *)(v17 + 56) + 8 * v18);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (!v21) {
    goto LABEL_17;
  }
  if (!*(void *)(v21 + 16) || (unint64_t v22 = sub_2519FE94C(a4), (v23 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  sub_251A1B128(*(void *)(v21 + 56) + 40 * v22, (uint64_t)&v67, &qword_269B9C970);
  swift_bridgeObjectRelease();
  if (v69 > 0xFDu)
  {
LABEL_17:
    if (qword_26B21ECD0 != -1) {
      swift_once();
    }
    uint64_t v33 = sub_251F350A0();
    __swift_project_value_buffer(v33, (uint64_t)qword_26B21ECB8);
    swift_unknownObjectRetain_n();
    char v34 = sub_251F35080();
    os_log_type_t v35 = sub_251F35FD0();
    if (os_log_type_enabled(v34, v35))
    {
      os_log_type_t v52 = v35;
      uint64_t v36 = swift_slowAlloc();
      uint64_t v53 = swift_slowAlloc();
      *(void *)&v66[0] = v53;
      *(_DWORD *)uint64_t v36 = 136315906;
      *(void *)&long long v67 = sub_251A00E84(0xD000000000000027, 0x8000000251F681A0, (uint64_t *)v66);
      sub_251F361D0();
      *(_WORD *)(v36 + 12) = 2080;
      uint64_t v37 = v57;
      *(void *)&long long v67 = v57;
      WORD4(v67) = v20;
      BYTE10(v67) = v9;
      uint64_t v38 = ClusterPath.description.getter();
      *(void *)&long long v67 = sub_251A00E84(v38, v39, (uint64_t *)v66);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v36 + 22) = 1024;
      LODWORD(v67) = a4;
      sub_251F361D0();
      *(_WORD *)(v36 + 28) = 2048;
      uint64_t v40 = v54(ObjectType, a2);
      swift_unknownObjectRelease();
      *(void *)&long long v67 = v40;
      sub_251F361D0();
      swift_unknownObjectRelease();
      _os_log_impl(&dword_2519F3000, v34, v52, "%s Reading attribute for clusterPath:%s attributeID: %u device:%llu", (uint8_t *)v36, 0x26u);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v53, -1, -1);
      MEMORY[0x2533AC760](v36, -1, -1);
    }
    else
    {

      swift_unknownObjectRelease_n();
      uint64_t v37 = v57;
    }
    *(void *)&long long v67 = v37;
    WORD4(v67) = v20;
    BYTE10(v67) = v9;
    (*(void (**)(_OWORD *__return_ptr, long long *, void, uint64_t, uint64_t))(a2 + 56))(v66, &v67, a4, ObjectType, a2);
    sub_251A1B128((uint64_t)v66, (uint64_t)&v67, &qword_26B21E190);
    if (v68)
    {
      sub_251A0D578(&v67, &v64);
      uint64_t v60 = v37;
      unsigned __int16 v61 = v20;
      char v62 = v9;
      uint64_t v41 = v65;
      id v42 = __swift_project_boxed_opaque_existential_1(&v64, v65);
      uint64_t v68 = v41;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v67);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v41 - 8) + 16))(boxed_opaque_existential_1, v42, v41);
      unsigned __int8 v69 = 0;
      sub_251A2C08C(a1, (uint64_t)&v60, a4, (uint64_t *)&v67, v55, ObjectType, a2);
      sub_251A2C274((uint64_t)&v67);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v64);
    }
    else
    {
      sub_251A1B064((uint64_t)&v67, &qword_26B21E190);
    }
    sub_251A1B128((uint64_t)v66, (uint64_t)&v67, &qword_26B21E190);
    uint64_t v44 = v68;
    if (v68)
    {
      uint64_t v45 = __swift_project_boxed_opaque_existential_1(&v67, v68);
      *(void *)(a5 + 24) = v44;
      id v46 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a5);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v44 - 8) + 16))(v46, v45, v44);
      sub_251A1B064((uint64_t)v66, &qword_26B21E190);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v67);
      return;
    }
    sub_251A1B064((uint64_t)v66, &qword_26B21E190);
    sub_251A1B064((uint64_t)&v67, &qword_26B21E190);
    goto LABEL_28;
  }
  if (v69)
  {
    char v47 = v9;
    unint64_t v48 = (void *)v67;
    unint64_t v49 = (void *)sub_251F34A20();
    if (qword_269B9C2A0 != -1) {
      swift_once();
    }
    uint64_t v50 = qword_269B9CDB8;
    swift_bridgeObjectRetain();
    char v51 = sub_251D81F40((uint64_t)objc_msgSend(v49, sel_code), v50);

    swift_bridgeObjectRelease();
    char v9 = v47;
    if (v51)
    {
LABEL_28:
      *(_OWORD *)a5 = 0u;
      *(_OWORD *)(a5 + 16) = 0u;
      return;
    }
    goto LABEL_17;
  }
  sub_251A0D578(&v67, v66);
  if (qword_26B21ECD0 != -1) {
    swift_once();
  }
  uint64_t v24 = sub_251F350A0();
  __swift_project_value_buffer(v24, (uint64_t)qword_26B21ECB8);
  sub_251A0D51C((uint64_t)v66, (uint64_t)&v64);
  swift_unknownObjectRetain_n();
  os_log_type_t v25 = sub_251F35080();
  os_log_type_t v26 = sub_251F35FD0();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = swift_slowAlloc();
    uint64_t v56 = swift_slowAlloc();
    uint64_t v63 = v56;
    *(_DWORD *)uint64_t v27 = 136316162;
    sub_251A00E84(0xD000000000000027, 0x8000000251F681A0, &v63);
    sub_251F361D0();
    *(_WORD *)(v27 + 12) = 2080;
    unsigned __int16 v61 = v20;
    char v62 = v9;
    uint64_t v28 = ClusterPath.description.getter();
    sub_251A00E84(v28, v29, &v63);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 22) = 1024;
    sub_251F361D0();
    *(_WORD *)(v27 + 28) = 2048;
    uint64_t v30 = v54(ObjectType, a2);
    swift_unknownObjectRelease();
    uint64_t v60 = v30;
    sub_251F361D0();
    swift_unknownObjectRelease();
    *(_WORD *)(v27 + 38) = 2080;
    sub_251A0D51C((uint64_t)&v64, (uint64_t)&v60);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CDC0);
    uint64_t v31 = sub_251F35790();
    uint64_t v60 = sub_251A00E84(v31, v32, &v63);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v64);
    _os_log_impl(&dword_2519F3000, v25, v26, "%s Using cached attribute value for clusterPath:%s attributeID: %u device:%llu: %s", (uint8_t *)v27, 0x30u);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v56, -1, -1);
    MEMORY[0x2533AC760](v27, -1, -1);
  }
  else
  {
    swift_unknownObjectRelease_n();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v64);
  }

  sub_251A0D578(v66, (_OWORD *)a5);
}

double sub_251A2B83C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CB40);
  uint64_t v0 = swift_allocObject();
  *(void *)&double result = 2;
  *(_OWORD *)(v0 + 16) = xmmword_251F3A500;
  *(_OWORD *)(v0 + 32) = xmmword_251F3A510;
  qword_269B9CDB8 = v0;
  return result;
}

uint64_t sub_251A2B884(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = sub_251A2BF48(a1, v3, ObjectType, a2);
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  if (v7)
  {
    uint64_t v12 = v7;
  }
  else
  {
    uint64_t v12 = MatterDevice.allEndpointIDs.getter(ObjectType, a2);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 16);
    swift_bridgeObjectRetain();
    uint64_t v14 = v13(ObjectType, a2);
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v17 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_251A0D6F8(v12, v9, v11, v14, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v17;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_251A2B9A0(uint64_t result)
{
  uint64_t v2 = *v1;
  if (!*(void *)(v2 + 16)) {
    return result;
  }
  uint64_t v55 = result;
  double result = sub_2519FE588(result);
  if ((v3 & 1) == 0) {
    return result;
  }
  __int16 v4 = (uint64_t *)(*(void *)(v2 + 56) + 24 * result);
  uint64_t v5 = v4[1];
  uint64_t v6 = v4[2];
  uint64_t v54 = *v4;
  swift_bridgeObjectRetain();
  uint64_t v53 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_251D85DDC();
  uint64_t v8 = v7;
  uint64_t v57 = v6 + 64;
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  int64_t v58 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  swift_bridgeObjectRetain();
  int64_t v13 = 0;
  uint64_t v60 = v12;
  uint64_t v61 = v6;
  uint64_t v59 = v8;
  while (2)
  {
    if (!v11)
    {
      int64_t v16 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_74;
      }
      if (v16 >= v58) {
        goto LABEL_68;
      }
      unint64_t v17 = *(void *)(v57 + 8 * v16);
      ++v13;
      if (!v17)
      {
        int64_t v13 = v16 + 1;
        if (v16 + 1 >= v58) {
          goto LABEL_68;
        }
        unint64_t v17 = *(void *)(v57 + 8 * v13);
        if (!v17)
        {
          int64_t v13 = v16 + 2;
          if (v16 + 2 >= v58) {
            goto LABEL_68;
          }
          unint64_t v17 = *(void *)(v57 + 8 * v13);
          if (!v17)
          {
            int64_t v18 = v16 + 3;
            if (v18 < v58)
            {
              unint64_t v17 = *(void *)(v57 + 8 * v18);
              if (v17)
              {
                int64_t v13 = v18;
                goto LABEL_23;
              }
              while (1)
              {
                int64_t v13 = v18 + 1;
                if (__OFADD__(v18, 1)) {
                  goto LABEL_75;
                }
                if (v13 >= v58) {
                  break;
                }
                unint64_t v17 = *(void *)(v57 + 8 * v13);
                ++v18;
                if (v17) {
                  goto LABEL_23;
                }
              }
            }
LABEL_68:
            swift_bridgeObjectRelease();
            swift_release();
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            *(void *)&v67[0] = *v56;
            *uint64_t v56 = 0x8000000000000000;
            sub_251A0D6F8(v54, v53, v6, v55, isUniquelyReferenced_nonNull_native);
            *uint64_t v56 = *(void *)&v67[0];
            return swift_bridgeObjectRelease();
          }
        }
      }
LABEL_23:
      uint64_t v65 = (v17 - 1) & v17;
      unint64_t v15 = __clz(__rbit64(v17)) + (v13 << 6);
      goto LABEL_24;
    }
    uint64_t v65 = (v11 - 1) & v11;
    unint64_t v15 = __clz(__rbit64(v11)) | (v13 << 6);
LABEL_24:
    unsigned __int16 v64 = *(_WORD *)(*(void *)(v61 + 48) + 2 * v15);
    char v19 = *(void **)(*(void *)(v61 + 56) + 8 * v15);
    uint64_t v20 = 1 << *(unsigned char *)(v8 + 32);
    if (v20 < 64) {
      uint64_t v21 = ~(-1 << v20);
    }
    else {
      uint64_t v21 = -1;
    }
    unint64_t v22 = v21 & *(void *)(v8 + 64);
    int64_t v66 = (unint64_t)(v20 + 63) >> 6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    int64_t v23 = 0;
    while (1)
    {
      while (v22)
      {
        unint64_t v24 = __clz(__rbit64(v22));
        v22 &= v22 - 1;
        unint64_t v25 = v24 | (v23 << 6);
        if (v19[2])
        {
LABEL_45:
          uint64_t v29 = *(void *)(*(void *)(v8 + 56) + 8 * v25);
          char v30 = *(unsigned char *)(*(void *)(v8 + 48) + v25);
          unint64_t v31 = sub_2519FE614(v30);
          if (v32)
          {
            int64_t v63 = v13;
            uint64_t v33 = *(void *)(v19[7] + 8 * v31);
            uint64_t v34 = *(void *)(v29 + 16);
            if (v34)
            {
              uint64_t v62 = v6;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              for (uint64_t i = 0; i != v34; ++i)
              {
                unint64_t v36 = sub_2519FE94C(*(_DWORD *)(v29 + 4 * i + 32));
                if (v37)
                {
                  unint64_t v38 = v36;
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                    sub_251A13198();
                  }
                  sub_251A1A5BC(*(void *)(v33 + 56) + 40 * v38, (uint64_t)v67);
                  sub_251E3A8C8(v38, v33);
                  swift_bridgeObjectRelease();
                }
                else
                {
                  memset(v67, 0, sizeof(v67));
                  char v68 = -2;
                }
                sub_251A1B064((uint64_t)v67, &qword_269B9CA90);
              }
              swift_bridgeObjectRelease();
              uint64_t v6 = v62;
            }
            else
            {
              swift_bridgeObjectRetain();
            }
            char v39 = swift_isUniquelyReferenced_nonNull_native();
            *(void *)&v67[0] = v19;
            unint64_t v41 = sub_2519FE614(v30);
            uint64_t v42 = v19[2];
            BOOL v43 = (v40 & 1) == 0;
            uint64_t v44 = v42 + v43;
            int64_t v13 = v63;
            if (__OFADD__(v42, v43)) {
              goto LABEL_72;
            }
            if (v19[3] < v44)
            {
              char v45 = v40;
              sub_251A0337C(v44, v39);
              unint64_t v46 = sub_2519FE614(v30);
              if ((v45 & 1) != (v47 & 1)) {
                goto LABEL_76;
              }
              unint64_t v41 = v46;
              goto LABEL_60;
            }
            if ((v39 & 1) == 0)
            {
              char v45 = v40;
              sub_251A1318C();
LABEL_60:
              char v40 = v45;
            }
            uint64_t v12 = v60;
            char v19 = *(void **)&v67[0];
            if (v40)
            {
              uint64_t v48 = *(void *)(*(void *)&v67[0] + 56);
              swift_bridgeObjectRelease();
              *(void *)(v48 + 8 * v41) = v33;
            }
            else
            {
              *(void *)(*(void *)&v67[0] + 8 * (v41 >> 6) + 64) |= 1 << v41;
              *(unsigned char *)(v19[6] + v41) = v30;
              *(void *)(v19[7] + 8 * v41) = v33;
              uint64_t v49 = v19[2];
              BOOL v50 = __OFADD__(v49, 1);
              uint64_t v51 = v49 + 1;
              if (v50) {
                goto LABEL_73;
              }
              v19[2] = v51;
            }
            swift_bridgeObjectRelease();
            uint64_t v8 = v59;
          }
        }
      }
      int64_t v26 = v23 + 1;
      if (__OFADD__(v23, 1))
      {
        __break(1u);
        goto LABEL_71;
      }
      if (v26 >= v66) {
        goto LABEL_7;
      }
      unint64_t v27 = *(void *)(v12 + 8 * v26);
      ++v23;
      if (!v27)
      {
        int64_t v23 = v26 + 1;
        if (v26 + 1 >= v66) {
          goto LABEL_7;
        }
        unint64_t v27 = *(void *)(v12 + 8 * v23);
        if (!v27)
        {
          int64_t v23 = v26 + 2;
          if (v26 + 2 >= v66) {
            goto LABEL_7;
          }
          unint64_t v27 = *(void *)(v12 + 8 * v23);
          if (!v27) {
            break;
          }
        }
      }
LABEL_44:
      unint64_t v22 = (v27 - 1) & v27;
      unint64_t v25 = __clz(__rbit64(v27)) + (v23 << 6);
      if (v19[2]) {
        goto LABEL_45;
      }
    }
    int64_t v28 = v26 + 3;
    if (v28 >= v66)
    {
LABEL_7:
      swift_release();
      swift_bridgeObjectRetain();
      char v14 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&v67[0] = v6;
      sub_251A0D864((uint64_t)v19, v64, v14);
      uint64_t v6 = *(void *)&v67[0];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v11 = v65;
      continue;
    }
    break;
  }
  unint64_t v27 = *(void *)(v12 + 8 * v28);
  if (v27)
  {
    int64_t v23 = v28;
    goto LABEL_44;
  }
  while (1)
  {
    int64_t v23 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v23 >= v66) {
      goto LABEL_7;
    }
    unint64_t v27 = *(void *)(v12 + 8 * v23);
    ++v28;
    if (v27) {
      goto LABEL_44;
    }
  }
LABEL_71:
  __break(1u);
LABEL_72:
  __break(1u);
LABEL_73:
  __break(1u);
LABEL_74:
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  double result = sub_251F36BA0();
  __break(1u);
  return result;
}

uint64_t sub_251A2BF48(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 16);
  uint64_t v7 = v6(a3, a4);
  uint64_t result = sub_251B7499C(v7, *a2);
  if (!v9)
  {
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v11 = MEMORY[0x263F8EE78];
    unint64_t v12 = sub_251A1983C(MEMORY[0x263F8EE78]);
    unint64_t v13 = sub_251A19848(v11);
    uint64_t v14 = v6(ObjectType, a4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v16 = *a2;
    *a2 = 0x8000000000000000;
    sub_251A0D6F8(0, v12, v13, v14, isUniquelyReferenced_nonNull_native);
    *a2 = v16;
    swift_bridgeObjectRelease();
    MatterDevice.prefetch()();
    return 0;
  }
  return result;
}

uint64_t sub_251A2C08C(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t *a4, uint64_t *a5, uint64_t a6, uint64_t a7)
{
  unsigned __int16 v11 = *(_WORD *)(a2 + 8);
  char v12 = *(unsigned char *)(a2 + 10);
  uint64_t v13 = sub_251A2BF48(a1, a5, a6, a7);
  uint64_t v31 = v14;
  uint64_t v32 = v13;
  uint64_t v16 = v15;
  if (*(void *)(v15 + 16) && (unint64_t v17 = sub_2519FE5CC(v11), (v18 & 1) != 0))
  {
    unint64_t v19 = *(void *)(*(void *)(v16 + 56) + 8 * v17);
    swift_bridgeObjectRetain();
    if (!*(void *)(v19 + 16)) {
      goto LABEL_8;
    }
  }
  else
  {
    unint64_t v19 = sub_251A19854(MEMORY[0x263F8EE78]);
    if (!*(void *)(v19 + 16))
    {
LABEL_8:
      unint64_t v34 = sub_251A19874(MEMORY[0x263F8EE78]);
      goto LABEL_9;
    }
  }
  unint64_t v20 = sub_2519FE614(v12);
  if ((v21 & 1) == 0) {
    goto LABEL_8;
  }
  unint64_t v34 = *(void *)(*(void *)(v19 + 56) + 8 * v20);
  swift_bridgeObjectRetain();
LABEL_9:
  sub_251A2C2A4(a4, (uint64_t)v33);
  sub_2519F8108((uint64_t)v33, a3);
  uint64_t v22 = v34;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v33[0] = v19;
  sub_251A0D9B4(v22, v12, isUniquelyReferenced_nonNull_native);
  uint64_t v24 = v33[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  char v25 = swift_isUniquelyReferenced_nonNull_native();
  v33[0] = v16;
  sub_251A0D864(v24, v11, v25);
  uint64_t v26 = v33[0];
  swift_bridgeObjectRelease();
  uint64_t v27 = (*(uint64_t (**)(uint64_t, uint64_t))(a7 + 16))(a6, a7);
  char v28 = swift_isUniquelyReferenced_nonNull_native();
  v33[0] = *a5;
  *a5 = 0x8000000000000000;
  sub_251A0D6F8(v32, v31, v26, v27, v28);
  *a5 = v33[0];
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_251A2C274(uint64_t a1)
{
  return a1;
}

uint64_t sub_251A2C2A4(uint64_t *a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_251A2C2DC()
{
  unint64_t result = qword_269B9CDD8;
  if (!qword_269B9CDD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9CDD8);
  }
  return result;
}

void _s25LimitedSnapshotControllerV11DeviceStateV14AttributeValueOwxx(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 32);
  if (v1 >= 2) {
    unsigned int v1 = *(_DWORD *)a1 + 2;
  }
  if (v1 == 1) {

  }
  else {
    __swift_destroy_boxed_opaque_existential_0(a1);
  }
}

uint64_t _s25LimitedSnapshotControllerV11DeviceStateV14AttributeValueOwcp(uint64_t a1, uint64_t *a2)
{
  unsigned int v3 = *((unsigned __int8 *)a2 + 32);
  if (v3 >= 2) {
    unsigned int v3 = *(_DWORD *)a2 + 2;
  }
  if (v3 == 1)
  {
    uint64_t v4 = *a2;
    id v5 = (id)*a2;
    *(void *)a1 = v4;
    char v6 = 1;
  }
  else
  {
    uint64_t v7 = a2[3];
    *(void *)(a1 + 24) = v7;
    (**(void (***)(uint64_t))(v7 - 8))(a1);
    char v6 = 0;
  }
  *(unsigned char *)(a1 + 32) = v6;
  return a1;
}

uint64_t _s25LimitedSnapshotControllerV11DeviceStateV14AttributeValueOwca(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 32);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a1 + 2;
    }
    if (v4 == 1) {

    }
    else {
      __swift_destroy_boxed_opaque_existential_0(a1);
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 32);
    if (v5 >= 2) {
      unsigned int v5 = *(_DWORD *)a2 + 2;
    }
    if (v5 == 1)
    {
      char v6 = *(void **)a2;
      id v7 = v6;
      *(void *)a1 = v6;
      char v8 = 1;
    }
    else
    {
      uint64_t v9 = *(void *)(a2 + 24);
      *(void *)(a1 + 24) = v9;
      (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1, a2);
      char v8 = 0;
    }
    *(unsigned char *)(a1 + 32) = v8;
  }
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s25LimitedSnapshotControllerV11DeviceStateV14AttributeValueOwta(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 32);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a1 + 2;
    }
    if (v4 == 1) {

    }
    else {
      __swift_destroy_boxed_opaque_existential_0(a1);
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 32);
    if (v5 >= 2) {
      unsigned int v5 = *(_DWORD *)a2 + 2;
    }
    if (v5 == 1)
    {
      *(void *)a1 = *(void *)a2;
      char v6 = 1;
    }
    else
    {
      char v6 = 0;
      long long v7 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v7;
    }
    *(unsigned char *)(a1 + 32) = v6;
  }
  return a1;
}

uint64_t _s25LimitedSnapshotControllerV11DeviceStateV14AttributeValueOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 >= 2) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t _s25LimitedSnapshotControllerV11DeviceStateV14AttributeValueOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 32) = 0;
    *(_OWORD *)__n128 result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_251A2C5F8(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 32);
  if (result >= 2) {
    return (*(_DWORD *)a1 + 2);
  }
  return result;
}

uint64_t sub_251A2C614(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 32) = a2;
  return result;
}

ValueMetadata *_s25LimitedSnapshotControllerV11DeviceStateV14AttributeValueOMa()
{
  return &_s25LimitedSnapshotControllerV11DeviceStateV14AttributeValueON;
}

uint64_t sub_251A2C648@<X0>(uint64_t a1@<X0>, unsigned __int16 a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v27 = a3;
  int v30 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F4C8);
  uint64_t v26 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  long long v7 = (unsigned __int16 *)((char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (_WORD *)((char *)&v25 - v8);
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v28 = a1 + 64;
  uint64_t v11 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v10;
  int64_t v29 = (unint64_t)(v11 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v15 = 0;
  if (!v13) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v16 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v16 | (v15 << 6); ; unint64_t i = __clz(__rbit64(v19)) + (v15 << 6))
  {
    uint64_t v21 = *(void *)(a1 + 56);
    __int16 v22 = *(_WORD *)(*(void *)(a1 + 48) + 2 * i);
    uint64_t v23 = type metadata accessor for StaticEndpoint();
    sub_251A4ED54(v21 + *(void *)(*(void *)(v23 - 8) + 72) * i, (uint64_t)v9 + *(int *)(v4 + 48), (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
    *uint64_t v9 = v22;
    sub_251A4ECF0((uint64_t)v9, (uint64_t)v7, &qword_26B21F4C8);
    if (*v7 == v30)
    {
      swift_release();
      uint64_t v24 = v27;
      sub_251A4ECF0((uint64_t)v7, v27, &qword_26B21F4C8);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v26 + 56))(v24, 0, 1, v4);
    }
    uint64_t result = sub_251A1B064((uint64_t)v7, &qword_26B21F4C8);
    if (v13) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v18 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v18 >= v29) {
      goto LABEL_25;
    }
    unint64_t v19 = *(void *)(v28 + 8 * v18);
    ++v15;
    if (!v19)
    {
      int64_t v15 = v18 + 1;
      if (v18 + 1 >= v29) {
        goto LABEL_25;
      }
      unint64_t v19 = *(void *)(v28 + 8 * v15);
      if (!v19)
      {
        int64_t v15 = v18 + 2;
        if (v18 + 2 >= v29) {
          goto LABEL_25;
        }
        unint64_t v19 = *(void *)(v28 + 8 * v15);
        if (!v19)
        {
          int64_t v15 = v18 + 3;
          if (v18 + 3 >= v29) {
            goto LABEL_25;
          }
          unint64_t v19 = *(void *)(v28 + 8 * v15);
          if (!v19) {
            break;
          }
        }
      }
    }
LABEL_20:
    unint64_t v13 = (v19 - 1) & v19;
  }
  int64_t v20 = v18 + 4;
  if (v20 >= v29)
  {
LABEL_25:
    swift_release();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56))(v27, 1, 1, v4);
  }
  unint64_t v19 = *(void *)(v28 + 8 * v20);
  if (v19)
  {
    int64_t v15 = v20;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v15 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v15 >= v29) {
      goto LABEL_25;
    }
    unint64_t v19 = *(void *)(v28 + 8 * v15);
    ++v20;
    if (v19) {
      goto LABEL_20;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_251A2C95C(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    sub_251A3E1E0(0, v2, 0);
    uint64_t result = v9;
    uint64_t v4 = (int *)(a1 + 32);
    do
    {
      int v6 = *v4;
      v4 += 12;
      int v5 = v6;
      uint64_t v10 = result;
      unint64_t v8 = *(void *)(result + 16);
      unint64_t v7 = *(void *)(result + 24);
      if (v8 >= v7 >> 1)
      {
        sub_251A3E1E0(v7 > 1, v8 + 1, 1);
        uint64_t result = v10;
      }
      *(void *)(result + 16) = v8 + 1;
      *(_DWORD *)(result + 4 * v8 + 32) = v5;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_251A2CA1C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (!v1) {
    return v2;
  }
  uint64_t v37 = *(void *)(a1 + 16);
  uint64_t v39 = MEMORY[0x263F8EE78];
  sub_251A3E340(0, v1, 0);
  uint64_t v2 = v39;
  uint64_t result = sub_251A82938(a1);
  uint64_t v4 = result;
  uint64_t v6 = v37;
  uint64_t v5 = a1;
  uint64_t v8 = v7;
  uint64_t v9 = 0;
  char v11 = v10 & 1;
  uint64_t v12 = a1 + 64;
  uint64_t v13 = v7;
  uint64_t v14 = a1 + 88;
  while ((v11 & 1) == 0)
  {
    if (v4 < 0 || v4 >= 1 << *(unsigned char *)(v5 + 32))
    {
      __break(1u);
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
      break;
    }
    unint64_t v16 = (unint64_t)v4 >> 6;
    if ((*(void *)(v12 + 8 * ((unint64_t)v4 >> 6)) & (1 << v4)) == 0) {
      goto LABEL_27;
    }
    if (*(_DWORD *)(v5 + 36) != v8) {
      goto LABEL_28;
    }
    uint64_t v17 = *(void *)(*(void *)(v5 + 48) + 8 * v4);
    unint64_t v19 = *(void *)(v39 + 16);
    unint64_t v18 = *(void *)(v39 + 24);
    if (v19 >= v18 >> 1)
    {
      uint64_t v35 = v13;
      uint64_t v36 = v12;
      uint64_t v34 = v14;
      uint64_t result = sub_251A3E340(v18 > 1, v19 + 1, 1);
      uint64_t v14 = v34;
      uint64_t v13 = v35;
      uint64_t v12 = v36;
      uint64_t v6 = v37;
      uint64_t v5 = a1;
    }
    *(void *)(v39 + 16) = v19 + 1;
    uint64_t v20 = v39 + 16 * v19;
    *(void *)(v20 + 32) = v17;
    *(_WORD *)(v20 + 40) = 0;
    *(unsigned char *)(v20 + 42) = 1;
    int64_t v15 = 1 << *(unsigned char *)(v5 + 32);
    if (v4 >= v15) {
      goto LABEL_29;
    }
    uint64_t v21 = *(void *)(v12 + 8 * v16);
    if ((v21 & (1 << v4)) == 0) {
      goto LABEL_30;
    }
    if (*(_DWORD *)(v5 + 36) != v8) {
      goto LABEL_31;
    }
    unint64_t v22 = v21 & (-2 << (v4 & 0x3F));
    if (v22)
    {
      int64_t v15 = __clz(__rbit64(v22)) | v4 & 0xFFFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v23 = v16 + 1;
      unint64_t v24 = (unint64_t)(v15 + 63) >> 6;
      if (v16 + 1 < v24)
      {
        unint64_t v25 = *(void *)(v12 + 8 * v23);
        if (!v25)
        {
          unint64_t v23 = v16 + 2;
          if (v16 + 2 >= v24) {
            goto LABEL_4;
          }
          unint64_t v25 = *(void *)(v12 + 8 * v23);
          if (!v25)
          {
            while (v24 - 3 != v16)
            {
              unint64_t v25 = *(void *)(v14 + 8 * v16++);
              if (v25)
              {
                uint64_t v26 = v4;
                uint64_t v27 = v8;
                uint64_t v28 = v12;
                uint64_t v29 = v13;
                uint64_t v30 = v14;
                uint64_t result = sub_251A4ECE4(v26, v27, 0);
                uint64_t v14 = v30;
                uint64_t v13 = v29;
                uint64_t v12 = v28;
                uint64_t v6 = v37;
                uint64_t v5 = a1;
                unint64_t v23 = v16 + 2;
                goto LABEL_18;
              }
            }
            uint64_t v31 = v12;
            uint64_t v32 = v13;
            uint64_t v33 = v14;
            uint64_t result = sub_251A4ECE4(v4, v8, 0);
            uint64_t v14 = v33;
            uint64_t v13 = v32;
            uint64_t v12 = v31;
            uint64_t v6 = v37;
            uint64_t v5 = a1;
            goto LABEL_4;
          }
        }
LABEL_18:
        int64_t v15 = __clz(__rbit64(v25)) + (v23 << 6);
      }
    }
LABEL_4:
    char v11 = 0;
    ++v9;
    uint64_t v8 = v13;
    uint64_t v4 = v15;
    if (v9 == v6) {
      return v2;
    }
  }
  __break(1u);
  return result;
}

uint64_t MatterStateSnapshot.controllerID.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MatterStateSnapshot.staticDevices.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MatterStateSnapshot.staticEndpointsDictionary.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MatterStateSnapshot.staticEndpointsDictionary.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = a1;
  return result;
}

uint64_t (*MatterStateSnapshot.staticEndpointsDictionary.modify())()
{
  return nullsub_1;
}

uint64_t sub_251A2CD48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v86 = a2;
  uint64_t v85 = a1;
  char v87 = a4;
  uint64_t v5 = type metadata accessor for StaticEndpoint();
  uint64_t v104 = *(void *)(v5 - 8);
  uint64_t v105 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v103 = (uint64_t)&v84 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F4C8);
  uint64_t v7 = MEMORY[0x270FA5388](v102);
  uint64_t v9 = (char *)&v84 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  v101 = (char *)&v84 - v10;
  uint64_t v92 = type metadata accessor for StaticMatterDevice();
  uint64_t v91 = *(void *)(v92 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v92);
  uint64_t v95 = (uint64_t)&v84 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v90 = (uint64_t)&v84 - v13;
  swift_bridgeObjectRetain();
  unint64_t isUniquelyReferenced_nonNull_native = sub_2519FA424(MEMORY[0x263F8EE78]);
  uint64_t v15 = *(void *)(a3 + 64);
  uint64_t v88 = a3 + 64;
  uint64_t v16 = 1 << *(unsigned char *)(a3 + 32);
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  else {
    uint64_t v17 = -1;
  }
  unint64_t v96 = v17 & v15;
  int64_t v89 = (unint64_t)(v16 + 63) >> 6;
  uint64_t v93 = a3;
  swift_bridgeObjectRetain();
  int64_t v18 = 0;
  long long v100 = xmmword_251F38650;
  v99 = v9;
LABEL_6:
  if (!v96)
  {
    int64_t v22 = v18 + 1;
    uint64_t v21 = v93;
    if (__OFADD__(v18, 1)) {
      goto LABEL_70;
    }
    if (v22 >= v89) {
      goto LABEL_66;
    }
    unint64_t v23 = *(void *)(v88 + 8 * v22);
    int64_t v24 = v18 + 1;
    if (!v23)
    {
      int64_t v24 = v18 + 2;
      if (v18 + 2 >= v89) {
        goto LABEL_66;
      }
      unint64_t v23 = *(void *)(v88 + 8 * v24);
      if (!v23)
      {
        int64_t v24 = v18 + 3;
        if (v18 + 3 >= v89) {
          goto LABEL_66;
        }
        unint64_t v23 = *(void *)(v88 + 8 * v24);
        if (!v23)
        {
          int64_t v24 = v18 + 4;
          if (v18 + 4 >= v89) {
            goto LABEL_66;
          }
          unint64_t v23 = *(void *)(v88 + 8 * v24);
          if (!v23)
          {
            int64_t v24 = v18 + 5;
            if (v18 + 5 >= v89) {
              goto LABEL_66;
            }
            unint64_t v23 = *(void *)(v88 + 8 * v24);
            if (!v23)
            {
              uint64_t v25 = v18 + 6;
              if (v18 + 6 < v89)
              {
                unint64_t v23 = *(void *)(v88 + 8 * v25);
                if (v23)
                {
                  int64_t v24 = v18 + 6;
                  goto LABEL_25;
                }
                while (1)
                {
                  int64_t v24 = v25 + 1;
                  if (__OFADD__(v25, 1)) {
                    goto LABEL_71;
                  }
                  if (v24 >= v89) {
                    break;
                  }
                  unint64_t v23 = *(void *)(v88 + 8 * v24);
                  ++v25;
                  if (v23) {
                    goto LABEL_25;
                  }
                }
              }
LABEL_66:
              swift_release();
              uint64_t result = swift_bridgeObjectRelease();
              unint64_t v82 = v87;
              uint64_t v83 = v86;
              *char v87 = v85;
              v82[1] = v83;
              v82[2] = v21;
              v82[3] = isUniquelyReferenced_nonNull_native;
              return result;
            }
          }
        }
      }
    }
LABEL_25:
    unint64_t v96 = (v23 - 1) & v23;
    int64_t v94 = v24;
    unint64_t v20 = __clz(__rbit64(v23)) + (v24 << 6);
    goto LABEL_26;
  }
  unint64_t v19 = __clz(__rbit64(v96));
  v96 &= v96 - 1;
  int64_t v94 = v18;
  unint64_t v20 = v19 | (v18 << 6);
  uint64_t v21 = v93;
LABEL_26:
  uint64_t v26 = *(void *)(v21 + 56) + *(void *)(v91 + 72) * v20;
  uint64_t v27 = v90;
  sub_251A4ED54(v26, v90, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
  uint64_t v28 = v27;
  uint64_t v29 = v95;
  sub_251A4EC7C(v28, v95, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
  uint64_t v30 = *(void *)(v29 + *(int *)(v92 + 48));
  uint64_t v31 = *(void *)(v30 + 64);
  uint64_t v97 = v30 + 64;
  uint64_t v32 = 1 << *(unsigned char *)(v30 + 32);
  if (v32 < 64) {
    uint64_t v33 = ~(-1 << v32);
  }
  else {
    uint64_t v33 = -1;
  }
  unint64_t v34 = v33 & v31;
  int64_t v98 = (unint64_t)(v32 + 63) >> 6;
  uint64_t v106 = v30;
  swift_bridgeObjectRetain_n();
  for (int64_t i = 0; ; int64_t i = v108)
  {
    unint64_t v112 = isUniquelyReferenced_nonNull_native;
    if (v34)
    {
      uint64_t v107 = (v34 - 1) & v34;
      int64_t v108 = i;
      unint64_t v36 = __clz(__rbit64(v34)) | (i << 6);
    }
    else
    {
      int64_t v37 = i + 1;
      if (__OFADD__(i, 1)) {
        goto LABEL_68;
      }
      if (v37 >= v98)
      {
LABEL_5:
        swift_release();
        swift_bridgeObjectRelease();
        sub_251A4EDBC(v95, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
        int64_t v18 = v94;
        goto LABEL_6;
      }
      unint64_t v38 = *(void *)(v97 + 8 * v37);
      int64_t v39 = i + 1;
      if (!v38)
      {
        int64_t v39 = i + 2;
        if (i + 2 >= v98) {
          goto LABEL_5;
        }
        unint64_t v38 = *(void *)(v97 + 8 * v39);
        if (!v38)
        {
          int64_t v39 = i + 3;
          if (i + 3 >= v98) {
            goto LABEL_5;
          }
          unint64_t v38 = *(void *)(v97 + 8 * v39);
          if (!v38)
          {
            int64_t v39 = i + 4;
            if (i + 4 >= v98) {
              goto LABEL_5;
            }
            unint64_t v38 = *(void *)(v97 + 8 * v39);
            if (!v38)
            {
              int64_t v39 = i + 5;
              if (i + 5 >= v98) {
                goto LABEL_5;
              }
              unint64_t v38 = *(void *)(v97 + 8 * v39);
              if (!v38)
              {
                uint64_t v40 = i + 6;
                if (i + 6 >= v98) {
                  goto LABEL_5;
                }
                unint64_t v38 = *(void *)(v97 + 8 * v40);
                if (!v38)
                {
                  while (1)
                  {
                    int64_t v39 = v40 + 1;
                    if (__OFADD__(v40, 1)) {
                      goto LABEL_69;
                    }
                    if (v39 >= v98) {
                      goto LABEL_5;
                    }
                    unint64_t v38 = *(void *)(v97 + 8 * v39);
                    ++v40;
                    if (v38) {
                      goto LABEL_51;
                    }
                  }
                }
                int64_t v39 = i + 6;
              }
            }
          }
        }
      }
LABEL_51:
      uint64_t v107 = (v38 - 1) & v38;
      int64_t v108 = v39;
      unint64_t v36 = __clz(__rbit64(v38)) + (v39 << 6);
    }
    uint64_t v41 = *(void *)(v106 + 56);
    __int16 v42 = *(_WORD *)(*(void *)(v106 + 48) + 2 * v36);
    uint64_t v110 = *(void *)(v104 + 72);
    uint64_t v44 = v101;
    uint64_t v43 = v102;
    sub_251A4ED54(v41 + v110 * v36, (uint64_t)&v101[*(int *)(v102 + 48)], (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
    _WORD *v44 = v42;
    sub_251A4ECF0((uint64_t)v44, (uint64_t)v9, &qword_26B21F4C8);
    uint64_t v45 = (uint64_t)&v9[*(int *)(v43 + 48)];
    uint64_t v46 = v45 + *(int *)(v105 + 20);
    unint64_t v47 = *(void *)v46;
    LOWORD(v43) = *(_WORD *)(v46 + 8);
    uint64_t v48 = sub_251F34DA0();
    unint64_t v109 = &v84;
    uint64_t v113 = v48;
    uint64_t v21 = *(void *)(v48 - 8);
    uint64_t v49 = MEMORY[0x270FA5388](v48);
    uint64_t v51 = (char *)&v84 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
    v111 = &v84;
    MEMORY[0x270FA5388](v49);
    uint64_t v53 = (char *)&v84 - v52;
    uint64_t v54 = self;
    id v55 = objc_msgSend(v54, sel_hmf_zeroUUID);
    sub_251F34D80();

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B21EBA0);
    uint64_t v56 = swift_allocObject();
    *(_OWORD *)(v56 + 16) = v100;
    unint64_t v114 = v47;
    *(void *)(v56 + 32) = sub_251F36AB0();
    *(void *)(v56 + 40) = v57;
    LOWORD(v114) = v43;
    uint64_t v58 = sub_251F36AB0();
    uint64_t v60 = v59;
    unint64_t v62 = *(void *)(v56 + 16);
    unint64_t v61 = *(void *)(v56 + 24);
    if (v62 >= v61 >> 1) {
      uint64_t v56 = (uint64_t)sub_251F0E8B8((void *)(v61 > 1), v62 + 1, 1, (void *)v56);
    }
    *(void *)(v56 + 16) = v62 + 1;
    uint64_t v63 = v56 + 16 * v62;
    *(void *)(v63 + 32) = v58;
    *(void *)(v63 + 40) = v60;
    unsigned __int16 v64 = (void *)sub_251F34D50();
    uint64_t v65 = (void *)sub_251F35AA0();
    swift_bridgeObjectRelease();
    id v66 = objc_msgSend(v54, sel_hmf_UUIDWithNamespace_data_salts_, v64, 0, v65);

    sub_251F34D80();
    long long v67 = *(void (**)(char *, uint64_t))(v21 + 8);
    v67(v53, v113);
    uint64_t v68 = v103;
    sub_251A4ED54(v45, v103, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
    unint64_t v69 = v112;
    unint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v114 = v69;
    unint64_t v71 = sub_2519FE584((uint64_t)v51);
    uint64_t v72 = *(void *)(v69 + 16);
    BOOL v73 = (v70 & 1) == 0;
    uint64_t v74 = v72 + v73;
    if (__OFADD__(v72, v73))
    {
      __break(1u);
      goto LABEL_66;
    }
    char v75 = v70;
    if (*(void *)(v69 + 24) >= v74)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        unint64_t isUniquelyReferenced_nonNull_native = v114;
        if (v70) {
          goto LABEL_30;
        }
      }
      else
      {
        sub_251A13380();
        unint64_t isUniquelyReferenced_nonNull_native = v114;
        if (v75) {
          goto LABEL_30;
        }
      }
    }
    else
    {
      sub_251A03C08(v74, isUniquelyReferenced_nonNull_native);
      unint64_t v76 = sub_2519FE584((uint64_t)v51);
      if ((v75 & 1) != (v77 & 1)) {
        goto LABEL_72;
      }
      unint64_t v71 = v76;
      unint64_t isUniquelyReferenced_nonNull_native = v114;
      if (v75)
      {
LABEL_30:
        sub_251A4EB28(v68, *(void *)(isUniquelyReferenced_nonNull_native + 56) + v71 * v110);
        goto LABEL_31;
      }
    }
    *(void *)(isUniquelyReferenced_nonNull_native + 8 * (v71 >> 6) + 64) |= 1 << v71;
    (*(void (**)(unint64_t, char *, uint64_t))(v21 + 16))(*(void *)(isUniquelyReferenced_nonNull_native + 48) + *(void *)(v21 + 72) * v71, v51, v113);
    sub_251A4EC7C(v68, *(void *)(isUniquelyReferenced_nonNull_native + 56) + v71 * v110, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
    uint64_t v78 = *(void *)(isUniquelyReferenced_nonNull_native + 16);
    BOOL v79 = __OFADD__(v78, 1);
    uint64_t v80 = v78 + 1;
    if (v79) {
      break;
    }
    *(void *)(isUniquelyReferenced_nonNull_native + 16) = v80;
    unint64_t isUniquelyReferenced_nonNull_native = v114;
LABEL_31:
    swift_bridgeObjectRelease();
    v67(v51, v113);
    uint64_t v9 = v99;
    sub_251A1B064((uint64_t)v99, &qword_26B21F4C8);
    unint64_t v34 = v107;
  }
  __break(1u);
LABEL_68:
  __break(1u);
LABEL_69:
  __break(1u);
LABEL_70:
  __break(1u);
LABEL_71:
  __break(1u);
LABEL_72:
  uint64_t result = sub_251F36BA0();
  __break(1u);
  return result;
}

uint64_t MatterStateSnapshot.hash(into:)(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  swift_bridgeObjectRetain();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_251A464F0(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_251A45F84(a1, v3);

  return swift_bridgeObjectRelease();
}

uint64_t sub_251A2D84C()
{
  unint64_t v1 = 0x6544636974617473;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000019;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6C6C6F72746E6F63;
  }
}

uint64_t sub_251A2D8C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251A4DF98(a1, a2);
  *a3 = result;
  return result;
}

void sub_251A2D8E8(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_251A2D8F4(uint64_t a1)
{
  unint64_t v2 = sub_251A4D16C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251A2D930(uint64_t a1)
{
  unint64_t v2 = sub_251A4D16C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t MatterStateSnapshot.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CDE0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v1 + 16);
  uint64_t v16 = *(void *)(v1 + 24);
  uint64_t v17 = v8;
  uint64_t v9 = a1[3];
  uint64_t v10 = a1;
  uint64_t v12 = v11;
  __swift_project_boxed_opaque_existential_1(v10, v9);
  sub_251A4D16C();
  sub_251F36DA0();
  LOBYTE(v19) = 0;
  sub_251F369D0();
  if (!v2)
  {
    uint64_t v13 = v16;
    uint64_t v19 = v17;
    char v18 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CDF0);
    sub_251A4D1C0();
    sub_251F36A20();
    uint64_t v19 = v13;
    char v18 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CE08);
    sub_251A4D26C();
    sub_251F36A20();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v12);
}

uint64_t MatterStateSnapshot.hashValue.getter()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 24);
  sub_251F36CA0();
  swift_bridgeObjectRetain();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_251A464F0((uint64_t)v4, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_251A45F84((uint64_t)v4, v1);
  swift_bridgeObjectRelease();
  return sub_251F36D00();
}

uint64_t MatterStateSnapshot.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CE20);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251A4D16C();
  sub_251F36D90();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  LOBYTE(v20) = 0;
  uint64_t v9 = sub_251F36830();
  uint64_t v11 = v10;
  uint64_t v18 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CDF0);
  char v19 = 1;
  sub_251A4D330();
  swift_bridgeObjectRetain();
  sub_251F36880();
  uint64_t v12 = v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CE08);
  char v19 = 2;
  sub_251A4D3DC();
  uint64_t v17 = v12;
  swift_bridgeObjectRetain();
  sub_251F36880();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v13 = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = v17;
  *a2 = v18;
  a2[1] = v11;
  a2[2] = v14;
  a2[3] = v13;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_251A2DED8()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 24);
  sub_251F36CA0();
  swift_bridgeObjectRetain();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_251A464F0((uint64_t)v4, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_251A45F84((uint64_t)v4, v1);
  swift_bridgeObjectRelease();
  return sub_251F36D00();
}

uint64_t sub_251A2DF78(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  swift_bridgeObjectRetain();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_251A464F0(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_251A45F84(a1, v3);

  return swift_bridgeObjectRelease();
}

uint64_t sub_251A2E014()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 24);
  sub_251F36CA0();
  swift_bridgeObjectRetain();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_251A464F0((uint64_t)v4, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_251A45F84((uint64_t)v4, v1);
  swift_bridgeObjectRelease();
  return sub_251F36D00();
}

uint64_t sub_251A2E0B0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return MatterStateSnapshot.init(from:)(a1, a2);
}

uint64_t sub_251A2E0C8(void *a1)
{
  return MatterStateSnapshot.encode(to:)(a1);
}

uint64_t MatterStateSnapshot.UpdateType.description.getter()
{
  uint64_t v2 = *(void **)v0;
  uint64_t v1 = *(void **)(v0 + 8);
  uint64_t result = 7105633;
  switch(*(unsigned char *)(v0 + 16))
  {
    case 1:
      id v8 = v1;
      sub_251F36400();
      swift_bridgeObjectRelease();
      strcpy((char *)v12, "device(");
      v12[1] = 0xE700000000000000;
      sub_251F36AB0();
      sub_251F35800();
      swift_bridgeObjectRelease();
      sub_251F35800();
      id v9 = objc_msgSend(v8, sel_name);
      sub_251F356F0();

      sub_251F35800();
      swift_bridgeObjectRelease();
      sub_251F35800();
      uint64_t v5 = v2;
      uint64_t v6 = v1;
      char v7 = 1;
      goto LABEL_5;
    case 2:
      id v10 = v1;
      sub_251F36400();
      swift_bridgeObjectRelease();
      strcpy((char *)v12, "limitedDevice(");
      HIBYTE(v12[1]) = -18;
      sub_251F36AB0();
      sub_251F35800();
      swift_bridgeObjectRelease();
      sub_251F35800();
      id v11 = objc_msgSend(v10, sel_name);
      sub_251F356F0();

      sub_251F35800();
      swift_bridgeObjectRelease();
      uint64_t v5 = v2;
      uint64_t v6 = v1;
      char v7 = 2;
      goto LABEL_5;
    case 3:
      return result;
    default:
      v12[0] = 0x28656D6F68;
      v12[1] = 0xE500000000000000;
      sub_251A4D4C4(v2, v1, 0);
      id v4 = objc_msgSend(v2, sel_name);
      sub_251F356F0();

      sub_251F35800();
      swift_bridgeObjectRelease();
      sub_251F35800();
      uint64_t v5 = v2;
      uint64_t v6 = v1;
      char v7 = 0;
LABEL_5:
      sub_251A4D4A0(v5, v6, v7);
      return v12[0];
  }
}

const char *MatterStateSnapshot.UpdateType.metricsID.getter()
{
  uint64_t result = "MatterStateSnapshot.all";
  switch(*(unsigned char *)(v0 + 16))
  {
    case 1:
      uint64_t result = "MatterStateSnapshot.device";
      break;
    case 2:
      uint64_t result = "MatterStateSnapshot.limitedDevice";
      break;
    case 3:
      return result;
    default:
      uint64_t result = "MatterStateSnapshot.home";
      break;
  }
  return result;
}

uint64_t sub_251A2E430(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v32 = a2;
  uint64_t v33 = a4;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC90);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v31 = (uint64_t)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a3 + 16);
  id v11 = objc_msgSend(a1, sel_uniqueIdentifier);
  uint64_t v12 = sub_251F34DA0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x270FA5388](v12);
  unint64_t v15 = (v14 + 15) & 0xFFFFFFFFFFFFFFF0;
  sub_251F34D80();

  id v16 = objc_msgSend(a5, sel_uniqueIdentifier);
  MEMORY[0x270FA5388](v16);
  sub_251F34D80();

  LOBYTE(v16) = sub_251F34D70();
  uint64_t v17 = *(void (**)(char *, uint64_t))(v13 + 8);
  v17((char *)&v31 - v15, v12);
  v17((char *)&v31 - v15, v12);
  uint64_t result = 0;
  if (v16)
  {
    uint64_t v36 = v10;
    swift_bridgeObjectRetain();
    id v19 = objc_msgSend(a1, sel_accessories);
    sub_251A1A568(0, (unint64_t *)&qword_26B21EAF8);
    unint64_t v20 = sub_251F35AC0();

    if (v20 >> 62)
    {
LABEL_17:
      swift_bridgeObjectRetain();
      uint64_t v21 = sub_251F366C0();
      if (v21)
      {
LABEL_4:
        uint64_t v22 = 4;
        while (1)
        {
          if ((v20 & 0xC000000000000001) != 0) {
            id v23 = (id)MEMORY[0x2533AB3A0](v22 - 4, v20);
          }
          else {
            id v23 = *(id *)(v20 + 8 * v22);
          }
          int64_t v24 = v23;
          uint64_t v25 = v22 - 3;
          if (__OFADD__(v22 - 4, 1))
          {
            __break(1u);
            goto LABEL_17;
          }
          id v26 = objc_msgSend(v23, sel_hdm_matterNodeID);
          if (v26)
          {
            uint64_t v27 = v26;
            uint64_t v34 = 0;
            char v35 = 1;
            sub_251F36D80();

            if ((v35 & 1) == 0 && v34 == v33) {
              break;
            }
          }

          ++v22;
          if (v25 == v21) {
            goto LABEL_18;
          }
        }
        swift_bridgeObjectRelease_n();
        id v28 = sub_251D90BA4(v24);
        if (v28)
        {
          uint64_t v30 = v31;
          sub_251A2E78C((uint64_t)v28, v29, v24, v32, v31);
          sub_2519F822C(v30, v33);
          swift_unknownObjectRelease();
        }

        return v36;
      }
    }
    else
    {
      uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v21) {
        goto LABEL_4;
      }
    }
LABEL_18:
    swift_bridgeObjectRelease_n();
    return v36;
  }
  return result;
}

uint64_t sub_251A2E78C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v14 = &type metadata for HomeKitFeatures;
  unint64_t v15 = sub_251A4DA94();
  v13[0] = 4;
  char v10 = sub_251F34F60();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v13);
  if (v10) {
    goto LABEL_6;
  }
  if (qword_269B9C4C0 != -1) {
    swift_once();
  }
  if ((byte_269BA38B2 & 1) != 0
    || (uint64_t v14 = &type metadata for HomeAppFeatures,
        unint64_t v15 = sub_251A23FFC(),
        v13[0] = 2,
        char v11 = sub_251F34F60(),
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v13),
        (v11 & 1) != 0))
  {
LABEL_6:
    swift_unknownObjectRetain();
    return StaticMatterDevice.init(device:accessory:)(a1, a2, a3, a5);
  }
  else
  {
    swift_unknownObjectRetain();
    return StaticMatterDevice.init(device:accessory:limitedSnapshotController:)(a1, a2, a3, a4, a5);
  }
}

__n128 sub_251A2E8C0@<Q0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6 = a2;
  uint64_t v8 = *(void **)a1;
  uint64_t v9 = *(void **)(a1 + 8);
  int v10 = *(unsigned __int8 *)(a1 + 16);
  uint64_t v12 = *a4;
  uint64_t v11 = a4[1];
  uint64_t v13 = a4[2];
  uint64_t v33 = a4[3];
  if (!v11) {
    goto LABEL_8;
  }
  if (v10 == 2)
  {
    id v31 = v9;
    sub_251A2B9A0((uint64_t)v8);
    uint64_t v34 = v12;
    v35.n128_u64[0] = v11;
    v35.n128_u64[1] = v13;
    uint64_t v36 = v33;
    uint64_t v14 = sub_251A2E430(v6, a3, (uint64_t)&v34, (uint64_t)v8, v31);
    sub_251A4D4A0(v8, v9, 2);
    if (v14)
    {
      char v15 = 2;
      goto LABEL_9;
    }
LABEL_8:
    HMHome.matterAccessories.getter();
    uint64_t v32 = v11;
    uint64_t v16 = a5;
    uint64_t v17 = v8;
    uint64_t v18 = v9;
    uint64_t v19 = v12;
    unint64_t v21 = v20;
    unint64_t v22 = sub_251A19474(MEMORY[0x263F8EE78]);
    id v23 = v6;
    id v24 = v6;
    uint64_t v14 = sub_251CB6A40(v22, v21, (uint64_t)v24, a3);
    uint64_t v12 = v19;
    uint64_t v9 = v18;
    uint64_t v8 = v17;
    a5 = v16;
    char v15 = v10;
    uint64_t v11 = v32;
    swift_bridgeObjectRelease();

    uint64_t v6 = v23;
    goto LABEL_9;
  }
  if (v10 != 1) {
    goto LABEL_8;
  }
  uint64_t v34 = *a4;
  v35.n128_u64[0] = v11;
  v35.n128_u64[1] = v13;
  uint64_t v36 = v33;
  uint64_t v14 = sub_251A2E430(a2, a3, (uint64_t)&v34, (uint64_t)v8, v9);
  sub_251A4D4A0(v8, v9, 1);
  if (!v14) {
    goto LABEL_8;
  }
  char v15 = 1;
LABEL_9:
  sub_251A4EB8C(v12, v11);
  sub_251A4D4A0(v8, v9, v15);
  id v25 = objc_msgSend(v6, sel_matterControllerID);
  uint64_t v26 = sub_251F356F0();
  uint64_t v28 = v27;

  sub_251A2CD48(v26, v28, v14, &v34);
  uint64_t v29 = v36;
  __n128 result = v35;
  *(void *)a5 = v34;
  *(__n128 *)(a5 + 8) = result;
  *(void *)(a5 + 24) = v29;
  return result;
}

uint64_t MatterStateSnapshot.CommandPayload.hash(into:)(uint64_t a1)
{
  uint64_t v2 = v1;
  if (*(char *)(v2 + 32) < 0)
  {
    uint64_t v4 = *(void *)(v2 + 16);
    char v5 = *(unsigned char *)(v2 + 32);
    uint64_t v6 = *(void *)(v2 + 8);
    sub_251F36CB0();
    sub_251F36CB0();
    sub_251A41E88(a1, v6);
    if (v4)
    {
      sub_251F36CC0();
      sub_251F36CB0();
      uint64_t v7 = *(void *)(v4 + 16);
      if (v7)
      {
        uint64_t v8 = v4 + 32;
        do
        {
          v8 += 8;
          sub_251F36CB0();
          --v7;
        }
        while (v7);
      }
      if (v5) {
        return sub_251F36CC0();
      }
    }
    else
    {
      sub_251F36CC0();
      if (v5) {
        return sub_251F36CC0();
      }
    }
    sub_251F36CC0();
    return sub_251F36CB0();
  }
  sub_251F36CB0();
  return sub_251F36CC0();
}

uint64_t MatterStateSnapshot.CommandPayload.hashValue.getter()
{
  char v1 = *((unsigned char *)v0 + 32);
  long long v2 = v0[1];
  long long v5 = *v0;
  long long v6 = v2;
  char v7 = v1;
  sub_251F36CA0();
  MatterStateSnapshot.CommandPayload.hash(into:)((uint64_t)v4);
  return sub_251F36D00();
}

uint64_t sub_251A2EC14()
{
  char v1 = *((unsigned char *)v0 + 32);
  long long v2 = v0[1];
  long long v5 = *v0;
  long long v6 = v2;
  char v7 = v1;
  sub_251F36CA0();
  MatterStateSnapshot.CommandPayload.hash(into:)((uint64_t)v4);
  return sub_251F36D00();
}

uint64_t sub_251A2EC6C()
{
  char v1 = *((unsigned char *)v0 + 32);
  long long v2 = v0[1];
  long long v5 = *v0;
  long long v6 = v2;
  char v7 = v1;
  sub_251F36CA0();
  MatterStateSnapshot.CommandPayload.hash(into:)((uint64_t)v4);
  return sub_251F36D00();
}

uint64_t MatterStateSnapshot.write(commandPayloads:for:with:timeOut:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  *(unsigned char *)(v6 + 1804) = a6;
  *(void *)(v6 + 5040) = a5;
  *(void *)(v6 + 5032) = a4;
  *(void *)(v6 + 5024) = a3;
  *(void *)(v6 + 5016) = a2;
  *(void *)(v6 + 5008) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E6F0);
  *(void *)(v6 + 5048) = swift_task_alloc();
  *(void *)(v6 + 5056) = swift_task_alloc();
  *(void *)(v6 + 5064) = swift_task_alloc();
  uint64_t v7 = type metadata accessor for StaticEndpoint();
  *(void *)(v6 + 5072) = v7;
  *(void *)(v6 + 5080) = *(void *)(v7 - 8);
  *(void *)(v6 + 5088) = swift_task_alloc();
  *(void *)(v6 + 5096) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251A2EDEC, 0, 0);
}

uint64_t sub_251A2EDEC()
{
  uint64_t v254 = v0;
  if ((*(unsigned char *)(v0 + 1804) & 1) == 0)
  {
    double v1 = *(double *)(v0 + 5040);
    if (qword_26B21ECD0 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_251F350A0();
    __swift_project_value_buffer(v2, (uint64_t)qword_26B21ECB8);
    uint64_t v3 = sub_251F35080();
    os_log_type_t v4 = sub_251F35FB0();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = *(void *)(v0 + 5040);
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 134217984;
      *(void *)(v0 + 5000) = v5;
      sub_251F361D0();
      _os_log_impl(&dword_2519F3000, v3, v4, "setting matter command expected interval to: %f", v6, 0xCu);
      MEMORY[0x2533AC760](v6, -1, -1);
    }

    if (qword_269B9C330 != -1) {
      swift_once();
    }
    id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A20]), sel_initWithDouble_, v1 * 1000.0);
    swift_beginAccess();
    uint64_t v8 = (void *)qword_269B9FC18;
    qword_269B9FC18 = (uint64_t)v7;
  }
  uint64_t v9 = *(void *)(*(void *)(v0 + 5016) + 16);
  *(void *)(v0 + 5104) = v9;
  if (!v9) {
    goto LABEL_60;
  }
  uint64_t v232 = v0 + 16;
  uint64_t v247 = v0 + 272;
  uint64_t v251 = v0 + 528;
  uint64_t v245 = v0 + 784;
  uint64_t v249 = v0 + 1040;
  uint64_t v10 = v0 + 1296;
  uint64_t v11 = v0 + 1552;
  uint64_t v237 = v0 + 1808;
  uint64_t v230 = v0 + 2064;
  uint64_t v239 = v0 + 2320;
  uint64_t v227 = v0 + 2576;
  uint64_t v228 = v0 + 3088;
  v241 = (unsigned char *)(v0 + 4584);
  v234 = (uint64_t *)(v0 + 4984);
  v229 = (uint64_t *)(v0 + 4992);
  swift_bridgeObjectRetain();
  uint64_t v12 = 0;
  uint64_t v13 = 0;
  v243 = (unsigned char *)(v0 + 4544);
  while (1)
  {
    uint64_t v14 = v11;
    uint64_t v15 = v10;
    *(void *)(v0 + 5120) = v13;
    uint64_t v16 = v12;
    *(void *)(v0 + 5112) = v12;
    uint64_t v17 = *(void *)(v0 + 5016) + 40 * v13;
    uint64_t v18 = *(void *)(v17 + 32);
    *(void *)(v0 + 5128) = v18;
    uint64_t v19 = *(void *)(v17 + 40);
    *(void *)(v0 + 5136) = v19;
    uint64_t v20 = *(void *)(v17 + 48);
    *(void *)(v0 + 5144) = v20;
    uint64_t v21 = *(void *)(v17 + 56);
    *(void *)(v0 + 5152) = v21;
    int v22 = *(char *)(v17 + 64);
    *(unsigned char *)(v0 + 1805) = *(unsigned char *)(v17 + 64);
    uint64_t v23 = *(void *)(*(void *)(v0 + 5024) + 16);
    if ((v22 & 0x80000000) == 0)
    {
      *(void *)(v0 + 5160) = v23;
      uint64_t v10 = v15;
      uint64_t v11 = v14;
      uint64_t v12 = v16;
      if (v23)
      {
        uint64_t v24 = *(void *)(v0 + 5080);
        int v25 = *(_DWORD *)(v24 + 80);
        *(_DWORD *)(v0 + 268) = v25;
        uint64_t v26 = *(void *)(v24 + 72);
        *(void *)(v0 + 5176) = v26;
        uint64_t v27 = swift_bridgeObjectRetain();
        uint64_t v28 = 0;
        while (1)
        {
          *(void *)(v0 + 5184) = v28;
          uint64_t v29 = *(void *)(v0 + 5096);
          uint64_t v30 = *(void *)(v0 + 5072);
          sub_251A4ED54(v27 + ((v25 + 32) & ~(unint64_t)v25) + v26 * v28, v29, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
          uint64_t v31 = *(void *)(v29 + *(int *)(v30 + 36));
          uint64_t v32 = *(void *)(v31 + 16);
          if (v18)
          {
            if (v32)
            {
              unint64_t v35 = sub_2519FE614(10);
              if (v36)
              {
                sub_251A1A930(*(void *)(v31 + 56) + (v35 << 8), v247);
                sub_251A1A930(v247, v251);
                if (sub_251A4DB2C(v251) == 1)
                {
                  uint64_t v63 = (uint64_t *)(v0 + 4840);
                  uint64_t v72 = sub_251A4E128(v251);
                  uint64_t v73 = *(void *)v72;
                  *(void *)(v0 + 5192) = *(void *)v72;
                  __int16 v74 = *(_WORD *)(v72 + 8);
                  *(_WORD *)(v0 + 1036) = v74;
                  char v75 = *(unsigned char *)(v72 + 10);
                  *(unsigned char *)(v0 + 1806) = v75;
                  unint64_t v76 = sub_251A19C30((uint64_t)&unk_2702617F8);
                  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CE50);
                  swift_arrayDestroy();
                  LOBYTE(v253[0]) = v75;
                  sub_251AA4920(v76);
                  *(void *)(v0 + 5200) = v77;
                  swift_bridgeObjectRelease();
                  sub_251A1A568(0, (unint64_t *)&qword_269B9CE60);
                  *(void *)(v0 + 4840) = v73;
                  *(_WORD *)(v0 + 4848) = v74;
                  *(unsigned char *)(v0 + 4850) = v75;
                  char v70 = (void *)swift_task_alloc();
                  *(void *)(v0 + 5208) = v70;
                  *char v70 = v0;
                  unint64_t v71 = sub_251A30810;
                  goto LABEL_92;
                }
              }
            }
          }
          else if (v32)
          {
            unint64_t v33 = sub_2519FE614(10);
            if (v34)
            {
              sub_251A1A930(*(void *)(v31 + 56) + (v33 << 8), v245);
              sub_251A1A930(v245, v249);
              if (sub_251A4DB2C(v249) == 1)
              {
                uint64_t v63 = (uint64_t *)(v0 + 4920);
                uint64_t v64 = sub_251A4E128(v249);
                uint64_t v65 = *(void *)v64;
                *(void *)(v0 + 5240) = *(void *)v64;
                __int16 v66 = *(_WORD *)(v64 + 8);
                *(_WORD *)(v0 + 1038) = v66;
                char v67 = *(unsigned char *)(v64 + 10);
                *(unsigned char *)(v0 + 1807) = v67;
                unint64_t v68 = sub_251A19C30((uint64_t)&unk_270261830);
                __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CE50);
                swift_arrayDestroy();
                LOBYTE(v253[0]) = v67;
                sub_251AA4920(v68);
                *(void *)(v0 + 5248) = v69;
                swift_bridgeObjectRelease();
                sub_251A1A568(0, (unint64_t *)&qword_269B9CE60);
                *(void *)(v0 + 4920) = v65;
                *(_WORD *)(v0 + 4928) = v66;
                *(unsigned char *)(v0 + 4930) = v67;
                char v70 = (void *)swift_task_alloc();
                *(void *)(v0 + 5256) = v70;
                *char v70 = v0;
                unint64_t v71 = sub_251A323D0;
                goto LABEL_92;
              }
            }
          }
          uint64_t v37 = *(void *)(v0 + 5160);
          uint64_t v38 = *(void *)(v0 + 5184) + 1;
          sub_251A4EDBC(*(void *)(v0 + 5096), (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
          if (v38 == v37)
          {
            uint64_t v12 = *(void *)(v0 + 5112);
            goto LABEL_12;
          }
          uint64_t v28 = *(void *)(v0 + 5184) + 1;
          uint64_t v26 = *(void *)(v0 + 5176);
          LOBYTE(v25) = *(unsigned char *)(v0 + 268);
          uint64_t v18 = *(void *)(v0 + 5128);
          uint64_t v27 = *(void *)(v0 + 5024);
        }
      }
      goto LABEL_13;
    }
    *(void *)(v0 + 5168) = v23;
    if (v23) {
      break;
    }
    uint64_t v10 = v15;
    uint64_t v11 = v14;
    uint64_t v12 = v16;
LABEL_13:
    if (++v13 == v9)
    {
      swift_bridgeObjectRelease();
LABEL_60:
      if (qword_26B21ECD0 != -1) {
        swift_once();
      }
      uint64_t v78 = sub_251F350A0();
      *(void *)(v0 + 5544) = __swift_project_value_buffer(v78, (uint64_t)qword_26B21ECB8);
      BOOL v79 = sub_251F35080();
      os_log_type_t v80 = sub_251F35FB0();
      if (os_log_type_enabled(v79, v80))
      {
        uint64_t v81 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v81 = 0;
        _os_log_impl(&dword_2519F3000, v79, v80, "setting matter command expected interval back to default", v81, 2u);
        MEMORY[0x2533AC760](v81, -1, -1);
      }

      if (qword_269B9C330 != -1) {
        swift_once();
      }
      if (qword_269B9C328 != -1) {
        swift_once();
      }
      uint64_t v82 = *(void *)(v0 + 5064);
      uint64_t v83 = *(void *)(v0 + 5032);
      uint64_t v84 = (void *)qword_269B9FC10;
      swift_beginAccess();
      uint64_t v85 = (void *)qword_269B9FC18;
      qword_269B9FC18 = (uint64_t)v84;
      id v86 = v84;

      sub_251A1B128(v83, v82, &qword_26B21E6F0);
      uint64_t v87 = type metadata accessor for StaticHome();
      *(void *)(v0 + 5552) = v87;
      uint64_t v88 = *(void *)(v87 - 8);
      int64_t v89 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v88 + 48);
      *(void *)(v0 + 5560) = v89;
      *(void *)(v0 + 5568) = (v88 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
      if (v89(v82, 1, v87) == 1)
      {
        sub_251A1B064(*(void *)(v0 + 5064), &qword_26B21E6F0);
        sub_251A1B128(*(void *)(v0 + 5032), *(void *)(v0 + 5056), &qword_26B21E6F0);
        uint64_t v90 = sub_251F35080();
        os_log_type_t v91 = sub_251F35FB0();
        if (os_log_type_enabled(v90, v91))
        {
          uint64_t v92 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 5560);
          uint64_t v93 = *(void *)(v0 + 5552);
          uint64_t v94 = *(void *)(v0 + 5056);
          uint64_t v95 = *(void *)(v0 + 5048);
          unint64_t v96 = (uint8_t *)swift_slowAlloc();
          uint64_t v97 = swift_slowAlloc();
          v253[0] = v97;
          *(_DWORD *)unint64_t v96 = 136315138;
          sub_251A1B128(v94, v95, &qword_26B21E6F0);
          if (v92(v95, 1, v93) == 1)
          {
            sub_251A1B064(*(void *)(v0 + 5048), &qword_26B21E6F0);
            uint64_t v98 = 0;
            unint64_t v99 = 0xE000000000000000;
          }
          else
          {
            uint64_t v102 = *(void *)(v0 + 5048);
            uint64_t v103 = (uint64_t *)(v102 + *(int *)(*(void *)(v0 + 5552) + 20));
            uint64_t v98 = *v103;
            unint64_t v99 = v103[1];
            swift_bridgeObjectRetain();
            sub_251A4EDBC(v102, (uint64_t (*)(void))type metadata accessor for StaticHome);
          }
          uint64_t v104 = *(void *)(v0 + 5056);
          *(void *)(v0 + 4968) = sub_251A00E84(v98, v99, v253);
          sub_251F361D0();
          swift_bridgeObjectRelease();
          sub_251A1B064(v104, &qword_26B21E6F0);
          _os_log_impl(&dword_2519F3000, v90, v91, "Not able to get HMHome for %s", v96, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x2533AC760](v97, -1, -1);
          MEMORY[0x2533AC760](v96, -1, -1);
        }
        else
        {
          sub_251A1B064(*(void *)(v0 + 5056), &qword_26B21E6F0);
        }

        uint64_t v105 = *(_OWORD **)(v0 + 5008);
        *uint64_t v105 = 0u;
        v105[1] = 0u;
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v106 = *(uint64_t (**)(void))(v0 + 8);
        return v106();
      }
      else
      {
        *(void *)(v0 + 5576) = sub_251F35C80();
        *(void *)(v0 + 5584) = sub_251F35C70();
        uint64_t v101 = sub_251F35C00();
        return MEMORY[0x270FA2498](sub_251A3CBD8, v101, v100);
      }
    }
  }
  uint64_t v39 = *(void *)(v0 + 5080);
  *(_DWORD *)(v0 + 524) = *(_DWORD *)(v39 + 80);
  swift_bridgeObjectRetain();
  sub_251A4DA50(v18, v19, v20, v21, v22);
  uint64_t v40 = 0;
  *(void *)(v0 + 5288) = *(void *)(v39 + 72);
  uint64_t v10 = v15;
  uint64_t v11 = v14;
  uint64_t v12 = v16;
  while (1)
  {
    *(void *)(v0 + 5304) = v40;
    *(void *)(v0 + 5296) = v12;
    sub_251A4ED54(*(void *)(v0 + 5024)+ ((*(unsigned __int8 *)(v0 + 524) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 524))+ *(void *)(v0 + 5288) * v40, *(void *)(v0 + 5088), (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
    *(void *)(v0 + 4568) = &type metadata for HomeKitFeatures;
    unint64_t v41 = sub_251A4DA94();
    *(void *)(v0 + 5312) = v41;
    *(void *)(v0 + 4576) = v41;
    unsigned char *v243 = 4;
    char v42 = sub_251F34F60();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v243);
    if ((v42 & 1) == 0)
    {
      if (qword_269B9C4C0 != -1) {
        swift_once();
      }
      if (byte_269BA38B2 != 1) {
        goto LABEL_40;
      }
    }
    uint64_t v43 = *(void *)(v0 + 5088);
    uint64_t v44 = *(int *)(*(void *)(v0 + 5072) + 36);
    *(_DWORD *)(v0 + 780) = v44;
    uint64_t v45 = *(void *)(v43 + v44);
    if (!*(void *)(v45 + 16)
      || (unint64_t v46 = sub_2519FE614(23), (v47 & 1) == 0)
      || (sub_251A1A930(*(void *)(v45 + 56) + (v46 << 8), v14),
          sub_251A1A930(v14, v10),
          sub_251A4DB2C(v10) != 2))
    {
LABEL_40:
      sub_251A4EDBC(*(void *)(v0 + 5088), (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
      goto LABEL_41;
    }
    char v48 = *(unsigned char *)(v0 + 1805);
    uint64_t v49 = sub_251A4E128(v10);
    uint64_t v50 = v49;
    *(void *)(v0 + 5320) = v49;
    if ((v48 & 1) == 0) {
      break;
    }
    v235 = (long long *)v49;
    uint64_t v54 = v12;
    uint64_t v55 = *(void *)(v0 + 5144);
    if (v55)
    {
      int64_t v132 = *(void *)(v55 + 16);
      if (v132)
      {
        sub_251A1A930(v11, v228);
        uint64_t v133 = sub_251A4E128(v228);
        sub_251A4DB38(v133);
        uint64_t *v229 = MEMORY[0x263F8EE78];
        sub_251A3E1E0(0, v132, 0);
        unint64_t v134 = *(void *)(v55 + 32);
        if ((v134 & 0x8000000000000000) != 0 || HIDWORD(v134)) {
          return sub_251F36670();
        }
        v135 = (uint64_t *)(v0 + 4992);
        uint64_t v136 = *v229;
        unint64_t v138 = *(void *)(*v229 + 16);
        unint64_t v137 = *(void *)(*v229 + 24);
        if (v138 >= v137 >> 1)
        {
          sub_251A3E1E0(v137 > 1, v138 + 1, 1);
          v135 = (uint64_t *)(v0 + 4992);
          uint64_t v136 = *v229;
        }
        *(void *)(v136 + 16) = v138 + 1;
        *(_DWORD *)(v136 + 4 * v138 + 32) = v134;
        int64_t v139 = v132 - 1;
        if (v132 != 1)
        {
          uint64_t v140 = 0;
          unint64_t v141 = v138 + 9;
          v142 = "Not enough bits to represent the passed value";
          do
          {
            unint64_t v143 = *(void *)(*(void *)(v0 + 5144) + 8 * v140 + 40);
            if ((v143 & 0x8000000000000000) != 0 || HIDWORD(v143)) {
              return sub_251F36670();
            }
            uint64_t *v135 = v136;
            unint64_t v144 = *(void *)(v136 + 24);
            if (v141 - 8 >= v144 >> 1)
            {
              v145 = v142;
              sub_251A3E1E0(v144 > 1, v141 - 7, 1);
              v142 = v145;
              v135 = (uint64_t *)(v0 + 4992);
              uint64_t v136 = *v229;
            }
            ++v140;
            *(void *)(v136 + 16) = v141 - 7;
            *(_DWORD *)(v136 + 4 * v141++) = v143;
          }
          while (v139 != v140);
        }
      }
      else
      {
        sub_251A1A930(v11, v227);
        uint64_t v172 = sub_251A4E128(v227);
        sub_251A4DB38(v172);
        uint64_t v136 = MEMORY[0x263F8EE78];
      }
      *(void *)(v0 + 5352) = v136;
      long long v173 = *v235;
      long long v174 = v235[1];
      *(_OWORD *)(v0 + 3376) = v235[2];
      *(_OWORD *)(v0 + 3360) = v174;
      *(_OWORD *)(v0 + 3344) = v173;
      long long v175 = v235[3];
      long long v176 = v235[4];
      long long v177 = v235[5];
      *(_OWORD *)(v0 + 3440) = v235[6];
      *(_OWORD *)(v0 + 3424) = v177;
      *(_OWORD *)(v0 + 3408) = v176;
      *(_OWORD *)(v0 + 3392) = v175;
      long long v178 = v235[7];
      long long v179 = v235[8];
      long long v180 = v235[9];
      *(_OWORD *)(v0 + 3504) = v235[10];
      *(_OWORD *)(v0 + 3488) = v180;
      *(_OWORD *)(v0 + 3472) = v179;
      *(_OWORD *)(v0 + 3456) = v178;
      long long v181 = v235[11];
      long long v182 = v235[12];
      long long v183 = v235[13];
      *(_OWORD *)(v0 + 3564) = *(long long *)((char *)v235 + 220);
      *(_OWORD *)(v0 + 3552) = v183;
      *(_OWORD *)(v0 + 3536) = v182;
      *(_OWORD *)(v0 + 3520) = v181;
      v184 = (void *)swift_task_alloc();
      *(void *)(v0 + 5360) = v184;
      void *v184 = v0;
      v184[1] = sub_251A340FC;
      uint64_t v185 = v136;
      goto LABEL_125;
    }
    sub_251A1A930(v14, v237);
    uint64_t v56 = sub_251A4E128(v237);
    sub_251A4DB38(v56);
    uint64_t v12 = v54;
LABEL_45:
    *(void *)(v0 + 5368) = v12;
    if (*(void *)(*(void *)(v0 + 5136) + 16))
    {
      uint64_t v57 = *(void *)(v0 + 5312);
      *(void *)(v0 + 4608) = &type metadata for HomeKitFeatures;
      *(void *)(v0 + 4616) = v57;
      unsigned char *v241 = 4;
      char v58 = sub_251F34F60();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v241);
      if (v58) {
        goto LABEL_141;
      }
      if (qword_269B9C4C0 != -1) {
        swift_once();
      }
      if (byte_269BA38B2 == 1)
      {
LABEL_141:
        uint64_t v59 = *(void *)(*(void *)(v0 + 5088) + *(int *)(v0 + 780));
        if (*(void *)(v59 + 16))
        {
          unint64_t v60 = sub_2519FE614(23);
          if (v61)
          {
            sub_251A1A930(*(void *)(v59 + 56) + (v60 << 8), v232);
            sub_251A1A930(v232, v230);
            if (sub_251A4DB2C(v230) == 2)
            {
              uint64_t v211 = *(void *)(v0 + 5136);
              v212 = (_OWORD *)sub_251A4E128(v230);
              long long v214 = v212[1];
              long long v213 = v212[2];
              *(_OWORD *)(v0 + 3584) = *v212;
              *(_OWORD *)(v0 + 3600) = v214;
              *(_OWORD *)(v0 + 3616) = v213;
              long long v215 = v212[5];
              long long v216 = v212[6];
              long long v217 = v212[4];
              *(_OWORD *)(v0 + 3632) = v212[3];
              *(_OWORD *)(v0 + 3680) = v216;
              *(_OWORD *)(v0 + 3664) = v215;
              *(_OWORD *)(v0 + 3648) = v217;
              long long v218 = v212[9];
              long long v219 = v212[10];
              long long v220 = v212[8];
              *(_OWORD *)(v0 + 3696) = v212[7];
              *(_OWORD *)(v0 + 3744) = v219;
              *(_OWORD *)(v0 + 3728) = v218;
              *(_OWORD *)(v0 + 3712) = v220;
              long long v222 = v212[12];
              long long v221 = v212[13];
              long long v223 = *(_OWORD *)((char *)v212 + 220);
              *(_OWORD *)(v0 + 3760) = v212[11];
              *(_OWORD *)(v0 + 3804) = v223;
              *(_OWORD *)(v0 + 3792) = v221;
              *(_OWORD *)(v0 + 3776) = v222;
              sub_251A1A930(v232, v0 + 2832);
              uint64_t v224 = sub_251A4E128(v0 + 2832);
              sub_251A4DB38(v224);
              v225 = (void *)swift_task_alloc();
              *(void *)(v0 + 5376) = v225;
              void *v225 = v0;
              v225[1] = sub_251A35A98;
              return StaticRVCClusterGroup.changeToCleanMode(containing:)(v211);
            }
          }
        }
      }
    }
    int v62 = *(unsigned __int8 *)(v0 + 5128);
    if (v62 == 2)
    {
      uint64_t v107 = (uint64_t *)(v0 + 4872);
      uint64_t v108 = *(void *)(v0 + 5320);
      unint64_t v109 = sub_251A19C30((uint64_t)&unk_2702618D8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CE50);
      swift_arrayDestroy();
      uint64_t v110 = *(void *)v108;
      *(void *)(v0 + 5496) = *(void *)v108;
      __int16 v111 = *(_WORD *)(v108 + 8);
      *(_WORD *)(v0 + 1548) = v111;
      *(unsigned char *)(v0 + 2062) = *(unsigned char *)(v108 + 10);
      LOBYTE(v253[0]) = 23;
      sub_251AA4920(v109);
      *(void *)(v0 + 5504) = v112;
      swift_bridgeObjectRelease();
      sub_251A4DB38(v108);
      sub_251A1A568(0, &qword_269B9CE58);
      *(void *)(v0 + 4872) = v110;
      *(_WORD *)(v0 + 4880) = v111;
      *(unsigned char *)(v0 + 4882) = 23;
      uint64_t v113 = (void *)swift_task_alloc();
      *(void *)(v0 + 5512) = v113;
      *uint64_t v113 = v0;
      unint64_t v114 = sub_251A3AF90;
      goto LABEL_84;
    }
    if (v62 == 1)
    {
      uint64_t v115 = *(void *)(v0 + 5320);
      if (*(unsigned char *)(v115 + 112) == 1)
      {
        uint64_t v107 = (uint64_t *)(v0 + 4856);
        unint64_t v116 = sub_251A19C30((uint64_t)&unk_2702618A0);
        __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CE50);
        swift_arrayDestroy();
        uint64_t v117 = *(void *)v115;
        *(void *)(v0 + 5440) = *(void *)v115;
        __int16 v118 = *(_WORD *)(v115 + 8);
        *(_WORD *)(v0 + 1294) = v118;
        char v119 = *(unsigned char *)(v115 + 10);
        *(unsigned char *)(v0 + 2061) = v119;
        LOBYTE(v253[0]) = v119;
        sub_251AA4920(v116);
        *(void *)(v0 + 5448) = v120;
        swift_bridgeObjectRelease();
        sub_251A4DB38(v115);
        sub_251A1A568(0, &qword_269B9CE58);
        *(void *)(v0 + 4856) = v117;
        *(_WORD *)(v0 + 4864) = v118;
        *(unsigned char *)(v0 + 4866) = 23;
        uint64_t v113 = (void *)swift_task_alloc();
        *(void *)(v0 + 5456) = v113;
        *uint64_t v113 = v0;
        unint64_t v114 = sub_251A3AA44;
LABEL_84:
        v113[1] = v114;
        v121 = v107;
LABEL_93:
        return sub_251C4E0D4(v121);
      }
      v158 = (unsigned char *)(v0 + 1550);
      long long v159 = *(_OWORD *)v115;
      long long v160 = *(_OWORD *)(v115 + 16);
      *(_OWORD *)(v0 + 3856) = *(_OWORD *)(v115 + 32);
      *(_OWORD *)(v0 + 3840) = v160;
      *(_OWORD *)(v0 + 3824) = v159;
      long long v161 = *(_OWORD *)(v115 + 48);
      long long v162 = *(_OWORD *)(v115 + 64);
      long long v163 = *(_OWORD *)(v115 + 80);
      *(_OWORD *)(v0 + 3920) = *(_OWORD *)(v115 + 96);
      *(_OWORD *)(v0 + 3904) = v163;
      *(_OWORD *)(v0 + 3888) = v162;
      *(_OWORD *)(v0 + 3872) = v161;
      long long v164 = *(_OWORD *)(v115 + 112);
      long long v165 = *(_OWORD *)(v115 + 128);
      long long v166 = *(_OWORD *)(v115 + 144);
      *(_OWORD *)(v0 + 3984) = *(_OWORD *)(v115 + 160);
      *(_OWORD *)(v0 + 3968) = v166;
      *(_OWORD *)(v0 + 3952) = v165;
      *(_OWORD *)(v0 + 3936) = v164;
      long long v167 = *(_OWORD *)(v115 + 176);
      long long v168 = *(_OWORD *)(v115 + 192);
      long long v169 = *(_OWORD *)(v115 + 208);
      *(_OWORD *)(v0 + 4044) = *(_OWORD *)(v115 + 220);
      *(_OWORD *)(v0 + 4032) = v169;
      *(_OWORD *)(v0 + 4016) = v168;
      *(_OWORD *)(v0 + 4000) = v167;
      *(unsigned char *)(v0 + 1550) = 0;
      v170 = (void *)swift_task_alloc();
      *(void *)(v0 + 5488) = v170;
      void *v170 = v0;
      v171 = sub_251A3AE74;
LABEL_129:
      v170[1] = v171;
      return StaticRVCClusterGroup.changeToRunMode(containing:)(v158);
    }
    if (!*(unsigned char *)(v0 + 5128))
    {
      uint64_t v122 = *(void *)(v0 + 5320);
      uint64_t v123 = *(void *)(v122 + 40);
      if (*(void *)(v123 + 16))
      {
        sub_251F36CA0();
        sub_251F36CD0();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_251F357B0();
        uint64_t v124 = sub_251F36D00();
        uint64_t v125 = -1 << *(unsigned char *)(v123 + 32);
        unint64_t v126 = v124 & ~v125;
        if ((*(void *)(v123 + 56 + ((v126 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v126))
        {
          uint64_t v127 = ~v125;
          while (*(unsigned char *)(*(void *)(v123 + 48) + v126) != 64)
          {
            unint64_t v126 = (v126 + 1) & v127;
            if (((*(void *)(v123 + 56 + ((v126 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v126) & 1) == 0) {
              goto LABEL_90;
            }
          }
          v158 = (unsigned char *)(v0 + 1551);
          v199 = *(long long **)(v0 + 5320);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          long long v200 = *v199;
          long long v201 = v199[1];
          *(_OWORD *)(v0 + 4336) = v199[2];
          *(_OWORD *)(v0 + 4320) = v201;
          *(_OWORD *)(v0 + 4304) = v200;
          long long v202 = v199[3];
          long long v203 = v199[4];
          long long v204 = v199[5];
          *(_OWORD *)(v0 + 4400) = v199[6];
          *(_OWORD *)(v0 + 4384) = v204;
          *(_OWORD *)(v0 + 4368) = v203;
          *(_OWORD *)(v0 + 4352) = v202;
          long long v205 = v199[7];
          long long v206 = v199[8];
          long long v207 = v199[9];
          *(_OWORD *)(v0 + 4464) = v199[10];
          *(_OWORD *)(v0 + 4448) = v207;
          *(_OWORD *)(v0 + 4432) = v206;
          *(_OWORD *)(v0 + 4416) = v205;
          long long v208 = v199[11];
          long long v209 = v199[12];
          long long v210 = v199[13];
          *(_OWORD *)(v0 + 4524) = *(long long *)((char *)v199 + 220);
          *(_OWORD *)(v0 + 4512) = v210;
          *(_OWORD *)(v0 + 4496) = v209;
          *(_OWORD *)(v0 + 4480) = v208;
          *(unsigned char *)(v0 + 1551) = 1;
          v170 = (void *)swift_task_alloc();
          *(void *)(v0 + 5384) = v170;
          void *v170 = v0;
          v171 = sub_251A37478;
          goto LABEL_129;
        }
LABEL_90:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v122 = *(void *)(v0 + 5320);
      }
      uint64_t v63 = (uint64_t *)(v0 + 4936);
      unint64_t v128 = sub_251A19C30((uint64_t)&unk_270261868);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CE50);
      swift_arrayDestroy();
      uint64_t v129 = *(void *)v122;
      *(void *)(v0 + 5392) = *(void *)v122;
      __int16 v130 = *(_WORD *)(v122 + 8);
      *(_WORD *)(v0 + 1292) = v130;
      *(unsigned char *)(v0 + 2060) = *(unsigned char *)(v122 + 10);
      LOBYTE(v253[0]) = 23;
      sub_251AA4920(v128);
      *(void *)(v0 + 5400) = v131;
      swift_bridgeObjectRelease();
      sub_251A4DB38(v122);
      sub_251A1A568(0, &qword_269B9CE58);
      *(void *)(v0 + 4936) = v129;
      *(_WORD *)(v0 + 4944) = v130;
      *(unsigned char *)(v0 + 4946) = 23;
      char v70 = (void *)swift_task_alloc();
      *(void *)(v0 + 5408) = v70;
      *char v70 = v0;
      unint64_t v71 = sub_251A38E04;
LABEL_92:
      v70[1] = v71;
      v121 = v63;
      goto LABEL_93;
    }
    sub_251A4EDBC(*(void *)(v0 + 5088), (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
    sub_251A4EBF0(v14, sub_251A4DC54);
    uint64_t v12 = *(void *)(v0 + 5368);
LABEL_41:
    uint64_t v40 = *(void *)(v0 + 5304) + 1;
    if (v40 == *(void *)(v0 + 5168))
    {
LABEL_12:
      sub_251A4DAE8(*(void *)(v0 + 5128), *(void *)(v0 + 5136), *(void *)(v0 + 5144), *(void *)(v0 + 5152), *(unsigned char *)(v0 + 1805));
      swift_bridgeObjectRelease();
      uint64_t v13 = *(void *)(v0 + 5120);
      uint64_t v9 = *(void *)(v0 + 5104);
      goto LABEL_13;
    }
  }
  if (HIDWORD(*(void *)(v0 + 5152))) {
    return sub_251F36670();
  }
  sub_251A1A930(v14, v239);
  uint64_t v51 = sub_251A4E128(v239);
  sub_251A4DB38(v51);
  uint64_t v52 = (long long *)v50;
  uint64_t v53 = *(void *)(v50 + 120);
  if (!v53) {
    goto LABEL_45;
  }
  v236 = v52;
  uint64_t v146 = v12;
  uint64_t v147 = *(void *)(v53 + 16);
  if (v147)
  {
    swift_bridgeObjectRetain();
    uint64_t v148 = 0;
    uint64_t v149 = MEMORY[0x263F8EE78];
    v150 = (uint64_t *)(v0 + 4984);
    do
    {
      uint64_t v155 = v53 + v148;
      if ((*(unsigned char *)(v53 + v148 + 40) & 1) == 0 && *(_DWORD *)(v155 + 36) == *(_DWORD *)(v0 + 5152))
      {
        int v231 = *(_DWORD *)(v155 + 32);
        uint64_t v156 = *(void *)(v155 + 56);
        uint64_t v252 = *(void *)(v155 + 48);
        __int16 v250 = *(_WORD *)(v155 + 64);
        char v248 = *(unsigned char *)(v155 + 66);
        char v246 = *(unsigned char *)(v155 + 67);
        char v244 = *(unsigned char *)(v155 + 68);
        char v242 = *(unsigned char *)(v155 + 69);
        char v240 = *(unsigned char *)(v155 + 70);
        char v238 = *(unsigned char *)(v155 + 71);
        char v233 = *(unsigned char *)(v155 + 72);
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t *v150 = v149;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_251A3E220(0, *(void *)(v149 + 16) + 1, 1);
          v150 = (uint64_t *)(v0 + 4984);
          uint64_t v149 = *v234;
        }
        unint64_t v152 = *(void *)(v149 + 16);
        unint64_t v151 = *(void *)(v149 + 24);
        if (v152 >= v151 >> 1)
        {
          sub_251A3E220(v151 > 1, v152 + 1, 1);
          v150 = (uint64_t *)(v0 + 4984);
          uint64_t v149 = *v234;
        }
        uint64_t v153 = *(void *)(v0 + 5152);
        *(void *)(v149 + 16) = v152 + 1;
        uint64_t v154 = v149 + 48 * v152;
        *(_DWORD *)(v154 + 32) = v231;
        *(_DWORD *)(v154 + 36) = v153;
        *(unsigned char *)(v154 + 40) = 0;
        *(void *)(v154 + 48) = v252;
        *(void *)(v154 + 56) = v156;
        *(_WORD *)(v154 + 64) = v250;
        *(unsigned char *)(v154 + 66) = v248;
        *(unsigned char *)(v154 + 67) = v246;
        *(unsigned char *)(v154 + 68) = v244;
        *(unsigned char *)(v154 + 69) = v242;
        *(unsigned char *)(v154 + 70) = v240;
        *(unsigned char *)(v154 + 71) = v238;
        *(unsigned char *)(v154 + 72) = v233;
      }
      v148 += 48;
      --v147;
    }
    while (v147);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v149 = MEMORY[0x263F8EE78];
  }
  uint64_t v186 = sub_251A2C95C(v149);
  *(void *)(v0 + 5328) = v186;
  *(void *)(v0 + 5336) = v146;
  swift_release();
  long long v187 = *v236;
  long long v188 = v236[1];
  *(_OWORD *)(v0 + 4096) = v236[2];
  *(_OWORD *)(v0 + 4080) = v188;
  *(_OWORD *)(v0 + 4064) = v187;
  long long v189 = v236[3];
  long long v190 = v236[4];
  long long v191 = v236[5];
  *(_OWORD *)(v0 + 4160) = v236[6];
  *(_OWORD *)(v0 + 4144) = v191;
  *(_OWORD *)(v0 + 4128) = v190;
  *(_OWORD *)(v0 + 4112) = v189;
  long long v192 = v236[7];
  long long v193 = v236[8];
  long long v194 = v236[9];
  *(_OWORD *)(v0 + 4224) = v236[10];
  *(_OWORD *)(v0 + 4208) = v194;
  *(_OWORD *)(v0 + 4192) = v193;
  *(_OWORD *)(v0 + 4176) = v192;
  long long v195 = v236[11];
  long long v196 = v236[12];
  long long v197 = v236[13];
  *(_OWORD *)(v0 + 4284) = *(long long *)((char *)v236 + 220);
  *(_OWORD *)(v0 + 4272) = v197;
  *(_OWORD *)(v0 + 4256) = v196;
  *(_OWORD *)(v0 + 4240) = v195;
  v198 = (void *)swift_task_alloc();
  *(void *)(v0 + 5344) = v198;
  void *v198 = v0;
  v198[1] = sub_251A32760;
  uint64_t v185 = v186;
LABEL_125:
  return StaticRVCClusterGroup.selectAreas(newAreas:)(v185);
}

uint64_t sub_251A30810(uint64_t a1)
{
  *(void *)(*(void *)v1 + 5216) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251A30910, 0, 0);
}

uint64_t sub_251A30910()
{
  uint64_t v1 = *(void *)(v0 + 5200);
  char v2 = *(unsigned char *)(v0 + 1806);
  __int16 v3 = *(_WORD *)(v0 + 1036);
  uint64_t v4 = *(void *)(v0 + 5192);
  *(void *)(v0 + 4792) = 0xD000000000000013;
  *(void *)(v0 + 4800) = 0x8000000251F682D0;
  *(void *)(v0 + 4824) = v4;
  *(_WORD *)(v0 + 4832) = v3;
  *(unsigned char *)(v0 + 4834) = v2;
  ClusterPath.description.getter();
  sub_251F35800();
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(v0 + 4792);
  uint64_t v6 = *(void *)(v0 + 4800);
  *(void *)(v0 + 5224) = v6;
  uint64_t v10 = (uint64_t (*)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_269B9D6F0
                                                                                              + dword_269B9D6F0);
  id v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 5232) = v7;
  *id v7 = v0;
  v7[1] = sub_251A30A48;
  uint64_t v8 = *(void *)(v0 + 5216);
  return v10(28271, 0xE200000000000000, v8, v1, v5, v6);
}

uint64_t sub_251A30A48()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 5216);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA2498](sub_251A30B9C, 0, 0);
}

uint64_t sub_251A30B9C()
{
  uint64_t v242 = v0;
  uint64_t v1 = (unsigned char *)(v0 + 4544);
  uint64_t v226 = v0 + 784;
  uint64_t v228 = v0 + 272;
  uint64_t v230 = v0 + 1040;
  uint64_t v232 = v0 + 528;
  uint64_t v2 = v0 + 1296;
  uint64_t v3 = v0 + 1552;
  uint64_t v220 = v0 + 2064;
  uint64_t v222 = v0 + 16;
  uint64_t v234 = v0 + 1808;
  uint64_t v236 = v0 + 2320;
  uint64_t v217 = v0 + 2576;
  uint64_t v218 = v0 + 3088;
  char v238 = (unsigned char *)(v0 + 4584);
  uint64_t v224 = (uint64_t *)(v0 + 4984);
  long long v219 = (uint64_t *)(v0 + 4992);
  while (1)
  {
    uint64_t v4 = *(void *)(v0 + 5160);
    uint64_t v5 = *(void *)(v0 + 5184) + 1;
    sub_251A4EDBC(*(void *)(v0 + 5096), (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
    if (v5 == v4) {
      break;
    }
    uint64_t v45 = *(void *)(v0 + 5184) + 1;
    uint64_t v43 = *(void *)(v0 + 5176);
    LOBYTE(v42) = *(unsigned char *)(v0 + 268);
    uint64_t v15 = *(void *)(v0 + 5128);
    uint64_t v44 = *(void *)(v0 + 5024);
LABEL_41:
    *(void *)(v0 + 5184) = v45;
    uint64_t v46 = *(void *)(v0 + 5096);
    uint64_t v47 = *(void *)(v0 + 5072);
    sub_251A4ED54(v44 + ((v42 + 32) & ~(unint64_t)v42) + v43 * v45, v46, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
    uint64_t v48 = *(void *)(v46 + *(int *)(v47 + 36));
    uint64_t v49 = *(void *)(v48 + 16);
    if (v15)
    {
      if (v49)
      {
        unint64_t v52 = sub_2519FE614(10);
        if (v53)
        {
          sub_251A1A930(*(void *)(v48 + 56) + (v52 << 8), v228);
          sub_251A1A930(v228, v232);
          if (sub_251A4DB2C(v232) == 1)
          {
            unint64_t v152 = (uint64_t *)(v0 + 4840);
            uint64_t v54 = sub_251A4E128(v232);
            uint64_t v55 = *(void *)v54;
            *(void *)(v0 + 5192) = *(void *)v54;
            __int16 v56 = *(_WORD *)(v54 + 8);
            *(_WORD *)(v0 + 1036) = v56;
            char v57 = *(unsigned char *)(v54 + 10);
            *(unsigned char *)(v0 + 1806) = v57;
            unint64_t v58 = sub_251A19C30((uint64_t)&unk_2702617F8);
            __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CE50);
            swift_arrayDestroy();
            LOBYTE(v241[0]) = v57;
            sub_251AA4920(v58);
            *(void *)(v0 + 5200) = v59;
            swift_bridgeObjectRelease();
            sub_251A1A568(0, (unint64_t *)&qword_269B9CE60);
            *(void *)(v0 + 4840) = v55;
            *(_WORD *)(v0 + 4848) = v56;
            v1[306] = v57;
            long long v159 = (void *)swift_task_alloc();
            *(void *)(v0 + 5208) = v159;
            *long long v159 = v0;
            long long v160 = (uint64_t (*)(uint64_t))sub_251A30810;
            goto LABEL_106;
          }
        }
      }
    }
    else if (v49)
    {
      unint64_t v50 = sub_2519FE614(10);
      if (v51)
      {
        sub_251A1A930(*(void *)(v48 + 56) + (v50 << 8), v226);
        sub_251A1A930(v226, v230);
        if (sub_251A4DB2C(v230) == 1)
        {
          unint64_t v152 = (uint64_t *)(v0 + 4920);
          uint64_t v153 = sub_251A4E128(v230);
          uint64_t v154 = *(void *)v153;
          *(void *)(v0 + 5240) = *(void *)v153;
          __int16 v155 = *(_WORD *)(v153 + 8);
          *(_WORD *)(v0 + 1038) = v155;
          char v156 = *(unsigned char *)(v153 + 10);
          *(unsigned char *)(v0 + 1807) = v156;
          unint64_t v157 = sub_251A19C30((uint64_t)&unk_270261830);
          __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CE50);
          swift_arrayDestroy();
          LOBYTE(v241[0]) = v156;
          sub_251AA4920(v157);
          *(void *)(v0 + 5248) = v158;
          swift_bridgeObjectRelease();
          sub_251A1A568(0, (unint64_t *)&qword_269B9CE60);
          *(void *)(v0 + 4920) = v154;
          *(_WORD *)(v0 + 4928) = v155;
          v1[386] = v156;
          long long v159 = (void *)swift_task_alloc();
          *(void *)(v0 + 5256) = v159;
          *long long v159 = v0;
          long long v160 = sub_251A323D0;
          goto LABEL_106;
        }
      }
    }
  }
  uint64_t v6 = *(void *)(v0 + 5112);
LABEL_4:
  id v7 = v1;
  uint64_t v8 = v2;
  uint64_t v9 = v3;
  sub_251A4DAE8(*(void *)(v0 + 5128), *(void *)(v0 + 5136), *(void *)(v0 + 5144), *(void *)(v0 + 5152), *(unsigned char *)(v0 + 1805));
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(v0 + 5104);
  uint64_t v11 = *(void *)(v0 + 5120);
  uint64_t v12 = v11 + 1;
  if (v11 + 1 == v10)
  {
LABEL_50:
    swift_bridgeObjectRelease();
    if (qword_26B21ECD0 != -1) {
      swift_once();
    }
    uint64_t v60 = sub_251F350A0();
    *(void *)(v0 + 5544) = __swift_project_value_buffer(v60, (uint64_t)qword_26B21ECB8);
    char v61 = sub_251F35080();
    os_log_type_t v62 = sub_251F35FB0();
    if (os_log_type_enabled(v61, v62))
    {
      uint64_t v63 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v63 = 0;
      _os_log_impl(&dword_2519F3000, v61, v62, "setting matter command expected interval back to default", v63, 2u);
      MEMORY[0x2533AC760](v63, -1, -1);
    }

    if (qword_269B9C330 != -1) {
      swift_once();
    }
    if (qword_269B9C328 != -1) {
      swift_once();
    }
    uint64_t v64 = *(void *)(v0 + 5064);
    uint64_t v65 = *(void *)(v0 + 5032);
    __int16 v66 = (void *)qword_269B9FC10;
    swift_beginAccess();
    char v67 = (void *)qword_269B9FC18;
    qword_269B9FC18 = (uint64_t)v66;
    id v68 = v66;

    sub_251A1B128(v65, v64, &qword_26B21E6F0);
    uint64_t v69 = type metadata accessor for StaticHome();
    *(void *)(v0 + 5552) = v69;
    uint64_t v70 = *(void *)(v69 - 8);
    unint64_t v71 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v70 + 48);
    *(void *)(v0 + 5560) = v71;
    *(void *)(v0 + 5568) = (v70 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
    if (v71(v64, 1, v69) == 1)
    {
      sub_251A1B064(*(void *)(v0 + 5064), &qword_26B21E6F0);
      sub_251A1B128(*(void *)(v0 + 5032), *(void *)(v0 + 5056), &qword_26B21E6F0);
      uint64_t v72 = sub_251F35080();
      os_log_type_t v73 = sub_251F35FB0();
      if (os_log_type_enabled(v72, v73))
      {
        __int16 v74 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 5560);
        uint64_t v75 = *(void *)(v0 + 5552);
        uint64_t v76 = *(void *)(v0 + 5056);
        uint64_t v77 = *(void *)(v0 + 5048);
        uint64_t v78 = (uint8_t *)swift_slowAlloc();
        uint64_t v79 = swift_slowAlloc();
        v241[0] = v79;
        *(_DWORD *)uint64_t v78 = 136315138;
        sub_251A1B128(v76, v77, &qword_26B21E6F0);
        if (v74(v77, 1, v75) == 1)
        {
          sub_251A1B064(*(void *)(v0 + 5048), &qword_26B21E6F0);
          uint64_t v80 = 0;
          unint64_t v81 = 0xE000000000000000;
        }
        else
        {
          uint64_t v84 = *(void *)(v0 + 5048);
          uint64_t v85 = (uint64_t *)(v84 + *(int *)(*(void *)(v0 + 5552) + 20));
          uint64_t v80 = *v85;
          unint64_t v81 = v85[1];
          swift_bridgeObjectRetain();
          sub_251A4EDBC(v84, (uint64_t (*)(void))type metadata accessor for StaticHome);
        }
        uint64_t v86 = *(void *)(v0 + 5056);
        *(void *)(v0 + 4968) = sub_251A00E84(v80, v81, v241);
        sub_251F361D0();
        swift_bridgeObjectRelease();
        sub_251A1B064(v86, &qword_26B21E6F0);
        _os_log_impl(&dword_2519F3000, v72, v73, "Not able to get HMHome for %s", v78, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2533AC760](v79, -1, -1);
        MEMORY[0x2533AC760](v78, -1, -1);
      }
      else
      {
        sub_251A1B064(*(void *)(v0 + 5056), &qword_26B21E6F0);
      }

      uint64_t v87 = *(_OWORD **)(v0 + 5008);
      *uint64_t v87 = 0u;
      v87[1] = 0u;
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v88 = *(uint64_t (**)(void))(v0 + 8);
      return v88();
    }
    else
    {
      *(void *)(v0 + 5576) = sub_251F35C80();
      *(void *)(v0 + 5584) = sub_251F35C70();
      uint64_t v83 = sub_251F35C00();
      return MEMORY[0x270FA2498](sub_251A3CBD8, v83, v82);
    }
  }
  uint64_t v13 = *(void *)(v0 + 5024);
  uint64_t v14 = (unsigned char *)(*(void *)(v0 + 5016) + 40 * v11 + 104);
  while (1)
  {
    *(void *)(v0 + 5120) = v12;
    *(void *)(v0 + 5112) = v6;
    uint64_t v15 = *((void *)v14 - 4);
    *(void *)(v0 + 5128) = v15;
    uint64_t v16 = *((void *)v14 - 3);
    *(void *)(v0 + 5136) = v16;
    uint64_t v17 = *((void *)v14 - 2);
    *(void *)(v0 + 5144) = v17;
    uint64_t v18 = *((void *)v14 - 1);
    *(void *)(v0 + 5152) = v18;
    int v19 = (char)*v14;
    *(unsigned char *)(v0 + 1805) = *v14;
    uint64_t v20 = *(void *)(v13 + 16);
    if (v19 < 0) {
      break;
    }
    *(void *)(v0 + 5160) = v20;
    if (v20)
    {
      uint64_t v41 = *(void *)(v0 + 5080);
      int v42 = *(_DWORD *)(v41 + 80);
      *(_DWORD *)(v0 + 268) = v42;
      uint64_t v43 = *(void *)(v41 + 72);
      *(void *)(v0 + 5176) = v43;
      uint64_t v44 = swift_bridgeObjectRetain();
      uint64_t v45 = 0;
      uint64_t v3 = v9;
      uint64_t v2 = v8;
      uint64_t v1 = v7;
      goto LABEL_41;
    }
LABEL_7:
    v14 += 40;
    if (v10 == ++v12) {
      goto LABEL_50;
    }
  }
  *(void *)(v0 + 5168) = v20;
  if (!v20) {
    goto LABEL_7;
  }
  uint64_t v216 = *(void *)(v0 + 5080);
  *(_DWORD *)(v0 + 524) = *(_DWORD *)(v216 + 80);
  swift_bridgeObjectRetain();
  sub_251A4DA50(v15, v16, v17, v18, v19);
  uint64_t v21 = 0;
  *(void *)(v0 + 5288) = *(void *)(v216 + 72);
  uint64_t v3 = v9;
  uint64_t v2 = v8;
  uint64_t v1 = v7;
  while (1)
  {
    *(void *)(v0 + 5304) = v21;
    *(void *)(v0 + 5296) = v6;
    sub_251A4ED54(*(void *)(v0 + 5024)+ ((*(unsigned __int8 *)(v0 + 524) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 524))+ *(void *)(v0 + 5288) * v21, *(void *)(v0 + 5088), (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
    *(void *)(v0 + 4568) = &type metadata for HomeKitFeatures;
    unint64_t v22 = sub_251A4DA94();
    *(void *)(v0 + 5312) = v22;
    *(void *)(v0 + 4576) = v22;
    *id v7 = 4;
    char v23 = sub_251F34F60();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v7);
    if (v23) {
      goto LABEL_131;
    }
    if (qword_269B9C4C0 != -1) {
      swift_once();
    }
    if (byte_269BA38B2 == 1)
    {
LABEL_131:
      uint64_t v24 = *(void *)(v0 + 5088);
      uint64_t v25 = *(int *)(*(void *)(v0 + 5072) + 36);
      *(_DWORD *)(v0 + 780) = v25;
      uint64_t v26 = *(void *)(v24 + v25);
      if (*(void *)(v26 + 16))
      {
        unint64_t v27 = sub_2519FE614(23);
        if (v28)
        {
          sub_251A1A930(*(void *)(v26 + 56) + (v27 << 8), v3);
          sub_251A1A930(v3, v2);
          if (sub_251A4DB2C(v2) == 2) {
            break;
          }
        }
      }
    }
    sub_251A4EDBC(*(void *)(v0 + 5088), (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
LABEL_24:
    uint64_t v21 = *(void *)(v0 + 5304) + 1;
    if (v21 == *(void *)(v0 + 5168)) {
      goto LABEL_4;
    }
  }
  char v29 = *(unsigned char *)(v0 + 1805);
  uint64_t v30 = sub_251A4E128(v2);
  *(void *)(v0 + 5320) = v30;
  if (v29)
  {
    uint64_t v33 = *(void *)(v0 + 5144);
    if (!v33)
    {
      sub_251A1A930(v3, v234);
      uint64_t v34 = sub_251A4E128(v234);
      sub_251A4DB38(v34);
      goto LABEL_28;
    }
    int64_t v114 = *(void *)(v33 + 16);
    if (v114)
    {
      sub_251A1A930(v3, v218);
      uint64_t v115 = sub_251A4E128(v218);
      sub_251A4DB38(v115);
      *long long v219 = MEMORY[0x263F8EE78];
      sub_251A3E1E0(0, v114, 0);
      unint64_t v116 = *(void *)(v33 + 32);
      if ((v116 & 0x8000000000000000) != 0 || HIDWORD(v116)) {
        return sub_251F36670();
      }
      uint64_t v117 = (uint64_t *)(v0 + 4992);
      uint64_t v118 = *v219;
      unint64_t v120 = *(void *)(*v219 + 16);
      unint64_t v119 = *(void *)(*v219 + 24);
      if (v120 >= v119 >> 1)
      {
        sub_251A3E1E0(v119 > 1, v120 + 1, 1);
        uint64_t v117 = (uint64_t *)(v0 + 4992);
        uint64_t v118 = *v219;
      }
      *(void *)(v118 + 16) = v120 + 1;
      *(_DWORD *)(v118 + 4 * v120 + 32) = v116;
      int64_t v121 = v114 - 1;
      if (v114 != 1)
      {
        uint64_t v122 = 0;
        unint64_t v123 = v120 + 9;
        uint64_t v124 = "Not enough bits to represent the passed value";
        do
        {
          unint64_t v125 = *(void *)(*(void *)(v0 + 5144) + 8 * v122 + 40);
          if ((v125 & 0x8000000000000000) != 0 || HIDWORD(v125)) {
            return sub_251F36670();
          }
          *uint64_t v117 = v118;
          unint64_t v126 = *(void *)(v118 + 24);
          if (v123 - 8 >= v126 >> 1)
          {
            uint64_t v127 = v124;
            sub_251A3E1E0(v126 > 1, v123 - 7, 1);
            uint64_t v124 = v127;
            uint64_t v117 = (uint64_t *)(v0 + 4992);
            uint64_t v118 = *v219;
          }
          ++v122;
          *(void *)(v118 + 16) = v123 - 7;
          *(_DWORD *)(v118 + 4 * v123++) = v125;
        }
        while (v121 != v122);
      }
    }
    else
    {
      sub_251A1A930(v3, v217);
      uint64_t v161 = sub_251A4E128(v217);
      sub_251A4DB38(v161);
      uint64_t v118 = MEMORY[0x263F8EE78];
    }
    *(void *)(v0 + 5352) = v118;
    long long v162 = *(_OWORD *)v30;
    long long v163 = *(_OWORD *)(v30 + 16);
    *(_OWORD *)(v0 + 3376) = *(_OWORD *)(v30 + 32);
    *(_OWORD *)(v0 + 3360) = v163;
    *(_OWORD *)(v0 + 3344) = v162;
    long long v164 = *(_OWORD *)(v30 + 48);
    long long v165 = *(_OWORD *)(v30 + 64);
    long long v166 = *(_OWORD *)(v30 + 80);
    *(_OWORD *)(v0 + 3440) = *(_OWORD *)(v30 + 96);
    *(_OWORD *)(v0 + 3424) = v166;
    *(_OWORD *)(v0 + 3408) = v165;
    *(_OWORD *)(v0 + 3392) = v164;
    long long v167 = *(_OWORD *)(v30 + 112);
    long long v168 = *(_OWORD *)(v30 + 128);
    long long v169 = *(_OWORD *)(v30 + 144);
    *(_OWORD *)(v0 + 3504) = *(_OWORD *)(v30 + 160);
    *(_OWORD *)(v0 + 3488) = v169;
    *(_OWORD *)(v0 + 3472) = v168;
    *(_OWORD *)(v0 + 3456) = v167;
    long long v170 = *(_OWORD *)(v30 + 176);
    long long v171 = *(_OWORD *)(v30 + 192);
    long long v172 = *(_OWORD *)(v30 + 208);
    *(_OWORD *)(v0 + 3564) = *(_OWORD *)(v30 + 220);
    *(_OWORD *)(v0 + 3552) = v172;
    *(_OWORD *)(v0 + 3536) = v171;
    *(_OWORD *)(v0 + 3520) = v170;
    long long v173 = (void *)swift_task_alloc();
    *(void *)(v0 + 5360) = v173;
    *long long v173 = v0;
    v173[1] = sub_251A340FC;
    uint64_t v174 = v118;
    goto LABEL_115;
  }
  if (HIDWORD(*(void *)(v0 + 5152))) {
    return sub_251F36670();
  }
  sub_251A1A930(v3, v236);
  uint64_t v31 = sub_251A4E128(v236);
  sub_251A4DB38(v31);
  uint64_t v32 = *(void *)(v30 + 120);
  if (v32)
  {
    uint64_t v128 = *(void *)(v32 + 16);
    if (v128)
    {
      swift_bridgeObjectRetain();
      uint64_t v129 = 0;
      uint64_t v130 = MEMORY[0x263F8EE78];
      uint64_t v131 = (uint64_t *)(v0 + 4984);
      do
      {
        uint64_t v136 = v32 + v129;
        if ((*(unsigned char *)(v32 + v129 + 40) & 1) == 0 && *(_DWORD *)(v136 + 36) == *(_DWORD *)(v0 + 5152))
        {
          int v221 = *(_DWORD *)(v136 + 32);
          uint64_t v239 = *(void *)(v136 + 56);
          uint64_t v240 = *(void *)(v136 + 48);
          __int16 v237 = *(_WORD *)(v136 + 64);
          char v235 = *(unsigned char *)(v136 + 66);
          char v233 = *(unsigned char *)(v136 + 67);
          char v231 = *(unsigned char *)(v136 + 68);
          char v229 = *(unsigned char *)(v136 + 69);
          char v227 = *(unsigned char *)(v136 + 70);
          char v225 = *(unsigned char *)(v136 + 71);
          char v223 = *(unsigned char *)(v136 + 72);
          swift_bridgeObjectRetain();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *uint64_t v131 = v130;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_251A3E220(0, *(void *)(v130 + 16) + 1, 1);
            uint64_t v131 = (uint64_t *)(v0 + 4984);
            uint64_t v130 = *v224;
          }
          unint64_t v133 = *(void *)(v130 + 16);
          unint64_t v132 = *(void *)(v130 + 24);
          if (v133 >= v132 >> 1)
          {
            sub_251A3E220(v132 > 1, v133 + 1, 1);
            uint64_t v131 = (uint64_t *)(v0 + 4984);
            uint64_t v130 = *v224;
          }
          uint64_t v134 = *(void *)(v0 + 5152);
          *(void *)(v130 + 16) = v133 + 1;
          uint64_t v135 = v130 + 48 * v133;
          *(_DWORD *)(v135 + 32) = v221;
          *(_DWORD *)(v135 + 36) = v134;
          *(unsigned char *)(v135 + 40) = 0;
          *(void *)(v135 + 48) = v240;
          *(void *)(v135 + 56) = v239;
          *(_WORD *)(v135 + 64) = v237;
          *(unsigned char *)(v135 + 66) = v235;
          *(unsigned char *)(v135 + 67) = v233;
          *(unsigned char *)(v135 + 68) = v231;
          *(unsigned char *)(v135 + 69) = v229;
          *(unsigned char *)(v135 + 70) = v227;
          *(unsigned char *)(v135 + 71) = v225;
          *(unsigned char *)(v135 + 72) = v223;
        }
        v129 += 48;
        --v128;
      }
      while (v128);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v130 = MEMORY[0x263F8EE78];
    }
    uint64_t v175 = sub_251A2C95C(v130);
    *(void *)(v0 + 5328) = v175;
    *(void *)(v0 + 5336) = v6;
    swift_release();
    long long v176 = *(_OWORD *)v30;
    long long v177 = *(_OWORD *)(v30 + 16);
    *(_OWORD *)(v0 + 4096) = *(_OWORD *)(v30 + 32);
    *(_OWORD *)(v0 + 4080) = v177;
    *(_OWORD *)(v0 + 4064) = v176;
    long long v178 = *(_OWORD *)(v30 + 48);
    long long v179 = *(_OWORD *)(v30 + 64);
    long long v180 = *(_OWORD *)(v30 + 80);
    *(_OWORD *)(v0 + 4160) = *(_OWORD *)(v30 + 96);
    *(_OWORD *)(v0 + 4144) = v180;
    *(_OWORD *)(v0 + 4128) = v179;
    *(_OWORD *)(v0 + 4112) = v178;
    long long v181 = *(_OWORD *)(v30 + 112);
    long long v182 = *(_OWORD *)(v30 + 128);
    long long v183 = *(_OWORD *)(v30 + 144);
    *(_OWORD *)(v0 + 4224) = *(_OWORD *)(v30 + 160);
    *(_OWORD *)(v0 + 4208) = v183;
    *(_OWORD *)(v0 + 4192) = v182;
    *(_OWORD *)(v0 + 4176) = v181;
    long long v184 = *(_OWORD *)(v30 + 176);
    long long v185 = *(_OWORD *)(v30 + 192);
    long long v186 = *(_OWORD *)(v30 + 208);
    *(_OWORD *)(v0 + 4284) = *(_OWORD *)(v30 + 220);
    *(_OWORD *)(v0 + 4272) = v186;
    *(_OWORD *)(v0 + 4256) = v185;
    *(_OWORD *)(v0 + 4240) = v184;
    long long v187 = (void *)swift_task_alloc();
    *(void *)(v0 + 5344) = v187;
    *long long v187 = v0;
    v187[1] = sub_251A32760;
    uint64_t v174 = v175;
LABEL_115:
    return StaticRVCClusterGroup.selectAreas(newAreas:)(v174);
  }
LABEL_28:
  *(void *)(v0 + 5368) = v6;
  if (*(void *)(*(void *)(v0 + 5136) + 16))
  {
    uint64_t v35 = *(void *)(v0 + 5312);
    *(void *)(v0 + 4608) = &type metadata for HomeKitFeatures;
    *(void *)(v0 + 4616) = v35;
    *char v238 = 4;
    char v36 = sub_251F34F60();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v238);
    if (v36) {
      goto LABEL_132;
    }
    if (qword_269B9C4C0 != -1) {
      swift_once();
    }
    if (byte_269BA38B2 == 1)
    {
LABEL_132:
      uint64_t v37 = *(void *)(*(void *)(v0 + 5088) + *(int *)(v0 + 780));
      if (*(void *)(v37 + 16))
      {
        unint64_t v38 = sub_2519FE614(23);
        if (v39)
        {
          sub_251A1A930(*(void *)(v37 + 56) + (v38 << 8), v222);
          sub_251A1A930(v222, v220);
          if (sub_251A4DB2C(v220) == 2)
          {
            uint64_t v200 = *(void *)(v0 + 5136);
            long long v201 = (_OWORD *)sub_251A4E128(v220);
            long long v203 = v201[1];
            long long v202 = v201[2];
            *(_OWORD *)(v0 + 3584) = *v201;
            *(_OWORD *)(v0 + 3600) = v203;
            *(_OWORD *)(v0 + 3616) = v202;
            long long v204 = v201[5];
            long long v205 = v201[6];
            long long v206 = v201[4];
            *(_OWORD *)(v0 + 3632) = v201[3];
            *(_OWORD *)(v0 + 3680) = v205;
            *(_OWORD *)(v0 + 3664) = v204;
            *(_OWORD *)(v0 + 3648) = v206;
            long long v207 = v201[9];
            long long v208 = v201[10];
            long long v209 = v201[8];
            *(_OWORD *)(v0 + 3696) = v201[7];
            *(_OWORD *)(v0 + 3744) = v208;
            *(_OWORD *)(v0 + 3728) = v207;
            *(_OWORD *)(v0 + 3712) = v209;
            long long v211 = v201[12];
            long long v210 = v201[13];
            long long v212 = *(_OWORD *)((char *)v201 + 220);
            *(_OWORD *)(v0 + 3760) = v201[11];
            *(_OWORD *)(v0 + 3804) = v212;
            *(_OWORD *)(v0 + 3792) = v210;
            *(_OWORD *)(v0 + 3776) = v211;
            sub_251A1A930(v222, v0 + 2832);
            uint64_t v213 = sub_251A4E128(v0 + 2832);
            sub_251A4DB38(v213);
            long long v214 = (void *)swift_task_alloc();
            *(void *)(v0 + 5376) = v214;
            *long long v214 = v0;
            v214[1] = sub_251A35A98;
            return StaticRVCClusterGroup.changeToCleanMode(containing:)(v200);
          }
        }
      }
    }
  }
  int v40 = *(unsigned __int8 *)(v0 + 5128);
  if (v40 == 2)
  {
    int64_t v89 = (uint64_t *)(v0 + 4872);
    uint64_t v90 = *(void *)(v0 + 5320);
    unint64_t v91 = sub_251A19C30((uint64_t)&unk_2702618D8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CE50);
    swift_arrayDestroy();
    uint64_t v92 = *(void *)v90;
    *(void *)(v0 + 5496) = *(void *)v90;
    __int16 v93 = *(_WORD *)(v90 + 8);
    *(_WORD *)(v0 + 1548) = v93;
    *(unsigned char *)(v0 + 2062) = *(unsigned char *)(v90 + 10);
    LOBYTE(v241[0]) = 23;
    sub_251AA4920(v91);
    *(void *)(v0 + 5504) = v94;
    swift_bridgeObjectRelease();
    sub_251A4DB38(v90);
    sub_251A1A568(0, &qword_269B9CE58);
    *(void *)(v0 + 4872) = v92;
    *(_WORD *)(v0 + 4880) = v93;
    v7[338] = 23;
    uint64_t v95 = (void *)swift_task_alloc();
    *(void *)(v0 + 5512) = v95;
    *uint64_t v95 = v0;
    unint64_t v96 = sub_251A3AF90;
LABEL_74:
    v95[1] = v96;
    uint64_t v103 = v89;
    goto LABEL_107;
  }
  if (v40 == 1)
  {
    uint64_t v97 = *(void *)(v0 + 5320);
    if (*(unsigned char *)(v97 + 112) == 1)
    {
      int64_t v89 = (uint64_t *)(v0 + 4856);
      unint64_t v98 = sub_251A19C30((uint64_t)&unk_2702618A0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CE50);
      swift_arrayDestroy();
      uint64_t v99 = *(void *)v97;
      *(void *)(v0 + 5440) = *(void *)v97;
      __int16 v100 = *(_WORD *)(v97 + 8);
      *(_WORD *)(v0 + 1294) = v100;
      char v101 = *(unsigned char *)(v97 + 10);
      *(unsigned char *)(v0 + 2061) = v101;
      LOBYTE(v241[0]) = v101;
      sub_251AA4920(v98);
      *(void *)(v0 + 5448) = v102;
      swift_bridgeObjectRelease();
      sub_251A4DB38(v97);
      sub_251A1A568(0, &qword_269B9CE58);
      *(void *)(v0 + 4856) = v99;
      *(_WORD *)(v0 + 4864) = v100;
      v7[322] = 23;
      uint64_t v95 = (void *)swift_task_alloc();
      *(void *)(v0 + 5456) = v95;
      *uint64_t v95 = v0;
      unint64_t v96 = sub_251A3AA44;
      goto LABEL_74;
    }
    unint64_t v138 = (unsigned char *)(v0 + 1550);
    long long v139 = *(_OWORD *)v97;
    long long v140 = *(_OWORD *)(v97 + 16);
    *(_OWORD *)(v0 + 3856) = *(_OWORD *)(v97 + 32);
    *(_OWORD *)(v0 + 3840) = v140;
    *(_OWORD *)(v0 + 3824) = v139;
    long long v141 = *(_OWORD *)(v97 + 48);
    long long v142 = *(_OWORD *)(v97 + 64);
    long long v143 = *(_OWORD *)(v97 + 80);
    *(_OWORD *)(v0 + 3920) = *(_OWORD *)(v97 + 96);
    *(_OWORD *)(v0 + 3904) = v143;
    *(_OWORD *)(v0 + 3888) = v142;
    *(_OWORD *)(v0 + 3872) = v141;
    long long v144 = *(_OWORD *)(v97 + 112);
    long long v145 = *(_OWORD *)(v97 + 128);
    long long v146 = *(_OWORD *)(v97 + 144);
    *(_OWORD *)(v0 + 3984) = *(_OWORD *)(v97 + 160);
    *(_OWORD *)(v0 + 3968) = v146;
    *(_OWORD *)(v0 + 3952) = v145;
    *(_OWORD *)(v0 + 3936) = v144;
    long long v147 = *(_OWORD *)(v97 + 176);
    long long v148 = *(_OWORD *)(v97 + 192);
    long long v149 = *(_OWORD *)(v97 + 208);
    *(_OWORD *)(v0 + 4044) = *(_OWORD *)(v97 + 220);
    *(_OWORD *)(v0 + 4032) = v149;
    *(_OWORD *)(v0 + 4016) = v148;
    *(_OWORD *)(v0 + 4000) = v147;
    *(unsigned char *)(v0 + 1550) = 0;
    v150 = (void *)swift_task_alloc();
    *(void *)(v0 + 5488) = v150;
    void *v150 = v0;
    unint64_t v151 = sub_251A3AE74;
LABEL_119:
    v150[1] = v151;
    return StaticRVCClusterGroup.changeToRunMode(containing:)(v138);
  }
  if (*(unsigned char *)(v0 + 5128))
  {
    sub_251A4EDBC(*(void *)(v0 + 5088), (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
    sub_251A4EBF0(v3, sub_251A4DC54);
    uint64_t v6 = *(void *)(v0 + 5368);
    goto LABEL_24;
  }
  uint64_t v104 = *(void *)(v0 + 5320);
  uint64_t v105 = *(void *)(v104 + 40);
  if (*(void *)(v105 + 16))
  {
    sub_251F36CA0();
    sub_251F36CD0();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_251F357B0();
    uint64_t v106 = sub_251F36D00();
    uint64_t v107 = -1 << *(unsigned char *)(v105 + 32);
    unint64_t v108 = v106 & ~v107;
    if ((*(void *)(v105 + 56 + ((v108 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v108))
    {
      uint64_t v109 = ~v107;
      while (*(unsigned char *)(*(void *)(v105 + 48) + v108) != 64)
      {
        unint64_t v108 = (v108 + 1) & v109;
        if (((*(void *)(v105 + 56 + ((v108 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v108) & 1) == 0) {
          goto LABEL_80;
        }
      }
      unint64_t v138 = (unsigned char *)(v0 + 1551);
      long long v188 = *(long long **)(v0 + 5320);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      long long v189 = *v188;
      long long v190 = v188[1];
      *(_OWORD *)(v0 + 4336) = v188[2];
      *(_OWORD *)(v0 + 4320) = v190;
      *(_OWORD *)(v0 + 4304) = v189;
      long long v191 = v188[3];
      long long v192 = v188[4];
      long long v193 = v188[5];
      *(_OWORD *)(v0 + 4400) = v188[6];
      *(_OWORD *)(v0 + 4384) = v193;
      *(_OWORD *)(v0 + 4368) = v192;
      *(_OWORD *)(v0 + 4352) = v191;
      long long v194 = v188[7];
      long long v195 = v188[8];
      long long v196 = v188[9];
      *(_OWORD *)(v0 + 4464) = v188[10];
      *(_OWORD *)(v0 + 4448) = v196;
      *(_OWORD *)(v0 + 4432) = v195;
      *(_OWORD *)(v0 + 4416) = v194;
      long long v197 = v188[11];
      long long v198 = v188[12];
      long long v199 = v188[13];
      *(_OWORD *)(v0 + 4524) = *(long long *)((char *)v188 + 220);
      *(_OWORD *)(v0 + 4512) = v199;
      *(_OWORD *)(v0 + 4496) = v198;
      *(_OWORD *)(v0 + 4480) = v197;
      *(unsigned char *)(v0 + 1551) = 1;
      v150 = (void *)swift_task_alloc();
      *(void *)(v0 + 5384) = v150;
      void *v150 = v0;
      unint64_t v151 = sub_251A37478;
      goto LABEL_119;
    }
LABEL_80:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v104 = *(void *)(v0 + 5320);
  }
  unint64_t v152 = (uint64_t *)(v0 + 4936);
  unint64_t v110 = sub_251A19C30((uint64_t)&unk_270261868);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CE50);
  swift_arrayDestroy();
  uint64_t v111 = *(void *)v104;
  *(void *)(v0 + 5392) = *(void *)v104;
  __int16 v112 = *(_WORD *)(v104 + 8);
  *(_WORD *)(v0 + 1292) = v112;
  *(unsigned char *)(v0 + 2060) = *(unsigned char *)(v104 + 10);
  LOBYTE(v241[0]) = 23;
  sub_251AA4920(v110);
  *(void *)(v0 + 5400) = v113;
  swift_bridgeObjectRelease();
  sub_251A4DB38(v104);
  sub_251A1A568(0, &qword_269B9CE58);
  *(void *)(v0 + 4936) = v111;
  *(_WORD *)(v0 + 4944) = v112;
  v7[402] = 23;
  long long v159 = (void *)swift_task_alloc();
  *(void *)(v0 + 5408) = v159;
  *long long v159 = v0;
  long long v160 = sub_251A38E04;
LABEL_106:
  v159[1] = v160;
  uint64_t v103 = v152;
LABEL_107:
  return sub_251C4E0D4(v103);
}

uint64_t sub_251A323D0(uint64_t a1)
{
  *(void *)(*(void *)v1 + 5264) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251A324D0, 0, 0);
}

uint64_t sub_251A324D0()
{
  uint64_t v1 = *(void *)(v0 + 5248);
  char v2 = *(unsigned char *)(v0 + 1807);
  __int16 v3 = *(_WORD *)(v0 + 1038);
  uint64_t v4 = *(void *)(v0 + 5240);
  *(void *)(v0 + 4760) = 0xD000000000000013;
  *(void *)(v0 + 4768) = 0x8000000251F682D0;
  *(void *)(v0 + 4952) = v4;
  *(_WORD *)(v0 + 4960) = v3;
  *(unsigned char *)(v0 + 4962) = v2;
  ClusterPath.description.getter();
  sub_251F35800();
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(v0 + 4760);
  uint64_t v6 = *(void *)(v0 + 4768);
  *(void *)(v0 + 5272) = v6;
  uint64_t v10 = (uint64_t (*)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_269B9D6F8
                                                                                              + dword_269B9D6F8);
  id v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 5280) = v7;
  *id v7 = v0;
  v7[1] = sub_251A3260C;
  uint64_t v8 = *(void *)(v0 + 5264);
  return v10(6710895, 0xE300000000000000, v8, v1, v5, v6);
}

uint64_t sub_251A3260C()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 5264);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA2498](sub_251A30B9C, 0, 0);
}

uint64_t sub_251A32760()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_251A32878, 0, 0);
}

uint64_t sub_251A32878()
{
  uint64_t v251 = v0;
  uint64_t v1 = (unsigned char *)(v0 + 4544);
  uint64_t v2 = v0 + 528;
  uint64_t v243 = v0 + 784;
  uint64_t v245 = v0 + 272;
  uint64_t v247 = v0 + 1040;
  uint64_t v3 = v0 + 1552;
  uint64_t v231 = v0 + 2064;
  uint64_t v233 = v0 + 16;
  uint64_t v227 = v0 + 1808;
  uint64_t v229 = v0 + 2320;
  uint64_t v223 = v0 + 2576;
  uint64_t v224 = v0 + 3088;
  uint64_t v237 = v0 + 1296;
  uint64_t v239 = (unsigned char *)(v0 + 4584);
  uint64_t v4 = v0 + 4680;
  uint64_t v5 = v0 + 4968;
  uint64_t v226 = (uint64_t *)(v0 + 4984);
  char v225 = (uint64_t *)(v0 + 4992);
  uint64_t v6 = *(void *)(v0 + 5336);
  do
  {
    while (1)
    {
      *(void *)(v0 + 5368) = v6;
      if (*(void *)(*(void *)(v0 + 5136) + 16))
      {
        uint64_t v7 = *(void *)(v0 + 5312);
        *(void *)(v0 + 4608) = &type metadata for HomeKitFeatures;
        *(void *)(v0 + 4616) = v7;
        *uint64_t v239 = 4;
        char v8 = sub_251F34F60();
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v239);
        if (v8) {
          goto LABEL_133;
        }
        if (qword_269B9C4C0 != -1) {
          swift_once();
        }
        if (byte_269BA38B2 == 1)
        {
LABEL_133:
          uint64_t v9 = *(void *)(*(void *)(v0 + 5088) + *(int *)(v0 + 780));
          if (*(void *)(v9 + 16))
          {
            unint64_t v10 = sub_2519FE614(23);
            if (v11)
            {
              sub_251A1A930(*(void *)(v9 + 56) + (v10 << 8), v233);
              sub_251A1A930(v233, v231);
              if (sub_251A4DB2C(v231) == 2)
              {
                uint64_t v154 = *(void *)(v0 + 5136);
                __int16 v155 = (_OWORD *)sub_251A4E128(v231);
                long long v157 = v155[1];
                long long v156 = v155[2];
                *(_OWORD *)(v0 + 3584) = *v155;
                *(_OWORD *)(v0 + 3600) = v157;
                *(_OWORD *)(v0 + 3616) = v156;
                long long v158 = v155[5];
                long long v159 = v155[6];
                long long v160 = v155[4];
                *(_OWORD *)(v0 + 3632) = v155[3];
                *(_OWORD *)(v0 + 3680) = v159;
                *(_OWORD *)(v0 + 3664) = v158;
                *(_OWORD *)(v0 + 3648) = v160;
                long long v161 = v155[9];
                long long v162 = v155[10];
                long long v163 = v155[8];
                *(_OWORD *)(v0 + 3696) = v155[7];
                *(_OWORD *)(v0 + 3744) = v162;
                *(_OWORD *)(v0 + 3728) = v161;
                *(_OWORD *)(v0 + 3712) = v163;
                long long v165 = v155[12];
                long long v164 = v155[13];
                long long v166 = *(_OWORD *)((char *)v155 + 220);
                *(_OWORD *)(v0 + 3760) = v155[11];
                *(_OWORD *)(v0 + 3804) = v166;
                *(_OWORD *)(v0 + 3792) = v164;
                *(_OWORD *)(v0 + 3776) = v165;
                sub_251A1A930(v233, v0 + 2832);
                uint64_t v167 = sub_251A4E128(v0 + 2832);
                sub_251A4DB38(v167);
                long long v168 = (void *)swift_task_alloc();
                *(void *)(v0 + 5376) = v168;
                *long long v168 = v0;
                v168[1] = sub_251A35A98;
                return StaticRVCClusterGroup.changeToCleanMode(containing:)(v154);
              }
            }
          }
        }
      }
      int v12 = *(unsigned __int8 *)(v0 + 5128);
      if (v12 == 2)
      {
        uint64_t v104 = *(void *)(v0 + 5320);
        unint64_t v105 = sub_251A19C30((uint64_t)&unk_2702618D8);
        __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CE50);
        swift_arrayDestroy();
        uint64_t v106 = *(void *)v104;
        *(void *)(v0 + 5496) = *(void *)v104;
        __int16 v107 = *(_WORD *)(v104 + 8);
        *(_WORD *)(v0 + 1548) = v107;
        *(unsigned char *)(v0 + 2062) = *(unsigned char *)(v104 + 10);
        LOBYTE(v250[0]) = 23;
        sub_251AA4920(v105);
        *(void *)(v0 + 5504) = v108;
        swift_bridgeObjectRelease();
        sub_251A4DB38(v104);
        sub_251A1A568(0, &qword_269B9CE58);
        *(void *)(v0 + 4872) = v106;
        *(_WORD *)(v0 + 4880) = v107;
        v1[338] = 23;
        uint64_t v109 = (void *)swift_task_alloc();
        *(void *)(v0 + 5512) = v109;
        *uint64_t v109 = v0;
        v109[1] = sub_251A3AF90;
        unint64_t v110 = (uint64_t *)(v0 + 4872);
LABEL_85:
        return sub_251C4E0D4(v110);
      }
      if (v12 == 1)
      {
        uint64_t v111 = *(void *)(v0 + 5320);
        if (*(unsigned char *)(v111 + 112) != 1)
        {
          uint64_t v124 = (unsigned char *)(v0 + 1550);
          long long v125 = *(_OWORD *)v111;
          long long v126 = *(_OWORD *)(v111 + 16);
          *(_OWORD *)(v0 + 3856) = *(_OWORD *)(v111 + 32);
          *(_OWORD *)(v0 + 3840) = v126;
          *(_OWORD *)(v0 + 3824) = v125;
          long long v127 = *(_OWORD *)(v111 + 48);
          long long v128 = *(_OWORD *)(v111 + 64);
          long long v129 = *(_OWORD *)(v111 + 80);
          *(_OWORD *)(v0 + 3920) = *(_OWORD *)(v111 + 96);
          *(_OWORD *)(v0 + 3904) = v129;
          *(_OWORD *)(v0 + 3888) = v128;
          *(_OWORD *)(v0 + 3872) = v127;
          long long v130 = *(_OWORD *)(v111 + 112);
          long long v131 = *(_OWORD *)(v111 + 128);
          long long v132 = *(_OWORD *)(v111 + 144);
          *(_OWORD *)(v0 + 3984) = *(_OWORD *)(v111 + 160);
          *(_OWORD *)(v0 + 3968) = v132;
          *(_OWORD *)(v0 + 3952) = v131;
          *(_OWORD *)(v0 + 3936) = v130;
          long long v133 = *(_OWORD *)(v111 + 176);
          long long v134 = *(_OWORD *)(v111 + 192);
          long long v135 = *(_OWORD *)(v111 + 208);
          *(_OWORD *)(v0 + 4044) = *(_OWORD *)(v111 + 220);
          *(_OWORD *)(v0 + 4032) = v135;
          *(_OWORD *)(v0 + 4016) = v134;
          *(_OWORD *)(v0 + 4000) = v133;
          *(unsigned char *)(v0 + 1550) = 0;
          uint64_t v136 = (void *)swift_task_alloc();
          *(void *)(v0 + 5488) = v136;
          *uint64_t v136 = v0;
          unint64_t v137 = sub_251A3AE74;
          goto LABEL_89;
        }
        uint64_t v87 = (uint64_t *)(v0 + 4856);
        unint64_t v112 = sub_251A19C30((uint64_t)&unk_2702618A0);
        __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CE50);
        swift_arrayDestroy();
        uint64_t v113 = *(void *)v111;
        *(void *)(v0 + 5440) = *(void *)v111;
        __int16 v114 = *(_WORD *)(v111 + 8);
        *(_WORD *)(v0 + 1294) = v114;
        char v115 = *(unsigned char *)(v111 + 10);
        *(unsigned char *)(v0 + 2061) = v115;
        LOBYTE(v250[0]) = v115;
        sub_251AA4920(v112);
        *(void *)(v0 + 5448) = v116;
        swift_bridgeObjectRelease();
        sub_251A4DB38(v111);
        sub_251A1A568(0, &qword_269B9CE58);
        *(void *)(v0 + 4856) = v113;
        *(_WORD *)(v0 + 4864) = v114;
        v1[322] = 23;
        uint64_t v95 = (void *)swift_task_alloc();
        *(void *)(v0 + 5456) = v95;
        *uint64_t v95 = v0;
        unint64_t v96 = sub_251A3AA44;
        goto LABEL_84;
      }
      if (!*(unsigned char *)(v0 + 5128))
      {
        uint64_t v117 = *(void *)(v0 + 5320);
        uint64_t v118 = *(void *)(v117 + 40);
        if (*(void *)(v118 + 16))
        {
          sub_251F36CA0();
          sub_251F36CD0();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_251F357B0();
          uint64_t v119 = sub_251F36D00();
          uint64_t v120 = -1 << *(unsigned char *)(v118 + 32);
          unint64_t v121 = v119 & ~v120;
          if ((*(void *)(v118 + 56 + ((v121 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v121))
          {
            uint64_t v122 = ~v120;
            while (*(unsigned char *)(*(void *)(v118 + 48) + v121) != 64)
            {
              unint64_t v121 = (v121 + 1) & v122;
              if (((*(void *)(v118 + 56 + ((v121 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v121) & 1) == 0) {
                goto LABEL_80;
              }
            }
            uint64_t v124 = (unsigned char *)(v0 + 1551);
            long long v142 = *(long long **)(v0 + 5320);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            long long v143 = *v142;
            long long v144 = v142[1];
            *(_OWORD *)(v0 + 4336) = v142[2];
            *(_OWORD *)(v0 + 4320) = v144;
            *(_OWORD *)(v0 + 4304) = v143;
            long long v145 = v142[3];
            long long v146 = v142[4];
            long long v147 = v142[5];
            *(_OWORD *)(v0 + 4400) = v142[6];
            *(_OWORD *)(v0 + 4384) = v147;
            *(_OWORD *)(v0 + 4368) = v146;
            *(_OWORD *)(v0 + 4352) = v145;
            long long v148 = v142[7];
            long long v149 = v142[8];
            long long v150 = v142[9];
            *(_OWORD *)(v0 + 4464) = v142[10];
            *(_OWORD *)(v0 + 4448) = v150;
            *(_OWORD *)(v0 + 4432) = v149;
            *(_OWORD *)(v0 + 4416) = v148;
            long long v151 = v142[11];
            long long v152 = v142[12];
            long long v153 = v142[13];
            *(_OWORD *)(v0 + 4524) = *(long long *)((char *)v142 + 220);
            *(_OWORD *)(v0 + 4512) = v153;
            *(_OWORD *)(v0 + 4496) = v152;
            *(_OWORD *)(v0 + 4480) = v151;
            *(unsigned char *)(v0 + 1551) = 1;
            uint64_t v136 = (void *)swift_task_alloc();
            *(void *)(v0 + 5384) = v136;
            *uint64_t v136 = v0;
            unint64_t v137 = sub_251A37478;
LABEL_89:
            v136[1] = v137;
            return StaticRVCClusterGroup.changeToRunMode(containing:)(v124);
          }
LABEL_80:
          unint64_t v123 = v1;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v117 = *(void *)(v0 + 5320);
        }
        else
        {
          unint64_t v123 = v1;
        }
        uint64_t v87 = (uint64_t *)(v0 + 4936);
        unint64_t v138 = sub_251A19C30((uint64_t)&unk_270261868);
        __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CE50);
        swift_arrayDestroy();
        uint64_t v139 = *(void *)v117;
        *(void *)(v0 + 5392) = *(void *)v117;
        __int16 v140 = *(_WORD *)(v117 + 8);
        *(_WORD *)(v0 + 1292) = v140;
        *(unsigned char *)(v0 + 2060) = *(unsigned char *)(v117 + 10);
        LOBYTE(v250[0]) = 23;
        sub_251AA4920(v138);
        *(void *)(v0 + 5400) = v141;
        swift_bridgeObjectRelease();
        sub_251A4DB38(v117);
        sub_251A1A568(0, &qword_269B9CE58);
        *(void *)(v0 + 4936) = v139;
        *(_WORD *)(v0 + 4944) = v140;
        v123[402] = 23;
        uint64_t v95 = (void *)swift_task_alloc();
        *(void *)(v0 + 5408) = v95;
        *uint64_t v95 = v0;
        unint64_t v96 = sub_251A38E04;
LABEL_84:
        v95[1] = v96;
        unint64_t v110 = v87;
        goto LABEL_85;
      }
      sub_251A4EDBC(*(void *)(v0 + 5088), (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
      sub_251A4EBF0(v3, sub_251A4DC54);
      uint64_t v6 = *(void *)(v0 + 5368);
      uint64_t v241 = v2;
      uint64_t v235 = v3;
      while (2)
      {
        uint64_t v13 = *(void *)(v0 + 5304) + 1;
        if (v13 != *(void *)(v0 + 5168))
        {
          uint64_t v40 = *(void *)(v0 + 5288);
          goto LABEL_35;
        }
LABEL_16:
        sub_251A4DAE8(*(void *)(v0 + 5128), *(void *)(v0 + 5136), *(void *)(v0 + 5144), *(void *)(v0 + 5152), *(unsigned char *)(v0 + 1805));
        swift_bridgeObjectRelease();
        uint64_t v14 = *(void *)(v0 + 5104);
        uint64_t v15 = *(void *)(v0 + 5120);
        uint64_t v16 = v15 + 1;
        if (v15 + 1 == v14)
        {
LABEL_50:
          swift_bridgeObjectRelease();
          if (qword_26B21ECD0 != -1) {
            swift_once();
          }
          uint64_t v58 = sub_251F350A0();
          *(void *)(v0 + 5544) = __swift_project_value_buffer(v58, (uint64_t)qword_26B21ECB8);
          uint64_t v59 = sub_251F35080();
          os_log_type_t v60 = sub_251F35FB0();
          if (os_log_type_enabled(v59, v60))
          {
            char v61 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)char v61 = 0;
            _os_log_impl(&dword_2519F3000, v59, v60, "setting matter command expected interval back to default", v61, 2u);
            MEMORY[0x2533AC760](v61, -1, -1);
          }

          if (qword_269B9C330 != -1) {
            swift_once();
          }
          if (qword_269B9C328 != -1) {
            swift_once();
          }
          uint64_t v62 = *(void *)(v0 + 5064);
          uint64_t v63 = *(void *)(v0 + 5032);
          uint64_t v64 = (void *)qword_269B9FC10;
          swift_beginAccess();
          uint64_t v65 = (void *)qword_269B9FC18;
          qword_269B9FC18 = (uint64_t)v64;
          id v66 = v64;

          sub_251A1B128(v63, v62, &qword_26B21E6F0);
          uint64_t v67 = type metadata accessor for StaticHome();
          *(void *)(v0 + 5552) = v67;
          uint64_t v68 = *(void *)(v67 - 8);
          uint64_t v69 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v68 + 48);
          *(void *)(v0 + 5560) = v69;
          *(void *)(v0 + 5568) = (v68 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
          if (v69(v62, 1, v67) == 1)
          {
            sub_251A1B064(*(void *)(v0 + 5064), &qword_26B21E6F0);
            sub_251A1B128(*(void *)(v0 + 5032), *(void *)(v0 + 5056), &qword_26B21E6F0);
            uint64_t v70 = sub_251F35080();
            os_log_type_t v71 = sub_251F35FB0();
            if (os_log_type_enabled(v70, v71))
            {
              uint64_t v72 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 5560);
              uint64_t v73 = *(void *)(v0 + 5552);
              uint64_t v74 = *(void *)(v0 + 5056);
              uint64_t v75 = *(void *)(v0 + 5048);
              uint64_t v76 = (uint8_t *)swift_slowAlloc();
              uint64_t v77 = swift_slowAlloc();
              v250[0] = v77;
              *(_DWORD *)uint64_t v76 = 136315138;
              sub_251A1B128(v74, v75, &qword_26B21E6F0);
              if (v72(v75, 1, v73) == 1)
              {
                sub_251A1B064(*(void *)(v0 + 5048), &qword_26B21E6F0);
                uint64_t v78 = 0;
                unint64_t v79 = 0xE000000000000000;
              }
              else
              {
                uint64_t v82 = *(void *)(v0 + 5048);
                uint64_t v83 = (uint64_t *)(v82 + *(int *)(*(void *)(v0 + 5552) + 20));
                uint64_t v78 = *v83;
                unint64_t v79 = v83[1];
                swift_bridgeObjectRetain();
                sub_251A4EDBC(v82, (uint64_t (*)(void))type metadata accessor for StaticHome);
              }
              uint64_t v84 = *(void *)(v0 + 5056);
              *(void *)(v0 + 4968) = sub_251A00E84(v78, v79, v250);
              sub_251F361D0();
              swift_bridgeObjectRelease();
              sub_251A1B064(v84, &qword_26B21E6F0);
              _os_log_impl(&dword_2519F3000, v70, v71, "Not able to get HMHome for %s", v76, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x2533AC760](v77, -1, -1);
              MEMORY[0x2533AC760](v76, -1, -1);
            }
            else
            {
              sub_251A1B064(*(void *)(v0 + 5056), &qword_26B21E6F0);
            }

            uint64_t v85 = *(_OWORD **)(v0 + 5008);
            *uint64_t v85 = 0u;
            v85[1] = 0u;
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            uint64_t v86 = *(uint64_t (**)(void))(v0 + 8);
            return v86();
          }
          else
          {
            *(void *)(v0 + 5576) = sub_251F35C80();
            *(void *)(v0 + 5584) = sub_251F35C70();
            uint64_t v81 = sub_251F35C00();
            return MEMORY[0x270FA2498](sub_251A3CBD8, v81, v80);
          }
        }
        uint64_t v17 = *(void *)(v0 + 5024);
        uint64_t v18 = (unsigned char *)(*(void *)(v0 + 5016) + 40 * v15 + 104);
        while (1)
        {
          *(void *)(v0 + 5120) = v16;
          *(void *)(v0 + 5112) = v6;
          uint64_t v19 = *((void *)v18 - 4);
          *(void *)(v0 + 5128) = v19;
          uint64_t v20 = *((void *)v18 - 3);
          *(void *)(v0 + 5136) = v20;
          uint64_t v21 = *((void *)v18 - 2);
          *(void *)(v0 + 5144) = v21;
          uint64_t v22 = *((void *)v18 - 1);
          *(void *)(v0 + 5152) = v22;
          int v23 = (char)*v18;
          *(unsigned char *)(v0 + 1805) = *v18;
          uint64_t v24 = *(void *)(v17 + 16);
          if ((v23 & 0x80000000) == 0)
          {
            *(void *)(v0 + 5160) = v24;
            if (v24)
            {
              uint64_t v25 = *(void *)(v0 + 5080);
              int v26 = *(_DWORD *)(v25 + 80);
              *(_DWORD *)(v0 + 268) = v26;
              uint64_t v27 = *(void *)(v25 + 72);
              *(void *)(v0 + 5176) = v27;
              uint64_t v28 = swift_bridgeObjectRetain();
              uint64_t v29 = 0;
              while (1)
              {
                *(void *)(v0 + 5184) = v29;
                uint64_t v30 = *(void *)(v0 + 5096);
                uint64_t v31 = *(void *)(v0 + 5072);
                sub_251A4ED54(v28 + ((v26 + 32) & ~(unint64_t)v26) + v27 * v29, v30, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
                uint64_t v32 = *(void *)(v30 + *(int *)(v31 + 36));
                uint64_t v33 = *(void *)(v32 + 16);
                if (v19)
                {
                  if (v33)
                  {
                    unint64_t v36 = sub_2519FE614(10);
                    if (v37)
                    {
                      sub_251A1A930(*(void *)(v32 + 56) + (v36 << 8), v245);
                      sub_251A1A930(v245, v241);
                      if (sub_251A4DB2C(v241) == 1)
                      {
                        uint64_t v87 = (uint64_t *)(v0 + 4840);
                        uint64_t v97 = sub_251A4E128(v241);
                        uint64_t v98 = *(void *)v97;
                        *(void *)(v0 + 5192) = *(void *)v97;
                        __int16 v99 = *(_WORD *)(v97 + 8);
                        *(_WORD *)(v0 + 1036) = v99;
                        __int16 v100 = v1;
                        char v101 = *(unsigned char *)(v97 + 10);
                        *(unsigned char *)(v0 + 1806) = v101;
                        unint64_t v102 = sub_251A19C30((uint64_t)&unk_2702617F8);
                        __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CE50);
                        swift_arrayDestroy();
                        LOBYTE(v250[0]) = v101;
                        sub_251AA4920(v102);
                        *(void *)(v0 + 5200) = v103;
                        swift_bridgeObjectRelease();
                        sub_251A1A568(0, (unint64_t *)&qword_269B9CE60);
                        *(void *)(v0 + 4840) = v98;
                        *(_WORD *)(v0 + 4848) = v99;
                        v100[306] = v101;
                        uint64_t v95 = (void *)swift_task_alloc();
                        *(void *)(v0 + 5208) = v95;
                        *uint64_t v95 = v0;
                        unint64_t v96 = (uint64_t (*)(uint64_t))sub_251A30810;
                        goto LABEL_84;
                      }
                    }
                  }
                }
                else if (v33)
                {
                  unint64_t v34 = sub_2519FE614(10);
                  if (v35)
                  {
                    sub_251A1A930(*(void *)(v32 + 56) + (v34 << 8), v243);
                    sub_251A1A930(v243, v247);
                    if (sub_251A4DB2C(v247) == 1)
                    {
                      uint64_t v87 = (uint64_t *)(v0 + 4920);
                      uint64_t v88 = sub_251A4E128(v247);
                      uint64_t v89 = *(void *)v88;
                      *(void *)(v0 + 5240) = *(void *)v88;
                      __int16 v90 = *(_WORD *)(v88 + 8);
                      *(_WORD *)(v0 + 1038) = v90;
                      unint64_t v91 = v1;
                      char v92 = *(unsigned char *)(v88 + 10);
                      *(unsigned char *)(v0 + 1807) = v92;
                      unint64_t v93 = sub_251A19C30((uint64_t)&unk_270261830);
                      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CE50);
                      swift_arrayDestroy();
                      LOBYTE(v250[0]) = v92;
                      sub_251AA4920(v93);
                      *(void *)(v0 + 5248) = v94;
                      swift_bridgeObjectRelease();
                      sub_251A1A568(0, (unint64_t *)&qword_269B9CE60);
                      *(void *)(v0 + 4920) = v89;
                      *(_WORD *)(v0 + 4928) = v90;
                      v91[386] = v92;
                      uint64_t v95 = (void *)swift_task_alloc();
                      *(void *)(v0 + 5256) = v95;
                      *uint64_t v95 = v0;
                      unint64_t v96 = sub_251A323D0;
                      goto LABEL_84;
                    }
                  }
                }
                uint64_t v38 = *(void *)(v0 + 5160);
                uint64_t v39 = *(void *)(v0 + 5184) + 1;
                sub_251A4EDBC(*(void *)(v0 + 5096), (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
                if (v39 == v38)
                {
                  uint64_t v6 = *(void *)(v0 + 5112);
                  goto LABEL_16;
                }
                uint64_t v29 = *(void *)(v0 + 5184) + 1;
                uint64_t v27 = *(void *)(v0 + 5176);
                LOBYTE(v26) = *(unsigned char *)(v0 + 268);
                uint64_t v19 = *(void *)(v0 + 5128);
                uint64_t v28 = *(void *)(v0 + 5024);
              }
            }
            goto LABEL_19;
          }
          *(void *)(v0 + 5168) = v24;
          if (v24) {
            break;
          }
LABEL_19:
          v18 += 40;
          if (v14 == ++v16) {
            goto LABEL_50;
          }
        }
        uint64_t v222 = v4;
        uint64_t v48 = v5;
        uint64_t v49 = v1;
        uint64_t v50 = *(void *)(v0 + 5080);
        *(_DWORD *)(v0 + 524) = *(_DWORD *)(v50 + 80);
        swift_bridgeObjectRetain();
        sub_251A4DA50(v19, v20, v21, v22, v23);
        uint64_t v13 = 0;
        uint64_t v40 = *(void *)(v50 + 72);
        uint64_t v1 = v49;
        uint64_t v5 = v48;
        uint64_t v4 = v222;
        *(void *)(v0 + 5288) = v40;
        uint64_t v2 = v241;
        uint64_t v3 = v235;
LABEL_35:
        *(void *)(v0 + 5304) = v13;
        *(void *)(v0 + 5296) = v6;
        sub_251A4ED54(*(void *)(v0 + 5024)+ ((*(unsigned __int8 *)(v0 + 524) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 524))+ v40 * v13, *(void *)(v0 + 5088), (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
        *(void *)(v0 + 4568) = &type metadata for HomeKitFeatures;
        unint64_t v41 = sub_251A4DA94();
        *(void *)(v0 + 5312) = v41;
        *(void *)(v0 + 4576) = v41;
        *uint64_t v1 = 4;
        char v42 = sub_251F34F60();
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v1);
        if ((v42 & 1) == 0)
        {
          if (qword_269B9C4C0 != -1) {
            swift_once();
          }
          if (byte_269BA38B2 != 1) {
            goto LABEL_14;
          }
        }
        uint64_t v43 = *(void *)(v0 + 5088);
        uint64_t v44 = *(int *)(*(void *)(v0 + 5072) + 36);
        *(_DWORD *)(v0 + 780) = v44;
        uint64_t v45 = *(void *)(v43 + v44);
        if (!*(void *)(v45 + 16)
          || (unint64_t v46 = sub_2519FE614(23), (v47 & 1) == 0)
          || (sub_251A1A930(*(void *)(v45 + 56) + (v46 << 8), v3),
              sub_251A1A930(v3, v237),
              sub_251A4DB2C(v237) != 2))
        {
LABEL_14:
          sub_251A4EDBC(*(void *)(v0 + 5088), (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
          continue;
        }
        break;
      }
      char v51 = *(unsigned char *)(v0 + 1805);
      uint64_t v52 = sub_251A4E128(v237);
      uint64_t v53 = v52;
      *(void *)(v0 + 5320) = v52;
      if ((v51 & 1) == 0) {
        break;
      }
      uint64_t v56 = *(void *)(v0 + 5144);
      if (v56)
      {
        int64_t v169 = *(void *)(v56 + 16);
        if (v169)
        {
          uint64_t v248 = v52;
          sub_251A1A930(v3, v224);
          uint64_t v170 = sub_251A4E128(v224);
          sub_251A4DB38(v170);
          uint64_t *v225 = MEMORY[0x263F8EE78];
          sub_251A3E1E0(0, v169, 0);
          unint64_t v171 = *(void *)(v56 + 32);
          if ((v171 & 0x8000000000000000) == 0 && !HIDWORD(v171))
          {
            uint64_t v172 = *v225;
            unint64_t v174 = *(void *)(*v225 + 16);
            unint64_t v173 = *(void *)(*v225 + 24);
            if (v174 >= v173 >> 1)
            {
              sub_251A3E1E0(v173 > 1, v174 + 1, 1);
              uint64_t v172 = *v225;
            }
            *(void *)(v172 + 16) = v174 + 1;
            *(_DWORD *)(v172 + 4 * v174 + 32) = v171;
            int64_t v175 = v169 - 1;
            if (v169 == 1)
            {
LABEL_101:
              uint64_t v53 = v248;
LABEL_114:
              *(void *)(v0 + 5352) = v172;
              long long v190 = *(_OWORD *)v53;
              long long v191 = *(_OWORD *)(v53 + 16);
              *(_OWORD *)(v0 + 3376) = *(_OWORD *)(v53 + 32);
              *(_OWORD *)(v0 + 3360) = v191;
              *(_OWORD *)(v0 + 3344) = v190;
              long long v192 = *(_OWORD *)(v53 + 48);
              long long v193 = *(_OWORD *)(v53 + 64);
              long long v194 = *(_OWORD *)(v53 + 80);
              *(_OWORD *)(v0 + 3440) = *(_OWORD *)(v53 + 96);
              *(_OWORD *)(v0 + 3424) = v194;
              *(_OWORD *)(v0 + 3408) = v193;
              *(_OWORD *)(v0 + 3392) = v192;
              long long v195 = *(_OWORD *)(v53 + 112);
              long long v196 = *(_OWORD *)(v53 + 128);
              long long v197 = *(_OWORD *)(v53 + 144);
              *(_OWORD *)(v0 + 3504) = *(_OWORD *)(v53 + 160);
              *(_OWORD *)(v0 + 3488) = v197;
              *(_OWORD *)(v0 + 3472) = v196;
              *(_OWORD *)(v0 + 3456) = v195;
              long long v198 = *(_OWORD *)(v53 + 176);
              long long v199 = *(_OWORD *)(v53 + 192);
              long long v200 = *(_OWORD *)(v53 + 208);
              *(_OWORD *)(v0 + 3564) = *(_OWORD *)(v53 + 220);
              *(_OWORD *)(v0 + 3552) = v200;
              *(_OWORD *)(v0 + 3536) = v199;
              *(_OWORD *)(v0 + 3520) = v198;
              long long v201 = (void *)swift_task_alloc();
              *(void *)(v0 + 5360) = v201;
              *long long v201 = v0;
              v201[1] = sub_251A340FC;
              uint64_t v202 = v172;
              goto LABEL_117;
            }
            uint64_t v216 = 0;
            unint64_t v217 = v174 + 9;
            uint64_t v218 = (uint64_t *)(v0 + 4992);
            while (1)
            {
              unint64_t v219 = *(void *)(*(void *)(v0 + 5144) + 8 * v216 + 40);
              if ((v219 & 0x8000000000000000) != 0 || HIDWORD(v219)) {
                break;
              }
              *uint64_t v218 = v172;
              unint64_t v220 = *(void *)(v172 + 24);
              if (v217 - 8 >= v220 >> 1)
              {
                sub_251A3E1E0(v220 > 1, v217 - 7, 1);
                uint64_t v218 = (uint64_t *)(v0 + 4992);
                uint64_t v172 = *v225;
              }
              ++v216;
              *(void *)(v172 + 16) = v217 - 7;
              *(_DWORD *)(v172 + 4 * v217++) = v219;
              if (v175 == v216) {
                goto LABEL_101;
              }
            }
          }
          return sub_251F36670();
        }
        sub_251A1A930(v3, v223);
        uint64_t v189 = sub_251A4E128(v223);
        sub_251A4DB38(v189);
        uint64_t v172 = MEMORY[0x263F8EE78];
        goto LABEL_114;
      }
      sub_251A1A930(v3, v227);
      uint64_t v57 = sub_251A4E128(v227);
      sub_251A4DB38(v57);
    }
    if (HIDWORD(*(void *)(v0 + 5152))) {
      return sub_251F36670();
    }
    sub_251A1A930(v3, v229);
    uint64_t v54 = sub_251A4E128(v229);
    sub_251A4DB38(v54);
    uint64_t v55 = *(void *)(v53 + 120);
  }
  while (!v55);
  uint64_t v176 = *(void *)(v55 + 16);
  if (v176)
  {
    uint64_t v228 = *(void *)(v53 + 120);
    swift_bridgeObjectRetain();
    long long v178 = (uint64_t *)(v0 + 4984);
    uint64_t v177 = v228;
    uint64_t v179 = 0;
    uint64_t v180 = MEMORY[0x263F8EE78];
    do
    {
      uint64_t v185 = v177 + v179;
      if ((*(unsigned char *)(v177 + v179 + 40) & 1) == 0 && *(_DWORD *)(v185 + 36) == *(_DWORD *)(v0 + 5152))
      {
        int v230 = *(_DWORD *)(v185 + 32);
        uint64_t v186 = *(void *)(v185 + 56);
        uint64_t v249 = *(void *)(v185 + 48);
        __int16 v246 = *(_WORD *)(v185 + 64);
        char v244 = *(unsigned char *)(v185 + 66);
        char v242 = *(unsigned char *)(v185 + 67);
        char v240 = *(unsigned char *)(v185 + 68);
        char v238 = *(unsigned char *)(v185 + 69);
        char v236 = *(unsigned char *)(v185 + 70);
        char v234 = *(unsigned char *)(v185 + 71);
        char v232 = *(unsigned char *)(v185 + 72);
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *long long v178 = v180;
        uint64_t v188 = v53;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_251A3E220(0, *(void *)(v180 + 16) + 1, 1);
          long long v178 = (uint64_t *)(v0 + 4984);
          uint64_t v180 = *v226;
        }
        unint64_t v182 = *(void *)(v180 + 16);
        unint64_t v181 = *(void *)(v180 + 24);
        uint64_t v177 = v228;
        if (v182 >= v181 >> 1)
        {
          sub_251A3E220(v181 > 1, v182 + 1, 1);
          long long v178 = (uint64_t *)(v0 + 4984);
          uint64_t v177 = v228;
          uint64_t v180 = *v226;
        }
        uint64_t v183 = *(void *)(v0 + 5152);
        *(void *)(v180 + 16) = v182 + 1;
        uint64_t v184 = v180 + 48 * v182;
        *(_DWORD *)(v184 + 32) = v230;
        *(_DWORD *)(v184 + 36) = v183;
        *(unsigned char *)(v184 + 40) = 0;
        *(void *)(v184 + 48) = v249;
        *(void *)(v184 + 56) = v186;
        *(_WORD *)(v184 + 64) = v246;
        *(unsigned char *)(v184 + 66) = v244;
        *(unsigned char *)(v184 + 67) = v242;
        *(unsigned char *)(v184 + 68) = v240;
        *(unsigned char *)(v184 + 69) = v238;
        *(unsigned char *)(v184 + 70) = v236;
        *(unsigned char *)(v184 + 71) = v234;
        *(unsigned char *)(v184 + 72) = v232;
        uint64_t v53 = v188;
      }
      v179 += 48;
      --v176;
    }
    while (v176);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v180 = MEMORY[0x263F8EE78];
  }
  uint64_t v203 = sub_251A2C95C(v180);
  *(void *)(v0 + 5328) = v203;
  *(void *)(v0 + 5336) = v6;
  swift_release();
  long long v204 = *(_OWORD *)v53;
  long long v205 = *(_OWORD *)(v53 + 16);
  *(_OWORD *)(v0 + 4096) = *(_OWORD *)(v53 + 32);
  *(_OWORD *)(v0 + 4080) = v205;
  *(_OWORD *)(v0 + 4064) = v204;
  long long v206 = *(_OWORD *)(v53 + 48);
  long long v207 = *(_OWORD *)(v53 + 64);
  long long v208 = *(_OWORD *)(v53 + 80);
  *(_OWORD *)(v0 + 4160) = *(_OWORD *)(v53 + 96);
  *(_OWORD *)(v0 + 4144) = v208;
  *(_OWORD *)(v0 + 4128) = v207;
  *(_OWORD *)(v0 + 4112) = v206;
  long long v209 = *(_OWORD *)(v53 + 112);
  long long v210 = *(_OWORD *)(v53 + 128);
  long long v211 = *(_OWORD *)(v53 + 144);
  *(_OWORD *)(v0 + 4224) = *(_OWORD *)(v53 + 160);
  *(_OWORD *)(v0 + 4208) = v211;
  *(_OWORD *)(v0 + 4192) = v210;
  *(_OWORD *)(v0 + 4176) = v209;
  long long v212 = *(_OWORD *)(v53 + 176);
  long long v213 = *(_OWORD *)(v53 + 192);
  long long v214 = *(_OWORD *)(v53 + 208);
  *(_OWORD *)(v0 + 4284) = *(_OWORD *)(v53 + 220);
  *(_OWORD *)(v0 + 4272) = v214;
  *(_OWORD *)(v0 + 4256) = v213;
  *(_OWORD *)(v0 + 4240) = v212;
  long long v215 = (void *)swift_task_alloc();
  *(void *)(v0 + 5344) = v215;
  *long long v215 = v0;
  v215[1] = sub_251A32760;
  uint64_t v202 = v203;
LABEL_117:
  return StaticRVCClusterGroup.selectAreas(newAreas:)(v202);
}

uint64_t sub_251A340FC()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_251A34214, 0, 0);
}

uint64_t sub_251A34214()
{
  uint64_t v251 = v0;
  uint64_t v1 = (unsigned char *)(v0 + 4544);
  uint64_t v2 = v0 + 528;
  uint64_t v243 = v0 + 784;
  uint64_t v245 = v0 + 272;
  uint64_t v247 = v0 + 1040;
  uint64_t v3 = v0 + 1552;
  uint64_t v231 = v0 + 2064;
  uint64_t v233 = v0 + 16;
  uint64_t v227 = v0 + 1808;
  uint64_t v229 = v0 + 2320;
  uint64_t v223 = v0 + 2576;
  uint64_t v224 = v0 + 3088;
  uint64_t v237 = v0 + 1296;
  uint64_t v239 = (unsigned char *)(v0 + 4584);
  uint64_t v4 = v0 + 4680;
  uint64_t v5 = v0 + 4968;
  uint64_t v226 = (uint64_t *)(v0 + 4984);
  char v225 = (uint64_t *)(v0 + 4992);
  uint64_t v6 = *(void *)(v0 + 5296);
  do
  {
    while (1)
    {
      *(void *)(v0 + 5368) = v6;
      if (*(void *)(*(void *)(v0 + 5136) + 16))
      {
        uint64_t v7 = *(void *)(v0 + 5312);
        *(void *)(v0 + 4608) = &type metadata for HomeKitFeatures;
        *(void *)(v0 + 4616) = v7;
        *uint64_t v239 = 4;
        char v8 = sub_251F34F60();
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v239);
        if (v8) {
          goto LABEL_133;
        }
        if (qword_269B9C4C0 != -1) {
          swift_once();
        }
        if (byte_269BA38B2 == 1)
        {
LABEL_133:
          uint64_t v9 = *(void *)(*(void *)(v0 + 5088) + *(int *)(v0 + 780));
          if (*(void *)(v9 + 16))
          {
            unint64_t v10 = sub_2519FE614(23);
            if (v11)
            {
              sub_251A1A930(*(void *)(v9 + 56) + (v10 << 8), v233);
              sub_251A1A930(v233, v231);
              if (sub_251A4DB2C(v231) == 2)
              {
                uint64_t v154 = *(void *)(v0 + 5136);
                __int16 v155 = (_OWORD *)sub_251A4E128(v231);
                long long v157 = v155[1];
                long long v156 = v155[2];
                *(_OWORD *)(v0 + 3584) = *v155;
                *(_OWORD *)(v0 + 3600) = v157;
                *(_OWORD *)(v0 + 3616) = v156;
                long long v158 = v155[5];
                long long v159 = v155[6];
                long long v160 = v155[4];
                *(_OWORD *)(v0 + 3632) = v155[3];
                *(_OWORD *)(v0 + 3680) = v159;
                *(_OWORD *)(v0 + 3664) = v158;
                *(_OWORD *)(v0 + 3648) = v160;
                long long v161 = v155[9];
                long long v162 = v155[10];
                long long v163 = v155[8];
                *(_OWORD *)(v0 + 3696) = v155[7];
                *(_OWORD *)(v0 + 3744) = v162;
                *(_OWORD *)(v0 + 3728) = v161;
                *(_OWORD *)(v0 + 3712) = v163;
                long long v165 = v155[12];
                long long v164 = v155[13];
                long long v166 = *(_OWORD *)((char *)v155 + 220);
                *(_OWORD *)(v0 + 3760) = v155[11];
                *(_OWORD *)(v0 + 3804) = v166;
                *(_OWORD *)(v0 + 3792) = v164;
                *(_OWORD *)(v0 + 3776) = v165;
                sub_251A1A930(v233, v0 + 2832);
                uint64_t v167 = sub_251A4E128(v0 + 2832);
                sub_251A4DB38(v167);
                long long v168 = (void *)swift_task_alloc();
                *(void *)(v0 + 5376) = v168;
                *long long v168 = v0;
                v168[1] = sub_251A35A98;
                return StaticRVCClusterGroup.changeToCleanMode(containing:)(v154);
              }
            }
          }
        }
      }
      int v12 = *(unsigned __int8 *)(v0 + 5128);
      if (v12 == 2)
      {
        uint64_t v104 = *(void *)(v0 + 5320);
        unint64_t v105 = sub_251A19C30((uint64_t)&unk_2702618D8);
        __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CE50);
        swift_arrayDestroy();
        uint64_t v106 = *(void *)v104;
        *(void *)(v0 + 5496) = *(void *)v104;
        __int16 v107 = *(_WORD *)(v104 + 8);
        *(_WORD *)(v0 + 1548) = v107;
        *(unsigned char *)(v0 + 2062) = *(unsigned char *)(v104 + 10);
        LOBYTE(v250[0]) = 23;
        sub_251AA4920(v105);
        *(void *)(v0 + 5504) = v108;
        swift_bridgeObjectRelease();
        sub_251A4DB38(v104);
        sub_251A1A568(0, &qword_269B9CE58);
        *(void *)(v0 + 4872) = v106;
        *(_WORD *)(v0 + 4880) = v107;
        v1[338] = 23;
        uint64_t v109 = (void *)swift_task_alloc();
        *(void *)(v0 + 5512) = v109;
        *uint64_t v109 = v0;
        v109[1] = sub_251A3AF90;
        unint64_t v110 = (uint64_t *)(v0 + 4872);
LABEL_85:
        return sub_251C4E0D4(v110);
      }
      if (v12 == 1)
      {
        uint64_t v111 = *(void *)(v0 + 5320);
        if (*(unsigned char *)(v111 + 112) != 1)
        {
          uint64_t v124 = (unsigned char *)(v0 + 1550);
          long long v125 = *(_OWORD *)v111;
          long long v126 = *(_OWORD *)(v111 + 16);
          *(_OWORD *)(v0 + 3856) = *(_OWORD *)(v111 + 32);
          *(_OWORD *)(v0 + 3840) = v126;
          *(_OWORD *)(v0 + 3824) = v125;
          long long v127 = *(_OWORD *)(v111 + 48);
          long long v128 = *(_OWORD *)(v111 + 64);
          long long v129 = *(_OWORD *)(v111 + 80);
          *(_OWORD *)(v0 + 3920) = *(_OWORD *)(v111 + 96);
          *(_OWORD *)(v0 + 3904) = v129;
          *(_OWORD *)(v0 + 3888) = v128;
          *(_OWORD *)(v0 + 3872) = v127;
          long long v130 = *(_OWORD *)(v111 + 112);
          long long v131 = *(_OWORD *)(v111 + 128);
          long long v132 = *(_OWORD *)(v111 + 144);
          *(_OWORD *)(v0 + 3984) = *(_OWORD *)(v111 + 160);
          *(_OWORD *)(v0 + 3968) = v132;
          *(_OWORD *)(v0 + 3952) = v131;
          *(_OWORD *)(v0 + 3936) = v130;
          long long v133 = *(_OWORD *)(v111 + 176);
          long long v134 = *(_OWORD *)(v111 + 192);
          long long v135 = *(_OWORD *)(v111 + 208);
          *(_OWORD *)(v0 + 4044) = *(_OWORD *)(v111 + 220);
          *(_OWORD *)(v0 + 4032) = v135;
          *(_OWORD *)(v0 + 4016) = v134;
          *(_OWORD *)(v0 + 4000) = v133;
          *(unsigned char *)(v0 + 1550) = 0;
          uint64_t v136 = (void *)swift_task_alloc();
          *(void *)(v0 + 5488) = v136;
          *uint64_t v136 = v0;
          unint64_t v137 = sub_251A3AE74;
          goto LABEL_89;
        }
        uint64_t v87 = (uint64_t *)(v0 + 4856);
        unint64_t v112 = sub_251A19C30((uint64_t)&unk_2702618A0);
        __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CE50);
        swift_arrayDestroy();
        uint64_t v113 = *(void *)v111;
        *(void *)(v0 + 5440) = *(void *)v111;
        __int16 v114 = *(_WORD *)(v111 + 8);
        *(_WORD *)(v0 + 1294) = v114;
        char v115 = *(unsigned char *)(v111 + 10);
        *(unsigned char *)(v0 + 2061) = v115;
        LOBYTE(v250[0]) = v115;
        sub_251AA4920(v112);
        *(void *)(v0 + 5448) = v116;
        swift_bridgeObjectRelease();
        sub_251A4DB38(v111);
        sub_251A1A568(0, &qword_269B9CE58);
        *(void *)(v0 + 4856) = v113;
        *(_WORD *)(v0 + 4864) = v114;
        v1[322] = 23;
        uint64_t v95 = (void *)swift_task_alloc();
        *(void *)(v0 + 5456) = v95;
        *uint64_t v95 = v0;
        unint64_t v96 = sub_251A3AA44;
        goto LABEL_84;
      }
      if (!*(unsigned char *)(v0 + 5128))
      {
        uint64_t v117 = *(void *)(v0 + 5320);
        uint64_t v118 = *(void *)(v117 + 40);
        if (*(void *)(v118 + 16))
        {
          sub_251F36CA0();
          sub_251F36CD0();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_251F357B0();
          uint64_t v119 = sub_251F36D00();
          uint64_t v120 = -1 << *(unsigned char *)(v118 + 32);
          unint64_t v121 = v119 & ~v120;
          if ((*(void *)(v118 + 56 + ((v121 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v121))
          {
            uint64_t v122 = ~v120;
            while (*(unsigned char *)(*(void *)(v118 + 48) + v121) != 64)
            {
              unint64_t v121 = (v121 + 1) & v122;
              if (((*(void *)(v118 + 56 + ((v121 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v121) & 1) == 0) {
                goto LABEL_80;
              }
            }
            uint64_t v124 = (unsigned char *)(v0 + 1551);
            long long v142 = *(long long **)(v0 + 5320);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            long long v143 = *v142;
            long long v144 = v142[1];
            *(_OWORD *)(v0 + 4336) = v142[2];
            *(_OWORD *)(v0 + 4320) = v144;
            *(_OWORD *)(v0 + 4304) = v143;
            long long v145 = v142[3];
            long long v146 = v142[4];
            long long v147 = v142[5];
            *(_OWORD *)(v0 + 4400) = v142[6];
            *(_OWORD *)(v0 + 4384) = v147;
            *(_OWORD *)(v0 + 4368) = v146;
            *(_OWORD *)(v0 + 4352) = v145;
            long long v148 = v142[7];
            long long v149 = v142[8];
            long long v150 = v142[9];
            *(_OWORD *)(v0 + 4464) = v142[10];
            *(_OWORD *)(v0 + 4448) = v150;
            *(_OWORD *)(v0 + 4432) = v149;
            *(_OWORD *)(v0 + 4416) = v148;
            long long v151 = v142[11];
            long long v152 = v142[12];
            long long v153 = v142[13];
            *(_OWORD *)(v0 + 4524) = *(long long *)((char *)v142 + 220);
            *(_OWORD *)(v0 + 4512) = v153;
            *(_OWORD *)(v0 + 4496) = v152;
            *(_OWORD *)(v0 + 4480) = v151;
            *(unsigned char *)(v0 + 1551) = 1;
            uint64_t v136 = (void *)swift_task_alloc();
            *(void *)(v0 + 5384) = v136;
            *uint64_t v136 = v0;
            unint64_t v137 = sub_251A37478;
LABEL_89:
            v136[1] = v137;
            return StaticRVCClusterGroup.changeToRunMode(containing:)(v124);
          }
LABEL_80:
          unint64_t v123 = v1;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v117 = *(void *)(v0 + 5320);
        }
        else
        {
          unint64_t v123 = v1;
        }
        uint64_t v87 = (uint64_t *)(v0 + 4936);
        unint64_t v138 = sub_251A19C30((uint64_t)&unk_270261868);
        __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CE50);
        swift_arrayDestroy();
        uint64_t v139 = *(void *)v117;
        *(void *)(v0 + 5392) = *(void *)v117;
        __int16 v140 = *(_WORD *)(v117 + 8);
        *(_WORD *)(v0 + 1292) = v140;
        *(unsigned char *)(v0 + 2060) = *(unsigned char *)(v117 + 10);
        LOBYTE(v250[0]) = 23;
        sub_251AA4920(v138);
        *(void *)(v0 + 5400) = v141;
        swift_bridgeObjectRelease();
        sub_251A4DB38(v117);
        sub_251A1A568(0, &qword_269B9CE58);
        *(void *)(v0 + 4936) = v139;
        *(_WORD *)(v0 + 4944) = v140;
        v123[402] = 23;
        uint64_t v95 = (void *)swift_task_alloc();
        *(void *)(v0 + 5408) = v95;
        *uint64_t v95 = v0;
        unint64_t v96 = sub_251A38E04;
LABEL_84:
        v95[1] = v96;
        unint64_t v110 = v87;
        goto LABEL_85;
      }
      sub_251A4EDBC(*(void *)(v0 + 5088), (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
      sub_251A4EBF0(v3, sub_251A4DC54);
      uint64_t v6 = *(void *)(v0 + 5368);
      uint64_t v241 = v2;
      uint64_t v235 = v3;
      while (2)
      {
        uint64_t v13 = *(void *)(v0 + 5304) + 1;
        if (v13 != *(void *)(v0 + 5168))
        {
          uint64_t v40 = *(void *)(v0 + 5288);
          goto LABEL_35;
        }
LABEL_16:
        sub_251A4DAE8(*(void *)(v0 + 5128), *(void *)(v0 + 5136), *(void *)(v0 + 5144), *(void *)(v0 + 5152), *(unsigned char *)(v0 + 1805));
        swift_bridgeObjectRelease();
        uint64_t v14 = *(void *)(v0 + 5104);
        uint64_t v15 = *(void *)(v0 + 5120);
        uint64_t v16 = v15 + 1;
        if (v15 + 1 == v14)
        {
LABEL_50:
          swift_bridgeObjectRelease();
          if (qword_26B21ECD0 != -1) {
            swift_once();
          }
          uint64_t v58 = sub_251F350A0();
          *(void *)(v0 + 5544) = __swift_project_value_buffer(v58, (uint64_t)qword_26B21ECB8);
          uint64_t v59 = sub_251F35080();
          os_log_type_t v60 = sub_251F35FB0();
          if (os_log_type_enabled(v59, v60))
          {
            char v61 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)char v61 = 0;
            _os_log_impl(&dword_2519F3000, v59, v60, "setting matter command expected interval back to default", v61, 2u);
            MEMORY[0x2533AC760](v61, -1, -1);
          }

          if (qword_269B9C330 != -1) {
            swift_once();
          }
          if (qword_269B9C328 != -1) {
            swift_once();
          }
          uint64_t v62 = *(void *)(v0 + 5064);
          uint64_t v63 = *(void *)(v0 + 5032);
          uint64_t v64 = (void *)qword_269B9FC10;
          swift_beginAccess();
          uint64_t v65 = (void *)qword_269B9FC18;
          qword_269B9FC18 = (uint64_t)v64;
          id v66 = v64;

          sub_251A1B128(v63, v62, &qword_26B21E6F0);
          uint64_t v67 = type metadata accessor for StaticHome();
          *(void *)(v0 + 5552) = v67;
          uint64_t v68 = *(void *)(v67 - 8);
          uint64_t v69 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v68 + 48);
          *(void *)(v0 + 5560) = v69;
          *(void *)(v0 + 5568) = (v68 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
          if (v69(v62, 1, v67) == 1)
          {
            sub_251A1B064(*(void *)(v0 + 5064), &qword_26B21E6F0);
            sub_251A1B128(*(void *)(v0 + 5032), *(void *)(v0 + 5056), &qword_26B21E6F0);
            uint64_t v70 = sub_251F35080();
            os_log_type_t v71 = sub_251F35FB0();
            if (os_log_type_enabled(v70, v71))
            {
              uint64_t v72 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 5560);
              uint64_t v73 = *(void *)(v0 + 5552);
              uint64_t v74 = *(void *)(v0 + 5056);
              uint64_t v75 = *(void *)(v0 + 5048);
              uint64_t v76 = (uint8_t *)swift_slowAlloc();
              uint64_t v77 = swift_slowAlloc();
              v250[0] = v77;
              *(_DWORD *)uint64_t v76 = 136315138;
              sub_251A1B128(v74, v75, &qword_26B21E6F0);
              if (v72(v75, 1, v73) == 1)
              {
                sub_251A1B064(*(void *)(v0 + 5048), &qword_26B21E6F0);
                uint64_t v78 = 0;
                unint64_t v79 = 0xE000000000000000;
              }
              else
              {
                uint64_t v82 = *(void *)(v0 + 5048);
                uint64_t v83 = (uint64_t *)(v82 + *(int *)(*(void *)(v0 + 5552) + 20));
                uint64_t v78 = *v83;
                unint64_t v79 = v83[1];
                swift_bridgeObjectRetain();
                sub_251A4EDBC(v82, (uint64_t (*)(void))type metadata accessor for StaticHome);
              }
              uint64_t v84 = *(void *)(v0 + 5056);
              *(void *)(v0 + 4968) = sub_251A00E84(v78, v79, v250);
              sub_251F361D0();
              swift_bridgeObjectRelease();
              sub_251A1B064(v84, &qword_26B21E6F0);
              _os_log_impl(&dword_2519F3000, v70, v71, "Not able to get HMHome for %s", v76, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x2533AC760](v77, -1, -1);
              MEMORY[0x2533AC760](v76, -1, -1);
            }
            else
            {
              sub_251A1B064(*(void *)(v0 + 5056), &qword_26B21E6F0);
            }

            uint64_t v85 = *(_OWORD **)(v0 + 5008);
            *uint64_t v85 = 0u;
            v85[1] = 0u;
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            uint64_t v86 = *(uint64_t (**)(void))(v0 + 8);
            return v86();
          }
          else
          {
            *(void *)(v0 + 5576) = sub_251F35C80();
            *(void *)(v0 + 5584) = sub_251F35C70();
            uint64_t v81 = sub_251F35C00();
            return MEMORY[0x270FA2498](sub_251A3CBD8, v81, v80);
          }
        }
        uint64_t v17 = *(void *)(v0 + 5024);
        uint64_t v18 = (unsigned char *)(*(void *)(v0 + 5016) + 40 * v15 + 104);
        while (1)
        {
          *(void *)(v0 + 5120) = v16;
          *(void *)(v0 + 5112) = v6;
          uint64_t v19 = *((void *)v18 - 4);
          *(void *)(v0 + 5128) = v19;
          uint64_t v20 = *((void *)v18 - 3);
          *(void *)(v0 + 5136) = v20;
          uint64_t v21 = *((void *)v18 - 2);
          *(void *)(v0 + 5144) = v21;
          uint64_t v22 = *((void *)v18 - 1);
          *(void *)(v0 + 5152) = v22;
          int v23 = (char)*v18;
          *(unsigned char *)(v0 + 1805) = *v18;
          uint64_t v24 = *(void *)(v17 + 16);
          if ((v23 & 0x80000000) == 0)
          {
            *(void *)(v0 + 5160) = v24;
            if (v24)
            {
              uint64_t v25 = *(void *)(v0 + 5080);
              int v26 = *(_DWORD *)(v25 + 80);
              *(_DWORD *)(v0 + 268) = v26;
              uint64_t v27 = *(void *)(v25 + 72);
              *(void *)(v0 + 5176) = v27;
              uint64_t v28 = swift_bridgeObjectRetain();
              uint64_t v29 = 0;
              while (1)
              {
                *(void *)(v0 + 5184) = v29;
                uint64_t v30 = *(void *)(v0 + 5096);
                uint64_t v31 = *(void *)(v0 + 5072);
                sub_251A4ED54(v28 + ((v26 + 32) & ~(unint64_t)v26) + v27 * v29, v30, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
                uint64_t v32 = *(void *)(v30 + *(int *)(v31 + 36));
                uint64_t v33 = *(void *)(v32 + 16);
                if (v19)
                {
                  if (v33)
                  {
                    unint64_t v36 = sub_2519FE614(10);
                    if (v37)
                    {
                      sub_251A1A930(*(void *)(v32 + 56) + (v36 << 8), v245);
                      sub_251A1A930(v245, v241);
                      if (sub_251A4DB2C(v241) == 1)
                      {
                        uint64_t v87 = (uint64_t *)(v0 + 4840);
                        uint64_t v97 = sub_251A4E128(v241);
                        uint64_t v98 = *(void *)v97;
                        *(void *)(v0 + 5192) = *(void *)v97;
                        __int16 v99 = *(_WORD *)(v97 + 8);
                        *(_WORD *)(v0 + 1036) = v99;
                        __int16 v100 = v1;
                        char v101 = *(unsigned char *)(v97 + 10);
                        *(unsigned char *)(v0 + 1806) = v101;
                        unint64_t v102 = sub_251A19C30((uint64_t)&unk_2702617F8);
                        __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CE50);
                        swift_arrayDestroy();
                        LOBYTE(v250[0]) = v101;
                        sub_251AA4920(v102);
                        *(void *)(v0 + 5200) = v103;
                        swift_bridgeObjectRelease();
                        sub_251A1A568(0, (unint64_t *)&qword_269B9CE60);
                        *(void *)(v0 + 4840) = v98;
                        *(_WORD *)(v0 + 4848) = v99;
                        v100[306] = v101;
                        uint64_t v95 = (void *)swift_task_alloc();
                        *(void *)(v0 + 5208) = v95;
                        *uint64_t v95 = v0;
                        unint64_t v96 = (uint64_t (*)(uint64_t))sub_251A30810;
                        goto LABEL_84;
                      }
                    }
                  }
                }
                else if (v33)
                {
                  unint64_t v34 = sub_2519FE614(10);
                  if (v35)
                  {
                    sub_251A1A930(*(void *)(v32 + 56) + (v34 << 8), v243);
                    sub_251A1A930(v243, v247);
                    if (sub_251A4DB2C(v247) == 1)
                    {
                      uint64_t v87 = (uint64_t *)(v0 + 4920);
                      uint64_t v88 = sub_251A4E128(v247);
                      uint64_t v89 = *(void *)v88;
                      *(void *)(v0 + 5240) = *(void *)v88;
                      __int16 v90 = *(_WORD *)(v88 + 8);
                      *(_WORD *)(v0 + 1038) = v90;
                      unint64_t v91 = v1;
                      char v92 = *(unsigned char *)(v88 + 10);
                      *(unsigned char *)(v0 + 1807) = v92;
                      unint64_t v93 = sub_251A19C30((uint64_t)&unk_270261830);
                      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CE50);
                      swift_arrayDestroy();
                      LOBYTE(v250[0]) = v92;
                      sub_251AA4920(v93);
                      *(void *)(v0 + 5248) = v94;
                      swift_bridgeObjectRelease();
                      sub_251A1A568(0, (unint64_t *)&qword_269B9CE60);
                      *(void *)(v0 + 4920) = v89;
                      *(_WORD *)(v0 + 4928) = v90;
                      v91[386] = v92;
                      uint64_t v95 = (void *)swift_task_alloc();
                      *(void *)(v0 + 5256) = v95;
                      *uint64_t v95 = v0;
                      unint64_t v96 = sub_251A323D0;
                      goto LABEL_84;
                    }
                  }
                }
                uint64_t v38 = *(void *)(v0 + 5160);
                uint64_t v39 = *(void *)(v0 + 5184) + 1;
                sub_251A4EDBC(*(void *)(v0 + 5096), (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
                if (v39 == v38)
                {
                  uint64_t v6 = *(void *)(v0 + 5112);
                  goto LABEL_16;
                }
                uint64_t v29 = *(void *)(v0 + 5184) + 1;
                uint64_t v27 = *(void *)(v0 + 5176);
                LOBYTE(v26) = *(unsigned char *)(v0 + 268);
                uint64_t v19 = *(void *)(v0 + 5128);
                uint64_t v28 = *(void *)(v0 + 5024);
              }
            }
            goto LABEL_19;
          }
          *(void *)(v0 + 5168) = v24;
          if (v24) {
            break;
          }
LABEL_19:
          v18 += 40;
          if (v14 == ++v16) {
            goto LABEL_50;
          }
        }
        uint64_t v222 = v4;
        uint64_t v48 = v5;
        uint64_t v49 = v1;
        uint64_t v50 = *(void *)(v0 + 5080);
        *(_DWORD *)(v0 + 524) = *(_DWORD *)(v50 + 80);
        swift_bridgeObjectRetain();
        sub_251A4DA50(v19, v20, v21, v22, v23);
        uint64_t v13 = 0;
        uint64_t v40 = *(void *)(v50 + 72);
        uint64_t v1 = v49;
        uint64_t v5 = v48;
        uint64_t v4 = v222;
        *(void *)(v0 + 5288) = v40;
        uint64_t v2 = v241;
        uint64_t v3 = v235;
LABEL_35:
        *(void *)(v0 + 5304) = v13;
        *(void *)(v0 + 5296) = v6;
        sub_251A4ED54(*(void *)(v0 + 5024)+ ((*(unsigned __int8 *)(v0 + 524) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 524))+ v40 * v13, *(void *)(v0 + 5088), (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
        *(void *)(v0 + 4568) = &type metadata for HomeKitFeatures;
        unint64_t v41 = sub_251A4DA94();
        *(void *)(v0 + 5312) = v41;
        *(void *)(v0 + 4576) = v41;
        *uint64_t v1 = 4;
        char v42 = sub_251F34F60();
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v1);
        if ((v42 & 1) == 0)
        {
          if (qword_269B9C4C0 != -1) {
            swift_once();
          }
          if (byte_269BA38B2 != 1) {
            goto LABEL_14;
          }
        }
        uint64_t v43 = *(void *)(v0 + 5088);
        uint64_t v44 = *(int *)(*(void *)(v0 + 5072) + 36);
        *(_DWORD *)(v0 + 780) = v44;
        uint64_t v45 = *(void *)(v43 + v44);
        if (!*(void *)(v45 + 16)
          || (unint64_t v46 = sub_2519FE614(23), (v47 & 1) == 0)
          || (sub_251A1A930(*(void *)(v45 + 56) + (v46 << 8), v3),
              sub_251A1A930(v3, v237),
              sub_251A4DB2C(v237) != 2))
        {
LABEL_14:
          sub_251A4EDBC(*(void *)(v0 + 5088), (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
          continue;
        }
        break;
      }
      char v51 = *(unsigned char *)(v0 + 1805);
      uint64_t v52 = sub_251A4E128(v237);
      uint64_t v53 = v52;
      *(void *)(v0 + 5320) = v52;
      if ((v51 & 1) == 0) {
        break;
      }
      uint64_t v56 = *(void *)(v0 + 5144);
      if (v56)
      {
        int64_t v169 = *(void *)(v56 + 16);
        if (v169)
        {
          uint64_t v248 = v52;
          sub_251A1A930(v3, v224);
          uint64_t v170 = sub_251A4E128(v224);
          sub_251A4DB38(v170);
          uint64_t *v225 = MEMORY[0x263F8EE78];
          sub_251A3E1E0(0, v169, 0);
          unint64_t v171 = *(void *)(v56 + 32);
          if ((v171 & 0x8000000000000000) == 0 && !HIDWORD(v171))
          {
            uint64_t v172 = *v225;
            unint64_t v174 = *(void *)(*v225 + 16);
            unint64_t v173 = *(void *)(*v225 + 24);
            if (v174 >= v173 >> 1)
            {
              sub_251A3E1E0(v173 > 1, v174 + 1, 1);
              uint64_t v172 = *v225;
            }
            *(void *)(v172 + 16) = v174 + 1;
            *(_DWORD *)(v172 + 4 * v174 + 32) = v171;
            int64_t v175 = v169 - 1;
            if (v169 == 1)
            {
LABEL_101:
              uint64_t v53 = v248;
LABEL_114:
              *(void *)(v0 + 5352) = v172;
              long long v190 = *(_OWORD *)v53;
              long long v191 = *(_OWORD *)(v53 + 16);
              *(_OWORD *)(v0 + 3376) = *(_OWORD *)(v53 + 32);
              *(_OWORD *)(v0 + 3360) = v191;
              *(_OWORD *)(v0 + 3344) = v190;
              long long v192 = *(_OWORD *)(v53 + 48);
              long long v193 = *(_OWORD *)(v53 + 64);
              long long v194 = *(_OWORD *)(v53 + 80);
              *(_OWORD *)(v0 + 3440) = *(_OWORD *)(v53 + 96);
              *(_OWORD *)(v0 + 3424) = v194;
              *(_OWORD *)(v0 + 3408) = v193;
              *(_OWORD *)(v0 + 3392) = v192;
              long long v195 = *(_OWORD *)(v53 + 112);
              long long v196 = *(_OWORD *)(v53 + 128);
              long long v197 = *(_OWORD *)(v53 + 144);
              *(_OWORD *)(v0 + 3504) = *(_OWORD *)(v53 + 160);
              *(_OWORD *)(v0 + 3488) = v197;
              *(_OWORD *)(v0 + 3472) = v196;
              *(_OWORD *)(v0 + 3456) = v195;
              long long v198 = *(_OWORD *)(v53 + 176);
              long long v199 = *(_OWORD *)(v53 + 192);
              long long v200 = *(_OWORD *)(v53 + 208);
              *(_OWORD *)(v0 + 3564) = *(_OWORD *)(v53 + 220);
              *(_OWORD *)(v0 + 3552) = v200;
              *(_OWORD *)(v0 + 3536) = v199;
              *(_OWORD *)(v0 + 3520) = v198;
              long long v201 = (void *)swift_task_alloc();
              *(void *)(v0 + 5360) = v201;
              *long long v201 = v0;
              v201[1] = sub_251A340FC;
              uint64_t v202 = v172;
              goto LABEL_117;
            }
            uint64_t v216 = 0;
            unint64_t v217 = v174 + 9;
            uint64_t v218 = (uint64_t *)(v0 + 4992);
            while (1)
            {
              unint64_t v219 = *(void *)(*(void *)(v0 + 5144) + 8 * v216 + 40);
              if ((v219 & 0x8000000000000000) != 0 || HIDWORD(v219)) {
                break;
              }
              *uint64_t v218 = v172;
              unint64_t v220 = *(void *)(v172 + 24);
              if (v217 - 8 >= v220 >> 1)
              {
                sub_251A3E1E0(v220 > 1, v217 - 7, 1);
                uint64_t v218 = (uint64_t *)(v0 + 4992);
                uint64_t v172 = *v225;
              }
              ++v216;
              *(void *)(v172 + 16) = v217 - 7;
              *(_DWORD *)(v172 + 4 * v217++) = v219;
              if (v175 == v216) {
                goto LABEL_101;
              }
            }
          }
          return sub_251F36670();
        }
        sub_251A1A930(v3, v223);
        uint64_t v189 = sub_251A4E128(v223);
        sub_251A4DB38(v189);
        uint64_t v172 = MEMORY[0x263F8EE78];
        goto LABEL_114;
      }
      sub_251A1A930(v3, v227);
      uint64_t v57 = sub_251A4E128(v227);
      sub_251A4DB38(v57);
    }
    if (HIDWORD(*(void *)(v0 + 5152))) {
      return sub_251F36670();
    }
    sub_251A1A930(v3, v229);
    uint64_t v54 = sub_251A4E128(v229);
    sub_251A4DB38(v54);
    uint64_t v55 = *(void *)(v53 + 120);
  }
  while (!v55);
  uint64_t v176 = *(void *)(v55 + 16);
  if (v176)
  {
    uint64_t v228 = *(void *)(v53 + 120);
    swift_bridgeObjectRetain();
    long long v178 = (uint64_t *)(v0 + 4984);
    uint64_t v177 = v228;
    uint64_t v179 = 0;
    uint64_t v180 = MEMORY[0x263F8EE78];
    do
    {
      uint64_t v185 = v177 + v179;
      if ((*(unsigned char *)(v177 + v179 + 40) & 1) == 0 && *(_DWORD *)(v185 + 36) == *(_DWORD *)(v0 + 5152))
      {
        int v230 = *(_DWORD *)(v185 + 32);
        uint64_t v186 = *(void *)(v185 + 56);
        uint64_t v249 = *(void *)(v185 + 48);
        __int16 v246 = *(_WORD *)(v185 + 64);
        char v244 = *(unsigned char *)(v185 + 66);
        char v242 = *(unsigned char *)(v185 + 67);
        char v240 = *(unsigned char *)(v185 + 68);
        char v238 = *(unsigned char *)(v185 + 69);
        char v236 = *(unsigned char *)(v185 + 70);
        char v234 = *(unsigned char *)(v185 + 71);
        char v232 = *(unsigned char *)(v185 + 72);
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *long long v178 = v180;
        uint64_t v188 = v53;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_251A3E220(0, *(void *)(v180 + 16) + 1, 1);
          long long v178 = (uint64_t *)(v0 + 4984);
          uint64_t v180 = *v226;
        }
        unint64_t v182 = *(void *)(v180 + 16);
        unint64_t v181 = *(void *)(v180 + 24);
        uint64_t v177 = v228;
        if (v182 >= v181 >> 1)
        {
          sub_251A3E220(v181 > 1, v182 + 1, 1);
          long long v178 = (uint64_t *)(v0 + 4984);
          uint64_t v177 = v228;
          uint64_t v180 = *v226;
        }
        uint64_t v183 = *(void *)(v0 + 5152);
        *(void *)(v180 + 16) = v182 + 1;
        uint64_t v184 = v180 + 48 * v182;
        *(_DWORD *)(v184 + 32) = v230;
        *(_DWORD *)(v184 + 36) = v183;
        *(unsigned char *)(v184 + 40) = 0;
        *(void *)(v184 + 48) = v249;
        *(void *)(v184 + 56) = v186;
        *(_WORD *)(v184 + 64) = v246;
        *(unsigned char *)(v184 + 66) = v244;
        *(unsigned char *)(v184 + 67) = v242;
        *(unsigned char *)(v184 + 68) = v240;
        *(unsigned char *)(v184 + 69) = v238;
        *(unsigned char *)(v184 + 70) = v236;
        *(unsigned char *)(v184 + 71) = v234;
        *(unsigned char *)(v184 + 72) = v232;
        uint64_t v53 = v188;
      }
      v179 += 48;
      --v176;
    }
    while (v176);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v180 = MEMORY[0x263F8EE78];
  }
  uint64_t v203 = sub_251A2C95C(v180);
  *(void *)(v0 + 5328) = v203;
  *(void *)(v0 + 5336) = v6;
  swift_release();
  long long v204 = *(_OWORD *)v53;
  long long v205 = *(_OWORD *)(v53 + 16);
  *(_OWORD *)(v0 + 4096) = *(_OWORD *)(v53 + 32);
  *(_OWORD *)(v0 + 4080) = v205;
  *(_OWORD *)(v0 + 4064) = v204;
  long long v206 = *(_OWORD *)(v53 + 48);
  long long v207 = *(_OWORD *)(v53 + 64);
  long long v208 = *(_OWORD *)(v53 + 80);
  *(_OWORD *)(v0 + 4160) = *(_OWORD *)(v53 + 96);
  *(_OWORD *)(v0 + 4144) = v208;
  *(_OWORD *)(v0 + 4128) = v207;
  *(_OWORD *)(v0 + 4112) = v206;
  long long v209 = *(_OWORD *)(v53 + 112);
  long long v210 = *(_OWORD *)(v53 + 128);
  long long v211 = *(_OWORD *)(v53 + 144);
  *(_OWORD *)(v0 + 4224) = *(_OWORD *)(v53 + 160);
  *(_OWORD *)(v0 + 4208) = v211;
  *(_OWORD *)(v0 + 4192) = v210;
  *(_OWORD *)(v0 + 4176) = v209;
  long long v212 = *(_OWORD *)(v53 + 176);
  long long v213 = *(_OWORD *)(v53 + 192);
  long long v214 = *(_OWORD *)(v53 + 208);
  *(_OWORD *)(v0 + 4284) = *(_OWORD *)(v53 + 220);
  *(_OWORD *)(v0 + 4272) = v214;
  *(_OWORD *)(v0 + 4256) = v213;
  *(_OWORD *)(v0 + 4240) = v212;
  long long v215 = (void *)swift_task_alloc();
  *(void *)(v0 + 5344) = v215;
  *long long v215 = v0;
  v215[1] = sub_251A32760;
  uint64_t v202 = v203;
LABEL_117:
  return StaticRVCClusterGroup.selectAreas(newAreas:)(v202);
}

uint64_t sub_251A35A98()
{
  uint64_t v1 = *v0 + 16;
  swift_task_dealloc();
  sub_251A4EBF0(v1, sub_251A4DC54);
  return MEMORY[0x270FA2498](sub_251A35BB4, 0, 0);
}

uint64_t sub_251A35BB4()
{
  uint64_t v257 = v0;
  uint64_t v1 = (unsigned char *)(v0 + 4544);
  uint64_t v2 = v0 + 16;
  uint64_t v3 = v0 + 528;
  uint64_t v251 = v0 + 784;
  uint64_t v253 = v0 + 272;
  uint64_t v255 = v0 + 1040;
  uint64_t v245 = v0 + 1296;
  uint64_t v249 = v0 + 1552;
  uint64_t v4 = v0 + 1808;
  uint64_t v5 = v0 + 2064;
  uint64_t v6 = v0 + 2320;
  uint64_t v7 = v0 + 2576;
  uint64_t v8 = v0 + 2832;
  uint64_t v9 = v0 + 3088;
  unint64_t v10 = (unsigned char *)(v0 + 4584);
  uint64_t v11 = v0 + 4680;
  uint64_t v12 = v0 + 4968;
  uint64_t v13 = (uint64_t *)(v0 + 4984);
  uint64_t v14 = (uint64_t *)(v0 + 4992);
  while (1)
  {
    int v15 = *(unsigned __int8 *)(v0 + 5128);
    if (v15 == 2)
    {
      uint64_t v111 = *(void *)(v0 + 5320);
      unint64_t v112 = sub_251A19C30((uint64_t)&unk_2702618D8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CE50);
      swift_arrayDestroy();
      uint64_t v113 = *(void *)v111;
      *(void *)(v0 + 5496) = *(void *)v111;
      __int16 v114 = *(_WORD *)(v111 + 8);
      *(_WORD *)(v0 + 1548) = v114;
      *(unsigned char *)(v0 + 2062) = *(unsigned char *)(v111 + 10);
      LOBYTE(v256[0]) = 23;
      sub_251AA4920(v112);
      *(void *)(v0 + 5504) = v115;
      swift_bridgeObjectRelease();
      sub_251A4DB38(v111);
      sub_251A1A568(0, &qword_269B9CE58);
      *(void *)(v0 + 4872) = v113;
      *(_WORD *)(v0 + 4880) = v114;
      v1[338] = 23;
      uint64_t v116 = (void *)swift_task_alloc();
      *(void *)(v0 + 5512) = v116;
      *uint64_t v116 = v0;
      v116[1] = sub_251A3AF90;
      uint64_t v117 = (uint64_t *)(v0 + 4872);
LABEL_85:
      return sub_251C4E0D4(v117);
    }
    if (v15 == 1)
    {
      uint64_t v118 = *(void *)(v0 + 5320);
      if (*(unsigned char *)(v118 + 112) != 1)
      {
        long long v134 = (unsigned char *)(v0 + 1550);
        long long v135 = *(_OWORD *)v118;
        long long v136 = *(_OWORD *)(v118 + 16);
        *(_OWORD *)(v0 + 3856) = *(_OWORD *)(v118 + 32);
        *(_OWORD *)(v0 + 3840) = v136;
        *(_OWORD *)(v0 + 3824) = v135;
        long long v137 = *(_OWORD *)(v118 + 48);
        long long v138 = *(_OWORD *)(v118 + 64);
        long long v139 = *(_OWORD *)(v118 + 80);
        *(_OWORD *)(v0 + 3920) = *(_OWORD *)(v118 + 96);
        *(_OWORD *)(v0 + 3904) = v139;
        *(_OWORD *)(v0 + 3888) = v138;
        *(_OWORD *)(v0 + 3872) = v137;
        long long v140 = *(_OWORD *)(v118 + 112);
        long long v141 = *(_OWORD *)(v118 + 128);
        long long v142 = *(_OWORD *)(v118 + 144);
        *(_OWORD *)(v0 + 3984) = *(_OWORD *)(v118 + 160);
        *(_OWORD *)(v0 + 3968) = v142;
        *(_OWORD *)(v0 + 3952) = v141;
        *(_OWORD *)(v0 + 3936) = v140;
        long long v143 = *(_OWORD *)(v118 + 176);
        long long v144 = *(_OWORD *)(v118 + 192);
        long long v145 = *(_OWORD *)(v118 + 208);
        *(_OWORD *)(v0 + 4044) = *(_OWORD *)(v118 + 220);
        *(_OWORD *)(v0 + 4032) = v145;
        *(_OWORD *)(v0 + 4016) = v144;
        *(_OWORD *)(v0 + 4000) = v143;
        *(unsigned char *)(v0 + 1550) = 0;
        long long v146 = (void *)swift_task_alloc();
        *(void *)(v0 + 5488) = v146;
        *long long v146 = v0;
        long long v147 = sub_251A3AE74;
        goto LABEL_90;
      }
      unint64_t v96 = (uint64_t *)(v0 + 4856);
      unint64_t v119 = sub_251A19C30((uint64_t)&unk_2702618A0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CE50);
      swift_arrayDestroy();
      uint64_t v120 = *(void *)v118;
      *(void *)(v0 + 5440) = *(void *)v118;
      __int16 v121 = *(_WORD *)(v118 + 8);
      *(_WORD *)(v0 + 1294) = v121;
      char v122 = *(unsigned char *)(v118 + 10);
      *(unsigned char *)(v0 + 2061) = v122;
      LOBYTE(v256[0]) = v122;
      sub_251AA4920(v119);
      *(void *)(v0 + 5448) = v123;
      swift_bridgeObjectRelease();
      sub_251A4DB38(v118);
      sub_251A1A568(0, &qword_269B9CE58);
      *(void *)(v0 + 4856) = v120;
      *(_WORD *)(v0 + 4864) = v121;
      v1[322] = 23;
      uint64_t v103 = (void *)swift_task_alloc();
      *(void *)(v0 + 5456) = v103;
      *uint64_t v103 = v0;
      uint64_t v104 = sub_251A3AA44;
      goto LABEL_84;
    }
    if (!*(unsigned char *)(v0 + 5128))
    {
      uint64_t v124 = *(void *)(v0 + 5320);
      uint64_t v125 = *(void *)(v124 + 40);
      if (*(void *)(v125 + 16))
      {
        sub_251F36CA0();
        sub_251F36CD0();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_251F357B0();
        uint64_t v126 = sub_251F36D00();
        uint64_t v127 = -1 << *(unsigned char *)(v125 + 32);
        unint64_t v128 = v126 & ~v127;
        if ((*(void *)(v125 + 56 + ((v128 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v128))
        {
          uint64_t v129 = ~v127;
          while (*(unsigned char *)(*(void *)(v125 + 48) + v128) != 64)
          {
            unint64_t v128 = (v128 + 1) & v129;
            if (((*(void *)(v125 + 56 + ((v128 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v128) & 1) == 0) {
              goto LABEL_82;
            }
          }
          long long v134 = (unsigned char *)(v0 + 1551);
          long long v148 = *(long long **)(v0 + 5320);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          long long v149 = *v148;
          long long v150 = v148[1];
          *(_OWORD *)(v0 + 4336) = v148[2];
          *(_OWORD *)(v0 + 4320) = v150;
          *(_OWORD *)(v0 + 4304) = v149;
          long long v151 = v148[3];
          long long v152 = v148[4];
          long long v153 = v148[5];
          *(_OWORD *)(v0 + 4400) = v148[6];
          *(_OWORD *)(v0 + 4384) = v153;
          *(_OWORD *)(v0 + 4368) = v152;
          *(_OWORD *)(v0 + 4352) = v151;
          long long v154 = v148[7];
          long long v155 = v148[8];
          long long v156 = v148[9];
          *(_OWORD *)(v0 + 4464) = v148[10];
          *(_OWORD *)(v0 + 4448) = v156;
          *(_OWORD *)(v0 + 4432) = v155;
          *(_OWORD *)(v0 + 4416) = v154;
          long long v157 = v148[11];
          long long v158 = v148[12];
          long long v159 = v148[13];
          *(_OWORD *)(v0 + 4524) = *(long long *)((char *)v148 + 220);
          *(_OWORD *)(v0 + 4512) = v159;
          *(_OWORD *)(v0 + 4496) = v158;
          *(_OWORD *)(v0 + 4480) = v157;
          *(unsigned char *)(v0 + 1551) = 1;
          long long v146 = (void *)swift_task_alloc();
          *(void *)(v0 + 5384) = v146;
          *long long v146 = v0;
          long long v147 = sub_251A37478;
LABEL_90:
          v146[1] = v147;
          return StaticRVCClusterGroup.changeToRunMode(containing:)(v134);
        }
LABEL_82:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v124 = *(void *)(v0 + 5320);
      }
      unint64_t v96 = (uint64_t *)(v0 + 4936);
      unint64_t v130 = sub_251A19C30((uint64_t)&unk_270261868);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CE50);
      swift_arrayDestroy();
      uint64_t v131 = *(void *)v124;
      *(void *)(v0 + 5392) = *(void *)v124;
      __int16 v132 = *(_WORD *)(v124 + 8);
      *(_WORD *)(v0 + 1292) = v132;
      *(unsigned char *)(v0 + 2060) = *(unsigned char *)(v124 + 10);
      LOBYTE(v256[0]) = 23;
      sub_251AA4920(v130);
      *(void *)(v0 + 5400) = v133;
      swift_bridgeObjectRelease();
      sub_251A4DB38(v124);
      sub_251A1A568(0, &qword_269B9CE58);
      *(void *)(v0 + 4936) = v131;
      *(_WORD *)(v0 + 4944) = v132;
      v1[402] = 23;
      uint64_t v103 = (void *)swift_task_alloc();
      *(void *)(v0 + 5408) = v103;
      *uint64_t v103 = v0;
      uint64_t v104 = sub_251A38E04;
LABEL_84:
      v103[1] = v104;
      uint64_t v117 = v96;
      goto LABEL_85;
    }
    char v234 = v10;
    uint64_t v235 = v5;
    uint64_t v241 = v4;
    uint64_t v243 = v6;
    uint64_t v238 = v7;
    uint64_t v239 = v9;
    uint64_t v236 = v8;
    uint64_t v237 = v2;
    char v232 = v13;
    uint64_t v233 = v14;
    sub_251A4EDBC(*(void *)(v0 + 5088), (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
    sub_251A4EBF0(v249, sub_251A4DC54);
    uint64_t v16 = *(void *)(v0 + 5368);
    uint64_t v247 = v3;
    while (2)
    {
      uint64_t v17 = *(void *)(v0 + 5304) + 1;
      if (v17 != *(void *)(v0 + 5168))
      {
        uint64_t v44 = *(void *)(v0 + 5288);
        goto LABEL_27;
      }
LABEL_8:
      sub_251A4DAE8(*(void *)(v0 + 5128), *(void *)(v0 + 5136), *(void *)(v0 + 5144), *(void *)(v0 + 5152), *(unsigned char *)(v0 + 1805));
      swift_bridgeObjectRelease();
      uint64_t v18 = *(void *)(v0 + 5104);
      uint64_t v19 = *(void *)(v0 + 5120);
      uint64_t v20 = v19 + 1;
      if (v19 + 1 == v18)
      {
LABEL_52:
        swift_bridgeObjectRelease();
        if (qword_26B21ECD0 != -1) {
          swift_once();
        }
        uint64_t v67 = sub_251F350A0();
        *(void *)(v0 + 5544) = __swift_project_value_buffer(v67, (uint64_t)qword_26B21ECB8);
        uint64_t v68 = sub_251F35080();
        os_log_type_t v69 = sub_251F35FB0();
        if (os_log_type_enabled(v68, v69))
        {
          uint64_t v70 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v70 = 0;
          _os_log_impl(&dword_2519F3000, v68, v69, "setting matter command expected interval back to default", v70, 2u);
          MEMORY[0x2533AC760](v70, -1, -1);
        }

        if (qword_269B9C330 != -1) {
          swift_once();
        }
        if (qword_269B9C328 != -1) {
          swift_once();
        }
        uint64_t v71 = *(void *)(v0 + 5064);
        uint64_t v72 = *(void *)(v0 + 5032);
        uint64_t v73 = (void *)qword_269B9FC10;
        swift_beginAccess();
        uint64_t v74 = (void *)qword_269B9FC18;
        qword_269B9FC18 = (uint64_t)v73;
        id v75 = v73;

        sub_251A1B128(v72, v71, &qword_26B21E6F0);
        uint64_t v76 = type metadata accessor for StaticHome();
        *(void *)(v0 + 5552) = v76;
        uint64_t v77 = *(void *)(v76 - 8);
        uint64_t v78 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v77 + 48);
        *(void *)(v0 + 5560) = v78;
        *(void *)(v0 + 5568) = (v77 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
        if (v78(v71, 1, v76) == 1)
        {
          sub_251A1B064(*(void *)(v0 + 5064), &qword_26B21E6F0);
          sub_251A1B128(*(void *)(v0 + 5032), *(void *)(v0 + 5056), &qword_26B21E6F0);
          unint64_t v79 = sub_251F35080();
          os_log_type_t v80 = sub_251F35FB0();
          if (os_log_type_enabled(v79, v80))
          {
            uint64_t v81 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 5560);
            uint64_t v82 = *(void *)(v0 + 5552);
            uint64_t v83 = *(void *)(v0 + 5056);
            uint64_t v84 = *(void *)(v0 + 5048);
            uint64_t v85 = (uint8_t *)swift_slowAlloc();
            uint64_t v86 = swift_slowAlloc();
            v256[0] = v86;
            *(_DWORD *)uint64_t v85 = 136315138;
            sub_251A1B128(v83, v84, &qword_26B21E6F0);
            if (v81(v84, 1, v82) == 1)
            {
              sub_251A1B064(*(void *)(v0 + 5048), &qword_26B21E6F0);
              uint64_t v87 = 0;
              unint64_t v88 = 0xE000000000000000;
            }
            else
            {
              uint64_t v91 = *(void *)(v0 + 5048);
              char v92 = (uint64_t *)(v91 + *(int *)(*(void *)(v0 + 5552) + 20));
              uint64_t v87 = *v92;
              unint64_t v88 = v92[1];
              swift_bridgeObjectRetain();
              sub_251A4EDBC(v91, (uint64_t (*)(void))type metadata accessor for StaticHome);
            }
            uint64_t v93 = *(void *)(v0 + 5056);
            *(void *)(v0 + 4968) = sub_251A00E84(v87, v88, v256);
            sub_251F361D0();
            swift_bridgeObjectRelease();
            sub_251A1B064(v93, &qword_26B21E6F0);
            _os_log_impl(&dword_2519F3000, v79, v80, "Not able to get HMHome for %s", v85, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x2533AC760](v86, -1, -1);
            MEMORY[0x2533AC760](v85, -1, -1);
          }
          else
          {
            sub_251A1B064(*(void *)(v0 + 5056), &qword_26B21E6F0);
          }

          uint64_t v94 = *(_OWORD **)(v0 + 5008);
          *uint64_t v94 = 0u;
          v94[1] = 0u;
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          uint64_t v95 = *(uint64_t (**)(void))(v0 + 8);
          return v95();
        }
        else
        {
          *(void *)(v0 + 5576) = sub_251F35C80();
          *(void *)(v0 + 5584) = sub_251F35C70();
          uint64_t v90 = sub_251F35C00();
          return MEMORY[0x270FA2498](sub_251A3CBD8, v90, v89);
        }
      }
      uint64_t v21 = *(void *)(v0 + 5024);
      uint64_t v22 = (unsigned char *)(*(void *)(v0 + 5016) + 40 * v19 + 104);
      while (1)
      {
        *(void *)(v0 + 5120) = v20;
        *(void *)(v0 + 5112) = v16;
        uint64_t v23 = *((void *)v22 - 4);
        *(void *)(v0 + 5128) = v23;
        uint64_t v24 = *((void *)v22 - 3);
        *(void *)(v0 + 5136) = v24;
        uint64_t v25 = *((void *)v22 - 2);
        *(void *)(v0 + 5144) = v25;
        uint64_t v26 = *((void *)v22 - 1);
        *(void *)(v0 + 5152) = v26;
        int v27 = (char)*v22;
        *(unsigned char *)(v0 + 1805) = *v22;
        uint64_t v28 = *(void *)(v21 + 16);
        if ((v27 & 0x80000000) == 0)
        {
          *(void *)(v0 + 5160) = v28;
          if (v28)
          {
            uint64_t v29 = *(void *)(v0 + 5080);
            int v30 = *(_DWORD *)(v29 + 80);
            *(_DWORD *)(v0 + 268) = v30;
            uint64_t v31 = *(void *)(v29 + 72);
            *(void *)(v0 + 5176) = v31;
            uint64_t v32 = swift_bridgeObjectRetain();
            uint64_t v33 = 0;
            while (1)
            {
              *(void *)(v0 + 5184) = v33;
              uint64_t v34 = *(void *)(v0 + 5096);
              uint64_t v35 = *(void *)(v0 + 5072);
              sub_251A4ED54(v32 + ((v30 + 32) & ~(unint64_t)v30) + v31 * v33, v34, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
              uint64_t v36 = *(void *)(v34 + *(int *)(v35 + 36));
              uint64_t v37 = *(void *)(v36 + 16);
              if (v23)
              {
                if (v37)
                {
                  unint64_t v40 = sub_2519FE614(10);
                  if (v41)
                  {
                    sub_251A1A930(*(void *)(v36 + 56) + (v40 << 8), v253);
                    sub_251A1A930(v253, v247);
                    if (sub_251A4DB2C(v247) == 1)
                    {
                      unint64_t v96 = (uint64_t *)(v0 + 4840);
                      uint64_t v105 = sub_251A4E128(v247);
                      uint64_t v106 = *(void *)v105;
                      *(void *)(v0 + 5192) = *(void *)v105;
                      __int16 v107 = *(_WORD *)(v105 + 8);
                      *(_WORD *)(v0 + 1036) = v107;
                      char v108 = *(unsigned char *)(v105 + 10);
                      *(unsigned char *)(v0 + 1806) = v108;
                      unint64_t v109 = sub_251A19C30((uint64_t)&unk_2702617F8);
                      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CE50);
                      swift_arrayDestroy();
                      LOBYTE(v256[0]) = v108;
                      sub_251AA4920(v109);
                      *(void *)(v0 + 5200) = v110;
                      swift_bridgeObjectRelease();
                      sub_251A1A568(0, (unint64_t *)&qword_269B9CE60);
                      *(void *)(v0 + 4840) = v106;
                      *(_WORD *)(v0 + 4848) = v107;
                      v1[306] = v108;
                      uint64_t v103 = (void *)swift_task_alloc();
                      *(void *)(v0 + 5208) = v103;
                      *uint64_t v103 = v0;
                      uint64_t v104 = (uint64_t (*)(uint64_t))sub_251A30810;
                      goto LABEL_84;
                    }
                  }
                }
              }
              else if (v37)
              {
                unint64_t v38 = sub_2519FE614(10);
                if (v39)
                {
                  sub_251A1A930(*(void *)(v36 + 56) + (v38 << 8), v251);
                  sub_251A1A930(v251, v255);
                  if (sub_251A4DB2C(v255) == 1)
                  {
                    unint64_t v96 = (uint64_t *)(v0 + 4920);
                    uint64_t v97 = sub_251A4E128(v255);
                    uint64_t v98 = *(void *)v97;
                    *(void *)(v0 + 5240) = *(void *)v97;
                    __int16 v99 = *(_WORD *)(v97 + 8);
                    *(_WORD *)(v0 + 1038) = v99;
                    char v100 = *(unsigned char *)(v97 + 10);
                    *(unsigned char *)(v0 + 1807) = v100;
                    unint64_t v101 = sub_251A19C30((uint64_t)&unk_270261830);
                    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CE50);
                    swift_arrayDestroy();
                    LOBYTE(v256[0]) = v100;
                    sub_251AA4920(v101);
                    *(void *)(v0 + 5248) = v102;
                    swift_bridgeObjectRelease();
                    sub_251A1A568(0, (unint64_t *)&qword_269B9CE60);
                    *(void *)(v0 + 4920) = v98;
                    *(_WORD *)(v0 + 4928) = v99;
                    v1[386] = v100;
                    uint64_t v103 = (void *)swift_task_alloc();
                    *(void *)(v0 + 5256) = v103;
                    *uint64_t v103 = v0;
                    uint64_t v104 = sub_251A323D0;
                    goto LABEL_84;
                  }
                }
              }
              uint64_t v42 = *(void *)(v0 + 5160);
              uint64_t v43 = *(void *)(v0 + 5184) + 1;
              sub_251A4EDBC(*(void *)(v0 + 5096), (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
              if (v43 == v42)
              {
                uint64_t v16 = *(void *)(v0 + 5112);
                goto LABEL_8;
              }
              uint64_t v33 = *(void *)(v0 + 5184) + 1;
              uint64_t v31 = *(void *)(v0 + 5176);
              LOBYTE(v30) = *(unsigned char *)(v0 + 268);
              uint64_t v23 = *(void *)(v0 + 5128);
              uint64_t v32 = *(void *)(v0 + 5024);
            }
          }
          goto LABEL_11;
        }
        *(void *)(v0 + 5168) = v28;
        if (v28) {
          break;
        }
LABEL_11:
        v22 += 40;
        if (v18 == ++v20) {
          goto LABEL_52;
        }
      }
      uint64_t v230 = v11;
      uint64_t v52 = v12;
      uint64_t v53 = v1;
      uint64_t v54 = *(void *)(v0 + 5080);
      *(_DWORD *)(v0 + 524) = *(_DWORD *)(v54 + 80);
      swift_bridgeObjectRetain();
      sub_251A4DA50(v23, v24, v25, v26, v27);
      uint64_t v17 = 0;
      uint64_t v44 = *(void *)(v54 + 72);
      uint64_t v1 = v53;
      uint64_t v12 = v52;
      uint64_t v11 = v230;
      *(void *)(v0 + 5288) = v44;
      uint64_t v3 = v247;
LABEL_27:
      *(void *)(v0 + 5304) = v17;
      *(void *)(v0 + 5296) = v16;
      sub_251A4ED54(*(void *)(v0 + 5024)+ ((*(unsigned __int8 *)(v0 + 524) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 524))+ v44 * v17, *(void *)(v0 + 5088), (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
      *(void *)(v0 + 4568) = &type metadata for HomeKitFeatures;
      unint64_t v45 = sub_251A4DA94();
      *(void *)(v0 + 5312) = v45;
      *(void *)(v0 + 4576) = v45;
      *uint64_t v1 = 4;
      char v46 = sub_251F34F60();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v1);
      if ((v46 & 1) == 0)
      {
        if (qword_269B9C4C0 != -1) {
          swift_once();
        }
        if (byte_269BA38B2 != 1) {
          goto LABEL_6;
        }
      }
      uint64_t v47 = *(void *)(v0 + 5088);
      uint64_t v48 = *(int *)(*(void *)(v0 + 5072) + 36);
      *(_DWORD *)(v0 + 780) = v48;
      uint64_t v49 = *(void *)(v47 + v48);
      if (!*(void *)(v49 + 16)
        || (unint64_t v50 = sub_2519FE614(23), (v51 & 1) == 0)
        || (sub_251A1A930(*(void *)(v49 + 56) + (v50 << 8), v249),
            sub_251A1A930(v249, v245),
            sub_251A4DB2C(v245) != 2))
      {
LABEL_6:
        sub_251A4EDBC(*(void *)(v0 + 5088), (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
        continue;
      }
      break;
    }
    char v55 = *(unsigned char *)(v0 + 1805);
    uint64_t v56 = sub_251A4E128(v245);
    uint64_t v57 = v56;
    *(void *)(v0 + 5320) = v56;
    if ((v55 & 1) == 0) {
      break;
    }
    uint64_t v60 = *(void *)(v0 + 5144);
    if (v60)
    {
      uint64_t v228 = (long long *)v56;
      int64_t v160 = *(void *)(v60 + 16);
      if (v160)
      {
        sub_251A1A930(v249, v239);
        uint64_t v161 = sub_251A4E128(v239);
        sub_251A4DB38(v161);
        *uint64_t v233 = MEMORY[0x263F8EE78];
        sub_251A3E1E0(0, v160, 0);
        unint64_t v162 = *(void *)(v60 + 32);
        if ((v162 & 0x8000000000000000) != 0 || HIDWORD(v162)) {
          return sub_251F36670();
        }
        uint64_t v163 = *v233;
        unint64_t v165 = *(void *)(*v233 + 16);
        unint64_t v164 = *(void *)(*v233 + 24);
        if (v165 >= v164 >> 1)
        {
          sub_251A3E1E0(v164 > 1, v165 + 1, 1);
          uint64_t v163 = *v233;
        }
        *(void *)(v163 + 16) = v165 + 1;
        *(_DWORD *)(v163 + 4 * v165 + 32) = v162;
        int64_t v166 = v160 - 1;
        if (v160 != 1)
        {
          uint64_t v167 = 0;
          unint64_t v168 = v165 + 9;
          do
          {
            unint64_t v169 = *(void *)(*(void *)(v0 + 5144) + 8 * v167 + 40);
            if ((v169 & 0x8000000000000000) != 0 || HIDWORD(v169)) {
              return sub_251F36670();
            }
            *uint64_t v233 = v163;
            unint64_t v170 = *(void *)(v163 + 24);
            if (v168 - 8 >= v170 >> 1)
            {
              sub_251A3E1E0(v170 > 1, v168 - 7, 1);
              uint64_t v163 = *v233;
            }
            ++v167;
            *(void *)(v163 + 16) = v168 - 7;
            *(_DWORD *)(v163 + 4 * v168++) = v169;
          }
          while (v166 != v167);
        }
      }
      else
      {
        sub_251A1A930(v249, v238);
        uint64_t v185 = sub_251A4E128(v238);
        sub_251A4DB38(v185);
        uint64_t v163 = MEMORY[0x263F8EE78];
      }
      *(void *)(v0 + 5352) = v163;
      long long v186 = *v228;
      long long v187 = v228[1];
      *(_OWORD *)(v0 + 3376) = v228[2];
      *(_OWORD *)(v0 + 3360) = v187;
      *(_OWORD *)(v0 + 3344) = v186;
      long long v188 = v228[3];
      long long v189 = v228[4];
      long long v190 = v228[5];
      *(_OWORD *)(v0 + 3440) = v228[6];
      *(_OWORD *)(v0 + 3424) = v190;
      *(_OWORD *)(v0 + 3408) = v189;
      *(_OWORD *)(v0 + 3392) = v188;
      long long v191 = v228[7];
      long long v192 = v228[8];
      long long v193 = v228[9];
      *(_OWORD *)(v0 + 3504) = v228[10];
      *(_OWORD *)(v0 + 3488) = v193;
      *(_OWORD *)(v0 + 3472) = v192;
      *(_OWORD *)(v0 + 3456) = v191;
      long long v194 = v228[11];
      long long v195 = v228[12];
      long long v196 = v228[13];
      *(_OWORD *)(v0 + 3564) = *(long long *)((char *)v228 + 220);
      *(_OWORD *)(v0 + 3552) = v196;
      *(_OWORD *)(v0 + 3536) = v195;
      *(_OWORD *)(v0 + 3520) = v194;
      long long v197 = (void *)swift_task_alloc();
      *(void *)(v0 + 5360) = v197;
      *long long v197 = v0;
      v197[1] = sub_251A340FC;
      uint64_t v198 = v163;
      goto LABEL_121;
    }
    sub_251A1A930(v249, v241);
    uint64_t v61 = sub_251A4E128(v241);
    sub_251A4DB38(v61);
LABEL_42:
    *(void *)(v0 + 5368) = v16;
    uint64_t v13 = v232;
    uint64_t v14 = v233;
    uint64_t v8 = v236;
    uint64_t v2 = v237;
    uint64_t v7 = v238;
    uint64_t v9 = v239;
    unint64_t v10 = v234;
    uint64_t v5 = v235;
    uint64_t v4 = v241;
    uint64_t v6 = v243;
    if (*(void *)(*(void *)(v0 + 5136) + 16))
    {
      uint64_t v62 = *(void *)(v0 + 5312);
      *(void *)(v0 + 4608) = &type metadata for HomeKitFeatures;
      *(void *)(v0 + 4616) = v62;
      unsigned char *v234 = 4;
      char v63 = sub_251F34F60();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v234);
      if (v63)
      {
        uint64_t v8 = v236;
        uint64_t v2 = v237;
        uint64_t v7 = v238;
        uint64_t v9 = v239;
        unint64_t v10 = v234;
        uint64_t v5 = v235;
        uint64_t v4 = v241;
        uint64_t v6 = v243;
LABEL_48:
        uint64_t v64 = *(void *)(*(void *)(v0 + 5088) + *(int *)(v0 + 780));
        if (*(void *)(v64 + 16))
        {
          unint64_t v65 = sub_2519FE614(23);
          unint64_t v10 = v234;
          uint64_t v5 = v235;
          uint64_t v4 = v241;
          uint64_t v6 = v243;
          uint64_t v7 = v238;
          uint64_t v9 = v239;
          uint64_t v8 = v236;
          uint64_t v2 = v237;
          if (v66)
          {
            sub_251A1A930(*(void *)(v64 + 56) + (v65 << 8), v237);
            sub_251A1A930(v237, v235);
            if (sub_251A4DB2C(v235) == 2)
            {
              uint64_t v212 = *(void *)(v0 + 5136);
              long long v213 = (_OWORD *)sub_251A4E128(v235);
              long long v215 = v213[1];
              long long v214 = v213[2];
              *(_OWORD *)(v0 + 3584) = *v213;
              *(_OWORD *)(v0 + 3600) = v215;
              *(_OWORD *)(v0 + 3616) = v214;
              long long v216 = v213[5];
              long long v217 = v213[6];
              long long v218 = v213[4];
              *(_OWORD *)(v0 + 3632) = v213[3];
              *(_OWORD *)(v0 + 3680) = v217;
              *(_OWORD *)(v0 + 3664) = v216;
              *(_OWORD *)(v0 + 3648) = v218;
              long long v219 = v213[9];
              long long v220 = v213[10];
              long long v221 = v213[8];
              *(_OWORD *)(v0 + 3696) = v213[7];
              *(_OWORD *)(v0 + 3744) = v220;
              *(_OWORD *)(v0 + 3728) = v219;
              *(_OWORD *)(v0 + 3712) = v221;
              long long v223 = v213[12];
              long long v222 = v213[13];
              long long v224 = *(_OWORD *)((char *)v213 + 220);
              *(_OWORD *)(v0 + 3760) = v213[11];
              *(_OWORD *)(v0 + 3804) = v224;
              *(_OWORD *)(v0 + 3792) = v222;
              *(_OWORD *)(v0 + 3776) = v223;
              sub_251A1A930(v237, v236);
              uint64_t v225 = sub_251A4E128(v236);
              sub_251A4DB38(v225);
              uint64_t v226 = (void *)swift_task_alloc();
              *(void *)(v0 + 5376) = v226;
              *uint64_t v226 = v0;
              v226[1] = sub_251A35A98;
              return StaticRVCClusterGroup.changeToCleanMode(containing:)(v212);
            }
            uint64_t v8 = v236;
            uint64_t v2 = v237;
            uint64_t v7 = v238;
            uint64_t v9 = v239;
            unint64_t v10 = v234;
            uint64_t v5 = v235;
            uint64_t v4 = v241;
            uint64_t v6 = v243;
          }
        }
      }
      else
      {
        uint64_t v8 = v236;
        uint64_t v2 = v237;
        uint64_t v7 = v238;
        uint64_t v9 = v239;
        unint64_t v10 = v234;
        uint64_t v5 = v235;
        uint64_t v4 = v241;
        uint64_t v6 = v243;
        if (qword_269B9C4C0 != -1)
        {
          swift_once();
          unint64_t v10 = v234;
          uint64_t v5 = v235;
          uint64_t v4 = v241;
          uint64_t v6 = v243;
          uint64_t v7 = v238;
          uint64_t v9 = v239;
          uint64_t v8 = v236;
          uint64_t v2 = v237;
        }
        if (byte_269BA38B2 == 1) {
          goto LABEL_48;
        }
      }
    }
  }
  if (HIDWORD(*(void *)(v0 + 5152))) {
    return sub_251F36670();
  }
  sub_251A1A930(v249, v243);
  uint64_t v58 = sub_251A4E128(v243);
  sub_251A4DB38(v58);
  uint64_t v59 = *(void *)(v57 + 120);
  if (!v59) {
    goto LABEL_42;
  }
  uint64_t v171 = *(void *)(v59 + 16);
  uint64_t v229 = (long long *)v57;
  if (v171)
  {
    uint64_t v172 = swift_bridgeObjectRetain();
    uint64_t v173 = 0;
    uint64_t v174 = MEMORY[0x263F8EE78];
    uint64_t v231 = v172;
    do
    {
      uint64_t v179 = v172 + v173;
      if ((*(unsigned char *)(v172 + v173 + 40) & 1) == 0 && *(_DWORD *)(v179 + 36) == *(_DWORD *)(v0 + 5152))
      {
        int v240 = *(_DWORD *)(v179 + 32);
        uint64_t v181 = *(void *)(v179 + 48);
        uint64_t v180 = *(void *)(v179 + 56);
        __int16 v182 = *(_WORD *)(v179 + 64);
        char v183 = *(unsigned char *)(v179 + 66);
        char v252 = *(unsigned char *)(v179 + 67);
        char v250 = *(unsigned char *)(v179 + 68);
        char v248 = *(unsigned char *)(v179 + 69);
        char v246 = *(unsigned char *)(v179 + 70);
        char v244 = *(unsigned char *)(v179 + 71);
        char v242 = *(unsigned char *)(v179 + 72);
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *char v232 = v174;
        char v254 = v183;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_251A3E220(0, *(void *)(v174 + 16) + 1, 1);
          uint64_t v174 = *v232;
        }
        unint64_t v176 = *(void *)(v174 + 16);
        unint64_t v175 = *(void *)(v174 + 24);
        if (v176 >= v175 >> 1)
        {
          sub_251A3E220(v175 > 1, v176 + 1, 1);
          uint64_t v174 = *v232;
        }
        uint64_t v177 = *(void *)(v0 + 5152);
        *(void *)(v174 + 16) = v176 + 1;
        uint64_t v178 = v174 + 48 * v176;
        *(_DWORD *)(v178 + 32) = v240;
        *(_DWORD *)(v178 + 36) = v177;
        *(unsigned char *)(v178 + 40) = 0;
        *(void *)(v178 + 48) = v181;
        *(void *)(v178 + 56) = v180;
        *(_WORD *)(v178 + 64) = v182;
        *(unsigned char *)(v178 + 66) = v254;
        *(unsigned char *)(v178 + 67) = v252;
        *(unsigned char *)(v178 + 68) = v250;
        *(unsigned char *)(v178 + 69) = v248;
        *(unsigned char *)(v178 + 70) = v246;
        *(unsigned char *)(v178 + 71) = v244;
        *(unsigned char *)(v178 + 72) = v242;
        uint64_t v172 = v231;
      }
      v173 += 48;
      --v171;
    }
    while (v171);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v174 = MEMORY[0x263F8EE78];
  }
  uint64_t v199 = sub_251A2C95C(v174);
  *(void *)(v0 + 5328) = v199;
  *(void *)(v0 + 5336) = v16;
  swift_release();
  long long v200 = *v229;
  long long v201 = v229[1];
  *(_OWORD *)(v0 + 4096) = v229[2];
  *(_OWORD *)(v0 + 4080) = v201;
  *(_OWORD *)(v0 + 4064) = v200;
  long long v202 = v229[3];
  long long v203 = v229[4];
  long long v204 = v229[5];
  *(_OWORD *)(v0 + 4160) = v229[6];
  *(_OWORD *)(v0 + 4144) = v204;
  *(_OWORD *)(v0 + 4128) = v203;
  *(_OWORD *)(v0 + 4112) = v202;
  long long v205 = v229[7];
  long long v206 = v229[8];
  long long v207 = v229[9];
  *(_OWORD *)(v0 + 4224) = v229[10];
  *(_OWORD *)(v0 + 4208) = v207;
  *(_OWORD *)(v0 + 4192) = v206;
  *(_OWORD *)(v0 + 4176) = v205;
  long long v208 = v229[11];
  long long v209 = v229[12];
  long long v210 = v229[13];
  *(_OWORD *)(v0 + 4284) = *(long long *)((char *)v229 + 220);
  *(_OWORD *)(v0 + 4272) = v210;
  *(_OWORD *)(v0 + 4256) = v209;
  *(_OWORD *)(v0 + 4240) = v208;
  long long v211 = (void *)swift_task_alloc();
  *(void *)(v0 + 5344) = v211;
  *long long v211 = v0;
  v211[1] = sub_251A32760;
  uint64_t v198 = v199;
LABEL_121:
  return StaticRVCClusterGroup.selectAreas(newAreas:)(v198);
}

uint64_t sub_251A37478()
{
  uint64_t v1 = *v0 + 1552;
  swift_task_dealloc();
  sub_251A4EBF0(v1, sub_251A4DC54);
  return MEMORY[0x270FA2498](sub_251A37594, 0, 0);
}

uint64_t sub_251A37594()
{
  uint64_t v249 = v0;
  uint64_t v1 = (unsigned char *)(v0 + 4544);
  uint64_t v242 = v0 + 784;
  uint64_t v244 = v0 + 272;
  uint64_t v246 = v0 + 1040;
  uint64_t v240 = v0 + 1296;
  uint64_t v2 = v0 + 1552;
  uint64_t v226 = v0 + 2064;
  uint64_t v229 = v0 + 16;
  uint64_t v231 = v0 + 1808;
  uint64_t v233 = v0 + 2320;
  uint64_t v223 = v0 + 2576;
  uint64_t v224 = v0 + 3088;
  uint64_t v235 = (unsigned char *)(v0 + 4584);
  uint64_t v3 = v0 + 4680;
  uint64_t v4 = v0 + 4968;
  uint64_t v225 = (uint64_t *)(v0 + 4992);
  sub_251A4EDBC(*(void *)(v0 + 5088), (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
  uint64_t v5 = *(void *)(v0 + 5368);
  uint64_t v238 = v0 + 528;
  while (2)
  {
    while (2)
    {
      uint64_t v6 = *(void *)(v0 + 5304) + 1;
      if (v6 != *(void *)(v0 + 5168))
      {
        uint64_t v33 = *(void *)(v0 + 5288);
        goto LABEL_23;
      }
LABEL_4:
      sub_251A4DAE8(*(void *)(v0 + 5128), *(void *)(v0 + 5136), *(void *)(v0 + 5144), *(void *)(v0 + 5152), *(unsigned char *)(v0 + 1805));
      swift_bridgeObjectRelease();
      uint64_t v7 = *(void *)(v0 + 5104);
      uint64_t v8 = *(void *)(v0 + 5120);
      uint64_t v9 = v8 + 1;
      if (v8 + 1 == v7)
      {
LABEL_49:
        swift_bridgeObjectRelease();
        if (qword_26B21ECD0 != -1) {
          swift_once();
        }
        uint64_t v57 = sub_251F350A0();
        *(void *)(v0 + 5544) = __swift_project_value_buffer(v57, (uint64_t)qword_26B21ECB8);
        uint64_t v58 = sub_251F35080();
        os_log_type_t v59 = sub_251F35FB0();
        if (os_log_type_enabled(v58, v59))
        {
          uint64_t v60 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v60 = 0;
          _os_log_impl(&dword_2519F3000, v58, v59, "setting matter command expected interval back to default", v60, 2u);
          MEMORY[0x2533AC760](v60, -1, -1);
        }

        if (qword_269B9C330 != -1) {
          swift_once();
        }
        if (qword_269B9C328 != -1) {
          swift_once();
        }
        uint64_t v61 = *(void *)(v0 + 5064);
        uint64_t v62 = *(void *)(v0 + 5032);
        char v63 = (void *)qword_269B9FC10;
        swift_beginAccess();
        uint64_t v64 = (void *)qword_269B9FC18;
        qword_269B9FC18 = (uint64_t)v63;
        id v65 = v63;

        sub_251A1B128(v62, v61, &qword_26B21E6F0);
        uint64_t v66 = type metadata accessor for StaticHome();
        *(void *)(v0 + 5552) = v66;
        uint64_t v67 = *(void *)(v66 - 8);
        uint64_t v68 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v67 + 48);
        *(void *)(v0 + 5560) = v68;
        *(void *)(v0 + 5568) = (v67 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
        if (v68(v61, 1, v66) == 1)
        {
          sub_251A1B064(*(void *)(v0 + 5064), &qword_26B21E6F0);
          sub_251A1B128(*(void *)(v0 + 5032), *(void *)(v0 + 5056), &qword_26B21E6F0);
          os_log_type_t v69 = sub_251F35080();
          os_log_type_t v70 = sub_251F35FB0();
          if (os_log_type_enabled(v69, v70))
          {
            uint64_t v71 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 5560);
            uint64_t v72 = *(void *)(v0 + 5552);
            uint64_t v73 = *(void *)(v0 + 5056);
            uint64_t v74 = *(void *)(v0 + 5048);
            id v75 = (uint8_t *)swift_slowAlloc();
            uint64_t v76 = swift_slowAlloc();
            v248[0] = v76;
            *(_DWORD *)id v75 = 136315138;
            sub_251A1B128(v73, v74, &qword_26B21E6F0);
            if (v71(v74, 1, v72) == 1)
            {
              sub_251A1B064(*(void *)(v0 + 5048), &qword_26B21E6F0);
              uint64_t v77 = 0;
              unint64_t v78 = 0xE000000000000000;
            }
            else
            {
              uint64_t v81 = *(void *)(v0 + 5048);
              uint64_t v82 = (uint64_t *)(v81 + *(int *)(*(void *)(v0 + 5552) + 20));
              uint64_t v77 = *v82;
              unint64_t v78 = v82[1];
              swift_bridgeObjectRetain();
              sub_251A4EDBC(v81, (uint64_t (*)(void))type metadata accessor for StaticHome);
            }
            uint64_t v83 = *(void *)(v0 + 5056);
            *(void *)(v0 + 4968) = sub_251A00E84(v77, v78, v248);
            sub_251F361D0();
            swift_bridgeObjectRelease();
            sub_251A1B064(v83, &qword_26B21E6F0);
            _os_log_impl(&dword_2519F3000, v69, v70, "Not able to get HMHome for %s", v75, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x2533AC760](v76, -1, -1);
            MEMORY[0x2533AC760](v75, -1, -1);
          }
          else
          {
            sub_251A1B064(*(void *)(v0 + 5056), &qword_26B21E6F0);
          }

          uint64_t v84 = *(_OWORD **)(v0 + 5008);
          _OWORD *v84 = 0u;
          v84[1] = 0u;
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          uint64_t v85 = *(uint64_t (**)(void))(v0 + 8);
          return v85();
        }
        else
        {
          *(void *)(v0 + 5576) = sub_251F35C80();
          *(void *)(v0 + 5584) = sub_251F35C70();
          uint64_t v80 = sub_251F35C00();
          return MEMORY[0x270FA2498](sub_251A3CBD8, v80, v79);
        }
      }
      uint64_t v10 = *(void *)(v0 + 5024);
      uint64_t v11 = (unsigned char *)(*(void *)(v0 + 5016) + 40 * v8 + 104);
      while (1)
      {
        *(void *)(v0 + 5120) = v9;
        *(void *)(v0 + 5112) = v5;
        uint64_t v12 = *((void *)v11 - 4);
        *(void *)(v0 + 5128) = v12;
        uint64_t v13 = *((void *)v11 - 3);
        *(void *)(v0 + 5136) = v13;
        uint64_t v14 = *((void *)v11 - 2);
        *(void *)(v0 + 5144) = v14;
        uint64_t v15 = *((void *)v11 - 1);
        *(void *)(v0 + 5152) = v15;
        int v16 = (char)*v11;
        *(unsigned char *)(v0 + 1805) = *v11;
        uint64_t v17 = *(void *)(v10 + 16);
        if ((v16 & 0x80000000) == 0)
        {
          *(void *)(v0 + 5160) = v17;
          if (v17)
          {
            uint64_t v18 = *(void *)(v0 + 5080);
            int v19 = *(_DWORD *)(v18 + 80);
            *(_DWORD *)(v0 + 268) = v19;
            uint64_t v20 = *(void *)(v18 + 72);
            *(void *)(v0 + 5176) = v20;
            uint64_t v21 = swift_bridgeObjectRetain();
            uint64_t v22 = 0;
            while (1)
            {
              *(void *)(v0 + 5184) = v22;
              uint64_t v23 = *(void *)(v0 + 5096);
              uint64_t v24 = *(void *)(v0 + 5072);
              sub_251A4ED54(v21 + ((v19 + 32) & ~(unint64_t)v19) + v20 * v22, v23, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
              uint64_t v25 = *(void *)(v23 + *(int *)(v24 + 36));
              uint64_t v26 = *(void *)(v25 + 16);
              if (v12)
              {
                if (v26)
                {
                  unint64_t v29 = sub_2519FE614(10);
                  if (v30)
                  {
                    sub_251A1A930(*(void *)(v25 + 56) + (v29 << 8), v244);
                    sub_251A1A930(v244, v238);
                    if (sub_251A4DB2C(v238) == 1)
                    {
                      uint64_t v86 = (uint64_t *)(v0 + 4840);
                      uint64_t v96 = sub_251A4E128(v238);
                      uint64_t v97 = v1;
                      uint64_t v98 = *(void *)v96;
                      *(void *)(v0 + 5192) = *(void *)v96;
                      __int16 v99 = *(_WORD *)(v96 + 8);
                      *(_WORD *)(v0 + 1036) = v99;
                      char v100 = *(unsigned char *)(v96 + 10);
                      *(unsigned char *)(v0 + 1806) = v100;
                      unint64_t v101 = sub_251A19C30((uint64_t)&unk_2702617F8);
                      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CE50);
                      swift_arrayDestroy();
                      LOBYTE(v248[0]) = v100;
                      sub_251AA4920(v101);
                      *(void *)(v0 + 5200) = v102;
                      swift_bridgeObjectRelease();
                      sub_251A1A568(0, (unint64_t *)&qword_269B9CE60);
                      *(void *)(v0 + 4840) = v98;
                      *(_WORD *)(v0 + 4848) = v99;
                      v97[306] = v100;
                      uint64_t v94 = (void *)swift_task_alloc();
                      *(void *)(v0 + 5208) = v94;
                      *uint64_t v94 = v0;
                      uint64_t v95 = (uint64_t (*)(uint64_t))sub_251A30810;
                      goto LABEL_71;
                    }
                  }
                }
              }
              else if (v26)
              {
                unint64_t v27 = sub_2519FE614(10);
                if (v28)
                {
                  sub_251A1A930(*(void *)(v25 + 56) + (v27 << 8), v242);
                  sub_251A1A930(v242, v246);
                  if (sub_251A4DB2C(v246) == 1)
                  {
                    uint64_t v86 = (uint64_t *)(v0 + 4920);
                    uint64_t v87 = sub_251A4E128(v246);
                    unint64_t v88 = v1;
                    uint64_t v89 = *(void *)v87;
                    *(void *)(v0 + 5240) = *(void *)v87;
                    __int16 v90 = *(_WORD *)(v87 + 8);
                    *(_WORD *)(v0 + 1038) = v90;
                    char v91 = *(unsigned char *)(v87 + 10);
                    *(unsigned char *)(v0 + 1807) = v91;
                    unint64_t v92 = sub_251A19C30((uint64_t)&unk_270261830);
                    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CE50);
                    swift_arrayDestroy();
                    LOBYTE(v248[0]) = v91;
                    sub_251AA4920(v92);
                    *(void *)(v0 + 5248) = v93;
                    swift_bridgeObjectRelease();
                    sub_251A1A568(0, (unint64_t *)&qword_269B9CE60);
                    *(void *)(v0 + 4920) = v89;
                    *(_WORD *)(v0 + 4928) = v90;
                    v88[386] = v91;
                    uint64_t v94 = (void *)swift_task_alloc();
                    *(void *)(v0 + 5256) = v94;
                    *uint64_t v94 = v0;
                    uint64_t v95 = sub_251A323D0;
                    goto LABEL_71;
                  }
                }
              }
              uint64_t v31 = *(void *)(v0 + 5160);
              uint64_t v32 = *(void *)(v0 + 5184) + 1;
              sub_251A4EDBC(*(void *)(v0 + 5096), (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
              if (v32 == v31)
              {
                uint64_t v5 = *(void *)(v0 + 5112);
                goto LABEL_4;
              }
              uint64_t v22 = *(void *)(v0 + 5184) + 1;
              uint64_t v20 = *(void *)(v0 + 5176);
              LOBYTE(v19) = *(unsigned char *)(v0 + 268);
              uint64_t v12 = *(void *)(v0 + 5128);
              uint64_t v21 = *(void *)(v0 + 5024);
            }
          }
          goto LABEL_7;
        }
        *(void *)(v0 + 5168) = v17;
        if (v17) {
          break;
        }
LABEL_7:
        v11 += 40;
        if (v7 == ++v9) {
          goto LABEL_49;
        }
      }
      uint64_t v222 = v3;
      uint64_t v45 = v4;
      char v46 = v1;
      uint64_t v47 = *(void *)(v0 + 5080);
      *(_DWORD *)(v0 + 524) = *(_DWORD *)(v47 + 80);
      swift_bridgeObjectRetain();
      sub_251A4DA50(v12, v13, v14, v15, v16);
      uint64_t v6 = 0;
      uint64_t v33 = *(void *)(v47 + 72);
      uint64_t v1 = v46;
      uint64_t v4 = v45;
      uint64_t v3 = v222;
      *(void *)(v0 + 5288) = v33;
      uint64_t v2 = v0 + 1552;
LABEL_23:
      *(void *)(v0 + 5304) = v6;
      *(void *)(v0 + 5296) = v5;
      sub_251A4ED54(*(void *)(v0 + 5024)+ ((*(unsigned __int8 *)(v0 + 524) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 524))+ v33 * v6, *(void *)(v0 + 5088), (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
      *(void *)(v0 + 4568) = &type metadata for HomeKitFeatures;
      unint64_t v34 = sub_251A4DA94();
      *(void *)(v0 + 5312) = v34;
      *(void *)(v0 + 4576) = v34;
      *uint64_t v1 = 4;
      char v35 = sub_251F34F60();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v1);
      if ((v35 & 1) == 0)
      {
        if (qword_269B9C4C0 != -1) {
          swift_once();
        }
        if (byte_269BA38B2 != 1) {
          goto LABEL_2;
        }
      }
      uint64_t v36 = *(void *)(v0 + 5088);
      uint64_t v37 = *(int *)(*(void *)(v0 + 5072) + 36);
      *(_DWORD *)(v0 + 780) = v37;
      uint64_t v38 = *(void *)(v36 + v37);
      if (!*(void *)(v38 + 16)
        || (unint64_t v39 = sub_2519FE614(23), (v40 & 1) == 0)
        || (sub_251A1A930(*(void *)(v38 + 56) + (v39 << 8), v2),
            sub_251A1A930(v2, v240),
            sub_251A4DB2C(v240) != 2))
      {
LABEL_2:
        sub_251A4EDBC(*(void *)(v0 + 5088), (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
        continue;
      }
      break;
    }
    char v41 = *(unsigned char *)(v0 + 1805);
    uint64_t v42 = sub_251A4E128(v240);
    *(void *)(v0 + 5320) = v42;
    if (v41)
    {
      uint64_t v48 = *(void *)(v0 + 5144);
      if (!v48)
      {
        sub_251A1A930(v2, v231);
        uint64_t v49 = sub_251A4E128(v231);
        sub_251A4DB38(v49);
LABEL_37:
        *(void *)(v0 + 5368) = v5;
        if (*(void *)(*(void *)(v0 + 5136) + 16))
        {
          uint64_t v50 = *(void *)(v0 + 5312);
          *(void *)(v0 + 4608) = &type metadata for HomeKitFeatures;
          *(void *)(v0 + 4616) = v50;
          unsigned char *v235 = 4;
          char v51 = sub_251F34F60();
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v235);
          if (v51) {
            goto LABEL_131;
          }
          if (qword_269B9C4C0 != -1) {
            swift_once();
          }
          if (byte_269BA38B2 == 1)
          {
LABEL_131:
            uint64_t v52 = *(void *)(*(void *)(v0 + 5088) + *(int *)(v0 + 780));
            if (*(void *)(v52 + 16))
            {
              unint64_t v53 = sub_2519FE614(23);
              if (v54)
              {
                sub_251A1A930(*(void *)(v52 + 56) + (v53 << 8), v229);
                sub_251A1A930(v229, v226);
                if (sub_251A4DB2C(v226) == 2)
                {
                  uint64_t v206 = *(void *)(v0 + 5136);
                  long long v207 = (_OWORD *)sub_251A4E128(v226);
                  long long v209 = v207[1];
                  long long v208 = v207[2];
                  *(_OWORD *)(v0 + 3584) = *v207;
                  *(_OWORD *)(v0 + 3600) = v209;
                  *(_OWORD *)(v0 + 3616) = v208;
                  long long v210 = v207[5];
                  long long v211 = v207[6];
                  long long v212 = v207[4];
                  *(_OWORD *)(v0 + 3632) = v207[3];
                  *(_OWORD *)(v0 + 3680) = v211;
                  *(_OWORD *)(v0 + 3664) = v210;
                  *(_OWORD *)(v0 + 3648) = v212;
                  long long v213 = v207[9];
                  long long v214 = v207[10];
                  long long v215 = v207[8];
                  *(_OWORD *)(v0 + 3696) = v207[7];
                  *(_OWORD *)(v0 + 3744) = v214;
                  *(_OWORD *)(v0 + 3728) = v213;
                  *(_OWORD *)(v0 + 3712) = v215;
                  long long v217 = v207[12];
                  long long v216 = v207[13];
                  long long v218 = *(_OWORD *)((char *)v207 + 220);
                  *(_OWORD *)(v0 + 3760) = v207[11];
                  *(_OWORD *)(v0 + 3804) = v218;
                  *(_OWORD *)(v0 + 3792) = v216;
                  *(_OWORD *)(v0 + 3776) = v217;
                  sub_251A1A930(v229, v0 + 2832);
                  uint64_t v219 = sub_251A4E128(v0 + 2832);
                  sub_251A4DB38(v219);
                  long long v220 = (void *)swift_task_alloc();
                  *(void *)(v0 + 5376) = v220;
                  *long long v220 = v0;
                  v220[1] = sub_251A35A98;
                  return StaticRVCClusterGroup.changeToCleanMode(containing:)(v206);
                }
              }
            }
          }
        }
        char v55 = v1;
        int v56 = *(unsigned __int8 *)(v0 + 5128);
        if (v56 == 2)
        {
          uint64_t v104 = *(void *)(v0 + 5320);
          unint64_t v105 = sub_251A19C30((uint64_t)&unk_2702618D8);
          __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CE50);
          swift_arrayDestroy();
          uint64_t v106 = *(void *)v104;
          *(void *)(v0 + 5496) = *(void *)v104;
          __int16 v107 = *(_WORD *)(v104 + 8);
          *(_WORD *)(v0 + 1548) = v107;
          *(unsigned char *)(v0 + 2062) = *(unsigned char *)(v104 + 10);
          LOBYTE(v248[0]) = 23;
          sub_251AA4920(v105);
          *(void *)(v0 + 5504) = v108;
          swift_bridgeObjectRelease();
          sub_251A4DB38(v104);
          sub_251A1A568(0, &qword_269B9CE58);
          *(void *)(v0 + 4872) = v106;
          *(_WORD *)(v0 + 4880) = v107;
          v55[338] = 23;
          unint64_t v109 = (void *)swift_task_alloc();
          *(void *)(v0 + 5512) = v109;
          *unint64_t v109 = v0;
          v109[1] = sub_251A3AF90;
          uint64_t v103 = (uint64_t *)(v0 + 4872);
        }
        else
        {
          if (v56 == 1)
          {
            uint64_t v110 = *(void *)(v0 + 5320);
            if (*(unsigned char *)(v110 + 112) != 1)
            {
              long long v147 = (unsigned char *)(v0 + 1550);
              long long v148 = *(_OWORD *)v110;
              long long v149 = *(_OWORD *)(v110 + 16);
              *(_OWORD *)(v0 + 3856) = *(_OWORD *)(v110 + 32);
              *(_OWORD *)(v0 + 3840) = v149;
              *(_OWORD *)(v0 + 3824) = v148;
              long long v150 = *(_OWORD *)(v110 + 48);
              long long v151 = *(_OWORD *)(v110 + 64);
              long long v152 = *(_OWORD *)(v110 + 80);
              *(_OWORD *)(v0 + 3920) = *(_OWORD *)(v110 + 96);
              *(_OWORD *)(v0 + 3904) = v152;
              *(_OWORD *)(v0 + 3888) = v151;
              *(_OWORD *)(v0 + 3872) = v150;
              long long v153 = *(_OWORD *)(v110 + 112);
              long long v154 = *(_OWORD *)(v110 + 128);
              long long v155 = *(_OWORD *)(v110 + 144);
              *(_OWORD *)(v0 + 3984) = *(_OWORD *)(v110 + 160);
              *(_OWORD *)(v0 + 3968) = v155;
              *(_OWORD *)(v0 + 3952) = v154;
              *(_OWORD *)(v0 + 3936) = v153;
              long long v156 = *(_OWORD *)(v110 + 176);
              long long v157 = *(_OWORD *)(v110 + 192);
              long long v158 = *(_OWORD *)(v110 + 208);
              *(_OWORD *)(v0 + 4044) = *(_OWORD *)(v110 + 220);
              *(_OWORD *)(v0 + 4032) = v158;
              *(_OWORD *)(v0 + 4016) = v157;
              *(_OWORD *)(v0 + 4000) = v156;
              *(unsigned char *)(v0 + 1550) = 0;
              long long v159 = (void *)swift_task_alloc();
              *(void *)(v0 + 5488) = v159;
              *long long v159 = v0;
              int64_t v160 = sub_251A3AE74;
LABEL_112:
              v159[1] = v160;
              return StaticRVCClusterGroup.changeToRunMode(containing:)(v147);
            }
            uint64_t v86 = (uint64_t *)(v0 + 4856);
            unint64_t v111 = sub_251A19C30((uint64_t)&unk_2702618A0);
            __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CE50);
            swift_arrayDestroy();
            uint64_t v112 = *(void *)v110;
            *(void *)(v0 + 5440) = *(void *)v110;
            __int16 v113 = *(_WORD *)(v110 + 8);
            *(_WORD *)(v0 + 1294) = v113;
            char v114 = *(unsigned char *)(v110 + 10);
            *(unsigned char *)(v0 + 2061) = v114;
            LOBYTE(v248[0]) = v114;
            sub_251AA4920(v111);
            *(void *)(v0 + 5448) = v115;
            swift_bridgeObjectRelease();
            sub_251A4DB38(v110);
            sub_251A1A568(0, &qword_269B9CE58);
            *(void *)(v0 + 4856) = v112;
            *(_WORD *)(v0 + 4864) = v113;
            v55[322] = 23;
            uint64_t v94 = (void *)swift_task_alloc();
            *(void *)(v0 + 5456) = v94;
            *uint64_t v94 = v0;
            uint64_t v95 = sub_251A3AA44;
          }
          else
          {
            if (*(unsigned char *)(v0 + 5128))
            {
              sub_251A4EDBC(*(void *)(v0 + 5088), (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
              sub_251A4EBF0(v2, sub_251A4DC54);
              uint64_t v5 = *(void *)(v0 + 5368);
              continue;
            }
            uint64_t v116 = *(void *)(v0 + 5320);
            uint64_t v117 = *(void *)(v116 + 40);
            if (*(void *)(v117 + 16))
            {
              sub_251F36CA0();
              sub_251F36CD0();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              sub_251F357B0();
              uint64_t v118 = sub_251F36D00();
              uint64_t v119 = -1 << *(unsigned char *)(v117 + 32);
              unint64_t v120 = v118 & ~v119;
              if ((*(void *)(v117 + 56 + ((v120 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v120))
              {
                uint64_t v121 = ~v119;
                while (*(unsigned char *)(*(void *)(v117 + 48) + v120) != 64)
                {
                  unint64_t v120 = (v120 + 1) & v121;
                  if (((*(void *)(v117 + 56 + ((v120 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v120) & 1) == 0) {
                    goto LABEL_83;
                  }
                }
                long long v147 = (unsigned char *)(v0 + 1551);
                long long v188 = *(long long **)(v0 + 5320);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                long long v189 = *v188;
                long long v190 = v188[1];
                *(_OWORD *)(v0 + 4336) = v188[2];
                *(_OWORD *)(v0 + 4320) = v190;
                *(_OWORD *)(v0 + 4304) = v189;
                long long v191 = v188[3];
                long long v192 = v188[4];
                long long v193 = v188[5];
                *(_OWORD *)(v0 + 4400) = v188[6];
                *(_OWORD *)(v0 + 4384) = v193;
                *(_OWORD *)(v0 + 4368) = v192;
                *(_OWORD *)(v0 + 4352) = v191;
                long long v194 = v188[7];
                long long v195 = v188[8];
                long long v196 = v188[9];
                *(_OWORD *)(v0 + 4464) = v188[10];
                *(_OWORD *)(v0 + 4448) = v196;
                *(_OWORD *)(v0 + 4432) = v195;
                *(_OWORD *)(v0 + 4416) = v194;
                long long v197 = v188[11];
                long long v198 = v188[12];
                long long v199 = v188[13];
                *(_OWORD *)(v0 + 4524) = *(long long *)((char *)v188 + 220);
                *(_OWORD *)(v0 + 4512) = v199;
                *(_OWORD *)(v0 + 4496) = v198;
                *(_OWORD *)(v0 + 4480) = v197;
                *(unsigned char *)(v0 + 1551) = 1;
                long long v159 = (void *)swift_task_alloc();
                *(void *)(v0 + 5384) = v159;
                *long long v159 = v0;
                int64_t v160 = sub_251A37478;
                goto LABEL_112;
              }
LABEL_83:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v116 = *(void *)(v0 + 5320);
            }
            uint64_t v86 = (uint64_t *)(v0 + 4936);
            unint64_t v122 = sub_251A19C30((uint64_t)&unk_270261868);
            __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CE50);
            swift_arrayDestroy();
            uint64_t v123 = *(void *)v116;
            *(void *)(v0 + 5392) = *(void *)v116;
            __int16 v124 = *(_WORD *)(v116 + 8);
            *(_WORD *)(v0 + 1292) = v124;
            *(unsigned char *)(v0 + 2060) = *(unsigned char *)(v116 + 10);
            LOBYTE(v248[0]) = 23;
            sub_251AA4920(v122);
            *(void *)(v0 + 5400) = v125;
            swift_bridgeObjectRelease();
            sub_251A4DB38(v116);
            sub_251A1A568(0, &qword_269B9CE58);
            *(void *)(v0 + 4936) = v123;
            *(_WORD *)(v0 + 4944) = v124;
            v55[402] = 23;
            uint64_t v94 = (void *)swift_task_alloc();
            *(void *)(v0 + 5408) = v94;
            *uint64_t v94 = v0;
            uint64_t v95 = sub_251A38E04;
          }
LABEL_71:
          v94[1] = v95;
          uint64_t v103 = v86;
        }
        return sub_251C4E0D4(v103);
      }
      int64_t v126 = *(void *)(v48 + 16);
      if (v126)
      {
        sub_251A1A930(v2, v224);
        uint64_t v127 = sub_251A4E128(v224);
        sub_251A4DB38(v127);
        uint64_t *v225 = MEMORY[0x263F8EE78];
        sub_251A3E1E0(0, v126, 0);
        unint64_t v128 = *(void *)(v48 + 32);
        if ((v128 & 0x8000000000000000) != 0 || HIDWORD(v128)) {
          return sub_251F36670();
        }
        uint64_t v227 = v42;
        uint64_t v129 = (uint64_t *)(v0 + 4992);
        uint64_t v130 = *v225;
        unint64_t v132 = *(void *)(*v225 + 16);
        unint64_t v131 = *(void *)(*v225 + 24);
        if (v132 >= v131 >> 1)
        {
          sub_251A3E1E0(v131 > 1, v132 + 1, 1);
          uint64_t v129 = (uint64_t *)(v0 + 4992);
          uint64_t v130 = *v225;
        }
        *(void *)(v130 + 16) = v132 + 1;
        *(_DWORD *)(v130 + 4 * v132 + 32) = v128;
        int64_t v133 = v126 - 1;
        if (v126 != 1)
        {
          uint64_t v200 = 0;
          unint64_t v201 = v132 + 9;
          long long v202 = "Not enough bits to represent the passed value";
          do
          {
            unint64_t v203 = *(void *)(*(void *)(v0 + 5144) + 8 * v200 + 40);
            if ((v203 & 0x8000000000000000) != 0 || HIDWORD(v203)) {
              return sub_251F36670();
            }
            *uint64_t v129 = v130;
            unint64_t v204 = *(void *)(v130 + 24);
            if (v201 - 8 >= v204 >> 1)
            {
              long long v205 = v202;
              sub_251A3E1E0(v204 > 1, v201 - 7, 1);
              long long v202 = v205;
              uint64_t v129 = (uint64_t *)(v0 + 4992);
              uint64_t v130 = *v225;
            }
            ++v200;
            *(void *)(v130 + 16) = v201 - 7;
            *(_DWORD *)(v130 + 4 * v201++) = v203;
          }
          while (v133 != v200);
        }
        uint64_t v42 = v227;
      }
      else
      {
        sub_251A1A930(v2, v223);
        uint64_t v161 = sub_251A4E128(v223);
        sub_251A4DB38(v161);
        uint64_t v130 = MEMORY[0x263F8EE78];
      }
      *(void *)(v0 + 5352) = v130;
      long long v162 = *(_OWORD *)v42;
      long long v163 = *(_OWORD *)(v42 + 16);
      *(_OWORD *)(v0 + 3376) = *(_OWORD *)(v42 + 32);
      *(_OWORD *)(v0 + 3360) = v163;
      *(_OWORD *)(v0 + 3344) = v162;
      long long v164 = *(_OWORD *)(v42 + 48);
      long long v165 = *(_OWORD *)(v42 + 64);
      long long v166 = *(_OWORD *)(v42 + 80);
      *(_OWORD *)(v0 + 3440) = *(_OWORD *)(v42 + 96);
      *(_OWORD *)(v0 + 3424) = v166;
      *(_OWORD *)(v0 + 3408) = v165;
      *(_OWORD *)(v0 + 3392) = v164;
      long long v167 = *(_OWORD *)(v42 + 112);
      long long v168 = *(_OWORD *)(v42 + 128);
      long long v169 = *(_OWORD *)(v42 + 144);
      *(_OWORD *)(v0 + 3504) = *(_OWORD *)(v42 + 160);
      *(_OWORD *)(v0 + 3488) = v169;
      *(_OWORD *)(v0 + 3472) = v168;
      *(_OWORD *)(v0 + 3456) = v167;
      long long v170 = *(_OWORD *)(v42 + 176);
      long long v171 = *(_OWORD *)(v42 + 192);
      long long v172 = *(_OWORD *)(v42 + 208);
      *(_OWORD *)(v0 + 3564) = *(_OWORD *)(v42 + 220);
      *(_OWORD *)(v0 + 3552) = v172;
      *(_OWORD *)(v0 + 3536) = v171;
      *(_OWORD *)(v0 + 3520) = v170;
      uint64_t v173 = (void *)swift_task_alloc();
      *(void *)(v0 + 5360) = v173;
      *uint64_t v173 = v0;
      v173[1] = sub_251A340FC;
      uint64_t v174 = v130;
      goto LABEL_108;
    }
    break;
  }
  if (HIDWORD(*(void *)(v0 + 5152))) {
    return sub_251F36670();
  }
  sub_251A1A930(v2, v233);
  uint64_t v43 = sub_251A4E128(v233);
  sub_251A4DB38(v43);
  uint64_t v44 = *(void *)(v42 + 120);
  if (!v44) {
    goto LABEL_37;
  }
  uint64_t v134 = *(void *)(v44 + 16);
  if (v134)
  {
    uint64_t v228 = v42;
    uint64_t v230 = *(void *)(v42 + 120);
    swift_bridgeObjectRetain();
    uint64_t v135 = v230;
    long long v136 = (uint64_t *)(v0 + 4984);
    uint64_t v137 = 0;
    uint64_t v138 = MEMORY[0x263F8EE78];
    do
    {
      uint64_t v143 = v135 + v137;
      if ((*(unsigned char *)(v135 + v137 + 40) & 1) == 0 && *(_DWORD *)(v143 + 36) == *(_DWORD *)(v0 + 5152))
      {
        int v144 = *(_DWORD *)(v143 + 32);
        uint64_t v145 = *(void *)(v143 + 56);
        uint64_t v247 = *(void *)(v143 + 48);
        __int16 v245 = *(_WORD *)(v143 + 64);
        char v243 = *(unsigned char *)(v143 + 66);
        char v241 = *(unsigned char *)(v143 + 67);
        char v239 = *(unsigned char *)(v143 + 68);
        char v237 = *(unsigned char *)(v143 + 69);
        char v236 = *(unsigned char *)(v143 + 70);
        char v234 = *(unsigned char *)(v143 + 71);
        char v232 = *(unsigned char *)(v143 + 72);
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *long long v136 = v138;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_251A3E220(0, *(void *)(v138 + 16) + 1, 1);
          uint64_t v138 = *v136;
        }
        unint64_t v140 = *(void *)(v138 + 16);
        unint64_t v139 = *(void *)(v138 + 24);
        uint64_t v135 = v230;
        if (v140 >= v139 >> 1)
        {
          sub_251A3E220(v139 > 1, v140 + 1, 1);
          uint64_t v135 = v230;
          uint64_t v138 = *(void *)(v0 + 4984);
        }
        uint64_t v141 = *(void *)(v0 + 5152);
        *(void *)(v138 + 16) = v140 + 1;
        uint64_t v142 = v138 + 48 * v140;
        *(_DWORD *)(v142 + 32) = v144;
        *(_DWORD *)(v142 + 36) = v141;
        *(unsigned char *)(v142 + 40) = 0;
        *(void *)(v142 + 48) = v247;
        *(void *)(v142 + 56) = v145;
        *(_WORD *)(v142 + 64) = v245;
        *(unsigned char *)(v142 + 66) = v243;
        *(unsigned char *)(v142 + 67) = v241;
        *(unsigned char *)(v142 + 68) = v239;
        *(unsigned char *)(v142 + 69) = v237;
        *(unsigned char *)(v142 + 70) = v236;
        *(unsigned char *)(v142 + 71) = v234;
        *(unsigned char *)(v142 + 72) = v232;
        long long v136 = (uint64_t *)(v0 + 4984);
      }
      v137 += 48;
      --v134;
    }
    while (v134);
    swift_bridgeObjectRelease();
    uint64_t v42 = v228;
  }
  else
  {
    uint64_t v138 = MEMORY[0x263F8EE78];
  }
  uint64_t v175 = sub_251A2C95C(v138);
  *(void *)(v0 + 5328) = v175;
  *(void *)(v0 + 5336) = v5;
  swift_release();
  long long v176 = *(_OWORD *)v42;
  long long v177 = *(_OWORD *)(v42 + 16);
  *(_OWORD *)(v0 + 4096) = *(_OWORD *)(v42 + 32);
  *(_OWORD *)(v0 + 4080) = v177;
  *(_OWORD *)(v0 + 4064) = v176;
  long long v178 = *(_OWORD *)(v42 + 48);
  long long v179 = *(_OWORD *)(v42 + 64);
  long long v180 = *(_OWORD *)(v42 + 80);
  *(_OWORD *)(v0 + 4160) = *(_OWORD *)(v42 + 96);
  *(_OWORD *)(v0 + 4144) = v180;
  *(_OWORD *)(v0 + 4128) = v179;
  *(_OWORD *)(v0 + 4112) = v178;
  long long v181 = *(_OWORD *)(v42 + 112);
  long long v182 = *(_OWORD *)(v42 + 128);
  long long v183 = *(_OWORD *)(v42 + 144);
  *(_OWORD *)(v0 + 4224) = *(_OWORD *)(v42 + 160);
  *(_OWORD *)(v0 + 4208) = v183;
  *(_OWORD *)(v0 + 4192) = v182;
  *(_OWORD *)(v0 + 4176) = v181;
  long long v184 = *(_OWORD *)(v42 + 176);
  long long v185 = *(_OWORD *)(v42 + 192);
  long long v186 = *(_OWORD *)(v42 + 208);
  *(_OWORD *)(v0 + 4284) = *(_OWORD *)(v42 + 220);
  *(_OWORD *)(v0 + 4272) = v186;
  *(_OWORD *)(v0 + 4256) = v185;
  *(_OWORD *)(v0 + 4240) = v184;
  long long v187 = (void *)swift_task_alloc();
  *(void *)(v0 + 5344) = v187;
  *long long v187 = v0;
  v187[1] = sub_251A32760;
  uint64_t v174 = v175;
LABEL_108:
  return StaticRVCClusterGroup.selectAreas(newAreas:)(v174);
}

uint64_t sub_251A38E04(uint64_t a1)
{
  uint64_t v2 = *(void *)v1 + 1552;
  *(void *)(*(void *)v1 + 5416) = a1;
  swift_task_dealloc();
  sub_251A4EBF0(v2, sub_251A4DC54);
  return MEMORY[0x270FA2498](sub_251A38F24, 0, 0);
}

uint64_t sub_251A38F24()
{
  uint64_t v1 = *(void *)(v0 + 5400);
  char v2 = *(unsigned char *)(v0 + 2060);
  __int16 v3 = *(_WORD *)(v0 + 1292);
  uint64_t v4 = *(void *)(v0 + 5392);
  *(void *)(v0 + 4728) = 0xD000000000000016;
  *(void *)(v0 + 4736) = 0x8000000251F68280;
  *(void *)(v0 + 4904) = v4;
  *(_WORD *)(v0 + 4912) = v3;
  *(unsigned char *)(v0 + 4914) = v2;
  ClusterPath.description.getter();
  sub_251F35800();
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(v0 + 4728);
  uint64_t v6 = *(void *)(v0 + 4736);
  *(void *)(v0 + 5424) = v6;
  uint64_t v10 = (uint64_t (*)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_269B9D700
                                                                                              + dword_269B9D700);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 5432) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_251A39064;
  uint64_t v8 = *(void *)(v0 + 5416);
  return v10(0x656D75736572, 0xE600000000000000, v8, v1, v5, v6);
}

uint64_t sub_251A39064()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 5416);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA2498](sub_251A391B8, 0, 0);
}

uint64_t sub_251A391B8()
{
  uint64_t v249 = v0;
  uint64_t v1 = (unsigned char *)(v0 + 4544);
  uint64_t v242 = v0 + 784;
  uint64_t v244 = v0 + 272;
  uint64_t v246 = v0 + 1040;
  uint64_t v240 = v0 + 1296;
  uint64_t v2 = v0 + 1552;
  uint64_t v226 = v0 + 2064;
  uint64_t v229 = v0 + 16;
  uint64_t v231 = v0 + 1808;
  uint64_t v233 = v0 + 2320;
  uint64_t v223 = v0 + 2576;
  uint64_t v224 = v0 + 3088;
  uint64_t v235 = (unsigned char *)(v0 + 4584);
  uint64_t v3 = v0 + 4680;
  uint64_t v4 = v0 + 4968;
  uint64_t v225 = (uint64_t *)(v0 + 4992);
  sub_251A4EBF0(v0 + 1552, sub_251A4DC54);
  sub_251A4EDBC(*(void *)(v0 + 5088), (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
  uint64_t v5 = *(void *)(v0 + 5368);
  uint64_t v238 = v0 + 528;
  while (2)
  {
    while (2)
    {
      uint64_t v6 = *(void *)(v0 + 5304) + 1;
      if (v6 != *(void *)(v0 + 5168))
      {
        uint64_t v33 = *(void *)(v0 + 5288);
        goto LABEL_23;
      }
LABEL_4:
      sub_251A4DAE8(*(void *)(v0 + 5128), *(void *)(v0 + 5136), *(void *)(v0 + 5144), *(void *)(v0 + 5152), *(unsigned char *)(v0 + 1805));
      swift_bridgeObjectRelease();
      uint64_t v7 = *(void *)(v0 + 5104);
      uint64_t v8 = *(void *)(v0 + 5120);
      uint64_t v9 = v8 + 1;
      if (v8 + 1 == v7)
      {
LABEL_49:
        swift_bridgeObjectRelease();
        if (qword_26B21ECD0 != -1) {
          swift_once();
        }
        uint64_t v57 = sub_251F350A0();
        *(void *)(v0 + 5544) = __swift_project_value_buffer(v57, (uint64_t)qword_26B21ECB8);
        uint64_t v58 = sub_251F35080();
        os_log_type_t v59 = sub_251F35FB0();
        if (os_log_type_enabled(v58, v59))
        {
          uint64_t v60 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v60 = 0;
          _os_log_impl(&dword_2519F3000, v58, v59, "setting matter command expected interval back to default", v60, 2u);
          MEMORY[0x2533AC760](v60, -1, -1);
        }

        if (qword_269B9C330 != -1) {
          swift_once();
        }
        if (qword_269B9C328 != -1) {
          swift_once();
        }
        uint64_t v61 = *(void *)(v0 + 5064);
        uint64_t v62 = *(void *)(v0 + 5032);
        char v63 = (void *)qword_269B9FC10;
        swift_beginAccess();
        uint64_t v64 = (void *)qword_269B9FC18;
        qword_269B9FC18 = (uint64_t)v63;
        id v65 = v63;

        sub_251A1B128(v62, v61, &qword_26B21E6F0);
        uint64_t v66 = type metadata accessor for StaticHome();
        *(void *)(v0 + 5552) = v66;
        uint64_t v67 = *(void *)(v66 - 8);
        uint64_t v68 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v67 + 48);
        *(void *)(v0 + 5560) = v68;
        *(void *)(v0 + 5568) = (v67 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
        if (v68(v61, 1, v66) == 1)
        {
          sub_251A1B064(*(void *)(v0 + 5064), &qword_26B21E6F0);
          sub_251A1B128(*(void *)(v0 + 5032), *(void *)(v0 + 5056), &qword_26B21E6F0);
          os_log_type_t v69 = sub_251F35080();
          os_log_type_t v70 = sub_251F35FB0();
          if (os_log_type_enabled(v69, v70))
          {
            uint64_t v71 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 5560);
            uint64_t v72 = *(void *)(v0 + 5552);
            uint64_t v73 = *(void *)(v0 + 5056);
            uint64_t v74 = *(void *)(v0 + 5048);
            id v75 = (uint8_t *)swift_slowAlloc();
            uint64_t v76 = swift_slowAlloc();
            v248[0] = v76;
            *(_DWORD *)id v75 = 136315138;
            sub_251A1B128(v73, v74, &qword_26B21E6F0);
            if (v71(v74, 1, v72) == 1)
            {
              sub_251A1B064(*(void *)(v0 + 5048), &qword_26B21E6F0);
              uint64_t v77 = 0;
              unint64_t v78 = 0xE000000000000000;
            }
            else
            {
              uint64_t v81 = *(void *)(v0 + 5048);
              uint64_t v82 = (uint64_t *)(v81 + *(int *)(*(void *)(v0 + 5552) + 20));
              uint64_t v77 = *v82;
              unint64_t v78 = v82[1];
              swift_bridgeObjectRetain();
              sub_251A4EDBC(v81, (uint64_t (*)(void))type metadata accessor for StaticHome);
            }
            uint64_t v83 = *(void *)(v0 + 5056);
            *(void *)(v0 + 4968) = sub_251A00E84(v77, v78, v248);
            sub_251F361D0();
            swift_bridgeObjectRelease();
            sub_251A1B064(v83, &qword_26B21E6F0);
            _os_log_impl(&dword_2519F3000, v69, v70, "Not able to get HMHome for %s", v75, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x2533AC760](v76, -1, -1);
            MEMORY[0x2533AC760](v75, -1, -1);
          }
          else
          {
            sub_251A1B064(*(void *)(v0 + 5056), &qword_26B21E6F0);
          }

          uint64_t v84 = *(_OWORD **)(v0 + 5008);
          _OWORD *v84 = 0u;
          v84[1] = 0u;
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          uint64_t v85 = *(uint64_t (**)(void))(v0 + 8);
          return v85();
        }
        else
        {
          *(void *)(v0 + 5576) = sub_251F35C80();
          *(void *)(v0 + 5584) = sub_251F35C70();
          uint64_t v80 = sub_251F35C00();
          return MEMORY[0x270FA2498](sub_251A3CBD8, v80, v79);
        }
      }
      uint64_t v10 = *(void *)(v0 + 5024);
      uint64_t v11 = (unsigned char *)(*(void *)(v0 + 5016) + 40 * v8 + 104);
      while (1)
      {
        *(void *)(v0 + 5120) = v9;
        *(void *)(v0 + 5112) = v5;
        uint64_t v12 = *((void *)v11 - 4);
        *(void *)(v0 + 5128) = v12;
        uint64_t v13 = *((void *)v11 - 3);
        *(void *)(v0 + 5136) = v13;
        uint64_t v14 = *((void *)v11 - 2);
        *(void *)(v0 + 5144) = v14;
        uint64_t v15 = *((void *)v11 - 1);
        *(void *)(v0 + 5152) = v15;
        int v16 = (char)*v11;
        *(unsigned char *)(v0 + 1805) = *v11;
        uint64_t v17 = *(void *)(v10 + 16);
        if ((v16 & 0x80000000) == 0)
        {
          *(void *)(v0 + 5160) = v17;
          if (v17)
          {
            uint64_t v18 = *(void *)(v0 + 5080);
            int v19 = *(_DWORD *)(v18 + 80);
            *(_DWORD *)(v0 + 268) = v19;
            uint64_t v20 = *(void *)(v18 + 72);
            *(void *)(v0 + 5176) = v20;
            uint64_t v21 = swift_bridgeObjectRetain();
            uint64_t v22 = 0;
            while (1)
            {
              *(void *)(v0 + 5184) = v22;
              uint64_t v23 = *(void *)(v0 + 5096);
              uint64_t v24 = *(void *)(v0 + 5072);
              sub_251A4ED54(v21 + ((v19 + 32) & ~(unint64_t)v19) + v20 * v22, v23, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
              uint64_t v25 = *(void *)(v23 + *(int *)(v24 + 36));
              uint64_t v26 = *(void *)(v25 + 16);
              if (v12)
              {
                if (v26)
                {
                  unint64_t v29 = sub_2519FE614(10);
                  if (v30)
                  {
                    sub_251A1A930(*(void *)(v25 + 56) + (v29 << 8), v244);
                    sub_251A1A930(v244, v238);
                    if (sub_251A4DB2C(v238) == 1)
                    {
                      uint64_t v86 = (uint64_t *)(v0 + 4840);
                      uint64_t v96 = sub_251A4E128(v238);
                      uint64_t v97 = v1;
                      uint64_t v98 = *(void *)v96;
                      *(void *)(v0 + 5192) = *(void *)v96;
                      __int16 v99 = *(_WORD *)(v96 + 8);
                      *(_WORD *)(v0 + 1036) = v99;
                      char v100 = *(unsigned char *)(v96 + 10);
                      *(unsigned char *)(v0 + 1806) = v100;
                      unint64_t v101 = sub_251A19C30((uint64_t)&unk_2702617F8);
                      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CE50);
                      swift_arrayDestroy();
                      LOBYTE(v248[0]) = v100;
                      sub_251AA4920(v101);
                      *(void *)(v0 + 5200) = v102;
                      swift_bridgeObjectRelease();
                      sub_251A1A568(0, (unint64_t *)&qword_269B9CE60);
                      *(void *)(v0 + 4840) = v98;
                      *(_WORD *)(v0 + 4848) = v99;
                      v97[306] = v100;
                      uint64_t v94 = (void *)swift_task_alloc();
                      *(void *)(v0 + 5208) = v94;
                      *uint64_t v94 = v0;
                      uint64_t v95 = (uint64_t (*)(uint64_t))sub_251A30810;
                      goto LABEL_71;
                    }
                  }
                }
              }
              else if (v26)
              {
                unint64_t v27 = sub_2519FE614(10);
                if (v28)
                {
                  sub_251A1A930(*(void *)(v25 + 56) + (v27 << 8), v242);
                  sub_251A1A930(v242, v246);
                  if (sub_251A4DB2C(v246) == 1)
                  {
                    uint64_t v86 = (uint64_t *)(v0 + 4920);
                    uint64_t v87 = sub_251A4E128(v246);
                    unint64_t v88 = v1;
                    uint64_t v89 = *(void *)v87;
                    *(void *)(v0 + 5240) = *(void *)v87;
                    __int16 v90 = *(_WORD *)(v87 + 8);
                    *(_WORD *)(v0 + 1038) = v90;
                    char v91 = *(unsigned char *)(v87 + 10);
                    *(unsigned char *)(v0 + 1807) = v91;
                    unint64_t v92 = sub_251A19C30((uint64_t)&unk_270261830);
                    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CE50);
                    swift_arrayDestroy();
                    LOBYTE(v248[0]) = v91;
                    sub_251AA4920(v92);
                    *(void *)(v0 + 5248) = v93;
                    swift_bridgeObjectRelease();
                    sub_251A1A568(0, (unint64_t *)&qword_269B9CE60);
                    *(void *)(v0 + 4920) = v89;
                    *(_WORD *)(v0 + 4928) = v90;
                    v88[386] = v91;
                    uint64_t v94 = (void *)swift_task_alloc();
                    *(void *)(v0 + 5256) = v94;
                    *uint64_t v94 = v0;
                    uint64_t v95 = sub_251A323D0;
                    goto LABEL_71;
                  }
                }
              }
              uint64_t v31 = *(void *)(v0 + 5160);
              uint64_t v32 = *(void *)(v0 + 5184) + 1;
              sub_251A4EDBC(*(void *)(v0 + 5096), (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
              if (v32 == v31)
              {
                uint64_t v5 = *(void *)(v0 + 5112);
                goto LABEL_4;
              }
              uint64_t v22 = *(void *)(v0 + 5184) + 1;
              uint64_t v20 = *(void *)(v0 + 5176);
              LOBYTE(v19) = *(unsigned char *)(v0 + 268);
              uint64_t v12 = *(void *)(v0 + 5128);
              uint64_t v21 = *(void *)(v0 + 5024);
            }
          }
          goto LABEL_7;
        }
        *(void *)(v0 + 5168) = v17;
        if (v17) {
          break;
        }
LABEL_7:
        v11 += 40;
        if (v7 == ++v9) {
          goto LABEL_49;
        }
      }
      uint64_t v222 = v3;
      uint64_t v45 = v4;
      char v46 = v1;
      uint64_t v47 = *(void *)(v0 + 5080);
      *(_DWORD *)(v0 + 524) = *(_DWORD *)(v47 + 80);
      swift_bridgeObjectRetain();
      sub_251A4DA50(v12, v13, v14, v15, v16);
      uint64_t v6 = 0;
      uint64_t v33 = *(void *)(v47 + 72);
      uint64_t v1 = v46;
      uint64_t v4 = v45;
      uint64_t v3 = v222;
      *(void *)(v0 + 5288) = v33;
      uint64_t v2 = v0 + 1552;
LABEL_23:
      *(void *)(v0 + 5304) = v6;
      *(void *)(v0 + 5296) = v5;
      sub_251A4ED54(*(void *)(v0 + 5024)+ ((*(unsigned __int8 *)(v0 + 524) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 524))+ v33 * v6, *(void *)(v0 + 5088), (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
      *(void *)(v0 + 4568) = &type metadata for HomeKitFeatures;
      unint64_t v34 = sub_251A4DA94();
      *(void *)(v0 + 5312) = v34;
      *(void *)(v0 + 4576) = v34;
      *uint64_t v1 = 4;
      char v35 = sub_251F34F60();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v1);
      if ((v35 & 1) == 0)
      {
        if (qword_269B9C4C0 != -1) {
          swift_once();
        }
        if (byte_269BA38B2 != 1) {
          goto LABEL_2;
        }
      }
      uint64_t v36 = *(void *)(v0 + 5088);
      uint64_t v37 = *(int *)(*(void *)(v0 + 5072) + 36);
      *(_DWORD *)(v0 + 780) = v37;
      uint64_t v38 = *(void *)(v36 + v37);
      if (!*(void *)(v38 + 16)
        || (unint64_t v39 = sub_2519FE614(23), (v40 & 1) == 0)
        || (sub_251A1A930(*(void *)(v38 + 56) + (v39 << 8), v2),
            sub_251A1A930(v2, v240),
            sub_251A4DB2C(v240) != 2))
      {
LABEL_2:
        sub_251A4EDBC(*(void *)(v0 + 5088), (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
        continue;
      }
      break;
    }
    char v41 = *(unsigned char *)(v0 + 1805);
    uint64_t v42 = sub_251A4E128(v240);
    *(void *)(v0 + 5320) = v42;
    if (v41)
    {
      uint64_t v48 = *(void *)(v0 + 5144);
      if (!v48)
      {
        sub_251A1A930(v2, v231);
        uint64_t v49 = sub_251A4E128(v231);
        sub_251A4DB38(v49);
LABEL_37:
        *(void *)(v0 + 5368) = v5;
        if (*(void *)(*(void *)(v0 + 5136) + 16))
        {
          uint64_t v50 = *(void *)(v0 + 5312);
          *(void *)(v0 + 4608) = &type metadata for HomeKitFeatures;
          *(void *)(v0 + 4616) = v50;
          unsigned char *v235 = 4;
          char v51 = sub_251F34F60();
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v235);
          if (v51) {
            goto LABEL_131;
          }
          if (qword_269B9C4C0 != -1) {
            swift_once();
          }
          if (byte_269BA38B2 == 1)
          {
LABEL_131:
            uint64_t v52 = *(void *)(*(void *)(v0 + 5088) + *(int *)(v0 + 780));
            if (*(void *)(v52 + 16))
            {
              unint64_t v53 = sub_2519FE614(23);
              if (v54)
              {
                sub_251A1A930(*(void *)(v52 + 56) + (v53 << 8), v229);
                sub_251A1A930(v229, v226);
                if (sub_251A4DB2C(v226) == 2)
                {
                  uint64_t v206 = *(void *)(v0 + 5136);
                  long long v207 = (_OWORD *)sub_251A4E128(v226);
                  long long v209 = v207[1];
                  long long v208 = v207[2];
                  *(_OWORD *)(v0 + 3584) = *v207;
                  *(_OWORD *)(v0 + 3600) = v209;
                  *(_OWORD *)(v0 + 3616) = v208;
                  long long v210 = v207[5];
                  long long v211 = v207[6];
                  long long v212 = v207[4];
                  *(_OWORD *)(v0 + 3632) = v207[3];
                  *(_OWORD *)(v0 + 3680) = v211;
                  *(_OWORD *)(v0 + 3664) = v210;
                  *(_OWORD *)(v0 + 3648) = v212;
                  long long v213 = v207[9];
                  long long v214 = v207[10];
                  long long v215 = v207[8];
                  *(_OWORD *)(v0 + 3696) = v207[7];
                  *(_OWORD *)(v0 + 3744) = v214;
                  *(_OWORD *)(v0 + 3728) = v213;
                  *(_OWORD *)(v0 + 3712) = v215;
                  long long v217 = v207[12];
                  long long v216 = v207[13];
                  long long v218 = *(_OWORD *)((char *)v207 + 220);
                  *(_OWORD *)(v0 + 3760) = v207[11];
                  *(_OWORD *)(v0 + 3804) = v218;
                  *(_OWORD *)(v0 + 3792) = v216;
                  *(_OWORD *)(v0 + 3776) = v217;
                  sub_251A1A930(v229, v0 + 2832);
                  uint64_t v219 = sub_251A4E128(v0 + 2832);
                  sub_251A4DB38(v219);
                  long long v220 = (void *)swift_task_alloc();
                  *(void *)(v0 + 5376) = v220;
                  *long long v220 = v0;
                  v220[1] = sub_251A35A98;
                  return StaticRVCClusterGroup.changeToCleanMode(containing:)(v206);
                }
              }
            }
          }
        }
        char v55 = v1;
        int v56 = *(unsigned __int8 *)(v0 + 5128);
        if (v56 == 2)
        {
          uint64_t v104 = *(void *)(v0 + 5320);
          unint64_t v105 = sub_251A19C30((uint64_t)&unk_2702618D8);
          __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CE50);
          swift_arrayDestroy();
          uint64_t v106 = *(void *)v104;
          *(void *)(v0 + 5496) = *(void *)v104;
          __int16 v107 = *(_WORD *)(v104 + 8);
          *(_WORD *)(v0 + 1548) = v107;
          *(unsigned char *)(v0 + 2062) = *(unsigned char *)(v104 + 10);
          LOBYTE(v248[0]) = 23;
          sub_251AA4920(v105);
          *(void *)(v0 + 5504) = v108;
          swift_bridgeObjectRelease();
          sub_251A4DB38(v104);
          sub_251A1A568(0, &qword_269B9CE58);
          *(void *)(v0 + 4872) = v106;
          *(_WORD *)(v0 + 4880) = v107;
          v55[338] = 23;
          unint64_t v109 = (void *)swift_task_alloc();
          *(void *)(v0 + 5512) = v109;
          *unint64_t v109 = v0;
          v109[1] = sub_251A3AF90;
          uint64_t v103 = (uint64_t *)(v0 + 4872);
        }
        else
        {
          if (v56 == 1)
          {
            uint64_t v110 = *(void *)(v0 + 5320);
            if (*(unsigned char *)(v110 + 112) != 1)
            {
              long long v147 = (unsigned char *)(v0 + 1550);
              long long v148 = *(_OWORD *)v110;
              long long v149 = *(_OWORD *)(v110 + 16);
              *(_OWORD *)(v0 + 3856) = *(_OWORD *)(v110 + 32);
              *(_OWORD *)(v0 + 3840) = v149;
              *(_OWORD *)(v0 + 3824) = v148;
              long long v150 = *(_OWORD *)(v110 + 48);
              long long v151 = *(_OWORD *)(v110 + 64);
              long long v152 = *(_OWORD *)(v110 + 80);
              *(_OWORD *)(v0 + 3920) = *(_OWORD *)(v110 + 96);
              *(_OWORD *)(v0 + 3904) = v152;
              *(_OWORD *)(v0 + 3888) = v151;
              *(_OWORD *)(v0 + 3872) = v150;
              long long v153 = *(_OWORD *)(v110 + 112);
              long long v154 = *(_OWORD *)(v110 + 128);
              long long v155 = *(_OWORD *)(v110 + 144);
              *(_OWORD *)(v0 + 3984) = *(_OWORD *)(v110 + 160);
              *(_OWORD *)(v0 + 3968) = v155;
              *(_OWORD *)(v0 + 3952) = v154;
              *(_OWORD *)(v0 + 3936) = v153;
              long long v156 = *(_OWORD *)(v110 + 176);
              long long v157 = *(_OWORD *)(v110 + 192);
              long long v158 = *(_OWORD *)(v110 + 208);
              *(_OWORD *)(v0 + 4044) = *(_OWORD *)(v110 + 220);
              *(_OWORD *)(v0 + 4032) = v158;
              *(_OWORD *)(v0 + 4016) = v157;
              *(_OWORD *)(v0 + 4000) = v156;
              *(unsigned char *)(v0 + 1550) = 0;
              long long v159 = (void *)swift_task_alloc();
              *(void *)(v0 + 5488) = v159;
              *long long v159 = v0;
              int64_t v160 = sub_251A3AE74;
LABEL_112:
              v159[1] = v160;
              return StaticRVCClusterGroup.changeToRunMode(containing:)(v147);
            }
            uint64_t v86 = (uint64_t *)(v0 + 4856);
            unint64_t v111 = sub_251A19C30((uint64_t)&unk_2702618A0);
            __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CE50);
            swift_arrayDestroy();
            uint64_t v112 = *(void *)v110;
            *(void *)(v0 + 5440) = *(void *)v110;
            __int16 v113 = *(_WORD *)(v110 + 8);
            *(_WORD *)(v0 + 1294) = v113;
            char v114 = *(unsigned char *)(v110 + 10);
            *(unsigned char *)(v0 + 2061) = v114;
            LOBYTE(v248[0]) = v114;
            sub_251AA4920(v111);
            *(void *)(v0 + 5448) = v115;
            swift_bridgeObjectRelease();
            sub_251A4DB38(v110);
            sub_251A1A568(0, &qword_269B9CE58);
            *(void *)(v0 + 4856) = v112;
            *(_WORD *)(v0 + 4864) = v113;
            v55[322] = 23;
            uint64_t v94 = (void *)swift_task_alloc();
            *(void *)(v0 + 5456) = v94;
            *uint64_t v94 = v0;
            uint64_t v95 = sub_251A3AA44;
          }
          else
          {
            if (*(unsigned char *)(v0 + 5128))
            {
              sub_251A4EDBC(*(void *)(v0 + 5088), (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
              sub_251A4EBF0(v2, sub_251A4DC54);
              uint64_t v5 = *(void *)(v0 + 5368);
              continue;
            }
            uint64_t v116 = *(void *)(v0 + 5320);
            uint64_t v117 = *(void *)(v116 + 40);
            if (*(void *)(v117 + 16))
            {
              sub_251F36CA0();
              sub_251F36CD0();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              sub_251F357B0();
              uint64_t v118 = sub_251F36D00();
              uint64_t v119 = -1 << *(unsigned char *)(v117 + 32);
              unint64_t v120 = v118 & ~v119;
              if ((*(void *)(v117 + 56 + ((v120 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v120))
              {
                uint64_t v121 = ~v119;
                while (*(unsigned char *)(*(void *)(v117 + 48) + v120) != 64)
                {
                  unint64_t v120 = (v120 + 1) & v121;
                  if (((*(void *)(v117 + 56 + ((v120 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v120) & 1) == 0) {
                    goto LABEL_83;
                  }
                }
                long long v147 = (unsigned char *)(v0 + 1551);
                long long v188 = *(long long **)(v0 + 5320);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                long long v189 = *v188;
                long long v190 = v188[1];
                *(_OWORD *)(v0 + 4336) = v188[2];
                *(_OWORD *)(v0 + 4320) = v190;
                *(_OWORD *)(v0 + 4304) = v189;
                long long v191 = v188[3];
                long long v192 = v188[4];
                long long v193 = v188[5];
                *(_OWORD *)(v0 + 4400) = v188[6];
                *(_OWORD *)(v0 + 4384) = v193;
                *(_OWORD *)(v0 + 4368) = v192;
                *(_OWORD *)(v0 + 4352) = v191;
                long long v194 = v188[7];
                long long v195 = v188[8];
                long long v196 = v188[9];
                *(_OWORD *)(v0 + 4464) = v188[10];
                *(_OWORD *)(v0 + 4448) = v196;
                *(_OWORD *)(v0 + 4432) = v195;
                *(_OWORD *)(v0 + 4416) = v194;
                long long v197 = v188[11];
                long long v198 = v188[12];
                long long v199 = v188[13];
                *(_OWORD *)(v0 + 4524) = *(long long *)((char *)v188 + 220);
                *(_OWORD *)(v0 + 4512) = v199;
                *(_OWORD *)(v0 + 4496) = v198;
                *(_OWORD *)(v0 + 4480) = v197;
                *(unsigned char *)(v0 + 1551) = 1;
                long long v159 = (void *)swift_task_alloc();
                *(void *)(v0 + 5384) = v159;
                *long long v159 = v0;
                int64_t v160 = sub_251A37478;
                goto LABEL_112;
              }
LABEL_83:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v116 = *(void *)(v0 + 5320);
            }
            uint64_t v86 = (uint64_t *)(v0 + 4936);
            unint64_t v122 = sub_251A19C30((uint64_t)&unk_270261868);
            __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CE50);
            swift_arrayDestroy();
            uint64_t v123 = *(void *)v116;
            *(void *)(v0 + 5392) = *(void *)v116;
            __int16 v124 = *(_WORD *)(v116 + 8);
            *(_WORD *)(v0 + 1292) = v124;
            *(unsigned char *)(v0 + 2060) = *(unsigned char *)(v116 + 10);
            LOBYTE(v248[0]) = 23;
            sub_251AA4920(v122);
            *(void *)(v0 + 5400) = v125;
            swift_bridgeObjectRelease();
            sub_251A4DB38(v116);
            sub_251A1A568(0, &qword_269B9CE58);
            *(void *)(v0 + 4936) = v123;
            *(_WORD *)(v0 + 4944) = v124;
            v55[402] = 23;
            uint64_t v94 = (void *)swift_task_alloc();
            *(void *)(v0 + 5408) = v94;
            *uint64_t v94 = v0;
            uint64_t v95 = (uint64_t (*)(uint64_t))sub_251A38E04;
          }
LABEL_71:
          v94[1] = v95;
          uint64_t v103 = v86;
        }
        return sub_251C4E0D4(v103);
      }
      int64_t v126 = *(void *)(v48 + 16);
      if (v126)
      {
        sub_251A1A930(v2, v224);
        uint64_t v127 = sub_251A4E128(v224);
        sub_251A4DB38(v127);
        uint64_t *v225 = MEMORY[0x263F8EE78];
        sub_251A3E1E0(0, v126, 0);
        unint64_t v128 = *(void *)(v48 + 32);
        if ((v128 & 0x8000000000000000) != 0 || HIDWORD(v128)) {
          return sub_251F36670();
        }
        uint64_t v227 = v42;
        uint64_t v129 = (uint64_t *)(v0 + 4992);
        uint64_t v130 = *v225;
        unint64_t v132 = *(void *)(*v225 + 16);
        unint64_t v131 = *(void *)(*v225 + 24);
        if (v132 >= v131 >> 1)
        {
          sub_251A3E1E0(v131 > 1, v132 + 1, 1);
          uint64_t v129 = (uint64_t *)(v0 + 4992);
          uint64_t v130 = *v225;
        }
        *(void *)(v130 + 16) = v132 + 1;
        *(_DWORD *)(v130 + 4 * v132 + 32) = v128;
        int64_t v133 = v126 - 1;
        if (v126 != 1)
        {
          uint64_t v200 = 0;
          unint64_t v201 = v132 + 9;
          long long v202 = "Not enough bits to represent the passed value";
          do
          {
            unint64_t v203 = *(void *)(*(void *)(v0 + 5144) + 8 * v200 + 40);
            if ((v203 & 0x8000000000000000) != 0 || HIDWORD(v203)) {
              return sub_251F36670();
            }
            *uint64_t v129 = v130;
            unint64_t v204 = *(void *)(v130 + 24);
            if (v201 - 8 >= v204 >> 1)
            {
              long long v205 = v202;
              sub_251A3E1E0(v204 > 1, v201 - 7, 1);
              long long v202 = v205;
              uint64_t v129 = (uint64_t *)(v0 + 4992);
              uint64_t v130 = *v225;
            }
            ++v200;
            *(void *)(v130 + 16) = v201 - 7;
            *(_DWORD *)(v130 + 4 * v201++) = v203;
          }
          while (v133 != v200);
        }
        uint64_t v42 = v227;
      }
      else
      {
        sub_251A1A930(v2, v223);
        uint64_t v161 = sub_251A4E128(v223);
        sub_251A4DB38(v161);
        uint64_t v130 = MEMORY[0x263F8EE78];
      }
      *(void *)(v0 + 5352) = v130;
      long long v162 = *(_OWORD *)v42;
      long long v163 = *(_OWORD *)(v42 + 16);
      *(_OWORD *)(v0 + 3376) = *(_OWORD *)(v42 + 32);
      *(_OWORD *)(v0 + 3360) = v163;
      *(_OWORD *)(v0 + 3344) = v162;
      long long v164 = *(_OWORD *)(v42 + 48);
      long long v165 = *(_OWORD *)(v42 + 64);
      long long v166 = *(_OWORD *)(v42 + 80);
      *(_OWORD *)(v0 + 3440) = *(_OWORD *)(v42 + 96);
      *(_OWORD *)(v0 + 3424) = v166;
      *(_OWORD *)(v0 + 3408) = v165;
      *(_OWORD *)(v0 + 3392) = v164;
      long long v167 = *(_OWORD *)(v42 + 112);
      long long v168 = *(_OWORD *)(v42 + 128);
      long long v169 = *(_OWORD *)(v42 + 144);
      *(_OWORD *)(v0 + 3504) = *(_OWORD *)(v42 + 160);
      *(_OWORD *)(v0 + 3488) = v169;
      *(_OWORD *)(v0 + 3472) = v168;
      *(_OWORD *)(v0 + 3456) = v167;
      long long v170 = *(_OWORD *)(v42 + 176);
      long long v171 = *(_OWORD *)(v42 + 192);
      long long v172 = *(_OWORD *)(v42 + 208);
      *(_OWORD *)(v0 + 3564) = *(_OWORD *)(v42 + 220);
      *(_OWORD *)(v0 + 3552) = v172;
      *(_OWORD *)(v0 + 3536) = v171;
      *(_OWORD *)(v0 + 3520) = v170;
      uint64_t v173 = (void *)swift_task_alloc();
      *(void *)(v0 + 5360) = v173;
      *uint64_t v173 = v0;
      v173[1] = sub_251A340FC;
      uint64_t v174 = v130;
      goto LABEL_108;
    }
    break;
  }
  if (HIDWORD(*(void *)(v0 + 5152))) {
    return sub_251F36670();
  }
  sub_251A1A930(v2, v233);
  uint64_t v43 = sub_251A4E128(v233);
  sub_251A4DB38(v43);
  uint64_t v44 = *(void *)(v42 + 120);
  if (!v44) {
    goto LABEL_37;
  }
  uint64_t v134 = *(void *)(v44 + 16);
  if (v134)
  {
    uint64_t v228 = v42;
    uint64_t v230 = *(void *)(v42 + 120);
    swift_bridgeObjectRetain();
    uint64_t v135 = v230;
    long long v136 = (uint64_t *)(v0 + 4984);
    uint64_t v137 = 0;
    uint64_t v138 = MEMORY[0x263F8EE78];
    do
    {
      uint64_t v143 = v135 + v137;
      if ((*(unsigned char *)(v135 + v137 + 40) & 1) == 0 && *(_DWORD *)(v143 + 36) == *(_DWORD *)(v0 + 5152))
      {
        int v144 = *(_DWORD *)(v143 + 32);
        uint64_t v145 = *(void *)(v143 + 56);
        uint64_t v247 = *(void *)(v143 + 48);
        __int16 v245 = *(_WORD *)(v143 + 64);
        char v243 = *(unsigned char *)(v143 + 66);
        char v241 = *(unsigned char *)(v143 + 67);
        char v239 = *(unsigned char *)(v143 + 68);
        char v237 = *(unsigned char *)(v143 + 69);
        char v236 = *(unsigned char *)(v143 + 70);
        char v234 = *(unsigned char *)(v143 + 71);
        char v232 = *(unsigned char *)(v143 + 72);
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *long long v136 = v138;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_251A3E220(0, *(void *)(v138 + 16) + 1, 1);
          uint64_t v138 = *v136;
        }
        unint64_t v140 = *(void *)(v138 + 16);
        unint64_t v139 = *(void *)(v138 + 24);
        uint64_t v135 = v230;
        if (v140 >= v139 >> 1)
        {
          sub_251A3E220(v139 > 1, v140 + 1, 1);
          uint64_t v135 = v230;
          uint64_t v138 = *(void *)(v0 + 4984);
        }
        uint64_t v141 = *(void *)(v0 + 5152);
        *(void *)(v138 + 16) = v140 + 1;
        uint64_t v142 = v138 + 48 * v140;
        *(_DWORD *)(v142 + 32) = v144;
        *(_DWORD *)(v142 + 36) = v141;
        *(unsigned char *)(v142 + 40) = 0;
        *(void *)(v142 + 48) = v247;
        *(void *)(v142 + 56) = v145;
        *(_WORD *)(v142 + 64) = v245;
        *(unsigned char *)(v142 + 66) = v243;
        *(unsigned char *)(v142 + 67) = v241;
        *(unsigned char *)(v142 + 68) = v239;
        *(unsigned char *)(v142 + 69) = v237;
        *(unsigned char *)(v142 + 70) = v236;
        *(unsigned char *)(v142 + 71) = v234;
        *(unsigned char *)(v142 + 72) = v232;
        long long v136 = (uint64_t *)(v0 + 4984);
      }
      v137 += 48;
      --v134;
    }
    while (v134);
    swift_bridgeObjectRelease();
    uint64_t v42 = v228;
  }
  else
  {
    uint64_t v138 = MEMORY[0x263F8EE78];
  }
  uint64_t v175 = sub_251A2C95C(v138);
  *(void *)(v0 + 5328) = v175;
  *(void *)(v0 + 5336) = v5;
  swift_release();
  long long v176 = *(_OWORD *)v42;
  long long v177 = *(_OWORD *)(v42 + 16);
  *(_OWORD *)(v0 + 4096) = *(_OWORD *)(v42 + 32);
  *(_OWORD *)(v0 + 4080) = v177;
  *(_OWORD *)(v0 + 4064) = v176;
  long long v178 = *(_OWORD *)(v42 + 48);
  long long v179 = *(_OWORD *)(v42 + 64);
  long long v180 = *(_OWORD *)(v42 + 80);
  *(_OWORD *)(v0 + 4160) = *(_OWORD *)(v42 + 96);
  *(_OWORD *)(v0 + 4144) = v180;
  *(_OWORD *)(v0 + 4128) = v179;
  *(_OWORD *)(v0 + 4112) = v178;
  long long v181 = *(_OWORD *)(v42 + 112);
  long long v182 = *(_OWORD *)(v42 + 128);
  long long v183 = *(_OWORD *)(v42 + 144);
  *(_OWORD *)(v0 + 4224) = *(_OWORD *)(v42 + 160);
  *(_OWORD *)(v0 + 4208) = v183;
  *(_OWORD *)(v0 + 4192) = v182;
  *(_OWORD *)(v0 + 4176) = v181;
  long long v184 = *(_OWORD *)(v42 + 176);
  long long v185 = *(_OWORD *)(v42 + 192);
  long long v186 = *(_OWORD *)(v42 + 208);
  *(_OWORD *)(v0 + 4284) = *(_OWORD *)(v42 + 220);
  *(_OWORD *)(v0 + 4272) = v186;
  *(_OWORD *)(v0 + 4256) = v185;
  *(_OWORD *)(v0 + 4240) = v184;
  long long v187 = (void *)swift_task_alloc();
  *(void *)(v0 + 5344) = v187;
  *long long v187 = v0;
  v187[1] = sub_251A32760;
  uint64_t v174 = v175;
LABEL_108:
  return StaticRVCClusterGroup.selectAreas(newAreas:)(v174);
}

uint64_t sub_251A3AA44(uint64_t a1)
{
  uint64_t v2 = *(void *)v1 + 1552;
  *(void *)(*(void *)v1 + 5464) = a1;
  swift_task_dealloc();
  sub_251A4EBF0(v2, sub_251A4DC54);
  return MEMORY[0x270FA2498](sub_251A3AB64, 0, 0);
}

uint64_t sub_251A3AB64()
{
  uint64_t v1 = *(void *)(v0 + 5448);
  char v2 = *(unsigned char *)(v0 + 2061);
  __int16 v3 = *(_WORD *)(v0 + 1294);
  uint64_t v4 = *(void *)(v0 + 5440);
  *(void *)(v0 + 4744) = 0xD000000000000016;
  *(void *)(v0 + 4752) = 0x8000000251F68280;
  *(void *)(v0 + 4888) = v4;
  *(_WORD *)(v0 + 4896) = v3;
  *(unsigned char *)(v0 + 4898) = v2;
  ClusterPath.description.getter();
  sub_251F35800();
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(v0 + 4744);
  uint64_t v6 = *(void *)(v0 + 4752);
  *(void *)(v0 + 5472) = v6;
  uint64_t v10 = (uint64_t (*)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_269B9D708
                                                                                              + dword_269B9D708);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 5480) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_251A3ACA4;
  uint64_t v8 = *(void *)(v0 + 5464);
  return v10(0x656D6F486F67, 0xE600000000000000, v8, v1, v5, v6);
}

uint64_t sub_251A3ACA4()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 5464);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA2498](sub_251A3ADF8, 0, 0);
}

uint64_t sub_251A3ADF8()
{
  sub_251A4EBF0(v0 + 1552, sub_251A4DC54);
  return MEMORY[0x270FA2498](sub_251A4EE20, 0, 0);
}

uint64_t sub_251A3AE74()
{
  uint64_t v1 = *v0 + 1552;
  swift_task_dealloc();
  sub_251A4EBF0(v1, sub_251A4DC54);
  return MEMORY[0x270FA2498](sub_251A4EE20, 0, 0);
}

uint64_t sub_251A3AF90(uint64_t a1)
{
  uint64_t v2 = *(void *)v1 + 1552;
  *(void *)(*(void *)v1 + 5520) = a1;
  swift_task_dealloc();
  sub_251A4EBF0(v2, sub_251A4DC54);
  return MEMORY[0x270FA2498](sub_251A3B0B0, 0, 0);
}

uint64_t sub_251A3B0B0()
{
  uint64_t v1 = *(void *)(v0 + 5504);
  char v2 = *(unsigned char *)(v0 + 2062);
  __int16 v3 = *(_WORD *)(v0 + 1548);
  uint64_t v4 = *(void *)(v0 + 5496);
  *(void *)(v0 + 4776) = 0xD000000000000016;
  *(void *)(v0 + 4784) = 0x8000000251F68280;
  *(void *)(v0 + 4808) = v4;
  *(_WORD *)(v0 + 4816) = v3;
  *(unsigned char *)(v0 + 4818) = v2;
  ClusterPath.description.getter();
  sub_251F35800();
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(v0 + 4776);
  uint64_t v6 = *(void *)(v0 + 4784);
  *(void *)(v0 + 5528) = v6;
  uint64_t v10 = (uint64_t (*)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_269B9D710
                                                                                              + dword_269B9D710);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 5536) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_251A3B1F0;
  uint64_t v8 = *(void *)(v0 + 5520);
  return v10(0x6573756170, 0xE500000000000000, v8, v1, v5, v6);
}

uint64_t sub_251A3B1F0()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 5520);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA2498](sub_251A3B344, 0, 0);
}

uint64_t sub_251A3B344()
{
  uint64_t v251 = v0;
  uint64_t v1 = (unsigned char *)(v0 + 4544);
  uint64_t v244 = v0 + 784;
  uint64_t v246 = v0 + 272;
  uint64_t v248 = v0 + 1040;
  uint64_t v242 = v0 + 1296;
  uint64_t v2 = v0 + 1552;
  uint64_t v227 = v0 + 2064;
  uint64_t v230 = v0 + 16;
  uint64_t v233 = v0 + 1808;
  uint64_t v235 = v0 + 2320;
  uint64_t v224 = v0 + 2576;
  uint64_t v225 = v0 + 3088;
  char v237 = (unsigned char *)(v0 + 4584);
  uint64_t v3 = v0 + 4680;
  uint64_t v4 = v0 + 4968;
  char v232 = (uint64_t *)(v0 + 4984);
  uint64_t v5 = *(void *)(v0 + 5088);
  uint64_t v226 = (uint64_t *)(v0 + 4992);
  sub_251A4EBF0(v0 + 1552, sub_251A4DC54);
  sub_251A4EDBC(v5, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
  uint64_t v6 = *(void *)(v0 + 5368);
  uint64_t v240 = v0 + 528;
  while (2)
  {
    while (2)
    {
      uint64_t v7 = *(void *)(v0 + 5304) + 1;
      if (v7 != *(void *)(v0 + 5168))
      {
        uint64_t v34 = *(void *)(v0 + 5288);
        goto LABEL_23;
      }
LABEL_4:
      sub_251A4DAE8(*(void *)(v0 + 5128), *(void *)(v0 + 5136), *(void *)(v0 + 5144), *(void *)(v0 + 5152), *(unsigned char *)(v0 + 1805));
      swift_bridgeObjectRelease();
      uint64_t v8 = *(void *)(v0 + 5104);
      uint64_t v9 = *(void *)(v0 + 5120);
      uint64_t v10 = v9 + 1;
      if (v9 + 1 == v8)
      {
LABEL_49:
        swift_bridgeObjectRelease();
        if (qword_26B21ECD0 != -1) {
          swift_once();
        }
        uint64_t v58 = sub_251F350A0();
        *(void *)(v0 + 5544) = __swift_project_value_buffer(v58, (uint64_t)qword_26B21ECB8);
        os_log_type_t v59 = sub_251F35080();
        os_log_type_t v60 = sub_251F35FB0();
        if (os_log_type_enabled(v59, v60))
        {
          uint64_t v61 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v61 = 0;
          _os_log_impl(&dword_2519F3000, v59, v60, "setting matter command expected interval back to default", v61, 2u);
          MEMORY[0x2533AC760](v61, -1, -1);
        }

        if (qword_269B9C330 != -1) {
          swift_once();
        }
        if (qword_269B9C328 != -1) {
          swift_once();
        }
        uint64_t v62 = *(void *)(v0 + 5064);
        uint64_t v63 = *(void *)(v0 + 5032);
        uint64_t v64 = (void *)qword_269B9FC10;
        swift_beginAccess();
        id v65 = (void *)qword_269B9FC18;
        qword_269B9FC18 = (uint64_t)v64;
        id v66 = v64;

        sub_251A1B128(v63, v62, &qword_26B21E6F0);
        uint64_t v67 = type metadata accessor for StaticHome();
        *(void *)(v0 + 5552) = v67;
        uint64_t v68 = *(void *)(v67 - 8);
        os_log_type_t v69 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v68 + 48);
        *(void *)(v0 + 5560) = v69;
        *(void *)(v0 + 5568) = (v68 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
        if (v69(v62, 1, v67) == 1)
        {
          sub_251A1B064(*(void *)(v0 + 5064), &qword_26B21E6F0);
          sub_251A1B128(*(void *)(v0 + 5032), *(void *)(v0 + 5056), &qword_26B21E6F0);
          os_log_type_t v70 = sub_251F35080();
          os_log_type_t v71 = sub_251F35FB0();
          if (os_log_type_enabled(v70, v71))
          {
            uint64_t v72 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 5560);
            uint64_t v73 = *(void *)(v0 + 5552);
            uint64_t v74 = *(void *)(v0 + 5056);
            uint64_t v75 = *(void *)(v0 + 5048);
            uint64_t v76 = (uint8_t *)swift_slowAlloc();
            uint64_t v77 = swift_slowAlloc();
            v250[0] = v77;
            *(_DWORD *)uint64_t v76 = 136315138;
            sub_251A1B128(v74, v75, &qword_26B21E6F0);
            if (v72(v75, 1, v73) == 1)
            {
              sub_251A1B064(*(void *)(v0 + 5048), &qword_26B21E6F0);
              uint64_t v78 = 0;
              unint64_t v79 = 0xE000000000000000;
            }
            else
            {
              uint64_t v82 = *(void *)(v0 + 5048);
              uint64_t v83 = (uint64_t *)(v82 + *(int *)(*(void *)(v0 + 5552) + 20));
              uint64_t v78 = *v83;
              unint64_t v79 = v83[1];
              swift_bridgeObjectRetain();
              sub_251A4EDBC(v82, (uint64_t (*)(void))type metadata accessor for StaticHome);
            }
            uint64_t v84 = *(void *)(v0 + 5056);
            *(void *)(v0 + 4968) = sub_251A00E84(v78, v79, v250);
            sub_251F361D0();
            swift_bridgeObjectRelease();
            sub_251A1B064(v84, &qword_26B21E6F0);
            _os_log_impl(&dword_2519F3000, v70, v71, "Not able to get HMHome for %s", v76, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x2533AC760](v77, -1, -1);
            MEMORY[0x2533AC760](v76, -1, -1);
          }
          else
          {
            sub_251A1B064(*(void *)(v0 + 5056), &qword_26B21E6F0);
          }

          uint64_t v85 = *(_OWORD **)(v0 + 5008);
          *uint64_t v85 = 0u;
          v85[1] = 0u;
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          uint64_t v86 = *(uint64_t (**)(void))(v0 + 8);
          return v86();
        }
        else
        {
          *(void *)(v0 + 5576) = sub_251F35C80();
          *(void *)(v0 + 5584) = sub_251F35C70();
          uint64_t v81 = sub_251F35C00();
          return MEMORY[0x270FA2498](sub_251A3CBD8, v81, v80);
        }
      }
      uint64_t v11 = *(void *)(v0 + 5024);
      uint64_t v12 = (unsigned char *)(*(void *)(v0 + 5016) + 40 * v9 + 104);
      while (1)
      {
        *(void *)(v0 + 5120) = v10;
        *(void *)(v0 + 5112) = v6;
        uint64_t v13 = *((void *)v12 - 4);
        *(void *)(v0 + 5128) = v13;
        uint64_t v14 = *((void *)v12 - 3);
        *(void *)(v0 + 5136) = v14;
        uint64_t v15 = *((void *)v12 - 2);
        *(void *)(v0 + 5144) = v15;
        uint64_t v16 = *((void *)v12 - 1);
        *(void *)(v0 + 5152) = v16;
        int v17 = (char)*v12;
        *(unsigned char *)(v0 + 1805) = *v12;
        uint64_t v18 = *(void *)(v11 + 16);
        if ((v17 & 0x80000000) == 0)
        {
          *(void *)(v0 + 5160) = v18;
          if (v18)
          {
            uint64_t v19 = *(void *)(v0 + 5080);
            int v20 = *(_DWORD *)(v19 + 80);
            *(_DWORD *)(v0 + 268) = v20;
            uint64_t v21 = *(void *)(v19 + 72);
            *(void *)(v0 + 5176) = v21;
            uint64_t v22 = swift_bridgeObjectRetain();
            uint64_t v23 = 0;
            while (1)
            {
              *(void *)(v0 + 5184) = v23;
              uint64_t v24 = *(void *)(v0 + 5096);
              uint64_t v25 = *(void *)(v0 + 5072);
              sub_251A4ED54(v22 + ((v20 + 32) & ~(unint64_t)v20) + v21 * v23, v24, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
              uint64_t v26 = *(void *)(v24 + *(int *)(v25 + 36));
              uint64_t v27 = *(void *)(v26 + 16);
              if (v13)
              {
                if (v27)
                {
                  unint64_t v30 = sub_2519FE614(10);
                  if (v31)
                  {
                    sub_251A1A930(*(void *)(v26 + 56) + (v30 << 8), v246);
                    sub_251A1A930(v246, v240);
                    if (sub_251A4DB2C(v240) == 1)
                    {
                      uint64_t v87 = (uint64_t *)(v0 + 4840);
                      uint64_t v97 = sub_251A4E128(v240);
                      uint64_t v98 = v1;
                      uint64_t v99 = *(void *)v97;
                      *(void *)(v0 + 5192) = *(void *)v97;
                      __int16 v100 = *(_WORD *)(v97 + 8);
                      *(_WORD *)(v0 + 1036) = v100;
                      char v101 = *(unsigned char *)(v97 + 10);
                      *(unsigned char *)(v0 + 1806) = v101;
                      unint64_t v102 = sub_251A19C30((uint64_t)&unk_2702617F8);
                      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CE50);
                      swift_arrayDestroy();
                      LOBYTE(v250[0]) = v101;
                      sub_251AA4920(v102);
                      *(void *)(v0 + 5200) = v103;
                      swift_bridgeObjectRelease();
                      sub_251A1A568(0, (unint64_t *)&qword_269B9CE60);
                      *(void *)(v0 + 4840) = v99;
                      *(_WORD *)(v0 + 4848) = v100;
                      v98[306] = v101;
                      uint64_t v95 = (void *)swift_task_alloc();
                      *(void *)(v0 + 5208) = v95;
                      *uint64_t v95 = v0;
                      uint64_t v96 = (uint64_t (*)(uint64_t))sub_251A30810;
                      goto LABEL_71;
                    }
                  }
                }
              }
              else if (v27)
              {
                unint64_t v28 = sub_2519FE614(10);
                if (v29)
                {
                  sub_251A1A930(*(void *)(v26 + 56) + (v28 << 8), v244);
                  sub_251A1A930(v244, v248);
                  if (sub_251A4DB2C(v248) == 1)
                  {
                    uint64_t v87 = (uint64_t *)(v0 + 4920);
                    uint64_t v88 = sub_251A4E128(v248);
                    uint64_t v89 = v1;
                    uint64_t v90 = *(void *)v88;
                    *(void *)(v0 + 5240) = *(void *)v88;
                    __int16 v91 = *(_WORD *)(v88 + 8);
                    *(_WORD *)(v0 + 1038) = v91;
                    char v92 = *(unsigned char *)(v88 + 10);
                    *(unsigned char *)(v0 + 1807) = v92;
                    unint64_t v93 = sub_251A19C30((uint64_t)&unk_270261830);
                    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CE50);
                    swift_arrayDestroy();
                    LOBYTE(v250[0]) = v92;
                    sub_251AA4920(v93);
                    *(void *)(v0 + 5248) = v94;
                    swift_bridgeObjectRelease();
                    sub_251A1A568(0, (unint64_t *)&qword_269B9CE60);
                    *(void *)(v0 + 4920) = v90;
                    *(_WORD *)(v0 + 4928) = v91;
                    v89[386] = v92;
                    uint64_t v95 = (void *)swift_task_alloc();
                    *(void *)(v0 + 5256) = v95;
                    *uint64_t v95 = v0;
                    uint64_t v96 = sub_251A323D0;
                    goto LABEL_71;
                  }
                }
              }
              uint64_t v32 = *(void *)(v0 + 5160);
              uint64_t v33 = *(void *)(v0 + 5184) + 1;
              sub_251A4EDBC(*(void *)(v0 + 5096), (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
              if (v33 == v32)
              {
                uint64_t v6 = *(void *)(v0 + 5112);
                goto LABEL_4;
              }
              uint64_t v23 = *(void *)(v0 + 5184) + 1;
              uint64_t v21 = *(void *)(v0 + 5176);
              LOBYTE(v20) = *(unsigned char *)(v0 + 268);
              uint64_t v13 = *(void *)(v0 + 5128);
              uint64_t v22 = *(void *)(v0 + 5024);
            }
          }
          goto LABEL_7;
        }
        *(void *)(v0 + 5168) = v18;
        if (v18) {
          break;
        }
LABEL_7:
        v12 += 40;
        if (v8 == ++v10) {
          goto LABEL_49;
        }
      }
      uint64_t v223 = v3;
      uint64_t v46 = v4;
      uint64_t v47 = v1;
      uint64_t v48 = *(void *)(v0 + 5080);
      *(_DWORD *)(v0 + 524) = *(_DWORD *)(v48 + 80);
      swift_bridgeObjectRetain();
      sub_251A4DA50(v13, v14, v15, v16, v17);
      uint64_t v7 = 0;
      uint64_t v34 = *(void *)(v48 + 72);
      uint64_t v1 = v47;
      uint64_t v4 = v46;
      uint64_t v3 = v223;
      *(void *)(v0 + 5288) = v34;
      uint64_t v2 = v0 + 1552;
LABEL_23:
      *(void *)(v0 + 5304) = v7;
      *(void *)(v0 + 5296) = v6;
      sub_251A4ED54(*(void *)(v0 + 5024)+ ((*(unsigned __int8 *)(v0 + 524) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 524))+ v34 * v7, *(void *)(v0 + 5088), (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
      *(void *)(v0 + 4568) = &type metadata for HomeKitFeatures;
      unint64_t v35 = sub_251A4DA94();
      *(void *)(v0 + 5312) = v35;
      *(void *)(v0 + 4576) = v35;
      *uint64_t v1 = 4;
      char v36 = sub_251F34F60();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v1);
      if ((v36 & 1) == 0)
      {
        if (qword_269B9C4C0 != -1) {
          swift_once();
        }
        if (byte_269BA38B2 != 1) {
          goto LABEL_2;
        }
      }
      uint64_t v37 = *(void *)(v0 + 5088);
      uint64_t v38 = *(int *)(*(void *)(v0 + 5072) + 36);
      *(_DWORD *)(v0 + 780) = v38;
      uint64_t v39 = *(void *)(v37 + v38);
      if (!*(void *)(v39 + 16)
        || (unint64_t v40 = sub_2519FE614(23), (v41 & 1) == 0)
        || (sub_251A1A930(*(void *)(v39 + 56) + (v40 << 8), v2),
            sub_251A1A930(v2, v242),
            sub_251A4DB2C(v242) != 2))
      {
LABEL_2:
        sub_251A4EDBC(*(void *)(v0 + 5088), (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
        continue;
      }
      break;
    }
    char v42 = *(unsigned char *)(v0 + 1805);
    uint64_t v43 = sub_251A4E128(v242);
    *(void *)(v0 + 5320) = v43;
    if (v42)
    {
      uint64_t v49 = *(void *)(v0 + 5144);
      if (!v49)
      {
        sub_251A1A930(v2, v233);
        uint64_t v50 = sub_251A4E128(v233);
        sub_251A4DB38(v50);
LABEL_37:
        *(void *)(v0 + 5368) = v6;
        if (*(void *)(*(void *)(v0 + 5136) + 16))
        {
          uint64_t v51 = *(void *)(v0 + 5312);
          *(void *)(v0 + 4608) = &type metadata for HomeKitFeatures;
          *(void *)(v0 + 4616) = v51;
          *char v237 = 4;
          char v52 = sub_251F34F60();
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v237);
          if (v52) {
            goto LABEL_131;
          }
          if (qword_269B9C4C0 != -1) {
            swift_once();
          }
          if (byte_269BA38B2 == 1)
          {
LABEL_131:
            uint64_t v53 = *(void *)(*(void *)(v0 + 5088) + *(int *)(v0 + 780));
            if (*(void *)(v53 + 16))
            {
              unint64_t v54 = sub_2519FE614(23);
              if (v55)
              {
                sub_251A1A930(*(void *)(v53 + 56) + (v54 << 8), v230);
                sub_251A1A930(v230, v227);
                if (sub_251A4DB2C(v227) == 2)
                {
                  uint64_t v207 = *(void *)(v0 + 5136);
                  long long v208 = (_OWORD *)sub_251A4E128(v227);
                  long long v210 = v208[1];
                  long long v209 = v208[2];
                  *(_OWORD *)(v0 + 3584) = *v208;
                  *(_OWORD *)(v0 + 3600) = v210;
                  *(_OWORD *)(v0 + 3616) = v209;
                  long long v211 = v208[5];
                  long long v212 = v208[6];
                  long long v213 = v208[4];
                  *(_OWORD *)(v0 + 3632) = v208[3];
                  *(_OWORD *)(v0 + 3680) = v212;
                  *(_OWORD *)(v0 + 3664) = v211;
                  *(_OWORD *)(v0 + 3648) = v213;
                  long long v214 = v208[9];
                  long long v215 = v208[10];
                  long long v216 = v208[8];
                  *(_OWORD *)(v0 + 3696) = v208[7];
                  *(_OWORD *)(v0 + 3744) = v215;
                  *(_OWORD *)(v0 + 3728) = v214;
                  *(_OWORD *)(v0 + 3712) = v216;
                  long long v218 = v208[12];
                  long long v217 = v208[13];
                  long long v219 = *(_OWORD *)((char *)v208 + 220);
                  *(_OWORD *)(v0 + 3760) = v208[11];
                  *(_OWORD *)(v0 + 3804) = v219;
                  *(_OWORD *)(v0 + 3792) = v217;
                  *(_OWORD *)(v0 + 3776) = v218;
                  sub_251A1A930(v230, v0 + 2832);
                  uint64_t v220 = sub_251A4E128(v0 + 2832);
                  sub_251A4DB38(v220);
                  long long v221 = (void *)swift_task_alloc();
                  *(void *)(v0 + 5376) = v221;
                  *long long v221 = v0;
                  v221[1] = sub_251A35A98;
                  return StaticRVCClusterGroup.changeToCleanMode(containing:)(v207);
                }
              }
            }
          }
        }
        int v56 = v1;
        int v57 = *(unsigned __int8 *)(v0 + 5128);
        if (v57 == 2)
        {
          uint64_t v105 = *(void *)(v0 + 5320);
          unint64_t v106 = sub_251A19C30((uint64_t)&unk_2702618D8);
          __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CE50);
          swift_arrayDestroy();
          uint64_t v107 = *(void *)v105;
          *(void *)(v0 + 5496) = *(void *)v105;
          __int16 v108 = *(_WORD *)(v105 + 8);
          *(_WORD *)(v0 + 1548) = v108;
          *(unsigned char *)(v0 + 2062) = *(unsigned char *)(v105 + 10);
          LOBYTE(v250[0]) = 23;
          sub_251AA4920(v106);
          *(void *)(v0 + 5504) = v109;
          swift_bridgeObjectRelease();
          sub_251A4DB38(v105);
          sub_251A1A568(0, &qword_269B9CE58);
          *(void *)(v0 + 4872) = v107;
          *(_WORD *)(v0 + 4880) = v108;
          v56[338] = 23;
          uint64_t v110 = (void *)swift_task_alloc();
          *(void *)(v0 + 5512) = v110;
          *uint64_t v110 = v0;
          v110[1] = sub_251A3AF90;
          uint64_t v104 = (uint64_t *)(v0 + 4872);
        }
        else
        {
          if (v57 == 1)
          {
            uint64_t v111 = *(void *)(v0 + 5320);
            if (*(unsigned char *)(v111 + 112) != 1)
            {
              long long v148 = (unsigned char *)(v0 + 1550);
              long long v149 = *(_OWORD *)v111;
              long long v150 = *(_OWORD *)(v111 + 16);
              *(_OWORD *)(v0 + 3856) = *(_OWORD *)(v111 + 32);
              *(_OWORD *)(v0 + 3840) = v150;
              *(_OWORD *)(v0 + 3824) = v149;
              long long v151 = *(_OWORD *)(v111 + 48);
              long long v152 = *(_OWORD *)(v111 + 64);
              long long v153 = *(_OWORD *)(v111 + 80);
              *(_OWORD *)(v0 + 3920) = *(_OWORD *)(v111 + 96);
              *(_OWORD *)(v0 + 3904) = v153;
              *(_OWORD *)(v0 + 3888) = v152;
              *(_OWORD *)(v0 + 3872) = v151;
              long long v154 = *(_OWORD *)(v111 + 112);
              long long v155 = *(_OWORD *)(v111 + 128);
              long long v156 = *(_OWORD *)(v111 + 144);
              *(_OWORD *)(v0 + 3984) = *(_OWORD *)(v111 + 160);
              *(_OWORD *)(v0 + 3968) = v156;
              *(_OWORD *)(v0 + 3952) = v155;
              *(_OWORD *)(v0 + 3936) = v154;
              long long v157 = *(_OWORD *)(v111 + 176);
              long long v158 = *(_OWORD *)(v111 + 192);
              long long v159 = *(_OWORD *)(v111 + 208);
              *(_OWORD *)(v0 + 4044) = *(_OWORD *)(v111 + 220);
              *(_OWORD *)(v0 + 4032) = v159;
              *(_OWORD *)(v0 + 4016) = v158;
              *(_OWORD *)(v0 + 4000) = v157;
              *(unsigned char *)(v0 + 1550) = 0;
              int64_t v160 = (void *)swift_task_alloc();
              *(void *)(v0 + 5488) = v160;
              *int64_t v160 = v0;
              uint64_t v161 = sub_251A3AE74;
LABEL_112:
              v160[1] = v161;
              return StaticRVCClusterGroup.changeToRunMode(containing:)(v148);
            }
            uint64_t v87 = (uint64_t *)(v0 + 4856);
            unint64_t v112 = sub_251A19C30((uint64_t)&unk_2702618A0);
            __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CE50);
            swift_arrayDestroy();
            uint64_t v113 = *(void *)v111;
            *(void *)(v0 + 5440) = *(void *)v111;
            __int16 v114 = *(_WORD *)(v111 + 8);
            *(_WORD *)(v0 + 1294) = v114;
            char v115 = *(unsigned char *)(v111 + 10);
            *(unsigned char *)(v0 + 2061) = v115;
            LOBYTE(v250[0]) = v115;
            sub_251AA4920(v112);
            *(void *)(v0 + 5448) = v116;
            swift_bridgeObjectRelease();
            sub_251A4DB38(v111);
            sub_251A1A568(0, &qword_269B9CE58);
            *(void *)(v0 + 4856) = v113;
            *(_WORD *)(v0 + 4864) = v114;
            v56[322] = 23;
            uint64_t v95 = (void *)swift_task_alloc();
            *(void *)(v0 + 5456) = v95;
            *uint64_t v95 = v0;
            uint64_t v96 = sub_251A3AA44;
          }
          else
          {
            if (*(unsigned char *)(v0 + 5128))
            {
              sub_251A4EDBC(*(void *)(v0 + 5088), (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
              sub_251A4EBF0(v2, sub_251A4DC54);
              uint64_t v6 = *(void *)(v0 + 5368);
              continue;
            }
            uint64_t v117 = *(void *)(v0 + 5320);
            uint64_t v118 = *(void *)(v117 + 40);
            if (*(void *)(v118 + 16))
            {
              sub_251F36CA0();
              sub_251F36CD0();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              sub_251F357B0();
              uint64_t v119 = sub_251F36D00();
              uint64_t v120 = -1 << *(unsigned char *)(v118 + 32);
              unint64_t v121 = v119 & ~v120;
              if ((*(void *)(v118 + 56 + ((v121 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v121))
              {
                uint64_t v122 = ~v120;
                while (*(unsigned char *)(*(void *)(v118 + 48) + v121) != 64)
                {
                  unint64_t v121 = (v121 + 1) & v122;
                  if (((*(void *)(v118 + 56 + ((v121 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v121) & 1) == 0) {
                    goto LABEL_83;
                  }
                }
                long long v148 = (unsigned char *)(v0 + 1551);
                long long v189 = *(long long **)(v0 + 5320);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                long long v190 = *v189;
                long long v191 = v189[1];
                *(_OWORD *)(v0 + 4336) = v189[2];
                *(_OWORD *)(v0 + 4320) = v191;
                *(_OWORD *)(v0 + 4304) = v190;
                long long v192 = v189[3];
                long long v193 = v189[4];
                long long v194 = v189[5];
                *(_OWORD *)(v0 + 4400) = v189[6];
                *(_OWORD *)(v0 + 4384) = v194;
                *(_OWORD *)(v0 + 4368) = v193;
                *(_OWORD *)(v0 + 4352) = v192;
                long long v195 = v189[7];
                long long v196 = v189[8];
                long long v197 = v189[9];
                *(_OWORD *)(v0 + 4464) = v189[10];
                *(_OWORD *)(v0 + 4448) = v197;
                *(_OWORD *)(v0 + 4432) = v196;
                *(_OWORD *)(v0 + 4416) = v195;
                long long v198 = v189[11];
                long long v199 = v189[12];
                long long v200 = v189[13];
                *(_OWORD *)(v0 + 4524) = *(long long *)((char *)v189 + 220);
                *(_OWORD *)(v0 + 4512) = v200;
                *(_OWORD *)(v0 + 4496) = v199;
                *(_OWORD *)(v0 + 4480) = v198;
                *(unsigned char *)(v0 + 1551) = 1;
                int64_t v160 = (void *)swift_task_alloc();
                *(void *)(v0 + 5384) = v160;
                *int64_t v160 = v0;
                uint64_t v161 = sub_251A37478;
                goto LABEL_112;
              }
LABEL_83:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v117 = *(void *)(v0 + 5320);
            }
            uint64_t v87 = (uint64_t *)(v0 + 4936);
            unint64_t v123 = sub_251A19C30((uint64_t)&unk_270261868);
            __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CE50);
            swift_arrayDestroy();
            uint64_t v124 = *(void *)v117;
            *(void *)(v0 + 5392) = *(void *)v117;
            __int16 v125 = *(_WORD *)(v117 + 8);
            *(_WORD *)(v0 + 1292) = v125;
            *(unsigned char *)(v0 + 2060) = *(unsigned char *)(v117 + 10);
            LOBYTE(v250[0]) = 23;
            sub_251AA4920(v123);
            *(void *)(v0 + 5400) = v126;
            swift_bridgeObjectRelease();
            sub_251A4DB38(v117);
            sub_251A1A568(0, &qword_269B9CE58);
            *(void *)(v0 + 4936) = v124;
            *(_WORD *)(v0 + 4944) = v125;
            v56[402] = 23;
            uint64_t v95 = (void *)swift_task_alloc();
            *(void *)(v0 + 5408) = v95;
            *uint64_t v95 = v0;
            uint64_t v96 = (uint64_t (*)(uint64_t))sub_251A38E04;
          }
LABEL_71:
          v95[1] = v96;
          uint64_t v104 = v87;
        }
        return sub_251C4E0D4(v104);
      }
      int64_t v127 = *(void *)(v49 + 16);
      if (v127)
      {
        sub_251A1A930(v2, v225);
        uint64_t v128 = sub_251A4E128(v225);
        sub_251A4DB38(v128);
        *uint64_t v226 = MEMORY[0x263F8EE78];
        sub_251A3E1E0(0, v127, 0);
        unint64_t v129 = *(void *)(v49 + 32);
        if ((v129 & 0x8000000000000000) != 0 || HIDWORD(v129)) {
          return sub_251F36670();
        }
        uint64_t v228 = v43;
        uint64_t v130 = (uint64_t *)(v0 + 4992);
        uint64_t v131 = *v226;
        unint64_t v133 = *(void *)(*v226 + 16);
        unint64_t v132 = *(void *)(*v226 + 24);
        if (v133 >= v132 >> 1)
        {
          sub_251A3E1E0(v132 > 1, v133 + 1, 1);
          uint64_t v130 = (uint64_t *)(v0 + 4992);
          uint64_t v131 = *v226;
        }
        *(void *)(v131 + 16) = v133 + 1;
        *(_DWORD *)(v131 + 4 * v133 + 32) = v129;
        int64_t v134 = v127 - 1;
        if (v127 != 1)
        {
          uint64_t v201 = 0;
          unint64_t v202 = v133 + 9;
          unint64_t v203 = "Not enough bits to represent the passed value";
          do
          {
            unint64_t v204 = *(void *)(*(void *)(v0 + 5144) + 8 * v201 + 40);
            if ((v204 & 0x8000000000000000) != 0 || HIDWORD(v204)) {
              return sub_251F36670();
            }
            *uint64_t v130 = v131;
            unint64_t v205 = *(void *)(v131 + 24);
            if (v202 - 8 >= v205 >> 1)
            {
              uint64_t v206 = v203;
              sub_251A3E1E0(v205 > 1, v202 - 7, 1);
              unint64_t v203 = v206;
              uint64_t v130 = (uint64_t *)(v0 + 4992);
              uint64_t v131 = *v226;
            }
            ++v201;
            *(void *)(v131 + 16) = v202 - 7;
            *(_DWORD *)(v131 + 4 * v202++) = v204;
          }
          while (v134 != v201);
        }
        uint64_t v43 = v228;
      }
      else
      {
        sub_251A1A930(v2, v224);
        uint64_t v162 = sub_251A4E128(v224);
        sub_251A4DB38(v162);
        uint64_t v131 = MEMORY[0x263F8EE78];
      }
      *(void *)(v0 + 5352) = v131;
      long long v163 = *(_OWORD *)v43;
      long long v164 = *(_OWORD *)(v43 + 16);
      *(_OWORD *)(v0 + 3376) = *(_OWORD *)(v43 + 32);
      *(_OWORD *)(v0 + 3360) = v164;
      *(_OWORD *)(v0 + 3344) = v163;
      long long v165 = *(_OWORD *)(v43 + 48);
      long long v166 = *(_OWORD *)(v43 + 64);
      long long v167 = *(_OWORD *)(v43 + 80);
      *(_OWORD *)(v0 + 3440) = *(_OWORD *)(v43 + 96);
      *(_OWORD *)(v0 + 3424) = v167;
      *(_OWORD *)(v0 + 3408) = v166;
      *(_OWORD *)(v0 + 3392) = v165;
      long long v168 = *(_OWORD *)(v43 + 112);
      long long v169 = *(_OWORD *)(v43 + 128);
      long long v170 = *(_OWORD *)(v43 + 144);
      *(_OWORD *)(v0 + 3504) = *(_OWORD *)(v43 + 160);
      *(_OWORD *)(v0 + 3488) = v170;
      *(_OWORD *)(v0 + 3472) = v169;
      *(_OWORD *)(v0 + 3456) = v168;
      long long v171 = *(_OWORD *)(v43 + 176);
      long long v172 = *(_OWORD *)(v43 + 192);
      long long v173 = *(_OWORD *)(v43 + 208);
      *(_OWORD *)(v0 + 3564) = *(_OWORD *)(v43 + 220);
      *(_OWORD *)(v0 + 3552) = v173;
      *(_OWORD *)(v0 + 3536) = v172;
      *(_OWORD *)(v0 + 3520) = v171;
      uint64_t v174 = (void *)swift_task_alloc();
      *(void *)(v0 + 5360) = v174;
      *uint64_t v174 = v0;
      v174[1] = sub_251A340FC;
      uint64_t v175 = v131;
      goto LABEL_108;
    }
    break;
  }
  if (HIDWORD(*(void *)(v0 + 5152))) {
    return sub_251F36670();
  }
  sub_251A1A930(v2, v235);
  uint64_t v44 = sub_251A4E128(v235);
  sub_251A4DB38(v44);
  uint64_t v45 = *(void *)(v43 + 120);
  if (!v45) {
    goto LABEL_37;
  }
  uint64_t v135 = *(void *)(v45 + 16);
  if (v135)
  {
    uint64_t v229 = v43;
    uint64_t v231 = *(void *)(v43 + 120);
    swift_bridgeObjectRetain();
    uint64_t v136 = v231;
    uint64_t v137 = (uint64_t *)(v0 + 4984);
    uint64_t v138 = 0;
    uint64_t v139 = MEMORY[0x263F8EE78];
    do
    {
      uint64_t v144 = v136 + v138;
      if ((*(unsigned char *)(v136 + v138 + 40) & 1) == 0 && *(_DWORD *)(v144 + 36) == *(_DWORD *)(v0 + 5152))
      {
        int v145 = *(_DWORD *)(v144 + 32);
        uint64_t v146 = *(void *)(v144 + 56);
        uint64_t v249 = *(void *)(v144 + 48);
        __int16 v247 = *(_WORD *)(v144 + 64);
        char v245 = *(unsigned char *)(v144 + 66);
        char v243 = *(unsigned char *)(v144 + 67);
        char v241 = *(unsigned char *)(v144 + 68);
        char v239 = *(unsigned char *)(v144 + 69);
        char v238 = *(unsigned char *)(v144 + 70);
        char v236 = *(unsigned char *)(v144 + 71);
        char v234 = *(unsigned char *)(v144 + 72);
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *uint64_t v137 = v139;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_251A3E220(0, *(void *)(v139 + 16) + 1, 1);
          uint64_t v137 = (uint64_t *)(v0 + 4984);
          uint64_t v139 = *v232;
        }
        unint64_t v141 = *(void *)(v139 + 16);
        unint64_t v140 = *(void *)(v139 + 24);
        uint64_t v136 = v231;
        if (v141 >= v140 >> 1)
        {
          sub_251A3E220(v140 > 1, v141 + 1, 1);
          uint64_t v136 = v231;
          uint64_t v137 = (uint64_t *)(v0 + 4984);
          uint64_t v139 = *v232;
        }
        uint64_t v142 = *(void *)(v0 + 5152);
        *(void *)(v139 + 16) = v141 + 1;
        uint64_t v143 = v139 + 48 * v141;
        *(_DWORD *)(v143 + 32) = v145;
        *(_DWORD *)(v143 + 36) = v142;
        *(unsigned char *)(v143 + 40) = 0;
        *(void *)(v143 + 48) = v249;
        *(void *)(v143 + 56) = v146;
        *(_WORD *)(v143 + 64) = v247;
        *(unsigned char *)(v143 + 66) = v245;
        *(unsigned char *)(v143 + 67) = v243;
        *(unsigned char *)(v143 + 68) = v241;
        *(unsigned char *)(v143 + 69) = v239;
        *(unsigned char *)(v143 + 70) = v238;
        *(unsigned char *)(v143 + 71) = v236;
        *(unsigned char *)(v143 + 72) = v234;
      }
      v138 += 48;
      --v135;
    }
    while (v135);
    swift_bridgeObjectRelease();
    uint64_t v43 = v229;
  }
  else
  {
    uint64_t v139 = MEMORY[0x263F8EE78];
  }
  uint64_t v176 = sub_251A2C95C(v139);
  *(void *)(v0 + 5328) = v176;
  *(void *)(v0 + 5336) = v6;
  swift_release();
  long long v177 = *(_OWORD *)v43;
  long long v178 = *(_OWORD *)(v43 + 16);
  *(_OWORD *)(v0 + 4096) = *(_OWORD *)(v43 + 32);
  *(_OWORD *)(v0 + 4080) = v178;
  *(_OWORD *)(v0 + 4064) = v177;
  long long v179 = *(_OWORD *)(v43 + 48);
  long long v180 = *(_OWORD *)(v43 + 64);
  long long v181 = *(_OWORD *)(v43 + 80);
  *(_OWORD *)(v0 + 4160) = *(_OWORD *)(v43 + 96);
  *(_OWORD *)(v0 + 4144) = v181;
  *(_OWORD *)(v0 + 4128) = v180;
  *(_OWORD *)(v0 + 4112) = v179;
  long long v182 = *(_OWORD *)(v43 + 112);
  long long v183 = *(_OWORD *)(v43 + 128);
  long long v184 = *(_OWORD *)(v43 + 144);
  *(_OWORD *)(v0 + 4224) = *(_OWORD *)(v43 + 160);
  *(_OWORD *)(v0 + 4208) = v184;
  *(_OWORD *)(v0 + 4192) = v183;
  *(_OWORD *)(v0 + 4176) = v182;
  long long v185 = *(_OWORD *)(v43 + 176);
  long long v186 = *(_OWORD *)(v43 + 192);
  long long v187 = *(_OWORD *)(v43 + 208);
  *(_OWORD *)(v0 + 4284) = *(_OWORD *)(v43 + 220);
  *(_OWORD *)(v0 + 4272) = v187;
  *(_OWORD *)(v0 + 4256) = v186;
  *(_OWORD *)(v0 + 4240) = v185;
  long long v188 = (void *)swift_task_alloc();
  *(void *)(v0 + 5344) = v188;
  *long long v188 = v0;
  v188[1] = sub_251A32760;
  uint64_t v175 = v176;
LABEL_108:
  return StaticRVCClusterGroup.selectAreas(newAreas:)(v175);
}

uint64_t sub_251A3CBD8()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251A3CC70, 0, 0);
}

uint64_t sub_251A3CC70()
{
  *(void *)(v0 + 5592) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251A3CCFC, v2, v1);
}

uint64_t sub_251A3CCFC()
{
  swift_release();
  *(void *)(v0 + 5600) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251A3CD70, 0, 0);
}

uint64_t sub_251A3CD70()
{
  *(void *)(v0 + 5608) = sub_251F34D50();
  *(void *)(v0 + 5616) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251A3CE08, v2, v1);
}

uint64_t sub_251A3CE08()
{
  uint64_t v1 = (void *)v0[701];
  uint64_t v2 = (void *)v0[700];
  swift_release();
  v0[703] = objc_msgSend(v2, sel_homeFor_, v1);

  return MEMORY[0x270FA2498](sub_251A3CE9C, 0, 0);
}

uint64_t sub_251A3CE9C()
{
  uint64_t v21 = v0;
  uint64_t v1 = v0[703];
  sub_251A4EDBC(v0[633], (uint64_t (*)(void))type metadata accessor for StaticHome);
  if (v1)
  {
    v0[704] = sub_251F35C70();
    uint64_t v3 = sub_251F35C00();
    return MEMORY[0x270FA2498](sub_251A3D1B8, v3, v2);
  }
  else
  {
    sub_251A1B128(v0[629], v0[632], &qword_26B21E6F0);
    uint64_t v4 = sub_251F35080();
    os_log_type_t v5 = sub_251F35FB0();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v0[695];
      uint64_t v7 = v0[694];
      uint64_t v8 = v0[632];
      uint64_t v9 = v0[631];
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      uint64_t v20 = v11;
      *(_DWORD *)uint64_t v10 = 136315138;
      sub_251A1B128(v8, v9, &qword_26B21E6F0);
      if (v6(v9, 1, v7) == 1)
      {
        sub_251A1B064(v0[631], &qword_26B21E6F0);
        uint64_t v12 = 0;
        unint64_t v13 = 0xE000000000000000;
      }
      else
      {
        uint64_t v14 = v0[631];
        uint64_t v15 = (uint64_t *)(v14 + *(int *)(v0[694] + 20));
        uint64_t v12 = *v15;
        unint64_t v13 = v15[1];
        swift_bridgeObjectRetain();
        sub_251A4EDBC(v14, (uint64_t (*)(void))type metadata accessor for StaticHome);
      }
      uint64_t v16 = v0[632];
      v0[621] = sub_251A00E84(v12, v13, &v20);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      sub_251A1B064(v16, &qword_26B21E6F0);
      _os_log_impl(&dword_2519F3000, v4, v5, "Not able to get HMHome for %s", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v11, -1, -1);
      MEMORY[0x2533AC760](v10, -1, -1);
    }
    else
    {
      sub_251A1B064(v0[632], &qword_26B21E6F0);
    }

    int v17 = (_OWORD *)v0[626];
    *int v17 = 0u;
    v17[1] = 0u;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v18 = (uint64_t (*)(void))v0[1];
    return v18();
  }
}

uint64_t sub_251A3D1B8()
{
  swift_release();
  if (qword_26B21E388 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251A3D250, 0, 0);
}

uint64_t sub_251A3D250()
{
  *(void *)(v0 + 5640) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251A3D2DC, v2, v1);
}

uint64_t sub_251A3D2DC()
{
  uint64_t v1 = *(void **)(v0 + 5624);
  swift_release();
  *(void *)(v0 + 4704) = v1;
  *(void *)(v0 + 4712) = 0;
  *(unsigned char *)(v0 + 4720) = 0;
  id v2 = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 5648) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_251A3D3C4;
  uint64_t v4 = *(void *)(v0 + 5624);
  return sub_251B5A374(v0 + 4624, v0 + 4704, v4);
}

uint64_t sub_251A3D3C4()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 5624);
  swift_task_dealloc();

  return MEMORY[0x270FA2498](sub_251A3D4D8, 0, 0);
}

uint64_t sub_251A3D4D8()
{
  uint64_t v1 = *(void *)(v0 + 5008);

  uint64_t v2 = *(void *)(v0 + 4648);
  long long v3 = *(_OWORD *)(v0 + 4632);
  *(void *)uint64_t v1 = *(void *)(v0 + 4624);
  *(_OWORD *)(v1 + 8) = v3;
  *(void *)(v1 + 24) = v2;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

void MatterStateSnapshot.tileInfo(for:)(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v54 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CE68);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = type metadata accessor for StaticEndpoint();
  uint64_t v7 = MEMORY[0x270FA5388](v51);
  uint64_t v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v49 - v10;
  uint64_t v52 = type metadata accessor for StaticMatterDevice();
  uint64_t v12 = *(void *)(v52 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v52);
  uint64_t v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  int v17 = (char *)&v49 - v16;
  uint64_t v18 = *(void *)a1;
  int v53 = *(unsigned __int16 *)(a1 + 8);
  char v19 = *(unsigned char *)(a1 + 10);
  uint64_t v20 = *(void *)(v2 + 16);
  if (*(void *)(v20 + 16) && (unint64_t v21 = sub_2519FE588(v18), (v22 & 1) != 0))
  {
    sub_251A4ED54(*(void *)(v20 + 56) + *(void *)(v12 + 72) * v21, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
    sub_251A4EC7C((uint64_t)v15, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
    if ((v19 & 1) == 0)
    {
      uint64_t v23 = swift_bridgeObjectRetain();
      __int16 v24 = v53;
      sub_251A2C648(v23, v53, (uint64_t)v6);
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F4C8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 48))(v6, 1, v25) != 1)
      {
        sub_251A4EC7C((uint64_t)&v6[*(int *)(v25 + 48)], (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
        swift_bridgeObjectRelease();
        sub_251A4EC7C((uint64_t)v9, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
        uint64_t v45 = v54;
        v54[3] = v51;
        v45[4] = sub_251A4E138(&qword_269B9CE78, (void (*)(uint64_t))type metadata accessor for StaticEndpoint);
        boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v45);
        sub_251A4EC7C((uint64_t)v11, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
        sub_251A4EDBC((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
        return;
      }
      sub_251A1B064((uint64_t)v6, &qword_269B9CE68);
      if (qword_26B21ECD0 != -1) {
        swift_once();
      }
      uint64_t v26 = sub_251F350A0();
      __swift_project_value_buffer(v26, (uint64_t)qword_26B21ECB8);
      swift_bridgeObjectRetain();
      uint64_t v27 = sub_251F35080();
      os_log_type_t v28 = sub_251F35FB0();
      if (os_log_type_enabled(v27, v28))
      {
        uint64_t v29 = swift_slowAlloc();
        uint64_t v50 = swift_slowAlloc();
        uint64_t v58 = v50;
        *(_DWORD *)uint64_t v29 = 136315650;
        uint64_t v55 = sub_251A00E84(0x6F666E49656C6974, 0xEE00293A726F6628, &v58);
        sub_251F361D0();
        *(_WORD *)(v29 + 12) = 2080;
        uint64_t v55 = v18;
        __int16 v56 = v24;
        char v57 = 0;
        uint64_t v30 = MatterTilePath.description.getter();
        uint64_t v55 = sub_251A00E84(v30, v31, &v58);
        sub_251F361D0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v29 + 22) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v32 = sub_251F35560();
        unint64_t v34 = v33;
        swift_bridgeObjectRelease();
        uint64_t v55 = sub_251A00E84(v32, v34, &v58);
        sub_251F361D0();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_2519F3000, v27, v28, "%s Failed to find static endpoint for path %s in endpoints %s", (uint8_t *)v29, 0x20u);
        uint64_t v35 = v50;
        swift_arrayDestroy();
        MEMORY[0x2533AC760](v35, -1, -1);
        MEMORY[0x2533AC760](v29, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
    }
    uint64_t v47 = v54;
    v54[3] = v52;
    v47[4] = sub_251A4E138(&qword_269B9CE70, (void (*)(uint64_t))type metadata accessor for StaticMatterDevice);
    uint64_t v48 = __swift_allocate_boxed_opaque_existential_1(v47);
    sub_251A4EC7C((uint64_t)v17, (uint64_t)v48, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
  }
  else
  {
    uint64_t v36 = v18;
    if (qword_26B21ECD0 != -1) {
      swift_once();
    }
    uint64_t v37 = sub_251F350A0();
    __swift_project_value_buffer(v37, (uint64_t)qword_26B21ECB8);
    uint64_t v38 = sub_251F35080();
    os_log_type_t v39 = sub_251F35FB0();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v40 = swift_slowAlloc();
      uint64_t v41 = swift_slowAlloc();
      uint64_t v58 = v41;
      *(_DWORD *)uint64_t v40 = 136315394;
      uint64_t v55 = sub_251A00E84(0x6F666E49656C6974, 0xEE00293A726F6628, &v58);
      sub_251F361D0();
      *(_WORD *)(v40 + 12) = 2080;
      uint64_t v55 = v36;
      __int16 v56 = v53;
      char v57 = v19;
      uint64_t v42 = MatterTilePath.description.getter();
      uint64_t v55 = sub_251A00E84(v42, v43, &v58);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2519F3000, v38, v39, "%s Failed to get static device for path %s", (uint8_t *)v40, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v41, -1, -1);
      MEMORY[0x2533AC760](v40, -1, -1);
    }

    uint64_t v44 = v54;
    v54[4] = 0;
    *(_OWORD *)uint64_t v44 = 0u;
    *((_OWORD *)v44 + 1) = 0u;
  }
}

uint64_t MatterStateSnapshot.accessoryDetails(for:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for AccessoryDetails(0);
  long long v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(a1, 1, 1, v2);
}

uint64_t MatterStateSnapshot.tilePaths.getter()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_251A2CA1C(v0);
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_251EE0AD4(v1);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_251A3DE00()
{
  unint64_t v0 = sub_251A19474(MEMORY[0x263F8EE78]);

  return sub_251A2CD48(0x7974706D65, 0xE500000000000000, v0, &qword_26B21F690);
}

uint64_t static MatterStateSnapshot.empty.getter@<X0>(void *a1@<X8>)
{
  if (qword_26B21F6E0 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_26B21F698;
  uint64_t v3 = qword_26B21F6A0;
  uint64_t v4 = unk_26B21F6A8;
  *a1 = qword_26B21F690;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_251A3DEDC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_251A3E9DC(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_251A3DEFC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_251A3EB48(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_251A3DF1C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_251A40B94(a1, a2, a3, (void *)*v3, &qword_26B21E5F8, &qword_26B21FFC8);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_251A3DF4C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_251A40B94(a1, a2, a3, (void *)*v3, &qword_269B9D028, &qword_26B21FD38);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_251A3DF7C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_251A40B94(a1, a2, a3, (void *)*v3, &qword_269B9D030, &qword_26B21FFE8);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_251A3DFAC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_251A40B94(a1, a2, a3, (void *)*v3, &qword_26B21EB88, &qword_26B21FFA0);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_251A3DFDC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_251A40F80(a1, a2, a3, (void *)*v3, &qword_26B21EB98, type metadata accessor for StaticRoom);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_251A3E018(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_251A40B94(a1, a2, a3, (void *)*v3, &qword_26B21ED98, &qword_26B21FFA8);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_251A3E048(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_251A40F80(a1, a2, a3, (void *)*v3, &qword_26B21EB90, (uint64_t (*)(void))type metadata accessor for StaticHome);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_251A3E084(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_251A40F80(a1, a2, a3, (void *)*v3, &qword_26B21EB80, MEMORY[0x270FA9498]);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_251A3E0B4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_251A40B94(a1, a2, a3, (void *)*v3, &qword_269B9D038, &qword_26B21F2F0);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_251A3E0E4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_251A40B94(a1, a2, a3, (void *)*v3, &qword_26B21F1F8, &qword_26B21FFC0);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_251A3E114(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_251A40F80(a1, a2, a3, (void *)*v3, &qword_26B21F220, type metadata accessor for StaticAccessory);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_251A3E150(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_251A40B94(a1, a2, a3, (void *)*v3, &qword_269B9D010, &qword_26B21FFD8);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_251A3E180(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_251A40B94(a1, a2, a3, (void *)*v3, &qword_26B21F200, &qword_26B21FFE0);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_251A3E1B0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_251A40B94(a1, a2, a3, (void *)*v3, &qword_26B21F1F0, &qword_26B21FD30);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_251A3E1E0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_251A3ED64(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_251A3E200(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_251A3EEC4(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_251A3E220(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_251A3F020(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_251A3E240(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_251A3F19C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_251A3E260(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_251A3F324(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_251A3E280(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_251A3F494(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_251A3E2A0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_251A3F618(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_251A3E2C0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_251A3F778(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_251A3E2E0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_251A3F8D8(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_251A3E300(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_251A3FA38(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_251A3E320(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_251A3FBA8(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_251A3E340(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_251A4055C(a1, a2, a3, *v3, &qword_269B9D0B8);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_251A3E368(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_251A3FD34(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_251A3E388(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_251A40B94(a1, a2, a3, (void *)*v3, &qword_269B9D018, &qword_269B9D020);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_251A3E3B8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_251A40B94(a1, a2, a3, (void *)*v3, &qword_26B21F1E8, &qword_26B21FFB8);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_251A3E3E8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_251A40F80(a1, a2, a3, (void *)*v3, &qword_26B21F208, (uint64_t (*)(void))type metadata accessor for StaticService);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_251A3E424(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_251A3FEF8(a1, a2, a3, *v3, &qword_269B9CFA8);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_251A3E44C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_251A40044(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_251A3E46C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_251A40F80(a1, a2, a3, (void *)*v3, &qword_269B9D0A0, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_251A3E4A8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_251A40F80(a1, a2, a3, (void *)*v3, &qword_269B9D090, type metadata accessor for ScrubberElement);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_251A3E4E4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_251A40F80(a1, a2, a3, (void *)*v3, &qword_269B9D098, (uint64_t (*)(void))type metadata accessor for SignificantEvent);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_251A3E520(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_251A40F80(a1, a2, a3, (void *)*v3, &qword_269B9CF30, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_251A3E55C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_251A40F80(a1, a2, a3, (void *)*v3, &qword_269B9CF28, (uint64_t (*)(void))type metadata accessor for StaticTimer);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_251A3E598(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_251A40864(a1, a2, a3, (void *)*v3, &qword_269B9CEC0, &qword_269B9CEC8);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_251A3E5C8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_251A40864(a1, a2, a3, (void *)*v3, &qword_269B9CEB0, &qword_269B9CEB8);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_251A3E5F8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_251A40F80(a1, a2, a3, (void *)*v3, &qword_26B21E600, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_251A3E634(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_251A40F80(a1, a2, a3, (void *)*v3, &qword_269B9D068, type metadata accessor for RoomType);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_251A3E670(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_251A40220(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_251A3E690(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_251A40390(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_251A3E6B0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_251A40F80(a1, a2, a3, (void *)*v3, &qword_269B9CFF8, (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_251A3E6EC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_251A40864(a1, a2, a3, (void *)*v3, &qword_269B9CF70, &qword_269B9CF78);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_251A3E71C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_251A40F80(a1, a2, a3, (void *)*v3, &qword_269B9CFA0, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_251A3E758(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_251A4055C(a1, a2, a3, *v3, &qword_269B9CFE8);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_251A3E780(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_251A40B94(a1, a2, a3, (void *)*v3, qword_26B21EDA0, &qword_26B21F5C0);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_251A3E7B0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_251A40F80(a1, a2, a3, (void *)*v3, &qword_269B9CFB8, type metadata accessor for StateSnapshot.UpdateType);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_251A3E7EC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_251A406B4(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_251A3E80C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_251A40F80(a1, a2, a3, (void *)*v3, &qword_269B9CF88, (uint64_t (*)(void))type metadata accessor for ActionService);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_251A3E848(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_251A40A0C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_251A3E868(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_251A40B94(a1, a2, a3, (void *)*v3, &qword_269B9CF68, (uint64_t *)&unk_269BA5B80);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_251A3E898(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_251A40F80(a1, a2, a3, (void *)*v3, &qword_269B9CF58, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_251A3E8D4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_251A40B94(a1, a2, a3, (void *)*v3, &qword_269B9D008, &qword_26B21F040);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_251A3E904(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_251A40B94(a1, a2, a3, (void *)*v3, &qword_269B9CF00, &qword_26B21F240);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_251A3E934(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_251A40864(a1, a2, a3, (void *)*v3, &qword_269B9CED8, &qword_269B9CEE0);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_251A3E964(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_251A40F80(a1, a2, a3, (void *)*v3, &qword_269B9D060, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_251A3E9A0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_251A40F80(a1, a2, a3, (void *)*v3, &qword_26B21F210, (uint64_t (*)(void))type metadata accessor for StaticResident);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_251A3E9DC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B21EBA0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251A3EB48(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF38);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8) {
      memmove(v10 + 4, a4 + 4, 24 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF40);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251A3ECF0(char a1, int64_t a2, char a3, void *a4)
{
  return sub_251A40F80(a1, a2, a3, a4, &qword_26B21F208, (uint64_t (*)(void))type metadata accessor for StaticService);
}

uint64_t sub_251A3ED10(char a1, int64_t a2, char a3, void *a4)
{
  return sub_251A40F80(a1, a2, a3, a4, &qword_26B21EB98, type metadata accessor for StaticRoom);
}

uint64_t sub_251A3ED30(char a1, int64_t a2, char a3, void *a4)
{
  return sub_251A40F80(a1, a2, a3, a4, &qword_26B21EB90, (uint64_t (*)(void))type metadata accessor for StaticHome);
}

uint64_t sub_251A3ED50(char a1, int64_t a2, char a3, void *a4)
{
  return sub_251A40F80(a1, a2, a3, a4, &qword_26B21EB80, MEMORY[0x270FA9498]);
}

uint64_t sub_251A3ED64(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D0C8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 29;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8]) {
      memmove(v13, v14, 4 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[4 * v8] || v13 >= &v14[4 * v8])
  {
    memcpy(v13, v14, 4 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251A3EEC4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D0A8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    int64_t v12 = v11 - 32;
    if (v11 < 32) {
      int64_t v12 = v11 - 31;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = v12 & 0xFFFFFFFFFFFFFFFELL;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[2 * v8]) {
      memmove(v13, v14, 2 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[2 * v8] || v13 >= &v14[2 * v8])
  {
    memcpy(v13, v14, 2 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251A3F020(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D0C0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  int64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  size_t v14 = 48 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251A3F19C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CFC0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  int64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8]) {
      memmove(v12, v13, 24 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251A3F324(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CFC8);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  int64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  size_t v14 = 24 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    memcpy(v12, v13, v14);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251A3F494(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CFE0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  int64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8]) {
      memmove(v12, v13, 40 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[40 * v8] || v12 >= &v13[40 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251A3F618(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E620);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    memcpy(v13, v14, 16 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251A3F778(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CB40);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251A3F8D8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CAB0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251A3FA38(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EBB8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251A3FBA8(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CEE8);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA5550);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251A3FD34(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D0B0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251A3FEA0(char a1, int64_t a2, char a3, void *a4)
{
  return sub_251A40F80(a1, a2, a3, a4, &qword_269B9CF28, (uint64_t (*)(void))type metadata accessor for StaticTimer);
}

uint64_t sub_251A3FEC0(char a1, int64_t a2, char a3, void *a4)
{
  return sub_251A40F80(a1, a2, a3, a4, &qword_269B9CF30, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
}

uint64_t sub_251A3FEE0(char a1, int64_t a2, char a3, char *a4)
{
  return sub_251A3FEF8(a1, a2, a3, a4, &qword_269B9CFA8);
}

uint64_t sub_251A3FEEC(char a1, int64_t a2, char a3, char *a4)
{
  return sub_251A3FEF8(a1, a2, a3, a4, &qword_269B9CF60);
}

uint64_t sub_251A3FEF8(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  int64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    int64_t v10 = *((void *)a4 + 2);
  }
  else {
    int64_t v10 = v8;
  }
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    int64_t v11 = (char *)swift_allocObject();
    size_t v12 = _swift_stdlib_malloc_size(v11);
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * v12 - 64;
  }
  else
  {
    int64_t v11 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v11 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v11 != a4 || v13 >= &v14[v9]) {
      memmove(v13, v14, v9);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v9] || v13 >= &v14[v9])
  {
    memcpy(v13, v14, v9);
LABEL_28:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_30:
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251A40044(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF20);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 96);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  size_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  size_t v14 = 96 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251A401C0(char a1, int64_t a2, char a3, void *a4)
{
  return sub_251A40F80(a1, a2, a3, a4, &qword_269B9D090, type metadata accessor for ScrubberElement);
}

uint64_t sub_251A401E0(char a1, int64_t a2, char a3, void *a4)
{
  return sub_251A40F80(a1, a2, a3, a4, &qword_26B21E600, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
}

uint64_t sub_251A40200(char a1, int64_t a2, char a3, void *a4)
{
  return sub_251A40F80(a1, a2, a3, a4, &qword_269B9D068, type metadata accessor for RoomType);
}

uint64_t sub_251A40220(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E618);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  size_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  size_t v14 = 24 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    memcpy(v12, v13, v14);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251A40390(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CEA8);
    int64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC80);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251A4051C(char a1, int64_t a2, char a3, void *a4)
{
  return sub_251A40F80(a1, a2, a3, a4, &qword_269B9CFF8, (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer);
}

uint64_t sub_251A4053C(char a1, int64_t a2, char a3, void *a4)
{
  return sub_251A40F80(a1, a2, a3, a4, &qword_269B9CFF0, (uint64_t (*)(void))type metadata accessor for StaticUserActionPrediction);
}

uint64_t sub_251A4055C(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    int64_t v11 = (char *)swift_allocObject();
    int64_t v12 = _swift_stdlib_malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 17;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    int64_t v11 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v14 = v11 + 32;
  uint64_t v15 = a4 + 32;
  size_t v16 = 16 * v9;
  if (a1)
  {
    if (v11 != a4 || v14 >= &v15[v16]) {
      memmove(v14, v15, v16);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[v16] || v14 >= &v15[v16])
  {
    memcpy(v14, v15, v16);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251A406B4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CFB0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  int64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  size_t v14 = 24 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251A40830(char a1, int64_t a2, char a3, void *a4)
{
  return sub_251A40F80(a1, a2, a3, a4, &qword_269B9CF88, (uint64_t (*)(void))type metadata accessor for ActionService);
}

uint64_t sub_251A40850(char a1, int64_t a2, char a3, void *a4)
{
  return sub_251A40864(a1, a2, a3, a4, &qword_269B9CED8, &qword_269B9CEE0);
}

uint64_t sub_251A40864(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    uint64_t v13 = (void *)swift_allocObject();
    size_t v14 = _swift_stdlib_malloc_size(v13);
    v13[2] = v11;
    v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
  }
  else
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v15 = (unint64_t)(v13 + 4);
  unint64_t v16 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v13 != a4 || v15 >= v16 + 40 * v11) {
      memmove(v13 + 4, a4 + 4, 40 * v11);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v16 >= v15 + 40 * v11 || v15 >= v16 + 40 * v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_30:
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251A40A0C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF18);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8]) {
      memmove(v12, v13, 24 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251A40B94(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    unint64_t v16 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v13 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v16 = (void *)swift_allocObject();
  size_t v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  void v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v21 = (char *)v16 + v20;
  char v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  __int16 v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251A40DD4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CED0);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251A40F40(char a1, int64_t a2, char a3, void *a4)
{
  return sub_251A40F80(a1, a2, a3, a4, &qword_269B9D060, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
}

uint64_t sub_251A40F60(char a1, int64_t a2, char a3, void *a4)
{
  return sub_251A40F80(a1, a2, a3, a4, &qword_26B21F210, (uint64_t (*)(void))type metadata accessor for StaticResident);
}

uint64_t sub_251A40F80(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    unint64_t v16 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v16 = (void *)swift_allocObject();
  size_t v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  void v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v21 = (char *)v16 + v20;
  char v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  __int16 v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251A411C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for ActionCommand(0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t result = sub_251F36CB0();
  if (v7)
  {
    uint64_t v9 = a2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v10 = *(void *)(v4 + 72);
    do
    {
      sub_251A4ED54(v9, (uint64_t)v6, type metadata accessor for ActionCommand);
      sub_251F34DA0();
      sub_251A4EAE0((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA9628]);
      sub_251F35610();
      sub_251F36CF0();
      sub_251F36CD0();
      __swift_project_boxed_opaque_existential_1(&v6[*(int *)(v3 + 28)], *(void *)&v6[*(int *)(v3 + 28) + 24]);
      sub_251F35610();
      uint64_t result = sub_251A4EDBC((uint64_t)v6, type metadata accessor for ActionCommand);
      v9 += v10;
      --v7;
    }
    while (v7);
  }
  return result;
}

uint64_t sub_251A4137C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata.SignificantEvent(0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t result = sub_251F36CB0();
  if (v7)
  {
    uint64_t v9 = a2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v10 = *(void *)(v4 + 72);
    do
    {
      sub_251A4ED54(v9, (uint64_t)v6, type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata.SignificantEvent);
      sub_251F34D20();
      sub_251A4EAE0(&qword_269B9CF80, MEMORY[0x270FA9298]);
      sub_251F35610();
      sub_251F36CF0();
      swift_bridgeObjectRetain();
      sub_251F357B0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_251F357B0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_251F357B0();
      swift_bridgeObjectRelease();
      uint64_t result = sub_251A4EDBC((uint64_t)v6, type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata.SignificantEvent);
      v9 += v10;
      --v7;
    }
    while (v7);
  }
  return result;
}

uint64_t sub_251A41588(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = sub_251F36CB0();
  if (v3)
  {
    uint64_t v5 = a2 + 32;
    do
    {
      v5 += 8;
      uint64_t result = sub_251F36CF0();
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t sub_251A415E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for StaticTimer();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t result = sub_251F36CB0();
  if (v7)
  {
    uint64_t v9 = a2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v10 = *(void *)(v4 + 72);
    do
    {
      sub_251A4ED54(v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticTimer);
      sub_251F36CF0();
      sub_251F34D20();
      sub_251A4EAE0(&qword_269B9CF80, MEMORY[0x270FA9298]);
      sub_251F35610();
      sub_251F36CF0();
      if (*(void *)&v6[*(int *)(v3 + 28) + 8])
      {
        sub_251F36CC0();
        swift_bridgeObjectRetain();
        sub_251F357B0();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_251F36CC0();
      }
      sub_251F36CB0();
      sub_251F36CC0();
      sub_251F34DA0();
      sub_251A4EAE0((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA9628]);
      sub_251F35610();
      sub_251F35610();
      uint64_t result = sub_251A4EDBC((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticTimer);
      v9 += v10;
      --v7;
    }
    while (v7);
  }
  return result;
}

uint64_t sub_251A4184C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for StaticAlarm();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t result = sub_251F36CB0();
  if (v7)
  {
    uint64_t v9 = 0;
    uint64_t v15 = a2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v10 = *(void *)(v4 + 72);
    do
    {
      sub_251A4ED54(v15 + v10 * v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
      sub_251F36CB0();
      sub_251F36CB0();
      if (*((void *)v6 + 3))
      {
        sub_251F36CC0();
        swift_bridgeObjectRetain();
        sub_251F357B0();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_251F36CC0();
      }
      uint64_t v11 = *((void *)v6 + 4);
      sub_251F36CB0();
      uint64_t v12 = *(void *)(v11 + 16);
      if (v12)
      {
        uint64_t v13 = v11 + 32;
        do
        {
          ++v13;
          sub_251F36CB0();
          --v12;
        }
        while (v12);
      }
      ++v9;
      sub_251F36CE0();
      sub_251F36CC0();
      sub_251F34DA0();
      sub_251A4EAE0((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA9628]);
      sub_251F35610();
      sub_251F35610();
      uint64_t result = sub_251A4EDBC((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
    }
    while (v9 != v7);
  }
  return result;
}

uint64_t sub_251A41A94(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  v17[3] = a1;
  sub_251F36CB0();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v4 - 8);
  unint64_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v3)
  {
    uint64_t v7 = sub_251F34DA0();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = v8;
    uint64_t v10 = a2 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    _DWORD v17[4] = v8 + 16;
    uint64_t v18 = v11;
    v17[1] = v8 + 8;
    void v17[2] = v8 + 32;
    uint64_t v12 = *(void *)(v8 + 72);
    while (1)
    {
      v18(v6, v10, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v7);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v7);
      if (result == 1) {
        break;
      }
      MEMORY[0x270FA5388](result);
      uint64_t v15 = (char *)v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v15, v6, v7);
      sub_251A4EAE0((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA9628]);
      sub_251F35610();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v7);
      v10 += v12;
      if (!--v3) {
        goto LABEL_5;
      }
    }
  }
  else
  {
LABEL_5:
    uint64_t v16 = sub_251F34DA0();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v6, 1, 1, v16);
  }
  return result;
}

uint64_t sub_251A41D10(uint64_t a1, uint64_t a2)
{
  return sub_251A41D40(a1, a2, (void (*)(uint64_t))CharacteristicKind.rawValue.getter);
}

uint64_t sub_251A41D28(uint64_t a1, uint64_t a2)
{
  return sub_251A41D40(a1, a2, (void (*)(uint64_t))ServiceKind.rawValue.getter);
}

uint64_t sub_251A41D40(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t result = sub_251F36CB0();
  if (v5)
  {
    uint64_t v7 = a2 + 32;
    do
    {
      ++v7;
      a3(result);
      sub_251F357B0();
      uint64_t result = swift_bridgeObjectRelease();
      --v5;
    }
    while (v5);
  }
  return result;
}

uint64_t sub_251A41DD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t result = sub_251F36CB0();
  if (v4)
  {
    unint64_t v6 = (uint64_t *)(a2 + 56);
    do
    {
      uint64_t v7 = *v6;
      sub_251F36CB0();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_251F357B0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_251A54AB8(a1, v7);
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease_n();
      v6 += 4;
      --v4;
    }
    while (v4);
  }
  return result;
}

uint64_t sub_251A41E88(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = sub_251F36CB0();
  if (v3)
  {
    uint64_t v5 = a2 + 32;
    do
    {
      ++v5;
      sub_251F36CD0();
      uint64_t result = sub_251F357B0();
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t sub_251A41F48(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for StaticUserActionPrediction();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unint64_t v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t result = sub_251F36CB0();
  if (v7)
  {
    uint64_t v9 = a2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v10 = *(void *)(v4 + 72);
    uint64_t v21 = v3;
    uint64_t v22 = v10;
    do
    {
      sub_251A4ED54(v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticUserActionPrediction);
      uint64_t v13 = sub_251F34DA0();
      sub_251A4EAE0((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA9628]);
      sub_251F35610();
      sub_251F36CF0();
      uint64_t v14 = (uint64_t)&v6[*(int *)(v3 + 24)];
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
      MEMORY[0x270FA5388](v15 - 8);
      size_t v17 = (char *)v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_251A1B128(v14, (uint64_t)v17, &qword_26B21FF90);
      uint64_t v18 = *(void *)(v13 - 8);
      uint64_t v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48))(v17, 1, v13);
      if (v19 == 1)
      {
        sub_251F36CC0();
      }
      else
      {
        v20[1] = v20;
        MEMORY[0x270FA5388](v19);
        uint64_t v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v12, v17, v13);
        sub_251F36CC0();
        sub_251F35610();
        (*(void (**)(char *, uint64_t))(v18 + 8))(v12, v13);
      }
      uint64_t v3 = v21;
      sub_251F36CB0();
      uint64_t result = sub_251A4EDBC((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticUserActionPrediction);
      v9 += v22;
      --v7;
    }
    while (v7);
  }
  return result;
}

void sub_251A4225C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_251F366C0();
    swift_bridgeObjectRelease();
    sub_251F36CB0();
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_251F366C0();
    swift_bridgeObjectRelease();
    if (!v3) {
      return;
    }
  }
  else
  {
    sub_251F36CB0();
    uint64_t v3 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v3) {
      return;
    }
  }
  if (v3 < 1)
  {
    __break(1u);
  }
  else if ((a2 & 0xC000000000000001) != 0)
  {
    for (uint64_t i = 0; i != v3; ++i)
    {
      MEMORY[0x2533AB3A0](i, a2);
      sub_251F36130();
      swift_unknownObjectRelease();
    }
  }
  else
  {
    uint64_t v5 = (void **)(a2 + 32);
    do
    {
      unint64_t v6 = *v5++;
      id v7 = v6;
      sub_251F36130();

      --v3;
    }
    while (v3);
  }
}

uint64_t sub_251A42374(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = sub_251F36CB0();
  if (v3)
  {
    uint64_t v5 = (unsigned __int8 *)(a2 + 52);
    do
    {
      int v6 = *(v5 - 8);
      int v7 = *v5;
      sub_251F36CE0();
      sub_251F36CC0();
      if (v6 == 1)
      {
        sub_251F36CC0();
        if (!v7) {
          goto LABEL_9;
        }
      }
      else
      {
        sub_251F36CC0();
        sub_251F36CE0();
        if (!v7)
        {
LABEL_9:
          sub_251F36CC0();
          uint64_t result = sub_251F36CE0();
          goto LABEL_4;
        }
      }
      uint64_t result = sub_251F36CC0();
LABEL_4:
      v5 += 24;
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t sub_251A42440(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = sub_251F36CB0();
  if (v3)
  {
    uint64_t v5 = (unsigned __int8 *)(a2 + 72);
    do
    {
      int v6 = *(v5 - 32);
      uint64_t v7 = *((void *)v5 - 2);
      int v8 = *(v5 - 6);
      char v9 = *(v5 - 2);
      char v11 = *(v5 - 4);
      int v12 = *v5;
      sub_251F36CE0();
      if (v6 == 1)
      {
        sub_251F36CC0();
        char v10 = v9;
        if (v7) {
          goto LABEL_6;
        }
      }
      else
      {
        sub_251F36CC0();
        sub_251F36CE0();
        char v10 = v9;
        if (v7)
        {
LABEL_6:
          sub_251F36CC0();
          swift_bridgeObjectRetain();
          sub_251F357B0();
          if (v8) {
            goto LABEL_7;
          }
          goto LABEL_11;
        }
      }
      sub_251F36CC0();
      if (v8)
      {
LABEL_7:
        sub_251F36CC0();
        if (v11) {
          goto LABEL_12;
        }
LABEL_8:
        sub_251F36CC0();
        goto LABEL_12;
      }
LABEL_11:
      sub_251F36CC0();
      sub_251F36CD0();
      if ((v11 & 1) == 0) {
        goto LABEL_8;
      }
LABEL_12:
      sub_251F36CC0();
      if (v10)
      {
        sub_251F36CC0();
        if (!v12) {
          goto LABEL_16;
        }
      }
      else
      {
        sub_251F36CC0();
        sub_251F36CC0();
        if (!v12) {
LABEL_16:
        }
          sub_251F36CC0();
      }
      sub_251F36CC0();
      uint64_t result = swift_bridgeObjectRelease();
      v5 += 48;
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t sub_251A425D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for SignificantEvent();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  int v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t result = sub_251F36CB0();
  if (v7)
  {
    uint64_t v9 = a2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v10 = *(void *)(v4 + 72);
    do
    {
      sub_251A4ED54(v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for SignificantEvent);
      sub_251F34DA0();
      sub_251A4EAE0((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA9628]);
      sub_251F35610();
      sub_251F36CB0();
      sub_251F34D20();
      sub_251A4EAE0(&qword_269B9CF80, MEMORY[0x270FA9298]);
      sub_251F35610();
      if (v6[*(int *)(v3 + 28)] == 4)
      {
        sub_251F36CC0();
      }
      else
      {
        sub_251F36CC0();
        sub_251F36CB0();
      }
      uint64_t result = sub_251A4EDBC((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for SignificantEvent);
      v9 += v10;
      --v7;
    }
    while (v7);
  }
  return result;
}

uint64_t sub_251A427D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ColorPickerFavorite();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t result = sub_251F36CB0();
  if (v8)
  {
    uint64_t v10 = a2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v11 = *(void *)(v5 + 72);
    do
    {
      sub_251A4ED54(v10, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ColorPickerFavorite);
      uint64_t v12 = *((void *)v7 + 2);
      char v13 = v7[24];
      long long v14 = *(_OWORD *)v7;
      uint64_t v15 = v12;
      char v16 = v13;
      LightbulbColor.hash(into:)(a1);
      sub_251F36CF0();
      sub_251F34DA0();
      sub_251A4EAE0((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA9628]);
      sub_251F35610();
      uint64_t result = sub_251A4EDBC((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ColorPickerFavorite);
      v10 += v11;
      --v8;
    }
    while (v8);
  }
  return result;
}

uint64_t sub_251A42984(long long *a1, uint64_t a2)
{
  uint64_t v4 = (int *)type metadata accessor for StaticCharacteristic();
  uint64_t v49 = *((void *)v4 - 1);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F0B8);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v46 - v11;
  uint64_t v13 = *(void *)(a2 + 64);
  uint64_t v47 = a2 + 64;
  uint64_t v14 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v13;
  int64_t v48 = (unint64_t)(v14 + 63) >> 6;
  int64_t v46 = v48 - 1;
  uint64_t v50 = a2;
  swift_bridgeObjectRetain();
  uint64_t v17 = 0;
  int v53 = v10;
  int64_t v54 = 0;
  uint64_t v52 = v12;
  while (1)
  {
    if (v16)
    {
      unint64_t v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v19 = v18 | (v54 << 6);
LABEL_9:
      char v20 = *(unsigned char *)(*(void *)(v50 + 48) + v19);
      uint64_t v21 = *(void *)(v50 + 56) + *(void *)(v49 + 72) * v19;
      uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F0B0);
      sub_251A4ED54(v21, (uint64_t)&v10[*(int *)(v22 + 48)], (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
      *uint64_t v10 = v20;
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v10, 0, 1, v22);
      goto LABEL_26;
    }
    int64_t v23 = v54 + 1;
    if (__OFADD__(v54, 1))
    {
      __break(1u);
LABEL_56:
      __break(1u);
      JUMPOUT(0x251A43360);
    }
    if (v23 < v48)
    {
      unint64_t v24 = *(void *)(v47 + 8 * v23);
      if (v24) {
        goto LABEL_13;
      }
      int64_t v25 = v54 + 2;
      ++v54;
      if (v23 + 1 < v48)
      {
        unint64_t v24 = *(void *)(v47 + 8 * v25);
        if (v24)
        {
          ++v23;
LABEL_13:
          unint64_t v16 = (v24 - 1) & v24;
          unint64_t v19 = __clz(__rbit64(v24)) + (v23 << 6);
          int64_t v54 = v23;
          goto LABEL_9;
        }
        int64_t v26 = v23 + 2;
        int64_t v54 = v23 + 1;
        if (v23 + 2 < v48)
        {
          unint64_t v24 = *(void *)(v47 + 8 * v26);
          if (v24)
          {
            v23 += 2;
            goto LABEL_13;
          }
          while (1)
          {
            int64_t v23 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_56;
            }
            if (v23 >= v48) {
              break;
            }
            unint64_t v24 = *(void *)(v47 + 8 * v23);
            ++v26;
            if (v24) {
              goto LABEL_13;
            }
          }
          int64_t v54 = v46;
        }
      }
    }
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F0B0);
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v10, 1, 1, v27);
    unint64_t v16 = 0;
LABEL_26:
    sub_251A4ECF0((uint64_t)v10, (uint64_t)v12, &qword_26B21F0B8);
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F0B0);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 48))(v12, 1, v28) == 1) {
      break;
    }
    uint64_t v55 = v17;
    uint64_t v29 = (uint64_t)&v12[*(int *)(v28 + 48)];
    char v30 = *v12;
    sub_251A4EC7C(v29, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
    uint64_t v31 = *((void *)a1 + 8);
    long long v32 = a1[1];
    long long v58 = *a1;
    long long v59 = v32;
    long long v33 = a1[3];
    long long v60 = a1[2];
    long long v61 = v33;
    uint64_t v62 = v31;
    LOBYTE(v56) = v30;
    CharacteristicKind.rawValue.getter();
    sub_251F357B0();
    swift_bridgeObjectRelease();
    sub_251F34DA0();
    sub_251A4EAE0((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA9628]);
    sub_251F35610();
    LOBYTE(v56) = v6[v4[5]];
    CharacteristicKind.rawValue.getter();
    sub_251F357B0();
    swift_bridgeObjectRelease();
    unint64_t v34 = &v6[v4[6]];
    char v35 = v34[16];
    long long v56 = *(_OWORD *)v34;
    char v57 = v35;
    CharacteristicKind.Value.hash(into:)();
    sub_251F34D20();
    sub_251A4EAE0(&qword_269B9CF80, MEMORY[0x270FA9298]);
    sub_251F35610();
    switch(v6[v4[8] + 24])
    {
      case 2:
        sub_251F36CB0();
        sub_251F36CB0();
        sub_251F357B0();
        break;
      case 3:
        goto LABEL_29;
      default:
        sub_251F36CB0();
LABEL_29:
        sub_251F36CB0();
        break;
    }
    sub_251F36CB0();
    sub_251F35610();
    uint64_t v36 = (uint64_t *)&v6[v4[11]];
    unint64_t v37 = v36[3];
    if (v37 >> 8 == 0xFFFFFFFF)
    {
      sub_251F36CC0();
LABEL_5:
      uint64_t v12 = v52;
      goto LABEL_6;
    }
    uint64_t v38 = *v36;
    uint64_t v51 = v36[1];
    uint64_t v39 = v36[2];
    uint64_t v40 = v36[4];
    sub_251F36CC0();
    if (v37 >> 62)
    {
      if (v37 >> 62 != 1)
      {
        sub_251F36CB0();
        sub_251F36CB0();
        goto LABEL_5;
      }
      sub_251F36CB0();
      sub_251F36CF0();
      sub_251F36CF0();
      sub_251F36CF0();
      if (v37 == 8)
      {
        sub_251F36CC0();
        if (!v40) {
          goto LABEL_53;
        }
      }
      else
      {
        sub_251F36CC0();
        sub_251F357B0();
        swift_bridgeObjectRelease();
        if (!v40) {
          goto LABEL_53;
        }
      }
      sub_251F36CC0();
      sub_251F36CB0();
      uint64_t v41 = *(void *)(v40 + 16);
      uint64_t v12 = v52;
      if (v41)
      {
        uint64_t v42 = v40 + 32;
        do
        {
          v42 += 8;
          sub_251F36CF0();
          --v41;
        }
        while (v41);
      }
    }
    else
    {
      sub_251F36CB0();
      sub_251F36CB0();
      sub_251F36CB0();
      sub_251F36CB0();
      if (v37 == 8)
      {
        sub_251F36CC0();
        if (!v40) {
          goto LABEL_53;
        }
      }
      else
      {
        sub_251F36CC0();
        sub_251F357B0();
        swift_bridgeObjectRelease();
        if (!v40)
        {
LABEL_53:
          sub_251F36CC0();
          sub_251A11E60(v38, v51, v39, v37);
          goto LABEL_5;
        }
      }
      sub_251F36CC0();
      sub_251F36CB0();
      uint64_t v43 = *(void *)(v40 + 16);
      uint64_t v12 = v52;
      if (v43)
      {
        uint64_t v44 = v40 + 32;
        do
        {
          v44 += 8;
          sub_251F36CB0();
          --v43;
        }
        while (v43);
      }
    }
LABEL_6:
    sub_251A4EDBC((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
    uint64_t v17 = sub_251F36D00() ^ v55;
    uint64_t v10 = v53;
  }
  swift_release();
  return sub_251F36CB0();
}

uint64_t sub_251A433B0(uint64_t a1, uint64_t a2)
{
  uint64_t v22 = a2 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a2 + 64);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v7 = 0;
  int64_t v8 = 0;
  while (v5)
  {
    unint64_t v11 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    unint64_t v12 = v11 | (v8 << 6);
LABEL_21:
    uint64_t v16 = *(void *)(a2 + 56) + 16 * v12;
    uint64_t v17 = *(void *)v16;
    uint64_t v18 = *(unsigned __int8 *)(v16 + 8);
    sub_251F36CE0();
    sub_251F36CE0();
    switch(v18)
    {
      case 1:
        sub_251F36CB0();
        sub_251F36CB0();
        uint64_t v9 = v17;
        char v10 = 1;
        goto LABEL_5;
      case 2:
        sub_251F36CB0();
        sub_251F36CB0();
        uint64_t v9 = v17;
        char v10 = 2;
        goto LABEL_5;
      case 3:
        sub_251F36CB0();
        sub_251F36CB0();
        uint64_t v19 = *(void *)(v17 + 16);
        if (v19)
        {
          uint64_t v20 = v17 + 32;
          do
          {
            v20 += 4;
            sub_251F36CE0();
            --v19;
          }
          while (v19);
        }
        sub_251A1A4B8(v17, 3);
        sub_251A4EBDC(v17, 3);
        goto LABEL_6;
      default:
        sub_251F36CB0();
        sub_251F36CC0();
        uint64_t v9 = v17;
        char v10 = 0;
LABEL_5:
        sub_251A1A4B8(v9, v10);
LABEL_6:
        v7 ^= sub_251F36D00();
        break;
    }
  }
  int64_t v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v13 >= v6) {
    goto LABEL_28;
  }
  unint64_t v14 = *(void *)(v22 + 8 * v13);
  ++v8;
  if (v14) {
    goto LABEL_20;
  }
  int64_t v8 = v13 + 1;
  if (v13 + 1 >= v6) {
    goto LABEL_28;
  }
  unint64_t v14 = *(void *)(v22 + 8 * v8);
  if (v14)
  {
LABEL_20:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v8 << 6);
    goto LABEL_21;
  }
  int64_t v15 = v13 + 2;
  if (v15 < v6)
  {
    unint64_t v14 = *(void *)(v22 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t v8 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          break;
        }
        if (v8 >= v6) {
          goto LABEL_28;
        }
        unint64_t v14 = *(void *)(v22 + 8 * v8);
        ++v15;
        if (v14) {
          goto LABEL_20;
        }
      }
LABEL_30:
      __break(1u);
      JUMPOUT(0x251A4363CLL);
    }
    int64_t v8 = v15;
    goto LABEL_20;
  }
LABEL_28:
  swift_release();
  return sub_251F36CB0();
}

uint64_t sub_251A4364C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 64);
  uint64_t v51 = a2 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & v4;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CEF0);
  uint64_t v50 = &v48;
  MEMORY[0x270FA5388](v8 - 8);
  unint64_t v55 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v56 = v9;
  char v10 = (char *)&v48 - v55;
  int64_t v52 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v53 = a2;
  int64_t v49 = v52 - 1;
  uint64_t v11 = swift_bridgeObjectRetain();
  int64_t v57 = 0;
  int64_t v54 = v10;
  while (1)
  {
    MEMORY[0x270FA5388](v11);
    int64_t v13 = (char *)&v48 - v55;
    uint64_t v59 = v14;
    if (v7)
    {
      unint64_t v15 = __clz(__rbit64(v7));
      uint64_t v16 = (v7 - 1) & v7;
      unint64_t v17 = v15 | (v57 << 6);
LABEL_8:
      uint64_t v18 = v53;
      uint64_t v19 = *(void *)(v53 + 48);
      uint64_t v20 = sub_251F34DA0();
      (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v13, v19 + *(void *)(*(void *)(v20 - 8) + 72) * v17, v20);
      uint64_t v21 = (uint64_t *)(*(void *)(v18 + 56) + 32 * v17);
      uint64_t v22 = *v21;
      uint64_t v23 = v21[1];
      unint64_t v24 = (void *)v21[2];
      int64_t v25 = (void *)v21[3];
      uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CEF8);
      uint64_t v27 = &v13[*(int *)(v26 + 48)];
      *(void *)uint64_t v27 = v22;
      *((void *)v27 + 1) = v23;
      *((void *)v27 + 2) = v24;
      *((void *)v27 + 3) = v25;
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v13, 0, 1, v26);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_251A1A4CC(v24);
      sub_251A1A4CC(v25);
      goto LABEL_25;
    }
    int64_t v28 = v57 + 1;
    if (__OFADD__(v57, 1))
    {
      __break(1u);
LABEL_38:
      __break(1u);
      JUMPOUT(0x251A43CE0);
    }
    if (v28 < v52)
    {
      unint64_t v29 = *(void *)(v51 + 8 * v28);
      if (v29) {
        goto LABEL_12;
      }
      int64_t v30 = v57 + 2;
      ++v57;
      if (v28 + 1 < v52)
      {
        unint64_t v29 = *(void *)(v51 + 8 * v30);
        if (v29)
        {
          ++v28;
LABEL_12:
          uint64_t v16 = (v29 - 1) & v29;
          unint64_t v17 = __clz(__rbit64(v29)) + (v28 << 6);
          int64_t v57 = v28;
          goto LABEL_8;
        }
        int64_t v31 = v28 + 2;
        int64_t v57 = v28 + 1;
        if (v28 + 2 < v52)
        {
          unint64_t v29 = *(void *)(v51 + 8 * v31);
          if (v29)
          {
            v28 += 2;
            goto LABEL_12;
          }
          while (1)
          {
            int64_t v28 = v31 + 1;
            if (__OFADD__(v31, 1)) {
              goto LABEL_38;
            }
            if (v28 >= v52) {
              break;
            }
            unint64_t v29 = *(void *)(v51 + 8 * v28);
            ++v31;
            if (v29) {
              goto LABEL_12;
            }
          }
          int64_t v57 = v49;
        }
      }
    }
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CEF8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v13, 1, 1, v32);
    uint64_t v16 = 0;
LABEL_25:
    sub_251A4ECF0((uint64_t)v13, (uint64_t)v10, &qword_269B9CEF0);
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CEF8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 48))(v10, 1, v33) == 1) {
      break;
    }
    unint64_t v58 = v16;
    uint64_t v34 = sub_251F34DA0();
    uint64_t v35 = *(void *)(v34 - 8);
    MEMORY[0x270FA5388](v34);
    unint64_t v37 = (char *)&v48 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v38 = (uint64_t *)&v10[*(int *)(v33 + 48)];
    (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v37, v10, v34);
    uint64_t v40 = *v38;
    uint64_t v39 = v38[1];
    uint64_t v41 = (void *)v38[2];
    uint64_t v12 = v38[3];
    uint64_t v42 = *(void *)(a1 + 64);
    long long v43 = *(_OWORD *)(a1 + 16);
    v60[0] = *(_OWORD *)a1;
    v60[1] = v43;
    long long v44 = *(_OWORD *)(a1 + 48);
    v60[2] = *(_OWORD *)(a1 + 32);
    v60[3] = v44;
    uint64_t v61 = v42;
    sub_251A4EAE0((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA9628]);
    sub_251F35610();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v34);
    swift_bridgeObjectRetain();
    sub_251A4184C((uint64_t)v60, v40);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_251A415E0((uint64_t)v60, v39);
    swift_bridgeObjectRelease();
    switch((unint64_t)v41)
    {
      case 0uLL:
      case 1uLL:
      case 2uLL:
      case 3uLL:
      case 4uLL:
      case 5uLL:
        sub_251F36CB0();
        break;
      default:
        sub_251F36CB0();
        id v45 = v41;
        sub_251F36130();
        sub_251A1A4DC(v41);
        break;
    }
    switch(v12)
    {
      case 0:
        sub_251F36CB0();
        uint64_t v12 = 0;
        break;
      case 1:
        sub_251F36CB0();
        uint64_t v12 = 1;
        break;
      case 2:
        sub_251F36CB0();
        uint64_t v12 = 2;
        break;
      case 3:
        sub_251F36CB0();
        uint64_t v12 = 3;
        break;
      case 4:
        sub_251F36CB0();
        uint64_t v12 = 4;
        break;
      case 5:
        sub_251F36CB0();
        uint64_t v12 = 5;
        break;
      default:
        sub_251F36CB0();
        id v46 = (id)v12;
        sub_251F36130();
        sub_251A1A4DC((id)v12);
        break;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_251A1A4DC(v41);
    sub_251A1A4DC((id)v12);
    uint64_t v11 = sub_251F36D00();
    char v10 = v54;
    unint64_t v7 = v58;
  }
  swift_release();
  return sub_251F36CB0();
}

uint64_t sub_251A43D10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ActionService();
  uint64_t v44 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a2 + 64);
  uint64_t v42 = a2 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v7;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF90);
  uint64_t v41 = &v39;
  MEMORY[0x270FA5388](v11 - 8);
  unint64_t v46 = (v12 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v47 = v12;
  int64_t v13 = (char *)&v39 - v46;
  int64_t v43 = (unint64_t)(v8 + 63) >> 6;
  int64_t v40 = v43 - 1;
  uint64_t v45 = a2;
  uint64_t v14 = swift_bridgeObjectRetain();
  uint64_t v15 = 0;
  int64_t v48 = 0;
  while (1)
  {
    uint64_t result = MEMORY[0x270FA5388](v14);
    unint64_t v17 = (char *)&v39 - v46;
    if (v10)
    {
      unint64_t v18 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v19 = v18 | (v48 << 6);
      goto LABEL_6;
    }
    int64_t v25 = v48 + 1;
    if (__OFADD__(v48, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v25 < v43)
    {
      unint64_t v26 = *(void *)(v42 + 8 * v25);
      if (v26) {
        goto LABEL_10;
      }
      int64_t v27 = v48 + 2;
      ++v48;
      if (v25 + 1 < v43)
      {
        unint64_t v26 = *(void *)(v42 + 8 * v27);
        if (v26)
        {
          ++v25;
          goto LABEL_10;
        }
        int64_t v28 = v25 + 2;
        int64_t v48 = v25 + 1;
        if (v25 + 2 < v43) {
          break;
        }
      }
    }
LABEL_22:
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF98);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v17, 1, 1, v29);
    unint64_t v10 = 0;
LABEL_23:
    sub_251A4ECF0((uint64_t)v17, (uint64_t)v13, &qword_269B9CF90);
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF98);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 48))(v13, 1, v30) == 1)
    {
      swift_release();
      return sub_251F36CB0();
    }
    uint64_t v31 = sub_251F34DA0();
    uint64_t v32 = *(void *)(v31 - 8);
    MEMORY[0x270FA5388](v31);
    uint64_t v34 = (char *)&v39 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v35 = (uint64_t)&v13[*(int *)(v30 + 48)];
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v34, v13, v31);
    sub_251A4EC7C(v35, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ActionService);
    uint64_t v36 = *(void *)(a1 + 64);
    long long v37 = *(_OWORD *)(a1 + 16);
    v49[0] = *(_OWORD *)a1;
    v49[1] = v37;
    long long v38 = *(_OWORD *)(a1 + 48);
    v49[2] = *(_OWORD *)(a1 + 32);
    v49[3] = v38;
    uint64_t v50 = v36;
    sub_251A4EAE0((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA9628]);
    sub_251F35610();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v31);
    ActionService.hash(into:)(v49);
    sub_251A4EDBC((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ActionService);
    uint64_t v14 = sub_251F36D00();
    v15 ^= v14;
  }
  unint64_t v26 = *(void *)(v42 + 8 * v28);
  if (v26)
  {
    v25 += 2;
LABEL_10:
    unint64_t v10 = (v26 - 1) & v26;
    unint64_t v19 = __clz(__rbit64(v26)) + (v25 << 6);
    int64_t v48 = v25;
LABEL_6:
    uint64_t v20 = v45;
    uint64_t v21 = *(void *)(v45 + 48);
    uint64_t v22 = sub_251F34DA0();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v17, v21 + *(void *)(*(void *)(v22 - 8) + 72) * v19, v22);
    uint64_t v23 = *(void *)(v20 + 56) + *(void *)(v44 + 72) * v19;
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF98);
    sub_251A4ED54(v23, (uint64_t)&v17[*(int *)(v24 + 48)], (uint64_t (*)(void))type metadata accessor for ActionService);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v17, 0, 1, v24);
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v25 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v25 >= v43)
    {
      int64_t v48 = v40;
      goto LABEL_22;
    }
    unint64_t v26 = *(void *)(v42 + 8 * v25);
    ++v28;
    if (v26) {
      goto LABEL_10;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_251A4427C(long long *a1, uint64_t a2)
{
  unint64_t v46 = a1;
  uint64_t v51 = type metadata accessor for StaticTelevisionProfile();
  uint64_t v44 = *(void *)(v51 - 8);
  MEMORY[0x270FA5388](v51);
  uint64_t v4 = (char *)v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(a2 + 64);
  uint64_t v42 = a2 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & v5;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F020);
  v41[1] = v41;
  MEMORY[0x270FA5388](v9 - 8);
  unint64_t v47 = (v10 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v48 = v10;
  uint64_t v11 = (char *)v41 - v47;
  int64_t v43 = (unint64_t)(v6 + 63) >> 6;
  v41[0] = v43 - 1;
  uint64_t v45 = a2;
  uint64_t v12 = swift_bridgeObjectRetain();
  uint64_t v13 = 0;
  int64_t v49 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    uint64_t result = MEMORY[0x270FA5388](v12);
    uint64_t v15 = (char *)v41 - v47;
    if (v8)
    {
      unint64_t v16 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v17 = v16 | (v49 << 6);
      goto LABEL_7;
    }
    int64_t v23 = v49 + 1;
    if (__OFADD__(v49, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v23 < v43)
    {
      unint64_t v24 = *(void *)(v42 + 8 * v23);
      if (v24) {
        goto LABEL_11;
      }
      int64_t v25 = v49 + 2;
      ++v49;
      if (v23 + 1 < v43)
      {
        unint64_t v24 = *(void *)(v42 + 8 * v25);
        if (v24)
        {
          ++v23;
          goto LABEL_11;
        }
        int64_t v26 = v23 + 2;
        int64_t v49 = v23 + 1;
        if (v23 + 2 < v43) {
          break;
        }
      }
    }
LABEL_23:
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF48);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v15, 1, 1, v27);
    unint64_t v8 = 0;
LABEL_24:
    sub_251A4ECF0((uint64_t)v15, (uint64_t)v11, &qword_26B21F020);
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF48);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 48))(v11, 1, v28) == 1)
    {
      swift_release();
      return sub_251F36CB0();
    }
    uint64_t v29 = v13;
    uint64_t v30 = sub_251F34DA0();
    uint64_t v31 = *(void *)(v30 - 8);
    MEMORY[0x270FA5388](v30);
    uint64_t v33 = (char *)v41 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v34 = (uint64_t)&v11[*(int *)(v28 + 48)];
    (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v33, v11, v30);
    sub_251A4EC7C(v34, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticTelevisionProfile);
    uint64_t v35 = *((void *)v46 + 8);
    long long v36 = v46[1];
    long long v52 = *v46;
    long long v53 = v36;
    long long v37 = v46[3];
    long long v54 = v46[2];
    long long v55 = v37;
    uint64_t v56 = v35;
    sub_251A4EAE0((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA9628]);
    sub_251F35610();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v30);
    sub_251F35610();
    uint64_t v38 = *(void *)&v4[*(int *)(v51 + 20)];
    sub_251F36CB0();
    uint64_t v39 = *(void *)(v38 + 16);
    if (v39)
    {
      uint64_t v40 = v38 + 32;
      do
      {
        v40 += 8;
        sub_251F36CB0();
        --v39;
      }
      while (v39);
    }
    sub_251F35610();
    sub_251A4EDBC((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticTelevisionProfile);
    uint64_t v12 = sub_251F36D00();
    uint64_t v13 = v12 ^ v29;
  }
  unint64_t v24 = *(void *)(v42 + 8 * v26);
  if (v24)
  {
    v23 += 2;
LABEL_11:
    unint64_t v8 = (v24 - 1) & v24;
    unint64_t v17 = __clz(__rbit64(v24)) + (v23 << 6);
    int64_t v49 = v23;
LABEL_7:
    uint64_t v18 = v45;
    uint64_t v19 = *(void *)(v45 + 48);
    uint64_t v20 = sub_251F34DA0();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v15, v19 + *(void *)(*(void *)(v20 - 8) + 72) * v17, v20);
    uint64_t v21 = *(void *)(v18 + 56) + *(void *)(v44 + 72) * v17;
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF48);
    sub_251A4ED54(v21, (uint64_t)&v15[*(int *)(v22 + 48)], (uint64_t (*)(void))type metadata accessor for StaticTelevisionProfile);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v15, 0, 1, v22);
    uint64_t v11 = i;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v23 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v23 >= v43)
    {
      int64_t v49 = v41[0];
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v42 + 8 * v23);
    ++v26;
    if (v24) {
      goto LABEL_11;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_251A44858(long long *a1, uint64_t a2)
{
  uint64_t v48 = type metadata accessor for StaticLightProfile();
  uint64_t v42 = *(void *)(v48 - 8);
  MEMORY[0x270FA5388](v48);
  uint64_t v5 = (char *)v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(a2 + 64);
  uint64_t v40 = a2 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & v6;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F010);
  v39[1] = v39;
  MEMORY[0x270FA5388](v10 - 8);
  unint64_t v44 = (v11 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v45 = v11;
  uint64_t v12 = (char *)v39 - v44;
  int64_t v41 = (unint64_t)(v7 + 63) >> 6;
  v39[0] = v41 - 1;
  uint64_t v43 = a2;
  uint64_t v13 = swift_bridgeObjectRetain();
  int64_t v46 = 0;
  for (i = v12; ; uint64_t v12 = i)
  {
    uint64_t result = MEMORY[0x270FA5388](v13);
    uint64_t v15 = (char *)v39 - v44;
    uint64_t v49 = v16;
    if (v9)
    {
      unint64_t v17 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v18 = v17 | (v46 << 6);
      goto LABEL_8;
    }
    int64_t v24 = v46 + 1;
    if (__OFADD__(v46, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v24 < v41)
    {
      unint64_t v25 = *(void *)(v40 + 8 * v24);
      if (v25) {
        goto LABEL_12;
      }
      int64_t v26 = v46 + 2;
      ++v46;
      if (v24 + 1 < v41)
      {
        unint64_t v25 = *(void *)(v40 + 8 * v26);
        if (v25)
        {
          ++v24;
          goto LABEL_12;
        }
        int64_t v27 = v24 + 2;
        int64_t v46 = v24 + 1;
        if (v24 + 2 < v41) {
          break;
        }
      }
    }
LABEL_24:
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF50);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v15, 1, 1, v28);
    unint64_t v9 = 0;
LABEL_25:
    sub_251A4ECF0((uint64_t)v15, (uint64_t)v12, &qword_26B21F010);
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF50);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 48))(v12, 1, v29) == 1)
    {
      swift_release();
      return sub_251F36CB0();
    }
    uint64_t v30 = sub_251F34DA0();
    uint64_t v31 = *(void *)(v30 - 8);
    MEMORY[0x270FA5388](v30);
    uint64_t v33 = (char *)v39 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v34 = (uint64_t)&v12[*(int *)(v29 + 48)];
    (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v33, v12, v30);
    sub_251A4EC7C(v34, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
    uint64_t v35 = *((void *)a1 + 8);
    long long v36 = a1[1];
    long long v50 = *a1;
    long long v51 = v36;
    long long v37 = a1[3];
    long long v52 = a1[2];
    long long v53 = v37;
    uint64_t v54 = v35;
    sub_251A4EAE0((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA9628]);
    sub_251F35610();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v30);
    sub_251F35610();
    uint64_t v38 = v48;
    sub_251F36CC0();
    LODWORD(v38) = v5[*(int *)(v38 + 24) + 1];
    sub_251F36CC0();
    if (v38 != 2) {
      sub_251F36CC0();
    }
    sub_251F36CC0();
    sub_251F35610();
    sub_251A4EDBC((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
    uint64_t v13 = sub_251F36D00();
  }
  unint64_t v25 = *(void *)(v40 + 8 * v27);
  if (v25)
  {
    v24 += 2;
LABEL_12:
    unint64_t v9 = (v25 - 1) & v25;
    unint64_t v18 = __clz(__rbit64(v25)) + (v24 << 6);
    int64_t v46 = v24;
LABEL_8:
    uint64_t v19 = v43;
    uint64_t v20 = *(void *)(v43 + 48);
    uint64_t v21 = sub_251F34DA0();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v15, v20 + *(void *)(*(void *)(v21 - 8) + 72) * v18, v21);
    uint64_t v22 = *(void *)(v19 + 56) + *(void *)(v42 + 72) * v18;
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF50);
    sub_251A4ED54(v22, (uint64_t)&v15[*(int *)(v23 + 48)], (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v15, 0, 1, v23);
    uint64_t v12 = i;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v24 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v24 >= v41)
    {
      int64_t v46 = v39[0];
      goto LABEL_24;
    }
    unint64_t v25 = *(void *)(v40 + 8 * v24);
    ++v27;
    if (v25) {
      goto LABEL_12;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_251A44E40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (int *)type metadata accessor for StaticServiceGroup();
  uint64_t v48 = *((void *)v4 - 1);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a2 + 64);
  uint64_t v46 = a2 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v7;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B21E6A0);
  uint64_t v45 = &v43;
  MEMORY[0x270FA5388](v11 - 8);
  unint64_t v51 = (v12 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v52 = v12;
  uint64_t v49 = a2;
  uint64_t v50 = (uint64_t)&v43 - v51;
  int64_t v47 = (unint64_t)(v8 + 63) >> 6;
  int64_t v44 = v47 - 1;
  uint64_t v13 = swift_bridgeObjectRetain();
  int64_t v53 = 0;
  while (1)
  {
    uint64_t result = MEMORY[0x270FA5388](v13);
    uint64_t v16 = (char *)&v43 - v51;
    uint64_t v54 = v17;
    if (v10)
    {
      unint64_t v18 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v19 = v18 | (v53 << 6);
      goto LABEL_8;
    }
    int64_t v25 = v53 + 1;
    if (__OFADD__(v53, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 < v47)
    {
      unint64_t v26 = *(void *)(v46 + 8 * v25);
      if (v26) {
        goto LABEL_12;
      }
      int64_t v27 = v53 + 2;
      ++v53;
      if (v25 + 1 < v47)
      {
        unint64_t v26 = *(void *)(v46 + 8 * v27);
        if (v26)
        {
          ++v25;
          goto LABEL_12;
        }
        int64_t v28 = v25 + 2;
        int64_t v53 = v25 + 1;
        if (v25 + 2 < v47) {
          break;
        }
      }
    }
LABEL_24:
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E698);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v16, 1, 1, v29);
    unint64_t v10 = 0;
LABEL_25:
    uint64_t v30 = (uint64_t)v16;
    uint64_t v31 = v50;
    sub_251A4ECF0(v30, v50, (uint64_t *)&unk_26B21E6A0);
    uint64_t v32 = v31;
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E698);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 48))(v32, 1, v33) == 1)
    {
      swift_release();
      return sub_251F36CB0();
    }
    uint64_t v34 = sub_251F34DA0();
    uint64_t v35 = *(void *)(v34 - 8);
    MEMORY[0x270FA5388](v34);
    long long v37 = (char *)&v43 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v38 = v32 + *(int *)(v33 + 48);
    (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(v37, v32, v34);
    sub_251A4EC7C(v38, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
    uint64_t v39 = *(void *)(a1 + 64);
    long long v40 = *(_OWORD *)(a1 + 16);
    v55[0] = *(_OWORD *)a1;
    v55[1] = v40;
    long long v41 = *(_OWORD *)(a1 + 48);
    v55[2] = *(_OWORD *)(a1 + 32);
    v55[3] = v41;
    uint64_t v56 = v39;
    sub_251A4EAE0((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA9628]);
    sub_251F35610();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v34);
    sub_251F35610();
    swift_bridgeObjectRetain();
    sub_251F357B0();
    swift_bridgeObjectRelease();
    sub_251F36CC0();
    sub_251F36CB0();
    uint64_t v42 = *(void *)&v6[v4[8]];
    swift_bridgeObjectRetain();
    sub_251A54708(v55, v42);
    swift_bridgeObjectRelease();
    if (*(void *)&v6[v4[9] + 8])
    {
      sub_251F36CC0();
      swift_bridgeObjectRetain();
      sub_251F357B0();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_251F36CC0();
    }
    sub_251F36CC0();
    uint64_t v14 = *(void *)&v6[v4[11]];
    swift_bridgeObjectRetain();
    sub_251A454AC((uint64_t)v55, v14);
    swift_bridgeObjectRelease();
    sub_251A4EDBC((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
    uint64_t v13 = sub_251F36D00();
  }
  unint64_t v26 = *(void *)(v46 + 8 * v28);
  if (v26)
  {
    v25 += 2;
LABEL_12:
    unint64_t v10 = (v26 - 1) & v26;
    unint64_t v19 = __clz(__rbit64(v26)) + (v25 << 6);
    int64_t v53 = v25;
LABEL_8:
    uint64_t v20 = v49;
    uint64_t v21 = *(void *)(v49 + 48);
    uint64_t v22 = sub_251F34DA0();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v16, v21 + *(void *)(*(void *)(v22 - 8) + 72) * v19, v22);
    uint64_t v23 = *(void *)(v20 + 56) + *(void *)(v48 + 72) * v19;
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E698);
    sub_251A4ED54(v23, (uint64_t)&v16[*(int *)(v24 + 48)], (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v16, 0, 1, v24);
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v25 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v25 >= v47)
    {
      int64_t v53 = v44;
      goto LABEL_24;
    }
    unint64_t v26 = *(void *)(v46 + 8 * v25);
    ++v28;
    if (v26) {
      goto LABEL_12;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_251A454AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticService();
  uint64_t v44 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a2 + 64);
  uint64_t v42 = a2 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v7;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E660);
  long long v41 = &v39;
  MEMORY[0x270FA5388](v11 - 8);
  unint64_t v46 = (v12 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v47 = v12;
  uint64_t v13 = (char *)&v39 - v46;
  int64_t v43 = (unint64_t)(v8 + 63) >> 6;
  int64_t v40 = v43 - 1;
  uint64_t v45 = a2;
  uint64_t v14 = swift_bridgeObjectRetain();
  uint64_t v15 = 0;
  int64_t v48 = 0;
  while (1)
  {
    uint64_t result = MEMORY[0x270FA5388](v14);
    uint64_t v17 = (char *)&v39 - v46;
    if (v10)
    {
      unint64_t v18 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v19 = v18 | (v48 << 6);
      goto LABEL_6;
    }
    int64_t v25 = v48 + 1;
    if (__OFADD__(v48, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v25 < v43)
    {
      unint64_t v26 = *(void *)(v42 + 8 * v25);
      if (v26) {
        goto LABEL_10;
      }
      int64_t v27 = v48 + 2;
      ++v48;
      if (v25 + 1 < v43)
      {
        unint64_t v26 = *(void *)(v42 + 8 * v27);
        if (v26)
        {
          ++v25;
          goto LABEL_10;
        }
        int64_t v28 = v25 + 2;
        int64_t v48 = v25 + 1;
        if (v25 + 2 < v43) {
          break;
        }
      }
    }
LABEL_22:
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E658);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v17, 1, 1, v29);
    unint64_t v10 = 0;
LABEL_23:
    sub_251A4ECF0((uint64_t)v17, (uint64_t)v13, &qword_26B21E660);
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E658);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 48))(v13, 1, v30) == 1)
    {
      swift_release();
      return sub_251F36CB0();
    }
    uint64_t v31 = sub_251F34DA0();
    uint64_t v32 = *(void *)(v31 - 8);
    MEMORY[0x270FA5388](v31);
    uint64_t v34 = (char *)&v39 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v35 = (uint64_t)&v13[*(int *)(v30 + 48)];
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v34, v13, v31);
    sub_251A4EC7C(v35, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t v36 = *(void *)(a1 + 64);
    long long v37 = *(_OWORD *)(a1 + 16);
    v49[0] = *(_OWORD *)a1;
    v49[1] = v37;
    long long v38 = *(_OWORD *)(a1 + 48);
    v49[2] = *(_OWORD *)(a1 + 32);
    v49[3] = v38;
    uint64_t v50 = v36;
    sub_251A4EAE0((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA9628]);
    sub_251F35610();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v31);
    StaticService.hash(into:)(v49);
    sub_251A4EDBC((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t v14 = sub_251F36D00();
    v15 ^= v14;
  }
  unint64_t v26 = *(void *)(v42 + 8 * v28);
  if (v26)
  {
    v25 += 2;
LABEL_10:
    unint64_t v10 = (v26 - 1) & v26;
    unint64_t v19 = __clz(__rbit64(v26)) + (v25 << 6);
    int64_t v48 = v25;
LABEL_6:
    uint64_t v20 = v45;
    uint64_t v21 = *(void *)(v45 + 48);
    uint64_t v22 = sub_251F34DA0();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v17, v21 + *(void *)(*(void *)(v22 - 8) + 72) * v19, v22);
    uint64_t v23 = *(void *)(v20 + 56) + *(void *)(v44 + 72) * v19;
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E658);
    sub_251A4ED54(v23, (uint64_t)&v17[*(int *)(v24 + 48)], (uint64_t (*)(void))type metadata accessor for StaticService);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v17, 0, 1, v24);
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v25 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v25 >= v43)
    {
      int64_t v48 = v40;
      goto LABEL_22;
    }
    unint64_t v26 = *(void *)(v42 + 8 * v25);
    ++v28;
    if (v26) {
      goto LABEL_10;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_251A45A18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticAccessory(0);
  uint64_t v44 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a2 + 64);
  uint64_t v42 = a2 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v7;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E668);
  long long v41 = &v39;
  MEMORY[0x270FA5388](v11 - 8);
  unint64_t v46 = (v12 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v47 = v12;
  uint64_t v13 = (char *)&v39 - v46;
  int64_t v43 = (unint64_t)(v8 + 63) >> 6;
  int64_t v40 = v43 - 1;
  uint64_t v45 = a2;
  uint64_t v14 = swift_bridgeObjectRetain();
  uint64_t v15 = 0;
  int64_t v48 = 0;
  while (1)
  {
    uint64_t result = MEMORY[0x270FA5388](v14);
    uint64_t v17 = (char *)&v39 - v46;
    if (v10)
    {
      unint64_t v18 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v19 = v18 | (v48 << 6);
      goto LABEL_6;
    }
    int64_t v25 = v48 + 1;
    if (__OFADD__(v48, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v25 < v43)
    {
      unint64_t v26 = *(void *)(v42 + 8 * v25);
      if (v26) {
        goto LABEL_10;
      }
      int64_t v27 = v48 + 2;
      ++v48;
      if (v25 + 1 < v43)
      {
        unint64_t v26 = *(void *)(v42 + 8 * v27);
        if (v26)
        {
          ++v25;
          goto LABEL_10;
        }
        int64_t v28 = v25 + 2;
        int64_t v48 = v25 + 1;
        if (v25 + 2 < v43) {
          break;
        }
      }
    }
LABEL_22:
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F008);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v17, 1, 1, v29);
    unint64_t v10 = 0;
LABEL_23:
    sub_251A4ECF0((uint64_t)v17, (uint64_t)v13, &qword_26B21E668);
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F008);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 48))(v13, 1, v30) == 1)
    {
      swift_release();
      return sub_251F36CB0();
    }
    uint64_t v31 = sub_251F34DA0();
    uint64_t v32 = *(void *)(v31 - 8);
    MEMORY[0x270FA5388](v31);
    uint64_t v34 = (char *)&v39 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v35 = (uint64_t)&v13[*(int *)(v30 + 48)];
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v34, v13, v31);
    sub_251A4EC7C(v35, (uint64_t)v6, type metadata accessor for StaticAccessory);
    uint64_t v36 = *(void *)(a1 + 64);
    long long v37 = *(_OWORD *)(a1 + 16);
    v49[0] = *(_OWORD *)a1;
    v49[1] = v37;
    long long v38 = *(_OWORD *)(a1 + 48);
    v49[2] = *(_OWORD *)(a1 + 32);
    v49[3] = v38;
    uint64_t v50 = v36;
    sub_251A4EAE0((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA9628]);
    sub_251F35610();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v31);
    StaticAccessory.hash(into:)(v49);
    sub_251A4EDBC((uint64_t)v6, type metadata accessor for StaticAccessory);
    uint64_t v14 = sub_251F36D00();
    v15 ^= v14;
  }
  unint64_t v26 = *(void *)(v42 + 8 * v28);
  if (v26)
  {
    v25 += 2;
LABEL_10:
    unint64_t v10 = (v26 - 1) & v26;
    unint64_t v19 = __clz(__rbit64(v26)) + (v25 << 6);
    int64_t v48 = v25;
LABEL_6:
    uint64_t v20 = v45;
    uint64_t v21 = *(void *)(v45 + 48);
    uint64_t v22 = sub_251F34DA0();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v17, v21 + *(void *)(*(void *)(v22 - 8) + 72) * v19, v22);
    uint64_t v23 = *(void *)(v20 + 56) + *(void *)(v44 + 72) * v19;
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F008);
    sub_251A4ED54(v23, (uint64_t)&v17[*(int *)(v24 + 48)], type metadata accessor for StaticAccessory);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v17, 0, 1, v24);
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v25 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v25 >= v43)
    {
      int64_t v48 = v40;
      goto LABEL_22;
    }
    unint64_t v26 = *(void *)(v42 + 8 * v25);
    ++v28;
    if (v26) {
      goto LABEL_10;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_251A45F84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticEndpoint();
  uint64_t v44 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a2 + 64);
  uint64_t v42 = a2 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v7;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D0D0);
  long long v41 = &v39;
  MEMORY[0x270FA5388](v11 - 8);
  unint64_t v46 = (v12 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v47 = v12;
  uint64_t v13 = (char *)&v39 - v46;
  int64_t v43 = (unint64_t)(v8 + 63) >> 6;
  int64_t v40 = v43 - 1;
  uint64_t v45 = a2;
  uint64_t v14 = swift_bridgeObjectRetain();
  uint64_t v15 = 0;
  int64_t v48 = 0;
  while (1)
  {
    uint64_t result = MEMORY[0x270FA5388](v14);
    uint64_t v17 = (char *)&v39 - v46;
    if (v10)
    {
      unint64_t v18 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v19 = v18 | (v48 << 6);
      goto LABEL_6;
    }
    int64_t v25 = v48 + 1;
    if (__OFADD__(v48, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v25 < v43)
    {
      unint64_t v26 = *(void *)(v42 + 8 * v25);
      if (v26) {
        goto LABEL_10;
      }
      int64_t v27 = v48 + 2;
      ++v48;
      if (v25 + 1 < v43)
      {
        unint64_t v26 = *(void *)(v42 + 8 * v27);
        if (v26)
        {
          ++v25;
          goto LABEL_10;
        }
        int64_t v28 = v25 + 2;
        int64_t v48 = v25 + 1;
        if (v25 + 2 < v43) {
          break;
        }
      }
    }
LABEL_22:
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D0D8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v17, 1, 1, v29);
    unint64_t v10 = 0;
LABEL_23:
    sub_251A4ECF0((uint64_t)v17, (uint64_t)v13, &qword_269B9D0D0);
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D0D8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 48))(v13, 1, v30) == 1)
    {
      swift_release();
      return sub_251F36CB0();
    }
    uint64_t v31 = sub_251F34DA0();
    uint64_t v32 = *(void *)(v31 - 8);
    MEMORY[0x270FA5388](v31);
    uint64_t v34 = (char *)&v39 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v35 = (uint64_t)&v13[*(int *)(v30 + 48)];
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v34, v13, v31);
    sub_251A4EC7C(v35, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
    uint64_t v36 = *(void *)(a1 + 64);
    long long v37 = *(_OWORD *)(a1 + 16);
    v49[0] = *(_OWORD *)a1;
    v49[1] = v37;
    long long v38 = *(_OWORD *)(a1 + 48);
    v49[2] = *(_OWORD *)(a1 + 32);
    v49[3] = v38;
    uint64_t v50 = v36;
    sub_251A4EAE0((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA9628]);
    sub_251F35610();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v31);
    StaticEndpoint.hash(into:)(v49);
    sub_251A4EDBC((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
    uint64_t v14 = sub_251F36D00();
    v15 ^= v14;
  }
  unint64_t v26 = *(void *)(v42 + 8 * v28);
  if (v26)
  {
    v25 += 2;
LABEL_10:
    unint64_t v10 = (v26 - 1) & v26;
    unint64_t v19 = __clz(__rbit64(v26)) + (v25 << 6);
    int64_t v48 = v25;
LABEL_6:
    uint64_t v20 = v45;
    uint64_t v21 = *(void *)(v45 + 48);
    uint64_t v22 = sub_251F34DA0();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v17, v21 + *(void *)(*(void *)(v22 - 8) + 72) * v19, v22);
    uint64_t v23 = *(void *)(v20 + 56) + *(void *)(v44 + 72) * v19;
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D0D8);
    sub_251A4ED54(v23, (uint64_t)&v17[*(int *)(v24 + 48)], (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v17, 0, 1, v24);
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v25 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v25 >= v43)
    {
      int64_t v48 = v40;
      goto LABEL_22;
    }
    unint64_t v26 = *(void *)(v42 + 8 * v25);
    ++v28;
    if (v26) {
      goto LABEL_10;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_251A464F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (int *)type metadata accessor for StaticMatterDevice();
  uint64_t v39 = *((void *)v4 - 1);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D0E0);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  unint64_t v10 = (uint64_t *)((char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v35 - v11;
  uint64_t v13 = *(void *)(a2 + 64);
  uint64_t v37 = a2 + 64;
  uint64_t v14 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v13;
  int64_t v38 = (unint64_t)(v14 + 63) >> 6;
  int64_t v36 = v38 - 1;
  uint64_t v40 = a2;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v18 = 0;
  int64_t v41 = 0;
  for (i = v12; ; uint64_t v12 = i)
  {
    if (v16)
    {
      unint64_t v20 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v21 = v20 | (v41 << 6);
      goto LABEL_8;
    }
    int64_t v25 = v41 + 1;
    if (__OFADD__(v41, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 < v38)
    {
      unint64_t v26 = *(void *)(v37 + 8 * v25);
      if (v26) {
        goto LABEL_12;
      }
      int64_t v27 = v41 + 2;
      ++v41;
      if (v25 + 1 < v38)
      {
        unint64_t v26 = *(void *)(v37 + 8 * v27);
        if (v26)
        {
          ++v25;
          goto LABEL_12;
        }
        int64_t v28 = v25 + 2;
        int64_t v41 = v25 + 1;
        if (v25 + 2 < v38) {
          break;
        }
      }
    }
LABEL_24:
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D0E8);
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v10, 1, 1, v29);
    unint64_t v16 = 0;
LABEL_25:
    sub_251A4ECF0((uint64_t)v10, (uint64_t)v12, &qword_269B9D0E0);
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D0E8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 48))(v12, 1, v30) == 1)
    {
      swift_release();
      return sub_251F36CB0();
    }
    sub_251A4EC7C((uint64_t)&v12[*(int *)(v30 + 48)], (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
    uint64_t v31 = *(void *)(a1 + 64);
    long long v32 = *(_OWORD *)(a1 + 16);
    v43[0] = *(_OWORD *)a1;
    v43[1] = v32;
    long long v33 = *(_OWORD *)(a1 + 48);
    v43[2] = *(_OWORD *)(a1 + 32);
    v43[3] = v33;
    uint64_t v44 = v31;
    sub_251F36CF0();
    sub_251F34DA0();
    sub_251A4EAE0((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA9628]);
    sub_251F35610();
    sub_251F36CF0();
    swift_bridgeObjectRetain();
    sub_251F357B0();
    swift_bridgeObjectRelease();
    sub_251F36CB0();
    uint64_t v34 = *(void *)&v6[v4[8]];
    swift_bridgeObjectRetain();
    sub_251A54ED8((uint64_t)v43, v34);
    swift_bridgeObjectRelease();
    sub_251F35610();
    sub_251F35610();
    if (*(void *)&v6[v4[11] + 8])
    {
      sub_251F36CC0();
      swift_bridgeObjectRetain();
      sub_251F357B0();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_251F36CC0();
    }
    uint64_t v19 = *(void *)&v6[v4[12]];
    swift_bridgeObjectRetain();
    sub_251A46A94((uint64_t)v43, v19);
    swift_bridgeObjectRelease();
    MatterTileMetadata.hash(into:)();
    sub_251A4EDBC((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
    uint64_t result = sub_251F36D00();
    v18 ^= result;
  }
  unint64_t v26 = *(void *)(v37 + 8 * v28);
  if (v26)
  {
    v25 += 2;
LABEL_12:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v21 = __clz(__rbit64(v26)) + (v25 << 6);
    int64_t v41 = v25;
LABEL_8:
    uint64_t v22 = *(void *)(*(void *)(v40 + 48) + 8 * v21);
    uint64_t v23 = *(void *)(v40 + 56) + *(void *)(v39 + 72) * v21;
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D0E8);
    sub_251A4ED54(v23, (uint64_t)v10 + *(int *)(v24 + 48), (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
    *unint64_t v10 = v22;
    (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v10, 0, 1, v24);
    uint64_t v12 = i;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v25 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v25 >= v38)
    {
      int64_t v41 = v36;
      goto LABEL_24;
    }
    unint64_t v26 = *(void *)(v37 + 8 * v25);
    ++v28;
    if (v26) {
      goto LABEL_12;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_251A46A94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticEndpoint();
  uint64_t v36 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CE68);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  unint64_t v10 = (_WORD *)((char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v33 - v11;
  uint64_t v13 = *(void *)(a2 + 64);
  uint64_t v34 = a2 + 64;
  uint64_t v14 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v13;
  int64_t v35 = (unint64_t)(v14 + 63) >> 6;
  int64_t v33 = v35 - 1;
  uint64_t v37 = a2;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v18 = 0;
  int64_t v38 = 0;
  if (!v16) {
    goto LABEL_6;
  }
LABEL_4:
  unint64_t v19 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  unint64_t v20 = v19 | (v38 << 6);
LABEL_5:
  __int16 v21 = *(_WORD *)(*(void *)(v37 + 48) + 2 * v20);
  uint64_t v22 = *(void *)(v37 + 56) + *(void *)(v36 + 72) * v20;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F4C8);
  sub_251A4ED54(v22, (uint64_t)v10 + *(int *)(v23 + 48), (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
  *unint64_t v10 = v21;
  (*(void (**)(_WORD *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v10, 0, 1, v23);
  while (1)
  {
    sub_251A4ECF0((uint64_t)v10, (uint64_t)v12, &qword_269B9CE68);
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F4C8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 48))(v12, 1, v29) == 1)
    {
      swift_release();
      return sub_251F36CB0();
    }
    sub_251A4EC7C((uint64_t)&v12[*(int *)(v29 + 48)], (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
    uint64_t v30 = *(void *)(a1 + 64);
    long long v31 = *(_OWORD *)(a1 + 16);
    v39[0] = *(_OWORD *)a1;
    v39[1] = v31;
    long long v32 = *(_OWORD *)(a1 + 48);
    void v39[2] = *(_OWORD *)(a1 + 32);
    v39[3] = v32;
    uint64_t v40 = v30;
    sub_251F36CD0();
    StaticEndpoint.hash(into:)(v39);
    sub_251A4EDBC((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
    uint64_t result = sub_251F36D00();
    v18 ^= result;
    if (v16) {
      goto LABEL_4;
    }
LABEL_6:
    int64_t v24 = v38 + 1;
    if (__OFADD__(v38, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v24 < v35)
    {
      unint64_t v25 = *(void *)(v34 + 8 * v24);
      if (v25) {
        goto LABEL_9;
      }
      int64_t v26 = v38 + 2;
      ++v38;
      if (v24 + 1 < v35)
      {
        unint64_t v25 = *(void *)(v34 + 8 * v26);
        if (v25)
        {
          ++v24;
LABEL_9:
          unint64_t v16 = (v25 - 1) & v25;
          unint64_t v20 = __clz(__rbit64(v25)) + (v24 << 6);
          int64_t v38 = v24;
          goto LABEL_5;
        }
        int64_t v27 = v24 + 2;
        int64_t v38 = v24 + 1;
        if (v24 + 2 < v35) {
          break;
        }
      }
    }
LABEL_21:
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F4C8);
    (*(void (**)(_WORD *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v10, 1, 1, v28);
    unint64_t v16 = 0;
  }
  unint64_t v25 = *(void *)(v34 + 8 * v27);
  if (v25)
  {
    v24 += 2;
    goto LABEL_9;
  }
  while (1)
  {
    int64_t v24 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v24 >= v35)
    {
      int64_t v38 = v33;
      goto LABEL_21;
    }
    unint64_t v25 = *(void *)(v34 + 8 * v24);
    ++v27;
    if (v25) {
      goto LABEL_9;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_251A46EC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (int *)type metadata accessor for ActionEndpoint();
  uint64_t v40 = *((void *)v4 - 1);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CFD0);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  unint64_t v10 = (_WORD *)((char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v37 - v11;
  uint64_t v13 = *(void *)(a2 + 64);
  uint64_t v38 = a2 + 64;
  uint64_t v14 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v13;
  int64_t v39 = (unint64_t)(v14 + 63) >> 6;
  int64_t v37 = v39 - 1;
  uint64_t v41 = a2;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v18 = 0;
  int64_t v42 = 0;
  if (!v16) {
    goto LABEL_6;
  }
LABEL_4:
  unint64_t v19 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  unint64_t v20 = v19 | (v42 << 6);
LABEL_5:
  __int16 v21 = *(_WORD *)(*(void *)(v41 + 48) + 2 * v20);
  uint64_t v22 = *(void *)(v41 + 56) + *(void *)(v40 + 72) * v20;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CFD8);
  sub_251A4ED54(v22, (uint64_t)v10 + *(int *)(v23 + 48), (uint64_t (*)(void))type metadata accessor for ActionEndpoint);
  *unint64_t v10 = v21;
  (*(void (**)(_WORD *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v10, 0, 1, v23);
  while (1)
  {
    sub_251A4ECF0((uint64_t)v10, (uint64_t)v12, &qword_269B9CFD0);
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CFD8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 48))(v12, 1, v29) == 1)
    {
      swift_release();
      return sub_251F36CB0();
    }
    sub_251A4EC7C((uint64_t)&v12[*(int *)(v29 + 48)], (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ActionEndpoint);
    uint64_t v30 = *(void *)(a1 + 64);
    long long v31 = *(_OWORD *)(a1 + 16);
    v43[0] = *(_OWORD *)a1;
    v43[1] = v31;
    long long v32 = *(_OWORD *)(a1 + 48);
    v43[2] = *(_OWORD *)(a1 + 32);
    v43[3] = v32;
    uint64_t v44 = v30;
    sub_251F36CD0();
    sub_251F34DA0();
    sub_251A4EAE0((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA9628]);
    sub_251F35610();
    sub_251F35610();
    uint64_t v33 = *(void *)&v6[v4[6]];
    swift_bridgeObjectRetain();
    sub_251A54708(v43, v33);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_251F357B0();
    swift_bridgeObjectRelease();
    sub_251F36CC0();
    sub_251F36CF0();
    sub_251F36CD0();
    MatterTileMetadata.hash(into:)();
    sub_251F36CB0();
    uint64_t v34 = *(void *)&v6[v4[12]];
    swift_bridgeObjectRetain();
    sub_251A54ED8((uint64_t)v43, v34);
    swift_bridgeObjectRelease();
    uint64_t v35 = *(void *)&v6[v4[13]];
    swift_bridgeObjectRetain();
    sub_251A47BAC((uint64_t)v43, v35);
    swift_bridgeObjectRelease();
    uint64_t v36 = *(void *)&v6[v4[14]];
    swift_bridgeObjectRetain();
    sub_251A559B0((uint64_t)v43, v36);
    swift_bridgeObjectRelease();
    sub_251A4EDBC((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ActionEndpoint);
    uint64_t result = sub_251F36D00();
    v18 ^= result;
    if (v16) {
      goto LABEL_4;
    }
LABEL_6:
    int64_t v24 = v42 + 1;
    if (__OFADD__(v42, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v24 < v39)
    {
      unint64_t v25 = *(void *)(v38 + 8 * v24);
      if (v25) {
        goto LABEL_9;
      }
      int64_t v26 = v42 + 2;
      ++v42;
      if (v24 + 1 < v39)
      {
        unint64_t v25 = *(void *)(v38 + 8 * v26);
        if (v25)
        {
          ++v24;
LABEL_9:
          unint64_t v16 = (v25 - 1) & v25;
          unint64_t v20 = __clz(__rbit64(v25)) + (v24 << 6);
          int64_t v42 = v24;
          goto LABEL_5;
        }
        int64_t v27 = v24 + 2;
        int64_t v42 = v24 + 1;
        if (v24 + 2 < v39) {
          break;
        }
      }
    }
LABEL_21:
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CFD8);
    (*(void (**)(_WORD *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v10, 1, 1, v28);
    unint64_t v16 = 0;
  }
  unint64_t v25 = *(void *)(v38 + 8 * v27);
  if (v25)
  {
    v24 += 2;
    goto LABEL_9;
  }
  while (1)
  {
    int64_t v24 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v24 >= v39)
    {
      int64_t v42 = v37;
      goto LABEL_21;
    }
    unint64_t v25 = *(void *)(v38 + 8 * v24);
    ++v27;
    if (v25) {
      goto LABEL_9;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_251A47458(uint64_t a1, uint64_t a2)
{
  uint64_t v53 = a1;
  uint64_t v52 = type metadata accessor for StaticMediaSystemComponent();
  uint64_t v49 = *(void *)(v52 - 8);
  MEMORY[0x270FA5388](v52);
  uint64_t v63 = (uint64_t)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(void *)(a2 + 64);
  uint64_t v47 = a2 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & v4;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF08);
  unint64_t v46 = &v44;
  MEMORY[0x270FA5388](v8 - 8);
  unint64_t v54 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v55 = v9;
  unint64_t v10 = (char *)&v44 - v54;
  int64_t v48 = (unint64_t)(v5 + 63) >> 6;
  int64_t v45 = v48 - 1;
  uint64_t v50 = a2;
  uint64_t v11 = swift_bridgeObjectRetain();
  uint64_t v12 = 0;
  int64_t v56 = 0;
  for (i = v10; ; unint64_t v10 = i)
  {
    uint64_t result = MEMORY[0x270FA5388](v11);
    uint64_t v15 = (char *)&v44 - v54;
    if (v7)
    {
      unint64_t v16 = __clz(__rbit64(v7));
      uint64_t v17 = (v7 - 1) & v7;
      unint64_t v18 = v16 | (v56 << 6);
      goto LABEL_8;
    }
    int64_t v24 = v56 + 1;
    if (__OFADD__(v56, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v24 < v48)
    {
      unint64_t v25 = *(void *)(v47 + 8 * v24);
      if (v25) {
        goto LABEL_12;
      }
      int64_t v26 = v56 + 2;
      ++v56;
      if (v24 + 1 < v48)
      {
        unint64_t v25 = *(void *)(v47 + 8 * v26);
        if (v25)
        {
          ++v24;
          goto LABEL_12;
        }
        int64_t v27 = v24 + 2;
        int64_t v56 = v24 + 1;
        if (v24 + 2 < v48) {
          break;
        }
      }
    }
LABEL_24:
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF10);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v15, 1, 1, v28);
    uint64_t v17 = 0;
LABEL_25:
    sub_251A4ECF0((uint64_t)v15, (uint64_t)v10, &qword_269B9CF08);
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF10);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 48))(v10, 1, v29) == 1)
    {
      swift_release();
      return sub_251F36CB0();
    }
    unint64_t v61 = v17;
    uint64_t v62 = v12;
    uint64_t v30 = sub_251F34DA0();
    long long v60 = &v44;
    uint64_t v31 = *(void *)(v30 - 8);
    uint64_t v32 = *(void *)(v31 + 64);
    MEMORY[0x270FA5388](v30);
    uint64_t v33 = (uint64_t)&v10[*(int *)(v29 + 48)];
    unint64_t v58 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
    unint64_t v59 = (v32 + 15) & 0xFFFFFFFFFFFFFFF0;
    v58((char *)&v44 - v59, v10, v30);
    uint64_t v34 = v63;
    sub_251A4EC7C(v33, v63, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent);
    uint64_t v35 = *(void *)(v53 + 64);
    long long v36 = *(_OWORD *)(v53 + 16);
    v64[0] = *(_OWORD *)v53;
    v64[1] = v36;
    long long v37 = *(_OWORD *)(v53 + 48);
    v64[2] = *(_OWORD *)(v53 + 32);
    v64[3] = v37;
    uint64_t v65 = v35;
    sub_251A4EAE0((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA9628]);
    sub_251F35610();
    int64_t v57 = *(void (**)(char *, uint64_t))(v31 + 8);
    v57((char *)&v44 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0), v30);
    sub_251F35610();
    uint64_t v38 = v52;
    StaticMediaProfile.hash(into:)(v64);
    sub_251F36CB0();
    sub_251A54708(v64, *(void *)(v34 + *(int *)(v38 + 28)));
    uint64_t v39 = v34 + *(int *)(v38 + 32);
    uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    MEMORY[0x270FA5388](v40 - 8);
    int64_t v42 = (char *)&v44 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_251A1B128(v39, (uint64_t)v42, &qword_26B21FF90);
    uint64_t v43 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 48))(v42, 1, v30);
    if (v43 == 1)
    {
      sub_251F36CC0();
    }
    else
    {
      MEMORY[0x270FA5388](v43);
      uint64_t v13 = (char *)&v44 - v59;
      v58((char *)&v44 - v59, v42, v30);
      sub_251F36CC0();
      sub_251F35610();
      v57(v13, v30);
    }
    unint64_t v7 = v61;
    sub_251A4EDBC(v63, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent);
    uint64_t v11 = sub_251F36D00();
    uint64_t v12 = v11 ^ v62;
  }
  unint64_t v25 = *(void *)(v47 + 8 * v27);
  if (v25)
  {
    v24 += 2;
LABEL_12:
    uint64_t v17 = (v25 - 1) & v25;
    unint64_t v18 = __clz(__rbit64(v25)) + (v24 << 6);
    int64_t v56 = v24;
LABEL_8:
    uint64_t v19 = v50;
    uint64_t v20 = *(void *)(v50 + 48);
    uint64_t v21 = sub_251F34DA0();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v15, v20 + *(void *)(*(void *)(v21 - 8) + 72) * v18, v21);
    uint64_t v22 = *(void *)(v19 + 56) + *(void *)(v49 + 72) * v18;
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF10);
    sub_251A4ED54(v22, (uint64_t)&v15[*(int *)(v23 + 48)], (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v15, 0, 1, v23);
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v24 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v24 >= v48)
    {
      int64_t v56 = v45;
      goto LABEL_24;
    }
    unint64_t v25 = *(void *)(v47 + 8 * v24);
    ++v27;
    if (v25) {
      goto LABEL_12;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_251A47BAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a2 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a2 + 64);
  int64_t v28 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v8 = 0;
  int64_t v9 = 0;
  uint64_t v32 = a2;
  uint64_t v31 = v4;
  while (1)
  {
    if (v7)
    {
      unint64_t v12 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v13 = v12 | (v9 << 6);
      goto LABEL_21;
    }
    int64_t v14 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v14 >= v28) {
      goto LABEL_38;
    }
    unint64_t v15 = *(void *)(v31 + 8 * v14);
    ++v9;
    if (!v15)
    {
      int64_t v9 = v14 + 1;
      if (v14 + 1 >= v28) {
        goto LABEL_38;
      }
      unint64_t v15 = *(void *)(v31 + 8 * v9);
      if (!v15) {
        break;
      }
    }
LABEL_20:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v9 << 6);
LABEL_21:
    char v17 = *(unsigned char *)(*(void *)(v32 + 48) + v13);
    sub_251A1A930(*(void *)(v32 + 56) + (v13 << 8), (uint64_t)v35);
    __src[0] = v17;
    sub_251A1A930((uint64_t)v35, (uint64_t)&__src[8]);
    memcpy(__dst, __src, 0x104uLL);
    nullsub_1(__dst);
    sub_251A4ECF0((uint64_t)__dst, (uint64_t)v40, &qword_269B9D000);
    sub_251A1A930((uint64_t)&v41, (uint64_t)v38);
    uint64_t v18 = *(void *)(a1 + 64);
    long long v19 = *(_OWORD *)(a1 + 16);
    v33[0] = *(_OWORD *)a1;
    v33[1] = v19;
    long long v20 = *(_OWORD *)(a1 + 48);
    v33[2] = *(_OWORD *)(a1 + 32);
    v33[3] = v20;
    uint64_t v34 = v18;
    sub_251F36CE0();
    sub_251A1A930((uint64_t)v38, (uint64_t)v39);
    switch(sub_251A4DB2C((uint64_t)v39))
    {
      case 1u:
        sub_251A4E128((uint64_t)v39);
        sub_251F36CB0();
        sub_251F36CF0();
        sub_251F36CD0();
        sub_251F36CE0();
        sub_251F36CC0();
        goto LABEL_5;
      case 2u:
        sub_251A4E128((uint64_t)v39);
        sub_251F36CB0();
        sub_251A4EBF0((uint64_t)v35, sub_251A1AA24);
        StaticRVCClusterGroup.hash(into:)(v33);
        goto LABEL_25;
      case 3u:
        int64_t v29 = v9;
        uint64_t v30 = v8;
        uint64_t v21 = (unsigned __int8 *)sub_251A4E128((uint64_t)v39);
        int v22 = v21[16];
        int v23 = v21[17];
        unsigned __int8 v24 = v21[19];
        int v25 = v21[20];
        sub_251F36CB0();
        sub_251F36CF0();
        sub_251F36CD0();
        sub_251F36CE0();
        sub_251F36CC0();
        if (v22 != 1) {
          sub_251F36CE0();
        }
        int v26 = v25;
        if (v23 != 2) {
          sub_251F36CC0();
        }
        int64_t v9 = v29;
        uint64_t v8 = v30;
        sub_251F36CC0();
        if ((v24 & 1) == 0) {
          sub_251F36CC0();
        }
        sub_251F36CC0();
        if (v26 != 2) {
          sub_251F36CC0();
        }
        sub_251F36CC0();
        goto LABEL_5;
      case 4u:
        sub_251A4E128((uint64_t)v39);
        sub_251F36CB0();
        StaticLevelControlCluster.hash(into:)();
        goto LABEL_5;
      case 5u:
        sub_251A4E128((uint64_t)v39);
        sub_251F36CB0();
        StaticColorControlCluster.hash(into:)();
        goto LABEL_5;
      case 6u:
        sub_251A4E128((uint64_t)v39);
        sub_251F36CB0();
        StaticClusterPowerSource.hash(into:)();
LABEL_5:
        unint64_t v10 = sub_251A1AA24;
        uint64_t v11 = v35;
        break;
      default:
        sub_251A4E128((uint64_t)v39);
        sub_251F36CB0();
        sub_251A4EBF0((uint64_t)v35, sub_251A1AA24);
        StaticBasicInfoCluster.hash(into:)();
LABEL_25:
        unint64_t v10 = sub_251A4DC54;
        uint64_t v11 = v38;
        break;
    }
    sub_251A4EBF0((uint64_t)v11, v10);
    v8 ^= sub_251F36D00();
  }
  int64_t v16 = v14 + 2;
  if (v16 < v28)
  {
    unint64_t v15 = *(void *)(v31 + 8 * v16);
    if (!v15)
    {
      while (1)
      {
        int64_t v9 = v16 + 1;
        if (__OFADD__(v16, 1)) {
          break;
        }
        if (v9 >= v28) {
          goto LABEL_38;
        }
        unint64_t v15 = *(void *)(v31 + 8 * v9);
        ++v16;
        if (v15) {
          goto LABEL_20;
        }
      }
LABEL_40:
      __break(1u);
      JUMPOUT(0x251A483C8);
    }
    int64_t v9 = v16;
    goto LABEL_20;
  }
LABEL_38:
  swift_release();
  return sub_251F36CB0();
}

uint64_t sub_251A483E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (int *)type metadata accessor for StaticResident();
  uint64_t v47 = *((void *)v4 - 1);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a2 + 64);
  uint64_t v45 = a2 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v7;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E338);
  uint64_t v44 = &v42;
  MEMORY[0x270FA5388](v11 - 8);
  unint64_t v49 = (v12 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v50 = v12;
  unint64_t v13 = (char *)&v42 - v49;
  int64_t v46 = (unint64_t)(v8 + 63) >> 6;
  int64_t v43 = v46 - 1;
  uint64_t v48 = a2;
  uint64_t v14 = swift_bridgeObjectRetain();
  int64_t v51 = 0;
  for (i = v13; ; unint64_t v13 = i)
  {
    MEMORY[0x270FA5388](v14);
    unint64_t v15 = (char *)&v42 - v49;
    uint64_t v53 = v16;
    if (v10)
    {
      unint64_t v17 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v18 = v17 | (v51 << 6);
LABEL_9:
      uint64_t v19 = v48;
      uint64_t v20 = *(void *)(v48 + 48);
      uint64_t v21 = sub_251F34DA0();
      (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v15, v20 + *(void *)(*(void *)(v21 - 8) + 72) * v18, v21);
      uint64_t v22 = *(void *)(v19 + 56) + *(void *)(v47 + 72) * v18;
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F000);
      sub_251A4ED54(v22, (uint64_t)&v15[*(int *)(v23 + 48)], (uint64_t (*)(void))type metadata accessor for StaticResident);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v15, 0, 1, v23);
      unint64_t v13 = i;
      goto LABEL_26;
    }
    int64_t v24 = v51 + 1;
    if (__OFADD__(v51, 1))
    {
      __break(1u);
LABEL_36:
      __break(1u);
      JUMPOUT(0x251A48B00);
    }
    if (v24 < v46)
    {
      unint64_t v25 = *(void *)(v45 + 8 * v24);
      if (v25) {
        goto LABEL_13;
      }
      int64_t v26 = v51 + 2;
      ++v51;
      if (v24 + 1 < v46)
      {
        unint64_t v25 = *(void *)(v45 + 8 * v26);
        if (v25)
        {
          ++v24;
LABEL_13:
          unint64_t v10 = (v25 - 1) & v25;
          unint64_t v18 = __clz(__rbit64(v25)) + (v24 << 6);
          int64_t v51 = v24;
          goto LABEL_9;
        }
        int64_t v27 = v24 + 2;
        int64_t v51 = v24 + 1;
        if (v24 + 2 < v46)
        {
          unint64_t v25 = *(void *)(v45 + 8 * v27);
          if (v25)
          {
            v24 += 2;
            goto LABEL_13;
          }
          while (1)
          {
            int64_t v24 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_36;
            }
            if (v24 >= v46) {
              break;
            }
            unint64_t v25 = *(void *)(v45 + 8 * v24);
            ++v27;
            if (v25) {
              goto LABEL_13;
            }
          }
          int64_t v51 = v43;
        }
      }
    }
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F000);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v15, 1, 1, v28);
    unint64_t v10 = 0;
LABEL_26:
    sub_251A4ECF0((uint64_t)v15, (uint64_t)v13, &qword_26B21E338);
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F000);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 48))(v13, 1, v29) == 1) {
      break;
    }
    uint64_t v30 = sub_251F34DA0();
    uint64_t v31 = *(void *)(v30 - 8);
    MEMORY[0x270FA5388](v30);
    uint64_t v33 = (char *)&v42 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v34 = (uint64_t)&v13[*(int *)(v29 + 48)];
    (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v33, v13, v30);
    sub_251A4EC7C(v34, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticResident);
    uint64_t v35 = *(void *)(a1 + 64);
    long long v36 = *(_OWORD *)(a1 + 16);
    v54[0] = *(_OWORD *)a1;
    v54[1] = v36;
    long long v37 = *(_OWORD *)(a1 + 48);
    v54[2] = *(_OWORD *)(a1 + 32);
    v54[3] = v37;
    uint64_t v55 = v35;
    sub_251A4EAE0((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA9628]);
    sub_251F35610();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v30);
    sub_251F35610();
    swift_bridgeObjectRetain();
    sub_251F357B0();
    swift_bridgeObjectRelease();
    if (*(void *)&v6[v4[6] + 8])
    {
      sub_251F36CC0();
      swift_bridgeObjectRetain();
      sub_251F357B0();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_251F36CC0();
    }
    uint64_t v38 = *(void *)&v6[v4[7]];
    swift_bridgeObjectRetain();
    sub_251A5504C((uint64_t)v54, v38);
    swift_bridgeObjectRelease();
    uint64_t v39 = *(void *)&v6[v4[8]];
    swift_bridgeObjectRetain();
    sub_251A5587C((uint64_t)v54, v39);
    swift_bridgeObjectRelease();
    unsigned int v40 = *(unsigned __int16 *)&v6[v4[9]];
    if (!(v40 >> 14))
    {
      sub_251F36CB0();
LABEL_5:
      sub_251F36CB0();
      goto LABEL_6;
    }
    if (v40 >> 14 != 1) {
      goto LABEL_5;
    }
    sub_251F36CB0();
    sub_251F36CC0();
    sub_251F36CC0();
LABEL_6:
    sub_251F35610();
    sub_251A4EDBC((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticResident);
    uint64_t v14 = sub_251F36D00();
  }
  swift_release();
  return sub_251F36CB0();
}

uint64_t sub_251A48B10(long long *a1, uint64_t a2)
{
  uint64_t v46 = type metadata accessor for StaticHH2Update(0);
  uint64_t v44 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46);
  uint64_t v5 = (char *)v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(a2 + 64);
  uint64_t v42 = a2 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & v6;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E680);
  v41[1] = v41;
  MEMORY[0x270FA5388](v10 - 8);
  unint64_t v48 = (v11 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v49 = v11;
  uint64_t v47 = (uint64_t)v41 - v48;
  int64_t v43 = (unint64_t)(v7 + 63) >> 6;
  v41[0] = v43 - 1;
  uint64_t v45 = a2;
  uint64_t v12 = swift_bridgeObjectRetain();
  int64_t v50 = 0;
  while (1)
  {
    uint64_t result = MEMORY[0x270FA5388](v12);
    uint64_t v14 = (char *)v41 - v48;
    uint64_t v51 = v15;
    if (v9)
    {
      unint64_t v16 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v17 = v16 | (v50 << 6);
      goto LABEL_8;
    }
    int64_t v23 = v50 + 1;
    if (__OFADD__(v50, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v23 < v43)
    {
      unint64_t v24 = *(void *)(v42 + 8 * v23);
      if (v24) {
        goto LABEL_12;
      }
      int64_t v25 = v50 + 2;
      ++v50;
      if (v23 + 1 < v43)
      {
        unint64_t v24 = *(void *)(v42 + 8 * v25);
        if (v24)
        {
          ++v23;
          goto LABEL_12;
        }
        int64_t v26 = v23 + 2;
        int64_t v50 = v23 + 1;
        if (v23 + 2 < v43) {
          break;
        }
      }
    }
LABEL_24:
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D070);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v14, 1, 1, v27);
    unint64_t v9 = 0;
LABEL_25:
    uint64_t v28 = (uint64_t)v14;
    uint64_t v29 = v47;
    sub_251A4ECF0(v28, v47, &qword_26B21E680);
    uint64_t v30 = v29;
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D070);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 48))(v30, 1, v31) == 1)
    {
      swift_release();
      return sub_251F36CB0();
    }
    uint64_t v32 = sub_251F34DA0();
    uint64_t v33 = *(void *)(v32 - 8);
    MEMORY[0x270FA5388](v32);
    uint64_t v35 = (char *)v41 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v36 = v30 + *(int *)(v31 + 48);
    (*(void (**)(char *, uint64_t, uint64_t))(v33 + 32))(v35, v30, v32);
    sub_251A4EC7C(v36, (uint64_t)v5, type metadata accessor for StaticHH2Update);
    uint64_t v37 = *((void *)a1 + 8);
    long long v38 = a1[1];
    long long v52 = *a1;
    long long v53 = v38;
    long long v39 = a1[3];
    long long v54 = a1[2];
    long long v55 = v39;
    uint64_t v56 = v37;
    sub_251A4EAE0((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA9628]);
    sub_251F35610();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v35, v32);
    sub_251F35610();
    uint64_t v40 = v46;
    if ((v5[*(int *)(v46 + 20)] - 2) >= 6u) {
      sub_251F36CB0();
    }
    sub_251F36CB0();
    if (*(void *)&v5[*(int *)(v40 + 24) + 8])
    {
      sub_251F36CB0();
      sub_251F357B0();
    }
    else
    {
      sub_251F36CB0();
    }
    if (v5[*(int *)(v40 + 28) + 8] == 1)
    {
      sub_251F36CC0();
    }
    else
    {
      sub_251F36CC0();
      sub_251F36CF0();
    }
    sub_251A4EDBC((uint64_t)v5, type metadata accessor for StaticHH2Update);
    uint64_t v12 = sub_251F36D00();
  }
  unint64_t v24 = *(void *)(v42 + 8 * v26);
  if (v24)
  {
    v23 += 2;
LABEL_12:
    unint64_t v9 = (v24 - 1) & v24;
    unint64_t v17 = __clz(__rbit64(v24)) + (v23 << 6);
    int64_t v50 = v23;
LABEL_8:
    uint64_t v18 = v45;
    uint64_t v19 = *(void *)(v45 + 48);
    uint64_t v20 = sub_251F34DA0();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v14, v19 + *(void *)(*(void *)(v20 - 8) + 72) * v17, v20);
    uint64_t v21 = *(void *)(v18 + 56) + *(void *)(v44 + 72) * v17;
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D070);
    sub_251A4ED54(v21, (uint64_t)&v14[*(int *)(v22 + 48)], type metadata accessor for StaticHH2Update);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v14, 0, 1, v22);
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v23 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v23 >= v43)
    {
      int64_t v50 = v41[0];
      goto LABEL_24;
    }
    unint64_t v24 = *(void *)(v42 + 8 * v23);
    ++v26;
    if (v24) {
      goto LABEL_12;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_251A4914C(long long *a1, uint64_t a2)
{
  uint64_t v45 = type metadata accessor for StaticUser();
  uint64_t v43 = *(void *)(v45 - 8);
  MEMORY[0x270FA5388](v45);
  uint64_t v5 = (char *)v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(a2 + 64);
  uint64_t v41 = a2 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & v6;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E650);
  v40[1] = v40;
  MEMORY[0x270FA5388](v10 - 8);
  unint64_t v47 = (v11 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v48 = v11;
  uint64_t v46 = (uint64_t)v40 - v47;
  int64_t v42 = (unint64_t)(v7 + 63) >> 6;
  v40[0] = v42 - 1;
  uint64_t v44 = a2;
  uint64_t v12 = swift_bridgeObjectRetain();
  int64_t v49 = 0;
  while (1)
  {
    uint64_t result = MEMORY[0x270FA5388](v12);
    uint64_t v14 = (char *)v40 - v47;
    uint64_t v50 = v15;
    if (v9)
    {
      unint64_t v16 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v17 = v16 | (v49 << 6);
      goto LABEL_6;
    }
    int64_t v23 = v49 + 1;
    if (__OFADD__(v49, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v23 < v42)
    {
      unint64_t v24 = *(void *)(v41 + 8 * v23);
      if (v24) {
        goto LABEL_10;
      }
      int64_t v25 = v49 + 2;
      ++v49;
      if (v23 + 1 < v42)
      {
        unint64_t v24 = *(void *)(v41 + 8 * v25);
        if (v24)
        {
          ++v23;
          goto LABEL_10;
        }
        int64_t v26 = v23 + 2;
        int64_t v49 = v23 + 1;
        if (v23 + 2 < v42) {
          break;
        }
      }
    }
LABEL_22:
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D078);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v14, 1, 1, v27);
    unint64_t v9 = 0;
LABEL_23:
    uint64_t v28 = (uint64_t)v14;
    uint64_t v29 = v46;
    sub_251A4ECF0(v28, v46, &qword_26B21E650);
    uint64_t v30 = v29;
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D078);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 48))(v30, 1, v31) == 1)
    {
      swift_release();
      return sub_251F36CB0();
    }
    uint64_t v32 = sub_251F34DA0();
    uint64_t v33 = *(void *)(v32 - 8);
    MEMORY[0x270FA5388](v32);
    uint64_t v35 = (char *)v40 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v36 = v30 + *(int *)(v31 + 48);
    (*(void (**)(char *, uint64_t, uint64_t))(v33 + 32))(v35, v30, v32);
    sub_251A4EC7C(v36, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticUser);
    uint64_t v37 = *((void *)a1 + 8);
    long long v38 = a1[1];
    long long v51 = *a1;
    long long v52 = v38;
    long long v39 = a1[3];
    long long v53 = a1[2];
    long long v54 = v39;
    uint64_t v55 = v37;
    sub_251A4EAE0((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA9628]);
    sub_251F35610();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v35, v32);
    sub_251F35610();
    sub_251F357B0();
    sub_251F35610();
    sub_251F36CB0();
    sub_251F36CB0();
    sub_251A4EDBC((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticUser);
    uint64_t v12 = sub_251F36D00();
  }
  unint64_t v24 = *(void *)(v41 + 8 * v26);
  if (v24)
  {
    v23 += 2;
LABEL_10:
    unint64_t v9 = (v24 - 1) & v24;
    unint64_t v17 = __clz(__rbit64(v24)) + (v23 << 6);
    int64_t v49 = v23;
LABEL_6:
    uint64_t v18 = v44;
    uint64_t v19 = *(void *)(v44 + 48);
    uint64_t v20 = sub_251F34DA0();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v14, v19 + *(void *)(*(void *)(v20 - 8) + 72) * v17, v20);
    uint64_t v21 = *(void *)(v18 + 56) + *(void *)(v43 + 72) * v17;
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D078);
    sub_251A4ED54(v21, (uint64_t)&v14[*(int *)(v22 + 48)], (uint64_t (*)(void))type metadata accessor for StaticUser);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v14, 0, 1, v22);
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v23 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v23 >= v42)
    {
      int64_t v49 = v40[0];
      goto LABEL_22;
    }
    unint64_t v24 = *(void *)(v41 + 8 * v23);
    ++v26;
    if (v24) {
      goto LABEL_10;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_251A49718(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticRoom(0);
  uint64_t v44 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a2 + 64);
  uint64_t v42 = a2 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v7;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E648);
  uint64_t v41 = &v39;
  MEMORY[0x270FA5388](v11 - 8);
  unint64_t v46 = (v12 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v47 = v12;
  unint64_t v13 = (char *)&v39 - v46;
  int64_t v43 = (unint64_t)(v8 + 63) >> 6;
  int64_t v40 = v43 - 1;
  uint64_t v45 = a2;
  uint64_t v14 = swift_bridgeObjectRetain();
  uint64_t v15 = 0;
  int64_t v48 = 0;
  while (1)
  {
    uint64_t result = MEMORY[0x270FA5388](v14);
    unint64_t v17 = (char *)&v39 - v46;
    if (v10)
    {
      unint64_t v18 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v19 = v18 | (v48 << 6);
      goto LABEL_6;
    }
    int64_t v25 = v48 + 1;
    if (__OFADD__(v48, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v25 < v43)
    {
      unint64_t v26 = *(void *)(v42 + 8 * v25);
      if (v26) {
        goto LABEL_10;
      }
      int64_t v27 = v48 + 2;
      ++v48;
      if (v25 + 1 < v43)
      {
        unint64_t v26 = *(void *)(v42 + 8 * v27);
        if (v26)
        {
          ++v25;
          goto LABEL_10;
        }
        int64_t v28 = v25 + 2;
        int64_t v48 = v25 + 1;
        if (v25 + 2 < v43) {
          break;
        }
      }
    }
LABEL_22:
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E640);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v17, 1, 1, v29);
    unint64_t v10 = 0;
LABEL_23:
    sub_251A4ECF0((uint64_t)v17, (uint64_t)v13, &qword_26B21E648);
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E640);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 48))(v13, 1, v30) == 1)
    {
      swift_release();
      return sub_251F36CB0();
    }
    uint64_t v31 = sub_251F34DA0();
    uint64_t v32 = *(void *)(v31 - 8);
    MEMORY[0x270FA5388](v31);
    uint64_t v34 = (char *)&v39 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v35 = (uint64_t)&v13[*(int *)(v30 + 48)];
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v34, v13, v31);
    sub_251A4EC7C(v35, (uint64_t)v6, type metadata accessor for StaticRoom);
    uint64_t v36 = *(void *)(a1 + 64);
    long long v37 = *(_OWORD *)(a1 + 16);
    v49[0] = *(_OWORD *)a1;
    v49[1] = v37;
    long long v38 = *(_OWORD *)(a1 + 48);
    v49[2] = *(_OWORD *)(a1 + 32);
    v49[3] = v38;
    uint64_t v50 = v36;
    sub_251A4EAE0((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA9628]);
    sub_251F35610();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v31);
    StaticRoom.hash(into:)(v49);
    sub_251A4EDBC((uint64_t)v6, type metadata accessor for StaticRoom);
    uint64_t v14 = sub_251F36D00();
    v15 ^= v14;
  }
  unint64_t v26 = *(void *)(v42 + 8 * v28);
  if (v26)
  {
    v25 += 2;
LABEL_10:
    unint64_t v10 = (v26 - 1) & v26;
    unint64_t v19 = __clz(__rbit64(v26)) + (v25 << 6);
    int64_t v48 = v25;
LABEL_6:
    uint64_t v20 = v45;
    uint64_t v21 = *(void *)(v45 + 48);
    uint64_t v22 = sub_251F34DA0();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v17, v21 + *(void *)(*(void *)(v22 - 8) + 72) * v19, v22);
    uint64_t v23 = *(void *)(v20 + 56) + *(void *)(v44 + 72) * v19;
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E640);
    sub_251A4ED54(v23, (uint64_t)&v17[*(int *)(v24 + 48)], type metadata accessor for StaticRoom);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v17, 0, 1, v24);
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v25 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v25 >= v43)
    {
      int64_t v48 = v40;
      goto LABEL_22;
    }
    unint64_t v26 = *(void *)(v42 + 8 * v25);
    ++v28;
    if (v26) {
      goto LABEL_10;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_251A49C84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticMediaProfile();
  uint64_t v44 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a2 + 64);
  uint64_t v42 = a2 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v7;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E690);
  uint64_t v41 = &v39;
  MEMORY[0x270FA5388](v11 - 8);
  unint64_t v46 = (v12 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v47 = v12;
  unint64_t v13 = (char *)&v39 - v46;
  int64_t v43 = (unint64_t)(v8 + 63) >> 6;
  int64_t v40 = v43 - 1;
  uint64_t v45 = a2;
  uint64_t v14 = swift_bridgeObjectRetain();
  uint64_t v15 = 0;
  int64_t v48 = 0;
  while (1)
  {
    uint64_t result = MEMORY[0x270FA5388](v14);
    unint64_t v17 = (char *)&v39 - v46;
    if (v10)
    {
      unint64_t v18 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v19 = v18 | (v48 << 6);
      goto LABEL_6;
    }
    int64_t v25 = v48 + 1;
    if (__OFADD__(v48, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v25 < v43)
    {
      unint64_t v26 = *(void *)(v42 + 8 * v25);
      if (v26) {
        goto LABEL_10;
      }
      int64_t v27 = v48 + 2;
      ++v48;
      if (v25 + 1 < v43)
      {
        unint64_t v26 = *(void *)(v42 + 8 * v27);
        if (v26)
        {
          ++v25;
          goto LABEL_10;
        }
        int64_t v28 = v25 + 2;
        int64_t v48 = v25 + 1;
        if (v25 + 2 < v43) {
          break;
        }
      }
    }
LABEL_22:
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F018);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v17, 1, 1, v29);
    unint64_t v10 = 0;
LABEL_23:
    sub_251A4ECF0((uint64_t)v17, (uint64_t)v13, &qword_26B21E690);
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F018);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 48))(v13, 1, v30) == 1)
    {
      swift_release();
      return sub_251F36CB0();
    }
    uint64_t v31 = sub_251F34DA0();
    uint64_t v32 = *(void *)(v31 - 8);
    MEMORY[0x270FA5388](v31);
    uint64_t v34 = (char *)&v39 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v35 = (uint64_t)&v13[*(int *)(v30 + 48)];
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v34, v13, v31);
    sub_251A4EC7C(v35, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
    uint64_t v36 = *(void *)(a1 + 64);
    long long v37 = *(_OWORD *)(a1 + 16);
    v49[0] = *(_OWORD *)a1;
    v49[1] = v37;
    long long v38 = *(_OWORD *)(a1 + 48);
    v49[2] = *(_OWORD *)(a1 + 32);
    v49[3] = v38;
    uint64_t v50 = v36;
    sub_251A4EAE0((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA9628]);
    sub_251F35610();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v31);
    StaticMediaProfile.hash(into:)(v49);
    sub_251A4EDBC((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
    uint64_t v14 = sub_251F36D00();
    v15 ^= v14;
  }
  unint64_t v26 = *(void *)(v42 + 8 * v28);
  if (v26)
  {
    v25 += 2;
LABEL_10:
    unint64_t v10 = (v26 - 1) & v26;
    unint64_t v19 = __clz(__rbit64(v26)) + (v25 << 6);
    int64_t v48 = v25;
LABEL_6:
    uint64_t v20 = v45;
    uint64_t v21 = *(void *)(v45 + 48);
    uint64_t v22 = sub_251F34DA0();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v17, v21 + *(void *)(*(void *)(v22 - 8) + 72) * v19, v22);
    uint64_t v23 = *(void *)(v20 + 56) + *(void *)(v44 + 72) * v19;
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F018);
    sub_251A4ED54(v23, (uint64_t)&v17[*(int *)(v24 + 48)], (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v17, 0, 1, v24);
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v25 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v25 >= v43)
    {
      int64_t v48 = v40;
      goto LABEL_22;
    }
    unint64_t v26 = *(void *)(v42 + 8 * v25);
    ++v28;
    if (v26) {
      goto LABEL_10;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_251A4A1F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticMediaSystem();
  uint64_t v44 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a2 + 64);
  uint64_t v42 = a2 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v7;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E688);
  uint64_t v41 = &v39;
  MEMORY[0x270FA5388](v11 - 8);
  unint64_t v46 = (v12 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v47 = v12;
  unint64_t v13 = (char *)&v39 - v46;
  int64_t v43 = (unint64_t)(v8 + 63) >> 6;
  int64_t v40 = v43 - 1;
  uint64_t v45 = a2;
  uint64_t v14 = swift_bridgeObjectRetain();
  uint64_t v15 = 0;
  int64_t v48 = 0;
  while (1)
  {
    uint64_t result = MEMORY[0x270FA5388](v14);
    unint64_t v17 = (char *)&v39 - v46;
    if (v10)
    {
      unint64_t v18 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v19 = v18 | (v48 << 6);
      goto LABEL_6;
    }
    int64_t v25 = v48 + 1;
    if (__OFADD__(v48, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v25 < v43)
    {
      unint64_t v26 = *(void *)(v42 + 8 * v25);
      if (v26) {
        goto LABEL_10;
      }
      int64_t v27 = v48 + 2;
      ++v48;
      if (v25 + 1 < v43)
      {
        unint64_t v26 = *(void *)(v42 + 8 * v27);
        if (v26)
        {
          ++v25;
          goto LABEL_10;
        }
        int64_t v28 = v25 + 2;
        int64_t v48 = v25 + 1;
        if (v25 + 2 < v43) {
          break;
        }
      }
    }
LABEL_22:
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D080);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v17, 1, 1, v29);
    unint64_t v10 = 0;
LABEL_23:
    sub_251A4ECF0((uint64_t)v17, (uint64_t)v13, &qword_26B21E688);
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D080);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 48))(v13, 1, v30) == 1)
    {
      swift_release();
      return sub_251F36CB0();
    }
    uint64_t v31 = sub_251F34DA0();
    uint64_t v32 = *(void *)(v31 - 8);
    MEMORY[0x270FA5388](v31);
    uint64_t v34 = (char *)&v39 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v35 = (uint64_t)&v13[*(int *)(v30 + 48)];
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v34, v13, v31);
    sub_251A4EC7C(v35, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
    uint64_t v36 = *(void *)(a1 + 64);
    long long v37 = *(_OWORD *)(a1 + 16);
    v49[0] = *(_OWORD *)a1;
    v49[1] = v37;
    long long v38 = *(_OWORD *)(a1 + 48);
    v49[2] = *(_OWORD *)(a1 + 32);
    v49[3] = v38;
    uint64_t v50 = v36;
    sub_251A4EAE0((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA9628]);
    sub_251F35610();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v31);
    StaticMediaSystem.hash(into:)(v49);
    sub_251A4EDBC((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
    uint64_t v14 = sub_251F36D00();
    v15 ^= v14;
  }
  unint64_t v26 = *(void *)(v42 + 8 * v28);
  if (v26)
  {
    v25 += 2;
LABEL_10:
    unint64_t v10 = (v26 - 1) & v26;
    unint64_t v19 = __clz(__rbit64(v26)) + (v25 << 6);
    int64_t v48 = v25;
LABEL_6:
    uint64_t v20 = v45;
    uint64_t v21 = *(void *)(v45 + 48);
    uint64_t v22 = sub_251F34DA0();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v17, v21 + *(void *)(*(void *)(v22 - 8) + 72) * v19, v22);
    uint64_t v23 = *(void *)(v20 + 56) + *(void *)(v44 + 72) * v19;
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D080);
    sub_251A4ED54(v23, (uint64_t)&v17[*(int *)(v24 + 48)], (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v17, 0, 1, v24);
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v25 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v25 >= v43)
    {
      int64_t v48 = v40;
      goto LABEL_22;
    }
    unint64_t v26 = *(void *)(v42 + 8 * v25);
    ++v28;
    if (v26) {
      goto LABEL_10;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_251A4A75C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticCameraProfile();
  uint64_t v44 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a2 + 64);
  uint64_t v42 = a2 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v7;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E340);
  uint64_t v41 = &v39;
  MEMORY[0x270FA5388](v11 - 8);
  unint64_t v46 = (v12 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v47 = v12;
  unint64_t v13 = (char *)&v39 - v46;
  int64_t v43 = (unint64_t)(v8 + 63) >> 6;
  int64_t v40 = v43 - 1;
  uint64_t v45 = a2;
  uint64_t v14 = swift_bridgeObjectRetain();
  uint64_t v15 = 0;
  int64_t v48 = 0;
  while (1)
  {
    uint64_t result = MEMORY[0x270FA5388](v14);
    unint64_t v17 = (char *)&v39 - v46;
    if (v10)
    {
      unint64_t v18 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v19 = v18 | (v48 << 6);
      goto LABEL_6;
    }
    int64_t v25 = v48 + 1;
    if (__OFADD__(v48, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v25 < v43)
    {
      unint64_t v26 = *(void *)(v42 + 8 * v25);
      if (v26) {
        goto LABEL_10;
      }
      int64_t v27 = v48 + 2;
      ++v48;
      if (v25 + 1 < v43)
      {
        unint64_t v26 = *(void *)(v42 + 8 * v27);
        if (v26)
        {
          ++v25;
          goto LABEL_10;
        }
        int64_t v28 = v25 + 2;
        int64_t v48 = v25 + 1;
        if (v25 + 2 < v43) {
          break;
        }
      }
    }
LABEL_22:
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC30);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v17, 1, 1, v29);
    unint64_t v10 = 0;
LABEL_23:
    sub_251A4ECF0((uint64_t)v17, (uint64_t)v13, &qword_26B21E340);
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC30);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 48))(v13, 1, v30) == 1)
    {
      swift_release();
      return sub_251F36CB0();
    }
    uint64_t v31 = sub_251F34DA0();
    uint64_t v32 = *(void *)(v31 - 8);
    MEMORY[0x270FA5388](v31);
    uint64_t v34 = (char *)&v39 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v35 = (uint64_t)&v13[*(int *)(v30 + 48)];
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v34, v13, v31);
    sub_251A4EC7C(v35, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
    uint64_t v36 = *(void *)(a1 + 64);
    long long v37 = *(_OWORD *)(a1 + 16);
    v49[0] = *(_OWORD *)a1;
    v49[1] = v37;
    long long v38 = *(_OWORD *)(a1 + 48);
    v49[2] = *(_OWORD *)(a1 + 32);
    v49[3] = v38;
    uint64_t v50 = v36;
    sub_251A4EAE0((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA9628]);
    sub_251F35610();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v31);
    StaticCameraProfile.hash(into:)(v49);
    sub_251A4EDBC((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
    uint64_t v14 = sub_251F36D00();
    v15 ^= v14;
  }
  unint64_t v26 = *(void *)(v42 + 8 * v28);
  if (v26)
  {
    v25 += 2;
LABEL_10:
    unint64_t v10 = (v26 - 1) & v26;
    unint64_t v19 = __clz(__rbit64(v26)) + (v25 << 6);
    int64_t v48 = v25;
LABEL_6:
    uint64_t v20 = v45;
    uint64_t v21 = *(void *)(v45 + 48);
    uint64_t v22 = sub_251F34DA0();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v17, v21 + *(void *)(*(void *)(v22 - 8) + 72) * v19, v22);
    uint64_t v23 = *(void *)(v20 + 56) + *(void *)(v44 + 72) * v19;
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC30);
    sub_251A4ED54(v23, (uint64_t)&v17[*(int *)(v24 + 48)], (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v17, 0, 1, v24);
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v25 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v25 >= v43)
    {
      int64_t v48 = v40;
      goto LABEL_22;
    }
    unint64_t v26 = *(void *)(v42 + 8 * v25);
    ++v28;
    if (v26) {
      goto LABEL_10;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_251A4ACC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticActionSet();
  uint64_t v44 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a2 + 64);
  uint64_t v42 = a2 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v7;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E678);
  uint64_t v41 = &v39;
  MEMORY[0x270FA5388](v11 - 8);
  unint64_t v46 = (v12 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v47 = v12;
  unint64_t v13 = (char *)&v39 - v46;
  int64_t v43 = (unint64_t)(v8 + 63) >> 6;
  int64_t v40 = v43 - 1;
  uint64_t v45 = a2;
  uint64_t v14 = swift_bridgeObjectRetain();
  uint64_t v15 = 0;
  int64_t v48 = 0;
  while (1)
  {
    uint64_t result = MEMORY[0x270FA5388](v14);
    unint64_t v17 = (char *)&v39 - v46;
    if (v10)
    {
      unint64_t v18 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v19 = v18 | (v48 << 6);
      goto LABEL_6;
    }
    int64_t v25 = v48 + 1;
    if (__OFADD__(v48, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v25 < v43)
    {
      unint64_t v26 = *(void *)(v42 + 8 * v25);
      if (v26) {
        goto LABEL_10;
      }
      int64_t v27 = v48 + 2;
      ++v48;
      if (v25 + 1 < v43)
      {
        unint64_t v26 = *(void *)(v42 + 8 * v27);
        if (v26)
        {
          ++v25;
          goto LABEL_10;
        }
        int64_t v28 = v25 + 2;
        int64_t v48 = v25 + 1;
        if (v25 + 2 < v43) {
          break;
        }
      }
    }
LABEL_22:
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E670);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v17, 1, 1, v29);
    unint64_t v10 = 0;
LABEL_23:
    sub_251A4ECF0((uint64_t)v17, (uint64_t)v13, &qword_26B21E678);
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E670);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 48))(v13, 1, v30) == 1)
    {
      swift_release();
      return sub_251F36CB0();
    }
    uint64_t v31 = sub_251F34DA0();
    uint64_t v32 = *(void *)(v31 - 8);
    MEMORY[0x270FA5388](v31);
    uint64_t v34 = (char *)&v39 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v35 = (uint64_t)&v13[*(int *)(v30 + 48)];
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v34, v13, v31);
    sub_251A4EC7C(v35, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
    uint64_t v36 = *(void *)(a1 + 64);
    long long v37 = *(_OWORD *)(a1 + 16);
    v49[0] = *(_OWORD *)a1;
    v49[1] = v37;
    long long v38 = *(_OWORD *)(a1 + 48);
    v49[2] = *(_OWORD *)(a1 + 32);
    v49[3] = v38;
    uint64_t v50 = v36;
    sub_251A4EAE0((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA9628]);
    sub_251F35610();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v31);
    StaticActionSet.hash(into:)(v49);
    sub_251A4EDBC((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
    uint64_t v14 = sub_251F36D00();
    v15 ^= v14;
  }
  unint64_t v26 = *(void *)(v42 + 8 * v28);
  if (v26)
  {
    v25 += 2;
LABEL_10:
    unint64_t v10 = (v26 - 1) & v26;
    unint64_t v19 = __clz(__rbit64(v26)) + (v25 << 6);
    int64_t v48 = v25;
LABEL_6:
    uint64_t v20 = v45;
    uint64_t v21 = *(void *)(v45 + 48);
    uint64_t v22 = sub_251F34DA0();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v17, v21 + *(void *)(*(void *)(v22 - 8) + 72) * v19, v22);
    uint64_t v23 = *(void *)(v20 + 56) + *(void *)(v44 + 72) * v19;
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E670);
    sub_251A4ED54(v23, (uint64_t)&v17[*(int *)(v24 + 48)], (uint64_t (*)(void))type metadata accessor for StaticActionSet);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v17, 0, 1, v24);
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v25 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v25 >= v43)
    {
      int64_t v48 = v40;
      goto LABEL_22;
    }
    unint64_t v26 = *(void *)(v42 + 8 * v25);
    ++v28;
    if (v26) {
      goto LABEL_10;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_251A4B234(long long *a1, uint64_t a2)
{
  uint64_t v64 = a1;
  uint64_t v63 = type metadata accessor for StaticZone();
  uint64_t v59 = *(void *)(v63 - 8);
  MEMORY[0x270FA5388](v63);
  uint64_t v4 = (char *)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(a2 + 64);
  uint64_t v57 = a2 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & v5;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC28);
  uint64_t v56 = &v54;
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v66 = v10;
  unint64_t v65 = (v10 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v11 = (char *)&v54 - v65;
  int64_t v58 = (unint64_t)(v6 + 63) >> 6;
  int64_t v55 = v58 - 1;
  uint64_t v60 = a2;
  uint64_t v12 = swift_bridgeObjectRetain();
  uint64_t v13 = 0;
  int64_t v67 = 0;
  uint64_t v62 = v4;
  for (i = v11; ; uint64_t v11 = i)
  {
    uint64_t result = MEMORY[0x270FA5388](v12);
    unint64_t v16 = (char *)&v54 - v65;
    if (v8)
    {
      unint64_t v17 = __clz(__rbit64(v8));
      uint64_t v18 = (v8 - 1) & v8;
      unint64_t v19 = v17 | (v67 << 6);
      goto LABEL_9;
    }
    int64_t v25 = v67 + 1;
    if (__OFADD__(v67, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v25 < v58)
    {
      unint64_t v26 = *(void *)(v57 + 8 * v25);
      if (v26) {
        goto LABEL_13;
      }
      int64_t v27 = v67 + 2;
      ++v67;
      if (v25 + 1 < v58)
      {
        unint64_t v26 = *(void *)(v57 + 8 * v27);
        if (v26)
        {
          ++v25;
          goto LABEL_13;
        }
        int64_t v28 = v25 + 2;
        int64_t v67 = v25 + 1;
        if (v25 + 2 < v58) {
          break;
        }
      }
    }
LABEL_25:
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D088);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v16, 1, 1, v29);
    uint64_t v18 = 0;
LABEL_26:
    sub_251A4ECF0((uint64_t)v16, (uint64_t)v11, &qword_26B21EC28);
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D088);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 48))(v11, 1, v30) == 1)
    {
      swift_release();
      return sub_251F36CB0();
    }
    unint64_t v70 = v18;
    uint64_t v71 = v13;
    uint64_t v31 = sub_251F34DA0();
    os_log_type_t v69 = &v54;
    uint64_t v32 = *(void **)(v31 - 8);
    MEMORY[0x270FA5388](v31);
    uint64_t v34 = (char *)&v54 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v35 = (uint64_t)&v11[*(int *)(v30 + 48)];
    uint64_t v36 = (void (*)(char *, char *, uint64_t))v32[4];
    uint64_t v78 = v32 + 4;
    uint64_t v79 = v33;
    uint64_t v77 = v36;
    v36(v34, v11, v31);
    sub_251A4EC7C(v35, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticZone);
    uint64_t v37 = *((void *)v64 + 8);
    long long v38 = v64[1];
    long long v80 = *v64;
    long long v81 = v38;
    long long v39 = v64[3];
    long long v82 = v64[2];
    long long v83 = v39;
    uint64_t v84 = v37;
    uint64_t v40 = sub_251A4EAE0((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA9628]);
    sub_251F35610();
    uint64_t v74 = (void (*)(char *, uint64_t))v32[1];
    uint64_t v75 = v32 + 1;
    v74(v34, v31);
    uint64_t v76 = v40;
    sub_251F35610();
    uint64_t v41 = v63;
    sub_251F357B0();
    uint64_t v42 = *(void *)&v4[*(int *)(v41 + 24)];
    sub_251F36CB0();
    uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    uint64_t v68 = &v54;
    MEMORY[0x270FA5388](v43 - 8);
    uint64_t v45 = (char *)&v54 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v46 = *(void *)(v42 + 16);
    if (v46)
    {
      int64_t v48 = (void (*)(char *, uint64_t, uint64_t))v32[2];
      uint64_t v47 = v32 + 2;
      uint64_t v49 = v42 + ((*((unsigned __int8 *)v47 + 64) + 32) & ~(unint64_t)*((unsigned __int8 *)v47 + 64));
      uint64_t v50 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v47 + 5);
      uint64_t v72 = v47[7];
      uint64_t v73 = v48;
      while (1)
      {
        v73(v45, v49, v31);
        uint64_t v14 = *v50;
        (*v50)(v45, 0, 1, v31);
        uint64_t v51 = ((uint64_t (*)(char *, uint64_t, uint64_t))v47[4])(v45, 1, v31);
        if (v51 == 1) {
          break;
        }
        MEMORY[0x270FA5388](v51);
        long long v53 = (char *)&v54 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
        v77(v53, v45, v31);
        sub_251F35610();
        v74(v53, v31);
        v49 += v72;
        if (!--v46) {
          goto LABEL_5;
        }
      }
    }
    else
    {
      uint64_t v14 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v32[7];
LABEL_5:
      v14(v45, 1, 1, v31);
    }
    uint64_t v4 = v62;
    sub_251A4EDBC((uint64_t)v62, (uint64_t (*)(void))type metadata accessor for StaticZone);
    uint64_t v12 = sub_251F36D00();
    unint64_t v8 = v70;
    uint64_t v13 = v12 ^ v71;
  }
  unint64_t v26 = *(void *)(v57 + 8 * v28);
  if (v26)
  {
    v25 += 2;
LABEL_13:
    uint64_t v18 = (v26 - 1) & v26;
    unint64_t v19 = __clz(__rbit64(v26)) + (v25 << 6);
    int64_t v67 = v25;
LABEL_9:
    uint64_t v20 = v60;
    uint64_t v21 = *(void *)(v60 + 48);
    uint64_t v22 = sub_251F34DA0();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v16, v21 + *(void *)(*(void *)(v22 - 8) + 72) * v19, v22);
    uint64_t v23 = *(void *)(v20 + 56) + *(void *)(v59 + 72) * v19;
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D088);
    sub_251A4ED54(v23, (uint64_t)&v16[*(int *)(v24 + 48)], (uint64_t (*)(void))type metadata accessor for StaticZone);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v16, 0, 1, v24);
    goto LABEL_26;
  }
  while (1)
  {
    int64_t v25 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v25 >= v58)
    {
      int64_t v67 = v55;
      goto LABEL_25;
    }
    unint64_t v26 = *(void *)(v57 + 8 * v25);
    ++v28;
    if (v26) {
      goto LABEL_13;
    }
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_251A4BA44(long long *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 64);
  uint64_t v41 = a2 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & v4;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D050);
  uint64_t v40 = &v38;
  MEMORY[0x270FA5388](v8 - 8);
  unint64_t v44 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v45 = v9;
  uint64_t v46 = (char *)&v38 - v44;
  int64_t v42 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v43 = a2;
  int64_t v39 = v42 - 1;
  uint64_t v10 = swift_bridgeObjectRetain();
  uint64_t v11 = 0;
  int64_t v47 = 0;
  uint64_t v12 = (uint64_t *)&unk_269B9D058;
  while (1)
  {
    uint64_t result = MEMORY[0x270FA5388](v10);
    uint64_t v14 = (char *)&v38 - v44;
    if (v7)
    {
      unint64_t v15 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v16 = v15 | (v47 << 6);
      goto LABEL_6;
    }
    int64_t v23 = v47 + 1;
    if (__OFADD__(v47, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    uint64_t v22 = (uint64_t)v46;
    if (v23 < v42)
    {
      unint64_t v24 = *(void *)(v41 + 8 * v23);
      if (v24) {
        goto LABEL_10;
      }
      int64_t v25 = v47 + 2;
      ++v47;
      if (v23 + 1 < v42)
      {
        unint64_t v24 = *(void *)(v41 + 8 * v25);
        if (v24)
        {
          ++v23;
          goto LABEL_10;
        }
        int64_t v26 = v23 + 2;
        int64_t v47 = v23 + 1;
        if (v23 + 2 < v42) {
          break;
        }
      }
    }
LABEL_22:
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(v12);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v14, 1, 1, v27);
    unint64_t v7 = 0;
LABEL_23:
    sub_251A4ECF0((uint64_t)v14, v22, &qword_269B9D050);
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(v12);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 48))(v22, 1, v28) == 1)
    {
      swift_release();
      return sub_251F36CB0();
    }
    uint64_t v29 = v12;
    uint64_t v30 = sub_251F34DA0();
    uint64_t v31 = *(void *)(v30 - 8);
    MEMORY[0x270FA5388](v30);
    uint64_t v33 = (char *)&v38 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, uint64_t, uint64_t))(v31 + 32))(v33, v22, v30);
    uint64_t v34 = *((void *)a1 + 8);
    long long v35 = a1[1];
    long long v48 = *a1;
    long long v49 = v35;
    long long v36 = a1[3];
    long long v50 = a1[2];
    long long v51 = v36;
    uint64_t v52 = v34;
    sub_251A4EAE0((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA9628]);
    sub_251F35610();
    uint64_t v37 = v30;
    uint64_t v12 = v29;
    (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v37);
    sub_251F36CC0();
    uint64_t v10 = sub_251F36D00();
    v11 ^= v10;
  }
  unint64_t v24 = *(void *)(v41 + 8 * v26);
  if (v24)
  {
    v23 += 2;
LABEL_10:
    unint64_t v7 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v23 << 6);
    int64_t v47 = v23;
LABEL_6:
    uint64_t v17 = v43;
    uint64_t v18 = *(void *)(v43 + 48);
    uint64_t v19 = sub_251F34DA0();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v14, v18 + *(void *)(*(void *)(v19 - 8) + 72) * v16, v19);
    char v20 = *(unsigned char *)(*(void *)(v17 + 56) + v16);
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(v12);
    v14[*(int *)(v21 + 48)] = v20;
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v14, 0, 1, v21);
    uint64_t v22 = (uint64_t)v46;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v23 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v23 >= v42)
    {
      int64_t v47 = v39;
      goto LABEL_22;
    }
    unint64_t v24 = *(void *)(v41 + 8 * v23);
    ++v26;
    if (v24) {
      goto LABEL_10;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_251A4BED8(uint64_t a1, uint64_t a2)
{
  uint64_t v21 = a2 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a2 + 64);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v7 = 0;
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_20;
    }
    int64_t v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v11 >= v6) {
      goto LABEL_26;
    }
    unint64_t v12 = *(void *)(v21 + 8 * v11);
    ++v8;
    if (!v12)
    {
      int64_t v8 = v11 + 1;
      if (v11 + 1 >= v6) {
        goto LABEL_26;
      }
      unint64_t v12 = *(void *)(v21 + 8 * v8);
      if (!v12) {
        break;
      }
    }
LABEL_19:
    unint64_t v5 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v8 << 6);
LABEL_20:
    uint64_t v14 = *(void **)(*(void *)(a2 + 48) + 8 * v10);
    uint64_t v15 = *(void *)(a2 + 56) + 24 * v10;
    uint64_t v16 = *(void *)v15;
    unint64_t v17 = *(void *)(v15 + 8);
    uint64_t v18 = *(unsigned __int8 *)(v15 + 16);
    id v19 = v14;
    sub_251A1A870(v16, v17, v18);
    sub_251F36130();

    switch(v18)
    {
      case 1:
        sub_251F36CB0();
        sub_251F36CF0();
        break;
      case 2:
        sub_251F36CB0();
        goto LABEL_4;
      case 3:
        sub_251F36CB0();
        sub_251F357B0();
        sub_251A1AD70(v16, v17, 3);
        break;
      case 4:
        sub_251F36CB0();
        sub_251A1A894(v16, v17);
        sub_251F34C30();
        sub_251A1AD70(v16, v17, 4);
        sub_251A1AD70(v16, v17, 4);
        break;
      case 5:
LABEL_4:
        sub_251F36CB0();
        break;
      default:
        sub_251F36CB0();
        sub_251F36CC0();
        break;
    }
    v7 ^= sub_251F36D00();
  }
  int64_t v13 = v11 + 2;
  if (v13 < v6)
  {
    unint64_t v12 = *(void *)(v21 + 8 * v13);
    if (!v12)
    {
      while (1)
      {
        int64_t v8 = v13 + 1;
        if (__OFADD__(v13, 1)) {
          break;
        }
        if (v8 >= v6) {
          goto LABEL_26;
        }
        unint64_t v12 = *(void *)(v21 + 8 * v8);
        ++v13;
        if (v12) {
          goto LABEL_19;
        }
      }
LABEL_28:
      __break(1u);
      JUMPOUT(0x251A4C184);
    }
    int64_t v8 = v13;
    goto LABEL_19;
  }
LABEL_26:
  swift_release();
  return sub_251F36CB0();
}

uint64_t sub_251A4C19C(uint64_t a1, uint64_t a2)
{
  uint64_t v22 = a2 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a2 + 64);
  int64_t v21 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v6 = 0;
  int64_t v7 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v8 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v9 = v8 | (v7 << 6);
      goto LABEL_21;
    }
    int64_t v10 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v10 >= v21) {
      goto LABEL_23;
    }
    unint64_t v11 = *(void *)(v22 + 8 * v10);
    ++v7;
    if (!v11)
    {
      int64_t v7 = v10 + 1;
      if (v10 + 1 >= v21) {
        goto LABEL_23;
      }
      unint64_t v11 = *(void *)(v22 + 8 * v7);
      if (!v11) {
        break;
      }
    }
LABEL_20:
    unint64_t v5 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v7 << 6);
LABEL_21:
    int64_t v13 = *(void **)(*(void *)(a2 + 48) + 8 * v9);
    uint64_t v14 = *(void *)(a2 + 56) + 32 * v9;
    uint64_t v15 = *(void *)v14;
    uint64_t v16 = *(void *)(v14 + 8);
    uint64_t v17 = *(void *)(v14 + 16);
    uint64_t v18 = *(unsigned __int8 *)(v14 + 24);
    id v19 = v13;
    sub_251A1A550(v15, v16, v17, v18);
    sub_251F36130();

    switch(v18)
    {
      case 2:
        sub_251F36CB0();
        sub_251F36CB0();
        sub_251F357B0();
        sub_251A1A5A4(v15, v16, v17, 2);
        break;
      case 3:
        goto LABEL_5;
      default:
        sub_251F36CB0();
LABEL_5:
        sub_251F36CB0();
        break;
    }
    v6 ^= sub_251F36D00();
  }
  int64_t v12 = v10 + 2;
  if (v12 < v21)
  {
    unint64_t v11 = *(void *)(v22 + 8 * v12);
    if (!v11)
    {
      while (1)
      {
        int64_t v7 = v12 + 1;
        if (__OFADD__(v12, 1)) {
          break;
        }
        if (v7 >= v21) {
          goto LABEL_23;
        }
        unint64_t v11 = *(void *)(v22 + 8 * v7);
        ++v12;
        if (v11) {
          goto LABEL_20;
        }
      }
LABEL_25:
      __break(1u);
      JUMPOUT(0x251A4C418);
    }
    int64_t v7 = v12;
    goto LABEL_20;
  }
LABEL_23:
  swift_release();
  return sub_251F36CB0();
}

uint64_t sub_251A4C428(long long *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 64);
  uint64_t v41 = a2 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & v4;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D040);
  uint64_t v40 = &v38;
  MEMORY[0x270FA5388](v8 - 8);
  unint64_t v44 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v45 = v9;
  uint64_t v46 = (char *)&v38 - v44;
  int64_t v42 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v43 = a2;
  int64_t v39 = v42 - 1;
  uint64_t v10 = swift_bridgeObjectRetain();
  uint64_t v11 = 0;
  int64_t v47 = 0;
  int64_t v12 = (uint64_t *)&unk_269B9D048;
  while (1)
  {
    uint64_t result = MEMORY[0x270FA5388](v10);
    uint64_t v14 = (char *)&v38 - v44;
    if (v7)
    {
      unint64_t v15 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v16 = v15 | (v47 << 6);
      goto LABEL_6;
    }
    int64_t v23 = v47 + 1;
    if (__OFADD__(v47, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    uint64_t v22 = (uint64_t)v46;
    if (v23 < v42)
    {
      unint64_t v24 = *(void *)(v41 + 8 * v23);
      if (v24) {
        goto LABEL_10;
      }
      int64_t v25 = v47 + 2;
      ++v47;
      if (v23 + 1 < v42)
      {
        unint64_t v24 = *(void *)(v41 + 8 * v25);
        if (v24)
        {
          ++v23;
          goto LABEL_10;
        }
        int64_t v26 = v23 + 2;
        int64_t v47 = v23 + 1;
        if (v23 + 2 < v42) {
          break;
        }
      }
    }
LABEL_22:
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(v12);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v14, 1, 1, v27);
    unint64_t v7 = 0;
LABEL_23:
    sub_251A4ECF0((uint64_t)v14, v22, &qword_269B9D040);
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(v12);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 48))(v22, 1, v28) == 1)
    {
      swift_release();
      return sub_251F36CB0();
    }
    uint64_t v29 = v12;
    uint64_t v30 = sub_251F34DA0();
    uint64_t v31 = *(void *)(v30 - 8);
    MEMORY[0x270FA5388](v30);
    uint64_t v33 = (char *)&v38 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, uint64_t, uint64_t))(v31 + 32))(v33, v22, v30);
    uint64_t v34 = *((void *)a1 + 8);
    long long v35 = a1[1];
    long long v48 = *a1;
    long long v49 = v35;
    long long v36 = a1[3];
    long long v50 = a1[2];
    long long v51 = v36;
    uint64_t v52 = v34;
    sub_251A4EAE0((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA9628]);
    sub_251F35610();
    uint64_t v37 = v30;
    int64_t v12 = v29;
    (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v37);
    sub_251F36CB0();
    sub_251F36CC0();
    uint64_t v10 = sub_251F36D00();
    v11 ^= v10;
  }
  unint64_t v24 = *(void *)(v41 + 8 * v26);
  if (v24)
  {
    v23 += 2;
LABEL_10:
    unint64_t v7 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v23 << 6);
    int64_t v47 = v23;
LABEL_6:
    uint64_t v17 = v43;
    uint64_t v18 = *(void *)(v43 + 48);
    uint64_t v19 = sub_251F34DA0();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v14, v18 + *(void *)(*(void *)(v19 - 8) + 72) * v16, v19);
    char v20 = *(unsigned char *)(*(void *)(v17 + 56) + v16);
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(v12);
    v14[*(int *)(v21 + 48)] = v20;
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v14, 0, 1, v21);
    uint64_t v22 = (uint64_t)v46;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v23 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v23 >= v42)
    {
      int64_t v47 = v39;
      goto LABEL_22;
    }
    unint64_t v24 = *(void *)(v41 + 8 * v23);
    ++v26;
    if (v24) {
      goto LABEL_10;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_251A4C8C8(long long *a1, uint64_t a2)
{
  uint64_t v38 = a1;
  uint64_t v2 = *(void *)(a2 + 64);
  uint64_t v34 = a2 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & v2;
  int64_t v35 = (unint64_t)(v3 + 63) >> 6;
  uint64_t v37 = a2;
  swift_bridgeObjectRetain();
  uint64_t v6 = 0;
  int64_t v7 = 0;
  long long v36 = "00-8000-0026BB765291";
  v33[7] = "13-AA62-01754F256DD5";
  v33[6] = "73-A058-C5E64BC487B2";
  void v33[5] = "CE-986D-63B28F62C9E3";
  long long v33[4] = "60-AD68-D91053B75F44";
  v33[3] = "7E-BE63-1D00B1500545";
  v33[2] = "17-A590-755E1AAC02AE";
  v33[1] = "73-8FBD-0E8978A33403";
  while (1)
  {
    uint64_t v42 = v6;
    if (v5)
    {
      uint64_t v39 = (v5 - 1) & v5;
      int64_t v40 = v7;
      unint64_t v9 = __clz(__rbit64(v5)) | (v7 << 6);
      goto LABEL_20;
    }
    int64_t v10 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v10 >= v35) {
      goto LABEL_25;
    }
    unint64_t v11 = *(void *)(v34 + 8 * v10);
    int64_t v12 = v7 + 1;
    if (!v11)
    {
      int64_t v12 = v7 + 2;
      if (v7 + 2 >= v35) {
        goto LABEL_25;
      }
      unint64_t v11 = *(void *)(v34 + 8 * v12);
      if (!v11) {
        break;
      }
    }
LABEL_19:
    uint64_t v39 = (v11 - 1) & v11;
    int64_t v40 = v12;
    unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_20:
    uint64_t v14 = *(void *)(*(void *)(v37 + 56) + 8 * v9);
    uint64_t v15 = *((void *)v38 + 8);
    long long v16 = v38[1];
    long long v48 = *v38;
    long long v49 = v16;
    long long v17 = v38[2];
    long long v18 = v38[3];
    uint64_t v52 = v15;
    long long v50 = v17;
    long long v51 = v18;
    swift_bridgeObjectRetain();
    sub_251F357B0();
    swift_bridgeObjectRelease();
    sub_251F36CB0();
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    uint64_t v41 = v33;
    MEMORY[0x270FA5388](v19 - 8);
    uint64_t v21 = (char *)v33 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v43 = v14;
    uint64_t v22 = *(void *)(v14 + 16);
    if (v22)
    {
      uint64_t v23 = sub_251F34DA0();
      uint64_t v24 = *(void *)(v23 - 8);
      uint64_t v25 = v24;
      uint64_t v26 = v43 + ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80));
      uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 16);
      uint64_t v46 = v24 + 16;
      int64_t v47 = v27;
      uint64_t v44 = v24 + 8;
      uint64_t v45 = v24 + 32;
      uint64_t v28 = *(void *)(v24 + 72);
      while (1)
      {
        v47(v21, v26, v23);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v21, 0, 1, v23);
        uint64_t v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48))(v21, 1, v23);
        if (v29 == 1) {
          break;
        }
        MEMORY[0x270FA5388](v29);
        uint64_t v31 = (char *)v33 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v31, v21, v23);
        sub_251A4EAE0((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA9628]);
        sub_251F35610();
        (*(void (**)(char *, uint64_t))(v25 + 8))(v31, v23);
        v26 += v28;
        if (!--v22) {
          goto LABEL_4;
        }
      }
    }
    else
    {
LABEL_4:
      uint64_t v8 = sub_251F34DA0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v21, 1, 1, v8);
    }
    swift_bridgeObjectRelease();
    uint64_t v6 = sub_251F36D00() ^ v42;
    unint64_t v5 = v39;
    int64_t v7 = v40;
  }
  uint64_t v13 = v7 + 3;
  if (v7 + 3 < v35)
  {
    unint64_t v11 = *(void *)(v34 + 8 * v13);
    if (!v11)
    {
      while (1)
      {
        int64_t v12 = v13 + 1;
        if (__OFADD__(v13, 1)) {
          break;
        }
        if (v12 >= v35) {
          goto LABEL_25;
        }
        unint64_t v11 = *(void *)(v34 + 8 * v12);
        ++v13;
        if (v11) {
          goto LABEL_19;
        }
      }
LABEL_27:
      __break(1u);
      JUMPOUT(0x251A4CDF0);
    }
    int64_t v12 = v7 + 3;
    goto LABEL_19;
  }
LABEL_25:
  swift_release();
  return sub_251F36CB0();
}

uint64_t _s13HomeDataModel19MatterStateSnapshotV14CommandPayloadO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v5 = *(void **)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  int v6 = *(char *)(a1 + 32);
  uint64_t v7 = *(void *)a2;
  uint64_t v8 = *(void *)(a2 + 8);
  int64_t v10 = *(void **)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  int v11 = *(char *)(a2 + 32);
  if (v6 < 0)
  {
    if (v11 < 0)
    {
      if (v7 == v3
        && (sub_251AB662C(*(void *)(a1 + 8), *(void *)(a2 + 8)) & 1) != 0)
      {
        if (v5)
        {
          if (!v10)
          {
            sub_251A4DA50(v7, v8, 0, v9, v11);
            sub_251A4DA50(v3, v2, (uint64_t)v5, v4, v6);
            sub_251A4DAE8(v3, v2, (uint64_t)v5, v4, v6);
            uint64_t v18 = v7;
            uint64_t v19 = v8;
            uint64_t v20 = 0;
            goto LABEL_8;
          }
          BOOL v22 = sub_251AB6284(v5, v10);
          sub_251A4DA50(v7, v8, (uint64_t)v10, v9, v11);
          sub_251A4DA50(v3, v2, (uint64_t)v5, v4, v6);
          sub_251A4DAE8(v3, v2, (uint64_t)v5, v4, v6);
          sub_251A4DAE8(v7, v8, (uint64_t)v10, v9, v11);
          if (!v22) {
            goto LABEL_9;
          }
        }
        else
        {
          sub_251A4DA50(v7, v8, (uint64_t)v10, v9, v11);
          sub_251A4DA50(v3, v2, 0, v4, v6);
          swift_bridgeObjectRetain();
          sub_251A4DAE8(v3, v2, 0, v4, v6);
          sub_251A4DAE8(v7, v8, (uint64_t)v10, v9, v11);
          if (v10)
          {
            swift_bridgeObjectRelease();
            goto LABEL_9;
          }
        }
        if (v6)
        {
          if ((v11 & 1) == 0) {
            goto LABEL_9;
          }
        }
        else if ((v11 & 1) != 0 || v4 != v9)
        {
          goto LABEL_9;
        }
        char v12 = 1;
        return v12 & 1;
      }
      sub_251A4DA50(v7, v8, (uint64_t)v10, v9, v11);
      uint64_t v13 = v3;
      uint64_t v14 = v2;
      uint64_t v15 = (uint64_t)v5;
      uint64_t v16 = v4;
      char v17 = v6;
LABEL_7:
      sub_251A4DA50(v13, v14, v15, v16, v17);
      sub_251A4DAE8(v3, v2, (uint64_t)v5, v4, v6);
      uint64_t v18 = v7;
      uint64_t v19 = v8;
      uint64_t v20 = (uint64_t)v10;
LABEL_8:
      sub_251A4DAE8(v18, v19, v20, v9, v11);
LABEL_9:
      char v12 = 0;
      return v12 & 1;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_6:
    uint64_t v13 = v7;
    uint64_t v14 = v8;
    uint64_t v15 = (uint64_t)v10;
    uint64_t v16 = v9;
    char v17 = v11;
    goto LABEL_7;
  }
  if (v11 < 0) {
    goto LABEL_6;
  }
  sub_251A4DAE8(*(void *)a1, v2, (uint64_t)v5, *(void *)(a1 + 24), v6);
  sub_251A4DAE8(v7, v8, (uint64_t)v10, v9, v11);
  char v12 = ((v3 & 1) == 0) ^ v7;
  return v12 & 1;
}

uint64_t _s13HomeDataModel19MatterStateSnapshotV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v5 = a2[2];
  uint64_t v4 = a2[3];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (!v6 && (sub_251F36B10() & 1) == 0 || (sub_251AFAC94(v2, v5) & 1) == 0) {
    return 0;
  }

  return sub_251AFB270(v3, v4);
}

unint64_t sub_251A4D16C()
{
  unint64_t result = qword_269B9CDE8;
  if (!qword_269B9CDE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9CDE8);
  }
  return result;
}

unint64_t sub_251A4D1C0()
{
  unint64_t result = qword_269B9CDF8;
  if (!qword_269B9CDF8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B9CDF0);
    sub_251A4E138(&qword_269B9CE00, (void (*)(uint64_t))type metadata accessor for StaticMatterDevice);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9CDF8);
  }
  return result;
}

unint64_t sub_251A4D26C()
{
  unint64_t result = qword_269B9CE10;
  if (!qword_269B9CE10)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B9CE08);
    sub_251A4EAE0(&qword_26B21E348, MEMORY[0x270FA9628]);
    sub_251A4E138(&qword_269B9CE18, (void (*)(uint64_t))type metadata accessor for StaticEndpoint);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9CE10);
  }
  return result;
}

unint64_t sub_251A4D330()
{
  unint64_t result = qword_269B9CE28;
  if (!qword_269B9CE28)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B9CDF0);
    sub_251A4E138(&qword_269B9CE30, (void (*)(uint64_t))type metadata accessor for StaticMatterDevice);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9CE28);
  }
  return result;
}

unint64_t sub_251A4D3DC()
{
  unint64_t result = qword_269B9CE38;
  if (!qword_269B9CE38)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B9CE08);
    sub_251A4EAE0(&qword_269B9CC80, MEMORY[0x270FA9628]);
    sub_251A4E138(&qword_269B9CE40, (void (*)(uint64_t))type metadata accessor for StaticEndpoint);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9CE38);
  }
  return result;
}

void sub_251A4D4A0(id a1, id a2, char a3)
{
  if (!a3 || (a1 = a2, a3 == 2) || a3 == 1) {
}
  }

id sub_251A4D4C4(id result, id a2, char a3)
{
  if (!a3) {
    return result;
  }
  unint64_t result = a2;
  if (a3 == 2 || a3 == 1) {
    return result;
  }
  return result;
}

uint64_t _s13HomeDataModel19MatterStateSnapshotV17allowSnapshotting9accessorySbSo11HMAccessoryC_tFZ_0(void *a1)
{
  v37[3] = (uint64_t)&type metadata for HomeKitFeatures;
  v37[4] = sub_251A4DA94();
  LOBYTE(v37[0]) = 4;
  char v2 = sub_251F34F60();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v37);
  if ((v2 & 1) == 0)
  {
    if (qword_269B9C4C0 != -1) {
      swift_once();
    }
    if (byte_269BA38B2 != 1) {
      goto LABEL_10;
    }
  }
  if (qword_269B9C4B0 != -1) {
    swift_once();
  }
  if (byte_269BA38B0) {
    goto LABEL_8;
  }
  if ((objc_msgSend(a1, sel_isBridged) & 1) == 0)
  {
    id v4 = objc_msgSend(a1, sel_category);
    id v5 = objc_msgSend(v4, sel_categoryType);

    uint64_t v6 = sub_251F356F0();
    uint64_t v8 = v7;

    if (v6 == sub_251F356F0() && v8 == v9) {
      goto LABEL_13;
    }
    char v28 = sub_251F36B10();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v28)
    {
LABEL_8:
      int v3 = 1;
      goto LABEL_15;
    }
    id v29 = objc_msgSend(a1, sel_category);
    id v30 = objc_msgSend(v29, sel_categoryType);

    uint64_t v31 = sub_251F356F0();
    uint64_t v33 = v32;

    if (v31 == sub_251F356F0() && v33 == v34) {
LABEL_13:
    }
      int v3 = 1;
    else {
      int v3 = sub_251F36B10();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_10:
    int v3 = 0;
  }
LABEL_15:
  id v10 = objc_msgSend(a1, sel_category);
  id v11 = objc_msgSend(v10, sel_categoryType);

  uint64_t v12 = sub_251F356F0();
  uint64_t v14 = v13;

  if (v12 == sub_251F356F0() && v14 == v15) {
    int v17 = 1;
  }
  else {
    int v17 = sub_251F36B10();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_26B21ECD0 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_251F350A0();
  __swift_project_value_buffer(v18, (uint64_t)qword_26B21ECB8);
  id v19 = a1;
  uint64_t v20 = sub_251F35080();
  os_log_type_t v21 = sub_251F35FA0();
  if (os_log_type_enabled(v20, v21))
  {
    os_log_type_t type = v21;
    uint64_t v22 = swift_slowAlloc();
    uint64_t v23 = (void *)swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    v37[0] = v36;
    *(_DWORD *)uint64_t v22 = 136316162;
    sub_251A00E84(0xD00000000000001DLL, 0x8000000251F68310, v37);
    int v24 = v3;
    sub_251F361D0();
    *(_WORD *)(v22 + 12) = 1024;
    sub_251F361D0();
    *(_WORD *)(v22 + 18) = 1024;
    sub_251F361D0();
    *(_WORD *)(v22 + 24) = 2112;
    id v25 = objc_msgSend(v19, sel_category);
    sub_251F361D0();
    *uint64_t v23 = v25;
    *(_WORD *)(v22 + 34) = 2112;
    id v26 = v19;
    int v3 = v24;
    sub_251F361D0();
    v23[1] = v19;

    _os_log_impl(&dword_2519F3000, v20, type, "%s: allowRVC:%{BOOL}d isLock:%{BOOL}d accessory category:%@ accessory:%@", (uint8_t *)v22, 0x2Cu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v23, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v36, -1, -1);
    MEMORY[0x2533AC760](v22, -1, -1);
  }
  else
  {
  }
  return (v3 | v17) & 1;
}

uint64_t sub_251A4DA50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 < 0)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_251A4DA94()
{
  unint64_t result = qword_26B21F268;
  if (!qword_26B21F268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B21F268);
  }
  return result;
}

uint64_t sub_251A4DAE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 < 0)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_251A4DB2C(uint64_t a1)
{
  return *(_DWORD *)(a1 + 248) >> 29;
}

uint64_t sub_251A4DB38(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  uint64_t v3 = *(void *)(a1 + 56);
  uint64_t v4 = *(void *)(a1 + 64);
  uint64_t v13 = *(void *)(a1 + 128);
  uint64_t v14 = *(void *)(a1 + 120);
  uint64_t v11 = *(void *)(a1 + 144);
  uint64_t v12 = *(void *)(a1 + 136);
  uint64_t v10 = *(void *)(a1 + 152);
  uint64_t v8 = *(void *)(a1 + 168);
  uint64_t v9 = *(void *)(a1 + 160);
  uint64_t v7 = *(void *)(a1 + 176);
  long long v6 = *(_OWORD *)(a1 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_251A1AC64(v2, v3, v4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_251A1ACA8(v14, v13, v12, v11, v10, v9, v8, v7, v6, *((uint64_t *)&v6 + 1));
  return a1;
}

void sub_251A4DC54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,unsigned int a32)
{
  if (a32 >> 29 == 2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_251A4DE90(a7, a8, a9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_251A4DED4(a16, a17, a18, a19, a20, a21, a22, a23, a24, a25);
  }
  else if (!(a32 >> 29))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_251A4DE90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_251A4DED4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_251A4DF84(a7, a8, a9, a10);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_251A4DF84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4 != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_251A4DF98(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C6C6F72746E6F63 && a2 == 0xEC00000044497265;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6544636974617473 && a2 == 0xED00007365636976 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x8000000251F682F0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_251A4E128(uint64_t result)
{
  *(_DWORD *)(result + 248) &= 0x1FFFFFFFu;
  return result;
}

uint64_t sub_251A4E138(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_251A4E184()
{
  unint64_t result = qword_269B9CE80;
  if (!qword_269B9CE80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9CE80);
  }
  return result;
}

unint64_t sub_251A4E1DC()
{
  unint64_t result = qword_269B9CE88;
  if (!qword_269B9CE88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9CE88);
  }
  return result;
}

uint64_t destroy for MatterStateSnapshot()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for MatterStateSnapshot(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for MatterStateSnapshot(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t assignWithTake for MatterStateSnapshot(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MatterStateSnapshot(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MatterStateSnapshot(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MatterStateSnapshot()
{
  return &type metadata for MatterStateSnapshot;
}

void destroy for MatterStateSnapshot.UpdateType(uint64_t a1)
{
}

uint64_t _s13HomeDataModel19MatterStateSnapshotV10UpdateTypeOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_251A4D4C4(*(id *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for MatterStateSnapshot.UpdateType(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_251A4D4C4(*(id *)a2, v4, v5);
  char v6 = *(void **)a1;
  uint64_t v7 = *(void **)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_251A4D4A0(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for MatterStateSnapshot.UpdateType(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void **)a1;
  char v5 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_251A4D4A0(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for MatterStateSnapshot.UpdateType(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MatterStateSnapshot.UpdateType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 253;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_251A4E5E0(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 2u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 3);
  }
}

uint64_t sub_251A4E5F8(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(void *)__n128 result = a2 - 3;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 3;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for MatterStateSnapshot.UpdateType()
{
  return &type metadata for MatterStateSnapshot.UpdateType;
}

uint64_t destroy for MatterStateSnapshot.CommandPayload(uint64_t a1)
{
  return sub_251A4DAE8(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
}

uint64_t initializeWithCopy for MatterStateSnapshot.CommandPayload(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_251A4DA50(*(void *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for MatterStateSnapshot.CommandPayload(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_251A4DA50(*(void *)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  char v12 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v7;
  sub_251A4DAE8(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for MatterStateSnapshot.CommandPayload(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  char v9 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v3;
  sub_251A4DAE8(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for MatterStateSnapshot.CommandPayload(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 33)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *(void *)a1 >> 3;
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for MatterStateSnapshot.CommandPayload(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = 8 * -a2;
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = 0;
      *(void *)(result + 24) = 0;
      *(unsigned char *)(result + 32) = 0;
      return result;
    }
    *(unsigned char *)(result + 33) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_251A4E7F8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32) >> 7;
}

uint64_t sub_251A4E804(uint64_t result)
{
  *(unsigned char *)(result + 32) &= ~0x80u;
  return result;
}

uint64_t sub_251A4E814(uint64_t result, char a2)
{
  char v2 = *(unsigned char *)(result + 32) & 1 | (a2 << 7);
  *(void *)result &= 7uLL;
  *(unsigned char *)(result + 32) = v2;
  return result;
}

ValueMetadata *type metadata accessor for MatterStateSnapshot.CommandPayload()
{
  return &type metadata for MatterStateSnapshot.CommandPayload;
}

uint64_t getEnumTagSinglePayload for MatterStateSnapshot.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for MatterStateSnapshot.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251A4E9A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MatterStateSnapshot.CodingKeys()
{
  return &type metadata for MatterStateSnapshot.CodingKeys;
}

unint64_t sub_251A4E9DC()
{
  unint64_t result = qword_269B9CE90;
  if (!qword_269B9CE90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9CE90);
  }
  return result;
}

unint64_t sub_251A4EA34()
{
  unint64_t result = qword_269B9CE98;
  if (!qword_269B9CE98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9CE98);
  }
  return result;
}

unint64_t sub_251A4EA8C()
{
  unint64_t result = qword_269B9CEA0;
  if (!qword_269B9CEA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9CEA0);
  }
  return result;
}

uint64_t sub_251A4EAE0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_251A4EB28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticEndpoint();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_251A4EB8C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_251A4EBDC(uint64_t a1, char a2)
{
  if (a2 == 3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_251A4EBF0(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _DWORD))
{
  long long v4 = *(_OWORD *)(a1 + 208);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    v4,
    *((void *)&v4 + 1),
    *(void *)(a1 + 224),
    *(void *)(a1 + 232),
    *(void *)(a1 + 240),
    *(_DWORD *)(a1 + 248));
  return a1;
}

uint64_t sub_251A4EC7C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_251A4ECE4(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_251A4ECF0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_251A4ED54(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_251A4EDBC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t _s13HomeDataModel17ValueAccumulatorsV12doubleValues4fromSaySdGShyAA43StaticAccessoryServiceCharacteristicTripletVG_tFZ_0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  unsigned int v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  int v8 = (char *)&v26 - v7;
  uint64_t v9 = *(void *)(a1 + 56);
  uint64_t v26 = a1 + 56;
  uint64_t v10 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & v9;
  int64_t v27 = (unint64_t)(v10 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v14 = 0;
  uint64_t v15 = (void *)MEMORY[0x263F8EE78];
  while (1)
  {
    if (v12)
    {
      unint64_t v16 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_26;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v18 >= v27) {
      goto LABEL_31;
    }
    unint64_t v19 = *(void *)(v26 + 8 * v18);
    ++v14;
    if (!v19)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v27) {
        goto LABEL_31;
      }
      unint64_t v19 = *(void *)(v26 + 8 * v14);
      if (!v19)
      {
        int64_t v14 = v18 + 2;
        if (v18 + 2 >= v27) {
          goto LABEL_31;
        }
        unint64_t v19 = *(void *)(v26 + 8 * v14);
        if (!v19)
        {
          int64_t v14 = v18 + 3;
          if (v18 + 3 >= v27) {
            goto LABEL_31;
          }
          unint64_t v19 = *(void *)(v26 + 8 * v14);
          if (!v19)
          {
            int64_t v14 = v18 + 4;
            if (v18 + 4 >= v27) {
              goto LABEL_31;
            }
            unint64_t v19 = *(void *)(v26 + 8 * v14);
            if (!v19) {
              break;
            }
          }
        }
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_26:
    sub_251A4F4BC(*(void *)(a1 + 48) + *(void *)(v3 + 72) * v17, (uint64_t)v8);
    sub_251A4F520((uint64_t)v8, (uint64_t)v6);
    os_log_type_t v21 = &v6[*(int *)(v2 + 24)];
    uint64_t v22 = &v21[*(int *)(type metadata accessor for StaticCharacteristic() + 24)];
    if (v22[16] == 7)
    {
      uint64_t v23 = *(void *)v22;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v15 = sub_251F0F9F8(0, v15[2] + 1, 1, v15);
      }
      unint64_t v25 = v15[2];
      unint64_t v24 = v15[3];
      if (v25 >= v24 >> 1) {
        uint64_t v15 = sub_251F0F9F8((void *)(v24 > 1), v25 + 1, 1, v15);
      }
      _OWORD v15[2] = v25 + 1;
      v15[v25 + 4] = v23;
    }
    uint64_t result = sub_251A4F584((uint64_t)v6);
  }
  int64_t v20 = v18 + 5;
  if (v20 >= v27)
  {
LABEL_31:
    swift_release();
    return (uint64_t)v15;
  }
  unint64_t v19 = *(void *)(v26 + 8 * v20);
  if (v19)
  {
    int64_t v14 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v14 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v14 >= v27) {
      goto LABEL_31;
    }
    unint64_t v19 = *(void *)(v26 + 8 * v14);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

void *_s13HomeDataModel17ValueAccumulatorsV9intValues4fromSaySiGShyAA43StaticAccessoryServiceCharacteristicTripletVG_tFZ_0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
  uint64_t v28 = *(void *)(v2 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v25 - v6;
  uint64_t v8 = *(void *)(a1 + 56);
  uint64_t v26 = a1 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v8;
  int64_t v27 = (unint64_t)(v9 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v12 = 0;
  uint64_t v13 = (void *)MEMORY[0x263F8EE78];
  while (1)
  {
    if (v11)
    {
      unint64_t v14 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_26;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v16 >= v27) {
      goto LABEL_36;
    }
    unint64_t v17 = *(void *)(v26 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v27) {
        goto LABEL_36;
      }
      unint64_t v17 = *(void *)(v26 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v27) {
          goto LABEL_36;
        }
        unint64_t v17 = *(void *)(v26 + 8 * v12);
        if (!v17)
        {
          int64_t v12 = v16 + 3;
          if (v16 + 3 >= v27) {
            goto LABEL_36;
          }
          unint64_t v17 = *(void *)(v26 + 8 * v12);
          if (!v17)
          {
            int64_t v12 = v16 + 4;
            if (v16 + 4 >= v27) {
              goto LABEL_36;
            }
            unint64_t v17 = *(void *)(v26 + 8 * v12);
            if (!v17) {
              break;
            }
          }
        }
      }
    }
LABEL_25:
    unint64_t v11 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_26:
    sub_251A4F4BC(*(void *)(a1 + 48) + *(void *)(v28 + 72) * v15, (uint64_t)v7);
    sub_251A4F520((uint64_t)v7, (uint64_t)v5);
    unint64_t v19 = &v5[*(int *)(v2 + 24)];
    int64_t v20 = &v19[*(int *)(type metadata accessor for StaticCharacteristic() + 24)];
    uint64_t v21 = *(void *)v20;
    switch(v20[16])
    {
      case 1:
        uint64_t v21 = *(void *)v20;
        goto LABEL_32;
      case 2:
        uint64_t v21 = (unsigned __int16)*(void *)v20;
        goto LABEL_32;
      case 3:
        uint64_t v21 = *(void *)v20;
        goto LABEL_32;
      case 4:
        if ((v21 & 0x8000000000000000) == 0) {
          goto LABEL_32;
        }
        goto LABEL_38;
      case 5:
      case 6:
        uint64_t v21 = (int)v21;
LABEL_32:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v13 = sub_251F0FB08(0, v13[2] + 1, 1, v13);
        }
        unint64_t v23 = v13[2];
        unint64_t v22 = v13[3];
        if (v23 >= v22 >> 1) {
          uint64_t v13 = sub_251F0FB08((void *)(v22 > 1), v23 + 1, 1, v13);
        }
        v13[2] = v23 + 1;
        v13[v23 + 4] = v21;
        break;
      default:
        break;
    }
    sub_251A4F584((uint64_t)v5);
  }
  int64_t v18 = v16 + 5;
  if (v18 < v27)
  {
    unint64_t v17 = *(void *)(v26 + 8 * v18);
    if (!v17)
    {
      while (1)
      {
        int64_t v12 = v18 + 1;
        if (__OFADD__(v18, 1)) {
          break;
        }
        if (v12 >= v27) {
          goto LABEL_36;
        }
        unint64_t v17 = *(void *)(v26 + 8 * v12);
        ++v18;
        if (v17) {
          goto LABEL_25;
        }
      }
LABEL_39:
      __break(1u);
      JUMPOUT(0x251A4F494);
    }
    int64_t v12 = v18;
    goto LABEL_25;
  }
LABEL_36:
  swift_release();
  return v13;
}

ValueMetadata *type metadata accessor for ValueAccumulators()
{
  return &type metadata for ValueAccumulators;
}

uint64_t sub_251A4F4BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_251A4F520(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_251A4F584(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_251A4F5E0(unint64_t a1)
{
  unint64_t v2 = v1;
  unint64_t v3 = a1;
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v5 = MEMORY[0x263F8EE78];
    if (!v4) {
      return v5;
    }
    uint64_t v20 = MEMORY[0x263F8EE78];
    uint64_t result = sub_251A3E084(0, v4 & ~(v4 >> 63), 0);
    if (v4 < 0) {
      break;
    }
    v16[1] = v2;
    uint64_t v5 = v20;
    unint64_t v18 = v3 & 0xC000000000000001;
    uint64_t v7 = sub_251F34DA0();
    uint64_t v8 = 0;
    uint64_t v17 = v7;
    uint64_t v9 = *(void *)(v7 - 8);
    uint64_t v10 = *(void *)(v9 + 64);
    void v16[2] = v9 + 32;
    unint64_t v19 = v3;
    while (v4 != v8)
    {
      MEMORY[0x270FA5388](v7);
      if (v18) {
        id v11 = (id)MEMORY[0x2533AB3A0](v8, v3);
      }
      else {
        id v11 = *(id *)(v3 + 8 * v8 + 32);
      }
      int64_t v12 = v11;
      id v13 = objc_msgSend(v11, sel_uniqueIdentifier);
      sub_251F34D80();

      uint64_t v20 = v5;
      unint64_t v15 = *(void *)(v5 + 16);
      unint64_t v14 = *(void *)(v5 + 24);
      unint64_t v2 = v15 + 1;
      if (v15 >= v14 >> 1)
      {
        sub_251A3E084(v14 > 1, v15 + 1, 1);
        uint64_t v5 = v20;
      }
      ++v8;
      *(void *)(v5 + 16) = v2;
      uint64_t v7 = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v9 + 32))(v5+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v15, (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v17);
      unint64_t v3 = v19;
      if (v4 == v8) {
        return v5;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_251F366C0();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t Action.NaturalLightAction.lightProfileID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_251F34DA0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t Action.NaturalLightAction.accessoryID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Action.NaturalLightAction(0) + 20);
  uint64_t v4 = sub_251F34DA0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for Action.NaturalLightAction(uint64_t a1)
{
  return sub_251A1C6FC(a1, (uint64_t *)&unk_269B9D100);
}

uint64_t Action.NaturalLightAction.associatedServiceIDs.getter()
{
  type metadata accessor for Action.NaturalLightAction(0);

  return swift_bridgeObjectRetain();
}

uint64_t Action.NaturalLightAction.naturalLightingEnabled.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Action.NaturalLightAction(0) + 28));
}

uint64_t Action.NaturalLightAction.init(lightProfileID:accessoryID:associatedServiceIDs:naturalLightingEnabled:accessoryName:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v12 = sub_251F34DA0();
  uint64_t v13 = *(void *)(v12 - 8);
  unint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16);
  v14(a7, a1, v12);
  unint64_t v15 = (int *)type metadata accessor for Action.NaturalLightAction(0);
  v14(a7 + v15[5], a2, v12);
  *(void *)(a7 + v15[6]) = a3;
  *(unsigned char *)(a7 + v15[7]) = a4;
  if (qword_269B9C338 != -1) {
    swift_once();
  }
  char v16 = byte_269B9FF88;
  uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
  v17(a2, v12);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v17)(a1, v12);
  if (v16)
  {
    uint64_t v20 = a5;
    uint64_t v19 = a6;
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v20 = 0;
    uint64_t v19 = 0;
  }
  uint64_t v21 = (void *)(a7 + v15[8]);
  *uint64_t v21 = v20;
  v21[1] = v19;
  return result;
}

void Action.NaturalLightAction.init(action:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for Action.NaturalLightAction(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_msgSend(a1, sel_lightProfile);
  if (!v8) {
    goto LABEL_9;
  }
  uint64_t v9 = v8;
  id v10 = objc_msgSend(v8, sel_accessory);
  if (!v10)
  {

LABEL_9:
    type metadata accessor for Action.NaturalLightAction.Error(0);
    sub_251A570E0(&qword_269B9D0F0, (void (*)(uint64_t))type metadata accessor for Action.NaturalLightAction.Error);
    swift_allocError();
    *uint64_t v17 = a1;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    return;
  }
  id v11 = v10;
  id v12 = objc_msgSend(v9, sel_services);
  sub_251A1A568(0, (unint64_t *)&qword_26B21F180);
  unint64_t v13 = sub_251F35AC0();

  uint64_t v14 = sub_251A4F5E0(v13);
  uint64_t v41 = v2;
  swift_bridgeObjectRelease();
  uint64_t v40 = sub_251EE04F8(v14);
  swift_bridgeObjectRelease();
  unsigned int v39 = objc_msgSend(a1, sel_isNaturalLightingEnabled);
  if (qword_269B9C338 != -1) {
    swift_once();
  }
  uint64_t v42 = (int *)v5;
  uint64_t v44 = a2;
  uint64_t v45 = a1;
  if (byte_269B9FF88 == 1)
  {
    id v15 = objc_msgSend(v11, sel_name);
    uint64_t v35 = sub_251F356F0();
    uint64_t v38 = v16;
  }
  else
  {
    uint64_t v35 = 0;
    uint64_t v38 = 0;
  }
  unint64_t v18 = v11;
  id v19 = objc_msgSend(v9, sel_uniqueIdentifier);
  uint64_t v20 = sub_251F34DA0();
  uint64_t v37 = &v34;
  uint64_t v21 = *(void **)(v20 - 8);
  uint64_t v22 = v21[8];
  MEMORY[0x270FA5388](v20);
  sub_251F34D80();

  id v43 = v18;
  id v23 = objc_msgSend(v18, sel_uniqueIdentifier);
  uint64_t v36 = &v34;
  MEMORY[0x270FA5388](v23);
  unint64_t v24 = (char *)&v34 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34D80();

  uint64_t v25 = (void (*)(char *, char *, uint64_t))v21[2];
  v25(v7, v24, v20);
  uint64_t v26 = v42;
  v25(&v7[v42[5]], v24, v20);
  *(void *)&v7[v26[6]] = v40;
  v7[v26[7]] = v39;
  char v27 = byte_269B9FF88;
  uint64_t v28 = (void (*)(char *, uint64_t))v21[1];
  v28(v24, v20);
  v28(v24, v20);
  if (v27)
  {
    uint64_t v29 = v44;
    id v30 = v45;
    uint64_t v31 = v38;
    uint64_t v32 = v35;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v32 = 0;
    uint64_t v31 = 0;
    uint64_t v29 = v44;
    id v30 = v45;
  }
  uint64_t v33 = &v7[v26[8]];
  *(void *)uint64_t v33 = v32;
  *((void *)v33 + 1) = v31;
  sub_251A572C0((uint64_t)v7, v29, type metadata accessor for Action.NaturalLightAction);
}

unint64_t Action.NaturalLightAction.Error.description.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Action.NaturalLightAction.Error(0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (void **)((char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_251A57128(v1, (uint64_t)v4, type metadata accessor for Action.NaturalLightAction.Error);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_251F34DA0();
    uint64_t v6 = *(void *)(v5 - 8);
    MEMORY[0x270FA5388](v5);
    id v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, void **, uint64_t))(v6 + 32))(v8, v4, v5);
    unint64_t v17 = 0;
    unint64_t v18 = 0xE000000000000000;
    sub_251F36400();
    swift_bridgeObjectRelease();
    unint64_t v17 = 0xD000000000000024;
    unint64_t v18 = 0x8000000251F68330;
    sub_251A1A8EC((unint64_t *)&qword_26B21E6B0);
    sub_251F36AB0();
    sub_251F35800();
    swift_bridgeObjectRelease();
    unint64_t v9 = v17;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    id v10 = *v4;
    unint64_t v17 = 0;
    unint64_t v18 = 0xE000000000000000;
    sub_251F36400();
    id v11 = objc_msgSend(v10, sel_description);
    uint64_t v12 = sub_251F356F0();
    unint64_t v14 = v13;
    swift_bridgeObjectRelease();

    unint64_t v17 = v12;
    unint64_t v18 = v14;
    sub_251F35800();
    id v15 = objc_msgSend(v10, sel_description);
    sub_251F356F0();

    sub_251F35800();
    swift_bridgeObjectRelease();
    return v17;
  }
  return v9;
}

uint64_t Action.NaturalLightAction.hash(into:)(long long *a1)
{
  uint64_t v2 = v1;
  sub_251F34DA0();
  sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
  sub_251F35610();
  uint64_t v4 = type metadata accessor for Action.NaturalLightAction(0);
  sub_251F35610();
  uint64_t v5 = *(void *)(v1 + *(int *)(v4 + 24));
  swift_bridgeObjectRetain();
  sub_251A54708(a1, v5);
  swift_bridgeObjectRelease();
  sub_251F36CC0();
  if (!*(void *)(v2 + *(int *)(v4 + 32) + 8)) {
    return sub_251F36CC0();
  }
  sub_251F36CC0();
  swift_bridgeObjectRetain();
  sub_251F357B0();

  return swift_bridgeObjectRelease();
}

uint64_t Action.NaturalLightAction.hashValue.getter()
{
  uint64_t v1 = v0;
  sub_251F36CA0();
  sub_251F34DA0();
  sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
  sub_251F35610();
  uint64_t v2 = type metadata accessor for Action.NaturalLightAction(0);
  sub_251F35610();
  uint64_t v3 = *(void *)(v0 + *(int *)(v2 + 24));
  swift_bridgeObjectRetain();
  sub_251A54708(v5, v3);
  swift_bridgeObjectRelease();
  sub_251F36CC0();
  if (*(void *)(v1 + *(int *)(v2 + 32) + 8))
  {
    sub_251F36CC0();
    swift_bridgeObjectRetain();
    sub_251F357B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_251F36CC0();
  }
  return sub_251F36D00();
}

uint64_t sub_251A5047C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  sub_251F36CA0();
  sub_251F34DA0();
  sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
  sub_251F35610();
  sub_251F35610();
  uint64_t v5 = *(void *)(v2 + *(int *)(a2 + 24));
  swift_bridgeObjectRetain();
  sub_251A54708(v7, v5);
  swift_bridgeObjectRelease();
  sub_251F36CC0();
  if (*(void *)(v4 + *(int *)(a2 + 32) + 8))
  {
    sub_251F36CC0();
    swift_bridgeObjectRetain();
    sub_251F357B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_251F36CC0();
  }
  return sub_251F36D00();
}

uint64_t Action.NaturalLightAction.staticLightProfile.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for StateSnapshot(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_26B21FF50;
  swift_getKeyPath();
  v8[1] = v5;
  sub_251A570E0((unint64_t *)&qword_26B21F280, (void (*)(uint64_t))type metadata accessor for DataModel);
  sub_251F34F10();
  swift_release();
  uint64_t v6 = v5 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentStateSnapshot;
  swift_beginAccess();
  sub_251A57128(v6, (uint64_t)v4, type metadata accessor for StateSnapshot);
  Action.NaturalLightAction.staticLightProfile(in:)((uint64_t)v4, a1);
  return sub_251A57190((uint64_t)v4, type metadata accessor for StateSnapshot);
}

void Action.NaturalLightAction.staticLightProfile(in:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v111 = a2;
  uint64_t v5 = type metadata accessor for StaticLightProfile();
  uint64_t v114 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v104 = (uint64_t)&v101 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for StaticService();
  uint64_t v117 = *(void *)(v7 - 8);
  uint64_t v118 = v7;
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v101 = (uint64_t)&v101 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v102 = (uint64_t)&v101 - v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v116 = (uint64_t)&v101 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v119 = (uint64_t)&v101 - v14;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C9A8);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v105 = (char *)&v101 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v109 = (char *)&v101 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v110 = (char *)&v101 - v21;
  MEMORY[0x270FA5388](v20);
  uint64_t v120 = (uint64_t)&v101 - v22;
  uint64_t v23 = type metadata accessor for Action.NaturalLightAction(0);
  uint64_t v24 = MEMORY[0x270FA5388](v23);
  uint64_t v108 = (uint64_t)&v101 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v106 = (uint64_t)&v101 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  id v30 = (char *)&v101 - v29;
  MEMORY[0x270FA5388](v28);
  uint64_t v32 = (char *)&v101 - v31;
  uint64_t v122 = type metadata accessor for StateSnapshot(0);
  uint64_t v33 = MEMORY[0x270FA5388](v122);
  uint64_t v35 = (char *)&v101 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v33);
  uint64_t v103 = v23;
  uint64_t v36 = *(void *)(v3 + *(int *)(v23 + 24));
  uint64_t v113 = (uint64_t)&v101 - v37;
  sub_251A57128(a1, (uint64_t)&v101 - v37, type metadata accessor for StateSnapshot);
  unint64_t v112 = v32;
  sub_251A57128(v3, (uint64_t)v32, type metadata accessor for Action.NaturalLightAction);
  uint64_t v124 = v35;
  sub_251A57128(a1, (uint64_t)v35, type metadata accessor for StateSnapshot);
  uint64_t v107 = v3;
  char v115 = v30;
  sub_251A57128(v3, (uint64_t)v30, type metadata accessor for Action.NaturalLightAction);
  int64_t v38 = sub_251A53EBC(v36);
  uint64_t v40 = v39;
  LOBYTE(v23) = v41;
  swift_bridgeObjectRetain();
  if ((v23 & 1) == 0)
  {
    uint64_t v121 = v36 + 56;
    __int16 v125 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v114 + 56);
    uint64_t v126 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v114 + 48);
    uint64_t v123 = v36;
    while (1)
    {
      LODWORD(v35) = *(_DWORD *)(v36 + 36);
      if (v35 != v40) {
        break;
      }
      uint64_t v42 = 1 << *(unsigned char *)(v36 + 32);
      if (v38 == v42) {
        goto LABEL_22;
      }
      uint64_t v43 = sub_251F34DA0();
      uint64_t v44 = *(void *)(v43 - 8);
      MEMORY[0x270FA5388](v43);
      uint64_t v46 = (char *)&v101 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
      if (v38 < 0 || v38 >= v42) {
        goto LABEL_44;
      }
      if (((*(void *)(v121 + (((unint64_t)v38 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v38) & 1) == 0) {
        goto LABEL_45;
      }
      uint64_t v127 = v40;
      uint64_t v40 = v5;
      (*(void (**)(char *, int64_t, uint64_t))(v44 + 16))(v46, *(void *)(v36 + 48) + *(void *)(v44 + 72) * v38, v43);
      uint64_t v47 = *(void *)&v124[*(int *)(v122 + 60)];
      uint64_t v48 = *(void *)(v47 + 16);
      swift_bridgeObjectRetain();
      if (v48 && (unint64_t v49 = sub_2519FE584((uint64_t)v46), (v50 & 1) != 0))
      {
        uint64_t v51 = *(void *)(v47 + 56);
        uint64_t v52 = v116;
        sub_251A57128(v51 + *(void *)(v117 + 72) * v49, v116, (uint64_t (*)(void))type metadata accessor for StaticService);
        uint64_t v53 = v52;
        uint64_t v54 = v119;
        sub_251A572C0(v53, v119, (uint64_t (*)(void))type metadata accessor for StaticService);
        uint64_t v55 = *(void *)(v54 + *(int *)(v118 + 116));
        if (*(void *)(v55 + 16))
        {
          swift_bridgeObjectRetain();
          unint64_t v56 = sub_2519FE584((uint64_t)v115);
          uint64_t v5 = v40;
          if (v57)
          {
            uint64_t v58 = v114;
            uint64_t v59 = v120;
            sub_251A57128(*(void *)(v55 + 56) + *(void *)(v114 + 72) * v56, v120, (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v58 + 56))(v59, 0, 1, v5);
            uint64_t v60 = v59;
          }
          else
          {
            uint64_t v61 = v120;
            (*v125)(v120, 1, 1, v40);
            uint64_t v60 = v61;
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v60 = v120;
          uint64_t v5 = v40;
          (*v125)(v120, 1, 1, v40);
        }
        uint64_t v36 = v123;
        LODWORD(v40) = v127;
        sub_251A57190(v119, (uint64_t (*)(void))type metadata accessor for StaticService);
      }
      else
      {
        uint64_t v60 = v120;
        uint64_t v5 = v40;
        (*v125)(v120, 1, 1, v40);
        uint64_t v36 = v123;
        LODWORD(v40) = v127;
      }
      (*(void (**)(char *, uint64_t))(v44 + 8))(v46, v43);
      swift_bridgeObjectRelease();
      int v62 = (*v126)(v60, 1, v5);
      uint64_t v63 = v60;
      int v64 = v62;
      sub_251A1B064(v63, &qword_269B9C9A8);
      if (v64 != 1) {
        goto LABEL_21;
      }
      int64_t v38 = sub_251A53F60(v38, v40, 0, v36);
      uint64_t v40 = v65;
      if (v66) {
        goto LABEL_20;
      }
    }
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
LABEL_20:
  sub_251A57190((uint64_t)v124, type metadata accessor for StateSnapshot);
  sub_251A57190((uint64_t)v115, type metadata accessor for Action.NaturalLightAction);
  __break(1u);
LABEL_21:
  if (*(_DWORD *)(v36 + 36) != v35)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
LABEL_22:
  if (v38 == 1 << *(unsigned char *)(v36 + 32))
  {
    sub_251A57190(v113, type metadata accessor for StateSnapshot);
    sub_251A57190((uint64_t)v112, type metadata accessor for Action.NaturalLightAction);
    uint64_t v67 = v111;
    (*v125)(v111, 1, 1, v5);
  }
  else
  {
    uint64_t v68 = sub_251F34DA0();
    uint64_t v69 = *(void *)(v68 - 8);
    MEMORY[0x270FA5388](v68);
    uint64_t v71 = (char *)&v101 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_251A54338(v38, v40, 0, v36, (uint64_t)v71);
    uint64_t v72 = *(void *)(v113 + *(int *)(v122 + 60));
    if (*(void *)(v72 + 16) && (unint64_t v73 = sub_2519FE584((uint64_t)v71), (v74 & 1) != 0))
    {
      uint64_t v75 = v101;
      sub_251A57128(*(void *)(v72 + 56) + *(void *)(v117 + 72) * v73, v101, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v76 = v102;
      sub_251A572C0(v75, v102, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v77 = *(void *)(v76 + *(int *)(v118 + 116));
      uint64_t v78 = (uint64_t)v109;
      uint64_t v79 = (uint64_t)v110;
      if (*(void *)(v77 + 16))
      {
        swift_bridgeObjectRetain();
        unint64_t v80 = sub_2519FE584((uint64_t)v112);
        if (v81)
        {
          uint64_t v82 = v114;
          sub_251A57128(*(void *)(v77 + 56) + *(void *)(v114 + 72) * v80, v78, (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
          long long v83 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v82 + 56);
          v83(v78, 0, 1, v5);
        }
        else
        {
          long long v83 = *v125;
          (*v125)(v78, 1, 1, v5);
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        long long v83 = *v125;
        (*v125)((uint64_t)v109, 1, 1, v5);
      }
      uint64_t v84 = (uint64_t)v105;
      sub_251A57190(v76, (uint64_t (*)(void))type metadata accessor for StaticService);
    }
    else
    {
      long long v83 = *v125;
      uint64_t v78 = (uint64_t)v109;
      (*v125)((uint64_t)v109, 1, 1, v5);
      uint64_t v84 = (uint64_t)v105;
      uint64_t v79 = (uint64_t)v110;
    }
    sub_251A57190(v113, type metadata accessor for StateSnapshot);
    sub_251A57190((uint64_t)v112, type metadata accessor for Action.NaturalLightAction);
    (*(void (**)(char *, uint64_t))(v69 + 8))(v71, v68);
    sub_251A571F0(v78, v79);
    sub_251A57258(v79, v84);
    if ((*v126)(v84, 1, v5) == 1)
    {
      sub_251A57190((uint64_t)v124, type metadata accessor for StateSnapshot);
      sub_251A57190((uint64_t)v115, type metadata accessor for Action.NaturalLightAction);
      __break(1u);
      return;
    }
    uint64_t v85 = v84;
    uint64_t v86 = v104;
    sub_251A572C0(v85, v104, (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
    sub_251A1B064(v79, &qword_269B9C9A8);
    uint64_t v87 = v86;
    uint64_t v67 = v111;
    sub_251A572C0(v87, v111, (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
    v83(v67, 0, 1, v5);
  }
  swift_bridgeObjectRelease();
  sub_251A57190((uint64_t)v124, type metadata accessor for StateSnapshot);
  sub_251A57190((uint64_t)v115, type metadata accessor for Action.NaturalLightAction);
  if ((*v126)(v67, 1, v5) == 1)
  {
    if (qword_26B21F2C0 == -1)
    {
LABEL_38:
      uint64_t v88 = sub_251F350A0();
      __swift_project_value_buffer(v88, (uint64_t)qword_26B21F290);
      uint64_t v89 = v107;
      uint64_t v90 = v106;
      sub_251A57128(v107, v106, type metadata accessor for Action.NaturalLightAction);
      uint64_t v91 = v108;
      sub_251A57128(v89, v108, type metadata accessor for Action.NaturalLightAction);
      char v92 = sub_251F35080();
      os_log_type_t v93 = sub_251F35FB0();
      if (os_log_type_enabled(v92, v93))
      {
        uint64_t v94 = swift_slowAlloc();
        uint64_t v127 = swift_slowAlloc();
        v129[0] = v127;
        *(_DWORD *)uint64_t v94 = 136315394;
        sub_251F34DA0();
        sub_251A1A8EC((unint64_t *)&qword_26B21E6B0);
        uint64_t v95 = sub_251F36AB0();
        uint64_t v128 = sub_251A00E84(v95, v96, v129);
        sub_251F361D0();
        swift_bridgeObjectRelease();
        sub_251A57190(v90, type metadata accessor for Action.NaturalLightAction);
        *(_WORD *)(v94 + 12) = 2080;
        sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
        swift_bridgeObjectRetain();
        uint64_t v97 = sub_251F35E50();
        unint64_t v99 = v98;
        swift_bridgeObjectRelease();
        uint64_t v128 = sub_251A00E84(v97, v99, v129);
        sub_251F361D0();
        swift_bridgeObjectRelease();
        sub_251A57190(v91, type metadata accessor for Action.NaturalLightAction);
        _os_log_impl(&dword_2519F3000, v92, v93, "Failed to find static light profile for id: %s in serviceIDs: %s", (uint8_t *)v94, 0x16u);
        uint64_t v100 = v127;
        swift_arrayDestroy();
        MEMORY[0x2533AC760](v100, -1, -1);
        MEMORY[0x2533AC760](v94, -1, -1);
      }
      else
      {
        sub_251A57190(v90, type metadata accessor for Action.NaturalLightAction);
        sub_251A57190(v91, type metadata accessor for Action.NaturalLightAction);
      }

      return;
    }
LABEL_47:
    swift_once();
    goto LABEL_38;
  }
}

uint64_t Action.NaturalLightAction.lightProfile.getter()
{
  uint64_t v0 = type metadata accessor for StateSnapshot(0);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C9A8);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  uint64_t v6 = qword_26B21FF50;
  swift_getKeyPath();
  v11[1] = v6;
  sub_251A570E0((unint64_t *)&qword_26B21F280, (void (*)(uint64_t))type metadata accessor for DataModel);
  sub_251F34F10();
  swift_release();
  uint64_t v7 = v6 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentStateSnapshot;
  swift_beginAccess();
  sub_251A57128(v7, (uint64_t)v2, type metadata accessor for StateSnapshot);
  Action.NaturalLightAction.staticLightProfile(in:)((uint64_t)v2, (uint64_t)v5);
  sub_251A57190((uint64_t)v2, type metadata accessor for StateSnapshot);
  uint64_t v8 = type metadata accessor for StaticLightProfile();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v5, 1, v8) == 1)
  {
    sub_251A1B064((uint64_t)v5, &qword_269B9C9A8);
    return 0;
  }
  else
  {
    uint64_t v9 = sub_251BD3410();
    sub_251A57190((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
  }
  return v9;
}

uint64_t Action.NaturalLightAction.associatedStaticServices(in:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + *(int *)(type metadata accessor for Action.NaturalLightAction(0) + 24));
  _OWORD v6[2] = a1;
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_251A52CC0((void (*)(char *))sub_251A57328, (uint64_t)v6, v3, qword_26B21EE20, (uint64_t (*)(void))type metadata accessor for StaticService, (uint64_t (*)(void))type metadata accessor for StaticService, (uint64_t (*)(BOOL, uint64_t, uint64_t, uint64_t))sub_251F0FB28);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_251A51938@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(void *)(a2 + *(int *)(type metadata accessor for StateSnapshot(0) + 60));
  if (*(void *)(v5 + 16) && (unint64_t v6 = sub_2519FE584(a1), (v7 & 1) != 0))
  {
    unint64_t v8 = v6;
    uint64_t v9 = *(void *)(v5 + 56);
    uint64_t v10 = type metadata accessor for StaticService();
    uint64_t v11 = *(void *)(v10 - 8);
    sub_251A57128(v9 + *(void *)(v11 + 72) * v8, a3, (uint64_t (*)(void))type metadata accessor for StaticService);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(a3, 0, 1, v10);
  }
  else
  {
    uint64_t v13 = type metadata accessor for StaticService();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a3, 1, 1, v13);
  }
}

uint64_t sub_251A51A78(void (*a1)(id *), uint64_t a2, unint64_t a3)
{
  return sub_251A51B30(a1, a2, a3, &qword_26B21E708, (uint64_t (*)(void))type metadata accessor for StaticActionSet, (uint64_t (*)(void))type metadata accessor for StaticActionSet, (uint64_t (*)(BOOL, uint64_t, uint64_t, uint64_t))sub_251F0F18C);
}

uint64_t sub_251A51AD4(void (*a1)(id *), uint64_t a2, unint64_t a3)
{
  return sub_251A51B30(a1, a2, a3, qword_26B21EE20, (uint64_t (*)(void))type metadata accessor for StaticService, (uint64_t (*)(void))type metadata accessor for StaticService, (uint64_t (*)(BOOL, uint64_t, uint64_t, uint64_t))sub_251F0FB28);
}

uint64_t sub_251A51B30(void (*a1)(id *), uint64_t a2, unint64_t a3, uint64_t *a4, uint64_t (*a5)(void), uint64_t (*a6)(void), uint64_t (*a7)(BOOL, uint64_t, uint64_t, uint64_t))
{
  int64_t v38 = a6;
  uint64_t v10 = v7;
  uint64_t v40 = a1;
  uint64_t v33 = a4;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(a4);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = a5(0);
  uint64_t v34 = *(void *)(v39 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v39);
  uint64_t v37 = (uint64_t)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v32 = (uint64_t)&v29 - v17;
  if (a3 >> 62) {
    goto LABEL_20;
  }
  uint64_t v18 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v18; uint64_t v18 = sub_251F366C0())
  {
    id v30 = a7;
    uint64_t v35 = (unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48);
    unint64_t v36 = a3 & 0xC000000000000001;
    uint64_t v19 = MEMORY[0x263F8EE78];
    uint64_t v20 = 4;
    unint64_t v31 = a3;
    while (1)
    {
      a7 = (uint64_t (*)(BOOL, uint64_t, uint64_t, uint64_t))v18;
      id v21 = v36 ? (id)MEMORY[0x2533AB3A0](v20 - 4, a3) : *(id *)(a3 + 8 * v20);
      uint64_t v22 = v21;
      uint64_t v23 = v20 - 3;
      if (__OFADD__(v20 - 4, 1)) {
        break;
      }
      id v41 = v21;
      v40(&v41);
      if (v10)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return v19;
      }

      if ((*v35)(v14, 1, v39) == 1)
      {
        sub_251A1B064((uint64_t)v14, v33);
      }
      else
      {
        uint64_t v24 = v32;
        uint64_t v25 = v38;
        sub_251A572C0((uint64_t)v14, v32, v38);
        sub_251A572C0(v24, v37, v25);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v19 = v30(0, *(void *)(v19 + 16) + 1, 1, v19);
        }
        unint64_t v27 = *(void *)(v19 + 16);
        unint64_t v26 = *(void *)(v19 + 24);
        if (v27 >= v26 >> 1) {
          uint64_t v19 = v30(v26 > 1, v27 + 1, 1, v19);
        }
        *(void *)(v19 + 16) = v27 + 1;
        sub_251A572C0(v37, v19+ ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80))+ *(void *)(v34 + 72) * v27, v38);
        a3 = v31;
      }
      ++v20;
      if (v23 == v18)
      {
        swift_bridgeObjectRelease();
        return v19;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x263F8EE78];
}

unint64_t sub_251A51E88(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  MEMORY[0x270FA5388](v6 - 8);
  unint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = type metadata accessor for StaticService();
  uint64_t v9 = *(void *)(v47 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v47);
  uint64_t v46 = (uint64_t)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v38 = (uint64_t)&v36 - v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(a3 + 16);
  uint64_t v36 = a3;
  if (v16)
  {
    uint64_t v44 = v8;
    uint64_t v17 = sub_251F34DA0();
    uint64_t v45 = a1;
    uint64_t v18 = v17;
    uint64_t v19 = *(void *)(v17 - 8);
    uint64_t v20 = v19;
    uint64_t v21 = a3 + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
    uint64_t v40 = *(void *)(v19 + 72);
    char v50 = (uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
    uint64_t v51 = (void (**)(char *, void, uint64_t, uint64_t))(v19 + 56);
    uint64_t v23 = v19 + 16;
    uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
    uint64_t v48 = v23;
    unint64_t v49 = v22;
    uint64_t v43 = v20;
    uint64_t v41 = v20 + 32;
    uint64_t v42 = (void (**)(char *, uint64_t))(v20 + 8);
    uint64_t v37 = v9;
    uint64_t v39 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    swift_bridgeObjectRetain();
    unint64_t v52 = MEMORY[0x263F8EE78];
    while (1)
    {
      v49(v15, v21, v18);
      (*v51)(v15, 0, 1, v18);
      uint64_t v24 = (*v50)(v15, 1, v18);
      if (v24 == 1) {
        break;
      }
      MEMORY[0x270FA5388](v24);
      unint64_t v26 = (char *)&v36 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v26, v15, v18);
      uint64_t v28 = (uint64_t)v44;
      v45(v26);
      if (v3)
      {
        (*v42)(v26, v18);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v52;
      }
      (*v42)(v26, v18);
      if ((*v39)(v28, 1, v47) == 1)
      {
        sub_251A1B064(v28, qword_26B21EE20);
      }
      else
      {
        uint64_t v29 = v28;
        uint64_t v30 = v38;
        sub_251A572C0(v29, v38, (uint64_t (*)(void))type metadata accessor for StaticService);
        sub_251A572C0(v30, v46, (uint64_t (*)(void))type metadata accessor for StaticService);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v52 = sub_251F0FB28(0, *(void *)(v52 + 16) + 1, 1, v52);
        }
        unint64_t v32 = *(void *)(v52 + 16);
        unint64_t v31 = *(void *)(v52 + 24);
        if (v32 >= v31 >> 1) {
          unint64_t v52 = sub_251F0FB28(v31 > 1, v32 + 1, 1, v52);
        }
        unint64_t v33 = v52;
        *(void *)(v52 + 16) = v32 + 1;
        sub_251A572C0(v46, v33+ ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))+ *(void *)(v37 + 72) * v32, (uint64_t (*)(void))type metadata accessor for StaticService);
      }
      v21 += v40;
      if (!--v16) {
        goto LABEL_14;
      }
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    unint64_t v52 = MEMORY[0x263F8EE78];
LABEL_14:
    uint64_t v34 = sub_251F34DA0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v15, 1, 1, v34);
  }
  swift_bridgeObjectRelease();
  return v52;
}

void *sub_251A52394(void (*a1)(long long *__return_ptr, char *), uint64_t a2, uint64_t a3)
{
  void (*v35)(long long *__return_ptr, char *);
  long long v36;
  long long v37;
  void *v38;

  uint64_t v35 = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a3 + 16);
  uint64_t v26 = a3;
  if (v8)
  {
    uint64_t v9 = sub_251F34DA0();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = v10;
    uint64_t v12 = a3 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    uint64_t v27 = *(void *)(v10 + 72);
    uint64_t v34 = (void (**)(char *, void, uint64_t, uint64_t))(v10 + 56);
    uint64_t v14 = v10 + 16;
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    uint64_t v32 = v14;
    unint64_t v33 = v13;
    uint64_t v30 = v11;
    unint64_t v31 = (uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
    uint64_t v28 = (void (**)(char *, uint64_t))(v11 + 8);
    uint64_t v29 = v11 + 32;
    swift_bridgeObjectRetain();
    uint64_t v38 = (void *)MEMORY[0x263F8EE78];
    while (1)
    {
      v33(v7, v12, v9);
      (*v34)(v7, 0, 1, v9);
      uint64_t v16 = (*v31)(v7, 1, v9);
      if (v16 == 1) {
        break;
      }
      MEMORY[0x270FA5388](v16);
      uint64_t v18 = (char *)&v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v18, v7, v9);
      v35(&v37, v18);
      if (v3)
      {
        (*v28)(v18, v9);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v38;
      }
      (*v28)(v18, v9);
      if ((void)v37)
      {
        uint64_t v36 = v37;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v38 = sub_251F0FFE0(0, v38[2] + 1, 1, v38);
        }
        unint64_t v21 = v38[2];
        unint64_t v20 = v38[3];
        long long v22 = v36;
        if (v21 >= v20 >> 1)
        {
          uint64_t v23 = sub_251F0FFE0((void *)(v20 > 1), v21 + 1, 1, v38);
          long long v22 = v36;
          uint64_t v38 = v23;
        }
        uint64_t v15 = v38;
        v38[2] = v21 + 1;
        *(_OWORD *)&v15[2 * v21 + 4] = v22;
      }
      v12 += v27;
      if (!--v8) {
        goto LABEL_13;
      }
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v38 = (void *)MEMORY[0x263F8EE78];
LABEL_13:
    uint64_t v24 = sub_251F34DA0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v7, 1, 1, v24);
  }
  swift_bridgeObjectRelease();
  return v38;
}

uint64_t sub_251A52718(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return sub_251A5299C(a1, a2, a3, &qword_269B9D130, (uint64_t (*)(void))type metadata accessor for StaticTimer, (uint64_t (*)(void))type metadata accessor for StaticTimer, (uint64_t)sub_251F10028);
}

void *sub_251A52774(void (*a1)(long long *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  if (!v4) {
    return (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v7 = *(void *)(type metadata accessor for StaticUserActionPrediction() - 8);
  uint64_t v8 = a3 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  uint64_t v9 = *(void *)(v7 + 72);
  uint64_t v17 = a3;
  swift_bridgeObjectRetain();
  uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  do
  {
    a1(&v14, v8);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v10;
    }
    if (v15)
    {
      sub_251A1A444(&v14, (uint64_t)v16);
      sub_251A1A444(v16, (uint64_t)&v14);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v10 = sub_251F102B0(0, v10[2] + 1, 1, v10);
      }
      unint64_t v12 = v10[2];
      unint64_t v11 = v10[3];
      if (v12 >= v11 >> 1) {
        uint64_t v10 = sub_251F102B0((void *)(v11 > 1), v12 + 1, 1, v10);
      }
      v10[2] = v12 + 1;
      sub_251A1A444(&v14, (uint64_t)&v10[5 * v12 + 4]);
    }
    else
    {
      sub_251A1B064((uint64_t)&v14, &qword_269B9D150);
    }
    v8 += v9;
    --v4;
  }
  while (v4);
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_251A52940(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return sub_251A5299C(a1, a2, a3, &qword_269B9D140, (uint64_t (*)(void))type metadata accessor for StaticAlarm, (uint64_t (*)(void))type metadata accessor for StaticAlarm, (uint64_t)sub_251F10DB0);
}

uint64_t sub_251A5299C(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(void), uint64_t (*a6)(void), uint64_t a7)
{
  uint64_t v34 = a1;
  unint64_t v31 = a4;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(a4);
  MEMORY[0x270FA5388](v12 - 8);
  long long v14 = (char *)v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = a5(0);
  uint64_t v15 = MEMORY[0x270FA5388](v33);
  uint64_t v32 = (uint64_t)v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v30 = (uint64_t)v27 - v18;
  uint64_t v19 = *(void *)(a3 + 16);
  if (!v19) {
    return MEMORY[0x263F8EE78];
  }
  v27[0] = a7;
  v27[1] = a3;
  uint64_t v20 = a3 + 32;
  uint64_t v28 = v17;
  unint64_t v21 = (unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  swift_bridgeObjectRetain();
  uint64_t v22 = MEMORY[0x263F8EE78];
  uint64_t v29 = a6;
  do
  {
    v34(v20);
    if (v7)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v22;
    }
    if ((*v21)(v14, 1, v33) == 1)
    {
      sub_251A1B064((uint64_t)v14, v31);
    }
    else
    {
      uint64_t v23 = v30;
      sub_251A572C0((uint64_t)v14, v30, a6);
      sub_251A572C0(v23, v32, a6);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v22 = ((uint64_t (*)(void, uint64_t, uint64_t, uint64_t))v27[0])(0, *(void *)(v22 + 16) + 1, 1, v22);
      }
      unint64_t v25 = *(void *)(v22 + 16);
      unint64_t v24 = *(void *)(v22 + 24);
      if (v25 >= v24 >> 1) {
        uint64_t v22 = ((uint64_t (*)(BOOL, unint64_t, uint64_t, uint64_t))v27[0])(v24 > 1, v25 + 1, 1, v22);
      }
      *(void *)(v22 + 16) = v25 + 1;
      a6 = v29;
      sub_251A572C0(v32, v22+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(void *)(v28 + 72) * v25, v29);
    }
    v20 += 40;
    --v19;
  }
  while (v19);
  swift_bridgeObjectRelease();
  return v22;
}

uint64_t sub_251A52C64(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  return sub_251A52CC0(a1, a2, a3, &qword_269B9D138, type metadata accessor for StaticRoom, type metadata accessor for StaticRoom, (uint64_t (*)(BOOL, uint64_t, uint64_t, uint64_t))sub_251F1005C);
}

uint64_t sub_251A52CC0(void (*a1)(char *), uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t (*a5)(void), uint64_t (*a6)(void), uint64_t (*a7)(BOOL, uint64_t, uint64_t, uint64_t))
{
  uint64_t v45 = a7;
  uint64_t v55 = a6;
  char v57 = a1;
  unint64_t v49 = a4;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(a4);
  MEMORY[0x270FA5388](v9 - 8);
  unint64_t v56 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = a5(0);
  uint64_t v11 = *(void *)(v54 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v54);
  uint64_t v53 = (uint64_t)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v47 = (uint64_t)&v44 - v14;
  uint64_t v15 = *(void *)(a3 + 56);
  uint64_t v50 = a3 + 56;
  uint64_t v16 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & v15;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t v46 = &v44;
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v58 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = a3;
  uint64_t v48 = v11;
  int64_t v51 = (unint64_t)(v16 + 63) >> 6;
  unint64_t v52 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v22 = 0;
  uint64_t v23 = MEMORY[0x263F8EE78];
  if (v18) {
    goto LABEL_6;
  }
LABEL_7:
  BOOL v27 = __OFADD__(v22++, 1);
  uint64_t v26 = v58;
  if (v27)
  {
    __break(1u);
    goto LABEL_38;
  }
  if (v22 >= v51) {
    goto LABEL_35;
  }
  unint64_t v28 = *(void *)(v50 + 8 * v22);
  if (v28) {
    goto LABEL_19;
  }
  int64_t v29 = v22 + 1;
  if (v22 + 1 >= v51) {
    goto LABEL_35;
  }
  unint64_t v28 = *(void *)(v50 + 8 * v29);
  if (v28)
  {
LABEL_18:
    int64_t v22 = v29;
LABEL_19:
    unint64_t v18 = (v28 - 1) & v28;
    unint64_t v25 = __clz(__rbit64(v28)) + (v22 << 6);
    while (1)
    {
      uint64_t v30 = *(void *)(v59 + 48);
      uint64_t v31 = sub_251F34DA0();
      uint64_t v32 = *(void *)(v31 - 8);
      (*(void (**)(char *, unint64_t, uint64_t))(v32 + 16))(v26, v30 + *(void *)(v32 + 72) * v25, v31);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v26, 0, 1, v31);
      uint64_t v33 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v32 + 48))(v26, 1, v31);
      if (v33 == 1)
      {
        swift_release();
        return v23;
      }
      MEMORY[0x270FA5388](v33);
      uint64_t v35 = (char *)&v44 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v35, v26, v31);
      uint64_t v36 = (uint64_t)v56;
      uint64_t v37 = v60;
      v57(v35);
      uint64_t v60 = v37;
      if (v37) {
        break;
      }
      (*(void (**)(char *, uint64_t))(v32 + 8))(v35, v31);
      if ((*v52)(v36, 1, v54) == 1)
      {
        uint64_t result = sub_251A1B064(v36, v49);
        if (!v18) {
          goto LABEL_7;
        }
      }
      else
      {
        uint64_t v38 = v36;
        uint64_t v39 = v47;
        uint64_t v40 = v55;
        sub_251A572C0(v38, v47, v55);
        sub_251A572C0(v39, v53, v40);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v23 = v45(0, *(void *)(v23 + 16) + 1, 1, v23);
        }
        unint64_t v42 = *(void *)(v23 + 16);
        unint64_t v41 = *(void *)(v23 + 24);
        if (v42 >= v41 >> 1) {
          uint64_t v23 = v45(v41 > 1, v42 + 1, 1, v23);
        }
        *(void *)(v23 + 16) = v42 + 1;
        uint64_t result = sub_251A572C0(v53, v23+ ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80))+ *(void *)(v48 + 72) * v42, v55);
        if (!v18) {
          goto LABEL_7;
        }
      }
LABEL_6:
      unint64_t v24 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v25 = v24 | (v22 << 6);
      uint64_t v26 = v58;
    }
    (*(void (**)(char *, uint64_t))(v32 + 8))(v35, v31);
    swift_bridgeObjectRelease();
    swift_release();
    return v23;
  }
  int64_t v29 = v22 + 2;
  if (v22 + 2 >= v51)
  {
LABEL_35:
    uint64_t v43 = sub_251F34DA0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v58, 1, 1, v43);
    swift_release();
    return v23;
  }
  unint64_t v28 = *(void *)(v50 + 8 * v29);
  if (v28) {
    goto LABEL_18;
  }
  int64_t v29 = v22 + 3;
  if (v22 + 3 >= v51) {
    goto LABEL_35;
  }
  unint64_t v28 = *(void *)(v50 + 8 * v29);
  if (v28) {
    goto LABEL_18;
  }
  int64_t v29 = v22 + 4;
  if (v22 + 4 >= v51) {
    goto LABEL_35;
  }
  unint64_t v28 = *(void *)(v50 + 8 * v29);
  if (v28) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v22 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v22 >= v51) {
      goto LABEL_35;
    }
    unint64_t v28 = *(void *)(v50 + 8 * v22);
    ++v29;
    if (v28) {
      goto LABEL_19;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

unint64_t sub_251A532C0(void (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v26 = a2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D148);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v25 = (uint64_t)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v23 = (uint64_t)&v21 - v13;
  uint64_t v24 = *(void *)(a3 + 16);
  if (!v24) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v21 = v12;
  uint64_t v14 = (unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  uint64_t v15 = 0;
  unint64_t v16 = MEMORY[0x263F8EE78];
  int64_t v22 = a1;
  do
  {
    char v27 = *(unsigned char *)(a3 + v15 + 32);
    a1(&v27);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v16;
    }
    if ((*v14)(v8, 1, v9) == 1)
    {
      sub_251A1B064((uint64_t)v8, &qword_269B9D148);
    }
    else
    {
      uint64_t v17 = v23;
      sub_251A572C0((uint64_t)v8, v23, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
      sub_251A572C0(v17, v25, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v16 = sub_251F0FD44(0, *(void *)(v16 + 16) + 1, 1, v16);
      }
      unint64_t v19 = *(void *)(v16 + 16);
      unint64_t v18 = *(void *)(v16 + 24);
      if (v19 >= v18 >> 1) {
        unint64_t v16 = sub_251F0FD44(v18 > 1, v19 + 1, 1, v16);
      }
      *(void *)(v16 + 16) = v19 + 1;
      sub_251A572C0(v25, v16+ ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80))+ *(void *)(v21 + 72) * v19, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
      a1 = v22;
    }
    ++v15;
  }
  while (v24 != v15);
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t Action.NaturalLightAction.staticAccessory(in:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(a1 + *(int *)(type metadata accessor for StateSnapshot(0) + 32));
  if (*(void *)(v5 + 16)
    && (uint64_t v6 = type metadata accessor for Action.NaturalLightAction(0),
        unint64_t v7 = sub_2519FE584(v3 + *(int *)(v6 + 20)),
        (v8 & 1) != 0))
  {
    unint64_t v9 = v7;
    uint64_t v10 = *(void *)(v5 + 56);
    uint64_t v11 = type metadata accessor for StaticAccessory(0);
    uint64_t v18 = *(void *)(v11 - 8);
    sub_251A57128(v10 + *(void *)(v18 + 72) * v9, a2, type metadata accessor for StaticAccessory);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
    uint64_t v13 = a2;
    uint64_t v14 = 0;
    uint64_t v15 = v11;
  }
  else
  {
    uint64_t v16 = type metadata accessor for StaticAccessory(0);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
    uint64_t v15 = v16;
    uint64_t v13 = a2;
    uint64_t v14 = 1;
  }

  return v12(v13, v14, 1, v15);
}

unsigned __int8 *sub_251A536FC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Action.NaturalLightAction(0);
  uint64_t v5 = (void *)sub_251F34D50();
  id v6 = objc_msgSend(a1, sel_accessoryWithUniqueIdentifier_, v5);

  if (!v6) {
    goto LABEL_5;
  }
  id v7 = objc_msgSend(v6, sel_lightProfiles);
  sub_251A1A568(0, (unint64_t *)&qword_26B21F150);
  sub_251A58100((unint64_t *)&qword_26B21F158, (unint64_t *)&qword_26B21F150);
  uint64_t v8 = sub_251F35E40();

  MEMORY[0x270FA5388](v9);
  long long v16[2] = v2;
  sub_251A95650(sub_251A58158, (uint64_t)v16, v8);
  uint64_t v11 = v10;
  swift_bridgeObjectRelease();
  if (!v11)
  {

LABEL_5:
    type metadata accessor for Action.NaturalLightAction.Error(0);
    sub_251A570E0(&qword_269B9D0F0, (void (*)(uint64_t))type metadata accessor for Action.NaturalLightAction.Error);
    swift_allocError();
    uint64_t v13 = v12;
    uint64_t v14 = sub_251F34DA0();
    (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(*(void *)(v14 - 8) + 16))(v13, v2, v14);
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    return v2;
  }
  uint64_t v2 = (unsigned __int8 *)objc_msgSend(objc_allocWithZone(MEMORY[0x263F0E450]), sel_initWithLightProfile_naturalLightingEnabled_, v11, v2[*(int *)(v4 + 28)]);

  return v2;
}

uint64_t sub_251A53944(id *a1)
{
  id v1 = objc_msgSend(*a1, sel_uniqueIdentifier);
  uint64_t v2 = sub_251F34DA0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34D80();

  char v6 = sub_251F34D70();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v6 & 1;
}

uint64_t Action.NaturalLightAction.debugDescription.getter()
{
  sub_251F36400();
  sub_251F35800();
  uint64_t v1 = type metadata accessor for Action.NaturalLightAction(0);
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  sub_251F34DA0();
  sub_251A1A8EC((unint64_t *)&qword_26B21E6B0);
  sub_251F36AB0();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  if (*(void *)(v0 + *(int *)(v1 + 32) + 8))
  {
    swift_bridgeObjectRetain();
    sub_251F35800();
    sub_251F36AB0();
    sub_251F35800();
    swift_bridgeObjectRelease();
    sub_251F35800();
  }
  else
  {
    sub_251F36AB0();
  }
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  return 0;
}

uint64_t sub_251A53C68@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_251A570E0((unint64_t *)&qword_26B21F280, (void (*)(uint64_t))type metadata accessor for DataModel);
  sub_251F34F10();
  swift_release();
  uint64_t v4 = v3 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentStateSnapshot;
  swift_beginAccess();
  return sub_251A57128(v4, a2, type metadata accessor for StateSnapshot);
}

uint64_t sub_251A53D48(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for StateSnapshot(0);
  MEMORY[0x270FA5388](v4 - 8);
  char v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_251A57128(a1, (uint64_t)v6, type metadata accessor for StateSnapshot);
  uint64_t v7 = *a2;
  swift_getKeyPath();
  uint64_t v10 = v7;
  uint64_t v11 = v6;
  uint64_t v12 = v7;
  sub_251A570E0((unint64_t *)&qword_26B21F280, (void (*)(uint64_t))type metadata accessor for DataModel);
  sub_251F34F00();
  swift_release();
  return sub_251A57190((uint64_t)v6, type metadata accessor for StateSnapshot);
}

uint64_t type metadata accessor for Action.NaturalLightAction.Error(uint64_t a1)
{
  return sub_251A1C6FC(a1, (uint64_t *)&unk_269B9D110);
}

uint64_t sub_251A53EBC(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3) {
    unint64_t v7 = 3;
  }
  unint64_t v8 = v7 - 3;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 128;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

int64_t sub_251A53F60(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (uint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  unint64_t v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    unint64_t v11 = *(void *)(v6 + 8 * v9);
    if (v11) {
      return __clz(__rbit64(v11)) + (v9 << 6);
    }
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      unint64_t v11 = *(void *)(v6 + 8 * v9);
      if (v11) {
        return __clz(__rbit64(v11)) + (v9 << 6);
      }
      while (v10 - 3 != v5)
      {
        unint64_t v11 = *(void *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

void sub_251A54044(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
}

uint64_t sub_251A54058@<X0>(uint64_t result@<X0>, int a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, unsigned char *a5@<X8>)
{
  if (a3) {
    goto LABEL_10;
  }
  if (result < 0 || 1 << *(unsigned char *)(a4 + 32) <= result)
  {
    __break(1u);
  }
  else if ((*(void *)(a4 + 8 * ((unint64_t)result >> 6) + 56) >> result))
  {
    if (*(_DWORD *)(a4 + 36) == a2)
    {
      *a5 = *(unsigned char *)(*(void *)(a4 + 48) + result);
      return result;
    }
    goto LABEL_9;
  }
  __break(1u);
LABEL_9:
  __break(1u);
LABEL_10:
  __break(1u);
  return result;
}

void sub_251A540B4(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
}

void sub_251A540C8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, unint64_t *a5)
{
  unint64_t v7 = a1;
  if ((a4 & 0xC000000000000001) != 0)
  {
    if (a3)
    {
      if (a4 < 0) {
        uint64_t v8 = a4;
      }
      else {
        uint64_t v8 = a4 & 0xFFFFFFFFFFFFFF8;
      }
      MEMORY[0x2533AB260](a1, a2, v8);
      sub_251A1A568(0, a5);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      return;
    }
LABEL_27:
    __break(1u);
    return;
  }
  if (a3) {
    goto LABEL_13;
  }
  if (a1 < 0 || 1 << *(unsigned char *)(a4 + 32) <= a1)
  {
    __break(1u);
    goto LABEL_24;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)a1 >> 6) + 56) >> a1) & 1) == 0)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    goto LABEL_20;
  }
  __break(1u);
LABEL_13:
  if (sub_251F362E0() != *(_DWORD *)(a4 + 36))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  sub_251F362F0();
  sub_251A1A568(0, a5);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  a5 = v18;
  swift_unknownObjectRelease();
  uint64_t v9 = sub_251F36110();
  uint64_t v10 = -1 << *(unsigned char *)(a4 + 32);
  unint64_t v7 = v9 & ~v10;
  if (((*(void *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
  {
LABEL_26:

    __break(1u);
    goto LABEL_27;
  }
  id v11 = *(id *)(*(void *)(a4 + 48) + 8 * v7);
  char v12 = sub_251F36120();

  if ((v12 & 1) == 0)
  {
    uint64_t v13 = ~v10;
    do
    {
      unint64_t v7 = (v7 + 1) & v13;
      if (((*(void *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
        goto LABEL_26;
      }
      id v14 = *(id *)(*(void *)(a4 + 48) + 8 * v7);
      char v15 = sub_251F36120();
    }
    while ((v15 & 1) == 0);
  }

LABEL_20:
  uint64_t v16 = *(void **)(*(void *)(a4 + 48) + 8 * v7);

  id v17 = v16;
}

uint64_t sub_251A54338@<X0>(uint64_t result@<X0>, int a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  if (a3) {
    goto LABEL_12;
  }
  uint64_t v5 = result;
  if (result < 0 || 1 << *(unsigned char *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)result >> 6) + 56) >> result) & 1) == 0)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  uint64_t v7 = *(void *)(a4 + 48);
  uint64_t v8 = sub_251F34DA0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
  uint64_t v11 = v7 + *(void *)(v9 + 72) * v5;

  return v10(a5, v11, v8);
}

uint64_t sub_251A54400@<X0>(uint64_t a1@<X0>, int a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return sub_251A54484(a1, a2, a3, a4, (uint64_t (*)(void))type metadata accessor for Event, (uint64_t (*)(void))type metadata accessor for Event, a5);
}

uint64_t sub_251A5442C@<X0>(uint64_t a1@<X0>, int a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return sub_251A54484(a1, a2, a3, a4, (uint64_t (*)(void))type metadata accessor for StaticService, (uint64_t (*)(void))type metadata accessor for StaticService, a5);
}

uint64_t sub_251A54458@<X0>(uint64_t a1@<X0>, int a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return sub_251A54484(a1, a2, a3, a4, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent, a5);
}

uint64_t sub_251A54484@<X0>(uint64_t result@<X0>, int a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t (*a5)(void)@<X4>, uint64_t (*a6)(void)@<X5>, uint64_t a7@<X8>)
{
  if (a3) {
    goto LABEL_10;
  }
  uint64_t v7 = result;
  if (result < 0 || 1 << *(unsigned char *)(a4 + 32) <= result)
  {
    __break(1u);
  }
  else if ((*(void *)(a4 + 8 * ((unint64_t)result >> 6) + 56) >> result))
  {
    if (*(_DWORD *)(a4 + 36) == a2)
    {
      uint64_t v10 = *(void *)(a4 + 48);
      uint64_t v11 = a5(0);
      return sub_251A57128(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v7, a7, a6);
    }
    goto LABEL_9;
  }
  __break(1u);
LABEL_9:
  __break(1u);
LABEL_10:
  __break(1u);
  return result;
}

void sub_251A54534(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
}

void sub_251A54548(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
}

void sub_251A5455C(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
}

uint64_t sub_251A54570(uint64_t a1, uint64_t a2)
{
  sub_251F36D00();
  uint64_t v3 = a2 + 56;
  uint64_t v4 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  uint64_t v6 = v5 & *(void *)(a2 + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v9 = 0;
  int64_t v10 = 0;
  while (1)
  {
    if (v6)
    {
      v6 &= v6 - 1;
      goto LABEL_5;
    }
    if (__OFADD__(v10++, 1)) {
      goto LABEL_19;
    }
    if (v10 >= v7)
    {
LABEL_17:
      swift_release();
      return sub_251F36CB0();
    }
    uint64_t v13 = *(void *)(v3 + 8 * v10);
    if (!v13) {
      break;
    }
LABEL_16:
    uint64_t v6 = (v13 - 1) & v13;
LABEL_5:
    sub_251F36CA0();
    swift_bridgeObjectRetain();
    sub_251F357B0();
    uint64_t v11 = sub_251F36D00();
    uint64_t result = swift_bridgeObjectRelease();
    v9 ^= v11;
  }
  int64_t v14 = v10 + 1;
  if (v10 + 1 >= v7) {
    goto LABEL_17;
  }
  uint64_t v13 = *(void *)(v3 + 8 * v14);
  if (v13)
  {
    ++v10;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v10 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v10 >= v7) {
      goto LABEL_17;
    }
    uint64_t v13 = *(void *)(v3 + 8 * v10);
    ++v14;
    if (v13) {
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_251A54708(long long *a1, uint64_t a2)
{
  uint64_t v3 = *((void *)a1 + 8);
  long long v4 = a1[1];
  long long v36 = *a1;
  long long v37 = v4;
  long long v5 = a1[2];
  long long v6 = a1[3];
  v32[2] = a1;
  long long v38 = v5;
  long long v39 = v6;
  uint64_t v40 = v3;
  uint64_t v7 = sub_251F36D00();
  uint64_t v8 = *(void *)(a2 + 56);
  uint64_t v33 = a2 + 56;
  uint64_t v34 = v7;
  uint64_t v9 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v8;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  v32[1] = v32;
  MEMORY[0x270FA5388](v12 - 8);
  int64_t v14 = (char *)v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v15 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v35 = a2;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v17 = 0;
  int64_t v18 = 0;
  if (!v11) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v19 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  for (unint64_t i = v19 | (v18 << 6); ; unint64_t i = __clz(__rbit64(v22)) + (v18 << 6))
  {
    uint64_t v24 = *(void *)(v35 + 48);
    uint64_t v25 = sub_251F34DA0();
    uint64_t v26 = *(void *)(v25 - 8);
    (*(void (**)(char *, unint64_t, uint64_t))(v26 + 16))(v14, v24 + *(void *)(v26 + 72) * i, v25);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v14, 0, 1, v25);
    uint64_t v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48))(v14, 1, v25);
    if (v27 == 1) {
      goto LABEL_19;
    }
    MEMORY[0x270FA5388](v27);
    int64_t v29 = (char *)v32 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v29, v14, v25);
    sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
    uint64_t v30 = sub_251F35600();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v29, v25);
    v17 ^= v30;
    if (v11) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v18++, 1)) {
      goto LABEL_21;
    }
    if (v18 >= v15) {
      goto LABEL_18;
    }
    unint64_t v22 = *(void *)(v33 + 8 * v18);
    if (!v22) {
      break;
    }
LABEL_14:
    unint64_t v11 = (v22 - 1) & v22;
  }
  int64_t v23 = v18 + 1;
  if (v18 + 1 >= v15)
  {
LABEL_18:
    uint64_t v31 = sub_251F34DA0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v14, 1, 1, v31);
LABEL_19:
    swift_release();
    return sub_251F36CB0();
  }
  unint64_t v22 = *(void *)(v33 + 8 * v23);
  if (v22)
  {
    ++v18;
    goto LABEL_14;
  }
  while (1)
  {
    int64_t v18 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v18 >= v15) {
      goto LABEL_18;
    }
    unint64_t v22 = *(void *)(v33 + 8 * v18);
    ++v23;
    if (v22) {
      goto LABEL_14;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_251A54A64(long long *a1, uint64_t a2)
{
  return sub_251A55B54(a1, a2, type metadata accessor for StaticAccessory, type metadata accessor for StaticAccessory, (void (*)(char *))StaticAccessory.hash(into:), type metadata accessor for StaticAccessory);
}

uint64_t sub_251A54AB8(uint64_t a1, uint64_t a2)
{
  sub_251F36D00();
  uint64_t v3 = a2 + 56;
  uint64_t v4 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  uint64_t v6 = v5 & *(void *)(a2 + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v9 = 0;
  int64_t v10 = 0;
  while (1)
  {
    if (v6)
    {
      v6 &= v6 - 1;
      goto LABEL_16;
    }
    if (__OFADD__(v10++, 1)) {
      goto LABEL_19;
    }
    if (v10 >= v7)
    {
LABEL_17:
      swift_release();
      return sub_251F36CB0();
    }
    uint64_t v12 = *(void *)(v3 + 8 * v10);
    if (!v12) {
      break;
    }
LABEL_15:
    uint64_t v6 = (v12 - 1) & v12;
LABEL_16:
    sub_251F36CA0();
    sub_251F36CD0();
    sub_251F357B0();
    uint64_t result = sub_251F36D00();
    v9 ^= result;
  }
  int64_t v13 = v10 + 1;
  if (v10 + 1 >= v7) {
    goto LABEL_17;
  }
  uint64_t v12 = *(void *)(v3 + 8 * v13);
  if (v12)
  {
    ++v10;
    goto LABEL_15;
  }
  while (1)
  {
    int64_t v10 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v10 >= v7) {
      goto LABEL_17;
    }
    uint64_t v12 = *(void *)(v3 + 8 * v10);
    ++v13;
    if (v12) {
      goto LABEL_15;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_251A54CA0(long long *a1, uint64_t a2)
{
  return sub_251A55B54(a1, a2, (uint64_t (*)(void))type metadata accessor for StaticService, (uint64_t (*)(void))type metadata accessor for StaticService, (void (*)(char *))StaticService.hash(into:), (uint64_t (*)(void))type metadata accessor for StaticService);
}

uint64_t sub_251A54CF4(long long *a1, uint64_t a2)
{
  uint64_t v3 = *((void *)a1 + 8);
  long long v4 = a1[1];
  long long v23 = *a1;
  long long v24 = v4;
  long long v5 = a1[3];
  long long v25 = a1[2];
  long long v26 = v5;
  uint64_t v27 = v3;
  sub_251F36D00();
  uint64_t v21 = a2;
  uint64_t v6 = a2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v12 = 0;
  int64_t v13 = 0;
  while (1)
  {
    if (v9)
    {
      unint64_t v14 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v15 = v14 | (v13 << 6);
      goto LABEL_5;
    }
    if (__OFADD__(v13++, 1)) {
      goto LABEL_19;
    }
    if (v13 >= v10)
    {
LABEL_17:
      swift_release();
      return sub_251F36CB0();
    }
    unint64_t v19 = *(void *)(v6 + 8 * v13);
    if (!v19) {
      break;
    }
LABEL_16:
    unint64_t v9 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_5:
    uint64_t v16 = *(void *)(*(void *)(v21 + 48) + 32 * v15 + 24);
    sub_251F36CA0();
    sub_251F36CB0();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_251F357B0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_251A54AB8((uint64_t)v22, v16);
    swift_bridgeObjectRelease();
    uint64_t v17 = sub_251F36D00();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    v12 ^= v17;
  }
  int64_t v20 = v13 + 1;
  if (v13 + 1 >= v10) {
    goto LABEL_17;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    ++v13;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v13 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v13 >= v10) {
      goto LABEL_17;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v13);
    ++v20;
    if (v19) {
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_251A54ED8(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_251F36D00();
  uint64_t v4 = 0;
  int64_t v5 = 0;
  uint64_t v6 = a2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  uint64_t v9 = v8 & *(void *)(a2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      v9 &= v9 - 1;
      goto LABEL_5;
    }
    if (__OFADD__(v5++, 1)) {
      goto LABEL_19;
    }
    if (v5 >= v10) {
      return sub_251F36CB0();
    }
    uint64_t v12 = *(void *)(v6 + 8 * v5);
    if (!v12) {
      break;
    }
LABEL_16:
    uint64_t v9 = (v12 - 1) & v12;
LABEL_5:
    sub_251F36CA0();
    sub_251F36CE0();
    uint64_t result = sub_251F36D00();
    v4 ^= result;
  }
  int64_t v13 = v5 + 1;
  if (v5 + 1 >= v10) {
    return sub_251F36CB0();
  }
  uint64_t v12 = *(void *)(v6 + 8 * v13);
  if (v12)
  {
    ++v5;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v5 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v5 >= v10) {
      return sub_251F36CB0();
    }
    uint64_t v12 = *(void *)(v6 + 8 * v5);
    ++v13;
    if (v12) {
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_251A5504C(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_251F36D00();
  uint64_t v4 = 0;
  int64_t v5 = 0;
  uint64_t v6 = a2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  uint64_t v9 = v8 & *(void *)(a2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      v9 &= v9 - 1;
      goto LABEL_5;
    }
    if (__OFADD__(v5++, 1)) {
      goto LABEL_19;
    }
    if (v5 >= v10) {
      return sub_251F36CB0();
    }
    uint64_t v12 = *(void *)(v6 + 8 * v5);
    if (!v12) {
      break;
    }
LABEL_16:
    uint64_t v9 = (v12 - 1) & v12;
LABEL_5:
    sub_251F36CA0();
    sub_251F36CB0();
    uint64_t result = sub_251F36D00();
    v4 ^= result;
  }
  int64_t v13 = v5 + 1;
  if (v5 + 1 >= v10) {
    return sub_251F36CB0();
  }
  uint64_t v12 = *(void *)(v6 + 8 * v13);
  if (v12)
  {
    ++v5;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v5 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v5 >= v10) {
      return sub_251F36CB0();
    }
    uint64_t v12 = *(void *)(v6 + 8 * v5);
    ++v13;
    if (v12) {
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_251A551B8(long long *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  uint64_t v43 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  int64_t v10 = (char *)&v37 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v45 = (uint64_t)&v37 - v11;
  uint64_t v12 = *((void *)a1 + 8);
  long long v13 = a1[1];
  long long v46 = *a1;
  long long v47 = v13;
  long long v14 = a1[2];
  long long v15 = a1[3];
  long long v37 = a1;
  long long v48 = v14;
  long long v49 = v15;
  uint64_t v50 = v12;
  uint64_t v44 = sub_251F36D00();
  uint64_t v16 = *(void *)(a2 + 56);
  uint64_t v39 = a2 + 56;
  uint64_t v17 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & v16;
  int64_t v38 = (unint64_t)(v17 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v21 = 0;
  int64_t v22 = 0;
  uint64_t v41 = a2;
  uint64_t v40 = v10;
  while (1)
  {
    if (v19)
    {
      unint64_t v31 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      unint64_t v32 = v31 | (v22 << 6);
      goto LABEL_18;
    }
    if (__OFADD__(v22++, 1)) {
      goto LABEL_22;
    }
    if (v22 >= v38)
    {
LABEL_20:
      swift_release();
      return sub_251F36CB0();
    }
    unint64_t v34 = *(void *)(v39 + 8 * v22);
    if (!v34) {
      break;
    }
LABEL_17:
    unint64_t v19 = (v34 - 1) & v34;
    unint64_t v32 = __clz(__rbit64(v34)) + (v22 << 6);
LABEL_18:
    uint64_t v36 = v45;
    sub_251A57128(*(void *)(a2 + 48) + *(void *)(v43 + 72) * v32, v45, type metadata accessor for StaticAccessory.DeviceIdentifier);
    sub_251A572C0(v36, (uint64_t)v10, type metadata accessor for StaticAccessory.DeviceIdentifier);
    sub_251F36CA0();
    sub_251A57128((uint64_t)v10, (uint64_t)v7, type metadata accessor for StaticAccessory.DeviceIdentifier);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v23 = sub_251F34DA0();
      unint64_t v42 = &v37;
      uint64_t v24 = v4;
      uint64_t v25 = *(void *)(v23 - 8);
      MEMORY[0x270FA5388](v23);
      uint64_t v27 = v21;
      uint64_t v28 = (char *)&v37 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v28, v7, v23);
      sub_251F36CB0();
      sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
      sub_251F35610();
      int64_t v29 = v28;
      uint64_t v21 = v27;
      (*(void (**)(char *, uint64_t))(v25 + 8))(v29, v23);
      uint64_t v4 = v24;
      int64_t v10 = v40;
      a2 = v41;
    }
    else
    {
      sub_251F36CB0();
      sub_251F357B0();
      swift_bridgeObjectRelease();
    }
    uint64_t v30 = sub_251F36D00();
    uint64_t result = sub_251A57190((uint64_t)v10, type metadata accessor for StaticAccessory.DeviceIdentifier);
    v21 ^= v30;
  }
  int64_t v35 = v22 + 1;
  if (v22 + 1 >= v38) {
    goto LABEL_20;
  }
  unint64_t v34 = *(void *)(v39 + 8 * v35);
  if (v34)
  {
    ++v22;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v22 = v35 + 1;
    if (__OFADD__(v35, 1)) {
      break;
    }
    if (v22 >= v38) {
      goto LABEL_20;
    }
    unint64_t v34 = *(void *)(v39 + 8 * v22);
    ++v35;
    if (v34) {
      goto LABEL_17;
    }
  }
  __break(1u);
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_251A55600(uint64_t a1, uint64_t a2)
{
  sub_251F36D00();
  uint64_t v3 = a2 + 56;
  uint64_t v4 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  uint64_t v6 = v5 & *(void *)(a2 + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v8 = 0;
  int64_t v9 = 0;
  while (1)
  {
    if (v6)
    {
      v6 &= v6 - 1;
      goto LABEL_16;
    }
    if (__OFADD__(v9++, 1)) {
      goto LABEL_19;
    }
    if (v9 >= v7) {
      break;
    }
    uint64_t v11 = *(void *)(v3 + 8 * v9);
    if (!v11)
    {
      int64_t v12 = v9 + 1;
      if (v9 + 1 >= v7) {
        break;
      }
      uint64_t v11 = *(void *)(v3 + 8 * v12);
      if (!v11)
      {
        while (1)
        {
          int64_t v9 = v12 + 1;
          if (__OFADD__(v12, 1)) {
            break;
          }
          if (v9 >= v7) {
            goto LABEL_17;
          }
          uint64_t v11 = *(void *)(v3 + 8 * v9);
          ++v12;
          if (v11) {
            goto LABEL_15;
          }
        }
        __break(1u);
LABEL_19:
        __break(1u);
        JUMPOUT(0x251A5585CLL);
      }
      ++v9;
    }
LABEL_15:
    uint64_t v6 = (v11 - 1) & v11;
LABEL_16:
    sub_251F36CA0();
    sub_251F357B0();
    swift_bridgeObjectRelease();
    v8 ^= sub_251F36D00();
  }
LABEL_17:
  swift_release();
  return sub_251F36CB0();
}

uint64_t sub_251A5587C(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_251F36D00();
  uint64_t v4 = 0;
  int64_t v5 = 0;
  uint64_t v8 = *(void *)(a2 + 56);
  uint64_t v7 = a2 + 56;
  uint64_t v6 = v8;
  uint64_t v9 = 1 << *(unsigned char *)(v7 - 24);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  uint64_t v11 = v10 & v6;
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (!v11)
    {
      if (__OFADD__(v5++, 1)) {
        goto LABEL_18;
      }
      if (v5 >= v12) {
        return sub_251F36CB0();
      }
      uint64_t v11 = *(void *)(v7 + 8 * v5);
      if (!v11) {
        break;
      }
    }
LABEL_5:
    v11 &= v11 - 1;
    sub_251F36CA0();
    sub_251F36CB0();
    uint64_t result = sub_251F36D00();
    v4 ^= result;
  }
  int64_t v14 = v5 + 1;
  if (v5 + 1 >= v12) {
    return sub_251F36CB0();
  }
  uint64_t v11 = *(void *)(v7 + 8 * v14);
  if (v11)
  {
    ++v5;
    goto LABEL_5;
  }
  while (1)
  {
    int64_t v5 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v5 >= v12) {
      return sub_251F36CB0();
    }
    uint64_t v11 = *(void *)(v7 + 8 * v5);
    ++v14;
    if (v11) {
      goto LABEL_5;
    }
  }
  __break(1u);
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_251A559B0(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_251F36D00();
  uint64_t v4 = result;
  uint64_t v5 = 0;
  int64_t v6 = 0;
  uint64_t v7 = a2 + 56;
  uint64_t v8 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(a2 + 56);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      unint64_t v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v13 = v12 | (v6 << 6);
      goto LABEL_5;
    }
    if (__OFADD__(v6++, 1)) {
      goto LABEL_19;
    }
    if (v6 >= v11) {
      return sub_251F36CB0();
    }
    unint64_t v15 = *(void *)(v7 + 8 * v6);
    if (!v15) {
      break;
    }
LABEL_16:
    unint64_t v10 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v6 << 6);
LABEL_5:
    uint64_t result = MEMORY[0x2533ABBC0](v4, *(unsigned __int16 *)(*(void *)(a2 + 48) + 2 * v13), 2);
    v5 ^= result;
  }
  int64_t v16 = v6 + 1;
  if (v6 + 1 >= v11) {
    return sub_251F36CB0();
  }
  unint64_t v15 = *(void *)(v7 + 8 * v16);
  if (v15)
  {
    ++v6;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v6 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v6 >= v11) {
      return sub_251F36CB0();
    }
    unint64_t v15 = *(void *)(v7 + 8 * v6);
    ++v16;
    if (v15) {
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_251A55B00(long long *a1, uint64_t a2)
{
  return sub_251A55B54(a1, a2, (uint64_t (*)(void))type metadata accessor for Action, (uint64_t (*)(void))type metadata accessor for Action, (void (*)(char *))Action.hash(into:), (uint64_t (*)(void))type metadata accessor for Action);
}

uint64_t sub_251A55B54(long long *a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void), void (*a5)(char *), uint64_t (*a6)(void))
{
  unint64_t v32 = a5;
  uint64_t v33 = a6;
  unint64_t v31 = a4;
  uint64_t v8 = a3(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8 - 8);
  int64_t v11 = (char *)v30 - v10;
  uint64_t v12 = *((void *)a1 + 8);
  long long v13 = a1[1];
  long long v35 = *a1;
  long long v36 = v13;
  long long v14 = a1[2];
  long long v15 = a1[3];
  v30[1] = a1;
  long long v37 = v14;
  long long v38 = v15;
  uint64_t v39 = v12;
  sub_251F36D00();
  uint64_t v16 = a2 + 56;
  uint64_t v17 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & *(void *)(a2 + 56);
  int64_t v20 = (unint64_t)(v17 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v22 = 0;
  int64_t v23 = 0;
  while (1)
  {
    if (v19)
    {
      unint64_t v24 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      unint64_t v25 = v24 | (v23 << 6);
      goto LABEL_5;
    }
    if (__OFADD__(v23++, 1)) {
      goto LABEL_19;
    }
    if (v23 >= v20)
    {
LABEL_17:
      swift_release();
      return sub_251F36CB0();
    }
    unint64_t v28 = *(void *)(v16 + 8 * v23);
    if (!v28) {
      break;
    }
LABEL_16:
    unint64_t v19 = (v28 - 1) & v28;
    unint64_t v25 = __clz(__rbit64(v28)) + (v23 << 6);
LABEL_5:
    sub_251A57128(*(void *)(a2 + 48) + *(void *)(v9 + 72) * v25, (uint64_t)v11, v31);
    sub_251F36CA0();
    v32(v34);
    uint64_t v26 = sub_251F36D00();
    uint64_t result = sub_251A57190((uint64_t)v11, v33);
    v22 ^= v26;
  }
  int64_t v29 = v23 + 1;
  if (v23 + 1 >= v20) {
    goto LABEL_17;
  }
  unint64_t v28 = *(void *)(v16 + 8 * v29);
  if (v28)
  {
    ++v23;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v23 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v23 >= v20) {
      goto LABEL_17;
    }
    unint64_t v28 = *(void *)(v16 + 8 * v23);
    ++v29;
    if (v28) {
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_251A55D7C(uint64_t a1, uint64_t a2)
{
  uint64_t v53 = type metadata accessor for Event.CharacteristicEvent();
  MEMORY[0x270FA5388](v53);
  uint64_t v56 = (uint64_t)v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Event.TimeEvent(0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v52 = (uint64_t)v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = type metadata accessor for Event();
  uint64_t v59 = *(void *)(v60 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v60);
  uint64_t v9 = (char *)v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)v51 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v58 = (uint64_t)v51 - v13;
  uint64_t v14 = *(void *)(a1 + 64);
  long long v15 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)&v63[9] = *(_OWORD *)a1;
  *(_OWORD *)&v63[11] = v15;
  long long v16 = *(_OWORD *)(a1 + 32);
  long long v17 = *(_OWORD *)(a1 + 48);
  v51[1] = a1;
  *(_OWORD *)&v63[13] = v16;
  *(_OWORD *)&v63[15] = v17;
  v63[17] = v14;
  uint64_t v57 = sub_251F36D00();
  uint64_t v18 = *(void *)(a2 + 56);
  uint64_t v55 = a2 + 56;
  uint64_t v19 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v20 = -1;
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  unint64_t v21 = v20 & v18;
  int64_t v54 = (unint64_t)(v19 + 63) >> 6;
  uint64_t v61 = a2;
  swift_bridgeObjectRetain();
  uint64_t v22 = 0;
  int64_t v23 = 0;
  while (1)
  {
    if (v21)
    {
      unint64_t v28 = __clz(__rbit64(v21));
      v21 &= v21 - 1;
      unint64_t v29 = v28 | (v23 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v23++, 1)) {
      goto LABEL_47;
    }
    if (v23 >= v54) {
      break;
    }
    unint64_t v31 = *(void *)(v55 + 8 * v23);
    if (!v31)
    {
      int64_t v32 = v23 + 1;
      if (v23 + 1 >= v54) {
        break;
      }
      unint64_t v31 = *(void *)(v55 + 8 * v32);
      if (!v31)
      {
        while (1)
        {
          int64_t v23 = v32 + 1;
          if (__OFADD__(v32, 1)) {
            break;
          }
          if (v23 >= v54) {
            goto LABEL_45;
          }
          unint64_t v31 = *(void *)(v55 + 8 * v23);
          ++v32;
          if (v31) {
            goto LABEL_18;
          }
        }
        __break(1u);
LABEL_47:
        __break(1u);
        JUMPOUT(0x251A56530);
      }
      ++v23;
    }
LABEL_18:
    unint64_t v21 = (v31 - 1) & v31;
    unint64_t v29 = __clz(__rbit64(v31)) + (v23 << 6);
LABEL_19:
    uint64_t v33 = v58;
    sub_251A57128(*(void *)(v61 + 48) + *(void *)(v59 + 72) * v29, v58, (uint64_t (*)(void))type metadata accessor for Event);
    sub_251A572C0(v33, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for Event);
    sub_251F36CA0();
    sub_251A57128((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for Event);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D120);
        uint64_t v24 = v52;
        sub_251A572C0((uint64_t)v9, v52, type metadata accessor for Event.TimeEvent);
        sub_251F36CB0();
        Event.TimeEvent.hash(into:)();
        sub_251F36CB0();
        unint64_t v25 = type metadata accessor for Event.TimeEvent;
        uint64_t v26 = v24;
      }
      else
      {
        uint64_t v35 = v56;
        sub_251A572C0((uint64_t)v9, v56, (uint64_t (*)(void))type metadata accessor for Event.CharacteristicEvent);
        sub_251F36CB0();
        sub_251F34DA0();
        sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
        sub_251F35610();
        uint64_t v36 = v53;
        char v62 = *(unsigned char *)(v35 + *(int *)(v53 + 20));
        CharacteristicKind.rawValue.getter();
        sub_251F357B0();
        swift_bridgeObjectRelease();
        uint64_t v37 = v35 + *(int *)(v36 + 24);
        uint64_t v38 = *(void *)v37;
        unint64_t v39 = *(void *)(v37 + 8);
        uint64_t v40 = *(unsigned __int8 *)(v37 + 16);
        if (v40 >> 6)
        {
          if (v40 >> 6 == 1)
          {
            sub_251F36CB0();
            switch(v40 & 0x3F)
            {
              case 2:
                goto LABEL_36;
              case 3:
              case 5:
              case 6:
                goto LABEL_38;
              case 4:
              case 7:
                goto LABEL_37;
              case 8:
                goto LABEL_39;
              case 9:
              case 0xALL:
                goto LABEL_41;
              case 0xBLL:
                goto LABEL_40;
              default:
                goto LABEL_32;
            }
          }
          sub_251F36CB0();
          switch(v40 & 0x3F)
          {
            case 2:
              goto LABEL_36;
            case 3:
            case 5:
            case 6:
              goto LABEL_38;
            case 4:
            case 7:
              goto LABEL_37;
            case 8:
              goto LABEL_39;
            case 9:
            case 0xALL:
LABEL_41:
              sub_251F36CB0();
              sub_251A1A894(v38, v39);
              sub_251F34C30();
              uint64_t v47 = v38;
              unint64_t v48 = v39;
              unsigned __int8 v49 = v40;
              goto LABEL_42;
            case 0xBLL:
              goto LABEL_40;
            default:
              goto LABEL_32;
          }
        }
        sub_251F36CB0();
        switch(v40)
        {
          case 2:
LABEL_36:
            sub_251F36CB0();
            sub_251F36CD0();
            break;
          case 3:
          case 5:
          case 6:
LABEL_38:
            sub_251F36CB0();
            sub_251F36CE0();
            break;
          case 4:
          case 7:
LABEL_37:
            sub_251F36CB0();
            sub_251F36CF0();
            break;
          case 8:
LABEL_39:
            sub_251F36CB0();
            sub_251F357B0();
            break;
          case 9:
            sub_251F36CB0();
            sub_251A1A894(v38, v39);
            sub_251F34C30();
            uint64_t v47 = v38;
            unint64_t v48 = v39;
            unsigned __int8 v49 = 9;
            goto LABEL_42;
          case 10:
            sub_251F36CB0();
            sub_251A1A894(v38, v39);
            sub_251F34C30();
            uint64_t v47 = v38;
            unint64_t v48 = v39;
            unsigned __int8 v49 = 10;
LABEL_42:
            sub_251A58090(v47, v48, v49);
            break;
          case 11:
LABEL_40:
            sub_251F36CB0();
            break;
          default:
LABEL_32:
            sub_251F36CB0();
            sub_251F36CC0();
            break;
        }
        unint64_t v25 = (uint64_t (*)(void))type metadata accessor for Event.CharacteristicEvent;
        uint64_t v26 = v56;
      }
      sub_251A57190(v26, v25);
    }
    else
    {
      uint64_t v41 = *(void *)v9;
      uint64_t v42 = *((void *)v9 + 1);
      uint64_t v43 = *((void *)v9 + 2);
      int v44 = v9[24];
      sub_251F36CB0();
      if (v44 == 1)
      {
        sub_251F36CB0();
        sub_251F36CF0();
        sub_251F36CF0();
        sub_251F36CF0();
      }
      else
      {
        sub_251F36CB0();
        sub_251F36CB0();
        if (v42)
        {
          sub_251F36CB0();
          if (v42 == 1)
          {
            uint64_t v45 = v41;
            unint64_t v46 = 1;
          }
          else
          {
            sub_251A54708((long long *)v63, v42);
            uint64_t v45 = v41;
            unint64_t v46 = v42;
          }
        }
        else
        {
          sub_251F36CB0();
          uint64_t v45 = v41;
          unint64_t v46 = 0;
        }
        sub_251A580E0(v45, v46, v43, 0);
      }
    }
    uint64_t v27 = sub_251F36D00();
    sub_251A57190((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for Event);
    v22 ^= v27;
  }
LABEL_45:
  swift_release();
  return sub_251F36CB0();
}

uint64_t sub_251A565C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 64);
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)&v21[9] = *(_OWORD *)a1;
  *(_OWORD *)&v21[11] = v4;
  long long v5 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)&v21[13] = *(_OWORD *)(a1 + 32);
  *(_OWORD *)&v21[15] = v5;
  v21[17] = v3;
  sub_251F36D00();
  uint64_t v6 = a2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v12 = 0;
  int64_t v13 = 0;
  while (v9)
  {
    unint64_t v15 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    unint64_t v16 = v15 | (v13 << 6);
LABEL_18:
    uint64_t v20 = *(void *)(*(void *)(a2 + 48) + 8 * v16);
    sub_251F36CA0();
    if (v20 == 2 || v20 == 1)
    {
      sub_251F36CB0();
    }
    else
    {
      sub_251F36CB0();
      sub_251F36CC0();
      if (v20)
      {
        swift_bridgeObjectRetain();
        sub_251A54708((long long *)v21, v20);
      }
    }
    uint64_t v14 = sub_251F36D00();
    uint64_t result = sub_251A58144(v20);
    v12 ^= v14;
  }
  if (__OFADD__(v13++, 1)) {
    goto LABEL_25;
  }
  if (v13 >= v10)
  {
LABEL_23:
    swift_release();
    return sub_251F36CB0();
  }
  unint64_t v18 = *(void *)(v6 + 8 * v13);
  if (v18)
  {
LABEL_17:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v13 << 6);
    goto LABEL_18;
  }
  int64_t v19 = v13 + 1;
  if (v13 + 1 >= v10) {
    goto LABEL_23;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    ++v13;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v13 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v13 >= v10) {
      goto LABEL_23;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v13);
    ++v19;
    if (v18) {
      goto LABEL_17;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
  return result;
}

void sub_251A5679C(uint64_t a1, uint64_t a2)
{
  sub_251F36D00();
  if ((a2 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_251F362B0();
    sub_251A1A568(0, (unint64_t *)&qword_26B21F170);
    sub_251A58100((unint64_t *)&qword_269B9D158, (unint64_t *)&qword_26B21F170);
    sub_251F35E90();
    a2 = v21;
    uint64_t v3 = v22;
    uint64_t v4 = v23;
    int64_t v5 = v24;
    unint64_t v6 = v25;
  }
  else
  {
    uint64_t v7 = -1 << *(unsigned char *)(a2 + 32);
    uint64_t v3 = a2 + 56;
    uint64_t v4 = ~v7;
    uint64_t v8 = -v7;
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v6 = v9 & *(void *)(a2 + 56);
    swift_bridgeObjectRetain();
    int64_t v5 = 0;
  }
  uint64_t v10 = 0;
  int64_t v11 = (unint64_t)(v4 + 64) >> 6;
  while (a2 < 0)
  {
    if (!sub_251F36340()) {
      goto LABEL_26;
    }
    sub_251A1A568(0, (unint64_t *)&qword_26B21F170);
    swift_dynamicCast();
    unint64_t v15 = v20;
    if (!v20) {
      goto LABEL_26;
    }
    int64_t v14 = v5;
    uint64_t v12 = v6;
LABEL_10:
    uint64_t v17 = sub_251F36110();

    v10 ^= v17;
    int64_t v5 = v14;
    unint64_t v6 = v12;
  }
  if (v6)
  {
    uint64_t v12 = (v6 - 1) & v6;
    unint64_t v13 = __clz(__rbit64(v6)) | (v5 << 6);
    int64_t v14 = v5;
LABEL_9:
    unint64_t v15 = *(void **)(*(void *)(a2 + 48) + 8 * v13);
    uint64_t v20 = v15;
    id v16 = v15;
    if (!v15) {
      goto LABEL_26;
    }
    goto LABEL_10;
  }
  int64_t v14 = v5 + 1;
  if (!__OFADD__(v5, 1))
  {
    if (v14 >= v11) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v3 + 8 * v14);
    if (!v18)
    {
      int64_t v14 = v5 + 2;
      if (v5 + 2 >= v11) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v3 + 8 * v14);
      if (!v18)
      {
        int64_t v19 = v5 + 3;
        while (v11 != v19)
        {
          unint64_t v18 = *(void *)(v3 + 8 * v19++);
          if (v18)
          {
            int64_t v14 = v19 - 1;
            goto LABEL_22;
          }
        }
LABEL_26:
        sub_251A1E630();
        sub_251F36CB0();
        return;
      }
    }
LABEL_22:
    uint64_t v12 = (v18 - 1) & v18;
    unint64_t v13 = __clz(__rbit64(v18)) + (v14 << 6);
    goto LABEL_9;
  }
  __break(1u);
}

uint64_t sub_251A56A28(long long *a1, uint64_t a2)
{
  uint64_t v48 = type metadata accessor for StaticZone();
  uint64_t v47 = *(void *)(v48 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v48);
  unint64_t v6 = (char *)v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v45 = (uint64_t)v42 - v7;
  uint64_t v8 = *((void *)a1 + 8);
  long long v9 = a1[1];
  long long v62 = *a1;
  long long v63 = v9;
  long long v10 = a1[2];
  long long v11 = a1[3];
  v42[1] = a1;
  long long v64 = v10;
  long long v65 = v11;
  uint64_t v66 = v8;
  uint64_t v44 = sub_251F36D00();
  uint64_t v12 = *(void *)(a2 + 56);
  uint64_t v43 = a2 + 56;
  uint64_t v13 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & v12;
  int64_t v50 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v49 = a2;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v17 = 0;
  int64_t v18 = 0;
  unint64_t v46 = v6;
  while (1)
  {
    uint64_t v54 = v17;
    if (v15)
    {
      uint64_t v52 = (v15 - 1) & v15;
      int64_t v53 = v18;
      unint64_t v20 = __clz(__rbit64(v15)) | (v18 << 6);
      goto LABEL_18;
    }
    BOOL v21 = __OFADD__(v18, 1);
    int64_t v22 = v18 + 1;
    if (v21) {
      goto LABEL_25;
    }
    if (v22 >= v50)
    {
LABEL_23:
      swift_release();
      return sub_251F36CB0();
    }
    unint64_t v23 = *(void *)(v43 + 8 * v22);
    if (!v23) {
      break;
    }
LABEL_17:
    uint64_t v52 = (v23 - 1) & v23;
    int64_t v53 = v22;
    unint64_t v20 = __clz(__rbit64(v23)) + (v22 << 6);
LABEL_18:
    uint64_t v25 = v45;
    sub_251A57128(*(void *)(v49 + 48) + *(void *)(v47 + 72) * v20, v45, (uint64_t (*)(void))type metadata accessor for StaticZone);
    sub_251A572C0(v25, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticZone);
    sub_251F36CA0();
    uint64_t v26 = sub_251F34DA0();
    uint64_t v61 = sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
    sub_251F35610();
    uint64_t v27 = v48;
    sub_251F357B0();
    uint64_t v28 = *(void *)&v6[*(int *)(v27 + 24)];
    sub_251F36CB0();
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    int64_t v51 = v42;
    MEMORY[0x270FA5388](v29 - 8);
    unint64_t v31 = (char *)v42 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v32 = *(void *)(v28 + 16);
    uint64_t v55 = *(void *)(v26 - 8);
    uint64_t v56 = v26 - 8;
    if (v32)
    {
      uint64_t v33 = v55;
      uint64_t v34 = v28 + ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80));
      uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t))(v55 + 16);
      uint64_t v59 = v55 + 16;
      uint64_t v60 = v35;
      uint64_t v36 = (void (**)(char *, void, uint64_t, uint64_t))(v55 + 56);
      uint64_t v37 = (uint64_t (**)(char *, uint64_t, uint64_t))(v55 + 48);
      uint64_t v58 = v55 + 32;
      uint64_t v57 = v55 + 8;
      uint64_t v38 = *(void *)(v55 + 72);
      while (1)
      {
        v60(v31, v34, v26);
        (*v36)(v31, 0, 1, v26);
        uint64_t v39 = (*v37)(v31, 1, v26);
        if (v39 == 1) {
          break;
        }
        MEMORY[0x270FA5388](v39);
        uint64_t v41 = (char *)v42 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v41, v31, v26);
        sub_251F35610();
        (*(void (**)(char *, uint64_t))(v33 + 8))(v41, v26);
        v34 += v38;
        if (!--v32) {
          goto LABEL_4;
        }
      }
    }
    else
    {
LABEL_4:
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v55 + 56))(v31, 1, 1, v26);
    }
    uint64_t v19 = sub_251F36D00();
    unint64_t v6 = v46;
    uint64_t result = sub_251A57190((uint64_t)v46, (uint64_t (*)(void))type metadata accessor for StaticZone);
    uint64_t v17 = v19 ^ v54;
    int64_t v18 = v53;
    unint64_t v15 = v52;
  }
  int64_t v24 = v22 + 1;
  if (v22 + 1 >= v50) {
    goto LABEL_23;
  }
  unint64_t v23 = *(void *)(v43 + 8 * v24);
  if (v23)
  {
    ++v22;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v22 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v22 >= v50) {
      goto LABEL_23;
    }
    unint64_t v23 = *(void *)(v43 + 8 * v22);
    ++v24;
    if (v23) {
      goto LABEL_17;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
  return result;
}

uint64_t _s13HomeDataModel6ActionO012NaturalLightD0V2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((sub_251F34D70() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = (int *)type metadata accessor for Action.NaturalLightAction(0);
  if ((sub_251F34D70() & 1) == 0
    || (sub_251B04848(*(void *)(a1 + v4[6]), *(void *)(a2 + v4[6])) & 1) == 0
    || *(unsigned __int8 *)(a1 + v4[7]) != *(unsigned __int8 *)(a2 + v4[7]))
  {
    return 0;
  }
  uint64_t v6 = v4[8];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = *(void *)(a1 + v6 + 8);
  long long v9 = (void *)(a2 + v6);
  uint64_t v10 = v9[1];
  if (v8)
  {
    if (!v10) {
      return 0;
    }
    BOOL v11 = *v7 == *v9 && v8 == v10;
    if (!v11 && (sub_251F36B10() & 1) == 0) {
      return 0;
    }
  }
  else if (v10)
  {
    return 0;
  }
  return 1;
}

uint64_t sub_251A570E0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_251A57128(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_251A57190(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_251A571F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C9A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_251A57258(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C9A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_251A572C0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_251A57328@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_251A51938(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_251A57344()
{
  return sub_251A570E0(&qword_269B9D0F8, (void (*)(uint64_t))type metadata accessor for Action.NaturalLightAction);
}

void *_s18NaturalLightActionVwCP(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_251F34DA0();
    uint64_t v8 = *(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((void *)((char *)a1 + a3[5]), (void *)((char *)a2 + a3[5]), v7);
    uint64_t v9 = a3[7];
    *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
    *((unsigned char *)a1 + v9) = *((unsigned char *)a2 + v9);
    uint64_t v10 = a3[8];
    BOOL v11 = (void *)((char *)a1 + v10);
    uint64_t v12 = (void *)((char *)a2 + v10);
    uint64_t v13 = v12[1];
    *BOOL v11 = *v12;
    v11[1] = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t _s18NaturalLightActionVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_251F34DA0();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + *(int *)(a2 + 20), v4);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t _s18NaturalLightActionVwcp(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  uint64_t v9 = a3[8];
  uint64_t v10 = (void *)(a1 + v9);
  BOOL v11 = (void *)(a2 + v9);
  uint64_t v12 = v11[1];
  *uint64_t v10 = *v11;
  v10[1] = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s18NaturalLightActionVwca(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v8 = a3[8];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s18NaturalLightActionVwtk(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  return a1;
}

uint64_t _s18NaturalLightActionVwta(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s18NaturalLightActionVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251A578AC);
}

uint64_t sub_251A578AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t _s18NaturalLightActionVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251A57980);
}

uint64_t sub_251A57980(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_251F34DA0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_251A57A3C()
{
  uint64_t result = sub_251F34DA0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

char *_s18NaturalLightActionV5ErrorOwCP(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *(void *)a1 = *a2;
    a1 = &v7[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_251F34DA0();
      (*(void (**)(char *, char **, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      uint64_t v8 = *a2;
      *(void *)a1 = *a2;
      uint64_t v9 = v8;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void _s18NaturalLightActionV5ErrorOwxx(void **a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_251F34DA0();
    uint64_t v3 = *(void (**)(void **, uint64_t))(*(void *)(v2 - 8) + 8);
    v3(a1, v2);
  }
  else
  {
    uint64_t v4 = *a1;
  }
}

void **_s18NaturalLightActionV5ErrorOwcp(void **a1, void **a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_251F34DA0();
    (*(void (**)(void **, void **, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    int v5 = *a2;
    *a1 = *a2;
    id v6 = v5;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void **_s18NaturalLightActionV5ErrorOwca(void **a1, void **a2)
{
  if (a1 != a2)
  {
    sub_251A57190((uint64_t)a1, type metadata accessor for Action.NaturalLightAction.Error);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = sub_251F34DA0();
      (*(void (**)(void **, void **, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      int v5 = *a2;
      *a1 = *a2;
      id v6 = v5;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *_s18NaturalLightActionV5ErrorOwtk(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_251F34DA0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *_s18NaturalLightActionV5ErrorOwta(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_251A57190((uint64_t)a1, type metadata accessor for Action.NaturalLightAction.Error);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_251F34DA0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for TilesFilter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for TilesFilter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_251A57FE8()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_251A57FF8()
{
  uint64_t result = sub_251F34DA0();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_251A58090(uint64_t result, unint64_t a2, unsigned __int8 a3)
{
  int v3 = a3 >> 6;
  if (!(a3 >> 6)) {
    return sub_251A580B4(result, a2, a3);
  }
  if (v3 == 2 || v3 == 1)
  {
    a3 &= 0x3Fu;
    return sub_251A580B4(result, a2, a3);
  }
  return result;
}

uint64_t sub_251A580B4(uint64_t result, unint64_t a2, char a3)
{
  if (a3 == 10 || a3 == 9) {
    return sub_251A1AD94(result, a2);
  }
  if (a3 == 8) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_251A580E0(uint64_t a1, unint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) == 0) {
    sub_251A580F0(a2);
  }
}

unint64_t sub_251A580F0(unint64_t result)
{
  if (result >= 2) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_251A58100(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_251A1A568(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_251A58144(uint64_t result)
{
  if ((unint64_t)(result - 1) >= 2) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_251A58158(id *a1)
{
  return sub_251A53944(a1) & 1;
}

uint64_t sub_251A58178()
{
  return sub_251B75D94(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t (*sub_251A58194())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_251A581E8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_251A5DCD0(&qword_269B9D168, (void (*)(uint64_t))type metadata accessor for TriggerBuilder);
  sub_251F34F10();
  swift_release();
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 24);
  *a2 = *(void *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_251A582A8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_251A5838C()
{
  swift_getKeyPath();
  sub_251A5DCD0(&qword_269B9D168, (void (*)(uint64_t))type metadata accessor for TriggerBuilder);
  sub_251F34F10();
  swift_release();
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for TriggerBuilder()
{
  uint64_t result = qword_269B9D198;
  if (!qword_269B9D198) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_251A584A4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_251A58580(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(a1 + 16) = a2;
  *(void *)(a1 + 24) = a3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_251A585EC()
{
  return sub_251A58580(v0[2], v0[3], v0[4]);
}

void (*sub_251A5860C(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_getKeyPath();
  v3[5] = OBJC_IVAR____TtC13HomeDataModel14TriggerBuilder___observationRegistrar;
  *uint64_t v3 = v1;
  v3[6] = sub_251A5DCD0(&qword_269B9D168, (void (*)(uint64_t))type metadata accessor for TriggerBuilder);
  sub_251F34F10();
  swift_release();
  *uint64_t v3 = v1;
  swift_getKeyPath();
  sub_251F34F30();
  swift_release();
  v3[7] = sub_251A58194();
  return sub_251A58728;
}

void sub_251A58728(void *a1)
{
}

uint64_t (*sub_251A58734())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_251A58788@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_251A5DCD0(&qword_269B9D168, (void (*)(uint64_t))type metadata accessor for TriggerBuilder);
  sub_251F34F10();
  swift_release();
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 32);
  return result;
}

uint64_t sub_251A58844()
{
  return swift_release();
}

uint64_t sub_251A58914()
{
  swift_getKeyPath();
  sub_251A5DCD0(&qword_269B9D168, (void (*)(uint64_t))type metadata accessor for TriggerBuilder);
  sub_251F34F10();
  swift_release();
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t sub_251A589D0()
{
  return swift_release();
}

uint64_t sub_251A58AA0()
{
  return sub_251A5E4D4();
}

void (*sub_251A58AB8(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_getKeyPath();
  v3[5] = OBJC_IVAR____TtC13HomeDataModel14TriggerBuilder___observationRegistrar;
  *uint64_t v3 = v1;
  v3[6] = sub_251A5DCD0(&qword_269B9D168, (void (*)(uint64_t))type metadata accessor for TriggerBuilder);
  sub_251F34F10();
  swift_release();
  *uint64_t v3 = v1;
  swift_getKeyPath();
  sub_251F34F30();
  swift_release();
  v3[7] = sub_251A58734();
  return sub_251A58BD4;
}

void sub_251A58BD4(void *a1)
{
}

uint64_t (*sub_251A58BE0())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_251A58C34@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_251A5DCD0(&qword_269B9D168, (void (*)(uint64_t))type metadata accessor for TriggerBuilder);
  sub_251F34F10();
  swift_release();
  swift_beginAccess();
  *a2 = *(void *)(v3 + 40);
  return swift_bridgeObjectRetain();
}

uint64_t sub_251A58CF4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_251A58DD4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_251A58E94()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_251A58F68(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 40) = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_251A58FD0()
{
  return sub_251A58F68(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void (*sub_251A58FEC(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_getKeyPath();
  v3[5] = OBJC_IVAR____TtC13HomeDataModel14TriggerBuilder___observationRegistrar;
  *uint64_t v3 = v1;
  v3[6] = sub_251A5DCD0(&qword_269B9D168, (void (*)(uint64_t))type metadata accessor for TriggerBuilder);
  sub_251F34F10();
  swift_release();
  *uint64_t v3 = v1;
  swift_getKeyPath();
  sub_251F34F30();
  swift_release();
  v3[7] = sub_251A58BE0();
  return sub_251A59108;
}

void sub_251A59108(void *a1)
{
}

uint64_t (*sub_251A59114())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_251A59168@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_251A5DCD0(&qword_269B9D168, (void (*)(uint64_t))type metadata accessor for TriggerBuilder);
  sub_251F34F10();
  swift_release();
  swift_beginAccess();
  *a2 = *(void *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t sub_251A59228()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_251A59308()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_251A593C8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_251A5949C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 48) = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_251A59504()
{
  return sub_251A5949C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void (*sub_251A59520(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_getKeyPath();
  v3[5] = OBJC_IVAR____TtC13HomeDataModel14TriggerBuilder___observationRegistrar;
  *uint64_t v3 = v1;
  v3[6] = sub_251A5DCD0(&qword_269B9D168, (void (*)(uint64_t))type metadata accessor for TriggerBuilder);
  sub_251F34F10();
  swift_release();
  *uint64_t v3 = v1;
  swift_getKeyPath();
  sub_251F34F30();
  swift_release();
  v3[7] = sub_251A59114();
  return sub_251A5963C;
}

void sub_251A5963C(void *a1)
{
}

uint64_t (*sub_251A59648())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_251A5969C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_251A5DCD0(&qword_269B9D168, (void (*)(uint64_t))type metadata accessor for TriggerBuilder);
  sub_251F34F10();
  swift_release();
  swift_beginAccess();
  *a2 = *(void *)(v3 + 56);
  return swift_bridgeObjectRetain();
}

uint64_t sub_251A5975C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_251A5983C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_251A598FC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_251A599D0(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 56) = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_251A59A38()
{
  return sub_251A599D0(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void (*sub_251A59A54(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_getKeyPath();
  v3[5] = OBJC_IVAR____TtC13HomeDataModel14TriggerBuilder___observationRegistrar;
  *uint64_t v3 = v1;
  v3[6] = sub_251A5DCD0(&qword_269B9D168, (void (*)(uint64_t))type metadata accessor for TriggerBuilder);
  sub_251F34F10();
  swift_release();
  *uint64_t v3 = v1;
  swift_getKeyPath();
  sub_251F34F30();
  swift_release();
  v3[7] = sub_251A59648();
  return sub_251A59B70;
}

void sub_251A59B70(void *a1)
{
}

uint64_t (*sub_251A59B7C())()
{
  return j__swift_endAccess;
}

uint64_t sub_251A59BD4@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_251A5DCD0(&qword_269B9D168, (void (*)(uint64_t))type metadata accessor for TriggerBuilder);
  sub_251F34F10();
  swift_release();
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 64);
  return result;
}

uint64_t sub_251A59C90()
{
  return swift_release();
}

uint64_t sub_251A59D60()
{
  swift_getKeyPath();
  sub_251A5DCD0(&qword_269B9D168, (void (*)(uint64_t))type metadata accessor for TriggerBuilder);
  sub_251F34F10();
  swift_release();
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 64);
}

uint64_t sub_251A59E1C()
{
  return swift_release();
}

uint64_t sub_251A59EEC()
{
  return sub_251A5E480();
}

void (*sub_251A59F04(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_getKeyPath();
  v3[5] = OBJC_IVAR____TtC13HomeDataModel14TriggerBuilder___observationRegistrar;
  *uint64_t v3 = v1;
  v3[6] = sub_251A5DCD0(&qword_269B9D168, (void (*)(uint64_t))type metadata accessor for TriggerBuilder);
  sub_251F34F10();
  swift_release();
  *uint64_t v3 = v1;
  swift_getKeyPath();
  sub_251F34F30();
  swift_release();
  v3[7] = sub_251A59B7C();
  return sub_251A5A020;
}

void sub_251A5A020(void *a1)
{
}

uint64_t (*sub_251A5A02C())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_251A5A080@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_251A5DCD0(&qword_269B9D168, (void (*)(uint64_t))type metadata accessor for TriggerBuilder);
  sub_251F34F10();
  swift_release();
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 65);
  return result;
}

uint64_t sub_251A5A13C()
{
  return swift_release();
}

uint64_t sub_251A5A20C()
{
  swift_getKeyPath();
  sub_251A5DCD0(&qword_269B9D168, (void (*)(uint64_t))type metadata accessor for TriggerBuilder);
  sub_251F34F10();
  swift_release();
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 65);
}

uint64_t sub_251A5A2C8()
{
  return swift_release();
}

uint64_t sub_251A5A398()
{
  return sub_251A5E42C();
}

void (*sub_251A5A3B0(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_getKeyPath();
  v3[5] = OBJC_IVAR____TtC13HomeDataModel14TriggerBuilder___observationRegistrar;
  *uint64_t v3 = v1;
  v3[6] = sub_251A5DCD0(&qword_269B9D168, (void (*)(uint64_t))type metadata accessor for TriggerBuilder);
  sub_251F34F10();
  swift_release();
  *uint64_t v3 = v1;
  swift_getKeyPath();
  sub_251F34F30();
  swift_release();
  v3[7] = sub_251A5A02C();
  return sub_251A5A4CC;
}

void sub_251A5A4CC(void *a1)
{
}

void sub_251A5A4D8(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 56))(*a1, 0);
  *uint64_t v1 = v1[4];
  swift_getKeyPath();
  sub_251F34F20();
  swift_release();

  free(v1);
}

uint64_t TriggerBuilder.__allocating_init(name:events:actions:activatedScenes:executesOnce:enabled:deletesAfterExecution:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char a7, char a8)
{
  uint64_t v16 = swift_allocObject();
  sub_251F34F40();
  *(void *)(v16 + 16) = a1;
  *(void *)(v16 + 24) = a2;
  *(void *)(v16 + 40) = a3;
  *(void *)(v16 + 48) = a4;
  *(void *)(v16 + 56) = a5;
  *(unsigned char *)(v16 + 64) = a6;
  *(unsigned char *)(v16 + 32) = a7;
  *(unsigned char *)(v16 + 65) = a8;
  return v16;
}

uint64_t TriggerBuilder.init(name:events:actions:activatedScenes:executesOnce:enabled:deletesAfterExecution:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char a7, char a8)
{
  sub_251F34F40();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  *(void *)(v8 + 40) = a3;
  *(void *)(v8 + 48) = a4;
  *(void *)(v8 + 56) = a5;
  *(unsigned char *)(v8 + 64) = a6;
  *(unsigned char *)(v8 + 32) = a7;
  *(unsigned char *)(v8 + 65) = a8;
  return v8;
}

uint64_t TriggerBuilder.__allocating_init(staticTrigger:)(uint64_t a1)
{
  uint64_t v2 = (int *)type metadata accessor for StaticTrigger();
  uint64_t v3 = (uint64_t *)(a1 + v2[5]);
  uint64_t v4 = *(void *)(a1 + v2[7]);
  uint64_t v5 = *(void *)(a1 + v2[8]);
  uint64_t v6 = *(void *)(a1 + v2[9]);
  char v13 = *(unsigned char *)(a1 + v2[10]);
  uint64_t v8 = *v3;
  uint64_t v7 = v3[1];
  char v9 = *(unsigned char *)(a1 + v2[6]);
  char v10 = *(unsigned char *)(a1 + v2[11]);
  type metadata accessor for TriggerBuilder();
  uint64_t v11 = swift_allocObject();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_251F34F40();
  *(void *)(v11 + 16) = v8;
  *(void *)(v11 + 24) = v7;
  *(void *)(v11 + 40) = v4;
  *(void *)(v11 + 48) = v5;
  *(void *)(v11 + 56) = v6;
  *(unsigned char *)(v11 + 64) = v13;
  *(unsigned char *)(v11 + 32) = v9;
  *(unsigned char *)(v11 + 65) = v10;
  sub_251A5E364(a1, (uint64_t (*)(void))type metadata accessor for StaticTrigger);
  return v11;
}

uint64_t TriggerBuilder.__allocating_init(trigger:)(void *a1)
{
  uint64_t v2 = type metadata accessor for StaticTrigger();
  uint64_t v3 = (int *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = a1;
  StaticTrigger.init(trigger:)(v6, (uint64_t)v5);
  uint64_t v7 = &v5[v3[7]];
  uint64_t v8 = *(void *)&v5[v3[9]];
  uint64_t v9 = *(void *)&v5[v3[10]];
  uint64_t v10 = *(void *)&v5[v3[11]];
  int v11 = v5[v3[12]];
  uint64_t v13 = *(void *)v7;
  uint64_t v12 = *((void *)v7 + 1);
  char v14 = v5[v3[8]];
  int v18 = v5[v3[13]];
  int v19 = v11;
  type metadata accessor for TriggerBuilder();
  uint64_t v15 = swift_allocObject();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_251F34F40();
  *(void *)(v15 + 16) = v13;
  *(void *)(v15 + 24) = v12;
  *(void *)(v15 + 40) = v8;
  *(void *)(v15 + 48) = v9;
  *(void *)(v15 + 56) = v10;
  *(unsigned char *)(v15 + 64) = v19;
  *(unsigned char *)(v15 + 32) = v14;
  *(unsigned char *)(v15 + 65) = v18;
  sub_251A5E364((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticTrigger);

  return v15;
}

uint64_t TriggerBuilder.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC13HomeDataModel14TriggerBuilder___observationRegistrar;
  uint64_t v2 = sub_251F34F50();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t TriggerBuilder.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC13HomeDataModel14TriggerBuilder___observationRegistrar;
  uint64_t v2 = sub_251F34F50();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t TriggerBuilder.createNewTrigger(in:)(uint64_t a1)
{
  v2[16] = a1;
  v2[17] = v1;
  uint64_t v3 = sub_251F34FE0();
  v2[18] = v3;
  v2[19] = *(void *)(v3 - 8);
  v2[20] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251A5AAFC, 0, 0);
}

uint64_t sub_251A5AAFC()
{
  uint64_t v12 = v0;
  uint64_t v2 = v0[19];
  uint64_t v1 = v0[20];
  uint64_t v4 = v0[17];
  uint64_t v3 = v0[18];
  uint64_t v5 = (void *)v0[16];
  char v11 = 0;
  sub_251F34FD0();
  v0[21] = _s2os6LoggerV13HomeDataModelE11AutomationsV8didBegin_7trigger2idAA23OSSignpostIntervalStateCAF9OperationO_AD14TriggerBuilderCAA0K2IDVtFZ_0(&v11, v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  id v6 = sub_251A5AF54(v5);
  v0[22] = v6;
  id v7 = v6;
  uint64_t v8 = (void *)v0[16];
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_251A5ACE0;
  uint64_t v9 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_251A5B1C0;
  v0[13] = &block_descriptor;
  v0[14] = v9;
  objc_msgSend(v8, sel_hdm_addEventTriggerFromBuilder_completionHandler_, v7, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_251A5ACE0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 184) = v1;
  if (v1) {
    uint64_t v2 = sub_251A5AE98;
  }
  else {
    uint64_t v2 = sub_251A5ADF0;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_251A5ADF0()
{
  id v6 = v0;
  uint64_t v1 = v0[21];
  uint64_t v2 = v0[15];
  char v5 = 0;
  _s2os6LoggerV13HomeDataModelE11AutomationsV9didFinish_5state5erroryAF9OperationO_AA23OSSignpostIntervalStateCs5Error_pSgtFZ_0(&v5, v1, 0);
  swift_unknownObjectRelease();
  swift_release();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(uint64_t))v0[1];
  return v3(v2);
}

uint64_t sub_251A5AE98()
{
  uint64_t v7 = v0;
  swift_willThrow();
  swift_unknownObjectRelease();
  uint64_t v1 = (void *)v0[23];
  uint64_t v2 = v0[21];
  v6[0] = 0;
  id v3 = v1;
  _s2os6LoggerV13HomeDataModelE11AutomationsV9didFinish_5state5erroryAF9OperationO_AA23OSSignpostIntervalStateCs5Error_pSgtFZ_0(v6, v2, v1);

  swift_willThrow();
  swift_release();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

id sub_251A5AF54(void *a1)
{
  swift_getKeyPath();
  sub_251A5DCD0(&qword_269B9D168, (void (*)(uint64_t))type metadata accessor for TriggerBuilder);
  sub_251F34F10();
  swift_release();
  swift_beginAccess();
  id v4 = a1;
  uint64_t v5 = swift_bridgeObjectRetain();
  sub_251A5D54C(v5, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for Event, (uint64_t (*)(void))type metadata accessor for Event, (void (*)(uint64_t *__return_ptr, char *, uint64_t))sub_251A5CD50, (uint64_t (*)(void))type metadata accessor for Event);
  swift_bridgeObjectRelease();

  swift_getKeyPath();
  uint64_t v10 = v1;
  sub_251F34F10();
  swift_release();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  id v6 = (void *)sub_251F356C0();
  swift_bridgeObjectRelease();
  sub_251A1A568(0, (unint64_t *)&unk_269BA0320);
  uint64_t v7 = (void *)sub_251F35AA0();
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(v4, sel_hdm_newEventTriggerBuilderWithName_events_, v6, v7, v10);

  if (v8)
  {
    sub_251A5B89C(v8, v4);
    if (v2) {
      swift_unknownObjectRelease();
    }
  }
  else
  {
    sub_251A5DC7C();
    swift_allocError();
    swift_willThrow();
  }
  return v8;
}

uint64_t sub_251A5B1C0(uint64_t result, void *a2, void *a3)
{
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D1B0);
    swift_allocError();
    *id v4 = a3;
    id v5 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else if (a2)
  {
    **(void **)(*(void *)(*(void *)(result + 32) + 64) + 40) = a2;
    id v6 = a2;
    return swift_continuation_throwingResume();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t TriggerBuilder.update(trigger:in:)(uint64_t a1, uint64_t a2)
{
  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  uint64_t v4 = sub_251F34FE0();
  v3[18] = v4;
  v3[19] = *(void *)(v4 - 8);
  v3[20] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251A5B344, 0, 0);
}

uint64_t sub_251A5B344()
{
  uint64_t v19 = v0;
  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v4 = *(void *)(v0 + 136);
  uint64_t v3 = *(void *)(v0 + 144);
  id v5 = *(void **)(v0 + 120);
  char v17 = 1;
  sub_251F34FD0();
  *(void *)(v0 + 168) = _s2os6LoggerV13HomeDataModelE11AutomationsV8didBegin_7trigger2idAA23OSSignpostIntervalStateCAF9OperationO_AD14TriggerBuilderCAA0K2IDVtFZ_0(&v17, v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  id v6 = objc_msgSend(v5, sel_copyAsBuilder);
  *(void *)(v0 + 176) = v6;
  if (v6)
  {
    uint64_t v7 = v6;
    self;
    id v8 = (void *)swift_dynamicCastObjCClass();
    if (v8)
    {
      uint64_t v9 = v8;
      sub_251A5B89C(v8, *(void **)(v0 + 128));
      uint64_t v15 = *(void **)(v0 + 120);
      *(void *)(v0 + 16) = v0;
      *(void *)(v0 + 24) = sub_251A5B58C;
      uint64_t v16 = swift_continuation_init();
      *(void *)(v0 + 80) = MEMORY[0x263EF8330];
      *(void *)(v0 + 88) = 0x40000000;
      *(void *)(v0 + 96) = sub_251A5B804;
      *(void *)(v0 + 104) = &block_descriptor_28;
      *(void *)(v0 + 112) = v16;
      objc_msgSend(v15, sel_updateWithBuilder_completionHandler_, v9, v0 + 80);
      return MEMORY[0x270FA23F0](v0 + 16);
    }
  }
  sub_251A5DC7C();
  uint64_t v10 = (void *)swift_allocError();
  swift_willThrow();
  uint64_t v11 = *(void *)(v0 + 168);
  v18[0] = 1;
  id v12 = v10;
  _s2os6LoggerV13HomeDataModelE11AutomationsV9didFinish_5state5erroryAF9OperationO_AA23OSSignpostIntervalStateCs5Error_pSgtFZ_0(v18, v11, v10);

  swift_willThrow();
  swift_release();
  swift_task_dealloc();
  uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

uint64_t sub_251A5B58C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 184) = v1;
  if (v1) {
    uint64_t v2 = sub_251A5B748;
  }
  else {
    uint64_t v2 = sub_251A5B69C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_251A5B69C()
{
  uint64_t v9 = v0;
  uint64_t v1 = v0[21];
  uint64_t v2 = (void *)v0[22];
  uint64_t v3 = (void *)v0[15];
  char v8 = 1;
  _s2os6LoggerV13HomeDataModelE11AutomationsV9didFinish_5state5erroryAF9OperationO_AA23OSSignpostIntervalStateCs5Error_pSgtFZ_0(&v8, v1, 0);

  swift_release();
  id v4 = v3;
  swift_task_dealloc();
  id v5 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v6 = v0[15];
  return v5(v6);
}

uint64_t sub_251A5B748()
{
  char v8 = v0;
  uint64_t v1 = (void *)v0[22];
  swift_willThrow();

  uint64_t v2 = (void *)v0[23];
  uint64_t v3 = v0[21];
  v7[0] = 1;
  id v4 = v2;
  _s2os6LoggerV13HomeDataModelE11AutomationsV9didFinish_5state5erroryAF9OperationO_AA23OSSignpostIntervalStateCs5Error_pSgtFZ_0(v7, v3, v2);

  swift_willThrow();
  swift_release();
  swift_task_dealloc();
  id v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_251A5B804(uint64_t a1, void *a2)
{
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D1B0);
    swift_allocError();
    *uint64_t v3 = a2;
    id v4 = a2;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    return swift_continuation_throwingResume();
  }
}

void sub_251A5B89C(void *a1, void *a2)
{
  uint64_t v3 = v2;
  swift_getObjectType();
  swift_getKeyPath();
  uint64_t v21 = v2;
  sub_251A5DCD0(&qword_269B9D168, (void (*)(uint64_t))type metadata accessor for TriggerBuilder);
  sub_251F34F10();
  swift_release();
  swift_beginAccess();
  objc_msgSend(a1, sel_setEnabled_, *(unsigned __int8 *)(v2 + 32));
  swift_getKeyPath();
  uint64_t v20 = v2;
  sub_251F34F10();
  swift_release();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v6 = (void *)sub_251F356C0();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setName_, v6);

  swift_getKeyPath();
  uint64_t v19 = v2;
  sub_251F34F10();
  swift_release();
  swift_beginAccess();
  id v7 = a2;
  uint64_t v8 = swift_bridgeObjectRetain();
  sub_251A5D54C(v8, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for Event, (uint64_t (*)(void))type metadata accessor for Event, (void (*)(uint64_t *__return_ptr, char *, uint64_t))sub_251A5CD50, (uint64_t (*)(void))type metadata accessor for Event);
  swift_bridgeObjectRelease();

  sub_251A1A568(0, (unint64_t *)&unk_269BA0320);
  uint64_t v9 = (void *)sub_251F35AA0();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setEvents_, v9);

  swift_getKeyPath();
  _OWORD v18[3] = v20;
  sub_251F34F10();
  swift_release();
  swift_beginAccess();
  objc_msgSend(a1, sel_setExecuteOnce_, *(unsigned __int8 *)(v20 + 64));
  sub_251A5BDD0((uint64_t)v18);
  sub_251D8A754();
  swift_getKeyPath();
  v18[0] = v3;
  sub_251F34F10();
  swift_release();
  swift_beginAccess();
  id v10 = v7;
  uint64_t v11 = swift_bridgeObjectRetain();
  unint64_t v12 = sub_251A5D54C(v11, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for Action, (uint64_t (*)(void))type metadata accessor for Action, (void (*)(uint64_t *__return_ptr, char *, uint64_t))sub_251A5C9D8, (uint64_t (*)(void))type metadata accessor for Action);
  swift_bridgeObjectRelease();

  id v13 = objc_msgSend(a1, sel_triggerOwnedActionSet);
  sub_251EE0F20(v12);
  swift_bridgeObjectRelease();
  sub_251A1A568(0, (unint64_t *)&qword_26B21EB40);
  sub_251A5E2A0();
  char v14 = (void *)sub_251F35E30();
  swift_bridgeObjectRelease();
  objc_msgSend(v13, sel_setActions_, v14);

  sub_251A5C234(v10);
  sub_251A1A568(0, &qword_26B21EB00);
  uint64_t v15 = (void *)sub_251F35AA0();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setActionSets_, v15);

  swift_getKeyPath();
  uint64_t v17 = v3;
  sub_251F34F10();
  swift_release();
  swift_beginAccess();
  id v16 = 0;
  if (*(unsigned char *)(v3 + 65) == 1) {
    id v16 = objc_msgSend(self, sel_deleteAfterExecutionPolicy, v3);
  }
  objc_msgSend(a1, sel_setPolicy_, v16, v17);
}

uint64_t sub_251A5BDD0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v30 = a1;
  uint64_t v31 = type metadata accessor for Event();
  uint64_t v3 = *(void *)(v31 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v31);
  uint64_t v28 = (uint64_t)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v29 = (uint64_t)&v27 - v7;
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  id v10 = (char *)&v27 - v9;
  MEMORY[0x270FA5388](v8);
  unint64_t v12 = (char *)&v27 - v11;
  swift_getKeyPath();
  uint64_t v32 = v1;
  sub_251A5DCD0(&qword_269B9D168, (void (*)(uint64_t))type metadata accessor for TriggerBuilder);
  sub_251F34F10();
  swift_release();
  swift_beginAccess();
  uint64_t v13 = *(void *)(v1 + 40);
  uint64_t v14 = sub_251A53EB8(v13);
  uint64_t v16 = v15;
  char v18 = v17;
  swift_bridgeObjectRetain();
  if ((v18 & 1) == 0)
  {
    while (1)
    {
      int v2 = *(_DWORD *)(v13 + 36);
      if (v2 != v16) {
        break;
      }
      uint64_t v19 = 1 << *(unsigned char *)(v13 + 32);
      if (v14 == v19) {
        goto LABEL_11;
      }
      if (v14 < 0 || v14 >= v19) {
        goto LABEL_19;
      }
      if (((*(void *)(v13 + 56 + (((unint64_t)v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
        goto LABEL_20;
      }
      sub_251A5E2FC(*(void *)(v13 + 48) + *(void *)(v3 + 72) * v14, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for Event);
      sub_251A5E2FC((uint64_t)v12, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for Event);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      swift_bridgeObjectRetain();
      if (EnumCaseMultiPayload == 1) {
        goto LABEL_10;
      }
      sub_251A5E364((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for Event);
      sub_251A5E364((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for Event);
      swift_bridgeObjectRelease();
      uint64_t v14 = sub_251A53F5C(v14, v16, 0, v13);
      uint64_t v16 = v21;
      if (v22) {
        goto LABEL_9;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
LABEL_9:
  __break(1u);
LABEL_10:
  sub_251A5E364((uint64_t)v10, type metadata accessor for Event.TimeEvent);
  sub_251A5E364((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for Event);
  swift_bridgeObjectRelease();
  if (*(_DWORD *)(v13 + 36) != v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
LABEL_11:
  if (v14 == 1 << *(unsigned char *)(v13 + 32))
  {
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v13 = v30;
    goto LABEL_15;
  }
  uint64_t v24 = v29;
  sub_251A54400(v14, v16, 0, v13, v29);
  uint64_t v25 = v28;
  sub_251A5E2FC(v24, v28, (uint64_t (*)(void))type metadata accessor for Event);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v26 = *(void *)(v25 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269B9D120) + 48));
    sub_251A5E364(v25, type metadata accessor for Event.TimeEvent);
    sub_251A5E364(v24, (uint64_t (*)(void))type metadata accessor for Event);
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v13 = v30;
    if (v26)
    {
LABEL_17:
      *(void *)uint64_t v13 = v26;
      return result;
    }
LABEL_15:
    if (qword_269B9C468 == -1)
    {
LABEL_16:
      uint64_t v26 = qword_269BA33A8;
      goto LABEL_17;
    }
LABEL_22:
    uint64_t result = swift_once();
    goto LABEL_16;
  }
  sub_251A5E364(v25, (uint64_t (*)(void))type metadata accessor for Event);
  uint64_t result = sub_251A5E364(v24, (uint64_t (*)(void))type metadata accessor for Event);
  __break(1u);
  return result;
}

uint64_t sub_251A5C234(void *a1)
{
  uint64_t v2 = v1;
  uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)a1;
  id v4 = objc_msgSend(a1, sel_actionSets);
  sub_251A1A568(0, &qword_26B21EB00);
  unint64_t v5 = sub_251F35AC0();

  if (v5 >> 62)
  {
LABEL_26:
    swift_bridgeObjectRetain_n();
    uint64_t v6 = sub_251F366C0();
    swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
    {
LABEL_3:
      uint64_t v35 = v2;
      uint64_t v36 = isUniquelyReferenced_nonNull_native;
      unint64_t v39 = v5 & 0xC000000000000001;
      uint64_t v7 = (void *)MEMORY[0x263F8EE80];
      uint64_t v8 = 4;
      uint64_t v37 = v6;
      unint64_t v38 = v5;
      while (1)
      {
        uint64_t v11 = v8 - 4;
        if (v39)
        {
          id v12 = (id)MEMORY[0x2533AB3A0](v8 - 4, v5);
          uint64_t v13 = v8 - 3;
          if (__OFADD__(v11, 1)) {
            goto LABEL_23;
          }
        }
        else
        {
          id v12 = *(id *)(v5 + 8 * v8);
          uint64_t v13 = v8 - 3;
          if (__OFADD__(v11, 1))
          {
LABEL_23:
            __break(1u);
LABEL_24:
            __break(1u);
LABEL_25:
            __break(1u);
            goto LABEL_26;
          }
        }
        uint64_t v41 = v13;
        id v14 = v12;
        id v15 = objc_msgSend(v12, sel_uniqueIdentifier);
        uint64_t v16 = sub_251F34DA0();
        uint64_t v40 = &v34;
        uint64_t v2 = *(void *)(v16 - 8);
        MEMORY[0x270FA5388](v16);
        char v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
        sub_251F34D80();

        uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v42 = v7;
        unint64_t v5 = (unint64_t)v7;
        unint64_t v20 = sub_2519FE584((uint64_t)v18);
        uint64_t v21 = v7[2];
        BOOL v22 = (v19 & 1) == 0;
        uint64_t v23 = v21 + v22;
        if (__OFADD__(v21, v22)) {
          goto LABEL_24;
        }
        char v24 = v19;
        if (v7[3] >= v23)
        {
          if (isUniquelyReferenced_nonNull_native)
          {
            uint64_t v7 = v42;
            if (v19) {
              goto LABEL_4;
            }
          }
          else
          {
            unint64_t v5 = (unint64_t)&v42;
            sub_251A139F0();
            uint64_t v7 = v42;
            if (v24) {
              goto LABEL_4;
            }
          }
        }
        else
        {
          sub_251A04644(v23, isUniquelyReferenced_nonNull_native);
          unint64_t v5 = (unint64_t)v42;
          unint64_t v25 = sub_2519FE584((uint64_t)v18);
          if ((v24 & 1) != (v26 & 1))
          {
            uint64_t result = sub_251F36BA0();
            __break(1u);
            return result;
          }
          unint64_t v20 = v25;
          uint64_t v7 = v42;
          if (v24)
          {
LABEL_4:
            uint64_t v9 = v7[7];

            *(void *)(v9 + 8 * v20) = v14;
            goto LABEL_5;
          }
        }
        v7[(v20 >> 6) + 8] |= 1 << v20;
        (*(void (**)(unint64_t, char *, uint64_t))(v2 + 16))(v7[6] + *(void *)(v2 + 72) * v20, v18, v16);
        *(void *)(v7[7] + 8 * v20) = v14;
        uint64_t v27 = v7[2];
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28) {
          goto LABEL_25;
        }
        v7[2] = v29;
LABEL_5:
        swift_bridgeObjectRelease();
        id v10 = *(void (**)(char *, uint64_t))(v2 + 8);
        v2 += 8;
        v10(v18, v16);
        ++v8;
        unint64_t v5 = v38;
        if (v41 == v37)
        {
          swift_bridgeObjectRelease();
          uint64_t v2 = v35;
          uint64_t isUniquelyReferenced_nonNull_native = v36;
          goto LABEL_28;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v7 = (void *)MEMORY[0x263F8EE80];
LABEL_28:
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  uint64_t v42 = (void *)v2;
  sub_251A5DCD0(&qword_269B9D168, (void (*)(uint64_t))type metadata accessor for TriggerBuilder);
  sub_251F34F10();
  swift_release();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  id v30 = (id)isUniquelyReferenced_nonNull_native;
  uint64_t v31 = swift_bridgeObjectRetain();
  uint64_t v32 = sub_251A5D850(v31, (uint64_t)v7, v30);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();

  return v32;
}

void sub_251A5C66C(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
  if (*(void *)(a2 + 16) && (unint64_t v9 = sub_2519FE584(a1), (v10 & 1) != 0))
  {
    uint64_t v11 = *(void **)(*(void *)(a2 + 56) + 8 * v9);
    *a4 = v11;
    id v12 = v11;
  }
  else
  {
    if (qword_269B9C320 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_251F350A0();
    __swift_project_value_buffer(v13, (uint64_t)qword_269B9FBF0);
    uint64_t v14 = sub_251F34DA0();
    uint64_t v35 = &v29;
    uint64_t v15 = *(void *)(v14 - 8);
    MEMORY[0x270FA5388](v14);
    uint64_t v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a1, v14);
    id v18 = a3;
    char v19 = sub_251F35080();
    os_log_type_t v20 = sub_251F35FB0();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = swift_slowAlloc();
      uint64_t v34 = v4;
      uint64_t v22 = v21;
      uint64_t v31 = (void *)swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      uint64_t v37 = v32;
      *(_DWORD *)uint64_t v22 = 136315394;
      uint64_t v33 = a4;
      sub_251A1A8EC((unint64_t *)&qword_26B21E6B0);
      os_log_t v30 = v19;
      uint64_t v23 = sub_251F36AB0();
      uint64_t v36 = sub_251A00E84(v23, v24, &v37);
      a4 = v33;
      sub_251F361D0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
      *(_WORD *)(v22 + 12) = 2112;
      uint64_t v36 = (uint64_t)v18;
      id v25 = v18;
      sub_251F361D0();
      char v26 = v31;
      *uint64_t v31 = v18;

      os_log_t v27 = v30;
      _os_log_impl(&dword_2519F3000, v30, v20, "Failed to find action set with identifier %s in home %@", (uint8_t *)v22, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v26, -1, -1);
      uint64_t v28 = v32;
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v28, -1, -1);
      MEMORY[0x2533AC760](v22, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    }
    *a4 = 0;
  }
}

HMAction sub_251A5C9D8@<X0>(uint64_t a1@<X0>, HMHome a2@<X1>, HMAction *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for Action();
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  unint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v30 - v10;
  result.super.isa = Action.createAction(in:)(a2).super.isa;
  if (v13.super.isa)
  {
    if (qword_269B9C320 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_251F350A0();
    __swift_project_value_buffer(v14, (uint64_t)qword_269B9FBF0);
    sub_251A5E2FC(a1, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for Action);
    uint64_t v15 = v13.super.isa;
    uint64_t v16 = v13.super.isa;
    uint64_t v17 = sub_251F35080();
    os_log_type_t v18 = sub_251F35FB0();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = swift_slowAlloc();
      uint64_t v34 = a3;
      uint64_t v20 = v19;
      uint64_t v31 = (void *)swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      uint64_t v36 = v33;
      *(_DWORD *)uint64_t v20 = 138412546;
      uint64_t v21 = v13.super.isa;
      uint64_t v22 = _swift_stdlib_bridgeErrorToNSError();
      os_log_t v32 = v17;
      uint64_t v23 = v22;
      uint64_t v35 = v22;
      sub_251F361D0();
      unint64_t v24 = v31;
      *uint64_t v31 = v23;

      *(_WORD *)(v20 + 12) = 2080;
      sub_251A5E2FC((uint64_t)v9, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for Action);
      uint64_t v25 = sub_251F35770();
      uint64_t v35 = sub_251A00E84(v25, v26, &v36);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      sub_251A5E364((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for Action);
      os_log_t v27 = v32;
      _os_log_impl(&dword_2519F3000, v32, v18, "Error: %@ creating action from %s", (uint8_t *)v20, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v24, -1, -1);
      uint64_t v28 = v33;
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v28, -1, -1);
      uint64_t v29 = v20;
      a3 = v34;
      MEMORY[0x2533AC760](v29, -1, -1);
    }
    else
    {

      sub_251A5E364((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for Action);
    }
    result.super.isa = 0;
  }
  a3->super.isa = result.super.isa;
  return result;
}

HMEvent sub_251A5CD50@<X0>(uint64_t a1@<X0>, HMHome a2@<X1>, HMEvent *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for Event();
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  unint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v30 - v10;
  result.super.isa = Event.createEvent(in:)(a2).super.isa;
  if (v13.super.isa)
  {
    if (qword_269B9C320 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_251F350A0();
    __swift_project_value_buffer(v14, (uint64_t)qword_269B9FBF0);
    sub_251A5E2FC(a1, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for Event);
    uint64_t v15 = v13.super.isa;
    uint64_t v16 = v13.super.isa;
    uint64_t v17 = sub_251F35080();
    os_log_type_t v18 = sub_251F35FB0();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = swift_slowAlloc();
      uint64_t v34 = a3;
      uint64_t v20 = v19;
      uint64_t v31 = (void *)swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      uint64_t v36 = v33;
      *(_DWORD *)uint64_t v20 = 138412546;
      uint64_t v21 = v13.super.isa;
      uint64_t v22 = _swift_stdlib_bridgeErrorToNSError();
      os_log_t v32 = v17;
      uint64_t v23 = v22;
      uint64_t v35 = v22;
      sub_251F361D0();
      unint64_t v24 = v31;
      *uint64_t v31 = v23;

      *(_WORD *)(v20 + 12) = 2080;
      sub_251A5E2FC((uint64_t)v9, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for Event);
      uint64_t v25 = sub_251F35770();
      uint64_t v35 = sub_251A00E84(v25, v26, &v36);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      sub_251A5E364((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for Event);
      os_log_t v27 = v32;
      _os_log_impl(&dword_2519F3000, v32, v18, "Error: %@ creating event from %s", (uint8_t *)v20, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v24, -1, -1);
      uint64_t v28 = v33;
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v28, -1, -1);
      uint64_t v29 = v20;
      a3 = v34;
      MEMORY[0x2533AC760](v29, -1, -1);
    }
    else
    {

      sub_251A5E364((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for Event);
    }
    result.super.isa = 0;
  }
  a3->super.isa = result.super.isa;
  return result;
}

uint64_t TriggerBuilder.debugDescription.getter()
{
  return 0;
}

uint64_t sub_251A5D528()
{
  return TriggerBuilder.debugDescription.getter();
}

uint64_t sub_251A5D54C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void), void (*a5)(uint64_t *__return_ptr, char *, uint64_t), uint64_t (*a6)(void))
{
  void (*v30)(uint64_t *__return_ptr, char *, uint64_t);
  uint64_t (*v31)(void);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  uint64_t v30 = a5;
  uint64_t v31 = a6;
  uint64_t v29 = a2;
  uint64_t v9 = a3(0);
  uint64_t v28 = *(void *)(v9 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  id v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v26 - v13;
  uint64_t v34 = MEMORY[0x263F8EE78];
  uint64_t v15 = *(void *)(a1 + 56);
  uint64_t v26 = a1 + 56;
  uint64_t v16 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & v15;
  int64_t v27 = (unint64_t)(v16 + 63) >> 6;
  os_log_t v32 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v20 = 0;
  while (1)
  {
    if (v18)
    {
      unint64_t v21 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v22 = v21 | (v20 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v20++, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v20 >= v27) {
      goto LABEL_29;
    }
    unint64_t v24 = *(void *)(v26 + 8 * v20);
    if (!v24) {
      break;
    }
LABEL_18:
    unint64_t v18 = (v24 - 1) & v24;
    unint64_t v22 = __clz(__rbit64(v24)) + (v20 << 6);
LABEL_19:
    sub_251A5E2FC(*(void *)(v32 + 48) + *(void *)(v28 + 72) * v22, (uint64_t)v14, a4);
    sub_251A5E3C4((uint64_t)v14, (uint64_t)v12, a4);
    v30(&v33, v12, v29);
    uint64_t result = sub_251A5E364((uint64_t)v12, v31);
    if (v6)
    {
      swift_release();
      return swift_bridgeObjectRelease();
    }
    if (v33)
    {
      MEMORY[0x2533AA9D0](result);
      if (*(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_251F35B10();
      }
      sub_251F35B70();
      uint64_t result = sub_251F35AE0();
    }
  }
  int64_t v25 = v20 + 1;
  if (v20 + 1 >= v27) {
    goto LABEL_29;
  }
  unint64_t v24 = *(void *)(v26 + 8 * v25);
  if (v24) {
    goto LABEL_17;
  }
  int64_t v25 = v20 + 2;
  if (v20 + 2 >= v27) {
    goto LABEL_29;
  }
  unint64_t v24 = *(void *)(v26 + 8 * v25);
  if (v24) {
    goto LABEL_17;
  }
  int64_t v25 = v20 + 3;
  if (v20 + 3 >= v27) {
    goto LABEL_29;
  }
  unint64_t v24 = *(void *)(v26 + 8 * v25);
  if (v24) {
    goto LABEL_17;
  }
  int64_t v25 = v20 + 4;
  if (v20 + 4 >= v27)
  {
LABEL_29:
    swift_release();
    return v34;
  }
  unint64_t v24 = *(void *)(v26 + 8 * v25);
  if (v24)
  {
LABEL_17:
    int64_t v20 = v25;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v20 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v20 >= v27) {
      goto LABEL_29;
    }
    unint64_t v24 = *(void *)(v26 + 8 * v20);
    ++v25;
    if (v24) {
      goto LABEL_18;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_251A5D850(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v29 = a2;
  uint64_t v30 = a3;
  uint64_t v32 = MEMORY[0x263F8EE78];
  uint64_t v5 = *(void *)(a1 + 56);
  uint64_t v27 = a1 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & v5;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t v26 = (uint64_t)&v26;
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v28 = (unint64_t)(v6 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v13 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v13 << 6);
      goto LABEL_20;
    }
    if (__OFADD__(v13++, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v13 >= v28) {
      goto LABEL_31;
    }
    unint64_t v17 = *(void *)(v27 + 8 * v13);
    if (!v17) {
      break;
    }
LABEL_19:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v13 << 6);
LABEL_20:
    uint64_t v19 = *(void *)(a1 + 48);
    uint64_t v20 = sub_251F34DA0();
    uint64_t v21 = *(void *)(v20 - 8);
    (*(void (**)(char *, unint64_t, uint64_t))(v21 + 16))(v11, v19 + *(void *)(v21 + 72) * v15, v20);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v11, 0, 1, v20);
    uint64_t v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48))(v11, 1, v20);
    if (v22 == 1)
    {
      swift_release();
      return v32;
    }
    MEMORY[0x270FA5388](v22);
    unint64_t v24 = (char *)&v26 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v24, v11, v20);
    sub_251A5C66C((uint64_t)v24, v29, v30, &v31);
    if (v3)
    {
      (*(void (**)(char *, uint64_t))(v21 + 8))(v24, v20);
      swift_release();
      return swift_bridgeObjectRelease();
    }
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v24, v20);
    if (v31)
    {
      MEMORY[0x2533AA9D0](result);
      if (*(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_251F35B10();
      }
      sub_251F35B70();
      uint64_t result = sub_251F35AE0();
    }
  }
  int64_t v18 = v13 + 1;
  if (v13 + 1 >= v28) {
    goto LABEL_31;
  }
  unint64_t v17 = *(void *)(v27 + 8 * v18);
  if (v17) {
    goto LABEL_18;
  }
  int64_t v18 = v13 + 2;
  if (v13 + 2 >= v28) {
    goto LABEL_31;
  }
  unint64_t v17 = *(void *)(v27 + 8 * v18);
  if (v17) {
    goto LABEL_18;
  }
  int64_t v18 = v13 + 3;
  if (v13 + 3 >= v28) {
    goto LABEL_31;
  }
  unint64_t v17 = *(void *)(v27 + 8 * v18);
  if (v17) {
    goto LABEL_18;
  }
  int64_t v18 = v13 + 4;
  if (v13 + 4 >= v28)
  {
LABEL_31:
    uint64_t v25 = sub_251F34DA0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v11, 1, 1, v25);
    swift_release();
    return v32;
  }
  unint64_t v17 = *(void *)(v27 + 8 * v18);
  if (v17)
  {
LABEL_18:
    int64_t v13 = v18;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v13 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v13 >= v28) {
      goto LABEL_31;
    }
    unint64_t v17 = *(void *)(v27 + 8 * v13);
    ++v18;
    if (v17) {
      goto LABEL_19;
    }
  }
LABEL_34:
  __break(1u);
  return result;
}

unint64_t sub_251A5DC7C()
{
  unint64_t result = qword_269B9D180;
  if (!qword_269B9D180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9D180);
  }
  return result;
}

uint64_t sub_251A5DCD0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_251A5DD18()
{
  return type metadata accessor for TriggerBuilder();
}

uint64_t sub_251A5DD20()
{
  uint64_t result = sub_251F34F50();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for TriggerBuilder(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for TriggerBuilder);
}

uint64_t dispatch thunk of TriggerBuilder.name.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of TriggerBuilder.name.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of TriggerBuilder.name.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of TriggerBuilder.enabled.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of TriggerBuilder.enabled.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of TriggerBuilder.enabled.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of TriggerBuilder.events.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of TriggerBuilder.events.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t dispatch thunk of TriggerBuilder.events.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

uint64_t dispatch thunk of TriggerBuilder.actions.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 312))();
}

uint64_t dispatch thunk of TriggerBuilder.actions.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 320))();
}

uint64_t dispatch thunk of TriggerBuilder.actions.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 328))();
}

uint64_t dispatch thunk of TriggerBuilder.activatedScenes.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 360))();
}

uint64_t dispatch thunk of TriggerBuilder.activatedScenes.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 368))();
}

uint64_t dispatch thunk of TriggerBuilder.activatedScenes.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 376))();
}

uint64_t dispatch thunk of TriggerBuilder.executesOnce.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 408))();
}

uint64_t dispatch thunk of TriggerBuilder.executesOnce.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 416))();
}

uint64_t dispatch thunk of TriggerBuilder.executesOnce.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 424))();
}

uint64_t dispatch thunk of TriggerBuilder.deletesAfterExecution.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 456))();
}

uint64_t dispatch thunk of TriggerBuilder.deletesAfterExecution.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 464))();
}

uint64_t dispatch thunk of TriggerBuilder.deletesAfterExecution.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 472))();
}

uint64_t dispatch thunk of TriggerBuilder.__allocating_init(name:events:actions:activatedScenes:executesOnce:enabled:deletesAfterExecution:)()
{
  return (*(uint64_t (**)(void))(v0 + 480))();
}

unsigned char *storeEnumTagSinglePayload for TriggerBuilder.Error(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x251A5E210);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for TriggerBuilder.Error()
{
  return &type metadata for TriggerBuilder.Error;
}

unint64_t sub_251A5E24C()
{
  unint64_t result = qword_269B9D1A8;
  if (!qword_269B9D1A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9D1A8);
  }
  return result;
}

unint64_t sub_251A5E2A0()
{
  unint64_t result = qword_26B21EB48;
  if (!qword_26B21EB48)
  {
    sub_251A1A568(255, (unint64_t *)&qword_26B21EB40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B21EB48);
  }
  return result;
}

uint64_t sub_251A5E2FC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_251A5E364(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_251A5E3C4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_251A5E42C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  char v2 = *(unsigned char *)(v0 + 24);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 65) = v2;
  return result;
}

uint64_t sub_251A5E480()
{
  uint64_t v1 = *(void *)(v0 + 16);
  char v2 = *(unsigned char *)(v0 + 24);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 64) = v2;
  return result;
}

uint64_t sub_251A5E4D4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  char v2 = *(unsigned char *)(v0 + 24);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(v1 + 32) = v2;
  return result;
}

uint64_t sub_251A5E528()
{
  return sub_251A59A38();
}

uint64_t sub_251A5E540()
{
  return sub_251A59504();
}

uint64_t sub_251A5E558()
{
  return sub_251A58FD0();
}

uint64_t sub_251A5E570()
{
  return sub_251A585EC();
}

uint64_t StaticRVCClusterGroup.changeToCleanMode(containing:)(uint64_t a1)
{
  *(void *)(v2 + 536) = a1;
  long long v3 = v1[13];
  *(_OWORD *)(v2 + 208) = v1[12];
  *(_OWORD *)(v2 + 224) = v3;
  *(_OWORD *)(v2 + 236) = *(_OWORD *)((char *)v1 + 220);
  long long v4 = v1[9];
  *(_OWORD *)(v2 + 144) = v1[8];
  *(_OWORD *)(v2 + 160) = v4;
  long long v5 = v1[11];
  *(_OWORD *)(v2 + 176) = v1[10];
  *(_OWORD *)(v2 + 192) = v5;
  long long v6 = v1[5];
  *(_OWORD *)(v2 + 80) = v1[4];
  *(_OWORD *)(v2 + 96) = v6;
  long long v7 = v1[7];
  *(_OWORD *)(v2 + 112) = v1[6];
  *(_OWORD *)(v2 + 128) = v7;
  long long v8 = v1[1];
  *(_OWORD *)(v2 + 16) = *v1;
  *(_OWORD *)(v2 + 32) = v8;
  long long v9 = v1[3];
  *(_OWORD *)(v2 + 48) = v1[2];
  *(_OWORD *)(v2 + 64) = v9;
  return MEMORY[0x270FA2498](sub_251A5E5EC, 0, 0);
}

uint64_t sub_251A5E5EC()
{
  uint64_t v55 = v0;
  uint64_t v1 = v0 + 16;
  uint64_t v2 = *(void *)(v0 + 120);
  if (!v2 || (uint64_t v49 = *(void *)(v2 + 16)) == 0)
  {
LABEL_28:
    if (qword_26B21ECD0 != -1) {
      swift_once();
    }
    uint64_t v36 = sub_251F350A0();
    __swift_project_value_buffer(v36, (uint64_t)qword_26B21ECB8);
    swift_bridgeObjectRetain();
    sub_251A4DB38(v1);
    swift_bridgeObjectRetain();
    sub_251A4DB38(v1);
    uint64_t v37 = sub_251F35080();
    os_log_type_t v38 = sub_251F35FB0();
    BOOL v39 = os_log_type_enabled(v37, v38);
    uint64_t v40 = *(void *)(v0 + 536);
    if (v39)
    {
      uint64_t v41 = swift_slowAlloc();
      uint64_t v53 = swift_slowAlloc();
      v54[0] = v53;
      *(_DWORD *)uint64_t v41 = 136315650;
      *(void *)(v0 + 504) = sub_251A00E84(0xD00000000000001ELL, 0x8000000251F68510, v54);
      sub_251F361D0();
      *(_WORD *)(v41 + 12) = 2080;
      *(void *)(v0 + 496) = v40;
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D1C0);
      uint64_t v42 = sub_251F35790();
      *(void *)(v0 + 528) = sub_251A00E84(v42, v43, v54);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v41 + 22) = 2080;
      *(void *)(v0 + 512) = v2;
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D1C8);
      uint64_t v44 = sub_251F35790();
      *(void *)(v0 + 520) = sub_251A00E84(v44, v45, v54);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      sub_251A81D30(v1);
      sub_251A81D30(v1);
      _os_log_impl(&dword_2519F3000, v37, v38, "%s Couldn't find a clean mode that contained all the specified tags: %s allRunningModes: %s'", (uint8_t *)v41, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v53, -1, -1);
      MEMORY[0x2533AC760](v41, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      sub_251A81D30(v1);
      sub_251A81D30(v1);
    }

    unint64_t v46 = *(uint64_t (**)(void))(v0 + 8);
    return v46();
  }
  uint64_t v48 = *(void *)(v0 + 120);
  uint64_t v3 = *(void *)(v0 + 536);
  uint64_t v52 = *(void *)(v3 + 16);
  uint64_t v50 = v2 + 32;
  uint64_t v51 = v3 + 32;
  swift_bridgeObjectRetain_n();
  uint64_t v4 = 0;
LABEL_5:
  long long v5 = (uint64_t *)(v50 + 32 * v4);
  uint64_t v6 = *v5;
  *(void *)(v0 + 544) = v5[2];
  uint64_t v7 = v5[3];
  *(void *)(v0 + 552) = v7;
  if (v52)
  {
    ++v4;
    uint64_t v8 = v7 + 56;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v9 = 0;
    while (1)
    {
      if (!*(void *)(v7 + 16)) {
        goto LABEL_4;
      }
      unsigned int v10 = *(unsigned __int8 *)(v51 + v9);
      sub_251F36CA0();
      unsigned int v11 = v10 >> 6;
      sub_251F36CD0();
      sub_251F357B0();
      uint64_t v12 = sub_251F36D00();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = v12 & ~v13;
      if (((*(void *)(v8 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
LABEL_4:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v4 == v49)
        {
          uint64_t v2 = v48;
          swift_bridgeObjectRelease_n();
          uint64_t v1 = v0 + 16;
          goto LABEL_28;
        }
        goto LABEL_5;
      }
      ++v9;
      uint64_t v15 = ~v13;
      while (1)
      {
        unsigned int v16 = *(unsigned __int8 *)(*(void *)(v7 + 48) + v14);
        if (!(v16 >> 6)) {
          break;
        }
        if (v16 >> 6 == 1)
        {
          if (v11 != 1) {
            goto LABEL_11;
          }
        }
        else if (v11 != 2)
        {
          goto LABEL_11;
        }
        if (((v16 ^ v10) & 0x3F) == 0) {
          goto LABEL_21;
        }
LABEL_11:
        unint64_t v14 = (v14 + 1) & v15;
        if (((*(void *)(v8 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
          goto LABEL_4;
        }
      }
      if (v10 > 0x3F || v16 != v10) {
        goto LABEL_11;
      }
LABEL_21:
      if (v9 == v52)
      {
        swift_bridgeObjectRelease();
        goto LABEL_24;
      }
    }
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_24:
  swift_bridgeObjectRelease_n();
  long long v17 = *(_OWORD *)(v0 + 224);
  *(_OWORD *)(v0 + 448) = *(_OWORD *)(v0 + 208);
  *(_OWORD *)(v0 + 464) = v17;
  *(_OWORD *)(v0 + 476) = *(_OWORD *)(v0 + 236);
  long long v18 = *(_OWORD *)(v0 + 160);
  *(_OWORD *)(v0 + 384) = *(_OWORD *)(v0 + 144);
  *(_OWORD *)(v0 + 400) = v18;
  long long v19 = *(_OWORD *)(v0 + 192);
  *(_OWORD *)(v0 + 416) = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v0 + 432) = v19;
  long long v20 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 320) = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 336) = v20;
  long long v21 = *(_OWORD *)(v0 + 128);
  *(_OWORD *)(v0 + 352) = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v0 + 368) = v21;
  long long v22 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 256) = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v0 + 272) = v22;
  long long v23 = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v0 + 288) = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 304) = v23;
  uint64_t v24 = swift_task_alloc();
  *(void *)(v0 + 560) = v24;
  *(void *)uint64_t v24 = v0;
  *(void *)(v24 + 8) = sub_251A5EC40;
  *(void *)(v24 + 328) = v6;
  long long v25 = *(_OWORD *)(v0 + 432);
  long long v26 = *(_OWORD *)(v0 + 448);
  long long v27 = *(_OWORD *)(v0 + 464);
  *(_OWORD *)(v24 + 236) = *(_OWORD *)(v0 + 476);
  *(_OWORD *)(v24 + 208) = v26;
  *(_OWORD *)(v24 + 224) = v27;
  *(_OWORD *)(v24 + 192) = v25;
  long long v28 = *(_OWORD *)(v0 + 368);
  long long v29 = *(_OWORD *)(v0 + 384);
  long long v30 = *(_OWORD *)(v0 + 416);
  *(_OWORD *)(v24 + 160) = *(_OWORD *)(v0 + 400);
  *(_OWORD *)(v24 + 176) = v30;
  *(_OWORD *)(v24 + 128) = v28;
  *(_OWORD *)(v24 + 144) = v29;
  long long v31 = *(_OWORD *)(v0 + 304);
  long long v32 = *(_OWORD *)(v0 + 320);
  long long v33 = *(_OWORD *)(v0 + 352);
  *(_OWORD *)(v24 + 96) = *(_OWORD *)(v0 + 336);
  *(_OWORD *)(v24 + 112) = v33;
  *(_OWORD *)(v24 + 64) = v31;
  *(_OWORD *)(v24 + 80) = v32;
  long long v34 = *(_OWORD *)(v0 + 256);
  long long v35 = *(_OWORD *)(v0 + 288);
  *(_OWORD *)(v24 + 32) = *(_OWORD *)(v0 + 272);
  *(_OWORD *)(v24 + 48) = v35;
  *(_OWORD *)(v24 + 16) = v34;
  return MEMORY[0x270FA2498](sub_251A5EDCC, 0, 0);
}

uint64_t sub_251A5EC40()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t StaticRVCClusterGroup.changeToCleanMode(index:)(uint64_t a1)
{
  *(void *)(v2 + 328) = a1;
  long long v3 = v1[13];
  *(_OWORD *)(v2 + 208) = v1[12];
  *(_OWORD *)(v2 + 224) = v3;
  *(_OWORD *)(v2 + 236) = *(_OWORD *)((char *)v1 + 220);
  long long v4 = v1[9];
  *(_OWORD *)(v2 + 144) = v1[8];
  *(_OWORD *)(v2 + 160) = v4;
  long long v5 = v1[11];
  *(_OWORD *)(v2 + 176) = v1[10];
  *(_OWORD *)(v2 + 192) = v5;
  long long v6 = v1[5];
  *(_OWORD *)(v2 + 80) = v1[4];
  *(_OWORD *)(v2 + 96) = v6;
  long long v7 = v1[7];
  *(_OWORD *)(v2 + 112) = v1[6];
  *(_OWORD *)(v2 + 128) = v7;
  long long v8 = v1[1];
  *(_OWORD *)(v2 + 16) = *v1;
  *(_OWORD *)(v2 + 32) = v8;
  long long v9 = v1[3];
  *(_OWORD *)(v2 + 48) = v1[2];
  *(_OWORD *)(v2 + 64) = v9;
  return MEMORY[0x270FA2498](sub_251A5EDCC, 0, 0);
}

uint64_t sub_251A5EDCC()
{
  uint64_t v1 = *(void *)(v0 + 328);
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F10F48]), sel_init);
  *(void *)(v0 + 336) = v2;
  long long v3 = (void *)sub_251F361C0();
  objc_msgSend(v2, sel_setNewMode_, v3);

  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D1D8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_251F38650;
  *(_DWORD *)(inited + 32) = 1;
  *(void *)(inited + 40) = v1;
  *(unsigned char *)(inited + 48) = 2;
  unint64_t v5 = sub_251A19C30(inited);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CE50);
  swift_arrayDestroy();
  uint64_t v6 = *(void *)(v0 + 16);
  *(void *)(v0 + 344) = v6;
  LOWORD(v2) = *(_WORD *)(v0 + 24);
  *(_WORD *)(v0 + 252) = (_WORD)v2;
  *(unsigned char *)(v0 + 254) = *(unsigned char *)(v0 + 26);
  sub_251AA4920(v5);
  *(void *)(v0 + 352) = v7;
  swift_bridgeObjectRelease();
  sub_251A4DB38(v0 + 16);
  sub_251A1A568(0, &qword_269B9D1E0);
  *(void *)(v0 + 312) = v6;
  *(_WORD *)(v0 + 320) = (_WORD)v2;
  *(unsigned char *)(v0 + 322) = 25;
  long long v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 360) = v8;
  *long long v8 = v0;
  v8[1] = sub_251A5EFA0;
  return sub_251C4E0D4((uint64_t *)(v0 + 312));
}

uint64_t sub_251A5EFA0(uint64_t a1)
{
  uint64_t v2 = *(void *)v1 + 16;
  *(void *)(*(void *)v1 + 368) = a1;
  swift_task_dealloc();
  sub_251A81D30(v2);
  return MEMORY[0x270FA2498](sub_251A5F0AC, 0, 0);
}

uint64_t sub_251A5F0AC()
{
  uint64_t v1 = *(void *)(v0 + 352);
  id v2 = *(id *)(v0 + 336);
  ClusterPath.description.getter();
  sub_251F35800();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 376) = 0x8000000251F68280;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_269B9D6E0
                                                                                             + dword_269B9D6E0);
  long long v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 384) = v3;
  *long long v3 = v0;
  v3[1] = sub_251A5F1EC;
  uint64_t v4 = *(void *)(v0 + 368);
  uint64_t v5 = *(void *)(v0 + 336);
  return v7(0x6F5465676E616863, 0xEC00000065646F4DLL, v4, v1, 0xD000000000000016, 0x8000000251F68280, v5);
}

uint64_t sub_251A5F1EC()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 368);
  id v2 = *(void **)(*(void *)v0 + 336);
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA2498](sub_251A5F358, 0, 0);
}

uint64_t sub_251A5F358()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251A5F3B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[19] = a4;
  v5[20] = a5;
  v5[17] = a2;
  v5[18] = a3;
  v5[16] = a1;
  return MEMORY[0x270FA2498](sub_251A5F3E0, 0, 0);
}

uint64_t sub_251A5F3E0()
{
  uint64_t v1 = v0[18];
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA5550);
    uint64_t v1 = sub_251F35AA0();
  }
  v0[21] = v1;
  uint64_t v3 = v0[19];
  uint64_t v2 = v0[20];
  uint64_t v4 = (void *)v0[17];
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_251A5F524;
  uint64_t v5 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_251A5B1C0;
  v0[13] = &block_descriptor_0;
  v0[14] = v5;
  objc_msgSend(v4, sel_changeToModeWithParams_expectedValues_expectedValueInterval_completion_, v2, v1, v3, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_251A5F524()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 176) = v1;
  if (v1) {
    uint64_t v2 = sub_251A5F6C4;
  }
  else {
    uint64_t v2 = sub_251A5F634;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_251A5F634()
{
  uint64_t v1 = (void *)v0[21];
  uint64_t v3 = v0[15];
  uint64_t v2 = (void *)v0[16];
  v2[3] = sub_251A1A568(0, &qword_269B9D310);
  *uint64_t v2 = v3;

  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_251A5F6C4()
{
  uint64_t v1 = *(void **)(v0 + 168);
  swift_willThrow();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

double StaticRVCClusterGroup.vacuumMode.getter@<D0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 104);
  if (v3)
  {
    uint64_t v4 = *(void *)(v3 + 16);
    if (v4)
    {
      swift_bridgeObjectRetain_n();
      for (uint64_t i = 0; i != v4; ++i)
      {
        uint64_t v6 = (uint64_t *)(v3 + 32 + 32 * i);
        uint64_t v7 = v6[3];
        if (*(void *)(v7 + 16))
        {
          uint64_t v8 = *v6;
          uint64_t v20 = v6[1];
          uint64_t v9 = v6[2];
          sub_251F36CA0();
          sub_251F36CD0();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_251F357B0();
          uint64_t v10 = sub_251F36D00();
          uint64_t v11 = -1 << *(unsigned char *)(v7 + 32);
          unint64_t v12 = v10 & ~v11;
          uint64_t v13 = v7 + 56;
          if ((*(void *)(v7 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
          {
            uint64_t v14 = ~v11;
            while ((*(unsigned char *)(*(void *)(v7 + 48) + v12) & 0xBF) != 0x81)
            {
              unint64_t v12 = (v12 + 1) & v14;
              if (((*(void *)(v13 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
                goto LABEL_4;
              }
            }
            if (!*(void *)(v7 + 16)
              || (sub_251F36CA0(),
                  sub_251F36CD0(),
                  sub_251F357B0(),
                  uint64_t v15 = sub_251F36D00(),
                  uint64_t v16 = -1 << *(unsigned char *)(v7 + 32),
                  unint64_t v17 = v15 & ~v16,
                  ((*(void *)(v13 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17) & 1) == 0))
            {
LABEL_17:
              swift_bridgeObjectRelease_n();
              *a1 = v8;
              a1[1] = v20;
              a1[2] = v9;
              a1[3] = v7;
              return result;
            }
            uint64_t v18 = ~v16;
            while ((*(unsigned char *)(*(void *)(v7 + 48) + v17) & 0xBF) != 0x82)
            {
              unint64_t v17 = (v17 + 1) & v18;
              if (((*(void *)(v13 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17) & 1) == 0) {
                goto LABEL_17;
              }
            }
          }
LABEL_4:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
      }
      swift_bridgeObjectRelease_n();
    }
  }
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *((_OWORD *)a1 + 1) = 0u;
  return result;
}

double StaticRVCClusterGroup.mopMode.getter@<D0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 104);
  if (v3)
  {
    uint64_t v4 = *(void *)(v3 + 16);
    if (v4)
    {
      swift_bridgeObjectRetain_n();
      for (uint64_t i = 0; i != v4; ++i)
      {
        uint64_t v6 = (uint64_t *)(v3 + 32 + 32 * i);
        uint64_t v7 = v6[3];
        if (*(void *)(v7 + 16))
        {
          uint64_t v8 = *v6;
          uint64_t v20 = v6[1];
          uint64_t v9 = v6[2];
          sub_251F36CA0();
          sub_251F36CD0();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_251F357B0();
          uint64_t v10 = sub_251F36D00();
          uint64_t v11 = -1 << *(unsigned char *)(v7 + 32);
          unint64_t v12 = v10 & ~v11;
          uint64_t v13 = v7 + 56;
          if ((*(void *)(v7 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
          {
            uint64_t v14 = ~v11;
            while ((*(unsigned char *)(*(void *)(v7 + 48) + v12) & 0xBF) != 0x82)
            {
              unint64_t v12 = (v12 + 1) & v14;
              if (((*(void *)(v13 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
                goto LABEL_4;
              }
            }
            if (!*(void *)(v7 + 16)
              || (sub_251F36CA0(),
                  sub_251F36CD0(),
                  sub_251F357B0(),
                  uint64_t v15 = sub_251F36D00(),
                  uint64_t v16 = -1 << *(unsigned char *)(v7 + 32),
                  unint64_t v17 = v15 & ~v16,
                  ((*(void *)(v13 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17) & 1) == 0))
            {
LABEL_17:
              swift_bridgeObjectRelease_n();
              *a1 = v8;
              a1[1] = v20;
              a1[2] = v9;
              a1[3] = v7;
              return result;
            }
            uint64_t v18 = ~v16;
            while ((*(unsigned char *)(*(void *)(v7 + 48) + v17) & 0xBF) != 0x81)
            {
              unint64_t v17 = (v17 + 1) & v18;
              if (((*(void *)(v13 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17) & 1) == 0) {
                goto LABEL_17;
              }
            }
          }
LABEL_4:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
      }
      swift_bridgeObjectRelease_n();
    }
  }
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *((_OWORD *)a1 + 1) = 0u;
  return result;
}

void StaticRVCClusterGroup.vacuumAndMopCleaningMode.getter(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 104);
  if (v3 && (uint64_t v4 = *(void *)(v3 + 16)) != 0)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v5 = (uint64_t *)(v3 + 56);
    while (1)
    {
      uint64_t v6 = *(v5 - 1);
      uint64_t v7 = *v5;
      uint64_t v9 = *(v5 - 3);
      uint64_t v8 = *(v5 - 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (sub_251A81B84((uint64_t)&unk_270261BB8, v7)) {
        break;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v5 += 4;
      if (!--v4)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease_n();
    *a1 = v9;
    a1[1] = v8;
    a1[2] = v6;
    a1[3] = v7;
  }
  else
  {
LABEL_7:
    *(_OWORD *)a1 = 0u;
    *((_OWORD *)a1 + 1) = 0u;
  }
}

BOOL StaticRVCClusterGroup.canExclusivelyVacuum.getter()
{
  return sub_251A5FC7C((void (*)(uint64_t *__return_ptr))StaticRVCClusterGroup.vacuumMode.getter);
}

BOOL StaticRVCClusterGroup.canExclusivelyMop.getter()
{
  return sub_251A5FC7C((void (*)(uint64_t *__return_ptr))StaticRVCClusterGroup.mopMode.getter);
}

BOOL sub_251A5FC7C(void (*a1)(uint64_t *__return_ptr))
{
  a1(v3);
  uint64_t v1 = v4;
  if (v4) {
    sub_251A4DE90(v3[0], v3[1], v4);
  }
  return v1 != 0;
}

uint64_t StaticRVCClusterGroup.canVacuumAndMopSimultaneously.getter()
{
  uint64_t result = *(void *)(v0 + 104);
  if (result)
  {
    uint64_t v2 = *(void *)(result + 16);
    if (!v2) {
      return 0;
    }
    uint64_t v15 = result + 32;
    swift_bridgeObjectRetain_n();
    uint64_t v3 = 0;
    while (2)
    {
      uint64_t v4 = *(void *)(v15 + 32 * v3 + 24);
      uint64_t v5 = qword_270261BC8;
      if (!qword_270261BC8)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_24;
      }
      ++v3;
      uint64_t v6 = v4 + 56;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v7 = 0;
LABEL_7:
      if (*(void *)(v4 + 16))
      {
        unsigned int v8 = *((unsigned __int8 *)&unk_270261BB8 + v7 + 32);
        sub_251F36CA0();
        unsigned int v9 = v8 >> 6;
        sub_251F36CD0();
        sub_251F357B0();
        uint64_t v10 = sub_251F36D00();
        uint64_t v11 = -1 << *(unsigned char *)(v4 + 32);
        unint64_t v12 = v10 & ~v11;
        if ((*(void *)(v6 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
        {
          ++v7;
          uint64_t v13 = ~v11;
          do
          {
            unsigned int v14 = *(unsigned __int8 *)(*(void *)(v4 + 48) + v12);
            if (v14 >> 6)
            {
              if (v14 >> 6 == 1)
              {
                if (v9 != 1) {
                  goto LABEL_11;
                }
              }
              else if (v9 != 2)
              {
                goto LABEL_11;
              }
              if (((v14 ^ v8) & 0x3F) == 0) {
                goto LABEL_21;
              }
            }
            else if (v8 <= 0x3F && v14 == v8)
            {
LABEL_21:
              if (v7 == v5)
              {
LABEL_24:
                swift_bridgeObjectRelease_n();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                return 1;
              }
              goto LABEL_7;
            }
LABEL_11:
            unint64_t v12 = (v12 + 1) & v13;
          }
          while (((*(void *)(v6 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) != 0);
        }
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v3 != v2) {
        continue;
      }
      break;
    }
    swift_bridgeObjectRelease_n();
    return 0;
  }
  return result;
}

uint64_t StaticRVCClusterGroup.secondaryCleanModeTagsCompatible(vacuum:mop:)(char a1, char a2)
{
  uint64_t v3 = *(void *)(v2 + 104);
  if (!v3) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v4 = MEMORY[0x263F8EE78];
  if (*(void *)(v3 + 16))
  {
    os_log_type_t v38 = (char *)MEMORY[0x263F8EE78];
    uint64_t v7 = sub_251F0F754(0, 1, 1, MEMORY[0x263F8EE78]);
    unint64_t v9 = *((void *)v7 + 2);
    unint64_t v8 = *((void *)v7 + 3);
    unint64_t v10 = v9 + 1;
    if (a1)
    {
      if (v8 >> 1 <= v9) {
        uint64_t v7 = sub_251F0F754((char *)(v8 > 1), v9 + 1, 1, v7);
      }
      *((void *)v7 + 2) = v10;
      v7[v9 + 32] = -127;
      os_log_type_t v38 = v7;
      long long v33 = (char *)MEMORY[0x263F8EE78];
      if ((a2 & 1) == 0)
      {
LABEL_7:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          long long v33 = sub_251F0F754(0, *((void *)v33 + 2) + 1, 1, v33);
        }
        unint64_t v12 = *((void *)v33 + 2);
        unint64_t v11 = *((void *)v33 + 3);
        if (v12 >= v11 >> 1) {
          long long v33 = sub_251F0F754((char *)(v11 > 1), v12 + 1, 1, v33);
        }
        *((void *)v33 + 2) = v12 + 1;
        v33[v12 + 32] = -126;
LABEL_21:
        uint64_t v37 = v4;
        uint64_t v36 = *(void *)(v3 + 16);
        if (!v36)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return v4;
        }
        long long v34 = v7 + 32;
        uint64_t v35 = v3 + 32;
        swift_bridgeObjectRetain();
        uint64_t v15 = 0;
        while (1)
        {
          uint64_t v16 = *(void *)(v35 + 32 * v15 + 24);
          uint64_t v17 = *((void *)v7 + 2);
          if (v17) {
            break;
          }
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_44:
          uint64_t v28 = swift_bridgeObjectRetain();
          char v29 = sub_251A7FCB4(v28, v16);
          swift_bridgeObjectRelease();
          if (v29)
          {
            uint64_t v30 = swift_bridgeObjectRetain();
            uint64_t v31 = sub_251A80B30(v30, (uint64_t)&v38);
            sub_251ED5E7C(v31);
          }
          swift_bridgeObjectRelease();
LABEL_24:
          swift_bridgeObjectRelease();
          if (++v15 == v36)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return v37;
          }
        }
        uint64_t v18 = v16 + 56;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        long long v19 = v7;
        swift_bridgeObjectRetain();
        uint64_t v20 = 0;
LABEL_27:
        if (!*(void *)(v16 + 16)) {
          goto LABEL_23;
        }
        unsigned int v21 = v34[v20];
        sub_251F36CA0();
        unsigned int v22 = v21 >> 6;
        sub_251F36CD0();
        sub_251F357B0();
        uint64_t v23 = sub_251F36D00();
        uint64_t v24 = -1 << *(unsigned char *)(v16 + 32);
        unint64_t v25 = v23 & ~v24;
        if (((*(void *)(v18 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25) & 1) == 0)
        {
LABEL_23:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v7 = v19;
          goto LABEL_24;
        }
        ++v20;
        uint64_t v26 = ~v24;
        while (1)
        {
          unsigned int v27 = *(unsigned __int8 *)(*(void *)(v16 + 48) + v25);
          if (v27 >> 6)
          {
            if (v27 >> 6 == 1)
            {
              if (v22 != 1) {
                goto LABEL_31;
              }
            }
            else if (v22 != 2)
            {
              goto LABEL_31;
            }
            if (((v27 ^ v21) & 0x3F) == 0) {
              goto LABEL_41;
            }
          }
          else if (v21 <= 0x3F && v27 == v21)
          {
LABEL_41:
            if (v20 == v17)
            {
              uint64_t v7 = v19;
              swift_bridgeObjectRelease();
              goto LABEL_44;
            }
            goto LABEL_27;
          }
LABEL_31:
          unint64_t v25 = (v25 + 1) & v26;
          if (((*(void *)(v18 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25) & 1) == 0) {
            goto LABEL_23;
          }
        }
      }
    }
    else
    {
      if (v8 >> 1 <= v9) {
        uint64_t v7 = sub_251F0F754((char *)(v8 > 1), v9 + 1, 1, v7);
      }
      *((void *)v7 + 2) = v10;
      v7[v9 + 32] = -127;
      long long v33 = v7;
      uint64_t v7 = (char *)MEMORY[0x263F8EE78];
      if ((a2 & 1) == 0) {
        goto LABEL_7;
      }
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v7 = sub_251F0F754(0, *((void *)v7 + 2) + 1, 1, v7);
    }
    unint64_t v14 = *((void *)v7 + 2);
    unint64_t v13 = *((void *)v7 + 3);
    if (v14 >= v13 >> 1) {
      uint64_t v7 = sub_251F0F754((char *)(v13 > 1), v14 + 1, 1, v7);
    }
    *((void *)v7 + 2) = v14 + 1;
    v7[v14 + 32] = -126;
    os_log_type_t v38 = v7;
    goto LABEL_21;
  }
  return v4;
}

void StaticRVCClusterGroup.bestFitSelectingPrimaryTags(vacuum:mop:withSecondaryTags:)(char a1@<W0>, char a2@<W1>, uint64_t a3@<X2>, unint64_t a4@<X8>)
{
  uint64_t v7 = *(void *)(v4 + 104);
  if ((a1 & 1) == 0 && (a2 & 1) == 0)
  {
    if (qword_26B21ECD0 != -1) {
      goto LABEL_85;
    }
    goto LABEL_4;
  }
  if (!a3)
  {
    if (*(void *)(v4 + 64))
    {
      uint64_t v37 = swift_bridgeObjectRetain();
      uint64_t v13 = sub_251A80CA8(v37);
      if (v7) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v13 = MEMORY[0x263F8EE88];
      if (v7) {
        goto LABEL_9;
      }
    }
LABEL_44:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    goto LABEL_45;
  }
  uint64_t v13 = a3;
  if (!v7) {
    goto LABEL_44;
  }
LABEL_9:
  unint64_t v63 = a4;
  a4 = MEMORY[0x263F8EE78];
  uint64_t v72 = MEMORY[0x263F8EE78];
  uint64_t v14 = *(void *)(v7 + 16);
  if (!v14)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (*(void *)(a4 + 16))
    {
LABEL_47:
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v62 = v13;
      swift_release();
LABEL_74:
      swift_bridgeObjectRelease();
      uint64_t v13 = v62;
    }
    uint64_t v58 = swift_bridgeObjectRetain();
    uint64_t v59 = sub_251A81E48(v58, v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v59 + 16))
    {
      swift_bridgeObjectRelease();
      a4 = v59;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v71[0] = a4;
    swift_bridgeObjectRetain();
    sub_251A81170(v71);
    swift_bridgeObjectRelease();
    if (*(void *)(v71[0] + 16))
    {
      uint64_t v60 = *(void *)(v71[0] + 48);
      uint64_t v61 = *(void *)(v71[0] + 56);
      *(_OWORD *)unint64_t v63 = *(_OWORD *)(v71[0] + 32);
      *(void *)(v63 + 16) = v60;
      *(void *)(v63 + 24) = v61;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_release();
    }
    else
    {
      swift_release();
      *(_OWORD *)unint64_t v63 = 0u;
      *(_OWORD *)(v63 + 16) = 0u;
    }
    return;
  }
  uint64_t v62 = v13;
  uint64_t v15 = v7 + 32;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  char v16 = a2;
  a4 = 0;
  uint64_t v17 = MEMORY[0x263F8EE78];
  while (a4 < *(void *)(v7 + 16))
  {
    uint64_t v18 = (long long *)(v15 + 32 * a4);
    long long v19 = v18[1];
    if (a1)
    {
      if (v16)
      {
        long long v64 = *v18;
        long long v67 = v18[1];
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        char v20 = sub_251A81B84((uint64_t)&unk_270261BE0, *((uint64_t *)&v67 + 1));
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v20) {
          goto LABEL_18;
        }
        goto LABEL_39;
      }
      uint64_t v26 = *((void *)v18 + 3);
      if (!*(void *)(*((void *)&v19 + 1) + 16)) {
        goto LABEL_13;
      }
      long long v64 = *v18;
      long long v67 = v18[1];
      sub_251F36CA0();
      sub_251F36CD0();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      sub_251F357B0();
      uint64_t v31 = sub_251F36D00();
      uint64_t v32 = -1 << *(unsigned char *)(v26 + 32);
      unint64_t v33 = v31 & ~v32;
      if ((*(void *)(v26 + 56 + ((v33 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v33))
      {
        uint64_t v34 = ~v32;
        while ((*(unsigned char *)(*(void *)(v26 + 48) + v33) & 0xBF) != 0x81)
        {
          unint64_t v33 = (v33 + 1) & v34;
          if (((*(void *)(v26 + 56 + ((v33 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v33) & 1) == 0) {
            goto LABEL_11;
          }
        }
        uint64_t v35 = &unk_270261C08;
LABEL_38:
        char v36 = sub_251A7FCB4((uint64_t)v35, v26);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v36)
        {
LABEL_18:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_251A3E368(0, *(void *)(v17 + 16) + 1, 1);
            uint64_t v17 = v72;
          }
          char v16 = a2;
          long long v21 = v67;
          long long v22 = v64;
          unint64_t v24 = *(void *)(v17 + 16);
          unint64_t v23 = *(void *)(v17 + 24);
          if (v24 >= v23 >> 1)
          {
            sub_251A3E368(v23 > 1, v24 + 1, 1);
            long long v22 = v64;
            long long v21 = v67;
            char v16 = a2;
            uint64_t v17 = v72;
          }
          *(void *)(v17 + 16) = v24 + 1;
          unint64_t v25 = v17 + 32 * v24;
          *(_OWORD *)(v25 + 32) = v22;
          *(_OWORD *)(v25 + 48) = v21;
          goto LABEL_13;
        }
LABEL_39:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_12;
      }
    }
    else
    {
      if ((v16 & 1) == 0) {
        goto LABEL_13;
      }
      uint64_t v26 = *((void *)v18 + 3);
      if (!*(void *)(*((void *)&v19 + 1) + 16)) {
        goto LABEL_13;
      }
      long long v64 = *v18;
      long long v67 = v18[1];
      sub_251F36CA0();
      sub_251F36CD0();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      sub_251F357B0();
      uint64_t v27 = sub_251F36D00();
      uint64_t v28 = -1 << *(unsigned char *)(v26 + 32);
      unint64_t v29 = v27 & ~v28;
      if ((*(void *)(v26 + 56 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29))
      {
        uint64_t v30 = ~v28;
        while ((*(unsigned char *)(*(void *)(v26 + 48) + v29) & 0xBF) != 0x82)
        {
          unint64_t v29 = (v29 + 1) & v30;
          if (((*(void *)(v26 + 56 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29) & 1) == 0) {
            goto LABEL_11;
          }
        }
        uint64_t v35 = &unk_270261C30;
        goto LABEL_38;
      }
    }
LABEL_11:
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
LABEL_12:
    char v16 = a2;
LABEL_13:
    if (++a4 == v14)
    {
      swift_bridgeObjectRelease();
      a4 = v72;
      if (*(void *)(v72 + 16))
      {
        uint64_t v13 = v62;
        goto LABEL_47;
      }
      swift_release();
      unint64_t v38 = 0;
      a4 = MEMORY[0x263F8EE78];
      char v39 = a2;
      while (2)
      {
        if (v38 >= *(void *)(v7 + 16)) {
          goto LABEL_84;
        }
        uint64_t v40 = (long long *)(v15 + 32 * v38);
        long long v41 = v40[1];
        if (a1)
        {
          uint64_t v42 = *((void *)v40 + 3);
          if (*(void *)(*((void *)&v41 + 1) + 16))
          {
            long long v65 = *v40;
            long long v68 = v40[1];
            sub_251F36CA0();
            sub_251F36CD0();
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain_n();
            sub_251F357B0();
            uint64_t v43 = sub_251F36D00();
            uint64_t v44 = -1 << *(unsigned char *)(v42 + 32);
            unint64_t v45 = v43 & ~v44;
            if ((*(void *)(v42 + 56 + ((v45 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v45))
            {
              uint64_t v46 = ~v44;
              long long v47 = v68;
              while ((*(unsigned char *)(*(void *)(v42 + 48) + v45) & 0xBF) != 0x81)
              {
                unint64_t v45 = (v45 + 1) & v46;
                if (((*(void *)(v42 + 56 + ((v45 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v45) & 1) == 0) {
                  goto LABEL_49;
                }
              }
              goto LABEL_66;
            }
LABEL_49:
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
            char v39 = a2;
          }
        }
        else if (v39)
        {
          uint64_t v48 = *((void *)v40 + 3);
          if (*(void *)(*((void *)&v41 + 1) + 16))
          {
            long long v65 = *v40;
            long long v69 = v40[1];
            sub_251F36CA0();
            sub_251F36CD0();
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain_n();
            sub_251F357B0();
            uint64_t v49 = sub_251F36D00();
            uint64_t v50 = -1 << *(unsigned char *)(v48 + 32);
            unint64_t v51 = v49 & ~v50;
            if (((*(void *)(v48 + 56 + ((v51 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v51) & 1) == 0) {
              goto LABEL_49;
            }
            uint64_t v52 = ~v50;
            long long v47 = v69;
            while ((*(unsigned char *)(*(void *)(v48 + 48) + v51) & 0xBF) != 0x82)
            {
              unint64_t v51 = (v51 + 1) & v52;
              if (((*(void *)(v48 + 56 + ((v51 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v51) & 1) == 0) {
                goto LABEL_49;
              }
            }
LABEL_66:
            long long v70 = v47;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v72 = a4;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_251A3E368(0, *(void *)(a4 + 16) + 1, 1);
              a4 = v72;
            }
            char v39 = a2;
            long long v53 = v65;
            unint64_t v55 = *(void *)(a4 + 16);
            unint64_t v54 = *(void *)(a4 + 24);
            long long v56 = v70;
            if (v55 >= v54 >> 1)
            {
              sub_251A3E368(v54 > 1, v55 + 1, 1);
              long long v56 = v70;
              long long v53 = v65;
              char v39 = a2;
              a4 = v72;
            }
            *(void *)(a4 + 16) = v55 + 1;
            unint64_t v57 = a4 + 32 * v55;
            *(_OWORD *)(v57 + 32) = v53;
            *(_OWORD *)(v57 + 48) = v56;
          }
        }
        if (++v38 == v14) {
          goto LABEL_74;
        }
        continue;
      }
    }
  }
  __break(1u);
LABEL_84:
  __break(1u);
LABEL_85:
  swift_once();
LABEL_4:
  uint64_t v8 = sub_251F350A0();
  __swift_project_value_buffer(v8, (uint64_t)qword_26B21ECB8);
  unint64_t v9 = sub_251F35080();
  os_log_type_t v10 = sub_251F35FB0();
  if (os_log_type_enabled(v9, v10))
  {
    unint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    v71[0] = v12;
    *(_DWORD *)unint64_t v11 = 136315138;
    uint64_t v72 = sub_251A00E84(0xD00000000000003ALL, 0x8000000251F68530, v71);
    sub_251F361D0();
    _os_log_impl(&dword_2519F3000, v9, v10, "%s Can't find primary mode tag without vacuum or mop!", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v12, -1, -1);
    MEMORY[0x2533AC760](v11, -1, -1);
  }

LABEL_45:
  *(_OWORD *)a4 = 0u;
  *(_OWORD *)(a4 + 16) = 0u;
}

void StaticRVCClusterGroup.bestFitSelectingSecondaryTag(_:existingTags:)(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  long long v6 = v3[12];
  long long v7 = v3[13];
  long long v8 = v3[10];
  long long v116 = v3[11];
  long long v117 = v6;
  v118[0] = v7;
  *(_OWORD *)((char *)v118 + 12) = *(_OWORD *)((char *)v3 + 220);
  long long v9 = v3[8];
  long long v10 = v3[9];
  long long v11 = v3[6];
  long long v112 = v3[7];
  long long v113 = v9;
  long long v114 = v10;
  long long v115 = v8;
  long long v12 = v3[4];
  long long v13 = v3[5];
  long long v14 = v3[2];
  long long v108 = v3[3];
  long long v109 = v12;
  long long v110 = v13;
  long long v111 = v11;
  long long v15 = v3[1];
  v107[0] = *v3;
  v107[1] = v15;
  int v16 = (char)*a1;
  unsigned int v17 = *a1;
  v107[2] = v14;
  if (v16 < 0 && (v17 & 0x3F) - 1 < 2)
  {
    if (qword_26B21ECD0 == -1)
    {
LABEL_4:
      uint64_t v18 = sub_251F350A0();
      __swift_project_value_buffer(v18, (uint64_t)qword_26B21ECB8);
      long long v19 = sub_251F35080();
      os_log_type_t v20 = sub_251F35FB0();
      if (os_log_type_enabled(v19, v20))
      {
        long long v21 = (uint8_t *)swift_slowAlloc();
        uint64_t v22 = swift_slowAlloc();
        *(void *)&v106[0] = v22;
        *(_DWORD *)long long v21 = 136315138;
        sub_251A00E84(0xD00000000000002DLL, 0x8000000251F68570, (uint64_t *)v106);
        sub_251F361D0();
        _os_log_impl(&dword_2519F3000, v19, v20, "%s Attempting to set a primary tag as a secondary tag.", v21, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2533AC760](v22, -1, -1);
        MEMORY[0x2533AC760](v21, -1, -1);
      }

      goto LABEL_7;
    }
LABEL_118:
    swift_once();
    goto LABEL_4;
  }
  if (!a2)
  {
    if ((void)v109)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      BOOL v29 = StaticRVCClusterGroup.CleanMode.isMop.getter();
      v106[0] = v108;
      v106[1] = v109;
      BOOL v30 = StaticRVCClusterGroup.CleanMode.isVacuum.getter();
      sub_251A4DE90(v108, *((uint64_t *)&v108 + 1), v109);
      goto LABEL_26;
    }
    if (*((void *)&v111 + 1))
    {
      uint64_t v43 = *(void *)(*((void *)&v111 + 1) + 16);
      if (v43)
      {
        unint64_t v99 = a3;
        swift_bridgeObjectRetain_n();
        uint64_t v44 = 0;
        unsigned int v45 = v17 >> 6;
        do
        {
          uint64_t v46 = (uint64_t *)(*((void *)&v111 + 1) + 32 + 32 * v44);
          uint64_t v47 = v46[3];
          if (*(void *)(v47 + 16))
          {
            uint64_t v48 = v46[2];
            uint64_t v102 = v46[1];
            uint64_t v104 = *v46;
            sub_251F36CA0();
            sub_251F36CD0();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_251F357B0();
            uint64_t v49 = sub_251F36D00();
            uint64_t v50 = -1 << *(unsigned char *)(v47 + 32);
            unint64_t v51 = v49 & ~v50;
            if ((*(void *)(v47 + 56 + ((v51 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v51))
            {
              uint64_t v52 = ~v50;
              do
              {
                unsigned int v53 = *(unsigned __int8 *)(*(void *)(v47 + 48) + v51);
                if (v53 >> 6)
                {
                  if (v53 >> 6 == 1)
                  {
                    if (v45 != 1) {
                      goto LABEL_45;
                    }
                  }
                  else if (v45 != 2)
                  {
                    goto LABEL_45;
                  }
                  if (((v53 ^ v17) & 0x3F) == 0) {
                    goto LABEL_112;
                  }
                }
                else if (v17 <= 0x3F && v53 == v17)
                {
LABEL_112:
                  swift_bridgeObjectRelease_n();
                  void *v99 = v104;
                  v99[1] = v102;
                  v99[2] = v48;
                  v99[3] = v47;
                  return;
                }
LABEL_45:
                unint64_t v51 = (v51 + 1) & v52;
              }
              while (((*(void *)(v47 + 56 + ((v51 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v51) & 1) != 0);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          ++v44;
        }
        while (v44 != v43);
        swift_bridgeObjectRelease_n();
        a3 = v99;
      }
    }
LABEL_7:
    *a3 = 0u;
    a3[1] = 0u;
    return;
  }
  if (!*(void *)(a2 + 16))
  {
    BOOL v30 = 0;
    BOOL v29 = 0;
    goto LABEL_26;
  }
  sub_251F36CA0();
  sub_251F36CD0();
  sub_251F357B0();
  uint64_t v23 = sub_251F36D00();
  uint64_t v24 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v25 = v23 & ~v24;
  uint64_t v26 = a2 + 56;
  if ((*(void *)(a2 + 56 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25))
  {
    uint64_t v27 = ~v24;
    do
    {
      int v28 = *(unsigned char *)(*(void *)(a2 + 48) + v25) & 0xBF;
      BOOL v29 = v28 == 130;
      if (v28 == 130) {
        break;
      }
      unint64_t v25 = (v25 + 1) & v27;
    }
    while (((*(void *)(v26 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25) & 1) != 0);
    if (!*(void *)(a2 + 16)) {
      goto LABEL_25;
    }
  }
  else
  {
    BOOL v29 = 0;
    if (!*(void *)(a2 + 16))
    {
LABEL_25:
      BOOL v30 = 0;
      goto LABEL_26;
    }
  }
  sub_251F36CA0();
  sub_251F36CD0();
  sub_251F357B0();
  uint64_t v31 = sub_251F36D00();
  uint64_t v32 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v33 = v31 & ~v32;
  if (((*(void *)(v26 + ((v33 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v33) & 1) == 0) {
    goto LABEL_25;
  }
  uint64_t v34 = ~v32;
  do
  {
    int v35 = *(unsigned char *)(*(void *)(a2 + 48) + v33) & 0xBF;
    BOOL v30 = v35 == 129;
    if (v35 == 129) {
      break;
    }
    unint64_t v33 = (v33 + 1) & v34;
  }
  while (((*(void *)(v26 + ((v33 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v33) & 1) != 0);
LABEL_26:
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D1E8);
  uint64_t v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_251F38650;
  *(unsigned char *)(v36 + 32) = v17;
  uint64_t v37 = sub_251EE0B54(v36);
  swift_setDeallocating();
  swift_deallocClassInstance();
  if (v29)
  {
    sub_251F36CA0();
    sub_251F36CD0();
    swift_bridgeObjectRetain();
    sub_251F357B0();
    uint64_t v38 = sub_251F36D00();
    uint64_t v39 = -1 << *(unsigned char *)(v37 + 32);
    unint64_t v40 = v38 & ~v39;
    if ((*(void *)(v37 + 56 + ((v40 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v40))
    {
      uint64_t v41 = ~v39;
      while ((*(unsigned char *)(*(void *)(v37 + 48) + v40) & 0xBF) != 0x82)
      {
        unint64_t v40 = (v40 + 1) & v41;
        if (((*(void *)(v37 + 56 + ((v40 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v40) & 1) == 0) {
          goto LABEL_31;
        }
      }
    }
    else
    {
LABEL_31:
      swift_bridgeObjectRelease();
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if (*(void *)(v37 + 24) <= *(void *)(v37 + 16))
      {
        if (isUniquelyReferenced_nonNull_native) {
          sub_251A6AB28();
        }
        else {
          sub_251A79864();
        }
        sub_251F36CA0();
        sub_251F36CD0();
        sub_251F357B0();
        uint64_t v54 = sub_251F36D00();
        uint64_t v55 = -1 << *(unsigned char *)(v37 + 32);
        unint64_t v40 = v54 & ~v55;
        if ((*(void *)(v37 + 56 + ((v40 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v40))
        {
          uint64_t v56 = ~v55;
          while ((*(unsigned char *)(*(void *)(v37 + 48) + v40) & 0xBF) != 0x82)
          {
            unint64_t v40 = (v40 + 1) & v56;
            if (((*(void *)(v37 + 56 + ((v40 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v40) & 1) == 0) {
              goto LABEL_61;
            }
          }
          goto LABEL_119;
        }
      }
      else if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_251A76C68(&qword_269B9D300);
      }
LABEL_61:
      *(void *)(v37 + ((v40 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v40;
      *(unsigned char *)(*(void *)(v37 + 48) + v40) = -126;
      uint64_t v57 = *(void *)(v37 + 16);
      BOOL v58 = __OFADD__(v57, 1);
      uint64_t v59 = v57 + 1;
      if (v58)
      {
        __break(1u);
        goto LABEL_117;
      }
      *(void *)(v37 + 16) = v59;
    }
    swift_bridgeObjectRelease();
  }
  if (!v30) {
    goto LABEL_83;
  }
  sub_251F36CA0();
  sub_251F36CD0();
  swift_bridgeObjectRetain();
  sub_251F357B0();
  uint64_t v60 = sub_251F36D00();
  uint64_t v61 = -1 << *(unsigned char *)(v37 + 32);
  unint64_t v62 = v60 & ~v61;
  if ((*(void *)(v37 + 56 + ((v62 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v62))
  {
    uint64_t v63 = ~v61;
    while ((*(unsigned char *)(*(void *)(v37 + 48) + v62) & 0xBF) != 0x81)
    {
      unint64_t v62 = (v62 + 1) & v63;
      if (((*(void *)(v37 + 56 + ((v62 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v62) & 1) == 0) {
        goto LABEL_69;
      }
    }
    goto LABEL_82;
  }
LABEL_69:
  swift_bridgeObjectRelease();
  int v64 = swift_isUniquelyReferenced_nonNull_native();
  if (*(void *)(v37 + 24) <= *(void *)(v37 + 16))
  {
    if (v64) {
      sub_251A6AB28();
    }
    else {
      sub_251A79864();
    }
    sub_251F36CA0();
    sub_251F36CD0();
    sub_251F357B0();
    uint64_t v65 = sub_251F36D00();
    uint64_t v66 = -1 << *(unsigned char *)(v37 + 32);
    unint64_t v62 = v65 & ~v66;
    if (((*(void *)(v37 + 56 + ((v62 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v62) & 1) == 0) {
      goto LABEL_80;
    }
    uint64_t v67 = ~v66;
    while ((*(unsigned char *)(*(void *)(v37 + 48) + v62) & 0xBF) != 0x81)
    {
      unint64_t v62 = (v62 + 1) & v67;
      if (((*(void *)(v37 + 56 + ((v62 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v62) & 1) == 0) {
        goto LABEL_80;
      }
    }
LABEL_119:
    sub_251F36B90();
    __break(1u);
    swift_release();
    __break(1u);
    return;
  }
  if ((v64 & 1) == 0) {
    sub_251A76C68(&qword_269B9D300);
  }
LABEL_80:
  *(void *)(v37 + ((v62 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v62;
  *(unsigned char *)(*(void *)(v37 + 48) + v62) = -127;
  uint64_t v68 = *(void *)(v37 + 16);
  BOOL v58 = __OFADD__(v68, 1);
  uint64_t v69 = v68 + 1;
  if (v58)
  {
LABEL_117:
    __break(1u);
    goto LABEL_118;
  }
  *(void *)(v37 + 16) = v69;
LABEL_82:
  swift_bridgeObjectRelease();
LABEL_83:
  if (*((void *)&v111 + 1))
  {
    uint64_t v103 = v37;
    uint64_t v100 = a3;
    unint64_t v70 = *(void *)(*((void *)&v111 + 1) + 16);
    uint64_t v71 = swift_bridgeObjectRetain();
    if (v70)
    {
      unint64_t v72 = 0;
      uint64_t v73 = v71 + 48;
      uint64_t v101 = -(uint64_t)v70;
      uint64_t v74 = MEMORY[0x263F8EE78];
      unint64_t v98 = v70;
      a3 = (_OWORD *)v103;
      do
      {
        if (v72 <= v70) {
          unint64_t v75 = v70;
        }
        else {
          unint64_t v75 = v72;
        }
        uint64_t v76 = -(uint64_t)v75;
        uint64_t v77 = (_OWORD *)(v73 + 32 * v72++);
        while (1)
        {
          if (v76 + v72 == 1)
          {
            __break(1u);
            goto LABEL_115;
          }
          uint64_t v79 = *((void *)v77 - 2);
          uint64_t v78 = *((void *)v77 - 1);
          long long v105 = *v77;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          char v80 = sub_251A7F9B8(*((uint64_t *)&v105 + 1), v103);
          swift_bridgeObjectRelease();
          if (v80) {
            break;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          ++v72;
          v77 += 2;
          if (v101 + v72 == 1) {
            goto LABEL_104;
          }
        }
        *(void *)&v106[0] = v74;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_251A3E368(0, *(void *)(v74 + 16) + 1, 1);
          uint64_t v74 = *(void *)&v106[0];
        }
        long long v81 = v105;
        unint64_t v83 = *(void *)(v74 + 16);
        unint64_t v82 = *(void *)(v74 + 24);
        if (v83 >= v82 >> 1)
        {
          sub_251A3E368(v82 > 1, v83 + 1, 1);
          long long v81 = v105;
          uint64_t v74 = *(void *)&v106[0];
        }
        *(void *)(v74 + 16) = v83 + 1;
        uint64_t v84 = v74 + 32 * v83;
        *(void *)(v84 + 32) = v79;
        *(void *)(v84 + 40) = v78;
        *(_OWORD *)(v84 + 48) = v81;
        unint64_t v70 = v98;
      }
      while (v101 + v72);
    }
    else
    {
      uint64_t v74 = MEMORY[0x263F8EE78];
    }
LABEL_104:
    swift_bridgeObjectRelease();
    *(void *)&v106[0] = v74;
    swift_bridgeObjectRetain();
    sub_251A81170((uint64_t *)v106);
    swift_release();
    if (*(void *)(*(void *)&v106[0] + 16))
    {
      uint64_t v94 = *(void *)(*(void *)&v106[0] + 32);
      uint64_t v95 = *(void *)(*(void *)&v106[0] + 40);
      uint64_t v96 = *(void *)(*(void *)&v106[0] + 48);
      uint64_t v97 = *(void *)(*(void *)&v106[0] + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_release();
      *uint64_t v100 = v94;
      v100[1] = v95;
      v100[2] = v96;
      v100[3] = v97;
    }
    else
    {
      swift_release();
      *(_OWORD *)uint64_t v100 = 0u;
      *((_OWORD *)v100 + 1) = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_26B21ECD0 != -1) {
LABEL_115:
    }
      swift_once();
    uint64_t v85 = sub_251F350A0();
    __swift_project_value_buffer(v85, (uint64_t)qword_26B21ECB8);
    sub_251A4DB38((uint64_t)v107);
    sub_251A4DB38((uint64_t)v107);
    uint64_t v86 = sub_251F35080();
    os_log_type_t v87 = sub_251F35FB0();
    if (os_log_type_enabled(v86, v87))
    {
      uint64_t v88 = swift_slowAlloc();
      uint64_t v89 = swift_slowAlloc();
      *(void *)&v106[0] = v89;
      *(_DWORD *)uint64_t v88 = 136315650;
      sub_251A00E84(0xD00000000000002DLL, 0x8000000251F68570, (uint64_t *)v106);
      sub_251F361D0();
      *(_WORD *)(v88 + 12) = 2080;
      uint64_t v90 = sub_251F35790();
      sub_251A00E84(v90, v91, (uint64_t *)v106);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v88 + 22) = 2080;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D1C8);
      uint64_t v92 = sub_251F35790();
      sub_251A00E84(v92, v93, (uint64_t *)v106);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      sub_251A81D30((uint64_t)v107);
      sub_251A81D30((uint64_t)v107);
      _os_log_impl(&dword_2519F3000, v86, v87, "%s Couldn't find a clean mode that contained the specified tag: %s allRunningModes: %s'", (uint8_t *)v88, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v89, -1, -1);
      MEMORY[0x2533AC760](v88, -1, -1);
    }
    else
    {
      sub_251A81D30((uint64_t)v107);
      sub_251A81D30((uint64_t)v107);
    }

    *a3 = 0u;
    a3[1] = 0u;
    swift_bridgeObjectRelease();
  }
}

uint64_t static StaticRVCClusterGroup.localizedNameFor(tag:)(unsigned char *a1)
{
  unsigned int v1 = *a1;
  if (!(v1 >> 6))
  {
    switch(*a1)
    {
      case 1:
        uint64_t v3 = 0xD000000000000020;
        uint64_t v4 = "HFVacuumCleanModeSelection_Quick";
        goto LABEL_19;
      case 2:
        uint64_t v3 = 0xD000000000000020;
        uint64_t v4 = "HFVacuumCleanModeSelection_Quiet";
        goto LABEL_19;
      case 3:
        uint64_t v3 = 0xD000000000000023;
        uint64_t v4 = "HFVacuumCleanModeSelection_LowNoise";
        goto LABEL_19;
      case 4:
        uint64_t v3 = 0xD000000000000024;
        uint64_t v4 = "HFVacuumCleanModeSelection_LowEnergy";
        goto LABEL_19;
      case 5:
        uint64_t v3 = 0xD000000000000023;
        uint64_t v4 = "HFVacuumCleanModeSelection_Vacation";
        goto LABEL_19;
      case 6:
        uint64_t v5 = "HFVacuumCleanModeSelection_Min";
        goto LABEL_21;
      case 7:
        uint64_t v5 = "HFVacuumCleanModeSelection_Max";
        goto LABEL_21;
      case 8:
        uint64_t v3 = 0xD000000000000020;
        uint64_t v4 = "HFVacuumCleanModeSelection_Night";
        goto LABEL_19;
      case 9:
        uint64_t v5 = "HFVacuumCleanModeSelection_Day";
        goto LABEL_21;
      default:
        uint64_t v3 = 0xD00000000000001FLL;
        uint64_t v4 = "HFVacuumCleanModeSelection_Auto";
        goto LABEL_19;
    }
  }
  if (v1 >> 6 == 1) {
    return 0;
  }
  if ((v1 & 0x3F) != 0)
  {
    if ((v1 & 0x3F) != 1)
    {
      uint64_t v5 = "HFVacuumCleanModeSelection_Mop";
LABEL_21:
      unint64_t v6 = (unint64_t)(v5 - 32) | 0x8000000000000000;
      uint64_t v3 = 0xD00000000000001ELL;
      return static String.hfLocalized(_:)(v3, v6);
    }
    uint64_t v3 = 0xD000000000000021;
    uint64_t v4 = "HFVacuumCleanModeSelection_Vacuum";
  }
  else
  {
    uint64_t v3 = 0xD000000000000024;
    uint64_t v4 = "HFVacuumCleanModeSelection_DeepClean";
  }
LABEL_19:
  unint64_t v6 = (unint64_t)(v4 - 32) | 0x8000000000000000;
  return static String.hfLocalized(_:)(v3, v6);
}

uint64_t sub_251A61CE0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  sub_251F36CA0();
  if (a2 == 2 || a2 == 1)
  {
    sub_251F36CB0();
  }
  else
  {
    sub_251F36CB0();
    if (a2)
    {
      sub_251F36CC0();
      swift_bridgeObjectRetain();
      sub_251A81FDC(a2);
      sub_251A54708(v19, a2);
      sub_251A58144(a2);
      goto LABEL_7;
    }
    sub_251F36CC0();
  }
  swift_bridgeObjectRetain();
LABEL_7:
  uint64_t v7 = sub_251F36D00();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_27:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&v19[0] = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_251A81FDC(a2);
    sub_251A6F3AC(a2, v9, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = *(void *)&v19[0];
    swift_bridgeObjectRelease();
    *a1 = a2;
    return 1;
  }
  uint64_t v10 = ~v8;
  while (1)
  {
    uint64_t v11 = *(void *)(v6 + 48);
    uint64_t v12 = *(void *)(v11 + 8 * v9);
    uint64_t v13 = a2;
    if (v12 == 2) {
      break;
    }
    if (v12 == 1)
    {
      if (a2 == 1)
      {
        sub_251A58144(1);
        uint64_t v17 = 1;
        goto LABEL_29;
      }
      goto LABEL_16;
    }
    if ((unint64_t)(a2 - 1) < 2) {
      goto LABEL_16;
    }
    if (!v12)
    {
      sub_251A81FDC(a2);
      sub_251A81FDC(0);
      sub_251A81FDC(a2);
      sub_251A81FDC(0);
      sub_251A58144(0);
      sub_251A58144(a2);
      sub_251A58144(0);
      uint64_t v13 = 0;
      uint64_t v12 = a2;
      if (!a2)
      {
        swift_bridgeObjectRelease();
        sub_251A58144(0);
        goto LABEL_30;
      }
      goto LABEL_17;
    }
    if (!a2)
    {
      uint64_t v13 = 0;
      goto LABEL_16;
    }
    sub_251A81FDC(*(void *)(v11 + 8 * v9));
    sub_251A81FDC(v12);
    sub_251A81FDC(a2);
    sub_251A81FDC(v12);
    sub_251A81FDC(a2);
    sub_251A81FDC(v12);
    char v14 = sub_251B04848(v12, a2);
    sub_251A58144(v12);
    sub_251A58144(a2);
    sub_251A58144(a2);
    sub_251A58144(v12);
    sub_251A58144(v12);
    swift_bridgeObjectRelease();
    if (v14)
    {
      swift_bridgeObjectRelease();
      sub_251A58144(a2);
      goto LABEL_30;
    }
LABEL_18:
    unint64_t v9 = (v9 + 1) & v10;
    if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
      goto LABEL_27;
    }
  }
  if (a2 != 2)
  {
LABEL_16:
    sub_251A81FDC(v13);
    sub_251A81FDC(v12);
LABEL_17:
    sub_251A58144(v12);
    sub_251A58144(v13);
    goto LABEL_18;
  }
  sub_251A58144(2);
  uint64_t v17 = 2;
LABEL_29:
  sub_251A58144(v17);
  swift_bridgeObjectRelease();
LABEL_30:
  uint64_t v18 = *(void *)(*(void *)(*v3 + 48) + 8 * v9);
  *a1 = v18;
  sub_251A81FDC(v18);
  return 0;
}

uint64_t sub_251A62000(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for StaticMediaProfile();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6 - 8);
  unint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_251F36CA0();
  swift_bridgeObjectRetain();
  StaticMediaProfile.hash(into:)(v20);
  uint64_t v11 = sub_251F36D00();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v19 = a1;
    uint64_t v14 = ~v12;
    uint64_t v15 = *(void *)(v7 + 72);
    while (1)
    {
      sub_251A81FF0(*(void *)(v10 + 48) + v15 * v13, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
      char v16 = _s13HomeDataModel18StaticMediaProfileV2eeoiySbAC_ACtFZ_0((uint64_t)v9, a2);
      sub_251A820C0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
      if (v16) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v14;
      if (((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        a1 = v19;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    sub_251A820C0(a2, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
    sub_251A81FF0(*(void *)(*v3 + 48) + v15 * v13, v19, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_251A81FF0(a2, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
    *(void *)&v20[0] = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_251A6F690((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = *(void *)&v20[0];
    swift_bridgeObjectRelease();
    sub_251A82058(a2, a1, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
    return 1;
  }
}

uint64_t sub_251A62284(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for StaticMediaSystem();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6 - 8);
  unint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_251F36CA0();
  swift_bridgeObjectRetain();
  StaticMediaSystem.hash(into:)(v20);
  uint64_t v11 = sub_251F36D00();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v19 = a1;
    uint64_t v14 = ~v12;
    uint64_t v15 = *(void *)(v7 + 72);
    while (1)
    {
      sub_251A81FF0(*(void *)(v10 + 48) + v15 * v13, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
      char v16 = _s13HomeDataModel17StaticMediaSystemV2eeoiySbAC_ACtFZ_0((uint64_t)v9, a2);
      sub_251A820C0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
      if (v16) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v14;
      if (((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        a1 = v19;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    sub_251A820C0(a2, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
    sub_251A81FF0(*(void *)(*v3 + 48) + v15 * v13, v19, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_251A81FF0(a2, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
    *(void *)&v20[0] = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_251A6F968((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = *(void *)&v20[0];
    swift_bridgeObjectRelease();
    sub_251A82058(a2, a1, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
    return 1;
  }
}

uint64_t sub_251A62508(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for StaticZone();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v44 - v11;
  uint64_t v13 = *v3;
  sub_251F36CA0();
  uint64_t v14 = sub_251F34DA0();
  sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
  swift_bridgeObjectRetain();
  sub_251F35610();
  uint64_t v50 = (void *)(a2 + *(int *)(v6 + 20));
  sub_251F357B0();
  uint64_t v52 = v6;
  uint64_t v15 = *(int *)(v6 + 24);
  uint64_t v57 = a2;
  uint64_t v49 = v15;
  sub_251A41A94((uint64_t)v68, *(void *)(a2 + v15));
  uint64_t v16 = sub_251F36D00();
  uint64_t v17 = -1 << *(unsigned char *)(v13 + 32);
  unint64_t v18 = v16 & ~v17;
  uint64_t v19 = v13;
  uint64_t v54 = v13 + 56;
  if ((*(void *)(v13 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18))
  {
    unsigned int v45 = v12;
    uint64_t v46 = v3;
    uint64_t v47 = a1;
    uint64_t v51 = ~v17;
    uint64_t v56 = *(void *)(v7 + 72);
    uint64_t v48 = (uint64_t *)(v14 - 8);
    uint64_t v20 = v14;
    uint64_t v59 = v10;
    uint64_t v55 = v19;
    while (1)
    {
      uint64_t v21 = *(void *)(v19 + 48);
      unint64_t v58 = v18;
      unint64_t v53 = v56 * v18;
      sub_251A81FF0(v21 + v56 * v18, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticZone);
      if (sub_251F34D70())
      {
        uint64_t v22 = (uint64_t *)&v59[*(int *)(v52 + 20)];
        uint64_t v23 = *v22;
        BOOL v24 = *v22 == *v50 && v22[1] == v50[1];
        if (v24 || (uint64_t v23 = sub_251F36B10(), (v23 & 1) != 0))
        {
          uint64_t v25 = *(void *)&v59[*(int *)(v52 + 24)];
          uint64_t v26 = *(void *)(v57 + v49);
          uint64_t v27 = *(void *)(v26 + 16);
          uint64_t v63 = *(void *)(v25 + 16);
          uint64_t v64 = v25;
          if (v63 == v27) {
            break;
          }
        }
      }
LABEL_3:
      uint64_t v10 = v59;
      sub_251A820C0((uint64_t)v59, (uint64_t (*)(void))type metadata accessor for StaticZone);
      unint64_t v18 = (v58 + 1) & v51;
      uint64_t v19 = v55;
      if (((*(void *)(v54 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        a1 = v47;
        uint64_t v3 = v46;
        uint64_t v12 = v45;
        goto LABEL_20;
      }
    }
    if (!v63 || (uint64_t v28 = *v48, v64 == v26))
    {
LABEL_17:
      sub_251A820C0((uint64_t)v59, (uint64_t (*)(void))type metadata accessor for StaticZone);
      swift_bridgeObjectRelease();
      sub_251A820C0(v57, (uint64_t (*)(void))type metadata accessor for StaticZone);
      sub_251A81FF0(*(void *)(*v46 + 48) + v53, v47, (uint64_t (*)(void))type metadata accessor for StaticZone);
      return 0;
    }
    else
    {
      unint64_t v29 = 0;
      unint64_t v30 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
      uint64_t v31 = v28 + 16;
      uint64_t v32 = *(void (**)(char *, unint64_t, uint64_t))(v28 + 16);
      uint64_t v33 = *(void *)(v28 + 64);
      uint64_t v60 = *(void *)(v28 + 72);
      uint64_t v61 = (uint64_t (**)(char *, uint64_t))(v28 + 8);
      uint64_t v62 = v33;
      while (1)
      {
        uint64_t v34 = v62;
        MEMORY[0x270FA5388](v23);
        unint64_t v35 = (v34 + 15) & 0xFFFFFFFFFFFFFFF0;
        v32((char *)&v44 - v35, v64 + v30, v20);
        uint64_t result = MEMORY[0x270FA5388](&v44);
        if (v29 >= *(void *)(v26 + 16)) {
          break;
        }
        uint64_t v66 = &v44;
        uint64_t v67 = result;
        uint64_t v37 = v32;
        uint64_t v38 = v31;
        uint64_t v39 = v37;
        v37((char *)&v44 - v35, v26 + v30, v20);
        sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
        int v65 = sub_251F35650();
        uint64_t v40 = v26;
        uint64_t v41 = *v61;
        (*v61)((char *)&v44 - v35, v20);
        uint64_t v23 = v41((char *)&v44 - v35, v20);
        if ((v65 & 1) == 0) {
          goto LABEL_3;
        }
        uint64_t v26 = v40;
        ++v29;
        v30 += v60;
        uint64_t v31 = v38;
        uint64_t v32 = v39;
        if (v63 == v29) {
          goto LABEL_17;
        }
      }
      __break(1u);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_20:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v43 = v57;
    sub_251A81FF0(v57, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticZone);
    v68[0] = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_251A6FC40((uint64_t)v12, v18, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v68[0];
    swift_bridgeObjectRelease();
    sub_251A82058(v43, a1, (uint64_t (*)(void))type metadata accessor for StaticZone);
    return 1;
  }
  return result;
}

uint64_t sub_251A62AF4(unsigned char *a1, char a2)
{
  uint64_t v4 = a2 & 1;
  uint64_t v5 = *v2;
  sub_251F36CA0();
  sub_251F36CB0();
  uint64_t v6 = sub_251F36D00();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_251A701C8(v4, v8, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v13;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  if ((((v4 == 0) ^ *(unsigned __int8 *)(v9 + v8)) & 1) == 0)
  {
    uint64_t v10 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v10;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while ((((v4 == 0) ^ *(unsigned __int8 *)(v9 + v8)) & 1) == 0);
  }
  uint64_t result = 0;
  LOBYTE(v4) = *(unsigned char *)(*(void *)(*v2 + 48) + v8);
LABEL_8:
  *a1 = v4;
  return result;
}

BOOL sub_251A62C30()
{
  uint64_t v1 = *v0;
  sub_251F36CA0();
  sub_251F36CB0();
  unint64_t v2 = sub_251F36D00() & ~(-1 << *(unsigned char *)(v1 + 32));
  uint64_t v3 = (1 << v2) & *(void *)(v1 + ((v2 >> 3) & 0xFFFFFFFFFFFFFF8) + 56);
  if (!v3)
  {
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v6 = *v0;
    *uint64_t v0 = 0x8000000000000000;
    sub_251A70330(v2, isUniquelyReferenced_nonNull_native);
    *uint64_t v0 = v6;
    swift_bridgeObjectRelease();
  }
  return v3 == 0;
}

uint64_t sub_251A62CF4(void *a1, void *a2)
{
  return sub_251A67B50(a1, a2, (unint64_t *)&qword_26B21F170, 0x263F0E248, (uint64_t *)&unk_269BA0440);
}

uint64_t sub_251A62D10(_DWORD *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = MEMORY[0x2533ABBC0](*(void *)(v6 + 40), a2, 4);
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_251A70430(a2, v9, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v14;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v10 = *(void *)(v6 + 48);
  if (*(_DWORD *)(v10 + 4 * v9) != a2)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v11;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(_DWORD *)(v10 + 4 * v9) != a2);
  }
  uint64_t result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_251A62E14(unsigned char *a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_251F36CA0();
  int v6 = dword_251F3AE18[(char)a2];
  sub_251F36CE0();
  uint64_t v7 = sub_251F36D00();
  uint64_t v8 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v5 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v2;
    *unint64_t v2 = 0x8000000000000000;
    sub_251A70558(a2, v9, isUniquelyReferenced_nonNull_native);
    *unint64_t v2 = v14;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v10 = *(void *)(v5 + 48);
  if (dword_251F3AE18[*(char *)(v10 + v9)] != v6)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v11;
      if (((*(void *)(v5 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (dword_251F3AE18[*(char *)(v10 + v9)] != v6);
  }
  uint64_t result = 0;
  LOBYTE(a2) = *(unsigned char *)(*(void *)(*v2 + 48) + v9);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_251A62F54(void *a1, void *a2)
{
  return sub_251A67B50(a1, a2, (unint64_t *)&qword_269BA04A0, 0x263F08A20, &qword_269B9D2D8);
}

uint64_t sub_251A62F70(void *a1, void *a2)
{
  return sub_251A67B50(a1, a2, (unint64_t *)&unk_269BA04B0, 0x263F10DA0, &qword_269B9D2E0);
}

uint64_t sub_251A62F8C(unsigned char *a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_251F36CA0();
  int v6 = dword_251F3ADAC[(char)a2];
  sub_251F36CE0();
  uint64_t v7 = sub_251F36D00();
  uint64_t v8 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v5 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v2;
    *unint64_t v2 = 0x8000000000000000;
    sub_251A7086C(a2, v9, isUniquelyReferenced_nonNull_native);
    *unint64_t v2 = v14;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v10 = *(void *)(v5 + 48);
  if (dword_251F3ADAC[*(char *)(v10 + v9)] != v6)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v11;
      if (((*(void *)(v5 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (dword_251F3ADAC[*(char *)(v10 + v9)] != v6);
  }
  uint64_t result = 0;
  LOBYTE(a2) = *(unsigned char *)(*(void *)(*v2 + 48) + v9);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_251A630CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = *v5;
  sub_251F36CA0();
  sub_251F36CB0();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_251A54AB8((uint64_t)v27, a5);
  uint64_t v26 = a5;
  swift_bridgeObjectRelease();
  uint64_t v11 = sub_251F36D00();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v14 = ~v12;
    while (1)
    {
      uint64_t v17 = (void *)(*(void *)(v10 + 48) + 32 * v13);
      if (*v17 == a2)
      {
        BOOL v18 = v17[1] == a3 && v17[2] == a4;
        if (v18 || (sub_251F36B10() & 1) != 0)
        {
          swift_bridgeObjectRetain();
          uint64_t v15 = swift_bridgeObjectRetain();
          char v16 = sub_251B056E8(v15, v26);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v16) {
            break;
          }
        }
      }
      unint64_t v13 = (v13 + 1) & v14;
      if (((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v21 = *(void *)(*(void *)v24 + 48) + 32 * v13;
    uint64_t v22 = *(void *)(v21 + 16);
    uint64_t v23 = *(void *)(v21 + 24);
    *(_OWORD *)a1 = *(_OWORD *)v21;
    *(void *)(a1 + 16) = v22;
    *(void *)(a1 + 24) = v23;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return 0;
  }
  else
  {
LABEL_12:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v27[0] = *(void *)v24;
    *(void *)uint64_t v24 = 0x8000000000000000;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_251A709EC(a2, a3, a4, v26, v13, isUniquelyReferenced_nonNull_native);
    *(void *)uint64_t v24 = v27[0];
    swift_bridgeObjectRelease();
    *(void *)a1 = a2;
    *(void *)(a1 + 8) = a3;
    uint64_t result = 1;
    *(void *)(a1 + 16) = a4;
    *(void *)(a1 + 24) = v26;
  }
  return result;
}

uint64_t sub_251A6331C(unsigned char *a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_251F36CA0();
  int v6 = a2 >> 6;
  sub_251F36CD0();
  swift_bridgeObjectRetain();
  sub_251F357B0();
  uint64_t v7 = sub_251F36D00();
  uint64_t v8 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v9 = v7 & ~v8;
  if ((*(void *)(v5 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    do
    {
      unsigned int v11 = *(unsigned __int8 *)(*(void *)(v5 + 48) + v9);
      if (v11 >> 6)
      {
        if (v11 >> 6 == 1)
        {
          if (v6 != 1) {
            goto LABEL_4;
          }
        }
        else if (v6 != 2)
        {
          goto LABEL_4;
        }
        if (((v11 ^ a2) & 0x3F) == 0) {
          goto LABEL_15;
        }
      }
      else if (a2 <= 0x3Fu && v11 == a2)
      {
LABEL_15:
        swift_bridgeObjectRelease();
        uint64_t result = 0;
        LOBYTE(a2) = *(unsigned char *)(*(void *)(*v2 + 48) + v9);
        goto LABEL_16;
      }
LABEL_4:
      unint64_t v9 = (v9 + 1) & v10;
    }
    while (((*(void *)(v5 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v14 = *v2;
  *unint64_t v2 = 0x8000000000000000;
  sub_251A70BFC(a2, v9, isUniquelyReferenced_nonNull_native);
  *unint64_t v2 = v14;
  swift_bridgeObjectRelease();
  uint64_t result = 1;
LABEL_16:
  *a1 = a2;
  return result;
}

uint64_t sub_251A63514(unsigned char *a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_251F36CA0();
  sub_251F36CC0();
  swift_bridgeObjectRetain();
  sub_251F357B0();
  uint64_t v6 = sub_251F36D00();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if ((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    uint64_t v9 = ~v7;
    do
    {
      if (*(char *)(*(void *)(v5 + 48) + v8) < 0)
      {
        if ((a2 & 0x80) == 0) {
          goto LABEL_5;
        }
      }
      else if ((a2 & 0x80) != 0)
      {
        goto LABEL_5;
      }
      if (*(unsigned __int8 *)(*(void *)(v5 + 48) + v8) == a2)
      {
        swift_bridgeObjectRelease();
        uint64_t result = 0;
        LOBYTE(a2) = *(unsigned char *)(*(void *)(*v2 + 48) + v8);
        goto LABEL_11;
      }
LABEL_5:
      unint64_t v8 = (v8 + 1) & v9;
    }
    while (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v12 = *v2;
  *unint64_t v2 = 0x8000000000000000;
  sub_251A70E00(a2, v8, isUniquelyReferenced_nonNull_native);
  *unint64_t v2 = v12;
  swift_bridgeObjectRelease();
  uint64_t result = 1;
LABEL_11:
  *a1 = a2;
  return result;
}

uint64_t sub_251A636A0(unsigned char *a1, uint64_t a2)
{
  return sub_251A66D9C(a1, a2, &qword_269B9D248);
}

uint64_t sub_251A636B4(_WORD *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = MEMORY[0x2533ABBC0](*(void *)(v6 + 40), (unsigned __int16)a2, 2);
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_251A70FB0(a2, v9, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v14;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v10 = *(void *)(v6 + 48);
  if (*(unsigned __int16 *)(v10 + 2 * v9) != (unsigned __int16)a2)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v11;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(unsigned __int16 *)(v10 + 2 * v9) != (unsigned __int16)a2);
  }
  uint64_t result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_251A637B8(char *a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = sub_251F34DA0();
  sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
  swift_bridgeObjectRetain();
  uint64_t v37 = a2;
  uint64_t v8 = sub_251F35600();
  uint64_t v9 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v10 = v8 & ~v9;
  uint64_t v34 = v6 + 56;
  uint64_t v11 = v7 - 8;
  if ((*(void *)(v6 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    unint64_t v30 = v2;
    uint64_t v31 = a1;
    uint64_t v32 = ~v9;
    uint64_t v12 = *(void **)v11;
    v28[1] = v11 & 0xFFFFFFFFFFFFLL | 0x2E3F000000000000;
    unint64_t v29 = v12;
    unint64_t v13 = (void (*)(char *, unint64_t, uint64_t))v12[2];
    unint64_t v35 = v12 + 2;
    uint64_t v36 = v13;
    uint64_t v14 = v12[8];
    uint64_t v33 = v12[9];
    uint64_t v15 = (uint64_t (**)(char *, uint64_t))(v12 + 1);
    while (1)
    {
      MEMORY[0x270FA5388](v8);
      uint64_t v16 = v6;
      uint64_t v17 = *(void *)(v6 + 48);
      unint64_t v18 = v33 * v10;
      v36((char *)v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v17 + v33 * v10, v7);
      sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
      char v19 = sub_251F35650();
      uint64_t v20 = *v15;
      uint64_t v8 = (*v15)((char *)v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
      if (v19) {
        break;
      }
      unint64_t v10 = (v10 + 1) & v32;
      uint64_t v6 = v16;
      if (((*(void *)(v34 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v30;
        a1 = v31;
        uint64_t v21 = v29;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v20(v37, v7);
    v36(v31, *(void *)(*v30 + 48) + v18, v7);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v21 = *(void **)v11;
LABEL_7:
    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    char v23 = isUniquelyReferenced_nonNull_native;
    MEMORY[0x270FA5388](isUniquelyReferenced_nonNull_native);
    uint64_t v25 = (char *)v28 - v24;
    uint64_t v26 = v37;
    ((void (*)(char *, char *, uint64_t))v21[2])((char *)v28 - v24, v37, v7);
    uint64_t v38 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_251A710D8((uint64_t)v25, v10, v23);
    *uint64_t v3 = v38;
    swift_bridgeObjectRelease();
    ((void (*)(char *, char *, uint64_t))v21[4])(a1, v26, v7);
    return 1;
  }
}

uint64_t sub_251A63AE0(void *a1, void *a2)
{
  return sub_251A67B50(a1, a2, (unint64_t *)&qword_26B21F2D0, 0x263F0E390, &qword_269B9D260);
}

uint64_t sub_251A63AFC(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v7 = *v3;
  sub_251F36CA0();
  sub_251F36CF0();
  sub_251F36CC0();
  if ((a3 & 0x10000) == 0) {
    sub_251F36CD0();
  }
  uint64_t v8 = sub_251F36D00();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
  {
LABEL_12:
    int v15 = HIWORD(a3) & 1;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v17 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_251A7133C(a2, a3 & 0x1FFFF, v10, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v17;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_13;
  }
  uint64_t v11 = ~v9;
  while (1)
  {
    uint64_t v12 = *(void *)(v7 + 48) + 16 * v10;
    if (*(void *)v12 != a2) {
      goto LABEL_6;
    }
    if ((*(unsigned char *)(v12 + 10) & 1) == 0) {
      break;
    }
    if ((a3 & 0x10000) != 0) {
      goto LABEL_11;
    }
LABEL_6:
    unint64_t v10 = (v10 + 1) & v11;
    if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
      goto LABEL_12;
    }
  }
  if ((a3 & 0x10000) != 0 || *(unsigned __int16 *)(v12 + 8) != (unsigned __int16)a3) {
    goto LABEL_6;
  }
LABEL_11:
  uint64_t result = 0;
  uint64_t v14 = *(void *)(*v3 + 48) + 16 * v10;
  a2 = *(void *)v14;
  LOWORD(a3) = *(_WORD *)(v14 + 8);
  LOBYTE(v15) = *(unsigned char *)(v14 + 10);
LABEL_13:
  *(void *)a1 = a2;
  *(_WORD *)(a1 + 8) = a3;
  *(unsigned char *)(a1 + 10) = v15;
  return result;
}

uint64_t sub_251A63C88(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for Action();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_251F36CA0();
  swift_bridgeObjectRetain();
  Action.hash(into:)(v20);
  uint64_t v11 = sub_251F36D00();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v19 = a1;
    uint64_t v14 = ~v12;
    uint64_t v15 = *(void *)(v7 + 72);
    while (1)
    {
      sub_251A81FF0(*(void *)(v10 + 48) + v15 * v13, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for Action);
      char v16 = _s13HomeDataModel6ActionO2eeoiySbAC_ACtFZ_0((uint64_t)v9, a2);
      sub_251A820C0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for Action);
      if (v16) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v14;
      if (((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        a1 = v19;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    sub_251A820C0(a2, (uint64_t (*)(void))type metadata accessor for Action);
    sub_251A81FF0(*(void *)(*v3 + 48) + v15 * v13, v19, (uint64_t (*)(void))type metadata accessor for Action);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_251A81FF0(a2, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for Action);
    *(void *)&v20[0] = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_251A714E0((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = *(void *)&v20[0];
    swift_bridgeObjectRelease();
    sub_251A82058(a2, a1, (uint64_t (*)(void))type metadata accessor for Action);
    return 1;
  }
}

uint64_t sub_251A63F0C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for Event();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_251F36CA0();
  swift_bridgeObjectRetain();
  Event.hash(into:)(v20);
  uint64_t v11 = sub_251F36D00();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v19 = a1;
    uint64_t v14 = ~v12;
    uint64_t v15 = *(void *)(v7 + 72);
    while (1)
    {
      sub_251A81FF0(*(void *)(v10 + 48) + v15 * v13, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for Event);
      char v16 = _s13HomeDataModel5EventO2eeoiySbAC_ACtFZ_0((uint64_t)v9, a2);
      sub_251A820C0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for Event);
      if (v16) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v14;
      if (((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        a1 = v19;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    sub_251A820C0(a2, (uint64_t (*)(void))type metadata accessor for Event);
    sub_251A81FF0(*(void *)(*v3 + 48) + v15 * v13, v19, (uint64_t (*)(void))type metadata accessor for Event);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_251A81FF0(a2, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for Event);
    *(void *)&v20[0] = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_251A717B8((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = *(void *)&v20[0];
    swift_bridgeObjectRelease();
    sub_251A82058(a2, a1, (uint64_t (*)(void))type metadata accessor for Event);
    return 1;
  }
}

uint64_t sub_251A64190(void *a1, void *a2)
{
  return sub_251A67B50(a1, a2, (unint64_t *)&qword_26B21EB40, 0x263F0E0B0, &qword_269B9D320);
}

uint64_t sub_251A641AC(void *a1, void *a2)
{
  return sub_251A67B50(a1, a2, &qword_269B9D128, 0x263F0E518, &qword_269B9D318);
}

uint64_t sub_251A641C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for StaticService();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_251F36CA0();
  swift_bridgeObjectRetain();
  StaticService.hash(into:)(v20);
  uint64_t v11 = sub_251F36D00();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v19 = a1;
    uint64_t v14 = ~v12;
    uint64_t v15 = *(void *)(v7 + 72);
    while (1)
    {
      sub_251A81FF0(*(void *)(v10 + 48) + v15 * v13, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticService);
      char v16 = _s13HomeDataModel13StaticServiceV2eeoiySbAC_ACtFZ_0((uint64_t)v9, a2);
      sub_251A820C0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticService);
      if (v16) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v14;
      if (((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        a1 = v19;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    sub_251A820C0(a2, (uint64_t (*)(void))type metadata accessor for StaticService);
    sub_251A81FF0(*(void *)(*v3 + 48) + v15 * v13, v19, (uint64_t (*)(void))type metadata accessor for StaticService);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_251A81FF0(a2, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticService);
    *(void *)&v20[0] = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_251A71A4C((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = *(void *)&v20[0];
    swift_bridgeObjectRelease();
    sub_251A82058(a2, a1, (uint64_t (*)(void))type metadata accessor for StaticService);
    return 1;
  }
}

uint64_t sub_251A6444C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for StaticAccessory(0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_251F36CA0();
  swift_bridgeObjectRetain();
  StaticAccessory.hash(into:)(v20);
  uint64_t v11 = sub_251F36D00();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v19 = a1;
    uint64_t v14 = ~v12;
    uint64_t v15 = *(void *)(v7 + 72);
    while (1)
    {
      sub_251A81FF0(*(void *)(v10 + 48) + v15 * v13, (uint64_t)v9, type metadata accessor for StaticAccessory);
      char v16 = _s13HomeDataModel15StaticAccessoryV2eeoiySbAC_ACtFZ_0((uint64_t)v9, a2);
      sub_251A820C0((uint64_t)v9, type metadata accessor for StaticAccessory);
      if (v16) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v14;
      if (((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        a1 = v19;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    sub_251A820C0(a2, type metadata accessor for StaticAccessory);
    sub_251A81FF0(*(void *)(*v3 + 48) + v15 * v13, v19, type metadata accessor for StaticAccessory);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_251A81FF0(a2, (uint64_t)v9, type metadata accessor for StaticAccessory);
    *(void *)&v20[0] = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_251A71D24((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = *(void *)&v20[0];
    swift_bridgeObjectRelease();
    sub_251A82058(a2, a1, type metadata accessor for StaticAccessory);
    return 1;
  }
}

uint64_t sub_251A646D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
  uint64_t v25 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v23 - v10;
  uint64_t v12 = *v2;
  sub_251F36CA0();
  swift_bridgeObjectRetain();
  StaticAccessory.hash(into:)(v28);
  uint64_t v13 = a2 + *(int *)(v6 + 20);
  StaticService.hash(into:)(v28);
  uint64_t v27 = a2 + *(int *)(v6 + 24);
  StaticCharacteristic.hash(into:)((uint64_t)v28);
  uint64_t v14 = sub_251F36D00();
  uint64_t v15 = -1 << *(unsigned char *)(v12 + 32);
  unint64_t v16 = v14 & ~v15;
  uint64_t v17 = *(void *)(v12 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16;
  uint64_t v26 = v11;
  if (v17)
  {
    char v23 = v2;
    uint64_t v24 = a1;
    uint64_t v18 = ~v15;
    uint64_t v19 = *(void *)(v25 + 72);
    do
    {
      sub_251A81FF0(*(void *)(v12 + 48) + v19 * v16, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
      if ((_s13HomeDataModel15StaticAccessoryV2eeoiySbAC_ACtFZ_0((uint64_t)v9, a2) & 1) != 0
        && (_s13HomeDataModel13StaticServiceV2eeoiySbAC_ACtFZ_0((uint64_t)&v9[*(int *)(v6 + 20)], v13) & 1) != 0
        && _s13HomeDataModel20StaticCharacteristicV2eeoiySbAC_ACtFZ_0((uint64_t)&v9[*(int *)(v6 + 24)], v27))
      {
        sub_251A820C0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
        swift_bridgeObjectRelease();
        sub_251A820C0(a2, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
        sub_251A81FF0(*(void *)(*v23 + 48) + v19 * v16, v24, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
        return 0;
      }
      sub_251A820C0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
      unint64_t v16 = (v16 + 1) & v18;
    }
    while (((*(void *)(v12 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16) & 1) != 0);
    swift_bridgeObjectRelease();
    uint64_t v3 = v23;
    a1 = v24;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v22 = (uint64_t)v26;
  sub_251A81FF0(a2, (uint64_t)v26, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
  *(void *)&v28[0] = *v3;
  *uint64_t v3 = 0x8000000000000000;
  sub_251A71FFC(v22, v16, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = *(void *)&v28[0];
  swift_bridgeObjectRelease();
  sub_251A82058(a2, a1, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
  return 1;
}

uint64_t sub_251A649E8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (int *)type metadata accessor for StaticMediaSystemComponent();
  uint64_t v6 = *((void *)v5 - 1);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v66 = (uint64_t)&v55 - v10;
  uint64_t v67 = v2;
  uint64_t v11 = *v2;
  sub_251F36CA0();
  uint64_t v12 = sub_251F34DA0();
  sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
  swift_bridgeObjectRetain();
  sub_251F35610();
  uint64_t v76 = a2 + v5[5];
  StaticMediaProfile.hash(into:)(v81);
  uint64_t v80 = v5[6];
  sub_251F36CB0();
  uint64_t v79 = v5[7];
  sub_251A54708(v81, *(void *)(a2 + v79));
  uint64_t v13 = a2 + v5[8];
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t v75 = *(void *)(*(void *)(v14 - 8) + 64);
  MEMORY[0x270FA5388](v14 - 8);
  unint64_t v16 = (char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = v13;
  sub_251A1E280(v13, (uint64_t)v16);
  uint64_t v17 = *(void *)(v12 - 8);
  uint64_t v69 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
  uint64_t v70 = v17 + 48;
  uint64_t v18 = v69(v16, 1, v12);
  uint64_t v78 = v12;
  uint64_t v65 = v17;
  if (v18 == 1)
  {
    sub_251F36CC0();
  }
  else
  {
    uint64_t v77 = (char *)v6;
    uint64_t v74 = &v55;
    MEMORY[0x270FA5388](v18);
    uint64_t v20 = a1;
    uint64_t v21 = v17;
    uint64_t v22 = (char *)&v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v22, v16, v12);
    sub_251F36CC0();
    sub_251F35610();
    uint64_t v23 = v21;
    a1 = v20;
    (*(void (**)(char *, uint64_t))(v23 + 8))(v22, v12);
    uint64_t v6 = (uint64_t)v77;
  }
  uint64_t v24 = sub_251F36D00();
  uint64_t v25 = -1 << *(unsigned char *)(v11 + 32);
  unint64_t v26 = v24 & ~v25;
  uint64_t v27 = v11 + 56;
  uint64_t v28 = *(void *)(v11 + 56 + ((v26 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v26;
  uint64_t v68 = a1;
  if ((v28 & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    uint64_t v51 = v67;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v53 = v66;
    sub_251A81FF0(a2, v66, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent);
    *(void *)&v81[0] = *v51;
    void *v51 = 0x8000000000000000;
    sub_251A722E8(v53, v26, isUniquelyReferenced_nonNull_native);
    void *v51 = *(void *)&v81[0];
    swift_bridgeObjectRelease();
    sub_251A82058(a2, v68, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent);
    return 1;
  }
  uint64_t v29 = ~v25;
  uint64_t v30 = *(void *)(v6 + 72);
  uint64_t v58 = v65 + 32;
  uint64_t v61 = (void (**)(unint64_t, uint64_t))(v65 + 8);
  uint64_t v31 = v76;
  uint64_t v63 = v5;
  uint64_t v64 = v11;
  while (1)
  {
    sub_251A81FF0(*(void *)(v11 + 48) + v30 * v26, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent);
    if ((sub_251F34D70() & 1) == 0) {
      goto LABEL_8;
    }
    if ((_s13HomeDataModel18StaticMediaProfileV2eeoiySbAC_ACtFZ_0((uint64_t)&v9[v5[5]], v31) & 1) == 0) {
      goto LABEL_8;
    }
    if (*(void *)&v9[v5[6]] != *(void *)(a2 + v80)) {
      goto LABEL_8;
    }
    uint64_t v34 = sub_251B04848(*(void *)&v9[v5[7]], *(void *)(a2 + v79));
    if ((v34 & 1) == 0) {
      goto LABEL_8;
    }
    uint64_t v73 = &v55;
    uint64_t v77 = &v9[v5[8]];
    MEMORY[0x270FA5388](v34);
    unint64_t v62 = (v35 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v36 = (char *)&v55 - v62;
    sub_251A1E280(v71, (uint64_t)&v55 - v62);
    uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E6B8);
    unint64_t v72 = &v55;
    uint64_t v38 = MEMORY[0x270FA5388](v37 - 8);
    uint64_t v40 = (char *)&v55 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v41 = (uint64_t)&v40[*(int *)(v38 + 56)];
    sub_251A1E280((uint64_t)v77, (uint64_t)v40);
    uint64_t v74 = (char **)v41;
    sub_251A1E280((uint64_t)v36, v41);
    uint64_t v77 = v40;
    uint64_t v42 = v40;
    uint64_t v43 = (uint64_t (*)(char **, uint64_t, uint64_t))v69;
    uint64_t v44 = v69(v42, 1, v78);
    if (v44 == 1) {
      break;
    }
    uint64_t v60 = v36;
    uint64_t v59 = &v55;
    MEMORY[0x270FA5388](v44);
    unint64_t v62 = (unint64_t)&v55 - v62;
    sub_251A1E280((uint64_t)v77, v62);
    uint64_t v45 = v78;
    uint64_t v46 = v43(v74, 1, v78);
    if (v46 == 1)
    {
      sub_251A1B064((uint64_t)v60, &qword_26B21FF90);
      (*v61)(v62, v45);
      uint64_t v33 = (uint64_t)v77;
      uint64_t v11 = v64;
      goto LABEL_7;
    }
    uint64_t v57 = &v55;
    uint64_t v47 = v65;
    MEMORY[0x270FA5388](v46);
    uint64_t v49 = (char *)&v55 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v50 = *(void (**)(char *, char **, uint64_t))(v47 + 32);
    uint64_t v55 = v49;
    v50(v49, v74, v45);
    sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
    LODWORD(v74) = sub_251F35650();
    uint64_t v56 = *(void (**)(char *, uint64_t))(v47 + 8);
    v56(v55, v45);
    sub_251A1B064((uint64_t)v60, &qword_26B21FF90);
    v56((char *)v62, v45);
    sub_251A1B064((uint64_t)v77, &qword_26B21FF90);
    uint64_t v31 = v76;
    uint64_t v5 = v63;
    uint64_t v11 = v64;
    if (v74) {
      goto LABEL_21;
    }
LABEL_8:
    sub_251A820C0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent);
    unint64_t v26 = (v26 + 1) & v29;
    if (((*(void *)(v27 + ((v26 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v26) & 1) == 0) {
      goto LABEL_18;
    }
  }
  sub_251A1B064((uint64_t)v36, &qword_26B21FF90);
  BOOL v32 = v43(v74, 1, v78) == 1;
  uint64_t v33 = (uint64_t)v77;
  uint64_t v11 = v64;
  if (!v32)
  {
LABEL_7:
    sub_251A1B064(v33, &qword_26B21E6B8);
    uint64_t v31 = v76;
    uint64_t v5 = v63;
    goto LABEL_8;
  }
  sub_251A1B064((uint64_t)v77, &qword_26B21FF90);
LABEL_21:
  sub_251A820C0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent);
  swift_bridgeObjectRelease();
  sub_251A820C0(a2, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent);
  sub_251A81FF0(*(void *)(*v67 + 48) + v30 * v26, v68, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent);
  return 0;
}

uint64_t sub_251A652AC(void *a1, void *a2)
{
  return sub_251A67B50(a1, a2, &qword_269BA04C0, 0x263F0E0E0, &qword_269B9D2E8);
}

uint64_t sub_251A652C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for StaticZone();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v39 - v11;
  uint64_t v13 = *v3;
  sub_251F36CA0();
  uint64_t v14 = sub_251F34DA0();
  sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
  swift_bridgeObjectRetain();
  sub_251F35610();
  uint64_t v45 = (void *)(a2 + *(int *)(v6 + 20));
  sub_251F357B0();
  uint64_t v47 = v6;
  uint64_t v15 = *(int *)(v6 + 24);
  uint64_t v52 = a2;
  uint64_t v44 = v15;
  sub_251A41A94((uint64_t)v63, *(void *)(a2 + v15));
  uint64_t v16 = sub_251F36D00();
  uint64_t v17 = -1 << *(unsigned char *)(v13 + 32);
  unint64_t v18 = v16 & ~v17;
  uint64_t v49 = v13 + 56;
  if ((*(void *)(v13 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18))
  {
    uint64_t v40 = v12;
    uint64_t v41 = v3;
    uint64_t v42 = a1;
    uint64_t v46 = ~v17;
    uint64_t v51 = *(void *)(v7 + 72);
    uint64_t v56 = v14;
    uint64_t v43 = (uint64_t *)(v14 - 8);
    uint64_t v54 = v10;
    uint64_t v50 = v13;
    uint64_t v19 = v14;
    do
    {
      uint64_t v20 = *(void *)(v13 + 48);
      unint64_t v53 = v18;
      unint64_t v48 = v51 * v18;
      sub_251A81FF0(v20 + v51 * v18, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticZone);
      if (sub_251F34D70())
      {
        uint64_t v21 = (uint64_t *)&v54[*(int *)(v47 + 20)];
        uint64_t v22 = *v21;
        BOOL v23 = *v21 == *v45 && v21[1] == v45[1];
        if (v23 || (uint64_t v22 = sub_251F36B10(), (v22 & 1) != 0))
        {
          uint64_t v24 = *(void *)&v54[*(int *)(v47 + 24)];
          uint64_t v60 = *(void *)(v52 + v44);
          uint64_t v61 = v24;
          uint64_t v25 = *(void *)(v24 + 16);
          if (v25 == *(void *)(v60 + 16))
          {
            if (!v25 || (uint64_t v26 = *v43, v61 == v60))
            {
LABEL_16:
              sub_251A820C0((uint64_t)v54, (uint64_t (*)(void))type metadata accessor for StaticZone);
              swift_bridgeObjectRelease();
              sub_251A820C0(v52, (uint64_t (*)(void))type metadata accessor for StaticZone);
              sub_251A81FF0(*(void *)(*v41 + 48) + v48, v42, (uint64_t (*)(void))type metadata accessor for StaticZone);
              return 0;
            }
            unint64_t v27 = (*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
            uint64_t v28 = *(void (**)(char *, unint64_t, uint64_t))(v26 + 16);
            uint64_t v57 = *(void *)(v26 + 64);
            uint64_t v58 = v28;
            uint64_t v55 = *(void *)(v26 + 72);
            uint64_t v59 = v26 + 16;
            uint64_t v29 = (uint64_t (**)(char *, uint64_t))(v26 + 8);
            while (1)
            {
              unint64_t v62 = &v39;
              uint64_t v30 = v57;
              MEMORY[0x270FA5388](v22);
              uint64_t v31 = (char *)&v39 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
              BOOL v32 = v58;
              uint64_t v33 = ((uint64_t (*)(char *, unint64_t, uint64_t))v58)(v31, v61 + v27, v19);
              MEMORY[0x270FA5388](v33);
              v32(v31, v60 + v27, v19);
              sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
              char v34 = sub_251F35650();
              uint64_t v35 = *v29;
              (*v29)(v31, v19);
              uint64_t v22 = v35(v31, v19);
              if ((v34 & 1) == 0) {
                break;
              }
              v27 += v55;
              if (!--v25) {
                goto LABEL_16;
              }
            }
          }
        }
      }
      uint64_t v10 = v54;
      sub_251A820C0((uint64_t)v54, (uint64_t (*)(void))type metadata accessor for StaticZone);
      unint64_t v18 = (v53 + 1) & v46;
      uint64_t v13 = v50;
    }
    while (((*(void *)(v49 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) != 0);
    swift_bridgeObjectRelease();
    a1 = v42;
    uint64_t v3 = v41;
    uint64_t v12 = v40;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v38 = v52;
  sub_251A81FF0(v52, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticZone);
  v63[0] = *v3;
  *uint64_t v3 = 0x8000000000000000;
  sub_251A72C00((uint64_t)v12, v18, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v63[0];
  swift_bridgeObjectRelease();
  sub_251A82058(v38, a1, (uint64_t (*)(void))type metadata accessor for StaticZone);
  return 1;
}

uint64_t sub_251A6587C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (int *)type metadata accessor for StaticActionSet();
  uint64_t v6 = *((void *)v5 - 1);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v52 - v10;
  uint64_t v12 = *v2;
  sub_251F36CA0();
  swift_bridgeObjectRetain();
  StaticActionSet.hash(into:)(&v66);
  uint64_t v13 = sub_251F36D00();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  unint64_t v15 = v13 & ~v14;
  if (((*(void *)(v12 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  unint64_t v53 = v11;
  uint64_t v54 = a1;
  uint64_t v16 = ~v14;
  uint64_t v17 = *(void *)(v6 + 72);
  do
  {
    sub_251A81FF0(*(void *)(v12 + 48) + v17 * v15, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
    if (sub_251F34D70())
    {
      uint64_t v18 = v5[5];
      uint64_t v19 = *(void *)&v9[v18];
      uint64_t v20 = *(void *)&v9[v18 + 8];
      uint64_t v21 = (void *)(a2 + v18);
      BOOL v22 = v19 == *v21 && v20 == v21[1];
      if (v22 || (sub_251F36B10() & 1) != 0)
      {
        uint64_t v23 = v5[6];
        int v24 = v9[v23];
        int v25 = *(unsigned __int8 *)(a2 + v23);
        if (v24 == 7)
        {
          if (v25 != 7) {
            goto LABEL_3;
          }
        }
        else if (v25 == 7 || (sub_251DB3434(v24, v25) & 1) == 0)
        {
          goto LABEL_3;
        }
        if (sub_251F34D70())
        {
          uint64_t v26 = &v9[v5[8]];
          uint64_t v27 = *(void *)v26;
          uint64_t v28 = *((void *)v26 + 1);
          char v29 = v26[16];
          uint64_t v30 = *((void *)v26 + 3);
          uint64_t v31 = *((void *)v26 + 4);
          char v32 = v26[40];
          uint64_t v33 = *((void *)v26 + 6);
          uint64_t v34 = *((void *)v26 + 7);
          char v35 = v26[64];
          uint64_t v36 = *((void *)v26 + 9);
          uint64_t v37 = *((void *)v26 + 10);
          LOBYTE(v26) = v26[88];
          *(void *)&long long v66 = v27;
          *((void *)&v66 + 1) = v28;
          char v67 = v29;
          uint64_t v68 = v30;
          uint64_t v69 = v31;
          char v70 = v32;
          uint64_t v71 = v33;
          uint64_t v72 = v34;
          char v73 = v35;
          uint64_t v74 = v36;
          uint64_t v75 = v37;
          char v76 = (char)v26;
          uint64_t v38 = a2 + v5[8];
          uint64_t v39 = *(void *)v38;
          uint64_t v40 = *(void *)(v38 + 8);
          char v41 = *(unsigned char *)(v38 + 16);
          uint64_t v42 = *(void *)(v38 + 24);
          uint64_t v43 = *(void *)(v38 + 32);
          char v44 = *(unsigned char *)(v38 + 40);
          uint64_t v45 = *(void *)(v38 + 48);
          uint64_t v46 = *(void *)(v38 + 56);
          char v47 = *(unsigned char *)(v38 + 64);
          uint64_t v48 = *(void *)(v38 + 72);
          uint64_t v49 = *(void *)(v38 + 80);
          LOBYTE(v38) = *(unsigned char *)(v38 + 88);
          v55[0] = v39;
          v55[1] = v40;
          char v56 = v41;
          uint64_t v57 = v42;
          uint64_t v58 = v43;
          char v59 = v44;
          uint64_t v60 = v45;
          uint64_t v61 = v46;
          char v62 = v47;
          uint64_t v63 = v48;
          uint64_t v64 = v49;
          char v65 = v38;
          if (_s13HomeDataModel4IconV2eeoiySbAC_ACtFZ_0((uint64_t)&v66, (uint64_t)v55)
            && (sub_251F352E0() & 1) != 0
            && (sub_251B04848(*(void *)&v9[v5[10]], *(void *)(a2 + v5[10])) & 1) != 0
            && v9[v5[11]] == *(unsigned char *)(a2 + v5[11])
            && (sub_251B0657C(*(void *)&v9[v5[12]], *(void *)(a2 + v5[12])) & 1) != 0
            && v9[v5[13]] == *(unsigned char *)(a2 + v5[13])
            && v9[v5[14]] == *(unsigned char *)(a2 + v5[14]))
          {
            sub_251A820C0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
            swift_bridgeObjectRelease();
            sub_251A820C0(a2, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
            sub_251A81FF0(*(void *)(*v2 + 48) + v17 * v15, v54, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
            return 0;
          }
        }
      }
    }
LABEL_3:
    sub_251A820C0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
    unint64_t v15 = (v15 + 1) & v16;
  }
  while (((*(void *)(v12 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) != 0);
  swift_bridgeObjectRelease();
  a1 = v54;
  uint64_t v11 = v53;
LABEL_26:
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_251A81FF0(a2, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
  *(void *)&long long v66 = *v2;
  *unint64_t v2 = 0x8000000000000000;
  sub_251A7313C((uint64_t)v11, v15, isUniquelyReferenced_nonNull_native);
  *unint64_t v2 = v66;
  swift_bridgeObjectRelease();
  sub_251A82058(a2, a1, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
  return 1;
}

uint64_t sub_251A65CEC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for StaticCameraProfile();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_251F36CA0();
  swift_bridgeObjectRetain();
  StaticCameraProfile.hash(into:)(v20);
  uint64_t v11 = sub_251F36D00();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v19 = a1;
    uint64_t v14 = ~v12;
    uint64_t v15 = *(void *)(v7 + 72);
    while (1)
    {
      sub_251A81FF0(*(void *)(v10 + 48) + v15 * v13, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
      char v16 = _s13HomeDataModel19StaticCameraProfileV2eeoiySbAC_ACtFZ_0((uint64_t)v9, a2);
      sub_251A820C0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
      if (v16) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v14;
      if (((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        a1 = v19;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    sub_251A820C0(a2, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
    sub_251A81FF0(*(void *)(*v3 + 48) + v15 * v13, v19, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_251A81FF0(a2, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
    *(void *)&v20[0] = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_251A735B4((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = *(void *)&v20[0];
    swift_bridgeObjectRelease();
    sub_251A82058(a2, a1, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
    return 1;
  }
}

uint64_t sub_251A65F70(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for StaticRoom(0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_251F36CA0();
  swift_bridgeObjectRetain();
  StaticRoom.hash(into:)(v20);
  uint64_t v11 = sub_251F36D00();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v19 = a1;
    uint64_t v14 = ~v12;
    uint64_t v15 = *(void *)(v7 + 72);
    while (1)
    {
      sub_251A81FF0(*(void *)(v10 + 48) + v15 * v13, (uint64_t)v9, type metadata accessor for StaticRoom);
      char v16 = _s13HomeDataModel10StaticRoomV2eeoiySbAC_ACtFZ_0((uint64_t)v9, a2);
      sub_251A820C0((uint64_t)v9, type metadata accessor for StaticRoom);
      if (v16) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v14;
      if (((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        a1 = v19;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    sub_251A820C0(a2, type metadata accessor for StaticRoom);
    sub_251A81FF0(*(void *)(*v3 + 48) + v15 * v13, v19, type metadata accessor for StaticRoom);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_251A81FF0(a2, (uint64_t)v9, type metadata accessor for StaticRoom);
    *(void *)&v20[0] = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_251A7388C((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = *(void *)&v20[0];
    swift_bridgeObjectRelease();
    sub_251A82058(a2, a1, type metadata accessor for StaticRoom);
    return 1;
  }
}

uint64_t sub_251A661F4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (int *)type metadata accessor for StaticServiceGroup();
  uint64_t v6 = *((void *)v5 - 1);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v30 - v10;
  uint64_t v12 = *v2;
  sub_251F36CA0();
  swift_bridgeObjectRetain();
  StaticServiceGroup.hash(into:)(v33);
  uint64_t v13 = sub_251F36D00();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  unint64_t v15 = v13 & ~v14;
  if ((*(void *)(v12 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
  {
    uint64_t v31 = v11;
    uint64_t v32 = a1;
    uint64_t v16 = ~v14;
    uint64_t v17 = *(void *)(v6 + 72);
    while (1)
    {
      sub_251A81FF0(*(void *)(v12 + 48) + v17 * v15, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
      if (sub_251F34D70())
      {
        uint64_t v18 = v5[5];
        uint64_t v19 = *(void *)&v9[v18];
        uint64_t v20 = *(void *)&v9[v18 + 8];
        uint64_t v21 = (void *)(a2 + v18);
        BOOL v22 = v19 == *v21 && v20 == v21[1];
        if (v22 || (sub_251F36B10())
          && v9[v5[6]] == *(unsigned char *)(a2 + v5[6])
          && v9[v5[7]] == *(unsigned char *)(a2 + v5[7])
          && (sub_251B04848(*(void *)&v9[v5[8]], *(void *)(a2 + v5[8])) & 1) != 0)
        {
          uint64_t v23 = v5[9];
          int v24 = &v9[v23];
          uint64_t v25 = *(void *)&v9[v23 + 8];
          uint64_t v26 = (void *)(a2 + v23);
          uint64_t v27 = v26[1];
          if (v25)
          {
            if (v27 && (*(void *)v24 == *v26 && v25 == v27 || (sub_251F36B10() & 1) != 0))
            {
LABEL_20:
              if (v9[v5[10]] == *(unsigned char *)(a2 + v5[10])
                && (sub_251AF99A8(*(void *)&v9[v5[11]], *(void *)(a2 + v5[11])) & 1) != 0)
              {
                sub_251A820C0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
                swift_bridgeObjectRelease();
                sub_251A820C0(a2, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
                sub_251A81FF0(*(void *)(*v2 + 48) + v17 * v15, v32, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
                return 0;
              }
            }
          }
          else if (!v27)
          {
            goto LABEL_20;
          }
        }
      }
      sub_251A820C0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
      unint64_t v15 = (v15 + 1) & v16;
      if (((*(void *)(v12 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v11 = v31;
        a1 = v32;
        goto LABEL_24;
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_24:
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_251A81FF0(a2, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
  *(void *)&v33[0] = *v2;
  *unint64_t v2 = 0x8000000000000000;
  sub_251A73B64((uint64_t)v11, v15, isUniquelyReferenced_nonNull_native);
  *unint64_t v2 = *(void *)&v33[0];
  swift_bridgeObjectRelease();
  sub_251A82058(a2, a1, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
  return 1;
}

uint64_t sub_251A66584(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = (int *)type metadata accessor for StaticUser();
  uint64_t v25 = *((void *)v6 - 1);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v26 = (uint64_t)&v23 - v10;
  uint64_t v11 = *v2;
  sub_251F36CA0();
  sub_251F34DA0();
  sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
  swift_bridgeObjectRetain();
  sub_251F35610();
  uint64_t v12 = (void *)(a2 + v6[5]);
  sub_251F357B0();
  uint64_t v29 = a2 + v6[6];
  sub_251F35610();
  uint64_t v28 = v6[7];
  sub_251F36CB0();
  uint64_t v27 = v6[8];
  sub_251F36CB0();
  uint64_t v13 = sub_251F36D00();
  uint64_t v14 = -1 << *(unsigned char *)(v11 + 32);
  unint64_t v15 = v13 & ~v14;
  if ((*(void *)(v11 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
  {
    uint64_t v23 = v2;
    uint64_t v24 = a1;
    uint64_t v16 = ~v14;
    uint64_t v17 = *(void *)(v25 + 72);
    do
    {
      sub_251A81FF0(*(void *)(v11 + 48) + v17 * v15, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticUser);
      if (sub_251F34D70())
      {
        uint64_t v18 = &v9[v6[5]];
        BOOL v19 = *(void *)v18 == *v12 && *((void *)v18 + 1) == v12[1];
        if (v19 || (sub_251F36B10())
          && (sub_251F34D70() & 1) != 0
          && v9[v6[7]] == *(unsigned char *)(a2 + v28)
          && v9[v6[8]] == *(unsigned char *)(a2 + v27))
        {
          sub_251A820C0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticUser);
          swift_bridgeObjectRelease();
          sub_251A820C0(a2, (uint64_t (*)(void))type metadata accessor for StaticUser);
          sub_251A81FF0(*(void *)(*v23 + 48) + v17 * v15, v24, (uint64_t (*)(void))type metadata accessor for StaticUser);
          return 0;
        }
      }
      sub_251A820C0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticUser);
      unint64_t v15 = (v15 + 1) & v16;
    }
    while (((*(void *)(v11 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) != 0);
    swift_bridgeObjectRelease();
    uint64_t v3 = v23;
    a1 = v24;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v22 = v26;
  sub_251A81FF0(a2, v26, (uint64_t (*)(void))type metadata accessor for StaticUser);
  uint64_t v30 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  sub_251A73ED4(v22, v15, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v30;
  swift_bridgeObjectRelease();
  sub_251A82058(a2, a1, (uint64_t (*)(void))type metadata accessor for StaticUser);
  return 1;
}

uint64_t sub_251A66934(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (int *)type metadata accessor for StaticResident();
  uint64_t v6 = *((void *)v5 - 1);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v34 - v10;
  uint64_t v12 = *v2;
  sub_251F36CA0();
  swift_bridgeObjectRetain();
  StaticResident.hash(into:)((uint64_t)v37);
  uint64_t v13 = sub_251F36D00();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  unint64_t v15 = v13 & ~v14;
  if (((*(void *)(v12 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_43;
  }
  char v35 = v11;
  uint64_t v36 = a1;
  uint64_t v16 = ~v14;
  uint64_t v17 = *(void *)(v6 + 72);
  do
  {
    sub_251A81FF0(*(void *)(v12 + 48) + v17 * v15, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticResident);
    if ((sub_251F34D70() & 1) == 0) {
      goto LABEL_4;
    }
    uint64_t v18 = v5[5];
    uint64_t v19 = *(void *)&v9[v18];
    uint64_t v20 = *(void *)&v9[v18 + 8];
    uint64_t v21 = (void *)(a2 + v18);
    BOOL v22 = v19 == *v21 && v20 == v21[1];
    if (!v22 && (sub_251F36B10() & 1) == 0) {
      goto LABEL_4;
    }
    uint64_t v23 = v5[6];
    uint64_t v24 = &v9[v23];
    uint64_t v25 = *(void *)&v9[v23 + 8];
    uint64_t v26 = (void *)(a2 + v23);
    uint64_t v27 = v26[1];
    if (v25)
    {
      if (!v27) {
        goto LABEL_4;
      }
      BOOL v28 = *(void *)v24 == *v26 && v25 == v27;
      if (!v28 && (sub_251F36B10() & 1) == 0) {
        goto LABEL_4;
      }
    }
    else if (v27)
    {
      goto LABEL_4;
    }
    if ((sub_251B0693C(*(void *)&v9[v5[7]], *(void *)(a2 + v5[7])) & 1) == 0
      || (sub_251B06B20(*(void *)&v9[v5[8]], *(void *)(a2 + v5[8])) & 1) == 0)
    {
      goto LABEL_4;
    }
    uint64_t v29 = v5[9];
    unsigned int v30 = *(unsigned __int16 *)&v9[v29];
    unsigned int v31 = *(unsigned __int16 *)(a2 + v29);
    if (v30 >> 14)
    {
      if (v30 >> 14 != 1)
      {
        switch(v30)
        {
          case 0x8000u:
            if (v31 == 0x8000) {
              goto LABEL_39;
            }
            goto LABEL_4;
          case 0x8001u:
            if (v31 == 32769) {
              goto LABEL_39;
            }
            goto LABEL_4;
          case 0x8002u:
            if (v31 == 32770) {
              goto LABEL_39;
            }
            goto LABEL_4;
          case 0x8003u:
            if (v31 == 32771) {
              goto LABEL_39;
            }
            goto LABEL_4;
          default:
            if (v31 == 33024) {
              goto LABEL_39;
            }
            goto LABEL_4;
        }
      }
      if ((v31 & 0xC000) != 0x4000
        || ((v30 & 1) == 0) == (v31 & 1)
        || ((((v30 & 0x100) == 0) ^ ((unsigned __int16)(v31 & 0x100) >> 8)) & 1) == 0)
      {
        goto LABEL_4;
      }
    }
    else if (v31 >> 14 || v31 != v30)
    {
      goto LABEL_4;
    }
LABEL_39:
    if (sub_251F34D70())
    {
      sub_251A820C0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticResident);
      swift_bridgeObjectRelease();
      sub_251A820C0(a2, (uint64_t (*)(void))type metadata accessor for StaticResident);
      sub_251A81FF0(*(void *)(*v2 + 48) + v17 * v15, v36, (uint64_t (*)(void))type metadata accessor for StaticResident);
      return 0;
    }
LABEL_4:
    sub_251A820C0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticResident);
    unint64_t v15 = (v15 + 1) & v16;
  }
  while (((*(void *)(v12 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) != 0);
  swift_bridgeObjectRelease();
  uint64_t v11 = v35;
  a1 = v36;
LABEL_43:
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_251A81FF0(a2, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticResident);
  v37[0] = *v2;
  *unint64_t v2 = 0x8000000000000000;
  sub_251A74258((uint64_t)v11, v15, isUniquelyReferenced_nonNull_native);
  *unint64_t v2 = v37[0];
  swift_bridgeObjectRelease();
  sub_251A82058(a2, a1, (uint64_t (*)(void))type metadata accessor for StaticResident);
  return 1;
}

uint64_t sub_251A66D88(unsigned char *a1, uint64_t a2)
{
  return sub_251A66D9C(a1, a2, &qword_269B9D270);
}

uint64_t sub_251A66D9C(unsigned char *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v7 = *v3;
  sub_251F36CA0();
  sub_251F36CB0();
  uint64_t v8 = sub_251F36D00();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v15 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_251A746B8(a2, v10, isUniquelyReferenced_nonNull_native, a3);
    *uint64_t v3 = v15;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v11 = *(void *)(v7 + 48);
  if (*(unsigned __int8 *)(v11 + v10) != a2)
  {
    uint64_t v12 = ~v9;
    do
    {
      unint64_t v10 = (v10 + 1) & v12;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(unsigned __int8 *)(v11 + v10) != a2);
  }
  uint64_t result = 0;
  LOBYTE(a2) = *(unsigned char *)(*(void *)(*v3 + 48) + v10);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_251A66ED4(unsigned char *a1, uint64_t a2)
{
  return sub_251A676C4(a1, a2, (void (*)(uint64_t))CharacteristicKind.rawValue.getter, &qword_26B21F1B0, (void (*)(uint64_t))CharacteristicKind.rawValue.getter);
}

uint64_t sub_251A66F00(uint64_t a1, uint64_t a2)
{
  uint64_t v59 = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F0A0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  uint64_t v66 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  unint64_t v10 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  char v62 = (uint64_t *)((char *)&v57 - v12);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v57 - v14;
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v57 = (uint64_t)&v57 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v57 - v18;
  uint64_t v58 = v2;
  uint64_t v68 = *v2;
  sub_251F36CA0();
  sub_251A81FF0(a2, (uint64_t)v19, type metadata accessor for StaticAccessory.DeviceIdentifier);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v60 = v15;
  uint64_t v63 = v6;
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v21 = sub_251F34DA0();
    char v67 = &v57;
    BOOL v22 = v10;
    uint64_t v23 = *(void *)(v21 - 8);
    MEMORY[0x270FA5388](v21);
    uint64_t v25 = (char *)&v57 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v25, v19, v21);
    sub_251F36CB0();
    sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
    uint64_t v26 = v68;
    swift_bridgeObjectRetain();
    sub_251F35610();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v21);
    unint64_t v10 = v22;
    uint64_t v6 = v63;
    uint64_t v15 = v60;
  }
  else
  {
    sub_251F36CB0();
    uint64_t v27 = v68;
    swift_bridgeObjectRetain();
    sub_251F357B0();
    swift_bridgeObjectRelease();
    uint64_t v26 = v27;
  }
  uint64_t v28 = sub_251F36D00();
  uint64_t v29 = -1 << *(unsigned char *)(v26 + 32);
  unint64_t v30 = v28 & ~v29;
  char v67 = (uint64_t *)(v26 + 56);
  if (((*(void *)(v26 + 56 + ((v30 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v30) & 1) == 0)
  {
LABEL_21:
    swift_bridgeObjectRelease();
    unint64_t v53 = v58;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v55 = v57;
    sub_251A81FF0(a2, v57, type metadata accessor for StaticAccessory.DeviceIdentifier);
    uint64_t v69 = *v53;
    *unint64_t v53 = 0x8000000000000000;
    sub_251A74814(v55, v30, isUniquelyReferenced_nonNull_native);
    *unint64_t v53 = v69;
    swift_bridgeObjectRelease();
    sub_251A82058(a2, v59, type metadata accessor for StaticAccessory.DeviceIdentifier);
    return 1;
  }
  uint64_t v65 = ~v29;
  uint64_t v66 = *(void *)(v66 + 72);
  while (1)
  {
    unint64_t v31 = v66 * v30;
    sub_251A81FF0(*(void *)(v26 + 48) + v66 * v30, (uint64_t)v15, type metadata accessor for StaticAccessory.DeviceIdentifier);
    uint64_t v32 = &v6[*(int *)(v4 + 48)];
    sub_251A81FF0((uint64_t)v15, (uint64_t)v6, type metadata accessor for StaticAccessory.DeviceIdentifier);
    sub_251A81FF0(a2, (uint64_t)v32, type metadata accessor for StaticAccessory.DeviceIdentifier);
    int v33 = swift_getEnumCaseMultiPayload();
    unint64_t v64 = v31;
    if (v33 != 1) {
      break;
    }
    sub_251A81FF0((uint64_t)v6, (uint64_t)v10, type metadata accessor for StaticAccessory.DeviceIdentifier);
    int v34 = swift_getEnumCaseMultiPayload();
    uint64_t v35 = sub_251F34DA0();
    uint64_t v36 = v35;
    uint64_t v37 = v10;
    uint64_t v38 = *(void *)(v35 - 8);
    if (v34 == 1)
    {
      uint64_t v61 = &v57;
      MEMORY[0x270FA5388](v35);
      uint64_t v40 = (char *)&v57 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v40, v32, v36);
      char v41 = sub_251F34D70();
      uint64_t v42 = v7;
      uint64_t v43 = v4;
      uint64_t v44 = a2;
      uint64_t v45 = *(void (**)(char *, uint64_t))(v38 + 8);
      v45(v40, v36);
      v45(v37, v36);
      a2 = v44;
      uint64_t v4 = v43;
      uint64_t v7 = v42;
      uint64_t v15 = v60;
      unint64_t v10 = v37;
      uint64_t v6 = v63;
      if (v41) {
        goto LABEL_23;
      }
LABEL_19:
      sub_251A820C0((uint64_t)v6, type metadata accessor for StaticAccessory.DeviceIdentifier);
      uint64_t v26 = v68;
      goto LABEL_8;
    }
    (*(void (**)(char *, uint64_t))(*(void *)(v35 - 8) + 8))(v37, v35);
    unint64_t v10 = v37;
    uint64_t v6 = v63;
LABEL_7:
    uint64_t v26 = v68;
    sub_251A1B064((uint64_t)v6, &qword_26B21F0A0);
LABEL_8:
    sub_251A820C0((uint64_t)v15, type metadata accessor for StaticAccessory.DeviceIdentifier);
    unint64_t v30 = (v30 + 1) & v65;
    if (((*(unint64_t *)((char *)v67 + ((v30 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v30) & 1) == 0) {
      goto LABEL_21;
    }
  }
  uint64_t v46 = v62;
  sub_251A81FF0((uint64_t)v6, (uint64_t)v62, type metadata accessor for StaticAccessory.DeviceIdentifier);
  uint64_t v48 = *v46;
  uint64_t v47 = v46[1];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  uint64_t v49 = *(void *)v32;
  uint64_t v50 = *((void *)v32 + 1);
  if (v48 != v49 || v47 != v50)
  {
    char v52 = sub_251F36B10();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v52) {
      goto LABEL_23;
    }
    goto LABEL_19;
  }
  swift_bridgeObjectRelease_n();
LABEL_23:
  sub_251A820C0((uint64_t)v6, type metadata accessor for StaticAccessory.DeviceIdentifier);
  sub_251A820C0((uint64_t)v15, type metadata accessor for StaticAccessory.DeviceIdentifier);
  swift_bridgeObjectRelease();
  sub_251A820C0(a2, type metadata accessor for StaticAccessory.DeviceIdentifier);
  sub_251A81FF0(*(void *)(*v58 + 48) + v64, v59, type metadata accessor for StaticAccessory.DeviceIdentifier);
  return 0;
}

uint64_t sub_251A67660(void *a1, void *a2)
{
  return sub_251A67B50(a1, a2, (unint64_t *)&qword_269B9D238, 0x263F0E230, &qword_269B9D240);
}

uint64_t sub_251A6767C(void *a1, void *a2)
{
  return sub_251A67B50(a1, a2, (unint64_t *)&qword_26B21EAF8, 0x263F0DF00, &qword_269B9D228);
}

uint64_t sub_251A67698(unsigned char *a1, uint64_t a2)
{
  return sub_251A676C4(a1, a2, (void (*)(uint64_t))ServiceKind.rawValue.getter, &qword_26B21F1A0, (void (*)(uint64_t))ServiceKind.rawValue.getter);
}

uint64_t sub_251A676C4(unsigned char *a1, uint64_t a2, void (*a3)(uint64_t), uint64_t *a4, void (*a5)(uint64_t))
{
  uint64_t v9 = *v5;
  uint64_t v10 = sub_251F36CA0();
  a3(v10);
  swift_bridgeObjectRetain();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  uint64_t v11 = sub_251F36D00();
  uint64_t v13 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v14 = v11 & ~v13;
  uint64_t v26 = a1;
  if ((*(void *)(v9 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
  {
    uint64_t v15 = ~v13;
    while (1)
    {
      uint64_t v16 = ((uint64_t (*)(uint64_t, uint64_t))a3)(v11, v12);
      uint64_t v18 = v17;
      if (v16 == ((uint64_t (*)(uint64_t, uint64_t))a3)(v16, v17) && v18 == v19) {
        break;
      }
      char v21 = sub_251F36B10();
      swift_bridgeObjectRelease();
      uint64_t v11 = swift_bridgeObjectRelease();
      if (v21) {
        goto LABEL_11;
      }
      unint64_t v14 = (v14 + 1) & v15;
      if (((*(void *)(v9 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease_n();
LABEL_11:
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    LOBYTE(a2) = *(unsigned char *)(*(void *)(*v5 + 48) + v14);
  }
  else
  {
LABEL_9:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v27 = *v5;
    *uint64_t v5 = 0x8000000000000000;
    sub_251A74F9C(a2, v14, isUniquelyReferenced_nonNull_native, a4, a5, (uint64_t (*)(void))a5);
    *uint64_t v5 = v27;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
  }
  *uint64_t v26 = a2;
  return result;
}

uint64_t sub_251A678B0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for ActionService();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_251F36CA0();
  swift_bridgeObjectRetain();
  ActionService.hash(into:)(v20);
  uint64_t v11 = sub_251F36D00();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v19 = a1;
    uint64_t v14 = ~v12;
    uint64_t v15 = *(void *)(v7 + 72);
    while (1)
    {
      sub_251A81FF0(*(void *)(v10 + 48) + v15 * v13, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ActionService);
      char v16 = _s13HomeDataModel13ActionServiceV2eeoiySbAC_ACtFZ_0((uint64_t)v9, a2);
      sub_251A820C0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ActionService);
      if (v16) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v14;
      if (((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        a1 = v19;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    sub_251A820C0(a2, (uint64_t (*)(void))type metadata accessor for ActionService);
    sub_251A81FF0(*(void *)(*v3 + 48) + v15 * v13, v19, (uint64_t (*)(void))type metadata accessor for ActionService);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_251A81FF0(a2, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ActionService);
    *(void *)&v20[0] = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_251A7519C((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = *(void *)&v20[0];
    swift_bridgeObjectRelease();
    sub_251A82058(a2, a1, (uint64_t (*)(void))type metadata accessor for ActionService);
    return 1;
  }
}

uint64_t sub_251A67B34(void *a1, void *a2)
{
  return sub_251A67B50(a1, a2, &qword_26B21EB28, 0x263F0E6F0, &qword_269B9D288);
}

uint64_t sub_251A67B50(void *a1, void *a2, unint64_t *a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v8 = v5;
  uint64_t v11 = *v5;
  if ((*v5 & 0xC000000000000001) != 0)
  {
    if (v11 < 0) {
      uint64_t v12 = *v5;
    }
    else {
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v13 = a2;
    uint64_t v14 = sub_251F36310();

    if (v14)
    {
      swift_bridgeObjectRelease();

      sub_251A1A568(0, a3);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v36;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_251F36300();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v26 = sub_251A68BDC(v12, result + 1, a5, a3);
    uint64_t v37 = v26;
    unint64_t v27 = *(void *)(v26 + 16);
    if (*(void *)(v26 + 24) <= v27)
    {
      uint64_t v32 = v27 + 1;
      id v33 = v13;
      sub_251A6DCD0(v32, a5);
      uint64_t v28 = v37;
    }
    else
    {
      uint64_t v28 = v26;
      id v29 = v13;
    }
    sub_251A6F328((uint64_t)v13, v28);
    *uint64_t v8 = v28;
    swift_bridgeObjectRelease();
    *a1 = v13;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_251F36110();
    uint64_t v17 = -1 << *(unsigned char *)(v11 + 32);
    unint64_t v18 = v16 & ~v17;
    if ((*(void *)(v11 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18))
    {
      sub_251A1A568(0, a3);
      id v19 = *(id *)(*(void *)(v11 + 48) + 8 * v18);
      char v20 = sub_251F36120();

      if (v20)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        uint64_t v24 = *(void **)(*(void *)(*v5 + 48) + 8 * v18);
        *a1 = v24;
        id v25 = v24;
        return 0;
      }
      uint64_t v21 = ~v17;
      while (1)
      {
        unint64_t v18 = (v18 + 1) & v21;
        if (((*(void *)(v11 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
          break;
        }
        id v22 = *(id *)(*(void *)(v11 + 48) + 8 * v18);
        char v23 = sub_251F36120();

        if (v23) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v38 = *v5;
    *uint64_t v5 = 0x8000000000000000;
    id v31 = a2;
    sub_251A706D8((uint64_t)v31, v18, isUniquelyReferenced_nonNull_native, a5, a3);
    *uint64_t v5 = v38;
    swift_bridgeObjectRelease();
    *a1 = v31;
  }
  return 1;
}

uint64_t sub_251A67E1C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_251F36CA0();
  swift_bridgeObjectRetain();
  sub_251F357B0();
  uint64_t v8 = sub_251F36D00();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_251F36B10() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      unint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_251F36B10() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_251A75474(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_251A67FCC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = sub_251F36C90();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_251A75610(a2, v9, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v14;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v10 = *(void *)(v6 + 48);
  if (*(void *)(v10 + 8 * v9) != a2)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v11;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(void *)(v10 + 8 * v9) != a2);
  }
  uint64_t result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_251A680C8(unsigned char *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_251EAE504();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if ((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    uint64_t v9 = ~v7;
    while (1)
    {
      unint64_t v10 = 0x8000000251F64710;
      switch(*(unsigned char *)(*(void *)(v5 + 48) + v8))
      {
        case 1:
          uint64_t v11 = "13-AA62-01754F256DD5";
          goto LABEL_11;
        case 2:
          uint64_t v11 = "73-A058-C5E64BC487B2";
          goto LABEL_11;
        case 3:
          uint64_t v11 = "CE-986D-63B28F62C9E3";
          goto LABEL_11;
        case 4:
          uint64_t v11 = "60-AD68-D91053B75F44";
          goto LABEL_11;
        case 5:
          uint64_t v11 = "7E-BE63-1D00B1500545";
          goto LABEL_11;
        case 6:
          uint64_t v11 = "17-A590-755E1AAC02AE";
          goto LABEL_11;
        case 7:
          uint64_t v11 = "73-8FBD-0E8978A33403";
LABEL_11:
          unint64_t v10 = (unint64_t)v11 | 0x8000000000000000;
          break;
        default:
          break;
      }
      unint64_t v12 = 0x8000000251F64710;
      switch((char)a2)
      {
        case 1:
          BOOL v13 = "13-AA62-01754F256DD5";
          goto LABEL_20;
        case 2:
          BOOL v13 = "73-A058-C5E64BC487B2";
          goto LABEL_20;
        case 3:
          BOOL v13 = "CE-986D-63B28F62C9E3";
          goto LABEL_20;
        case 4:
          BOOL v13 = "60-AD68-D91053B75F44";
          goto LABEL_20;
        case 5:
          BOOL v13 = "7E-BE63-1D00B1500545";
          goto LABEL_20;
        case 6:
          BOOL v13 = "17-A590-755E1AAC02AE";
          goto LABEL_20;
        case 7:
          BOOL v13 = "73-8FBD-0E8978A33403";
LABEL_20:
          unint64_t v12 = (unint64_t)v13 | 0x8000000000000000;
          break;
        default:
          break;
      }
      if (v10 == v12)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        goto LABEL_27;
      }
      char v14 = sub_251F36B10();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v14) {
        break;
      }
      unint64_t v8 = (v8 + 1) & v9;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_24;
      }
    }
    swift_bridgeObjectRelease();
LABEL_27:
    uint64_t result = 0;
    char v16 = *(unsigned char *)(*(void *)(*v3 + 48) + v8);
  }
  else
  {
LABEL_24:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    char v16 = a2;
    sub_251A75734(a2, v8, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v19;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
  }
  *a1 = v16;
  return result;
}

uint64_t sub_251A683C0(uint64_t a1, uint64_t a2)
{
  uint64_t v54 = _s7MergeIdVMa();
  uint64_t v5 = *(void *)(v54 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v54);
  unint64_t v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  unint64_t v10 = (char *)&v47 - v9;
  uint64_t v66 = *v2;
  sub_251F36CA0();
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t v12 = *(void *)(*(void *)(v11 - 8) + 64);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v65 = a2;
  sub_251A1E280(a2, (uint64_t)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = sub_251F34DA0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = v14 + 48;
  uint64_t v63 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  uint64_t v16 = v63((char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), 1, v13);
  uint64_t v64 = v13;
  uint64_t v49 = a1;
  uint64_t v48 = v2;
  uint64_t v47 = v10;
  if (v16 == 1)
  {
    sub_251F36CC0();
    swift_bridgeObjectRetain();
  }
  else
  {
    MEMORY[0x270FA5388](v16);
    unint64_t v18 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v18, (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v13);
    sub_251F36CC0();
    sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
    swift_bridgeObjectRetain();
    sub_251F35610();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v18, v13);
  }
  char v52 = (void *)(v65 + *(int *)(v54 + 20));
  sub_251F357B0();
  uint64_t v19 = sub_251F36D00();
  uint64_t v20 = -1 << *(unsigned char *)(v66 + 32);
  unint64_t v21 = v19 & ~v20;
  uint64_t v62 = v66 + 56;
  if ((*(void *)(v66 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21))
  {
    uint64_t v59 = ~v20;
    uint64_t v61 = *(void *)(v5 + 72);
    uint64_t v50 = v14 + 32;
    uint64_t v51 = v14;
    uint64_t v55 = (void (**)(char *, uint64_t))(v14 + 8);
    uint64_t v60 = v12;
    char v56 = v8;
    do
    {
      uint64_t v22 = *(void *)(v66 + 48);
      unint64_t v58 = v61 * v21;
      uint64_t v23 = sub_251A81FF0(v22 + v61 * v21, (uint64_t)v8, (uint64_t (*)(void))_s7MergeIdVMa);
      uint64_t v68 = (uint64_t *)&v47;
      MEMORY[0x270FA5388](v23);
      unint64_t v24 = (v12 + 15) & 0xFFFFFFFFFFFFFFF0;
      id v25 = (char *)&v47 - v24;
      sub_251A1E280(v65, (uint64_t)&v47 - v24);
      uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E6B8);
      char v67 = (uint64_t *)&v47;
      uint64_t v27 = MEMORY[0x270FA5388](v26 - 8);
      id v29 = (char *)&v47 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v30 = (uint64_t)&v29[*(int *)(v27 + 56)];
      sub_251A1E280((uint64_t)v8, (uint64_t)v29);
      sub_251A1E280((uint64_t)&v47 - v24, v30);
      uint64_t v32 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v63;
      uint64_t v31 = v64;
      uint64_t v33 = v63(v29, 1, v64);
      if (v33 == 1)
      {
        sub_251A1B064((uint64_t)&v47 - v24, &qword_26B21FF90);
        if (v32(v30, 1, v31) != 1) {
          goto LABEL_13;
        }
        sub_251A1B064((uint64_t)v29, &qword_26B21FF90);
      }
      else
      {
        uint64_t v57 = (uint64_t *)&v47;
        MEMORY[0x270FA5388](v33);
        int v34 = (char *)&v47 - v24;
        sub_251A1E280((uint64_t)v29, (uint64_t)&v47 - v24);
        uint64_t v35 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v32)(v30, 1, v31);
        if (v35 == 1)
        {
          sub_251A1B064((uint64_t)&v47 - v24, &qword_26B21FF90);
          (*v55)((char *)&v47 - v24, v31);
          unint64_t v8 = v56;
LABEL_13:
          sub_251A1B064((uint64_t)v29, &qword_26B21E6B8);
          goto LABEL_7;
        }
        uint64_t v36 = v15;
        uint64_t v37 = v51;
        MEMORY[0x270FA5388](v35);
        uint64_t v39 = (char *)&v47 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, uint64_t, uint64_t))(v37 + 32))(v39, v30, v31);
        sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
        int v53 = sub_251F35650();
        uint64_t v40 = *(void (**)(char *, uint64_t))(v37 + 8);
        v40(v39, v31);
        sub_251A1B064((uint64_t)v25, &qword_26B21FF90);
        v40(v34, v31);
        uint64_t v15 = v36;
        sub_251A1B064((uint64_t)v29, &qword_26B21FF90);
        unint64_t v8 = v56;
        if ((v53 & 1) == 0) {
          goto LABEL_7;
        }
      }
      char v41 = &v8[*(int *)(v54 + 20)];
      if (*(void *)v41 == *v52 && *((void *)v41 + 1) == v52[1] || (sub_251F36B10() & 1) != 0)
      {
        sub_251A820C0((uint64_t)v8, (uint64_t (*)(void))_s7MergeIdVMa);
        swift_bridgeObjectRelease();
        sub_251A820C0(v65, (uint64_t (*)(void))_s7MergeIdVMa);
        sub_251A81FF0(*(void *)(*v48 + 48) + v58, v49, (uint64_t (*)(void))_s7MergeIdVMa);
        return 0;
      }
LABEL_7:
      sub_251A820C0((uint64_t)v8, (uint64_t (*)(void))_s7MergeIdVMa);
      uint64_t v12 = v60;
      unint64_t v21 = (v21 + 1) & v59;
    }
    while (((*(void *)(v62 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) != 0);
  }
  swift_bridgeObjectRelease();
  uint64_t v43 = v48;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v45 = v65;
  uint64_t v46 = (uint64_t)v47;
  sub_251A81FF0(v65, (uint64_t)v47, (uint64_t (*)(void))_s7MergeIdVMa);
  uint64_t v69 = *v43;
  *uint64_t v43 = 0x8000000000000000;
  sub_251A75A30(v46, v21, isUniquelyReferenced_nonNull_native);
  *uint64_t v43 = v69;
  swift_bridgeObjectRelease();
  sub_251A82058(v45, v49, (uint64_t (*)(void))_s7MergeIdVMa);
  return 1;
}

uint64_t sub_251A68BC0(uint64_t a1, uint64_t a2)
{
  return sub_251A68BDC(a1, a2, (uint64_t *)&unk_269BA0440, (unint64_t *)&qword_26B21F170);
}

uint64_t sub_251A68BDC(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4)
{
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(a3);
    uint64_t v6 = sub_251F363E0();
    uint64_t v19 = v6;
    sub_251F362B0();
    if (sub_251F36340())
    {
      sub_251A1A568(0, a4);
      do
      {
        swift_dynamicCast();
        uint64_t v6 = v19;
        unint64_t v13 = *(void *)(v19 + 16);
        if (*(void *)(v19 + 24) <= v13)
        {
          sub_251A6DCD0(v13 + 1, a3);
          uint64_t v6 = v19;
        }
        uint64_t result = sub_251F36110();
        uint64_t v8 = v6 + 56;
        uint64_t v9 = -1 << *(unsigned char *)(v6 + 32);
        unint64_t v10 = result & ~v9;
        unint64_t v11 = v10 >> 6;
        if (((-1 << v10) & ~*(void *)(v6 + 56 + 8 * (v10 >> 6))) != 0)
        {
          unint64_t v12 = __clz(__rbit64((-1 << v10) & ~*(void *)(v6 + 56 + 8 * (v10 >> 6)))) | v10 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v14 = 0;
          unint64_t v15 = (unint64_t)(63 - v9) >> 6;
          do
          {
            if (++v11 == v15 && (v14 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v16 = v11 == v15;
            if (v11 == v15) {
              unint64_t v11 = 0;
            }
            v14 |= v16;
            uint64_t v17 = *(void *)(v8 + 8 * v11);
          }
          while (v17 == -1);
          unint64_t v12 = __clz(__rbit64(~v17)) + (v11 << 6);
        }
        *(void *)(v8 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
        *(void *)(*(void *)(v6 + 48) + 8 * v12) = v18;
        ++*(void *)(v6 + 16);
      }
      while (sub_251F36340());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x263F8EE88];
  }
  return v6;
}

uint64_t sub_251A68DE0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B21F600);
  uint64_t v3 = sub_251F363D0();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          return result;
        }
        if (v16 >= v9) {
          goto LABEL_38;
        }
        unint64_t v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v9) {
            goto LABEL_38;
          }
          unint64_t v17 = v6[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v9) {
              goto LABEL_38;
            }
            unint64_t v17 = v6[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_38:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
                if (v27 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v27;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_44;
                  }
                  if (v12 >= v9) {
                    goto LABEL_38;
                  }
                  unint64_t v17 = v6[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      uint64_t v19 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
      sub_251F36CA0();
      if (v19 == 2 || v19 == 1)
      {
        sub_251F36CB0();
      }
      else
      {
        sub_251F36CB0();
        sub_251F36CC0();
        if (v19)
        {
          swift_bridgeObjectRetain();
          sub_251A54708(v28, v19);
          sub_251A58144(v19);
        }
      }
      uint64_t result = sub_251F36D00();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_43;
          }
          BOOL v25 = v22 == v24;
          if (v22 == v24) {
            unint64_t v22 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_251A690F8(uint64_t a1, uint64_t (*a2)(void), uint64_t *a3, uint64_t (*a4)(void), void (*a5)(char *))
{
  char v41 = a5;
  unint64_t v8 = v5;
  uint64_t v9 = a2(0);
  uint64_t v40 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9 - 8);
  unint64_t v11 = (char *)&v37 - v10;
  uint64_t v12 = *v5;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v13 = sub_251F363D0();
  uint64_t v14 = v13;
  if (*(void *)(v12 + 16))
  {
    uint64_t v37 = v5;
    uint64_t v15 = 1 << *(unsigned char *)(v12 + 32);
    uint64_t v16 = *(void *)(v12 + 56);
    uint64_t v39 = (void *)(v12 + 56);
    if (v15 < 64) {
      uint64_t v17 = ~(-1 << v15);
    }
    else {
      uint64_t v17 = -1;
    }
    unint64_t v18 = v17 & v16;
    int64_t v38 = (unint64_t)(v15 + 63) >> 6;
    uint64_t v19 = v13 + 56;
    uint64_t result = swift_retain();
    int64_t v21 = 0;
    while (1)
    {
      if (v18)
      {
        unint64_t v23 = __clz(__rbit64(v18));
        v18 &= v18 - 1;
        unint64_t v24 = v23 | (v21 << 6);
      }
      else
      {
        int64_t v25 = v21 + 1;
        if (__OFADD__(v21, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v25 >= v38) {
          goto LABEL_33;
        }
        unint64_t v26 = v39[v25];
        ++v21;
        if (!v26)
        {
          int64_t v21 = v25 + 1;
          if (v25 + 1 >= v38) {
            goto LABEL_33;
          }
          unint64_t v26 = v39[v21];
          if (!v26)
          {
            int64_t v21 = v25 + 2;
            if (v25 + 2 >= v38) {
              goto LABEL_33;
            }
            unint64_t v26 = v39[v21];
            if (!v26)
            {
              int64_t v27 = v25 + 3;
              if (v27 >= v38)
              {
LABEL_33:
                swift_release();
                unint64_t v8 = v37;
                uint64_t v36 = 1 << *(unsigned char *)(v12 + 32);
                if (v36 > 63) {
                  bzero(v39, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v39 = -1 << v36;
                }
                *(void *)(v12 + 16) = 0;
                break;
              }
              unint64_t v26 = v39[v27];
              if (!v26)
              {
                while (1)
                {
                  int64_t v21 = v27 + 1;
                  if (__OFADD__(v27, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v38) {
                    goto LABEL_33;
                  }
                  unint64_t v26 = v39[v21];
                  ++v27;
                  if (v26) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v27;
            }
          }
        }
LABEL_23:
        unint64_t v18 = (v26 - 1) & v26;
        unint64_t v24 = __clz(__rbit64(v26)) + (v21 << 6);
      }
      uint64_t v28 = *(void *)(v40 + 72);
      sub_251A82058(*(void *)(v12 + 48) + v28 * v24, (uint64_t)v11, a4);
      sub_251F36CA0();
      v41(v42);
      uint64_t result = sub_251F36D00();
      uint64_t v29 = -1 << *(unsigned char *)(v14 + 32);
      unint64_t v30 = result & ~v29;
      unint64_t v31 = v30 >> 6;
      if (((-1 << v30) & ~*(void *)(v19 + 8 * (v30 >> 6))) != 0)
      {
        unint64_t v22 = __clz(__rbit64((-1 << v30) & ~*(void *)(v19 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v32 = 0;
        unint64_t v33 = (unint64_t)(63 - v29) >> 6;
        do
        {
          if (++v31 == v33 && (v32 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v34 = v31 == v33;
          if (v31 == v33) {
            unint64_t v31 = 0;
          }
          v32 |= v34;
          uint64_t v35 = *(void *)(v19 + 8 * v31);
        }
        while (v35 == -1);
        unint64_t v22 = __clz(__rbit64(~v35)) + (v31 << 6);
      }
      *(void *)(v19 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      uint64_t result = sub_251A82058((uint64_t)v11, *(void *)(v14 + 48) + v22 * v28, a4);
      ++*(void *)(v14 + 16);
    }
  }
  uint64_t result = swift_release();
  *unint64_t v8 = v14;
  return result;
}

uint64_t sub_251A6948C()
{
  uint64_t v51 = type metadata accessor for StaticZone();
  uint64_t v50 = *(void *)(v51 - 8);
  MEMORY[0x270FA5388](v51);
  uint64_t v2 = (char *)&v43 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = v0;
  uint64_t v3 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D280);
  uint64_t v4 = sub_251F363D0();
  uint64_t v5 = v4;
  if (*(void *)(v3 + 16))
  {
    uint64_t v6 = 1 << *(unsigned char *)(v3 + 32);
    uint64_t v7 = *(void *)(v3 + 56);
    uint64_t v45 = (void *)(v3 + 56);
    if (v6 < 64) {
      uint64_t v8 = ~(-1 << v6);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & v7;
    int64_t v44 = (unint64_t)(v6 + 63) >> 6;
    uint64_t v46 = v4 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    uint64_t v49 = v3;
    uint64_t v48 = v5;
    uint64_t v47 = v2;
    while (1)
    {
      if (v9)
      {
        uint64_t v55 = (v9 - 1) & v9;
        int64_t v53 = v11;
        unint64_t v13 = __clz(__rbit64(v9)) | (v11 << 6);
      }
      else
      {
        int64_t v14 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          return result;
        }
        if (v14 >= v44) {
          goto LABEL_38;
        }
        unint64_t v15 = v45[v14];
        int64_t v16 = v11 + 1;
        if (!v15)
        {
          int64_t v16 = v11 + 2;
          if (v11 + 2 >= v44) {
            goto LABEL_38;
          }
          unint64_t v15 = v45[v16];
          if (!v15)
          {
            int64_t v16 = v11 + 3;
            if (v11 + 3 >= v44) {
              goto LABEL_38;
            }
            unint64_t v15 = v45[v16];
            if (!v15)
            {
              uint64_t v17 = v11 + 4;
              if (v11 + 4 >= v44)
              {
LABEL_38:
                swift_release();
                uint64_t v42 = 1 << *(unsigned char *)(v3 + 32);
                if (v42 > 63) {
                  bzero(v45, ((unint64_t)(v42 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v45 = -1 << v42;
                }
                *(void *)(v3 + 16) = 0;
                break;
              }
              unint64_t v15 = v45[v17];
              if (!v15)
              {
                while (1)
                {
                  int64_t v16 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_44;
                  }
                  if (v16 >= v44) {
                    goto LABEL_38;
                  }
                  unint64_t v15 = v45[v16];
                  ++v17;
                  if (v15) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v16 = v11 + 4;
            }
          }
        }
LABEL_23:
        uint64_t v55 = (v15 - 1) & v15;
        int64_t v53 = v16;
        unint64_t v13 = __clz(__rbit64(v15)) + (v16 << 6);
      }
      uint64_t v18 = *(void *)(v3 + 48);
      uint64_t v52 = *(void *)(v50 + 72);
      sub_251A82058(v18 + v52 * v13, (uint64_t)v2, (uint64_t (*)(void))type metadata accessor for StaticZone);
      sub_251F36CA0();
      uint64_t v19 = sub_251F34DA0();
      uint64_t v62 = sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
      sub_251F35610();
      uint64_t v20 = v51;
      sub_251F357B0();
      uint64_t v21 = *(void *)&v2[*(int *)(v20 + 24)];
      sub_251F36CB0();
      uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
      uint64_t v54 = &v43;
      MEMORY[0x270FA5388](v22 - 8);
      unint64_t v24 = (char *)&v43 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v25 = *(void *)(v21 + 16);
      uint64_t v56 = *(void *)(v19 - 8);
      uint64_t v57 = v19 - 8;
      if (v25)
      {
        uint64_t v26 = v56;
        uint64_t v27 = v21 + ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80));
        uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(v56 + 16);
        uint64_t v60 = v56 + 16;
        uint64_t v61 = v28;
        uint64_t v29 = (void (**)(char *, void, uint64_t, uint64_t))(v56 + 56);
        unint64_t v30 = (uint64_t (**)(char *, uint64_t, uint64_t))(v56 + 48);
        uint64_t v58 = v56 + 8;
        uint64_t v59 = v56 + 32;
        uint64_t v31 = *(void *)(v56 + 72);
        while (1)
        {
          v61(v24, v27, v19);
          (*v29)(v24, 0, 1, v19);
          uint64_t v32 = (*v30)(v24, 1, v19);
          if (v32 == 1) {
            break;
          }
          MEMORY[0x270FA5388](v32);
          BOOL v34 = (char *)&v43 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v34, v24, v19);
          sub_251F35610();
          (*(void (**)(char *, uint64_t))(v26 + 8))(v34, v19);
          v27 += v31;
          if (!--v25) {
            goto LABEL_28;
          }
        }
      }
      else
      {
LABEL_28:
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v56 + 56))(v24, 1, 1, v19);
      }
      uint64_t result = sub_251F36D00();
      uint64_t v5 = v48;
      uint64_t v35 = -1 << *(unsigned char *)(v48 + 32);
      unint64_t v36 = result & ~v35;
      unint64_t v37 = v36 >> 6;
      if (((-1 << v36) & ~*(void *)(v46 + 8 * (v36 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v36) & ~*(void *)(v46 + 8 * (v36 >> 6)))) | v36 & 0x7FFFFFFFFFFFFFC0;
        uint64_t v3 = v49;
        uint64_t v2 = v47;
        unint64_t v9 = v55;
      }
      else
      {
        char v38 = 0;
        unint64_t v39 = (unint64_t)(63 - v35) >> 6;
        uint64_t v3 = v49;
        uint64_t v2 = v47;
        unint64_t v9 = v55;
        do
        {
          if (++v37 == v39 && (v38 & 1) != 0)
          {
            __break(1u);
            goto LABEL_43;
          }
          BOOL v40 = v37 == v39;
          if (v37 == v39) {
            unint64_t v37 = 0;
          }
          v38 |= v40;
          uint64_t v41 = *(void *)(v46 + 8 * v37);
        }
        while (v41 == -1);
        unint64_t v12 = __clz(__rbit64(~v41)) + (v37 << 6);
      }
      *(void *)(v46 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      uint64_t result = sub_251A82058((uint64_t)v2, *(void *)(v5 + 48) + v12 * v52, (uint64_t (*)(void))type metadata accessor for StaticZone);
      ++*(void *)(v5 + 16);
      int64_t v11 = v53;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v43 = v5;
  return result;
}

uint64_t sub_251A69B50()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F1A8);
  uint64_t result = sub_251F363D0();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (void *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
                if (v26 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v26;
                }
                uint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      char v18 = *(unsigned char *)(*(void *)(v2 + 48) + v14);
      sub_251F36CA0();
      sub_251F36CB0();
      uint64_t result = sub_251F36D00();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_251A69DFC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D200);
  uint64_t result = sub_251F363D0();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    uint64_t v23 = v2;
    int64_t v5 = 0;
    uint64_t v6 = (void *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    uint64_t v9 = v8 & *(void *)(v2 + 56);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (!v9)
      {
        int64_t v13 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
          return result;
        }
        if (v13 >= v10) {
          goto LABEL_31;
        }
        uint64_t v9 = v6[v13];
        ++v5;
        if (!v9)
        {
          int64_t v5 = v13 + 1;
          if (v13 + 1 >= v10) {
            goto LABEL_31;
          }
          uint64_t v9 = v6[v5];
          if (!v9)
          {
            int64_t v5 = v13 + 2;
            if (v13 + 2 >= v10) {
              goto LABEL_31;
            }
            uint64_t v9 = v6[v5];
            if (!v9)
            {
              int64_t v14 = v13 + 3;
              if (v14 >= v10)
              {
LABEL_31:
                uint64_t v22 = 1 << *(unsigned char *)(v23 + 32);
                if (v22 > 63) {
                  bzero(v6, ((unint64_t)(v22 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v22;
                }
                uint64_t v1 = v0;
                *(void *)(v23 + 16) = 0;
                break;
              }
              uint64_t v9 = v6[v14];
              if (!v9)
              {
                while (1)
                {
                  int64_t v5 = v14 + 1;
                  if (__OFADD__(v14, 1)) {
                    goto LABEL_37;
                  }
                  if (v5 >= v10) {
                    goto LABEL_31;
                  }
                  uint64_t v9 = v6[v5];
                  ++v14;
                  if (v9) {
                    goto LABEL_22;
                  }
                }
              }
              int64_t v5 = v14;
            }
          }
        }
      }
LABEL_22:
      sub_251F36CA0();
      sub_251F36CB0();
      uint64_t result = sub_251F36D00();
      uint64_t v15 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v16 = result & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v11 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v16) & ~*(void *)(v11 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v18 = 0;
        unint64_t v19 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v19 && (v18 & 1) != 0)
          {
            __break(1u);
            goto LABEL_36;
          }
          BOOL v20 = v17 == v19;
          if (v17 == v19) {
            unint64_t v17 = 0;
          }
          v18 |= v20;
          uint64_t v21 = *(void *)(v11 + 8 * v17);
        }
        while (v21 == -1);
        unint64_t v12 = __clz(__rbit64(~v21)) + (v17 << 6);
      }
      v9 &= v9 - 1;
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_251A6A074(uint64_t a1)
{
  return sub_251A6DCD0(a1, (uint64_t *)&unk_269BA0440);
}

uint64_t sub_251A6A080()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D2D0);
  uint64_t result = sub_251F363D0();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (uint64_t *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v26 = -1 << v7;
    uint64_t v27 = v1;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64) {
                  bzero((void *)(v2 + 56), 8 * v10);
                }
                else {
                  *uint64_t v6 = v26;
                }
                uint64_t v1 = v27;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      unsigned int v18 = *(_DWORD *)(*(void *)(v2 + 48) + 4 * v14);
      uint64_t result = MEMORY[0x2533ABBC0](*(void *)(v4 + 40), v18, 4);
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_DWORD *)(*(void *)(v4 + 48) + 4 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_251A6A308()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D340);
  uint64_t result = sub_251F363D0();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (void *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
                if (v26 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v26;
                }
                uint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      char v18 = *(unsigned char *)(*(void *)(v2 + 48) + v14);
      sub_251F36CA0();
      sub_251F36CE0();
      uint64_t result = sub_251F36D00();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_251A6A5C0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA0450);
  uint64_t result = sub_251F363D0();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (void *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
                if (v26 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v26;
                }
                uint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      char v18 = *(unsigned char *)(*(void *)(v2 + 48) + v14);
      sub_251F36CA0();
      sub_251F36CE0();
      uint64_t result = sub_251F36D00();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

unint64_t sub_251A6A878()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D258);
  uint64_t v3 = sub_251F363D0();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    unint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v13 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v14 = v13 | (v12 << 6);
      }
      else
      {
        int64_t v19 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return result;
        }
        if (v19 >= v9) {
          goto LABEL_23;
        }
        unint64_t v20 = v6[v19];
        ++v12;
        if (!v20)
        {
          int64_t v12 = v19 + 1;
          if (v19 + 1 >= v9) {
            goto LABEL_23;
          }
          unint64_t v20 = v6[v12];
          if (!v20)
          {
            int64_t v12 = v19 + 2;
            if (v19 + 2 >= v9) {
              goto LABEL_23;
            }
            unint64_t v20 = v6[v12];
            if (!v20)
            {
              int64_t v21 = v19 + 3;
              if (v21 >= v9)
              {
LABEL_23:
                swift_release();
                uint64_t v22 = 1 << *(unsigned char *)(v2 + 32);
                if (v22 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v22 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v22;
                }
                uint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v20 = v6[v21];
              if (!v20)
              {
                while (1)
                {
                  int64_t v12 = v21 + 1;
                  if (__OFADD__(v21, 1)) {
                    goto LABEL_29;
                  }
                  if (v12 >= v9) {
                    goto LABEL_23;
                  }
                  unint64_t v20 = v6[v12];
                  ++v21;
                  if (v20) {
                    goto LABEL_22;
                  }
                }
              }
              int64_t v12 = v21;
            }
          }
        }
LABEL_22:
        unint64_t v8 = (v20 - 1) & v20;
        unint64_t v14 = __clz(__rbit64(v20)) + (v12 << 6);
      }
      uint64_t v15 = *(void *)(v2 + 48) + 32 * v14;
      uint64_t v16 = *(void *)v15;
      uint64_t v17 = *(void *)(v15 + 8);
      long long v23 = *(_OWORD *)(v15 + 16);
      sub_251F36CA0();
      sub_251F36CB0();
      swift_bridgeObjectRetain();
      sub_251F357B0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_251A54AB8((uint64_t)v24, *((uint64_t *)&v23 + 1));
      swift_bridgeObjectRelease();
      sub_251F36D00();
      unint64_t result = sub_251F36290();
      *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
      uint64_t v18 = *(void *)(v4 + 48) + 32 * result;
      *(void *)uint64_t v18 = v16;
      *(void *)(v18 + 8) = v17;
      *(_OWORD *)(v18 + 16) = v23;
      ++*(void *)(v4 + 16);
    }
  }
  unint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_251A6AB28()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D300);
  uint64_t v3 = sub_251F363D0();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v17 = v6[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v17 = v6[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
                if (v27 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v27;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v6[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      char v19 = *(unsigned char *)(*(void *)(v2 + 48) + v15);
      sub_251F36CA0();
      sub_251F36CD0();
      sub_251F357B0();
      uint64_t result = sub_251F36D00();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v25 = v22 == v24;
          if (v22 == v24) {
            unint64_t v22 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(unsigned char *)(*(void *)(v4 + 48) + v13) = v19;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_251A6AE50()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D250);
  uint64_t v3 = sub_251F363D0();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v17 = v6[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v17 = v6[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
                if (v27 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v27;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v6[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      char v19 = *(unsigned char *)(*(void *)(v2 + 48) + v15);
      sub_251F36CA0();
      sub_251F36CC0();
      sub_251F357B0();
      uint64_t result = sub_251F36D00();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v25 = v22 == v24;
          if (v22 == v24) {
            unint64_t v22 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(unsigned char *)(*(void *)(v4 + 48) + v13) = v19;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_251A6B14C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D2F0);
  uint64_t result = sub_251F363D0();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (uint64_t *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v26 = -1 << v7;
    uint64_t v27 = v1;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64) {
                  bzero((void *)(v2 + 56), 8 * v10);
                }
                else {
                  *uint64_t v6 = v26;
                }
                uint64_t v1 = v27;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      unsigned __int16 v18 = *(_WORD *)(*(void *)(v2 + 48) + 2 * v14);
      uint64_t result = MEMORY[0x2533ABBC0](*(void *)(v4 + 40), v18, 2);
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_WORD *)(*(void *)(v4 + 48) + 2 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_251A6B3D4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E188);
  uint64_t v3 = sub_251F363D0();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = *(void *)(v2 + 56);
    char v38 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & v6;
    unint64_t v36 = v0;
    int64_t v37 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v13 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        int64_t v40 = v11;
        unint64_t v14 = v13 | (v11 << 6);
      }
      else
      {
        int64_t v15 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v37) {
          goto LABEL_33;
        }
        unint64_t v16 = v38[v15];
        int64_t v17 = v11 + 1;
        if (!v16)
        {
          int64_t v17 = v11 + 2;
          if (v11 + 2 >= v37) {
            goto LABEL_33;
          }
          unint64_t v16 = v38[v17];
          if (!v16)
          {
            int64_t v17 = v11 + 3;
            if (v11 + 3 >= v37) {
              goto LABEL_33;
            }
            unint64_t v16 = v38[v17];
            if (!v16)
            {
              uint64_t v18 = v11 + 4;
              if (v11 + 4 >= v37)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v36;
                uint64_t v34 = 1 << *(unsigned char *)(v2 + 32);
                if (v34 > 63) {
                  bzero(v38, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *char v38 = -1 << v34;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v38[v18];
              if (!v16)
              {
                while (1)
                {
                  int64_t v17 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v17 >= v37) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v38[v17];
                  ++v18;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v17 = v11 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v16 - 1) & v16;
        int64_t v40 = v17;
        unint64_t v14 = __clz(__rbit64(v16)) + (v17 << 6);
      }
      uint64_t v19 = sub_251F34DA0();
      unint64_t v39 = &v35;
      uint64_t v20 = *(void *)(v19 - 8);
      MEMORY[0x270FA5388](v19);
      char v22 = (char *)&v35 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v23 = v2;
      uint64_t v24 = *(void *)(v2 + 48);
      uint64_t v25 = *(void (**)(char *, unint64_t, uint64_t))(v20 + 32);
      uint64_t v26 = *(void *)(v20 + 72);
      v25(v22, v24 + v26 * v14, v19);
      sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
      uint64_t result = sub_251F35600();
      uint64_t v27 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v9 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v28) & ~*(void *)(v9 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v9 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v12 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v25)(*(void *)(v4 + 48) + v12 * v26, v22, v19);
      ++*(void *)(v4 + 16);
      int64_t v11 = v40;
      uint64_t v2 = v23;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_251A6B794()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D338);
  uint64_t result = sub_251F363D0();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    char v30 = (void *)(v2 + 56);
    uint64_t v6 = 1 << *(unsigned char *)(v2 + 32);
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v29 = (unint64_t)(v6 + 63) >> 6;
    uint64_t v9 = result + 56;
    while (1)
    {
      if (v8)
      {
        unint64_t v12 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v13 = v12 | (v5 << 6);
      }
      else
      {
        int64_t v14 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v14 >= v29) {
          goto LABEL_35;
        }
        unint64_t v15 = v30[v14];
        ++v5;
        if (!v15)
        {
          int64_t v5 = v14 + 1;
          if (v14 + 1 >= v29) {
            goto LABEL_35;
          }
          unint64_t v15 = v30[v5];
          if (!v15)
          {
            int64_t v5 = v14 + 2;
            if (v14 + 2 >= v29) {
              goto LABEL_35;
            }
            unint64_t v15 = v30[v5];
            if (!v15)
            {
              int64_t v16 = v14 + 3;
              if (v16 >= v29)
              {
LABEL_35:
                uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
                if (v28 > 63) {
                  bzero(v30, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *char v30 = -1 << v28;
                }
                uint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v15 = v30[v16];
              if (!v15)
              {
                while (1)
                {
                  int64_t v5 = v16 + 1;
                  if (__OFADD__(v16, 1)) {
                    goto LABEL_41;
                  }
                  if (v5 >= v29) {
                    goto LABEL_35;
                  }
                  unint64_t v15 = v30[v5];
                  ++v16;
                  if (v15) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v16;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v15 - 1) & v15;
        unint64_t v13 = __clz(__rbit64(v15)) + (v5 << 6);
      }
      uint64_t v17 = *(void *)(v2 + 48) + 16 * v13;
      uint64_t v18 = *(void *)v17;
      __int16 v19 = *(_WORD *)(v17 + 8);
      int v20 = *(unsigned __int8 *)(v17 + 10);
      sub_251F36CA0();
      sub_251F36CF0();
      sub_251F36CC0();
      if (v20 != 1) {
        sub_251F36CD0();
      }
      uint64_t result = sub_251F36D00();
      uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v22 = result & ~v21;
      unint64_t v23 = v22 >> 6;
      if (((-1 << v22) & ~*(void *)(v9 + 8 * (v22 >> 6))) != 0)
      {
        unint64_t v10 = __clz(__rbit64((-1 << v22) & ~*(void *)(v9 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v26 = v23 == v25;
          if (v23 == v25) {
            unint64_t v23 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v9 + 8 * v23);
        }
        while (v27 == -1);
        unint64_t v10 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(void *)(v9 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
      uint64_t v11 = *(void *)(v4 + 48) + 16 * v10;
      *(void *)uint64_t v11 = v18;
      *(_WORD *)(v11 + 8) = v19;
      *(unsigned char *)(v11 + 10) = v20;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_251A6BAB4()
{
  uint64_t v1 = v0;
  uint64_t v55 = type metadata accessor for Event.CharacteristicEvent();
  MEMORY[0x270FA5388](v55);
  uint64_t v58 = (uint64_t)&v53 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for Event.TimeEvent(0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v54 = (uint64_t)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Event();
  uint64_t v61 = *(void *)(v5 - 8);
  uint64_t v62 = v5;
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  unint64_t v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  unint64_t v10 = (char *)&v53 - v9;
  uint64_t v11 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D330);
  uint64_t v12 = sub_251F363D0();
  uint64_t v13 = v12;
  if (*(void *)(v11 + 16))
  {
    int64_t v53 = v0;
    uint64_t v14 = 1 << *(unsigned char *)(v11 + 32);
    uint64_t v15 = *(void *)(v11 + 56);
    uint64_t v60 = (void *)(v11 + 56);
    if (v14 < 64) {
      uint64_t v16 = ~(-1 << v14);
    }
    else {
      uint64_t v16 = -1;
    }
    unint64_t v17 = v16 & v15;
    int64_t v59 = (unint64_t)(v14 + 63) >> 6;
    uint64_t v18 = v12 + 56;
    uint64_t result = swift_retain();
    int64_t v20 = 0;
    uint64_t v56 = v10;
    uint64_t v57 = v11;
    while (1)
    {
      if (v17)
      {
        unint64_t v22 = __clz(__rbit64(v17));
        v17 &= v17 - 1;
        int64_t v63 = v20;
        unint64_t v23 = v22 | (v20 << 6);
      }
      else
      {
        int64_t v24 = v20 + 1;
        if (__OFADD__(v20, 1))
        {
LABEL_55:
          __break(1u);
LABEL_56:
          __break(1u);
          return result;
        }
        if (v24 >= v59) {
          goto LABEL_50;
        }
        unint64_t v25 = v60[v24];
        int64_t v26 = v20 + 1;
        if (!v25)
        {
          int64_t v26 = v20 + 2;
          if (v20 + 2 >= v59) {
            goto LABEL_50;
          }
          unint64_t v25 = v60[v26];
          if (!v25)
          {
            int64_t v26 = v20 + 3;
            if (v20 + 3 >= v59) {
              goto LABEL_50;
            }
            unint64_t v25 = v60[v26];
            if (!v25)
            {
              uint64_t v27 = v20 + 4;
              if (v20 + 4 >= v59)
              {
LABEL_50:
                swift_release();
                uint64_t v1 = v53;
                uint64_t v52 = 1 << *(unsigned char *)(v11 + 32);
                if (v52 > 63) {
                  bzero(v60, ((unint64_t)(v52 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v60 = -1 << v52;
                }
                *(void *)(v11 + 16) = 0;
                break;
              }
              unint64_t v25 = v60[v27];
              if (!v25)
              {
                while (1)
                {
                  int64_t v26 = v27 + 1;
                  if (__OFADD__(v27, 1)) {
                    goto LABEL_56;
                  }
                  if (v26 >= v59) {
                    goto LABEL_50;
                  }
                  unint64_t v25 = v60[v26];
                  ++v27;
                  if (v25) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v26 = v20 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v17 = (v25 - 1) & v25;
        int64_t v63 = v26;
        unint64_t v23 = __clz(__rbit64(v25)) + (v26 << 6);
      }
      uint64_t v28 = *(void *)(v61 + 72);
      sub_251A82058(*(void *)(v11 + 48) + v28 * v23, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for Event);
      sub_251F36CA0();
      sub_251A81FF0((uint64_t)v10, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for Event);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload)
      {
        if (EnumCaseMultiPayload == 1)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D120);
          uint64_t v30 = v54;
          sub_251A82058((uint64_t)v8, v54, type metadata accessor for Event.TimeEvent);
          sub_251F36CB0();
          Event.TimeEvent.hash(into:)();
          sub_251F36CB0();
          unint64_t v31 = type metadata accessor for Event.TimeEvent;
          uint64_t v32 = v30;
        }
        else
        {
          uint64_t v37 = v58;
          sub_251A82058((uint64_t)v8, v58, (uint64_t (*)(void))type metadata accessor for Event.CharacteristicEvent);
          sub_251F36CB0();
          sub_251F34DA0();
          sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
          sub_251F35610();
          uint64_t v38 = v55;
          LOBYTE(v64) = *(unsigned char *)(v37 + *(int *)(v55 + 20));
          CharacteristicKind.rawValue.getter();
          sub_251F357B0();
          swift_bridgeObjectRelease();
          uint64_t v39 = v37 + *(int *)(v38 + 24);
          uint64_t v41 = *(void *)v39;
          uint64_t v40 = *(void *)(v39 + 8);
          unsigned int v42 = *(unsigned __int8 *)(v39 + 16);
          sub_251F36CB0();
          uint64_t v64 = v41;
          uint64_t v65 = v40;
          if (v42 >> 6) {
            char v66 = v42 & 0x3F;
          }
          else {
            char v66 = v42;
          }
          CharacteristicKind.Value.hash(into:)();
          unint64_t v10 = v56;
          uint64_t v11 = v57;
          unint64_t v31 = (uint64_t (*)(void))type metadata accessor for Event.CharacteristicEvent;
          uint64_t v32 = v58;
        }
        sub_251A820C0(v32, v31);
      }
      else
      {
        uint64_t v34 = *(void *)v8;
        uint64_t v33 = *((void *)v8 + 1);
        uint64_t v35 = *((void *)v8 + 2);
        int v36 = v8[24];
        sub_251F36CB0();
        if (v36 == 1)
        {
          sub_251F36CB0();
          sub_251F36CF0();
          sub_251F36CF0();
          sub_251F36CF0();
        }
        else
        {
          sub_251F36CB0();
          sub_251F36CB0();
          if (v33)
          {
            sub_251F36CB0();
            if (v33 == 1)
            {
              uint64_t v43 = v34;
              unint64_t v44 = 1;
            }
            else
            {
              sub_251A54708(v67, v33);
              uint64_t v43 = v34;
              unint64_t v44 = v33;
            }
          }
          else
          {
            sub_251F36CB0();
            uint64_t v43 = v34;
            unint64_t v44 = 0;
          }
          sub_251A580E0(v43, v44, v35, 0);
        }
        unint64_t v10 = v56;
        uint64_t v11 = v57;
      }
      uint64_t result = sub_251F36D00();
      uint64_t v45 = -1 << *(unsigned char *)(v13 + 32);
      unint64_t v46 = result & ~v45;
      unint64_t v47 = v46 >> 6;
      if (((-1 << v46) & ~*(void *)(v18 + 8 * (v46 >> 6))) != 0)
      {
        unint64_t v21 = __clz(__rbit64((-1 << v46) & ~*(void *)(v18 + 8 * (v46 >> 6)))) | v46 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v48 = 0;
        unint64_t v49 = (unint64_t)(63 - v45) >> 6;
        do
        {
          if (++v47 == v49 && (v48 & 1) != 0)
          {
            __break(1u);
            goto LABEL_55;
          }
          BOOL v50 = v47 == v49;
          if (v47 == v49) {
            unint64_t v47 = 0;
          }
          v48 |= v50;
          uint64_t v51 = *(void *)(v18 + 8 * v47);
        }
        while (v51 == -1);
        unint64_t v21 = __clz(__rbit64(~v51)) + (v47 << 6);
      }
      *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
      uint64_t result = sub_251A82058((uint64_t)v10, *(void *)(v13 + 48) + v21 * v28, (uint64_t (*)(void))type metadata accessor for Event);
      ++*(void *)(v13 + 16);
      int64_t v20 = v63;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v13;
  return result;
}

uint64_t sub_251A6C1C0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
  uint64_t v27 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D210);
  uint64_t v6 = sub_251F363D0();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v9 = *(void *)(v5 + 56);
    int64_t v24 = v0;
    unint64_t v25 = (void *)(v5 + 56);
    if (v8 < 64) {
      uint64_t v10 = ~(-1 << v8);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & v9;
    int64_t v26 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v12 = v6 + 56;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v16 = v15 | (v14 << 6);
      }
      else
      {
        int64_t v19 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return result;
        }
        if (v19 >= v26) {
          goto LABEL_23;
        }
        unint64_t v20 = v25[v19];
        ++v14;
        if (!v20)
        {
          int64_t v14 = v19 + 1;
          if (v19 + 1 >= v26) {
            goto LABEL_23;
          }
          unint64_t v20 = v25[v14];
          if (!v20)
          {
            int64_t v14 = v19 + 2;
            if (v19 + 2 >= v26) {
              goto LABEL_23;
            }
            unint64_t v20 = v25[v14];
            if (!v20)
            {
              int64_t v21 = v19 + 3;
              if (v21 >= v26)
              {
LABEL_23:
                swift_release();
                uint64_t v22 = 1 << *(unsigned char *)(v5 + 32);
                if (v22 > 63) {
                  bzero(v25, ((unint64_t)(v22 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v25 = -1 << v22;
                }
                uint64_t v1 = v24;
                *(void *)(v5 + 16) = 0;
                break;
              }
              unint64_t v20 = v25[v21];
              if (!v20)
              {
                while (1)
                {
                  int64_t v14 = v21 + 1;
                  if (__OFADD__(v21, 1)) {
                    goto LABEL_29;
                  }
                  if (v14 >= v26) {
                    goto LABEL_23;
                  }
                  unint64_t v20 = v25[v14];
                  ++v21;
                  if (v20) {
                    goto LABEL_22;
                  }
                }
              }
              int64_t v14 = v21;
            }
          }
        }
LABEL_22:
        unint64_t v11 = (v20 - 1) & v20;
        unint64_t v16 = __clz(__rbit64(v20)) + (v14 << 6);
      }
      uint64_t v17 = *(void *)(v27 + 72);
      sub_251A82058(*(void *)(v5 + 48) + v17 * v16, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
      sub_251F36CA0();
      StaticAccessory.hash(into:)(v28);
      StaticService.hash(into:)(v28);
      StaticCharacteristic.hash(into:)((uint64_t)v28);
      sub_251F36D00();
      unint64_t v18 = sub_251F36290();
      *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      uint64_t result = sub_251A82058((uint64_t)v4, *(void *)(v7 + 48) + v18 * v17, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v7;
  return result;
}

uint64_t sub_251A6C50C()
{
  uint64_t v51 = type metadata accessor for StaticZone();
  uint64_t v50 = *(void *)(v51 - 8);
  MEMORY[0x270FA5388](v51);
  uint64_t v2 = (char *)&v43 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = v0;
  uint64_t v3 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D280);
  uint64_t v4 = sub_251F363D0();
  uint64_t v5 = v4;
  if (*(void *)(v3 + 16))
  {
    uint64_t v6 = 1 << *(unsigned char *)(v3 + 32);
    uint64_t v7 = *(void *)(v3 + 56);
    uint64_t v45 = (void *)(v3 + 56);
    if (v6 < 64) {
      uint64_t v8 = ~(-1 << v6);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & v7;
    int64_t v44 = (unint64_t)(v6 + 63) >> 6;
    uint64_t v46 = v4 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    uint64_t v49 = v3;
    uint64_t v48 = v5;
    unint64_t v47 = v2;
    while (1)
    {
      if (v9)
      {
        uint64_t v55 = (v9 - 1) & v9;
        int64_t v53 = v11;
        unint64_t v13 = __clz(__rbit64(v9)) | (v11 << 6);
      }
      else
      {
        int64_t v14 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          return result;
        }
        if (v14 >= v44) {
          goto LABEL_38;
        }
        unint64_t v15 = v45[v14];
        int64_t v16 = v11 + 1;
        if (!v15)
        {
          int64_t v16 = v11 + 2;
          if (v11 + 2 >= v44) {
            goto LABEL_38;
          }
          unint64_t v15 = v45[v16];
          if (!v15)
          {
            int64_t v16 = v11 + 3;
            if (v11 + 3 >= v44) {
              goto LABEL_38;
            }
            unint64_t v15 = v45[v16];
            if (!v15)
            {
              uint64_t v17 = v11 + 4;
              if (v11 + 4 >= v44)
              {
LABEL_38:
                swift_release();
                uint64_t v42 = 1 << *(unsigned char *)(v3 + 32);
                if (v42 > 63) {
                  bzero(v45, ((unint64_t)(v42 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v45 = -1 << v42;
                }
                *(void *)(v3 + 16) = 0;
                break;
              }
              unint64_t v15 = v45[v17];
              if (!v15)
              {
                while (1)
                {
                  int64_t v16 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_44;
                  }
                  if (v16 >= v44) {
                    goto LABEL_38;
                  }
                  unint64_t v15 = v45[v16];
                  ++v17;
                  if (v15) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v16 = v11 + 4;
            }
          }
        }
LABEL_23:
        uint64_t v55 = (v15 - 1) & v15;
        int64_t v53 = v16;
        unint64_t v13 = __clz(__rbit64(v15)) + (v16 << 6);
      }
      uint64_t v18 = *(void *)(v3 + 48);
      uint64_t v52 = *(void *)(v50 + 72);
      sub_251A82058(v18 + v52 * v13, (uint64_t)v2, (uint64_t (*)(void))type metadata accessor for StaticZone);
      sub_251F36CA0();
      uint64_t v19 = sub_251F34DA0();
      uint64_t v62 = sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
      sub_251F35610();
      uint64_t v20 = v51;
      sub_251F357B0();
      uint64_t v21 = *(void *)&v2[*(int *)(v20 + 24)];
      uint64_t v22 = *(void *)(v21 + 16);
      sub_251F36CB0();
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
      uint64_t v54 = &v43;
      MEMORY[0x270FA5388](v23 - 8);
      unint64_t v25 = (char *)&v43 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v56 = *(void *)(v19 - 8);
      uint64_t v57 = v19 - 8;
      if (v22)
      {
        uint64_t v26 = v56;
        uint64_t v27 = v21 + ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80));
        uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(v56 + 16);
        uint64_t v60 = v56 + 16;
        uint64_t v61 = v28;
        int64_t v29 = (void (**)(char *, void, uint64_t, uint64_t))(v56 + 56);
        uint64_t v30 = (uint64_t (**)(char *, uint64_t, uint64_t))(v56 + 48);
        uint64_t v58 = v56 + 8;
        uint64_t v59 = v56 + 32;
        uint64_t v31 = *(void *)(v56 + 72);
        while (1)
        {
          v61(v25, v27, v19);
          (*v29)(v25, 0, 1, v19);
          uint64_t v32 = (*v30)(v25, 1, v19);
          if (v32 == 1) {
            break;
          }
          MEMORY[0x270FA5388](v32);
          uint64_t v34 = (char *)&v43 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v34, v25, v19);
          sub_251F35610();
          (*(void (**)(char *, uint64_t))(v26 + 8))(v34, v19);
          v27 += v31;
          if (!--v22) {
            goto LABEL_28;
          }
        }
      }
      else
      {
LABEL_28:
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v56 + 56))(v25, 1, 1, v19);
      }
      uint64_t result = sub_251F36D00();
      uint64_t v5 = v48;
      uint64_t v35 = -1 << *(unsigned char *)(v48 + 32);
      unint64_t v36 = result & ~v35;
      unint64_t v37 = v36 >> 6;
      if (((-1 << v36) & ~*(void *)(v46 + 8 * (v36 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v36) & ~*(void *)(v46 + 8 * (v36 >> 6)))) | v36 & 0x7FFFFFFFFFFFFFC0;
        uint64_t v3 = v49;
        uint64_t v2 = v47;
        unint64_t v9 = v55;
      }
      else
      {
        char v38 = 0;
        unint64_t v39 = (unint64_t)(63 - v35) >> 6;
        uint64_t v3 = v49;
        uint64_t v2 = v47;
        unint64_t v9 = v55;
        do
        {
          if (++v37 == v39 && (v38 & 1) != 0)
          {
            __break(1u);
            goto LABEL_43;
          }
          BOOL v40 = v37 == v39;
          if (v37 == v39) {
            unint64_t v37 = 0;
          }
          v38 |= v40;
          uint64_t v41 = *(void *)(v46 + 8 * v37);
        }
        while (v41 == -1);
        unint64_t v12 = __clz(__rbit64(~v41)) + (v37 << 6);
      }
      *(void *)(v46 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      uint64_t result = sub_251A82058((uint64_t)v2, *(void *)(v5 + 48) + v12 * v52, (uint64_t (*)(void))type metadata accessor for StaticZone);
      ++*(void *)(v5 + 16);
      int64_t v11 = v53;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v43 = v5;
  return result;
}

uint64_t sub_251A6CBD0()
{
  uint64_t v1 = v0;
  uint64_t v2 = (int *)type metadata accessor for StaticServiceGroup();
  uint64_t v37 = *((void *)v2 - 1);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D2A8);
  uint64_t v6 = sub_251F363D0();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v9 = *(void *)(v5 + 56);
    uint64_t v35 = (void *)(v5 + 56);
    if (v8 < 64) {
      uint64_t v10 = ~(-1 << v8);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & v9;
    uint64_t v33 = v0;
    int64_t v34 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v12 = v6 + 56;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    for (i = v5; ; uint64_t v5 = i)
    {
      if (v11)
      {
        unint64_t v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v17 = v16 | (v14 << 6);
      }
      else
      {
        int64_t v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v18 >= v34) {
          goto LABEL_36;
        }
        unint64_t v19 = v35[v18];
        ++v14;
        if (!v19)
        {
          int64_t v14 = v18 + 1;
          if (v18 + 1 >= v34) {
            goto LABEL_36;
          }
          unint64_t v19 = v35[v14];
          if (!v19)
          {
            int64_t v14 = v18 + 2;
            if (v18 + 2 >= v34) {
              goto LABEL_36;
            }
            unint64_t v19 = v35[v14];
            if (!v19)
            {
              int64_t v20 = v18 + 3;
              if (v20 >= v34)
              {
LABEL_36:
                swift_release();
                uint64_t v1 = v33;
                uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
                if (v32 > 63) {
                  bzero(v35, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v35 = -1 << v32;
                }
                *(void *)(v5 + 16) = 0;
                break;
              }
              unint64_t v19 = v35[v20];
              if (!v19)
              {
                while (1)
                {
                  int64_t v14 = v20 + 1;
                  if (__OFADD__(v20, 1)) {
                    goto LABEL_42;
                  }
                  if (v14 >= v34) {
                    goto LABEL_36;
                  }
                  unint64_t v19 = v35[v14];
                  ++v20;
                  if (v19) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v14 = v20;
            }
          }
        }
LABEL_23:
        unint64_t v11 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      uint64_t v21 = *(void *)(v5 + 48);
      uint64_t v22 = *(void *)(v37 + 72);
      sub_251A82058(v21 + v22 * v17, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
      sub_251F36CA0();
      sub_251F34DA0();
      sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
      sub_251F35610();
      swift_bridgeObjectRetain();
      sub_251F357B0();
      swift_bridgeObjectRelease();
      sub_251F36CC0();
      sub_251F36CB0();
      uint64_t v23 = *(void *)&v4[v2[8]];
      swift_bridgeObjectRetain();
      sub_251A54708(v38, v23);
      swift_bridgeObjectRelease();
      if (*(void *)&v4[v2[9] + 8])
      {
        sub_251F36CC0();
        swift_bridgeObjectRetain();
        sub_251F357B0();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_251F36CC0();
      }
      sub_251F36CC0();
      uint64_t v24 = *(void *)&v4[v2[11]];
      swift_bridgeObjectRetain();
      sub_251A454AC((uint64_t)v38, v24);
      swift_bridgeObjectRelease();
      uint64_t result = sub_251F36D00();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v12 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v26) & ~*(void *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v12 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v15 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      uint64_t result = sub_251A82058((uint64_t)v4, *(void *)(v7 + 48) + v15 * v22, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v7;
  return result;
}

uint64_t sub_251A6D094()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for StaticUser();
  uint64_t v35 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D2A0);
  uint64_t v6 = sub_251F363D0();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v9 = *(void *)(v5 + 56);
    uint64_t v33 = (void *)(v5 + 56);
    if (v8 < 64) {
      uint64_t v10 = ~(-1 << v8);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & v9;
    uint64_t v31 = v0;
    int64_t v32 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v12 = v6 + 56;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    for (i = v5; ; uint64_t v5 = i)
    {
      if (v11)
      {
        unint64_t v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v17 = v16 | (v14 << 6);
      }
      else
      {
        int64_t v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v32) {
          goto LABEL_33;
        }
        unint64_t v19 = v33[v18];
        ++v14;
        if (!v19)
        {
          int64_t v14 = v18 + 1;
          if (v18 + 1 >= v32) {
            goto LABEL_33;
          }
          unint64_t v19 = v33[v14];
          if (!v19)
          {
            int64_t v14 = v18 + 2;
            if (v18 + 2 >= v32) {
              goto LABEL_33;
            }
            unint64_t v19 = v33[v14];
            if (!v19)
            {
              int64_t v20 = v18 + 3;
              if (v20 >= v32)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v31;
                uint64_t v30 = 1 << *(unsigned char *)(v5 + 32);
                if (v30 > 63) {
                  bzero(v33, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v33 = -1 << v30;
                }
                *(void *)(v5 + 16) = 0;
                break;
              }
              unint64_t v19 = v33[v20];
              if (!v19)
              {
                while (1)
                {
                  int64_t v14 = v20 + 1;
                  if (__OFADD__(v20, 1)) {
                    goto LABEL_39;
                  }
                  if (v14 >= v32) {
                    goto LABEL_33;
                  }
                  unint64_t v19 = v33[v14];
                  ++v20;
                  if (v19) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v14 = v20;
            }
          }
        }
LABEL_23:
        unint64_t v11 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      uint64_t v21 = *(void *)(v5 + 48);
      uint64_t v22 = *(void *)(v35 + 72);
      sub_251A82058(v21 + v22 * v17, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticUser);
      sub_251F36CA0();
      sub_251F34DA0();
      sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
      sub_251F35610();
      sub_251F357B0();
      sub_251F35610();
      sub_251F36CB0();
      sub_251F36CB0();
      uint64_t result = sub_251F36D00();
      uint64_t v23 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v24 = result & ~v23;
      unint64_t v25 = v24 >> 6;
      if (((-1 << v24) & ~*(void *)(v12 + 8 * (v24 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v24) & ~*(void *)(v12 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v28 = v25 == v27;
          if (v25 == v27) {
            unint64_t v25 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v12 + 8 * v25);
        }
        while (v29 == -1);
        unint64_t v15 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      uint64_t result = sub_251A82058((uint64_t)v4, *(void *)(v7 + 48) + v15 * v22, (uint64_t (*)(void))type metadata accessor for StaticUser);
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v7;
  return result;
}

uint64_t sub_251A6D4B8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t result = sub_251F363D0();
  uint64_t v6 = result;
  if (*(void *)(v4 + 16))
  {
    int64_t v7 = 0;
    uint64_t v8 = (void *)(v4 + 56);
    uint64_t v9 = 1 << *(unsigned char *)(v4 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v4 + 56);
    int64_t v12 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v13 = result + 56;
    while (1)
    {
      if (v11)
      {
        unint64_t v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v16 = v15 | (v7 << 6);
      }
      else
      {
        int64_t v17 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v17 >= v12) {
          goto LABEL_33;
        }
        unint64_t v18 = v8[v17];
        ++v7;
        if (!v18)
        {
          int64_t v7 = v17 + 1;
          if (v17 + 1 >= v12) {
            goto LABEL_33;
          }
          unint64_t v18 = v8[v7];
          if (!v18)
          {
            int64_t v7 = v17 + 2;
            if (v17 + 2 >= v12) {
              goto LABEL_33;
            }
            unint64_t v18 = v8[v7];
            if (!v18)
            {
              int64_t v19 = v17 + 3;
              if (v19 >= v12)
              {
LABEL_33:
                uint64_t v28 = 1 << *(unsigned char *)(v4 + 32);
                if (v28 > 63) {
                  bzero((void *)(v4 + 56), ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v8 = -1 << v28;
                }
                uint64_t v3 = v2;
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v18 = v8[v19];
              if (!v18)
              {
                while (1)
                {
                  int64_t v7 = v19 + 1;
                  if (__OFADD__(v19, 1)) {
                    goto LABEL_39;
                  }
                  if (v7 >= v12) {
                    goto LABEL_33;
                  }
                  unint64_t v18 = v8[v7];
                  ++v19;
                  if (v18) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v7 = v19;
            }
          }
        }
LABEL_23:
        unint64_t v11 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v7 << 6);
      }
      char v20 = *(unsigned char *)(*(void *)(v4 + 48) + v16);
      sub_251F36CA0();
      sub_251F36CB0();
      uint64_t result = sub_251F36D00();
      uint64_t v21 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v22 = result & ~v21;
      unint64_t v23 = v22 >> 6;
      if (((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v26 = v23 == v25;
          if (v23 == v25) {
            unint64_t v23 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v13 + 8 * v23);
        }
        while (v27 == -1);
        unint64_t v14 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(void *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(unsigned char *)(*(void *)(v6 + 48) + v14) = v20;
      ++*(void *)(v6 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v6;
  return result;
}

uint64_t sub_251A6D760(uint64_t a1, uint64_t (*a2)(void), uint64_t *a3, uint64_t (*a4)(void), uint64_t (*a5)(char *, uint64_t))
{
  uint64_t v9 = v5;
  uint64_t v10 = a2(0);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (char *)&v29 - v12;
  uint64_t v14 = *v5;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v15 = sub_251F363D0();
  if (*(void *)(v14 + 16))
  {
    uint64_t v30 = v9;
    uint64_t v16 = 1 << *(unsigned char *)(v14 + 32);
    int64_t v17 = (void *)(v14 + 56);
    uint64_t v18 = -1;
    if (v16 < 64) {
      uint64_t v18 = ~(-1 << v16);
    }
    unint64_t v19 = v18 & *(void *)(v14 + 56);
    int64_t v20 = (unint64_t)(v16 + 63) >> 6;
    uint64_t result = swift_retain();
    int64_t v22 = 0;
    while (1)
    {
      if (v19)
      {
        unint64_t v23 = __clz(__rbit64(v19));
        v19 &= v19 - 1;
        unint64_t v24 = v23 | (v22 << 6);
      }
      else
      {
        int64_t v25 = v22 + 1;
        if (__OFADD__(v22, 1))
        {
          __break(1u);
LABEL_28:
          __break(1u);
          return result;
        }
        if (v25 >= v20) {
          goto LABEL_22;
        }
        unint64_t v26 = v17[v25];
        ++v22;
        if (!v26)
        {
          int64_t v22 = v25 + 1;
          if (v25 + 1 >= v20) {
            goto LABEL_22;
          }
          unint64_t v26 = v17[v22];
          if (!v26)
          {
            int64_t v22 = v25 + 2;
            if (v25 + 2 >= v20) {
              goto LABEL_22;
            }
            unint64_t v26 = v17[v22];
            if (!v26)
            {
              int64_t v27 = v25 + 3;
              if (v27 >= v20)
              {
LABEL_22:
                swift_release();
                uint64_t v28 = 1 << *(unsigned char *)(v14 + 32);
                if (v28 > 63) {
                  bzero((void *)(v14 + 56), ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int64_t v17 = -1 << v28;
                }
                uint64_t v9 = v30;
                *(void *)(v14 + 16) = 0;
                break;
              }
              unint64_t v26 = v17[v27];
              if (!v26)
              {
                while (1)
                {
                  int64_t v22 = v27 + 1;
                  if (__OFADD__(v27, 1)) {
                    goto LABEL_28;
                  }
                  if (v22 >= v20) {
                    goto LABEL_22;
                  }
                  unint64_t v26 = v17[v22];
                  ++v27;
                  if (v26) {
                    goto LABEL_21;
                  }
                }
              }
              int64_t v22 = v27;
            }
          }
        }
LABEL_21:
        unint64_t v19 = (v26 - 1) & v26;
        unint64_t v24 = __clz(__rbit64(v26)) + (v22 << 6);
      }
      sub_251A82058(*(void *)(v14 + 48) + *(void *)(v11 + 72) * v24, (uint64_t)v13, a4);
      uint64_t result = a5(v13, v15);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v9 = v15;
  return result;
}

uint64_t sub_251A6D9D8(uint64_t a1, uint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t v5 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v7 = sub_251F363D0();
  uint64_t v8 = v7;
  if (*(void *)(v6 + 16))
  {
    uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
    int64_t v32 = (void *)(v6 + 56);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v6 + 56);
    int64_t v12 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v13 = v7 + 56;
    uint64_t result = swift_retain();
    int64_t v15 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v18 = v17 | (v15 << 6);
      }
      else
      {
        int64_t v19 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v12) {
          goto LABEL_33;
        }
        unint64_t v20 = v32[v19];
        ++v15;
        if (!v20)
        {
          int64_t v15 = v19 + 1;
          if (v19 + 1 >= v12) {
            goto LABEL_33;
          }
          unint64_t v20 = v32[v15];
          if (!v20)
          {
            int64_t v15 = v19 + 2;
            if (v19 + 2 >= v12) {
              goto LABEL_33;
            }
            unint64_t v20 = v32[v15];
            if (!v20)
            {
              int64_t v21 = v19 + 3;
              if (v21 >= v12)
              {
LABEL_33:
                swift_release();
                uint64_t v5 = v3;
                uint64_t v31 = 1 << *(unsigned char *)(v6 + 32);
                if (v31 > 63) {
                  bzero(v32, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int64_t v32 = -1 << v31;
                }
                *(void *)(v6 + 16) = 0;
                break;
              }
              unint64_t v20 = v32[v21];
              if (!v20)
              {
                while (1)
                {
                  int64_t v15 = v21 + 1;
                  if (__OFADD__(v21, 1)) {
                    goto LABEL_39;
                  }
                  if (v15 >= v12) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v32[v15];
                  ++v21;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v15 = v21;
            }
          }
        }
LABEL_23:
        unint64_t v11 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v15 << 6);
      }
      char v22 = *(unsigned char *)(*(void *)(v6 + 48) + v18);
      uint64_t v23 = sub_251F36CA0();
      a3(v23);
      sub_251F357B0();
      swift_bridgeObjectRelease();
      uint64_t result = sub_251F36D00();
      uint64_t v24 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v25 = result & ~v24;
      unint64_t v26 = v25 >> 6;
      if (((-1 << v25) & ~*(void *)(v13 + 8 * (v25 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v25) & ~*(void *)(v13 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v27 = 0;
        unint64_t v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v29 = v26 == v28;
          if (v26 == v28) {
            unint64_t v26 = 0;
          }
          v27 |= v29;
          uint64_t v30 = *(void *)(v13 + 8 * v26);
        }
        while (v30 == -1);
        unint64_t v16 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(void *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(unsigned char *)(*(void *)(v8 + 48) + v16) = v22;
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v5 = v8;
  return result;
}

uint64_t sub_251A6DCD0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v5 = sub_251F363D0();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v30 = v2;
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v4 + 56);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v12 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v14 << 6);
      }
      else
      {
        int64_t v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v11) {
          goto LABEL_33;
        }
        unint64_t v19 = v8[v18];
        ++v14;
        if (!v19)
        {
          int64_t v14 = v18 + 1;
          if (v18 + 1 >= v11) {
            goto LABEL_33;
          }
          unint64_t v19 = v8[v14];
          if (!v19)
          {
            int64_t v14 = v18 + 2;
            if (v18 + 2 >= v11) {
              goto LABEL_33;
            }
            unint64_t v19 = v8[v14];
            if (!v19)
            {
              int64_t v20 = v18 + 3;
              if (v20 >= v11)
              {
LABEL_33:
                swift_release();
                uint64_t v3 = v30;
                uint64_t v29 = 1 << *(unsigned char *)(v4 + 32);
                if (v29 > 63) {
                  bzero((void *)(v4 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v8 = -1 << v29;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v19 = v8[v20];
              if (!v19)
              {
                while (1)
                {
                  int64_t v14 = v20 + 1;
                  if (__OFADD__(v20, 1)) {
                    goto LABEL_39;
                  }
                  if (v14 >= v11) {
                    goto LABEL_33;
                  }
                  unint64_t v19 = v8[v14];
                  ++v20;
                  if (v19) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v14 = v20;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      uint64_t v21 = *(void *)(*(void *)(v4 + 48) + 8 * v17);
      uint64_t result = sub_251F36110();
      uint64_t v22 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(void *)(*(void *)(v6 + 48) + 8 * v15) = v21;
      ++*(void *)(v6 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v6;
  return result;
}

uint64_t sub_251A6DF6C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D1F8);
  uint64_t v3 = sub_251F363D0();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      unint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_251F36CA0();
      sub_251F357B0();
      uint64_t result = sub_251F36D00();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      uint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      void *v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_251A6E24C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D218);
  uint64_t result = sub_251F363D0();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (uint64_t *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v26 = -1 << v7;
    BOOL v27 = v1;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64) {
                  bzero((void *)(v2 + 56), 8 * v10);
                }
                else {
                  *uint64_t v6 = v26;
                }
                uint64_t v1 = v27;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      uint64_t result = sub_251F36C90();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_251A6E4D0()
{
  uint64_t v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D278);
  uint64_t v2 = sub_251F363D0();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16)) {
    goto LABEL_37;
  }
  uint64_t v4 = 1 << *(unsigned char *)(v1 + 32);
  BOOL v27 = (void *)(v1 + 56);
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(v1 + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v8 = v2 + 56;
  swift_retain();
  int64_t v9 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v11 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v12 = v11 | (v9 << 6);
      goto LABEL_24;
    }
    int64_t v13 = v9 + 1;
    if (__OFADD__(v9, 1)) {
      goto LABEL_38;
    }
    if (v13 >= v7) {
      break;
    }
    unint64_t v14 = v27[v13];
    ++v9;
    if (!v14)
    {
      int64_t v9 = v13 + 1;
      if (v13 + 1 >= v7) {
        break;
      }
      unint64_t v14 = v27[v9];
      if (!v14)
      {
        int64_t v9 = v13 + 2;
        if (v13 + 2 >= v7) {
          break;
        }
        unint64_t v14 = v27[v9];
        if (!v14)
        {
          int64_t v15 = v13 + 3;
          if (v15 >= v7) {
            break;
          }
          unint64_t v14 = v27[v15];
          if (!v14)
          {
            while (1)
            {
              int64_t v9 = v15 + 1;
              if (__OFADD__(v15, 1)) {
                goto LABEL_39;
              }
              if (v9 >= v7) {
                goto LABEL_33;
              }
              unint64_t v14 = v27[v9];
              ++v15;
              if (v14) {
                goto LABEL_23;
              }
            }
          }
          int64_t v9 = v15;
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v9 << 6);
LABEL_24:
    char v16 = *(unsigned char *)(*(void *)(v1 + 48) + v12);
    sub_251F36CA0();
    sub_251F357B0();
    swift_bridgeObjectRelease();
    uint64_t v17 = sub_251F36D00();
    uint64_t v18 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v19 = v17 & ~v18;
    unint64_t v20 = v19 >> 6;
    if (((-1 << v19) & ~*(void *)(v8 + 8 * (v19 >> 6))) != 0)
    {
      unint64_t v10 = __clz(__rbit64((-1 << v19) & ~*(void *)(v8 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_7;
    }
    char v21 = 0;
    unint64_t v22 = (unint64_t)(63 - v18) >> 6;
    do
    {
      if (++v20 == v22 && (v21 & 1) != 0)
      {
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x251A6E888);
      }
      BOOL v23 = v20 == v22;
      if (v20 == v22) {
        unint64_t v20 = 0;
      }
      v21 |= v23;
      uint64_t v24 = *(void *)(v8 + 8 * v20);
    }
    while (v24 == -1);
    unint64_t v10 = __clz(__rbit64(~v24)) + (v20 << 6);
LABEL_7:
    *(void *)(v8 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
    *(unsigned char *)(*(void *)(v3 + 48) + v10) = v16;
    ++*(void *)(v3 + 16);
  }
LABEL_33:
  swift_release();
  uint64_t v25 = 1 << *(unsigned char *)(v1 + 32);
  if (v25 > 63) {
    bzero(v27, ((unint64_t)(v25 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *BOOL v27 = -1 << v25;
  }
  *(void *)(v1 + 16) = 0;
LABEL_37:
  uint64_t result = swift_release();
  *uint64_t v0 = v3;
  return result;
}

uint64_t sub_251A6E8A8()
{
  uint64_t v1 = v0;
  uint64_t v2 = _s7MergeIdVMa();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D220);
  uint64_t v7 = sub_251F363D0();
  uint64_t v8 = v7;
  if (*(void *)(v6 + 16))
  {
    uint64_t v42 = v0;
    uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
    uint64_t v10 = *(void *)(v6 + 56);
    uint64_t v46 = (void *)(v6 + 56);
    if (v9 < 64) {
      uint64_t v11 = ~(-1 << v9);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & v10;
    int64_t v45 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v13 = v7 + 56;
    uint64_t result = swift_retain();
    int64_t v15 = 0;
    uint64_t v43 = v2;
    uint64_t v44 = v3;
    while (1)
    {
      if (v12)
      {
        int64_t v48 = v15;
        uint64_t v49 = (v12 - 1) & v12;
        unint64_t v17 = __clz(__rbit64(v12)) | (v15 << 6);
      }
      else
      {
        int64_t v18 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v18 >= v45) {
          goto LABEL_36;
        }
        unint64_t v19 = v46[v18];
        int64_t v20 = v15 + 1;
        if (!v19)
        {
          int64_t v20 = v15 + 2;
          if (v15 + 2 >= v45) {
            goto LABEL_36;
          }
          unint64_t v19 = v46[v20];
          if (!v19)
          {
            int64_t v20 = v15 + 3;
            if (v15 + 3 >= v45) {
              goto LABEL_36;
            }
            unint64_t v19 = v46[v20];
            if (!v19)
            {
              uint64_t v21 = v15 + 4;
              if (v15 + 4 >= v45)
              {
LABEL_36:
                swift_release();
                uint64_t v1 = v42;
                uint64_t v40 = 1 << *(unsigned char *)(v6 + 32);
                if (v40 > 63) {
                  bzero(v46, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v46 = -1 << v40;
                }
                *(void *)(v6 + 16) = 0;
                break;
              }
              unint64_t v19 = v46[v21];
              if (!v19)
              {
                while (1)
                {
                  int64_t v20 = v21 + 1;
                  if (__OFADD__(v21, 1)) {
                    goto LABEL_42;
                  }
                  if (v20 >= v45) {
                    goto LABEL_36;
                  }
                  unint64_t v19 = v46[v20];
                  ++v21;
                  if (v19) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v20 = v15 + 4;
            }
          }
        }
LABEL_23:
        int64_t v48 = v20;
        uint64_t v49 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v20 << 6);
      }
      uint64_t v22 = *(void *)(v6 + 48);
      uint64_t v47 = *(void *)(v3 + 72);
      sub_251A82058(v22 + v47 * v17, (uint64_t)v5, (uint64_t (*)(void))_s7MergeIdVMa);
      sub_251F36CA0();
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
      MEMORY[0x270FA5388](v23 - 8);
      uint64_t v25 = (char *)&v41 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_251A1E280((uint64_t)v5, (uint64_t)v25);
      uint64_t v26 = sub_251F34DA0();
      uint64_t v27 = *(void *)(v26 - 8);
      uint64_t v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26);
      if (v28 == 1)
      {
        sub_251F36CC0();
      }
      else
      {
        MEMORY[0x270FA5388](v28);
        uint64_t v30 = v5;
        uint64_t v31 = (char *)&v41 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v31, v25, v26);
        sub_251F36CC0();
        sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
        sub_251F35610();
        int64_t v32 = v31;
        uint64_t v5 = v30;
        (*(void (**)(char *, uint64_t))(v27 + 8))(v32, v26);
        uint64_t v3 = v44;
      }
      unint64_t v12 = v49;
      sub_251F357B0();
      uint64_t result = sub_251F36D00();
      uint64_t v33 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v34 = result & ~v33;
      unint64_t v35 = v34 >> 6;
      if (((-1 << v34) & ~*(void *)(v13 + 8 * (v34 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v34) & ~*(void *)(v13 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v36 = 0;
        unint64_t v37 = (unint64_t)(63 - v33) >> 6;
        do
        {
          if (++v35 == v37 && (v36 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v38 = v35 == v37;
          if (v35 == v37) {
            unint64_t v35 = 0;
          }
          v36 |= v38;
          uint64_t v39 = *(void *)(v13 + 8 * v35);
        }
        while (v39 == -1);
        unint64_t v16 = __clz(__rbit64(~v39)) + (v35 << 6);
      }
      *(void *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = sub_251A82058((uint64_t)v5, *(void *)(v8 + 48) + v16 * v47, (uint64_t (*)(void))_s7MergeIdVMa);
      ++*(void *)(v8 + 16);
      int64_t v15 = v48;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v8;
  return result;
}

uint64_t sub_251A6EDFC(uint64_t a1, uint64_t a2)
{
  sub_251F36CA0();
  uint64_t v4 = sub_251F34DA0();
  sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
  sub_251F35610();
  uint64_t v5 = type metadata accessor for StaticMediaSystemComponent();
  StaticMediaProfile.hash(into:)(v17);
  sub_251F36CB0();
  sub_251A54708(v17, *(void *)(a1 + *(int *)(v5 + 28)));
  uint64_t v6 = a1 + *(int *)(v5 + 32);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1E280(v6, (uint64_t)v9);
  uint64_t v10 = *(void *)(v4 - 8);
  uint64_t v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, v4);
  if (v11 == 1)
  {
    sub_251F36CC0();
  }
  else
  {
    MEMORY[0x270FA5388](v11);
    uint64_t v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v9, v4);
    sub_251F36CC0();
    sub_251F35610();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v4);
  }
  sub_251F36D00();
  unint64_t v14 = sub_251F36290();
  *(void *)(a2 + 56 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
  uint64_t result = sub_251A82058(a1, *(void *)(a2 + 48) + *(void *)(*(void *)(v5 - 8) + 72) * v14, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent);
  ++*(void *)(a2 + 16);
  return result;
}

uint64_t sub_251A6F09C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F36CA0();
  sub_251A81FF0(a1, (uint64_t)v7, type metadata accessor for StaticAccessory.DeviceIdentifier);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_251F34DA0();
    uint64_t v9 = *(void *)(v8 - 8);
    MEMORY[0x270FA5388](v8);
    uint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    sub_251F36CB0();
    sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
    sub_251F35610();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  else
  {
    sub_251F36CB0();
    sub_251F357B0();
    swift_bridgeObjectRelease();
  }
  sub_251F36D00();
  unint64_t v12 = sub_251F36290();
  *(void *)(a2 + 56 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
  uint64_t result = sub_251A82058(a1, *(void *)(a2 + 48) + *(void *)(v5 + 72) * v12, type metadata accessor for StaticAccessory.DeviceIdentifier);
  ++*(void *)(a2 + 16);
  return result;
}

unint64_t sub_251A6F328(uint64_t a1, uint64_t a2)
{
  sub_251F36110();
  unint64_t result = sub_251F36290();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

uint64_t sub_251A6F3AC(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = result;
  unint64_t v7 = *(void *)(*(void *)v3 + 16);
  unint64_t v8 = *(void *)(*(void *)v3 + 24);
  if (v8 <= v7 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_251A68DE0();
    }
    else
    {
      if (v8 > v7)
      {
        unint64_t result = (uint64_t)sub_251A761DC();
        goto LABEL_33;
      }
      sub_251A77964();
    }
    uint64_t v9 = *(void *)v3;
    sub_251F36CA0();
    if (v6 == 2 || v6 == 1)
    {
      sub_251F36CB0();
    }
    else
    {
      sub_251F36CB0();
      sub_251F36CC0();
      if (v6)
      {
        swift_bridgeObjectRetain();
        sub_251A54708(v19, v6);
        sub_251A58144(v6);
      }
    }
    uint64_t v3 = v19;
    unint64_t result = sub_251F36D00();
    uint64_t v10 = -1 << *(unsigned char *)(v9 + 32);
    a2 = result & ~v10;
    if ((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v11 = ~v10;
      while (1)
      {
        uint64_t v12 = *(void *)(v9 + 48);
        uint64_t v3 = *(long long **)(v12 + 8 * a2);
        uint64_t v13 = v6;
        if (v3 == (long long *)2)
        {
          if (v6 == 2) {
            goto LABEL_36;
          }
          goto LABEL_22;
        }
        if (v3 == (long long *)1) {
          break;
        }
        if ((unint64_t)(v6 - 1) < 2) {
          goto LABEL_22;
        }
        if (!v3)
        {
          sub_251A81FDC(v6);
          sub_251A81FDC(0);
          sub_251A81FDC(v6);
          sub_251A81FDC(0);
          sub_251A58144(0);
          sub_251A58144(v6);
          sub_251A58144(0);
          uint64_t v13 = 0;
          uint64_t v3 = (long long *)v6;
          if (!v6) {
            goto LABEL_37;
          }
          goto LABEL_23;
        }
        if (!v6)
        {
          uint64_t v13 = 0;
LABEL_22:
          sub_251A81FDC(v13);
          sub_251A81FDC((uint64_t)v3);
LABEL_23:
          sub_251A58144((uint64_t)v3);
          unint64_t result = sub_251A58144(v13);
          goto LABEL_24;
        }
        sub_251A81FDC(*(void *)(v12 + 8 * a2));
        sub_251A81FDC((uint64_t)v3);
        sub_251A81FDC(v6);
        sub_251A81FDC((uint64_t)v3);
        sub_251A81FDC(v6);
        sub_251A81FDC((uint64_t)v3);
        char v14 = sub_251B04848((uint64_t)v3, v6);
        sub_251A58144((uint64_t)v3);
        sub_251A58144(v6);
        sub_251A58144(v6);
        sub_251A58144((uint64_t)v3);
        sub_251A58144((uint64_t)v3);
        unint64_t result = swift_bridgeObjectRelease();
        if (v14) {
          goto LABEL_37;
        }
LABEL_24:
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          goto LABEL_33;
        }
      }
      if (v6 == 1) {
        goto LABEL_36;
      }
      goto LABEL_22;
    }
  }
LABEL_33:
  uint64_t v15 = *(void *)v4;
  *(void *)(*(void *)v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v15 + 48) + 8 * a2) = v6;
  uint64_t v16 = *(void *)(v15 + 16);
  BOOL v17 = __OFADD__(v16, 1);
  uint64_t v18 = v16 + 1;
  if (v17)
  {
    __break(1u);
LABEL_36:
    sub_251A58144((uint64_t)v3);
    sub_251A58144((uint64_t)v3);
LABEL_37:
    unint64_t result = sub_251F36B90();
    __break(1u);
  }
  else
  {
    *(void *)(v15 + 16) = v18;
  }
  return result;
}

uint64_t sub_251A6F690(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for StaticMediaProfile();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = *(void *)(*v4 + 16);
  unint64_t v13 = *(void *)(*v4 + 24);
  if (v13 > v12 && (a3 & 1) != 0)
  {
LABEL_13:
    uint64_t v14 = v9;
    goto LABEL_14;
  }
  if (a3)
  {
    sub_251A690F8(v12 + 1, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile, &qword_269B9D2B0, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile, (void (*)(char *))StaticMediaProfile.hash(into:));
    goto LABEL_8;
  }
  if (v13 <= v12)
  {
    sub_251A77C4C();
LABEL_8:
    uint64_t v15 = *v4;
    sub_251F36CA0();
    StaticMediaProfile.hash(into:)(v27);
    uint64_t v16 = sub_251F36D00();
    uint64_t v17 = -1 << *(unsigned char *)(v15 + 32);
    a2 = v16 & ~v17;
    if ((*(void *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v26 = v8;
      uint64_t v18 = ~v17;
      uint64_t v14 = v9;
      uint64_t v19 = *(void *)(v9 + 72);
      while (1)
      {
        sub_251A81FF0(*(void *)(v15 + 48) + v19 * a2, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
        char v20 = _s13HomeDataModel18StaticMediaProfileV2eeoiySbAC_ACtFZ_0((uint64_t)v11, a1);
        sub_251A820C0((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
        if (v20) {
          goto LABEL_17;
        }
        a2 = (a2 + 1) & v18;
        if (((*(void *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          goto LABEL_14;
        }
      }
    }
    goto LABEL_13;
  }
  uint64_t v14 = v9;
  sub_251A76388((uint64_t (*)(void))type metadata accessor for StaticMediaProfile, &qword_269B9D2B0, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
LABEL_14:
  uint64_t v21 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_251A82058(a1, *(void *)(v21 + 48) + *(void *)(v14 + 72) * a2, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
  uint64_t v23 = *(void *)(v21 + 16);
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (!v24)
  {
    *(void *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_17:
  uint64_t result = sub_251F36B90();
  __break(1u);
  return result;
}

uint64_t sub_251A6F968(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for StaticMediaSystem();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = *(void *)(*v4 + 16);
  unint64_t v13 = *(void *)(*v4 + 24);
  if (v13 > v12 && (a3 & 1) != 0)
  {
LABEL_13:
    uint64_t v14 = v9;
    goto LABEL_14;
  }
  if (a3)
  {
    sub_251A690F8(v12 + 1, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem, &qword_269B9D2B8, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem, (void (*)(char *))StaticMediaSystem.hash(into:));
    goto LABEL_8;
  }
  if (v13 <= v12)
  {
    sub_251A77FB0();
LABEL_8:
    uint64_t v15 = *v4;
    sub_251F36CA0();
    StaticMediaSystem.hash(into:)(v27);
    uint64_t v16 = sub_251F36D00();
    uint64_t v17 = -1 << *(unsigned char *)(v15 + 32);
    a2 = v16 & ~v17;
    if ((*(void *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v26 = v8;
      uint64_t v18 = ~v17;
      uint64_t v14 = v9;
      uint64_t v19 = *(void *)(v9 + 72);
      while (1)
      {
        sub_251A81FF0(*(void *)(v15 + 48) + v19 * a2, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
        char v20 = _s13HomeDataModel17StaticMediaSystemV2eeoiySbAC_ACtFZ_0((uint64_t)v11, a1);
        sub_251A820C0((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
        if (v20) {
          goto LABEL_17;
        }
        a2 = (a2 + 1) & v18;
        if (((*(void *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          goto LABEL_14;
        }
      }
    }
    goto LABEL_13;
  }
  uint64_t v14 = v9;
  sub_251A76388((uint64_t (*)(void))type metadata accessor for StaticMediaSystem, &qword_269B9D2B8, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
LABEL_14:
  uint64_t v21 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_251A82058(a1, *(void *)(v21 + 48) + *(void *)(v14 + 72) * a2, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
  uint64_t v23 = *(void *)(v21 + 16);
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (!v24)
  {
    *(void *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_17:
  uint64_t result = sub_251F36B90();
  __break(1u);
  return result;
}

uint64_t sub_251A6FC40(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v52 = a1;
  uint64_t v51 = type metadata accessor for StaticZone();
  uint64_t v6 = *(void *)(v51 - 8);
  MEMORY[0x270FA5388](v51);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v9 = *(void *)(*v3 + 16);
  unint64_t v10 = *(void *)(*v3 + 24);
  uint64_t v44 = v3;
  uint64_t v43 = v6;
  if (v10 <= v9 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_251A6948C();
    }
    else
    {
      if (v10 > v9)
      {
        sub_251A76388((uint64_t (*)(void))type metadata accessor for StaticZone, &qword_269B9D280, (uint64_t (*)(void))type metadata accessor for StaticZone, (uint64_t (*)(void))type metadata accessor for StaticZone);
        goto LABEL_25;
      }
      sub_251A78314();
    }
    uint64_t v11 = *v3;
    sub_251F36CA0();
    uint64_t v12 = sub_251F34DA0();
    sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
    uint64_t v13 = v52;
    sub_251F35610();
    uint64_t v14 = v51;
    uint64_t v46 = (void *)(v13 + *(int *)(v51 + 20));
    sub_251F357B0();
    uint64_t v45 = *(int *)(v14 + 24);
    sub_251A41A94((uint64_t)v63, *(void *)(v13 + v45));
    uint64_t v15 = sub_251F36D00();
    uint64_t v16 = -1 << *(unsigned char *)(v11 + 32);
    a2 = v15 & ~v16;
    uint64_t v50 = v11;
    uint64_t v49 = v11 + 56;
    if ((*(void *)(v11 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v47 = ~v16;
      uint64_t v48 = *(void *)(v6 + 72);
      uint64_t v42 = (uint64_t *)(v12 - 8);
      int64_t v53 = v8;
      while (1)
      {
        uint64_t v17 = *(void *)(v50 + 48);
        unint64_t v54 = a2;
        sub_251A81FF0(v17 + v48 * a2, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticZone);
        if (sub_251F34D70())
        {
          uint64_t v18 = (uint64_t *)&v53[*(int *)(v51 + 20)];
          uint64_t v19 = *v18;
          BOOL v20 = *v18 == *v46 && v18[1] == v46[1];
          if (v20 || (uint64_t v19 = sub_251F36B10(), (v19 & 1) != 0))
          {
            uint64_t v21 = *(void *)&v53[*(int *)(v51 + 24)];
            uint64_t v22 = *(void *)(v52 + v45);
            uint64_t v23 = *(void *)(v22 + 16);
            uint64_t v58 = *(void *)(v21 + 16);
            uint64_t v59 = v21;
            if (v58 == v23) {
              break;
            }
          }
        }
LABEL_10:
        uint64_t v8 = v53;
        sub_251A820C0((uint64_t)v53, (uint64_t (*)(void))type metadata accessor for StaticZone);
        a2 = (v54 + 1) & v47;
        if (((*(void *)(v49 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          goto LABEL_25;
        }
      }
      if (v58)
      {
        uint64_t v24 = *v42;
        if (v59 != v22)
        {
          unint64_t v25 = 0;
          unint64_t v26 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
          uint64_t v27 = v24 + 16;
          a2 = *(void *)(v24 + 16);
          uint64_t v28 = *(void *)(v24 + 64);
          uint64_t v55 = *(void *)(v24 + 72);
          uint64_t v56 = (void (**)(char *, uint64_t))(v24 + 8);
          uint64_t v57 = v28;
          while (1)
          {
            uint64_t v29 = v57;
            MEMORY[0x270FA5388](v19);
            unint64_t v30 = (v29 + 15) & 0xFFFFFFFFFFFFFFF0;
            ((void (*)(char *, unint64_t, uint64_t))a2)((char *)&v41 - v30, v59 + v26, v12);
            uint64_t result = MEMORY[0x270FA5388](&v41);
            if (v25 >= *(void *)(v22 + 16)) {
              break;
            }
            uint64_t v61 = &v41;
            uint64_t v62 = result;
            int64_t v32 = (void (*)(void, void, void))a2;
            uint64_t v33 = v27;
            unint64_t v34 = v32;
            v32((char *)&v41 - v30, v22 + v26, v12);
            sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
            int v60 = sub_251F35650();
            uint64_t v35 = v22;
            char v36 = *v56;
            (*v56)((char *)&v41 - v30, v12);
            uint64_t v19 = ((uint64_t (*)(char *, uint64_t))v36)((char *)&v41 - v30, v12);
            if ((v60 & 1) == 0) {
              goto LABEL_10;
            }
            uint64_t v22 = v35;
            ++v25;
            v26 += v55;
            uint64_t v27 = v33;
            a2 = (unint64_t)v34;
            if (v58 == v25) {
              goto LABEL_24;
            }
          }
          __break(1u);
          goto LABEL_28;
        }
      }
LABEL_24:
      sub_251A820C0((uint64_t)v53, (uint64_t (*)(void))type metadata accessor for StaticZone);
      sub_251F36B90();
      __break(1u);
    }
  }
LABEL_25:
  uint64_t v37 = *v44;
  *(void *)(*v44 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_251A82058(v52, *(void *)(v37 + 48) + *(void *)(v43 + 72) * a2, (uint64_t (*)(void))type metadata accessor for StaticZone);
  uint64_t v38 = *(void *)(v37 + 16);
  BOOL v39 = __OFADD__(v38, 1);
  uint64_t v40 = v38 + 1;
  if (!v39)
  {
    *(void *)(v37 + 16) = v40;
    return result;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_251A701C8(uint64_t result, unint64_t a2, char a3)
{
  int v5 = result & 1;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_251A69B50();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_251A76600();
      goto LABEL_14;
    }
    sub_251A78998();
  }
  uint64_t v8 = *v3;
  sub_251F36CA0();
  sub_251F36CB0();
  uint64_t result = sub_251F36D00();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (((v5 == 0) ^ *(unsigned __int8 *)(v10 + a2)))
    {
LABEL_13:
      uint64_t result = sub_251F36B90();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (((v5 == 0) ^ *(unsigned __int8 *)(v10 + a2))) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v12 + 48) + a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

uint64_t sub_251A70330(uint64_t result, char a2)
{
  unint64_t v3 = result;
  unint64_t v4 = *(void *)(*v2 + 16);
  unint64_t v5 = *(void *)(*v2 + 24);
  if (v5 <= v4 || (a2 & 1) == 0)
  {
    if (a2)
    {
      sub_251A69DFC();
      goto LABEL_8;
    }
    if (v5 <= v4)
    {
      sub_251A78C14();
LABEL_8:
      uint64_t v6 = *v2;
      sub_251F36CA0();
      sub_251F36CB0();
      uint64_t result = sub_251F36D00();
      unint64_t v3 = result & ~(-1 << *(unsigned char *)(v6 + 32));
      if ((*(void *)(v6 + ((v3 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v3)) {
        goto LABEL_12;
      }
      goto LABEL_9;
    }
    uint64_t result = (uint64_t)sub_251A76794();
  }
LABEL_9:
  uint64_t v7 = *v2;
  *(void *)(*v2 + 8 * (v3 >> 6) + 56) |= 1 << v3;
  uint64_t v8 = *(void *)(v7 + 16);
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (!v9)
  {
    *(void *)(v7 + 16) = v10;
    return result;
  }
  __break(1u);
LABEL_12:
  uint64_t result = sub_251F36B90();
  __break(1u);
  return result;
}

uint64_t sub_251A70430(uint64_t result, unint64_t a2, char a3)
{
  unsigned int v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_251A6A080();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_251A76900();
      goto LABEL_14;
    }
    sub_251A78E58();
  }
  uint64_t v8 = *v3;
  uint64_t result = MEMORY[0x2533ABBC0](*(void *)(*v3 + 40), v5, 4);
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(_DWORD *)(v10 + 4 * a2) == v5)
    {
LABEL_13:
      uint64_t result = sub_251F36B90();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(_DWORD *)(v10 + 4 * a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_DWORD *)(*(void *)(v12 + 48) + 4 * a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

uint64_t sub_251A70558(uint64_t result, unint64_t a2, char a3)
{
  char v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_251A6A308();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_251A76C68(&qword_269B9D340);
      goto LABEL_14;
    }
    sub_251A790C0();
  }
  uint64_t v8 = *v3;
  sub_251F36CA0();
  int v9 = dword_251F3AE18[v5];
  sub_251F36CE0();
  uint64_t result = sub_251F36D00();
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v10;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v11 = *(void *)(v8 + 48);
    if (dword_251F3AE18[*(char *)(v11 + a2)] == v9)
    {
LABEL_13:
      uint64_t result = sub_251F36B90();
      __break(1u);
    }
    else
    {
      uint64_t v12 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v12;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (dword_251F3AE18[*(char *)(v11 + a2)] == v9) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v13 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v13 + 48) + a2) = v5;
  uint64_t v14 = *(void *)(v13 + 16);
  BOOL v15 = __OFADD__(v14, 1);
  uint64_t v16 = v14 + 1;
  if (v15) {
    __break(1u);
  }
  else {
    *(void *)(v13 + 16) = v16;
  }
  return result;
}

void sub_251A706D8(uint64_t a1, unint64_t a2, char a3, uint64_t *a4, unint64_t *a5)
{
  unint64_t v9 = *(void *)(*v5 + 16);
  unint64_t v10 = *(void *)(*v5 + 24);
  if (v10 > v9 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v11 = v9 + 1;
  if (a3)
  {
    sub_251A6DCD0(v11, a4);
  }
  else
  {
    if (v10 > v9)
    {
      sub_251A77474(a4);
      goto LABEL_14;
    }
    sub_251A7E2C8(v11, a4);
  }
  uint64_t v12 = *v5;
  uint64_t v13 = sub_251F36110();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_251A1A568(0, a5);
    id v15 = *(id *)(*(void *)(v12 + 48) + 8 * a2);
    char v16 = sub_251F36120();

    if (v16)
    {
LABEL_13:
      sub_251F36B90();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v14;
      while (1)
      {
        a2 = (a2 + 1) & v17;
        if (((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v18 = *(id *)(*(void *)(v12 + 48) + 8 * a2);
        char v19 = sub_251F36120();

        if (v19) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v20 + 48) + 8 * a2) = a1;
  uint64_t v21 = *(void *)(v20 + 16);
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v23;
  }
}

uint64_t sub_251A7086C(uint64_t result, unint64_t a2, char a3)
{
  char v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_251A6A5C0();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_251A76C68((uint64_t *)&unk_269BA0450);
      goto LABEL_14;
    }
    sub_251A79348();
  }
  uint64_t v8 = *v3;
  sub_251F36CA0();
  int v9 = dword_251F3ADAC[v5];
  sub_251F36CE0();
  uint64_t result = sub_251F36D00();
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v10;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v11 = *(void *)(v8 + 48);
    if (dword_251F3ADAC[*(char *)(v11 + a2)] == v9)
    {
LABEL_13:
      uint64_t result = sub_251F36B90();
      __break(1u);
    }
    else
    {
      uint64_t v12 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v12;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (dword_251F3ADAC[*(char *)(v11 + a2)] == v9) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v13 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v13 + 48) + a2) = v5;
  uint64_t v14 = *(void *)(v13 + 16);
  BOOL v15 = __OFADD__(v14, 1);
  uint64_t v16 = v14 + 1;
  if (v15) {
    __break(1u);
  }
  else {
    *(void *)(v13 + 16) = v16;
  }
  return result;
}

uint64_t sub_251A709EC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, char a6)
{
  uint64_t v10 = result;
  unint64_t v11 = *(void *)(*v6 + 16);
  unint64_t v12 = *(void *)(*v6 + 24);
  if (v12 > v11 && (a6 & 1) != 0) {
    goto LABEL_19;
  }
  if (a6)
  {
    sub_251A6A878();
  }
  else
  {
    if (v12 > v11)
    {
      uint64_t result = (uint64_t)sub_251A76A98();
      goto LABEL_19;
    }
    sub_251A795D0();
  }
  uint64_t v13 = *v6;
  sub_251F36CA0();
  sub_251F36CB0();
  swift_bridgeObjectRetain();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_251A54AB8((uint64_t)v27, a4);
  swift_bridgeObjectRelease();
  uint64_t result = sub_251F36D00();
  uint64_t v14 = -1 << *(unsigned char *)(v13 + 32);
  a5 = result & ~v14;
  if ((*(void *)(v13 + 56 + ((a5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a5))
  {
    uint64_t v15 = ~v14;
    do
    {
      id v18 = (void *)(*(void *)(v13 + 48) + 32 * a5);
      if (*v18 == v10)
      {
        BOOL v19 = v18[1] == a2 && v18[2] == a3;
        if (v19 || (uint64_t result = sub_251F36B10(), (result & 1) != 0))
        {
          swift_bridgeObjectRetain();
          uint64_t v16 = swift_bridgeObjectRetain();
          char v17 = sub_251B056E8(v16, a4);
          swift_bridgeObjectRelease();
          uint64_t result = swift_bridgeObjectRelease();
          if (v17) {
            goto LABEL_22;
          }
        }
      }
      a5 = (a5 + 1) & v15;
    }
    while (((*(void *)(v13 + 56 + ((a5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a5) & 1) != 0);
  }
LABEL_19:
  uint64_t v20 = *v25;
  *(void *)(*v25 + 8 * (a5 >> 6) + 56) |= 1 << a5;
  uint64_t v21 = (uint64_t *)(*(void *)(v20 + 48) + 32 * a5);
  *uint64_t v21 = v10;
  v21[1] = a2;
  _OWORD v21[2] = a3;
  v21[3] = a4;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (!v23)
  {
    *(void *)(v20 + 16) = v24;
    return result;
  }
  __break(1u);
LABEL_22:
  uint64_t result = sub_251F36B90();
  __break(1u);
  return result;
}

uint64_t sub_251A70BFC(uint64_t result, unint64_t a2, char a3)
{
  unsigned int v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_251A6AB28();
    }
    else
    {
      if (v7 > v6)
      {
        uint64_t result = (uint64_t)sub_251A76C68(&qword_269B9D300);
        goto LABEL_21;
      }
      sub_251A79864();
    }
    uint64_t v8 = *v3;
    sub_251F36CA0();
    unsigned int v9 = v5 >> 6;
    sub_251F36CD0();
    sub_251F357B0();
    uint64_t result = sub_251F36D00();
    uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
    a2 = result & ~v10;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v11 = ~v10;
      do
      {
        unsigned int v12 = *(unsigned __int8 *)(*(void *)(v8 + 48) + a2);
        if (v12 >> 6)
        {
          if (v12 >> 6 == 1)
          {
            if (v9 == 1) {
              goto LABEL_10;
            }
          }
          else if (v9 == 2)
          {
LABEL_10:
            if (((v12 ^ v5) & 0x3F) == 0) {
              goto LABEL_24;
            }
          }
        }
        else if (v5 <= 0x3F && v12 == v5)
        {
          goto LABEL_24;
        }
        a2 = (a2 + 1) & v11;
      }
      while (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
    }
  }
LABEL_21:
  uint64_t v13 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v13 + 48) + a2) = v5;
  uint64_t v14 = *(void *)(v13 + 16);
  BOOL v15 = __OFADD__(v14, 1);
  uint64_t v16 = v14 + 1;
  if (v15)
  {
    __break(1u);
LABEL_24:
    uint64_t result = sub_251F36B90();
    __break(1u);
  }
  else
  {
    *(void *)(v13 + 16) = v16;
  }
  return result;
}

uint64_t sub_251A70E00(uint64_t result, unint64_t a2, char a3)
{
  unsigned __int8 v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_251A6AE50();
    }
    else
    {
      if (v7 > v6)
      {
        uint64_t result = (uint64_t)sub_251A76C68(&qword_269B9D250);
        goto LABEL_17;
      }
      sub_251A79B58();
    }
    uint64_t v8 = *v3;
    sub_251F36CA0();
    sub_251F36CC0();
    sub_251F357B0();
    uint64_t result = sub_251F36D00();
    uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
    a2 = result & ~v9;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v10 = ~v9;
      do
      {
        if (*(char *)(*(void *)(v8 + 48) + a2) < 0)
        {
          if ((v5 & 0x80) != 0)
          {
LABEL_10:
            if (*(unsigned __int8 *)(*(void *)(v8 + 48) + a2) == v5) {
              goto LABEL_20;
            }
          }
        }
        else if ((v5 & 0x80) == 0)
        {
          goto LABEL_10;
        }
        a2 = (a2 + 1) & v10;
      }
      while (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
    }
  }
LABEL_17:
  uint64_t v11 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v11 + 48) + a2) = v5;
  uint64_t v12 = *(void *)(v11 + 16);
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (v13)
  {
    __break(1u);
LABEL_20:
    uint64_t result = sub_251F36B90();
    __break(1u);
  }
  else
  {
    *(void *)(v11 + 16) = v14;
  }
  return result;
}

uint64_t sub_251A70FB0(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = (unsigned __int16)result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_251A6B14C();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_251A76DF4();
      goto LABEL_14;
    }
    sub_251A79E20();
  }
  uint64_t v8 = *v3;
  uint64_t result = MEMORY[0x2533ABBC0](*(void *)(*v3 + 40), v5, 2);
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(unsigned __int16 *)(v10 + 2 * a2) == v5)
    {
LABEL_13:
      uint64_t result = sub_251F36B90();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(unsigned __int16 *)(v10 + 2 * a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_WORD *)(*(void *)(v12 + 48) + 2 * a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

uint64_t sub_251A710D8(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v29 = a1;
  unint64_t v5 = *(void *)(*v3 + 16);
  unint64_t v6 = *(void *)(*v3 + 24);
  if (v6 > v5 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_251A6B3D4();
  }
  else
  {
    if (v6 > v5)
    {
      sub_251A76F8C();
      goto LABEL_12;
    }
    sub_251A7A088();
  }
  uint64_t v7 = *v3;
  uint64_t v8 = sub_251F34DA0();
  sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
  uint64_t v9 = sub_251F35600();
  uint64_t v10 = -1 << *(unsigned char *)(v7 + 32);
  a2 = v9 & ~v10;
  uint64_t v27 = v7 + 56;
  uint64_t v28 = v7;
  if ((*(void *)(v7 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v26 = ~v10;
    uint64_t v11 = *(void **)(v8 - 8);
    uint64_t v12 = (void (*)(char *, unint64_t, uint64_t))v11[2];
    uint64_t v13 = v11[8];
    uint64_t v14 = v11[9];
    uint64_t v15 = (uint64_t (**)(char *, uint64_t))(v11 + 1);
    do
    {
      MEMORY[0x270FA5388](v9);
      v12((char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), *(void *)(v28 + 48) + v14 * a2, v8);
      sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
      char v16 = sub_251F35650();
      uint64_t v9 = (*v15)((char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
      if (v16) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v26;
    }
    while (((*(void *)(v27 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v17 = *v25;
  *(void *)(*v25 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t v18 = *(void *)(v17 + 48);
  uint64_t v19 = sub_251F34DA0();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v18 + *(void *)(*(void *)(v19 - 8) + 72) * a2, v29, v19);
  uint64_t v21 = *(void *)(v17 + 16);
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (!v22)
  {
    *(void *)(v17 + 16) = v23;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_251F36B90();
  __break(1u);
  return result;
}

uint64_t sub_251A7133C(uint64_t result, int a2, unint64_t a3, char a4)
{
  uint64_t v7 = result;
  unint64_t v8 = *(void *)(*v4 + 16);
  unint64_t v9 = *(void *)(*v4 + 24);
  if (v9 > v8 && (a4 & 1) != 0) {
    goto LABEL_19;
  }
  if (a4)
  {
    sub_251A6B794();
  }
  else
  {
    if (v9 > v8)
    {
      uint64_t result = (uint64_t)sub_251A77234();
      goto LABEL_19;
    }
    sub_251A7A424();
  }
  uint64_t v10 = *v4;
  sub_251F36CA0();
  sub_251F36CF0();
  sub_251F36CC0();
  if ((a2 & 0x10000) == 0) {
    sub_251F36CD0();
  }
  uint64_t result = sub_251F36D00();
  uint64_t v11 = -1 << *(unsigned char *)(v10 + 32);
  a3 = result & ~v11;
  if ((*(void *)(v10 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v12 = ~v11;
    do
    {
      uint64_t v13 = *(void *)(v10 + 48) + 16 * a3;
      if (*(void *)v13 == v7)
      {
        if (*(unsigned char *)(v13 + 10))
        {
          if ((a2 & 0x10000) != 0) {
            goto LABEL_18;
          }
        }
        else if ((a2 & 0x10000) == 0 && *(unsigned __int16 *)(v13 + 8) == (unsigned __int16)a2)
        {
LABEL_18:
          uint64_t result = sub_251F36B90();
          __break(1u);
          break;
        }
      }
      a3 = (a3 + 1) & v12;
    }
    while (((*(void *)(v10 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) != 0);
  }
LABEL_19:
  uint64_t v14 = *v4;
  *(void *)(*v4 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v15 = *(void *)(v14 + 48) + 16 * a3;
  *(void *)uint64_t v15 = v7;
  *(_WORD *)(v15 + 8) = a2;
  *(unsigned char *)(v15 + 10) = BYTE2(a2) & 1;
  uint64_t v16 = *(void *)(v14 + 16);
  BOOL v17 = __OFADD__(v16, 1);
  uint64_t v18 = v16 + 1;
  if (v17) {
    __break(1u);
  }
  else {
    *(void *)(v14 + 16) = v18;
  }
  return result;
}

uint64_t sub_251A714E0(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for Action();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = *(void *)(*v4 + 16);
  unint64_t v13 = *(void *)(*v4 + 24);
  if (v13 > v12 && (a3 & 1) != 0)
  {
LABEL_13:
    uint64_t v14 = v9;
    goto LABEL_14;
  }
  if (a3)
  {
    sub_251A690F8(v12 + 1, (uint64_t (*)(void))type metadata accessor for Action, &qword_269B9D328, (uint64_t (*)(void))type metadata accessor for Action, (void (*)(char *))Action.hash(into:));
    goto LABEL_8;
  }
  if (v13 <= v12)
  {
    sub_251A7A710();
LABEL_8:
    uint64_t v15 = *v4;
    sub_251F36CA0();
    Action.hash(into:)(v27);
    uint64_t v16 = sub_251F36D00();
    uint64_t v17 = -1 << *(unsigned char *)(v15 + 32);
    a2 = v16 & ~v17;
    if ((*(void *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v26 = v8;
      uint64_t v18 = ~v17;
      uint64_t v14 = v9;
      uint64_t v19 = *(void *)(v9 + 72);
      while (1)
      {
        sub_251A81FF0(*(void *)(v15 + 48) + v19 * a2, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for Action);
        char v20 = _s13HomeDataModel6ActionO2eeoiySbAC_ACtFZ_0((uint64_t)v11, a1);
        sub_251A820C0((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for Action);
        if (v20) {
          goto LABEL_17;
        }
        a2 = (a2 + 1) & v18;
        if (((*(void *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          goto LABEL_14;
        }
      }
    }
    goto LABEL_13;
  }
  uint64_t v14 = v9;
  sub_251A76388((uint64_t (*)(void))type metadata accessor for Action, &qword_269B9D328, (uint64_t (*)(void))type metadata accessor for Action, (uint64_t (*)(void))type metadata accessor for Action);
LABEL_14:
  uint64_t v21 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_251A82058(a1, *(void *)(v21 + 48) + *(void *)(v14 + 72) * a2, (uint64_t (*)(void))type metadata accessor for Action);
  uint64_t v23 = *(void *)(v21 + 16);
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (!v24)
  {
    *(void *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_17:
  uint64_t result = sub_251F36B90();
  __break(1u);
  return result;
}

uint64_t sub_251A717B8(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for Event();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = *(void *)(*v4 + 16);
  unint64_t v13 = *(void *)(*v4 + 24);
  if (v13 > v12 && (a3 & 1) != 0)
  {
LABEL_13:
    uint64_t v14 = v9;
    goto LABEL_14;
  }
  if (a3)
  {
    sub_251A6BAB4();
    goto LABEL_8;
  }
  if (v13 <= v12)
  {
    sub_251A7AA74();
LABEL_8:
    uint64_t v15 = *v4;
    sub_251F36CA0();
    Event.hash(into:)(v27);
    uint64_t v16 = sub_251F36D00();
    uint64_t v17 = -1 << *(unsigned char *)(v15 + 32);
    a2 = v16 & ~v17;
    if ((*(void *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v26 = v8;
      uint64_t v18 = ~v17;
      uint64_t v14 = v9;
      uint64_t v19 = *(void *)(v9 + 72);
      while (1)
      {
        sub_251A81FF0(*(void *)(v15 + 48) + v19 * a2, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for Event);
        char v20 = _s13HomeDataModel5EventO2eeoiySbAC_ACtFZ_0((uint64_t)v11, a1);
        sub_251A820C0((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for Event);
        if (v20) {
          goto LABEL_17;
        }
        a2 = (a2 + 1) & v18;
        if (((*(void *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          goto LABEL_14;
        }
      }
    }
    goto LABEL_13;
  }
  uint64_t v14 = v9;
  sub_251A76388((uint64_t (*)(void))type metadata accessor for Event, &qword_269B9D330, (uint64_t (*)(void))type metadata accessor for Event, (uint64_t (*)(void))type metadata accessor for Event);
LABEL_14:
  uint64_t v21 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_251A82058(a1, *(void *)(v21 + 48) + *(void *)(v14 + 72) * a2, (uint64_t (*)(void))type metadata accessor for Event);
  uint64_t v23 = *(void *)(v21 + 16);
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (!v24)
  {
    *(void *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_17:
  uint64_t result = sub_251F36B90();
  __break(1u);
  return result;
}

uint64_t sub_251A71A4C(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for StaticService();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = *(void *)(*v4 + 16);
  unint64_t v13 = *(void *)(*v4 + 24);
  if (v13 > v12 && (a3 & 1) != 0)
  {
LABEL_13:
    uint64_t v14 = v9;
    goto LABEL_14;
  }
  if (a3)
  {
    sub_251A690F8(v12 + 1, (uint64_t (*)(void))type metadata accessor for StaticService, &qword_269B9D268, (uint64_t (*)(void))type metadata accessor for StaticService, (void (*)(char *))StaticService.hash(into:));
    goto LABEL_8;
  }
  if (v13 <= v12)
  {
    sub_251A7B140();
LABEL_8:
    uint64_t v15 = *v4;
    sub_251F36CA0();
    StaticService.hash(into:)(v27);
    uint64_t v16 = sub_251F36D00();
    uint64_t v17 = -1 << *(unsigned char *)(v15 + 32);
    a2 = v16 & ~v17;
    if ((*(void *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v26 = v8;
      uint64_t v18 = ~v17;
      uint64_t v14 = v9;
      uint64_t v19 = *(void *)(v9 + 72);
      while (1)
      {
        sub_251A81FF0(*(void *)(v15 + 48) + v19 * a2, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticService);
        char v20 = _s13HomeDataModel13StaticServiceV2eeoiySbAC_ACtFZ_0((uint64_t)v11, a1);
        sub_251A820C0((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticService);
        if (v20) {
          goto LABEL_17;
        }
        a2 = (a2 + 1) & v18;
        if (((*(void *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          goto LABEL_14;
        }
      }
    }
    goto LABEL_13;
  }
  uint64_t v14 = v9;
  sub_251A76388((uint64_t (*)(void))type metadata accessor for StaticService, &qword_269B9D268, (uint64_t (*)(void))type metadata accessor for StaticService, (uint64_t (*)(void))type metadata accessor for StaticService);
LABEL_14:
  uint64_t v21 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_251A82058(a1, *(void *)(v21 + 48) + *(void *)(v14 + 72) * a2, (uint64_t (*)(void))type metadata accessor for StaticService);
  uint64_t v23 = *(void *)(v21 + 16);
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (!v24)
  {
    *(void *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_17:
  uint64_t result = sub_251F36B90();
  __break(1u);
  return result;
}

uint64_t sub_251A71D24(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for StaticAccessory(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = *(void *)(*v4 + 16);
  unint64_t v13 = *(void *)(*v4 + 24);
  if (v13 > v12 && (a3 & 1) != 0)
  {
LABEL_13:
    uint64_t v14 = v9;
    goto LABEL_14;
  }
  if (a3)
  {
    sub_251A690F8(v12 + 1, type metadata accessor for StaticAccessory, &qword_269B9D2F8, type metadata accessor for StaticAccessory, (void (*)(char *))StaticAccessory.hash(into:));
    goto LABEL_8;
  }
  if (v13 <= v12)
  {
    sub_251A7B4A4();
LABEL_8:
    uint64_t v15 = *v4;
    sub_251F36CA0();
    StaticAccessory.hash(into:)(v27);
    uint64_t v16 = sub_251F36D00();
    uint64_t v17 = -1 << *(unsigned char *)(v15 + 32);
    a2 = v16 & ~v17;
    if ((*(void *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v26 = v8;
      uint64_t v18 = ~v17;
      uint64_t v14 = v9;
      uint64_t v19 = *(void *)(v9 + 72);
      while (1)
      {
        sub_251A81FF0(*(void *)(v15 + 48) + v19 * a2, (uint64_t)v11, type metadata accessor for StaticAccessory);
        char v20 = _s13HomeDataModel15StaticAccessoryV2eeoiySbAC_ACtFZ_0((uint64_t)v11, a1);
        sub_251A820C0((uint64_t)v11, type metadata accessor for StaticAccessory);
        if (v20) {
          goto LABEL_17;
        }
        a2 = (a2 + 1) & v18;
        if (((*(void *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          goto LABEL_14;
        }
      }
    }
    goto LABEL_13;
  }
  uint64_t v14 = v9;
  sub_251A76388(type metadata accessor for StaticAccessory, &qword_269B9D2F8, type metadata accessor for StaticAccessory, type metadata accessor for StaticAccessory);
LABEL_14:
  uint64_t v21 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_251A82058(a1, *(void *)(v21 + 48) + *(void *)(v14 + 72) * a2, type metadata accessor for StaticAccessory);
  uint64_t v23 = *(void *)(v21 + 16);
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (!v24)
  {
    *(void *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_17:
  uint64_t result = sub_251F36B90();
  __break(1u);
  return result;
}

uint64_t sub_251A71FFC(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v7 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
  uint64_t v26 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  uint64_t v25 = v3;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_15;
  }
  if (a3)
  {
    sub_251A6C1C0();
  }
  else
  {
    if (v11 > v10)
    {
      sub_251A76388((uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet, &qword_269B9D210, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
      goto LABEL_15;
    }
    sub_251A7B808();
  }
  uint64_t v12 = *v3;
  sub_251F36CA0();
  StaticAccessory.hash(into:)(v27);
  uint64_t v13 = a1 + *(int *)(v7 + 20);
  StaticService.hash(into:)(v27);
  uint64_t v14 = a1 + *(int *)(v7 + 24);
  StaticCharacteristic.hash(into:)((uint64_t)v27);
  uint64_t v15 = sub_251F36D00();
  uint64_t v16 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v15 & ~v16;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v17 = ~v16;
    uint64_t v18 = *(void *)(v26 + 72);
    while (1)
    {
      sub_251A81FF0(*(void *)(v12 + 48) + v18 * a2, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
      if ((_s13HomeDataModel15StaticAccessoryV2eeoiySbAC_ACtFZ_0((uint64_t)v9, a1) & 1) != 0
        && (_s13HomeDataModel13StaticServiceV2eeoiySbAC_ACtFZ_0((uint64_t)&v9[*(int *)(v7 + 20)], v13) & 1) != 0
        && _s13HomeDataModel20StaticCharacteristicV2eeoiySbAC_ACtFZ_0((uint64_t)&v9[*(int *)(v7 + 24)], v14))
      {
        break;
      }
      sub_251A820C0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
      a2 = (a2 + 1) & v17;
      if (((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
        goto LABEL_15;
      }
    }
    sub_251A820C0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
    sub_251F36B90();
    __break(1u);
  }
LABEL_15:
  uint64_t v19 = *v25;
  *(void *)(*v25 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_251A82058(a1, *(void *)(v19 + 48) + *(void *)(v26 + 72) * a2, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
  uint64_t v21 = *(void *)(v19 + 16);
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22) {
    __break(1u);
  }
  else {
    *(void *)(v19 + 16) = v23;
  }
  return result;
}

uint64_t sub_251A722E8(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v5 = v3;
  uint64_t v9 = (int *)type metadata accessor for StaticMediaSystemComponent();
  uint64_t v10 = *((void *)v9 - 1);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v13 = *((void *)*v5 + 2);
  unint64_t v14 = *((void *)*v5 + 3);
  uint64_t v76 = v10;
  if (v14 <= v13 || (a3 & 1) == 0)
  {
    uint64_t v15 = v13 + 1;
    if (a3)
    {
      sub_251A6D760(v15, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent, &qword_269B9D230, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent, (uint64_t (*)(char *, uint64_t))sub_251A6EDFC);
    }
    else
    {
      if (v14 > v13)
      {
        sub_251A76388((uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent, &qword_269B9D230, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent);
        goto LABEL_25;
      }
      sub_251A7DA60(v15, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent, &qword_269B9D230, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent, (uint64_t (*)(char *, uint64_t))sub_251A6EDFC);
    }
    unint64_t v4 = *v5;
    sub_251F36CA0();
    uint64_t v16 = sub_251F34DA0();
    uint64_t v75 = v16;
    sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
    sub_251F35610();
    uint64_t v73 = a1 + v9[5];
    StaticMediaProfile.hash(into:)(v78);
    uint64_t v77 = v9[6];
    sub_251F36CB0();
    uint64_t v74 = v9[7];
    sub_251A54708(v78, *(void *)(a1 + v74));
    uint64_t v17 = a1 + v9[8];
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    uint64_t v71 = &v54;
    MEMORY[0x270FA5388](v18 - 8);
    uint64_t v72 = v19;
    char v20 = (char *)&v54 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v67 = v17;
    sub_251A1E280(v17, (uint64_t)v20);
    uint64_t v21 = *(void *)(v16 - 8);
    BOOL v22 = *(uint64_t (**)(char **, uint64_t, uint64_t))(v21 + 48);
    uint64_t v66 = v21 + 48;
    uint64_t v65 = v22;
    uint64_t v23 = v22((char **)v20, 1, v16);
    char v70 = v5;
    uint64_t v64 = v21;
    if (v23 == 1)
    {
      sub_251F36CC0();
    }
    else
    {
      MEMORY[0x270FA5388](v23);
      uint64_t v25 = (char *)&v54 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v25, v20, v75);
      sub_251F36CC0();
      sub_251F35610();
      (*(void (**)(char *, uint64_t))(v21 + 8))(v25, v75);
      unint64_t v5 = v70;
    }
    uint64_t v26 = sub_251F36D00();
    uint64_t v27 = -1 << v4[32];
    a2 = v26 & ~v27;
    uint64_t v28 = v4 + 56;
    if ((*(void *)&v4[((a2 >> 3) & 0xFFFFFFFFFFFFFF8) + 56] >> a2))
    {
      uint64_t v29 = ~v27;
      uint64_t v30 = *(void *)(v10 + 72);
      uint64_t v57 = v64 + 32;
      int v60 = (void (**)(unint64_t, uint64_t))(v64 + 8);
      uint64_t v31 = v73;
      int64_t v63 = v9;
      uint64_t v62 = v4;
      do
      {
        sub_251A81FF0(*((void *)v4 + 6) + v30 * a2, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent);
        if ((sub_251F34D70() & 1) != 0
          && (_s13HomeDataModel18StaticMediaProfileV2eeoiySbAC_ACtFZ_0((uint64_t)&v12[v9[5]], v31) & 1) != 0
          && *(void *)&v12[v9[6]] == *(void *)(a1 + v77))
        {
          uint64_t v36 = sub_251B04848(*(void *)&v12[v9[7]], *(void *)(a1 + v74));
          if (v36)
          {
            uint64_t v69 = &v54;
            uint64_t v37 = (uint64_t)&v12[v9[8]];
            MEMORY[0x270FA5388](v36);
            unint64_t v61 = (v38 + 15) & 0xFFFFFFFFFFFFFFF0;
            BOOL v39 = (char *)&v54 - v61;
            sub_251A1E280(v67, (uint64_t)&v54 - v61);
            uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E6B8);
            uint64_t v68 = &v54;
            uint64_t v41 = MEMORY[0x270FA5388](v40 - 8);
            unint64_t v4 = (char *)&v54 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
            uint64_t v43 = (uint64_t)&v4[*(int *)(v41 + 56)];
            sub_251A1E280(v37, (uint64_t)v4);
            uint64_t v71 = (char **)v43;
            sub_251A1E280((uint64_t)v39, v43);
            uint64_t v44 = v65;
            uint64_t v45 = v65((char **)v4, 1, v75);
            if (v45 == 1)
            {
              sub_251A1B064((uint64_t)v39, &qword_26B21FF90);
              int v46 = v44(v71, 1, v75);
              uint64_t v9 = v63;
              if (v46 == 1) {
                goto LABEL_28;
              }
            }
            else
            {
              uint64_t v59 = v39;
              uint64_t v58 = &v54;
              MEMORY[0x270FA5388](v45);
              unint64_t v61 = (unint64_t)&v54 - v61;
              sub_251A1E280((uint64_t)v4, v61);
              uint64_t v47 = v75;
              uint64_t v48 = v44(v71, 1, v75);
              if (v48 != 1)
              {
                uint64_t v56 = &v54;
                uint64_t v32 = v64;
                MEMORY[0x270FA5388](v48);
                unint64_t v34 = (char *)&v54 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
                uint64_t v35 = *(void (**)(char *, char **, uint64_t))(v32 + 32);
                unint64_t v54 = v34;
                v35(v34, v71, v47);
                sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
                LODWORD(v71) = sub_251F35650();
                uint64_t v55 = *(void (**)(char *, uint64_t))(v32 + 8);
                v55(v54, v47);
                sub_251A1B064((uint64_t)v59, &qword_26B21FF90);
                v55((char *)v61, v47);
                sub_251A1B064((uint64_t)v4, &qword_26B21FF90);
                unint64_t v5 = v70;
                uint64_t v31 = v73;
                uint64_t v9 = v63;
                unint64_t v4 = v62;
                if (v71) {
                  goto LABEL_29;
                }
                goto LABEL_14;
              }
              sub_251A1B064((uint64_t)v59, &qword_26B21FF90);
              (*v60)(v61, v47);
              uint64_t v9 = v63;
            }
            sub_251A1B064((uint64_t)v4, &qword_26B21E6B8);
            unint64_t v5 = v70;
            uint64_t v31 = v73;
            unint64_t v4 = v62;
          }
        }
LABEL_14:
        sub_251A820C0((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent);
        a2 = (a2 + 1) & v29;
      }
      while (((*(void *)&v28[(a2 >> 3) & 0xFFFFFFFFFFFFFF8] >> a2) & 1) != 0);
    }
  }
LABEL_25:
  uint64_t v49 = *v5;
  *(void *)&(*v5)[8 * (a2 >> 6) + 56] |= 1 << a2;
  uint64_t result = sub_251A82058(a1, *((void *)v49 + 6) + *(void *)(v76 + 72) * a2, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent);
  uint64_t v51 = *((void *)v49 + 2);
  BOOL v52 = __OFADD__(v51, 1);
  uint64_t v53 = v51 + 1;
  if (v52)
  {
    __break(1u);
LABEL_28:
    sub_251A1B064((uint64_t)v4, &qword_26B21FF90);
LABEL_29:
    sub_251A820C0((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent);
    uint64_t result = sub_251F36B90();
    __break(1u);
  }
  else
  {
    *((void *)v49 + 2) = v53;
  }
  return result;
}

uint64_t sub_251A72C00(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v47 = a1;
  uint64_t v46 = type metadata accessor for StaticZone();
  uint64_t v6 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v9 = *(void *)(*v3 + 16);
  unint64_t v10 = *(void *)(*v3 + 24);
  BOOL v39 = v3;
  uint64_t v38 = v6;
  if (v10 > v9 && (a3 & 1) != 0) {
    goto LABEL_24;
  }
  if (a3)
  {
    sub_251A6C50C();
  }
  else
  {
    if (v10 > v9)
    {
      sub_251A76388((uint64_t (*)(void))type metadata accessor for StaticZone, &qword_269B9D280, (uint64_t (*)(void))type metadata accessor for StaticZone, (uint64_t (*)(void))type metadata accessor for StaticZone);
      goto LABEL_24;
    }
    sub_251A7BB24();
  }
  uint64_t v11 = *v3;
  sub_251F36CA0();
  uint64_t v12 = sub_251F34DA0();
  sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
  uint64_t v13 = v47;
  sub_251F35610();
  uint64_t v14 = v46;
  uint64_t v41 = (void *)(v13 + *(int *)(v46 + 20));
  sub_251F357B0();
  uint64_t v40 = *(int *)(v14 + 24);
  sub_251A41A94((uint64_t)v57, *(void *)(v13 + v40));
  uint64_t v15 = sub_251F36D00();
  uint64_t v16 = -1 << *(unsigned char *)(v11 + 32);
  a2 = v15 & ~v16;
  uint64_t v45 = v11;
  uint64_t v44 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v43 = ~v16;
    uint64_t v42 = *(void *)(v6 + 72);
    uint64_t v51 = v12;
    uint64_t v37 = (uint64_t *)(v12 - 8);
    uint64_t v48 = v8;
    uint64_t v17 = v12;
    do
    {
      uint64_t v18 = *(void *)(v45 + 48);
      unint64_t v49 = a2;
      sub_251A81FF0(v18 + v42 * a2, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticZone);
      if (sub_251F34D70())
      {
        uint64_t v19 = (uint64_t *)&v48[*(int *)(v46 + 20)];
        uint64_t v20 = *v19;
        BOOL v21 = *v19 == *v41 && v19[1] == v41[1];
        if (v21 || (uint64_t v20 = sub_251F36B10(), (v20 & 1) != 0))
        {
          uint64_t v22 = *(void *)&v48[*(int *)(v46 + 24)];
          uint64_t v54 = *(void *)(v47 + v40);
          uint64_t v55 = v22;
          uint64_t v23 = *(void *)(v22 + 16);
          if (v23 == *(void *)(v54 + 16))
          {
            if (!v23 || (uint64_t v24 = *v37, v55 == v54))
            {
LABEL_23:
              sub_251A820C0((uint64_t)v48, (uint64_t (*)(void))type metadata accessor for StaticZone);
              sub_251F36B90();
              __break(1u);
              break;
            }
            unint64_t v25 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
            BOOL v52 = *(void (**)(char *, unint64_t, uint64_t))(v24 + 16);
            uint64_t v53 = v24 + 16;
            uint64_t v26 = *(void *)(v24 + 64);
            uint64_t v50 = *(void *)(v24 + 72);
            uint64_t v27 = (uint64_t (**)(char *, uint64_t))(v24 + 8);
            while (1)
            {
              uint64_t v56 = &v37;
              MEMORY[0x270FA5388](v20);
              uint64_t v28 = (char *)&v37 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
              uint64_t v29 = v52;
              uint64_t v30 = ((uint64_t (*)(char *, unint64_t, uint64_t))v52)(v28, v55 + v25, v17);
              MEMORY[0x270FA5388](v30);
              v29(v28, v54 + v25, v17);
              sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
              a2 = sub_251F35650();
              uint64_t v31 = *v27;
              (*v27)(v28, v17);
              uint64_t v20 = v31(v28, v17);
              if ((a2 & 1) == 0) {
                break;
              }
              v25 += v50;
              if (!--v23) {
                goto LABEL_23;
              }
            }
          }
        }
      }
      uint64_t v8 = v48;
      sub_251A820C0((uint64_t)v48, (uint64_t (*)(void))type metadata accessor for StaticZone);
      a2 = (v49 + 1) & v43;
    }
    while (((*(void *)(v44 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_24:
  uint64_t v32 = *v39;
  *(void *)(*v39 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_251A82058(v47, *(void *)(v32 + 48) + *(void *)(v38 + 72) * a2, (uint64_t (*)(void))type metadata accessor for StaticZone);
  uint64_t v34 = *(void *)(v32 + 16);
  BOOL v35 = __OFADD__(v34, 1);
  uint64_t v36 = v34 + 1;
  if (v35) {
    __break(1u);
  }
  else {
    *(void *)(v32 + 16) = v36;
  }
  return result;
}

uint64_t sub_251A7313C(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v4 = v3;
  uint64_t v8 = (int *)type metadata accessor for StaticActionSet();
  uint64_t v9 = *((void *)v8 - 1);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v57[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = *(void *)(*v4 + 16);
  unint64_t v13 = *(void *)(*v4 + 24);
  if (v13 > v12 && (a3 & 1) != 0) {
    goto LABEL_31;
  }
  if (a3)
  {
    sub_251A690F8(v12 + 1, (uint64_t (*)(void))type metadata accessor for StaticActionSet, &qword_269B9D2C8, (uint64_t (*)(void))type metadata accessor for StaticActionSet, (void (*)(char *))StaticActionSet.hash(into:));
  }
  else
  {
    if (v13 > v12)
    {
      sub_251A76388((uint64_t (*)(void))type metadata accessor for StaticActionSet, &qword_269B9D2C8, (uint64_t (*)(void))type metadata accessor for StaticActionSet, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
      goto LABEL_31;
    }
    sub_251A7C1A8();
  }
  uint64_t v14 = *v4;
  sub_251F36CA0();
  StaticActionSet.hash(into:)(&v68);
  uint64_t v15 = sub_251F36D00();
  uint64_t v16 = -1 << *(unsigned char *)(v14 + 32);
  a2 = v15 & ~v16;
  if ((*(void *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v17 = ~v16;
    uint64_t v18 = *(void *)(v9 + 72);
    do
    {
      sub_251A81FF0(*(void *)(v14 + 48) + v18 * a2, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
      if ((sub_251F34D70() & 1) == 0) {
        goto LABEL_10;
      }
      uint64_t v19 = v8[5];
      uint64_t v20 = *(void *)&v11[v19];
      uint64_t v21 = *(void *)&v11[v19 + 8];
      uint64_t v22 = (void *)(a1 + v19);
      BOOL v23 = v20 == *v22 && v21 == v22[1];
      if (!v23 && (sub_251F36B10() & 1) == 0) {
        goto LABEL_10;
      }
      uint64_t v24 = v8[6];
      int v25 = v11[v24];
      int v26 = *(unsigned __int8 *)(a1 + v24);
      if (v25 == 7)
      {
        if (v26 != 7) {
          goto LABEL_10;
        }
      }
      else if (v26 == 7 || (sub_251DB3434(v25, v26) & 1) == 0)
      {
        goto LABEL_10;
      }
      if (sub_251F34D70())
      {
        uint64_t v27 = &v11[v8[8]];
        uint64_t v28 = *(void *)v27;
        uint64_t v29 = *((void *)v27 + 1);
        char v30 = v27[16];
        uint64_t v31 = *((void *)v27 + 3);
        uint64_t v32 = *((void *)v27 + 4);
        char v33 = v27[40];
        uint64_t v34 = *((void *)v27 + 6);
        uint64_t v35 = *((void *)v27 + 7);
        char v36 = v27[64];
        uint64_t v37 = *((void *)v27 + 9);
        uint64_t v38 = *((void *)v27 + 10);
        LOBYTE(v27) = v27[88];
        *(void *)&long long v68 = v28;
        *((void *)&v68 + 1) = v29;
        char v69 = v30;
        uint64_t v70 = v31;
        uint64_t v71 = v32;
        char v72 = v33;
        uint64_t v73 = v34;
        uint64_t v74 = v35;
        char v75 = v36;
        uint64_t v76 = v37;
        uint64_t v77 = v38;
        char v78 = (char)v27;
        uint64_t v39 = a1 + v8[8];
        uint64_t v40 = *(void *)v39;
        uint64_t v41 = *(void *)(v39 + 8);
        char v42 = *(unsigned char *)(v39 + 16);
        uint64_t v43 = *(void *)(v39 + 24);
        uint64_t v44 = *(void *)(v39 + 32);
        char v45 = *(unsigned char *)(v39 + 40);
        uint64_t v46 = *(void *)(v39 + 48);
        uint64_t v47 = *(void *)(v39 + 56);
        char v48 = *(unsigned char *)(v39 + 64);
        uint64_t v49 = *(void *)(v39 + 72);
        uint64_t v50 = *(void *)(v39 + 80);
        LOBYTE(v39) = *(unsigned char *)(v39 + 88);
        v57[0] = v40;
        v57[1] = v41;
        char v58 = v42;
        uint64_t v59 = v43;
        uint64_t v60 = v44;
        char v61 = v45;
        uint64_t v62 = v46;
        uint64_t v63 = v47;
        char v64 = v48;
        uint64_t v65 = v49;
        uint64_t v66 = v50;
        char v67 = v39;
        if (_s13HomeDataModel4IconV2eeoiySbAC_ACtFZ_0((uint64_t)&v68, (uint64_t)v57)
          && (sub_251F352E0() & 1) != 0
          && (sub_251B04848(*(void *)&v11[v8[10]], *(void *)(a1 + v8[10])) & 1) != 0
          && v11[v8[11]] == *(unsigned char *)(a1 + v8[11])
          && (sub_251B0657C(*(void *)&v11[v8[12]], *(void *)(a1 + v8[12])) & 1) != 0
          && v11[v8[13]] == *(unsigned char *)(a1 + v8[13])
          && v11[v8[14]] == *(unsigned char *)(a1 + v8[14]))
        {
          sub_251A820C0((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
          sub_251F36B90();
          __break(1u);
          break;
        }
      }
LABEL_10:
      sub_251A820C0((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
      a2 = (a2 + 1) & v17;
    }
    while (((*(void *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_31:
  uint64_t v51 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_251A82058(a1, *(void *)(v51 + 48) + *(void *)(v9 + 72) * a2, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
  uint64_t v53 = *(void *)(v51 + 16);
  BOOL v54 = __OFADD__(v53, 1);
  uint64_t v55 = v53 + 1;
  if (v54) {
    __break(1u);
  }
  else {
    *(void *)(v51 + 16) = v55;
  }
  return result;
}

uint64_t sub_251A735B4(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for StaticCameraProfile();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = *(void *)(*v4 + 16);
  unint64_t v13 = *(void *)(*v4 + 24);
  if (v13 > v12 && (a3 & 1) != 0)
  {
LABEL_13:
    uint64_t v14 = v9;
    goto LABEL_14;
  }
  if (a3)
  {
    sub_251A690F8(v12 + 1, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile, &qword_269B9D2C0, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile, (void (*)(char *))StaticCameraProfile.hash(into:));
    goto LABEL_8;
  }
  if (v13 <= v12)
  {
    sub_251A7C50C();
LABEL_8:
    uint64_t v15 = *v4;
    sub_251F36CA0();
    StaticCameraProfile.hash(into:)(v27);
    uint64_t v16 = sub_251F36D00();
    uint64_t v17 = -1 << *(unsigned char *)(v15 + 32);
    a2 = v16 & ~v17;
    if ((*(void *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v26 = v8;
      uint64_t v18 = ~v17;
      uint64_t v14 = v9;
      uint64_t v19 = *(void *)(v9 + 72);
      while (1)
      {
        sub_251A81FF0(*(void *)(v15 + 48) + v19 * a2, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
        char v20 = _s13HomeDataModel19StaticCameraProfileV2eeoiySbAC_ACtFZ_0((uint64_t)v11, a1);
        sub_251A820C0((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
        if (v20) {
          goto LABEL_17;
        }
        a2 = (a2 + 1) & v18;
        if (((*(void *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          goto LABEL_14;
        }
      }
    }
    goto LABEL_13;
  }
  uint64_t v14 = v9;
  sub_251A76388((uint64_t (*)(void))type metadata accessor for StaticCameraProfile, &qword_269B9D2C0, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
LABEL_14:
  uint64_t v21 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_251A82058(a1, *(void *)(v21 + 48) + *(void *)(v14 + 72) * a2, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
  uint64_t v23 = *(void *)(v21 + 16);
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (!v24)
  {
    *(void *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_17:
  uint64_t result = sub_251F36B90();
  __break(1u);
  return result;
}

uint64_t sub_251A7388C(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for StaticRoom(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = *(void *)(*v4 + 16);
  unint64_t v13 = *(void *)(*v4 + 24);
  if (v13 > v12 && (a3 & 1) != 0)
  {
LABEL_13:
    uint64_t v14 = v9;
    goto LABEL_14;
  }
  if (a3)
  {
    sub_251A690F8(v12 + 1, type metadata accessor for StaticRoom, &qword_269B9D290, type metadata accessor for StaticRoom, (void (*)(char *))StaticRoom.hash(into:));
    goto LABEL_8;
  }
  if (v13 <= v12)
  {
    sub_251A7C870();
LABEL_8:
    uint64_t v15 = *v4;
    sub_251F36CA0();
    StaticRoom.hash(into:)(v27);
    uint64_t v16 = sub_251F36D00();
    uint64_t v17 = -1 << *(unsigned char *)(v15 + 32);
    a2 = v16 & ~v17;
    if ((*(void *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v26 = v8;
      uint64_t v18 = ~v17;
      uint64_t v14 = v9;
      uint64_t v19 = *(void *)(v9 + 72);
      while (1)
      {
        sub_251A81FF0(*(void *)(v15 + 48) + v19 * a2, (uint64_t)v11, type metadata accessor for StaticRoom);
        char v20 = _s13HomeDataModel10StaticRoomV2eeoiySbAC_ACtFZ_0((uint64_t)v11, a1);
        sub_251A820C0((uint64_t)v11, type metadata accessor for StaticRoom);
        if (v20) {
          goto LABEL_17;
        }
        a2 = (a2 + 1) & v18;
        if (((*(void *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          goto LABEL_14;
        }
      }
    }
    goto LABEL_13;
  }
  uint64_t v14 = v9;
  sub_251A76388(type metadata accessor for StaticRoom, &qword_269B9D290, type metadata accessor for StaticRoom, type metadata accessor for StaticRoom);
LABEL_14:
  uint64_t v21 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_251A82058(a1, *(void *)(v21 + 48) + *(void *)(v14 + 72) * a2, type metadata accessor for StaticRoom);
  uint64_t v23 = *(void *)(v21 + 16);
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (!v24)
  {
    *(void *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_17:
  uint64_t result = sub_251F36B90();
  __break(1u);
  return result;
}

uint64_t sub_251A73B64(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v4 = v3;
  uint64_t v8 = (int *)type metadata accessor for StaticServiceGroup();
  uint64_t v9 = *((void *)v8 - 1);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = *(void *)(*v4 + 16);
  unint64_t v13 = *(void *)(*v4 + 24);
  if (v13 > v12 && (a3 & 1) != 0) {
    goto LABEL_29;
  }
  if (a3)
  {
    sub_251A6CBD0();
  }
  else
  {
    if (v13 > v12)
    {
      sub_251A76388((uint64_t (*)(void))type metadata accessor for StaticServiceGroup, &qword_269B9D2A8, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
      goto LABEL_29;
    }
    sub_251A7CBD4();
  }
  uint64_t v14 = *v4;
  sub_251F36CA0();
  StaticServiceGroup.hash(into:)(v35);
  uint64_t v15 = sub_251F36D00();
  uint64_t v16 = -1 << *(unsigned char *)(v14 + 32);
  a2 = v15 & ~v16;
  if ((*(void *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v17 = ~v16;
    uint64_t v18 = *(void *)(v9 + 72);
    do
    {
      sub_251A81FF0(*(void *)(v14 + 48) + v18 * a2, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
      if ((sub_251F34D70() & 1) == 0) {
        goto LABEL_11;
      }
      uint64_t v19 = v8[5];
      uint64_t v20 = *(void *)&v11[v19];
      uint64_t v21 = *(void *)&v11[v19 + 8];
      uint64_t v22 = (void *)(a1 + v19);
      BOOL v23 = v20 == *v22 && v21 == v22[1];
      if (!v23 && (sub_251F36B10() & 1) == 0
        || v11[v8[6]] != *(unsigned char *)(a1 + v8[6])
        || v11[v8[7]] != *(unsigned char *)(a1 + v8[7])
        || (sub_251B04848(*(void *)&v11[v8[8]], *(void *)(a1 + v8[8])) & 1) == 0)
      {
        goto LABEL_11;
      }
      uint64_t v24 = v8[9];
      uint64_t v25 = &v11[v24];
      uint64_t v26 = *(void *)&v11[v24 + 8];
      uint64_t v27 = (void *)(a1 + v24);
      uint64_t v28 = v27[1];
      if (v26)
      {
        if (!v28 || (*(void *)v25 != *v27 || v26 != v28) && (sub_251F36B10() & 1) == 0) {
          goto LABEL_11;
        }
      }
      else if (v28)
      {
        goto LABEL_11;
      }
      if (v11[v8[10]] == *(unsigned char *)(a1 + v8[10])
        && (sub_251AF99A8(*(void *)&v11[v8[11]], *(void *)(a1 + v8[11])) & 1) != 0)
      {
        sub_251A820C0((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
        sub_251F36B90();
        __break(1u);
        break;
      }
LABEL_11:
      sub_251A820C0((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
      a2 = (a2 + 1) & v17;
    }
    while (((*(void *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_29:
  uint64_t v29 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_251A82058(a1, *(void *)(v29 + 48) + *(void *)(v9 + 72) * a2, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
  uint64_t v31 = *(void *)(v29 + 16);
  BOOL v32 = __OFADD__(v31, 1);
  uint64_t v33 = v31 + 1;
  if (v32) {
    __break(1u);
  }
  else {
    *(void *)(v29 + 16) = v33;
  }
  return result;
}

uint64_t sub_251A73ED4(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v7 = (int *)type metadata accessor for StaticUser();
  uint64_t v29 = *((void *)v7 - 1);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  uint64_t v28 = v3;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_21;
  }
  if (a3)
  {
    sub_251A6D094();
  }
  else
  {
    if (v11 > v10)
    {
      sub_251A76388((uint64_t (*)(void))type metadata accessor for StaticUser, &qword_269B9D2A0, (uint64_t (*)(void))type metadata accessor for StaticUser, (uint64_t (*)(void))type metadata accessor for StaticUser);
      goto LABEL_21;
    }
    sub_251A7D098();
  }
  uint64_t v12 = *v3;
  sub_251F36CA0();
  sub_251F34DA0();
  sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
  sub_251F35610();
  unint64_t v13 = (void *)(a1 + v7[5]);
  sub_251F357B0();
  sub_251F35610();
  uint64_t v27 = v7[7];
  sub_251F36CB0();
  uint64_t v26 = v7[8];
  sub_251F36CB0();
  uint64_t v14 = sub_251F36D00();
  uint64_t v15 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v14 & ~v15;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v15;
    uint64_t v17 = *(void *)(v29 + 72);
    while (1)
    {
      sub_251A81FF0(*(void *)(v12 + 48) + v17 * a2, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticUser);
      if (sub_251F34D70())
      {
        uint64_t v18 = &v9[v7[5]];
        BOOL v19 = *(void *)v18 == *v13 && *((void *)v18 + 1) == v13[1];
        if (v19 || (sub_251F36B10())
          && (sub_251F34D70() & 1) != 0
          && v9[v7[7]] == *(unsigned char *)(a1 + v27)
          && v9[v7[8]] == *(unsigned char *)(a1 + v26))
        {
          break;
        }
      }
      sub_251A820C0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticUser);
      a2 = (a2 + 1) & v16;
      if (((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
        goto LABEL_21;
      }
    }
    sub_251A820C0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticUser);
    sub_251F36B90();
    __break(1u);
  }
LABEL_21:
  uint64_t v20 = *v28;
  *(void *)(*v28 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_251A82058(a1, *(void *)(v20 + 48) + *(void *)(v29 + 72) * a2, (uint64_t (*)(void))type metadata accessor for StaticUser);
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_251A74258(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v4 = v3;
  uint64_t v8 = (int *)type metadata accessor for StaticResident();
  uint64_t v9 = *((void *)v8 - 1);
  MEMORY[0x270FA5388](v8);
  unint64_t v11 = &v40[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  unint64_t v12 = *(void *)(*v4 + 16);
  unint64_t v13 = *(void *)(*v4 + 24);
  if (v13 <= v12 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_251A690F8(v12 + 1, (uint64_t (*)(void))type metadata accessor for StaticResident, &qword_269B9D298, (uint64_t (*)(void))type metadata accessor for StaticResident, (void (*)(char *))StaticResident.hash(into:));
    }
    else
    {
      if (v13 > v12)
      {
        sub_251A76388((uint64_t (*)(void))type metadata accessor for StaticResident, &qword_269B9D298, (uint64_t (*)(void))type metadata accessor for StaticResident, (uint64_t (*)(void))type metadata accessor for StaticResident);
        goto LABEL_46;
      }
      sub_251A7D484();
    }
    uint64_t v14 = *v4;
    sub_251F36CA0();
    StaticResident.hash(into:)((uint64_t)v40);
    uint64_t v15 = sub_251F36D00();
    uint64_t v16 = -1 << *(unsigned char *)(v14 + 32);
    a2 = v15 & ~v16;
    if ((*(void *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v17 = ~v16;
      uint64_t v18 = *(void *)(v9 + 72);
      do
      {
        sub_251A81FF0(*(void *)(v14 + 48) + v18 * a2, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticResident);
        if ((sub_251F34D70() & 1) == 0) {
          goto LABEL_11;
        }
        uint64_t v19 = v8[5];
        uint64_t v20 = *(void *)&v11[v19];
        uint64_t v21 = *(void *)&v11[v19 + 8];
        uint64_t v22 = (void *)(a1 + v19);
        BOOL v23 = v20 == *v22 && v21 == v22[1];
        if (!v23 && (sub_251F36B10() & 1) == 0) {
          goto LABEL_11;
        }
        uint64_t v24 = v8[6];
        uint64_t v25 = &v11[v24];
        uint64_t v26 = *(void *)&v11[v24 + 8];
        uint64_t v27 = (void *)(a1 + v24);
        uint64_t v28 = v27[1];
        if (v26)
        {
          if (!v28) {
            goto LABEL_11;
          }
          BOOL v29 = *(void *)v25 == *v27 && v26 == v28;
          if (!v29 && (sub_251F36B10() & 1) == 0) {
            goto LABEL_11;
          }
        }
        else if (v28)
        {
          goto LABEL_11;
        }
        if ((sub_251B0693C(*(void *)&v11[v8[7]], *(void *)(a1 + v8[7])) & 1) == 0
          || (sub_251B06B20(*(void *)&v11[v8[8]], *(void *)(a1 + v8[8])) & 1) == 0)
        {
          goto LABEL_11;
        }
        uint64_t v30 = v8[9];
        unsigned int v31 = *(unsigned __int16 *)&v11[v30];
        unsigned int v32 = *(unsigned __int16 *)(a1 + v30);
        if (v31 >> 14)
        {
          if (v31 >> 14 == 1)
          {
            if ((v32 & 0xC000) != 0x4000
              || ((v31 & 1) == 0) == (v32 & 1)
              || ((((v31 & 0x100) == 0) ^ ((unsigned __int16)(v32 & 0x100) >> 8)) & 1) == 0)
            {
              goto LABEL_11;
            }
          }
          else
          {
            switch(v31)
            {
              case 0x8000u:
                if (v32 == 0x8000) {
                  goto LABEL_44;
                }
                goto LABEL_11;
              case 0x8001u:
                int v33 = 32769;
                break;
              case 0x8002u:
                int v33 = 32770;
                break;
              case 0x8003u:
                int v33 = 32771;
                break;
              default:
                int v33 = 33024;
                break;
            }
            if (v32 != v33) {
              goto LABEL_11;
            }
          }
        }
        else if (v32 >> 14 || v32 != v31)
        {
          goto LABEL_11;
        }
LABEL_44:
        if (sub_251F34D70())
        {
          sub_251A820C0((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticResident);
          sub_251F36B90();
          __break(1u);
          break;
        }
LABEL_11:
        sub_251A820C0((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticResident);
        a2 = (a2 + 1) & v17;
      }
      while (((*(void *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
    }
  }
LABEL_46:
  uint64_t v34 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_251A82058(a1, *(void *)(v34 + 48) + *(void *)(v9 + 72) * a2, (uint64_t (*)(void))type metadata accessor for StaticResident);
  uint64_t v36 = *(void *)(v34 + 16);
  BOOL v37 = __OFADD__(v36, 1);
  uint64_t v38 = v36 + 1;
  if (v37)
  {
    __break(1u);
    JUMPOUT(0x251A746A8);
  }
  *(void *)(v34 + 16) = v38;
  return result;
}

uint64_t sub_251A746B8(uint64_t result, unint64_t a2, char a3, uint64_t *a4)
{
  int v6 = result;
  unint64_t v7 = *(void *)(*v4 + 16);
  unint64_t v8 = *(void *)(*v4 + 24);
  if (v8 > v7 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v9 = v7 + 1;
  if (a3)
  {
    sub_251A6D4B8(v9, a4);
  }
  else
  {
    if (v8 > v7)
    {
      uint64_t result = (uint64_t)sub_251A76C68(a4);
      goto LABEL_14;
    }
    sub_251A7D7E8(v9, a4);
  }
  uint64_t v10 = *v4;
  sub_251F36CA0();
  sub_251F36CB0();
  uint64_t result = sub_251F36D00();
  uint64_t v11 = -1 << *(unsigned char *)(v10 + 32);
  a2 = result & ~v11;
  if ((*(void *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v12 = *(void *)(v10 + 48);
    if (*(unsigned __int8 *)(v12 + a2) == v6)
    {
LABEL_13:
      uint64_t result = sub_251F36B90();
      __break(1u);
    }
    else
    {
      uint64_t v13 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(void *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(unsigned __int8 *)(v12 + a2) == v6) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v14 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v14 + 48) + a2) = v6;
  uint64_t v15 = *(void *)(v14 + 16);
  BOOL v16 = __OFADD__(v15, 1);
  uint64_t v17 = v15 + 1;
  if (v16) {
    __break(1u);
  }
  else {
    *(void *)(v14 + 16) = v17;
  }
  return result;
}

uint64_t sub_251A74814(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v65 = a1;
  uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F0A0);
  MEMORY[0x270FA5388](v64);
  unint64_t v7 = (char *)v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  uint64_t v56 = *(void *)(v8 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v62 = (void *)((char *)v55 - v11);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)v55 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)v55 - v16;
  uint64_t v57 = v3;
  unint64_t v18 = *(void *)(*v3 + 16);
  unint64_t v19 = *(void *)(*v3 + 24);
  if (v19 <= v18 || (a3 & 1) == 0)
  {
    uint64_t v20 = v18 + 1;
    uint64_t v61 = v15;
    if (a3)
    {
      uint64_t v21 = v57;
      sub_251A6D760(v20, type metadata accessor for StaticAccessory.DeviceIdentifier, &qword_269B9D1F0, type metadata accessor for StaticAccessory.DeviceIdentifier, (uint64_t (*)(char *, uint64_t))sub_251A6F09C);
    }
    else
    {
      if (v19 > v18)
      {
        sub_251A76388(type metadata accessor for StaticAccessory.DeviceIdentifier, &qword_269B9D1F0, type metadata accessor for StaticAccessory.DeviceIdentifier, type metadata accessor for StaticAccessory.DeviceIdentifier);
        goto LABEL_28;
      }
      uint64_t v21 = v57;
      sub_251A7DA60(v20, type metadata accessor for StaticAccessory.DeviceIdentifier, &qword_269B9D1F0, type metadata accessor for StaticAccessory.DeviceIdentifier, (uint64_t (*)(char *, uint64_t))sub_251A6F09C);
    }
    uint64_t v22 = *v21;
    sub_251F36CA0();
    sub_251A81FF0(v65, (uint64_t)v17, type metadata accessor for StaticAccessory.DeviceIdentifier);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v23 = sub_251F34DA0();
      uint64_t v24 = *(void *)(v23 - 8);
      MEMORY[0x270FA5388](v23);
      uint64_t v26 = (char *)v55 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v26, v17, v23);
      sub_251F36CB0();
      sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
      sub_251F35610();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
    }
    else
    {
      sub_251F36CB0();
      sub_251F357B0();
      swift_bridgeObjectRelease();
    }
    uint64_t v27 = sub_251F36D00();
    uint64_t v28 = -1 << *(unsigned char *)(v22 + 32);
    a2 = v27 & ~v28;
    uint64_t v29 = v22 + 56;
    if ((*(void *)(v22 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v30 = ~v28;
      uint64_t v63 = *(void *)(v56 + 72);
      v55[1] = v8;
      uint64_t v59 = ~v28;
      uint64_t v60 = v22 + 56;
      do
      {
        sub_251A81FF0(*(void *)(v22 + 48) + v63 * a2, (uint64_t)v14, type metadata accessor for StaticAccessory.DeviceIdentifier);
        unsigned int v31 = &v7[*(int *)(v64 + 48)];
        sub_251A81FF0((uint64_t)v14, (uint64_t)v7, type metadata accessor for StaticAccessory.DeviceIdentifier);
        sub_251A81FF0(v65, (uint64_t)v31, type metadata accessor for StaticAccessory.DeviceIdentifier);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v32 = v22;
          uint64_t v33 = v61;
          sub_251A81FF0((uint64_t)v7, v61, type metadata accessor for StaticAccessory.DeviceIdentifier);
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          uint64_t v35 = sub_251F34DA0();
          uint64_t v36 = v35;
          uint64_t v37 = *(void *)(v35 - 8);
          if (EnumCaseMultiPayload == 1)
          {
            char v58 = v55;
            MEMORY[0x270FA5388](v35);
            uint64_t v39 = (char *)v55 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
            (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v39, v31, v36);
            char v40 = sub_251F34D70();
            uint64_t v41 = v14;
            char v42 = *(void (**)(char *, uint64_t))(v37 + 8);
            v42(v39, v36);
            v42((char *)v33, v36);
            uint64_t v14 = v41;
            uint64_t v22 = v32;
            uint64_t v30 = v59;
            uint64_t v29 = v60;
            if (v40) {
              goto LABEL_32;
            }
LABEL_26:
            sub_251A820C0((uint64_t)v7, type metadata accessor for StaticAccessory.DeviceIdentifier);
            goto LABEL_15;
          }
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v35 - 8) + 8))(v33, v35);
          uint64_t v22 = v32;
          uint64_t v30 = v59;
          uint64_t v29 = v60;
        }
        else
        {
          uint64_t v43 = v62;
          sub_251A81FF0((uint64_t)v7, (uint64_t)v62, type metadata accessor for StaticAccessory.DeviceIdentifier);
          uint64_t v44 = *v43;
          uint64_t v45 = v43[1];
          if (swift_getEnumCaseMultiPayload() != 1)
          {
            uint64_t v46 = *(void *)v31;
            uint64_t v47 = *((void *)v31 + 1);
            if (v44 == v46 && v45 == v47) {
              goto LABEL_31;
            }
            char v49 = sub_251F36B10();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v49) {
              goto LABEL_32;
            }
            goto LABEL_26;
          }
          swift_bridgeObjectRelease();
        }
        sub_251A1B064((uint64_t)v7, &qword_26B21F0A0);
LABEL_15:
        sub_251A820C0((uint64_t)v14, type metadata accessor for StaticAccessory.DeviceIdentifier);
        a2 = (a2 + 1) & v30;
      }
      while (((*(void *)(v29 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
    }
  }
LABEL_28:
  uint64_t v50 = *v57;
  *(void *)(*v57 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_251A82058(v65, *(void *)(v50 + 48) + *(void *)(v56 + 72) * a2, type metadata accessor for StaticAccessory.DeviceIdentifier);
  uint64_t v52 = *(void *)(v50 + 16);
  BOOL v53 = __OFADD__(v52, 1);
  uint64_t v54 = v52 + 1;
  if (v53)
  {
    __break(1u);
LABEL_31:
    swift_bridgeObjectRelease_n();
LABEL_32:
    sub_251A820C0((uint64_t)v7, type metadata accessor for StaticAccessory.DeviceIdentifier);
    sub_251A820C0((uint64_t)v14, type metadata accessor for StaticAccessory.DeviceIdentifier);
    uint64_t result = sub_251F36B90();
    __break(1u);
  }
  else
  {
    *(void *)(v50 + 16) = v54;
  }
  return result;
}

uint64_t sub_251A74F9C(uint64_t result, unint64_t a2, char a3, uint64_t *a4, void (*a5)(uint64_t), uint64_t (*a6)(void))
{
  char v9 = result;
  unint64_t v10 = *(void *)(*v6 + 16);
  unint64_t v11 = *(void *)(*v6 + 24);
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_16;
  }
  uint64_t v12 = v10 + 1;
  if (a3)
  {
    sub_251A6D9D8(v12, a4, a5);
  }
  else
  {
    if (v11 > v10)
    {
      uint64_t result = (uint64_t)sub_251A76C68(a4);
      goto LABEL_16;
    }
    sub_251A7DCA4(v12, a4, a5);
  }
  uint64_t v13 = *v6;
  uint64_t v14 = sub_251F36CA0();
  ((void (*)(uint64_t))a6)(v14);
  sub_251F357B0();
  swift_bridgeObjectRelease();
  uint64_t result = sub_251F36D00();
  uint64_t v15 = -1 << *(unsigned char *)(v13 + 32);
  a2 = result & ~v15;
  if ((*(void *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v15;
    do
    {
      uint64_t v17 = a6();
      uint64_t v19 = v18;
      if (v17 == a6() && v19 == v20) {
        goto LABEL_19;
      }
      char v22 = sub_251F36B10();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if (v22) {
        goto LABEL_20;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_16:
  uint64_t v23 = *v6;
  *(void *)(*v6 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v23 + 48) + a2) = v9;
  uint64_t v24 = *(void *)(v23 + 16);
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (!v25)
  {
    *(void *)(v23 + 16) = v26;
    return result;
  }
  __break(1u);
LABEL_19:
  swift_bridgeObjectRelease_n();
LABEL_20:
  uint64_t result = sub_251F36B90();
  __break(1u);
  return result;
}

uint64_t sub_251A7519C(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for ActionService();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  unint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = *(void *)(*v4 + 16);
  unint64_t v13 = *(void *)(*v4 + 24);
  if (v13 > v12 && (a3 & 1) != 0)
  {
LABEL_13:
    uint64_t v14 = v9;
    goto LABEL_14;
  }
  if (a3)
  {
    sub_251A690F8(v12 + 1, (uint64_t (*)(void))type metadata accessor for ActionService, &qword_269B9D208, (uint64_t (*)(void))type metadata accessor for ActionService, (void (*)(char *))ActionService.hash(into:));
    goto LABEL_8;
  }
  if (v13 <= v12)
  {
    sub_251A7DF64();
LABEL_8:
    uint64_t v15 = *v4;
    sub_251F36CA0();
    ActionService.hash(into:)(v27);
    uint64_t v16 = sub_251F36D00();
    uint64_t v17 = -1 << *(unsigned char *)(v15 + 32);
    a2 = v16 & ~v17;
    if ((*(void *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v26 = v8;
      uint64_t v18 = ~v17;
      uint64_t v14 = v9;
      uint64_t v19 = *(void *)(v9 + 72);
      while (1)
      {
        sub_251A81FF0(*(void *)(v15 + 48) + v19 * a2, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ActionService);
        char v20 = _s13HomeDataModel13ActionServiceV2eeoiySbAC_ACtFZ_0((uint64_t)v11, a1);
        sub_251A820C0((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ActionService);
        if (v20) {
          goto LABEL_17;
        }
        a2 = (a2 + 1) & v18;
        if (((*(void *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          goto LABEL_14;
        }
      }
    }
    goto LABEL_13;
  }
  uint64_t v14 = v9;
  sub_251A76388((uint64_t (*)(void))type metadata accessor for ActionService, &qword_269B9D208, (uint64_t (*)(void))type metadata accessor for ActionService, (uint64_t (*)(void))type metadata accessor for ActionService);
LABEL_14:
  uint64_t v21 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_251A82058(a1, *(void *)(v21 + 48) + *(void *)(v14 + 72) * a2, (uint64_t (*)(void))type metadata accessor for ActionService);
  uint64_t v23 = *(void *)(v21 + 16);
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (!v24)
  {
    *(void *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_17:
  uint64_t result = sub_251F36B90();
  __break(1u);
  return result;
}

uint64_t sub_251A75474(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  unint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_251A6DF6C();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (uint64_t)sub_251A77618();
      goto LABEL_22;
    }
    sub_251A7E540();
  }
  uint64_t v11 = *v4;
  sub_251F36CA0();
  sub_251F357B0();
  uint64_t result = sub_251F36D00();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    uint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_251F36B10(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_251F36B90();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_251F36B10();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  *uint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_251A75610(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_251A6E24C();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_251A777CC();
      goto LABEL_14;
    }
    sub_251A7E7F0();
  }
  uint64_t v8 = *v3;
  uint64_t result = sub_251F36C90();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(void *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      uint64_t result = sub_251F36B90();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(void *)(v10 + 8 * a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v12 + 48) + 8 * a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

uint64_t sub_251A75734(uint64_t result, unint64_t a2, char a3)
{
  char v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  char v20 = result;
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_251A6E4D0();
    }
    else
    {
      if (v7 > v6)
      {
        uint64_t result = (uint64_t)sub_251A76C68(&qword_269B9D278);
        goto LABEL_31;
      }
      sub_251A7EA54();
    }
    uint64_t v8 = *v3;
    uint64_t result = sub_251EAE504();
    uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
    a2 = result & ~v9;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v10 = ~v9;
      while (1)
      {
        unint64_t v11 = 0x8000000251F64710;
        switch(*(unsigned char *)(*(void *)(v8 + 48) + a2))
        {
          case 1:
            uint64_t v12 = "13-AA62-01754F256DD5";
            goto LABEL_18;
          case 2:
            uint64_t v12 = "73-A058-C5E64BC487B2";
            goto LABEL_18;
          case 3:
            uint64_t v12 = "CE-986D-63B28F62C9E3";
            goto LABEL_18;
          case 4:
            uint64_t v12 = "60-AD68-D91053B75F44";
            goto LABEL_18;
          case 5:
            uint64_t v12 = "7E-BE63-1D00B1500545";
            goto LABEL_18;
          case 6:
            uint64_t v12 = "17-A590-755E1AAC02AE";
            goto LABEL_18;
          case 7:
            uint64_t v12 = "73-8FBD-0E8978A33403";
LABEL_18:
            unint64_t v11 = (unint64_t)v12 | 0x8000000000000000;
            break;
          default:
            break;
        }
        unint64_t v13 = 0x8000000251F64710;
        switch(v5)
        {
          case 1:
            BOOL v14 = "13-AA62-01754F256DD5";
            goto LABEL_27;
          case 2:
            BOOL v14 = "73-A058-C5E64BC487B2";
            goto LABEL_27;
          case 3:
            BOOL v14 = "CE-986D-63B28F62C9E3";
            goto LABEL_27;
          case 4:
            BOOL v14 = "60-AD68-D91053B75F44";
            goto LABEL_27;
          case 5:
            BOOL v14 = "7E-BE63-1D00B1500545";
            goto LABEL_27;
          case 6:
            BOOL v14 = "17-A590-755E1AAC02AE";
            goto LABEL_27;
          case 7:
            BOOL v14 = "73-8FBD-0E8978A33403";
LABEL_27:
            unint64_t v13 = (unint64_t)v14 | 0x8000000000000000;
            break;
          default:
            break;
        }
        if (v11 == v13) {
          break;
        }
        char v15 = sub_251F36B10();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        if (v15) {
          goto LABEL_35;
        }
        a2 = (a2 + 1) & v10;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          goto LABEL_31;
        }
      }
LABEL_34:
      swift_bridgeObjectRelease_n();
LABEL_35:
      sub_251F36B90();
      __break(1u);
      JUMPOUT(0x251A759F0);
    }
  }
LABEL_31:
  uint64_t v16 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v16 + 48) + a2) = v20;
  uint64_t v17 = *(void *)(v16 + 16);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18)
  {
    __break(1u);
    goto LABEL_34;
  }
  *(void *)(v16 + 16) = v19;
  return result;
}

uint64_t sub_251A75A30(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v60 = a1;
  uint64_t v50 = _s7MergeIdVMa();
  uint64_t v6 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50);
  uint64_t v62 = (uint64_t)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v8 = *(void *)(*v3 + 16);
  unint64_t v9 = *(void *)(*v3 + 24);
  uint64_t v44 = v3;
  uint64_t v43 = v6;
  if (v9 > v8 && (a3 & 1) != 0) {
    goto LABEL_25;
  }
  if (a3)
  {
    sub_251A6E8A8();
  }
  else
  {
    if (v9 > v8)
    {
      sub_251A76388((uint64_t (*)(void))_s7MergeIdVMa, &qword_269B9D220, (uint64_t (*)(void))_s7MergeIdVMa, (uint64_t (*)(void))_s7MergeIdVMa);
      goto LABEL_25;
    }
    sub_251A7EDF4();
  }
  uint64_t v59 = *v3;
  sub_251F36CA0();
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t v11 = *(void *)(*(void *)(v10 - 8) + 64);
  MEMORY[0x270FA5388](v10 - 8);
  sub_251A1E280(v60, (uint64_t)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = sub_251F34DA0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v56 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  uint64_t v57 = v13 + 48;
  uint64_t v14 = v56((char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), 1, v12);
  uint64_t v58 = v11;
  uint64_t v46 = v13;
  if (v14 == 1)
  {
    sub_251F36CC0();
  }
  else
  {
    MEMORY[0x270FA5388](v14);
    uint64_t v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v16, (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
    sub_251F36CC0();
    sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
    sub_251F35610();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
    uint64_t v11 = v58;
  }
  uint64_t v47 = (void *)(v60 + *(int *)(v50 + 20));
  sub_251F357B0();
  uint64_t v17 = sub_251F36D00();
  uint64_t v18 = -1 << *(unsigned char *)(v59 + 32);
  a2 = v17 & ~v18;
  uint64_t v55 = v59 + 56;
  if ((*(void *)(v59 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v53 = ~v18;
    uint64_t v54 = v12;
    uint64_t v52 = *(void *)(v6 + 72);
    uint64_t v45 = v46 + 32;
    char v49 = (void (**)(char *, uint64_t))(v46 + 8);
    do
    {
      uint64_t v19 = v62;
      uint64_t v20 = sub_251A81FF0(*(void *)(v59 + 48) + v52 * a2, v62, (uint64_t (*)(void))_s7MergeIdVMa);
      uint64_t v61 = &v43;
      MEMORY[0x270FA5388](v20);
      unint64_t v21 = (v11 + 15) & 0xFFFFFFFFFFFFFFF0;
      uint64_t v22 = (char *)&v43 - v21;
      sub_251A1E280(v60, (uint64_t)&v43 - v21);
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E6B8);
      uint64_t v24 = MEMORY[0x270FA5388](v23 - 8);
      uint64_t v26 = (char *)&v43 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v27 = (uint64_t)&v26[*(int *)(v24 + 56)];
      sub_251A1E280(v19, (uint64_t)v26);
      sub_251A1E280((uint64_t)&v43 - v21, v27);
      uint64_t v28 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v56;
      uint64_t v29 = v56(v26, 1, v12);
      if (v29 == 1)
      {
        sub_251A1B064((uint64_t)&v43 - v21, &qword_26B21FF90);
        if (v28(v27, 1, v12) != 1) {
          goto LABEL_20;
        }
        sub_251A1B064((uint64_t)v26, &qword_26B21FF90);
      }
      else
      {
        uint64_t v51 = &v43;
        MEMORY[0x270FA5388](v29);
        uint64_t v30 = (char *)&v43 - v21;
        sub_251A1E280((uint64_t)v26, (uint64_t)v30);
        uint64_t v31 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v28)(v27, 1, v12);
        if (v31 == 1)
        {
          sub_251A1B064((uint64_t)v22, &qword_26B21FF90);
          (*v49)(v30, v12);
LABEL_20:
          sub_251A1B064((uint64_t)v26, &qword_26B21E6B8);
          goto LABEL_14;
        }
        char v48 = &v43;
        uint64_t v32 = v46;
        MEMORY[0x270FA5388](v31);
        uint64_t v34 = (char *)&v43 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, uint64_t, uint64_t))(v32 + 32))(v34, v27, v12);
        sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
        char v35 = sub_251F35650();
        uint64_t v36 = *(void (**)(char *, uint64_t))(v32 + 8);
        v36(v34, v12);
        sub_251A1B064((uint64_t)v22, &qword_26B21FF90);
        v36(v30, v12);
        sub_251A1B064((uint64_t)v26, &qword_26B21FF90);
        if ((v35 & 1) == 0) {
          goto LABEL_14;
        }
      }
      uint64_t v37 = (void *)(v62 + *(int *)(v50 + 20));
      if (*v37 == *v47 && v37[1] == v47[1] || (sub_251F36B10() & 1) != 0)
      {
        sub_251A820C0(v62, (uint64_t (*)(void))_s7MergeIdVMa);
        sub_251F36B90();
        __break(1u);
        break;
      }
LABEL_14:
      sub_251A820C0(v62, (uint64_t (*)(void))_s7MergeIdVMa);
      a2 = (a2 + 1) & v53;
      uint64_t v11 = v58;
    }
    while (((*(void *)(v55 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_25:
  uint64_t v38 = *v44;
  *(void *)(*v44 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_251A82058(v60, *(void *)(v38 + 48) + *(void *)(v43 + 72) * a2, (uint64_t (*)(void))_s7MergeIdVMa);
  uint64_t v40 = *(void *)(v38 + 16);
  BOOL v41 = __OFADD__(v40, 1);
  uint64_t v42 = v40 + 1;
  if (v41) {
    __break(1u);
  }
  else {
    *(void *)(v38 + 16) = v42;
  }
  return result;
}

void *sub_251A761DC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B21F600);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_251F363C0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t result = (void *)sub_251A81FDC(v17);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v13) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_251A76388(uint64_t (*a1)(void), uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  unint64_t v8 = v4;
  uint64_t v9 = a1(0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9 - 8);
  unint64_t v12 = (char *)&v30 - v11;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v13 = *v4;
  uint64_t v14 = sub_251F363C0();
  uint64_t v15 = v14;
  if (!*(void *)(v13 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_30:
    *unint64_t v8 = v15;
    return result;
  }
  uint64_t result = (void *)(v14 + 56);
  unint64_t v17 = (unint64_t)((1 << *(unsigned char *)(v15 + 32)) + 63) >> 6;
  uint64_t v30 = v8;
  uint64_t v31 = (const void *)(v13 + 56);
  if (v15 != v13 || (unint64_t)result >= v13 + 56 + 8 * v17) {
    uint64_t result = memmove(result, v31, 8 * v17);
  }
  int64_t v19 = 0;
  *(void *)(v15 + 16) = *(void *)(v13 + 16);
  uint64_t v20 = 1 << *(unsigned char *)(v13 + 32);
  uint64_t v21 = -1;
  if (v20 < 64) {
    uint64_t v21 = ~(-1 << v20);
  }
  unint64_t v22 = v21 & *(void *)(v13 + 56);
  int64_t v23 = (unint64_t)(v20 + 63) >> 6;
  while (1)
  {
    if (v22)
    {
      unint64_t v24 = __clz(__rbit64(v22));
      v22 &= v22 - 1;
      unint64_t v25 = v24 | (v19 << 6);
      goto LABEL_12;
    }
    int64_t v27 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v27 >= v23) {
      goto LABEL_28;
    }
    unint64_t v28 = *((void *)v31 + v27);
    ++v19;
    if (!v28)
    {
      int64_t v19 = v27 + 1;
      if (v27 + 1 >= v23) {
        goto LABEL_28;
      }
      unint64_t v28 = *((void *)v31 + v19);
      if (!v28)
      {
        int64_t v19 = v27 + 2;
        if (v27 + 2 >= v23) {
          goto LABEL_28;
        }
        unint64_t v28 = *((void *)v31 + v19);
        if (!v28) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v22 = (v28 - 1) & v28;
    unint64_t v25 = __clz(__rbit64(v28)) + (v19 << 6);
LABEL_12:
    unint64_t v26 = *(void *)(v10 + 72) * v25;
    sub_251A81FF0(*(void *)(v13 + 48) + v26, (uint64_t)v12, a3);
    uint64_t result = (void *)sub_251A82058((uint64_t)v12, *(void *)(v15 + 48) + v26, a4);
  }
  int64_t v29 = v27 + 3;
  if (v29 >= v23)
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    unint64_t v8 = v30;
    goto LABEL_30;
  }
  unint64_t v28 = *((void *)v31 + v29);
  if (v28)
  {
    int64_t v19 = v29;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v19 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v19 >= v23) {
      goto LABEL_28;
    }
    unint64_t v28 = *((void *)v31 + v19);
    ++v29;
    if (v28) {
      goto LABEL_27;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

void *sub_251A76600()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F1A8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_251F363C0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_251A76794()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D200);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_251F363C0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_27:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  uint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (!v12)
    {
      int64_t v14 = v9 + 1;
      if (__OFADD__(v9, 1))
      {
        __break(1u);
        goto LABEL_29;
      }
      if (v14 >= v13) {
        goto LABEL_27;
      }
      uint64_t v12 = *(void *)(v6 + 8 * v14);
      ++v9;
      if (!v12)
      {
        int64_t v9 = v14 + 1;
        if (v14 + 1 >= v13) {
          goto LABEL_27;
        }
        uint64_t v12 = *(void *)(v6 + 8 * v9);
        if (!v12)
        {
          int64_t v9 = v14 + 2;
          if (v14 + 2 >= v13) {
            goto LABEL_27;
          }
          uint64_t v12 = *(void *)(v6 + 8 * v9);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_12:
    v12 &= v12 - 1;
  }
  int64_t v15 = v14 + 3;
  if (v15 >= v13) {
    goto LABEL_27;
  }
  uint64_t v12 = *(void *)(v6 + 8 * v15);
  if (v12)
  {
    int64_t v9 = v15;
    goto LABEL_12;
  }
  while (1)
  {
    int64_t v9 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_27;
    }
    uint64_t v12 = *(void *)(v6 + 8 * v9);
    ++v15;
    if (v12) {
      goto LABEL_12;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

id sub_251A768F4()
{
  return sub_251A77474((uint64_t *)&unk_269BA0440);
}

void *sub_251A76900()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D2D0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_251F363C0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_DWORD *)(*(void *)(v4 + 48) + 4 * v15) = *(_DWORD *)(*(void *)(v2 + 48) + 4 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_251A76A98()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D258);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_251F363C0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 32 * v15;
    unint64_t v17 = (_OWORD *)(*(void *)(v2 + 48) + v16);
    int64_t v18 = (_OWORD *)(*(void *)(v4 + 48) + v16);
    long long v19 = v17[1];
    *int64_t v18 = *v17;
    v18[1] = v19;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_251A76C68(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_251F363C0();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  uint64_t result = (void *)(v4 + 56);
  uint64_t v7 = v3 + 56;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8) {
    uint64_t result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v7 + 8 * v17);
    ++v10;
    if (!v18)
    {
      int64_t v10 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v7 + 8 * v10);
      if (!v18)
      {
        int64_t v10 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v7 + 8 * v10);
        if (!v18) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v13 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_12:
    *(unsigned char *)(*(void *)(v5 + 48) + v16) = *(unsigned char *)(*(void *)(v3 + 48) + v16);
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v7 + 8 * v19);
  if (v18)
  {
    int64_t v10 = v19;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v10 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v7 + 8 * v10);
    ++v19;
    if (v18) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_251A76DF4()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D2F0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_251F363C0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_WORD *)(*(void *)(v4 + 48) + 2 * v15) = *(_WORD *)(*(void *)(v2 + 48) + 2 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_251A76F8C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E188);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_251F363C0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_30:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  unint64_t v6 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  unint64_t v24 = v1;
  unint64_t v25 = (const void *)(v2 + 56);
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v6) {
    uint64_t result = memmove(result, v25, 8 * v6);
  }
  int64_t v8 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v9 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(v2 + 56);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v8 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v21 >= v12) {
      goto LABEL_28;
    }
    unint64_t v22 = *((void *)v25 + v21);
    ++v8;
    if (!v22)
    {
      int64_t v8 = v21 + 1;
      if (v21 + 1 >= v12) {
        goto LABEL_28;
      }
      unint64_t v22 = *((void *)v25 + v8);
      if (!v22)
      {
        int64_t v8 = v21 + 2;
        if (v21 + 2 >= v12) {
          goto LABEL_28;
        }
        unint64_t v22 = *((void *)v25 + v8);
        if (!v22) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v11 = (v22 - 1) & v22;
    unint64_t v14 = __clz(__rbit64(v22)) + (v8 << 6);
LABEL_12:
    uint64_t v15 = sub_251F34DA0();
    uint64_t v16 = *(void *)(v15 - 8);
    MEMORY[0x270FA5388](v15);
    int64_t v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
    unint64_t v20 = *(void *)(v19 + 72) * v14;
    (*(void (**)(char *, unint64_t, uint64_t))(v16 + 16))(v18, *(void *)(v2 + 48) + v20, v15);
    uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v16 + 32))(*(void *)(v4 + 48) + v20, v18, v15);
  }
  int64_t v23 = v21 + 3;
  if (v23 >= v12)
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v24;
    goto LABEL_30;
  }
  unint64_t v22 = *((void *)v25 + v23);
  if (v22)
  {
    int64_t v8 = v23;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v8 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v8 >= v12) {
      goto LABEL_28;
    }
    unint64_t v22 = *((void *)v25 + v8);
    ++v23;
    if (v22) {
      goto LABEL_27;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

void *sub_251A77234()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D338);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_251F363C0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v13) {
      goto LABEL_28;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      int64_t v9 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v22 = *(void *)(v6 + 8 * v9);
      if (!v22)
      {
        int64_t v9 = v21 + 2;
        if (v21 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v22 = *(void *)(v6 + 8 * v9);
        if (!v22) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + v16;
    uint64_t v18 = *(void *)v17;
    __int16 v19 = *(_WORD *)(v17 + 8);
    LOBYTE(v17) = *(unsigned char *)(v17 + 10);
    uint64_t v20 = *(void *)(v4 + 48) + v16;
    *(void *)uint64_t v20 = v18;
    *(_WORD *)(v20 + 8) = v19;
    *(unsigned char *)(v20 + 10) = v17;
  }
  int64_t v23 = v21 + 3;
  if (v23 >= v13) {
    goto LABEL_28;
  }
  unint64_t v22 = *(void *)(v6 + 8 * v23);
  if (v22)
  {
    int64_t v9 = v23;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v9);
    ++v23;
    if (v22) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_251A773E4()
{
  return sub_251A76388((uint64_t (*)(void))type metadata accessor for StaticService, &qword_269B9D268, (uint64_t (*)(void))type metadata accessor for StaticService, (uint64_t (*)(void))type metadata accessor for StaticService);
}

void *sub_251A7742C()
{
  return sub_251A76388(type metadata accessor for StaticRoom, &qword_269B9D290, type metadata accessor for StaticRoom, type metadata accessor for StaticRoom);
}

id sub_251A77474(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_251F363C0();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (id)(v4 + 56);
  uint64_t v7 = v3 + 56;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v14) {
      goto LABEL_28;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v20 = *(void *)(v7 + 8 * v10);
      if (!v20)
      {
        int64_t v10 = v19 + 2;
        if (v19 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v20 = *(void *)(v7 + 8 * v10);
        if (!v20) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    uint64_t v18 = *(void **)(*(void *)(v3 + 48) + v17);
    *(void *)(*(void *)(v5 + 48) + v17) = v18;
    id result = v18;
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v14) {
    goto LABEL_28;
  }
  unint64_t v20 = *(void *)(v7 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_28;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_251A77618()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D1F8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_251F363C0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    int64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v19 = *v17;
    v19[1] = v18;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_251A777CC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D218);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_251F363C0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_251A77964()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B21F600);
  uint64_t v3 = sub_251F363D0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_40:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (v8)
  {
    unint64_t v14 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v15 = v14 | (v12 << 6);
LABEL_24:
    uint64_t v19 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    sub_251F36CA0();
    if (v19 == 2 || v19 == 1)
    {
      sub_251F36CB0();
    }
    else
    {
      sub_251F36CB0();
      sub_251F36CC0();
      if (v19)
      {
        swift_bridgeObjectRetain_n();
        sub_251A54708(v27, v19);
        sub_251A58144(v19);
      }
    }
    uint64_t result = sub_251F36D00();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
    ++*(void *)(v4 + 16);
  }
  int64_t v16 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  if (v16 >= v9) {
    goto LABEL_38;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v16);
  ++v12;
  if (v17) {
    goto LABEL_23;
  }
  int64_t v12 = v16 + 1;
  if (v16 + 1 >= v9) {
    goto LABEL_38;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v12);
  if (v17) {
    goto LABEL_23;
  }
  int64_t v12 = v16 + 2;
  if (v16 + 2 >= v9) {
    goto LABEL_38;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v12);
  if (v17)
  {
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
    goto LABEL_24;
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_38:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_40;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_38;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_251A77C4C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for StaticMediaProfile();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D2B0);
  uint64_t v7 = sub_251F363D0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v30 = v0;
  uint64_t v31 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v32 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = v7 + 56;
  uint64_t result = swift_retain();
  int64_t v15 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v18 = v17 | (v15 << 6);
      goto LABEL_24;
    }
    int64_t v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v19 >= v32) {
      goto LABEL_33;
    }
    unint64_t v20 = *(void *)(v31 + 8 * v19);
    ++v15;
    if (!v20)
    {
      int64_t v15 = v19 + 1;
      if (v19 + 1 >= v32) {
        goto LABEL_33;
      }
      unint64_t v20 = *(void *)(v31 + 8 * v15);
      if (!v20)
      {
        int64_t v15 = v19 + 2;
        if (v19 + 2 >= v32) {
          goto LABEL_33;
        }
        unint64_t v20 = *(void *)(v31 + 8 * v15);
        if (!v20) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v15 << 6);
LABEL_24:
    uint64_t v22 = *(void *)(v3 + 72);
    sub_251A81FF0(*(void *)(v6 + 48) + v22 * v18, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
    sub_251F36CA0();
    StaticMediaProfile.hash(into:)(v33);
    uint64_t result = sub_251F36D00();
    uint64_t v23 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v13 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v24) & ~*(void *)(v13 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v28 = v25 == v27;
        if (v25 == v27) {
          unint64_t v25 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v13 + 8 * v25);
      }
      while (v29 == -1);
      unint64_t v16 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(void *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    uint64_t result = sub_251A82058((uint64_t)v5, *(void *)(v8 + 48) + v16 * v22, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
    ++*(void *)(v8 + 16);
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v32)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v30;
    goto LABEL_35;
  }
  unint64_t v20 = *(void *)(v31 + 8 * v21);
  if (v20)
  {
    int64_t v15 = v21;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v15 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v15 >= v32) {
      goto LABEL_33;
    }
    unint64_t v20 = *(void *)(v31 + 8 * v15);
    ++v21;
    if (v20) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_251A77FB0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for StaticMediaSystem();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D2B8);
  uint64_t v7 = sub_251F363D0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v30 = v0;
  uint64_t v31 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v32 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = v7 + 56;
  uint64_t result = swift_retain();
  int64_t v15 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v18 = v17 | (v15 << 6);
      goto LABEL_24;
    }
    int64_t v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v19 >= v32) {
      goto LABEL_33;
    }
    unint64_t v20 = *(void *)(v31 + 8 * v19);
    ++v15;
    if (!v20)
    {
      int64_t v15 = v19 + 1;
      if (v19 + 1 >= v32) {
        goto LABEL_33;
      }
      unint64_t v20 = *(void *)(v31 + 8 * v15);
      if (!v20)
      {
        int64_t v15 = v19 + 2;
        if (v19 + 2 >= v32) {
          goto LABEL_33;
        }
        unint64_t v20 = *(void *)(v31 + 8 * v15);
        if (!v20) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v15 << 6);
LABEL_24:
    uint64_t v22 = *(void *)(v3 + 72);
    sub_251A81FF0(*(void *)(v6 + 48) + v22 * v18, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
    sub_251F36CA0();
    StaticMediaSystem.hash(into:)(v33);
    uint64_t result = sub_251F36D00();
    uint64_t v23 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v13 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v24) & ~*(void *)(v13 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v28 = v25 == v27;
        if (v25 == v27) {
          unint64_t v25 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v13 + 8 * v25);
      }
      while (v29 == -1);
      unint64_t v16 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(void *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    uint64_t result = sub_251A82058((uint64_t)v5, *(void *)(v8 + 48) + v16 * v22, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
    ++*(void *)(v8 + 16);
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v32)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v30;
    goto LABEL_35;
  }
  unint64_t v20 = *(void *)(v31 + 8 * v21);
  if (v20)
  {
    int64_t v15 = v21;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v15 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v15 >= v32) {
      goto LABEL_33;
    }
    unint64_t v20 = *(void *)(v31 + 8 * v15);
    ++v21;
    if (v20) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_251A78314()
{
  uint64_t v50 = type metadata accessor for StaticZone();
  uint64_t v49 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50);
  uint64_t v2 = (char *)&v42 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = v0;
  uint64_t v3 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D280);
  uint64_t v4 = sub_251F363D0();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
    uint64_t result = swift_release();
LABEL_40:
    *uint64_t v42 = v5;
    return result;
  }
  uint64_t v6 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v7 = *(void *)(v3 + 56);
  uint64_t v43 = v3 + 56;
  if (v6 < 64) {
    uint64_t v8 = ~(-1 << v6);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & v7;
  int64_t v44 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v45 = v4 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  uint64_t v48 = v5;
  uint64_t v47 = v3;
  uint64_t v46 = v2;
  while (1)
  {
    if (v9)
    {
      uint64_t v54 = (v9 - 1) & v9;
      int64_t v52 = v11;
      unint64_t v13 = __clz(__rbit64(v9)) | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    if (v14 >= v44) {
      goto LABEL_38;
    }
    unint64_t v15 = *(void *)(v43 + 8 * v14);
    int64_t v16 = v11 + 1;
    if (!v15)
    {
      int64_t v16 = v11 + 2;
      if (v11 + 2 >= v44) {
        goto LABEL_38;
      }
      unint64_t v15 = *(void *)(v43 + 8 * v16);
      if (!v15)
      {
        int64_t v16 = v11 + 3;
        if (v11 + 3 >= v44) {
          goto LABEL_38;
        }
        unint64_t v15 = *(void *)(v43 + 8 * v16);
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    uint64_t v54 = (v15 - 1) & v15;
    int64_t v52 = v16;
    unint64_t v13 = __clz(__rbit64(v15)) + (v16 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(v3 + 48);
    uint64_t v51 = *(void *)(v49 + 72);
    sub_251A81FF0(v18 + v51 * v13, (uint64_t)v2, (uint64_t (*)(void))type metadata accessor for StaticZone);
    sub_251F36CA0();
    uint64_t v19 = sub_251F34DA0();
    uint64_t v61 = sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
    sub_251F35610();
    uint64_t v20 = v50;
    sub_251F357B0();
    uint64_t v21 = *(void *)&v2[*(int *)(v20 + 24)];
    sub_251F36CB0();
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    uint64_t v53 = &v42;
    MEMORY[0x270FA5388](v22 - 8);
    unint64_t v24 = (char *)&v42 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v25 = *(void *)(v21 + 16);
    uint64_t v55 = *(void *)(v19 - 8);
    uint64_t v56 = v19 - 8;
    if (v25)
    {
      uint64_t v26 = v55;
      uint64_t v27 = v21 + ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80));
      BOOL v28 = *(void (**)(char *, uint64_t, uint64_t))(v55 + 16);
      uint64_t v59 = v55 + 16;
      uint64_t v60 = v28;
      uint64_t v29 = (void (**)(char *, void, uint64_t, uint64_t))(v55 + 56);
      uint64_t v30 = (uint64_t (**)(char *, uint64_t, uint64_t))(v55 + 48);
      uint64_t v57 = v55 + 8;
      uint64_t v58 = v55 + 32;
      uint64_t v31 = *(void *)(v55 + 72);
      while (1)
      {
        v60(v24, v27, v19);
        (*v29)(v24, 0, 1, v19);
        uint64_t v32 = (*v30)(v24, 1, v19);
        if (v32 == 1) {
          break;
        }
        MEMORY[0x270FA5388](v32);
        uint64_t v34 = (char *)&v42 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v34, v24, v19);
        sub_251F35610();
        (*(void (**)(char *, uint64_t))(v26 + 8))(v34, v19);
        v27 += v31;
        if (!--v25) {
          goto LABEL_28;
        }
      }
    }
    else
    {
LABEL_28:
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v55 + 56))(v24, 1, 1, v19);
    }
    uint64_t result = sub_251F36D00();
    uint64_t v5 = v48;
    uint64_t v35 = -1 << *(unsigned char *)(v48 + 32);
    unint64_t v36 = result & ~v35;
    unint64_t v37 = v36 >> 6;
    if (((-1 << v36) & ~*(void *)(v45 + 8 * (v36 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v36) & ~*(void *)(v45 + 8 * (v36 >> 6)))) | v36 & 0x7FFFFFFFFFFFFFC0;
      uint64_t v3 = v47;
      uint64_t v2 = v46;
      unint64_t v9 = v54;
    }
    else
    {
      char v38 = 0;
      unint64_t v39 = (unint64_t)(63 - v35) >> 6;
      uint64_t v3 = v47;
      uint64_t v2 = v46;
      unint64_t v9 = v54;
      do
      {
        if (++v37 == v39 && (v38 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v40 = v37 == v39;
        if (v37 == v39) {
          unint64_t v37 = 0;
        }
        v38 |= v40;
        uint64_t v41 = *(void *)(v45 + 8 * v37);
      }
      while (v41 == -1);
      unint64_t v12 = __clz(__rbit64(~v41)) + (v37 << 6);
    }
    *(void *)(v45 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    uint64_t result = sub_251A82058((uint64_t)v2, *(void *)(v5 + 48) + v12 * v51, (uint64_t (*)(void))type metadata accessor for StaticZone);
    ++*(void *)(v5 + 16);
    int64_t v11 = v52;
  }
  uint64_t v17 = v11 + 4;
  if (v11 + 4 >= v44)
  {
LABEL_38:
    uint64_t result = swift_release_n();
    goto LABEL_40;
  }
  unint64_t v15 = *(void *)(v43 + 8 * v17);
  if (v15)
  {
    int64_t v16 = v11 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v16 >= v44) {
      goto LABEL_38;
    }
    unint64_t v15 = *(void *)(v43 + 8 * v16);
    ++v17;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_251A78998()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F1A8);
  uint64_t result = sub_251F363D0();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    char v18 = *(unsigned char *)(*(void *)(v2 + 48) + v14);
    sub_251F36CA0();
    sub_251F36CB0();
    uint64_t result = sub_251F36D00();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_251A78C14()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D200);
  uint64_t result = sub_251F363D0();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_33:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  uint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (!v9)
    {
      int64_t v13 = v5 + 1;
      if (__OFADD__(v5, 1))
      {
LABEL_34:
        __break(1u);
        goto LABEL_35;
      }
      if (v13 >= v10) {
        goto LABEL_31;
      }
      uint64_t v9 = *(void *)(v6 + 8 * v13);
      ++v5;
      if (!v9)
      {
        int64_t v5 = v13 + 1;
        if (v13 + 1 >= v10) {
          goto LABEL_31;
        }
        uint64_t v9 = *(void *)(v6 + 8 * v5);
        if (!v9)
        {
          int64_t v5 = v13 + 2;
          if (v13 + 2 >= v10) {
            goto LABEL_31;
          }
          uint64_t v9 = *(void *)(v6 + 8 * v5);
          if (!v9) {
            break;
          }
        }
      }
    }
LABEL_22:
    sub_251F36CA0();
    sub_251F36CB0();
    uint64_t result = sub_251F36D00();
    uint64_t v15 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v11 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v16) & ~*(void *)(v11 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v18 = 0;
      unint64_t v19 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v19 && (v18 & 1) != 0)
        {
          __break(1u);
          goto LABEL_34;
        }
        BOOL v20 = v17 == v19;
        if (v17 == v19) {
          unint64_t v17 = 0;
        }
        v18 |= v20;
        uint64_t v21 = *(void *)(v11 + 8 * v17);
      }
      while (v21 == -1);
      unint64_t v12 = __clz(__rbit64(~v21)) + (v17 << 6);
    }
    v9 &= v9 - 1;
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    ++*(void *)(v4 + 16);
  }
  int64_t v14 = v13 + 3;
  if (v14 >= v10)
  {
LABEL_31:
    uint64_t result = swift_release();
    uint64_t v1 = v0;
    goto LABEL_33;
  }
  uint64_t v9 = *(void *)(v6 + 8 * v14);
  if (v9)
  {
    int64_t v5 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v5 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_31;
    }
    uint64_t v9 = *(void *)(v6 + 8 * v5);
    ++v14;
    if (v9) {
      goto LABEL_22;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}