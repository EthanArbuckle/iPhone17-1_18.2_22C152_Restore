uint64_t sub_251D8C4A0()
{
  void *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = *v0 + 536;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v1);
  return MEMORY[0x270FA2498](sub_251D8ECF4, 0, 0);
}

uint64_t sub_251D8C5C4()
{
  uint64_t v1 = *v0 + 760;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v1);
  return MEMORY[0x270FA2498](sub_251D8ECF4, 0, 0);
}

uint64_t sub_251D8C6E8()
{
  uint64_t v1 = *v0 + 856;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v1);
  return MEMORY[0x270FA2498](sub_251D8ECF4, 0, 0);
}

uint64_t sub_251D8C80C()
{
  uint64_t v1 = *v0 + 728;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v1);
  return MEMORY[0x270FA2498](sub_251D8ECF4, 0, 0);
}

uint64_t sub_251D8C930()
{
  uint64_t v1 = *v0 + 600;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v1);
  return MEMORY[0x270FA2498](sub_251D8CA54, 0, 0);
}

uint64_t sub_251D8CA54()
{
  sub_251D8DB20(*(void *)(v0 + 1032), (uint64_t (*)(void))type metadata accessor for StaticService);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251D8CB28()
{
  uint64_t v1 = *v0 + 472;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v1);
  return MEMORY[0x270FA2498](sub_251D8ECF4, 0, 0);
}

uint64_t sub_251D8CC4C()
{
  uint64_t v1 = *v0 + 376;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v1);
  return MEMORY[0x270FA2498](sub_251D8ECF4, 0, 0);
}

uint64_t sub_251D8CD70()
{
  uint64_t v1 = *v0 + 408;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v1);
  return MEMORY[0x270FA2498](sub_251D8ECF4, 0, 0);
}

uint64_t StaticServiceGroup.set(_:for:options:context:)(uint64_t a1, uint64_t a2, unsigned char *a3, uint64_t *a4, _OWORD *a5)
{
  *(void *)(v6 + 128) = a1;
  *(void *)(v6 + 136) = a2;
  *(unsigned char *)(v6 + 208) = *a3;
  uint64_t v7 = *a4;
  *(void *)(v6 + 144) = v5;
  *(void *)(v6 + 152) = v7;
  long long v8 = a5[1];
  *(_OWORD *)(v6 + 160) = *a5;
  *(_OWORD *)(v6 + 176) = v8;
  return MEMORY[0x270FA2498](sub_251D8CECC, 0, 0);
}

uint64_t sub_251D8CECC()
{
  long long v11 = *(_OWORD *)(v0 + 160);
  long long v12 = *(_OWORD *)(v0 + 176);
  uint64_t v1 = *(void *)(v0 + 152);
  char v2 = *(unsigned char *)(v0 + 208);
  uint64_t v3 = *(void *)(v0 + 136);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C600);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_251F38650;
  *(unsigned char *)(inited + 32) = v2;
  sub_251A0D51C(v3, inited + 40);
  unint64_t v5 = sub_2519FA2DC(inited);
  *(void *)(v0 + 192) = v5;
  *(void *)(v0 + 120) = v1;
  *(_OWORD *)(v0 + 88) = v11;
  *(_OWORD *)(v0 + 104) = v12;
  uint64_t v6 = swift_task_alloc();
  *(void *)(v0 + 200) = v6;
  *(void *)uint64_t v6 = v0;
  *(void *)(v6 + 8) = sub_2519F94AC;
  uint64_t v7 = *(void *)(v0 + 144);
  uint64_t v8 = *(void *)(v0 + 120);
  *(void *)(v6 + 384) = *(void *)(v0 + 128);
  *(void *)(v6 + 392) = v5;
  *(void *)(v6 + 400) = v7;
  *(void *)(v6 + 408) = v8;
  long long v9 = *(_OWORD *)(v0 + 104);
  *(_OWORD *)(v6 + 416) = *(_OWORD *)(v0 + 88);
  *(_OWORD *)(v6 + 432) = v9;
  return MEMORY[0x270FA2498](sub_251D8D040, 0, 0);
}

uint64_t StaticServiceGroup.set(for:options:context:)(uint64_t a1, uint64_t a2, uint64_t *a3, _OWORD *a4)
{
  *(void *)(v5 + 384) = a1;
  *(void *)(v5 + 392) = a2;
  uint64_t v6 = *a3;
  *(void *)(v5 + 400) = v4;
  *(void *)(v5 + 408) = v6;
  long long v7 = a4[1];
  *(_OWORD *)(v5 + 416) = *a4;
  *(_OWORD *)(v5 + 432) = v7;
  return MEMORY[0x270FA2498](sub_251D8D040, 0, 0);
}

uint64_t sub_251D8D040()
{
  uint64_t v52 = v0;
  v49 = (unsigned __int8 *)(v0 + 56);
  v46 = (_OWORD *)(v0 + 216);
  uint64_t v1 = (_OWORD *)(v0 + 248);
  char v2 = (_OWORD *)(v0 + 280);
  v48 = (_OWORD *)(v0 + 312);
  uint64_t v3 = *(void *)(v0 + 392);
  uint64_t v4 = *(void *)(v3 + 64);
  uint64_t v40 = v3 + 64;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(v3 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & v4;
  int64_t v41 = (unint64_t)(63 - v6) >> 6;
  v44 = (_OWORD *)(v0 + 184);
  uint64_t v42 = v0 + 144;
  uint64_t v43 = v0 + 64;
  v39 = (_OWORD *)(v0 + 104);
  uint64_t v45 = *(void *)(v0 + 392);
  uint64_t v8 = swift_bridgeObjectRetain();
  int64_t v11 = 0;
  long long v12 = (void *)MEMORY[0x263F8EE80];
  while (1)
  {
    *(void *)(v0 + 448) = v12;
    if (v7)
    {
      unint64_t v14 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      int64_t v47 = v11;
      unint64_t v15 = v14 | (v11 << 6);
    }
    else
    {
      int64_t v16 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_48;
      }
      if (v16 >= v41)
      {
LABEL_40:
        swift_release();
        *(void *)(v0 + 456) = sub_251F35C80();
        *(void *)(v0 + 464) = sub_251F35C70();
        uint64_t v35 = sub_251F35C00();
        uint64_t v37 = v36;
        uint64_t v8 = (uint64_t)sub_251D8D544;
        uint64_t v9 = v35;
        uint64_t v10 = v37;
        return MEMORY[0x270FA2498](v8, v9, v10);
      }
      unint64_t v17 = *(void *)(v40 + 8 * v16);
      int64_t v18 = v11 + 1;
      if (!v17)
      {
        int64_t v18 = v11 + 2;
        if (v11 + 2 >= v41) {
          goto LABEL_40;
        }
        unint64_t v17 = *(void *)(v40 + 8 * v18);
        if (!v17)
        {
          int64_t v18 = v11 + 3;
          if (v11 + 3 >= v41) {
            goto LABEL_40;
          }
          unint64_t v17 = *(void *)(v40 + 8 * v18);
          if (!v17)
          {
            int64_t v18 = v11 + 4;
            if (v11 + 4 >= v41) {
              goto LABEL_40;
            }
            unint64_t v17 = *(void *)(v40 + 8 * v18);
            if (!v17)
            {
              int64_t v18 = v11 + 5;
              if (v11 + 5 >= v41) {
                goto LABEL_40;
              }
              unint64_t v17 = *(void *)(v40 + 8 * v18);
              if (!v17)
              {
                uint64_t v19 = v11 + 6;
                if (v11 + 6 >= v41) {
                  goto LABEL_40;
                }
                unint64_t v17 = *(void *)(v40 + 8 * v19);
                if (!v17)
                {
                  while (1)
                  {
                    int64_t v18 = v19 + 1;
                    if (__OFADD__(v19, 1)) {
                      goto LABEL_49;
                    }
                    if (v18 >= v41) {
                      goto LABEL_40;
                    }
                    unint64_t v17 = *(void *)(v40 + 8 * v18);
                    ++v19;
                    if (v17) {
                      goto LABEL_25;
                    }
                  }
                }
                int64_t v18 = v11 + 6;
              }
            }
          }
        }
      }
LABEL_25:
      unint64_t v7 = (v17 - 1) & v17;
      int64_t v47 = v18;
      unint64_t v15 = __clz(__rbit64(v17)) + (v18 << 6);
    }
    char v20 = *(unsigned char *)(*(void *)(v45 + 48) + v15);
    sub_251A0D51C(*(void *)(v45 + 56) + 32 * v15, v0 + 24);
    *(unsigned char *)(v0 + 16) = v20;
    long long v21 = *(_OWORD *)(v0 + 32);
    *(_OWORD *)v49 = *(_OWORD *)(v0 + 16);
    *(_OWORD *)(v0 + 72) = v21;
    *(void *)(v0 + 88) = *(void *)(v0 + 48);
    sub_251B50D6C();
    unsigned __int8 v22 = *(unsigned char *)(v0 + 56);
    *(unsigned char *)(v0 + 176) = v22;
    sub_251A0D51C(v43, (uint64_t)v44);
    sub_251A0D578(v44, v46);
    unsigned __int8 v50 = v22;
    static HMService.convert(_:characteristicKind:)((uint64_t)v46, &v50, (uint64_t)v1);
    sub_251A1B064((uint64_t)v46, &qword_26B21E190);
    *(unsigned char *)(v0 + 136) = *(unsigned char *)(v0 + 56);
    sub_251A0D51C(v43, v42);
    if (*(void *)(v0 + 272))
    {
      sub_251A0D578(v1, v2);
    }
    else
    {
      sub_251A0D51C(v42, (uint64_t)v39);
      sub_251A0D578(v39, v2);
      sub_251A1B064((uint64_t)v1, &qword_26B21E190);
    }
    sub_251A1B064(v0 + 136, &qword_269B9C5F0);
    uint64_t v23 = *v49;
    v24 = v2;
    sub_251A0D51C((uint64_t)v2, (uint64_t)v48);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v51 = v12;
    unint64_t v26 = sub_2519FE568(v23);
    uint64_t v27 = v12[2];
    BOOL v28 = (v9 & 1) == 0;
    uint64_t v8 = v27 + v28;
    if (__OFADD__(v27, v28))
    {
      __break(1u);
LABEL_47:
      __break(1u);
LABEL_48:
      __break(1u);
LABEL_49:
      __break(1u);
      return MEMORY[0x270FA2498](v8, v9, v10);
    }
    char v29 = v9;
    if (v12[3] < v8) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      char v2 = v24;
      if (v9) {
        goto LABEL_4;
      }
    }
    else
    {
      sub_251A11E30();
      long long v12 = v51;
      char v2 = v24;
      if (v29)
      {
LABEL_4:
        uint64_t v13 = (_OWORD *)(v12[7] + 32 * v26);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v13);
        sub_251A0D578(v48, v13);
        goto LABEL_5;
      }
    }
LABEL_36:
    v12[(v26 >> 6) + 8] |= 1 << v26;
    *(unsigned char *)(v12[6] + v26) = v23;
    uint64_t v8 = (uint64_t)sub_251A0D578(v48, (_OWORD *)(v12[7] + 32 * v26));
    uint64_t v32 = v12[2];
    BOOL v33 = __OFADD__(v32, 1);
    uint64_t v34 = v32 + 1;
    if (v33) {
      goto LABEL_47;
    }
    v12[2] = v34;
LABEL_5:
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v2);
    uint64_t v8 = sub_251A1B064((uint64_t)v49, &qword_269B9C5F0);
    uint64_t v1 = (_OWORD *)(v0 + 248);
    int64_t v11 = v47;
  }
  sub_251A014E8(v8, isUniquelyReferenced_nonNull_native);
  long long v12 = v51;
  unint64_t v30 = sub_2519FE568(v23);
  if ((v29 & 1) == (v31 & 1))
  {
    unint64_t v26 = v30;
    char v2 = v24;
    if (v29) {
      goto LABEL_4;
    }
    goto LABEL_36;
  }
  return sub_251F36BA0();
}

uint64_t sub_251D8D544()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251D8D5DC, 0, 0);
}

uint64_t sub_251D8D5DC()
{
  *(void *)(v0 + 472) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251D8D668, v2, v1);
}

uint64_t sub_251D8D668()
{
  swift_release();
  *(void *)(v0 + 480) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251D8D6DC, 0, 0);
}

uint64_t sub_251D8D6DC()
{
  *(void *)(v0 + 488) = sub_251F34D50();
  *(void *)(v0 + 496) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251D8D774, v2, v1);
}

uint64_t sub_251D8D774()
{
  uint64_t v1 = (void *)v0[61];
  uint64_t v2 = (void *)v0[60];
  swift_release();
  v0[63] = objc_msgSend(v2, sel_serviceGroupFor_, v1);

  return MEMORY[0x270FA2498](sub_251D8D804, 0, 0);
}

uint64_t sub_251D8D804()
{
  uint64_t v1 = *(void **)(v0 + 504);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 408);
    id v3 = objc_msgSend(v1, sel_services);
    sub_251B50D6C();
    uint64_t v4 = sub_251F35AC0();
    *(void *)(v0 + 512) = v4;

    swift_bridgeObjectRetain();
    if ((v2 & 0x402) == 2)
    {
      uint64_t v5 = (void *)swift_task_alloc();
      *(void *)(v0 + 528) = v5;
      *uint64_t v5 = v0;
      v5[1] = sub_2519F76A4;
      uint64_t v6 = *(void *)(v0 + 448);
      uint64_t v7 = *(void *)(v0 + 384);
      return sub_251E1D578(v7, v4, v6);
    }
    else
    {
      long long v12 = *(_OWORD *)(v0 + 432);
      *(_OWORD *)(v0 + 344) = *(_OWORD *)(v0 + 416);
      *(_OWORD *)(v0 + 360) = v12;
      uint64_t v13 = (void *)swift_task_alloc();
      *(void *)(v0 + 520) = v13;
      *uint64_t v13 = v0;
      v13[1] = sub_2519F7508;
      uint64_t v14 = *(void *)(v0 + 448);
      uint64_t v15 = *(void *)(v0 + 384);
      return sub_251E1E460(v15, v0 + 376, (_OWORD *)(v0 + 344), v4, v14);
    }
  }
  else
  {
    uint64_t v9 = *(void *)(v0 + 384);
    uint64_t v10 = type metadata accessor for StateSnapshot(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
    swift_bridgeObjectRelease();
    int64_t v11 = *(uint64_t (**)(void))(v0 + 8);
    return v11();
  }
}

uint64_t sub_251D8DA14(void **a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for StaticService() - 8);
  id v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    id v3 = (void *)sub_251ECDC4C(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  uint64_t result = sub_251D8DB80(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_251D8DABC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticService();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_251D8DB20(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_251D8DB80(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for StaticService();
  uint64_t v132 = *(void *)(v4 - 8);
  uint64_t v133 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v129 = (uint64_t)&v123 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v140 = (uint64_t)&v123 - v8;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v137 = (uint64_t)&v123 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v136 = (uint64_t)&v123 - v11;
  uint64_t v12 = a1[1];
  uint64_t result = sub_251F36AA0();
  if (result >= v12)
  {
    if (v12 < 0) {
      goto LABEL_137;
    }
    if (v12) {
      return sub_251D8E590(0, v12, 1, a1);
    }
    return result;
  }
  if (v12 >= 0) {
    uint64_t v14 = v12;
  }
  else {
    uint64_t v14 = v12 + 1;
  }
  if (v12 < -1) {
    goto LABEL_145;
  }
  uint64_t v126 = result;
  if (v12 < 2)
  {
    int64_t v18 = (char *)MEMORY[0x263F8EE78];
    unint64_t v131 = MEMORY[0x263F8EE78]
         + ((*(unsigned __int8 *)(v132 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v132 + 80));
    uint64_t v125 = MEMORY[0x263F8EE78];
    if (v12 != 1)
    {
      unint64_t v20 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_103:
      v116 = v18;
      if (v20 >= 2)
      {
        uint64_t v117 = *a1;
        do
        {
          unint64_t v118 = v20 - 2;
          if (v20 < 2) {
            goto LABEL_132;
          }
          if (!v117) {
            goto LABEL_144;
          }
          uint64_t v119 = *(void *)&v116[16 * v118 + 32];
          uint64_t v120 = *(void *)&v116[16 * v20 + 24];
          sub_251D8E810(v117 + *(void *)(v132 + 72) * v119, v117 + *(void *)(v132 + 72) * *(void *)&v116[16 * v20 + 16], v117 + *(void *)(v132 + 72) * v120, v131);
          if (v2) {
            break;
          }
          if (v120 < v119) {
            goto LABEL_133;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            v116 = sub_251ECDC38((uint64_t)v116);
          }
          if (v118 >= *((void *)v116 + 2)) {
            goto LABEL_134;
          }
          v121 = &v116[16 * v118 + 32];
          *(void *)v121 = v119;
          *((void *)v121 + 1) = v120;
          unint64_t v122 = *((void *)v116 + 2);
          if (v20 > v122) {
            goto LABEL_135;
          }
          memmove(&v116[16 * v20 + 16], &v116[16 * v20 + 32], 16 * (v122 - v20));
          *((void *)v116 + 2) = v122 - 1;
          unint64_t v20 = v122 - 1;
        }
        while (v122 > 2);
      }
LABEL_114:
      swift_bridgeObjectRelease();
      *(void *)(v125 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v15 = v14 >> 1;
    uint64_t v16 = sub_251F35B50();
    *(void *)(v16 + 16) = v15;
    uint64_t v17 = *(unsigned __int8 *)(v132 + 80);
    uint64_t v125 = v16;
    unint64_t v131 = v16 + ((v17 + 32) & ~v17);
  }
  uint64_t v19 = 0;
  int64_t v18 = (char *)MEMORY[0x263F8EE78];
  v138 = a1;
  while (1)
  {
    uint64_t v21 = v19;
    uint64_t v22 = v19 + 1;
    uint64_t v130 = v19;
    if (v19 + 1 >= v12)
    {
      uint64_t v31 = v19 + 1;
      uint64_t v39 = v19;
    }
    else
    {
      uint64_t v23 = *(void *)(v132 + 72);
      uint64_t v24 = *a1 + v23 * v22;
      uint64_t v134 = *a1;
      uint64_t v25 = v134;
      uint64_t v139 = v12;
      uint64_t v26 = v136;
      sub_251BB1974(v24, v136, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v27 = v25 + v23 * v21;
      uint64_t v28 = v137;
      sub_251BB1974(v27, v137, (uint64_t (*)(void))type metadata accessor for StaticService);
      LODWORD(v135) = MEMORY[0x2533A9CA0](v26, v28);
      sub_251D8DB20(v28, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v29 = v26;
      uint64_t v12 = v139;
      sub_251D8DB20(v29, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v30 = v23;
      uint64_t v31 = v21 + 2;
      uint64_t v141 = v30;
      if (v21 + 2 < v12)
      {
        uint64_t v124 = v2;
        v127 = v18;
        uint64_t v32 = v30 * v22;
        uint64_t v33 = v134;
        uint64_t v34 = v30 * v31;
        while (1)
        {
          uint64_t v35 = v31;
          uint64_t v36 = v136;
          sub_251BB1974(v33 + v34, v136, (uint64_t (*)(void))type metadata accessor for StaticService);
          uint64_t v37 = v137;
          sub_251BB1974(v33 + v32, v137, (uint64_t (*)(void))type metadata accessor for StaticService);
          int v38 = MEMORY[0x2533A9CA0](v36, v37);
          sub_251D8DB20(v37, (uint64_t (*)(void))type metadata accessor for StaticService);
          sub_251D8DB20(v36, (uint64_t (*)(void))type metadata accessor for StaticService);
          if ((v135 ^ v38)) {
            break;
          }
          uint64_t v31 = v35 + 1;
          v33 += v141;
          uint64_t v12 = v139;
          if (v139 == v35 + 1)
          {
            uint64_t v31 = v139;
            int64_t v18 = v127;
            uint64_t v2 = v124;
            goto LABEL_23;
          }
        }
        int64_t v18 = v127;
        uint64_t v31 = v35;
        uint64_t v2 = v124;
        uint64_t v12 = v139;
      }
LABEL_23:
      uint64_t v39 = v130;
      if (v135)
      {
        if (v31 < v130) {
          goto LABEL_138;
        }
        if (v130 < v31)
        {
          v127 = v18;
          uint64_t v40 = 0;
          uint64_t v41 = v141;
          uint64_t v42 = v141 * (v31 - 1);
          uint64_t v43 = v31 * v141;
          uint64_t v44 = v130 * v141;
          do
          {
            if (v39 != v31 + v40 - 1)
            {
              uint64_t v46 = v31;
              uint64_t v47 = v134;
              if (!v134) {
                goto LABEL_143;
              }
              unint64_t v48 = v134 + v44;
              uint64_t v135 = v134 + v42;
              sub_251D8DABC(v134 + v44, v129);
              if (v44 < v42 || v48 >= v47 + v43)
              {
                uint64_t v45 = v135;
                swift_arrayInitWithTakeFrontToBack();
              }
              else
              {
                uint64_t v45 = v135;
                if (v44 != v42) {
                  swift_arrayInitWithTakeBackToFront();
                }
              }
              sub_251D8DABC(v129, v45);
              uint64_t v31 = v46;
              uint64_t v41 = v141;
            }
            ++v39;
            --v40;
            v42 -= v41;
            v43 -= v41;
            v44 += v41;
          }
          while (v39 < v31 + v40);
          a1 = v138;
          uint64_t v12 = v139;
          int64_t v18 = v127;
          uint64_t v39 = v130;
        }
      }
    }
    if (v31 < v12)
    {
      if (__OFSUB__(v31, v39)) {
        goto LABEL_136;
      }
      if (v31 - v39 < v126) {
        break;
      }
    }
LABEL_55:
    if (v31 < v39) {
      goto LABEL_131;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v139 = v31;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      int64_t v18 = sub_251ECD5C4(0, *((void *)v18 + 2) + 1, 1, v18);
    }
    unint64_t v65 = *((void *)v18 + 2);
    unint64_t v64 = *((void *)v18 + 3);
    unint64_t v20 = v65 + 1;
    if (v65 >= v64 >> 1) {
      int64_t v18 = sub_251ECD5C4((char *)(v64 > 1), v65 + 1, 1, v18);
    }
    *((void *)v18 + 2) = v20;
    v66 = v18 + 32;
    v67 = &v18[16 * v65 + 32];
    uint64_t v68 = v139;
    *(void *)v67 = v130;
    *((void *)v67 + 1) = v68;
    if (v65)
    {
      while (1)
      {
        unint64_t v69 = v20 - 1;
        if (v20 >= 4)
        {
          v74 = &v66[16 * v20];
          uint64_t v75 = *((void *)v74 - 8);
          uint64_t v76 = *((void *)v74 - 7);
          BOOL v80 = __OFSUB__(v76, v75);
          uint64_t v77 = v76 - v75;
          if (v80) {
            goto LABEL_120;
          }
          uint64_t v79 = *((void *)v74 - 6);
          uint64_t v78 = *((void *)v74 - 5);
          BOOL v80 = __OFSUB__(v78, v79);
          uint64_t v72 = v78 - v79;
          char v73 = v80;
          if (v80) {
            goto LABEL_121;
          }
          unint64_t v81 = v20 - 2;
          v82 = &v66[16 * v20 - 32];
          uint64_t v84 = *(void *)v82;
          uint64_t v83 = *((void *)v82 + 1);
          BOOL v80 = __OFSUB__(v83, v84);
          uint64_t v85 = v83 - v84;
          if (v80) {
            goto LABEL_123;
          }
          BOOL v80 = __OFADD__(v72, v85);
          uint64_t v86 = v72 + v85;
          if (v80) {
            goto LABEL_126;
          }
          if (v86 >= v77)
          {
            v104 = &v66[16 * v69];
            uint64_t v106 = *(void *)v104;
            uint64_t v105 = *((void *)v104 + 1);
            BOOL v80 = __OFSUB__(v105, v106);
            uint64_t v107 = v105 - v106;
            if (v80) {
              goto LABEL_130;
            }
            BOOL v97 = v72 < v107;
            goto LABEL_92;
          }
        }
        else
        {
          if (v20 != 3)
          {
            uint64_t v98 = *((void *)v18 + 4);
            uint64_t v99 = *((void *)v18 + 5);
            BOOL v80 = __OFSUB__(v99, v98);
            uint64_t v91 = v99 - v98;
            char v92 = v80;
            goto LABEL_86;
          }
          uint64_t v71 = *((void *)v18 + 4);
          uint64_t v70 = *((void *)v18 + 5);
          BOOL v80 = __OFSUB__(v70, v71);
          uint64_t v72 = v70 - v71;
          char v73 = v80;
        }
        if (v73) {
          goto LABEL_122;
        }
        unint64_t v81 = v20 - 2;
        v87 = &v66[16 * v20 - 32];
        uint64_t v89 = *(void *)v87;
        uint64_t v88 = *((void *)v87 + 1);
        BOOL v90 = __OFSUB__(v88, v89);
        uint64_t v91 = v88 - v89;
        char v92 = v90;
        if (v90) {
          goto LABEL_125;
        }
        v93 = &v66[16 * v69];
        uint64_t v95 = *(void *)v93;
        uint64_t v94 = *((void *)v93 + 1);
        BOOL v80 = __OFSUB__(v94, v95);
        uint64_t v96 = v94 - v95;
        if (v80) {
          goto LABEL_128;
        }
        if (__OFADD__(v91, v96)) {
          goto LABEL_129;
        }
        if (v91 + v96 >= v72)
        {
          BOOL v97 = v72 < v96;
LABEL_92:
          if (v97) {
            unint64_t v69 = v81;
          }
          goto LABEL_94;
        }
LABEL_86:
        if (v92) {
          goto LABEL_124;
        }
        v100 = &v66[16 * v69];
        uint64_t v102 = *(void *)v100;
        uint64_t v101 = *((void *)v100 + 1);
        BOOL v80 = __OFSUB__(v101, v102);
        uint64_t v103 = v101 - v102;
        if (v80) {
          goto LABEL_127;
        }
        if (v103 < v91) {
          goto LABEL_14;
        }
LABEL_94:
        unint64_t v108 = v69 - 1;
        if (v69 - 1 >= v20)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        uint64_t v109 = *a1;
        if (!*a1) {
          goto LABEL_142;
        }
        v110 = v18;
        v111 = &v66[16 * v108];
        uint64_t v112 = *(void *)v111;
        v113 = &v66[16 * v69];
        uint64_t v114 = *((void *)v113 + 1);
        sub_251D8E810(v109 + *(void *)(v132 + 72) * *(void *)v111, v109 + *(void *)(v132 + 72) * *(void *)v113, v109 + *(void *)(v132 + 72) * v114, v131);
        if (v2) {
          goto LABEL_114;
        }
        if (v114 < v112) {
          goto LABEL_117;
        }
        if (v69 > *((void *)v110 + 2)) {
          goto LABEL_118;
        }
        *(void *)v111 = v112;
        *(void *)&v66[16 * v108 + 8] = v114;
        unint64_t v115 = *((void *)v110 + 2);
        if (v69 >= v115) {
          goto LABEL_119;
        }
        int64_t v18 = v110;
        unint64_t v20 = v115 - 1;
        memmove(&v66[16 * v69], v113 + 16, 16 * (v115 - 1 - v69));
        *((void *)v110 + 2) = v115 - 1;
        a1 = v138;
        if (v115 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v20 = 1;
LABEL_14:
    uint64_t v12 = a1[1];
    uint64_t v19 = v139;
    if (v139 >= v12) {
      goto LABEL_103;
    }
  }
  if (__OFADD__(v39, v126)) {
    goto LABEL_139;
  }
  if (v39 + v126 >= v12) {
    uint64_t v49 = v12;
  }
  else {
    uint64_t v49 = v39 + v126;
  }
  if (v49 >= v39)
  {
    if (v31 != v49)
    {
      v127 = v18;
      uint64_t v128 = v49;
      uint64_t v124 = v2;
      uint64_t v50 = *(void *)(v132 + 72);
      uint64_t v51 = v50 * (v31 - 1);
      uint64_t v134 = v50;
      uint64_t v52 = v31 * v50;
      do
      {
        uint64_t v54 = 0;
        uint64_t v139 = v31;
        uint64_t v135 = v52;
        while (1)
        {
          uint64_t v141 = v39;
          uint64_t v55 = *a1;
          uint64_t v56 = v52 + v54 + *a1;
          uint64_t v57 = v136;
          sub_251BB1974(v56, v136, (uint64_t (*)(void))type metadata accessor for StaticService);
          uint64_t v58 = v51;
          uint64_t v59 = v51 + v54 + v55;
          uint64_t v60 = v137;
          sub_251BB1974(v59, v137, (uint64_t (*)(void))type metadata accessor for StaticService);
          LOBYTE(v55) = MEMORY[0x2533A9CA0](v57, v60);
          sub_251D8DB20(v60, (uint64_t (*)(void))type metadata accessor for StaticService);
          sub_251D8DB20(v57, (uint64_t (*)(void))type metadata accessor for StaticService);
          if ((v55 & 1) == 0) {
            break;
          }
          uint64_t v61 = *a1;
          if (!*a1) {
            goto LABEL_141;
          }
          uint64_t v52 = v135;
          uint64_t v51 = v58;
          uint64_t v62 = v61 + v58 + v54;
          sub_251D8DABC(v61 + v135 + v54, v140);
          swift_arrayInitWithTakeFrontToBack();
          sub_251D8DABC(v140, v62);
          v54 -= v134;
          uint64_t v39 = v141 + 1;
          a1 = v138;
          uint64_t v53 = v139;
          if (v139 == v141 + 1) {
            goto LABEL_48;
          }
        }
        uint64_t v53 = v139;
        uint64_t v51 = v58;
        uint64_t v52 = v135;
LABEL_48:
        uint64_t v31 = v53 + 1;
        v51 += v134;
        v52 += v134;
        uint64_t v39 = v130;
      }
      while (v31 != v128);
      uint64_t v31 = v128;
      uint64_t v2 = v124;
      int64_t v18 = v127;
    }
    goto LABEL_55;
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  uint64_t result = sub_251F36670();
  __break(1u);
  return result;
}

uint64_t sub_251D8E590(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v25 = a1;
  uint64_t v26 = type metadata accessor for StaticService();
  uint64_t v7 = MEMORY[0x270FA5388](v26);
  uint64_t v29 = (uint64_t)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v23 - v10;
  uint64_t result = MEMORY[0x270FA5388](v9);
  uint64_t v15 = (char *)&v23 - v14;
  uint64_t v28 = a3;
  uint64_t v24 = a2;
  if (a3 != a2)
  {
    uint64_t v16 = *(void *)(v13 + 72);
    uint64_t v31 = v16 * (v28 - 1);
    uint64_t v27 = v16;
    uint64_t v30 = v16 * v28;
LABEL_5:
    uint64_t v17 = 0;
    uint64_t v18 = v25;
    while (1)
    {
      uint64_t v19 = *a4;
      unint64_t v20 = a4;
      sub_251BB1974(v30 + v17 + *a4, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for StaticService);
      sub_251BB1974(v31 + v17 + v19, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticService);
      LOBYTE(v19) = MEMORY[0x2533A9CA0](v15, v11);
      sub_251D8DB20((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t result = sub_251D8DB20((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for StaticService);
      if ((v19 & 1) == 0)
      {
LABEL_4:
        v31 += v27;
        v30 += v27;
        if (++v28 == v24) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v21 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v22 = v21 + v31 + v17;
      sub_251D8DABC(v21 + v30 + v17, v29);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = sub_251D8DABC(v29, v22);
      v17 -= v27;
      ++v18;
      a4 = v20;
      if (v28 == v18) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_251D8E810(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v43 = type metadata accessor for StaticService();
  uint64_t v8 = MEMORY[0x270FA5388](v43);
  uint64_t v44 = (uint64_t)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v40 - v10;
  uint64_t v13 = *(void *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  if (a2 - a1 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_61;
  }
  int64_t v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_62;
  }
  uint64_t v15 = (uint64_t)(a2 - a1) / v13;
  unint64_t v47 = a1;
  unint64_t v46 = a4;
  uint64_t v16 = v14 / v13;
  if (v15 >= v14 / v13)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      uint64_t v18 = v16 * v13;
      if (a4 < a2 || a2 + v18 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v26 = a4 + v18;
      unint64_t v45 = a4 + v18;
      unint64_t v47 = a2;
      if (v18 >= 1 && a1 < a2)
      {
        unint64_t v41 = a4;
        unint64_t v42 = a1;
        do
        {
          unint64_t v28 = a3 - v13;
          sub_251BB1974(v26 - v13, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticService);
          unint64_t v29 = a2 - v13;
          unint64_t v30 = a3;
          uint64_t v31 = (uint64_t)v11;
          uint64_t v32 = v44;
          sub_251BB1974(a2 - v13, v44, (uint64_t (*)(void))type metadata accessor for StaticService);
          char v33 = MEMORY[0x2533A9CA0](v31, v32);
          uint64_t v34 = v32;
          uint64_t v11 = (char *)v31;
          sub_251D8DB20(v34, (uint64_t (*)(void))type metadata accessor for StaticService);
          sub_251D8DB20(v31, (uint64_t (*)(void))type metadata accessor for StaticService);
          if (v33)
          {
            if (v30 < a2 || v28 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v36 = v41;
              unint64_t v37 = v42;
            }
            else
            {
              BOOL v35 = v30 == a2;
              unint64_t v36 = v41;
              unint64_t v37 = v42;
              if (!v35) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v47 -= v13;
          }
          else
          {
            unint64_t v38 = v45;
            v45 -= v13;
            if (v30 < v38 || v28 >= v38)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v29 = a2;
              unint64_t v36 = v41;
              unint64_t v37 = v42;
            }
            else
            {
              unint64_t v37 = v42;
              if (v30 != v38) {
                swift_arrayInitWithTakeBackToFront();
              }
              unint64_t v29 = a2;
              unint64_t v36 = v41;
            }
          }
          unint64_t v26 = v45;
          if (v45 <= v36) {
            break;
          }
          a2 = v29;
          a3 = v28;
        }
        while (v29 > v37);
      }
      goto LABEL_59;
    }
  }
  else if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v17 = v15 * v13;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v19 = a4 + v17;
    unint64_t v45 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      do
      {
        sub_251BB1974(a2, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticService);
        uint64_t v21 = v44;
        sub_251BB1974(a4, v44, (uint64_t (*)(void))type metadata accessor for StaticService);
        char v22 = MEMORY[0x2533A9CA0](v11, v21);
        sub_251D8DB20(v21, (uint64_t (*)(void))type metadata accessor for StaticService);
        sub_251D8DB20((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticService);
        unint64_t v23 = v47;
        if (v22)
        {
          unint64_t v24 = a2 + v13;
          if (v47 < a2 || v47 >= v24)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v47 == a2)
          {
            unint64_t v23 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          unint64_t v25 = v46 + v13;
          if (v47 < v46 || v47 >= v25)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v47 != v46)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v46 = v25;
          unint64_t v24 = a2;
        }
        unint64_t v47 = v23 + v13;
        a4 = v46;
        if (v46 >= v19) {
          break;
        }
        a2 = v24;
      }
      while (v24 < a3);
    }
LABEL_59:
    sub_251ECD6C0(&v47, &v46, (uint64_t *)&v45);
    return 1;
  }
LABEL_63:
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

_OWORD *static HMService.convert(_:characteristicKind:)@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>)
{
  int v4 = *a2;
  sub_251AA82A4(a1, (uint64_t)&v9);
  if (v10)
  {
    sub_251A0D578(&v9, v11);
    if (v4 > 148)
    {
      if (v4 == 149 || v4 == 156) {
        goto LABEL_16;
      }
      if (v4 != 158) {
        return sub_251A0D578(v11, (_OWORD *)a3);
      }
      sub_251A0D51C((uint64_t)v11, (uint64_t)&v9);
      uint64_t result = (_OWORD *)swift_dynamicCast();
      if (result)
      {
        double v6 = v8;
        if ((~*(void *)&v8 & 0x7FF0000000000000) != 0)
        {
          if (v8 > -9.22337204e18)
          {
            if (v8 >= 9.22337204e18)
            {
              __break(1u);
              goto LABEL_16;
            }
LABEL_24:
            uint64_t v7 = (uint64_t)v6;
            goto LABEL_25;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
        goto LABEL_32;
      }
    }
    else
    {
      if (v4 == 3)
      {
        sub_251A0D51C((uint64_t)v11, (uint64_t)&v9);
        if (swift_dynamicCast())
        {
          uint64_t v7 = LOBYTE(v8);
          goto LABEL_25;
        }
        goto LABEL_26;
      }
      if (v4 != 12)
      {
        if (v4 != 114) {
          return sub_251A0D578(v11, (_OWORD *)a3);
        }
LABEL_16:
        sub_251A0D51C((uint64_t)v11, (uint64_t)&v9);
        if (swift_dynamicCast())
        {
          uint64_t v7 = (LOBYTE(v8) & 1) == 0;
LABEL_25:
          *(void *)(a3 + 24) = MEMORY[0x263F8D6C8];
          *(void *)a3 = v7;
          return (_OWORD *)__swift_destroy_boxed_opaque_existential_0((uint64_t)v11);
        }
        goto LABEL_26;
      }
      sub_251A0D51C((uint64_t)v11, (uint64_t)&v9);
      uint64_t result = (_OWORD *)swift_dynamicCast();
      if (result)
      {
        double v6 = v8;
        if ((~*(void *)&v8 & 0x7FF0000000000000) != 0)
        {
          if (v8 > -9.22337204e18)
          {
            if (v8 < 9.22337204e18) {
              goto LABEL_24;
            }
LABEL_34:
            __break(1u);
            return result;
          }
LABEL_33:
          __break(1u);
          goto LABEL_34;
        }
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
    }
LABEL_26:
    uint64_t result = (_OWORD *)__swift_destroy_boxed_opaque_existential_0((uint64_t)v11);
    goto LABEL_27;
  }
  uint64_t result = (_OWORD *)sub_251A9090C((uint64_t)&v9);
LABEL_27:
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  return result;
}

HMCharacteristic_optional __swiftcall HMService.characteristic(for:)(HomeDataModel::CharacteristicKind a1)
{
  uint64_t v1 = (objc_class *)HMService.subscript.getter();
  result.value.super.isa = v1;
  result.is_nil = v2;
  return result;
}

uint64_t sub_251D8EF64(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  int64_t v3 = 0;
  uint64_t v15 = a2;
  uint64_t v4 = result + 56;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v8) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      int64_t v3 = v11 + 1;
      if (v11 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v12 = *(void *)(v4 + 8 * v3);
      if (!v12)
      {
        int64_t v3 = v11 + 2;
        if (v11 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v12 = *(void *)(v4 + 8 * v3);
        if (!v12)
        {
          int64_t v3 = v11 + 3;
          if (v11 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v12 = *(void *)(v4 + 8 * v3);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_5:
    HMCharacteristic_optional result = sub_251A66ED4(&v14, *(unsigned __int8 *)(*(void *)(v2 + 48) + v10));
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v8)
  {
LABEL_23:
    swift_release();
    return v15;
  }
  unint64_t v12 = *(void *)(v4 + 8 * v13);
  if (v12)
  {
    int64_t v3 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v3);
    ++v13;
    if (v12) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_251D8F0C0(uint64_t a1, uint64_t a2)
{
  uint64_t v29 = a1;
  uint64_t v30 = a2;
  uint64_t v2 = *(void *)(a1 + 56);
  uint64_t v27 = a1 + 56;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  v26[1] = v26;
  uint64_t result = MEMORY[0x270FA5388](v6 - 8);
  unint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = 0;
  int64_t v28 = (unint64_t)(v3 + 63) >> 6;
  if (!v5) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  for (unint64_t i = v11 | (v10 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v10 << 6))
  {
    uint64_t v16 = *(void *)(v29 + 48);
    uint64_t v17 = sub_251F34DA0();
    uint64_t v18 = *(void *)(v17 - 8);
    (*(void (**)(char *, unint64_t, uint64_t))(v18 + 16))(v9, v16 + *(void *)(v18 + 72) * i, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v9, 0, 1, v17);
    uint64_t v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48))(v9, 1, v17);
    if (v19 == 1) {
      goto LABEL_25;
    }
    uint64_t v20 = MEMORY[0x270FA5388](v19);
    char v22 = (char *)v26 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
    MEMORY[0x270FA5388](v20);
    unint64_t v24 = (char *)v26 - v23;
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))((char *)v26 - v23, v9, v17);
    sub_251A637B8(v22, v24);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v22, v17);
    if (v5) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v13 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v13 >= v28) {
      goto LABEL_24;
    }
    unint64_t v14 = *(void *)(v27 + 8 * v13);
    ++v10;
    if (!v14)
    {
      int64_t v10 = v13 + 1;
      if (v13 + 1 >= v28) {
        goto LABEL_24;
      }
      unint64_t v14 = *(void *)(v27 + 8 * v10);
      if (!v14)
      {
        int64_t v10 = v13 + 2;
        if (v13 + 2 >= v28) {
          goto LABEL_24;
        }
        unint64_t v14 = *(void *)(v27 + 8 * v10);
        if (!v14)
        {
          int64_t v10 = v13 + 3;
          if (v13 + 3 >= v28) {
            goto LABEL_24;
          }
          unint64_t v14 = *(void *)(v27 + 8 * v10);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_20:
    unint64_t v5 = (v14 - 1) & v14;
  }
  int64_t v15 = v13 + 4;
  if (v15 >= v28)
  {
LABEL_24:
    uint64_t v25 = sub_251F34DA0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v9, 1, 1, v25);
LABEL_25:
    swift_release();
    return v30;
  }
  unint64_t v14 = *(void *)(v27 + 8 * v15);
  if (v14)
  {
    int64_t v10 = v15;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v10 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v10 >= v28) {
      goto LABEL_24;
    }
    unint64_t v14 = *(void *)(v27 + 8 * v10);
    ++v15;
    if (v14) {
      goto LABEL_20;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t HMService.supportedCharacteristicKinds.getter()
{
  uint64_t v1 = v0;
  id v2 = objc_msgSend(v0, sel_serviceType);
  uint64_t v3 = sub_251F356F0();
  unint64_t v5 = v4;

  v6._countAndFlagsBits = v3;
  v6._object = v5;
  ServiceKind.init(rawValue:)(v6);
  uint64_t v7 = ServiceKind.requiredCharacteristicKinds.getter();
  id v8 = objc_msgSend(v1, sel_serviceType);
  uint64_t v9 = sub_251F356F0();
  unint64_t v11 = v10;

  v12._countAndFlagsBits = v9;
  v12._object = v11;
  ServiceKind.init(rawValue:)(v12);
  uint64_t v13 = ServiceKind.optionalCharacteristicKinds.getter();
  return sub_251D8EF64(v13, v7);
}

void *HMService.subscript.getter()
{
  id v1 = objc_msgSend(v0, sel_characteristics);
  sub_251AC7B2C();
  unint64_t v2 = sub_251F35AC0();

  if (v2 >> 62) {
    goto LABEL_17;
  }
  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; uint64_t v3 = sub_251F366C0())
  {
    uint64_t v4 = 4;
    while (1)
    {
      id v5 = (v2 & 0xC000000000000001) != 0 ? (id)MEMORY[0x2533AB3A0](v4 - 4, v2) : *(id *)(v2 + 8 * v4);
      Swift::String v6 = v5;
      uint64_t v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1)) {
        break;
      }
      id v8 = objc_msgSend(v5, sel_characteristicType);
      uint64_t v9 = sub_251F356F0();
      unint64_t v11 = v10;

      v12._countAndFlagsBits = v9;
      v12._object = v11;
      CharacteristicKind.init(rawValue:)(v12);
      unint64_t v13 = CharacteristicKind.rawValue.getter();
      uint64_t v15 = v14;
      if (v13 == CharacteristicKind.rawValue.getter() && v15 == v16)
      {
        swift_bridgeObjectRelease_n();
LABEL_14:
        swift_bridgeObjectRelease_n();
        return v6;
      }
      char v17 = sub_251F36B10();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v17) {
        goto LABEL_14;
      }

      ++v4;
      if (v7 == v3) {
        goto LABEL_12;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
LABEL_12:
  swift_bridgeObjectRelease_n();
  return 0;
}

HomeDataModel::ServiceKind_optional HMService.serviceKind.getter@<W0>(unsigned char *a1@<X8>)
{
  id v3 = objc_msgSend(v1, sel_serviceType);
  uint64_t v4 = sub_251F356F0();
  Swift::String v6 = v5;

  v7._countAndFlagsBits = v4;
  v7._object = v6;
  result.value = ServiceKind.init(rawValue:)(v7).value;
  char v9 = v10;
  if (v10 == 53) {
    char v9 = 0;
  }
  *a1 = v9;
  return result;
}

char HMService.associatedServiceKind.getter@<W0>(char *a1@<X8>)
{
  id v3 = objc_msgSend(v1, sel_associatedServiceType);
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = sub_251F356F0();
    Swift::String v7 = v6;

    v8._countAndFlagsBits = v5;
    v8._object = v7;
    LOBYTE(v3) = ServiceKind.init(rawValue:)(v8);
    char v9 = v11;
    if (v11 == 53) {
      char v9 = 0;
    }
  }
  else
  {
    char v9 = 53;
  }
  *a1 = v9;
  return (char)v3;
}

char HMService.serviceSubKind.getter@<W0>(unsigned char *a1@<X8>)
{
  id v3 = objc_msgSend(v1, sel_serviceSubtype);
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = sub_251F356F0();
    Swift::String v7 = v6;

    v8._countAndFlagsBits = v5;
    v8._object = v7;
    LOBYTE(v3) = ServiceSubKind.init(rawValue:)(v8);
    char v9 = v11;
    if (v11 == 5) {
      char v9 = 0;
    }
  }
  else
  {
    char v9 = 0;
  }
  *a1 = v9;
  return (char)v3;
}

uint64_t HMService.fetchedValue(for:)(uint64_t a1, unsigned char *a2)
{
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v2;
  *(unsigned char *)(v3 + 48) = *a2;
  return MEMORY[0x270FA2498](sub_251D8F8EC, 0, 0);
}

uint64_t sub_251D8F8EC()
{
  id v1 = HMService.subscript.getter();
  v0[4] = v1;
  if (v1)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    v0[5] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_251D8F9E0;
    uint64_t v3 = v0[2];
    return HMCharacteristic.fetchedValue()(v3);
  }
  else
  {
    uint64_t v5 = (_OWORD *)v0[2];
    *uint64_t v5 = 0u;
    v5[1] = 0u;
    Swift::String v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
}

uint64_t sub_251D8F9E0()
{
  id v1 = *(void **)(*v0 + 32);
  uint64_t v4 = *v0;
  swift_task_dealloc();

  uint64_t v2 = *(uint64_t (**)(void))(v4 + 8);
  return v2();
}

void HMService.cachedValue(for:)(unsigned char *a1@<X0>, _OWORD *a2@<X8>)
{
  LOBYTE(v5[0]) = *a1;
  uint64_t v3 = HMService.subscript.getter();
  if (v3)
  {
    uint64_t v4 = v3;
    if (objc_msgSend(v3, sel_value, *(void *)&v5[0]))
    {
      sub_251F36240();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v5, 0, sizeof(v5));
    }
    sub_251ABBD00((uint64_t)v5, (uint64_t)a2);
  }
  else
  {
    *a2 = 0u;
    a2[1] = 0u;
  }
}

uint64_t HMService.BOOL(for:)(unsigned char *a1)
{
  *(void *)(v2 + 48) = v1;
  *(unsigned char *)(v2 + 73) = *a1;
  return MEMORY[0x270FA2498](sub_251D8FBB0, 0, 0);
}

uint64_t sub_251D8FBB0()
{
  uint64_t v1 = HMService.subscript.getter();
  *(void *)(v0 + 56) = v1;
  if (v1)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 64) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_251D8FCBC;
    return HMCharacteristic.fetchedValue()(v0 + 16);
  }
  else
  {
    *(_OWORD *)(v0 + 16) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
    sub_251A9090C(v0 + 16);
    uint64_t v4 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v4(2);
  }
}

uint64_t sub_251D8FCBC()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 56);
  swift_task_dealloc();

  return MEMORY[0x270FA2498](sub_251D8FDD0, 0, 0);
}

uint64_t sub_251D8FDD0()
{
  if (*(void *)(v0 + 40))
  {
    if (swift_dynamicCast()) {
      uint64_t v1 = *(unsigned __int8 *)(v0 + 72);
    }
    else {
      uint64_t v1 = 2;
    }
  }
  else
  {
    sub_251A9090C(v0 + 16);
    uint64_t v1 = 2;
  }
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

Swift::Bool_optional __swiftcall HMService.cachedBool(for:)(HomeDataModel::CharacteristicKind a1)
{
  LOBYTE(v5) = *(unsigned char *)a1;
  uint64_t v1 = HMService.subscript.getter();
  if (!v1)
  {
    long long v5 = 0u;
    long long v6 = 0u;
LABEL_10:
    sub_251A9090C((uint64_t)&v5);
    return (Swift::Bool_optional)2;
  }
  uint64_t v2 = v1;
  if (objc_msgSend(v1, sel_value))
  {
    sub_251F36240();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v4, 0, sizeof(v4));
  }
  sub_251ABBD00((uint64_t)v4, (uint64_t)&v5);

  if (!*((void *)&v6 + 1)) {
    goto LABEL_10;
  }
  if (swift_dynamicCast()) {
    return (Swift::Bool_optional)v4[0];
  }
  else {
    return (Swift::Bool_optional)2;
  }
}

uint64_t HMService.int(for:)(unsigned char *a1)
{
  *(void *)(v2 + 56) = v1;
  *(unsigned char *)(v2 + 80) = *a1;
  return MEMORY[0x270FA2498](sub_251D8FF78, 0, 0);
}

uint64_t sub_251D8FF78()
{
  uint64_t v1 = HMService.subscript.getter();
  *(void *)(v0 + 64) = v1;
  if (v1)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 72) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_251D90088;
    return HMCharacteristic.fetchedValue()(v0 + 16);
  }
  else
  {
    *(_OWORD *)(v0 + 16) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
    sub_251A9090C(v0 + 16);
    uint64_t v4 = *(uint64_t (**)(void, uint64_t))(v0 + 8);
    return v4(0, 1);
  }
}

uint64_t sub_251D90088()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 64);
  swift_task_dealloc();

  return MEMORY[0x270FA2498](sub_251BC67FC, 0, 0);
}

Swift::Int_optional __swiftcall HMService.cachedInt(for:)(HomeDataModel::CharacteristicKind a1)
{
  LOBYTE(v7) = *(unsigned char *)a1;
  uint64_t v1 = HMService.subscript.getter();
  if (!v1)
  {
    long long v7 = 0u;
    long long v8 = 0u;
LABEL_11:
    sub_251A9090C((uint64_t)&v7);
    Swift::Int v4 = 0;
    char v5 = 1;
    goto LABEL_12;
  }
  uint64_t v2 = v1;
  if (objc_msgSend(v1, sel_value))
  {
    sub_251F36240();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_251ABBD00((uint64_t)v6, (uint64_t)&v7);

  if (!*((void *)&v8 + 1)) {
    goto LABEL_11;
  }
  int v3 = swift_dynamicCast();
  if (v3) {
    Swift::Int v4 = *(void *)&v6[0];
  }
  else {
    Swift::Int v4 = 0;
  }
  char v5 = v3 ^ 1;
LABEL_12:
  result.value = v4;
  result.is_nil = v5;
  return result;
}

uint64_t HMService.double(for:)(unsigned char *a1)
{
  *(void *)(v2 + 56) = v1;
  *(unsigned char *)(v2 + 80) = *a1;
  return MEMORY[0x270FA2498](sub_251D902A8, 0, 0);
}

uint64_t sub_251D902A8()
{
  uint64_t v1 = HMService.subscript.getter();
  *(void *)(v0 + 64) = v1;
  if (v1)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 72) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_251D903B8;
    return HMCharacteristic.fetchedValue()(v0 + 16);
  }
  else
  {
    *(_OWORD *)(v0 + 16) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
    sub_251A9090C(v0 + 16);
    Swift::Int v4 = *(uint64_t (**)(void, uint64_t))(v0 + 8);
    return v4(0, 1);
  }
}

uint64_t sub_251D903B8()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 64);
  swift_task_dealloc();

  return MEMORY[0x270FA2498](sub_251BC6B10, 0, 0);
}

Swift::Double_optional __swiftcall HMService.cachedDouble(for:)(HomeDataModel::CharacteristicKind a1)
{
  LOBYTE(v6) = *(unsigned char *)a1;
  uint64_t v1 = HMService.subscript.getter();
  if (!v1)
  {
    long long v6 = 0u;
    long long v7 = 0u;
LABEL_11:
    sub_251A9090C((uint64_t)&v6);
    char v4 = 0;
    goto LABEL_12;
  }
  uint64_t v2 = v1;
  if (objc_msgSend(v1, sel_value))
  {
    sub_251F36240();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_251ABBD00((uint64_t)v5, (uint64_t)&v6);

  if (!*((void *)&v7 + 1)) {
    goto LABEL_11;
  }
  if (swift_dynamicCast()) {
    char v4 = v5[0];
  }
  else {
    char v4 = 0;
  }
LABEL_12:
  result.value = v3;
  result.is_nil = v4;
  return result;
}

uint64_t HMService.data(for:)(unsigned char *a1)
{
  *(void *)(v2 + 64) = v1;
  *(unsigned char *)(v2 + 88) = *a1;
  return MEMORY[0x270FA2498](sub_251D905D8, 0, 0);
}

uint64_t sub_251D905D8()
{
  uint64_t v1 = HMService.subscript.getter();
  *(void *)(v0 + 72) = v1;
  if (v1)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 80) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_251D906E8;
    return HMCharacteristic.fetchedValue()(v0 + 16);
  }
  else
  {
    *(_OWORD *)(v0 + 16) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
    sub_251A9090C(v0 + 16);
    char v4 = *(uint64_t (**)(void, unint64_t))(v0 + 8);
    return v4(0, 0xF000000000000000);
  }
}

uint64_t sub_251D906E8()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 72);
  swift_task_dealloc();

  return MEMORY[0x270FA2498](sub_251BC6E24, 0, 0);
}

uint64_t HMService.tlv8(for:)(unsigned char *a1)
{
  *(void *)(v2 + 64) = v1;
  *(unsigned char *)(v2 + 88) = *a1;
  return MEMORY[0x270FA2498](sub_251D90828, 0, 0);
}

uint64_t sub_251D90828()
{
  uint64_t v1 = HMService.subscript.getter();
  *(void *)(v0 + 72) = v1;
  if (v1)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 80) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_251D90938;
    return HMCharacteristic.fetchedValue()(v0 + 16);
  }
  else
  {
    *(_OWORD *)(v0 + 16) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
    sub_251A9090C(v0 + 16);
    char v4 = *(uint64_t (**)(void, unint64_t))(v0 + 8);
    return v4(0, 0xF000000000000000);
  }
}

uint64_t sub_251D90938()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 72);
  swift_task_dealloc();

  return MEMORY[0x270FA2498](sub_251BC7638, 0, 0);
}

uint64_t _sSo9HMServiceC13HomeDataModelE06cachedC03for10Foundation0C0VSgAC18CharacteristicKindO_tF_0(unsigned char *a1)
{
  LOBYTE(v5) = *a1;
  uint64_t v1 = HMService.subscript.getter();
  if (!v1)
  {
    long long v5 = 0u;
    long long v6 = 0u;
LABEL_11:
    sub_251A9090C((uint64_t)&v5);
    return 0;
  }
  uint64_t v2 = v1;
  if (objc_msgSend(v1, sel_value))
  {
    sub_251F36240();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v4, 0, sizeof(v4));
  }
  sub_251ABBD00((uint64_t)v4, (uint64_t)&v5);

  if (!*((void *)&v6 + 1)) {
    goto LABEL_11;
  }
  if (swift_dynamicCast()) {
    return *(void *)&v4[0];
  }
  else {
    return 0;
  }
}

uint64_t sub_251D90B34(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = a2;
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    uint64_t v3 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v4 = *v3++;
      sub_251A81FDC(v4);
      sub_251A61CE0(&v6, v4);
      sub_251A58144(v6);
      --v2;
    }
    while (v2);
    return v7;
  }
  return a2;
}

id sub_251D90BA4(void *a1)
{
  id v1 = objc_msgSend(a1, sel_hdm_matterNodeID);
  if (v1)
  {
    sub_251F36D80();

    return 0;
  }
  return v1;
}

void HMHome.matterAccessories.getter()
{
  id v1 = objc_msgSend(v0, sel_accessories);
  sub_251D911E4();
  unint64_t v2 = sub_251F35AC0();

  if (!(v2 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v3) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_251F366C0();
  swift_bridgeObjectRelease();
  if (!v3) {
    goto LABEL_13;
  }
LABEL_3:
  if (v3 >= 1)
  {
    for (uint64_t i = 0; i != v3; ++i)
    {
      if ((v2 & 0xC000000000000001) != 0) {
        id v5 = (id)MEMORY[0x2533AB3A0](i, v2);
      }
      else {
        id v5 = *(id *)(v2 + 8 * i + 32);
      }
      uint64_t v6 = v5;
      id v7 = objc_msgSend(v5, sel_hdm_matterNodeID);
      if (v7)
      {
        long long v8 = v7;
        sub_251F36D80();
      }
    }
    goto LABEL_13;
  }
  __break(1u);
}

uint64_t (*sub_251D90FC8(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_251D910E4(v6, a2, a3);
  return sub_251D91030;
}

uint64_t (*sub_251D91034(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_251D91164(v6, a2, a3);
  return sub_251D91030;
}

void sub_251D9109C(void *a1)
{
  id v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t (*sub_251D910E4(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x2533AB3A0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return j__s13HomeDataModel13WidgetManagerVwxx;
  }
  __break(1u);
  return result;
}

void (*sub_251D91164(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x2533AB3A0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return destroy for WidgetManager;
  }
  __break(1u);
  return result;
}

unint64_t sub_251D911E4()
{
  unint64_t result = qword_26B21EAF8;
  if (!qword_26B21EAF8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B21EAF8);
  }
  return result;
}

void __swiftcall CharacteristicFetchSpecification.init(loggingName:serviceKinds:associatedServiceKinds:characteristicKind:)(HomeDataModel::CharacteristicFetchSpecification *__return_ptr retstr, Swift::String loggingName, Swift::OpaquePointer serviceKinds, Swift::OpaquePointer associatedServiceKinds, HomeDataModel::CharacteristicKind characteristicKind)
{
  id v5 = (unsigned char *)characteristicKind;
  object = loggingName._object;
  uint64_t countAndFlagsBits = loggingName._countAndFlagsBits;
  swift_bridgeObjectRelease();
  LOBYTE(v5) = *v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3418);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_251F38650;
  *(unsigned char *)(v10 + 32) = (_BYTE)v5;
  retstr->loggingName._uint64_t countAndFlagsBits = countAndFlagsBits;
  retstr->loggingName._object = object;
  char v11 = (void *)MEMORY[0x263F8EE78];
  retstr->serviceKinds = serviceKinds;
  retstr->associatedServiceKinds._rawValue = v11;
  retstr->characteristicKinds._rawValue = (void *)v10;
}

void __swiftcall CharacteristicFetchSpecification.init(loggingName:serviceKinds:associatedServiceKinds:characteristicKinds:)(HomeDataModel::CharacteristicFetchSpecification *__return_ptr retstr, Swift::String loggingName, Swift::OpaquePointer serviceKinds, Swift::OpaquePointer associatedServiceKinds, Swift::OpaquePointer characteristicKinds)
{
  object = loggingName._object;
  uint64_t countAndFlagsBits = loggingName._countAndFlagsBits;
  swift_bridgeObjectRelease();
  retstr->loggingName._uint64_t countAndFlagsBits = countAndFlagsBits;
  retstr->loggingName._object = object;
  uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  retstr->serviceKinds = serviceKinds;
  retstr->associatedServiceKinds._rawValue = v10;
  retstr->characteristicKinds = characteristicKinds;
}

uint64_t CharacteristicFetchSpecification.loggingName.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CharacteristicFetchSpecification.serviceKinds.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CharacteristicFetchSpecification.associatedServiceKinds.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CharacteristicFetchSpecification.characteristicKinds.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CharacteristicFetchSpecification.hash(into:)(uint64_t a1)
{
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  swift_bridgeObjectRetain();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_251A41D28(a1, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_251A41D28(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_251A41D10(a1, v5);
  return swift_bridgeObjectRelease();
}

uint64_t CharacteristicFetchSpecification.hashValue.getter()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  sub_251F36CA0();
  swift_bridgeObjectRetain();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_251A41D28((uint64_t)v5, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_251A41D28((uint64_t)v5, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_251A41D10((uint64_t)v5, v3);
  swift_bridgeObjectRelease();
  return sub_251F36D00();
}

uint64_t sub_251D914E0(uint64_t a1)
{
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  swift_bridgeObjectRetain();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_251A41D28(a1, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_251A41D28(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_251A41D10(a1, v5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_251D9159C()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  sub_251F36CA0();
  swift_bridgeObjectRetain();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_251A41D28((uint64_t)v5, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_251A41D28((uint64_t)v5, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_251A41D10((uint64_t)v5, v3);
  swift_bridgeObjectRelease();
  return sub_251F36D00();
}

uint64_t _s13HomeDataModel32CharacteristicFetchSpecificationV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v3 = a1[4];
  uint64_t v6 = a2[2];
  uint64_t v5 = a2[3];
  uint64_t v7 = a2[4];
  BOOL v8 = *a1 == *a2 && a1[1] == a2[1];
  if (!v8 && (sub_251F36B10() & 1) == 0 || (sub_251AB5C18(v2, v6) & 1) == 0 || (sub_251AB5C18(v4, v5) & 1) == 0) {
    return 0;
  }
  return sub_251AB5C30(v3, v7);
}

unint64_t sub_251D9171C()
{
  unint64_t result = qword_269BA3420;
  if (!qword_269BA3420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3420);
  }
  return result;
}

uint64_t destroy for CharacteristicFetchSpecification()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for CharacteristicFetchSpecification(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for CharacteristicFetchSpecification(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for CharacteristicFetchSpecification(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for CharacteristicFetchSpecification()
{
  return &type metadata for CharacteristicFetchSpecification;
}

uint64_t StaticCharacteristic.floatValue.getter()
{
  uint64_t v1 = (unsigned char *)(v0 + *(int *)(type metadata accessor for StaticCharacteristic() + 24));
  if (v1[16] == 7) {
    return *(void *)v1;
  }
  else {
    return 0;
  }
}

uint64_t type metadata accessor for StaticCharacteristic()
{
  uint64_t result = qword_26B21F0F8;
  if (!qword_26B21F0F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t StaticCharacteristic.intValue.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for StaticCharacteristic() + 24));
  uint64_t result = *v1;
  switch(*((unsigned char *)v1 + 16))
  {
    case 1:
      uint64_t result = *v1;
      break;
    case 2:
      uint64_t result = (unsigned __int16)*v1;
      break;
    case 3:
      uint64_t result = *v1;
      break;
    case 4:
      if (result < 0)
      {
        __break(1u);
        JUMPOUT(0x251D91A5CLL);
      }
      return result;
    case 5:
    case 6:
      uint64_t result = (int)result;
      break;
    default:
      uint64_t result = 0;
      break;
  }
  return result;
}

HomeDataModel::StaticCharacteristic::LoadingState::Error __swiftcall StaticCharacteristic.LoadingState.Error.init(code:domain:)(Swift::Int code, Swift::String domain)
{
  *(void *)uint64_t v2 = code;
  *(Swift::String *)(v2 + 8) = domain;
  result.domain = domain;
  result.code = code;
  return result;
}

uint64_t StaticCharacteristic.stringValue.getter()
{
  uint64_t v1 = 0;
  uint64_t v2 = (uint64_t *)(v0 + *(int *)(type metadata accessor for StaticCharacteristic() + 24));
  if (*((unsigned char *)v2 + 16) == 8)
  {
    uint64_t v1 = *v2;
    swift_bridgeObjectRetain();
  }
  return v1;
}

uint64_t StaticCharacteristic.dataValue.getter()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for StaticCharacteristic() + 24);
  if (*(unsigned char *)(v1 + 16) != 10) {
    return 0;
  }
  uint64_t v2 = *(void *)v1;
  sub_251A1A894(*(void *)v1, *(void *)(v1 + 8));
  return v2;
}

BOOL StaticCharacteristic.LoadingState.isReading.getter()
{
  return *(unsigned char *)(v0 + 24) == 0;
}

BOOL StaticCharacteristic.LoadingState.hasError.getter()
{
  return *(unsigned char *)(v0 + 24) == 2;
}

BOOL StaticCharacteristic.LoadingState.isWriting.getter()
{
  return *(unsigned char *)(v0 + 24) == 1;
}

uint64_t StaticCharacteristic.BOOLValue.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for StaticCharacteristic() + 24));
  int v2 = *((unsigned __int8 *)v1 + 16);
  uint64_t v3 = *v1;
  switch(v2)
  {
    case 0:
      return v3 & 1;
    case 1:
      uint64_t v3 = v3;
      goto LABEL_9;
    case 2:
      uint64_t v3 = (unsigned __int16)v3;
      goto LABEL_9;
    case 3:
      uint64_t v3 = v3;
      goto LABEL_9;
    case 4:
      if (v3 < 0)
      {
        __break(1u);
        JUMPOUT(0x251D91C10);
      }
      goto LABEL_9;
    case 5:
    case 6:
      uint64_t v3 = (int)v3;
LABEL_9:
      if (v3 == 1) {
        unsigned int v5 = 1;
      }
      else {
        unsigned int v5 = 2;
      }
      if (v3) {
        uint64_t result = v5;
      }
      else {
        uint64_t result = 0;
      }
      break;
    default:
      uint64_t result = 2;
      break;
  }
  return result;
}

uint64_t StaticCharacteristic.init(from:value:loadingState:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  *(void *)&long long v86 = a2;
  uint64_t v6 = *(void *)a3;
  uint64_t v7 = *(void *)(a3 + 8);
  uint64_t v8 = *(void *)(a3 + 16);
  int v9 = *(unsigned __int8 *)(a3 + 24);
  id v10 = objc_msgSend(a1, sel_service);
  if (v10)
  {
    uint64_t v73 = a4;
    uint64_t v84 = v6;
    uint64_t v85 = (void *)v8;
    *(void *)&long long v77 = v10;
    static CharacteristicKind.Value.typedValue(for:value:)(a1, v86, (uint64_t)&v87);
    unint64_t v75 = *((void *)&v87 + 1);
    uint64_t v76 = v87;
    if (v88 == 255) {
      uint64_t v11 = 0;
    }
    else {
      uint64_t v11 = v87;
    }
    if (v88 == 255) {
      unint64_t v12 = 0;
    }
    else {
      unint64_t v12 = *((void *)&v87 + 1);
    }
    int v74 = v88;
    if (v88 == 255) {
      int v13 = 11;
    }
    else {
      int v13 = v88;
    }
    id v14 = objc_msgSend(a1, sel_uniqueIdentifier);
    uint64_t v15 = sub_251F34DA0();
    uint64_t v79 = &v66;
    uint64_t v82 = *(void *)(v15 - 8);
    uint64_t v83 = v15;
    uint64_t v16 = *(void *)(v82 + 64);
    MEMORY[0x270FA5388](v15);
    uint64_t v72 = (char *)&v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_251F34D80();

    id v17 = objc_msgSend(a1, sel_characteristicType);
    uint64_t v18 = sub_251F356F0();
    int v19 = v9;
    uint64_t v21 = v20;

    v22._uint64_t countAndFlagsBits = v18;
    v22._object = v21;
    CharacteristicKind.init(rawValue:)(v22);
    int v23 = v87;
    if (v87 == 174) {
      int v23 = 0;
    }
    int v70 = v23;
    unint64_t v80 = v12;
    uint64_t v81 = v11;
    int v78 = v13;
    sub_251B2ED7C(v11, v12, v13);
    id v24 = objc_msgSend(a1, sel_valueUpdatedTime);
    uint64_t v25 = sub_251F34D20();
    uint64_t v71 = &v66;
    uint64_t v26 = *(void *)(v25 - 8);
    uint64_t v27 = *(void *)(v26 + 64);
    MEMORY[0x270FA5388](v25);
    unint64_t v28 = (v27 + 15) & 0xFFFFFFFFFFFFFFF0;
    v67 = (char *)&v66 - v28;
    sub_251F34CE0();

    if (v19 == 255)
    {
      id v29 = objc_msgSend(a1, sel_valueUpdatedTime);
      MEMORY[0x270FA5388](v29);
      sub_251F34CE0();

      id v30 = objc_msgSend(a1, sel_notificationEnabledTime);
      uint64_t v85 = &v66;
      MEMORY[0x270FA5388](v30);
      sub_251F34CE0();

      LOBYTE(v30) = sub_251F34C80();
      uint64_t v31 = *(void (**)(char *, uint64_t))(v26 + 8);
      v31((char *)&v66 - v28, v25);
      v31((char *)&v66 - v28, v25);
      uint64_t v7 = 0;
      uint64_t v84 = v30 & 1;
      uint64_t v85 = 0;
      int v19 = 3;
    }
    int v69 = v19;
    id v32 = objc_msgSend(a1, sel_properties);
    uint64_t v33 = sub_251F35AC0();

    v90[0] = 0;
    uint64_t v34 = *(void *)(v33 + 16);
    uint64_t v68 = v26;
    uint64_t v66 = v7;
    if (v34)
    {
      swift_bridgeObjectRetain();
      BOOL v35 = (uint64_t *)(v33 + 40);
      uint64_t v36 = v73;
      do
      {
        uint64_t v37 = *v35;
        *(void *)&long long v87 = *(v35 - 1);
        *((void *)&v87 + 1) = v37;
        sub_251BC227C(v90, (uint64_t *)&v87);
        v35 += 2;
        --v34;
      }
      while (v34);
      uint64_t v38 = v25;
      swift_bridgeObjectRelease_n();
      uint64_t v39 = v90[0];
    }
    else
    {
      uint64_t v38 = v25;
      swift_bridgeObjectRelease();
      uint64_t v39 = 0;
      uint64_t v36 = v73;
    }
    uint64_t v50 = (void *)v77;
    id v51 = objc_msgSend((id)v77, sel_uniqueIdentifier, v66);
    MEMORY[0x270FA5388](v51);
    uint64_t v52 = (char *)&v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_251F34D80();

    id v53 = objc_msgSend(a1, sel_metadata);
    LOBYTE(v90[0]) = 11;
    sub_251B3A768(v53, (unsigned __int8 *)v90, (uint64_t)&v87);

    sub_251C8C904(v76, v75, v74);
    sub_251A1B064(v86, &qword_26B21E190);
    long long v86 = v87;
    long long v77 = v88;
    uint64_t v54 = v89;
    uint64_t v55 = v83;
    uint64_t v56 = *(void (**)(uint64_t, char *, uint64_t))(v82 + 32);
    v56(v36, v72, v83);
    uint64_t v57 = (int *)type metadata accessor for StaticCharacteristic();
    *(unsigned char *)(v36 + v57[5]) = v70;
    uint64_t v58 = v36 + v57[6];
    unint64_t v59 = v80;
    *(void *)uint64_t v58 = v81;
    *(void *)(v58 + 8) = v59;
    *(unsigned char *)(v58 + 16) = v78;
    (*(void (**)(uint64_t, char *, uint64_t))(v68 + 32))(v36 + v57[7], v67, v38);
    uint64_t v60 = v36 + v57[8];
    uint64_t v61 = v66;
    *(void *)uint64_t v60 = v84;
    *(void *)(v60 + 8) = v61;
    *(void *)(v60 + 16) = v85;
    *(unsigned char *)(v60 + 24) = v69;
    *(void *)(v36 + v57[9]) = v39;
    v56(v36 + v57[10], v52, v55);
    uint64_t v62 = v36 + v57[11];
    long long v63 = v77;
    *(_OWORD *)uint64_t v62 = v86;
    *(_OWORD *)(v62 + 16) = v63;
    *(void *)(v62 + 32) = v54;
    return (*(uint64_t (**)(uint64_t, void, uint64_t, int *))(*((void *)v57 - 1) + 56))(v36, 0, 1, v57);
  }
  else
  {
    sub_251B4F22C(v6, v7, v8, v9);
    if (qword_26B21F2C0 != -1) {
      swift_once();
    }
    uint64_t v40 = sub_251F350A0();
    __swift_project_value_buffer(v40, (uint64_t)qword_26B21F290);
    id v41 = a1;
    unint64_t v42 = sub_251F35080();
    os_log_type_t v43 = sub_251F35FB0();
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v44 = swift_slowAlloc();
      uint64_t v45 = swift_slowAlloc();
      *(void *)&long long v87 = v45;
      *(_DWORD *)uint64_t v44 = 136315394;
      v90[0] = sub_251A00E84(0xD00000000000001ELL, 0x8000000251F71710, (uint64_t *)&v87);
      sub_251F361D0();
      *(_WORD *)(v44 + 12) = 2080;
      uint64_t v85 = (void *)(v44 + 14);
      id v41 = v41;
      id v46 = objc_msgSend(v41, sel_description);
      uint64_t v47 = sub_251F356F0();
      unint64_t v49 = v48;

      v90[0] = sub_251A00E84(v47, v49, (uint64_t *)&v87);
      sub_251F361D0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2519F3000, v42, v43, "%s unable to slurp value for characteristic %s", (uint8_t *)v44, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v45, -1, -1);
      MEMORY[0x2533AC760](v44, -1, -1);
    }
    else
    {
    }
    sub_251A1B064(v86, &qword_26B21E190);
    uint64_t v65 = type metadata accessor for StaticCharacteristic();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 56))(a4, 1, 1, v65);
  }
}

uint64_t StaticCharacteristic.copyReplacing(id:characteristicKind:typedValue:lastValueUpdate:loadingState:properties:serviceId:metadata:)@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v118 = a7;
  uint64_t v125 = (void *)a4;
  uint64_t v134 = a1;
  uint64_t v121 = a9;
  uint64_t v136 = (int *)type metadata accessor for StaticCharacteristic();
  uint64_t v15 = MEMORY[0x270FA5388](v136);
  uint64_t v123 = (char *)&v102 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  unint64_t v122 = (char *)&v102 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v105 = (char *)&v102 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v130 = (char *)&v102 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v124 = (uint64_t *)((char *)&v102 - v24);
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v27 = (char *)&v102 - v26;
  uint64_t v28 = MEMORY[0x270FA5388](v25);
  id v30 = (char *)&v102 - v29;
  MEMORY[0x270FA5388](v28);
  id v32 = (char *)&v102 - v31;
  int v135 = *a2;
  uint64_t v115 = *(void *)a3;
  uint64_t v114 = *(uint64_t **)(a3 + 8);
  int v33 = *(unsigned __int8 *)(a3 + 16);
  uint64_t v34 = *(uint64_t **)a5;
  uint64_t v128 = *(uint64_t **)(a5 + 8);
  uint64_t v129 = v34;
  v127 = *(char **)(a5 + 16);
  int v126 = *(unsigned __int8 *)(a5 + 24);
  uint64_t v133 = *a6;
  int v104 = *((unsigned __int8 *)a6 + 8);
  uint64_t v106 = *a8;
  uint64_t v116 = a8[1];
  uint64_t v120 = a8[2];
  unint64_t v35 = a8[3];
  uint64_t v131 = a8[4];
  unint64_t v132 = v35;
  uint64_t v36 = sub_251F34DA0();
  uint64_t v37 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  uint64_t v110 = v38;
  uint64_t v39 = (char *)&v102 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v40 - 8);
  uint64_t v108 = v41;
  unint64_t v42 = (char *)&v102 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1B128(v134, (uint64_t)v42, &qword_26B21FF90);
  sub_251D987BC(v9, (uint64_t)v32);
  uint64_t v103 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v37 + 48);
  int v43 = v103(v42, 1, v36);
  uint64_t v134 = v37;
  uint64_t v119 = v39;
  uint64_t v117 = v36;
  if (v43 == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v39, v32, v36);
    sub_251D98820((uint64_t)v32);
    sub_251A1B064((uint64_t)v42, &qword_26B21FF90);
  }
  else
  {
    sub_251D98820((uint64_t)v32);
    (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v39, v42, v36);
  }
  uint64_t v44 = (uint64_t)v130;
  uint64_t v45 = v115;
  unint64_t v46 = (unint64_t)v114;
  sub_251D987BC(v9, (uint64_t)v30);
  if (v135 == 174) {
    int v135 = v30[v136[5]];
  }
  sub_251D98820((uint64_t)v30);
  sub_251D987BC(v9, (uint64_t)v27);
  uint64_t v47 = v45;
  unint64_t v48 = v46;
  LODWORD(v130) = v33;
  if (v33 == 255)
  {
    unint64_t v49 = &v27[v136[6]];
    uint64_t v47 = *(void *)v49;
    unint64_t v48 = *((void *)v49 + 1);
    uint64_t v50 = *(void *)v49;
    LODWORD(v130) = v49[16];
    sub_251B2ED7C(v50, v48, (char)v130);
  }
  unint64_t v113 = v48;
  uint64_t v115 = v47;
  sub_251D9887C(v45, v46, v33);
  sub_251D98820((uint64_t)v27);
  uint64_t v51 = sub_251F34D20();
  uint64_t v52 = *(void *)(v51 - 8);
  MEMORY[0x270FA5388](v51);
  uint64_t v54 = (char *)&v102 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  MEMORY[0x270FA5388](v55 - 8);
  uint64_t v57 = (char *)&v102 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = v52;
  sub_251A1B128((uint64_t)v125, (uint64_t)v57, &qword_26B21EC20);
  uint64_t v59 = (uint64_t)v124;
  sub_251D987BC(v9, (uint64_t)v124);
  int v60 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v58 + 48))(v57, 1, v51);
  uint64_t v114 = &v102;
  uint64_t v112 = &v102;
  uint64_t v111 = v51;
  uint64_t v109 = v58;
  uint64_t v107 = v54;
  if (v60 == 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v58 + 16))(v54, v59 + v136[7], v51);
    sub_251D98820(v59);
    sub_251A1B064((uint64_t)v57, &qword_26B21EC20);
  }
  else
  {
    sub_251D98820(v59);
    (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v54, v57, v51);
  }
  uint64_t v62 = (uint64_t)v122;
  uint64_t v61 = (uint64_t)v123;
  uint64_t v63 = (uint64_t)v105;
  int v64 = v104;
  uint64_t v65 = v103;
  uint64_t v66 = v106;
  sub_251D987BC(v9, v44);
  uint64_t v68 = (uint64_t)v128;
  uint64_t v67 = (uint64_t)v129;
  uint64_t v124 = v128;
  uint64_t v125 = v129;
  uint64_t v69 = (uint64_t)v127;
  uint64_t v123 = v127;
  char v70 = v126;
  LODWORD(v122) = v126;
  if (v126 == 255)
  {
    uint64_t v71 = v44 + v136[8];
    uint64_t v72 = *(void *)v71;
    uint64_t v73 = *(void *)(v71 + 16);
    int v74 = *(unsigned __int8 *)(v71 + 24);
    uint64_t v124 = *(uint64_t **)(v71 + 8);
    uint64_t v125 = (void *)v72;
    uint64_t v123 = (char *)v73;
    LODWORD(v122) = v74;
    sub_251A1A550(v72, (uint64_t)v124, v73, v74);
    char v70 = v126;
    uint64_t v69 = (uint64_t)v127;
    uint64_t v68 = (uint64_t)v128;
    uint64_t v67 = (uint64_t)v129;
  }
  sub_251B4F240(v67, v68, v69, v70);
  sub_251D98820(v44);
  sub_251D987BC(v9, v63);
  if (v64) {
    uint64_t v133 = *(void *)(v63 + v136[9]);
  }
  uint64_t v75 = sub_251D98820(v63);
  uint64_t v76 = MEMORY[0x270FA5388](v75);
  int v78 = (char *)&v102 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v128 = &v102;
  MEMORY[0x270FA5388](v76);
  unint64_t v80 = (char *)&v102 - ((v79 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1B128(v118, (uint64_t)v80, &qword_26B21FF90);
  sub_251D987BC(v9, v62);
  uint64_t v81 = v117;
  int v82 = v65(v80, 1, v117);
  uint64_t v129 = &v102;
  v127 = v78;
  if (v82 == 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v134 + 16))(v78, v62 + v136[10], v81);
    sub_251D98820(v62);
    sub_251A1B064((uint64_t)v80, &qword_26B21FF90);
  }
  else
  {
    sub_251D98820(v62);
    (*(void (**)(char *, char *, uint64_t))(v134 + 32))(v78, v80, v81);
  }
  uint64_t v83 = v81;
  sub_251D987BC(v9, v61);
  uint64_t v84 = v132;
  uint64_t v85 = v66;
  uint64_t v86 = v116;
  uint64_t v87 = v116;
  uint64_t v88 = v120;
  uint64_t v89 = v120;
  uint64_t v90 = v132;
  uint64_t v91 = v131;
  if (v132 >> 8 == 0xFFFFFFFF)
  {
    char v92 = (uint64_t *)(v61 + v136[11]);
    uint64_t v85 = *v92;
    uint64_t v87 = v92[1];
    uint64_t v89 = v92[2];
    uint64_t v90 = v92[3];
    uint64_t v91 = v92[4];
    sub_251A11E3C(*v92, v87, v89, v90);
    uint64_t v84 = v132;
  }
  sub_251A11E3C(v66, v86, v88, v84);
  sub_251D98820(v61);
  v93 = v136;
  uint64_t v94 = *(void (**)(uint64_t, char *, uint64_t))(v134 + 32);
  uint64_t v95 = v121;
  v94(v121, v119, v83);
  *(unsigned char *)(v95 + v93[5]) = v135;
  uint64_t v96 = v95 + v93[6];
  unint64_t v97 = v113;
  *(void *)uint64_t v96 = v115;
  *(void *)(v96 + 8) = v97;
  *(unsigned char *)(v96 + 16) = (_BYTE)v130;
  (*(void (**)(uint64_t, char *, uint64_t))(v109 + 32))(v95 + v93[7], v107, v111);
  uint64_t v98 = v95 + v93[8];
  uint64_t v99 = (uint64_t)v124;
  *(void *)uint64_t v98 = v125;
  *(void *)(v98 + 8) = v99;
  *(void *)(v98 + 16) = v123;
  *(unsigned char *)(v98 + 24) = (_BYTE)v122;
  *(void *)(v95 + v93[9]) = v133;
  uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v94)(v95 + v93[10], v127, v83);
  uint64_t v101 = (uint64_t *)(v95 + v93[11]);
  *uint64_t v101 = v85;
  v101[1] = v87;
  v101[2] = v89;
  v101[3] = v90;
  v101[4] = v91;
  return result;
}

uint64_t StaticCharacteristic.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_251F34DA0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t StaticCharacteristic.characteristicKind.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for StaticCharacteristic();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t StaticCharacteristic.typedValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for StaticCharacteristic() + 24);
  uint64_t v4 = *(void *)v3;
  unint64_t v5 = *(void *)(v3 + 8);
  *(void *)a1 = *(void *)v3;
  *(void *)(a1 + 8) = v5;
  char v6 = *(unsigned char *)(v3 + 16);
  *(unsigned char *)(a1 + 16) = v6;
  return sub_251B2ED7C(v4, v5, v6);
}

uint64_t StaticCharacteristic.lastValueUpdate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for StaticCharacteristic() + 28);
  uint64_t v4 = sub_251F34D20();
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t StaticCharacteristic.loadingState.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for StaticCharacteristic() + 32);
  uint64_t v4 = *(void *)v3;
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v6 = *(void *)(v3 + 16);
  *(void *)a1 = *(void *)v3;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  char v7 = *(unsigned char *)(v3 + 24);
  *(unsigned char *)(a1 + 24) = v7;
  return sub_251A1A550(v4, v5, v6, v7);
}

uint64_t StaticCharacteristic.properties.getter@<X0>(void *a1@<X8>)
{
  uint64_t result = type metadata accessor for StaticCharacteristic();
  *a1 = *(void *)(v1 + *(int *)(result + 36));
  return result;
}

uint64_t StaticCharacteristic.serviceId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for StaticCharacteristic() + 40);
  uint64_t v4 = sub_251F34DA0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t StaticCharacteristic.metadata.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for StaticCharacteristic() + 44));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  return sub_251A11E3C(v4, v5, v6, v7);
}

uint64_t StaticCharacteristic.hash(into:)(uint64_t a1)
{
  sub_251F34DA0();
  sub_251D994E4((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA9570]);
  sub_251F35610();
  uint64_t v3 = type metadata accessor for StaticCharacteristic();
  CharacteristicKind.rawValue.getter();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  CharacteristicKind.Value.hash(into:)();
  sub_251F34D20();
  sub_251D994E4(&qword_269B9CF80, MEMORY[0x270FA9158]);
  sub_251F35610();
  switch(*(unsigned char *)(v1 + *(int *)(v3 + 32) + 24))
  {
    case 2:
      sub_251F36CB0();
      sub_251F36CB0();
      sub_251F357B0();
      break;
    case 3:
      goto LABEL_4;
    default:
      sub_251F36CB0();
LABEL_4:
      sub_251F36CB0();
      break;
  }
  sub_251F36CB0();
  sub_251F35610();
  unint64_t v4 = *(void *)(v1 + *(int *)(v3 + 44) + 24);
  if (v4 >> 8 == 0xFFFFFFFF) {
    return sub_251F36CC0();
  }
  sub_251F36CC0();
  if (v4 >> 62)
  {
    sub_251F36CB0();
    if (v4 >> 62 == 1) {
      return StaticCharacteristicMetadata.FloatMetadata.hash(into:)(a1);
    }
    else {
      return sub_251F36CB0();
    }
  }
  else
  {
    sub_251F36CB0();
    return StaticCharacteristicMetadata.IntMetadata.hash(into:)();
  }
}

unint64_t sub_251D933C8(char a1)
{
  unint64_t result = 25705;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000012;
      break;
    case 2:
      unint64_t result = 0x6C61566465707974;
      break;
    case 3:
      unint64_t result = 0x756C61567473616CLL;
      break;
    case 4:
      unint64_t result = 0x53676E6964616F6CLL;
      break;
    case 5:
      unint64_t result = 0x69747265706F7270;
      break;
    case 6:
      unint64_t result = 0x4965636976726573;
      break;
    case 7:
      unint64_t result = 0x617461646174656DLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_251D934E8()
{
  return sub_251D933C8(*v0);
}

uint64_t sub_251D934F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251D9B79C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251D93518(uint64_t a1)
{
  unint64_t v2 = sub_251D98890();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251D93554(uint64_t a1)
{
  unint64_t v2 = sub_251D98890();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticCharacteristic.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3440);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251D98890();
  sub_251F36DA0();
  LOBYTE(v20) = 0;
  sub_251F34DA0();
  sub_251D994E4(&qword_26B21E348, MEMORY[0x270FA9570]);
  sub_251F36A20();
  if (!v2)
  {
    uint64_t v9 = (int *)type metadata accessor for StaticCharacteristic();
    LOBYTE(v20) = *(unsigned char *)(v3 + v9[5]);
    char v23 = 1;
    sub_251B4A854();
    sub_251F36A20();
    id v10 = (long long *)(v3 + v9[6]);
    char v11 = *((unsigned char *)v10 + 16);
    long long v20 = *v10;
    LOBYTE(v21) = v11;
    char v23 = 2;
    sub_251D988E4();
    sub_251F36A20();
    v19[1] = v3 + v9[7];
    LOBYTE(v20) = 3;
    sub_251F34D20();
    sub_251D994E4(&qword_269B9F590, MEMORY[0x270FA9158]);
    sub_251F36A20();
    unint64_t v12 = (long long *)(v3 + v9[8]);
    uint64_t v13 = *((void *)v12 + 2);
    char v14 = *((unsigned char *)v12 + 24);
    long long v20 = *v12;
    *(void *)&long long v21 = v13;
    BYTE8(v21) = v14;
    char v23 = 4;
    sub_251D98938();
    sub_251F36A20();
    *(void *)&long long v20 = *(void *)(v3 + v9[9]);
    char v23 = 5;
    sub_251D9898C();
    sub_251F36A20();
    LOBYTE(v20) = 6;
    sub_251F36A20();
    uint64_t v15 = (long long *)(v3 + v9[11]);
    uint64_t v16 = *((void *)v15 + 4);
    long long v17 = v15[1];
    long long v20 = *v15;
    long long v21 = v17;
    uint64_t v22 = v16;
    char v23 = 7;
    sub_251D989E0();
    sub_251F36970();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t StaticCharacteristic.hashValue.getter()
{
  sub_251F36CA0();
  StaticCharacteristic.hash(into:)((uint64_t)v1);
  return sub_251F36D00();
}

uint64_t StaticCharacteristic.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v52 = a2;
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3470);
  uint64_t v4 = *(void *)(v53 - 8);
  MEMORY[0x270FA5388](v53);
  uint64_t v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for StaticCharacteristic();
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251D98890();
  uint64_t v54 = v6;
  sub_251F36D90();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  uint64_t v50 = a1;
  uint64_t v51 = v4;
  unint64_t v48 = (int *)v7;
  unint64_t v49 = v9;
  uint64_t v10 = sub_251F34DA0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v55) = 0;
  uint64_t v14 = sub_251D994E4(&qword_269B9CC80, MEMORY[0x270FA9570]);
  uint64_t v15 = v53;
  sub_251F36880();
  uint64_t v44 = v12;
  uint64_t v45 = v14;
  uint64_t v46 = v11;
  uint64_t v17 = v11 + 32;
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  uint64_t v18 = v49;
  uint64_t v19 = v13;
  long long v20 = v16;
  v16(v49, v19, v10);
  char v58 = 1;
  sub_251B4A940();
  sub_251F36880();
  uint64_t v47 = v10;
  uint64_t v43 = v17;
  long long v21 = v48;
  v18[v48[5]] = v55;
  char v58 = 2;
  sub_251D98A34();
  sub_251F36880();
  uint64_t v22 = (uint64_t)v50;
  uint64_t v41 = v20;
  char v23 = v56;
  uint64_t v24 = &v18[v21[6]];
  *(_OWORD *)uint64_t v24 = v55;
  v24[16] = v23;
  uint64_t v25 = sub_251F34D20();
  unint64_t v42 = &v41;
  uint64_t v26 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v28 = (char *)&v41 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v55) = 3;
  sub_251D994E4(&qword_269B9DBE8, MEMORY[0x270FA9158]);
  sub_251F36880();
  (*(void (**)(char *, char *, uint64_t))(v26 + 32))(&v18[v48[7]], v28, v25);
  char v58 = 4;
  sub_251D98A88();
  sub_251F36880();
  uint64_t v29 = v56;
  char v30 = BYTE8(v56);
  uint64_t v31 = v48;
  id v32 = &v18[v48[8]];
  *(_OWORD *)id v32 = v55;
  *((void *)v32 + 2) = v29;
  v32[24] = v30;
  char v58 = 5;
  sub_251D98ADC();
  uint64_t v33 = sub_251F36880();
  unint64_t v42 = &v41;
  *(void *)&v18[v31[9]] = v55;
  MEMORY[0x270FA5388](v33);
  unint64_t v35 = (char *)&v41 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v55) = 6;
  sub_251F36880();
  v41(&v18[v31[10]], v35, v10);
  char v58 = 7;
  sub_251D98B30();
  sub_251F367D0();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v54, v15);
  uint64_t v36 = v57;
  uint64_t v37 = (uint64_t)v49;
  uint64_t v38 = &v49[v48[11]];
  long long v39 = v56;
  *(_OWORD *)uint64_t v38 = v55;
  *((_OWORD *)v38 + 1) = v39;
  *((void *)v38 + 4) = v36;
  sub_251D987BC(v37, v52);
  __swift_destroy_boxed_opaque_existential_0(v22);
  return sub_251D98820(v37);
}

uint64_t sub_251D941B4()
{
  sub_251F36CA0();
  StaticCharacteristic.hash(into:)((uint64_t)v1);
  return sub_251F36D00();
}

uint64_t sub_251D941F8()
{
  sub_251F36CA0();
  StaticCharacteristic.hash(into:)((uint64_t)v1);
  return sub_251F36D00();
}

uint64_t sub_251D94234@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticCharacteristic.init(from:)(a1, a2);
}

uint64_t sub_251D9424C(void *a1)
{
  return StaticCharacteristic.encode(to:)(a1);
}

uint64_t StaticCharacteristic.LoadingState.error.getter()
{
  if (*(unsigned char *)(v0 + 24) != 2) {
    return 0;
  }
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 16);
  if (v1 == sub_251F356F0() && v2 == v3)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v5 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if ((v5 & 1) == 0) {
      return 0;
    }
  }
  type metadata accessor for HMError(0);
  sub_251D97A44(MEMORY[0x263F8EE78]);
  sub_251D99574(&qword_269B9C820, type metadata accessor for HMError);
  sub_251F34A10();
  return v7;
}

BOOL static StaticCharacteristic.LoadingState.Source.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t StaticCharacteristic.LoadingState.Source.hash(into:)()
{
  return sub_251F36CB0();
}

uint64_t sub_251D943B8()
{
  if (*v0) {
    return 0x6D617246656D6F68;
  }
  else {
    return 0x65646F4D61746164;
  }
}

uint64_t sub_251D94404@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251D9BB20(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251D9442C(uint64_t a1)
{
  unint64_t v2 = sub_251D98B84();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251D94468(uint64_t a1)
{
  unint64_t v2 = sub_251D98B84();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251D944A4(uint64_t a1)
{
  unint64_t v2 = sub_251D98C2C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251D944E0(uint64_t a1)
{
  unint64_t v2 = sub_251D98C2C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251D9451C(uint64_t a1)
{
  unint64_t v2 = sub_251D98BD8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251D94558(uint64_t a1)
{
  unint64_t v2 = sub_251D98BD8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticCharacteristic.LoadingState.Source.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3498);
  uint64_t v19 = *(void *)(v3 - 8);
  uint64_t v20 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v18 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA34A0);
  uint64_t v16 = *(void *)(v5 - 8);
  uint64_t v17 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA34A8);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251D98B84();
  sub_251F36DA0();
  uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v9 + 8);
  if (v12)
  {
    char v22 = 1;
    sub_251D98BD8();
    uint64_t v14 = v18;
    sub_251F36900();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v20);
  }
  else
  {
    char v21 = 0;
    sub_251D98C2C();
    sub_251F36900();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v17);
  }
  return (*v13)(v11, v8);
}

uint64_t StaticCharacteristic.LoadingState.Source.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t StaticCharacteristic.LoadingState.Source.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA34C8);
  uint64_t v30 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA34D0);
  uint64_t v28 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA34D8);
  uint64_t v29 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251D98B84();
  uint64_t v11 = v32;
  sub_251F36D90();
  if (v11) {
    goto LABEL_6;
  }
  id v32 = a1;
  uint64_t v13 = v30;
  char v12 = v31;
  uint64_t v14 = v10;
  uint64_t v15 = sub_251F368E0();
  if (*(void *)(v15 + 16) != 1)
  {
    uint64_t v20 = sub_251F36490();
    swift_allocError();
    char v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D440);
    *char v22 = &type metadata for StaticCharacteristic.LoadingState.Source;
    sub_251F36780();
    sub_251F36480();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v20 - 8) + 104))(v22, *MEMORY[0x263F8DCB0], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v8);
    a1 = v32;
LABEL_6:
    uint64_t v23 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_0(v23);
  }
  v26[1] = v15;
  char v16 = *(unsigned char *)(v15 + 32);
  if (v16)
  {
    char v17 = *(unsigned char *)(v15 + 32);
    char v34 = 1;
    sub_251D98BD8();
    uint64_t v18 = v14;
    sub_251F36770();
    uint64_t v19 = v29;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v4, v27);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v18, v8);
    char v16 = v17;
  }
  else
  {
    char v33 = 0;
    sub_251D98C2C();
    sub_251F36770();
    uint64_t v25 = v29;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v5);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v8);
  }
  *char v12 = v16;
  uint64_t v23 = (uint64_t)v32;
  return __swift_destroy_boxed_opaque_existential_0(v23);
}

uint64_t sub_251D94CD8@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return StaticCharacteristic.LoadingState.Source.init(from:)(a1, a2);
}

uint64_t sub_251D94CF0(void *a1)
{
  return StaticCharacteristic.LoadingState.Source.encode(to:)(a1);
}

uint64_t static StaticCharacteristic.LoadingState.Error.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  if (a1[1] == a2[1] && a1[2] == a2[2]) {
    return 1;
  }
  else {
    return sub_251F36B10();
  }
}

uint64_t StaticCharacteristic.LoadingState.Error.hash(into:)()
{
  sub_251F36CB0();
  swift_bridgeObjectRetain();
  sub_251F357B0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_251D94DB4()
{
  if (*v0) {
    return 0x6E69616D6F64;
  }
  else {
    return 1701080931;
  }
}

uint64_t sub_251D94DE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251D9BC44(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251D94E0C(uint64_t a1)
{
  unint64_t v2 = sub_251D98C80();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251D94E48(uint64_t a1)
{
  unint64_t v2 = sub_251D98C80();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticCharacteristic.LoadingState.Error.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA34E0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v1 + 8);
  v10[0] = *(void *)(v1 + 16);
  v10[1] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251D98C80();
  sub_251F36DA0();
  char v12 = 0;
  sub_251F36A00();
  if (!v2)
  {
    char v11 = 1;
    sub_251F369D0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t StaticCharacteristic.LoadingState.Error.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t StaticCharacteristic.LoadingState.Error.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA34F0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251D98C80();
  sub_251F36D90();
  if (!v2)
  {
    char v16 = 0;
    uint64_t v9 = sub_251F36860();
    char v15 = 1;
    uint64_t v11 = sub_251F36830();
    uint64_t v13 = v12;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v11;
    a2[2] = v13;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_251D951FC(void *a1, void *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  if (a1[1] == a2[1] && a1[2] == a2[2]) {
    return 1;
  }
  else {
    return sub_251F36B10();
  }
}

uint64_t sub_251D95244()
{
  return sub_251F36D00();
}

uint64_t sub_251D952A8()
{
  sub_251F36CB0();
  return sub_251F357B0();
}

uint64_t sub_251D952FC()
{
  return sub_251F36D00();
}

uint64_t sub_251D9535C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return StaticCharacteristic.LoadingState.Error.init(from:)(a1, a2);
}

uint64_t sub_251D95374(void *a1)
{
  return StaticCharacteristic.LoadingState.Error.encode(to:)(a1);
}

uint64_t StaticCharacteristic.LoadingState.hash(into:)()
{
  switch(*(unsigned char *)(v0 + 24))
  {
    case 2:
      sub_251F36CB0();
      sub_251F36CB0();
      uint64_t result = sub_251F357B0();
      break;
    case 3:
      goto LABEL_3;
    default:
      sub_251F36CB0();
LABEL_3:
      uint64_t result = sub_251F36CB0();
      break;
  }
  return result;
}

unint64_t sub_251D95480()
{
  unint64_t result = 0x64696C61766E69;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x72506E4964616572;
      break;
    case 2:
      unint64_t result = 0x506E496574697277;
      break;
    case 3:
      unint64_t result = 0x726F727265;
      break;
    case 4:
      unint64_t result = 0x7964616572;
      break;
    case 5:
      unint64_t result = 0xD000000000000015;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_251D9555C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251D9BD20(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251D95584(uint64_t a1)
{
  unint64_t v2 = sub_251D98CD4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251D955C0(uint64_t a1)
{
  unint64_t v2 = sub_251D98CD4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251D955FC(uint64_t a1)
{
  unint64_t v2 = sub_251D98DD0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251D95638(uint64_t a1)
{
  unint64_t v2 = sub_251D98DD0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251D95674(uint64_t a1)
{
  unint64_t v2 = sub_251D98F74();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251D956B0(uint64_t a1)
{
  unint64_t v2 = sub_251D98F74();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251D956EC(uint64_t a1)
{
  unint64_t v2 = sub_251D98F20();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251D95728(uint64_t a1)
{
  unint64_t v2 = sub_251D98F20();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251D95764(uint64_t a1)
{
  unint64_t v2 = sub_251D98D7C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251D957A0(uint64_t a1)
{
  unint64_t v2 = sub_251D98D7C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251D957DC(uint64_t a1)
{
  unint64_t v2 = sub_251D98D28();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251D95818(uint64_t a1)
{
  unint64_t v2 = sub_251D98D28();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251D95854(uint64_t a1)
{
  unint64_t v2 = sub_251D98E78();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251D95890(uint64_t a1)
{
  unint64_t v2 = sub_251D98E78();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticCharacteristic.LoadingState.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA34F8);
  uint64_t v44 = *(void *)(v3 - 8);
  uint64_t v45 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v43 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3500);
  uint64_t v41 = *(void *)(v5 - 8);
  uint64_t v42 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v40 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3508);
  uint64_t v54 = *(void *)(v7 - 8);
  uint64_t v55 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v53 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3510);
  uint64_t v51 = *(void *)(v9 - 8);
  uint64_t v52 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v50 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3518);
  uint64_t v48 = *(void *)(v11 - 8);
  uint64_t v49 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3520);
  uint64_t v46 = *(void *)(v14 - 8);
  uint64_t v47 = v14;
  MEMORY[0x270FA5388](v14);
  char v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3528);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v56 = v17;
  uint64_t v57 = v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = v1[1];
  uint64_t v61 = *v1;
  uint64_t v21 = v1[2];
  uint64_t v22 = *((unsigned __int8 *)v1 + 24);
  uint64_t v23 = a1[3];
  uint64_t v24 = a1;
  uint64_t v25 = (char *)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v24, v23);
  sub_251D98CD4();
  sub_251F36DA0();
  switch(v22)
  {
    case 1:
      LOBYTE(v58) = 2;
      sub_251D98E78();
      uint64_t v28 = v50;
      uint64_t v26 = v56;
      sub_251F36900();
      LOBYTE(v58) = v61 & 1;
      sub_251D98ECC();
      uint64_t v29 = v52;
      sub_251F36A20();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v28, v29);
      goto LABEL_4;
    case 2:
      LOBYTE(v58) = 3;
      sub_251D98DD0();
      uint64_t v31 = v53;
      id v32 = v25;
      uint64_t v33 = v56;
      sub_251F36900();
      uint64_t v58 = v61;
      uint64_t v59 = v20;
      uint64_t v60 = v21;
      sub_251D98E24();
      uint64_t v34 = v55;
      sub_251F36A20();
      (*(void (**)(char *, uint64_t))(v54 + 8))(v31, v34);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v32, v33);
      break;
    case 3:
      if (v21 | v20 | v61)
      {
        if (v61 != 1 || v21 | v20)
        {
          LOBYTE(v58) = 5;
          sub_251D98D28();
          unint64_t v35 = v43;
          uint64_t v36 = v56;
          sub_251F36900();
          uint64_t v38 = v44;
          uint64_t v37 = v45;
        }
        else
        {
          LOBYTE(v58) = 4;
          sub_251D98D7C();
          unint64_t v35 = v40;
          uint64_t v36 = v56;
          sub_251F36900();
          uint64_t v38 = v41;
          uint64_t v37 = v42;
        }
        (*(void (**)(char *, uint64_t))(v38 + 8))(v35, v37);
      }
      else
      {
        LOBYTE(v58) = 0;
        sub_251D98F74();
        uint64_t v36 = v56;
        sub_251F36900();
        (*(void (**)(char *, uint64_t))(v46 + 8))(v16, v47);
      }
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v25, v36);
      break;
    default:
      LOBYTE(v58) = 1;
      sub_251D98F20();
      uint64_t v26 = v56;
      sub_251F36900();
      LOBYTE(v58) = v61 & 1;
      sub_251D98ECC();
      uint64_t v27 = v49;
      sub_251F36A20();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v13, v27);
LABEL_4:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v25, v26);
      break;
  }
  return result;
}

uint64_t StaticCharacteristic.LoadingState.hashValue.getter()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 24);
  sub_251F36CA0();
  switch(v1)
  {
    case 2:
      sub_251F36CB0();
      sub_251F36CB0();
      sub_251F357B0();
      break;
    case 3:
      goto LABEL_3;
    default:
      sub_251F36CB0();
LABEL_3:
      sub_251F36CB0();
      break;
  }
  return sub_251F36D00();
}

uint64_t StaticCharacteristic.LoadingState.init(from:)@<X0>(void *a1@<X0>, long long *a2@<X8>)
{
  uint64_t v57 = a2;
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3578);
  uint64_t v48 = *(void *)(v55 - 8);
  MEMORY[0x270FA5388](v55);
  uint64_t v60 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3580);
  uint64_t v51 = *(void *)(v53 - 8);
  MEMORY[0x270FA5388](v53);
  uint64_t v59 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3588);
  uint64_t v54 = *(void *)(v52 - 8);
  MEMORY[0x270FA5388](v52);
  uint64_t v56 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3590);
  uint64_t v49 = *(void *)(v6 - 8);
  uint64_t v50 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v58 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3598);
  uint64_t v46 = *(void *)(v8 - 8);
  uint64_t v47 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA35A0);
  uint64_t v45 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA35A8);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = a1[3];
  uint64_t v61 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v18);
  sub_251D98CD4();
  uint64_t v19 = v64;
  sub_251F36D90();
  if (v19) {
    goto LABEL_11;
  }
  uint64_t v44 = v13;
  uint64_t v43 = v11;
  uint64_t v20 = v10;
  uint64_t v21 = v58;
  uint64_t v22 = v59;
  uint64_t v23 = v60;
  uint64_t v64 = v15;
  uint64_t v24 = sub_251F368E0();
  if (*(void *)(v24 + 16) != 1)
  {
    uint64_t v28 = sub_251F36490();
    swift_allocError();
    uint64_t v30 = v29;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D440);
    *uint64_t v30 = &type metadata for StaticCharacteristic.LoadingState;
    sub_251F36780();
    sub_251F36480();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v28 - 8) + 104))(v30, *MEMORY[0x263F8DCB0], v28);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v64 + 8))(v17, v14);
LABEL_11:
    uint64_t v39 = (uint64_t)v61;
    return __swift_destroy_boxed_opaque_existential_0(v39);
  }
  switch(*(unsigned char *)(v24 + 32))
  {
    case 1:
      LOBYTE(v62) = 1;
      sub_251D98F20();
      uint64_t v31 = v20;
      sub_251F36770();
      sub_251D9901C();
      uint64_t v32 = v47;
      sub_251F36880();
      (*(void (**)(char *, uint64_t))(v46 + 8))(v31, v32);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v64 + 8))(v17, v14);
      uint64_t v26 = 0;
      char v33 = 0;
      long long v27 = v62;
      goto LABEL_14;
    case 2:
      LOBYTE(v62) = 2;
      sub_251D98E78();
      sub_251F36770();
      sub_251D9901C();
      uint64_t v34 = v50;
      sub_251F36880();
      uint64_t v35 = v64;
      (*(void (**)(char *, uint64_t))(v49 + 8))(v21, v34);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v17, v14);
      uint64_t v26 = 0;
      long long v27 = v62;
      char v33 = 1;
      goto LABEL_14;
    case 3:
      LOBYTE(v62) = 3;
      sub_251D98DD0();
      uint64_t v36 = v56;
      sub_251F36770();
      sub_251D98FC8();
      uint64_t v37 = v52;
      sub_251F36880();
      uint64_t v38 = v64;
      (*(void (**)(char *, uint64_t))(v54 + 8))(v36, v37);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v17, v14);
      long long v27 = v62;
      uint64_t v26 = v63;
      char v33 = 2;
      goto LABEL_14;
    case 4:
      LOBYTE(v62) = 4;
      sub_251D98D7C();
      sub_251F36770();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v22, v53);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v64 + 8))(v17, v14);
      uint64_t v26 = 0;
      long long v27 = xmmword_251F3BBE0;
      goto LABEL_13;
    case 5:
      LOBYTE(v62) = 5;
      sub_251D98D28();
      sub_251F36770();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v23, v55);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v64 + 8))(v17, v14);
      uint64_t v26 = 0;
      long long v27 = xmmword_251F536F0;
      goto LABEL_13;
    default:
      LOBYTE(v62) = 0;
      sub_251D98F74();
      uint64_t v25 = v44;
      sub_251F36770();
      (*(void (**)(char *, uint64_t))(v45 + 8))(v25, v43);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v64 + 8))(v17, v14);
      uint64_t v26 = 0;
      long long v27 = 0uLL;
LABEL_13:
      char v33 = 3;
LABEL_14:
      uint64_t v39 = (uint64_t)v61;
      uint64_t v41 = v57;
      *uint64_t v57 = v27;
      *((void *)v41 + 2) = v26;
      *((unsigned char *)v41 + 24) = v33;
      break;
  }
  return __swift_destroy_boxed_opaque_existential_0(v39);
}

uint64_t sub_251D96ACC()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 24);
  sub_251F36CA0();
  switch(v1)
  {
    case 2:
      sub_251F36CB0();
      sub_251F36CB0();
      sub_251F357B0();
      break;
    case 3:
      goto LABEL_3;
    default:
      sub_251F36CB0();
LABEL_3:
      sub_251F36CB0();
      break;
  }
  return sub_251F36D00();
}

uint64_t sub_251D96BD8@<X0>(void *a1@<X0>, long long *a2@<X8>)
{
  return StaticCharacteristic.LoadingState.init(from:)(a1, a2);
}

uint64_t sub_251D96BF0(void *a1)
{
  return StaticCharacteristic.LoadingState.encode(to:)(a1);
}

uint64_t StaticCharacteristic.characteristic.getter()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_251D96C2C, 0, 0);
}

uint64_t sub_251D96C2C()
{
  *(void *)(v0 + 24) = sub_251F35C80();
  *(void *)(v0 + 32) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251D96CC4, v2, v1);
}

uint64_t sub_251D96CC4()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251D96D5C, 0, 0);
}

uint64_t sub_251D96D5C()
{
  *(void *)(v0 + 40) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251D96DE8, v2, v1);
}

uint64_t sub_251D96DE8()
{
  swift_release();
  *(void *)(v0 + 48) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251D96E5C, 0, 0);
}

uint64_t sub_251D96E5C()
{
  *(void *)(v0 + 56) = sub_251F34D50();
  *(void *)(v0 + 64) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251D96EF0, v2, v1);
}

uint64_t sub_251D96EF0()
{
  uint64_t v1 = (void *)v0[7];
  uint64_t v2 = (void *)v0[6];
  swift_release();
  id v3 = objc_msgSend(v2, sel_characteristicFor_, v1);

  uint64_t v4 = (uint64_t (*)(id))v0[1];
  return v4(v3);
}

uint64_t StaticCharacteristic.description.getter()
{
  sub_251F36400();
  sub_251F35800();
  sub_251F34DA0();
  sub_251D994E4((unint64_t *)&qword_26B21E6B0, MEMORY[0x270FA9570]);
  sub_251F36AB0();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  uint64_t v1 = type metadata accessor for StaticCharacteristic();
  sub_251F36640();
  sub_251F35800();
  uint64_t v2 = v0 + *(int *)(v1 + 24);
  uint64_t v3 = *(void *)v2;
  unint64_t v5 = *(void *)(v2 + 8);
  char v6 = *(unsigned char *)(v2 + 16);
  sub_251B2ED7C(*(void *)v2, v5, v6);
  CharacteristicKind.Value.description.getter();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251A580B4(v3, v5, v6);
  sub_251F35800();
  return 0;
}

uint64_t StaticCharacteristic.debugDescription.getter()
{
  uint64_t v1 = sub_251F36D30();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((void *)&v23 + 1) = type metadata accessor for StaticCharacteristic();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v22);
  sub_251D987BC(v0, (uint64_t)boxed_opaque_existential_1);
  sub_251F36D10();
  uint64_t v6 = sub_251F36D20();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  swift_retain();
  sub_251F36620();
  v15[1] = v6;
  swift_release();
  sub_251F36720();
  if (*((void *)&v24 + 1))
  {
    uint64_t v7 = (void *)MEMORY[0x263F8EE78];
    do
    {
      long long v20 = v22;
      v21[0] = v23;
      v21[1] = v24;
      uint64_t v18 = 0;
      unint64_t v19 = 0xE000000000000000;
      long long v16 = v22;
      sub_251A0D51C((uint64_t)v21, (uint64_t)v17);
      swift_bridgeObjectRetain();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v17);
      sub_251F35800();
      swift_bridgeObjectRelease();
      sub_251F35800();
      sub_251F36640();
      uint64_t v8 = v18;
      unint64_t v9 = v19;
      sub_251A1B064((uint64_t)&v20, &qword_269BA35C8);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v7 = sub_251F0E8B8(0, v7[2] + 1, 1, v7);
      }
      unint64_t v11 = v7[2];
      unint64_t v10 = v7[3];
      if (v11 >= v10 >> 1) {
        uint64_t v7 = sub_251F0E8B8((void *)(v10 > 1), v11 + 1, 1, v7);
      }
      v7[2] = v11 + 1;
      uint64_t v12 = &v7[2 * v11];
      v12[4] = v8;
      v12[5] = v9;
      sub_251F36720();
    }
    while (*((void *)&v24 + 1));
  }
  else
  {
    uint64_t v7 = (void *)MEMORY[0x263F8EE78];
  }
  swift_release();
  swift_release();
  *(void *)&long long v22 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EAB0);
  sub_251BFC684();
  uint64_t v13 = sub_251F35620();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_251D97430()
{
  uint64_t v0 = (int *)type metadata accessor for StaticCharacteristic();
  __swift_allocate_value_buffer((uint64_t)v0, qword_269BA3428);
  uint64_t v1 = __swift_project_value_buffer((uint64_t)v0, (uint64_t)qword_269BA3428);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t v3 = *(void *)(*(void *)(v2 - 8) + 64);
  MEMORY[0x270FA5388](v2 - 8);
  unint64_t v30 = 0x8000000251F717B0;
  unint64_t v31 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  sub_251F34D30();
  uint64_t v4 = sub_251F34DA0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  uint64_t v28 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = v6;
  uint64_t result = v6(v28, 1, v4);
  if (result == 1)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v8 = sub_251F34D20();
  long long v27 = &v24;
  uint64_t v24 = *(void *)(v8 - 8);
  uint64_t v25 = v8;
  MEMORY[0x270FA5388](v8);
  unint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_251F34CB0();
  uint64_t v26 = &v24;
  uint64_t v13 = qword_270263FB0;
  uint64_t v12 = unk_270263FB8;
  uint64_t v14 = qword_270263FC0;
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v24 - v31;
  sub_251F34D30();
  uint64_t result = v29(v15, 1, v4);
  if (result == 1)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  if ((v12 & ~v13) != 0) {
    uint64_t v16 = v12;
  }
  else {
    uint64_t v16 = 0;
  }
  uint64_t v17 = v16 | v13;
  if ((v14 & ~v17) != 0) {
    uint64_t v18 = v14;
  }
  else {
    uint64_t v18 = 0;
  }
  uint64_t v19 = v18 | v17;
  long long v20 = *(void (**)(uint64_t, char *, uint64_t))(v5 + 32);
  v20(v1, v28, v4);
  *(unsigned char *)(v1 + v0[5]) = 105;
  uint64_t v21 = v1 + v0[6];
  *(_OWORD *)uint64_t v21 = xmmword_251F3BBE0;
  *(unsigned char *)(v21 + 16) = 0;
  (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v1 + v0[7], v10, v25);
  uint64_t v22 = v1 + v0[8];
  *(void *)(v22 + 8) = 0;
  *(void *)(v22 + 16) = 0;
  *(void *)uint64_t v22 = 1;
  *(unsigned char *)(v22 + 24) = 3;
  *(void *)(v1 + v0[9]) = v19;
  uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v20)(v1 + v0[10], v15, v4);
  uint64_t v23 = v1 + v0[11];
  *(void *)uint64_t v23 = 0;
  *(void *)(v23 + 8) = 0;
  *(void *)(v23 + 16) = 0;
  *(_OWORD *)(v23 + 24) = xmmword_251F3E570;
  return result;
}

uint64_t static StaticCharacteristic.sample.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_269B9C470 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for StaticCharacteristic();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_269BA3428);
  return sub_251D987BC(v3, a1);
}

uint64_t sub_251D977D0@<X0>(uint64_t __s1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  uint64_t v7 = (const void *)__s1;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = (a2 >> 32) - (int)a2;
      if (a2 >> 32 < (int)a2)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      sub_251A1A894(a2, a3);
      unint64_t v10 = (char *)sub_251F34770();
      if (!v10) {
        goto LABEL_8;
      }
      uint64_t v11 = sub_251F347A0();
      if (__OFSUB__((int)a2, v11)) {
LABEL_33:
      }
        __break(1u);
      v10 += (int)a2 - v11;
LABEL_8:
      uint64_t v12 = sub_251F34790();
      if (v12 >= v9) {
        size_t v13 = (a2 >> 32) - (int)a2;
      }
      else {
        size_t v13 = v12;
      }
      if (!v7)
      {
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x251D97A34);
      }
      if (!v10) {
        goto LABEL_36;
      }
      int v14 = memcmp(v7, v10, v13);
      __s1 = sub_251A1AD94(a2, a3);
      BOOL v8 = v14 == 0;
LABEL_24:
      char v24 = v8;
LABEL_29:
      *a4 = v24;
      return __s1;
    case 2uLL:
      uint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 24);
      swift_retain();
      swift_retain();
      uint64_t v17 = (char *)sub_251F34770();
      if (!v17) {
        goto LABEL_17;
      }
      uint64_t v18 = sub_251F347A0();
      if (__OFSUB__(v15, v18)) {
        goto LABEL_32;
      }
      v17 += v15 - v18;
LABEL_17:
      BOOL v19 = __OFSUB__(v16, v15);
      int64_t v20 = v16 - v15;
      if (v19) {
        goto LABEL_31;
      }
      uint64_t v21 = sub_251F34790();
      if (v21 >= v20) {
        size_t v22 = v20;
      }
      else {
        size_t v22 = v21;
      }
      if (!v7) {
        goto LABEL_37;
      }
      if (!v17) {
        goto LABEL_38;
      }
      int v23 = memcmp(v7, v17, v22);
      swift_release();
      __s1 = swift_release();
      BOOL v8 = v23 == 0;
      goto LABEL_24;
    case 3uLL:
      if (!__s1) {
        goto LABEL_39;
      }
      char v24 = 1;
      goto LABEL_29;
    default:
      uint64_t __s2 = a2;
      __int16 v26 = a3;
      char v27 = BYTE2(a3);
      char v28 = BYTE3(a3);
      char v29 = BYTE4(a3);
      char v30 = BYTE5(a3);
      if (__s1)
      {
        __s1 = memcmp((const void *)__s1, &__s2, BYTE6(a3));
        BOOL v8 = __s1 == 0;
        goto LABEL_24;
      }
      __break(1u);
      goto LABEL_35;
  }
}

unint64_t sub_251D97A44(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C9F0);
  uint64_t v2 = sub_251F36700();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_251A1B128(v6, (uint64_t)&v15, &qword_269B9CB18);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_251D97B7C(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_251A0D578(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_251D97B7C(uint64_t a1, uint64_t a2)
{
  sub_251F36CA0();
  sub_251F357B0();
  uint64_t v4 = sub_251F36D00();
  return sub_251D97BF4(a1, a2, v4);
}

unint64_t sub_251D97BF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    char v10 = (void *)(v9 + 16 * i);
    if ((*v10 != a1 || v10[1] != a2) && (sub_251F36B10() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      unint64_t i = (i + 1) & v12;
      if ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
      {
        BOOL v13 = (void *)(v9 + 16 * i);
        if ((*v13 != a1 || v13[1] != a2) && (sub_251F36B10() & 1) == 0)
        {
          for (unint64_t i = (i + 1) & v12; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v12)
          {
            uint64_t v15 = (void *)(v9 + 16 * i);
            if (*v15 == a1 && v15[1] == a2) {
              break;
            }
            if (sub_251F36B10()) {
              break;
            }
          }
        }
      }
    }
  }
  return i;
}

uint64_t sub_251D97D3C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t __s1 = a1;
  __int16 v9 = a2;
  char v10 = BYTE2(a2);
  char v11 = BYTE3(a2);
  char v12 = BYTE4(a2);
  char v13 = BYTE5(a2);
  sub_251D977D0((uint64_t)&__s1, a3, a4, &v7);
  if (!v4) {
    char v5 = v7;
  }
  return v5 & 1;
}

uint64_t sub_251D97E14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result = sub_251F34770();
  uint64_t v11 = result;
  if (result)
  {
    uint64_t result = sub_251F347A0();
    if (__OFSUB__(a1, result))
    {
LABEL_9:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_251F34790();
  sub_251D977D0(v11, a4, a5, &v13);
  if (!v5) {
    char v12 = v13;
  }
  return v12 & 1;
}

uint64_t sub_251D97ECC(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v8) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        JUMPOUT(0x251D98134);
      }
      uint64_t v8 = (int)v8;
LABEL_6:
      switch(a4 >> 62)
      {
        case 1uLL:
          LODWORD(v12) = HIDWORD(a3) - a3;
          if (__OFSUB__(HIDWORD(a3), a3)) {
            goto LABEL_27;
          }
          uint64_t v12 = (int)v12;
LABEL_11:
          if (v8 == v12)
          {
            if (v8 < 1)
            {
              char v17 = 1;
            }
            else
            {
              switch(a2 >> 62)
              {
                case 1uLL:
                  if (a1 >> 32 < (int)a1) {
                    goto LABEL_29;
                  }
                  sub_251A1A894(a3, a4);
                  sub_251A1A894(a1, a2);
                  char v17 = sub_251D97E14((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, a3, a4);
                  sub_251A1AD94(a3, a4);
                  uint64_t v18 = a1;
                  unint64_t v19 = a2;
                  break;
                case 2uLL:
                  uint64_t v20 = a2 & 0x3FFFFFFFFFFFFFFFLL;
                  uint64_t v21 = *(void *)(a1 + 16);
                  uint64_t v22 = *(void *)(a1 + 24);
                  sub_251A1A894(a3, a4);
                  swift_retain();
                  swift_retain();
                  char v17 = sub_251D97E14(v21, v22, v20, a3, a4);
                  sub_251A1AD94(a3, a4);
                  swift_release();
                  swift_release();
                  return v17 & 1;
                case 3uLL:
                  sub_251A1A894(a3, a4);
                  uint64_t v16 = 0;
                  uint64_t v15 = 0;
                  goto LABEL_22;
                default:
                  sub_251A1A894(a3, a4);
                  uint64_t v15 = a2 & 0xFFFFFFFFFFFFFFLL;
                  uint64_t v16 = a1;
LABEL_22:
                  char v17 = sub_251D97D3C(v16, v15, a3, a4);
                  uint64_t v18 = a3;
                  unint64_t v19 = a4;
                  break;
              }
              sub_251A1AD94(v18, v19);
            }
          }
          else
          {
            char v17 = 0;
          }
          return v17 & 1;
        case 2uLL:
          uint64_t v14 = *(void *)(a3 + 16);
          uint64_t v13 = *(void *)(a3 + 24);
          BOOL v11 = __OFSUB__(v13, v14);
          uint64_t v12 = v13 - v14;
          if (!v11) {
            goto LABEL_11;
          }
          goto LABEL_28;
        case 3uLL:
          char v17 = v8 == 0;
          return v17 & 1;
        default:
          uint64_t v12 = BYTE6(a4);
          goto LABEL_11;
      }
    case 2uLL:
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      BOOL v11 = __OFSUB__(v9, v10);
      uint64_t v8 = v9 - v10;
      if (!v11) {
        goto LABEL_6;
      }
      goto LABEL_26;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v8 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t _s13HomeDataModel20StaticCharacteristicV12LoadingStateO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  char v5 = *(unsigned char *)(a1 + 24);
  uint64_t v7 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  int v9 = *(unsigned __int8 *)(a2 + 24);
  switch(v5)
  {
    case 1:
      if (v9 != 1) {
        goto LABEL_44;
      }
      sub_251A1A5A4(*(void *)a1, v3, v4, 1);
      uint64_t v10 = v7;
      uint64_t v11 = v6;
      uint64_t v12 = v8;
      char v13 = 1;
      goto LABEL_6;
    case 2:
      if (v9 != 2)
      {
        swift_bridgeObjectRetain();
        goto LABEL_44;
      }
      if (v2 != v7)
      {
        sub_251A1A550(*(void *)a2, *(void *)(a2 + 8), v8, 2);
        sub_251A1A550(v2, v3, v4, 2);
        sub_251A1A5A4(v2, v3, v4, 2);
        uint64_t v27 = v7;
        uint64_t v28 = v6;
        uint64_t v29 = v8;
        char v30 = 2;
        goto LABEL_45;
      }
      if (v3 == v6 && v4 == v8)
      {
        sub_251A1A550(*(void *)a1, v3, v4, 2);
        sub_251A1A550(v2, v3, v4, 2);
        sub_251A1A5A4(v2, v3, v4, 2);
        uint64_t v20 = v2;
        uint64_t v22 = v3;
        uint64_t v23 = v4;
        char v24 = 2;
        goto LABEL_50;
      }
      char v16 = sub_251F36B10();
      sub_251A1A550(v2, v6, v8, 2);
      sub_251A1A550(v2, v3, v4, 2);
      sub_251A1A5A4(v2, v3, v4, 2);
      sub_251A1A5A4(v2, v6, v8, 2);
      return (v16 & 1) != 0;
    case 3:
      if (v4 | v3 | v2)
      {
        if (v2 == 1 && (v4 | v3) == 0)
        {
          if (v9 == 3 && v7 == 1 && (v8 | v6) == 0)
          {
            uint64_t v14 = 1;
            sub_251A1A5A4(1, 0, 0, 3);
            sub_251A1A5A4(1, 0, 0, 3);
            return v14;
          }
          goto LABEL_44;
        }
        if (v9 != 3 || v7 != 2 || (v8 | v6) != 0)
        {
LABEL_44:
          sub_251A1A550(v7, v6, v8, v9);
          sub_251A1A5A4(v2, v3, v4, v5);
          uint64_t v27 = v7;
          uint64_t v28 = v6;
          uint64_t v29 = v8;
          char v30 = v9;
LABEL_45:
          sub_251A1A5A4(v27, v28, v29, v30);
          return 0;
        }
        sub_251A1A5A4(2, 0, 0, 3);
        uint64_t v20 = 2;
      }
      else
      {
        if (v9 != 3 || (v8 | v6 | v7) != 0) {
          goto LABEL_44;
        }
        sub_251A1A5A4(0, 0, 0, 3);
        uint64_t v20 = 0;
      }
      uint64_t v22 = 0;
      uint64_t v23 = 0;
      char v24 = 3;
LABEL_50:
      sub_251A1A5A4(v20, v22, v23, v24);
      return 1;
    default:
      if (*(unsigned char *)(a2 + 24)) {
        goto LABEL_44;
      }
      sub_251A1A5A4(*(void *)a1, v3, v4, 0);
      uint64_t v10 = v7;
      uint64_t v11 = v6;
      uint64_t v12 = v8;
      char v13 = 0;
LABEL_6:
      sub_251A1A5A4(v10, v11, v12, v13);
      return ((v7 ^ v2) & 1) == 0;
  }
}

BOOL _s13HomeDataModel20StaticCharacteristicV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((sub_251F34D70() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = (int *)type metadata accessor for StaticCharacteristic();
  uint64_t v5 = v4[5];
  char v6 = *(unsigned char *)(a1 + v5);
  LOBYTE(v5) = *(unsigned char *)(a2 + v5);
  LOBYTE(v39) = v6;
  LOBYTE(v35) = v5;
  unint64_t v7 = CharacteristicKind.rawValue.getter();
  uint64_t v9 = v8;
  if (v7 != CharacteristicKind.rawValue.getter()) {
    goto LABEL_5;
  }
  if (v9 == v10)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
LABEL_5:
    char v11 = sub_251F36B10();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    BOOL result = 0;
    if ((v11 & 1) == 0) {
      return result;
    }
  }
  uint64_t v13 = v4[6];
  char v14 = *(unsigned char *)(a1 + v13 + 16);
  long long v39 = *(_OWORD *)(a1 + v13);
  LOBYTE(v40) = v14;
  uint64_t v15 = (long long *)(a2 + v13);
  char v16 = *((unsigned char *)v15 + 16);
  long long v35 = *v15;
  LOBYTE(v36) = v16;
  if ((_s13HomeDataModel18CharacteristicKindO5ValueO2eeoiySbAE_AEtFZ_0((uint64_t)&v39, (uint64_t)&v35) & 1) == 0) {
    return 0;
  }
  if ((sub_251F34CD0() & 1) == 0) {
    return 0;
  }
  uint64_t v17 = v4[8];
  uint64_t v18 = *(void *)(a1 + v17 + 16);
  char v19 = *(unsigned char *)(a1 + v17 + 24);
  long long v39 = *(_OWORD *)(a1 + v17);
  uint64_t v40 = v18;
  LOBYTE(v41) = v19;
  uint64_t v20 = (long long *)(a2 + v17);
  uint64_t v21 = *((void *)v20 + 2);
  LOBYTE(v18) = *((unsigned char *)v20 + 24);
  long long v35 = *v20;
  uint64_t v36 = v21;
  LOBYTE(v37) = v18;
  if ((_s13HomeDataModel20StaticCharacteristicV12LoadingStateO2eeoiySbAE_AEtFZ_0((uint64_t)&v39, (uint64_t)&v35) & 1) == 0
    || *(void *)(a1 + v4[9]) != *(void *)(a2 + v4[9])
    || (sub_251F34D70() & 1) == 0)
  {
    return 0;
  }
  uint64_t v22 = v4[11];
  uint64_t v24 = *(void *)(a1 + v22);
  uint64_t v23 = *(void *)(a1 + v22 + 8);
  uint64_t v26 = *(void *)(a1 + v22 + 16);
  unint64_t v25 = *(void *)(a1 + v22 + 24);
  uint64_t v27 = *(void *)(a1 + v22 + 32);
  uint64_t v28 = (uint64_t *)(a2 + v22);
  uint64_t v30 = *v28;
  uint64_t v29 = v28[1];
  uint64_t v32 = v28[2];
  unint64_t v31 = v28[3];
  uint64_t v33 = v28[4];
  if (v25 >> 8 == 0xFFFFFFFF)
  {
    if (v31 >> 8 == 0xFFFFFFFF) {
      return 1;
    }
    goto LABEL_16;
  }
  *(void *)&long long v39 = v24;
  *((void *)&v39 + 1) = v23;
  uint64_t v40 = v26;
  unint64_t v41 = v25;
  uint64_t v42 = v27;
  if (v31 >> 8 == 0xFFFFFFFF)
  {
    sub_251A11E50(v24, v23, v26, v25);
    sub_251A11E50(v24, v23, v26, v25);
    sub_251A11E74(v24, v23, v26, v25);
LABEL_16:
    sub_251A11E3C(v30, v29, v32, v31);
    sub_251A11E60(v24, v23, v26, v25);
    sub_251A11E60(v30, v29, v32, v31);
    return 0;
  }
  *(void *)&long long v35 = v30;
  *((void *)&v35 + 1) = v29;
  uint64_t v36 = v32;
  unint64_t v37 = v31;
  uint64_t v38 = v33;
  sub_251A11E3C(v24, v23, v26, v25);
  sub_251A11E50(v24, v23, v26, v25);
  BOOL v34 = _s13HomeDataModel28StaticCharacteristicMetadataO2eeoiySbAC_ACtFZ_0((uint64_t *)&v39, (uint64_t *)&v35);
  sub_251A11E74(v39, *((uint64_t *)&v39 + 1), v40, v41);
  sub_251A11E60(v24, v23, v26, v25);
  return v34;
}

uint64_t sub_251D987BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticCharacteristic();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_251D98820(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StaticCharacteristic();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_251D9887C(uint64_t result, unint64_t a2, char a3)
{
  if (a3 != -1) {
    return sub_251B2ED7C(result, a2, a3);
  }
  return result;
}

unint64_t sub_251D98890()
{
  unint64_t result = qword_269BA3448;
  if (!qword_269BA3448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3448);
  }
  return result;
}

unint64_t sub_251D988E4()
{
  unint64_t result = qword_269BA3450;
  if (!qword_269BA3450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3450);
  }
  return result;
}

unint64_t sub_251D98938()
{
  unint64_t result = qword_269BA3458;
  if (!qword_269BA3458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3458);
  }
  return result;
}

unint64_t sub_251D9898C()
{
  unint64_t result = qword_269BA3460;
  if (!qword_269BA3460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3460);
  }
  return result;
}

unint64_t sub_251D989E0()
{
  unint64_t result = qword_269BA3468;
  if (!qword_269BA3468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3468);
  }
  return result;
}

unint64_t sub_251D98A34()
{
  unint64_t result = qword_269BA3478;
  if (!qword_269BA3478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3478);
  }
  return result;
}

unint64_t sub_251D98A88()
{
  unint64_t result = qword_269BA3480;
  if (!qword_269BA3480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3480);
  }
  return result;
}

unint64_t sub_251D98ADC()
{
  unint64_t result = qword_269BA3488;
  if (!qword_269BA3488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3488);
  }
  return result;
}

unint64_t sub_251D98B30()
{
  unint64_t result = qword_269BA3490;
  if (!qword_269BA3490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3490);
  }
  return result;
}

unint64_t sub_251D98B84()
{
  unint64_t result = qword_269BA34B0;
  if (!qword_269BA34B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA34B0);
  }
  return result;
}

unint64_t sub_251D98BD8()
{
  unint64_t result = qword_269BA34B8;
  if (!qword_269BA34B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA34B8);
  }
  return result;
}

unint64_t sub_251D98C2C()
{
  unint64_t result = qword_269BA34C0;
  if (!qword_269BA34C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA34C0);
  }
  return result;
}

unint64_t sub_251D98C80()
{
  unint64_t result = qword_269BA34E8;
  if (!qword_269BA34E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA34E8);
  }
  return result;
}

unint64_t sub_251D98CD4()
{
  unint64_t result = qword_269BA3530;
  if (!qword_269BA3530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3530);
  }
  return result;
}

unint64_t sub_251D98D28()
{
  unint64_t result = qword_269BA3538;
  if (!qword_269BA3538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3538);
  }
  return result;
}

unint64_t sub_251D98D7C()
{
  unint64_t result = qword_269BA3540;
  if (!qword_269BA3540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3540);
  }
  return result;
}

unint64_t sub_251D98DD0()
{
  unint64_t result = qword_269BA3548;
  if (!qword_269BA3548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3548);
  }
  return result;
}

unint64_t sub_251D98E24()
{
  unint64_t result = qword_269BA3550;
  if (!qword_269BA3550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3550);
  }
  return result;
}

unint64_t sub_251D98E78()
{
  unint64_t result = qword_269BA3558;
  if (!qword_269BA3558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3558);
  }
  return result;
}

unint64_t sub_251D98ECC()
{
  unint64_t result = qword_269BA3560;
  if (!qword_269BA3560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3560);
  }
  return result;
}

unint64_t sub_251D98F20()
{
  unint64_t result = qword_269BA3568;
  if (!qword_269BA3568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3568);
  }
  return result;
}

unint64_t sub_251D98F74()
{
  unint64_t result = qword_269BA3570;
  if (!qword_269BA3570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3570);
  }
  return result;
}

unint64_t sub_251D98FC8()
{
  unint64_t result = qword_269BA35B0;
  if (!qword_269BA35B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA35B0);
  }
  return result;
}

unint64_t sub_251D9901C()
{
  unint64_t result = qword_269BA35B8;
  if (!qword_269BA35B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA35B8);
  }
  return result;
}

uint64_t _s13HomeDataModel20StaticCharacteristicV026typedValueIsRoughlyEqualToG0ySbAA0E4KindO0G0O_So8NSObjectCtFZ_0(uint64_t a1)
{
  uint64_t v1 = *(uint64_t *)a1;
  unint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(unsigned __int8 *)(a1 + 16);
  uint64_t result = 0;
  switch(v3)
  {
    case 1:
      self;
      uint64_t result = swift_dynamicCastObjCClass();
      if (result) {
        uint64_t result = objc_msgSend((id)result, sel_integerValue) == (id)v1;
      }
      break;
    case 2:
      self;
      uint64_t result = swift_dynamicCastObjCClass();
      if (result) {
        uint64_t result = objc_msgSend((id)result, sel_integerValue) == (id)(unsigned __int16)v1;
      }
      break;
    case 3:
      self;
      uint64_t result = swift_dynamicCastObjCClass();
      if (result) {
        uint64_t result = objc_msgSend((id)result, sel_integerValue) == (id)v1;
      }
      break;
    case 4:
      if (v1 < 0)
      {
        __break(1u);
        JUMPOUT(0x251D994B4);
      }
      self;
      uint64_t result = swift_dynamicCastObjCClass();
      if (result) {
        uint64_t result = v1 == (void)objc_msgSend((id)result, sel_integerValue);
      }
      break;
    case 5:
    case 6:
      self;
      uint64_t result = swift_dynamicCastObjCClass();
      if (result) {
        uint64_t result = objc_msgSend((id)result, sel_integerValue) == (id)(int)v1;
      }
      break;
    case 7:
      self;
      uint64_t result = swift_dynamicCastObjCClass();
      if (result)
      {
        objc_msgSend((id)result, sel_doubleValue);
        if (v5 + -0.5 >= *(double *)&v1) {
          goto LABEL_25;
        }
        uint64_t result = v5 + 0.5 > *(double *)&v1;
      }
      break;
    case 8:
      self;
      uint64_t result = swift_dynamicCastObjCClass();
      if (result)
      {
        swift_bridgeObjectRetain();
        sub_251F356E0();
        sub_251A580B4(v1, v2, 8);
        goto LABEL_25;
      }
      break;
    case 9:
      self;
      if (!swift_dynamicCastObjCClass()) {
        goto LABEL_23;
      }
      goto LABEL_21;
    case 10:
      self;
      if (swift_dynamicCastObjCClass())
      {
LABEL_21:
        sub_251A1A894(v1, v2);
        sub_251F34C10();
      }
      else
      {
LABEL_23:
        sub_251A1A894(v1, v2);
      }
      sub_251D8A6C8(v1, v2);
      sub_251D8A6C8(0, 0xF000000000000000);
LABEL_25:
      uint64_t result = 0;
      break;
    case 11:
      return result;
    default:
      self;
      uint64_t result = swift_dynamicCastObjCClass();
      if (result) {
        uint64_t result = ((v1 & 1) == 0) ^ objc_msgSend((id)result, sel_BOOLValue);
      }
      break;
  }
  return result;
}

uint64_t sub_251D994E4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_251D9952C()
{
  return sub_251D99574(&qword_269BA35D0, (void (*)(uint64_t))type metadata accessor for StaticCharacteristic);
}

uint64_t sub_251D99574(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_251D995BC()
{
  return sub_251D994E4((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA9570]);
}

unint64_t sub_251D995F0()
{
  unint64_t result = qword_269BA35D8;
  if (!qword_269BA35D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA35D8);
  }
  return result;
}

unint64_t sub_251D99648()
{
  unint64_t result = qword_269BA35E0;
  if (!qword_269BA35E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA35E0);
  }
  return result;
}

unint64_t sub_251D996A0()
{
  unint64_t result = qword_269BA35E8;
  if (!qword_269BA35E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA35E8);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for StaticCharacteristic(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v29 = *a2;
    *a1 = *a2;
    a1 = (void *)(v29 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_251F34DA0();
    long long v35 = *(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16);
    v35(a1, a2, v7);
    uint64_t v8 = a3[6];
    *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = *(void *)((char *)a2 + v8);
    unint64_t v11 = *(void *)((char *)a2 + v8 + 8);
    char v12 = *((unsigned char *)a2 + v8 + 16);
    sub_251B2ED7C(v10, v11, v12);
    *(void *)uint64_t v9 = v10;
    *((void *)v9 + 1) = v11;
    v9[16] = v12;
    uint64_t v13 = a3[7];
    char v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = sub_251F34D20();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    uint64_t v17 = a3[8];
    uint64_t v18 = (char *)a1 + v17;
    char v19 = (char *)a2 + v17;
    uint64_t v20 = *(void *)v19;
    uint64_t v21 = *((void *)v19 + 1);
    uint64_t v22 = *((void *)v19 + 2);
    LOBYTE(v9) = v19[24];
    sub_251A1A550(*(void *)v19, v21, v22, (char)v9);
    *(void *)uint64_t v18 = v20;
    *((void *)v18 + 1) = v21;
    *((void *)v18 + 2) = v22;
    v18[24] = (char)v9;
    uint64_t v23 = a3[10];
    *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
    v35((void *)((char *)a1 + v23), (void *)((char *)a2 + v23), v7);
    uint64_t v24 = a3[11];
    unint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (void *)((char *)a2 + v24);
    unint64_t v27 = v26[3];
    if (v27 >> 8 == 0xFFFFFFFF)
    {
      long long v28 = *((_OWORD *)v26 + 1);
      *(_OWORD *)unint64_t v25 = *(_OWORD *)v26;
      *((_OWORD *)v25 + 1) = v28;
      *((void *)v25 + 4) = v26[4];
    }
    else
    {
      uint64_t v30 = *v26;
      uint64_t v31 = v26[1];
      uint64_t v32 = v26[2];
      uint64_t v33 = v26[4];
      sub_251A11E50(*v26, v31, v32, v26[3]);
      *(void *)unint64_t v25 = v30;
      *((void *)v25 + 1) = v31;
      *((void *)v25 + 2) = v32;
      *((void *)v25 + 3) = v27;
      *((void *)v25 + 4) = v33;
    }
  }
  return a1;
}

uint64_t destroy for StaticCharacteristic(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_251F34DA0();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  sub_251A580B4(*(void *)(a1 + a2[6]), *(void *)(a1 + a2[6] + 8), *(unsigned char *)(a1 + a2[6] + 16));
  uint64_t v6 = a1 + a2[7];
  uint64_t v7 = sub_251F34D20();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  sub_251A1A5A4(*(void *)(a1 + a2[8]), *(void *)(a1 + a2[8] + 8), *(void *)(a1 + a2[8] + 16), *(unsigned char *)(a1 + a2[8] + 24));
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v5)(a1 + a2[10], v4);
  uint64_t v9 = (uint64_t *)(a1 + a2[11]);
  unint64_t v10 = v9[3];
  if (v10 >> 8 != 0xFFFFFFFF)
  {
    uint64_t v11 = *v9;
    uint64_t v12 = v9[1];
    uint64_t v13 = v9[2];
    return sub_251A11E74(v11, v12, v13, v10);
  }
  return result;
}

uint64_t initializeWithCopy for StaticCharacteristic(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v33 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v33(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = *(void *)(a2 + v7);
  unint64_t v10 = *(void *)(a2 + v7 + 8);
  char v11 = *(unsigned char *)(a2 + v7 + 16);
  sub_251B2ED7C(v9, v10, v11);
  *(void *)uint64_t v8 = v9;
  *(void *)(v8 + 8) = v10;
  *(unsigned char *)(v8 + 16) = v11;
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_251F34D20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  uint64_t v16 = a3[8];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = *(void *)v18;
  uint64_t v20 = *(void *)(v18 + 8);
  uint64_t v21 = *(void *)(v18 + 16);
  LOBYTE(v8) = *(unsigned char *)(v18 + 24);
  sub_251A1A550(*(void *)v18, v20, v21, v8);
  *(void *)uint64_t v17 = v19;
  *(void *)(v17 + 8) = v20;
  *(void *)(v17 + 16) = v21;
  *(unsigned char *)(v17 + 24) = v8;
  uint64_t v22 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  v33(a1 + v22, a2 + v22, v6);
  uint64_t v23 = a3[11];
  uint64_t v24 = a1 + v23;
  unint64_t v25 = (uint64_t *)(a2 + v23);
  unint64_t v26 = v25[3];
  if (v26 >> 8 == 0xFFFFFFFF)
  {
    long long v27 = *((_OWORD *)v25 + 1);
    *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
    *(_OWORD *)(v24 + 16) = v27;
    *(void *)(v24 + 32) = v25[4];
  }
  else
  {
    uint64_t v28 = *v25;
    uint64_t v29 = v25[1];
    uint64_t v30 = v25[2];
    uint64_t v31 = v25[4];
    sub_251A11E50(*v25, v29, v30, v25[3]);
    *(void *)uint64_t v24 = v28;
    *(void *)(v24 + 8) = v29;
    *(void *)(v24 + 16) = v30;
    *(void *)(v24 + 24) = v26;
    *(void *)(v24 + 32) = v31;
  }
  return a1;
}

uint64_t assignWithCopy for StaticCharacteristic(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v53 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v53(a1, a2, v6);
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v7 = a3[6];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)v9;
  unint64_t v11 = *(void *)(v9 + 8);
  char v12 = *(unsigned char *)(v9 + 16);
  sub_251B2ED7C(*(void *)v9, v11, v12);
  uint64_t v13 = *(void *)v8;
  unint64_t v14 = *(void *)(v8 + 8);
  *(void *)uint64_t v8 = v10;
  *(void *)(v8 + 8) = v11;
  char v15 = *(unsigned char *)(v8 + 16);
  *(unsigned char *)(v8 + 16) = v12;
  sub_251A580B4(v13, v14, v15);
  uint64_t v16 = a3[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = sub_251F34D20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 24))(v17, v18, v19);
  uint64_t v20 = a3[8];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = *(void *)v22;
  uint64_t v24 = *(void *)(v22 + 8);
  uint64_t v25 = *(void *)(v22 + 16);
  LOBYTE(v8) = *(unsigned char *)(v22 + 24);
  sub_251A1A550(*(void *)v22, v24, v25, v8);
  uint64_t v26 = *(void *)v21;
  uint64_t v27 = *(void *)(v21 + 8);
  uint64_t v28 = *(void *)(v21 + 16);
  *(void *)uint64_t v21 = v23;
  *(void *)(v21 + 8) = v24;
  *(void *)(v21 + 16) = v25;
  char v29 = *(unsigned char *)(v21 + 24);
  *(unsigned char *)(v21 + 24) = v8;
  sub_251A1A5A4(v26, v27, v28, v29);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  v53(a1 + a3[10], a2 + a3[10], v6);
  uint64_t v30 = a3[11];
  uint64_t v31 = a1 + v30;
  uint64_t v32 = (uint64_t *)(a2 + v30);
  unint64_t v33 = *(void *)(a1 + v30 + 24);
  uint64_t v34 = *(void *)(a2 + v30 + 24);
  unint64_t v35 = v34 & 0xFFFFFFFFFFFFFF00;
  if (v33 >> 8 == 0xFFFFFFFF)
  {
    if (v35 == 0xFFFFFFFF00)
    {
      long long v36 = *(_OWORD *)v32;
      long long v37 = *((_OWORD *)v32 + 1);
      *(void *)(v31 + 32) = v32[4];
      *(_OWORD *)uint64_t v31 = v36;
      *(_OWORD *)(v31 + 16) = v37;
    }
    else
    {
      uint64_t v40 = *v32;
      uint64_t v41 = v32[1];
      uint64_t v42 = v32[2];
      uint64_t v43 = v32[4];
      sub_251A11E50(v40, v41, v42, v34);
      *(void *)uint64_t v31 = v40;
      *(void *)(v31 + 8) = v41;
      *(void *)(v31 + 16) = v42;
      *(void *)(v31 + 24) = v34;
      *(void *)(v31 + 32) = v43;
    }
  }
  else if (v35 == 0xFFFFFFFF00)
  {
    sub_251D31124(v31);
    uint64_t v38 = v32[4];
    long long v39 = *((_OWORD *)v32 + 1);
    *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
    *(_OWORD *)(v31 + 16) = v39;
    *(void *)(v31 + 32) = v38;
  }
  else
  {
    uint64_t v44 = *v32;
    uint64_t v45 = v32[1];
    uint64_t v46 = v32[2];
    uint64_t v47 = v32[4];
    sub_251A11E50(v44, v45, v46, v34);
    uint64_t v48 = *(void *)v31;
    uint64_t v49 = *(void *)(v31 + 8);
    uint64_t v50 = *(void *)(v31 + 16);
    uint64_t v51 = *(void *)(v31 + 24);
    *(void *)uint64_t v31 = v44;
    *(void *)(v31 + 8) = v45;
    *(void *)(v31 + 16) = v46;
    *(void *)(v31 + 24) = v34;
    *(void *)(v31 + 32) = v47;
    sub_251A11E74(v48, v49, v50, v51);
  }
  return a1;
}

uint64_t initializeWithTake for StaticCharacteristic(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(unsigned char *)(v9 + 16) = *(unsigned char *)(v10 + 16);
  uint64_t v11 = a3[7];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_251F34D20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[8];
  uint64_t v16 = a3[9];
  uint64_t v17 = (_OWORD *)(a1 + v15);
  uint64_t v18 = (_OWORD *)(a2 + v15);
  *uint64_t v17 = *v18;
  long long v19 = *(_OWORD *)((char *)v18 + 9);
  uint64_t v20 = *(void *)(a2 + v16);
  *(_OWORD *)((char *)v17 + 9) = v19;
  *(void *)(a1 + v16) = v20;
  v7(a1 + a3[10], a2 + a3[10], v6);
  uint64_t v21 = a3[11];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  long long v24 = *(_OWORD *)(v23 + 16);
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  *(_OWORD *)(v22 + 16) = v24;
  *(void *)(v22 + 32) = *(void *)(v23 + 32);
  return a1;
}

uint64_t assignWithTake for StaticCharacteristic(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  char v11 = *(unsigned char *)(v10 + 16);
  uint64_t v12 = *(void *)v9;
  unint64_t v13 = *(void *)(v9 + 8);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  char v14 = *(unsigned char *)(v9 + 16);
  *(unsigned char *)(v9 + 16) = v11;
  sub_251A580B4(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_251F34D20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = *(void *)(v21 + 16);
  char v23 = *(unsigned char *)(v21 + 24);
  uint64_t v24 = *(void *)v20;
  uint64_t v25 = *(void *)(v20 + 8);
  uint64_t v26 = *(void *)(v20 + 16);
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  *(void *)(v20 + 16) = v22;
  char v27 = *(unsigned char *)(v20 + 24);
  *(unsigned char *)(v20 + 24) = v23;
  sub_251A1A5A4(v24, v25, v26, v27);
  uint64_t v28 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  v7(a1 + v28, a2 + v28, v6);
  uint64_t v29 = a3[11];
  uint64_t v30 = (uint64_t *)(a1 + v29);
  uint64_t v31 = a2 + v29;
  unint64_t v32 = *(void *)(a1 + v29 + 24);
  if (v32 >> 8 != 0xFFFFFFFF)
  {
    unint64_t v33 = *(void *)(v31 + 24);
    if (v33 >> 8 != 0xFFFFFFFF)
    {
      uint64_t v35 = *(void *)(v31 + 16);
      uint64_t v36 = *(void *)(v31 + 32);
      uint64_t v37 = *v30;
      uint64_t v38 = v30[1];
      uint64_t v39 = v30[2];
      *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
      v30[2] = v35;
      v30[3] = v33;
      v30[4] = v36;
      sub_251A11E74(v37, v38, v39, v32);
      return a1;
    }
    sub_251D31124((uint64_t)v30);
  }
  long long v34 = *(_OWORD *)(v31 + 16);
  *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
  *((_OWORD *)v30 + 1) = v34;
  v30[4] = *(void *)(v31 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for StaticCharacteristic(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251D9A1C4);
}

uint64_t sub_251D9A1C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_251F34D20();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 28);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unsigned int v14 = *(_DWORD *)(a1 + *(int *)(a3 + 44) + 25);
  int v15 = -2 - v14;
  if ((int)(-2 - v14) < 0) {
    int v15 = -1;
  }
  if (v14 > 0x80000000) {
    return (v15 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for StaticCharacteristic(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251D9A2FC);
}

uint64_t sub_251D9A2FC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_251F34DA0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_251F34D20();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      int v15 = (void *)(a1 + *(int *)(a4 + 44));
      *int v15 = 0;
      v15[1] = 0;
      void v15[2] = 0;
      v15[3] = (unint64_t)~a2 << 8;
      v15[4] = 0;
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 28);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_251D9A41C()
{
  uint64_t result = sub_251F34DA0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_251F34D20();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t destroy for StaticCharacteristic.LoadingState(uint64_t a1)
{
  return sub_251A1A5A4(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
}

uint64_t initializeWithCopy for StaticCharacteristic.LoadingState(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_251A1A550(*(void *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for StaticCharacteristic.LoadingState(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_251A1A550(*(void *)a2, v4, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  char v10 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v6;
  sub_251A1A5A4(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for StaticCharacteristic.LoadingState(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  char v8 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v4;
  sub_251A1A5A4(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for LightbulbColor(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for LightbulbColor(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)uint64_t result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_251D9A6E0(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 24) <= 2u) {
    return *(unsigned __int8 *)(a1 + 24);
  }
  else {
    return (*(_DWORD *)a1 + 3);
  }
}

uint64_t sub_251D9A6F8(uint64_t result, unsigned int a2)
{
  uint64_t v2 = a2 - 3;
  if (a2 >= 3)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    LOBYTE(a2) = 3;
    *(void *)uint64_t result = v2;
  }
  *(unsigned char *)(result + 24) = a2;
  return result;
}

ValueMetadata *type metadata accessor for StaticCharacteristic.LoadingState()
{
  return &type metadata for StaticCharacteristic.LoadingState;
}

ValueMetadata *type metadata accessor for StaticCharacteristic.LoadingState.Source()
{
  return &type metadata for StaticCharacteristic.LoadingState.Source;
}

uint64_t initializeBufferWithCopyOfBuffer for StaticCharacteristic.LoadingState.Error(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for StaticCharacteristic.LoadingState.Error(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for StaticCharacteristic.LoadingState.Error(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ServiceArea.Map(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ServiceArea.Map(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticCharacteristic.LoadingState.Error()
{
  return &type metadata for StaticCharacteristic.LoadingState.Error;
}

unsigned char *storeEnumTagSinglePayload for StaticCharacteristic.LoadingState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251D9A95CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticCharacteristic.LoadingState.CodingKeys()
{
  return &type metadata for StaticCharacteristic.LoadingState.CodingKeys;
}

ValueMetadata *type metadata accessor for StaticCharacteristic.LoadingState.InvalidCodingKeys()
{
  return &type metadata for StaticCharacteristic.LoadingState.InvalidCodingKeys;
}

ValueMetadata *type metadata accessor for StaticCharacteristic.LoadingState.ReadInProgressCodingKeys()
{
  return &type metadata for StaticCharacteristic.LoadingState.ReadInProgressCodingKeys;
}

ValueMetadata *type metadata accessor for StaticCharacteristic.LoadingState.WriteInProgressCodingKeys()
{
  return &type metadata for StaticCharacteristic.LoadingState.WriteInProgressCodingKeys;
}

unsigned char *_s13HomeDataModel20StaticCharacteristicV12LoadingStateO24ReadInProgressCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x251D9AA64);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticCharacteristic.LoadingState.ErrorCodingKeys()
{
  return &type metadata for StaticCharacteristic.LoadingState.ErrorCodingKeys;
}

ValueMetadata *type metadata accessor for StaticCharacteristic.LoadingState.ReadyCodingKeys()
{
  return &type metadata for StaticCharacteristic.LoadingState.ReadyCodingKeys;
}

ValueMetadata *type metadata accessor for StaticCharacteristic.LoadingState.TemporarilyLocalValueCodingKeys()
{
  return &type metadata for StaticCharacteristic.LoadingState.TemporarilyLocalValueCodingKeys;
}

ValueMetadata *type metadata accessor for StaticCharacteristic.LoadingState.Error.CodingKeys()
{
  return &type metadata for StaticCharacteristic.LoadingState.Error.CodingKeys;
}

unsigned char *_s13HomeDataModel20StaticCharacteristicV12LoadingStateO6SourceOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251D9AB98);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticCharacteristic.LoadingState.Source.CodingKeys()
{
  return &type metadata for StaticCharacteristic.LoadingState.Source.CodingKeys;
}

ValueMetadata *type metadata accessor for StaticCharacteristic.LoadingState.Source.DataModelCodingKeys()
{
  return &type metadata for StaticCharacteristic.LoadingState.Source.DataModelCodingKeys;
}

ValueMetadata *type metadata accessor for StaticCharacteristic.LoadingState.Source.HomeFrameworkCodingKeys()
{
  return &type metadata for StaticCharacteristic.LoadingState.Source.HomeFrameworkCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for StaticCharacteristic.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251D9ACBCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticCharacteristic.CodingKeys()
{
  return &type metadata for StaticCharacteristic.CodingKeys;
}

unint64_t sub_251D9ACF8()
{
  unint64_t result = qword_269BA35F0;
  if (!qword_269BA35F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA35F0);
  }
  return result;
}

unint64_t sub_251D9AD50()
{
  unint64_t result = qword_269BA35F8;
  if (!qword_269BA35F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA35F8);
  }
  return result;
}

unint64_t sub_251D9ADA8()
{
  unint64_t result = qword_269BA3600;
  if (!qword_269BA3600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3600);
  }
  return result;
}

unint64_t sub_251D9AE00()
{
  unint64_t result = qword_269BA3608;
  if (!qword_269BA3608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3608);
  }
  return result;
}

unint64_t sub_251D9AE58()
{
  unint64_t result = qword_269BA3610;
  if (!qword_269BA3610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3610);
  }
  return result;
}

unint64_t sub_251D9AEB0()
{
  unint64_t result = qword_269BA3618;
  if (!qword_269BA3618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3618);
  }
  return result;
}

unint64_t sub_251D9AF08()
{
  unint64_t result = qword_269BA3620;
  if (!qword_269BA3620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3620);
  }
  return result;
}

unint64_t sub_251D9AF60()
{
  unint64_t result = qword_269BA3628;
  if (!qword_269BA3628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3628);
  }
  return result;
}

unint64_t sub_251D9AFB8()
{
  unint64_t result = qword_269BA3630;
  if (!qword_269BA3630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3630);
  }
  return result;
}

unint64_t sub_251D9B010()
{
  unint64_t result = qword_269BA3638;
  if (!qword_269BA3638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3638);
  }
  return result;
}

unint64_t sub_251D9B068()
{
  unint64_t result = qword_269BA3640;
  if (!qword_269BA3640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3640);
  }
  return result;
}

unint64_t sub_251D9B0C0()
{
  unint64_t result = qword_269BA3648;
  if (!qword_269BA3648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3648);
  }
  return result;
}

unint64_t sub_251D9B118()
{
  unint64_t result = qword_269BA3650;
  if (!qword_269BA3650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3650);
  }
  return result;
}

unint64_t sub_251D9B170()
{
  unint64_t result = qword_269BA3658;
  if (!qword_269BA3658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3658);
  }
  return result;
}

unint64_t sub_251D9B1C8()
{
  unint64_t result = qword_269BA3660;
  if (!qword_269BA3660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3660);
  }
  return result;
}

unint64_t sub_251D9B220()
{
  unint64_t result = qword_269BA3668;
  if (!qword_269BA3668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3668);
  }
  return result;
}

unint64_t sub_251D9B278()
{
  unint64_t result = qword_269BA3670;
  if (!qword_269BA3670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3670);
  }
  return result;
}

unint64_t sub_251D9B2D0()
{
  unint64_t result = qword_269BA3678;
  if (!qword_269BA3678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3678);
  }
  return result;
}

unint64_t sub_251D9B328()
{
  unint64_t result = qword_269BA3680;
  if (!qword_269BA3680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3680);
  }
  return result;
}

unint64_t sub_251D9B380()
{
  unint64_t result = qword_269BA3688;
  if (!qword_269BA3688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3688);
  }
  return result;
}

unint64_t sub_251D9B3D8()
{
  unint64_t result = qword_269BA3690;
  if (!qword_269BA3690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3690);
  }
  return result;
}

unint64_t sub_251D9B430()
{
  unint64_t result = qword_269BA3698;
  if (!qword_269BA3698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3698);
  }
  return result;
}

unint64_t sub_251D9B488()
{
  unint64_t result = qword_269BA36A0;
  if (!qword_269BA36A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA36A0);
  }
  return result;
}

unint64_t sub_251D9B4E0()
{
  unint64_t result = qword_269BA36A8;
  if (!qword_269BA36A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA36A8);
  }
  return result;
}

unint64_t sub_251D9B538()
{
  unint64_t result = qword_269BA36B0;
  if (!qword_269BA36B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA36B0);
  }
  return result;
}

unint64_t sub_251D9B590()
{
  unint64_t result = qword_269BA36B8;
  if (!qword_269BA36B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA36B8);
  }
  return result;
}

unint64_t sub_251D9B5E8()
{
  unint64_t result = qword_269BA36C0;
  if (!qword_269BA36C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA36C0);
  }
  return result;
}

unint64_t sub_251D9B640()
{
  unint64_t result = qword_269BA36C8;
  if (!qword_269BA36C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA36C8);
  }
  return result;
}

unint64_t sub_251D9B698()
{
  unint64_t result = qword_269BA36D0;
  if (!qword_269BA36D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA36D0);
  }
  return result;
}

unint64_t sub_251D9B6F0()
{
  unint64_t result = qword_269BA36D8;
  if (!qword_269BA36D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA36D8);
  }
  return result;
}

unint64_t sub_251D9B748()
{
  unint64_t result = qword_269BA36E0;
  if (!qword_269BA36E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA36E0);
  }
  return result;
}

uint64_t sub_251D9B79C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000251F71770 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C61566465707974 && a2 == 0xEA00000000006575 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x756C61567473616CLL && a2 == 0xEF65746164705565 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x53676E6964616F6CLL && a2 == 0xEC00000065746174 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x69747265706F7270 && a2 == 0xEA00000000007365 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x4965636976726573 && a2 == 0xE900000000000064 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x617461646174656DLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t sub_251D9BB20(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65646F4D61746164 && a2 == 0xE90000000000006CLL;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D617246656D6F68 && a2 == 0xED00006B726F7765)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_251D9BC44(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701080931 && a2 == 0xE400000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E69616D6F64 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_251D9BD20(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x64696C61766E69 && a2 == 0xE700000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x72506E4964616572 && a2 == 0xEE0073736572676FLL || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x506E496574697277 && a2 == 0xEF73736572676F72 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x726F727265 && a2 == 0xE500000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7964616572 && a2 == 0xE500000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000251F71790)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

double Duration.nanoseconds.getter()
{
  uint64_t v0 = sub_251F36DB0();
  return (double)v0 * 1000000000.0 + (double)v1 * 0.000000001;
}

uint64_t sub_251D9C01C()
{
  uint64_t v1 = (int *)type metadata accessor for StateSnapshot(0);
  uint64_t v2 = *(void *)(*(void *)(v0 + v1[15]) + 16);
  uint64_t v3 = *(void *)(*(void *)(v0 + v1[9]) + 16);
  BOOL v4 = __OFADD__(v2, v3);
  uint64_t v5 = v2 + v3;
  if (v4)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v6 = *(void *)(*(void *)(v0 + v1[12]) + 16);
  BOOL v4 = __OFADD__(v5, v6);
  uint64_t v7 = v5 + v6;
  if (v4)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v8 = *(void *)(*(void *)(v0 + v1[16]) + 16);
  BOOL v4 = __OFADD__(v7, v8);
  uint64_t v9 = v7 + v8;
  if (v4)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v10 = *(void *)(*(void *)(v0 + v1[13]) + 16);
  uint64_t result = v9 + v10;
  if (__OFADD__(v9, v10))
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (result < 0)
  {
LABEL_11:
    uint64_t result = sub_251F36670();
    __break(1u);
  }
  return result;
}

double Duration.milliseconds.getter()
{
  uint64_t v0 = sub_251F36DB0();
  return ((double)v0 * 1000000000.0 + (double)v1 * 0.000000001) / 1000000.0;
}

uint64_t Duration.millisecondsString.getter()
{
  return 0;
}

uint64_t sub_251D9C1DC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = a1;
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = sub_251F36E20();
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  if (v4)
  {
    uint64_t v41 = a2;
    swift_bridgeObjectRetain();
    uint64_t v43 = (uint64_t *)v2;
    uint64_t v9 = (void *)(v2 + 40);
    uint64_t v10 = v4;
    do
    {
      uint64_t v11 = MEMORY[0x2533ABD30](v6, v8, *(v9 - 1), *v9);
      uint64_t v6 = v11;
      uint64_t v8 = v12;
      v9 += 2;
      --v10;
    }
    while (v10);
    uint64_t v42 = v11;
    unint64_t v13 = v43;
    swift_bridgeObjectRelease();
    uint64_t v14 = v43[4];
    uint64_t v15 = v43[5];
    uint64_t v40 = v4;
    uint64_t v16 = v4 - 1;
    if (v16)
    {
      swift_bridgeObjectRetain();
      uint64_t v24 = v43 + 7;
      uint64_t v25 = v16;
      uint64_t v18 = v14;
      uint64_t v17 = v15;
      do
      {
        uint64_t v26 = *(v24 - 1);
        uint64_t v27 = *v24;
        if (sub_251F36DD0())
        {
          uint64_t v18 = v26;
          uint64_t v17 = v27;
        }
        v24 += 2;
        --v25;
      }
      while (v25);
      unint64_t v13 = v43;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      uint64_t v28 = v43 + 7;
      do
      {
        uint64_t v29 = *(v28 - 1);
        uint64_t v30 = *v28;
        if (sub_251F36DD0())
        {
          uint64_t v14 = v29;
          uint64_t v15 = v30;
        }
        v28 += 2;
        --v16;
      }
      while (v16);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v17 = v43[5];
      uint64_t v18 = v43[4];
    }
    uint64_t v31 = sub_251F36E20();
    uint64_t v33 = v32;
    swift_bridgeObjectRetain();
    long long v34 = v13 + 5;
    uint64_t v4 = v40;
    uint64_t v35 = v40;
    do
    {
      uint64_t v31 = MEMORY[0x2533ABD30](v31, v33, *(v34 - 1), *v34);
      uint64_t v33 = v36;
      v34 += 2;
      --v35;
    }
    while (v35);
    uint64_t v2 = (uint64_t)v43;
    swift_bridgeObjectRelease();
    sub_251D9DB4C();
    uint64_t v21 = sub_251F36DC0();
    uint64_t v23 = v37;
    a2 = v41;
  }
  else
  {
    uint64_t v42 = v5;
    uint64_t v18 = sub_251F36E20();
    uint64_t v17 = v19;
    uint64_t v14 = sub_251F36E20();
    uint64_t v15 = v20;
    uint64_t v21 = sub_251F36E20();
    uint64_t v23 = v22;
  }
  uint64_t result = sub_251D9D934(v2);
  *a2 = v4;
  a2[1] = v42;
  a2[2] = v8;
  a2[3] = v18;
  a2[4] = v17;
  a2[5] = v14;
  a2[6] = v15;
  a2[7] = v21;
  a2[8] = v23;
  a2[9] = result;
  a2[10] = v39;
  return result;
}

uint64_t sub_251D9C40C()
{
  return 0;
}

void sub_251D9C59C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 16);
  double v5 = 0.0;
  double v6 = 0.0;
  if (v4)
  {
    if (v4 == 1)
    {
      uint64_t v7 = 0;
LABEL_7:
      uint64_t v10 = v4 - v7;
      uint64_t v11 = (double *)(a1 + 8 * v7 + 32);
      do
      {
        double v12 = *v11++;
        double v6 = v6 + v12;
        --v10;
      }
      while (v10);
      goto LABEL_9;
    }
    uint64_t v7 = v4 & 0x7FFFFFFFFFFFFFFELL;
    uint64_t v8 = (double *)(a1 + 40);
    uint64_t v9 = v4 & 0x7FFFFFFFFFFFFFFELL;
    do
    {
      double v6 = v6 + *(v8 - 1) + *v8;
      v8 += 2;
      v9 -= 2;
    }
    while (v9);
    if (v4 != v7) {
      goto LABEL_7;
    }
  }
LABEL_9:
  double v13 = COERCE_DOUBLE(sub_251CCB13C(a1));
  char v15 = v14;
  double v16 = COERCE_DOUBLE(sub_251CC93B0(a1));
  uint64_t v18 = *(void *)(a1 + 16);
  if (!v18) {
    goto LABEL_18;
  }
  if (v18 == 1)
  {
    uint64_t v19 = 0;
    double v20 = 0.0;
  }
  else
  {
    uint64_t v19 = v18 & 0x7FFFFFFFFFFFFFFELL;
    uint64_t v21 = (double *)(a1 + 40);
    double v20 = 0.0;
    uint64_t v22 = v18 & 0x7FFFFFFFFFFFFFFELL;
    do
    {
      double v20 = v20 + *(v21 - 1) + *v21;
      v21 += 2;
      v22 -= 2;
    }
    while (v22);
    if (v18 == v19) {
      goto LABEL_17;
    }
  }
  uint64_t v23 = v18 - v19;
  uint64_t v24 = (double *)(a1 + 8 * v19 + 32);
  do
  {
    double v25 = *v24++;
    double v20 = v20 + v25;
    --v23;
  }
  while (v23);
LABEL_17:
  double v5 = v20 / (double)v18;
LABEL_18:
  if (v17) {
    double v26 = 0.0;
  }
  else {
    double v26 = v16;
  }
  if (v15) {
    double v27 = 0.0;
  }
  else {
    double v27 = v13;
  }
  double v28 = sub_251D9DBA0(a1);
  *(void *)a2 = v4;
  *(double *)(a2 + 8) = v6;
  *(double *)(a2 + 16) = v27;
  *(double *)(a2 + 24) = v26;
  *(double *)(a2 + 32) = v5;
  *(double *)(a2 + 40) = v28;
}

double Duration.seconds.getter()
{
  uint64_t v0 = sub_251F36DB0();
  return (double)v1 * 1.0e-18 + (double)v0;
}

uint64_t sub_251D9C734()
{
  return sub_251F35610();
}

uint64_t sub_251D9C7F8(void *a1, void *a2)
{
  if (*a1 == *a2
    && (_s14ElementMetricsVMa(), (sub_251F35650() & 1) != 0)
    && (sub_251F35650() & 1) != 0
    && (sub_251F35650() & 1) != 0
    && (sub_251F35650() & 1) != 0)
  {
    char v2 = sub_251F35650();
  }
  else
  {
    char v2 = 0;
  }
  return v2 & 1;
}

BOOL sub_251D9C8FC(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_251D9C90C()
{
  return sub_251F36CB0();
}

uint64_t sub_251D9C934(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746E756F63 && a2 == 0xE500000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7173491 && a2 == 0xE300000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 7235949 && a2 == 0xE300000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 7889261 && a2 == 0xE300000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x65676172657661 && a2 == 0xE700000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x766564647473 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_251D9CB78()
{
  return sub_251F36D00();
}

uint64_t sub_251D9CBC0(char a1)
{
  uint64_t result = 0x746E756F63;
  switch(a1)
  {
    case 1:
      uint64_t result = 7173491;
      break;
    case 2:
      uint64_t result = 7235949;
      break;
    case 3:
      uint64_t result = 7889261;
      break;
    case 4:
      uint64_t result = 0x65676172657661;
      break;
    case 5:
      uint64_t result = 0x766564647473;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_251D9CC6C(void *a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  uint64_t v12 = a2;
  v11[0] = v4;
  v11[1] = v3;
  long long v13 = v3;
  long long v14 = v4;
  _s14ElementMetricsV10CodingKeysOMa();
  swift_getWitnessTable();
  uint64_t v5 = sub_251F36A80();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v11 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251F36DA0();
  LOBYTE(v13) = 0;
  uint64_t v9 = v15;
  sub_251F36A10();
  if (!v9)
  {
    LOBYTE(v13) = 1;
    sub_251F36A20();
    LOBYTE(v13) = 2;
    sub_251F36A20();
    LOBYTE(v13) = 3;
    sub_251F36A20();
    LOBYTE(v13) = 4;
    sub_251F36A20();
    LOBYTE(v13) = 5;
    sub_251F36A20();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_251D9CF10()
{
  return sub_251F36D00();
}

uint64_t sub_251D9CF58@<X0>(void *a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v50 = a6;
  uint64_t v59 = *(void *)(a2 - 8);
  uint64_t v60 = v6;
  uint64_t v12 = MEMORY[0x270FA5388](a1);
  uint64_t v51 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v52 = (char *)&v49 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v53 = (char *)&v49 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v56 = (char *)&v49 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v55 = (char *)&v49 - v20;
  uint64_t v63 = v21;
  uint64_t v64 = v22;
  uint64_t v65 = v23;
  uint64_t v66 = v24;
  _s14ElementMetricsV10CodingKeysOMa();
  swift_getWitnessTable();
  uint64_t v57 = sub_251F368F0();
  uint64_t v54 = *(void *)(v57 - 8);
  MEMORY[0x270FA5388](v57);
  double v26 = (char *)&v49 - v25;
  uint64_t v62 = a2;
  uint64_t v63 = a2;
  uint64_t v64 = a3;
  uint64_t v65 = a4;
  uint64_t v66 = a5;
  uint64_t v61 = (int *)_s14ElementMetricsVMa();
  uint64_t v27 = *((void *)v61 - 1);
  MEMORY[0x270FA5388](v61);
  uint64_t v67 = (uint64_t *)((char *)&v49 - v28);
  uint64_t v29 = a1[3];
  uint64_t v58 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v29);
  uint64_t v30 = v60;
  sub_251F36D90();
  if (v30)
  {
    uint64_t v60 = v30;
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v58);
  }
  else
  {
    uint64_t v32 = v55;
    uint64_t v31 = v56;
    uint64_t v60 = v27;
    LOBYTE(v63) = 0;
    uint64_t v33 = v57;
    uint64_t v34 = sub_251F36870();
    uint64_t v35 = v67;
    uint64_t *v67 = v34;
    LOBYTE(v63) = 1;
    uint64_t v36 = v62;
    uint64_t v37 = a3;
    uint64_t v38 = v26;
    sub_251F36880();
    uint64_t v40 = (char *)v35 + v61[13];
    uint64_t v41 = *(char **)(v59 + 32);
    uint64_t v49 = v59 + 32;
    uint64_t v55 = v41;
    ((void (*)(char *, char *, uint64_t))v41)(v40, v32, v36);
    LOBYTE(v63) = 2;
    uint64_t v42 = v31;
    sub_251F36880();
    uint64_t v43 = v67;
    ((void (*)(char *, char *, uint64_t))v55)((char *)v67 + v61[14], v42, v36);
    LOBYTE(v63) = 3;
    uint64_t v44 = v53;
    uint64_t v56 = v37;
    sub_251F36880();
    ((void (*)(char *, char *, uint64_t))v55)((char *)v43 + v61[15], v44, v36);
    LOBYTE(v63) = 4;
    uint64_t v45 = v52;
    sub_251F36880();
    ((void (*)(char *, char *, uint64_t))v55)((char *)v43 + v61[16], v45, v36);
    LOBYTE(v63) = 5;
    uint64_t v46 = v51;
    sub_251F36880();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v38, v33);
    uint64_t v47 = v61;
    ((void (*)(char *, char *, uint64_t))v55)((char *)v43 + v61[17], v46, v36);
    uint64_t v48 = v60;
    (*(void (**)(uint64_t, uint64_t *, int *))(v60 + 16))(v50, v43, v47);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v58);
    return (*(uint64_t (**)(uint64_t *, int *))(v48 + 8))(v43, v47);
  }
}

BOOL sub_251D9D6F4(char *a1, char *a2)
{
  return sub_251D9C8FC(*a1, *a2);
}

uint64_t sub_251D9D70C()
{
  return sub_251D9CB78();
}

uint64_t sub_251D9D71C()
{
  return sub_251D9C90C();
}

uint64_t sub_251D9D72C()
{
  return sub_251F36D00();
}

uint64_t sub_251D9D778()
{
  return sub_251D9CBC0(*v0);
}

uint64_t sub_251D9D788@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251D9C934(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251D9D7BC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_251D9EAB4();
  *a1 = result;
  return result;
}

uint64_t sub_251D9D7F0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_251D9D844(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_251D9D8A0()
{
  return sub_251F36D00();
}

uint64_t sub_251D9D8E4(void *a1, void *a2)
{
  return sub_251D9C7F8(a1, a2);
}

uint64_t sub_251D9D8F8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_251D9CF58(a1, *(void *)(a2 + 16), *(char **)(a2 + 24), *(void *)(a2 + 32), *(void *)(a2 + 40), a3);
}

uint64_t sub_251D9D91C(void *a1, uint64_t a2)
{
  return sub_251D9CC6C(a1, a2);
}

uint64_t sub_251D9D934(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = sub_251F36E20();
  uint64_t v5 = v4;
  if (v2 < 2) {
    return v3;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = (void *)(a1 + 40);
  unint64_t v7 = v2;
  do
  {
    uint64_t v3 = MEMORY[0x2533ABD30](v3, v5, *(v6 - 1), *v6);
    uint64_t v5 = v8;
    v6 += 2;
    --v7;
  }
  while (v7);
  swift_bridgeObjectRelease();
  sub_251D9DB4C();
  sub_251F36DC0();
  uint64_t v9 = sub_251F36DB0();
  double v11 = (double)v9 * 1000000000.0 + (double)v10 * 0.000000001;
  swift_bridgeObjectRetain();
  uint64_t v12 = a1 + 40;
  double v13 = 0.0;
  unint64_t v14 = v2;
  do
  {
    uint64_t v15 = sub_251F36DB0();
    double v17 = (double)v15 * 1000000000.0 + (double)v16 * 0.000000001 - v11;
    uint64_t v18 = sub_251F36DB0();
    double v13 = v13 + v17 * ((double)v18 * 1000000000.0 + (double)v19 * 0.000000001 - v11);
    v12 += 16;
    --v14;
  }
  while (v14);
  uint64_t v3 = -1000000000;
  uint64_t result = swift_bridgeObjectRelease();
  double v21 = round(sqrt(v13 / (double)(uint64_t)(v2 - 1)));
  if (v21 > 9.22337204e18) {
    return v3;
  }
  if ((~*(void *)&v21 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (v21 <= -9.22337204e18)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v21 < 9.22337204e18) {
    return 1000000000 * (uint64_t)v21;
  }
LABEL_14:
  __break(1u);
  return result;
}

unint64_t sub_251D9DB4C()
{
  unint64_t result = qword_26B21E450;
  if (!qword_26B21E450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B21E450);
  }
  return result;
}

double sub_251D9DBA0(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 16);
  if (v1 < 2) {
    return 0.0;
  }
  unint64_t v2 = (double *)(a1 + 40);
  double v3 = 0.0;
  uint64_t v4 = v1 & 0x7FFFFFFFFFFFFFFELL;
  do
  {
    double v3 = v3 + *(v2 - 1) + *v2;
    v2 += 2;
    v4 -= 2;
  }
  while (v4);
  unint64_t v5 = v1 - (v1 & 0x7FFFFFFFFFFFFFFELL);
  if (v5)
  {
    uint64_t v6 = (double *)(a1 + 16 * (v1 >> 1) + 32);
    do
    {
      double v7 = *v6++;
      double v3 = v3 + v7;
      --v5;
    }
    while (v5);
  }
  double v8 = v3 / (double)(uint64_t)v1;
  if (v1 >= 4)
  {
    uint64_t v9 = v1 & 0x7FFFFFFFFFFFFFFCLL;
    float64x2_t v12 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v8, 0);
    double v13 = (float64x2_t *)(a1 + 48);
    double v10 = 0.0;
    uint64_t v14 = v1 & 0x7FFFFFFFFFFFFFFCLL;
    do
    {
      float64x2_t v15 = vsubq_f64(v13[-1], v12);
      float64x2_t v16 = vsubq_f64(*v13, v12);
      float64x2_t v17 = vmulq_f64(v15, v15);
      float64x2_t v18 = vmulq_f64(v16, v16);
      double v10 = v10 + v17.f64[0] + v17.f64[1] + v18.f64[0] + v18.f64[1];
      v13 += 2;
      v14 -= 4;
    }
    while (v14);
    if (v1 == v9) {
      return sqrt(v10 / (double)(uint64_t)(v1 - 1));
    }
  }
  else
  {
    uint64_t v9 = 0;
    double v10 = 0.0;
  }
  unint64_t v19 = v1 - v9;
  uint64_t v20 = (double *)(a1 + 8 * v9 + 32);
  do
  {
    double v21 = *v20++;
    double v10 = v10 + (v21 - v8) * (v21 - v8);
    --v19;
  }
  while (v19);
  return sqrt(v10 / (double)(uint64_t)(v1 - 1));
}

uint64_t sub_251D9DCA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 56);
}

uint64_t sub_251D9DCB0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_251D9DD58(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  double v3 = a1;
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = v7 + v6;
  unint64_t v9 = ((v7 + v6 + ((v7 + v6 + ((v7 + v6 + ((v7 + v6 + ((v6 + 8) & ~v6)) & ~v6)) & ~v6)) & ~v6)) & ~v6) + v7;
  if (v6 > 7 || (*(_DWORD *)(v5 + 80) & 0x100000) != 0 || v9 > 0x18)
  {
    uint64_t v12 = *a2;
    *double v3 = *a2;
    double v3 = (uint64_t *)(v12 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v13 = ~v6;
    *a1 = *a2;
    uint64_t v14 = ((unint64_t)a1 + v6 + 8) & ~v6;
    uint64_t v15 = ((unint64_t)a2 + v6 + 8) & ~v6;
    float64x2_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    v16(v14, v15, v4);
    uint64_t v17 = (v8 + v14) & v13;
    uint64_t v18 = (v8 + v15) & v13;
    v16(v17, v18, v4);
    uint64_t v19 = (v8 + v17) & v13;
    uint64_t v20 = (v8 + v18) & v13;
    v16(v19, v20, v4);
    uint64_t v21 = (v8 + v19) & v13;
    uint64_t v22 = (v8 + v20) & v13;
    v16(v21, v22, v4);
    v16((v8 + v21) & v13, (v8 + v22) & v13, v4);
  }
  return v3;
}

uint64_t sub_251D9DF24(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  uint64_t v3 = *(void *)(v2 - 8);
  double v11 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  uint64_t v12 = v3 + 8;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (a1 + v4 + 8) & ~v4;
  v11(v5, v2);
  uint64_t v6 = *(void *)(v12 + 56) + v4;
  uint64_t v7 = (v6 + v5) & ~v4;
  v11(v7, v2);
  uint64_t v8 = (v6 + v7) & ~v4;
  v11(v8, v2);
  uint64_t v9 = (v6 + v8) & ~v4;
  v11(v9, v2);
  return ((uint64_t (*)(uint64_t, uint64_t))v11)((v6 + v9) & ~v4, v2);
}

void *sub_251D9E030(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  uint64_t v7 = v5 + 16;
  uint64_t v8 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = ((unint64_t)a1 + v8 + 8) & ~v8;
  uint64_t v10 = ((unint64_t)a2 + v8 + 8) & ~v8;
  v6(v9, v10, v4);
  uint64_t v11 = *(void *)(v7 + 48) + v8;
  uint64_t v12 = (v11 + v9) & ~v8;
  uint64_t v13 = (v11 + v10) & ~v8;
  v6(v12, v13, v4);
  uint64_t v14 = (v11 + v12) & ~v8;
  uint64_t v15 = (v11 + v13) & ~v8;
  v6(v14, v15, v4);
  uint64_t v16 = (v11 + v14) & ~v8;
  uint64_t v17 = (v11 + v15) & ~v8;
  v6(v16, v17, v4);
  v6((v11 + v16) & ~v8, (v11 + v17) & ~v8, v4);
  return a1;
}

void *sub_251D9E164(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24);
  uint64_t v7 = v5 + 24;
  uint64_t v8 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = ((unint64_t)a1 + v8 + 8) & ~v8;
  uint64_t v10 = ((unint64_t)a2 + v8 + 8) & ~v8;
  v6(v9, v10, v4);
  uint64_t v11 = *(void *)(v7 + 40) + v8;
  uint64_t v12 = (v11 + v9) & ~v8;
  uint64_t v13 = (v11 + v10) & ~v8;
  v6(v12, v13, v4);
  uint64_t v14 = (v11 + v12) & ~v8;
  uint64_t v15 = (v11 + v13) & ~v8;
  v6(v14, v15, v4);
  uint64_t v16 = (v11 + v14) & ~v8;
  uint64_t v17 = (v11 + v15) & ~v8;
  v6(v16, v17, v4);
  v6((v11 + v16) & ~v8, (v11 + v17) & ~v8, v4);
  return a1;
}

void *sub_251D9E298(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32);
  uint64_t v7 = v5 + 32;
  uint64_t v8 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = ((unint64_t)a1 + v8 + 8) & ~v8;
  uint64_t v10 = ((unint64_t)a2 + v8 + 8) & ~v8;
  v6(v9, v10, v4);
  uint64_t v11 = *(void *)(v7 + 32) + v8;
  uint64_t v12 = (v11 + v9) & ~v8;
  uint64_t v13 = (v11 + v10) & ~v8;
  v6(v12, v13, v4);
  uint64_t v14 = (v11 + v12) & ~v8;
  uint64_t v15 = (v11 + v13) & ~v8;
  v6(v14, v15, v4);
  uint64_t v16 = (v11 + v14) & ~v8;
  uint64_t v17 = (v11 + v15) & ~v8;
  v6(v16, v17, v4);
  v6((v11 + v16) & ~v8, (v11 + v17) & ~v8, v4);
  return a1;
}

void *sub_251D9E3CC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 40);
  uint64_t v7 = v5 + 40;
  uint64_t v8 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = ((unint64_t)a1 + v8 + 8) & ~v8;
  uint64_t v10 = ((unint64_t)a2 + v8 + 8) & ~v8;
  v6(v9, v10, v4);
  uint64_t v11 = *(void *)(v7 + 24) + v8;
  uint64_t v12 = (v11 + v9) & ~v8;
  uint64_t v13 = (v11 + v10) & ~v8;
  v6(v12, v13, v4);
  uint64_t v14 = (v11 + v12) & ~v8;
  uint64_t v15 = (v11 + v13) & ~v8;
  v6(v14, v15, v4);
  uint64_t v16 = (v11 + v14) & ~v8;
  uint64_t v17 = (v11 + v15) & ~v8;
  v6(v16, v17, v4);
  v6((v11 + v16) & ~v8, (v11 + v17) & ~v8, v4);
  return a1;
}

uint64_t sub_251D9E500(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (!a2) {
    return 0;
  }
  unsigned int v8 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  uint64_t v7 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  uint64_t v9 = ((v7 + v6 + ((v7 + v6 + ((v7 + v6 + ((v7 + v6 + ((v6 + 8) & ~v6)) & ~v6)) & ~v6)) & ~v6)) & ~v6) + v7;
  char v10 = 8 * v9;
  if (v9 <= 3)
  {
    unsigned int v12 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v12))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v12 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v12 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v6 + 8) & ~v6);
      }
      return 0;
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_19;
  }
LABEL_11:
  int v13 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v13 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v9 | v13) + 1;
}

void sub_251D9E6A0(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = *(void *)(v6 + 64);
  size_t v10 = ((v9 + v8 + ((v9 + v8 + ((v9 + v8 + ((v9 + v8 + ((v8 + 8) & ~v8)) & ~v8)) & ~v8)) & ~v8)) & ~v8) + v9;
  BOOL v11 = a3 >= v7;
  unsigned int v12 = a3 - v7;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v14 = ~v7 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x251D9E8F8);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        unint64_t v18 = (unint64_t)&a1[v8 + 8] & ~v8;
        uint64_t v19 = *(void (**)(unint64_t))(v6 + 56);
        v19(v18);
      }
      return;
  }
}

uint64_t _s14ElementMetricsVMa()
{
  return swift_getGenericMetadata();
}

uint64_t sub_251D9E938()
{
  return swift_getWitnessTable();
}

uint64_t _s14ElementMetricsV10CodingKeysOMa()
{
  return swift_getGenericMetadata();
}

unsigned char *sub_251D9E96C(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251D9EA38);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

uint64_t sub_251D9EA60()
{
  return swift_getWitnessTable();
}

uint64_t sub_251D9EA7C()
{
  return swift_getWitnessTable();
}

uint64_t sub_251D9EA98()
{
  return swift_getWitnessTable();
}

uint64_t sub_251D9EAB4()
{
  return 6;
}

id sub_251D9EABC()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0E5A8]), sel_initWithOptions_cachePolicy_, -1, 0);
  objc_msgSend(v0, sel_setDiscretionary_, 0);
  id result = objc_msgSend(v0, sel_setAdaptive_, 1);
  qword_269BF31E8 = (uint64_t)v0;
  return result;
}

id sub_251D9EB28()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0E5A8]), sel_initWithOptions_cachePolicy_, -1, 0);
  objc_msgSend(v0, sel_setDiscretionary_, 0);
  id result = objc_msgSend(v0, sel_setInactiveUpdatingLevel_, 2);
  qword_269BA36E8 = (uint64_t)v0;
  return result;
}

id static HMHomeManagerConfiguration.manualAssertion.getter()
{
  if (qword_269B9C480 != -1) {
    swift_once();
  }
  id v0 = (void *)qword_269BA36E8;
  return v0;
}

uint64_t sub_251D9EBF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  v16[0] = a1;
  v16[1] = a2;
  uint64_t v6 = type metadata accessor for StaticAlarm();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = *(void *)(a3 + 16);
  uint64_t v11 = MEMORY[0x263F8EE78];
  if (v10)
  {
    uint64_t v17 = MEMORY[0x263F8EE78];
    sub_251A3E520(0, v10, 0);
    uint64_t v11 = v17;
    for (uint64_t i = a3 + 32; ; i += 40)
    {
      ((void (*)(uint64_t))v16[0])(i);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v17 = v11;
      unint64_t v14 = *(void *)(v11 + 16);
      unint64_t v13 = *(void *)(v11 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_251A3E520(v13 > 1, v14 + 1, 1);
        uint64_t v11 = v17;
      }
      *(void *)(v11 + 16) = v14 + 1;
      sub_251DB04B4((uint64_t)v9, v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v14, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
      if (!--v10) {
        return v11;
      }
    }
    swift_release();
  }
  return v11;
}

uint64_t sub_251D9ED90(void (*a1)(uint64_t *__return_ptr, char *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = MEMORY[0x263F8EE78];
  if (v5)
  {
    uint64_t v23 = MEMORY[0x263F8EE78];
    sub_251A3E758(0, v5, 0);
    uint64_t v6 = v23;
    uint64_t v8 = (char *)(a3 + 32);
    while (1)
    {
      char v9 = *v8++;
      char v19 = v9;
      a1(&v20, &v19);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v10 = v20;
      __int16 v11 = v21;
      char v12 = v22;
      uint64_t v23 = v6;
      unint64_t v14 = *(void *)(v6 + 16);
      unint64_t v13 = *(void *)(v6 + 24);
      if (v14 >= v13 >> 1)
      {
        __int16 v16 = v21;
        sub_251A3E758(v13 > 1, v14 + 1, 1);
        __int16 v11 = v16;
        uint64_t v6 = v23;
      }
      *(void *)(v6 + 16) = v14 + 1;
      uint64_t v15 = v6 + 16 * v14;
      *(void *)(v15 + 32) = v10;
      *(_WORD *)(v15 + 40) = v11;
      *(unsigned char *)(v15 + 42) = v12;
      if (!--v5) {
        return v6;
      }
    }
    swift_release();
  }
  return v6;
}

uint64_t sub_251D9EEB4(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v39 = a1;
  uint64_t v40 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F240);
  uint64_t v38 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v42 = (uint64_t)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v7 = *(void *)(a3 + 16);
  uint64_t v8 = MEMORY[0x263F8EE78];
  if (!v7) {
    return v8;
  }
  uint64_t v43 = v3;
  uint64_t v44 = MEMORY[0x263F8EE78];
  sub_251A3E904(0, v7, 0);
  uint64_t v9 = sub_251A53EB8(a3);
  uint64_t v11 = v10;
  char v13 = v12 & 1;
  uint64_t v14 = sub_251F34DA0();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v37 = a3 + 56;
  uint64_t v41 = *(void *)(v15 + 64);
  uint64_t v34 = v15 + 32;
  uint64_t v35 = v15 + 16;
  uint64_t v36 = v15;
  uint64_t v32 = v14;
  uint64_t v33 = (void (**)(char *, uint64_t))(v15 + 8);
  uint64_t v31 = a3;
  uint64_t v16 = v15;
  while (1)
  {
    uint64_t result = MEMORY[0x270FA5388](v14);
    uint64_t v20 = (char *)&v30 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (v13) {
      break;
    }
    if (v9 < 0 || v9 >= 1 << *(unsigned char *)(a3 + 32))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      __break(1u);
      break;
    }
    if (((*(void *)(v37 + (((unint64_t)v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
      goto LABEL_18;
    }
    if (*(_DWORD *)(a3 + 36) != v11) {
      goto LABEL_19;
    }
    uint64_t v21 = v18;
    uint64_t v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 16))((char *)&v30 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), *(void *)(a3 + 48) + *(void *)(v16 + 72) * v9, v18);
    MEMORY[0x270FA5388](v22);
    uint64_t v24 = (char *)&v30 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v24, v20, v21);
    uint64_t v25 = v43;
    uint64_t v8 = v40;
    v39(v24);
    uint64_t v43 = v25;
    if (v25)
    {
      (*v33)(v24, v21);
      swift_release();
      return v8;
    }
    (*v33)(v24, v21);
    uint64_t v8 = v44;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_251A3E904(0, *(void *)(v8 + 16) + 1, 1);
      uint64_t v8 = v44;
    }
    unint64_t v27 = *(void *)(v8 + 16);
    unint64_t v26 = *(void *)(v8 + 24);
    if (v27 >= v26 >> 1)
    {
      sub_251A3E904(v26 > 1, v27 + 1, 1);
      uint64_t v8 = v44;
    }
    *(void *)(v8 + 16) = v27 + 1;
    sub_251DB0D10(v42, v8+ ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ *(void *)(v38 + 72) * v27);
    a3 = v31;
    uint64_t v14 = sub_251A53F5C(v9, v11, 0, v31);
    uint64_t v9 = v14;
    uint64_t v11 = v28;
    char v13 = v29 & 1;
    if (!--v7)
    {
      sub_251A4ECE4(v14, v28, v29 & 1);
      return v8;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_251D9F27C()
{
  return sub_251F34CF0();
}

uint64_t CoordinationDataModel.onboard(siriEndpointProfile:parentContainerID:)(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType();
  v2[39] = a2;
  v2[40] = ObjectType;
  v2[38] = a1;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EAE0);
  v2[41] = v6;
  v2[42] = *(void *)(v6 - 8);
  v2[43] = swift_task_alloc();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1010);
  v2[44] = v7;
  v2[45] = *(void *)(v7 - 8);
  v2[46] = swift_task_alloc();
  v2[47] = type metadata accessor for CoordinationSnapshot.UpdateType();
  v2[48] = swift_task_alloc();
  v2[49] = sub_251F35C80();
  v2[50] = sub_251F35C70();
  uint64_t v9 = sub_251F35C00();
  v2[51] = v9;
  v2[52] = v8;
  return MEMORY[0x270FA2498](sub_251D9F43C, v9, v8);
}

uint64_t sub_251D9F43C()
{
  uint64_t v62 = v0;
  if (objc_msgSend(*(id *)(v0 + 304), sel_sessionState) == (id)1)
  {
    swift_release();
    if (qword_269B9C2C0 != -1) {
      swift_once();
    }
    uint64_t v2 = *(void **)(v0 + 304);
    uint64_t v1 = *(void *)(v0 + 312);
    uint64_t v3 = sub_251F350A0();
    __swift_project_value_buffer(v3, (uint64_t)qword_269B9DEE0);
    uint64_t v4 = sub_251F34DA0();
    uint64_t v5 = *(void *)(v4 - 8);
    uint64_t v6 = swift_task_alloc();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v6, v1, v4);
    id v7 = v2;
    uint64_t v8 = sub_251F35080();
    os_log_type_t v9 = sub_251F35FD0();
    BOOL v10 = os_log_type_enabled(v8, v9);
    uint64_t v11 = *(void **)(v0 + 304);
    if (v10)
    {
      os_log_type_t type = v9;
      uint64_t v12 = swift_slowAlloc();
      uint64_t v55 = (void *)swift_slowAlloc();
      uint64_t v59 = swift_slowAlloc();
      v61[0] = v59;
      *(_DWORD *)uint64_t v12 = 138412546;
      *(void *)(v0 + 264) = v11;
      id v13 = v11;
      sub_251F361D0();
      *uint64_t v55 = v11;

      *(_WORD *)(v12 + 12) = 2080;
      sub_251AF752C();
      uint64_t v14 = sub_251F36AB0();
      *(void *)(v0 + 240) = sub_251A00E84(v14, v15, v61);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v6, v4);
      _os_log_impl(&dword_2519F3000, v8, type, "Session already active for %@ with parentUUID: %s, no need to onboard", (uint8_t *)v12, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v55, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v59, -1, -1);
      MEMORY[0x2533AC760](v12, -1, -1);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v6, v4);
    }

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v34 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v34(1);
  }
  else
  {
    if (qword_269B9C2C0 != -1) {
      swift_once();
    }
    uint64_t v17 = *(void **)(v0 + 304);
    uint64_t v16 = *(void *)(v0 + 312);
    uint64_t v18 = sub_251F350A0();
    *(void *)(v0 + 424) = __swift_project_value_buffer(v18, (uint64_t)qword_269B9DEE0);
    uint64_t v19 = sub_251F34DA0();
    *(void *)(v0 + 432) = v19;
    uint64_t v20 = *(void **)(v19 - 8);
    *(void *)(v0 + 440) = v20[8];
    uint64_t v21 = swift_task_alloc();
    uint64_t v22 = v20[2];
    *(void *)(v0 + 448) = v22;
    *(void *)(v0 + 456) = (unint64_t)(v20 + 2) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    os_log_t log = v22;
    ((void (*)(uint64_t, uint64_t, uint64_t))v22)(v21, v16, v19);
    id v23 = v17;
    uint64_t v24 = sub_251F35080();
    os_log_type_t v25 = sub_251F35FD0();
    BOOL v26 = os_log_type_enabled(v24, v25);
    unint64_t v27 = *(void **)(v0 + 304);
    uint64_t v60 = v20;
    if (v26)
    {
      os_log_type_t v56 = v25;
      uint64_t v28 = swift_slowAlloc();
      uint64_t v52 = (void *)swift_slowAlloc();
      uint64_t v53 = swift_slowAlloc();
      v61[0] = v53;
      *(_DWORD *)uint64_t v28 = 138412546;
      *(void *)(v0 + 288) = v27;
      uint64_t v29 = v21;
      id v30 = v27;
      sub_251F361D0();
      *uint64_t v52 = v27;

      *(_WORD *)(v28 + 12) = 2080;
      sub_251AF752C();
      uint64_t v31 = sub_251F36AB0();
      *(void *)(v0 + 296) = sub_251A00E84(v31, v32, v61);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      uint64_t v33 = (void (*)(uint64_t, uint64_t))v20[1];
      v33(v29, v19);
      _os_log_impl(&dword_2519F3000, v24, v56, "Update to loading state for %@ with parentUUID: %s", (uint8_t *)v28, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v52, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v53, -1, -1);
      MEMORY[0x2533AC760](v28, -1, -1);
    }
    else
    {

      uint64_t v33 = (void (*)(uint64_t, uint64_t))v20[1];
      v33(v21, v19);
    }

    uint64_t v54 = v33;
    *(void *)(v0 + 464) = v33;
    swift_task_dealloc();
    if (qword_269B9C2B0 != -1) {
      swift_once();
    }
    uint64_t v36 = *(uint64_t **)(v0 + 384);
    uint64_t v37 = *(void *)(v0 + 312);
    *(void *)(v0 + 472) = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB80);
    *(void *)(v0 + 480) = v60[9];
    int v38 = *((_DWORD *)v60 + 20);
    *(_DWORD *)(v0 + 620) = v38;
    unint64_t v39 = (v38 + 32) & ~(unint64_t)v38;
    uint64_t v40 = swift_allocObject();
    *(_OWORD *)(v40 + 16) = xmmword_251F38650;
    ((void (*)(unint64_t, uint64_t, uint64_t))log)(v40 + v39, v37, v19);
    *uint64_t v36 = v40;
    swift_storeEnumTagMultiPayload();
    *(void *)(v0 + 488) = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EBB0);
    uint64_t inited = swift_initStackObject();
    *(void *)(v0 + 496) = inited;
    *(_OWORD *)(inited + 16) = xmmword_251F38640;
    uint64_t v42 = swift_task_alloc();
    ((void (*)(uint64_t, uint64_t, uint64_t))log)(v42, v37, v19);
    *(void *)(v0 + 504) = type metadata accessor for _CoordinationClassObject();
    uint64_t v43 = swift_allocObject();
    ((void (*)(uint64_t, uint64_t, uint64_t))log)(v43 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_id, v42, v19);
    uint64_t v44 = swift_task_alloc();
    *(void *)(v44 + 16) = v42;
    uint64_t v45 = MEMORY[0x263F8EE78];
    uint64_t v46 = sub_251D9EBF0((uint64_t)sub_251C68E40, v44, MEMORY[0x263F8EE78]);
    swift_task_dealloc();
    *(void *)(v43 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_alarms) = v46;
    uint64_t v47 = swift_task_alloc();
    *(void *)(v47 + 16) = v42;
    uint64_t v48 = sub_251A52718((void (*)(uint64_t))sub_251C68E60, v47, v45);
    *(void *)(v0 + 512) = 0;
    swift_task_dealloc();
    *(void *)(v0 + 520) = (unint64_t)(v60 + 1) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v54(v42, v19);
    *(void *)(v43 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_timers) = v48;
    *(void *)(v43 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_alarmError) = 1;
    *(void *)(v43 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_timerError) = 1;
    swift_task_dealloc();
    *(void *)(inited + 32) = v43;
    v61[0] = inited;
    sub_251F35AE0();
    uint64_t v49 = v61[0];
    *(void *)(v0 + 528) = v61[0];
    uint64_t v50 = (void *)swift_task_alloc();
    *(void *)(v0 + 536) = v50;
    *uint64_t v50 = v0;
    v50[1] = sub_251D9FD90;
    uint64_t v51 = *(void *)(v0 + 384);
    return sub_251D39E48(v0 + 232, v51, v49);
  }
}

uint64_t sub_251D9FD90()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 384);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_251DB05DC(v2, (uint64_t (*)(void))type metadata accessor for CoordinationSnapshot.UpdateType);
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v1 + 416);
  uint64_t v4 = *(void *)(v1 + 408);
  return MEMORY[0x270FA2498](sub_251D9FF1C, v4, v3);
}

uint64_t sub_251D9FF1C()
{
  uint64_t v36 = v0;
  uint64_t v28 = (void (*)(uint64_t, uint64_t))v0[58];
  uint64_t v1 = (void (*)(uint64_t, uint64_t, uint64_t))v0[56];
  uint64_t v2 = v0[54];
  uint64_t v3 = v0[39];
  uint64_t v33 = (void *)v0[38];
  uint64_t v31 = v3;
  uint64_t v4 = swift_task_alloc();
  v1(v4, v3, v2);
  uint64_t v5 = swift_allocObject();
  v0[68] = v5;
  v1(v5 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_id, v4, v2);
  uint64_t v6 = swift_task_alloc();
  *(void *)(v6 + 16) = v4;
  uint64_t v7 = MEMORY[0x263F8EE78];
  uint64_t v8 = sub_251D9EBF0((uint64_t)sub_251C69D40, v6, MEMORY[0x263F8EE78]);
  swift_task_dealloc();
  *(void *)(v5 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_alarms) = v8;
  uint64_t v9 = swift_task_alloc();
  *(void *)(v9 + 16) = v4;
  uint64_t v10 = sub_251A52718((void (*)(uint64_t))sub_251C69D6C, v9, v7);
  swift_task_dealloc();
  v28(v4, v2);
  *(void *)(v5 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_timers) = v10;
  *(void *)(v5 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_alarmError) = 3;
  *(void *)(v5 + OBJC_IVAR____TtC13HomeDataModel24_CoordinationClassObject_timerError) = 3;
  swift_task_dealloc();
  uint64_t v11 = swift_task_alloc();
  v1(v11, v31, v2);
  id v12 = v33;
  id v13 = sub_251F35080();
  os_log_type_t v14 = sub_251F35FD0();
  if (os_log_type_enabled(v13, v14))
  {
    unint64_t v32 = (void (*)(uint64_t, uint64_t))v0[58];
    uint64_t v29 = v0[54];
    unint64_t v15 = (void *)v0[38];
    uint64_t v16 = swift_slowAlloc();
    os_log_t log = v13;
    uint64_t v17 = (void *)swift_slowAlloc();
    uint64_t v34 = swift_slowAlloc();
    uint64_t v35 = v34;
    *(_DWORD *)uint64_t v16 = 138412546;
    v0[34] = v15;
    id v18 = v15;
    sub_251F361D0();
    *uint64_t v17 = v15;

    *(_WORD *)(v16 + 12) = 2080;
    sub_251AF752C();
    uint64_t v19 = sub_251F36AB0();
    v0[35] = sub_251A00E84(v19, v20, &v35);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    v32(v11, v29);
    _os_log_impl(&dword_2519F3000, log, v14, "Perform onboarding for %@ with parentUUID: %s", (uint8_t *)v16, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v17, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v34, -1, -1);
    MEMORY[0x2533AC760](v16, -1, -1);
  }
  else
  {
    uint64_t v21 = (void (*)(uint64_t, uint64_t))v0[58];
    uint64_t v22 = v0[54];
    id v23 = (void *)v0[38];

    v21(v11, v22);
  }
  uint64_t v24 = (void *)v0[38];
  swift_task_dealloc();
  id v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0E7B0]), sel_init);
  v0[69] = v25;
  v0[2] = v0;
  v0[7] = v0 + 25;
  v0[3] = sub_251DA03B0;
  uint64_t v26 = swift_continuation_init();
  v0[20] = MEMORY[0x263EF8330];
  v0[21] = 0x40000000;
  v0[22] = sub_251DA1044;
  v0[23] = &block_descriptor_13;
  v0[24] = v26;
  objc_msgSend(v24, sel_applyOnboardingSelections_completionHandler_, v25, v0 + 20);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_251DA03B0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 560) = v2;
  uint64_t v3 = *(void *)(v1 + 416);
  uint64_t v4 = *(void *)(v1 + 408);
  if (v2) {
    uint64_t v5 = sub_251DA0C6C;
  }
  else {
    uint64_t v5 = sub_251DA04E0;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_251DA04E0()
{
  uint64_t v49 = v0;
  uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 448);
  uint64_t v2 = *(void *)(v0 + 432);
  uint64_t v4 = *(void **)(v0 + 304);
  uint64_t v3 = *(void *)(v0 + 312);

  uint64_t v5 = swift_task_alloc();
  v1(v5, v3, v2);
  id v6 = v4;
  uint64_t v7 = sub_251F35080();
  os_log_type_t v8 = sub_251F35FD0();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v43 = *(void (**)(uint64_t, uint64_t))(v0 + 464);
    uint64_t v38 = *(void *)(v0 + 432);
    uint64_t v9 = *(void **)(v0 + 304);
    uint64_t v10 = swift_slowAlloc();
    uint64_t v11 = (void *)swift_slowAlloc();
    uint64_t v45 = swift_slowAlloc();
    *(void *)(v0 + 248) = v9;
    uint64_t v48 = v45;
    *(_DWORD *)uint64_t v10 = 138412802;
    os_log_type_t type = v8;
    os_log_t log = v7;
    id v12 = v9;
    sub_251F361D0();
    *uint64_t v11 = v9;

    *(_WORD *)(v10 + 12) = 2080;
    sub_251AF752C();
    uint64_t v13 = sub_251F36AB0();
    *(void *)(v0 + 256) = sub_251A00E84(v13, v14, &v48);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    v43(v5, v38);
    *(_WORD *)(v10 + 22) = 1024;
    id v15 = objc_msgSend(v12, sel_sessionState);

    *(_DWORD *)(v0 + 616) = v15 == (id)1;
    sub_251F361D0();

    _os_log_impl(&dword_2519F3000, log, type, "Perform onboarding finish for %@ with parentUUID: %s with result %{BOOL}d", (uint8_t *)v10, 0x1Cu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v11, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v45, -1, -1);
    MEMORY[0x2533AC760](v10, -1, -1);
  }
  else
  {
    uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v0 + 464);
    uint64_t v17 = *(void *)(v0 + 432);
    id v18 = *(void **)(v0 + 304);

    v16(v5, v17);
  }
  uint64_t v19 = *(void **)(v0 + 304);
  swift_task_dealloc();
  if (objc_msgSend(v19, sel_sessionState) == (id)1)
  {
    swift_release();
    if (qword_26B21E180 != -1) {
      swift_once();
    }
    os_log_t loga = *(os_log_t *)(v0 + 448);
    uint64_t v39 = *(void *)(v0 + 432);
    unint64_t v20 = *(uint64_t **)(v0 + 384);
    uint64_t v21 = *(void *)(v0 + 360);
    uint64_t v44 = *(void *)(v0 + 368);
    uint64_t v22 = *(void *)(v0 + 344);
    uint64_t v46 = *(void *)(v0 + 352);
    uint64_t v24 = *(void *)(v0 + 328);
    uint64_t v23 = *(void *)(v0 + 336);
    unint64_t v25 = (*(unsigned __int8 *)(v0 + 620) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 620);
    uint64_t v26 = *(void *)(v0 + 312);
    uint64_t v27 = __swift_project_value_buffer(v24, (uint64_t)qword_26B21E350);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v22, v27, v24);
    uint64_t v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_251F38650;
    ((void (*)(unint64_t, uint64_t, uint64_t))loga)(v28 + v25, v26, v39);
    *unint64_t v20 = v28;
    swift_storeEnumTagMultiPayload();
    sub_251F35CF0();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v44, v46);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v29 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v29(1);
  }
  else
  {
    uint64_t v31 = *(void *)(v0 + 544);
    uint64_t v32 = *(void *)(v0 + 320);
    long long v47 = *(_OWORD *)(v0 + 304);
    uint64_t v33 = sub_251F35C70();
    *(void *)(v0 + 568) = v33;
    uint64_t v34 = swift_task_alloc();
    *(void *)(v0 + 576) = v34;
    *(_OWORD *)(v34 + 16) = v47;
    *(void *)(v34 + 32) = v31;
    *(void *)(v34 + 40) = v32;
    uint64_t v35 = (void *)swift_task_alloc();
    *(void *)(v0 + 584) = v35;
    *uint64_t v35 = v0;
    v35[1] = sub_251DA0A70;
    uint64_t v36 = MEMORY[0x263F8F500];
    uint64_t v37 = MEMORY[0x263F8D4F8];
    return MEMORY[0x270FA2318](v0 + 624, v33, v36, 0xD00000000000002FLL, 0x8000000251F71800, sub_251DAFD44, v34, v37);
  }
}

uint64_t sub_251DA0A70()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 416);
  uint64_t v3 = *(void *)(v1 + 408);
  return MEMORY[0x270FA2498](sub_251DA0BD0, v3, v2);
}

uint64_t sub_251DA0BD0()
{
  swift_release();
  swift_release();
  uint64_t v1 = *(unsigned __int8 *)(v0 + 624);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_251DA0C6C()
{
  uint64_t v1 = *(void **)(v0 + 552);
  uint64_t v12 = *(void *)(v0 + 544);
  uint64_t v11 = *(void (**)(unint64_t, uint64_t, uint64_t))(v0 + 448);
  uint64_t v2 = *(void *)(v0 + 432);
  uint64_t v3 = *(uint64_t **)(v0 + 384);
  uint64_t v4 = *(void *)(v0 + 312);
  unint64_t v5 = (*(unsigned __int8 *)(v0 + 620) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 620);
  swift_willThrow();

  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_251F38650;
  v11(v6 + v5, v4, v2);
  *uint64_t v3 = v6;
  swift_storeEnumTagMultiPayload();
  uint64_t inited = swift_initStackObject();
  *(void *)(v0 + 592) = inited;
  *(_OWORD *)(inited + 16) = xmmword_251F38640;
  *(void *)(inited + 32) = v12;
  uint64_t v13 = inited;
  sub_251F35AE0();
  *(void *)(v0 + 600) = v13;
  swift_retain();
  os_log_type_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 608) = v8;
  *os_log_type_t v8 = v0;
  v8[1] = sub_251DA0E1C;
  uint64_t v9 = *(void *)(v0 + 384);
  return sub_251D39E48(v0 + 224, v9, v13);
}

uint64_t sub_251DA0E1C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 384);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_251DB05DC(v2, (uint64_t (*)(void))type metadata accessor for CoordinationSnapshot.UpdateType);
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v1 + 416);
  uint64_t v4 = *(void *)(v1 + 408);
  return MEMORY[0x270FA2498](sub_251DA0FA8, v4, v3);
}

uint64_t sub_251DA0FA8()
{
  uint64_t v1 = *(void **)(v0 + 560);
  swift_release();
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2(0);
}

uint64_t sub_251DA1044(uint64_t a1, void *a2, uint64_t a3)
{
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D1B0);
    swift_allocError();
    *uint64_t v4 = a2;
    id v5 = a2;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    **(void **)(*(void *)(*(void *)(a1 + 32) + 64) + 40) = a3;
    return swift_continuation_throwingResume();
  }
}

void sub_251DA10F8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v26 = a4;
  uint64_t v27 = a5;
  unint64_t v25 = a2;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA37A8);
  uint64_t v23 = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x270FA5388](v7);
  uint64_t v24 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v28 = self;
  uint64_t v10 = sub_251F34DA0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a3, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v7);
  unint64_t v14 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v15 = (v12 + *(unsigned __int8 *)(v8 + 80) + v14) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v16 = (v9 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v17 = swift_allocObject();
  id v18 = v25;
  *(void *)(v17 + 16) = v25;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v17 + v14, v13, v10);
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v17 + v15, v24, v23);
  uint64_t v19 = v27;
  *(void *)(v17 + v16) = v26;
  *(void *)(v17 + ((v16 + 15) & 0xFFFFFFFFFFFFFFF8)) = v19;
  aBlock[4] = sub_251DB0F0C;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_251DA2200;
  aBlock[3] = &block_descriptor_165;
  unint64_t v20 = _Block_copy(aBlock);
  id v21 = v18;
  swift_retain();
  swift_release();
  id v22 = objc_msgSend(v28, sel_scheduledTimerWithTimeInterval_repeats_block_, 0, v20, 20.0);
  _Block_release(v20);
}

uint64_t sub_251DA13DC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v71 = a6;
  uint64_t v75 = a4;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  MEMORY[0x270FA5388](v9 - 8);
  char v70 = &v55[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t updated = type metadata accessor for CoordinationSnapshot.UpdateType();
  MEMORY[0x270FA5388](updated);
  uint64_t v67 = (uint64_t *)&v55[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EAE0);
  uint64_t v66 = *(void *)(v68 - 8);
  MEMORY[0x270FA5388](v68);
  uint64_t v65 = &v55[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1010);
  uint64_t v63 = *(void *)(v13 - 8);
  uint64_t v64 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v62 = &v55[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_269B9C2C0 != -1) {
    swift_once();
  }
  uint64_t v15 = sub_251F350A0();
  __swift_project_value_buffer(v15, (uint64_t)qword_269B9DEE0);
  uint64_t v16 = sub_251F34DA0();
  uint64_t v72 = v55;
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v61 = v18;
  uint64_t v19 = &v55[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v73 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v17 + 16);
  uint64_t v74 = v17 + 16;
  v73(v19, a3, v16);
  id v20 = a2;
  id v21 = sub_251F35080();
  os_log_type_t v22 = sub_251F35FD0();
  int v23 = v22;
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v24 = swift_slowAlloc();
    uint64_t v60 = a3;
    uint64_t v25 = v24;
    uint64_t v26 = (void *)swift_slowAlloc();
    uint64_t v58 = swift_slowAlloc();
    uint64_t v76 = (uint64_t)v20;
    uint64_t v77 = v58;
    *(_DWORD *)uint64_t v25 = 138412802;
    os_log_t v57 = v21;
    int v56 = v23;
    id v27 = v20;
    uint64_t v59 = a5;
    id v28 = v27;
    sub_251F361D0();
    *uint64_t v26 = v20;

    *(_WORD *)(v25 + 12) = 2080;
    sub_251AF752C();
    uint64_t v29 = sub_251F36AB0();
    uint64_t v76 = sub_251A00E84(v29, v30, &v77);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    uint64_t v31 = v17;
    uint64_t v32 = *(void (**)(unsigned char *, uint64_t))(v17 + 8);
    uint64_t v33 = v16;
    v32(v19, v16);
    *(_WORD *)(v25 + 22) = 1024;
    id v34 = objc_msgSend(v28, sel_sessionState);

    LODWORD(v76) = v34 == (id)1;
    sub_251F361D0();

    a5 = v59;
    os_log_t v35 = v57;
    _os_log_impl(&dword_2519F3000, v57, (os_log_type_t)v56, "20 seconds timer time up for %@ with parentUUID: %s with result %{BOOL}d", (uint8_t *)v25, 0x1Cu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v26, -1, -1);
    uint64_t v36 = v58;
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v36, -1, -1);
    uint64_t v37 = v25;
    a3 = v60;
    MEMORY[0x2533AC760](v37, -1, -1);
  }
  else
  {

    uint64_t v31 = v17;
    uint64_t v38 = *(void (**)(unsigned char *, uint64_t))(v17 + 8);
    uint64_t v33 = v16;
    v38(v19, v16);
  }
  if (objc_msgSend(v20, sel_sessionState) == (id)1)
  {
    if (qword_26B21E180 != -1) {
      swift_once();
    }
    uint64_t v39 = v68;
    uint64_t v40 = __swift_project_value_buffer(v68, (uint64_t)qword_26B21E350);
    uint64_t v42 = v65;
    uint64_t v41 = v66;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v66 + 16))(v65, v40, v39);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB80);
    unint64_t v43 = (*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
    uint64_t v44 = swift_allocObject();
    *(_OWORD *)(v44 + 16) = xmmword_251F38650;
    v73((unsigned char *)(v44 + v43), a3, v33);
    uint64_t *v67 = v44;
    swift_storeEnumTagMultiPayload();
    uint64_t v45 = v62;
    sub_251F35CF0();
    (*(void (**)(unsigned char *, uint64_t))(v41 + 8))(v42, v39);
    (*(void (**)(unsigned char *, uint64_t))(v63 + 8))(v45, v64);
    LOBYTE(v77) = 1;
  }
  else
  {
    uint64_t v46 = sub_251F35CD0();
    uint64_t v47 = (uint64_t)v70;
    uint64_t v48 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v70, 1, 1, v46);
    uint64_t v49 = v61;
    MEMORY[0x270FA5388](v48);
    uint64_t v50 = &v55[-((v49 + 15) & 0xFFFFFFFFFFFFFFF0)];
    v73(v50, a3, v33);
    unint64_t v51 = (*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
    unint64_t v52 = (v49 + v51 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v53 = swift_allocObject();
    *(void *)(v53 + 16) = 0;
    *(void *)(v53 + 24) = 0;
    (*(void (**)(unint64_t, unsigned char *, uint64_t))(v31 + 32))(v53 + v51, v50, v33);
    *(void *)(v53 + v52) = a5;
    *(void *)(v53 + ((v52 + 15) & 0xFFFFFFFFFFFFFFF8)) = v71;
    swift_retain();
    sub_251ACBD1C(v47, (uint64_t)&unk_269BA37B8, v53);
    swift_release();
    LOBYTE(v77) = 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA37A8);
  return sub_251F35C20();
}

uint64_t sub_251DA1BAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[8] = a4;
  v5[9] = a5;
  v5[7] = a1;
  v5[10] = type metadata accessor for CoordinationSnapshot.UpdateType();
  v5[11] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251DA1C44, 0, 0);
}

uint64_t sub_251DA1C44()
{
  *(void *)(v0 + 96) = sub_251F35C80();
  *(void *)(v0 + 104) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251DA1CDC, v2, v1);
}

uint64_t sub_251DA1CDC()
{
  swift_release();
  if (qword_269B9C2B0 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251DA1D74, 0, 0);
}

uint64_t sub_251DA1D74()
{
  *(void *)(v0 + 112) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251DA1E00, v2, v1);
}

uint64_t sub_251DA1E00()
{
  swift_release();
  *(void *)(v0 + 120) = qword_269BF3098;
  return MEMORY[0x270FA2498](sub_251DA1E74, 0, 0);
}

uint64_t sub_251DA1E74()
{
  uint64_t v1 = (uint64_t *)v0[11];
  uint64_t v3 = v0[8];
  uint64_t v2 = v0[9];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB80);
  uint64_t v4 = sub_251F34DA0();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_251F38650;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 16))(v7 + v6, v3, v4);
  *uint64_t v1 = v7;
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EBB0);
  uint64_t inited = swift_initStackObject();
  v0[16] = inited;
  *(_OWORD *)(inited + 16) = xmmword_251F38640;
  *(void *)(inited + 32) = v2;
  uint64_t v13 = inited;
  sub_251F35AE0();
  v0[17] = v13;
  swift_retain();
  uint64_t v9 = (void *)swift_task_alloc();
  v0[18] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_251DA2044;
  uint64_t v10 = v0[11];
  uint64_t v11 = v0[7];
  return sub_251D39E48(v11, v10, v13);
}

uint64_t sub_251DA2044(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 88);
  *(void *)(*(void *)v1 + 152) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_251DB05DC(v2, (uint64_t (*)(void))type metadata accessor for CoordinationSnapshot.UpdateType);
  return MEMORY[0x270FA2498](sub_251DA2194, 0, 0);
}

uint64_t sub_251DA2194()
{
  *(void *)(v0[7] + 8) = v0[19];
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

void sub_251DA2200(uint64_t a1, void *a2)
{
}

uint64_t CoordinationDataModel.addAlarm(_:parentContainerID:)(uint64_t a1, uint64_t a2)
{
  v3[62] = a2;
  v3[63] = v2;
  v3[61] = a1;
  v3[64] = swift_getObjectType();
  v3[65] = type metadata accessor for CoordinationSnapshot.UpdateType();
  v3[66] = swift_task_alloc();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EAE0);
  v3[67] = v4;
  v3[68] = *(void *)(v4 - 8);
  v3[69] = swift_task_alloc();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1010);
  v3[70] = v5;
  v3[71] = *(void *)(v5 - 8);
  v3[72] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  v3[73] = swift_task_alloc();
  uint64_t v6 = *(void *)(type metadata accessor for StaticAlarm() - 8);
  v3[74] = v6;
  v3[75] = *(void *)(v6 + 64);
  v3[76] = swift_task_alloc();
  v3[77] = swift_task_alloc();
  v3[78] = sub_251F35C80();
  v3[79] = sub_251F35C70();
  uint64_t v8 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251DA2444, v8, v7);
}

uint64_t sub_251DA2444()
{
  uint64_t v101 = v0;
  uint64_t v1 = *(void *)(v0 + 504);
  swift_release();
  uint64_t v2 = (uint64_t *)(v1 + OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_managers);
  swift_beginAccess();
  uint64_t v3 = *v2;
  if (*(void *)(*v2 + 16))
  {
    uint64_t v4 = *(void *)(v0 + 496);
    swift_bridgeObjectRetain();
    unint64_t v5 = sub_2519FE584(v4);
    if (v6)
    {
      uint64_t v7 = *(void **)(v0 + 488);
      uint64_t v8 = (long long *)(*(void *)(v3 + 56) + (v5 << 7));
      long long v9 = v8[3];
      long long v11 = *v8;
      long long v10 = v8[1];
      *(_OWORD *)(v0 + 48) = v8[2];
      *(_OWORD *)(v0 + 64) = v9;
      *(_OWORD *)(v0 + 16) = v11;
      *(_OWORD *)(v0 + 32) = v10;
      long long v12 = v8[7];
      long long v14 = v8[4];
      long long v13 = v8[5];
      *(_OWORD *)(v0 + 112) = v8[6];
      *(_OWORD *)(v0 + 128) = v12;
      *(_OWORD *)(v0 + 80) = v14;
      *(_OWORD *)(v0 + 96) = v13;
      sub_251A1A678(v0 + 16);
      swift_bridgeObjectRelease();
      *(void *)(v0 + 464) = v7;
      sub_251AA88D0();
      id v15 = v7;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CEB8);
      if (swift_dynamicCast())
      {
        sub_251A1A444((long long *)(v0 + 400), v0 + 240);
        if (qword_269B9C2C0 != -1) {
          swift_once();
        }
        uint64_t v83 = (long long *)(v0 + 280);
        uint64_t v85 = (long long *)(v0 + 360);
        uint64_t v16 = *(void *)(v0 + 496);
        uint64_t v17 = sub_251F350A0();
        __swift_project_value_buffer(v17, (uint64_t)qword_269B9DEE0);
        uint64_t v96 = (void *)(v0 + 240);
        sub_251A1A4EC(v0 + 240, v0 + 320);
        uint64_t v18 = sub_251F34DA0();
        uint64_t v19 = *(void *)(v18 - 8);
        uint64_t v94 = *(void *)(v19 + 64);
        uint64_t v20 = swift_task_alloc();
        unint64_t v97 = *(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16);
        v97(v20, v16, v18);
        id v21 = sub_251F35080();
        os_log_type_t v22 = sub_251F35FD0();
        uint64_t v98 = v19;
        if (os_log_type_enabled(v21, v22))
        {
          uint64_t v23 = swift_slowAlloc();
          uint64_t v92 = swift_slowAlloc();
          *(void *)&v99[0] = v92;
          *(_DWORD *)uint64_t v23 = 136315394;
          os_log_type_t type = v22;
          uint64_t v25 = *(void *)(v0 + 344);
          uint64_t v24 = *(void *)(v0 + 352);
          __swift_project_boxed_opaque_existential_1((void *)(v0 + 320), v25);
          uint64_t v26 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 64))(v25, v24);
          *(void *)(v0 + 472) = sub_251A00E84(v26, v27, (uint64_t *)v99);
          sub_251F361D0();
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_0(v0 + 320);
          *(_WORD *)(v23 + 12) = 2080;
          sub_251AF752C();
          uint64_t v28 = sub_251F36AB0();
          *(void *)(v0 + 480) = sub_251A00E84(v28, v29, (uint64_t *)v99);
          uint64_t v30 = v18;
          sub_251F361D0();
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v20, v18);
          _os_log_impl(&dword_2519F3000, v21, type, "attempt to add alarm %s for parent %s", (uint8_t *)v23, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x2533AC760](v92, -1, -1);
          MEMORY[0x2533AC760](v23, -1, -1);
        }
        else
        {
          __swift_destroy_boxed_opaque_existential_0(v0 + 320);
          (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v20, v18);

          uint64_t v30 = v18;
        }
        uint64_t v86 = v30;
        uint64_t v31 = *(void *)(v0 + 616);
        uint64_t v87 = *(void *)(v0 + 584);
        uint64_t v32 = *(void *)(v0 + 496);
        uint64_t v90 = *(void **)(v0 + 504);
        swift_task_dealloc();
        uint64_t v33 = *(void *)(v0 + 264);
        uint64_t v34 = *(void *)(v0 + 272);
        os_log_t v35 = __swift_project_boxed_opaque_existential_1(v96, v33);
        uint64_t v36 = *(void *)(v33 - 8);
        uint64_t v37 = swift_task_alloc();
        (*(void (**)(uint64_t, void *, uint64_t))(v36 + 16))(v37, v35, v33);
        uint64_t v38 = swift_task_alloc();
        v97(v38, v32, v30);
        sub_251E3E7B8(v37, v38, v33, v34, v31);
        swift_task_dealloc();
        swift_task_dealloc();
        __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CEB0);
        uint64_t v39 = swift_allocObject();
        *(_OWORD *)(v39 + 16) = xmmword_251F38650;
        sub_251A1A4EC((uint64_t)v96, v39 + 32);
        uint64_t v40 = sub_251F35CD0();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v87, 1, 1, v40);
        uint64_t v41 = swift_task_alloc();
        uint64_t v42 = v30;
        v97(v41, v32, v30);
        swift_bridgeObjectRetain();
        id v43 = v90;
        uint64_t v44 = sub_251F35C70();
        unint64_t v45 = (*(unsigned __int8 *)(v98 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v98 + 80);
        os_log_t log = (os_log_t)(v45 + v94);
        uint64_t v46 = swift_allocObject();
        uint64_t v47 = MEMORY[0x263F8F500];
        *(void *)(v46 + 16) = v44;
        *(void *)(v46 + 24) = v47;
        *(unsigned char *)(v46 + 32) = 0;
        *(void *)(v46 + 40) = v39;
        *(void *)(v46 + 48) = v43;
        unint64_t v93 = v45;
        uint64_t v91 = *(void (**)(unint64_t, uint64_t, uint64_t))(v98 + 32);
        v91(v46 + v45, v41, v42);
        swift_task_dealloc();
        sub_251ACBB48(v87, (uint64_t)&unk_269BA10D0, v46);
        swift_release();
        swift_bridgeObjectRelease();
        if (qword_26B21E180 != -1) {
          swift_once();
        }
        uint64_t v95 = *(void *)(v0 + 616);
        uint64_t v79 = *(void *)(v0 + 608);
        uint64_t v80 = *(void *)(v0 + 600);
        uint64_t v48 = *(void *)(v0 + 592);
        uint64_t v49 = *(void *)(v0 + 568);
        uint64_t v77 = *(void *)(v0 + 576);
        uint64_t v78 = *(void *)(v0 + 560);
        uint64_t v50 = *(void *)(v0 + 552);
        uint64_t v51 = *(void *)(v0 + 544);
        uint64_t v52 = *(void *)(v0 + 536);
        uint64_t v53 = *(void *)(v0 + 528);
        uint64_t v54 = *(void *)(v0 + 496);
        uint64_t v81 = *(void **)(v0 + 504);
        uint64_t v82 = *(void *)(v0 + 512);
        uint64_t v55 = __swift_project_value_buffer(v52, (uint64_t)qword_26B21E350);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v51 + 16))(v50, v55, v52);
        uint64_t v76 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269BA10D8) + 48);
        v97(v53, v54, v42);
        __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF30);
        uint64_t v56 = *(unsigned __int8 *)(v48 + 80);
        uint64_t v57 = swift_allocObject();
        *(_OWORD *)(v57 + 16) = xmmword_251F38650;
        sub_251DB0520(v95, v57 + ((v56 + 32) & ~v56), (uint64_t (*)(void))type metadata accessor for StaticAlarm);
        *(void *)(v53 + v76) = v57;
        swift_storeEnumTagMultiPayload();
        sub_251F35CF0();
        (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v50, v52);
        (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v77, v78);
        uint64_t v58 = *(void *)(v0 + 264);
        uint64_t v59 = __swift_project_boxed_opaque_existential_1(v96, v58);
        uint64_t v60 = *(void *)(v0 + 64);
        long long v61 = *(_OWORD *)(v0 + 32);
        v99[0] = *(_OWORD *)(v0 + 16);
        v99[1] = v61;
        v99[2] = *(_OWORD *)(v0 + 48);
        uint64_t v100 = v60;
        uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3700);
        id v63 = sub_251E674A4((uint64_t)v59, v62, v58);
        sub_251A1A4EC((uint64_t)v96, (uint64_t)v83);
        uint64_t v64 = swift_task_alloc();
        v97(v64, v54, v86);
        uint64_t v65 = swift_allocObject();
        sub_251A1A444(v83, v65 + 16);
        v91(v65 + v93, v64, v86);
        *(void *)(v0 + 176) = sub_251DAFD58;
        *(void *)(v0 + 184) = v65;
        *(void *)(v0 + 144) = MEMORY[0x263EF8330];
        *(void *)(v0 + 152) = 1107296256;
        *(void *)(v0 + 160) = sub_251DA2200;
        *(void *)(v0 + 168) = &block_descriptor_10_0;
        uint64_t v66 = _Block_copy((const void *)(v0 + 144));
        swift_release();
        swift_task_dealloc();
        id aBlock = objc_msgSend(v63, sel_addSuccessBlock_, v66);
        _Block_release(v66);

        sub_251A1A4EC((uint64_t)v96, (uint64_t)v85);
        uint64_t v67 = swift_task_alloc();
        v97(v67, v54, v86);
        sub_251DB0520(v95, v79, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
        unint64_t v68 = ((unint64_t)&log->isa + 7) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v69 = (v68 + v56 + 8) & ~v56;
        uint64_t v70 = swift_allocObject();
        sub_251A1A444(v85, v70 + 16);
        v91(v70 + v93, v67, v86);
        *(void *)(v70 + v68) = v81;
        sub_251DB04B4(v79, v70 + v69, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
        *(void *)(v70 + ((v80 + v69 + 7) & 0xFFFFFFFFFFFFFFF8)) = v82;
        *(void *)(v0 + 224) = sub_251DAFD7C;
        *(void *)(v0 + 232) = v70;
        *(void *)(v0 + 192) = MEMORY[0x263EF8330];
        *(void *)(v0 + 200) = 1107296256;
        *(void *)(v0 + 208) = sub_251DA3904;
        *(void *)(v0 + 216) = &block_descriptor_16_0;
        uint64_t v71 = _Block_copy((const void *)(v0 + 192));
        id v72 = v81;
        swift_release();
        swift_task_dealloc();
        id v73 = objc_msgSend(aBlock, sel_addFailureBlock_, v71);
        _Block_release(v71);

        sub_251A1A774(v0 + 16);
        sub_251DB05DC(v95, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v96);
      }
      else
      {
        *(void *)(v0 + 432) = 0;
        *(_OWORD *)(v0 + 400) = 0u;
        *(_OWORD *)(v0 + 416) = 0u;
        sub_251A1A774(v0 + 16);
        sub_251A1B064(v0 + 400, &qword_269B9DF00);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v74 = *(uint64_t (**)(void))(v0 + 8);
  return v74();
}

uint64_t sub_251DA3020(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v80 = a5;
  id v71 = a4;
  uint64_t updated = type metadata accessor for CoordinationSnapshot.UpdateType();
  MEMORY[0x270FA5388](updated);
  uint64_t v77 = &v62[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EAE0);
  uint64_t v76 = *(void *)(v78 - 8);
  MEMORY[0x270FA5388](v78);
  uint64_t v75 = &v62[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1010);
  uint64_t v73 = *(void *)(v74 - 8);
  MEMORY[0x270FA5388](v74);
  id v72 = &v62[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v70 = &v62[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_269B9C2C0 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_251F350A0();
  __swift_project_value_buffer(v13, (uint64_t)qword_269B9DEE0);
  sub_251A1A4EC(a2, (uint64_t)v86);
  uint64_t v14 = sub_251F34DA0();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v69 = v16;
  uint64_t v17 = &v62[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v81 = v15;
  uint64_t v19 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v15 + 16);
  uint64_t v18 = v15 + 16;
  uint64_t v82 = v19;
  v19(v17, a3, v14);
  id v20 = a1;
  id v21 = a1;
  os_log_type_t v22 = sub_251F35080();
  os_log_type_t v23 = sub_251F35FB0();
  int v24 = v23;
  BOOL v25 = os_log_type_enabled(v22, v23);
  uint64_t v83 = v14;
  if (v25)
  {
    uint64_t v26 = swift_slowAlloc();
    uint64_t v64 = swift_slowAlloc();
    uint64_t v85 = v64;
    *(_DWORD *)uint64_t v26 = 136315650;
    uint64_t v65 = v62;
    *(void *)&long long v68 = a2;
    uint64_t v27 = a3;
    uint64_t v28 = v87;
    uint64_t v29 = v88;
    __swift_project_boxed_opaque_existential_1(v86, v87);
    uint64_t v30 = *(uint64_t (**)(uint64_t, uint64_t))(v29 + 64);
    int v63 = v24;
    uint64_t v31 = v30(v28, v29);
    uint64_t v84 = sub_251A00E84(v31, v32, &v85);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v86);
    *(_WORD *)(v26 + 12) = 2080;
    sub_251AF752C();
    uint64_t v33 = sub_251F36AB0();
    uint64_t v84 = sub_251A00E84(v33, v34, &v85);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v81 + 8))(v17, v83);
    *(_WORD *)(v26 + 22) = 2080;
    uint64_t v14 = v83;
    swift_getErrorValue();
    uint64_t v35 = sub_251F36BF0();
    uint64_t v84 = sub_251A00E84(v35, v36, &v85);
    a3 = v27;
    a2 = v68;
    sub_251F361D0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2519F3000, v22, (os_log_type_t)v63, "failed to add alarm %s for parent %s due to %s", (uint8_t *)v26, 0x20u);
    uint64_t v37 = v64;
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v37, -1, -1);
    MEMORY[0x2533AC760](v26, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v86);
    (*(void (**)(unsigned char *, uint64_t))(v81 + 8))(v17, v14);
  }
  uint64_t v66 = v18;
  uint64_t v67 = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CEB0);
  uint64_t v38 = swift_allocObject();
  long long v68 = xmmword_251F38650;
  *(_OWORD *)(v38 + 16) = xmmword_251F38650;
  sub_251A1A4EC(a2, v38 + 32);
  uint64_t v39 = sub_251F35CD0();
  uint64_t v40 = (uint64_t)v70;
  uint64_t v41 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v70, 1, 1, v39);
  uint64_t v42 = v69;
  MEMORY[0x270FA5388](v41);
  v82(&v62[-((v42 + 15) & 0xFFFFFFFFFFFFFFF0)], a3, v14);
  sub_251F35C80();
  swift_bridgeObjectRetain();
  id v43 = v71;
  uint64_t v44 = sub_251F35C70();
  uint64_t v45 = v81;
  unint64_t v46 = (*(unsigned __int8 *)(v81 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80);
  uint64_t v47 = swift_allocObject();
  uint64_t v48 = MEMORY[0x263F8F500];
  *(void *)(v47 + 16) = v44;
  *(void *)(v47 + 24) = v48;
  *(unsigned char *)(v47 + 32) = 1;
  *(void *)(v47 + 40) = v38;
  *(void *)(v47 + 48) = v43;
  unint64_t v49 = v47 + v46;
  uint64_t v50 = v83;
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v45 + 32))(v49, &v62[-((v42 + 15) & 0xFFFFFFFFFFFFFFF0)], v83);
  sub_251ACBB48(v40, (uint64_t)&unk_269BA37A0, v47);
  swift_bridgeObjectRelease();
  swift_release();
  if (qword_26B21E180 != -1) {
    swift_once();
  }
  uint64_t v51 = v78;
  uint64_t v52 = __swift_project_value_buffer(v78, (uint64_t)qword_26B21E350);
  uint64_t v54 = v75;
  uint64_t v53 = v76;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v76 + 16))(v75, v52, v51);
  uint64_t v55 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269BA10D8) + 48);
  uint64_t v56 = v77;
  v82(v77, v67, v50);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF30);
  uint64_t v57 = *(void *)(type metadata accessor for StaticAlarm() - 8);
  unint64_t v58 = (*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
  uint64_t v59 = swift_allocObject();
  *(_OWORD *)(v59 + 16) = v68;
  sub_251DB0520(v80, v59 + v58, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
  *(void *)&v56[v55] = v59;
  swift_storeEnumTagMultiPayload();
  uint64_t v60 = v72;
  sub_251F35CF0();
  (*(void (**)(unsigned char *, uint64_t))(v53 + 8))(v54, v51);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v73 + 8))(v60, v74);
}

void sub_251DA3904(uint64_t a1, void *a2)
{
}

void sub_251DA390C(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t CoordinationDataModel.deleteAlarm(_:parentContainerID:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[66] = v3;
  v4[65] = a3;
  v4[63] = a1;
  v4[64] = a2;
  v4[67] = swift_getObjectType();
  v4[68] = type metadata accessor for CoordinationSnapshot.UpdateType();
  v4[69] = swift_task_alloc();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EAE0);
  v4[70] = v5;
  v4[71] = *(void *)(v5 - 8);
  v4[72] = swift_task_alloc();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1010);
  v4[73] = v6;
  v4[74] = *(void *)(v6 - 8);
  v4[75] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  v4[76] = swift_task_alloc();
  uint64_t v7 = *(void *)(type metadata accessor for StaticAlarm() - 8);
  v4[77] = v7;
  v4[78] = *(void *)(v7 + 64);
  v4[79] = swift_task_alloc();
  v4[80] = swift_task_alloc();
  v4[81] = sub_251F35C80();
  v4[82] = sub_251F35C70();
  uint64_t v9 = sub_251F35C00();
  v4[83] = v9;
  v4[84] = v8;
  return MEMORY[0x270FA2498](sub_251DA3BBC, v9, v8);
}

uint64_t sub_251DA3BBC()
{
  uint64_t v126 = v0;
  uint64_t v1 = *(void *)(v0 + 528) + OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_managers;
  swift_beginAccess();
  uint64_t v2 = *(void *)v1;
  if (!*(void *)(*(void *)v1 + 16)) {
    goto LABEL_10;
  }
  uint64_t v3 = *(void *)(v0 + 520);
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_2519FE584(v3);
  if ((v5 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_10:
    swift_release();
    **(void **)(v0 + 504) = 0;
    goto LABEL_11;
  }
  uint64_t v6 = *(void *)(v0 + 520);
  uint64_t v7 = *(void *)(v0 + 512);
  uint64_t v8 = (long long *)(*(void *)(v2 + 56) + (v4 << 7));
  long long v9 = v8[3];
  long long v11 = *v8;
  long long v10 = v8[1];
  *(_OWORD *)(v0 + 48) = v8[2];
  *(_OWORD *)(v0 + 64) = v9;
  *(_OWORD *)(v0 + 16) = v11;
  *(_OWORD *)(v0 + 32) = v10;
  long long v12 = v8[7];
  long long v14 = v8[4];
  long long v13 = v8[5];
  *(_OWORD *)(v0 + 112) = v8[6];
  *(_OWORD *)(v0 + 128) = v12;
  *(_OWORD *)(v0 + 80) = v14;
  *(_OWORD *)(v0 + 96) = v13;
  sub_251A1A678(v0 + 16);
  swift_bridgeObjectRelease();
  sub_251AEEC0C(v7, v6, v0 + 280);
  if (*(void *)(v0 + 304))
  {
    sub_251A1A444((long long *)(v0 + 280), v0 + 240);
    if (qword_269B9C2C0 != -1) {
      swift_once();
    }
    uint64_t v108 = (long long *)(v0 + 320);
    uint64_t v106 = (long long *)(v0 + 400);
    uint64_t v15 = *(void *)(v0 + 520);
    uint64_t v16 = sub_251F350A0();
    __swift_project_value_buffer(v16, (uint64_t)qword_269B9DEE0);
    uint64_t v118 = (void *)(v0 + 240);
    sub_251A1A4EC(v0 + 240, v0 + 360);
    uint64_t v17 = sub_251F34DA0();
    uint64_t v18 = *(void *)(v17 - 8);
    uint64_t v114 = *(void *)(v18 + 64);
    uint64_t v19 = swift_task_alloc();
    uint64_t v120 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16);
    v120(v19, v15, v17);
    id v20 = sub_251F35080();
    os_log_type_t v21 = sub_251F35FD0();
    uint64_t v122 = v18;
    uint64_t v119 = v17;
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = swift_slowAlloc();
      uint64_t v116 = swift_slowAlloc();
      *(void *)&v124[0] = v116;
      *(_DWORD *)uint64_t v22 = 136315394;
      uint64_t v24 = *(void *)(v0 + 384);
      uint64_t v23 = *(void *)(v0 + 392);
      __swift_project_boxed_opaque_existential_1((void *)(v0 + 360), v24);
      uint64_t v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 64))(v24, v23);
      *(void *)(v0 + 488) = sub_251A00E84(v25, v26, (uint64_t *)v124);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_0(v0 + 360);
      *(_WORD *)(v22 + 12) = 2080;
      sub_251AF752C();
      uint64_t v27 = sub_251F36AB0();
      *(void *)(v0 + 496) = sub_251A00E84(v27, v28, (uint64_t *)v124);
      sub_251F361D0();
      uint64_t v29 = v119;
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v19, v119);
      _os_log_impl(&dword_2519F3000, v20, v21, "attempt to delete alarm %s for parent %s", (uint8_t *)v22, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v116, -1, -1);
      MEMORY[0x2533AC760](v22, -1, -1);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_0(v0 + 360);
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v19, v17);

      uint64_t v29 = v17;
    }
    uint64_t v117 = *(void *)(v0 + 640);
    uint64_t v110 = *(void *)(v0 + 608);
    uint64_t v112 = *(void **)(v0 + 528);
    uint64_t v48 = *(void *)(v0 + 520);
    swift_task_dealloc();
    uint64_t v49 = *(void *)(v0 + 264);
    uint64_t v50 = *(void *)(v0 + 272);
    uint64_t v51 = __swift_project_boxed_opaque_existential_1(v118, v49);
    uint64_t v52 = *(void *)(v49 - 8);
    uint64_t v53 = swift_task_alloc();
    (*(void (**)(uint64_t, void *, uint64_t))(v52 + 16))(v53, v51, v49);
    uint64_t v54 = swift_task_alloc();
    v120(v54, v48, v29);
    sub_251E3E7B8(v53, v54, v49, v50, v117);
    swift_task_dealloc();
    swift_task_dealloc();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CEB0);
    uint64_t v55 = swift_allocObject();
    *(_OWORD *)(v55 + 16) = xmmword_251F38650;
    sub_251A1A4EC((uint64_t)v118, v55 + 32);
    uint64_t v56 = sub_251F35CD0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v110, 1, 1, v56);
    uint64_t v57 = swift_task_alloc();
    v120(v57, v48, v119);
    swift_bridgeObjectRetain();
    id v58 = v112;
    uint64_t v59 = sub_251F35C70();
    unint64_t v60 = (*(unsigned __int8 *)(v122 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v122 + 80);
    uint64_t v104 = v60 + v114;
    uint64_t v61 = swift_allocObject();
    uint64_t v62 = MEMORY[0x263F8F500];
    *(void *)(v61 + 16) = v59;
    *(void *)(v61 + 24) = v62;
    *(unsigned char *)(v61 + 32) = 1;
    *(void *)(v61 + 40) = v55;
    *(void *)(v61 + 48) = v58;
    unint64_t v115 = v60;
    unint64_t v113 = *(void (**)(unint64_t, uint64_t, uint64_t))(v122 + 32);
    v113(v61 + v60, v57, v119);
    swift_task_dealloc();
    sub_251ACBB48(v110, (uint64_t)&unk_269BA3710, v61);
    swift_release();
    swift_bridgeObjectRelease();
    if (qword_26B21E180 != -1) {
      swift_once();
    }
    uint64_t v111 = *(void *)(v0 + 640);
    uint64_t v100 = *(void *)(v0 + 632);
    uint64_t v101 = *(void *)(v0 + 624);
    uint64_t v63 = *(void *)(v0 + 616);
    uint64_t v64 = *(void *)(v0 + 592);
    uint64_t v97 = *(void *)(v0 + 600);
    uint64_t v98 = *(void *)(v0 + 584);
    uint64_t v65 = *(void *)(v0 + 576);
    uint64_t v66 = *(void *)(v0 + 568);
    uint64_t v67 = *(void *)(v0 + 560);
    uint64_t v68 = *(void *)(v0 + 552);
    uint64_t v102 = *(void **)(v0 + 528);
    uint64_t v103 = *(void *)(v0 + 536);
    uint64_t v69 = *(void *)(v0 + 520);
    uint64_t v109 = v69;
    uint64_t v70 = __swift_project_value_buffer(v67, (uint64_t)qword_26B21E350);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v66 + 16))(v65, v70, v67);
    uint64_t v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA10D8);
    uint64_t v96 = *(int *)(v105 + 48);
    v120(v68, v69, v119);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF30);
    uint64_t v99 = *(unsigned __int8 *)(v63 + 80);
    uint64_t v71 = swift_allocObject();
    *(_OWORD *)(v71 + 16) = xmmword_251F38650;
    sub_251DB0520(v111, v71 + ((v99 + 32) & ~v99), (uint64_t (*)(void))type metadata accessor for StaticAlarm);
    *(void *)(v68 + v96) = v71;
    swift_storeEnumTagMultiPayload();
    sub_251F35CF0();
    (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v65, v67);
    (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v97, v98);
    uint64_t v72 = *(void *)(v0 + 264);
    uint64_t v73 = __swift_project_boxed_opaque_existential_1(v118, v72);
    uint64_t v74 = *(void *)(v0 + 64);
    long long v75 = *(_OWORD *)(v0 + 32);
    v124[0] = *(_OWORD *)(v0 + 16);
    v124[1] = v75;
    v124[2] = *(_OWORD *)(v0 + 48);
    uint64_t v125 = v74;
    uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3700);
    id v77 = sub_251E678D4((uint64_t)v73, v76, v72);
    sub_251A1A4EC((uint64_t)v118, (uint64_t)v106);
    uint64_t v78 = swift_task_alloc();
    v120(v78, v109, v119);
    uint64_t v79 = swift_allocObject();
    sub_251A1A444(v106, v79 + 16);
    v113(v79 + v115, v78, v119);
    *(void *)(v0 + 224) = sub_251DAFDB0;
    *(void *)(v0 + 232) = v79;
    *(void *)(v0 + 192) = MEMORY[0x263EF8330];
    *(void *)(v0 + 200) = 1107296256;
    *(void *)(v0 + 208) = sub_251DA2200;
    *(void *)(v0 + 216) = &block_descriptor_27_0;
    uint64_t v80 = _Block_copy((const void *)(v0 + 192));
    swift_release();
    swift_task_dealloc();
    id aBlock = objc_msgSend(v77, sel_addSuccessBlock_, v80);
    _Block_release(v80);

    sub_251A1A4EC((uint64_t)v118, (uint64_t)v108);
    uint64_t v81 = swift_task_alloc();
    v120(v81, v109, v119);
    sub_251DB0520(v111, v100, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
    unint64_t v82 = (v104 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v83 = (v82 + v99 + 8) & ~v99;
    uint64_t v84 = swift_allocObject();
    sub_251A1A444(v108, v84 + 16);
    v113(v84 + v115, v81, v119);
    *(void *)(v84 + v82) = v102;
    sub_251DB04B4(v100, v84 + v83, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
    *(void *)(v84 + ((v101 + v83 + 7) & 0xFFFFFFFFFFFFFFF8)) = v103;
    *(void *)(v0 + 176) = sub_251DAFF74;
    *(void *)(v0 + 184) = v84;
    *(void *)(v0 + 144) = MEMORY[0x263EF8330];
    *(void *)(v0 + 152) = 1107296256;
    *(void *)(v0 + 160) = sub_251DA3904;
    *(void *)(v0 + 168) = &block_descriptor_33_0;
    uint64_t v85 = _Block_copy((const void *)(v0 + 144));
    id v86 = v102;
    swift_release();
    swift_task_dealloc();
    id v87 = objc_msgSend(aBlock, sel_addFailureBlock_, v85);
    _Block_release(v85);

    if (qword_269B9C2B0 != -1) {
      swift_once();
    }
    uint64_t v88 = *(void *)(v0 + 640);
    uint64_t v89 = *(void *)(v0 + 552);
    uint64_t v90 = *(int *)(v105 + 48);
    v120(v89, *(void *)(v0 + 520), v119);
    uint64_t v91 = swift_allocObject();
    *(_OWORD *)(v91 + 16) = xmmword_251F38650;
    sub_251DB0520(v88, v91 + ((v99 + 32) & ~v99), (uint64_t (*)(void))type metadata accessor for StaticAlarm);
    *(void *)(v89 + v90) = v91;
    swift_storeEnumTagMultiPayload();
    uint64_t v92 = (void *)swift_task_alloc();
    *(void *)(v0 + 680) = v92;
    *uint64_t v92 = v0;
    v92[1] = sub_251DA4B94;
    uint64_t v93 = *(void *)(v0 + 552);
    return sub_251D39E48(v0 + 480, v93, 0);
  }
  swift_release();
  sub_251A1B064(v0 + 280, &qword_269B9DF00);
  if (qword_269B9C2C0 != -1) {
    swift_once();
  }
  uint64_t v32 = *(void *)(v0 + 520);
  uint64_t v33 = *(void *)(v0 + 512);
  uint64_t v34 = sub_251F350A0();
  __swift_project_value_buffer(v34, (uint64_t)qword_269B9DEE0);
  uint64_t v35 = sub_251F34DA0();
  uint64_t v36 = *(void *)(v35 - 8);
  uint64_t v37 = swift_task_alloc();
  uint64_t v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16);
  uint64_t v123 = v37;
  v38(v37, v33, v35);
  uint64_t v39 = swift_task_alloc();
  v38(v39, v32, v35);
  uint64_t v40 = sub_251F35080();
  os_log_type_t v41 = sub_251F35FB0();
  if (os_log_type_enabled(v40, v41))
  {
    uint64_t v42 = swift_slowAlloc();
    uint64_t v121 = swift_slowAlloc();
    *(void *)&v124[0] = v121;
    *(_DWORD *)uint64_t v42 = 136315394;
    sub_251AF752C();
    uint64_t v43 = sub_251F36AB0();
    *(void *)(v0 + 472) = sub_251A00E84(v43, v44, (uint64_t *)v124);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    uint64_t v45 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
    v45(v123, v35);
    *(_WORD *)(v42 + 12) = 2080;
    uint64_t v46 = sub_251F36AB0();
    *(void *)(v0 + 464) = sub_251A00E84(v46, v47, (uint64_t *)v124);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    v45(v39, v35);
    _os_log_impl(&dword_2519F3000, v40, v41, "failed to found alarm with %s for parent %s", (uint8_t *)v42, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v121, -1, -1);
    MEMORY[0x2533AC760](v42, -1, -1);

    sub_251A1A774(v0 + 16);
  }
  else
  {
    sub_251A1A774(v0 + 16);
    uint64_t v94 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
    v94(v123, v35);
    v94(v39, v35);
  }
  uint64_t v95 = *(void **)(v0 + 504);
  swift_task_dealloc();
  swift_task_dealloc();
  *uint64_t v95 = 0;
LABEL_11:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v30 = *(uint64_t (**)(void))(v0 + 8);
  return v30();
}

uint64_t sub_251DA4B94()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 552);
  swift_task_dealloc();
  sub_251DB05DC(v2, (uint64_t (*)(void))type metadata accessor for CoordinationSnapshot.UpdateType);
  uint64_t v3 = *(void *)(v1 + 672);
  uint64_t v4 = *(void *)(v1 + 664);
  return MEMORY[0x270FA2498](sub_251DA4CEC, v4, v3);
}

uint64_t sub_251DA4CEC()
{
  uint64_t v1 = v0[80];
  uint64_t v2 = (void *)v0[63];
  swift_release();
  sub_251A1A774((uint64_t)(v0 + 2));
  sub_251DB05DC(v1, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
  *uint64_t v2 = v0[60];
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 30));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

void sub_251DA4DE4(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  if (qword_269B9C2C0 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_251F350A0();
  __swift_project_value_buffer(v7, (uint64_t)qword_269B9DEE0);
  sub_251A1A4EC(a2, (uint64_t)v27);
  uint64_t v8 = sub_251F34DA0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  long long v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a3, v8);
  long long v12 = sub_251F35080();
  os_log_type_t v13 = sub_251F35FD0();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    uint64_t v26 = v23;
    *(_DWORD *)uint64_t v14 = 136315394;
    uint64_t v22 = a4;
    uint64_t v24 = &v22;
    uint64_t v16 = v28;
    uint64_t v15 = v29;
    __swift_project_boxed_opaque_existential_1(v27, v28);
    uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 64))(v16, v15);
    uint64_t v25 = sub_251A00E84(v17, v18, &v26);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v27);
    *(_WORD *)(v14 + 12) = 2080;
    sub_251AF752C();
    uint64_t v19 = sub_251F36AB0();
    uint64_t v25 = sub_251A00E84(v19, v20, &v26);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    _os_log_impl(&dword_2519F3000, v12, v13, v22, (uint8_t *)v14, 0x16u);
    uint64_t v21 = v23;
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v21, -1, -1);
    MEMORY[0x2533AC760](v14, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v27);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

uint64_t sub_251DA50E0(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v77 = a5;
  id v68 = a4;
  uint64_t updated = type metadata accessor for CoordinationSnapshot.UpdateType();
  MEMORY[0x270FA5388](updated);
  uint64_t v74 = &v61[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EAE0);
  uint64_t v73 = *(void *)(v75 - 8);
  MEMORY[0x270FA5388](v75);
  uint64_t v72 = &v61[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1010);
  uint64_t v70 = *(void *)(v71 - 8);
  MEMORY[0x270FA5388](v71);
  uint64_t v69 = &v61[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v67 = &v61[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_269B9C2C0 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_251F350A0();
  __swift_project_value_buffer(v13, (uint64_t)qword_269B9DEE0);
  sub_251A1A4EC(a2, (uint64_t)v84);
  uint64_t v14 = sub_251F34DA0();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v66 = v16;
  uint64_t v17 = &v61[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v80 = v15;
  uint64_t v19 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v15 + 16);
  uint64_t v18 = v15 + 16;
  uint64_t v79 = v19;
  v19(v17, a3, v14);
  id v20 = a1;
  id v21 = a1;
  uint64_t v22 = sub_251F35080();
  os_log_type_t v23 = sub_251F35FB0();
  int v24 = v23;
  BOOL v25 = os_log_type_enabled(v22, v23);
  uint64_t v81 = v14;
  uint64_t v78 = a3;
  if (v25)
  {
    uint64_t v26 = swift_slowAlloc();
    uint64_t v63 = swift_slowAlloc();
    uint64_t v83 = v63;
    *(_DWORD *)uint64_t v26 = 136315650;
    *(void *)&long long v65 = v61;
    uint64_t v27 = v85;
    uint64_t v28 = v86;
    __swift_project_boxed_opaque_existential_1(v84, v85);
    uint64_t v29 = *(uint64_t (**)(uint64_t, uint64_t))(v28 + 64);
    int v62 = v24;
    uint64_t v30 = v29(v27, v28);
    uint64_t v82 = sub_251A00E84(v30, v31, &v83);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v84);
    *(_WORD *)(v26 + 12) = 2080;
    sub_251AF752C();
    uint64_t v32 = sub_251F36AB0();
    uint64_t v82 = sub_251A00E84(v32, v33, &v83);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v80 + 8))(v17, v81);
    *(_WORD *)(v26 + 22) = 2080;
    uint64_t v14 = v81;
    swift_getErrorValue();
    uint64_t v34 = sub_251F36BF0();
    uint64_t v82 = sub_251A00E84(v34, v35, &v83);
    a3 = v78;
    sub_251F361D0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2519F3000, v22, (os_log_type_t)v62, "failed to delete alarm %s for parent %s due to %s", (uint8_t *)v26, 0x20u);
    uint64_t v36 = v63;
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v36, -1, -1);
    MEMORY[0x2533AC760](v26, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v84);
    (*(void (**)(unsigned char *, uint64_t))(v80 + 8))(v17, v14);
  }
  uint64_t v64 = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CEB0);
  uint64_t v37 = swift_allocObject();
  long long v65 = xmmword_251F38650;
  *(_OWORD *)(v37 + 16) = xmmword_251F38650;
  sub_251A1A4EC(a2, v37 + 32);
  uint64_t v38 = sub_251F35CD0();
  uint64_t v39 = (uint64_t)v67;
  uint64_t v40 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v67, 1, 1, v38);
  uint64_t v41 = v66;
  MEMORY[0x270FA5388](v40);
  v79(&v61[-((v41 + 15) & 0xFFFFFFFFFFFFFFF0)], a3, v14);
  sub_251F35C80();
  swift_bridgeObjectRetain();
  id v42 = v68;
  uint64_t v43 = sub_251F35C70();
  uint64_t v44 = v80;
  unint64_t v45 = (*(unsigned __int8 *)(v80 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80);
  uint64_t v46 = swift_allocObject();
  uint64_t v47 = MEMORY[0x263F8F500];
  *(void *)(v46 + 16) = v43;
  *(void *)(v46 + 24) = v47;
  *(unsigned char *)(v46 + 32) = 0;
  *(void *)(v46 + 40) = v37;
  *(void *)(v46 + 48) = v42;
  unint64_t v48 = v46 + v45;
  uint64_t v49 = v81;
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v44 + 32))(v48, &v61[-((v41 + 15) & 0xFFFFFFFFFFFFFFF0)], v81);
  sub_251ACBB48(v39, (uint64_t)&unk_269BA3798, v46);
  swift_bridgeObjectRelease();
  swift_release();
  if (qword_26B21E180 != -1) {
    swift_once();
  }
  uint64_t v50 = v75;
  uint64_t v51 = __swift_project_value_buffer(v75, (uint64_t)qword_26B21E350);
  uint64_t v53 = v72;
  uint64_t v52 = v73;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v73 + 16))(v72, v51, v50);
  uint64_t v54 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269BA10D8) + 48);
  uint64_t v55 = v74;
  v79(v74, v78, v49);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF30);
  uint64_t v56 = *(void *)(type metadata accessor for StaticAlarm() - 8);
  unint64_t v57 = (*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
  uint64_t v58 = swift_allocObject();
  *(_OWORD *)(v58 + 16) = v65;
  sub_251DB0520(v77, v58 + v57, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
  *(void *)&v55[v54] = v58;
  swift_storeEnumTagMultiPayload();
  uint64_t v59 = v69;
  sub_251F35CF0();
  (*(void (**)(unsigned char *, uint64_t))(v52 + 8))(v53, v50);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v70 + 8))(v59, v71);
}

uint64_t CoordinationDataModel.toggleAlarm(staticAlarmID:parentContainerID:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[80] = v3;
  v4[79] = a3;
  v4[78] = a2;
  v4[77] = a1;
  v4[81] = swift_getObjectType();
  v4[82] = type metadata accessor for CoordinationSnapshot.UpdateType();
  v4[83] = swift_task_alloc();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EAE0);
  v4[84] = v5;
  v4[85] = *(void *)(v5 - 8);
  v4[86] = swift_task_alloc();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1010);
  v4[87] = v6;
  v4[88] = *(void *)(v6 - 8);
  v4[89] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  v4[90] = swift_task_alloc();
  v4[91] = *(void *)(type metadata accessor for StaticAlarm() - 8);
  v4[92] = swift_task_alloc();
  v4[93] = sub_251F35C80();
  v4[94] = sub_251F35C70();
  uint64_t v8 = sub_251F35C00();
  v4[95] = v8;
  v4[96] = v7;
  return MEMORY[0x270FA2498](sub_251DA5BDC, v8, v7);
}

uint64_t sub_251DA5BDC()
{
  uint64_t v150 = v0;
  uint64_t v1 = *(void *)(v0 + 640) + OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_managers;
  swift_beginAccess();
  uint64_t v2 = *(void *)v1;
  if (!*(void *)(*(void *)v1 + 16)) {
    goto LABEL_11;
  }
  uint64_t v3 = *(void *)(v0 + 632);
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_2519FE584(v3);
  if ((v5 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_11:
    swift_release();
    **(void **)(v0 + 616) = 0;
    goto LABEL_20;
  }
  uint64_t v6 = *(void *)(v0 + 632);
  uint64_t v7 = *(void *)(v0 + 624);
  uint64_t v8 = (long long *)(*(void *)(v2 + 56) + (v4 << 7));
  long long v9 = v8[3];
  long long v11 = *v8;
  long long v10 = v8[1];
  *(_OWORD *)(v0 + 48) = v8[2];
  *(_OWORD *)(v0 + 64) = v9;
  *(_OWORD *)(v0 + 16) = v11;
  *(_OWORD *)(v0 + 32) = v10;
  long long v12 = v8[7];
  long long v14 = v8[4];
  long long v13 = v8[5];
  *(_OWORD *)(v0 + 112) = v8[6];
  *(_OWORD *)(v0 + 128) = v12;
  *(_OWORD *)(v0 + 80) = v14;
  *(_OWORD *)(v0 + 96) = v13;
  sub_251A1A678(v0 + 16);
  swift_bridgeObjectRelease();
  sub_251AEEC0C(v7, v6, v0 + 240);
  if (*(void *)(v0 + 264))
  {
    sub_251A1A444((long long *)(v0 + 240), v0 + 400);
    uint64_t v15 = swift_allocObject();
    *(void *)(v0 + 776) = v15;
    uint64_t v16 = *(void *)(v0 + 424);
    uint64_t v17 = *(void *)(v0 + 432);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 400), v16);
    (*(void (**)(uint64_t, uint64_t))(v17 + 80))(v16, v17);
    if (*(void *)(v0 + 384))
    {
      uint64_t v140 = (void *)(v0 + 280);
      uint64_t v18 = (void *)(v15 + 16);
      sub_251A1A444((long long *)(v0 + 360), v15 + 16);
      if (qword_269B9C2C0 != -1) {
        swift_once();
      }
      uint64_t v136 = (long long *)(v0 + 320);
      int v135 = (void *)(v0 + 440);
      uint64_t v19 = *(void *)(v0 + 632);
      uint64_t v20 = sub_251F350A0();
      __swift_project_value_buffer(v20, (uint64_t)qword_269B9DEE0);
      uint64_t v21 = sub_251F34DA0();
      uint64_t v22 = *(void *)(v21 - 8);
      uint64_t v141 = *(char **)(v22 + 64);
      uint64_t v23 = swift_task_alloc();
      v143 = *(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16);
      v143(v23, v19, v21);
      swift_retain_n();
      int v24 = sub_251F35080();
      os_log_type_t v25 = sub_251F35FD0();
      uint64_t v144 = v22;
      uint64_t v146 = v21;
      if (os_log_type_enabled(v24, v25))
      {
        os_log_t log = v24;
        os_log_type_t typea = v25;
        uint64_t v26 = swift_slowAlloc();
        uint64_t v130 = swift_slowAlloc();
        *(void *)&v148[0] = v130;
        *(_DWORD *)uint64_t v26 = 136315394;
        swift_beginAccess();
        uint64_t v27 = v15;
        uint64_t v29 = *(void *)(v15 + 40);
        uint64_t v28 = *(void *)(v15 + 48);
        uint64_t v30 = __swift_project_boxed_opaque_existential_1(v18, v29);
        unint64_t v31 = v18;
        uint64_t v32 = *(void *)(v29 - 8);
        uint64_t v33 = swift_task_alloc();
        (*(void (**)(uint64_t, void *, uint64_t))(v32 + 16))(v33, v30, v29);
        uint64_t v34 = *(void *)(v28 + 8);
        uint64_t v15 = v27;
        uint64_t v35 = (*(uint64_t (**)(uint64_t))(v34 + 64))(v29);
        unint64_t v37 = v36;
        (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v33, v29);
        uint64_t v18 = v31;
        swift_task_dealloc();
        *(void *)(v0 + 600) = sub_251A00E84(v35, v37, (uint64_t *)v148);
        sub_251F361D0();
        swift_bridgeObjectRelease();
        swift_release_n();
        *(_WORD *)(v26 + 12) = 2080;
        sub_251AF752C();
        uint64_t v38 = sub_251F36AB0();
        *(void *)(v0 + 608) = sub_251A00E84(v38, v39, (uint64_t *)v148);
        sub_251F361D0();
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v144 + 8))(v23, v146);
        int v24 = log;
        _os_log_impl(&dword_2519F3000, log, typea, "attempt to toggle alarm %s for parent %s", (uint8_t *)v26, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x2533AC760](v130, -1, -1);
        MEMORY[0x2533AC760](v26, -1, -1);
      }
      else
      {
        swift_release_n();
        (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v23, v21);
      }

      uint64_t v123 = (uint64_t)v18;
      uint64_t v60 = *(void *)(v0 + 736);
      os_log_t loga = *(os_log_t *)(v0 + 720);
      uint64_t v131 = *(void **)(v0 + 640);
      uint64_t v61 = *(void *)(v0 + 632);
      swift_task_dealloc();
      swift_beginAccess();
      uint64_t v63 = *(void *)(v15 + 40);
      uint64_t v62 = *(void *)(v15 + 48);
      __swift_project_boxed_opaque_existential_1(v18, v63);
      LOBYTE(v62) = (*(uint64_t (**)(uint64_t))(*(void *)(v62 + 8) + 48))(v63);
      swift_endAccess();
      swift_beginAccess();
      uint64_t v64 = *(void *)(v15 + 40);
      uint64_t v65 = *(void *)(v15 + 48);
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v18, v64);
      (*(void (**)(BOOL, uint64_t, uint64_t))(v65 + 64))((v62 & 1) == 0, v64, v65);
      swift_endAccess();
      uint64_t v134 = v15;
      uint64_t v66 = *(void *)(v15 + 40);
      uint64_t v67 = *(void *)(v15 + 48);
      id v68 = __swift_project_boxed_opaque_existential_1(v18, v66);
      uint64_t v69 = *(void *)(v66 - 8);
      uint64_t v70 = swift_task_alloc();
      (*(void (**)(uint64_t, void *, uint64_t))(v69 + 16))(v70, v68, v66);
      uint64_t v71 = swift_task_alloc();
      v143(v71, v61, v146);
      sub_251E3E7B8(v70, v71, v66, *(void *)(v67 + 8), v60);
      swift_task_dealloc();
      swift_task_dealloc();
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CEB0);
      uint64_t v72 = swift_allocObject();
      *(_OWORD *)(v72 + 16) = xmmword_251F38650;
      sub_251A1A4EC((uint64_t)v18, (uint64_t)v140);
      uint64_t v74 = *(void *)(v0 + 304);
      uint64_t v73 = *(void *)(v0 + 312);
      uint64_t v75 = __swift_project_boxed_opaque_existential_1(v140, v74);
      *(void *)(v72 + 56) = v74;
      *(void *)(v72 + 64) = *(void *)(v73 + 8);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v72 + 32));
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v74 - 8) + 16))(boxed_opaque_existential_1, v75, v74);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v140);
      uint64_t v77 = sub_251F35CD0();
      (*(void (**)(os_log_t, uint64_t, uint64_t, uint64_t))(*(void *)(v77 - 8) + 56))(loga, 1, 1, v77);
      uint64_t v78 = swift_task_alloc();
      v143(v78, v61, v146);
      swift_bridgeObjectRetain();
      id v79 = v131;
      uint64_t v80 = sub_251F35C70();
      uint64_t v81 = *(unsigned __int8 *)(v144 + 80);
      uint64_t v124 = ~v81;
      uint64_t v126 = v81;
      uint64_t v82 = (v81 + 56) & ~v81;
      uint64_t v83 = swift_allocObject();
      uint64_t v84 = MEMORY[0x263F8F500];
      *(void *)(v83 + 16) = v80;
      *(void *)(v83 + 24) = v84;
      *(unsigned char *)(v83 + 32) = 0;
      *(void *)(v83 + 40) = v72;
      *(void *)(v83 + 48) = v79;
      uint64_t v139 = *(void (**)(uint64_t, uint64_t, uint64_t))(v144 + 32);
      v139(v83 + v82, v78, v146);
      swift_task_dealloc();
      sub_251ACBB48((uint64_t)loga, (uint64_t)&unk_269BA3728, v83);
      swift_release();
      swift_bridgeObjectRelease();
      if (qword_26B21E180 != -1) {
        swift_once();
      }
      uint64_t v85 = *(void *)(v0 + 728);
      uint64_t v120 = *(void *)(v0 + 736);
      uint64_t v121 = *(void *)(v0 + 712);
      uint64_t v86 = *(void *)(v0 + 704);
      uint64_t v122 = *(void *)(v0 + 696);
      uint64_t v87 = *(void *)(v0 + 688);
      uint64_t v88 = *(void *)(v0 + 680);
      uint64_t v89 = *(void *)(v0 + 672);
      uint64_t v90 = *(void *)(v0 + 664);
      uint64_t v128 = *(void **)(v0 + 640);
      uint64_t v129 = *(void *)(v0 + 648);
      uint64_t v91 = *(void *)(v0 + 632);
      uint64_t v92 = __swift_project_value_buffer(v89, (uint64_t)qword_26B21E350);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v88 + 16))(v87, v92, v89);
      uint64_t type = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA10D8);
      uint64_t v93 = *(int *)(type + 48);
      v143(v90, v91, v146);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF30);
      unint64_t v94 = (*(unsigned __int8 *)(v85 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80);
      uint64_t v95 = swift_allocObject();
      *(_OWORD *)(v95 + 16) = xmmword_251F38650;
      sub_251DB0520(v120, v95 + v94, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
      *(void *)(v90 + v93) = v95;
      swift_storeEnumTagMultiPayload();
      sub_251F35CF0();
      (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v87, v89);
      (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v121, v122);
      sub_251A1A4EC(v123, (uint64_t)v135);
      uint64_t v96 = *(void *)(v0 + 464);
      uint64_t v97 = __swift_project_boxed_opaque_existential_1(v135, v96);
      uint64_t v98 = *(void *)(v0 + 64);
      long long v99 = *(_OWORD *)(v0 + 32);
      v148[0] = *(_OWORD *)(v0 + 16);
      v148[1] = v99;
      v148[2] = *(_OWORD *)(v0 + 48);
      uint64_t v149 = v98;
      uint64_t v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3700);
      id v101 = sub_251E67D04((uint64_t)v97, v100, v96);
      uint64_t v102 = swift_task_alloc();
      v143(v102, v91, v146);
      uint64_t v103 = (v126 + 24) & v124;
      uint64_t v125 = &v141[v103];
      uint64_t v127 = v103;
      uint64_t v104 = v103;
      uint64_t v105 = swift_allocObject();
      *(void *)(v105 + 16) = v134;
      v139(v105 + v104, v102, v146);
      *(void *)(v0 + 224) = sub_251DB00A8;
      *(void *)(v0 + 232) = v105;
      *(void *)(v0 + 192) = MEMORY[0x263EF8330];
      *(void *)(v0 + 200) = 1107296256;
      *(void *)(v0 + 208) = sub_251DA2200;
      *(void *)(v0 + 216) = &block_descriptor_48;
      uint64_t v106 = _Block_copy((const void *)(v0 + 192));
      swift_retain();
      swift_release();
      swift_task_dealloc();
      id v142 = objc_msgSend(v101, sel_addSuccessBlock_, v106);
      _Block_release(v106);

      __swift_destroy_boxed_opaque_existential_0((uint64_t)v135);
      uint64_t v107 = swift_task_alloc();
      v143(v107, v91, v146);
      sub_251A1A4EC(v0 + 400, (uint64_t)v136);
      unint64_t v108 = (unint64_t)(v125 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v109 = (v108 + 47) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v110 = swift_allocObject();
      *(void *)(v110 + 16) = v134;
      v139(v110 + v127, v107, v146);
      sub_251A1A444(v136, v110 + v108);
      *(void *)(v110 + v109) = v128;
      *(void *)(v110 + ((v109 + 15) & 0xFFFFFFFFFFFFFFF8)) = v129;
      *(void *)(v0 + 176) = sub_251DB021C;
      *(void *)(v0 + 184) = v110;
      *(void *)(v0 + 144) = MEMORY[0x263EF8330];
      *(void *)(v0 + 152) = 1107296256;
      *(void *)(v0 + 160) = sub_251DA3904;
      *(void *)(v0 + 168) = &block_descriptor_54;
      uint64_t v111 = _Block_copy((const void *)(v0 + 144));
      swift_retain();
      id v112 = v128;
      swift_release();
      swift_task_dealloc();
      id v113 = objc_msgSend(v142, sel_addFailureBlock_, v111);
      _Block_release(v111);

      if (qword_269B9C2B0 != -1) {
        swift_once();
      }
      uint64_t v114 = *(void *)(v0 + 736);
      uint64_t v115 = *(void *)(v0 + 664);
      uint64_t v116 = *(int *)(type + 48);
      v143(v115, *(void *)(v0 + 632), v146);
      uint64_t v117 = swift_allocObject();
      *(_OWORD *)(v117 + 16) = xmmword_251F38650;
      sub_251DB0520(v114, v117 + v94, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
      *(void *)(v115 + v116) = v117;
      swift_storeEnumTagMultiPayload();
      uint64_t v118 = (void *)swift_task_alloc();
      *(void *)(v0 + 784) = v118;
      *uint64_t v118 = v0;
      v118[1] = sub_251DA6E2C;
      uint64_t v119 = *(void *)(v0 + 664);
      return sub_251D39E48(v0 + 584, v119, 0);
    }
    swift_release();
    sub_251A1B064(v0 + 360, &qword_269BA3720);
    swift_deallocUninitializedObject();
    __swift_destroy_boxed_opaque_existential_0(v0 + 400);
  }
  else
  {
    swift_release();
    sub_251A1B064(v0 + 240, &qword_269B9DF00);
  }
  if (qword_269B9C2C0 != -1) {
    swift_once();
  }
  uint64_t v40 = *(void *)(v0 + 632);
  uint64_t v41 = *(void *)(v0 + 624);
  uint64_t v42 = sub_251F350A0();
  __swift_project_value_buffer(v42, (uint64_t)qword_269B9DEE0);
  uint64_t v43 = sub_251F34DA0();
  uint64_t v44 = *(void *)(v43 - 8);
  uint64_t v45 = swift_task_alloc();
  uint64_t v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 16);
  uint64_t v147 = v45;
  v46(v45, v41, v43);
  uint64_t v47 = swift_task_alloc();
  v46(v47, v40, v43);
  unint64_t v48 = sub_251F35080();
  os_log_type_t v49 = sub_251F35FB0();
  if (os_log_type_enabled(v48, v49))
  {
    uint64_t v50 = swift_slowAlloc();
    uint64_t v145 = swift_slowAlloc();
    *(void *)&v148[0] = v145;
    *(_DWORD *)uint64_t v50 = 136315394;
    sub_251AF752C();
    uint64_t v51 = sub_251F36AB0();
    *(void *)(v0 + 576) = sub_251A00E84(v51, v52, (uint64_t *)v148);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    uint64_t v53 = *(void (**)(uint64_t, uint64_t))(v44 + 8);
    v53(v147, v43);
    *(_WORD *)(v50 + 12) = 2080;
    uint64_t v54 = sub_251F36AB0();
    *(void *)(v0 + 592) = sub_251A00E84(v54, v55, (uint64_t *)v148);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    v53(v47, v43);
    _os_log_impl(&dword_2519F3000, v48, v49, "failed to found alarm with %s for parent %s", (uint8_t *)v50, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v145, -1, -1);
    MEMORY[0x2533AC760](v50, -1, -1);

    sub_251A1A774(v0 + 16);
  }
  else
  {
    sub_251A1A774(v0 + 16);
    uint64_t v56 = *(void (**)(uint64_t, uint64_t))(v44 + 8);
    v56(v147, v43);
    v56(v47, v43);
  }
  unint64_t v57 = *(void **)(v0 + 616);
  swift_task_dealloc();
  swift_task_dealloc();
  *unint64_t v57 = 0;
LABEL_20:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v58 = *(uint64_t (**)(void))(v0 + 8);
  return v58();
}

uint64_t sub_251DA6E2C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 664);
  swift_task_dealloc();
  sub_251DB05DC(v2, (uint64_t (*)(void))type metadata accessor for CoordinationSnapshot.UpdateType);
  uint64_t v3 = *(void *)(v1 + 768);
  uint64_t v4 = *(void *)(v1 + 760);
  return MEMORY[0x270FA2498](sub_251DA6F84, v4, v3);
}

uint64_t sub_251DA6F84()
{
  uint64_t v1 = v0[92];
  uint64_t v2 = (void *)v0[77];
  swift_release();
  sub_251A1A774((uint64_t)(v0 + 2));
  sub_251DB05DC(v1, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
  swift_release();
  *uint64_t v2 = v0[73];
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 50));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

void sub_251DA707C(uint64_t a1, void *a2, uint64_t a3)
{
  if (qword_269B9C2C0 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_251F350A0();
  __swift_project_value_buffer(v5, (uint64_t)qword_269B9DEE0);
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  long long v9 = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a3, v6);
  swift_retain_n();
  long long v10 = sub_251F35080();
  os_log_type_t v11 = sub_251F35FD0();
  int v12 = v11;
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    uint64_t v33 = v31;
    *(_DWORD *)uint64_t v13 = 136315394;
    v28[1] = v13 + 4;
    int v30 = v12;
    swift_beginAccess();
    uint64_t v15 = a2[5];
    uint64_t v14 = a2[6];
    uint64_t v16 = __swift_project_boxed_opaque_existential_1(a2 + 2, v15);
    v28[0] = v28;
    uint64_t v17 = *(void *)(v15 - 8);
    os_log_t v29 = v10;
    uint64_t v18 = v17;
    MEMORY[0x270FA5388](v16);
    uint64_t v20 = (char *)v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v18 + 16))(v20);
    uint64_t v21 = (*(uint64_t (**)(uint64_t))(*(void *)(v14 + 8) + 64))(v15);
    unint64_t v23 = v22;
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v15);
    uint64_t v32 = sub_251A00E84(v21, v23, &v33);
    sub_251F361D0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2080;
    sub_251AF752C();
    uint64_t v24 = sub_251F36AB0();
    uint64_t v32 = sub_251A00E84(v24, v25, &v33);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    os_log_t v26 = v29;
    _os_log_impl(&dword_2519F3000, v29, (os_log_type_t)v30, "successfully toggled alarm %s for parent %s", (uint8_t *)v13, 0x16u);
    uint64_t v27 = v31;
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v27, -1, -1);
    MEMORY[0x2533AC760](v13, -1, -1);
  }
  else
  {
    swift_release_n();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

uint64_t sub_251DA7450(void *a1, void *a2, uint64_t a3, uint64_t *a4, void *a5)
{
  id v87 = a5;
  uint64_t v86 = a4;
  uint64_t updated = type metadata accessor for CoordinationSnapshot.UpdateType();
  MEMORY[0x270FA5388](updated);
  unint64_t v94 = (char *)&v80 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EAE0);
  uint64_t v93 = *(void *)(v95 - 8);
  MEMORY[0x270FA5388](v95);
  uint64_t v92 = (char *)&v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1010);
  uint64_t v90 = *(void *)(v91 - 8);
  MEMORY[0x270FA5388](v91);
  uint64_t v89 = (char *)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v100 = (uint64_t)&v80 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for StaticAlarm();
  uint64_t v88 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_269B9C2C0 != -1) {
    swift_once();
  }
  id v101 = v15;
  uint64_t v16 = sub_251F350A0();
  __swift_project_value_buffer(v16, (uint64_t)qword_269B9DEE0);
  uint64_t v17 = sub_251F34DA0();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v85 = v19;
  uint64_t v20 = (char *)&v80 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = v18;
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
  uint64_t v102 = a3;
  long long v99 = v21;
  v21(v20, a3, v17);
  swift_retain();
  id v22 = a1;
  swift_retain();
  id v23 = a1;
  uint64_t v24 = sub_251F35080();
  os_log_type_t v25 = sub_251F35FB0();
  int v26 = v25;
  BOOL v27 = os_log_type_enabled(v24, v25);
  uint64_t v97 = v18 + 16;
  uint64_t v103 = v17;
  if (v27)
  {
    uint64_t v28 = swift_slowAlloc();
    *(void *)&long long v84 = swift_slowAlloc();
    uint64_t v105 = v84;
    *(_DWORD *)uint64_t v28 = 136315650;
    uint64_t v80 = v28 + 4;
    LODWORD(v83) = v26;
    swift_beginAccess();
    uint64_t v81 = a1;
    uint64_t v30 = a2[5];
    uint64_t v29 = a2[6];
    uint64_t v31 = __swift_project_boxed_opaque_existential_1(a2 + 2, v30);
    os_log_t v82 = v24;
    uint64_t v32 = *(void *)(v30 - 8);
    MEMORY[0x270FA5388](v31);
    uint64_t v34 = (char *)&v80 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v32 + 16))(v34);
    uint64_t v35 = (*(uint64_t (**)(uint64_t))(*(void *)(v29 + 8) + 64))(v30);
    unint64_t v37 = v36;
    (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v30);
    uint64_t v104 = sub_251A00E84(v35, v37, &v105);
    sub_251F361D0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v28 + 12) = 2080;
    sub_251AF752C();
    uint64_t v38 = v103;
    uint64_t v39 = sub_251F36AB0();
    uint64_t v104 = sub_251A00E84(v39, v40, &v105);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v98 + 8))(v20, v38);
    *(_WORD *)(v28 + 22) = 2080;
    uint64_t v41 = v81;
    swift_getErrorValue();
    uint64_t v42 = sub_251F36BF0();
    uint64_t v104 = sub_251A00E84(v42, v43, &v105);
    sub_251F361D0();
    swift_bridgeObjectRelease();

    os_log_t v44 = v82;
    _os_log_impl(&dword_2519F3000, v82, (os_log_type_t)v83, "failed to toggle alarm %s for parent %s due to %s", (uint8_t *)v28, 0x20u);
    uint64_t v45 = v84;
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v45, -1, -1);
    MEMORY[0x2533AC760](v28, -1, -1);
  }
  else
  {
    swift_release_n();
    (*(void (**)(char *, uint64_t))(v98 + 8))(v20, v17);
  }
  uint64_t v46 = v86;
  uint64_t v47 = v86[3];
  *(void *)&long long v84 = v86[4];
  unint64_t v48 = __swift_project_boxed_opaque_existential_1(v86, v47);
  uint64_t v83 = &v80;
  MEMORY[0x270FA5388](v48);
  uint64_t v50 = (char *)&v80 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = (*(uint64_t (**)(char *))(v51 + 16))(v50);
  uint64_t v53 = v85;
  MEMORY[0x270FA5388](v52);
  unint64_t v54 = (v53 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v55 = v102;
  uint64_t v56 = v99;
  v99((char *)&v80 - v54, v102, v103);
  sub_251E3E7B8((uint64_t)v50, (uint64_t)&v80 - v54, v47, v84, (uint64_t)v101);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CEB0);
  uint64_t v57 = swift_allocObject();
  long long v84 = xmmword_251F38650;
  *(_OWORD *)(v57 + 16) = xmmword_251F38650;
  sub_251A1A4EC((uint64_t)v46, v57 + 32);
  uint64_t v58 = sub_251F35CD0();
  uint64_t v59 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v100, 1, 1, v58);
  uint64_t v86 = &v80;
  MEMORY[0x270FA5388](v59);
  uint64_t v60 = (char *)&v80 - v54;
  uint64_t v61 = v103;
  v56((char *)&v80 - v54, v55, v103);
  sub_251F35C80();
  swift_bridgeObjectRetain();
  id v62 = v87;
  uint64_t v63 = sub_251F35C70();
  uint64_t v64 = v98;
  unint64_t v65 = (*(unsigned __int8 *)(v98 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v98 + 80);
  uint64_t v66 = swift_allocObject();
  uint64_t v67 = MEMORY[0x263F8F500];
  *(void *)(v66 + 16) = v63;
  *(void *)(v66 + 24) = v67;
  *(unsigned char *)(v66 + 32) = 0;
  *(void *)(v66 + 40) = v57;
  *(void *)(v66 + 48) = v62;
  (*(void (**)(unint64_t, char *, uint64_t))(v64 + 32))(v66 + v65, v60, v61);
  sub_251ACBB48(v100, (uint64_t)&unk_269BA3790, v66);
  swift_bridgeObjectRelease();
  swift_release();
  if (qword_26B21E180 != -1) {
    swift_once();
  }
  uint64_t v68 = v95;
  uint64_t v69 = __swift_project_value_buffer(v95, (uint64_t)qword_26B21E350);
  uint64_t v71 = v92;
  uint64_t v70 = v93;
  (*(void (**)(char *, uint64_t, uint64_t))(v93 + 16))(v92, v69, v68);
  uint64_t v72 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269BA10D8) + 48);
  uint64_t v73 = v94;
  v99(v94, v102, v61);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF30);
  unint64_t v74 = (*(unsigned __int8 *)(v88 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80);
  uint64_t v75 = swift_allocObject();
  *(_OWORD *)(v75 + 16) = v84;
  uint64_t v76 = v75 + v74;
  uint64_t v77 = (uint64_t)v101;
  sub_251DB0520((uint64_t)v101, v76, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
  *(void *)&v73[v72] = v75;
  swift_storeEnumTagMultiPayload();
  uint64_t v78 = v89;
  sub_251F35CF0();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v71, v68);
  (*(void (**)(char *, uint64_t))(v90 + 8))(v78, v91);
  return sub_251DB05DC(v77, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
}

uint64_t CoordinationDataModel.updateAlarm(_:parentContainerID:)(uint64_t a1, uint64_t a2)
{
  v3[85] = v2;
  v3[84] = a2;
  v3[83] = a1;
  v3[86] = swift_getObjectType();
  v3[87] = type metadata accessor for CoordinationSnapshot.UpdateType();
  v3[88] = swift_task_alloc();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EAE0);
  v3[89] = v4;
  v3[90] = *(void *)(v4 - 8);
  v3[91] = swift_task_alloc();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1010);
  v3[92] = v5;
  v3[93] = *(void *)(v5 - 8);
  v3[94] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  v3[95] = swift_task_alloc();
  v3[96] = *(void *)(type metadata accessor for StaticAlarm() - 8);
  v3[97] = swift_task_alloc();
  v3[98] = sub_251F35C80();
  v3[99] = sub_251F35C70();
  uint64_t v7 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251DA81A8, v7, v6);
}

uint64_t sub_251DA81A8()
{
  uint64_t v131 = v0;
  uint64_t v1 = *(void *)(v0 + 680);
  swift_release();
  uint64_t v2 = (uint64_t *)(v1 + OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_managers);
  swift_beginAccess();
  uint64_t v3 = *v2;
  if (*(void *)(*v2 + 16))
  {
    uint64_t v4 = *(void *)(v0 + 672);
    swift_bridgeObjectRetain();
    unint64_t v5 = sub_2519FE584(v4);
    if (v6)
    {
      uint64_t v7 = *(void **)(v0 + 664);
      uint64_t v8 = (long long *)(*(void *)(v3 + 56) + (v5 << 7));
      long long v9 = v8[3];
      long long v11 = *v8;
      long long v10 = v8[1];
      *(_OWORD *)(v0 + 48) = v8[2];
      *(_OWORD *)(v0 + 64) = v9;
      *(_OWORD *)(v0 + 16) = v11;
      *(_OWORD *)(v0 + 32) = v10;
      long long v12 = v8[7];
      long long v14 = v8[4];
      long long v13 = v8[5];
      *(_OWORD *)(v0 + 112) = v8[6];
      *(_OWORD *)(v0 + 128) = v12;
      *(_OWORD *)(v0 + 80) = v14;
      *(_OWORD *)(v0 + 96) = v13;
      sub_251A1A678(v0 + 16);
      swift_bridgeObjectRelease();
      *(void *)(v0 + 640) = v7;
      sub_251AA88D0();
      id v15 = v7;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CEB8);
      if (swift_dynamicCast())
      {
        uint64_t v121 = v0 + 16;
        uint64_t v16 = *(void *)(v0 + 672);
        sub_251A1A444((long long *)(v0 + 280), v0 + 240);
        uint64_t v17 = *(void *)(v0 + 264);
        uint64_t v18 = *(void *)(v0 + 272);
        uint64_t v128 = (void *)(v0 + 240);
        __swift_project_boxed_opaque_existential_1((void *)(v0 + 240), v17);
        uint64_t v19 = sub_251F34DA0();
        uint64_t v20 = *(void *)(v19 - 8);
        uint64_t v119 = *(void *)(v20 + 64);
        uint64_t v21 = swift_task_alloc();
        id v22 = *(void (**)(uint64_t, uint64_t))(v18 + 56);
        uint64_t v23 = v18;
        uint64_t v24 = v20;
        v22(v17, v23);
        sub_251AEEC0C(v21, v16, v0 + 360);
        os_log_type_t v25 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
        v25(v21, v19);
        swift_task_dealloc();
        if (*(void *)(v0 + 384))
        {
          uint64_t v111 = v0 + 320;
          sub_251A1A444((long long *)(v0 + 360), v0 + 320);
          if (qword_269B9C2C0 != -1) {
            swift_once();
          }
          uint64_t v110 = (long long *)(v0 + 440);
          unint64_t v109 = (long long *)(v0 + 480);
          uint64_t v26 = *(void *)(v0 + 672);
          uint64_t v107 = (long long *)(v0 + 560);
          uint64_t v27 = sub_251F350A0();
          __swift_project_value_buffer(v27, (uint64_t)qword_269B9DEE0);
          sub_251A1A4EC((uint64_t)v128, v0 + 520);
          uint64_t v28 = swift_task_alloc();
          uint64_t v126 = v24;
          uint64_t v122 = *(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16);
          v122(v28, v26, v19);
          uint64_t v29 = sub_251F35080();
          os_log_type_t v30 = sub_251F35FD0();
          uint64_t v125 = v19;
          if (os_log_type_enabled(v29, v30))
          {
            uint64_t v118 = v25;
            uint64_t v31 = v19;
            uint64_t v32 = swift_slowAlloc();
            os_log_t v114 = (os_log_t)swift_slowAlloc();
            *(void *)&v129[0] = v114;
            *(_DWORD *)uint64_t v32 = 136315394;
            os_log_type_t typea = v30;
            uint64_t v33 = *(void *)(v0 + 544);
            uint64_t v34 = *(void *)(v0 + 552);
            __swift_project_boxed_opaque_existential_1((void *)(v0 + 520), v33);
            uint64_t v35 = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 64))(v33, v34);
            *(void *)(v0 + 648) = sub_251A00E84(v35, v36, (uint64_t *)v129);
            sub_251F361D0();
            swift_bridgeObjectRelease();
            __swift_destroy_boxed_opaque_existential_0(v0 + 520);
            *(_WORD *)(v32 + 12) = 2080;
            sub_251AF752C();
            uint64_t v37 = sub_251F36AB0();
            *(void *)(v0 + 656) = sub_251A00E84(v37, v38, (uint64_t *)v129);
            sub_251F361D0();
            swift_bridgeObjectRelease();
            v118(v28, v31);
            _os_log_impl(&dword_2519F3000, v29, typea, "attempt to update alarm %s for parent %s", (uint8_t *)v32, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x2533AC760](v114, -1, -1);
            MEMORY[0x2533AC760](v32, -1, -1);
          }
          else
          {
            __swift_destroy_boxed_opaque_existential_0(v0 + 520);
            v25(v28, v19);
          }
          uint64_t v54 = *(void *)(v0 + 776);
          uint64_t v112 = *(void *)(v0 + 760);
          os_log_t v116 = *(os_log_t *)(v0 + 680);
          uint64_t v55 = *(void *)(v0 + 672);
          swift_task_dealloc();
          uint64_t v56 = *(void *)(v0 + 264);
          uint64_t v57 = *(void *)(v0 + 272);
          uint64_t v58 = __swift_project_boxed_opaque_existential_1(v128, v56);
          uint64_t v59 = *(void *)(v56 - 8);
          uint64_t v60 = swift_task_alloc();
          (*(void (**)(uint64_t, void *, uint64_t))(v59 + 16))(v60, v58, v56);
          uint64_t v61 = swift_task_alloc();
          v122(v61, v55, v125);
          sub_251E3E7B8(v60, v61, v56, v57, v54);
          swift_task_dealloc();
          swift_task_dealloc();
          __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CEB0);
          uint64_t v62 = swift_allocObject();
          *(_OWORD *)(v62 + 16) = xmmword_251F38650;
          sub_251A1A4EC((uint64_t)v128, v62 + 32);
          uint64_t v63 = sub_251F35CD0();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 56))(v112, 1, 1, v63);
          uint64_t v64 = swift_task_alloc();
          v122(v64, v55, v125);
          swift_bridgeObjectRetain();
          unint64_t v65 = v116;
          uint64_t v66 = sub_251F35C70();
          unint64_t v67 = (*(unsigned __int8 *)(v126 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v126 + 80);
          *(void *)uint64_t type = v67 + v119;
          uint64_t v68 = swift_allocObject();
          uint64_t v69 = MEMORY[0x263F8F500];
          *(void *)(v68 + 16) = v66;
          *(void *)(v68 + 24) = v69;
          *(unsigned char *)(v68 + 32) = 0;
          *(void *)(v68 + 40) = v62;
          *(void *)(v68 + 48) = v65;
          unint64_t v120 = v67;
          os_log_t v117 = *(os_log_t *)(v126 + 32);
          ((void (*)(unint64_t, uint64_t, uint64_t))v117)(v68 + v67, v64, v125);
          swift_task_dealloc();
          sub_251ACBB48(v112, (uint64_t)&unk_269BA3738, v68);
          swift_release();
          swift_bridgeObjectRelease();
          if (qword_26B21E180 != -1) {
            swift_once();
          }
          uint64_t v70 = *(void *)(v0 + 776);
          uint64_t v71 = *(void *)(v0 + 768);
          uint64_t v72 = *(void *)(v0 + 744);
          uint64_t v101 = *(void *)(v0 + 752);
          uint64_t v102 = *(void *)(v0 + 736);
          uint64_t v73 = *(void *)(v0 + 728);
          uint64_t v74 = *(void *)(v0 + 720);
          uint64_t v75 = *(void *)(v0 + 712);
          uint64_t v76 = *(void *)(v0 + 704);
          uint64_t v104 = *(void *)(v0 + 688);
          uint64_t v103 = *(void **)(v0 + 680);
          uint64_t v77 = *(void *)(v0 + 672);
          uint64_t v113 = v77;
          uint64_t v78 = __swift_project_value_buffer(v75, (uint64_t)qword_26B21E350);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v74 + 16))(v73, v78, v75);
          uint64_t v100 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269BA10D8) + 48);
          v122(v76, v77, v125);
          __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF30);
          unint64_t v79 = (*(unsigned __int8 *)(v71 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80);
          uint64_t v80 = swift_allocObject();
          *(_OWORD *)(v80 + 16) = xmmword_251F38650;
          sub_251DB0520(v70, v80 + v79, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
          *(void *)(v76 + v100) = v80;
          swift_storeEnumTagMultiPayload();
          sub_251F35CF0();
          (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v73, v75);
          (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v101, v102);
          uint64_t v81 = *(void *)(v0 + 264);
          os_log_t v82 = __swift_project_boxed_opaque_existential_1(v128, v81);
          uint64_t v83 = *(void *)(v0 + 64);
          long long v84 = *(_OWORD *)(v0 + 32);
          v129[0] = *(_OWORD *)(v0 + 16);
          v129[1] = v84;
          v129[2] = *(_OWORD *)(v0 + 48);
          uint64_t v130 = v83;
          uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3700);
          id v86 = sub_251E67D04((uint64_t)v82, v85, v81);
          sub_251A1A4EC((uint64_t)v128, (uint64_t)v107);
          uint64_t v87 = swift_task_alloc();
          v122(v87, v113, v125);
          uint64_t v88 = swift_allocObject();
          sub_251A1A444(v107, v88 + 16);
          ((void (*)(unint64_t, uint64_t, uint64_t))v117)(v88 + v120, v87, v125);
          *(void *)(v0 + 176) = sub_251DB02DC;
          *(void *)(v0 + 184) = v88;
          *(void *)(v0 + 144) = MEMORY[0x263EF8330];
          *(void *)(v0 + 152) = 1107296256;
          *(void *)(v0 + 160) = sub_251DA2200;
          *(void *)(v0 + 168) = &block_descriptor_66;
          uint64_t v89 = _Block_copy((const void *)(v0 + 144));
          swift_release();
          swift_task_dealloc();
          id aBlock = objc_msgSend(v86, sel_addSuccessBlock_, v89);
          _Block_release(v89);

          sub_251A1A4EC((uint64_t)v128, (uint64_t)v109);
          uint64_t v90 = swift_task_alloc();
          v122(v90, v113, v125);
          sub_251A1A4EC(v111, (uint64_t)v110);
          unint64_t v91 = (*(void *)type + 7) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v92 = (v91 + 47) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v93 = swift_allocObject();
          sub_251A1A444(v109, v93 + 16);
          ((void (*)(unint64_t, uint64_t, uint64_t))v117)(v93 + v120, v90, v125);
          sub_251A1A444(v110, v93 + v91);
          *(void *)(v93 + v92) = v103;
          *(void *)(v93 + ((v92 + 15) & 0xFFFFFFFFFFFFFFF8)) = v104;
          *(void *)(v0 + 224) = sub_251DB03FC;
          *(void *)(v0 + 232) = v93;
          *(void *)(v0 + 192) = MEMORY[0x263EF8330];
          *(void *)(v0 + 200) = 1107296256;
          *(void *)(v0 + 208) = sub_251DA3904;
          *(void *)(v0 + 216) = &block_descriptor_72;
          unint64_t v94 = _Block_copy((const void *)(v0 + 192));
          id v95 = v103;
          swift_release();
          swift_task_dealloc();
          id v96 = objc_msgSend(aBlock, sel_addFailureBlock_, v94);
          _Block_release(v94);

          sub_251A1A774(v121);
          sub_251DB05DC(v70, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
          __swift_destroy_boxed_opaque_existential_0(v111);
          uint64_t v97 = v0 + 240;
        }
        else
        {
          sub_251A1B064(v0 + 360, &qword_269B9DF00);
          if (qword_269B9C2C0 != -1) {
            swift_once();
          }
          uint64_t v39 = *(void *)(v0 + 672);
          uint64_t v40 = sub_251F350A0();
          __swift_project_value_buffer(v40, (uint64_t)qword_269B9DEE0);
          uint64_t v41 = v0 + 240;
          sub_251A1A4EC((uint64_t)v128, v0 + 400);
          uint64_t v124 = swift_task_alloc();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v124, v39, v19);
          uint64_t v42 = sub_251F35080();
          os_log_type_t v43 = sub_251F35FB0();
          if (os_log_type_enabled(v42, v43))
          {
            uint64_t v44 = swift_slowAlloc();
            uint64_t v123 = swift_slowAlloc();
            *(void *)&v129[0] = v123;
            *(_DWORD *)uint64_t v44 = 136315394;
            uint64_t v45 = swift_task_alloc();
            uint64_t v46 = v19;
            os_log_type_t v127 = v43;
            uint64_t v48 = *(void *)(v0 + 424);
            uint64_t v47 = *(void *)(v0 + 432);
            __swift_project_boxed_opaque_existential_1((void *)(v0 + 400), v48);
            uint64_t v115 = v42;
            (*(void (**)(uint64_t, uint64_t))(v47 + 56))(v48, v47);
            sub_251AF752C();
            uint64_t v49 = sub_251F36AB0();
            unint64_t v51 = v50;
            v25(v45, v46);
            swift_task_dealloc();
            *(void *)(v0 + 632) = sub_251A00E84(v49, v51, (uint64_t *)v129);
            sub_251F361D0();
            swift_bridgeObjectRelease();
            __swift_destroy_boxed_opaque_existential_0(v0 + 400);
            *(_WORD *)(v44 + 12) = 2080;
            uint64_t v52 = sub_251F36AB0();
            *(void *)(v0 + 624) = sub_251A00E84(v52, v53, (uint64_t *)v129);
            uint64_t v41 = v0 + 240;
            sub_251F361D0();
            swift_bridgeObjectRelease();
            v25(v124, v46);
            _os_log_impl(&dword_2519F3000, v115, v127, "failed to found alarm with %s for parent %s", (uint8_t *)v44, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x2533AC760](v123, -1, -1);
            MEMORY[0x2533AC760](v44, -1, -1);

            sub_251A1A774(v121);
          }
          else
          {
            sub_251A1A774(v121);
            __swift_destroy_boxed_opaque_existential_0(v0 + 400);
            v25(v124, v19);
          }
          swift_task_dealloc();
          uint64_t v97 = v41;
        }
        __swift_destroy_boxed_opaque_existential_0(v97);
      }
      else
      {
        *(void *)(v0 + 312) = 0;
        *(_OWORD *)(v0 + 280) = 0u;
        *(_OWORD *)(v0 + 296) = 0u;
        sub_251A1A774(v0 + 16);
        sub_251A1B064(v0 + 280, &qword_269B9DF00);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v98 = *(uint64_t (**)(void))(v0 + 8);
  return v98();
}

uint64_t sub_251DA90F4(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4, void *a5)
{
  id v77 = a5;
  uint64_t v76 = a4;
  uint64_t updated = type metadata accessor for CoordinationSnapshot.UpdateType();
  MEMORY[0x270FA5388](updated);
  long long v84 = (char *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EAE0);
  uint64_t v83 = *(void *)(v85 - 8);
  MEMORY[0x270FA5388](v85);
  os_log_t v82 = (char *)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1010);
  uint64_t v80 = *(void *)(v81 - 8);
  MEMORY[0x270FA5388](v81);
  unint64_t v79 = (char *)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v90 = (uint64_t)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for StaticAlarm();
  uint64_t v78 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13 - 8);
  id v15 = (char *)&v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_269B9C2C0 != -1) {
    swift_once();
  }
  unint64_t v91 = v15;
  uint64_t v16 = sub_251F350A0();
  __swift_project_value_buffer(v16, (uint64_t)qword_269B9DEE0);
  sub_251A1A4EC(a2, (uint64_t)v96);
  uint64_t v17 = sub_251F34DA0();
  MEMORY[0x270FA5388](v17);
  uint64_t v75 = v18;
  uint64_t v19 = (char *)&v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *(void (**)(void, void))(v20 + 16);
  uint64_t v92 = a3;
  uint64_t v93 = v22;
  uint64_t v89 = v20 + 16;
  uint64_t v87 = v20;
  uint64_t v88 = (void (*)(char *, uint64_t, uint64_t))v21;
  v21(v19, a3);
  id v23 = a1;
  id v24 = a1;
  os_log_type_t v25 = sub_251F35080();
  os_log_type_t v26 = sub_251F35FB0();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = swift_slowAlloc();
    uint64_t v73 = (uint64_t *)swift_slowAlloc();
    id v95 = v73;
    *(_DWORD *)uint64_t v27 = 136315650;
    *(void *)&long long v74 = &v72;
    uint64_t v28 = v97;
    uint64_t v29 = v98;
    uint64_t v30 = v93;
    __swift_project_boxed_opaque_existential_1(v96, v97);
    uint64_t v31 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 64))(v28, v29);
    uint64_t v94 = sub_251A00E84(v31, v32, (uint64_t *)&v95);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v96);
    *(_WORD *)(v27 + 12) = 2080;
    sub_251AF752C();
    uint64_t v33 = sub_251F36AB0();
    uint64_t v94 = sub_251A00E84(v33, v34, (uint64_t *)&v95);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v87 + 8))(v19, v30);
    *(_WORD *)(v27 + 22) = 2080;
    swift_getErrorValue();
    uint64_t v35 = sub_251F36BF0();
    uint64_t v94 = sub_251A00E84(v35, v36, (uint64_t *)&v95);
    sub_251F361D0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2519F3000, v25, v26, "failed to update alarm %s for parent %s due to %s", (uint8_t *)v27, 0x20u);
    uint64_t v37 = v73;
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v37, -1, -1);
    MEMORY[0x2533AC760](v27, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v96);
    (*(void (**)(char *, uint64_t))(v87 + 8))(v19, v93);
  }
  unint64_t v38 = v76;
  uint64_t v39 = v76[3];
  *(void *)&long long v74 = v76[4];
  uint64_t v40 = __swift_project_boxed_opaque_existential_1(v76, v39);
  uint64_t v73 = &v72;
  MEMORY[0x270FA5388](v40);
  uint64_t v42 = (char *)&v72 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = (*(uint64_t (**)(char *))(v43 + 16))(v42);
  uint64_t v45 = v75;
  MEMORY[0x270FA5388](v44);
  unint64_t v46 = (v45 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v47 = v92;
  uint64_t v48 = v88;
  v88((char *)&v72 - v46, v92, v93);
  sub_251E3E7B8((uint64_t)v42, (uint64_t)&v72 - v46, v39, v74, (uint64_t)v91);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CEB0);
  uint64_t v49 = swift_allocObject();
  long long v74 = xmmword_251F38650;
  *(_OWORD *)(v49 + 16) = xmmword_251F38650;
  sub_251A1A4EC((uint64_t)v38, v49 + 32);
  uint64_t v50 = sub_251F35CD0();
  uint64_t v51 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v90, 1, 1, v50);
  uint64_t v76 = &v72;
  MEMORY[0x270FA5388](v51);
  uint64_t v52 = (char *)&v72 - v46;
  uint64_t v53 = v93;
  v48((char *)&v72 - v46, v47, v93);
  sub_251F35C80();
  swift_bridgeObjectRetain();
  id v54 = v77;
  uint64_t v55 = sub_251F35C70();
  uint64_t v56 = v87;
  unint64_t v57 = (*(unsigned __int8 *)(v87 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80);
  uint64_t v58 = swift_allocObject();
  uint64_t v59 = MEMORY[0x263F8F500];
  *(void *)(v58 + 16) = v55;
  *(void *)(v58 + 24) = v59;
  *(unsigned char *)(v58 + 32) = 0;
  *(void *)(v58 + 40) = v49;
  *(void *)(v58 + 48) = v54;
  (*(void (**)(unint64_t, char *, uint64_t))(v56 + 32))(v58 + v57, v52, v53);
  sub_251ACBB48(v90, (uint64_t)&unk_269BA3788, v58);
  swift_bridgeObjectRelease();
  swift_release();
  if (qword_26B21E180 != -1) {
    swift_once();
  }
  uint64_t v60 = v85;
  uint64_t v61 = __swift_project_value_buffer(v85, (uint64_t)qword_26B21E350);
  uint64_t v62 = v83;
  uint64_t v63 = v82;
  (*(void (**)(char *, uint64_t, uint64_t))(v83 + 16))(v82, v61, v60);
  uint64_t v64 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269BA10D8) + 48);
  unint64_t v65 = v84;
  v88(v84, v92, v53);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF30);
  unint64_t v66 = (*(unsigned __int8 *)(v78 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80);
  uint64_t v67 = swift_allocObject();
  *(_OWORD *)(v67 + 16) = v74;
  uint64_t v68 = v67 + v66;
  uint64_t v69 = (uint64_t)v91;
  sub_251DB0520((uint64_t)v91, v68, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
  *(void *)&v65[v64] = v67;
  swift_storeEnumTagMultiPayload();
  uint64_t v70 = v79;
  sub_251F35CF0();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v63, v60);
  (*(void (**)(char *, uint64_t))(v80 + 8))(v70, v81);
  return sub_251DB05DC(v69, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
}

uint64_t CoordinationDataModel.addTimer(_:parentContainerID:)(uint64_t a1, uint64_t a2)
{
  v3[70] = v2;
  v3[69] = a2;
  v3[68] = a1;
  v3[71] = swift_getObjectType();
  v3[72] = type metadata accessor for CoordinationSnapshot.UpdateType();
  v3[73] = swift_task_alloc();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EAE0);
  v3[74] = v4;
  v3[75] = *(void *)(v4 - 8);
  v3[76] = swift_task_alloc();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1010);
  v3[77] = v5;
  v3[78] = *(void *)(v5 - 8);
  v3[79] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  v3[80] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D130);
  v3[81] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for StaticTimer();
  v3[82] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v3[83] = v7;
  v3[84] = *(void *)(v7 + 64);
  v3[85] = swift_task_alloc();
  v3[86] = swift_task_alloc();
  v3[87] = sub_251F35C80();
  v3[88] = sub_251F35C70();
  uint64_t v9 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251DA9D94, v9, v8);
}

uint64_t sub_251DA9D94()
{
  uint64_t v121 = v0;
  uint64_t v1 = *(void *)(v0 + 560);
  swift_release();
  uint64_t v2 = (uint64_t *)(v1 + OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_managers);
  swift_beginAccess();
  uint64_t v3 = *v2;
  if (*(void *)(*v2 + 16))
  {
    uint64_t v4 = *(void *)(v0 + 552);
    swift_bridgeObjectRetain();
    unint64_t v5 = sub_2519FE584(v4);
    if (v6)
    {
      uint64_t v7 = *(void **)(v0 + 544);
      uint64_t v8 = (long long *)(*(void *)(v3 + 56) + (v5 << 7));
      long long v9 = v8[3];
      long long v11 = *v8;
      long long v10 = v8[1];
      *(_OWORD *)(v0 + 48) = v8[2];
      *(_OWORD *)(v0 + 64) = v9;
      *(_OWORD *)(v0 + 16) = v11;
      *(_OWORD *)(v0 + 32) = v10;
      long long v12 = v8[7];
      long long v14 = v8[4];
      long long v13 = v8[5];
      *(_OWORD *)(v0 + 112) = v8[6];
      *(_OWORD *)(v0 + 128) = v12;
      *(_OWORD *)(v0 + 80) = v14;
      *(_OWORD *)(v0 + 96) = v13;
      sub_251A1A678(v0 + 16);
      swift_bridgeObjectRelease();
      *(void *)(v0 + 520) = v7;
      sub_251AA88D0();
      id v15 = v7;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CEC8);
      if (swift_dynamicCast())
      {
        uint64_t v16 = (void *)(v0 + 240);
        sub_251A1A444((long long *)(v0 + 280), v0 + 240);
        if (qword_269B9C2C0 != -1) {
          swift_once();
        }
        uint64_t v17 = *(void *)(v0 + 552);
        uint64_t v18 = sub_251F350A0();
        __swift_project_value_buffer(v18, (uint64_t)qword_269B9DEE0);
        sub_251A1A4EC(v0 + 240, v0 + 440);
        uint64_t v19 = sub_251F34DA0();
        uint64_t v20 = *(void **)(v19 - 8);
        uint64_t v109 = v20[8];
        uint64_t v21 = swift_task_alloc();
        uint64_t v115 = (void (*)(uint64_t, uint64_t, uint64_t))v20[2];
        v115(v21, v17, v19);
        uint64_t v22 = sub_251F35080();
        os_log_type_t v23 = sub_251F35FD0();
        os_log_t v116 = v20;
        uint64_t v117 = v19;
        if (os_log_type_enabled(v22, v23))
        {
          uint64_t v24 = swift_slowAlloc();
          os_log_t v111 = (os_log_t)swift_slowAlloc();
          *(void *)&v119[0] = v111;
          *(_DWORD *)uint64_t v24 = 136315394;
          uint64_t v25 = v19;
          uint64_t v27 = *(void *)(v0 + 464);
          uint64_t v26 = *(void *)(v0 + 472);
          __swift_project_boxed_opaque_existential_1((void *)(v0 + 440), v27);
          uint64_t v28 = v27;
          uint64_t v16 = (void *)(v0 + 240);
          uint64_t v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 72))(v28, v26);
          *(void *)(v0 + 528) = sub_251A00E84(v29, v30, (uint64_t *)v119);
          sub_251F361D0();
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_0(v0 + 440);
          *(_WORD *)(v24 + 12) = 2080;
          sub_251AF752C();
          uint64_t v31 = sub_251F36AB0();
          *(void *)(v0 + 536) = sub_251A00E84(v31, v32, (uint64_t *)v119);
          sub_251F361D0();
          swift_bridgeObjectRelease();
          uint64_t v107 = (void (*)(uint64_t, uint64_t))v116[1];
          v107(v21, v25);
          _os_log_impl(&dword_2519F3000, v22, v23, "attempt to add timer %s for parent %s", (uint8_t *)v24, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x2533AC760](v111, -1, -1);
          MEMORY[0x2533AC760](v24, -1, -1);
        }
        else
        {
          __swift_destroy_boxed_opaque_existential_0(v0 + 440);
          uint64_t v107 = (void (*)(uint64_t, uint64_t))v20[1];
          v107(v21, v19);
        }
        uint64_t v33 = *(void *)(v0 + 664);
        os_log_t v112 = *(os_log_t *)(v0 + 656);
        os_log_t v114 = v16;
        uint64_t v34 = *(void *)(v0 + 648);
        uint64_t v35 = *(void *)(v0 + 552);
        swift_task_dealloc();
        uint64_t v36 = *(void *)(v0 + 264);
        uint64_t v37 = *(void *)(v0 + 272);
        unint64_t v38 = __swift_project_boxed_opaque_existential_1(v16, v36);
        uint64_t v39 = *(void *)(v36 - 8);
        uint64_t v40 = swift_task_alloc();
        (*(void (**)(uint64_t, void *, uint64_t))(v39 + 16))(v40, v38, v36);
        uint64_t v41 = swift_task_alloc();
        v115(v41, v35, v117);
        sub_251F34D20();
        uint64_t v42 = swift_task_alloc();
        sub_251F34CF0();
        sub_251E7239C(v40, v41, v42, v36, v37, v34);
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        if ((*(unsigned int (**)(uint64_t, uint64_t, os_log_t))(v33 + 48))(v34, 1, v112) == 1)
        {
          uint64_t v43 = *(void *)(v0 + 552);
          sub_251A1B064(*(void *)(v0 + 648), &qword_269B9D130);
          uint64_t v44 = v114;
          sub_251A1A4EC((uint64_t)v114, v0 + 360);
          uint64_t v45 = swift_task_alloc();
          v115(v45, v43, v117);
          unint64_t v46 = sub_251F35080();
          os_log_type_t v47 = sub_251F35FB0();
          if (os_log_type_enabled(v46, v47))
          {
            uint64_t v48 = swift_slowAlloc();
            uint64_t v118 = swift_slowAlloc();
            *(void *)&v119[0] = v118;
            *(_DWORD *)uint64_t v48 = 136315394;
            uint64_t v49 = *(void *)(v0 + 384);
            uint64_t v50 = *(void *)(v0 + 392);
            __swift_project_boxed_opaque_existential_1((void *)(v0 + 360), v49);
            uint64_t v51 = v49;
            uint64_t v44 = v114;
            uint64_t v52 = (*(uint64_t (**)(uint64_t, uint64_t))(v50 + 72))(v51, v50);
            *(void *)(v0 + 512) = sub_251A00E84(v52, v53, (uint64_t *)v119);
            sub_251F361D0();
            swift_bridgeObjectRelease();
            __swift_destroy_boxed_opaque_existential_0(v0 + 360);
            *(_WORD *)(v48 + 12) = 2080;
            sub_251AF752C();
            uint64_t v54 = sub_251F36AB0();
            *(void *)(v0 + 504) = sub_251A00E84(v54, v55, (uint64_t *)v119);
            sub_251F361D0();
            swift_bridgeObjectRelease();
            v107(v45, v117);
            _os_log_impl(&dword_2519F3000, v46, v47, "failed to create StaticTimer with %s for parent %s", (uint8_t *)v48, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x2533AC760](v118, -1, -1);
            MEMORY[0x2533AC760](v48, -1, -1);

            sub_251A1A774(v0 + 16);
          }
          else
          {
            sub_251A1A774(v0 + 16);
            __swift_destroy_boxed_opaque_existential_0(v0 + 360);
            v107(v45, v117);
          }
          swift_task_dealloc();
          uint64_t v92 = (uint64_t)v44;
        }
        else
        {
          uint64_t v103 = (long long *)(v0 + 320);
          os_log_t log = (long long *)(v0 + 400);
          uint64_t v56 = *(void *)(v0 + 640);
          unint64_t v57 = *(void **)(v0 + 560);
          uint64_t v58 = *(void *)(v0 + 552);
          sub_251DB04B4(*(void *)(v0 + 648), *(void *)(v0 + 688), (uint64_t (*)(void))type metadata accessor for StaticTimer);
          __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CEC0);
          uint64_t v59 = swift_allocObject();
          *(_OWORD *)(v59 + 16) = xmmword_251F38650;
          sub_251A1A4EC((uint64_t)v114, v59 + 32);
          uint64_t v60 = sub_251F35CD0();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v56, 1, 1, v60);
          uint64_t v61 = swift_task_alloc();
          v115(v61, v58, v117);
          swift_bridgeObjectRetain();
          id v62 = v57;
          uint64_t v63 = sub_251F35C70();
          unint64_t v64 = (*((unsigned __int8 *)v116 + 80) + 56) & ~(unint64_t)*((unsigned __int8 *)v116 + 80);
          uint64_t v106 = v64 + v109;
          uint64_t v65 = swift_allocObject();
          uint64_t v66 = MEMORY[0x263F8F500];
          *(void *)(v65 + 16) = v63;
          *(void *)(v65 + 24) = v66;
          *(unsigned char *)(v65 + 32) = 0;
          *(void *)(v65 + 40) = v59;
          *(void *)(v65 + 48) = v62;
          unint64_t v110 = v64;
          unint64_t v108 = (void (*)(unint64_t, uint64_t, uint64_t))v116[4];
          v108(v65 + v64, v61, v117);
          swift_task_dealloc();
          sub_251ACBB48(v56, (uint64_t)&unk_269BA10F0, v65);
          swift_release();
          swift_bridgeObjectRelease();
          if (qword_26B21E180 != -1) {
            swift_once();
          }
          os_log_t v113 = *(os_log_t *)(v0 + 688);
          uint64_t v99 = *(void *)(v0 + 680);
          uint64_t v100 = *(void *)(v0 + 672);
          uint64_t v67 = *(void *)(v0 + 664);
          uint64_t v68 = *(void *)(v0 + 624);
          uint64_t v96 = *(void *)(v0 + 632);
          uint64_t v97 = *(void *)(v0 + 616);
          uint64_t v69 = *(void *)(v0 + 608);
          uint64_t v70 = *(void *)(v0 + 600);
          uint64_t v71 = *(void *)(v0 + 592);
          uint64_t v72 = *(void *)(v0 + 584);
          uint64_t v101 = *(void **)(v0 + 560);
          uint64_t v102 = *(void *)(v0 + 568);
          uint64_t v73 = *(void *)(v0 + 552);
          uint64_t v74 = __swift_project_value_buffer(v71, (uint64_t)qword_26B21E350);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v70 + 16))(v69, v74, v71);
          uint64_t v95 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269BA10F8) + 48);
          v115(v72, v73, v117);
          __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF28);
          uint64_t v98 = *(unsigned __int8 *)(v67 + 80);
          uint64_t v75 = swift_allocObject();
          *(_OWORD *)(v75 + 16) = xmmword_251F38650;
          sub_251DB0520((uint64_t)v113, v75 + ((v98 + 32) & ~v98), (uint64_t (*)(void))type metadata accessor for StaticTimer);
          *(void *)(v72 + v95) = v75;
          swift_storeEnumTagMultiPayload();
          sub_251F35CF0();
          (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v69, v71);
          (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v96, v97);
          uint64_t v76 = *(void *)(v0 + 264);
          id v77 = __swift_project_boxed_opaque_existential_1(v114, v76);
          uint64_t v78 = *(void *)(v0 + 120);
          long long v79 = *(_OWORD *)(v0 + 88);
          v119[0] = *(_OWORD *)(v0 + 72);
          v119[1] = v79;
          v119[2] = *(_OWORD *)(v0 + 104);
          uint64_t v120 = v78;
          uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3748);
          id v81 = sub_251E674A4((uint64_t)v77, v80, v76);
          sub_251A1A4EC((uint64_t)v114, (uint64_t)v103);
          uint64_t v82 = swift_task_alloc();
          v115(v82, v73, v117);
          uint64_t v83 = swift_allocObject();
          sub_251A1A444(v103, v83 + 16);
          v108(v83 + v110, v82, v117);
          *(void *)(v0 + 176) = sub_251DB058C;
          *(void *)(v0 + 184) = v83;
          *(void *)(v0 + 144) = MEMORY[0x263EF8330];
          *(void *)(v0 + 152) = 1107296256;
          *(void *)(v0 + 160) = sub_251DA2200;
          *(void *)(v0 + 168) = &block_descriptor_82;
          long long v84 = _Block_copy((const void *)(v0 + 144));
          swift_release();
          swift_task_dealloc();
          id aBlock = objc_msgSend(v81, sel_addSuccessBlock_, v84);
          _Block_release(v84);

          sub_251A1A4EC((uint64_t)v114, (uint64_t)log);
          uint64_t v85 = swift_task_alloc();
          v115(v85, v73, v117);
          sub_251DB0520((uint64_t)v113, v99, (uint64_t (*)(void))type metadata accessor for StaticTimer);
          unint64_t v86 = (v106 + 7) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v87 = (v86 + v98 + 8) & ~v98;
          uint64_t v88 = swift_allocObject();
          sub_251A1A444(log, v88 + 16);
          v108(v88 + v110, v85, v117);
          *(void *)(v88 + v86) = v101;
          sub_251DB04B4(v99, v88 + v87, (uint64_t (*)(void))type metadata accessor for StaticTimer);
          *(void *)(v88 + ((v100 + v87 + 7) & 0xFFFFFFFFFFFFFFF8)) = v102;
          *(void *)(v0 + 224) = sub_251DB05B0;
          *(void *)(v0 + 232) = v88;
          *(void *)(v0 + 192) = MEMORY[0x263EF8330];
          *(void *)(v0 + 200) = 1107296256;
          *(void *)(v0 + 208) = sub_251DA3904;
          *(void *)(v0 + 216) = &block_descriptor_88;
          uint64_t v89 = _Block_copy((const void *)(v0 + 192));
          id v90 = v101;
          swift_release();
          swift_task_dealloc();
          id v91 = objc_msgSend(aBlock, sel_addFailureBlock_, v89);
          _Block_release(v89);

          sub_251A1A774(v0 + 16);
          sub_251DB05DC((uint64_t)v113, (uint64_t (*)(void))type metadata accessor for StaticTimer);
          uint64_t v92 = (uint64_t)v114;
        }
        __swift_destroy_boxed_opaque_existential_0(v92);
      }
      else
      {
        *(void *)(v0 + 312) = 0;
        *(_OWORD *)(v0 + 280) = 0u;
        *(_OWORD *)(v0 + 296) = 0u;
        sub_251A1A774(v0 + 16);
        sub_251A1B064(v0 + 280, &qword_269B9DF08);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v93 = *(uint64_t (**)(void))(v0 + 8);
  return v93();
}

uint64_t sub_251DAAC7C(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v80 = a5;
  id v71 = a4;
  uint64_t updated = type metadata accessor for CoordinationSnapshot.UpdateType();
  MEMORY[0x270FA5388](updated);
  id v77 = &v62[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EAE0);
  uint64_t v76 = *(void *)(v78 - 8);
  MEMORY[0x270FA5388](v78);
  uint64_t v75 = &v62[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1010);
  uint64_t v73 = *(void *)(v74 - 8);
  MEMORY[0x270FA5388](v74);
  uint64_t v72 = &v62[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v70 = &v62[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_269B9C2C0 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_251F350A0();
  __swift_project_value_buffer(v13, (uint64_t)qword_269B9DEE0);
  sub_251A1A4EC(a2, (uint64_t)v86);
  uint64_t v14 = sub_251F34DA0();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v69 = v16;
  uint64_t v17 = &v62[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v81 = v15;
  uint64_t v19 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v15 + 16);
  uint64_t v18 = v15 + 16;
  uint64_t v82 = v19;
  v19(v17, a3, v14);
  id v20 = a1;
  id v21 = a1;
  uint64_t v22 = sub_251F35080();
  os_log_type_t v23 = sub_251F35FB0();
  int v24 = v23;
  BOOL v25 = os_log_type_enabled(v22, v23);
  uint64_t v83 = v14;
  if (v25)
  {
    uint64_t v26 = swift_slowAlloc();
    uint64_t v64 = swift_slowAlloc();
    uint64_t v85 = v64;
    *(_DWORD *)uint64_t v26 = 136315650;
    uint64_t v65 = v62;
    *(void *)&long long v68 = a2;
    uint64_t v27 = a3;
    uint64_t v28 = v87;
    uint64_t v29 = v88;
    __swift_project_boxed_opaque_existential_1(v86, v87);
    unint64_t v30 = *(uint64_t (**)(uint64_t, uint64_t))(v29 + 72);
    int v63 = v24;
    uint64_t v31 = v30(v28, v29);
    uint64_t v84 = sub_251A00E84(v31, v32, &v85);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v86);
    *(_WORD *)(v26 + 12) = 2080;
    sub_251AF752C();
    uint64_t v33 = sub_251F36AB0();
    uint64_t v84 = sub_251A00E84(v33, v34, &v85);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v81 + 8))(v17, v83);
    *(_WORD *)(v26 + 22) = 2080;
    uint64_t v14 = v83;
    swift_getErrorValue();
    uint64_t v35 = sub_251F36BF0();
    uint64_t v84 = sub_251A00E84(v35, v36, &v85);
    a3 = v27;
    a2 = v68;
    sub_251F361D0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2519F3000, v22, (os_log_type_t)v63, "failed to add timer %s for parent %s due to %s", (uint8_t *)v26, 0x20u);
    uint64_t v37 = v64;
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v37, -1, -1);
    MEMORY[0x2533AC760](v26, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v86);
    (*(void (**)(unsigned char *, uint64_t))(v81 + 8))(v17, v14);
  }
  uint64_t v66 = v18;
  uint64_t v67 = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CEC0);
  uint64_t v38 = swift_allocObject();
  long long v68 = xmmword_251F38650;
  *(_OWORD *)(v38 + 16) = xmmword_251F38650;
  sub_251A1A4EC(a2, v38 + 32);
  uint64_t v39 = sub_251F35CD0();
  uint64_t v40 = (uint64_t)v70;
  uint64_t v41 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v70, 1, 1, v39);
  uint64_t v42 = v69;
  MEMORY[0x270FA5388](v41);
  v82(&v62[-((v42 + 15) & 0xFFFFFFFFFFFFFFF0)], a3, v14);
  sub_251F35C80();
  swift_bridgeObjectRetain();
  id v43 = v71;
  uint64_t v44 = sub_251F35C70();
  uint64_t v45 = v81;
  unint64_t v46 = (*(unsigned __int8 *)(v81 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80);
  uint64_t v47 = swift_allocObject();
  uint64_t v48 = MEMORY[0x263F8F500];
  *(void *)(v47 + 16) = v44;
  *(void *)(v47 + 24) = v48;
  *(unsigned char *)(v47 + 32) = 1;
  *(void *)(v47 + 40) = v38;
  *(void *)(v47 + 48) = v43;
  unint64_t v49 = v47 + v46;
  uint64_t v50 = v83;
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v45 + 32))(v49, &v62[-((v42 + 15) & 0xFFFFFFFFFFFFFFF0)], v83);
  sub_251ACBB48(v40, (uint64_t)&unk_269BA3780, v47);
  swift_bridgeObjectRelease();
  swift_release();
  if (qword_26B21E180 != -1) {
    swift_once();
  }
  uint64_t v51 = v78;
  uint64_t v52 = __swift_project_value_buffer(v78, (uint64_t)qword_26B21E350);
  uint64_t v54 = v75;
  uint64_t v53 = v76;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v76 + 16))(v75, v52, v51);
  uint64_t v55 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269BA10F8) + 48);
  uint64_t v56 = v77;
  v82(v77, v67, v50);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF28);
  uint64_t v57 = *(void *)(type metadata accessor for StaticTimer() - 8);
  unint64_t v58 = (*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
  uint64_t v59 = swift_allocObject();
  *(_OWORD *)(v59 + 16) = v68;
  sub_251DB0520(v80, v59 + v58, (uint64_t (*)(void))type metadata accessor for StaticTimer);
  *(void *)&v56[v55] = v59;
  swift_storeEnumTagMultiPayload();
  uint64_t v60 = v72;
  sub_251F35CF0();
  (*(void (**)(unsigned char *, uint64_t))(v53 + 8))(v54, v51);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v73 + 8))(v60, v74);
}

uint64_t CoordinationDataModel.toggleTimerState(staticTimerID:parentContainerID:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[88] = v3;
  v4[87] = a3;
  v4[86] = a2;
  v4[85] = a1;
  v4[89] = swift_getObjectType();
  v4[90] = type metadata accessor for CoordinationSnapshot.UpdateType();
  v4[91] = swift_task_alloc();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EAE0);
  v4[92] = v5;
  v4[93] = *(void *)(v5 - 8);
  v4[94] = swift_task_alloc();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1010);
  v4[95] = v6;
  v4[96] = *(void *)(v6 - 8);
  v4[97] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  v4[98] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D130);
  v4[99] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for StaticTimer();
  v4[100] = v7;
  v4[101] = *(void *)(v7 - 8);
  v4[102] = swift_task_alloc();
  v4[103] = sub_251F35C80();
  v4[104] = sub_251F35C70();
  uint64_t v9 = sub_251F35C00();
  v4[105] = v9;
  v4[106] = v8;
  return MEMORY[0x270FA2498](sub_251DAB7C4, v9, v8);
}

uint64_t sub_251DAB7C4()
{
  uint64_t v165 = v0;
  uint64_t v1 = *(void *)(v0 + 704) + OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_managers;
  swift_beginAccess();
  uint64_t v2 = *(void *)v1;
  if (!*(void *)(*(void *)v1 + 16)) {
    goto LABEL_10;
  }
  uint64_t v3 = *(void *)(v0 + 696);
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_2519FE584(v3);
  if ((v5 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_10:
    swift_release();
    **(void **)(v0 + 680) = 0;
LABEL_11:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v33 = *(uint64_t (**)(void))(v0 + 8);
    return v33();
  }
  uint64_t v6 = *(void *)(v0 + 696);
  uint64_t v7 = *(void *)(v0 + 688);
  uint64_t v8 = (long long *)(*(void *)(v2 + 56) + (v4 << 7));
  long long v9 = v8[3];
  long long v11 = *v8;
  long long v10 = v8[1];
  *(_OWORD *)(v0 + 48) = v8[2];
  *(_OWORD *)(v0 + 64) = v9;
  *(_OWORD *)(v0 + 16) = v11;
  *(_OWORD *)(v0 + 32) = v10;
  long long v12 = v8[7];
  long long v14 = v8[4];
  long long v13 = v8[5];
  *(_OWORD *)(v0 + 112) = v8[6];
  *(_OWORD *)(v0 + 128) = v12;
  *(_OWORD *)(v0 + 80) = v14;
  *(_OWORD *)(v0 + 96) = v13;
  sub_251A1A678(v0 + 16);
  swift_bridgeObjectRelease();
  sub_251AEEC18(v7, v6, v0 + 240);
  if (!*(void *)(v0 + 264))
  {
    swift_release();
    sub_251A1B064(v0 + 240, &qword_269B9DF08);
    if (qword_269B9C2C0 != -1) {
      swift_once();
    }
    uint64_t v35 = *(void *)(v0 + 696);
    uint64_t v36 = *(void *)(v0 + 688);
    uint64_t v37 = sub_251F350A0();
    __swift_project_value_buffer(v37, (uint64_t)qword_269B9DEE0);
    uint64_t v38 = sub_251F34DA0();
    uint64_t v39 = *(void *)(v38 - 8);
    uint64_t v40 = swift_task_alloc();
    uint64_t v41 = *(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 16);
    uint64_t v162 = v40;
    v41(v40, v36, v38);
    uint64_t v42 = swift_task_alloc();
    v41(v42, v35, v38);
    id v43 = sub_251F35080();
    os_log_type_t v44 = sub_251F35FB0();
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v45 = swift_slowAlloc();
      uint64_t v157 = swift_slowAlloc();
      *(void *)&v163[0] = v157;
      *(_DWORD *)uint64_t v45 = 136315394;
      sub_251AF752C();
      uint64_t v46 = sub_251F36AB0();
      *(void *)(v0 + 648) = sub_251A00E84(v46, v47, (uint64_t *)v163);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      uint64_t v48 = *(void (**)(uint64_t, uint64_t))(v39 + 8);
      v48(v162, v38);
      *(_WORD *)(v45 + 12) = 2080;
      uint64_t v49 = sub_251F36AB0();
      *(void *)(v0 + 640) = sub_251A00E84(v49, v50, (uint64_t *)v163);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      v48(v42, v38);
      _os_log_impl(&dword_2519F3000, v43, v44, "failed to found timer with %s for parent %s", (uint8_t *)v45, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v157, -1, -1);
      MEMORY[0x2533AC760](v45, -1, -1);

      sub_251A1A774(v0 + 16);
    }
    else
    {
      sub_251A1A774(v0 + 16);
      uint64_t v121 = *(void (**)(uint64_t, uint64_t))(v39 + 8);
      v121(v162, v38);
      v121(v42, v38);
    }
    uint64_t v122 = *(void **)(v0 + 680);
    swift_task_dealloc();
    swift_task_dealloc();
    *uint64_t v122 = 0;
    goto LABEL_11;
  }
  uint64_t v15 = (void *)(v0 + 280);
  v153 = (void *)(v0 + 400);
  sub_251A1A444((long long *)(v0 + 240), v0 + 280);
  if (qword_269B9C2C0 != -1) {
    swift_once();
  }
  v155 = (uint64_t *)(v0 + 440);
  uint64_t v16 = *(void *)(v0 + 696);
  uint64_t v17 = sub_251F350A0();
  __swift_project_value_buffer(v17, (uint64_t)qword_269B9DEE0);
  sub_251A1A4EC(v0 + 280, v0 + 560);
  uint64_t v18 = sub_251F34DA0();
  uint64_t v19 = *(void **)(v18 - 8);
  uint64_t v20 = v19[8];
  uint64_t v21 = swift_task_alloc();
  v161 = (void (*)(void))v19[2];
  ((void (*)(uint64_t, uint64_t, uint64_t))v161)(v21, v16, v18);
  uint64_t v22 = sub_251F35080();
  os_log_type_t v23 = sub_251F35FD0();
  v159 = v19;
  uint64_t v145 = v20;
  uint64_t v136 = (void *)(v0 + 16);
  uint64_t v149 = v18;
  if (os_log_type_enabled(v22, v23))
  {
    os_log_type_t typea = v23;
    uint64_t v24 = swift_slowAlloc();
    uint64_t v150 = swift_slowAlloc();
    *(void *)&v163[0] = v150;
    *(_DWORD *)uint64_t v24 = 136315394;
    uint64_t v25 = *(void *)(v0 + 584);
    uint64_t v26 = v18;
    uint64_t v27 = *(void *)(v0 + 592);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 560), v25);
    uint64_t v28 = v25;
    uint64_t v15 = (void *)(v0 + 280);
    uint64_t v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 72))(v28, v27);
    *(void *)(v0 + 664) = sub_251A00E84(v29, v30, (uint64_t *)v163);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0(v0 + 560);
    *(_WORD *)(v24 + 12) = 2080;
    sub_251AF752C();
    uint64_t v31 = sub_251F36AB0();
    *(void *)(v0 + 672) = sub_251A00E84(v31, v32, (uint64_t *)v163);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    uint64_t v134 = (void (*)(uint64_t, uint64_t))v19[1];
    v134(v21, v26);
    _os_log_impl(&dword_2519F3000, v22, typea, "attempt to update timer %s for parent %s", (uint8_t *)v24, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v150, -1, -1);
    MEMORY[0x2533AC760](v24, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0(v0 + 560);
    uint64_t v134 = (void (*)(uint64_t, uint64_t))v19[1];
    v134(v21, v18);
  }
  uint64_t v141 = *(void *)(v0 + 808);
  os_log_t loga = *(os_log_t *)(v0 + 800);
  uint64_t v139 = *(void *)(v0 + 696);
  uint64_t v140 = *(void *)(v0 + 792);
  swift_task_dealloc();
  uint64_t v51 = *(void *)(v0 + 304);
  uint64_t v52 = *(void *)(v0 + 312);
  __swift_project_boxed_opaque_existential_1(v15, v51);
  (*(void (**)(uint64_t, uint64_t))(v52 + 88))(v51, v52);
  uint64_t v53 = *(void *)(v0 + 304);
  uint64_t v54 = *(void *)(v0 + 312);
  uint64_t type = (uint64_t)v15;
  __swift_project_boxed_opaque_existential_1(v15, v53);
  uint64_t v55 = *(void *)(v0 + 424);
  uint64_t v56 = *(void *)(v0 + 432);
  uint64_t v57 = __swift_project_boxed_opaque_existential_1(v153, v55);
  unint64_t v58 = *(void (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(v54 + 96);
  *(void *)(v0 + 464) = v53;
  *(void *)(v0 + 472) = v54;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v155);
  v58(v57, v55, v56, v53, v54);
  __swift_project_boxed_opaque_existential_1(v155, *(void *)(v0 + 464));
  uint64_t v59 = swift_task_alloc();
  ((void (*)(uint64_t, uint64_t, uint64_t))v161)(v59, v139, v149);
  sub_251F34D20();
  uint64_t v60 = swift_task_alloc();
  sub_251F34CF0();
  uint64_t v61 = *(void *)(v53 - 8);
  uint64_t v62 = swift_task_alloc();
  (*(void (**)(uint64_t, uint64_t *, uint64_t))(v61 + 16))(v62, boxed_opaque_existential_1, v53);
  uint64_t v138 = v53;
  sub_251E7239C(v62, v59, v60, v53, v54, v140);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  if ((*(unsigned int (**)(uint64_t, uint64_t, os_log_t))(v141 + 48))(v140, 1, loga) == 1)
  {
    uint64_t v63 = *(void *)(v0 + 792);
    uint64_t v64 = *(void *)(v0 + 696);
    swift_release();
    sub_251A1B064(v63, &qword_269B9D130);
    uint64_t v65 = v0 + 440;
    sub_251A1A4EC((uint64_t)v155, v0 + 480);
    uint64_t v66 = swift_task_alloc();
    ((void (*)(uint64_t, uint64_t, uint64_t))v161)(v66, v64, v149);
    uint64_t v67 = sub_251F35080();
    os_log_type_t v68 = sub_251F35FB0();
    if (os_log_type_enabled(v67, v68))
    {
      uint64_t v69 = swift_slowAlloc();
      uint64_t v158 = swift_slowAlloc();
      *(void *)&v163[0] = v158;
      *(_DWORD *)uint64_t v69 = 136315394;
      uint64_t v70 = *(void *)(v0 + 504);
      uint64_t v71 = *(void *)(v0 + 512);
      __swift_project_boxed_opaque_existential_1((void *)(v0 + 480), v70);
      uint64_t v72 = v70;
      uint64_t v65 = v0 + 440;
      uint64_t v73 = (*(uint64_t (**)(uint64_t, uint64_t))(v54 + 72))(v72, v71);
      *(void *)(v0 + 632) = sub_251A00E84(v73, v74, (uint64_t *)v163);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_0(v0 + 480);
      *(_WORD *)(v69 + 12) = 2080;
      sub_251AF752C();
      uint64_t v75 = sub_251F36AB0();
      *(void *)(v0 + 624) = sub_251A00E84(v75, v76, (uint64_t *)v163);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      v134(v66, v149);
      _os_log_impl(&dword_2519F3000, v67, v68, "failed to create StaticTimer with %s for parent %s", (uint8_t *)v69, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v158, -1, -1);
      MEMORY[0x2533AC760](v69, -1, -1);

      sub_251A1A774((uint64_t)v136);
    }
    else
    {
      sub_251A1A774((uint64_t)v136);
      __swift_destroy_boxed_opaque_existential_0(v0 + 480);
      v134(v66, v149);
    }
    uint64_t v123 = *(void **)(v0 + 680);
    swift_task_dealloc();
    *uint64_t v123 = 0;
    __swift_destroy_boxed_opaque_existential_0(v65);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v153);
    __swift_destroy_boxed_opaque_existential_0(type);
    goto LABEL_11;
  }
  int v135 = (long long *)(v0 + 320);
  uint64_t v130 = (long long *)(v0 + 360);
  v148 = (long long *)(v0 + 520);
  uint64_t v77 = *(void *)(v0 + 784);
  uint64_t v78 = *(void **)(v0 + 704);
  uint64_t v79 = *(void *)(v0 + 696);
  sub_251DB04B4(*(void *)(v0 + 792), *(void *)(v0 + 816), (uint64_t (*)(void))type metadata accessor for StaticTimer);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CEC0);
  uint64_t v80 = swift_allocObject();
  *(_OWORD *)(v80 + 16) = xmmword_251F38650;
  sub_251A1A4EC((uint64_t)v155, v80 + 32);
  uint64_t v81 = sub_251F35CD0();
  uint64_t v82 = v77;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v81 - 8) + 56))(v77, 1, 1, v81);
  uint64_t v83 = swift_task_alloc();
  ((void (*)(uint64_t, uint64_t, uint64_t))v161)(v83, v79, v149);
  swift_bridgeObjectRetain();
  id v84 = v78;
  uint64_t v85 = sub_251F35C70();
  uint64_t v86 = *((unsigned __int8 *)v159 + 80);
  uint64_t v131 = ~v86;
  uint64_t v132 = v86;
  uint64_t v87 = (v86 + 56) & ~v86;
  uint64_t v137 = v87 + v145;
  uint64_t v88 = swift_allocObject();
  uint64_t v89 = MEMORY[0x263F8F500];
  *(void *)(v88 + 16) = v85;
  *(void *)(v88 + 24) = v89;
  *(unsigned char *)(v88 + 32) = 0;
  *(void *)(v88 + 40) = v80;
  *(void *)(v88 + 48) = v84;
  os_log_t log = (os_log_t)v87;
  v160 = (void (**)(uint64_t, uint64_t, uint64_t))(v159 + 4);
  id v142 = *v160;
  (*v160)(v88 + v87, v83, v149);
  swift_task_dealloc();
  sub_251ACBB48(v82, (uint64_t)&unk_269BA3758, v88);
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_26B21E180 != -1) {
    swift_once();
  }
  uint64_t v90 = *(void *)(v0 + 808);
  uint64_t v124 = *(void *)(v0 + 816);
  uint64_t v125 = *(void *)(v0 + 776);
  uint64_t v91 = *(void *)(v0 + 768);
  uint64_t v92 = *(void *)(v0 + 752);
  uint64_t v93 = *(void *)(v0 + 744);
  uint64_t v94 = *(void *)(v0 + 736);
  uint64_t v95 = *(void *)(v0 + 728);
  uint64_t v128 = *(void **)(v0 + 704);
  uint64_t v129 = *(void *)(v0 + 712);
  uint64_t v96 = *(void *)(v0 + 696);
  uint64_t v126 = *(void *)(v0 + 760);
  uint64_t v127 = *(void *)(v0 + 688);
  uint64_t v97 = __swift_project_value_buffer(v94, (uint64_t)qword_26B21E350);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v93 + 16))(v92, v97, v94);
  uint64_t v133 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA10F8);
  uint64_t v98 = *(int *)(v133 + 48);
  ((void (*)(uint64_t, uint64_t, uint64_t))v161)(v95, v96, v149);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF28);
  unint64_t v99 = (*(unsigned __int8 *)(v90 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v90 + 80);
  uint64_t v100 = swift_allocObject();
  *(_OWORD *)(v100 + 16) = xmmword_251F38650;
  sub_251DB0520(v124, v100 + v99, (uint64_t (*)(void))type metadata accessor for StaticTimer);
  *(void *)(v95 + v98) = v100;
  swift_storeEnumTagMultiPayload();
  sub_251F35CF0();
  (*(void (**)(uint64_t, uint64_t))(v93 + 8))(v92, v94);
  (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v125, v126);
  uint64_t v101 = *(void *)(v0 + 120);
  long long v102 = *(_OWORD *)(v0 + 88);
  v163[0] = *(_OWORD *)(v0 + 72);
  v163[1] = v102;
  v163[2] = *(_OWORD *)(v0 + 104);
  uint64_t v164 = v101;
  uint64_t v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3748);
  id v104 = sub_251E67D04((uint64_t)boxed_opaque_existential_1, v103, v138);
  sub_251A1A4EC((uint64_t)v155, (uint64_t)v130);
  uint64_t v105 = swift_task_alloc();
  ((void (*)(uint64_t, uint64_t, uint64_t))v161)(v105, v96, v149);
  uint64_t v106 = swift_allocObject();
  sub_251A1A444(v130, v106 + 16);
  v142((uint64_t)log + v106, v105, v149);
  *(void *)(v0 + 176) = sub_251DB0644;
  *(void *)(v0 + 184) = v106;
  *(void *)(v0 + 144) = MEMORY[0x263EF8330];
  *(void *)(v0 + 152) = 1107296256;
  *(void *)(v0 + 160) = sub_251DA2200;
  *(void *)(v0 + 168) = &block_descriptor_99;
  uint64_t v107 = _Block_copy((const void *)(v0 + 144));
  swift_release();
  swift_task_dealloc();
  id v152 = objc_msgSend(v104, sel_addSuccessBlock_, v107);
  _Block_release(v107);

  sub_251A1A4EC((uint64_t)v155, (uint64_t)v148);
  uint64_t v156 = swift_task_alloc();
  v161();
  sub_251A1A4EC(type, (uint64_t)v135);
  uint64_t v154 = swift_task_alloc();
  ((void (*)(uint64_t, uint64_t, uint64_t))v161)(v154, v127, v149);
  unint64_t v108 = (v137 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v109 = (v108 + 47) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v110 = (v132 + v109 + 8) & v131;
  uint64_t v111 = swift_allocObject();
  sub_251A1A444(v148, v111 + 16);
  v142((uint64_t)log + v111, v156, v149);
  sub_251A1A444(v135, v111 + v108);
  *(void *)(v111 + v109) = v128;
  v142(v111 + v110, v154, v149);
  *(void *)(v111 + ((v145 + v110 + 7) & 0xFFFFFFFFFFFFFFF8)) = v129;
  *(void *)(v0 + 224) = sub_251DB078C;
  *(void *)(v0 + 232) = v111;
  *(void *)(v0 + 192) = MEMORY[0x263EF8330];
  *(void *)(v0 + 200) = 1107296256;
  *(void *)(v0 + 208) = sub_251DA3904;
  *(void *)(v0 + 216) = &block_descriptor_105;
  os_log_t v112 = _Block_copy((const void *)(v0 + 192));
  id v113 = v128;
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  id v114 = objc_msgSend(v152, sel_addFailureBlock_, v112);
  _Block_release(v112);

  if (qword_269B9C2B0 != -1) {
    swift_once();
  }
  uint64_t v115 = *(void *)(v0 + 816);
  uint64_t v116 = *(void *)(v0 + 728);
  uint64_t v117 = *(int *)(v133 + 48);
  ((void (*)(uint64_t, void, uint64_t))v161)(v116, *(void *)(v0 + 696), v149);
  uint64_t v118 = swift_allocObject();
  *(_OWORD *)(v118 + 16) = xmmword_251F38650;
  sub_251DB0520(v115, v118 + v99, (uint64_t (*)(void))type metadata accessor for StaticTimer);
  *(void *)(v116 + v117) = v118;
  swift_storeEnumTagMultiPayload();
  uint64_t v119 = (void *)swift_task_alloc();
  *(void *)(v0 + 856) = v119;
  *uint64_t v119 = v0;
  v119[1] = sub_251DACBC0;
  uint64_t v120 = *(void *)(v0 + 728);
  return sub_251D39E48(v0 + 656, v120, 0);
}

uint64_t sub_251DACBC0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 728);
  swift_task_dealloc();
  sub_251DB05DC(v2, (uint64_t (*)(void))type metadata accessor for CoordinationSnapshot.UpdateType);
  uint64_t v3 = *(void *)(v1 + 848);
  uint64_t v4 = *(void *)(v1 + 840);
  return MEMORY[0x270FA2498](sub_251DACD18, v4, v3);
}

uint64_t sub_251DACD18()
{
  uint64_t v1 = v0[102];
  uint64_t v2 = (void *)v0[85];
  swift_release();
  sub_251A1A774((uint64_t)(v0 + 2));
  sub_251DB05DC(v1, (uint64_t (*)(void))type metadata accessor for StaticTimer);
  *uint64_t v2 = v0[82];
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 55));
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 50));
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 35));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

void sub_251DACE28(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  if (qword_269B9C2C0 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_251F350A0();
  __swift_project_value_buffer(v7, (uint64_t)qword_269B9DEE0);
  sub_251A1A4EC(a2, (uint64_t)v27);
  uint64_t v8 = sub_251F34DA0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  long long v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a3, v8);
  long long v12 = sub_251F35080();
  os_log_type_t v13 = sub_251F35FD0();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    uint64_t v26 = v23;
    *(_DWORD *)uint64_t v14 = 136315394;
    uint64_t v22 = a4;
    uint64_t v24 = &v22;
    uint64_t v16 = v28;
    uint64_t v15 = v29;
    __swift_project_boxed_opaque_existential_1(v27, v28);
    uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 72))(v16, v15);
    uint64_t v25 = sub_251A00E84(v17, v18, &v26);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v27);
    *(_WORD *)(v14 + 12) = 2080;
    sub_251AF752C();
    uint64_t v19 = sub_251F36AB0();
    uint64_t v25 = sub_251A00E84(v19, v20, &v26);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    _os_log_impl(&dword_2519F3000, v12, v13, v22, (uint8_t *)v14, 0x16u);
    uint64_t v21 = v23;
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v21, -1, -1);
    MEMORY[0x2533AC760](v14, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v27);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

uint64_t sub_251DAD124(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4, void *a5, uint64_t a6)
{
  uint64_t v98 = a6;
  unint64_t v99 = a5;
  unint64_t v108 = a4;
  uint64_t v111 = a1;
  uint64_t updated = type metadata accessor for CoordinationSnapshot.UpdateType();
  MEMORY[0x270FA5388](updated);
  uint64_t v9 = (char *)&v88 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EAE0);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v93 = (char *)&v88 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1010);
  uint64_t v91 = *(void *)(v92 - 8);
  MEMORY[0x270FA5388](v92);
  uint64_t v14 = (char *)&v88 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v100 = (uint64_t)&v88 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D130);
  MEMORY[0x270FA5388](v17 - 8);
  *(void *)&long long v104 = (char *)&v88 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = type metadata accessor for StaticTimer();
  uint64_t v105 = *(void *)(v103 - 8);
  MEMORY[0x270FA5388](v103);
  uint64_t v101 = (uint64_t)&v88 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_269B9C2C0 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_251F350A0();
  __swift_project_value_buffer(v20, (uint64_t)qword_269B9DEE0);
  sub_251A1A4EC(a2, (uint64_t)&v114);
  uint64_t v21 = (void *)sub_251F34DA0();
  long long v102 = &v88;
  uint64_t v22 = *(v21 - 1);
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)&v88 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = *(void (**)(char *, uint64_t, void *))(v22 + 16);
  uint64_t v109 = a3;
  uint64_t v110 = v25;
  uint64_t v106 = v23;
  uint64_t v107 = v22 + 16;
  v25(v24, a3, v21);
  id v26 = v111;
  uint64_t v27 = v111;
  id v28 = v26;
  uint64_t v29 = sub_251F35080();
  os_log_type_t v30 = sub_251F35FB0();
  BOOL v31 = os_log_type_enabled(v29, v30);
  uint64_t v96 = v10;
  uint64_t v95 = v9;
  uint64_t v94 = v11;
  uint64_t v90 = v14;
  uint64_t v89 = v22;
  if (v31)
  {
    uint64_t v32 = swift_slowAlloc();
    uint64_t v88 = swift_slowAlloc();
    uint64_t v113 = v88;
    *(_DWORD *)uint64_t v32 = 136315650;
    uint64_t v34 = v115;
    uint64_t v33 = v116;
    __swift_project_boxed_opaque_existential_1(&v114, v115);
    uint64_t v35 = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 72))(v34, v33);
    uint64_t v112 = sub_251A00E84(v35, v36, &v113);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v114);
    *(_WORD *)(v32 + 12) = 2080;
    sub_251AF752C();
    uint64_t v37 = sub_251F36AB0();
    uint64_t v112 = sub_251A00E84(v37, v38, &v113);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, void *))(v22 + 8))(v24, v21);
    *(_WORD *)(v32 + 22) = 2080;
    id v39 = v111;
    swift_getErrorValue();
    uint64_t v40 = sub_251F36BF0();
    uint64_t v112 = sub_251A00E84(v40, v41, &v113);
    sub_251F361D0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2519F3000, v29, v30, "failed to update timer %s for parent %s due to %s", (uint8_t *)v32, 0x20u);
    uint64_t v42 = v88;
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v42, -1, -1);
    MEMORY[0x2533AC760](v32, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v114);
    (*(void (**)(char *, void *))(v22 + 8))(v24, v21);
    id v43 = v111;
  }
  uint64_t v44 = v108[3];
  uint64_t v45 = v108[4];
  uint64_t v46 = __swift_project_boxed_opaque_existential_1(v108, v44);
  MEMORY[0x270FA5388](v46);
  uint64_t v48 = (char *)&v88 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = (*(uint64_t (**)(char *))(v49 + 16))(v48);
  MEMORY[0x270FA5388](v50);
  uint64_t v52 = (char *)&v88 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = v109;
  uint64_t v111 = v21;
  v110(v52, v109, v21);
  uint64_t v54 = sub_251F34D20();
  MEMORY[0x270FA5388](v54 - 8);
  uint64_t v56 = (char *)&v88 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34CF0();
  uint64_t v57 = v44;
  unint64_t v58 = (uint64_t *)v104;
  sub_251E7239C((uint64_t)v48, (uint64_t)v52, (uint64_t)v56, v57, v45, v104);
  uint64_t v59 = v105;
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v105 + 48))(v58, 1, v103) == 1)
  {
    uint64_t v60 = &qword_269B9D130;
    uint64_t v61 = v58;
    return sub_251A1B064((uint64_t)v61, v60);
  }
  uint64_t v62 = (uint64_t)v58;
  uint64_t v63 = v101;
  sub_251DB04B4(v62, v101, (uint64_t (*)(void))type metadata accessor for StaticTimer);
  uint64_t v64 = v99;
  sub_251AEEC18(v98, v53, (uint64_t)&v114);
  if (!v115)
  {
    sub_251DB05DC(v63, (uint64_t (*)(void))type metadata accessor for StaticTimer);
    uint64_t v60 = &qword_269B9DF08;
    uint64_t v61 = &v114;
    return sub_251A1B064((uint64_t)v61, v60);
  }
  sub_251A1B064((uint64_t)&v114, &qword_269B9DF08);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CEC0);
  uint64_t v65 = swift_allocObject();
  long long v104 = xmmword_251F38650;
  *(_OWORD *)(v65 + 16) = xmmword_251F38650;
  sub_251A1A4EC((uint64_t)v108, v65 + 32);
  uint64_t v66 = sub_251F35CD0();
  uint64_t v67 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 56))(v100, 1, 1, v66);
  unint64_t v108 = &v88;
  uint64_t v68 = v106;
  MEMORY[0x270FA5388](v67);
  uint64_t v69 = v111;
  v110((char *)&v88 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0), v53, v111);
  sub_251F35C80();
  swift_bridgeObjectRetain();
  id v70 = v64;
  uint64_t v71 = sub_251F35C70();
  uint64_t v72 = v89;
  unint64_t v73 = (*(unsigned __int8 *)(v89 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80);
  uint64_t v74 = swift_allocObject();
  uint64_t v75 = MEMORY[0x263F8F500];
  *(void *)(v74 + 16) = v71;
  *(void *)(v74 + 24) = v75;
  *(unsigned char *)(v74 + 32) = 0;
  *(void *)(v74 + 40) = v65;
  *(void *)(v74 + 48) = v70;
  (*(void (**)(unint64_t, char *, void *))(v72 + 32))(v74 + v73, (char *)&v88 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0), v69);
  sub_251ACBB48(v100, (uint64_t)&unk_269BA3778, v74);
  swift_bridgeObjectRelease();
  swift_release();
  if (qword_26B21E180 != -1) {
    swift_once();
  }
  uint64_t v76 = v96;
  uint64_t v77 = __swift_project_value_buffer(v96, (uint64_t)qword_26B21E350);
  uint64_t v78 = v94;
  uint64_t v79 = v93;
  (*(void (**)(char *, uint64_t, uint64_t))(v94 + 16))(v93, v77, v76);
  uint64_t v80 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269BA10F8) + 48);
  uint64_t v81 = v95;
  v110(v95, v109, v69);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF28);
  unint64_t v82 = (*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  uint64_t v83 = swift_allocObject();
  *(_OWORD *)(v83 + 16) = v104;
  uint64_t v84 = v83 + v82;
  uint64_t v85 = v101;
  sub_251DB0520(v101, v84, (uint64_t (*)(void))type metadata accessor for StaticTimer);
  *(void *)&v81[v80] = v83;
  swift_storeEnumTagMultiPayload();
  uint64_t v86 = v90;
  sub_251F35CF0();
  (*(void (**)(char *, uint64_t))(v78 + 8))(v79, v76);
  (*(void (**)(char *, uint64_t))(v91 + 8))(v86, v92);
  return sub_251DB05DC(v85, (uint64_t (*)(void))type metadata accessor for StaticTimer);
}

uint64_t CoordinationDataModel.deleteTimer(staticTimerID:parentContainerID:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[73] = v3;
  v4[72] = a3;
  v4[71] = a2;
  v4[70] = a1;
  v4[74] = swift_getObjectType();
  v4[75] = type metadata accessor for CoordinationSnapshot.UpdateType();
  v4[76] = swift_task_alloc();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EAE0);
  v4[77] = v5;
  v4[78] = *(void *)(v5 - 8);
  v4[79] = swift_task_alloc();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1010);
  v4[80] = v6;
  v4[81] = *(void *)(v6 - 8);
  v4[82] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  v4[83] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D130);
  v4[84] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for StaticTimer();
  v4[85] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v4[86] = v8;
  v4[87] = *(void *)(v8 + 64);
  v4[88] = swift_task_alloc();
  v4[89] = swift_task_alloc();
  v4[90] = sub_251F35C80();
  v4[91] = sub_251F35C70();
  uint64_t v10 = sub_251F35C00();
  v4[92] = v10;
  v4[93] = v9;
  return MEMORY[0x270FA2498](sub_251DADF4C, v10, v9);
}

uint64_t sub_251DADF4C()
{
  uint64_t v148 = v0;
  uint64_t v1 = *(void *)(v0 + 584) + OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_managers;
  swift_beginAccess();
  uint64_t v2 = *(void *)v1;
  if (!*(void *)(*(void *)v1 + 16)) {
    goto LABEL_10;
  }
  uint64_t v3 = *(void *)(v0 + 576);
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_2519FE584(v3);
  if ((v5 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_10:
    swift_release();
    **(void **)(v0 + 560) = 0;
LABEL_11:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v32 = *(uint64_t (**)(void))(v0 + 8);
    return v32();
  }
  uint64_t v6 = *(void *)(v0 + 576);
  uint64_t v7 = *(void *)(v0 + 568);
  uint64_t v8 = (long long *)(*(void *)(v2 + 56) + (v4 << 7));
  long long v9 = v8[3];
  long long v11 = *v8;
  long long v10 = v8[1];
  *(_OWORD *)(v0 + 48) = v8[2];
  *(_OWORD *)(v0 + 64) = v9;
  *(_OWORD *)(v0 + 16) = v11;
  *(_OWORD *)(v0 + 32) = v10;
  long long v12 = v8[7];
  long long v14 = v8[4];
  long long v13 = v8[5];
  *(_OWORD *)(v0 + 112) = v8[6];
  *(_OWORD *)(v0 + 128) = v12;
  *(_OWORD *)(v0 + 80) = v14;
  *(_OWORD *)(v0 + 96) = v13;
  sub_251A1A678(v0 + 16);
  swift_bridgeObjectRelease();
  sub_251AEEC18(v7, v6, v0 + 240);
  if (!*(void *)(v0 + 264))
  {
    swift_release();
    sub_251A1B064(v0 + 240, &qword_269B9DF08);
    if (qword_269B9C2C0 != -1) {
      swift_once();
    }
    uint64_t v34 = *(void *)(v0 + 576);
    uint64_t v35 = *(void *)(v0 + 568);
    uint64_t v36 = sub_251F350A0();
    __swift_project_value_buffer(v36, (uint64_t)qword_269B9DEE0);
    uint64_t v37 = sub_251F34DA0();
    uint64_t v38 = *(void *)(v37 - 8);
    uint64_t v39 = swift_task_alloc();
    uint64_t v40 = *(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 16);
    uint64_t v145 = v39;
    v40(v39, v35, v37);
    uint64_t v41 = swift_task_alloc();
    v40(v41, v34, v37);
    uint64_t v42 = sub_251F35080();
    os_log_type_t v43 = sub_251F35FB0();
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v44 = swift_slowAlloc();
      uint64_t v142 = swift_slowAlloc();
      *(void *)&v146[0] = v142;
      *(_DWORD *)uint64_t v44 = 136315394;
      sub_251AF752C();
      uint64_t v45 = sub_251F36AB0();
      *(void *)(v0 + 528) = sub_251A00E84(v45, v46, (uint64_t *)v146);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      uint64_t v47 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
      v47(v145, v37);
      *(_WORD *)(v44 + 12) = 2080;
      uint64_t v48 = sub_251F36AB0();
      *(void *)(v0 + 520) = sub_251A00E84(v48, v49, (uint64_t *)v146);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      v47(v41, v37);
      _os_log_impl(&dword_2519F3000, v42, v43, "failed to found timer with %s for parent %s", (uint8_t *)v44, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v142, -1, -1);
      MEMORY[0x2533AC760](v44, -1, -1);

      sub_251A1A774(v0 + 16);
    }
    else
    {
      sub_251A1A774(v0 + 16);
      uint64_t v116 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
      v116(v145, v37);
      v116(v41, v37);
    }
    uint64_t v117 = *(void **)(v0 + 560);
    swift_task_dealloc();
    swift_task_dealloc();
    *uint64_t v117 = 0;
    goto LABEL_11;
  }
  uint64_t v15 = (void *)(v0 + 280);
  sub_251A1A444((long long *)(v0 + 240), v0 + 280);
  if (qword_269B9C2C0 != -1) {
    swift_once();
  }
  uint64_t v16 = *(void *)(v0 + 576);
  uint64_t v17 = sub_251F350A0();
  __swift_project_value_buffer(v17, (uint64_t)qword_269B9DEE0);
  sub_251A1A4EC(v0 + 280, v0 + 360);
  uint64_t v18 = sub_251F34DA0();
  uint64_t v19 = *(void **)(v18 - 8);
  uint64_t v133 = v19[8];
  uint64_t v20 = swift_task_alloc();
  uint64_t v141 = (void (*)(uint64_t, uint64_t, uint64_t))v19[2];
  v141(v20, v16, v18);
  uint64_t v21 = sub_251F35080();
  os_log_type_t v22 = sub_251F35FD0();
  uint64_t v140 = v19;
  uint64_t v144 = v18;
  if (os_log_type_enabled(v21, v22))
  {
    os_log_type_t type = v22;
    uint64_t v23 = swift_slowAlloc();
    uint64_t v135 = swift_slowAlloc();
    *(void *)&v146[0] = v135;
    *(_DWORD *)uint64_t v23 = 136315394;
    uint64_t v24 = *(void *)(v0 + 384);
    uint64_t v25 = *(void *)(v0 + 392);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 360), v24);
    id v26 = *(uint64_t (**)(uint64_t, uint64_t))(v25 + 72);
    uint64_t v27 = v25;
    uint64_t v15 = (void *)(v0 + 280);
    uint64_t v28 = v26(v24, v27);
    *(void *)(v0 + 544) = sub_251A00E84(v28, v29, (uint64_t *)v146);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0(v0 + 360);
    *(_WORD *)(v23 + 12) = 2080;
    sub_251AF752C();
    uint64_t v30 = sub_251F36AB0();
    *(void *)(v0 + 552) = sub_251A00E84(v30, v31, (uint64_t *)v146);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    uint64_t v131 = (void (*)(uint64_t, uint64_t))v19[1];
    v131(v20, v144);
    _os_log_impl(&dword_2519F3000, v21, type, "attempt to delete timer %s for parent %s", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v135, -1, -1);
    MEMORY[0x2533AC760](v23, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0(v0 + 360);
    uint64_t v131 = (void (*)(uint64_t, uint64_t))v19[1];
    v131(v20, v18);
  }
  uint64_t v138 = v15;
  uint64_t v50 = *(void *)(v0 + 688);
  uint64_t v136 = *(void *)(v0 + 680);
  uint64_t v51 = *(void *)(v0 + 672);
  uint64_t v52 = *(void *)(v0 + 576);
  swift_task_dealloc();
  uint64_t v53 = *(void *)(v0 + 304);
  uint64_t v54 = *(void *)(v0 + 312);
  uint64_t v55 = __swift_project_boxed_opaque_existential_1(v15, v53);
  uint64_t v56 = *(void *)(v53 - 8);
  uint64_t v57 = swift_task_alloc();
  (*(void (**)(uint64_t, void *, uint64_t))(v56 + 16))(v57, v55, v53);
  uint64_t v58 = swift_task_alloc();
  v141(v58, v52, v144);
  sub_251F34D20();
  uint64_t v59 = swift_task_alloc();
  sub_251F34CF0();
  sub_251E7239C(v57, v58, v59, v53, v54, v51);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v51, 1, v136) == 1)
  {
    uint64_t v60 = *(void *)(v0 + 672);
    uint64_t v61 = *(void *)(v0 + 576);
    swift_release();
    sub_251A1B064(v60, &qword_269B9D130);
    sub_251A1A4EC((uint64_t)v138, v0 + 400);
    uint64_t v62 = swift_task_alloc();
    v141(v62, v61, v144);
    uint64_t v63 = sub_251F35080();
    os_log_type_t v64 = sub_251F35FB0();
    if (os_log_type_enabled(v63, v64))
    {
      uint64_t v65 = swift_slowAlloc();
      uint64_t v143 = swift_slowAlloc();
      *(void *)&v146[0] = v143;
      *(_DWORD *)uint64_t v65 = 136315394;
      os_log_type_t v139 = v64;
      uint64_t v66 = *(void *)(v0 + 424);
      uint64_t v67 = *(void *)(v0 + 432);
      __swift_project_boxed_opaque_existential_1((void *)(v0 + 400), v66);
      uint64_t v68 = (*(uint64_t (**)(uint64_t, uint64_t))(v67 + 72))(v66, v67);
      *(void *)(v0 + 512) = sub_251A00E84(v68, v69, (uint64_t *)v146);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_0(v0 + 400);
      *(_WORD *)(v65 + 12) = 2080;
      sub_251AF752C();
      uint64_t v70 = sub_251F36AB0();
      *(void *)(v0 + 504) = sub_251A00E84(v70, v71, (uint64_t *)v146);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      v131(v62, v144);
      _os_log_impl(&dword_2519F3000, v63, v139, "failed to create StaticTimer with %s for parent %s", (uint8_t *)v65, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v143, -1, -1);
      MEMORY[0x2533AC760](v65, -1, -1);

      sub_251A1A774(v0 + 16);
    }
    else
    {
      sub_251A1A774(v0 + 16);
      __swift_destroy_boxed_opaque_existential_0(v0 + 400);
      v131(v62, v144);
    }
    uint64_t v118 = *(void **)(v0 + 560);
    swift_task_dealloc();
    *uint64_t v118 = 0;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v138);
    goto LABEL_11;
  }
  uint64_t v125 = (long long *)(v0 + 320);
  uint64_t v128 = (long long *)(v0 + 440);
  uint64_t v72 = *(void *)(v0 + 664);
  unint64_t v73 = *(void **)(v0 + 584);
  uint64_t v74 = *(void *)(v0 + 576);
  sub_251DB04B4(*(void *)(v0 + 672), *(void *)(v0 + 712), (uint64_t (*)(void))type metadata accessor for StaticTimer);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CEC0);
  uint64_t v75 = swift_allocObject();
  *(_OWORD *)(v75 + 16) = xmmword_251F38650;
  sub_251A1A4EC((uint64_t)v138, v75 + 32);
  uint64_t v76 = sub_251F35CD0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v76 - 8) + 56))(v72, 1, 1, v76);
  uint64_t v77 = swift_task_alloc();
  v141(v77, v74, v144);
  swift_bridgeObjectRetain();
  id v78 = v73;
  uint64_t v79 = sub_251F35C70();
  unint64_t v80 = (*((unsigned __int8 *)v140 + 80) + 56) & ~(unint64_t)*((unsigned __int8 *)v140 + 80);
  uint64_t v132 = v80 + v133;
  uint64_t v81 = swift_allocObject();
  uint64_t v82 = MEMORY[0x263F8F500];
  *(void *)(v81 + 16) = v79;
  *(void *)(v81 + 24) = v82;
  *(unsigned char *)(v81 + 32) = 1;
  *(void *)(v81 + 40) = v75;
  *(void *)(v81 + 48) = v78;
  unint64_t v137 = v80;
  uint64_t v134 = (void (*)(unint64_t, uint64_t, uint64_t))v140[4];
  v134(v81 + v80, v77, v144);
  swift_task_dealloc();
  sub_251ACBB48(v72, (uint64_t)&unk_269BA3768, v81);
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_26B21E180 != -1) {
    swift_once();
  }
  uint64_t typea = *(void *)(v0 + 712);
  uint64_t v121 = *(void *)(v0 + 704);
  uint64_t v122 = *(void *)(v0 + 696);
  uint64_t v83 = *(void *)(v0 + 688);
  uint64_t v84 = *(void *)(v0 + 648);
  uint64_t v119 = *(void *)(v0 + 656);
  uint64_t v120 = *(void *)(v0 + 640);
  uint64_t v85 = *(void *)(v0 + 632);
  uint64_t v86 = *(void *)(v0 + 624);
  uint64_t v87 = *(void *)(v0 + 616);
  uint64_t v88 = *(void *)(v0 + 608);
  uint64_t v123 = *(void **)(v0 + 584);
  uint64_t v124 = *(void *)(v0 + 592);
  uint64_t v89 = *(void *)(v0 + 576);
  uint64_t v90 = __swift_project_value_buffer(v87, (uint64_t)qword_26B21E350);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v86 + 16))(v85, v90, v87);
  uint64_t v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA10F8);
  uint64_t v91 = *(int *)(v126 + 48);
  v141(v88, v89, v144);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF28);
  uint64_t v92 = *(unsigned __int8 *)(v83 + 80);
  uint64_t v93 = swift_allocObject();
  *(_OWORD *)(v93 + 16) = xmmword_251F38650;
  sub_251DB0520(typea, v93 + ((v92 + 32) & ~v92), (uint64_t (*)(void))type metadata accessor for StaticTimer);
  *(void *)(v88 + v91) = v93;
  swift_storeEnumTagMultiPayload();
  sub_251F35CF0();
  (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v85, v87);
  (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v119, v120);
  uint64_t v94 = *(void *)(v0 + 304);
  uint64_t v95 = __swift_project_boxed_opaque_existential_1(v138, v94);
  uint64_t v96 = *(void *)(v0 + 120);
  long long v97 = *(_OWORD *)(v0 + 88);
  v146[0] = *(_OWORD *)(v0 + 72);
  v146[1] = v97;
  v146[2] = *(_OWORD *)(v0 + 104);
  uint64_t v147 = v96;
  uint64_t v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3748);
  id v99 = sub_251E678D4((uint64_t)v95, v98, v94);
  sub_251A1A4EC((uint64_t)v138, (uint64_t)v125);
  uint64_t v100 = swift_task_alloc();
  v141(v100, v89, v144);
  uint64_t v101 = swift_allocObject();
  sub_251A1A444(v125, v101 + 16);
  v134(v101 + v137, v100, v144);
  *(void *)(v0 + 176) = sub_251DB0928;
  *(void *)(v0 + 184) = v101;
  *(void *)(v0 + 144) = MEMORY[0x263EF8330];
  *(void *)(v0 + 152) = 1107296256;
  *(void *)(v0 + 160) = sub_251DA2200;
  *(void *)(v0 + 168) = &block_descriptor_117;
  long long v102 = _Block_copy((const void *)(v0 + 144));
  swift_release();
  swift_task_dealloc();
  id aBlock = objc_msgSend(v99, sel_addSuccessBlock_, v102);
  _Block_release(v102);

  sub_251A1A4EC((uint64_t)v138, (uint64_t)v128);
  uint64_t v103 = swift_task_alloc();
  v141(v103, v89, v144);
  sub_251DB0520(typea, v121, (uint64_t (*)(void))type metadata accessor for StaticTimer);
  unint64_t v104 = (v132 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v105 = (v104 + v92 + 8) & ~v92;
  uint64_t v106 = swift_allocObject();
  sub_251A1A444(v128, v106 + 16);
  v134(v106 + v137, v103, v144);
  *(void *)(v106 + v104) = v123;
  sub_251DB04B4(v121, v106 + v105, (uint64_t (*)(void))type metadata accessor for StaticTimer);
  *(void *)(v106 + ((v122 + v105 + 7) & 0xFFFFFFFFFFFFFFF8)) = v124;
  *(void *)(v0 + 224) = sub_251DB0BAC;
  *(void *)(v0 + 232) = v106;
  *(void *)(v0 + 192) = MEMORY[0x263EF8330];
  *(void *)(v0 + 200) = 1107296256;
  *(void *)(v0 + 208) = sub_251DA3904;
  *(void *)(v0 + 216) = &block_descriptor_123;
  uint64_t v107 = _Block_copy((const void *)(v0 + 192));
  id v108 = v123;
  swift_release();
  swift_task_dealloc();
  id v109 = objc_msgSend(aBlock, sel_addFailureBlock_, v107);
  _Block_release(v107);

  if (qword_269B9C2B0 != -1) {
    swift_once();
  }
  uint64_t v110 = *(void *)(v0 + 712);
  uint64_t v111 = *(void *)(v0 + 608);
  uint64_t v112 = *(int *)(v126 + 48);
  v141(v111, *(void *)(v0 + 576), v144);
  uint64_t v113 = swift_allocObject();
  *(_OWORD *)(v113 + 16) = xmmword_251F38650;
  sub_251DB0520(v110, v113 + ((v92 + 32) & ~v92), (uint64_t (*)(void))type metadata accessor for StaticTimer);
  *(void *)(v111 + v112) = v113;
  swift_storeEnumTagMultiPayload();
  uint64_t v114 = (void *)swift_task_alloc();
  *(void *)(v0 + 752) = v114;
  *uint64_t v114 = v0;
  v114[1] = sub_251DAF21C;
  uint64_t v115 = *(void *)(v0 + 608);
  return sub_251D39E48(v0 + 536, v115, 0);
}

uint64_t sub_251DAF21C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 608);
  swift_task_dealloc();
  sub_251DB05DC(v2, (uint64_t (*)(void))type metadata accessor for CoordinationSnapshot.UpdateType);
  uint64_t v3 = *(void *)(v1 + 744);
  uint64_t v4 = *(void *)(v1 + 736);
  return MEMORY[0x270FA2498](sub_251DAF374, v4, v3);
}

uint64_t sub_251DAF374()
{
  uint64_t v1 = v0[89];
  uint64_t v2 = (void *)v0[70];
  swift_release();
  sub_251A1A774((uint64_t)(v0 + 2));
  sub_251DB05DC(v1, (uint64_t (*)(void))type metadata accessor for StaticTimer);
  *uint64_t v2 = v0[67];
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 35));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_251DAF478(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v77 = a5;
  id v68 = a4;
  uint64_t updated = type metadata accessor for CoordinationSnapshot.UpdateType();
  MEMORY[0x270FA5388](updated);
  uint64_t v74 = &v61[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EAE0);
  uint64_t v73 = *(void *)(v75 - 8);
  MEMORY[0x270FA5388](v75);
  uint64_t v72 = &v61[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA1010);
  uint64_t v70 = *(void *)(v71 - 8);
  MEMORY[0x270FA5388](v71);
  unint64_t v69 = &v61[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v67 = &v61[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_269B9C2C0 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_251F350A0();
  __swift_project_value_buffer(v13, (uint64_t)qword_269B9DEE0);
  sub_251A1A4EC(a2, (uint64_t)v84);
  uint64_t v14 = sub_251F34DA0();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v66 = v16;
  uint64_t v17 = &v61[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v80 = v15;
  uint64_t v19 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v15 + 16);
  uint64_t v18 = v15 + 16;
  uint64_t v79 = v19;
  v19(v17, a3, v14);
  id v20 = a1;
  id v21 = a1;
  os_log_type_t v22 = sub_251F35080();
  os_log_type_t v23 = sub_251F35FB0();
  int v24 = v23;
  BOOL v25 = os_log_type_enabled(v22, v23);
  uint64_t v81 = v14;
  uint64_t v78 = a3;
  if (v25)
  {
    uint64_t v26 = swift_slowAlloc();
    uint64_t v63 = swift_slowAlloc();
    uint64_t v83 = v63;
    *(_DWORD *)uint64_t v26 = 136315650;
    *(void *)&long long v65 = v61;
    uint64_t v27 = v85;
    uint64_t v28 = v86;
    __swift_project_boxed_opaque_existential_1(v84, v85);
    unint64_t v29 = *(uint64_t (**)(uint64_t, uint64_t))(v28 + 72);
    int v62 = v24;
    uint64_t v30 = v29(v27, v28);
    uint64_t v82 = sub_251A00E84(v30, v31, &v83);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v84);
    *(_WORD *)(v26 + 12) = 2080;
    sub_251AF752C();
    uint64_t v32 = sub_251F36AB0();
    uint64_t v82 = sub_251A00E84(v32, v33, &v83);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v80 + 8))(v17, v81);
    *(_WORD *)(v26 + 22) = 2080;
    uint64_t v14 = v81;
    swift_getErrorValue();
    uint64_t v34 = sub_251F36BF0();
    uint64_t v82 = sub_251A00E84(v34, v35, &v83);
    a3 = v78;
    sub_251F361D0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2519F3000, v22, (os_log_type_t)v62, "failed to delete timer %s for parent %s due to %s", (uint8_t *)v26, 0x20u);
    uint64_t v36 = v63;
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v36, -1, -1);
    MEMORY[0x2533AC760](v26, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v84);
    (*(void (**)(unsigned char *, uint64_t))(v80 + 8))(v17, v14);
  }
  uint64_t v64 = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CEC0);
  uint64_t v37 = swift_allocObject();
  long long v65 = xmmword_251F38650;
  *(_OWORD *)(v37 + 16) = xmmword_251F38650;
  sub_251A1A4EC(a2, v37 + 32);
  uint64_t v38 = sub_251F35CD0();
  uint64_t v39 = (uint64_t)v67;
  uint64_t v40 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v67, 1, 1, v38);
  uint64_t v41 = v66;
  MEMORY[0x270FA5388](v40);
  v79(&v61[-((v41 + 15) & 0xFFFFFFFFFFFFFFF0)], a3, v14);
  sub_251F35C80();
  swift_bridgeObjectRetain();
  id v42 = v68;
  uint64_t v43 = sub_251F35C70();
  uint64_t v44 = v80;
  unint64_t v45 = (*(unsigned __int8 *)(v80 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80);
  uint64_t v46 = swift_allocObject();
  uint64_t v47 = MEMORY[0x263F8F500];
  *(void *)(v46 + 16) = v43;
  *(void *)(v46 + 24) = v47;
  *(unsigned char *)(v46 + 32) = 0;
  *(void *)(v46 + 40) = v37;
  *(void *)(v46 + 48) = v42;
  unint64_t v48 = v46 + v45;
  uint64_t v49 = v81;
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v44 + 32))(v48, &v61[-((v41 + 15) & 0xFFFFFFFFFFFFFFF0)], v81);
  sub_251ACBB48(v39, (uint64_t)&unk_269BA3770, v46);
  swift_bridgeObjectRelease();
  swift_release();
  if (qword_26B21E180 != -1) {
    swift_once();
  }
  uint64_t v50 = v75;
  uint64_t v51 = __swift_project_value_buffer(v75, (uint64_t)qword_26B21E350);
  uint64_t v53 = v72;
  uint64_t v52 = v73;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v73 + 16))(v72, v51, v50);
  uint64_t v54 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269BA10F8) + 48);
  uint64_t v55 = v74;
  v79(v74, v78, v49);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF28);
  uint64_t v56 = *(void *)(type metadata accessor for StaticTimer() - 8);
  unint64_t v57 = (*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
  uint64_t v58 = swift_allocObject();
  *(_OWORD *)(v58 + 16) = v65;
  sub_251DB0520(v77, v58 + v57, (uint64_t (*)(void))type metadata accessor for StaticTimer);
  *(void *)&v55[v54] = v58;
  swift_storeEnumTagMultiPayload();
  uint64_t v59 = v69;
  sub_251F35CF0();
  (*(void (**)(unsigned char *, uint64_t))(v52 + 8))(v53, v50);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v70 + 8))(v59, v71);
}

void sub_251DAFD44(uint64_t a1)
{
  sub_251DA10F8(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_251DAFD58(uint64_t a1)
{
  return sub_251DB0948(a1, (uint64_t)"successfully added alarm %s for parent %s", (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t))sub_251DA4DE4);
}

uint64_t sub_251DAFD7C(uint64_t a1)
{
  return sub_251DB0BD8(a1, (uint64_t (*)(void))type metadata accessor for StaticAlarm, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t))sub_251DA3020);
}

uint64_t sub_251DAFDB0(uint64_t a1)
{
  return sub_251DB0948(a1, (uint64_t)"successfully deleted alarm %s for parent %s", (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t))sub_251DA4DE4);
}

uint64_t objectdestroy_12Tm()
{
  uint64_t v1 = sub_251F34DA0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = (int *)(type metadata accessor for StaticAlarm() - 8);
  uint64_t v7 = *(unsigned __int8 *)(*(void *)v6 + 80);
  uint64_t v8 = (v5 + v7 + 8) & ~v7;
  uint64_t v9 = v3 | v7 | 7;
  unint64_t v10 = ((*(void *)(*(void *)v6 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  uint64_t v11 = v0 + v4;
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v12(v11, v1);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12(v0 + v8 + v6[11], v1);
  v12(v0 + v8 + v6[12], v1);
  return MEMORY[0x270FA0238](v0, v10, v9);
}

uint64_t sub_251DAFF74(uint64_t a1)
{
  return sub_251DB0BD8(a1, (uint64_t (*)(void))type metadata accessor for StaticAlarm, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t))sub_251DA50E0);
}

uint64_t sub_251DAFFA0()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_251DAFFDC()
{
  uint64_t v1 = sub_251F34DA0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

void sub_251DB00A8(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_251F34DA0() - 8);
  uint64_t v4 = *(void **)(v1 + 16);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  sub_251DA707C(a1, v4, v5);
}

uint64_t sub_251DB011C()
{
  uint64_t v1 = sub_251F34DA0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 47) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  __swift_destroy_boxed_opaque_existential_0(v0 + v6);

  return MEMORY[0x270FA0238](v0, ((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v5);
}

uint64_t sub_251DB021C(void *a1)
{
  uint64_t v3 = *(void *)(sub_251F34DA0() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = *(void **)(v1 + 16);
  unint64_t v7 = *(void **)(v1 + ((v5 + 47) & 0xFFFFFFFFFFFFFFF8));
  return sub_251DA7450(a1, v6, v1 + v4, (uint64_t *)(v1 + v5), v7);
}

uint64_t sub_251DB02DC(uint64_t a1)
{
  return sub_251DB0948(a1, (uint64_t)"successfully updated alarm %s for parent %s", (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t))sub_251DA4DE4);
}

uint64_t sub_251DB02FC()
{
  uint64_t v1 = sub_251F34DA0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 47) & 0xFFFFFFFFFFFFFFF8;
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  __swift_destroy_boxed_opaque_existential_0(v0 + v6);

  return MEMORY[0x270FA0238](v0, ((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v5);
}

uint64_t sub_251DB03FC(void *a1)
{
  uint64_t v3 = *(void *)(sub_251F34DA0() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = *(void **)(v1 + ((v5 + 47) & 0xFFFFFFFFFFFFFFF8));
  return sub_251DA90F4(a1, v1 + 16, v1 + v4, (uint64_t *)(v1 + v5), v6);
}

uint64_t sub_251DB04B4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_251DB0520(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_251DB058C(uint64_t a1)
{
  return sub_251DB0948(a1, (uint64_t)"successfully added timer %s for parent %s", (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t))sub_251DACE28);
}

uint64_t sub_251DB05B0(uint64_t a1)
{
  return sub_251DB0BD8(a1, (uint64_t (*)(void))type metadata accessor for StaticTimer, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t))sub_251DAAC7C);
}

uint64_t sub_251DB05DC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_251DB0644(uint64_t a1)
{
  return sub_251DB0948(a1, (uint64_t)"successfully updated timer %s for parent %s", (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t))sub_251DACE28);
}

uint64_t sub_251DB0664()
{
  uint64_t v1 = sub_251F34DA0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = v3 | 7;
  uint64_t v6 = *(void *)(v2 + 64) + 7;
  unint64_t v7 = (v6 + v4) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 47) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = (v3 + v8 + 8) & ~v3;
  unint64_t v10 = ((v6 + v9) & 0xFFFFFFFFFFFFFFF8) + 8;
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  uint64_t v11 = v0 + v4;
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v12(v11, v1);
  __swift_destroy_boxed_opaque_existential_0(v0 + v7);

  v12(v0 + v9, v1);
  return MEMORY[0x270FA0238](v0, v10, v5);
}

uint64_t sub_251DB078C(void *a1)
{
  uint64_t v3 = *(void *)(sub_251F34DA0() - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 56) & ~v4;
  unint64_t v6 = (*(void *)(v3 + 64) + 7 + v5) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 47) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = *(void **)(v1 + v7);
  return sub_251DAD124(a1, v1 + 16, v1 + v5, (uint64_t *)(v1 + v6), v8, v1 + ((v4 + v7 + 8) & ~v4));
}

uint64_t objectdestroy_8Tm()
{
  uint64_t v1 = sub_251F34DA0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_251DB0928(uint64_t a1)
{
  return sub_251DB0948(a1, (uint64_t)"successfully deleted timer %s for parent %s", (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t))sub_251DACE28);
}

uint64_t sub_251DB0948(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, uint64_t))
{
  uint64_t v7 = *(void *)(sub_251F34DA0() - 8);
  return a3(a1, v3 + 16, v3 + ((*(unsigned __int8 *)(v7 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)), a2);
}

uint64_t objectdestroy_84Tm()
{
  uint64_t v1 = sub_251F34DA0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = (int *)(type metadata accessor for StaticTimer() - 8);
  uint64_t v7 = *(unsigned __int8 *)(*(void *)v6 + 80);
  uint64_t v8 = (v5 + v7 + 8) & ~v7;
  uint64_t v9 = v3 | v7 | 7;
  unint64_t v10 = ((*(void *)(*(void *)v6 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v11(v0 + v4, v1);

  uint64_t v12 = v0 + v8 + v6[7];
  uint64_t v13 = sub_251F34D20();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  swift_bridgeObjectRelease();
  v11(v0 + v8 + v6[12], v1);
  v11(v0 + v8 + v6[13], v1);
  return MEMORY[0x270FA0238](v0, v10, v9);
}

uint64_t sub_251DB0BAC(uint64_t a1)
{
  return sub_251DB0BD8(a1, (uint64_t (*)(void))type metadata accessor for StaticTimer, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t))sub_251DAF478);
}

uint64_t sub_251DB0BD8(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(uint64_t, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t))
{
  uint64_t v6 = *(void *)(sub_251F34DA0() - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v8 = (*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)(a2(0) - 8);
  unint64_t v10 = (v8 + *(unsigned __int8 *)(v9 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = *(void *)(v3 + v8);
  uint64_t v12 = *(void *)(v3 + ((*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8));
  return a3(a1, v3 + 16, v3 + v7, v11, v3 + v10, v12);
}

uint64_t sub_251DB0D10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F240);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_251DB0D94()
{
  uint64_t v1 = sub_251F34DA0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA37A8);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v5 + v8) & ~v8;
  uint64_t v10 = v3 | v8 | 7;
  unint64_t v11 = (*(void *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  swift_release();
  return MEMORY[0x270FA0238](v0, ((v11 + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v10);
}

uint64_t sub_251DB0F0C(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_251F34DA0() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = v4 + *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269BA37A8) - 8);
  unint64_t v7 = (v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v8 = (*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void **)(v1 + 16);
  uint64_t v10 = *(void *)(v1 + v8);
  uint64_t v11 = *(void *)(v1 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8));
  return sub_251DA13DC(a1, v9, v1 + v4, v1 + v7, v10, v11);
}

uint64_t sub_251DB1020()
{
  uint64_t v1 = sub_251F34DA0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_251DB1110(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_251F34DA0() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = *(void *)(v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_251AB3DD4;
  return sub_251DA1BAC(a1, v6, v7, v8, v9);
}

uint64_t StaticService.service.getter()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_251DB12D4, 0, 0);
}

uint64_t sub_251DB12D4()
{
  *(void *)(v0 + 24) = sub_251F35C80();
  *(void *)(v0 + 32) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251DB136C, v2, v1);
}

uint64_t sub_251DB136C()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251DB1404, 0, 0);
}

uint64_t sub_251DB1404()
{
  *(void *)(v0 + 40) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251DB1490, v2, v1);
}

uint64_t sub_251DB1490()
{
  swift_release();
  *(void *)(v0 + 48) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251DB1504, 0, 0);
}

uint64_t sub_251DB1504()
{
  *(void *)(v0 + 56) = sub_251F34D50();
  *(void *)(v0 + 64) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251DB1598, v2, v1);
}

uint64_t sub_251DB1598()
{
  uint64_t v1 = (void *)v0[7];
  uint64_t v2 = (void *)v0[6];
  swift_release();
  id v3 = objc_msgSend(v2, sel_serviceFor_, v1);

  uint64_t v4 = (uint64_t (*)(id))v0[1];
  return v4(v3);
}

BOOL StaticService.canBeToggled.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F108);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = &v28[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for StaticService();
  uint64_t v6 = *(unsigned __int8 *)(v0 + *(int *)(v5 + 88));
  if (v6 - 3) < 0x2E && ((0x32C892266001uLL >> (v6 - 3))) {
    return 1;
  }
  if (qword_269B9C310 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v7 = off_269B9F948;
  swift_bridgeObjectRetain();
  char v8 = sub_251DB3E04(v6, (uint64_t)v7, (uint64_t (*)(void))ServiceKind.rawValue.getter);
  swift_bridgeObjectRelease();
  if (v8) {
    return 1;
  }
  v28[7] = v6;
  if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v10 == 0x8000000251F64EF0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v11 = sub_251F36B10();
    swift_bridgeObjectRelease();
    BOOL result = 0;
    if ((v11 & 1) == 0) {
      return result;
    }
  }
  uint64_t v12 = *(void *)(v1 + *(int *)(v5 + 112));
  if (!*(void *)(v12 + 16))
  {
    uint64_t v19 = type metadata accessor for StaticCharacteristic();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v4, 1, 1, v19);
LABEL_17:
    sub_251A1B064((uint64_t)v4, &qword_26B21F108);
    return 0;
  }
  swift_bridgeObjectRetain();
  unint64_t v13 = sub_2519FE568(160);
  if (v14)
  {
    unint64_t v15 = v13;
    uint64_t v16 = *(void *)(v12 + 56);
    uint64_t v17 = type metadata accessor for StaticCharacteristic();
    uint64_t v18 = *(void *)(v17 - 8);
    sub_251DD1000(v16 + *(void *)(v18 + 72) * v15, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v18 + 56))(v4, 0, 1, v17);
  }
  else
  {
    uint64_t v17 = type metadata accessor for StaticCharacteristic();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v4, 1, 1, v17);
  }
  swift_bridgeObjectRelease();
  type metadata accessor for StaticCharacteristic();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v4, 1, v17) == 1) {
    goto LABEL_17;
  }
  id v20 = (uint64_t *)&v4[*(int *)(v17 + 44)];
  uint64_t v21 = *v20;
  uint64_t v22 = v20[1];
  uint64_t v23 = v20[2];
  unint64_t v24 = v20[3];
  uint64_t v25 = v20[4];
  sub_251A11E3C(*v20, v22, v23, v24);
  sub_251DD0FA0((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
  if (v24 >> 8 == 0xFFFFFFFF) {
    return 0;
  }
  if (v24 >> 62)
  {
    sub_251A11E60(v21, v22, v23, v24);
    return 0;
  }
  if (!v25)
  {
    if (v23 <= 1) {
      uint64_t v26 = 1;
    }
    else {
      uint64_t v26 = v23;
    }
    uint64_t v25 = sub_251A1815C(v22, v21, v26);
  }
  uint64_t v27 = *(void *)(v25 + 16);
  swift_bridgeObjectRelease();
  return v27 == 2;
}

void StaticService.togglingCharacteristicKind.getter(unsigned char *a1@<X8>)
{
}

Swift::Bool_optional __swiftcall StaticService.BOOL(for:)(HomeDataModel::CharacteristicKind a1)
{
  unsigned __int8 v2 = *(unsigned char *)a1;
  uint64_t v5 = *(void *)(v1 + *(int *)(type metadata accessor for StaticService() + 112));
  unsigned __int8 v4 = v2;
  return (Swift::Bool_optional)sub_251B457DC(&v4);
}

Swift::Int StaticService.targetDoorState.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  char v2 = -107;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.value = 0;
  }
  return v4.value;
}

uint64_t sub_251DB1B1C(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x676E696D6F636E69;
    }
    else {
      uint64_t v3 = 0x7463657269646962;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE800000000000000;
    }
    else {
      unint64_t v4 = 0xED00006C616E6F69;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x676E696D6F636E69;
      }
      else {
        uint64_t v6 = 0x7463657269646962;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE800000000000000;
      }
      else {
        unint64_t v7 = 0xED00006C616E6F69;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE500000000000000;
    uint64_t v3 = 0x646574756DLL;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE500000000000000;
  if (v3 != 0x646574756DLL)
  {
LABEL_21:
    char v8 = sub_251F36B10();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_251DB1C48(char a1, char a2)
{
  if (qword_251F54DD8[a1] == qword_251F54DD8[a2]) {
    char v2 = 1;
  }
  else {
    char v2 = sub_251F36B10();
  }
  swift_bridgeObjectRelease_n();
  return v2 & 1;
}

uint64_t sub_251DB1CB0(uint64_t a1, uint64_t a2)
{
  return sub_251DB3390(a1, a2, (uint64_t (*)(void))CharacteristicKind.rawValue.getter);
}

uint64_t sub_251DB1CC8(char a1, char a2)
{
  unint64_t v2 = 0x8000000251F64710;
  switch(a1)
  {
    case 1:
      uint64_t v3 = "B92ACEEE-DFF5-4773-A058-C5E64BC487B2";
      goto LABEL_9;
    case 2:
      uint64_t v3 = "563F7D20-6AFC-44CE-986D-63B28F62C9E3";
      goto LABEL_9;
    case 3:
      uint64_t v3 = "7A5BD1AB-6478-4560-AD68-D91053B75F44";
      goto LABEL_9;
    case 4:
      uint64_t v3 = "430C9F25-44E0-4F7E-BE63-1D00B1500545";
      goto LABEL_9;
    case 5:
      uint64_t v3 = "63489665-5E39-4C17-A590-755E1AAC02AE";
      goto LABEL_9;
    case 6:
      uint64_t v3 = "3E68745D-F0E1-4B73-8FBD-0E8978A33403";
      goto LABEL_9;
    case 7:
      uint64_t v3 = "7FADD792-61A4-4340-A849-215882E2F008";
LABEL_9:
      unint64_t v2 = (unint64_t)(v3 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  unint64_t v4 = 0x8000000251F64710;
  switch(a2)
  {
    case 1:
      int v5 = "B92ACEEE-DFF5-4773-A058-C5E64BC487B2";
      goto LABEL_18;
    case 2:
      int v5 = "563F7D20-6AFC-44CE-986D-63B28F62C9E3";
      goto LABEL_18;
    case 3:
      int v5 = "7A5BD1AB-6478-4560-AD68-D91053B75F44";
      goto LABEL_18;
    case 4:
      int v5 = "430C9F25-44E0-4F7E-BE63-1D00B1500545";
      goto LABEL_18;
    case 5:
      int v5 = "63489665-5E39-4C17-A590-755E1AAC02AE";
      goto LABEL_18;
    case 6:
      int v5 = "3E68745D-F0E1-4B73-8FBD-0E8978A33403";
      goto LABEL_18;
    case 7:
      int v5 = "7FADD792-61A4-4340-A849-215882E2F008";
LABEL_18:
      unint64_t v4 = (unint64_t)(v5 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  if (v2 == v4) {
    char v6 = 1;
  }
  else {
    char v6 = sub_251F36B10();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6 & 1;
}

uint64_t sub_251DB1E84(uint64_t a1, uint64_t a2)
{
  return sub_251DB3390(a1, a2, (uint64_t (*)(void))ServiceKind.rawValue.getter);
}

uint64_t sub_251DB1E9C(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0x646573756170;
  unint64_t v3 = 0xE600000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x646573756170;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE700000000000000;
      unint64_t v5 = 0x676E6979616C70;
      break;
    case 2:
      unint64_t v3 = 0x8000000251F67C60;
      unint64_t v5 = 0xD000000000000014;
      break;
    case 3:
      unint64_t v5 = 0xD000000000000015;
      unint64_t v3 = 0x8000000251F67C80;
      break;
    case 4:
      unint64_t v3 = 0xE400000000000000;
      unint64_t v5 = 1702259052;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE600000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE700000000000000;
      if (v5 == 0x676E6979616C70) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0x8000000251F67C60;
      if (v5 != 0xD000000000000014) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v2 = 0xD000000000000015;
      unint64_t v6 = 0x8000000251F67C80;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0xE400000000000000;
      if (v5 != 1702259052) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_251F36B10();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_251DB2068(uint64_t a1, uint64_t a2)
{
  return sub_251DB3390(a1, a2, (uint64_t (*)(void))HFCAPackageIconIdentifier.rawValue.getter);
}

uint64_t sub_251DB2080(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x7265746C69665F31;
  }
  else {
    uint64_t v3 = 0x746E756F635F30;
  }
  if (v2) {
    unint64_t v4 = 0xE700000000000000;
  }
  else {
    unint64_t v4 = 0xEA00000000006465;
  }
  if (a2) {
    uint64_t v5 = 0x7265746C69665F31;
  }
  else {
    uint64_t v5 = 0x746E756F635F30;
  }
  if (a2) {
    unint64_t v6 = 0xEA00000000006465;
  }
  else {
    unint64_t v6 = 0xE700000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_251F36B10();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_251DB212C(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x73746E756F635F31;
  }
  else {
    uint64_t v3 = 0x4D6F697461725F30;
  }
  if (v2) {
    unint64_t v4 = 0xEE00736369727465;
  }
  else {
    unint64_t v4 = 0xE800000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x73746E756F635F31;
  }
  else {
    uint64_t v5 = 0x4D6F697461725F30;
  }
  if (a2) {
    unint64_t v6 = 0xE800000000000000;
  }
  else {
    unint64_t v6 = 0xEE00736369727465;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_251F36B10();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_251DB21E0(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x737569736C6563;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x737569736C6563;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x65686E6572686166;
      unint64_t v3 = 0xEA00000000007469;
      break;
    case 2:
      uint64_t v5 = 0x61746E6563726570;
      unint64_t v3 = 0xEA00000000006567;
      break;
    case 3:
      uint64_t v5 = 0x6572676564637261;
      unint64_t v3 = 0xEA00000000007365;
      break;
    case 4:
      uint64_t v5 = 0x73646E6F636573;
      break;
    case 5:
      unint64_t v3 = 0xE300000000000000;
      uint64_t v5 = 7894380;
      break;
    case 6:
      unint64_t v3 = 0xE300000000000000;
      uint64_t v5 = 7172208;
      break;
    case 7:
      uint64_t v5 = 0x6172676F7263696DLL;
      unint64_t v3 = 0xEE00335E6D2F736DLL;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xEA00000000007469;
      if (v5 == 0x65686E6572686166) {
        goto LABEL_22;
      }
      goto LABEL_25;
    case 2:
      unint64_t v6 = 0xEA00000000006567;
      if (v5 != 0x61746E6563726570) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 3:
      unint64_t v6 = 0xEA00000000007365;
      if (v5 != 0x6572676564637261) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 4:
      if (v5 != 0x73646E6F636573) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 5:
      unint64_t v6 = 0xE300000000000000;
      if (v5 != 7894380) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 6:
      unint64_t v6 = 0xE300000000000000;
      uint64_t v2 = 7172208;
      goto LABEL_21;
    case 7:
      unint64_t v6 = 0xEE00335E6D2F736DLL;
      if (v5 != 0x6172676F7263696DLL) {
        goto LABEL_25;
      }
      goto LABEL_22;
    default:
LABEL_21:
      if (v5 != v2) {
        goto LABEL_25;
      }
LABEL_22:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_25:
      }
        char v7 = sub_251F36B10();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_251DB2484(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x726F737365636361;
  unint64_t v3 = 0xE900000000000079;
  uint64_t v4 = a1;
  uint64_t v5 = 0x726F737365636361;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x79726F6765746163;
      break;
    case 2:
      uint64_t v5 = 0x72616F6268736164;
      unint64_t v3 = 0xE900000000000064;
      break;
    case 3:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1836019570;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE900000000000079;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE800000000000000;
      if (v5 == 0x79726F6765746163) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v2 = 0x72616F6268736164;
      unint64_t v6 = 0xE900000000000064;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xE400000000000000;
      if (v5 == 1836019570) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_251F36B10();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_251DB2614(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x736172656D6163;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x736172656D6163;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x6C6F72746E6F63;
      break;
    case 2:
      uint64_t v5 = 0x657469726F766166;
      unint64_t v3 = 0xE900000000000073;
      break;
    case 3:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x73656E656373;
      break;
    case 4:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x73676E6974746573;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      if (v5 == 0x6C6F72746E6F63) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0xE900000000000073;
      if (v5 != 0x657469726F766166) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v2 = 0x73656E656373;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0xE800000000000000;
      if (v5 != 0x73676E6974746573) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_251F36B10();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_251DB27D8(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0xD000000000000010;
  }
  else {
    unint64_t v3 = 6449010;
  }
  if (v2) {
    unint64_t v4 = 0xE300000000000000;
  }
  else {
    unint64_t v4 = 0x8000000251F66D90;
  }
  if (a2) {
    unint64_t v5 = 0xD000000000000010;
  }
  else {
    unint64_t v5 = 6449010;
  }
  if (a2) {
    unint64_t v6 = 0x8000000251F66D90;
  }
  else {
    unint64_t v6 = 0xE300000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_251F36B10();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_251DB287C(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 1819242338;
  unint64_t v3 = 0xE400000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 1819242338;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x38746E6975;
      break;
    case 2:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x3631746E6975;
      break;
    case 3:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x3233746E6975;
      break;
    case 4:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x3436746E6975;
      break;
    case 5:
      unint64_t v3 = 0xE300000000000000;
      uint64_t v5 = 7630441;
      break;
    case 6:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x3233746E69;
      break;
    case 7:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x74616F6C66;
      break;
    case 8:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x676E69727473;
      break;
    case 9:
      uint64_t v5 = 947285108;
      break;
    case 10:
      uint64_t v5 = 1635017060;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE400000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE500000000000000;
      if (v5 == 0x38746E6975) {
        goto LABEL_31;
      }
      goto LABEL_34;
    case 2:
      unint64_t v6 = 0xE600000000000000;
      if (v5 != 0x3631746E6975) {
        goto LABEL_34;
      }
      goto LABEL_31;
    case 3:
      unint64_t v6 = 0xE600000000000000;
      if (v5 != 0x3233746E6975) {
        goto LABEL_34;
      }
      goto LABEL_31;
    case 4:
      unint64_t v6 = 0xE600000000000000;
      if (v5 != 0x3436746E6975) {
        goto LABEL_34;
      }
      goto LABEL_31;
    case 5:
      unint64_t v6 = 0xE300000000000000;
      if (v5 != 7630441) {
        goto LABEL_34;
      }
      goto LABEL_31;
    case 6:
      unint64_t v6 = 0xE500000000000000;
      if (v5 != 0x3233746E69) {
        goto LABEL_34;
      }
      goto LABEL_31;
    case 7:
      unint64_t v6 = 0xE500000000000000;
      if (v5 != 0x74616F6C66) {
        goto LABEL_34;
      }
      goto LABEL_31;
    case 8:
      unint64_t v6 = 0xE600000000000000;
      if (v5 != 0x676E69727473) {
        goto LABEL_34;
      }
      goto LABEL_31;
    case 9:
      if (v5 != 947285108) {
        goto LABEL_34;
      }
      goto LABEL_31;
    case 10:
      uint64_t v2 = 1635017060;
      goto LABEL_30;
    default:
LABEL_30:
      if (v5 != v2) {
        goto LABEL_34;
      }
LABEL_31:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_34:
      }
        char v7 = sub_251F36B10();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_251DB2B40(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x737569736C6563;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x737569736C6563;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x65686E6572686166;
      unint64_t v3 = 0xEA00000000007469;
      break;
    case 2:
      uint64_t v5 = 0x61746E6563726570;
      unint64_t v3 = 0xEA00000000006567;
      break;
    case 3:
      uint64_t v5 = 0x6572676564637261;
      unint64_t v3 = 0xEA00000000007365;
      break;
    case 4:
      uint64_t v5 = 0x73646E6F636573;
      break;
    case 5:
      unint64_t v3 = 0xE300000000000000;
      uint64_t v5 = 7894380;
      break;
    case 6:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x7373656C74696E75;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xEA00000000007469;
      if (v5 == 0x65686E6572686166) {
        goto LABEL_19;
      }
      goto LABEL_22;
    case 2:
      unint64_t v6 = 0xEA00000000006567;
      if (v5 != 0x61746E6563726570) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 3:
      unint64_t v6 = 0xEA00000000007365;
      if (v5 != 0x6572676564637261) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 4:
      if (v5 != 0x73646E6F636573) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 5:
      unint64_t v6 = 0xE300000000000000;
      uint64_t v2 = 7894380;
      goto LABEL_18;
    case 6:
      unint64_t v6 = 0xE800000000000000;
      if (v5 != 0x7373656C74696E75) {
        goto LABEL_22;
      }
      goto LABEL_19;
    default:
LABEL_18:
      if (v5 != v2) {
        goto LABEL_22;
      }
LABEL_19:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_22:
      }
        char v7 = sub_251F36B10();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_251DB2D9C(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEB00000000656D61;
  uint64_t v3 = 0x4E79616C70736944;
  uint64_t v4 = a1;
  unint64_t v5 = 0x4E79616C70736944;
  unint64_t v6 = 0xEB00000000656D61;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0xE600000000000000;
      unint64_t v5 = 0x44496D6F6F52;
      break;
    case 2:
      unint64_t v5 = 0x6E6564496E6F6349;
      unint64_t v6 = 0xEE00726569666974;
      break;
    case 3:
      unint64_t v6 = 0xE800000000000000;
      unint64_t v5 = 0x657469726F766146;
      break;
    case 4:
      unint64_t v5 = 0x61446E4F776F6853;
      unint64_t v6 = 0xEF6472616F626873;
      break;
    case 5:
      unint64_t v6 = 0x8000000251F66D10;
      unint64_t v5 = 0xD000000000000017;
      break;
    case 6:
      unint64_t v6 = 0xE800000000000000;
      unint64_t v5 = 0x657A6953656C6954;
      break;
    case 7:
      unint64_t v5 = 0x746169636F737341;
      unint64_t v6 = 0xEE00657079546465;
      break;
    case 8:
      unint64_t v5 = 0x496564756C636E49;
      unint64_t v6 = 0xEF7375746174536ELL;
      break;
    case 9:
      unint64_t v5 = 0x6564644165746144;
      unint64_t v6 = 0xE900000000000064;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE600000000000000;
      if (v5 == 0x44496D6F6F52) {
        goto LABEL_28;
      }
      goto LABEL_31;
    case 2:
      uint64_t v7 = 0x6E6564496E6F6349;
      uint64_t v8 = 0x726569666974;
      goto LABEL_24;
    case 3:
      unint64_t v2 = 0xE800000000000000;
      if (v5 != 0x657469726F766146) {
        goto LABEL_31;
      }
      goto LABEL_28;
    case 4:
      unint64_t v2 = 0xEF6472616F626873;
      if (v5 != 0x61446E4F776F6853) {
        goto LABEL_31;
      }
      goto LABEL_28;
    case 5:
      unint64_t v2 = 0x8000000251F66D10;
      if (v5 != 0xD000000000000017) {
        goto LABEL_31;
      }
      goto LABEL_28;
    case 6:
      unint64_t v2 = 0xE800000000000000;
      if (v5 != 0x657A6953656C6954) {
        goto LABEL_31;
      }
      goto LABEL_28;
    case 7:
      uint64_t v7 = 0x746169636F737341;
      uint64_t v8 = 0x657079546465;
LABEL_24:
      unint64_t v2 = v8 & 0xFFFFFFFFFFFFLL | 0xEE00000000000000;
      if (v5 != v7) {
        goto LABEL_31;
      }
      goto LABEL_28;
    case 8:
      uint64_t v3 = 0x496564756C636E49;
      unint64_t v2 = 0xEF7375746174536ELL;
      goto LABEL_27;
    case 9:
      unint64_t v2 = 0xE900000000000064;
      if (v5 != 0x6564644165746144) {
        goto LABEL_31;
      }
      goto LABEL_28;
    default:
LABEL_27:
      if (v5 != v3) {
        goto LABEL_31;
      }
LABEL_28:
      if (v6 == v2) {
        char v9 = 1;
      }
      else {
LABEL_31:
      }
        char v9 = sub_251F36B10();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v9 & 1;
  }
}

uint64_t sub_251DB3114(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xE900000000000065;
  uint64_t v3 = 0x6C62616C69617661;
  uint64_t v4 = a1;
  unint64_t v5 = 0x6C62616C69617661;
  unint64_t v6 = 0xE900000000000065;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x6863616552746F6ELL;
      unint64_t v6 = 0xEC000000656C6261;
      break;
    case 2:
      unint64_t v6 = 0xE400000000000000;
      unint64_t v5 = 2037609826;
      break;
    case 3:
      unint64_t v5 = 0xD000000000000012;
      unint64_t v6 = 0x8000000251F65DC0;
      break;
    case 4:
      unint64_t v6 = 0x8000000251F65DE0;
      unint64_t v5 = 0xD000000000000011;
      break;
    case 5:
      unint64_t v6 = 0xE700000000000000;
      unint64_t v5 = 0x646C6F436F6F74;
      break;
    case 6:
      unint64_t v6 = 0xE600000000000000;
      unint64_t v5 = 0x746F486F6F74;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xEC000000656C6261;
      if (v5 == 0x6863616552746F6ELL) {
        goto LABEL_19;
      }
      goto LABEL_22;
    case 2:
      unint64_t v2 = 0xE400000000000000;
      if (v5 != 2037609826) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 3:
      unint64_t v2 = 0x8000000251F65DC0;
      if (v5 != 0xD000000000000012) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 4:
      unint64_t v2 = 0x8000000251F65DE0;
      if (v5 != 0xD000000000000011) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 5:
      unint64_t v2 = 0xE700000000000000;
      uint64_t v3 = 0x646C6F436F6F74;
      goto LABEL_18;
    case 6:
      unint64_t v2 = 0xE600000000000000;
      if (v5 != 0x746F486F6F74) {
        goto LABEL_22;
      }
      goto LABEL_19;
    default:
LABEL_18:
      if (v5 != v3) {
        goto LABEL_22;
      }
LABEL_19:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_22:
      }
        char v7 = sub_251F36B10();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_251DB3378(uint64_t a1, uint64_t a2)
{
  return sub_251DB3390(a1, a2, IconSymbol.rawValue.getter);
}

uint64_t sub_251DB3390(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v4 = a3();
  uint64_t v6 = v5;
  if (v4 == a3() && v6 == v7) {
    char v9 = 1;
  }
  else {
    char v9 = sub_251F36B10();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_251DB3434(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD00000000000001ALL;
  unint64_t v3 = 0x8000000251F65CA0;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD00000000000001ALL;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0xD00000000000001CLL;
      uint64_t v6 = "HMActionSetTypeHomeDeparture";
      goto LABEL_8;
    case 2:
      unint64_t v5 = 0xD000000000000015;
      uint64_t v6 = "HMActionSetTypeWakeUp";
      goto LABEL_8;
    case 3:
      unint64_t v5 = 0xD000000000000014;
      uint64_t v6 = "HMActionSetTypeSleep";
      goto LABEL_8;
    case 4:
      uint64_t v6 = "HMActionSetTypeUserDefined";
      goto LABEL_8;
    case 5:
      unint64_t v5 = 0xD00000000000001BLL;
      uint64_t v6 = "HMActionSetTypeTriggerOwned";
      goto LABEL_8;
    case 6:
      unint64_t v5 = 0xD000000000000021;
      uint64_t v6 = "HMActionSetTypeShortcutsComponent";
LABEL_8:
      unint64_t v3 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  unint64_t v7 = 0x8000000251F65CA0;
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xD00000000000001CLL;
      uint64_t v8 = "HMActionSetTypeHomeDeparture";
      goto LABEL_16;
    case 2:
      unint64_t v2 = 0xD000000000000015;
      uint64_t v8 = "HMActionSetTypeWakeUp";
      goto LABEL_16;
    case 3:
      unint64_t v2 = 0xD000000000000014;
      uint64_t v8 = "HMActionSetTypeSleep";
      goto LABEL_16;
    case 4:
      uint64_t v8 = "HMActionSetTypeUserDefined";
      goto LABEL_16;
    case 5:
      unint64_t v2 = 0xD00000000000001BLL;
      uint64_t v8 = "HMActionSetTypeTriggerOwned";
      goto LABEL_16;
    case 6:
      unint64_t v2 = 0xD000000000000021;
      uint64_t v8 = "HMActionSetTypeShortcutsComponent";
LABEL_16:
      unint64_t v7 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  if (v5 == v2 && v3 == v7) {
    char v9 = 1;
  }
  else {
    char v9 = sub_251F36B10();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_251DB3600(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0xD000000000000019;
  }
  else {
    unint64_t v3 = 0xD000000000000018;
  }
  if (v2) {
    unint64_t v4 = 0x8000000251F65250;
  }
  else {
    unint64_t v4 = 0x8000000251F65270;
  }
  if (a2) {
    unint64_t v5 = 0xD000000000000019;
  }
  else {
    unint64_t v5 = 0xD000000000000018;
  }
  if (a2) {
    unint64_t v6 = 0x8000000251F65270;
  }
  else {
    unint64_t v6 = 0x8000000251F65250;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_251F36B10();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_251DB36AC(char a1, char a2)
{
  unint64_t v2 = 0x8000000251F65E40;
  switch(a1)
  {
    case 1:
      unint64_t v3 = "4589F38F-C0C0-4FF6-8E38-5291C7FB7545";
      goto LABEL_6;
    case 2:
      unint64_t v3 = "99D6534F-4293-43AC-A277-EA6D097A190C";
      goto LABEL_6;
    case 3:
      unint64_t v3 = "2234AD59-F757-414C-B87C-C35305FA9FFC";
      goto LABEL_6;
    case 4:
      unint64_t v3 = "44963F26-FA10-46C1-BFDD-A95D726265FD";
LABEL_6:
      unint64_t v2 = (unint64_t)(v3 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  unint64_t v4 = 0x8000000251F65E40;
  switch(a2)
  {
    case 1:
      unint64_t v5 = "4589F38F-C0C0-4FF6-8E38-5291C7FB7545";
      goto LABEL_12;
    case 2:
      unint64_t v5 = "99D6534F-4293-43AC-A277-EA6D097A190C";
      goto LABEL_12;
    case 3:
      unint64_t v5 = "2234AD59-F757-414C-B87C-C35305FA9FFC";
      goto LABEL_12;
    case 4:
      unint64_t v5 = "44963F26-FA10-46C1-BFDD-A95D726265FD";
LABEL_12:
      unint64_t v4 = (unint64_t)(v5 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  if (v2 == v4) {
    char v6 = 1;
  }
  else {
    char v6 = sub_251F36B10();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6 & 1;
}

Swift::Int StaticService.targetLockMechanismState.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  char v2 = -100;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.value = 0;
  }
  return v4.value;
}

Swift::Int StaticService.targetSecuritySystemState.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  char v2 = -96;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.value = 0;
  }
  return v4.value;
}

uint64_t StaticService.staticCharacteristic(for:)@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(v2 + *(int *)(type metadata accessor for StaticService() + 112));
  if (*(void *)(v5 + 16))
  {
    uint64_t v6 = *a1;
    swift_bridgeObjectRetain();
    unint64_t v7 = sub_2519FE568(v6);
    if (v8)
    {
      unint64_t v9 = v7;
      uint64_t v10 = *(void *)(v5 + 56);
      uint64_t v11 = type metadata accessor for StaticCharacteristic();
      uint64_t v12 = *(void *)(v11 - 8);
      sub_251DD1000(v10 + *(void *)(v12 + 72) * v9, a2, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(a2, 0, 1, v11);
    }
    else
    {
      uint64_t v16 = type metadata accessor for StaticCharacteristic();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(a2, 1, 1, v16);
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = type metadata accessor for StaticCharacteristic();
    char v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
    return v14(a2, 1, 1, v13);
  }
}

unint64_t StaticService.targetPosition.getter()
{
  return sub_251DC058C(158);
}

uint64_t StaticService.inUse.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  unsigned __int8 v2 = 65;
  return sub_251B457DC(&v2);
}

uint64_t StaticService.active.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  unsigned __int8 v2 = 3;
  return sub_251B457DC(&v2);
}

BOOL sub_251DB3B04(char a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  sub_251F36CA0();
  int v4 = dword_251F54DF0[a1];
  sub_251F36CE0();
  uint64_t v5 = sub_251F36D00();
  uint64_t v6 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v7 = v5 & ~v6;
  uint64_t v8 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
    return 0;
  }
  uint64_t v9 = *(void *)(a2 + 48);
  if (dword_251F54DF0[*(char *)(v9 + v7)] == v4) {
    return 1;
  }
  uint64_t v11 = ~v6;
  unint64_t v12 = (v7 + 1) & v11;
  if (((*(void *)(v8 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
    return 0;
  }
  do
  {
    int v13 = dword_251F54DF0[*(char *)(v9 + v12)];
    BOOL result = v13 == v4;
    if (v13 == v4) {
      break;
    }
    unint64_t v12 = (v12 + 1) & v11;
  }
  while (((*(void *)(v8 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) != 0);
  return result;
}

uint64_t sub_251DB3C0C(uint64_t a1, uint64_t a2)
{
  return sub_251DB3E04(a1, a2, (uint64_t (*)(void))ServiceKind.rawValue.getter);
}

uint64_t sub_251DB3C24(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)
    && (uint64_t v4 = sub_251F34DA0(),
        sub_251DD0A7C((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA95A8]),
        uint64_t v5 = sub_251F35600(),
        uint64_t v6 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v7 = v5 & ~v6,
        uint64_t v17 = a2 + 56,
        ((*(void *)(a2 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) != 0))
  {
    uint64_t v16 = a1;
    uint64_t v14 = ~v6;
    uint64_t v8 = *(void **)(v4 - 8);
    unint64_t v15 = (void (*)(char *, unint64_t, uint64_t))v8[2];
    uint64_t v9 = v8[8];
    uint64_t v10 = v8[9];
    uint64_t v11 = (uint64_t (**)(char *, uint64_t))(v8 + 1);
    do
    {
      MEMORY[0x270FA5388](v5);
      v15((char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), *(void *)(a2 + 48) + v10 * v7, v4);
      sub_251DD0A7C((unint64_t *)&qword_26B21F2B8, MEMORY[0x270FA95A8]);
      char v12 = sub_251F35650();
      uint64_t v5 = (*v11)((char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
      if (v12) {
        break;
      }
      unint64_t v7 = (v7 + 1) & v14;
    }
    while (((*(void *)(v17 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
  }
  else
  {
    char v12 = 0;
  }
  return v12 & 1;
}

uint64_t sub_251DB3DEC(uint64_t a1, uint64_t a2)
{
  return sub_251DB3E04(a1, a2, (uint64_t (*)(void))CharacteristicKind.rawValue.getter);
}

uint64_t sub_251DB3E04(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  if (*(void *)(a2 + 16)
    && (uint64_t v5 = sub_251F36CA0(),
        ((void (*)(uint64_t))a3)(v5),
        sub_251F357B0(),
        swift_bridgeObjectRelease(),
        uint64_t v6 = sub_251F36D00(),
        uint64_t v7 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v8 = v6 & ~v7,
        ((*(void *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) != 0))
  {
    uint64_t v9 = ~v7;
    while (1)
    {
      uint64_t v10 = a3();
      uint64_t v12 = v11;
      if (v10 == a3() && v12 == v13) {
        break;
      }
      char v15 = sub_251F36B10();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v15 & 1) == 0)
      {
        unint64_t v8 = (v8 + 1) & v9;
        if ((*(void *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8)) {
          continue;
        }
      }
      return v15 & 1;
    }
    swift_bridgeObjectRelease_n();
    char v15 = 1;
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_251DB3F78(char a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)
    && (uint64_t v4 = sub_251EAE504(),
        uint64_t v5 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v6 = v4 & ~v5,
        ((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0))
  {
    uint64_t v7 = ~v5;
    while (1)
    {
      unint64_t v8 = 0x8000000251F64710;
      switch(*(unsigned char *)(*(void *)(a2 + 48) + v6))
      {
        case 1:
          uint64_t v9 = "13-AA62-01754F256DD5";
          goto LABEL_12;
        case 2:
          uint64_t v9 = "73-A058-C5E64BC487B2";
          goto LABEL_12;
        case 3:
          uint64_t v9 = "CE-986D-63B28F62C9E3";
          goto LABEL_12;
        case 4:
          uint64_t v9 = "60-AD68-D91053B75F44";
          goto LABEL_12;
        case 5:
          uint64_t v9 = "7E-BE63-1D00B1500545";
          goto LABEL_12;
        case 6:
          uint64_t v9 = "17-A590-755E1AAC02AE";
LABEL_12:
          unint64_t v8 = (unint64_t)v9 | 0x8000000000000000;
          break;
        case 7:
          unint64_t v8 = 0x8000000251F64860;
          break;
        default:
          break;
      }
      unint64_t v10 = 0x8000000251F64710;
      switch(a1)
      {
        case 1:
          uint64_t v11 = "13-AA62-01754F256DD5";
          goto LABEL_21;
        case 2:
          uint64_t v11 = "73-A058-C5E64BC487B2";
          goto LABEL_21;
        case 3:
          uint64_t v11 = "CE-986D-63B28F62C9E3";
          goto LABEL_21;
        case 4:
          uint64_t v11 = "60-AD68-D91053B75F44";
          goto LABEL_21;
        case 5:
          uint64_t v11 = "7E-BE63-1D00B1500545";
          goto LABEL_21;
        case 6:
          uint64_t v11 = "17-A590-755E1AAC02AE";
LABEL_21:
          unint64_t v10 = (unint64_t)v11 | 0x8000000000000000;
          break;
        case 7:
          unint64_t v10 = 0x8000000251F64860;
          break;
        default:
          break;
      }
      if (v8 == v10) {
        break;
      }
      char v12 = sub_251F36B10();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v12 & 1) == 0)
      {
        unint64_t v6 = (v6 + 1) & v7;
        if ((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6)) {
          continue;
        }
      }
      return v12 & 1;
    }
    swift_bridgeObjectRelease_n();
    char v12 = 1;
  }
  else
  {
    char v12 = 0;
  }
  return v12 & 1;
}

uint64_t sub_251DB41F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F0A0);
  MEMORY[0x270FA5388](v4);
  unint64_t v6 = (char *)v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v52 = (void *)((char *)v48 - v10);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v48 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v17 = (char *)v48 - v16;
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v54 = v15;
  uint64_t v51 = v14;
  sub_251F36CA0();
  sub_251DD1000(a1, (uint64_t)v17, type metadata accessor for StaticAccessory.DeviceIdentifier);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v48[0] = v7;
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v19 = sub_251F34DA0();
    uint64_t v20 = *(void *)(v19 - 8);
    MEMORY[0x270FA5388](v19);
    uint64_t v22 = (char *)v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v22, v17, v19);
    sub_251F36CB0();
    sub_251DD0A7C((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA95A8]);
    sub_251F35610();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  }
  else
  {
    sub_251F36CB0();
    sub_251F357B0();
    swift_bridgeObjectRelease();
  }
  uint64_t v23 = sub_251F36D00();
  uint64_t v24 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v25 = v23 & ~v24;
  uint64_t v55 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25) & 1) == 0) {
    return 0;
  }
  uint64_t v53 = ~v24;
  uint64_t v54 = *(void *)(v54 + 72);
  uint64_t v49 = v6;
  uint64_t v50 = v13;
  while (1)
  {
    sub_251DD1000(*(void *)(a2 + 48) + v54 * v25, (uint64_t)v13, type metadata accessor for StaticAccessory.DeviceIdentifier);
    uint64_t v26 = &v6[*(int *)(v4 + 48)];
    sub_251DD1000((uint64_t)v13, (uint64_t)v6, type metadata accessor for StaticAccessory.DeviceIdentifier);
    sub_251DD1000(a1, (uint64_t)v26, type metadata accessor for StaticAccessory.DeviceIdentifier);
    if (swift_getEnumCaseMultiPayload() != 1) {
      break;
    }
    uint64_t v27 = (uint64_t)v6;
    uint64_t v28 = v51;
    sub_251DD1000(v27, v51, type metadata accessor for StaticAccessory.DeviceIdentifier);
    int v29 = swift_getEnumCaseMultiPayload();
    uint64_t v30 = sub_251F34DA0();
    uint64_t v31 = v30;
    uint64_t v32 = *(void *)(v30 - 8);
    if (v29 == 1)
    {
      v48[1] = v48;
      MEMORY[0x270FA5388](v30);
      uint64_t v34 = (char *)v48 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v34, v26, v31);
      char v35 = sub_251F34D70();
      uint64_t v36 = v4;
      uint64_t v37 = a1;
      uint64_t v38 = a2;
      uint64_t v39 = *(void (**)(char *, uint64_t))(v32 + 8);
      v39(v34, v31);
      v39((char *)v28, v31);
      a2 = v38;
      a1 = v37;
      uint64_t v4 = v36;
      unint64_t v6 = v49;
      uint64_t v13 = v50;
      if (v35) {
        goto LABEL_25;
      }
LABEL_20:
      sub_251DD0FA0((uint64_t)v6, type metadata accessor for StaticAccessory.DeviceIdentifier);
      goto LABEL_9;
    }
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v30 - 8) + 8))(v28, v30);
    unint64_t v6 = v49;
    uint64_t v13 = v50;
LABEL_8:
    sub_251A1B064((uint64_t)v6, &qword_26B21F0A0);
LABEL_9:
    sub_251DD0FA0((uint64_t)v13, type metadata accessor for StaticAccessory.DeviceIdentifier);
    unint64_t v25 = (v25 + 1) & v53;
    if (((*(void *)(v55 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25) & 1) == 0) {
      return 0;
    }
  }
  uint64_t v40 = v52;
  sub_251DD1000((uint64_t)v6, (uint64_t)v52, type metadata accessor for StaticAccessory.DeviceIdentifier);
  uint64_t v42 = *v40;
  uint64_t v41 = v40[1];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  uint64_t v43 = *(void *)v26;
  uint64_t v44 = *((void *)v26 + 1);
  if (v42 != v43 || v41 != v44)
  {
    char v46 = sub_251F36B10();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v46) {
      goto LABEL_25;
    }
    goto LABEL_20;
  }
  swift_bridgeObjectRelease_n();
LABEL_25:
  sub_251DD0FA0((uint64_t)v6, type metadata accessor for StaticAccessory.DeviceIdentifier);
  sub_251DD0FA0((uint64_t)v13, type metadata accessor for StaticAccessory.DeviceIdentifier);
  return 1;
}

BOOL sub_251DB4820(char a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  sub_251F36CA0();
  int v4 = dword_251F54E60[a1];
  sub_251F36CE0();
  uint64_t v5 = sub_251F36D00();
  uint64_t v6 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v7 = v5 & ~v6;
  uint64_t v8 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
    return 0;
  }
  uint64_t v9 = *(void *)(a2 + 48);
  if (dword_251F54E60[*(char *)(v9 + v7)] == v4) {
    return 1;
  }
  uint64_t v11 = ~v6;
  unint64_t v12 = (v7 + 1) & v11;
  if (((*(void *)(v8 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
    return 0;
  }
  do
  {
    int v13 = dword_251F54E60[*(char *)(v9 + v12)];
    BOOL result = v13 == v4;
    if (v13 == v4) {
      break;
    }
    unint64_t v12 = (v12 + 1) & v11;
  }
  while (((*(void *)(v8 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) != 0);
  return result;
}

BOOL sub_251DB4928(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v4 = sub_251F36C90();
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = v4 & ~v5;
  uint64_t v7 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(a2 + 48);
  if (*(void *)(v8 + 8 * v6) == a1) {
    return 1;
  }
  uint64_t v10 = ~v5;
  unint64_t v11 = (v6 + 1) & v10;
  if (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    return 0;
  }
  do
  {
    uint64_t v12 = *(void *)(v8 + 8 * v11);
    BOOL result = v12 == a1;
    if (v12 == a1) {
      break;
    }
    unint64_t v11 = (v11 + 1) & v10;
  }
  while (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t sub_251DB49F4(uint64_t a1, uint64_t a2)
{
  uint64_t v48 = _s7MergeIdVMa();
  uint64_t v4 = *(void *)(v48 - 8);
  MEMORY[0x270FA5388](v48);
  unint64_t v6 = (char *)v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = a2;
  if (*(void *)(a2 + 16))
  {
    sub_251F36CA0();
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    uint64_t v8 = *(void *)(*(void *)(v7 - 8) + 64);
    MEMORY[0x270FA5388](v7 - 8);
    uint64_t v58 = a1;
    sub_251A1B128(a1, (uint64_t)v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_26B21FF90);
    uint64_t v9 = sub_251F34DA0();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = v10 + 48;
    uint64_t v56 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
    uint64_t v12 = v56((char *)v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), 1, v9);
    uint64_t v57 = v9;
    uint64_t v44 = v10;
    if (v12 == 1)
    {
      sub_251F36CC0();
    }
    else
    {
      uint64_t v13 = v10;
      MEMORY[0x270FA5388](v12);
      uint64_t v15 = (char *)v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, (char *)v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
      sub_251F36CC0();
      sub_251DD0A7C((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA95A8]);
      sub_251F35610();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v9);
    }
    unint64_t v45 = (void *)(v58 + *(int *)(v48 + 20));
    sub_251F357B0();
    uint64_t v16 = sub_251F36D00();
    uint64_t v17 = -1 << *(unsigned char *)(v59 + 32);
    unint64_t v18 = v16 & ~v17;
    uint64_t v55 = v59 + 56;
    if ((*(void *)(v59 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18))
    {
      uint64_t v50 = ~v17;
      uint64_t v53 = *(void *)(v4 + 72);
      uint64_t v54 = v11;
      v43[1] = v44 + 32;
      uint64_t v47 = (void (**)(char *, uint64_t))(v44 + 8);
      uint64_t v19 = &qword_26B21FF90;
      uint64_t v51 = v8;
      uint64_t v52 = v6;
      do
      {
        uint64_t v20 = sub_251DD1000(*(void *)(v59 + 48) + v53 * v18, (uint64_t)v6, (uint64_t (*)(void))_s7MergeIdVMa);
        uint64_t v61 = v43;
        MEMORY[0x270FA5388](v20);
        unint64_t v21 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
        uint64_t v22 = (char *)v43 - v21;
        sub_251A1B128(v58, (uint64_t)v43 - v21, v19);
        uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E6B8);
        uint64_t v60 = v43;
        uint64_t v24 = MEMORY[0x270FA5388](v23 - 8);
        uint64_t v26 = (char *)v43 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
        uint64_t v27 = (uint64_t)&v26[*(int *)(v24 + 56)];
        sub_251A1B128(v28, (uint64_t)v26, v19);
        sub_251A1B128((uint64_t)v43 - v21, v27, v19);
        uint64_t v30 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v56;
        uint64_t v29 = v57;
        uint64_t v31 = v56(v26, 1, v57);
        if (v31 == 1)
        {
          sub_251A1B064((uint64_t)v43 - v21, v19);
          if (v30(v27, 1, v29) != 1) {
            goto LABEL_14;
          }
          sub_251A1B064((uint64_t)v26, v19);
          unint64_t v6 = v52;
        }
        else
        {
          uint64_t v49 = v43;
          MEMORY[0x270FA5388](v31);
          uint64_t v32 = (char *)v43 - v21;
          sub_251A1B128((uint64_t)v26, (uint64_t)v32, v19);
          uint64_t v33 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v30)(v27, 1, v29);
          if (v33 == 1)
          {
            sub_251A1B064((uint64_t)v22, v19);
            (*v47)(v32, v29);
LABEL_14:
            sub_251A1B064((uint64_t)v26, &qword_26B21E6B8);
            unint64_t v6 = v52;
            goto LABEL_8;
          }
          char v46 = v43;
          uint64_t v34 = v44;
          MEMORY[0x270FA5388](v33);
          uint64_t v36 = v19;
          uint64_t v37 = (char *)v43 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *, uint64_t, uint64_t))(v34 + 32))(v37, v27, v29);
          sub_251DD0A7C((unint64_t *)&qword_26B21F2B8, MEMORY[0x270FA95A8]);
          char v38 = sub_251F35650();
          uint64_t v39 = *(void (**)(char *, uint64_t))(v34 + 8);
          uint64_t v40 = v37;
          uint64_t v19 = v36;
          v39(v40, v29);
          sub_251A1B064((uint64_t)v22, v36);
          v39(v32, v29);
          sub_251A1B064((uint64_t)v26, v36);
          unint64_t v6 = v52;
          if ((v38 & 1) == 0) {
            goto LABEL_8;
          }
        }
        uint64_t v41 = &v6[*(int *)(v48 + 20)];
        if (*(void *)v41 == *v45 && *((void *)v41 + 1) == v45[1] || (sub_251F36B10() & 1) != 0)
        {
          sub_251DD0FA0((uint64_t)v6, (uint64_t (*)(void))_s7MergeIdVMa);
          return 1;
        }
LABEL_8:
        sub_251DD0FA0((uint64_t)v6, (uint64_t (*)(void))_s7MergeIdVMa);
        uint64_t v8 = v51;
        unint64_t v18 = (v18 + 1) & v50;
      }
      while (((*(void *)(v55 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) != 0);
    }
  }
  return 0;
}

uint64_t sub_251DB50F4(uint64_t a1, uint64_t a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = a2;
  sub_251DC73DC(a1, (uint64_t)sub_251B23E84, 0, isUniquelyReferenced_nonNull_native, &v8);
  uint64_t v6 = v8;
  swift_bridgeObjectRelease();
  if (v2) {
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t StaticService.copyReplacing(id:name:isPrimary:isDoubleHigh:isReachable:isCalibrating:isLowBattery:accessoryId:mediaSourceIdentifier:deviceMetadata:removingMediaSourceIdentifier:roomIds:roomName:shouldShowInDashboard:accessoryShowsAsIndividualTiles:isFavorite:contributesToHomeStatus:customIconSymbol:removingCustomIconSymbol:serviceKind:serviceSubKind:parentServiceId:batteryServiceId:linkedStaticServices:associatedServiceKind:removingAssociatedServiceKind:staticCharacteristicsBag:staticProfileBag:softwareUpdate:homeNonResponsiveType:bridgedStaticServices:bridgeAccessoryId:matterEndpointID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, int a5@<W4>, int a6@<W5>, int a7@<W6>, int a8@<W7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, char a12, uint64_t a13, char a14, unsigned char *a15, unsigned char *a16, unsigned char *a17, char a18, char a19, char a20,char a21,unsigned char *a22,uint64_t a23,char a24,unsigned __int8 *a25,unsigned __int8 *a26,uint64_t a27,uint64_t a28,unsigned char *a29,unsigned __int8 *a30,char a31,void *a32,uint64_t *a33,uint64_t a34,unsigned __int8 *a35,unsigned char *a36,uint64_t a37,int a38)
{
  int v299 = a7;
  int v300 = a8;
  int v276 = a6;
  LODWORD(v255) = a5;
  int v278 = a4;
  uint64_t v280 = a3;
  uint64_t v290 = a2;
  v302 = (unsigned char *)a1;
  uint64_t v289 = a9;
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
  uint64_t v39 = MEMORY[0x270FA5388](v38 - 8);
  v288 = &v245[-((v40 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v41 = MEMORY[0x270FA5388](v39);
  v282 = &v245[-v42];
  MEMORY[0x270FA5388](v41);
  v286 = &v245[-v43];
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
  uint64_t v45 = MEMORY[0x270FA5388](v44 - 8);
  v287 = &v245[-((v46 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v47 = MEMORY[0x270FA5388](v45);
  v257 = &v245[-v48];
  MEMORY[0x270FA5388](v47);
  v293 = &v245[-v49];
  uint64_t v294 = type metadata accessor for StaticService();
  uint64_t v50 = MEMORY[0x270FA5388](v294);
  v285 = &v245[-((v51 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v52 = MEMORY[0x270FA5388](v50);
  v252 = &v245[-v53];
  uint64_t v54 = MEMORY[0x270FA5388](v52);
  v283 = &v245[-v55];
  uint64_t v56 = MEMORY[0x270FA5388](v54);
  v281 = &v245[-v57];
  uint64_t v58 = MEMORY[0x270FA5388](v56);
  v279 = &v245[-v59];
  uint64_t v60 = MEMORY[0x270FA5388](v58);
  v277 = &v245[-v61];
  uint64_t v62 = MEMORY[0x270FA5388](v60);
  v273 = &v245[-v63];
  uint64_t v64 = MEMORY[0x270FA5388](v62);
  v270 = &v245[-v65];
  uint64_t v66 = MEMORY[0x270FA5388](v64);
  v269 = &v245[-v67];
  uint64_t v68 = MEMORY[0x270FA5388](v66);
  v266 = &v245[-v69];
  uint64_t v70 = MEMORY[0x270FA5388](v68);
  v254 = &v245[-v71];
  uint64_t v72 = MEMORY[0x270FA5388](v70);
  v264 = &v245[-v73];
  uint64_t v74 = MEMORY[0x270FA5388](v72);
  v291 = &v245[-v75];
  uint64_t v76 = MEMORY[0x270FA5388](v74);
  v253 = &v245[-v77];
  uint64_t v78 = MEMORY[0x270FA5388](v76);
  v260 = &v245[-v79];
  uint64_t v80 = MEMORY[0x270FA5388](v78);
  v259 = &v245[-v81];
  uint64_t v82 = MEMORY[0x270FA5388](v80);
  v258 = &v245[-v83];
  uint64_t v84 = MEMORY[0x270FA5388](v82);
  v267 = &v245[-v85];
  uint64_t v86 = MEMORY[0x270FA5388](v84);
  v261 = &v245[-v87];
  uint64_t v88 = MEMORY[0x270FA5388](v86);
  v262 = &v245[-v89];
  uint64_t v90 = MEMORY[0x270FA5388](v88);
  v256 = &v245[-v91];
  uint64_t v92 = MEMORY[0x270FA5388](v90);
  v265 = &v245[-v93];
  uint64_t v94 = MEMORY[0x270FA5388](v92);
  v248 = &v245[-v95];
  uint64_t v96 = MEMORY[0x270FA5388](v94);
  v263 = &v245[-v97];
  uint64_t v98 = MEMORY[0x270FA5388](v96);
  v275 = &v245[-v99];
  uint64_t v100 = MEMORY[0x270FA5388](v98);
  v274 = &v245[-v101];
  uint64_t v102 = MEMORY[0x270FA5388](v100);
  v272 = &v245[-v103];
  uint64_t v104 = MEMORY[0x270FA5388](v102);
  uint64_t v106 = &v245[-v105];
  uint64_t v107 = MEMORY[0x270FA5388](v104);
  id v109 = &v245[-v108];
  uint64_t v110 = MEMORY[0x270FA5388](v107);
  uint64_t v112 = &v245[-v111];
  MEMORY[0x270FA5388](v110);
  uint64_t v114 = &v245[-v113];
  int v115 = *a25;
  int v297 = *a26;
  LODWORD(v298) = v115;
  int v295 = *a30;
  v268 = (unsigned char *)*a32;
  uint64_t v250 = *a33;
  v249 = (unsigned char *)a33[1];
  int v271 = *a35;
  uint64_t v116 = sub_251F34DA0();
  uint64_t v117 = *(void *)(v116 - 8);
  uint64_t v118 = *(void *)(v117 + 64);
  MEMORY[0x270FA5388](v116);
  uint64_t v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v119 - 8);
  uint64_t v303 = v120;
  uint64_t v121 = &v245[-((v120 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_251A1B128((uint64_t)v302, (uint64_t)v121, &qword_26B21FF90);
  sub_251DD1000(v304, (uint64_t)v114, (uint64_t (*)(void))type metadata accessor for StaticService);
  v301 = *(unsigned char **)(v117 + 48);
  v302 = (unsigned char *)(v117 + 48);
  int v122 = ((uint64_t (*)(unsigned char *, uint64_t, uint64_t))v301)(v121, 1, v116);
  uint64_t v292 = v116;
  uint64_t v296 = v117;
  if (v122 == 1)
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v117 + 16))(&v245[-((v118 + 15) & 0xFFFFFFFFFFFFFFF0)], v114, v116);
    sub_251DD0FA0((uint64_t)v114, (uint64_t (*)(void))type metadata accessor for StaticService);
    sub_251A1B064((uint64_t)v121, &qword_26B21FF90);
  }
  else
  {
    sub_251DD0FA0((uint64_t)v114, (uint64_t (*)(void))type metadata accessor for StaticService);
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v117 + 32))(&v245[-((v118 + 15) & 0xFFFFFFFFFFFFFFF0)], v121, v116);
  }
  int v123 = v278;
  sub_251DD1000(v304, (uint64_t)v112, (uint64_t (*)(void))type metadata accessor for StaticService);
  uint64_t v124 = (int *)v294;
  uint64_t v125 = (uint64_t)v265;
  v284 = &v245[-((v118 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (v280)
  {
    uint64_t v251 = v280;
  }
  else
  {
    uint64_t v126 = (uint64_t *)&v112[*(int *)(v294 + 20)];
    uint64_t v127 = v126[1];
    uint64_t v290 = *v126;
    uint64_t v251 = v127;
    swift_bridgeObjectRetain();
  }
  int v128 = v255;
  swift_bridgeObjectRetain();
  sub_251DD0FA0((uint64_t)v112, (uint64_t (*)(void))type metadata accessor for StaticService);
  uint64_t v129 = v304;
  sub_251DD1000(v304, (uint64_t)v109, (uint64_t (*)(void))type metadata accessor for StaticService);
  if (v123 == 2) {
    int v130 = v109[v124[6]];
  }
  else {
    int v130 = v123 & 1;
  }
  LODWORD(v280) = v130;
  uint64_t v131 = (uint64_t)v274;
  sub_251DD0FA0((uint64_t)v109, (uint64_t (*)(void))type metadata accessor for StaticService);
  sub_251DD1000(v129, (uint64_t)v106, (uint64_t (*)(void))type metadata accessor for StaticService);
  if (v128 == 2) {
    int v132 = v106[v124[7]];
  }
  else {
    int v132 = v128 & 1;
  }
  int v278 = v132;
  int v133 = v276;
  sub_251DD0FA0((uint64_t)v106, (uint64_t (*)(void))type metadata accessor for StaticService);
  uint64_t v134 = v272;
  sub_251DD1000(v129, (uint64_t)v272, (uint64_t (*)(void))type metadata accessor for StaticService);
  if (v300 == 2) {
    int v300 = v134[v124[10]];
  }
  sub_251DD0FA0((uint64_t)v134, (uint64_t (*)(void))type metadata accessor for StaticService);
  sub_251DD1000(v129, v131, (uint64_t (*)(void))type metadata accessor for StaticService);
  if (v133 == 2) {
    int v135 = *(unsigned __int8 *)(v131 + v124[8]);
  }
  else {
    int v135 = v133 & 1;
  }
  int v276 = v135;
  sub_251DD0FA0(v131, (uint64_t (*)(void))type metadata accessor for StaticService);
  uint64_t v136 = (uint64_t)v275;
  sub_251DD1000(v129, (uint64_t)v275, (uint64_t (*)(void))type metadata accessor for StaticService);
  if (v299 == 2) {
    int v299 = *(unsigned __int8 *)(v136 + v124[9]);
  }
  uint64_t v137 = sub_251DD0FA0(v136, (uint64_t (*)(void))type metadata accessor for StaticService);
  v275 = v245;
  uint64_t v138 = MEMORY[0x270FA5388](v137);
  os_log_type_t v139 = &v245[-((v118 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v274 = v245;
  MEMORY[0x270FA5388](v138);
  uint64_t v141 = &v245[-((v140 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_251A1B128(a10, (uint64_t)v141, &qword_26B21FF90);
  uint64_t v142 = v263;
  sub_251DD1000(v129, (uint64_t)v263, (uint64_t (*)(void))type metadata accessor for StaticService);
  uint64_t v143 = v292;
  if (((unsigned int (*)(unsigned char *, uint64_t, uint64_t))v301)(v141, 1, v292) == 1)
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v296 + 16))(v139, &v142[v124[11]], v143);
    sub_251DD0FA0((uint64_t)v142, (uint64_t (*)(void))type metadata accessor for StaticService);
    sub_251A1B064((uint64_t)v141, &qword_26B21FF90);
  }
  else
  {
    sub_251DD0FA0((uint64_t)v142, (uint64_t (*)(void))type metadata accessor for StaticService);
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v296 + 32))(v139, v141, v143);
  }
  uint64_t v144 = (uint64_t)v267;
  if (a14)
  {
    uint64_t v247 = 0;
    int v246 = 1;
    uint64_t v145 = (uint64_t)v257;
  }
  else
  {
    uint64_t v146 = v125;
    uint64_t v147 = v143;
    uint64_t v148 = v248;
    sub_251DD1000(v129, (uint64_t)v248, (uint64_t (*)(void))type metadata accessor for StaticService);
    if (a12)
    {
      uint64_t v149 = &v148[v124[12]];
      uint64_t v247 = *(void *)v149;
      int v246 = v149[8];
    }
    else
    {
      int v246 = 0;
      uint64_t v247 = a11;
    }
    uint64_t v145 = (uint64_t)v257;
    uint64_t v150 = (uint64_t)v148;
    uint64_t v143 = v147;
    uint64_t v125 = v146;
    sub_251DD0FA0(v150, (uint64_t (*)(void))type metadata accessor for StaticService);
  }
  sub_251A1B128(a13, v145, &qword_26B21F110);
  sub_251DD1000(v129, v125, (uint64_t (*)(void))type metadata accessor for StaticService);
  uint64_t v151 = type metadata accessor for StaticDeviceMetadata();
  uint64_t v152 = *(void *)(v151 - 8);
  int v153 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v152 + 48))(v145, 1, v151);
  v272 = v139;
  if (v153 == 1)
  {
    sub_251A1B128(v125 + v124[13], (uint64_t)v293, &qword_26B21F110);
    sub_251DD0FA0(v125, (uint64_t (*)(void))type metadata accessor for StaticService);
    sub_251A1B064(v145, &qword_26B21F110);
  }
  else
  {
    sub_251DD0FA0(v125, (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t v154 = v145;
    v155 = v293;
    sub_251DD0AF0(v154, (uint64_t)v293, (uint64_t (*)(void))type metadata accessor for StaticDeviceMetadata);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v152 + 56))(v155, 0, 1, v151);
  }
  uint64_t v156 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  v267 = v245;
  MEMORY[0x270FA5388](v156 - 8);
  uint64_t v158 = &v245[-((unint64_t)(v157 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v265 = v245;
  uint64_t v159 = v129 + v124[14];
  v257 = v157;
  uint64_t v160 = MEMORY[0x270FA5388](v159);
  uint64_t v162 = &v245[-v161];
  sub_251A1B128(v160, (uint64_t)&v245[-v161], &qword_26B21EC20);
  v163 = v256;
  sub_251DD1000(v129, (uint64_t)v256, (uint64_t (*)(void))type metadata accessor for StaticService);
  uint64_t v164 = sub_251F34D20();
  uint64_t v165 = *(void *)(v164 - 8);
  int v166 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v165 + 48))(v162, 1, v164);
  v263 = v158;
  if (v166 == 1)
  {
    sub_251A1B128((uint64_t)&v163[v124[14]], (uint64_t)v158, &qword_26B21EC20);
    sub_251DD0FA0((uint64_t)v163, (uint64_t (*)(void))type metadata accessor for StaticService);
    sub_251A1B064((uint64_t)v162, &qword_26B21EC20);
  }
  else
  {
    sub_251DD0FA0((uint64_t)v163, (uint64_t (*)(void))type metadata accessor for StaticService);
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v165 + 32))(v158, v162, v164);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v165 + 56))(v158, 0, 1, v164);
  }
  v167 = v264;
  v169 = v262;
  sub_251DD1000(v129, (uint64_t)v262, (uint64_t (*)(void))type metadata accessor for StaticService);
  if (a15)
  {
    v248 = a15;
  }
  else
  {
    v248 = *(unsigned char **)&v169[v124[15]];
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_251DD0FA0((uint64_t)v169, (uint64_t (*)(void))type metadata accessor for StaticService);
  v170 = v261;
  sub_251DD1000(v129, (uint64_t)v261, (uint64_t (*)(void))type metadata accessor for StaticService);
  v171 = a17;
  if (!a17)
  {
    a16 = *(unsigned char **)&v170[v124[16]];
    v171 = (unsigned char *)swift_bridgeObjectRetain();
  }
  v262 = v171;
  swift_bridgeObjectRetain();
  sub_251DD0FA0((uint64_t)v170, (uint64_t (*)(void))type metadata accessor for StaticService);
  sub_251DD1000(v129, v144, (uint64_t (*)(void))type metadata accessor for StaticService);
  v264 = a16;
  if (a18 == 2) {
    int v172 = *(unsigned __int8 *)(v144 + v124[17]);
  }
  else {
    int v172 = a18 & 1;
  }
  LODWORD(v261) = v172;
  uint64_t v173 = (uint64_t)v260;
  sub_251DD0FA0(v144, (uint64_t (*)(void))type metadata accessor for StaticService);
  v174 = v258;
  sub_251DD1000(v129, (uint64_t)v258, (uint64_t (*)(void))type metadata accessor for StaticService);
  uint64_t v175 = v296;
  if (a19 == 2) {
    int v176 = v174[v124[18]];
  }
  else {
    int v176 = a19 & 1;
  }
  LODWORD(v260) = v176;
  sub_251DD0FA0((uint64_t)v174, (uint64_t (*)(void))type metadata accessor for StaticService);
  v177 = v259;
  sub_251DD1000(v129, (uint64_t)v259, (uint64_t (*)(void))type metadata accessor for StaticService);
  if (a20 == 2) {
    int v178 = v177[v124[19]];
  }
  else {
    int v178 = a20 & 1;
  }
  LODWORD(v258) = v178;
  sub_251DD0FA0((uint64_t)v177, (uint64_t (*)(void))type metadata accessor for StaticService);
  sub_251DD1000(v129, v173, (uint64_t (*)(void))type metadata accessor for StaticService);
  uint64_t v179 = v175;
  if (a21 == 2) {
    int v180 = *(unsigned __int8 *)(v173 + v124[20]);
  }
  else {
    int v180 = a21 & 1;
  }
  LODWORD(v259) = v180;
  uint64_t v181 = (uint64_t)v291;
  sub_251DD0FA0(v173, (uint64_t (*)(void))type metadata accessor for StaticService);
  if (a24)
  {
    v256 = 0;
    uint64_t v255 = 0;
  }
  else
  {
    v182 = v253;
    sub_251DD1000(v129, (uint64_t)v253, (uint64_t (*)(void))type metadata accessor for StaticService);
    if (a23)
    {
      v256 = a22;
      uint64_t v255 = a23;
    }
    else
    {
      v183 = &v182[v124[21]];
      uint64_t v184 = *((void *)v183 + 1);
      v256 = *(unsigned char **)v183;
      uint64_t v255 = v184;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRetain();
    sub_251DD0FA0((uint64_t)v182, (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t v181 = (uint64_t)v291;
  }
  sub_251DD1000(v129, v181, (uint64_t (*)(void))type metadata accessor for StaticService);
  if (v298 == 53) {
    LODWORD(v298) = *(unsigned __int8 *)(v181 + v124[22]);
  }
  sub_251DD0FA0(v181, (uint64_t (*)(void))type metadata accessor for StaticService);
  sub_251DD1000(v129, (uint64_t)v167, (uint64_t (*)(void))type metadata accessor for StaticService);
  if (v297 == 5) {
    int v297 = v167[v124[23]];
  }
  uint64_t v185 = sub_251DD0FA0((uint64_t)v167, (uint64_t (*)(void))type metadata accessor for StaticService);
  if (a31)
  {
    int v295 = 53;
  }
  else
  {
    uint64_t v186 = (uint64_t)v254;
    sub_251DD1000(v129, (uint64_t)v254, (uint64_t (*)(void))type metadata accessor for StaticService);
    if (v295 == 53) {
      int v295 = *(unsigned __int8 *)(v186 + v124[24]);
    }
    uint64_t v185 = sub_251DD0FA0(v186, (uint64_t (*)(void))type metadata accessor for StaticService);
  }
  v291 = v245;
  uint64_t v187 = MEMORY[0x270FA5388](v185);
  v189 = &v245[-((v188 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v254 = v245;
  MEMORY[0x270FA5388](v187);
  v191 = &v245[-v190];
  sub_251A1B128(a27, (uint64_t)&v245[-v190], &qword_26B21FF90);
  uint64_t v192 = (uint64_t)v266;
  sub_251DD1000(v129, (uint64_t)v266, (uint64_t (*)(void))type metadata accessor for StaticService);
  if (((unsigned int (*)(unsigned char *, uint64_t, uint64_t))v301)(v191, 1, v143) == 1)
  {
    sub_251A1B128(v192 + v124[25], (uint64_t)v189, &qword_26B21FF90);
    sub_251DD0FA0(v192, (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t v193 = sub_251A1B064((uint64_t)v191, &qword_26B21FF90);
  }
  else
  {
    sub_251DD0FA0(v192, (uint64_t (*)(void))type metadata accessor for StaticService);
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v175 + 32))(v189, v191, v143);
    uint64_t v193 = (*(uint64_t (**)(unsigned char *, void, uint64_t, uint64_t))(v175 + 56))(v189, 0, 1, v143);
  }
  uint64_t v194 = (uint64_t)v286;
  v286 = v245;
  uint64_t v195 = MEMORY[0x270FA5388](v193);
  v197 = &v245[-((v196 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v266 = v245;
  MEMORY[0x270FA5388](v195);
  v199 = &v245[-v198];
  sub_251A1B128(a28, (uint64_t)&v245[-v198], &qword_26B21FF90);
  v200 = v269;
  sub_251DD1000(v129, (uint64_t)v269, (uint64_t (*)(void))type metadata accessor for StaticService);
  if (((unsigned int (*)(unsigned char *, uint64_t, uint64_t))v301)(v199, 1, v143) == 1)
  {
    sub_251A1B128((uint64_t)&v200[v124[26]], (uint64_t)v197, &qword_26B21FF90);
    sub_251DD0FA0((uint64_t)v200, (uint64_t (*)(void))type metadata accessor for StaticService);
    sub_251A1B064((uint64_t)v199, &qword_26B21FF90);
  }
  else
  {
    sub_251DD0FA0((uint64_t)v200, (uint64_t (*)(void))type metadata accessor for StaticService);
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v179 + 32))(v197, v199, v143);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v179 + 56))(v197, 0, 1, v143);
  }
  v201 = v277;
  v202 = v270;
  sub_251DD1000(v129, (uint64_t)v270, (uint64_t (*)(void))type metadata accessor for StaticService);
  uint64_t v203 = (uint64_t)v273;
  if (a29)
  {
    v277 = a29;
  }
  else
  {
    v277 = *(unsigned char **)&v202[v124[27]];
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_251DD0FA0((uint64_t)v202, (uint64_t (*)(void))type metadata accessor for StaticService);
  sub_251DD1000(v129, v203, (uint64_t (*)(void))type metadata accessor for StaticService);
  if (v268)
  {
    v270 = v268;
  }
  else
  {
    v270 = *(unsigned char **)(v203 + v124[28]);
    swift_bridgeObjectRetain();
  }
  uint64_t v204 = (uint64_t)v252;
  uint64_t v205 = v250;
  swift_bridgeObjectRetain();
  sub_251DD0FA0(v203, (uint64_t (*)(void))type metadata accessor for StaticService);
  sub_251DD1000(v129, (uint64_t)v201, (uint64_t (*)(void))type metadata accessor for StaticService);
  if (v205)
  {
    v273 = (unsigned char *)v205;
    v269 = v249;
  }
  else
  {
    v206 = &v201[v124[29]];
    v207 = (unsigned char *)*((void *)v206 + 1);
    v273 = *(unsigned char **)v206;
    swift_bridgeObjectRetain();
    v269 = v207;
    swift_bridgeObjectRetain();
  }
  sub_251DC78EC(v205);
  sub_251DD0FA0((uint64_t)v201, (uint64_t (*)(void))type metadata accessor for StaticService);
  v208 = v282;
  sub_251A1B128(a34, (uint64_t)v282, &qword_26B21F120);
  uint64_t v209 = v129;
  v210 = v279;
  sub_251DD1000(v209, (uint64_t)v279, (uint64_t (*)(void))type metadata accessor for StaticService);
  uint64_t v211 = type metadata accessor for StaticSoftwareUpdate(0);
  uint64_t v212 = *(void *)(v211 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v212 + 48))(v208, 1, v211) == 1)
  {
    sub_251A1B128((uint64_t)&v210[v124[30]], v194, &qword_26B21F120);
    sub_251DD0FA0((uint64_t)v210, (uint64_t (*)(void))type metadata accessor for StaticService);
    sub_251A1B064((uint64_t)v208, &qword_26B21F120);
  }
  else
  {
    sub_251DD0FA0((uint64_t)v210, (uint64_t (*)(void))type metadata accessor for StaticService);
    sub_251DD0AF0((uint64_t)v208, v194, type metadata accessor for StaticSoftwareUpdate);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v212 + 56))(v194, 0, 1, v211);
  }
  uint64_t v213 = (uint64_t)v283;
  v214 = v281;
  sub_251DD1000(v304, (uint64_t)v281, (uint64_t (*)(void))type metadata accessor for StaticService);
  if (v271 == 2) {
    int v215 = v214[v124[31]];
  }
  else {
    int v215 = v271 & 1;
  }
  LODWORD(v282) = v215;
  sub_251DD0FA0((uint64_t)v214, (uint64_t (*)(void))type metadata accessor for StaticService);
  sub_251DD1000(v304, v213, (uint64_t (*)(void))type metadata accessor for StaticService);
  v253 = v189;
  uint64_t v216 = v194;
  if (a36)
  {
    v281 = a36;
  }
  else
  {
    v281 = *(unsigned char **)(v213 + v124[32]);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  uint64_t v217 = sub_251DD0FA0(v213, (uint64_t (*)(void))type metadata accessor for StaticService);
  v283 = v245;
  uint64_t v218 = MEMORY[0x270FA5388](v217);
  v220 = &v245[-((v219 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v218);
  v222 = &v245[-v221];
  sub_251A1B128(a37, (uint64_t)&v245[-v221], &qword_26B21FF90);
  uint64_t v223 = v304;
  sub_251DD1000(v304, v204, (uint64_t (*)(void))type metadata accessor for StaticService);
  uint64_t v224 = v292;
  if (((unsigned int (*)(unsigned char *, uint64_t, uint64_t))v301)(v222, 1, v292) == 1)
  {
    sub_251A1B128(v204 + v124[33], (uint64_t)v220, &qword_26B21FF90);
    sub_251DD0FA0(v204, (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t v223 = v304;
    sub_251A1B064((uint64_t)v222, &qword_26B21FF90);
  }
  else
  {
    sub_251DD0FA0(v204, (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t v225 = v296;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v296 + 32))(v220, v222, v224);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v225 + 56))(v220, 0, 1, v224);
  }
  uint64_t v226 = v223;
  v227 = v285;
  sub_251DD1000(v226, (uint64_t)v285, (uint64_t (*)(void))type metadata accessor for StaticService);
  v228 = v263;
  uint64_t v229 = (uint64_t)v197;
  if ((a38 & 0x10000) != 0)
  {
    v230 = (unsigned __int16 *)&v227[v124[34]];
    LODWORD(v296) = *v230;
    LODWORD(v292) = *((unsigned __int8 *)v230 + 2);
  }
  else
  {
    LODWORD(v292) = 0;
    LODWORD(v296) = a38;
  }
  sub_251DD0FA0((uint64_t)v227, (uint64_t (*)(void))type metadata accessor for StaticService);
  v231 = v287;
  uint64_t v232 = sub_251A4ECF0((uint64_t)v293, (uint64_t)v287, &qword_26B21F110);
  v302 = v245;
  MEMORY[0x270FA5388](v232);
  v234 = &v245[-((v233 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v235 = sub_251A4ECF0((uint64_t)v228, (uint64_t)v234, &qword_26B21EC20);
  v301 = v245;
  char v313 = (char)v298;
  char v312 = v297;
  char v311 = v295;
  uint64_t v236 = v303;
  MEMORY[0x270FA5388](v235);
  v237 = &v245[-((v236 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v238 = sub_251A4ECF0((uint64_t)v253, (uint64_t)v237, &qword_26B21FF90);
  v298 = v245;
  MEMORY[0x270FA5388](v238);
  sub_251A4ECF0(v229, (uint64_t)v237, &qword_26B21FF90);
  *(void *)&long long v309 = v273;
  *((void *)&v309 + 1) = v269;
  v310 = v270;
  v239 = v288;
  uint64_t v240 = sub_251A4ECF0(v216, (uint64_t)v288, &qword_26B21F120);
  char v308 = (char)v282;
  MEMORY[0x270FA5388](v240);
  sub_251A4ECF0((uint64_t)v220, (uint64_t)v237, &qword_26B21FF90);
  uint64_t v241 = v304 + *(int *)(v294 + 140);
  uint64_t v242 = *(void *)v241;
  __int16 v243 = *(_WORD *)(v241 + 8);
  LOBYTE(v241) = *(unsigned char *)(v241 + 10);
  uint64_t v305 = v242;
  __int16 v306 = v243;
  char v307 = v241;
  return sub_251DBAF0C((uint64_t)v284, v290, v251, v280, v278, v276, v299, v300, v289, (uint64_t)v272, v247, v246, (uint64_t)v231, (uint64_t)v234, (uint64_t)v248, (uint64_t)v264, (uint64_t)v262, (char)v261, (char)v260,
           (char)v258,
           (char)v259,
           (uint64_t)v256,
           v255,
           &v313,
           &v312,
           &v311,
           (uint64_t)v237,
           (uint64_t)v237,
           (uint64_t)v277,
           (uint64_t *)&v310,
           &v309,
           (uint64_t)v239,
           &v308,
           (uint64_t)v281,
           (uint64_t)v237,
           v296,
           v292,
           &v305);
}

BOOL StaticService.isActivated.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for StaticService();
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v5 = &v22[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = MEMORY[0x270FA5388](v3);
  uint64_t v8 = &v22[-v7];
  BOOL v9 = 0;
  switch(*(unsigned char *)(v1 + *(int *)(v6 + 88)))
  {
    case 3:
      uint64_t v24 = *(void *)(v1 + *(int *)(v2 + 112));
      unsigned __int8 v23 = 30;
      Swift::Int_optional v26 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v23);
      return !v26.is_nil && v26.value == 2;
    case 0xE:
    case 0x33:
    case 0x34:
      uint64_t v24 = *(void *)(v1 + *(int *)(v2 + 112));
      unsigned __int8 v23 = 40;
      Swift::Int_optional v25 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v23);
      return !v25.is_nil && v25.value > 0;
    case 0x10:
    case 0x1C:
    case 0x22:
    case 0x29:
      uint64_t v24 = *(void *)(v1 + *(int *)(v2 + 112));
      unsigned __int8 v10 = 105;
      goto LABEL_21;
    case 0x11:
    case 0x14:
    case 0x15:
    case 0x2A:
    case 0x2C:
    case 0x30:
      uint64_t v24 = *(void *)(v1 + *(int *)(v2 + 112));
      unsigned __int8 v10 = 3;
      goto LABEL_21;
    case 0x13:
      uint64_t v24 = *(void *)(v1 + *(int *)(v2 + 112));
      unsigned __int8 v14 = 31;
      goto LABEL_26;
    case 0x18:
      uint64_t v24 = *(void *)(v1 + *(int *)(v2 + 112));
      unsigned __int8 v10 = 65;
      goto LABEL_21;
    case 0x1E:
      uint64_t v24 = *(void *)(v1 + *(int *)(v2 + 112));
      unsigned __int8 v14 = 38;
LABEL_26:
      unsigned __int8 v23 = v14;
      Swift::Int_optional v27 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v23);
      return !v27.is_nil && v27.value != 1;
    case 0x1F:
    case 0x26:
      uint64_t v24 = *(void *)(v1 + *(int *)(v2 + 112));
      unsigned __int8 v10 = 84;
LABEL_21:
      unsigned __int8 v23 = v10;
      char v15 = sub_251B457DC(&v23);
      if (v15 == 2) {
        return 0;
      }
      else {
        return v15 & 1;
      }
    case 0x23:
      uint64_t v24 = *(void *)(v1 + *(int *)(v2 + 112));
      unsigned __int8 v23 = 42;
      Swift::Int_optional v28 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v23);
      return !v28.is_nil && v28.value != 3;
    case 0x2E:
      uint64_t v24 = *(void *)(v1 + *(int *)(v2 + 112));
      unsigned __int8 v23 = 34;
      Swift::Int_optional v29 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v23);
      if (v29.is_nil)
      {
        sub_251DD1000(v1, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticService);
      }
      else
      {
        Swift::Int value = v29.value;
        sub_251DD1000(v1, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticService);
        if (value)
        {
          BOOL v9 = 1;
          goto LABEL_47;
        }
      }
      uint64_t v24 = *(void *)&v8[*(int *)(v2 + 112)];
      unsigned __int8 v23 = -104;
      Swift::Int_optional v30 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v23);
      BOOL v9 = !v30.is_nil && v30.value != 0;
LABEL_47:
      sub_251DD0FA0((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticService);
      return v9;
    case 0x2F:
      uint64_t v24 = *(void *)(v1 + *(int *)(v2 + 112));
      unsigned __int8 v23 = 3;
      char v12 = sub_251B457DC(&v23);
      if (v12 == 2)
      {
        sub_251DD1000(v1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticService);
LABEL_42:
        sub_251DD0FA0((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticService);
        return 0;
      }
      char v20 = v12;
      sub_251DD1000(v1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticService);
      if ((v20 & 1) == 0) {
        goto LABEL_42;
      }
      uint64_t v24 = *(void *)&v5[*(int *)(v2 + 112)];
      unsigned __int8 v23 = 65;
      char v21 = sub_251B457DC(&v23);
      sub_251DD0FA0((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticService);
      return v21 & 1;
    default:
      return v9;
  }
}

unint64_t StaticService.brightness.getter()
{
  return sub_251DC058C(12);
}

uint64_t StaticService.rotationSpeed.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  unsigned __int8 v2 = 115;
  return sub_251B46610(&v2);
}

uint64_t StaticService.currentTemperature.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  unsigned __int8 v2 = 44;
  return sub_251B46610(&v2);
}

uint64_t StaticService.currentRelativeHumidity.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  unsigned __int8 v2 = 41;
  return sub_251B46610(&v2);
}

uint64_t type metadata accessor for StaticService()
{
  uint64_t result = qword_26B220400;
  if (!qword_26B220400) {
    return swift_getSingletonMetadata();
  }
  return result;
}

Swift::Int StaticService.targetAirPurifierState.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  char v2 = -109;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.Swift::Int value = 0;
  }
  return v4.value;
}

Swift::Int StaticService.currentAirPurifierState.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  char v2 = 30;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.Swift::Int value = 0;
  }
  return v4.value;
}

Swift::Int StaticService.airQuality.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  char v2 = 8;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.Swift::Int value = 0;
  }
  return v4.value;
}

Swift::Int StaticService.carbonDioxideDetected.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  char v2 = 18;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.Swift::Int value = 0;
  }
  return v4.value;
}

Swift::Int StaticService.contactState.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  char v2 = 28;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.Swift::Int value = 0;
  }
  return v4.value;
}

unint64_t StaticService.currentPosition.getter()
{
  return sub_251DC058C(40);
}

Swift::Int StaticService.positionState.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  char v2 = 102;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.Swift::Int value = 0;
  }
  return v4.value;
}

uint64_t StaticService.powerState.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  unsigned __int8 v2 = 105;
  return sub_251B457DC(&v2);
}

Swift::Int StaticService.currentDoorState.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  char v2 = 31;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.Swift::Int value = 0;
  }
  return v4.value;
}

uint64_t StaticService.obstructionDetected.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  unsigned __int8 v2 = 88;
  return sub_251B457DC(&v2);
}

Swift::Int StaticService.targetHeaterCoolerState.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  char v2 = -105;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.Swift::Int value = 0;
  }
  return v4.value;
}

Swift::Int StaticService.currentHeaterCoolerState.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  char v2 = 33;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.Swift::Int value = 0;
  }
  return v4.value;
}

uint64_t StaticService.heatingThreshold.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  unsigned __int8 v2 = 55;
  return sub_251B46610(&v2);
}

uint64_t StaticService.coolingThreshold.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  unsigned __int8 v2 = 29;
  return sub_251B46610(&v2);
}

Swift::Int StaticService.currentHumidifierDehumidifierState.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  char v2 = 36;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.Swift::Int value = 0;
  }
  return v4.value;
}

uint64_t StaticService.humidifierThreshold.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  unsigned __int8 v2 = 58;
  return sub_251B46610(&v2);
}

uint64_t StaticService.dehumidifierThreshold.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  unsigned __int8 v2 = 48;
  return sub_251B46610(&v2);
}

Swift::Int StaticService.programMode.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  char v2 = 106;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.Swift::Int value = 0;
  }
  return v4.value;
}

Swift::Int StaticService.leakDetected.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  char v2 = 74;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.Swift::Int value = 0;
  }
  return v4.value;
}

uint64_t StaticService.currentLightLevel.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  unsigned __int8 v2 = 37;
  return sub_251B46610(&v2);
}

Swift::Int StaticService.currentLockMechanismState.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  char v2 = 38;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.Swift::Int value = 0;
  }
  return v4.value;
}

uint64_t StaticService.motionDetected.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  unsigned __int8 v2 = 83;
  return sub_251B457DC(&v2);
}

Swift::Int StaticService.occupancyDetected.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  char v2 = 89;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.Swift::Int value = 0;
  }
  return v4.value;
}

Swift::Int StaticService.currentSecuritySystemState.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  char v2 = 42;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.Swift::Int value = 0;
  }
  return v4.value;
}

Swift::Int StaticService.smokeDetected.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  char v2 = 127;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.Swift::Int value = 0;
  }
  return v4.value;
}

Swift::Int_optional __swiftcall StaticService.int(for:)(HomeDataModel::CharacteristicKind a1)
{
  char v2 = *(unsigned char *)a1;
  uint64_t v5 = *(void *)(v1 + *(int *)(type metadata accessor for StaticService() + 112));
  char v4 = v2;
  Swift::Int_optional v3 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v4);
  v3.is_nil &= 1u;
  return v3;
}

Swift::Int StaticService.targetHeatingCoolingMode.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  char v2 = -104;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.Swift::Int value = 0;
  }
  return v4.value;
}

Swift::Int StaticService.currentHeatingCooling.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  char v2 = 34;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.Swift::Int value = 0;
  }
  return v4.value;
}

uint64_t StaticService.targetTemperature.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  unsigned __int8 v2 = -94;
  return sub_251B46610(&v2);
}

uint64_t StaticService.configuredName.getter()
{
  uint64_t v1 = type metadata accessor for StaticCharacteristic();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  Swift::Int_optional v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  if (!*(void *)(v5 + 16)) {
    return 0;
  }
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_2519FE568(27);
  if ((v7 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  sub_251DD1000(*(void *)(v5 + 56) + *(void *)(v2 + 72) * v6, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
  uint64_t v8 = &v4[*(int *)(v1 + 24)];
  if (v8[16] == 8)
  {
    uint64_t v9 = *(void *)v8;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v9 = 0;
  }
  sub_251DD0FA0((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t StaticService.isSensor.getter()
{
  if (qword_26B21F080 != -1) {
    swift_once();
  }
  uint64_t v1 = off_26B21F078;
  uint64_t v2 = type metadata accessor for StaticService();
  return sub_251DB3E04(*(unsigned __int8 *)(v0 + *(int *)(v2 + 88)), (uint64_t)v1, (uint64_t (*)(void))ServiceKind.rawValue.getter) & 1;
}

uint64_t StaticService.displayServiceKind.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for StaticService();
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  char v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v8 = *(unsigned __int8 *)(v2 + *(int *)(v5 + 96));
  sub_251DD1000(v2, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticService);
  if (v8 == 53) {
    LOBYTE(v8) = v7[*(int *)(v4 + 88)];
  }
  uint64_t result = sub_251DD0FA0((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticService);
  *a1 = v8;
  return result;
}

uint64_t StaticService.set(displayName:)(uint64_t a1, uint64_t a2)
{
  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  return MEMORY[0x270FA2498](sub_251DB842C, 0, 0);
}

uint64_t sub_251DB842C()
{
  *(void *)(v0 + 144) = sub_251F35C80();
  *(void *)(v0 + 152) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251DB84C4, v2, v1);
}

uint64_t sub_251DB84C4()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251DB855C, 0, 0);
}

uint64_t sub_251DB855C()
{
  *(void *)(v0 + 160) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251DB85E8, v2, v1);
}

uint64_t sub_251DB85E8()
{
  swift_release();
  *(void *)(v0 + 168) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251DB865C, 0, 0);
}

uint64_t sub_251DB865C()
{
  *(void *)(v0 + 176) = sub_251F34D50();
  *(void *)(v0 + 184) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251DB86F0, v2, v1);
}

uint64_t sub_251DB86F0()
{
  uint64_t v1 = (void *)v0[22];
  uint64_t v2 = (void *)v0[21];
  swift_release();
  v0[24] = objc_msgSend(v2, sel_serviceFor_, v1);

  return MEMORY[0x270FA2498](sub_251DB8780, 0, 0);
}

uint64_t sub_251DB8780()
{
  uint64_t v1 = (void *)v0[24];
  if (v1)
  {
    uint64_t v2 = sub_251F356C0();
    v0[25] = v2;
    v0[2] = v0;
    v0[3] = sub_251DB88C0;
    uint64_t v3 = swift_continuation_init();
    v0[10] = MEMORY[0x263EF8330];
    v0[11] = 0x40000000;
    v0[12] = sub_251A5B804;
    v0[13] = &block_descriptor_14;
    v0[14] = v3;
    objc_msgSend(v1, sel_updateName_completionHandler_, v2, v0 + 10);
    return MEMORY[0x270FA23F0](v0 + 2);
  }
  else
  {
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
}

uint64_t sub_251DB88C0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 208) = v1;
  if (v1) {
    uint64_t v2 = sub_251DB8A38;
  }
  else {
    uint64_t v2 = sub_251DB89D0;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_251DB89D0()
{
  uint64_t v1 = *(void **)(v0 + 200);

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_251DB8A38()
{
  uint64_t v1 = (void *)v0[25];
  uint64_t v2 = (void *)v0[24];
  swift_willThrow();

  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t StaticService.set(staticRoom:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_251DB8AD0, 0, 0);
}

uint64_t sub_251DB8AD0()
{
  *(void *)(v0 + 32) = sub_251F35C80();
  *(void *)(v0 + 40) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251DB8B68, v2, v1);
}

uint64_t sub_251DB8B68()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251DB8C00, 0, 0);
}

uint64_t sub_251DB8C00()
{
  *(void *)(v0 + 48) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251DB8C8C, v2, v1);
}

uint64_t sub_251DB8C8C()
{
  swift_release();
  *(void *)(v0 + 56) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251DB8D00, 0, 0);
}

uint64_t sub_251DB8D00()
{
  *(void *)(v0 + 64) = sub_251F34D50();
  *(void *)(v0 + 72) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251DB8D98, v2, v1);
}

uint64_t sub_251DB8D98()
{
  uint64_t v1 = (void *)v0[8];
  uint64_t v2 = (void *)v0[7];
  swift_release();
  v0[10] = objc_msgSend(v2, sel_roomFor_, v1);

  return MEMORY[0x270FA2498](sub_251DB8E28, 0, 0);
}

uint64_t sub_251DB8E28()
{
  if (v0[10])
  {
    uint64_t v1 = (void *)swift_task_alloc();
    v0[11] = v1;
    *uint64_t v1 = v0;
    v1[1] = sub_251DB8F44;
    uint64_t v2 = v0[3];
    v1[15] = v0[10];
    v1[16] = v2;
    return MEMORY[0x270FA2498](sub_251DB9140, 0, 0);
  }
  else
  {
    sub_251BB2208();
    swift_allocError();
    swift_willThrow();
    uint64_t v3 = (uint64_t (*)(void))v0[1];
    return v3();
  }
}

uint64_t sub_251DB8F44()
{
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_251DB90BC;
  }
  else {
    uint64_t v2 = sub_251DB9058;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_251DB9058()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251DB90BC()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t StaticService.set(room:)(uint64_t a1)
{
  *(void *)(v2 + 120) = a1;
  *(void *)(v2 + 128) = v1;
  return MEMORY[0x270FA2498](sub_251DB9140, 0, 0);
}

uint64_t sub_251DB9140()
{
  *(void *)(v0 + 136) = sub_251F35C80();
  *(void *)(v0 + 144) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251DB91D8, v2, v1);
}

uint64_t sub_251DB91D8()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251DB9270, 0, 0);
}

uint64_t sub_251DB9270()
{
  *(void *)(v0 + 152) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251DB92FC, v2, v1);
}

uint64_t sub_251DB92FC()
{
  swift_release();
  *(void *)(v0 + 160) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251DB9370, 0, 0);
}

uint64_t sub_251DB9370()
{
  *(void *)(v0 + 168) = sub_251F34D50();
  *(void *)(v0 + 176) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251DB9404, v2, v1);
}

uint64_t sub_251DB9404()
{
  uint64_t v1 = (void *)v0[21];
  uint64_t v2 = (void *)v0[20];
  swift_release();
  v0[23] = objc_msgSend(v2, sel_serviceFor_, v1);

  return MEMORY[0x270FA2498](sub_251DB9494, 0, 0);
}

uint64_t sub_251DB9494()
{
  uint64_t v1 = *(void **)(v0 + 184);
  if (v1)
  {
    id v2 = objc_msgSend(*(id *)(v0 + 184), sel_accessory);
    *(void *)(v0 + 192) = v2;

    if (v2)
    {
      id v3 = objc_msgSend(v2, sel_home);
      *(void *)(v0 + 200) = v3;
      if (v3)
      {
        uint64_t v4 = v3;
        uint64_t v5 = *(void *)(v0 + 120);
        *(void *)(v0 + 16) = v0;
        *(void *)(v0 + 24) = sub_251DB9650;
        uint64_t v6 = swift_continuation_init();
        *(void *)(v0 + 80) = MEMORY[0x263EF8330];
        *(void *)(v0 + 88) = 0x40000000;
        *(void *)(v0 + 96) = sub_251A5B804;
        *(void *)(v0 + 104) = &block_descriptor_4;
        *(void *)(v0 + 112) = v6;
        objc_msgSend(v4, sel_assignAccessory_toRoom_completionHandler_, v2, v5, v0 + 80);
        return MEMORY[0x270FA23F0](v0 + 16);
      }
    }
  }
  sub_251BB2208();
  swift_allocError();
  swift_willThrow();
  char v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_251DB9650()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 208) = v1;
  if (v1) {
    id v2 = sub_251DB995C;
  }
  else {
    id v2 = sub_251DB9760;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_251DB9760()
{
  *(void *)(v0 + 216) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251DB97EC, v2, v1);
}

uint64_t sub_251DB97EC()
{
  uint64_t v1 = (void *)v0[24];
  uint64_t v2 = v0[15];
  swift_release();
  sub_251BB1CD0(v1, v2);
  v0[28] = 0;
  return MEMORY[0x270FA2498](sub_251DB988C, 0, 0);
}

uint64_t sub_251DB988C()
{
  uint64_t v1 = *(void **)(v0 + 192);

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_251DB98F4()
{
  uint64_t v1 = *(void **)(v0 + 192);

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_251DB995C()
{
  uint64_t v1 = (void *)v0[25];
  uint64_t v2 = (void *)v0[24];
  swift_willThrow();

  id v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t StaticService.set(showInDashboard:)(char a1)
{
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 80) = a1;
  return MEMORY[0x270FA2498](sub_251DB99F8, 0, 0);
}

uint64_t sub_251DB99F8()
{
  *(void *)(v0 + 24) = sub_251F35C80();
  *(void *)(v0 + 32) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251DB9A90, v2, v1);
}

uint64_t sub_251DB9A90()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251DB9B28, 0, 0);
}

uint64_t sub_251DB9B28()
{
  *(void *)(v0 + 40) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251DB9BB4, v2, v1);
}

uint64_t sub_251DB9BB4()
{
  swift_release();
  *(void *)(v0 + 48) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251DB9C28, 0, 0);
}

uint64_t sub_251DB9C28()
{
  *(void *)(v0 + 56) = sub_251F34D50();
  *(void *)(v0 + 64) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251DB9CBC, v2, v1);
}

uint64_t sub_251DB9CBC()
{
  uint64_t v1 = (void *)v0[7];
  uint64_t v2 = (void *)v0[6];
  swift_release();
  v0[9] = objc_msgSend(v2, sel_serviceFor_, v1);

  return MEMORY[0x270FA2498](sub_251DB9D4C, 0, 0);
}

uint64_t sub_251DB9D4C()
{
  uint64_t v1 = *(void **)(v0 + 72);
  if (v1)
  {
    char v2 = *(unsigned char *)(v0 + 80);
    id v3 = v1;
    HMService.shouldShowInDashboard.setter(v2);
  }
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t StaticService.set(favorite:)(char a1)
{
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 80) = a1;
  return MEMORY[0x270FA2498](sub_251DB9DF0, 0, 0);
}

uint64_t sub_251DB9DF0()
{
  *(void *)(v0 + 24) = sub_251F35C80();
  *(void *)(v0 + 32) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251DB9E88, v2, v1);
}

uint64_t sub_251DB9E88()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251DB9F20, 0, 0);
}

uint64_t sub_251DB9F20()
{
  *(void *)(v0 + 40) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251DB9FAC, v2, v1);
}

uint64_t sub_251DB9FAC()
{
  swift_release();
  *(void *)(v0 + 48) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251DBA020, 0, 0);
}

uint64_t sub_251DBA020()
{
  *(void *)(v0 + 56) = sub_251F34D50();
  *(void *)(v0 + 64) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251DBA0B4, v2, v1);
}

uint64_t sub_251DBA0B4()
{
  uint64_t v1 = (void *)v0[7];
  uint64_t v2 = (void *)v0[6];
  swift_release();
  v0[9] = objc_msgSend(v2, sel_serviceFor_, v1);

  return MEMORY[0x270FA2498](sub_251DBA144, 0, 0);
}

uint64_t sub_251DBA144()
{
  uint64_t v1 = *(void **)(v0 + 72);
  if (v1)
  {
    char v2 = *(unsigned char *)(v0 + 80);
    id v3 = v1;
    HMService.isFavorite.setter(v2);
  }
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

unint64_t StaticService.batteryLevel.getter()
{
  return sub_251DC058C(11);
}

Swift::Int StaticService.chargingState.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  char v2 = 24;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.Swift::Int value = 0;
  }
  return v4.value;
}

uint64_t StaticService.set(customIconSymbol:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return MEMORY[0x270FA2498](sub_251DBA244, 0, 0);
}

uint64_t sub_251DBA244()
{
  *(void *)(v0 + 40) = sub_251F35C80();
  *(void *)(v0 + 48) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251DBA2DC, v2, v1);
}

uint64_t sub_251DBA2DC()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251DBA374, 0, 0);
}

uint64_t sub_251DBA374()
{
  *(void *)(v0 + 56) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251DBA400, v2, v1);
}

uint64_t sub_251DBA400()
{
  swift_release();
  *(void *)(v0 + 64) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251DBA474, 0, 0);
}

uint64_t sub_251DBA474()
{
  *(void *)(v0 + 72) = sub_251F34D50();
  *(void *)(v0 + 80) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251DBA508, v2, v1);
}

uint64_t sub_251DBA508()
{
  uint64_t v1 = (void *)v0[9];
  uint64_t v2 = (void *)v0[8];
  swift_release();
  v0[11] = objc_msgSend(v2, sel_serviceFor_, v1);

  return MEMORY[0x270FA2498](sub_251DBA598, 0, 0);
}

uint64_t sub_251DBA598()
{
  uint64_t v1 = (void *)v0[11];
  if (v1)
  {
    uint64_t v2 = v0[2];
    uint64_t v3 = v0[3];
    swift_bridgeObjectRetain();
    id v4 = v1;
    HMService.customIconSFSymbol.setter(v2, v3);
  }
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

BOOL StaticService.isVisibleService.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for StaticService();
  MEMORY[0x270FA5388](v2);
  id v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_269B9C488 != -1) {
    swift_once();
  }
  char v5 = sub_251DB3E04(*(unsigned __int8 *)(v1 + *(int *)(v2 + 88)), qword_269BF31F0, (uint64_t (*)(void))ServiceKind.rawValue.getter);
  sub_251DD1000(v1, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticService);
  if (v5)
  {
    uint64_t v6 = (uint64_t)&v4[*(int *)(v2 + 100)];
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    MEMORY[0x270FA5388](v7 - 8);
    uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_251A1B128(v6, (uint64_t)v9, &qword_26B21FF90);
    sub_251DD0FA0((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t v10 = sub_251F34DA0();
    BOOL v11 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10) == 1;
    sub_251A1B064((uint64_t)v9, &qword_26B21FF90);
  }
  else
  {
    sub_251DD0FA0((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticService);
    return 0;
  }
  return v11;
}

uint64_t StaticService.name.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticService.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_251F34DA0();
  id v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t StaticService.isPrimary.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticService() + 24));
}

uint64_t StaticService.isDoubleHigh.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticService() + 28));
}

uint64_t StaticService.isReachable.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticService() + 32));
}

uint64_t StaticService.isCalibrating.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticService() + 36));
}

uint64_t StaticService.isLowBattery.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticService() + 40));
}

uint64_t StaticService.accessoryId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for StaticService() + 44);
  uint64_t v4 = sub_251F34DA0();
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t StaticService.mediaSourceIdentifier.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 48));
}

uint64_t StaticService.deviceMetadata.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for StaticService();
  return sub_251A1B128(v1 + *(int *)(v3 + 52), a1, &qword_26B21F110);
}

uint64_t StaticService.dateAdded.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for StaticService();
  return sub_251A1B128(v1 + *(int *)(v3 + 56), a1, &qword_26B21EC20);
}

uint64_t StaticService.roomIds.getter()
{
  type metadata accessor for StaticService();
  return swift_bridgeObjectRetain();
}

uint64_t StaticService.roomName.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 64));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticService.shouldShowInDashboard.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticService() + 68));
}

uint64_t StaticService.accessoryShowsAsIndividualTiles.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticService() + 72));
}

uint64_t StaticService.isFavorite.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticService() + 76));
}

uint64_t StaticService.contributesToHomeStatus.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticService() + 80));
}

uint64_t StaticService.customIconSymbol.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 84));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticService.serviceSubKind.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for StaticService();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 92));
  return result;
}

uint64_t StaticService.associatedServiceKind.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for StaticService();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 96));
  return result;
}

uint64_t StaticService.parentServiceId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for StaticService();
  return sub_251A1B128(v1 + *(int *)(v3 + 100), a1, &qword_26B21FF90);
}

uint64_t StaticService.batteryServiceId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for StaticService();
  return sub_251A1B128(v1 + *(int *)(v3 + 104), a1, &qword_26B21FF90);
}

uint64_t StaticService.linkedStaticServices.getter()
{
  type metadata accessor for StaticService();
  return swift_bridgeObjectRetain();
}

uint64_t StaticService.staticCharacteristicsBag.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + *(int *)(type metadata accessor for StaticService() + 112));
  return swift_bridgeObjectRetain();
}

uint64_t StaticService.staticProfileBag.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for StaticService() + 116));
  uint64_t v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t StaticService.softwareUpdate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for StaticService();
  return sub_251A1B128(v1 + *(int *)(v3 + 120), a1, &qword_26B21F120);
}

uint64_t StaticService.homeNonResponsiveType.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for StaticService();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 124));
  return result;
}

uint64_t StaticService.bridgedValveServices.getter()
{
  type metadata accessor for StaticService();
  return swift_bridgeObjectRetain();
}

uint64_t StaticService.bridgeAccessoryId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for StaticService();
  return sub_251A1B128(v1 + *(int *)(v3 + 132), a1, &qword_26B21FF90);
}

uint64_t StaticService.matterEndpointID.getter()
{
  uint64_t v1 = type metadata accessor for StaticService();
  return *(unsigned __int16 *)(v0 + *(int *)(v1 + 136)) | (*(unsigned __int8 *)(v0 + *(int *)(v1 + 136) + 2) << 16);
}

uint64_t StaticService.matterEndpointPath.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = type metadata accessor for StaticService();
  uint64_t v4 = (uint64_t *)(v1 + *(int *)(result + 140));
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  LOBYTE(v4) = *((unsigned char *)v4 + 10);
  *(void *)a1 = v5;
  *(_WORD *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 10) = (_BYTE)v4;
  return result;
}

uint64_t sub_251DBAF0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, char a5@<W4>, char a6@<W5>, char a7@<W6>, char a8@<W7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, char a19, char a20,char a21,uint64_t a22,uint64_t a23,char *a24,char *a25,char *a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t *a30,long long *a31,uint64_t a32,char *a33,uint64_t a34,uint64_t a35,__int16 a36,char a37,uint64_t *a38)
{
  char v57 = *a24;
  char v58 = *a25;
  char v59 = *a26;
  uint64_t v61 = *a30;
  char v62 = *a33;
  uint64_t v65 = *a38;
  char v63 = *((unsigned char *)a38 + 10);
  __int16 v64 = *((_WORD *)a38 + 4);
  uint64_t v40 = sub_251F34DA0();
  uint64_t v41 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 32);
  long long v60 = *a31;
  v41(a9, a1, v40);
  uint64_t v42 = (int *)type metadata accessor for StaticService();
  uint64_t v43 = (void *)(a9 + v42[5]);
  *uint64_t v43 = a2;
  v43[1] = a3;
  *(unsigned char *)(a9 + v42[6]) = a4;
  *(unsigned char *)(a9 + v42[7]) = a5;
  *(unsigned char *)(a9 + v42[8]) = a6;
  *(unsigned char *)(a9 + v42[9]) = a7;
  *(unsigned char *)(a9 + v42[10]) = a8;
  v41(a9 + v42[11], a10, v40);
  uint64_t v44 = a9 + v42[12];
  *(void *)uint64_t v44 = a11;
  *(unsigned char *)(v44 + 8) = a12 & 1;
  sub_251A4ECF0(a13, a9 + v42[13], &qword_26B21F110);
  sub_251A4ECF0(a14, a9 + v42[14], &qword_26B21EC20);
  *(void *)(a9 + v42[15]) = a15;
  uint64_t v45 = (void *)(a9 + v42[16]);
  *uint64_t v45 = a16;
  v45[1] = a17;
  *(unsigned char *)(a9 + v42[17]) = a18;
  *(unsigned char *)(a9 + v42[18]) = a19;
  *(unsigned char *)(a9 + v42[19]) = a20;
  *(unsigned char *)(a9 + v42[20]) = a21;
  uint64_t v46 = (void *)(a9 + v42[21]);
  void *v46 = a22;
  v46[1] = a23;
  *(unsigned char *)(a9 + v42[22]) = v57;
  *(unsigned char *)(a9 + v42[23]) = v58;
  *(unsigned char *)(a9 + v42[24]) = v59;
  sub_251A4ECF0(a27, a9 + v42[25], &qword_26B21FF90);
  sub_251A4ECF0(a28, a9 + v42[26], &qword_26B21FF90);
  *(void *)(a9 + v42[27]) = a29;
  *(void *)(a9 + v42[28]) = v61;
  *(_OWORD *)(a9 + v42[29]) = v60;
  sub_251A4ECF0(a32, a9 + v42[30], &qword_26B21F120);
  *(unsigned char *)(a9 + v42[31]) = v62;
  *(void *)(a9 + v42[32]) = a34;
  uint64_t result = sub_251A4ECF0(a35, a9 + v42[33], &qword_26B21FF90);
  uint64_t v48 = a9 + v42[34];
  *(_WORD *)uint64_t v48 = a36;
  *(unsigned char *)(v48 + 2) = a37 & 1;
  uint64_t v49 = a9 + v42[35];
  *(void *)uint64_t v49 = v65;
  *(_WORD *)(v49 + 8) = v64;
  *(unsigned char *)(v49 + 10) = v63;
  return result;
}

uint64_t StaticService.hash(into:)(long long *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for StaticSoftwareUpdate(0);
  uint64_t v79 = *(void *)(v4 - 8);
  uint64_t v80 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v76 = (uint64_t)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v78 = (uint64_t)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (int *)type metadata accessor for StaticService();
  uint64_t v81 = *((void *)v8 - 1);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  BOOL v11 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v74 - v12;
  uint64_t v84 = (uint64_t *)type metadata accessor for StaticDeviceMetadata();
  uint64_t v14 = *(v84 - 1);
  MEMORY[0x270FA5388](v84);
  uint64_t v16 = (char *)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v19 = (char *)&v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_251F34DA0();
  uint64_t v21 = sub_251DD0A7C((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA95A8]);
  uint64_t v85 = v20;
  uint64_t v86 = v21;
  sub_251F35610();
  swift_bridgeObjectRetain();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  sub_251F36CC0();
  sub_251F36CC0();
  sub_251F36CC0();
  if (*(unsigned char *)(v1 + v8[9]) != 2) {
    sub_251F36CC0();
  }
  sub_251F36CC0();
  if (*(unsigned char *)(v1 + v8[10]) != 2) {
    sub_251F36CC0();
  }
  sub_251F36CC0();
  sub_251F35610();
  if (*(unsigned char *)(v1 + v8[12] + 8) == 1)
  {
    sub_251F36CC0();
  }
  else
  {
    sub_251F36CC0();
    sub_251F36CB0();
  }
  sub_251A1B128(v1 + v8[13], (uint64_t)v19, &qword_26B21F110);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t *))(v14 + 48))(v19, 1, v84) == 1)
  {
    sub_251F36CC0();
  }
  else
  {
    sub_251DD0AF0((uint64_t)v19, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for StaticDeviceMetadata);
    sub_251F36CC0();
    StaticDeviceMetadata.hash(into:)();
    sub_251DD0FA0((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for StaticDeviceMetadata);
  }
  uint64_t v22 = v1 + v8[14];
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  MEMORY[0x270FA5388](v23 - 8);
  Swift::Int_optional v25 = (char *)&v74 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1B128(v22, (uint64_t)v25, &qword_26B21EC20);
  uint64_t v26 = sub_251F34D20();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26);
  if (v28 == 1)
  {
    sub_251F36CC0();
  }
  else
  {
    uint64_t v84 = &v74;
    MEMORY[0x270FA5388](v28);
    Swift::Int_optional v30 = (char *)&v74 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v30, v25, v26);
    sub_251F36CC0();
    sub_251DD0A7C(&qword_269B9CF80, MEMORY[0x270FA92A0]);
    sub_251F35610();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v30, v26);
  }
  uint64_t v31 = v85;
  uint64_t v32 = *(void *)(v2 + v8[15]);
  swift_bridgeObjectRetain();
  sub_251A54708(a1, v32);
  swift_bridgeObjectRelease();
  if (*(void *)(v2 + v8[16] + 8))
  {
    sub_251F36CC0();
    swift_bridgeObjectRetain();
    sub_251F357B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_251F36CC0();
  }
  sub_251F36CC0();
  sub_251F36CC0();
  sub_251F36CC0();
  sub_251F36CC0();
  if (*(void *)(v2 + v8[21] + 8))
  {
    sub_251F36CC0();
    swift_bridgeObjectRetain();
    sub_251F357B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_251F36CC0();
  }
  char v88 = *(unsigned char *)(v2 + v8[22]);
  ServiceKind.rawValue.getter();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(v2 + v8[23]) == 5)
  {
    sub_251F36CC0();
  }
  else
  {
    sub_251F36CC0();
    sub_251F357B0();
    swift_bridgeObjectRelease();
  }
  int v33 = *(unsigned __int8 *)(v2 + v8[24]);
  sub_251F36CC0();
  if (v33 != 53)
  {
    char v87 = v33;
    ServiceKind.rawValue.getter();
    sub_251F357B0();
    swift_bridgeObjectRelease();
  }
  uint64_t v34 = v2 + v8[25];
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v35 - 8);
  uint64_t v84 = v36;
  uint64_t v37 = (char *)&v74 - (((unint64_t)v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1B128(v34, (uint64_t)v37, &qword_26B21FF90);
  uint64_t v38 = v31;
  uint64_t v39 = *(void *)(v31 - 8);
  uint64_t v82 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v39 + 48);
  uint64_t v83 = v39 + 48;
  uint64_t v40 = v82(v37, 1, v38);
  uint64_t v77 = v39;
  if (v40 == 1)
  {
    sub_251F36CC0();
  }
  else
  {
    uint64_t v75 = &v74;
    MEMORY[0x270FA5388](v40);
    uint64_t v42 = (char *)&v74 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v42, v37, v38);
    sub_251F36CC0();
    sub_251F35610();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v42, v38);
  }
  uint64_t v43 = v38;
  uint64_t v44 = MEMORY[0x270FA5388](v2 + v8[26]);
  uint64_t v46 = (char *)&v74 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1B128(v44, (uint64_t)v46, &qword_26B21FF90);
  uint64_t v47 = v82(v46, 1, v38);
  if (v47 == 1)
  {
    sub_251F36CC0();
  }
  else
  {
    uint64_t v75 = &v74;
    uint64_t v48 = v77;
    MEMORY[0x270FA5388](v47);
    uint64_t v50 = (char *)&v74 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v50, v46, v38);
    sub_251F36CC0();
    sub_251F35610();
    uint64_t v51 = v48;
    uint64_t v43 = v38;
    (*(void (**)(char *, uint64_t))(v51 + 8))(v50, v38);
  }
  uint64_t v52 = *(void *)(v2 + v8[27]);
  sub_251F36CB0();
  uint64_t v53 = *(void *)(v52 + 16);
  if (v53)
  {
    uint64_t v54 = v52 + ((*(unsigned __int8 *)(v81 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80));
    uint64_t v55 = *(void *)(v81 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_251DD1000(v54, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for StaticService);
      StaticService.hash(into:)(a1);
      sub_251DD0FA0((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for StaticService);
      v54 += v55;
      --v53;
    }
    while (v53);
    swift_bridgeObjectRelease();
    uint64_t v43 = v85;
  }
  uint64_t v56 = *(void *)(v2 + v8[28]);
  swift_bridgeObjectRetain();
  sub_251A42984(a1, v56);
  swift_bridgeObjectRelease();
  char v57 = (uint64_t *)(v2 + v8[29]);
  uint64_t v58 = *v57;
  uint64_t v59 = v57[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_251A44858(a1, v58);
  sub_251A4427C(a1, v59);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v60 = v78;
  sub_251A1B128(v2 + v8[30], v78, &qword_26B21F120);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v79 + 48))(v60, 1, v80) == 1)
  {
    sub_251F36CC0();
  }
  else
  {
    uint64_t v61 = v76;
    sub_251DD0AF0(v60, v76, type metadata accessor for StaticSoftwareUpdate);
    sub_251F36CC0();
    sub_251F35610();
    StaticSoftwareUpdate.Kind.hash(into:)();
    sub_251DD0FA0(v61, type metadata accessor for StaticSoftwareUpdate);
  }
  sub_251F36CB0();
  uint64_t v62 = *(void *)(v2 + v8[32]);
  sub_251F36CB0();
  uint64_t v63 = *(void *)(v62 + 16);
  if (v63)
  {
    uint64_t v64 = v62 + ((*(unsigned __int8 *)(v81 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80));
    uint64_t v65 = *(void *)(v81 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_251DD1000(v64, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticService);
      StaticService.hash(into:)(a1);
      sub_251DD0FA0((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticService);
      v64 += v65;
      --v63;
    }
    while (v63);
    swift_bridgeObjectRelease();
  }
  uint64_t v66 = MEMORY[0x270FA5388](v2 + v8[33]);
  uint64_t v68 = (char *)&v74 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1B128(v66, (uint64_t)v68, &qword_26B21FF90);
  uint64_t v69 = v82(v68, 1, v43);
  if (v69 == 1)
  {
    sub_251F36CC0();
  }
  else
  {
    uint64_t v70 = v77;
    MEMORY[0x270FA5388](v69);
    uint64_t v72 = (char *)&v74 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v72, v68, v43);
    sub_251F36CC0();
    sub_251F35610();
    (*(void (**)(char *, uint64_t))(v70 + 8))(v72, v43);
  }
  if (*(unsigned char *)(v2 + v8[34] + 2) == 1)
  {
    sub_251F36CC0();
  }
  else
  {
    sub_251F36CC0();
    sub_251F36CD0();
  }
  if (*(unsigned char *)(v2 + v8[35] + 10) == 1) {
    return sub_251F36CC0();
  }
  sub_251F36CC0();
  sub_251F36CF0();
  return sub_251F36CD0();
}

unint64_t sub_251DBC15C(char a1)
{
  unint64_t result = 25705;
  switch(a1)
  {
    case 1:
      unint64_t result = 1701667182;
      break;
    case 2:
      unint64_t result = 0x72616D6972507369;
      break;
    case 3:
      unint64_t result = 0x656C62756F447369;
      break;
    case 4:
      unint64_t result = 0x6168636165527369;
      break;
    case 5:
      unint64_t result = 0x7262696C61437369;
      break;
    case 6:
      unint64_t result = 0x746142776F4C7369;
      break;
    case 7:
      unint64_t result = 0x726F737365636361;
      break;
    case 8:
      unint64_t result = 0xD000000000000015;
      break;
    case 9:
      unint64_t result = 0x654D656369766564;
      break;
    case 10:
      unint64_t result = 0x6564644165746164;
      break;
    case 11:
      unint64_t result = 0x7364496D6F6F72;
      break;
    case 12:
      unint64_t result = 0x656D614E6D6F6F72;
      break;
    case 13:
      unint64_t result = 0xD000000000000015;
      break;
    case 14:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 15:
      unint64_t result = 0x69726F7661467369;
      break;
    case 16:
      unint64_t result = 0xD000000000000017;
      break;
    case 17:
    case 22:
    case 25:
    case 30:
      unint64_t result = 0xD000000000000010;
      break;
    case 18:
      unint64_t result = 0x4B65636976726573;
      break;
    case 19:
      unint64_t result = 0x5365636976726573;
      break;
    case 20:
      unint64_t result = 0xD000000000000015;
      break;
    case 21:
      unint64_t result = 0x6553746E65726170;
      break;
    case 23:
      unint64_t result = 0xD000000000000014;
      break;
    case 24:
      unint64_t result = 0xD000000000000018;
      break;
    case 26:
      unint64_t result = 0x6572617774666F73;
      break;
    case 27:
      unint64_t result = 0xD000000000000015;
      break;
    case 28:
      unint64_t result = 0xD000000000000014;
      break;
    case 29:
      unint64_t result = 0xD000000000000011;
      break;
    case 31:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_251DBC558()
{
  return sub_251DBC15C(*v0);
}

uint64_t sub_251DBC560@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251DCA97C(a1, a2);
  *a3 = result;
  return result;
}

void sub_251DBC588(unsigned char *a1@<X8>)
{
  *a1 = 32;
}

uint64_t sub_251DBC594(uint64_t a1)
{
  unint64_t v2 = sub_251DCA6BC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251DBC5D0(uint64_t a1)
{
  unint64_t v2 = sub_251DCA6BC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticService.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA37F8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251DCA6BC();
  sub_251F36DA0();
  LOBYTE(v17) = 0;
  sub_251F34DA0();
  sub_251DD0A7C(&qword_26B21E348, MEMORY[0x270FA95A8]);
  sub_251F36A20();
  if (!v2)
  {
    uint64_t v9 = (int *)type metadata accessor for StaticService();
    LOBYTE(v17) = 1;
    sub_251F369D0();
    LOBYTE(v17) = 2;
    sub_251F369E0();
    LOBYTE(v17) = 3;
    sub_251F369E0();
    LOBYTE(v17) = 4;
    sub_251F369E0();
    LOBYTE(v17) = 5;
    sub_251F36920();
    LOBYTE(v17) = 6;
    sub_251F36920();
    LOBYTE(v17) = 7;
    sub_251F36A20();
    LOBYTE(v17) = 8;
    sub_251F36950();
    unint64_t v16 = v3 + v9[13];
    LOBYTE(v17) = 9;
    type metadata accessor for StaticDeviceMetadata();
    sub_251DCB828(&qword_269BA3808, (void (*)(uint64_t))type metadata accessor for StaticDeviceMetadata);
    sub_251F36970();
    unint64_t v16 = v3 + v9[14];
    LOBYTE(v17) = 10;
    sub_251F34D20();
    sub_251DD0A7C(&qword_269B9F590, MEMORY[0x270FA92A0]);
    sub_251F36970();
    *(void *)&long long v17 = *(void *)(v3 + v9[15]);
    char v18 = 11;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC40);
    sub_251DCA7B8(&qword_269B9CC88, &qword_26B21E348);
    sub_251F36A20();
    LOBYTE(v17) = 12;
    sub_251F36910();
    LOBYTE(v17) = 13;
    sub_251F369E0();
    LOBYTE(v17) = 14;
    sub_251F369E0();
    LOBYTE(v17) = 15;
    sub_251F369E0();
    LOBYTE(v17) = 16;
    sub_251F369E0();
    LOBYTE(v17) = 17;
    sub_251F36910();
    LOBYTE(v17) = *(unsigned char *)(v3 + v9[22]);
    char v18 = 18;
    unint64_t v16 = sub_251CA7158();
    sub_251F36A20();
    LOBYTE(v17) = *(unsigned char *)(v3 + v9[23]);
    char v18 = 19;
    sub_251CA71AC();
    sub_251F36970();
    LOBYTE(v17) = *(unsigned char *)(v3 + v9[24]);
    char v18 = 20;
    sub_251F36970();
    LOBYTE(v17) = 21;
    sub_251F36970();
    LOBYTE(v17) = 22;
    sub_251F36970();
    *(void *)&long long v17 = *(void *)(v3 + v9[27]);
    char v18 = 23;
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3810);
    void v15[2] = sub_251DCA840(&qword_269BA3818, &qword_269B9E0C8);
    unint64_t v16 = v10;
    sub_251F36A20();
    *(void *)&long long v17 = *(void *)(v3 + v9[28]);
    char v18 = 24;
    sub_251DCA710();
    sub_251F36A20();
    long long v17 = *(_OWORD *)(v3 + v9[29]);
    char v18 = 25;
    sub_251DCA764();
    sub_251F36A20();
    v15[1] = v3 + v9[30];
    LOBYTE(v17) = 26;
    type metadata accessor for StaticSoftwareUpdate(0);
    sub_251DCB828(&qword_269BA2BB0, (void (*)(uint64_t))type metadata accessor for StaticSoftwareUpdate);
    sub_251F36970();
    LOBYTE(v17) = *(unsigned char *)(v3 + v9[31]);
    char v18 = 27;
    sub_251C84AF4();
    sub_251F36A20();
    *(void *)&long long v17 = *(void *)(v3 + v9[32]);
    char v18 = 28;
    sub_251F36A20();
    LOBYTE(v17) = 29;
    sub_251F36970();
    LOBYTE(v17) = 30;
    sub_251F369A0();
    BOOL v11 = (uint64_t *)(v3 + v9[35]);
    uint64_t v12 = *v11;
    __int16 v13 = *((_WORD *)v11 + 4);
    LOBYTE(v11) = *((unsigned char *)v11 + 10);
    *(void *)&long long v17 = v12;
    WORD4(v17) = v13;
    BYTE10(v17) = (_BYTE)v11;
    char v18 = 31;
    sub_251B725F0();
    sub_251F36970();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t StaticService.hashValue.getter()
{
  sub_251F36CA0();
  StaticService.hash(into:)(v1);
  return sub_251F36D00();
}

uint64_t StaticService.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v57 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3830);
  uint64_t v58 = *(void *)(v9 - 8);
  uint64_t v59 = v9;
  MEMORY[0x270FA5388](v9);
  BOOL v11 = (char *)v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for StaticService();
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251DCA6BC();
  uint64_t v60 = v11;
  uint64_t v15 = (uint64_t)v61;
  sub_251F36D90();
  if (v15) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  uint64_t v54 = v5;
  uint64_t v55 = v8;
  uint64_t v61 = a1;
  uint64_t v56 = (int *)v12;
  uint64_t v16 = sub_251F34DA0();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void *)(v17 + 64);
  MEMORY[0x270FA5388](v16);
  LOBYTE(v62) = 0;
  uint64_t v19 = sub_251DD0A7C(&qword_269B9CC80, MEMORY[0x270FA95A8]);
  sub_251F36880();
  v52[1] = v19;
  v52[2] = v17;
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
  uint64_t v53 = v16;
  v20(v14, (char *)v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), v16);
  LOBYTE(v62) = 1;
  uint64_t v21 = sub_251F36830();
  uint64_t v22 = v56;
  uint64_t v23 = (uint64_t *)&v14[v56[5]];
  *uint64_t v23 = v21;
  v23[1] = v24;
  LOBYTE(v62) = 2;
  v14[v22[6]] = sub_251F36840() & 1;
  LOBYTE(v62) = 3;
  v14[v22[7]] = sub_251F36840() & 1;
  LOBYTE(v62) = 4;
  v14[v22[8]] = sub_251F36840() & 1;
  LOBYTE(v62) = 5;
  v14[v22[9]] = sub_251F367A0();
  LOBYTE(v62) = 6;
  uint64_t v25 = sub_251F367A0();
  uint64_t v26 = v22[10];
  v52[0] = v14;
  v14[v26] = v25;
  MEMORY[0x270FA5388](v25);
  LOBYTE(v62) = 7;
  sub_251F36880();
  v20((char *)(v52[0] + v56[11]), (char *)v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), v53);
  LOBYTE(v62) = 8;
  uint64_t v27 = sub_251F367C0();
  uint64_t v28 = v52[0] + v56[12];
  *(void *)uint64_t v28 = v27;
  *(unsigned char *)(v28 + 8) = v29 & 1;
  type metadata accessor for StaticDeviceMetadata();
  LOBYTE(v62) = 9;
  sub_251DCB828(&qword_269BA3838, (void (*)(uint64_t))type metadata accessor for StaticDeviceMetadata);
  sub_251F367D0();
  sub_251A4ECF0((uint64_t)v55, v52[0] + v56[13], &qword_26B21F110);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  MEMORY[0x270FA5388](v30 - 8);
  uint64_t v32 = (char *)v52 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34D20();
  LOBYTE(v62) = 10;
  sub_251DD0A7C(&qword_269B9DBE8, MEMORY[0x270FA92A0]);
  sub_251F367D0();
  sub_251A4ECF0((uint64_t)v32, v52[0] + v56[14], &qword_26B21EC20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC40);
  char v63 = 11;
  sub_251DCA7B8(&qword_269B9CC78, &qword_269B9CC80);
  sub_251F36880();
  *(void *)(v52[0] + v56[15]) = v62;
  LOBYTE(v62) = 12;
  uint64_t v33 = sub_251F36790();
  uint64_t v34 = (uint64_t *)(v52[0] + v56[16]);
  *uint64_t v34 = v33;
  v34[1] = v35;
  LOBYTE(v62) = 13;
  *(unsigned char *)(v52[0] + v56[17]) = sub_251F36840() & 1;
  LOBYTE(v62) = 14;
  *(unsigned char *)(v52[0] + v56[18]) = sub_251F36840() & 1;
  LOBYTE(v62) = 15;
  *(unsigned char *)(v52[0] + v56[19]) = sub_251F36840() & 1;
  LOBYTE(v62) = 16;
  *(unsigned char *)(v52[0] + v56[20]) = sub_251F36840() & 1;
  LOBYTE(v62) = 17;
  uint64_t v36 = sub_251F36790();
  uint64_t v37 = (uint64_t *)(v52[0] + v56[21]);
  *uint64_t v37 = v36;
  v37[1] = v38;
  char v63 = 18;
  sub_251CA72A8();
  sub_251F36880();
  *(unsigned char *)(v52[0] + v56[22]) = v62;
  char v63 = 19;
  sub_251CA72FC();
  sub_251F367D0();
  *(unsigned char *)(v52[0] + v56[23]) = v62;
  char v63 = 20;
  sub_251F367D0();
  *(unsigned char *)(v52[0] + v56[24]) = v62;
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t v40 = *(void *)(*(void *)(v39 - 8) + 64);
  MEMORY[0x270FA5388](v39 - 8);
  unint64_t v41 = (v40 + 15) & 0xFFFFFFFFFFFFFFF0;
  LOBYTE(v62) = 21;
  sub_251F367D0();
  uint64_t v42 = sub_251A4ECF0((uint64_t)v52 - v41, v52[0] + v56[25], &qword_26B21FF90);
  MEMORY[0x270FA5388](v42);
  LOBYTE(v62) = 22;
  sub_251F367D0();
  sub_251A4ECF0((uint64_t)v52 - v41, v52[0] + v56[26], &qword_26B21FF90);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3810);
  char v63 = 23;
  sub_251DCA840(&qword_269BA3840, &qword_269B9E1D8);
  sub_251F36880();
  *(void *)(v52[0] + v56[27]) = v62;
  char v63 = 24;
  sub_251DCA8D4();
  sub_251F36880();
  *(void *)(v52[0] + v56[28]) = v62;
  char v63 = 25;
  sub_251DCA928();
  sub_251F36880();
  *(_OWORD *)(v52[0] + v56[29]) = v62;
  type metadata accessor for StaticSoftwareUpdate(0);
  LOBYTE(v62) = 26;
  sub_251DCB828(&qword_269BA2BE8, (void (*)(uint64_t))type metadata accessor for StaticSoftwareUpdate);
  sub_251F367D0();
  sub_251A4ECF0((uint64_t)v54, v52[0] + v56[30], &qword_26B21F120);
  char v63 = 27;
  sub_251C84C30();
  sub_251F36880();
  *(unsigned char *)(v52[0] + v56[31]) = v62;
  char v63 = 28;
  uint64_t v43 = sub_251F36880();
  *(void *)(v52[0] + v56[32]) = v62;
  MEMORY[0x270FA5388](v43);
  LOBYTE(v62) = 29;
  sub_251F367D0();
  sub_251A4ECF0((uint64_t)v52 - v41, v52[0] + v56[33], &qword_26B21FF90);
  LOBYTE(v62) = 30;
  uint64_t v44 = sub_251F36800();
  uint64_t v45 = v52[0] + v56[34];
  *(_WORD *)uint64_t v45 = v44;
  *(unsigned char *)(v45 + 2) = BYTE2(v44) & 1;
  char v63 = 31;
  sub_251B72740();
  sub_251F367D0();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v60, v59);
  __int16 v46 = WORD4(v62);
  char v47 = BYTE10(v62);
  uint64_t v48 = v57;
  uint64_t v49 = v52[0];
  uint64_t v50 = v52[0] + v56[35];
  *(void *)uint64_t v50 = v62;
  *(_WORD *)(v50 + 8) = v46;
  *(unsigned char *)(v50 + 10) = v47;
  sub_251DD1000(v49, v48, (uint64_t (*)(void))type metadata accessor for StaticService);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v61);
  return sub_251DD0FA0(v49, (uint64_t (*)(void))type metadata accessor for StaticService);
}

uint64_t sub_251DBE1D0()
{
  sub_251F36CA0();
  StaticService.hash(into:)(v1);
  return sub_251F36D00();
}

uint64_t sub_251DBE214()
{
  sub_251F36CA0();
  StaticService.hash(into:)(v1);
  return sub_251F36D00();
}

uint64_t sub_251DBE250@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticService.init(from:)(a1, a2);
}

uint64_t sub_251DBE268(void *a1)
{
  return StaticService.encode(to:)(a1);
}

uint64_t StaticService.foregroundColor.getter()
{
  uint64_t v1 = type metadata accessor for StaticService();
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = &v6[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (StaticService.isAlarmingSensorDetected.getter()) {
    return sub_251F352F0();
  }
  int v5 = *(unsigned __int8 *)(v0 + *(int *)(v1 + 96));
  sub_251DD1000(v0, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for StaticService);
  if (v5 == 53) {
    LOBYTE(v5) = v3[*(int *)(v1 + 88)];
  }
  sub_251DD0FA0((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for StaticService);
  v6[15] = v5;
  return ServiceKind.foregroundColor.getter();
}

BOOL StaticService.isAlarmingSensorDetected.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for StaticService();
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  int v5 = &v17[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = MEMORY[0x270FA5388](v3);
  uint64_t v8 = &v17[-v7];
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  BOOL v11 = &v17[-v10];
  uint64_t v19 = *(void *)(v0 + *(int *)(v9 + 112));
  char v18 = 74;
  Swift::Int_optional v20 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v18);
  if (v20.is_nil)
  {
    sub_251DD1000(v0, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticService);
  }
  else
  {
    Swift::Int value = v20.value;
    sub_251DD1000(v1, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticService);
    if (value == 1)
    {
      sub_251DD0FA0((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticService);
      sub_251DD1000(v1, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticService);
LABEL_7:
      sub_251DD0FA0((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticService);
      sub_251DD1000(v1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticService);
LABEL_11:
      sub_251DD0FA0((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticService);
      return 1;
    }
  }
  uint64_t v19 = *(void *)&v11[*(int *)(v2 + 112)];
  char v18 = 127;
  Swift::Int_optional v21 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v18);
  if (v21.is_nil)
  {
    sub_251DD0FA0((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticService);
    sub_251DD1000(v1, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticService);
  }
  else
  {
    Swift::Int v13 = v21.value;
    sub_251DD0FA0((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticService);
    sub_251DD1000(v1, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticService);
    if (v13 == 1) {
      goto LABEL_7;
    }
  }
  uint64_t v19 = *(void *)&v8[*(int *)(v2 + 112)];
  char v18 = 21;
  Swift::Int_optional v22 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v18);
  if (v22.is_nil)
  {
    sub_251DD0FA0((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticService);
    sub_251DD1000(v1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticService);
  }
  else
  {
    Swift::Int v14 = v22.value;
    sub_251DD0FA0((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticService);
    sub_251DD1000(v1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticService);
    if (v14 == 1) {
      goto LABEL_11;
    }
  }
  uint64_t v19 = *(void *)&v5[*(int *)(v2 + 112)];
  char v18 = 18;
  Swift::Int_optional v23 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v18);
  if (v23.is_nil)
  {
    sub_251DD0FA0((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticService);
    return 0;
  }
  else
  {
    Swift::Int v16 = v23.value;
    sub_251DD0FA0((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticService);
    return v16 == 1;
  }
}

uint64_t StaticService.displayAsServiceKind.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for StaticService();
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v8 = *(unsigned __int8 *)(v2 + *(int *)(v5 + 96));
  sub_251DD1000(v2, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticService);
  if (v8 == 53) {
    LOBYTE(v8) = v7[*(int *)(v4 + 88)];
  }
  uint64_t result = sub_251DD0FA0((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticService);
  *a1 = v8;
  return result;
}

uint64_t StaticService.serviceKinds.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CFA8);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_251F38650;
  *(unsigned char *)(v1 + 32) = *(unsigned char *)(v0 + *(int *)(type metadata accessor for StaticService() + 88));
  return v1;
}

uint64_t StaticService.primaryServiceKind.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for StaticService();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 88));
  return result;
}

uint64_t StaticService.statusString.getter()
{
  StaticService.statusString(forAccessoryControl:)(&v2, 0);
  uint64_t v0 = sub_251D3D180();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_251DBE914@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_251A1B128(v2 + *(int *)(a1 + 56), a2, &qword_26B21EC20);
}

void StaticService.tileIcon.getter(HomeDataModel::Icon *a1@<X8>)
{
  uint64_t v3 = (int *)type metadata accessor for StaticService();
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (uint64_t *)(v1 + *(int *)(v4 + 84));
  uint64_t v8 = v7[1];
  if (v8)
  {
    uint64_t v9 = *v7;
    swift_bridgeObjectRetain();
    uint64_t v10 = v9;
    uint64_t v11 = v8;
    Icon.init(customIconName:)(a1, *(Swift::String *)&v10);
  }
  else
  {
    int v12 = *(unsigned __int8 *)(v1 + v3[24]);
    sub_251DD1000(v1, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticService);
    if (v12 == 53) {
      LOBYTE(v12) = v6[v3[22]];
    }
    sub_251DD0FA0((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticService);
    char v15 = v12;
    char v14 = *(unsigned char *)(v1 + v3[23]);
    Icon.init(serviceKind:serviceSubKind:)(a1, (HomeDataModel::ServiceKind)&v15, (HomeDataModel::ServiceSubKind_optional)&v14);
  }
}

uint64_t sub_251DBEA90(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 28));
}

double sub_251DBEA9C(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CFA8);
  uint64_t v3 = swift_allocObject();
  *(void *)&double result = 1;
  *(_OWORD *)(v3 + 16) = xmmword_251F38650;
  *(unsigned char *)(v3 + 32) = *(unsigned char *)(v1 + *(int *)(a1 + 88));
  return result;
}

uint64_t sub_251DBEAEC@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(v2 + *(int *)(result + 88));
  return result;
}

uint64_t sub_251DBEAFC@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = MEMORY[0x270FA5388](v2);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v9 = *(unsigned __int8 *)(v5 + *(int *)(v8 + 104));
  sub_251DD1000(v5, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticService);
  if (v9 == 53) {
    LOBYTE(v9) = v7[*(int *)(a1 + 88)];
  }
  uint64_t result = sub_251DD0FA0((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticService);
  *a2 = v9;
  return result;
}

uint64_t sub_251DBEBC4(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 76));
}

uint64_t sub_251DBEBD0(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 68));
}

uint64_t sub_251DBEBDC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_251DBEBE8(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 64));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_251DBEC28(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 32));
}

uint64_t sub_251DBEC34(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_251AB3A34;
  v4[7] = a1;
  v4[8] = v1;
  return MEMORY[0x270FA2498](sub_251DBED00, 0, 0);
}

uint64_t StaticService.toggle()(uint64_t a1)
{
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = v1;
  return MEMORY[0x270FA2498](sub_251DBED00, 0, 0);
}

uint64_t sub_251DBED00()
{
  *(void *)(v0 + 48) = qword_270263C18;
  *(_OWORD *)(v0 + 16) = xmmword_251F3BEC0;
  *(void *)(v0 + 32) = 0;
  *(void *)(v0 + 40) = 0;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_251DBEDCC;
  uint64_t v2 = *(void *)(v0 + 56);
  return StaticService.toggle(options:context:)(v2, (void *)(v0 + 48), (_OWORD *)(v0 + 16));
}

uint64_t sub_251DBEDCC()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

char StaticService.statusIcon.getter@<W0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (int *)type metadata accessor for StaticService();
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  int v7 = *(unsigned __int8 *)(v1 + *(int *)(v4 + 96));
  sub_251DD1000(v1, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticService);
  if (v7 == 53) {
    LOWORD(v7) = v6[v3[22]];
  }
  char result = sub_251DD0FA0((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticService);
  __int16 v9 = *(unsigned __int8 *)(v1 + v3[23]);
  uint64_t v10 = (uint64_t *)(v1 + v3[21]);
  uint64_t v11 = (void *)v10[1];
  if (v11)
  {
    uint64_t v12 = *v10;
    swift_bridgeObjectRetain();
    v13._uint64_t countAndFlagsBits = v12;
    v13._object = v11;
    char result = IconSymbol.init(rawValue:)(v13).value;
    char v14 = v15[15];
  }
  else
  {
    char v14 = 89;
  }
  *(_WORD *)a1 = v7 | (v9 << 8);
  *(unsigned char *)(a1 + 2) = 0;
  *(unsigned char *)(a1 + 3) = v14;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  return result;
}

uint64_t StaticService.temperatureStringStatusIcon.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for StaticService();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251DD1000(v2, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticService);
  uint64_t v7 = _s13HomeDataModel21TemperatureStringIconV4text4withSSSgAA13StaticServiceV_tFZ_0((uint64_t)v6);
  if (v8)
  {
    uint64_t v9 = v7;
    uint64_t v10 = v8;
    uint64_t v11 = _s13HomeDataModel21TemperatureStringIconV9textColor4with7SwiftUI0H0VSgAA13StaticServiceV_tFZ_0((uint64_t)v6);
    uint64_t result = sub_251DD0FA0((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticService);
    if (v11)
    {
      *a1 = v9;
      a1[1] = v10;
      a1[2] = v11;
      return result;
    }
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t result = sub_251DD0FA0((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticService);
  }
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  return result;
}

Swift::Int StaticService.carbonMonoxideDetected.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  char v2 = 21;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.Swift::Int value = 0;
  }
  return v4.value;
}

uint64_t StaticService.mute.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  unsigned __int8 v2 = 84;
  return sub_251B457DC(&v2);
}

void *sub_251DBF1A4()
{
  uint64_t result = (void *)sub_251C0913C((uint64_t)&unk_27025F698);
  off_26B21F078 = result;
  return result;
}

uint64_t static StaticService.sensorKinds.getter()
{
  if (qword_26B21F080 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

uint64_t StaticService.staticCharacteristic(for:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + *(int *)(type metadata accessor for StaticService() + 112));
  swift_bridgeObjectRetain();
  sub_251A95CF0((uint64_t (*)(char *))sub_251D6ACD0, v3, a1);
  return swift_bridgeObjectRelease();
}

Swift::Double_optional __swiftcall StaticService.double(for:)(HomeDataModel::CharacteristicKind a1)
{
  unsigned __int8 v2 = *(unsigned char *)a1;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for StaticService() + 112));
  unsigned __int8 v5 = v2;
  char v3 = sub_251B46610(&v5);
  result.Swift::Int value = v4;
  result.is_nil = v3;
  return result;
}

Swift::String_optional __swiftcall StaticService.string(for:)(HomeDataModel::CharacteristicKind a1)
{
  unsigned __int8 v2 = (unsigned __int8 *)a1;
  uint64_t v3 = type metadata accessor for StaticCharacteristic();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + *(int *)(type metadata accessor for StaticService() + 112));
  if (*(void *)(v7 + 16) && (unint64_t v8 = sub_2519FE568(*v2), (v9 & 1) != 0))
  {
    sub_251DD1000(*(void *)(v7 + 56) + *(void *)(v4 + 72) * v8, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
    uint64_t v10 = &v6[*(int *)(v3 + 24)];
    if (v10[16] == 8)
    {
      uint64_t v11 = *(void *)v10;
      uint64_t v12 = (void *)*((void *)v10 + 1);
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v11 = 0;
      uint64_t v12 = 0;
    }
    sub_251DD0FA0((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
  }
  else
  {
    uint64_t v11 = 0;
    uint64_t v12 = 0;
  }
  uint64_t v13 = v11;
  char v14 = v12;
  result.value._object = v14;
  result.value._uint64_t countAndFlagsBits = v13;
  return result;
}

uint64_t StaticService.data(for:)(unsigned __int8 *a1)
{
  uint64_t v3 = type metadata accessor for StaticCharacteristic();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + *(int *)(type metadata accessor for StaticService() + 112));
  if (!*(void *)(v7 + 16)) {
    return 0;
  }
  unint64_t v8 = sub_2519FE568(*a1);
  if ((v9 & 1) == 0) {
    return 0;
  }
  sub_251DD1000(*(void *)(v7 + 56) + *(void *)(v4 + 72) * v8, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
  uint64_t v10 = &v6[*(int *)(v3 + 24)];
  if (v10[16] == 10)
  {
    uint64_t v11 = *(void *)v10;
    sub_251A1A894(*(void *)v10, *((void *)v10 + 1));
  }
  else
  {
    uint64_t v11 = 0;
  }
  sub_251DD0FA0((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
  return v11;
}

uint64_t StaticService.airParticulateDensity.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  unsigned __int8 v2 = 6;
  return sub_251B46610(&v2);
}

Swift::Int StaticService.airParticulateSize.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  char v2 = 7;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.Swift::Int value = 0;
  }
  return v4.value;
}

uint64_t StaticService.cameraNightVision.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  unsigned __int8 v2 = 14;
  return sub_251B457DC(&v2);
}

uint64_t StaticService.carbonDioxideLevel.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  unsigned __int8 v2 = 19;
  return sub_251B46610(&v2);
}

uint64_t StaticService.carbonDioxidePeakLevel.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  unsigned __int8 v2 = 20;
  return sub_251B46610(&v2);
}

uint64_t StaticService.carbonMonoxideLevel.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  unsigned __int8 v2 = 22;
  return sub_251B46610(&v2);
}

uint64_t StaticService.carbonMonoxidePeakLevel.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  unsigned __int8 v2 = 23;
  return sub_251B46610(&v2);
}

unint64_t StaticService.colorTemperature.getter()
{
  return sub_251DC058C(26);
}

Swift::Int StaticService.currentFanState.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  char v2 = 32;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.Swift::Int value = 0;
  }
  return v4.value;
}

unint64_t StaticService.currentHorizontalTilt.getter()
{
  return sub_251DC058C(35);
}

unint64_t StaticService.currentTilt.getter()
{
  return sub_251DC058C(45);
}

unint64_t StaticService.currentVerticalTilt.getter()
{
  return sub_251DC058C(46);
}

Swift::Int StaticService.currentVisibilityState.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  char v2 = 47;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.Swift::Int value = 0;
  }
  return v4.value;
}

Swift::Int StaticService.filterChangeIndication.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  char v2 = 50;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.Swift::Int value = 0;
  }
  return v4.value;
}

uint64_t StaticService.filterLifeLevel.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  unsigned __int8 v2 = 51;
  return sub_251B46610(&v2);
}

uint64_t StaticService.hue.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  unsigned __int8 v2 = 57;
  return sub_251B46610(&v2);
}

Swift::Int _s13HomeDataModel13StaticServiceV33targetHumidifierDehumidifierStateSo027HMCharacteristicValueTargetghI0VSgvg_0()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  char v2 = -102;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.Swift::Int value = 0;
  }
  return v4.value;
}

Swift::Int StaticService.isConfigured.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  char v2 = 70;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.Swift::Int value = 0;
  }
  return v4.value;
}

Swift::Int StaticService.lockPhysicalControls.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  char v2 = 78;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.Swift::Int value = 0;
  }
  return v4.value;
}

uint64_t StaticService.manufacturer.getter()
{
  uint64_t v1 = type metadata accessor for StaticCharacteristic();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  Swift::Int_optional v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  if (!*(void *)(v5 + 16)) {
    return 0;
  }
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_2519FE568(80);
  if ((v7 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  sub_251DD1000(*(void *)(v5 + 56) + *(void *)(v2 + 72) * v6, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
  unint64_t v8 = &v4[*(int *)(v1 + 24)];
  if (v8[16] == 8)
  {
    uint64_t v9 = *(void *)v8;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v9 = 0;
  }
  sub_251DD0FA0((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t StaticService.model.getter()
{
  uint64_t v1 = type metadata accessor for StaticCharacteristic();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  Swift::Int_optional v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  if (!*(void *)(v5 + 16)) {
    return 0;
  }
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_2519FE568(82);
  if ((v7 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  sub_251DD1000(*(void *)(v5 + 56) + *(void *)(v2 + 72) * v6, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
  unint64_t v8 = &v4[*(int *)(v1 + 24)];
  if (v8[16] == 8)
  {
    uint64_t v9 = *(void *)v8;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v9 = 0;
  }
  sub_251DD0FA0((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t StaticService.nightVision.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  unsigned __int8 v2 = 86;
  return sub_251B457DC(&v2);
}

uint64_t StaticService.nitrogenDioxideDensity.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  unsigned __int8 v2 = 87;
  return sub_251B46610(&v2);
}

uint64_t StaticService.outletInUse.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  unsigned __int8 v2 = 91;
  return sub_251B457DC(&v2);
}

uint64_t StaticService.ozoneDensity.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  unsigned __int8 v2 = 94;
  return sub_251B46610(&v2);
}

uint64_t StaticService.pM10Density.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  unsigned __int8 v2 = 95;
  return sub_251B46610(&v2);
}

uint64_t StaticService.pM2_5Density.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  unsigned __int8 v2 = 96;
  return sub_251B46610(&v2);
}

unint64_t StaticService.remainingDuration.getter()
{
  return sub_251DC058C(112);
}

Swift::Int StaticService.rotationDirection.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  char v2 = 114;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.Swift::Int value = 0;
  }
  return v4.value;
}

unint64_t StaticService.setDuration.getter()
{
  return sub_251DC058C(123);
}

Swift::Int StaticService.slatType.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  char v2 = 125;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.Swift::Int value = 0;
  }
  return v4.value;
}

uint64_t StaticService.saturation.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  unsigned __int8 v2 = 116;
  return sub_251B46610(&v2);
}

uint64_t StaticService.statusActive.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  unsigned __int8 v2 = -127;
  return sub_251B457DC(&v2);
}

Swift::Int StaticService.statusFault.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  char v2 = -126;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.Swift::Int value = 0;
  }
  return v4.value;
}

Swift::Int StaticService.statusJammed.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  char v2 = -125;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.Swift::Int value = 0;
  }
  return v4.value;
}

Swift::Int StaticService.statusLowBattery.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  char v2 = -124;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.Swift::Int value = 0;
  }
  return v4.value;
}

Swift::Int StaticService.statusTampered.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  char v2 = -123;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.Swift::Int value = 0;
  }
  return v4.value;
}

uint64_t StaticService.sulphurDioxideDensity.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  unsigned __int8 v2 = -121;
  return sub_251B46610(&v2);
}

Swift::Int StaticService.swingMode.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  char v2 = -110;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.Swift::Int value = 0;
  }
  return v4.value;
}

Swift::Int StaticService.targetFanState.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  char v2 = -106;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.Swift::Int value = 0;
  }
  return v4.value;
}

unint64_t StaticService.targetHorizontalTilt.getter()
{
  return sub_251DC058C(153);
}

uint64_t StaticService.targetRelativeHumidity.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  unsigned __int8 v2 = -97;
  return sub_251B46610(&v2);
}

unint64_t StaticService.targetTilt.getter()
{
  return sub_251DC058C(163);
}

unint64_t StaticService.targetVerticalTilt.getter()
{
  return sub_251DC058C(164);
}

Swift::Int StaticService.temperatureUnits.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  char v2 = -90;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.Swift::Int value = 0;
  }
  return v4.value;
}

Swift::Int StaticService.valveType.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  char v2 = -89;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.Swift::Int value = 0;
  }
  return v4.value;
}

uint64_t StaticService.version.getter()
{
  uint64_t v1 = type metadata accessor for StaticCharacteristic();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  Swift::Int_optional v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  if (!*(void *)(v5 + 16)) {
    return 0;
  }
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_2519FE568(168);
  if ((v7 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  sub_251DD1000(*(void *)(v5 + 56) + *(void *)(v2 + 72) * v6, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
  unint64_t v8 = &v4[*(int *)(v1 + 24)];
  if (v8[16] == 8)
  {
    uint64_t v9 = *(void *)v8;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v9 = 0;
  }
  sub_251DD0FA0((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t StaticService.volatileOrganicCompoundDensity.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  unsigned __int8 v2 = -87;
  return sub_251B46610(&v2);
}

unint64_t StaticService.volume.getter()
{
  return sub_251DC058C(170);
}

unint64_t sub_251DC058C(char a1)
{
  uint64_t v5 = *(void *)(v1 + *(int *)(type metadata accessor for StaticService() + 112));
  char v4 = a1;
  return (unint64_t)StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v4);
}

uint64_t StaticService.waterLevel.getter()
{
  uint64_t v3 = *(void *)(v0 + *(int *)(type metadata accessor for StaticService() + 112));
  unsigned __int8 v2 = -83;
  return sub_251B46610(&v2);
}

uint64_t StaticService.roomId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + *(int *)(type metadata accessor for StaticService() + 60));
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v4 - 8);
  unint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251ABDFB8(v3, (uint64_t)v6);
  uint64_t v7 = sub_251F34DA0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(a1, v6, v7);
  }
  __break(1u);
  return result;
}

uint64_t sub_251DC073C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(v2 + *(int *)(a1 + 60));
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251ABDFB8(v4, (uint64_t)v7);
  uint64_t v8 = sub_251F34DA0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(a2, v7, v8);
  }
  __break(1u);
  return result;
}

uint64_t StaticService.set(includedInStatus:)(char a1)
{
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 80) = a1;
  return MEMORY[0x270FA2498](sub_251DC086C, 0, 0);
}

uint64_t sub_251DC086C()
{
  *(void *)(v0 + 24) = sub_251F35C80();
  *(void *)(v0 + 32) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251DC0904, v2, v1);
}

uint64_t sub_251DC0904()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251DC099C, 0, 0);
}

uint64_t sub_251DC099C()
{
  *(void *)(v0 + 40) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251DC0A28, v2, v1);
}

uint64_t sub_251DC0A28()
{
  swift_release();
  *(void *)(v0 + 48) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251DC0A9C, 0, 0);
}

uint64_t sub_251DC0A9C()
{
  *(void *)(v0 + 56) = sub_251F34D50();
  *(void *)(v0 + 64) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251DC0B30, v2, v1);
}

uint64_t sub_251DC0B30()
{
  uint64_t v1 = (void *)v0[7];
  uint64_t v2 = (void *)v0[6];
  swift_release();
  v0[9] = objc_msgSend(v2, sel_serviceFor_, v1);

  return MEMORY[0x270FA2498](sub_251DC0BC0, 0, 0);
}

uint64_t sub_251DC0BC0()
{
  uint64_t v1 = *(void **)(v0 + 72);
  if (v1)
  {
    char v2 = *(unsigned char *)(v0 + 80);
    id v3 = v1;
    HMService.contributesToHomeStatus.setter(v2);
  }
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t StaticService.description.getter()
{
  BYTE8(v3) = 0;
  sub_251F36400();
  sub_251F35800();
  uint64_t v1 = type metadata accessor for StaticService();
  swift_bridgeObjectRetain();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  sub_251F34DA0();
  sub_251DD0A7C((unint64_t *)&qword_26B21E6B0, MEMORY[0x270FA95A8]);
  sub_251F36AB0();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  *(void *)&long long v3 = *(unsigned __int8 *)(v0 + *(int *)(v1 + 88));
  ServiceKind.localizedDescription.getter();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  ServiceKind.localizedDescription.getter();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  return *(void *)((char *)&v3 + 1);
}

uint64_t static StaticService.< infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(int *)(type metadata accessor for StaticService() + 24);
  if (*(unsigned char *)(a2 + v4)) {
    return 0;
  }
  if (*(unsigned char *)(a1 + v4)) {
    return 1;
  }
  return MEMORY[0x2533A9CA0](a1, a2) & 1;
}

uint64_t sub_251DC0E6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(int *)(a3 + 24);
  if (*(unsigned char *)(a2 + v3)) {
    return 0;
  }
  if (*(unsigned char *)(a1 + v3) == 1) {
    return 1;
  }
  return MEMORY[0x2533A9CA0]() & 1;
}

uint64_t sub_251DC0EB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(int *)(a3 + 24);
  if (*(unsigned char *)(a1 + v3))
  {
    char v4 = 1;
  }
  else if (*(unsigned char *)(a2 + v3) == 1)
  {
    char v4 = 0;
  }
  else
  {
    char v4 = MEMORY[0x2533A9CA0](a2, a1) ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_251DC0F0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(int *)(a3 + 24);
  if (*(unsigned char *)(a2 + v3))
  {
    char v4 = 1;
  }
  else if (*(unsigned char *)(a1 + v3) == 1)
  {
    char v4 = 0;
  }
  else
  {
    char v4 = MEMORY[0x2533A9CA0]() ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_251DC0F54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(int *)(a3 + 24);
  if (*(unsigned char *)(a1 + v3)) {
    return 0;
  }
  if (*(unsigned char *)(a2 + v3) == 1) {
    return 1;
  }
  return MEMORY[0x2533A9CA0](a2, a1) & 1;
}

uint64_t Collection<>.staticCharacteristic(for:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for StaticCharacteristic();
  uint64_t v3 = sub_251F35910();
  uint64_t v4 = *(void *)(v2 - 8);
  if (*(void *)(v3 + 16))
  {
    sub_251DD1000(v3+ ((*(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80)), a1, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
    uint64_t v5 = 0;
  }
  else
  {
    uint64_t v5 = 1;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(a1, v5, 1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_251DC10BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + *(int *)(type metadata accessor for StaticService() + 112));
  swift_bridgeObjectRetain();
  sub_251A95CF0((uint64_t (*)(char *))sub_251DD1068, v3, a2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_251DC114C@<X0>(uint64_t *a1@<X0>, void **a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v49 = a6;
  int v51 = a5;
  uint64_t v48 = a4;
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x270FA5388](updated);
  uint64_t v13 = (uint64_t *)((char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2203A0);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F240);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v19 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *a1;
  Swift::Int_optional v21 = *a2;
  sub_251A1B128(a3, (uint64_t)v16, &qword_26B2203A0);
  uint64_t v22 = type metadata accessor for StateSnapshot(0);
  int v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48))(v16, 1, v22);
  id v50 = v21;
  if (v23 == 1)
  {
    sub_251A1B064((uint64_t)v16, &qword_26B2203A0);
    uint64_t v24 = type metadata accessor for StaticAccessory(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v19, 1, 1, v24);
    uint64_t v25 = v49;
  }
  else
  {
    char v47 = a7;
    uint64_t v26 = *(void *)&v16[*(int *)(v22 + 32)];
    swift_bridgeObjectRetain();
    sub_251DD0FA0((uint64_t)v16, type metadata accessor for StateSnapshot);
    id v27 = objc_msgSend(v21, sel_uniqueIdentifier);
    uint64_t v45 = sub_251F34DA0();
    __int16 v46 = &v42;
    uint64_t v28 = *(void *)(v45 - 8);
    MEMORY[0x270FA5388](v45);
    uint64_t v30 = (char *)&v42 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_251F34D80();

    if (*(void *)(v26 + 16) && (unint64_t v31 = sub_2519FE584((uint64_t)v30), (v32 & 1) != 0))
    {
      unint64_t v33 = v31;
      uint64_t v43 = *(void *)(v26 + 56);
      uint64_t v44 = type metadata accessor for StaticAccessory(0);
      uint64_t v34 = *(void *)(v44 - 8);
      sub_251DD1000(v43 + *(void *)(v34 + 72) * v33, (uint64_t)v19, type metadata accessor for StaticAccessory);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v19, 0, 1, v44);
    }
    else
    {
      uint64_t v35 = type metadata accessor for StaticAccessory(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v19, 1, 1, v35);
    }
    uint64_t v25 = v49;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v45);
    a7 = v47;
  }
  uint64_t v36 = v48;
  char v37 = v51 & 1;
  *uint64_t v13 = v48;
  swift_storeEnumTagMultiPayload();
  char v52 = v37;
  swift_bridgeObjectRetain();
  id v38 = v36;
  uint64_t v39 = sub_251DC9944((uint64_t)v13, (uint64_t)v38, v50, &v52, 1, (uint64_t)v19, v25);
  sub_251DD0FA0((uint64_t)v13, type metadata accessor for StateSnapshot.UpdateType);
  uint64_t v40 = sub_251DB50F4(v39, v20);
  uint64_t result = sub_251A1B064((uint64_t)v19, &qword_26B21F240);
  *a7 = v40;
  return result;
}

uint64_t sub_251DC15E8@<X0>(void **a1@<X0>, char a2@<W1>, void *a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, void *a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v10 = v9;
  uint64_t v145 = (void *)a4;
  uint64_t v146 = (void *)a7;
  id v147 = a3;
  id v148 = a5;
  uint64_t v142 = a9;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F240);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v18 = (char *)&v127 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v129 = (uint64_t)&v127 - v19;
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  uint64_t v21 = MEMORY[0x270FA5388](updated - 8);
  uint64_t v139 = (uint64_t)&v127 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v136 = (uint64_t)&v127 - v23;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  uint64_t v25 = MEMORY[0x270FA5388](v24 - 8);
  id v27 = (char *)&v127 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = MEMORY[0x270FA5388](v25);
  uint64_t v144 = (char *)&v127 - v29;
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v128 = (uint64_t)&v127 - v31;
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  uint64_t v135 = (uint64_t)&v127 - v33;
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  uint64_t v137 = (uint64_t)&v127 - v35;
  MEMORY[0x270FA5388](v34);
  uint64_t v143 = (char *)&v127 - v36;
  char v37 = *a1;
  if (a2)
  {
    LODWORD(v149) = a6;
    id v38 = a8;
    if (qword_26B21F070 != -1) {
      swift_once();
    }
    uint64_t v39 = qword_26B220CC8;
    id v40 = objc_msgSend(v37, sel_serviceType);
    uint64_t v41 = sub_251F356F0();
    uint64_t v43 = v42;

    v44._uint64_t countAndFlagsBits = v41;
    v44._object = v43;
    ServiceKind.init(rawValue:)(v44);
    uint64_t v45 = v150 == 53 ? 0 : v150;
    char v46 = sub_251DB3E04(v45, v39, (uint64_t (*)(void))ServiceKind.rawValue.getter);
    a8 = v38;
    uint64_t v10 = v9;
    LOBYTE(a6) = (_BYTE)v149;
    if ((v46 & 1) == 0)
    {
      uint64_t v79 = type metadata accessor for StaticService();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 56))(v142, 1, 1, v79);
    }
  }
  int v133 = v18;
  uint64_t v140 = v27;
  int v47 = a6 & 1;
  id v48 = v147;
  id v49 = objc_msgSend(v147, sel_services);
  uint64_t v149 = (uint64_t *)sub_251A1A568(0, (unint64_t *)&qword_26B21F180);
  unint64_t v50 = sub_251F35AC0();

  id v51 = v37;
  unint64_t v52 = sub_251DCA3DC(v50, v51);
  uint64_t v138 = v10;
  swift_bridgeObjectRelease();

  MEMORY[0x270FA5388](v53);
  uint64_t v54 = v145;
  id v55 = v148;
  *(&v127 - 6) = (uint64_t)v145;
  *(&v127 - 5) = (uint64_t)v55;
  *(&v127 - 4) = (uint64_t)v48;
  int v56 = v47;
  *((unsigned char *)&v127 - 24) = v47;
  uint64_t v57 = v146;
  uint64_t v125 = (uint64_t)v146;
  uint64_t v126 = a8;
  uint64_t v58 = v138;
  id v141 = v51;
  uint64_t v131 = sub_251A51AD4((void (*)(id *))sub_251DD0BBC, (uint64_t)(&v127 - 8), v52);
  uint64_t v132 = v58;
  swift_bridgeObjectRelease();
  LODWORD(v138) = v56;
  uint64_t v134 = (uint64_t)a8;
  uint64_t v130 = sub_251DC3B60(v51, v55, v48, v54, v56, v57, a8);
  id v59 = objc_msgSend(v48, sel_services);
  unint64_t v60 = sub_251F35AC0();

  if (v60 >> 62)
  {
LABEL_41:
    swift_bridgeObjectRetain();
    uint64_t v61 = sub_251F366C0();
    if (v61)
    {
LABEL_10:
      uint64_t v149 = (uint64_t *)(v60 & 0xC000000000000001);
      uint64_t v62 = 4;
      while (1)
      {
        if (v149) {
          id v63 = (id)MEMORY[0x2533AB3A0](v62 - 4, v60);
        }
        else {
          id v63 = *(id *)(v60 + 8 * v62);
        }
        uint64_t v64 = v63;
        uint64_t v65 = v62 - 3;
        if (__OFADD__(v62 - 4, 1))
        {
          __break(1u);
          goto LABEL_41;
        }
        id v66 = objc_msgSend(v63, sel_serviceType);
        uint64_t v67 = sub_251F356F0();
        uint64_t v69 = v68;

        if (v67 == sub_251F356F0() && v69 == v70) {
          break;
        }
        char v72 = sub_251F36B10();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v72) {
          goto LABEL_24;
        }

        ++v62;
        if (v65 == v61) {
          goto LABEL_21;
        }
      }
      swift_bridgeObjectRelease_n();
LABEL_24:
      swift_bridgeObjectRelease_n();
      sub_251DD1000((uint64_t)v145, v136, type metadata accessor for StateSnapshot.UpdateType);
      unsigned __int8 v151 = v138;
      uint64_t v81 = type metadata accessor for StaticService();
      uint64_t v82 = *(void *)(v81 - 8);
      uint64_t v83 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v82 + 56);
      v83(v135, 1, 1, v81);
      uint64_t v84 = v129;
      sub_251A1B128((uint64_t)v146, v129, &qword_26B21F240);
      uint64_t v85 = type metadata accessor for StaticAccessory(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v85 - 8) + 48))(v84, 1, v85) == 1)
      {
        sub_251A1B064(v84, &qword_26B21F240);
        uint64_t v86 = v128;
        v83(v128, 1, 1, v81);
      }
      else
      {
        uint64_t v87 = *(void *)(v84 + *(int *)(v85 + 76));
        swift_bridgeObjectRetain();
        sub_251DD0FA0(v84, type metadata accessor for StaticAccessory);
        id v88 = objc_msgSend(v64, sel_uniqueIdentifier);
        uint64_t v89 = sub_251F34DA0();
        uint64_t v149 = &v127;
        uint64_t v129 = v89;
        uint64_t v90 = *(void *)(v89 - 8);
        MEMORY[0x270FA5388](v89);
        uint64_t v92 = (char *)&v127 - ((v91 + 15) & 0xFFFFFFFFFFFFFFF0);
        sub_251F34D80();

        if (*(void *)(v87 + 16) && (unint64_t v93 = sub_2519FE584((uint64_t)v92), (v94 & 1) != 0))
        {
          uint64_t v95 = *(void *)(v87 + 56) + *(void *)(v82 + 72) * v93;
          uint64_t v86 = v128;
          sub_251DD1000(v95, v128, (uint64_t (*)(void))type metadata accessor for StaticService);
          uint64_t v96 = 0;
        }
        else
        {
          uint64_t v96 = 1;
          uint64_t v86 = v128;
        }
        v83(v86, v96, 1, v81);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v90 + 8))(v92, v129);
      }
      uint64_t v76 = v142;
      uint64_t v75 = (uint64_t)v143;
      uint64_t v78 = (uint64_t)v144;
      uint64_t v77 = v134;
      swift_bridgeObjectRetain();
      id v97 = v147;
      uint64_t v98 = (uint64_t *)v148;
      uint64_t v74 = v137;
      sub_251DC26D0(v136, v98, v64, v97, &v151, MEMORY[0x263F8EE78], v135, MEMORY[0x263F8EE78], v137, v86, v77);
      goto LABEL_32;
    }
  }
  else
  {
    uint64_t v61 = *(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v61) {
      goto LABEL_10;
    }
  }
LABEL_21:
  swift_bridgeObjectRelease_n();
  uint64_t v73 = type metadata accessor for StaticService();
  uint64_t v74 = v137;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v73 - 8) + 56))(v137, 1, 1, v73);
  uint64_t v76 = v142;
  uint64_t v75 = (uint64_t)v143;
  uint64_t v77 = v134;
  uint64_t v78 = (uint64_t)v144;
LABEL_32:
  uint64_t v99 = v141;
  sub_251A4ECF0(v74, v75, qword_26B21EE20);
  uint64_t v100 = v139;
  sub_251DD1000((uint64_t)v145, v139, type metadata accessor for StateSnapshot.UpdateType);
  unsigned __int8 v152 = v138;
  sub_251A1B128(v75, v78, qword_26B21EE20);
  uint64_t v101 = (uint64_t)v133;
  sub_251A1B128((uint64_t)v146, (uint64_t)v133, &qword_26B21F240);
  uint64_t v102 = type metadata accessor for StaticAccessory(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v102 - 8) + 48))(v101, 1, v102) == 1)
  {
    id v103 = v99;
    sub_251A1B064(v101, &qword_26B21F240);
    uint64_t v104 = type metadata accessor for StaticService();
    uint64_t v105 = (uint64_t)v140;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v104 - 8) + 56))(v140, 1, 1, v104);
  }
  else
  {
    uint64_t v106 = *(void *)(v101 + *(int *)(v102 + 76));
    id v107 = v99;
    swift_bridgeObjectRetain();
    sub_251DD0FA0(v101, type metadata accessor for StaticAccessory);
    id v108 = objc_msgSend(v107, sel_uniqueIdentifier);
    uint64_t v109 = sub_251F34DA0();
    uint64_t v110 = *(void *)(v109 - 8);
    MEMORY[0x270FA5388](v109);
    uint64_t v112 = (char *)&v127 - ((v111 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_251F34D80();

    if (*(void *)(v106 + 16) && (unint64_t v113 = sub_2519FE584((uint64_t)v112), (v114 & 1) != 0))
    {
      unint64_t v115 = v113;
      uint64_t v116 = *(void *)(v106 + 56);
      uint64_t v117 = type metadata accessor for StaticService();
      uint64_t v118 = *(void *)(v117 - 8);
      uint64_t v119 = v116 + *(void *)(v118 + 72) * v115;
      uint64_t v77 = v134;
      uint64_t v120 = (uint64_t)v140;
      sub_251DD1000(v119, (uint64_t)v140, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v121 = v117;
      uint64_t v76 = v142;
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v118 + 56))(v120, 0, 1, v121);
      uint64_t v100 = v139;
    }
    else
    {
      uint64_t v122 = type metadata accessor for StaticService();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v122 - 8) + 56))(v140, 1, 1, v122);
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v110 + 8))(v112, v109);
    uint64_t v75 = (uint64_t)v143;
    uint64_t v78 = (uint64_t)v144;
    uint64_t v105 = (uint64_t)v140;
    uint64_t v99 = v141;
  }
  swift_bridgeObjectRetain();
  id v123 = v147;
  uint64_t v124 = (uint64_t *)v148;
  sub_251DC26D0(v100, v124, v99, v123, &v152, v131, v78, v130, v76, v105, v77);
  return sub_251A1B064(v75, qword_26B21EE20);
}

uint64_t sub_251DC2278@<X0>(void **a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v57 = (char *)a6;
  uint64_t v54 = a3;
  uint64_t v55 = a7;
  uint64_t v53 = a4;
  uint64_t v56 = a8;
  unsigned __int8 v10 = a5 & 1;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F240);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  uint64_t v17 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v49 - v18;
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x270FA5388](updated - 8);
  uint64_t v22 = *a1;
  uint64_t v51 = (uint64_t)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251DD1000(a2, v51, type metadata accessor for StateSnapshot.UpdateType);
  unsigned __int8 v58 = v10;
  uint64_t v23 = type metadata accessor for StaticService();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56);
  unint64_t v52 = v19;
  v25(v19, 1, 1, v23);
  sub_251A1B128((uint64_t)v57, (uint64_t)v13, &qword_26B21F240);
  uint64_t v26 = type metadata accessor for StaticAccessory(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 48))(v13, 1, v26) == 1)
  {
    id v27 = v22;
    sub_251A1B064((uint64_t)v13, &qword_26B21F240);
    v25(v17, 1, 1, v23);
    uint64_t v29 = v55;
    uint64_t v28 = v56;
    uint64_t v30 = v53;
    uint64_t v31 = v54;
    uint64_t v33 = v51;
    uint64_t v32 = (uint64_t)v52;
  }
  else
  {
    uint64_t v57 = v17;
    uint64_t v34 = *(void *)&v13[*(int *)(v26 + 76)];
    unint64_t v50 = v22;
    id v35 = v22;
    swift_bridgeObjectRetain();
    sub_251DD0FA0((uint64_t)v13, type metadata accessor for StaticAccessory);
    id v36 = objc_msgSend(v35, sel_uniqueIdentifier);
    uint64_t v37 = sub_251F34DA0();
    uint64_t v49 = (uint64_t)&v49;
    uint64_t v38 = v37;
    uint64_t v39 = *(void *)(v37 - 8);
    MEMORY[0x270FA5388](v37);
    uint64_t v41 = (char *)&v49 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_251F34D80();

    if (*(void *)(v34 + 16) && (unint64_t v42 = sub_2519FE584((uint64_t)v41), (v43 & 1) != 0))
    {
      sub_251DD1000(*(void *)(v34 + 56) + *(void *)(v24 + 72) * v42, (uint64_t)v57, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v44 = 0;
    }
    else
    {
      uint64_t v44 = 1;
    }
    uint64_t v28 = v56;
    uint64_t v45 = (uint64_t)v57;
    v25(v57, v44, 1, v23);
    uint64_t v17 = (char *)v45;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v41, v38);
    uint64_t v22 = v50;
    uint64_t v31 = v54;
    uint64_t v29 = v55;
    uint64_t v32 = (uint64_t)v52;
    uint64_t v30 = v53;
    uint64_t v33 = v51;
  }
  swift_bridgeObjectRetain();
  id v46 = v30;
  int v47 = v31;
  return sub_251DC26D0(v33, v47, v22, v46, &v58, MEMORY[0x263F8EE78], v32, MEMORY[0x263F8EE78], v28, (uint64_t)v17, v29);
}

uint64_t sub_251DC26D0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, void *a3@<X2>, void *a4@<X3>, unsigned __int8 *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v166 = a8;
  uint64_t v203 = a6;
  v214 = a2;
  uint64_t v204 = a9;
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  uint64_t v17 = MEMORY[0x270FA5388](updated - 8);
  uint64_t v198 = (uint64_t)&v161 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v210 = (uint64_t)&v161 - v19;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  uint64_t v21 = MEMORY[0x270FA5388](v20 - 8);
  uint64_t v196 = (char *)&v161 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v194 = (uint64_t)&v161 - v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v192 = (char *)&v161 - v25;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
  MEMORY[0x270FA5388](v26 - 8);
  uint64_t v207 = (uint64_t)&v161 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
  uint64_t v29 = MEMORY[0x270FA5388](v28 - 8);
  uint64_t v199 = (uint64_t)&v161 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v29);
  int v165 = *a5;
  uint64_t v197 = (uint64_t)&v161 - v31;
  sub_251DC537C(a4, (uint64_t)&v161 - v31);
  uint64_t v212 = a7;
  int v202 = sub_251DC55DC(a7);
  uint64_t v201 = sub_251DC57F8(a3, a4);
  uint64_t v200 = v32;
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t v34 = *(void *)(*(void *)(v33 - 8) + 64);
  MEMORY[0x270FA5388](v33 - 8);
  id v35 = (char *)&v161 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v36 = objc_msgSend(a4, sel_services);
  sub_251A1A568(0, (unint64_t *)&qword_26B21F180);
  unint64_t v37 = sub_251F35AC0();

  id v38 = a3;
  uint64_t v39 = sub_251DCA10C(v37);
  swift_bridgeObjectRelease();

  if (v39)
  {
    id v40 = objc_msgSend(v39, sel_uniqueIdentifier);

    sub_251F34D80();
    uint64_t v41 = sub_251F34DA0();
    uint64_t v42 = (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))((char *)&v161 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0), 0, 1, v41);
  }
  else
  {
    uint64_t v43 = sub_251F34DA0();
    uint64_t v42 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))((char *)&v161 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v43);
  }
  MEMORY[0x270FA5388](v42);
  uint64_t v44 = (char *)&v161 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v45 = objc_msgSend(a4, sel_isBridged);
  uint64_t v213 = v34;
  uint64_t v195 = &v161;
  if (v45)
  {
    id v46 = objc_msgSend(v214, sel_accessories);
    sub_251A1A568(0, (unint64_t *)&qword_26B21EAF8);
    unint64_t v47 = sub_251F35AC0();

    id v48 = a4;
    uint64_t v49 = sub_251DC9C90(v47, v48);
    swift_bridgeObjectRelease();

    if (v49)
    {
      id v50 = objc_msgSend(v49, sel_uniqueIdentifier);

      sub_251F34D80();
      uint64_t v51 = sub_251F34DA0();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v44, 0, 1, v51);
    }
    else
    {
      uint64_t v53 = sub_251F34DA0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v44, 1, 1, v53);
    }
    uint64_t v34 = v213;
  }
  else
  {
    uint64_t v52 = sub_251F34DA0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))((char *)&v161 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v52);
  }
  int v54 = sub_251DC5E58(a1, a4);
  unsigned int v55 = objc_msgSend(a4, sel_isCalibrating);
  int v206 = sub_251F36160();
  uint64_t v211 = v35;
  uint64_t v193 = v44;
  if ((v206 & 0x10000) != 0
    || (id v56 = objc_msgSend(a4, sel_hdm_matterNodeID)) == 0
    || (uint64_t v57 = v56, *(void *)&v222 = 0, BYTE8(v222) = 1, sub_251F36D80(), v57, BYTE8(v222) == 1))
  {
    uint64_t v187 = 0;
    int v206 = 0;
    int v188 = 1;
  }
  else
  {
    int v188 = 0;
    uint64_t v187 = v222;
  }
  id v58 = objc_msgSend(v38, sel_uniqueIdentifier);
  uint64_t v59 = sub_251F34DA0();
  v189 = &v161;
  uint64_t v60 = *(void *)(v59 - 8);
  uint64_t v61 = *(void *)(v60 + 64);
  MEMORY[0x270FA5388](v59);
  uint64_t v186 = (uint64_t)&v161 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34D80();

  unsigned int v185 = objc_msgSend(v38, sel_isPrimaryService);
  char v62 = sub_251AC52C4();
  unsigned int v191 = v55;
  int v190 = v54;
  if (v62 == 2)
  {
    id v63 = objc_msgSend(v38, sel_serviceType);
    uint64_t v64 = sub_251F356F0();
    id v66 = v65;

    v67._uint64_t countAndFlagsBits = v64;
    v67._object = v66;
    ServiceKind.init(rawValue:)(v67);
    char v68 = v222;
    if (v222 == 53) {
      char v68 = 0;
    }
    LOBYTE(v222) = v68;
    int v164 = ServiceKind.isDoubleHighByDefault.getter();
  }
  else
  {
    int v164 = v62 & 1;
  }
  uint64_t v69 = v207;
  id v70 = objc_msgSend(a4, sel_uniqueIdentifier);
  uint64_t v184 = &v161;
  MEMORY[0x270FA5388](v70);
  uint64_t v183 = (uint64_t)&v161 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34D80();

  id v71 = objc_msgSend(v38, sel_mediaSourceIdentifier);
  uint64_t v215 = v59;
  id v179 = v71;
  if (v71)
  {
    char v72 = v71;
    uint64_t v73 = a1;
    id v182 = objc_msgSend(v71, sel_integerValue);
  }
  else
  {
    uint64_t v73 = a1;
    id v182 = 0;
  }
  id v74 = a4;
  sub_251D0F984(v74, v69);
  uint64_t v75 = type metadata accessor for StaticDeviceMetadata();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v75 - 8) + 56))(v69, 0, 1, v75);
  uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  uint64_t v181 = &v161;
  MEMORY[0x270FA5388](v76 - 8);
  uint64_t v180 = (uint64_t)&v161 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0);
  HMService.dateAdded.getter(v180);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB80);
  unint64_t v78 = (*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80);
  uint64_t v79 = swift_allocObject();
  uint64_t v216 = &v161;
  *(_OWORD *)(v79 + 16) = xmmword_251F38650;
  unint64_t v80 = v79 + v78;
  MEMORY[0x270FA5388](v79);
  uint64_t v81 = (char *)&v161 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v209 = v74;
  id v82 = objc_msgSend(v74, sel_room);
  uint64_t v208 = v73;
  uint64_t v205 = (void (**)(char *, uint64_t, uint64_t))v60;
  if (!v82)
  {
    uint64_t v90 = *(void (**)(void))(v60 + 56);
    uint64_t v89 = v60;
    uint64_t v88 = v215;
    uint64_t v162 = v90;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v90)((char *)&v161 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v215);
    goto LABEL_26;
  }
  uint64_t v83 = v82;
  id v84 = objc_msgSend(v82, sel_uniqueIdentifier);

  MEMORY[0x270FA5388](v85);
  sub_251F34D80();

  uint64_t v86 = *(void (**)(char *, char *, uint64_t))(v60 + 32);
  uint64_t v87 = v60;
  uint64_t v88 = v215;
  v86(v81, (char *)&v161 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0), v215);
  uint64_t v162 = *(void (**)(void))(v87 + 56);
  ((void (*)(char *, void, uint64_t, uint64_t))v162)(v81, 0, 1, v88);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v87 + 48))(v81, 1, v88) == 1)
  {
    uint64_t v89 = (uint64_t)v205;
LABEL_26:
    id v91 = objc_msgSend(v214, sel_roomForEntireHome);
    id v92 = objc_msgSend(v91, sel_uniqueIdentifier);

    MEMORY[0x270FA5388](v93);
    sub_251F34D80();

    (*(void (**)(unint64_t, char *, uint64_t))(v89 + 32))(v80, (char *)&v161 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0), v88);
    sub_251A1B064((uint64_t)v81, &qword_26B21FF90);
    goto LABEL_28;
  }
  v86((char *)v80, v81, v88);
LABEL_28:
  uint64_t v94 = v213;
  uint64_t v95 = (uint64_t)v192;
  uint64_t v96 = v209;
  if (*(void *)(v79 + 16)) {
    uint64_t v97 = sub_251C08E40(v79);
  }
  else {
    uint64_t v97 = MEMORY[0x263F8EE88];
  }
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  id v98 = objc_msgSend(v96, sel_room);
  if (v98)
  {
    id v99 = v98;
    id v100 = objc_msgSend(v98, sel_name);
  }
  else
  {
    id v99 = objc_msgSend(v214, sel_roomForEntireHome);
    id v100 = objc_msgSend(v99, sel_name);
  }
  id v101 = v100;

  uint64_t v102 = sub_251F356F0();
  uint64_t v176 = v103;

  LODWORD(v101) = HMService.shouldShowInDashboard.getter();
  int v174 = HMAccessory.showAsIndividualTiles.getter();
  int v173 = HMService.isFavorite.getter();
  char v104 = HMService.contributesToHomeStatus.getter();
  uint64_t v177 = v102;
  int v175 = (int)v101;
  if (v104) {
    int v163 = HMAccessory.contributesToHomeStatus.getter();
  }
  else {
    int v163 = 0;
  }
  uint64_t v172 = HMService.customIconSFSymbol.getter();
  uint64_t v171 = v105;
  id v106 = objc_msgSend(v38, sel_serviceType);
  uint64_t v107 = sub_251F356F0();
  uint64_t v109 = v108;

  v110._uint64_t countAndFlagsBits = v107;
  v110._object = v109;
  ServiceKind.init(rawValue:)(v110);
  char v111 = v222;
  if (v222 == 53) {
    char v111 = 0;
  }
  char v226 = v111;
  id v112 = objc_msgSend(v38, sel_serviceSubtype);
  if (v112)
  {
    unint64_t v113 = v112;
    uint64_t v114 = sub_251F356F0();
    uint64_t v116 = v115;

    v117._uint64_t countAndFlagsBits = v114;
    v117._object = v116;
    ServiceSubKind.init(rawValue:)(v117);
    char v118 = v222;
    if (v222 == 5) {
      char v118 = 0;
    }
  }
  else
  {
    char v118 = 0;
  }
  uint64_t v216 = (uint64_t *)a10;
  char v225 = v118;
  id v119 = objc_msgSend(v38, sel_associatedServiceType);
  if (v119)
  {
    uint64_t v120 = v119;
    uint64_t v121 = sub_251F356F0();
    id v123 = v122;

    v124._uint64_t countAndFlagsBits = v121;
    v124._object = v123;
    LOBYTE(v119) = ServiceKind.init(rawValue:)(v124);
    char v125 = v222;
    if (v222 == 53) {
      char v125 = 0;
    }
  }
  else
  {
    char v125 = 53;
  }
  uint64_t v126 = (uint64_t)v196;
  uint64_t v196 = (char *)&v161;
  uint64_t v127 = a11;
  char v224 = v125;
  MEMORY[0x270FA5388](v119);
  unint64_t v128 = (v94 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v168 = (uint64_t)&v161 - v128;
  uint64_t v129 = sub_251A1B128((uint64_t)v211, (uint64_t)&v161 - v128, &qword_26B21FF90);
  v170 = &v161;
  MEMORY[0x270FA5388](v129);
  sub_251A1B128(v212, v95, qword_26B21EE20);
  uint64_t v130 = type metadata accessor for StaticService();
  uint64_t v169 = *(void *)(v130 - 8);
  uint64_t v131 = *(uint64_t (**)(uint64_t, uint64_t))(v169 + 48);
  uint64_t v132 = v130;
  int v133 = v131(v95, 1);
  uint64_t v178 = v97;
  if (v133 == 1)
  {
    sub_251A1B064(v95, qword_26B21EE20);
    uint64_t v134 = v162;
    uint64_t v135 = (void (**)(char *, uint64_t, uint64_t))((char *)&v161 - v128);
    uint64_t v136 = v208;
    uint64_t v137 = v209;
  }
  else
  {
    v205[2]((char *)&v161 - v128, v95, v215);
    sub_251DD0FA0(v95, (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t v134 = v162;
    uint64_t v135 = (void (**)(char *, uint64_t, uint64_t))((char *)&v161 - v128);
    uint64_t v136 = v208;
    uint64_t v137 = v209;
    uint64_t v127 = a11;
  }
  uint64_t v205 = v135;
  v134();
  sub_251DD1000(v136, v210, type metadata accessor for StateSnapshot.UpdateType);
  uint64_t v138 = v194;
  sub_251A1B128((uint64_t)v216, v194, qword_26B21EE20);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v131)(v138, 1, v132) == 1)
  {
    sub_251A1B064(v138, qword_26B21EE20);
    uint64_t v139 = 0;
  }
  else
  {
    uint64_t v139 = *(void *)(v138 + *(int *)(v132 + 112));
    swift_bridgeObjectRetain();
    sub_251DD0FA0(v138, (uint64_t (*)(void))type metadata accessor for StaticService);
  }
  *(void *)&long long v222 = v139;
  id v140 = v38;
  StaticCharacteristicsBag.init(updateType:from:previousStaticCharacteristicsBag:coverages:)(v210, v140, (uint64_t *)&v222, v127, (unint64_t *)&v223);
  uint64_t v141 = v136;
  uint64_t v142 = v198;
  sub_251DD1000(v141, v198, type metadata accessor for StateSnapshot.UpdateType);
  sub_251A1B128((uint64_t)v216, v126, qword_26B21EE20);
  int v143 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v131)(v126, 1, v132);
  uint64_t v167 = v132;
  if (v143 == 1)
  {
    sub_251A1B064(v126, qword_26B21EE20);
    uint64_t v144 = 0;
    uint64_t v145 = 0;
  }
  else
  {
    uint64_t v146 = (uint64_t *)(v126 + *(int *)(v132 + 116));
    uint64_t v144 = *v146;
    uint64_t v145 = v146[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_251DD0FA0(v126, (uint64_t (*)(void))type metadata accessor for StaticService);
  }
  uint64_t v147 = v166;
  char v148 = v165;
  LODWORD(v215) = v179 == 0;
  *(void *)&long long v221 = v144;
  *((void *)&v221 + 1) = v145;
  id v149 = v140;
  id v150 = v137;
  unsigned __int8 v151 = v214;
  sub_251E32E38(v150, v142, v149, v151, (uint64_t *)&v221, &v222);
  long long v221 = v222;
  uint64_t v152 = v197;
  uint64_t v153 = v199;
  uint64_t v154 = sub_251A1B128(v197, v199, &qword_26B21F120);
  v214 = &v161;
  char v220 = v148;
  if (!v147) {
    uint64_t v147 = MEMORY[0x263F8EE78];
  }
  MEMORY[0x270FA5388](v154);
  uint64_t v156 = (char *)&v161 - ((v155 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v157 = (uint64_t)v193;
  sub_251A1B128((uint64_t)v193, (uint64_t)v156, &qword_26B21FF90);
  int v158 = sub_251F36160();

  sub_251A1B064((uint64_t)v216, qword_26B21EE20);
  sub_251A1B064(v212, qword_26B21EE20);
  sub_251DD0FA0(v208, type metadata accessor for StateSnapshot.UpdateType);
  sub_251A1B064(v157, &qword_26B21FF90);
  sub_251A1B064((uint64_t)v211, &qword_26B21FF90);
  sub_251A1B064(v152, &qword_26B21F120);
  uint64_t v217 = v187;
  __int16 v218 = v206;
  char v219 = v188;
  uint64_t v159 = v204;
  sub_251DBAF0C(v186, v201, v200, v185, v164 & 1, v190 & 1, v191, v202, v204, v183, (uint64_t)v182, v215, v207, v180, v178, v177, v176, v175 & 1, v174 & 1,
    v173 & 1,
    v163 & 1,
    v172,
    v171,
    &v226,
    &v225,
    &v224,
    v168,
    (uint64_t)v205,
    v203,
    &v223,
    &v221,
    v153,
    &v220,
    v147,
    (uint64_t)v156,
    v158,
    (v158 & 0x1FFFFu) >> 16,
    &v217);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v169 + 56))(v159, 0, 1, v167);
}

uint64_t sub_251DC3B60(void *a1, void *a2, void *a3, void *a4, int a5, void *a6, void *a7)
{
  uint64_t v83 = a6;
  id v84 = a7;
  int v85 = a5;
  id v82 = a4;
  uint64_t v86 = a3;
  id v87 = a1;
  id v88 = a2;
  id v7 = objc_msgSend(a1, sel_serviceType);
  uint64_t v8 = sub_251F356F0();
  unsigned __int8 v10 = v9;

  v11._uint64_t countAndFlagsBits = v8;
  v11._object = v10;
  ServiceKind.init(rawValue:)(v11);
  char v12 = v98;
  if (v98 == 53) {
    char v12 = 0;
  }
  LOBYTE(v98) = v12;
  if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v13 == 0x8000000251F64CE0) {
    goto LABEL_5;
  }
  char v14 = sub_251F36B10();
  swift_bridgeObjectRelease();
  if ((v14 & 1) == 0)
  {
    id v36 = objc_msgSend(v87, sel_serviceType);
    uint64_t v37 = sub_251F356F0();
    uint64_t v39 = v38;

    v40._uint64_t countAndFlagsBits = v37;
    v40._object = v39;
    ServiceKind.init(rawValue:)(v40);
    char v41 = v98;
    if (v98 == 53) {
      char v41 = 0;
    }
    LOBYTE(v98) = v41;
    if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v42 == 0x8000000251F64B90)
    {
LABEL_5:
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
    char v43 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if ((v43 & 1) == 0) {
      return 0;
    }
  }
LABEL_7:
  id v15 = objc_msgSend(v88, sel_accessories);
  sub_251A1A568(0, (unint64_t *)&qword_26B21EAF8);
  unint64_t v16 = sub_251F35AC0();

  unint64_t v17 = MEMORY[0x263F8EE78];
  uint64_t v98 = MEMORY[0x263F8EE78];
  if (v16 >> 62)
  {
LABEL_48:
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_251F366C0();
    swift_bridgeObjectRelease();
    if (v18)
    {
LABEL_9:
      unint64_t v17 = 0;
      unint64_t v92 = v16;
      unint64_t v93 = v16 & 0xC000000000000001;
      unint64_t v89 = v16 + 32;
      uint64_t v90 = v16 & 0xFFFFFFFFFFFFFF8;
      uint64_t v96 = "00-8000-0026BB765291";
      unint64_t v95 = 0x8000000251F65130;
      uint64_t v91 = v18;
      do
      {
        if (v93)
        {
          id v19 = (id)MEMORY[0x2533AB3A0](v17, v16);
          BOOL v20 = __OFADD__(v17++, 1);
          if (v20) {
            goto LABEL_46;
          }
        }
        else
        {
          if (v17 >= *(void *)(v90 + 16)) {
            goto LABEL_47;
          }
          id v19 = *(id *)(v89 + 8 * v17);
          BOOL v20 = __OFADD__(v17++, 1);
          if (v20) {
            goto LABEL_46;
          }
        }
        id v94 = v19;
        id v21 = objc_msgSend(v19, sel_services);
        sub_251A1A568(0, (unint64_t *)&qword_26B21F180);
        unint64_t v22 = sub_251F35AC0();

        if (v22 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v23 = sub_251F366C0();
          if (v23)
          {
LABEL_20:
            unint64_t v16 = 4;
            while (1)
            {
              id v24 = (v22 & 0xC000000000000001) != 0
                  ? (id)MEMORY[0x2533AB3A0](v16 - 4, v22)
                  : *(id *)(v22 + 8 * v16);
              uint64_t v25 = v24;
              unint64_t v26 = v16 - 3;
              if (__OFADD__(v16 - 4, 1)) {
                break;
              }
              id v27 = objc_msgSend(v24, sel_serviceType);
              uint64_t v28 = sub_251F356F0();
              uint64_t v30 = v29;

              v31._uint64_t countAndFlagsBits = v28;
              v31._object = v30;
              ServiceKind.init(rawValue:)(v31);
              char v32 = v97;
              if (v97 == 53) {
                char v32 = 0;
              }
              char v97 = v32;
              if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v33 == v95)
              {
                swift_bridgeObjectRelease_n();

                swift_bridgeObjectRelease();
LABEL_34:
                sub_251F364F0();
                sub_251F36530();
                sub_251F36540();
                sub_251F36500();
                goto LABEL_11;
              }
              char v34 = sub_251F36B10();

              swift_bridgeObjectRelease();
              if (v34)
              {
                swift_bridgeObjectRelease_n();
                goto LABEL_34;
              }
              ++v16;
              if (v26 == v23) {
                goto LABEL_10;
              }
            }
            __break(1u);
LABEL_46:
            __break(1u);
LABEL_47:
            __break(1u);
            goto LABEL_48;
          }
        }
        else
        {
          uint64_t v23 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (v23) {
            goto LABEL_20;
          }
        }
LABEL_10:
        swift_bridgeObjectRelease_n();

LABEL_11:
        unint64_t v16 = v92;
      }
      while (v17 != v91);
      swift_bridgeObjectRelease();
      uint64_t v35 = v98;
      unint64_t v17 = MEMORY[0x263F8EE78];
      if ((v98 & 0x8000000000000000) == 0) {
        goto LABEL_50;
      }
      goto LABEL_62;
    }
  }
  else
  {
    uint64_t v18 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v18) {
      goto LABEL_9;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v35 = MEMORY[0x263F8EE78];
  if ((MEMORY[0x263F8EE78] & 0x8000000000000000) == 0)
  {
LABEL_50:
    if ((v35 & 0x4000000000000000) == 0)
    {
      uint64_t v44 = *(void *)(v35 + 16);
      if (!v44) {
        goto LABEL_63;
      }
      goto LABEL_52;
    }
  }
LABEL_62:
  swift_bridgeObjectRetain();
  uint64_t v44 = sub_251F366C0();
  swift_release();
  if (!v44)
  {
LABEL_63:
    swift_release();
    uint64_t v46 = MEMORY[0x263F8EE78];
    if (!*(void *)(MEMORY[0x263F8EE78] + 16))
    {
LABEL_64:
      uint64_t v59 = MEMORY[0x263F8EE80];
      goto LABEL_65;
    }
LABEL_61:
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CAC0);
    uint64_t v59 = sub_251F36700();
LABEL_65:
    uint64_t v60 = v86;
    uint64_t v98 = v59;
    sub_251DD0BE8(v46, 1, &v98);
    char v61 = v85 & 1;
    swift_bridgeObjectRelease();
    uint64_t v62 = v98;
    id v63 = objc_msgSend(v60, sel_uniqueIdentifiersForBridgedAccessories);
    if (v63)
    {
      uint64_t v64 = v63;
      sub_251F34DA0();
      uint64_t v65 = sub_251F35AC0();

      MEMORY[0x270FA5388](v66);
      v75[0] = v62;
      v75[1] = v82;
      id v76 = v88;
      LOBYTE(v77) = v61;
      unint64_t v78 = v83;
      id v79 = v87;
      unint64_t v80 = v84;
      unint64_t v67 = sub_251A51E88((void (*)(char *))sub_251DD0F74, (uint64_t)&v74, v65);
      swift_release();
LABEL_69:
      swift_bridgeObjectRelease();
      return v67;
    }
    swift_release();
    id v68 = objc_msgSend(v87, sel_linkedServices);
    if (v68)
    {
      uint64_t v69 = v68;
      sub_251A1A568(0, (unint64_t *)&qword_26B21F180);
      id v70 = v60;
      unint64_t v71 = sub_251F35AC0();

      MEMORY[0x270FA5388](v72);
      id v76 = v82;
      id v77 = v88;
      unint64_t v78 = v70;
      LOBYTE(v79) = v61;
      unint64_t v80 = v83;
      uint64_t v81 = v84;
      unint64_t v67 = sub_251A51AD4((void (*)(id *))sub_251DD0F18, (uint64_t)v75, v71);
      goto LABEL_69;
    }
    return 0;
  }
LABEL_52:
  uint64_t v98 = v17;
  sub_251A3E8D4(0, v44 & ~(v44 >> 63), 0);
  if ((v44 & 0x8000000000000000) == 0)
  {
    uint64_t v45 = 0;
    uint64_t v46 = v98;
    unint64_t v95 = v35;
    uint64_t v96 = (char *)(v35 & 0xC000000000000001);
    unint64_t v47 = &qword_26B21F040;
    do
    {
      id v48 = v47;
      uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(v47);
      uint64_t v50 = *(void *)(v49 - 8);
      MEMORY[0x270FA5388](v49);
      uint64_t v52 = (char *)&v82 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
      if (v96) {
        id v53 = (id)MEMORY[0x2533AB3A0](v45, v35);
      }
      else {
        id v53 = *(id *)(v35 + 8 * v45 + 32);
      }
      id v54 = v53;
      uint64_t v55 = *(int *)(v49 + 48);
      id v56 = objc_msgSend(v53, sel_uniqueIdentifier);
      sub_251F34D80();

      *(void *)&v52[v55] = v54;
      uint64_t v98 = v46;
      unint64_t v58 = *(void *)(v46 + 16);
      unint64_t v57 = *(void *)(v46 + 24);
      if (v58 >= v57 >> 1)
      {
        sub_251A3E8D4(v57 > 1, v58 + 1, 1);
        uint64_t v46 = v98;
      }
      ++v45;
      *(void *)(v46 + 16) = v58 + 1;
      unint64_t v47 = v48;
      sub_251A4ECF0((uint64_t)v52, v46+ ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80))+ *(void *)(v50 + 72) * v58, v48);
      uint64_t v35 = v95;
    }
    while (v44 != v45);
    swift_release();
    if (!*(void *)(v46 + 16)) {
      goto LABEL_64;
    }
    goto LABEL_61;
  }
  __break(1u);
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_251DC4424@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, int a5@<W4>, void (*a6)(uint64_t, uint64_t, uint64_t, uint64_t)@<X5>, void *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v10 = v9;
  id v79 = a7;
  id v82 = (char *)a3;
  uint64_t v83 = a6;
  LODWORD(v81) = a5;
  uint64_t v16 = type metadata accessor for StaticService();
  uint64_t v88 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  unint64_t v78 = (char *)v71 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F240);
  MEMORY[0x270FA5388](v18 - 8);
  id v84 = (char *)v71 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  uint64_t v21 = MEMORY[0x270FA5388](v20 - 8);
  uint64_t v80 = (uint64_t)v71 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v85 = (uint64_t)v71 - v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v87 = (uint64_t)v71 - v25;
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x270FA5388](updated - 8);
  uint64_t v86 = (uint64_t)v71 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a2 + 16)) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v88 + 56))(a9, 1, 1, v16);
  }
  unint64_t v28 = sub_2519FE584(a1);
  if ((v29 & 1) == 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v88 + 56))(a9, 1, 1, v16);
  }
  uint64_t v77 = v16;
  id v76 = *(id *)(*(void *)(a2 + 56) + 8 * v28);
  id v30 = objc_msgSend(v76, sel_services);
  sub_251A1A568(0, (unint64_t *)&qword_26B21F180);
  unint64_t v31 = sub_251F35AC0();

  unint64_t v92 = MEMORY[0x263F8EE78];
  if (v31 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_251F366C0();
    swift_bridgeObjectRelease();
    uint64_t v75 = a4;
    if (v16) {
      goto LABEL_5;
    }
LABEL_22:
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v31 = MEMORY[0x263F8EE78];
    uint64_t v16 = v77;
    if ((MEMORY[0x263F8EE78] & 0x8000000000000000) != 0) {
      goto LABEL_46;
    }
    goto LABEL_23;
  }
  uint64_t v16 = *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v75 = a4;
  if (!v16) {
    goto LABEL_22;
  }
LABEL_5:
  uint64_t v73 = v9;
  uint64_t v74 = a8;
  uint64_t v72 = a9;
  if (v16 < 1)
  {
    __break(1u);
LABEL_50:
    id v89 = (id)MEMORY[0x2533AB3A0](0, v31);
    swift_release();
    uint64_t v44 = (uint64_t)v84;
LABEL_28:
    unsigned __int8 v45 = v81 & 1;
    sub_251DD1000((uint64_t)v82, v86, type metadata accessor for StateSnapshot.UpdateType);
    v90[0] = v45;
    uint64_t v47 = v88 + 56;
    uint64_t v46 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v88 + 56);
    v46(v87, 1, 1, v16);
    sub_251A1B128((uint64_t)v83, v44, &qword_26B21F240);
    uint64_t v48 = type metadata accessor for StaticAccessory(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 48))(v44, 1, v48) == 1)
    {
      sub_251A1B064(v44, &qword_26B21F240);
      uint64_t v49 = v85;
    }
    else
    {
      uint64_t v83 = v46;
      uint64_t v50 = v44;
      uint64_t v51 = *(void *)(v44 + *(int *)(v48 + 76));
      swift_bridgeObjectRetain();
      sub_251DD0FA0(v50, type metadata accessor for StaticAccessory);
      id v52 = objc_msgSend(v79, sel_uniqueIdentifier);
      uint64_t v53 = sub_251F34DA0();
      id v79 = v71;
      id v84 = (char *)v53;
      uint64_t v81 = *(void *)(v53 - 8);
      uint64_t v54 = *(void *)(v81 + 64);
      MEMORY[0x270FA5388](v53);
      sub_251F34D80();

      uint64_t v55 = *(void *)(v51 + 16);
      id v82 = (char *)v71 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
      if (v55 && (unint64_t v56 = sub_2519FE584((uint64_t)v71 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0)), (v57 & 1) != 0))
      {
        sub_251DD1000(*(void *)(v51 + 56) + *(void *)(v88 + 72) * v56, v80, (uint64_t (*)(void))type metadata accessor for StaticService);
        uint64_t v58 = 0;
      }
      else
      {
        uint64_t v58 = 1;
      }
      uint64_t v49 = v85;
      uint64_t v59 = v80;
      v83(v80, v58, 1, v16);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v88 + 48))(v59, 1, v16) != 1)
      {
        uint64_t v74 = a8;
        uint64_t v60 = *(void *)(v59 + *(int *)(v16 + 128));
        swift_bridgeObjectRetain();
        sub_251DD0FA0(v59, (uint64_t (*)(void))type metadata accessor for StaticService);
        uint64_t v80 = v60;
        uint64_t v61 = *(void *)(v60 + 16);
        uint64_t v62 = (uint64_t)v82;
        if (v61)
        {
          v71[1] = v47;
          uint64_t v72 = a9;
          uint64_t v73 = v10;
          uint64_t v63 = v80 + ((*(unsigned __int8 *)(v88 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80));
          uint64_t v64 = (void (**)(char *, char *))(v81 + 8);
          uint64_t v88 = *(void *)(v88 + 72);
          swift_bridgeObjectRetain();
          v71[0] = (unint64_t)v64 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
          uint64_t v65 = (uint64_t)v78;
          while (1)
          {
            sub_251DD1000(v63, v65, (uint64_t (*)(void))type metadata accessor for StaticService);
            id v66 = objc_msgSend(v89, sel_uniqueIdentifier);
            MEMORY[0x270FA5388](v66);
            sub_251F34D80();

            LOBYTE(v66) = sub_251F34D70();
            unint64_t v67 = *v64;
            (*v64)((char *)v71 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0), v84);
            if (v66) {
              break;
            }
            sub_251DD0FA0(v65, (uint64_t (*)(void))type metadata accessor for StaticService);
            v63 += v88;
            if (!--v61)
            {
              swift_bridgeObjectRelease();
              a9 = v72;
              uint64_t v16 = v77;
              uint64_t v49 = v85;
              uint64_t v62 = (uint64_t)v82;
              goto LABEL_42;
            }
          }
          swift_bridgeObjectRelease();
          uint64_t v68 = v85;
          sub_251DD0AF0(v65, v85, (uint64_t (*)(void))type metadata accessor for StaticService);
          v83(v68, 0, 1, v77);
          swift_bridgeObjectRelease();
          a9 = v72;
          v67(v82, v84);
        }
        else
        {
LABEL_42:
          v83(v49, 1, 1, v16);
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, char *))(v81 + 8))(v62, v84);
        }
        a8 = v74;
        a4 = v75;
        uint64_t v49 = v85;
        goto LABEL_45;
      }
      (*(void (**)(char *, char *))(v81 + 8))(v82, v84);
      sub_251A1B064(v59, qword_26B21EE20);
      a4 = v75;
      uint64_t v46 = v83;
    }
    v46(v49, 1, 1, v16);
LABEL_45:
    swift_bridgeObjectRetain();
    uint64_t v69 = a4;
    return sub_251DC26D0(v86, v69, v89, v76, v90, MEMORY[0x263F8EE78], v87, MEMORY[0x263F8EE78], a9, v49, a8);
  }
  uint64_t v32 = 0;
  id v89 = (id)0x8000000251F65130;
  do
  {
    if ((v31 & 0xC000000000000001) != 0) {
      id v33 = (id)MEMORY[0x2533AB3A0](v32, v31);
    }
    else {
      id v33 = *(id *)(v31 + 8 * v32 + 32);
    }
    char v34 = v33;
    id v35 = objc_msgSend(v33, sel_serviceType);
    uint64_t v36 = sub_251F356F0();
    id v38 = v37;

    v39._uint64_t countAndFlagsBits = v36;
    v39._object = v38;
    ServiceKind.init(rawValue:)(v39);
    unsigned __int8 v40 = v91;
    if (v91 == 53) {
      unsigned __int8 v40 = 0;
    }
    v90[1] = v40;
    if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v41 == v89)
    {
      swift_bridgeObjectRelease();
LABEL_8:
      sub_251F364F0();
      sub_251F36530();
      sub_251F36540();
      sub_251F36500();
      goto LABEL_9;
    }
    char v42 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v42) {
      goto LABEL_8;
    }

LABEL_9:
    ++v32;
  }
  while (v16 != v32);
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v31 = v92;
  a9 = v72;
  uint64_t v10 = v73;
  a8 = v74;
  a4 = v75;
  uint64_t v16 = v77;
  if ((v92 & 0x8000000000000000) == 0)
  {
LABEL_23:
    if ((v31 & 0x4000000000000000) != 0) {
      goto LABEL_46;
    }
    if (*(void *)(v31 + 16)) {
      goto LABEL_25;
    }
LABEL_47:

    swift_release();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v88 + 56))(a9, 1, 1, v16);
  }
LABEL_46:
  swift_bridgeObjectRetain();
  uint64_t v70 = sub_251F366C0();
  uint64_t result = swift_release();
  if (!v70) {
    goto LABEL_47;
  }
LABEL_25:
  if ((v31 & 0xC000000000000001) != 0) {
    goto LABEL_50;
  }
  uint64_t v44 = (uint64_t)v84;
  if (*(void *)(v31 + 16))
  {
    id v89 = *(id *)(v31 + 32);
    swift_release();
    goto LABEL_28;
  }
  __break(1u);
  return result;
}

uint64_t sub_251DC4E10@<X0>(id *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v59 = a7;
  uint64_t v62 = a3;
  uint64_t v63 = a6;
  uint64_t v61 = a4;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F240);
  MEMORY[0x270FA5388](v13 - 8);
  id v15 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  uint64_t v60 = (uint64_t)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v66 = (uint64_t)&v57 - v19;
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x270FA5388](updated - 8);
  uint64_t v65 = (uint64_t)&v57 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v64 = *a1;
  id v22 = objc_msgSend(v64, sel_serviceType);
  uint64_t v23 = sub_251F356F0();
  uint64_t v25 = v24;

  v26._uint64_t countAndFlagsBits = v23;
  v26._object = v25;
  ServiceKind.init(rawValue:)(v26);
  unsigned __int8 v27 = v68;
  if (v68 == 53) {
    unsigned __int8 v27 = 0;
  }
  v67[1] = v27;
  if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v28 == 0x8000000251F65130)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v29 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if ((v29 & 1) == 0)
    {
      uint64_t v53 = type metadata accessor for StaticService();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(a8, 1, 1, v53);
    }
  }
  uint64_t v58 = a8;
  sub_251DD1000(a2, v65, type metadata accessor for StateSnapshot.UpdateType);
  v67[0] = a5 & 1;
  uint64_t v30 = type metadata accessor for StaticService();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 56);
  v32(v66, 1, 1, v30);
  sub_251A1B128(v63, (uint64_t)v15, &qword_26B21F240);
  uint64_t v33 = type metadata accessor for StaticAccessory(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 48))(v15, 1, v33) != 1)
  {
    uint64_t v63 = v8;
    uint64_t v42 = *(void *)&v15[*(int *)(v33 + 76)];
    id v43 = v64;
    swift_bridgeObjectRetain();
    sub_251DD0FA0((uint64_t)v15, type metadata accessor for StaticAccessory);
    id v44 = objc_msgSend(v43, sel_uniqueIdentifier);
    uint64_t v45 = sub_251F34DA0();
    uint64_t v57 = (uint64_t)&v57;
    uint64_t v46 = *(void *)(v45 - 8);
    MEMORY[0x270FA5388](v45);
    uint64_t v48 = (char *)&v57 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_251F34D80();

    if (*(void *)(v42 + 16))
    {
      unint64_t v49 = sub_2519FE584((uint64_t)v48);
      uint64_t v39 = v59;
      if (v50)
      {
        uint64_t v51 = *(void *)(v42 + 56) + *(void *)(v31 + 72) * v49;
        uint64_t v36 = v60;
        sub_251DD1000(v51, v60, (uint64_t (*)(void))type metadata accessor for StaticService);
        uint64_t v52 = 0;
LABEL_16:
        v32(v36, v52, 1, v30);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v46 + 8))(v48, v45);
        uint64_t v38 = v58;
        id v41 = v62;
        unsigned __int8 v40 = v61;
        id v37 = v64;
        goto LABEL_17;
      }
      uint64_t v52 = 1;
    }
    else
    {
      uint64_t v52 = 1;
      uint64_t v39 = v59;
    }
    uint64_t v36 = v60;
    goto LABEL_16;
  }
  id v34 = v64;
  id v35 = v64;
  sub_251A1B064((uint64_t)v15, &qword_26B21F240);
  uint64_t v36 = v60;
  v32(v60, 1, 1, v30);
  id v37 = v34;
  uint64_t v38 = v58;
  uint64_t v39 = v59;
  unsigned __int8 v40 = v61;
  id v41 = v62;
LABEL_17:
  swift_bridgeObjectRetain();
  id v55 = v40;
  unint64_t v56 = v41;
  return sub_251DC26D0(v65, v56, v37, v55, v67, MEMORY[0x263F8EE78], v66, MEMORY[0x263F8EE78], v38, v36, v39);
}

uint64_t sub_251DC537C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = objc_msgSend(self, sel_processInfo);
  id v5 = objc_msgSend(v4, sel_processName);

  uint64_t v6 = sub_251F356F0();
  uint64_t v8 = v7;

  if (v6 == 0x6F42676E69727053 && v8 == 0xEB00000000647261)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v10 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if ((v10 & 1) == 0)
    {
      id v11 = objc_msgSend(a1, sel_softwareUpdateController);
      if (v11)
      {
        char v12 = v11;
        id v13 = objc_msgSend(v11, sel_availableUpdate);

        if (v13)
        {
          id v14 = a1;
          return sub_251C4019C(v13, v14, a2);
        }
      }
      if (objc_msgSend(a1, sel_isFirmwareUpdateAvailable))
      {
        id v21 = objc_msgSend(a1, sel_uniqueIdentifier);
        sub_251F34D80();

        uint64_t v22 = type metadata accessor for StaticSoftwareUpdate(0);
        type metadata accessor for StaticSoftwareUpdate.Kind(0);
        swift_storeEnumTagMultiPayload();
        uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
        uint64_t v19 = a2;
        uint64_t v20 = 0;
        uint64_t v18 = v22;
        goto LABEL_13;
      }
    }
  }
  uint64_t v16 = type metadata accessor for StaticSoftwareUpdate(0);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a2;
  uint64_t v20 = 1;
LABEL_13:
  return v17(v19, v20, 1, v18);
}

uint64_t sub_251DC55DC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  MEMORY[0x270FA5388](v2 - 8);
  id v4 = &v12[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for StaticService();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_251A1B128(a1, (uint64_t)v4, qword_26B21EE20);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_251A1B064((uint64_t)v4, qword_26B21EE20);
    return 2;
  }
  sub_251DD0AF0((uint64_t)v4, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticService);
  uint64_t v10 = *(void *)&v8[*(int *)(v5 + 112)];
  uint64_t v14 = v10;
  char v13 = 11;
  Swift::Int_optional v15 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v13);
  if (!v15.is_nil && v15.value <= 9)
  {
    sub_251DD0FA0((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticService);
    return 1;
  }
  uint64_t v14 = v10;
  char v13 = -124;
  Swift::Int_optional v16 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v13);
  if (v16.is_nil)
  {
    sub_251DD0FA0((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticService);
  }
  else
  {
    Swift::Int value = v16.value;
    sub_251DD0FA0((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticService);
    if (value == 1) {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_251DC57F8(void *a1, void *a2)
{
  id v4 = objc_msgSend(a1, sel_serviceType);
  uint64_t v5 = sub_251F356F0();
  uint64_t v7 = v6;

  v8._uint64_t countAndFlagsBits = v5;
  v8._object = v7;
  ServiceKind.init(rawValue:)(v8);
  char v9 = v50;
  if (v50 == 53) {
    char v9 = 0;
  }
  v49[14] = v9;
  if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v10 == 0x8000000251F650A0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v11 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      id v19 = objc_msgSend(a1, sel_name);
      uint64_t v20 = sub_251F356F0();

      return v20;
    }
  }
  id v12 = objc_msgSend(a2, sel_category);
  id v13 = objc_msgSend(v12, sel_categoryType);

  uint64_t v14 = sub_251F356F0();
  uint64_t v16 = v15;

  if (v14 == sub_251F356F0() && v16 == v17) {
    goto LABEL_9;
  }
  char v18 = sub_251F36B10();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v18) {
    goto LABEL_16;
  }
  id v21 = objc_msgSend(a2, sel_category);
  id v22 = objc_msgSend(v21, sel_categoryType);

  uint64_t v23 = sub_251F356F0();
  uint64_t v25 = v24;

  if (v23 == sub_251F356F0() && v25 == v26)
  {
LABEL_9:
    swift_bridgeObjectRelease_n();
  }
  else
  {
    sub_251F36B10();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
LABEL_16:
  uint64_t v27 = sub_251F356B0();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(void *)(v28 + 64);
  MEMORY[0x270FA5388](v27);
  uint64_t v30 = &v49[-((v29 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v31 = sub_251F35660();
  MEMORY[0x270FA5388](v31);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v28 + 16))(v30, v30, v27);
  if (qword_26B21F148 != -1) {
    swift_once();
  }
  uint64_t v32 = (void *)qword_26B220CD0;
  uint64_t v33 = sub_251F34DE0();
  MEMORY[0x270FA5388](v33 - 8);
  id v34 = v32;
  sub_251F34DD0();
  uint64_t v20 = sub_251F35750();
  (*(void (**)(unsigned char *, uint64_t))(v28 + 8))(v30, v27);
  id v35 = objc_msgSend(a1, sel_configuredName);
  if (v35)
  {
    uint64_t v36 = v35;
    uint64_t v37 = sub_251F356F0();
    uint64_t v39 = v38;

    id v40 = objc_msgSend(a1, sel_defaultName);
    if (v40)
    {
      id v41 = v40;
      uint64_t v42 = sub_251F356F0();
      uint64_t v44 = v43;

      if (v42 == v37 && v44 == v39)
      {
        swift_bridgeObjectRelease_n();
        return v20;
      }
      char v45 = sub_251F36B10();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v45) {
        return v20;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  id v46 = objc_msgSend(a1, sel_configuredName);
  if (v46)
  {
    uint64_t v47 = v46;
    uint64_t v20 = sub_251F356F0();
    swift_bridgeObjectRelease();
  }
  return v20;
}

unint64_t sub_251DC5E58(uint64_t a1, void *a2)
{
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x270FA5388](updated);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251DD1000(a1, (uint64_t)v6, type metadata accessor for StateSnapshot.UpdateType);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = *((void *)v6 + 1);
    int v8 = v6[16];
    if (v8 == 4)
    {
      swift_bridgeObjectRelease();
      id v9 = objc_msgSend(a2, sel_uniqueIdentifier);
      uint64_t v10 = sub_251F34DA0();
      uint64_t v11 = *(void *)(v10 - 8);
      MEMORY[0x270FA5388](v10);
      id v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_251F34D80();

      if (*(void *)(v7 + 16) && (unint64_t v14 = sub_2519FE584((uint64_t)v13), (v15 & 1) != 0))
      {
        uint64_t v16 = *(unsigned __int8 *)(*(void *)(v7 + 56) + v14);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      }
      else
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
        return (unint64_t)objc_msgSend(a2, sel_isReachable);
      }
      return v16;
    }
    sub_251B286EC(*(void *)v6, *((void *)v6 + 1), v8);
  }
  else
  {
    sub_251DD0FA0((uint64_t)v6, type metadata accessor for StateSnapshot.UpdateType);
  }
  return (objc_msgSend(a2, sel_isReachable) & 1) != 0
      || objc_msgSend(a2, sel_suspendedState) == (id)3
      || objc_msgSend(a2, sel_suspendedState) == (id)2;
}

uint64_t sub_251DC60C4()
{
  uint64_t result = sub_251C0913C((uint64_t)&unk_270263FC8);
  qword_26B220CC8 = result;
  return result;
}

uint64_t sub_251DC60EC()
{
  uint64_t result = sub_251C0913C((uint64_t)&unk_27025F148);
  qword_269BF31F0 = result;
  return result;
}

uint64_t sub_251DC6114()
{
  uint64_t result = sub_251C0913C((uint64_t)&unk_2702627D0);
  qword_269BF31F8 = result;
  return result;
}

uint64_t sub_251DC613C()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v66 = (char *)&v51 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
  MEMORY[0x270FA5388](v2 - 8);
  id v4 = (char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for StaticService();
  __swift_allocate_value_buffer(v5, qword_269BF3200);
  uint64_t v6 = __swift_project_value_buffer(v5, (uint64_t)qword_269BF3200);
  if (qword_269B9C4A8 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_251F34DA0();
  uint64_t v8 = __swift_project_value_buffer(v7, (uint64_t)qword_269BF3230);
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void (**)(char *))(v9 + 16);
  v12(v11);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t v65 = &v51;
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v67 = v14;
  char v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34D30();
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
  id v64 = v15;
  uint64_t result = v16(v15, 1, v7);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v60 = v11;
    uint64_t v61 = &v51;
    uint64_t v62 = v6;
    uint64_t v18 = type metadata accessor for StaticDeviceMetadata();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v4, 1, 1, v18);
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    MEMORY[0x270FA5388](v19 - 8);
    id v21 = (char *)&v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_251F34CB0();
    uint64_t v22 = sub_251F34D20();
    uint64_t v23 = *(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
    uint64_t v58 = v21;
    v23(v21, 0, 1, v22);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB80);
    unint64_t v24 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v25 = swift_allocObject();
    long long v55 = xmmword_251F38650;
    *(_OWORD *)(v25 + 16) = xmmword_251F38650;
    unint64_t v26 = v25 + v24;
    if (qword_269B9C418 != -1) {
      swift_once();
    }
    uint64_t v27 = type metadata accessor for StaticRoom(0);
    uint64_t v28 = __swift_project_value_buffer(v27, (uint64_t)qword_269BA2558);
    ((void (*)(unint64_t, uint64_t, uint64_t))v12)(v26, v28, v7);
    uint64_t v29 = *(void *)(v25 + 16);
    uint64_t v63 = v4;
    uint64_t v59 = &v51;
    if (v29) {
      uint64_t v52 = sub_251C08E40(v25);
    }
    else {
      uint64_t v52 = MEMORY[0x263F8EE88];
    }
    uint64_t v30 = v67;
    swift_setDeallocating();
    swift_arrayDestroy();
    uint64_t v31 = swift_deallocClassInstance();
    uint64_t v57 = &v51;
    uint64_t v32 = (uint64_t *)(v28 + *(int *)(v27 + 20));
    uint64_t v33 = v32[1];
    uint64_t v56 = *v32;
    v76[0] = 28;
    char v75 = 5;
    char v74 = 53;
    MEMORY[0x270FA5388](v31);
    unint64_t v34 = (v30 + 15) & 0xFFFFFFFFFFFFFFF0;
    id v35 = *(uint64_t (**)(void))(v9 + 56);
    uint64_t v53 = (uint64_t)&v51 - v34;
    uint64_t v36 = v35();
    uint64_t v54 = &v51;
    MEMORY[0x270FA5388](v36);
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v35)((char *)&v51 - v34, 1, 1, v7);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F228);
    uint64_t v37 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B21F0D8) - 8);
    unint64_t v38 = (*(unsigned __int8 *)(*(void *)v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v37 + 80);
    uint64_t v39 = swift_allocObject();
    *(_OWORD *)(v39 + 16) = v55;
    id v40 = (unsigned char *)(v39 + v38);
    uint64_t v41 = v37[14];
    *id v40 = 105;
    uint64_t v42 = qword_269B9C470;
    *(void *)&long long v55 = v33;
    swift_bridgeObjectRetain();
    if (v42 != -1) {
      swift_once();
    }
    uint64_t v43 = type metadata accessor for StaticCharacteristic();
    uint64_t v44 = __swift_project_value_buffer(v43, (uint64_t)qword_269BA3428);
    sub_251DD1000(v44, (uint64_t)&v40[v41], (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
    unint64_t v73 = sub_2519FB260(v39);
    uint64_t v45 = MEMORY[0x263F8EE78];
    unint64_t v46 = sub_2519FBB0C(MEMORY[0x263F8EE78]);
    unint64_t v47 = sub_2519FBDBC(v45);
    *(void *)&long long v72 = v46;
    *((void *)&v72 + 1) = v47;
    uint64_t v48 = type metadata accessor for StaticSoftwareUpdate(0);
    uint64_t v49 = (uint64_t)v66;
    uint64_t v50 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v66, 1, 1, v48);
    char v71 = 0;
    MEMORY[0x270FA5388](v50);
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v35)((char *)&v51 - v34, 1, 1, v7);
    uint64_t v68 = 0;
    __int16 v69 = 0;
    char v70 = 1;
    return sub_251DBAF0C((uint64_t)v60, 0x4C20656C706D6153, 0xEC00000074686769, 1, 0, 1, 0, 0, v62, (uint64_t)v64, 0, 1, (uint64_t)v63, (uint64_t)v58, v52, v56, v55, 0, 0,
             0,
             1,
             0xD000000000000012,
             0x8000000251F655C0,
             v76,
             &v75,
             &v74,
             v53,
             (uint64_t)&v51 - v34,
             v45,
             (uint64_t *)&v73,
             &v72,
             v49,
             &v71,
             v45,
             (uint64_t)&v51 - v34,
             0,
             1,
             &v68);
  }
  return result;
}

uint64_t sub_251DC695C(uint64_t a1)
{
  return sub_251DC6994(a1, qword_269BF3218);
}

uint64_t sub_251DC6978(uint64_t a1)
{
  return sub_251DC6994(a1, qword_269BF3230);
}

uint64_t sub_251DC6994(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_251F34DA0();
  __swift_allocate_value_buffer(v3, a2);
  uint64_t v4 = __swift_project_value_buffer(v3, (uint64_t)a2);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34D30();
  uint64_t v8 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, v3);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(v4, v7, v3);
  }
  __break(1u);
  return result;
}

uint64_t StaticService.copyReplacing(matterEndpointPath:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v81 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v69 = (uint64_t)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = v9;
  uint64_t v78 = *(void *)a1;
  int v10 = *(unsigned __int16 *)(a1 + 8);
  int v76 = *(unsigned __int8 *)(a1 + 10);
  int v77 = v10;
  uint64_t v11 = sub_251F34DA0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x270FA5388](v11);
  unint64_t v14 = (v13 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v80 = (uint64_t)&v52 - v14;
  char v15 = *(void (**)(void))(v12 + 16);
  v15();
  uint64_t v16 = (int *)type metadata accessor for StaticService();
  uint64_t v17 = v16[6];
  uint64_t v18 = (uint64_t *)(v2 + v16[5]);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  uint64_t v75 = v20;
  uint64_t v73 = v19;
  int v79 = *(unsigned __int8 *)(v2 + v17);
  int v21 = *(unsigned __int8 *)(v2 + v16[7]);
  int v74 = *(unsigned __int8 *)(v2 + v16[8]);
  uint64_t v22 = v16[9];
  int v71 = *(unsigned __int8 *)(v2 + v16[10]);
  int v72 = v21;
  int v70 = *(unsigned __int8 *)(v2 + v22);
  MEMORY[0x270FA5388](v16);
  uint64_t v68 = (uint64_t)&v52 - v14;
  v15();
  uint64_t v23 = v16[13];
  uint64_t v24 = v2 + v16[12];
  uint64_t v67 = *(void *)v24;
  int v66 = *(unsigned __int8 *)(v24 + 8);
  sub_251A1B128(v2 + v23, (uint64_t)v9, &qword_26B21F110);
  uint64_t v25 = v2 + v16[14];
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  MEMORY[0x270FA5388](v26 - 8);
  uint64_t v64 = (uint64_t)&v52 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1B128(v25, v64, &qword_26B21EC20);
  uint64_t v28 = v16[16];
  uint64_t v63 = *(void *)(v3 + v16[15]);
  uint64_t v29 = *(void *)(v3 + v28 + 8);
  uint64_t v62 = *(void *)(v3 + v28);
  uint64_t v61 = v29;
  uint64_t v30 = v16[18];
  int v60 = *(unsigned __int8 *)(v3 + v16[17]);
  int v59 = *(unsigned __int8 *)(v3 + v30);
  uint64_t v31 = v16[20];
  int v58 = *(unsigned __int8 *)(v3 + v16[19]);
  int v57 = *(unsigned __int8 *)(v3 + v31);
  uint64_t v32 = (uint64_t *)(v3 + v16[21]);
  char v90 = *(unsigned char *)(v3 + v16[22]);
  char v33 = *(unsigned char *)(v3 + v16[24]);
  char v89 = *(unsigned char *)(v3 + v16[23]);
  char v88 = v33;
  uint64_t v34 = v3 + v16[25];
  uint64_t v36 = *v32;
  uint64_t v35 = v32[1];
  uint64_t v56 = v36;
  uint64_t v55 = v35;
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t v38 = *(void *)(*(void *)(v37 - 8) + 64);
  MEMORY[0x270FA5388](v37 - 8);
  uint64_t v39 = (char *)&v52 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1B128(v34, (uint64_t)v39, &qword_26B21FF90);
  uint64_t v40 = MEMORY[0x270FA5388](v3 + v16[26]);
  sub_251A1B128(v40, (uint64_t)v39, &qword_26B21FF90);
  uint64_t v41 = v16[28];
  uint64_t v52 = *(void *)(v3 + v16[27]);
  uint64_t v54 = *(void *)(v3 + v41);
  uint64_t v42 = v16[30];
  uint64_t v43 = (uint64_t *)(v3 + v16[29]);
  uint64_t v44 = *v43;
  uint64_t v53 = v43[1];
  *(void *)&long long v86 = v44;
  *((void *)&v86 + 1) = v53;
  uint64_t v87 = v54;
  uint64_t v45 = v69;
  sub_251A1B128(v3 + v42, v69, &qword_26B21F120);
  uint64_t v46 = v16[32];
  char v85 = *(unsigned char *)(v3 + v16[31]);
  uint64_t v47 = *(void *)(v3 + v46);
  uint64_t v48 = MEMORY[0x270FA5388](v3 + v16[33]);
  sub_251A1B128(v48, (uint64_t)v39, &qword_26B21FF90);
  uint64_t v49 = (unsigned __int16 *)(v3 + v16[34]);
  unsigned int v50 = *v49;
  LODWORD(v49) = *((unsigned __int8 *)v49 + 2);
  uint64_t v82 = v78;
  __int16 v83 = v77;
  char v84 = v76;
  sub_251DBAF0C(v80, v75, v73, v79, v72, v74, v70, v71, v81, v68, v67, v66, (uint64_t)v65, v64, v63, v62, v61, v60, v59,
    v58,
    v57,
    v56,
    v55,
    &v90,
    &v89,
    &v88,
    (uint64_t)v39,
    (uint64_t)v39,
    v52,
    &v87,
    &v86,
    v45,
    &v85,
    v47,
    (uint64_t)v39,
    v50,
    (v50 | (v49 << 16)) >> 16,
    &v82);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t StaticService.debugDescription.getter()
{
  uint64_t v1 = sub_251F36D30();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((void *)&v23 + 1) = type metadata accessor for StaticService();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v22);
  sub_251DD1000(v0, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))type metadata accessor for StaticService);
  sub_251F36D10();
  uint64_t v6 = sub_251F36D20();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  swift_retain();
  sub_251F36620();
  v15[1] = v6;
  swift_release();
  sub_251F36720();
  if (*((void *)&v24 + 1))
  {
    uint64_t v7 = (void *)MEMORY[0x263F8EE78];
    do
    {
      long long v20 = v22;
      v21[0] = v23;
      v21[1] = v24;
      uint64_t v18 = 0;
      unint64_t v19 = 0xE000000000000000;
      long long v16 = v22;
      sub_251A0D51C((uint64_t)v21, (uint64_t)v17);
      swift_bridgeObjectRetain();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v17);
      sub_251F35800();
      swift_bridgeObjectRelease();
      sub_251F35800();
      sub_251F36640();
      uint64_t v8 = v18;
      unint64_t v9 = v19;
      sub_251A1B064((uint64_t)&v20, &qword_269BA35C8);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v7 = sub_251F0E8B8(0, v7[2] + 1, 1, v7);
      }
      unint64_t v11 = v7[2];
      unint64_t v10 = v7[3];
      if (v11 >= v10 >> 1) {
        uint64_t v7 = sub_251F0E8B8((void *)(v10 > 1), v11 + 1, 1, v7);
      }
      v7[2] = v11 + 1;
      uint64_t v12 = &v7[2 * v11];
      v12[4] = v8;
      v12[5] = v9;
      sub_251F36720();
    }
    while (*((void *)&v24 + 1));
  }
  else
  {
    uint64_t v7 = (void *)MEMORY[0x263F8EE78];
  }
  swift_release();
  swift_release();
  *(void *)&long long v22 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EAB0);
  sub_251BFC684();
  uint64_t v13 = sub_251F35620();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_251DC73DC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v61 = a5;
  uint64_t v9 = type metadata accessor for StaticService();
  uint64_t v50 = *(void *)(v9 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v49 = (uint64_t)v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v46 - v12;
  uint64_t v14 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v15 = ~v14;
  uint64_t v16 = *(void *)(a1 + 64);
  uint64_t v17 = -v14;
  uint64_t v54 = a1;
  uint64_t v55 = a1 + 64;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  else {
    uint64_t v18 = -1;
  }
  uint64_t v56 = v15;
  uint64_t v57 = 0;
  uint64_t v58 = v18 & v16;
  uint64_t v59 = a2;
  uint64_t v60 = a3;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F028);
  v46[0] = v46;
  MEMORY[0x270FA5388](v19 - 8);
  int v21 = (char *)v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46[2] = a1;
  swift_bridgeObjectRetain();
  v46[1] = a3;
  swift_retain();
  sub_251AF606C((uint64_t)v21);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FFB8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48))(v21, 1, v22) == 1)
  {
LABEL_5:
    swift_release();
    swift_bridgeObjectRelease();
    sub_251A1E630();
    return swift_release();
  }
  uint64_t v24 = sub_251F34DA0();
  uint64_t v53 = v24;
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = v25;
  uint64_t v27 = *(void *)(v25 + 64);
  uint64_t v29 = v25 + 32;
  uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
  uint64_t v51 = v29;
  uint64_t v52 = v28;
  uint64_t v47 = (void (**)(char *, uint64_t))(v26 + 8);
  uint64_t v48 = v26;
  while (1)
  {
    MEMORY[0x270FA5388](v24);
    uint64_t v31 = (uint64_t)&v21[*(int *)(v22 + 48)];
    v52((char *)v46 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0), v21, v53);
    uint64_t v32 = (uint64_t)v13;
    sub_251DD0AF0(v31, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t v33 = *v61;
    unint64_t v35 = sub_2519FE584((uint64_t)v46 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
    uint64_t v36 = *(void *)(v33 + 16);
    BOOL v37 = (v34 & 1) == 0;
    uint64_t v38 = v36 + v37;
    if (__OFADD__(v36, v37)) {
      break;
    }
    char v39 = v34;
    if (*(void *)(v33 + 24) >= v38)
    {
      if (a4)
      {
        if (v34) {
          goto LABEL_7;
        }
      }
      else
      {
        sub_251A12304();
        if (v39) {
          goto LABEL_7;
        }
      }
    }
    else
    {
      sub_251A01DD0(v38, a4 & 1);
      unint64_t v40 = sub_2519FE584((uint64_t)v46 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
      if ((v39 & 1) != (v41 & 1)) {
        goto LABEL_22;
      }
      unint64_t v35 = v40;
      if (v39)
      {
LABEL_7:
        uint64_t v13 = (char *)v32;
        uint64_t v30 = v49;
        sub_251DD1000(v32, v49, (uint64_t (*)(void))type metadata accessor for StaticService);
        sub_251DD0FA0(v32, (uint64_t (*)(void))type metadata accessor for StaticService);
        (*v47)((char *)v46 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0), v53);
        sub_251DD0B58(v30, *(void *)(*v61 + 56) + *(void *)(v50 + 72) * v35);
        goto LABEL_8;
      }
    }
    uint64_t v42 = (void *)*v61;
    *(void *)(*v61 + 8 * (v35 >> 6) + 64) |= 1 << v35;
    v52((char *)(v42[6] + *(void *)(v48 + 72) * v35), (char *)v46 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0), v53);
    uint64_t v13 = (char *)v32;
    sub_251DD0AF0(v32, v42[7] + *(void *)(v50 + 72) * v35, (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t v43 = v42[2];
    BOOL v44 = __OFADD__(v43, 1);
    uint64_t v45 = v43 + 1;
    if (v44) {
      goto LABEL_21;
    }
    v42[2] = v45;
LABEL_8:
    sub_251AF606C((uint64_t)v21);
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FFB8);
    a4 = 1;
    uint64_t v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48))(v21, 1, v22);
    if (v24 == 1) {
      goto LABEL_5;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  uint64_t result = sub_251F36BA0();
  __break(1u);
  return result;
}

uint64_t sub_251DC78EC(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t _s13HomeDataModel13StaticServiceV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  __int16 v243 = (unsigned char *)type metadata accessor for StaticSoftwareUpdate(0);
  v239 = (unsigned char *)*((void *)v243 - 1);
  MEMORY[0x270FA5388](v243);
  uint64_t v241 = &v221[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v237 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F128);
  MEMORY[0x270FA5388](v237);
  uint64_t v6 = &v221[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v242 = &v221[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v238 = &v221[-v11];
  MEMORY[0x270FA5388](v10);
  uint64_t v240 = &v221[-v12];
  uint64_t v13 = type metadata accessor for StaticDeviceMetadata();
  uint64_t v244 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = &v221[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F118);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = &v221[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v22 = &v221[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v23 = MEMORY[0x270FA5388](v20);
  uint64_t v25 = &v221[-v24];
  MEMORY[0x270FA5388](v23);
  uint64_t v27 = &v221[-v26];
  if ((sub_251F34D70() & 1) == 0) {
    return 0;
  }
  uint64_t v236 = v6;
  uint64_t v28 = (int *)type metadata accessor for StaticService();
  uint64_t v29 = v28[5];
  uint64_t v30 = *(void *)(a1 + v29);
  uint64_t v31 = *(void *)(a1 + v29 + 8);
  uint64_t v32 = (void *)(a2 + v29);
  if (v30 != *v32 || v31 != v32[1])
  {
    uint64_t v33 = a1;
    uint64_t v34 = a2;
    unint64_t v35 = v28;
    char v36 = sub_251F36B10();
    uint64_t v28 = v35;
    a2 = v34;
    a1 = v33;
    char v37 = v36;
    uint64_t result = 0;
    if ((v37 & 1) == 0) {
      return result;
    }
  }
  if (*(unsigned __int8 *)(a1 + v28[6]) != *(unsigned __int8 *)(a2 + v28[6])
    || *(unsigned __int8 *)(a1 + v28[7]) != *(unsigned __int8 *)(a2 + v28[7])
    || *(unsigned __int8 *)(a1 + v28[8]) != *(unsigned __int8 *)(a2 + v28[8]))
  {
    return 0;
  }
  uint64_t v39 = v28[9];
  int v40 = *(unsigned __int8 *)(a1 + v39);
  int v41 = *(unsigned __int8 *)(a2 + v39);
  if (v40 == 2)
  {
    if (v41 != 2) {
      return 0;
    }
  }
  else
  {
    uint64_t result = 0;
    BOOL v42 = (v40 & 1) == 0;
    if (v41 == 2 || ((v42 ^ v41) & 1) == 0) {
      return result;
    }
  }
  uint64_t v43 = v28[10];
  int v44 = *(unsigned __int8 *)(a1 + v43);
  int v45 = *(unsigned __int8 *)(a2 + v43);
  if (v44 == 2)
  {
    if (v45 != 2) {
      return 0;
    }
  }
  else
  {
    uint64_t result = 0;
    BOOL v46 = (v44 & 1) == 0;
    if (v45 == 2 || ((v46 ^ v45) & 1) == 0) {
      return result;
    }
  }
  uint64_t v47 = v28;
  if ((sub_251F34D70() & 1) == 0) {
    return 0;
  }
  uint64_t v48 = v47[12];
  uint64_t v49 = (void *)(a1 + v48);
  char v50 = *(unsigned char *)(a1 + v48 + 8);
  uint64_t v51 = (void *)(a2 + v48);
  int v52 = *(unsigned __int8 *)(a2 + v48 + 8);
  if (v50)
  {
    if (!v52) {
      return 0;
    }
  }
  else
  {
    if (*v49 != *v51) {
      LOBYTE(v52) = 1;
    }
    if (v52) {
      return 0;
    }
  }
  uint64_t v53 = a1 + v47[13];
  uint64_t v235 = a2;
  sub_251A1B128(v53, (uint64_t)v27, &qword_26B21F110);
  v234 = v47;
  sub_251A1B128(v235 + v47[13], (uint64_t)v25, &qword_26B21F110);
  uint64_t v54 = (uint64_t)&v18[*(int *)(v16 + 48)];
  sub_251A1B128((uint64_t)v27, (uint64_t)v18, &qword_26B21F110);
  sub_251A1B128((uint64_t)v25, v54, &qword_26B21F110);
  uint64_t v55 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v244 + 48);
  if (v55((uint64_t)v18, 1, v13) == 1)
  {
    sub_251A1B064((uint64_t)v25, &qword_26B21F110);
    sub_251A1B064((uint64_t)v27, &qword_26B21F110);
    if (v55(v54, 1, v13) == 1)
    {
      sub_251A1B064((uint64_t)v18, &qword_26B21F110);
      goto LABEL_34;
    }
LABEL_32:
    sub_251A1B064((uint64_t)v18, &qword_26B21F118);
    return 0;
  }
  sub_251A1B128((uint64_t)v18, (uint64_t)v22, &qword_26B21F110);
  if (v55(v54, 1, v13) == 1)
  {
    sub_251A1B064((uint64_t)v25, &qword_26B21F110);
    sub_251A1B064((uint64_t)v27, &qword_26B21F110);
    sub_251DD0FA0((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for StaticDeviceMetadata);
    goto LABEL_32;
  }
  sub_251DD0AF0(v54, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for StaticDeviceMetadata);
  char v56 = _s13HomeDataModel20StaticDeviceMetadataV2eeoiySbAC_ACtFZ_0((uint64_t)v22, (uint64_t)v15);
  sub_251DD0FA0((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for StaticDeviceMetadata);
  sub_251A1B064((uint64_t)v25, &qword_26B21F110);
  sub_251A1B064((uint64_t)v27, &qword_26B21F110);
  sub_251DD0FA0((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for StaticDeviceMetadata);
  sub_251A1B064((uint64_t)v18, &qword_26B21F110);
  if ((v56 & 1) == 0) {
    return 0;
  }
LABEL_34:
  uint64_t v57 = v234;
  uint64_t v58 = a1 + v234[14];
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  uint64_t v233 = v221;
  uint64_t v60 = *(void *)(*(void *)(v59 - 8) + 64);
  MEMORY[0x270FA5388](v59 - 8);
  unint64_t v61 = (v60 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v62 = &v221[-v61];
  sub_251A1B128(v58, (uint64_t)&v221[-v61], &qword_26B21EC20);
  uint64_t v232 = v221;
  uint64_t v63 = MEMORY[0x270FA5388](v235 + v57[14]);
  uint64_t v64 = &v221[-v61];
  sub_251A1B128(v63, (uint64_t)&v221[-v61], &qword_26B21EC20);
  uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EFF8);
  v231 = v221;
  uint64_t v66 = MEMORY[0x270FA5388](v65 - 8);
  uint64_t v68 = &v221[-((v67 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v69 = (uint64_t)&v68[*(int *)(v66 + 56)];
  sub_251A1B128((uint64_t)&v221[-v61], (uint64_t)v68, &qword_26B21EC20);
  uint64_t v244 = v69;
  sub_251A1B128((uint64_t)&v221[-v61], v69, &qword_26B21EC20);
  uint64_t v70 = sub_251F34D20();
  uint64_t v71 = *(void *)(v70 - 8);
  int v72 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v71 + 48);
  uint64_t v73 = v72(v68, 1, v70);
  if (v73 == 1)
  {
    sub_251A1B064((uint64_t)&v221[-v61], &qword_26B21EC20);
    sub_251A1B064((uint64_t)&v221[-v61], &qword_26B21EC20);
    if (v72((unsigned char *)v244, 1, v70) == 1)
    {
      sub_251A1B064((uint64_t)v68, &qword_26B21EC20);
      goto LABEL_41;
    }
LABEL_39:
    sub_251A1B064((uint64_t)v68, &qword_26B21EFF8);
    return 0;
  }
  v230 = v221;
  MEMORY[0x270FA5388](v73);
  int v74 = &v221[-v61];
  sub_251A1B128((uint64_t)v68, (uint64_t)&v221[-v61], &qword_26B21EC20);
  uint64_t v75 = v72((unsigned char *)v244, 1, v70);
  if (v75 == 1)
  {
    sub_251A1B064((uint64_t)&v221[-v61], &qword_26B21EC20);
    sub_251A1B064((uint64_t)&v221[-v61], &qword_26B21EC20);
    (*(void (**)(unsigned char *, uint64_t))(v71 + 8))(&v221[-v61], v70);
    goto LABEL_39;
  }
  uint64_t v229 = v221;
  MEMORY[0x270FA5388](v75);
  int v77 = &v221[-((v76 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v71 + 32))(v77, v244, v70);
  sub_251DD0A7C((unint64_t *)&qword_269B9F5C0, MEMORY[0x270FA92A0]);
  char v78 = sub_251F35650();
  int v79 = *(void (**)(unsigned char *, uint64_t))(v71 + 8);
  v79(v77, v70);
  sub_251A1B064((uint64_t)v64, &qword_26B21EC20);
  sub_251A1B064((uint64_t)v62, &qword_26B21EC20);
  v79(v74, v70);
  sub_251A1B064((uint64_t)v68, &qword_26B21EC20);
  if ((v78 & 1) == 0) {
    return 0;
  }
LABEL_41:
  uint64_t v81 = v234;
  uint64_t v80 = v235;
  if ((sub_251B04848(*(void *)(a1 + v234[15]), *(void *)(v235 + v234[15])) & 1) == 0) {
    return 0;
  }
  uint64_t v82 = v81[16];
  __int16 v83 = (void *)(a1 + v82);
  uint64_t v84 = *(void *)(a1 + v82 + 8);
  char v85 = (void *)(v80 + v82);
  uint64_t v86 = v85[1];
  uint64_t v87 = v81;
  if (v84)
  {
    if (!v86) {
      return 0;
    }
    if (*v83 != *v85 || v84 != v86)
    {
      char v88 = sub_251F36B10();
      uint64_t v87 = v234;
      char v89 = v88;
      uint64_t result = 0;
      if ((v89 & 1) == 0) {
        return result;
      }
    }
  }
  else if (v86)
  {
    return 0;
  }
  if (*(unsigned __int8 *)(a1 + v87[17]) != *(unsigned __int8 *)(v80 + v87[17])) {
    return 0;
  }
  if (*(unsigned __int8 *)(a1 + v87[18]) != *(unsigned __int8 *)(v80 + v87[18])) {
    return 0;
  }
  uint64_t v90 = a1;
  if (*(unsigned __int8 *)(a1 + v234[19]) != *(unsigned __int8 *)(v235 + v234[19])
    || *(unsigned __int8 *)(a1 + v234[20]) != *(unsigned __int8 *)(v235 + v234[20]))
  {
    return 0;
  }
  uint64_t v91 = v234[21];
  unint64_t v92 = (void *)(a1 + v91);
  uint64_t v93 = *(void *)(a1 + v91 + 8);
  id v94 = (void *)(v235 + v91);
  uint64_t v95 = v94[1];
  if (v93)
  {
    if (!v95) {
      return 0;
    }
    BOOL v96 = *v92 == *v94;
    char v97 = v234;
    uint64_t v98 = v235;
    uint64_t v99 = a1;
    if (!v96 || v93 != v95)
    {
      char v100 = sub_251F36B10();
      char v97 = v234;
      char v101 = v100;
      uint64_t result = 0;
      if ((v101 & 1) == 0) {
        return result;
      }
    }
  }
  else
  {
    char v97 = v234;
    uint64_t v98 = v235;
    uint64_t v99 = a1;
    if (v95) {
      return 0;
    }
  }
  uint64_t v102 = v97[22];
  char v103 = *(unsigned char *)(v99 + v102);
  LOBYTE(v102) = *(unsigned char *)(v98 + v102);
  char v248 = v103;
  char v247 = v102;
  unint64_t v104 = ServiceKind.rawValue.getter();
  uint64_t v106 = v105;
  if (v104 == ServiceKind.rawValue.getter() && v106 == v107)
  {
    swift_bridgeObjectRelease_n();
    id v108 = v234;
    uint64_t v109 = v235;
    uint64_t v110 = a1;
  }
  else
  {
    char v111 = sub_251F36B10();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    id v108 = v234;
    uint64_t v109 = v235;
    uint64_t v110 = a1;
    if ((v111 & 1) == 0) {
      return result;
    }
  }
  uint64_t v112 = v108[23];
  int v113 = *(unsigned __int8 *)(v110 + v112);
  int v114 = *(unsigned __int8 *)(v109 + v112);
  if (v113 == 5)
  {
    if (v114 != 5) {
      return 0;
    }
  }
  else if (v114 == 5 || (sub_251DB36AC(v113, v114) & 1) == 0)
  {
    return 0;
  }
  uint64_t v115 = v234[24];
  int v116 = *(unsigned __int8 *)(a1 + v115);
  int v117 = *(unsigned __int8 *)(v235 + v115);
  if (v116 == 53)
  {
    char v118 = v234;
    uint64_t v119 = v235;
    uint64_t v120 = a1;
    if (v117 != 53) {
      return 0;
    }
    goto LABEL_78;
  }
  if (v117 == 53) {
    return 0;
  }
  char v246 = v116;
  char v245 = v117;
  unint64_t v121 = ServiceKind.rawValue.getter();
  uint64_t v123 = v122;
  if (v121 == ServiceKind.rawValue.getter() && v123 == v124)
  {
    swift_bridgeObjectRelease_n();
    char v118 = v234;
    uint64_t v119 = v235;
    uint64_t v120 = a1;
    goto LABEL_78;
  }
  char v125 = sub_251F36B10();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = 0;
  char v118 = v234;
  uint64_t v119 = v235;
  uint64_t v120 = a1;
  if (v125)
  {
LABEL_78:
    uint64_t v126 = v120 + v118[25];
    uint64_t v127 = v119;
    unint64_t v128 = v118;
    uint64_t v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    v230 = v221;
    uint64_t v130 = *(unsigned char **)(*(void *)(v129 - 8) + 64);
    MEMORY[0x270FA5388](v129 - 8);
    unint64_t v131 = (unint64_t)(v130 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v132 = &v221[-v131];
    sub_251A1B128(v126, (uint64_t)&v221[-v131], &qword_26B21FF90);
    uint64_t v229 = v221;
    uint64_t v133 = v127 + v128[25];
    v231 = v130;
    uint64_t v134 = MEMORY[0x270FA5388](v133);
    uint64_t v135 = &v221[-v131];
    sub_251A1B128(v134, (uint64_t)&v221[-v131], &qword_26B21FF90);
    uint64_t v136 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E6B8);
    v228 = v221;
    uint64_t v137 = MEMORY[0x270FA5388](v136);
    uint64_t v225 = v138;
    uint64_t v226 = v137;
    uint64_t v139 = &v221[-((v138 + 15) & 0xFFFFFFFFFFFFFFF0)];
    uint64_t v140 = (uint64_t)&v139[*(int *)(v137 + 48)];
    sub_251A1B128((uint64_t)&v221[-v131], (uint64_t)v139, &qword_26B21FF90);
    sub_251A1B128((uint64_t)&v221[-v131], v140, &qword_26B21FF90);
    uint64_t v141 = sub_251F34DA0();
    uint64_t v227 = *(void *)(v141 - 8);
    uint64_t v142 = *(unsigned char **)(v227 + 48);
    uint64_t v244 = v141;
    uint64_t v232 = v142;
    uint64_t v233 = (unsigned char *)(v227 + 48);
    uint64_t v143 = ((uint64_t (*)(unsigned char *, uint64_t))v142)(v139, 1);
    if (v143 == 1)
    {
      sub_251A1B064((uint64_t)v135, &qword_26B21FF90);
      sub_251A1B064((uint64_t)v132, &qword_26B21FF90);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v232)(v140, 1, v244) == 1)
      {
        sub_251A1B064((uint64_t)v139, &qword_26B21FF90);
LABEL_85:
        v230 = v221;
        uint64_t v153 = v234;
        uint64_t v154 = v231;
        uint64_t v155 = MEMORY[0x270FA5388](v90 + v234[26]);
        unint64_t v156 = (unint64_t)(v154 + 15) & 0xFFFFFFFFFFFFFFF0;
        uint64_t v157 = &v221[-v156];
        sub_251A1B128(v155, (uint64_t)&v221[-v156], &qword_26B21FF90);
        uint64_t v229 = v221;
        uint64_t v158 = MEMORY[0x270FA5388](v235 + v153[26]);
        uint64_t v159 = &v221[-v156];
        uint64_t v160 = sub_251A1B128(v158, (uint64_t)&v221[-v156], &qword_26B21FF90);
        v228 = v221;
        MEMORY[0x270FA5388](v160);
        uint64_t v162 = &v221[-((v161 + 15) & 0xFFFFFFFFFFFFFFF0)];
        uint64_t v163 = (uint64_t)&v162[*(int *)(v226 + 48)];
        sub_251A1B128((uint64_t)&v221[-v156], (uint64_t)v162, &qword_26B21FF90);
        sub_251A1B128((uint64_t)&v221[-v156], v163, &qword_26B21FF90);
        uint64_t v164 = ((uint64_t (*)(unsigned char *, uint64_t, uint64_t))v232)(v162, 1, v244);
        if (v164 == 1)
        {
          sub_251A1B064((uint64_t)&v221[-v156], &qword_26B21FF90);
          sub_251A1B064((uint64_t)&v221[-v156], &qword_26B21FF90);
          if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v232)(v163, 1, v244) == 1)
          {
            sub_251A1B064((uint64_t)v162, &qword_26B21FF90);
            goto LABEL_93;
          }
        }
        else
        {
          char v224 = v221;
          MEMORY[0x270FA5388](v164);
          int v165 = &v221[-v156];
          sub_251A1B128((uint64_t)v162, (uint64_t)&v221[-v156], &qword_26B21FF90);
          uint64_t v166 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v232)(v163, 1, v244);
          if (v166 != 1)
          {
            uint64_t v223 = v221;
            uint64_t v167 = v227;
            MEMORY[0x270FA5388](v166);
            uint64_t v169 = &v221[-((v168 + 15) & 0xFFFFFFFFFFFFFFF0)];
            uint64_t v170 = v244;
            (*(void (**)(unsigned char *, uint64_t, uint64_t))(v167 + 32))(v169, v163, v244);
            sub_251DD0A7C((unint64_t *)&qword_26B21F2B8, MEMORY[0x270FA95A8]);
            int v222 = sub_251F35650();
            uint64_t v171 = *(void (**)(unsigned char *, uint64_t))(v167 + 8);
            v171(v169, v170);
            sub_251A1B064((uint64_t)v159, &qword_26B21FF90);
            sub_251A1B064((uint64_t)v157, &qword_26B21FF90);
            v171(v165, v170);
            sub_251A1B064((uint64_t)v162, &qword_26B21FF90);
            if ((v222 & 1) == 0) {
              return 0;
            }
LABEL_93:
            if ((sub_251AB66B8(*(void *)(v90 + v234[27]), *(void *)(v235 + v234[27])) & 1) == 0) {
              return 0;
            }
            uint64_t v172 = v234[28];
            uint64_t v173 = *(void *)(v90 + v172);
            uint64_t v174 = *(void *)(v235 + v172);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            char v175 = sub_251AF8598(v173, v174);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v175 & 1) == 0) {
              return 0;
            }
            uint64_t v176 = v234[29];
            uint64_t v177 = *(void *)(v90 + v176);
            uint64_t v178 = *(void *)(v90 + v176 + 8);
            id v179 = (uint64_t *)(v235 + v176);
            uint64_t v180 = *v179;
            uint64_t v181 = v179[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if ((sub_251AFD758(v177, v180) & 1) == 0)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              return 0;
            }
            char v182 = sub_251AFDDE4(v178, v181);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v182)
            {
              uint64_t v183 = v234;
              uint64_t v184 = (uint64_t)v240;
              sub_251A1B128(v90 + v234[30], (uint64_t)v240, &qword_26B21F120);
              unsigned int v185 = v238;
              sub_251A1B128(v235 + v183[30], (uint64_t)v238, &qword_26B21F120);
              uint64_t v186 = (uint64_t)v236;
              uint64_t v187 = (uint64_t)&v236[*(int *)(v237 + 48)];
              sub_251A1B128(v184, (uint64_t)v236, &qword_26B21F120);
              sub_251A1B128((uint64_t)v185, v187, &qword_26B21F120);
              int v188 = (unsigned int (*)(uint64_t, uint64_t, unsigned char *))*((void *)v239 + 6);
              if (v188(v186, 1, v243) == 1)
              {
                sub_251A1B064((uint64_t)v238, &qword_26B21F120);
                sub_251A1B064((uint64_t)v240, &qword_26B21F120);
                if (v188(v187, 1, v243) == 1)
                {
                  sub_251A1B064((uint64_t)v236, &qword_26B21F120);
                  goto LABEL_100;
                }
LABEL_108:
                sub_251A1B064((uint64_t)v236, &qword_26B21F128);
                return 0;
              }
              sub_251A1B128((uint64_t)v236, (uint64_t)v242, &qword_26B21F120);
              if (v188(v187, 1, v243) == 1)
              {
                sub_251A1B064((uint64_t)v238, &qword_26B21F120);
                sub_251A1B064((uint64_t)v240, &qword_26B21F120);
                sub_251DD0FA0((uint64_t)v242, type metadata accessor for StaticSoftwareUpdate);
                goto LABEL_108;
              }
              sub_251DD0AF0(v187, (uint64_t)v241, type metadata accessor for StaticSoftwareUpdate);
              if ((sub_251F34D70() & 1) == 0)
              {
                sub_251DD0FA0((uint64_t)v241, type metadata accessor for StaticSoftwareUpdate);
                sub_251A1B064((uint64_t)v238, &qword_26B21F120);
                sub_251A1B064((uint64_t)v240, &qword_26B21F120);
                sub_251DD0FA0((uint64_t)v242, type metadata accessor for StaticSoftwareUpdate);
                sub_251A1B064((uint64_t)v236, &qword_26B21F120);
                return 0;
              }
              uint64_t v201 = (uint64_t)v242;
              uint64_t v202 = (uint64_t)v241;
              char updated = _s13HomeDataModel20StaticSoftwareUpdateV4KindO2eeoiySbAE_AEtFZ_0((uint64_t)&v242[*((int *)v243 + 5)], (uint64_t)&v241[*((int *)v243 + 5)]);
              sub_251DD0FA0(v202, type metadata accessor for StaticSoftwareUpdate);
              sub_251A1B064((uint64_t)v238, &qword_26B21F120);
              sub_251A1B064((uint64_t)v240, &qword_26B21F120);
              sub_251DD0FA0(v201, type metadata accessor for StaticSoftwareUpdate);
              sub_251A1B064((uint64_t)v236, &qword_26B21F120);
              if (updated)
              {
LABEL_100:
                if (*(unsigned __int8 *)(v90 + v234[31]) != *(unsigned __int8 *)(v235 + v234[31])
                  || (sub_251AB66B8(*(void *)(v90 + v234[32]), *(void *)(v235 + v234[32])) & 1) == 0)
                {
                  return 0;
                }
                __int16 v243 = v221;
                v189 = v234;
                int v190 = v231;
                uint64_t v191 = MEMORY[0x270FA5388](v90 + v234[33]);
                unint64_t v192 = (unint64_t)(v190 + 15) & 0xFFFFFFFFFFFFFFF0;
                uint64_t v193 = &v221[-v192];
                sub_251A1B128(v191, (uint64_t)&v221[-v192], &qword_26B21FF90);
                uint64_t v242 = v221;
                uint64_t v194 = MEMORY[0x270FA5388](v235 + v189[33]);
                uint64_t v195 = &v221[-v192];
                uint64_t v196 = sub_251A1B128(v194, (uint64_t)&v221[-v192], &qword_26B21FF90);
                uint64_t v241 = v221;
                MEMORY[0x270FA5388](v196);
                uint64_t v198 = &v221[-((v197 + 15) & 0xFFFFFFFFFFFFFFF0)];
                uint64_t v199 = (uint64_t)&v198[*(int *)(v226 + 48)];
                sub_251A1B128((uint64_t)&v221[-v192], (uint64_t)v198, &qword_26B21FF90);
                sub_251A1B128((uint64_t)&v221[-v192], v199, &qword_26B21FF90);
                uint64_t v200 = ((uint64_t (*)(unsigned char *, uint64_t, uint64_t))v232)(v198, 1, v244);
                if (v200 == 1)
                {
                  sub_251A1B064((uint64_t)&v221[-v192], &qword_26B21FF90);
                  sub_251A1B064((uint64_t)&v221[-v192], &qword_26B21FF90);
                  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v232)(v199, 1, v244) == 1)
                  {
                    sub_251A1B064((uint64_t)v198, &qword_26B21FF90);
LABEL_117:
                    uint64_t v212 = v234[34];
                    uint64_t v213 = (unsigned __int16 *)(v90 + v212);
                    char v214 = *(unsigned char *)(v90 + v212 + 2);
                    uint64_t v215 = (unsigned __int16 *)(v235 + v212);
                    int v216 = *(unsigned __int8 *)(v235 + v212 + 2);
                    if (v214)
                    {
                      if (!v216) {
                        return 0;
                      }
                    }
                    else
                    {
                      if (*v213 != *v215) {
                        LOBYTE(v216) = 1;
                      }
                      if (v216) {
                        return 0;
                      }
                    }
                    uint64_t v217 = v234[35];
                    uint64_t v218 = v90 + v217;
                    char v219 = *(unsigned char *)(v90 + v217 + 10);
                    uint64_t v220 = v235 + v217;
                    if (v219)
                    {
                      if (*(unsigned char *)(v220 + 10)) {
                        return 1;
                      }
                    }
                    else if ((*(unsigned char *)(v220 + 10) & 1) == 0 {
                           && *(void *)v218 == *(void *)v220
                    }
                           && *(unsigned __int16 *)(v218 + 8) == *(unsigned __int16 *)(v220 + 8))
                    {
                      return 1;
                    }
                    return 0;
                  }
                }
                else
                {
                  uint64_t v240 = v221;
                  MEMORY[0x270FA5388](v200);
                  uint64_t v204 = &v221[-v192];
                  sub_251A1B128((uint64_t)v198, (uint64_t)&v221[-v192], &qword_26B21FF90);
                  uint64_t v205 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v232)(v199, 1, v244);
                  if (v205 != 1)
                  {
                    v239 = v221;
                    uint64_t v206 = v227;
                    MEMORY[0x270FA5388](v205);
                    uint64_t v208 = &v221[-((v207 + 15) & 0xFFFFFFFFFFFFFFF0)];
                    uint64_t v209 = v244;
                    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v206 + 32))(v208, v199, v244);
                    sub_251DD0A7C((unint64_t *)&qword_26B21F2B8, MEMORY[0x270FA95A8]);
                    char v210 = sub_251F35650();
                    uint64_t v211 = *(void (**)(unsigned char *, uint64_t))(v206 + 8);
                    v211(v208, v209);
                    sub_251A1B064((uint64_t)v195, &qword_26B21FF90);
                    sub_251A1B064((uint64_t)v193, &qword_26B21FF90);
                    v211(v204, v209);
                    sub_251A1B064((uint64_t)v198, &qword_26B21FF90);
                    if ((v210 & 1) == 0) {
                      return 0;
                    }
                    goto LABEL_117;
                  }
                  sub_251A1B064((uint64_t)&v221[-v192], &qword_26B21FF90);
                  sub_251A1B064((uint64_t)&v221[-v192], &qword_26B21FF90);
                  (*(void (**)(unsigned char *, uint64_t))(v227 + 8))(&v221[-v192], v244);
                }
                sub_251A1B064((uint64_t)v198, &qword_26B21E6B8);
              }
            }
            return 0;
          }
          sub_251A1B064((uint64_t)&v221[-v156], &qword_26B21FF90);
          sub_251A1B064((uint64_t)&v221[-v156], &qword_26B21FF90);
          (*(void (**)(unsigned char *, uint64_t))(v227 + 8))(&v221[-v156], v244);
        }
        uint64_t v146 = (uint64_t)v162;
LABEL_91:
        sub_251A1B064(v146, &qword_26B21E6B8);
        return 0;
      }
    }
    else
    {
      char v224 = v221;
      MEMORY[0x270FA5388](v143);
      uint64_t v144 = &v221[-v131];
      sub_251A1B128((uint64_t)v139, (uint64_t)v144, &qword_26B21FF90);
      uint64_t v145 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v232)(v140, 1, v244);
      if (v145 != 1)
      {
        uint64_t v223 = v221;
        uint64_t v147 = v227;
        MEMORY[0x270FA5388](v145);
        id v149 = &v221[-((v148 + 15) & 0xFFFFFFFFFFFFFFF0)];
        uint64_t v150 = v244;
        (*(void (**)(unsigned char *, uint64_t, uint64_t))(v147 + 32))(v149, v140, v244);
        sub_251DD0A7C((unint64_t *)&qword_26B21F2B8, MEMORY[0x270FA95A8]);
        char v151 = sub_251F35650();
        uint64_t v152 = *(void (**)(unsigned char *, uint64_t))(v147 + 8);
        v152(v149, v150);
        sub_251A1B064((uint64_t)v135, &qword_26B21FF90);
        sub_251A1B064((uint64_t)v132, &qword_26B21FF90);
        v152(v144, v150);
        sub_251A1B064((uint64_t)v139, &qword_26B21FF90);
        if ((v151 & 1) == 0) {
          return 0;
        }
        goto LABEL_85;
      }
      sub_251A1B064((uint64_t)v135, &qword_26B21FF90);
      sub_251A1B064((uint64_t)v132, &qword_26B21FF90);
      (*(void (**)(unsigned char *, uint64_t))(v227 + 8))(v144, v244);
    }
    uint64_t v146 = (uint64_t)v139;
    goto LABEL_91;
  }
  return result;
}

uint64_t sub_251DC951C(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v48 = a3;
  uint64_t v7 = type metadata accessor for StaticService();
  uint64_t v44 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v39 = (uint64_t)v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v38 - v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FFB8);
  uint64_t result = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)(a1 + 16);
  if (!v17) {
    return result;
  }
  v38[1] = a1;
  v38[2] = v4;
  uint64_t v43 = &v16[*(int *)(result + 48)];
  uint64_t v18 = a1 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  uint64_t v40 = *(void *)(v14 + 72);
  swift_bridgeObjectRetain();
  int v41 = v16;
  BOOL v42 = v11;
  while (1)
  {
    uint64_t v46 = v18;
    uint64_t v47 = v17;
    sub_251A1B128(v18, (uint64_t)v16, &qword_26B21FFB8);
    uint64_t v20 = sub_251F34DA0();
    int v45 = v38;
    uint64_t v21 = *(void *)(v20 - 8);
    MEMORY[0x270FA5388](v20);
    uint64_t v23 = (char *)v38 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
    v24(v23, v16, v20);
    sub_251DD0AF0((uint64_t)v43, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t v25 = *v48;
    unint64_t v27 = sub_2519FE584((uint64_t)v23);
    uint64_t v28 = *(void *)(v25 + 16);
    BOOL v29 = (v26 & 1) == 0;
    uint64_t v30 = v28 + v29;
    if (__OFADD__(v28, v29)) {
      break;
    }
    char v31 = v26;
    if (*(void *)(v25 + 24) >= v30)
    {
      if (a2)
      {
        if (v26) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_251A12304();
        if (v31) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_251A01DD0(v30, a2 & 1);
      unint64_t v32 = sub_2519FE584((uint64_t)v23);
      if ((v31 & 1) != (v33 & 1)) {
        goto LABEL_20;
      }
      unint64_t v27 = v32;
      if (v31)
      {
LABEL_3:
        uint64_t v11 = v42;
        uint64_t v19 = v39;
        sub_251DD0AF0((uint64_t)v42, v39, (uint64_t (*)(void))type metadata accessor for StaticService);
        (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
        sub_251DD0B58(v19, *(void *)(*v48 + 56) + *(void *)(v44 + 72) * v27);
        goto LABEL_4;
      }
    }
    uint64_t v34 = (void *)*v48;
    *(void *)(*v48 + 8 * (v27 >> 6) + 64) |= 1 << v27;
    v24((char *)(v34[6] + *(void *)(v21 + 72) * v27), v23, v20);
    uint64_t v11 = v42;
    sub_251DD0AF0((uint64_t)v42, v34[7] + *(void *)(v44 + 72) * v27, (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t v35 = v34[2];
    BOOL v36 = __OFADD__(v35, 1);
    uint64_t v37 = v35 + 1;
    if (v36) {
      goto LABEL_19;
    }
    v34[2] = v37;
LABEL_4:
    uint64_t v16 = v41;
    uint64_t v18 = v46 + v40;
    a2 = 1;
    uint64_t v17 = v47 - 1;
    if (v47 == 1) {
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  uint64_t result = sub_251F36BA0();
  __break(1u);
  return result;
}

uint64_t sub_251DC9944(uint64_t a1, uint64_t a2, id a3, char *a4, char a5, uint64_t a6, uint64_t a7)
{
  char v13 = *a4;
  id v14 = objc_msgSend(a3, sel_services);
  sub_251A1A568(0, (unint64_t *)&qword_26B21F180);
  unint64_t v15 = sub_251F35AC0();

  v39[16] = a5;
  id v40 = a3;
  uint64_t v41 = a1;
  uint64_t v42 = a2;
  char v43 = v13;
  uint64_t v44 = a6;
  uint64_t v45 = a7;
  uint64_t v16 = 0;
  uint64_t v17 = sub_251A51AD4((void (*)(id *))sub_251DD0AC4, (uint64_t)v39, v15);
  swift_bridgeObjectRelease();
  int64_t v18 = *(void *)(v17 + 16);
  if (v18)
  {
    uint64_t v36 = 0;
    uint64_t v46 = MEMORY[0x263F8EE78];
    sub_251A3E3B8(0, v18, 0);
    uint64_t v19 = v46;
    uint64_t v20 = 0;
    uint64_t v21 = *(void *)(type metadata accessor for StaticService() - 8);
    uint64_t v22 = *(unsigned __int8 *)(v21 + 80);
    uint64_t v35 = v17;
    uint64_t v37 = v17 + ((v22 + 32) & ~v22);
    uint64_t v38 = v21;
    do
    {
      int64_t v23 = v18;
      uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FFB8);
      uint64_t v25 = *(void *)(v24 - 8);
      uint64_t v26 = MEMORY[0x270FA5388](v24 - 8);
      uint64_t v28 = (char *)&v35 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v29 = (uint64_t)&v28[*(int *)(v26 + 56)];
      sub_251DD1000(v37 + *(void *)(v38 + 72) * v20, v29, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v30 = sub_251F34DA0();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
      uint64_t v46 = v19;
      unint64_t v32 = *(void *)(v19 + 16);
      unint64_t v31 = *(void *)(v19 + 24);
      if (v32 >= v31 >> 1)
      {
        sub_251A3E3B8(v31 > 1, v32 + 1, 1);
        uint64_t v19 = v46;
      }
      ++v20;
      *(void *)(v19 + 16) = v32 + 1;
      sub_251A4ECF0((uint64_t)v28, v19+ ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80))+ *(void *)(v25 + 72) * v32, &qword_26B21FFB8);
      int64_t v18 = v23;
    }
    while (v23 != v20);
    swift_bridgeObjectRelease();
    uint64_t v16 = v36;
    if (*(void *)(v19 + 16)) {
      goto LABEL_7;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v19 = MEMORY[0x263F8EE78];
    if (*(void *)(MEMORY[0x263F8EE78] + 16))
    {
LABEL_7:
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F1B8);
      uint64_t v33 = sub_251F36700();
      goto LABEL_10;
    }
  }
  uint64_t v33 = MEMORY[0x263F8EE80];
LABEL_10:
  uint64_t v46 = v33;
  sub_251DC951C(v19, 1, &v46);
  swift_bridgeObjectRelease();
  if (!v16) {
    return v46;
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

void *sub_251DC9C90(unint64_t a1, void *a2)
{
  id v39 = a2;
  unint64_t v2 = a1;
  if (a1 >> 62) {
    goto LABEL_20;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; uint64_t v3 = sub_251F366C0())
  {
    uint64_t v4 = 0;
    unint64_t v5 = v2 & 0xC000000000000001;
    unint64_t v35 = v2 + 32;
    unint64_t v36 = v2 & 0xC000000000000001;
    uint64_t v37 = v3;
    unint64_t v38 = v2;
    while (1)
    {
      id v8 = v5 ? (id)MEMORY[0x2533AB3A0](v4, v2) : *(id *)(v35 + 8 * v4);
      uint64_t v7 = v8;
      if (__OFADD__(v4++, 1)) {
        break;
      }
      id v10 = objc_msgSend(v8, sel_uniqueIdentifiersForBridgedAccessories);
      if (v10)
      {
        uint64_t v11 = v10;
        uint64_t v45 = v7;
        uint64_t v41 = v4;
        uint64_t v12 = sub_251F34DA0();
        uint64_t v13 = sub_251F35AC0();

        id v14 = objc_msgSend(v39, sel_uniqueIdentifier);
        char v43 = &v34;
        uint64_t v15 = *(void *)(v12 - 8);
        MEMORY[0x270FA5388](v14);
        uint64_t v53 = v16;
        uint64_t v54 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
        sub_251F34D80();

        uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
        uint64_t v42 = &v34;
        MEMORY[0x270FA5388](v17 - 8);
        uint64_t v19 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
        uint64_t v20 = *(void *)(v13 + 16);
        uint64_t v44 = v13;
        uint64_t v40 = v15;
        if (v20)
        {
          uint64_t v22 = *(void (**)(char *, unint64_t, uint64_t))(v15 + 16);
          uint64_t v21 = v15 + 16;
          unint64_t v23 = v13 + ((*(unsigned __int8 *)(v21 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 64));
          uint64_t v24 = *(void *)(v21 + 56);
          uint64_t v25 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 40);
          char v50 = (uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 32);
          uint64_t v51 = v22;
          uint64_t v47 = v24;
          uint64_t v48 = (void (**)(char *, char *, uint64_t))(v21 + 16);
          uint64_t v52 = v21;
          uint64_t v49 = (void (**)(char *, uint64_t))(v21 - 8);
          swift_bridgeObjectRetain();
          while (1)
          {
            v51(v19, v23, v12);
            uint64_t v26 = *v25;
            (*v25)(v19, 0, 1, v12);
            uint64_t v27 = (*v50)(v19, 1, v12);
            if (v27 == 1) {
              break;
            }
            uint64_t v46 = v26;
            MEMORY[0x270FA5388](v27);
            uint64_t v29 = (char *)&v34 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
            uint64_t v30 = v19;
            (*v48)(v29, v19, v12);
            sub_251DD0A7C((unint64_t *)&qword_26B21F2B8, MEMORY[0x270FA95A8]);
            char v31 = sub_251F35650();
            unint64_t v32 = *v49;
            (*v49)(v29, v12);
            if (v31)
            {
              swift_bridgeObjectRelease();
              v32(v54, v12);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              return v45;
            }
            v23 += v47;
            --v20;
            uint64_t v19 = v30;
            if (!v20)
            {
              v46(v30, 1, 1, v12);
              break;
            }
          }
        }
        else
        {
          uint64_t v6 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
          swift_bridgeObjectRetain();
          v6(v19, 1, 1, v12);
        }
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v40 + 8))(v54, v12);
        swift_bridgeObjectRelease();
        uint64_t v3 = v37;
        unint64_t v2 = v38;
        uint64_t v4 = v41;
        unint64_t v5 = v36;
        uint64_t v7 = v45;
      }

      if (v4 == v3) {
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
LABEL_21:
  swift_bridgeObjectRelease();
  return 0;
}

void *sub_251DCA10C(unint64_t a1)
{
  uint64_t v1 = a1;
  if (a1 >> 62)
  {
LABEL_37:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_251F366C0();
    if (v2) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      uint64_t v3 = 0;
      uint64_t v22 = v2;
      unint64_t v23 = v1 & 0xC000000000000001;
      uint64_t v20 = v1 + 32;
      uint64_t v21 = v1;
      do
      {
        if (v23) {
          id v4 = (id)MEMORY[0x2533AB3A0](v3, v1);
        }
        else {
          id v4 = *(id *)(v20 + 8 * v3);
        }
        unint64_t v5 = v4;
        if (__OFADD__(v3++, 1))
        {
LABEL_36:
          __break(1u);
          goto LABEL_37;
        }
        id v7 = objc_msgSend(v4, sel_linkedServices);
        if (v7)
        {
          id v8 = v7;
          sub_251A1A568(0, (unint64_t *)&qword_26B21F180);
          unint64_t v9 = sub_251F35AC0();

          if (v9 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v10 = sub_251F366C0();
            if (!v10)
            {
LABEL_30:

              swift_bridgeObjectRelease_n();
              continue;
            }
          }
          else
          {
            uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain();
            if (!v10) {
              goto LABEL_30;
            }
          }
          uint64_t v1 = v9 & 0xC000000000000001;
          if ((v9 & 0xC000000000000001) != 0) {
            id v11 = (id)MEMORY[0x2533AB3A0](0, v9);
          }
          else {
            id v11 = *(id *)(v9 + 32);
          }
          uint64_t v12 = v11;
          char v13 = sub_251F36120();

          if (v13)
          {
LABEL_32:
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            return v5;
          }
          uint64_t v2 = v22;
          if (v10 != 1)
          {
            if (v1)
            {
              uint64_t v14 = 1;
              while (1)
              {
                MEMORY[0x2533AB3A0](v14, v9);
                uint64_t v15 = v14 + 1;
                if (__OFADD__(v14, 1)) {
                  break;
                }
                uint64_t v1 = sub_251F36120();
                swift_unknownObjectRelease();
                if (v1) {
                  goto LABEL_32;
                }
                ++v14;
                if (v15 == v10) {
                  goto LABEL_28;
                }
              }
              __break(1u);
            }
            else
            {
              uint64_t v1 = 5;
              while (1)
              {
                uint64_t v16 = v1 - 3;
                if (__OFADD__(v1 - 4, 1)) {
                  break;
                }
                id v17 = *(id *)(v9 + 8 * v1);
                char v18 = sub_251F36120();

                if (v18) {
                  goto LABEL_32;
                }
                ++v1;
                if (v16 == v10)
                {
LABEL_28:

                  swift_bridgeObjectRelease_n();
                  uint64_t v1 = v21;
                  uint64_t v2 = v22;
                  goto LABEL_5;
                }
              }
            }
            __break(1u);
            goto LABEL_36;
          }

          swift_bridgeObjectRelease_n();
          uint64_t v1 = v21;
        }
        else
        {
        }
LABEL_5:
        ;
      }
      while (v3 != v2);
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_251DCA3DC(unint64_t a1, void *a2)
{
  uint64_t v3 = a1;
  uint64_t v30 = MEMORY[0x263F8EE78];
  if (a1 >> 62) {
    goto LABEL_39;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      uint64_t v24 = v3;
      unint64_t v5 = 0;
      unint64_t v6 = v3 & 0xC000000000000001;
      uint64_t v7 = v3 & 0xFFFFFFFFFFFFFF8;
      uint64_t v28 = a2;
      uint64_t v29 = v3 + 32;
      unint64_t v26 = v3 & 0xC000000000000001;
      uint64_t v27 = v4;
      uint64_t v25 = v3 & 0xFFFFFFFFFFFFFF8;
      while (1)
      {
        if (v6)
        {
          id v8 = (id)MEMORY[0x2533AB3A0](v5, v24);
        }
        else
        {
          if (v5 >= *(void *)(v7 + 16))
          {
            __break(1u);
LABEL_36:
            __break(1u);
LABEL_37:
            __break(1u);
            goto LABEL_38;
          }
          id v8 = *(id *)(v29 + 8 * v5);
        }
        unint64_t v9 = v8;
        if (__OFADD__(v5++, 1)) {
          goto LABEL_36;
        }
        id v11 = objc_msgSend(a2, sel_linkedServices);
        if (v11) {
          break;
        }

LABEL_5:
        if (v5 == v4) {
          return v30;
        }
      }
      uint64_t v12 = v11;
      uint64_t v3 = sub_251A1A568(0, (unint64_t *)&qword_26B21F180);
      unint64_t v13 = sub_251F35AC0();

      if (v13 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v14 = sub_251F366C0();
        if (!v14)
        {
LABEL_32:

          swift_bridgeObjectRelease_n();
          goto LABEL_5;
        }
      }
      else
      {
        uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v14) {
          goto LABEL_32;
        }
      }
      id v15 = (v13 & 0xC000000000000001) != 0 ? (id)MEMORY[0x2533AB3A0](0, v13) : *(id *)(v13 + 32);
      uint64_t v16 = v15;
      char v17 = sub_251F36120();

      if (v17) {
        break;
      }
      if (v14 == 1)
      {
LABEL_28:

        swift_bridgeObjectRelease_n();
        goto LABEL_29;
      }
      if ((v13 & 0xC000000000000001) != 0)
      {
        uint64_t v18 = 1;
        while (1)
        {
          MEMORY[0x2533AB3A0](v18, v13);
          a2 = (void *)(v18 + 1);
          if (__OFADD__(v18, 1)) {
            goto LABEL_37;
          }
          char v19 = sub_251F36120();
          swift_unknownObjectRelease();
          if (v19) {
            goto LABEL_16;
          }
          ++v18;
          if (a2 == (void *)v14) {
            goto LABEL_28;
          }
        }
      }
      uint64_t v20 = 5;
      while (1)
      {
        a2 = (void *)(v20 - 3);
        if (__OFADD__(v20 - 4, 1)) {
          break;
        }
        id v21 = *(id *)(v13 + 8 * v20);
        char v22 = sub_251F36120();

        if (v22) {
          goto LABEL_16;
        }
        ++v20;
        if (a2 == (void *)v14) {
          goto LABEL_28;
        }
      }
LABEL_38:
      __break(1u);
LABEL_39:
      uint64_t v4 = sub_251F366C0();
      if (!v4) {
        return MEMORY[0x263F8EE78];
      }
    }
LABEL_16:
    swift_bridgeObjectRelease_n();
    sub_251F364F0();
    sub_251F36530();
    sub_251F36540();
    uint64_t v3 = (uint64_t)&v30;
    sub_251F36500();
LABEL_29:
    uint64_t v4 = v27;
    a2 = v28;
    uint64_t v7 = v25;
    unint64_t v6 = v26;
    goto LABEL_5;
  }
  return MEMORY[0x263F8EE78];
}

unint64_t sub_251DCA6BC()
{
  unint64_t result = qword_269BA3800;
  if (!qword_269BA3800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3800);
  }
  return result;
}

unint64_t sub_251DCA710()
{
  unint64_t result = qword_269BA3820;
  if (!qword_269BA3820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3820);
  }
  return result;
}

unint64_t sub_251DCA764()
{
  unint64_t result = qword_269BA3828;
  if (!qword_269BA3828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3828);
  }
  return result;
}

uint64_t sub_251DCA7B8(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B9CC40);
    sub_251DD0A7C(a2, MEMORY[0x270FA95A8]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_251DCA840(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269BA3810);
    sub_251DCB828(a2, (void (*)(uint64_t))type metadata accessor for StaticService);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_251DCA8D4()
{
  unint64_t result = qword_269BA3848;
  if (!qword_269BA3848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3848);
  }
  return result;
}

unint64_t sub_251DCA928()
{
  unint64_t result = qword_269BA3850;
  if (!qword_269BA3850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3850);
  }
  return result;
}

uint64_t sub_251DCA97C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x72616D6972507369 && a2 == 0xE900000000000079 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656C62756F447369 && a2 == 0xEC00000068676948 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6168636165527369 && a2 == 0xEB00000000656C62 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7262696C61437369 && a2 == 0xED0000676E697461 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x746142776F4C7369 && a2 == 0xEC00000079726574 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x726F737365636361 && a2 == 0xEB00000000644979 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000251F718B0 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x654D656369766564 && a2 == 0xEE00617461646174 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6564644165746164 && a2 == 0xE900000000000064 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x7364496D6F6F72 && a2 == 0xE700000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x656D614E6D6F6F72 && a2 == 0xE800000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000251F70F70 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x8000000251F718D0 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x69726F7661467369 && a2 == 0xEA00000000006574 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000251F718F0 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000251F6FD20 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0x4B65636976726573 && a2 == 0xEB00000000646E69 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0x5365636976726573 && a2 == 0xEE00646E694B6275 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000251F71910 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0x6553746E65726170 && a2 == 0xEF64496563697672 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000251F71930 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000251F71950 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 23;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x8000000251F71970 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 24;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000251F71990 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 25;
  }
  else if (a1 == 0x6572617774666F73 && a2 == 0xEE00657461647055 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 26;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000251F71010 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 27;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000251F719B0 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 28;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000251F719D0 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 29;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000251F719F0 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 30;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000251F71A10)
  {
    swift_bridgeObjectRelease();
    return 31;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 31;
    }
    else {
      return 32;
    }
  }
}

uint64_t sub_251DCB670@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_251DC10BC(a1, a2);
}

uint64_t sub_251DCB68C()
{
  return sub_251DCB828((unint64_t *)&unk_269BA3868, (void (*)(uint64_t))type metadata accessor for StaticService);
}

uint64_t sub_251DCB6D4()
{
  return sub_251DD0A7C((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA95A8]);
}

uint64_t sub_251DCB704(void *a1)
{
  a1[1] = sub_251DCB828(&qword_269BA3878, (void (*)(uint64_t))type metadata accessor for StaticService);
  a1[2] = sub_251DCB828(&qword_269BA3880, (void (*)(uint64_t))type metadata accessor for StaticService);
  a1[3] = sub_251DCB828(&qword_269B9E1D8, (void (*)(uint64_t))type metadata accessor for StaticService);
  a1[4] = sub_251DCB828(&qword_269B9E0C8, (void (*)(uint64_t))type metadata accessor for StaticService);
  a1[5] = sub_251DCB828(&qword_269BA3888, (void (*)(uint64_t))type metadata accessor for StaticService);
  uint64_t result = sub_251DCB828(&qword_269BA3890, (void (*)(uint64_t))type metadata accessor for StaticService);
  a1[6] = result;
  return result;
}

uint64_t sub_251DCB828(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_251DCB870(void *a1)
{
  a1[1] = sub_251DCB828(&qword_269B9E1D8, (void (*)(uint64_t))type metadata accessor for StaticService);
  a1[2] = sub_251DCB828(&qword_269B9E0C8, (void (*)(uint64_t))type metadata accessor for StaticService);
  a1[3] = sub_251DCB828(&qword_269BA3888, (void (*)(uint64_t))type metadata accessor for StaticService);
  uint64_t result = sub_251DCB828(&qword_269BA3890, (void (*)(uint64_t))type metadata accessor for StaticService);
  a1[4] = result;
  return result;
}

char *initializeBufferWithCopyOfBuffer for StaticService(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v28 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  uint64_t v7 = sub_251F34DA0();
  uint64_t v155 = *(void *)(v7 - 8);
  id v8 = *(void (**)(char *, char *, uint64_t))(v155 + 16);
  v8(a1, a2, v7);
  uint64_t v9 = a3[5];
  uint64_t v10 = a3[6];
  id v11 = &a1[v9];
  uint64_t v12 = &a2[v9];
  uint64_t v13 = *((void *)v12 + 1);
  *(void *)id v11 = *(void *)v12;
  *((void *)v11 + 1) = v13;
  a1[v10] = a2[v10];
  uint64_t v14 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  a1[v14] = a2[v14];
  uint64_t v15 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  a1[v15] = a2[v15];
  uint64_t v16 = a3[11];
  char v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  swift_bridgeObjectRetain();
  v8(v17, v18, v7);
  uint64_t v19 = a3[12];
  uint64_t v20 = a3[13];
  id v21 = &a1[v19];
  char v22 = &a2[v19];
  *(void *)id v21 = *(void *)v22;
  v21[8] = v22[8];
  unint64_t v23 = &a1[v20];
  uint64_t v24 = &a2[v20];
  uint64_t v25 = (int *)type metadata accessor for StaticDeviceMetadata();
  uint64_t v26 = *((void *)v25 - 1);
  unint64_t v156 = v8;
  uint64_t v157 = v7;
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v26 + 48))(v24, 1, v25))
  {
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    v8(v23, v24, v7);
    uint64_t v29 = v25[5];
    uint64_t v30 = &v23[v29];
    char v31 = &v24[v29];
    uint64_t v32 = *((void *)v31 + 1);
    *(void *)uint64_t v30 = *(void *)v31;
    *((void *)v30 + 1) = v32;
    uint64_t v33 = v25[6];
    uint64_t v34 = &v23[v33];
    unint64_t v35 = &v24[v33];
    uint64_t v36 = *((void *)v35 + 1);
    *(void *)uint64_t v34 = *(void *)v35;
    *((void *)v34 + 1) = v36;
    uint64_t v37 = v25[7];
    unint64_t v38 = &v23[v37];
    id v39 = &v24[v37];
    uint64_t v40 = *((void *)v39 + 1);
    *(void *)unint64_t v38 = *(void *)v39;
    *((void *)v38 + 1) = v40;
    uint64_t v41 = v25[8];
    uint64_t v42 = &v23[v41];
    char v43 = &v24[v41];
    uint64_t v44 = *((void *)v43 + 1);
    *(void *)uint64_t v42 = *(void *)v43;
    *((void *)v42 + 1) = v44;
    v23[v25[9]] = v24[v25[9]];
    v23[v25[10]] = v24[v25[10]];
    v23[v25[11]] = v24[v25[11]];
    v23[v25[12]] = v24[v25[12]];
    uint64_t v45 = *(void (**)(char *, void, uint64_t, int *))(v26 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v45(v23, 0, 1, v25);
  }
  uint64_t v46 = a3[14];
  uint64_t v47 = &a1[v46];
  uint64_t v48 = &a2[v46];
  uint64_t v49 = sub_251F34D20();
  uint64_t v50 = *(void *)(v49 - 8);
  id v149 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48);
  uint64_t v150 = v49;
  uint64_t v148 = v50;
  if (v149(v48, 1, v49))
  {
    uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    memcpy(v47, v48, *(void *)(*(void *)(v51 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v47, v48, v49);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
  }
  uint64_t v52 = a3[16];
  *(void *)&a1[a3[15]] = *(void *)&a2[a3[15]];
  uint64_t v53 = &a1[v52];
  uint64_t v54 = &a2[v52];
  uint64_t v55 = *((void *)v54 + 1);
  *(void *)uint64_t v53 = *(void *)v54;
  *((void *)v53 + 1) = v55;
  uint64_t v56 = a3[18];
  a1[a3[17]] = a2[a3[17]];
  a1[v56] = a2[v56];
  uint64_t v57 = a3[20];
  a1[a3[19]] = a2[a3[19]];
  a1[v57] = a2[v57];
  uint64_t v58 = a3[21];
  uint64_t v59 = a3[22];
  uint64_t v60 = &a1[v58];
  unint64_t v61 = &a2[v58];
  uint64_t v62 = *((void *)v61 + 1);
  *(void *)uint64_t v60 = *(void *)v61;
  *((void *)v60 + 1) = v62;
  a1[v59] = a2[v59];
  uint64_t v63 = a3[24];
  a1[a3[23]] = a2[a3[23]];
  uint64_t v64 = a3[25];
  uint64_t v65 = &a1[v64];
  a1[v63] = a2[v63];
  uint64_t v66 = &a2[v64];
  uint64_t v67 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v155 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v67(v66, 1, v157))
  {
    uint64_t v68 = v155;
    uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(v65, v66, *(void *)(*(void *)(v69 - 8) + 64));
  }
  else
  {
    v156(v65, v66, v157);
    uint64_t v68 = v155;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v155 + 56))(v65, 0, 1, v157);
  }
  uint64_t v70 = a3[26];
  uint64_t v71 = &a1[v70];
  int v72 = &a2[v70];
  uint64_t v152 = v67;
  if (v67(&a2[v70], 1, v157))
  {
    uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(v71, v72, *(void *)(*(void *)(v73 - 8) + 64));
  }
  else
  {
    v156(v71, v72, v157);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v68 + 56))(v71, 0, 1, v157);
  }
  uint64_t v74 = a3[28];
  *(void *)&a1[a3[27]] = *(void *)&a2[a3[27]];
  *(void *)&a1[v74] = *(void *)&a2[v74];
  uint64_t v75 = a3[29];
  uint64_t v76 = a3[30];
  char v151 = a3;
  int v77 = &a1[v75];
  char v78 = &a2[v75];
  uint64_t v79 = *((void *)v78 + 1);
  *(void *)int v77 = *(void *)v78;
  *((void *)v77 + 1) = v79;
  __dst = &a1[v76];
  uint64_t v153 = a2;
  uint64_t v80 = &a2[v76];
  uint64_t v81 = type metadata accessor for StaticSoftwareUpdate(0);
  uint64_t v82 = *(void *)(v81 - 8);
  __int16 v83 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v82 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v83(v80, 1, v81))
  {
    char v89 = __dst;
    uint64_t v86 = v156;
    v156(__dst, v80, v157);
    uint64_t v147 = v81;
    uint64_t v90 = *(int *)(v81 + 20);
    uint64_t v91 = &__dst[v90];
    unint64_t v92 = &v80[v90];
    uint64_t v93 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v104 = *((void *)v92 + 1);
      *(void *)uint64_t v91 = *(void *)v92;
      *((void *)v91 + 1) = v104;
      char updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      uint64_t v105 = updated[5];
      uint64_t v106 = &v91[v105];
      uint64_t v107 = &v92[v105];
      swift_bridgeObjectRetain();
      if (v149(v107, 1, v150))
      {
        uint64_t v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
        memcpy(v106, v107, *(void *)(*(void *)(v108 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v148 + 16))(v106, v107, v150);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v148 + 56))(v106, 0, 1, v150);
      }
      uint64_t v87 = v151;
      uint64_t v114 = updated[6];
      uint64_t v115 = &v91[v114];
      int v116 = &v92[v114];
      uint64_t v117 = *((void *)v116 + 1);
      *(void *)uint64_t v115 = *(void *)v116;
      *((void *)v115 + 1) = v117;
      uint64_t v118 = updated[7];
      uint64_t v119 = &v91[v118];
      uint64_t v120 = &v92[v118];
      uint64_t v121 = *((void *)v120 + 1);
      *(void *)uint64_t v119 = *(void *)v120;
      *((void *)v119 + 1) = v121;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
      v91[*(int *)(v122 + 48)] = v92[*(int *)(v122 + 48)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v109 = *((void *)v92 + 1);
        *(void *)uint64_t v91 = *(void *)v92;
        *((void *)v91 + 1) = v109;
        uint64_t v146 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        uint64_t v110 = v146[5];
        char v111 = &v91[v110];
        uint64_t v112 = &v92[v110];
        swift_bridgeObjectRetain();
        uint64_t v87 = v151;
        if (v149(v112, 1, v150))
        {
          uint64_t v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
          memcpy(v111, v112, *(void *)(*(void *)(v113 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v148 + 16))(v111, v112, v150);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v148 + 56))(v111, 0, 1, v150);
        }
        uint64_t v124 = v146[6];
        char v125 = &v91[v124];
        uint64_t v126 = &v92[v124];
        uint64_t v127 = *((void *)v126 + 1);
        *(void *)char v125 = *(void *)v126;
        *((void *)v125 + 1) = v127;
        uint64_t v128 = v146[7];
        uint64_t v129 = &v91[v128];
        uint64_t v130 = &v92[v128];
        uint64_t v131 = *((void *)v130 + 1);
        *(void *)uint64_t v129 = *(void *)v130;
        *((void *)v129 + 1) = v131;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
        v91[*(int *)(v132 + 48)] = v92[*(int *)(v132 + 48)];
        swift_storeEnumTagMultiPayload();
        uint64_t v85 = v157;
        char v88 = v152;
        uint64_t v123 = v147;
        char v89 = __dst;
        goto LABEL_32;
      }
      uint64_t v87 = v151;
      if (!EnumCaseMultiPayload)
      {
        uint64_t v85 = v157;
        v156(v91, v92, v157);
        uint64_t v95 = (int *)type metadata accessor for StaticHH2Update(0);
        v91[v95[5]] = v92[v95[5]];
        uint64_t v96 = v95[6];
        char v97 = &v91[v96];
        uint64_t v98 = &v92[v96];
        uint64_t v100 = *(void *)v98;
        uint64_t v99 = *((void *)v98 + 1);
        *(void *)char v97 = v100;
        *((void *)v97 + 1) = v99;
        uint64_t v101 = v95[7];
        uint64_t v102 = &v91[v101];
        char v103 = &v92[v101];
        v102[8] = v103[8];
        *(void *)uint64_t v102 = *(void *)v103;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
LABEL_29:
        char v88 = v152;
        uint64_t v123 = v147;
LABEL_32:
        (*(void (**)(char *, void, uint64_t, uint64_t))(v82 + 56))(v89, 0, 1, v123);
        goto LABEL_33;
      }
      memcpy(v91, v92, *(void *)(*(void *)(v93 - 8) + 64));
    }
    uint64_t v85 = v157;
    goto LABEL_29;
  }
  uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
  memcpy(__dst, v80, *(void *)(*(void *)(v84 - 8) + 64));
  uint64_t v86 = v156;
  uint64_t v85 = v157;
  uint64_t v87 = v151;
  char v88 = v152;
LABEL_33:
  uint64_t v133 = v87[32];
  a1[v87[31]] = *((unsigned char *)v153 + v87[31]);
  *(void *)&a1[v133] = *(void *)((char *)v153 + v133);
  uint64_t v134 = v87[33];
  uint64_t v135 = &a1[v134];
  uint64_t v136 = (char *)v153 + v134;
  swift_bridgeObjectRetain();
  if (v88(v136, 1, v85))
  {
    uint64_t v137 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(v135, v136, *(void *)(*(void *)(v137 - 8) + 64));
  }
  else
  {
    v86(v135, v136, v85);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v155 + 56))(v135, 0, 1, v85);
  }
  uint64_t v138 = v87[34];
  uint64_t v139 = v87[35];
  uint64_t v140 = &a1[v138];
  uint64_t v141 = (char *)v153 + v138;
  *(_WORD *)uint64_t v140 = *(_WORD *)v141;
  v140[2] = v141[2];
  uint64_t v142 = &a1[v139];
  uint64_t v143 = (char *)v153 + v139;
  *(void *)uint64_t v142 = *(void *)v143;
  *(_DWORD *)(v142 + 7) = *(_DWORD *)(v143 + 7);
  return a1;
}

uint64_t destroy for StaticService(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_251F34DA0();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v23 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v23(a1, v4);
  swift_bridgeObjectRelease();
  v23(a1 + a2[11], v4);
  uint64_t v6 = a1 + a2[13];
  uint64_t v7 = type metadata accessor for StaticDeviceMetadata();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
  {
    v23(v6, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v8 = a1 + a2[14];
  uint64_t v9 = sub_251F34D20();
  uint64_t v10 = *(void *)(v9 - 8);
  id v11 = *(unsigned int (**)(void))(v10 + 48);
  if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v11)(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v12 = a1 + a2[25];
  uint64_t v13 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v13(v12, 1, v4)) {
    v23(v12, v4);
  }
  uint64_t v22 = v10;
  uint64_t v14 = a1 + a2[26];
  if (!v13(v14, 1, v4)) {
    v23(v14, v4);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v15 = a1 + a2[30];
  uint64_t v16 = type metadata accessor for StaticSoftwareUpdate(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v15, 1, v16))
  {
    v23(v15, v4);
    uint64_t v17 = v15 + *(int *)(v16 + 20);
    type metadata accessor for StaticSoftwareUpdate.Kind(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v21 = v17 + *(int *)(type metadata accessor for StaticSoftwareUpdateMetadata(0) + 20);
      if (!v11()) {
        (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v9);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      if (EnumCaseMultiPayload) {
        goto LABEL_18;
      }
      v23(v17, v4);
      type metadata accessor for StaticHH2Update(0);
    }
    swift_bridgeObjectRelease();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  uint64_t v19 = a1 + a2[33];
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v13)(v19, 1, v4);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v23)(v19, v4);
  }
  return result;
}

uint64_t initializeWithCopy for StaticService(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v138 = *(void *)(v6 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v138 + 16);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  uint64_t v10 = (void *)(a1 + v8);
  id v11 = (void *)(a2 + v8);
  uint64_t v12 = v11[1];
  *uint64_t v10 = *v11;
  v10[1] = v12;
  *(unsigned char *)(a1 + v9) = *(unsigned char *)(a2 + v9);
  uint64_t v13 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v13) = *(unsigned char *)(a2 + v13);
  uint64_t v14 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v14) = *(unsigned char *)(a2 + v14);
  uint64_t v15 = a3[11];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  swift_bridgeObjectRetain();
  v7(v16, v17, v6);
  uint64_t v18 = a3[12];
  uint64_t v19 = a3[13];
  uint64_t v20 = a1 + v18;
  uint64_t v21 = a2 + v18;
  *(void *)uint64_t v20 = *(void *)v21;
  *(unsigned char *)(v20 + 8) = *(unsigned char *)(v21 + 8);
  uint64_t v22 = (char *)(a1 + v19);
  unint64_t v23 = (char *)(a2 + v19);
  uint64_t v24 = (int *)type metadata accessor for StaticDeviceMetadata();
  uint64_t v25 = *((void *)v24 - 1);
  uint64_t v139 = (void (*)(void *, const void *, uint64_t))v7;
  uint64_t v140 = v6;
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v25 + 48))(v23, 1, v24))
  {
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
    memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v22, (uint64_t)v23, v6);
    uint64_t v27 = v24[5];
    uint64_t v28 = &v22[v27];
    uint64_t v29 = &v23[v27];
    uint64_t v30 = *((void *)v29 + 1);
    *(void *)uint64_t v28 = *(void *)v29;
    *((void *)v28 + 1) = v30;
    uint64_t v31 = v24[6];
    uint64_t v32 = &v22[v31];
    uint64_t v33 = &v23[v31];
    uint64_t v34 = *((void *)v33 + 1);
    *(void *)uint64_t v32 = *(void *)v33;
    *((void *)v32 + 1) = v34;
    uint64_t v35 = v24[7];
    uint64_t v36 = &v22[v35];
    uint64_t v37 = &v23[v35];
    uint64_t v38 = *((void *)v37 + 1);
    *(void *)uint64_t v36 = *(void *)v37;
    *((void *)v36 + 1) = v38;
    uint64_t v39 = v24[8];
    uint64_t v40 = &v22[v39];
    uint64_t v41 = &v23[v39];
    uint64_t v42 = *((void *)v41 + 1);
    *(void *)uint64_t v40 = *(void *)v41;
    *((void *)v40 + 1) = v42;
    v22[v24[9]] = v23[v24[9]];
    v22[v24[10]] = v23[v24[10]];
    v22[v24[11]] = v23[v24[11]];
    v22[v24[12]] = v23[v24[12]];
    char v43 = *(void (**)(char *, void, uint64_t, int *))(v25 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v43(v22, 0, 1, v24);
  }
  uint64_t v44 = a3[14];
  uint64_t v45 = (void *)(a1 + v44);
  uint64_t v46 = (const void *)(a2 + v44);
  uint64_t v47 = sub_251F34D20();
  uint64_t v48 = *(void *)(v47 - 8);
  uint64_t v132 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v48 + 48);
  uint64_t v133 = v47;
  uint64_t v131 = v48;
  if (v132(v46, 1, v47))
  {
    uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    memcpy(v45, v46, *(void *)(*(void *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v48 + 16))(v45, v46, v47);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
  }
  uint64_t v50 = a3[16];
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  uint64_t v51 = (void *)(a1 + v50);
  uint64_t v52 = (void *)(a2 + v50);
  uint64_t v53 = v52[1];
  void *v51 = *v52;
  v51[1] = v53;
  uint64_t v54 = a3[18];
  *(unsigned char *)(a1 + a3[17]) = *(unsigned char *)(a2 + a3[17]);
  *(unsigned char *)(a1 + v54) = *(unsigned char *)(a2 + v54);
  uint64_t v55 = a3[20];
  *(unsigned char *)(a1 + a3[19]) = *(unsigned char *)(a2 + a3[19]);
  *(unsigned char *)(a1 + v55) = *(unsigned char *)(a2 + v55);
  uint64_t v56 = a3[21];
  uint64_t v57 = a3[22];
  uint64_t v58 = (void *)(a1 + v56);
  uint64_t v59 = (void *)(a2 + v56);
  uint64_t v60 = v59[1];
  *uint64_t v58 = *v59;
  v58[1] = v60;
  *(unsigned char *)(a1 + v57) = *(unsigned char *)(a2 + v57);
  uint64_t v61 = a3[24];
  *(unsigned char *)(a1 + a3[23]) = *(unsigned char *)(a2 + a3[23]);
  uint64_t v62 = a3[25];
  uint64_t v63 = (void *)(a1 + v62);
  *(unsigned char *)(a1 + v61) = *(unsigned char *)(a2 + v61);
  uint64_t v64 = (const void *)(a2 + v62);
  uint64_t v65 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v138 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v65(v64, 1, v140))
  {
    uint64_t v66 = v138;
    uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(v63, v64, *(void *)(*(void *)(v67 - 8) + 64));
  }
  else
  {
    v139(v63, v64, v140);
    uint64_t v66 = v138;
    (*(void (**)(void *, void, uint64_t, uint64_t))(v138 + 56))(v63, 0, 1, v140);
  }
  uint64_t v68 = a3[26];
  uint64_t v69 = (void *)(a1 + v68);
  uint64_t v70 = (const void *)(a2 + v68);
  uint64_t v135 = v65;
  if (v65((const void *)(a2 + v68), 1, v140))
  {
    uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(v69, v70, *(void *)(*(void *)(v71 - 8) + 64));
  }
  else
  {
    v139(v69, v70, v140);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v66 + 56))(v69, 0, 1, v140);
  }
  uint64_t v72 = a3[28];
  *(void *)(a1 + a3[27]) = *(void *)(a2 + a3[27]);
  *(void *)(a1 + v72) = *(void *)(a2 + v72);
  uint64_t v73 = a3[29];
  uint64_t v74 = a3[30];
  uint64_t v134 = a3;
  uint64_t v75 = (void *)(a1 + v73);
  uint64_t v76 = (void *)(a2 + v73);
  uint64_t v77 = v76[1];
  *uint64_t v75 = *v76;
  v75[1] = v77;
  __dst = (char *)(a1 + v74);
  uint64_t v137 = a2;
  char v78 = (char *)(a2 + v74);
  uint64_t v79 = type metadata accessor for StaticSoftwareUpdate(0);
  uint64_t v80 = *(void *)(v79 - 8);
  uint64_t v81 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v81(v78, 1, v79))
  {
    uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
    memcpy(__dst, v78, *(void *)(*(void *)(v82 - 8) + 64));
    uint64_t v84 = v139;
    uint64_t v83 = v140;
    uint64_t v85 = v135;
    goto LABEL_28;
  }
  uint64_t v130 = v80;
  uint64_t v84 = v139;
  v139(__dst, v78, v140);
  uint64_t v86 = v79;
  uint64_t v87 = *(int *)(v79 + 20);
  char v88 = &__dst[v87];
  char v89 = &v78[v87];
  uint64_t v90 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v101 = *((void *)v89 + 1);
    *(void *)char v88 = *(void *)v89;
    *((void *)v88 + 1) = v101;
    char updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
    uint64_t v102 = updated[5];
    char v103 = &v88[v102];
    uint64_t v104 = &v89[v102];
    swift_bridgeObjectRetain();
    if (v132(v104, 1, v133)) {
      goto LABEL_22;
    }
    goto LABEL_24;
  }
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v105 = *((void *)v89 + 1);
    *(void *)char v88 = *(void *)v89;
    *((void *)v88 + 1) = v105;
    char updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
    uint64_t v106 = updated[5];
    char v103 = &v88[v106];
    uint64_t v104 = &v89[v106];
    swift_bridgeObjectRetain();
    if (v132(v104, 1, v133))
    {
LABEL_22:
      uint64_t v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
      memcpy(v103, v104, *(void *)(*(void *)(v107 - 8) + 64));
LABEL_25:
      uint64_t v108 = updated[6];
      uint64_t v109 = &v88[v108];
      uint64_t v110 = &v89[v108];
      uint64_t v111 = *((void *)v110 + 1);
      *(void *)uint64_t v109 = *(void *)v110;
      *((void *)v109 + 1) = v111;
      uint64_t v112 = updated[7];
      uint64_t v113 = &v88[v112];
      uint64_t v114 = &v89[v112];
      uint64_t v115 = *((void *)v114 + 1);
      *(void *)uint64_t v113 = *(void *)v114;
      *((void *)v113 + 1) = v115;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
      v88[*(int *)(v116 + 48)] = v89[*(int *)(v116 + 48)];
      swift_storeEnumTagMultiPayload();
      goto LABEL_26;
    }
LABEL_24:
    (*(void (**)(char *, char *, uint64_t))(v131 + 16))(v103, v104, v133);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v131 + 56))(v103, 0, 1, v133);
    goto LABEL_25;
  }
  if (EnumCaseMultiPayload)
  {
    memcpy(v88, v89, *(void *)(*(void *)(v90 - 8) + 64));
LABEL_26:
    uint64_t v83 = v140;
    goto LABEL_27;
  }
  uint64_t v83 = v140;
  v139(v88, v89, v140);
  unint64_t v92 = (int *)type metadata accessor for StaticHH2Update(0);
  v88[v92[5]] = v89[v92[5]];
  uint64_t v93 = v92[6];
  id v94 = &v88[v93];
  uint64_t v95 = &v89[v93];
  uint64_t v97 = *(void *)v95;
  uint64_t v96 = *((void *)v95 + 1);
  *(void *)id v94 = v97;
  *((void *)v94 + 1) = v96;
  uint64_t v98 = v92[7];
  uint64_t v99 = &v88[v98];
  uint64_t v100 = &v89[v98];
  v99[8] = v100[8];
  *(void *)uint64_t v99 = *(void *)v100;
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
LABEL_27:
  a3 = v134;
  uint64_t v85 = v135;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v130 + 56))(__dst, 0, 1, v86);
LABEL_28:
  uint64_t v117 = a3[32];
  *(unsigned char *)(a1 + a3[31]) = *(unsigned char *)(v137 + a3[31]);
  *(void *)(a1 + v117) = *(void *)(v137 + v117);
  uint64_t v118 = a3[33];
  uint64_t v119 = (void *)(a1 + v118);
  uint64_t v120 = (const void *)(v137 + v118);
  swift_bridgeObjectRetain();
  if (v85(v120, 1, v83))
  {
    uint64_t v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(v119, v120, *(void *)(*(void *)(v121 - 8) + 64));
  }
  else
  {
    v84(v119, v120, v83);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v138 + 56))(v119, 0, 1, v83);
  }
  uint64_t v122 = a3[34];
  uint64_t v123 = a3[35];
  uint64_t v124 = a1 + v122;
  uint64_t v125 = v137 + v122;
  *(_WORD *)uint64_t v124 = *(_WORD *)v125;
  *(unsigned char *)(v124 + 2) = *(unsigned char *)(v125 + 2);
  uint64_t v126 = a1 + v123;
  uint64_t v127 = v137 + v123;
  *(void *)uint64_t v126 = *(void *)v127;
  *(_DWORD *)(v126 + 7) = *(_DWORD *)(v127 + 7);
  return a1;
}

uint64_t assignWithCopy for StaticService(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v167 = *(void *)(v6 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v167 + 24);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  uint64_t v166 = v6;
  uint64_t v164 = v7;
  v7(a1 + a3[11], a2 + a3[11], v6);
  uint64_t v11 = a3[12];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = (uint64_t *)(a2 + v11);
  uint64_t v14 = *v13;
  *(unsigned char *)(v12 + 8) = *((unsigned char *)v13 + 8);
  *(void *)uint64_t v12 = v14;
  uint64_t v15 = a3[13];
  uint64_t v16 = (unsigned char *)(a1 + v15);
  uint64_t v17 = (unsigned char *)(a2 + v15);
  uint64_t v18 = (int *)type metadata accessor for StaticDeviceMetadata();
  uint64_t v19 = *((void *)v18 - 1);
  uint64_t v20 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v19 + 48);
  int v21 = v20(v16, 1, v18);
  int v22 = v20(v17, 1, v18);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v167 + 16))(v16, v17, v166);
      uint64_t v23 = v18[5];
      uint64_t v24 = &v16[v23];
      uint64_t v25 = &v17[v23];
      void *v24 = *v25;
      v24[1] = v25[1];
      uint64_t v26 = v18[6];
      uint64_t v27 = &v16[v26];
      uint64_t v28 = &v17[v26];
      *uint64_t v27 = *v28;
      v27[1] = v28[1];
      uint64_t v29 = v18[7];
      uint64_t v30 = &v16[v29];
      uint64_t v31 = &v17[v29];
      *uint64_t v30 = *v31;
      v30[1] = v31[1];
      uint64_t v32 = v18[8];
      uint64_t v33 = &v16[v32];
      uint64_t v34 = &v17[v32];
      *uint64_t v33 = *v34;
      v33[1] = v34[1];
      v16[v18[9]] = v17[v18[9]];
      v16[v18[10]] = v17[v18[10]];
      v16[v18[11]] = v17[v18[11]];
      v16[v18[12]] = v17[v18[12]];
      uint64_t v35 = *(void (**)(unsigned char *, void, uint64_t, int *))(v19 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v35(v16, 0, 1, v18);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v22)
  {
    sub_251DD0FA0((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for StaticDeviceMetadata);
LABEL_6:
    uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
    memcpy(v16, v17, *(void *)(*(void *)(v36 - 8) + 64));
    goto LABEL_7;
  }
  v164((uint64_t)v16, (uint64_t)v17, v166);
  uint64_t v91 = v18[5];
  unint64_t v92 = &v16[v91];
  uint64_t v93 = &v17[v91];
  *unint64_t v92 = *v93;
  v92[1] = v93[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v94 = v18[6];
  uint64_t v95 = &v16[v94];
  uint64_t v96 = &v17[v94];
  *uint64_t v95 = *v96;
  v95[1] = v96[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v97 = v18[7];
  uint64_t v98 = &v16[v97];
  uint64_t v99 = &v17[v97];
  *uint64_t v98 = *v99;
  v98[1] = v99[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v100 = v18[8];
  uint64_t v101 = &v16[v100];
  uint64_t v102 = &v17[v100];
  *uint64_t v101 = *v102;
  v101[1] = v102[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[v18[9]] = v17[v18[9]];
  v16[v18[10]] = v17[v18[10]];
  v16[v18[11]] = v17[v18[11]];
  v16[v18[12]] = v17[v18[12]];
LABEL_7:
  uint64_t v37 = a3[14];
  uint64_t v38 = (void *)(a1 + v37);
  uint64_t v39 = (void *)(a2 + v37);
  uint64_t v40 = sub_251F34D20();
  uint64_t v41 = *(void *)(v40 - 8);
  uint64_t v42 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v41 + 48);
  int v43 = v42(v38, 1, v40);
  int v44 = v42(v39, 1, v40);
  uint64_t v162 = v40;
  uint64_t v161 = v41;
  if (v43)
  {
    uint64_t v45 = v166;
    if (!v44)
    {
      (*(void (**)(void *, void *, uint64_t))(v41 + 16))(v38, v39, v40);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  uint64_t v45 = v166;
  if (v44)
  {
    (*(void (**)(void *, uint64_t))(v41 + 8))(v38, v40);
LABEL_12:
    uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    memcpy(v38, v39, *(void *)(*(void *)(v46 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v41 + 24))(v38, v39, v40);
LABEL_13:
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v47 = a3[16];
  uint64_t v48 = (void *)(a1 + v47);
  uint64_t v49 = (void *)(a2 + v47);
  void *v48 = *v49;
  v48[1] = v49[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[17]) = *(unsigned char *)(a2 + a3[17]);
  *(unsigned char *)(a1 + a3[18]) = *(unsigned char *)(a2 + a3[18]);
  *(unsigned char *)(a1 + a3[19]) = *(unsigned char *)(a2 + a3[19]);
  *(unsigned char *)(a1 + a3[20]) = *(unsigned char *)(a2 + a3[20]);
  uint64_t v50 = a3[21];
  uint64_t v51 = (void *)(a1 + v50);
  uint64_t v52 = (void *)(a2 + v50);
  void *v51 = *v52;
  v51[1] = v52[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[22]) = *(unsigned char *)(a2 + a3[22]);
  *(unsigned char *)(a1 + a3[23]) = *(unsigned char *)(a2 + a3[23]);
  *(unsigned char *)(a1 + a3[24]) = *(unsigned char *)(a2 + a3[24]);
  uint64_t v53 = a3[25];
  uint64_t v54 = (unsigned char *)(a1 + v53);
  uint64_t v55 = (unsigned char *)(a2 + v53);
  uint64_t v56 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v167 + 48);
  int v57 = v56(a1 + v53, 1, v45);
  int v58 = v56((uint64_t)v55, 1, v45);
  if (v57)
  {
    if (!v58)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v167 + 16))(v54, v55, v45);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v167 + 56))(v54, 0, 1, v45);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v58)
  {
    (*(void (**)(unsigned char *, uint64_t))(v167 + 8))(v54, v45);
LABEL_18:
    uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(v54, v55, *(void *)(*(void *)(v59 - 8) + 64));
    goto LABEL_19;
  }
  v164((uint64_t)v54, (uint64_t)v55, v45);
LABEL_19:
  uint64_t v60 = a3[26];
  uint64_t v61 = (unsigned char *)(a1 + v60);
  uint64_t v62 = (unsigned char *)(a2 + v60);
  int v63 = v56(a1 + v60, 1, v45);
  int v64 = v56((uint64_t)v62, 1, v45);
  int v165 = v56;
  if (v63)
  {
    if (!v64)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v167 + 16))(v61, v62, v45);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v167 + 56))(v61, 0, 1, v45);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v64)
  {
    (*(void (**)(unsigned char *, uint64_t))(v167 + 8))(v61, v45);
LABEL_24:
    uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(v61, v62, *(void *)(*(void *)(v65 - 8) + 64));
    goto LABEL_25;
  }
  v164((uint64_t)v61, (uint64_t)v62, v45);
LABEL_25:
  *(void *)(a1 + a3[27]) = *(void *)(a2 + a3[27]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[28]) = *(void *)(a2 + a3[28]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v66 = a3[29];
  uint64_t v67 = a1 + v66;
  uint64_t v68 = a2 + v66;
  *(void *)(a1 + v66) = *(void *)(a2 + v66);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v67 + 8) = *(void *)(v68 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v69 = a3[30];
  uint64_t v70 = (char *)(a1 + v69);
  uint64_t v71 = (char *)(a2 + v69);
  uint64_t v72 = type metadata accessor for StaticSoftwareUpdate(0);
  uint64_t v163 = *(void *)(v72 - 8);
  uint64_t v73 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v163 + 48);
  int v74 = v73(v70, 1, v72);
  int v75 = v73(v71, 1, v72);
  if (v74)
  {
    if (!v75)
    {
      uint64_t v76 = *(void (**)(char *, char *, uint64_t))(v167 + 16);
      v76(v70, v71, v166);
      uint64_t v77 = *(int *)(v72 + 20);
      char v78 = &v70[v77];
      uint64_t v79 = &v71[v77];
      __dst = (void *)type metadata accessor for StaticSoftwareUpdate.Kind(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        *(void *)char v78 = *(void *)v79;
        *((void *)v78 + 1) = *((void *)v79 + 1);
        char updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        uint64_t v117 = updated[5];
        uint64_t v157 = &v78[v117];
        uint64_t v118 = &v79[v117];
        swift_bridgeObjectRetain();
        unint64_t v156 = v118;
        if (v42(v118, 1, v162))
        {
LABEL_46:
          uint64_t v120 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
          memcpy(v157, v156, *(void *)(*(void *)(v120 - 8) + 64));
LABEL_54:
          uint64_t v81 = v166;
          uint64_t v127 = updated[6];
          uint64_t v128 = &v78[v127];
          uint64_t v129 = &v79[v127];
          *(void *)uint64_t v128 = *(void *)v129;
          *((void *)v128 + 1) = *((void *)v129 + 1);
          uint64_t v130 = updated[7];
          uint64_t v131 = &v78[v130];
          uint64_t v132 = &v79[v130];
          *(void *)uint64_t v131 = *(void *)v132;
          *((void *)v131 + 1) = *((void *)v132 + 1);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v133 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
          v78[*(int *)(v133 + 48)] = v79[*(int *)(v133 + 48)];
          goto LABEL_55;
        }
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          if (EnumCaseMultiPayload)
          {
            memcpy(v78, v79, *(void *)(*(__dst - 1) + 64));
            uint64_t v81 = v166;
LABEL_56:
            (*(void (**)(char *, void, uint64_t, uint64_t))(v163 + 56))(v70, 0, 1, v72);
            goto LABEL_57;
          }
          v76(v78, v79, v166);
          uint64_t v81 = v166;
          uint64_t v82 = (int *)type metadata accessor for StaticHH2Update(0);
          v78[v82[5]] = v79[v82[5]];
          uint64_t v83 = v82[6];
          uint64_t v84 = &v78[v83];
          uint64_t v85 = &v79[v83];
          *(void *)uint64_t v84 = *(void *)v85;
          *((void *)v84 + 1) = *((void *)v85 + 1);
          uint64_t v86 = v82[7];
          uint64_t v87 = &v78[v86];
          char v88 = &v79[v86];
          char v89 = v88[8];
          *(void *)uint64_t v87 = *(void *)v88;
          v87[8] = v89;
          swift_bridgeObjectRetain();
LABEL_55:
          swift_storeEnumTagMultiPayload();
          goto LABEL_56;
        }
        *(void *)char v78 = *(void *)v79;
        *((void *)v78 + 1) = *((void *)v79 + 1);
        char updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        uint64_t v119 = updated[5];
        uint64_t v157 = &v78[v119];
        uint64_t v118 = &v79[v119];
        swift_bridgeObjectRetain();
        unint64_t v156 = v118;
        if (v42(v118, 1, v162)) {
          goto LABEL_46;
        }
      }
      (*(void (**)(char *, char *, uint64_t))(v161 + 16))(v157, v118, v162);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v161 + 56))(v157, 0, 1, v162);
      goto LABEL_54;
    }
LABEL_33:
    uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
    memcpy(v70, v71, *(void *)(*(void *)(v90 - 8) + 64));
    uint64_t v81 = v166;
    goto LABEL_57;
  }
  if (v75)
  {
    sub_251DD0FA0((uint64_t)v70, type metadata accessor for StaticSoftwareUpdate);
    goto LABEL_33;
  }
  uint64_t v81 = v166;
  v164((uint64_t)v70, (uint64_t)v71, v166);
  if (a1 == a2) {
    goto LABEL_57;
  }
  uint64_t v103 = *(int *)(v72 + 20);
  uint64_t v104 = &v70[v103];
  uint64_t v105 = &v71[v103];
  sub_251DD0FA0((uint64_t)v104, type metadata accessor for StaticSoftwareUpdate.Kind);
  uint64_t v106 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  int v107 = swift_getEnumCaseMultiPayload();
  if (v107 == 2)
  {
    *(void *)uint64_t v104 = *(void *)v105;
    *((void *)v104 + 1) = *((void *)v105 + 1);
    uint64_t v121 = type metadata accessor for StaticSoftwareUpdateMetadata(0);
    uint64_t v122 = *(int *)(v121 + 20);
    uint64_t v158 = v121;
    __dsta = &v104[v122];
    uint64_t v123 = &v105[v122];
    swift_bridgeObjectRetain();
    if (v42(v123, 1, v162))
    {
LABEL_49:
      uint64_t v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
      memcpy(__dsta, v123, *(void *)(*(void *)(v124 - 8) + 64));
LABEL_66:
      uint64_t v149 = *(int *)(v158 + 24);
      uint64_t v150 = &v104[v149];
      char v151 = &v105[v149];
      *(void *)uint64_t v150 = *(void *)v151;
      *((void *)v150 + 1) = *((void *)v151 + 1);
      uint64_t v152 = *(int *)(v158 + 28);
      uint64_t v153 = &v104[v152];
      uint64_t v154 = &v105[v152];
      *(void *)uint64_t v153 = *(void *)v154;
      *((void *)v153 + 1) = *((void *)v154 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v155 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
      v104[*(int *)(v155 + 48)] = v105[*(int *)(v155 + 48)];
      swift_storeEnumTagMultiPayload();
      goto LABEL_57;
    }
LABEL_65:
    (*(void (**)(char *, char *, uint64_t))(v161 + 16))(__dsta, v123, v162);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v161 + 56))(__dsta, 0, 1, v162);
    goto LABEL_66;
  }
  if (v107 == 1)
  {
    *(void *)uint64_t v104 = *(void *)v105;
    *((void *)v104 + 1) = *((void *)v105 + 1);
    uint64_t v125 = type metadata accessor for StaticSoftwareUpdateMetadata(0);
    uint64_t v126 = *(int *)(v125 + 20);
    uint64_t v158 = v125;
    __dsta = &v104[v126];
    uint64_t v123 = &v105[v126];
    swift_bridgeObjectRetain();
    if (v42(v123, 1, v162)) {
      goto LABEL_49;
    }
    goto LABEL_65;
  }
  if (v107)
  {
    memcpy(v104, v105, *(void *)(*(void *)(v106 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v167 + 16))(v104, v105, v166);
    uint64_t v108 = (int *)type metadata accessor for StaticHH2Update(0);
    v104[v108[5]] = v105[v108[5]];
    uint64_t v109 = v108[6];
    uint64_t v110 = &v104[v109];
    uint64_t v111 = &v105[v109];
    *(void *)uint64_t v110 = *(void *)v111;
    *((void *)v110 + 1) = *((void *)v111 + 1);
    uint64_t v112 = v108[7];
    uint64_t v113 = &v104[v112];
    uint64_t v114 = &v105[v112];
    char v115 = v114[8];
    *(void *)uint64_t v113 = *(void *)v114;
    v113[8] = v115;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
LABEL_57:
  *(unsigned char *)(a1 + a3[31]) = *(unsigned char *)(a2 + a3[31]);
  *(void *)(a1 + a3[32]) = *(void *)(a2 + a3[32]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v134 = a3[33];
  uint64_t v135 = (unsigned char *)(a1 + v134);
  uint64_t v136 = (unsigned char *)(a2 + v134);
  int v137 = v165(a1 + v134, 1, v81);
  int v138 = v165((uint64_t)v136, 1, v81);
  if (!v137)
  {
    if (!v138)
    {
      v164((uint64_t)v135, (uint64_t)v136, v81);
      goto LABEL_63;
    }
    (*(void (**)(unsigned char *, uint64_t))(v167 + 8))(v135, v81);
    goto LABEL_62;
  }
  if (v138)
  {
LABEL_62:
    uint64_t v139 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(v135, v136, *(void *)(*(void *)(v139 - 8) + 64));
    goto LABEL_63;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v167 + 16))(v135, v136, v81);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v167 + 56))(v135, 0, 1, v81);
LABEL_63:
  uint64_t v140 = a3[34];
  uint64_t v141 = a1 + v140;
  uint64_t v142 = (__int16 *)(a2 + v140);
  __int16 v143 = *v142;
  *(unsigned char *)(v141 + 2) = *((unsigned char *)v142 + 2);
  *(_WORD *)uint64_t v141 = v143;
  uint64_t v144 = a3[35];
  uint64_t v145 = a1 + v144;
  uint64_t v146 = (uint64_t *)(a2 + v144);
  uint64_t v147 = *v146;
  *(_DWORD *)(v145 + 7) = *(_DWORD *)((char *)v146 + 7);
  *(void *)uint64_t v145 = v147;
  return a1;
}

uint64_t initializeWithTake for StaticService(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v83 = *(void *)(v6 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v83 + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  uint64_t v9 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v9) = *(unsigned char *)(a2 + v9);
  uint64_t v10 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v10) = *(unsigned char *)(a2 + v10);
  v7(a1 + a3[11], a2 + a3[11], v6);
  uint64_t v11 = a3[12];
  uint64_t v12 = a3[13];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = a2 + v11;
  *(void *)uint64_t v13 = *(void *)v14;
  *(unsigned char *)(v13 + 8) = *(unsigned char *)(v14 + 8);
  uint64_t v15 = (char *)(a1 + v12);
  uint64_t v16 = (char *)(a2 + v12);
  uint64_t v17 = (int *)type metadata accessor for StaticDeviceMetadata();
  uint64_t v18 = *((void *)v17 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v18 + 48))(v16, 1, v17))
  {
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v15, (uint64_t)v16, v6);
    *(_OWORD *)&v15[v17[5]] = *(_OWORD *)&v16[v17[5]];
    *(_OWORD *)&v15[v17[6]] = *(_OWORD *)&v16[v17[6]];
    *(_OWORD *)&v15[v17[7]] = *(_OWORD *)&v16[v17[7]];
    *(_OWORD *)&v15[v17[8]] = *(_OWORD *)&v16[v17[8]];
    v15[v17[9]] = v16[v17[9]];
    v15[v17[10]] = v16[v17[10]];
    v15[v17[11]] = v16[v17[11]];
    v15[v17[12]] = v16[v17[12]];
    (*(void (**)(char *, void, uint64_t, int *))(v18 + 56))(v15, 0, 1, v17);
  }
  uint64_t v20 = a3[14];
  int v21 = (void *)(a1 + v20);
  int v22 = (const void *)(a2 + v20);
  uint64_t v23 = sub_251F34D20();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v82 = *(unsigned int (**)(void))(v24 + 48);
  uint64_t v25 = v83;
  if (((unsigned int (*)(const void *, uint64_t, uint64_t))v82)(v22, 1, v23))
  {
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    memcpy(v21, v22, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v24 + 32))(v21, v22, v23);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  uint64_t v27 = a3[16];
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  *(_OWORD *)(a1 + v27) = *(_OWORD *)(a2 + v27);
  uint64_t v28 = a3[18];
  *(unsigned char *)(a1 + a3[17]) = *(unsigned char *)(a2 + a3[17]);
  *(unsigned char *)(a1 + v28) = *(unsigned char *)(a2 + v28);
  uint64_t v29 = a3[20];
  *(unsigned char *)(a1 + a3[19]) = *(unsigned char *)(a2 + a3[19]);
  *(unsigned char *)(a1 + v29) = *(unsigned char *)(a2 + v29);
  uint64_t v30 = a3[22];
  *(_OWORD *)(a1 + a3[21]) = *(_OWORD *)(a2 + a3[21]);
  *(unsigned char *)(a1 + v30) = *(unsigned char *)(a2 + v30);
  uint64_t v31 = a3[24];
  *(unsigned char *)(a1 + a3[23]) = *(unsigned char *)(a2 + a3[23]);
  uint64_t v32 = a3[25];
  uint64_t v33 = (void *)(a1 + v32);
  *(unsigned char *)(a1 + v31) = *(unsigned char *)(a2 + v31);
  uint64_t v34 = (const void *)(a2 + v32);
  uint64_t v85 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v83 + 48);
  if (v85(a2 + v32, 1, v6))
  {
    uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v33, (uint64_t)v34, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v83 + 56))(v33, 0, 1, v6);
  }
  uint64_t v36 = a3[26];
  uint64_t v37 = (void *)(a1 + v36);
  uint64_t v38 = (const void *)(a2 + v36);
  uint64_t v84 = v7;
  uint64_t v81 = v23;
  if (v85(a2 + v36, 1, v6))
  {
    uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v37, (uint64_t)v38, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v83 + 56))(v37, 0, 1, v6);
  }
  uint64_t v40 = a3[28];
  *(void *)(a1 + a3[27]) = *(void *)(a2 + a3[27]);
  *(void *)(a1 + v40) = *(void *)(a2 + v40);
  uint64_t v41 = a3[30];
  *(_OWORD *)(a1 + a3[29]) = *(_OWORD *)(a2 + a3[29]);
  uint64_t v42 = (char *)(a1 + v41);
  int v43 = (char *)(a2 + v41);
  uint64_t v44 = type metadata accessor for StaticSoftwareUpdate(0);
  uint64_t v45 = *(void *)(v44 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
  {
    uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
    memcpy(v42, v43, *(void *)(*(void *)(v46 - 8) + 64));
    uint64_t v47 = (void (*)(void *, const void *, uint64_t))v84;
    goto LABEL_28;
  }
  uint64_t v79 = v45;
  v84((uint64_t)v42, (uint64_t)v43, v6);
  uint64_t v48 = *(int *)(v44 + 20);
  uint64_t v80 = v42;
  uint64_t v49 = &v42[v48];
  uint64_t v50 = &v43[v48];
  uint64_t v51 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 2)
  {
    if (EnumCaseMultiPayload != 1)
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
        uint64_t v25 = v83;
        uint64_t v47 = (void (*)(void *, const void *, uint64_t))v84;
      }
      else
      {
        v84((uint64_t)v49, (uint64_t)v50, v6);
        uint64_t v53 = (int *)type metadata accessor for StaticHH2Update(0);
        v49[v53[5]] = v50[v53[5]];
        *(_OWORD *)&v49[v53[6]] = *(_OWORD *)&v50[v53[6]];
        uint64_t v54 = v53[7];
        uint64_t v55 = &v49[v54];
        uint64_t v56 = &v50[v54];
        v55[8] = v56[8];
        *(void *)uint64_t v55 = *(void *)v56;
        uint64_t v47 = (void (*)(void *, const void *, uint64_t))v84;
        swift_storeEnumTagMultiPayload();
        uint64_t v25 = v83;
      }
      uint64_t v62 = v80;
      goto LABEL_27;
    }
    *(_OWORD *)uint64_t v49 = *(_OWORD *)v50;
    uint64_t updated = type metadata accessor for StaticSoftwareUpdateMetadata(0);
    uint64_t v60 = *(int *)(updated + 20);
    uint64_t v77 = updated;
    __dst = &v49[v60];
    __src = &v50[v60];
    if (v82()) {
      goto LABEL_22;
    }
LABEL_25:
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(__dst, __src, v81);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(__dst, 0, 1, v81);
    goto LABEL_26;
  }
  *(_OWORD *)uint64_t v49 = *(_OWORD *)v50;
  uint64_t v57 = type metadata accessor for StaticSoftwareUpdateMetadata(0);
  uint64_t v58 = *(int *)(v57 + 20);
  uint64_t v77 = v57;
  __dst = &v49[v58];
  __src = &v50[v58];
  if (!v82()) {
    goto LABEL_25;
  }
LABEL_22:
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  memcpy(__dst, __src, *(void *)(*(void *)(v61 - 8) + 64));
LABEL_26:
  uint64_t v62 = v80;
  *(_OWORD *)&v49[*(int *)(v77 + 24)] = *(_OWORD *)&v50[*(int *)(v77 + 24)];
  *(_OWORD *)&v49[*(int *)(v77 + 28)] = *(_OWORD *)&v50[*(int *)(v77 + 28)];
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
  v49[*(int *)(v63 + 48)] = v50[*(int *)(v63 + 48)];
  swift_storeEnumTagMultiPayload();
  uint64_t v25 = v83;
  uint64_t v47 = (void (*)(void *, const void *, uint64_t))v84;
LABEL_27:
  (*(void (**)(char *, void, uint64_t, uint64_t))(v79 + 56))(v62, 0, 1, v44);
LABEL_28:
  uint64_t v64 = a3[32];
  *(unsigned char *)(a1 + a3[31]) = *(unsigned char *)(a2 + a3[31]);
  *(void *)(a1 + v64) = *(void *)(a2 + v64);
  uint64_t v65 = a3[33];
  uint64_t v66 = (void *)(a1 + v65);
  uint64_t v67 = (const void *)(a2 + v65);
  if (v85(a2 + v65, 1, v6))
  {
    uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
  }
  else
  {
    v47(v66, v67, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(v66, 0, 1, v6);
  }
  uint64_t v69 = a3[34];
  uint64_t v70 = a3[35];
  uint64_t v71 = a1 + v69;
  uint64_t v72 = a2 + v69;
  *(_WORD *)uint64_t v71 = *(_WORD *)v72;
  *(unsigned char *)(v71 + 2) = *(unsigned char *)(v72 + 2);
  uint64_t v73 = a1 + v70;
  uint64_t v74 = a2 + v70;
  *(void *)uint64_t v73 = *(void *)v74;
  *(_DWORD *)(v73 + 7) = *(_DWORD *)(v74 + 7);
  return a1;
}

uint64_t assignWithTake for StaticService(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v151 = *(void *)(v6 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v151 + 40);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v13) = *(unsigned char *)(a2 + v13);
  uint64_t v14 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v14) = *(unsigned char *)(a2 + v14);
  uint64_t v15 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  uint64_t v150 = v6;
  uint64_t v148 = v7;
  v7(a1 + v15, a2 + v15, v6);
  uint64_t v16 = a3[12];
  uint64_t v17 = a3[13];
  uint64_t v18 = a1 + v16;
  uint64_t v19 = a2 + v16;
  *(void *)uint64_t v18 = *(void *)v19;
  *(unsigned char *)(v18 + 8) = *(unsigned char *)(v19 + 8);
  uint64_t v20 = (unsigned char *)(a1 + v17);
  int v21 = (unsigned char *)(a2 + v17);
  int v22 = (int *)type metadata accessor for StaticDeviceMetadata();
  uint64_t v23 = *((void *)v22 - 1);
  uint64_t v24 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v23 + 48);
  int v25 = v24(v20, 1, v22);
  int v26 = v24(v21, 1, v22);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v151 + 32))(v20, v21, v150);
      *(_OWORD *)&v20[v22[5]] = *(_OWORD *)&v21[v22[5]];
      *(_OWORD *)&v20[v22[6]] = *(_OWORD *)&v21[v22[6]];
      *(_OWORD *)&v20[v22[7]] = *(_OWORD *)&v21[v22[7]];
      *(_OWORD *)&v20[v22[8]] = *(_OWORD *)&v21[v22[8]];
      v20[v22[9]] = v21[v22[9]];
      v20[v22[10]] = v21[v22[10]];
      v20[v22[11]] = v21[v22[11]];
      v20[v22[12]] = v21[v22[12]];
      (*(void (**)(unsigned char *, void, uint64_t, int *))(v23 + 56))(v20, 0, 1, v22);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v26)
  {
    sub_251DD0FA0((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for StaticDeviceMetadata);
LABEL_6:
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
    memcpy(v20, v21, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_7;
  }
  v148((uint64_t)v20, (uint64_t)v21, v150);
  uint64_t v85 = v22[5];
  uint64_t v86 = &v20[v85];
  uint64_t v87 = (uint64_t *)&v21[v85];
  uint64_t v89 = *v87;
  uint64_t v88 = v87[1];
  *uint64_t v86 = v89;
  v86[1] = v88;
  swift_bridgeObjectRelease();
  uint64_t v90 = v22[6];
  uint64_t v91 = &v20[v90];
  unint64_t v92 = (uint64_t *)&v21[v90];
  uint64_t v94 = *v92;
  uint64_t v93 = v92[1];
  *uint64_t v91 = v94;
  v91[1] = v93;
  swift_bridgeObjectRelease();
  uint64_t v95 = v22[7];
  uint64_t v96 = &v20[v95];
  uint64_t v97 = (uint64_t *)&v21[v95];
  uint64_t v99 = *v97;
  uint64_t v98 = v97[1];
  *uint64_t v96 = v99;
  v96[1] = v98;
  swift_bridgeObjectRelease();
  uint64_t v100 = v22[8];
  uint64_t v101 = &v20[v100];
  uint64_t v102 = (uint64_t *)&v21[v100];
  uint64_t v104 = *v102;
  uint64_t v103 = v102[1];
  *uint64_t v101 = v104;
  v101[1] = v103;
  swift_bridgeObjectRelease();
  v20[v22[9]] = v21[v22[9]];
  v20[v22[10]] = v21[v22[10]];
  v20[v22[11]] = v21[v22[11]];
  v20[v22[12]] = v21[v22[12]];
LABEL_7:
  uint64_t v28 = a3[14];
  uint64_t v29 = (void *)(a1 + v28);
  uint64_t v30 = (const void *)(a2 + v28);
  uint64_t v31 = sub_251F34D20();
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = *(unsigned int (**)(void))(v32 + 48);
  int v34 = ((uint64_t (*)(void *, uint64_t, uint64_t))v33)(v29, 1, v31);
  int v35 = ((uint64_t (*)(const void *, uint64_t, uint64_t))v33)(v30, 1, v31);
  uint64_t v145 = v31;
  uint64_t v144 = v32;
  if (v34)
  {
    if (!v35)
    {
      (*(void (**)(void *, const void *, uint64_t))(v32 + 32))(v29, v30, v31);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v35)
  {
    (*(void (**)(void *, uint64_t))(v32 + 8))(v29, v31);
LABEL_12:
    uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    memcpy(v29, v30, *(void *)(*(void *)(v36 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, const void *, uint64_t))(v32 + 40))(v29, v30, v31);
LABEL_13:
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  swift_bridgeObjectRelease();
  uint64_t v37 = a3[16];
  uint64_t v38 = (void *)(a1 + v37);
  uint64_t v39 = (uint64_t *)(a2 + v37);
  uint64_t v41 = *v39;
  uint64_t v40 = v39[1];
  *uint64_t v38 = v41;
  v38[1] = v40;
  swift_bridgeObjectRelease();
  uint64_t v42 = a3[18];
  *(unsigned char *)(a1 + a3[17]) = *(unsigned char *)(a2 + a3[17]);
  *(unsigned char *)(a1 + v42) = *(unsigned char *)(a2 + v42);
  uint64_t v43 = a3[20];
  *(unsigned char *)(a1 + a3[19]) = *(unsigned char *)(a2 + a3[19]);
  *(unsigned char *)(a1 + v43) = *(unsigned char *)(a2 + v43);
  uint64_t v44 = a3[21];
  uint64_t v45 = (void *)(a1 + v44);
  uint64_t v46 = (uint64_t *)(a2 + v44);
  uint64_t v48 = *v46;
  uint64_t v47 = v46[1];
  *uint64_t v45 = v48;
  v45[1] = v47;
  swift_bridgeObjectRelease();
  uint64_t v49 = a3[23];
  *(unsigned char *)(a1 + a3[22]) = *(unsigned char *)(a2 + a3[22]);
  *(unsigned char *)(a1 + v49) = *(unsigned char *)(a2 + v49);
  uint64_t v50 = a3[25];
  *(unsigned char *)(a1 + a3[24]) = *(unsigned char *)(a2 + a3[24]);
  uint64_t v51 = (unsigned char *)(a1 + v50);
  uint64_t v52 = (unsigned char *)(a2 + v50);
  uint64_t v53 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v151 + 48);
  int v54 = v53(a1 + v50, 1, v150);
  int v55 = v53((uint64_t)v52, 1, v150);
  if (v54)
  {
    if (!v55)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v151 + 32))(v51, v52, v150);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v151 + 56))(v51, 0, 1, v150);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v55)
  {
    (*(void (**)(unsigned char *, uint64_t))(v151 + 8))(v51, v150);
LABEL_18:
    uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(v51, v52, *(void *)(*(void *)(v56 - 8) + 64));
    goto LABEL_19;
  }
  v148((uint64_t)v51, (uint64_t)v52, v150);
LABEL_19:
  uint64_t v57 = a3[26];
  uint64_t v58 = (unsigned char *)(a1 + v57);
  uint64_t v59 = (unsigned char *)(a2 + v57);
  int v60 = v53(a1 + v57, 1, v150);
  int v61 = v53((uint64_t)v59, 1, v150);
  uint64_t v149 = v53;
  if (v60)
  {
    if (!v61)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v151 + 32))(v58, v59, v150);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v151 + 56))(v58, 0, 1, v150);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v61)
  {
    (*(void (**)(unsigned char *, uint64_t))(v151 + 8))(v58, v150);
LABEL_24:
    uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(v58, v59, *(void *)(*(void *)(v62 - 8) + 64));
    goto LABEL_25;
  }
  v148((uint64_t)v58, (uint64_t)v59, v150);
LABEL_25:
  *(void *)(a1 + a3[27]) = *(void *)(a2 + a3[27]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[28]) = *(void *)(a2 + a3[28]);
  swift_bridgeObjectRelease();
  uint64_t v63 = a3[29];
  uint64_t v64 = a1 + v63;
  uint64_t v65 = a2 + v63;
  *(void *)(a1 + v63) = *(void *)(a2 + v63);
  swift_bridgeObjectRelease();
  *(void *)(v64 + 8) = *(void *)(v65 + 8);
  swift_bridgeObjectRelease();
  uint64_t v66 = a3[30];
  uint64_t v67 = a1 + v66;
  uint64_t v68 = (char *)(a2 + v66);
  uint64_t v69 = type metadata accessor for StaticSoftwareUpdate(0);
  __dst = *(void **)(v69 - 8);
  uint64_t v70 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))__dst[6];
  int v71 = v70(v67, 1, v69);
  int v72 = v70((uint64_t)v68, 1, v69);
  if (v71)
  {
    uint64_t v73 = v150;
    if (!v72)
    {
      uint64_t v140 = *(void (**)(uint64_t, char *, uint64_t))(v151 + 32);
      v140(v67, v68, v150);
      uint64_t v74 = *(int *)(v69 + 20);
      int v75 = (_OWORD *)(v67 + v74);
      uint64_t v76 = &v68[v74];
      uint64_t v142 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        *int v75 = *(_OWORD *)v76;
        uint64_t updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        uint64_t v115 = updated[5];
        uint64_t v139 = (char *)v75 + v115;
        uint64_t v141 = v75;
        int v138 = &v76[v115];
        if (v33())
        {
LABEL_47:
          uint64_t v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
          memcpy(v139, v138, *(void *)(*(void *)(v117 - 8) + 64));
LABEL_55:
          *(_OWORD *)((char *)v141 + updated[6]) = *(_OWORD *)&v76[updated[6]];
          *(_OWORD *)((char *)v141 + updated[7]) = *(_OWORD *)&v76[updated[7]];
          uint64_t v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
          *((unsigned char *)v141 + *(int *)(v122 + 48)) = v76[*(int *)(v122 + 48)];
          goto LABEL_56;
        }
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          if (EnumCaseMultiPayload)
          {
            memcpy(v75, v76, *(void *)(*(void *)(v142 - 8) + 64));
LABEL_57:
            ((void (*)(uint64_t, void, uint64_t, uint64_t))__dst[7])(v67, 0, 1, v69);
            goto LABEL_58;
          }
          v140((uint64_t)v75, v76, v150);
          char v78 = (int *)type metadata accessor for StaticHH2Update(0);
          *((unsigned char *)v75 + v78[5]) = v76[v78[5]];
          *(_OWORD *)((char *)v75 + v78[6]) = *(_OWORD *)&v76[v78[6]];
          uint64_t v79 = v78[7];
          uint64_t v80 = (char *)v75 + v79;
          uint64_t v81 = &v76[v79];
          v80[8] = v81[8];
          *(void *)uint64_t v80 = *(void *)v81;
LABEL_56:
          swift_storeEnumTagMultiPayload();
          goto LABEL_57;
        }
        *int v75 = *(_OWORD *)v76;
        uint64_t updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        uint64_t v116 = updated[5];
        uint64_t v139 = (char *)v75 + v116;
        uint64_t v141 = v75;
        int v138 = &v76[v116];
        if (v33()) {
          goto LABEL_47;
        }
      }
      (*(void (**)(char *, char *, uint64_t))(v144 + 32))(v139, v138, v145);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v144 + 56))(v139, 0, 1, v145);
      goto LABEL_55;
    }
    goto LABEL_33;
  }
  uint64_t v73 = v150;
  if (v72)
  {
    sub_251DD0FA0(v67, type metadata accessor for StaticSoftwareUpdate);
LABEL_33:
    size_t v82 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120) - 8) + 64);
    uint64_t v83 = (void *)v67;
    uint64_t v84 = v68;
    goto LABEL_34;
  }
  v148(v67, (uint64_t)v68, v150);
  if (a1 == a2) {
    goto LABEL_58;
  }
  uint64_t v105 = *(int *)(v69 + 20);
  uint64_t v106 = (_OWORD *)(v67 + v105);
  int v107 = &v68[v105];
  sub_251DD0FA0((uint64_t)v106, type metadata accessor for StaticSoftwareUpdate.Kind);
  uint64_t v108 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  int v109 = swift_getEnumCaseMultiPayload();
  if (v109 != 2)
  {
    if (v109 != 1)
    {
      if (!v109)
      {
        (*(void (**)(_OWORD *, char *, uint64_t))(v151 + 32))(v106, v107, v150);
        uint64_t v110 = (int *)type metadata accessor for StaticHH2Update(0);
        *((unsigned char *)v106 + v110[5]) = v107[v110[5]];
        *(_OWORD *)((char *)v106 + v110[6]) = *(_OWORD *)&v107[v110[6]];
        uint64_t v111 = v110[7];
        uint64_t v112 = (char *)v106 + v111;
        uint64_t v113 = &v107[v111];
        v112[8] = v113[8];
        *(void *)uint64_t v112 = *(void *)v113;
        swift_storeEnumTagMultiPayload();
        goto LABEL_58;
      }
      size_t v82 = *(void *)(*(void *)(v108 - 8) + 64);
      uint64_t v83 = v106;
      uint64_t v84 = v107;
LABEL_34:
      memcpy(v83, v84, v82);
      goto LABEL_58;
    }
    *uint64_t v106 = *(_OWORD *)v107;
    __int16 v143 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
    uint64_t v121 = v143[5];
    __dsta = (char *)v106 + v121;
    uint64_t v119 = &v107[v121];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v33)(&v107[v121], 1, v145)) {
      goto LABEL_50;
    }
LABEL_66:
    (*(void (**)(char *, char *, uint64_t))(v144 + 32))(__dsta, v119, v145);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v144 + 56))(__dsta, 0, 1, v145);
    goto LABEL_67;
  }
  *uint64_t v106 = *(_OWORD *)v107;
  __int16 v143 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
  uint64_t v118 = v143[5];
  __dsta = (char *)v106 + v118;
  uint64_t v119 = &v107[v118];
  if (!((unsigned int (*)(char *, uint64_t, uint64_t))v33)(&v107[v118], 1, v145)) {
    goto LABEL_66;
  }
LABEL_50:
  uint64_t v120 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  memcpy(__dsta, v119, *(void *)(*(void *)(v120 - 8) + 64));
LABEL_67:
  *(_OWORD *)((char *)v106 + v143[6]) = *(_OWORD *)&v107[v143[6]];
  *(_OWORD *)((char *)v106 + v143[7]) = *(_OWORD *)&v107[v143[7]];
  uint64_t v137 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
  *((unsigned char *)v106 + *(int *)(v137 + 48)) = v107[*(int *)(v137 + 48)];
  swift_storeEnumTagMultiPayload();
LABEL_58:
  uint64_t v123 = a3[32];
  *(unsigned char *)(a1 + a3[31]) = *(unsigned char *)(a2 + a3[31]);
  *(void *)(a1 + v123) = *(void *)(a2 + v123);
  swift_bridgeObjectRelease();
  uint64_t v124 = a3[33];
  uint64_t v125 = (unsigned char *)(a1 + v124);
  uint64_t v126 = (unsigned char *)(a2 + v124);
  int v127 = v149(a1 + v124, 1, v73);
  int v128 = v149((uint64_t)v126, 1, v73);
  if (!v127)
  {
    if (!v128)
    {
      v148((uint64_t)v125, (uint64_t)v126, v73);
      goto LABEL_64;
    }
    (*(void (**)(unsigned char *, uint64_t))(v151 + 8))(v125, v73);
    goto LABEL_63;
  }
  if (v128)
  {
LABEL_63:
    uint64_t v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(v125, v126, *(void *)(*(void *)(v129 - 8) + 64));
    goto LABEL_64;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v151 + 32))(v125, v126, v73);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v151 + 56))(v125, 0, 1, v73);
LABEL_64:
  uint64_t v130 = a3[34];
  uint64_t v131 = a3[35];
  uint64_t v132 = a1 + v130;
  uint64_t v133 = a2 + v130;
  *(_WORD *)uint64_t v132 = *(_WORD *)v133;
  *(unsigned char *)(v132 + 2) = *(unsigned char *)(v133 + 2);
  uint64_t v134 = a1 + v131;
  uint64_t v135 = a2 + v131;
  *(void *)uint64_t v134 = *(void *)v135;
  *(_DWORD *)(v134 + 7) = *(_DWORD *)(v135 + 7);
  return a1;
}

uint64_t getEnumTagSinglePayload for StaticService(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251DD00A0);
}

uint64_t sub_251DD00A0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_14:
    return v9(v10, a2, v8);
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v11 = *(void *)(a1 + a3[5] + 8);
    if (v11 >= 0xFFFFFFFF) {
      LODWORD(v11) = -1;
    }
    return (v11 + 1);
  }
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a2)
  {
    uint64_t v8 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a3[13];
LABEL_13:
    uint64_t v10 = a1 + v15;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    goto LABEL_14;
  }
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a3[14];
    goto LABEL_13;
  }
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a3[25];
    goto LABEL_13;
  }
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a3[30];
  return v19(v21, a2, v20);
}

uint64_t storeEnumTagSinglePayload for StaticService(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251DD02E0);
}

uint64_t sub_251DD02E0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = sub_251F34DA0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_12:
    return v11(v12, a2, a2, v10);
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[5] + 8) = (a2 - 1);
    return result;
  }
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[13];
LABEL_11:
    uint64_t v12 = a1 + v15;
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_12;
  }
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[14];
    goto LABEL_11;
  }
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[25];
    goto LABEL_11;
  }
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  uint64_t v20 = v18;
  uint64_t v21 = a1 + a4[30];
  return v19(v21, a2, a2, v20);
}

void sub_251DD050C()
{
  sub_251F34DA0();
  if (v0 <= 0x3F)
  {
    sub_251DD078C(319, qword_26B21FDE0, (void (*)(uint64_t))type metadata accessor for StaticDeviceMetadata);
    if (v1 <= 0x3F)
    {
      sub_251DD078C(319, (unint64_t *)&qword_26B21FD28, MEMORY[0x270FA9148]);
      if (v2 <= 0x3F)
      {
        sub_251DD078C(319, (unint64_t *)&qword_26B21FF98, MEMORY[0x270FA9548]);
        if (v3 <= 0x3F)
        {
          sub_251DD078C(319, &qword_26B220B48, (void (*)(uint64_t))type metadata accessor for StaticSoftwareUpdate);
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

void sub_251DD078C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_251F36190();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t getEnumTagSinglePayload for StaticService.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xE1) {
    goto LABEL_17;
  }
  if (a2 + 31 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 31) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 31;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 31;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 31;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x20;
  int v8 = v6 - 32;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for StaticService.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 31 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 31) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE1) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE0)
  {
    unsigned int v6 = ((a2 - 225) >> 8) + 1;
    *uint64_t result = a2 + 31;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251DD093CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 31;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticService.CodingKeys()
{
  return &type metadata for StaticService.CodingKeys;
}

unint64_t sub_251DD0978()
{
  unint64_t result = qword_269BA3898;
  if (!qword_269BA3898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3898);
  }
  return result;
}

unint64_t sub_251DD09D0()
{
  unint64_t result = qword_269BA38A0;
  if (!qword_269BA38A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA38A0);
  }
  return result;
}

unint64_t sub_251DD0A28()
{
  unint64_t result = qword_269BA38A8;
  if (!qword_269BA38A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA38A8);
  }
  return result;
}

uint64_t sub_251DD0A7C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_251DD0AC4@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_251DC15E8(a1, *(unsigned char *)(v2 + 16), *(void **)(v2 + 24), *(void *)(v2 + 32), *(void **)(v2 + 40), *(unsigned __int8 *)(v2 + 48), *(void *)(v2 + 56), *(void **)(v2 + 64), a2);
}

uint64_t sub_251DD0AF0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_251DD0B58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticService();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_251DD0BBC(uint64_t a1)
{
  return sub_251DD0F44(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_251DC2278);
}

uint64_t sub_251DD0BE8(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v42 = a3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F040);
  uint64_t result = MEMORY[0x270FA5388](v7);
  uint64_t v37 = (uint64_t)v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a1 + 16);
  if (!v11) {
    return result;
  }
  v34[1] = a1;
  v34[2] = v4;
  uint64_t v12 = *(int *)(result + 48);
  uint64_t v13 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  uint64_t v35 = *(void *)(v9 + 72);
  uint64_t v36 = v12;
  swift_bridgeObjectRetain();
  while (1)
  {
    uint64_t v41 = v11;
    uint64_t v39 = v13;
    uint64_t v15 = v37;
    sub_251A1B128(v13, v37, &qword_26B21F040);
    uint64_t v16 = sub_251F34DA0();
    uint64_t v40 = v34;
    uint64_t v17 = *(void *)(v16 - 8);
    MEMORY[0x270FA5388](v16);
    uint64_t v19 = (char *)v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 32);
    v38(v19, v15, v16);
    uint64_t v20 = *(void *)(v15 + v36);
    uint64_t v21 = *v42;
    unint64_t v23 = sub_2519FE584((uint64_t)v19);
    uint64_t v24 = *(void *)(v21 + 16);
    BOOL v25 = (v22 & 1) == 0;
    uint64_t v26 = v24 + v25;
    if (__OFADD__(v24, v25)) {
      break;
    }
    char v27 = v22;
    if (*(void *)(v21 + 24) >= v26)
    {
      if (a2)
      {
        if (v22) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_251A139FC();
        if (v27) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_251A04650(v26, a2 & 1);
      unint64_t v28 = sub_2519FE584((uint64_t)v19);
      if ((v27 & 1) != (v29 & 1)) {
        goto LABEL_20;
      }
      unint64_t v23 = v28;
      if (v27)
      {
LABEL_3:
        (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
        uint64_t v14 = *(void *)(*v42 + 56);

        *(void *)(v14 + 8 * v23) = v20;
        goto LABEL_4;
      }
    }
    uint64_t v30 = (void *)*v42;
    *(void *)(*v42 + 8 * (v23 >> 6) + 64) |= 1 << v23;
    v38((char *)(v30[6] + *(void *)(v17 + 72) * v23), (uint64_t)v19, v16);
    *(void *)(v30[7] + 8 * v23) = v20;
    uint64_t v31 = v30[2];
    BOOL v32 = __OFADD__(v31, 1);
    uint64_t v33 = v31 + 1;
    if (v32) {
      goto LABEL_19;
    }
    v30[2] = v33;
LABEL_4:
    uint64_t v13 = v39 + v35;
    a2 = 1;
    uint64_t v11 = v41 - 1;
    if (v41 == 1) {
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  uint64_t result = sub_251F36BA0();
  __break(1u);
  return result;
}

uint64_t sub_251DD0F18(uint64_t a1)
{
  return sub_251DD0F44(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_251DC4E10);
}

uint64_t sub_251DD0F44(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void))
{
  return a2(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(unsigned __int8 *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56));
}

uint64_t sub_251DD0F74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_251DC4424(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32), *(unsigned __int8 *)(v2 + 40), *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 48), *(void **)(v2 + 56), *(void *)(v2 + 64), a2);
}

uint64_t sub_251DD0FA0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_251DD1000(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_251DD1068()
{
  return sub_251D6ACD0() & 1;
}

void sub_251DD1094(uint64_t a1)
{
}

uint64_t static NSUserDefaults.forceNativeMatter.getter()
{
  return sub_251DD1290(&qword_269B9C4B0, (unsigned __int8 *)&byte_269BA38B0);
}

void sub_251DD10DC(uint64_t a1)
{
}

void sub_251DD1100(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4)
{
  id v5 = objc_msgSend(self, sel_standardUserDefaults);
  unsigned int v6 = (void *)sub_251F356C0();
  unsigned __int8 v7 = objc_msgSend(v5, sel_BOOLForKey_, v6);

  *a4 = v7;
}

uint64_t static NSUserDefaults.forceNewAccessoryDetails.getter()
{
  return sub_251DD1290(&qword_269B9C4B8, (unsigned __int8 *)&unk_269BA38B1);
}

void sub_251DD11AC()
{
  id v0 = objc_allocWithZone(MEMORY[0x263EFFA48]);
  unint64_t v1 = (void *)sub_251F356C0();
  id v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (v2)
  {
    uint64_t v3 = (void *)sub_251F356C0();
    unsigned __int8 v4 = objc_msgSend(v2, sel_BOOLForKey_, v3);
  }
  else
  {
    unsigned __int8 v4 = 0;
  }
  byte_269BA38B2 = v4;
}

uint64_t static NSUserDefaults.rvcProfileInstalled.getter()
{
  return sub_251DD1290(&qword_269B9C4C0, (unsigned __int8 *)&byte_269BA38B2);
}

uint64_t sub_251DD1290(void *a1, unsigned __int8 *a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  return *a2;
}

uint64_t sub_251DD12CC(uint64_t a1)
{
  uint64_t v3 = (int *)type metadata accessor for StaticService();
  uint64_t v4 = *((void *)v3 - 1);
  MEMORY[0x270FA5388](v3);
  unsigned int v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = MEMORY[0x263F8EE78];
  if (v7)
  {
    uint64_t v41 = v6;
    uint64_t v39 = v1;
    uint64_t v55 = MEMORY[0x263F8EE78];
    sub_251A3E44C(0, v7, 0);
    uint64_t v9 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v42 = *(void *)(v4 + 72);
    unint64_t v40 = (unint64_t)"iceTypeCapitalizedPlural";
    uint64_t v43 = v3;
    do
    {
      uint64_t v10 = (uint64_t *)(v9 + v3[21]);
      uint64_t v11 = (void *)v10[1];
      if (v11)
      {
        uint64_t v12 = *v10;
        swift_bridgeObjectRetain();
        v13._uint64_t countAndFlagsBits = v12;
        v13._object = v11;
        IconSymbol.init(rawValue:)(v13);
        int countAndFlagsBits_low = LOBYTE(v54.tileOnStateIconInfo.name._countAndFlagsBits);
        if (LOBYTE(v54.tileOnStateIconInfo.name._countAndFlagsBits) == 89)
        {
          if (qword_269B9C360 != -1) {
            swift_once();
          }
          object = *(void **)algn_269BA00F8;
          uint64_t countAndFlagsBits = qword_269BA00F0;
          HomeDataModel::StaticRenderingMode renderingMode = byte_269BA0100;
          uint64_t v17 = (void *)unk_269BA0110;
          int v48 = byte_269BA0118;
          uint64_t v18 = (void *)unk_269BA0128;
          uint64_t v49 = qword_269BA0120;
          uint64_t v50 = qword_269BA0108;
          int v51 = byte_269BA0130;
          unint64_t v19 = unk_269BA0140;
          uint64_t v47 = qword_269BA0138;
          int v45 = byte_269BA0148;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          unint64_t v46 = v19;
        }
        else
        {
          uint64_t v22 = IconSymbol.onStateSymbolName.getter();
          if ((countAndFlagsBits_low - 27) > 0x2C
            || ((1 << (countAndFlagsBits_low - 27)) & 0x1000000000C1) == 0)
          {
            int v25 = 2;
          }
          else
          {
            int v25 = 0;
          }
          int v51 = v25;
          uint64_t v26 = v22;
          char v27 = v23;
          LOBYTE(v54.tileOnStateIconInfo.name._countAndFlagsBits) = countAndFlagsBits_low;
          uint64_t v28 = IconSymbol.rawValue.getter();
          uint64_t v17 = v29;
          if ((countAndFlagsBits_low - 28) > 0x13) {
            int v30 = 0;
          }
          else {
            int v30 = byte_251F55242[(char)(countAndFlagsBits_low - 28)];
          }
          uint64_t v49 = v26;
          uint64_t v50 = v28;
          int v48 = v30;
          if (countAndFlagsBits_low == 31)
          {
            int v45 = 0;
            unint64_t v46 = v40 | 0x8000000000000000;
            uint64_t v47 = 0xD000000000000014;
          }
          else
          {
            LOBYTE(v54.tileOnStateIconInfo.name._countAndFlagsBits) = countAndFlagsBits_low;
            uint64_t v31 = IconSymbol.rawValue.getter();
            unint64_t v46 = v32;
            uint64_t v47 = v31;
            if ((countAndFlagsBits_low - 41) < 7 || countAndFlagsBits_low == 28) {
              int v45 = 2;
            }
            else {
              int v45 = 0;
            }
          }
          uint64_t v18 = v27;
          uint64_t countAndFlagsBits = v26;
          object = v27;
          HomeDataModel::StaticRenderingMode renderingMode = (char)v51;
        }
        swift_bridgeObjectRetain();
      }
      else
      {
        int v20 = *(unsigned __int8 *)(v9 + v3[24]);
        uint64_t v21 = (uint64_t)v41;
        sub_251DDC940(v9, (uint64_t)v41, (uint64_t (*)(void))type metadata accessor for StaticService);
        if (v20 == 53) {
          LOBYTE(v20) = *(unsigned char *)(v21 + v3[22]);
        }
        sub_251DDC9A8(v21, (uint64_t (*)(void))type metadata accessor for StaticService);
        char v53 = v20;
        char v52 = *(unsigned char *)(v9 + v3[23]);
        Icon.init(serviceKind:serviceSubKind:)(&v54, (HomeDataModel::ServiceKind)&v53, (HomeDataModel::ServiceSubKind_optional)&v52);
        object = v54.tileOnStateIconInfo.name._object;
        uint64_t countAndFlagsBits = v54.tileOnStateIconInfo.name._countAndFlagsBits;
        HomeDataModel::StaticRenderingMode renderingMode = v54.tileOnStateIconInfo.renderingMode;
        uint64_t v17 = v54.tileOffStateIconInfo.name._object;
        int v48 = v54.tileOffStateIconInfo.renderingMode;
        uint64_t v18 = v54.accessoryControlOnStateIconInfo.name._object;
        uint64_t v49 = v54.accessoryControlOnStateIconInfo.name._countAndFlagsBits;
        uint64_t v50 = v54.tileOffStateIconInfo.name._countAndFlagsBits;
        int v51 = v54.accessoryControlOnStateIconInfo.renderingMode;
        unint64_t v46 = (unint64_t)v54.accessoryControlOffStateIconInfo.name._object;
        uint64_t v47 = v54.accessoryControlOffStateIconInfo.name._countAndFlagsBits;
        int v45 = v54.accessoryControlOffStateIconInfo.renderingMode;
      }
      uint64_t v8 = v55;
      uint64_t v33 = v17;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_251A3E44C(0, *(void *)(v8 + 16) + 1, 1);
        uint64_t v8 = v55;
      }
      unint64_t v35 = *(void *)(v8 + 16);
      unint64_t v34 = *(void *)(v8 + 24);
      if (v35 >= v34 >> 1)
      {
        sub_251A3E44C(v34 > 1, v35 + 1, 1);
        uint64_t v8 = v55;
      }
      *(void *)(v8 + 16) = v35 + 1;
      uint64_t v36 = v8 + 96 * v35;
      *(void *)(v36 + 32) = countAndFlagsBits;
      *(void *)(v36 + 40) = object;
      *(unsigned char *)(v36 + 48) = renderingMode;
      *(void *)(v36 + 56) = v50;
      *(void *)(v36 + 64) = v33;
      *(unsigned char *)(v36 + 72) = v48;
      *(void *)(v36 + 80) = v49;
      *(void *)(v36 + 88) = v18;
      *(unsigned char *)(v36 + 96) = v51;
      unint64_t v37 = v46;
      *(void *)(v36 + 104) = v47;
      *(void *)(v36 + 112) = v37;
      v9 += v42;
      *(unsigned char *)(v36 + 120) = v45;
      --v7;
      uint64_t v3 = v43;
    }
    while (v7);
  }
  return v8;
}

uint64_t sub_251DD1744(uint64_t a1)
{
  uint64_t v3 = (int *)type metadata accessor for StaticService();
  uint64_t v4 = *((void *)v3 - 1);
  MEMORY[0x270FA5388](v3);
  unsigned int v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = MEMORY[0x263F8EE78];
  if (v7)
  {
    uint64_t v21 = v1;
    uint64_t v25 = MEMORY[0x263F8EE78];
    sub_251A3E848(0, v7, 0);
    uint64_t v9 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v22 = *(void *)(v4 + 72);
    unint64_t v23 = v6;
    do
    {
      int v10 = *(unsigned __int8 *)(v9 + v3[24]);
      sub_251DDC940(v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticService);
      if (v10 == 53) {
        LOWORD(v10) = v6[v3[22]];
      }
      sub_251DDC9A8((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticService);
      __int16 v11 = *(unsigned __int8 *)(v9 + v3[23]);
      uint64_t v12 = (uint64_t *)(v9 + v3[21]);
      Swift::String v13 = (void *)v12[1];
      if (v13)
      {
        uint64_t v14 = *v12;
        swift_bridgeObjectRetain();
        v15._uint64_t countAndFlagsBits = v14;
        v15._object = v13;
        IconSymbol.init(rawValue:)(v15);
        char v16 = v24;
      }
      else
      {
        char v16 = 89;
      }
      uint64_t v8 = v25;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_251A3E848(0, *(void *)(v8 + 16) + 1, 1);
        uint64_t v8 = v25;
      }
      unint64_t v18 = *(void *)(v8 + 16);
      unint64_t v17 = *(void *)(v8 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_251A3E848(v17 > 1, v18 + 1, 1);
        uint64_t v8 = v25;
      }
      *(void *)(v8 + 16) = v18 + 1;
      uint64_t v19 = v8 + 24 * v18;
      *(_WORD *)(v19 + 32) = v10 | (v11 << 8);
      *(unsigned char *)(v19 + 34) = 0;
      *(unsigned char *)(v19 + 35) = v16;
      *(void *)(v19 + 40) = 0;
      *(void *)(v19 + 48) = 0;
      unsigned int v6 = v23;
      v9 += v22;
      --v7;
    }
    while (v7);
  }
  return v8;
}

uint64_t sub_251DD197C(unint64_t a1)
{
  uint64_t v11 = MEMORY[0x263F8EE78];
  if (a1 >> 62)
  {
LABEL_16:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_251F366C0();
    if (v2) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
    {
LABEL_3:
      for (uint64_t i = 4; ; ++i)
      {
        uint64_t v4 = i - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          id v5 = (id)MEMORY[0x2533AB3A0](i - 4, a1);
          uint64_t v6 = i - 3;
          if (__OFADD__(v4, 1)) {
            goto LABEL_15;
          }
        }
        else
        {
          id v5 = *(id *)(a1 + 8 * i);
          uint64_t v6 = i - 3;
          if (__OFADD__(v4, 1))
          {
LABEL_15:
            __break(1u);
            goto LABEL_16;
          }
        }
        id v7 = v5;
        id v8 = objc_msgSend(v7, sel_accessory);
        id v9 = objc_msgSend(v8, sel_room);

        if (v9)
        {
          MEMORY[0x2533AA9D0]();
          if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_251F35B10();
          }
          sub_251F35B70();
          sub_251F35AE0();
        }
        if (v6 == v2)
        {
          swift_bridgeObjectRelease();
          return v11;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x263F8EE78];
}

uint64_t StaticServiceGroup.staticServices.getter()
{
  type metadata accessor for StaticServiceGroup();
  uint64_t v0 = swift_bridgeObjectRetain();
  return sub_251EDC188(v0);
}

uint64_t sub_251DD1B5C(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v25 = a1;
  uint64_t v26 = a3;
  int v24 = *a2;
  id v3 = objc_msgSend(a1, sel_serviceGroups);
  sub_251A1A568(0, &qword_26B21EB10);
  unint64_t v4 = sub_251F35AC0();

  if (!(v4 >> 62))
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v5) {
      goto LABEL_3;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    uint64_t v7 = MEMORY[0x263F8EE78];
    if (*(void *)(MEMORY[0x263F8EE78] + 16))
    {
LABEL_12:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C900);
      uint64_t v20 = sub_251F36700();
LABEL_16:
      uint64_t v28 = v20;
      sub_251DDC504(v7, 1, &v28);
      swift_bridgeObjectRelease();
      return v28;
    }
LABEL_15:
    uint64_t v20 = MEMORY[0x263F8EE80];
    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_251F366C0();
  swift_bridgeObjectRelease();
  if (!v5) {
    goto LABEL_14;
  }
LABEL_3:
  uint64_t v28 = MEMORY[0x263F8EE78];
  sub_251A3DF7C(0, v5 & ~(v5 >> 63), 0);
  if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v6 = 0;
    uint64_t v7 = v28;
    unint64_t v22 = v4;
    unint64_t v23 = v4 & 0xC000000000000001;
    id v8 = &qword_26B21FFE8;
    do
    {
      id v9 = v8;
      uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(v8);
      uint64_t v11 = *(void *)(v10 - 8);
      MEMORY[0x270FA5388](v10);
      Swift::String v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
      if (v23) {
        id v14 = (id)MEMORY[0x2533AB3A0](v6, v4);
      }
      else {
        id v14 = *(id *)(v4 + 8 * v6 + 32);
      }
      Swift::String v15 = v14;
      uint64_t v16 = (uint64_t)&v13[*(int *)(v10 + 48)];
      id v17 = objc_msgSend(v14, sel_uniqueIdentifier, v22);
      sub_251F34D80();

      unsigned __int8 v27 = v24;
      sub_251DD9BA8(v25, &v27, v15, v26, v16);

      uint64_t v28 = v7;
      unint64_t v19 = *(void *)(v7 + 16);
      unint64_t v18 = *(void *)(v7 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_251A3DF7C(v18 > 1, v19 + 1, 1);
        uint64_t v7 = v28;
      }
      ++v6;
      *(void *)(v7 + 16) = v19 + 1;
      id v8 = v9;
      sub_251A4ECF0((uint64_t)v13, v7+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(void *)(v11 + 72) * v19, v9);
      unint64_t v4 = v22;
    }
    while (v5 != v6);
    swift_bridgeObjectRelease();
    if (*(void *)(v7 + 16)) {
      goto LABEL_12;
    }
    goto LABEL_15;
  }
  __break(1u);
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t StaticServiceGroup.canBeToggled.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F108);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v58 = (uint64_t)&v56 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for StaticService();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  id v9 = (char *)&v56 - v8;
  uint64_t v10 = *(void *)(v0 + *(int *)(type metadata accessor for StaticServiceGroup() + 44));
  uint64_t v11 = v10 + 64;
  uint64_t v12 = 1 << *(unsigned char *)(v10 + 32);
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & *(void *)(v10 + 64);
  int64_t v67 = (unint64_t)(v12 + 63) >> 6;
  swift_bridgeObjectRetain_n();
  int64_t v15 = 0;
  uint64_t v59 = "00-8000-0026BB765291";
  unint64_t v56 = 0x8000000251F64EF0;
  unint64_t v66 = (unint64_t)"989.3.7\n";
  uint64_t v62 = v10;
  uint64_t v57 = v3;
  uint64_t v60 = v10 + 64;
  uint64_t v61 = v4;
  while (1)
  {
    while (1)
    {
      if (v14)
      {
        unint64_t v16 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        unint64_t v17 = v16 | (v15 << 6);
      }
      else
      {
        int64_t v20 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
          __break(1u);
          goto LABEL_177;
        }
        if (v20 >= v67) {
          goto LABEL_170;
        }
        unint64_t v21 = *(void *)(v11 + 8 * v20);
        ++v15;
        if (!v21)
        {
          int64_t v15 = v20 + 1;
          if (v20 + 1 >= v67) {
            goto LABEL_170;
          }
          unint64_t v21 = *(void *)(v11 + 8 * v15);
          if (!v21)
          {
            int64_t v15 = v20 + 2;
            if (v20 + 2 >= v67) {
              goto LABEL_170;
            }
            unint64_t v21 = *(void *)(v11 + 8 * v15);
            if (!v21)
            {
              int64_t v15 = v20 + 3;
              if (v20 + 3 >= v67) {
                goto LABEL_170;
              }
              unint64_t v21 = *(void *)(v11 + 8 * v15);
              if (!v21)
              {
                int64_t v15 = v20 + 4;
                if (v20 + 4 >= v67) {
                  goto LABEL_170;
                }
                unint64_t v21 = *(void *)(v11 + 8 * v15);
                if (!v21)
                {
                  int64_t v22 = v20 + 5;
                  if (v22 >= v67)
                  {
LABEL_170:
                    swift_release();
                    swift_bridgeObjectRelease();
                    return 1;
                  }
                  unint64_t v21 = *(void *)(v11 + 8 * v22);
                  if (!v21)
                  {
                    while (1)
                    {
                      int64_t v15 = v22 + 1;
                      if (__OFADD__(v22, 1)) {
                        break;
                      }
                      if (v15 >= v67) {
                        goto LABEL_170;
                      }
                      unint64_t v21 = *(void *)(v11 + 8 * v15);
                      ++v22;
                      if (v21) {
                        goto LABEL_166;
                      }
                    }
LABEL_177:
                    __break(1u);
                    JUMPOUT(0x251DD2BC8);
                  }
                  int64_t v15 = v22;
                }
              }
            }
          }
        }
LABEL_166:
        unint64_t v14 = (v21 - 1) & v21;
        unint64_t v17 = __clz(__rbit64(v21)) + (v15 << 6);
      }
      sub_251DDC940(*(void *)(v10 + 56) + *(void *)(v4 + 72) * v17, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticService);
      sub_251DDE09C((uint64_t)v9, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticService);
      unsigned int v18 = v7[*(int *)(v3 + 88)];
      BOOL v19 = v18 > 0x30 || ((1 << v18) & 0x1964491330008) == 0;
      if (v19) {
        break;
      }
LABEL_10:
      sub_251DDC9A8((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticService);
    }
    if (qword_269B9C310 != -1) {
      swift_once();
    }
    swift_beginAccess();
    unint64_t v23 = (char *)off_269B9F948;
    if (*((void *)off_269B9F948 + 2))
    {
      sub_251F36CA0();
      char v68 = v18;
      ServiceKind.rawValue.getter();
      swift_bridgeObjectRetain();
      sub_251F357B0();
      swift_bridgeObjectRelease();
      uint64_t v24 = sub_251F36D00();
      uint64_t v25 = -1 << v23[32];
      unint64_t v26 = v24 & ~v25;
      uint64_t v64 = v23 + 56;
      if ((*(void *)&v23[((v26 >> 3) & 0xFFFFFFFFFFFFFF8) + 56] >> v26))
      {
        uint64_t v63 = ~v25;
        uint64_t v65 = v23;
        while (1)
        {
          unint64_t v27 = v66 | 0x8000000000000000;
          switch(*(unsigned char *)(*((void *)v23 + 6) + v26))
          {
            case 1:
              uint64_t v28 = "0000003E-0000-1000-8000-0026BB765291";
              goto LABEL_84;
            case 2:
              uint64_t v28 = "00000270-0000-1000-8000-0026BB765291";
              goto LABEL_84;
            case 3:
              uint64_t v28 = "000000BB-0000-1000-8000-0026BB765291";
              goto LABEL_84;
            case 4:
              uint64_t v28 = "0000008D-0000-1000-8000-0026BB765291";
              goto LABEL_84;
            case 5:
              uint64_t v28 = "00000096-0000-1000-8000-0026BB765291";
              goto LABEL_84;
            case 6:
              uint64_t v28 = "00000042-0000-1000-8000-0026BB765291";
              goto LABEL_84;
            case 7:
              uint64_t v28 = "00000110-0000-1000-8000-0026BB765291";
              goto LABEL_84;
            case 8:
              uint64_t v28 = "00000204-0000-1000-8000-0026BB765291";
              goto LABEL_84;
            case 9:
              uint64_t v28 = "00000097-0000-1000-8000-0026BB765291";
              goto LABEL_84;
            case 0xA:
              uint64_t v28 = "0000007F-0000-1000-8000-0026BB765291";
              goto LABEL_84;
            case 0xB:
              uint64_t v28 = "00000080-0000-1000-8000-0026BB765291";
              goto LABEL_84;
            case 0xC:
              uint64_t v28 = "00000129-0000-1000-8000-0026BB765291";
              goto LABEL_84;
            case 0xD:
              uint64_t v28 = "00000237-0000-1000-8000-0026BB765291";
              goto LABEL_84;
            case 0xE:
              uint64_t v28 = "00000081-0000-1000-8000-0026BB765291";
              goto LABEL_84;
            case 0xF:
              uint64_t v28 = "00000121-0000-1000-8000-0026BB765291";
              goto LABEL_84;
            case 0x10:
              uint64_t v28 = "00000040-0000-1000-8000-0026BB765291";
              goto LABEL_84;
            case 0x11:
              uint64_t v28 = "000000D7-0000-1000-8000-0026BB765291";
              goto LABEL_84;
            case 0x12:
              uint64_t v28 = "000000BA-0000-1000-8000-0026BB765291";
              goto LABEL_84;
            case 0x13:
              uint64_t v28 = "00000041-0000-1000-8000-0026BB765291";
              goto LABEL_84;
            case 0x14:
              uint64_t v28 = "000000BC-0000-1000-8000-0026BB765291";
              goto LABEL_84;
            case 0x15:
              uint64_t v28 = "000000BD-0000-1000-8000-0026BB765291";
              goto LABEL_84;
            case 0x16:
              uint64_t v28 = "00000082-0000-1000-8000-0026BB765291";
              goto LABEL_84;
            case 0x17:
              uint64_t v28 = "000000D9-0000-1000-8000-0026BB765291";
              goto LABEL_84;
            case 0x18:
              uint64_t v28 = "000000CF-0000-1000-8000-0026BB765291";
              goto LABEL_84;
            case 0x19:
              uint64_t v28 = "000000CC-0000-1000-8000-0026BB765291";
              goto LABEL_84;
            case 0x1A:
              uint64_t v28 = "00000083-0000-1000-8000-0026BB765291";
              goto LABEL_84;
            case 0x1B:
              uint64_t v28 = "00000084-0000-1000-8000-0026BB765291";
              goto LABEL_84;
            case 0x1C:
              uint64_t v28 = "00000043-0000-1000-8000-0026BB765291";
              goto LABEL_84;
            case 0x1D:
              uint64_t v28 = "00000044-0000-1000-8000-0026BB765291";
              goto LABEL_84;
            case 0x1E:
              uint64_t v28 = "00000045-0000-1000-8000-0026BB765291";
              goto LABEL_84;
            case 0x1F:
              uint64_t v28 = "00000112-0000-1000-8000-0026BB765291";
              goto LABEL_84;
            case 0x20:
              uint64_t v28 = "00000085-0000-1000-8000-0026BB765291";
              goto LABEL_84;
            case 0x21:
              uint64_t v28 = "00000086-0000-1000-8000-0026BB765291";
              goto LABEL_84;
            case 0x22:
              uint64_t v28 = "00000047-0000-1000-8000-0026BB765291";
              goto LABEL_84;
            case 0x23:
              char v29 = v59;
              goto LABEL_85;
            case 0x24:
              uint64_t v28 = "000000B9-0000-1000-8000-0026BB765291";
              goto LABEL_84;
            case 0x25:
              uint64_t v28 = "00000087-0000-1000-8000-0026BB765291";
              goto LABEL_84;
            case 0x26:
              uint64_t v28 = "00000113-0000-1000-8000-0026BB765291";
              goto LABEL_84;
            case 0x27:
              uint64_t v28 = "00000088-0000-1000-8000-0026BB765291";
              goto LABEL_84;
            case 0x28:
              uint64_t v28 = "00000089-0000-1000-8000-0026BB765291";
              goto LABEL_84;
            case 0x29:
              uint64_t v28 = "00000049-0000-1000-8000-0026BB765291";
              goto LABEL_84;
            case 0x2A:
              uint64_t v28 = "00000125-0000-1000-8000-0026BB765291";
              goto LABEL_84;
            case 0x2B:
              uint64_t v28 = "00000122-0000-1000-8000-0026BB765291";
              goto LABEL_84;
            case 0x2C:
              uint64_t v28 = "000000D8-0000-1000-8000-0026BB765291";
              goto LABEL_84;
            case 0x2D:
              uint64_t v28 = "0000008A-0000-1000-8000-0026BB765291";
              goto LABEL_84;
            case 0x2E:
              uint64_t v28 = "0000004A-0000-1000-8000-0026BB765291";
              goto LABEL_84;
            case 0x2F:
              uint64_t v28 = "000000D0-0000-1000-8000-0026BB765291";
              goto LABEL_84;
            case 0x30:
              uint64_t v28 = "000000B7-0000-1000-8000-0026BB765291";
              goto LABEL_84;
            case 0x31:
              uint64_t v28 = "0000020A-0000-1000-8000-0026BB765291";
              goto LABEL_84;
            case 0x32:
              uint64_t v28 = "0000020F-0000-1000-8000-0026BB765291";
              goto LABEL_84;
            case 0x33:
              uint64_t v28 = "0000008B-0000-1000-8000-0026BB765291";
              goto LABEL_84;
            case 0x34:
              uint64_t v28 = "0000008C-0000-1000-8000-0026BB765291";
LABEL_84:
              char v29 = (char *)(v28 - 32);
LABEL_85:
              unint64_t v27 = (unint64_t)v29 | 0x8000000000000000;
              break;
            default:
              break;
          }
          unint64_t v30 = v66 | 0x8000000000000000;
          switch(v18)
          {
            case 1u:
              uint64_t v31 = "0000003E-0000-1000-8000-0026BB765291";
              goto LABEL_139;
            case 2u:
              uint64_t v31 = "00000270-0000-1000-8000-0026BB765291";
              goto LABEL_139;
            case 3u:
              uint64_t v31 = "000000BB-0000-1000-8000-0026BB765291";
              goto LABEL_139;
            case 4u:
              uint64_t v31 = "0000008D-0000-1000-8000-0026BB765291";
              goto LABEL_139;
            case 5u:
              uint64_t v31 = "00000096-0000-1000-8000-0026BB765291";
              goto LABEL_139;
            case 6u:
              uint64_t v31 = "00000042-0000-1000-8000-0026BB765291";
              goto LABEL_139;
            case 7u:
              uint64_t v31 = "00000110-0000-1000-8000-0026BB765291";
              goto LABEL_139;
            case 8u:
              uint64_t v31 = "00000204-0000-1000-8000-0026BB765291";
              goto LABEL_139;
            case 9u:
              uint64_t v31 = "00000097-0000-1000-8000-0026BB765291";
              goto LABEL_139;
            case 0xAu:
              uint64_t v31 = "0000007F-0000-1000-8000-0026BB765291";
              goto LABEL_139;
            case 0xBu:
              uint64_t v31 = "00000080-0000-1000-8000-0026BB765291";
              goto LABEL_139;
            case 0xCu:
              uint64_t v31 = "00000129-0000-1000-8000-0026BB765291";
              goto LABEL_139;
            case 0xDu:
              uint64_t v31 = "00000237-0000-1000-8000-0026BB765291";
              goto LABEL_139;
            case 0xEu:
              uint64_t v31 = "00000081-0000-1000-8000-0026BB765291";
              goto LABEL_139;
            case 0xFu:
              uint64_t v31 = "00000121-0000-1000-8000-0026BB765291";
              goto LABEL_139;
            case 0x10u:
              uint64_t v31 = "00000040-0000-1000-8000-0026BB765291";
              goto LABEL_139;
            case 0x11u:
              uint64_t v31 = "000000D7-0000-1000-8000-0026BB765291";
              goto LABEL_139;
            case 0x12u:
              uint64_t v31 = "000000BA-0000-1000-8000-0026BB765291";
              goto LABEL_139;
            case 0x13u:
              uint64_t v31 = "00000041-0000-1000-8000-0026BB765291";
              goto LABEL_139;
            case 0x14u:
              uint64_t v31 = "000000BC-0000-1000-8000-0026BB765291";
              goto LABEL_139;
            case 0x15u:
              uint64_t v31 = "000000BD-0000-1000-8000-0026BB765291";
              goto LABEL_139;
            case 0x16u:
              uint64_t v31 = "00000082-0000-1000-8000-0026BB765291";
              goto LABEL_139;
            case 0x17u:
              uint64_t v31 = "000000D9-0000-1000-8000-0026BB765291";
              goto LABEL_139;
            case 0x18u:
              uint64_t v31 = "000000CF-0000-1000-8000-0026BB765291";
              goto LABEL_139;
            case 0x19u:
              uint64_t v31 = "000000CC-0000-1000-8000-0026BB765291";
              goto LABEL_139;
            case 0x1Au:
              uint64_t v31 = "00000083-0000-1000-8000-0026BB765291";
              goto LABEL_139;
            case 0x1Bu:
              uint64_t v31 = "00000084-0000-1000-8000-0026BB765291";
              goto LABEL_139;
            case 0x1Cu:
              uint64_t v31 = "00000043-0000-1000-8000-0026BB765291";
              goto LABEL_139;
            case 0x1Du:
              uint64_t v31 = "00000044-0000-1000-8000-0026BB765291";
              goto LABEL_139;
            case 0x1Eu:
              uint64_t v31 = "00000045-0000-1000-8000-0026BB765291";
              goto LABEL_139;
            case 0x1Fu:
              uint64_t v31 = "00000112-0000-1000-8000-0026BB765291";
              goto LABEL_139;
            case 0x20u:
              uint64_t v31 = "00000085-0000-1000-8000-0026BB765291";
              goto LABEL_139;
            case 0x21u:
              uint64_t v31 = "00000086-0000-1000-8000-0026BB765291";
              goto LABEL_139;
            case 0x22u:
              uint64_t v31 = "00000047-0000-1000-8000-0026BB765291";
              goto LABEL_139;
            case 0x23u:
              unint64_t v32 = v59;
              goto LABEL_140;
            case 0x24u:
              uint64_t v31 = "000000B9-0000-1000-8000-0026BB765291";
              goto LABEL_139;
            case 0x25u:
              uint64_t v31 = "00000087-0000-1000-8000-0026BB765291";
              goto LABEL_139;
            case 0x26u:
              uint64_t v31 = "00000113-0000-1000-8000-0026BB765291";
              goto LABEL_139;
            case 0x27u:
              uint64_t v31 = "00000088-0000-1000-8000-0026BB765291";
              goto LABEL_139;
            case 0x28u:
              uint64_t v31 = "00000089-0000-1000-8000-0026BB765291";
              goto LABEL_139;
            case 0x29u:
              uint64_t v31 = "00000049-0000-1000-8000-0026BB765291";
              goto LABEL_139;
            case 0x2Au:
              uint64_t v31 = "00000125-0000-1000-8000-0026BB765291";
              goto LABEL_139;
            case 0x2Bu:
              uint64_t v31 = "00000122-0000-1000-8000-0026BB765291";
              goto LABEL_139;
            case 0x2Cu:
              uint64_t v31 = "000000D8-0000-1000-8000-0026BB765291";
              goto LABEL_139;
            case 0x2Du:
              uint64_t v31 = "0000008A-0000-1000-8000-0026BB765291";
              goto LABEL_139;
            case 0x2Eu:
              uint64_t v31 = "0000004A-0000-1000-8000-0026BB765291";
              goto LABEL_139;
            case 0x2Fu:
              uint64_t v31 = "000000D0-0000-1000-8000-0026BB765291";
              goto LABEL_139;
            case 0x30u:
              uint64_t v31 = "000000B7-0000-1000-8000-0026BB765291";
              goto LABEL_139;
            case 0x31u:
              uint64_t v31 = "0000020A-0000-1000-8000-0026BB765291";
              goto LABEL_139;
            case 0x32u:
              uint64_t v31 = "0000020F-0000-1000-8000-0026BB765291";
              goto LABEL_139;
            case 0x33u:
              uint64_t v31 = "0000008B-0000-1000-8000-0026BB765291";
              goto LABEL_139;
            case 0x34u:
              uint64_t v31 = "0000008C-0000-1000-8000-0026BB765291";
LABEL_139:
              unint64_t v32 = (char *)(v31 - 32);
LABEL_140:
              unint64_t v30 = (unint64_t)v32 | 0x8000000000000000;
              break;
            default:
              break;
          }
          if (v27 == v30)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            goto LABEL_169;
          }
          char v33 = sub_251F36B10();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v33) {
            break;
          }
          unint64_t v26 = (v26 + 1) & v63;
          unint64_t v23 = v65;
          if (((*(void *)&v64[(v26 >> 3) & 0xFFFFFFFFFFFFFF8] >> v26) & 1) == 0) {
            goto LABEL_144;
          }
        }
        swift_bridgeObjectRelease();
LABEL_169:
        uint64_t v4 = v61;
        uint64_t v10 = v62;
        uint64_t v11 = v60;
        goto LABEL_10;
      }
LABEL_144:
      swift_bridgeObjectRelease();
    }
    char v69 = v18;
    if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v34 == v56)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v35 = sub_251F36B10();
      swift_bridgeObjectRelease();
      if ((v35 & 1) == 0) {
        goto LABEL_174;
      }
    }
    uint64_t v36 = *(void *)&v7[*(int *)(v3 + 112)];
    if (!*(void *)(v36 + 16)) {
      break;
    }
    swift_bridgeObjectRetain();
    unint64_t v37 = sub_2519FE568(160);
    if (v38)
    {
      unint64_t v39 = v37;
      uint64_t v40 = *(void *)(v36 + 56);
      uint64_t v41 = type metadata accessor for StaticCharacteristic();
      uint64_t v42 = *(void *)(v41 - 8);
      uint64_t v43 = v40 + *(void *)(v42 + 72) * v39;
      uint64_t v44 = v58;
      sub_251DDC940(v43, v58, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v42 + 56))(v44, 0, 1, v41);
    }
    else
    {
      uint64_t v41 = type metadata accessor for StaticCharacteristic();
      uint64_t v44 = v58;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v58, 1, 1, v41);
    }
    swift_bridgeObjectRelease();
    type metadata accessor for StaticCharacteristic();
    uint64_t v45 = v44;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 48))(v44, 1, v41) == 1) {
      goto LABEL_172;
    }
    unint64_t v46 = (uint64_t *)(v44 + *(int *)(v41 + 44));
    uint64_t v47 = *v46;
    uint64_t v48 = v46[1];
    uint64_t v50 = v46[2];
    unint64_t v49 = v46[3];
    uint64_t v51 = v46[4];
    sub_251A11E3C(*v46, v48, v50, v49);
    sub_251DDC9A8(v45, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
    if (v49 >> 8 == 0xFFFFFFFF) {
      goto LABEL_174;
    }
    if (v49 >> 62)
    {
      sub_251A11E60(v47, v48, v50, v49);
      goto LABEL_174;
    }
    if (!v51)
    {
      if (v50 <= 1) {
        uint64_t v52 = 1;
      }
      else {
        uint64_t v52 = v50;
      }
      uint64_t v51 = sub_251A1815C(v48, v47, v52);
    }
    uint64_t v11 = v60;
    uint64_t v4 = v61;
    uint64_t v53 = *(void *)(v51 + 16);
    swift_bridgeObjectRelease();
    sub_251DDC9A8((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticService);
    BOOL v19 = v53 == 2;
    uint64_t v10 = v62;
    uint64_t v3 = v57;
    if (!v19)
    {
      swift_release();
      goto LABEL_175;
    }
  }
  uint64_t v55 = type metadata accessor for StaticCharacteristic();
  uint64_t v45 = v58;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v58, 1, 1, v55);
LABEL_172:
  sub_251A1B064(v45, &qword_26B21F108);
LABEL_174:
  sub_251DDC9A8((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticService);
  swift_release();
LABEL_175:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t StaticServiceGroup.set(displayName:)(uint64_t a1, uint64_t a2)
{
  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  return MEMORY[0x270FA2498](sub_251DD2D94, 0, 0);
}

uint64_t sub_251DD2D94()
{
  *(void *)(v0 + 144) = sub_251F35C80();
  *(void *)(v0 + 152) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251DD2E2C, v2, v1);
}

uint64_t sub_251DD2E2C()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251DD2EC4, 0, 0);
}

uint64_t sub_251DD2EC4()
{
  *(void *)(v0 + 160) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251DD2F50, v2, v1);
}

uint64_t sub_251DD2F50()
{
  swift_release();
  *(void *)(v0 + 168) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251DD2FC4, 0, 0);
}

uint64_t sub_251DD2FC4()
{
  *(void *)(v0 + 176) = sub_251F34D50();
  *(void *)(v0 + 184) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251DD3058, v2, v1);
}

uint64_t sub_251DD3058()
{
  uint64_t v1 = (void *)v0[22];
  uint64_t v2 = (void *)v0[21];
  swift_release();
  v0[24] = objc_msgSend(v2, sel_serviceGroupFor_, v1);

  return MEMORY[0x270FA2498](sub_251DD30E8, 0, 0);
}

uint64_t sub_251DD30E8()
{
  uint64_t v1 = (void *)v0[24];
  if (v1)
  {
    uint64_t v2 = sub_251F356C0();
    v0[25] = v2;
    v0[2] = v0;
    v0[3] = sub_251DB88C0;
    uint64_t v3 = swift_continuation_init();
    v0[10] = MEMORY[0x263EF8330];
    v0[11] = 0x40000000;
    v0[12] = sub_251A5B804;
    v0[13] = &block_descriptor_15;
    v0[14] = v3;
    objc_msgSend(v1, sel_updateName_completionHandler_, v2, v0 + 10);
    return MEMORY[0x270FA23F0](v0 + 2);
  }
  else
  {
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
}

uint64_t StaticServiceGroup.tileStatusString.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for StaticService();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  id v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v48 - v10;
  uint64_t v12 = type metadata accessor for StaticServiceGroup();
  MEMORY[0x270FA5388](v12);
  unint64_t v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_251DD6FD0();
  uint64_t v16 = v15;
  int v17 = *(unsigned __int8 *)(v0 + *(int *)(v12 + 24));
  sub_251DDC940(v1, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
  uint64_t v53 = v12;
  if (v17 != 1)
  {
LABEL_27:
    uint64_t v34 = v16;
    sub_251DDC9A8((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
    if (*(unsigned char *)(v1 + *(int *)(v12 + 28)))
    {
      uint64_t v35 = 0xD00000000000001FLL;
      uint64_t v36 = "HFServiceDescriptionUnavailable";
    }
    else
    {
      uint64_t v35 = 0xD00000000000001ELL;
      uint64_t v36 = "HFServiceDescriptionNoResponse";
    }
    uint64_t v37 = static String.hfLocalized(_:)(v35, (unint64_t)(v36 - 32) | 0x8000000000000000);
    uint64_t v39 = v38;
    uint64_t v40 = v34;
LABEL_31:
    char v41 = StaticServiceGroup.isUpdating.getter();
    uint64_t v42 = swift_bridgeObjectRetain();
    sub_251EDC188(v42);
    uint64_t v43 = swift_bridgeObjectRetain();
    uint64_t v44 = (void *)sub_251A9147C(v43);
    swift_bridgeObjectRelease();
    unint64_t v56 = v44;
    sub_251D8DA14(&v56);
    swift_bridgeObjectRelease();
    if (v56[2])
    {
      sub_251DDC940((uint64_t)v56 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)), (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v45 = 0;
    }
    else
    {
      uint64_t v45 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, v45, 1, v5);
    swift_release();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    {
      sub_251A1B064((uint64_t)v4, qword_26B21EE20);
      uint64_t v46 = 0;
      if (v41)
      {
LABEL_36:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v37 = static String.hfLocalized(_:)(0xD00000000000001CLL, 0x8000000251F70F30);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        return v37;
      }
    }
    else
    {
      uint64_t v46 = StaticService.tileCharacteristicStateString.getter();
      sub_251DDC9A8((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticService);
      if (v41) {
        goto LABEL_36;
      }
    }
    if (v39)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v40) {
        return v52;
      }
      else {
        return v46;
      }
    }
    return v37;
  }
  uint64_t v49 = v1;
  uint64_t v50 = v4;
  uint64_t v51 = v16;
  HomeDataModel::Icon v54 = v14;
  uint64_t v18 = swift_bridgeObjectRetain();
  uint64_t v19 = sub_251EDC188(v18);
  uint64_t v20 = v19;
  uint64_t v21 = v19 + 56;
  uint64_t v22 = 1 << *(unsigned char *)(v19 + 32);
  uint64_t v23 = -1;
  if (v22 < 64) {
    uint64_t v23 = ~(-1 << v22);
  }
  unint64_t v24 = v23 & *(void *)(v19 + 56);
  int64_t v25 = (unint64_t)(v22 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v26 = 0;
  while (v24)
  {
    unint64_t v27 = __clz(__rbit64(v24));
    v24 &= v24 - 1;
    unint64_t v28 = v27 | (v26 << 6);
LABEL_6:
    sub_251DDC940(*(void *)(v20 + 48) + *(void *)(v6 + 72) * v28, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticService);
    sub_251DDE09C((uint64_t)v11, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticService);
    unint64_t v56 = *(void **)&v9[*(int *)(v5 + 112)];
    char v55 = v9[*(int *)(v5 + 88)];
    Swift::Bool v29 = StaticCharacteristicsBag.isReachable(for:)((HomeDataModel::ServiceKind)&v55);
    sub_251DDC9A8((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticService);
    if (!v29)
    {
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v4 = v50;
      uint64_t v16 = v51;
      uint64_t v1 = v49;
      uint64_t v12 = v53;
      unint64_t v14 = v54;
      goto LABEL_27;
    }
  }
  int64_t v30 = v26 + 1;
  if (__OFADD__(v26, 1))
  {
    __break(1u);
    goto LABEL_46;
  }
  uint64_t v31 = (uint64_t)v54;
  if (v30 >= v25) {
    goto LABEL_40;
  }
  unint64_t v32 = *(void *)(v21 + 8 * v30);
  ++v26;
  if (v32) {
    goto LABEL_25;
  }
  int64_t v26 = v30 + 1;
  if (v30 + 1 >= v25) {
    goto LABEL_40;
  }
  unint64_t v32 = *(void *)(v21 + 8 * v26);
  if (v32) {
    goto LABEL_25;
  }
  int64_t v26 = v30 + 2;
  if (v30 + 2 >= v25) {
    goto LABEL_40;
  }
  unint64_t v32 = *(void *)(v21 + 8 * v26);
  if (v32) {
    goto LABEL_25;
  }
  int64_t v26 = v30 + 3;
  if (v30 + 3 >= v25) {
    goto LABEL_40;
  }
  unint64_t v32 = *(void *)(v21 + 8 * v26);
  if (v32) {
    goto LABEL_25;
  }
  int64_t v26 = v30 + 4;
  if (v30 + 4 >= v25) {
    goto LABEL_40;
  }
  unint64_t v32 = *(void *)(v21 + 8 * v26);
  if (v32)
  {
LABEL_25:
    unint64_t v24 = (v32 - 1) & v32;
    unint64_t v28 = __clz(__rbit64(v32)) + (v26 << 6);
    goto LABEL_6;
  }
  int64_t v33 = v30 + 5;
  if (v33 >= v25)
  {
LABEL_40:
    swift_release();
    swift_bridgeObjectRelease();
    sub_251DDC9A8(v31, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
    uint64_t v37 = 0;
    uint64_t v39 = 0;
    uint64_t v4 = v50;
    uint64_t v40 = v51;
    goto LABEL_31;
  }
  unint64_t v32 = *(void *)(v21 + 8 * v33);
  if (v32)
  {
    int64_t v26 = v33;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v26 = v33 + 1;
    if (__OFADD__(v33, 1)) {
      break;
    }
    if (v26 >= v25) {
      goto LABEL_40;
    }
    unint64_t v32 = *(void *)(v21 + 8 * v26);
    ++v33;
    if (v32) {
      goto LABEL_25;
    }
  }
LABEL_46:
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t StaticServiceGroup.set(staticRoom:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_251DD388C, 0, 0);
}

uint64_t sub_251DD388C()
{
  *(void *)(v0 + 32) = sub_251F35C80();
  *(void *)(v0 + 40) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251DD3924, v2, v1);
}

uint64_t sub_251DD3924()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251DD39BC, 0, 0);
}

uint64_t sub_251DD39BC()
{
  *(void *)(v0 + 48) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251DD3A48, v2, v1);
}

uint64_t sub_251DD3A48()
{
  swift_release();
  *(void *)(v0 + 56) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251DD3ABC, 0, 0);
}

uint64_t sub_251DD3ABC()
{
  *(void *)(v0 + 64) = sub_251F34D50();
  *(void *)(v0 + 72) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251DD3B54, v2, v1);
}

uint64_t sub_251DD3B54()
{
  uint64_t v1 = (void *)v0[8];
  uint64_t v2 = (void *)v0[7];
  swift_release();
  v0[10] = objc_msgSend(v2, sel_roomFor_, v1);

  return MEMORY[0x270FA2498](sub_251DD3BE4, 0, 0);
}

uint64_t sub_251DD3BE4()
{
  uint64_t v1 = v0[10];
  if (v1)
  {
    uint64_t v2 = v0[3];
    uint64_t v3 = swift_task_alloc();
    v0[11] = v3;
    *(void *)(v3 + 16) = v2;
    *(void *)(v3 + 24) = v1;
    uint64_t v4 = (void *)swift_task_alloc();
    v0[12] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_251DD3D34;
    uint64_t v5 = MEMORY[0x263F8EE60] + 8;
    uint64_t v6 = MEMORY[0x263F8EE60] + 8;
    uint64_t v7 = MEMORY[0x263F8EE60] + 8;
    return MEMORY[0x270FA22B8](v4, v5, v6, 0, 0, &unk_269BA24B0, v3, v7);
  }
  else
  {
    sub_251BB2208();
    swift_allocError();
    swift_willThrow();
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
}

uint64_t sub_251DD3D34()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251DB9058, 0, 0);
}

uint64_t StaticServiceGroup.set(room:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_251DD3E6C, 0, 0);
}

uint64_t sub_251DD3E6C()
{
  uint64_t v1 = (int8x16_t *)swift_task_alloc();
  v0[2].i64[0] = (uint64_t)v1;
  v1[1] = vextq_s8(v0[1], v0[1], 8uLL);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[2].i64[1] = (uint64_t)v2;
  *uint64_t v2 = v0;
  v2[1] = sub_251DD3F54;
  uint64_t v3 = MEMORY[0x263F8EE60] + 8;
  uint64_t v4 = MEMORY[0x263F8EE60] + 8;
  uint64_t v5 = MEMORY[0x263F8EE60] + 8;
  return MEMORY[0x270FA22B8](v2, v3, v4, 0, 0, &unk_269BA38D8, v1, v5);
}

uint64_t sub_251DD3F54()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251DD406C, 0, 0);
}

uint64_t sub_251DD406C()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t StaticServiceGroup.set(showInDashboard:)(char a1)
{
  *(void *)(v2 + 64) = v1;
  *(unsigned char *)(v2 + 128) = a1;
  return MEMORY[0x270FA2498](sub_251DD40A8, 0, 0);
}

uint64_t sub_251DD40A8()
{
  *(void *)(v0 + 72) = sub_251F35C80();
  *(void *)(v0 + 80) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251DD4140, v2, v1);
}

uint64_t sub_251DD4140()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251DD41D8, 0, 0);
}

uint64_t sub_251DD41D8()
{
  *(void *)(v0 + 88) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251DD4264, v2, v1);
}

uint64_t sub_251DD4264()
{
  swift_release();
  *(void *)(v0 + 96) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251DD42D8, 0, 0);
}

uint64_t sub_251DD42D8()
{
  *(void *)(v0 + 104) = sub_251F34D50();
  *(void *)(v0 + 112) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251DD436C, v2, v1);
}

uint64_t sub_251DD436C()
{
  uint64_t v1 = (void *)v0[13];
  uint64_t v2 = (void *)v0[12];
  swift_release();
  v0[15] = objc_msgSend(v2, sel_serviceGroupFor_, v1);

  return MEMORY[0x270FA2498](sub_251DD43FC, 0, 0);
}

void sub_251DD43FC()
{
  uint64_t v1 = (void *)v0[15];
  if (*((unsigned char *)v0 + 128) != 1)
  {
    if (!v1) {
      goto LABEL_22;
    }
    id v7 = objc_msgSend(v1, sel_services);
    sub_251A1A568(0, (unint64_t *)&qword_26B21F180);
    unint64_t v8 = sub_251F35AC0();

    if (v8 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_251F366C0();
      if (!v9) {
        goto LABEL_21;
      }
    }
    else
    {
      uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v9) {
        goto LABEL_21;
      }
    }
    if (v9 < 1)
    {
      __break(1u);
      goto LABEL_27;
    }
    uint64_t v10 = 0;
    unint64_t v24 = v8 & 0xC000000000000001;
    unint64_t v11 = v8;
    do
    {
      if (v24) {
        id v12 = (id)MEMORY[0x2533AB3A0](v10, v8);
      }
      else {
        id v12 = *(id *)(v8 + 8 * v10 + 32);
      }
      uint64_t v13 = v12;
      ++v10;
      id v14 = objc_msgSend(v12, sel_applicationData);
      id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A20]), sel_initWithBool_, 0);
      uint64_t v16 = (void *)sub_251F356C0();
      objc_msgSend(v14, sel_setObject_forKeyedSubscript_, v15, v16);

      id v17 = objc_msgSend(v13, sel_applicationData);
      uint64_t v18 = swift_allocObject();
      *(void *)(v18 + 16) = v13;
      v0[6] = sub_251DDBABC;
      v0[7] = v18;
      v0[2] = MEMORY[0x263EF8330];
      v0[3] = 1107296256;
      v0[4] = sub_251C97A44;
      v0[5] = &block_descriptor_8_0;
      uint64_t v19 = _Block_copy(v0 + 2);
      id v20 = v13;
      swift_release();
      objc_msgSend(v20, sel_updateApplicationData_completionHandler_, v17, v19);
      _Block_release(v19);

      unint64_t v8 = v11;
    }
    while (v9 != v10);
LABEL_21:

    swift_bridgeObjectRelease_n();
    goto LABEL_22;
  }
  if (v1)
  {
    id v2 = objc_msgSend(v1, sel_services);
    sub_251A1A568(0, (unint64_t *)&qword_26B21F180);
    unint64_t v3 = sub_251F35AC0();

    if (v3 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v21 = sub_251F366C0();
      swift_bridgeObjectRelease();
      if (v21) {
        goto LABEL_5;
      }
    }
    else if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_5:
      if ((v3 & 0xC000000000000001) != 0)
      {
        id v4 = (id)MEMORY[0x2533AB3A0](0, v3);
        goto LABEL_8;
      }
      if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        id v4 = *(id *)(v3 + 32);
LABEL_8:
        uint64_t v5 = v4;
        uint64_t v6 = (void *)v0[15];
        swift_bridgeObjectRelease();
        HMService.shouldShowInDashboard.setter(1);

        goto LABEL_22;
      }
LABEL_27:
      __break(1u);
      return;
    }
    uint64_t v22 = (void *)v0[15];
    swift_bridgeObjectRelease();
  }
LABEL_22:
  uint64_t v23 = (void (*)(void))v0[1];
  v23();
}

uint64_t StaticServiceGroup.set(favorite:)()
{
  return sub_251C5F41C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t StaticServiceGroup.name.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for StaticServiceGroup() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticServiceGroup.serviceGroup.getter()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_251DD4860, 0, 0);
}

uint64_t sub_251DD4860()
{
  *(void *)(v0 + 24) = sub_251F35C80();
  *(void *)(v0 + 32) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251DD48F8, v2, v1);
}

uint64_t sub_251DD48F8()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251DD4990, 0, 0);
}

uint64_t sub_251DD4990()
{
  *(void *)(v0 + 40) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251DD4A1C, v2, v1);
}

uint64_t sub_251DD4A1C()
{
  swift_release();
  *(void *)(v0 + 48) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251DD4A90, 0, 0);
}

uint64_t sub_251DD4A90()
{
  *(void *)(v0 + 56) = sub_251F34D50();
  *(void *)(v0 + 64) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251DD4B24, v2, v1);
}

uint64_t sub_251DD4B24()
{
  uint64_t v1 = (void *)v0[7];
  uint64_t v2 = (void *)v0[6];
  swift_release();
  id v3 = objc_msgSend(v2, sel_serviceGroupFor_, v1);

  uint64_t v4 = (uint64_t (*)(id))v0[1];
  return v4(v3);
}

void *StaticServiceGroup.sortedStaticServices.getter()
{
  type metadata accessor for StaticServiceGroup();
  uint64_t v0 = swift_bridgeObjectRetain();
  sub_251EDC188(v0);
  uint64_t v1 = swift_bridgeObjectRetain();
  uint64_t v2 = (void *)sub_251A9147C(v1);
  swift_bridgeObjectRelease();
  uint64_t v4 = v2;
  sub_251D8DA14(&v4);
  swift_bridgeObjectRelease();
  return v4;
}

Swift::Bool_optional __swiftcall StaticServiceGroup.BOOL(for:)(HomeDataModel::CharacteristicKind a1)
{
  uint64_t v1 = (unsigned __int8 *)a1;
  uint64_t v2 = type metadata accessor for StaticService();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v17[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 1];
  unsigned __int8 v6 = *v1;
  type metadata accessor for StaticServiceGroup();
  uint64_t v7 = swift_bridgeObjectRetain();
  sub_251EDC188(v7);
  uint64_t v8 = swift_bridgeObjectRetain();
  uint64_t v9 = (void *)sub_251A9147C(v8);
  swift_bridgeObjectRelease();
  uint64_t v18 = v9;
  sub_251D8DA14(&v18);
  swift_bridgeObjectRelease();
  uint64_t v10 = v18[2];
  if (v10)
  {
    unint64_t v11 = (char *)v18 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v12 = *(void *)(v3 + 72);
    swift_retain();
    char v13 = 0;
    do
    {
      sub_251DDC940((uint64_t)v11, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v18 = *(void **)&v5[*(int *)(v2 + 112)];
      v17[0] = v6;
      char v14 = sub_251B457DC(v17);
      if (v14 != 2) {
        v13 |= v14;
      }
      sub_251DDC9A8((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticService);
      v11 += v12;
      --v10;
    }
    while (v10);
    swift_release_n();
  }
  else
  {
    swift_release();
    char v13 = 0;
  }
  return (Swift::Bool_optional)(v13 & 1);
}

BOOL StaticServiceGroup.isActivated.getter()
{
  uint64_t v0 = type metadata accessor for StaticService();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v0 - 8);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  unsigned __int8 v6 = (char *)&v15 - v5;
  type metadata accessor for StaticServiceGroup();
  uint64_t v7 = swift_bridgeObjectRetain();
  sub_251EDC188(v7);
  uint64_t v8 = swift_bridgeObjectRetain();
  uint64_t v9 = (void *)sub_251A9147C(v8);
  swift_bridgeObjectRelease();
  uint64_t v16 = v9;
  sub_251D8DA14(&v16);
  swift_bridgeObjectRelease();
  uint64_t v10 = v16[2];
  if (v10)
  {
    unint64_t v11 = (char *)v16 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
    uint64_t v12 = *(void *)(v1 + 72);
    swift_retain();
    BOOL v13 = 0;
    do
    {
      sub_251DDC940((uint64_t)v11, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticService);
      sub_251DDC940((uint64_t)v6, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticService);
      BOOL v13 = v13 || StaticService.isActivated.getter();
      sub_251DDC9A8((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticService);
      sub_251DDC9A8((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticService);
      v11 += v12;
      --v10;
    }
    while (v10);
    swift_release_n();
  }
  else
  {
    swift_release();
    return 0;
  }
  return v13;
}

uint64_t StaticServiceGroup.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_251F34DA0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t StaticServiceGroup.isReachable.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticServiceGroup() + 24));
}

uint64_t StaticServiceGroup.homeNonResponsiveType.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for StaticServiceGroup();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t StaticServiceGroup.roomIds.getter()
{
  type metadata accessor for StaticServiceGroup();
  return swift_bridgeObjectRetain();
}

uint64_t StaticServiceGroup.roomName.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for StaticServiceGroup() + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticServiceGroup.shouldShowInDashboard.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticServiceGroup() + 40));
}

uint64_t StaticServiceGroup.staticServicesDictionary.getter()
{
  type metadata accessor for StaticServiceGroup();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for StaticServiceGroup()
{
  uint64_t result = qword_26B2209C0;
  if (!qword_26B2209C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t StaticServiceGroup.hash(into:)(long long *a1)
{
  uint64_t v2 = v1;
  sub_251F34DA0();
  sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
  sub_251F35610();
  uint64_t v4 = (int *)type metadata accessor for StaticServiceGroup();
  swift_bridgeObjectRetain();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  sub_251F36CC0();
  sub_251F36CB0();
  uint64_t v5 = *(void *)(v1 + v4[8]);
  swift_bridgeObjectRetain();
  sub_251A54708(a1, v5);
  swift_bridgeObjectRelease();
  if (*(void *)(v2 + v4[9] + 8))
  {
    sub_251F36CC0();
    swift_bridgeObjectRetain();
    sub_251F357B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_251F36CC0();
  }
  sub_251F36CC0();
  uint64_t v6 = *(void *)(v2 + v4[11]);
  swift_bridgeObjectRetain();
  sub_251A454AC((uint64_t)a1, v6);
  return swift_bridgeObjectRelease();
}

unint64_t sub_251DD5354(char a1)
{
  unint64_t result = 25705;
  switch(a1)
  {
    case 1:
      unint64_t result = 1701667182;
      break;
    case 2:
      unint64_t result = 0x6168636165527369;
      break;
    case 3:
    case 6:
      unint64_t result = 0xD000000000000015;
      break;
    case 4:
      unint64_t result = 0x7364496D6F6F72;
      break;
    case 5:
      unint64_t result = 0x656D614E6D6F6F72;
      break;
    case 7:
      unint64_t result = 0xD000000000000018;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_251DD544C()
{
  return sub_251DD5354(*v0);
}

uint64_t sub_251DD5454@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251DDD6C4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251DD547C(uint64_t a1)
{
  unint64_t v2 = sub_251DDBBF4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251DD54B8(uint64_t a1)
{
  unint64_t v2 = sub_251DDBBF4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticServiceGroup.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA38F8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251DDBBF4();
  sub_251F36DA0();
  LOBYTE(v11) = 0;
  sub_251F34DA0();
  sub_251A1A8EC(&qword_26B21E348);
  sub_251F36A20();
  if (!v2)
  {
    uint64_t v9 = (int *)type metadata accessor for StaticServiceGroup();
    LOBYTE(v11) = 1;
    sub_251F369D0();
    LOBYTE(v11) = 2;
    sub_251F369E0();
    LOBYTE(v11) = *(unsigned char *)(v3 + v9[7]);
    char v12 = 3;
    sub_251C84AF4();
    sub_251F36A20();
    uint64_t v11 = *(void *)(v3 + v9[8]);
    char v12 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC40);
    sub_251A1E490(&qword_269B9CC88, &qword_26B21E348);
    sub_251F36A20();
    LOBYTE(v11) = 5;
    sub_251F36910();
    LOBYTE(v11) = 6;
    sub_251F369E0();
    uint64_t v11 = *(void *)(v3 + v9[11]);
    char v12 = 7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E0B8);
    sub_251B24DC8();
    sub_251F36A20();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t StaticServiceGroup.hashValue.getter()
{
  sub_251F36CA0();
  StaticServiceGroup.hash(into:)(v1);
  return sub_251F36D00();
}

uint64_t StaticServiceGroup.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3908);
  uint64_t v4 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v6 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for StaticServiceGroup();
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251DDBBF4();
  int64_t v33 = v6;
  sub_251F36D90();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  int64_t v30 = v9;
  uint64_t v31 = v4;
  Swift::Bool v29 = (int *)v7;
  uint64_t v10 = sub_251F34DA0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  BOOL v13 = (char *)v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v35) = 0;
  sub_251A1A8EC(&qword_269B9CC80);
  char v14 = v33;
  uint64_t v15 = v34;
  sub_251F36880();
  void v28[2] = v11;
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  uint64_t v17 = (uint64_t)v30;
  v16(v30, v13, v10);
  LOBYTE(v35) = 1;
  uint64_t v18 = sub_251F36830();
  uint64_t v19 = v29;
  id v20 = (uint64_t *)(v17 + v29[5]);
  *id v20 = v18;
  v20[1] = v21;
  LOBYTE(v35) = 2;
  uint64_t v22 = v17;
  *(unsigned char *)(v17 + v19[6]) = sub_251F36840() & 1;
  char v36 = 3;
  sub_251C84C30();
  sub_251F36880();
  uint64_t v23 = v31;
  v28[1] = 0;
  *(unsigned char *)(v22 + v19[7]) = v35;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC40);
  char v36 = 4;
  sub_251A1E490(&qword_269B9CC78, &qword_269B9CC80);
  sub_251F36880();
  *(void *)(v22 + v19[8]) = v35;
  LOBYTE(v35) = 5;
  uint64_t v24 = sub_251F36790();
  uint64_t v25 = (uint64_t *)(v22 + v19[9]);
  *uint64_t v25 = v24;
  v25[1] = v26;
  LOBYTE(v35) = 6;
  *(unsigned char *)(v22 + v19[10]) = sub_251F36840() & 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E0B8);
  char v36 = 7;
  sub_251B25884();
  sub_251F36880();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v14, v15);
  *(void *)(v22 + v19[11]) = v35;
  sub_251DDC940(v22, v32, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return sub_251DDC9A8(v22, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
}

uint64_t sub_251DD5E9C()
{
  sub_251F36CA0();
  StaticServiceGroup.hash(into:)(v1);
  return sub_251F36D00();
}

uint64_t sub_251DD5EE0()
{
  sub_251F36CA0();
  StaticServiceGroup.hash(into:)(v1);
  return sub_251F36D00();
}

uint64_t sub_251DD5F1C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticServiceGroup.init(from:)(a1, a2);
}

uint64_t sub_251DD5F34(void *a1)
{
  return StaticServiceGroup.encode(to:)(a1);
}

uint64_t StaticServiceGroup.foregroundColor.getter()
{
  StaticServiceGroup.displayAsServiceKind.getter(&v1);
  return ServiceKind.foregroundColor.getter();
}

uint64_t StaticServiceGroup.displayAsServiceKind.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v14 - v7;
  uint64_t v9 = *(void *)(v1 + *(int *)(type metadata accessor for StaticServiceGroup() + 44));
  sub_251ABDFEC(v9, (uint64_t)v8);
  uint64_t v10 = type metadata accessor for StaticService();
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
  if (v11(v8, 1, v10) == 1)
  {
    swift_bridgeObjectRetain();
    sub_251A1B064((uint64_t)v8, qword_26B21EE20);
  }
  else
  {
    int v12 = v8[*(int *)(v10 + 96)];
    swift_bridgeObjectRetain();
    sub_251DDC9A8((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticService);
    if (v12 != 53)
    {
      uint64_t result = swift_bridgeObjectRelease();
      goto LABEL_8;
    }
  }
  sub_251ABDFEC(v9, (uint64_t)v6);
  swift_bridgeObjectRelease();
  if (v11(v6, 1, v10) == 1)
  {
    uint64_t result = sub_251A1B064((uint64_t)v6, qword_26B21EE20);
    LOBYTE(v12) = 0;
  }
  else
  {
    LOBYTE(v12) = v6[*(int *)(v10 + 88)];
    uint64_t result = sub_251DDC9A8((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticService);
  }
LABEL_8:
  *a1 = v12;
  return result;
}

uint64_t StaticServiceGroup.tileIcon.getter@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for StaticServiceGroup();
  uint64_t v2 = swift_bridgeObjectRetain();
  sub_251EDC188(v2);
  uint64_t v3 = swift_bridgeObjectRetain();
  uint64_t v4 = (void *)sub_251A9147C(v3);
  swift_bridgeObjectRelease();
  unint64_t v28 = v4;
  sub_251D8DA14(&v28);
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_251DD12CC((uint64_t)v28);
  swift_release();
  sub_251DD62EC(v5, (uint64_t)&v28);
  swift_bridgeObjectRelease();
  uint64_t v6 = v29;
  if (v29)
  {
    char v7 = v39;
    uint64_t v9 = v37;
    uint64_t v8 = v38;
    uint64_t v11 = v35;
    char v10 = v36;
    char v13 = v33;
    uint64_t v12 = v34;
    uint64_t v15 = v31;
    uint64_t v14 = v32;
    uint64_t result = v30;
    *(void *)a1 = v28;
    *(void *)(a1 + 8) = v6;
    *(unsigned char *)(a1 + 16) = result;
    *(void *)(a1 + 24) = v15;
    *(void *)(a1 + 32) = v14;
    *(unsigned char *)(a1 + 40) = v13;
    *(void *)(a1 + 48) = v12;
    *(void *)(a1 + 56) = v11;
    *(unsigned char *)(a1 + 64) = v10;
    *(void *)(a1 + 72) = v9;
    *(void *)(a1 + 80) = v8;
    *(unsigned char *)(a1 + 88) = v7;
  }
  else
  {
    if (qword_269B9C360 != -1) {
      swift_once();
    }
    uint64_t v17 = *(void *)algn_269BA00F8;
    char v18 = byte_269BA0100;
    uint64_t v19 = qword_269BA0108;
    uint64_t v20 = unk_269BA0110;
    char v21 = byte_269BA0118;
    uint64_t v22 = qword_269BA0120;
    uint64_t v23 = unk_269BA0128;
    char v24 = byte_269BA0130;
    uint64_t v25 = qword_269BA0138;
    uint64_t v26 = unk_269BA0140;
    char v27 = byte_269BA0148;
    *(void *)a1 = qword_269BA00F0;
    *(void *)(a1 + 8) = v17;
    *(unsigned char *)(a1 + 16) = v18;
    *(void *)(a1 + 24) = v19;
    *(void *)(a1 + 32) = v20;
    *(unsigned char *)(a1 + 40) = v21;
    *(void *)(a1 + 48) = v22;
    *(void *)(a1 + 56) = v23;
    *(unsigned char *)(a1 + 64) = v24;
    *(void *)(a1 + 72) = v25;
    *(void *)(a1 + 80) = v26;
    *(unsigned char *)(a1 + 88) = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_251DD62EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = a1;
  sub_251EECA48(a1);
  id v4 = objc_allocWithZone(MEMORY[0x263F08768]);
  uint64_t v5 = (void *)sub_251F35AA0();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v4, sel_initWithArray_, v5);

  uint64_t v7 = *(void *)(v2 + 16);
  if (v7)
  {
    uint64_t v35 = a2;
    swift_bridgeObjectRetain();
    uint64_t v8 = 0;
    id v56 = 0;
    uint64_t v48 = 0;
    uint64_t v49 = 0;
    uint64_t v46 = 0;
    uint64_t v47 = 0;
    uint64_t v44 = 0;
    uint64_t v45 = 0;
    uint64_t v42 = 0;
    uint64_t v43 = 0;
    uint64_t v40 = 0;
    uint64_t v41 = 0;
    uint64_t v39 = 0;
    char v38 = 0;
    uint64_t v36 = v6;
    uint64_t v37 = v2;
    do
    {
      uint64_t v9 = v2 + v8;
      uint64_t v10 = *(void *)(v2 + v8 + 32);
      uint64_t v11 = *(void *)(v2 + v8 + 40);
      uint64_t v12 = *(unsigned __int8 *)(v2 + v8 + 48);
      uint64_t v13 = *(void *)(v2 + v8 + 56);
      uint64_t v14 = *(void *)(v2 + v8 + 64);
      uint64_t v15 = *(unsigned __int8 *)(v2 + v8 + 72);
      uint64_t v16 = *(void *)(v2 + v8 + 80);
      uint64_t v17 = *(void *)(v2 + v8 + 88);
      uint64_t v18 = *(unsigned __int8 *)(v2 + v8 + 96);
      uint64_t v19 = *(void *)(v2 + v8 + 104);
      uint64_t v20 = *(void *)(v2 + v8 + 112);
      char v21 = *(unsigned char *)(v9 + 120);
      uint64_t v54 = v12;
      uint64_t v55 = v10;
      uint64_t v52 = v15;
      uint64_t v53 = v13;
      uint64_t v50 = v18;
      uint64_t v51 = v16;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      id v22 = objc_msgSend(v6, sel_countForObject_, sub_251F36B80());
      swift_unknownObjectRelease();
      if ((uint64_t)v56 >= (uint64_t)v22)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_251DDD9F8(v49, v48);
        id v56 = v22;
        uint64_t v48 = v11;
        uint64_t v49 = v55;
        uint64_t v46 = v53;
        uint64_t v47 = v54;
        uint64_t v44 = v52;
        uint64_t v45 = v14;
        uint64_t v42 = v17;
        uint64_t v43 = v51;
        uint64_t v40 = v19;
        uint64_t v41 = v50;
        uint64_t v39 = v20;
        char v38 = v21;
      }
      v8 += 96;
      --v7;
      id v6 = v36;
      uint64_t v2 = v37;
    }
    while (v7);

    swift_bridgeObjectRelease();
    a2 = v35;
    uint64_t v24 = v48;
    uint64_t v23 = v49;
    uint64_t v26 = v46;
    uint64_t v25 = v47;
    uint64_t v28 = v44;
    uint64_t v27 = v45;
    uint64_t v30 = v42;
    uint64_t v29 = v43;
    uint64_t v32 = v40;
    uint64_t v31 = v41;
    uint64_t result = v39;
    char v34 = v38;
  }
  else
  {

    uint64_t v23 = 0;
    uint64_t v24 = 0;
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    uint64_t v28 = 0;
    uint64_t v29 = 0;
    uint64_t v30 = 0;
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    uint64_t result = 0;
    char v34 = 0;
  }
  *(void *)a2 = v23;
  *(void *)(a2 + 8) = v24;
  *(void *)(a2 + 16) = v25;
  *(void *)(a2 + 24) = v26;
  *(void *)(a2 + 32) = v27;
  *(void *)(a2 + 40) = v28;
  *(void *)(a2 + 48) = v29;
  *(void *)(a2 + 56) = v30;
  *(void *)(a2 + 64) = v31;
  *(void *)(a2 + 72) = v32;
  *(void *)(a2 + 80) = result;
  *(unsigned char *)(a2 + 88) = v34;
  return result;
}

void sub_251DD65A8(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_251EECBC0(a1);
  id v4 = objc_allocWithZone(MEMORY[0x263F08768]);
  uint64_t v5 = (void *)sub_251F35AA0();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v4, sel_initWithArray_, v5);

  uint64_t v7 = *(void *)(a1 + 16);
  if (v7)
  {
    uint64_t v19 = a2;
    uint64_t v8 = (unsigned __int16 *)(a1 + 32);
    swift_bridgeObjectRetain();
    uint64_t v22 = 0;
    id v23 = 0;
    uint64_t v20 = 1;
    uint64_t v21 = 0;
    do
    {
      uint64_t v9 = *v8;
      uint64_t v10 = *((unsigned __int8 *)v8 + 2);
      uint64_t v11 = *((unsigned __int8 *)v8 + 3);
      uint64_t v12 = *((void *)v8 + 1);
      uint64_t v13 = *((void *)v8 + 2);
      swift_bridgeObjectRetain_n();
      uint64_t v14 = v6;
      id v15 = objc_msgSend(v6, sel_countForObject_, sub_251F36B80());
      swift_unknownObjectRelease();
      if ((uint64_t)v23 >= (uint64_t)v15)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_251DDD9E4(v22, v21, v20);
        uint64_t v22 = v9 | (v10 << 16) | (v11 << 24);
        id v23 = v15;
        uint64_t v20 = v13;
        uint64_t v21 = v12;
      }
      v8 += 12;
      --v7;
      id v6 = v14;
    }
    while (v7);

    swift_bridgeObjectRelease();
    a2 = v19;
    uint64_t v16 = v20;
    uint64_t v18 = v21;
    uint64_t v17 = v22;
  }
  else
  {

    uint64_t v17 = 0;
    uint64_t v18 = 0;
    uint64_t v16 = 1;
  }
  *a2 = v17;
  a2[1] = v18;
  a2[2] = v16;
}

uint64_t Array.mostCommon.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v6 = *(void *)(a2 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](a1);
  uint64_t v35 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v37 = (char *)&v27 - v9;
  sub_251F36630();
  id v10 = objc_allocWithZone(MEMORY[0x263F08768]);
  uint64_t v11 = a1;
  uint64_t v12 = (void *)sub_251F35AA0();
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(v10, sel_initWithArray_, v12);

  uint64_t v14 = *(void (**)(void, void, void, void))(v6 + 56);
  uint64_t v31 = v6 + 56;
  uint64_t v32 = a3;
  uint64_t v30 = (void (*)(char *, void, uint64_t, uint64_t))v14;
  v14(a3, 1, 1, a2);
  uint64_t v15 = swift_bridgeObjectRetain();
  if (MEMORY[0x2533AAAF0](v15, a2))
  {
    uint64_t v16 = 0;
    id v36 = 0;
    uint64_t v33 = a1;
    char v34 = (void (**)(char *, uint64_t *, uint64_t))(v6 + 16);
    uint64_t v17 = (void (**)(char *, char *, uint64_t))(v6 + 32);
    uint64_t v29 = (void (**)(char *, uint64_t))(v6 + 8);
    while (1)
    {
      char v18 = sub_251F35B60();
      sub_251F35B00();
      if (v18)
      {
        uint64_t result = (*(uint64_t (**)(char *, unint64_t, uint64_t))(v6 + 16))(v37, v11+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v16, a2);
      }
      else
      {
        uint64_t result = sub_251F36450();
        if (v28 != 8) {
          goto LABEL_17;
        }
        uint64_t v38 = result;
        (*v34)(v37, &v38, a2);
        uint64_t result = swift_unknownObjectRelease();
      }
      uint64_t v20 = v35;
      uint64_t v21 = v16 + 1;
      if (__OFADD__(v16, 1)) {
        break;
      }
      uint64_t v22 = *v17;
      (*v17)(v35, v37, a2);
      id v23 = v13;
      id v24 = objc_msgSend(v13, sel_countForObject_, sub_251F36B00());
      swift_unknownObjectRelease();
      if ((uint64_t)v36 >= (uint64_t)v24)
      {
        (*v29)(v20, a2);
      }
      else
      {
        uint64_t v25 = sub_251F36190();
        uint64_t v26 = v32;
        (*(void (**)(char *, uint64_t))(*(void *)(v25 - 8) + 8))(v32, v25);
        v22(v26, v20, a2);
        v30(v26, 0, 1, a2);
        id v36 = v24;
      }
      uint64_t v11 = v33;
      ++v16;
      id v13 = v23;
      if (v21 == MEMORY[0x2533AAAF0](v33, a2))
      {

        return swift_bridgeObjectRelease();
      }
    }
    __break(1u);
LABEL_17:
    __break(1u);
  }
  else
  {

    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t StaticServiceGroup.dateAdded.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_251F34D20();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  return v3(a1, 1, 1, v2);
}

uint64_t StaticServiceGroup.toggle()(uint64_t a1)
{
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = v1;
  return MEMORY[0x270FA2498](sub_251DD6BA8, 0, 0);
}

uint64_t sub_251DD6BA8()
{
  *(void *)(v0 + 48) = qword_270263C68;
  *(_OWORD *)(v0 + 16) = xmmword_251F3BEC0;
  *(void *)(v0 + 32) = 0;
  *(void *)(v0 + 40) = 0;
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_251DBEDCC;
  uint64_t v2 = *(void *)(v0 + 56);
  return StaticServiceGroup.toggle(options:context:)(v2, (void *)(v0 + 48), (_OWORD *)(v0 + 16));
}

uint64_t sub_251DD6C78()
{
  StaticServiceGroup.displayAsServiceKind.getter(&v1);
  return ServiceKind.foregroundColor.getter();
}

uint64_t StaticServiceGroup.isDoubleHigh.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for StaticServiceGroup();
  uint64_t v3 = swift_bridgeObjectRetain();
  sub_251EDC188(v3);
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = (void *)sub_251A9147C(v4);
  swift_bridgeObjectRelease();
  id v13 = v5;
  sub_251D8DA14(&v13);
  swift_bridgeObjectRelease();
  uint64_t v6 = v13;
  uint64_t v7 = v13[2];
  uint64_t v8 = type metadata accessor for StaticService();
  uint64_t v9 = *(void *)(v8 - 8);
  if (v7)
  {
    sub_251DDC940((uint64_t)v6 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)), (uint64_t)v2, (uint64_t (*)(void))type metadata accessor for StaticService);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v2, 0, 1, v8);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  }
  swift_release();
  type metadata accessor for StaticService();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v2, 1, v8) == 1)
  {
    sub_251A1B064((uint64_t)v2, qword_26B21EE20);
    return 0;
  }
  else
  {
    uint64_t v10 = v2[*(int *)(v8 + 28)];
    sub_251DDC9A8((uint64_t)v2, (uint64_t (*)(void))type metadata accessor for StaticService);
  }
  return v10;
}

uint64_t StaticServiceGroup.isFavorite.getter()
{
  return 0;
}

uint64_t sub_251DD6EC4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_251DD6ED0(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 36));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_251DD6F10(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 24));
}

uint64_t sub_251DD6F20(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_251AB3A34;
  v4[7] = a1;
  v4[8] = v1;
  return MEMORY[0x270FA2498](sub_251DD6BA8, 0, 0);
}

uint64_t sub_251DD6FD0()
{
  uint64_t v38 = type metadata accessor for StaticHH2Update(0);
  MEMORY[0x270FA5388](v38);
  uint64_t v1 = (char *)&v32 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  MEMORY[0x270FA5388](v39);
  uint64_t v3 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = type metadata accessor for StaticSoftwareUpdate(0);
  uint64_t v7 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = type metadata accessor for StaticService();
  uint64_t v10 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  uint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for StaticServiceGroup();
  uint64_t v13 = swift_bridgeObjectRetain();
  sub_251EDC188(v13);
  uint64_t v14 = swift_bridgeObjectRetain();
  uint64_t v15 = (void *)sub_251A9147C(v14);
  swift_bridgeObjectRelease();
  uint64_t v42 = v15;
  sub_251D8DA14(&v42);
  swift_bridgeObjectRelease();
  uint64_t v16 = v42[2];
  if (v16)
  {
    uint64_t v17 = (char *)v42 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    uint64_t v18 = v7;
    uint64_t v19 = *(void *)(v10 + 72);
    id v36 = v1 + 8;
    uint64_t v37 = v1;
    uint64_t v20 = (unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
    uint64_t v35 = v42;
    swift_retain();
    uint64_t v21 = 0;
    uint64_t v22 = 0;
    unint64_t v33 = 0x8000000251F6ED60;
    unint64_t v34 = 0x8000000251F6ECE0;
    unint64_t v32 = 0x8000000251F6ED10;
    do
    {
      sub_251DDC940((uint64_t)v17, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticService);
      if (!v22)
      {
        sub_251A1B128((uint64_t)&v12[*(int *)(v40 + 120)], (uint64_t)v6, &qword_26B21F120);
        uint64_t v23 = v41;
        if ((*v20)(v6, 1, v41) == 1)
        {
          sub_251A1B064((uint64_t)v6, &qword_26B21F120);
        }
        else
        {
          sub_251DDE09C((uint64_t)v6, (uint64_t)v9, type metadata accessor for StaticSoftwareUpdate);
          sub_251DDC940((uint64_t)&v9[*(int *)(v23 + 20)], (uint64_t)v3, type metadata accessor for StaticSoftwareUpdate.Kind);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 2u:
              int v24 = v3[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468) + 48)];
              uint64_t v25 = type metadata accessor for StaticSoftwareUpdateMetadata;
              uint64_t v26 = (uint64_t)v3;
              goto LABEL_12;
            case 3u:
              goto LABEL_13;
            default:
              uint64_t v27 = (uint64_t)v37;
              sub_251DDE09C((uint64_t)v3, (uint64_t)v37, type metadata accessor for StaticHH2Update);
              if (*(void *)&v36[*(int *)(v38 + 24)])
              {
                int v24 = *(unsigned __int8 *)(v27 + *(int *)(v38 + 20));
                swift_bridgeObjectRelease();
                uint64_t v25 = type metadata accessor for StaticHH2Update;
                uint64_t v26 = v27;
LABEL_12:
                sub_251DDC9A8(v26, v25);
                switch(v24)
                {
                  case 2:
                  case 3:
                  case 5:
                  case 7:
                    goto LABEL_13;
                  case 4:
                    uint64_t v28 = 0xD000000000000026;
                    uint64_t v29 = v33;
                    break;
                  case 6:
                    uint64_t v28 = 0xD000000000000019;
                    uint64_t v29 = v32;
                    break;
                  default:
                    uint64_t v28 = 0xD000000000000025;
                    uint64_t v29 = v34;
                    break;
                }
                uint64_t v21 = static String.hfLocalized(_:)(v28, v29);
                uint64_t v22 = v30;
                sub_251DDC9A8((uint64_t)v9, type metadata accessor for StaticSoftwareUpdate);
                goto LABEL_5;
              }
              swift_bridgeObjectRelease_n();
              sub_251DDC9A8(v27, type metadata accessor for StaticHH2Update);
LABEL_13:
              sub_251DDC9A8((uint64_t)v9, type metadata accessor for StaticSoftwareUpdate);
              break;
          }
        }
        uint64_t v21 = 0;
        uint64_t v22 = 0;
      }
LABEL_5:
      sub_251DDC9A8((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticService);
      v17 += v19;
      --v16;
    }
    while (v16);
    swift_release_n();
  }
  else
  {
    swift_release();
    return 0;
  }
  return v21;
}

uint64_t StaticServiceGroup.isUpdating.getter()
{
  uint64_t v0 = type metadata accessor for StaticService();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for StaticServiceGroup();
  uint64_t v4 = swift_bridgeObjectRetain();
  sub_251EDC188(v4);
  uint64_t v5 = swift_bridgeObjectRetain();
  uint64_t v6 = (void *)sub_251A9147C(v5);
  swift_bridgeObjectRelease();
  uint64_t v15 = v6;
  sub_251D8DA14(&v15);
  swift_bridgeObjectRelease();
  uint64_t v7 = v15[2];
  if (v7)
  {
    uint64_t v8 = (char *)v15 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
    uint64_t v9 = *(void *)(v1 + 72);
    swift_retain();
    while (1)
    {
      sub_251DDC940((uint64_t)v8, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for StaticService);
      LOBYTE(v15) = v3[*(int *)(v0 + 88)];
      swift_bridgeObjectRetain();
      uint64_t v10 = ServiceKind.stateStatusDependentCharaceristicKinds.getter();
      uint64_t v11 = swift_bridgeObjectRetain();
      char v12 = sub_251B4C57C(v11, v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      sub_251DDC9A8((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for StaticService);
      if (v12) {
        break;
      }
      v8 += v9;
      if (!--v7)
      {
        swift_release_n();
        return 0;
      }
    }
    swift_release_n();
    return 1;
  }
  else
  {
    swift_release();
    return 0;
  }
}

uint64_t StaticServiceGroup.accessoryControlStatusString.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v46 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for StaticService();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v46 - v9;
  uint64_t v11 = type metadata accessor for StaticServiceGroup();
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_251DD7D54();
  uint64_t v51 = v14;
  int v15 = *(unsigned __int8 *)(v0 + *(int *)(v11 + 24));
  sub_251DDC940(v0, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
  uint64_t v52 = v11;
  if (v15 != 1)
  {
LABEL_27:
    sub_251DDC9A8((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
    if (*(unsigned char *)(v0 + *(int *)(v11 + 28)))
    {
      uint64_t v31 = 0xD00000000000001FLL;
      uint64_t v32 = 0x8000000251F6D360;
    }
    else
    {
      uint64_t v32 = 0x8000000251F6D380;
      uint64_t v31 = 0xD00000000000001ELL;
    }
    unint64_t v33 = (void *)static String.hfLocalized(_:)(v31, v32);
    uint64_t v35 = v34;
LABEL_31:
    char v36 = StaticServiceGroup.isUpdating.getter();
    uint64_t v37 = swift_bridgeObjectRetain();
    sub_251EDC188(v37);
    uint64_t v38 = swift_bridgeObjectRetain();
    uint64_t v39 = (void *)sub_251A9147C(v38);
    swift_bridgeObjectRelease();
    v54[0] = v39;
    sub_251D8DA14(v54);
    swift_bridgeObjectRelease();
    if (v54[0][2])
    {
      sub_251DDC940((uint64_t)v54[0] + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v40 = 0;
    }
    else
    {
      uint64_t v40 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, v40, 1, v4);
    swift_release();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
    {
      sub_251A1B064((uint64_t)v3, qword_26B21EE20);
      uint64_t v41 = 0;
      uint64_t v42 = 0;
    }
    else
    {
      uint64_t v41 = StaticService.accessoryControlCharacteristicStateString.getter();
      uint64_t v42 = v43;
      sub_251DDC9A8((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for StaticService);
    }
    v54[0] = v33;
    v54[1] = v35;
    char v55 = 0;
    char v56 = v36 & 1;
    char v57 = 0;
    uint64_t v58 = v41;
    uint64_t v59 = v42;
    uint64_t v60 = v50;
    uint64_t v61 = v51;
    uint64_t v44 = sub_251D3D2E0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v44;
  }
  uint64_t v48 = v0;
  uint64_t v49 = v3;
  uint64_t v47 = v13;
  uint64_t v16 = swift_bridgeObjectRetain();
  uint64_t v17 = sub_251EDC188(v16);
  uint64_t v18 = v17;
  uint64_t v19 = v17 + 56;
  uint64_t v20 = 1 << *(unsigned char *)(v17 + 32);
  uint64_t v21 = -1;
  if (v20 < 64) {
    uint64_t v21 = ~(-1 << v20);
  }
  unint64_t v22 = v21 & *(void *)(v17 + 56);
  int64_t v23 = (unint64_t)(v20 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v24 = 0;
  while (v22)
  {
    unint64_t v25 = __clz(__rbit64(v22));
    v22 &= v22 - 1;
    unint64_t v26 = v25 | (v24 << 6);
LABEL_6:
    sub_251DDC940(*(void *)(v18 + 48) + *(void *)(v5 + 72) * v26, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticService);
    sub_251DDE09C((uint64_t)v10, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticService);
    v54[0] = *(void **)&v8[*(int *)(v4 + 112)];
    char v53 = v8[*(int *)(v4 + 88)];
    Swift::Bool v27 = StaticCharacteristicsBag.isReachable(for:)((HomeDataModel::ServiceKind)&v53);
    sub_251DDC9A8((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticService);
    if (!v27)
    {
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v0 = v48;
      uint64_t v3 = v49;
      uint64_t v11 = v52;
      uint64_t v13 = v47;
      goto LABEL_27;
    }
  }
  int64_t v28 = v24 + 1;
  if (__OFADD__(v24, 1))
  {
    __break(1u);
    goto LABEL_40;
  }
  if (v28 >= v23) {
    goto LABEL_38;
  }
  unint64_t v29 = *(void *)(v19 + 8 * v28);
  ++v24;
  if (v29) {
    goto LABEL_25;
  }
  int64_t v24 = v28 + 1;
  if (v28 + 1 >= v23) {
    goto LABEL_38;
  }
  unint64_t v29 = *(void *)(v19 + 8 * v24);
  if (v29) {
    goto LABEL_25;
  }
  int64_t v24 = v28 + 2;
  if (v28 + 2 >= v23) {
    goto LABEL_38;
  }
  unint64_t v29 = *(void *)(v19 + 8 * v24);
  if (v29) {
    goto LABEL_25;
  }
  int64_t v24 = v28 + 3;
  if (v28 + 3 >= v23) {
    goto LABEL_38;
  }
  unint64_t v29 = *(void *)(v19 + 8 * v24);
  if (v29) {
    goto LABEL_25;
  }
  int64_t v24 = v28 + 4;
  if (v28 + 4 >= v23) {
    goto LABEL_38;
  }
  unint64_t v29 = *(void *)(v19 + 8 * v24);
  if (v29)
  {
LABEL_25:
    unint64_t v22 = (v29 - 1) & v29;
    unint64_t v26 = __clz(__rbit64(v29)) + (v24 << 6);
    goto LABEL_6;
  }
  int64_t v30 = v28 + 5;
  if (v30 >= v23)
  {
LABEL_38:
    swift_release();
    swift_bridgeObjectRelease();
    sub_251DDC9A8((uint64_t)v47, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
    unint64_t v33 = 0;
    uint64_t v35 = 0;
    uint64_t v3 = v49;
    goto LABEL_31;
  }
  unint64_t v29 = *(void *)(v19 + 8 * v30);
  if (v29)
  {
    int64_t v24 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v24 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v24 >= v23) {
      goto LABEL_38;
    }
    unint64_t v29 = *(void *)(v19 + 8 * v24);
    ++v30;
    if (v29) {
      goto LABEL_25;
    }
  }
LABEL_40:
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_251DD7D54()
{
  uint64_t v40 = type metadata accessor for StaticHH2Update(0);
  MEMORY[0x270FA5388](v40);
  uint64_t v1 = (char *)&v34 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  MEMORY[0x270FA5388](v43);
  uint64_t v44 = (uint64_t)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for StaticSoftwareUpdate(0);
  uint64_t v6 = *(void *)(v45 - 8);
  MEMORY[0x270FA5388](v45);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for StaticService();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for StaticServiceGroup();
  uint64_t v13 = swift_bridgeObjectRetain();
  sub_251EDC188(v13);
  uint64_t v14 = swift_bridgeObjectRetain();
  int v15 = (void *)sub_251A9147C(v14);
  swift_bridgeObjectRelease();
  uint64_t v46 = v15;
  sub_251D8DA14(&v46);
  swift_bridgeObjectRelease();
  uint64_t v16 = v46[2];
  if (v16)
  {
    uint64_t v17 = (char *)v46 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    uint64_t v18 = v6;
    uint64_t v19 = *(void *)(v10 + 72);
    uint64_t v38 = v1 + 8;
    uint64_t v39 = v1;
    uint64_t v20 = (unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
    uint64_t v37 = v46;
    swift_retain();
    uint64_t v21 = 0;
    uint64_t v22 = 0;
    unint64_t v35 = 0x8000000251F6ED60;
    unint64_t v36 = 0x8000000251F6ECE0;
    unint64_t v34 = 0x8000000251F6ED10;
    unint64_t v41 = 0x8000000251F6ED30;
    uint64_t v42 = 0x8000000251F6B890;
    do
    {
      sub_251DDC940((uint64_t)v17, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticService);
      if (!v22)
      {
        sub_251A1B128((uint64_t)&v12[*(int *)(v9 + 120)], (uint64_t)v5, &qword_26B21F120);
        uint64_t v24 = v45;
        if ((*v20)(v5, 1, v45) == 1)
        {
          sub_251A1B064((uint64_t)v5, &qword_26B21F120);
        }
        else
        {
          sub_251DDE09C((uint64_t)v5, (uint64_t)v8, type metadata accessor for StaticSoftwareUpdate);
          sub_251DDC940((uint64_t)&v8[*(int *)(v24 + 20)], v44, type metadata accessor for StaticSoftwareUpdate.Kind);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 2u:
              uint64_t v25 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468) + 48);
              uint64_t v26 = v44;
              int v27 = *(unsigned __int8 *)(v44 + v25);
              int64_t v28 = type metadata accessor for StaticSoftwareUpdateMetadata;
              goto LABEL_12;
            case 3u:
LABEL_13:
              uint64_t v30 = 0xD00000000000002FLL;
              uint64_t v31 = v41;
LABEL_14:
              uint64_t v21 = static String.hfLocalized(_:)(v30, v31);
              uint64_t v22 = v32;
              sub_251DDC9A8((uint64_t)v8, type metadata accessor for StaticSoftwareUpdate);
              goto LABEL_4;
            default:
              uint64_t v29 = (uint64_t)v39;
              sub_251DDE09C(v44, (uint64_t)v39, type metadata accessor for StaticHH2Update);
              if (*(void *)&v38[*(int *)(v40 + 24)])
              {
                int v27 = *(unsigned __int8 *)(v29 + *(int *)(v40 + 20));
                swift_bridgeObjectRelease();
                int64_t v28 = type metadata accessor for StaticHH2Update;
                uint64_t v26 = v29;
LABEL_12:
                sub_251DDC9A8(v26, v28);
                switch(v27)
                {
                  case 2:
                  case 7:
                    goto LABEL_16;
                  case 3:
                  case 5:
                    goto LABEL_13;
                  case 4:
                    uint64_t v30 = 0xD000000000000026;
                    uint64_t v31 = v35;
                    goto LABEL_14;
                  case 6:
                    uint64_t v30 = 0xD000000000000019;
                    uint64_t v31 = v34;
                    goto LABEL_14;
                  default:
                    uint64_t v30 = 0xD000000000000025;
                    uint64_t v31 = v36;
                    goto LABEL_14;
                }
              }
              swift_bridgeObjectRelease_n();
              sub_251DDC9A8(v29, type metadata accessor for StaticHH2Update);
LABEL_16:
              sub_251DDC9A8((uint64_t)v8, type metadata accessor for StaticSoftwareUpdate);
              break;
          }
        }
        if (v12[*(int *)(v9 + 40)])
        {
          uint64_t v21 = static String.hfLocalized(_:)(0xD00000000000001ELL, v42);
          uint64_t v22 = v23;
        }
        else
        {
          uint64_t v21 = 0;
          uint64_t v22 = 0;
        }
      }
LABEL_4:
      sub_251DDC9A8((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticService);
      v17 += v19;
      --v16;
    }
    while (v16);
    swift_release_n();
  }
  else
  {
    swift_release();
    return 0;
  }
  return v21;
}

uint64_t StaticServiceGroup.hasDetailAttentionMessages.getter()
{
  uint64_t v34 = type metadata accessor for StaticHH2Update(0);
  MEMORY[0x270FA5388](v34);
  uint64_t v1 = (char *)v31 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  MEMORY[0x270FA5388](v38);
  uint64_t v3 = (char *)v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for StaticSoftwareUpdate(0);
  uint64_t v36 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  unint64_t v35 = (char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for StaticService();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for StaticServiceGroup();
  uint64_t v13 = swift_bridgeObjectRetain();
  sub_251EDC188(v13);
  uint64_t v14 = swift_bridgeObjectRetain();
  int v15 = (void *)sub_251A9147C(v14);
  swift_bridgeObjectRelease();
  uint64_t v40 = v15;
  sub_251D8DA14(&v40);
  swift_bridgeObjectRelease();
  uint64_t v16 = v40[2];
  if (v16)
  {
    uint64_t v37 = v3;
    uint64_t v39 = v7;
    uint64_t v17 = (char *)v40 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    uint64_t v32 = v1 + 8;
    unint64_t v33 = v1;
    uint64_t v18 = (unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48);
    uint64_t v19 = *(void *)(v10 + 72);
    v31[1] = v40;
    swift_retain();
    uint64_t v20 = (uint64_t)v35;
    uint64_t v36 = v19;
    while (1)
    {
      sub_251DDC940((uint64_t)v17, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticService);
      sub_251A1B128((uint64_t)&v12[*(int *)(v9 + 120)], (uint64_t)v6, &qword_26B21F120);
      uint64_t v21 = v39;
      if ((*v18)(v6, 1, v39) == 1)
      {
        sub_251A1B064((uint64_t)v6, &qword_26B21F120);
      }
      else
      {
        sub_251DDE09C((uint64_t)v6, v20, type metadata accessor for StaticSoftwareUpdate);
        uint64_t v22 = v20 + *(int *)(v21 + 20);
        uint64_t v23 = (uint64_t)v37;
        sub_251DDC940(v22, (uint64_t)v37, type metadata accessor for StaticSoftwareUpdate.Kind);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 2u:
            int v24 = *(unsigned __int8 *)(v23
                                     + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468) + 48));
            sub_251DDC9A8(v23, type metadata accessor for StaticSoftwareUpdateMetadata);
            goto LABEL_9;
          case 3u:
LABEL_18:
            uint64_t v28 = 0xD00000000000002FLL;
            uint64_t v29 = "HFMediaAccessoryStateDescriptionUpdateAvailable";
LABEL_22:
            unint64_t v30 = (unint64_t)(v29 - 32) | 0x8000000000000000;
LABEL_23:
            static String.hfLocalized(_:)(v28, v30);
            sub_251DDC9A8(v20, type metadata accessor for StaticSoftwareUpdate);
            goto LABEL_24;
          default:
            uint64_t v25 = (uint64_t)v33;
            sub_251DDE09C(v23, (uint64_t)v33, type metadata accessor for StaticHH2Update);
            if (*(void *)&v32[*(int *)(v34 + 24)])
            {
              int v24 = *(unsigned __int8 *)(v25 + *(int *)(v34 + 20));
              swift_bridgeObjectRelease();
              sub_251DDC9A8(v25, type metadata accessor for StaticHH2Update);
              uint64_t v20 = (uint64_t)v35;
LABEL_9:
              int v26 = v24 - 2;
              uint64_t v19 = v36;
              switch(v26)
              {
                case 0:
                case 5:
                  goto LABEL_10;
                case 1:
                case 3:
                  goto LABEL_18;
                case 2:
                  uint64_t v28 = 0xD000000000000026;
                  uint64_t v29 = "HFFirmwareUpdateDownloadingDescription";
                  goto LABEL_22;
                case 4:
                  unint64_t v30 = 0x8000000251F6ED10;
                  uint64_t v28 = 0xD000000000000019;
                  goto LABEL_23;
                default:
                  uint64_t v28 = 0xD000000000000025;
                  uint64_t v29 = "HFFirmwareUpdateInstallingDescription";
                  goto LABEL_22;
              }
            }
            swift_bridgeObjectRelease_n();
            sub_251DDC9A8(v25, type metadata accessor for StaticHH2Update);
            uint64_t v20 = (uint64_t)v35;
LABEL_10:
            sub_251DDC9A8(v20, type metadata accessor for StaticSoftwareUpdate);
            break;
        }
      }
      if (v12[*(int *)(v9 + 40)]) {
        break;
      }
      sub_251DDC9A8((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticService);
      v17 += v19;
      if (!--v16)
      {
        swift_release_n();
        return 0;
      }
    }
    static String.hfLocalized(_:)(0xD00000000000001ELL, 0x8000000251F6B890);
LABEL_24:
    swift_bridgeObjectRelease();
    sub_251DDC9A8((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticService);
    swift_release_n();
    return 1;
  }
  else
  {
    swift_release();
    return 0;
  }
}

uint64_t StaticServiceGroup.statusIcon.getter@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for StaticServiceGroup();
  uint64_t v2 = swift_bridgeObjectRetain();
  sub_251EDC188(v2);
  uint64_t v3 = swift_bridgeObjectRetain();
  uint64_t v4 = (void *)sub_251A9147C(v3);
  swift_bridgeObjectRelease();
  v12[0] = v4;
  sub_251D8DA14(v12);
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_251DD1744((uint64_t)v12[0]);
  swift_release();
  sub_251DD65A8(v5, (uint64_t *)v12);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v7 = v13;
  if (v13 == 1)
  {
    __int16 v8 = 0;
    uint64_t v9 = 0;
    uint64_t v7 = 0;
    LOBYTE(v10) = 89;
    LOBYTE(v11) = 4;
  }
  else
  {
    __int16 v8 = (__int16)v12[0];
    uint64_t v9 = v12[1];
    unint64_t v11 = (unint64_t)v12[0] >> 16;
    unint64_t v10 = (unint64_t)v12[0] >> 24;
  }
  *(_WORD *)a1 = v8;
  *(unsigned char *)(a1 + 2) = v11;
  *(unsigned char *)(a1 + 3) = v10;
  *(void *)(a1 + 8) = v9;
  *(void *)(a1 + 16) = v7;
  return result;
}

uint64_t StaticServiceGroup.tileStatusStringIconSymbolSuffix.getter()
{
  uint64_t v0 = type metadata accessor for StaticHH2Update(0);
  MEMORY[0x270FA5388](v0);
  uint64_t v42 = (uint64_t)&v37 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  MEMORY[0x270FA5388](v43);
  uint64_t v46 = (uint64_t)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for StaticSoftwareUpdate(0);
  uint64_t v48 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v47 = (uint64_t)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __int16 v8 = (int *)type metadata accessor for StaticService();
  uint64_t v9 = *((void *)v8 - 1);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v37 - v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v41 = (uint64_t)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for StaticServiceGroup();
  uint64_t v17 = swift_bridgeObjectRetain();
  sub_251EDC188(v17);
  uint64_t v18 = swift_bridgeObjectRetain();
  uint64_t v19 = (void *)sub_251A9147C(v18);
  swift_bridgeObjectRelease();
  uint64_t v49 = v19;
  sub_251D8DA14(&v49);
  swift_bridgeObjectRelease();
  uint64_t v20 = v49[2];
  if (!v20)
  {
    uint64_t v33 = 1;
    uint64_t v34 = v41;
    goto LABEL_22;
  }
  uint64_t v21 = v9;
  uint64_t v22 = (char *)v49 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  uint64_t v39 = v42 + 8;
  uint64_t v40 = v0;
  uint64_t v45 = (unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48);
  uint64_t v37 = v49;
  uint64_t v38 = v21;
  uint64_t v48 = *(void *)(v21 + 72);
  swift_retain();
  uint64_t v44 = v5;
  while (1)
  {
    sub_251DDC940((uint64_t)v22, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for StaticService);
    int v23 = v14[v8[8]];
    sub_251DDC940((uint64_t)v14, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticService);
    if (v23 == 1) {
      break;
    }
    LOBYTE(v49) = v12[v8[22]];
    swift_bridgeObjectRetain();
    uint64_t v24 = ServiceKind.stateStatusDependentCharaceristicKinds.getter();
    uint64_t v25 = swift_bridgeObjectRetain();
    char v26 = sub_251B4C57C(v25, v24);
    swift_bridgeObjectRelease();
    uint64_t v5 = v44;
    swift_bridgeObjectRelease_n();
    sub_251DDC9A8((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticService);
    if (v26) {
      goto LABEL_9;
    }
LABEL_5:
    sub_251DDC9A8((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for StaticService);
    v22 += v48;
    if (!--v20)
    {
      swift_release();
      uint64_t v33 = 1;
      uint64_t v9 = v38;
      uint64_t v34 = v41;
      goto LABEL_22;
    }
  }
  sub_251DDC9A8((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticService);
LABEL_9:
  sub_251A1B128((uint64_t)&v14[v8[30]], (uint64_t)v5, &qword_26B21F120);
  if ((*v45)(v5, 1, v6) == 1)
  {
    sub_251A1B064((uint64_t)v5, &qword_26B21F120);
    goto LABEL_4;
  }
  uint64_t v27 = v47;
  sub_251DDE09C((uint64_t)v5, v47, type metadata accessor for StaticSoftwareUpdate);
  sub_251DDC940(v27 + *(int *)(v6 + 20), v46, type metadata accessor for StaticSoftwareUpdate.Kind);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 2u:
      uint64_t v28 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468) + 48);
      uint64_t v29 = v46;
      int v30 = *(unsigned __int8 *)(v46 + v28);
      uint64_t v31 = type metadata accessor for StaticSoftwareUpdateMetadata;
      goto LABEL_14;
    case 3u:
      goto LABEL_20;
    default:
      uint64_t v32 = v42;
      sub_251DDE09C(v46, v42, type metadata accessor for StaticHH2Update);
      if (!*(void *)(v39 + *(int *)(v40 + 24)))
      {
        swift_bridgeObjectRelease_n();
        sub_251DDC9A8(v32, type metadata accessor for StaticHH2Update);
LABEL_16:
        sub_251DDC9A8(v47, type metadata accessor for StaticSoftwareUpdate);
LABEL_4:
        if (v14[v8[10]]) {
          goto LABEL_21;
        }
        goto LABEL_5;
      }
      int v30 = *(unsigned __int8 *)(v32 + *(int *)(v40 + 20));
      swift_bridgeObjectRelease();
      uint64_t v31 = type metadata accessor for StaticHH2Update;
      uint64_t v29 = v32;
LABEL_14:
      sub_251DDC9A8(v29, v31);
      if (v30 != 5 && v30 != 3) {
        goto LABEL_16;
      }
LABEL_20:
      sub_251DDC9A8(v47, type metadata accessor for StaticSoftwareUpdate);
LABEL_21:
      swift_release();
      uint64_t v34 = v41;
      sub_251DDE09C((uint64_t)v14, v41, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v33 = 0;
      uint64_t v9 = v38;
LABEL_22:
      (*(void (**)(uint64_t, uint64_t, uint64_t, int *))(v9 + 56))(v34, v33, 1, v8);
      swift_release();
      if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v9 + 48))(v34, 1, v8) == 1)
      {
        sub_251A1B064(v34, qword_26B21EE20);
        return 0;
      }
      else
      {
        uint64_t v35 = StaticService.tileStatusStringIconSymbolSuffix.getter();
        sub_251DDC9A8(v34, (uint64_t (*)(void))type metadata accessor for StaticService);
      }
      return v35;
  }
}

uint64_t StaticServiceGroup.roomId.getter@<X0>(char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_251F34DA0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4);
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  uint64_t v8 = qword_26B21FF50;
  swift_getKeyPath();
  v20[1] = v8;
  sub_251DDCBA4((unint64_t *)&qword_26B21F280, (void (*)(uint64_t))type metadata accessor for DataModel);
  sub_251F34F10();
  swift_release();
  uint64_t v9 = v8 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentStateSnapshot;
  swift_beginAccess();
  uint64_t v10 = *(int *)(type metadata accessor for StateSnapshot(0) + 20);
  uint64_t v11 = type metadata accessor for StaticHome();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v20 - v7, v9 + v10 + *(int *)(v11 + 24), v4);
  uint64_t v12 = *(void *)(v2 + *(int *)(type metadata accessor for StaticServiceGroup() + 32));
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_251ABDFB8(v12, (uint64_t)v15);
  MEMORY[0x270FA5388](v16);
  uint64_t v17 = (char *)v20 - v7;
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
  v18((char *)v20 - v7, (char *)v20 - v7, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v15, 1, v4) == 1)
  {
    v18(a1, v17, v4);
    return sub_251A1B064((uint64_t)v15, &qword_26B21FF90);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v17, v4);
    return ((uint64_t (*)(char *, char *, uint64_t))v18)(a1, v15, v4);
  }
}

uint64_t sub_251DD94D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[10] = a3;
  v4[11] = a4;
  v4[9] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  v4[12] = swift_task_alloc();
  v4[13] = swift_task_alloc();
  uint64_t v5 = *(void *)(type metadata accessor for StaticService() - 8);
  v4[14] = v5;
  v4[15] = *(void *)(v5 + 64);
  v4[16] = swift_task_alloc();
  v4[17] = swift_task_alloc();
  v4[18] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251DD95FC, 0, 0);
}

uint64_t sub_251DD95FC()
{
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v36 = *(void *)(v0 + 112);
  type metadata accessor for StaticServiceGroup();
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_251EDC188(v2);
  uint64_t v33 = v3 + 56;
  uint64_t v4 = -1;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  if (-v5 < 64) {
    uint64_t v4 = ~(-1 << -(char)v5);
  }
  unint64_t v6 = v4 & *(void *)(v3 + 56);
  int64_t v34 = (unint64_t)(63 - v5) >> 6;
  uint64_t v35 = v1 + 7;
  uint64_t v37 = v3;
  uint64_t result = swift_bridgeObjectRetain();
  for (int64_t i = 0; ; int64_t i = v39)
  {
    if (v6)
    {
      uint64_t v38 = (v6 - 1) & v6;
      int64_t v39 = i;
      unint64_t v11 = __clz(__rbit64(v6)) | (i << 6);
      goto LABEL_25;
    }
    int64_t v12 = i + 1;
    if (__OFADD__(i, 1))
    {
      __break(1u);
LABEL_36:
      __break(1u);
      return result;
    }
    if (v12 >= v34) {
      goto LABEL_32;
    }
    unint64_t v13 = *(void *)(v33 + 8 * v12);
    int64_t v14 = i + 1;
    if (!v13)
    {
      int64_t v14 = i + 2;
      if (i + 2 >= v34) {
        goto LABEL_32;
      }
      unint64_t v13 = *(void *)(v33 + 8 * v14);
      if (!v13)
      {
        int64_t v14 = i + 3;
        if (i + 3 >= v34) {
          goto LABEL_32;
        }
        unint64_t v13 = *(void *)(v33 + 8 * v14);
        if (!v13)
        {
          int64_t v14 = i + 4;
          if (i + 4 >= v34) {
            goto LABEL_32;
          }
          unint64_t v13 = *(void *)(v33 + 8 * v14);
          if (!v13)
          {
            int64_t v14 = i + 5;
            if (i + 5 >= v34) {
              goto LABEL_32;
            }
            unint64_t v13 = *(void *)(v33 + 8 * v14);
            if (!v13) {
              break;
            }
          }
        }
      }
    }
LABEL_24:
    uint64_t v38 = (v13 - 1) & v13;
    int64_t v39 = v14;
    unint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
LABEL_25:
    uint64_t v16 = *(void *)(v0 + 136);
    uint64_t v17 = *(void *)(v0 + 144);
    uint64_t v18 = *(void *)(v0 + 128);
    uint64_t v19 = *(void *)(v0 + 104);
    uint64_t v41 = *(void *)(v0 + 96);
    uint64_t v40 = *(void **)(v0 + 88);
    sub_251DDC940(*(void *)(v37 + 48) + *(void *)(v36 + 72) * v11, v17, (uint64_t (*)(void))type metadata accessor for StaticService);
    sub_251DDE09C(v17, v16, (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t v20 = sub_251F35CD0();
    uint64_t v21 = *(void *)(v20 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 56))(v19, 1, 1, v20);
    sub_251DDC940(v16, v18, (uint64_t (*)(void))type metadata accessor for StaticService);
    unint64_t v22 = (*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = 0;
    uint64_t v24 = (void *)(v23 + 16);
    *(void *)(v23 + 24) = 0;
    sub_251DDE09C(v18, v23 + v22, (uint64_t (*)(void))type metadata accessor for StaticService);
    *(void *)(v23 + ((v35 + v22) & 0xFFFFFFFFFFFFFFF8)) = v40;
    sub_251A1B128(v19, v41, &qword_26B220BB0);
    LODWORD(v22) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v41, 1, v20);
    id v25 = v40;
    uint64_t v26 = *(void *)(v0 + 96);
    if (v22 == 1)
    {
      sub_251A1B064(*(void *)(v0 + 96), &qword_26B220BB0);
      if (*v24) {
        goto LABEL_27;
      }
    }
    else
    {
      sub_251F35CC0();
      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v26, v20);
      if (*v24)
      {
LABEL_27:
        swift_getObjectType();
        swift_unknownObjectRetain();
        uint64_t v27 = sub_251F35C00();
        uint64_t v29 = v28;
        swift_unknownObjectRelease();
        goto LABEL_30;
      }
    }
    uint64_t v27 = 0;
    uint64_t v29 = 0;
LABEL_30:
    uint64_t v30 = **(void **)(v0 + 72);
    uint64_t v31 = v29 | v27;
    if (v29 | v27)
    {
      uint64_t v31 = v0 + 16;
      *(void *)(v0 + 16) = 0;
      *(void *)(v0 + 24) = 0;
      *(void *)(v0 + 32) = v27;
      *(void *)(v0 + 40) = v29;
    }
    uint64_t v9 = *(void *)(v0 + 136);
    uint64_t v10 = *(void *)(v0 + 104);
    *(void *)(v0 + 48) = 1;
    *(void *)(v0 + 56) = v31;
    *(void *)(v0 + 64) = v30;
    swift_task_create();
    swift_release();
    sub_251A1B064(v10, &qword_26B220BB0);
    uint64_t result = sub_251DDC9A8(v9, (uint64_t (*)(void))type metadata accessor for StaticService);
    unint64_t v6 = v38;
  }
  uint64_t v15 = i + 6;
  if (i + 6 < v34)
  {
    unint64_t v13 = *(void *)(v33 + 8 * v15);
    if (!v13)
    {
      while (1)
      {
        int64_t v14 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_36;
        }
        if (v14 >= v34) {
          goto LABEL_32;
        }
        unint64_t v13 = *(void *)(v33 + 8 * v14);
        ++v15;
        if (v13) {
          goto LABEL_24;
        }
      }
    }
    int64_t v14 = i + 6;
    goto LABEL_24;
  }
LABEL_32:
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v32 = *(uint64_t (**)(void))(v0 + 8);
  return v32();
}

uint64_t sub_251DD9B08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v7;
  *uint64_t v7 = v5;
  v7[1] = sub_251AB3A34;
  return StaticService.set(room:)(a5);
}

int *sub_251DD9BA8@<X0>(void *a1@<X0>, unsigned __int8 *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v116 = a5;
  uint64_t v117 = a4;
  id v114 = a1;
  uint64_t v126 = type metadata accessor for StaticService();
  uint64_t v130 = *(void *)(v126 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v126);
  uint64_t v125 = (uint64_t)&v113 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v124 = (uint64_t)&v113 - v9;
  int v115 = *a2;
  id v119 = a3;
  id v10 = objc_msgSend(a3, sel_services);
  uint64_t v118 = sub_251A1A568(0, (unint64_t *)&qword_26B21F180);
  unint64_t v11 = sub_251F35AC0();

  uint64_t v132 = (uint64_t *)MEMORY[0x263F8EE88];
  if (v11 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_251F366C0();
    if (v12) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v12)
    {
LABEL_3:
      if (v12 >= 1)
      {
        uint64_t v13 = 0;
        uint64_t v122 = (uint64_t *)(v11 & 0xC000000000000001);
        unint64_t v123 = v12;
        uint64_t v121 = v11;
        while (1)
        {
          if (v122) {
            int64_t v14 = (id)MEMORY[0x2533AB3A0](v13, v11);
          }
          else {
            int64_t v14 = *(id *)(v11 + 8 * v13 + 32);
          }
          uint64_t v15 = (uint64_t *)v14;
          uint64_t v16 = sub_251F34DA0();
          int v128 = &v113;
          uint64_t v17 = *(void *)(v16 - 8);
          uint64_t v18 = *(void *)(v17 + 64);
          MEMORY[0x270FA5388](v16);
          uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
          int v127 = &v113;
          MEMORY[0x270FA5388](v19 - 8);
          uint64_t v21 = (char *)&v113 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
          uint64_t v129 = v15;
          id v22 = objc_msgSend(v15, sel_accessory);
          if (v22
            && (uint64_t v23 = v22, v24 = objc_msgSend(v22, sel_room), v23, v24))
          {
            id v25 = objc_msgSend(v24, sel_uniqueIdentifier);

            MEMORY[0x270FA5388](v26);
            uint64_t v120 = (char *)((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
            uint64_t v27 = (char *)((char *)&v113 - v120);
            sub_251F34D80();

            uint64_t v28 = *(void (**)(void, void, void))(v17 + 32);
            v28(v21, v27, v16);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v21, 0, 1, v16);
            unint64_t v11 = v121;
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v21, 1, v16) != 1)
            {
              uint64_t v29 = ((uint64_t (*)(char *, char *, uint64_t))v28)((char *)&v113 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), v21, v16);
              uint64_t v30 = MEMORY[0x270FA5388](v29);
              uint64_t v31 = (char *)((char *)&v113 - v120);
              MEMORY[0x270FA5388](v30);
              uint64_t v33 = (char *)&v113 - v32;
              (*(void (**)(char *, char *, uint64_t))(v17 + 16))((char *)&v113 - v32, (char *)&v113 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), v16);
              sub_251A637B8(v31, v33);
              int64_t v34 = *(void (**)(void, void))(v17 + 8);
              v34(v31, v16);
              v34((char *)&v113 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), v16);

              unint64_t v11 = v121;
              goto LABEL_7;
            }
          }
          else
          {
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v21, 1, 1, v16);
          }
          sub_251A1B064((uint64_t)v21, &qword_26B21FF90);

LABEL_7:
          if (v123 == ++v13)
          {
            swift_bridgeObjectRelease_n();
            uint64_t v35 = v132;
            goto LABEL_18;
          }
        }
      }
LABEL_83:
      __break(1u);
LABEL_84:
      __break(1u);
      goto LABEL_85;
    }
  }
  swift_bridgeObjectRelease_n();
  uint64_t v35 = (uint64_t *)MEMORY[0x263F8EE88];
LABEL_18:
  int v127 = v35;
  id v36 = objc_msgSend(v119, sel_services);
  unint64_t v37 = sub_251F35AC0();

  uint64_t v38 = v117;
  swift_bridgeObjectRetain();
  int64_t v39 = 0;
  unint64_t v40 = sub_251DDBC48(v37, v38);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int64_t v41 = *(void *)(v40 + 16);
  if (v41)
  {
    int v128 = 0;
    uint64_t v132 = (uint64_t *)MEMORY[0x263F8EE78];
    sub_251A3E3B8(0, v41, 0);
    uint64_t v42 = 0;
    uint64_t v43 = (uint64_t)v132;
    uint64_t v44 = *(unsigned __int8 *)(v130 + 80);
    unint64_t v123 = v40;
    uint64_t v129 = (uint64_t *)(v40 + ((v44 + 32) & ~v44));
    do
    {
      uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FFB8);
      uint64_t v46 = *(void *)(v45 - 8);
      uint64_t v47 = MEMORY[0x270FA5388](v45 - 8);
      uint64_t v49 = (char *)&v113 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v50 = (uint64_t)&v49[*(int *)(v47 + 56)];
      sub_251DDC940((uint64_t)v129 + *(void *)(v130 + 72) * v42, v50, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v51 = sub_251F34DA0();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v51 - 8) + 16))(v49, v50, v51);
      uint64_t v132 = (uint64_t *)v43;
      unint64_t v53 = *(void *)(v43 + 16);
      unint64_t v52 = *(void *)(v43 + 24);
      if (v53 >= v52 >> 1)
      {
        sub_251A3E3B8(v52 > 1, v53 + 1, 1);
        uint64_t v43 = (uint64_t)v132;
      }
      ++v42;
      *(void *)(v43 + 16) = v53 + 1;
      sub_251A4ECF0((uint64_t)v49, v43+ ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80))+ *(void *)(v46 + 72) * v53, &qword_26B21FFB8);
    }
    while (v41 != v42);
    swift_bridgeObjectRelease();
    int64_t v39 = v128;
    if (*(void *)(v43 + 16)) {
      goto LABEL_24;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v43 = MEMORY[0x263F8EE78];
    if (*(void *)(MEMORY[0x263F8EE78] + 16))
    {
LABEL_24:
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F1B8);
      uint64_t v54 = (uint64_t *)sub_251F36700();
      goto LABEL_27;
    }
  }
  uint64_t v54 = (uint64_t *)MEMORY[0x263F8EE80];
LABEL_27:
  uint64_t v132 = v54;
  sub_251DDC0C8(v43, 1, (uint64_t *)&v132);
  if (v39) {
    goto LABEL_86;
  }
  swift_bridgeObjectRelease();
  uint64_t v129 = v132;
  id v55 = objc_msgSend(v119, sel_services);
  unint64_t v56 = sub_251F35AC0();

  if (v56 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v57 = sub_251F366C0();
    int v128 = 0;
    if (v57) {
      goto LABEL_30;
    }
  }
  else
  {
    uint64_t v57 = *(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    int v128 = 0;
    if (v57)
    {
LABEL_30:
      if (v57 < 1) {
        goto LABEL_84;
      }
      uint64_t v58 = 0;
      char v59 = 0;
      while (1)
      {
        if ((v56 & 0xC000000000000001) != 0)
        {
          id v60 = (id)MEMORY[0x2533AB3A0](v58, v56);
          if (v59) {
            goto LABEL_32;
          }
        }
        else
        {
          id v60 = *(id *)(v56 + 8 * v58 + 32);
          if (v59) {
            goto LABEL_32;
          }
        }
        id v61 = objc_msgSend(v60, sel_applicationData);
        uint64_t v62 = (void *)sub_251F356C0();
        uint64_t v63 = (uint64_t *)objc_msgSend(v61, sel_objectForKeyedSubscript_, v62);

        if (v63)
        {
          uint64_t v132 = v63;
          __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB50);
          if (swift_dynamicCast())
          {
            char v59 = v131;

            goto LABEL_33;
          }
        }
LABEL_32:

        char v59 = 1;
LABEL_33:
        if (v57 == ++v58) {
          goto LABEL_43;
        }
      }
    }
  }
  char v59 = 0;
LABEL_43:
  swift_bridgeObjectRelease_n();
  id v64 = objc_msgSend(v119, sel_services);
  unint64_t v65 = sub_251F35AC0();

  unint64_t v66 = sub_251DD197C(v65);
  swift_bridgeObjectRelease();
  uint64_t v67 = sub_251EE07A0(v66);
  swift_bridgeObjectRelease();
  uint64_t v68 = sub_251ABE13C(v67);
  if (!v68)
  {
    swift_bridgeObjectRelease();
LABEL_51:
    int v128 = 0;
    unint64_t v123 = 0;
    goto LABEL_52;
  }
  char v69 = (void *)v68;
  if ((v67 & 0xC000000000000001) != 0) {
    uint64_t v70 = sub_251F36300();
  }
  else {
    uint64_t v70 = *(void *)(v67 + 16);
  }
  swift_bridgeObjectRelease();
  if (v70 != 1)
  {

    goto LABEL_51;
  }
  id v71 = objc_msgSend(v69, sel_name);
  int v128 = (uint64_t *)sub_251F356F0();
  unint64_t v123 = v72;

LABEL_52:
  id v73 = v119;
  id v74 = objc_msgSend(v119, sel_uniqueIdentifier);
  uint64_t v121 = sub_251F34DA0();
  uint64_t v122 = &v113;
  uint64_t v75 = *(void *)(v121 - 8);
  uint64_t v76 = *(void *)(v75 + 64);
  MEMORY[0x270FA5388](v121);
  uint64_t v120 = (char *)&v113 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34D80();

  id v77 = objc_msgSend(v73, sel_name);
  char v78 = (void *)sub_251F356F0();
  uint64_t v118 = v79;
  id v119 = v78;

  uint64_t v80 = swift_retain();
  uint64_t v81 = sub_251EDF4E4(v80);
  uint64_t v82 = v81;
  uint64_t v83 = v81 + 56;
  uint64_t v84 = 1 << *(unsigned char *)(v81 + 32);
  uint64_t v85 = -1;
  if (v84 < 64) {
    uint64_t v85 = ~(-1 << v84);
  }
  unint64_t v86 = v85 & *(void *)(v81 + 56);
  int64_t v87 = (unint64_t)(v84 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v88 = 0;
  while (v86)
  {
    unint64_t v89 = __clz(__rbit64(v86));
    v86 &= v86 - 1;
    unint64_t v90 = v89 | (v88 << 6);
LABEL_56:
    uint64_t v91 = v124;
    sub_251DDC940(*(void *)(v82 + 48) + *(void *)(v130 + 72) * v90, v124, (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t v92 = v91;
    uint64_t v93 = v125;
    sub_251DDE09C(v92, v125, (uint64_t (*)(void))type metadata accessor for StaticService);
    char v94 = *(unsigned char *)(v93 + *(int *)(v126 + 32));
    sub_251DDC9A8(v93, (uint64_t (*)(void))type metadata accessor for StaticService);
    if ((v94 & 1) == 0)
    {
      char v98 = 0;
LABEL_78:
      swift_release();
      swift_bridgeObjectRelease();
      if (v127[2])
      {
        uint64_t v99 = *(void (**)(void, void, void))(v75 + 32);
        uint64_t v100 = (uint64_t)v127;
        uint64_t v101 = v121;
      }
      else
      {
        swift_bridgeObjectRelease();
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB80);
        unint64_t v102 = (*(unsigned __int8 *)(v75 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80);
        uint64_t v103 = swift_allocObject();
        *(_OWORD *)(v103 + 16) = xmmword_251F38650;
        id v104 = objc_msgSend(v114, sel_roomForEntireHome);
        id v105 = objc_msgSend(v104, sel_uniqueIdentifier);

        MEMORY[0x270FA5388](v106);
        sub_251F34D80();

        uint64_t v99 = *(void (**)(void, void, void))(v75 + 32);
        uint64_t v101 = v121;
        v99(v103 + v102, (char *)&v113 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0), v121);
        uint64_t v100 = sub_251C08E40(v103);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
      }
      uint64_t v107 = v116;
      v99(v116, v120, v101);
      uint64_t result = (int *)type metadata accessor for StaticServiceGroup();
      int v109 = (void *)(v107 + result[5]);
      uint64_t v110 = v118;
      *int v109 = v119;
      v109[1] = v110;
      *(unsigned char *)(v107 + result[6]) = v98;
      *(unsigned char *)(v107 + result[7]) = v115;
      *(void *)(v107 + result[8]) = v100;
      uint64_t v111 = (uint64_t **)(v107 + result[9]);
      unint64_t v112 = v123;
      char *v111 = v128;
      v111[1] = (uint64_t *)v112;
      *(unsigned char *)(v107 + result[10]) = v59;
      *(void *)(v107 + result[11]) = v129;
      return result;
    }
  }
  int64_t v95 = v88 + 1;
  if (__OFADD__(v88, 1))
  {
    __break(1u);
    goto LABEL_83;
  }
  if (v95 >= v87)
  {
LABEL_77:
    char v98 = 1;
    goto LABEL_78;
  }
  unint64_t v96 = *(void *)(v83 + 8 * v95);
  ++v88;
  if (v96) {
    goto LABEL_75;
  }
  int64_t v88 = v95 + 1;
  if (v95 + 1 >= v87) {
    goto LABEL_77;
  }
  unint64_t v96 = *(void *)(v83 + 8 * v88);
  if (v96) {
    goto LABEL_75;
  }
  int64_t v88 = v95 + 2;
  if (v95 + 2 >= v87) {
    goto LABEL_77;
  }
  unint64_t v96 = *(void *)(v83 + 8 * v88);
  if (v96) {
    goto LABEL_75;
  }
  int64_t v88 = v95 + 3;
  if (v95 + 3 >= v87) {
    goto LABEL_77;
  }
  unint64_t v96 = *(void *)(v83 + 8 * v88);
  if (v96) {
    goto LABEL_75;
  }
  int64_t v88 = v95 + 4;
  if (v95 + 4 >= v87) {
    goto LABEL_77;
  }
  unint64_t v96 = *(void *)(v83 + 8 * v88);
  if (v96)
  {
LABEL_75:
    unint64_t v86 = (v96 - 1) & v96;
    unint64_t v90 = __clz(__rbit64(v96)) + (v88 << 6);
    goto LABEL_56;
  }
  int64_t v97 = v95 + 5;
  if (v97 >= v87) {
    goto LABEL_77;
  }
  unint64_t v96 = *(void *)(v83 + 8 * v97);
  if (v96)
  {
    int64_t v88 = v97;
    goto LABEL_75;
  }
  while (1)
  {
    int64_t v88 = v97 + 1;
    if (__OFADD__(v97, 1)) {
      break;
    }
    if (v88 >= v87) {
      goto LABEL_77;
    }
    unint64_t v96 = *(void *)(v83 + 8 * v88);
    ++v97;
    if (v96) {
      goto LABEL_75;
    }
  }
LABEL_85:
  __break(1u);
LABEL_86:
  swift_bridgeObjectRelease();
  uint64_t result = (int *)swift_release();
  __break(1u);
  return result;
}

Swift::Int_optional __swiftcall StaticServiceGroup.int(for:)(HomeDataModel::CharacteristicKind a1)
{
  uint64_t v1 = (char *)a1;
  uint64_t v2 = type metadata accessor for StaticService();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v6 = *v1;
  type metadata accessor for StaticServiceGroup();
  uint64_t v7 = swift_bridgeObjectRetain();
  sub_251EDC188(v7);
  uint64_t v8 = swift_bridgeObjectRetain();
  uint64_t v9 = (void *)sub_251A9147C(v8);
  swift_bridgeObjectRelease();
  uint64_t v23 = v9;
  sub_251D8DA14(&v23);
  swift_bridgeObjectRelease();
  uint64_t v10 = v23[2];
  swift_release();
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v11 = swift_bridgeObjectRetain();
  sub_251EDC188(v11);
  uint64_t v12 = swift_bridgeObjectRetain();
  uint64_t v13 = (void *)sub_251A9147C(v12);
  swift_bridgeObjectRelease();
  uint64_t v23 = v13;
  sub_251D8DA14(&v23);
  swift_bridgeObjectRelease();
  uint64_t v14 = v23[2];
  if (!v14)
  {
    swift_release();
LABEL_12:
    Swift::Int v17 = 0;
    goto LABEL_13;
  }
  uint64_t v15 = (char *)v23 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  uint64_t v16 = *(void *)(v3 + 72);
  swift_retain();
  Swift::Int v17 = 0;
  do
  {
    sub_251DDC940((uint64_t)v15, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t v23 = *(void **)&v5[*(int *)(v2 + 112)];
    char v22 = v6;
    Swift::Int_optional v24 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v22);
    if (v24.is_nil) {
      Swift::Int value = 0;
    }
    else {
      Swift::Int value = v24.value;
    }
    if (value > v17) {
      Swift::Int v17 = value;
    }
    sub_251DDC9A8((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticService);
    v15 += v16;
    --v14;
  }
  while (v14);
  swift_release_n();
LABEL_13:
  Swift::Bool v19 = v10 == 0;
  Swift::Int v20 = v17;
  result.Swift::Int value = v20;
  result.is_nil = v19;
  return result;
}

Swift::Double_optional __swiftcall StaticServiceGroup.double(for:)(HomeDataModel::CharacteristicKind a1)
{
  uint64_t v1 = (unsigned __int8 *)a1;
  uint64_t v2 = type metadata accessor for StaticCharacteristic();
  uint64_t v44 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for StaticService();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v12 = *v1;
  type metadata accessor for StaticServiceGroup();
  uint64_t v13 = swift_bridgeObjectRetain();
  sub_251EDC188(v13);
  uint64_t v14 = swift_bridgeObjectRetain();
  uint64_t v15 = (void *)sub_251A9147C(v14);
  swift_bridgeObjectRelease();
  uint64_t v47 = v15;
  sub_251D8DA14(&v47);
  swift_bridgeObjectRelease();
  uint64_t v16 = v47[2];
  swift_release();
  if (!v16) {
    goto LABEL_14;
  }
  unsigned int v45 = v12;
  LOBYTE(v47) = v12;
  if (CharacteristicKind.rawValue.getter() != 0xD000000000000024 || v18 != 0x8000000251F63120)
  {
    uint64_t v43 = v2;
    char v19 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v19) {
      goto LABEL_9;
    }
    LOBYTE(v47) = v45;
    if (CharacteristicKind.rawValue.getter() != 0xD000000000000024 || v20 != 0x8000000251F63C30)
    {
      char v21 = sub_251F36B10();
      swift_bridgeObjectRelease();
      if (v21) {
        goto LABEL_9;
      }
      uint64_t v28 = swift_bridgeObjectRetain();
      sub_251EDC188(v28);
      uint64_t v29 = swift_bridgeObjectRetain();
      uint64_t v30 = (void *)sub_251A9147C(v29);
      swift_bridgeObjectRelease();
      uint64_t v47 = v30;
      sub_251D8DA14(&v47);
      swift_bridgeObjectRelease();
      uint64_t v31 = v47[2];
      uint64_t v32 = v45;
      uint64_t v33 = v44;
      if (!v31)
      {
        swift_release();
        char v26 = 0;
        goto LABEL_16;
      }
      int64_t v34 = (char *)v47 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
      uint64_t v35 = *(void *)(v6 + 72);
      swift_retain();
      double v36 = 0.0;
      while (1)
      {
        sub_251DDC940((uint64_t)v34, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticService);
        uint64_t v38 = *(void **)&v8[*(int *)(v5 + 112)];
        if (!v38[2]) {
          goto LABEL_27;
        }
        unint64_t v39 = sub_2519FE568(v32);
        if ((v40 & 1) == 0) {
          goto LABEL_27;
        }
        sub_251DDC940(v38[7] + *(void *)(v33 + 72) * v39, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
        int64_t v41 = &v4[*(int *)(v43 + 24)];
        if (v41[16] != 7) {
          break;
        }
        double value = *(double *)v41;
        sub_251DDC9A8((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
LABEL_20:
        if (v36 < value) {
          double v36 = value;
        }
        sub_251DDC9A8((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticService);
        v34 += v35;
        if (!--v31)
        {
          swift_release_n();
          char v26 = LOBYTE(v36);
          goto LABEL_16;
        }
      }
      sub_251DDC9A8((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
LABEL_27:
      uint64_t v47 = v38;
      v46[0] = v32;
      Swift::Int_optional v48 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)v46);
      double value = 0.0;
      if (!v48.is_nil) {
        double value = (double)v48.value;
      }
      goto LABEL_20;
    }
  }
  swift_bridgeObjectRelease();
LABEL_9:
  uint64_t v22 = swift_bridgeObjectRetain();
  sub_251EDC188(v22);
  uint64_t v23 = swift_bridgeObjectRetain();
  Swift::Int_optional v24 = (void *)sub_251A9147C(v23);
  swift_bridgeObjectRelease();
  uint64_t v47 = v24;
  sub_251D8DA14(&v47);
  swift_bridgeObjectRelease();
  unsigned __int8 v25 = v45;
  if (v47[2])
  {
    sub_251DDC940((uint64_t)v47 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)), (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticService);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v11, 0, 1, v5);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v11, 1, 1, v5);
  }
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5) != 1)
  {
    uint64_t v47 = *(void **)&v11[*(int *)(v5 + 112)];
    v46[0] = v25;
    char v26 = sub_251B46610(v46);
    sub_251DDC9A8((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticService);
    goto LABEL_16;
  }
  sub_251A1B064((uint64_t)v11, qword_26B21EE20);
LABEL_14:
  char v26 = 0;
LABEL_16:
  Swift::Bool v27 = v26;
  result.double value = v17;
  result.is_nil = v27;
  return result;
}

uint64_t StaticServiceGroup.copyReplacing(id:name:isReachable:homeNonResponsiveType:roomIds:roomName:shouldShowInDashboard:staticServicesDictionary:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, unsigned __int8 *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char a10, uint64_t a11)
{
  uint64_t v12 = v11;
  uint64_t v75 = a3;
  uint64_t v76 = a8;
  uint64_t v77 = a2;
  uint64_t v78 = a7;
  uint64_t v67 = a6;
  int v64 = a4;
  uint64_t v70 = a1;
  uint64_t v72 = a9;
  uint64_t v14 = (int *)type metadata accessor for StaticServiceGroup();
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  id v74 = &v63[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v68 = &v63[-v18];
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  id v71 = &v63[-v20];
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  unint64_t v66 = &v63[-v22];
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  unint64_t v65 = &v63[-v24];
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  Swift::Bool v27 = &v63[-v26];
  uint64_t v28 = MEMORY[0x270FA5388](v25);
  uint64_t v30 = &v63[-v29];
  MEMORY[0x270FA5388](v28);
  uint64_t v32 = &v63[-v31];
  int v69 = *a5;
  uint64_t v33 = sub_251F34DA0();
  uint64_t v34 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  double v36 = &v63[-((v35 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v37 - 8);
  unint64_t v39 = &v63[-((v38 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v40 = v34;
  sub_251A1B128(v70, (uint64_t)v39, &qword_26B21FF90);
  sub_251DDC940(v12, (uint64_t)v32, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v34 + 48))(v39, 1, v33) == 1)
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v34 + 16))(v36, v32, v33);
    sub_251DDC9A8((uint64_t)v32, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
    sub_251A1B064((uint64_t)v39, &qword_26B21FF90);
  }
  else
  {
    sub_251DDC9A8((uint64_t)v32, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v34 + 32))(v36, v39, v33);
  }
  uint64_t v41 = (uint64_t)v68;
  uint64_t v42 = (uint64_t)v65;
  int v43 = v64;
  sub_251DDC940(v12, (uint64_t)v30, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
  if (v75)
  {
    uint64_t v70 = v75;
  }
  else
  {
    uint64_t v44 = (uint64_t *)&v30[v14[5]];
    uint64_t v45 = v44[1];
    uint64_t v77 = *v44;
    uint64_t v70 = v45;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_251DDC9A8((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
  sub_251DDC940(v12, (uint64_t)v27, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
  if (v43 == 2) {
    int v46 = v27[v14[6]];
  }
  else {
    int v46 = v43 & 1;
  }
  LODWORD(v75) = v46;
  uint64_t v48 = (uint64_t)v66;
  uint64_t v47 = v67;
  sub_251DDC9A8((uint64_t)v27, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
  sub_251DDC940(v12, v42, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
  if (v69 == 2) {
    int v49 = *(unsigned __int8 *)(v42 + v14[7]);
  }
  else {
    int v49 = v69 & 1;
  }
  int v69 = v49;
  sub_251DDC9A8(v42, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
  sub_251DDC940(v12, v48, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
  id v73 = v36;
  uint64_t v50 = v48;
  if (v47)
  {
    uint64_t v51 = v47;
  }
  else
  {
    uint64_t v51 = *(void *)(v48 + v14[8]);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_251DDC9A8(v50, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
  unint64_t v52 = v71;
  sub_251DDC940(v12, (uint64_t)v71, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
  uint64_t v53 = v76;
  if (!v76)
  {
    uint64_t v54 = (uint64_t *)&v52[v14[9]];
    uint64_t v53 = v54[1];
    uint64_t v78 = *v54;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_251DDC9A8((uint64_t)v52, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
  sub_251DDC940(v12, v41, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
  if (a10 == 2) {
    char v55 = *(unsigned char *)(v41 + v14[10]);
  }
  else {
    char v55 = a10 & 1;
  }
  sub_251DDC9A8(v41, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
  unint64_t v56 = v74;
  sub_251DDC940(v12, (uint64_t)v74, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
  if (a11)
  {
    uint64_t v57 = a11;
  }
  else
  {
    uint64_t v57 = *(void *)&v56[v14[11]];
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_251DDC9A8((uint64_t)v56, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
  uint64_t v58 = v72;
  uint64_t result = (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v40 + 32))(v72, v73, v33);
  id v60 = (void *)(v58 + v14[5]);
  uint64_t v61 = v70;
  *id v60 = v77;
  v60[1] = v61;
  *(unsigned char *)(v58 + v14[6]) = v75;
  *(unsigned char *)(v58 + v14[7]) = v69;
  *(void *)(v58 + v14[8]) = v51;
  uint64_t v62 = (void *)(v58 + v14[9]);
  *uint64_t v62 = v78;
  v62[1] = v53;
  *(unsigned char *)(v58 + v14[10]) = v55;
  *(void *)(v58 + v14[11]) = v57;
  return result;
}

uint64_t StaticServiceGroup.description.getter()
{
  sub_251F36400();
  swift_bridgeObjectRelease();
  uint64_t v7 = 0x2065636976726553;
  unint64_t v8 = 0xEF272070756F7267;
  type metadata accessor for StaticServiceGroup();
  swift_bridgeObjectRetain();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  sub_251F34DA0();
  sub_251A1A8EC((unint64_t *)&qword_26B21E6B0);
  sub_251F36AB0();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  uint64_t v0 = swift_bridgeObjectRetain();
  sub_251EDC188(v0);
  uint64_t v1 = swift_bridgeObjectRetain();
  uint64_t v2 = (void *)sub_251A9147C(v1);
  swift_bridgeObjectRelease();
  uint64_t v6 = v2;
  sub_251D8DA14(&v6);
  swift_bridgeObjectRelease();
  uint64_t v3 = v6;
  uint64_t v4 = type metadata accessor for StaticService();
  MEMORY[0x2533AAA10](v3, v4);
  sub_251F35800();
  swift_release();
  swift_bridgeObjectRelease();
  sub_251F35800();
  return v7;
}

uint64_t sub_251DDBA84()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_251DDBABC(uint64_t a1)
{
  return sub_251DDEFDC(a1, *(void *)(v1 + 16));
}

uint64_t _s13HomeDataModel18StaticServiceGroupV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((sub_251F34D70() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = (int *)type metadata accessor for StaticServiceGroup();
  uint64_t v5 = v4[5];
  uint64_t v6 = *(void *)(a1 + v5);
  uint64_t v7 = *(void *)(a1 + v5 + 8);
  unint64_t v8 = (void *)(a2 + v5);
  BOOL v9 = v6 == *v8 && v7 == v8[1];
  if (!v9 && (sub_251F36B10() & 1) == 0
    || *(unsigned __int8 *)(a1 + v4[6]) != *(unsigned __int8 *)(a2 + v4[6])
    || *(unsigned __int8 *)(a1 + v4[7]) != *(unsigned __int8 *)(a2 + v4[7])
    || (sub_251B04848(*(void *)(a1 + v4[8]), *(void *)(a2 + v4[8])) & 1) == 0)
  {
    return 0;
  }
  uint64_t v10 = v4[9];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = *(void *)(a1 + v10 + 8);
  uint64_t v13 = (void *)(a2 + v10);
  uint64_t v14 = v13[1];
  if (v12)
  {
    if (!v14) {
      return 0;
    }
    BOOL v15 = *v11 == *v13 && v12 == v14;
    if (!v15 && (sub_251F36B10() & 1) == 0) {
      return 0;
    }
  }
  else if (v14)
  {
    return 0;
  }
  if (*(unsigned __int8 *)(a1 + v4[10]) != *(unsigned __int8 *)(a2 + v4[10])) {
    return 0;
  }
  uint64_t v17 = v4[11];
  uint64_t v18 = *(void *)(a1 + v17);
  uint64_t v19 = *(void *)(a2 + v17);
  return sub_251AF99A8(v18, v19);
}

unint64_t sub_251DDBBF4()
{
  unint64_t result = qword_269BA3900;
  if (!qword_269BA3900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3900);
  }
  return result;
}

unint64_t sub_251DDBC48(unint64_t a1, uint64_t a2)
{
  unint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  MEMORY[0x270FA5388](v6 - 8);
  unint64_t v8 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = type metadata accessor for StaticService();
  uint64_t v33 = *(void *)(v39 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v39);
  uint64_t v38 = (uint64_t)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v32 = (uint64_t)v31 - v11;
  if (a1 >> 62) {
    goto LABEL_22;
  }
  uint64_t v12 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v12; uint64_t v12 = sub_251F366C0())
  {
    v31[1] = v3;
    unint64_t v37 = a1 & 0xC000000000000001;
    uint64_t v34 = (unsigned int (**)(char *, uint64_t, unint64_t))(v33 + 48);
    uint64_t v35 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v33 + 56);
    unint64_t v13 = MEMORY[0x263F8EE78];
    uint64_t v14 = 4;
    uint64_t v36 = v12;
    while (1)
    {
      id v16 = v37 ? (id)MEMORY[0x2533AB3A0](v14 - 4, a1) : *(id *)(a1 + 8 * v14);
      uint64_t v17 = v16;
      if (__OFADD__(v14 - 4, 1)) {
        break;
      }
      uint64_t v41 = v14 - 3;
      unint64_t v42 = v13;
      unint64_t v18 = a1;
      id v19 = objc_msgSend(v16, sel_uniqueIdentifier);
      uint64_t v20 = sub_251F34DA0();
      uint64_t v40 = v31;
      uint64_t v21 = *(void *)(v20 - 8);
      MEMORY[0x270FA5388](v20);
      uint64_t v23 = (char *)v31 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_251F34D80();

      if (*(void *)(a2 + 16) && (unint64_t v24 = sub_2519FE584((uint64_t)v23), (v25 & 1) != 0))
      {
        sub_251DDC940(*(void *)(a2 + 56) + *(void *)(v33 + 72) * v24, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticService);
        uint64_t v26 = 0;
      }
      else
      {
        uint64_t v26 = 1;
      }
      a1 = v18;
      unint64_t v3 = v39;
      (*v35)(v8, v26, 1, v39);
      (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);

      if ((*v34)(v8, 1, v3) == 1)
      {
        sub_251A1B064((uint64_t)v8, qword_26B21EE20);
        uint64_t v15 = v36;
        unint64_t v13 = v42;
      }
      else
      {
        uint64_t v27 = v32;
        sub_251DDE09C((uint64_t)v8, v32, (uint64_t (*)(void))type metadata accessor for StaticService);
        sub_251DDE09C(v27, v38, (uint64_t (*)(void))type metadata accessor for StaticService);
        unint64_t v13 = v42;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v15 = v36;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          unint64_t v13 = sub_251F0FB28(0, *(void *)(v13 + 16) + 1, 1, v13);
        }
        unint64_t v3 = *(void *)(v13 + 16);
        unint64_t v29 = *(void *)(v13 + 24);
        if (v3 >= v29 >> 1) {
          unint64_t v13 = sub_251F0FB28(v29 > 1, v3 + 1, 1, v13);
        }
        *(void *)(v13 + 16) = v3 + 1;
        sub_251DDE09C(v38, v13+ ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80))+ *(void *)(v33 + 72) * v3, (uint64_t (*)(void))type metadata accessor for StaticService);
      }
      ++v14;
      if (v41 == v15)
      {
        swift_bridgeObjectRelease();
        return v13;
      }
    }
    __break(1u);
LABEL_22:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x263F8EE78];
}

uint64_t sub_251DDC0C8(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v48 = a3;
  uint64_t v7 = type metadata accessor for StaticService();
  uint64_t v44 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v39 = (uint64_t)v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v38 - v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FFB8);
  uint64_t result = MEMORY[0x270FA5388](v12);
  id v16 = (char *)v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)(a1 + 16);
  if (!v17) {
    return result;
  }
  v38[1] = a1;
  v38[2] = v4;
  int v43 = &v16[*(int *)(result + 48)];
  uint64_t v18 = a1 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  uint64_t v40 = *(void *)(v14 + 72);
  swift_bridgeObjectRetain();
  uint64_t v41 = v16;
  unint64_t v42 = v11;
  while (1)
  {
    uint64_t v46 = v18;
    uint64_t v47 = v17;
    sub_251A1B128(v18, (uint64_t)v16, &qword_26B21FFB8);
    uint64_t v20 = sub_251F34DA0();
    uint64_t v45 = v38;
    uint64_t v21 = *(void *)(v20 - 8);
    MEMORY[0x270FA5388](v20);
    uint64_t v23 = (char *)v38 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
    unint64_t v24 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
    v24(v23, v16, v20);
    sub_251DDE09C((uint64_t)v43, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t v25 = *v48;
    unint64_t v27 = sub_2519FE584((uint64_t)v23);
    uint64_t v28 = *(void *)(v25 + 16);
    BOOL v29 = (v26 & 1) == 0;
    uint64_t v30 = v28 + v29;
    if (__OFADD__(v28, v29)) {
      break;
    }
    char v31 = v26;
    if (*(void *)(v25 + 24) >= v30)
    {
      if (a2)
      {
        if (v26) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_251A12304();
        if (v31) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_251A01DD0(v30, a2 & 1);
      unint64_t v32 = sub_2519FE584((uint64_t)v23);
      if ((v31 & 1) != (v33 & 1)) {
        goto LABEL_20;
      }
      unint64_t v27 = v32;
      if (v31)
      {
LABEL_3:
        uint64_t v11 = v42;
        uint64_t v19 = v39;
        sub_251DDE09C((uint64_t)v42, v39, (uint64_t (*)(void))type metadata accessor for StaticService);
        (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
        sub_251DDE104(v19, *(void *)(*v48 + 56) + *(void *)(v44 + 72) * v27, (uint64_t (*)(void))type metadata accessor for StaticService);
        goto LABEL_4;
      }
    }
    uint64_t v34 = (void *)*v48;
    *(void *)(*v48 + 8 * (v27 >> 6) + 64) |= 1 << v27;
    v24((char *)(v34[6] + *(void *)(v21 + 72) * v27), v23, v20);
    uint64_t v11 = v42;
    sub_251DDE09C((uint64_t)v42, v34[7] + *(void *)(v44 + 72) * v27, (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t v35 = v34[2];
    BOOL v36 = __OFADD__(v35, 1);
    uint64_t v37 = v35 + 1;
    if (v36) {
      goto LABEL_19;
    }
    v34[2] = v37;
LABEL_4:
    id v16 = v41;
    uint64_t v18 = v46 + v40;
    a2 = 1;
    uint64_t v17 = v47 - 1;
    if (v47 == 1) {
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  uint64_t result = sub_251F36BA0();
  __break(1u);
  return result;
}

uint64_t sub_251DDC504(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v48 = a3;
  uint64_t v7 = type metadata accessor for StaticServiceGroup();
  uint64_t v44 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v39 = (uint64_t)v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v38 - v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FFE8);
  uint64_t result = MEMORY[0x270FA5388](v12);
  id v16 = (char *)v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)(a1 + 16);
  if (!v17) {
    return result;
  }
  v38[1] = a1;
  v38[2] = v4;
  int v43 = &v16[*(int *)(result + 48)];
  uint64_t v18 = a1 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  uint64_t v40 = *(void *)(v14 + 72);
  swift_bridgeObjectRetain();
  uint64_t v41 = v16;
  unint64_t v42 = v11;
  while (1)
  {
    uint64_t v46 = v18;
    uint64_t v47 = v17;
    sub_251A1B128(v18, (uint64_t)v16, &qword_26B21FFE8);
    uint64_t v20 = sub_251F34DA0();
    uint64_t v45 = v38;
    uint64_t v21 = *(void *)(v20 - 8);
    MEMORY[0x270FA5388](v20);
    uint64_t v23 = (char *)v38 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
    unint64_t v24 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
    v24(v23, v16, v20);
    sub_251DDE09C((uint64_t)v43, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
    uint64_t v25 = *v48;
    unint64_t v27 = sub_2519FE584((uint64_t)v23);
    uint64_t v28 = *(void *)(v25 + 16);
    BOOL v29 = (v26 & 1) == 0;
    uint64_t v30 = v28 + v29;
    if (__OFADD__(v28, v29)) {
      break;
    }
    char v31 = v26;
    if (*(void *)(v25 + 24) >= v30)
    {
      if (a2)
      {
        if (v26) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_251A12274();
        if (v31) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_251A01D40(v30, a2 & 1);
      unint64_t v32 = sub_2519FE584((uint64_t)v23);
      if ((v31 & 1) != (v33 & 1)) {
        goto LABEL_20;
      }
      unint64_t v27 = v32;
      if (v31)
      {
LABEL_3:
        uint64_t v11 = v42;
        uint64_t v19 = v39;
        sub_251DDE09C((uint64_t)v42, v39, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
        (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
        sub_251DDE104(v19, *(void *)(*v48 + 56) + *(void *)(v44 + 72) * v27, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
        goto LABEL_4;
      }
    }
    uint64_t v34 = (void *)*v48;
    *(void *)(*v48 + 8 * (v27 >> 6) + 64) |= 1 << v27;
    v24((char *)(v34[6] + *(void *)(v21 + 72) * v27), v23, v20);
    uint64_t v11 = v42;
    sub_251DDE09C((uint64_t)v42, v34[7] + *(void *)(v44 + 72) * v27, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
    uint64_t v35 = v34[2];
    BOOL v36 = __OFADD__(v35, 1);
    uint64_t v37 = v35 + 1;
    if (v36) {
      goto LABEL_19;
    }
    v34[2] = v37;
LABEL_4:
    id v16 = v41;
    uint64_t v18 = v46 + v40;
    a2 = 1;
    uint64_t v17 = v47 - 1;
    if (v47 == 1) {
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  uint64_t result = sub_251F36BA0();
  __break(1u);
  return result;
}

uint64_t sub_251DDC940(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_251DDC9A8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_251DDCA10()
{
  return sub_251DDCBA4((unint64_t *)&unk_269BA3918, (void (*)(uint64_t))type metadata accessor for StaticServiceGroup);
}

uint64_t sub_251DDCA58()
{
  return sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
}

uint64_t sub_251DDCA80(void *a1)
{
  a1[1] = sub_251DDCBA4(&qword_269BA3928, (void (*)(uint64_t))type metadata accessor for StaticServiceGroup);
  a1[2] = sub_251DDCBA4(&qword_269BA3930, (void (*)(uint64_t))type metadata accessor for StaticServiceGroup);
  a1[3] = sub_251DDCBA4(&qword_269B9E1C8, (void (*)(uint64_t))type metadata accessor for StaticServiceGroup);
  a1[4] = sub_251DDCBA4(&qword_269B9E0B0, (void (*)(uint64_t))type metadata accessor for StaticServiceGroup);
  a1[5] = sub_251DDCBA4(&qword_269BA3938, (void (*)(uint64_t))type metadata accessor for StaticServiceGroup);
  uint64_t result = sub_251DDCBA4(&qword_269BA3940, (void (*)(uint64_t))type metadata accessor for StaticServiceGroup);
  a1[6] = result;
  return result;
}

uint64_t sub_251DDCBA4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_251DDCBEC(void *a1)
{
  a1[1] = sub_251DDCBA4(&qword_269B9E1C8, (void (*)(uint64_t))type metadata accessor for StaticServiceGroup);
  a1[2] = sub_251DDCBA4(&qword_269B9E0B0, (void (*)(uint64_t))type metadata accessor for StaticServiceGroup);
  a1[3] = sub_251DDCBA4(&qword_269BA3938, (void (*)(uint64_t))type metadata accessor for StaticServiceGroup);
  uint64_t result = sub_251DDCBA4(&qword_269BA3940, (void (*)(uint64_t))type metadata accessor for StaticServiceGroup);
  a1[4] = result;
  return result;
}

void *initializeBufferWithCopyOfBuffer for StaticServiceGroup(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *a1 = *a2;
    a1 = (void *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_251F34DA0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (void *)((char *)a1 + v8);
    uint64_t v11 = (void *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    *((unsigned char *)a1 + v9) = *((unsigned char *)a2 + v9);
    uint64_t v13 = a3[8];
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    *(void *)((char *)a1 + v13) = *(void *)((char *)a2 + v13);
    uint64_t v14 = a3[9];
    uint64_t v15 = a3[10];
    id v16 = (void *)((char *)a1 + v14);
    uint64_t v17 = (void *)((char *)a2 + v14);
    uint64_t v18 = v17[1];
    *id v16 = *v17;
    v16[1] = v18;
    *((unsigned char *)a1 + v15) = *((unsigned char *)a2 + v15);
    *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for StaticServiceGroup(uint64_t a1)
{
  uint64_t v2 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StaticServiceGroup(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  uint64_t v12 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  uint64_t v13 = a3[9];
  uint64_t v14 = a3[10];
  uint64_t v15 = (void *)(a1 + v13);
  id v16 = (void *)(a2 + v13);
  uint64_t v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  *(unsigned char *)(a1 + v14) = *(unsigned char *)(a2 + v14);
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for StaticServiceGroup(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[9];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for StaticServiceGroup(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v9 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v9) = *(unsigned char *)(a2 + v9);
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  return a1;
}

uint64_t assignWithTake for StaticServiceGroup(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + v12) = *(unsigned char *)(a2 + v12);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[9];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (uint64_t *)(a2 + v13);
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  *uint64_t v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(void *)(a1 + v18) = *(void *)(a2 + v18);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StaticServiceGroup(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251DDD264);
}

uint64_t sub_251DDD264(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for StaticServiceGroup(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251DDD33C);
}

uint64_t sub_251DDD33C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_251F34DA0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_251DDD3FC()
{
  uint64_t result = sub_251F34DA0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for StaticServiceGroup.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251DDD584);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticServiceGroup.CodingKeys()
{
  return &type metadata for StaticServiceGroup.CodingKeys;
}

unint64_t sub_251DDD5C0()
{
  unint64_t result = qword_269BA3948;
  if (!qword_269BA3948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3948);
  }
  return result;
}

unint64_t sub_251DDD618()
{
  unint64_t result = qword_269BA3950;
  if (!qword_269BA3950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3950);
  }
  return result;
}

unint64_t sub_251DDD670()
{
  unint64_t result = qword_269BA3958;
  if (!qword_269BA3958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_269BA3958);
  }
  return result;
}

uint64_t sub_251DDD6C4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6168636165527369 && a2 == 0xEB00000000656C62 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000251F71010 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7364496D6F6F72 && a2 == 0xE700000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x656D614E6D6F6F72 && a2 == 0xE800000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000251F70F70 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x8000000251F6A5B0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t sub_251DDD9E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_251DDD9F8(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_251DDDA5C()
{
  unint64_t v1 = (int *)type metadata accessor for StaticService();
  uint64_t v27 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v25 = *(void *)(*((void *)v1 - 1) + 64);
  swift_unknownObjectRelease();
  uint64_t v28 = v0;
  uint64_t v26 = (v27 + 32) & ~v27;
  uint64_t v2 = v0 + v26;
  uint64_t v3 = sub_251F34DA0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v5(v0 + v26, v3);
  swift_bridgeObjectRelease();
  v5(v0 + v26 + v1[11], v3);
  uint64_t v6 = v0 + v26 + v1[13];
  uint64_t v7 = type metadata accessor for StaticDeviceMetadata();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
  {
    v5(v6, v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v8 = v2 + v1[14];
  uint64_t v9 = sub_251F34D20();
  uint64_t v10 = *(void *)(v9 - 8);
  unint64_t v24 = *(unsigned int (**)(void))(v10 + 48);
  if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v24)(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  uint64_t v23 = v10;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = v2 + v1[25];
  uint64_t v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (!v12(v11, 1, v3)) {
    v5(v11, v3);
  }
  uint64_t v13 = v2 + v1[26];
  if (!v12(v13, 1, v3)) {
    v5(v13, v3);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v14 = v2 + v1[30];
  uint64_t v15 = type metadata accessor for StaticSoftwareUpdate(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15))
  {
    v5(v14, v3);
    uint64_t v16 = v14 + *(int *)(v15 + 20);
    type metadata accessor for StaticSoftwareUpdate.Kind(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v22 = v16 + *(int *)(type metadata accessor for StaticSoftwareUpdateMetadata(0) + 20);
      if (!v24()) {
        (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v9);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      if (EnumCaseMultiPayload) {
        goto LABEL_18;
      }
      v5(v16, v3);
      type metadata accessor for StaticHH2Update(0);
    }
    swift_bridgeObjectRelease();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  uint64_t v18 = v2 + v1[33];
  if (!v12(v18, 1, v3)) {
    v5(v18, v3);
  }
  unint64_t v19 = (v25 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = v19 + 8;

  return MEMORY[0x270FA0238](v28, v20, v27 | 7);
}

uint64_t sub_251DDDF50()
{
  uint64_t v2 = *(void *)(type metadata accessor for StaticService() - 8);
  uint64_t v3 = *(void *)(v0
                 + ((*(void *)(v2 + 64)
                   + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))
                   + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_251AB3DD4;
  uint64_t v5 = (void *)swift_task_alloc();
  _OWORD v4[2] = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_251AB3A34;
  return StaticService.set(room:)(v3);
}

uint64_t sub_251DDE09C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_251DDE104(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_251DDE174()
{
  uint64_t v0 = sub_251F350A0();
  __swift_allocate_value_buffer(v0, qword_269BA3970);
  __swift_project_value_buffer(v0, (uint64_t)qword_269BA3970);
  return sub_251F35090();
}

uint64_t static Logger.cameraClipAssetCache.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_269B9C4C8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_251F350A0();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_269BA3970);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t sub_251DDE2A0()
{
  swift_release();
  swift_release();

  swift_defaultActor_destroy();
  return MEMORY[0x270FA2418](v0);
}

uint64_t type metadata accessor for CameraClipAssetLibraryCache()
{
  return self;
}

void HMService.isFavorite.setter(char a1)
{
  id v3 = objc_msgSend(v1, sel_applicationData);
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A20]), sel_initWithBool_, a1 & 1);
  uint64_t v5 = (void *)sub_251F356C0();
  objc_msgSend(v3, sel_setObject_forKeyedSubscript_, v4, v5);

  id v6 = objc_msgSend(v1, sel_applicationData);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v1;
  v10[4] = sub_251DE01A8;
  v10[5] = v7;
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 1107296256;
  void v10[2] = sub_251C97A44;
  v10[3] = &block_descriptor_40;
  uint64_t v8 = _Block_copy(v10);
  id v9 = v1;
  swift_release();
  objc_msgSend(v9, sel_updateApplicationData_completionHandler_, v6, v8);
  _Block_release(v8);
}

void HMService.shouldShowInDashboard.setter(char a1)
{
  id v3 = objc_msgSend(v1, sel_applicationData);
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A20]), sel_initWithBool_, a1 & 1);
  uint64_t v5 = (void *)sub_251F356C0();
  objc_msgSend(v3, sel_setObject_forKeyedSubscript_, v4, v5);

  id v6 = objc_msgSend(v1, sel_applicationData);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v1;
  v10[4] = sub_251DE01A8;
  v10[5] = v7;
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 1107296256;
  void v10[2] = sub_251C97A44;
  v10[3] = &block_descriptor_6_2;
  uint64_t v8 = _Block_copy(v10);
  id v9 = v1;
  swift_release();
  objc_msgSend(v9, sel_updateApplicationData_completionHandler_, v6, v8);
  _Block_release(v8);
}

void HMService.customIconSFSymbol.setter(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    IconSymbol.init(rawValue:)(*(Swift::String *)&a1);
    if (v6 != 89)
    {
      char v4 = v6;
      static IconSymbol.convertToCAPackageIcon(iconSymbol:)(&v4, &v5);
      if (v5 == 59)
      {
        unint64_t v2 = 0;
        uint64_t v3 = 0;
      }
      else
      {
        unint64_t v2 = HFCAPackageIconIdentifier.rawValue.getter();
      }
      HMService.customIconSymbol.setter(v2, v3);
    }
  }
}

void HMService.contributesToHomeStatus.setter(char a1)
{
  id v3 = objc_msgSend(v1, sel_applicationData);
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A20]), sel_initWithBool_, a1 & 1);
  char v5 = (void *)sub_251F356C0();
  objc_msgSend(v3, sel_setObject_forKeyedSubscript_, v4, v5);

  id v6 = objc_msgSend(v1, sel_applicationData);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v1;
  v10[4] = sub_251DDF528;
  v10[5] = v7;
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 1107296256;
  void v10[2] = sub_251C97A44;
  v10[3] = &block_descriptor_12_1;
  uint64_t v8 = _Block_copy(v10);
  id v9 = v1;
  swift_release();
  objc_msgSend(v9, sel_updateApplicationData_completionHandler_, v6, v8);
  _Block_release(v8);
}

uint64_t HMService.dateAdded.getter@<X0>(uint64_t a1@<X8>)
{
  id v3 = objc_msgSend(v1, sel_applicationData);
  id v4 = (void *)sub_251F356C0();
  id v5 = objc_msgSend(v3, sel_objectForKeyedSubscript_, v4);

  if (!v5) {
    goto LABEL_5;
  }
  id v23 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB50);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_5;
  }
  uint64_t v7 = v21;
  unint64_t v6 = v22;
  sub_251A1A568(0, &qword_269BA5580);
  sub_251A1A568(0, &qword_269BA3988);
  uint64_t v8 = sub_251F35FE0();
  uint64_t v11 = (void *)v8;
  if (!v8)
  {
    sub_251A1AD94(v21, v22);
LABEL_5:
    uint64_t v9 = sub_251F34D20();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(a1, 1, 1, v9);
  }
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_251F34D20();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
  v17(v14, 1, 1, v15);
  sub_251DDF544();
  sub_251F36740();
  sub_251A1AD94(v7, v6);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    uint64_t v18 = a1;
    uint64_t v19 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(a1, v14, v15);
    uint64_t v18 = a1;
    uint64_t v19 = 0;
  }
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v17)(v18, v19, 1, v15);
}

uint64_t HMService.shouldShowInDashboard.getter()
{
  id v1 = objc_msgSend(v0, sel_applicationData);
  unint64_t v2 = (void *)sub_251F356C0();
  id v3 = objc_msgSend(v1, sel_objectForKeyedSubscript_, v2);

  if (v3 && (__swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB50), swift_dynamicCast())) {
    return v5;
  }
  else {
    return 1;
  }
}

uint64_t HMService.isFavorite.getter()
{
  id v1 = objc_msgSend(v0, sel_applicationData);
  unint64_t v2 = (void *)sub_251F356C0();
  id v3 = objc_msgSend(v1, sel_objectForKeyedSubscript_, v2);

  if (!v3) {
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB50);
  uint64_t result = swift_dynamicCast();
  if (result) {
    return v5;
  }
  return result;
}

uint64_t HMService.contributesToHomeStatus.getter()
{
  id v1 = v0;
  id v2 = objc_msgSend(v0, sel_serviceType);
  uint64_t v3 = sub_251F356F0();
  unsigned __int8 v5 = v4;

  v6._uint64_t countAndFlagsBits = v3;
  v6._object = v5;
  ServiceKind.init(rawValue:)(v6);
  if (ServiceKind.rawValue.getter() != 0xD000000000000024 || v7 != 0x8000000251F64FE0)
  {
    char v9 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v9)
    {
      char v8 = 1;
      goto LABEL_9;
    }
    id v10 = objc_msgSend(v1, sel_serviceType);
    uint64_t v11 = sub_251F356F0();
    uint64_t v13 = v12;

    v14._uint64_t countAndFlagsBits = v11;
    v14._object = v13;
    ServiceKind.init(rawValue:)(v14);
    if (ServiceKind.rawValue.getter() != 0xD000000000000024 || v15 != 0x8000000251F64FB0)
    {
      char v8 = sub_251F36B10();
      swift_bridgeObjectRelease();
      goto LABEL_9;
    }
  }
  swift_bridgeObjectRelease();
  char v8 = 1;
LABEL_9:
  id v16 = objc_msgSend(v1, sel_applicationData);
  uint64_t v17 = (void *)sub_251F356C0();
  id v18 = objc_msgSend(v16, sel_objectForKeyedSubscript_, v17);

  if (v18 && (__swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB50), swift_dynamicCast())) {
    char v19 = v21;
  }
  else {
    char v19 = v8 ^ 1;
  }
  return v19 & 1;
}

uint64_t HMService.customIconSFSymbol.getter()
{
  uint64_t v0 = HMService.customIconSymbol.getter();
  id v2 = v1;
  if (v1)
  {
    swift_bridgeObjectRetain();
    v3._uint64_t countAndFlagsBits = v0;
    v3._object = v2;
    HFCAPackageIconIdentifier.init(rawValue:)(v3);
    if (v7 != 59)
    {
      swift_bridgeObjectRelease();
      char v6 = v7;
      static IconSymbol.convertFromCAPackageIcon(iconIdentifier:)(&v6, &v5);
      return IconSymbol.rawValue.getter();
    }
  }
  return v0;
}

unint64_t static HMService.serviceContributesToHomeStatusKey.getter()
{
  return 0xD000000000000030;
}

unint64_t static HMService.serviceIconIDKey.getter()
{
  return 0xD00000000000001ELL;
}

unint64_t static HMService.serviceIsFavoriteKey.getter()
{
  return 0xD000000000000025;
}

unint64_t static HMService.serviceShouldShowInDashboardKey.getter()
{
  return 0xD00000000000002BLL;
}

void (*HMService.shouldShowInDashboard.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = HMService.shouldShowInDashboard.getter() & 1;
  return sub_251DDF02C;
}

void sub_251DDF02C(uint64_t a1)
{
}

uint64_t sub_251DDF054()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void (*HMService.isFavorite.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = HMService.isFavorite.getter() & 1;
  return sub_251DDF0D8;
}

void sub_251DDF0D8(uint64_t a1)
{
}

void (*HMService.contributesToHomeStatus.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = HMService.contributesToHomeStatus.getter() & 1;
  return sub_251DDF14C;
}

void sub_251DDF14C(uint64_t a1)
{
}

uint64_t HMService.customIconSymbol.getter()
{
  id v1 = objc_msgSend(v0, sel_applicationData);
  id v2 = (void *)sub_251F356C0();
  id v3 = objc_msgSend(v1, sel_objectForKeyedSubscript_, v2);

  if (v3)
  {
    id v18 = v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB50);
    if ((swift_dynamicCast() & 1) == 0) {
      return 0;
    }
    id v3 = v17;
    if (sub_251F35870())
    {
      char v4 = _s13HomeDataModel24LegacyHFImageIdentifiersO8rawValueACSgSS_tcfC_0();
      if (v4 != 73)
      {
        char v5 = v4;
        if (qword_269B9C4F8 != -1) {
          swift_once();
        }
        uint64_t v6 = qword_269BF3258;
        unint64_t v7 = LegacyHFImageIdentifiers.rawValue.getter(v5);
        if (*(void *)(v6 + 16) && (unint64_t v9 = sub_2519FE798(v7, v8), (v10 & 1) != 0))
        {
          uint64_t v11 = (uint64_t *)(*(void *)(v6 + 56) + 16 * v9);
          uint64_t v12 = *v11;
          uint64_t v13 = (void *)v11[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          v14._uint64_t countAndFlagsBits = v12;
          v14._object = v13;
          HFCAPackageIconIdentifier.init(rawValue:)(v14);
          if (v17 != 59)
          {
            LOBYTE(v18) = (_BYTE)v17;
            static IconSymbol.convertFromCAPackageIcon(iconIdentifier:)((char *)&v18, &v16);
            return IconSymbol.rawValue.getter();
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }
      }
      return 0;
    }
  }
  return (uint64_t)v3;
}

void HMService.customIconSymbol.setter(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    id v3 = objc_msgSend(v2, sel_applicationData);
    id v4 = (id)sub_251F356C0();
    char v5 = (void *)sub_251F356C0();
    objc_msgSend(v3, sel_setObject_forKeyedSubscript_, v4, v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    id v4 = objc_msgSend(v2, sel_applicationData);
    char v5 = (void *)sub_251F356C0();
    objc_msgSend(v4, sel_setObject_forKeyedSubscript_, 0, v5);
  }

  id v6 = objc_msgSend(v2, sel_applicationData);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v2;
  v10[4] = sub_251DE01A8;
  v10[5] = v7;
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 1107296256;
  void v10[2] = sub_251C97A44;
  v10[3] = &block_descriptor_20;
  uint64_t v8 = _Block_copy(v10);
  id v9 = v2;
  swift_release();
  objc_msgSend(v9, sel_updateApplicationData_completionHandler_, v6, v8);
  _Block_release(v8);
}

uint64_t sub_251DDF528(uint64_t a1)
{
  return sub_251DDFBF4(a1, *(void **)(v1 + 16));
}

unint64_t sub_251DDF544()
{
  unint64_t result = qword_269BA3990;
  if (!qword_269BA3990)
  {
    sub_251F34D20();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3990);
  }
  return result;
}

void (*HMService.customIconSFSymbol.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  a1[2] = v1;
  uint64_t v3 = HMService.customIconSymbol.getter();
  char v5 = v4;
  if (v4)
  {
    swift_bridgeObjectRetain();
    v6._uint64_t countAndFlagsBits = v3;
    v6._object = v5;
    HFCAPackageIconIdentifier.init(rawValue:)(v6);
    if (v11 != 59)
    {
      swift_bridgeObjectRelease();
      char v10 = v11;
      static IconSymbol.convertFromCAPackageIcon(iconIdentifier:)(&v10, &v9);
      uint64_t v3 = IconSymbol.rawValue.getter();
      char v5 = v7;
    }
  }
  *a1 = v3;
  a1[1] = (uint64_t)v5;
  return sub_251DDF640;
}

void sub_251DDF640(uint64_t *a1, char a2)
{
  if (a2)
  {
    uint64_t v2 = *a1;
    uint64_t v3 = a1[1];
    swift_bridgeObjectRetain();
    HMService.customIconSFSymbol.setter(v2, v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = a1[1];
    if (v4)
    {
      uint64_t v5 = *a1;
      IconSymbol.init(rawValue:)(*(Swift::String *)(&v4 - 1));
      if (v8 != 89)
      {
        v10[0] = v8;
        static IconSymbol.convertToCAPackageIcon(iconSymbol:)(v10, &v9);
        if (v9 == 59)
        {
          unint64_t v6 = 0;
          uint64_t v7 = 0;
        }
        else
        {
          v10[1] = v9;
          unint64_t v6 = HFCAPackageIconIdentifier.rawValue.getter();
        }
        HMService.customIconSymbol.setter(v6, v7);
      }
    }
  }
}

void (*HMService.customIconSymbol.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  a1[2] = v1;
  *a1 = HMService.customIconSymbol.getter();
  a1[1] = v3;
  return sub_251DDF75C;
}

void sub_251DDF75C(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  if (a2)
  {
    swift_bridgeObjectRetain();
    HMService.customIconSymbol.setter(v3, v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    HMService.customIconSymbol.setter(*a1, v2);
  }
}

uint64_t sub_251DDF7D0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251BB9660(a1, (uint64_t)v4);
  return HMService.dateAdded.setter((uint64_t)v4);
}

uint64_t HMService.dateAdded.setter(uint64_t a1)
{
  uint64_t v2 = v1;
  aBlock[7] = *(id *)MEMORY[0x263EF8340];
  uint64_t v4 = sub_251F34D20();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  MEMORY[0x270FA5388](v8 - 8);
  char v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251BB9660(a1, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
  {
    sub_251F34D10();
    sub_251BB8758((uint64_t)v10);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
  }
  char v11 = self;
  uint64_t v12 = (void *)sub_251F34C70();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  aBlock[0] = 0;
  id v13 = objc_msgSend(v11, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v12, 1, aBlock);

  id v14 = aBlock[0];
  if (v13)
  {
    uint64_t v15 = sub_251F34C20();
    unint64_t v17 = v16;

    id v18 = objc_msgSend(v2, sel_applicationData);
    char v19 = (void *)sub_251F34BF0();
    uint64_t v20 = (void *)sub_251F356C0();
    objc_msgSend(v18, sel_setObject_forKeyedSubscript_, v19, v20);

    id v21 = objc_msgSend(v2, sel_applicationData);
    unint64_t v22 = (void *)swift_allocObject();
    v22[2] = v2;
    aBlock[4] = sub_251DE01A8;
    aBlock[5] = v22;
    aBlock[0] = (id)MEMORY[0x263EF8330];
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_251C97A44;
    aBlock[3] = &block_descriptor_27_1;
    id v23 = _Block_copy(aBlock);
    id v24 = v2;
    swift_release();
    objc_msgSend(v24, sel_updateApplicationData_completionHandler_, v21, v23);
    _Block_release(v23);

    sub_251A1AD94(v15, v17);
  }
  else
  {
    uint64_t v25 = v14;
    uint64_t v26 = (void *)sub_251F34A30();

    swift_willThrow();
  }
  return sub_251BB8758(a1);
}

uint64_t sub_251DDFBF4(uint64_t a1, void *a2)
{
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x270FA5388](updated);
  uint64_t v5 = (uint64_t *)((char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BD0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB8);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  id v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B2200D8 != -1) {
    swift_once();
  }
  uint64_t v14 = __swift_project_value_buffer(v6, (uint64_t)qword_26B21FF20);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v14, v6);
  id v15 = objc_msgSend(a2, sel_accessory);
  id v16 = objc_msgSend(v15, sel_home);

  *uint64_t v5 = v16;
  swift_storeEnumTagMultiPayload();
  sub_251F35CF0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

void (*HMService.dateAdded.modify(void *a1))(uint64_t a1, char a2)
{
  *a1 = v1;
  size_t v3 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20) - 8) + 64);
  a1[1] = v3;
  uint64_t v4 = malloc(v3);
  a1[2] = v4;
  HMService.dateAdded.getter((uint64_t)v4);
  return sub_251DDFEEC;
}

void sub_251DDFEEC(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)(a1 + 16);
  if (a2)
  {
    MEMORY[0x270FA5388](a1);
    uint64_t v4 = (char *)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_251BB9660((uint64_t)v2, (uint64_t)v4);
    HMService.dateAdded.setter((uint64_t)v4);
    sub_251BB8758((uint64_t)v2);
    free(v2);
  }
  else
  {
    HMService.dateAdded.setter(*(void *)(a1 + 16));
    free(v2);
  }
}

uint64_t sub_251DDFFA8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = HMService.shouldShowInDashboard.getter();
  *a1 = result & 1;
  return result;
}

void sub_251DDFFD8(char *a1)
{
}

uint64_t sub_251DE0000@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = HMService.isFavorite.getter();
  *a1 = result & 1;
  return result;
}

void sub_251DE0030(char *a1)
{
}

uint64_t sub_251DE0058@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = HMService.contributesToHomeStatus.getter();
  *a1 = result & 1;
  return result;
}

void sub_251DE0088(char *a1)
{
}

uint64_t sub_251DE00B0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = HMService.customIconSFSymbol.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_251DE00DC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_33Tm(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))HMService.customIconSFSymbol.setter);
}

uint64_t sub_251DE00F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = HMService.customIconSymbol.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_251DE0120(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_33Tm(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t))HMService.customIconSymbol.setter);
}

uint64_t keypath_set_33Tm(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v7 = *a1;
  uint64_t v6 = a1[1];
  swift_bridgeObjectRetain();
  return a5(v7, v6);
}

uint64_t sub_251DE0180@<X0>(uint64_t a1@<X8>)
{
  return HMService.dateAdded.getter(a1);
}

uint64_t sub_251DE01DC(uint64_t a1)
{
  uint64_t v1 = *(void (**)(char *))(a1 + 32);
  uint64_t v2 = sub_251F34650();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34630();
  swift_retain();
  v1(v5);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

id COAlarmManager.add<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_251DE02E4(a1, a2, a3, (SEL *)&selRef_addAlarm_);
}

id COAlarmManager.update<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_251DE02E4(a1, a2, a3, (SEL *)&selRef_updateAlarm_);
}

id sub_251DE02E4(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  MEMORY[0x270FA5388](a1);
  (*(void (**)(char *))(v7 + 16))((char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_251A1A568(0, &qword_269BA2B20);
  swift_dynamicCast();
  uint64_t v8 = v12;
  id v9 = objc_msgSend(v4, *a4, v12);

  return v9;
}

id COAlarmManager.remove<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_251DE02E4(a1, a2, a3, (SEL *)&selRef_removeAlarm_);
}

id sub_251DE0404()
{
  id v1 = objc_msgSend(*v0, sel_alarms);
  return v1;
}

id sub_251DE043C(char a1)
{
  id v2 = objc_msgSend(*v1, sel_alarmsIncludingSleepAlarm_, a1 & 1);
  return v2;
}

id sub_251DE047C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return COAlarmManager.add<A>(_:)(a1, a2, a3);
}

id sub_251DE04A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return COAlarmManager.update<A>(_:)(a1, a2, a3);
}

id sub_251DE04C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return COAlarmManager.remove<A>(_:)(a1, a2, a3);
}

id sub_251DE04E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_251DE0500(a1, a2, a3, a4, (SEL *)&selRef_snoozeAlarmWithIdentifier_);
}

id sub_251DE04F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_251DE0500(a1, a2, a3, a4, (SEL *)&selRef_dismissAlarmWithIdentifier_);
}

id sub_251DE0500(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  uint64_t v7 = *v5;
  uint64_t v8 = (void *)sub_251F356C0();
  id v9 = objc_msgSend(v7, *a5, v8);

  return v9;
}

id sub_251DE0558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *v4;
  v11[4] = a3;
  v11[5] = a4;
  v11[0] = MEMORY[0x263EF8330];
  v11[1] = 1107296256;
  _OWORD v11[2] = sub_251DE01DC;
  v11[3] = &block_descriptor_41;
  uint64_t v8 = _Block_copy(v11);
  swift_retain();
  id v9 = objc_msgSend(v7, sel_addObserverForName_queue_usingBlock_, a1, a2, v8);
  _Block_release(v8);
  swift_release();
  return v9;
}

id sub_251DE0638(uint64_t a1)
{
  return objc_msgSend(*v1, sel_removeObserver_, a1);
}

id sub_251DE064C()
{
  id v1 = *v0;
  sub_251A1A568(0, (unint64_t *)&qword_26B21EAF8);
  id v2 = (void *)sub_251F35AA0();
  id v3 = objc_msgSend(v1, sel_alarmsForAccessories_, v2);

  return v3;
}

id sub_251DE06C0(uint64_t a1)
{
  id v2 = objc_msgSend(*v1, sel_alarmsForAccessory_, a1);
  return v2;
}

uint64_t dispatch thunk of HomeAlarmManager.alarms()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of HomeAlarmManager.alarms(includingSleepAlarm:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of HomeAlarmManager.add<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t dispatch thunk of HomeAlarmManager.update<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t dispatch thunk of HomeAlarmManager.remove<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

uint64_t dispatch thunk of HomeAlarmManager.snoozeAlarm(withIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of HomeAlarmManager.dismissAlarm(withIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t dispatch thunk of HomeAlarmManager.addObserver(forName:queue:using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 64))();
}

uint64_t dispatch thunk of HomeAlarmManager.removeObserver(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of HomeAlarmManager.description.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of HomeAlarmManager.alarms(forAccessories:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t dispatch thunk of HomeAlarmManager.alarms(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t dispatch thunk of HomeAlarmManager._canDispatchForAssociatedAccessory()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of HomeAlarmManager.init(for:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 112))();
}

void *sub_251DE0814(void *a1)
{
  id v2 = (void *)v1;
  *(unsigned char *)(v1 + 16) = 0;
  uint64_t v4 = MEMORY[0x263F8EE78];
  v2[4] = MEMORY[0x263F8EE78];
  v2[5] = sub_251A1A338(v4);
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08970]), sel_init);
  v2[3] = v5;
  sub_251A1A568(0, &qword_269BA0FC8);
  id v6 = v5;
  uint64_t v7 = (void *)MEMORY[0x2533AB010](v4);
  id v8 = a1;
  objc_msgSend(v6, sel_setObject_forKey_, v7, v8);

  swift_unknownObjectRelease();
  return v2;
}

uint64_t sub_251DE08F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_251CCED04();
  if (v6)
  {
    uint64_t v7 = (void *)v6;
    uint64_t v8 = *(void *)(v2 + 40);
    if (*(void *)(v8 + 16) && (unint64_t v9 = sub_2519FF060(0), (v10 & 1) != 0))
    {
      uint64_t v11 = *(void *)(*(void *)(v8 + 56) + 8 * v9);
      uint64_t v12 = *(void *)(v11 + 16);
      if (v12)
      {
        uint64_t v13 = v11 + 32;
        swift_bridgeObjectRetain_n();
        while (1)
        {
          sub_251A1A4EC(v13, (uint64_t)v24);
          if (sub_251DE0FC4((uint64_t)v24, a1, a2)) {
            break;
          }
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v24);
          v13 += 40;
          if (!--v12)
          {
            swift_bridgeObjectRelease();
            goto LABEL_18;
          }
        }
        swift_bridgeObjectRelease();
        sub_251A1A444(v24, (uint64_t)&v25);
      }
      else
      {
        swift_bridgeObjectRetain();
LABEL_18:
        uint64_t v27 = 0;
        long long v25 = 0u;
        long long v26 = 0u;
      }
      swift_bridgeObjectRelease();
      if (*((void *)&v26 + 1))
      {
        sub_251A1B064((uint64_t)&v25, &qword_269B9DF00);
        sub_251CD0660();
        unint64_t v22 = (void *)swift_allocError();
        *id v23 = 0xD000000000000010;
        v23[1] = 0x8000000251F70590;
        id v17 = (id)sub_251F34A20();
        id v18 = objc_msgSend(self, sel_futureWithError_, v17);

        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v27 = 0;
      long long v25 = 0u;
      long long v26 = 0u;
    }
    sub_251A1B064((uint64_t)&v25, &qword_269B9DF00);
    uint64_t v14 = *(void **)(v3 + 24);
    id v15 = objc_msgSend(v14, sel_objectForKey_, v7);
    if (!v15)
    {
      sub_251A1A568(0, &qword_269BA0FC8);
      id v15 = (id)MEMORY[0x2533AB010](MEMORY[0x263F8EE78]);
    }
    id v16 = objc_msgSend(v15, sel_arrayByAddingObject_, sub_251F36B00());
    swift_unknownObjectRelease();
    if (v16)
    {
      objc_msgSend(v14, sel_setObject_forKey_, v16, v7);

      id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF9C8]), sel_init);
      id v18 = objc_msgSend(self, sel_futureWithResult_, v17);

LABEL_14:
      return (uint64_t)v18;
    }
    __break(1u);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v24);
    uint64_t result = swift_bridgeObjectRelease();
    __break(1u);
  }
  else
  {
    id v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF9C8]), sel_init);
    id v21 = objc_msgSend(self, sel_futureWithResult_, v20);

    return (uint64_t)v21;
  }
  return result;
}

id sub_251DE0C24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_251DE0C7C(a1, a2, a3, 1u, 0x8000000251F70570, (uint64_t (*)(_OWORD *))sub_251DE1B94);
}

id sub_251DE0C50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_251DE0C7C(a1, a2, a3, 2u, 0x8000000251F70550, (uint64_t (*)(_OWORD *))sub_251DE1B60);
}

id sub_251DE0C7C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4, uint64_t a5, uint64_t (*a6)(_OWORD *))
{
  uint64_t v10 = v6;
  uint64_t v13 = sub_251CCED04();
  if (!v13)
  {
    id v28 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF9C8]), sel_init);
    id v29 = objc_msgSend(self, sel_futureWithResult_, v28);

    return v29;
  }
  uint64_t v14 = (void *)v13;
  uint64_t v15 = *(void *)(v6 + 40);
  if (*(void *)(v15 + 16) && (unint64_t v16 = sub_2519FF060(a4), (v17 & 1) != 0))
  {
    uint64_t v35 = a5;
    uint64_t v18 = *(void *)(*(void *)(v15 + 56) + 8 * v16);
    uint64_t v19 = *(void *)(v18 + 16);
    if (v19)
    {
      uint64_t v20 = v18 + 32;
      swift_bridgeObjectRetain_n();
      while (1)
      {
        sub_251A1A4EC(v20, (uint64_t)v36);
        if (sub_251DE0FC4((uint64_t)v36, a1, a2)) {
          break;
        }
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v36);
        v20 += 40;
        if (!--v19)
        {
          swift_bridgeObjectRelease();
          goto LABEL_15;
        }
      }
      swift_bridgeObjectRelease();
      sub_251A1A444(v36, (uint64_t)&v37);
      swift_bridgeObjectRelease();
      uint64_t v30 = v35;
      if (*((void *)&v38 + 1))
      {
LABEL_18:
        sub_251A1B064((uint64_t)&v37, &qword_269B9DF00);
        sub_251CD0660();
        char v31 = (void *)swift_allocError();
        *unint64_t v32 = 0xD000000000000013;
        v32[1] = v30;
        char v33 = (void *)sub_251F34A20();
        id v34 = objc_msgSend(self, sel_futureWithError_, v33);

        return v34;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
LABEL_15:
      uint64_t v30 = v35;
      uint64_t v39 = 0;
      long long v37 = 0u;
      long long v38 = 0u;
      swift_bridgeObjectRelease();
      if (*((void *)&v38 + 1)) {
        goto LABEL_18;
      }
    }
  }
  else
  {
    uint64_t v39 = 0;
    long long v37 = 0u;
    long long v38 = 0u;
  }
  sub_251A1B064((uint64_t)&v37, &qword_269B9DF00);
  id v21 = *(void **)(v10 + 24);
  id v22 = objc_msgSend(v21, sel_objectForKey_, v14);
  if (v22)
  {
    id v23 = (id)MEMORY[0x270FA5388](v22);
    sub_251C35C2C(a6);
    id v24 = (void *)sub_251F35AA0();
    swift_bridgeObjectRelease();
    objc_msgSend(v21, sel_setObject_forKey_, v24, v14);
  }
  id v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF9C8]), sel_init);
  id v26 = objc_msgSend(self, sel_futureWithResult_, v25);

  return v26;
}

uint64_t sub_251DE0FC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](a1);
  uint64_t v7 = &v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_251A1A4EC(v5, (uint64_t)v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CEB8);
  swift_dynamicCast();
  char v8 = sub_251F35650();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, a3);
  return v8 & 1;
}

BOOL sub_251DE10E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v15[1] = a2;
  uint64_t v16 = a3;
  sub_251A0D51C(a1, (uint64_t)v20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CEB8);
  swift_dynamicCast();
  uint64_t v5 = v18;
  uint64_t v6 = v19;
  __swift_project_boxed_opaque_existential_1(v17, v18);
  uint64_t v7 = sub_251F34DA0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x270FA5388](v7);
  unint64_t v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 56))(v5, v6);
  MEMORY[0x270FA5388](v11);
  (*(void (**)(uint64_t, uint64_t))(a4 + 56))(v16, a4);
  sub_251A9FE88();
  char v12 = sub_251F35650();
  uint64_t v13 = *(void (**)(char *, uint64_t))(v8 + 8);
  v13((char *)v15 - v10, v7);
  v13((char *)v15 - v10, v7);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v17);
  return (v12 & 1) == 0;
}

uint64_t sub_251DE12B0()
{
  type metadata accessor for MockObserver();
  uint64_t result = swift_dynamicCastClass();
  if (result)
  {
    swift_beginAccess();
    swift_unknownObjectRetain();
    uint64_t v2 = sub_251CD0128((unint64_t *)(v0 + 32));
    uint64_t result = swift_unknownObjectRelease();
    unint64_t v3 = *(void *)(v0 + 32);
    if (v3 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v4 = sub_251F366C0();
      uint64_t result = swift_bridgeObjectRelease();
      if (v4 >= v2) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v4 >= v2)
      {
LABEL_4:
        sub_251D39874(v2, v4);
        return swift_endAccess();
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_251DE13A0()
{
  uint64_t v1 = v0;
  sub_251F36400();
  swift_bridgeObjectRelease();
  v12[0] = 0xD00000000000001FLL;
  v12[1] = 0x8000000251F71D40;
  uint64_t v2 = (void *)sub_251CCED04();
  if (v2)
  {
    unint64_t v3 = v2;
    id v4 = objc_msgSend(v2, sel_uniqueIdentifier);

    uint64_t v5 = sub_251F34DA0();
    uint64_t v6 = *(void *)(v5 - 8);
    MEMORY[0x270FA5388](v5);
    uint64_t v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_251F34D80();

    sub_251F34D40();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  id v9 = *(id *)(v1 + 24);
  id v10 = objc_msgSend(v9, sel_description);
  sub_251F356F0();

  sub_251F35800();
  swift_bridgeObjectRelease();
  return v12[0];
}

uint64_t type metadata accessor for MockAlarmManager()
{
  return self;
}

uint64_t sub_251DE15B0(uint64_t a1, uint64_t a2)
{
  return sub_251DE08F8(a1, a2);
}

id sub_251DE15D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_251DE0C24(a1, a2, a3);
}

id sub_251DE15F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_251DE0C50(a1, a2, a3);
}

id sub_251DE1620(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_251DE1A24(a3, a4);
}

uint64_t sub_251DE164C()
{
  return sub_251DE12B0();
}

uint64_t sub_251DE1670()
{
  return sub_251DE13A0();
}

void *sub_251DE1694@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for MockAlarmManager();
  uint64_t v4 = swift_allocObject();
  uint64_t result = sub_251DE0814(a1);
  *a2 = v4;
  return result;
}

id sub_251DE171C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MockObserver();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_251DE17D8()
{
  return type metadata accessor for MockObserver();
}

uint64_t type metadata accessor for MockObserver()
{
  uint64_t result = qword_269BA39A0;
  if (!qword_269BA39A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_251DE182C()
{
  uint64_t result = sub_251F34DA0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for MockAlarmManager.Action(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251DE1994);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MockAlarmManager.Action()
{
  return &type metadata for MockAlarmManager.Action;
}

unint64_t sub_251DE19D0()
{
  unint64_t result = qword_269BA39B0;
  if (!qword_269BA39B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA39B0);
  }
  return result;
}

id sub_251DE1A24(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  unsigned int v6 = (objc_class *)type metadata accessor for MockObserver();
  uint64_t v7 = (char *)objc_allocWithZone(v6);
  uint64_t v8 = (uint64_t *)&v7[OBJC_IVAR____TtC13HomeDataModel12MockObserver_block];
  *uint64_t v8 = 0;
  v8[1] = 0;
  swift_retain();
  id v9 = v7;
  sub_251F34D90();
  uint64_t v10 = *v8;
  *uint64_t v8 = a1;
  v8[1] = a2;
  swift_retain();
  sub_251A27C7C(v10);

  v14.receiver = v9;
  v14.super_class = v6;
  id v11 = objc_msgSendSuper2(&v14, sel_init);
  swift_release();
  swift_beginAccess();
  id v12 = v11;
  MEMORY[0x2533AA9D0]();
  if (*(void *)((*(void *)(v3 + 32) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v3 + 32) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    sub_251F35B10();
  sub_251F35B70();
  sub_251F35AE0();
  swift_endAccess();
  return v12;
}

BOOL sub_251DE1B60(uint64_t a1)
{
  return sub_251DE10E0(a1, v1[4], v1[2], v1[3]);
}

ValueMetadata *type metadata accessor for MockError()
{
  return &type metadata for MockError;
}

BOOL sub_251DE1B94(uint64_t a1)
{
  return sub_251DE1B60(a1);
}

uint64_t sub_251DE1BB0(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for StaticAccessory(0);
  uint64_t v41 = *(void *)(v3 - 8);
  uint64_t v42 = v3;
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v40 = (uint64_t)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v39 = (uint64_t)v33 - v6;
  int64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = MEMORY[0x263F8EE78];
  if (!v7) {
    return v8;
  }
  v33[1] = v1;
  uint64_t v44 = MEMORY[0x263F8EE78];
  sub_251A3DEDC(0, v7, 0);
  uint64_t result = sub_251AC5764(a1);
  uint64_t v11 = result;
  uint64_t v12 = 0;
  char v14 = v13 & 1;
  uint64_t v15 = a1 + 64;
  int64_t v35 = v7;
  uint64_t v36 = v10;
  uint64_t v34 = a1 + 88;
  uint64_t v37 = a1 + 64;
  uint64_t v38 = a1;
  while ((v14 & 1) == 0)
  {
    if (v11 < 0 || v11 >= 1 << *(unsigned char *)(a1 + 32))
    {
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
      break;
    }
    unint64_t v17 = (unint64_t)v11 >> 6;
    if ((*(void *)(v15 + 8 * ((unint64_t)v11 >> 6)) & (1 << v11)) == 0) {
      goto LABEL_29;
    }
    if (*(_DWORD *)(a1 + 36) != v10) {
      goto LABEL_30;
    }
    uint64_t v43 = v10;
    uint64_t v18 = v39;
    sub_251DEE4CC(*(void *)(a1 + 56) + *(void *)(v41 + 72) * v11, v39, type metadata accessor for StaticAccessory);
    uint64_t v19 = v18;
    uint64_t v20 = v40;
    sub_251DEE534(v19, v40, type metadata accessor for StaticAccessory);
    id v21 = (uint64_t *)(v20 + *(int *)(v42 + 20));
    uint64_t v22 = *v21;
    uint64_t v23 = v21[1];
    swift_bridgeObjectRetain();
    sub_251DEE59C(v20, type metadata accessor for StaticAccessory);
    uint64_t v8 = v44;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = sub_251A3DEDC(0, *(void *)(v8 + 16) + 1, 1);
      uint64_t v8 = v44;
    }
    unint64_t v25 = *(void *)(v8 + 16);
    unint64_t v24 = *(void *)(v8 + 24);
    uint64_t v26 = v43;
    if (v25 >= v24 >> 1)
    {
      uint64_t result = sub_251A3DEDC(v24 > 1, v25 + 1, 1);
      uint64_t v26 = v43;
      uint64_t v8 = v44;
    }
    *(void *)(v8 + 16) = v25 + 1;
    uint64_t v27 = v8 + 16 * v25;
    *(void *)(v27 + 32) = v22;
    *(void *)(v27 + 40) = v23;
    a1 = v38;
    int64_t v16 = 1 << *(unsigned char *)(v38 + 32);
    if (v11 >= v16) {
      goto LABEL_31;
    }
    uint64_t v15 = v37;
    uint64_t v28 = *(void *)(v37 + 8 * v17);
    if ((v28 & (1 << v11)) == 0) {
      goto LABEL_32;
    }
    if (*(_DWORD *)(v38 + 36) != v26) {
      goto LABEL_33;
    }
    unint64_t v29 = v28 & (-2 << (v11 & 0x3F));
    if (v29)
    {
      int64_t v16 = __clz(__rbit64(v29)) | v11 & 0xFFFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v30 = v17 + 1;
      unint64_t v31 = (unint64_t)(v16 + 63) >> 6;
      if (v17 + 1 < v31)
      {
        unint64_t v32 = *(void *)(v37 + 8 * v30);
        if (!v32)
        {
          unint64_t v30 = v17 + 2;
          if (v17 + 2 >= v31) {
            goto LABEL_4;
          }
          unint64_t v32 = *(void *)(v37 + 8 * v30);
          if (!v32)
          {
            while (v31 - 3 != v17)
            {
              unint64_t v32 = *(void *)(v34 + 8 * v17++);
              if (v32)
              {
                uint64_t result = sub_251A4ECE4(v11, v26, 0);
                unint64_t v30 = v17 + 2;
                goto LABEL_20;
              }
            }
            uint64_t result = sub_251A4ECE4(v11, v26, 0);
            goto LABEL_4;
          }
        }
LABEL_20:
        int64_t v16 = __clz(__rbit64(v32)) + (v30 << 6);
      }
    }
LABEL_4:
    uint64_t v10 = v36;
    char v14 = 0;
    ++v12;
    uint64_t v11 = v16;
    if (v12 == v35) {
      return v8;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_251DE1F50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v51 = a4;
  uint64_t v7 = type metadata accessor for StaticAccessory(0);
  uint64_t v53 = *(void *)(v7 - 8);
  uint64_t v54 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v52 = (uint64_t)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v57 = (uint64_t)&v50 - v14;
  MEMORY[0x270FA5388](v13);
  int64_t v16 = (char *)&v50 - v15;
  sub_251A1B128(a1, (uint64_t)&v50 - v15, &qword_26B21F120);
  uint64_t v17 = *(void *)(a2 + 56);
  uint64_t v55 = a2 + 56;
  uint64_t v18 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v19 = -1;
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  unint64_t v20 = v19 & v17;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t v50 = (uint64_t)&v50;
  MEMORY[0x270FA5388](v21 - 8);
  uint64_t v60 = a2;
  uint64_t v61 = (char *)&v50 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v56 = (unint64_t)(v18 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v24 = 0;
  uint64_t v58 = v12;
  char v59 = v16;
  while (1)
  {
    if (v20)
    {
      unint64_t v27 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      int64_t v63 = v24;
      unint64_t v28 = v27 | (v24 << 6);
      goto LABEL_24;
    }
    int64_t v29 = v24 + 1;
    if (__OFADD__(v24, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    unint64_t v30 = v61;
    if (v29 >= v56) {
      goto LABEL_30;
    }
    unint64_t v31 = *(void *)(v55 + 8 * v29);
    int64_t v32 = v24 + 1;
    if (!v31)
    {
      int64_t v32 = v24 + 2;
      if (v24 + 2 >= v56) {
        goto LABEL_30;
      }
      unint64_t v31 = *(void *)(v55 + 8 * v32);
      if (!v31)
      {
        int64_t v32 = v24 + 3;
        if (v24 + 3 >= v56) {
          goto LABEL_30;
        }
        unint64_t v31 = *(void *)(v55 + 8 * v32);
        if (!v31)
        {
          int64_t v32 = v24 + 4;
          if (v24 + 4 >= v56) {
            goto LABEL_30;
          }
          unint64_t v31 = *(void *)(v55 + 8 * v32);
          if (!v31) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v20 = (v31 - 1) & v31;
    int64_t v63 = v32;
    unint64_t v28 = __clz(__rbit64(v31)) + (v32 << 6);
LABEL_24:
    uint64_t v34 = *(void *)(v60 + 48);
    uint64_t v35 = sub_251F34DA0();
    uint64_t v36 = *(void *)(v35 - 8);
    uint64_t v37 = v36;
    uint64_t v38 = v34 + *(void *)(v36 + 72) * v28;
    uint64_t v39 = v61;
    (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v61, v38, v35);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v39, 0, 1, v35);
    uint64_t v40 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v37 + 48))(v39, 1, v35);
    if (v40 == 1) {
      goto LABEL_31;
    }
    uint64_t v62 = &v50;
    MEMORY[0x270FA5388](v40);
    uint64_t v42 = (uint64_t)v12;
    uint64_t v43 = (char *)&v50 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v43, v39, v35);
    sub_251A1B128((uint64_t)v16, v42, &qword_26B21F120);
    uint64_t v44 = type metadata accessor for StaticSoftwareUpdate(0);
    uint64_t v45 = *(void *)(v44 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v42, 1, v44) == 1)
    {
      sub_251A1B064(v42, &qword_26B21F120);
      if (*(void *)(a3 + 16) && (unint64_t v46 = sub_2519FE584((uint64_t)v43), (v47 & 1) != 0))
      {
        uint64_t v48 = v52;
        sub_251DEE4CC(*(void *)(a3 + 56) + *(void *)(v53 + 72) * v46, v52, type metadata accessor for StaticAccessory);
        uint64_t v26 = v57;
        sub_251A1B128(v48 + *(int *)(v54 + 112), v57, &qword_26B21F120);
        sub_251DEE59C(v48, type metadata accessor for StaticAccessory);
      }
      else
      {
        uint64_t v26 = v57;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v45 + 56))(v57, 1, 1, v44);
      }
    }
    else
    {
      uint64_t v25 = v42;
      uint64_t v26 = v57;
      sub_251DEE534(v25, v57, type metadata accessor for StaticSoftwareUpdate);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v45 + 56))(v26, 0, 1, v44);
    }
    (*(void (**)(char *, uint64_t))(v37 + 8))(v43, v35);
    int64_t v16 = v59;
    sub_251A1B064((uint64_t)v59, &qword_26B21F120);
    uint64_t result = sub_251A4ECF0(v26, (uint64_t)v16, &qword_26B21F120);
    uint64_t v12 = v58;
    int64_t v24 = v63;
  }
  uint64_t v33 = v24 + 5;
  if (v24 + 5 >= v56)
  {
LABEL_30:
    uint64_t v49 = sub_251F34DA0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v30, 1, 1, v49);
LABEL_31:
    swift_release();
    sub_251A4ECF0((uint64_t)v16, v51, &qword_26B21F120);
    return swift_bridgeObjectRelease();
  }
  unint64_t v31 = *(void *)(v55 + 8 * v33);
  if (v31)
  {
    int64_t v32 = v24 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v32 = v33 + 1;
    if (__OFADD__(v33, 1)) {
      break;
    }
    if (v32 >= v56) {
      goto LABEL_30;
    }
    unint64_t v31 = *(void *)(v55 + 8 * v32);
    ++v33;
    if (v31) {
      goto LABEL_23;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_251DE25A0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StaticMediaSystemComponent();
  uint64_t v37 = *(void *)(v2 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v36 = (uint64_t)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v35 = (uint64_t)&v31 - v5;
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t v32 = a1 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & v6;
  int64_t v33 = (unint64_t)(v7 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v11 = 0;
  uint64_t v38 = v2;
  unint64_t v39 = MEMORY[0x263F8EE78];
  uint64_t v34 = a1;
  while (v9)
  {
    uint64_t v42 = (v9 - 1) & v9;
    int64_t v43 = v11;
    unint64_t v12 = __clz(__rbit64(v9)) | (v11 << 6);
LABEL_23:
    uint64_t v17 = v35;
    sub_251DEE4CC(*(void *)(a1 + 56) + *(void *)(v37 + 72) * v12, v35, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent);
    uint64_t v18 = v36;
    sub_251DEE534(v17, v36, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent);
    uint64_t v19 = sub_251F34DA0();
    uint64_t v41 = &v31;
    uint64_t v20 = *(void *)(v19 - 8);
    uint64_t v21 = *(void *)(v20 + 64);
    MEMORY[0x270FA5388](v19);
    unint64_t v22 = (v21 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    uint64_t v40 = &v31;
    MEMORY[0x270FA5388](v23 - 8);
    uint64_t v25 = (char *)&v31 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_251A1B128(v18 + *(int *)(v38 + 32), (uint64_t)v25, &qword_26B21FF90);
    sub_251DEE59C(v18, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v25, 1, v19) == 1)
    {
      uint64_t result = sub_251A1B064((uint64_t)v25, &qword_26B21FF90);
      int64_t v11 = v43;
      a1 = v34;
      unint64_t v9 = v42;
    }
    else
    {
      uint64_t v26 = *(uint64_t (**)(char *, char *, uint64_t))(v20 + 32);
      uint64_t v27 = v26((char *)&v31 - v22, v25, v19);
      MEMORY[0x270FA5388](v27);
      v26((char *)&v31 - v22, (char *)&v31 - v22, v19);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v39 = sub_251F0F4DC(0, *(void *)(v39 + 16) + 1, 1, v39);
      }
      unint64_t v29 = *(void *)(v39 + 16);
      unint64_t v28 = *(void *)(v39 + 24);
      if (v29 >= v28 >> 1) {
        unint64_t v39 = sub_251F0F4DC(v28 > 1, v29 + 1, 1, v39);
      }
      unint64_t v30 = v39;
      *(void *)(v39 + 16) = v29 + 1;
      uint64_t result = v26((char *)(v30+ ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80))+ *(void *)(v20 + 72) * v29), (char *)&v31 - v22, v19);
      a1 = v34;
      int64_t v11 = v43;
      unint64_t v9 = v42;
    }
  }
  int64_t v13 = v11 + 1;
  if (__OFADD__(v11, 1))
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v13 >= v33) {
    goto LABEL_29;
  }
  unint64_t v14 = *(void *)(v32 + 8 * v13);
  int64_t v15 = v11 + 1;
  if (v14) {
    goto LABEL_22;
  }
  int64_t v15 = v11 + 2;
  if (v11 + 2 >= v33) {
    goto LABEL_29;
  }
  unint64_t v14 = *(void *)(v32 + 8 * v15);
  if (v14) {
    goto LABEL_22;
  }
  int64_t v15 = v11 + 3;
  if (v11 + 3 >= v33) {
    goto LABEL_29;
  }
  unint64_t v14 = *(void *)(v32 + 8 * v15);
  if (v14) {
    goto LABEL_22;
  }
  int64_t v15 = v11 + 4;
  if (v11 + 4 >= v33) {
    goto LABEL_29;
  }
  unint64_t v14 = *(void *)(v32 + 8 * v15);
  if (v14)
  {
LABEL_22:
    uint64_t v42 = (v14 - 1) & v14;
    int64_t v43 = v15;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    goto LABEL_23;
  }
  uint64_t v16 = v11 + 5;
  if (v11 + 5 >= v33)
  {
LABEL_29:
    swift_release();
    return v39;
  }
  unint64_t v14 = *(void *)(v32 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v11 + 5;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v33) {
      goto LABEL_29;
    }
    unint64_t v14 = *(void *)(v32 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_22;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_251DE2AAC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StaticMediaSystemComponent();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v21 - v7;
  uint64_t v24 = MEMORY[0x263F8EE78];
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v22 = a1 + 64;
  uint64_t v10 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & v9;
  int64_t v23 = (unint64_t)(v10 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v14 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v16 = v15 | (v14 << 6);
      goto LABEL_5;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v18 >= v23) {
      goto LABEL_23;
    }
    unint64_t v19 = *(void *)(v22 + 8 * v18);
    ++v14;
    if (!v19)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v23) {
        goto LABEL_23;
      }
      unint64_t v19 = *(void *)(v22 + 8 * v14);
      if (!v19)
      {
        int64_t v14 = v18 + 2;
        if (v18 + 2 >= v23) {
          goto LABEL_23;
        }
        unint64_t v19 = *(void *)(v22 + 8 * v14);
        if (!v19)
        {
          int64_t v14 = v18 + 3;
          if (v18 + 3 >= v23) {
            goto LABEL_23;
          }
          unint64_t v19 = *(void *)(v22 + 8 * v14);
          if (!v19) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_5:
    sub_251DEE4CC(*(void *)(a1 + 56) + *(void *)(v3 + 72) * v16, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent);
    sub_251DEE534((uint64_t)v8, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent);
    uint64_t v17 = *(void *)&v6[*(int *)(v2 + 28)];
    swift_bridgeObjectRetain();
    sub_251DEE59C((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent);
    uint64_t result = sub_251ED91D8(v17);
  }
  int64_t v20 = v18 + 4;
  if (v20 >= v23)
  {
LABEL_23:
    swift_release();
    return v24;
  }
  unint64_t v19 = *(void *)(v22 + 8 * v20);
  if (v19)
  {
    int64_t v14 = v20;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v14 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v14 >= v23) {
      goto LABEL_23;
    }
    unint64_t v19 = *(void *)(v22 + 8 * v14);
    ++v20;
    if (v19) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_251DE2D6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char a10, char a11, char a12, char a13, char a14, char a15, unsigned __int8 *a16, uint64_t a17, char *a18, uint64_t a19, uint64_t a20,unsigned __int8 *a21,uint64_t a22,uint64_t (*a23)(char *, uint64_t, uint64_t),uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  uint64_t v29 = v28;
  uint64_t v202 = a8;
  uint64_t v203 = a9;
  uint64_t v209 = a4;
  uint64_t v210 = a7;
  uint64_t v199 = a5;
  uint64_t v200 = a6;
  uint64_t v198 = a3;
  uint64_t v208 = a2;
  uint64_t v212 = a1;
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
  uint64_t v31 = MEMORY[0x270FA5388](v30 - 8);
  char v182 = (char *)&v176 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v31);
  uint64_t v213 = (uint64_t)&v176 - v33;
  uint64_t v34 = (int *)type metadata accessor for StaticMediaSystem();
  uint64_t v35 = MEMORY[0x270FA5388](v34);
  uint64_t v206 = (uint64_t)&v176 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  uint64_t v205 = (uint64_t)&v176 - v38;
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  unsigned int v185 = (char *)&v176 - v40;
  uint64_t v41 = MEMORY[0x270FA5388](v39);
  uint64_t v204 = (uint64_t)&v176 - v42;
  uint64_t v43 = MEMORY[0x270FA5388](v41);
  uint64_t v184 = (char *)&v176 - v44;
  uint64_t v45 = MEMORY[0x270FA5388](v43);
  uint64_t v183 = (char *)&v176 - v46;
  uint64_t v47 = MEMORY[0x270FA5388](v45);
  uint64_t v181 = (uint64_t)&v176 - v48;
  uint64_t v49 = MEMORY[0x270FA5388](v47);
  uint64_t v197 = (uint64_t *)((char *)&v176 - v50);
  uint64_t v51 = MEMORY[0x270FA5388](v49);
  uint64_t v191 = (uint64_t)&v176 - v52;
  uint64_t v53 = MEMORY[0x270FA5388](v51);
  uint64_t v190 = (uint64_t)&v176 - v54;
  uint64_t v55 = MEMORY[0x270FA5388](v53);
  uint64_t v207 = (char *)&v176 - v56;
  uint64_t v57 = MEMORY[0x270FA5388](v55);
  id v179 = (char *)&v176 - v58;
  uint64_t v59 = MEMORY[0x270FA5388](v57);
  uint64_t v189 = (uint64_t)&v176 - v60;
  uint64_t v61 = MEMORY[0x270FA5388](v59);
  uint64_t v188 = (uint64_t)&v176 - v62;
  uint64_t v63 = MEMORY[0x270FA5388](v61);
  uint64_t v178 = (char *)&v176 - v64;
  uint64_t v65 = MEMORY[0x270FA5388](v63);
  uint64_t v177 = (char *)&v176 - v66;
  uint64_t v67 = MEMORY[0x270FA5388](v65);
  uint64_t v186 = (uint64_t)&v176 - v68;
  uint64_t v69 = MEMORY[0x270FA5388](v67);
  uint64_t v201 = (char *)&v176 - v70;
  uint64_t v71 = MEMORY[0x270FA5388](v69);
  uint64_t v192 = (uint64_t)&v176 - v72;
  uint64_t v73 = MEMORY[0x270FA5388](v71);
  uint64_t v75 = (char *)&v176 - v74;
  uint64_t v76 = MEMORY[0x270FA5388](v73);
  uint64_t v78 = (char *)&v176 - v77;
  MEMORY[0x270FA5388](v76);
  uint64_t v80 = (char *)&v176 - v79;
  int v214 = *a16;
  int v180 = *a21;
  uint64_t v81 = sub_251F34DA0();
  uint64_t v82 = *(void *)(v81 - 8);
  MEMORY[0x270FA5388](v81);
  uint64_t v196 = v83;
  uint64_t v84 = (char *)&v176 - (((unint64_t)v83 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v85 - 8);
  uint64_t v193 = v86;
  int64_t v87 = (char *)&v176 - ((v86 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = v82;
  sub_251A1B128(v212, (uint64_t)v87, &qword_26B21FF90);
  sub_251DEE4CC(v29, (uint64_t)v80, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
  uint64_t v194 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v82 + 48);
  uint64_t v195 = v82 + 48;
  int v89 = v194(v87, 1, v81);
  uint64_t v212 = v81;
  uint64_t v187 = v84;
  if (v89 == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v84, v80, v81);
    sub_251DEE59C((uint64_t)v80, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
    sub_251A1B064((uint64_t)v87, &qword_26B21FF90);
  }
  else
  {
    sub_251DEE59C((uint64_t)v80, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
    (*(void (**)(char *, char *, uint64_t))(v82 + 32))(v84, v87, v81);
  }
  uint64_t v90 = v202;
  uint64_t v91 = v199;
  uint64_t v92 = (uint64_t)v200;
  uint64_t v93 = v198;
  sub_251DEE4CC(v29, (uint64_t)v78, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
  if (v93)
  {
    uint64_t v202 = (uint64_t)v93;
  }
  else
  {
    char v94 = &v78[v34[5]];
    uint64_t v95 = *((void *)v94 + 1);
    uint64_t v208 = *(void *)v94;
    uint64_t v202 = v95;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_251DEE59C((uint64_t)v78, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
  sub_251DEE4CC(v29, (uint64_t)v75, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
  uint64_t v211 = v88;
  if (v91)
  {
    uint64_t v199 = v91;
  }
  else
  {
    unint64_t v96 = &v75[v34[6]];
    uint64_t v97 = *((void *)v96 + 1);
    uint64_t v209 = *(void *)v96;
    uint64_t v199 = v97;
    swift_bridgeObjectRetain();
  }
  char v98 = v207;
  uint64_t v99 = (uint64_t)v201;
  swift_bridgeObjectRetain();
  sub_251DEE59C((uint64_t)v75, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
  uint64_t v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  uint64_t v201 = (char *)&v176;
  uint64_t v101 = MEMORY[0x270FA5388](v100 - 8);
  uint64_t v103 = (char *)&v176 - ((v102 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v200 = &v176;
  MEMORY[0x270FA5388](v101);
  id v105 = (char *)&v176 - v104;
  sub_251A1B128(v92, (uint64_t)&v176 - v104, &qword_26B21EC20);
  uint64_t v106 = v192;
  sub_251DEE4CC(v29, v192, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
  uint64_t v107 = sub_251F34D20();
  uint64_t v108 = *(void *)(v107 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v108 + 48))(v105, 1, v107) == 1)
  {
    sub_251A1B128(v106 + v34[7], (uint64_t)v103, &qword_26B21EC20);
    sub_251DEE59C(v106, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
    sub_251A1B064((uint64_t)v105, &qword_26B21EC20);
  }
  else
  {
    sub_251DEE59C(v106, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
    (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v103, v105, v107);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v108 + 56))(v103, 0, 1, v107);
  }
  uint64_t v109 = (uint64_t)v182;
  uint64_t v110 = (uint64_t)v179;
  uint64_t v111 = (uint64_t)v98;
  sub_251DEE4CC(v29, v99, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
  uint64_t v198 = v103;
  if (v90)
  {
    uint64_t v192 = v90;
  }
  else
  {
    unint64_t v112 = (uint64_t *)(v99 + v34[8]);
    uint64_t v113 = v112[1];
    uint64_t v210 = *v112;
    uint64_t v192 = v113;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_251DEE59C(v99, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
  uint64_t v114 = v186;
  sub_251DEE4CC(v29, v186, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
  if (a10 == 2) {
    int v115 = *(unsigned __int8 *)(v114 + v34[9]);
  }
  else {
    int v115 = a10 & 1;
  }
  LODWORD(v182) = v115;
  uint64_t v116 = (uint64_t)v178;
  uint64_t v117 = v114;
  uint64_t v118 = (uint64_t)v177;
  sub_251DEE59C(v117, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
  sub_251DEE4CC(v29, v118, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
  if (a11 == 2) {
    int v119 = *(unsigned __int8 *)(v118 + v34[10]);
  }
  else {
    int v119 = a11 & 1;
  }
  LODWORD(v186) = v119;
  sub_251DEE59C(v118, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
  sub_251DEE4CC(v29, v116, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
  if (a12 == 2) {
    int v120 = *(unsigned __int8 *)(v116 + v34[11]);
  }
  else {
    int v120 = a12 & 1;
  }
  LODWORD(v179) = v120;
  sub_251DEE59C(v116, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
  uint64_t v121 = v188;
  sub_251DEE4CC(v29, v188, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
  uint64_t v122 = v183;
  if (a13 == 2) {
    int v123 = *(unsigned __int8 *)(v121 + v34[12]);
  }
  else {
    int v123 = a13 & 1;
  }
  LODWORD(v178) = v123;
  sub_251DEE59C(v121, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
  uint64_t v124 = v189;
  sub_251DEE4CC(v29, v189, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
  if (a14 == 2) {
    int v125 = *(unsigned __int8 *)(v124 + v34[13]);
  }
  else {
    int v125 = a14 & 1;
  }
  LODWORD(v188) = v125;
  uint64_t v126 = v124;
  uint64_t v127 = (uint64_t)v122;
  sub_251DEE59C(v126, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
  sub_251DEE4CC(v29, v110, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
  if (a15 == 2) {
    int v128 = *(unsigned __int8 *)(v110 + v34[14]);
  }
  else {
    int v128 = a15 & 1;
  }
  LODWORD(v183) = v128;
  sub_251DEE59C(v110, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
  sub_251DEE4CC(v29, v111, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
  if (v214 == 6) {
    int v214 = *(unsigned __int8 *)(v111 + v34[15]);
  }
  sub_251DEE59C(v111, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
  uint64_t v130 = v190;
  sub_251DEE4CC(v29, v190, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
  uint64_t v207 = a18;
  if (!a18)
  {
    char v131 = (uint64_t *)(v130 + v34[16]);
    a17 = *v131;
    uint64_t v207 = (char *)v131[1];
    swift_bridgeObjectRetain();
  }
  uint64_t v189 = a17;
  swift_bridgeObjectRetain();
  sub_251DEE59C(v130, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
  uint64_t v132 = v191;
  sub_251DEE4CC(v29, v191, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
  uint64_t v133 = a19;
  if (!a19) {
    uint64_t v133 = swift_bridgeObjectRetain();
  }
  uint64_t v190 = v133;
  swift_bridgeObjectRetain();
  sub_251DEE59C(v132, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
  sub_251A1B128(a20, v109, &qword_26B21F120);
  uint64_t v134 = (uint64_t)v197;
  sub_251DEE4CC(v29, (uint64_t)v197, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
  uint64_t v135 = type metadata accessor for StaticSoftwareUpdate(0);
  uint64_t v136 = *(void *)(v135 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v136 + 48))(v109, 1, v135) == 1)
  {
    sub_251A1B128(v134 + v34[18], v213, &qword_26B21F120);
    sub_251DEE59C(v134, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
    sub_251A1B064(v109, &qword_26B21F120);
  }
  else
  {
    sub_251DEE59C(v134, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
    uint64_t v137 = v109;
    uint64_t v138 = v213;
    sub_251DEE534(v137, v213, type metadata accessor for StaticSoftwareUpdate);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v136 + 56))(v138, 0, 1, v135);
  }
  uint64_t v139 = v212;
  uint64_t v140 = (uint64_t)v184;
  uint64_t v141 = v181;
  int v142 = v180;
  sub_251DEE4CC(v29, v181, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
  if (v142 == 2) {
    int v143 = *(unsigned __int8 *)(v141 + v34[19]);
  }
  else {
    int v143 = v142 & 1;
  }
  LODWORD(v191) = v143;
  uint64_t v144 = sub_251DEE59C(v141, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
  uint64_t v197 = &v176;
  uint64_t v145 = MEMORY[0x270FA5388](v144);
  uint64_t v147 = (char *)&v176 - ((v146 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v196 = &v176;
  MEMORY[0x270FA5388](v145);
  uint64_t v149 = (char *)&v176 - ((v148 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1B128(a22, (uint64_t)v149, &qword_26B21FF90);
  sub_251DEE4CC(v29, v127, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
  if (v194(v149, 1, v139) == 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v211 + 16))(v147, v127 + v34[20], v139);
    sub_251DEE59C(v127, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
    sub_251A1B064((uint64_t)v149, &qword_26B21FF90);
  }
  else
  {
    sub_251DEE59C(v127, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
    (*(void (**)(char *, char *, uint64_t))(v211 + 32))(v147, v149, v139);
  }
  uint64_t v150 = (uint64_t)v185;
  sub_251DEE4CC(v29, v140, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
  if (a23)
  {
    uint64_t v194 = a23;
  }
  else
  {
    uint64_t v194 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v140 + v34[21]);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_251DEE59C(v140, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
  uint64_t v152 = v204;
  sub_251DEE4CC(v29, v204, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
  uint64_t v153 = a25;
  if (!a25)
  {
    uint64_t v154 = (uint64_t *)(v152 + v34[22]);
    a24 = *v154;
    uint64_t v153 = v154[1];
    swift_bridgeObjectRetain();
  }
  uint64_t v195 = a24;
  swift_bridgeObjectRetain();
  sub_251DEE59C(v152, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
  sub_251DEE4CC(v29, v150, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
  if (a26)
  {
    uint64_t v204 = a26;
  }
  else
  {
    uint64_t v204 = *(void *)(v150 + v34[23]);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_251DEE59C(v150, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
  uint64_t v155 = v205;
  sub_251DEE4CC(v29, v205, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
  uint64_t v156 = v153;
  if (a27)
  {
    uint64_t v157 = a27;
  }
  else
  {
    uint64_t v157 = *(void *)(v155 + v34[24]);
    swift_bridgeObjectRetain();
  }
  uint64_t v158 = v147;
  swift_bridgeObjectRetain();
  sub_251DEE59C(v155, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
  uint64_t v159 = v206;
  sub_251DEE4CC(v29, v206, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
  if (a28)
  {
    uint64_t v160 = a28;
  }
  else
  {
    uint64_t v160 = *(void *)(v159 + v34[25]);
    swift_bridgeObjectRetain();
  }
  uint64_t v161 = v187;
  swift_bridgeObjectRetain();
  sub_251DEE59C(v159, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
  uint64_t v162 = v212;
  uint64_t v163 = *(void (**)(uint64_t, char *, uint64_t))(v211 + 32);
  uint64_t v164 = v203;
  v163(v203, v161, v212);
  int v165 = (void *)(v164 + v34[5]);
  uint64_t v166 = v202;
  *int v165 = v208;
  v165[1] = v166;
  uint64_t v167 = (void *)(v164 + v34[6]);
  uint64_t v168 = (uint64_t)v198;
  uint64_t v169 = v199;
  void *v167 = v209;
  v167[1] = v169;
  sub_251A4ECF0(v168, v164 + v34[7], &qword_26B21EC20);
  uint64_t v170 = (void *)(v164 + v34[8]);
  uint64_t v171 = v192;
  void *v170 = v210;
  v170[1] = v171;
  *(unsigned char *)(v164 + v34[9]) = (_BYTE)v182;
  *(unsigned char *)(v164 + v34[10]) = v186;
  *(unsigned char *)(v164 + v34[11]) = (_BYTE)v179;
  *(unsigned char *)(v164 + v34[12]) = (_BYTE)v178;
  *(unsigned char *)(v164 + v34[13]) = v188;
  *(unsigned char *)(v164 + v34[14]) = (_BYTE)v183;
  *(unsigned char *)(v164 + v34[15]) = v214;
  uint64_t v172 = (void *)(v164 + v34[16]);
  uint64_t v173 = v207;
  *uint64_t v172 = v189;
  v172[1] = v173;
  *(void *)(v164 + v34[17]) = v190;
  sub_251A4ECF0(v213, v164 + v34[18], &qword_26B21F120);
  *(unsigned char *)(v164 + v34[19]) = v191;
  uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v163)(v164 + v34[20], v158, v162);
  *(void *)(v164 + v34[21]) = v194;
  char v175 = (void *)(v164 + v34[22]);
  *char v175 = v195;
  v175[1] = v156;
  *(void *)(v164 + v34[23]) = v204;
  *(void *)(v164 + v34[24]) = v157;
  *(void *)(v164 + v34[25]) = v160;
  return result;
}

BOOL StaticMediaSystem.isActivated.getter()
{
  return *(unsigned char *)(v0 + *(int *)(type metadata accessor for StaticMediaSystem() + 60)) == 1;
}

uint64_t type metadata accessor for StaticMediaSystem()
{
  uint64_t result = qword_26B220800;
  if (!qword_26B220800) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t StaticMediaSystem.staticMediaSystemComponents.getter()
{
  type metadata accessor for StaticMediaSystem();
  uint64_t v0 = swift_bridgeObjectRetain();
  return sub_251EDD4F8(v0);
}

uint64_t StaticMediaSystem.name.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for StaticMediaSystem() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticMediaSystem.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_251F34DA0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t StaticMediaSystem.category.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for StaticMediaSystem() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticMediaSystem.dateAdded.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for StaticMediaSystem();
  return sub_251A1B128(v1 + *(int *)(v3 + 28), a1, &qword_26B21EC20);
}

uint64_t StaticMediaSystem.iconSymbol.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for StaticMediaSystem() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticMediaSystem.isDoubleHigh.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticMediaSystem() + 36));
}

uint64_t StaticMediaSystem.isFavorite.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticMediaSystem() + 40));
}

uint64_t StaticMediaSystem.shouldShowInDashboard.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticMediaSystem() + 44));
}

uint64_t StaticMediaSystem.isCompatible.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticMediaSystem() + 48));
}

uint64_t StaticMediaSystem.isReachable.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticMediaSystem() + 52));
}

uint64_t StaticMediaSystem.hasValidSettings.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticMediaSystem() + 56));
}

uint64_t StaticMediaSystem.playbackState.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for StaticMediaSystem();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 60));
  return result;
}

uint64_t StaticMediaSystem.audioDestinationId.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for StaticMediaSystem() + 64));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticMediaSystem.symptoms.getter()
{
  type metadata accessor for StaticMediaSystem();
  return swift_bridgeObjectRetain();
}

uint64_t StaticMediaSystem.softwareUpdate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for StaticMediaSystem();
  return sub_251A1B128(v1 + *(int *)(v3 + 72), a1, &qword_26B21F120);
}

uint64_t StaticMediaSystem.homeNonResponsiveType.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for StaticMediaSystem();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 76));
  return result;
}

uint64_t StaticMediaSystem.homeId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for StaticMediaSystem() + 80);
  uint64_t v4 = sub_251F34DA0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t StaticMediaSystem.roomIds.getter()
{
  type metadata accessor for StaticMediaSystem();
  return swift_bridgeObjectRetain();
}

uint64_t StaticMediaSystem.roomName.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for StaticMediaSystem() + 88));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticMediaSystem.accessoryIds.getter()
{
  type metadata accessor for StaticMediaSystem();
  return swift_bridgeObjectRetain();
}

uint64_t StaticMediaSystem.deviceIds.getter()
{
  type metadata accessor for StaticMediaSystem();
  return swift_bridgeObjectRetain();
}

uint64_t StaticMediaSystem.staticMediaSystemComponentsDictionary.getter()
{
  type metadata accessor for StaticMediaSystem();
  return swift_bridgeObjectRetain();
}

uint64_t StaticMediaSystem.hash(into:)(long long *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for StaticSoftwareUpdate(0);
  uint64_t v28 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v27 = (uint64_t)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34DA0();
  v26[1] = sub_251DEE3E0((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA94D0]);
  sub_251F35610();
  uint64_t v9 = (int *)type metadata accessor for StaticMediaSystem();
  swift_bridgeObjectRetain();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  uint64_t v10 = v1 + v9[7];
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  MEMORY[0x270FA5388](v11 - 8);
  int64_t v13 = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1B128(v10, (uint64_t)v13, &qword_26B21EC20);
  uint64_t v14 = sub_251F34D20();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14);
  if (v16 == 1)
  {
    sub_251F36CC0();
  }
  else
  {
    v26[0] = v26;
    MEMORY[0x270FA5388](v16);
    int64_t v18 = (char *)v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v13, v14);
    sub_251F36CC0();
    sub_251DEE3E0(&qword_269B9CF80, MEMORY[0x270FA9180]);
    sub_251F35610();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  }
  swift_bridgeObjectRetain();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  sub_251F36CC0();
  sub_251F36CC0();
  sub_251F36CC0();
  sub_251F36CC0();
  sub_251F36CC0();
  sub_251F36CC0();
  if (*(unsigned char *)(v2 + v9[15]) == 6)
  {
    sub_251F36CC0();
  }
  else
  {
    sub_251F36CC0();
    sub_251F36CB0();
  }
  if (*(void *)(v2 + v9[16] + 8))
  {
    sub_251F36CC0();
    swift_bridgeObjectRetain();
    sub_251F357B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_251F36CC0();
  }
  uint64_t v19 = *(void *)(v2 + v9[17]);
  sub_251F36CC0();
  if (v19)
  {
    swift_bridgeObjectRetain();
    sub_251A54ED4(a1, v19);
    swift_bridgeObjectRelease();
  }
  uint64_t v20 = v27;
  sub_251A1B128(v2 + v9[18], v27, &qword_26B21F120);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v20, 1, v4) == 1)
  {
    sub_251F36CC0();
  }
  else
  {
    sub_251DEE534(v20, (uint64_t)v6, type metadata accessor for StaticSoftwareUpdate);
    sub_251F36CC0();
    sub_251F35610();
    StaticSoftwareUpdate.Kind.hash(into:)();
    sub_251DEE59C((uint64_t)v6, type metadata accessor for StaticSoftwareUpdate);
  }
  sub_251F36CB0();
  sub_251F35610();
  uint64_t v21 = *(void *)(v2 + v9[21]);
  swift_bridgeObjectRetain();
  sub_251A54708(a1, v21);
  swift_bridgeObjectRelease();
  if (*(void *)(v2 + v9[22] + 8))
  {
    sub_251F36CC0();
    swift_bridgeObjectRetain();
    sub_251F357B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_251F36CC0();
  }
  uint64_t v22 = *(void *)(v2 + v9[23]);
  swift_bridgeObjectRetain();
  sub_251A54708(a1, v22);
  swift_bridgeObjectRelease();
  uint64_t v23 = *(void *)(v2 + v9[24]);
  swift_bridgeObjectRetain();
  sub_251A551B8(a1, v23);
  swift_bridgeObjectRelease();
  uint64_t v24 = *(void *)(v2 + v9[25]);
  swift_bridgeObjectRetain();
  sub_251A47458((uint64_t)a1, v24);
  return swift_bridgeObjectRelease();
}

unint64_t sub_251DE4D10(char a1)
{
  unint64_t result = 25705;
  switch(a1)
  {
    case 1:
      unint64_t result = 1701667182;
      break;
    case 2:
      unint64_t result = 0x79726F6765746163;
      break;
    case 3:
      unint64_t result = 0x6564644165746164;
      break;
    case 4:
      unint64_t result = 0x626D79536E6F6369;
      break;
    case 5:
      unint64_t result = 0x656C62756F447369;
      break;
    case 6:
      unint64_t result = 0x69726F7661467369;
      break;
    case 7:
    case 15:
      unint64_t result = 0xD000000000000015;
      break;
    case 8:
      unint64_t result = 0x7461706D6F437369;
      break;
    case 9:
      unint64_t result = 0x6168636165527369;
      break;
    case 10:
      unint64_t result = 0xD000000000000010;
      break;
    case 11:
      unint64_t result = 0x6B63616279616C70;
      break;
    case 12:
      unint64_t result = 0xD000000000000012;
      break;
    case 13:
      unint64_t result = 0x736D6F74706D7973;
      break;
    case 14:
      unint64_t result = 0x6572617774666F73;
      break;
    case 16:
      unint64_t result = 0x6449656D6F68;
      break;
    case 17:
      unint64_t result = 0x7364496D6F6F72;
      break;
    case 18:
      unint64_t result = 0x656D614E6D6F6F72;
      break;
    case 19:
      unint64_t result = 0x726F737365636361;
      break;
    case 20:
      unint64_t result = 0x6449656369766564;
      break;
    case 21:
      unint64_t result = 0xD000000000000025;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_251DE4FD4()
{
  return sub_251DE4D10(*v0);
}

uint64_t sub_251DE4FDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251DEDAC8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251DE5004(uint64_t a1)
{
  unint64_t v2 = sub_251DE834C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251DE5040(uint64_t a1)
{
  unint64_t v2 = sub_251DE834C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticMediaSystem.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA39B8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251DE834C();
  sub_251F36DA0();
  LOBYTE(v12) = 0;
  sub_251F34DA0();
  sub_251DEE3E0(&qword_26B21E348, MEMORY[0x270FA94D0]);
  sub_251F36A20();
  if (!v2)
  {
    uint64_t v9 = type metadata accessor for StaticMediaSystem();
    LOBYTE(v12) = 1;
    sub_251F369D0();
    LOBYTE(v12) = 2;
    sub_251F369D0();
    uint64_t v11 = (int *)v9;
    LOBYTE(v12) = 3;
    sub_251F34D20();
    sub_251DEE3E0(&qword_269B9F590, MEMORY[0x270FA9180]);
    sub_251F36970();
    LOBYTE(v12) = 4;
    sub_251F369D0();
    LOBYTE(v12) = 5;
    sub_251F369E0();
    LOBYTE(v12) = 6;
    sub_251F369E0();
    LOBYTE(v12) = 7;
    sub_251F369E0();
    LOBYTE(v12) = 8;
    sub_251F369E0();
    LOBYTE(v12) = 9;
    sub_251F369E0();
    LOBYTE(v12) = 10;
    sub_251F369E0();
    LOBYTE(v12) = *(unsigned char *)(v3 + v11[15]);
    char v13 = 11;
    sub_251D4817C();
    sub_251F36970();
    LOBYTE(v12) = 12;
    sub_251F36910();
    uint64_t v12 = *(void *)(v3 + v11[17]);
    char v13 = 13;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2B98);
    sub_251D483A8(&qword_269BA2BA0, (void (*)(void))sub_251D48224);
    sub_251F36970();
    LOBYTE(v12) = 14;
    type metadata accessor for StaticSoftwareUpdate(0);
    sub_251DEA51C(&qword_269BA2BB0, (void (*)(uint64_t))type metadata accessor for StaticSoftwareUpdate);
    sub_251F36970();
    LOBYTE(v12) = *(unsigned char *)(v3 + v11[19]);
    char v13 = 15;
    sub_251C84AF4();
    sub_251F36A20();
    LOBYTE(v12) = 16;
    sub_251F36A20();
    uint64_t v12 = *(void *)(v3 + v11[21]);
    char v13 = 17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC40);
    sub_251DE84F8(&qword_269B9CC88, &qword_26B21E348);
    sub_251F36A20();
    LOBYTE(v12) = 18;
    sub_251F36910();
    uint64_t v12 = *(void *)(v3 + v11[23]);
    char v13 = 19;
    sub_251F36A20();
    uint64_t v12 = *(void *)(v3 + v11[24]);
    char v13 = 20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269BA39C8);
    sub_251DE83A0(&qword_269BA39D0, &qword_269BA2B80);
    sub_251F36A20();
    uint64_t v12 = *(void *)(v3 + v11[25]);
    char v13 = 21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269BA39D8);
    sub_251DE8434();
    sub_251F36A20();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t StaticMediaSystem.hashValue.getter()
{
  sub_251F36CA0();
  StaticMediaSystem.hash(into:)(v1);
  return sub_251F36D00();
}

uint64_t StaticMediaSystem.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA39F0);
  uint64_t v8 = *(void *)(v73 - 8);
  MEMORY[0x270FA5388](v73);
  uint64_t v10 = (char *)v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = (int *)type metadata accessor for StaticMediaSystem();
  MEMORY[0x270FA5388](v76);
  uint64_t v12 = (char *)v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  uint64_t v70 = (uint64_t)a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_251DE834C();
  uint64_t v72 = v10;
  sub_251F36D90();
  if (v2)
  {
    uint64_t v75 = v2;
    LODWORD(v73) = 0;
    unsigned int v18 = 0;
  }
  else
  {
    uint64_t v74 = (uint64_t)v7;
    uint64_t v69 = a2;
    uint64_t v71 = v8;
    uint64_t v14 = sub_251F34DA0();
    uint64_t v15 = *(void *)(v14 - 8);
    uint64_t v16 = *(void *)(v15 + 64);
    MEMORY[0x270FA5388](v14);
    LOBYTE(v77) = 0;
    uint64_t v17 = sub_251DEE3E0(&qword_269B9CC80, MEMORY[0x270FA94D0]);
    sub_251F36880();
    v68[3] = v17;
    v68[4] = v16;
    uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v31(v12, (char *)v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v14);
    LOBYTE(v77) = 1;
    uint64_t v32 = sub_251F36830();
    uint64_t v33 = v76;
    uint64_t v34 = (uint64_t *)&v12[v76[5]];
    *uint64_t v34 = v32;
    v34[1] = v35;
    LOBYTE(v77) = 2;
    uint64_t v36 = sub_251F36830();
    v68[1] = v15 + 32;
    uint64_t v37 = (uint64_t *)&v12[v33[6]];
    *uint64_t v37 = v36;
    v37[1] = v38;
    uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    v68[2] = v68;
    MEMORY[0x270FA5388](v39 - 8);
    uint64_t v41 = (char *)v68 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_251F34D20();
    LOBYTE(v77) = 3;
    sub_251DEE3E0(&qword_269B9DBE8, MEMORY[0x270FA9180]);
    sub_251F367D0();
    uint64_t v42 = v76;
    sub_251A4ECF0((uint64_t)v41, (uint64_t)&v12[v76[7]], &qword_26B21EC20);
    LOBYTE(v77) = 4;
    uint64_t v43 = sub_251F36830();
    uint64_t v44 = (uint64_t *)&v12[v42[8]];
    uint64_t *v44 = v43;
    v44[1] = v45;
    LOBYTE(v77) = 5;
    v12[v42[9]] = sub_251F36840() & 1;
    LOBYTE(v77) = 6;
    v12[v42[10]] = sub_251F36840() & 1;
    LOBYTE(v77) = 7;
    v12[v42[11]] = sub_251F36840() & 1;
    LOBYTE(v77) = 8;
    char v46 = sub_251F36840();
    uint64_t v75 = 0;
    v12[v42[12]] = v46 & 1;
    LOBYTE(v77) = 9;
    uint64_t v47 = v75;
    char v48 = sub_251F36840();
    uint64_t v75 = v47;
    if (v47) {
      goto LABEL_36;
    }
    v12[v76[13]] = v48 & 1;
    LOBYTE(v77) = 10;
    char v49 = sub_251F36840();
    uint64_t v75 = 0;
    v12[v76[14]] = v49 & 1;
    char v78 = 11;
    sub_251D48300();
    uint64_t v50 = v75;
    sub_251F367D0();
    uint64_t v75 = v50;
    if (v50)
    {
LABEL_36:
      (*(void (**)(char *, uint64_t))(v71 + 8))(v72, v73);
      LODWORD(v73) = 0;
      unsigned int v18 = 31;
    }
    else
    {
      v12[v76[15]] = v77;
      LOBYTE(v77) = 12;
      uint64_t v51 = sub_251F36790();
      uint64_t v75 = 0;
      uint64_t v53 = (uint64_t *)&v12[v76[16]];
      *uint64_t v53 = v51;
      v53[1] = v52;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2B98);
      char v78 = 13;
      sub_251D483A8(&qword_269BA2BD8, (void (*)(void))sub_251D48418);
      uint64_t v54 = v75;
      sub_251F367D0();
      uint64_t v75 = v54;
      if (v54)
      {
        (*(void (**)(char *, uint64_t))(v71 + 8))(v72, v73);
        LODWORD(v73) = 0;
        unsigned int v18 = 4127;
      }
      else
      {
        *(void *)&v12[v76[17]] = v77;
        type metadata accessor for StaticSoftwareUpdate(0);
        LOBYTE(v77) = 14;
        sub_251DEA51C(&qword_269BA2BE8, (void (*)(uint64_t))type metadata accessor for StaticSoftwareUpdate);
        uint64_t v55 = v75;
        sub_251F367D0();
        uint64_t v75 = v55;
        if (v55)
        {
          (*(void (**)(char *, uint64_t))(v71 + 8))(v72, v73);
          LODWORD(v73) = 0;
          unsigned int v18 = 12319;
        }
        else
        {
          sub_251A4ECF0(v74, (uint64_t)&v12[v76[18]], &qword_26B21F120);
          char v78 = 15;
          sub_251C84C30();
          uint64_t v56 = v75;
          uint64_t v57 = sub_251F36880();
          uint64_t v75 = v56;
          if (v56)
          {
            (*(void (**)(char *, uint64_t))(v71 + 8))(v72, v73);
            LODWORD(v73) = 0;
            unsigned int v18 = 28703;
          }
          else
          {
            v12[v76[19]] = v77;
            MEMORY[0x270FA5388](v57);
            uint64_t v59 = (char *)v68 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
            LOBYTE(v77) = 16;
            uint64_t v60 = v75;
            sub_251F36880();
            uint64_t v75 = v60;
            if (v60)
            {
              (*(void (**)(char *, uint64_t))(v71 + 8))(v72, v73);
              unsigned int v18 = 28703;
              LODWORD(v73) = 0;
            }
            else
            {
              v31(&v12[v76[20]], v59, v14);
              __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC40);
              char v78 = 17;
              sub_251DE84F8(&qword_269B9CC78, &qword_269B9CC80);
              uint64_t v61 = v75;
              sub_251F36880();
              uint64_t v75 = v61;
              if (!v61)
              {
                *(void *)&v12[v76[21]] = v77;
                LOBYTE(v77) = 18;
                uint64_t v62 = v75;
                uint64_t v63 = sub_251F36790();
                LODWORD(v74) = v62 == 0;
                uint64_t v75 = v62;
                if (v62)
                {
                  (*(void (**)(char *, uint64_t))(v71 + 8))(v72, v73);
                  LODWORD(v71) = 0;
                  LODWORD(v72) = 0;
                }
                else
                {
                  uint64_t v65 = (uint64_t *)&v12[v76[22]];
                  *uint64_t v65 = v63;
                  v65[1] = v64;
                  char v78 = 19;
                  sub_251F36880();
                  uint64_t v75 = 0;
                  *(void *)&v12[v76[23]] = v77;
                  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA39C8);
                  char v78 = 20;
                  sub_251DE83A0(&qword_269BA39F8, &qword_269BA2BC0);
                  uint64_t v66 = v75;
                  sub_251F36880();
                  uint64_t v75 = v66;
                  if (v66)
                  {
                    (*(void (**)(char *, uint64_t))(v71 + 8))(v72, v73);
                    LODWORD(v72) = 0;
                    LODWORD(v71) = 1;
                  }
                  else
                  {
                    *(void *)&v12[v76[24]] = v77;
                    __swift_instantiateConcreteTypeFromMangledName(&qword_269BA39D8);
                    char v78 = 21;
                    sub_251DE8580();
                    uint64_t v67 = v75;
                    sub_251F36880();
                    uint64_t v75 = v67;
                    if (!v67)
                    {
                      (*(void (**)(char *, uint64_t))(v71 + 8))(v72, v73);
                      *(void *)&v12[v76[25]] = v77;
                      sub_251DEE4CC((uint64_t)v12, v69, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
                      __swift_destroy_boxed_opaque_existential_0(v70);
                      return sub_251DEE59C((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
                    }
                    (*(void (**)(char *, uint64_t))(v71 + 8))(v72, v73);
                    LODWORD(v71) = 1;
                    LODWORD(v72) = 1;
                  }
                }
                __swift_destroy_boxed_opaque_existential_0(v70);
                LOBYTE(v29) = 1;
                int v21 = 1;
                int v22 = 1;
                int v23 = 1;
                int v24 = 1;
                int v25 = 1;
                int v26 = 1;
                LODWORD(v73) = 1;
                LODWORD(v70) = 1;
                uint64_t v19 = v76;
                goto LABEL_19;
              }
              (*(void (**)(char *, uint64_t))(v71 + 8))(v72, v73);
              unsigned int v18 = 94239;
              LODWORD(v73) = 1;
            }
          }
        }
      }
    }
  }
  uint64_t v19 = v76;
  uint64_t result = __swift_destroy_boxed_opaque_existential_0(v70);
  int v21 = (v18 >> 2) & 1;
  int v22 = (v18 >> 3) & 1;
  int v23 = (v18 >> 4) & 1;
  int v24 = (v18 >> 12) & 1;
  int v25 = (v18 >> 13) & 1;
  int v26 = (v18 >> 14) & 1;
  if ((v18 & 1) == 0)
  {
    LODWORD(v72) = 0;
    LODWORD(v71) = 0;
    LODWORD(v74) = 0;
    LODWORD(v70) = 0;
    if ((v18 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_20;
  }
  LODWORD(v70) = 0;
  LODWORD(v74) = 0;
  LODWORD(v71) = 0;
  LODWORD(v72) = 0;
  int v29 = (v18 >> 1) & 1;
LABEL_19:
  uint64_t v30 = sub_251F34DA0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v30 - 8) + 8))(v12, v30);
  if ((v29 & 1) == 0)
  {
LABEL_6:
    if (v21) {
      goto LABEL_7;
    }
    goto LABEL_21;
  }
LABEL_20:
  uint64_t result = swift_bridgeObjectRelease();
  if (v21)
  {
LABEL_7:
    uint64_t result = swift_bridgeObjectRelease();
    if ((v22 & 1) == 0) {
      goto LABEL_8;
    }
    goto LABEL_22;
  }
LABEL_21:
  if (!v22)
  {
LABEL_8:
    if (v23) {
      goto LABEL_9;
    }
    goto LABEL_23;
  }
LABEL_22:
  uint64_t result = sub_251A1B064((uint64_t)&v12[v19[7]], &qword_26B21EC20);
  if (v23)
  {
LABEL_9:
    uint64_t result = swift_bridgeObjectRelease();
    if ((v24 & 1) == 0) {
      goto LABEL_10;
    }
    goto LABEL_24;
  }
LABEL_23:
  if (!v24)
  {
LABEL_10:
    if (v25) {
      goto LABEL_11;
    }
    goto LABEL_25;
  }
LABEL_24:
  uint64_t result = swift_bridgeObjectRelease();
  if (v25)
  {
LABEL_11:
    uint64_t result = swift_bridgeObjectRelease();
    if ((v26 & 1) == 0) {
      goto LABEL_12;
    }
    goto LABEL_26;
  }
LABEL_25:
  if (!v26)
  {
LABEL_12:
    if (v73) {
      goto LABEL_13;
    }
    goto LABEL_27;
  }
LABEL_26:
  uint64_t result = sub_251A1B064((uint64_t)&v12[v19[18]], &qword_26B21F120);
  if (v73)
  {
LABEL_13:
    uint64_t v27 = &v12[v19[20]];
    uint64_t v28 = sub_251F34DA0();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v28 - 8) + 8))(v27, v28);
    if ((v70 & 1) == 0) {
      goto LABEL_14;
    }
    goto LABEL_28;
  }
LABEL_27:
  if (!v70)
  {
LABEL_14:
    if (v74) {
      goto LABEL_15;
    }
    goto LABEL_29;
  }
LABEL_28:
  uint64_t result = swift_bridgeObjectRelease();
  if (v74)
  {
LABEL_15:
    uint64_t result = swift_bridgeObjectRelease();
    if ((v71 & 1) == 0) {
      goto LABEL_16;
    }
LABEL_30:
    uint64_t result = swift_bridgeObjectRelease();
    if ((v72 & 1) == 0) {
      return result;
    }
    return swift_bridgeObjectRelease();
  }
LABEL_29:
  if (v71) {
    goto LABEL_30;
  }
LABEL_16:
  if (!v72) {
    return result;
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_251DE6628()
{
  sub_251F36CA0();
  StaticMediaSystem.hash(into:)(v1);
  return sub_251F36D00();
}

uint64_t sub_251DE666C()
{
  sub_251F36CA0();
  StaticMediaSystem.hash(into:)(v1);
  return sub_251F36D00();
}

uint64_t sub_251DE66A8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticMediaSystem.init(from:)(a1, a2);
}

uint64_t sub_251DE66C0(void *a1)
{
  return StaticMediaSystem.encode(to:)(a1);
}

uint64_t StaticMediaSystem.tileIcon.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for StaticMediaSystem();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251DEE4CC(v1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
  return Icon.init(staticMediaSystem:)((uint64_t)v5, a1);
}

uint64_t StaticMediaSystem.foregroundColor.getter()
{
  return sub_251F35370();
}

void StaticMediaSystem.primaryServiceKind.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t StaticMediaSystem.tileStatusString.getter()
{
  uint64_t v1 = (int *)type metadata accessor for StaticMediaSystem();
  uint64_t v2 = MEMORY[0x270FA5388](v1);
  uint64_t v4 = &v17[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = 0;
  uint64_t v6 = 0;
  if ((*(unsigned char *)(v0 + *(int *)(v2 + 52)) & 1) == 0)
  {
    if (*(unsigned char *)(v0 + v1[19]))
    {
      uint64_t v7 = 0xD00000000000001FLL;
      uint64_t v8 = 0x8000000251F6D360;
    }
    else
    {
      uint64_t v8 = 0x8000000251F6D380;
      uint64_t v7 = 0xD00000000000001ELL;
    }
    uint64_t v5 = static String.hfLocalized(_:)(v7, v8);
    uint64_t v6 = v9;
  }
  char v10 = *(unsigned char *)(v0 + v1[14]);
  if (*(unsigned char *)(v0 + v1[15]) == 6)
  {
    uint64_t v11 = 0;
  }
  else
  {
    v17[15] = *(unsigned char *)(v0 + v1[15]);
    uint64_t v11 = sub_251A84814();
  }
  uint64_t v12 = sub_251C4862C(v0 + v1[18], 0);
  uint64_t v14 = v13;
  sub_251DEE4CC(v0, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
  if (!v14)
  {
    uint64_t v12 = _s13HomeDataModel12SymptomErrorO12statusString4with21isForAccessoryControlSSSgShyACGSg_SbtFZ_0(*(void *)&v4[v1[17]], 0);
    uint64_t v14 = v15;
  }
  sub_251DEE59C((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
  if (v10)
  {
    if (v6)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v14) {
        return v12;
      }
      else {
        return v11;
      }
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v5 = static String.hfLocalized(_:)(0xD00000000000002ALL, 0x8000000251F70F00);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  return v5;
}

uint64_t StaticMediaSystem.canBeToggled.getter()
{
  return 0;
}

uint64_t StaticMediaSystem.toggle()(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return MEMORY[0x270FA2498](sub_251AC2104, 0, 0);
}

uint64_t sub_251DE6A1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_251A1B128(v2 + *(int *)(a1 + 28), a2, &qword_26B21EC20);
}

uint64_t sub_251DE6A48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  MEMORY[0x270FA5388](a1 - 8);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251DEE4CC(v2, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
  return Icon.init(staticMediaSystem:)((uint64_t)v5, a2);
}

uint64_t sub_251DE6ADC(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 36));
}

uint64_t sub_251DE6AE8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_251DE6AF4(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 88));
  swift_bridgeObjectRetain();
  return v2;
}

BOOL sub_251DE6B2C(uint64_t a1)
{
  return *(unsigned char *)(v1 + *(int *)(a1 + 60)) == 1;
}

uint64_t sub_251DE6B40(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 52));
}

unint64_t sub_251DE6B50()
{
  return 0xD000000000000011;
}

uint64_t StaticMediaSystem.mediaSystem.getter()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_251DE6B90, 0, 0);
}

uint64_t sub_251DE6B90()
{
  *(void *)(v0 + 24) = sub_251F35C80();
  *(void *)(v0 + 32) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251DE6C28, v2, v1);
}

uint64_t sub_251DE6C28()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251DE6CC0, 0, 0);
}

uint64_t sub_251DE6CC0()
{
  *(void *)(v0 + 40) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251DE6D4C, v2, v1);
}

uint64_t sub_251DE6D4C()
{
  swift_release();
  *(void *)(v0 + 48) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251DE6DC0, 0, 0);
}

uint64_t sub_251DE6DC0()
{
  *(void *)(v0 + 56) = sub_251F34D50();
  *(void *)(v0 + 64) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251DE6E54, v2, v1);
}

uint64_t sub_251DE6E54()
{
  uint64_t v1 = (void *)v0[7];
  uint64_t v2 = (void *)v0[6];
  swift_release();
  id v3 = objc_msgSend(v2, sel_mediaSystemFor_, v1);

  uint64_t v4 = (uint64_t (*)(id))v0[1];
  return v4(v3);
}

uint64_t StaticMediaSystem.accessoryControlStatusString.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = (int *)type metadata accessor for StaticMediaSystem();
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  if ((*(unsigned char *)(v0 + *(int *)(v3 + 52)) & 1) == 0)
  {
    if (*(unsigned char *)(v0 + v2[19]))
    {
      uint64_t v8 = 0xD00000000000001FLL;
      uint64_t v9 = 0x8000000251F6D360;
    }
    else
    {
      uint64_t v9 = 0x8000000251F6D380;
      uint64_t v8 = 0xD00000000000001ELL;
    }
    uint64_t v6 = static String.hfLocalized(_:)(v8, v9);
    uint64_t v7 = v10;
  }
  char v11 = *(unsigned char *)(v0 + v2[14]);
  if (*(unsigned char *)(v0 + v2[15]) == 6)
  {
    uint64_t v12 = 0;
    uint64_t v13 = 0;
  }
  else
  {
    LOBYTE(v22) = *(unsigned char *)(v0 + v2[15]);
    uint64_t v12 = sub_251A84814();
    uint64_t v13 = v14;
  }
  uint64_t v15 = sub_251C4862C(v1 + v2[18], 1);
  uint64_t v17 = v16;
  sub_251DEE4CC(v1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
  if (!v17)
  {
    uint64_t v15 = _s13HomeDataModel12SymptomErrorO12statusString4with21isForAccessoryControlSSSgShyACGSg_SbtFZ_0(*(void *)&v5[v2[17]], 1);
    uint64_t v17 = v18;
  }
  sub_251DEE59C((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
  uint64_t v22 = v6;
  uint64_t v23 = v7;
  __int16 v24 = 0;
  char v25 = v11 ^ 1;
  uint64_t v26 = v12;
  uint64_t v27 = v13;
  uint64_t v28 = v15;
  uint64_t v29 = v17;
  uint64_t v19 = sub_251D3D2E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v19;
}

unint64_t StaticMediaSystem.tileStatusStringIconSymbolSuffix.getter()
{
  uint64_t v1 = (int *)type metadata accessor for StaticMediaSystem();
  uint64_t v2 = v0 + v1[18];
  uint64_t v3 = *(void *)(v0 + v1[17]);
  char v4 = *(unsigned char *)(v0 + v1[13]);
  return sub_251D4A07C(v4, v2, v3);
}

uint64_t StaticMediaSystem.hasDetailAttentionMessages.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for StaticMediaSystem();
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = 1;
  sub_251C4862C(v1 + *(int *)(v3 + 72), 1);
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();
  sub_251DEE4CC(v1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
  if (!v8)
  {
    _s13HomeDataModel12SymptomErrorO12statusString4with21isForAccessoryControlSSSgShyACGSg_SbtFZ_0(*(void *)&v5[*(int *)(v2 + 68)], 1);
    if (v9) {
      swift_bridgeObjectRelease();
    }
    else {
      uint64_t v6 = 0;
    }
  }
  sub_251DEE59C((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
  return v6;
}

uint64_t sub_251DE7210@<X0>(void *a1@<X0>, void *a2@<X1>, unsigned __int8 *a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  char v78 = (char *)v77 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v79 = (uint64_t)v77 - v15;
  int v80 = *a3;
  char v83 = v80;
  id v81 = a2;
  uint64_t v16 = sub_251A8B7D4(a1, a4, a2, &v83, a5);
  swift_bridgeObjectRelease();
  uint64_t v17 = swift_bridgeObjectRetain();
  uint64_t v18 = sub_251DE25A0(v17);
  v77[1] = 0;
  swift_bridgeObjectRelease();
  uint64_t v82 = sub_251EE04F8(v18);
  swift_bridgeObjectRelease();
  id v19 = objc_msgSend(a1, sel_uniqueIdentifier);
  sub_251F34D80();

  id v20 = objc_msgSend(a1, sel_configuredName);
  uint64_t v21 = sub_251F356F0();
  unint64_t v23 = v22;

  swift_bridgeObjectRelease();
  uint64_t v24 = HIBYTE(v23) & 0xF;
  if ((v23 & 0x2000000000000000) == 0) {
    uint64_t v24 = v21 & 0xFFFFFFFFFFFFLL;
  }
  if (v24)
  {
    id v25 = objc_msgSend(a1, sel_configuredName);
  }
  else
  {
    id v30 = objc_msgSend(a1, sel_category);
    id v31 = objc_msgSend(v30, sel_categoryType);

    uint64_t v32 = sub_251F356F0();
    uint64_t v34 = v33;

    uint64_t v27 = sub_251D47B58(v32, v34);
    uint64_t v29 = v35;
    swift_bridgeObjectRelease();
    if (v29) {
      goto LABEL_7;
    }
    id v25 = objc_msgSend(a1, sel_name);
  }
  id v26 = v25;
  uint64_t v27 = sub_251F356F0();
  uint64_t v29 = v28;

LABEL_7:
  uint64_t v36 = (int *)type metadata accessor for StaticMediaSystem();
  uint64_t v37 = (uint64_t *)(a6 + v36[5]);
  *uint64_t v37 = v27;
  v37[1] = v29;
  id v38 = objc_msgSend(a1, sel_category);
  id v39 = objc_msgSend(v38, (SEL)&selRef_snapshotControl + 6);

  uint64_t v40 = sub_251F356F0();
  uint64_t v42 = v41;

  uint64_t v43 = (uint64_t *)(a6 + v36[6]);
  *uint64_t v43 = v40;
  v43[1] = v42;
  HMMediaSystem.dateAdded.getter(a6 + v36[7]);
  swift_bridgeObjectRetain();
  uint64_t v44 = sub_251DE8644(v82, (uint64_t)a4);
  swift_bridgeObjectRelease();
  uint64_t v45 = _s13HomeDataModel18StaticMediaProfileV10iconSymbol3forSSSayAA0D9AccessoryV07SpecialE8CategoryOG_tFZ_0(v44);
  uint64_t v47 = v46;
  swift_bridgeObjectRelease();
  char v48 = (uint64_t *)(a6 + v36[8]);
  uint64_t *v48 = v45;
  v48[1] = v47;
  *(unsigned char *)(a6 + v36[9]) = sub_251AC52D0() & 1;
  *(unsigned char *)(a6 + v36[10]) = HMMediaSystem.isFavorite.getter() & 1;
  *(unsigned char *)(a6 + v36[11]) = HMMediaSystem.shouldShowInDashboard.getter() & 1;
  *(unsigned char *)(a6 + v36[12]) = objc_msgSend(a1, sel_isCompatible);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  LOBYTE(v44) = sub_251DE8B60(1, v16, (uint64_t)a4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a6 + v36[13]) = v44 & 1;
  id v49 = objc_msgSend(a1, sel_settings);
  if (v49
    && (uint64_t v50 = v49, v51 = objc_msgSend(v49, sel_rootGroup), v50, v51))
  {

    char v52 = 1;
  }
  else
  {
    char v52 = 0;
  }
  *(unsigned char *)(a6 + v36[14]) = v52;
  id v53 = objc_msgSend(v81, sel_uniqueIdentifier);
  sub_251F34D80();

  uint64_t v54 = swift_bridgeObjectRetain();
  uint64_t v55 = sub_251DE2AAC(v54);
  swift_bridgeObjectRelease();
  uint64_t v56 = sub_251EE04F8(v55);
  swift_bridgeObjectRelease();
  if (*(void *)(v56 + 16) == 1)
  {
    uint64_t v57 = swift_bridgeObjectRetain();
    uint64_t v58 = (void *)sub_251DE1BB0(v57);
    swift_bridgeObjectRelease();
    if (v58[2])
    {
      uint64_t v60 = v58[4];
      uint64_t v59 = v58[5];
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v60 = 0;
      uint64_t v59 = 0;
    }
    swift_bridgeObjectRelease();
    uint64_t v62 = (void *)(a6 + v36[22]);
    *uint64_t v62 = v60;
    v62[1] = v59;
  }
  else
  {
    uint64_t v61 = (void *)(a6 + v36[22]);
    *uint64_t v61 = 0;
    v61[1] = 0;
  }
  *(void *)(a6 + v36[21]) = v56;
  *(void *)(a6 + v36[23]) = v82;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v63 = sub_251DE8F0C(MEMORY[0x263F8EE88], v16, (uint64_t)a4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(a6 + v36[24]) = v63;
  *(void *)(a6 + v36[25]) = v16;
  id v64 = a1;
  StaticMediaSystemComponent.PlaybackState.init(from:)(v64, &v83);
  *(unsigned char *)(a6 + v36[15]) = v83;
  id v65 = objc_msgSend(v64, sel_audioDestinationIdentifier);
  if (v65)
  {
    uint64_t v66 = v65;
    uint64_t v67 = sub_251F356F0();
    uint64_t v69 = v68;
  }
  else
  {
    uint64_t v67 = 0;
    uint64_t v69 = 0;
  }
  uint64_t v70 = (uint64_t *)(a6 + v36[16]);
  *uint64_t v70 = v67;
  v70[1] = v69;
  swift_bridgeObjectRetain();
  uint64_t v71 = v82;
  uint64_t v72 = sub_251DE93F0(MEMORY[0x263F8EE88], v82, (uint64_t)a4);
  swift_bridgeObjectRelease();
  *(void *)(a6 + v36[17]) = v72;
  uint64_t v73 = type metadata accessor for StaticSoftwareUpdate(0);
  uint64_t v74 = (uint64_t)v78;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v73 - 8) + 56))(v78, 1, 1, v73);
  swift_bridgeObjectRetain();
  uint64_t v75 = v79;
  sub_251DE1F50(v74, v71, (uint64_t)a4, v79);

  sub_251A1B064(v74, &qword_26B21F120);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = sub_251A4ECF0(v75, a6 + v36[18], &qword_26B21F120);
  *(unsigned char *)(a6 + v36[19]) = v80;
  return result;
}

uint64_t _s13HomeDataModel17StaticMediaSystemV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticSoftwareUpdate(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v99 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F128);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v99 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)v99 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)v99 - v16;
  MEMORY[0x270FA5388](v15);
  id v19 = (char *)v99 - v18;
  if ((sub_251F34D70() & 1) == 0) {
    goto LABEL_26;
  }
  uint64_t v110 = v8;
  id v20 = (int *)type metadata accessor for StaticMediaSystem();
  uint64_t v21 = v20[5];
  uint64_t v22 = *(void *)(a1 + v21);
  uint64_t v23 = *(void *)(a1 + v21 + 8);
  uint64_t v24 = (void *)(a2 + v21);
  if (v22 != *v24 || v23 != v24[1])
  {
    char v26 = sub_251F36B10();
    char v27 = 0;
    if ((v26 & 1) == 0) {
      return v27 & 1;
    }
  }
  uint64_t v28 = v20[6];
  uint64_t v29 = *(void *)(a1 + v28);
  uint64_t v30 = *(void *)(a1 + v28 + 8);
  id v31 = (void *)(a2 + v28);
  if (v29 != *v31 || v30 != v31[1])
  {
    char v32 = sub_251F36B10();
    char v27 = 0;
    if ((v32 & 1) == 0) {
      return v27 & 1;
    }
  }
  uint64_t v103 = v17;
  uint64_t v104 = v19;
  uint64_t v100 = v7;
  uint64_t v101 = v5;
  uint64_t v108 = v14;
  uint64_t v109 = v10;
  uint64_t v102 = v4;
  uint64_t v33 = v20[7];
  uint64_t v106 = a1;
  uint64_t v34 = a1 + v33;
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  uint64_t v113 = v99;
  uint64_t v36 = *(void *)(*(void *)(v35 - 8) + 64);
  MEMORY[0x270FA5388](v35 - 8);
  unint64_t v37 = (v36 + 15) & 0xFFFFFFFFFFFFFFF0;
  id v38 = (char *)v99 - v37;
  sub_251A1B128(v34, (uint64_t)v99 - v37, &qword_26B21EC20);
  unint64_t v112 = v99;
  id v105 = v20;
  uint64_t v39 = v20[7];
  uint64_t v107 = a2;
  uint64_t v40 = MEMORY[0x270FA5388](a2 + v39);
  uint64_t v41 = (char *)v99 - v37;
  sub_251A1B128(v40, (uint64_t)v99 - v37, &qword_26B21EC20);
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EFF8);
  uint64_t v111 = v99;
  uint64_t v43 = MEMORY[0x270FA5388](v42 - 8);
  uint64_t v45 = (char *)v99 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = (uint64_t)&v45[*(int *)(v43 + 56)];
  sub_251A1B128((uint64_t)v99 - v37, (uint64_t)v45, &qword_26B21EC20);
  sub_251A1B128((uint64_t)v99 - v37, v46, &qword_26B21EC20);
  uint64_t v47 = sub_251F34D20();
  uint64_t v48 = *(void *)(v47 - 8);
  id v49 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v48 + 48);
  uint64_t v50 = v49(v45, 1, v47);
  if (v50 == 1)
  {
    sub_251A1B064((uint64_t)v99 - v37, &qword_26B21EC20);
    sub_251A1B064((uint64_t)v99 - v37, &qword_26B21EC20);
    if (v49((char *)v46, 1, v47) == 1)
    {
      sub_251A1B064((uint64_t)v45, &qword_26B21EC20);
      goto LABEL_17;
    }
LABEL_15:
    sub_251A1B064((uint64_t)v45, &qword_26B21EFF8);
    goto LABEL_26;
  }
  v99[1] = v99;
  MEMORY[0x270FA5388](v50);
  id v51 = (char *)v99 - v37;
  sub_251A1B128((uint64_t)v45, (uint64_t)v99 - v37, &qword_26B21EC20);
  uint64_t v52 = v49((char *)v46, 1, v47);
  if (v52 == 1)
  {
    sub_251A1B064((uint64_t)v99 - v37, &qword_26B21EC20);
    sub_251A1B064((uint64_t)v99 - v37, &qword_26B21EC20);
    (*(void (**)(char *, uint64_t))(v48 + 8))((char *)v99 - v37, v47);
    goto LABEL_15;
  }
  MEMORY[0x270FA5388](v52);
  uint64_t v54 = (char *)v99 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v48 + 32))(v54, v46, v47);
  sub_251DEE3E0((unint64_t *)&qword_269B9F5C0, MEMORY[0x270FA9180]);
  char v55 = sub_251F35650();
  uint64_t v56 = *(void (**)(char *, uint64_t))(v48 + 8);
  v56(v54, v47);
  sub_251A1B064((uint64_t)v41, &qword_26B21EC20);
  sub_251A1B064((uint64_t)v38, &qword_26B21EC20);
  v56(v51, v47);
  sub_251A1B064((uint64_t)v45, &qword_26B21EC20);
  if ((v55 & 1) == 0) {
    goto LABEL_26;
  }
LABEL_17:
  uint64_t v58 = v105;
  uint64_t v57 = v106;
  uint64_t v59 = v105[8];
  uint64_t v60 = *(void *)(v106 + v59);
  uint64_t v61 = *(void *)(v106 + v59 + 8);
  uint64_t v62 = v107;
  uint64_t v63 = (uint64_t)v108;
  id v64 = (void *)(v107 + v59);
  uint64_t v65 = (uint64_t)v109;
  uint64_t v67 = v101;
  uint64_t v66 = v102;
  uint64_t v69 = (uint64_t)v103;
  uint64_t v68 = (uint64_t)v104;
  if (v60 != *v64 || v61 != v64[1])
  {
    char v70 = sub_251F36B10();
    char v27 = 0;
    if ((v70 & 1) == 0) {
      return v27 & 1;
    }
  }
  if (*(unsigned __int8 *)(v57 + v58[9]) != *(unsigned __int8 *)(v62 + v58[9])
    || *(unsigned __int8 *)(v57 + v58[10]) != *(unsigned __int8 *)(v62 + v58[10])
    || *(unsigned __int8 *)(v57 + v58[11]) != *(unsigned __int8 *)(v62 + v58[11])
    || *(unsigned __int8 *)(v57 + v58[12]) != *(unsigned __int8 *)(v62 + v58[12])
    || *(unsigned __int8 *)(v57 + v58[13]) != *(unsigned __int8 *)(v62 + v58[13])
    || *(unsigned __int8 *)(v57 + v58[14]) != *(unsigned __int8 *)(v62 + v58[14]))
  {
    goto LABEL_26;
  }
  uint64_t v72 = v58[15];
  int v73 = *(unsigned __int8 *)(v57 + v72);
  int v74 = *(unsigned __int8 *)(v62 + v72);
  if (v73 == 6)
  {
    if (v74 != 6) {
      goto LABEL_26;
    }
  }
  else
  {
    char v27 = 0;
    if (v74 == 6 || v73 != v74) {
      return v27 & 1;
    }
  }
  uint64_t v75 = v58[16];
  uint64_t v76 = (void *)(v57 + v75);
  uint64_t v77 = *(void *)(v57 + v75 + 8);
  char v78 = (void *)(v62 + v75);
  uint64_t v79 = v78[1];
  if (v77)
  {
    if (!v79) {
      goto LABEL_26;
    }
    if (*v76 != *v78 || v77 != v79)
    {
      char v80 = sub_251F36B10();
      char v27 = 0;
      if ((v80 & 1) == 0) {
        return v27 & 1;
      }
    }
  }
  else if (v79)
  {
    goto LABEL_26;
  }
  uint64_t v81 = v58[17];
  uint64_t v82 = *(void *)(v62 + v81);
  if (*(void *)(v57 + v81))
  {
    if (!v82 || (sub_251B05984() & 1) == 0) {
      goto LABEL_26;
    }
  }
  else if (v82)
  {
    goto LABEL_26;
  }
  sub_251A1B128(v57 + v58[18], v68, &qword_26B21F120);
  sub_251A1B128(v62 + v58[18], v69, &qword_26B21F120);
  uint64_t v83 = v65 + *(int *)(v110 + 48);
  sub_251A1B128(v68, v65, &qword_26B21F120);
  sub_251A1B128(v69, v83, &qword_26B21F120);
  uint64_t v84 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v67 + 48);
  if (v84(v65, 1, v66) == 1)
  {
    sub_251A1B064(v69, &qword_26B21F120);
    sub_251A1B064(v68, &qword_26B21F120);
    if (v84(v83, 1, v66) == 1)
    {
      sub_251A1B064((uint64_t)v109, &qword_26B21F120);
      goto LABEL_53;
    }
    goto LABEL_50;
  }
  sub_251A1B128(v65, v63, &qword_26B21F120);
  if (v84(v83, 1, v66) == 1)
  {
    sub_251A1B064((uint64_t)v103, &qword_26B21F120);
    sub_251A1B064((uint64_t)v104, &qword_26B21F120);
    sub_251DEE59C((uint64_t)v108, type metadata accessor for StaticSoftwareUpdate);
LABEL_50:
    uint64_t v85 = &qword_26B21F128;
    uint64_t v86 = (uint64_t)v109;
LABEL_63:
    sub_251A1B064(v86, v85);
    goto LABEL_26;
  }
  sub_251DEE534(v83, (uint64_t)v100, type metadata accessor for StaticSoftwareUpdate);
  if ((sub_251F34D70() & 1) == 0)
  {
    sub_251DEE59C((uint64_t)v100, type metadata accessor for StaticSoftwareUpdate);
    sub_251A1B064((uint64_t)v103, &qword_26B21F120);
    sub_251A1B064((uint64_t)v104, &qword_26B21F120);
    sub_251DEE59C((uint64_t)v108, type metadata accessor for StaticSoftwareUpdate);
    uint64_t v86 = (uint64_t)v109;
    uint64_t v85 = &qword_26B21F120;
    goto LABEL_63;
  }
  uint64_t v87 = (uint64_t)v108;
  uint64_t v88 = (uint64_t)v100;
  char updated = _s13HomeDataModel20StaticSoftwareUpdateV4KindO2eeoiySbAE_AEtFZ_0((uint64_t)&v108[*(int *)(v102 + 20)], (uint64_t)&v100[*(int *)(v102 + 20)]);
  sub_251DEE59C(v88, type metadata accessor for StaticSoftwareUpdate);
  sub_251A1B064((uint64_t)v103, &qword_26B21F120);
  sub_251A1B064((uint64_t)v104, &qword_26B21F120);
  sub_251DEE59C(v87, type metadata accessor for StaticSoftwareUpdate);
  sub_251A1B064((uint64_t)v109, &qword_26B21F120);
  if ((updated & 1) == 0) {
    goto LABEL_26;
  }
LABEL_53:
  if (*(unsigned __int8 *)(v106 + v105[19]) != *(unsigned __int8 *)(v107 + v105[19])
    || (sub_251F34D70() & 1) == 0
    || (sub_251B04848(*(void *)(v106 + v105[21]), *(void *)(v107 + v105[21])) & 1) == 0)
  {
    goto LABEL_26;
  }
  uint64_t v90 = v105[22];
  uint64_t v91 = (void *)(v106 + v90);
  uint64_t v92 = *(void *)(v106 + v90 + 8);
  uint64_t v93 = (void *)(v107 + v90);
  uint64_t v94 = v93[1];
  if (!v92)
  {
    uint64_t v96 = v106;
    uint64_t v95 = v107;
    uint64_t v97 = v105;
    if (!v94) {
      goto LABEL_65;
    }
LABEL_26:
    char v27 = 0;
    return v27 & 1;
  }
  if (!v94) {
    goto LABEL_26;
  }
  uint64_t v96 = v106;
  uint64_t v95 = v107;
  uint64_t v97 = v105;
  if (*v91 == *v93 && v92 == v94 || (v98 = sub_251F36B10(), char v27 = 0, (v98 & 1) != 0))
  {
LABEL_65:
    if ((sub_251B04848(*(void *)(v96 + v97[23]), *(void *)(v95 + v97[23])) & 1) != 0
      && (sub_251B05D50(*(void *)(v106 + v105[24]), *(void *)(v107 + v105[24])) & 1) != 0)
    {
      char v27 = sub_251AFCE78(*(void *)(v106 + v105[25]), *(void *)(v107 + v105[25]));
      return v27 & 1;
    }
    goto LABEL_26;
  }
  return v27 & 1;
}

unint64_t sub_251DE834C()
{
  unint64_t result = qword_269BA39C0;
  if (!qword_269BA39C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA39C0);
  }
  return result;
}

uint64_t sub_251DE83A0(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269BA39C8);
    sub_251DEA51C(a2, (void (*)(uint64_t))type metadata accessor for StaticAccessory.DeviceIdentifier);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_251DE8434()
{
  unint64_t result = qword_269BA39E0;
  if (!qword_269BA39E0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269BA39D8);
    sub_251DEE3E0(&qword_26B21E348, MEMORY[0x270FA94D0]);
    sub_251DEA51C(&qword_269BA39E8, (void (*)(uint64_t))type metadata accessor for StaticMediaSystemComponent);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA39E0);
  }
  return result;
}

uint64_t sub_251DE84F8(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B9CC40);
    sub_251DEE3E0(a2, MEMORY[0x270FA94D0]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_251DE8580()
{
  unint64_t result = qword_269BA3A00;
  if (!qword_269BA3A00)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269BA39D8);
    sub_251DEE3E0(&qword_269B9CC80, MEMORY[0x270FA94D0]);
    sub_251DEA51C(&qword_269BA3A08, (void (*)(uint64_t))type metadata accessor for StaticMediaSystemComponent);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3A00);
  }
  return result;
}

uint64_t sub_251DE8644(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticAccessory(0);
  uint64_t v38 = *(void *)(v4 - 8);
  uint64_t v39 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v37 = (uint64_t)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(a1 + 56);
  uint64_t v41 = a1 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & v6;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t v36 = (uint64_t)&v36;
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v42 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v43 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v14 = 0;
  uint64_t v40 = (char *)MEMORY[0x263F8EE78];
  if (v9) {
    goto LABEL_6;
  }
LABEL_7:
  int64_t v17 = v14 + 1;
  if (__OFADD__(v14, 1))
  {
    __break(1u);
  }
  else
  {
    if (v17 >= v42) {
      goto LABEL_34;
    }
    unint64_t v18 = *(void *)(v41 + 8 * v17);
    ++v14;
    if (v18) {
      goto LABEL_22;
    }
    int64_t v14 = v17 + 1;
    if (v17 + 1 >= v42) {
      goto LABEL_34;
    }
    unint64_t v18 = *(void *)(v41 + 8 * v14);
    if (v18) {
      goto LABEL_22;
    }
    int64_t v14 = v17 + 2;
    if (v17 + 2 >= v42) {
      goto LABEL_34;
    }
    unint64_t v18 = *(void *)(v41 + 8 * v14);
    if (v18) {
      goto LABEL_22;
    }
    int64_t v14 = v17 + 3;
    if (v17 + 3 >= v42) {
      goto LABEL_34;
    }
    unint64_t v18 = *(void *)(v41 + 8 * v14);
    if (v18) {
      goto LABEL_22;
    }
    int64_t v19 = v17 + 4;
    if (v19 >= v42)
    {
LABEL_34:
      uint64_t v35 = sub_251F34DA0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v12, 1, 1, v35);
LABEL_35:
      swift_release();
      return (uint64_t)v40;
    }
    unint64_t v18 = *(void *)(v41 + 8 * v19);
    if (v18)
    {
      int64_t v14 = v19;
LABEL_22:
      unint64_t v9 = (v18 - 1) & v18;
      for (unint64_t i = __clz(__rbit64(v18)) + (v14 << 6); ; unint64_t i = v15 | (v14 << 6))
      {
        uint64_t v20 = *(void *)(v43 + 48);
        uint64_t v21 = sub_251F34DA0();
        uint64_t v22 = *(void *)(v21 - 8);
        (*(void (**)(char *, unint64_t, uint64_t))(v22 + 16))(v12, v20 + *(void *)(v22 + 72) * i, v21);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v12, 0, 1, v21);
        uint64_t v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48))(v12, 1, v21);
        if (v23 == 1) {
          break;
        }
        MEMORY[0x270FA5388](v23);
        id v25 = (char *)&v36 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v25, v12, v21);
        uint64_t v26 = a2;
        if (*(void *)(a2 + 16) && (v27 = sub_2519FE584((uint64_t)v25), uint64_t v26 = a2, (v28 & 1) != 0))
        {
          uint64_t v29 = v37;
          sub_251DEE4CC(*(void *)(a2 + 56) + *(void *)(v38 + 72) * v27, v37, type metadata accessor for StaticAccessory);
          uint64_t v30 = v29;
          int v31 = *(unsigned __int16 *)(v29 + *(int *)(v39 + 88));
          sub_251DEE59C(v30, type metadata accessor for StaticAccessory);
          uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v25, v21);
          if ((~v31 & 0xFEFC) != 0)
          {
            uint64_t result = swift_isUniquelyReferenced_nonNull_native();
            if ((result & 1) == 0)
            {
              uint64_t result = (uint64_t)sub_251F10F3C(0, *((void *)v40 + 2) + 1, 1, v40);
              uint64_t v40 = (char *)result;
            }
            unint64_t v33 = *((void *)v40 + 2);
            unint64_t v32 = *((void *)v40 + 3);
            if (v33 >= v32 >> 1)
            {
              uint64_t result = (uint64_t)sub_251F10F3C((char *)(v32 > 1), v33 + 1, 1, v40);
              uint64_t v40 = (char *)result;
            }
            uint64_t v34 = v40;
            *((void *)v40 + 2) = v33 + 1;
            *(_WORD *)&v34[2 * v33 + 32] = v31;
          }
          if (!v9) {
            goto LABEL_7;
          }
        }
        else
        {
          a2 = v26;
          uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v25, v21);
          if (!v9) {
            goto LABEL_7;
          }
        }
LABEL_6:
        unint64_t v15 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
      }
      goto LABEL_35;
    }
    while (1)
    {
      int64_t v14 = v19 + 1;
      if (__OFADD__(v19, 1)) {
        break;
      }
      if (v14 >= v42) {
        goto LABEL_34;
      }
      unint64_t v18 = *(void *)(v41 + 8 * v14);
      ++v19;
      if (v18) {
        goto LABEL_22;
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_251DE8B60(int a1, uint64_t a2, uint64_t a3)
{
  int v36 = a1;
  uint64_t v5 = type metadata accessor for StaticAccessory(0);
  uint64_t v31 = *(void *)(v5 - 8);
  uint64_t v32 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = type metadata accessor for StaticMediaSystemComponent();
  uint64_t v8 = *(void *)(v34 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v34);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v30 - v12;
  uint64_t v14 = *(void *)(a2 + 64);
  uint64_t v33 = a2 + 64;
  uint64_t v15 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  int64_t v35 = (unint64_t)(v15 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v19 = 0;
  while (1)
  {
    if (v17)
    {
      unint64_t v20 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v21 = v20 | (v19 << 6);
      goto LABEL_23;
    }
    int64_t v22 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v35) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v33 + 8 * v22);
    ++v19;
    if (!v23)
    {
      int64_t v19 = v22 + 1;
      if (v22 + 1 >= v35) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v33 + 8 * v19);
      if (!v23)
      {
        int64_t v19 = v22 + 2;
        if (v22 + 2 >= v35) {
          goto LABEL_26;
        }
        unint64_t v23 = *(void *)(v33 + 8 * v19);
        if (!v23)
        {
          int64_t v19 = v22 + 3;
          if (v22 + 3 >= v35) {
            goto LABEL_26;
          }
          unint64_t v23 = *(void *)(v33 + 8 * v19);
          if (!v23) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v17 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v19 << 6);
LABEL_23:
    sub_251DEE4CC(*(void *)(a2 + 56) + *(void *)(v8 + 72) * v21, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent);
    sub_251DEE534((uint64_t)v13, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent);
    if (*(void *)(a3 + 16))
    {
      id v25 = &v11[*(int *)(v34 + 20)];
      uint64_t v26 = type metadata accessor for StaticMediaProfile();
      unint64_t v27 = sub_2519FE584((uint64_t)&v25[*(int *)(v26 + 56)]);
      if (v28)
      {
        sub_251DEE4CC(*(void *)(a3 + 56) + *(void *)(v31 + 72) * v27, (uint64_t)v7, type metadata accessor for StaticAccessory);
        int v29 = v7[*(int *)(v32 + 116)];
        sub_251DEE59C((uint64_t)v7, type metadata accessor for StaticAccessory);
        v36 &= v29;
      }
    }
    uint64_t result = sub_251DEE59C((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent);
  }
  int64_t v24 = v22 + 4;
  if (v24 >= v35)
  {
LABEL_26:
    swift_release();
    return v36 & 1;
  }
  unint64_t v23 = *(void *)(v33 + 8 * v24);
  if (v23)
  {
    int64_t v19 = v24;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v19 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v19 >= v35) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v33 + 8 * v19);
    ++v24;
    if (v23) {
      goto LABEL_22;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_251DE8F0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for StaticAccessory(0);
  uint64_t v57 = *(void *)(v6 - 8);
  uint64_t v58 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v56 = (uint64_t)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v55 = (uint64_t)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v54 = (uint64_t)&v49 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v53 = (uint64_t)&v49 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v52 = (uint64_t)&v49 - v15;
  uint64_t v16 = type metadata accessor for StaticMediaSystemComponent();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v59 = v16;
  uint64_t v60 = v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  unint64_t v20 = (char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  int64_t v22 = (char *)&v49 - v21;
  uint64_t v62 = a1;
  uint64_t v23 = a2 + 64;
  uint64_t v24 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v25 = -1;
  if (v24 < 64) {
    uint64_t v25 = ~(-1 << v24);
  }
  unint64_t v26 = v25 & *(void *)(a2 + 64);
  int64_t v27 = (unint64_t)(v24 + 63) >> 6;
  uint64_t v61 = a2;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v29 = 0;
  int64_t v50 = v27;
  uint64_t v51 = a3;
  while (1)
  {
    if (v26)
    {
      unint64_t v30 = __clz(__rbit64(v26));
      v26 &= v26 - 1;
      unint64_t v31 = v30 | (v29 << 6);
      goto LABEL_23;
    }
    int64_t v32 = v29 + 1;
    if (__OFADD__(v29, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v32 >= v27) {
      goto LABEL_26;
    }
    unint64_t v33 = *(void *)(v23 + 8 * v32);
    ++v29;
    if (!v33)
    {
      int64_t v29 = v32 + 1;
      if (v32 + 1 >= v27) {
        goto LABEL_26;
      }
      unint64_t v33 = *(void *)(v23 + 8 * v29);
      if (!v33)
      {
        int64_t v29 = v32 + 2;
        if (v32 + 2 >= v27) {
          goto LABEL_26;
        }
        unint64_t v33 = *(void *)(v23 + 8 * v29);
        if (!v33)
        {
          int64_t v29 = v32 + 3;
          if (v32 + 3 >= v27) {
            goto LABEL_26;
          }
          unint64_t v33 = *(void *)(v23 + 8 * v29);
          if (!v33) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v26 = (v33 - 1) & v33;
    unint64_t v31 = __clz(__rbit64(v33)) + (v29 << 6);
LABEL_23:
    sub_251DEE4CC(*(void *)(v61 + 56) + *(void *)(v60 + 72) * v31, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent);
    sub_251DEE534((uint64_t)v22, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent);
    if (*(void *)(a3 + 16))
    {
      int64_t v35 = &v20[*(int *)(v59 + 20)];
      uint64_t v36 = type metadata accessor for StaticMediaProfile();
      unint64_t v37 = sub_2519FE584((uint64_t)&v35[*(int *)(v36 + 56)]);
      if (v38)
      {
        uint64_t v39 = v56;
        sub_251DEE4CC(*(void *)(a3 + 56) + *(void *)(v57 + 72) * v37, v56, type metadata accessor for StaticAccessory);
        uint64_t v40 = v23;
        uint64_t v41 = v22;
        int64_t v42 = v20;
        uint64_t v43 = v53;
        sub_251DEE4CC(v39 + *(int *)(v58 + 24), v53, type metadata accessor for StaticAccessory.DeviceIdentifier);
        sub_251DEE59C(v39, type metadata accessor for StaticAccessory);
        uint64_t v44 = v52;
        sub_251DEE534(v43, v52, type metadata accessor for StaticAccessory.DeviceIdentifier);
        uint64_t v45 = v55;
        sub_251DEE4CC(v44, v55, type metadata accessor for StaticAccessory.DeviceIdentifier);
        uint64_t v46 = v54;
        uint64_t v47 = v45;
        a3 = v51;
        sub_251A66F00(v54, v47);
        uint64_t v48 = v46;
        unint64_t v20 = v42;
        int64_t v22 = v41;
        uint64_t v23 = v40;
        int64_t v27 = v50;
        sub_251DEE59C(v48, type metadata accessor for StaticAccessory.DeviceIdentifier);
        sub_251DEE59C(v44, type metadata accessor for StaticAccessory.DeviceIdentifier);
      }
    }
    uint64_t result = sub_251DEE59C((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent);
  }
  int64_t v34 = v32 + 4;
  if (v34 >= v27)
  {
LABEL_26:
    swift_release();
    return v62;
  }
  unint64_t v33 = *(void *)(v23 + 8 * v34);
  if (v33)
  {
    int64_t v29 = v34;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v29 = v34 + 1;
    if (__OFADD__(v34, 1)) {
      break;
    }
    if (v29 >= v27) {
      goto LABEL_26;
    }
    unint64_t v33 = *(void *)(v23 + 8 * v29);
    ++v34;
    if (v33) {
      goto LABEL_22;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_251DE93F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v39 = a3;
  uint64_t v5 = type metadata accessor for StaticAccessory(0);
  uint64_t v34 = *(void *)(v5 - 8);
  uint64_t v35 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v33 = (uint64_t)v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = a1;
  uint64_t v7 = *(void *)(a2 + 56);
  uint64_t v36 = a2 + 56;
  uint64_t v8 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v7;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  v32[1] = v32;
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v37 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v38 = a2;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v15 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v15 << 6);
      goto LABEL_23;
    }
    int64_t v18 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v18 >= v37) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v36 + 8 * v18);
    ++v15;
    if (!v19)
    {
      int64_t v15 = v18 + 1;
      if (v18 + 1 >= v37) {
        goto LABEL_28;
      }
      unint64_t v19 = *(void *)(v36 + 8 * v15);
      if (!v19)
      {
        int64_t v15 = v18 + 2;
        if (v18 + 2 >= v37) {
          goto LABEL_28;
        }
        unint64_t v19 = *(void *)(v36 + 8 * v15);
        if (!v19)
        {
          int64_t v15 = v18 + 3;
          if (v18 + 3 >= v37) {
            goto LABEL_28;
          }
          unint64_t v19 = *(void *)(v36 + 8 * v15);
          if (!v19) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v10 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v15 << 6);
LABEL_23:
    uint64_t v21 = *(void *)(v38 + 48);
    uint64_t v22 = sub_251F34DA0();
    uint64_t v23 = *(void *)(v22 - 8);
    (*(void (**)(char *, unint64_t, uint64_t))(v23 + 16))(v13, v21 + *(void *)(v23 + 72) * v17, v22);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v13, 0, 1, v22);
    uint64_t v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48))(v13, 1, v22);
    if (v24 == 1) {
      goto LABEL_29;
    }
    MEMORY[0x270FA5388](v24);
    unint64_t v26 = (char *)v32 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v26, v13, v22);
    if (*(void *)(v39 + 16))
    {
      unint64_t v27 = sub_2519FE584((uint64_t)v26);
      if (v28)
      {
        uint64_t v29 = v33;
        sub_251DEE4CC(*(void *)(v39 + 56) + *(void *)(v34 + 72) * v27, v33, type metadata accessor for StaticAccessory);
        uint64_t v30 = *(void *)(v29 + *(int *)(v35 + 124));
        swift_bridgeObjectRetain();
        sub_251DEE59C(v29, type metadata accessor for StaticAccessory);
        if (v30) {
          sub_251AC1044(v30);
        }
      }
    }
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v26, v22);
  }
  int64_t v20 = v18 + 4;
  if (v20 >= v37)
  {
LABEL_28:
    uint64_t v31 = sub_251F34DA0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v13, 1, 1, v31);
LABEL_29:
    swift_release();
    return v40;
  }
  unint64_t v19 = *(void *)(v36 + 8 * v20);
  if (v19)
  {
    int64_t v15 = v20;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v15 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v15 >= v37) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v36 + 8 * v15);
    ++v20;
    if (v19) {
      goto LABEL_22;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

unint64_t sub_251DE9874(unint64_t a1, void *a2, char a3, void *a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v38 = a4;
  uint64_t v39 = a5;
  LOBYTE(v7) = a3;
  id v37 = a2;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E848);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = type metadata accessor for StaticMediaSystem();
  uint64_t v31 = *(void *)(v36 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v36);
  uint64_t v35 = (uint64_t)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v30 = (uint64_t)&v28 - v14;
  if (a1 >> 62)
  {
LABEL_19:
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_251F366C0();
    if (v15) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v15 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v15)
    {
LABEL_3:
      uint64_t v28 = v6;
      int v40 = v7 & 1;
      uint64_t v33 = (void (**)(char *, void, uint64_t, uint64_t))(v31 + 56);
      unint64_t v34 = a1 & 0xC000000000000001;
      int64_t v32 = (unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
      unint64_t v7 = MEMORY[0x263F8EE78];
      uint64_t v6 = 4;
      unint64_t v29 = a1;
      uint64_t v16 = v39;
      while (1)
      {
        uint64_t v17 = v6 - 4;
        if (v34)
        {
          id v18 = (id)MEMORY[0x2533AB3A0](v6 - 4, a1);
          uint64_t v19 = v6 - 3;
          if (__OFADD__(v17, 1)) {
            goto LABEL_18;
          }
        }
        else
        {
          id v18 = *(id *)(a1 + 8 * v6);
          uint64_t v19 = v6 - 3;
          if (__OFADD__(v17, 1))
          {
LABEL_18:
            __break(1u);
            goto LABEL_19;
          }
        }
        unsigned __int8 v41 = v40;
        id v20 = v18;
        id v21 = v37;
        uint64_t v22 = v38;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_251DE7210(v20, v21, &v41, v22, v16, (uint64_t)v11);
        uint64_t v23 = v36;
        (*v33)(v11, 0, 1, v36);

        if ((*v32)(v11, 1, v23) == 1)
        {
          sub_251A1B064((uint64_t)v11, &qword_26B21E848);
        }
        else
        {
          uint64_t v24 = v30;
          sub_251DEE534((uint64_t)v11, v30, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
          sub_251DEE534(v24, v35, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v7 = sub_251F0F594(0, *(void *)(v7 + 16) + 1, 1, v7);
          }
          unint64_t v26 = *(void *)(v7 + 16);
          unint64_t v25 = *(void *)(v7 + 24);
          if (v26 >= v25 >> 1) {
            unint64_t v7 = sub_251F0F594(v25 > 1, v26 + 1, 1, v7);
          }
          *(void *)(v7 + 16) = v26 + 1;
          sub_251DEE534(v35, v7+ ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80))+ *(void *)(v31 + 72) * v26, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
          a1 = v29;
        }
        ++v6;
        if (v19 == v15)
        {
          swift_bridgeObjectRelease();
          return v7;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x263F8EE78];
}

uint64_t sub_251DE9C24(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v48 = a3;
  uint64_t v7 = type metadata accessor for StaticMediaSystem();
  uint64_t v44 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v39 = (uint64_t)v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v38 - v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FFD8);
  uint64_t result = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)(a1 + 16);
  if (!v17) {
    return result;
  }
  v38[1] = a1;
  v38[2] = v4;
  uint64_t v43 = &v16[*(int *)(result + 48)];
  uint64_t v18 = a1 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  uint64_t v40 = *(void *)(v14 + 72);
  swift_bridgeObjectRetain();
  unsigned __int8 v41 = v16;
  int64_t v42 = v11;
  while (1)
  {
    uint64_t v46 = v18;
    uint64_t v47 = v17;
    sub_251A1B128(v18, (uint64_t)v16, &qword_26B21FFD8);
    uint64_t v20 = sub_251F34DA0();
    uint64_t v45 = v38;
    uint64_t v21 = *(void *)(v20 - 8);
    MEMORY[0x270FA5388](v20);
    uint64_t v23 = (char *)v38 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
    v24(v23, v16, v20);
    sub_251DEE534((uint64_t)v43, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
    uint64_t v25 = *v48;
    unint64_t v27 = sub_2519FE584((uint64_t)v23);
    uint64_t v28 = *(void *)(v25 + 16);
    BOOL v29 = (v26 & 1) == 0;
    uint64_t v30 = v28 + v29;
    if (__OFADD__(v28, v29)) {
      break;
    }
    char v31 = v26;
    if (*(void *)(v25 + 24) >= v30)
    {
      if (a2)
      {
        if (v26) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_251A1234C();
        if (v31) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_251A01E18(v30, a2 & 1);
      unint64_t v32 = sub_2519FE584((uint64_t)v23);
      if ((v31 & 1) != (v33 & 1)) {
        goto LABEL_20;
      }
      unint64_t v27 = v32;
      if (v31)
      {
LABEL_3:
        uint64_t v11 = v42;
        uint64_t v19 = v39;
        sub_251DEE534((uint64_t)v42, v39, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
        (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
        sub_251DEE468(v19, *(void *)(*v48 + 56) + *(void *)(v44 + 72) * v27);
        goto LABEL_4;
      }
    }
    unint64_t v34 = (void *)*v48;
    *(void *)(*v48 + 8 * (v27 >> 6) + 64) |= 1 << v27;
    v24((char *)(v34[6] + *(void *)(v21 + 72) * v27), v23, v20);
    uint64_t v11 = v42;
    sub_251DEE534((uint64_t)v42, v34[7] + *(void *)(v44 + 72) * v27, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
    uint64_t v35 = v34[2];
    BOOL v36 = __OFADD__(v35, 1);
    uint64_t v37 = v35 + 1;
    if (v36) {
      goto LABEL_19;
    }
    v34[2] = v37;
LABEL_4:
    uint64_t v16 = v41;
    uint64_t v18 = v46 + v40;
    a2 = 1;
    uint64_t v17 = v47 - 1;
    if (v47 == 1) {
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  uint64_t result = sub_251F36BA0();
  __break(1u);
  return result;
}

uint64_t sub_251DEA04C(void *a1, char *a2, void *a3, uint64_t a4)
{
  char v7 = *a2;
  id v8 = objc_msgSend(a1, sel_mediaSystems);
  sub_251DEE428();
  unint64_t v9 = sub_251F35AC0();

  id v10 = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v11 = 0;
  unint64_t v12 = sub_251DE9874(v9, v10, v7, a3, a4);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int64_t v13 = *(void *)(v12 + 16);
  if (v13)
  {
    uint64_t v30 = 0;
    uint64_t v33 = MEMORY[0x263F8EE78];
    sub_251A3E150(0, v13, 0);
    uint64_t v14 = v33;
    uint64_t v15 = 0;
    uint64_t v16 = *(void *)(type metadata accessor for StaticMediaSystem() - 8);
    uint64_t v17 = *(unsigned __int8 *)(v16 + 80);
    unint64_t v29 = v12;
    unint64_t v31 = v12 + ((v17 + 32) & ~v17);
    uint64_t v32 = v16;
    do
    {
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FFD8);
      uint64_t v19 = *(void *)(v18 - 8);
      uint64_t v20 = MEMORY[0x270FA5388](v18 - 8);
      uint64_t v22 = (char *)&v29 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v23 = (uint64_t)&v22[*(int *)(v20 + 56)];
      sub_251DEE4CC(v31 + *(void *)(v32 + 72) * v15, v23, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
      uint64_t v24 = sub_251F34DA0();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
      uint64_t v33 = v14;
      unint64_t v26 = *(void *)(v14 + 16);
      unint64_t v25 = *(void *)(v14 + 24);
      if (v26 >= v25 >> 1)
      {
        sub_251A3E150(v25 > 1, v26 + 1, 1);
        uint64_t v14 = v33;
      }
      ++v15;
      *(void *)(v14 + 16) = v26 + 1;
      sub_251A4ECF0((uint64_t)v22, v14+ ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80))+ *(void *)(v19 + 72) * v26, &qword_26B21FFD8);
    }
    while (v13 != v15);
    swift_bridgeObjectRelease();
    uint64_t v11 = v30;
    if (*(void *)(v14 + 16)) {
      goto LABEL_7;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = MEMORY[0x263F8EE78];
    if (*(void *)(MEMORY[0x263F8EE78] + 16))
    {
LABEL_7:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C918);
      uint64_t v27 = sub_251F36700();
      goto LABEL_10;
    }
  }
  uint64_t v27 = MEMORY[0x263F8EE80];
LABEL_10:
  uint64_t v33 = v27;
  sub_251DE9C24(v14, 1, &v33);
  swift_bridgeObjectRelease();
  if (!v11) {
    return v33;
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_251DEA380()
{
  return sub_251DEA51C((unint64_t *)&unk_269BA3A20, (void (*)(uint64_t))type metadata accessor for StaticMediaSystem);
}

uint64_t sub_251DEA3C8()
{
  return sub_251DEE3E0((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA94D0]);
}

uint64_t sub_251DEA3F8(void *a1)
{
  a1[1] = sub_251DEA51C(&qword_269BA3A30, (void (*)(uint64_t))type metadata accessor for StaticMediaSystem);
  a1[2] = sub_251DEA51C(&qword_269BA3A38, (void (*)(uint64_t))type metadata accessor for StaticMediaSystem);
  a1[3] = sub_251DEA51C(&qword_269B9E1A0, (void (*)(uint64_t))type metadata accessor for StaticMediaSystem);
  a1[4] = sub_251DEA51C(&qword_269B9E070, (void (*)(uint64_t))type metadata accessor for StaticMediaSystem);
  a1[5] = sub_251DEA51C(&qword_269BA3A40, (void (*)(uint64_t))type metadata accessor for StaticMediaSystem);
  uint64_t result = sub_251DEA51C(&qword_269BA3A48, (void (*)(uint64_t))type metadata accessor for StaticMediaSystem);
  a1[6] = result;
  return result;
}

uint64_t sub_251DEA51C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for StaticMediaSystem(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) == 0)
  {
    uint64_t v92 = sub_251F34DA0();
    uint64_t v93 = (void (**)(char *, char *, uint64_t))(*(void *)(v92 - 8) + 16);
    uint64_t v91 = *v93;
    ((void (*)(void *, void *))*v93)(a1, a2);
    uint64_t v7 = a3[5];
    uint64_t v8 = a3[6];
    unint64_t v9 = (void *)((char *)a1 + v7);
    id v10 = (void *)((char *)a2 + v7);
    uint64_t v11 = v10[1];
    *unint64_t v9 = *v10;
    v9[1] = v11;
    unint64_t v12 = (void *)((char *)a1 + v8);
    int64_t v13 = (void *)((char *)a2 + v8);
    uint64_t v14 = v13[1];
    *unint64_t v12 = *v13;
    v12[1] = v14;
    uint64_t v15 = a3[7];
    uint64_t v94 = (char *)a1 + v15;
    uint64_t v16 = (char *)a2 + v15;
    uint64_t v17 = sub_251F34D20();
    uint64_t v18 = *(void *)(v17 - 8);
    uint64_t v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    int v89 = v19;
    uint64_t v90 = v17;
    uint64_t v88 = v18;
    if (v19(v16, 1, v17))
    {
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
      memcpy(v94, v16, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v94, v16, v17);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v94, 0, 1, v17);
    }
    uint64_t v22 = a3[8];
    uint64_t v23 = a3[9];
    uint64_t v24 = (void *)((char *)a1 + v22);
    unint64_t v25 = (void *)((char *)a2 + v22);
    uint64_t v26 = v25[1];
    void *v24 = *v25;
    v24[1] = v26;
    *((unsigned char *)a1 + v23) = *((unsigned char *)a2 + v23);
    uint64_t v27 = a3[11];
    *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
    *((unsigned char *)a1 + v27) = *((unsigned char *)a2 + v27);
    uint64_t v28 = a3[13];
    *((unsigned char *)a1 + a3[12]) = *((unsigned char *)a2 + a3[12]);
    *((unsigned char *)a1 + v28) = *((unsigned char *)a2 + v28);
    uint64_t v29 = a3[15];
    *((unsigned char *)a1 + a3[14]) = *((unsigned char *)a2 + a3[14]);
    *((unsigned char *)a1 + v29) = *((unsigned char *)a2 + v29);
    uint64_t v30 = a3[16];
    uint64_t v31 = a3[17];
    uint64_t v32 = (void *)((char *)a1 + v30);
    uint64_t v33 = (void *)((char *)a2 + v30);
    uint64_t v34 = v33[1];
    uint64_t v35 = *(void *)((char *)a2 + v31);
    *uint64_t v32 = *v33;
    v32[1] = v34;
    *(void *)((char *)a1 + v31) = v35;
    uint64_t v36 = a3[18];
    uint64_t v95 = (char *)a1 + v36;
    uint64_t v37 = (char *)a2 + v36;
    uint64_t v38 = type metadata accessor for StaticSoftwareUpdate(0);
    uint64_t v39 = *(void *)(v38 - 8);
    uint64_t v40 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48);
    uint64_t v41 = v38;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v40(v37, 1, v41))
    {
      uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
      memcpy(v95, v37, *(void *)(*(void *)(v42 - 8) + 64));
      uint64_t v44 = v91;
      uint64_t v43 = v92;
LABEL_21:
      uint64_t v77 = a3[20];
      *((unsigned char *)a1 + a3[19]) = *((unsigned char *)a2 + a3[19]);
      v44((char *)a1 + v77, (char *)a2 + v77, v43);
      uint64_t v78 = a3[22];
      *(void *)((char *)a1 + a3[21]) = *(void *)((char *)a2 + a3[21]);
      uint64_t v79 = (void *)((char *)a1 + v78);
      char v80 = (void *)((char *)a2 + v78);
      uint64_t v81 = v80[1];
      *uint64_t v79 = *v80;
      v79[1] = v81;
      uint64_t v82 = a3[24];
      *(void *)((char *)a1 + a3[23]) = *(void *)((char *)a2 + a3[23]);
      *(void *)((char *)a1 + v82) = *(void *)((char *)a2 + v82);
      *(void *)((char *)a1 + a3[25]) = *(void *)((char *)a2 + a3[25]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
    uint64_t v86 = v39;
    uint64_t v44 = v91;
    uint64_t v43 = v92;
    v91(v95, v37, v92);
    uint64_t v87 = v41;
    uint64_t v45 = *(int *)(v41 + 20);
    uint64_t v46 = &v95[v45];
    uint64_t v47 = &v37[v45];
    uint64_t v48 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v59 = *((void *)v47 + 1);
      *(void *)uint64_t v46 = *(void *)v47;
      *((void *)v46 + 1) = v59;
      uint64_t updated = type metadata accessor for StaticSoftwareUpdateMetadata(0);
      uint64_t v61 = *(int *)(updated + 20);
      uint64_t v84 = updated;
      __dst = &v46[v61];
      uint64_t v62 = &v47[v61];
      swift_bridgeObjectRetain();
      if (v89(v62, 1, v90))
      {
LABEL_15:
        uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
        memcpy(__dst, v62, *(void *)(*(void *)(v66 - 8) + 64));
LABEL_19:
        uint64_t v67 = v95;
        uint64_t v68 = *(int *)(v84 + 24);
        uint64_t v69 = &v46[v68];
        char v70 = &v47[v68];
        uint64_t v71 = *((void *)v70 + 1);
        *(void *)uint64_t v69 = *(void *)v70;
        *((void *)v69 + 1) = v71;
        uint64_t v72 = *(int *)(v84 + 28);
        int v73 = &v46[v72];
        int v74 = &v47[v72];
        uint64_t v75 = *((void *)v74 + 1);
        *(void *)int v73 = *(void *)v74;
        *((void *)v73 + 1) = v75;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
        v46[*(int *)(v76 + 48)] = v47[*(int *)(v76 + 48)];
        swift_storeEnumTagMultiPayload();
LABEL_20:
        (*(void (**)(char *, void, uint64_t, uint64_t))(v86 + 56))(v67, 0, 1, v87);
        goto LABEL_21;
      }
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64));
        }
        else
        {
          v91(v46, v47, v92);
          int64_t v50 = (int *)type metadata accessor for StaticHH2Update(0);
          v46[v50[5]] = v47[v50[5]];
          uint64_t v51 = v50[6];
          uint64_t v52 = &v46[v51];
          uint64_t v53 = &v47[v51];
          uint64_t v55 = *(void *)v53;
          uint64_t v54 = *((void *)v53 + 1);
          *(void *)uint64_t v52 = v55;
          *((void *)v52 + 1) = v54;
          uint64_t v56 = v50[7];
          uint64_t v57 = &v46[v56];
          uint64_t v58 = &v47[v56];
          v57[8] = v58[8];
          *(void *)uint64_t v57 = *(void *)v58;
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
        }
        uint64_t v67 = v95;
        goto LABEL_20;
      }
      uint64_t v63 = *((void *)v47 + 1);
      *(void *)uint64_t v46 = *(void *)v47;
      *((void *)v46 + 1) = v63;
      uint64_t v64 = type metadata accessor for StaticSoftwareUpdateMetadata(0);
      uint64_t v65 = *(int *)(v64 + 20);
      uint64_t v84 = v64;
      __dst = &v46[v65];
      uint64_t v62 = &v47[v65];
      swift_bridgeObjectRetain();
      if (v89(v62, 1, v90)) {
        goto LABEL_15;
      }
    }
    (*(void (**)(char *, char *, uint64_t))(v88 + 16))(__dst, v62, v90);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v88 + 56))(__dst, 0, 1, v90);
    goto LABEL_19;
  }
  uint64_t v21 = *a2;
  *a1 = *a2;
  a1 = (void *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t destroy for StaticMediaSystem(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_251F34DA0();
  int v5 = (void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  uint64_t v16 = *v5;
  (*v5)(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + a2[7];
  uint64_t v7 = sub_251F34D20();
  uint64_t v8 = *(void *)(v7 - 8);
  unint64_t v9 = *(unsigned int (**)(void))(v8 + 48);
  if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v9)(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = a1 + a2[18];
  uint64_t v11 = type metadata accessor for StaticSoftwareUpdate(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11))
  {
    v16(v10, v4);
    uint64_t v12 = v10 + *(int *)(v11 + 20);
    type metadata accessor for StaticSoftwareUpdate.Kind(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v15 = v12 + *(int *)(type metadata accessor for StaticSoftwareUpdateMetadata(0) + 20);
      if (!v9()) {
        (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v15, v7);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      if (EnumCaseMultiPayload) {
        goto LABEL_12;
      }
      v16(v12, v4);
      type metadata accessor for StaticHH2Update(0);
    }
    swift_bridgeObjectRelease();
  }
LABEL_12:
  v16(a1 + a2[20], v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StaticMediaSystem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v90 = sub_251F34DA0();
  uint64_t v91 = (void (**)(uint64_t, uint64_t))(*(void *)(v90 - 8) + 16);
  int v89 = *v91;
  (*v91)(a1, a2);
  uint64_t v6 = a3[5];
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v6);
  unint64_t v9 = (void *)(a2 + v6);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  uint64_t v11 = (void *)(a1 + v7);
  uint64_t v12 = (void *)(a2 + v7);
  uint64_t v13 = v12[1];
  *uint64_t v11 = *v12;
  v11[1] = v13;
  uint64_t v14 = a3[7];
  uint64_t v92 = (void *)(a1 + v14);
  uint64_t v15 = (const void *)(a2 + v14);
  uint64_t v16 = sub_251F34D20();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v87 = v18;
  uint64_t v88 = v16;
  uint64_t v86 = v17;
  if (v18((char *)v15, 1, v16))
  {
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    memcpy(v92, v15, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v17 + 16))(v92, (void *)v15, v16);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v92, 0, 1, v16);
  }
  uint64_t v20 = a3[8];
  uint64_t v21 = a3[9];
  uint64_t v22 = (void *)(a1 + v20);
  uint64_t v23 = (void *)(a2 + v20);
  uint64_t v24 = v23[1];
  *uint64_t v22 = *v23;
  v22[1] = v24;
  *(unsigned char *)(a1 + v21) = *(unsigned char *)(a2 + v21);
  uint64_t v25 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(unsigned char *)(a1 + v25) = *(unsigned char *)(a2 + v25);
  uint64_t v26 = a3[13];
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  *(unsigned char *)(a1 + v26) = *(unsigned char *)(a2 + v26);
  uint64_t v27 = a3[15];
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  *(unsigned char *)(a1 + v27) = *(unsigned char *)(a2 + v27);
  uint64_t v28 = a3[16];
  uint64_t v29 = a3[17];
  uint64_t v30 = (void *)(a1 + v28);
  uint64_t v31 = (void *)(a2 + v28);
  uint64_t v32 = v31[1];
  uint64_t v33 = *(void *)(a2 + v29);
  *uint64_t v30 = *v31;
  v30[1] = v32;
  *(void *)(a1 + v29) = v33;
  uint64_t v34 = a3[18];
  uint64_t v93 = (char *)(a1 + v34);
  uint64_t v35 = (char *)(a2 + v34);
  uint64_t v36 = type metadata accessor for StaticSoftwareUpdate(0);
  uint64_t v37 = *(void *)(v36 - 8);
  uint64_t v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48);
  uint64_t v39 = v36;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v38(v35, 1, v39))
  {
    uint64_t v84 = v37;
    uint64_t v42 = v89;
    uint64_t v41 = v90;
    ((void (*)(char *, char *, uint64_t))v89)(v93, v35, v90);
    uint64_t v85 = v39;
    uint64_t v43 = *(int *)(v39 + 20);
    uint64_t v44 = &v93[v43];
    uint64_t v45 = &v35[v43];
    uint64_t v46 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v57 = *((void *)v45 + 1);
      *(void *)uint64_t v44 = *(void *)v45;
      *((void *)v44 + 1) = v57;
      uint64_t updated = type metadata accessor for StaticSoftwareUpdateMetadata(0);
      uint64_t v59 = *(int *)(updated + 20);
      uint64_t v82 = updated;
      __dst = &v44[v59];
      uint64_t v60 = &v45[v59];
      swift_bridgeObjectRetain();
      if (v87(v60, 1, v88))
      {
LABEL_13:
        uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
        memcpy(__dst, v60, *(void *)(*(void *)(v64 - 8) + 64));
LABEL_17:
        uint64_t v65 = v93;
        uint64_t v66 = *(int *)(v82 + 24);
        uint64_t v67 = &v44[v66];
        uint64_t v68 = &v45[v66];
        uint64_t v69 = *((void *)v68 + 1);
        *(void *)uint64_t v67 = *(void *)v68;
        *((void *)v67 + 1) = v69;
        uint64_t v70 = *(int *)(v82 + 28);
        uint64_t v71 = &v44[v70];
        uint64_t v72 = &v45[v70];
        uint64_t v73 = *((void *)v72 + 1);
        *(void *)uint64_t v71 = *(void *)v72;
        *((void *)v71 + 1) = v73;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
        v44[*(int *)(v74 + 48)] = v45[*(int *)(v74 + 48)];
        swift_storeEnumTagMultiPayload();
LABEL_18:
        (*(void (**)(char *, void, uint64_t, uint64_t))(v84 + 56))(v65, 0, 1, v85);
        goto LABEL_19;
      }
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
        }
        else
        {
          ((void (*)(char *, char *, uint64_t))v89)(v44, v45, v90);
          uint64_t v48 = (int *)type metadata accessor for StaticHH2Update(0);
          v44[v48[5]] = v45[v48[5]];
          uint64_t v49 = v48[6];
          int64_t v50 = &v44[v49];
          uint64_t v51 = &v45[v49];
          uint64_t v53 = *(void *)v51;
          uint64_t v52 = *((void *)v51 + 1);
          *(void *)int64_t v50 = v53;
          *((void *)v50 + 1) = v52;
          uint64_t v54 = v48[7];
          uint64_t v55 = &v44[v54];
          uint64_t v56 = &v45[v54];
          v55[8] = v56[8];
          *(void *)uint64_t v55 = *(void *)v56;
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
        }
        uint64_t v65 = v93;
        goto LABEL_18;
      }
      uint64_t v61 = *((void *)v45 + 1);
      *(void *)uint64_t v44 = *(void *)v45;
      *((void *)v44 + 1) = v61;
      uint64_t v62 = type metadata accessor for StaticSoftwareUpdateMetadata(0);
      uint64_t v63 = *(int *)(v62 + 20);
      uint64_t v82 = v62;
      __dst = &v44[v63];
      uint64_t v60 = &v45[v63];
      swift_bridgeObjectRetain();
      if (v87(v60, 1, v88)) {
        goto LABEL_13;
      }
    }
    (*(void (**)(char *, char *, uint64_t))(v86 + 16))(__dst, v60, v88);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v86 + 56))(__dst, 0, 1, v88);
    goto LABEL_17;
  }
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
  memcpy(v93, v35, *(void *)(*(void *)(v40 - 8) + 64));
  uint64_t v42 = v89;
  uint64_t v41 = v90;
LABEL_19:
  uint64_t v75 = a3[20];
  *(unsigned char *)(a1 + a3[19]) = *(unsigned char *)(a2 + a3[19]);
  ((void (*)(uint64_t, uint64_t, uint64_t))v42)(a1 + v75, a2 + v75, v41);
  uint64_t v76 = a3[22];
  *(void *)(a1 + a3[21]) = *(void *)(a2 + a3[21]);
  uint64_t v77 = (void *)(a1 + v76);
  uint64_t v78 = (void *)(a2 + v76);
  uint64_t v79 = v78[1];
  *uint64_t v77 = *v78;
  v77[1] = v79;
  uint64_t v80 = a3[24];
  *(void *)(a1 + a3[23]) = *(void *)(a2 + a3[23]);
  *(void *)(a1 + v80) = *(void *)(a2 + v80);
  *(void *)(a1 + a3[25]) = *(void *)(a2 + a3[25]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for StaticMediaSystem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v104 = *(void **)(v6 - 8);
  uint64_t v111 = (void (*)(uint64_t, uint64_t, uint64_t))v104[3];
  v111(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  unint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v107 = a3;
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  uint64_t v16 = sub_251F34D20();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v17 + 48);
  unsigned int v19 = v18(v14, 1, v16);
  uint64_t v102 = (unsigned int (*)(char *, uint64_t, uint64_t))v18;
  unsigned int v20 = v18(v15, 1, v16);
  uint64_t v110 = v6;
  uint64_t v101 = v17;
  uint64_t v103 = v16;
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(void *, void *, uint64_t))(v17 + 16))(v14, v15, v16);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v20)
  {
    (*(void (**)(void *, uint64_t))(v17 + 8))(v14, v16);
LABEL_6:
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    memcpy(v14, v15, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v17 + 24))(v14, v15, v16);
LABEL_7:
  uint64_t v22 = v107;
  uint64_t v23 = v107[8];
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (void *)(a2 + v23);
  void *v24 = *v25;
  v24[1] = v25[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v107[9]) = *(unsigned char *)(a2 + v107[9]);
  *(unsigned char *)(a1 + v107[10]) = *(unsigned char *)(a2 + v107[10]);
  *(unsigned char *)(a1 + v107[11]) = *(unsigned char *)(a2 + v107[11]);
  *(unsigned char *)(a1 + v107[12]) = *(unsigned char *)(a2 + v107[12]);
  *(unsigned char *)(a1 + v107[13]) = *(unsigned char *)(a2 + v107[13]);
  *(unsigned char *)(a1 + v107[14]) = *(unsigned char *)(a2 + v107[14]);
  *(unsigned char *)(a1 + v107[15]) = *(unsigned char *)(a2 + v107[15]);
  uint64_t v26 = v107[16];
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = (void *)(a2 + v26);
  *uint64_t v27 = *v28;
  v27[1] = v28[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + v107[17]) = *(void *)(a2 + v107[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v29 = v107[18];
  uint64_t v30 = a1 + v29;
  uint64_t v31 = (char *)(a2 + v29);
  uint64_t v32 = type metadata accessor for StaticSoftwareUpdate(0);
  uint64_t v33 = *(void *)(v32 - 8);
  uint64_t v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v33 + 48);
  uint64_t v35 = v30;
  LODWORD(v30) = v34(v30, 1, v32);
  int v36 = v34((uint64_t)v31, 1, v32);
  if (v30)
  {
    uint64_t v37 = v110;
    if (!v36)
    {
      uint64_t v38 = (void (*)(uint64_t, char *, uint64_t))v104[2];
      v38(v35, v31, v110);
      uint64_t v39 = *(int *)(v32 + 20);
      uint64_t v108 = v35;
      uint64_t v40 = (void *)(v35 + v39);
      uint64_t v41 = &v31[v39];
      id v105 = (void *)type metadata accessor for StaticSoftwareUpdate.Kind(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v67 = v40;
        *uint64_t v40 = *(void *)v41;
        v40[1] = *((void *)v41 + 1);
        uint64_t updated = type metadata accessor for StaticSoftwareUpdateMetadata(0);
        uint64_t v69 = *(int *)(updated + 20);
        uint64_t v99 = updated;
        __dst = (char *)v40 + v69;
        uint64_t v70 = &v41[v69];
        swift_bridgeObjectRetain();
        __src = v70;
        if (v102(v70, 1, v103))
        {
LABEL_26:
          uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
          memcpy(__dst, __src, *(void *)(*(void *)(v73 - 8) + 64));
LABEL_34:
          uint64_t v80 = *(int *)(v99 + 24);
          uint64_t v81 = (void *)((char *)v67 + v80);
          uint64_t v82 = &v41[v80];
          *uint64_t v81 = *(void *)v82;
          v81[1] = *((void *)v82 + 1);
          uint64_t v83 = *(int *)(v99 + 28);
          uint64_t v84 = (void *)((char *)v67 + v83);
          uint64_t v85 = &v41[v83];
          *uint64_t v84 = *(void *)v85;
          v84[1] = *((void *)v85 + 1);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
          *((unsigned char *)v67 + *(int *)(v86 + 48)) = v41[*(int *)(v86 + 48)];
          goto LABEL_35;
        }
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          if (EnumCaseMultiPayload)
          {
            memcpy(v40, v41, *(void *)(*(v105 - 1) + 64));
LABEL_36:
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v33 + 56))(v108, 0, 1, v32);
            goto LABEL_37;
          }
          v38((uint64_t)v40, v41, v110);
          uint64_t v43 = (int *)type metadata accessor for StaticHH2Update(0);
          *((unsigned char *)v40 + v43[5]) = v41[v43[5]];
          uint64_t v44 = v43[6];
          uint64_t v45 = (void *)((char *)v40 + v44);
          uint64_t v46 = &v41[v44];
          *uint64_t v45 = *(void *)v46;
          v45[1] = *((void *)v46 + 1);
          uint64_t v47 = v43[7];
          uint64_t v48 = (char *)v40 + v47;
          uint64_t v49 = &v41[v47];
          char v50 = v49[8];
          *(void *)uint64_t v48 = *(void *)v49;
          v48[8] = v50;
          swift_bridgeObjectRetain();
LABEL_35:
          swift_storeEnumTagMultiPayload();
          goto LABEL_36;
        }
        uint64_t v67 = v40;
        *uint64_t v40 = *(void *)v41;
        v40[1] = *((void *)v41 + 1);
        uint64_t v71 = type metadata accessor for StaticSoftwareUpdateMetadata(0);
        uint64_t v72 = *(int *)(v71 + 20);
        uint64_t v99 = v71;
        __dst = (char *)v40 + v72;
        uint64_t v70 = &v41[v72];
        swift_bridgeObjectRetain();
        __src = v70;
        if (v102(v70, 1, v103)) {
          goto LABEL_26;
        }
      }
      (*(void (**)(char *, char *, uint64_t))(v101 + 16))(__dst, v70, v103);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v101 + 56))(__dst, 0, 1, v103);
      uint64_t v67 = v40;
      goto LABEL_34;
    }
    goto LABEL_15;
  }
  uint64_t v37 = v110;
  if (!v36)
  {
    v111(v35, (uint64_t)v31, v110);
    if (a1 == a2) {
      goto LABEL_37;
    }
    uint64_t v54 = *(int *)(v32 + 20);
    uint64_t v55 = (void *)(v35 + v54);
    uint64_t v56 = &v31[v54];
    sub_251DEE59C(v35 + v54, type metadata accessor for StaticSoftwareUpdate.Kind);
    uint64_t v57 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
    int v58 = swift_getEnumCaseMultiPayload();
    switch(v58)
    {
      case 2:
        *uint64_t v55 = *(void *)v56;
        v55[1] = *((void *)v56 + 1);
        uint64_t v74 = type metadata accessor for StaticSoftwareUpdateMetadata(0);
        uint64_t v75 = *(int *)(v74 + 20);
        uint64_t v106 = (char *)v55 + v75;
        uint64_t v109 = v74;
        uint64_t v76 = &v56[v75];
        swift_bridgeObjectRetain();
        if (v102(v76, 1, v103))
        {
LABEL_29:
          uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
          memcpy(v106, v76, *(void *)(*(void *)(v77 - 8) + 64));
LABEL_39:
          uint64_t v91 = *(int *)(v109 + 24);
          uint64_t v92 = (void *)((char *)v55 + v91);
          uint64_t v93 = &v56[v91];
          *uint64_t v92 = *(void *)v93;
          v92[1] = *((void *)v93 + 1);
          uint64_t v94 = *(int *)(v109 + 28);
          uint64_t v95 = (void *)((char *)v55 + v94);
          uint64_t v96 = &v56[v94];
          *uint64_t v95 = *(void *)v96;
          v95[1] = *((void *)v96 + 1);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
          *((unsigned char *)v55 + *(int *)(v97 + 48)) = v56[*(int *)(v97 + 48)];
          swift_storeEnumTagMultiPayload();
          goto LABEL_37;
        }
        break;
      case 1:
        *uint64_t v55 = *(void *)v56;
        v55[1] = *((void *)v56 + 1);
        uint64_t v78 = type metadata accessor for StaticSoftwareUpdateMetadata(0);
        uint64_t v79 = *(int *)(v78 + 20);
        uint64_t v106 = (char *)v55 + v79;
        uint64_t v109 = v78;
        uint64_t v76 = &v56[v79];
        swift_bridgeObjectRetain();
        if (v102(v76, 1, v103)) {
          goto LABEL_29;
        }
        break;
      case 0:
        ((void (*)(void *, char *, uint64_t))v104[2])(v55, v56, v110);
        uint64_t v59 = (int *)type metadata accessor for StaticHH2Update(0);
        *((unsigned char *)v55 + v59[5]) = v56[v59[5]];
        uint64_t v60 = v59[6];
        uint64_t v61 = (void *)((char *)v55 + v60);
        uint64_t v62 = &v56[v60];
        *uint64_t v61 = *(void *)v62;
        v61[1] = *((void *)v62 + 1);
        uint64_t v63 = v59[7];
        uint64_t v64 = (char *)v55 + v63;
        uint64_t v65 = &v56[v63];
        char v66 = v65[8];
        *(void *)uint64_t v64 = *(void *)v65;
        v64[8] = v66;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        goto LABEL_37;
      default:
        size_t v51 = *(void *)(*(void *)(v57 - 8) + 64);
        uint64_t v52 = v55;
        uint64_t v53 = v56;
        goto LABEL_16;
    }
    (*(void (**)(char *, char *, uint64_t))(v101 + 16))(v106, v76, v103);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v101 + 56))(v106, 0, 1, v103);
    goto LABEL_39;
  }
  sub_251DEE59C(v35, type metadata accessor for StaticSoftwareUpdate);
LABEL_15:
  size_t v51 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120) - 8) + 64);
  uint64_t v52 = (void *)v35;
  uint64_t v53 = v31;
LABEL_16:
  memcpy(v52, v53, v51);
LABEL_37:
  *(unsigned char *)(a1 + v22[19]) = *(unsigned char *)(a2 + v22[19]);
  v111(a1 + v22[20], a2 + v22[20], v37);
  *(void *)(a1 + v22[21]) = *(void *)(a2 + v22[21]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v87 = v22[22];
  uint64_t v88 = (void *)(a1 + v87);
  int v89 = (void *)(a2 + v87);
  *uint64_t v88 = *v89;
  v88[1] = v89[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + v22[23]) = *(void *)(a2 + v22[23]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + v22[24]) = *(void *)(a2 + v22[24]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + v22[25]) = *(void *)(a2 + v22[25]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for StaticMediaSystem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  size_t v51 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  uint64_t v52 = v6;
  v51(a1, a2);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[7];
  unint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  uint64_t v11 = sub_251F34D20();
  uint64_t v12 = *(void *)(v11 - 8);
  char v50 = *(unsigned int (**)(void))(v12 + 48);
  if (((unsigned int (*)(const void *, uint64_t, uint64_t))v50)(v10, 1, v11))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v14 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v14) = *(unsigned char *)(a2 + v14);
  uint64_t v15 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(unsigned char *)(a1 + v15) = *(unsigned char *)(a2 + v15);
  uint64_t v16 = a3[13];
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  *(unsigned char *)(a1 + v16) = *(unsigned char *)(a2 + v16);
  uint64_t v17 = a3[15];
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  *(unsigned char *)(a1 + v17) = *(unsigned char *)(a2 + v17);
  uint64_t v18 = a3[17];
  *(_OWORD *)(a1 + a3[16]) = *(_OWORD *)(a2 + a3[16]);
  *(void *)(a1 + v18) = *(void *)(a2 + v18);
  uint64_t v19 = a3[18];
  unsigned int v20 = (char *)(a1 + v19);
  uint64_t v21 = (char *)(a2 + v19);
  uint64_t v22 = type metadata accessor for StaticSoftwareUpdate(0);
  uint64_t v23 = *(void *)(v22 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
  {
    uint64_t v48 = v23;
    ((void (*)(char *, char *, uint64_t))v51)(v20, v21, v52);
    uint64_t v25 = *(int *)(v22 + 20);
    uint64_t v49 = v20;
    uint64_t v26 = &v20[v25];
    uint64_t v27 = &v21[v25];
    uint64_t v47 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
      uint64_t updated = type metadata accessor for StaticSoftwareUpdateMetadata(0);
      uint64_t v34 = *(int *)(updated + 20);
      __dst = &v26[v34];
      uint64_t v46 = updated;
      uint64_t v35 = &v27[v34];
      if (v50())
      {
LABEL_13:
        uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
        memcpy(__dst, v35, *(void *)(*(void *)(v38 - 8) + 64));
LABEL_17:
        uint64_t v39 = v49;
        *(_OWORD *)&v26[*(int *)(v46 + 24)] = *(_OWORD *)&v27[*(int *)(v46 + 24)];
        *(_OWORD *)&v26[*(int *)(v46 + 28)] = *(_OWORD *)&v27[*(int *)(v46 + 28)];
        uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
        v26[*(int *)(v40 + 48)] = v27[*(int *)(v40 + 48)];
        swift_storeEnumTagMultiPayload();
LABEL_18:
        (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v39, 0, 1, v22);
        goto LABEL_19;
      }
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v26, v27, *(void *)(*(void *)(v47 - 8) + 64));
        }
        else
        {
          ((void (*)(char *, char *, uint64_t))v51)(v26, v27, v52);
          uint64_t v29 = (int *)type metadata accessor for StaticHH2Update(0);
          v26[v29[5]] = v27[v29[5]];
          *(_OWORD *)&v26[v29[6]] = *(_OWORD *)&v27[v29[6]];
          uint64_t v30 = v29[7];
          uint64_t v31 = &v26[v30];
          uint64_t v32 = &v27[v30];
          v31[8] = v32[8];
          *(void *)uint64_t v31 = *(void *)v32;
          swift_storeEnumTagMultiPayload();
        }
        uint64_t v39 = v49;
        goto LABEL_18;
      }
      *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
      uint64_t v36 = type metadata accessor for StaticSoftwareUpdateMetadata(0);
      uint64_t v37 = *(int *)(v36 + 20);
      __dst = &v26[v37];
      uint64_t v46 = v36;
      uint64_t v35 = &v27[v37];
      if (v50()) {
        goto LABEL_13;
      }
    }
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(__dst, v35, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    goto LABEL_17;
  }
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
  memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
LABEL_19:
  uint64_t v41 = a3[20];
  *(unsigned char *)(a1 + a3[19]) = *(unsigned char *)(a2 + a3[19]);
  ((void (*)(uint64_t, uint64_t, uint64_t))v51)(a1 + v41, a2 + v41, v52);
  uint64_t v42 = a3[22];
  *(void *)(a1 + a3[21]) = *(void *)(a2 + a3[21]);
  *(_OWORD *)(a1 + v42) = *(_OWORD *)(a2 + v42);
  uint64_t v43 = a3[24];
  *(void *)(a1 + a3[23]) = *(void *)(a2 + a3[23]);
  *(void *)(a1 + v43) = *(void *)(a2 + v43);
  *(void *)(a1 + a3[25]) = *(void *)(a2 + a3[25]);
  return a1;
}

uint64_t assignWithTake for StaticMediaSystem(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v95 = *(void *)(v6 - 8);
  uint64_t v102 = *(void (**)(uint64_t, uint64_t, uint64_t))(v95 + 40);
  v102(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  unint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v97 = a2;
  uint64_t v17 = a3[7];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (const void *)(a2 + v17);
  uint64_t v20 = sub_251F34D20();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(unsigned int (**)(void))(v21 + 48);
  int v23 = ((uint64_t (*)(void *, uint64_t, uint64_t))v22)(v18, 1, v20);
  uint64_t v94 = v22;
  int v24 = ((uint64_t (*)(const void *, uint64_t, uint64_t))v22)(v19, 1, v20);
  uint64_t v101 = v6;
  uint64_t v93 = v21;
  if (v23)
  {
    if (v24)
    {
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
      memcpy(v18, v19, *(void *)(*(void *)(v25 - 8) + 64));
      uint64_t v26 = v20;
    }
    else
    {
      uint64_t v26 = v20;
      (*(void (**)(void *, const void *, uint64_t))(v21 + 32))(v18, v19, v20);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
  }
  else
  {
    uint64_t v26 = v20;
    if (v24)
    {
      (*(void (**)(void *, uint64_t))(v21 + 8))(v18, v20);
      uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
      memcpy(v18, v19, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v21 + 40))(v18, v19, v20);
    }
  }
  uint64_t v28 = v97;
  uint64_t v29 = a3[8];
  uint64_t v30 = (void *)(a1 + v29);
  uint64_t v31 = (uint64_t *)(v97 + v29);
  uint64_t v33 = *v31;
  uint64_t v32 = v31[1];
  *uint64_t v30 = v33;
  v30[1] = v32;
  swift_bridgeObjectRelease();
  uint64_t v34 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(v97 + a3[9]);
  *(unsigned char *)(a1 + v34) = *(unsigned char *)(v97 + v34);
  uint64_t v35 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(v97 + a3[11]);
  *(unsigned char *)(a1 + v35) = *(unsigned char *)(v97 + v35);
  uint64_t v36 = a3[14];
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(v97 + a3[13]);
  *(unsigned char *)(a1 + v36) = *(unsigned char *)(v97 + v36);
  uint64_t v37 = a3[16];
  *(unsigned char *)(a1 + a3[15]) = *(unsigned char *)(v97 + a3[15]);
  uint64_t v38 = (void *)(a1 + v37);
  uint64_t v39 = (uint64_t *)(v97 + v37);
  uint64_t v41 = *v39;
  uint64_t v40 = v39[1];
  *uint64_t v38 = v41;
  v38[1] = v40;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[17]) = *(void *)(v97 + a3[17]);
  swift_bridgeObjectRelease();
  uint64_t v42 = a3[18];
  uint64_t v43 = a1 + v42;
  uint64_t v44 = (char *)(v97 + v42);
  uint64_t v45 = type metadata accessor for StaticSoftwareUpdate(0);
  uint64_t v99 = *(void **)(v45 - 8);
  uint64_t v46 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v99[6];
  uint64_t v47 = v43;
  LODWORD(v43) = v46(v43, 1, v45);
  int v48 = v46((uint64_t)v44, 1, v45);
  if (v43)
  {
    uint64_t v49 = v101;
    if (!v48)
    {
      uint64_t v98 = v26;
      char v50 = *(void (**)(uint64_t, char *, uint64_t))(v95 + 32);
      v50(v47, v44, v101);
      uint64_t v51 = *(int *)(v45 + 20);
      uint64_t v52 = (_OWORD *)(v47 + v51);
      uint64_t v53 = &v44[v51];
      uint64_t v96 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        *uint64_t v52 = *(_OWORD *)v53;
        uint64_t updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        uint64_t v72 = updated[5];
        __dst = (char *)v52 + v72;
        uint64_t v92 = v52;
        uint64_t v73 = &v53[v72];
        if (v94())
        {
LABEL_26:
          uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
          memcpy(__dst, v73, *(void *)(*(void *)(v75 - 8) + 64));
LABEL_35:
          uint64_t v76 = v47;
          *(_OWORD *)((char *)v92 + updated[6]) = *(_OWORD *)&v53[updated[6]];
          *(_OWORD *)((char *)v92 + updated[7]) = *(_OWORD *)&v53[updated[7]];
          uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
          *((unsigned char *)v92 + *(int *)(v82 + 48)) = v53[*(int *)(v82 + 48)];
          swift_storeEnumTagMultiPayload();
LABEL_36:
          ((void (*)(uint64_t, void, uint64_t, uint64_t))v99[7])(v76, 0, 1, v45);
          goto LABEL_37;
        }
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          if (EnumCaseMultiPayload)
          {
            memcpy(v52, v53, *(void *)(*(void *)(v96 - 8) + 64));
          }
          else
          {
            v50((uint64_t)v52, v53, v101);
            uint64_t v55 = (int *)type metadata accessor for StaticHH2Update(0);
            *((unsigned char *)v52 + v55[5]) = v53[v55[5]];
            *(_OWORD *)((char *)v52 + v55[6]) = *(_OWORD *)&v53[v55[6]];
            uint64_t v56 = v55[7];
            uint64_t v57 = (char *)v52 + v56;
            int v58 = &v53[v56];
            v57[8] = v58[8];
            *(void *)uint64_t v57 = *(void *)v58;
            swift_storeEnumTagMultiPayload();
          }
          uint64_t v76 = v47;
          goto LABEL_36;
        }
        *uint64_t v52 = *(_OWORD *)v53;
        uint64_t updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        uint64_t v74 = updated[5];
        __dst = (char *)v52 + v74;
        uint64_t v92 = v52;
        uint64_t v73 = &v53[v74];
        if (v94()) {
          goto LABEL_26;
        }
      }
      (*(void (**)(char *, char *))(v93 + 32))(__dst, v73);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v93 + 56))(__dst, 0, 1, v98);
      goto LABEL_35;
    }
    goto LABEL_16;
  }
  uint64_t v49 = v101;
  if (!v48)
  {
    v102(v47, (uint64_t)v44, v101);
    if (a1 == v97) {
      goto LABEL_37;
    }
    uint64_t v62 = *(int *)(v45 + 20);
    uint64_t v63 = (_OWORD *)(v47 + v62);
    uint64_t v64 = &v44[v62];
    sub_251DEE59C(v47 + v62, type metadata accessor for StaticSoftwareUpdate.Kind);
    uint64_t v65 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
    int v66 = swift_getEnumCaseMultiPayload();
    switch(v66)
    {
      case 2:
        *uint64_t v63 = *(_OWORD *)v64;
        uint64_t v77 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        uint64_t v78 = v77[5];
        uint64_t v100 = (char *)v63 + v78;
        uint64_t v79 = &v64[v78];
        if (((unsigned int (*)(char *, uint64_t, uint64_t))v94)(&v64[v78], 1, v26))
        {
LABEL_30:
          uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
          memcpy(v100, v79, *(void *)(*(void *)(v80 - 8) + 64));
LABEL_39:
          *(_OWORD *)((char *)v63 + v77[6]) = *(_OWORD *)&v64[v77[6]];
          *(_OWORD *)((char *)v63 + v77[7]) = *(_OWORD *)&v64[v77[7]];
          uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
          *((unsigned char *)v63 + *(int *)(v90 + 48)) = v64[*(int *)(v90 + 48)];
          swift_storeEnumTagMultiPayload();
          goto LABEL_37;
        }
        break;
      case 1:
        *uint64_t v63 = *(_OWORD *)v64;
        uint64_t v77 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        uint64_t v81 = v77[5];
        uint64_t v100 = (char *)v63 + v81;
        uint64_t v79 = &v64[v81];
        if (((unsigned int (*)(char *, uint64_t, uint64_t))v94)(&v64[v81], 1, v26)) {
          goto LABEL_30;
        }
        break;
      case 0:
        (*(void (**)(_OWORD *, char *, uint64_t))(v95 + 32))(v63, v64, v101);
        uint64_t v67 = (int *)type metadata accessor for StaticHH2Update(0);
        *((unsigned char *)v63 + v67[5]) = v64[v67[5]];
        *(_OWORD *)((char *)v63 + v67[6]) = *(_OWORD *)&v64[v67[6]];
        uint64_t v68 = v67[7];
        uint64_t v69 = (char *)v63 + v68;
        uint64_t v70 = &v64[v68];
        v69[8] = v70[8];
        *(void *)uint64_t v69 = *(void *)v70;
        swift_storeEnumTagMultiPayload();
        goto LABEL_37;
      default:
        size_t v59 = *(void *)(*(void *)(v65 - 8) + 64);
        uint64_t v60 = v63;
        uint64_t v61 = v64;
        goto LABEL_17;
    }
    (*(void (**)(char *, char *, uint64_t))(v93 + 32))(v100, v79, v26);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v93 + 56))(v100, 0, 1, v26);
    goto LABEL_39;
  }
  sub_251DEE59C(v47, type metadata accessor for StaticSoftwareUpdate);
LABEL_16:
  size_t v59 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120) - 8) + 64);
  uint64_t v60 = (void *)v47;
  uint64_t v61 = v44;
LABEL_17:
  memcpy(v60, v61, v59);
LABEL_37:
  uint64_t v83 = a3[20];
  *(unsigned char *)(a1 + a3[19]) = *(unsigned char *)(v28 + a3[19]);
  v102(a1 + v83, v28 + v83, v49);
  *(void *)(a1 + a3[21]) = *(void *)(v28 + a3[21]);
  swift_bridgeObjectRelease();
  uint64_t v84 = a3[22];
  uint64_t v85 = (void *)(a1 + v84);
  uint64_t v86 = (uint64_t *)(v28 + v84);
  uint64_t v88 = *v86;
  uint64_t v87 = v86[1];
  *uint64_t v85 = v88;
  v85[1] = v87;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[23]) = *(void *)(v28 + a3[23]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[24]) = *(void *)(v28 + a3[24]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[25]) = *(void *)(v28 + a3[25]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StaticMediaSystem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251DED3AC);
}

uint64_t sub_251DED3AC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    unint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_9:
    return v9(v10, a2, v8);
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v11 = *(void *)(a1 + a3[5] + 8);
    if (v11 >= 0xFFFFFFFF) {
      LODWORD(v11) = -1;
    }
    return (v11 + 1);
  }
  else
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    uint64_t v14 = *(void *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a2)
    {
      uint64_t v8 = v13;
      uint64_t v10 = a1 + a3[7];
      unint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
      goto LABEL_9;
    }
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a3[18];
    return v16(v18, a2, v17);
  }
}

uint64_t storeEnumTagSinglePayload for StaticMediaSystem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251DED54C);
}

uint64_t sub_251DED54C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = sub_251F34DA0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_7:
    return v11(v12, a2, a2, v10);
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[5] + 8) = (a2 - 1);
    return result;
  }
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + a4[7];
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_7;
  }
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v17 = v15;
  uint64_t v18 = a1 + a4[18];
  return v16(v18, a2, a2, v17);
}

void sub_251DED6D8()
{
  sub_251F34DA0();
  if (v0 <= 0x3F)
  {
    sub_251DED868(319, (unint64_t *)&qword_26B21FD28, MEMORY[0x270FA9330]);
    if (v1 <= 0x3F)
    {
      sub_251DED868(319, &qword_26B220B48, (void (*)(uint64_t))type metadata accessor for StaticSoftwareUpdate);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_251DED868(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_251F36190();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for StaticMediaSystem.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 21 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 21) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEA)
  {
    unsigned int v6 = ((a2 - 235) >> 8) + 1;
    *uint64_t result = a2 + 21;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251DED988);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 21;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticMediaSystem.CodingKeys()
{
  return &type metadata for StaticMediaSystem.CodingKeys;
}

unint64_t sub_251DED9C4()
{
  unint64_t result = qword_269BA3A50;
  if (!qword_269BA3A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3A50);
  }
  return result;
}

unint64_t sub_251DEDA1C()
{
  unint64_t result = qword_269BA3A58;
  if (!qword_269BA3A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3A58);
  }
  return result;
}

unint64_t sub_251DEDA74()
{
  unint64_t result = qword_269BA3A60;
  if (!qword_269BA3A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3A60);
  }
  return result;
}

uint64_t sub_251DEDAC8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x79726F6765746163 && a2 == 0xE800000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6564644165746164 && a2 == 0xE900000000000064 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x626D79536E6F6369 && a2 == 0xEA00000000006C6FLL || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x656C62756F447369 && a2 == 0xEC00000068676948 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x69726F7661467369 && a2 == 0xEA00000000006574 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000251F70F70 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x7461706D6F437369 && a2 == 0xEC000000656C6269 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6168636165527369 && a2 == 0xEB00000000656C62 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000251F70FD0 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6B63616279616C70 && a2 == 0xED00006574617453 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000251F70FF0 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x736D6F74706D7973 && a2 == 0xE800000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x6572617774666F73 && a2 == 0xEE00657461647055 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000251F71010 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0x6449656D6F68 && a2 == 0xE600000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0x7364496D6F6F72 && a2 == 0xE700000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0x656D614E6D6F6F72 && a2 == 0xE800000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0x726F737365636361 && a2 == 0xEC00000073644979 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0x6449656369766564 && a2 == 0xE900000000000073 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0xD000000000000025 && a2 == 0x8000000251F71D60)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 21;
    }
    else {
      return 22;
    }
  }
}

uint64_t sub_251DEE3E0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_251DEE428()
{
  unint64_t result = qword_26B21EB08;
  if (!qword_26B21EB08)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B21EB08);
  }
  return result;
}

uint64_t sub_251DEE468(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticMediaSystem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_251DEE4CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_251DEE534(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_251DEE59C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t HMMediaSystem.dateAdded.getter@<X0>(uint64_t a1@<X8>)
{
  id v3 = objc_msgSend(v1, sel_applicationData);
  uint64_t v4 = (void *)sub_251F356C0();
  id v5 = objc_msgSend(v3, sel_objectForKeyedSubscript_, v4);

  if (!v5) {
    goto LABEL_5;
  }
  id v23 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB50);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_5;
  }
  uint64_t v7 = v21;
  unint64_t v6 = v22;
  sub_251A1A568(0, &qword_269BA5580);
  sub_251A1A568(0, &qword_269BA3988);
  uint64_t v8 = sub_251F35FE0();
  unint64_t v11 = (void *)v8;
  if (!v8)
  {
    sub_251A1AD94(v21, v22);
LABEL_5:
    uint64_t v9 = sub_251F34D20();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(a1, 1, 1, v9);
  }
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_251F34D20();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
  v17(v14, 1, 1, v15);
  sub_251DDF544();
  sub_251F36740();
  sub_251A1AD94(v7, v6);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    uint64_t v18 = a1;
    uint64_t v19 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(a1, v14, v15);
    uint64_t v18 = a1;
    uint64_t v19 = 0;
  }
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v17)(v18, v19, 1, v15);
}

uint64_t HMMediaSystem.isFavorite.getter()
{
  id v1 = objc_msgSend(v0, sel_applicationData);
  BOOL v2 = (void *)sub_251F356C0();
  id v3 = objc_msgSend(v1, sel_objectForKeyedSubscript_, v2);

  if (!v3) {
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB50);
  uint64_t result = swift_dynamicCast();
  if (result) {
    return v5;
  }
  return result;
}

uint64_t HMMediaSystem.shouldShowInDashboard.getter()
{
  return sub_251DEEE04();
}

void HMMediaSystem.shouldShowInDashboard.setter(char a1)
{
  id v3 = objc_msgSend(v1, sel_applicationData);
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A20]), sel_initWithBool_, a1 & 1);
  unsigned __int8 v5 = (void *)sub_251F356C0();
  objc_msgSend(v3, sel_setObject_forKeyedSubscript_, v4, v5);

  id v6 = objc_msgSend(v1, sel_applicationData);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v1;
  v10[4] = sub_251DEF924;
  v10[5] = v7;
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 1107296256;
  char v10[2] = sub_251C97A44;
  v10[3] = &block_descriptor_42;
  uint64_t v8 = _Block_copy(v10);
  id v9 = v1;
  swift_release();
  objc_msgSend(v9, sel_updateApplicationData_completionHandler_, v6, v8);
  _Block_release(v8);
}

uint64_t sub_251DEEB44()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void (*HMMediaSystem.shouldShowInDashboard.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = HMMediaSystem.shouldShowInDashboard.getter() & 1;
  return sub_251DEEBC8;
}

void sub_251DEEBC8(uint64_t a1)
{
}

void HMMediaSystem.isFavorite.setter(char a1)
{
  id v3 = objc_msgSend(v1, sel_applicationData);
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A20]), sel_initWithBool_, a1 & 1);
  unsigned __int8 v5 = (void *)sub_251F356C0();
  objc_msgSend(v3, sel_setObject_forKeyedSubscript_, v4, v5);

  id v6 = objc_msgSend(v1, sel_applicationData);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v1;
  v10[4] = sub_251DEF924;
  v10[5] = v7;
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 1107296256;
  char v10[2] = sub_251C97A44;
  v10[3] = &block_descriptor_6_3;
  uint64_t v8 = _Block_copy(v10);
  id v9 = v1;
  swift_release();
  objc_msgSend(v9, sel_updateApplicationData_completionHandler_, v6, v8);
  _Block_release(v8);
}

void (*HMMediaSystem.isFavorite.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = HMMediaSystem.isFavorite.getter() & 1;
  return sub_251DEEDC0;
}

void sub_251DEEDC0(uint64_t a1)
{
}

uint64_t HMMediaSystem.contributesToHomeStatus.getter()
{
  return sub_251DEEE04();
}

uint64_t sub_251DEEE04()
{
  id v1 = objc_msgSend(v0, sel_applicationData);
  BOOL v2 = (void *)sub_251F356C0();
  id v3 = objc_msgSend(v1, sel_objectForKeyedSubscript_, v2);

  if (v3 && (__swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB50), swift_dynamicCast())) {
    return v5;
  }
  else {
    return 1;
  }
}

void HMMediaSystem.contributesToHomeStatus.setter(char a1)
{
  id v3 = objc_msgSend(v1, sel_applicationData);
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A20]), sel_initWithBool_, a1 & 1);
  unsigned __int8 v5 = (void *)sub_251F356C0();
  objc_msgSend(v3, sel_setObject_forKeyedSubscript_, v4, v5);

  id v6 = objc_msgSend(v1, sel_applicationData);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v1;
  v10[4] = sub_251DEF050;
  v10[5] = v7;
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 1107296256;
  char v10[2] = sub_251C97A44;
  v10[3] = &block_descriptor_13;
  uint64_t v8 = _Block_copy(v10);
  id v9 = v1;
  swift_release();
  objc_msgSend(v9, sel_updateApplicationData_completionHandler_, v6, v8);
  _Block_release(v8);
}

uint64_t sub_251DEF050(uint64_t a1)
{
  return sub_251DEF50C(a1, *(void **)(v1 + 16));
}

void (*HMMediaSystem.contributesToHomeStatus.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = HMMediaSystem.contributesToHomeStatus.getter() & 1;
  return sub_251DEF0B8;
}

void sub_251DEF0B8(uint64_t a1)
{
}

uint64_t sub_251DEF0E0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  MEMORY[0x270FA5388](v2 - 8);
  id v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251BB9660(a1, (uint64_t)v4);
  return HMMediaSystem.dateAdded.setter((uint64_t)v4);
}

uint64_t HMMediaSystem.dateAdded.setter(uint64_t a1)
{
  uint64_t v35 = *MEMORY[0x263EF8340];
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  MEMORY[0x270FA5388](v3 - 8);
  unsigned __int8 v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251BB9660(a1, (uint64_t)v5);
  uint64_t v6 = sub_251F34D20();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_251BB8758((uint64_t)v5);
    id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF908]), sel_init);
    uint64_t v30 = (void *)sub_251A1A568(0, &qword_269BA3988);
    *(void *)&long long aBlock = v8;
  }
  else
  {
    uint64_t v34 = v6;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v33);
    (*(void (**)(uint64_t *, char *, uint64_t))(v7 + 32))(boxed_opaque_existential_1, v5, v6);
    sub_251A0D578(v33, &aBlock);
  }
  uint64_t v10 = self;
  __swift_project_boxed_opaque_existential_1(&aBlock, (uint64_t)v30);
  uint64_t v11 = sub_251F36B00();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&aBlock);
  *(void *)&long long aBlock = 0;
  id v12 = objc_msgSend(v10, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v11, 1, &aBlock);
  swift_unknownObjectRelease();
  id v13 = (id)aBlock;
  if (v12)
  {
    uint64_t v14 = sub_251F34C20();
    unint64_t v16 = v15;

    id v17 = objc_msgSend(v1, sel_applicationData);
    uint64_t v18 = (void *)sub_251F34BF0();
    uint64_t v19 = (void *)sub_251F356C0();
    objc_msgSend(v17, sel_setObject_forKeyedSubscript_, v18, v19);

    id v20 = objc_msgSend(v1, sel_applicationData);
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = v1;
    uint64_t v31 = sub_251DEF924;
    uint64_t v32 = v21;
    *(void *)&long long aBlock = MEMORY[0x263EF8330];
    *((void *)&aBlock + 1) = 1107296256;
    uint64_t v29 = sub_251C97A44;
    uint64_t v30 = &block_descriptor_20_0;
    unint64_t v22 = _Block_copy(&aBlock);
    id v23 = v1;
    swift_release();
    objc_msgSend(v23, sel_updateApplicationData_completionHandler_, v20, v22);
    _Block_release(v22);

    sub_251A1AD94(v14, v16);
  }
  else
  {
    int v24 = v13;
    uint64_t v25 = (void *)sub_251F34A30();

    swift_willThrow();
  }
  return sub_251BB8758(a1);
}

uint64_t sub_251DEF50C(uint64_t a1, void *a2)
{
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x270FA5388](updated);
  unsigned __int8 v5 = (uint64_t *)((char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB8);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  id v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B2200D8 != -1) {
    swift_once();
  }
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BD0);
  __swift_project_value_buffer(v10, (uint64_t)qword_26B21FF20);
  *unsigned __int8 v5 = objc_msgSend(a2, sel_home);
  swift_storeEnumTagMultiPayload();
  sub_251F35CF0();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

void (*HMMediaSystem.dateAdded.modify(void *a1))(uint64_t a1, char a2)
{
  *a1 = v1;
  size_t v3 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20) - 8) + 64);
  a1[1] = v3;
  uint64_t v4 = malloc(v3);
  a1[2] = v4;
  HMMediaSystem.dateAdded.getter((uint64_t)v4);
  return sub_251DEF738;
}

void sub_251DEF738(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)(a1 + 16);
  if (a2)
  {
    MEMORY[0x270FA5388](a1);
    uint64_t v4 = (char *)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_251BB9660((uint64_t)v2, (uint64_t)v4);
    HMMediaSystem.dateAdded.setter((uint64_t)v4);
    sub_251BB8758((uint64_t)v2);
    free(v2);
  }
  else
  {
    HMMediaSystem.dateAdded.setter(*(void *)(a1 + 16));
    free(v2);
  }
}

uint64_t sub_251DEF7F4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = HMMediaSystem.shouldShowInDashboard.getter();
  *a1 = result & 1;
  return result;
}

void sub_251DEF824(char *a1)
{
}

uint64_t sub_251DEF84C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = HMMediaSystem.isFavorite.getter();
  *a1 = result & 1;
  return result;
}

void sub_251DEF87C(char *a1)
{
}

uint64_t sub_251DEF8A4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = HMMediaSystem.contributesToHomeStatus.getter();
  *a1 = result & 1;
  return result;
}

void sub_251DEF8D4(char *a1)
{
}

uint64_t sub_251DEF8FC@<X0>(uint64_t a1@<X8>)
{
  return HMMediaSystem.dateAdded.getter(a1);
}

uint64_t sub_251DEF94C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[8] = a4;
  v5[9] = v4;
  v5[6] = a2;
  v5[7] = a3;
  v5[5] = a1;
  type metadata accessor for StateSnapshot.UpdateType(0);
  v5[10] = swift_task_alloc();
  sub_251F35C80();
  v5[11] = sub_251F35C70();
  uint64_t v7 = sub_251F35C00();
  v5[12] = v7;
  v5[13] = v6;
  return MEMORY[0x270FA2498](sub_251DEFA18, v7, v6);
}

uint64_t sub_251DEFA18()
{
  unint64_t v15 = v0;
  if (qword_269B9C2E0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_251F350A0();
  v0[14] = __swift_project_value_buffer(v1, (uint64_t)qword_269BF30A8);
  uint64_t v2 = sub_251F35080();
  os_log_type_t v3 = sub_251F35FD0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    uint64_t v14 = v5;
    *(_DWORD *)uint64_t v4 = 136315138;
    v0[4] = sub_251A00E84(0xD000000000000022, 0x8000000251F6B3C0, &v14);
    sub_251F361D0();
    _os_log_impl(&dword_2519F3000, v2, v3, "%s Informing HomeKit it should send a timeline refresh", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v5, -1, -1);
    MEMORY[0x2533AC760](v4, -1, -1);
  }

  uint64_t v6 = (void *)swift_task_alloc();
  v0[15] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_251DEFC24;
  uint64_t v7 = v0[10];
  uint64_t v8 = v0[7];
  uint64_t v9 = v0[8];
  uint64_t v10 = v0[5];
  uint64_t v11 = v0[6];
  uint64_t v12 = MEMORY[0x263F8EE78];
  return WidgetManager.monitorAndFetchState(for:widgetIdentifier:kind:)(v7, v12, v10, v11, v8, v9);
}

uint64_t sub_251DEFC24()
{
  uint64_t v2 = *v1;
  (*v1)[16] = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v3 = v2[12];
    uint64_t v4 = v2[13];
    uint64_t v5 = sub_251DEFDF0;
  }
  else
  {
    sub_251DF7688(v2[10], type metadata accessor for StateSnapshot.UpdateType);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v3 = v2[12];
    uint64_t v4 = v2[13];
    uint64_t v5 = sub_251DEFD88;
  }
  return MEMORY[0x270FA2498](v5, v3, v4);
}

uint64_t sub_251DEFD88()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251DEFDF0()
{
  uint64_t v16 = v0;
  uint64_t v1 = (void *)v0[16];
  swift_release();
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_251F35080();
  os_log_type_t v5 = sub_251F35FB0();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (void *)v0[16];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v15 = v14;
    *(_DWORD *)uint64_t v7 = 136315394;
    v0[2] = sub_251A00E84(0xD000000000000022, 0x8000000251F6B3C0, &v15);
    sub_251F361D0();
    *(_WORD *)(v7 + 12) = 2112;
    id v9 = v6;
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    v0[3] = v10;
    sub_251F361D0();
    *uint64_t v8 = v10;

    _os_log_impl(&dword_2519F3000, v4, v5, "%s Unable to execute monitorAndFetchState call, will not try again. reason=%@", (uint8_t *)v7, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v8, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v14, -1, -1);
    MEMORY[0x2533AC760](v7, -1, -1);
  }
  else
  {
    uint64_t v11 = (void *)v0[16];
  }
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_251DF0038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  *(void *)(v8 + 88) = a6;
  *(void *)(v8 + 96) = v7;
  *(unsigned char *)(v8 + 168) = a7;
  *(void *)(v8 + 72) = a4;
  *(void *)(v8 + 80) = a5;
  *(void *)(v8 + 56) = a2;
  *(void *)(v8 + 64) = a3;
  *(void *)(v8 + 48) = a1;
  sub_251F35C80();
  *(void *)(v8 + 104) = sub_251F35C70();
  uint64_t v10 = sub_251F35C00();
  *(void *)(v8 + 112) = v10;
  *(void *)(v8 + 120) = v9;
  return MEMORY[0x270FA2498](sub_251DF00E0, v10, v9);
}

uint64_t sub_251DF00E0()
{
  uint64_t v46 = v0;
  id v1 = objc_msgSend(*(id *)(*(void *)(v0 + 96) + 184), sel_homes);
  sub_251A1A568(0, (unint64_t *)&qword_26B21F2D0);
  unint64_t v2 = sub_251F35AC0();

  v45[0] = MEMORY[0x263F8EE78];
  if (v2 >> 62) {
    goto LABEL_11;
  }
  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  for (; v3; uint64_t v3 = sub_251F366C0())
  {
    uint64_t v4 = 0;
    unint64_t v44 = v2 & 0xC000000000000001;
    while (1)
    {
      id v5 = v44 ? (id)MEMORY[0x2533AB3A0](v4, v2) : *(id *)(v2 + 8 * v4 + 32);
      uint64_t v6 = v5;
      uint64_t v7 = v4 + 1;
      if (__OFADD__(v4, 1)) {
        break;
      }
      uint64_t v8 = *(void *)(v0 + 88);
      id v9 = objc_msgSend(v5, sel_accessories);
      sub_251A1A568(0, (unint64_t *)&qword_26B21EAF8);
      unint64_t v10 = v2;
      unint64_t v11 = sub_251F35AC0();

      swift_bridgeObjectRetain();
      unint64_t v12 = sub_251DF7750(v11, v8);
      swift_bridgeObjectRelease();
      unint64_t v2 = v10;
      swift_bridgeObjectRelease();

      sub_251ED584C(v12);
      ++v4;
      if (v7 == v3)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v13 = v45[0];
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_11:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = MEMORY[0x263F8EE78];
LABEL_13:
  *(void *)(v0 + 128) = v13;
  char v14 = *(unsigned char *)(v0 + 168);
  swift_bridgeObjectRelease();
  if (v14)
  {
    if (qword_269B9C2E0 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_251F350A0();
    __swift_project_value_buffer(v15, (uint64_t)qword_269BF30A8);
    swift_bridgeObjectRetain_n();
    uint64_t v16 = sub_251F35080();
    os_log_type_t v17 = sub_251F35FD0();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = swift_slowAlloc();
      v45[0] = swift_slowAlloc();
      uint64_t v19 = v45[0];
      *(_DWORD *)uint64_t v18 = 136315394;
      *(void *)(v0 + 32) = sub_251A00E84(0xD000000000000033, 0x8000000251F6B5E0, v45);
      sub_251F361D0();
      *(_WORD *)(v18 + 12) = 2080;
      uint64_t v20 = sub_251F34DA0();
      uint64_t v21 = swift_bridgeObjectRetain();
      uint64_t v22 = MEMORY[0x2533AAA10](v21, v20);
      unint64_t v24 = v23;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 40) = sub_251A00E84(v22, v24, v45);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2519F3000, v16, v17, "%s Monitoring characteristics: %s", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v19, -1, -1);
      MEMORY[0x2533AC760](v18, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v35 = (void *)swift_task_alloc();
    *(void *)(v0 + 136) = v35;
    *uint64_t v35 = v0;
    v35[1] = sub_251DF07D8;
    uint64_t v36 = *(void *)(v0 + 72);
    uint64_t v37 = *(void *)(v0 + 80);
    uint64_t v38 = *(void *)(v0 + 56);
    uint64_t v39 = *(void *)(v0 + 64);
    uint64_t v40 = *(void *)(v0 + 48);
    return WidgetManager.monitorAndFetchState(for:widgetIdentifier:kind:)(v40, v13, v38, v39, v36, v37);
  }
  else
  {
    if (qword_269B9C2E0 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_251F350A0();
    __swift_project_value_buffer(v25, (uint64_t)qword_269BF30A8);
    swift_bridgeObjectRetain_n();
    uint64_t v26 = sub_251F35080();
    os_log_type_t v27 = sub_251F35FD0();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      v45[0] = v29;
      *(_DWORD *)uint64_t v28 = 136315394;
      *(void *)(v0 + 16) = sub_251A00E84(0xD000000000000033, 0x8000000251F6B5E0, v45);
      sub_251F361D0();
      *(_WORD *)(v28 + 12) = 2080;
      uint64_t v30 = sub_251F34DA0();
      uint64_t v31 = swift_bridgeObjectRetain();
      uint64_t v32 = MEMORY[0x2533AAA10](v31, v30);
      unint64_t v34 = v33;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 24) = sub_251A00E84(v32, v34, v45);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2519F3000, v26, v27, "%s Fetching characteristics: %s", (uint8_t *)v28, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v29, -1, -1);
      MEMORY[0x2533AC760](v28, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v42 = (void *)swift_task_alloc();
    *(void *)(v0 + 152) = v42;
    *uint64_t v42 = v0;
    v42[1] = sub_251DF09FC;
    uint64_t v43 = *(void *)(v0 + 48);
    return WidgetManager.fetchState(for:)(v43, v13);
  }
}

uint64_t sub_251DF07D8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 144) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 112);
    uint64_t v4 = *(void *)(v2 + 120);
    id v5 = sub_251DF0978;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v2 + 112);
    uint64_t v4 = *(void *)(v2 + 120);
    id v5 = sub_251DF0914;
  }
  return MEMORY[0x270FA2498](v5, v3, v4);
}

uint64_t sub_251DF0914()
{
  swift_release();
  id v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251DF0978()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  id v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251DF09FC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 160) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 120);
  uint64_t v4 = *(void *)(v2 + 112);
  if (v0) {
    id v5 = sub_251DF0BA4;
  }
  else {
    id v5 = sub_251DF0B38;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_251DF0B38()
{
  swift_bridgeObjectRelease();
  swift_release();
  id v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251DF0BA4()
{
  swift_release();
  swift_bridgeObjectRelease();
  id v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251DF0C14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  *(void *)(v8 + 88) = a6;
  *(void *)(v8 + 96) = v7;
  *(unsigned char *)(v8 + 168) = a7;
  *(void *)(v8 + 72) = a4;
  *(void *)(v8 + 80) = a5;
  *(void *)(v8 + 56) = a2;
  *(void *)(v8 + 64) = a3;
  *(void *)(v8 + 48) = a1;
  sub_251F35C80();
  *(void *)(v8 + 104) = sub_251F35C70();
  uint64_t v10 = sub_251F35C00();
  *(void *)(v8 + 112) = v10;
  *(void *)(v8 + 120) = v9;
  return MEMORY[0x270FA2498](sub_251DF0CBC, v10, v9);
}

uint64_t sub_251DF0CBC()
{
  uint64_t v40 = v0;
  int v1 = *(unsigned __int8 *)(v0 + 168);
  uint64_t v2 = *(void *)(v0 + 88);
  id v3 = objc_msgSend(*(id *)(*(void *)(v0 + 96) + 184), sel_homes);
  sub_251A1A568(0, (unint64_t *)&qword_26B21F2D0);
  unint64_t v4 = sub_251F35AC0();

  swift_bridgeObjectRetain();
  uint64_t v5 = sub_251DF7EE0(v4, v2);
  *(void *)(v0 + 128) = v5;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v1 == 1)
  {
    if (qword_269B9C2E0 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_251F350A0();
    __swift_project_value_buffer(v6, (uint64_t)qword_269BF30A8);
    swift_bridgeObjectRetain_n();
    uint64_t v7 = sub_251F35080();
    os_log_type_t v8 = sub_251F35FD0();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = swift_slowAlloc();
      uint64_t v37 = v5;
      v39[0] = swift_slowAlloc();
      uint64_t v10 = v39[0];
      *(_DWORD *)uint64_t v9 = 136315394;
      *(void *)(v0 + 32) = sub_251A00E84(0xD00000000000002ELL, 0x8000000251F6B5B0, v39);
      sub_251F361D0();
      *(_WORD *)(v9 + 12) = 2080;
      uint64_t v11 = sub_251F34DA0();
      uint64_t v12 = swift_bridgeObjectRetain();
      uint64_t v13 = MEMORY[0x2533AAA10](v12, v11);
      unint64_t v15 = v14;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 40) = sub_251A00E84(v13, v15, v39);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2519F3000, v7, v8, "%s Monitoring actionSets: %s", (uint8_t *)v9, 0x16u);
      swift_arrayDestroy();
      uint64_t v16 = v10;
      uint64_t v5 = v37;
      MEMORY[0x2533AC760](v16, -1, -1);
      MEMORY[0x2533AC760](v9, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v28 = (void *)swift_task_alloc();
    *(void *)(v0 + 136) = v28;
    *uint64_t v28 = v0;
    v28[1] = sub_251DF07D8;
    uint64_t v29 = *(void *)(v0 + 72);
    uint64_t v30 = *(void *)(v0 + 80);
    uint64_t v31 = *(void *)(v0 + 56);
    uint64_t v32 = *(void *)(v0 + 64);
    uint64_t v33 = *(void *)(v0 + 48);
    return WidgetManager.monitorAndFetchState(for:widgetIdentifier:kind:)(v33, v5, v31, v32, v29, v30);
  }
  else
  {
    if (qword_269B9C2E0 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_251F350A0();
    __swift_project_value_buffer(v17, (uint64_t)qword_269BF30A8);
    swift_bridgeObjectRetain_n();
    uint64_t v18 = sub_251F35080();
    os_log_type_t v19 = sub_251F35FD0();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = swift_slowAlloc();
      uint64_t v38 = v5;
      v39[0] = swift_slowAlloc();
      uint64_t v21 = v39[0];
      *(_DWORD *)uint64_t v20 = 136315394;
      *(void *)(v0 + 16) = sub_251A00E84(0xD00000000000002ELL, 0x8000000251F6B5B0, v39);
      sub_251F361D0();
      *(_WORD *)(v20 + 12) = 2080;
      uint64_t v22 = sub_251F34DA0();
      uint64_t v23 = swift_bridgeObjectRetain();
      uint64_t v24 = MEMORY[0x2533AAA10](v23, v22);
      unint64_t v26 = v25;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 24) = sub_251A00E84(v24, v26, v39);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2519F3000, v18, v19, "%s Fetching actionSets: %s", (uint8_t *)v20, 0x16u);
      swift_arrayDestroy();
      uint64_t v27 = v21;
      uint64_t v5 = v38;
      MEMORY[0x2533AC760](v27, -1, -1);
      MEMORY[0x2533AC760](v20, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v35 = (void *)swift_task_alloc();
    *(void *)(v0 + 152) = v35;
    *uint64_t v35 = v0;
    v35[1] = sub_251DF09FC;
    uint64_t v36 = *(void *)(v0 + 48);
    return WidgetManager.fetchState(for:)(v36, v5);
  }
}

uint64_t sub_251DF126C(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  v3[5] = updated;
  v3[6] = *(void *)(updated - 8);
  v3[7] = swift_task_alloc();
  v3[8] = swift_task_alloc();
  sub_251F35C80();
  v3[9] = sub_251F35C70();
  uint64_t v6 = sub_251F35C00();
  v3[10] = v6;
  v3[11] = v5;
  return MEMORY[0x270FA2498](sub_251DF1374, v6, v5);
}

uint64_t sub_251DF1374()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_269BA3A98);
  *(void *)(v0 + 96) = v2;
  uint64_t v3 = *(void *)(v1 + v2[9]);
  unint64_t v4 = (uint64_t *)(v1 + v2[11]);
  char v5 = *(unsigned char *)(v1 + v2[13]);
  *(unsigned char *)(v0 + 168) = v5;
  uint64_t v6 = *v4;
  *(void *)(v0 + 104) = *v4;
  uint64_t v7 = v4[1];
  *(void *)(v0 + 112) = v7;
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_269BA3AC0
                                                                                           + dword_269BA3AC0);
  uint64_t v8 = v4[2];
  *(void *)(v0 + 120) = v8;
  uint64_t v9 = v4[3];
  *(void *)(v0 + 128) = v9;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_251DF14A0;
  uint64_t v11 = *(void *)(v0 + 64);
  return v13(v11, v6, v7, v8, v9, v3, v5);
}

uint64_t sub_251DF14A0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 144) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 88);
  uint64_t v4 = *(void *)(v2 + 80);
  if (v0) {
    char v5 = sub_251DF17E8;
  }
  else {
    char v5 = sub_251DF15DC;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_251DF15DC()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 24) + *(int *)(*(void *)(v0 + 96) + 40));
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_269BA3AC8
                                                                                              + dword_269BA3AC8);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 152) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_251DF16AC;
  uint64_t v3 = *(void *)(v0 + 120);
  uint64_t v4 = *(void *)(v0 + 128);
  uint64_t v5 = *(void *)(v0 + 104);
  uint64_t v6 = *(void *)(v0 + 112);
  uint64_t v7 = *(unsigned __int8 *)(v0 + 168);
  uint64_t v8 = *(void *)(v0 + 56);
  return v10(v8, v5, v6, v3, v4, v1, v7);
}

uint64_t sub_251DF16AC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 160) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 88);
  uint64_t v4 = *(void *)(v2 + 80);
  if (v0) {
    uint64_t v5 = sub_251DF19A4;
  }
  else {
    uint64_t v5 = sub_251DF185C;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_251DF17E8()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251DF185C()
{
  uint64_t v1 = v0[8];
  uint64_t v3 = v0[6];
  uint64_t v2 = v0[7];
  uint64_t v4 = (void *)v0[2];
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CFB8);
  uint64_t v5 = *(void *)(v3 + 72);
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_251F3DAB0;
  uint64_t v8 = (void *)(v7 + v6);
  *uint64_t v8 = v4;
  swift_storeEnumTagMultiPayload();
  sub_251DF7620(v1, (uint64_t)v8 + v5, type metadata accessor for StateSnapshot.UpdateType);
  sub_251DF76E8(v2, (uint64_t)v8 + 2 * v5, type metadata accessor for StateSnapshot.UpdateType);
  id v9 = v4;
  sub_251DF7688(v1, type metadata accessor for StateSnapshot.UpdateType);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(uint64_t))v0[1];
  return v10(v7);
}

uint64_t sub_251DF19A4()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_release();
  sub_251DF7688(v1, type metadata accessor for StateSnapshot.UpdateType);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_251DF1A34(uint64_t a1, uint64_t a2)
{
  v3[15] = a2;
  v3[16] = v2;
  v3[14] = a1;
  v3[17] = *(void *)(type metadata accessor for StateSnapshot.UpdateType(0) - 8);
  v3[18] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for StateSnapshot(0);
  v3[19] = v5;
  v3[20] = *(void *)(v5 - 8);
  v3[21] = swift_task_alloc();
  v3[22] = swift_task_alloc();
  v3[23] = swift_task_alloc();
  v3[24] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2203A0);
  v3[25] = swift_task_alloc();
  v3[26] = swift_task_alloc();
  v3[27] = swift_task_alloc();
  v3[28] = swift_task_alloc();
  type metadata accessor for StaticHome();
  uint64_t v6 = swift_task_alloc();
  v3[29] = v6;
  uint64_t v7 = (void *)swift_task_alloc();
  v3[30] = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_251DF1C4C;
  return WidgetSnapshotModerator.find(home:orRecommended:)(v6, a2, 1);
}

uint64_t sub_251DF1C4C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 248) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 128);
  if (v0) {
    uint64_t v4 = sub_251DF2444;
  }
  else {
    uint64_t v4 = sub_251DF1D78;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_251DF1D78()
{
  uint64_t v1 = *(void *)(v0 + 232);
  uint64_t v2 = *(void **)(*(void *)(v0 + 128) + 184);
  *(void *)(v0 + 256) = v2;
  id v3 = objc_msgSend(v2, sel_homes);
  sub_251A1A568(0, (unint64_t *)&qword_26B21F2D0);
  unint64_t v4 = sub_251F35AC0();

  uint64_t v5 = swift_task_alloc();
  *(void *)(v5 + 16) = v1;
  uint64_t v6 = sub_251A95638(sub_251BAD3BC, v5, v4);
  *(void *)(v0 + 264) = v6;
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  sub_251DF7688(v1, (uint64_t (*)(void))type metadata accessor for StaticHome);
  if (v6)
  {
    uint64_t v7 = *(void *)(v0 + 128);
    id v8 = objc_msgSend(v6, sel_uniqueIdentifier);
    uint64_t v9 = sub_251F34DA0();
    uint64_t v10 = *(void *)(v9 - 8);
    *(void *)(v0 + 272) = *(void *)(v10 + 64);
    uint64_t v11 = swift_task_alloc();
    sub_251F34D80();

    swift_beginAccess();
    uint64_t v12 = *(void *)(v7 + 112);
    if (*(void *)(v12 + 16))
    {
      unint64_t v13 = sub_2519FE584(v11);
      uint64_t v14 = *(void *)(v0 + 224);
      uint64_t v16 = *(void *)(v0 + 152);
      uint64_t v15 = *(void *)(v0 + 160);
      if (v17)
      {
        sub_251DF7620(*(void *)(v12 + 56) + *(void *)(v15 + 72) * v13, *(void *)(v0 + 224), type metadata accessor for StateSnapshot);
        uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56);
        v18(v14, 0, 1, v16);
      }
      else
      {
        uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56);
        v18(*(void *)(v0 + 224), 1, 1, v16);
      }
    }
    else
    {
      uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 160) + 56);
      v18(*(void *)(v0 + 224), 1, 1, *(void *)(v0 + 152));
    }
    *(void *)(v0 + 280) = v18;
    uint64_t v25 = *(void *)(v0 + 224);
    uint64_t v26 = *(void *)(v0 + 152);
    uint64_t v27 = *(void *)(v0 + 160);
    swift_endAccess();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v11, v9);
    swift_task_dealloc();
    uint64_t v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27 + 48);
    if (v28(v25, 1, v26) == 1)
    {
      uint64_t v29 = *(void *)(v0 + 120);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
      uint64_t v30 = swift_task_alloc();
      *(void *)(v0 + 288) = v30;
      id v31 = objc_msgSend(v6, sel_uniqueIdentifier);
      uint64_t v32 = swift_task_alloc();
      *(void *)(v0 + 296) = v32;
      sub_251F34D80();

      (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v30, v32, v9);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(v30, 0, 1, v9);
      *(_DWORD *)(v0 + 368) = *(_DWORD *)(v29
                                        + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269BA3A98) + 48));
      uint64_t v33 = (void *)swift_task_alloc();
      *(void *)(v0 + 304) = v33;
      *uint64_t v33 = v0;
      v33[1] = sub_251DF252C;
      uint64_t v34 = *(void *)(v0 + 184);
      return sub_251B9C5E0(v34, v30, (_DWORD *)(v0 + 368));
    }
    else
    {
      uint64_t v35 = *(void *)(v0 + 216);
      uint64_t v36 = *(void *)(v0 + 152);
      sub_251A1B128(*(void *)(v0 + 224), v35, &qword_26B2203A0);
      uint64_t result = v28(v35, 1, v36);
      if (result == 1)
      {
        __break(1u);
      }
      else
      {
        sub_251DF76E8(*(void *)(v0 + 216), *(void *)(v0 + 184), type metadata accessor for StateSnapshot);
        uint64_t v37 = *(void *)(v0 + 264);
        sub_251DF76E8(*(void *)(v0 + 184), *(void *)(v0 + 192), type metadata accessor for StateSnapshot);
        *(void *)(v0 + 320) = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3A98);
        swift_beginAccess();
        uint64_t v38 = swift_bridgeObjectRetain();
        sub_251AC5D78(v38);
        swift_endAccess();
        swift_bridgeObjectRelease();
        swift_beginAccess();
        uint64_t v39 = swift_bridgeObjectRetain();
        sub_251AC5D78(v39);
        swift_endAccess();
        swift_bridgeObjectRelease();
        *(void *)(v0 + 328) = sub_251F35C80();
        *(void *)(v0 + 336) = sub_251F35C70();
        uint64_t v40 = (void *)swift_task_alloc();
        *(void *)(v0 + 344) = v40;
        *uint64_t v40 = v0;
        v40[1] = sub_251DF268C;
        uint64_t v41 = *(void *)(v0 + 120);
        return sub_251DF126C(v37, v41);
      }
    }
  }
  else
  {
    uint64_t v19 = *(void *)(v0 + 120);
    type metadata accessor for WidgetSnapshotModerator.Error();
    sub_251DF75C8();
    swift_allocError();
    uint64_t v21 = v20;
    sub_251A1B128(v19, v20, &qword_26B21FF90);
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v21, 0, 3, v22);
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v23 = *(uint64_t (**)(void))(v0 + 8);
    return v23();
  }
  return result;
}

uint64_t sub_251DF2444()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251DF252C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 312) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 128);
    sub_251A1B064(*(void *)(v2 + 288), &qword_26B21FF90);
    unint64_t v4 = sub_251DF2FB8;
    uint64_t v5 = v3;
  }
  else
  {
    uint64_t v6 = *(void *)(v2 + 288);
    uint64_t v7 = *(void *)(v2 + 128);
    sub_251A1B064(v6, &qword_26B21FF90);
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v4 = sub_251DF2E3C;
    uint64_t v5 = v7;
  }
  return MEMORY[0x270FA2498](v4, v5, 0);
}

uint64_t sub_251DF268C(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 352) = a1;
  *(void *)(v3 + 360) = v1;
  swift_task_dealloc();
  uint64_t v5 = sub_251F35C00();
  if (v1) {
    uint64_t v6 = sub_251DF2CAC;
  }
  else {
    uint64_t v6 = sub_251DF27EC;
  }
  return MEMORY[0x270FA2498](v6, v5, v4);
}

uint64_t sub_251DF27EC()
{
  uint64_t v1 = *(void *)(v0 + 352);
  uint64_t v2 = *(void *)(v0 + 192);
  uint64_t v3 = *(void *)(v0 + 176);
  swift_release();
  sub_251DF7620(v2, v3, type metadata accessor for StateSnapshot);
  uint64_t v4 = *(void *)(v1 + 16);
  if (v4)
  {
    uint64_t v5 = *(void *)(v0 + 136);
    uint64_t v29 = *(void *)(v0 + 120);
    uint64_t v6 = *(void *)(v0 + 352)
       + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v28 = *(int *)(*(void *)(v0 + 320) + 48);
    uint64_t v7 = *(void *)(v5 + 72);
    swift_bridgeObjectRetain();
    do
    {
      unint64_t v13 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 280);
      uint64_t v14 = *(void *)(v0 + 200);
      uint64_t v15 = *(void *)(v0 + 176);
      uint64_t v16 = *(void *)(v0 + 152);
      sub_251DF7620(v6, *(void *)(v0 + 144), type metadata accessor for StateSnapshot.UpdateType);
      sub_251DF7620(v15, v14, type metadata accessor for StateSnapshot);
      v13(v14, 0, 1, v16);
      int v17 = unk_27025FC84;
      if ((unk_27025FC84 & ~dword_27025FC80) == 0) {
        int v17 = 0;
      }
      int v18 = v17 | dword_27025FC80;
      int v19 = dword_27025FC88;
      if ((dword_27025FC88 & ~v18) == 0) {
        int v19 = 0;
      }
      int v20 = v19 | v18;
      uint64_t v21 = *(void **)(v0 + 256);
      uint64_t v22 = *(void **)(v0 + 264);
      if ((v20 & *(_DWORD *)(v29 + v28)) != 0)
      {
        uint64_t v23 = qword_26B21F398;
        id v24 = v21;
        id v25 = v22;
        if (v23 != -1) {
          swift_once();
        }
        uint64_t v10 = qword_26B21F5E0;
        swift_bridgeObjectRetain();
      }
      else
      {
        id v8 = v21;
        id v9 = v22;
        uint64_t v10 = sub_251C08B44((uint64_t)&unk_27025FC90);
        swift_arrayDestroy();
      }
      uint64_t v12 = *(void **)(v0 + 168);
      uint64_t v11 = *(void *)(v0 + 176);
      StateSnapshot.init(updateType:homeManager:home:previousStateSnapshot:coverages:)(*(void *)(v0 + 144), *(void **)(v0 + 256), *(void **)(v0 + 264), *(void *)(v0 + 200), v10, v12);
      sub_251DF7688(v11, type metadata accessor for StateSnapshot);
      sub_251DF76E8((uint64_t)v12, v11, type metadata accessor for StateSnapshot);
      v6 += v7;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  uint64_t v26 = *(void *)(v0 + 128);
  sub_251DF76E8(*(void *)(v0 + 176), *(void *)(v0 + 112), type metadata accessor for StateSnapshot);
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_251DF2AA4, v26, 0);
}

uint64_t sub_251DF2AA4()
{
  uint64_t v1 = (void *)v0[33];
  uint64_t v11 = v0[28];
  uint64_t v2 = v0[26];
  id v9 = (void (*)(uint64_t, void, uint64_t, uint64_t))v0[35];
  uint64_t v10 = v0[24];
  uint64_t v3 = v0[19];
  uint64_t v4 = v0[14];
  id v5 = objc_msgSend(v1, sel_uniqueIdentifier);
  uint64_t v6 = swift_task_alloc();
  sub_251F34D80();

  sub_251DF7620(v4, v2, type metadata accessor for StateSnapshot);
  v9(v2, 0, 1, v3);
  swift_beginAccess();
  sub_2519F7C18(v2, v6);
  swift_endAccess();

  sub_251DF7688(v10, type metadata accessor for StateSnapshot);
  sub_251A1B064(v11, &qword_26B2203A0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_251DF2CAC()
{
  uint64_t v1 = *(void *)(v0 + 128);
  swift_release();
  return MEMORY[0x270FA2498](sub_251DF2D18, v1, 0);
}

uint64_t sub_251DF2D18()
{
  uint64_t v1 = *(void *)(v0 + 224);
  uint64_t v2 = *(void *)(v0 + 192);

  sub_251DF7688(v2, type metadata accessor for StateSnapshot);
  sub_251A1B064(v1, &qword_26B2203A0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_251DF2E3C()
{
  uint64_t v1 = v0[33];
  sub_251DF76E8(v0[23], v0[24], type metadata accessor for StateSnapshot);
  v0[40] = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3A98);
  swift_beginAccess();
  uint64_t v2 = swift_bridgeObjectRetain();
  sub_251AC5D78(v2);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v3 = swift_bridgeObjectRetain();
  sub_251AC5D78(v3);
  swift_endAccess();
  swift_bridgeObjectRelease();
  v0[41] = sub_251F35C80();
  v0[42] = sub_251F35C70();
  uint64_t v4 = (void *)swift_task_alloc();
  v0[43] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_251DF268C;
  uint64_t v5 = v0[15];
  return sub_251DF126C(v1, v5);
}

uint64_t sub_251DF2FB8()
{
  uint64_t v1 = *(void *)(v0 + 224);

  sub_251A1B064(v1, &qword_26B2203A0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_251DF30D0(uint64_t a1, uint64_t a2)
{
  v3[9] = a2;
  v3[10] = v2;
  v3[8] = a1;
  v3[11] = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3A98);
  v3[12] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251DF316C, v2, 0);
}

uint64_t sub_251DF316C()
{
  uint64_t v102 = v0;
  unint64_t v1 = **(void **)(v0 + 72);
  *(void *)(v0 + 104) = v1;
  unint64_t v101 = MEMORY[0x263F8EE78];
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v2 = sub_251F366C0();
    *(void *)(v0 + 112) = v2;
    if (v2) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    *(void *)(v0 + 112) = v2;
    if (v2)
    {
LABEL_3:
      if (v2 >= 1)
      {
        uint64_t v3 = 0;
        while (1)
        {
          if ((v1 & 0xC000000000000001) != 0) {
            id v4 = (id)MEMORY[0x2533AB3A0](v3, v1);
          }
          else {
            id v4 = *(id *)(v1 + 8 * v3 + 32);
          }
          id v5 = v4;
          self;
          uint64_t v6 = swift_dynamicCastObjCClass();
          if (v6)
          {
            uint64_t v7 = (void *)v6;
            id v8 = v5;
            id v9 = objc_msgSend(v7, sel_actionSet);
            id v10 = objc_msgSend(v9, sel_home);

            if (v10) {
              goto LABEL_16;
            }
          }
          else
          {
            self;
            uint64_t v11 = (void *)swift_dynamicCastObjCClass();
            if (v11)
            {
              id v12 = objc_msgSend(v11, sel_actionSet);
              id v13 = objc_msgSend(v12, sel_home);

              if (v13) {
                goto LABEL_16;
              }
            }
            else
            {
              self;
              uint64_t v14 = swift_dynamicCastObjCClass();
              if (!v14)
              {
                type metadata accessor for MatterExecuteRequest();
                swift_dynamicCastClass();
                goto LABEL_6;
              }
              uint64_t v15 = (void *)v14;
              id v5 = v5;
              id v16 = objc_msgSend(v15, sel_characteristic);
              id v17 = objc_msgSend(v16, sel_service);

              if (!v17
                || (id v18 = objc_msgSend(v17, sel_accessory), v17, !v18))
              {

LABEL_6:
                goto LABEL_7;
              }
              id v19 = objc_msgSend(v18, sel_home);

              if (v19)
              {
LABEL_16:
                MEMORY[0x2533AA9D0]();
                if (*(void *)((v101 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v101 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                  sub_251F35B10();
                }
                sub_251F35B70();
                sub_251F35AE0();
              }
            }
          }
LABEL_7:
          if (v2 == ++v3)
          {
            swift_bridgeObjectRelease();
            unint64_t v20 = v101;
            goto LABEL_28;
          }
        }
      }
      __break(1u);
      goto LABEL_85;
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v20 = MEMORY[0x263F8EE78];
LABEL_28:
  swift_bridgeObjectRelease();
  uint64_t v21 = sub_251EE0AA4(v20);
  *(void *)(v0 + 120) = v21;
  swift_bridgeObjectRelease();
  if ((v21 & 0xC000000000000001) != 0)
  {
    if (sub_251F36300() < 2) {
      goto LABEL_36;
    }
LABEL_32:
    if (qword_269B9C2E0 == -1)
    {
LABEL_33:
      uint64_t v22 = sub_251F350A0();
      __swift_project_value_buffer(v22, (uint64_t)qword_269BF30A8);
      uint64_t v23 = sub_251F35080();
      os_log_type_t v24 = sub_251F35FB0();
      if (os_log_type_enabled(v23, v24))
      {
        id v25 = (uint8_t *)swift_slowAlloc();
        uint64_t v26 = swift_slowAlloc();
        unint64_t v101 = v26;
        *(_DWORD *)id v25 = 136315138;
        *(void *)(v0 + 56) = sub_251A00E84(0xD000000000000019, 0x8000000251F6B650, (uint64_t *)&v101);
        sub_251F361D0();
        _os_log_impl(&dword_2519F3000, v23, v24, "%s Write requested with accessories from multiple homes. This is undefined behavior.", v25, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2533AC760](v26, -1, -1);
        MEMORY[0x2533AC760](v25, -1, -1);
      }

      goto LABEL_36;
    }
LABEL_85:
    swift_once();
    goto LABEL_33;
  }
  if (*(uint64_t *)(v21 + 16) >= 2) {
    goto LABEL_32;
  }
LABEL_36:
  uint64_t v27 = sub_251F34DA0();
  *(void *)(v0 + 128) = v27;
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = v28;
  *(void *)(v0 + 136) = v28;
  *(void *)(v0 + 144) = *(void *)(v28 + 64);
  uint64_t v30 = swift_task_alloc();
  *(void *)(v0 + 152) = v30;
  *(void *)(v0 + 160) = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90) - 8)
                                    + 64);
  uint64_t v31 = swift_task_alloc();
  uint64_t v32 = swift_bridgeObjectRetain();
  uint64_t v33 = (void *)sub_251ABD904(v32);
  swift_bridgeObjectRelease();
  if (!v33)
  {
    uint64_t v37 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 56);
    v37(v31, 1, 1, v27);
    goto LABEL_40;
  }
  id v34 = objc_msgSend(v33, sel_uniqueIdentifier);

  uint64_t v35 = swift_task_alloc();
  sub_251F34D80();

  uint64_t v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 32);
  v36(v31, v35, v27);
  uint64_t v100 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 56);
  v100(v31, 0, 1, v27);
  swift_task_dealloc();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v31, 1, v27) == 1)
  {
    uint64_t v37 = v100;
LABEL_40:
    *(void *)(v0 + 168) = v37;
    sub_251A1B064(v31, &qword_26B21FF90);
    swift_task_dealloc();
    uint64_t v38 = (void *)swift_task_alloc();
    *(void *)(v0 + 176) = v38;
    *uint64_t v38 = v0;
    v38[1] = sub_251DF3ECC;
    return sub_251B969E4();
  }
  v36(v30, v31, v27);
  swift_bridgeObjectRelease();
  uint64_t v40 = swift_task_dealloc();
  if (!v2)
  {
    unint64_t v70 = MEMORY[0x263F8EE78];
    unint64_t v90 = MEMORY[0x263F8EE78];
    goto LABEL_81;
  }
  if (*(uint64_t *)(v0 + 112) < 1)
  {
    __break(1u);
    return MEMORY[0x270FA2498](v40, v41, v42);
  }
  uint64_t v43 = *(void *)(v0 + 104);
  uint64_t v93 = v43 + 32;
  uint64_t v94 = *(void *)(v0 + 136);
  unint64_t v98 = v43 & 0xC000000000000001;
  uint64_t v99 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v94 + 48);
  uint64_t v97 = (void (**)(uint64_t, uint64_t, uint64_t))(v94 + 32);
  swift_bridgeObjectRetain_n();
  uint64_t v44 = 0;
  unint64_t v95 = MEMORY[0x263F8EE78];
  do
  {
    if (v98) {
      id v46 = (id)MEMORY[0x2533AB3A0](v44, *(void *)(v0 + 104));
    }
    else {
      id v46 = *(id *)(v93 + 8 * v44);
    }
    id v47 = v46;
    uint64_t v48 = swift_task_alloc();
    uint64_t v49 = swift_task_alloc();
    uint64_t v50 = swift_task_alloc();
    self;
    uint64_t v51 = swift_dynamicCastObjCClass();
    if (v51)
    {
      uint64_t v52 = (void *)v51;
      uint64_t v53 = *(void *)(v0 + 128);
      id v47 = v47;
      id v54 = objc_msgSend(v52, sel_actionSet);
      id v55 = objc_msgSend(v54, sel_uniqueIdentifier);

      sub_251F34D80();
LABEL_55:
      uint64_t v60 = v50;
      uint64_t v61 = 0;
      goto LABEL_56;
    }
    self;
    uint64_t v56 = swift_dynamicCastObjCClass();
    uint64_t v53 = *(void *)(v0 + 128);
    if (v56)
    {
      uint64_t v57 = (void *)v56;
      id v47 = v47;
      id v58 = objc_msgSend(v57, sel_actionSet);
      id v59 = objc_msgSend(v58, sel_uniqueIdentifier);

      sub_251F34D80();
      goto LABEL_55;
    }
    uint64_t v60 = v50;
    uint64_t v61 = 1;
LABEL_56:
    v100(v60, v61, 1, v53);
    sub_251A1E9B4(v50, v49);

    swift_task_dealloc();
    uint64_t v96 = *v99;
    if ((*v99)(v49, 1, v53) == 1)
    {
      sub_251A1B064(v49, &qword_26B21FF90);
    }
    else
    {
      uint64_t v62 = *(void *)(v0 + 128);
      uint64_t v63 = *v97;
      (*v97)(v48, v49, v62);
      swift_task_dealloc();
      uint64_t v64 = swift_task_alloc();
      v63(v64, v48, v62);
      if (swift_isUniquelyReferenced_nonNull_native()) {
        unint64_t v65 = v95;
      }
      else {
        unint64_t v65 = sub_251F0F4DC(0, *(void *)(v95 + 16) + 1, 1, v95);
      }
      unint64_t v67 = *(void *)(v65 + 16);
      unint64_t v66 = *(void *)(v65 + 24);
      if (v67 >= v66 >> 1) {
        unint64_t v65 = sub_251F0F4DC(v66 > 1, v67 + 1, 1, v65);
      }
      uint64_t v68 = *(void *)(v0 + 128);
      *(void *)(v65 + 16) = v67 + 1;
      unint64_t v95 = v65;
      v63(v65+ ((*(unsigned __int8 *)(v94 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v94 + 80))+ *(void *)(v94 + 72) * v67, v64, v68);
    }
    uint64_t v45 = *(void *)(v0 + 112);
    swift_task_dealloc();
    ++v44;
    swift_task_dealloc();
  }
  while (v44 != v45);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRetain_n();
  uint64_t v69 = 0;
  unint64_t v70 = MEMORY[0x263F8EE78];
  do
  {
    if (v98) {
      id v72 = (id)MEMORY[0x2533AB3A0](v69, *(void *)(v0 + 104));
    }
    else {
      id v72 = *(id *)(v93 + 8 * v69);
    }
    id v73 = v72;
    uint64_t v74 = swift_task_alloc();
    uint64_t v75 = swift_task_alloc();
    uint64_t v76 = swift_task_alloc();
    self;
    uint64_t v77 = swift_dynamicCastObjCClass();
    uint64_t v78 = *(void *)(v0 + 128);
    if (v77)
    {
      uint64_t v79 = (void *)v77;
      id v73 = v73;
      id v80 = objc_msgSend(v79, sel_characteristic);
      id v81 = objc_msgSend(v80, sel_uniqueIdentifier);

      sub_251F34D80();
      uint64_t v82 = v76;
      uint64_t v83 = 0;
    }
    else
    {
      uint64_t v82 = v76;
      uint64_t v83 = 1;
    }
    v100(v82, v83, 1, v78);
    sub_251A1E9B4(v76, v75);

    swift_task_dealloc();
    if (v96(v75, 1, v78) == 1)
    {
      sub_251A1B064(v75, &qword_26B21FF90);
    }
    else
    {
      uint64_t v84 = *(void *)(v0 + 128);
      uint64_t v85 = *v97;
      (*v97)(v74, v75, v84);
      swift_task_dealloc();
      uint64_t v86 = swift_task_alloc();
      v85(v86, v74, v84);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v70 = sub_251F0F4DC(0, *(void *)(v70 + 16) + 1, 1, v70);
      }
      unint64_t v88 = *(void *)(v70 + 16);
      unint64_t v87 = *(void *)(v70 + 24);
      if (v88 >= v87 >> 1) {
        unint64_t v70 = sub_251F0F4DC(v87 > 1, v88 + 1, 1, v70);
      }
      uint64_t v89 = *(void *)(v0 + 128);
      *(void *)(v70 + 16) = v88 + 1;
      v85(v70+ ((*(unsigned __int8 *)(v94 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v94 + 80))+ *(void *)(v94 + 72) * v88, v86, v89);
    }
    uint64_t v71 = *(void *)(v0 + 112);
    swift_task_dealloc();
    ++v69;
    swift_task_dealloc();
  }
  while (v69 != v71);
  swift_bridgeObjectRelease_n();
  unint64_t v90 = v95;
LABEL_81:
  *(void *)(v0 + 208) = v70;
  *(void *)(v0 + 216) = v90;
  *(void *)(v0 + 200) = v100;
  *(void *)(v0 + 224) = *(void *)(*(void *)(v0 + 80) + 192);
  sub_251F35C80();
  *(void *)(v0 + 232) = sub_251F35C70();
  uint64_t v91 = sub_251F35C00();
  uint64_t v42 = v92;
  *(void *)(v0 + 240) = v91;
  *(void *)(v0 + 248) = v92;
  uint64_t v40 = (uint64_t)sub_251DF4790;
  uint64_t v41 = v91;
  return MEMORY[0x270FA2498](v40, v41, v42);
}

uint64_t sub_251DF3ECC(uint64_t a1)
{
  id v4 = (void *)*v2;
  v4[23] = v1;
  swift_task_dealloc();
  uint64_t v5 = v4[10];
  if (v1)
  {
    uint64_t v6 = sub_251DF4718;
  }
  else
  {
    v4[24] = a1;
    uint64_t v6 = sub_251DF4008;
  }
  return MEMORY[0x270FA2498](v6, v5, 0);
}

uint64_t sub_251DF4008()
{
  uint64_t v1 = (void *)v0[24];
  uint64_t v2 = v0[14];
  id v3 = objc_msgSend(v1, sel_uniqueIdentifier);

  sub_251F34D80();
  uint64_t v4 = swift_bridgeObjectRelease();
  unint64_t v65 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v0[21];
  if (!v2)
  {
    unint64_t v34 = MEMORY[0x263F8EE78];
    unint64_t v54 = MEMORY[0x263F8EE78];
    goto LABEL_39;
  }
  if ((uint64_t)v0[14] < 1)
  {
    __break(1u);
    return MEMORY[0x270FA2498](v4, v5, v6);
  }
  uint64_t v7 = v0[13];
  uint64_t v58 = v7 + 32;
  uint64_t v59 = v0[17];
  unint64_t v63 = v7 & 0xC000000000000001;
  uint64_t v62 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48);
  uint64_t v64 = (void (**)(uint64_t, uint64_t, uint64_t))(v59 + 32);
  swift_bridgeObjectRetain_n();
  uint64_t v8 = 0;
  unint64_t v60 = MEMORY[0x263F8EE78];
  do
  {
    if (v63) {
      id v10 = (id)MEMORY[0x2533AB3A0](v8, v0[13]);
    }
    else {
      id v10 = *(id *)(v58 + 8 * v8);
    }
    id v11 = v10;
    uint64_t v12 = swift_task_alloc();
    uint64_t v13 = swift_task_alloc();
    uint64_t v14 = swift_task_alloc();
    self;
    uint64_t v15 = swift_dynamicCastObjCClass();
    if (v15)
    {
      id v16 = (void *)v15;
      uint64_t v17 = v0[16];
      id v11 = v11;
      id v18 = objc_msgSend(v16, sel_actionSet);
      id v19 = objc_msgSend(v18, sel_uniqueIdentifier);

      sub_251F34D80();
LABEL_13:
      uint64_t v24 = v14;
      uint64_t v25 = 0;
      goto LABEL_14;
    }
    self;
    uint64_t v20 = swift_dynamicCastObjCClass();
    uint64_t v17 = v0[16];
    if (v20)
    {
      uint64_t v21 = (void *)v20;
      id v11 = v11;
      id v22 = objc_msgSend(v21, sel_actionSet);
      id v23 = objc_msgSend(v22, sel_uniqueIdentifier);

      sub_251F34D80();
      goto LABEL_13;
    }
    uint64_t v24 = v14;
    uint64_t v25 = 1;
LABEL_14:
    v65(v24, v25, 1, v17);
    sub_251A1E9B4(v14, v13);

    swift_task_dealloc();
    uint64_t v61 = *v62;
    if ((*v62)(v13, 1, v17) == 1)
    {
      sub_251A1B064(v13, &qword_26B21FF90);
    }
    else
    {
      uint64_t v26 = v0[16];
      uint64_t v27 = *v64;
      (*v64)(v12, v13, v26);
      swift_task_dealloc();
      uint64_t v28 = swift_task_alloc();
      v27(v28, v12, v26);
      if (swift_isUniquelyReferenced_nonNull_native()) {
        unint64_t v29 = v60;
      }
      else {
        unint64_t v29 = sub_251F0F4DC(0, *(void *)(v60 + 16) + 1, 1, v60);
      }
      unint64_t v31 = *(void *)(v29 + 16);
      unint64_t v30 = *(void *)(v29 + 24);
      if (v31 >= v30 >> 1) {
        unint64_t v29 = sub_251F0F4DC(v30 > 1, v31 + 1, 1, v29);
      }
      uint64_t v32 = v0[16];
      *(void *)(v29 + 16) = v31 + 1;
      unint64_t v60 = v29;
      v27(v29+ ((*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80))+ *(void *)(v59 + 72) * v31, v28, v32);
    }
    uint64_t v9 = v0[14];
    swift_task_dealloc();
    ++v8;
    swift_task_dealloc();
  }
  while (v8 != v9);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRetain_n();
  uint64_t v33 = 0;
  unint64_t v34 = MEMORY[0x263F8EE78];
  do
  {
    if (v63) {
      id v36 = (id)MEMORY[0x2533AB3A0](v33, v0[13]);
    }
    else {
      id v36 = *(id *)(v58 + 8 * v33);
    }
    id v37 = v36;
    uint64_t v38 = swift_task_alloc();
    uint64_t v39 = swift_task_alloc();
    uint64_t v40 = swift_task_alloc();
    self;
    uint64_t v41 = swift_dynamicCastObjCClass();
    uint64_t v42 = v0[16];
    if (v41)
    {
      uint64_t v43 = (void *)v41;
      id v37 = v37;
      id v44 = objc_msgSend(v43, sel_characteristic);
      id v45 = objc_msgSend(v44, sel_uniqueIdentifier);

      sub_251F34D80();
      uint64_t v46 = v40;
      uint64_t v47 = 0;
    }
    else
    {
      uint64_t v46 = v40;
      uint64_t v47 = 1;
    }
    v65(v46, v47, 1, v42);
    sub_251A1E9B4(v40, v39);

    swift_task_dealloc();
    if (v61(v39, 1, v42) == 1)
    {
      sub_251A1B064(v39, &qword_26B21FF90);
    }
    else
    {
      uint64_t v48 = v0[16];
      uint64_t v49 = *v64;
      (*v64)(v38, v39, v48);
      swift_task_dealloc();
      uint64_t v50 = swift_task_alloc();
      v49(v50, v38, v48);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v34 = sub_251F0F4DC(0, *(void *)(v34 + 16) + 1, 1, v34);
      }
      unint64_t v52 = *(void *)(v34 + 16);
      unint64_t v51 = *(void *)(v34 + 24);
      if (v52 >= v51 >> 1) {
        unint64_t v34 = sub_251F0F4DC(v51 > 1, v52 + 1, 1, v34);
      }
      uint64_t v53 = v0[16];
      *(void *)(v34 + 16) = v52 + 1;
      v49(v34+ ((*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80))+ *(void *)(v59 + 72) * v52, v50, v53);
    }
    uint64_t v35 = v0[14];
    swift_task_dealloc();
    ++v33;
    swift_task_dealloc();
  }
  while (v33 != v35);
  swift_bridgeObjectRelease_n();
  unint64_t v54 = v60;
LABEL_39:
  v0[26] = v34;
  v0[27] = v54;
  v0[25] = v65;
  v0[28] = *(void *)(v0[10] + 192);
  sub_251F35C80();
  v0[29] = sub_251F35C70();
  uint64_t v55 = sub_251F35C00();
  uint64_t v6 = v56;
  v0[30] = v55;
  v0[31] = v56;
  uint64_t v4 = (uint64_t)sub_251DF4790;
  uint64_t v5 = v55;
  return MEMORY[0x270FA2498](v4, v5, v6);
}

uint64_t sub_251DF4718()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251DF4790()
{
  uint64_t v1 = *(void *)(v0 + 72);
  *(void *)(v0 + 48) = *(void *)(v0 + 224);
  *(_OWORD *)(v0 + 32) = *(_OWORD *)(v1 + 8);
  uint64_t v2 = *(void *)(v1 + 24);
  *(void *)(v0 + 256) = v2;
  uint64_t v3 = *(void *)(v1 + 32);
  *(void *)(v0 + 264) = v3;
  swift_bridgeObjectRetain();
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 272) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_251DF486C;
  uint64_t v5 = *(void *)(v0 + 104);
  return WidgetManager.perform(_:forKind:)(v5, v2, v3);
}

uint64_t sub_251DF486C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 280) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 240);
    uint64_t v4 = *(void *)(v2 + 248);
    uint64_t v5 = sub_251DF4CA4;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v2 + 240);
    uint64_t v4 = *(void *)(v2 + 248);
    uint64_t v5 = sub_251DF4988;
  }
  return MEMORY[0x270FA2498](v5, v3, v4);
}

uint64_t sub_251DF4988()
{
  uint64_t v1 = *(void *)(v0 + 80);
  swift_release();
  return MEMORY[0x270FA2498](sub_251DF49F4, v1, 0);
}

uint64_t sub_251DF49F4()
{
  uint64_t v2 = *(void *)(v0 + 256);
  uint64_t v1 = *(void *)(v0 + 264);
  uint64_t v3 = *(void *)(v0 + 208);
  uint64_t v16 = *(void *)(v0 + 216);
  uint64_t v4 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 200);
  uint64_t v5 = *(void *)(v0 + 128);
  uint64_t v6 = *(int **)(v0 + 88);
  uint64_t v7 = *(void *)(v0 + 96);
  uint64_t v8 = *(void *)(v0 + 72);
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v0 + 136) + 16))(v7, *(void *)(v0 + 152), v5);
  v4(v7, 0, 1, v5);
  long long v9 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 16) = v9;
  int v10 = *(_DWORD *)(v8 + 40);
  uint64_t v11 = v7 + v6[11];
  *(_OWORD *)uint64_t v11 = v9;
  *(void *)(v11 + 16) = v2;
  *(void *)(v11 + 24) = v1;
  *(void *)(v7 + v6[9]) = v3;
  *(void *)(v7 + v6[10]) = v16;
  *(unsigned char *)(v7 + v6[13]) = 1;
  *(_DWORD *)(v7 + v6[12]) = v10;
  swift_bridgeObjectRetain();
  sub_251DF84BC(v0 + 16);
  uint64_t v17 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_269BA3AB0 + dword_269BA3AB0);
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v0 + 288) = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_251DF4B74;
  uint64_t v13 = *(void *)(v0 + 96);
  uint64_t v14 = *(void *)(v0 + 64);
  return v17(v14, v13);
}

uint64_t sub_251DF4B74()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 296) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 80);
    uint64_t v4 = sub_251DF4E4C;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 80);
    sub_251A1B064(*(void *)(v2 + 96), &qword_269BA3A98);
    uint64_t v4 = sub_251DF4DC0;
    uint64_t v3 = v5;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_251DF4CA4()
{
  uint64_t v1 = *(void *)(v0 + 80);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_251DF4D38, v1, 0);
}

uint64_t sub_251DF4D38()
{
  (*(void (**)(void, void))(v0[17] + 8))(v0[19], v0[16]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_251DF4DC0()
{
  (*(void (**)(void, void))(v0[17] + 8))(v0[19], v0[16]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_251DF4E4C()
{
  uint64_t v1 = v0[12];
  (*(void (**)(void, void))(v0[17] + 8))(v0[19], v0[16]);
  sub_251A1B064(v1, &qword_269BA3A98);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_251DF4EE8(uint64_t a1, uint64_t a2, double a3)
{
  v4[10] = a2;
  v4[11] = v3;
  v4[9] = a1;
  v4[12] = type metadata accessor for WidgetSnapshotModerator.Error();
  v4[13] = swift_task_alloc();
  type metadata accessor for StateSnapshot(0);
  v4[14] = swift_task_alloc();
  uint64_t v6 = (void *)swift_task_alloc();
  v4[15] = v6;
  *uint64_t v6 = v4;
  v6[1] = sub_251DF4FE4;
  return WidgetSnapshotModerator.updateHomes(timeout:)(a3);
}

uint64_t sub_251DF4FE4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 128) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 88);
  if (v0) {
    uint64_t v4 = sub_251DF5348;
  }
  else {
    uint64_t v4 = sub_251DF5110;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_251DF5110()
{
  uint64_t v1 = *(long long **)(v0 + 80);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3A70);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_269BA3AB0 + dword_269BA3AB0);
      uint64_t v3 = (void *)swift_task_alloc();
      *(void *)(v0 + 160) = v3;
      *uint64_t v3 = v0;
      v3[1] = sub_251DF5748;
      uint64_t v4 = *(void *)(v0 + 112);
      uint64_t v5 = *(void *)(v0 + 80);
    }
    else
    {
      long long v10 = *v1;
      long long v11 = v1[1];
      *(_OWORD *)(v0 + 44) = *(long long *)((char *)v1 + 28);
      *(_OWORD *)(v0 + 16) = v10;
      *(_OWORD *)(v0 + 32) = v11;
      uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_269BA3AA8 + dword_269BA3AA8);
      uint64_t v12 = (void *)swift_task_alloc();
      *(void *)(v0 + 176) = v12;
      *uint64_t v12 = v0;
      v12[1] = sub_251DF5874;
      uint64_t v4 = *(void *)(v0 + 112);
      uint64_t v5 = v0 + 16;
    }
    return v13(v4, v5);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    uint64_t v6 = swift_task_alloc();
    *(void *)(v0 + 136) = v6;
    sub_251A1B128((uint64_t)v1, v6, &qword_26B21FF90);
    *(_DWORD *)(v0 + 60) = *(_DWORD *)((char *)v1
                                     + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269BA3AA0) + 40));
    uint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v0 + 144) = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_251DF55F8;
    uint64_t v8 = *(void *)(v0 + 112);
    return sub_251B9C5E0(v8, v6, (_DWORD *)(v0 + 60));
  }
}

uint64_t sub_251DF5348()
{
  uint64_t v1 = *(void **)(v0 + 128);
  *(void *)(v0 + 64) = v1;
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D1B0);
  if (swift_dynamicCast())
  {
    uint64_t v3 = *(void *)(v0 + 104);
    uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    *(void *)(v0 + 192) = v4;
    uint64_t v5 = *(void *)(v4 - 8);
    *(void *)(v0 + 200) = v5;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 3, v4) == 3)
    {

      __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3A70);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload)
      {
        if (EnumCaseMultiPayload != 1)
        {
          uint64_t v15 = *(uint64_t **)(v0 + 80);
          long long v11 = v15 + 1;
          uint64_t v12 = v15 + 2;
          uint64_t v13 = v15 + 3;
          uint64_t v14 = v15 + 4;
          goto LABEL_13;
        }
        uint64_t v7 = *(void *)(v0 + 80);
        uint64_t v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269BA3A98) + 44);
      }
      else
      {
        uint64_t v7 = *(void *)(v0 + 80);
        uint64_t v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269BA3AA0) + 36);
      }
      long long v11 = (uint64_t *)(v7 + v8);
      uint64_t v12 = v11 + 1;
      uint64_t v13 = v11 + 2;
      uint64_t v14 = v11 + 3;
LABEL_13:
      uint64_t v16 = *v14;
      uint64_t v17 = *v13;
      uint64_t v18 = *v12;
      uint64_t v19 = *v11;
      uint64_t v21 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_269BA3A90 + dword_269BA3A90);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v20 = (void *)swift_task_alloc();
      *(void *)(v0 + 208) = v20;
      *uint64_t v20 = v0;
      v20[1] = sub_251DF5BE8;
      return v21(v19, v18, v17, v16);
    }
    sub_251DF7688(v3, (uint64_t (*)(void))type metadata accessor for WidgetSnapshotModerator.Error);
  }

  sub_251A1B064(*(void *)(v0 + 80), &qword_269BA3A70);
  swift_task_dealloc();
  swift_task_dealloc();
  long long v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_251DF55F8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 152) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 88);
    sub_251A1B064(*(void *)(v2 + 136), &qword_26B21FF90);
    uint64_t v4 = sub_251DF59A0;
    uint64_t v5 = v3;
  }
  else
  {
    uint64_t v6 = *(void *)(v2 + 136);
    uint64_t v7 = *(void *)(v2 + 88);
    sub_251A1B064(v6, &qword_26B21FF90);
    swift_task_dealloc();
    uint64_t v4 = sub_251DF84E8;
    uint64_t v5 = v7;
  }
  return MEMORY[0x270FA2498](v4, v5, 0);
}

uint64_t sub_251DF5748()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 168) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 88);
  if (v0) {
    uint64_t v4 = sub_251DF5A30;
  }
  else {
    uint64_t v4 = sub_251DF84E8;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_251DF5874()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 184) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 88);
  if (v0) {
    uint64_t v4 = sub_251DF5B60;
  }
  else {
    uint64_t v4 = sub_251DF5AB8;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_251DF59A0()
{
  swift_task_dealloc();
  sub_251A1B064(*(void *)(v0 + 80), &qword_269BA3A70);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251DF5A30()
{
  sub_251A1B064(*(void *)(v0 + 80), &qword_269BA3A70);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251DF5AB8()
{
  uint64_t v1 = v0[10];
  sub_251DF76E8(v0[14], v0[9], type metadata accessor for StateSnapshot);
  sub_251A1B064(v1, &qword_269BA3A70);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_251DF5B60()
{
  sub_251A1B064(*(void *)(v0 + 80), &qword_269BA3A70);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251DF5BE8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 88);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251DF5CF8, v1, 0);
}

uint64_t sub_251DF5CF8()
{
  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v2 = *(void *)(v0 + 200);
  sub_251DF75C8();
  swift_allocError();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56))(v3, 3, 3, v1);
  swift_willThrow();

  sub_251A1B064(*(void *)(v0 + 80), &qword_269BA3A70);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t StaticActionSet.toggle(options:context:)(uint64_t a1, uint64_t *a2, _OWORD *a3)
{
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = v3;
  *(void *)(v4 + 32) = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3A70);
  uint64_t v7 = swift_task_alloc();
  uint64_t v8 = *a2;
  *(void *)(v4 + 40) = v7;
  *(void *)(v4 + 48) = v8;
  long long v9 = a3[1];
  *(_OWORD *)(v4 + 56) = *a3;
  *(_OWORD *)(v4 + 72) = v9;
  return MEMORY[0x270FA2498](sub_251DF5E8C, 0, 0);
}

uint64_t sub_251DF5E8C()
{
  if ((v0[6] & 0x400) != 0 && v0[8] >= 2uLL && v0[10])
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v1 = (void *)swift_task_alloc();
    v0[11] = v1;
    *uint64_t v1 = v0;
    v1[1] = sub_251DF5FD4;
    v1[11] = v0[3];
    return MEMORY[0x270FA2498](sub_251DF6920, 0, 0);
  }
  else
  {
    uint64_t v2 = (void *)swift_task_alloc();
    v0[21] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_251DF67EC;
    uint64_t v3 = v0[2];
    return StaticActionSet.toggle()(v3);
  }
}

uint64_t sub_251DF5FD4(uint64_t a1)
{
  *(void *)(*(void *)v1 + 96) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251DF60D4, 0, 0);
}

uint64_t sub_251DF60D4()
{
  uint64_t v1 = *(void *)(v0 + 96);
  if (v1)
  {
    type metadata accessor for StaticActionSet();
    id v2 = objc_msgSend(self, sel_executeRequestWithActionSet_, v1);
    *(void *)(v0 + 104) = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EBB0);
    uint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_251F38640;
    *(void *)(v3 + 32) = v2;
    uint64_t v8 = v3;
    sub_251F35AE0();
    *(void *)(v0 + 112) = v8;
    *(_DWORD *)(v0 + 176) = dword_270262938;
    uint64_t v4 = qword_269B9C2E8;
    id v5 = v2;
    if (v4 != -1) {
      swift_once();
    }
    return MEMORY[0x270FA2498](sub_251DF628C, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_251DF7574();
    swift_allocError();
    swift_willThrow();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
    return v6();
  }
}

uint64_t sub_251DF628C()
{
  type metadata accessor for WidgetDataModel();
  *(void *)(v0 + 120) = swift_initStaticObject();
  return MEMORY[0x270FA2498](sub_251DF6304, 0, 0);
}

uint64_t sub_251DF6304()
{
  int v1 = *(_DWORD *)(v0 + 176);
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v5 = *(void *)(v0 + 56);
  uint64_t v4 = *(void *)(v0 + 64);
  uint64_t v6 = *(void *)(v0 + 40);
  *(void *)uint64_t v6 = *(void *)(v0 + 112);
  *(void *)(v6 + 8) = v5;
  *(void *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v3;
  *(void *)(v6 + 32) = v2;
  *(_DWORD *)(v6 + 40) = v1;
  swift_storeEnumTagMultiPayload();
  *(void *)(v0 + 128) = qword_269B9F038;
  uint64_t v9 = (uint64_t (__cdecl *)())((char *)&dword_269B9F070 + dword_269B9F070);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_251DF63E0;
  return v9();
}

uint64_t sub_251DF63E0(uint64_t a1)
{
  uint64_t v2 = (void *)*v1;
  uint64_t v3 = (void *)*v1;
  v2[18] = a1;
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, double))((char *)&dword_269BA3A88 + dword_269BA3A88);
  swift_retain();
  uint64_t v4 = (void *)swift_task_alloc();
  v2[19] = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_251DF656C;
  uint64_t v5 = v2[5];
  uint64_t v6 = v2[2];
  return v8(v6, v5, 20.0);
}

uint64_t sub_251DF656C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 160) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0)
  {
    uint64_t v3 = sub_251DF677C;
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v4 = *(void *)(v2 + 128);
    uint64_t v3 = sub_251DF66AC;
  }
  return MEMORY[0x270FA2498](v3, v4, 0);
}

uint64_t sub_251DF66AC()
{
  return MEMORY[0x270FA2498](sub_251DF66C8, 0, 0);
}

uint64_t sub_251DF66C8()
{
  int v1 = *(void **)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 16);

  uint64_t v3 = type metadata accessor for StateSnapshot(0);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 0, 1, v3);
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_251DF677C()
{
  int v1 = *(void **)(v0 + 96);

  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_251DF67EC()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  int v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_251DF6900()
{
  *(void *)(v1 + 88) = v0;
  return MEMORY[0x270FA2498](sub_251DF6920, 0, 0);
}

uint64_t sub_251DF6920()
{
  *(void *)(v0 + 96) = sub_251F35C80();
  *(void *)(v0 + 104) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251DF69B8, v2, v1);
}

uint64_t sub_251DF69B8()
{
  swift_release();
  return MEMORY[0x270FA2498](sub_251DF6A20, 0, 0);
}

uint64_t sub_251DF6A20()
{
  *(void *)(v0 + 112) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251DF6AAC, v2, v1);
}

uint64_t sub_251DF6AAC()
{
  swift_release();
  swift_beginAccess();
  *(void *)(v0 + 120) = qword_26B21F258;
  return MEMORY[0x270FA2498](sub_251DF6B3C, 0, 0);
}

uint64_t sub_251DF6B3C()
{
  unint64_t v1 = v0[15];
  if (v1 < 3)
  {
    v0[20] = sub_251F35C70();
    uint64_t v2 = sub_251F35C00();
    uint64_t v4 = v3;
    uint64_t v5 = sub_251DF6FD0;
    uint64_t v6 = v2;
    uint64_t v7 = v4;
LABEL_11:
    return MEMORY[0x270FA2498](v5, v6, v7);
  }
  if (v1 == 3)
  {
    if (qword_269B9C2E8 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_251DF731C;
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    goto LABEL_11;
  }
  if (v1 != 4) {
    return sub_251F36680();
  }
  type metadata accessor for DataModel();
  uint64_t v8 = (void *)swift_task_alloc();
  v0[16] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_251DF6D14;
  return static DataModel.sharedAsync(coverages:)(0);
}

uint64_t sub_251DF6D14(uint64_t a1)
{
  *(void *)(*(void *)v1 + 136) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251DF6E14, 0, 0);
}

uint64_t sub_251DF6E14()
{
  *(void *)(v0 + 144) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251DF6EA0, v2, v1);
}

uint64_t sub_251DF6EA0()
{
  uint64_t v1 = *(char **)(v0 + 136);
  swift_release();
  uint64_t v2 = (void **)&v1[OBJC_IVAR____TtC13HomeDataModel9DataModel_homeManager];
  swift_beginAccess();
  uint64_t v3 = *v2;
  *(void *)(v0 + 152) = *v2;
  id v4 = v3;

  return MEMORY[0x270FA2498](sub_251DF6F48, 0, 0);
}

uint64_t sub_251DF6F48()
{
  uint64_t v1 = *(void **)(v0 + 152);
  if (v1)
  {
    id v2 = v1;
    unint64_t v3 = (unint64_t)StaticActionSet.get(from:)((HMHomeManager)v2);
  }
  else
  {
    unint64_t v3 = 0;
  }
  id v4 = *(uint64_t (**)(unint64_t))(v0 + 8);
  return v4(v3);
}

uint64_t sub_251DF6FD0()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251DF7068, 0, 0);
}

uint64_t sub_251DF7068()
{
  *(void *)(v0 + 168) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251DF70F4, v2, v1);
}

uint64_t sub_251DF70F4()
{
  swift_release();
  *(void *)(v0 + 176) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251DF7168, 0, 0);
}

uint64_t sub_251DF7168()
{
  *(void *)(v0 + 184) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251DF71F4, v2, v1);
}

uint64_t sub_251DF71F4()
{
  uint64_t v1 = *(void *)(v0 + 176);
  swift_release();
  uint64_t v2 = (void **)(v1 + OBJC_IVAR____TtC13HomeDataModel9DataModel_homeManager);
  swift_beginAccess();
  unint64_t v3 = *v2;
  *(void *)(v0 + 192) = *v2;
  id v4 = v3;
  return MEMORY[0x270FA2498](sub_251DF7294, 0, 0);
}

uint64_t sub_251DF7294()
{
  uint64_t v1 = *(void **)(v0 + 192);
  if (v1)
  {
    id v2 = v1;
    unint64_t v3 = (unint64_t)StaticActionSet.get(from:)((HMHomeManager)v2);
  }
  else
  {
    unint64_t v3 = 0;
  }
  id v4 = *(uint64_t (**)(unint64_t))(v0 + 8);
  return v4(v3);
}

uint64_t sub_251DF731C()
{
  type metadata accessor for WidgetDataModel();
  swift_initStaticObject();
  unint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_269B9F070 + dword_269B9F070);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 200) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_251DF73D4;
  return v3();
}

uint64_t sub_251DF73D4(uint64_t a1)
{
  *(void *)(*(void *)v1 + 208) = a1;
  swift_task_dealloc();
  swift_retain();
  return MEMORY[0x270FA2498](sub_251DF74E4, 0, 0);
}

uint64_t sub_251DF74E4()
{
  id v1 = *(id *)(*(void *)(v0 + 208) + 184);
  swift_release();
  id v2 = v1;
  unint64_t v3 = (unint64_t)StaticActionSet.get(from:)((HMHomeManager)v2);

  uint64_t v4 = *(uint64_t (**)(unint64_t))(v0 + 8);
  return v4(v3);
}

unint64_t sub_251DF7574()
{
  unint64_t result = qword_269BA3A80;
  if (!qword_269BA3A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3A80);
  }
  return result;
}

unint64_t sub_251DF75C8()
{
  unint64_t result = qword_269B9F0D0;
  if (!qword_269B9F0D0)
  {
    type metadata accessor for WidgetSnapshotModerator.Error();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_269B9F0D0);
  }
  return result;
}

uint64_t sub_251DF7620(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_251DF7688(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_251DF76E8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_251DF7750(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1;
  uint64_t v76 = MEMORY[0x263F8EE78];
  if (a1 >> 62) {
    goto LABEL_49;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v4)
  {
LABEL_50:
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
LABEL_3:
  uint64_t v5 = 0;
  unint64_t v45 = v3 & 0xC000000000000001;
  uint64_t v42 = v3 + 32;
  uint64_t v54 = a2;
  uint64_t v44 = v3;
  uint64_t v43 = v4;
LABEL_6:
  if (v45)
  {
    id v7 = (id)MEMORY[0x2533AB3A0](v5, v3);
    BOOL v8 = __OFADD__(v5, 1);
    uint64_t v9 = v5 + 1;
    if (v8) {
      goto LABEL_48;
    }
  }
  else
  {
    id v7 = *(id *)(v42 + 8 * v5);
    BOOL v8 = __OFADD__(v5, 1);
    uint64_t v9 = v5 + 1;
    if (v8) {
      goto LABEL_48;
    }
  }
  uint64_t v47 = v9;
  id v46 = v7;
  id v10 = objc_msgSend(v7, sel_services);
  sub_251A1A568(0, (unint64_t *)&qword_26B21F180);
  unint64_t v11 = sub_251F35AC0();

  unint64_t v75 = MEMORY[0x263F8EE78];
  unint64_t v49 = v11;
  if (v11 >> 62)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_251F366C0();
    if (!v3)
    {
LABEL_43:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v6 = MEMORY[0x263F8EE78];
      goto LABEL_5;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (!v3) {
      goto LABEL_43;
    }
  }
  uint64_t v12 = 0;
  unint64_t v51 = v49 & 0xC000000000000001;
  unint64_t v48 = v49 + 32;
  uint64_t v50 = v3;
  while (1)
  {
    if (v51) {
      id v14 = (id)MEMORY[0x2533AB3A0](v12, v49);
    }
    else {
      id v14 = *(id *)(v48 + 8 * v12);
    }
    id v53 = v14;
    BOOL v8 = __OFADD__(v12, 1);
    uint64_t v15 = v12 + 1;
    if (v8)
    {
      __break(1u);
LABEL_48:
      __break(1u);
LABEL_49:
      swift_bridgeObjectRetain();
      uint64_t v4 = sub_251F366C0();
      if (!v4) {
        goto LABEL_50;
      }
      goto LABEL_3;
    }
    uint64_t v52 = v15;
    id v16 = objc_msgSend(v53, sel_characteristics);
    sub_251A1A568(0, (unint64_t *)&qword_26B21F170);
    unint64_t v17 = sub_251F35AC0();

    unint64_t v74 = MEMORY[0x263F8EE78];
    if (!(v17 >> 62))
    {
      uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v18) {
        break;
      }
      goto LABEL_41;
    }
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_251F366C0();
    if (v18) {
      break;
    }
LABEL_41:
    unint64_t v13 = MEMORY[0x263F8EE78];
LABEL_15:

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_251ED584C(v13);
    uint64_t v3 = v50;
    uint64_t v12 = v52;
    if (v52 == v50)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v6 = v75;
LABEL_5:

      swift_bridgeObjectRelease();
      sub_251ED584C(v6);
      uint64_t v5 = v47;
      uint64_t v3 = v44;
      if (v47 == v43) {
        goto LABEL_46;
      }
      goto LABEL_6;
    }
  }
  unint64_t v19 = 0;
  uint64_t v58 = v17 & 0xFFFFFFFFFFFFFF8;
  unint64_t v59 = v17 & 0xC000000000000001;
  unint64_t v55 = v17 + 32;
  uint64_t v56 = v18;
  unint64_t v57 = v17;
  while (v59)
  {
    id v21 = (id)MEMORY[0x2533AB3A0](v19, v17);
    BOOL v8 = __OFADD__(v19, 1);
    unint64_t v22 = v19 + 1;
    if (v8) {
      goto LABEL_45;
    }
LABEL_30:
    id v63 = v21;
    id v23 = objc_msgSend(v21, sel_uniqueIdentifier);
    uint64_t v24 = sub_251F34DA0();
    uint64_t v62 = &v41;
    uint64_t v25 = *(void *)(v24 - 8);
    MEMORY[0x270FA5388](v24);
    uint64_t v71 = v26;
    id v73 = (char *)&v41 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_251F34D80();

    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    uint64_t v61 = &v41;
    MEMORY[0x270FA5388](v27 - 8);
    id v72 = (char *)&v41 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v29 = *(void *)(a2 + 16);
    unint64_t v64 = v22;
    uint64_t v60 = v25;
    if (v29)
    {
      unint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 16);
      uint64_t v31 = a2 + ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80));
      uint64_t v32 = *(void *)(v25 + 72);
      uint64_t v33 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56);
      uint64_t v68 = (uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
      uint64_t v69 = v30;
      uint64_t v65 = v32;
      uint64_t v66 = (void (**)(char *, char *, uint64_t))(v25 + 32);
      uint64_t v70 = v25 + 16;
      unint64_t v67 = (void (**)(char *, uint64_t))(v25 + 8);
      swift_bridgeObjectRetain();
      while (1)
      {
        unint64_t v34 = v72;
        v69(v72, v31, v24);
        uint64_t v20 = *v33;
        (*v33)(v34, 0, 1, v24);
        uint64_t v35 = (*v68)(v34, 1, v24);
        if (v35 == 1) {
          break;
        }
        MEMORY[0x270FA5388](v35);
        id v37 = (char *)&v41 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*v66)(v37, v34, v24);
        sub_251A9FE88();
        char v38 = sub_251F35650();
        uint64_t v39 = *v67;
        (*v67)(v37, v24);
        if (v38)
        {
          a2 = v54;
          swift_bridgeObjectRelease();
          v39(v73, v24);
          sub_251F364F0();
          sub_251F36530();
          sub_251F36540();
          sub_251F36500();
          goto LABEL_26;
        }
        v31 += v65;
        if (!--v29) {
          goto LABEL_24;
        }
      }
    }
    else
    {
      uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56);
      swift_bridgeObjectRetain();
LABEL_24:
      v20(v72, 1, 1, v24);
    }
    a2 = v54;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v60 + 8))(v73, v24);

LABEL_26:
    unint64_t v17 = v57;
    unint64_t v19 = v64;
    if (v64 == v56)
    {
      unint64_t v13 = v74;
      goto LABEL_15;
    }
  }
  if (v19 < *(void *)(v58 + 16))
  {
    id v21 = *(id *)(v55 + 8 * v19);
    BOOL v8 = __OFADD__(v19, 1);
    unint64_t v22 = v19 + 1;
    if (v8) {
      goto LABEL_45;
    }
    goto LABEL_30;
  }
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  swift_bridgeObjectRelease();
  return v76;
}

uint64_t sub_251DF7EE0(unint64_t a1, uint64_t a2)
{
  uint64_t v65 = MEMORY[0x263F8EE78];
  unint64_t v39 = a1;
  if (a1 >> 62) {
    goto LABEL_35;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v3)
  {
LABEL_3:
    uint64_t v4 = 0;
    unint64_t v41 = v39 & 0xC000000000000001;
    unint64_t v38 = v39 + 32;
    uint64_t v44 = a2;
    uint64_t v40 = v3;
    do
    {
      if (v41) {
        id v6 = (id)MEMORY[0x2533AB3A0](v4, v39);
      }
      else {
        id v6 = *(id *)(v38 + 8 * v4);
      }
      id v43 = v6;
      BOOL v7 = __OFADD__(v4, 1);
      uint64_t v8 = v4 + 1;
      if (v7) {
        goto LABEL_34;
      }
      uint64_t v42 = v8;
      id v9 = objc_msgSend(v43, sel_actionSets);
      sub_251A1A568(0, &qword_26B21EB00);
      unint64_t v10 = sub_251F35AC0();

      unint64_t v64 = MEMORY[0x263F8EE78];
      if (v10 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v11 = sub_251F366C0();
        if (v11)
        {
LABEL_12:
          unint64_t v12 = 0;
          uint64_t v48 = v10 & 0xFFFFFFFFFFFFFF8;
          unint64_t v49 = v10 & 0xC000000000000001;
          unint64_t v45 = v10 + 32;
          uint64_t v46 = v11;
          unint64_t v47 = v10;
          while (1)
          {
            if (v49)
            {
              id v14 = (id)MEMORY[0x2533AB3A0](v12, v10);
              BOOL v7 = __OFADD__(v12, 1);
              unint64_t v15 = v12 + 1;
              if (v7) {
                goto LABEL_33;
              }
            }
            else
            {
              if (v12 >= *(void *)(v48 + 16))
              {
                __break(1u);
LABEL_33:
                __break(1u);
LABEL_34:
                __break(1u);
LABEL_35:
                swift_bridgeObjectRetain();
                uint64_t v3 = sub_251F366C0();
                if (!v3) {
                  goto LABEL_36;
                }
                goto LABEL_3;
              }
              id v14 = *(id *)(v45 + 8 * v12);
              BOOL v7 = __OFADD__(v12, 1);
              unint64_t v15 = v12 + 1;
              if (v7) {
                goto LABEL_33;
              }
            }
            id v53 = v14;
            unint64_t v54 = v15;
            id v16 = objc_msgSend(v14, sel_uniqueIdentifier);
            uint64_t v17 = sub_251F34DA0();
            uint64_t v52 = v37;
            uint64_t v18 = *(void *)(v17 - 8);
            MEMORY[0x270FA5388](v17);
            uint64_t v62 = v19;
            id v63 = &v37[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
            sub_251F34D80();

            uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
            unint64_t v51 = v37;
            MEMORY[0x270FA5388](v20 - 8);
            unint64_t v22 = &v37[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
            uint64_t v23 = *(void *)(a2 + 16);
            uint64_t v50 = v18;
            if (v23)
            {
              uint64_t v25 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v18 + 16);
              uint64_t v24 = v18 + 16;
              uint64_t v26 = a2 + ((*(unsigned __int8 *)(v24 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 64));
              uint64_t v27 = *(void *)(v24 + 56);
              uint64_t v28 = (void *)(v24 + 40);
              unint64_t v59 = (uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v24 + 32);
              uint64_t v60 = v25;
              uint64_t v56 = v27;
              unint64_t v57 = (void (**)(unsigned char *, unsigned char *, uint64_t))(v24 + 16);
              uint64_t v61 = v24;
              uint64_t v58 = (void (**)(unsigned char *, uint64_t))(v24 - 8);
              swift_bridgeObjectRetain();
              while (1)
              {
                v60(v22, v26, v17);
                uint64_t v29 = (void (*)(unsigned char *, uint64_t, uint64_t, uint64_t))*v28;
                ((void (*)(unsigned char *, void, uint64_t, uint64_t))*v28)(v22, 0, 1, v17);
                uint64_t v30 = (*v59)(v22, 1, v17);
                if (v30 == 1) {
                  break;
                }
                unint64_t v55 = v29;
                MEMORY[0x270FA5388](v30);
                uint64_t v32 = &v37[-((v31 + 15) & 0xFFFFFFFFFFFFFFF0)];
                uint64_t v33 = v22;
                (*v57)(v32, v22, v17);
                sub_251A9FE88();
                char v34 = sub_251F35650();
                uint64_t v35 = *v58;
                (*v58)(v32, v17);
                if (v34)
                {
                  a2 = v44;
                  swift_bridgeObjectRelease();
                  v35(v63, v17);
                  sub_251F364F0();
                  sub_251F36530();
                  sub_251F36540();
                  sub_251F36500();
                  goto LABEL_15;
                }
                v26 += v56;
                --v23;
                unint64_t v22 = v33;
                if (!v23)
                {
                  v55(v33, 1, 1, v17);
                  break;
                }
              }
            }
            else
            {
              unint64_t v13 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
              swift_bridgeObjectRetain();
              v13(v22, 1, 1, v17);
            }
            a2 = v44;
            swift_bridgeObjectRelease();
            (*(void (**)(unsigned char *, uint64_t))(v50 + 8))(v63, v17);

LABEL_15:
            unint64_t v10 = v47;
            unint64_t v12 = v54;
            if (v54 == v46)
            {
              unint64_t v5 = v64;
              goto LABEL_5;
            }
          }
        }
      }
      else
      {
        uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v11) {
          goto LABEL_12;
        }
      }
      unint64_t v5 = MEMORY[0x263F8EE78];
LABEL_5:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_251ED5864(v5);
      uint64_t v4 = v42;
    }
    while (v42 != v40);
    swift_bridgeObjectRelease();
    return v65;
  }
  else
  {
LABEL_36:
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
}

uint64_t sub_251DF84BC(uint64_t a1)
{
  return a1;
}

uint64_t StaticEndpoint.canBeToggled.getter()
{
  uint64_t v1 = type metadata accessor for StaticEndpoint();
  if (*(void *)(v0 + *(int *)(v1 + 28)) == 2)
  {
    char v2 = 0;
  }
  else if (*(void *)(*(void *)(v0 + *(int *)(v1 + 36)) + 16) && (sub_2519FE614(10), (v3 & 1) != 0))
  {
    char v2 = 1;
  }
  else
  {
    uint64_t v4 = swift_bridgeObjectRetain();
    char v2 = sub_251D74360(v4);
    swift_bridgeObjectRelease();
  }
  return v2 & 1;
}

uint64_t StaticEndpoint.isActivated.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for StaticEndpoint();
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  unint64_t v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(v0 + *(int *)(v3 + 28)) == 2)
  {
LABEL_7:
    LOBYTE(v9) = 0;
    return v9 & 1;
  }
  uint64_t v6 = *(void *)(v0 + *(int *)(v3 + 36));
  if (!*(void *)(v6 + 16)
    || (unint64_t v7 = sub_2519FE614(10), (v8 & 1) == 0)
    || (sub_251A1A930(*(void *)(v6 + 56) + (v7 << 8), (uint64_t)v11),
        sub_251A1A930((uint64_t)v11, (uint64_t)v12),
        sub_251A4DB2C((uint64_t)v12) != 1))
  {
    sub_251DF91CC(v1, (uint64_t)v5);
    StaticEndpoint.rvcClusterGroup.getter((uint64_t)v14);
    sub_251DF9230((uint64_t)v5);
    sub_251C335DC((uint64_t)v14, (uint64_t)v11);
    sub_251C335DC((uint64_t)v11, (uint64_t)v12);
    if (sub_251B72348((uint64_t)v12) != 1)
    {
      unsigned int v9 = (v13 > 6u) | (0x15u >> v13);
      sub_251B72360(v11);
      return v9 & 1;
    }
    goto LABEL_7;
  }
  LOBYTE(v9) = *(unsigned char *)(sub_251A4E128((uint64_t)v12) + 11);
  sub_251DF91CC(v1, (uint64_t)v5);
  sub_251DF9230((uint64_t)v5);
  return v9 & 1;
}

uint64_t StaticEndpoint.statusString.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for StaticEndpoint();
  if (*(void *)(v0 + *(int *)(v2 + 28)) == 2) {
    return static String.hfLocalized(_:)(0xD00000000000001ELL, 0x8000000251F6D380);
  }
  uint64_t v4 = v2;
  uint64_t v5 = swift_bridgeObjectRetain();
  uint64_t v6 = sub_251AC549C(v5);
  uint64_t result = sub_251A53EB8(v6);
  if ((v9 & 1) == 0)
  {
    if (*(_DWORD *)(v6 + 36) == v8)
    {
      if (result == 1 << *(unsigned char *)(v6 + 32))
      {
        swift_release();
        return 0;
      }
      sub_251A54058(result, v8, 0, v6, v25);
      swift_release();
      if (LOBYTE(v25[0]) - 4 >= 4)
      {
        if (LOBYTE(v25[0]) != 23) {
          return 0;
        }
      }
      else
      {
        uint64_t v10 = *(void *)(v1 + *(int *)(v4 + 36));
        if (*(void *)(v10 + 16))
        {
          unint64_t v11 = sub_2519FE614(10);
          if (v12)
          {
            sub_251A1A930(*(void *)(v10 + 56) + (v11 << 8), (uint64_t)v24);
            sub_251A1A930((uint64_t)v24, (uint64_t)v25);
            if (sub_251A4DB2C((uint64_t)v25) == 1)
            {
              int v13 = *(unsigned __int8 *)(sub_251A4E128((uint64_t)v25) + 11);
              if (*(void *)(v10 + 16)
                && (unint64_t v14 = sub_2519FE614(11), (v15 & 1) != 0)
                && (sub_251A1A930(*(void *)(v10 + 56) + (v14 << 8), (uint64_t)v22),
                    sub_251A1A930((uint64_t)v22, (uint64_t)v23),
                    sub_251A4DB2C((uint64_t)v23) == 4)
                && *(unsigned char *)(sub_251A4E128((uint64_t)v23) + 11)
                && v13)
              {
                sub_251B3F4F4();
                id v16 = (void *)sub_251F360F0();
                uint64_t v17 = (void *)sub_251F360F0();
                uint64_t v18 = (void *)sub_251F360F0();
                uint64_t v3 = sub_251D3B848(v16);
              }
              else
              {
                if (v13) {
                  uint64_t v20 = 0xD000000000000021;
                }
                else {
                  uint64_t v20 = 0xD000000000000022;
                }
                if (v13) {
                  uint64_t v21 = 0x8000000251F6CEB0;
                }
                else {
                  uint64_t v21 = 0x8000000251F6CE80;
                }
                uint64_t v3 = static String.hfLocalized(_:)(v20, v21);
                swift_bridgeObjectRelease();
              }
              return v3;
            }
          }
        }
      }
      StaticEndpoint.primaryCluster.getter((uint64_t)v25);
      uint64_t v3 = v26;
      if (v26)
      {
        uint64_t v19 = v27;
        __swift_project_boxed_opaque_existential_1(v25, v26);
        uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 8))(v3, v19);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v25);
      }
      else
      {
        sub_251DF928C((uint64_t)v25);
      }
      return v3;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t StaticEndpoint.tileStatusString.getter()
{
  uint64_t v1 = 0;
  uint64_t v2 = 0;
  if (*(void *)(v0 + *(int *)(type metadata accessor for StaticEndpoint() + 28)) != 1)
  {
    uint64_t v1 = static String.hfLocalized(_:)(0xD00000000000001ELL, 0x8000000251F6D380);
    uint64_t v2 = v3;
  }
  StaticEndpoint.primaryCluster.getter((uint64_t)v13);
  uint64_t v4 = v14;
  if (v14)
  {
    uint64_t v5 = v15;
    __swift_project_boxed_opaque_existential_1(v13, v14);
    uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v13);
  }
  else
  {
    sub_251DF928C((uint64_t)v13);
    uint64_t v6 = 0;
  }
  StaticEndpoint.primaryCluster.getter((uint64_t)v13);
  uint64_t v7 = v14;
  if (!v14)
  {
    sub_251DF928C((uint64_t)v13);
    if (!v2) {
      goto LABEL_12;
    }
LABEL_11:
    uint64_t v6 = v1;
    goto LABEL_13;
  }
  uint64_t v8 = v15;
  __swift_project_boxed_opaque_existential_1(v13, v14);
  uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 24))(v7, v8);
  uint64_t v11 = v10;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v13);
  if (v2) {
    goto LABEL_11;
  }
  if (!v11)
  {
LABEL_12:
    swift_bridgeObjectRetain();
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = v9;
LABEL_13:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t MatterDeviceType.defaultIconSymbol.getter()
{
  return IconSymbol.rawValue.getter();
}

uint64_t StaticEndpoint.accessoryControlStatusString.getter()
{
  uint64_t v1 = 0;
  uint64_t v2 = 0;
  if (*(void *)(v0 + *(int *)(type metadata accessor for StaticEndpoint() + 28)) != 1)
  {
    uint64_t v1 = static String.hfLocalized(_:)(0xD00000000000001ELL, 0x8000000251F6D380);
    uint64_t v2 = v3;
  }
  StaticEndpoint.primaryCluster.getter((uint64_t)v13);
  uint64_t v4 = v14;
  if (v14)
  {
    uint64_t v5 = v15;
    __swift_project_boxed_opaque_existential_1(v13, v14);
    uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
    uint64_t v4 = v7;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v13);
  }
  else
  {
    sub_251DF928C((uint64_t)v13);
    uint64_t v6 = 0;
  }
  StaticEndpoint.primaryCluster.getter((uint64_t)v13);
  uint64_t v8 = v14;
  if (v14)
  {
    uint64_t v9 = v15;
    __swift_project_boxed_opaque_existential_1(v13, v14);
    uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 24))(v8, v9);
    uint64_t v8 = v11;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v13);
    if (!v2)
    {
LABEL_10:
      if (v4)
      {
        if (v8)
        {
          v13[0] = v6;
          v13[1] = v4;
          swift_bridgeObjectRetain();
          sub_251F35800();
          sub_251F35800();
          uint64_t v1 = v13[0];
          goto LABEL_16;
        }
      }
      else if (v8)
      {
        swift_bridgeObjectRetain();
        uint64_t v1 = v10;
        goto LABEL_16;
      }
      swift_bridgeObjectRetain();
      uint64_t v1 = v6;
    }
  }
  else
  {
    sub_251DF928C((uint64_t)v13);
    uint64_t v10 = 0;
    if (!v2) {
      goto LABEL_10;
    }
  }
LABEL_16:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t StaticEndpoint.tileStatusStringIconSymbolSuffix.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for StaticEndpoint() + 36));
  if (!*(void *)(v1 + 16)) {
    return 0;
  }
  unint64_t v2 = sub_2519FE614(2);
  if ((v3 & 1) == 0) {
    return 0;
  }
  sub_251A1A930(*(void *)(v1 + 56) + (v2 << 8), (uint64_t)v6);
  sub_251A1A930((uint64_t)v6, (uint64_t)v7);
  if (sub_251A4DB2C((uint64_t)v7) != 6) {
    return 0;
  }
  uint64_t v4 = sub_251A4E128((uint64_t)v7);
  if (*(unsigned char *)(v4 + 22) == 1) {
    return 0;
  }
  if (*(unsigned __int8 *)(v4 + 21) >= 0xAu) {
    return 0;
  }
  return 0x2E79726574746162;
}

uint64_t StaticEndpoint.roomId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + *(int *)(type metadata accessor for StaticEndpoint() + 48));
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251ABDFB8(v3, (uint64_t)v6);
  uint64_t v7 = sub_251F34DA0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(a1, v6, v7);
  }
  __break(1u);
  return result;
}

uint64_t sub_251DF8F9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(v2 + *(int *)(a1 + 48));
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251ABDFB8(v4, (uint64_t)v7);
  uint64_t v8 = sub_251F34DA0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(a2, v7, v8);
  }
  __break(1u);
  return result;
}

char StaticEndpoint.statusIcon.getter@<W0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for StaticEndpoint();
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_251AC549C(v4);
  uint64_t v6 = sub_251A53EB8(v5);
  if (v8) {
    goto LABEL_11;
  }
  if (*(_DWORD *)(v5 + 36) != v7)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    return v6;
  }
  if (v6 == 1 << *(unsigned char *)(v5 + 32))
  {
    LOBYTE(v6) = swift_release();
    __int16 v9 = 27;
  }
  else
  {
    sub_251A54058(v6, v7, 0, v5, v17);
    LOBYTE(v6) = swift_release();
    __int16 v9 = v17[0];
  }
  uint64_t v10 = v1 + *(int *)(v3 + 52);
  uint64_t v11 = *(void **)(v10 + 24);
  if (v11)
  {
    uint64_t v12 = *(void *)(v10 + 16);
    swift_bridgeObjectRetain();
    v13._uint64_t countAndFlagsBits = v12;
    v13._object = v11;
    LOBYTE(v6) = IconSymbol.init(rawValue:)(v13);
    char v14 = v16;
  }
  else
  {
    char v14 = 89;
  }
  *(_WORD *)a1 = v9;
  *(unsigned char *)(a1 + 2) = 1;
  *(unsigned char *)(a1 + 3) = v14;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  return v6;
}

uint64_t MatterDeviceType.canBeToggledByDefault.getter()
{
  return (*v0 < 0x16uLL) & (0x203AD0u >> *v0);
}

uint64_t sub_251DF91CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticEndpoint();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_251DF9230(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StaticEndpoint();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_251DF928C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3AD0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_251DF92EC(void *a1)
{
  a1[1] = sub_251DF939C(&qword_269B9CE40);
  a1[2] = sub_251DF939C(&qword_269B9CE18);
  a1[3] = sub_251DF939C(&qword_269B9EDC8);
  uint64_t result = sub_251DF939C(&qword_269B9EDD0);
  a1[4] = result;
  return result;
}

uint64_t sub_251DF939C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for StaticEndpoint();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t ReachabilityEvent.init(id:reachable:date:creationDate:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(a5, a1, v10);
  uint64_t v11 = (int *)type metadata accessor for ReachabilityEvent();
  *(unsigned char *)(a5 + v11[5]) = a2;
  uint64_t v12 = a5 + v11[6];
  uint64_t v13 = sub_251F34D20();
  char v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t, uint64_t))v16)((void *)(v13 - 8), v12, a3, v13);
  uint64_t v14 = a5 + v11[7];
  return v16(v14, a4, v13);
}

uint64_t type metadata accessor for ReachabilityEvent()
{
  uint64_t result = qword_269BA3AE0;
  if (!qword_269BA3AE0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t static ReachabilityEvent.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((sub_251F34D70() & 1) != 0
    && (uint64_t v4 = type metadata accessor for ReachabilityEvent(),
        *(unsigned __int8 *)(a1 + *(int *)(v4 + 20)) == *(unsigned __int8 *)(a2 + *(int *)(v4 + 20)))
    && (sub_251F34CD0() & 1) != 0)
  {
    return sub_251F34CD0() & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t ReachabilityEvent.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_251F34DA0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t ReachabilityEvent.reachable.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ReachabilityEvent() + 20));
}

uint64_t ReachabilityEvent.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReachabilityEvent() + 24);
  uint64_t v4 = sub_251F34D20();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t ReachabilityEvent.creationDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ReachabilityEvent() + 28);
  uint64_t v4 = sub_251F34D20();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t ReachabilityEvent.hash(into:)()
{
  return sub_251F35610();
}

uint64_t ReachabilityEvent.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t sub_251DF9920(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((sub_251F34D70() & 1) != 0
    && *(unsigned __int8 *)(a1 + *(int *)(a3 + 20)) == *(unsigned __int8 *)(a2 + *(int *)(a3 + 20))
    && (sub_251F34CD0() & 1) != 0)
  {
    return sub_251F34CD0() & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_251DF999C()
{
  return sub_251F36D00();
}

uint64_t sub_251DF9A90()
{
  return sub_251F35610();
}

uint64_t sub_251DF9B6C()
{
  return sub_251F36D00();
}

unint64_t sub_251DF9C60()
{
  unint64_t result = qword_269BA3AD8;
  if (!qword_269BA3AD8)
  {
    type metadata accessor for ReachabilityEvent();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3AD8);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for ReachabilityEvent(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_251F34DA0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
    __int16 v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_251F34D20();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    v12(v9, v10, v11);
    v12((char *)a1 + a3[7], (char *)a2 + a3[7], v11);
  }
  return a1;
}

uint64_t destroy for ReachabilityEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  uint64_t v6 = sub_251F34D20();
  __int16 v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v9)((void *)(v6 - 8), v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 28);
  return v9(v7, v6);
}

uint64_t initializeWithCopy for ReachabilityEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_251F34D20();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  v11(v8, v9, v10);
  v11(a1 + a3[7], a2 + a3[7], v10);
  return a1;
}

uint64_t assignWithCopy for ReachabilityEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v7 = a3[6];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_251F34D20();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24);
  v11(v8, v9, v10);
  v11(a1 + a3[7], a2 + a3[7], v10);
  return a1;
}

uint64_t initializeWithTake for ReachabilityEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_251F34D20();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v11(a1 + a3[7], a2 + a3[7], v10);
  return a1;
}

uint64_t assignWithTake for ReachabilityEvent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_251F34D20();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v11(a1 + a3[7], a2 + a3[7], v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReachabilityEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251DFA2B0);
}

uint64_t sub_251DFA2B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 254)
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 2) {
      return ((v10 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v11 = sub_251F34D20();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 24);
    return v12(v14, a2, v13);
  }
}

uint64_t storeEnumTagSinglePayload for ReachabilityEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251DFA3FC);
}

uint64_t sub_251DFA3FC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_251F34DA0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 254)
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  }
  else
  {
    uint64_t v11 = sub_251F34D20();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 24);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t sub_251DFA524()
{
  uint64_t result = sub_251F34DA0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_251F34D20();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void sub_251DFA5F4(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_251F362B0();
    sub_251A1A568(0, &qword_26B21F188);
    sub_251E1CD34();
    sub_251F35E90();
    uint64_t v1 = v21;
    uint64_t v20 = v22;
    uint64_t v2 = v23;
    int64_t v3 = v24;
    uint64_t v4 = v25;
  }
  else
  {
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v20 = a1 + 56;
    uint64_t v2 = ~v5;
    uint64_t v6 = -v5;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    uint64_t v4 = v7 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    int64_t v3 = 0;
  }
  int64_t v8 = (unint64_t)(v2 + 64) >> 6;
  uint64_t v19 = (char *)MEMORY[0x263F8EE78];
LABEL_8:
  int64_t v9 = v3;
  unint64_t v10 = v4;
  while (1)
  {
    if (v1 < 0)
    {
      if (!sub_251F36340()) {
        goto LABEL_39;
      }
      sub_251A1A568(0, &qword_26B21F188);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v12 = v26;
      swift_unknownObjectRelease();
      int64_t v3 = v9;
      uint64_t v4 = v10;
      if (!v12) {
        goto LABEL_39;
      }
      goto LABEL_11;
    }
    if (!v10) {
      break;
    }
    uint64_t v4 = (v10 - 1) & v10;
    unint64_t v11 = __clz(__rbit64(v10)) | (v9 << 6);
    int64_t v3 = v9;
LABEL_10:
    id v12 = *(id *)(*(void *)(v1 + 48) + 8 * v11);
    if (!v12) {
      goto LABEL_39;
    }
LABEL_11:
    SymptomError.init(from:)((uint64_t)objc_msgSend(v12, sel_type), (char *)&v26);

    char v13 = (char)v26;
    int64_t v9 = v3;
    unint64_t v10 = v4;
    if (v26 != 23)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v19 = sub_251F100C4(0, *((void *)v19 + 2) + 1, 1, v19);
      }
      unint64_t v18 = *((void *)v19 + 2);
      unint64_t v17 = *((void *)v19 + 3);
      if (v18 >= v17 >> 1) {
        uint64_t v19 = sub_251F100C4((char *)(v17 > 1), v18 + 1, 1, v19);
      }
      *((void *)v19 + 2) = v18 + 1;
      v19[v18 + 32] = v13;
      goto LABEL_8;
    }
  }
  int64_t v3 = v9 + 1;
  if (!__OFADD__(v9, 1))
  {
    if (v3 >= v8) {
      goto LABEL_39;
    }
    unint64_t v14 = *(void *)(v20 + 8 * v3);
    if (!v14)
    {
      int64_t v15 = v9 + 2;
      if (v9 + 2 >= v8) {
        goto LABEL_39;
      }
      unint64_t v14 = *(void *)(v20 + 8 * v15);
      if (v14) {
        goto LABEL_23;
      }
      int64_t v15 = v9 + 3;
      if (v9 + 3 >= v8) {
        goto LABEL_39;
      }
      unint64_t v14 = *(void *)(v20 + 8 * v15);
      if (v14) {
        goto LABEL_23;
      }
      int64_t v15 = v9 + 4;
      if (v9 + 4 >= v8) {
        goto LABEL_39;
      }
      unint64_t v14 = *(void *)(v20 + 8 * v15);
      if (v14)
      {
LABEL_23:
        int64_t v3 = v15;
      }
      else
      {
        int64_t v3 = v9 + 5;
        if (v9 + 5 >= v8) {
          goto LABEL_39;
        }
        unint64_t v14 = *(void *)(v20 + 8 * v3);
        if (!v14)
        {
          int64_t v16 = v9 + 6;
          while (v8 != v16)
          {
            unint64_t v14 = *(void *)(v20 + 8 * v16++);
            if (v14)
            {
              int64_t v3 = v16 - 1;
              goto LABEL_24;
            }
          }
LABEL_39:
          sub_251A1E630();
          return;
        }
      }
    }
LABEL_24:
    uint64_t v4 = (v14 - 1) & v14;
    unint64_t v11 = __clz(__rbit64(v14)) + (v3 << 6);
    goto LABEL_10;
  }
  __break(1u);
}

uint64_t Collection<>.staticAccessoryServiceCharacteristicTriplets<A>(matching:filterOutHiddenStatusAccessories:skipNoResponseAccessories:)()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3B50);
  sub_251A1E590(&qword_269BA3B58, &qword_269BA3B50);
  uint64_t v0 = sub_251F35980();
  uint64_t v1 = sub_251EE0F50(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_251DFAA18@<X0>(char *a1@<X0>, void *a2@<X1>, void *a3@<X2>, int a4@<W3>, unsigned __int8 *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v165 = a7;
  uint64_t v164 = a6;
  id v174 = a3;
  id v173 = a2;
  uint64_t v207 = *MEMORY[0x263EF8340];
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v176 = (uint64_t)v163 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v166 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  MEMORY[0x270FA5388](v166);
  char v175 = (void *)((char *)v163 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v172 = (uint64_t)v163 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v178 = (uint64_t)v163 - v18;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v22 = (char *)v163 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v20);
  uint64_t v167 = (char *)v163 - v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v179 = (uint64_t)v163 - v25;
  int v26 = *a5;
  uint64_t v177 = a1;
  id v27 = objc_msgSend(a1, sel_services);
  sub_251A1A568(0, (unint64_t *)&qword_26B21F180);
  unint64_t v28 = sub_251F35AC0();

  if (v28 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_251F366C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v29 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v30 = MEMORY[0x263F8EE78];
  uint64_t v171 = a8;
  int v170 = v26;
  int v169 = a4;
  uint64_t v168 = v22;
  if (v29)
  {
    uint64_t v205 = (void (**)(char *, uint64_t, uint64_t, uint64_t))MEMORY[0x263F8EE78];
    sub_251A3E084(0, v29 & ~(v29 >> 63), 0);
    if (v29 < 0) {
      __break(1u);
    }
    uint64_t v31 = (uint64_t)v205;
    uint64_t v202 = v28 & 0xC000000000000001;
    uint64_t v32 = (void (**)(char *, uint64_t, uint64_t, uint64_t))sub_251F34DA0();
    uint64_t v33 = 0;
    uint64_t v201 = v32;
    uint64_t v34 = (uint64_t)*(v32 - 1);
    uint64_t v35 = *(void *)(v34 + 64);
    unint64_t v200 = v34 + 32;
    unint64_t v203 = v28;
    do
    {
      MEMORY[0x270FA5388](v32);
      if (v202) {
        id v36 = (id)MEMORY[0x2533AB3A0](v33, v28);
      }
      else {
        id v36 = *(id *)(v28 + 8 * v33 + 32);
      }
      id v37 = v36;
      id v38 = objc_msgSend(v36, sel_uniqueIdentifier);
      sub_251F34D80();

      uint64_t v39 = v31;
      uint64_t v205 = (void (**)(char *, uint64_t, uint64_t, uint64_t))v31;
      unint64_t v41 = *(void *)(v31 + 16);
      unint64_t v40 = *(void *)(v31 + 24);
      if (v41 >= v40 >> 1)
      {
        sub_251A3E084(v40 > 1, v41 + 1, 1);
        uint64_t v39 = (uint64_t)v205;
      }
      ++v33;
      *(void *)(v39 + 16) = v41 + 1;
      uint64_t v31 = v39;
      uint64_t v32 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(*(uint64_t (**)(unint64_t, char *, void (**)(char *, uint64_t, uint64_t, uint64_t)))(v34 + 32))(v39+ ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80))+ *(void *)(v34 + 72) * v41, (char *)v163- ((v35 + 15) & 0xFFFFFFFFFFFFFFF0), v201);
      unint64_t v28 = v203;
    }
    while (v29 != v33);
    swift_bridgeObjectRelease();
    uint64_t v30 = MEMORY[0x263F8EE78];
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v31 = MEMORY[0x263F8EE78];
  }
  uint64_t v205 = (void (**)(char *, uint64_t, uint64_t, uint64_t))v30;
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  v163[1] = v163;
  MEMORY[0x270FA5388](v42 - 8);
  uint64_t v187 = v43;
  uint64_t v44 = (char *)v163 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v186 = *(void *)(v31 + 16);
  v163[2] = v31;
  if (v186)
  {
    uint64_t v45 = v31;
    uint64_t v46 = sub_251F34DA0();
    uint64_t v47 = *(void *)(v46 - 8);
    uint64_t v48 = (void *)v47;
    uint64_t v49 = *(unsigned __int8 *)(v47 + 80);
    uint64_t v50 = (v49 + 32) & ~v49;
    uint64_t v185 = v45 + v50;
    uint64_t v51 = *(void *)(v47 + 72);
    uint64_t v201 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v47 + 56);
    uint64_t v198 = (uint64_t (**)(char *, uint64_t, uint64_t))(v47 + 48);
    uint64_t v196 = v47 + 32;
    uint64_t v53 = v47 + 16;
    uint64_t v52 = *(void *)(v47 + 16);
    uint64_t v202 = v53;
    unint64_t v203 = v52;
    uint64_t v183 = v48;
    unint64_t v200 = (unint64_t)(v48 + 1);
    uint64_t v188 = v50;
    uint64_t v194 = v51;
    char v182 = (void *)(v51 + v50);
    uint64_t v181 = (void *)(v49 | 7);
    swift_bridgeObjectRetain();
    uint64_t v54 = 0;
    long long v180 = xmmword_251F38650;
    uint64_t v184 = v44;
    while (1)
    {
      ((void (*)(char *, uint64_t, uint64_t))v203)(v44, v185 + v194 * v54, v46);
      uint64_t v199 = *v201;
      v199(v44, 0, 1, v46);
      uint64_t v197 = *v198;
      uint64_t v58 = v197(v44, 1, v46);
      if (v58 == 1) {
        break;
      }
      uint64_t v192 = v163;
      uint64_t v193 = (char *)v54;
      uint64_t v59 = v183[8];
      MEMORY[0x270FA5388](v58);
      uint64_t v60 = (char *)v163 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v195 = *(void (**)(char *, char *, uint64_t))(v61 + 32);
      v195(v60, v44, v46);
      uint64_t v190 = v163;
      uint64_t v62 = MEMORY[0x270FA5388](v205);
      unint64_t v64 = (char *)v163 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v65 = *(void *)(v62 + 16);
      unint64_t v191 = v200 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      uint64_t v189 = v62;
      if (v65)
      {
        uint64_t v66 = v62 + v188;
        swift_bridgeObjectRetain();
        while (1)
        {
          ((void (*)(char *, uint64_t, uint64_t))v203)(v64, v66, v46);
          v199(v64, 0, 1, v46);
          uint64_t v67 = v197(v64, 1, v46);
          if (v67 == 1) {
            break;
          }
          MEMORY[0x270FA5388](v67);
          v195((char *)v163 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0), v64, v46);
          sub_251D480E0((unint64_t *)&qword_26B21F2B8, MEMORY[0x270FA95E8]);
          uint64_t v68 = v60;
          char v69 = sub_251F35650();
          unint64_t v57 = *(void (**)(char *, uint64_t))v200;
          (*(void (**)(char *, uint64_t))v200)((char *)v163 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0), v46);
          if (v69)
          {
            swift_bridgeObjectRelease();
            uint64_t v56 = v68;
            goto LABEL_19;
          }
          v66 += v194;
          --v65;
          uint64_t v60 = v68;
          if (!v65) {
            goto LABEL_17;
          }
        }
      }
      else
      {
        swift_bridgeObjectRetain();
LABEL_17:
        v199(v64, 1, 1, v46);
      }
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB80);
      uint64_t v55 = swift_allocObject();
      *(_OWORD *)(v55 + 16) = v180;
      ((void (*)(uint64_t, char *, uint64_t))v203)(v55 + v188, v60, v46);
      sub_251ED7700(v55);
      uint64_t v56 = v60;
      unint64_t v57 = *(void (**)(char *, uint64_t))v200;
LABEL_19:
      uint64_t v54 = (uint64_t)(v193 + 1);
      v57(v56, v46);
      uint64_t v44 = v184;
      if (v54 == v186) {
        goto LABEL_29;
      }
    }
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_29:
    uint64_t v70 = sub_251F34DA0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 56))(v44, 1, 1, v70);
  }
  swift_bridgeObjectRelease_n();
  uint64_t v71 = v205;
  uint64_t v72 = v164;
  swift_bridgeObjectRetain();
  uint64_t v201 = v71;
  id v73 = 0;
  unint64_t v74 = sub_251E13984((uint64_t)v71, v72);
  swift_bridgeObjectRelease_n();
  int64_t v75 = *(void *)(v74 + 16);
  uint64_t v76 = MEMORY[0x263F8EE78];
  if (v75)
  {
    uint64_t v199 = 0;
    uint64_t v205 = (void (**)(char *, uint64_t, uint64_t, uint64_t))MEMORY[0x263F8EE78];
    sub_251A3E3B8(0, v75, 0);
    uint64_t v76 = (uint64_t)v205;
    uint64_t v77 = 0;
    uint64_t v78 = *(void *)(type metadata accessor for StaticService() - 8);
    uint64_t v79 = *(unsigned __int8 *)(v78 + 80);
    unint64_t v200 = v74;
    uint64_t v202 = v74 + ((v79 + 32) & ~v79);
    unint64_t v203 = v78;
    do
    {
      int64_t v80 = v75;
      uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FFB8);
      uint64_t v82 = *(void *)(v81 - 8);
      uint64_t v83 = MEMORY[0x270FA5388](v81 - 8);
      uint64_t v85 = (char *)v163 - ((v84 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v86 = (uint64_t)&v85[*(int *)(v83 + 56)];
      sub_251E153D0(v202 + *(void *)(v203 + 72) * v77, v86, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v87 = sub_251F34DA0();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v87 - 8) + 16))(v85, v86, v87);
      uint64_t v205 = (void (**)(char *, uint64_t, uint64_t, uint64_t))v76;
      unint64_t v89 = *(void *)(v76 + 16);
      unint64_t v88 = *(void *)(v76 + 24);
      if (v89 >= v88 >> 1)
      {
        sub_251A3E3B8(v88 > 1, v89 + 1, 1);
        uint64_t v76 = (uint64_t)v205;
      }
      ++v77;
      *(void *)(v76 + 16) = v89 + 1;
      sub_251A4ECF0((uint64_t)v85, v76+ ((*(unsigned __int8 *)(v82 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80))+ *(void *)(v82 + 72) * v89, &qword_26B21FFB8);
      int64_t v75 = v80;
    }
    while (v80 != v77);
    id v73 = v199;
    unint64_t v74 = v200;
  }
  if (*(void *)(v76 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F1B8);
    uint64_t v90 = sub_251F36700();
  }
  else
  {
    uint64_t v90 = MEMORY[0x263F8EE80];
  }
  uint64_t v205 = (void (**)(char *, uint64_t, uint64_t, uint64_t))v90;
  sub_251E13EA8(v76, 1, (uint64_t *)&v205);
  if (v73)
  {
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    __break(1u);
    return result;
  }
  swift_bridgeObjectRelease();
  uint64_t v91 = (uint64_t)v205;
  uint64_t v92 = v177;
  sub_251E0BAEC(v177, (uint64_t)v205, v179);
  sub_251E0C838(v92, v165, v178);
  swift_bridgeObjectRelease();
  uint64_t v202 = sub_251E0CE44(v92);
  unint64_t v200 = v93;
  id v94 = objc_msgSend(v92, sel_hdm_matterNodeID);
  *(void *)&long long v180 = 0;
  if (v94)
  {
    unint64_t v95 = v94;
    uint64_t v205 = 0;
    unsigned __int8 v206 = 1;
    sub_251F36D80();

    uint64_t v198 = (uint64_t (**)(char *, uint64_t, uint64_t))v205;
    LODWORD(v199) = v206;
  }
  else
  {
    LODWORD(v199) = 1;
    uint64_t v198 = 0;
  }
  uint64_t v96 = v177;
  LODWORD(v197) = sub_251E0CF3C(v177);
  LODWORD(v196) = sub_251E0DBF8(v96, v74);
  LODWORD(v195) = sub_251E0E2C4(v96, v74);
  swift_bridgeObjectRelease();
  id v97 = objc_msgSend(v96, sel_uniqueIdentifier);
  uint64_t v98 = sub_251F34DA0();
  uint64_t v184 = (char *)v163;
  uint64_t v99 = *(void *)(v98 - 8);
  uint64_t v100 = *(void *)(v99 + 64);
  MEMORY[0x270FA5388](v98);
  unint64_t v101 = (v100 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v194 = (uint64_t)v163 - v101;
  sub_251F34D80();

  id v102 = objc_msgSend(v96, sel_deviceIdentifier);
  uint64_t v103 = sub_251F356F0();
  uint64_t v105 = v104;

  uint64_t v107 = MEMORY[0x270FA5388](v106);
  uint64_t v108 = (char *)v163 - v101;
  MEMORY[0x270FA5388](v107);
  uint64_t v110 = (char *)v163 - ((v109 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34D30();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v99 + 48))(v110, 1, v98) == 1)
  {
    sub_251A1B064((uint64_t)v110, &qword_26B21FF90);
    uint64_t v111 = v175;
    *char v175 = v103;
    v111[1] = v105;
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v112 = *(void (**)(char *, char *, uint64_t))(v99 + 32);
    v112(v108, v110, v98);
    v112((char *)v175, v108, v98);
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v113 = (uint64_t)v167;
  uint64_t v114 = v177;
  uint64_t v115 = v176;
  sub_251D0F984(v114, v176);
  uint64_t v116 = type metadata accessor for StaticDeviceMetadata();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v116 - 8) + 56))(v115, 0, 1, v116);
  uint64_t v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  MEMORY[0x270FA5388](v117 - 8);
  int v119 = (char *)v163 - ((v118 + 15) & 0xFFFFFFFFFFFFFFF0);
  HMAccessory.dateAdded.getter((uint64_t)v119);
  char v120 = sub_251AC52B8();
  unint64_t v203 = v91;
  uint64_t v183 = v163;
  uint64_t v193 = v119;
  if (v120 == 2)
  {
    sub_251A1B128(v179, v113, qword_26B21EE20);
    uint64_t v121 = type metadata accessor for StaticService();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v121 - 8) + 48))(v113, 1, v121) == 1)
    {
      sub_251A1B064(v113, qword_26B21EE20);
      LODWORD(v192) = 0;
    }
    else
    {
      LODWORD(v192) = *(unsigned __int8 *)(v113 + *(int *)(v121 + 28));
      sub_251E154A0(v113, (uint64_t (*)(void))type metadata accessor for StaticService);
    }
  }
  else
  {
    LODWORD(v192) = v120 & 1;
  }
  id v122 = objc_msgSend(v173, sel_uniqueIdentifier);
  char v182 = v163;
  MEMORY[0x270FA5388](v122);
  unint64_t v123 = (v100 + 15) & 0xFFFFFFFFFFFFFFF0;
  unint64_t v191 = (unint64_t)v163 - v123;
  sub_251F34D80();

  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB80);
  unint64_t v124 = (*(unsigned __int8 *)(v99 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v99 + 80);
  uint64_t v125 = swift_allocObject();
  *(_OWORD *)(v125 + 16) = xmmword_251F38650;
  id v126 = v174;
  id v127 = objc_msgSend(v174, sel_uniqueIdentifier);
  MEMORY[0x270FA5388](v127);
  sub_251F34D80();

  (*(void (**)(unint64_t, char *, uint64_t))(v99 + 32))(v125 + v124, (char *)v163 - v123, v98);
  uint64_t v128 = sub_251C08E40(v125);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  id v129 = objc_msgSend(v126, sel_name);
  uint64_t v130 = sub_251F356F0();
  uint64_t v132 = v131;

  LODWORD(v190) = objc_msgSend(v114, sel_isCurrentAccessory);
  LODWORD(v189) = HMAccessory.isFavorite.getter();
  LODWORD(v188) = HMAccessory.shouldShowInDashboard.getter();
  LODWORD(v186) = HMAccessory.contributesToHomeStatus.getter();
  uint64_t v133 = HMAccessory.showAsIndividualTiles.getter();
  LODWORD(v185) = v133;
  uint64_t v181 = v163;
  MEMORY[0x270FA5388](v133);
  uint64_t v135 = (char *)v163 - ((v134 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v136 = (uint64_t)v168;
  sub_251A1B128(v179, (uint64_t)v168, qword_26B21EE20);
  uint64_t v137 = type metadata accessor for StaticService();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v137 - 8) + 48))(v136, 1, v137) == 1)
  {
    sub_251A1B064(v136, qword_26B21EE20);
    uint64_t v138 = 1;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v99 + 16))(v135, v136, v98);
    sub_251E154A0(v136, (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t v138 = 0;
  }
  int v139 = v169;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v99 + 56))(v135, v138, 1, v98);
  HMAccessory.specialMediaCategory.getter((unsigned __int16 *)&v205);
  id v140 = objc_msgSend(v114, sel_category);
  id v141 = objc_msgSend(v140, sel_categoryType);

  uint64_t v142 = sub_251F356F0();
  uint64_t v144 = v143;

  id v145 = objc_msgSend(v114, sel_uniqueIdentifiersForBridgedAccessories);
  if (v145)
  {
    uint64_t v146 = v145;
    uint64_t v187 = sub_251F35AC0();
  }
  else
  {
    uint64_t v187 = 0;
  }
  sub_251A1B128(v178, v172, &qword_26B21F120);
  if (v139 == 2)
  {
    if (objc_msgSend(v114, sel_isReachable)) {
      goto LABEL_62;
    }
  }
  else if (v139)
  {
    goto LABEL_62;
  }
  if (objc_msgSend(v114, sel_suspendedState) != (id)3)
  {
    char v147 = objc_msgSend(v114, sel_suspendedState) == (id)2;
    goto LABEL_64;
  }
LABEL_62:
  char v147 = 1;
LABEL_64:
  char v204 = v170;
  id v148 = objc_msgSend(v114, sel_symptomsHandler);
  if (v148)
  {
    uint64_t v149 = v148;
    id v150 = objc_msgSend(v148, sel_symptoms);
    uint64_t v177 = v135;
    char v151 = v147;
    uint64_t v152 = v144;
    uint64_t v153 = v142;
    uint64_t v154 = v132;
    uint64_t v155 = v128;
    uint64_t v156 = v130;
    id v157 = v150;

    sub_251A1A568(0, &qword_26B21F188);
    sub_251E1CD34();
    uint64_t v158 = sub_251F35E40();

    sub_251DFA5F4(v158);
    uint64_t v160 = v159;
    swift_bridgeObjectRelease();
    uint64_t v161 = sub_251EE07D0(v160);

    uint64_t v130 = v156;
    uint64_t v128 = v155;
    uint64_t v132 = v154;
    uint64_t v142 = v153;
    uint64_t v144 = v152;
    char v147 = v151;
    uint64_t v135 = v177;
    swift_bridgeObjectRelease();
  }
  else
  {

    uint64_t v161 = 0;
  }

  sub_251A1B064(v178, &qword_26B21F120);
  sub_251A1B064(v179, qword_26B21EE20);
  return sub_251E01110(v194, v202, v200, (uint64_t)v175, v176, (uint64_t)v193, (uint64_t)v198, (char)v199, v171, (char)v192, v191, v128, v130, v132, (char)v190, v189 & 1, v188 & 1, v186 & 1, v185 & 1,
           v203,
           (uint64_t)v201,
           (uint64_t)v135,
           (__int16 *)&v205,
           v142,
           v144,
           v187,
           v197 & 1,
           v196 & 1,
           v195 & 1,
           v172,
           v147,
           &v204,
           v161);
}

uint64_t StaticAccessory.copyReplacing(id:name:deviceIdentifier:deviceMetadata:dateAdded:matterNodeID:isDoubleHigh:homeId:roomIds:roomName:isCurrentAccessory:isFavorite:shouldShowInDashboard:contributesToHomeStatus:showAsIndividualTiles:staticServicesDictionary:staticServiceIDs:primaryServiceId:specialMediaCategory:accessoryCategory:bridgedAccessoryIds:showAsBridge:isCeilingFanWithLight:isPowerStrip:symptoms:softwareUpdate:isReachable:homeNonResponsiveType:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W7>, uint64_t a9@<X8>, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, char a16, char a17, char a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned __int16 *a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,char a28,char a29,uint64_t a30,uint64_t a31,char a32,unsigned __int8 *a33)
{
  uint64_t v34 = v33;
  LODWORD(v221) = a8;
  uint64_t v237 = a7;
  uint64_t v225 = a6;
  uint64_t v204 = a5;
  uint64_t v200 = a4;
  uint64_t v234 = a3;
  uint64_t v235 = a2;
  uint64_t v243 = a1;
  uint64_t v233 = a9;
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
  uint64_t v36 = MEMORY[0x270FA5388](v35 - 8);
  uint64_t v215 = (char *)&v197 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v36);
  uint64_t v239 = (uint64_t)&v197 - v38;
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
  uint64_t v40 = MEMORY[0x270FA5388](v39 - 8);
  uint64_t v230 = (uint64_t)&v197 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v40);
  uint64_t v240 = (uint64_t)&v197 - v42;
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F090);
  MEMORY[0x270FA5388](v43 - 8);
  uint64_t v226 = (uint64_t *)((char *)&v197 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v197 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  uint64_t v223 = *(uint64_t **)(v197 - 8);
  MEMORY[0x270FA5388](v197);
  uint64_t v238 = (uint64_t)&v197 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v244 = type metadata accessor for StaticAccessory(0);
  uint64_t v46 = MEMORY[0x270FA5388](v244);
  uint64_t v232 = (uint64_t)&v197 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = MEMORY[0x270FA5388](v46);
  int v214 = (char *)&v197 - v49;
  uint64_t v50 = MEMORY[0x270FA5388](v48);
  uint64_t v213 = (uint64_t)&v197 - v51;
  uint64_t v52 = MEMORY[0x270FA5388](v50);
  uint64_t v212 = (char *)&v197 - v53;
  uint64_t v54 = MEMORY[0x270FA5388](v52);
  uint64_t v210 = (char *)&v197 - v55;
  uint64_t v56 = MEMORY[0x270FA5388](v54);
  uint64_t v209 = (char *)&v197 - v57;
  uint64_t v58 = MEMORY[0x270FA5388](v56);
  uint64_t v229 = (uint64_t)&v197 - v59;
  uint64_t v60 = MEMORY[0x270FA5388](v58);
  v228 = (uint64_t *)((char *)&v197 - v61);
  uint64_t v62 = MEMORY[0x270FA5388](v60);
  uint64_t v227 = (char *)&v197 - v63;
  uint64_t v64 = MEMORY[0x270FA5388](v62);
  uint64_t v208 = (uint64_t)&v197 - v65;
  uint64_t v66 = MEMORY[0x270FA5388](v64);
  uint64_t v207 = (char *)&v197 - v67;
  uint64_t v68 = MEMORY[0x270FA5388](v66);
  unint64_t v203 = (char *)&v197 - v69;
  uint64_t v70 = MEMORY[0x270FA5388](v68);
  int v222 = (char *)&v197 - v71;
  uint64_t v72 = MEMORY[0x270FA5388](v70);
  uint64_t v202 = (char *)&v197 - v73;
  uint64_t v74 = MEMORY[0x270FA5388](v72);
  uint64_t v201 = (char *)&v197 - v75;
  uint64_t v76 = MEMORY[0x270FA5388](v74);
  uint64_t v219 = (uint64_t)&v197 - v77;
  uint64_t v78 = MEMORY[0x270FA5388](v76);
  uint64_t v218 = (uint64_t)&v197 - v79;
  uint64_t v80 = MEMORY[0x270FA5388](v78);
  uint64_t v217 = (uint64_t *)((char *)&v197 - v81);
  uint64_t v82 = MEMORY[0x270FA5388](v80);
  uint64_t v216 = (uint64_t)&v197 - v83;
  uint64_t v84 = MEMORY[0x270FA5388](v82);
  uint64_t v220 = (uint64_t)&v197 - v85;
  uint64_t v86 = MEMORY[0x270FA5388](v84);
  unsigned __int8 v206 = (char *)&v197 - v87;
  uint64_t v88 = MEMORY[0x270FA5388](v86);
  uint64_t v199 = (char *)&v197 - v89;
  uint64_t v90 = MEMORY[0x270FA5388](v88);
  char v224 = (uint64_t *)((char *)&v197 - v91);
  uint64_t v92 = MEMORY[0x270FA5388](v90);
  id v94 = (char *)&v197 - v93;
  uint64_t v95 = MEMORY[0x270FA5388](v92);
  id v97 = (char *)&v197 - v96;
  uint64_t v98 = MEMORY[0x270FA5388](v95);
  uint64_t v100 = (char *)&v197 - v99;
  MEMORY[0x270FA5388](v98);
  id v102 = (char *)&v197 - v101;
  int v205 = *a23;
  int v231 = *a33;
  uint64_t v103 = sub_251F34DA0();
  uint64_t v104 = *(void *)(v103 - 8);
  MEMORY[0x270FA5388](v103);
  uint64_t v198 = v105;
  uint64_t v106 = (char *)&v197 - ((v105 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v107 - 8);
  uint64_t v241 = v108;
  uint64_t v109 = (char *)&v197 - ((v108 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1B128(v243, (uint64_t)v109, &qword_26B21FF90);
  sub_251E153D0(v34, (uint64_t)v102, type metadata accessor for StaticAccessory);
  uint64_t v242 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v104 + 48);
  uint64_t v243 = v104 + 48;
  int v110 = v242(v109, 1, v103);
  uint64_t v211 = v106;
  uint64_t v236 = v104;
  if (v110 == 1)
  {
    uint64_t v111 = v106;
    uint64_t v112 = v103;
    (*(void (**)(char *, char *, uint64_t))(v104 + 16))(v111, v102, v103);
    sub_251E154A0((uint64_t)v102, type metadata accessor for StaticAccessory);
    sub_251A1B064((uint64_t)v109, &qword_26B21FF90);
  }
  else
  {
    sub_251E154A0((uint64_t)v102, type metadata accessor for StaticAccessory);
    uint64_t v113 = v106;
    uint64_t v112 = v103;
    (*(void (**)(char *, char *, uint64_t))(v104 + 32))(v113, v109, v103);
  }
  uint64_t v114 = v238;
  uint64_t v115 = (int *)v244;
  uint64_t v116 = v230;
  uint64_t v117 = v200;
  uint64_t v118 = v197;
  sub_251E153D0(v34, (uint64_t)v100, type metadata accessor for StaticAccessory);
  if (v234)
  {
    uint64_t v230 = v234;
  }
  else
  {
    int v119 = (uint64_t *)&v100[v115[5]];
    uint64_t v120 = v119[1];
    uint64_t v235 = *v119;
    uint64_t v230 = v120;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_251E154A0((uint64_t)v100, type metadata accessor for StaticAccessory);
  uint64_t v121 = (uint64_t)v226;
  sub_251A1B128(v117, (uint64_t)v226, &qword_26B21F090);
  sub_251E153D0(v34, (uint64_t)v97, type metadata accessor for StaticAccessory);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v223[6])(v121, 1, v118) == 1)
  {
    sub_251E153D0((uint64_t)&v97[v115[6]], v114, type metadata accessor for StaticAccessory.DeviceIdentifier);
    sub_251E154A0((uint64_t)v97, type metadata accessor for StaticAccessory);
    sub_251A1B064(v121, &qword_26B21F090);
  }
  else
  {
    sub_251E154A0((uint64_t)v97, type metadata accessor for StaticAccessory);
    sub_251E15438(v121, v114, type metadata accessor for StaticAccessory.DeviceIdentifier);
  }
  uint64_t v122 = v112;
  char v123 = v221;
  sub_251A1B128(v204, v116, &qword_26B21F110);
  sub_251E153D0(v34, (uint64_t)v94, type metadata accessor for StaticAccessory);
  uint64_t v124 = type metadata accessor for StaticDeviceMetadata();
  uint64_t v125 = *(void *)(v124 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v125 + 48))(v116, 1, v124) == 1)
  {
    sub_251A1B128((uint64_t)&v94[v115[7]], v240, &qword_26B21F110);
    sub_251E154A0((uint64_t)v94, type metadata accessor for StaticAccessory);
    sub_251A1B064(v116, &qword_26B21F110);
  }
  else
  {
    sub_251E154A0((uint64_t)v94, type metadata accessor for StaticAccessory);
    uint64_t v126 = v240;
    sub_251E15438(v116, v240, (uint64_t (*)(void))type metadata accessor for StaticDeviceMetadata);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v125 + 56))(v126, 0, 1, v124);
  }
  uint64_t v127 = (uint64_t)v206;
  uint64_t v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  uint64_t v226 = &v197;
  MEMORY[0x270FA5388](v128 - 8);
  uint64_t v130 = v225;
  uint64_t v225 = (uint64_t)&v197 - ((v129 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1B128(v130, v225, &qword_26B21EC20);
  uint64_t v131 = (uint64_t)v224;
  sub_251E153D0(v34, (uint64_t)v224, type metadata accessor for StaticAccessory);
  if (v123)
  {
    uint64_t v132 = v131 + v115[9];
    uint64_t v237 = *(void *)v132;
    LODWORD(v206) = *(unsigned __int8 *)(v132 + 8);
  }
  else
  {
    LODWORD(v206) = 0;
  }
  uint64_t v133 = (uint64_t)v199;
  uint64_t v134 = v198;
  sub_251E154A0(v131, type metadata accessor for StaticAccessory);
  sub_251E153D0(v34, v133, type metadata accessor for StaticAccessory);
  if (a10 == 2) {
    int v135 = *(unsigned __int8 *)(v133 + v115[10]);
  }
  else {
    int v135 = a10 & 1;
  }
  LODWORD(v204) = v135;
  uint64_t v136 = (uint64_t)v222;
  uint64_t v137 = v220;
  uint64_t v138 = sub_251E154A0(v133, type metadata accessor for StaticAccessory);
  char v224 = &v197;
  uint64_t v139 = MEMORY[0x270FA5388](v138);
  id v140 = (char *)&v197 - ((v134 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v223 = &v197;
  MEMORY[0x270FA5388](v139);
  uint64_t v142 = (char *)&v197 - ((v141 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1B128(a11, (uint64_t)v142, &qword_26B21FF90);
  sub_251E153D0(v34, v127, type metadata accessor for StaticAccessory);
  if (v242(v142, 1, v122) == 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v236 + 16))(v140, v127 + v115[11], v122);
    sub_251E154A0(v127, type metadata accessor for StaticAccessory);
    sub_251A1B064((uint64_t)v142, &qword_26B21FF90);
  }
  else
  {
    sub_251E154A0(v127, type metadata accessor for StaticAccessory);
    (*(void (**)(char *, char *, uint64_t))(v236 + 32))(v140, v142, v122);
  }
  uint64_t v234 = a13;
  sub_251E153D0(v34, v137, type metadata accessor for StaticAccessory);
  int v222 = v140;
  uint64_t v143 = v115;
  if (a12)
  {
    uint64_t v221 = a12;
  }
  else
  {
    uint64_t v221 = *(void *)(v137 + v115[12]);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_251E154A0(v137, type metadata accessor for StaticAccessory);
  uint64_t v144 = v216;
  sub_251E153D0(v34, v216, type metadata accessor for StaticAccessory);
  uint64_t v145 = a14;
  if (!a14)
  {
    uint64_t v234 = *(void *)(v144 + v115[13]);
    uint64_t v145 = swift_bridgeObjectRetain();
  }
  uint64_t v220 = v145;
  swift_bridgeObjectRetain();
  sub_251E154A0(v144, type metadata accessor for StaticAccessory);
  uint64_t v146 = (uint64_t)v217;
  sub_251E153D0(v34, (uint64_t)v217, type metadata accessor for StaticAccessory);
  uint64_t v147 = v136;
  if (a15 == 2) {
    int v148 = *(unsigned __int8 *)(v146 + v115[14]);
  }
  else {
    int v148 = a15 & 1;
  }
  LODWORD(v216) = v148;
  uint64_t v149 = (uint64_t)v201;
  sub_251E154A0(v146, type metadata accessor for StaticAccessory);
  uint64_t v150 = v218;
  sub_251E153D0(v34, v218, type metadata accessor for StaticAccessory);
  char v151 = v210;
  if (a16 == 2) {
    int v152 = *(unsigned __int8 *)(v150 + v143[15]);
  }
  else {
    int v152 = a16 & 1;
  }
  LODWORD(v201) = v152;
  sub_251E154A0(v150, type metadata accessor for StaticAccessory);
  uint64_t v153 = v219;
  sub_251E153D0(v34, v219, type metadata accessor for StaticAccessory);
  if (a17 == 2) {
    int v154 = *(unsigned __int8 *)(v153 + v143[16]);
  }
  else {
    int v154 = a17 & 1;
  }
  LODWORD(v210) = v154;
  uint64_t v155 = v153;
  uint64_t v156 = (uint64_t)v151;
  uint64_t v157 = (uint64_t)v202;
  sub_251E154A0(v155, type metadata accessor for StaticAccessory);
  sub_251E153D0(v34, v149, type metadata accessor for StaticAccessory);
  if (a18 == 2) {
    int v158 = *(unsigned __int8 *)(v149 + v143[17]);
  }
  else {
    int v158 = a18 & 1;
  }
  LODWORD(v202) = v158;
  uint64_t v159 = (uint64_t)v207;
  sub_251E154A0(v149, type metadata accessor for StaticAccessory);
  sub_251E153D0(v34, v157, type metadata accessor for StaticAccessory);
  if (a19 == 2) {
    int v160 = *(unsigned __int8 *)(v157 + v143[18]);
  }
  else {
    int v160 = a19 & 1;
  }
  LODWORD(v207) = v160;
  uint64_t v161 = (uint64_t)v203;
  sub_251E154A0(v157, type metadata accessor for StaticAccessory);
  sub_251E153D0(v34, v147, type metadata accessor for StaticAccessory);
  if (a20)
  {
    uint64_t v219 = a20;
  }
  else
  {
    uint64_t v219 = *(void *)(v147 + v143[19]);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_251E154A0(v147, type metadata accessor for StaticAccessory);
  sub_251E153D0(v34, v161, type metadata accessor for StaticAccessory);
  if (a21)
  {
    uint64_t v218 = a21;
  }
  else
  {
    uint64_t v218 = *(void *)(v161 + v143[20]);
    swift_bridgeObjectRetain();
  }
  uint64_t v163 = (uint64_t)v227;
  uint64_t v162 = (uint64_t)v228;
  swift_bridgeObjectRetain();
  uint64_t v164 = sub_251E154A0(v161, type metadata accessor for StaticAccessory);
  v228 = &v197;
  uint64_t v165 = MEMORY[0x270FA5388](v164);
  uint64_t v167 = (char *)&v197 - ((v166 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v217 = &v197;
  MEMORY[0x270FA5388](v165);
  int v169 = (char *)&v197 - v168;
  sub_251A1B128(a22, (uint64_t)&v197 - v168, &qword_26B21FF90);
  sub_251E153D0(v34, v159, type metadata accessor for StaticAccessory);
  if (v242(v169, 1, v122) == 1)
  {
    sub_251A1B128(v159 + v143[21], (uint64_t)v167, &qword_26B21FF90);
    sub_251E154A0(v159, type metadata accessor for StaticAccessory);
    sub_251A1B064((uint64_t)v169, &qword_26B21FF90);
  }
  else
  {
    sub_251E154A0(v159, type metadata accessor for StaticAccessory);
    uint64_t v170 = v236;
    (*(void (**)(char *, char *, uint64_t))(v236 + 32))(v167, v169, v122);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v170 + 56))(v167, 0, 1, v122);
  }
  uint64_t v171 = v208;
  int v172 = v205;
  uint64_t v243 = a24;
  sub_251E153D0(v34, v208, type metadata accessor for StaticAccessory);
  if ((~v172 & 0xFEFC) == 0) {
    LOWORD(v172) = *(_WORD *)(v171 + v143[22]);
  }
  sub_251E154A0(v171, type metadata accessor for StaticAccessory);
  __int16 v246 = v172;
  sub_251E153D0(v34, v163, type metadata accessor for StaticAccessory);
  uint64_t v173 = a25;
  if (!a25)
  {
    id v174 = (uint64_t *)(v163 + v143[23]);
    uint64_t v173 = v174[1];
    uint64_t v243 = *v174;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_251E154A0(v163, type metadata accessor for StaticAccessory);
  sub_251E153D0(v34, v162, type metadata accessor for StaticAccessory);
  uint64_t v175 = a26;
  if (!a26)
  {
    uint64_t v175 = *(void *)(v162 + v143[24]);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_251E154A0(v162, type metadata accessor for StaticAccessory);
  uint64_t v176 = v229;
  sub_251E153D0(v34, v229, type metadata accessor for StaticAccessory);
  if (a27 == 2) {
    int v177 = *(unsigned __int8 *)(v176 + v143[25]);
  }
  else {
    int v177 = a27 & 1;
  }
  LODWORD(v242) = v177;
  uint64_t v178 = (uint64_t)v209;
  sub_251E154A0(v176, type metadata accessor for StaticAccessory);
  sub_251E153D0(v34, v178, type metadata accessor for StaticAccessory);
  if (a28 == 2) {
    int v179 = *(unsigned __int8 *)(v178 + v143[26]);
  }
  else {
    int v179 = a28 & 1;
  }
  LODWORD(v241) = v179;
  sub_251E154A0(v178, type metadata accessor for StaticAccessory);
  sub_251E153D0(v34, v156, type metadata accessor for StaticAccessory);
  if (a29 == 2) {
    char v180 = *(unsigned char *)(v156 + v143[27]);
  }
  else {
    char v180 = a29 & 1;
  }
  uint64_t v181 = (uint64_t)v215;
  uint64_t v182 = (uint64_t)v212;
  sub_251E154A0(v156, type metadata accessor for StaticAccessory);
  sub_251A1B128(a31, v181, &qword_26B21F120);
  sub_251E153D0(v34, v182, type metadata accessor for StaticAccessory);
  uint64_t v183 = type metadata accessor for StaticSoftwareUpdate(0);
  uint64_t v184 = v182;
  uint64_t v185 = *(void *)(v183 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v185 + 48))(v181, 1, v183) == 1)
  {
    uint64_t v186 = v244;
    sub_251A1B128(v184 + *(int *)(v244 + 112), v239, &qword_26B21F120);
    sub_251E154A0(v184, type metadata accessor for StaticAccessory);
    sub_251A1B064(v181, &qword_26B21F120);
  }
  else
  {
    sub_251E154A0(v184, type metadata accessor for StaticAccessory);
    uint64_t v187 = v181;
    uint64_t v188 = v239;
    sub_251E15438(v187, v239, type metadata accessor for StaticSoftwareUpdate);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v185 + 56))(v188, 0, 1, v183);
    uint64_t v186 = v244;
  }
  uint64_t v189 = (uint64_t)v214;
  uint64_t v190 = (uint64_t)v211;
  uint64_t v191 = v213;
  sub_251E153D0(v34, v213, type metadata accessor for StaticAccessory);
  if (a32 == 2) {
    char v192 = *(unsigned char *)(v191 + *(int *)(v186 + 116));
  }
  else {
    char v192 = a32 & 1;
  }
  sub_251E154A0(v191, type metadata accessor for StaticAccessory);
  sub_251E153D0(v34, v189, type metadata accessor for StaticAccessory);
  if (v231 == 2) {
    char v193 = *(unsigned char *)(v189 + *(int *)(v186 + 120));
  }
  else {
    char v193 = v231 & 1;
  }
  sub_251E154A0(v189, type metadata accessor for StaticAccessory);
  char v245 = v193;
  uint64_t v194 = v232;
  sub_251E153D0(v34, v232, type metadata accessor for StaticAccessory);
  uint64_t v195 = a30;
  if (!a30)
  {
    uint64_t v195 = *(void *)(v194 + *(int *)(v244 + 124));
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_251E154A0(v194, type metadata accessor for StaticAccessory);
  return sub_251E01110(v190, v235, v230, v238, v240, v225, v237, (char)v206, v233, v204, (uint64_t)v222, v221, v234, v220, v216, (char)v201, (char)v210, (char)v202, (char)v207,
           v219,
           v218,
           (uint64_t)v167,
           &v246,
           v243,
           v173,
           v175,
           (char)v242,
           v241,
           v180,
           v239,
           v192,
           &v245,
           v195);
}

uint64_t StaticAccessory.visibleStaticServices.getter()
{
  type metadata accessor for StaticAccessory(0);
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_251B83C30(v0);
  uint64_t v2 = sub_251EE10DC(v1);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t StaticAccessory.primaryServiceKind.getter@<X0>(char *a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  int64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for StaticAccessory(0);
  sub_251A1B128(v1 + *(int *)(v13 + 84), (uint64_t)v12, &qword_26B21FF90);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6) == 1)
  {
    sub_251A1B064((uint64_t)v12, &qword_26B21FF90);
    uint64_t v14 = type metadata accessor for StaticService();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v5, 1, 1, v14);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v12, v6);
    uint64_t v15 = *(void *)(v1 + *(int *)(v13 + 76));
    if (*(void *)(v15 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v16 = sub_2519FE584((uint64_t)v9);
      if (v17)
      {
        unint64_t v18 = v16;
        uint64_t v19 = *(void *)(v15 + 56);
        uint64_t v20 = type metadata accessor for StaticService();
        uint64_t v21 = *(void *)(v20 - 8);
        int v26 = a1;
        uint64_t v22 = v21;
        sub_251E153D0(v19 + *(void *)(v21 + 72) * v18, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticService);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v5, 0, 1, v20);
        a1 = v26;
      }
      else
      {
        uint64_t v20 = type metadata accessor for StaticService();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v5, 1, 1, v20);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v20 = type metadata accessor for StaticService();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v5, 1, 1, v20);
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    type metadata accessor for StaticService();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48))(v5, 1, v20) != 1)
    {
      char v24 = v5[*(int *)(v20 + 88)];
      uint64_t result = sub_251E154A0((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticService);
      goto LABEL_12;
    }
  }
  uint64_t result = sub_251A1B064((uint64_t)v5, qword_26B21EE20);
  char v24 = 0;
LABEL_12:
  *a1 = v24;
  return result;
}

uint64_t StaticAccessory.primaryStaticService.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_251F34DA0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v7 - 8);
  int64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for StaticAccessory(0);
  sub_251A1B128(v1 + *(int *)(v10 + 84), (uint64_t)v9, &qword_26B21FF90);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3) == 1)
  {
    sub_251A1B064((uint64_t)v9, &qword_26B21FF90);
    uint64_t v11 = type metadata accessor for StaticService();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(a1, 1, 1, v11);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v9, v3);
    uint64_t v13 = *(void *)(v1 + *(int *)(v10 + 76));
    if (*(void *)(v13 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v14 = sub_2519FE584((uint64_t)v6);
      if (v15)
      {
        unint64_t v16 = v14;
        uint64_t v17 = *(void *)(v13 + 56);
        uint64_t v18 = type metadata accessor for StaticService();
        uint64_t v19 = *(void *)(v18 - 8);
        sub_251E153D0(v17 + *(void *)(v19 + 72) * v16, a1, (uint64_t (*)(void))type metadata accessor for StaticService);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v19 + 56))(a1, 0, 1, v18);
      }
      else
      {
        uint64_t v21 = type metadata accessor for StaticService();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(a1, 1, 1, v21);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v20 = type metadata accessor for StaticService();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(a1, 1, 1, v20);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
}

BOOL StaticAccessory.SpecialMediaCategory.isSiriEndpoint.getter()
{
  return (*v0 & 0xC000) == 0x4000;
}

unint64_t StaticAccessory.staticServices.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for StaticAccessory(0) + 80));
  uint64_t v5 = v0;
  swift_bridgeObjectRetain();
  unint64_t v2 = sub_251A51E88((void (*)(char *))sub_251AB2CBC, (uint64_t)&v4, v1);
  swift_bridgeObjectRelease();
  return v2;
}

HomeDataModel::StaticAccessory::HomePodTypes_optional __swiftcall StaticAccessory.HomePodTypes.init(rawValue:)(Swift::UInt rawValue)
{
  char v2 = 4;
  if (rawValue < 4) {
    char v2 = rawValue;
  }
  *uint64_t v1 = v2;
  return (HomeDataModel::StaticAccessory::HomePodTypes_optional)rawValue;
}

uint64_t StaticAccessory.SpecialMediaCategory.isAppleTVOrHomePod.getter()
{
  unsigned int v1 = *v0;
  unsigned int v2 = v1 >> 14;
  BOOL v4 = v1 >> 14 == 2 && v1 == 32769;
  return !v2 || v4;
}

uint64_t StaticAccessory.set(displayName:)(uint64_t a1, uint64_t a2)
{
  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  return MEMORY[0x270FA2498](sub_251DFE2F4, 0, 0);
}

uint64_t sub_251DFE2F4()
{
  *(void *)(v0 + 144) = sub_251F35C80();
  *(void *)(v0 + 152) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251DFE38C, v2, v1);
}

uint64_t sub_251DFE38C()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251DFE424, 0, 0);
}

uint64_t sub_251DFE424()
{
  *(void *)(v0 + 160) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251DFE4B0, v2, v1);
}

uint64_t sub_251DFE4B0()
{
  swift_release();
  *(void *)(v0 + 168) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251DFE524, 0, 0);
}

uint64_t sub_251DFE524()
{
  *(void *)(v0 + 176) = sub_251F34D50();
  *(void *)(v0 + 184) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251DFE5B8, v2, v1);
}

uint64_t sub_251DFE5B8()
{
  uint64_t v1 = (void *)v0[22];
  uint64_t v2 = (void *)v0[21];
  swift_release();
  v0[24] = objc_msgSend(v2, sel_accessoryFor_, v1);

  return MEMORY[0x270FA2498](sub_251DFE648, 0, 0);
}

uint64_t sub_251DFE648()
{
  uint64_t v1 = (void *)v0[24];
  if (v1)
  {
    uint64_t v2 = sub_251F356C0();
    v0[25] = v2;
    v0[2] = v0;
    v0[3] = sub_251DFE7BC;
    uint64_t v3 = swift_continuation_init();
    v0[10] = MEMORY[0x263EF8330];
    v0[11] = 0x40000000;
    v0[12] = sub_251A5B804;
    v0[13] = &block_descriptor_16;
    v0[14] = v3;
    objc_msgSend(v1, sel_updateName_completionHandler_, v2, v0 + 10);
    return MEMORY[0x270FA23F0](v0 + 2);
  }
  else
  {
    sub_251BB2208();
    swift_allocError();
    swift_willThrow();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
}

uint64_t sub_251DFE7BC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 208) = v1;
  if (v1) {
    uint64_t v2 = sub_251DB995C;
  }
  else {
    uint64_t v2 = sub_251DFE8CC;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_251DFE8CC()
{
  *(void *)(v0 + 216) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251DFE960, v2, v1);
}

uint64_t sub_251DFE960()
{
  uint64_t v1 = *(void **)(v0 + 192);
  swift_release();
  sub_251BB1A40(v1);
  *(void *)(v0 + 224) = 0;
  return MEMORY[0x270FA2498](sub_251DFE9F8, 0, 0);
}

uint64_t sub_251DFE9F8()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251DFEA5C()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

BOOL StaticAccessory.isMultiServiceAccessory.getter()
{
  return StaticAccessory.hasVisibleServices(minCount:)(2);
}

uint64_t StaticAccessory.statusString.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for StaticService();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = &v30[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = type metadata accessor for StaticAccessory(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  int64_t v9 = &v30[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  int v10 = *(unsigned __int8 *)(v1 + *(int *)(v7 + 116));
  uint64_t v11 = sub_251E153D0(v1, (uint64_t)v9, type metadata accessor for StaticAccessory);
  if (v10 != 1)
  {
LABEL_10:
    sub_251E154A0((uint64_t)v9, type metadata accessor for StaticAccessory);
    if (*(unsigned char *)(v1 + *(int *)(v6 + 120)))
    {
      uint64_t v20 = 0xD00000000000001FLL;
      uint64_t v21 = "HFServiceDescriptionUnavailable";
    }
    else
    {
      uint64_t v20 = 0xD00000000000001ELL;
      uint64_t v21 = "HFServiceDescriptionNoResponse";
    }
    uint64_t v18 = static String.hfLocalized(_:)(v20, (unint64_t)(v21 - 32) | 0x8000000000000000);
    uint64_t v19 = v22;
    goto LABEL_14;
  }
  uint64_t v12 = *(void *)&v9[*(int *)(v6 + 80)];
  MEMORY[0x270FA5388](v11);
  *(void *)&v30[-16] = v9;
  swift_bridgeObjectRetain();
  unint64_t v13 = sub_251A51E88((void (*)(char *))sub_251AB3DF0, (uint64_t)&v30[-32], v12);
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(v13 + 16);
  if (v14)
  {
    uint64_t v15 = v13 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v16 = *(void *)(v3 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_251E153D0(v15, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v32 = *(void *)&v5[*(int *)(v2 + 112)];
      char v31 = v5[*(int *)(v2 + 88)];
      Swift::Bool v17 = StaticCharacteristicsBag.isReachable(for:)((HomeDataModel::ServiceKind)&v31);
      sub_251E154A0((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticService);
      if (!v17) {
        break;
      }
      v15 += v16;
      if (!--v14)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_8;
      }
    }
    swift_bridgeObjectRelease_n();
    goto LABEL_10;
  }
  swift_bridgeObjectRelease();
LABEL_8:
  sub_251E154A0((uint64_t)v9, type metadata accessor for StaticAccessory);
  uint64_t v18 = 0;
  uint64_t v19 = 0;
LABEL_14:
  char v23 = StaticAccessory.isUpdating.getter();
  uint64_t v24 = sub_251BCCA04(0);
  uint64_t v25 = sub_251BCF738(0);
  uint64_t v27 = v26;
  if (v23)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v18 = static String.hfLocalized(_:)(0xD00000000000001CLL, 0x8000000251F70F30);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  else if (v19)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v28 = v25;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v27) {
      return v28;
    }
    else {
      return v24;
    }
  }
  return v18;
}

uint64_t StaticAccessory.set(staticRoom:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_251DFEEC4, 0, 0);
}

uint64_t sub_251DFEEC4()
{
  *(void *)(v0 + 32) = sub_251F35C80();
  *(void *)(v0 + 40) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251DFEF5C, v2, v1);
}

uint64_t sub_251DFEF5C()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251DFEFF4, 0, 0);
}

uint64_t sub_251DFEFF4()
{
  *(void *)(v0 + 48) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251DFF080, v2, v1);
}

uint64_t sub_251DFF080()
{
  swift_release();
  *(void *)(v0 + 56) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251DFF0F4, 0, 0);
}

uint64_t sub_251DFF0F4()
{
  *(void *)(v0 + 64) = sub_251F34D50();
  *(void *)(v0 + 72) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251DFF18C, v2, v1);
}

uint64_t sub_251DFF18C()
{
  uint64_t v1 = (void *)v0[8];
  uint64_t v2 = (void *)v0[7];
  swift_release();
  v0[10] = objc_msgSend(v2, sel_roomFor_, v1);

  return MEMORY[0x270FA2498](sub_251DFF21C, 0, 0);
}

uint64_t sub_251DFF21C()
{
  if (v0[10])
  {
    uint64_t v1 = (void *)swift_task_alloc();
    v0[11] = v1;
    *uint64_t v1 = v0;
    v1[1] = sub_251DB8F44;
    uint64_t v2 = v0[3];
    v1[15] = v0[10];
    v1[16] = v2;
    return MEMORY[0x270FA2498](sub_251DFF358, 0, 0);
  }
  else
  {
    sub_251BB2208();
    swift_allocError();
    swift_willThrow();
    uint64_t v3 = (uint64_t (*)(void))v0[1];
    return v3();
  }
}

uint64_t StaticAccessory.set(room:)(uint64_t a1)
{
  *(void *)(v2 + 120) = a1;
  *(void *)(v2 + 128) = v1;
  return MEMORY[0x270FA2498](sub_251DFF358, 0, 0);
}

uint64_t sub_251DFF358()
{
  *(void *)(v0 + 136) = sub_251F35C80();
  *(void *)(v0 + 144) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251DFF3F0, v2, v1);
}

uint64_t sub_251DFF3F0()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251DFF488, 0, 0);
}

uint64_t sub_251DFF488()
{
  *(void *)(v0 + 152) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251DFF514, v2, v1);
}

uint64_t sub_251DFF514()
{
  swift_release();
  *(void *)(v0 + 160) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251DFF588, 0, 0);
}

uint64_t sub_251DFF588()
{
  *(void *)(v0 + 168) = sub_251F34D50();
  *(void *)(v0 + 176) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251DFF61C, v2, v1);
}

uint64_t sub_251DFF61C()
{
  uint64_t v1 = (void *)v0[21];
  uint64_t v2 = (void *)v0[20];
  swift_release();
  v0[23] = objc_msgSend(v2, sel_accessoryFor_, v1);

  return MEMORY[0x270FA2498](sub_251DFF6AC, 0, 0);
}

uint64_t sub_251DFF6AC()
{
  uint64_t v1 = *(void **)(v0 + 184);
  if (v1)
  {
    id v2 = objc_msgSend(v1, sel_home);
    *(void *)(v0 + 192) = v2;
    if (v2)
    {
      uint64_t v3 = v2;
      uint64_t v4 = *(void *)(v0 + 184);
      uint64_t v5 = *(void *)(v0 + 120);
      *(void *)(v0 + 16) = v0;
      *(void *)(v0 + 24) = sub_251DFF844;
      uint64_t v6 = swift_continuation_init();
      *(void *)(v0 + 80) = MEMORY[0x263EF8330];
      *(void *)(v0 + 88) = 0x40000000;
      *(void *)(v0 + 96) = sub_251A5B804;
      *(void *)(v0 + 104) = &block_descriptor_5;
      *(void *)(v0 + 112) = v6;
      objc_msgSend(v3, sel_assignAccessory_toRoom_completionHandler_, v4, v5, v0 + 80);
      return MEMORY[0x270FA23F0](v0 + 16);
    }
  }
  sub_251BB2208();
  swift_allocError();
  swift_willThrow();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_251DFF844()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 200) = v1;
  if (v1) {
    id v2 = sub_251DFFB50;
  }
  else {
    id v2 = sub_251DFF954;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_251DFF954()
{
  *(void *)(v0 + 208) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251DFF9E0, v2, v1);
}

uint64_t sub_251DFF9E0()
{
  uint64_t v1 = (void *)v0[23];
  uint64_t v2 = v0[15];
  swift_release();
  sub_251BB1CD0(v1, v2);
  v0[27] = 0;
  return MEMORY[0x270FA2498](sub_251DFFA80, 0, 0);
}

uint64_t sub_251DFFA80()
{
  uint64_t v1 = *(void **)(v0 + 184);

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_251DFFAE8()
{
  uint64_t v1 = *(void **)(v0 + 184);

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_251DFFB50()
{
  uint64_t v1 = (void *)v0[24];
  uint64_t v2 = (void *)v0[23];
  swift_willThrow();

  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t StaticAccessory.set(showInDashboard:)(char a1)
{
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 96) = a1;
  return MEMORY[0x270FA2498](sub_251DFFBEC, 0, 0);
}

uint64_t sub_251DFFBEC()
{
  *(void *)(v0 + 24) = sub_251F35C80();
  *(void *)(v0 + 32) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251DFFC84, v2, v1);
}

uint64_t sub_251DFFC84()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251DFFD1C, 0, 0);
}

uint64_t sub_251DFFD1C()
{
  *(void *)(v0 + 40) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251DFFDA8, v2, v1);
}

uint64_t sub_251DFFDA8()
{
  swift_release();
  *(void *)(v0 + 48) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251DFFE1C, 0, 0);
}

uint64_t sub_251DFFE1C()
{
  *(void *)(v0 + 56) = sub_251F34D50();
  *(void *)(v0 + 64) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251DFFEB0, v2, v1);
}

uint64_t sub_251DFFEB0()
{
  uint64_t v1 = (void *)v0[7];
  uint64_t v2 = (void *)v0[6];
  swift_release();
  v0[9] = objc_msgSend(v2, sel_accessoryFor_, v1);

  return MEMORY[0x270FA2498](sub_251DFFF40, 0, 0);
}

uint64_t sub_251DFFF40()
{
  if (*(void *)(v0 + 72))
  {
    HMAccessory.shouldShowInDashboard.setter(*(unsigned char *)(v0 + 96));
    *(void *)(v0 + 80) = sub_251F35C70();
    uint64_t v2 = sub_251F35C00();
    return MEMORY[0x270FA2498](sub_251E00040, v2, v1);
  }
  else
  {
    sub_251BB2208();
    swift_allocError();
    swift_willThrow();
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
}

uint64_t sub_251E00040()
{
  uint64_t v1 = *(void **)(v0 + 72);
  swift_release();
  sub_251BB1F78(v1);
  *(void *)(v0 + 88) = 0;
  return MEMORY[0x270FA2498](sub_251E000D4, 0, 0);
}

uint64_t sub_251E000D4()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251E00138()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t StaticAccessory.set(favorite:)(char a1)
{
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 96) = a1;
  return MEMORY[0x270FA2498](sub_251E001C0, 0, 0);
}

uint64_t sub_251E001C0()
{
  *(void *)(v0 + 24) = sub_251F35C80();
  *(void *)(v0 + 32) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251E00258, v2, v1);
}

uint64_t sub_251E00258()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251E002F0, 0, 0);
}

uint64_t sub_251E002F0()
{
  *(void *)(v0 + 40) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251E0037C, v2, v1);
}

uint64_t sub_251E0037C()
{
  swift_release();
  *(void *)(v0 + 48) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251E003F0, 0, 0);
}

uint64_t sub_251E003F0()
{
  *(void *)(v0 + 56) = sub_251F34D50();
  *(void *)(v0 + 64) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251E00484, v2, v1);
}

uint64_t sub_251E00484()
{
  uint64_t v1 = (void *)v0[7];
  uint64_t v2 = (void *)v0[6];
  swift_release();
  v0[9] = objc_msgSend(v2, sel_accessoryFor_, v1);

  return MEMORY[0x270FA2498](sub_251E00514, 0, 0);
}

uint64_t sub_251E00514()
{
  if (*(void *)(v0 + 72))
  {
    HMAccessory.isFavorite.setter(*(unsigned char *)(v0 + 96));
    *(void *)(v0 + 80) = sub_251F35C70();
    uint64_t v2 = sub_251F35C00();
    return MEMORY[0x270FA2498](sub_251E00614, v2, v1);
  }
  else
  {
    sub_251BB2208();
    swift_allocError();
    swift_willThrow();
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
}

uint64_t sub_251E00614()
{
  uint64_t v1 = *(void **)(v0 + 72);
  swift_release();
  sub_251BB1F78(v1);
  *(void *)(v0 + 88) = 0;
  return MEMORY[0x270FA2498](sub_251E1D564, 0, 0);
}

uint64_t StaticAccessory.set(customIconSymbol:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  v3[5] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251E00740, 0, 0);
}

uint64_t sub_251E00740()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = sub_251F34DA0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t v5 = swift_task_alloc();
  uint64_t v6 = type metadata accessor for StaticAccessory(0);
  sub_251A1B128(v1 + *(int *)(v6 + 84), v5, &qword_26B21FF90);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v5, 1, v2) == 1)
  {
    uint64_t v7 = v0[5];
    sub_251A1B064(v5, &qword_26B21FF90);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = type metadata accessor for StaticService();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
LABEL_10:
    sub_251A1B064(v0[5], qword_26B21EE20);
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    return v19();
  }
  uint64_t v9 = v0[4];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v4, v5, v2);
  swift_task_dealloc();
  uint64_t v10 = *(void *)(v9 + *(int *)(v6 + 76));
  if (*(void *)(v10 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v11 = sub_2519FE584(v4);
    uint64_t v12 = v0[5];
    if (v13)
    {
      unint64_t v14 = v11;
      uint64_t v24 = *(void *)(v10 + 56);
      uint64_t v15 = type metadata accessor for StaticService();
      uint64_t v16 = *(void *)(v15 - 8);
      sub_251E153D0(v24 + *(void *)(v16 + 72) * v14, v12, (uint64_t (*)(void))type metadata accessor for StaticService);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v16 + 56))(v12, 0, 1, v15);
    }
    else
    {
      uint64_t v15 = type metadata accessor for StaticService();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v12, 1, 1, v15);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v17 = v0[5];
    uint64_t v15 = type metadata accessor for StaticService();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v17, 1, 1, v15);
  }
  uint64_t v18 = v0[5];
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v2);
  swift_task_dealloc();
  type metadata accessor for StaticService();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v18, 1, v15) == 1) {
    goto LABEL_10;
  }
  uint64_t v21 = (void *)swift_task_alloc();
  v0[6] = v21;
  *uint64_t v21 = v0;
  v21[1] = sub_251E00B98;
  uint64_t v23 = v0[2];
  uint64_t v22 = v0[3];
  return StaticService.set(customIconSymbol:)(v23, v22);
}

uint64_t sub_251E00B98()
{
  uint64_t v1 = *(void *)(*v0 + 40);
  uint64_t v4 = *v0;
  swift_task_dealloc();
  sub_251E154A0(v1, (uint64_t (*)(void))type metadata accessor for StaticService);
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v4 + 8);
  return v2();
}

uint64_t Set<>.staticAccessoriesIgnoringCurrentDevice.getter()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  return sub_251D04848(v0);
}

uint64_t StaticAccessory.name.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for StaticAccessory(0) + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticAccessory.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_251F34DA0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t StaticAccessory.accessory.getter()
{
  *(void *)(v1 + 16) = v0;
  return MEMORY[0x270FA2498](sub_251E00DC0, 0, 0);
}

uint64_t sub_251E00DC0()
{
  *(void *)(v0 + 24) = sub_251F35C80();
  *(void *)(v0 + 32) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251E00E58, v2, v1);
}

uint64_t sub_251E00E58()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251E00EF0, 0, 0);
}

uint64_t sub_251E00EF0()
{
  *(void *)(v0 + 40) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251E00F7C, v2, v1);
}

uint64_t sub_251E00F7C()
{
  swift_release();
  *(void *)(v0 + 48) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251E00FF0, 0, 0);
}

uint64_t sub_251E00FF0()
{
  *(void *)(v0 + 56) = sub_251F34D50();
  *(void *)(v0 + 64) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251E01084, v2, v1);
}

uint64_t sub_251E01084()
{
  uint64_t v1 = (void *)v0[7];
  uint64_t v2 = (void *)v0[6];
  swift_release();
  id v3 = objc_msgSend(v2, sel_accessoryFor_, v1);

  uint64_t v4 = (uint64_t (*)(id))v0[1];
  return v4(v3);
}

uint64_t sub_251E01110@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, char a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, char a16, char a17, char a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,__int16 *a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,char a28,char a29,uint64_t a30,char a31,char *a32,uint64_t a33)
{
  __int16 v50 = *a23;
  char v51 = *a32;
  uint64_t v38 = sub_251F34DA0();
  uint64_t v39 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 32);
  v39(a9, a1, v38);
  uint64_t v40 = (int *)type metadata accessor for StaticAccessory(0);
  uint64_t v41 = (void *)(a9 + v40[5]);
  *uint64_t v41 = a2;
  v41[1] = a3;
  sub_251E15438(a4, a9 + v40[6], type metadata accessor for StaticAccessory.DeviceIdentifier);
  sub_251A4ECF0(a5, a9 + v40[7], &qword_26B21F110);
  sub_251A4ECF0(a6, a9 + v40[8], &qword_26B21EC20);
  uint64_t v42 = a9 + v40[9];
  *(void *)uint64_t v42 = a7;
  *(unsigned char *)(v42 + 8) = a8 & 1;
  *(unsigned char *)(a9 + v40[10]) = a10;
  v39(a9 + v40[11], a11, v38);
  *(void *)(a9 + v40[12]) = a12;
  uint64_t v43 = (void *)(a9 + v40[13]);
  *uint64_t v43 = a13;
  v43[1] = a14;
  *(unsigned char *)(a9 + v40[14]) = a15;
  *(unsigned char *)(a9 + v40[15]) = a16;
  *(unsigned char *)(a9 + v40[16]) = a17;
  *(unsigned char *)(a9 + v40[17]) = a18;
  *(unsigned char *)(a9 + v40[18]) = a19;
  *(void *)(a9 + v40[19]) = a20;
  *(void *)(a9 + v40[20]) = a21;
  sub_251A4ECF0(a22, a9 + v40[21], &qword_26B21FF90);
  *(_WORD *)(a9 + v40[22]) = v50;
  uint64_t v44 = (void *)(a9 + v40[23]);
  void *v44 = a24;
  v44[1] = a25;
  *(void *)(a9 + v40[24]) = a26;
  *(unsigned char *)(a9 + v40[25]) = a27;
  *(unsigned char *)(a9 + v40[26]) = a28;
  *(unsigned char *)(a9 + v40[27]) = a29;
  uint64_t result = sub_251A4ECF0(a30, a9 + v40[28], &qword_26B21F120);
  *(unsigned char *)(a9 + v40[29]) = a31;
  *(unsigned char *)(a9 + v40[30]) = v51;
  *(void *)(a9 + v40[31]) = a33;
  return result;
}

uint64_t StaticAccessory.deviceIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for StaticAccessory(0);
  return sub_251E153D0(v1 + *(int *)(v3 + 24), a1, type metadata accessor for StaticAccessory.DeviceIdentifier);
}

uint64_t StaticAccessory.deviceMetadata.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for StaticAccessory(0);
  return sub_251A1B128(v1 + *(int *)(v3 + 28), a1, &qword_26B21F110);
}

uint64_t StaticAccessory.dateAdded.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for StaticAccessory(0);
  return sub_251A1B128(v1 + *(int *)(v3 + 32), a1, &qword_26B21EC20);
}

uint64_t StaticAccessory.matterNodeID.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for StaticAccessory(0) + 36));
}

uint64_t StaticAccessory.isDoubleHigh.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticAccessory(0) + 40));
}

uint64_t StaticAccessory.homeId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for StaticAccessory(0) + 44);
  uint64_t v4 = sub_251F34DA0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t StaticAccessory.roomIds.getter()
{
  type metadata accessor for StaticAccessory(0);
  return swift_bridgeObjectRetain();
}

uint64_t StaticAccessory.roomName.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for StaticAccessory(0) + 52));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticAccessory.isCurrentAccessory.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticAccessory(0) + 56));
}

uint64_t StaticAccessory.isFavorite.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticAccessory(0) + 60));
}

uint64_t StaticAccessory.shouldShowInDashboard.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticAccessory(0) + 64));
}

uint64_t StaticAccessory.contributesToHomeStatus.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticAccessory(0) + 68));
}

uint64_t StaticAccessory.showAsIndividualTiles.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticAccessory(0) + 72));
}

uint64_t StaticAccessory.staticServicesDictionary.getter()
{
  type metadata accessor for StaticAccessory(0);
  return swift_bridgeObjectRetain();
}

uint64_t StaticAccessory.staticServiceIDs.getter()
{
  type metadata accessor for StaticAccessory(0);
  return swift_bridgeObjectRetain();
}

uint64_t StaticAccessory.primaryServiceId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for StaticAccessory(0);
  return sub_251A1B128(v1 + *(int *)(v3 + 84), a1, &qword_26B21FF90);
}

uint64_t StaticAccessory.specialMediaCategory.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t result = type metadata accessor for StaticAccessory(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 88));
  return result;
}

uint64_t StaticAccessory.accessoryCategory.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for StaticAccessory(0) + 92));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticAccessory.bridgedAccessoryIds.getter()
{
  type metadata accessor for StaticAccessory(0);
  return swift_bridgeObjectRetain();
}

uint64_t StaticAccessory.showAsBridge.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticAccessory(0) + 100));
}

uint64_t StaticAccessory.isCeilingFanWithLight.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticAccessory(0) + 104));
}

uint64_t StaticAccessory.isPowerStrip.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticAccessory(0) + 108));
}

uint64_t StaticAccessory.softwareUpdate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for StaticAccessory(0);
  return sub_251A1B128(v1 + *(int *)(v3 + 112), a1, &qword_26B21F120);
}

uint64_t StaticAccessory.isReachable.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticAccessory(0) + 116));
}

uint64_t StaticAccessory.homeNonResponsiveType.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for StaticAccessory(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 120));
  return result;
}

uint64_t StaticAccessory.symptoms.getter()
{
  type metadata accessor for StaticAccessory(0);
  return swift_bridgeObjectRetain();
}

uint64_t StaticAccessory.hash(into:)(long long *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for StaticSoftwareUpdate(0);
  uint64_t v62 = *(void *)(v4 - 8);
  uint64_t v63 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v58 = (uint64_t)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v61 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for StaticDeviceMetadata();
  uint64_t v59 = *(void *)(v8 - 8);
  uint64_t v60 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v57 = (uint64_t)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_251F34DA0();
  uint64_t v17 = sub_251D480E0((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA95E8]);
  sub_251F35610();
  uint64_t v18 = (int *)type metadata accessor for StaticAccessory(0);
  swift_bridgeObjectRetain();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  sub_251E153D0(v1 + v18[6], (uint64_t)v15, type metadata accessor for StaticAccessory.DeviceIdentifier);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v64 = v17;
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v56 = (uint64_t)&v56;
    uint64_t v20 = *(void *)(v16 - 8);
    MEMORY[0x270FA5388](EnumCaseMultiPayload);
    uint64_t v22 = (char *)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v22, v15, v16);
    sub_251F36CB0();
    sub_251F35610();
    uint64_t v23 = v16;
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v16);
  }
  else
  {
    uint64_t v23 = v16;
    sub_251F36CB0();
    sub_251F357B0();
    swift_bridgeObjectRelease();
  }
  uint64_t v25 = v59;
  uint64_t v24 = v60;
  sub_251A1B128(v2 + v18[7], (uint64_t)v12, &qword_26B21F110);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v12, 1, v24) == 1)
  {
    sub_251F36CC0();
  }
  else
  {
    uint64_t v26 = (uint64_t)v12;
    uint64_t v27 = v57;
    sub_251E15438(v26, v57, (uint64_t (*)(void))type metadata accessor for StaticDeviceMetadata);
    sub_251F36CC0();
    StaticDeviceMetadata.hash(into:)();
    sub_251E154A0(v27, (uint64_t (*)(void))type metadata accessor for StaticDeviceMetadata);
  }
  uint64_t v28 = v23;
  uint64_t v29 = v2 + v18[8];
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  MEMORY[0x270FA5388](v30 - 8);
  uint64_t v32 = (char *)&v56 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1B128(v29, (uint64_t)v32, &qword_26B21EC20);
  uint64_t v33 = sub_251F34D20();
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33);
  if (v35 == 1)
  {
    sub_251F36CC0();
  }
  else
  {
    MEMORY[0x270FA5388](v35);
    uint64_t v37 = (char *)&v56 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v37, v32, v33);
    sub_251F36CC0();
    sub_251D480E0(&qword_269B9CF80, MEMORY[0x270FA9188]);
    sub_251F35610();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v37, v33);
  }
  uint64_t v38 = (uint64_t)v61;
  if (*(unsigned char *)(v2 + v18[9] + 8) == 1)
  {
    sub_251F36CC0();
  }
  else
  {
    sub_251F36CC0();
    sub_251F36CF0();
  }
  sub_251F36CC0();
  sub_251F35610();
  uint64_t v39 = *(void *)(v2 + v18[12]);
  swift_bridgeObjectRetain();
  sub_251A54708(a1, v39);
  swift_bridgeObjectRelease();
  if (*(void *)(v2 + v18[13] + 8))
  {
    sub_251F36CC0();
    swift_bridgeObjectRetain();
    sub_251F357B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_251F36CC0();
  }
  sub_251F36CC0();
  sub_251F36CC0();
  sub_251F36CC0();
  sub_251F36CC0();
  sub_251F36CC0();
  uint64_t v40 = *(void *)(v2 + v18[19]);
  swift_bridgeObjectRetain();
  sub_251A454AC((uint64_t)a1, v40);
  swift_bridgeObjectRelease();
  uint64_t v41 = *(void *)(v2 + v18[20]);
  swift_bridgeObjectRetain();
  sub_251A41A94((uint64_t)a1, v41);
  swift_bridgeObjectRelease();
  uint64_t v42 = v2 + v18[21];
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v43 - 8);
  uint64_t v45 = (char *)&v56 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1B128(v42, (uint64_t)v45, &qword_26B21FF90);
  uint64_t v46 = *(void *)(v28 - 8);
  uint64_t v47 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v46 + 48))(v45, 1, v28);
  if (v47 == 1)
  {
    sub_251F36CC0();
  }
  else
  {
    MEMORY[0x270FA5388](v47);
    uint64_t v49 = (char *)&v56 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v49, v45, v28);
    sub_251F36CC0();
    sub_251F35610();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v49, v28);
  }
  uint64_t v50 = v62;
  if ((~*(unsigned __int16 *)(v2 + v18[22]) & 0xFEFC) != 0)
  {
    __int16 v65 = *(_WORD *)(v2 + v18[22]);
    sub_251F36CC0();
    StaticAccessory.SpecialMediaCategory.hash(into:)();
  }
  else
  {
    sub_251F36CC0();
  }
  uint64_t v51 = v63;
  if (*(void *)(v2 + v18[23] + 8))
  {
    sub_251F36CC0();
    swift_bridgeObjectRetain();
    sub_251F357B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_251F36CC0();
  }
  uint64_t v52 = *(void *)(v2 + v18[24]);
  sub_251F36CC0();
  if (v52)
  {
    swift_bridgeObjectRetain();
    sub_251A41A94((uint64_t)a1, v52);
    swift_bridgeObjectRelease();
  }
  sub_251F36CC0();
  sub_251F36CC0();
  sub_251F36CC0();
  sub_251A1B128(v2 + v18[28], v38, &qword_26B21F120);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v38, 1, v51) == 1)
  {
    sub_251F36CC0();
  }
  else
  {
    uint64_t v53 = v58;
    sub_251E15438(v38, v58, type metadata accessor for StaticSoftwareUpdate);
    sub_251F36CC0();
    sub_251F35610();
    StaticSoftwareUpdate.Kind.hash(into:)();
    sub_251E154A0(v53, type metadata accessor for StaticSoftwareUpdate);
  }
  sub_251F36CC0();
  sub_251F36CB0();
  uint64_t v54 = *(void *)(v2 + v18[31]);
  if (!v54) {
    return sub_251F36CC0();
  }
  sub_251F36CC0();
  swift_bridgeObjectRetain();
  sub_251A54ED4(a1, v54);
  return swift_bridgeObjectRelease();
}

unint64_t sub_251E02468(char a1)
{
  unint64_t result = 25705;
  switch(a1)
  {
    case 1:
      unint64_t result = 1701667182;
      break;
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0x654D656369766564;
      break;
    case 4:
      unint64_t result = 0x6564644165746164;
      break;
    case 5:
      unint64_t result = 0x6F4E72657474616DLL;
      break;
    case 6:
      unint64_t result = 0x656C62756F447369;
      break;
    case 7:
      unint64_t result = 0x6449656D6F68;
      break;
    case 8:
      unint64_t result = 0x7364496D6F6F72;
      break;
    case 9:
      unint64_t result = 0x656D614E6D6F6F72;
      break;
    case 10:
      unint64_t result = 0xD000000000000012;
      break;
    case 11:
      unint64_t result = 0x69726F7661467369;
      break;
    case 12:
    case 14:
    case 22:
    case 26:
      unint64_t result = 0xD000000000000015;
      break;
    case 13:
      unint64_t result = 0xD000000000000017;
      break;
    case 15:
      unint64_t result = 0xD000000000000018;
      break;
    case 16:
      unint64_t result = 0xD000000000000010;
      break;
    case 17:
      unint64_t result = 0xD000000000000010;
      break;
    case 18:
      unint64_t result = 0xD000000000000014;
      break;
    case 19:
      unint64_t result = 0xD000000000000011;
      break;
    case 20:
      unint64_t result = 0xD000000000000013;
      break;
    case 21:
      unint64_t result = 0x72427341776F6873;
      break;
    case 23:
      unint64_t result = 0x537265776F507369;
      break;
    case 24:
      unint64_t result = 0x6572617774666F73;
      break;
    case 25:
      unint64_t result = 0x6168636165527369;
      break;
    case 27:
      unint64_t result = 0x736D6F74706D7973;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_251E027B4()
{
  return sub_251E02468(*v0);
}

uint64_t sub_251E027BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251E1BCB8(a1, a2);
  *a3 = result;
  return result;
}

void sub_251E027E4(unsigned char *a1@<X8>)
{
  *a1 = 28;
}

uint64_t sub_251E027F0(uint64_t a1)
{
  unint64_t v2 = sub_251E15500();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E0282C(uint64_t a1)
{
  unint64_t v2 = sub_251E15500();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticAccessory.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3B98);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251E15500();
  sub_251F36DA0();
  LOBYTE(v16) = 0;
  sub_251F34DA0();
  sub_251D480E0(&qword_26B21E348, MEMORY[0x270FA95E8]);
  sub_251F36A20();
  if (!v2)
  {
    uint64_t v9 = (int *)type metadata accessor for StaticAccessory(0);
    LOBYTE(v16) = 1;
    sub_251F369D0();
    uint64_t v14 = v3;
    LOBYTE(v16) = 2;
    type metadata accessor for StaticAccessory.DeviceIdentifier(0);
    sub_251E15554(&qword_269BA2B80, (void (*)(uint64_t))type metadata accessor for StaticAccessory.DeviceIdentifier);
    sub_251F36A20();
    LOBYTE(v16) = 3;
    type metadata accessor for StaticDeviceMetadata();
    sub_251E15554(&qword_269BA3808, (void (*)(uint64_t))type metadata accessor for StaticDeviceMetadata);
    sub_251F36970();
    LOBYTE(v16) = 4;
    sub_251F34D20();
    sub_251D480E0(&qword_269B9F590, MEMORY[0x270FA9188]);
    sub_251F36970();
    uint64_t v10 = v14;
    LOBYTE(v16) = 5;
    sub_251F369C0();
    LOBYTE(v16) = 6;
    sub_251F369E0();
    LOBYTE(v16) = 7;
    sub_251F36A20();
    uint64_t v16 = *(void *)(v10 + v9[12]);
    char v15 = 8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC40);
    sub_251E1559C(&qword_269B9CC88, &qword_269B9CC40);
    sub_251F36A20();
    LOBYTE(v16) = 9;
    sub_251F36910();
    LOBYTE(v16) = 10;
    sub_251F369E0();
    LOBYTE(v16) = 11;
    sub_251F369E0();
    LOBYTE(v16) = 12;
    sub_251F369E0();
    LOBYTE(v16) = 13;
    sub_251F369E0();
    LOBYTE(v16) = 14;
    sub_251F369E0();
    uint64_t v16 = *(void *)(v14 + v9[19]);
    char v15 = 15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E0B8);
    sub_251B24DC8();
    sub_251F36A20();
    uint64_t v16 = *(void *)(v14 + v9[20]);
    char v15 = 16;
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2C8);
    sub_251E1559C(&qword_269B9D7E8, &qword_26B21F2C8);
    v13[1] = v11;
    sub_251F36A20();
    LOBYTE(v16) = 17;
    sub_251F36970();
    LOWORD(v16) = *(_WORD *)(v14 + v9[22]);
    char v15 = 18;
    sub_251C9D94C();
    sub_251F36970();
    LOBYTE(v16) = 19;
    sub_251F36910();
    uint64_t v16 = *(void *)(v14 + v9[24]);
    char v15 = 20;
    sub_251F36970();
    LOBYTE(v16) = 21;
    sub_251F369E0();
    LOBYTE(v16) = 22;
    sub_251F369E0();
    LOBYTE(v16) = 23;
    sub_251F369E0();
    LOBYTE(v16) = 24;
    type metadata accessor for StaticSoftwareUpdate(0);
    sub_251E15554(&qword_269BA2BB0, (void (*)(uint64_t))type metadata accessor for StaticSoftwareUpdate);
    sub_251F36970();
    LOBYTE(v16) = 25;
    sub_251F369E0();
    LOBYTE(v16) = *(unsigned char *)(v14 + v9[30]);
    char v15 = 26;
    sub_251C84AF4();
    sub_251F36A20();
    uint64_t v16 = *(void *)(v14 + v9[31]);
    char v15 = 27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2B98);
    sub_251D483A8(&qword_269BA2BA0, (void (*)(void))sub_251D48224);
    sub_251F36970();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t StaticAccessory.hashValue.getter()
{
  sub_251F36CA0();
  StaticAccessory.hash(into:)(v1);
  return sub_251F36D00();
}

uint64_t StaticAccessory.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v98 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v92 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v92 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v92 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3BA8);
  uint64_t v99 = *(void *)(v13 - 8);
  uint64_t v100 = v13;
  MEMORY[0x270FA5388](v13);
  char v15 = (char *)&v92 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = (int *)type metadata accessor for StaticAccessory(0);
  MEMORY[0x270FA5388](v105);
  uint64_t v103 = (uint64_t)a1;
  uint64_t v104 = (char *)&v92 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251E15500();
  id v102 = v15;
  sub_251F36D90();
  if (v2)
  {
    uint64_t v106 = v2;
    LODWORD(v102) = 0;
    unsigned int v21 = 0;
    goto LABEL_4;
  }
  uint64_t v101 = v10;
  uint64_t v106 = v12;
  uint64_t v96 = v6;
  id v97 = v9;
  uint64_t v17 = sub_251F34DA0();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void *)(v18 + 64);
  MEMORY[0x270FA5388](v17);
  LOBYTE(v108) = 0;
  uint64_t v20 = sub_251D480E0(&qword_269B9CC80, MEMORY[0x270FA95E8]);
  sub_251F36880();
  uint64_t v95 = v19;
  uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
  uint64_t v36 = v104;
  id v94 = v35;
  v35(v104, (char *)&v92 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), v17);
  LOBYTE(v108) = 1;
  uint64_t v37 = sub_251F36830();
  uint64_t v38 = v105;
  uint64_t v39 = (uint64_t *)&v36[v105[5]];
  uint64_t *v39 = v37;
  v39[1] = v40;
  LOBYTE(v108) = 2;
  sub_251E15554(&qword_269BA2BC0, (void (*)(uint64_t))type metadata accessor for StaticAccessory.DeviceIdentifier);
  uint64_t v41 = (uint64_t)v106;
  sub_251F36880();
  uint64_t v101 = v20;
  sub_251E15438(v41, (uint64_t)&v36[v38[6]], type metadata accessor for StaticAccessory.DeviceIdentifier);
  type metadata accessor for StaticDeviceMetadata();
  LOBYTE(v108) = 3;
  sub_251E15554(&qword_269BA3838, (void (*)(uint64_t))type metadata accessor for StaticDeviceMetadata);
  uint64_t v42 = (uint64_t)v97;
  sub_251F367D0();
  uint64_t v93 = v17;
  sub_251A4ECF0(v42, (uint64_t)&v36[v38[7]], &qword_26B21F110);
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  MEMORY[0x270FA5388](v43 - 8);
  uint64_t v45 = (char *)&v92 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34D20();
  LOBYTE(v108) = 4;
  sub_251D480E0(&qword_269B9DBE8, MEMORY[0x270FA9188]);
  sub_251F367D0();
  sub_251A4ECF0((uint64_t)v45, (uint64_t)&v36[v38[8]], &qword_26B21EC20);
  LOBYTE(v108) = 5;
  uint64_t v46 = sub_251F36820();
  uint64_t v47 = &v36[v38[9]];
  *(void *)uint64_t v47 = v46;
  v47[8] = v48 & 1;
  LOBYTE(v108) = 6;
  uint64_t v49 = sub_251F36840();
  v36[v38[10]] = v49 & 1;
  MEMORY[0x270FA5388](v49);
  uint64_t v51 = (char *)&v92 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v108) = 7;
  uint64_t v52 = v93;
  sub_251F36880();
  v94(&v36[v38[11]], v51, v52);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC40);
  char v107 = 8;
  sub_251E15618(&qword_269B9CC78, &qword_269B9CC40);
  sub_251F36880();
  uint64_t v106 = 0;
  *(void *)&v36[v38[12]] = v108;
  LOBYTE(v108) = 9;
  uint64_t v53 = v106;
  uint64_t v54 = sub_251F36790();
  uint64_t v106 = v53;
  if (v53)
  {
    (*(void (**)(char *, uint64_t))(v99 + 8))(v102, v100);
    LODWORD(v102) = 0;
    unsigned int v21 = 415;
    goto LABEL_4;
  }
  uint64_t v56 = (uint64_t *)&v104[v105[13]];
  *uint64_t v56 = v54;
  v56[1] = v55;
  LOBYTE(v108) = 10;
  uint64_t v57 = v106;
  char v58 = sub_251F36840();
  uint64_t v106 = v57;
  if (v57) {
    goto LABEL_43;
  }
  v104[v105[14]] = v58 & 1;
  LOBYTE(v108) = 11;
  uint64_t v59 = v106;
  char v60 = sub_251F36840();
  uint64_t v106 = v59;
  if (v59) {
    goto LABEL_43;
  }
  v104[v105[15]] = v60 & 1;
  LOBYTE(v108) = 12;
  uint64_t v61 = v106;
  char v62 = sub_251F36840();
  uint64_t v106 = v61;
  if (v61) {
    goto LABEL_43;
  }
  v104[v105[16]] = v62 & 1;
  LOBYTE(v108) = 13;
  uint64_t v63 = v106;
  char v64 = sub_251F36840();
  uint64_t v106 = v63;
  if (v63) {
    goto LABEL_43;
  }
  v104[v105[17]] = v64 & 1;
  LOBYTE(v108) = 14;
  __int16 v65 = v106;
  char v66 = sub_251F36840();
  uint64_t v106 = v65;
  if (v65
    || (v104[v105[18]] = v66 & 1,
        __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E0B8),
        char v107 = 15,
        sub_251B25884(),
        uint64_t v67 = v106,
        sub_251F36880(),
        (uint64_t v106 = v67) != 0))
  {
LABEL_43:
    (*(void (**)(char *, uint64_t))(v99 + 8))(v102, v100);
    LODWORD(v102) = 0;
    unsigned int v21 = 927;
    goto LABEL_4;
  }
  *(void *)&v104[v105[19]] = v108;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2C8);
  char v107 = 16;
  sub_251E15618(&qword_269B9D7F8, &qword_26B21F2C8);
  uint64_t v68 = v106;
  sub_251F36880();
  uint64_t v106 = v68;
  if (v68)
  {
    (*(void (**)(char *, uint64_t))(v99 + 8))(v102, v100);
    LODWORD(v102) = 0;
    unsigned int v21 = 33695;
    goto LABEL_4;
  }
  *(void *)&v104[v105[20]] = v108;
  uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v69 - 8);
  uint64_t v71 = (char *)&v92 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v108) = 17;
  uint64_t v72 = v106;
  sub_251F367D0();
  uint64_t v106 = v72;
  if (v72)
  {
    (*(void (**)(char *, uint64_t))(v99 + 8))(v102, v100);
    LODWORD(v102) = 0;
    int v73 = 266731520;
LABEL_51:
    unsigned int v21 = v73 + 1803167;
    goto LABEL_4;
  }
  sub_251A4ECF0((uint64_t)v71, (uint64_t)&v104[v105[21]], &qword_26B21FF90);
  char v107 = 18;
  sub_251C9DAB4();
  uint64_t v74 = v106;
  sub_251F367D0();
  uint64_t v106 = v74;
  if (v74
    || (*(_WORD *)&v104[v105[22]] = v108, LOBYTE(v108) = 19, uint64_t v75 = v106, v76 = sub_251F36790(), (v106 = v75) != 0))
  {
    (*(void (**)(char *, uint64_t))(v99 + 8))(v102, v100);
    LODWORD(v102) = 0;
    int v73 = 266862592;
    goto LABEL_51;
  }
  uint64_t v78 = (uint64_t *)&v104[v105[23]];
  *uint64_t v78 = v76;
  v78[1] = v77;
  char v107 = 20;
  uint64_t v79 = v106;
  sub_251F367D0();
  uint64_t v106 = v79;
  if (v79)
  {
    (*(void (**)(char *, uint64_t))(v99 + 8))(v102, v100);
    LODWORD(v102) = 0;
    int v73 = 267386880;
    goto LABEL_51;
  }
  *(void *)&v104[v105[24]] = v108;
  LOBYTE(v108) = 21;
  uint64_t v80 = v106;
  char v81 = sub_251F36840();
  uint64_t v106 = v80;
  if (!v80)
  {
    v104[v105[25]] = v81 & 1;
    LOBYTE(v108) = 22;
    uint64_t v82 = v106;
    char v83 = sub_251F36840();
    uint64_t v106 = v82;
    if (!v82)
    {
      v104[v105[26]] = v83 & 1;
      LOBYTE(v108) = 23;
      uint64_t v84 = v106;
      char v85 = sub_251F36840();
      uint64_t v106 = v84;
      if (!v84)
      {
        v104[v105[27]] = v85 & 1;
        type metadata accessor for StaticSoftwareUpdate(0);
        LOBYTE(v108) = 24;
        sub_251E15554(&qword_269BA2BE8, (void (*)(uint64_t))type metadata accessor for StaticSoftwareUpdate);
        uint64_t v86 = v106;
        sub_251F367D0();
        LODWORD(v101) = v86 == 0;
        uint64_t v106 = v86;
        if (!v86)
        {
          sub_251A4ECF0((uint64_t)v96, (uint64_t)&v104[v105[28]], &qword_26B21F120);
          LOBYTE(v108) = 25;
          uint64_t v87 = v106;
          char v88 = sub_251F36840();
          uint64_t v106 = v87;
          if (!v87)
          {
            v104[v105[29]] = v88 & 1;
            char v107 = 26;
            sub_251C84C30();
            uint64_t v89 = v106;
            sub_251F36880();
            uint64_t v106 = v89;
            if (!v89)
            {
              v104[v105[30]] = v108;
              __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2B98);
              char v107 = 27;
              sub_251D483A8(&qword_269BA2BD8, (void (*)(void))sub_251D48418);
              uint64_t v90 = v106;
              sub_251F367D0();
              uint64_t v106 = v90;
              if (!v90)
              {
                (*(void (**)(char *, uint64_t))(v99 + 8))(v102, v100);
                uint64_t v91 = (uint64_t)v104;
                *(void *)&v104[v105[31]] = v108;
                sub_251E153D0(v91, v98, type metadata accessor for StaticAccessory);
                __swift_destroy_boxed_opaque_existential_0(v103);
                return sub_251E154A0(v91, type metadata accessor for StaticAccessory);
              }
            }
          }
        }
        (*(void (**)(char *, uint64_t))(v99 + 8))(v102, v100);
        __swift_destroy_boxed_opaque_existential_0(v103);
        LOBYTE(v31) = 1;
        int v25 = 1;
        int v26 = 1;
        int v27 = 1;
        int v28 = 1;
        int v29 = 1;
        int v30 = 1;
        LODWORD(v98) = 1;
        LODWORD(v99) = 1;
        LODWORD(v100) = 1;
        LODWORD(v103) = 1;
        LODWORD(v102) = 1;
        uint64_t v22 = v104;
        uint64_t v23 = v105;
        goto LABEL_20;
      }
    }
  }
  unsigned int v21 = 1803167;
  (*(void (**)(char *, uint64_t))(v99 + 8))(v102, v100);
  LODWORD(v102) = 1;
LABEL_4:
  uint64_t v22 = v104;
  uint64_t v23 = v105;
  uint64_t result = __swift_destroy_boxed_opaque_existential_0(v103);
  int v25 = (v21 >> 2) & 1;
  int v26 = (v21 >> 3) & 1;
  int v27 = (v21 >> 4) & 1;
  int v28 = (v21 >> 7) & 1;
  int v29 = (v21 >> 8) & 1;
  int v30 = (v21 >> 9) & 1;
  LODWORD(v98) = (v21 >> 15) & 1;
  LODWORD(v99) = HIWORD(v21) & 1;
  LODWORD(v100) = (v21 >> 17) & 1;
  LODWORD(v103) = (v21 >> 19) & 1;
  if ((v21 & 1) == 0)
  {
    LODWORD(v101) = 0;
    if ((v21 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_21;
  }
  LODWORD(v101) = 0;
  int v31 = (v21 >> 1) & 1;
LABEL_20:
  uint64_t v32 = sub_251F34DA0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v32 - 8) + 8))(v22, v32);
  if ((v31 & 1) == 0)
  {
LABEL_6:
    if (v25) {
      goto LABEL_7;
    }
    goto LABEL_22;
  }
LABEL_21:
  uint64_t result = swift_bridgeObjectRelease();
  if (v25)
  {
LABEL_7:
    uint64_t result = sub_251E154A0((uint64_t)&v22[v23[6]], type metadata accessor for StaticAccessory.DeviceIdentifier);
    if ((v26 & 1) == 0) {
      goto LABEL_8;
    }
    goto LABEL_23;
  }
LABEL_22:
  if (!v26)
  {
LABEL_8:
    if (v27) {
      goto LABEL_9;
    }
    goto LABEL_24;
  }
LABEL_23:
  uint64_t result = sub_251A1B064((uint64_t)&v22[v23[7]], &qword_26B21F110);
  if (v27)
  {
LABEL_9:
    uint64_t result = sub_251A1B064((uint64_t)&v22[v23[8]], &qword_26B21EC20);
    if ((v28 & 1) == 0) {
      goto LABEL_10;
    }
    goto LABEL_25;
  }
LABEL_24:
  if (!v28)
  {
LABEL_10:
    if (v29) {
      goto LABEL_11;
    }
    goto LABEL_26;
  }
LABEL_25:
  uint64_t v33 = &v22[v23[11]];
  uint64_t v34 = sub_251F34DA0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v34 - 8) + 8))(v33, v34);
  if (v29)
  {
LABEL_11:
    uint64_t result = swift_bridgeObjectRelease();
    if ((v30 & 1) == 0) {
      goto LABEL_12;
    }
    goto LABEL_27;
  }
LABEL_26:
  if (!v30)
  {
LABEL_12:
    if (v98) {
      goto LABEL_13;
    }
    goto LABEL_28;
  }
LABEL_27:
  uint64_t result = swift_bridgeObjectRelease();
  if (v98)
  {
LABEL_13:
    uint64_t result = swift_bridgeObjectRelease();
    if ((v99 & 1) == 0) {
      goto LABEL_14;
    }
    goto LABEL_29;
  }
LABEL_28:
  if (!v99)
  {
LABEL_14:
    if (v100) {
      goto LABEL_15;
    }
    goto LABEL_30;
  }
LABEL_29:
  uint64_t result = swift_bridgeObjectRelease();
  if (v100)
  {
LABEL_15:
    uint64_t result = sub_251A1B064((uint64_t)&v22[v23[21]], &qword_26B21FF90);
    if ((v103 & 1) == 0) {
      goto LABEL_16;
    }
    goto LABEL_31;
  }
LABEL_30:
  if (!v103)
  {
LABEL_16:
    if (v102) {
      goto LABEL_17;
    }
LABEL_32:
    if (!v101) {
      return result;
    }
    return sub_251A1B064((uint64_t)&v22[v23[28]], &qword_26B21F120);
  }
LABEL_31:
  uint64_t result = swift_bridgeObjectRelease();
  if ((v102 & 1) == 0) {
    goto LABEL_32;
  }
LABEL_17:
  uint64_t result = swift_bridgeObjectRelease();
  if ((v101 & 1) == 0) {
    return result;
  }
  return sub_251A1B064((uint64_t)&v22[v23[28]], &qword_26B21F120);
}

uint64_t sub_251E04390()
{
  sub_251F36CA0();
  StaticAccessory.hash(into:)(v1);
  return sub_251F36D00();
}

uint64_t sub_251E043D4()
{
  sub_251F36CA0();
  StaticAccessory.hash(into:)(v1);
  return sub_251F36D00();
}

uint64_t sub_251E04410@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticAccessory.init(from:)(a1, a2);
}

uint64_t sub_251E04428(void *a1)
{
  return StaticAccessory.encode(to:)(a1);
}

uint64_t StaticAccessory.tileIcon.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v35 = type metadata accessor for StaticService();
  uint64_t v34 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  uint64_t v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for StaticAccessory(0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251E048C4((uint64_t)v45);
  uint64_t countAndFlagsBits = v45[0];
  uint64_t renderingMode = v45[2];
  uint64_t v39 = v45[3];
  uint64_t v38 = (void *)v45[4];
  uint64_t v37 = v45[5];
  uint64_t v11 = (void *)v45[7];
  uint64_t v36 = v45[6];
  HomeDataModel::StaticRenderingMode v12 = v46;
  uint64_t v13 = v47;
  uint64_t v14 = v48;
  HomeDataModel::StaticRenderingMode v15 = v49;
  uint64_t v16 = v1;
  uint64_t v17 = (uint64_t)v10;
  object = (void *)v45[1];
  sub_251E153D0(v16, v17, type metadata accessor for StaticAccessory);
  if (object)
  {
    uint64_t result = sub_251E154A0(v17, type metadata accessor for StaticAccessory);
    uint64_t v20 = countAndFlagsBits;
    char v21 = renderingMode;
    uint64_t v22 = v39;
    uint64_t v23 = v38;
    HomeDataModel::StaticRenderingMode v24 = (char)v37;
    uint64_t v25 = v36;
  }
  else
  {
    uint64_t v26 = (uint64_t)v4;
    uint64_t v38 = (void *)v17;
    StaticAccessory.primaryStaticService.getter((uint64_t)v7);
    int v27 = (int *)v35;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v7, 1, v35) == 1)
    {
      sub_251A1B064((uint64_t)v7, qword_26B21EE20);
      if (qword_269B9C360 != -1) {
        swift_once();
      }
      object = *(void **)algn_269BA00F8;
      uint64_t countAndFlagsBits = qword_269BA00F0;
      uint64_t renderingMode = byte_269BA0100;
      uint64_t v23 = (void *)unk_269BA0110;
      uint64_t v39 = qword_269BA0108;
      HomeDataModel::StaticRenderingMode v24 = byte_269BA0118;
      uint64_t v25 = qword_269BA0120;
      uint64_t v11 = (void *)unk_269BA0128;
      HomeDataModel::StaticRenderingMode v12 = byte_269BA0130;
      uint64_t v13 = qword_269BA0138;
      uint64_t v14 = (void *)unk_269BA0140;
      HomeDataModel::StaticRenderingMode v15 = byte_269BA0148;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      int v28 = (uint64_t *)&v7[v27[21]];
      int v29 = (void *)v28[1];
      if (v29)
      {
        uint64_t v30 = *v28;
        swift_bridgeObjectRetain();
        v31._uint64_t countAndFlagsBits = v30;
        v31._object = v29;
        Icon.init(customIconName:)(&v44, v31);
      }
      else
      {
        int v32 = v7[v27[24]];
        sub_251E153D0((uint64_t)v7, v26, (uint64_t (*)(void))type metadata accessor for StaticService);
        if (v32 == 53) {
          LOBYTE(v32) = *(unsigned char *)(v26 + v27[22]);
        }
        sub_251E154A0(v26, (uint64_t (*)(void))type metadata accessor for StaticService);
        char v43 = v32;
        char v42 = v7[v27[23]];
        Icon.init(serviceKind:serviceSubKind:)(&v44, (HomeDataModel::ServiceKind)&v43, (HomeDataModel::ServiceSubKind_optional)&v42);
      }
      uint64_t v33 = (uint64_t)v7;
      uint64_t countAndFlagsBits = v44.tileOnStateIconInfo.name._countAndFlagsBits;
      object = v44.tileOnStateIconInfo.name._object;
      uint64_t renderingMode = v44.tileOnStateIconInfo.renderingMode;
      uint64_t v23 = v44.tileOffStateIconInfo.name._object;
      uint64_t v39 = v44.tileOffStateIconInfo.name._countAndFlagsBits;
      HomeDataModel::StaticRenderingMode v24 = v44.tileOffStateIconInfo.renderingMode;
      uint64_t v25 = v44.accessoryControlOnStateIconInfo.name._countAndFlagsBits;
      uint64_t v11 = v44.accessoryControlOnStateIconInfo.name._object;
      HomeDataModel::StaticRenderingMode v12 = v44.accessoryControlOnStateIconInfo.renderingMode;
      uint64_t v13 = v44.accessoryControlOffStateIconInfo.name._countAndFlagsBits;
      uint64_t v14 = v44.accessoryControlOffStateIconInfo.name._object;
      HomeDataModel::StaticRenderingMode v15 = v44.accessoryControlOffStateIconInfo.renderingMode;
      sub_251E154A0(v33, (uint64_t (*)(void))type metadata accessor for StaticService);
    }
    uint64_t result = sub_251E154A0((uint64_t)v38, type metadata accessor for StaticAccessory);
    uint64_t v22 = v39;
    char v21 = renderingMode;
    uint64_t v20 = countAndFlagsBits;
  }
  *(void *)a1 = v20;
  *(void *)(a1 + 8) = object;
  *(unsigned char *)(a1 + 16) = v21;
  *(void *)(a1 + 24) = v22;
  *(void *)(a1 + 32) = v23;
  *(unsigned char *)(a1 + 40) = v24;
  *(void *)(a1 + 48) = v25;
  *(void *)(a1 + 56) = v11;
  *(unsigned char *)(a1 + 64) = v12;
  *(void *)(a1 + 72) = v13;
  *(void *)(a1 + 80) = v14;
  *(unsigned char *)(a1 + 88) = v15;
  return result;
}

double sub_251E048C4@<D0>(uint64_t a1@<X8>)
{
  if (!StaticAccessory.hasVisibleServices(minCount:)(2)) {
    goto LABEL_13;
  }
  uint64_t v3 = type metadata accessor for StaticAccessory(0);
  if (*(unsigned char *)(v1 + *(int *)(v3 + 104)) != 1)
  {
    if (*(unsigned char *)(v1 + *(int *)(v3 + 108)) == 1)
    {
      StaticAccessory.isActivated.getter();
      BOOL v4 = StaticAccessory.isActivated.getter();
      unint64_t v5 = 0xD000000000000016;
      uint64_t v6 = "poweroutlet.strip.fill";
      goto LABEL_6;
    }
LABEL_13:
    double result = 0.0;
    *(_OWORD *)(a1 + 73) = 0u;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)(a1 + 64) = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
    return result;
  }
  StaticAccessory.isActivated.getter();
  BOOL v4 = StaticAccessory.isActivated.getter();
  unint64_t v5 = 0xD00000000000001ALL;
  uint64_t v6 = "fan.and.light.ceiling.fill";
LABEL_6:
  unint64_t v7 = (unint64_t)(v6 - 32) | 0x8000000000000000;
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v7;
  if (v4) {
    uint64_t v8 = 2;
  }
  else {
    uint64_t v8 = 0;
  }
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v5;
  if (v4) {
    char v9 = 2;
  }
  else {
    char v9 = 0;
  }
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v5;
  *(void *)(a1 + 56) = v7;
  *(void *)(a1 + 64) = v8;
  *(void *)(a1 + 72) = v5;
  *(void *)(a1 + 80) = v7;
  *(unsigned char *)(a1 + 88) = v9;
  swift_bridgeObjectRetain_n();
  return result;
}

BOOL StaticAccessory.isActivated.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for StaticService();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = &v27[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = &v27[-v7];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  HomeDataModel::StaticRenderingMode v12 = &v27[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = &v27[-v13];
  StaticAccessory.primaryStaticService.getter((uint64_t)&v27[-v13]);
  HomeDataModel::StaticRenderingMode v15 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v3 + 48);
  if (v15(v14, 1, v2) == 1)
  {
    sub_251A1B064((uint64_t)v14, qword_26B21EE20);
    char v16 = 0;
  }
  else
  {
    char v16 = v14[*(int *)(v2 + 88)];
    sub_251E154A0((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for StaticService);
  }
  v27[15] = v16;
  if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v17 == 0x8000000251F64DA0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v18 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if ((v18 & 1) == 0)
    {
      StaticAccessory.primaryStaticService.getter((uint64_t)v12);
      if (v15(v12, 1, v2) != 1)
      {
        BOOL v25 = StaticService.isActivated.getter();
        sub_251E154A0((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticService);
        return v25;
      }
      sub_251A1B064((uint64_t)v12, qword_26B21EE20);
      return 0;
    }
  }
  uint64_t v19 = type metadata accessor for StaticAccessory(0);
  uint64_t v20 = *(void *)(v1 + *(int *)(v19 + 80));
  MEMORY[0x270FA5388](v19);
  *(void *)&v27[-16] = v1;
  swift_bridgeObjectRetain();
  unint64_t v21 = sub_251A51E88((void (*)(char *))sub_251AB3DF0, (uint64_t)&v27[-32], v20);
  swift_bridgeObjectRelease();
  uint64_t v22 = *(void *)(v21 + 16);
  if (!v22)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v23 = v21 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  uint64_t v24 = *(void *)(v3 + 72);
  swift_bridgeObjectRetain();
  BOOL v25 = 0;
  do
  {
    sub_251E153D0(v23, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticService);
    sub_251E153D0((uint64_t)v8, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticService);
    BOOL v25 = v25 || StaticService.isActivated.getter();
    sub_251E154A0((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticService);
    sub_251E154A0((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticService);
    v23 += v24;
    --v22;
  }
  while (v22);
  swift_bridgeObjectRelease_n();
  return v25;
}

uint64_t StaticAccessory.toggle()(uint64_t a1)
{
  v2[7] = a1;
  v2[8] = v1;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  v2[9] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251E04E10, 0, 0);
}

uint64_t sub_251E04E10()
{
  if (!StaticAccessory.canBeToggled.getter())
  {
    uint64_t v3 = *(void *)(v0 + 56);
    goto LABEL_5;
  }
  uint64_t v1 = *(void *)(v0 + 72);
  StaticAccessory.primaryStaticService.getter(v1);
  uint64_t v2 = type metadata accessor for StaticService();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2) == 1)
  {
    uint64_t v3 = *(void *)(v0 + 56);
    sub_251A1B064(*(void *)(v0 + 72), qword_26B21EE20);
LABEL_5:
    uint64_t v4 = type metadata accessor for StateSnapshot(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
  *(void *)(v0 + 48) = qword_270263C40;
  *(_OWORD *)(v0 + 16) = xmmword_251F3BEC0;
  *(void *)(v0 + 32) = 0;
  *(void *)(v0 + 40) = 0;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_251E04FD4;
  uint64_t v8 = *(void *)(v0 + 56);
  return StaticService.toggle(options:context:)(v8, (void *)(v0 + 48), (_OWORD *)(v0 + 16));
}

uint64_t sub_251E04FD4()
{
  uint64_t v1 = *(void *)(*v0 + 72);
  uint64_t v4 = *v0;
  swift_task_dealloc();
  sub_251E154A0(v1, (uint64_t (*)(void))type metadata accessor for StaticService);
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v4 + 8);
  return v2();
}

BOOL StaticAccessory.canBeToggled.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for StaticAccessory(0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::Bool v7 = StaticAccessory.hasVisibleServices(minCount:)(2);
  sub_251E153D0(v0, (uint64_t)v6, type metadata accessor for StaticAccessory);
  if (v7)
  {
    sub_251E154A0((uint64_t)v6, type metadata accessor for StaticAccessory);
  }
  else
  {
    StaticAccessory.primaryStaticService.getter((uint64_t)v3);
    uint64_t v8 = type metadata accessor for StaticService();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v3, 1, v8) != 1)
    {
      BOOL v9 = StaticService.canBeToggled.getter();
      sub_251E154A0((uint64_t)v6, type metadata accessor for StaticAccessory);
      sub_251E154A0((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for StaticService);
      return v9;
    }
    sub_251E154A0((uint64_t)v6, type metadata accessor for StaticAccessory);
    sub_251A1B064((uint64_t)v3, qword_26B21EE20);
  }
  return 0;
}

uint64_t sub_251E052D4(uint64_t a1)
{
  if ((~*(unsigned __int16 *)(v1 + *(int *)(a1 + 88)) & 0xFEFC) != 0) {
    return sub_251F35370();
  }
  StaticAccessory.displayAsServiceKind.getter(&v3);
  return ServiceKind.foregroundColor.getter();
}

uint64_t StaticAccessory.foregroundColor.getter()
{
  if ((~*(unsigned __int16 *)(v0 + *(int *)(type metadata accessor for StaticAccessory(0) + 88)) & 0xFEFC) != 0) {
    return sub_251F35370();
  }
  StaticAccessory.displayAsServiceKind.getter(&v2);
  return ServiceKind.foregroundColor.getter();
}

uint64_t sub_251E0537C@<X0>(char *a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  StaticAccessory.primaryStaticService.getter((uint64_t)v4);
  uint64_t v5 = type metadata accessor for StaticService();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5) == 1)
  {
    uint64_t result = sub_251A1B064((uint64_t)v4, qword_26B21EE20);
    char v7 = 0;
  }
  else
  {
    char v7 = v4[*(int *)(v5 + 88)];
    uint64_t result = sub_251E154A0((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticService);
  }
  *a1 = v7;
  return result;
}

uint64_t StaticAccessory.displayAsServiceKind.getter@<X0>(char *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for StaticAccessory(0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  BOOL v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v17 - v10;
  StaticAccessory.primaryStaticService.getter((uint64_t)&v17 - v10);
  uint64_t v12 = type metadata accessor for StaticService();
  uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48);
  if (v13(v11, 1, v12) == 1)
  {
    sub_251A1B064((uint64_t)v11, qword_26B21EE20);
    sub_251E153D0(v1, (uint64_t)v5, type metadata accessor for StaticAccessory);
  }
  else
  {
    int v14 = v11[*(int *)(v12 + 96)];
    sub_251E154A0((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticService);
    sub_251E153D0(v1, (uint64_t)v5, type metadata accessor for StaticAccessory);
    if (v14 != 53)
    {
      uint64_t result = sub_251E154A0((uint64_t)v5, type metadata accessor for StaticAccessory);
      *a1 = v14;
      return result;
    }
  }
  StaticAccessory.primaryStaticService.getter((uint64_t)v9);
  if (v13(v9, 1, v12) == 1)
  {
    sub_251A1B064((uint64_t)v9, qword_26B21EE20);
    char v15 = 0;
  }
  else
  {
    char v15 = v9[*(int *)(v12 + 88)];
    sub_251E154A0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticService);
  }
  *a1 = v15;
  return sub_251E154A0((uint64_t)v5, type metadata accessor for StaticAccessory);
}

uint64_t sub_251E056F0(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 52));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_251E05738(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_251AB3A34;
  return StaticAccessory.toggle()(a1);
}

uint64_t sub_251E057D0()
{
  return 0x6341636974617473;
}

uint64_t StaticAccessory.isUpdating.getter()
{
  uint64_t v1 = type metadata accessor for StaticService();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = &v14[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = *(void *)(v0 + *(int *)(type metadata accessor for StaticAccessory(0) + 80));
  uint64_t v15 = v0;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_251A51E88((void (*)(char *))sub_251AB3DF0, (uint64_t)v14, v5);
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    uint64_t v8 = v6 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    uint64_t v9 = *(void *)(v2 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_251E153D0(v8, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticService);
      char v16 = v4[*(int *)(v1 + 88)];
      swift_bridgeObjectRetain();
      uint64_t v10 = ServiceKind.stateStatusDependentCharaceristicKinds.getter();
      uint64_t v11 = swift_bridgeObjectRetain();
      char v12 = sub_251B4C57C(v11, v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      sub_251E154A0((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticService);
      if (v12) {
        break;
      }
      v8 += v9;
      if (!--v7)
      {
        swift_bridgeObjectRelease_n();
        return 0;
      }
    }
    swift_bridgeObjectRelease_n();
    return 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
}

uint64_t StaticAccessory.accessoryControlStatusString.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for StaticService();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = &v31[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = type metadata accessor for StaticAccessory(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = &v31[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  int v10 = *(unsigned __int8 *)(v1 + *(int *)(v7 + 116));
  uint64_t v11 = sub_251E153D0(v1, (uint64_t)v9, type metadata accessor for StaticAccessory);
  if (v10 != 1)
  {
LABEL_10:
    sub_251E154A0((uint64_t)v9, type metadata accessor for StaticAccessory);
    if (*(unsigned char *)(v1 + *(int *)(v6 + 120)))
    {
      uint64_t v20 = 0xD00000000000001FLL;
      uint64_t v21 = 0x8000000251F6D360;
    }
    else
    {
      uint64_t v21 = 0x8000000251F6D380;
      uint64_t v20 = 0xD00000000000001ELL;
    }
    uint64_t v18 = static String.hfLocalized(_:)(v20, v21);
    uint64_t v19 = v22;
    goto LABEL_14;
  }
  uint64_t v12 = *(void *)&v9[*(int *)(v6 + 80)];
  MEMORY[0x270FA5388](v11);
  *(void *)&v31[-16] = v9;
  swift_bridgeObjectRetain();
  unint64_t v13 = sub_251A51E88((void (*)(char *))sub_251AB3DF0, (uint64_t)&v31[-32], v12);
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(v13 + 16);
  if (v14)
  {
    uint64_t v15 = v13 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v16 = *(void *)(v3 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_251E153D0(v15, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v33 = *(void *)&v5[*(int *)(v2 + 112)];
      char v32 = v5[*(int *)(v2 + 88)];
      Swift::Bool v17 = StaticCharacteristicsBag.isReachable(for:)((HomeDataModel::ServiceKind)&v32);
      sub_251E154A0((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticService);
      if (!v17) {
        break;
      }
      v15 += v16;
      if (!--v14)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_8;
      }
    }
    swift_bridgeObjectRelease_n();
    goto LABEL_10;
  }
  swift_bridgeObjectRelease();
LABEL_8:
  sub_251E154A0((uint64_t)v9, type metadata accessor for StaticAccessory);
  uint64_t v18 = 0;
  uint64_t v19 = 0;
LABEL_14:
  char v23 = StaticAccessory.isUpdating.getter();
  uint64_t v24 = sub_251BCCA04(1);
  uint64_t v26 = v25;
  uint64_t v27 = sub_251BCF738(1);
  uint64_t v33 = v18;
  uint64_t v34 = v19;
  char v35 = 0;
  char v36 = v23 & 1;
  char v37 = 0;
  uint64_t v38 = v24;
  uint64_t v39 = v26;
  uint64_t v40 = v27;
  uint64_t v41 = v28;
  uint64_t v29 = sub_251D3D2E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v29;
}

unint64_t StaticAccessory.tileStatusStringIconSymbolSuffix.getter()
{
  uint64_t v1 = v0;
  uint64_t v68 = type metadata accessor for StaticHH2Update(0);
  MEMORY[0x270FA5388](v68);
  uint64_t v69 = (uint64_t)&v66 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  MEMORY[0x270FA5388](v72);
  uint64_t v71 = (uint64_t)&v66 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for StaticService();
  uint64_t v81 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v80 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v66 - v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v79 = (uint64_t)&v66 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v67 = (uint64_t)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v76 = (uint64_t)&v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  Swift::Bool v17 = (char *)&v66 - v16;
  uint64_t v18 = type metadata accessor for StaticSoftwareUpdate(0);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v77 = v18;
  uint64_t v78 = v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v70 = (uint64_t)&v66 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  char v23 = (char *)&v66 - v22;
  uint64_t v24 = (int *)type metadata accessor for StaticAccessory(0);
  uint64_t v25 = MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)&v66 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v28 = *(unsigned __int8 *)(v1 + *(int *)(v25 + 116));
  sub_251E153D0(v1, (uint64_t)v27, type metadata accessor for StaticAccessory);
  if (v28 == 1)
  {
    sub_251E154A0((uint64_t)v27, type metadata accessor for StaticAccessory);
  }
  else
  {
    char v29 = StaticAccessory.isUpdating.getter();
    sub_251E154A0((uint64_t)v27, type metadata accessor for StaticAccessory);
    if ((v29 & 1) == 0) {
      return 0;
    }
  }
  sub_251A1B128(v1 + v24[28], (uint64_t)v17, &qword_26B21F120);
  uint64_t v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v78 + 48);
  v78 += 48;
  uint64_t v75 = v30;
  if (v30((uint64_t)v17, 1, v77) == 1)
  {
    sub_251A1B064((uint64_t)v17, &qword_26B21F120);
    uint64_t v31 = (uint64_t)v80;
  }
  else
  {
    sub_251E15438((uint64_t)v17, (uint64_t)v23, type metadata accessor for StaticSoftwareUpdate);
    sub_251C40BA4((char *)v83);
    if (LOBYTE(v83[0]) == 8)
    {
      sub_251E154A0((uint64_t)v23, type metadata accessor for StaticSoftwareUpdate);
      uint64_t v31 = (uint64_t)v80;
    }
    else
    {
      uint64_t v31 = (uint64_t)v80;
      if (LOBYTE(v83[0]) == 3 || LOBYTE(v83[0]) == 5)
      {
        sub_251E154A0((uint64_t)v23, type metadata accessor for StaticSoftwareUpdate);
        return 0xD000000000000015;
      }
      sub_251E154A0((uint64_t)v23, type metadata accessor for StaticSoftwareUpdate);
    }
  }
  if (!*(void *)(v1 + v24[31])) {
    goto LABEL_19;
  }
  uint64_t v33 = swift_bridgeObjectRetain();
  v83[0] = sub_251A915C4(v33);
  sub_251E2713C(v83);
  swift_bridgeObjectRelease();
  if (!*(void *)(v83[0] + 16))
  {
    swift_release();
    goto LABEL_19;
  }
  unsigned int v34 = *(unsigned __int8 *)(v83[0] + 32);
  swift_release();
  if (v34 > 0x13)
  {
LABEL_19:
    uint64_t v35 = v69;
    goto LABEL_20;
  }
  uint64_t v35 = v69;
  if (((1 << v34) & 0x80003) != 0) {
    return 0xD000000000000018;
  }
LABEL_20:
  uint64_t v36 = *(void *)(v1 + v24[19]);
  uint64_t v37 = *(void *)(v36 + 64);
  uint64_t v73 = v36 + 64;
  uint64_t v38 = 1 << *(unsigned char *)(v36 + 32);
  uint64_t v39 = -1;
  if (v38 < 64) {
    uint64_t v39 = ~(-1 << v38);
  }
  unint64_t v40 = v39 & v37;
  uint64_t v66 = v35 + 8;
  int64_t v74 = (unint64_t)(v38 + 63) >> 6;
  swift_bridgeObjectRetain_n();
  int64_t v41 = 0;
  uint64_t v82 = v4;
  while (2)
  {
    if (v40)
    {
      unint64_t v42 = __clz(__rbit64(v40));
      v40 &= v40 - 1;
      unint64_t v43 = v42 | (v41 << 6);
    }
    else
    {
      if (__OFADD__(v41++, 1))
      {
        __break(1u);
        goto LABEL_69;
      }
      if (v41 >= v74) {
        goto LABEL_61;
      }
      unint64_t v45 = *(void *)(v73 + 8 * v41);
      if (!v45)
      {
        int64_t v46 = v41 + 1;
        if (v41 + 1 >= v74) {
          goto LABEL_61;
        }
        unint64_t v45 = *(void *)(v73 + 8 * v46);
        if (!v45)
        {
          int64_t v46 = v41 + 2;
          if (v41 + 2 >= v74) {
            goto LABEL_61;
          }
          unint64_t v45 = *(void *)(v73 + 8 * v46);
          if (!v45)
          {
            int64_t v46 = v41 + 3;
            if (v41 + 3 >= v74) {
              goto LABEL_61;
            }
            unint64_t v45 = *(void *)(v73 + 8 * v46);
            if (!v45)
            {
              int64_t v46 = v41 + 4;
              if (v41 + 4 >= v74) {
                goto LABEL_61;
              }
              unint64_t v45 = *(void *)(v73 + 8 * v46);
              if (!v45)
              {
                int64_t v46 = v41 + 5;
                if (v41 + 5 >= v74)
                {
LABEL_61:
                  swift_release();
                  uint64_t v62 = v81;
                  uint64_t v61 = v67;
                  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v81 + 56))(v67, 1, 1, v4);
                  goto LABEL_62;
                }
                unint64_t v45 = *(void *)(v73 + 8 * v46);
                if (!v45)
                {
                  while (1)
                  {
                    int64_t v41 = v46 + 1;
                    if (__OFADD__(v46, 1)) {
                      break;
                    }
                    if (v41 >= v74) {
                      goto LABEL_61;
                    }
                    unint64_t v45 = *(void *)(v73 + 8 * v41);
                    ++v46;
                    if (v45) {
                      goto LABEL_42;
                    }
                  }
LABEL_69:
                  __break(1u);
                  swift_release();
                  __break(1u);
                  JUMPOUT(0x251E06858);
                }
              }
            }
          }
        }
        int64_t v41 = v46;
      }
LABEL_42:
      unint64_t v40 = (v45 - 1) & v45;
      unint64_t v43 = __clz(__rbit64(v45)) + (v41 << 6);
    }
    uint64_t v47 = v36;
    uint64_t v48 = *(void *)(v36 + 56) + *(void *)(v81 + 72) * v43;
    uint64_t v49 = v79;
    sub_251E153D0(v48, v79, (uint64_t (*)(void))type metadata accessor for StaticService);
    sub_251E15438(v49, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticService);
    LODWORD(v49) = v9[*(int *)(v4 + 32)];
    sub_251E153D0((uint64_t)v9, v31, (uint64_t (*)(void))type metadata accessor for StaticService);
    if (v49 == 1)
    {
      sub_251E154A0(v31, (uint64_t (*)(void))type metadata accessor for StaticService);
    }
    else
    {
      LOBYTE(v83[0]) = *(unsigned char *)(v31 + *(int *)(v4 + 88));
      swift_bridgeObjectRetain();
      uint64_t v50 = ServiceKind.stateStatusDependentCharaceristicKinds.getter();
      uint64_t v51 = swift_bridgeObjectRetain();
      char v52 = sub_251B4C57C(v51, v50);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      sub_251E154A0(v31, (uint64_t (*)(void))type metadata accessor for StaticService);
      if ((v52 & 1) == 0) {
        goto LABEL_25;
      }
    }
    uint64_t v53 = v82;
    uint64_t v54 = v76;
    sub_251A1B128((uint64_t)&v9[*(int *)(v82 + 120)], v76, &qword_26B21F120);
    uint64_t v55 = v77;
    if (v75(v54, 1, v77) == 1)
    {
      sub_251A1B064(v54, &qword_26B21F120);
      goto LABEL_24;
    }
    uint64_t v56 = v70;
    sub_251E15438(v54, v70, type metadata accessor for StaticSoftwareUpdate);
    uint64_t v57 = v71;
    sub_251E153D0(v56 + *(int *)(v55 + 20), v71, type metadata accessor for StaticSoftwareUpdate.Kind);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 2u:
        int v58 = *(unsigned __int8 *)(v57 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468) + 48));
        uint64_t v59 = type metadata accessor for StaticSoftwareUpdateMetadata;
        goto LABEL_51;
      case 3u:
        goto LABEL_59;
      default:
        uint64_t v60 = v57;
        uint64_t v57 = v69;
        sub_251E15438(v60, v69, type metadata accessor for StaticHH2Update);
        if (!*(void *)(v66 + *(int *)(v68 + 24)))
        {
          swift_bridgeObjectRelease_n();
          sub_251E154A0(v57, type metadata accessor for StaticHH2Update);
LABEL_53:
          sub_251E154A0(v56, type metadata accessor for StaticSoftwareUpdate);
LABEL_24:
          if (v9[*(int *)(v53 + 40)]) {
            goto LABEL_60;
          }
LABEL_25:
          sub_251E154A0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticService);
          uint64_t v36 = v47;
          uint64_t v31 = (uint64_t)v80;
          uint64_t v4 = v82;
          continue;
        }
        int v58 = *(unsigned __int8 *)(v57 + *(int *)(v68 + 20));
        swift_bridgeObjectRelease();
        uint64_t v59 = type metadata accessor for StaticHH2Update;
LABEL_51:
        sub_251E154A0(v57, v59);
        if (v58 != 5 && v58 != 3) {
          goto LABEL_53;
        }
LABEL_59:
        sub_251E154A0(v56, type metadata accessor for StaticSoftwareUpdate);
LABEL_60:
        swift_release();
        uint64_t v61 = v67;
        sub_251E15438((uint64_t)v9, v67, (uint64_t (*)(void))type metadata accessor for StaticService);
        uint64_t v62 = v81;
        uint64_t v4 = v82;
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v81 + 56))(v61, 0, 1, v82);
LABEL_62:
        swift_bridgeObjectRelease();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48))(v61, 1, v4) == 1)
        {
          sub_251A1B064(v61, qword_26B21EE20);
          return 0;
        }
        else
        {
          uint64_t v63 = StaticService.tileStatusStringIconSymbolSuffix.getter();
          uint64_t v65 = v64;
          sub_251E154A0(v61, (uint64_t (*)(void))type metadata accessor for StaticService);
          if (v65) {
            return v63;
          }
          else {
            return 0;
          }
        }
    }
  }
}

BOOL StaticAccessory.hasDetailAttentionMessages.getter()
{
  sub_251BCF738(1);
  uint64_t v1 = v0;
  if (v0) {
    swift_bridgeObjectRelease();
  }
  return v1 != 0;
}

uint64_t sub_251E068A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(void *)(a2 + *(int *)(type metadata accessor for StaticAccessory(0) + 76));
  if (*(void *)(v5 + 16) && (unint64_t v6 = sub_2519FE584(a1), (v7 & 1) != 0))
  {
    unint64_t v8 = v6;
    uint64_t v9 = *(void *)(v5 + 56);
    uint64_t v10 = type metadata accessor for StaticService();
    uint64_t v11 = *(void *)(v10 - 8);
    sub_251E153D0(v9 + *(void *)(v11 + 72) * v8, a3, (uint64_t (*)(void))type metadata accessor for StaticService);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(a3, 0, 1, v10);
  }
  else
  {
    uint64_t v13 = type metadata accessor for StaticService();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a3, 1, 1, v13);
  }
}

Swift::Bool __swiftcall StaticAccessory.hasVisibleServices(minCount:)(Swift::Int minCount)
{
  Swift::Int v33 = minCount;
  uint64_t v35 = type metadata accessor for StaticService();
  uint64_t v2 = *(void *)(v35 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v35);
  uint64_t v40 = (uint64_t)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v41 = (uint64_t)&v32 - v5;
  uint64_t v6 = *(void *)(v1 + *(int *)(type metadata accessor for StaticAccessory(0) + 80));
  uint64_t v43 = v1;
  swift_bridgeObjectRetain();
  unint64_t v7 = sub_251A51E88((void (*)(char *))sub_251AB3DF0, (uint64_t)v42, v6);
  swift_bridgeObjectRelease();
  uint64_t v39 = *(void *)(v7 + 16);
  if (v39)
  {
    uint64_t v34 = 0;
    unint64_t v8 = 0;
    uint64_t v9 = *(unsigned __int8 *)(v2 + 80);
    uint64_t v37 = v2;
    unint64_t v38 = v7 + ((v9 + 32) & ~v9);
    unint64_t v36 = v7;
    while (1)
    {
      if (v8 >= *(void *)(v7 + 16))
      {
        __break(1u);
LABEL_131:
        __break(1u);
        JUMPOUT(0x251E073D0);
      }
      sub_251E153D0(v38 + *(void *)(v2 + 72) * v8, v41, (uint64_t (*)(void))type metadata accessor for StaticService);
      if (qword_269B9C488 != -1) {
        swift_once();
      }
      uint64_t v12 = qword_269BF31F0;
      if (!*(void *)(qword_269BF31F0 + 16)) {
        break;
      }
      uint64_t v13 = *(unsigned __int8 *)(v41 + *(int *)(v35 + 88));
      sub_251F36CA0();
      char v44 = v13;
      ServiceKind.rawValue.getter();
      sub_251F357B0();
      swift_bridgeObjectRelease();
      uint64_t v14 = sub_251F36D00();
      uint64_t v15 = -1 << *(unsigned char *)(v12 + 32);
      unint64_t v16 = v14 & ~v15;
      if (((*(void *)(v12 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16) & 1) == 0) {
        break;
      }
      uint64_t v17 = ~v15;
      while (1)
      {
        unint64_t v18 = 0x8000000251F62670;
        switch(*(unsigned char *)(*(void *)(v12 + 48) + v16))
        {
          case 1:
            uint64_t v19 = "0000003E-0000-1000-8000-0026BB765291";
            goto LABEL_65;
          case 2:
            uint64_t v19 = "00000270-0000-1000-8000-0026BB765291";
            goto LABEL_65;
          case 3:
            uint64_t v19 = "000000BB-0000-1000-8000-0026BB765291";
            goto LABEL_65;
          case 4:
            uint64_t v19 = "0000008D-0000-1000-8000-0026BB765291";
            goto LABEL_65;
          case 5:
            uint64_t v19 = "00000096-0000-1000-8000-0026BB765291";
            goto LABEL_65;
          case 6:
            uint64_t v19 = "00000042-0000-1000-8000-0026BB765291";
            goto LABEL_65;
          case 7:
            uint64_t v19 = "00000110-0000-1000-8000-0026BB765291";
            goto LABEL_65;
          case 8:
            uint64_t v19 = "00000204-0000-1000-8000-0026BB765291";
            goto LABEL_65;
          case 9:
            uint64_t v19 = "00000097-0000-1000-8000-0026BB765291";
            goto LABEL_65;
          case 0xA:
            uint64_t v19 = "0000007F-0000-1000-8000-0026BB765291";
            goto LABEL_65;
          case 0xB:
            uint64_t v19 = "00000080-0000-1000-8000-0026BB765291";
            goto LABEL_65;
          case 0xC:
            uint64_t v19 = "00000129-0000-1000-8000-0026BB765291";
            goto LABEL_65;
          case 0xD:
            uint64_t v19 = "00000237-0000-1000-8000-0026BB765291";
            goto LABEL_65;
          case 0xE:
            uint64_t v19 = "00000081-0000-1000-8000-0026BB765291";
            goto LABEL_65;
          case 0xF:
            uint64_t v19 = "00000121-0000-1000-8000-0026BB765291";
            goto LABEL_65;
          case 0x10:
            uint64_t v19 = "00000040-0000-1000-8000-0026BB765291";
            goto LABEL_65;
          case 0x11:
            uint64_t v19 = "000000D7-0000-1000-8000-0026BB765291";
            goto LABEL_65;
          case 0x12:
            uint64_t v19 = "000000BA-0000-1000-8000-0026BB765291";
            goto LABEL_65;
          case 0x13:
            uint64_t v19 = "00000041-0000-1000-8000-0026BB765291";
            goto LABEL_65;
          case 0x14:
            uint64_t v19 = "000000BC-0000-1000-8000-0026BB765291";
            goto LABEL_65;
          case 0x15:
            uint64_t v19 = "000000BD-0000-1000-8000-0026BB765291";
            goto LABEL_65;
          case 0x16:
            uint64_t v19 = "00000082-0000-1000-8000-0026BB765291";
            goto LABEL_65;
          case 0x17:
            uint64_t v19 = "000000D9-0000-1000-8000-0026BB765291";
            goto LABEL_65;
          case 0x18:
            uint64_t v19 = "000000CF-0000-1000-8000-0026BB765291";
            goto LABEL_65;
          case 0x19:
            uint64_t v19 = "000000CC-0000-1000-8000-0026BB765291";
            goto LABEL_65;
          case 0x1A:
            uint64_t v19 = "00000083-0000-1000-8000-0026BB765291";
            goto LABEL_65;
          case 0x1B:
            uint64_t v19 = "00000084-0000-1000-8000-0026BB765291";
            goto LABEL_65;
          case 0x1C:
            uint64_t v19 = "00000043-0000-1000-8000-0026BB765291";
            goto LABEL_65;
          case 0x1D:
            uint64_t v19 = "00000044-0000-1000-8000-0026BB765291";
            goto LABEL_65;
          case 0x1E:
            uint64_t v19 = "00000045-0000-1000-8000-0026BB765291";
            goto LABEL_65;
          case 0x1F:
            uint64_t v19 = "00000112-0000-1000-8000-0026BB765291";
            goto LABEL_65;
          case 0x20:
            uint64_t v19 = "00000085-0000-1000-8000-0026BB765291";
            goto LABEL_65;
          case 0x21:
            uint64_t v19 = "00000086-0000-1000-8000-0026BB765291";
            goto LABEL_65;
          case 0x22:
            uint64_t v19 = "00000047-0000-1000-8000-0026BB765291";
            goto LABEL_65;
          case 0x23:
            uint64_t v19 = "0000007E-0000-1000-8000-0026BB765291";
            goto LABEL_65;
          case 0x24:
            uint64_t v19 = "000000B9-0000-1000-8000-0026BB765291";
            goto LABEL_65;
          case 0x25:
            uint64_t v19 = "00000087-0000-1000-8000-0026BB765291";
            goto LABEL_65;
          case 0x26:
            uint64_t v19 = "00000113-0000-1000-8000-0026BB765291";
            goto LABEL_65;
          case 0x27:
            uint64_t v19 = "00000088-0000-1000-8000-0026BB765291";
            goto LABEL_65;
          case 0x28:
            uint64_t v19 = "00000089-0000-1000-8000-0026BB765291";
            goto LABEL_65;
          case 0x29:
            uint64_t v19 = "00000049-0000-1000-8000-0026BB765291";
            goto LABEL_65;
          case 0x2A:
            uint64_t v19 = "00000125-0000-1000-8000-0026BB765291";
            goto LABEL_65;
          case 0x2B:
            uint64_t v19 = "00000122-0000-1000-8000-0026BB765291";
            goto LABEL_65;
          case 0x2C:
            uint64_t v19 = "000000D8-0000-1000-8000-0026BB765291";
            goto LABEL_65;
          case 0x2D:
            uint64_t v19 = "0000008A-0000-1000-8000-0026BB765291";
            goto LABEL_65;
          case 0x2E:
            uint64_t v19 = "0000004A-0000-1000-8000-0026BB765291";
            goto LABEL_65;
          case 0x2F:
            uint64_t v19 = "000000D0-0000-1000-8000-0026BB765291";
            goto LABEL_65;
          case 0x30:
            uint64_t v19 = "000000B7-0000-1000-8000-0026BB765291";
            goto LABEL_65;
          case 0x31:
            uint64_t v19 = "0000020A-0000-1000-8000-0026BB765291";
            goto LABEL_65;
          case 0x32:
            uint64_t v19 = "0000020F-0000-1000-8000-0026BB765291";
            goto LABEL_65;
          case 0x33:
            uint64_t v19 = "0000008B-0000-1000-8000-0026BB765291";
            goto LABEL_65;
          case 0x34:
            uint64_t v19 = "0000008C-0000-1000-8000-0026BB765291";
LABEL_65:
            unint64_t v18 = (unint64_t)(v19 - 32) | 0x8000000000000000;
            break;
          default:
            break;
        }
        unint64_t v20 = 0x8000000251F62670;
        switch(v13)
        {
          case 1:
            uint64_t v21 = "0000003E-0000-1000-8000-0026BB765291";
            goto LABEL_119;
          case 2:
            uint64_t v21 = "00000270-0000-1000-8000-0026BB765291";
            goto LABEL_119;
          case 3:
            uint64_t v21 = "000000BB-0000-1000-8000-0026BB765291";
            goto LABEL_119;
          case 4:
            uint64_t v21 = "0000008D-0000-1000-8000-0026BB765291";
            goto LABEL_119;
          case 5:
            uint64_t v21 = "00000096-0000-1000-8000-0026BB765291";
            goto LABEL_119;
          case 6:
            uint64_t v21 = "00000042-0000-1000-8000-0026BB765291";
            goto LABEL_119;
          case 7:
            uint64_t v21 = "00000110-0000-1000-8000-0026BB765291";
            goto LABEL_119;
          case 8:
            uint64_t v21 = "00000204-0000-1000-8000-0026BB765291";
            goto LABEL_119;
          case 9:
            uint64_t v21 = "00000097-0000-1000-8000-0026BB765291";
            goto LABEL_119;
          case 10:
            uint64_t v21 = "0000007F-0000-1000-8000-0026BB765291";
            goto LABEL_119;
          case 11:
            uint64_t v21 = "00000080-0000-1000-8000-0026BB765291";
            goto LABEL_119;
          case 12:
            uint64_t v21 = "00000129-0000-1000-8000-0026BB765291";
            goto LABEL_119;
          case 13:
            uint64_t v21 = "00000237-0000-1000-8000-0026BB765291";
            goto LABEL_119;
          case 14:
            uint64_t v21 = "00000081-0000-1000-8000-0026BB765291";
            goto LABEL_119;
          case 15:
            uint64_t v21 = "00000121-0000-1000-8000-0026BB765291";
            goto LABEL_119;
          case 16:
            uint64_t v21 = "00000040-0000-1000-8000-0026BB765291";
            goto LABEL_119;
          case 17:
            uint64_t v21 = "000000D7-0000-1000-8000-0026BB765291";
            goto LABEL_119;
          case 18:
            uint64_t v21 = "000000BA-0000-1000-8000-0026BB765291";
            goto LABEL_119;
          case 19:
            uint64_t v21 = "00000041-0000-1000-8000-0026BB765291";
            goto LABEL_119;
          case 20:
            uint64_t v21 = "000000BC-0000-1000-8000-0026BB765291";
            goto LABEL_119;
          case 21:
            uint64_t v21 = "000000BD-0000-1000-8000-0026BB765291";
            goto LABEL_119;
          case 22:
            uint64_t v21 = "00000082-0000-1000-8000-0026BB765291";
            goto LABEL_119;
          case 23:
            uint64_t v21 = "000000D9-0000-1000-8000-0026BB765291";
            goto LABEL_119;
          case 24:
            uint64_t v21 = "000000CF-0000-1000-8000-0026BB765291";
            goto LABEL_119;
          case 25:
            uint64_t v21 = "000000CC-0000-1000-8000-0026BB765291";
            goto LABEL_119;
          case 26:
            uint64_t v21 = "00000083-0000-1000-8000-0026BB765291";
            goto LABEL_119;
          case 27:
            uint64_t v21 = "00000084-0000-1000-8000-0026BB765291";
            goto LABEL_119;
          case 28:
            uint64_t v21 = "00000043-0000-1000-8000-0026BB765291";
            goto LABEL_119;
          case 29:
            uint64_t v21 = "00000044-0000-1000-8000-0026BB765291";
            goto LABEL_119;
          case 30:
            uint64_t v21 = "00000045-0000-1000-8000-0026BB765291";
            goto LABEL_119;
          case 31:
            uint64_t v21 = "00000112-0000-1000-8000-0026BB765291";
            goto LABEL_119;
          case 32:
            uint64_t v21 = "00000085-0000-1000-8000-0026BB765291";
            goto LABEL_119;
          case 33:
            uint64_t v21 = "00000086-0000-1000-8000-0026BB765291";
            goto LABEL_119;
          case 34:
            uint64_t v21 = "00000047-0000-1000-8000-0026BB765291";
            goto LABEL_119;
          case 35:
            uint64_t v21 = "0000007E-0000-1000-8000-0026BB765291";
            goto LABEL_119;
          case 36:
            uint64_t v21 = "000000B9-0000-1000-8000-0026BB765291";
            goto LABEL_119;
          case 37:
            uint64_t v21 = "00000087-0000-1000-8000-0026BB765291";
            goto LABEL_119;
          case 38:
            uint64_t v21 = "00000113-0000-1000-8000-0026BB765291";
            goto LABEL_119;
          case 39:
            uint64_t v21 = "00000088-0000-1000-8000-0026BB765291";
            goto LABEL_119;
          case 40:
            uint64_t v21 = "00000089-0000-1000-8000-0026BB765291";
            goto LABEL_119;
          case 41:
            uint64_t v21 = "00000049-0000-1000-8000-0026BB765291";
            goto LABEL_119;
          case 42:
            uint64_t v21 = "00000125-0000-1000-8000-0026BB765291";
            goto LABEL_119;
          case 43:
            uint64_t v21 = "00000122-0000-1000-8000-0026BB765291";
            goto LABEL_119;
          case 44:
            uint64_t v21 = "000000D8-0000-1000-8000-0026BB765291";
            goto LABEL_119;
          case 45:
            uint64_t v21 = "0000008A-0000-1000-8000-0026BB765291";
            goto LABEL_119;
          case 46:
            uint64_t v21 = "0000004A-0000-1000-8000-0026BB765291";
            goto LABEL_119;
          case 47:
            uint64_t v21 = "000000D0-0000-1000-8000-0026BB765291";
            goto LABEL_119;
          case 48:
            uint64_t v21 = "000000B7-0000-1000-8000-0026BB765291";
            goto LABEL_119;
          case 49:
            uint64_t v21 = "0000020A-0000-1000-8000-0026BB765291";
            goto LABEL_119;
          case 50:
            uint64_t v21 = "0000020F-0000-1000-8000-0026BB765291";
            goto LABEL_119;
          case 51:
            uint64_t v21 = "0000008B-0000-1000-8000-0026BB765291";
            goto LABEL_119;
          case 52:
            uint64_t v21 = "0000008C-0000-1000-8000-0026BB765291";
LABEL_119:
            unint64_t v20 = (unint64_t)(v21 - 32) | 0x8000000000000000;
            break;
          default:
            break;
        }
        if (v18 == v20) {
          break;
        }
        char v22 = sub_251F36B10();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v22) {
          goto LABEL_125;
        }
        unint64_t v16 = (v16 + 1) & v17;
        if (((*(void *)(v12 + 56 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16) & 1) == 0) {
          goto LABEL_3;
        }
      }
      swift_bridgeObjectRelease_n();
LABEL_125:
      uint64_t v23 = v40;
      uint64_t v24 = v41;
      sub_251E153D0(v41, v40, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v25 = v23 + *(int *)(v35 + 100);
      uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
      MEMORY[0x270FA5388](v26 - 8);
      int v28 = (char *)&v32 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_251A1B128(v25, (uint64_t)v28, &qword_26B21FF90);
      sub_251E154A0(v23, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v29 = sub_251F34DA0();
      int v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 48))(v28, 1, v29);
      sub_251A1B064((uint64_t)v28, &qword_26B21FF90);
      sub_251E154A0(v24, (uint64_t (*)(void))type metadata accessor for StaticService);
      if (v30 != 1) {
        goto LABEL_4;
      }
      unint64_t v7 = v36;
      uint64_t v2 = v37;
      if (__OFADD__(v34, 1)) {
        goto LABEL_131;
      }
      if (++v34 >= v33)
      {
        swift_bridgeObjectRelease();
        return 1;
      }
LABEL_5:
      if (++v8 == v39) {
        goto LABEL_129;
      }
    }
LABEL_3:
    uint64_t v10 = v40;
    uint64_t v11 = v41;
    sub_251E153D0(v41, v40, (uint64_t (*)(void))type metadata accessor for StaticService);
    sub_251E154A0(v10, (uint64_t (*)(void))type metadata accessor for StaticService);
    sub_251E154A0(v11, (uint64_t (*)(void))type metadata accessor for StaticService);
LABEL_4:
    unint64_t v7 = v36;
    uint64_t v2 = v37;
    goto LABEL_5;
  }
LABEL_129:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t StaticAccessory.temperatureStringStatusIcon.getter@<X0>(uint64_t *a1@<X8>)
{
  int v30 = a1;
  uint64_t v2 = type metadata accessor for StaticService();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v29 = (uint64_t)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  MEMORY[0x270FA5388](v5 - 8);
  unint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_251F34DA0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for StaticAccessory(0);
  sub_251A1B128(v1 + *(int *)(v15 + 84), (uint64_t)v14, &qword_26B21FF90);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v14, 1, v8) == 1)
  {
    sub_251A1B064((uint64_t)v14, &qword_26B21FF90);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v7, 1, 1, v2);
LABEL_10:
    uint64_t result = sub_251A1B064((uint64_t)v7, qword_26B21EE20);
    unint64_t v20 = v30;
    v30[1] = 0;
    v20[2] = 0;
    *unint64_t v20 = 0;
    return result;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v14, v8);
  uint64_t v16 = *(void *)(v1 + *(int *)(v15 + 76));
  if (*(void *)(v16 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v17 = sub_2519FE584((uint64_t)v11);
    if (v18)
    {
      sub_251E153D0(*(void *)(v16 + 56) + *(void *)(v3 + 72) * v17, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticService);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v7, 0, 1, v2);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v7, 1, 1, v2);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v7, 1, 1, v2);
  }
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v7, 1, v2) == 1) {
    goto LABEL_10;
  }
  uint64_t v21 = v29;
  sub_251E153D0((uint64_t)v7, v29, (uint64_t (*)(void))type metadata accessor for StaticService);
  uint64_t v22 = _s13HomeDataModel21TemperatureStringIconV4text4withSSSgAA13StaticServiceV_tFZ_0(v21);
  if (!v23)
  {
    sub_251E154A0(v21, (uint64_t (*)(void))type metadata accessor for StaticService);
LABEL_16:
    int v28 = v30;
    *int v30 = 0;
    v28[1] = 0;
    void v28[2] = 0;
    return sub_251E154A0((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticService);
  }
  uint64_t v24 = v22;
  uint64_t v25 = v23;
  uint64_t v26 = _s13HomeDataModel21TemperatureStringIconV9textColor4with7SwiftUI0H0VSgAA13StaticServiceV_tFZ_0(v21);
  sub_251E154A0(v21, (uint64_t (*)(void))type metadata accessor for StaticService);
  if (!v26)
  {
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  uint64_t v27 = v30;
  *int v30 = v24;
  v27[1] = v25;
  v27[2] = v26;
  return sub_251E154A0((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticService);
}

uint64_t StaticAccessory.statusIcon.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v39 = a1;
  uint64_t v2 = type metadata accessor for StaticService();
  uint64_t v40 = *(void *)(v2 - 8);
  uint64_t v41 = (int *)v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  MEMORY[0x270FA5388](v5 - 8);
  unint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_251F34DA0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for StaticAccessory(0);
  sub_251A1B128(v1 + *(int *)(v15 + 84), (uint64_t)v14, &qword_26B21FF90);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v14, 1, v8) == 1)
  {
    sub_251A1B064((uint64_t)v14, &qword_26B21FF90);
    (*(void (**)(char *, uint64_t, uint64_t, int *))(v40 + 56))(v7, 1, 1, v41);
    uint64_t v16 = v39;
LABEL_10:
    uint64_t result = sub_251A1B064((uint64_t)v7, qword_26B21EE20);
    __int16 v27 = 0;
    char v28 = 89;
    char v29 = 4;
    goto LABEL_17;
  }
  uint64_t v37 = v4;
  unint64_t v38 = v7;
  uint64_t v17 = v40;
  char v18 = v41;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v14, v8);
  uint64_t v19 = *(void *)(v1 + *(int *)(v15 + 76));
  if (*(void *)(v19 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v20 = sub_2519FE584((uint64_t)v11);
    uint64_t v22 = v17;
    if (v21)
    {
      uint64_t v23 = *(void *)(v19 + 56) + *(void *)(v17 + 72) * v20;
      unint64_t v7 = v38;
      sub_251E153D0(v23, (uint64_t)v38, (uint64_t (*)(void))type metadata accessor for StaticService);
      (*(void (**)(char *, void, uint64_t, int *))(v22 + 56))(v7, 0, 1, v18);
    }
    else
    {
      uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, int *))(v17 + 56);
      unint64_t v7 = v38;
      v25(v38, 1, 1, v18);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v22 = v17;
    uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t, int *))(v17 + 56);
    unint64_t v7 = v38;
    v24(v38, 1, 1, v18);
  }
  uint64_t v16 = v39;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v22 + 48))(v7, 1, v18) == 1) {
    goto LABEL_10;
  }
  int v30 = v7[v18[24]];
  uint64_t v31 = (uint64_t)v37;
  sub_251E153D0((uint64_t)v7, (uint64_t)v37, (uint64_t (*)(void))type metadata accessor for StaticService);
  if (v30 == 53) {
    LOWORD(v30) = *(unsigned __int8 *)(v31 + v18[22]);
  }
  sub_251E154A0(v31, (uint64_t (*)(void))type metadata accessor for StaticService);
  __int16 v32 = v7[v18[23]];
  Swift::Int v33 = (uint64_t *)&v7[v18[21]];
  uint64_t v34 = (void *)v33[1];
  if (v34)
  {
    uint64_t v35 = *v33;
    swift_bridgeObjectRetain();
    v36._uint64_t countAndFlagsBits = v35;
    v36._object = v34;
    IconSymbol.init(rawValue:)(v36);
    char v28 = v42;
  }
  else
  {
    char v28 = 89;
  }
  __int16 v27 = v30 | (v32 << 8);
  uint64_t result = sub_251E154A0((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticService);
  char v29 = 0;
LABEL_17:
  *(_WORD *)uint64_t v16 = v27;
  *(unsigned char *)(v16 + 2) = v29;
  *(unsigned char *)(v16 + 3) = v28;
  *(void *)(v16 + 8) = 0;
  *(void *)(v16 + 16) = 0;
  return result;
}

uint64_t StaticAccessory.roomId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + *(int *)(type metadata accessor for StaticAccessory(0) + 48));
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251ABDFB8(v3, (uint64_t)v6);
  uint64_t v7 = sub_251F34DA0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(a1, v6, v7);
  }
  __break(1u);
  return result;
}

uint64_t sub_251E07F34(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 116));
}

uint64_t sub_251E07F40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(v2 + *(int *)(a1 + 48));
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251ABDFB8(v4, (uint64_t)v7);
  uint64_t v8 = sub_251F34DA0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(a2, v7, v8);
  }
  __break(1u);
  return result;
}

uint64_t sub_251E08048(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 64));
}

uint64_t StaticAccessory.staticDevice.getter(uint64_t a1)
{
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = v1;
  return MEMORY[0x270FA2498](sub_251E08078, 0, 0);
}

uint64_t sub_251E08078()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = v1 + *(int *)(type metadata accessor for StaticAccessory(0) + 36);
  v0[7] = *(void *)v2;
  if (*(unsigned char *)(v2 + 8))
  {
    uint64_t v3 = v0[5];
    uint64_t v4 = type metadata accessor for StaticMatterDevice();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
  else
  {
    v0[8] = sub_251F35C80();
    v0[9] = sub_251F35C70();
    uint64_t v8 = sub_251F35C00();
    return MEMORY[0x270FA2498](sub_251E081A8, v8, v7);
  }
}

uint64_t sub_251E081A8()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251E08240, 0, 0);
}

uint64_t sub_251E08240()
{
  *(void *)(v0 + 80) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251E082CC, v2, v1);
}

uint64_t sub_251E082CC()
{
  swift_release();
  *(void *)(v0 + 88) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251E08340, 0, 0);
}

uint64_t sub_251E08340()
{
  *(void *)(v0 + 96) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251E083CC, v2, v1);
}

uint64_t sub_251E083CC()
{
  uint64_t v1 = v0[11];
  swift_release();
  swift_getKeyPath();
  v0[2] = v1;
  sub_251E15554((unint64_t *)&qword_26B21F280, (void (*)(uint64_t))type metadata accessor for DataModel);
  sub_251F34F10();
  swift_release();
  uint64_t v2 = (void *)(v1 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentMatterSnapshot);
  swift_beginAccess();
  v0[13] = v2[1];
  v0[14] = v2[2];
  v0[15] = v2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return MEMORY[0x270FA2498](sub_251E084FC, 0, 0);
}

uint64_t sub_251E084FC()
{
  uint64_t v1 = v0[14];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v1 + 16))
  {
    unint64_t v2 = sub_2519FE588(v0[7]);
    uint64_t v3 = v0[5];
    if (v4)
    {
      unint64_t v5 = v2;
      uint64_t v6 = *(void *)(v0[14] + 56);
      uint64_t v7 = type metadata accessor for StaticMatterDevice();
      uint64_t v8 = *(void *)(v7 - 8);
      sub_251E153D0(v6 + *(void *)(v8 + 72) * v5, v3, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(v3, 0, 1, v7);
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v3 = v0[5];
  }
  uint64_t v9 = type metadata accessor for StaticMatterDevice();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v3, 1, 1, v9);
LABEL_6:
  swift_bridgeObjectRelease();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t StaticAccessory.set(includedInStatus:)(char a1)
{
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 96) = a1;
  return MEMORY[0x270FA2498](sub_251E086A4, 0, 0);
}

uint64_t sub_251E086A4()
{
  *(void *)(v0 + 24) = sub_251F35C80();
  *(void *)(v0 + 32) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251E0873C, v2, v1);
}

uint64_t sub_251E0873C()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251E087D4, 0, 0);
}

uint64_t sub_251E087D4()
{
  *(void *)(v0 + 40) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251E08860, v2, v1);
}

uint64_t sub_251E08860()
{
  swift_release();
  *(void *)(v0 + 48) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251E088D4, 0, 0);
}

uint64_t sub_251E088D4()
{
  *(void *)(v0 + 56) = sub_251F34D50();
  *(void *)(v0 + 64) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251E08968, v2, v1);
}

uint64_t sub_251E08968()
{
  uint64_t v1 = (void *)v0[7];
  uint64_t v2 = (void *)v0[6];
  swift_release();
  v0[9] = objc_msgSend(v2, sel_accessoryFor_, v1);

  return MEMORY[0x270FA2498](sub_251E089F8, 0, 0);
}

uint64_t sub_251E089F8()
{
  if (*(void *)(v0 + 72))
  {
    HMAccessory.contributesToHomeStatus.setter(*(unsigned char *)(v0 + 96));
    *(void *)(v0 + 80) = sub_251F35C70();
    uint64_t v2 = sub_251F35C00();
    return MEMORY[0x270FA2498](sub_251E00614, v2, v1);
  }
  else
  {
    sub_251BB2208();
    swift_allocError();
    swift_willThrow();
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
}

uint64_t Set<>.staticAccessoriesIgnoringOnlySensors.getter()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  return sub_251E11ED8(v0);
}

BOOL sub_251E08B28(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for StaticService();
  uint64_t v64 = *(void *)(v3 - 8);
  uint64_t v65 = v3;
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  uint64_t v57 = (uint64_t)&v56 - v8;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v56 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v56 - v12;
  uint64_t v14 = type metadata accessor for StaticAccessory(0);
  if ((~*(unsigned __int16 *)(a1 + *(int *)(v14 + 88)) & 0xFEFC) != 0) {
    return 1;
  }
  uint64_t v15 = *(void *)(a1 + *(int *)(v14 + 80));
  MEMORY[0x270FA5388](v14);
  *(&v56 - 2) = a1;
  swift_bridgeObjectRetain();
  unint64_t v16 = sub_251A51E88((void (*)(char *))sub_251AB3DF0, (uint64_t)(&v56 - 4), v15);
  swift_bridgeObjectRelease();
  uint64_t v17 = MEMORY[0x263F8EE78];
  uint64_t v71 = MEMORY[0x263F8EE78];
  uint64_t v18 = *(void *)(v16 + 16);
  uint64_t v58 = v1;
  uint64_t v67 = v6;
  uint64_t v61 = v18;
  if (!v18) {
    goto LABEL_137;
  }
  unint64_t v19 = 0;
  uint64_t v59 = v11;
  unint64_t v60 = v16;
  uint64_t v66 = v13;
  do
  {
    if (v19 >= *(void *)(v16 + 16))
    {
      __break(1u);
LABEL_265:
      __break(1u);
      JUMPOUT(0x251E09D2CLL);
    }
    unint64_t v20 = (*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80);
    uint64_t v62 = *(void *)(v64 + 72);
    unint64_t v63 = v20;
    sub_251E153D0(v16 + v20 + v62 * v19, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for StaticService);
    if (qword_26B21F070 != -1) {
      swift_once();
    }
    uint64_t v21 = qword_26B220CC8;
    if (!*(void *)(qword_26B220CC8 + 16)) {
      goto LABEL_121;
    }
    uint64_t v22 = v66[*(int *)(v65 + 88)];
    sub_251F36CA0();
    char v69 = v22;
    ServiceKind.rawValue.getter();
    sub_251F357B0();
    swift_bridgeObjectRelease();
    uint64_t v23 = sub_251F36D00();
    uint64_t v24 = -1 << *(unsigned char *)(v21 + 32);
    unint64_t v25 = v23 & ~v24;
    if (((*(void *)(v21 + 56 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25) & 1) == 0)
    {
LABEL_121:
      uint64_t v13 = v66;
      uint64_t v31 = (uint64_t)v59;
      sub_251E153D0((uint64_t)v66, (uint64_t)v59, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v6 = v67;
LABEL_122:
      sub_251E154A0(v31, (uint64_t (*)(void))type metadata accessor for StaticService);
LABEL_123:
      sub_251E154A0((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for StaticService);
      goto LABEL_124;
    }
    uint64_t v68 = ~v24;
    while (1)
    {
      unint64_t v26 = 0x8000000251F62670;
      switch(*(unsigned char *)(*(void *)(v21 + 48) + v25))
      {
        case 1:
          __int16 v27 = "0000003E-0000-1000-8000-0026BB765291";
          goto LABEL_63;
        case 2:
          __int16 v27 = "00000270-0000-1000-8000-0026BB765291";
          goto LABEL_63;
        case 3:
          __int16 v27 = "000000BB-0000-1000-8000-0026BB765291";
          goto LABEL_63;
        case 4:
          __int16 v27 = "0000008D-0000-1000-8000-0026BB765291";
          goto LABEL_63;
        case 5:
          __int16 v27 = "00000096-0000-1000-8000-0026BB765291";
          goto LABEL_63;
        case 6:
          __int16 v27 = "00000042-0000-1000-8000-0026BB765291";
          goto LABEL_63;
        case 7:
          __int16 v27 = "00000110-0000-1000-8000-0026BB765291";
          goto LABEL_63;
        case 8:
          __int16 v27 = "00000204-0000-1000-8000-0026BB765291";
          goto LABEL_63;
        case 9:
          __int16 v27 = "00000097-0000-1000-8000-0026BB765291";
          goto LABEL_63;
        case 0xA:
          __int16 v27 = "0000007F-0000-1000-8000-0026BB765291";
          goto LABEL_63;
        case 0xB:
          __int16 v27 = "00000080-0000-1000-8000-0026BB765291";
          goto LABEL_63;
        case 0xC:
          __int16 v27 = "00000129-0000-1000-8000-0026BB765291";
          goto LABEL_63;
        case 0xD:
          __int16 v27 = "00000237-0000-1000-8000-0026BB765291";
          goto LABEL_63;
        case 0xE:
          __int16 v27 = "00000081-0000-1000-8000-0026BB765291";
          goto LABEL_63;
        case 0xF:
          __int16 v27 = "00000121-0000-1000-8000-0026BB765291";
          goto LABEL_63;
        case 0x10:
          __int16 v27 = "00000040-0000-1000-8000-0026BB765291";
          goto LABEL_63;
        case 0x11:
          __int16 v27 = "000000D7-0000-1000-8000-0026BB765291";
          goto LABEL_63;
        case 0x12:
          __int16 v27 = "000000BA-0000-1000-8000-0026BB765291";
          goto LABEL_63;
        case 0x13:
          __int16 v27 = "00000041-0000-1000-8000-0026BB765291";
          goto LABEL_63;
        case 0x14:
          __int16 v27 = "000000BC-0000-1000-8000-0026BB765291";
          goto LABEL_63;
        case 0x15:
          __int16 v27 = "000000BD-0000-1000-8000-0026BB765291";
          goto LABEL_63;
        case 0x16:
          __int16 v27 = "00000082-0000-1000-8000-0026BB765291";
          goto LABEL_63;
        case 0x17:
          __int16 v27 = "000000D9-0000-1000-8000-0026BB765291";
          goto LABEL_63;
        case 0x18:
          __int16 v27 = "000000CF-0000-1000-8000-0026BB765291";
          goto LABEL_63;
        case 0x19:
          __int16 v27 = "000000CC-0000-1000-8000-0026BB765291";
          goto LABEL_63;
        case 0x1A:
          __int16 v27 = "00000083-0000-1000-8000-0026BB765291";
          goto LABEL_63;
        case 0x1B:
          __int16 v27 = "00000084-0000-1000-8000-0026BB765291";
          goto LABEL_63;
        case 0x1C:
          __int16 v27 = "00000043-0000-1000-8000-0026BB765291";
          goto LABEL_63;
        case 0x1D:
          __int16 v27 = "00000044-0000-1000-8000-0026BB765291";
          goto LABEL_63;
        case 0x1E:
          __int16 v27 = "00000045-0000-1000-8000-0026BB765291";
          goto LABEL_63;
        case 0x1F:
          __int16 v27 = "00000112-0000-1000-8000-0026BB765291";
          goto LABEL_63;
        case 0x20:
          __int16 v27 = "00000085-0000-1000-8000-0026BB765291";
          goto LABEL_63;
        case 0x21:
          __int16 v27 = "00000086-0000-1000-8000-0026BB765291";
          goto LABEL_63;
        case 0x22:
          __int16 v27 = "00000047-0000-1000-8000-0026BB765291";
          goto LABEL_63;
        case 0x23:
          __int16 v27 = "0000007E-0000-1000-8000-0026BB765291";
          goto LABEL_63;
        case 0x24:
          __int16 v27 = "000000B9-0000-1000-8000-0026BB765291";
          goto LABEL_63;
        case 0x25:
          __int16 v27 = "00000087-0000-1000-8000-0026BB765291";
          goto LABEL_63;
        case 0x26:
          __int16 v27 = "00000113-0000-1000-8000-0026BB765291";
          goto LABEL_63;
        case 0x27:
          __int16 v27 = "00000088-0000-1000-8000-0026BB765291";
          goto LABEL_63;
        case 0x28:
          __int16 v27 = "00000089-0000-1000-8000-0026BB765291";
          goto LABEL_63;
        case 0x29:
          __int16 v27 = "00000049-0000-1000-8000-0026BB765291";
          goto LABEL_63;
        case 0x2A:
          __int16 v27 = "00000125-0000-1000-8000-0026BB765291";
          goto LABEL_63;
        case 0x2B:
          __int16 v27 = "00000122-0000-1000-8000-0026BB765291";
          goto LABEL_63;
        case 0x2C:
          __int16 v27 = "000000D8-0000-1000-8000-0026BB765291";
          goto LABEL_63;
        case 0x2D:
          __int16 v27 = "0000008A-0000-1000-8000-0026BB765291";
          goto LABEL_63;
        case 0x2E:
          __int16 v27 = "0000004A-0000-1000-8000-0026BB765291";
          goto LABEL_63;
        case 0x2F:
          __int16 v27 = "000000D0-0000-1000-8000-0026BB765291";
          goto LABEL_63;
        case 0x30:
          __int16 v27 = "000000B7-0000-1000-8000-0026BB765291";
          goto LABEL_63;
        case 0x31:
          __int16 v27 = "0000020A-0000-1000-8000-0026BB765291";
          goto LABEL_63;
        case 0x32:
          __int16 v27 = "0000020F-0000-1000-8000-0026BB765291";
          goto LABEL_63;
        case 0x33:
          __int16 v27 = "0000008B-0000-1000-8000-0026BB765291";
          goto LABEL_63;
        case 0x34:
          __int16 v27 = "0000008C-0000-1000-8000-0026BB765291";
LABEL_63:
          unint64_t v26 = (unint64_t)(v27 - 32) | 0x8000000000000000;
          break;
        default:
          break;
      }
      unint64_t v28 = 0x8000000251F62670;
      switch(v22)
      {
        case 1:
          char v29 = "0000003E-0000-1000-8000-0026BB765291";
          goto LABEL_117;
        case 2:
          char v29 = "00000270-0000-1000-8000-0026BB765291";
          goto LABEL_117;
        case 3:
          char v29 = "000000BB-0000-1000-8000-0026BB765291";
          goto LABEL_117;
        case 4:
          char v29 = "0000008D-0000-1000-8000-0026BB765291";
          goto LABEL_117;
        case 5:
          char v29 = "00000096-0000-1000-8000-0026BB765291";
          goto LABEL_117;
        case 6:
          char v29 = "00000042-0000-1000-8000-0026BB765291";
          goto LABEL_117;
        case 7:
          char v29 = "00000110-0000-1000-8000-0026BB765291";
          goto LABEL_117;
        case 8:
          char v29 = "00000204-0000-1000-8000-0026BB765291";
          goto LABEL_117;
        case 9:
          char v29 = "00000097-0000-1000-8000-0026BB765291";
          goto LABEL_117;
        case 10:
          char v29 = "0000007F-0000-1000-8000-0026BB765291";
          goto LABEL_117;
        case 11:
          char v29 = "00000080-0000-1000-8000-0026BB765291";
          goto LABEL_117;
        case 12:
          char v29 = "00000129-0000-1000-8000-0026BB765291";
          goto LABEL_117;
        case 13:
          char v29 = "00000237-0000-1000-8000-0026BB765291";
          goto LABEL_117;
        case 14:
          char v29 = "00000081-0000-1000-8000-0026BB765291";
          goto LABEL_117;
        case 15:
          char v29 = "00000121-0000-1000-8000-0026BB765291";
          goto LABEL_117;
        case 16:
          char v29 = "00000040-0000-1000-8000-0026BB765291";
          goto LABEL_117;
        case 17:
          char v29 = "000000D7-0000-1000-8000-0026BB765291";
          goto LABEL_117;
        case 18:
          char v29 = "000000BA-0000-1000-8000-0026BB765291";
          goto LABEL_117;
        case 19:
          char v29 = "00000041-0000-1000-8000-0026BB765291";
          goto LABEL_117;
        case 20:
          char v29 = "000000BC-0000-1000-8000-0026BB765291";
          goto LABEL_117;
        case 21:
          char v29 = "000000BD-0000-1000-8000-0026BB765291";
          goto LABEL_117;
        case 22:
          char v29 = "00000082-0000-1000-8000-0026BB765291";
          goto LABEL_117;
        case 23:
          char v29 = "000000D9-0000-1000-8000-0026BB765291";
          goto LABEL_117;
        case 24:
          char v29 = "000000CF-0000-1000-8000-0026BB765291";
          goto LABEL_117;
        case 25:
          char v29 = "000000CC-0000-1000-8000-0026BB765291";
          goto LABEL_117;
        case 26:
          char v29 = "00000083-0000-1000-8000-0026BB765291";
          goto LABEL_117;
        case 27:
          char v29 = "00000084-0000-1000-8000-0026BB765291";
          goto LABEL_117;
        case 28:
          char v29 = "00000043-0000-1000-8000-0026BB765291";
          goto LABEL_117;
        case 29:
          char v29 = "00000044-0000-1000-8000-0026BB765291";
          goto LABEL_117;
        case 30:
          char v29 = "00000045-0000-1000-8000-0026BB765291";
          goto LABEL_117;
        case 31:
          char v29 = "00000112-0000-1000-8000-0026BB765291";
          goto LABEL_117;
        case 32:
          char v29 = "00000085-0000-1000-8000-0026BB765291";
          goto LABEL_117;
        case 33:
          char v29 = "00000086-0000-1000-8000-0026BB765291";
          goto LABEL_117;
        case 34:
          char v29 = "00000047-0000-1000-8000-0026BB765291";
          goto LABEL_117;
        case 35:
          char v29 = "0000007E-0000-1000-8000-0026BB765291";
          goto LABEL_117;
        case 36:
          char v29 = "000000B9-0000-1000-8000-0026BB765291";
          goto LABEL_117;
        case 37:
          char v29 = "00000087-0000-1000-8000-0026BB765291";
          goto LABEL_117;
        case 38:
          char v29 = "00000113-0000-1000-8000-0026BB765291";
          goto LABEL_117;
        case 39:
          char v29 = "00000088-0000-1000-8000-0026BB765291";
          goto LABEL_117;
        case 40:
          char v29 = "00000089-0000-1000-8000-0026BB765291";
          goto LABEL_117;
        case 41:
          char v29 = "00000049-0000-1000-8000-0026BB765291";
          goto LABEL_117;
        case 42:
          char v29 = "00000125-0000-1000-8000-0026BB765291";
          goto LABEL_117;
        case 43:
          char v29 = "00000122-0000-1000-8000-0026BB765291";
          goto LABEL_117;
        case 44:
          char v29 = "000000D8-0000-1000-8000-0026BB765291";
          goto LABEL_117;
        case 45:
          char v29 = "0000008A-0000-1000-8000-0026BB765291";
          goto LABEL_117;
        case 46:
          char v29 = "0000004A-0000-1000-8000-0026BB765291";
          goto LABEL_117;
        case 47:
          char v29 = "000000D0-0000-1000-8000-0026BB765291";
          goto LABEL_117;
        case 48:
          char v29 = "000000B7-0000-1000-8000-0026BB765291";
          goto LABEL_117;
        case 49:
          char v29 = "0000020A-0000-1000-8000-0026BB765291";
          goto LABEL_117;
        case 50:
          char v29 = "0000020F-0000-1000-8000-0026BB765291";
          goto LABEL_117;
        case 51:
          char v29 = "0000008B-0000-1000-8000-0026BB765291";
          goto LABEL_117;
        case 52:
          char v29 = "0000008C-0000-1000-8000-0026BB765291";
LABEL_117:
          unint64_t v28 = (unint64_t)(v29 - 32) | 0x8000000000000000;
          break;
        default:
          break;
      }
      if (v26 == v28) {
        break;
      }
      char v30 = sub_251F36B10();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v30) {
        goto LABEL_127;
      }
      unint64_t v25 = (v25 + 1) & v68;
      if (((*(void *)(v21 + 56 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25) & 1) == 0) {
        goto LABEL_121;
      }
    }
    swift_bridgeObjectRelease_n();
LABEL_127:
    uint64_t v13 = v66;
    uint64_t v31 = (uint64_t)v59;
    sub_251E153D0((uint64_t)v66, (uint64_t)v59, (uint64_t (*)(void))type metadata accessor for StaticService);
    char v70 = *(unsigned char *)(v31 + *(int *)(v65 + 88));
    unint64_t v32 = ServiceKind.rawValue.getter();
    uint64_t v6 = v67;
    if (v32 == 0xD000000000000024 && v33 == 0x8000000251F64950)
    {
      swift_bridgeObjectRelease();
      goto LABEL_122;
    }
    char v34 = sub_251F36B10();
    swift_bridgeObjectRelease();
    sub_251E154A0(v31, (uint64_t (*)(void))type metadata accessor for StaticService);
    if (v34) {
      goto LABEL_123;
    }
    sub_251E15438((uint64_t)v13, v57, (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t v35 = v71;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_251A3E3E8(0, *(void *)(v35 + 16) + 1, 1);
      uint64_t v35 = v71;
    }
    unint64_t v37 = *(void *)(v35 + 16);
    unint64_t v36 = *(void *)(v35 + 24);
    if (v37 >= v36 >> 1)
    {
      sub_251A3E3E8(v36 > 1, v37 + 1, 1);
      uint64_t v35 = v71;
    }
    *(void *)(v35 + 16) = v37 + 1;
    sub_251E15438(v57, v35 + v63 + v37 * v62, (uint64_t (*)(void))type metadata accessor for StaticService);
LABEL_124:
    ++v19;
    unint64_t v16 = v60;
  }
  while (v19 != v61);
  uint64_t v17 = v71;
LABEL_137:
  swift_bridgeObjectRelease();
  unint64_t v63 = *(void *)(v17 + 16);
  if (v63)
  {
    uint64_t v39 = *(unsigned __int8 *)(v64 + 80);
    uint64_t v61 = v17;
    uint64_t v62 = v17 + ((v39 + 32) & ~v39);
    uint64_t v64 = *(void *)(v64 + 72);
    swift_retain();
    uint64_t v40 = 0;
    uint64_t v41 = 0;
    do
    {
      sub_251E153D0(v62 + v64 * v40, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticService);
      if (qword_26B21F080 != -1) {
        swift_once();
      }
      char v42 = off_26B21F078;
      uint64_t v43 = *((void *)off_26B21F078 + 2);
      if (v43)
      {
        uint64_t v66 = (char *)v41;
        uint64_t v44 = v6[*(int *)(v65 + 88)];
        sub_251F36CA0();
        LOBYTE(v71) = v44;
        ServiceKind.rawValue.getter();
        sub_251F357B0();
        swift_bridgeObjectRelease();
        uint64_t v45 = sub_251F36D00();
        uint64_t v46 = -1 << v42[32];
        unint64_t v47 = v45 & ~v46;
        if ((*(void *)&v42[((v47 >> 3) & 0xFFFFFFFFFFFFFF8) + 56] >> v47))
        {
          uint64_t v68 = ~v46;
          while (1)
          {
            unint64_t v48 = 0x8000000251F62670;
            switch(*(unsigned char *)(*((void *)v42 + 6) + v47))
            {
              case 1:
                uint64_t v49 = "0000003E-0000-1000-8000-0026BB765291";
                goto LABEL_197;
              case 2:
                uint64_t v49 = "00000270-0000-1000-8000-0026BB765291";
                goto LABEL_197;
              case 3:
                uint64_t v49 = "000000BB-0000-1000-8000-0026BB765291";
                goto LABEL_197;
              case 4:
                uint64_t v49 = "0000008D-0000-1000-8000-0026BB765291";
                goto LABEL_197;
              case 5:
                uint64_t v49 = "00000096-0000-1000-8000-0026BB765291";
                goto LABEL_197;
              case 6:
                uint64_t v49 = "00000042-0000-1000-8000-0026BB765291";
                goto LABEL_197;
              case 7:
                uint64_t v49 = "00000110-0000-1000-8000-0026BB765291";
                goto LABEL_197;
              case 8:
                uint64_t v49 = "00000204-0000-1000-8000-0026BB765291";
                goto LABEL_197;
              case 9:
                uint64_t v49 = "00000097-0000-1000-8000-0026BB765291";
                goto LABEL_197;
              case 0xA:
                uint64_t v49 = "0000007F-0000-1000-8000-0026BB765291";
                goto LABEL_197;
              case 0xB:
                uint64_t v49 = "00000080-0000-1000-8000-0026BB765291";
                goto LABEL_197;
              case 0xC:
                uint64_t v49 = "00000129-0000-1000-8000-0026BB765291";
                goto LABEL_197;
              case 0xD:
                uint64_t v49 = "00000237-0000-1000-8000-0026BB765291";
                goto LABEL_197;
              case 0xE:
                uint64_t v49 = "00000081-0000-1000-8000-0026BB765291";
                goto LABEL_197;
              case 0xF:
                uint64_t v49 = "00000121-0000-1000-8000-0026BB765291";
                goto LABEL_197;
              case 0x10:
                uint64_t v49 = "00000040-0000-1000-8000-0026BB765291";
                goto LABEL_197;
              case 0x11:
                uint64_t v49 = "000000D7-0000-1000-8000-0026BB765291";
                goto LABEL_197;
              case 0x12:
                uint64_t v49 = "000000BA-0000-1000-8000-0026BB765291";
                goto LABEL_197;
              case 0x13:
                uint64_t v49 = "00000041-0000-1000-8000-0026BB765291";
                goto LABEL_197;
              case 0x14:
                uint64_t v49 = "000000BC-0000-1000-8000-0026BB765291";
                goto LABEL_197;
              case 0x15:
                uint64_t v49 = "000000BD-0000-1000-8000-0026BB765291";
                goto LABEL_197;
              case 0x16:
                uint64_t v49 = "00000082-0000-1000-8000-0026BB765291";
                goto LABEL_197;
              case 0x17:
                uint64_t v49 = "000000D9-0000-1000-8000-0026BB765291";
                goto LABEL_197;
              case 0x18:
                uint64_t v49 = "000000CF-0000-1000-8000-0026BB765291";
                goto LABEL_197;
              case 0x19:
                uint64_t v49 = "000000CC-0000-1000-8000-0026BB765291";
                goto LABEL_197;
              case 0x1A:
                uint64_t v49 = "00000083-0000-1000-8000-0026BB765291";
                goto LABEL_197;
              case 0x1B:
                uint64_t v49 = "00000084-0000-1000-8000-0026BB765291";
                goto LABEL_197;
              case 0x1C:
                uint64_t v49 = "00000043-0000-1000-8000-0026BB765291";
                goto LABEL_197;
              case 0x1D:
                uint64_t v49 = "00000044-0000-1000-8000-0026BB765291";
                goto LABEL_197;
              case 0x1E:
                uint64_t v49 = "00000045-0000-1000-8000-0026BB765291";
                goto LABEL_197;
              case 0x1F:
                uint64_t v49 = "00000112-0000-1000-8000-0026BB765291";
                goto LABEL_197;
              case 0x20:
                uint64_t v49 = "00000085-0000-1000-8000-0026BB765291";
                goto LABEL_197;
              case 0x21:
                uint64_t v49 = "00000086-0000-1000-8000-0026BB765291";
                goto LABEL_197;
              case 0x22:
                uint64_t v49 = "00000047-0000-1000-8000-0026BB765291";
                goto LABEL_197;
              case 0x23:
                uint64_t v49 = "0000007E-0000-1000-8000-0026BB765291";
                goto LABEL_197;
              case 0x24:
                uint64_t v49 = "000000B9-0000-1000-8000-0026BB765291";
                goto LABEL_197;
              case 0x25:
                uint64_t v49 = "00000087-0000-1000-8000-0026BB765291";
                goto LABEL_197;
              case 0x26:
                uint64_t v49 = "00000113-0000-1000-8000-0026BB765291";
                goto LABEL_197;
              case 0x27:
                uint64_t v49 = "00000088-0000-1000-8000-0026BB765291";
                goto LABEL_197;
              case 0x28:
                uint64_t v49 = "00000089-0000-1000-8000-0026BB765291";
                goto LABEL_197;
              case 0x29:
                uint64_t v49 = "00000049-0000-1000-8000-0026BB765291";
                goto LABEL_197;
              case 0x2A:
                uint64_t v49 = "00000125-0000-1000-8000-0026BB765291";
                goto LABEL_197;
              case 0x2B:
                uint64_t v49 = "00000122-0000-1000-8000-0026BB765291";
                goto LABEL_197;
              case 0x2C:
                uint64_t v49 = "000000D8-0000-1000-8000-0026BB765291";
                goto LABEL_197;
              case 0x2D:
                uint64_t v49 = "0000008A-0000-1000-8000-0026BB765291";
                goto LABEL_197;
              case 0x2E:
                uint64_t v49 = "0000004A-0000-1000-8000-0026BB765291";
                goto LABEL_197;
              case 0x2F:
                uint64_t v49 = "000000D0-0000-1000-8000-0026BB765291";
                goto LABEL_197;
              case 0x30:
                uint64_t v49 = "000000B7-0000-1000-8000-0026BB765291";
                goto LABEL_197;
              case 0x31:
                uint64_t v49 = "0000020A-0000-1000-8000-0026BB765291";
                goto LABEL_197;
              case 0x32:
                uint64_t v49 = "0000020F-0000-1000-8000-0026BB765291";
                goto LABEL_197;
              case 0x33:
                uint64_t v49 = "0000008B-0000-1000-8000-0026BB765291";
                goto LABEL_197;
              case 0x34:
                uint64_t v49 = "0000008C-0000-1000-8000-0026BB765291";
LABEL_197:
                unint64_t v48 = (unint64_t)(v49 - 32) | 0x8000000000000000;
                break;
              default:
                break;
            }
            unint64_t v50 = 0x8000000251F62670;
            switch(v44)
            {
              case 1:
                uint64_t v51 = "0000003E-0000-1000-8000-0026BB765291";
                goto LABEL_251;
              case 2:
                uint64_t v51 = "00000270-0000-1000-8000-0026BB765291";
                goto LABEL_251;
              case 3:
                uint64_t v51 = "000000BB-0000-1000-8000-0026BB765291";
                goto LABEL_251;
              case 4:
                uint64_t v51 = "0000008D-0000-1000-8000-0026BB765291";
                goto LABEL_251;
              case 5:
                uint64_t v51 = "00000096-0000-1000-8000-0026BB765291";
                goto LABEL_251;
              case 6:
                uint64_t v51 = "00000042-0000-1000-8000-0026BB765291";
                goto LABEL_251;
              case 7:
                uint64_t v51 = "00000110-0000-1000-8000-0026BB765291";
                goto LABEL_251;
              case 8:
                uint64_t v51 = "00000204-0000-1000-8000-0026BB765291";
                goto LABEL_251;
              case 9:
                uint64_t v51 = "00000097-0000-1000-8000-0026BB765291";
                goto LABEL_251;
              case 10:
                uint64_t v51 = "0000007F-0000-1000-8000-0026BB765291";
                goto LABEL_251;
              case 11:
                uint64_t v51 = "00000080-0000-1000-8000-0026BB765291";
                goto LABEL_251;
              case 12:
                uint64_t v51 = "00000129-0000-1000-8000-0026BB765291";
                goto LABEL_251;
              case 13:
                uint64_t v51 = "00000237-0000-1000-8000-0026BB765291";
                goto LABEL_251;
              case 14:
                uint64_t v51 = "00000081-0000-1000-8000-0026BB765291";
                goto LABEL_251;
              case 15:
                uint64_t v51 = "00000121-0000-1000-8000-0026BB765291";
                goto LABEL_251;
              case 16:
                uint64_t v51 = "00000040-0000-1000-8000-0026BB765291";
                goto LABEL_251;
              case 17:
                uint64_t v51 = "000000D7-0000-1000-8000-0026BB765291";
                goto LABEL_251;
              case 18:
                uint64_t v51 = "000000BA-0000-1000-8000-0026BB765291";
                goto LABEL_251;
              case 19:
                uint64_t v51 = "00000041-0000-1000-8000-0026BB765291";
                goto LABEL_251;
              case 20:
                uint64_t v51 = "000000BC-0000-1000-8000-0026BB765291";
                goto LABEL_251;
              case 21:
                uint64_t v51 = "000000BD-0000-1000-8000-0026BB765291";
                goto LABEL_251;
              case 22:
                uint64_t v51 = "00000082-0000-1000-8000-0026BB765291";
                goto LABEL_251;
              case 23:
                uint64_t v51 = "000000D9-0000-1000-8000-0026BB765291";
                goto LABEL_251;
              case 24:
                uint64_t v51 = "000000CF-0000-1000-8000-0026BB765291";
                goto LABEL_251;
              case 25:
                uint64_t v51 = "000000CC-0000-1000-8000-0026BB765291";
                goto LABEL_251;
              case 26:
                uint64_t v51 = "00000083-0000-1000-8000-0026BB765291";
                goto LABEL_251;
              case 27:
                uint64_t v51 = "00000084-0000-1000-8000-0026BB765291";
                goto LABEL_251;
              case 28:
                uint64_t v51 = "00000043-0000-1000-8000-0026BB765291";
                goto LABEL_251;
              case 29:
                uint64_t v51 = "00000044-0000-1000-8000-0026BB765291";
                goto LABEL_251;
              case 30:
                uint64_t v51 = "00000045-0000-1000-8000-0026BB765291";
                goto LABEL_251;
              case 31:
                uint64_t v51 = "00000112-0000-1000-8000-0026BB765291";
                goto LABEL_251;
              case 32:
                uint64_t v51 = "00000085-0000-1000-8000-0026BB765291";
                goto LABEL_251;
              case 33:
                uint64_t v51 = "00000086-0000-1000-8000-0026BB765291";
                goto LABEL_251;
              case 34:
                uint64_t v51 = "00000047-0000-1000-8000-0026BB765291";
                goto LABEL_251;
              case 35:
                uint64_t v51 = "0000007E-0000-1000-8000-0026BB765291";
                goto LABEL_251;
              case 36:
                uint64_t v51 = "000000B9-0000-1000-8000-0026BB765291";
                goto LABEL_251;
              case 37:
                uint64_t v51 = "00000087-0000-1000-8000-0026BB765291";
                goto LABEL_251;
              case 38:
                uint64_t v51 = "00000113-0000-1000-8000-0026BB765291";
                goto LABEL_251;
              case 39:
                uint64_t v51 = "00000088-0000-1000-8000-0026BB765291";
                goto LABEL_251;
              case 40:
                uint64_t v51 = "00000089-0000-1000-8000-0026BB765291";
                goto LABEL_251;
              case 41:
                uint64_t v51 = "00000049-0000-1000-8000-0026BB765291";
                goto LABEL_251;
              case 42:
                uint64_t v51 = "00000125-0000-1000-8000-0026BB765291";
                goto LABEL_251;
              case 43:
                uint64_t v51 = "00000122-0000-1000-8000-0026BB765291";
                goto LABEL_251;
              case 44:
                uint64_t v51 = "000000D8-0000-1000-8000-0026BB765291";
                goto LABEL_251;
              case 45:
                uint64_t v51 = "0000008A-0000-1000-8000-0026BB765291";
                goto LABEL_251;
              case 46:
                uint64_t v51 = "0000004A-0000-1000-8000-0026BB765291";
                goto LABEL_251;
              case 47:
                uint64_t v51 = "000000D0-0000-1000-8000-0026BB765291";
                goto LABEL_251;
              case 48:
                uint64_t v51 = "000000B7-0000-1000-8000-0026BB765291";
                goto LABEL_251;
              case 49:
                uint64_t v51 = "0000020A-0000-1000-8000-0026BB765291";
                goto LABEL_251;
              case 50:
                uint64_t v51 = "0000020F-0000-1000-8000-0026BB765291";
                goto LABEL_251;
              case 51:
                uint64_t v51 = "0000008B-0000-1000-8000-0026BB765291";
                goto LABEL_251;
              case 52:
                uint64_t v51 = "0000008C-0000-1000-8000-0026BB765291";
LABEL_251:
                unint64_t v50 = (unint64_t)(v51 - 32) | 0x8000000000000000;
                break;
              default:
                break;
            }
            if (v48 == v50) {
              break;
            }
            char v52 = sub_251F36B10();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v52) {
              goto LABEL_257;
            }
            unint64_t v47 = (v47 + 1) & v68;
            if (((*(void *)&v42[((v47 >> 3) & 0xFFFFFFFFFFFFFF8) + 56] >> v47) & 1) == 0) {
              goto LABEL_255;
            }
          }
          swift_bridgeObjectRelease_n();
LABEL_257:
          uint64_t v43 = 1;
        }
        else
        {
LABEL_255:
          uint64_t v43 = 0;
        }
        uint64_t v41 = (uint64_t)v66;
        uint64_t v6 = v67;
      }
      BOOL v53 = __OFADD__(v41, v43);
      v41 += v43;
      if (v53) {
        goto LABEL_265;
      }
      ++v40;
      sub_251E154A0((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticService);
    }
    while (v40 != v63);
    uint64_t v54 = v61;
    swift_release();
    uint64_t v55 = *(void *)(v54 + 16);
  }
  else
  {
    uint64_t v55 = 0;
    uint64_t v41 = 0;
  }
  swift_release();
  return v41 < v55;
}

uint64_t StaticAccessory.HomePodTypes.rawValue.getter()
{
  return *v0;
}

HomeDataModel::StaticAccessory::HomePodTypes_optional sub_251E0A084(Swift::UInt *a1)
{
  return StaticAccessory.HomePodTypes.init(rawValue:)(*a1);
}

uint64_t sub_251E0A08C()
{
  return sub_251F35A50();
}

uint64_t sub_251E0A0EC()
{
  return sub_251F359F0();
}

uint64_t StaticAccessory.SpecialMediaCategory.supportsAlarmsAndTimers.getter()
{
  unsigned int v1 = *v0;
  unsigned int v2 = v1 >> 14;
  unsigned int v3 = v1 & 1;
  if (v2 == 1) {
    return v3;
  }
  else {
    return v2 == 0;
  }
}

uint64_t StaticAccessory.SpecialMediaCategory.supportsMediaPlayer.getter()
{
  unsigned int v1 = *v0;
  if (!(v1 >> 14)) {
    return 1;
  }
  if (v1 >> 14 == 1) {
    return (v1 & 0x101) != 0;
  }
  return v1 != 32771;
}

BOOL StaticAccessory.SpecialMediaCategory.isTileRepresentable.getter()
{
  int v1 = (__int16)*v0;
  unsigned int v2 = *v0 >> 14;
  if (v2 < 2) {
    return 0;
  }
  return v2 != 2 || v1 >= -32764 || (v1 & 0xF) == 2;
}

uint64_t StaticAccessory.SpecialMediaCategory.hash(into:)()
{
  unsigned int v1 = *v0;
  if (v1 >> 14)
  {
    if (v1 >> 14 == 1)
    {
      sub_251F36CB0();
      sub_251F36CC0();
      return sub_251F36CC0();
    }
  }
  else
  {
    sub_251F36CB0();
  }
  return sub_251F36CB0();
}

uint64_t sub_251E0A2A0(uint64_t a1)
{
  unint64_t v2 = sub_251E1593C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E0A2DC(uint64_t a1)
{
  unint64_t v2 = sub_251E1593C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251E0A318(uint64_t a1)
{
  unint64_t v2 = sub_251E158E8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E0A354(uint64_t a1)
{
  unint64_t v2 = sub_251E158E8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251E0A390(uint64_t a1)
{
  unint64_t v2 = sub_251E15894();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E0A3CC(uint64_t a1)
{
  unint64_t v2 = sub_251E15894();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251E0A408(uint64_t a1)
{
  unint64_t v2 = sub_251E15840();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E0A444(uint64_t a1)
{
  unint64_t v2 = sub_251E15840();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251E0A480()
{
  uint64_t result = 0x74726F50726961;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x5654656C707061;
      break;
    case 2:
      uint64_t result = 0x6365526F69647561;
      break;
    case 3:
      uint64_t result = 0x6172656D6163;
      break;
    case 4:
      uint64_t result = 0x646F50656D6F68;
      break;
    case 5:
      uint64_t result = 0x70646E4569726973;
      break;
    case 6:
      uint64_t result = 0x72656B61657073;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_251E0A568@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251E1C7CC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251E0A590(uint64_t a1)
{
  unint64_t v2 = sub_251E1569C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E0A5CC(uint64_t a1)
{
  unint64_t v2 = sub_251E1569C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251E0A608(uint64_t a1)
{
  unint64_t v2 = sub_251E15798();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E0A644(uint64_t a1)
{
  unint64_t v2 = sub_251E15798();
  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_251E0A680()
{
  if (*v0) {
    return 0xD000000000000011;
  }
  else {
    return 0xD000000000000015;
  }
}

uint64_t sub_251E0A6C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251E1CAE8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251E0A6E8(uint64_t a1)
{
  unint64_t v2 = sub_251E15744();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E0A724(uint64_t a1)
{
  unint64_t v2 = sub_251E15744();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251E0A760(uint64_t a1)
{
  unint64_t v2 = sub_251E156F0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E0A79C(uint64_t a1)
{
  unint64_t v2 = sub_251E156F0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticAccessory.SpecialMediaCategory.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3BC8);
  uint64_t v47 = *(void *)(v3 - 8);
  uint64_t v48 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v46 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3BD0);
  uint64_t v52 = *(void *)(v5 - 8);
  uint64_t v53 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v51 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3BD8);
  uint64_t v49 = *(void *)(v7 - 8);
  uint64_t v50 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3BE0);
  uint64_t v44 = *(void *)(v10 - 8);
  uint64_t v45 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v43 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3BE8);
  uint64_t v41 = *(void *)(v12 - 8);
  uint64_t v42 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v40 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3BF0);
  uint64_t v38 = *(void *)(v14 - 8);
  uint64_t v39 = v14;
  MEMORY[0x270FA5388](v14);
  unint64_t v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3BF8);
  uint64_t v37 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  unint64_t v19 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3C00);
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v55 = v20;
  uint64_t v56 = v21;
  MEMORY[0x270FA5388](v20);
  unsigned int v23 = *v1;
  uint64_t v24 = a1[3];
  unint64_t v25 = a1;
  unint64_t v26 = (char *)&v37 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v25, v24);
  sub_251E1569C();
  sub_251F36DA0();
  if (!(v23 >> 14))
  {
    char v62 = 4;
    sub_251E15798();
    uint64_t v28 = v55;
    sub_251F36900();
    char v61 = v23;
    sub_251E157EC();
    uint64_t v31 = v50;
    sub_251F36A20();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v9, v31);
    return (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v26, v28);
  }
  if (v23 >> 14 == 1)
  {
    char v65 = 5;
    sub_251E15744();
    __int16 v27 = v51;
    uint64_t v28 = v55;
    sub_251F36900();
    char v64 = 0;
    uint64_t v29 = v53;
    uint64_t v30 = v54;
    sub_251F369E0();
    if (!v30)
    {
      char v63 = 1;
      sub_251F369E0();
    }
    (*(void (**)(char *, uint64_t))(v52 + 8))(v27, v29);
    return (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v26, v28);
  }
  switch(v23)
  {
    case 0x8000u:
      char v57 = 0;
      sub_251E1593C();
      uint64_t v33 = v55;
      sub_251F36900();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v19, v17);
      goto LABEL_15;
    case 0x8001u:
      char v58 = 1;
      sub_251E158E8();
      uint64_t v33 = v55;
      sub_251F36900();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v16, v39);
      goto LABEL_15;
    case 0x8002u:
      char v59 = 2;
      sub_251E15894();
      char v34 = v40;
      uint64_t v33 = v55;
      sub_251F36900();
      uint64_t v36 = v41;
      uint64_t v35 = v42;
      goto LABEL_14;
    case 0x8003u:
      char v60 = 3;
      sub_251E15840();
      char v34 = v43;
      uint64_t v33 = v55;
      sub_251F36900();
      uint64_t v36 = v44;
      uint64_t v35 = v45;
      goto LABEL_14;
    default:
      char v66 = 6;
      sub_251E156F0();
      char v34 = v46;
      uint64_t v33 = v55;
      sub_251F36900();
      uint64_t v36 = v47;
      uint64_t v35 = v48;
LABEL_14:
      (*(void (**)(char *, uint64_t))(v36 + 8))(v34, v35);
LABEL_15:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v56 + 8))(v26, v33);
      break;
  }
  return result;
}

uint64_t StaticAccessory.SpecialMediaCategory.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t StaticAccessory.SpecialMediaCategory.init(from:)@<X0>(void *a1@<X0>, __int16 *a2@<X8>)
{
  char v62 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3C50);
  uint64_t v56 = *(void *)(v3 - 8);
  uint64_t v57 = v3;
  MEMORY[0x270FA5388](v3);
  char v61 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3C58);
  uint64_t v60 = *(void *)(v58 - 8);
  MEMORY[0x270FA5388](v58);
  char v66 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3C60);
  uint64_t v59 = *(void *)(v55 - 8);
  MEMORY[0x270FA5388](v55);
  char v65 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3C68);
  uint64_t v53 = *(void *)(v7 - 8);
  uint64_t v54 = v7;
  MEMORY[0x270FA5388](v7);
  char v64 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3C70);
  uint64_t v51 = *(void *)(v9 - 8);
  uint64_t v52 = v9;
  MEMORY[0x270FA5388](v9);
  char v63 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3C78);
  uint64_t v49 = *(void *)(v11 - 8);
  uint64_t v50 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3C80);
  uint64_t v48 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  unint64_t v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3C88);
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = a1[3];
  uint64_t v67 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v21);
  sub_251E1569C();
  uint64_t v22 = v68;
  sub_251F36D90();
  if (v22) {
    goto LABEL_12;
  }
  uint64_t v46 = v16;
  uint64_t v45 = v14;
  uint64_t v47 = v13;
  uint64_t v24 = v63;
  unsigned int v23 = v64;
  unint64_t v25 = v65;
  unint64_t v26 = v66;
  uint64_t v68 = v18;
  uint64_t v27 = sub_251F368E0();
  if (*(void *)(v27 + 16) != 1)
  {
    uint64_t v30 = sub_251F36490();
    swift_allocError();
    unint64_t v32 = v31;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D440);
    *unint64_t v32 = &type metadata for StaticAccessory.SpecialMediaCategory;
    sub_251F36780();
    sub_251F36480();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v30 - 8) + 104))(v32, *MEMORY[0x263F8DCB0], v30);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v68 + 8))(v20, v17);
LABEL_12:
    uint64_t v38 = (uint64_t)v67;
    return __swift_destroy_boxed_opaque_existential_0(v38);
  }
  switch(*(unsigned char *)(v27 + 32))
  {
    case 1:
      char v70 = 1;
      sub_251E158E8();
      uint64_t v33 = v47;
      sub_251F36770();
      (*(void (**)(char *, uint64_t))(v49 + 8))(v33, v50);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v68 + 8))(v20, v17);
      __int16 v29 = -32767;
      break;
    case 2:
      char v71 = 2;
      sub_251E15894();
      sub_251F36770();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v24, v52);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v68 + 8))(v20, v17);
      __int16 v29 = -32766;
      break;
    case 3:
      char v72 = 3;
      sub_251E15840();
      sub_251F36770();
      (*(void (**)(char *, uint64_t))(v53 + 8))(v23, v54);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v68 + 8))(v20, v17);
      __int16 v29 = -32765;
      break;
    case 4:
      char v74 = 4;
      sub_251E15798();
      char v34 = v25;
      sub_251F36770();
      sub_251E15990();
      uint64_t v35 = v55;
      sub_251F36880();
      (*(void (**)(char *, uint64_t))(v59 + 8))(v34, v35);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v68 + 8))(v20, v17);
      __int16 v29 = v73;
      break;
    case 5:
      char v77 = 5;
      sub_251E15744();
      sub_251F36770();
      char v76 = 0;
      uint64_t v36 = v58;
      char v40 = sub_251F36840();
      char v75 = 1;
      char v41 = sub_251F36840();
      uint64_t v42 = v68;
      char v43 = v41;
      (*(void (**)(char *, uint64_t))(v60 + 8))(v26, v36);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v42 + 8))(v20, v17);
      if (v43) {
        __int16 v44 = 256;
      }
      else {
        __int16 v44 = 0;
      }
      __int16 v29 = v44 & 0xFFFE | v40 & 1 | 0x4000;
      break;
    case 6:
      char v78 = 6;
      sub_251E156F0();
      uint64_t v37 = v61;
      sub_251F36770();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v37, v57);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v68 + 8))(v20, v17);
      __int16 v29 = -32512;
      break;
    default:
      char v69 = 0;
      sub_251E1593C();
      uint64_t v28 = v46;
      sub_251F36770();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v28, v45);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v68 + 8))(v20, v17);
      __int16 v29 = 0x8000;
      break;
  }
  uint64_t v38 = (uint64_t)v67;
  *char v62 = v29;
  return __swift_destroy_boxed_opaque_existential_0(v38);
}

uint64_t sub_251E0BA24()
{
  return sub_251F36D00();
}

uint64_t sub_251E0BA74()
{
  return sub_251F36D00();
}

uint64_t sub_251E0BABC@<X0>(void *a1@<X0>, __int16 *a2@<X8>)
{
  return StaticAccessory.SpecialMediaCategory.init(from:)(a1, a2);
}

uint64_t sub_251E0BAD4(void *a1)
{
  return StaticAccessory.SpecialMediaCategory.encode(to:)(a1);
}

uint64_t sub_251E0BAEC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v100 = a2;
  uint64_t v102 = a3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  MEMORY[0x270FA5388](v4 - 8);
  v99[0] = (uint64_t)v99 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = objc_msgSend(a1, sel_services);
  v99[1] = sub_251A1A568(0, (unint64_t *)&qword_26B21F180);
  unint64_t v7 = sub_251F35AC0();

  uint64_t v104 = MEMORY[0x263F8EE78];
  if (!(v7 >> 62))
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v101 = a1;
    if (v8) {
      goto LABEL_3;
    }
LABEL_20:
    swift_bridgeObjectRelease();
    uint64_t v19 = MEMORY[0x263F8EE78];
    if ((MEMORY[0x263F8EE78] & 0x8000000000000000) != 0) {
      goto LABEL_55;
    }
    goto LABEL_21;
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_251F366C0();
  swift_bridgeObjectRelease();
  uint64_t v101 = a1;
  if (!v8) {
    goto LABEL_20;
  }
LABEL_3:
  if (v8 < 1)
  {
    __break(1u);
    goto LABEL_58;
  }
  for (uint64_t i = 0; i != v8; ++i)
  {
    if ((v7 & 0xC000000000000001) != 0) {
      id v10 = (id)MEMORY[0x2533AB3A0](i, v7);
    }
    else {
      id v10 = *(id *)(v7 + 8 * i + 32);
    }
    uint64_t v11 = v10;
    if (qword_269B9C488 != -1) {
      swift_once();
    }
    uint64_t v12 = qword_269BF31F0;
    id v13 = objc_msgSend(v11, sel_serviceType);
    uint64_t v14 = sub_251F356F0();
    unint64_t v16 = v15;

    v17._uint64_t countAndFlagsBits = v14;
    v17._object = v16;
    ServiceKind.init(rawValue:)(v17);
    if (v103 == 53) {
      uint64_t v18 = 0;
    }
    else {
      uint64_t v18 = v103;
    }
    if (sub_251DB3C0C(v18, v12))
    {
      sub_251F364F0();
      sub_251F36530();
      sub_251F36540();
      sub_251F36500();
    }
    else
    {
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v19 = v104;
  a1 = v101;
  if (v104 < 0)
  {
LABEL_55:
    swift_retain();
    uint64_t v20 = sub_251F366C0();
    if (!v20) {
      goto LABEL_30;
    }
    goto LABEL_23;
  }
LABEL_21:
  if ((v19 & 0x4000000000000000) != 0) {
    goto LABEL_55;
  }
  uint64_t v20 = *(void *)(v19 + 16);
  swift_retain();
  if (!v20)
  {
LABEL_30:
    swift_release_n();
LABEL_31:
    unint64_t v24 = sub_251BD2C00();
    id v25 = objc_msgSend(a1, sel_category);
    id v26 = objc_msgSend(v25, sel_categoryType);

    uint64_t v27 = sub_251F356F0();
    uint64_t v29 = v28;

    if (!*(void *)(v24 + 16) || (unint64_t v30 = sub_2519FE798(v27, v29), (v31 & 1) == 0))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_41:
      uint64_t v46 = type metadata accessor for StaticService();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v102, 1, 1, v46);
    }
    uint64_t v32 = *(void *)(*(void *)(v24 + 56) + 8 * v30);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v33 = objc_msgSend(a1, sel_services);
    unint64_t v34 = sub_251F35AC0();

    uint64_t v8 = sub_251E142E4(v34, v32);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!((unint64_t)v8 >> 62))
    {
      if (*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_35:
        uint64_t v35 = (void *)sub_251F34DA0();
        uint64_t v36 = *(v35 - 1);
        unint64_t v37 = *(void *)(v36 + 64);
        MEMORY[0x270FA5388](v35);
        unint64_t v7 = (unint64_t)v99 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
        uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
        MEMORY[0x270FA5388](v38 - 8);
        unint64_t v40 = (unint64_t)v99 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
        v99[0] = (uint64_t)v99;
        if ((v8 & 0xC000000000000001) != 0)
        {
LABEL_81:
          id v41 = (id)MEMORY[0x2533AB3A0](0, v8);
        }
        else
        {
          if (!*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_83;
          }
          id v41 = *(id *)(v8 + 32);
        }
        uint64_t v42 = v41;
        swift_bridgeObjectRelease();
        id v43 = objc_msgSend(v42, sel_uniqueIdentifier);

        uint64_t v8 = (uint64_t)v99;
        MEMORY[0x270FA5388](v44);
        sub_251F34D80();

        uint64_t v45 = *(void (**)(unint64_t, char *, void *))(v36 + 32);
        v45(v40, (char *)v99 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0), v35);
        (*(void (**)(unint64_t, void, uint64_t, void *))(v36 + 56))(v40, 0, 1, v35);
        if ((*(unsigned int (**)(unint64_t, uint64_t, void *))(v36 + 48))(v40, 1, v35) != 1)
        {
          v45(v7, (char *)v40, v35);
          if (*(void *)(v100 + 16) && (uint64_t v65 = v100, v66 = sub_2519FE584(v7), (v67 & 1) != 0))
          {
            unint64_t v68 = v66;
            uint64_t v69 = *(void *)(v65 + 56);
            uint64_t v70 = type metadata accessor for StaticService();
            uint64_t v71 = *(void *)(v70 - 8);
            uint64_t v72 = v69 + *(void *)(v71 + 72) * v68;
            uint64_t v73 = v102;
            sub_251E153D0(v72, v102, (uint64_t (*)(void))type metadata accessor for StaticService);
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v71 + 56))(v73, 0, 1, v70);
          }
          else
          {
            uint64_t v74 = type metadata accessor for StaticService();
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 56))(v102, 1, 1, v74);
          }
          return (*(uint64_t (**)(unint64_t, void *))(v36 + 8))(v7, v35);
        }
        sub_251A1B064(v40, &qword_26B21FF90);
        a1 = v101;
LABEL_60:
        id v75 = objc_msgSend(a1, sel_services, v99[0]);
        unint64_t v40 = sub_251F35AC0();

        if (!(v40 >> 62))
        {
          uint64_t v76 = *(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (v76) {
            goto LABEL_62;
          }
LABEL_84:
          swift_bridgeObjectRelease_n();
          goto LABEL_41;
        }
LABEL_83:
        swift_bridgeObjectRetain();
        uint64_t v76 = sub_251F366C0();
        if (v76)
        {
LABEL_62:
          unint64_t v37 = v40 & 0xC000000000000001;
          uint64_t v36 = 4;
          while (1)
          {
            if (v37) {
              char v77 = (void *)MEMORY[0x2533AB3A0](v36 - 4, v40);
            }
            else {
              char v77 = *(id *)(v40 + 8 * v36);
            }
            uint64_t v35 = v77;
            uint64_t v78 = v36 - 3;
            if (__OFADD__(v36 - 4, 1))
            {
              __break(1u);
              goto LABEL_81;
            }
            if (qword_269B9C488 != -1) {
              swift_once();
            }
            uint64_t v79 = qword_269BF31F0;
            id v80 = objc_msgSend(v35, sel_serviceType, v99[0]);
            unint64_t v7 = sub_251F356F0();
            uint64_t v8 = v81;

            v82._uint64_t countAndFlagsBits = v7;
            v82._object = (void *)v8;
            ServiceKind.init(rawValue:)(v82);
            uint64_t v83 = v104 == 53 ? 0 : v104;
            if (sub_251DB3C0C(v83, v79)) {
              break;
            }

            ++v36;
            if (v78 == v76) {
              goto LABEL_84;
            }
          }
          swift_bridgeObjectRelease_n();
          id v84 = objc_msgSend(v35, sel_uniqueIdentifier);
          uint64_t v85 = sub_251F34DA0();
          uint64_t v86 = *(void *)(v85 - 8);
          MEMORY[0x270FA5388](v85);
          char v88 = (char *)v99 - ((v87 + 15) & 0xFFFFFFFFFFFFFFF0);
          sub_251F34D80();

          if (*(void *)(v100 + 16) && (uint64_t v89 = v100, v90 = sub_2519FE584((uint64_t)v88), (v91 & 1) != 0))
          {
            unint64_t v92 = v90;
            uint64_t v93 = *(void *)(v89 + 56);
            uint64_t v94 = type metadata accessor for StaticService();
            uint64_t v95 = *(void *)(v94 - 8);
            uint64_t v96 = v93 + *(void *)(v95 + 72) * v92;
            uint64_t v97 = v102;
            sub_251E153D0(v96, v102, (uint64_t (*)(void))type metadata accessor for StaticService);
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v95 + 56))(v97, 0, 1, v94);
          }
          else
          {
            uint64_t v98 = type metadata accessor for StaticService();
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v98 - 8) + 56))(v102, 1, 1, v98);
          }

          return (*(uint64_t (**)(char *, uint64_t))(v86 + 8))(v88, v85);
        }
        goto LABEL_84;
      }
LABEL_59:
      swift_bridgeObjectRelease();
      goto LABEL_60;
    }
LABEL_58:
    if (sub_251F366C0()) {
      goto LABEL_35;
    }
    goto LABEL_59;
  }
LABEL_23:
  uint64_t v21 = 4;
  while (1)
  {
    if ((v19 & 0xC000000000000001) != 0) {
      id v22 = (id)MEMORY[0x2533AB3A0](v21 - 4, v19);
    }
    else {
      id v22 = *(id *)(v19 + 8 * v21);
    }
    unint64_t v7 = (unint64_t)v22;
    uint64_t v23 = v21 - 3;
    if (__OFADD__(v21 - 4, 1))
    {
      __break(1u);
      goto LABEL_55;
    }
    if (objc_msgSend(v22, sel_isPrimaryService)) {
      break;
    }

    ++v21;
    if (v23 == v20) {
      goto LABEL_30;
    }
  }
  swift_release_n();
  id v48 = objc_msgSend((id)v7, sel_uniqueIdentifier);
  uint64_t v49 = sub_251F34DA0();
  uint64_t v50 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v52 = (char *)v99 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34D80();

  uint64_t v53 = v100;
  if (*(void *)(v100 + 16) && (unint64_t v54 = sub_2519FE584((uint64_t)v52), (v55 & 1) != 0))
  {
    unint64_t v56 = v54;
    uint64_t v57 = *(void *)(v53 + 56);
    uint64_t v58 = type metadata accessor for StaticService();
    uint64_t v59 = *(void *)(v58 - 8);
    uint64_t v60 = v57 + *(void *)(v59 + 72) * v56;
    uint64_t v61 = v99[0];
    sub_251E153D0(v60, v99[0], (uint64_t (*)(void))type metadata accessor for StaticService);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v59 + 56))(v61, 0, 1, v58);
  }
  else
  {
    uint64_t v58 = type metadata accessor for StaticService();
    uint64_t v61 = v99[0];
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v99[0], 1, 1, v58);
  }

  (*(void (**)(char *, uint64_t))(v50 + 8))(v52, v49);
  type metadata accessor for StaticService();
  uint64_t v62 = *(void *)(v58 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48))(v61, 1, v58) == 1)
  {
    sub_251A1B064(v61, qword_26B21EE20);
    a1 = v101;
    goto LABEL_31;
  }
  uint64_t v63 = v61;
  uint64_t v64 = v102;
  sub_251E15438(v63, v102, (uint64_t (*)(void))type metadata accessor for StaticService);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v62 + 56))(v64, 0, 1, v58);
}

uint64_t sub_251E0C838@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v53 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F0A8);
  MEMORY[0x270FA5388](v5 - 8);
  unint64_t v7 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for StaticHH2Update(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = objc_msgSend(self, sel_processInfo);
  id v13 = objc_msgSend(v12, sel_processName);

  uint64_t v14 = sub_251F356F0();
  uint64_t v16 = v15;

  if (v14 == 0x6F42676E69727053 && v16 == 0xEB00000000647261)
  {
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  uint64_t v52 = v8;
  char v18 = sub_251F36B10();
  swift_bridgeObjectRelease();
  if (v18)
  {
LABEL_12:
    uint64_t v26 = type metadata accessor for StaticSoftwareUpdate(0);
    uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56);
    uint64_t v28 = v26;
    uint64_t v29 = v53;
    uint64_t v30 = 1;
    goto LABEL_13;
  }
  uint64_t v19 = a1;
  id v20 = objc_msgSend(a1, sel_softwareUpdateController);
  if (v20)
  {
    uint64_t v21 = v20;
    id v22 = objc_msgSend(v20, sel_availableUpdate);

    if (v22)
    {
      id v23 = a1;
      uint64_t v24 = v53;
      return sub_251C4019C(v22, v23, v24);
    }
  }
  if (!objc_msgSend(a1, sel_isFirmwareUpdateAvailable))
  {
    if (a2)
    {
      uint64_t v34 = a2;
      id v35 = objc_msgSend(a1, sel_uniqueIdentifier);
      uint64_t v36 = sub_251F34DA0();
      uint64_t v37 = *(void *)(v36 - 8);
      MEMORY[0x270FA5388](v36);
      uint64_t v39 = (char *)&v50 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_251F34D80();

      uint64_t v40 = *(void *)(v34 + 16);
      uint64_t v51 = v11;
      if (v40)
      {
        unint64_t v41 = sub_2519FE584((uint64_t)v39);
        uint64_t v42 = v52;
        if (v43)
        {
          sub_251E153D0(*(void *)(v34 + 56) + *(void *)(v9 + 72) * v41, (uint64_t)v7, type metadata accessor for StaticHH2Update);
          uint64_t v44 = 0;
        }
        else
        {
          uint64_t v44 = 1;
        }
      }
      else
      {
        uint64_t v44 = 1;
        uint64_t v42 = v52;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, v44, 1, v42);
      (*(void (**)(char *, uint64_t))(v37 + 8))(v39, v36);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v42) != 1)
      {
        uint64_t v46 = (uint64_t)v51;
        sub_251E15438((uint64_t)v7, (uint64_t)v51, type metadata accessor for StaticHH2Update);
        id v47 = objc_msgSend(v19, sel_uniqueIdentifier);
        uint64_t v48 = v53;
        sub_251F34D80();

        uint64_t v49 = type metadata accessor for StaticSoftwareUpdate(0);
        sub_251E15438(v46, v48 + *(int *)(v49 + 20), type metadata accessor for StaticHH2Update);
        type metadata accessor for StaticSoftwareUpdate.Kind(0);
        swift_storeEnumTagMultiPayload();
        return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v48, 0, 1, v49);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v52);
    }
    sub_251A1B064((uint64_t)v7, &qword_26B21F0A8);
    uint64_t v45 = type metadata accessor for StaticSoftwareUpdate(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v53, 1, 1, v45);
  }
  id v31 = objc_msgSend(a1, sel_uniqueIdentifier);
  uint64_t v32 = v53;
  sub_251F34D80();

  uint64_t v33 = type metadata accessor for StaticSoftwareUpdate(0);
  type metadata accessor for StaticSoftwareUpdate.Kind(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56);
  uint64_t v29 = v32;
  uint64_t v30 = 0;
  uint64_t v28 = v33;
LABEL_13:
  return v27(v29, v30, 1, v28);
}

uint64_t sub_251E0CE44(void *a1)
{
  id v2 = objc_msgSend(a1, sel_configuredName);
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = sub_251F356F0();
  }
  else
  {
    id v5 = objc_msgSend(a1, sel_category);
    id v6 = objc_msgSend(v5, sel_categoryType);

    uint64_t v7 = sub_251F356F0();
    uint64_t v9 = v8;

    uint64_t v4 = sub_251D47B58(v7, v9);
    uint64_t v11 = v10;
    swift_bridgeObjectRelease();
    if (!v11)
    {
      id v12 = objc_msgSend(a1, sel_name);
      uint64_t v4 = sub_251F356F0();
    }
  }
  return v4;
}

uint64_t sub_251E0CF3C(void *a1)
{
  unsigned int v1 = a1;
  LOBYTE(v2) = sub_251E0D2DC(a1);
  uint64_t v3 = (uint64_t)&off_26536F000;
  id v4 = objc_msgSend(v1, sel_category);
  id v5 = (SEL *)&off_26536F000;
  id v6 = objc_msgSend(v4, sel_categoryType);

  uint64_t v7 = sub_251F356F0();
  uint64_t v9 = v8;

  if (v7 == sub_251F356F0() && v9 == v10)
  {
    swift_bridgeObjectRelease_n();
    char v13 = 0;
  }
  else
  {
    char v12 = sub_251F36B10();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v13 = 0;
    if ((v12 & 1) == 0)
    {
      id v14 = objc_msgSend(v1, sel_services);
      sub_251A1A568(0, (unint64_t *)&qword_26B21F180);
      unint64_t v15 = sub_251F35AC0();

      if (v15 >> 62) {
        goto LABEL_24;
      }
      uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      for (; v16; uint64_t v16 = sub_251F366C0())
      {
        uint64_t v32 = v1;
        char v33 = (char)v2;
        uint64_t v17 = 4;
        while (1)
        {
          id v18 = (v15 & 0xC000000000000001) != 0
              ? (id)MEMORY[0x2533AB3A0](v17 - 4, v15)
              : *(id *)(v15 + 8 * v17);
          id v2 = v18;
          unsigned int v1 = (void *)(v17 - 3);
          if (__OFADD__(v17 - 4, 1)) {
            break;
          }
          id v19 = objc_msgSend(v18, sel_serviceType);
          uint64_t v20 = sub_251F356F0();
          id v5 = v21;

          v22._uint64_t countAndFlagsBits = v20;
          v22._object = v5;
          ServiceKind.init(rawValue:)(v22);
          if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v23 == 0x8000000251F64CE0)
          {
            swift_bridgeObjectRelease_n();

            swift_bridgeObjectRelease();
            goto LABEL_21;
          }
          uint64_t v3 = sub_251F36B10();

          swift_bridgeObjectRelease();
          if (v3)
          {
            swift_bridgeObjectRelease_n();
LABEL_21:
            char v13 = 0;
LABEL_22:
            LOBYTE(v2) = v33;
            unsigned int v1 = v32;
            uint64_t v3 = 0x26536F000;
            id v5 = (SEL *)&off_26536F000;
            goto LABEL_26;
          }
          ++v17;
          if (v1 == (void *)v16)
          {
            swift_bridgeObjectRelease_n();
            char v13 = 1;
            goto LABEL_22;
          }
        }
        __break(1u);
LABEL_24:
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease_n();
      char v13 = 1;
    }
  }
LABEL_26:
  id v24 = objc_msgSend(v1, *(SEL *)(v3 + 1952), v32);
  id v25 = [v24 v5[245]];

  uint64_t v26 = sub_251F356F0();
  uint64_t v28 = v27;

  if (v26 == sub_251F356F0() && v28 == v29)
  {
    swift_bridgeObjectRelease_n();
LABEL_30:
    LOBYTE(v2) = v13 | v2;
    return v2 & 1;
  }
  char v30 = sub_251F36B10();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v30) {
    goto LABEL_30;
  }
  return v2 & 1;
}

uint64_t sub_251E0D2DC(void *a1)
{
  unsigned int v1 = a1;
  id v2 = objc_msgSend(a1, sel_category);
  id v3 = objc_msgSend(v2, sel_categoryType);

  uint64_t v4 = sub_251F356F0();
  uint64_t v6 = v5;

  if (v4 == sub_251F356F0() && v6 == v7)
  {
    swift_bridgeObjectRelease_n();
    BOOL v10 = 1;
    goto LABEL_10;
  }
  char v9 = sub_251F36B10();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v9)
  {
    BOOL v10 = 1;
LABEL_10:
    BOOL v30 = v10;
    goto LABEL_11;
  }
  id v11 = objc_msgSend(v1, sel_uniqueIdentifiersForBridgedAccessories);
  if (v11)
  {
    char v12 = v11;
    sub_251F34DA0();
    uint64_t v13 = sub_251F35AC0();

    uint64_t v14 = *(void *)(v13 + 16);
    swift_bridgeObjectRelease();
    BOOL v10 = v14 != 0;
    goto LABEL_10;
  }
  BOOL v30 = 0;
LABEL_11:
  id v15 = objc_msgSend(v1, sel_services);
  sub_251A1A568(0, (unint64_t *)&qword_26B21F180);
  unint64_t v16 = sub_251F35AC0();

  if (v16 >> 62) {
    goto LABEL_28;
  }
  uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (uint64_t i = v1; v17; uint64_t i = v1)
  {
    uint64_t v18 = 4;
    while (1)
    {
      id v19 = (v16 & 0xC000000000000001) != 0
          ? (id)MEMORY[0x2533AB3A0](v18 - 4, v16)
          : *(id *)(v16 + 8 * v18);
      unsigned int v1 = v19;
      uint64_t v20 = v18 - 3;
      if (__OFADD__(v18 - 4, 1)) {
        break;
      }
      if (qword_269B9C488 != -1) {
        swift_once();
      }
      uint64_t v21 = qword_269BF31F0;
      id v22 = objc_msgSend(v1, sel_serviceType);
      uint64_t v23 = sub_251F356F0();
      id v25 = v24;

      v26._uint64_t countAndFlagsBits = v23;
      v26._object = v25;
      ServiceKind.init(rawValue:)(v26);
      if (v32 == 53) {
        uint64_t v27 = 0;
      }
      else {
        uint64_t v27 = v32;
      }
      int v28 = sub_251DB3C0C(v27, v21);

      if ((v28 & 1) == 0)
      {
        ++v18;
        if (v20 != v17) {
          continue;
        }
      }
      goto LABEL_30;
    }
    __break(1u);
LABEL_28:
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_251F366C0();
  }
  int v28 = 0;
LABEL_30:
  swift_bridgeObjectRelease_n();
  return v30 & ((v28 | sub_251E0D5CC(i, v28 & 1)) ^ 1);
}

uint64_t sub_251E0D5CC(void *a1, char a2)
{
  uint64_t v2 = (uint64_t)a1;
  id v3 = (char *)&off_26536F000;
  id v4 = objc_msgSend(a1, sel_category);
  uint64_t v5 = &off_26536F000;
  id v6 = objc_msgSend(v4, sel_categoryType);

  uint64_t v7 = sub_251F356F0();
  uint64_t v9 = v8;

  if (v7 == sub_251F356F0() && v9 == v10) {
    goto LABEL_9;
  }
  char v12 = sub_251F36B10();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v12)
  {
    LODWORD(v13) = 1;
    goto LABEL_11;
  }
  id v14 = objc_msgSend((id)v2, sel_category);
  id v15 = objc_msgSend(v14, sel_categoryType);

  uint64_t v16 = sub_251F356F0();
  uint64_t v18 = v17;

  if (v16 == sub_251F356F0() && v18 == v19) {
LABEL_9:
  }
    LODWORD(v13) = 1;
  else {
    LODWORD(v13) = sub_251F36B10();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_11:
  id v20 = objc_msgSend((id)v2, sel_services);
  sub_251A1A568(0, (unint64_t *)&qword_26B21F180);
  unint64_t v21 = sub_251F35AC0();

  if (v21 >> 62) {
    goto LABEL_38;
  }
  uint64_t v22 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v22; uint64_t v22 = sub_251F366C0())
  {
    int v58 = v13;
    uint64_t v13 = 4;
    id v3 = "00-8000-0026BB765291";
    id v59 = (id)v2;
    while (1)
    {
      id v23 = (v21 & 0xC000000000000001) != 0
          ? (id)MEMORY[0x2533AB3A0](v13 - 4, v21)
          : *(id *)(v21 + 8 * v13);
      id v24 = v23;
      uint64_t v5 = (__objc2_class **)(v13 - 3);
      if (__OFADD__(v13 - 4, 1)) {
        break;
      }
      id v25 = objc_msgSend(v23, sel_serviceType);
      uint64_t v26 = sub_251F356F0();
      int v28 = v27;

      v29._uint64_t countAndFlagsBits = v26;
      v29._object = v28;
      ServiceKind.init(rawValue:)(v29);
      char v30 = v60;
      if (v60 == 53) {
        char v30 = 0;
      }
      LOBYTE(v60) = v30;
      if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v31 == 0x8000000251F64FB0)
      {
LABEL_33:
        swift_bridgeObjectRelease_n();

        swift_bridgeObjectRelease();
        goto LABEL_35;
      }
      char v32 = sub_251F36B10();
      swift_bridgeObjectRelease();
      if (v32)
      {
        swift_bridgeObjectRelease_n();

        goto LABEL_35;
      }
      id v33 = objc_msgSend(v24, sel_serviceType);
      uint64_t v34 = sub_251F356F0();
      uint64_t v36 = v35;

      v37._uint64_t countAndFlagsBits = v34;
      v37._object = v36;
      ServiceKind.init(rawValue:)(v37);
      char v38 = v60;
      if (v60 == 53) {
        char v38 = 0;
      }
      LOBYTE(v60) = v38;
      if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v39 == 0x8000000251F64FE0) {
        goto LABEL_33;
      }
      uint64_t v2 = sub_251F36B10();

      swift_bridgeObjectRelease();
      if (v2)
      {
        swift_bridgeObjectRelease_n();
LABEL_35:
        int v40 = 1;
LABEL_36:
        uint64_t v2 = (uint64_t)v59;
        LODWORD(v13) = v58;
        id v3 = (char *)&off_26536F000;
        uint64_t v5 = &off_26536F000;
        goto LABEL_40;
      }
      ++v13;
      if (v5 == (__objc2_class **)v22)
      {
        swift_bridgeObjectRelease_n();
        int v40 = 0;
        goto LABEL_36;
      }
    }
    __break(1u);
LABEL_38:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease_n();
  int v40 = 0;
LABEL_40:
  id v41 = [(id)v2 *((SEL *)v3 + 244)];
  id v42 = [v41 (SEL)v5[245]];

  uint64_t v43 = sub_251F356F0();
  uint64_t v45 = v44;

  if (v43 == sub_251F356F0() && v45 == v46) {
    int v47 = 1;
  }
  else {
    int v47 = sub_251F36B10();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  HMAccessory.specialMediaCategory.getter((unsigned __int16 *)&v60);
  if ((~(unsigned __int16)v60 & 0xFEFC) != 0)
  {
    id v49 = objc_msgSend((id)v2, sel_mediaProfile);

    if (v49)
    {
      BOOL v48 = 1;
    }
    else
    {
      id v50 = objc_msgSend((id)v2, sel_siriEndpointProfile);

      BOOL v48 = v50 != 0;
    }
  }
  else
  {
    BOOL v48 = 0;
  }
  id v51 = objc_msgSend((id)v2, sel_hdm_matterNodeID);
  if (v51)
  {
    uint64_t v52 = v51;
    uint64_t v60 = 0;
    char v61 = 1;
    sub_251F36D80();

    if ((v61 & 1) == 0)
    {
      id v53 = objc_msgSend((id)v2, sel_hdm_matterNodeID);
      if (!v53 || (unint64_t v54 = v53, v60 = 0, v61 = 1, sub_251F36D80(), v54, (v61 & 1) != 0) || v60)
      {
        if (((v13 | v40 | v47 | v48) & 1) == 0)
        {
          char v55 = a2 ^ 1;
          return v55 & 1;
        }
        goto LABEL_57;
      }
    }
  }
  if ((v13 | v40 | v47 | v48))
  {
LABEL_57:
    char v55 = 1;
    return v55 & 1;
  }
  char v55 = 0;
  return v55 & 1;
}

uint64_t sub_251E0DBF8(void *a1, uint64_t a2)
{
  uint64_t v55 = a2;
  uint64_t v3 = type metadata accessor for StaticService();
  id v4 = *(char **)(v3 - 8);
  uint64_t v58 = v3;
  unint64_t v59 = (unint64_t)v4;
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  unint64_t v54 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v53 - v8;
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  char v12 = (char *)&v53 - v11;
  MEMORY[0x270FA5388](v10);
  id v14 = (char *)&v53 - v13;
  id v15 = objc_msgSend(a1, sel_category);
  id v16 = objc_msgSend(v15, sel_categoryType);

  uint64_t v17 = sub_251F356F0();
  uint64_t v19 = v18;

  if (v17 != sub_251F356F0() || v19 != v20)
  {
    char v22 = sub_251F36B10();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v22) {
      goto LABEL_9;
    }
    id v23 = objc_msgSend(a1, sel_category);
    id v24 = objc_msgSend(v23, sel_categoryType);

    uint64_t v25 = sub_251F356F0();
    uint64_t v27 = v26;

    if (v25 != sub_251F356F0() || v27 != v28)
    {
      char v52 = sub_251F36B10();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = 0;
      if ((v52 & 1) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  swift_bridgeObjectRelease_n();
LABEL_9:
  uint64_t v29 = *(void *)(v55 + 16);
  if (!v29) {
    return 0;
  }
  unint64_t v53 = (*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
  uint64_t v30 = v55 + v53;
  uint64_t v31 = *(void *)(v59 + 72);
  swift_bridgeObjectRetain();
  unint64_t v59 = (unint64_t)"00-8000-0026BB765291";
  uint64_t v32 = v30;
  uint64_t v56 = v29;
  while (1)
  {
    sub_251E153D0(v32, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for StaticService);
    char v63 = v14[*(int *)(v58 + 88)];
    if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v33 == 0x8000000251F64DA0) {
      break;
    }
    char v34 = sub_251F36B10();
    swift_bridgeObjectRelease();
    sub_251E154A0((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for StaticService);
    if (v34) {
      goto LABEL_17;
    }
    v32 += v31;
    if (!--v29)
    {
LABEL_23:
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  swift_bridgeObjectRelease();
  sub_251E154A0((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for StaticService);
LABEL_17:
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v36 = 0;
  unint64_t v57 = (unint64_t)"00-8000-0026BB765291";
  uint64_t v37 = v58;
  while (1)
  {
    uint64_t v38 = v36 + 1;
    if (__OFADD__(v36, 1))
    {
      __break(1u);
      return result;
    }
    sub_251E153D0(v30, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticService);
    char v62 = v12[*(int *)(v37 + 88)];
    if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v39 == 0x8000000251F64B60) {
      break;
    }
    char v40 = sub_251F36B10();
    swift_bridgeObjectRelease();
    uint64_t result = sub_251E154A0((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticService);
    if (v40) {
      goto LABEL_26;
    }
    ++v36;
    v30 += v31;
    if (v38 == v56) {
      goto LABEL_23;
    }
  }
  swift_bridgeObjectRelease();
  sub_251E154A0((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticService);
LABEL_26:
  swift_bridgeObjectRelease();
  uint64_t v41 = swift_bridgeObjectRetain();
  uint64_t v42 = sub_251E14478(v41);
  swift_bridgeObjectRelease();
  uint64_t v43 = *(void *)(v42 + 16);
  if (v43)
  {
    uint64_t v44 = v42 + v53;
    uint64_t v56 = v42;
    swift_bridgeObjectRetain();
    unint64_t v45 = v59 | 0x8000000000000000;
    unint64_t v46 = v57 | 0x8000000000000000;
    uint64_t v47 = (uint64_t)v54;
    while (1)
    {
      sub_251E153D0(v44, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticService);
      char v61 = v9[*(int *)(v37 + 88)];
      if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v48 == v45)
      {
        swift_bridgeObjectRelease();
        sub_251E153D0((uint64_t)v9, v47, (uint64_t (*)(void))type metadata accessor for StaticService);
      }
      else
      {
        char v49 = sub_251F36B10();
        swift_bridgeObjectRelease();
        sub_251E153D0((uint64_t)v9, v47, (uint64_t (*)(void))type metadata accessor for StaticService);
        if ((v49 & 1) == 0)
        {
          char v60 = *(unsigned char *)(v47 + *(int *)(v37 + 88));
          if (ServiceKind.rawValue.getter() != 0xD000000000000024 || v50 != v46)
          {
            char v51 = sub_251F36B10();
            swift_bridgeObjectRelease();
            sub_251E154A0(v47, (uint64_t (*)(void))type metadata accessor for StaticService);
            sub_251E154A0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticService);
            if ((v51 & 1) == 0)
            {
              swift_bridgeObjectRelease_n();
              return 0;
            }
            goto LABEL_30;
          }
          swift_bridgeObjectRelease();
        }
      }
      sub_251E154A0(v47, (uint64_t (*)(void))type metadata accessor for StaticService);
      sub_251E154A0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticService);
LABEL_30:
      v44 += v31;
      if (!--v43)
      {
        swift_bridgeObjectRelease_n();
        return 1;
      }
    }
  }
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_251E0E2C4(void *a1, uint64_t a2)
{
  uint64_t v32 = type metadata accessor for StaticService();
  uint64_t v4 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v6 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_msgSend(a1, sel_category);
  id v8 = objc_msgSend(v7, sel_categoryType);

  uint64_t v9 = sub_251F356F0();
  uint64_t v11 = v10;

  if (v9 != sub_251F356F0() || v11 != v12)
  {
    char v14 = sub_251F36B10();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v14) {
      goto LABEL_9;
    }
    id v15 = objc_msgSend(a1, sel_category);
    id v16 = objc_msgSend(v15, sel_categoryType);

    uint64_t v17 = sub_251F356F0();
    uint64_t v19 = v18;

    if (v17 != sub_251F356F0() || v19 != v20)
    {
      char v30 = sub_251F36B10();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = 0;
      if ((v30 & 1) == 0) {
        return result;
      }
      goto LABEL_9;
    }
  }
  swift_bridgeObjectRelease_n();
LABEL_9:
  uint64_t v21 = *(void *)(a2 + 16);
  if (!v21) {
    return 0;
  }
  uint64_t v22 = a2 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v23 = *(void *)(v4 + 72);
  v31[1] = a2;
  swift_bridgeObjectRetain();
  uint64_t v24 = 0;
  while (1)
  {
    sub_251E153D0(v22, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticService);
    char v33 = v6[*(int *)(v32 + 88)];
    if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v25 == 0x8000000251F64EC0)
    {
      swift_bridgeObjectRelease();
      uint64_t result = sub_251E154A0((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v27 = 1;
    }
    else
    {
      char v28 = sub_251F36B10();
      swift_bridgeObjectRelease();
      uint64_t result = sub_251E154A0((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v27 = v28 & 1;
    }
    BOOL v29 = __OFADD__(v24, v27);
    v24 += v27;
    if (v29) {
      break;
    }
    v22 += v23;
    if (!--v21)
    {
      swift_bridgeObjectRelease();
      return v24 > 2;
    }
  }
  __break(1u);
  return result;
}

uint64_t StaticAccessory.DeviceIdentifier.id.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_251E153D0(v1, a1, type metadata accessor for StaticAccessory.DeviceIdentifier);
}

Swift::String __swiftcall StaticAccessory.DeviceIdentifier.stringVersion()()
{
  uint64_t v1 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (uint64_t *)((char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_251E153D0(v0, (uint64_t)v3, type metadata accessor for StaticAccessory.DeviceIdentifier);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_251F34DA0();
    uint64_t v5 = *(void *)(v4 - 8);
    MEMORY[0x270FA5388](v4);
    id v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, uint64_t *, uint64_t))(v5 + 32))(v7, v3, v4);
    uint64_t v8 = sub_251F34D40();
    uint64_t v10 = v9;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    uint64_t v8 = *v3;
    uint64_t v10 = (void *)v3[1];
  }
  uint64_t v11 = v8;
  uint64_t v12 = v10;
  result._object = v12;
  result._uint64_t countAndFlagsBits = v11;
  return result;
}

uint64_t StaticAccessory.DeviceIdentifier.hash(into:)()
{
  uint64_t v1 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251E153D0(v0, (uint64_t)v3, type metadata accessor for StaticAccessory.DeviceIdentifier);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_251F34DA0();
    uint64_t v5 = *(void *)(v4 - 8);
    MEMORY[0x270FA5388](v4);
    id v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
    sub_251F36CB0();
    sub_251D480E0((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA95E8]);
    sub_251F35610();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    sub_251F36CB0();
    sub_251F357B0();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_251E0E98C(uint64_t a1)
{
  unint64_t v2 = sub_251E15A8C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E0E9C8(uint64_t a1)
{
  unint64_t v2 = sub_251E15A8C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251E0EA04()
{
  if (*v0) {
    return 1684632949;
  }
  else {
    return 0x746F6F7465756C62;
  }
}

uint64_t sub_251E0EA3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251E1CBD4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251E0EA64(uint64_t a1)
{
  unint64_t v2 = sub_251E159E4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E0EAA0(uint64_t a1)
{
  unint64_t v2 = sub_251E159E4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251E0EADC(uint64_t a1)
{
  unint64_t v2 = sub_251E15A38();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E0EB18(uint64_t a1)
{
  unint64_t v2 = sub_251E15A38();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticAccessory.DeviceIdentifier.encode(to:)(void *a1)
{
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3C98);
  uint64_t v22 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v24 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3CA0);
  uint64_t v21 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3CA8);
  uint64_t v9 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251E159E4();
  sub_251F36DA0();
  sub_251E153D0(v23, (uint64_t)v8, type metadata accessor for StaticAccessory.DeviceIdentifier);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = v9;
    uint64_t v13 = sub_251F34DA0();
    uint64_t v14 = *(void *)(v13 - 8);
    MEMORY[0x270FA5388](v13);
    id v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v8, v13);
    char v28 = 1;
    sub_251E15A38();
    uint64_t v17 = v26;
    sub_251F36900();
    sub_251D480E0(&qword_26B21E348, MEMORY[0x270FA95E8]);
    sub_251F36A20();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v25);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v11, v17);
  }
  else
  {
    char v27 = 0;
    sub_251E15A8C();
    uint64_t v19 = v26;
    sub_251F36900();
    sub_251F369D0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v5, v3);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v19);
  }
}

uint64_t StaticAccessory.DeviceIdentifier.hashValue.getter()
{
  uint64_t v1 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F36CA0();
  sub_251E153D0(v0, (uint64_t)v3, type metadata accessor for StaticAccessory.DeviceIdentifier);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_251F34DA0();
    uint64_t v5 = *(void *)(v4 - 8);
    MEMORY[0x270FA5388](v4);
    uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
    sub_251F36CB0();
    sub_251D480E0((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA95E8]);
    sub_251F35610();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    sub_251F36CB0();
    sub_251F357B0();
    swift_bridgeObjectRelease();
  }
  return sub_251F36D00();
}

uint64_t StaticAccessory.DeviceIdentifier.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v43 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3CC8);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v44 = v3;
  uint64_t v45 = v4;
  MEMORY[0x270FA5388](v3);
  uint64_t v50 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3CD0);
  uint64_t v46 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v48 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3CD8);
  uint64_t v47 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  id v16 = (uint64_t *)((char *)&v39 - v15);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v39 - v17;
  uint64_t v19 = a1[3];
  char v51 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v19);
  sub_251E159E4();
  uint64_t v20 = v52;
  sub_251F36D90();
  if (v20) {
    goto LABEL_10;
  }
  char v40 = v16;
  uint64_t v41 = v18;
  uint64_t v42 = v13;
  uint64_t v22 = v48;
  uint64_t v21 = v49;
  uint64_t v23 = v50;
  uint64_t v52 = v10;
  uint64_t v24 = sub_251F368E0();
  uint64_t v25 = v9;
  if (*(void *)(v24 + 16) != 1)
  {
    uint64_t v30 = sub_251F36490();
    swift_allocError();
    uint64_t v32 = v31;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D440);
    *uint64_t v32 = v52;
    sub_251F36780();
    sub_251F36480();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v30 - 8) + 104))(v32, *MEMORY[0x263F8DCB0], v30);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v9, v7);
LABEL_10:
    uint64_t v29 = (uint64_t)v51;
    return __swift_destroy_boxed_opaque_existential_0(v29);
  }
  if (*(unsigned char *)(v24 + 32))
  {
    char v54 = 1;
    sub_251E15A38();
    uint64_t v26 = v23;
    sub_251F36770();
    sub_251F34DA0();
    sub_251D480E0(&qword_269B9CC80, MEMORY[0x270FA95E8]);
    uint64_t v27 = (uint64_t)v42;
    uint64_t v28 = v44;
    sub_251F36880();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v26, v28);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v25, v7);
    uint64_t v29 = (uint64_t)v51;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    char v53 = 0;
    sub_251E15A8C();
    sub_251F36770();
    uint64_t v34 = sub_251F36830();
    uint64_t v35 = v47;
    uint64_t v37 = v36;
    (*(void (**)(char *, uint64_t))(v46 + 8))(v22, v21);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v25, v7);
    uint64_t v27 = (uint64_t)v40;
    *char v40 = v34;
    *(void *)(v27 + 8) = v37;
    swift_storeEnumTagMultiPayload();
    uint64_t v29 = (uint64_t)v51;
  }
  uint64_t v38 = (uint64_t)v41;
  sub_251E15438(v27, (uint64_t)v41, type metadata accessor for StaticAccessory.DeviceIdentifier);
  sub_251E15438(v38, v43, type metadata accessor for StaticAccessory.DeviceIdentifier);
  return __swift_destroy_boxed_opaque_existential_0(v29);
}

uint64_t sub_251E0F7A8(uint64_t a1)
{
  MEMORY[0x270FA5388](a1);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F36CA0();
  sub_251E153D0(v1, (uint64_t)v3, type metadata accessor for StaticAccessory.DeviceIdentifier);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_251F34DA0();
    uint64_t v5 = *(void *)(v4 - 8);
    MEMORY[0x270FA5388](v4);
    uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
    sub_251F36CB0();
    sub_251D480E0((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA95E8]);
    sub_251F35610();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    sub_251F36CB0();
    sub_251F357B0();
    swift_bridgeObjectRelease();
  }
  return sub_251F36D00();
}

uint64_t sub_251E0F984@<X0>(uint64_t a1@<X8>)
{
  return sub_251E153D0(v1, a1, type metadata accessor for StaticAccessory.DeviceIdentifier);
}

uint64_t sub_251E0F9B8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticAccessory.DeviceIdentifier.init(from:)(a1, a2);
}

uint64_t sub_251E0F9D0(void *a1)
{
  return StaticAccessory.DeviceIdentifier.encode(to:)(a1);
}

uint64_t sub_251E0F9E8@<X0>(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>)
{
  uint64_t v47 = a8;
  uint64_t v48 = a7;
  uint64_t v59 = a5;
  v39[0] = a4;
  uint64_t v46 = a9;
  uint64_t v14 = type metadata accessor for StaticAccessory(0);
  uint64_t v45 = *(void *)(v14 - 8);
  uint64_t v44 = *(void *)(v45 + 64);
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  uint64_t v43 = (uint64_t)v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)(a6 - 8);
  uint64_t v18 = *(void *)(v17 + 64);
  uint64_t v19 = *(int *)(MEMORY[0x270FA5388](v15) + 88);
  uint64_t v20 = a1;
  uint64_t v42 = a1;
  uint64_t v21 = *(void *)(a1 + v19);
  uint64_t v50 = v20;
  swift_bridgeObjectRetain();
  unint64_t v22 = sub_251A51E88((void (*)(char *))sub_251AB3DF0, (uint64_t)v49, v21);
  swift_bridgeObjectRelease();
  uint64_t v23 = swift_allocObject();
  *(unsigned char *)(v23 + 16) = a2;
  *(void *)&long long v55 = v22;
  *((void *)&v55 + 1) = sub_251CCDDCC;
  uint64_t v56 = v23;
  *(unsigned char *)(swift_allocObject() + 16) = a3;
  *(void *)&long long v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2378);
  sub_251F366B0();
  swift_release();
  long long v51 = v53;
  uint64_t v52 = v54;
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v24((char *)v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), a4, a6);
  uint64_t v25 = *(unsigned __int8 *)(v17 + 80);
  uint64_t v26 = v17;
  uint64_t v27 = (v25 + 48) & ~v25;
  v39[1] = v25 | 7;
  uint64_t v28 = (char *)swift_allocObject();
  *((void *)v28 + 2) = v59;
  *((void *)v28 + 3) = a6;
  uint64_t v29 = a6;
  uint64_t v30 = v47;
  *((void *)v28 + 4) = v48;
  *((void *)v28 + 5) = v30;
  uint64_t v41 = *(void (**)(char *, char *))(v26 + 32);
  uint64_t v31 = (char *)v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = v29;
  v41(&v28[v27], v31);
  sub_251F366B0();
  swift_release();
  uint64_t v33 = v56;
  long long v40 = v55;
  v24(v31, v39[0], v32);
  uint64_t v34 = v43;
  sub_251E153D0(v42, v43, type metadata accessor for StaticAccessory);
  unint64_t v35 = (v27 + v18 + *(unsigned __int8 *)(v45 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
  uint64_t v36 = (void *)swift_allocObject();
  v36[2] = v59;
  long long v36[3] = v32;
  uint64_t v37 = v47;
  v36[4] = v48;
  v36[5] = v37;
  ((void (*)(char *, char *, uint64_t))v41)((char *)v36 + v27, v31, v32);
  sub_251E15438(v34, (uint64_t)v36 + v35, type metadata accessor for StaticAccessory);
  long long v55 = v40;
  uint64_t v56 = v33;
  unint64_t v57 = sub_251E1D460;
  uint64_t v58 = v36;
  uint64_t result = sub_251EDCEA0((uint64_t *)&v55);
  uint64_t *v46 = result;
  return result;
}

uint64_t sub_251E0FE20@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_251E0F9E8(a1, *(unsigned char *)(v2 + 48), *(unsigned char *)(v2 + 49), *(void *)(v2 + 56), *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), a2);
}

uint64_t sub_251E0FE4C(uint64_t a1, char a2)
{
  uint64_t v4 = type metadata accessor for StaticService();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251E153D0(a1, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticService);
  if (a2) {
    uint64_t v7 = v6[*(int *)(v4 + 80)];
  }
  else {
    uint64_t v7 = 1;
  }
  sub_251E154A0((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticService);
  return v7;
}

uint64_t sub_251E0FF1C(uint64_t a1, char a2)
{
  uint64_t v4 = type metadata accessor for StaticService();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251E153D0(a1, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticService);
  if (a2) {
    uint64_t v7 = v6[*(int *)(v4 + 32)];
  }
  else {
    uint64_t v7 = 1;
  }
  sub_251E154A0((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticService);
  return v7;
}

uint64_t sub_251E0FFEC@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v9 = type metadata accessor for StaticService();
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)v42 - v14;
  MEMORY[0x270FA5388](v13);
  LOBYTE(a1) = *a1;
  uint64_t v17 = *(void *)(a2 + 16);
  uint64_t v16 = *(void *)(a2 + 24);
  uint64_t v46 = (uint64_t)v42 - v18;
  sub_251E153D0(a3, (uint64_t)v42 - v18, (uint64_t (*)(void))type metadata accessor for StaticService);
  if (a1)
  {
    char v19 = 1;
  }
  else
  {
    uint64_t v43 = v16;
    uint64_t v44 = v12;
    uint64_t v45 = v15;
    uint64_t v20 = *(void *)(v17 + 16);
    if (v20)
    {
      v42[0] = a4;
      v42[1] = v4;
      char v21 = *(unsigned char *)(v46 + *(int *)(v9 + 88));
      swift_bridgeObjectRetain_n();
      uint64_t v22 = 0;
      while (1)
      {
        char v50 = *(unsigned char *)(v17 + v22 + 32);
        char v49 = v21;
        unint64_t v23 = ServiceKind.rawValue.getter();
        uint64_t v25 = v24;
        if (v23 == ServiceKind.rawValue.getter() && v25 == v26) {
          break;
        }
        char v28 = sub_251F36B10();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v28) {
          goto LABEL_14;
        }
        if (v20 == ++v22)
        {
          swift_bridgeObjectRelease_n();
          a4 = (char *)v42[0];
          goto LABEL_12;
        }
      }
      swift_bridgeObjectRelease_n();
LABEL_14:
      swift_bridgeObjectRelease_n();
      uint64_t v29 = (uint64_t)v45;
      sub_251E153D0(v46, (uint64_t)v45, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v31 = v43;
      uint64_t v30 = (uint64_t)v44;
      uint64_t v32 = *(void *)(v43 + 16);
      sub_251E153D0(v29, (uint64_t)v44, (uint64_t (*)(void))type metadata accessor for StaticService);
      if (v32)
      {
        if (*(unsigned char *)(v30 + *(int *)(v9 + 96)) == 53) {
          char v33 = 0;
        }
        else {
          char v33 = *(unsigned char *)(v30 + *(int *)(v9 + 96));
        }
        swift_bridgeObjectRetain_n();
        uint64_t v34 = 0;
        a4 = (char *)v42[0];
        while (1)
        {
          char v48 = *(unsigned char *)(v31 + v34 + 32);
          char v47 = v33;
          unint64_t v35 = ServiceKind.rawValue.getter();
          uint64_t v37 = v36;
          if (v35 == ServiceKind.rawValue.getter() && v37 == v38) {
            break;
          }
          char v40 = sub_251F36B10();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v40) {
            goto LABEL_28;
          }
          if (v32 == ++v34)
          {
            char v19 = 0;
            goto LABEL_29;
          }
        }
        swift_bridgeObjectRelease_n();
LABEL_28:
        char v19 = 1;
LABEL_29:
        swift_bridgeObjectRelease_n();
        uint64_t v30 = (uint64_t)v44;
        uint64_t v29 = (uint64_t)v45;
      }
      else
      {
        char v19 = 1;
        a4 = (char *)v42[0];
      }
      sub_251E154A0(v30, (uint64_t (*)(void))type metadata accessor for StaticService);
    }
    else
    {
LABEL_12:
      uint64_t v29 = (uint64_t)v45;
      sub_251E153D0(v46, (uint64_t)v45, (uint64_t (*)(void))type metadata accessor for StaticService);
      char v19 = 0;
    }
    sub_251E154A0(v29, (uint64_t (*)(void))type metadata accessor for StaticService);
  }
  uint64_t result = sub_251E154A0(v46, (uint64_t (*)(void))type metadata accessor for StaticService);
  *a4 = v19;
  return result;
}

uint64_t sub_251E10364@<X0>(uint64_t *a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3E40);
  sub_251A1E590(&qword_269BA3E48, &qword_269BA3E40);
  uint64_t result = sub_251F35980();
  *a1 = result;
  return result;
}

uint64_t sub_251E10420@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t *a4@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 32);
  v8[2] = a2;
  v8[3] = a3;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_251A532C0((void (*)(void))sub_251E1CD18, (uint64_t)v8, v5);
  uint64_t result = swift_bridgeObjectRelease();
  *a4 = v6;
  return result;
}

uint64_t sub_251E10498@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v22 = a3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F108);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for StaticCharacteristic();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(a2 + *(int *)(type metadata accessor for StaticService() + 112));
  if (!*(void *)(v14 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
LABEL_7:
    sub_251A1B064((uint64_t)v9, &qword_26B21F108);
    uint64_t v18 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(a4, 1, 1, v18);
  }
  uint64_t v15 = *a1;
  swift_bridgeObjectRetain();
  unint64_t v16 = sub_2519FE568(v15);
  if (v17)
  {
    sub_251E153D0(*(void *)(v14 + 56) + *(void *)(v11 + 72) * v16, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
  }
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1) {
    goto LABEL_7;
  }
  sub_251E15438((uint64_t)v9, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
  sub_251E153D0(v22, a4, type metadata accessor for StaticAccessory);
  uint64_t v20 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
  sub_251E153D0(a2, a4 + *(int *)(v20 + 20), (uint64_t (*)(void))type metadata accessor for StaticService);
  sub_251E15438((uint64_t)v13, a4 + *(int *)(v20 + 24), (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(a4, 0, 1, v20);
}

uint64_t Collection<>.staticAccessoryServiceCharacteristicTriplets(matching:filterOutHiddenStatusAccessories:)(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v1 = a1[1];
  uint64_t v3 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA03E8);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_251F38650;
  *(void *)(v6 + 32) = v2;
  *(void *)(v6 + 40) = v1;
  *(void *)(v6 + 48) = v3;
  *(void *)(v6 + 56) = v4;
  *(void *)(v6 + 64) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3CE0);
  sub_251A1E590(&qword_269BA3CE8, &qword_269BA3CE0);
  uint64_t v7 = Collection<>.staticAccessoryServiceCharacteristicTriplets<A>(matching:filterOutHiddenStatusAccessories:skipNoResponseAccessories:)();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_251E108B4(uint64_t a1)
{
  return sub_251E10910(a1, qword_269BA3AF0);
}

uint64_t static StaticAccessory.emptyAccessoryId.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_251D04634(&qword_269B9C4D0, (uint64_t)qword_269BA3AF0, a1);
}

uint64_t sub_251E108F4(uint64_t a1)
{
  return sub_251E10910(a1, qword_269BA3B08);
}

uint64_t sub_251E10910(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_251F34DA0();
  __swift_allocate_value_buffer(v3, a2);
  uint64_t v4 = __swift_project_value_buffer(v3, (uint64_t)a2);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34D30();
  uint64_t v8 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, v3);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(v4, v7, v3);
  }
  __break(1u);
  return result;
}

uint64_t static StaticAccessory.sampleAccessoryId.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_251D04634(&qword_269B9C4D8, (uint64_t)qword_269BA3B08, a1);
}

uint64_t sub_251E10A58()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v46 = (char *)v41 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
  MEMORY[0x270FA5388](v2 - 8);
  char v47 = (char *)v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = (uint64_t *)type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  MEMORY[0x270FA5388](v42);
  char v49 = (uint64_t *)((char *)v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for StaticAccessory(0);
  __swift_allocate_value_buffer(v5, qword_269BA3B20);
  uint64_t v45 = __swift_project_value_buffer(v5, (uint64_t)qword_269BA3B20);
  if (qword_269B9C4D0 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = __swift_project_value_buffer(v6, (uint64_t)qword_269BA3AF0);
  uint64_t v44 = v41;
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x270FA5388](v7);
  unint64_t v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v11 = *(uint64_t (**)(void))(v8 + 16);
  uint64_t v43 = (uint64_t)v41 - v10;
  uint64_t v12 = v11();
  MEMORY[0x270FA5388](v12);
  uint64_t v13 = (char *)v41 - v10;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v14 - 8);
  v41[2] = v15;
  unint64_t v16 = (char *)v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34D30();
  int v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v16, 1, v6);
  char v48 = v11;
  if (v17 == 1)
  {
    sub_251A1B064((uint64_t)v16, &qword_26B21FF90);
    uint64_t v18 = v49;
    void *v49 = 0xD000000000000024;
    v18[1] = 0x8000000251F71F60;
  }
  else
  {
    char v19 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v19(v13, v16, v6);
    v19((char *)v49, v13, v6);
    uint64_t v11 = v48;
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v20 = type metadata accessor for StaticDeviceMetadata();
  uint64_t v21 = (uint64_t)v47;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v47, 1, 1, v20);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  uint64_t v42 = v41;
  MEMORY[0x270FA5388](v22 - 8);
  uint64_t v24 = (char *)v41 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_251F34D20();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v24, 1, 1, v25);
  if (qword_26B220000 != -1) {
    swift_once();
  }
  uint64_t v26 = type metadata accessor for StaticHome();
  uint64_t v27 = __swift_project_value_buffer(v26, (uint64_t)qword_26B220D30);
  v41[1] = (uint64_t)v41;
  MEMORY[0x270FA5388](v27);
  char v28 = (char *)v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  ((void (*)(char *))v11)(v28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB80);
  unint64_t v29 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_251F38650;
  if (qword_26B2200F8 != -1) {
    swift_once();
  }
  uint64_t v31 = type metadata accessor for StaticRoom(0);
  uint64_t v32 = __swift_project_value_buffer(v31, (uint64_t)qword_26B21FF58);
  ((void (*)(unint64_t, uint64_t, uint64_t))v11)(v30 + v29, v32, v6);
  if (*(void *)(v30 + 16)) {
    v41[0] = sub_251C08E40(v30);
  }
  else {
    v41[0] = MEMORY[0x263F8EE88];
  }
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v33 = MEMORY[0x263F8EE78];
  unint64_t v34 = sub_2519F9B94(MEMORY[0x263F8EE78]);
  MEMORY[0x270FA5388](v34);
  uint64_t v36 = (char *)v41 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_269B9C4A0 != -1) {
    swift_once();
  }
  uint64_t v37 = __swift_project_value_buffer(v6, (uint64_t)qword_269BF3218);
  ((void (*)(char *, uint64_t, uint64_t))v48)(v36, v37, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v36, 0, 1, v6);
  __int16 v51 = -260;
  uint64_t v38 = type metadata accessor for StaticSoftwareUpdate(0);
  uint64_t v39 = (uint64_t)v46;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v46, 1, 1, v38);
  char v50 = 0;
  return sub_251E01110(v43, 0x6341207974706D45, 0xEF79726F73736563, (uint64_t)v49, v21, (uint64_t)v24, 0, 1, v45, 0, (uint64_t)v28, v41[0], 0, 0xE000000000000000, 0, 0, 1, 1, 0,
           v34,
           v33,
           (uint64_t)v36,
           &v51,
           0,
           0,
           0,
           0,
           0,
           0,
           v39,
           1,
           &v50,
           0);
}

uint64_t static StaticAccessory.empty.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_251E11B24(&qword_269B9C4E0, (uint64_t)qword_269BA3B20, a1);
}

uint64_t sub_251E1120C()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v58 = (char *)v48 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v62 = (uint64_t)v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v59 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  MEMORY[0x270FA5388](v59);
  char v61 = (void *)((char *)v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for StaticAccessory(0);
  __swift_allocate_value_buffer(v5, qword_269BA3B38);
  uint64_t v57 = __swift_project_value_buffer(v5, (uint64_t)qword_269BA3B38);
  if (qword_269B9C4D8 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = __swift_project_value_buffer(v6, (uint64_t)qword_269BA3B08);
  uint64_t v56 = v48;
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x270FA5388](v7);
  unint64_t v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v11 = *(uint64_t (**)(void))(v8 + 16);
  uint64_t v55 = (uint64_t)v48 - v10;
  char v60 = (void (*)(void))v11;
  uint64_t v12 = v11();
  MEMORY[0x270FA5388](v12);
  uint64_t v13 = (char *)v48 - v10;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v54 = v15;
  unint64_t v16 = (char *)v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34D30();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v16, 1, v6) == 1)
  {
    sub_251A1B064((uint64_t)v16, &qword_26B21FF90);
    int v17 = v61;
    *char v61 = 0xD000000000000024;
    v17[1] = 0x8000000251F71F60;
  }
  else
  {
    uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v18(v13, v16, v6);
    v18((char *)v61, v13, v6);
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v19 = type metadata accessor for StaticDeviceMetadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v62, 1, 1, v19);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  long long v53 = v48;
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v22 = (char *)v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34CB0();
  uint64_t v23 = sub_251F34D20();
  uint64_t v24 = *(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56);
  uint64_t v52 = v22;
  v24(v22, 0, 1, v23);
  uint64_t v25 = v60;
  if (qword_269B9C3A8 != -1) {
    swift_once();
  }
  uint64_t v26 = __swift_project_value_buffer(v6, (uint64_t)qword_269BF3138);
  __int16 v51 = v48;
  MEMORY[0x270FA5388](v26);
  uint64_t v50 = (uint64_t)v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25();
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB80);
  unint64_t v28 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v48[0] = v28 + *(void *)(v8 + 72);
  v48[1] = v27;
  uint64_t v29 = swift_allocObject();
  long long v59 = xmmword_251F38650;
  *(_OWORD *)(v29 + 16) = xmmword_251F38650;
  if (qword_269B9C420 != -1) {
    swift_once();
  }
  uint64_t v30 = __swift_project_value_buffer(v6, (uint64_t)qword_269BA2570);
  ((void (*)(unint64_t, uint64_t, uint64_t))v25)(v29 + v28, v30, v6);
  if (*(void *)(v29 + 16)) {
    uint64_t v49 = sub_251C08E40(v29);
  }
  else {
    uint64_t v49 = MEMORY[0x263F8EE88];
  }
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F1E8);
  uint64_t v31 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B21FFB8) - 8);
  unint64_t v32 = (*(unsigned __int8 *)(*(void *)v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v31 + 80);
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = v59;
  unint64_t v34 = v33 + v32;
  uint64_t v35 = v31[14];
  if (qword_269B9C4A8 != -1) {
    swift_once();
  }
  uint64_t v36 = __swift_project_value_buffer(v6, (uint64_t)qword_269BF3230);
  uint64_t v37 = v60;
  ((void (*)(unint64_t, uint64_t, uint64_t))v60)(v34, v36, v6);
  if (qword_269B9C498 != -1) {
    swift_once();
  }
  uint64_t v38 = type metadata accessor for StaticService();
  uint64_t v39 = __swift_project_value_buffer(v38, (uint64_t)qword_269BF3200);
  sub_251E153D0(v39, v34 + v35, (uint64_t (*)(void))type metadata accessor for StaticService);
  unint64_t v40 = sub_2519F9B94(v33);
  uint64_t v41 = swift_allocObject();
  *(_OWORD *)(v41 + 16) = v59;
  uint64_t v42 = ((uint64_t (*)(unint64_t, uint64_t, uint64_t))v37)(v41 + v28, v36, v6);
  MEMORY[0x270FA5388](v42);
  uint64_t v44 = (char *)v48 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  ((void (*)(char *, uint64_t, uint64_t))v37)(v44, v36, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v44, 0, 1, v6);
  __int16 v64 = -260;
  uint64_t v45 = type metadata accessor for StaticSoftwareUpdate(0);
  uint64_t v46 = (uint64_t)v58;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v58, 1, 1, v45);
  char v63 = 0;
  return sub_251E01110(v55, 0xD000000000000016, 0x8000000251F71F90, (uint64_t)v61, v62, (uint64_t)v52, 0, 1, v57, 0, v50, v49, 0x5220656C706D6153, 0xEB000000006D6F6FLL, 0, 0, 1, 1, 0,
           v40,
           v41,
           (uint64_t)v44,
           &v64,
           0,
           0,
           0,
           0,
           0,
           0,
           v46,
           1,
           &v63,
           0);
}

uint64_t static StaticAccessory.sample.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_251E11B24(&qword_269B9C4E8, (uint64_t)qword_269BA3B38, a1);
}

uint64_t sub_251E11B24@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for StaticAccessory(0);
  uint64_t v6 = __swift_project_value_buffer(v5, a2);
  return sub_251E153D0(v6, a3, type metadata accessor for StaticAccessory);
}

uint64_t StaticAccessory.debugDescription.getter()
{
  uint64_t v1 = sub_251F36D30();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((void *)&v23 + 1) = type metadata accessor for StaticAccessory(0);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v22);
  sub_251E153D0(v0, (uint64_t)boxed_opaque_existential_1, type metadata accessor for StaticAccessory);
  sub_251F36D10();
  uint64_t v6 = sub_251F36D20();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  swift_retain();
  sub_251F36620();
  v15[1] = v6;
  swift_release();
  sub_251F36720();
  if (*((void *)&v24 + 1))
  {
    uint64_t v7 = (void *)MEMORY[0x263F8EE78];
    do
    {
      long long v20 = v22;
      v21[0] = v23;
      v21[1] = v24;
      uint64_t v18 = 0;
      unint64_t v19 = 0xE000000000000000;
      long long v16 = v22;
      sub_251A0D51C((uint64_t)v21, (uint64_t)v17);
      swift_bridgeObjectRetain();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v17);
      sub_251F35800();
      swift_bridgeObjectRelease();
      sub_251F35800();
      sub_251F36640();
      uint64_t v8 = v18;
      unint64_t v9 = v19;
      sub_251A1B064((uint64_t)&v20, &qword_269BA35C8);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v7 = sub_251F0E8B8(0, v7[2] + 1, 1, v7);
      }
      unint64_t v11 = v7[2];
      unint64_t v10 = v7[3];
      if (v11 >= v10 >> 1) {
        uint64_t v7 = sub_251F0E8B8((void *)(v10 > 1), v11 + 1, 1, v7);
      }
      v7[2] = v11 + 1;
      uint64_t v12 = &v7[2 * v11];
      v12[4] = v8;
      v12[5] = v9;
      sub_251F36720();
    }
    while (*((void *)&v24 + 1));
  }
  else
  {
    uint64_t v7 = (void *)MEMORY[0x263F8EE78];
  }
  swift_release();
  swift_release();
  *(void *)&long long v22 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EAB0);
  sub_251A1E590((unint64_t *)&qword_26B21EAB8, &qword_26B21EAB0);
  uint64_t v13 = sub_251F35620();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_251E11ED8(uint64_t isStackAllocationSafe)
{
  uint64_t v2 = isStackAllocationSafe;
  v9[1] = *MEMORY[0x263EF8340];
  char v3 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v4 = (unint64_t)((1 << v3) + 63) >> 6;
  size_t v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    bzero((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    uint64_t v6 = sub_251E1203C((void *)((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0)), v4, v2);
    swift_release();
    if (v1) {
      swift_willThrow();
    }
  }
  else
  {
    uint64_t v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    uint64_t v6 = sub_251E1203C((unint64_t *)v7, v4, v2);
    swift_release();
    MEMORY[0x2533AC760](v7, -1, -1);
  }
  return v6;
}

uint64_t sub_251E1203C(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v24 = a2;
  uint64_t v25 = a1;
  uint64_t v5 = type metadata accessor for StaticAccessory(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t result = MEMORY[0x270FA5388](v5 - 8);
  unint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = 0;
  int64_t v10 = 0;
  uint64_t v11 = a3 + 56;
  uint64_t v12 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(a3 + 56);
  int64_t v27 = (unint64_t)(v12 + 63) >> 6;
  while (v14)
  {
    unint64_t v15 = __clz(__rbit64(v14));
    v14 &= v14 - 1;
    unint64_t v16 = v15 | (v10 << 6);
LABEL_17:
    sub_251E153D0(*(void *)(a3 + 48) + *(void *)(v6 + 72) * v16, (uint64_t)v9, type metadata accessor for StaticAccessory);
    BOOL v20 = sub_251E08B28((uint64_t)v9);
    uint64_t result = sub_251E154A0((uint64_t)v9, type metadata accessor for StaticAccessory);
    if (v3) {
      return result;
    }
    if (v20)
    {
      *(unint64_t *)((char *)v25 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      BOOL v17 = __OFADD__(v26++, 1);
      if (v17) {
        goto LABEL_30;
      }
    }
  }
  BOOL v17 = __OFADD__(v10++, 1);
  if (v17)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v10 >= v27) {
    goto LABEL_27;
  }
  unint64_t v18 = *(void *)(v11 + 8 * v10);
  if (v18)
  {
LABEL_16:
    unint64_t v14 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v10 << 6);
    goto LABEL_17;
  }
  int64_t v19 = v10 + 1;
  if (v10 + 1 >= v27) {
    goto LABEL_27;
  }
  unint64_t v18 = *(void *)(v11 + 8 * v19);
  if (v18) {
    goto LABEL_15;
  }
  int64_t v19 = v10 + 2;
  if (v10 + 2 >= v27) {
    goto LABEL_27;
  }
  unint64_t v18 = *(void *)(v11 + 8 * v19);
  if (v18) {
    goto LABEL_15;
  }
  int64_t v19 = v10 + 3;
  if (v10 + 3 >= v27)
  {
LABEL_27:
    uint64_t v21 = v24;
    uint64_t v22 = v26;
    swift_retain();
    return sub_251F1BAE0(v25, v21, v22, a3);
  }
  unint64_t v18 = *(void *)(v11 + 8 * v19);
  if (v18)
  {
LABEL_15:
    int64_t v10 = v19;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v10 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v10 >= v27) {
      goto LABEL_27;
    }
    unint64_t v18 = *(void *)(v11 + 8 * v10);
    ++v19;
    if (v18) {
      goto LABEL_16;
    }
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t _s13HomeDataModel15StaticAccessoryV20SpecialMediaCategoryO2eeoiySbAE_AEtFZ_0(_WORD *a1, unsigned __int16 *a2)
{
  unsigned int v2 = (unsigned __int16)*a1;
  unsigned int v3 = *a2;
  if (!(v2 >> 14))
  {
    if (v3 < 0x4000) {
      return (v3 ^ v2) == 0;
    }
    return 0;
  }
  if (v2 >> 14 == 1)
  {
    if ((v3 & 0xC000) == 0x4000 && ((v2 & 1) == 0) != (v3 & 1)) {
      return ((v2 & 0x100) == 0) ^ ((unsigned __int16)(v3 & 0x100) >> 8);
    }
    return 0;
  }
  switch(*a1)
  {
    case 0x8000:
      if (v3 != 0x8000) {
        return 0;
      }
      uint64_t result = 1;
      break;
    case 0x8001:
      if (v3 != 32769) {
        return 0;
      }
      uint64_t result = 1;
      break;
    case 0x8002:
      if (v3 != 32770) {
        return 0;
      }
      uint64_t result = 1;
      break;
    case 0x8003:
      if (v3 != 32771) {
        return 0;
      }
      uint64_t result = 1;
      break;
    default:
      if (v3 != 33024) {
        return 0;
      }
      uint64_t result = 1;
      break;
  }
  return result;
}

uint64_t _s13HomeDataModel15StaticAccessoryV16DeviceIdentifierO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  unint64_t v9 = (uint64_t *)((char *)&v30 - v8);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F0A0);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v14 = &v13[*(int *)(v11 + 56)];
  sub_251E153D0(a1, (uint64_t)v13, type metadata accessor for StaticAccessory.DeviceIdentifier);
  sub_251E153D0(a2, (uint64_t)v14, type metadata accessor for StaticAccessory.DeviceIdentifier);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_251E153D0((uint64_t)v13, (uint64_t)v9, type metadata accessor for StaticAccessory.DeviceIdentifier);
    uint64_t v24 = *v9;
    uint64_t v23 = v9[1];
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      uint64_t v25 = *(void *)v14;
      uint64_t v26 = *((void *)v14 + 1);
      if (v24 == v25 && v23 == v26)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v28 = sub_251F36B10();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v28 & 1) == 0)
        {
          sub_251E154A0((uint64_t)v13, type metadata accessor for StaticAccessory.DeviceIdentifier);
          goto LABEL_8;
        }
      }
      sub_251E154A0((uint64_t)v13, type metadata accessor for StaticAccessory.DeviceIdentifier);
      char v21 = 1;
      return v21 & 1;
    }
    swift_bridgeObjectRelease();
LABEL_7:
    sub_251A1B064((uint64_t)v13, &qword_26B21F0A0);
LABEL_8:
    char v21 = 0;
    return v21 & 1;
  }
  sub_251E153D0((uint64_t)v13, (uint64_t)v7, type metadata accessor for StaticAccessory.DeviceIdentifier);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v16 = sub_251F34DA0();
  uint64_t v17 = v16;
  uint64_t v18 = *(void *)(v16 - 8);
  if (EnumCaseMultiPayload != 1)
  {
    (*(void (**)(char *, uint64_t))(*(void *)(v16 - 8) + 8))(v7, v16);
    goto LABEL_7;
  }
  MEMORY[0x270FA5388](v16);
  BOOL v20 = (char *)&v30 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v14, v17);
  char v21 = sub_251F34D70();
  uint64_t v22 = *(void (**)(char *, uint64_t))(v18 + 8);
  v22(v20, v17);
  v22(v7, v17);
  sub_251E154A0((uint64_t)v13, type metadata accessor for StaticAccessory.DeviceIdentifier);
  return v21 & 1;
}

uint64_t _s13HomeDataModel15StaticAccessoryV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v146 = type metadata accessor for StaticSoftwareUpdate(0);
  uint64_t v142 = *(void *)(v146 - 8);
  MEMORY[0x270FA5388](v146);
  uint64_t v144 = (uint64_t)v133 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F128);
  MEMORY[0x270FA5388](v5);
  uint64_t v147 = (uint64_t)v133 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v145 = (uint64_t)v133 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v141 = (uint64_t)v133 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v143 = (uint64_t)v133 - v12;
  uint64_t v13 = type metadata accessor for StaticDeviceMetadata();
  int v148 = *(void **)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  unint64_t v15 = (char *)v133 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F118);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)v133 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v22 = (char *)v133 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v20);
  uint64_t v25 = (char *)v133 - v24;
  MEMORY[0x270FA5388](v23);
  int64_t v27 = (char *)v133 - v26;
  if ((sub_251F34D70() & 1) == 0) {
    return 0;
  }
  uint64_t v140 = v5;
  char v28 = (int *)type metadata accessor for StaticAccessory(0);
  uint64_t v29 = v28[5];
  uint64_t v30 = *(void *)(a1 + v29);
  uint64_t v31 = *(void *)(a1 + v29 + 8);
  unint64_t v32 = (void *)(a2 + v29);
  if (v30 != *v32 || v31 != v32[1])
  {
    char v33 = sub_251F36B10();
    uint64_t result = 0;
    if ((v33 & 1) == 0) {
      return result;
    }
  }
  if ((_s13HomeDataModel15StaticAccessoryV16DeviceIdentifierO2eeoiySbAE_AEtFZ_0(a1 + v28[6], a2 + v28[6]) & 1) == 0) {
    return 0;
  }
  uint64_t v35 = v28[7];
  uint64_t v137 = a1;
  sub_251A1B128(a1 + v35, (uint64_t)v27, &qword_26B21F110);
  uint64_t v138 = v28;
  uint64_t v139 = a2;
  sub_251A1B128(a2 + v28[7], (uint64_t)v25, &qword_26B21F110);
  uint64_t v36 = (uint64_t)&v18[*(int *)(v16 + 48)];
  sub_251A1B128((uint64_t)v27, (uint64_t)v18, &qword_26B21F110);
  sub_251A1B128((uint64_t)v25, v36, &qword_26B21F110);
  uint64_t v37 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v148[6];
  if (v37((uint64_t)v18, 1, v13) == 1)
  {
    sub_251A1B064((uint64_t)v25, &qword_26B21F110);
    sub_251A1B064((uint64_t)v27, &qword_26B21F110);
    if (v37(v36, 1, v13) == 1)
    {
      sub_251A1B064((uint64_t)v18, &qword_26B21F110);
      goto LABEL_14;
    }
LABEL_11:
    uint64_t v38 = &qword_26B21F118;
    uint64_t v39 = (uint64_t)v18;
LABEL_12:
    sub_251A1B064(v39, v38);
    return 0;
  }
  sub_251A1B128((uint64_t)v18, (uint64_t)v22, &qword_26B21F110);
  if (v37(v36, 1, v13) == 1)
  {
    sub_251A1B064((uint64_t)v25, &qword_26B21F110);
    sub_251A1B064((uint64_t)v27, &qword_26B21F110);
    sub_251E154A0((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for StaticDeviceMetadata);
    goto LABEL_11;
  }
  sub_251E15438(v36, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for StaticDeviceMetadata);
  char v40 = _s13HomeDataModel20StaticDeviceMetadataV2eeoiySbAC_ACtFZ_0((uint64_t)v22, (uint64_t)v15);
  sub_251E154A0((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for StaticDeviceMetadata);
  sub_251A1B064((uint64_t)v25, &qword_26B21F110);
  sub_251A1B064((uint64_t)v27, &qword_26B21F110);
  sub_251E154A0((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for StaticDeviceMetadata);
  sub_251A1B064((uint64_t)v18, &qword_26B21F110);
  if ((v40 & 1) == 0) {
    return 0;
  }
LABEL_14:
  uint64_t v41 = v138;
  uint64_t v42 = v137 + v138[8];
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  int v148 = v133;
  uint64_t v44 = *(void *)(*(void *)(v43 - 8) + 64);
  MEMORY[0x270FA5388](v43 - 8);
  unint64_t v45 = (v44 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v46 = (char *)v133 - v45;
  sub_251A1B128(v42, (uint64_t)v133 - v45, &qword_26B21EC20);
  uint64_t v136 = v133;
  uint64_t v47 = MEMORY[0x270FA5388](v139 + v41[8]);
  char v48 = (char *)v133 - v45;
  sub_251A1B128(v47, (uint64_t)v133 - v45, &qword_26B21EC20);
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EFF8);
  int v135 = v133;
  uint64_t v50 = MEMORY[0x270FA5388](v49 - 8);
  uint64_t v52 = (char *)v133 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = (uint64_t)&v52[*(int *)(v50 + 56)];
  sub_251A1B128((uint64_t)v133 - v45, (uint64_t)v52, &qword_26B21EC20);
  sub_251A1B128((uint64_t)v133 - v45, v53, &qword_26B21EC20);
  uint64_t v54 = sub_251F34D20();
  uint64_t v55 = *(void *)(v54 - 8);
  uint64_t v56 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v55 + 48);
  uint64_t v57 = v56(v52, 1, v54);
  if (v57 == 1)
  {
    sub_251A1B064((uint64_t)v133 - v45, &qword_26B21EC20);
    sub_251A1B064((uint64_t)v133 - v45, &qword_26B21EC20);
    if (v56((char *)v53, 1, v54) == 1)
    {
      sub_251A1B064((uint64_t)v52, &qword_26B21EC20);
      uint64_t v58 = v139;
      goto LABEL_24;
    }
LABEL_19:
    char v61 = &qword_26B21EFF8;
LABEL_20:
    sub_251A1B064((uint64_t)v52, v61);
    return 0;
  }
  uint64_t v134 = v133;
  MEMORY[0x270FA5388](v57);
  long long v59 = (char *)v133 - v45;
  sub_251A1B128((uint64_t)v52, (uint64_t)v133 - v45, &qword_26B21EC20);
  uint64_t v60 = v56((char *)v53, 1, v54);
  if (v60 == 1)
  {
    sub_251A1B064((uint64_t)v48, &qword_26B21EC20);
    sub_251A1B064((uint64_t)v46, &qword_26B21EC20);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v59, v54);
    goto LABEL_19;
  }
  MEMORY[0x270FA5388](v60);
  char v63 = (char *)v133 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v55 + 32))(v63, v53, v54);
  sub_251D480E0((unint64_t *)&qword_269B9F5C0, MEMORY[0x270FA9188]);
  char v64 = sub_251F35650();
  uint64_t v65 = *(void (**)(char *, uint64_t))(v55 + 8);
  v65(v63, v54);
  sub_251A1B064((uint64_t)v48, &qword_26B21EC20);
  sub_251A1B064((uint64_t)v46, &qword_26B21EC20);
  v65(v59, v54);
  uint64_t v58 = v139;
  sub_251A1B064((uint64_t)v52, &qword_26B21EC20);
  if ((v64 & 1) == 0) {
    return 0;
  }
LABEL_24:
  uint64_t v66 = v137;
  uint64_t v67 = v138[9];
  unint64_t v68 = (void *)(v137 + v67);
  char v69 = *(unsigned char *)(v137 + v67 + 8);
  uint64_t v70 = (void *)(v58 + v67);
  int v71 = *(unsigned __int8 *)(v58 + v67 + 8);
  if (v69)
  {
    if (!v71) {
      return 0;
    }
  }
  else
  {
    if (*v68 != *v70) {
      LOBYTE(v71) = 1;
    }
    if (v71) {
      return 0;
    }
  }
  if (*(unsigned __int8 *)(v137 + v138[10]) != *(unsigned __int8 *)(v58 + v138[10])) {
    return 0;
  }
  uint64_t v72 = v138;
  if ((sub_251F34D70() & 1) == 0 || (sub_251B04848(*(void *)(v66 + v72[12]), *(void *)(v58 + v72[12])) & 1) == 0) {
    return 0;
  }
  uint64_t v73 = v72[13];
  uint64_t v74 = (void *)(v66 + v73);
  uint64_t v75 = *(void *)(v66 + v73 + 8);
  uint64_t v76 = (void *)(v58 + v73);
  uint64_t v77 = v76[1];
  uint64_t v78 = v72;
  if (v75)
  {
    if (!v77) {
      return 0;
    }
    if (*v74 != *v76 || v75 != v77)
    {
      char v79 = sub_251F36B10();
      uint64_t v78 = v138;
      char v80 = v79;
      uint64_t result = 0;
      if ((v80 & 1) == 0) {
        return result;
      }
    }
  }
  else if (v77)
  {
    return 0;
  }
  if (*(unsigned __int8 *)(v66 + v78[14]) != *(unsigned __int8 *)(v58 + v78[14])
    || *(unsigned __int8 *)(v66 + v78[15]) != *(unsigned __int8 *)(v58 + v78[15])
    || *(unsigned __int8 *)(v66 + v78[16]) != *(unsigned __int8 *)(v58 + v78[16])
    || *(unsigned __int8 *)(v66 + v78[17]) != *(unsigned __int8 *)(v58 + v78[17])
    || *(unsigned __int8 *)(v66 + v78[18]) != *(unsigned __int8 *)(v58 + v78[18])
    || (sub_251AF99A8(*(void *)(v137 + v138[19]), *(void *)(v139 + v138[19])) & 1) == 0
    || (sub_251AB6424(*(void *)(v137 + v138[20]), *(void *)(v139 + v138[20])) & 1) == 0)
  {
    return 0;
  }
  uint64_t v81 = v138;
  uint64_t v82 = v137 + v138[21];
  uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  int v148 = v133;
  uint64_t v84 = *(void *)(*(void *)(v83 - 8) + 64);
  MEMORY[0x270FA5388](v83 - 8);
  unint64_t v85 = (v84 + 15) & 0xFFFFFFFFFFFFFFF0;
  sub_251A1B128(v82, (uint64_t)v133 - v85, &qword_26B21FF90);
  uint64_t v136 = v133;
  uint64_t v86 = MEMORY[0x270FA5388](v139 + v81[21]);
  uint64_t v87 = (char *)v133 - v85;
  sub_251A1B128(v86, (uint64_t)v133 - v85, &qword_26B21FF90);
  uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E6B8);
  int v135 = v133;
  uint64_t v89 = MEMORY[0x270FA5388](v88 - 8);
  uint64_t v52 = (char *)v133 - ((v90 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = (uint64_t)&v52[*(int *)(v89 + 56)];
  uint64_t v134 = (void *)((char *)v133 - v85);
  sub_251A1B128((uint64_t)v133 - v85, (uint64_t)v52, &qword_26B21FF90);
  sub_251A1B128((uint64_t)v133 - v85, v91, &qword_26B21FF90);
  uint64_t v92 = sub_251F34DA0();
  uint64_t v93 = *(void *)(v92 - 8);
  uint64_t v94 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v93 + 48);
  uint64_t v95 = v94(v52, 1, v92);
  if (v95 != 1)
  {
    v133[1] = v133;
    MEMORY[0x270FA5388](v95);
    uint64_t v96 = (char *)v133 - v85;
    sub_251A1B128((uint64_t)v52, (uint64_t)v133 - v85, &qword_26B21FF90);
    uint64_t v97 = v94((char *)v91, 1, v92);
    if (v97 != 1)
    {
      MEMORY[0x270FA5388](v97);
      uint64_t v99 = (char *)v133 - ((v98 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, uint64_t, uint64_t))(v93 + 32))(v99, v91, v92);
      sub_251D480E0((unint64_t *)&qword_26B21F2B8, MEMORY[0x270FA95E8]);
      char v100 = sub_251F35650();
      uint64_t v101 = *(void (**)(char *, uint64_t))(v93 + 8);
      v101(v99, v92);
      sub_251A1B064((uint64_t)v87, &qword_26B21FF90);
      sub_251A1B064((uint64_t)v134, &qword_26B21FF90);
      v101(v96, v92);
      sub_251A1B064((uint64_t)v52, &qword_26B21FF90);
      if ((v100 & 1) == 0) {
        return 0;
      }
      goto LABEL_54;
    }
    sub_251A1B064((uint64_t)v87, &qword_26B21FF90);
    sub_251A1B064((uint64_t)v134, &qword_26B21FF90);
    (*(void (**)(char *, uint64_t))(v93 + 8))(v96, v92);
    goto LABEL_52;
  }
  sub_251A1B064((uint64_t)v133 - v85, &qword_26B21FF90);
  sub_251A1B064((uint64_t)v134, &qword_26B21FF90);
  if (v94((char *)v91, 1, v92) != 1)
  {
LABEL_52:
    char v61 = &qword_26B21E6B8;
    goto LABEL_20;
  }
  sub_251A1B064((uint64_t)v52, &qword_26B21FF90);
LABEL_54:
  uint64_t v102 = v138[22];
  int v103 = *(unsigned __int16 *)(v137 + v102);
  int v104 = *(unsigned __int16 *)(v139 + v102);
  if ((~v103 & 0xFEFC) != 0)
  {
    __int16 v150 = v103;
    if ((~v104 & 0xFEFC) == 0) {
      return 0;
    }
    unsigned __int16 v149 = v104;
    if ((_s13HomeDataModel15StaticAccessoryV20SpecialMediaCategoryO2eeoiySbAE_AEtFZ_0(&v150, &v149) & 1) == 0) {
      return 0;
    }
  }
  else if ((~v104 & 0xFEFC) != 0)
  {
    return 0;
  }
  uint64_t v105 = v138[23];
  uint64_t v106 = (void *)(v137 + v105);
  uint64_t v107 = *(void *)(v137 + v105 + 8);
  uint64_t v108 = (void *)(v139 + v105);
  uint64_t v109 = v108[1];
  if (!v107)
  {
    uint64_t v111 = v138;
    uint64_t v112 = v139;
    uint64_t v113 = v137;
    if (v109) {
      return 0;
    }
LABEL_67:
    uint64_t v116 = v111[24];
    uint64_t v117 = *(void *)(v113 + v116);
    uint64_t v118 = *(void *)(v112 + v116);
    if (v117)
    {
      if (!v118) {
        return 0;
      }
      swift_bridgeObjectRetain();
      uint64_t v119 = swift_bridgeObjectRetain();
      char v120 = sub_251AB6424(v119, v118);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v120 & 1) == 0) {
        return 0;
      }
    }
    else if (v118)
    {
      return 0;
    }
    if (*(unsigned __int8 *)(v137 + v138[25]) != *(unsigned __int8 *)(v139 + v138[25])
      || *(unsigned __int8 *)(v137 + v138[26]) != *(unsigned __int8 *)(v139 + v138[26])
      || *(unsigned __int8 *)(v137 + v138[27]) != *(unsigned __int8 *)(v139 + v138[27]))
    {
      return 0;
    }
    uint64_t v121 = v138;
    uint64_t v122 = v143;
    sub_251A1B128(v137 + v138[28], v143, &qword_26B21F120);
    uint64_t v123 = v141;
    sub_251A1B128(v139 + v121[28], v141, &qword_26B21F120);
    uint64_t v124 = v147;
    uint64_t v125 = v147 + *(int *)(v140 + 48);
    sub_251A1B128(v122, v147, &qword_26B21F120);
    sub_251A1B128(v123, v125, &qword_26B21F120);
    uint64_t v126 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v142 + 48);
    if (v126(v124, 1, v146) == 1)
    {
      sub_251A1B064(v141, &qword_26B21F120);
      sub_251A1B064(v143, &qword_26B21F120);
      if (v126(v125, 1, v146) == 1)
      {
        sub_251A1B064(v147, &qword_26B21F120);
LABEL_83:
        if (*(unsigned __int8 *)(v137 + v138[29]) == *(unsigned __int8 *)(v139 + v138[29])
          && *(unsigned __int8 *)(v137 + v138[30]) == *(unsigned __int8 *)(v139 + v138[30]))
        {
          uint64_t v130 = v138[31];
          uint64_t v131 = *(void *)(v137 + v130);
          uint64_t v132 = *(void *)(v139 + v130);
          if (v131)
          {
            if (v132 && (sub_251B05984(v131, v132) & 1) != 0) {
              return 1;
            }
          }
          else if (!v132)
          {
            return 1;
          }
        }
        return 0;
      }
      goto LABEL_80;
    }
    sub_251A1B128(v147, v145, &qword_26B21F120);
    if (v126(v125, 1, v146) == 1)
    {
      sub_251A1B064(v141, &qword_26B21F120);
      sub_251A1B064(v143, &qword_26B21F120);
      sub_251E154A0(v145, type metadata accessor for StaticSoftwareUpdate);
LABEL_80:
      uint64_t v38 = &qword_26B21F128;
      uint64_t v39 = v147;
      goto LABEL_12;
    }
    sub_251E15438(v125, v144, type metadata accessor for StaticSoftwareUpdate);
    if ((sub_251F34D70() & 1) == 0)
    {
      sub_251E154A0(v144, type metadata accessor for StaticSoftwareUpdate);
      sub_251A1B064(v141, &qword_26B21F120);
      sub_251A1B064(v143, &qword_26B21F120);
      sub_251E154A0(v145, type metadata accessor for StaticSoftwareUpdate);
      uint64_t v39 = v147;
      uint64_t v38 = &qword_26B21F120;
      goto LABEL_12;
    }
    uint64_t v127 = v145;
    uint64_t v128 = v144;
    char updated = _s13HomeDataModel20StaticSoftwareUpdateV4KindO2eeoiySbAE_AEtFZ_0(v145 + *(int *)(v146 + 20), v144 + *(int *)(v146 + 20));
    sub_251E154A0(v128, type metadata accessor for StaticSoftwareUpdate);
    sub_251A1B064(v141, &qword_26B21F120);
    sub_251A1B064(v143, &qword_26B21F120);
    sub_251E154A0(v127, type metadata accessor for StaticSoftwareUpdate);
    sub_251A1B064(v147, &qword_26B21F120);
    if (updated) {
      goto LABEL_83;
    }
    return 0;
  }
  if (!v109) {
    return 0;
  }
  BOOL v110 = *v106 == *v108;
  uint64_t v111 = v138;
  uint64_t v112 = v139;
  uint64_t v113 = v137;
  if (v110 && v107 == v109) {
    goto LABEL_67;
  }
  char v114 = sub_251F36B10();
  uint64_t v111 = v138;
  char v115 = v114;
  uint64_t result = 0;
  if (v115) {
    goto LABEL_67;
  }
  return result;
}

unint64_t sub_251E13984(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for StaticService();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v51 = (uint64_t)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v39 = (uint64_t)&v36 - v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v13 - 8);
  unint64_t v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(a1 + 16);
  uint64_t v36 = a1;
  uint64_t v37 = v2;
  if (v16)
  {
    uint64_t v17 = sub_251F34DA0();
    uint64_t v18 = *(void *)(v17 - 8);
    uint64_t v19 = v18;
    uint64_t v20 = a1 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
    uint64_t v45 = *(void *)(v18 + 72);
    uint64_t v49 = (uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48);
    uint64_t v50 = (void (**)(char *, void, uint64_t, uint64_t))(v18 + 56);
    uint64_t v44 = v18 + 32;
    uint64_t v22 = v18 + 16;
    uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
    uint64_t v47 = v22;
    char v48 = v21;
    uint64_t v46 = v19;
    uint64_t v42 = (void (**)(char *, uint64_t))(v19 + 8);
    uint64_t v43 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v40 = v9;
    uint64_t v41 = (unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
    swift_bridgeObjectRetain();
    unint64_t v52 = MEMORY[0x263F8EE78];
    uint64_t v38 = v8;
    while (1)
    {
      v48(v15, v20, v17);
      (*v50)(v15, 0, 1, v17);
      uint64_t v23 = (*v49)(v15, 1, v17);
      if (v23 == 1) {
        break;
      }
      MEMORY[0x270FA5388](v23);
      uint64_t v25 = (char *)&v36 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v25, v15, v17);
      if (*(void *)(a2 + 16) && (unint64_t v27 = sub_2519FE584((uint64_t)v25), (v28 & 1) != 0))
      {
        sub_251E153D0(*(void *)(a2 + 56) + *(void *)(v40 + 72) * v27, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticService);
        uint64_t v29 = 0;
      }
      else
      {
        uint64_t v29 = 1;
      }
      (*v43)(v7, v29, 1, v8);
      (*v42)(v25, v17);
      if ((*v41)(v7, 1, v8) == 1)
      {
        sub_251A1B064((uint64_t)v7, qword_26B21EE20);
      }
      else
      {
        uint64_t v30 = v39;
        sub_251E15438((uint64_t)v7, v39, (uint64_t (*)(void))type metadata accessor for StaticService);
        sub_251E15438(v30, v51, (uint64_t (*)(void))type metadata accessor for StaticService);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v52 = sub_251F0FB28(0, *(void *)(v52 + 16) + 1, 1, v52);
        }
        unint64_t v32 = *(void *)(v52 + 16);
        unint64_t v31 = *(void *)(v52 + 24);
        if (v32 >= v31 >> 1) {
          unint64_t v52 = sub_251F0FB28(v31 > 1, v32 + 1, 1, v52);
        }
        unint64_t v33 = v52;
        *(void *)(v52 + 16) = v32 + 1;
        sub_251E15438(v51, v33+ ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80))+ *(void *)(v40 + 72) * v32, (uint64_t (*)(void))type metadata accessor for StaticService);
        uint64_t v8 = v38;
      }
      v20 += v45;
      if (!--v16) {
        goto LABEL_17;
      }
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    unint64_t v52 = MEMORY[0x263F8EE78];
LABEL_17:
    uint64_t v34 = sub_251F34DA0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v15, 1, 1, v34);
  }
  swift_bridgeObjectRelease();
  return v52;
}

uint64_t sub_251E13EA8(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  char v48 = a3;
  uint64_t v7 = type metadata accessor for StaticService();
  uint64_t v44 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v39 = (uint64_t)v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v38 - v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FFB8);
  uint64_t result = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)(a1 + 16);
  if (!v17) {
    return result;
  }
  v38[1] = a1;
  v38[2] = v4;
  uint64_t v43 = &v16[*(int *)(result + 48)];
  uint64_t v18 = a1 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  uint64_t v40 = *(void *)(v14 + 72);
  swift_bridgeObjectRetain();
  uint64_t v41 = v16;
  uint64_t v42 = v11;
  while (1)
  {
    uint64_t v46 = v18;
    uint64_t v47 = v17;
    sub_251A1B128(v18, (uint64_t)v16, &qword_26B21FFB8);
    uint64_t v20 = sub_251F34DA0();
    uint64_t v45 = v38;
    uint64_t v21 = *(void *)(v20 - 8);
    MEMORY[0x270FA5388](v20);
    uint64_t v23 = (char *)v38 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
    v24(v23, v16, v20);
    sub_251E15438((uint64_t)v43, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t v25 = *v48;
    unint64_t v27 = sub_2519FE584((uint64_t)v23);
    uint64_t v28 = *(void *)(v25 + 16);
    BOOL v29 = (v26 & 1) == 0;
    uint64_t v30 = v28 + v29;
    if (__OFADD__(v28, v29)) {
      break;
    }
    char v31 = v26;
    if (*(void *)(v25 + 24) >= v30)
    {
      if (a2)
      {
        if (v26) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_251A12304();
        if (v31) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_251A01DD0(v30, a2 & 1);
      unint64_t v32 = sub_2519FE584((uint64_t)v23);
      if ((v31 & 1) != (v33 & 1)) {
        goto LABEL_20;
      }
      unint64_t v27 = v32;
      if (v31)
      {
LABEL_3:
        uint64_t v11 = v42;
        uint64_t v19 = v39;
        sub_251E15438((uint64_t)v42, v39, (uint64_t (*)(void))type metadata accessor for StaticService);
        (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
        sub_251E1CD90(v19, *(void *)(*v48 + 56) + *(void *)(v44 + 72) * v27, (uint64_t (*)(void))type metadata accessor for StaticService);
        goto LABEL_4;
      }
    }
    uint64_t v34 = (void *)*v48;
    *(void *)(*v48 + 8 * (v27 >> 6) + 64) |= 1 << v27;
    v24((char *)(v34[6] + *(void *)(v21 + 72) * v27), v23, v20);
    uint64_t v11 = v42;
    sub_251E15438((uint64_t)v42, v34[7] + *(void *)(v44 + 72) * v27, (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t v35 = v34[2];
    BOOL v36 = __OFADD__(v35, 1);
    uint64_t v37 = v35 + 1;
    if (v36) {
      goto LABEL_19;
    }
    v34[2] = v37;
LABEL_4:
    uint64_t v16 = v41;
    uint64_t v18 = v46 + v40;
    a2 = 1;
    uint64_t v17 = v47 - 1;
    if (v47 == 1) {
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  uint64_t result = sub_251F36BA0();
  __break(1u);
  return result;
}

uint64_t sub_251E142E4(unint64_t a1, uint64_t a2)
{
  uint64_t v17 = MEMORY[0x263F8EE78];
  if (a1 >> 62) {
    goto LABEL_19;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
    while (1)
    {
      unint64_t v4 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        id v5 = (id)MEMORY[0x2533AB3A0](v4, a1);
LABEL_9:
        uint64_t v6 = v5;
        unint64_t v7 = v4 + 1;
        if (__OFADD__(v4, 1)) {
          goto LABEL_18;
        }
        id v8 = objc_msgSend(v5, sel_serviceType);
        uint64_t v9 = sub_251F356F0();
        uint64_t v11 = v10;

        v12._uint64_t countAndFlagsBits = v9;
        v12._object = v11;
        ServiceKind.init(rawValue:)(v12);
        if (v16 == 53) {
          uint64_t v13 = 0;
        }
        else {
          uint64_t v13 = v16;
        }
        if (sub_251DB3C0C(v13, a2))
        {
          sub_251F364F0();
          sub_251F36530();
          sub_251F36540();
          sub_251F36500();
        }
        else
        {
        }
        ++v4;
        if (v7 == v3) {
          return v17;
        }
      }
      if (v4 < *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        break;
      }
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      uint64_t v3 = sub_251F366C0();
      if (!v3) {
        return MEMORY[0x263F8EE78];
      }
    }
    id v5 = *(id *)(a1 + 8 * v4 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x263F8EE78];
}

uint64_t sub_251E14478(uint64_t a1)
{
  uint64_t v38 = type metadata accessor for StaticService();
  uint64_t v3 = MEMORY[0x270FA5388](v38);
  uint64_t v37 = (uint64_t)v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v41 = (uint64_t)v35 - v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v35 - v8;
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v46 = MEMORY[0x263F8EE78];
  uint64_t v40 = *(void *)(a1 + 16);
  if (v40)
  {
    uint64_t v11 = 0;
    uint64_t v12 = *(unsigned __int8 *)(v7 + 80);
    uint64_t v42 = *(void *)(v7 + 72);
    uint64_t v43 = (char *)v35 - v8;
    v35[1] = v1;
    uint64_t v36 = (v12 + 32) & ~v12;
    uint64_t v39 = a1 + v36;
    while (1)
    {
      sub_251E153D0(v39 + v42 * v11, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticService);
      if (qword_269B9C488 != -1) {
        swift_once();
      }
      uint64_t v14 = qword_269BF31F0;
      if (!*(void *)(qword_269BF31F0 + 16)) {
        goto LABEL_3;
      }
      char v15 = v43[*(int *)(v38 + 88)];
      sub_251F36CA0();
      char v44 = v15;
      ServiceKind.rawValue.getter();
      sub_251F357B0();
      swift_bridgeObjectRelease();
      uint64_t v16 = sub_251F36D00();
      uint64_t v17 = -1 << *(unsigned char *)(v14 + 32);
      unint64_t v18 = v16 & ~v17;
      if ((*(void *)(v14 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18))
      {
        uint64_t v19 = ~v17;
        while (1)
        {
          char v45 = *(unsigned char *)(*(void *)(v14 + 48) + v18);
          char v44 = v15;
          unint64_t v20 = ServiceKind.rawValue.getter();
          uint64_t v22 = v21;
          if (v20 == ServiceKind.rawValue.getter() && v22 == v23) {
            break;
          }
          char v25 = sub_251F36B10();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v25) {
            goto LABEL_19;
          }
          unint64_t v18 = (v18 + 1) & v19;
          if (((*(void *)(v14 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
            goto LABEL_3;
          }
        }
        swift_bridgeObjectRelease_n();
LABEL_19:
        uint64_t v9 = v43;
        uint64_t v26 = v41;
        sub_251E153D0((uint64_t)v43, v41, (uint64_t (*)(void))type metadata accessor for StaticService);
        uint64_t v27 = v26 + *(int *)(v38 + 100);
        uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
        MEMORY[0x270FA5388](v28 - 8);
        uint64_t v30 = (char *)v35 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
        sub_251A1B128(v27, (uint64_t)v30, &qword_26B21FF90);
        sub_251E154A0(v26, (uint64_t (*)(void))type metadata accessor for StaticService);
        uint64_t v31 = sub_251F34DA0();
        LODWORD(v27) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 48))(v30, 1, v31);
        sub_251A1B064((uint64_t)v30, &qword_26B21FF90);
        if (v27 == 1)
        {
          sub_251E15438((uint64_t)v9, v37, (uint64_t (*)(void))type metadata accessor for StaticService);
          uint64_t v32 = v46;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_251A3E3E8(0, *(void *)(v32 + 16) + 1, 1);
            uint64_t v32 = v46;
          }
          unint64_t v34 = *(void *)(v32 + 16);
          unint64_t v33 = *(void *)(v32 + 24);
          if (v34 >= v33 >> 1)
          {
            sub_251A3E3E8(v33 > 1, v34 + 1, 1);
            uint64_t v32 = v46;
          }
          *(void *)(v32 + 16) = v34 + 1;
          sub_251E15438(v37, v32 + v36 + v34 * v42, (uint64_t (*)(void))type metadata accessor for StaticService);
          goto LABEL_5;
        }
      }
      else
      {
LABEL_3:
        uint64_t v9 = v43;
        uint64_t v13 = v41;
        sub_251E153D0((uint64_t)v43, v41, (uint64_t (*)(void))type metadata accessor for StaticService);
        sub_251E154A0(v13, (uint64_t (*)(void))type metadata accessor for StaticService);
      }
      sub_251E154A0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticService);
LABEL_5:
      if (++v11 == v40) {
        return v46;
      }
    }
  }
  return result;
}

uint64_t sub_251E1496C(unint64_t a1, void *a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  LOBYTE(v9) = a3;
  id v27 = a2;
  uint64_t v11 = type metadata accessor for StaticAccessory(0);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62) {
    goto LABEL_17;
  }
  uint64_t v15 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v16 = MEMORY[0x263F8EE78];
    if (!v15) {
      return v16;
    }
    uint64_t v29 = MEMORY[0x263F8EE78];
    uint64_t result = sub_251A3E114(0, v15 & ~(v15 >> 63), 0);
    if (v15 < 0) {
      break;
    }
    uint64_t v23 = v6;
    uint64_t v6 = 0;
    int v25 = v9 & 1;
    uint64_t v16 = v29;
    unint64_t v24 = a1 & 0xC000000000000001;
    unint64_t v26 = a1;
    while (v15 != v6)
    {
      if (v24) {
        id v18 = (id)MEMORY[0x2533AB3A0](v6, a1);
      }
      else {
        id v18 = *(id *)(a1 + 8 * v6 + 32);
      }
      id v19 = v18;
      id v20 = v27;
      id v21 = objc_msgSend(v19, sel_room);
      if (!v21) {
        id v21 = objc_msgSend(v20, sel_roomForEntireHome);
      }
      unsigned __int8 v28 = v25;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_251DFAA18((char *)v19, v20, v21, 2, &v28, a4, a5, (uint64_t)v14);

      uint64_t v29 = v16;
      unint64_t v9 = *(void *)(v16 + 16);
      unint64_t v22 = *(void *)(v16 + 24);
      if (v9 >= v22 >> 1)
      {
        sub_251A3E114(v22 > 1, v9 + 1, 1);
        uint64_t v16 = v29;
      }
      ++v6;
      *(void *)(v16 + 16) = v9 + 1;
      sub_251E15438((uint64_t)v14, v16+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(void *)(v12 + 72) * v9, type metadata accessor for StaticAccessory);
      a1 = v26;
      if (v15 == v6) {
        return v16;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_251F366C0();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_251E14C0C(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  char v48 = a3;
  uint64_t v7 = type metadata accessor for StaticAccessory(0);
  uint64_t v44 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v39 = (uint64_t)v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v38 - v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FFC0);
  uint64_t result = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)(a1 + 16);
  if (!v17) {
    return result;
  }
  v38[1] = a1;
  v38[2] = v4;
  uint64_t v43 = &v16[*(int *)(result + 48)];
  uint64_t v18 = a1 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  uint64_t v40 = *(void *)(v14 + 72);
  swift_bridgeObjectRetain();
  uint64_t v41 = v16;
  uint64_t v42 = v11;
  while (1)
  {
    uint64_t v46 = v18;
    uint64_t v47 = v17;
    sub_251A1B128(v18, (uint64_t)v16, &qword_26B21FFC0);
    uint64_t v20 = sub_251F34DA0();
    char v45 = v38;
    uint64_t v21 = *(void *)(v20 - 8);
    MEMORY[0x270FA5388](v20);
    uint64_t v23 = (char *)v38 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
    unint64_t v24 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
    v24(v23, v16, v20);
    sub_251E15438((uint64_t)v43, (uint64_t)v11, type metadata accessor for StaticAccessory);
    uint64_t v25 = *v48;
    unint64_t v27 = sub_2519FE584((uint64_t)v23);
    uint64_t v28 = *(void *)(v25 + 16);
    BOOL v29 = (v26 & 1) == 0;
    uint64_t v30 = v28 + v29;
    if (__OFADD__(v28, v29)) {
      break;
    }
    char v31 = v26;
    if (*(void *)(v25 + 24) >= v30)
    {
      if (a2)
      {
        if (v26) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_251A123DC();
        if (v31) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_251A01EA8(v30, a2 & 1);
      unint64_t v32 = sub_2519FE584((uint64_t)v23);
      if ((v31 & 1) != (v33 & 1)) {
        goto LABEL_20;
      }
      unint64_t v27 = v32;
      if (v31)
      {
LABEL_3:
        uint64_t v11 = v42;
        uint64_t v19 = v39;
        sub_251E15438((uint64_t)v42, v39, type metadata accessor for StaticAccessory);
        (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
        sub_251E1CD90(v19, *(void *)(*v48 + 56) + *(void *)(v44 + 72) * v27, type metadata accessor for StaticAccessory);
        goto LABEL_4;
      }
    }
    unint64_t v34 = (void *)*v48;
    *(void *)(*v48 + 8 * (v27 >> 6) + 64) |= 1 << v27;
    v24((char *)(v34[6] + *(void *)(v21 + 72) * v27), v23, v20);
    uint64_t v11 = v42;
    sub_251E15438((uint64_t)v42, v34[7] + *(void *)(v44 + 72) * v27, type metadata accessor for StaticAccessory);
    uint64_t v35 = v34[2];
    BOOL v36 = __OFADD__(v35, 1);
    uint64_t v37 = v35 + 1;
    if (v36) {
      goto LABEL_19;
    }
    v34[2] = v37;
LABEL_4:
    uint64_t v16 = v41;
    uint64_t v18 = v46 + v40;
    a2 = 1;
    uint64_t v17 = v47 - 1;
    if (v47 == 1) {
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  uint64_t result = sub_251F36BA0();
  __break(1u);
  return result;
}

uint64_t sub_251E15048(void *a1, char *a2, uint64_t a3, uint64_t a4)
{
  char v7 = *a2;
  id v8 = objc_msgSend(a1, sel_accessories);
  sub_251A1A568(0, (unint64_t *)&qword_26B21EAF8);
  unint64_t v9 = sub_251F35AC0();

  id v10 = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v11 = 0;
  uint64_t v12 = sub_251E1496C(v9, v10, v7, a3, a4);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int64_t v13 = *(void *)(v12 + 16);
  if (v13)
  {
    uint64_t v30 = 0;
    uint64_t v33 = MEMORY[0x263F8EE78];
    sub_251A3E0E4(0, v13, 0);
    uint64_t v14 = v33;
    uint64_t v15 = 0;
    uint64_t v16 = *(void *)(type metadata accessor for StaticAccessory(0) - 8);
    uint64_t v17 = *(unsigned __int8 *)(v16 + 80);
    v29[1] = v12;
    uint64_t v31 = v12 + ((v17 + 32) & ~v17);
    uint64_t v32 = v16;
    do
    {
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FFC0);
      uint64_t v19 = *(void *)(v18 - 8);
      uint64_t v20 = MEMORY[0x270FA5388](v18 - 8);
      uint64_t v22 = (char *)v29 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v23 = (uint64_t)&v22[*(int *)(v20 + 56)];
      sub_251E153D0(v31 + *(void *)(v32 + 72) * v15, v23, type metadata accessor for StaticAccessory);
      uint64_t v24 = sub_251F34DA0();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
      uint64_t v33 = v14;
      unint64_t v26 = *(void *)(v14 + 16);
      unint64_t v25 = *(void *)(v14 + 24);
      if (v26 >= v25 >> 1)
      {
        sub_251A3E0E4(v25 > 1, v26 + 1, 1);
        uint64_t v14 = v33;
      }
      ++v15;
      *(void *)(v14 + 16) = v26 + 1;
      sub_251A4ECF0((uint64_t)v22, v14+ ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80))+ *(void *)(v19 + 72) * v26, &qword_26B21FFC0);
    }
    while (v13 != v15);
    swift_bridgeObjectRelease();
    uint64_t v11 = v30;
    if (*(void *)(v14 + 16)) {
      goto LABEL_7;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = MEMORY[0x263F8EE78];
    if (*(void *)(MEMORY[0x263F8EE78] + 16))
    {
LABEL_7:
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F1C8);
      uint64_t v27 = sub_251F36700();
      goto LABEL_10;
    }
  }
  uint64_t v27 = MEMORY[0x263F8EE80];
LABEL_10:
  uint64_t v33 = v27;
  sub_251E14C0C(v14, 1, &v33);
  swift_bridgeObjectRelease();
  if (!v11) {
    return v33;
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for StaticAccessory.DeviceIdentifier(uint64_t a1)
{
  return sub_251A1C6FC(a1, qword_26B220508);
}

uint64_t type metadata accessor for StaticAccessory(uint64_t a1)
{
  return sub_251A1C6FC(a1, qword_26B2205B8);
}

uint64_t sub_251E153D0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_251E15438(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_251E154A0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_251E15500()
{
  unint64_t result = qword_269BA3BA0;
  if (!qword_269BA3BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3BA0);
  }
  return result;
}

uint64_t sub_251E15554(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_251E1559C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    sub_251D480E0(&qword_26B21E348, MEMORY[0x270FA95E8]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_251E15618(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    sub_251D480E0(&qword_269B9CC80, MEMORY[0x270FA95E8]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_251E1569C()
{
  unint64_t result = qword_269BA3C08;
  if (!qword_269BA3C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3C08);
  }
  return result;
}

unint64_t sub_251E156F0()
{
  unint64_t result = qword_269BA3C10;
  if (!qword_269BA3C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3C10);
  }
  return result;
}

unint64_t sub_251E15744()
{
  unint64_t result = qword_269BA3C18;
  if (!qword_269BA3C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3C18);
  }
  return result;
}

unint64_t sub_251E15798()
{
  unint64_t result = qword_269BA3C20;
  if (!qword_269BA3C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3C20);
  }
  return result;
}

unint64_t sub_251E157EC()
{
  unint64_t result = qword_269BA3C28;
  if (!qword_269BA3C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3C28);
  }
  return result;
}

unint64_t sub_251E15840()
{
  unint64_t result = qword_269BA3C30;
  if (!qword_269BA3C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3C30);
  }
  return result;
}

unint64_t sub_251E15894()
{
  unint64_t result = qword_269BA3C38;
  if (!qword_269BA3C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3C38);
  }
  return result;
}

unint64_t sub_251E158E8()
{
  unint64_t result = qword_269BA3C40;
  if (!qword_269BA3C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3C40);
  }
  return result;
}

unint64_t sub_251E1593C()
{
  unint64_t result = qword_269BA3C48;
  if (!qword_269BA3C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3C48);
  }
  return result;
}

unint64_t sub_251E15990()
{
  unint64_t result = qword_269BA3C90;
  if (!qword_269BA3C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3C90);
  }
  return result;
}

unint64_t sub_251E159E4()
{
  unint64_t result = qword_269BA3CB0;
  if (!qword_269BA3CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3CB0);
  }
  return result;
}

unint64_t sub_251E15A38()
{
  unint64_t result = qword_269BA3CB8;
  if (!qword_269BA3CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3CB8);
  }
  return result;
}

unint64_t sub_251E15A8C()
{
  unint64_t result = qword_269BA3CC0;
  if (!qword_269BA3CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3CC0);
  }
  return result;
}

uint64_t sub_251E15AE0()
{
  return sub_251E15554((unint64_t *)&unk_269BA3CF0, (void (*)(uint64_t))type metadata accessor for StaticAccessory);
}

uint64_t sub_251E15B28()
{
  return sub_251D480E0((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA95E8]);
}

uint64_t sub_251E15B58(void *a1)
{
  a1[1] = sub_251E15554(&qword_269BA3D00, (void (*)(uint64_t))type metadata accessor for StaticAccessory);
  a1[2] = sub_251E15554(&qword_269BA3D08, (void (*)(uint64_t))type metadata accessor for StaticAccessory);
  a1[3] = sub_251E15554(&qword_269B9E170, (void (*)(uint64_t))type metadata accessor for StaticAccessory);
  a1[4] = sub_251E15554(&qword_269B9E028, (void (*)(uint64_t))type metadata accessor for StaticAccessory);
  a1[5] = sub_251E15554(&qword_269BA3D10, (void (*)(uint64_t))type metadata accessor for StaticAccessory);
  uint64_t result = sub_251E15554(&qword_269BA3D18, (void (*)(uint64_t))type metadata accessor for StaticAccessory);
  a1[6] = result;
  return result;
}

uint64_t sub_251E15C7C(void *a1)
{
  a1[1] = sub_251E15554(&qword_269B9E170, (void (*)(uint64_t))type metadata accessor for StaticAccessory);
  a1[2] = sub_251E15554(&qword_269B9E028, (void (*)(uint64_t))type metadata accessor for StaticAccessory);
  a1[3] = sub_251E15554(&qword_269BA3D10, (void (*)(uint64_t))type metadata accessor for StaticAccessory);
  uint64_t result = sub_251E15554(&qword_269BA3D18, (void (*)(uint64_t))type metadata accessor for StaticAccessory);
  a1[4] = result;
  return result;
}

unint64_t sub_251E15D54()
{
  unint64_t result = qword_269BA3D20;
  if (!qword_269BA3D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3D20);
  }
  return result;
}

unint64_t sub_251E15DAC()
{
  unint64_t result = qword_269BA3D28;
  if (!qword_269BA3D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3D28);
  }
  return result;
}

uint64_t sub_251E15E00()
{
  return sub_251E15554(&qword_269BA3D30, (void (*)(uint64_t))type metadata accessor for StaticAccessory.DeviceIdentifier);
}

uint64_t sub_251E15E48()
{
  return sub_251E15554(&qword_269BA3D38, (void (*)(uint64_t))type metadata accessor for StaticAccessory.DeviceIdentifier);
}

void *initializeBufferWithCopyOfBuffer for StaticAccessory(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) == 0)
  {
    uint64_t v7 = sub_251F34DA0();
    uint64_t v126 = *(void *)(v7 - 8);
    id v8 = *(void (**)(void *, void *, uint64_t))(v126 + 16);
    v8(a1, a2, v7);
    uint64_t v9 = a3[5];
    uint64_t v10 = a3[6];
    uint64_t v11 = (void *)((char *)a1 + v9);
    uint64_t v12 = (void *)((char *)a2 + v9);
    uint64_t v13 = v12[1];
    *uint64_t v11 = *v12;
    v11[1] = v13;
    uint64_t v14 = (void *)((char *)a1 + v10);
    uint64_t v15 = (void *)((char *)a2 + v10);
    type metadata accessor for StaticAccessory.DeviceIdentifier(0);
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v8(v14, v15, v7);
    }
    else
    {
      uint64_t v17 = v15[1];
      *uint64_t v14 = *v15;
      v14[1] = v17;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v18 = a3[7];
    uint64_t v19 = (char *)a1 + v18;
    uint64_t v20 = (char *)a2 + v18;
    uint64_t v21 = (int *)type metadata accessor for StaticDeviceMetadata();
    uint64_t v22 = *((void *)v21 - 1);
    uint64_t v128 = v8;
    uint64_t v131 = v7;
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v22 + 48))(v20, 1, v21))
    {
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
      memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      v8(v19, v20, v7);
      uint64_t v24 = v21[5];
      unint64_t v25 = &v19[v24];
      unint64_t v26 = &v20[v24];
      uint64_t v27 = *((void *)v26 + 1);
      *(void *)unint64_t v25 = *(void *)v26;
      *((void *)v25 + 1) = v27;
      uint64_t v28 = v21[6];
      BOOL v29 = &v19[v28];
      uint64_t v30 = &v20[v28];
      uint64_t v31 = *((void *)v30 + 1);
      *(void *)BOOL v29 = *(void *)v30;
      *((void *)v29 + 1) = v31;
      uint64_t v32 = v21[7];
      uint64_t v33 = &v19[v32];
      unint64_t v34 = &v20[v32];
      uint64_t v35 = *((void *)v34 + 1);
      *(void *)uint64_t v33 = *(void *)v34;
      *((void *)v33 + 1) = v35;
      uint64_t v36 = v21[8];
      uint64_t v37 = &v19[v36];
      uint64_t v38 = &v20[v36];
      uint64_t v39 = *((void *)v38 + 1);
      *(void *)uint64_t v37 = *(void *)v38;
      *((void *)v37 + 1) = v39;
      v19[v21[9]] = v20[v21[9]];
      v19[v21[10]] = v20[v21[10]];
      v19[v21[11]] = v20[v21[11]];
      v19[v21[12]] = v20[v21[12]];
      uint64_t v40 = *(void (**)(char *, void, uint64_t, int *))(v22 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v7 = v131;
      swift_bridgeObjectRetain();
      id v8 = v128;
      swift_bridgeObjectRetain();
      v40(v19, 0, 1, v21);
    }
    uint64_t v41 = a3[8];
    uint64_t v42 = (char *)a1 + v41;
    uint64_t v43 = (char *)a2 + v41;
    uint64_t v44 = sub_251F34D20();
    uint64_t v45 = *(void *)(v44 - 8);
    uint64_t v123 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48);
    uint64_t v124 = v44;
    uint64_t v122 = v45;
    if (v123(v43, 1, v44))
    {
      uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
      memcpy(v42, v43, *(void *)(*(void *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v42, v43, v44);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
    }
    uint64_t v47 = a3[9];
    uint64_t v48 = a3[10];
    uint64_t v49 = (char *)a1 + v47;
    uint64_t v50 = (char *)a2 + v47;
    *(void *)uint64_t v49 = *(void *)v50;
    char v51 = *((unsigned char *)a2 + v48);
    v49[8] = v50[8];
    *((unsigned char *)a1 + v48) = v51;
    v8((void *)((char *)a1 + a3[11]), (void *)((char *)a2 + a3[11]), v7);
    uint64_t v52 = a3[13];
    *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
    uint64_t v53 = (void *)((char *)a1 + v52);
    uint64_t v54 = (void *)((char *)a2 + v52);
    uint64_t v55 = v54[1];
    *uint64_t v53 = *v54;
    v53[1] = v55;
    uint64_t v56 = a3[15];
    *((unsigned char *)a1 + a3[14]) = *((unsigned char *)a2 + a3[14]);
    *((unsigned char *)a1 + v56) = *((unsigned char *)a2 + v56);
    uint64_t v57 = a3[17];
    *((unsigned char *)a1 + a3[16]) = *((unsigned char *)a2 + a3[16]);
    *((unsigned char *)a1 + v57) = *((unsigned char *)a2 + v57);
    uint64_t v58 = a3[19];
    *((unsigned char *)a1 + a3[18]) = *((unsigned char *)a2 + a3[18]);
    *(void *)((char *)a1 + v58) = *(void *)((char *)a2 + v58);
    uint64_t v59 = a3[21];
    __dst = (char *)a1 + v59;
    *(void *)((char *)a1 + a3[20]) = *(void *)((char *)a2 + a3[20]);
    uint64_t v60 = (char *)a2 + v59;
    char v61 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v126 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v61(v60, 1, v131))
    {
      uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
      memcpy(__dst, v60, *(void *)(*(void *)(v62 - 8) + 64));
    }
    else
    {
      v128(__dst, v60, v131);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v126 + 56))(__dst, 0, 1, v131);
    }
    uint64_t v63 = a3[23];
    *(_WORD *)((char *)a1 + a3[22]) = *(_WORD *)((char *)a2 + a3[22]);
    char v64 = (void *)((char *)a1 + v63);
    uint64_t v65 = (void *)((char *)a2 + v63);
    uint64_t v66 = v65[1];
    *char v64 = *v65;
    v64[1] = v66;
    uint64_t v67 = a3[25];
    *(void *)((char *)a1 + a3[24]) = *(void *)((char *)a2 + a3[24]);
    *((unsigned char *)a1 + v67) = *((unsigned char *)a2 + v67);
    uint64_t v68 = a3[27];
    *((unsigned char *)a1 + a3[26]) = *((unsigned char *)a2 + a3[26]);
    *((unsigned char *)a1 + v68) = *((unsigned char *)a2 + v68);
    uint64_t v69 = a3[28];
    uint64_t v70 = (char *)a1 + v69;
    int v71 = (char *)a2 + v69;
    uint64_t v72 = type metadata accessor for StaticSoftwareUpdate(0);
    uint64_t v73 = *(void *)(v72 - 8);
    uint64_t v74 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48);
    uint64_t v75 = v72;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v74(v71, 1, v75))
    {
      uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
      memcpy(v70, v71, *(void *)(*(void *)(v76 - 8) + 64));
LABEL_32:
      uint64_t v120 = a3[30];
      *((unsigned char *)a1 + a3[29]) = *((unsigned char *)a2 + a3[29]);
      *((unsigned char *)a1 + v120) = *((unsigned char *)a2 + v120);
      *(void *)((char *)a1 + a3[31]) = *(void *)((char *)a2 + a3[31]);
      swift_bridgeObjectRetain();
      return a1;
    }
    v128(v70, v71, v131);
    uint64_t v127 = v75;
    uint64_t v77 = *(int *)(v75 + 20);
    uint64_t v78 = &v70[v77];
    char v79 = &v71[v77];
    uint64_t v80 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v82 = v70;
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v132 = v70;
      uint64_t v92 = *((void *)v79 + 1);
      *(void *)uint64_t v78 = *(void *)v79;
      *((void *)v78 + 1) = v92;
      char updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      uint64_t v93 = updated[5];
      uint64_t v94 = &v78[v93];
      uint64_t v95 = &v79[v93];
      swift_bridgeObjectRetain();
      if (v123(v95, 1, v124))
      {
        uint64_t v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
        memcpy(v94, v95, *(void *)(*(void *)(v96 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v94, v95, v124);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v122 + 56))(v94, 0, 1, v124);
      }
      uint64_t v102 = updated[6];
      int v103 = &v78[v102];
      int v104 = &v79[v102];
      uint64_t v105 = *((void *)v104 + 1);
      *(void *)int v103 = *(void *)v104;
      *((void *)v103 + 1) = v105;
      uint64_t v106 = updated[7];
      uint64_t v107 = &v78[v106];
      uint64_t v108 = &v79[v106];
      uint64_t v109 = *((void *)v108 + 1);
      *(void *)uint64_t v107 = *(void *)v108;
      *((void *)v107 + 1) = v109;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
      v78[*(int *)(v110 + 48)] = v79[*(int *)(v110 + 48)];
      swift_storeEnumTagMultiPayload();
      uint64_t v82 = v132;
      goto LABEL_31;
    }
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v133 = v70;
      uint64_t v97 = *((void *)v79 + 1);
      *(void *)uint64_t v78 = *(void *)v79;
      *((void *)v78 + 1) = v97;
      uint64_t v130 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      uint64_t v98 = v130[5];
      uint64_t v99 = &v78[v98];
      char v100 = &v79[v98];
      swift_bridgeObjectRetain();
      if (v123(v100, 1, v124))
      {
        uint64_t v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
        memcpy(v99, v100, *(void *)(*(void *)(v101 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v122 + 16))(v99, v100, v124);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v122 + 56))(v99, 0, 1, v124);
      }
      uint64_t v82 = v133;
      uint64_t v111 = v130[6];
      uint64_t v112 = &v78[v111];
      uint64_t v113 = &v79[v111];
      uint64_t v114 = *((void *)v113 + 1);
      *(void *)uint64_t v112 = *(void *)v113;
      *((void *)v112 + 1) = v114;
      uint64_t v115 = v130[7];
      uint64_t v116 = &v78[v115];
      uint64_t v117 = &v79[v115];
      uint64_t v118 = *((void *)v117 + 1);
      *(void *)uint64_t v116 = *(void *)v117;
      *((void *)v116 + 1) = v118;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
      v78[*(int *)(v119 + 48)] = v79[*(int *)(v119 + 48)];
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v78, v79, *(void *)(*(void *)(v80 - 8) + 64));
LABEL_31:
        (*(void (**)(char *, void, uint64_t, uint64_t))(v73 + 56))(v82, 0, 1, v127);
        goto LABEL_32;
      }
      v128(v78, v79, v131);
      uint64_t v83 = (int *)type metadata accessor for StaticHH2Update(0);
      v78[v83[5]] = v79[v83[5]];
      uint64_t v84 = v83[6];
      unint64_t v85 = &v78[v84];
      uint64_t v86 = &v79[v84];
      uint64_t v88 = *(void *)v86;
      uint64_t v87 = *((void *)v86 + 1);
      *(void *)unint64_t v85 = v88;
      *((void *)v85 + 1) = v87;
      uint64_t v89 = v83[7];
      uint64_t v90 = &v78[v89];
      uint64_t v91 = &v79[v89];
      v90[8] = v91[8];
      *(void *)uint64_t v90 = *(void *)v91;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_31;
  }
  uint64_t v16 = *a2;
  *a1 = *a2;
  a1 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t destroy for StaticAccessory(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_251F34DA0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(a1, v4);
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + a2[6];
  type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  if (swift_getEnumCaseMultiPayload() == 1) {
    v6(v7, v4);
  }
  else {
    swift_bridgeObjectRelease();
  }
  uint64_t v8 = a1 + a2[7];
  uint64_t v9 = type metadata accessor for StaticDeviceMetadata();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9))
  {
    v6(v8, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v10 = a1 + a2[8];
  uint64_t v11 = sub_251F34D20();
  uint64_t v20 = *(void *)(v11 - 8);
  uint64_t v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48);
  if (!v12(v10, 1, v11)) {
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v10, v11);
  }
  v6(a1 + a2[11], v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = a1 + a2[21];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v13, 1, v4)) {
    v6(v13, v4);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v14 = a1 + a2[28];
  uint64_t v15 = type metadata accessor for StaticSoftwareUpdate(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15))
  {
    v6(v14, v4);
    uint64_t v16 = v14 + *(int *)(v15 + 20);
    type metadata accessor for StaticSoftwareUpdate.Kind(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v18 = v16 + *(int *)(type metadata accessor for StaticSoftwareUpdateMetadata(0) + 20);
      if (!v12(v18, 1, v11)) {
        (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v11);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      if (EnumCaseMultiPayload) {
        goto LABEL_19;
      }
      v6(v16, v4);
      type metadata accessor for StaticHH2Update(0);
    }
    swift_bridgeObjectRelease();
  }
LABEL_19:
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StaticAccessory(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v124 = *(void *)(v6 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v124 + 16);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  uint64_t v10 = (void *)(a1 + v8);
  uint64_t v11 = (void *)(a2 + v8);
  uint64_t v12 = v11[1];
  *uint64_t v10 = *v11;
  v10[1] = v12;
  uint64_t v13 = (void *)(a1 + v9);
  uint64_t v14 = (void *)(a2 + v9);
  type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7((uint64_t)v13, (uint64_t)v14, v6);
  }
  else
  {
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v16 = a3[7];
  uint64_t v17 = (char *)(a1 + v16);
  uint64_t v18 = (char *)(a2 + v16);
  uint64_t v19 = (int *)type metadata accessor for StaticDeviceMetadata();
  uint64_t v20 = *((void *)v19 - 1);
  uint64_t v126 = v7;
  uint64_t v129 = v6;
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v20 + 48))(v18, 1, v19))
  {
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v17, (uint64_t)v18, v6);
    uint64_t v22 = v19[5];
    uint64_t v23 = &v17[v22];
    uint64_t v24 = &v18[v22];
    uint64_t v25 = *((void *)v24 + 1);
    *(void *)uint64_t v23 = *(void *)v24;
    *((void *)v23 + 1) = v25;
    uint64_t v26 = v19[6];
    uint64_t v27 = &v17[v26];
    uint64_t v28 = &v18[v26];
    uint64_t v29 = *((void *)v28 + 1);
    *(void *)uint64_t v27 = *(void *)v28;
    *((void *)v27 + 1) = v29;
    uint64_t v30 = v19[7];
    uint64_t v31 = &v17[v30];
    uint64_t v32 = &v18[v30];
    uint64_t v33 = *((void *)v32 + 1);
    *(void *)uint64_t v31 = *(void *)v32;
    *((void *)v31 + 1) = v33;
    uint64_t v34 = v19[8];
    uint64_t v35 = &v17[v34];
    uint64_t v36 = &v18[v34];
    uint64_t v37 = *((void *)v36 + 1);
    *(void *)uint64_t v35 = *(void *)v36;
    *((void *)v35 + 1) = v37;
    v17[v19[9]] = v18[v19[9]];
    v17[v19[10]] = v18[v19[10]];
    v17[v19[11]] = v18[v19[11]];
    v17[v19[12]] = v18[v19[12]];
    uint64_t v38 = *(void (**)(char *, void, uint64_t, int *))(v20 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v6 = v129;
    swift_bridgeObjectRetain();
    uint64_t v7 = v126;
    swift_bridgeObjectRetain();
    v38(v17, 0, 1, v19);
  }
  uint64_t v39 = a3[8];
  uint64_t v40 = (void *)(a1 + v39);
  uint64_t v41 = (const void *)(a2 + v39);
  uint64_t v42 = sub_251F34D20();
  uint64_t v43 = *(void *)(v42 - 8);
  uint64_t v121 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v43 + 48);
  uint64_t v122 = v42;
  uint64_t v120 = v43;
  if (v121(v41, 1, v42))
  {
    uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    memcpy(v40, v41, *(void *)(*(void *)(v44 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v43 + 16))(v40, v41, v42);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
  }
  uint64_t v45 = a3[9];
  uint64_t v46 = a3[10];
  uint64_t v47 = a1 + v45;
  uint64_t v48 = a2 + v45;
  *(void *)uint64_t v47 = *(void *)v48;
  char v49 = *(unsigned char *)(a2 + v46);
  *(unsigned char *)(v47 + 8) = *(unsigned char *)(v48 + 8);
  *(unsigned char *)(a1 + v46) = v49;
  v7(a1 + a3[11], a2 + a3[11], v6);
  uint64_t v50 = a3[13];
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  char v51 = (void *)(a1 + v50);
  uint64_t v52 = (void *)(a2 + v50);
  uint64_t v53 = v52[1];
  void *v51 = *v52;
  v51[1] = v53;
  uint64_t v54 = a3[15];
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  *(unsigned char *)(a1 + v54) = *(unsigned char *)(a2 + v54);
  uint64_t v55 = a3[17];
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  *(unsigned char *)(a1 + v55) = *(unsigned char *)(a2 + v55);
  uint64_t v56 = a3[19];
  *(unsigned char *)(a1 + a3[18]) = *(unsigned char *)(a2 + a3[18]);
  *(void *)(a1 + v56) = *(void *)(a2 + v56);
  uint64_t v57 = a3[21];
  __dst = (void *)(a1 + v57);
  *(void *)(a1 + a3[20]) = *(void *)(a2 + a3[20]);
  uint64_t v58 = (const void *)(a2 + v57);
  uint64_t v59 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v124 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v59(v58, 1, v129))
  {
    uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(__dst, v58, *(void *)(*(void *)(v60 - 8) + 64));
  }
  else
  {
    v126((uint64_t)__dst, (uint64_t)v58, v129);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v124 + 56))(__dst, 0, 1, v129);
  }
  uint64_t v61 = a3[23];
  *(_WORD *)(a1 + a3[22]) = *(_WORD *)(a2 + a3[22]);
  uint64_t v62 = (void *)(a1 + v61);
  uint64_t v63 = (void *)(a2 + v61);
  uint64_t v64 = v63[1];
  *uint64_t v62 = *v63;
  v62[1] = v64;
  uint64_t v65 = a3[25];
  *(void *)(a1 + a3[24]) = *(void *)(a2 + a3[24]);
  *(unsigned char *)(a1 + v65) = *(unsigned char *)(a2 + v65);
  uint64_t v66 = a3[27];
  *(unsigned char *)(a1 + a3[26]) = *(unsigned char *)(a2 + a3[26]);
  *(unsigned char *)(a1 + v66) = *(unsigned char *)(a2 + v66);
  uint64_t v67 = a3[28];
  uint64_t v68 = (char *)(a1 + v67);
  uint64_t v69 = (char *)(a2 + v67);
  uint64_t v70 = type metadata accessor for StaticSoftwareUpdate(0);
  uint64_t v71 = *(void *)(v70 - 8);
  uint64_t v72 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48);
  uint64_t v73 = v70;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v72(v69, 1, v73))
  {
    v126((uint64_t)v68, (uint64_t)v69, v129);
    uint64_t v125 = v73;
    uint64_t v75 = *(int *)(v73 + 20);
    uint64_t v76 = &v68[v75];
    uint64_t v77 = &v69[v75];
    uint64_t v78 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v80 = v68;
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v130 = v68;
      uint64_t v90 = *((void *)v77 + 1);
      *(void *)uint64_t v76 = *(void *)v77;
      *((void *)v76 + 1) = v90;
      char updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      uint64_t v91 = updated[5];
      uint64_t v92 = &v76[v91];
      uint64_t v93 = &v77[v91];
      swift_bridgeObjectRetain();
      if (v121(v93, 1, v122))
      {
        uint64_t v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
        memcpy(v92, v93, *(void *)(*(void *)(v94 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v120 + 16))(v92, v93, v122);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v120 + 56))(v92, 0, 1, v122);
      }
      uint64_t v100 = updated[6];
      uint64_t v101 = &v76[v100];
      uint64_t v102 = &v77[v100];
      uint64_t v103 = *((void *)v102 + 1);
      *(void *)uint64_t v101 = *(void *)v102;
      *((void *)v101 + 1) = v103;
      uint64_t v104 = updated[7];
      uint64_t v105 = &v76[v104];
      uint64_t v106 = &v77[v104];
      uint64_t v107 = *((void *)v106 + 1);
      *(void *)uint64_t v105 = *(void *)v106;
      *((void *)v105 + 1) = v107;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
      v76[*(int *)(v108 + 48)] = v77[*(int *)(v108 + 48)];
      swift_storeEnumTagMultiPayload();
      uint64_t v80 = v130;
      goto LABEL_29;
    }
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v131 = v68;
      uint64_t v95 = *((void *)v77 + 1);
      *(void *)uint64_t v76 = *(void *)v77;
      *((void *)v76 + 1) = v95;
      uint64_t v128 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      uint64_t v96 = v128[5];
      uint64_t v97 = &v76[v96];
      uint64_t v98 = &v77[v96];
      swift_bridgeObjectRetain();
      if (v121(v98, 1, v122))
      {
        uint64_t v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
        memcpy(v97, v98, *(void *)(*(void *)(v99 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v120 + 16))(v97, v98, v122);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v120 + 56))(v97, 0, 1, v122);
      }
      uint64_t v80 = v131;
      uint64_t v109 = v128[6];
      uint64_t v110 = &v76[v109];
      uint64_t v111 = &v77[v109];
      uint64_t v112 = *((void *)v111 + 1);
      *(void *)uint64_t v110 = *(void *)v111;
      *((void *)v110 + 1) = v112;
      uint64_t v113 = v128[7];
      uint64_t v114 = &v76[v113];
      uint64_t v115 = &v77[v113];
      uint64_t v116 = *((void *)v115 + 1);
      *(void *)uint64_t v114 = *(void *)v115;
      *((void *)v114 + 1) = v116;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
      v76[*(int *)(v117 + 48)] = v77[*(int *)(v117 + 48)];
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v76, v77, *(void *)(*(void *)(v78 - 8) + 64));
LABEL_29:
        (*(void (**)(char *, void, uint64_t, uint64_t))(v71 + 56))(v80, 0, 1, v125);
        goto LABEL_30;
      }
      v126((uint64_t)v76, (uint64_t)v77, v129);
      uint64_t v81 = (int *)type metadata accessor for StaticHH2Update(0);
      v76[v81[5]] = v77[v81[5]];
      uint64_t v82 = v81[6];
      uint64_t v83 = &v76[v82];
      uint64_t v84 = &v77[v82];
      uint64_t v86 = *(void *)v84;
      uint64_t v85 = *((void *)v84 + 1);
      *(void *)uint64_t v83 = v86;
      *((void *)v83 + 1) = v85;
      uint64_t v87 = v81[7];
      uint64_t v88 = &v76[v87];
      uint64_t v89 = &v77[v87];
      v88[8] = v89[8];
      *(void *)uint64_t v88 = *(void *)v89;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_29;
  }
  uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
  memcpy(v68, v69, *(void *)(*(void *)(v74 - 8) + 64));
LABEL_30:
  uint64_t v118 = a3[30];
  *(unsigned char *)(a1 + a3[29]) = *(unsigned char *)(a2 + a3[29]);
  *(unsigned char *)(a1 + v118) = *(unsigned char *)(a2 + v118);
  *(void *)(a1 + a3[31]) = *(void *)(a2 + a3[31]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for StaticAccessory(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v138 = *(void *)(v6 - 8);
  __dst = (void *)v6;
  uint64_t v137 = *(void (**)(uint64_t, uint64_t))(v138 + 24);
  v137(a1, a2);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v10 = a3[6];
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (void *)(a2 + v10);
    sub_251E154A0(a1 + v10, type metadata accessor for StaticAccessory.DeviceIdentifier);
    type metadata accessor for StaticAccessory.DeviceIdentifier(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      (*(void (**)(void *, void *, void *))(v138 + 16))(v11, v12, __dst);
    }
    else
    {
      *uint64_t v11 = *v12;
      v11[1] = v12[1];
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v13 = a3[7];
  uint64_t v14 = (unsigned char *)(a1 + v13);
  uint64_t v15 = (unsigned char *)(a2 + v13);
  uint64_t v16 = (int *)type metadata accessor for StaticDeviceMetadata();
  uint64_t v17 = *((void *)v16 - 1);
  uint64_t v18 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v17 + 48);
  int v19 = v18(v14, 1, v16);
  int v20 = v18(v15, 1, v16);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(unsigned char *, unsigned char *, void *))(v138 + 16))(v14, v15, __dst);
      uint64_t v21 = v16[5];
      uint64_t v22 = &v14[v21];
      uint64_t v23 = &v15[v21];
      *uint64_t v22 = *v23;
      v22[1] = v23[1];
      uint64_t v24 = v16[6];
      uint64_t v25 = &v14[v24];
      uint64_t v26 = &v15[v24];
      *uint64_t v25 = *v26;
      v25[1] = v26[1];
      uint64_t v27 = v16[7];
      uint64_t v28 = &v14[v27];
      uint64_t v29 = &v15[v27];
      *uint64_t v28 = *v29;
      v28[1] = v29[1];
      uint64_t v30 = v16[8];
      uint64_t v31 = &v14[v30];
      uint64_t v32 = &v15[v30];
      *uint64_t v31 = *v32;
      v31[1] = v32[1];
      v14[v16[9]] = v15[v16[9]];
      v14[v16[10]] = v15[v16[10]];
      v14[v16[11]] = v15[v16[11]];
      v14[v16[12]] = v15[v16[12]];
      uint64_t v33 = *(void (**)(unsigned char *, void, uint64_t, int *))(v17 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v33(v14, 0, 1, v16);
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v20)
  {
    sub_251E154A0((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for StaticDeviceMetadata);
LABEL_11:
    uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
    memcpy(v14, v15, *(void *)(*(void *)(v34 - 8) + 64));
    goto LABEL_12;
  }
  ((void (*)(unsigned char *, unsigned char *, void *))v137)(v14, v15, __dst);
  uint64_t v84 = v16[5];
  uint64_t v85 = &v14[v84];
  uint64_t v86 = &v15[v84];
  *uint64_t v85 = *v86;
  v85[1] = v86[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v87 = v16[6];
  uint64_t v88 = &v14[v87];
  uint64_t v89 = &v15[v87];
  *uint64_t v88 = *v89;
  v88[1] = v89[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v90 = v16[7];
  uint64_t v91 = &v14[v90];
  uint64_t v92 = &v15[v90];
  *uint64_t v91 = *v92;
  v91[1] = v92[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v93 = v16[8];
  uint64_t v94 = &v14[v93];
  uint64_t v95 = &v15[v93];
  *uint64_t v94 = *v95;
  v94[1] = v95[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14[v16[9]] = v15[v16[9]];
  v14[v16[10]] = v15[v16[10]];
  v14[v16[11]] = v15[v16[11]];
  v14[v16[12]] = v15[v16[12]];
LABEL_12:
  uint64_t v35 = a3[8];
  uint64_t v36 = (void *)(a1 + v35);
  uint64_t v37 = (void *)(a2 + v35);
  uint64_t v38 = sub_251F34D20();
  uint64_t v39 = *(void *)(v38 - 8);
  uint64_t v40 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v39 + 48);
  unsigned int v41 = v40(v36, 1, v38);
  unsigned int v42 = v40(v37, 1, v38);
  uint64_t v134 = v39;
  int v135 = (unsigned int (*)(char *, uint64_t, uint64_t))v40;
  if (v41)
  {
    if (!v42)
    {
      (*(void (**)(void *, void *, uint64_t))(v39 + 16))(v36, v37, v38);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
      goto LABEL_18;
    }
    goto LABEL_17;
  }
  if (v42)
  {
    (*(void (**)(void *, uint64_t))(v39 + 8))(v36, v38);
LABEL_17:
    uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    memcpy(v36, v37, *(void *)(*(void *)(v43 - 8) + 64));
    goto LABEL_18;
  }
  (*(void (**)(void *, void *, uint64_t))(v39 + 24))(v36, v37, v38);
LABEL_18:
  uint64_t v44 = a3[9];
  uint64_t v45 = a1 + v44;
  uint64_t v46 = (uint64_t *)(a2 + v44);
  uint64_t v47 = *v46;
  *(unsigned char *)(v45 + 8) = *((unsigned char *)v46 + 8);
  *(void *)uint64_t v45 = v47;
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  ((void (*)(uint64_t, uint64_t, void *))v137)(a1 + a3[11], a2 + a3[11], __dst);
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v48 = a3[13];
  char v49 = (void *)(a1 + v48);
  uint64_t v50 = (void *)(a2 + v48);
  void *v49 = *v50;
  v49[1] = v50[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  *(unsigned char *)(a1 + a3[15]) = *(unsigned char *)(a2 + a3[15]);
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  *(unsigned char *)(a1 + a3[17]) = *(unsigned char *)(a2 + a3[17]);
  *(unsigned char *)(a1 + a3[18]) = *(unsigned char *)(a2 + a3[18]);
  *(void *)(a1 + a3[19]) = *(void *)(a2 + a3[19]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[20]) = *(void *)(a2 + a3[20]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v51 = a3[21];
  uint64_t v52 = (void *)(a1 + v51);
  uint64_t v53 = (const void *)(a2 + v51);
  uint64_t v54 = *(uint64_t (**)(uint64_t, uint64_t, void *))(v138 + 48);
  int v55 = v54(a1 + v51, 1, __dst);
  int v56 = v54((uint64_t)v53, 1, __dst);
  if (v55)
  {
    if (!v56)
    {
      (*(void (**)(void *, const void *, void *))(v138 + 16))(v52, v53, __dst);
      (*(void (**)(void *, void, uint64_t, void *))(v138 + 56))(v52, 0, 1, __dst);
      goto LABEL_24;
    }
    goto LABEL_23;
  }
  if (v56)
  {
    (*(void (**)(void *, void *))(v138 + 8))(v52, __dst);
LABEL_23:
    uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(v52, v53, *(void *)(*(void *)(v57 - 8) + 64));
    goto LABEL_24;
  }
  ((void (*)(void *, const void *, void *))v137)(v52, v53, __dst);
LABEL_24:
  *(_WORD *)(a1 + a3[22]) = *(_WORD *)(a2 + a3[22]);
  uint64_t v58 = a3[23];
  uint64_t v59 = (void *)(a1 + v58);
  uint64_t v60 = (void *)(a2 + v58);
  *uint64_t v59 = *v60;
  v59[1] = v60[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[24]) = *(void *)(a2 + a3[24]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[25]) = *(unsigned char *)(a2 + a3[25]);
  *(unsigned char *)(a1 + a3[26]) = *(unsigned char *)(a2 + a3[26]);
  *(unsigned char *)(a1 + a3[27]) = *(unsigned char *)(a2 + a3[27]);
  uint64_t v61 = a3[28];
  uint64_t v62 = a1 + v61;
  uint64_t v63 = (char *)(a2 + v61);
  uint64_t v64 = type metadata accessor for StaticSoftwareUpdate(0);
  uint64_t v136 = *(void *)(v64 - 8);
  uint64_t v65 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v136 + 48);
  int v66 = v65(v62, 1, v64);
  int v67 = v65((uint64_t)v63, 1, v64);
  if (v66)
  {
    if (!v67)
    {
      uint64_t v68 = *(void (**)(uint64_t, char *, void *))(v138 + 16);
      v68(v62, v63, __dst);
      uint64_t v69 = *(int *)(v64 + 20);
      uint64_t v70 = (void *)(v62 + v69);
      uint64_t v71 = &v63[v69];
      uint64_t v139 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        *uint64_t v70 = *(void *)v71;
        v70[1] = *((void *)v71 + 1);
        char updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        uint64_t v110 = updated[5];
        __dsta = (char *)v70 + v110;
        uint64_t v111 = &v71[v110];
        swift_bridgeObjectRetain();
        if (v135(v111, 1, v38))
        {
LABEL_45:
          uint64_t v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
          memcpy(__dsta, v111, *(void *)(*(void *)(v113 - 8) + 64));
LABEL_53:
          uint64_t v119 = updated[6];
          uint64_t v120 = (void *)((char *)v70 + v119);
          uint64_t v121 = &v71[v119];
          *uint64_t v120 = *(void *)v121;
          v120[1] = *((void *)v121 + 1);
          uint64_t v122 = updated[7];
          uint64_t v123 = (void *)((char *)v70 + v122);
          uint64_t v124 = &v71[v122];
          *uint64_t v123 = *(void *)v124;
          v123[1] = *((void *)v124 + 1);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
          *((unsigned char *)v70 + *(int *)(v125 + 48)) = v71[*(int *)(v125 + 48)];
          goto LABEL_54;
        }
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          if (EnumCaseMultiPayload)
          {
            memcpy(v70, v71, *(void *)(*(void *)(v139 - 8) + 64));
LABEL_55:
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v136 + 56))(v62, 0, 1, v64);
            goto LABEL_56;
          }
          v68((uint64_t)v70, v71, __dst);
          uint64_t v73 = (int *)type metadata accessor for StaticHH2Update(0);
          *((unsigned char *)v70 + v73[5]) = v71[v73[5]];
          uint64_t v74 = v73[6];
          uint64_t v75 = (void *)((char *)v70 + v74);
          uint64_t v76 = &v71[v74];
          *uint64_t v75 = *(void *)v76;
          v75[1] = *((void *)v76 + 1);
          uint64_t v77 = v73[7];
          uint64_t v78 = (char *)v70 + v77;
          char v79 = &v71[v77];
          char v80 = v79[8];
          *(void *)uint64_t v78 = *(void *)v79;
          v78[8] = v80;
          swift_bridgeObjectRetain();
LABEL_54:
          swift_storeEnumTagMultiPayload();
          goto LABEL_55;
        }
        *uint64_t v70 = *(void *)v71;
        v70[1] = *((void *)v71 + 1);
        char updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        uint64_t v112 = updated[5];
        __dsta = (char *)v70 + v112;
        uint64_t v111 = &v71[v112];
        swift_bridgeObjectRetain();
        if (v135(v111, 1, v38)) {
          goto LABEL_45;
        }
      }
      (*(void (**)(char *, char *, uint64_t))(v134 + 16))(__dsta, v111, v38);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v134 + 56))(__dsta, 0, 1, v38);
      goto LABEL_53;
    }
    goto LABEL_32;
  }
  if (!v67)
  {
    ((void (*)(uint64_t, char *, void *))v137)(v62, v63, __dst);
    if (a1 == a2) {
      goto LABEL_56;
    }
    uint64_t v96 = *(int *)(v64 + 20);
    uint64_t v97 = (void *)(v62 + v96);
    uint64_t v98 = &v63[v96];
    sub_251E154A0((uint64_t)v97, type metadata accessor for StaticSoftwareUpdate.Kind);
    uint64_t v99 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
    int v100 = swift_getEnumCaseMultiPayload();
    switch(v100)
    {
      case 2:
        *uint64_t v97 = *(void *)v98;
        v97[1] = *((void *)v98 + 1);
        uint64_t v114 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        uint64_t v115 = v114[5];
        __dstb = (char *)v97 + v115;
        uint64_t v116 = &v98[v115];
        swift_bridgeObjectRetain();
        if (v135(v116, 1, v38))
        {
LABEL_48:
          uint64_t v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
          memcpy(__dstb, v116, *(void *)(*(void *)(v117 - 8) + 64));
LABEL_58:
          uint64_t v127 = v114[6];
          uint64_t v128 = (void *)((char *)v97 + v127);
          uint64_t v129 = &v98[v127];
          *uint64_t v128 = *(void *)v129;
          v128[1] = *((void *)v129 + 1);
          uint64_t v130 = v114[7];
          uint64_t v131 = (void *)((char *)v97 + v130);
          uint64_t v132 = &v98[v130];
          *uint64_t v131 = *(void *)v132;
          v131[1] = *((void *)v132 + 1);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v133 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
          *((unsigned char *)v97 + *(int *)(v133 + 48)) = v98[*(int *)(v133 + 48)];
          swift_storeEnumTagMultiPayload();
          goto LABEL_56;
        }
        break;
      case 1:
        *uint64_t v97 = *(void *)v98;
        v97[1] = *((void *)v98 + 1);
        uint64_t v114 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        uint64_t v118 = v114[5];
        __dstb = (char *)v97 + v118;
        uint64_t v116 = &v98[v118];
        swift_bridgeObjectRetain();
        if (v135(v116, 1, v38)) {
          goto LABEL_48;
        }
        break;
      case 0:
        (*(void (**)(void *, char *, void *))(v138 + 16))(v97, v98, __dst);
        uint64_t v101 = (int *)type metadata accessor for StaticHH2Update(0);
        *((unsigned char *)v97 + v101[5]) = v98[v101[5]];
        uint64_t v102 = v101[6];
        uint64_t v103 = (void *)((char *)v97 + v102);
        uint64_t v104 = &v98[v102];
        *uint64_t v103 = *(void *)v104;
        v103[1] = *((void *)v104 + 1);
        uint64_t v105 = v101[7];
        uint64_t v106 = (char *)v97 + v105;
        uint64_t v107 = &v98[v105];
        char v108 = v107[8];
        *(void *)uint64_t v106 = *(void *)v107;
        v106[8] = v108;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        goto LABEL_56;
      default:
        size_t v81 = *(void *)(*(void *)(v99 - 8) + 64);
        uint64_t v82 = v97;
        uint64_t v83 = v98;
        goto LABEL_33;
    }
    (*(void (**)(char *, char *, uint64_t))(v134 + 16))(__dstb, v116, v38);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v134 + 56))(__dstb, 0, 1, v38);
    goto LABEL_58;
  }
  sub_251E154A0(v62, type metadata accessor for StaticSoftwareUpdate);
LABEL_32:
  size_t v81 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120) - 8) + 64);
  uint64_t v82 = (void *)v62;
  uint64_t v83 = v63;
LABEL_33:
  memcpy(v82, v83, v81);
LABEL_56:
  *(unsigned char *)(a1 + a3[29]) = *(unsigned char *)(a2 + a3[29]);
  *(unsigned char *)(a1 + a3[30]) = *(unsigned char *)(a2 + a3[30]);
  *(void *)(a1 + a3[31]) = *(void *)(a2 + a3[31]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for StaticAccessory(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  uint64_t v9 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (const void *)(a2 + v9);
  uint64_t v12 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  uint64_t v68 = v7;
  uint64_t v70 = (void (*)(char *, char *, uint64_t))v8;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8((uint64_t)v10, (uint64_t)v11, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
  }
  uint64_t v13 = a3[7];
  uint64_t v14 = (char *)(a1 + v13);
  uint64_t v15 = (char *)(a2 + v13);
  uint64_t v16 = (int *)type metadata accessor for StaticDeviceMetadata();
  uint64_t v17 = *((void *)v16 - 1);
  uint64_t v18 = v6;
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v17 + 48))(v15, 1, v16))
  {
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
    memcpy(v14, v15, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    v70(v14, v15, v6);
    *(_OWORD *)&v14[v16[5]] = *(_OWORD *)&v15[v16[5]];
    *(_OWORD *)&v14[v16[6]] = *(_OWORD *)&v15[v16[6]];
    *(_OWORD *)&v14[v16[7]] = *(_OWORD *)&v15[v16[7]];
    *(_OWORD *)&v14[v16[8]] = *(_OWORD *)&v15[v16[8]];
    v14[v16[9]] = v15[v16[9]];
    v14[v16[10]] = v15[v16[10]];
    v14[v16[11]] = v15[v16[11]];
    v14[v16[12]] = v15[v16[12]];
    (*(void (**)(char *, void, uint64_t, int *))(v17 + 56))(v14, 0, 1, v16);
  }
  uint64_t v20 = a3[8];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (const void *)(a2 + v20);
  uint64_t v23 = sub_251F34D20();
  uint64_t v24 = *(void *)(v23 - 8);
  int v66 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v24 + 48);
  uint64_t v67 = v23;
  if (v66(v22, 1, v23))
  {
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v24 + 32))(v21, v22, v23);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  uint64_t v26 = a3[9];
  uint64_t v27 = a3[10];
  uint64_t v28 = a1 + v26;
  uint64_t v29 = a2 + v26;
  *(void *)uint64_t v28 = *(void *)v29;
  char v30 = *(unsigned char *)(a2 + v27);
  *(unsigned char *)(v28 + 8) = *(unsigned char *)(v29 + 8);
  *(unsigned char *)(a1 + v27) = v30;
  v70((char *)(a1 + a3[11]), (char *)(a2 + a3[11]), v18);
  uint64_t v31 = a3[13];
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  *(_OWORD *)(a1 + v31) = *(_OWORD *)(a2 + v31);
  uint64_t v32 = a3[15];
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  *(unsigned char *)(a1 + v32) = *(unsigned char *)(a2 + v32);
  uint64_t v33 = a3[17];
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  *(unsigned char *)(a1 + v33) = *(unsigned char *)(a2 + v33);
  uint64_t v34 = a3[19];
  *(unsigned char *)(a1 + a3[18]) = *(unsigned char *)(a2 + a3[18]);
  *(void *)(a1 + v34) = *(void *)(a2 + v34);
  uint64_t v35 = a3[21];
  uint64_t v36 = (void *)(a1 + v35);
  *(void *)(a1 + a3[20]) = *(void *)(a2 + a3[20]);
  uint64_t v37 = (void *)(a2 + v35);
  uint64_t v65 = v24;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v68 + 48))(a2 + v35, 1, v18))
  {
    uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
  }
  else
  {
    v70((char *)v36, (char *)v37, v18);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v68 + 56))(v36, 0, 1, v18);
  }
  uint64_t v39 = a3[23];
  *(_WORD *)(a1 + a3[22]) = *(_WORD *)(a2 + a3[22]);
  *(_OWORD *)(a1 + v39) = *(_OWORD *)(a2 + v39);
  uint64_t v40 = a3[25];
  *(void *)(a1 + a3[24]) = *(void *)(a2 + a3[24]);
  *(unsigned char *)(a1 + v40) = *(unsigned char *)(a2 + v40);
  uint64_t v41 = a3[27];
  *(unsigned char *)(a1 + a3[26]) = *(unsigned char *)(a2 + a3[26]);
  *(unsigned char *)(a1 + v41) = *(unsigned char *)(a2 + v41);
  uint64_t v42 = a3[28];
  uint64_t v43 = (char *)(a1 + v42);
  uint64_t v44 = (char *)(a2 + v42);
  uint64_t v45 = type metadata accessor for StaticSoftwareUpdate(0);
  uint64_t v46 = *(void *)(v45 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45))
  {
    v70(v43, v44, v18);
    uint64_t v48 = *(int *)(v45 + 20);
    char v49 = &v43[v48];
    uint64_t v50 = &v44[v48];
    uint64_t v69 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(_OWORD *)char v49 = *(_OWORD *)v50;
      char updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      uint64_t v57 = updated[5];
      uint64_t v71 = v49;
      __dst = &v49[v57];
      uint64_t v58 = &v50[v57];
      if (v66(&v50[v57], 1, v67))
      {
LABEL_22:
        uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
        memcpy(__dst, v58, *(void *)(*(void *)(v60 - 8) + 64));
LABEL_25:
        *(_OWORD *)((char *)v71 + updated[6]) = *(_OWORD *)&v50[updated[6]];
        *(_OWORD *)((char *)v71 + updated[7]) = *(_OWORD *)&v50[updated[7]];
        uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
        *((unsigned char *)v71 + *(int *)(v61 + 48)) = v50[*(int *)(v61 + 48)];
        goto LABEL_26;
      }
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v49, v50, *(void *)(*(void *)(v69 - 8) + 64));
LABEL_27:
          (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
          goto LABEL_28;
        }
        v70(v49, v50, v18);
        uint64_t v52 = (int *)type metadata accessor for StaticHH2Update(0);
        v49[v52[5]] = v50[v52[5]];
        *(_OWORD *)&v49[v52[6]] = *(_OWORD *)&v50[v52[6]];
        uint64_t v53 = v52[7];
        uint64_t v54 = &v49[v53];
        int v55 = &v50[v53];
        v54[8] = v55[8];
        *(void *)uint64_t v54 = *(void *)v55;
LABEL_26:
        swift_storeEnumTagMultiPayload();
        goto LABEL_27;
      }
      *(_OWORD *)char v49 = *(_OWORD *)v50;
      char updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      uint64_t v59 = updated[5];
      uint64_t v71 = v49;
      __dst = &v49[v59];
      uint64_t v58 = &v50[v59];
      if (v66(&v50[v59], 1, v67)) {
        goto LABEL_22;
      }
    }
    (*(void (**)(char *, char *))(v65 + 32))(__dst, v58);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v65 + 56))(__dst, 0, 1, v67);
    goto LABEL_25;
  }
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
  memcpy(v43, v44, *(void *)(*(void *)(v47 - 8) + 64));
LABEL_28:
  uint64_t v62 = a3[30];
  *(unsigned char *)(a1 + a3[29]) = *(unsigned char *)(a2 + a3[29]);
  *(unsigned char *)(a1 + v62) = *(unsigned char *)(a2 + v62);
  *(void *)(a1 + a3[31]) = *(void *)(a2 + a3[31]);
  return a1;
}

uint64_t assignWithTake for StaticAccessory(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v129 = *(void *)(v6 - 8);
  __dst = *(void (**)(uint64_t, uint64_t, uint64_t))(v129 + 40);
  __dst(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v12 = a3[6];
    uint64_t v13 = (void *)(a1 + v12);
    uint64_t v14 = (const void *)(a2 + v12);
    sub_251E154A0(a1 + v12, type metadata accessor for StaticAccessory.DeviceIdentifier);
    uint64_t v15 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      (*(void (**)(void *, const void *, uint64_t))(v129 + 32))(v13, v14, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
    }
  }
  uint64_t v131 = v6;
  uint64_t v16 = a3[7];
  uint64_t v17 = (unsigned char *)(a1 + v16);
  uint64_t v18 = (unsigned char *)(a2 + v16);
  uint64_t v19 = (int *)type metadata accessor for StaticDeviceMetadata();
  uint64_t v20 = *((void *)v19 - 1);
  uint64_t v21 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v20 + 48);
  int v22 = v21(v17, 1, v19);
  int v23 = v21(v18, 1, v19);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v129 + 32))(v17, v18, v6);
      *(_OWORD *)&v17[v19[5]] = *(_OWORD *)&v18[v19[5]];
      *(_OWORD *)&v17[v19[6]] = *(_OWORD *)&v18[v19[6]];
      *(_OWORD *)&v17[v19[7]] = *(_OWORD *)&v18[v19[7]];
      *(_OWORD *)&v17[v19[8]] = *(_OWORD *)&v18[v19[8]];
      v17[v19[9]] = v18[v19[9]];
      v17[v19[10]] = v18[v19[10]];
      v17[v19[11]] = v18[v19[11]];
      v17[v19[12]] = v18[v19[12]];
      (*(void (**)(unsigned char *, void, uint64_t, int *))(v20 + 56))(v17, 0, 1, v19);
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  if (v23)
  {
    sub_251E154A0((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for StaticDeviceMetadata);
LABEL_10:
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
    memcpy(v17, v18, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_11;
  }
  __dst((uint64_t)v17, (uint64_t)v18, v6);
  uint64_t v80 = v19[5];
  size_t v81 = &v17[v80];
  uint64_t v82 = (uint64_t *)&v18[v80];
  uint64_t v84 = *v82;
  uint64_t v83 = v82[1];
  *size_t v81 = v84;
  v81[1] = v83;
  swift_bridgeObjectRelease();
  uint64_t v85 = v19[6];
  uint64_t v86 = &v17[v85];
  uint64_t v87 = (uint64_t *)&v18[v85];
  uint64_t v89 = *v87;
  uint64_t v88 = v87[1];
  *uint64_t v86 = v89;
  v86[1] = v88;
  swift_bridgeObjectRelease();
  uint64_t v90 = v19[7];
  uint64_t v91 = &v17[v90];
  uint64_t v92 = (uint64_t *)&v18[v90];
  uint64_t v94 = *v92;
  uint64_t v93 = v92[1];
  *uint64_t v91 = v94;
  v91[1] = v93;
  swift_bridgeObjectRelease();
  uint64_t v95 = v19[8];
  uint64_t v96 = &v17[v95];
  uint64_t v97 = (uint64_t *)&v18[v95];
  uint64_t v99 = *v97;
  uint64_t v98 = v97[1];
  *uint64_t v96 = v99;
  v96[1] = v98;
  swift_bridgeObjectRelease();
  v17[v19[9]] = v18[v19[9]];
  v17[v19[10]] = v18[v19[10]];
  v17[v19[11]] = v18[v19[11]];
  v17[v19[12]] = v18[v19[12]];
LABEL_11:
  uint64_t v25 = a3[8];
  uint64_t v26 = (void *)(a1 + v25);
  uint64_t v27 = (void *)(a2 + v25);
  uint64_t v28 = sub_251F34D20();
  uint64_t v29 = *(void *)(v28 - 8);
  char v30 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v29 + 48);
  unsigned int v31 = v30(v26, 1, v28);
  unsigned int v32 = v30(v27, 1, v28);
  uint64_t v125 = (unsigned int (*)(char *, uint64_t, uint64_t))v30;
  uint64_t v126 = v28;
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(void *, void *, uint64_t))(v29 + 32))(v26, v27, v28);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
      goto LABEL_17;
    }
    goto LABEL_16;
  }
  if (v32)
  {
    (*(void (**)(void *, uint64_t))(v29 + 8))(v26, v28);
LABEL_16:
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    memcpy(v26, v27, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_17;
  }
  (*(void (**)(void *, void *, uint64_t))(v29 + 40))(v26, v27, v28);
LABEL_17:
  uint64_t v34 = a3[9];
  uint64_t v35 = a3[10];
  uint64_t v36 = a1 + v34;
  uint64_t v37 = a2 + v34;
  *(void *)uint64_t v36 = *(void *)v37;
  char v38 = *(unsigned char *)(a2 + v35);
  *(unsigned char *)(v36 + 8) = *(unsigned char *)(v37 + 8);
  *(unsigned char *)(a1 + v35) = v38;
  __dst(a1 + a3[11], a2 + a3[11], v131);
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  swift_bridgeObjectRelease();
  uint64_t v39 = a3[13];
  uint64_t v40 = (void *)(a1 + v39);
  uint64_t v41 = (uint64_t *)(a2 + v39);
  uint64_t v43 = *v41;
  uint64_t v42 = v41[1];
  *uint64_t v40 = v43;
  v40[1] = v42;
  swift_bridgeObjectRelease();
  uint64_t v44 = a3[15];
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  *(unsigned char *)(a1 + v44) = *(unsigned char *)(a2 + v44);
  uint64_t v45 = a3[17];
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  *(unsigned char *)(a1 + v45) = *(unsigned char *)(a2 + v45);
  uint64_t v46 = a3[19];
  *(unsigned char *)(a1 + a3[18]) = *(unsigned char *)(a2 + a3[18]);
  *(void *)(a1 + v46) = *(void *)(a2 + v46);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[20]) = *(void *)(a2 + a3[20]);
  swift_bridgeObjectRelease();
  uint64_t v47 = a3[21];
  uint64_t v48 = (void *)(a1 + v47);
  char v49 = (const void *)(a2 + v47);
  uint64_t v50 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v129 + 48);
  int v51 = v50(a1 + v47, 1, v131);
  int v52 = v50((uint64_t)v49, 1, v131);
  uint64_t v124 = v29;
  if (v51)
  {
    if (!v52)
    {
      (*(void (**)(void *, const void *, uint64_t))(v129 + 32))(v48, v49, v131);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v129 + 56))(v48, 0, 1, v131);
      goto LABEL_23;
    }
    goto LABEL_22;
  }
  if (v52)
  {
    (*(void (**)(void *, uint64_t))(v129 + 8))(v48, v131);
LABEL_22:
    uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(v48, v49, *(void *)(*(void *)(v53 - 8) + 64));
    goto LABEL_23;
  }
  __dst((uint64_t)v48, (uint64_t)v49, v131);
LABEL_23:
  uint64_t v54 = a3[23];
  *(_WORD *)(a1 + a3[22]) = *(_WORD *)(a2 + a3[22]);
  int v55 = (void *)(a1 + v54);
  int v56 = (uint64_t *)(a2 + v54);
  uint64_t v58 = *v56;
  uint64_t v57 = v56[1];
  *int v55 = v58;
  v55[1] = v57;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[24]) = *(void *)(a2 + a3[24]);
  swift_bridgeObjectRelease();
  uint64_t v59 = a3[26];
  *(unsigned char *)(a1 + a3[25]) = *(unsigned char *)(a2 + a3[25]);
  *(unsigned char *)(a1 + v59) = *(unsigned char *)(a2 + v59);
  uint64_t v60 = a3[28];
  *(unsigned char *)(a1 + a3[27]) = *(unsigned char *)(a2 + a3[27]);
  uint64_t v61 = a1 + v60;
  uint64_t v62 = (char *)(a2 + v60);
  uint64_t v63 = type metadata accessor for StaticSoftwareUpdate(0);
  uint64_t v64 = *(void *)(v63 - 8);
  uint64_t v65 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v64 + 48);
  int v66 = v65(v61, 1, v63);
  int v67 = v65((uint64_t)v62, 1, v63);
  if (v66)
  {
    if (!v67)
    {
      uint64_t v68 = *(void (**)(uint64_t, char *, uint64_t))(v129 + 32);
      v68(v61, v62, v131);
      uint64_t v69 = *(int *)(v63 + 20);
      uint64_t v70 = (_OWORD *)(v61 + v69);
      uint64_t v71 = &v62[v69];
      uint64_t v130 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        *uint64_t v70 = *(_OWORD *)v71;
        char updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        uint64_t v110 = updated[5];
        uint64_t v132 = v70;
        __dsta = (char *)v70 + v110;
        uint64_t v111 = &v71[v110];
        if (v125(&v71[v110], 1, v126))
        {
LABEL_44:
          uint64_t v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
          memcpy(__dsta, v111, *(void *)(*(void *)(v113 - 8) + 64));
LABEL_52:
          *(_OWORD *)((char *)v132 + updated[6]) = *(_OWORD *)&v71[updated[6]];
          *(_OWORD *)((char *)v132 + updated[7]) = *(_OWORD *)&v71[updated[7]];
          uint64_t v120 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
          *((unsigned char *)v132 + *(int *)(v120 + 48)) = v71[*(int *)(v120 + 48)];
          goto LABEL_53;
        }
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          if (EnumCaseMultiPayload)
          {
            memcpy(v70, v71, *(void *)(*(void *)(v130 - 8) + 64));
LABEL_54:
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
            goto LABEL_55;
          }
          v68((uint64_t)v70, v71, v131);
          uint64_t v73 = (int *)type metadata accessor for StaticHH2Update(0);
          *((unsigned char *)v70 + v73[5]) = v71[v73[5]];
          *(_OWORD *)((char *)v70 + v73[6]) = *(_OWORD *)&v71[v73[6]];
          uint64_t v74 = v73[7];
          uint64_t v75 = (char *)v70 + v74;
          uint64_t v76 = &v71[v74];
          v75[8] = v76[8];
          *(void *)uint64_t v75 = *(void *)v76;
LABEL_53:
          swift_storeEnumTagMultiPayload();
          goto LABEL_54;
        }
        *uint64_t v70 = *(_OWORD *)v71;
        char updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        uint64_t v112 = updated[5];
        uint64_t v132 = v70;
        __dsta = (char *)v70 + v112;
        uint64_t v111 = &v71[v112];
        if (v125(&v71[v112], 1, v126)) {
          goto LABEL_44;
        }
      }
      (*(void (**)(char *, char *, uint64_t))(v124 + 32))(__dsta, v111, v126);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v124 + 56))(__dsta, 0, 1, v126);
      goto LABEL_52;
    }
    goto LABEL_31;
  }
  if (!v67)
  {
    __dst(v61, (uint64_t)v62, v131);
    if (a1 == a2) {
      goto LABEL_55;
    }
    uint64_t v100 = *(int *)(v63 + 20);
    uint64_t v101 = (_OWORD *)(v61 + v100);
    uint64_t v102 = &v62[v100];
    sub_251E154A0((uint64_t)v101, type metadata accessor for StaticSoftwareUpdate.Kind);
    uint64_t v103 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
    int v104 = swift_getEnumCaseMultiPayload();
    switch(v104)
    {
      case 2:
        *uint64_t v101 = *(_OWORD *)v102;
        uint64_t v114 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        uint64_t v115 = v114[5];
        uint64_t v116 = (char *)v101 + v115;
        uint64_t v117 = &v102[v115];
        if (v125(&v102[v115], 1, v126))
        {
LABEL_47:
          uint64_t v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
          memcpy(v116, v117, *(void *)(*(void *)(v118 - 8) + 64));
LABEL_57:
          *(_OWORD *)((char *)v101 + v114[6]) = *(_OWORD *)&v102[v114[6]];
          *(_OWORD *)((char *)v101 + v114[7]) = *(_OWORD *)&v102[v114[7]];
          uint64_t v123 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
          *((unsigned char *)v101 + *(int *)(v123 + 48)) = v102[*(int *)(v123 + 48)];
          swift_storeEnumTagMultiPayload();
          goto LABEL_55;
        }
        break;
      case 1:
        *uint64_t v101 = *(_OWORD *)v102;
        uint64_t v114 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        uint64_t v119 = v114[5];
        uint64_t v116 = (char *)v101 + v119;
        uint64_t v117 = &v102[v119];
        if (v125(&v102[v119], 1, v126)) {
          goto LABEL_47;
        }
        break;
      case 0:
        (*(void (**)(_OWORD *, char *, uint64_t))(v129 + 32))(v101, v102, v131);
        uint64_t v105 = (int *)type metadata accessor for StaticHH2Update(0);
        *((unsigned char *)v101 + v105[5]) = v102[v105[5]];
        *(_OWORD *)((char *)v101 + v105[6]) = *(_OWORD *)&v102[v105[6]];
        uint64_t v106 = v105[7];
        uint64_t v107 = (char *)v101 + v106;
        char v108 = &v102[v106];
        v107[8] = v108[8];
        *(void *)uint64_t v107 = *(void *)v108;
        swift_storeEnumTagMultiPayload();
        goto LABEL_55;
      default:
        size_t v77 = *(void *)(*(void *)(v103 - 8) + 64);
        uint64_t v78 = v101;
        char v79 = v102;
        goto LABEL_32;
    }
    (*(void (**)(char *, char *, uint64_t))(v124 + 32))(v116, v117, v126);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v124 + 56))(v116, 0, 1, v126);
    goto LABEL_57;
  }
  sub_251E154A0(v61, type metadata accessor for StaticSoftwareUpdate);
LABEL_31:
  size_t v77 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120) - 8) + 64);
  uint64_t v78 = (void *)v61;
  char v79 = v62;
LABEL_32:
  memcpy(v78, v79, v77);
LABEL_55:
  uint64_t v121 = a3[30];
  *(unsigned char *)(a1 + a3[29]) = *(unsigned char *)(a2 + a3[29]);
  *(unsigned char *)(a1 + v121) = *(unsigned char *)(a2 + v121);
  *(void *)(a1 + a3[31]) = *(void *)(a2 + a3[31]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StaticAccessory(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251E19E48);
}

uint64_t sub_251E19E48(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_16:
    return v9(v10, a2, v8);
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v11 = *(void *)(a1 + a3[5] + 8);
    if (v11 >= 0xFFFFFFFF) {
      LODWORD(v11) = -1;
    }
    return (v11 + 1);
  }
  uint64_t v13 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a2)
  {
    uint64_t v8 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a3[6];
LABEL_15:
    uint64_t v10 = a1 + v15;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    goto LABEL_16;
  }
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a2)
  {
    uint64_t v8 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a3[7];
    goto LABEL_15;
  }
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a2)
  {
    uint64_t v8 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a3[8];
    goto LABEL_15;
  }
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a2)
  {
    uint64_t v8 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a3[21];
    goto LABEL_15;
  }
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48);
  uint64_t v21 = v19;
  uint64_t v22 = a1 + a3[28];
  return v20(v22, a2, v21);
}

uint64_t storeEnumTagSinglePayload for StaticAccessory(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251E1A0D4);
}

uint64_t sub_251E1A0D4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = sub_251F34DA0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_14:
    return v11(v12, a2, a2, v10);
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[5] + 8) = (a2 - 1);
    return result;
  }
  uint64_t v13 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = a4[6];
LABEL_13:
    uint64_t v12 = a1 + v15;
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_14;
  }
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
  if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
  {
    uint64_t v10 = v16;
    uint64_t v14 = *(void *)(v16 - 8);
    uint64_t v15 = a4[7];
    goto LABEL_13;
  }
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  if (*(_DWORD *)(*(void *)(v17 - 8) + 84) == a3)
  {
    uint64_t v10 = v17;
    uint64_t v14 = *(void *)(v17 - 8);
    uint64_t v15 = a4[8];
    goto LABEL_13;
  }
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  if (*(_DWORD *)(*(void *)(v18 - 8) + 84) == a3)
  {
    uint64_t v10 = v18;
    uint64_t v14 = *(void *)(v18 - 8);
    uint64_t v15 = a4[21];
    goto LABEL_13;
  }
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  uint64_t v21 = v19;
  uint64_t v22 = a1 + a4[28];
  return v20(v22, a2, a2, v21);
}

void sub_251E1A34C()
{
  sub_251F34DA0();
  if (v0 <= 0x3F)
  {
    type metadata accessor for StaticAccessory.DeviceIdentifier(319);
    if (v1 <= 0x3F)
    {
      sub_251DD078C(319, qword_26B21FDE0, (void (*)(uint64_t))type metadata accessor for StaticDeviceMetadata);
      if (v2 <= 0x3F)
      {
        sub_251DD078C(319, (unint64_t *)&qword_26B21FD28, MEMORY[0x270FA9148]);
        if (v3 <= 0x3F)
        {
          sub_251DD078C(319, (unint64_t *)&qword_26B21FF98, MEMORY[0x270FA9548]);
          if (v4 <= 0x3F)
          {
            sub_251DD078C(319, &qword_26B220B48, (void (*)(uint64_t))type metadata accessor for StaticSoftwareUpdate);
            if (v5 <= 0x3F) {
              swift_initStructMetadata();
            }
          }
        }
      }
    }
  }
}

unsigned char *storeEnumTagSinglePayload for StaticAccessory.HomePodTypes(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251E1A69CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticAccessory.HomePodTypes()
{
  return &type metadata for StaticAccessory.HomePodTypes;
}

uint64_t getEnumTagSinglePayload for StaticAccessory.SpecialMediaCategory(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >> 1 < 0xFFF) {
    goto LABEL_17;
  }
  if (a2 + 57346 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 57346 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 57346;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 57346;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 57346;
    }
  }
LABEL_17:
  unsigned int v6 = (*a1 & 0xFC | (*a1 >> 14) | (*a1 >> 1) & 0x1F00) ^ 0x1FFF;
  if (v6 >= 0x1FFD) {
    unsigned int v6 = -1;
  }
  return v6 + 1;
}

uint64_t storeEnumTagSinglePayload for StaticAccessory.SpecialMediaCategory(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 57346 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 57346 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >> 1 >= 0xFFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 >> 1 > 0xFFE)
  {
    unsigned int v6 = ((a2 - 8190) >> 16) + 1;
    *(_WORD *)uint64_t result = a2 - 8190;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251E1A874);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2)
        {
LABEL_18:
          unsigned int v7 = ((-a2 >> 2) & 0x7FF) - (a2 << 11);
          *(_WORD *)uint64_t result = (8 * v7) & 0xFE00 | (4 * (v7 & 0x3F));
        }
        break;
    }
  }
  return result;
}

uint64_t sub_251E1A89C(unsigned __int16 *a1)
{
  unsigned int v1 = *a1;
  int v2 = (__int16)v1;
  unsigned int v3 = v1 >> 14;
  unsigned int v4 = (v1 & 3 | (4 * ((v1 >> 8) & 1))) + 2;
  if (v2 >= 0) {
    return v3;
  }
  else {
    return v4;
  }
}

_WORD *sub_251E1A8C4(_WORD *result)
{
  *result &= 0x3FFFu;
  return result;
}

_WORD *sub_251E1A8D4(_WORD *result, unsigned int a2)
{
  if (a2 < 2) {
    *uint64_t result = *result & 0x103 | ((_WORD)a2 << 14);
  }
  else {
    *uint64_t result = (((_WORD)a2 - 2) << 6) & 0x100 | (a2 - 2) & 3 | 0x8000;
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticAccessory.SpecialMediaCategory()
{
  return &type metadata for StaticAccessory.SpecialMediaCategory;
}

uint64_t *initializeBufferWithCopyOfBuffer for StaticAccessory.DeviceIdentifier(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_251F34DA0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      uint64_t v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for StaticAccessory.DeviceIdentifier(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_251F34DA0();
    unsigned int v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
    return v3(a1, v2);
  }
  else
  {
    return swift_bridgeObjectRelease();
  }
}

void *initializeWithCopy for StaticAccessory.DeviceIdentifier(void *a1, void *a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_251F34DA0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for StaticAccessory.DeviceIdentifier(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_251E154A0((uint64_t)a1, type metadata accessor for StaticAccessory.DeviceIdentifier);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = sub_251F34DA0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithTake for StaticAccessory.DeviceIdentifier(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_251E154A0((uint64_t)a1, type metadata accessor for StaticAccessory.DeviceIdentifier);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_251F34DA0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_251E1AD14()
{
  uint64_t result = sub_251F34DA0();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticAccessory.DeviceIdentifier.CodingKeys()
{
  return &type metadata for StaticAccessory.DeviceIdentifier.CodingKeys;
}

ValueMetadata *type metadata accessor for StaticAccessory.DeviceIdentifier.BluetoothCodingKeys()
{
  return &type metadata for StaticAccessory.DeviceIdentifier.BluetoothCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAccessory.DeviceIdentifier.UuidCodingKeys()
{
  return &type metadata for StaticAccessory.DeviceIdentifier.UuidCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for StaticAccessory.SpecialMediaCategory.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251E1AEACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticAccessory.SpecialMediaCategory.CodingKeys()
{
  return &type metadata for StaticAccessory.SpecialMediaCategory.CodingKeys;
}

ValueMetadata *type metadata accessor for StaticAccessory.SpecialMediaCategory.AirPortCodingKeys()
{
  return &type metadata for StaticAccessory.SpecialMediaCategory.AirPortCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAccessory.SpecialMediaCategory.AppleTVCodingKeys()
{
  return &type metadata for StaticAccessory.SpecialMediaCategory.AppleTVCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAccessory.SpecialMediaCategory.AudioReceiverCodingKeys()
{
  return &type metadata for StaticAccessory.SpecialMediaCategory.AudioReceiverCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAccessory.SpecialMediaCategory.CameraCodingKeys()
{
  return &type metadata for StaticAccessory.SpecialMediaCategory.CameraCodingKeys;
}

unsigned char *_s13HomeDataModel15StaticAccessoryV16DeviceIdentifierO19BluetoothCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x251E1AFC0);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticAccessory.SpecialMediaCategory.HomePodCodingKeys()
{
  return &type metadata for StaticAccessory.SpecialMediaCategory.HomePodCodingKeys;
}

unsigned char *_s13HomeDataModel15StaticAccessoryV16DeviceIdentifierO10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251E1B0C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticAccessory.SpecialMediaCategory.SiriEndpointCodingKeys()
{
  return &type metadata for StaticAccessory.SpecialMediaCategory.SiriEndpointCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAccessory.SpecialMediaCategory.SpeakerCodingKeys()
{
  return &type metadata for StaticAccessory.SpecialMediaCategory.SpeakerCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for StaticAccessory.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 27 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 27) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE4)
  {
    unsigned int v6 = ((a2 - 229) >> 8) + 1;
    *uint64_t result = a2 + 27;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251E1B1D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 27;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticAccessory.CodingKeys()
{
  return &type metadata for StaticAccessory.CodingKeys;
}

unint64_t sub_251E1B214()
{
  unint64_t result = qword_269BA3D40;
  if (!qword_269BA3D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3D40);
  }
  return result;
}

unint64_t sub_251E1B26C()
{
  unint64_t result = qword_269BA3D48;
  if (!qword_269BA3D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3D48);
  }
  return result;
}

unint64_t sub_251E1B2C4()
{
  unint64_t result = qword_269BA3D50;
  if (!qword_269BA3D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3D50);
  }
  return result;
}

unint64_t sub_251E1B31C()
{
  unint64_t result = qword_269BA3D58;
  if (!qword_269BA3D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3D58);
  }
  return result;
}

unint64_t sub_251E1B374()
{
  unint64_t result = qword_269BA3D60;
  if (!qword_269BA3D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3D60);
  }
  return result;
}

unint64_t sub_251E1B3CC()
{
  unint64_t result = qword_269BA3D68;
  if (!qword_269BA3D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3D68);
  }
  return result;
}

unint64_t sub_251E1B424()
{
  unint64_t result = qword_269BA3D70;
  if (!qword_269BA3D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3D70);
  }
  return result;
}

unint64_t sub_251E1B47C()
{
  unint64_t result = qword_269BA3D78;
  if (!qword_269BA3D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3D78);
  }
  return result;
}

unint64_t sub_251E1B4D4()
{
  unint64_t result = qword_269BA3D80;
  if (!qword_269BA3D80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3D80);
  }
  return result;
}

unint64_t sub_251E1B52C()
{
  unint64_t result = qword_269BA3D88;
  if (!qword_269BA3D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3D88);
  }
  return result;
}

unint64_t sub_251E1B584()
{
  unint64_t result = qword_269BA3D90;
  if (!qword_269BA3D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3D90);
  }
  return result;
}

unint64_t sub_251E1B5DC()
{
  unint64_t result = qword_269BA3D98;
  if (!qword_269BA3D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3D98);
  }
  return result;
}

unint64_t sub_251E1B634()
{
  unint64_t result = qword_269BA3DA0;
  if (!qword_269BA3DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3DA0);
  }
  return result;
}

unint64_t sub_251E1B68C()
{
  unint64_t result = qword_269BA3DA8;
  if (!qword_269BA3DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3DA8);
  }
  return result;
}

unint64_t sub_251E1B6E4()
{
  unint64_t result = qword_269BA3DB0;
  if (!qword_269BA3DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3DB0);
  }
  return result;
}

unint64_t sub_251E1B73C()
{
  unint64_t result = qword_269BA3DB8;
  if (!qword_269BA3DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3DB8);
  }
  return result;
}

unint64_t sub_251E1B794()
{
  unint64_t result = qword_269BA3DC0;
  if (!qword_269BA3DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3DC0);
  }
  return result;
}

unint64_t sub_251E1B7EC()
{
  unint64_t result = qword_269BA3DC8;
  if (!qword_269BA3DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3DC8);
  }
  return result;
}

unint64_t sub_251E1B844()
{
  unint64_t result = qword_269BA3DD0;
  if (!qword_269BA3DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3DD0);
  }
  return result;
}

unint64_t sub_251E1B89C()
{
  unint64_t result = qword_269BA3DD8;
  if (!qword_269BA3DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3DD8);
  }
  return result;
}

unint64_t sub_251E1B8F4()
{
  unint64_t result = qword_269BA3DE0;
  if (!qword_269BA3DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3DE0);
  }
  return result;
}

unint64_t sub_251E1B94C()
{
  unint64_t result = qword_269BA3DE8;
  if (!qword_269BA3DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3DE8);
  }
  return result;
}

unint64_t sub_251E1B9A4()
{
  unint64_t result = qword_269BA3DF0;
  if (!qword_269BA3DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3DF0);
  }
  return result;
}

unint64_t sub_251E1B9FC()
{
  unint64_t result = qword_269BA3DF8;
  if (!qword_269BA3DF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3DF8);
  }
  return result;
}

unint64_t sub_251E1BA54()
{
  unint64_t result = qword_269BA3E00;
  if (!qword_269BA3E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3E00);
  }
  return result;
}

unint64_t sub_251E1BAAC()
{
  unint64_t result = qword_269BA3E08;
  if (!qword_269BA3E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3E08);
  }
  return result;
}

unint64_t sub_251E1BB04()
{
  unint64_t result = qword_269BA3E10;
  if (!qword_269BA3E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3E10);
  }
  return result;
}

unint64_t sub_251E1BB5C()
{
  unint64_t result = qword_269BA3E18;
  if (!qword_269BA3E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3E18);
  }
  return result;
}

unint64_t sub_251E1BBB4()
{
  unint64_t result = qword_269BA3E20;
  if (!qword_269BA3E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3E20);
  }
  return result;
}

unint64_t sub_251E1BC0C()
{
  unint64_t result = qword_269BA3E28;
  if (!qword_269BA3E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3E28);
  }
  return result;
}

unint64_t sub_251E1BC64()
{
  unint64_t result = qword_269BA3E30;
  if (!qword_269BA3E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3E30);
  }
  return result;
}

uint64_t sub_251E1BCB8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000251F71E40 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x654D656369766564 && a2 == 0xEE00617461646174 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6564644165746164 && a2 == 0xE900000000000064 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6F4E72657474616DLL && a2 == 0xEC00000044496564 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x656C62756F447369 && a2 == 0xEC00000068676948 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6449656D6F68 && a2 == 0xE600000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x7364496D6F6F72 && a2 == 0xE700000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x656D614E6D6F6F72 && a2 == 0xE800000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000251F70F90 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x69726F7661467369 && a2 == 0xEA00000000006574 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000251F70F70 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000251F718F0 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000251F71E60 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x8000000251F6A5B0 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000251F71E80 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000251F71EA0 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000251F6FB40 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000251F71EC0 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000251F71EE0 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0x72427341776F6873 && a2 == 0xEC00000065676469 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000251F71F00 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else if (a1 == 0x537265776F507369 && a2 == 0xEC00000070697274 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 23;
  }
  else if (a1 == 0x6572617774666F73 && a2 == 0xEE00657461647055 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 24;
  }
  else if (a1 == 0x6168636165527369 && a2 == 0xEB00000000656C62 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 25;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000251F71010 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 26;
  }
  else if (a1 == 0x736D6F74706D7973 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 27;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 27;
    }
    else {
      return 28;
    }
  }
}

uint64_t sub_251E1C7CC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x74726F50726961 && a2 == 0xE700000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x5654656C707061 && a2 == 0xE700000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6365526F69647561 && a2 == 0xED00007265766965 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6172656D6163 && a2 == 0xE600000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x646F50656D6F68 && a2 == 0xE700000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x70646E4569726973 && a2 == 0xEC000000746E696FLL || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x72656B61657073 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_251E1CAE8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000015 && a2 == 0x8000000251F71F20 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000251F71F40)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_251E1CBD4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746F6F7465756C62 && a2 == 0xE900000000000068;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1684632949 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_251E1CCC4()
{
  unint64_t result = qword_269BA3E38;
  if (!qword_269BA3E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3E38);
  }
  return result;
}

uint64_t sub_251E1CD18@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_251E10498(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

unint64_t sub_251E1CD34()
{
  unint64_t result = qword_26B21F190;
  if (!qword_26B21F190)
  {
    sub_251A1A568(255, &qword_26B21F188);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B21F190);
  }
  return result;
}

uint64_t sub_251E1CD90(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_251E1CDF8()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_251E1CE08()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_251E1CE18()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 24) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 48) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);
  return MEMORY[0x270FA0238](v0, v4, v5);
}

uint64_t sub_251E1CEA0()
{
  sub_251F35960();
  return v1;
}

uint64_t sub_251E1CF4C()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v28 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v3 = (v28 + 48) & ~v28;
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = (int *)type metadata accessor for StaticAccessory(0);
  uint64_t v27 = *(unsigned __int8 *)(*((void *)v5 - 1) + 80);
  uint64_t v6 = (v3 + v4 + v27) & ~v27;
  uint64_t v25 = *(void *)(*((void *)v5 - 1) + 64);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  uint64_t v7 = v0 + v6;
  uint64_t v8 = sub_251F34DA0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  v10(v0 + v6, v8);
  swift_bridgeObjectRelease();
  uint64_t v11 = v0 + v6 + v5[6];
  type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  uint64_t v26 = v6;
  if (swift_getEnumCaseMultiPayload() == 1) {
    v10(v11, v8);
  }
  else {
    swift_bridgeObjectRelease();
  }
  uint64_t v12 = v7 + v5[7];
  uint64_t v13 = type metadata accessor for StaticDeviceMetadata();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v12, 1, v13))
  {
    v10(v12, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v14 = v7 + v5[8];
  uint64_t v15 = sub_251F34D20();
  uint64_t v24 = *(void *)(v15 - 8);
  int v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
  if (!v23(v14, 1, v15)) {
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v14, v15);
  }
  v10(v7 + v5[11], v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v16 = v7 + v5[21];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v16, 1, v8)) {
    v10(v16, v8);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v17 = v7 + v5[28];
  uint64_t v18 = type metadata accessor for StaticSoftwareUpdate(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v17, 1, v18))
  {
    v10(v17, v8);
    uint64_t v19 = v17 + *(int *)(v18 + 20);
    type metadata accessor for StaticSoftwareUpdate.Kind(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v21 = v19 + *(int *)(type metadata accessor for StaticSoftwareUpdateMetadata(0) + 20);
      if (!v23(v21, 1, v15)) {
        (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v21, v15);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      if (EnumCaseMultiPayload) {
        goto LABEL_19;
      }
      v10(v19, v8);
      type metadata accessor for StaticHH2Update(0);
    }
    swift_bridgeObjectRelease();
  }
LABEL_19:
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, v26 + v25, v28 | v27 | 7);
}

uint64_t sub_251E1D460@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for StaticAccessory(0);
  return sub_251E10364(a1);
}

uint64_t sub_251E1D578(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[23] = a2;
  v3[24] = a3;
  v3[22] = a1;
  return MEMORY[0x270FA2498](sub_251E1D59C, 0, 0);
}

uint64_t sub_251E1D59C()
{
  uint64_t v1 = v0;
  unint64_t v2 = *(void *)(v0 + 184);
  if (v2 >> 62) {
    goto LABEL_57;
  }
  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v3) {
    goto LABEL_58;
  }
  do
  {
    uint64_t v84 = (_OWORD *)(v1 + 56);
    uint64_t v75 = (_OWORD *)(v1 + 88);
    uint64_t v82 = (unsigned __int8 *)(v1 + 16);
    uint64_t v4 = *(void *)(v1 + 184);
    uint64_t v73 = v3;
    char v5 = qword_27025FE88;
    *(void *)(v1 + 200) = qword_27025FE88;
    uint64_t v6 = (void *)sub_2519F95BC(MEMORY[0x263F8EE78]);
    char v7 = v5 & 1;
    uint64_t v8 = v73;
    *(unsigned char *)(v1 + 288) = v7;
    unint64_t v74 = v2 & 0xC000000000000001;
    uint64_t v71 = v4 + 32;
    size_t v81 = (_OWORD *)(v1 + 24);
    swift_bridgeObjectRetain();
    uint64_t v9 = 0;
    while (1)
    {
      id v13 = v74 ? (id)MEMORY[0x2533AB3A0](v9, *(void *)(v1 + 184)) : *(id *)(v71 + 8 * v9);
      id v14 = v13;
      BOOL v15 = __OFADD__(v9, 1);
      uint64_t v16 = v9 + 1;
      if (v15) {
        break;
      }
      id v17 = objc_msgSend(v13, sel_uniqueIdentifier);
      uint64_t v83 = sub_251F34DA0();
      uint64_t v18 = *(void **)(v83 - 8);
      unint64_t v2 = swift_task_alloc();
      sub_251F34D80();

      char v79 = v14;
      uint64_t v80 = v16;
      unint64_t v78 = v2;
      if (!v6[2] || (unint64_t v19 = sub_2519FE584(v2), (v20 & 1) == 0))
      {
        uint64_t v34 = v1;
        uint64_t v35 = swift_task_alloc();
        uint64_t v1 = v18[2];
        ((void (*)(uint64_t, unint64_t, uint64_t))v1)(v35, v2, v83);
        swift_bridgeObjectRetain();
        int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v38 = sub_2519FE584(v35);
        uint64_t v39 = v6[2];
        BOOL v40 = (v37 & 1) == 0;
        uint64_t v41 = v39 + v40;
        if (__OFADD__(v39, v40)) {
          goto LABEL_55;
        }
        unint64_t v2 = v37;
        uint64_t v77 = v35;
        if (v6[3] >= v41)
        {
          if (isUniquelyReferenced_nonNull_native)
          {
            uint64_t v42 = v6;
            uint64_t v45 = *(void *)(v34 + 192);
            if ((v37 & 1) == 0) {
              goto LABEL_26;
            }
          }
          else
          {
            sub_251A11E24();
            uint64_t v42 = v6;
            uint64_t v45 = *(void *)(v34 + 192);
            if ((v2 & 1) == 0) {
              goto LABEL_26;
            }
          }
        }
        else
        {
          sub_251A014DC(v41, isUniquelyReferenced_nonNull_native);
          uint64_t v42 = v6;
          unint64_t v43 = sub_2519FE584(v35);
          if ((v2 & 1) != (v44 & 1))
          {
LABEL_49:
            return sub_251F36BA0();
          }
          unint64_t v38 = v43;
          uint64_t v45 = *(void *)(v34 + 192);
          if ((v2 & 1) == 0)
          {
LABEL_26:
            v42[(v38 >> 6) + 8] |= 1 << v38;
            ((void (*)(unint64_t, uint64_t, uint64_t))v1)(v42[6] + v18[9] * v38, v77, v83);
            *(void *)(v42[7] + 8 * v38) = v45;
            uint64_t v46 = v42[2];
            BOOL v15 = __OFADD__(v46, 1);
            uint64_t v47 = v46 + 1;
            if (v15) {
              goto LABEL_56;
            }
            uint64_t v6 = v42;
            void v42[2] = v47;
            goto LABEL_5;
          }
        }
        uint64_t v6 = v42;
        uint64_t v10 = v42[7];
        swift_bridgeObjectRelease();
        *(void *)(v10 + 8 * v38) = v45;
LABEL_5:
        swift_bridgeObjectRelease();
        uint64_t v11 = (void (*)(uint64_t, uint64_t))v18[1];
        uint64_t v12 = v83;
        v11(v77, v83);
        uint64_t v1 = v34;
        uint64_t v8 = v73;
        goto LABEL_6;
      }
      uint64_t v72 = v6;
      uint64_t v21 = v6[7];
      uint64_t v22 = v18;
      int v23 = *(void **)(v21 + 8 * v19);
      uint64_t v24 = swift_task_alloc();
      uint64_t v76 = v22;
      ((void (*)(uint64_t, unint64_t, uint64_t))v22[2])(v24, v2, v83);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v25 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v85 = v23;
      swift_bridgeObjectRetain();
      sub_251AF5E90((uint64_t)v82);
      if (*(void *)(v1 + 48))
      {
        uint64_t v26 = *v82;
        sub_251A0D578(v81, v84);
        unint64_t v2 = sub_2519FE568(v26);
        uint64_t v28 = v23[2];
        BOOL v29 = (v27 & 1) == 0;
        uint64_t v30 = v28 + v29;
        if (__OFADD__(v28, v29))
        {
LABEL_52:
          __break(1u);
LABEL_53:
          __break(1u);
          break;
        }
        char v31 = v27;
        if (v23[3] >= v30)
        {
          if (v25)
          {
            if ((v27 & 1) == 0) {
              goto LABEL_34;
            }
          }
          else
          {
            sub_251A11E30();
            if ((v31 & 1) == 0) {
              goto LABEL_34;
            }
          }
        }
        else
        {
          sub_251A014E8(v30, v25);
          unint64_t v32 = sub_2519FE568(v26);
          if ((v31 & 1) != (v33 & 1)) {
            goto LABEL_49;
          }
          unint64_t v2 = v32;
          if ((v31 & 1) == 0)
          {
LABEL_34:
            v23[(v2 >> 6) + 8] |= 1 << v2;
            *(unsigned char *)(v23[6] + v2) = v26;
            sub_251A0D578(v84, (_OWORD *)(v23[7] + 32 * v2));
            uint64_t v50 = v23[2];
            BOOL v15 = __OFADD__(v50, 1);
            uint64_t v51 = v50 + 1;
            int v52 = v82;
            if (!v15)
            {
              v23[2] = v51;
              goto LABEL_37;
            }
            goto LABEL_53;
          }
        }
        uint64_t v48 = v75;
        sub_251A0D578(v84, v75);
        char v49 = (_OWORD *)(v23[7] + 32 * v2);
LABEL_36:
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v49);
        sub_251A0D578(v48, v49);
        int v52 = v82;
LABEL_37:
        while (1)
        {
          sub_251AF5E90((uint64_t)v52);
          if (!*(void *)(v1 + 48)) {
            break;
          }
          uint64_t v53 = *v52;
          sub_251A0D578(v81, v84);
          unint64_t v55 = sub_2519FE568(v53);
          uint64_t v56 = v23[2];
          BOOL v57 = (v54 & 1) == 0;
          uint64_t v58 = v56 + v57;
          if (__OFADD__(v56, v57)) {
            goto LABEL_52;
          }
          char v59 = v54;
          if (v23[3] < v58)
          {
            sub_251A014E8(v58, 1);
            int v23 = v85;
            unint64_t v60 = sub_2519FE568(v53);
            if ((v59 & 1) != (v61 & 1)) {
              goto LABEL_49;
            }
            unint64_t v55 = v60;
          }
          if (v59)
          {
            uint64_t v48 = v75;
            sub_251A0D578(v84, v75);
            char v49 = (_OWORD *)(v23[7] + 32 * v55);
            goto LABEL_36;
          }
          v23[(v55 >> 6) + 8] |= 1 << v55;
          *(unsigned char *)(v23[6] + v55) = v53;
          sub_251A0D578(v84, (_OWORD *)(v23[7] + 32 * v55));
          uint64_t v62 = v23[2];
          BOOL v15 = __OFADD__(v62, 1);
          uint64_t v63 = v62 + 1;
          int v52 = v82;
          if (v15) {
            goto LABEL_53;
          }
          v23[2] = v63;
        }
      }
      swift_bridgeObjectRelease();
      sub_251A1E630();
      swift_release();
      swift_bridgeObjectRelease();
      char v64 = swift_isUniquelyReferenced_nonNull_native();
      sub_251A0BCE8((uint64_t)v23, v24, v64);
      uint64_t v6 = v72;
      swift_bridgeObjectRelease();
      uint64_t v11 = (void (*)(uint64_t, uint64_t))v76[1];
      uint64_t v12 = v83;
      v11(v24, v83);
LABEL_6:
      unint64_t v2 = v78;
      *(void *)(v1 + 208) = v6;
      swift_task_dealloc();
      v11(v78, v12);

      swift_task_dealloc();
      uint64_t v9 = v80;
      if (v80 == v8)
      {
        swift_bridgeObjectRelease();
        *(void *)(v1 + 216) = sub_251F35C80();
        *(void *)(v1 + 224) = sub_251F35C70();
        uint64_t v65 = sub_251F35C00();
        uint64_t v67 = v66;
        uint64_t v68 = sub_251E1DDA8;
        goto LABEL_59;
      }
    }
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
LABEL_57:
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_251F366C0();
    swift_bridgeObjectRelease();
  }
  while (v3);
LABEL_58:
  *(void *)(v1 + 248) = sub_251F35C80();
  *(void *)(v1 + 256) = sub_251F35C70();
  uint64_t v65 = sub_251F35C00();
  uint64_t v67 = v70;
  uint64_t v68 = sub_251E1E0B4;
LABEL_59:
  return MEMORY[0x270FA2498](v68, v65, v67);
}

uint64_t sub_251E1DDA8()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251E1DE40, 0, 0);
}

uint64_t sub_251E1DE40()
{
  *(void *)(v0 + 232) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251E1DECC, v2, v1);
}

uint64_t sub_251E1DECC()
{
  uint64_t v2 = *(void *)(v0 + 200);
  uint64_t v1 = *(void *)(v0 + 208);
  swift_release();
  *(void *)(v0 + 144) = v1;
  *(unsigned char *)(v0 + 152) = *(unsigned char *)(v0 + 288);
  *(void *)(v0 + 160) = v2;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 240) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_251E1DF9C;
  uint64_t v4 = *(void *)(v0 + 176);
  return DataModel.write(characteristicValueSet:home:)(v4, (uint64_t *)(v0 + 144), 0);
}

uint64_t sub_251E1DF9C()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_251BEEE5C, 0, 0);
}

uint64_t sub_251E1E0B4()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251E1E14C, 0, 0);
}

uint64_t sub_251E1E14C()
{
  *(void *)(v0 + 264) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251E1E1D8, v2, v1);
}

uint64_t sub_251E1E1D8()
{
  swift_release();
  *(void *)(v0 + 272) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251E1E24C, 0, 0);
}

uint64_t sub_251E1E24C()
{
  *(void *)(v0 + 280) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251E1E2D8, v2, v1);
}

uint64_t sub_251E1E2D8()
{
  uint64_t v1 = v0[34];
  uint64_t v2 = v0[22];
  swift_release();
  swift_getKeyPath();
  v0[21] = v1;
  sub_251AD2C08();
  sub_251F34F10();
  swift_release();
  uint64_t v3 = v1 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentStateSnapshot;
  swift_beginAccess();
  sub_251B75C78(v3, v2);
  return MEMORY[0x270FA2498](sub_251E1E3C4, 0, 0);
}

uint64_t sub_251E1E3C4()
{
  uint64_t v1 = *(void *)(v0 + 176);
  uint64_t v2 = type metadata accessor for StateSnapshot(0);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 0, 1, v2);
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_251E1E460(uint64_t a1, uint64_t a2, _OWORD *a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 128) = a4;
  *(void *)(v5 + 136) = a5;
  *(void *)(v5 + 120) = a1;
  *(void *)(v5 + 144) = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3A70);
  *(void *)(v5 + 152) = swift_task_alloc();
  long long v7 = a3[1];
  *(_OWORD *)(v5 + 160) = *a3;
  *(_OWORD *)(v5 + 176) = v7;
  sub_251F35C80();
  *(void *)(v5 + 192) = sub_251F35C70();
  uint64_t v9 = sub_251F35C00();
  *(void *)(v5 + 200) = v9;
  *(void *)(v5 + 208) = v8;
  return MEMORY[0x270FA2498](sub_251E1E53C, v9, v8);
}

uint64_t sub_251E1E53C()
{
  unint64_t v1 = *(void *)(isUniquelyReferenced_nonNull_native + 128);
  char v2 = qword_27025FEB0;
  uint64_t v3 = sub_2519F95BC(MEMORY[0x263F8EE78]);
  *(unsigned char *)(isUniquelyReferenced_nonNull_native + 280) = v2 & 1;
  if (v1 >> 62) {
    goto LABEL_56;
  }
  uint64_t v4 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  uint64_t v72 = v4;
  if (!v4) {
    goto LABEL_57;
  }
  do
  {
    uint64_t v5 = 0;
    uint64_t v75 = (_OWORD *)(isUniquelyReferenced_nonNull_native + 88);
    uint64_t v6 = (unsigned __int8 *)(isUniquelyReferenced_nonNull_native + 16);
    unint64_t v73 = v1 & 0xC000000000000001;
    uint64_t v70 = *(void *)(isUniquelyReferenced_nonNull_native + 128) + 32;
    unint64_t v78 = (_OWORD *)(isUniquelyReferenced_nonNull_native + 24);
    uint64_t v7 = v72;
    uint64_t v80 = (unsigned __int8 *)(isUniquelyReferenced_nonNull_native + 16);
    size_t v81 = (_OWORD *)(isUniquelyReferenced_nonNull_native + 56);
    while (1)
    {
      if (v73)
      {
        id v11 = (id)MEMORY[0x2533AB3A0](v5, *(void *)(isUniquelyReferenced_nonNull_native + 128));
        BOOL v12 = __OFADD__(v5++, 1);
        if (v12) {
          goto LABEL_53;
        }
      }
      else
      {
        id v11 = *(id *)(v70 + 8 * v5);
        BOOL v12 = __OFADD__(v5++, 1);
        if (v12) {
          goto LABEL_53;
        }
      }
      uint64_t v13 = v7;
      uint64_t v77 = v11;
      id v14 = objc_msgSend(v11, sel_uniqueIdentifier);
      uint64_t v79 = sub_251F34DA0();
      BOOL v15 = *(void **)(v79 - 8);
      uint64_t v16 = swift_task_alloc();
      sub_251F34D80();

      uint64_t v76 = v16;
      if (*(void *)(v3 + 16))
      {
        unint64_t v17 = sub_2519FE584(v16);
        if (v18) {
          break;
        }
      }
      uint64_t v30 = isUniquelyReferenced_nonNull_native;
      uint64_t v31 = swift_task_alloc();
      unint64_t v32 = (void (*)(uint64_t, uint64_t, uint64_t))v15[2];
      v32(v31, v16, v79);
      swift_bridgeObjectRetain();
      uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v83 = v3;
      unint64_t v33 = v3;
      uint64_t v3 = v31;
      unint64_t v35 = sub_2519FE584(v31);
      uint64_t v36 = *(void *)(v33 + 16);
      BOOL v37 = (v34 & 1) == 0;
      uint64_t v38 = v36 + v37;
      if (__OFADD__(v36, v37)) {
        goto LABEL_54;
      }
      char v39 = v34;
      if (*(void *)(v33 + 24) >= v38)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          unint64_t v1 = v33;
          uint64_t v42 = *(void *)(v30 + 136);
          if ((v34 & 1) == 0) {
            goto LABEL_27;
          }
        }
        else
        {
          sub_251A11E24();
          unint64_t v1 = v83;
          uint64_t v42 = *(void *)(v30 + 136);
          if ((v39 & 1) == 0) {
            goto LABEL_27;
          }
        }
      }
      else
      {
        sub_251A014DC(v38, isUniquelyReferenced_nonNull_native);
        unint64_t v1 = v83;
        unint64_t v40 = sub_2519FE584(v3);
        if ((v39 & 1) != (v41 & 1))
        {
LABEL_48:
          return sub_251F36BA0();
        }
        unint64_t v35 = v40;
        uint64_t v42 = *(void *)(v30 + 136);
        if ((v39 & 1) == 0)
        {
LABEL_27:
          uint64_t isUniquelyReferenced_nonNull_native = v1;
          *(void *)(v1 + 8 * (v35 >> 6) + 64) |= 1 << v35;
          v32(*(void *)(v1 + 48) + v15[9] * v35, v3, v79);
          *(void *)(*(void *)(v1 + 56) + 8 * v35) = v42;
          uint64_t v43 = *(void *)(v1 + 16);
          BOOL v12 = __OFADD__(v43, 1);
          uint64_t v44 = v43 + 1;
          if (v12) {
            goto LABEL_55;
          }
          *(void *)(v1 + 16) = v44;
          goto LABEL_5;
        }
      }
      uint64_t v8 = *(void *)(v1 + 56);
      swift_bridgeObjectRelease();
      *(void *)(v8 + 8 * v35) = v42;
LABEL_5:
      swift_bridgeObjectRelease();
      uint64_t v9 = (void (*)(uint64_t, uint64_t))v15[1];
      uint64_t v10 = v79;
      v9(v3, v79);
      uint64_t isUniquelyReferenced_nonNull_native = v30;
      uint64_t v7 = v72;
      uint64_t v6 = v80;
LABEL_6:
      swift_task_dealloc();
      v9(v76, v10);

      swift_task_dealloc();
      uint64_t v3 = v1;
      if (v5 == v7) {
        goto LABEL_57;
      }
    }
    unint64_t v71 = v3;
    unint64_t v19 = v15;
    char v20 = *(void **)(*(void *)(v3 + 56) + 8 * v17);
    unint64_t v74 = v19;
    uint64_t v3 = swift_task_alloc();
    ((void (*)(uint64_t, uint64_t, uint64_t))v19[2])(v3, v16, v79);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v1 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v82 = v20;
    swift_bridgeObjectRetain();
    sub_251AF5E90((uint64_t)v6);
    if (!*(void *)(isUniquelyReferenced_nonNull_native + 48)) {
      goto LABEL_47;
    }
    uint64_t v21 = *v6;
    sub_251A0D578(v78, v81);
    unint64_t v23 = sub_2519FE568(v21);
    uint64_t v24 = v20[2];
    BOOL v25 = (v22 & 1) == 0;
    uint64_t v26 = v24 + v25;
    if (__OFADD__(v24, v25))
    {
LABEL_51:
      __break(1u);
      goto LABEL_52;
    }
    char v27 = v22;
    if (v20[3] >= v26)
    {
      if (v1)
      {
        if ((v22 & 1) == 0) {
          goto LABEL_35;
        }
      }
      else
      {
        sub_251A11E30();
        if ((v27 & 1) == 0) {
          goto LABEL_35;
        }
      }
LABEL_31:
      uint64_t v45 = v75;
      sub_251A0D578(v81, v75);
      uint64_t v46 = (_OWORD *)(v20[7] + 32 * v23);
LABEL_37:
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v46);
      sub_251A0D578(v45, v46);
LABEL_38:
      while (1)
      {
        uint64_t v6 = v80;
        sub_251AF5E90((uint64_t)v80);
        if (!*(void *)(isUniquelyReferenced_nonNull_native + 48)) {
          break;
        }
        uint64_t v49 = *v80;
        sub_251A0D578(v78, v81);
        unint64_t v51 = sub_2519FE568(v49);
        uint64_t v52 = v20[2];
        BOOL v53 = (v50 & 1) == 0;
        uint64_t v54 = v52 + v53;
        if (__OFADD__(v52, v53)) {
          goto LABEL_51;
        }
        char v55 = v50;
        if (v20[3] < v54)
        {
          sub_251A014E8(v54, 1);
          char v20 = v82;
          unint64_t v56 = sub_2519FE568(v49);
          if ((v55 & 1) != (v57 & 1)) {
            goto LABEL_48;
          }
          unint64_t v51 = v56;
        }
        if (v55)
        {
          uint64_t v45 = v75;
          sub_251A0D578(v81, v75);
          uint64_t v46 = (_OWORD *)(v20[7] + 32 * v51);
          goto LABEL_37;
        }
        v20[(v51 >> 6) + 8] |= 1 << v51;
        *(unsigned char *)(v20[6] + v51) = v49;
        sub_251A0D578(v81, (_OWORD *)(v20[7] + 32 * v51));
        uint64_t v58 = v20[2];
        BOOL v12 = __OFADD__(v58, 1);
        uint64_t v59 = v58 + 1;
        if (v12) {
          goto LABEL_52;
        }
        v20[2] = v59;
      }
LABEL_47:
      swift_bridgeObjectRelease();
      sub_251A1E630();
      swift_release();
      swift_bridgeObjectRelease();
      char v60 = swift_isUniquelyReferenced_nonNull_native();
      sub_251A0BCE8((uint64_t)v20, v3, v60);
      unint64_t v1 = v71;
      swift_bridgeObjectRelease();
      uint64_t v9 = (void (*)(uint64_t, uint64_t))v74[1];
      uint64_t v10 = v79;
      v9(v3, v79);
      uint64_t v7 = v13;
      goto LABEL_6;
    }
    sub_251A014E8(v26, v1);
    unint64_t v28 = sub_2519FE568(v21);
    if ((v27 & 1) != (v29 & 1)) {
      goto LABEL_48;
    }
    unint64_t v23 = v28;
    if (v27) {
      goto LABEL_31;
    }
LABEL_35:
    v20[(v23 >> 6) + 8] |= 1 << v23;
    *(unsigned char *)(v20[6] + v23) = v21;
    sub_251A0D578(v81, (_OWORD *)(v20[7] + 32 * v23));
    uint64_t v47 = v20[2];
    BOOL v12 = __OFADD__(v47, 1);
    uint64_t v48 = v47 + 1;
    if (!v12)
    {
      v20[2] = v48;
      goto LABEL_38;
    }
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    swift_bridgeObjectRetain_n();
    uint64_t v62 = sub_251F366C0();
    swift_bridgeObjectRelease();
    uint64_t v72 = v62;
  }
  while (v62);
LABEL_57:
  swift_bridgeObjectRelease();
  if (*(void *)(isUniquelyReferenced_nonNull_native + 168) >= 2uLL
    && *(void *)(isUniquelyReferenced_nonNull_native + 184))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v63 = CharacteristicValueSet.batchWrites.getter();
    swift_bridgeObjectRelease();
    if (v63 >> 62)
    {
      sub_251E1F5BC();
      swift_bridgeObjectRetain();
      uint64_t v64 = sub_251F36690();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_251F36B30();
      sub_251E1F5BC();
      uint64_t v64 = v63;
    }
    *(void *)(isUniquelyReferenced_nonNull_native + 216) = v64;
    swift_bridgeObjectRelease();
    *(_DWORD *)(isUniquelyReferenced_nonNull_native + 284) = dword_27025FED8;
    if (qword_269B9C2E8 != -1) {
      swift_once();
    }
    uint64_t v65 = *(void *)(isUniquelyReferenced_nonNull_native + 200);
    uint64_t v66 = *(void *)(isUniquelyReferenced_nonNull_native + 208);
    uint64_t v67 = sub_251E1EE30;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v68 = swift_task_alloc();
    *(void *)(isUniquelyReferenced_nonNull_native + 272) = v68;
    *(void *)uint64_t v68 = isUniquelyReferenced_nonNull_native;
    *(void *)(v68 + 8) = sub_251E1F42C;
    long long v69 = *(_OWORD *)(isUniquelyReferenced_nonNull_native + 120);
    *(void *)(v68 + 192) = *(void *)(isUniquelyReferenced_nonNull_native + 136);
    *(_OWORD *)(v68 + 176) = v69;
    uint64_t v67 = sub_251E1D59C;
    uint64_t v65 = 0;
    uint64_t v66 = 0;
  }
  return MEMORY[0x270FA2498](v67, v65, v66);
}

uint64_t sub_251E1EE30()
{
  type metadata accessor for WidgetDataModel();
  v0[28] = swift_initStaticObject();
  uint64_t v1 = v0[25];
  uint64_t v2 = v0[26];
  return MEMORY[0x270FA2498](sub_251E1EEA4, v1, v2);
}

uint64_t sub_251E1EEA4()
{
  int v1 = *(_DWORD *)(v0 + 284);
  uint64_t v3 = *(void *)(v0 + 176);
  uint64_t v2 = *(void *)(v0 + 184);
  uint64_t v5 = *(void *)(v0 + 160);
  uint64_t v4 = *(void *)(v0 + 168);
  uint64_t v6 = *(void *)(v0 + 152);
  *(void *)uint64_t v6 = *(void *)(v0 + 216);
  *(void *)(v6 + 8) = v5;
  *(void *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v3;
  *(void *)(v6 + 32) = v2;
  *(_DWORD *)(v6 + 40) = v1;
  swift_storeEnumTagMultiPayload();
  *(void *)(v0 + 232) = qword_269B9F038;
  uint64_t v9 = (uint64_t (__cdecl *)())((char *)&dword_269B9F070 + dword_269B9F070);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 240) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_251E1EF80;
  return v9();
}

uint64_t sub_251E1EF80(uint64_t a1)
{
  uint64_t v2 = (void *)*v1;
  uint64_t v3 = (void *)*v1;
  v2[31] = a1;
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, double))((char *)&dword_269BA3A88 + dword_269BA3A88);
  swift_retain();
  uint64_t v4 = (void *)swift_task_alloc();
  v2[32] = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_251E1F10C;
  uint64_t v5 = v2[19];
  uint64_t v6 = v2[15];
  return v8(v6, v5, 20.0);
}

uint64_t sub_251E1F10C()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 232);
  *(void *)(*(void *)v1 + 264) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0) {
    uint64_t v3 = sub_251E1F31C;
  }
  else {
    uint64_t v3 = sub_251E1F258;
  }
  return MEMORY[0x270FA2498](v3, v2, 0);
}

uint64_t sub_251E1F258()
{
  return MEMORY[0x270FA2498](sub_251E1F270, *(void *)(v0 + 200), *(void *)(v0 + 208));
}

uint64_t sub_251E1F270()
{
  uint64_t v1 = *(void *)(v0 + 120);
  swift_release();
  uint64_t v2 = type metadata accessor for StateSnapshot(0);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 0, 1, v2);
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_251E1F31C()
{
  uint64_t v1 = *(void *)(v0 + 200);
  uint64_t v2 = *(void *)(v0 + 208);
  return MEMORY[0x270FA2498](sub_251E1F380, v1, v2);
}

uint64_t sub_251E1F380()
{
  uint64_t v1 = *(void *)(v0 + 120);
  swift_release();
  uint64_t v2 = type metadata accessor for StateSnapshot(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_251E1F42C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 208);
  uint64_t v3 = *(void *)(v1 + 200);
  return MEMORY[0x270FA2498](sub_251E1F54C, v3, v2);
}

uint64_t sub_251E1F54C()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

unint64_t sub_251E1F5BC()
{
  unint64_t result = qword_269B9F028;
  if (!qword_269B9F028)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_269B9F028);
  }
  return result;
}

uint64_t HMHomeManager.homesSortOrder.getter()
{
  return sub_251B1D3D4(0x486465726564724FLL, 0xEC00000073656D6FLL);
}

uint64_t sub_251E1F61C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_251F35CD0();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_251F35CC0();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  sub_251E20520(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_251F35C00();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t static HMHomeManager.homesSortedByKey.getter()
{
  return 0x486465726564724FLL;
}

void *static HMHomeManager.applicationDataWriteCompletion.getter()
{
  swift_beginAccess();
  uint64_t v0 = off_269BA3E60;
  sub_251AE9658((uint64_t)off_269BA3E60);
  return v0;
}

uint64_t static HMHomeManager.applicationDataWriteCompletion.setter(void *a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v4 = off_269BA3E60;
  off_269BA3E60 = a1;
  qword_269BA3E68 = a2;
  return sub_251A27C7C((uint64_t)v4);
}

uint64_t (*static HMHomeManager.applicationDataWriteCompletion.modify())()
{
  return j__swift_endAccess;
}

uint64_t sub_251E1F8C8()
{
  uint64_t v0 = (void *)swift_bridgeObjectRetain();
  sub_251E1F97C(v0, (void *)0x486465726564724FLL, (void *)0xEC00000073656D6FLL);
  return swift_bridgeObjectRelease();
}

uint64_t HMHomeManager.homesSortOrder.setter(void *a1)
{
  sub_251E1F97C(a1, (void *)0x486465726564724FLL, (void *)0xEC00000073656D6FLL);
  return swift_bridgeObjectRelease();
}

uint64_t sub_251E1F97C(void *a1, void *a2, void *a3)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = objc_msgSend(v3, sel_applicationData);
  uint64_t v47 = MEMORY[0x263F8EE78];
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v12 - 8);
  id v14 = (char *)v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = a1[2];
  uint64_t v39 = ObjectType;
  unint64_t v40 = v3;
  v37[3] = a3;
  uint64_t v38 = v10;
  v37[1] = a1;
  v37[2] = a2;
  v37[0] = v11;
  if (v15)
  {
    uint64_t v16 = sub_251F34DA0();
    uint64_t v17 = *(void *)(v16 - 8);
    uint64_t v18 = v17;
    unint64_t v19 = (char *)a1 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
    uint64_t v43 = *(void *)(v17 + 72);
    uint64_t v46 = (void (**)(char *, void, uint64_t, uint64_t))(v17 + 56);
    uint64_t v21 = v17 + 16;
    char v20 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
    uint64_t v44 = v21;
    uint64_t v45 = v20;
    uint64_t v41 = v18 + 8;
    uint64_t v42 = v18 + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      v45(v14, v19, v16);
      (*v46)(v14, 0, 1, v16);
      uint64_t v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48))(v14, 1, v16);
      if (v22 == 1) {
        break;
      }
      MEMORY[0x270FA5388](v22);
      uint64_t v24 = (char *)v37 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v24, v14, v16);
      sub_251F34D40();
      sub_251F356C0();
      swift_bridgeObjectRelease();
      uint64_t v25 = (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v24, v16);
      MEMORY[0x2533AA9D0](v25);
      if (*(void *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_251F35B10();
      }
      sub_251F35B70();
      sub_251F35AE0();
      v19 += v43;
      if (!--v15) {
        goto LABEL_9;
      }
    }
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_9:
    uint64_t v26 = sub_251F34DA0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v14, 1, 1, v26);
  }
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB50);
  char v27 = (void *)sub_251F35AA0();
  unint64_t v28 = (void *)sub_251F356C0();
  id v29 = v37[0];
  objc_msgSend(v37[0], sel_setObject_forKeyedSubscript_, v27, v28);

  swift_bridgeObjectRelease();
  uint64_t v30 = sub_251F35CD0();
  uint64_t v31 = (uint64_t)v38;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v38, 1, 1, v30);
  unint64_t v32 = (void *)swift_allocObject();
  void v32[2] = 0;
  v32[3] = 0;
  uint64_t v34 = v39;
  unint64_t v33 = v40;
  v32[4] = v40;
  v32[5] = v34;
  id v35 = v33;
  sub_251E1F61C(v31, (uint64_t)&unk_269BA3E78, (uint64_t)v32);
  return swift_release();
}

uint64_t (*HMHomeManager.homesSortOrder.modify(void *a1))(void **a1, char a2)
{
  a1[1] = v1;
  *a1 = sub_251B1D3D4(0x486465726564724FLL, 0xEC00000073656D6FLL);
  return sub_251E1FE28;
}

uint64_t sub_251E1FE28(void **a1, char a2)
{
  uint64_t v2 = *a1;
  if (a2)
  {
    uint64_t v3 = (void *)swift_bridgeObjectRetain();
    sub_251E1F97C(v3, (void *)0x486465726564724FLL, (void *)0xEC00000073656D6FLL);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_251E1F97C(v2, (void *)0x486465726564724FLL, (void *)0xEC00000073656D6FLL);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_251E1FEB4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_251B1D3D4(0x486465726564724FLL, 0xEC00000073656D6FLL);
  *a1 = result;
  return result;
}

uint64_t sub_251E1FF00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[18] = a4;
  v4[19] = type metadata accessor for StateSnapshot.UpdateType(0);
  v4[20] = swift_task_alloc();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB8);
  v4[21] = v5;
  v4[22] = *(void *)(v5 - 8);
  v4[23] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251E1FFF4, 0, 0);
}

uint64_t sub_251E1FFF4()
{
  if (qword_26B2200D8 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[22];
  uint64_t v2 = v0[23];
  uint64_t v3 = v0[21];
  uint64_t v4 = (void *)v0[18];
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BD0);
  __swift_project_value_buffer(v5, (uint64_t)qword_26B21FF20);
  swift_storeEnumTagMultiPayload();
  sub_251F35CF0();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v3);
  id v6 = objc_msgSend(v4, sel_applicationData);
  v0[24] = v6;
  v0[2] = v0;
  v0[3] = sub_251E201BC;
  uint64_t v7 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_251A5B804;
  v0[13] = &block_descriptor_17;
  v0[14] = v7;
  objc_msgSend(v4, sel_updateApplicationData_completionHandler_, v6);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_251E201BC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 200) = v1;
  if (v1) {
    uint64_t v2 = sub_251E20390;
  }
  else {
    uint64_t v2 = sub_251E202CC;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_251E202CC()
{
  swift_beginAccess();
  uint64_t v1 = (void (*)(uint64_t))off_269BA3E60;
  if (off_269BA3E60)
  {
    uint64_t v2 = swift_retain();
    v1(v2);
    sub_251A27C7C((uint64_t)v1);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_251E20390()
{
  uint64_t v1 = *(void **)(v0 + 192);
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_251E20420()
{
  swift_unknownObjectRelease();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_251E20460(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_251AB3A34;
  return sub_251E1FF00(a1, v4, v5, v6);
}

uint64_t sub_251E20520(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

HMAction __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Action.createAction(in:)(HMHome in)
{
  uint64_t v3 = type metadata accessor for Action.NaturalLightAction(0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Action.CharacteristicAction(0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Action();
  MEMORY[0x270FA5388](v9);
  id v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251E21380(v1, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for Action);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      char v17 = v11[8];
      uint64_t v18 = *((void *)v11 + 2);
      char v19 = v11[24];
      uint64_t v20 = *((void *)v11 + 4);
      uint64_t v25 = *(void *)v11;
      LOBYTE(v26) = v17;
      uint64_t v27 = v18;
      char v28 = v19;
      uint64_t v29 = v20;
      v16.super.isa = (Class)sub_251E69108(in.super.isa, 1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v16;
    case 2u:
      sub_251E21C64((uint64_t)v11, (uint64_t)v5, type metadata accessor for Action.NaturalLightAction);
      v16.super.isa = (Class)sub_251A536FC(in.super.isa);
      sub_251E2299C((uint64_t)v5, type metadata accessor for Action.NaturalLightAction);
      return v16;
    case 3u:
      uint64_t v21 = *((void *)v11 + 1);
      LOBYTE(v25) = *v11;
      uint64_t v26 = v21;
      v16.super.isa = (Class)sub_251E54A24(in.super.isa);
      swift_bridgeObjectRelease();
      return v16;
    default:
      sub_251E21C64((uint64_t)v11, (uint64_t)v8, type metadata accessor for Action.CharacteristicAction);
      sub_251B61F54((uint64_t)v8);
      if (!v12) {
        goto LABEL_9;
      }
      uint64_t v13 = v12;
      LOBYTE(v25) = v8[*(int *)(v6 + 20)];
      id v14 = HMService.subscript.getter();
      if (v14)
      {
        uint64_t v15 = v14;
        v16.super.isa = (Class)Action.CharacteristicAction.createAction(characteristic:)(v14);
      }
      else
      {

LABEL_9:
        v16.super.isa = (Class)type metadata accessor for Action.CharacteristicAction.Error(0);
        sub_251E21D14(&qword_269BA1378, (void (*)(uint64_t))type metadata accessor for Action.CharacteristicAction.Error);
        swift_allocError();
        sub_251E21380((uint64_t)v8, v22, type metadata accessor for Action.CharacteristicAction);
        swift_storeEnumTagMultiPayload();
        swift_willThrow();
      }
      sub_251E2299C((uint64_t)v8, type metadata accessor for Action.CharacteristicAction);
      return v16;
  }
}

uint64_t type metadata accessor for Action()
{
  uint64_t result = qword_269BA3E98;
  if (!qword_269BA3E98) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t Action.hash(into:)(long long *a1)
{
  uint64_t v3 = type metadata accessor for Action.NaturalLightAction(0);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (int *)type metadata accessor for Action.CharacteristicAction(0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Action();
  MEMORY[0x270FA5388](v9);
  id v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251E21380(v1, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for Action);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v21 = *(void *)v11;
      int v22 = v11[24];
      uint64_t v23 = *((void *)v11 + 4);
      sub_251F36CB0();
      swift_bridgeObjectRetain();
      sub_251A54708(a1, v21);
      swift_bridgeObjectRelease();
      sub_251F36CB0();
      if (v22 != 1)
      {
        sub_251F36CC0();
        sub_251F36CF0();
        if (v23) {
          goto LABEL_6;
        }
LABEL_14:
        sub_251F36CC0();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      sub_251F36CC0();
      if (!v23) {
        goto LABEL_14;
      }
LABEL_6:
      sub_251F36CC0();
      swift_bridgeObjectRetain();
      sub_251A54570((uint64_t)a1, v23);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease_n();
    case 2u:
      sub_251E21C64((uint64_t)v11, (uint64_t)v5, type metadata accessor for Action.NaturalLightAction);
      sub_251F36CB0();
      sub_251F34DA0();
      sub_251AD2788();
      sub_251F35610();
      sub_251F35610();
      uint64_t v25 = *(void *)&v5[*(int *)(v3 + 24)];
      swift_bridgeObjectRetain();
      sub_251A54708(a1, v25);
      swift_bridgeObjectRelease();
      sub_251F36CC0();
      if (*(void *)&v5[*(int *)(v3 + 32) + 8])
      {
        sub_251F36CC0();
        swift_bridgeObjectRetain();
        sub_251F357B0();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_251F36CC0();
      }
      uint64_t v29 = type metadata accessor for Action.NaturalLightAction;
      uint64_t v30 = (uint64_t)v5;
      return sub_251E2299C(v30, v29);
    case 3u:
      uint64_t v26 = *((void *)v11 + 1);
      sub_251F36CB0();
      sub_251F36CC0();
      sub_251A411C8((uint64_t)a1, v26);
      return swift_bridgeObjectRelease();
    default:
      sub_251E21C64((uint64_t)v11, (uint64_t)v8, type metadata accessor for Action.CharacteristicAction);
      sub_251F36CB0();
      uint64_t v12 = sub_251F34DA0();
      sub_251AD2788();
      sub_251F35610();
      LOBYTE(v31) = v8[v6[5]];
      CharacteristicKind.rawValue.getter();
      sub_251F357B0();
      swift_bridgeObjectRelease();
      uint64_t v13 = &v8[v6[6]];
      char v14 = v13[16];
      long long v31 = *(_OWORD *)v13;
      char v32 = v14;
      CharacteristicKind.Value.hash(into:)();
      uint64_t v15 = (uint64_t)&v8[v6[7]];
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
      MEMORY[0x270FA5388](v16 - 8);
      uint64_t v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_251A1E280(v15, (uint64_t)v18);
      uint64_t v19 = *(void *)(v12 - 8);
      uint64_t v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48))(v18, 1, v12);
      if (v20 == 1)
      {
        sub_251F36CC0();
      }
      else
      {
        MEMORY[0x270FA5388](v20);
        char v28 = (char *)&v31 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v28, v18, v12);
        sub_251F36CC0();
        sub_251F35610();
        (*(void (**)(char *, uint64_t))(v19 + 8))(v28, v12);
      }
      if (*(void *)&v8[v6[8] + 8])
      {
        sub_251F36CC0();
        swift_bridgeObjectRetain();
        sub_251F357B0();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_251F36CC0();
      }
      uint64_t v29 = type metadata accessor for Action.CharacteristicAction;
      uint64_t v30 = (uint64_t)v8;
      return sub_251E2299C(v30, v29);
  }
}

uint64_t Action.hashValue.getter()
{
  sub_251F36CA0();
  Action.hash(into:)(v1);
  return sub_251F36D00();
}

uint64_t sub_251E20FC4()
{
  sub_251F36CA0();
  Action.hash(into:)(v1);
  return sub_251F36D00();
}

uint64_t sub_251E21008()
{
  sub_251F36CA0();
  Action.hash(into:)(v1);
  return sub_251F36D00();
}

void Action.init(action:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for Action();
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v8 = (unsigned __int8 *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  id v11 = (char *)&v33 - v10;
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  char v14 = (char *)&v33 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v33 - v15;
  self;
  uint64_t v17 = (void *)swift_dynamicCastObjCClass();
  if (v17)
  {
    Action.CharacteristicAction.init(action:)(v17, (uint64_t)v16);
    if (v2) {
      return;
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v18 = (uint64_t)v16;
    goto LABEL_13;
  }
  self;
  uint64_t v19 = (void *)swift_dynamicCastObjCClass();
  if (v19)
  {
    Action.MediaPlaybackAction.init(action:)(v19, (uint64_t)&v34);
    if (v2) {
      return;
    }
    char v20 = v35;
    uint64_t v21 = v36;
    char v22 = v37;
    uint64_t v23 = v38;
    *(void *)char v14 = v34;
    v14[8] = v20;
    *((void *)v14 + 2) = v21;
    v14[24] = v22;
    *((void *)v14 + 4) = v23;
    swift_storeEnumTagMultiPayload();
    uint64_t v18 = (uint64_t)v14;
    goto LABEL_13;
  }
  self;
  uint64_t v24 = (void *)swift_dynamicCastObjCClass();
  if (v24)
  {
    Action.NaturalLightAction.init(action:)(v24, (uint64_t)v11);
    if (v2) {
      return;
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v18 = (uint64_t)v11;
    goto LABEL_13;
  }
  self;
  uint64_t v25 = swift_dynamicCastObjCClass();
  if (!v25)
  {
    sub_251E21C10();
    swift_allocError();
    swift_willThrow();

    return;
  }
  uint64_t v26 = (void *)v25;
  id v27 = a1;
  unsigned __int8 v28 = objc_msgSend(v26, sel_enforceExecutionOrder);
  id v29 = objc_msgSend(v26, sel_commands);
  sub_251D71D84();
  unint64_t v30 = sub_251F35AC0();

  sub_251ED42B8(v30);
  uint64_t v32 = v31;
  swift_bridgeObjectRelease();

  if (!v2)
  {
    *uint64_t v8 = v28;
    *((void *)v8 + 1) = v32;
    swift_storeEnumTagMultiPayload();
    uint64_t v18 = (uint64_t)v8;
LABEL_13:
    sub_251E21C64(v18, a2, (uint64_t (*)(void))type metadata accessor for Action);
  }
}

uint64_t sub_251E21380(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t static Action.Error.== infix(_:_:)()
{
  return 1;
}

uint64_t Action.Error.hash(into:)()
{
  return sub_251F36CB0();
}

uint64_t Action.Error.hashValue.getter()
{
  return sub_251F36D00();
}

unint64_t Action.debugDescription.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Action.NaturalLightAction(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Action.CharacteristicAction(0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Action();
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251E21380(v1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for Action);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      char v13 = v10[8];
      uint64_t v14 = *((void *)v10 + 2);
      char v15 = v10[24];
      uint64_t v16 = *((void *)v10 + 4);
      uint64_t v19 = *(void *)v10;
      LOBYTE(v20) = v13;
      uint64_t v21 = v14;
      char v22 = v15;
      uint64_t v23 = v16;
      unint64_t v11 = Action.MediaPlaybackAction.debugDescription.getter();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    case 2u:
      sub_251E21C64((uint64_t)v10, (uint64_t)v4, type metadata accessor for Action.NaturalLightAction);
      unint64_t v11 = Action.NaturalLightAction.debugDescription.getter();
      sub_251E2299C((uint64_t)v4, type metadata accessor for Action.NaturalLightAction);
      break;
    case 3u:
      uint64_t v12 = *((void *)v10 + 1);
      LOBYTE(v19) = *v10;
      uint64_t v20 = v12;
      unint64_t v11 = Action.MatterCommandAction.debugDescription.getter();
LABEL_6:
      swift_bridgeObjectRelease();
      break;
    default:
      sub_251E21C64((uint64_t)v10, (uint64_t)v7, type metadata accessor for Action.CharacteristicAction);
      unint64_t v11 = Action.CharacteristicAction.debugDescription.getter();
      sub_251E2299C((uint64_t)v7, type metadata accessor for Action.CharacteristicAction);
      break;
  }
  return v11;
}

uint64_t _s13HomeDataModel6ActionO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v42 = a2;
  uint64_t v3 = type metadata accessor for Action.NaturalLightAction(0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v41 = (uint64_t)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Action.CharacteristicAction(0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Action();
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  unint64_t v11 = (unsigned __int8 *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v14 = (char *)&v41 - v13;
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)&v41 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v41 - v18;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E2F0);
  uint64_t v21 = MEMORY[0x270FA5388](v20 - 8);
  uint64_t v23 = (char *)&v41 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = &v23[*(int *)(v21 + 56)];
  sub_251E21380(a1, (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for Action);
  sub_251E21380(v42, (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for Action);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_251E21380((uint64_t)v23, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for Action);
      uint64_t v29 = *(void *)v17;
      uint64_t v30 = *((void *)v17 + 4);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        char v31 = v17[24];
        uint64_t v32 = *((void *)v17 + 2);
        char v33 = v17[8];
        uint64_t v34 = *(void *)v24;
        unsigned __int8 v35 = v24[8];
        uint64_t v36 = *((void *)v24 + 2);
        unsigned __int8 v37 = v24[24];
        uint64_t v47 = *((void *)v24 + 4);
        uint64_t v48 = v29;
        char v49 = v33;
        uint64_t v50 = v32;
        char v51 = v31;
        uint64_t v52 = v30;
        uint64_t v43 = v34;
        unsigned __int8 v44 = v35;
        uint64_t v45 = v36;
        unsigned __int8 v46 = v37;
        char v27 = static Action.MediaPlaybackAction.== infix(_:_:)(&v48, &v43);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
      swift_bridgeObjectRelease();
      goto LABEL_13;
    case 2u:
      sub_251E21380((uint64_t)v23, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for Action);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        uint64_t v25 = type metadata accessor for Action.NaturalLightAction;
        uint64_t v26 = v41;
        sub_251E21C64((uint64_t)v24, v41, type metadata accessor for Action.NaturalLightAction);
        char v27 = static Action.NaturalLightAction.== infix(_:_:)((uint64_t)v14, v26);
        sub_251E2299C(v26, type metadata accessor for Action.NaturalLightAction);
        uint64_t v28 = (uint64_t)v14;
        goto LABEL_17;
      }
      sub_251E2299C((uint64_t)v14, type metadata accessor for Action.NaturalLightAction);
      goto LABEL_14;
    case 3u:
      sub_251E21380((uint64_t)v23, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for Action);
      uint64_t v38 = *((void *)v11 + 1);
      if (swift_getEnumCaseMultiPayload() != 3)
      {
LABEL_13:
        swift_bridgeObjectRelease();
        goto LABEL_14;
      }
      if (*v11 == *v24)
      {
        BOOL v40 = sub_251AB54C8(v38, *((void *)v24 + 1));
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v40)
        {
          sub_251E2299C((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for Action);
          char v27 = 1;
          return v27 & 1;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      sub_251E2299C((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for Action);
      goto LABEL_15;
    default:
      sub_251E21380((uint64_t)v23, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for Action);
      if (swift_getEnumCaseMultiPayload())
      {
        sub_251E2299C((uint64_t)v19, type metadata accessor for Action.CharacteristicAction);
LABEL_14:
        sub_251E230B8((uint64_t)v23);
LABEL_15:
        char v27 = 0;
      }
      else
      {
        uint64_t v25 = type metadata accessor for Action.CharacteristicAction;
        sub_251E21C64((uint64_t)v24, (uint64_t)v7, type metadata accessor for Action.CharacteristicAction);
        char v27 = static Action.CharacteristicAction.== infix(_:_:)(v19, v7);
        sub_251E2299C((uint64_t)v7, type metadata accessor for Action.CharacteristicAction);
        uint64_t v28 = (uint64_t)v19;
LABEL_17:
        sub_251E2299C(v28, v25);
LABEL_18:
        sub_251E2299C((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for Action);
      }
      return v27 & 1;
  }
}

unint64_t sub_251E21C10()
{
  unint64_t result = qword_269BA3E80;
  if (!qword_269BA3E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3E80);
  }
  return result;
}

uint64_t sub_251E21C64(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_251E21CCC()
{
  return sub_251E21D14(&qword_269BA3E88, (void (*)(uint64_t))type metadata accessor for Action);
}

uint64_t sub_251E21D14(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_251E21D60()
{
  unint64_t result = qword_269BA3E90;
  if (!qword_269BA3E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3E90);
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for Action(char *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *(void *)a1 = *a2;
    a1 = (char *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(void *)a1 = *a2;
        a1[8] = *((unsigned char *)a2 + 8);
        *((void *)a1 + 2) = a2[2];
        a1[24] = *((unsigned char *)a2 + 24);
        *((void *)a1 + 4) = a2[4];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 2u:
        uint64_t v20 = sub_251F34DA0();
        uint64_t v21 = *(void (**)(char *, uint64_t *, uint64_t))(*(void *)(v20 - 8) + 16);
        v21(a1, a2, v20);
        uint64_t v22 = (int *)type metadata accessor for Action.NaturalLightAction(0);
        v21(&a1[v22[5]], (uint64_t *)((char *)a2 + v22[5]), v20);
        *(void *)&a1[v22[6]] = *(uint64_t *)((char *)a2 + v22[6]);
        a1[v22[7]] = *((unsigned char *)a2 + v22[7]);
        uint64_t v23 = v22[8];
        uint64_t v24 = &a1[v23];
        uint64_t v25 = (uint64_t *)((char *)a2 + v23);
        uint64_t v26 = v25[1];
        *(void *)uint64_t v24 = *v25;
        *((void *)v24 + 1) = v26;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 3u:
        *a1 = *(unsigned char *)a2;
        *((void *)a1 + 1) = a2[1];
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v6 = sub_251F34DA0();
        uint64_t v7 = *(void *)(v6 - 8);
        uint64_t v32 = *(void (**)(void *, const void *, uint64_t))(v7 + 16);
        v32(a1, a2, v6);
        uint64_t v8 = (int *)type metadata accessor for Action.CharacteristicAction(0);
        a1[v8[5]] = *((unsigned char *)a2 + v8[5]);
        uint64_t v9 = v8[6];
        uint64_t v10 = &a1[v9];
        uint64_t v11 = (uint64_t)a2 + v9;
        uint64_t v12 = *(void *)v11;
        unint64_t v13 = *(void *)(v11 + 8);
        char v14 = *(unsigned char *)(v11 + 16);
        sub_251B2ED7C(*(void *)v11, v13, v14);
        *(void *)uint64_t v10 = v12;
        *((void *)v10 + 1) = v13;
        v10[16] = v14;
        uint64_t v15 = v8[7];
        uint64_t v16 = &a1[v15];
        uint64_t v17 = (char *)a2 + v15;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))((uint64_t)a2 + v15, 1, v6))
        {
          uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
          memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
        }
        else
        {
          v32(v16, v17, v6);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v16, 0, 1, v6);
        }
        uint64_t v27 = v8[8];
        uint64_t v28 = &a1[v27];
        uint64_t v29 = (uint64_t *)((char *)a2 + v27);
        uint64_t v30 = v29[1];
        *(void *)uint64_t v28 = *v29;
        *((void *)v28 + 1) = v30;
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for Action(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      uint64_t v3 = sub_251F34DA0();
      uint64_t v4 = *(void *)(v3 - 8);
      int v5 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
      v5(a1, v3);
      uint64_t v6 = type metadata accessor for Action.CharacteristicAction(0);
      sub_251A580B4(*(void *)(a1 + *(int *)(v6 + 24)), *(void *)(a1 + *(int *)(v6 + 24) + 8), *(unsigned char *)(a1 + *(int *)(v6 + 24) + 16));
      uint64_t v7 = a1 + *(int *)(v6 + 28);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v7, 1, v3)) {
        v5(v7, v3);
      }
      goto LABEL_6;
    case 1:
      swift_bridgeObjectRelease();
      goto LABEL_6;
    case 2:
      uint64_t v8 = sub_251F34DA0();
      uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
      v9(a1, v8);
      uint64_t v10 = type metadata accessor for Action.NaturalLightAction(0);
      v9(a1 + *(int *)(v10 + 20), v8);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    case 3:
LABEL_6:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

char *initializeWithCopy for Action(char *a1, char *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      *(void *)a1 = *(void *)a2;
      a1[8] = a2[8];
      *((void *)a1 + 2) = *((void *)a2 + 2);
      a1[24] = a2[24];
      *((void *)a1 + 4) = *((void *)a2 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
    case 2u:
      uint64_t v17 = sub_251F34DA0();
      uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
      v18(a1, a2, v17);
      uint64_t v19 = (int *)type metadata accessor for Action.NaturalLightAction(0);
      v18(&a1[v19[5]], &a2[v19[5]], v17);
      *(void *)&a1[v19[6]] = *(void *)&a2[v19[6]];
      a1[v19[7]] = a2[v19[7]];
      uint64_t v20 = v19[8];
      uint64_t v21 = &a1[v20];
      uint64_t v22 = &a2[v20];
      uint64_t v23 = *((void *)v22 + 1);
      *(void *)uint64_t v21 = *(void *)v22;
      *((void *)v21 + 1) = v23;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      break;
    case 3u:
      *a1 = *a2;
      *((void *)a1 + 1) = *((void *)a2 + 1);
      swift_bridgeObjectRetain();
      break;
    default:
      uint64_t v4 = sub_251F34DA0();
      uint64_t v5 = *(void *)(v4 - 8);
      uint64_t v29 = *(void (**)(void *, const void *, uint64_t))(v5 + 16);
      v29(a1, a2, v4);
      uint64_t v6 = (int *)type metadata accessor for Action.CharacteristicAction(0);
      a1[v6[5]] = a2[v6[5]];
      uint64_t v7 = v6[6];
      uint64_t v8 = &a1[v7];
      uint64_t v9 = &a2[v7];
      uint64_t v10 = *(void *)v9;
      unint64_t v11 = *((void *)v9 + 1);
      char v12 = v9[16];
      sub_251B2ED7C(*(void *)v9, v11, v12);
      *(void *)uint64_t v8 = v10;
      *((void *)v8 + 1) = v11;
      v8[16] = v12;
      uint64_t v13 = v6[7];
      char v14 = &a1[v13];
      uint64_t v15 = &a2[v13];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(&a2[v13], 1, v4))
      {
        uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
        memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        v29(v14, v15, v4);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v14, 0, 1, v4);
      }
      uint64_t v24 = v6[8];
      uint64_t v25 = &a1[v24];
      uint64_t v26 = &a2[v24];
      uint64_t v27 = *((void *)v26 + 1);
      *(void *)uint64_t v25 = *(void *)v26;
      *((void *)v25 + 1) = v27;
      swift_bridgeObjectRetain();
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for Action(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_251E2299C(a1, (uint64_t (*)(void))type metadata accessor for Action);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(void *)a1 = *(void *)a2;
        *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
        uint64_t v17 = *(void *)(a2 + 16);
        *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
        *(void *)(a1 + 16) = v17;
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 2u:
        uint64_t v18 = sub_251F34DA0();
        uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16);
        v19(a1, a2, v18);
        uint64_t v20 = (int *)type metadata accessor for Action.NaturalLightAction(0);
        v19(a1 + v20[5], a2 + v20[5], v18);
        *(void *)(a1 + v20[6]) = *(void *)(a2 + v20[6]);
        *(unsigned char *)(a1 + v20[7]) = *(unsigned char *)(a2 + v20[7]);
        uint64_t v21 = v20[8];
        uint64_t v22 = (void *)(a1 + v21);
        uint64_t v23 = (void *)(a2 + v21);
        *uint64_t v22 = *v23;
        v22[1] = v23[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 3u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v4 = sub_251F34DA0();
        uint64_t v5 = *(void *)(v4 - 8);
        uint64_t v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
        v28(a1, a2, v4);
        uint64_t v6 = (int *)type metadata accessor for Action.CharacteristicAction(0);
        *(unsigned char *)(a1 + v6[5]) = *(unsigned char *)(a2 + v6[5]);
        uint64_t v7 = v6[6];
        uint64_t v8 = a1 + v7;
        uint64_t v9 = a2 + v7;
        uint64_t v10 = *(void *)v9;
        unint64_t v11 = *(void *)(v9 + 8);
        char v12 = *(unsigned char *)(v9 + 16);
        sub_251B2ED7C(*(void *)v9, v11, v12);
        *(void *)uint64_t v8 = v10;
        *(void *)(v8 + 8) = v11;
        *(unsigned char *)(v8 + 16) = v12;
        uint64_t v13 = v6[7];
        char v14 = (void *)(a1 + v13);
        uint64_t v15 = (const void *)(a2 + v13);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a2 + v13, 1, v4))
        {
          uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
          memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
        }
        else
        {
          v28((uint64_t)v14, (uint64_t)v15, v4);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(v14, 0, 1, v4);
        }
        uint64_t v24 = v6[8];
        uint64_t v25 = (void *)(a1 + v24);
        uint64_t v26 = (void *)(a2 + v24);
        *uint64_t v25 = *v26;
        v25[1] = v26[1];
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_251E2299C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

char *initializeWithTake for Action(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v18 = sub_251F34DA0();
    uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32);
    v19(a1, a2, v18);
    uint64_t v20 = (int *)type metadata accessor for Action.NaturalLightAction(0);
    v19(&a1[v20[5]], &a2[v20[5]], v18);
    *(void *)&a1[v20[6]] = *(void *)&a2[v20[6]];
    a1[v20[7]] = a2[v20[7]];
    *(_OWORD *)&a1[v20[8]] = *(_OWORD *)&a2[v20[8]];
LABEL_9:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v7 = sub_251F34DA0();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v9(a1, a2, v7);
    uint64_t v10 = (int *)type metadata accessor for Action.CharacteristicAction(0);
    a1[v10[5]] = a2[v10[5]];
    uint64_t v11 = v10[6];
    char v12 = &a1[v11];
    uint64_t v13 = &a2[v11];
    v12[16] = v13[16];
    *(_OWORD *)char v12 = *(_OWORD *)v13;
    uint64_t v14 = v10[7];
    uint64_t v15 = &a1[v14];
    uint64_t v16 = &a2[v14];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(&a2[v14], 1, v7))
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      v9(v15, v16, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v15, 0, 1, v7);
    }
    *(_OWORD *)&a1[v10[8]] = *(_OWORD *)&a2[v10[8]];
    goto LABEL_9;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

char *assignWithTake for Action(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_251E2299C((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for Action);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v18 = sub_251F34DA0();
      uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32);
      v19(a1, a2, v18);
      uint64_t v20 = (int *)type metadata accessor for Action.NaturalLightAction(0);
      v19(&a1[v20[5]], &a2[v20[5]], v18);
      *(void *)&a1[v20[6]] = *(void *)&a2[v20[6]];
      a1[v20[7]] = a2[v20[7]];
      *(_OWORD *)&a1[v20[8]] = *(_OWORD *)&a2[v20[8]];
LABEL_10:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v7 = sub_251F34DA0();
      uint64_t v8 = *(void *)(v7 - 8);
      uint64_t v9 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
      v9(a1, a2, v7);
      uint64_t v10 = (int *)type metadata accessor for Action.CharacteristicAction(0);
      a1[v10[5]] = a2[v10[5]];
      uint64_t v11 = v10[6];
      char v12 = &a1[v11];
      uint64_t v13 = &a2[v11];
      v12[16] = v13[16];
      *(_OWORD *)char v12 = *(_OWORD *)v13;
      uint64_t v14 = v10[7];
      uint64_t v15 = &a1[v14];
      uint64_t v16 = &a2[v14];
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(&a2[v14], 1, v7))
      {
        uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
        memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        v9(v15, v16, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v15, 0, 1, v7);
      }
      *(_OWORD *)&a1[v10[8]] = *(_OWORD *)&a2[v10[8]];
      goto LABEL_10;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_251E22F10()
{
  uint64_t result = type metadata accessor for Action.CharacteristicAction(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for Action.NaturalLightAction(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for Action.Error(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x251E23080);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for Action.Error()
{
  return &type metadata for Action.Error;
}

uint64_t sub_251E230B8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E2F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t static SymptomError.tileIconSymbol(for:)(unint64_t result)
{
  if (result)
  {
    uint64_t v1 = swift_bridgeObjectRetain();
    uint64_t v4 = sub_251A915C4(v1);
    sub_251E2713C(&v4);
    swift_bridgeObjectRelease();
    if (*(void *)(v4 + 16))
    {
      unsigned int v2 = *(unsigned __int8 *)(v4 + 32);
      swift_release();
      if (v2 <= 0x13 && ((1 << v2) & 0x80003) != 0) {
        return 0xD000000000000018;
      }
    }
    else
    {
      swift_release();
    }
    return 0;
  }
  return result;
}

uint64_t SymptomError.init(from:)@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  char v2 = 0;
  char v3 = 5;
  switch(result)
  {
    case 1:
      goto LABEL_13;
    case 2:
      char v2 = 1;
      goto LABEL_13;
    case 3:
      char v2 = 2;
      goto LABEL_13;
    case 4:
      char v2 = 3;
      goto LABEL_13;
    case 5:
      char v2 = 4;
LABEL_13:
      char v3 = v2;
      goto LABEL_14;
    case 6:
LABEL_14:
      *a2 = v3;
      break;
    case 7:
      *a2 = 6;
      break;
    case 8:
      *a2 = 7;
      break;
    case 9:
      *a2 = 8;
      break;
    case 10:
      *a2 = 9;
      break;
    case 11:
      *a2 = 10;
      break;
    case 12:
      *a2 = 11;
      break;
    case 13:
      *a2 = 12;
      break;
    case 14:
      *a2 = 13;
      break;
    case 15:
      *a2 = 14;
      break;
    case 16:
      *a2 = 15;
      break;
    case 17:
      *a2 = 16;
      break;
    case 18:
      *a2 = 17;
      break;
    case 19:
      *a2 = 18;
      break;
    case 20:
      *a2 = 19;
      break;
    case 21:
      *a2 = 22;
      break;
    default:
      if (result == 1000) {
        char v4 = 21;
      }
      else {
        char v4 = 23;
      }
      if (result == 999) {
        char v5 = 20;
      }
      else {
        char v5 = v4;
      }
      *a2 = v5;
      break;
  }
  return result;
}

BOOL static SymptomError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t SymptomError.hash(into:)()
{
  return sub_251F36CB0();
}

unint64_t sub_251E233A0(char a1)
{
  unint64_t result = 0xD000000000000014;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000014;
      break;
    case 2:
      unint64_t result = 0x656D6F486465656ELL;
      break;
    case 3:
      unint64_t result = 0x694669576465656ELL;
      break;
    case 4:
      unint64_t result = 0xD000000000000016;
      break;
    case 5:
      unint64_t result = 0x65746E496465656ELL;
      break;
    case 6:
      unint64_t result = 0x647261486465656ELL;
      break;
    case 7:
      unint64_t result = 0xD000000000000015;
      break;
    case 8:
      unint64_t result = 0x6F4E6F6572657473;
      break;
    case 9:
      unint64_t result = 0x72456F6572657473;
      break;
    case 10:
    case 11:
    case 13:
    case 14:
    case 17:
      unint64_t result = 0xD000000000000013;
      break;
    case 12:
      unint64_t result = 0xD000000000000011;
      break;
    case 15:
      unint64_t result = 0xD000000000000015;
      break;
    case 16:
      unint64_t result = 0xD000000000000019;
      break;
    case 18:
      unint64_t result = 0xD000000000000017;
      break;
    case 19:
      unint64_t result = 0x465044436465656ELL;
      break;
    case 20:
      unint64_t result = 0x656E65476465656ELL;
      break;
    case 21:
      unint64_t result = 0x6F72506E49786966;
      break;
    case 22:
      unint64_t result = 0xD00000000000001ALL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_251E23648()
{
  return sub_251E233A0(*v0);
}

uint64_t sub_251E23650@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251E29DB0(a1, a2);
  *a3 = result;
  return result;
}

void sub_251E23678(unsigned char *a1@<X8>)
{
  *a1 = 23;
}

uint64_t sub_251E23684(uint64_t a1)
{
  unint64_t v2 = sub_251E28184();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E236C0(uint64_t a1)
{
  unint64_t v2 = sub_251E28184();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251E236FC(uint64_t a1)
{
  unint64_t v2 = sub_251E2822C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E23738(uint64_t a1)
{
  unint64_t v2 = sub_251E2822C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251E23774(uint64_t a1)
{
  unint64_t v2 = sub_251E284CC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E237B0(uint64_t a1)
{
  unint64_t v2 = sub_251E284CC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251E237EC(uint64_t a1)
{
  unint64_t v2 = sub_251E282D4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E23828(uint64_t a1)
{
  unint64_t v2 = sub_251E282D4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251E23864(uint64_t a1)
{
  unint64_t v2 = sub_251E28328();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E238A0(uint64_t a1)
{
  unint64_t v2 = sub_251E28328();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251E238DC(uint64_t a1)
{
  unint64_t v2 = sub_251E28280();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E23918(uint64_t a1)
{
  unint64_t v2 = sub_251E28280();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251E23954(uint64_t a1)
{
  unint64_t v2 = sub_251E28718();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E23990(uint64_t a1)
{
  unint64_t v2 = sub_251E28718();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251E239CC(uint64_t a1)
{
  unint64_t v2 = sub_251E28868();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E23A08(uint64_t a1)
{
  unint64_t v2 = sub_251E28868();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251E23A44(uint64_t a1)
{
  unint64_t v2 = sub_251E2876C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E23A80(uint64_t a1)
{
  unint64_t v2 = sub_251E2876C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251E23ABC(uint64_t a1)
{
  unint64_t v2 = sub_251E28424();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E23AF8(uint64_t a1)
{
  unint64_t v2 = sub_251E28424();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251E23B34(uint64_t a1)
{
  unint64_t v2 = sub_251E283D0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E23B70(uint64_t a1)
{
  unint64_t v2 = sub_251E283D0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251E23BAC(uint64_t a1)
{
  unint64_t v2 = sub_251E28814();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E23BE8(uint64_t a1)
{
  unint64_t v2 = sub_251E28814();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251E23C24(uint64_t a1)
{
  unint64_t v2 = sub_251E287C0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E23C60(uint64_t a1)
{
  unint64_t v2 = sub_251E287C0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251E23C9C(uint64_t a1)
{
  unint64_t v2 = sub_251E28478();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E23CD8(uint64_t a1)
{
  unint64_t v2 = sub_251E28478();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251E23D14(uint64_t a1)
{
  unint64_t v2 = sub_251E28910();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E23D50(uint64_t a1)
{
  unint64_t v2 = sub_251E28910();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251E23D8C(uint64_t a1)
{
  unint64_t v2 = sub_251E288BC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E23DC8(uint64_t a1)
{
  unint64_t v2 = sub_251E288BC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251E23E04(uint64_t a1)
{
  unint64_t v2 = sub_251E2837C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E23E40(uint64_t a1)
{
  unint64_t v2 = sub_251E2837C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251E23E7C(uint64_t a1)
{
  unint64_t v2 = sub_251E28574();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E23EB8(uint64_t a1)
{
  unint64_t v2 = sub_251E28574();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251E23EF4(uint64_t a1)
{
  unint64_t v2 = sub_251E281D8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E23F30(uint64_t a1)
{
  unint64_t v2 = sub_251E281D8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251E23F6C(uint64_t a1)
{
  unint64_t v2 = sub_251E2861C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E23FA8(uint64_t a1)
{
  unint64_t v2 = sub_251E2861C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251E23FE4(uint64_t a1)
{
  unint64_t v2 = sub_251E28670();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E24020(uint64_t a1)
{
  unint64_t v2 = sub_251E28670();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251E2405C(uint64_t a1)
{
  unint64_t v2 = sub_251E286C4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E24098(uint64_t a1)
{
  unint64_t v2 = sub_251E286C4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251E240D4(uint64_t a1)
{
  unint64_t v2 = sub_251E28520();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E24110(uint64_t a1)
{
  unint64_t v2 = sub_251E28520();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251E2414C(uint64_t a1)
{
  unint64_t v2 = sub_251E285C8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E24188(uint64_t a1)
{
  unint64_t v2 = sub_251E285C8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t SymptomError.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3EA8);
  uint64_t v129 = *(void *)(v4 - 8);
  uint64_t v130 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v128 = (char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3EB0);
  uint64_t v126 = *(void *)(v6 - 8);
  uint64_t v127 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v125 = (char *)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3EB8);
  uint64_t v123 = *(void *)(v8 - 8);
  uint64_t v124 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v122 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3EC0);
  uint64_t v67 = *(void *)(v68 - 8);
  MEMORY[0x270FA5388](v68);
  uint64_t v66 = (char *)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3EC8);
  uint64_t v120 = *(void *)(v11 - 8);
  uint64_t v121 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v119 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3ED0);
  uint64_t v117 = *(void *)(v13 - 8);
  uint64_t v118 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v116 = (char *)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3ED8);
  uint64_t v114 = *(void *)(v15 - 8);
  uint64_t v115 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v113 = (char *)&v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3EE0);
  uint64_t v111 = *(void *)(v112 - 8);
  MEMORY[0x270FA5388](v112);
  uint64_t v110 = (char *)&v66 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3EE8);
  uint64_t v108 = *(void *)(v109 - 8);
  MEMORY[0x270FA5388](v109);
  uint64_t v107 = (char *)&v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3EF0);
  uint64_t v105 = *(void *)(v106 - 8);
  MEMORY[0x270FA5388](v106);
  int v104 = (char *)&v66 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3EF8);
  uint64_t v102 = *(void *)(v103 - 8);
  MEMORY[0x270FA5388](v103);
  uint64_t v101 = (char *)&v66 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3F00);
  uint64_t v99 = *(void *)(v100 - 8);
  MEMORY[0x270FA5388](v100);
  uint64_t v98 = (char *)&v66 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3F08);
  uint64_t v96 = *(void *)(v97 - 8);
  MEMORY[0x270FA5388](v97);
  uint64_t v95 = (char *)&v66 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3F10);
  uint64_t v93 = *(void *)(v94 - 8);
  MEMORY[0x270FA5388](v94);
  uint64_t v92 = (char *)&v66 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3F18);
  uint64_t v90 = *(void *)(v91 - 8);
  MEMORY[0x270FA5388](v91);
  uint64_t v89 = (char *)&v66 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3F20);
  uint64_t v87 = *(void *)(v88 - 8);
  MEMORY[0x270FA5388](v88);
  uint64_t v86 = (char *)&v66 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3F28);
  uint64_t v84 = *(void *)(v85 - 8);
  MEMORY[0x270FA5388](v85);
  unint64_t v83 = (char *)&v66 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3F30);
  uint64_t v81 = *(void *)(v82 - 8);
  MEMORY[0x270FA5388](v82);
  uint64_t v80 = (char *)&v66 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3F38);
  uint64_t v78 = *(void *)(v79 - 8);
  MEMORY[0x270FA5388](v79);
  uint64_t v77 = (char *)&v66 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3F40);
  uint64_t v75 = *(void *)(v76 - 8);
  MEMORY[0x270FA5388](v76);
  unint64_t v74 = (char *)&v66 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3F48);
  uint64_t v72 = *(void *)(v73 - 8);
  MEMORY[0x270FA5388](v73);
  unint64_t v71 = (char *)&v66 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3F50);
  uint64_t v70 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  char v33 = (char *)&v66 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3F58);
  uint64_t v69 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v36 = (char *)&v66 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA3F60);
  uint64_t v38 = *(void *)(v37 - 8);
  uint64_t v132 = v37;
  uint64_t v133 = v38;
  MEMORY[0x270FA5388](v37);
  BOOL v40 = (char *)&v66 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251E28184();
  uint64_t v131 = v40;
  sub_251F36DA0();
  switch(v41)
  {
    case 1:
      char v135 = 1;
      sub_251E288BC();
      uint64_t v43 = v131;
      uint64_t v42 = v132;
      sub_251F36900();
      (*(void (**)(char *, uint64_t))(v70 + 8))(v33, v31);
      return (*(uint64_t (**)(char *, uint64_t))(v133 + 8))(v43, v42);
    case 2:
      char v135 = 2;
      sub_251E28868();
      unsigned __int8 v44 = v71;
      uint64_t v43 = v131;
      uint64_t v42 = v132;
      sub_251F36900();
      uint64_t v45 = *(void (**)(char *, void))(v72 + 8);
      unsigned __int8 v46 = v44;
      uint64_t v47 = &v105;
      goto LABEL_26;
    case 3:
      char v135 = 3;
      sub_251E28814();
      uint64_t v48 = v74;
      uint64_t v43 = v131;
      uint64_t v42 = v132;
      sub_251F36900();
      uint64_t v45 = *(void (**)(char *, void))(v75 + 8);
      unsigned __int8 v46 = v48;
      uint64_t v47 = &v108;
      goto LABEL_26;
    case 4:
      char v135 = 4;
      sub_251E287C0();
      char v49 = v77;
      uint64_t v43 = v131;
      uint64_t v42 = v132;
      sub_251F36900();
      uint64_t v45 = *(void (**)(char *, void))(v78 + 8);
      unsigned __int8 v46 = v49;
      uint64_t v47 = &v111;
      goto LABEL_26;
    case 5:
      char v135 = 5;
      sub_251E2876C();
      uint64_t v50 = v80;
      uint64_t v43 = v131;
      uint64_t v42 = v132;
      sub_251F36900();
      uint64_t v45 = *(void (**)(char *, void))(v81 + 8);
      unsigned __int8 v46 = v50;
      uint64_t v47 = &v114;
      goto LABEL_26;
    case 6:
      char v135 = 6;
      sub_251E28718();
      char v51 = v83;
      uint64_t v43 = v131;
      uint64_t v42 = v132;
      sub_251F36900();
      uint64_t v45 = *(void (**)(char *, void))(v84 + 8);
      unsigned __int8 v46 = v51;
      uint64_t v47 = &v117;
      goto LABEL_26;
    case 7:
      char v135 = 7;
      sub_251E286C4();
      uint64_t v52 = v86;
      uint64_t v43 = v131;
      uint64_t v42 = v132;
      sub_251F36900();
      uint64_t v45 = *(void (**)(char *, void))(v87 + 8);
      unsigned __int8 v46 = v52;
      uint64_t v47 = &v120;
      goto LABEL_26;
    case 8:
      char v135 = 8;
      sub_251E28670();
      BOOL v53 = v89;
      uint64_t v43 = v131;
      uint64_t v42 = v132;
      sub_251F36900();
      uint64_t v45 = *(void (**)(char *, void))(v90 + 8);
      unsigned __int8 v46 = v53;
      uint64_t v47 = &v123;
      goto LABEL_26;
    case 9:
      char v135 = 9;
      sub_251E2861C();
      uint64_t v54 = v92;
      uint64_t v43 = v131;
      uint64_t v42 = v132;
      sub_251F36900();
      uint64_t v45 = *(void (**)(char *, void))(v93 + 8);
      unsigned __int8 v46 = v54;
      uint64_t v47 = &v126;
      goto LABEL_26;
    case 10:
      char v135 = 10;
      sub_251E285C8();
      char v55 = v95;
      uint64_t v43 = v131;
      uint64_t v42 = v132;
      sub_251F36900();
      uint64_t v45 = *(void (**)(char *, void))(v96 + 8);
      unsigned __int8 v46 = v55;
      uint64_t v47 = &v129;
      goto LABEL_26;
    case 11:
      char v135 = 11;
      sub_251E28574();
      unint64_t v56 = v98;
      uint64_t v43 = v131;
      uint64_t v42 = v132;
      sub_251F36900();
      uint64_t v45 = *(void (**)(char *, void))(v99 + 8);
      unsigned __int8 v46 = v56;
      uint64_t v47 = &v132;
      goto LABEL_26;
    case 12:
      char v135 = 12;
      sub_251E28520();
      char v57 = v101;
      uint64_t v43 = v131;
      uint64_t v42 = v132;
      sub_251F36900();
      uint64_t v45 = *(void (**)(char *, void))(v102 + 8);
      unsigned __int8 v46 = v57;
      uint64_t v47 = (uint64_t *)&v134;
      goto LABEL_26;
    case 13:
      char v135 = 13;
      sub_251E284CC();
      uint64_t v58 = v104;
      uint64_t v43 = v131;
      uint64_t v42 = v132;
      sub_251F36900();
      uint64_t v45 = *(void (**)(char *, void))(v105 + 8);
      unsigned __int8 v46 = v58;
      uint64_t v47 = &v136;
      goto LABEL_26;
    case 14:
      char v135 = 14;
      sub_251E28478();
      uint64_t v59 = v107;
      uint64_t v43 = v131;
      uint64_t v42 = v132;
      sub_251F36900();
      uint64_t v45 = *(void (**)(char *, void))(v108 + 8);
      unsigned __int8 v46 = v59;
      uint64_t v47 = &v137;
      goto LABEL_26;
    case 15:
      char v135 = 15;
      sub_251E28424();
      char v60 = v110;
      uint64_t v43 = v131;
      uint64_t v42 = v132;
      sub_251F36900();
      uint64_t v45 = *(void (**)(char *, void))(v111 + 8);
      unsigned __int8 v46 = v60;
      uint64_t v47 = &v138;
      goto LABEL_26;
    case 16:
      char v135 = 16;
      sub_251E283D0();
      char v61 = v113;
      uint64_t v43 = v131;
      uint64_t v42 = v132;
      sub_251F36900();
      uint64_t v63 = v114;
      uint64_t v62 = v115;
      goto LABEL_24;
    case 17:
      char v135 = 17;
      sub_251E2837C();
      char v61 = v116;
      uint64_t v43 = v131;
      uint64_t v42 = v132;
      sub_251F36900();
      uint64_t v63 = v117;
      uint64_t v62 = v118;
      goto LABEL_24;
    case 18:
      char v135 = 18;
      sub_251E28328();
      char v61 = v119;
      uint64_t v43 = v131;
      uint64_t v42 = v132;
      sub_251F36900();
      uint64_t v63 = v120;
      uint64_t v62 = v121;
      goto LABEL_24;
    case 19:
      char v135 = 19;
      sub_251E282D4();
      uint64_t v64 = v66;
      uint64_t v43 = v131;
      uint64_t v42 = v132;
      sub_251F36900();
      uint64_t v45 = *(void (**)(char *, void))(v67 + 8);
      unsigned __int8 v46 = v64;
      uint64_t v47 = &v100;
LABEL_26:
      v45(v46, *(v47 - 32));
      return (*(uint64_t (**)(char *, uint64_t))(v133 + 8))(v43, v42);
    case 20:
      char v135 = 20;
      sub_251E28280();
      char v61 = v122;
      uint64_t v43 = v131;
      uint64_t v42 = v132;
      sub_251F36900();
      uint64_t v63 = v123;
      uint64_t v62 = v124;
      goto LABEL_24;
    case 21:
      char v135 = 21;
      sub_251E2822C();
      char v61 = v125;
      uint64_t v43 = v131;
      uint64_t v42 = v132;
      sub_251F36900();
      uint64_t v63 = v126;
      uint64_t v62 = v127;
      goto LABEL_24;
    case 22:
      char v135 = 22;
      sub_251E281D8();
      char v61 = v128;
      uint64_t v43 = v131;
      uint64_t v42 = v132;
      sub_251F36900();
      uint64_t v63 = v129;
      uint64_t v62 = v130;
LABEL_24:
      (*(void (**)(char *, uint64_t))(v63 + 8))(v61, v62);
      break;
    default:
      char v135 = 0;
      sub_251E28910();
      uint64_t v43 = v131;
      uint64_t v42 = v132;
      sub_251F36900();
      (*(void (**)(char *, uint64_t))(v69 + 8))(v36, v34);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v133 + 8))(v43, v42);
}

uint64_t SymptomError.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t SymptomError.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v162 = a2;
  uint64_t v161 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4028);
  uint64_t v139 = *(void *)(v161 - 8);
  MEMORY[0x270FA5388](v161);
  uint64_t v157 = (char *)&v92 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v138 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4030);
  uint64_t v137 = *(void *)(v138 - 8);
  MEMORY[0x270FA5388](v138);
  uint64_t v156 = (char *)&v92 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v136 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4038);
  uint64_t v135 = *(void *)(v136 - 8);
  MEMORY[0x270FA5388](v136);
  uint64_t v155 = (char *)&v92 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v134 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4040);
  uint64_t v133 = *(void *)(v134 - 8);
  MEMORY[0x270FA5388](v134);
  int v154 = (char *)&v92 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4048);
  uint64_t v131 = *(void *)(v132 - 8);
  MEMORY[0x270FA5388](v132);
  uint64_t v153 = (char *)&v92 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v130 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4050);
  uint64_t v129 = *(void *)(v130 - 8);
  MEMORY[0x270FA5388](v130);
  int v152 = (char *)&v92 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4058);
  uint64_t v127 = *(void *)(v128 - 8);
  MEMORY[0x270FA5388](v128);
  char v151 = (char *)&v92 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4060);
  uint64_t v125 = *(void *)(v126 - 8);
  MEMORY[0x270FA5388](v126);
  __int16 v150 = (char *)&v92 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4068);
  uint64_t v123 = *(void *)(v124 - 8);
  MEMORY[0x270FA5388](v124);
  unsigned __int16 v149 = (char *)&v92 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4070);
  uint64_t v121 = *(void *)(v122 - 8);
  MEMORY[0x270FA5388](v122);
  int v148 = (char *)&v92 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4078);
  uint64_t v119 = *(void *)(v120 - 8);
  MEMORY[0x270FA5388](v120);
  uint64_t v147 = (char *)&v92 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4080);
  uint64_t v117 = *(void *)(v118 - 8);
  MEMORY[0x270FA5388](v118);
  uint64_t v146 = (char *)&v92 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4088);
  uint64_t v115 = *(void *)(v116 - 8);
  MEMORY[0x270FA5388](v116);
  uint64_t v145 = (char *)&v92 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4090);
  uint64_t v113 = *(void *)(v114 - 8);
  MEMORY[0x270FA5388](v114);
  uint64_t v144 = (char *)&v92 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4098);
  uint64_t v111 = *(void *)(v112 - 8);
  MEMORY[0x270FA5388](v112);
  uint64_t v141 = (char *)&v92 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA40A0);
  uint64_t v110 = *(void *)(v109 - 8);
  MEMORY[0x270FA5388](v109);
  int v160 = (char *)&v92 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA40A8);
  uint64_t v107 = *(void *)(v108 - 8);
  MEMORY[0x270FA5388](v108);
  uint64_t v159 = (char *)&v92 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA40B0);
  uint64_t v105 = *(void *)(v106 - 8);
  MEMORY[0x270FA5388](v106);
  uint64_t v143 = (char *)&v92 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA40B8);
  uint64_t v103 = *(void *)(v104 - 8);
  MEMORY[0x270FA5388](v104);
  uint64_t v142 = (char *)&v92 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA40C0);
  uint64_t v101 = *(void *)(v102 - 8);
  MEMORY[0x270FA5388](v102);
  int v158 = (char *)&v92 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA40C8);
  uint64_t v99 = *(void *)(v100 - 8);
  MEMORY[0x270FA5388](v100);
  uint64_t v140 = (char *)&v92 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA40D0);
  uint64_t v97 = *(void *)(v98 - 8);
  MEMORY[0x270FA5388](v98);
  uint64_t v25 = (char *)&v92 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA40D8);
  uint64_t v96 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v28 = (char *)&v92 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA40E0);
  uint64_t v30 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v32 = (char *)&v92 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = a1[3];
  uint64_t v163 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v33);
  sub_251E28184();
  uint64_t v34 = v164;
  sub_251F36D90();
  if (!v34)
  {
    uint64_t v93 = v28;
    uint64_t v92 = v26;
    uint64_t v94 = v25;
    uint64_t v36 = v158;
    uint64_t v35 = v159;
    uint64_t v37 = v160;
    uint64_t v95 = 0;
    uint64_t v39 = v161;
    uint64_t v38 = v162;
    uint64_t v164 = v30;
    BOOL v40 = v32;
    uint64_t v41 = sub_251F368E0();
    if (*(void *)(v41 + 16) == 1)
    {
      char v42 = *(unsigned char *)(v41 + 32);
      switch(v42)
      {
        case 1:
          char v165 = 1;
          sub_251E288BC();
          char v49 = v94;
          uint64_t v50 = v95;
          sub_251F36770();
          if (v50) {
            goto LABEL_48;
          }
          (*(void (**)(char *, uint64_t))(v97 + 8))(v49, v98);
          goto LABEL_52;
        case 2:
          char v165 = 2;
          sub_251E28868();
          char v51 = v140;
          uint64_t v52 = v95;
          sub_251F36770();
          if (v52) {
            goto LABEL_48;
          }
          (*(void (**)(char *, uint64_t))(v99 + 8))(v51, v100);
          goto LABEL_52;
        case 3:
          char v165 = 3;
          sub_251E28814();
          uint64_t v53 = v95;
          sub_251F36770();
          if (v53) {
            goto LABEL_48;
          }
          (*(void (**)(char *, uint64_t))(v101 + 8))(v36, v102);
          goto LABEL_52;
        case 4:
          char v165 = 4;
          sub_251E287C0();
          uint64_t v54 = v142;
          uint64_t v55 = v95;
          sub_251F36770();
          if (v55) {
            goto LABEL_48;
          }
          (*(void (**)(char *, uint64_t))(v103 + 8))(v54, v104);
          goto LABEL_52;
        case 5:
          char v165 = 5;
          sub_251E2876C();
          unint64_t v56 = v143;
          uint64_t v57 = v95;
          sub_251F36770();
          if (v57) {
            goto LABEL_48;
          }
          (*(void (**)(char *, uint64_t))(v105 + 8))(v56, v106);
          goto LABEL_52;
        case 6:
          char v165 = 6;
          sub_251E28718();
          uint64_t v58 = v95;
          sub_251F36770();
          if (v58) {
            goto LABEL_48;
          }
          (*(void (**)(char *, uint64_t))(v107 + 8))(v35, v108);
          goto LABEL_52;
        case 7:
          char v165 = 7;
          sub_251E286C4();
          uint64_t v59 = v95;
          sub_251F36770();
          if (v59) {
            goto LABEL_48;
          }
          (*(void (**)(char *, uint64_t))(v110 + 8))(v37, v109);
          goto LABEL_52;
        case 8:
          char v165 = 8;
          sub_251E28670();
          char v60 = v141;
          uint64_t v61 = v95;
          sub_251F36770();
          if (v61) {
            goto LABEL_48;
          }
          (*(void (**)(char *, uint64_t))(v111 + 8))(v60, v112);
          goto LABEL_52;
        case 9:
          char v165 = 9;
          sub_251E2861C();
          uint64_t v62 = v144;
          uint64_t v63 = v95;
          sub_251F36770();
          if (v63) {
            goto LABEL_48;
          }
          (*(void (**)(char *, uint64_t))(v113 + 8))(v62, v114);
          goto LABEL_52;
        case 10:
          char v165 = 10;
          sub_251E285C8();
          uint64_t v64 = v145;
          uint64_t v65 = v95;
          sub_251F36770();
          if (v65) {
            goto LABEL_48;
          }
          (*(void (**)(char *, uint64_t))(v115 + 8))(v64, v116);
          goto LABEL_52;
        case 11:
          char v165 = 11;
          sub_251E28574();
          uint64_t v66 = v146;
          uint64_t v67 = v95;
          sub_251F36770();
          if (v67) {
            goto LABEL_48;
          }
          (*(void (**)(char *, uint64_t))(v117 + 8))(v66, v118);
          goto LABEL_52;
        case 12:
          char v165 = 12;
          sub_251E28520();
          uint64_t v68 = v147;
          uint64_t v69 = v95;
          sub_251F36770();
          if (v69) {
            goto LABEL_48;
          }
          (*(void (**)(char *, uint64_t))(v119 + 8))(v68, v120);
          goto LABEL_52;
        case 13:
          char v165 = 13;
          sub_251E284CC();
          uint64_t v70 = v148;
          uint64_t v71 = v95;
          sub_251F36770();
          if (v71) {
            goto LABEL_48;
          }
          (*(void (**)(char *, uint64_t))(v121 + 8))(v70, v122);
          goto LABEL_52;
        case 14:
          char v165 = 14;
          sub_251E28478();
          uint64_t v72 = v149;
          uint64_t v73 = v95;
          sub_251F36770();
          if (v73) {
            goto LABEL_48;
          }
          (*(void (**)(char *, uint64_t))(v123 + 8))(v72, v124);
          goto LABEL_52;
        case 15:
          char v165 = 15;
          sub_251E28424();
          unint64_t v74 = v150;
          uint64_t v75 = v95;
          sub_251F36770();
          if (v75) {
            goto LABEL_48;
          }
          (*(void (**)(char *, uint64_t))(v125 + 8))(v74, v126);
          goto LABEL_52;
        case 16:
          char v165 = 16;
          sub_251E283D0();
          uint64_t v76 = v151;
          uint64_t v77 = v95;
          sub_251F36770();
          if (v77) {
            goto LABEL_48;
          }
          (*(void (**)(char *, uint64_t))(v127 + 8))(v76, v128);
          goto LABEL_52;
        case 17:
          char v165 = 17;
          sub_251E2837C();
          uint64_t v78 = v152;
          uint64_t v79 = v95;
          sub_251F36770();
          if (v79) {
            goto LABEL_48;
          }
          (*(void (**)(char *, uint64_t))(v129 + 8))(v78, v130);
          goto LABEL_52;
        case 18:
          char v165 = 18;
          sub_251E28328();
          uint64_t v80 = v153;
          uint64_t v81 = v95;
          sub_251F36770();
          if (v81) {
            goto LABEL_48;
          }
          (*(void (**)(char *, uint64_t))(v131 + 8))(v80, v132);
          goto LABEL_52;
        case 19:
          char v165 = 19;
          sub_251E282D4();
          uint64_t v82 = v154;
          uint64_t v83 = v95;
          sub_251F36770();
          if (v83) {
            goto LABEL_48;
          }
          (*(void (**)(char *, uint64_t))(v133 + 8))(v82, v134);
          goto LABEL_52;
        case 20:
          char v165 = 20;
          sub_251E28280();
          uint64_t v84 = v155;
          uint64_t v85 = v95;
          sub_251F36770();
          if (v85) {
            goto LABEL_48;
          }
          (*(void (**)(char *, uint64_t))(v135 + 8))(v84, v136);
          goto LABEL_52;
        case 21:
          char v165 = 21;
          sub_251E2822C();
          uint64_t v86 = v156;
          uint64_t v87 = v95;
          sub_251F36770();
          if (v87) {
            goto LABEL_48;
          }
          (*(void (**)(char *, uint64_t))(v137 + 8))(v86, v138);
          goto LABEL_52;
        case 22:
          char v165 = 22;
          sub_251E281D8();
          uint64_t v88 = v157;
          uint64_t v89 = v95;
          sub_251F36770();
          if (v89)
          {
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v164 + 8))(v40, v29);
            uint64_t v90 = (uint64_t)v163;
            return __swift_destroy_boxed_opaque_existential_0(v90);
          }
          (*(void (**)(char *, uint64_t))(v139 + 8))(v88, v39);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v164 + 8))(v40, v29);
          goto LABEL_53;
        default:
          char v165 = 0;
          sub_251E28910();
          uint64_t v43 = v93;
          uint64_t v44 = v95;
          sub_251F36770();
          if (v44)
          {
LABEL_48:
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v164 + 8))(v40, v29);
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v96 + 8))(v43, v92);
LABEL_52:
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v164 + 8))(v40, v29);
LABEL_53:
            *uint64_t v38 = v42;
          }
          break;
      }
    }
    else
    {
      uint64_t v45 = sub_251F36490();
      swift_allocError();
      uint64_t v46 = v29;
      uint64_t v48 = v47;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D440);
      void *v48 = &type metadata for SymptomError;
      sub_251F36780();
      sub_251F36480();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v45 - 8) + 104))(v48, *MEMORY[0x263F8DCB0], v45);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v164 + 8))(v40, v46);
    }
  }
  uint64_t v90 = (uint64_t)v163;
  return __swift_destroy_boxed_opaque_existential_0(v90);
}

uint64_t sub_251E26E54@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return SymptomError.init(from:)(a1, a2);
}

uint64_t sub_251E26E6C(void *a1)
{
  return SymptomError.encode(to:)(a1);
}

BOOL sub_251E26E84(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2 = *a1;
  unsigned __int8 v3 = *a2;
  if (qword_269B9C4F0 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_269BF3250;
  uint64_t v5 = sub_251D36EE0(v2, qword_269BF3250);
  if ((v6 & 1) == 0)
  {
    uint64_t v7 = v5;
    uint64_t v8 = sub_251D36EE0(v3, v4);
    if ((v9 & 1) == 0) {
      return v7 < v8;
    }
  }
  sub_251D36EE0(v2, v4);
  return (v11 & 1) == 0;
}

BOOL static SymptomError.< infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2 = *a1;
  unsigned __int8 v3 = *a2;
  if (qword_269B9C4F0 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_269BF3250;
  uint64_t v5 = sub_251D36EE0(v2, qword_269BF3250);
  if ((v6 & 1) == 0)
  {
    uint64_t v7 = v5;
    uint64_t v8 = sub_251D36EE0(v3, v4);
    if ((v9 & 1) == 0) {
      return v7 < v8;
    }
  }
  sub_251D36EE0(v2, v4);
  return (v11 & 1) == 0;
}

BOOL sub_251E26FD4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2 = *a1;
  unsigned __int8 v3 = *a2;
  if (qword_269B9C4F0 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_269BF3250;
  uint64_t v5 = sub_251D36EE0(v3, qword_269BF3250);
  if ((v6 & 1) == 0)
  {
    uint64_t v7 = v5;
    uint64_t v8 = sub_251D36EE0(v2, v4);
    if ((v9 & 1) == 0) {
      return v7 >= v8;
    }
  }
  sub_251D36EE0(v3, v4);
  return v11 & 1;
}

BOOL sub_251E27078(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2 = *a1;
  unsigned __int8 v3 = *a2;
  if (qword_269B9C4F0 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_269BF3250;
  uint64_t v5 = sub_251D36EE0(v2, qword_269BF3250);
  if ((v6 & 1) == 0)
  {
    uint64_t v7 = v5;
    uint64_t v8 = sub_251D36EE0(v3, v4);
    if ((v9 & 1) == 0) {
      return v7 >= v8;
    }
  }
  sub_251D36EE0(v2, v4);
  return v11 & 1;
}

BOOL sub_251E2711C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_251E72188(*a1, *a2);
}

void sub_251E27128()
{
  qword_269BF3250 = (uint64_t)&unk_27025F0E8;
}

uint64_t sub_251E2713C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_251ECDCB0(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_251E271A8(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_251E271A8(uint64_t *a1)
{
  uint64_t v3 = a1;
  uint64_t v4 = a1[1];
  uint64_t result = sub_251F36AA0();
  if (result >= v4)
  {
    if ((v4 & 0x8000000000000000) == 0)
    {
      if (v4) {
        return sub_251E279F8(0, v4, 1, v3);
      }
      return result;
    }
    goto LABEL_190;
  }
  if (v4 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 + 1;
  }
  if (v4 < -1) {
    goto LABEL_198;
  }
  uint64_t v104 = result;
  if (v4 < 2)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    __dst = (unsigned __int8 *)(MEMORY[0x263F8EE78] + 32);
    if (v4 != 1)
    {
      unint64_t v2 = *(void *)(MEMORY[0x263F8EE78] + 16);
      uint64_t v12 = (char *)MEMORY[0x263F8EE78];
      goto LABEL_153;
    }
    uint64_t v103 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v7 = v6 >> 1;
    uint64_t v8 = sub_251F35B50();
    *(void *)(v8 + 16) = v7;
    uint64_t v103 = v8;
    __dst = (unsigned __int8 *)(v8 + 32);
  }
  uint64_t v10 = 0;
  uint64_t v102 = v3;
  uint64_t v11 = *v3;
  uint64_t v12 = (char *)MEMORY[0x263F8EE78];
  uint64_t v105 = v4;
  while (2)
  {
    uint64_t v13 = v10 + 1;
    if (v10 + 1 >= v4) {
      goto LABEL_69;
    }
    int v14 = *(unsigned __int8 *)(v11 + v13);
    int v15 = *(unsigned __int8 *)(v11 + v10);
    if (qword_269B9C4F0 != -1) {
      swift_once();
    }
    uint64_t v16 = *(void *)(qword_269BF3250 + 16);
    if (v16)
    {
      unint64_t v17 = 0;
      uint64_t v18 = qword_269BF3250 + 32;
      while (*(unsigned __int8 *)(v18 + v17) != v14)
      {
        if (v16 == ++v17)
        {
LABEL_26:
          uint64_t v20 = 0;
          uint64_t v4 = v105;
          while (*(unsigned __int8 *)(v18 + v20) != v14)
          {
            uint64_t v21 = v20 + 1;
            if (__OFADD__(v20, 1))
            {
LABEL_182:
              __break(1u);
LABEL_183:
              __break(1u);
LABEL_184:
              __break(1u);
LABEL_185:
              __break(1u);
LABEL_186:
              __break(1u);
LABEL_187:
              __break(1u);
LABEL_188:
              __break(1u);
LABEL_189:
              __break(1u);
LABEL_190:
              __break(1u);
LABEL_191:
              __break(1u);
              goto LABEL_192;
            }
            ++v20;
            if (v21 == v16) {
              goto LABEL_30;
            }
          }
          uint64_t v22 = v10 + 2;
          if (v10 + 2 < v105)
          {
            BOOL v23 = 1;
            goto LABEL_35;
          }
LABEL_57:
          if (v22 >= v10)
          {
            if (v10 < v22)
            {
              uint64_t v31 = v22 - 1;
              uint64_t v32 = v10;
              while (1)
              {
                if (v32 != v31)
                {
                  if (!v11) {
                    goto LABEL_196;
                  }
                  char v33 = *(unsigned char *)(v11 + v32);
                  *(unsigned char *)(v11 + v32) = *(unsigned char *)(v11 + v31);
                  *(unsigned char *)(v11 + v31) = v33;
                }
                BOOL v77 = ++v32 < v31--;
                if (!v77) {
                  goto LABEL_66;
                }
              }
            }
            goto LABEL_66;
          }
LABEL_193:
          __break(1u);
LABEL_194:
          __break(1u);
LABEL_195:
          __break(1u);
LABEL_196:
          __break(1u);
LABEL_197:
          __break(1u);
LABEL_198:
          uint64_t result = sub_251F36670();
          __break(1u);
          return result;
        }
      }
      unint64_t v19 = 0;
      while (*(unsigned __int8 *)(v18 + v19) != v15)
      {
        if (v16 == ++v19) {
          goto LABEL_26;
        }
      }
      BOOL v23 = v17 < v19;
      uint64_t v22 = v10 + 2;
      uint64_t v4 = v105;
      if (v10 + 2 >= v105)
      {
LABEL_56:
        uint64_t v13 = v22;
        if (v23) {
          goto LABEL_57;
        }
LABEL_69:
        if (v13 < v4) {
          goto LABEL_70;
        }
        goto LABEL_100;
      }
    }
    else
    {
      uint64_t v4 = v105;
LABEL_30:
      uint64_t v22 = v10 + 2;
      if (v10 + 2 >= v4) {
        goto LABEL_66;
      }
      BOOL v23 = 0;
    }
LABEL_35:
    uint64_t v24 = qword_269BF3250 + 32;
    if (v4 <= v22 + 1) {
      uint64_t v25 = v22 + 1;
    }
    else {
      uint64_t v25 = v4;
    }
    while (!v16)
    {
LABEL_38:
      if (v23) {
        goto LABEL_57;
      }
LABEL_39:
      uint64_t v13 = v22++;
      if (v22 >= v4)
      {
        uint64_t v22 = v25;
        uint64_t v13 = v25;
        if (v23) {
          goto LABEL_57;
        }
        goto LABEL_69;
      }
    }
    unint64_t v26 = 0;
    int v27 = *(unsigned __int8 *)(v11 + v22);
    do
    {
      if (*(unsigned __int8 *)(v24 + v26) == v27)
      {
        unint64_t v28 = 0;
        while (*(unsigned __int8 *)(v24 + v28) != *(unsigned __int8 *)(v11 + v13))
        {
          if (v16 == ++v28) {
            goto LABEL_48;
          }
        }
        if (v23 == v26 >= v28) {
          goto LABEL_56;
        }
        goto LABEL_39;
      }
      ++v26;
    }
    while (v16 != v26);
LABEL_48:
    uint64_t v29 = 0;
    while (*(unsigned __int8 *)(v24 + v29) != v27)
    {
      uint64_t v30 = v29 + 1;
      if (__OFADD__(v29, 1))
      {
        __break(1u);
LABEL_168:
        __break(1u);
LABEL_169:
        __break(1u);
LABEL_170:
        __break(1u);
LABEL_171:
        __break(1u);
LABEL_172:
        __break(1u);
LABEL_173:
        __break(1u);
LABEL_174:
        __break(1u);
LABEL_175:
        __break(1u);
LABEL_176:
        __break(1u);
LABEL_177:
        __break(1u);
LABEL_178:
        __break(1u);
LABEL_179:
        __break(1u);
LABEL_180:
        __break(1u);
LABEL_181:
        __break(1u);
        goto LABEL_182;
      }
      ++v29;
      if (v30 == v16) {
        goto LABEL_38;
      }
    }
    if (v23) {
      goto LABEL_39;
    }
LABEL_66:
    uint64_t v13 = v22;
    if (v22 >= v4) {
      goto LABEL_100;
    }
LABEL_70:
    if (__OFSUB__(v13, v10)) {
      goto LABEL_189;
    }
    if (v13 - v10 >= v104) {
      goto LABEL_100;
    }
    if (__OFADD__(v10, v104)) {
      goto LABEL_191;
    }
    if (v10 + v104 >= v4) {
      uint64_t v34 = v4;
    }
    else {
      uint64_t v34 = v10 + v104;
    }
    if (v34 < v10)
    {
LABEL_192:
      __break(1u);
      goto LABEL_193;
    }
    if (v13 == v34)
    {
LABEL_100:
      if (v13 < v10) {
        goto LABEL_188;
      }
      uint64_t v106 = v13;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v12 = sub_251ECD5C4(0, *((void *)v12 + 2) + 1, 1, v12);
      }
      unint64_t v46 = *((void *)v12 + 2);
      unint64_t v45 = *((void *)v12 + 3);
      unint64_t v2 = v46 + 1;
      if (v46 >= v45 >> 1) {
        uint64_t v12 = sub_251ECD5C4((char *)(v45 > 1), v46 + 1, 1, v12);
      }
      *((void *)v12 + 2) = v2;
      uint64_t v47 = v12 + 32;
      uint64_t v48 = &v12[16 * v46 + 32];
      *(void *)uint64_t v48 = v10;
      *((void *)v48 + 1) = v13;
      if (v46)
      {
        while (1)
        {
          unint64_t v49 = v2 - 1;
          if (v2 >= 4)
          {
            uint64_t v54 = &v47[16 * v2];
            uint64_t v55 = *((void *)v54 - 8);
            uint64_t v56 = *((void *)v54 - 7);
            BOOL v60 = __OFSUB__(v56, v55);
            uint64_t v57 = v56 - v55;
            if (v60) {
              goto LABEL_172;
            }
            uint64_t v59 = *((void *)v54 - 6);
            uint64_t v58 = *((void *)v54 - 5);
            BOOL v60 = __OFSUB__(v58, v59);
            uint64_t v52 = v58 - v59;
            char v53 = v60;
            if (v60) {
              goto LABEL_173;
            }
            unint64_t v61 = v2 - 2;
            uint64_t v62 = &v47[16 * v2 - 32];
            uint64_t v64 = *(void *)v62;
            uint64_t v63 = *((void *)v62 + 1);
            BOOL v60 = __OFSUB__(v63, v64);
            uint64_t v65 = v63 - v64;
            if (v60) {
              goto LABEL_175;
            }
            BOOL v60 = __OFADD__(v52, v65);
            uint64_t v66 = v52 + v65;
            if (v60) {
              goto LABEL_178;
            }
            if (v66 >= v57)
            {
              uint64_t v84 = &v47[16 * v49];
              uint64_t v86 = *(void *)v84;
              uint64_t v85 = *((void *)v84 + 1);
              BOOL v60 = __OFSUB__(v85, v86);
              uint64_t v87 = v85 - v86;
              if (v60) {
                goto LABEL_183;
              }
              BOOL v77 = v52 < v87;
              goto LABEL_137;
            }
          }
          else
          {
            if (v2 != 3)
            {
              uint64_t v78 = *((void *)v12 + 4);
              uint64_t v79 = *((void *)v12 + 5);
              BOOL v60 = __OFSUB__(v79, v78);
              uint64_t v71 = v79 - v78;
              char v72 = v60;
              goto LABEL_131;
            }
            uint64_t v51 = *((void *)v12 + 4);
            uint64_t v50 = *((void *)v12 + 5);
            BOOL v60 = __OFSUB__(v50, v51);
            uint64_t v52 = v50 - v51;
            char v53 = v60;
          }
          if (v53) {
            goto LABEL_174;
          }
          unint64_t v61 = v2 - 2;
          uint64_t v67 = &v47[16 * v2 - 32];
          uint64_t v69 = *(void *)v67;
          uint64_t v68 = *((void *)v67 + 1);
          BOOL v70 = __OFSUB__(v68, v69);
          uint64_t v71 = v68 - v69;
          char v72 = v70;
          if (v70) {
            goto LABEL_177;
          }
          uint64_t v73 = &v47[16 * v49];
          uint64_t v75 = *(void *)v73;
          uint64_t v74 = *((void *)v73 + 1);
          BOOL v60 = __OFSUB__(v74, v75);
          uint64_t v76 = v74 - v75;
          if (v60) {
            goto LABEL_180;
          }
          if (__OFADD__(v71, v76)) {
            goto LABEL_181;
          }
          if (v71 + v76 >= v52)
          {
            BOOL v77 = v52 < v76;
LABEL_137:
            if (v77) {
              unint64_t v49 = v61;
            }
            goto LABEL_139;
          }
LABEL_131:
          if (v72) {
            goto LABEL_176;
          }
          uint64_t v80 = &v47[16 * v49];
          uint64_t v82 = *(void *)v80;
          uint64_t v81 = *((void *)v80 + 1);
          BOOL v60 = __OFSUB__(v81, v82);
          uint64_t v83 = v81 - v82;
          if (v60) {
            goto LABEL_179;
          }
          if (v83 < v71) {
            goto LABEL_148;
          }
LABEL_139:
          unint64_t v88 = v49 - 1;
          if (v49 - 1 >= v2) {
            goto LABEL_168;
          }
          if (!v11) {
            goto LABEL_194;
          }
          uint64_t v89 = &v47[16 * v88];
          uint64_t v90 = *(void *)v89;
          uint64_t v91 = &v47[16 * v49];
          uint64_t v92 = *((void *)v91 + 1);
          sub_251E27B34((unsigned __int8 *)(v11 + *(void *)v89), (unsigned __int8 *)(v11 + *(void *)v91), v11 + v92, __dst);
          if (v1) {
            goto LABEL_164;
          }
          if (v92 < v90) {
            goto LABEL_169;
          }
          if (v49 > *((void *)v12 + 2)) {
            goto LABEL_170;
          }
          *(void *)uint64_t v89 = v90;
          *(void *)&v47[16 * v88 + 8] = v92;
          unint64_t v93 = *((void *)v12 + 2);
          if (v49 >= v93) {
            goto LABEL_171;
          }
          unint64_t v2 = v93 - 1;
          memmove(&v47[16 * v49], v91 + 16, 16 * (v93 - 1 - v49));
          *((void *)v12 + 2) = v93 - 1;
          if (v93 <= 2) {
            goto LABEL_148;
          }
        }
      }
      unint64_t v2 = 1;
LABEL_148:
      uint64_t v4 = v105;
      uint64_t v10 = v106;
      if (v106 >= v105) {
        goto LABEL_166;
      }
      continue;
    }
    break;
  }
  if (qword_269B9C4F0 != -1) {
    swift_once();
  }
  while (2)
  {
    uint64_t v35 = v13;
LABEL_82:
    uint64_t v36 = *(void *)(qword_269BF3250 + 16);
    if (!v36)
    {
LABEL_80:
      if (++v13 != v34) {
        continue;
      }
      uint64_t v13 = v34;
      goto LABEL_100;
    }
    break;
  }
  unint64_t v37 = 0;
  uint64_t v38 = v35 - 1;
  int v39 = *(unsigned __int8 *)(v11 + v35 - 1);
  int v40 = *(unsigned __int8 *)(v11 + v35);
  uint64_t v41 = qword_269BF3250 + 32;
  do
  {
    if (*(unsigned __int8 *)(v41 + v37) == v40)
    {
      unint64_t v42 = 0;
      while (*(unsigned __int8 *)(v41 + v42) != v39)
      {
        if (v36 == ++v42) {
          goto LABEL_90;
        }
      }
      if (v37 >= v42) {
        goto LABEL_80;
      }
LABEL_96:
      if (!v11) {
        goto LABEL_195;
      }
      *(unsigned char *)(v11 + v35) = v39;
      *(unsigned char *)(v11 + v38) = v40;
      --v35;
      if (v38 == v10) {
        goto LABEL_80;
      }
      goto LABEL_82;
    }
    ++v37;
  }
  while (v36 != v37);
LABEL_90:
  uint64_t v43 = 0;
  while (1)
  {
    if (*(unsigned __int8 *)(v41 + v43) == v40) {
      goto LABEL_96;
    }
    uint64_t v44 = v43 + 1;
    if (__OFADD__(v43, 1)) {
      break;
    }
    ++v43;
    if (v44 == v36) {
      goto LABEL_80;
    }
  }
  __break(1u);
LABEL_166:
  uint64_t v3 = v102;
  uint64_t v9 = v103;
LABEL_153:
  uint64_t v103 = v9;
  if (v2 >= 2)
  {
    uint64_t v94 = *v3;
    do
    {
      unint64_t v95 = v2 - 2;
      if (v2 < 2) {
        goto LABEL_184;
      }
      if (!v94) {
        goto LABEL_197;
      }
      uint64_t v96 = v12;
      uint64_t v97 = v12 + 32;
      uint64_t v98 = *(void *)&v12[16 * v95 + 32];
      uint64_t v99 = *(void *)&v12[16 * v2 + 24];
      sub_251E27B34((unsigned __int8 *)(v94 + v98), (unsigned __int8 *)(v94 + *(void *)&v97[16 * v2 - 16]), v94 + v99, __dst);
      if (v1) {
        break;
      }
      if (v99 < v98) {
        goto LABEL_185;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v96 = sub_251ECDC38((uint64_t)v96);
      }
      if (v95 >= *((void *)v96 + 2)) {
        goto LABEL_186;
      }
      uint64_t v100 = &v96[16 * v95 + 32];
      *(void *)uint64_t v100 = v98;
      *((void *)v100 + 1) = v99;
      unint64_t v101 = *((void *)v96 + 2);
      if (v2 > v101) {
        goto LABEL_187;
      }
      memmove(&v96[16 * v2 + 16], &v96[16 * v2 + 32], 16 * (v101 - v2));
      uint64_t v12 = v96;
      *((void *)v96 + 2) = v101 - 1;
      unint64_t v2 = v101 - 1;
    }
    while (v101 > 2);
  }
LABEL_164:
  swift_bridgeObjectRelease();
  *(void *)(v103 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_251E279F8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    if (qword_269B9C4F0 != -1) {
      uint64_t result = swift_once();
    }
    do
    {
      uint64_t v8 = v4;
      while (2)
      {
        uint64_t v9 = *(void *)(qword_269BF3250 + 16);
        if (v9)
        {
          unint64_t v10 = 0;
          uint64_t v11 = v8 - 1;
          int v12 = *(unsigned __int8 *)(v7 + v8 - 1);
          int v13 = *(unsigned __int8 *)(v7 + v8);
          uint64_t v14 = qword_269BF3250 + 32;
          while (*(unsigned __int8 *)(v14 + v10) != v13)
          {
            if (v9 == ++v10)
            {
LABEL_15:
              uint64_t v16 = 0;
              while (*(unsigned __int8 *)(v14 + v16) != v13)
              {
                uint64_t v17 = v16 + 1;
                if (__OFADD__(v16, 1))
                {
                  __break(1u);
                  goto LABEL_25;
                }
                ++v16;
                if (v17 == v9) {
                  goto LABEL_5;
                }
              }
              goto LABEL_21;
            }
          }
          unint64_t v15 = 0;
          while (*(unsigned __int8 *)(v14 + v15) != v12)
          {
            if (v9 == ++v15) {
              goto LABEL_15;
            }
          }
          if (v10 >= v15) {
            break;
          }
LABEL_21:
          if (!v7)
          {
LABEL_25:
            __break(1u);
            return result;
          }
          *(unsigned char *)(v7 + v8) = v12;
          *(unsigned char *)(v7 + v11) = v13;
          --v8;
          if (v11 != v6) {
            continue;
          }
        }
        break;
      }
LABEL_5:
      ++v4;
    }
    while (v4 != a2);
  }
  return result;
}

uint64_t sub_251E27B34(unsigned __int8 *__src, unsigned __int8 *a2, unint64_t a3, unsigned __int8 *__dst)
{
  uint64_t v34 = __src;
  uint64_t v4 = __dst;
  uint64_t v5 = (unsigned __int8 *)a3;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  size_t v8 = a2 - __src;
  unint64_t v9 = a3 - (void)a2;
  char v33 = __dst;
  if (a2 - __src >= (uint64_t)(a3 - (void)a2))
  {
    if ((v9 & 0x8000000000000000) == 0)
    {
      if (__dst != a2 || a3 <= (unint64_t)__dst) {
        memmove(__dst, a2, a3 - (void)a2);
      }
      unint64_t v10 = &v4[v9];
      uint64_t v32 = &v4[v9];
      uint64_t v34 = v6;
      if (v7 < v6 && v5 != v6)
      {
        if (qword_269B9C4F0 != -1) {
          swift_once();
        }
        while (1)
        {
          uint64_t v20 = v5 - 1;
          uint64_t v21 = v10 - 1;
          uint64_t v22 = *(void *)(qword_269BF3250 + 16);
          if (v22) {
            break;
          }
LABEL_60:
          uint64_t v32 = v10 - 1;
          if (v5 < v10 || v20 >= v10 || v5 != v10) {
            *uint64_t v20 = *v21;
          }
          uint64_t v24 = v6;
          --v10;
          if (v6 <= v7) {
            goto LABEL_66;
          }
LABEL_65:
          uint64_t v6 = v24;
          --v5;
          if (v10 <= v4) {
            goto LABEL_66;
          }
        }
        unint64_t v23 = 0;
        uint64_t v24 = v6 - 1;
        int v25 = *(v6 - 1);
        int v26 = *v21;
        uint64_t v27 = qword_269BF3250 + 32;
        while (*(unsigned __int8 *)(v27 + v23) != v26)
        {
          if (v22 == ++v23)
          {
LABEL_49:
            uint64_t v29 = 0;
            while (*(unsigned __int8 *)(v27 + v29) != v26)
            {
              uint64_t v30 = v29 + 1;
              if (__OFADD__(v29, 1))
              {
                __break(1u);
LABEL_68:
                __break(1u);
                goto LABEL_69;
              }
              ++v29;
              if (v30 == v22) {
                goto LABEL_60;
              }
            }
            goto LABEL_55;
          }
        }
        unint64_t v28 = 0;
        while (*(unsigned __int8 *)(v27 + v28) != v25)
        {
          if (v22 == ++v28) {
            goto LABEL_49;
          }
        }
        if (v23 >= v28) {
          goto LABEL_60;
        }
LABEL_55:
        if (v5 != v6 || v20 >= v6) {
          *uint64_t v20 = v25;
        }
        uint64_t v34 = v6 - 1;
        if (v24 > v7) {
          goto LABEL_65;
        }
      }
      goto LABEL_66;
    }
  }
  else if ((v8 & 0x8000000000000000) == 0)
  {
    if (__dst != __src || a2 <= __dst) {
      memmove(__dst, __src, v8);
    }
    unint64_t v10 = &v4[v8];
    uint64_t v32 = v10;
    if (v6 != v7 && v6 < v5)
    {
      if (qword_269B9C4F0 != -1) {
LABEL_69:
      }
        swift_once();
      do
      {
        int v11 = *v4;
        uint64_t v12 = *(void *)(qword_269BF3250 + 16);
        if (v12)
        {
          unint64_t v13 = 0;
          int v14 = *v6;
          uint64_t v15 = qword_269BF3250 + 32;
          while (*(unsigned __int8 *)(v15 + v13) != v14)
          {
            if (v12 == ++v13)
            {
LABEL_17:
              uint64_t v17 = 0;
              while (*(unsigned __int8 *)(v15 + v17) != v14)
              {
                uint64_t v18 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_68;
                }
                ++v17;
                if (v18 == v12) {
                  goto LABEL_27;
                }
              }
LABEL_23:
              unint64_t v19 = v6 + 1;
              if (v7 < v6 || v7 >= v19 || v7 != v6) {
                *uint64_t v7 = v14;
              }
              goto LABEL_30;
            }
          }
          unint64_t v16 = 0;
          while (*(unsigned __int8 *)(v15 + v16) != v11)
          {
            if (v12 == ++v16) {
              goto LABEL_17;
            }
          }
          if (v13 < v16) {
            goto LABEL_23;
          }
        }
LABEL_27:
        if (v7 != v4) {
          *uint64_t v7 = v11;
        }
        char v33 = ++v4;
        unint64_t v19 = v6;
LABEL_30:
        ++v7;
        if (v4 >= v10) {
          break;
        }
        uint64_t v6 = v19;
      }
      while (v19 < v5);
      uint64_t v34 = v7;
    }
LABEL_66:
    sub_251ECD7E0(&v34, &v33, &v32);
    return 1;
  }
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t _s13HomeDataModel12SymptomErrorO12statusString4with21isForAccessoryControlSSSgShyACGSg_SbtFZ_0(uint64_t a1, char a2)
{
  uint64_t v2 = a1;
  if (a1)
  {
    uint64_t v4 = swift_bridgeObjectRetain();
    uint64_t v14 = sub_251A915C4(v4);
    sub_251E2713C(&v14);
    swift_bridgeObjectRelease();
    if (*(void *)(v14 + 16))
    {
      uint64_t v5 = *(unsigned __int8 *)(v14 + 32);
      swift_release();
      uint64_t v2 = 0;
      switch(v5)
      {
        case 2:
        case 6:
          uint64_t v11 = 0xD000000000000020;
          uint64_t v12 = "HFSymptomDescriptionNeedsService";
          goto LABEL_19;
        case 3:
        case 10:
        case 13:
        case 15:
        case 16:
        case 18:
          id v6 = (id)MobileGestalt_get_current_device();
          uint64_t v7 = v6;
          if (a2)
          {
            if (v6)
            {
              MobileGestalt_get_wapiCapability();

              unint64_t v8 = 0xD000000000000015;
              unint64_t v9 = "HFSymptomNetworkError";
LABEL_11:
              uint64_t v14 = v8;
              unint64_t v15 = (unint64_t)(v9 - 32) | 0x8000000000000000;
              sub_251F35800();
              sub_251F35800();
              swift_bridgeObjectRelease();
              uint64_t v2 = static String.hfLocalized(_:)(v14, v15);
              swift_bridgeObjectRelease();
              return v2;
            }
            __break(1u);
          }
          else if (v6)
          {
            MobileGestalt_get_wapiCapability();

            unint64_t v8 = 0xD000000000000026;
            unint64_t v9 = "HFSymptomDescriptionProblemWiFiNetwork";
            goto LABEL_11;
          }
          __break(1u);
          swift_release();
          __break(1u);
          JUMPOUT(0x251E28128);
        case 4:
          uint64_t v11 = 0xD00000000000002DLL;
          uint64_t v12 = "HFSymptomDescriptionProblemWifiPerformanceFix";
          goto LABEL_19;
        case 5:
        case 7:
        case 8:
        case 9:
        case 11:
        case 14:
        case 17:
        case 21:
        case 22:
          return v2;
        case 12:
          uint64_t v11 = 0xD000000000000025;
          uint64_t v12 = "HFSymptomDescriptionVPNProfileExpired";
          goto LABEL_19;
        case 20:
          uint64_t v11 = 0xD00000000000002FLL;
          uint64_t v12 = "HMSymptomDescriptionSharedUserErrorNotification";
          goto LABEL_19;
        default:
          if (a2)
          {
            unint64_t v10 = 0x8000000251F72310;
            uint64_t v11 = 0xD000000000000015;
          }
          else
          {
            uint64_t v11 = 0xD000000000000022;
            uint64_t v12 = "HFSymptomDescriptionProblemAccount";
LABEL_19:
            unint64_t v10 = (unint64_t)(v12 - 32) | 0x8000000000000000;
          }
          return static String.hfLocalized(_:)(v11, v10);
      }
    }
    swift_release();
    return 0;
  }
  return v2;
}

unint64_t sub_251E28184()
{
  unint64_t result = qword_269BA3F68;
  if (!qword_269BA3F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3F68);
  }
  return result;
}

unint64_t sub_251E281D8()
{
  unint64_t result = qword_269BA3F70;
  if (!qword_269BA3F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3F70);
  }
  return result;
}

unint64_t sub_251E2822C()
{
  unint64_t result = qword_269BA3F78;
  if (!qword_269BA3F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3F78);
  }
  return result;
}

unint64_t sub_251E28280()
{
  unint64_t result = qword_269BA3F80;
  if (!qword_269BA3F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3F80);
  }
  return result;
}

unint64_t sub_251E282D4()
{
  unint64_t result = qword_269BA3F88;
  if (!qword_269BA3F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3F88);
  }
  return result;
}

unint64_t sub_251E28328()
{
  unint64_t result = qword_269BA3F90;
  if (!qword_269BA3F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3F90);
  }
  return result;
}

unint64_t sub_251E2837C()
{
  unint64_t result = qword_269BA3F98;
  if (!qword_269BA3F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3F98);
  }
  return result;
}

unint64_t sub_251E283D0()
{
  unint64_t result = qword_269BA3FA0;
  if (!qword_269BA3FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3FA0);
  }
  return result;
}

unint64_t sub_251E28424()
{
  unint64_t result = qword_269BA3FA8;
  if (!qword_269BA3FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3FA8);
  }
  return result;
}

unint64_t sub_251E28478()
{
  unint64_t result = qword_269BA3FB0;
  if (!qword_269BA3FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3FB0);
  }
  return result;
}

unint64_t sub_251E284CC()
{
  unint64_t result = qword_269BA3FB8;
  if (!qword_269BA3FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3FB8);
  }
  return result;
}

unint64_t sub_251E28520()
{
  unint64_t result = qword_269BA3FC0;
  if (!qword_269BA3FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3FC0);
  }
  return result;
}

unint64_t sub_251E28574()
{
  unint64_t result = qword_269BA3FC8;
  if (!qword_269BA3FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3FC8);
  }
  return result;
}

unint64_t sub_251E285C8()
{
  unint64_t result = qword_269BA3FD0;
  if (!qword_269BA3FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3FD0);
  }
  return result;
}

unint64_t sub_251E2861C()
{
  unint64_t result = qword_269BA3FD8;
  if (!qword_269BA3FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3FD8);
  }
  return result;
}

unint64_t sub_251E28670()
{
  unint64_t result = qword_269BA3FE0;
  if (!qword_269BA3FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3FE0);
  }
  return result;
}

unint64_t sub_251E286C4()
{
  unint64_t result = qword_269BA3FE8;
  if (!qword_269BA3FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3FE8);
  }
  return result;
}

unint64_t sub_251E28718()
{
  unint64_t result = qword_269BA3FF0;
  if (!qword_269BA3FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3FF0);
  }
  return result;
}

unint64_t sub_251E2876C()
{
  unint64_t result = qword_269BA3FF8;
  if (!qword_269BA3FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA3FF8);
  }
  return result;
}

unint64_t sub_251E287C0()
{
  unint64_t result = qword_269BA4000;
  if (!qword_269BA4000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4000);
  }
  return result;
}

unint64_t sub_251E28814()
{
  unint64_t result = qword_269BA4008;
  if (!qword_269BA4008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4008);
  }
  return result;
}

unint64_t sub_251E28868()
{
  unint64_t result = qword_269BA4010;
  if (!qword_269BA4010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4010);
  }
  return result;
}

unint64_t sub_251E288BC()
{
  unint64_t result = qword_269BA4018;
  if (!qword_269BA4018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4018);
  }
  return result;
}

unint64_t sub_251E28910()
{
  unint64_t result = qword_269BA4020;
  if (!qword_269BA4020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4020);
  }
  return result;
}

unint64_t sub_251E28968()
{
  unint64_t result = qword_26B21F068;
  if (!qword_26B21F068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B21F068);
  }
  return result;
}

ValueMetadata *type metadata accessor for SymptomError()
{
  return &type metadata for SymptomError;
}

uint64_t _s13HomeDataModel12SymptomErrorOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEA) {
    goto LABEL_17;
  }
  if (a2 + 22 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 22) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 22;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 22;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 22;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x17;
  int v8 = v6 - 23;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s13HomeDataModel12SymptomErrorOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 22 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 22) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE9)
  {
    unsigned int v6 = ((a2 - 234) >> 8) + 1;
    *unint64_t result = a2 + 22;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251E28B30);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 22;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SymptomError.CodingKeys()
{
  return &type metadata for SymptomError.CodingKeys;
}

ValueMetadata *type metadata accessor for SymptomError.NeediCloudCredentialCodingKeys()
{
  return &type metadata for SymptomError.NeediCloudCredentialCodingKeys;
}

ValueMetadata *type metadata accessor for SymptomError.NeediTunesCredentialCodingKeys()
{
  return &type metadata for SymptomError.NeediTunesCredentialCodingKeys;
}

ValueMetadata *type metadata accessor for SymptomError.NeedHomeKitFixCodingKeys()
{
  return &type metadata for SymptomError.NeedHomeKitFixCodingKeys;
}

ValueMetadata *type metadata accessor for SymptomError.NeedWiFiFixCodingKeys()
{
  return &type metadata for SymptomError.NeedWiFiFixCodingKeys;
}

ValueMetadata *type metadata accessor for SymptomError.NeedWiFiPerformanceFixCodingKeys()
{
  return &type metadata for SymptomError.NeedWiFiPerformanceFixCodingKeys;
}

ValueMetadata *type metadata accessor for SymptomError.NeedInternetFixCodingKeys()
{
  return &type metadata for SymptomError.NeedInternetFixCodingKeys;
}

ValueMetadata *type metadata accessor for SymptomError.NeedHardwareFixCodingKeys()
{
  return &type metadata for SymptomError.NeedHardwareFixCodingKeys;
}

ValueMetadata *type metadata accessor for SymptomError.StereoVersionMismatchCodingKeys()
{
  return &type metadata for SymptomError.StereoVersionMismatchCodingKeys;
}

ValueMetadata *type metadata accessor for SymptomError.StereoNotFoundCodingKeys()
{
  return &type metadata for SymptomError.StereoNotFoundCodingKeys;
}

ValueMetadata *type metadata accessor for SymptomError.StereoErrorCodingKeys()
{
  return &type metadata for SymptomError.StereoErrorCodingKeys;
}

ValueMetadata *type metadata accessor for SymptomError.WiFiNetworkMismatchCodingKeys()
{
  return &type metadata for SymptomError.WiFiNetworkMismatchCodingKeys;
}

ValueMetadata *type metadata accessor for SymptomError.NoConfiguredTargetsCodingKeys()
{
  return &type metadata for SymptomError.NoConfiguredTargetsCodingKeys;
}

ValueMetadata *type metadata accessor for SymptomError.VpnProfileExpiredCodingKeys()
{
  return &type metadata for SymptomError.VpnProfileExpiredCodingKeys;
}

ValueMetadata *type metadata accessor for SymptomError.Need8021xNetworkFixCodingKeys()
{
  return &type metadata for SymptomError.Need8021xNetworkFixCodingKeys;
}

ValueMetadata *type metadata accessor for SymptomError.NeedWiFiSecurityFixCodingKeys()
{
  return &type metadata for SymptomError.NeedWiFiSecurityFixCodingKeys;
}

ValueMetadata *type metadata accessor for SymptomError.NeedNetworkProfileFixCodingKeys()
{
  return &type metadata for SymptomError.NeedNetworkProfileFixCodingKeys;
}

ValueMetadata *type metadata accessor for SymptomError.NeedNetworkProfileInstallCodingKeys()
{
  return &type metadata for SymptomError.NeedNetworkProfileInstallCodingKeys;
}

ValueMetadata *type metadata accessor for SymptomError.NetworkNotShareableCodingKeys()
{
  return &type metadata for SymptomError.NetworkNotShareableCodingKeys;
}

ValueMetadata *type metadata accessor for SymptomError.NeedCaptiveLeaseRenewalCodingKeys()
{
  return &type metadata for SymptomError.NeedCaptiveLeaseRenewalCodingKeys;
}

ValueMetadata *type metadata accessor for SymptomError.NeedCDPFixCodingKeys()
{
  return &type metadata for SymptomError.NeedCDPFixCodingKeys;
}

ValueMetadata *type metadata accessor for SymptomError.NeedGeneralFixCodingKeys()
{
  return &type metadata for SymptomError.NeedGeneralFixCodingKeys;
}

ValueMetadata *type metadata accessor for SymptomError.FixInProgressCodingKeys()
{
  return &type metadata for SymptomError.FixInProgressCodingKeys;
}

ValueMetadata *type metadata accessor for SymptomError.PrimaryResidentUnreachableCodingKeys()
{
  return &type metadata for SymptomError.PrimaryResidentUnreachableCodingKeys;
}

unint64_t sub_251E28CDC()
{
  unint64_t result = qword_269BA40E8;
  if (!qword_269BA40E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA40E8);
  }
  return result;
}

unint64_t sub_251E28D34()
{
  unint64_t result = qword_269BA40F0;
  if (!qword_269BA40F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA40F0);
  }
  return result;
}

unint64_t sub_251E28D8C()
{
  unint64_t result = qword_269BA40F8;
  if (!qword_269BA40F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA40F8);
  }
  return result;
}

unint64_t sub_251E28DE4()
{
  unint64_t result = qword_269BA4100;
  if (!qword_269BA4100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4100);
  }
  return result;
}

unint64_t sub_251E28E3C()
{
  unint64_t result = qword_269BA4108;
  if (!qword_269BA4108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4108);
  }
  return result;
}

unint64_t sub_251E28E94()
{
  unint64_t result = qword_269BA4110;
  if (!qword_269BA4110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4110);
  }
  return result;
}

unint64_t sub_251E28EEC()
{
  unint64_t result = qword_269BA4118;
  if (!qword_269BA4118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4118);
  }
  return result;
}

unint64_t sub_251E28F44()
{
  unint64_t result = qword_269BA4120;
  if (!qword_269BA4120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4120);
  }
  return result;
}

unint64_t sub_251E28F9C()
{
  unint64_t result = qword_269BA4128;
  if (!qword_269BA4128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4128);
  }
  return result;
}

unint64_t sub_251E28FF4()
{
  unint64_t result = qword_269BA4130;
  if (!qword_269BA4130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4130);
  }
  return result;
}

unint64_t sub_251E2904C()
{
  unint64_t result = qword_269BA4138;
  if (!qword_269BA4138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4138);
  }
  return result;
}

unint64_t sub_251E290A4()
{
  unint64_t result = qword_269BA4140;
  if (!qword_269BA4140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4140);
  }
  return result;
}

unint64_t sub_251E290FC()
{
  unint64_t result = qword_269BA4148;
  if (!qword_269BA4148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4148);
  }
  return result;
}

unint64_t sub_251E29154()
{
  unint64_t result = qword_269BA4150;
  if (!qword_269BA4150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4150);
  }
  return result;
}

unint64_t sub_251E291AC()
{
  unint64_t result = qword_269BA4158;
  if (!qword_269BA4158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4158);
  }
  return result;
}

unint64_t sub_251E29204()
{
  unint64_t result = qword_269BA4160;
  if (!qword_269BA4160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4160);
  }
  return result;
}

unint64_t sub_251E2925C()
{
  unint64_t result = qword_269BA4168;
  if (!qword_269BA4168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4168);
  }
  return result;
}

unint64_t sub_251E292B4()
{
  unint64_t result = qword_269BA4170;
  if (!qword_269BA4170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4170);
  }
  return result;
}

unint64_t sub_251E2930C()
{
  unint64_t result = qword_269BA4178;
  if (!qword_269BA4178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4178);
  }
  return result;
}

unint64_t sub_251E29364()
{
  unint64_t result = qword_269BA4180;
  if (!qword_269BA4180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4180);
  }
  return result;
}

unint64_t sub_251E293BC()
{
  unint64_t result = qword_269BA4188;
  if (!qword_269BA4188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4188);
  }
  return result;
}

unint64_t sub_251E29414()
{
  unint64_t result = qword_269BA4190;
  if (!qword_269BA4190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4190);
  }
  return result;
}

unint64_t sub_251E2946C()
{
  unint64_t result = qword_269BA4198;
  if (!qword_269BA4198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4198);
  }
  return result;
}

unint64_t sub_251E294C4()
{
  unint64_t result = qword_269BA41A0;
  if (!qword_269BA41A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA41A0);
  }
  return result;
}

unint64_t sub_251E2951C()
{
  unint64_t result = qword_269BA41A8;
  if (!qword_269BA41A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA41A8);
  }
  return result;
}

unint64_t sub_251E29574()
{
  unint64_t result = qword_269BA41B0;
  if (!qword_269BA41B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA41B0);
  }
  return result;
}

unint64_t sub_251E295CC()
{
  unint64_t result = qword_269BA41B8;
  if (!qword_269BA41B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA41B8);
  }
  return result;
}

unint64_t sub_251E29624()
{
  unint64_t result = qword_269BA41C0;
  if (!qword_269BA41C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA41C0);
  }
  return result;
}

unint64_t sub_251E2967C()
{
  unint64_t result = qword_269BA41C8;
  if (!qword_269BA41C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA41C8);
  }
  return result;
}

unint64_t sub_251E296D4()
{
  unint64_t result = qword_269BA41D0;
  if (!qword_269BA41D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA41D0);
  }
  return result;
}

unint64_t sub_251E2972C()
{
  unint64_t result = qword_269BA41D8;
  if (!qword_269BA41D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA41D8);
  }
  return result;
}

unint64_t sub_251E29784()
{
  unint64_t result = qword_269BA41E0;
  if (!qword_269BA41E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA41E0);
  }
  return result;
}

unint64_t sub_251E297DC()
{
  unint64_t result = qword_269BA41E8;
  if (!qword_269BA41E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA41E8);
  }
  return result;
}

unint64_t sub_251E29834()
{
  unint64_t result = qword_269BA41F0;
  if (!qword_269BA41F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA41F0);
  }
  return result;
}

unint64_t sub_251E2988C()
{
  unint64_t result = qword_269BA41F8;
  if (!qword_269BA41F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA41F8);
  }
  return result;
}

unint64_t sub_251E298E4()
{
  unint64_t result = qword_269BA4200;
  if (!qword_269BA4200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4200);
  }
  return result;
}

unint64_t sub_251E2993C()
{
  unint64_t result = qword_269BA4208;
  if (!qword_269BA4208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4208);
  }
  return result;
}

unint64_t sub_251E29994()
{
  unint64_t result = qword_269BA4210;
  if (!qword_269BA4210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4210);
  }
  return result;
}

unint64_t sub_251E299EC()
{
  unint64_t result = qword_269BA4218;
  if (!qword_269BA4218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4218);
  }
  return result;
}

unint64_t sub_251E29A44()
{
  unint64_t result = qword_269BA4220;
  if (!qword_269BA4220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4220);
  }
  return result;
}

unint64_t sub_251E29A9C()
{
  unint64_t result = qword_269BA4228;
  if (!qword_269BA4228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4228);
  }
  return result;
}

unint64_t sub_251E29AF4()
{
  unint64_t result = qword_269BA4230;
  if (!qword_269BA4230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4230);
  }
  return result;
}

unint64_t sub_251E29B4C()
{
  unint64_t result = qword_269BA4238;
  if (!qword_269BA4238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4238);
  }
  return result;
}

unint64_t sub_251E29BA4()
{
  unint64_t result = qword_269BA4240;
  if (!qword_269BA4240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4240);
  }
  return result;
}

unint64_t sub_251E29BFC()
{
  unint64_t result = qword_269BA4248;
  if (!qword_269BA4248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4248);
  }
  return result;
}

unint64_t sub_251E29C54()
{
  unint64_t result = qword_269BA4250;
  if (!qword_269BA4250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4250);
  }
  return result;
}

unint64_t sub_251E29CAC()
{
  unint64_t result = qword_269BA4258;
  if (!qword_269BA4258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4258);
  }
  return result;
}

unint64_t sub_251E29D04()
{
  unint64_t result = qword_269BA4260;
  if (!qword_269BA4260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4260);
  }
  return result;
}

unint64_t sub_251E29D5C()
{
  unint64_t result = qword_269BA4268;
  if (!qword_269BA4268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4268);
  }
  return result;
}

uint64_t sub_251E29DB0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000014 && a2 == 0x8000000251F72010 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000251F72030 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656D6F486465656ELL && a2 == 0xEE0078694674694BLL || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x694669576465656ELL && a2 == 0xEB00000000786946 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000251F72050 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x65746E496465656ELL && a2 == 0xEF78694674656E72 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x647261486465656ELL && a2 == 0xEF78694665726177 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000251F72070 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6F4E6F6572657473 && a2 == 0xEE00646E756F4674 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x72456F6572657473 && a2 == 0xEB00000000726F72 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000251F72090 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000251F720B0 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000251F720D0 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000251F720F0 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000251F72110 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000251F72130 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x8000000251F72150 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000251F72170 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000251F72190 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0x465044436465656ELL && a2 == 0xEA00000000007869 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0x656E65476465656ELL && a2 == 0xEE007869466C6172 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 0x6F72506E49786966 && a2 == 0xED00007373657267 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x8000000251F721B0)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else
  {
    char v5 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v5) {
      return 22;
    }
    else {
      return 23;
    }
  }
}

uint64_t LegacyHFImageIdentifiers.caPackageIdentifier.getter(char a1)
{
  if (qword_269B9C4F8 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_269BF3258;
  unint64_t v3 = LegacyHFImageIdentifiers.rawValue.getter(a1);
  if (*(void *)(v2 + 16) && (unint64_t v5 = sub_2519FE798(v3, v4), (v6 & 1) != 0))
  {
    uint64_t v7 = *(void *)(*(void *)(v2 + 56) + 16 * v5);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v7 = 0;
  }
  swift_bridgeObjectRelease();
  return v7;
}

unint64_t sub_251E2A7DC()
{
  unint64_t result = sub_2519FBDF8((uint64_t)&unk_270264010);
  qword_269BF3258 = result;
  return result;
}

uint64_t sub_251E2A804(unint64_t a1)
{
  unint64_t v2 = v1;
  unint64_t v3 = a1;
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v5 = MEMORY[0x263F8EE78];
    if (!v4) {
      return v5;
    }
    uint64_t v20 = MEMORY[0x263F8EE78];
    uint64_t result = sub_251A3E084(0, v4 & ~(v4 >> 63), 0);
    if (v4 < 0) {
      break;
    }
    v16[1] = v2;
    uint64_t v5 = v20;
    unint64_t v18 = v3 & 0xC000000000000001;
    uint64_t v7 = sub_251F34DA0();
    uint64_t v8 = 0;
    uint64_t v17 = v7;
    uint64_t v9 = *(void *)(v7 - 8);
    uint64_t v10 = *(void *)(v9 + 64);
    void v16[2] = v9 + 32;
    unint64_t v19 = v3;
    while (v4 != v8)
    {
      MEMORY[0x270FA5388](v7);
      if (v18) {
        id v11 = (id)MEMORY[0x2533AB3A0](v8, v3);
      }
      else {
        id v11 = *(id *)(v3 + 8 * v8 + 32);
      }
      uint64_t v12 = v11;
      id v13 = objc_msgSend(v11, sel_uniqueIdentifier);
      sub_251F34D80();

      uint64_t v20 = v5;
      unint64_t v15 = *(void *)(v5 + 16);
      unint64_t v14 = *(void *)(v5 + 24);
      unint64_t v2 = v15 + 1;
      if (v15 >= v14 >> 1)
      {
        sub_251A3E084(v14 > 1, v15 + 1, 1);
        uint64_t v5 = v20;
      }
      ++v8;
      *(void *)(v5 + 16) = v2;
      uint64_t v7 = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v9 + 32))(v5+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v15, (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v17);
      unint64_t v3 = v19;
      if (v4 == v8) {
        return v5;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_251F366C0();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void sub_251E2AA3C(uint64_t a1, unsigned char *a2, uint64_t *a3, unsigned char *a4, uint64_t *a5, uint64_t a6)
{
  uint64_t v7 = a1;
  uint64_t v22 = *(void *)(a1 + 16);
  if (v22)
  {
    uint64_t v8 = a6;
    unint64_t v9 = 0;
    uint64_t v10 = (char *)(a1 + 48);
    uint64_t v11 = MEMORY[0x263F8EE78];
    while (v9 < *(void *)(v7 + 16))
    {
      id v13 = (void *)*((void *)v10 - 2);
      uint64_t v12 = (void *)*((void *)v10 - 1);
      char v14 = *v10;
      v27[0] = v13;
      v27[1] = v12;
      char v28 = v14;
      sub_251A4D4C4(v13, v12, v14);
      char v15 = sub_251E2B094((uint64_t)v27, a2, a3, a4, a5, v8);
      if (v6)
      {
        sub_251A4D4A0(v13, v12, v14);
        swift_release();
        goto LABEL_15;
      }
      if (v15)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v29 = v11;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_251A3E7EC(0, *(void *)(v11 + 16) + 1, 1);
          uint64_t v11 = v29;
        }
        unint64_t v18 = *(void *)(v11 + 16);
        unint64_t v17 = *(void *)(v11 + 24);
        if (v18 >= v17 >> 1)
        {
          sub_251A3E7EC(v17 > 1, v18 + 1, 1);
          uint64_t v11 = v29;
        }
        *(void *)(v11 + 16) = v18 + 1;
        uint64_t v19 = v11 + 24 * v18;
        *(void *)(v19 + 32) = v13;
        *(void *)(v19 + 40) = v12;
        *(unsigned char *)(v19 + 48) = v14;
        uint64_t v8 = a6;
        uint64_t v7 = a1;
      }
      else
      {
        sub_251A4D4A0(v13, v12, v14);
      }
      ++v9;
      v10 += 24;
      if (v22 == v9) {
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_251E2ABDC(uint64_t a1, uint64_t *a2)
{
  unint64_t v37 = a2;
  uint64_t v45 = MEMORY[0x263F8EE78];
  uint64_t v41 = a1;
  uint64_t v2 = *(void *)(a1 + 64);
  uint64_t v34 = a1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & v2;
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = v6;
  int64_t v8 = 0;
  uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
  uint64_t v42 = *(void *)(v6 - 8);
  uint64_t v43 = v9;
  uint64_t v39 = v42 + 16;
  int v40 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v42 + 56);
  uint64_t v38 = v42 + 48;
  uint64_t v44 = (void (**)(void))(v42 + 32);
  int64_t v35 = (unint64_t)(v3 + 63) >> 6;
  uint64_t v36 = (uint64_t (**)(char *, uint64_t))(v42 + 8);
  while (1)
  {
    MEMORY[0x270FA5388](v6);
    uint64_t v11 = (char *)v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    uint64_t result = MEMORY[0x270FA5388](v12 - 8);
    char v15 = (char *)v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (v5)
    {
      unint64_t v16 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v17 = v16 | (v8 << 6);
      goto LABEL_23;
    }
    int64_t v18 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v18 >= v35) {
      goto LABEL_32;
    }
    unint64_t v19 = *(void *)(v34 + 8 * v18);
    ++v8;
    if (!v19)
    {
      int64_t v8 = v18 + 1;
      if (v18 + 1 >= v35) {
        goto LABEL_32;
      }
      unint64_t v19 = *(void *)(v34 + 8 * v8);
      if (!v19)
      {
        int64_t v8 = v18 + 2;
        if (v18 + 2 >= v35) {
          goto LABEL_32;
        }
        unint64_t v19 = *(void *)(v34 + 8 * v8);
        if (!v19)
        {
          int64_t v8 = v18 + 3;
          if (v18 + 3 >= v35) {
            goto LABEL_32;
          }
          unint64_t v19 = *(void *)(v34 + 8 * v8);
          if (!v19) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v5 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v8 << 6);
LABEL_23:
    uint64_t v21 = v42;
    uint64_t v22 = *(void *)(v42 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v42 + 16))(v15, *(void *)(v41 + 48) + v22 * v17, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v15, 0, 1, v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v15, 1, v7) == 1) {
      goto LABEL_33;
    }
    unint64_t v23 = *v44;
    ((void (*)(char *, char *, uint64_t))*v44)(v11, v15, v7);
    uint64_t v24 = *v37;
    if (*(void *)(*v37 + 16)
      && (unint64_t v25 = sub_2519FE584((uint64_t)v11), (v26 & 1) != 0)
      && *(void *)(*(void *)(*(void *)(v24 + 56) + 8 * v25) + 16) >= 5uLL)
    {
      void v33[2] = v33;
      MEMORY[0x270FA5388](v25);
      char v28 = (char *)v33 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
      v23();
      uint64_t v29 = v45;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_251A3E084(0, *(void *)(v29 + 16) + 1, 1);
        uint64_t v29 = v45;
      }
      unint64_t v31 = *(void *)(v29 + 16);
      unint64_t v30 = *(void *)(v29 + 24);
      unint64_t v32 = v31 + 1;
      if (v31 >= v30 >> 1)
      {
        v33[0] = v31 + 1;
        sub_251A3E084(v30 > 1, v31 + 1, 1);
        unint64_t v32 = v33[0];
        uint64_t v29 = v45;
      }
      *(void *)(v29 + 16) = v32;
      uint64_t v6 = ((uint64_t (*)(unint64_t, char *, uint64_t))v23)(v29+ ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80))+ v31 * v22, v28, v7);
      uint64_t v45 = v29;
    }
    else
    {
      uint64_t v6 = (*v36)(v11, v7);
    }
  }
  int64_t v20 = v18 + 4;
  if (v20 >= v35)
  {
LABEL_32:
    (*v40)(v15, 1, 1, v7);
LABEL_33:
    swift_release();
    sub_251B55B48((uint64_t)v15);
    return v45;
  }
  unint64_t v19 = *(void *)(v34 + 8 * v20);
  if (v19)
  {
    int64_t v8 = v20;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v8 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v8 >= v35) {
      goto LABEL_32;
    }
    unint64_t v19 = *(void *)(v34 + 8 * v8);
    ++v20;
    if (v19) {
      goto LABEL_22;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_251E2B094(uint64_t a1, unsigned char *a2, uint64_t *a3, unsigned char *a4, uint64_t *a5, uint64_t a6)
{
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)(a1 + 8);
  int v8 = *(unsigned __int8 *)(a1 + 16);
  if ((v8 - 1) >= 2)
  {
    if (!*(unsigned char *)(a1 + 16))
    {
      uint64_t v20 = *a3;
      sub_251A4D4C4(v6, v7, 0);
      swift_bridgeObjectRetain();
      id v63 = v7;
      id v21 = objc_msgSend(v6, sel_uniqueIdentifier);
      uint64_t v22 = sub_251F34DA0();
      uint64_t v65 = v6;
      uint64_t v23 = *(void *)(v22 - 8);
      uint64_t v24 = *(void *)(v23 + 64);
      MEMORY[0x270FA5388](v22);
      sub_251F34D80();

      LOBYTE(v21) = sub_251DB3C24((uint64_t)&v60 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0), v20);
      swift_bridgeObjectRelease();
      unint64_t v25 = *(uint64_t (**)(char *, uint64_t))(v23 + 8);
      uint64_t v26 = v22;
      uint64_t v27 = v25((char *)&v60 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0), v22);
      if (v21)
      {
        unint64_t v16 = v65;
        id v17 = v63;
      }
      else
      {
        id v55 = v63;
        uint64_t v56 = v65;
        if ((*a4 & 1) == 0)
        {
          uint64_t v64 = &v60;
          MEMORY[0x270FA5388](v27);
          unint64_t v57 = (v24 + 15) & 0xFFFFFFFFFFFFFFF0;
          uint64_t v62 = v26;
          id v59 = [v56 *(SEL *)(v58 + 1928)];
          unint64_t v61 = &v60;
          MEMORY[0x270FA5388](v59);
          sub_251F34D80();

          sub_251A637B8((char *)&v60 - v57, (char *)&v60 - v57);
          sub_251A4D4A0(v56, v55, 0);
          v25((char *)&v60 - v57, v62);
          return 1;
        }
        unint64_t v16 = v65;
        id v17 = v63;
      }
      char v18 = 0;
      goto LABEL_22;
    }
    if (*a2)
    {
      return 0;
    }
    else
    {
      uint64_t result = 1;
      *a2 = 1;
    }
  }
  else
  {
    uint64_t v62 = a6;
    uint64_t v9 = *a5;
    sub_251A4D4C4(v6, v7, v8);
    swift_bridgeObjectRetain();
    id v10 = objc_msgSend(v7, sel_uniqueIdentifier);
    LODWORD(v64) = v8;
    uint64_t v11 = sub_251F34DA0();
    uint64_t v65 = v6;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(void *)(v12 + 64);
    MEMORY[0x270FA5388](v11);
    unint64_t v14 = (v13 + 15) & 0xFFFFFFFFFFFFFFF0;
    sub_251F34D80();

    LOBYTE(v10) = sub_251DB3C24((uint64_t)&v60 - v14, v9);
    swift_bridgeObjectRelease();
    char v15 = *(void (**)(char *, uint64_t))(v12 + 8);
    unint64_t v61 = (void (**)(char *, void))v11;
    v15((char *)&v60 - v14, v11);
    if (v10)
    {
      unint64_t v16 = v65;
      id v17 = v7;
      char v18 = (char)v64;
LABEL_22:
      sub_251A4D4A0(v16, v17, v18);
      return 0;
    }
    BOOL v60 = v15;
    char v28 = (char)v64;
    id v63 = v7;
    id v29 = objc_msgSend(v7, sel_uniqueIdentifier);
    MEMORY[0x270FA5388](v29);
    sub_251F34D80();

    unint64_t v30 = (uint64_t *)v62;
    uint64_t v31 = *(void *)v62;
    if (*(void *)(*(void *)v62 + 16) && (unint64_t v32 = sub_2519FE584((uint64_t)&v60 - v14), (v33 & 1) != 0))
    {
      uint64_t v34 = *(void *)(*(void *)(v31 + 56) + 8 * v32);
      swift_bridgeObjectRetain();
      int64_t v35 = (char *)&v60 - v14;
      uint64_t v36 = (void (**)(void, void))v61;
      v60(v35, (uint64_t)v61);
      BOOL v37 = sub_251DB4928((uint64_t)v65, v34);
      swift_bridgeObjectRelease();
      id v38 = v63;
      uint64_t v39 = &off_26536F000;
      if (v37)
      {
        char v18 = v28;
        unint64_t v16 = v65;
        id v17 = v63;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v41 = (char *)&v60 - v14;
      uint64_t v36 = (void (**)(void, void))v61;
      v60(v41, (uint64_t)v61);
      id v38 = v63;
      uint64_t v39 = &off_26536F000;
    }
    id v42 = [v38 (SEL)v39[241]];
    MEMORY[0x270FA5388](v42);
    unint64_t v43 = (v13 + 15) & 0xFFFFFFFFFFFFFFF0;
    sub_251F34D80();

    uint64_t v44 = *v30;
    if (*(void *)(*v30 + 16) && (unint64_t v45 = sub_2519FE584((uint64_t)&v60 - v43), (v46 & 1) != 0))
    {
      uint64_t v47 = *(void *)(*(void *)(v44 + 56) + 8 * v45);
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v47 = MEMORY[0x263F8EE88];
    }
    uint64_t v48 = v60;
    v60((char *)&v60 - v43, (uint64_t)v36);
    uint64_t v67 = v47;
    unint64_t v49 = v65;
    sub_251A67FCC(&v66, (uint64_t)v65);
    id v50 = v63;
    id v51 = objc_msgSend(v63, sel_uniqueIdentifier);
    sub_251A4D4A0(v49, v50, (char)v64);
    MEMORY[0x270FA5388](v52);
    sub_251F34D80();

    uint64_t v53 = v67;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v66 = *v30;
    *unint64_t v30 = 0x8000000000000000;
    sub_251A10604(v53, (uint64_t)&v60 - v43, isUniquelyReferenced_nonNull_native);
    *unint64_t v30 = v66;
    swift_bridgeObjectRelease();
    v48((char *)&v60 - v43, (uint64_t)v36);
    return 1;
  }
  return result;
}

void *sub_251E2B6BC(uint64_t a1, uint64_t **a2, unsigned char *a3, uint64_t a4)
{
  uint64_t v40 = a4;
  uint64_t v41 = a3;
  uint64_t v44 = a2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4) {
    return (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v39 = a1;
  uint64_t v5 = a1 + 32;
  swift_bridgeObjectRetain();
  uint64_t v6 = 0;
  uint64_t v7 = (void *)MEMORY[0x263F8EE78];
  uint64_t v42 = v5;
  uint64_t v43 = v4;
  do
  {
    uint64_t v10 = v5 + 24 * v6;
    id v11 = *(id *)v10;
    id v12 = *(id *)(v10 + 8);
    LODWORD(v13) = *(unsigned __int8 *)(v10 + 16);
    if (v13 == 1)
    {
      uint64_t v48 = v6;
      char v46 = v7;
      unint64_t v14 = *v44;
      sub_251A4D4C4(v11, v12, 1);
      id v45 = v11;
      sub_251A4D4C4(v11, v12, 1);
      swift_bridgeObjectRetain();
      id v50 = v12;
      id v15 = objc_msgSend(v12, sel_uniqueIdentifier, v39);
      uint64_t v16 = sub_251F34DA0();
      uint64_t v47 = &v39;
      unint64_t v49 = *(void **)(v16 - 8);
      uint64_t v17 = v49[8];
      MEMORY[0x270FA5388](v16);
      id v55 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_251F34D80();

      uint64_t v56 = v14;
      if (v14[2])
      {
        char v18 = v56;
        sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
        uint64_t v19 = sub_251F35600();
        uint64_t v20 = -1 << *((unsigned char *)v18 + 32);
        unint64_t v21 = v19 & ~v20;
        uint64_t v54 = v18 + 7;
        if ((*(unint64_t *)((char *)v18 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v21))
        {
          uint64_t v51 = ~v20;
          uint64_t v22 = (void (*)(char *, unint64_t, uint64_t))v49[2];
          uint64_t v52 = v49[9];
          uint64_t v53 = v22;
          uint64_t v23 = (uint64_t (**)(char *, uint64_t))(v49 + 1);
          while (1)
          {
            MEMORY[0x270FA5388](v19);
            uint64_t v24 = v17;
            unint64_t v25 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
            v53(v25, v56[6] + v52 * v21, v16);
            sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
            char v26 = sub_251F35650();
            uint64_t v27 = *v23;
            uint64_t v19 = (*v23)(v25, v16);
            if (v26) {
              break;
            }
            unint64_t v21 = (v21 + 1) & v51;
            uint64_t v17 = v24;
            if (((*(void *)((char *)v54 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
              goto LABEL_12;
            }
          }
          swift_bridgeObjectRelease();
          v27(v55, v16);
          id v36 = v45;
          id v37 = v50;
          sub_251A4D4A0(v45, v50, 1);
          sub_251A4D4A0(v36, v37, 1);
          goto LABEL_4;
        }
      }
LABEL_12:
      swift_bridgeObjectRelease();
      char v28 = (void (*)(char *, uint64_t))v49[1];
      v28(v55, v16);
      if (*v41 == 1)
      {
        id v8 = v45;
        id v9 = v50;
        sub_251A4D4A0(v45, v50, 1);
        sub_251A4D4A0(v8, v9, 1);
LABEL_4:
        uint64_t v5 = v42;
        uint64_t v4 = v43;
        uint64_t v7 = v46;
        uint64_t v6 = v48;
        goto LABEL_5;
      }
      id v29 = objc_msgSend(v50, sel_uniqueIdentifier);
      MEMORY[0x270FA5388](v29);
      unint64_t v30 = (v17 + 15) & 0xFFFFFFFFFFFFFFF0;
      sub_251F34D80();

      LOBYTE(v29) = sub_251DB3C24((uint64_t)&v39 - v30, v40);
      uint64_t v31 = ((uint64_t (*)(char *, uint64_t))v28)((char *)&v39 - v30, v16);
      uint64_t v6 = v48;
      if (v29)
      {
        uint64_t v56 = &v39;
        MEMORY[0x270FA5388](v31);
        id v32 = v50;
        id v13 = objc_msgSend(v50, sel_uniqueIdentifier);
        id v55 = (char *)&v39;
        MEMORY[0x270FA5388](v13);
        sub_251F34D80();

        sub_251A637B8((char *)&v39 - v30, (char *)&v39 - v30);
        v28((char *)&v39 - v30, v16);
        sub_251A4D4A0(v45, v32, 1);
        LOBYTE(v13) = 0;
        id v11 = v32;
        id v12 = 0;
      }
      else
      {
        LOBYTE(v13) = 1;
        id v11 = v45;
        id v12 = v50;
        sub_251A4D4A0(v45, v50, 1);
      }
      uint64_t v5 = v42;
      uint64_t v4 = v43;
      uint64_t v7 = v46;
    }
    else
    {
      sub_251A4D4C4(*(id *)v10, *(id *)(v10 + 8), *(unsigned char *)(v10 + 16));
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v7 = sub_251F10B30(0, v7[2] + 1, 1, v7);
    }
    unint64_t v34 = v7[2];
    unint64_t v33 = v7[3];
    if (v34 >= v33 >> 1) {
      uint64_t v7 = sub_251F10B30((void *)(v33 > 1), v34 + 1, 1, v7);
    }
    v7[2] = v34 + 1;
    int64_t v35 = &v7[3 * v34];
    v35[4] = v11;
    v35[5] = v12;
    *((unsigned char *)v35 + 48) = (_BYTE)v13;
LABEL_5:
    ++v6;
  }
  while (v6 != v4);
  swift_bridgeObjectRelease();
  return v7;
}

void _s13HomeDataModel19MatterStateSnapshotV10UpdateTypeO6unique7updates2inSayAEGAI_SaySo6HMHomeCGtFZ_0(uint64_t a1, unint64_t a2)
{
  unint64_t v54 = a2;
  uint64_t v3 = (uint64_t *)MEMORY[0x263F8EE88];
  uint64_t v84 = (uint64_t *)MEMORY[0x263F8EE88];
  char v83 = 0;
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v60 = 0;
  if (v4)
  {
    uint64_t v5 = a1 + 32;
    uint64_t v6 = (void **)(a1 + 40);
    uint64_t v7 = (unsigned char *)(a1 + 48);
    swift_bridgeObjectRetain();
    uint64_t v8 = 1;
    id v9 = (void **)(a1 + 32);
    uint64_t v63 = a1;
    uint64_t v62 = v4;
    uint64_t v61 = v5;
    do
    {
      unint64_t v12 = (unint64_t)*v9;
      unint64_t v13 = (unint64_t)*v6;
      if (*v7)
      {
        if (*v7 == 3 && (v13 | v12) == 0)
        {
          uint64_t v58 = v8;
          uint64_t v19 = v60;
          uint64_t v20 = sub_251E2A804(v54);
          uint64_t v60 = v19;
          uint64_t v21 = sub_251F34DA0();
          uint64_t v71 = sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
          uint64_t v79 = (uint64_t *)sub_251F35E60();
          uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
          MEMORY[0x270FA5388](v22 - 8);
          uint64_t v24 = (char *)&v53 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
          uint64_t v25 = *(void *)(v21 - 8);
          uint64_t v70 = *(void *)(v20 + 16);
          uint64_t v57 = v20;
          uint64_t v59 = v26;
          uint64_t v56 = v21 - 8;
          uint64_t v55 = v25;
          if (v70)
          {
            uint64_t v27 = 0;
            unint64_t v69 = v20 + ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80));
            uint64_t v75 = *(void *)(v25 + 72);
            uint64_t v68 = (void (**)(char *, void, uint64_t, uint64_t))(v25 + 56);
            char v28 = *(void (**)(char *, unint64_t, uint64_t))(v25 + 16);
            uint64_t v77 = v25 + 16;
            uint64_t v78 = v28;
            uint64_t v67 = (uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
            uint64_t v64 = v25 + 32;
            uint64_t v65 = v25;
            uint64_t v66 = v24;
            uint64_t v74 = (void (**)(char *, uint64_t))(v25 + 8);
            v28(v24, v69, v21);
            while (1)
            {
              (*v68)(v24, 0, 1, v21);
              uint64_t v33 = (*v67)(v24, 1, v21);
              if (v33 == 1) {
                break;
              }
              uint64_t v34 = *(void *)(v65 + 64);
              MEMORY[0x270FA5388](v33);
              unint64_t v76 = (v34 + 15) & 0xFFFFFFFFFFFFFFF0;
              int64_t v35 = (char *)&v53 - v76;
              (*(void (**)(char *, char *, uint64_t))(v36 + 32))((char *)&v53 - v76, v24, v21);
              id v37 = v79;
              swift_bridgeObjectRetain();
              uint64_t v38 = sub_251F35600();
              uint64_t v39 = -1 << *((unsigned char *)v37 + 32);
              unint64_t v40 = v38 & ~v39;
              uint64_t v41 = v37 + 7;
              unint64_t v42 = *(unint64_t *)((char *)v41 + ((v40 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v40;
              char v72 = &v53;
              uint64_t v73 = v27;
              if (v42)
              {
                uint64_t v43 = ~v39;
                while (1)
                {
                  MEMORY[0x270FA5388](v38);
                  uint64_t v44 = (char *)&v53 - v76;
                  v78((char *)&v53 - v76, v79[6] + v40 * v75, v21);
                  sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
                  char v45 = sub_251F35650();
                  char v46 = (uint64_t (*)(char *, uint64_t))*v74;
                  uint64_t v38 = ((uint64_t (*)(char *, uint64_t))*v74)(v44, v21);
                  if (v45) {
                    break;
                  }
                  unint64_t v40 = (v40 + 1) & v43;
                  if (((*(unint64_t *)((char *)v41 + ((v40 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v40) & 1) == 0) {
                    goto LABEL_14;
                  }
                }
                swift_bridgeObjectRelease();
                v46(v35, v21);
              }
              else
              {
LABEL_14:
                id v29 = v79;
                swift_bridgeObjectRelease();
                uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                char v31 = isUniquelyReferenced_nonNull_native;
                MEMORY[0x270FA5388](isUniquelyReferenced_nonNull_native);
                id v32 = (char *)&v53 - v76;
                v78((char *)&v53 - v76, (unint64_t)v35, v21);
                uint64_t v81 = v29;
                sub_251A710D8((uint64_t)v32, v40, v31);
                uint64_t v79 = v81;
                swift_bridgeObjectRelease();
                (*v74)(v35, v21);
              }
              uint64_t v24 = v66;
              uint64_t v27 = v73 + 1;
              if (v73 + 1 == v70) {
                goto LABEL_24;
              }
              v78(v66, v69 + v75 * v27, v21);
            }
          }
          else
          {
LABEL_24:
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v55 + 56))(v24, 1, 1, v21);
          }
          uint64_t v4 = v62;
          uint64_t v5 = v61;
          uint64_t v8 = v58;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_251A4D4A0(0, 0, 3);
          uint64_t v84 = v79;
          char v83 = 1;
          if (v8 == v4)
          {
LABEL_26:
            swift_bridgeObjectRelease();
            uint64_t v3 = (uint64_t *)MEMORY[0x263F8EE88];
            goto LABEL_27;
          }
        }
        else if (v8 == v4)
        {
          goto LABEL_26;
        }
      }
      else
      {
        uint64_t v14 = sub_251F34DA0();
        uint64_t v79 = &v53;
        uint64_t v15 = *(void *)(v14 - 8);
        uint64_t v16 = *(void *)(v15 + 64);
        MEMORY[0x270FA5388](v14);
        id v17 = objc_msgSend((id)v12, sel_uniqueIdentifier);
        MEMORY[0x270FA5388](v17);
        char v18 = (char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
        sub_251F34D80();

        sub_251A637B8(v18, v18);
        sub_251A4D4A0((id)v12, (id)v13, 0);
        (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
        sub_251A4D4A0((id)v12, (id)v13, 0);
        uint64_t v4 = v62;
        if (v8 == v62) {
          goto LABEL_26;
        }
        uint64_t v5 = v61;
      }
      id v9 = (void **)(v5 + 24 * v8);
      uint64_t v6 = v9 + 1;
      uint64_t v7 = v9 + 2;
    }
    while (!__OFADD__(v8++, 1));
    __break(1u);
  }
  else
  {
LABEL_27:
    char v82 = 0;
    uint64_t v81 = v3;
    uint64_t v80 = MEMORY[0x263F8EE80];
    uint64_t v47 = swift_bridgeObjectRetain();
    sub_251E2AA3C(v47, &v82, (uint64_t *)&v81, &v83, (uint64_t *)&v84, (uint64_t)&v80);
    uint64_t v49 = v48;
    uint64_t v50 = swift_bridgeObjectRetain();
    uint64_t v51 = sub_251E2ABDC(v50, &v80);
    uint64_t v52 = sub_251EE04F8(v51);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_251E2B6BC(v49, &v81, &v82, v52);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_251E2C490(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = type metadata accessor for IconTextValueStringDataHolder();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(v5 + 32);
  int v7 = *(unsigned __int8 *)(v6 + 24);
  if (v7 != 255) {
    sub_251A1B604(*(void *)v6, *(void *)(v6 + 8), *(void *)(v6 + 16), v7);
  }
  uint64_t v8 = a1 + *(int *)(a2 + 20);
  type metadata accessor for TilesFilter();
  uint64_t result = swift_getEnumCaseMultiPayload();
  if ((result - 1) <= 2)
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(off_26536EBF8[(int)result - 1]);
    id v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
    return v11(v8, v10);
  }
  return result;
}

uint64_t sub_251E2C5DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_indexTm_3);
}

uint64_t sub_251E2C5F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_indexTm_3);
}

uint64_t type metadata accessor for TemperatureStatusItem(uint64_t a1)
{
  return sub_251A1C6FC(a1, (uint64_t *)&unk_269BA4270);
}

uint64_t sub_251E2C62C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_indexTm_4);
}

uint64_t sub_251E2C644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_indexTm_4);
}

uint64_t type metadata accessor for HumidityStatusItem(uint64_t a1)
{
  return sub_251A1C6FC(a1, (uint64_t *)&unk_269BA4280);
}

uint64_t sub_251E2C67C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  int v7 = (int *)type metadata accessor for IconTextValueStringDataHolder();
  uint64_t v8 = v7[5];
  id v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  *id v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = v7[6];
  unint64_t v12 = (void *)(a1 + v11);
  unint64_t v13 = (void *)(a2 + v11);
  *unint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = v7[7];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = v7[8];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = (long long *)(a2 + v17);
  int v20 = *(unsigned __int8 *)(a2 + v17 + 24);
  if (*(unsigned __int8 *)(a1 + v17 + 24) == 255)
  {
    if (v20 == 255)
    {
      long long v32 = *v19;
      *(_OWORD *)(v18 + 9) = *(long long *)((char *)v19 + 9);
      *(_OWORD *)uint64_t v18 = v32;
      if (a1 == a2) {
        return a1;
      }
    }
    else
    {
      uint64_t v28 = *(void *)v19;
      uint64_t v29 = *((void *)v19 + 1);
      uint64_t v30 = *((void *)v19 + 2);
      sub_251A1B4AC(v28, v29, v30, v20);
      *(void *)uint64_t v18 = v28;
      *(void *)(v18 + 8) = v29;
      *(void *)(v18 + 16) = v30;
      *(unsigned char *)(v18 + 24) = v20;
      if (a1 == a2) {
        return a1;
      }
    }
  }
  else if (v20 == 255)
  {
    sub_251A1B620(v18);
    long long v31 = *(long long *)((char *)v19 + 9);
    *(_OWORD *)uint64_t v18 = *v19;
    *(_OWORD *)(v18 + 9) = v31;
    if (a1 == a2) {
      return a1;
    }
  }
  else
  {
    uint64_t v21 = *(void *)v19;
    uint64_t v22 = *((void *)v19 + 1);
    uint64_t v23 = *((void *)v19 + 2);
    sub_251A1B4AC(v21, v22, v23, v20);
    uint64_t v24 = *(void *)v18;
    uint64_t v25 = *(void *)(v18 + 8);
    uint64_t v26 = *(void *)(v18 + 16);
    *(void *)uint64_t v18 = v21;
    *(void *)(v18 + 8) = v22;
    *(void *)(v18 + 16) = v23;
    char v27 = *(unsigned char *)(v18 + 24);
    *(unsigned char *)(v18 + 24) = v20;
    sub_251A1B604(v24, v25, v26, v27);
    if (a1 == a2) {
      return a1;
    }
  }
  uint64_t v33 = *(int *)(a3 + 20);
  uint64_t v34 = (void *)(a1 + v33);
  int64_t v35 = (const void *)(a2 + v33);
  sub_251E31C88(a1 + v33, (uint64_t (*)(void))type metadata accessor for TilesFilter);
  uint64_t v36 = type metadata accessor for TilesFilter();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC00);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v39 - 8) + 16))(v34, v35, v39);
      swift_storeEnumTagMultiPayload();
      break;
    case 2:
      uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CBF8);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v40 - 8) + 16))(v34, v35, v40);
      swift_storeEnumTagMultiPayload();
      break;
    case 1:
      uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CBF0);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v38 - 8) + 16))(v34, v35, v38);
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t sub_251E2C9E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  int v7 = (int *)type metadata accessor for IconTextValueStringDataHolder();
  uint64_t v8 = v7[5];
  id v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *id v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  uint64_t v13 = v7[6];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (uint64_t *)(a2 + v13);
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  *uint64_t v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  uint64_t v18 = v7[7];
  uint64_t v19 = (void *)(a1 + v18);
  int v20 = (uint64_t *)(a2 + v18);
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  *uint64_t v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  uint64_t v23 = v7[8];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  int v26 = *(unsigned __int8 *)(a1 + v23 + 24);
  if (v26 == 255)
  {
LABEL_6:
    *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
    *(_OWORD *)(v24 + 9) = *(_OWORD *)(v25 + 9);
    if (a1 == a2) {
      return a1;
    }
    goto LABEL_7;
  }
  int v27 = *(unsigned __int8 *)(v25 + 24);
  if (v27 == 255)
  {
    sub_251A1B620(v24);
    goto LABEL_6;
  }
  uint64_t v28 = *(void *)(v25 + 16);
  uint64_t v29 = *(void *)v24;
  uint64_t v30 = *(void *)(v24 + 8);
  uint64_t v31 = *(void *)(v24 + 16);
  *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
  *(void *)(v24 + 16) = v28;
  *(unsigned char *)(v24 + 24) = v27;
  sub_251A1B604(v29, v30, v31, v26);
  if (a1 == a2) {
    return a1;
  }
LABEL_7:
  uint64_t v32 = *(int *)(a3 + 20);
  uint64_t v33 = (void *)(a1 + v32);
  uint64_t v34 = (const void *)(a2 + v32);
  sub_251E31C88(a1 + v32, (uint64_t (*)(void))type metadata accessor for TilesFilter);
  uint64_t v35 = type metadata accessor for TilesFilter();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC00);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v38 - 8) + 32))(v33, v34, v38);
      swift_storeEnumTagMultiPayload();
      break;
    case 2:
      uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CBF8);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v39 - 8) + 32))(v33, v34, v39);
      swift_storeEnumTagMultiPayload();
      break;
    case 1:
      uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CBF0);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v37 - 8) + 32))(v33, v34, v37);
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t sub_251E2CC9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_indexTm_5);
}

uint64_t sub_251E2CCB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_indexTm_5);
}

uint64_t type metadata accessor for AirQualityStatusItem(uint64_t a1)
{
  return sub_251A1C6FC(a1, (uint64_t *)&unk_269BA4290);
}

uint64_t sub_251E2CD00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_index_8Tm);
}

uint64_t sub_251E2CD18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_9Tm);
}

uint64_t type metadata accessor for BlindsStatusItem(uint64_t a1)
{
  return sub_251A1C6FC(a1, (uint64_t *)&unk_269BA42A0);
}

void *sub_251E2CD54(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v29 = *a2;
    *a1 = *a2;
    a1 = (void *)(v29 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_251F34DA0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = (int *)type metadata accessor for IconTextValueStringDataHolder();
    uint64_t v9 = v8[5];
    uint64_t v10 = (void *)((char *)a1 + v9);
    uint64_t v11 = (void *)((char *)a2 + v9);
    uint64_t v13 = *v11;
    uint64_t v12 = v11[1];
    *uint64_t v10 = v13;
    v10[1] = v12;
    uint64_t v14 = v8[6];
    uint64_t v15 = (void *)((char *)a1 + v14);
    uint64_t v16 = (void *)((char *)a2 + v14);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    uint64_t v18 = v8[7];
    uint64_t v19 = (void *)((char *)a1 + v18);
    int v20 = (void *)((char *)a2 + v18);
    uint64_t v21 = v20[1];
    *uint64_t v19 = *v20;
    v19[1] = v21;
    uint64_t v22 = v8[8];
    uint64_t v23 = (char *)a1 + v22;
    uint64_t v24 = (char *)a2 + v22;
    int v25 = *((unsigned __int8 *)a2 + v22 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v25 == 255)
    {
      *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
      *(_OWORD *)(v23 + 9) = *(_OWORD *)(v24 + 9);
    }
    else
    {
      uint64_t v26 = *(void *)v24;
      uint64_t v27 = *((void *)v24 + 1);
      uint64_t v28 = *((void *)v24 + 2);
      sub_251A1B4AC(v26, v27, v28, v25);
      *(void *)uint64_t v23 = v26;
      *((void *)v23 + 1) = v27;
      *((void *)v23 + 2) = v28;
      v23[24] = v25;
    }
    uint64_t v30 = *(int *)(a3 + 24);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
    uint64_t v31 = (char *)a1 + v30;
    uint64_t v32 = (char *)a2 + v30;
    uint64_t v33 = type metadata accessor for TilesFilter();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 3:
        uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC00);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v31, v32, v36);
        swift_storeEnumTagMultiPayload();
        break;
      case 2:
        uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CBF8);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v31, v32, v37);
        swift_storeEnumTagMultiPayload();
        break;
      case 1:
        uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CBF0);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v31, v32, v35);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_251E2D034(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = type metadata accessor for IconTextValueStringDataHolder();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(v5 + 32);
  int v7 = *(unsigned __int8 *)(v6 + 24);
  if (v7 != 255) {
    sub_251A1B604(*(void *)v6, *(void *)(v6 + 8), *(void *)(v6 + 16), v7);
  }
  uint64_t v8 = a1 + *(int *)(a2 + 24);
  type metadata accessor for TilesFilter();
  uint64_t result = swift_getEnumCaseMultiPayload();
  if ((result - 1) <= 2)
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(off_26536EBF8[(int)result - 1]);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
    return v11(v8, v10);
  }
  return result;
}

uint64_t sub_251E2D178(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  int v7 = (int *)type metadata accessor for IconTextValueStringDataHolder();
  uint64_t v8 = v7[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  uint64_t v13 = v7[6];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  uint64_t v17 = v7[7];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  uint64_t v20 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v20;
  uint64_t v21 = v7[8];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  int v24 = *(unsigned __int8 *)(a2 + v21 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v24 == 255)
  {
    *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
    *(_OWORD *)(v22 + 9) = *(_OWORD *)(v23 + 9);
  }
  else
  {
    uint64_t v25 = *(void *)v23;
    uint64_t v26 = *(void *)(v23 + 8);
    uint64_t v27 = *(void *)(v23 + 16);
    sub_251A1B4AC(v25, v26, v27, v24);
    *(void *)uint64_t v22 = v25;
    *(void *)(v22 + 8) = v26;
    *(void *)(v22 + 16) = v27;
    *(unsigned char *)(v22 + 24) = v24;
  }
  uint64_t v28 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v29 = (void *)(a1 + v28);
  uint64_t v30 = (const void *)(a2 + v28);
  uint64_t v31 = type metadata accessor for TilesFilter();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC00);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v34 - 8) + 16))(v29, v30, v34);
      swift_storeEnumTagMultiPayload();
      break;
    case 2:
      uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CBF8);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v35 - 8) + 16))(v29, v30, v35);
      swift_storeEnumTagMultiPayload();
      break;
    case 1:
      uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CBF0);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v33 - 8) + 16))(v29, v30, v33);
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t sub_251E2D408(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  int v7 = (int *)type metadata accessor for IconTextValueStringDataHolder();
  uint64_t v8 = v7[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = v7[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = v7[7];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = v7[8];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = (long long *)(a2 + v17);
  int v20 = *(unsigned __int8 *)(a2 + v17 + 24);
  if (*(unsigned __int8 *)(a1 + v17 + 24) == 255)
  {
    if (v20 == 255)
    {
      long long v32 = *v19;
      *(_OWORD *)(v18 + 9) = *(long long *)((char *)v19 + 9);
      *(_OWORD *)uint64_t v18 = v32;
    }
    else
    {
      uint64_t v28 = *(void *)v19;
      uint64_t v29 = *((void *)v19 + 1);
      uint64_t v30 = *((void *)v19 + 2);
      sub_251A1B4AC(v28, v29, v30, v20);
      *(void *)uint64_t v18 = v28;
      *(void *)(v18 + 8) = v29;
      *(void *)(v18 + 16) = v30;
      *(unsigned char *)(v18 + 24) = v20;
    }
  }
  else if (v20 == 255)
  {
    sub_251A1B620(v18);
    long long v31 = *(long long *)((char *)v19 + 9);
    *(_OWORD *)uint64_t v18 = *v19;
    *(_OWORD *)(v18 + 9) = v31;
  }
  else
  {
    uint64_t v21 = *(void *)v19;
    uint64_t v22 = *((void *)v19 + 1);
    uint64_t v23 = *((void *)v19 + 2);
    sub_251A1B4AC(v21, v22, v23, v20);
    uint64_t v24 = *(void *)v18;
    uint64_t v25 = *(void *)(v18 + 8);
    uint64_t v26 = *(void *)(v18 + 16);
    *(void *)uint64_t v18 = v21;
    *(void *)(v18 + 8) = v22;
    *(void *)(v18 + 16) = v23;
    char v27 = *(unsigned char *)(v18 + 24);
    *(unsigned char *)(v18 + 24) = v20;
    sub_251A1B604(v24, v25, v26, v27);
  }
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  if (a1 != a2)
  {
    uint64_t v33 = *(int *)(a3 + 24);
    uint64_t v34 = (void *)(a1 + v33);
    uint64_t v35 = (const void *)(a2 + v33);
    sub_251E31C88(a1 + v33, (uint64_t (*)(void))type metadata accessor for TilesFilter);
    uint64_t v36 = type metadata accessor for TilesFilter();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 3:
        uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC00);
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v39 - 8) + 16))(v34, v35, v39);
        swift_storeEnumTagMultiPayload();
        break;
      case 2:
        uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CBF8);
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v40 - 8) + 16))(v34, v35, v40);
        swift_storeEnumTagMultiPayload();
        break;
      case 1:
        uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CBF0);
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v38 - 8) + 16))(v34, v35, v38);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_251E2D760(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  int v7 = (int *)type metadata accessor for IconTextValueStringDataHolder();
  *(_OWORD *)(a1 + v7[5]) = *(_OWORD *)(a2 + v7[5]);
  *(_OWORD *)(a1 + v7[6]) = *(_OWORD *)(a2 + v7[6]);
  *(_OWORD *)(a1 + v7[7]) = *(_OWORD *)(a2 + v7[7]);
  uint64_t v8 = v7[8];
  uint64_t v9 = (_OWORD *)(a1 + v8);
  uint64_t v10 = (_OWORD *)(a2 + v8);
  *uint64_t v9 = *v10;
  *(_OWORD *)((char *)v9 + 9) = *(_OWORD *)((char *)v10 + 9);
  uint64_t v11 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (const void *)(a2 + v11);
  uint64_t v14 = type metadata accessor for TilesFilter();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC00);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v17 - 8) + 32))(v12, v13, v17);
      swift_storeEnumTagMultiPayload();
      break;
    case 2:
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CBF8);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v18 - 8) + 32))(v12, v13, v18);
      swift_storeEnumTagMultiPayload();
      break;
    case 1:
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CBF0);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v16 - 8) + 32))(v12, v13, v16);
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t sub_251E2D978(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  int v7 = (int *)type metadata accessor for IconTextValueStringDataHolder();
  uint64_t v8 = v7[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  uint64_t v13 = v7[6];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (uint64_t *)(a2 + v13);
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  *uint64_t v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  uint64_t v18 = v7[7];
  uint64_t v19 = (void *)(a1 + v18);
  int v20 = (uint64_t *)(a2 + v18);
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  *uint64_t v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  uint64_t v23 = v7[8];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  int v26 = *(unsigned __int8 *)(a1 + v23 + 24);
  if (v26 != 255)
  {
    int v27 = *(unsigned __int8 *)(v25 + 24);
    if (v27 != 255)
    {
      uint64_t v28 = *(void *)(v25 + 16);
      uint64_t v29 = *(void *)v24;
      uint64_t v30 = *(void *)(v24 + 8);
      uint64_t v31 = *(void *)(v24 + 16);
      *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
      *(void *)(v24 + 16) = v28;
      *(unsigned char *)(v24 + 24) = v27;
      sub_251A1B604(v29, v30, v31, v26);
      goto LABEL_6;
    }
    sub_251A1B620(v24);
  }
  *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
  *(_OWORD *)(v24 + 9) = *(_OWORD *)(v25 + 9);
LABEL_6:
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  if (a1 != a2)
  {
    uint64_t v32 = *(int *)(a3 + 24);
    uint64_t v33 = (void *)(a1 + v32);
    uint64_t v34 = (const void *)(a2 + v32);
    sub_251E31C88(a1 + v32, (uint64_t (*)(void))type metadata accessor for TilesFilter);
    uint64_t v35 = type metadata accessor for TilesFilter();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 3:
        uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC00);
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v38 - 8) + 32))(v33, v34, v38);
        swift_storeEnumTagMultiPayload();
        break;
      case 2:
        uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CBF8);
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v39 - 8) + 32))(v33, v34, v39);
        swift_storeEnumTagMultiPayload();
        break;
      case 1:
        uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CBF0);
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v37 - 8) + 32))(v33, v34, v37);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_251E2DC38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251E2DC4C);
}

uint64_t sub_251E2DC4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for IconTextValueStringDataHolder();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 252)
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 4) {
      return v10 - 3;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v11 = type metadata accessor for TilesFilter();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 24);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_251E2DD70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251E2DD84);
}

uint64_t sub_251E2DD84(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for IconTextValueStringDataHolder();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 252)
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 3;
  }
  else
  {
    uint64_t v11 = type metadata accessor for TilesFilter();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 24);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t type metadata accessor for FanStatusItem(uint64_t a1)
{
  return sub_251A1C6FC(a1, (uint64_t *)&unk_269BA42B0);
}

uint64_t sub_251E2DECC()
{
  uint64_t result = type metadata accessor for IconTextValueStringDataHolder();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for TilesFilter();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void *sub_251E2DF9C(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v29 = *a2;
    *a1 = *a2;
    a1 = (void *)(v29 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_251F34DA0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = (int *)type metadata accessor for IconTextValueStringDataHolder();
    uint64_t v9 = v8[5];
    unsigned int v10 = (void *)((char *)a1 + v9);
    uint64_t v11 = (void *)((char *)a2 + v9);
    uint64_t v13 = *v11;
    uint64_t v12 = v11[1];
    *unsigned int v10 = v13;
    v10[1] = v12;
    uint64_t v14 = v8[6];
    uint64_t v15 = (void *)((char *)a1 + v14);
    uint64_t v16 = (void *)((char *)a2 + v14);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    uint64_t v18 = v8[7];
    uint64_t v19 = (void *)((char *)a1 + v18);
    int v20 = (void *)((char *)a2 + v18);
    uint64_t v21 = v20[1];
    *uint64_t v19 = *v20;
    v19[1] = v21;
    uint64_t v22 = v8[8];
    uint64_t v23 = (char *)a1 + v22;
    uint64_t v24 = (char *)a2 + v22;
    int v25 = *((unsigned __int8 *)a2 + v22 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v25 == 255)
    {
      *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
      *(_OWORD *)(v23 + 9) = *(_OWORD *)(v24 + 9);
    }
    else
    {
      uint64_t v26 = *(void *)v24;
      uint64_t v27 = *((void *)v24 + 1);
      uint64_t v28 = *((void *)v24 + 2);
      sub_251A1B4AC(v26, v27, v28, v25);
      *(void *)uint64_t v23 = v26;
      *((void *)v23 + 1) = v27;
      *((void *)v23 + 2) = v28;
      v23[24] = v25;
    }
    uint64_t v30 = *(int *)(a3 + 20);
    uint64_t v31 = (char *)a1 + v30;
    uint64_t v32 = (char *)a2 + v30;
    uint64_t v33 = type metadata accessor for TilesFilter();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 3:
        uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC00);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v31, v32, v36);
        swift_storeEnumTagMultiPayload();
        break;
      case 2:
        uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CBF8);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v31, v32, v37);
        swift_storeEnumTagMultiPayload();
        break;
      case 1:
        uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CBF0);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v31, v32, v35);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
        break;
    }
    *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  }
  return a1;
}

uint64_t sub_251E2E280(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for IconTextValueStringDataHolder();
  uint64_t v8 = v7[5];
  uint64_t v9 = (void *)(a1 + v8);
  unsigned int v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  uint64_t v13 = v7[6];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  uint64_t v17 = v7[7];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  uint64_t v20 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v20;
  uint64_t v21 = v7[8];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  int v24 = *(unsigned __int8 *)(a2 + v21 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v24 == 255)
  {
    *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
    *(_OWORD *)(v22 + 9) = *(_OWORD *)(v23 + 9);
  }
  else
  {
    uint64_t v25 = *(void *)v23;
    uint64_t v26 = *(void *)(v23 + 8);
    uint64_t v27 = *(void *)(v23 + 16);
    sub_251A1B4AC(v25, v26, v27, v24);
    *(void *)uint64_t v22 = v25;
    *(void *)(v22 + 8) = v26;
    *(void *)(v22 + 16) = v27;
    *(unsigned char *)(v22 + 24) = v24;
  }
  uint64_t v28 = *(int *)(a3 + 20);
  uint64_t v29 = (void *)(a1 + v28);
  uint64_t v30 = (const void *)(a2 + v28);
  uint64_t v31 = type metadata accessor for TilesFilter();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC00);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v34 - 8) + 16))(v29, v30, v34);
      swift_storeEnumTagMultiPayload();
      break;
    case 2:
      uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CBF8);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v35 - 8) + 16))(v29, v30, v35);
      swift_storeEnumTagMultiPayload();
      break;
    case 1:
      uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CBF0);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v33 - 8) + 16))(v29, v30, v33);
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
      break;
  }
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_251E2E514(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for IconTextValueStringDataHolder();
  uint64_t v8 = v7[5];
  uint64_t v9 = (void *)(a1 + v8);
  unsigned int v10 = (void *)(a2 + v8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = v7[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = v7[7];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = v7[8];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = (long long *)(a2 + v17);
  int v20 = *(unsigned __int8 *)(a2 + v17 + 24);
  if (*(unsigned __int8 *)(a1 + v17 + 24) == 255)
  {
    if (v20 == 255)
    {
      long long v32 = *v19;
      *(_OWORD *)(v18 + 9) = *(long long *)((char *)v19 + 9);
      *(_OWORD *)uint64_t v18 = v32;
      if (a1 == a2) {
        goto LABEL_18;
      }
    }
    else
    {
      uint64_t v28 = *(void *)v19;
      uint64_t v29 = *((void *)v19 + 1);
      uint64_t v30 = *((void *)v19 + 2);
      sub_251A1B4AC(v28, v29, v30, v20);
      *(void *)uint64_t v18 = v28;
      *(void *)(v18 + 8) = v29;
      *(void *)(v18 + 16) = v30;
      *(unsigned char *)(v18 + 24) = v20;
      if (a1 == a2) {
        goto LABEL_18;
      }
    }
  }
  else if (v20 == 255)
  {
    sub_251A1B620(v18);
    long long v31 = *(long long *)((char *)v19 + 9);
    *(_OWORD *)uint64_t v18 = *v19;
    *(_OWORD *)(v18 + 9) = v31;
    if (a1 == a2) {
      goto LABEL_18;
    }
  }
  else
  {
    uint64_t v21 = *(void *)v19;
    uint64_t v22 = *((void *)v19 + 1);
    uint64_t v23 = *((void *)v19 + 2);
    sub_251A1B4AC(v21, v22, v23, v20);
    uint64_t v24 = *(void *)v18;
    uint64_t v25 = *(void *)(v18 + 8);
    uint64_t v26 = *(void *)(v18 + 16);
    *(void *)uint64_t v18 = v21;
    *(void *)(v18 + 8) = v22;
    *(void *)(v18 + 16) = v23;
    char v27 = *(unsigned char *)(v18 + 24);
    *(unsigned char *)(v18 + 24) = v20;
    sub_251A1B604(v24, v25, v26, v27);
    if (a1 == a2) {
      goto LABEL_18;
    }
  }
  uint64_t v33 = *(int *)(a3 + 20);
  uint64_t v34 = (void *)(a1 + v33);
  uint64_t v35 = (const void *)(a2 + v33);
  sub_251E31C88(a1 + v33, (uint64_t (*)(void))type metadata accessor for TilesFilter);
  uint64_t v36 = type metadata accessor for TilesFilter();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC00);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v39 - 8) + 16))(v34, v35, v39);
      swift_storeEnumTagMultiPayload();
      break;
    case 2:
      uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CBF8);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v40 - 8) + 16))(v34, v35, v40);
      swift_storeEnumTagMultiPayload();
      break;
    case 1:
      uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CBF0);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v38 - 8) + 16))(v34, v35, v38);
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
      break;
  }
LABEL_18:
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_251E2E884(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for IconTextValueStringDataHolder();
  *(_OWORD *)(a1 + v7[5]) = *(_OWORD *)(a2 + v7[5]);
  *(_OWORD *)(a1 + v7[6]) = *(_OWORD *)(a2 + v7[6]);
  *(_OWORD *)(a1 + v7[7]) = *(_OWORD *)(a2 + v7[7]);
  uint64_t v8 = v7[8];
  uint64_t v9 = (_OWORD *)(a1 + v8);
  unsigned int v10 = (_OWORD *)(a2 + v8);
  *(_OWORD *)((char *)v9 + 9) = *(_OWORD *)((char *)v10 + 9);
  *uint64_t v9 = *v10;
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (const void *)(a2 + v11);
  uint64_t v14 = type metadata accessor for TilesFilter();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC00);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v17 - 8) + 32))(v12, v13, v17);
      swift_storeEnumTagMultiPayload();
      break;
    case 2:
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CBF8);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v18 - 8) + 32))(v12, v13, v18);
      swift_storeEnumTagMultiPayload();
      break;
    case 1:
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CBF0);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v16 - 8) + 32))(v12, v13, v16);
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
      break;
  }
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_251E2EAA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for IconTextValueStringDataHolder();
  uint64_t v8 = v7[5];
  uint64_t v9 = (void *)(a1 + v8);
  unsigned int v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  uint64_t v13 = v7[6];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (uint64_t *)(a2 + v13);
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  *uint64_t v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  uint64_t v18 = v7[7];
  uint64_t v19 = (void *)(a1 + v18);
  int v20 = (uint64_t *)(a2 + v18);
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  *uint64_t v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  uint64_t v23 = v7[8];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  int v26 = *(unsigned __int8 *)(a1 + v23 + 24);
  if (v26 == 255)
  {
LABEL_6:
    *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
    *(_OWORD *)(v24 + 9) = *(_OWORD *)(v25 + 9);
    if (a1 == a2) {
      goto LABEL_14;
    }
    goto LABEL_7;
  }
  int v27 = *(unsigned __int8 *)(v25 + 24);
  if (v27 == 255)
  {
    sub_251A1B620(v24);
    goto LABEL_6;
  }
  uint64_t v28 = *(void *)(v25 + 16);
  uint64_t v29 = *(void *)v24;
  uint64_t v30 = *(void *)(v24 + 8);
  uint64_t v31 = *(void *)(v24 + 16);
  *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
  *(void *)(v24 + 16) = v28;
  *(unsigned char *)(v24 + 24) = v27;
  sub_251A1B604(v29, v30, v31, v26);
  if (a1 == a2) {
    goto LABEL_14;
  }
LABEL_7:
  uint64_t v32 = *(int *)(a3 + 20);
  uint64_t v33 = (void *)(a1 + v32);
  uint64_t v34 = (const void *)(a2 + v32);
  sub_251E31C88(a1 + v32, (uint64_t (*)(void))type metadata accessor for TilesFilter);
  uint64_t v35 = type metadata accessor for TilesFilter();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC00);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v38 - 8) + 32))(v33, v34, v38);
      swift_storeEnumTagMultiPayload();
      break;
    case 2:
      uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CBF8);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v39 - 8) + 32))(v33, v34, v39);
      swift_storeEnumTagMultiPayload();
      break;
    case 1:
      uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CBF0);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v37 - 8) + 32))(v33, v34, v37);
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
      break;
  }
LABEL_14:
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_251E2ED70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251E2ED84);
}

uint64_t __swift_get_extra_inhabitant_index_8Tm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for IconTextValueStringDataHolder();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
  }
  else
  {
    uint64_t v11 = type metadata accessor for TilesFilter();
    uint64_t v12 = *(void *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) != a2)
    {
      unsigned int v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
      if (v14 >= 4) {
        return v14 - 3;
      }
      else {
        return 0;
      }
    }
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_251E2EE98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251E2EEAC);
}

uint64_t __swift_store_extra_inhabitant_index_9Tm(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for IconTextValueStringDataHolder();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = type metadata accessor for TilesFilter();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(unsigned char *)(a1 + *(int *)(a4 + 24)) = a2 + 3;
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for AirPurifierStatusItem(uint64_t a1)
{
  return sub_251A1C6FC(a1, (uint64_t *)&unk_269BA42C0);
}

uint64_t sub_251E2EFE0()
{
  uint64_t result = type metadata accessor for IconTextValueStringDataHolder();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for TilesFilter();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_251E2F0B0(uint64_t a1, uint64_t a2, uint64_t (*a3)(char *), uint64_t a4)
{
  uint64_t v8 = type metadata accessor for StaticService();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v50 = (char *)v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)v47 - v13;
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)v47 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v48 = (uint64_t)v47 - v18;
  uint64_t v19 = *(void *)(a2 + 56);
  uint64_t v55 = a2 + 56;
  uint64_t v59 = a1;
  uint64_t v20 = -1 << *(unsigned char *)(a2 + 32);
  if (-v20 < 64) {
    uint64_t v21 = ~(-1 << -(char)v20);
  }
  else {
    uint64_t v21 = -1;
  }
  unint64_t v22 = v21 & v19;
  v47[1] = -1 << *(unsigned char *)(a2 + 32);
  int64_t v54 = (unint64_t)(63 - v20) >> 6;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v24 = 0;
  uint64_t v52 = a4;
  uint64_t v53 = a2;
  uint64_t v51 = v9;
  uint64_t v49 = v14;
  uint64_t v25 = (uint64_t)v50;
  while (1)
  {
    if (v22)
    {
      unint64_t v26 = __clz(__rbit64(v22));
      v22 &= v22 - 1;
      unint64_t v27 = v26 | (v24 << 6);
      goto LABEL_26;
    }
    int64_t v28 = v24 + 1;
    if (__OFADD__(v24, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v28 >= v54) {
      goto LABEL_28;
    }
    unint64_t v29 = *(void *)(v55 + 8 * v28);
    int64_t v30 = v24 + 1;
    if (!v29)
    {
      int64_t v30 = v24 + 2;
      if (v24 + 2 >= v54) {
        goto LABEL_28;
      }
      unint64_t v29 = *(void *)(v55 + 8 * v30);
      if (!v29)
      {
        int64_t v30 = v24 + 3;
        if (v24 + 3 >= v54) {
          goto LABEL_28;
        }
        unint64_t v29 = *(void *)(v55 + 8 * v30);
        if (!v29)
        {
          int64_t v30 = v24 + 4;
          if (v24 + 4 >= v54) {
            goto LABEL_28;
          }
          unint64_t v29 = *(void *)(v55 + 8 * v30);
          if (!v29)
          {
            int64_t v30 = v24 + 5;
            if (v24 + 5 >= v54) {
              goto LABEL_28;
            }
            unint64_t v29 = *(void *)(v55 + 8 * v30);
            if (!v29) {
              break;
            }
          }
        }
      }
    }
LABEL_25:
    unint64_t v22 = (v29 - 1) & v29;
    unint64_t v27 = __clz(__rbit64(v29)) + (v30 << 6);
    int64_t v24 = v30;
LABEL_26:
    sub_251E31ABC(*(void *)(a2 + 48) + *(void *)(v9 + 72) * v27, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for StaticService);
    sub_251E31CE8((uint64_t)v14, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for StaticService);
    char v32 = a3(v17);
    uint64_t v33 = (uint64_t)v17;
    if (v32)
    {
      int64_t v58 = v24;
      uint64_t v34 = v48;
      sub_251E31CE8((uint64_t)v17, v48, (uint64_t (*)(void))type metadata accessor for StaticService);
      sub_251E31CE8(v34, v25, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v35 = sub_251F34DA0();
      uint64_t v57 = v47;
      uint64_t v36 = *(void *)(v35 - 8);
      uint64_t v37 = MEMORY[0x270FA5388](v35);
      uint64_t v39 = (char *)v47 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v56 = v47;
      MEMORY[0x270FA5388](v37);
      uint64_t v40 = v17;
      uint64_t v41 = a3;
      uint64_t v43 = (char *)v47 - v42;
      (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))((char *)v47 - v42, v25, v35);
      uint64_t v44 = v43;
      a3 = v41;
      uint64_t v17 = v40;
      int64_t v24 = v58;
      sub_251A637B8(v39, v44);
      char v45 = v39;
      uint64_t v14 = v49;
      uint64_t v46 = v35;
      a2 = v53;
      (*(void (**)(char *, uint64_t))(v36 + 8))(v45, v46);
      uint64_t v9 = v51;
      uint64_t v33 = v25;
    }
    uint64_t result = sub_251E31C88(v33, (uint64_t (*)(void))type metadata accessor for StaticService);
  }
  int64_t v31 = v24 + 6;
  if (v24 + 6 >= v54)
  {
LABEL_28:
    sub_251A1E630();
    swift_release();
    return v59;
  }
  unint64_t v29 = *(void *)(v55 + 8 * v31);
  if (v29)
  {
    int64_t v30 = v24 + 6;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v30 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      break;
    }
    if (v30 >= v54) {
      goto LABEL_28;
    }
    unint64_t v29 = *(void *)(v55 + 8 * v30);
    ++v31;
    if (v29) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_251E2F56C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v19 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C9E0);
  MEMORY[0x270FA5388](v3 - 8);
  int v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for IconTextValueStringDataHolder();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TemperatureStatusItem(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (uint64_t)&v14[*(int *)(v12 + 20)];
  uint64_t v20 = sub_251EE1478((uint64_t)&unk_270262F90);
  uint64_t v21 = type metadata accessor for StaticService();
  sub_251F34EF0();
  swift_bridgeObjectRelease();
  type metadata accessor for TilesFilter();
  swift_storeEnumTagMultiPayload();
  static ClimateSummarizer.temperatureGaugeData(from:)(a1, (uint64_t)v5);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_251A1B064((uint64_t)v5, &qword_269B9C9E0);
    sub_251E31C88(v15, (uint64_t (*)(void))type metadata accessor for TilesFilter);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(v19, 1, 1, v10);
  }
  else
  {
    sub_251E31CE8((uint64_t)v5, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
    sub_251E31CE8((uint64_t)v9, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
    uint64_t v17 = v19;
    sub_251E31ABC((uint64_t)v14, v19, type metadata accessor for TemperatureStatusItem);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(v17, 0, 1, v10);
    return sub_251E31C88((uint64_t)v14, type metadata accessor for TemperatureStatusItem);
  }
}

uint64_t sub_251E2F87C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v19 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C9E0);
  MEMORY[0x270FA5388](v3 - 8);
  int v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for IconTextValueStringDataHolder();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for HumidityStatusItem(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (uint64_t)&v14[*(int *)(v12 + 20)];
  uint64_t v20 = sub_251EE1478((uint64_t)&unk_270262FB8);
  uint64_t v21 = type metadata accessor for StaticService();
  sub_251F34EF0();
  swift_bridgeObjectRelease();
  type metadata accessor for TilesFilter();
  swift_storeEnumTagMultiPayload();
  static ClimateSummarizer.humidityGaugeData(from:addPercentageSign:)(a1, 1, (uint64_t)v5);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_251A1B064((uint64_t)v5, &qword_269B9C9E0);
    sub_251E31C88(v15, (uint64_t (*)(void))type metadata accessor for TilesFilter);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(v19, 1, 1, v10);
  }
  else
  {
    sub_251E31CE8((uint64_t)v5, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
    sub_251E31CE8((uint64_t)v9, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
    uint64_t v17 = v19;
    sub_251E31ABC((uint64_t)v14, v19, type metadata accessor for HumidityStatusItem);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(v17, 0, 1, v10);
    return sub_251E31C88((uint64_t)v14, type metadata accessor for HumidityStatusItem);
  }
}

uint64_t sub_251E2FB90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C9E0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = &v18[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for IconTextValueStringDataHolder();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = &v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = type metadata accessor for AirQualityStatusItem(0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = &v18[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = (uint64_t)&v15[*(int *)(v13 + 20)];
  v18[16] = 4;
  uint64_t v19 = type metadata accessor for StaticService();
  sub_251F34EF0();
  type metadata accessor for TilesFilter();
  swift_storeEnumTagMultiPayload();
  static ClimateSummarizer.airQualityGaugeData(from:)(a1, (uint64_t)v6);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_251A1B064((uint64_t)v6, &qword_269B9C9E0);
    sub_251E31C88(v16, (uint64_t (*)(void))type metadata accessor for TilesFilter);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56))(a2, 1, 1, v11);
  }
  else
  {
    sub_251E31CE8((uint64_t)v6, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
    sub_251E31CE8((uint64_t)v10, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
    sub_251E31ABC((uint64_t)v15, a2, type metadata accessor for AirQualityStatusItem);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(a2, 0, 1, v11);
    return sub_251E31C88((uint64_t)v15, type metadata accessor for AirQualityStatusItem);
  }
}

uint64_t sub_251E2FE88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for TilesFilter();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for IconTextValueStringDataHolder();
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FanStatusItem(0);
  uint64_t v60 = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[*(int *)(v11 + 20)] = 3;
  uint64_t v14 = sub_251EE1478((uint64_t)&unk_270262FE0);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v14;
  uint64_t v16 = sub_251E2F0B0(MEMORY[0x263F8EE88], a1, (uint64_t (*)(char *))sub_251E321A4, v15);
  swift_release();
  swift_bridgeObjectRelease();
  if (*(void *)(v16 + 16))
  {
    int64_t v54 = (int *)v7;
    uint64_t v55 = v13;
    uint64_t v56 = v6;
    uint64_t v57 = v4;
    uint64_t v58 = v10;
    uint64_t v59 = a2;
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    uint64_t v52 = &v47;
    uint64_t v18 = *(void *)(*(void *)(v17 - 8) + 64);
    MEMORY[0x270FA5388](v17 - 8);
    unint64_t v47 = (v18 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v19 = (char *)&v47 - v47;
    uint64_t v20 = sub_251F34DA0();
    uint64_t v21 = *(void *)(v20 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v19, 1, 1, v20);
    uint64_t v22 = static String.hfLocalized(_:)(0xD00000000000001DLL, 0x8000000251F72360);
    uint64_t v50 = v23;
    uint64_t v51 = v22;
    static String.hfLocalized(_:)(0xD000000000000017, 0x8000000251F6AB50);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_251F38650;
    uint64_t v53 = v16;
    uint64_t v25 = *(void *)(v16 + 16);
    uint64_t v26 = MEMORY[0x263F8D750];
    *(void *)(v24 + 56) = MEMORY[0x263F8D6C8];
    *(void *)(v24 + 64) = v26;
    *(void *)(v24 + 32) = v25;
    uint64_t v27 = sub_251F35710();
    uint64_t v48 = v28;
    uint64_t v49 = v27;
    swift_bridgeObjectRelease();
    uint64_t v29 = swift_bridgeObjectRelease();
    uint64_t v30 = MEMORY[0x270FA5388](v29);
    char v32 = (char *)&v47 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
    MEMORY[0x270FA5388](v30);
    uint64_t v33 = (char *)&v47 - v47;
    sub_251A1E280((uint64_t)v19, (uint64_t)&v47 - v47);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v33, 1, v20) == 1)
    {
      sub_251F34D90();
      sub_251A1B064((uint64_t)v19, &qword_26B21FF90);
      sub_251A1B064((uint64_t)v33, &qword_26B21FF90);
      uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
    }
    else
    {
      sub_251A1B064((uint64_t)v19, &qword_26B21FF90);
      uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
      v34(v32, v33, v20);
    }
    uint64_t v37 = (uint64_t)v55;
    v34(v9, v32, v20);
    uint64_t v38 = v54;
    uint64_t v39 = &v9[v54[5]];
    *(void *)uint64_t v39 = 0x6B7365642E6E6166;
    *((void *)v39 + 1) = 0xE800000000000000;
    uint64_t v40 = &v9[v38[6]];
    *(void *)uint64_t v40 = v51;
    *((void *)v40 + 1) = v50;
    uint64_t v41 = &v9[v38[7]];
    *(void *)uint64_t v41 = v49;
    *((void *)v41 + 1) = v48;
    uint64_t v42 = &v9[v38[8]];
    *(void *)uint64_t v42 = 0;
    *((void *)v42 + 1) = 0;
    *((void *)v42 + 2) = 0;
    v42[24] = -1;
    uint64_t v43 = sub_251E31CE8((uint64_t)v9, v37, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
    MEMORY[0x270FA5388](v43);
    *(&v47 - 2) = v53;
    uint64_t v61 = type metadata accessor for StaticService();
    uint64_t v44 = (uint64_t)v56;
    sub_251F34EF0();
    swift_bridgeObjectRelease();
    swift_storeEnumTagMultiPayload();
    uint64_t v45 = v58;
    sub_251E31CE8(v44, v37 + *(int *)(v58 + 24), (uint64_t (*)(void))type metadata accessor for TilesFilter);
    uint64_t v46 = v59;
    sub_251E31ABC(v37, v59, type metadata accessor for FanStatusItem);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v60 + 56))(v46, 0, 1, v45);
    return sub_251E31C88(v37, type metadata accessor for FanStatusItem);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v35 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v60 + 56);
    return v35(a2, 1, 1, v10);
  }
}