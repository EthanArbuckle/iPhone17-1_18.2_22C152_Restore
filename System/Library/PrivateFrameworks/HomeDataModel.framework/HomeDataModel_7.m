uint64_t sub_251E304F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t result;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  int64_t v30;
  unint64_t v31;
  int64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;
  int64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  void (*v51)(char *, char *, uint64_t);
  uint64_t v52;
  int *v53;
  void *v54;
  uint64_t *v55;
  int64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  int64_t v73;
  uint64_t v74;
  uint64_t v75;
  char **v76;
  uint64_t v77;

  v71 = a2;
  v68 = type metadata accessor for TilesFilter();
  MEMORY[0x270FA5388](v68);
  v67 = (char *)&v63 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = type metadata accessor for IconTextValueStringDataHolder();
  MEMORY[0x270FA5388](v64);
  v63 = (char *)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v65 = type metadata accessor for StaticService();
  v75 = *(void *)(v65 - 8);
  v5 = MEMORY[0x270FA5388](v65);
  v7 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  v74 = (uint64_t)&v63 - v8;
  v9 = type metadata accessor for AirPurifierStatusItem(0);
  v69 = *(void *)(v9 - 8);
  v10 = MEMORY[0x270FA5388](v9);
  v12 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = v10;
  v13 = *(int *)(v10 + 24);
  v66 = v12;
  v12[v13] = 3;
  v76 = (char **)sub_251E31B24(a1);
  v77 = MEMORY[0x263F8EE88];
  v14 = (unint64_t)v76[7];
  v72 = (unint64_t)(v76 + 7);
  v15 = 1 << *((unsigned char *)v76 + 32);
  v16 = -1;
  if (v15 < 64) {
    v16 = ~(-1 << v15);
  }
  v17 = v16 & v14;
  v73 = (unint64_t)(v15 + 63) >> 6;
  result = swift_retain();
  v19 = 0;
  while (1)
  {
    if (v17)
    {
      v20 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v21 = v20 | (v19 << 6);
      goto LABEL_5;
    }
    v30 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
LABEL_33:
      __break(1u);
      return result;
    }
    if (v30 >= v73) {
      goto LABEL_25;
    }
    v31 = *(void *)(v72 + 8 * v30);
    ++v19;
    if (!v31)
    {
      v19 = v30 + 1;
      if (v30 + 1 >= v73) {
        goto LABEL_25;
      }
      v31 = *(void *)(v72 + 8 * v19);
      if (!v31)
      {
        v19 = v30 + 2;
        if (v30 + 2 >= v73) {
          goto LABEL_25;
        }
        v31 = *(void *)(v72 + 8 * v19);
        if (!v31)
        {
          v19 = v30 + 3;
          if (v30 + 3 >= v73) {
            goto LABEL_25;
          }
          v31 = *(void *)(v72 + 8 * v19);
          if (!v31)
          {
            v19 = v30 + 4;
            if (v30 + 4 >= v73) {
              goto LABEL_25;
            }
            v31 = *(void *)(v72 + 8 * v19);
            if (!v31) {
              break;
            }
          }
        }
      }
    }
LABEL_24:
    v17 = (v31 - 1) & v31;
    v21 = __clz(__rbit64(v31)) + (v19 << 6);
LABEL_5:
    v22 = v74;
    sub_251E31ABC((uint64_t)&v76[6][*(void *)(v75 + 72) * v21], v74, (uint64_t (*)(void))type metadata accessor for StaticService);
    sub_251E31CE8(v22, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticService);
    v23 = sub_251F34DA0();
    v24 = *(void *)(v23 - 8);
    v25 = MEMORY[0x270FA5388](v23);
    v27 = (char *)&v63 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
    MEMORY[0x270FA5388](v25);
    v29 = (char *)&v63 - v28;
    (*(void (**)(char *, char *, uint64_t))(v24 + 16))((char *)&v63 - v28, v7, v23);
    sub_251A637B8(v27, v29);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v27, v23);
    result = sub_251E31C88((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticService);
  }
  v32 = v30 + 5;
  if (v32 < v73)
  {
    v31 = *(void *)(v72 + 8 * v32);
    if (!v31)
    {
      while (1)
      {
        v19 = v32 + 1;
        if (__OFADD__(v32, 1)) {
          goto LABEL_33;
        }
        if (v19 >= v73) {
          goto LABEL_25;
        }
        v31 = *(void *)(v72 + 8 * v19);
        ++v32;
        if (v31) {
          goto LABEL_24;
        }
      }
    }
    v19 = v32;
    goto LABEL_24;
  }
LABEL_25:
  swift_release_n();
  v33 = v77;
  if (*(void *)(v77 + 16))
  {
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    v76 = &v63;
    v35 = *(void *)(*(void *)(v34 - 8) + 64);
    MEMORY[0x270FA5388](v34 - 8);
    v72 = (v35 + 15) & 0xFFFFFFFFFFFFFFF0;
    v36 = (char *)&v63 - v72;
    v37 = sub_251F34DA0();
    v38 = *(void *)(v37 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v38 + 56))(v36, 1, 1, v37);
    v39 = static String.hfLocalized(_:)(0xD000000000000025, 0x8000000251F72330);
    v74 = v40;
    v75 = v39;
    static String.hfLocalized(_:)(0xD000000000000017, 0x8000000251F6AB50);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
    v41 = swift_allocObject();
    *(_OWORD *)(v41 + 16) = xmmword_251F38650;
    v42 = *(void *)(v33 + 16);
    v43 = MEMORY[0x263F8D750];
    *(void *)(v41 + 56) = MEMORY[0x263F8D6C8];
    *(void *)(v41 + 64) = v43;
    *(void *)(v41 + 32) = v42;
    v73 = sub_251F35710();
    v45 = v44;
    swift_bridgeObjectRelease();
    v46 = swift_bridgeObjectRelease();
    v47 = MEMORY[0x270FA5388](v46);
    v49 = (char *)&v63 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
    MEMORY[0x270FA5388](v47);
    v50 = (char *)&v63 - v72;
    sub_251A1E280((uint64_t)v36, (uint64_t)&v63 - v72);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v50, 1, v37) == 1)
    {
      sub_251F34D90();
      sub_251A1B064((uint64_t)v36, &qword_26B21FF90);
      sub_251A1B064((uint64_t)v50, &qword_26B21FF90);
      v51 = *(void (**)(char *, char *, uint64_t))(v38 + 32);
    }
    else
    {
      sub_251A1B064((uint64_t)v36, &qword_26B21FF90);
      v51 = *(void (**)(char *, char *, uint64_t))(v38 + 32);
      v51(v49, v50, v37);
    }
    v52 = (uint64_t)v63;
    v51(v63, v49, v37);
    v53 = (int *)v64;
    v54 = (void *)(v52 + *(int *)(v64 + 20));
    *v54 = 0xD000000000000011;
    v54[1] = 0x8000000251F652B0;
    v55 = (uint64_t *)(v52 + v53[6]);
    *v55 = v75;
    v55[1] = v74;
    v56 = (int64_t *)(v52 + v53[7]);
    *v56 = v73;
    v56[1] = v45;
    v57 = v52 + v53[8];
    *(void *)v57 = 0;
    *(void *)(v57 + 8) = 0;
    *(void *)(v57 + 16) = 0;
    *(unsigned char *)(v57 + 24) = -1;
    v58 = (uint64_t)v66;
    v59 = sub_251E31CE8(v52, (uint64_t)v66, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
    MEMORY[0x270FA5388](v59);
    *(&v63 - 2) = (char *)v33;
    v77 = v65;
    v60 = (uint64_t)v67;
    sub_251F34EF0();
    swift_bridgeObjectRelease();
    swift_storeEnumTagMultiPayload();
    v61 = v70;
    sub_251E31CE8(v60, v58 + *(int *)(v70 + 20), (uint64_t (*)(void))type metadata accessor for TilesFilter);
    v62 = v71;
    sub_251E31ABC(v58, v71, type metadata accessor for AirPurifierStatusItem);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v69 + 56))(v62, 0, 1, v61);
    return sub_251E31C88(v58, type metadata accessor for AirPurifierStatusItem);
  }
  else
  {
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v69 + 56))(v71, 1, 1, v70);
  }
}

uint64_t sub_251E30E34@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for StaticService();
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v8 = *(unsigned __int8 *)(a1 + *(int *)(v5 + 96));
  sub_251E31ABC(a1, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticService);
  if (v8 == 53) {
    LOBYTE(v8) = v7[*(int *)(v4 + 88)];
  }
  uint64_t result = sub_251E31C88((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticService);
  *a2 = v8;
  return result;
}

uint64_t sub_251E30F10@<X0>(uint64_t a1@<X8>)
{
  return sub_251E31ABC(v1, a1, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
}

uint64_t sub_251E30F44@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4310);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v19 = v4;
  uint64_t v20 = v5;
  MEMORY[0x270FA5388](v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4318);
  sub_251F34980();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA42D0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC50);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1E590(&qword_269B9CC58, &qword_269B9CC50);
  sub_251F34990();
  swift_getKeyPath();
  sub_251F34920();
  swift_release();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  a2[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4320);
  a2[4] = sub_251E32354();
  __swift_allocate_boxed_opaque_existential_1(a2);
  sub_251A1E590(&qword_269BA4348, &qword_269BA4310);
  sub_251A1E590(&qword_269BA4300, &qword_269BA42D0);
  sub_251E32514(&qword_269BA4350, &qword_269BA4318);
  sub_251BD2FE8();
  uint64_t v16 = v19;
  sub_251F34940();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v7, v16);
}

uint64_t sub_251E31280@<X0>(char a1@<W1>, uint64_t *a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA42D0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC50);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  v11 = &v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_251A1E590(&qword_269B9CC58, &qword_269B9CC50);
  sub_251F34990();
  swift_getKeyPath();
  sub_251F34920();
  swift_release();
  (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA42D8);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  v15 = &v17[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17[15] = a1;
  sub_251F34980();
  a2[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA42E0);
  a2[4] = sub_251E321D4();
  __swift_allocate_boxed_opaque_existential_1(a2);
  sub_251A1E590(&qword_269BA4300, &qword_269BA42D0);
  sub_251A1E590(&qword_269BA4308, &qword_269BA42D8);
  sub_251BD2FE8();
  sub_251F34910();
  (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v15, v12);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

BOOL sub_251E31594(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticService();
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v15 - v9;
  uint64_t v11 = *(unsigned __int8 *)(a1 + *(int *)(v8 + 96));
  sub_251E31ABC(a1, (uint64_t)&v15 - v9, (uint64_t (*)(void))type metadata accessor for StaticService);
  if (v11 == 53) {
    uint64_t v11 = v10[*(int *)(v4 + 88)];
  }
  sub_251E31C88((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticService);
  char v12 = sub_251DB3C0C(v11, a2);
  sub_251E31ABC(a1, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticService);
  BOOL v13 = (v12 & 1) != 0 && StaticService.isActivated.getter();
  sub_251E31C88((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticService);
  return v13;
}

uint64_t sub_251E316F0@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC38);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v19 = v4;
  uint64_t v20 = v5;
  MEMORY[0x270FA5388](v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC40);
  sub_251F34980();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC48);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC50);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1E590(&qword_269B9CC58, &qword_269B9CC50);
  sub_251F34990();
  swift_getKeyPath();
  sub_251F34920();
  swift_release();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  a2[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC60);
  a2[4] = sub_251A1E358();
  __swift_allocate_boxed_opaque_existential_1(a2);
  sub_251A1E590(&qword_269B9CCA0, &qword_269B9CC38);
  sub_251A1E590(&qword_269B9CCA8, &qword_269B9CC48);
  sub_251E32514((unint64_t *)&qword_269B9CCB0, &qword_269B9CC40);
  sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
  uint64_t v16 = v19;
  sub_251F34940();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v7, v16);
}

uint64_t sub_251E31A3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_251E31ABC(v2 + *(int *)(a1 + 24), a2, (uint64_t (*)(void))type metadata accessor for TilesFilter);
}

uint64_t sub_251E31A74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_251E31ABC(v2 + *(int *)(a1 + 20), a2, (uint64_t (*)(void))type metadata accessor for TilesFilter);
}

uint64_t sub_251E31AAC@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(v2 + *(int *)(result + 24));
  return result;
}

uint64_t sub_251E31ABC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_251E31B24(uint64_t isStackAllocationSafe)
{
  uint64_t v2 = isStackAllocationSafe;
  v9[1] = *MEMORY[0x263EF8340];
  char v3 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v4 = (unint64_t)((1 << v3) + 63) >> 6;
  size_t v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    bzero((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    uint64_t v6 = sub_251E31D50((void *)((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0)), v4, v2);
    swift_release();
    if (v1) {
      swift_willThrow();
    }
  }
  else
  {
    v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    uint64_t v6 = sub_251E31D50((unint64_t *)v7, v4, v2);
    swift_release();
    MEMORY[0x2533AC760](v7, -1, -1);
  }
  return v6;
}

uint64_t sub_251E31C88(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_251E31CE8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_251E31D50(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v31 = a2;
  v32 = a1;
  uint64_t v4 = type metadata accessor for StaticService();
  uint64_t v38 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v31 - v9;
  uint64_t result = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)&v31 - v12;
  int64_t v14 = 0;
  uint64_t v39 = a3;
  uint64_t v15 = *(void *)(a3 + 56);
  uint64_t v33 = 0;
  uint64_t v34 = a3 + 56;
  uint64_t v16 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & v15;
  v37 = "00-8000-0026BB765291";
  int64_t v35 = (unint64_t)(v16 + 63) >> 6;
  unint64_t v36 = 0x8000000251F648F0;
  while (1)
  {
    if (v18)
    {
      unint64_t v19 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v20 = v19 | (v14 << 6);
      goto LABEL_18;
    }
    BOOL v21 = __OFADD__(v14++, 1);
    if (v21)
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v14 >= v35) {
      goto LABEL_32;
    }
    unint64_t v22 = *(void *)(v34 + 8 * v14);
    if (!v22) {
      break;
    }
LABEL_17:
    unint64_t v18 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v14 << 6);
LABEL_18:
    sub_251E31ABC(*(void *)(v39 + 48) + *(void *)(v38 + 72) * v20, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for StaticService);
    int v24 = v13[*(int *)(v4 + 96)];
    sub_251E31ABC((uint64_t)v13, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticService);
    if (v24 == 53) {
      LOBYTE(v24) = v10[*(int *)(v4 + 88)];
    }
    sub_251E31C88((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticService);
    char v40 = v24;
    if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v25 == v36)
    {
      swift_bridgeObjectRelease();
      sub_251E31ABC((uint64_t)v13, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticService);
      goto LABEL_24;
    }
    char v26 = sub_251F36B10();
    swift_bridgeObjectRelease();
    sub_251E31ABC((uint64_t)v13, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticService);
    if (v26)
    {
LABEL_24:
      BOOL v27 = StaticService.isActivated.getter();
      sub_251E31C88((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t result = sub_251E31C88((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for StaticService);
      if (v27)
      {
        *(unint64_t *)((char *)v32 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
        BOOL v21 = __OFADD__(v33++, 1);
        if (v21) {
          goto LABEL_35;
        }
      }
    }
    else
    {
      sub_251E31C88((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t result = sub_251E31C88((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for StaticService);
    }
  }
  int64_t v23 = v14 + 1;
  if (v14 + 1 >= v35) {
    goto LABEL_32;
  }
  unint64_t v22 = *(void *)(v34 + 8 * v23);
  if (v22) {
    goto LABEL_16;
  }
  int64_t v23 = v14 + 2;
  if (v14 + 2 >= v35) {
    goto LABEL_32;
  }
  unint64_t v22 = *(void *)(v34 + 8 * v23);
  if (v22) {
    goto LABEL_16;
  }
  int64_t v23 = v14 + 3;
  if (v14 + 3 >= v35)
  {
LABEL_32:
    uint64_t v28 = v31;
    uint64_t v29 = v33;
    uint64_t v30 = v39;
    swift_retain();
    return sub_251F1BD94(v32, v28, v29, v30);
  }
  unint64_t v22 = *(void *)(v34 + 8 * v23);
  if (v22)
  {
LABEL_16:
    int64_t v14 = v23;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v14 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v14 >= v35) {
      goto LABEL_32;
    }
    unint64_t v22 = *(void *)(v34 + 8 * v14);
    ++v23;
    if (v22) {
      goto LABEL_17;
    }
  }
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_251E3216C()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

BOOL sub_251E321A4(uint64_t a1)
{
  return sub_251E31594(a1, *(void *)(v1 + 16));
}

uint64_t sub_251E321AC@<X0>(uint64_t *a1@<X8>)
{
  return sub_251E316F0(*(void *)(v1 + 16), a1);
}

uint64_t sub_251E321C8@<X0>(uint64_t *a1@<X8>)
{
  return sub_251E31280(*(unsigned char *)(v1 + 16), a1);
}

unint64_t sub_251E321D4()
{
  unint64_t result = qword_269BA42E8;
  if (!qword_269BA42E8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269BA42E0);
    sub_251E32254(&qword_269BA42F0, &qword_269BA42D0);
    sub_251E322C8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA42E8);
  }
  return result;
}

uint64_t sub_251E32254(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    sub_251A1E590(&qword_269B9CC98, &qword_269B9CC50);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_251E322C8()
{
  unint64_t result = qword_269BA42F8;
  if (!qword_269BA42F8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269BA42D8);
    sub_251CA72A8();
    sub_251CA7158();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA42F8);
  }
  return result;
}

uint64_t sub_251E32338@<X0>(uint64_t *a1@<X8>)
{
  return sub_251E30F44(*(void *)(v1 + 16), a1);
}

unint64_t sub_251E32354()
{
  unint64_t result = qword_269BA4328;
  if (!qword_269BA4328)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269BA4320);
    sub_251E323D4();
    sub_251E32254(&qword_269BA42F0, &qword_269BA42D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4328);
  }
  return result;
}

unint64_t sub_251E323D4()
{
  unint64_t result = qword_269BA4330;
  if (!qword_269BA4330)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269BA4310);
    sub_251E324A4(&qword_269BA4338, (void (*)(void))sub_251CA72A8);
    sub_251E324A4(&qword_269BA4340, (void (*)(void))sub_251CA7158);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4330);
  }
  return result;
}

uint64_t sub_251E324A4(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269BA4318);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_251E32514(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

BOOL StaticProfileBag.isEmpty.getter()
{
  return !*(void *)(*v0 + 16) && *(void *)(v0[1] + 16) == 0;
}

uint64_t StaticProfileBag.isNaturalLightSupported.getter()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t v31 = v1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & v2;
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF50);
  MEMORY[0x270FA5388](v35);
  uint64_t v33 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = v6;
  int64_t v32 = (unint64_t)(v3 + 63) >> 6;
  uint64_t v36 = v1;
  uint64_t result = swift_bridgeObjectRetain_n();
  int64_t v8 = 0;
  if (!v5) {
    goto LABEL_5;
  }
LABEL_4:
  uint64_t v37 = (v5 - 1) & v5;
  int64_t v38 = v8;
  for (unint64_t i = __clz(__rbit64(v5)) | (v8 << 6); ; unint64_t i = __clz(__rbit64(v11)) + (v12 << 6))
  {
    uint64_t v14 = v36;
    uint64_t v15 = *(void *)(v36 + 48);
    uint64_t v16 = sub_251F34DA0();
    uint64_t v17 = *(void *)(v16 - 8);
    uint64_t v18 = v17;
    uint64_t v19 = v15 + *(void *)(v17 + 72) * i;
    uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
    uint64_t v40 = v17 + 16;
    uint64_t v20 = (uint64_t)v33;
    v39(v33, v19, v16);
    uint64_t v21 = *(void *)(v14 + 56);
    unint64_t v22 = (int *)(type metadata accessor for StaticLightProfile() - 8);
    uint64_t v23 = v21 + *(void *)(*(void *)v22 + 72) * i;
    uint64_t v24 = v35;
    uint64_t v25 = sub_251E37338(v23, v20 + *(int *)(v35 + 48), (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
    uint64_t v26 = v34;
    MEMORY[0x270FA5388](v25);
    BOOL v27 = (char *)&v31 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v28 = sub_251D6B918(v20, (uint64_t)v27);
    MEMORY[0x270FA5388](v28);
    uint64_t v29 = (uint64_t)&v27[*(int *)(v24 + 48)];
    v39(v27, (uint64_t)v27, v16);
    sub_251E37338(v29, v29, (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
    int v30 = *(unsigned __int8 *)(v29 + v22[7]);
    sub_251E372D8(v29, (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v27, v16);
    uint64_t result = sub_251A1B064((uint64_t)v27, &qword_269B9CF50);
    if (v30 == 1)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return 1;
    }
    unint64_t v5 = v37;
    int64_t v8 = v38;
    if (v37) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v10 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v10 >= v32) {
      goto LABEL_27;
    }
    unint64_t v11 = *(void *)(v31 + 8 * v10);
    int64_t v12 = v8 + 1;
    if (!v11)
    {
      int64_t v12 = v8 + 2;
      if (v8 + 2 >= v32) {
        goto LABEL_27;
      }
      unint64_t v11 = *(void *)(v31 + 8 * v12);
      if (!v11)
      {
        int64_t v12 = v8 + 3;
        if (v8 + 3 >= v32) {
          goto LABEL_27;
        }
        unint64_t v11 = *(void *)(v31 + 8 * v12);
        if (!v11)
        {
          int64_t v12 = v8 + 4;
          if (v8 + 4 >= v32) {
            goto LABEL_27;
          }
          unint64_t v11 = *(void *)(v31 + 8 * v12);
          if (!v11)
          {
            int64_t v12 = v8 + 5;
            if (v8 + 5 >= v32) {
              goto LABEL_27;
            }
            unint64_t v11 = *(void *)(v31 + 8 * v12);
            if (!v11) {
              break;
            }
          }
        }
      }
    }
LABEL_22:
    uint64_t v37 = (v11 - 1) & v11;
    int64_t v38 = v12;
  }
  uint64_t v13 = v8 + 6;
  if (v8 + 6 >= v32)
  {
LABEL_27:
    swift_release();
    swift_bridgeObjectRelease();
    return 0;
  }
  unint64_t v11 = *(void *)(v31 + 8 * v13);
  if (v11)
  {
    int64_t v12 = v8 + 6;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v12 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v12 >= v32) {
      goto LABEL_27;
    }
    unint64_t v11 = *(void *)(v31 + 8 * v12);
    ++v13;
    if (v11) {
      goto LABEL_22;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t StaticProfileBag.isNaturalLightEnabled.getter()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t v32 = v1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & v2;
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF50);
  MEMORY[0x270FA5388](v36);
  uint64_t v34 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = v6;
  int64_t v33 = (unint64_t)(v3 + 63) >> 6;
  uint64_t v37 = v1;
  uint64_t result = swift_bridgeObjectRetain_n();
  int64_t v8 = 0;
  if (!v5) {
    goto LABEL_5;
  }
LABEL_4:
  uint64_t v38 = (v5 - 1) & v5;
  int64_t v39 = v8;
  for (unint64_t i = __clz(__rbit64(v5)) | (v8 << 6); ; unint64_t i = __clz(__rbit64(v11)) + (v12 << 6))
  {
    uint64_t v14 = v37;
    uint64_t v15 = *(void *)(v37 + 48);
    uint64_t v16 = sub_251F34DA0();
    uint64_t v41 = *(void *)(v16 - 8);
    uint64_t v17 = v15 + *(void *)(v41 + 72) * i;
    uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t))(v41 + 16);
    uint64_t v18 = (uint64_t)v34;
    v40(v34, v17, v16);
    uint64_t v19 = *(void *)(v14 + 56);
    uint64_t v20 = (int *)(type metadata accessor for StaticLightProfile() - 8);
    uint64_t v21 = v19 + *(void *)(*(void *)v20 + 72) * i;
    uint64_t v22 = v36;
    uint64_t v23 = sub_251E37338(v21, v18 + *(int *)(v36 + 48), (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
    uint64_t v24 = v35;
    MEMORY[0x270FA5388](v23);
    uint64_t v25 = (char *)&v32 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v26 = sub_251D6B918(v18, (uint64_t)v25);
    MEMORY[0x270FA5388](v26);
    uint64_t v27 = (uint64_t)&v25[*(int *)(v22 + 48)];
    v40(v25, (uint64_t)v25, v16);
    sub_251E37338(v27, v27, (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
    uint64_t v28 = (char *)(v27 + v20[8]);
    char v29 = *v28;
    int v30 = v28[1];
    if (v30 == 2) {
      char v31 = v29;
    }
    else {
      char v31 = v30;
    }
    sub_251E372D8(v27, (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v25, v16);
    uint64_t result = sub_251A1B064((uint64_t)v25, &qword_269B9CF50);
    if (v31)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return 1;
    }
    unint64_t v5 = v38;
    int64_t v8 = v39;
    if (v38) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v10 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v10 >= v33) {
      goto LABEL_30;
    }
    unint64_t v11 = *(void *)(v32 + 8 * v10);
    int64_t v12 = v8 + 1;
    if (!v11)
    {
      int64_t v12 = v8 + 2;
      if (v8 + 2 >= v33) {
        goto LABEL_30;
      }
      unint64_t v11 = *(void *)(v32 + 8 * v12);
      if (!v11)
      {
        int64_t v12 = v8 + 3;
        if (v8 + 3 >= v33) {
          goto LABEL_30;
        }
        unint64_t v11 = *(void *)(v32 + 8 * v12);
        if (!v11)
        {
          int64_t v12 = v8 + 4;
          if (v8 + 4 >= v33) {
            goto LABEL_30;
          }
          unint64_t v11 = *(void *)(v32 + 8 * v12);
          if (!v11)
          {
            int64_t v12 = v8 + 5;
            if (v8 + 5 >= v33) {
              goto LABEL_30;
            }
            unint64_t v11 = *(void *)(v32 + 8 * v12);
            if (!v11) {
              break;
            }
          }
        }
      }
    }
LABEL_22:
    uint64_t v38 = (v11 - 1) & v11;
    int64_t v39 = v12;
  }
  uint64_t v13 = v8 + 6;
  if (v8 + 6 >= v33)
  {
LABEL_30:
    swift_release();
    swift_bridgeObjectRelease();
    return 0;
  }
  unint64_t v11 = *(void *)(v32 + 8 * v13);
  if (v11)
  {
    int64_t v12 = v8 + 6;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v12 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v12 >= v33) {
      goto LABEL_30;
    }
    unint64_t v11 = *(void *)(v32 + 8 * v12);
    ++v13;
    if (v11) {
      goto LABEL_22;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

BOOL static StaticProfileBag.Kind.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t static StaticProfileBag.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a2[1];
  if ((sub_251AFD758(*a1, *a2) & 1) == 0) {
    return 0;
  }
  return sub_251AFDDE4(v2, v3);
}

uint64_t sub_251E32E38@<X0>(id a1@<X2>, uint64_t a2@<X0>, void *a3@<X1>, void *a4@<X3>, uint64_t *a5@<X4>, void *a6@<X8>)
{
  uint64_t v11 = *a5;
  uint64_t v12 = a5[1];
  id v13 = objc_msgSend(a1, sel_lightProfiles);
  sub_251A1A568(0, (unint64_t *)&qword_26B21F150);
  sub_251AA0024();
  uint64_t v14 = sub_251F35E40();

  unint64_t v15 = sub_2519FBB0C(MEMORY[0x263F8EE78]);
  char v31 = a3;
  uint64_t v32 = v11;
  uint64_t v33 = v12;
  uint64_t v34 = a2;
  id v35 = a1;
  uint64_t v36 = a4;
  sub_251AA9104(v15, (void (*)(uint64_t *, void *))sub_251E37274, (uint64_t)v30, v14);
  uint64_t v17 = v16;
  swift_bridgeObjectRelease();
  sub_251E37298(v11);
  id v18 = objc_msgSend(a1, sel_televisionProfiles);
  if (v18)
  {
    uint64_t v19 = v18;
    sub_251A1A568(0, &qword_26B21F178);
    unint64_t v20 = sub_251F35AC0();

    uint64_t v21 = (void *)sub_2519FBDBC(MEMORY[0x263F8EE78]);
    id v22 = a3;
    char v29 = a3;
    uint64_t v23 = a2;
    uint64_t v24 = v17;
    uint64_t v25 = a6;
    id v26 = a1;
    unint64_t v27 = (unint64_t)sub_251E36AC4(v21, v20, (uint64_t)v22, v26);

    swift_bridgeObjectRelease();
    a4 = v26;
    a6 = v25;
    uint64_t v17 = v24;
    a2 = v23;
    a3 = v29;
  }
  else
  {
    unint64_t v27 = sub_2519FBDBC(MEMORY[0x263F8EE78]);
  }

  uint64_t result = sub_251E372D8(a2, type metadata accessor for StateSnapshot.UpdateType);
  *a6 = v17;
  a6[1] = v27;
  return result;
}

uint64_t StaticProfileBag.staticLightProfilesDictionary.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t StaticProfileBag.staticTelevisionProfilesDictionary.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t StaticProfileBag.hash(into:)(long long *a1)
{
  uint64_t v4 = *v1;
  uint64_t v3 = v1[1];
  swift_bridgeObjectRetain();
  sub_251A44858(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_251A4427C(a1, v3);
  return swift_bridgeObjectRelease();
}

unint64_t sub_251E330B4()
{
  if (*v0) {
    return 0xD000000000000022;
  }
  else {
    return 0xD00000000000001DLL;
  }
}

uint64_t sub_251E330F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251E36FE0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251E3311C(uint64_t a1)
{
  unint64_t v2 = sub_251E35780();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E33158(uint64_t a1)
{
  unint64_t v2 = sub_251E35780();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticProfileBag.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4358);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v10 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251E35780();
  sub_251F36DA0();
  uint64_t v12 = v8;
  char v11 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4368);
  sub_251E357D4();
  sub_251F36A20();
  if (!v2)
  {
    uint64_t v12 = v10;
    char v11 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4380);
    sub_251E35890();
    sub_251F36A20();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t StaticProfileBag.hashValue.getter()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  sub_251F36CA0();
  sub_251A44858(v4, v1);
  sub_251A4427C(v4, v2);
  return sub_251F36D00();
}

uint64_t StaticProfileBag.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4398);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251E35780();
  sub_251F36D90();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4368);
  char v13 = 0;
  sub_251E3594C();
  sub_251F36880();
  uint64_t v9 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4380);
  char v13 = 1;
  sub_251E35A08();
  swift_bridgeObjectRetain();
  sub_251F36880();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v10 = v14;
  *a2 = v9;
  a2[1] = v10;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_251E335C0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a2[1];
  if ((sub_251AFD758(*a1, *a2) & 1) == 0) {
    return 0;
  }
  return sub_251AFDDE4(v2, v3);
}

uint64_t sub_251E3361C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  sub_251F36CA0();
  sub_251A44858(v4, v1);
  sub_251A4427C(v4, v2);
  return sub_251F36D00();
}

uint64_t sub_251E33670(long long *a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  sub_251A44858(a1, v3);
  return sub_251A4427C(a1, v4);
}

uint64_t sub_251E336B0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  sub_251F36CA0();
  sub_251A44858(v4, v1);
  sub_251A4427C(v4, v2);
  return sub_251F36D00();
}

uint64_t sub_251E33700@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return StaticProfileBag.init(from:)(a1, a2);
}

uint64_t sub_251E33718(void *a1)
{
  return StaticProfileBag.encode(to:)(a1);
}

uint64_t sub_251E33730(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, void *a8)
{
  v53 = a7;
  id v54 = a8;
  uint64_t v52 = a6;
  uint64_t v55 = a1;
  uint64_t v56 = a4;
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x270FA5388](updated - 8);
  uint64_t v12 = (char *)v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for StaticLightProfile();
  uint64_t v51 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  unint64_t v15 = (char *)v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C9A8);
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  uint64_t v19 = (char *)v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)v46 - v20;
  id v22 = *a2;
  id v23 = objc_msgSend(v22, sel_services);
  sub_251A1A568(0, (unint64_t *)&qword_26B21F180);
  unint64_t v24 = sub_251F35AC0();

  LOBYTE(a3) = sub_251D82D4C(a3, v24);
  uint64_t result = swift_bridgeObjectRelease();
  if (a3)
  {
    v47 = v12;
    v48 = v19;
    v49 = v21;
    uint64_t v50 = v13;
    uint64_t v26 = v51;
    uint64_t v27 = v56;
    if (v56)
    {
      id v28 = objc_msgSend(v22, sel_uniqueIdentifier);
      v46[0] = sub_251F34DA0();
      v46[1] = v46;
      uint64_t v29 = *(void *)(v46[0] - 8);
      MEMORY[0x270FA5388](v46[0]);
      char v31 = (char *)v46 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_251F34D80();

      uint64_t v32 = (uint64_t)v48;
      if (*(void *)(v27 + 16) && (unint64_t v33 = sub_2519FE584((uint64_t)v31), (v34 & 1) != 0))
      {
        uint64_t v35 = (uint64_t)v49;
        sub_251E37338(*(void *)(v56 + 56) + *(void *)(v26 + 72) * v33, (uint64_t)v49, (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
        uint64_t v36 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56);
        v36(v35, 0, 1, v50);
      }
      else
      {
        uint64_t v36 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56);
        uint64_t v35 = (uint64_t)v49;
        v36((uint64_t)v49, 1, 1, v50);
      }
      uint64_t v37 = v53;
      (*(void (**)(char *, void))(v29 + 8))(v31, v46[0]);
      uint64_t v38 = v50;
    }
    else
    {
      uint64_t v36 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v51 + 56);
      uint64_t v35 = (uint64_t)v49;
      uint64_t v38 = v50;
      v36((uint64_t)v49, 1, 1, v50);
      uint64_t v32 = (uint64_t)v48;
      uint64_t v37 = v53;
    }
    uint64_t v39 = (uint64_t)v47;
    sub_251E37338(v52, (uint64_t)v47, type metadata accessor for StateSnapshot.UpdateType);
    sub_251A57258(v35, v32);
    id v40 = v22;
    id v41 = v37;
    sub_251BD666C(v39, v40, v41, v54, v32, (uint64_t)v15);
    id v42 = objc_msgSend(v40, sel_uniqueIdentifier);
    uint64_t v43 = sub_251F34DA0();
    MEMORY[0x270FA5388](v43 - 8);
    v45 = (char *)v46 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_251F34D80();

    sub_251E37338((uint64_t)v15, v32, (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
    v36(v32, 0, 1, v38);
    sub_2519F8F28(v32, (uint64_t)v45);
    sub_251E372D8((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
    return sub_251A1B064(v35, &qword_269B9C9A8);
  }
  return result;
}

uint64_t StaticProfileBag.setNaturalLight(_:)(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 88) = a2;
  uint64_t v4 = *v2;
  *(void *)(v3 + 56) = a1;
  *(void *)(v3 + 64) = v4;
  return MEMORY[0x270FA2498](sub_251E33C34, 0, 0);
}

uint64_t sub_251E33C34()
{
  uint64_t v1 = *(void *)(v0 + 64);
  *(void *)(v0 + 40) = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA43C8);
  *(void *)(v0 + 48) = sub_251E35B0C();
  *(void *)(v0 + 16) = v1;
  swift_bridgeObjectRetain();
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_251E33D10;
  char v3 = *(unsigned char *)(v0 + 88);
  uint64_t v4 = *(void *)(v0 + 56);
  return static StaticLightProfile.setNaturalLight(_:lightProfiles:waitForWriteRequestCompletion:)(v4, v3, v0 + 16, 0);
}

uint64_t sub_251E33D10()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_251E33E4C, 0, 0);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0(v2 + 16);
    char v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_251E33E4C()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t StaticProfileBag.mediaSourceDisplayOrder.getter()
{
  uint64_t v1 = type metadata accessor for StaticTelevisionProfile();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v25 - v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA43D8);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(v0 + 8);
  uint64_t v12 = v11 + 64;
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v11 + 64);
  int64_t v16 = (unint64_t)(v13 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain_n();
  int64_t v18 = 0;
  if (!v15) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v19 = __clz(__rbit64(v15));
  v15 &= v15 - 1;
  for (unint64_t i = v19 | (v18 << 6); ; unint64_t i = __clz(__rbit64(v22)) + (v18 << 6))
  {
    sub_251E37338(*(void *)(v11 + 56) + *(void *)(v2 + 72) * i, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticTelevisionProfile);
    sub_251E35B68((uint64_t)v7, (uint64_t)v5);
    if (*(void *)(*(void *)&v5[*(int *)(v1 + 20)] + 16))
    {
      swift_release();
      sub_251E35B68((uint64_t)v5, (uint64_t)v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v2 + 56))(v10, 0, 1, v1);
      goto LABEL_28;
    }
    uint64_t result = sub_251E372D8((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticTelevisionProfile);
    if (v15) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v21 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
LABEL_33:
      __break(1u);
      return result;
    }
    if (v21 >= v16) {
      goto LABEL_27;
    }
    unint64_t v22 = *(void *)(v12 + 8 * v21);
    ++v18;
    if (!v22)
    {
      int64_t v18 = v21 + 1;
      if (v21 + 1 >= v16) {
        goto LABEL_27;
      }
      unint64_t v22 = *(void *)(v12 + 8 * v18);
      if (!v22)
      {
        int64_t v18 = v21 + 2;
        if (v21 + 2 >= v16) {
          goto LABEL_27;
        }
        unint64_t v22 = *(void *)(v12 + 8 * v18);
        if (!v22)
        {
          int64_t v18 = v21 + 3;
          if (v21 + 3 >= v16) {
            goto LABEL_27;
          }
          unint64_t v22 = *(void *)(v12 + 8 * v18);
          if (!v22)
          {
            int64_t v18 = v21 + 4;
            if (v21 + 4 >= v16) {
              goto LABEL_27;
            }
            unint64_t v22 = *(void *)(v12 + 8 * v18);
            if (!v22) {
              break;
            }
          }
        }
      }
    }
LABEL_22:
    unint64_t v15 = (v22 - 1) & v22;
  }
  int64_t v23 = v21 + 5;
  if (v23 < v16)
  {
    unint64_t v22 = *(void *)(v12 + 8 * v23);
    if (!v22)
    {
      while (1)
      {
        int64_t v18 = v23 + 1;
        if (__OFADD__(v23, 1)) {
          goto LABEL_33;
        }
        if (v18 >= v16) {
          goto LABEL_27;
        }
        unint64_t v22 = *(void *)(v12 + 8 * v18);
        ++v23;
        if (v22) {
          goto LABEL_22;
        }
      }
    }
    int64_t v18 = v23;
    goto LABEL_22;
  }
LABEL_27:
  swift_release();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56))(v10, 1, 1, v1);
LABEL_28:
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v10, 1, v1) == 1)
  {
    sub_251A1B064((uint64_t)v10, &qword_269BA43D8);
    return 0;
  }
  else
  {
    uint64_t v24 = *(void *)&v10[*(int *)(v1 + 20)];
    swift_bridgeObjectRetain();
    sub_251E372D8((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticTelevisionProfile);
  }
  return v24;
}

uint64_t static StaticProfileBag.ValueUpdate.== infix(_:_:)(unsigned char *a1, unsigned __int8 *a2)
{
  int v2 = *a2;
  if ((char)*a1 < 0)
  {
    if ((v2 & 0x80) == 0) {
      return 0;
    }
  }
  else if ((v2 & 0x80) != 0)
  {
    return 0;
  }
  return (((*a1 & 1) == 0) ^ v2) & 1;
}

uint64_t StaticProfileBag.ValueUpdate.hash(into:)()
{
  return sub_251F36CC0();
}

uint64_t sub_251E342A0()
{
  if (*v0) {
    return 0x6F7250616964656DLL;
  }
  else {
    return 0x6F7250746867696CLL;
  }
}

uint64_t sub_251E342DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251E37154(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251E34304(uint64_t a1)
{
  unint64_t v2 = sub_251E35BCC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E34340(uint64_t a1)
{
  unint64_t v2 = sub_251E35BCC();
  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_251E3437C()
{
  return 0xD000000000000016;
}

uint64_t sub_251E34398@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251E370CC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_251E343C4(uint64_t a1)
{
  unint64_t v2 = sub_251E35C74();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E34400(uint64_t a1)
{
  unint64_t v2 = sub_251E35C74();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251E3443C()
{
  return 0x457265776F507369;
}

uint64_t sub_251E34460@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x457265776F507369 && a2 == 0xEE0064656C62616ELL)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_251F36B10();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_251E3451C(uint64_t a1)
{
  unint64_t v2 = sub_251E35C20();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E34558(uint64_t a1)
{
  unint64_t v2 = sub_251E35C20();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticProfileBag.ValueUpdate.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA43E0);
  uint64_t v19 = *(void *)(v3 - 8);
  uint64_t v20 = v3;
  MEMORY[0x270FA5388](v3);
  int64_t v18 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA43E8);
  uint64_t v21 = *(void *)(v5 - 8);
  uint64_t v22 = v5;
  MEMORY[0x270FA5388](v5);
  char v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA43F0);
  uint64_t v8 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v11 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251E35BCC();
  sub_251F36DA0();
  if (v11 < 0)
  {
    char v25 = 1;
    sub_251E35C20();
    uint64_t v14 = v18;
    uint64_t v12 = v23;
    sub_251F36900();
    uint64_t v15 = v20;
    sub_251F369E0();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v15);
  }
  else
  {
    char v24 = 0;
    sub_251E35C74();
    uint64_t v12 = v23;
    sub_251F36900();
    uint64_t v13 = v22;
    sub_251F369E0();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v13);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v12);
}

uint64_t StaticProfileBag.ValueUpdate.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t StaticProfileBag.ValueUpdate.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  id v28 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4410);
  uint64_t v30 = *(void *)(v3 - 8);
  uint64_t v31 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4418);
  uint64_t v29 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4420);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  uint64_t v32 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_251E35BCC();
  uint64_t v14 = v33;
  sub_251F36D90();
  if (v14) {
    goto LABEL_7;
  }
  uint64_t v15 = v31;
  uint64_t v33 = v10;
  uint64_t v16 = sub_251F368E0();
  if (*(void *)(v16 + 16) != 1)
  {
    uint64_t v23 = sub_251F36490();
    swift_allocError();
    char v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D440);
    *char v25 = &type metadata for StaticProfileBag.ValueUpdate;
    sub_251F36780();
    sub_251F36480();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v23 - 8) + 104))(v25, *MEMORY[0x263F8DCB0], v23);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v12, v9);
LABEL_7:
    uint64_t v21 = (uint64_t)v32;
    return __swift_destroy_boxed_opaque_existential_0(v21);
  }
  uint64_t v17 = v12;
  if (*(unsigned char *)(v16 + 32))
  {
    char v35 = 1;
    sub_251E35C20();
    int64_t v18 = v5;
    uint64_t v19 = v17;
    sub_251F36770();
    char v20 = sub_251F36840();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v18, v15);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v19, v9);
    uint64_t v21 = (uint64_t)v32;
    char v22 = v20 & 1 | 0x80;
  }
  else
  {
    char v34 = 0;
    sub_251E35C74();
    sub_251F36770();
    char v27 = sub_251F36840();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v8, v6);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v12, v9);
    uint64_t v21 = (uint64_t)v32;
    char v22 = v27 & 1;
  }
  *id v28 = v22;
  return __swift_destroy_boxed_opaque_existential_0(v21);
}

uint64_t sub_251E34D70(unsigned char *a1, unsigned __int8 *a2)
{
  int v2 = *a2;
  if ((char)*a1 < 0)
  {
    if ((v2 & 0x80) == 0) {
      return 0;
    }
  }
  else if ((v2 & 0x80) != 0)
  {
    return 0;
  }
  return (((*a1 & 1) == 0) ^ v2) & 1;
}

uint64_t sub_251E34DB0()
{
  return sub_251F36CC0();
}

uint64_t sub_251E34DF4()
{
  return sub_251F36D00();
}

uint64_t sub_251E34E48@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return StaticProfileBag.ValueUpdate.init(from:)(a1, a2);
}

uint64_t sub_251E34E60(void *a1)
{
  return StaticProfileBag.ValueUpdate.encode(to:)(a1);
}

uint64_t StaticProfileBag.Kind.hash(into:)()
{
  return sub_251F36CB0();
}

uint64_t sub_251E34EA4(uint64_t a1)
{
  unint64_t v2 = sub_251E35CC8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E34EE0(uint64_t a1)
{
  unint64_t v2 = sub_251E35CC8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251E34F1C(uint64_t a1)
{
  unint64_t v2 = sub_251E35D70();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E34F58(uint64_t a1)
{
  unint64_t v2 = sub_251E35D70();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251E34F94(uint64_t a1)
{
  unint64_t v2 = sub_251E35D1C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E34FD0(uint64_t a1)
{
  unint64_t v2 = sub_251E35D1C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticProfileBag.Kind.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4428);
  uint64_t v19 = *(void *)(v3 - 8);
  uint64_t v20 = v3;
  MEMORY[0x270FA5388](v3);
  int64_t v18 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4430);
  uint64_t v16 = *(void *)(v5 - 8);
  uint64_t v17 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4438);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251E35CC8();
  sub_251F36DA0();
  uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v9 + 8);
  if (v12)
  {
    char v22 = 1;
    sub_251E35D1C();
    uint64_t v14 = v18;
    sub_251F36900();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v20);
  }
  else
  {
    char v21 = 0;
    sub_251E35D70();
    sub_251F36900();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v17);
  }
  return (*v13)(v11, v8);
}

uint64_t StaticProfileBag.Kind.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t StaticProfileBag.Kind.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v31 = a2;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4458);
  uint64_t v30 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4460);
  uint64_t v28 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4468);
  uint64_t v29 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251E35CC8();
  uint64_t v11 = v32;
  sub_251F36D90();
  if (v11) {
    goto LABEL_6;
  }
  uint64_t v32 = a1;
  uint64_t v13 = v30;
  char v12 = v31;
  uint64_t v14 = v10;
  uint64_t v15 = sub_251F368E0();
  if (*(void *)(v15 + 16) != 1)
  {
    uint64_t v20 = sub_251F36490();
    swift_allocError();
    char v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D440);
    *char v22 = &type metadata for StaticProfileBag.Kind;
    sub_251F36780();
    sub_251F36480();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v20 - 8) + 104))(v22, *MEMORY[0x263F8DCB0], v20);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v8);
    a1 = v32;
LABEL_6:
    uint64_t v23 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_0(v23);
  }
  v26[1] = v15;
  char v16 = *(unsigned char *)(v15 + 32);
  if (v16)
  {
    char v17 = *(unsigned char *)(v15 + 32);
    char v34 = 1;
    sub_251E35D1C();
    int64_t v18 = v14;
    sub_251F36770();
    uint64_t v19 = v29;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v4, v27);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v18, v8);
    char v16 = v17;
  }
  else
  {
    char v33 = 0;
    sub_251E35D70();
    sub_251F36770();
    uint64_t v25 = v29;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v7, v5);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v8);
  }
  *char v12 = v16;
  uint64_t v23 = (uint64_t)v32;
  return __swift_destroy_boxed_opaque_existential_0(v23);
}

uint64_t sub_251E35750@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return StaticProfileBag.Kind.init(from:)(a1, a2);
}

uint64_t sub_251E35768(void *a1)
{
  return StaticProfileBag.Kind.encode(to:)(a1);
}

unint64_t sub_251E35780()
{
  unint64_t result = qword_269BA4360;
  if (!qword_269BA4360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4360);
  }
  return result;
}

unint64_t sub_251E357D4()
{
  unint64_t result = qword_269BA4370;
  if (!qword_269BA4370)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269BA4368);
    sub_251A1A8EC(&qword_26B21E348);
    sub_251E35AC4(&qword_269BA4378, (void (*)(uint64_t))type metadata accessor for StaticLightProfile);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4370);
  }
  return result;
}

unint64_t sub_251E35890()
{
  unint64_t result = qword_269BA4388;
  if (!qword_269BA4388)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269BA4380);
    sub_251A1A8EC(&qword_26B21E348);
    sub_251E35AC4(&qword_269BA4390, (void (*)(uint64_t))type metadata accessor for StaticTelevisionProfile);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4388);
  }
  return result;
}

unint64_t sub_251E3594C()
{
  unint64_t result = qword_269BA43A0;
  if (!qword_269BA43A0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269BA4368);
    sub_251A1A8EC(&qword_269B9CC80);
    sub_251E35AC4(&qword_269BA43A8, (void (*)(uint64_t))type metadata accessor for StaticLightProfile);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA43A0);
  }
  return result;
}

unint64_t sub_251E35A08()
{
  unint64_t result = qword_269BA43B0;
  if (!qword_269BA43B0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269BA4380);
    sub_251A1A8EC(&qword_269B9CC80);
    sub_251E35AC4(&qword_269BA43B8, (void (*)(uint64_t))type metadata accessor for StaticTelevisionProfile);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA43B0);
  }
  return result;
}

uint64_t sub_251E35AC4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_251E35B0C()
{
  unint64_t result = qword_269BA43D0;
  if (!qword_269BA43D0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269BA43C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA43D0);
  }
  return result;
}

uint64_t sub_251E35B68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticTelevisionProfile();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_251E35BCC()
{
  unint64_t result = qword_269BA43F8;
  if (!qword_269BA43F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA43F8);
  }
  return result;
}

unint64_t sub_251E35C20()
{
  unint64_t result = qword_269BA4400;
  if (!qword_269BA4400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4400);
  }
  return result;
}

unint64_t sub_251E35C74()
{
  unint64_t result = qword_269BA4408;
  if (!qword_269BA4408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4408);
  }
  return result;
}

unint64_t sub_251E35CC8()
{
  unint64_t result = qword_269BA4440;
  if (!qword_269BA4440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4440);
  }
  return result;
}

unint64_t sub_251E35D1C()
{
  unint64_t result = qword_269BA4448;
  if (!qword_269BA4448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4448);
  }
  return result;
}

unint64_t sub_251E35D70()
{
  unint64_t result = qword_269BA4450;
  if (!qword_269BA4450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4450);
  }
  return result;
}

unint64_t sub_251E35DC8()
{
  unint64_t result = qword_269BA4470;
  if (!qword_269BA4470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4470);
  }
  return result;
}

unint64_t sub_251E35E20()
{
  unint64_t result = qword_269BA4478;
  if (!qword_269BA4478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4478);
  }
  return result;
}

unint64_t sub_251E35E78()
{
  unint64_t result = qword_269BA4480;
  if (!qword_269BA4480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4480);
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticProfileBag()
{
  return &type metadata for StaticProfileBag;
}

uint64_t getEnumTagSinglePayload for StaticProfileBag.ValueUpdate(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0x7F) {
    goto LABEL_17;
  }
  if (a2 + 129 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 129) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 129;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 129;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 129;
    }
  }
LABEL_17:
  unsigned int v6 = (*a1 & 0x7E | (*a1 >> 7)) ^ 0x7F;
  if (v6 >= 0x7E) {
    unsigned int v6 = -1;
  }
  return v6 + 1;
}

unsigned char *storeEnumTagSinglePayload for StaticProfileBag.ValueUpdate(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 129 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 129) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x7F) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x7E)
  {
    unsigned int v6 = ((a2 - 127) >> 8) + 1;
    *unint64_t result = a2 - 127;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251E36050);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = 2 * (((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6));
        break;
    }
  }
  return result;
}

unsigned char *sub_251E36078(unsigned char *result, char a2)
{
  *unint64_t result = *result & 1 | (a2 << 7);
  return result;
}

ValueMetadata *type metadata accessor for StaticProfileBag.ValueUpdate()
{
  return &type metadata for StaticProfileBag.ValueUpdate;
}

ValueMetadata *type metadata accessor for StaticProfileBag.Kind()
{
  return &type metadata for StaticProfileBag.Kind;
}

uint64_t initializeBufferWithCopyOfBuffer for ProfileError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ProfileError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ProfileError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ProfileError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ProfileError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_251E361F4(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ProfileError()
{
  return &type metadata for ProfileError;
}

ValueMetadata *type metadata accessor for StaticProfileBag.Kind.CodingKeys()
{
  return &type metadata for StaticProfileBag.Kind.CodingKeys;
}

ValueMetadata *type metadata accessor for StaticProfileBag.Kind.LightProfileCodingKeys()
{
  return &type metadata for StaticProfileBag.Kind.LightProfileCodingKeys;
}

ValueMetadata *type metadata accessor for StaticProfileBag.Kind.MediaProfileCodingKeys()
{
  return &type metadata for StaticProfileBag.Kind.MediaProfileCodingKeys;
}

ValueMetadata *type metadata accessor for StaticProfileBag.ValueUpdate.CodingKeys()
{
  return &type metadata for StaticProfileBag.ValueUpdate.CodingKeys;
}

ValueMetadata *type metadata accessor for StaticProfileBag.ValueUpdate.LightProfileCodingKeys()
{
  return &type metadata for StaticProfileBag.ValueUpdate.LightProfileCodingKeys;
}

unsigned char *_s13HomeDataModel16StaticProfileBagV11ValueUpdateO22LightProfileCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x251E36300);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticProfileBag.ValueUpdate.MediaProfileCodingKeys()
{
  return &type metadata for StaticProfileBag.ValueUpdate.MediaProfileCodingKeys;
}

unsigned char *_s13HomeDataModel16StaticProfileBagV4KindOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251E36404);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticProfileBag.CodingKeys()
{
  return &type metadata for StaticProfileBag.CodingKeys;
}

unint64_t sub_251E36440()
{
  unint64_t result = qword_269BA4488;
  if (!qword_269BA4488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4488);
  }
  return result;
}

unint64_t sub_251E36498()
{
  unint64_t result = qword_269BA4490;
  if (!qword_269BA4490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4490);
  }
  return result;
}

unint64_t sub_251E364F0()
{
  unint64_t result = qword_269BA4498;
  if (!qword_269BA4498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4498);
  }
  return result;
}

unint64_t sub_251E36548()
{
  unint64_t result = qword_269BA44A0;
  if (!qword_269BA44A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA44A0);
  }
  return result;
}

unint64_t sub_251E365A0()
{
  unint64_t result = qword_269BA44A8;
  if (!qword_269BA44A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA44A8);
  }
  return result;
}

unint64_t sub_251E365F8()
{
  unint64_t result = qword_269BA44B0;
  if (!qword_269BA44B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA44B0);
  }
  return result;
}

unint64_t sub_251E36650()
{
  unint64_t result = qword_269BA44B8;
  if (!qword_269BA44B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA44B8);
  }
  return result;
}

unint64_t sub_251E366A8()
{
  unint64_t result = qword_269BA44C0;
  if (!qword_269BA44C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA44C0);
  }
  return result;
}

unint64_t sub_251E36700()
{
  unint64_t result = qword_269BA44C8;
  if (!qword_269BA44C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA44C8);
  }
  return result;
}

unint64_t sub_251E36758()
{
  unint64_t result = qword_269BA44D0;
  if (!qword_269BA44D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA44D0);
  }
  return result;
}

unint64_t sub_251E367B0()
{
  unint64_t result = qword_269BA44D8;
  if (!qword_269BA44D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA44D8);
  }
  return result;
}

unint64_t sub_251E36808()
{
  unint64_t result = qword_269BA44E0;
  if (!qword_269BA44E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA44E0);
  }
  return result;
}

unint64_t sub_251E36860()
{
  unint64_t result = qword_269BA44E8;
  if (!qword_269BA44E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA44E8);
  }
  return result;
}

unint64_t sub_251E368B8()
{
  unint64_t result = qword_269BA44F0;
  if (!qword_269BA44F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA44F0);
  }
  return result;
}

unint64_t sub_251E36910()
{
  unint64_t result = qword_269BA44F8;
  if (!qword_269BA44F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA44F8);
  }
  return result;
}

unint64_t sub_251E36968()
{
  unint64_t result = qword_269BA4500;
  if (!qword_269BA4500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4500);
  }
  return result;
}

unint64_t sub_251E369C0()
{
  unint64_t result = qword_269BA4508;
  if (!qword_269BA4508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4508);
  }
  return result;
}

unint64_t sub_251E36A18()
{
  unint64_t result = qword_269BA4510;
  if (!qword_269BA4510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4510);
  }
  return result;
}

unint64_t sub_251E36A70()
{
  unint64_t result = qword_269BA4518;
  if (!qword_269BA4518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4518);
  }
  return result;
}

void *sub_251E36AC4(void *a1, unint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5 = v4;
  id v41 = a4;
  uint64_t v50 = a3;
  uint64_t v44 = type metadata accessor for StaticTelevisionProfile();
  uint64_t v8 = MEMORY[0x270FA5388](v44);
  unint64_t v40 = (unint64_t)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v43 = (char *)&v39 - v10;
  if (a2 >> 62)
  {
LABEL_39:
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_251F366C0();
    if (v11) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v11 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v11)
    {
LABEL_3:
      v46 = a1;
      unint64_t v47 = a2;
      uint64_t v39 = v5;
      uint64_t v12 = 0;
      uint64_t v48 = v11;
      unint64_t v49 = a2 & 0xC000000000000001;
      unint64_t v45 = a2 + 32;
      while (1)
      {
        if (v49) {
          id v13 = (id)MEMORY[0x2533AB3A0](v12, v47);
        }
        else {
          id v13 = *(id *)(v45 + 8 * v12);
        }
        uint64_t v14 = v13;
        if (__OFADD__(v12++, 1))
        {
LABEL_38:
          __break(1u);
          goto LABEL_39;
        }
        a2 = (unint64_t)objc_msgSend(v13, sel_services);
        a1 = (void *)sub_251A1A568(0, (unint64_t *)&qword_26B21F180);
        unint64_t v16 = sub_251F35AC0();

        if (v16 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v17 = sub_251F366C0();
          if (!v17) {
            goto LABEL_4;
          }
        }
        else
        {
          uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (!v17) {
            goto LABEL_4;
          }
        }
        uint64_t v5 = v16 & 0xC000000000000001;
        if ((v16 & 0xC000000000000001) != 0) {
          id v18 = (id)MEMORY[0x2533AB3A0](0, v16);
        }
        else {
          id v18 = *(id *)(v16 + 32);
        }
        a2 = (unint64_t)v18;
        char v19 = sub_251F36120();

        if (v19)
        {
LABEL_27:
          swift_bridgeObjectRelease_n();
          id v23 = objc_msgSend(v14, sel_uniqueIdentifier);
          uint64_t v24 = sub_251F34DA0();
          id v42 = &v39;
          uint64_t v25 = *(void *)(v24 - 8);
          MEMORY[0x270FA5388](v24);
          uint64_t v27 = (char *)&v39 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
          sub_251F34D80();

          id v28 = v14;
          id v29 = v41;
          id v30 = objc_msgSend(v28, sel_uniqueIdentifier);
          sub_251F34D80();

          id v31 = objc_msgSend(v29, sel_uniqueIdentifier);
          sub_251F34D80();

          id v32 = objc_msgSend(v28, sel_mediaSourceDisplayOrder);
          if (v32
            && (char v33 = v32,
                sub_251A1A568(0, (unint64_t *)&qword_269BA04A0),
                unint64_t v34 = sub_251F35AC0(),
                v33,
                uint64_t v35 = sub_251C633B4(v34),
                swift_bridgeObjectRelease(),
                v35))
          {
          }
          else
          {
            swift_bridgeObjectRelease();

            uint64_t v35 = MEMORY[0x263F8EE78];
          }
          uint64_t v36 = (uint64_t)v43;
          *(void *)&v43[*(int *)(v44 + 20)] = v35;
          a2 = v40;
          sub_251E35B68(v36, v40);
          uint64_t v5 = (uint64_t)v46;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v51 = v5;
          a1 = &v51;
          sub_251A10894(a2, (uint64_t)v27, isUniquelyReferenced_nonNull_native);
          v46 = (void *)v51;
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);

          goto LABEL_5;
        }
        if (v17 != 1)
        {
          if (v5)
          {
            a2 = 1;
            while (1)
            {
              MEMORY[0x2533AB3A0](a2, v16);
              unint64_t v20 = a2 + 1;
              if (__OFADD__(a2, 1)) {
                break;
              }
              uint64_t v5 = sub_251F36120();
              swift_unknownObjectRelease();
              if (v5) {
                goto LABEL_27;
              }
              ++a2;
              if (v20 == v17) {
                goto LABEL_4;
              }
            }
            __break(1u);
          }
          else
          {
            uint64_t v5 = 5;
            while (1)
            {
              uint64_t v21 = v5 - 3;
              if (__OFADD__(v5 - 4, 1)) {
                break;
              }
              a2 = (unint64_t)*(id *)(v16 + 8 * v5);
              char v22 = sub_251F36120();

              if (v22) {
                goto LABEL_27;
              }
              ++v5;
              if (v21 == v17) {
                goto LABEL_4;
              }
            }
          }
          __break(1u);
          goto LABEL_38;
        }
LABEL_4:
        swift_bridgeObjectRelease_n();

LABEL_5:
        if (v12 == v48)
        {
          swift_bridgeObjectRelease();
          return v46;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_251E36FE0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD00000000000001DLL && a2 == 0x8000000251F72380 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x8000000251F723A0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_251E370CC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000016 && a2 == 0x8000000251F723D0)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_251F36B10();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_251E37154(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6F7250746867696CLL && a2 == 0xEC000000656C6966;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F7250616964656DLL && a2 == 0xEC000000656C6966)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_251E37274(uint64_t a1, void **a2)
{
  return sub_251E33730(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void **)(v2 + 48), *(void **)(v2 + 56));
}

uint64_t sub_251E37298(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_251E372D8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_251E37338(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t ActionEndpoint.init(staticEndpoint:overridingAttributes:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = sub_251F34DA0();
  char v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  v6(a3, a1, v5);
  uint64_t v7 = (int *)type metadata accessor for StaticEndpoint();
  uint64_t v8 = a1 + v7[11];
  uint64_t v9 = (int *)type metadata accessor for ActionEndpoint();
  v6(a3 + v9[5], v8, v5);
  *(void *)(a3 + v9[6]) = *(void *)(a1 + v7[12]);
  uint64_t v10 = (uint64_t *)(a1 + v7[6]);
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  id v13 = (void *)(a3 + v9[7]);
  *id v13 = v11;
  v13[1] = v12;
  *(unsigned char *)(a3 + v9[8]) = 1;
  uint64_t v14 = a1 + v7[5];
  uint64_t v15 = *(void *)v14;
  LOWORD(v14) = *(_WORD *)(v14 + 8);
  uint64_t v16 = a3 + v9[9];
  *(void *)uint64_t v16 = v15;
  *(_WORD *)(v16 + 8) = v14;
  sub_251E3E644(a1 + v7[13], a3 + v9[10], (uint64_t (*)(void))type metadata accessor for MatterTileMetadata);
  *(void *)(a3 + v9[12]) = *(void *)(a1 + v7[8]);
  uint64_t v17 = v9[13];
  *(void *)(a3 + v17) = *(void *)(a1 + v7[9]);
  *(void *)(a3 + v9[14]) = *(void *)(a1 + v7[10]);
  uint64_t v53 = a1;
  *(void *)(a3 + v9[11]) = *(void *)(a1 + v7[7]);
  uint64_t v18 = sub_251A199A4(MEMORY[0x263F8EE78]);
  uint64_t v58 = a3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_251AA8D24(v18, (void (*)(uint64_t *, char *))sub_251E3CAA8, (uint64_t)v57, a2);
  swift_bridgeObjectRelease();
  uint64_t v56 = v19 + 64;
  uint64_t v20 = 1 << *(unsigned char *)(v19 + 32);
  uint64_t v21 = -1;
  if (v20 < 64) {
    uint64_t v21 = ~(-1 << v20);
  }
  unint64_t v22 = v21 & *(void *)(v19 + 64);
  int64_t v23 = (unint64_t)(v20 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v24 = 0;
  uint64_t v54 = v19;
  while (1)
  {
    if (v22)
    {
      unint64_t v27 = __clz(__rbit64(v22));
      v22 &= v22 - 1;
      unint64_t v28 = v27 | (v24 << 6);
      goto LABEL_23;
    }
    BOOL v29 = __OFADD__(v24++, 1);
    if (v29)
    {
      __break(1u);
LABEL_46:
      __break(1u);
LABEL_47:
      __break(1u);
      goto LABEL_48;
    }
    if (v24 >= v23) {
      goto LABEL_44;
    }
    unint64_t v30 = *(void *)(v56 + 8 * v24);
    if (!v30) {
      break;
    }
LABEL_22:
    unint64_t v22 = (v30 - 1) & v30;
    unint64_t v28 = __clz(__rbit64(v30)) + (v24 << 6);
LABEL_23:
    char v32 = *(unsigned char *)(*(void *)(v19 + 48) + v28);
    if (*(void *)(v19 + 16) && (unint64_t v33 = sub_2519FE614(v32), (v34 & 1) != 0))
    {
      sub_251A1A930(*(void *)(v19 + 56) + (v33 << 8), (uint64_t)v61);
      sub_251A4EBF0((uint64_t)v61, sub_251A1AA24);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v60 = *(void **)(a3 + v17);
      uint64_t v36 = v60;
      *(void *)(a3 + v17) = 0x8000000000000000;
      unint64_t v38 = sub_2519FE614(v32);
      uint64_t v39 = v36[2];
      BOOL v40 = (v37 & 1) == 0;
      uint64_t v41 = v39 + v40;
      if (__OFADD__(v39, v40)) {
        goto LABEL_46;
      }
      char v42 = v37;
      if (v36[3] >= v41)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          if (v37) {
            goto LABEL_4;
          }
        }
        else
        {
          sub_251A12A30();
          if (v42) {
            goto LABEL_4;
          }
        }
      }
      else
      {
        sub_251A02714(v41, isUniquelyReferenced_nonNull_native);
        unint64_t v43 = sub_2519FE614(v32);
        if ((v42 & 1) != (v44 & 1)) {
          goto LABEL_49;
        }
        unint64_t v38 = v43;
        if (v42)
        {
LABEL_4:
          uint64_t v25 = v60;
          uint64_t v26 = v60[7] + (v38 << 8);
          sub_251A1A930(v26, (uint64_t)v59);
          sub_251A4EBF0((uint64_t)v59, sub_251A4DC54);
          sub_251A1A930((uint64_t)v61, v26);
          goto LABEL_5;
        }
      }
      uint64_t v25 = v60;
      v60[(v38 >> 6) + 8] |= 1 << v38;
      *(unsigned char *)(v25[6] + v38) = v32;
      sub_251A1A930((uint64_t)v61, v25[7] + (v38 << 8));
      uint64_t v50 = v25[2];
      BOOL v29 = __OFADD__(v50, 1);
      uint64_t v51 = v50 + 1;
      if (v29) {
        goto LABEL_47;
      }
      v25[2] = v51;
LABEL_5:
      *(void *)(a3 + v17) = v25;
      swift_bridgeObjectRelease();
      uint64_t v19 = v54;
    }
    else
    {
      unint64_t v45 = sub_2519FE614(v32);
      if (v46)
      {
        unint64_t v47 = v45;
        int v48 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v49 = *(void *)(a3 + v17);
        v59[0] = v49;
        *(void *)(a3 + v17) = 0x8000000000000000;
        if (!v48)
        {
          sub_251A12A30();
          uint64_t v49 = v59[0];
        }
        sub_251A1A930(*(void *)(v49 + 56) + (v47 << 8), (uint64_t)v61);
        sub_251E3A330(v47, v49);
        *(void *)(a3 + v17) = v49;
        swift_bridgeObjectRelease();
        sub_251A4EBF0((uint64_t)v61, sub_251A4DC54);
      }
    }
  }
  int64_t v31 = v24 + 1;
  if (v24 + 1 >= v23) {
    goto LABEL_44;
  }
  unint64_t v30 = *(void *)(v56 + 8 * v31);
  if (v30) {
    goto LABEL_21;
  }
  int64_t v31 = v24 + 2;
  if (v24 + 2 >= v23) {
    goto LABEL_44;
  }
  unint64_t v30 = *(void *)(v56 + 8 * v31);
  if (v30) {
    goto LABEL_21;
  }
  int64_t v31 = v24 + 3;
  if (v24 + 3 >= v23) {
    goto LABEL_44;
  }
  unint64_t v30 = *(void *)(v56 + 8 * v31);
  if (v30) {
    goto LABEL_21;
  }
  int64_t v31 = v24 + 4;
  if (v24 + 4 >= v23) {
    goto LABEL_44;
  }
  unint64_t v30 = *(void *)(v56 + 8 * v31);
  if (v30) {
    goto LABEL_21;
  }
  int64_t v31 = v24 + 5;
  if (v24 + 5 >= v23)
  {
LABEL_44:
    swift_bridgeObjectRelease();
    sub_251E3E6AC(v53, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
    return swift_release();
  }
  unint64_t v30 = *(void *)(v56 + 8 * v31);
  if (v30)
  {
LABEL_21:
    int64_t v24 = v31;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v24 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      break;
    }
    if (v24 >= v23) {
      goto LABEL_44;
    }
    unint64_t v30 = *(void *)(v56 + 8 * v24);
    ++v31;
    if (v30) {
      goto LABEL_22;
    }
  }
LABEL_48:
  __break(1u);
LABEL_49:
  uint64_t result = sub_251F36BA0();
  __break(1u);
  return result;
}

uint64_t ActionEndpoint.isActivated.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ActionEndpoint() + 48));
  uint64_t result = sub_251A53EB8(v1);
  if ((v4 & 1) == 0)
  {
    if (*(_DWORD *)(v1 + 36) == v3)
    {
      if (result != 1 << *(unsigned char *)(v1 + 32))
      {
        sub_251A54058(result, v3, 0, v1, &v8);
        BOOL v5 = 0;
        if (v8 != 23) {
          return v5;
        }
        sub_251E37E00((uint64_t)&v8);
        if (*((void *)&v9 + 1))
        {
          sub_251A1A444(&v8, (uint64_t)v23);
          sub_251A1A4EC((uint64_t)v23, (uint64_t)v22);
          __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4520);
          if (swift_dynamicCast())
          {
            v6[12] = v20;
            v7[0] = v21[0];
            *(_OWORD *)((char *)v7 + 12) = *(_OWORD *)((char *)v21 + 12);
            v6[8] = v16;
            v6[9] = v17;
            v6[10] = v18;
            v6[11] = v19;
            v6[4] = v12;
            v6[5] = v13;
            v6[6] = v14;
            v6[7] = v15;
            v6[0] = v8;
            v6[1] = v9;
            v6[2] = v10;
            v6[3] = v11;
            if (BYTE11(v8) <= 6u && ((1 << SBYTE11(v8)) & 0x6E) != 0)
            {
              sub_251A81D30((uint64_t)v6);
              BOOL v5 = 0;
            }
            else
            {
              BOOL v5 = StaticRVCClusterGroup.RunMode.isCleaning.getter();
              sub_251A81D30((uint64_t)v6);
            }
            __swift_destroy_boxed_opaque_existential_0((uint64_t)v23);
            return v5;
          }
          __swift_destroy_boxed_opaque_existential_0((uint64_t)v23);
        }
        else
        {
          sub_251DF928C((uint64_t)&v8);
        }
      }
      return 0;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t ActionEndpoint.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_251F34DA0();
  char v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t ActionEndpoint.homeID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ActionEndpoint() + 20);
  uint64_t v4 = sub_251F34DA0();
  BOOL v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t ActionEndpoint.name.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ActionEndpoint() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ActionEndpoint.isReachable.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ActionEndpoint() + 32));
}

uint64_t ActionEndpoint.endpointPath.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = type metadata accessor for ActionEndpoint();
  uint64_t v4 = (uint64_t *)(v1 + *(int *)(result + 36));
  uint64_t v5 = *v4;
  LOWORD(v4) = *((_WORD *)v4 + 4);
  *(void *)a1 = v5;
  *(_WORD *)(a1 + 8) = (_WORD)v4;
  return result;
}

uint64_t ActionEndpoint.metadata.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ActionEndpoint();
  return sub_251E3E644(v1 + *(int *)(v3 + 40), a1, (uint64_t (*)(void))type metadata accessor for MatterTileMetadata);
}

uint64_t ActionEndpoint.deviceState.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for ActionEndpoint() + 44));
}

uint64_t ActionEndpoint.deviceTypes.getter()
{
  type metadata accessor for ActionEndpoint();
  return swift_bridgeObjectRetain();
}

uint64_t ActionEndpoint.clusters.getter()
{
  type metadata accessor for ActionEndpoint();
  return swift_bridgeObjectRetain();
}

uint64_t ActionEndpoint.clusters.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for ActionEndpoint() + 52);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*ActionEndpoint.clusters.modify())(void)
{
  return nullsub_1;
}

uint64_t ActionEndpoint.linkedEndpointIDs.getter()
{
  type metadata accessor for ActionEndpoint();
  return swift_bridgeObjectRetain();
}

uint64_t ActionEndpoint.canToggle.getter()
{
  return 0;
}

uint64_t sub_251E37E00@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ActionEndpoint();
  uint64_t v4 = *(void *)(v1 + *(int *)(v3 + 48));
  uint64_t result = sub_251A53EB8(v4);
  if (v7) {
    goto LABEL_12;
  }
  if (*(_DWORD *)(v4 + 36) != v6)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  if (result != 1 << *(unsigned char *)(v4 + 32)
    && (uint64_t result = sub_251A54058(result, v6, 0, v4, v26), v26[0] == 23)
    && (uint64_t v8 = *(void *)(v1 + *(int *)(v3 + 52)), *(void *)(v8 + 16))
    && (uint64_t result = sub_2519FE614(23), (v9 & 1) != 0)
    && (sub_251A1A930(*(void *)(v8 + 56) + (result << 8), (uint64_t)v25),
        sub_251A1A930((uint64_t)v25, (uint64_t)v26),
        uint64_t result = sub_251A4DB2C((uint64_t)v26),
        result == 2))
  {
    long long v10 = (_OWORD *)sub_251A4E128((uint64_t)v26);
    *(void *)(a1 + 24) = &type metadata for StaticRVCClusterGroup;
    *(void *)(a1 + 32) = &protocol witness table for StaticRVCClusterGroup;
    long long v11 = (_OWORD *)swift_allocObject();
    *(void *)a1 = v11;
    long long v13 = v10[1];
    long long v12 = v10[2];
    v11[1] = *v10;
    v11[2] = v13;
    v11[3] = v12;
    long long v14 = v10[6];
    long long v16 = v10[3];
    long long v15 = v10[4];
    v11[6] = v10[5];
    v11[7] = v14;
    v11[4] = v16;
    v11[5] = v15;
    long long v17 = v10[10];
    long long v19 = v10[7];
    long long v18 = v10[8];
    v11[10] = v10[9];
    v11[11] = v17;
    v11[8] = v19;
    v11[9] = v18;
    long long v21 = v10[12];
    long long v20 = v10[13];
    long long v22 = v10[11];
    *(_OWORD *)((char *)v11 + 236) = *(_OWORD *)((char *)v10 + 220);
    v11[13] = v21;
    v11[14] = v20;
    v11[12] = v22;
    sub_251A1A930((uint64_t)v25, (uint64_t)v24);
    uint64_t v23 = sub_251A4E128((uint64_t)v24);
    return sub_251A4DB38(v23);
  }
  else
  {
    *(void *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

uint64_t ActionEndpoint.primaryDeviceType.getter@<X0>(char *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + *(int *)(type metadata accessor for ActionEndpoint() + 48));
  return sub_251ABD888(v3, a1);
}

uint64_t ActionEndpoint.init(staticEndpoint:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_251F34DA0();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  v5(a2, a1, v4);
  int v6 = (int *)type metadata accessor for StaticEndpoint();
  uint64_t v7 = a1 + v6[11];
  uint64_t v8 = (int *)type metadata accessor for ActionEndpoint();
  v5(a2 + v8[5], v7, v4);
  *(void *)(a2 + v8[6]) = *(void *)(a1 + v6[12]);
  char v9 = (uint64_t *)(a1 + v6[6]);
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];
  long long v12 = (void *)(a2 + v8[7]);
  *long long v12 = v10;
  v12[1] = v11;
  *(unsigned char *)(a2 + v8[8]) = 1;
  uint64_t v13 = a1 + v6[5];
  uint64_t v14 = *(void *)v13;
  LOWORD(v13) = *(_WORD *)(v13 + 8);
  uint64_t v15 = a2 + v8[9];
  *(void *)uint64_t v15 = v14;
  *(_WORD *)(v15 + 8) = v13;
  sub_251E3E644(a1 + v6[13], a2 + v8[10], (uint64_t (*)(void))type metadata accessor for MatterTileMetadata);
  *(void *)(a2 + v8[12]) = *(void *)(a1 + v6[8]);
  *(void *)(a2 + v8[13]) = *(void *)(a1 + v6[9]);
  *(void *)(a2 + v8[14]) = *(void *)(a1 + v6[10]);
  uint64_t v16 = *(void *)(a1 + v6[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = sub_251E3E6AC(a1, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
  *(void *)(a2 + v8[11]) = v16;
  return result;
}

uint64_t sub_251E38190(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = (void *)result;
  int64_t v4 = 0;
  char v5 = *(unsigned char *)a2;
  uint64_t v28 = *(void *)(a2 + 8);
  if (((*(unsigned char *)a2 - 23) & 0xFC) == 0) {
    char v5 = 23;
  }
  uint64_t v6 = *(void *)result;
  uint64_t v7 = *(void *)result;
  uint64_t v8 = 1 << *(unsigned char *)(*(void *)result + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  uint64_t v11 = *(void *)(v7 + 64);
  uint64_t v10 = v7 + 64;
  unint64_t v12 = v9 & v11;
  int64_t v13 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v14 = v5;
  while (v12)
  {
    unint64_t v15 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    unint64_t v16 = v15 | (v4 << 6);
LABEL_7:
    uint64_t v17 = *(char *)(*(void *)(v6 + 48) + v16);
    uint64_t result = sub_251A1A930(*(void *)(v6 + 56) + (v16 << 8), (uint64_t)v36);
    if (dword_251F58F00[v17] == dword_251F58F00[v14])
    {
      swift_bridgeObjectRetain();
      sub_251A4EBF0((uint64_t)v36, sub_251A1AA24);
      swift_release();
      sub_251A1A930((uint64_t)v36, (uint64_t)v35);
      if (sub_251A4DB2C((uint64_t)v35) == 2)
      {
        long long v21 = (long long *)sub_251A4E128((uint64_t)v35);
        long long v48 = v21[11];
        long long v49 = v21[12];
        v50[0] = v21[13];
        *(_OWORD *)((char *)v50 + 12) = *(long long *)((char *)v21 + 220);
        long long v44 = v21[7];
        long long v45 = v21[8];
        long long v46 = v21[9];
        long long v47 = v21[10];
        long long v40 = v21[3];
        long long v41 = v21[4];
        long long v42 = v21[5];
        long long v43 = v21[6];
        long long v37 = *v21;
        long long v38 = v21[1];
        long long v39 = v21[2];
        sub_251E57FF4(v28, (uint64_t)v30);
        sub_251A4EBF0((uint64_t)v36, sub_251A4DC54);
        long long v49 = v30[12];
        v50[0] = v31[0];
        *(_OWORD *)((char *)v50 + 12) = *(_OWORD *)((char *)v31 + 12);
        long long v45 = v30[8];
        long long v46 = v30[9];
        long long v48 = v30[11];
        long long v47 = v30[10];
        long long v41 = v30[4];
        long long v42 = v30[5];
        long long v44 = v30[7];
        long long v43 = v30[6];
        long long v37 = v30[0];
        long long v38 = v30[1];
        long long v40 = v30[3];
        long long v39 = v30[2];
        sub_251BE4D7C((uint64_t)&v37);
        long long v22 = &v37;
      }
      else
      {
        long long v22 = (long long *)v36;
      }
      goto LABEL_34;
    }
  }
  int64_t v18 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_38;
  }
  if (v18 >= v13) {
    goto LABEL_29;
  }
  unint64_t v19 = *(void *)(v10 + 8 * v18);
  ++v4;
  if (v19) {
    goto LABEL_26;
  }
  int64_t v4 = v18 + 1;
  if (v18 + 1 >= v13) {
    goto LABEL_29;
  }
  unint64_t v19 = *(void *)(v10 + 8 * v4);
  if (v19) {
    goto LABEL_26;
  }
  int64_t v4 = v18 + 2;
  if (v18 + 2 >= v13) {
    goto LABEL_29;
  }
  unint64_t v19 = *(void *)(v10 + 8 * v4);
  if (v19) {
    goto LABEL_26;
  }
  int64_t v4 = v18 + 3;
  if (v18 + 3 >= v13) {
    goto LABEL_29;
  }
  unint64_t v19 = *(void *)(v10 + 8 * v4);
  if (v19) {
    goto LABEL_26;
  }
  int64_t v4 = v18 + 4;
  if (v18 + 4 >= v13) {
    goto LABEL_29;
  }
  unint64_t v19 = *(void *)(v10 + 8 * v4);
  if (v19)
  {
LABEL_26:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v4 << 6);
    goto LABEL_7;
  }
  int64_t v20 = v18 + 5;
  if (v20 >= v13)
  {
LABEL_29:
    uint64_t result = type metadata accessor for ActionEndpoint();
    uint64_t v23 = *(void *)(a3 + *(int *)(result + 52));
    if (!*(void *)(v23 + 16)) {
      return result;
    }
    uint64_t result = sub_2519FE614(v14);
    if ((v24 & 1) == 0) {
      return result;
    }
    sub_251A1A930(*(void *)(v23 + 56) + (result << 8), (uint64_t)v35);
    sub_251A1A930((uint64_t)v35, (uint64_t)v36);
    if (sub_251A4DB2C((uint64_t)v36) == 2)
    {
      uint64_t v25 = (long long *)sub_251A4E128((uint64_t)v36);
      long long v48 = v25[11];
      long long v49 = v25[12];
      v50[0] = v25[13];
      *(_OWORD *)((char *)v50 + 12) = *(long long *)((char *)v25 + 220);
      long long v44 = v25[7];
      long long v45 = v25[8];
      long long v46 = v25[9];
      long long v47 = v25[10];
      long long v40 = v25[3];
      long long v41 = v25[4];
      long long v42 = v25[5];
      long long v43 = v25[6];
      long long v37 = *v25;
      long long v38 = v25[1];
      long long v39 = v25[2];
      sub_251A1A930((uint64_t)v35, (uint64_t)v30);
      uint64_t v26 = sub_251A4E128((uint64_t)v30);
      sub_251A4DB38(v26);
      sub_251E57FF4(v28, (uint64_t)v32);
      sub_251A4EBF0((uint64_t)v35, sub_251A4DC54);
      long long v49 = v32[12];
      v50[0] = v33[0];
      *(_OWORD *)((char *)v50 + 12) = *(_OWORD *)((char *)v33 + 12);
      long long v45 = v32[8];
      long long v46 = v32[9];
      long long v48 = v32[11];
      long long v47 = v32[10];
      long long v41 = v32[4];
      long long v42 = v32[5];
      long long v44 = v32[7];
      long long v43 = v32[6];
      long long v37 = v32[0];
      long long v38 = v32[1];
      long long v40 = v32[3];
      long long v39 = v32[2];
      sub_251BE4D7C((uint64_t)&v37);
      long long v22 = &v37;
    }
    else
    {
      sub_251A4EBF0((uint64_t)v35, sub_251A1AA24);
      long long v22 = (long long *)v35;
    }
LABEL_34:
    sub_251A1A930((uint64_t)v22, (uint64_t)v34);
    sub_251A1A930((uint64_t)v34, (uint64_t)&v37);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&v30[0] = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_251A0D0A0((uint64_t)&v37, v14, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = *(void *)&v30[0];
    return swift_bridgeObjectRelease();
  }
  unint64_t v19 = *(void *)(v10 + 8 * v20);
  if (v19)
  {
    int64_t v4 = v20;
    goto LABEL_26;
  }
  while (1)
  {
    int64_t v4 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v4 >= v13) {
      goto LABEL_29;
    }
    unint64_t v19 = *(void *)(v10 + 8 * v4);
    ++v20;
    if (v19) {
      goto LABEL_26;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

void ClusterKind.primaryClusterKind.getter(unsigned char *a1@<X8>)
{
  int v2 = *v1;
  if ((v2 - 23) < 4) {
    LOBYTE(v2) = 23;
  }
  *a1 = v2;
}

uint64_t ActionEndpoint.hash(into:)(long long *a1)
{
  uint64_t v2 = v1;
  sub_251F34DA0();
  sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
  sub_251F35610();
  int64_t v4 = (int *)type metadata accessor for ActionEndpoint();
  sub_251F35610();
  uint64_t v5 = *(void *)(v1 + v4[6]);
  swift_bridgeObjectRetain();
  sub_251A54708(a1, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  sub_251F36CC0();
  sub_251F36CF0();
  sub_251F36CD0();
  MatterTileMetadata.hash(into:)();
  sub_251F36CB0();
  uint64_t v6 = *(void *)(v2 + v4[12]);
  swift_bridgeObjectRetain();
  sub_251A54ED8((uint64_t)a1, v6);
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(v2 + v4[13]);
  swift_bridgeObjectRetain();
  sub_251A47BAC((uint64_t)a1, v7);
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(v2 + v4[14]);
  swift_bridgeObjectRetain();
  sub_251A559B0((uint64_t)a1, v8);
  return swift_bridgeObjectRelease();
}

unint64_t sub_251E3887C(char a1)
{
  unint64_t result = 25705;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x4449656D6F68;
      break;
    case 2:
      unint64_t result = 0x7344496D6F6F72;
      break;
    case 3:
      unint64_t result = 1701667182;
      break;
    case 4:
      unint64_t result = 0x6168636165527369;
      break;
    case 5:
      unint64_t result = 0x746E696F70646E65;
      break;
    case 6:
      unint64_t result = 0x617461646174656DLL;
      break;
    case 7:
      unint64_t result = 0x7453656369766564;
      break;
    case 8:
      unint64_t result = 0x7954656369766564;
      break;
    case 9:
      unint64_t result = 0x7372657473756C63;
      break;
    case 10:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_251E389E4()
{
  return sub_251E3887C(*v0);
}

uint64_t sub_251E389EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251E3E1B4(a1, a2);
  *a3 = result;
  return result;
}

void sub_251E38A14(unsigned char *a1@<X8>)
{
  *a1 = 11;
}

uint64_t sub_251E38A20(uint64_t a1)
{
  unint64_t v2 = sub_251E3CAC4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E38A5C(uint64_t a1)
{
  unint64_t v2 = sub_251E3CAC4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ActionEndpoint.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4528);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251E3CAC4();
  sub_251F36DA0();
  LOBYTE(v13) = 0;
  sub_251F34DA0();
  sub_251A1A8EC(&qword_26B21E348);
  sub_251F36A20();
  if (!v2)
  {
    uint64_t v9 = (int *)type metadata accessor for ActionEndpoint();
    LOBYTE(v13) = 1;
    sub_251F36A20();
    uint64_t v13 = *(void *)(v3 + v9[6]);
    char v15 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC40);
    sub_251A1E490(&qword_269B9CC88, &qword_26B21E348);
    sub_251F36A20();
    LOBYTE(v13) = 3;
    sub_251F369D0();
    LOBYTE(v13) = 4;
    sub_251F369E0();
    uint64_t v10 = (uint64_t *)(v3 + v9[9]);
    uint64_t v11 = *v10;
    LOWORD(v10) = *((_WORD *)v10 + 4);
    uint64_t v13 = v11;
    __int16 v14 = (__int16)v10;
    char v15 = 5;
    sub_251B725F0();
    sub_251F36A20();
    LOBYTE(v13) = 6;
    type metadata accessor for MatterTileMetadata();
    sub_251E3CD1C(&qword_269B9D8B0, (void (*)(uint64_t))type metadata accessor for MatterTileMetadata);
    sub_251F36A20();
    uint64_t v13 = *(void *)(v3 + v9[11]);
    char v15 = 7;
    type metadata accessor for MTRDeviceState(0);
    sub_251E3CD1C(&qword_269B9D880, type metadata accessor for MTRDeviceState);
    sub_251F36A20();
    uint64_t v13 = *(void *)(v3 + v9[12]);
    char v15 = 8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D888);
    sub_251E3CB18(&qword_269B9D890, (void (*)(void))sub_251AC5A7C);
    sub_251F36A20();
    uint64_t v13 = *(void *)(v3 + v9[13]);
    char v15 = 9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9ECE8);
    sub_251B72794(&qword_269B9ECF0, (void (*)(void))sub_251B72644, (void (*)(void))sub_251B72698);
    sub_251F36A20();
    uint64_t v13 = *(void *)(v3 + v9[14]);
    char v15 = 10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9ED08);
    sub_251B728C4(&qword_269B9ED10);
    sub_251F36A20();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t ActionEndpoint.hashValue.getter()
{
  sub_251F36CA0();
  ActionEndpoint.hash(into:)(v1);
  return sub_251F36D00();
}

uint64_t ActionEndpoint.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v38 = a2;
  uint64_t v3 = type metadata accessor for MatterTileMetadata();
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4538);
  uint64_t v39 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v7 = (char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ActionEndpoint();
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251E3CAC4();
  long long v40 = v7;
  uint64_t v11 = v42;
  sub_251F36D90();
  if (v11)
  {
    long long v42 = v11;
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    v34[1] = v3;
    uint64_t v35 = a1;
    long long v42 = v5;
    uint64_t v36 = (int *)v8;
    long long v37 = v10;
    uint64_t v12 = sub_251F34DA0();
    uint64_t v13 = *(void *)(v12 - 8);
    uint64_t v14 = *(void *)(v13 + 64);
    MEMORY[0x270FA5388](v12);
    unint64_t v15 = (v14 + 15) & 0xFFFFFFFFFFFFFFF0;
    LOBYTE(v43) = 0;
    sub_251A1A8EC(&qword_269B9CC80);
    sub_251F36880();
    v34[0] = *(void *)(v13 + 32);
    uint64_t v16 = ((uint64_t (*)(char *, char *, uint64_t))v34[0])(v37, (char *)v34 - v15, v12);
    MEMORY[0x270FA5388](v16);
    uint64_t v17 = (char *)v34 - v15;
    LOBYTE(v43) = 1;
    sub_251F36880();
    uint64_t v23 = v36;
    long long v22 = v37;
    ((void (*)(char *, char *, uint64_t))v34[0])(&v37[v36[5]], v17, v12);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC40);
    char v45 = 2;
    sub_251A1E490(&qword_269B9CC78, &qword_269B9CC80);
    sub_251F36880();
    *(void *)&v22[v23[6]] = v43;
    LOBYTE(v43) = 3;
    uint64_t v24 = sub_251F36830();
    uint64_t v25 = (uint64_t *)&v22[v23[7]];
    *uint64_t v25 = v24;
    v25[1] = v26;
    LOBYTE(v43) = 4;
    v22[v23[8]] = sub_251F36840() & 1;
    char v45 = 5;
    sub_251B72740();
    sub_251F36880();
    __int16 v27 = v44;
    uint64_t v28 = &v22[v23[9]];
    *(void *)uint64_t v28 = v43;
    *((_WORD *)v28 + 4) = v27;
    LOBYTE(v43) = 6;
    sub_251E3CD1C(&qword_269B9D8E0, (void (*)(uint64_t))type metadata accessor for MatterTileMetadata);
    uint64_t v29 = (uint64_t)v42;
    sub_251F36880();
    sub_251B72928(v29, (uint64_t)&v22[v23[10]]);
    type metadata accessor for MTRDeviceState(0);
    char v45 = 7;
    sub_251E3CD1C(&qword_269B9D8C0, type metadata accessor for MTRDeviceState);
    sub_251F36880();
    *(void *)&v22[v23[11]] = v43;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D888);
    char v45 = 8;
    sub_251E3CB18(&qword_269B9D8C8, (void (*)(void))sub_251AC5BEC);
    sub_251F36880();
    *(void *)&v22[v23[12]] = v43;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9ECE8);
    char v45 = 9;
    sub_251B72794(&qword_269B9ED30, (void (*)(void))sub_251B7281C, (void (*)(void))sub_251B72870);
    sub_251F36880();
    long long v42 = 0;
    *(void *)&v37[v36[13]] = v43;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9ED08);
    char v45 = 10;
    sub_251B728C4(&qword_269B9ED48);
    unint64_t v30 = v42;
    sub_251F36880();
    long long v42 = v30;
    (*(void (**)(char *, uint64_t))(v39 + 8))(v40, v41);
    if (v30)
    {
      char v32 = v36;
      int64_t v31 = v37;
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v35);
      uint64_t v19 = sub_251F34DA0();
      (*(void (**)(char *, uint64_t))(*(void *)(v19 - 8) + 8))(v31, v19);
      int64_t v20 = &v31[v32[5]];
      uint64_t v21 = sub_251F34DA0();
      (*(void (**)(char *, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_251E3E6AC((uint64_t)&v31[v32[10]], (uint64_t (*)(void))type metadata accessor for MatterTileMetadata);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v33 = (uint64_t)v37;
      *(void *)&v37[v36[14]] = v43;
      sub_251E3E644(v33, v38, (uint64_t (*)(void))type metadata accessor for ActionEndpoint);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v35);
      return sub_251E3E6AC(v33, (uint64_t (*)(void))type metadata accessor for ActionEndpoint);
    }
  }
}

uint64_t sub_251E399F4()
{
  sub_251F36CA0();
  ActionEndpoint.hash(into:)(v1);
  return sub_251F36D00();
}

uint64_t sub_251E39A38()
{
  sub_251F36CA0();
  ActionEndpoint.hash(into:)(v1);
  return sub_251F36D00();
}

uint64_t sub_251E39A74@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ActionEndpoint.init(from:)(a1, a2);
}

uint64_t sub_251E39A8C(void *a1)
{
  return ActionEndpoint.encode(to:)(a1);
}

uint64_t ActionEndpoint.dateAdded.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_251F34D20();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  return v3(a1, 1, 1, v2);
}

uint64_t ActionEndpoint.foregroundColor.getter()
{
  return sub_251F35370();
}

uint64_t ActionEndpoint.isDoubleHigh.getter()
{
  return 0;
}

void ActionEndpoint.primaryServiceKind.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t ActionEndpoint.isFavorite.getter()
{
  return 0;
}

uint64_t ActionEndpoint.shouldShowInDashboard.getter()
{
  return 0;
}

uint64_t _s13HomeDataModel14ActionEndpointV7roomIDsShy10Foundation4UUIDVGvg_0()
{
  type metadata accessor for ActionEndpoint();
  return swift_bridgeObjectRetain();
}

uint64_t ActionEndpoint.roomName.getter()
{
  return 0;
}

uint64_t ActionEndpoint.canBeToggled.getter()
{
  return 0;
}

uint64_t ActionEndpoint.toggle()(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return MEMORY[0x270FA2498](sub_251AC2104, 0, 0);
}

uint64_t ActionEndpoint.tileIcon.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + *(int *)(type metadata accessor for ActionEndpoint() + 48));
  uint64_t result = sub_251A53EB8(v3);
  if (v6)
  {
    __break(1u);
    return result;
  }
  if (*(_DWORD *)(v3 + 36) != v5)
  {
    __break(1u);
LABEL_11:
    swift_once();
    goto LABEL_5;
  }
  if (result != 1 << *(unsigned char *)(v3 + 32))
  {
    sub_251A54058(result, v5, 0, v3, &v20);
    uint64_t v18 = IconSymbol.rawValue.getter();
    *(void *)a1 = v18;
    *(void *)(a1 + 8) = v19;
    *(unsigned char *)(a1 + 16) = 2;
    *(void *)(a1 + 24) = v18;
    *(void *)(a1 + 32) = v19;
    *(unsigned char *)(a1 + 40) = 2;
    *(void *)(a1 + 48) = v18;
    *(void *)(a1 + 56) = v19;
    *(unsigned char *)(a1 + 64) = 2;
    *(unsigned char *)(a1 + 88) = 2;
    *(void *)(a1 + 72) = v18;
    *(void *)(a1 + 80) = v19;
    goto LABEL_7;
  }
  if (qword_269B9C360 != -1) {
    goto LABEL_11;
  }
LABEL_5:
  uint64_t v7 = *(void *)algn_269BA00F8;
  char v8 = byte_269BA0100;
  uint64_t v9 = qword_269BA0108;
  uint64_t v10 = unk_269BA0110;
  char v11 = byte_269BA0118;
  uint64_t v12 = qword_269BA0120;
  uint64_t v13 = unk_269BA0128;
  char v14 = byte_269BA0130;
  uint64_t v15 = qword_269BA0138;
  uint64_t v16 = unk_269BA0140;
  char v17 = byte_269BA0148;
  *(void *)a1 = qword_269BA00F0;
  *(void *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v10;
  *(unsigned char *)(a1 + 40) = v11;
  *(void *)(a1 + 48) = v12;
  *(void *)(a1 + 56) = v13;
  *(unsigned char *)(a1 + 64) = v14;
  *(void *)(a1 + 72) = v15;
  *(void *)(a1 + 80) = v16;
  *(unsigned char *)(a1 + 88) = v17;
  swift_bridgeObjectRetain();
LABEL_7:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t ActionEndpoint.statusString.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ActionEndpoint() + 48));
  uint64_t result = sub_251A53EB8(v1);
  if ((v4 & 1) == 0)
  {
    if (*(_DWORD *)(v1 + 36) == v3)
    {
      if (result != 1 << *(unsigned char *)(v1 + 32))
      {
        sub_251A54058(result, v3, 0, v1, v8);
        if (LOBYTE(v8[0]) == 23)
        {
          sub_251E37E00((uint64_t)v10);
          if (v11)
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4520);
            if (swift_dynamicCast())
            {
              v6[12] = v8[12];
              v7[0] = v9[0];
              *(_OWORD *)((char *)v7 + 12) = *(_OWORD *)((char *)v9 + 12);
              v6[8] = v8[8];
              v6[9] = v8[9];
              v6[10] = v8[10];
              v6[11] = v8[11];
              v6[4] = v8[4];
              v6[5] = v8[5];
              v6[6] = v8[6];
              v6[7] = v8[7];
              v6[0] = v8[0];
              v6[1] = v8[1];
              v6[2] = v8[2];
              v6[3] = v8[3];
              uint64_t v5 = StaticRVCClusterGroup.actionStatusString.getter();
              sub_251A81D30((uint64_t)v6);
              return v5;
            }
          }
          else
          {
            sub_251DF928C((uint64_t)v10);
          }
        }
      }
      return 0;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

char ActionEndpoint.statusIcon.getter@<W0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ActionEndpoint();
  uint64_t v4 = *(void *)(v1 + *(int *)(v3 + 48));
  uint64_t v5 = sub_251A53EB8(v4);
  if (v7) {
    goto LABEL_11;
  }
  if (*(_DWORD *)(v4 + 36) != v6)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    return v5;
  }
  if (v5 == 1 << *(unsigned char *)(v4 + 32))
  {
    __int16 v8 = 27;
  }
  else
  {
    LOBYTE(v5) = sub_251A54058(v5, v6, 0, v4, &v16);
    __int16 v8 = v16;
  }
  uint64_t v9 = v1 + *(int *)(v3 + 40);
  uint64_t v10 = *(void **)(v9 + 24);
  if (v10)
  {
    uint64_t v11 = *(void *)(v9 + 16);
    swift_bridgeObjectRetain();
    v12._countAndFlagsBits = v11;
    v12._object = v10;
    LOBYTE(v5) = IconSymbol.init(rawValue:)(v12);
    char v13 = v15;
  }
  else
  {
    char v13 = 89;
  }
  *(_WORD *)a1 = v8;
  *(unsigned char *)(a1 + 2) = 1;
  *(unsigned char *)(a1 + 3) = v13;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 16) = 0;
  return v5;
}

unint64_t sub_251E39FD4(unint64_t a1, uint64_t a2)
{
  return sub_251E3A004(a1, a2, (uint64_t (*)(void))type metadata accessor for StaticService);
}

unint64_t sub_251E39FEC(unint64_t a1, uint64_t a2)
{
  return sub_251E3A004(a1, a2, type metadata accessor for StaticAccessory);
}

unint64_t sub_251E3A004(unint64_t result, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v36 = a3;
  uint64_t v3 = a2;
  int64_t v4 = result;
  uint64_t v5 = a2 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v7 = (result + 1) & ~v6;
  if (((1 << v7) & *(void *)(a2 + 64 + 8 * (v7 >> 6))) != 0)
  {
    uint64_t v8 = ~v6;
    uint64_t result = sub_251F36270();
    if ((*(void *)(v5 + 8 * (v7 >> 6)) & (1 << v7)) != 0)
    {
      unint64_t v9 = (result + 1) & v8;
      uint64_t result = sub_251F34DA0();
      unint64_t v43 = result;
      uint64_t v10 = *(void **)(result - 8);
      uint64_t v11 = (void (*)(char *, unint64_t, unint64_t))v10[2];
      long long v40 = v10 + 2;
      uint64_t v41 = v11;
      uint64_t v12 = v10[8];
      uint64_t v13 = v10[9];
      uint64_t v38 = v13;
      uint64_t v39 = v12;
      long long v37 = (uint64_t (**)(char *, unint64_t))(v10 + 1);
      uint64_t v42 = v5;
      unint64_t v14 = result;
      do
      {
        MEMORY[0x270FA5388](result);
        unsigned __int8 v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
        int64_t v17 = v13 * v7;
        v41(v16, *(void *)(v3 + 48) + v13 * v7, v14);
        uint64_t v18 = v3;
        sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
        uint64_t v19 = sub_251F35600();
        uint64_t result = (*v37)(v16, v14);
        unint64_t v20 = v19 & v8;
        if (v4 >= (uint64_t)v9)
        {
          if (v20 >= v9 && v4 >= (uint64_t)v20)
          {
LABEL_16:
            uint64_t v3 = v18;
            uint64_t v23 = *(void *)(v18 + 48);
            uint64_t v13 = v38;
            if (v38 * v4 < v17 || v23 + v38 * v4 >= (unint64_t)(v23 + v17 + v38))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v38 * v4 != v17)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v24 = *(void *)(v3 + 56);
            uint64_t v25 = *(void *)(*(void *)(v36(0) - 8) + 72);
            int64_t v26 = v25 * v4;
            uint64_t result = v24 + v25 * v4;
            int64_t v27 = v25 * v7;
            unint64_t v28 = v24 + v25 * v7 + v25;
            BOOL v29 = v26 < v27 || result >= v28;
            uint64_t v5 = v42;
            if (v29)
            {
              uint64_t result = swift_arrayInitWithTakeFrontToBack();
              int64_t v4 = v7;
            }
            else
            {
              int64_t v4 = v7;
              if (v26 != v27)
              {
                uint64_t result = swift_arrayInitWithTakeBackToFront();
                int64_t v4 = v7;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v20 >= v9 || v4 >= (uint64_t)v20)
        {
          goto LABEL_16;
        }
        uint64_t v5 = v42;
        uint64_t v3 = v18;
        uint64_t v13 = v38;
LABEL_5:
        unint64_t v7 = (v7 + 1) & v8;
      }
      while (((*(void *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
    }
    unint64_t v30 = (uint64_t *)(v5 + 8 * ((unint64_t)v4 >> 6));
    uint64_t v31 = *v30;
    uint64_t v32 = (-1 << v4) - 1;
  }
  else
  {
    unint64_t v30 = (uint64_t *)(v5 + 8 * (result >> 6));
    uint64_t v32 = *v30;
    uint64_t v31 = (-1 << result) - 1;
  }
  *unint64_t v30 = v32 & v31;
  uint64_t v33 = *(void *)(v3 + 16);
  BOOL v34 = __OFSUB__(v33, 1);
  uint64_t v35 = v33 - 1;
  if (v34)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v35;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_251E3A318(unint64_t a1, uint64_t a2)
{
  return sub_251E3A004(a1, a2, type metadata accessor for StateSnapshot);
}

unint64_t sub_251E3A330(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_251F36270();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_251F36CA0();
        sub_251F36CE0();
        uint64_t result = sub_251F36D00();
        unint64_t v9 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v9 < v8) {
            goto LABEL_5;
          }
        }
        else if (v9 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v9)
        {
LABEL_11:
          uint64_t v10 = *(void *)(a2 + 48);
          uint64_t v11 = (unsigned char *)(v10 + v3);
          uint64_t v12 = (unsigned char *)(v10 + v6);
          if (v3 != v6 || v11 >= v12 + 1) {
            unsigned char *v11 = *v12;
          }
          uint64_t v13 = *(void *)(a2 + 56);
          uint64_t result = v13 + (v3 << 8);
          unint64_t v14 = (const void *)(v13 + (v6 << 8));
          if (v3 << 8 != v6 << 8 || (int64_t v3 = v6, result >= (unint64_t)v14 + 256))
          {
            uint64_t result = (unint64_t)memmove((void *)result, v14, 0x100uLL);
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v15 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v16 = *v15;
    uint64_t v17 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v15 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v17 = *v15;
    uint64_t v16 = (-1 << result) - 1;
  }
  uint64_t *v15 = v17 & v16;
  uint64_t v18 = *(void *)(a2 + 16);
  BOOL v19 = __OFSUB__(v18, 1);
  uint64_t v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v20;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_251E3A4FC(unint64_t a1, uint64_t a2)
{
  return sub_251E3C3F0(a1, a2, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
}

unint64_t sub_251E3A514(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_251F36270();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_251F36CA0();
        CharacteristicKind.rawValue.getter();
        sub_251F357B0();
        swift_bridgeObjectRelease();
        uint64_t result = sub_251F36D00();
        unint64_t v10 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (unsigned char *)(v11 + v3);
          uint64_t v13 = (unsigned char *)(v11 + v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (_OWORD *)(v14 + 32 * v3);
          uint64_t v16 = (_OWORD *)(v14 + 32 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 2))
          {
            long long v9 = v16[1];
            _OWORD *v15 = *v16;
            v15[1] = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *uint64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_251E3A6F0(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_251F36270();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_251F36CA0();
        swift_bridgeObjectRetain();
        sub_251F357B0();
        uint64_t v9 = sub_251F36D00();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (void *)(v14 + 8 * v3);
          uint64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            void *v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *uint64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_251E3A8C8(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_251F36270();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v11 = *(void *)(a2 + 48);
        uint64_t v12 = (_DWORD *)(v11 + 4 * v6);
        uint64_t result = MEMORY[0x2533ABBC0](*(void *)(a2 + 40), *v12, 4);
        unint64_t v13 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v13 >= v8 && v3 >= (uint64_t)v13)
          {
LABEL_16:
            uint64_t v16 = (_DWORD *)(v11 + 4 * v3);
            if (v3 != v6 || v16 >= v12 + 1) {
              *uint64_t v16 = *v12;
            }
            uint64_t v17 = *(void *)(a2 + 56);
            unint64_t v18 = v17 + 40 * v3;
            uint64_t v19 = (long long *)(v17 + 40 * v6);
            if (40 * v3 < (uint64_t)(40 * v6) || v18 >= (unint64_t)v19 + 40 || (BOOL v20 = v3 == v6, v3 = v6, !v20))
            {
              long long v9 = *v19;
              long long v10 = v19[1];
              *(void *)(v18 + 32) = *((void *)v19 + 4);
              *(_OWORD *)unint64_t v18 = v9;
              *(_OWORD *)(v18 + 16) = v10;
              int64_t v3 = v6;
            }
          }
        }
        else if (v13 >= v8 || v3 >= (uint64_t)v13)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    BOOL v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v22 = *v21;
    uint64_t v23 = (-1 << v3) - 1;
  }
  else
  {
    BOOL v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v23 = *v21;
    uint64_t v22 = (-1 << result) - 1;
  }
  *BOOL v21 = v23 & v22;
  uint64_t v24 = *(void *)(a2 + 16);
  BOOL v25 = __OFSUB__(v24, 1);
  uint64_t v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_251E3AA84(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_251F36270();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = *(void *)(a2 + 48);
        long long v10 = (void *)(v9 + 8 * v6);
        uint64_t result = sub_251F36C90();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8 || v3 < (uint64_t)v11) {
            goto LABEL_6;
          }
        }
        else if (v11 < v8 && v3 < (uint64_t)v11)
        {
          goto LABEL_6;
        }
        uint64_t v14 = (void *)(v9 + 8 * v3);
        if (v3 != v6 || v14 >= v10 + 1) {
          *uint64_t v14 = *v10;
        }
        uint64_t v15 = *(void *)(a2 + 56);
        uint64_t v16 = *(void *)(*(void *)(type metadata accessor for StaticMatterDevice() - 8) + 72);
        int64_t v17 = v16 * v3;
        uint64_t result = v15 + v16 * v3;
        int64_t v18 = v16 * v6;
        unint64_t v19 = v15 + v16 * v6 + v16;
        if (v17 < v18 || result >= v19)
        {
          uint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v17 == v18) {
            goto LABEL_6;
          }
          uint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    BOOL v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v22 = *v21;
    uint64_t v23 = (-1 << v3) - 1;
  }
  else
  {
    BOOL v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v23 = *v21;
    uint64_t v22 = (-1 << result) - 1;
  }
  *BOOL v21 = v23 & v22;
  uint64_t v24 = *(void *)(a2 + 16);
  BOOL v25 = __OFSUB__(v24, 1);
  uint64_t v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_251E3AC54(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_251F36270();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_251F36CA0();
        swift_bridgeObjectRetain();
        sub_251F357B0();
        uint64_t v10 = sub_251F36D00();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(a2 + 48);
          unint64_t v13 = (_OWORD *)(v12 + 16 * v3);
          uint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1) {
            *unint64_t v13 = *v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          uint64_t v16 = (_OWORD *)(v15 + 32 * v3);
          int64_t v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 2))
          {
            long long v9 = v17[1];
            *uint64_t v16 = *v17;
            v16[1] = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    int64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *int64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_251E3AE2C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_251F36270();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_251F36CA0();
        sub_251F357B0();
        swift_bridgeObjectRelease();
        uint64_t result = sub_251F36D00();
        unint64_t v10 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (unsigned char *)(v11 + v3);
          unint64_t v13 = (unsigned char *)(v11 + v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (_OWORD *)(v14 + 32 * v3);
          uint64_t v16 = (_OWORD *)(v14 + 32 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 2))
          {
            long long v9 = v16[1];
            _OWORD *v15 = *v16;
            v15[1] = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    int64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *int64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
    JUMPOUT(0x251E3B140);
  }
  *(void *)(a2 + 16) = v22;
  ++*(_DWORD *)(a2 + 36);
  return result;
}

unint64_t sub_251E3B168(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_251F36270();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v10 = *(void *)(a2 + 48);
        uint64_t v11 = (_WORD *)(v10 + 2 * v6);
        uint64_t result = MEMORY[0x2533ABBC0](*(void *)(a2 + 40), (unsigned __int16)*v11, 2);
        unint64_t v12 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 >= v8 && v3 >= (uint64_t)v12)
          {
LABEL_16:
            uint64_t v15 = (_WORD *)(v10 + 2 * v3);
            if (v3 != v6 || v15 >= v11 + 1) {
              _WORD *v15 = *v11;
            }
            uint64_t v16 = *(void *)(a2 + 56);
            unint64_t v17 = v16 + 24 * v3;
            uint64_t v18 = (long long *)(v16 + 24 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v17 >= (unint64_t)v18 + 24))
            {
              long long v9 = *v18;
              *(void *)(v17 + 16) = *((void *)v18 + 2);
              *(_OWORD *)unint64_t v17 = v9;
              int64_t v3 = v6;
            }
          }
        }
        else if (v12 >= v8 || v3 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v20 = *v19;
    uint64_t v21 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v21 = *v19;
    uint64_t v20 = (-1 << result) - 1;
  }
  *uint64_t v19 = v21 & v20;
  uint64_t v22 = *(void *)(a2 + 16);
  BOOL v23 = __OFSUB__(v22, 1);
  uint64_t v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_251E3B318(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_251F36270();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_251F36CA0();
        sub_251F36CE0();
        uint64_t result = sub_251F36D00();
        unint64_t v10 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          unint64_t v12 = (_DWORD *)(v11 + 4 * v3);
          unint64_t v13 = (_DWORD *)(v11 + 4 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *unint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (_OWORD *)(v14 + 32 * v3);
          uint64_t v16 = (_OWORD *)(v14 + 32 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 2))
          {
            long long v9 = v16[1];
            _OWORD *v15 = *v16;
            v15[1] = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *unint64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_251E3B4D4(unint64_t result, uint64_t a2)
{
  uint64_t v2 = a2;
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_251F36270();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      uint64_t v8 = (result + 1) & v7;
      uint64_t result = sub_251F34DA0();
      unint64_t v42 = result;
      long long v9 = *(void **)(result - 8);
      unint64_t v10 = (void (*)(char *, unint64_t, unint64_t))v9[2];
      uint64_t v39 = v9 + 2;
      long long v40 = v10;
      uint64_t v11 = v9[8];
      uint64_t v12 = v9[9];
      uint64_t v37 = v12;
      uint64_t v38 = v11;
      uint64_t v36 = (uint64_t (**)(char *, unint64_t))(v9 + 1);
      uint64_t v41 = v4;
      unint64_t v13 = result;
      do
      {
        MEMORY[0x270FA5388](result);
        unint64_t v15 = v8;
        uint64_t v16 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
        int64_t v17 = v12 * v6;
        v40(v16, *(void *)(v2 + 48) + v12 * v6, v13);
        uint64_t v18 = v2;
        sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
        uint64_t v19 = sub_251F35600();
        uint64_t v20 = v16;
        uint64_t v8 = v15;
        uint64_t result = (*v36)(v20, v13);
        uint64_t v21 = v19 & v7;
        if (v3 >= (uint64_t)v15)
        {
          if (v21 >= v15 && v3 >= v21)
          {
LABEL_16:
            uint64_t v2 = v18;
            uint64_t v24 = *(void *)(v18 + 48);
            uint64_t v12 = v37;
            uint64_t result = v24 + v37 * v3;
            if (v37 * v3 < v17 || result >= v24 + v17 + v37)
            {
              uint64_t result = swift_arrayInitWithTakeFrontToBack();
              uint64_t v4 = v41;
            }
            else
            {
              uint64_t v4 = v41;
              if (v37 * v3 != v17) {
                uint64_t result = swift_arrayInitWithTakeBackToFront();
              }
            }
            uint64_t v25 = *(void *)(v2 + 56);
            uint64_t v26 = (_OWORD *)(v25 + 32 * v3);
            int64_t v27 = (_OWORD *)(v25 + 32 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v26 >= v27 + 2))
            {
              long long v28 = v27[1];
              *uint64_t v26 = *v27;
              v26[1] = v28;
              int64_t v3 = v6;
            }
            goto LABEL_5;
          }
        }
        else if (v21 >= v15 || v3 >= v21)
        {
          goto LABEL_16;
        }
        uint64_t v4 = v41;
        uint64_t v2 = v18;
        uint64_t v12 = v37;
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    BOOL v29 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v30 = *v29;
    uint64_t v31 = (-1 << v3) - 1;
  }
  else
  {
    BOOL v29 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v31 = *v29;
    uint64_t v30 = (-1 << result) - 1;
  }
  *BOOL v29 = v31 & v30;
  uint64_t v32 = *(void *)(v2 + 16);
  BOOL v33 = __OFSUB__(v32, 1);
  uint64_t v34 = v32 - 1;
  if (v33)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v2 + 16) = v34;
    ++*(_DWORD *)(v2 + 36);
  }
  return result;
}

unint64_t sub_251E3B7A0(unint64_t result, uint64_t a2)
{
  uint64_t v2 = a2;
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_251F36270();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      uint64_t v8 = (result + 1) & v7;
      uint64_t result = sub_251F34DA0();
      unint64_t v41 = result;
      long long v9 = *(void **)(result - 8);
      unint64_t v10 = (void (*)(char *, unint64_t, unint64_t))v9[2];
      uint64_t v38 = v9 + 2;
      uint64_t v39 = v10;
      uint64_t v11 = v9[8];
      uint64_t v12 = v9[9];
      uint64_t v36 = v12;
      uint64_t v37 = v11;
      uint64_t v35 = (uint64_t (**)(char *, unint64_t))(v9 + 1);
      uint64_t v40 = v4;
      unint64_t v13 = result;
      do
      {
        MEMORY[0x270FA5388](result);
        unint64_t v15 = v8;
        uint64_t v16 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
        int64_t v17 = v12 * v6;
        v39(v16, *(void *)(v2 + 48) + v12 * v6, v13);
        uint64_t v18 = v2;
        sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
        uint64_t v19 = sub_251F35600();
        uint64_t v20 = v16;
        uint64_t v8 = v15;
        uint64_t result = (*v35)(v20, v13);
        uint64_t v21 = v19 & v7;
        if (v3 >= (uint64_t)v15)
        {
          if (v21 >= v15 && v3 >= v21)
          {
LABEL_16:
            uint64_t v2 = v18;
            uint64_t v24 = *(void *)(v18 + 48);
            uint64_t v12 = v36;
            uint64_t result = v24 + v36 * v3;
            if (v36 * v3 < v17 || result >= v24 + v17 + v36)
            {
              uint64_t result = swift_arrayInitWithTakeFrontToBack();
              uint64_t v4 = v40;
            }
            else
            {
              uint64_t v4 = v40;
              if (v36 * v3 != v17) {
                uint64_t result = swift_arrayInitWithTakeBackToFront();
              }
            }
            uint64_t v25 = *(void *)(v2 + 56);
            uint64_t v26 = (void *)(v25 + 8 * v3);
            int64_t v27 = (void *)(v25 + 8 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v26 >= v27 + 1))
            {
              *uint64_t v26 = *v27;
              int64_t v3 = v6;
            }
            goto LABEL_5;
          }
        }
        else if (v21 >= v15 || v3 >= v21)
        {
          goto LABEL_16;
        }
        uint64_t v4 = v40;
        uint64_t v2 = v18;
        uint64_t v12 = v36;
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    long long v28 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v29 = *v28;
    uint64_t v30 = (-1 << v3) - 1;
  }
  else
  {
    long long v28 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v30 = *v28;
    uint64_t v29 = (-1 << result) - 1;
  }
  *long long v28 = v30 & v29;
  uint64_t v31 = *(void *)(v2 + 16);
  BOOL v32 = __OFSUB__(v31, 1);
  uint64_t v33 = v31 - 1;
  if (v32)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v2 + 16) = v33;
    ++*(_DWORD *)(v2 + 36);
  }
  return result;
}

unint64_t sub_251E3BA70(unint64_t result, uint64_t a2)
{
  uint64_t v2 = a2;
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_251F36270();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      uint64_t v8 = (result + 1) & v7;
      uint64_t result = sub_251F34DA0();
      unint64_t v43 = result;
      long long v9 = *(void **)(result - 8);
      unint64_t v10 = (void (*)(char *, unint64_t, unint64_t))v9[2];
      uint64_t v40 = v9 + 2;
      unint64_t v41 = v10;
      uint64_t v11 = v9[8];
      uint64_t v12 = v9[9];
      uint64_t v38 = v12;
      uint64_t v39 = v11;
      uint64_t v37 = (uint64_t (**)(char *, unint64_t))(v9 + 1);
      uint64_t v42 = v4;
      unint64_t v13 = result;
      do
      {
        MEMORY[0x270FA5388](result);
        unint64_t v15 = v8;
        uint64_t v16 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
        int64_t v17 = v12 * v6;
        v41(v16, *(void *)(v2 + 48) + v12 * v6, v13);
        uint64_t v18 = v2;
        sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
        uint64_t v19 = sub_251F35600();
        uint64_t v20 = v16;
        uint64_t v8 = v15;
        uint64_t result = (*v37)(v20, v13);
        uint64_t v21 = v19 & v7;
        if (v3 >= (uint64_t)v15)
        {
          if (v21 >= v15 && v3 >= v21)
          {
LABEL_16:
            uint64_t v2 = v18;
            uint64_t v24 = *(void *)(v18 + 48);
            uint64_t v12 = v38;
            uint64_t result = v24 + v38 * v3;
            if (v38 * v3 < v17 || result >= v24 + v17 + v38)
            {
              uint64_t result = swift_arrayInitWithTakeFrontToBack();
              uint64_t v4 = v42;
            }
            else
            {
              uint64_t v4 = v42;
              if (v38 * v3 != v17) {
                uint64_t result = swift_arrayInitWithTakeBackToFront();
              }
            }
            uint64_t v25 = *(void *)(v2 + 56);
            unint64_t v26 = v25 + 40 * v3;
            int64_t v27 = (long long *)(v25 + 40 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v26 >= (unint64_t)v27 + 40))
            {
              long long v28 = *v27;
              long long v29 = v27[1];
              *(void *)(v26 + 32) = *((void *)v27 + 4);
              *(_OWORD *)unint64_t v26 = v28;
              *(_OWORD *)(v26 + 16) = v29;
              int64_t v3 = v6;
            }
            goto LABEL_5;
          }
        }
        else if (v21 >= v15 || v3 >= v21)
        {
          goto LABEL_16;
        }
        uint64_t v4 = v42;
        uint64_t v2 = v18;
        uint64_t v12 = v38;
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v30 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v31 = *v30;
    uint64_t v32 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v30 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v32 = *v30;
    uint64_t v31 = (-1 << result) - 1;
  }
  *uint64_t v30 = v32 & v31;
  uint64_t v33 = *(void *)(v2 + 16);
  BOOL v34 = __OFSUB__(v33, 1);
  uint64_t v35 = v33 - 1;
  if (v34)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v2 + 16) = v35;
    ++*(_DWORD *)(v2 + 36);
  }
  return result;
}

unint64_t sub_251E3BD48(unint64_t result, uint64_t a2)
{
  uint64_t v2 = a2;
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_251F36270();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      uint64_t v8 = (result + 1) & v7;
      uint64_t result = sub_251F34DA0();
      unint64_t v40 = result;
      long long v9 = *(void **)(result - 8);
      unint64_t v10 = (void (*)(char *, unint64_t, unint64_t))v9[2];
      uint64_t v37 = v9 + 2;
      uint64_t v38 = v10;
      uint64_t v11 = v9[8];
      uint64_t v12 = v9[9];
      uint64_t v35 = v12;
      uint64_t v36 = v11;
      BOOL v34 = (uint64_t (**)(char *, unint64_t))(v9 + 1);
      uint64_t v39 = v4;
      unint64_t v13 = result;
      do
      {
        MEMORY[0x270FA5388](result);
        unint64_t v15 = v8;
        uint64_t v16 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
        int64_t v17 = v12 * v6;
        v38(v16, *(void *)(v2 + 48) + v12 * v6, v13);
        uint64_t v18 = v2;
        sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
        uint64_t v19 = sub_251F35600();
        uint64_t v20 = v16;
        uint64_t v8 = v15;
        uint64_t result = (*v34)(v20, v13);
        uint64_t v21 = v19 & v7;
        if (v3 >= (uint64_t)v15)
        {
          if (v21 >= v15 && v3 >= v21)
          {
LABEL_16:
            uint64_t v2 = v18;
            uint64_t v24 = *(void *)(v18 + 48);
            uint64_t v12 = v35;
            if (v35 * v3 < v17 || v24 + v35 * v3 >= (unint64_t)(v24 + v17 + v35))
            {
              swift_arrayInitWithTakeFrontToBack();
              uint64_t v4 = v39;
            }
            else
            {
              uint64_t v4 = v39;
              if (v35 * v3 != v17) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            uint64_t v25 = *(void *)(v2 + 56);
            uint64_t result = v25 + (v3 << 7);
            unint64_t v26 = (const void *)(v25 + (v6 << 7));
            if (v3 != v6 || (int64_t v3 = v6, result >= (unint64_t)v26 + 128))
            {
              uint64_t result = (unint64_t)memmove((void *)result, v26, 0x80uLL);
              int64_t v3 = v6;
            }
            goto LABEL_5;
          }
        }
        else if (v21 >= v15 || v3 >= v21)
        {
          goto LABEL_16;
        }
        uint64_t v4 = v39;
        uint64_t v2 = v18;
        uint64_t v12 = v35;
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    int64_t v27 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v28 = *v27;
    uint64_t v29 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v27 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v29 = *v27;
    uint64_t v28 = (-1 << result) - 1;
  }
  *int64_t v27 = v29 & v28;
  uint64_t v30 = *(void *)(v2 + 16);
  BOOL v31 = __OFSUB__(v30, 1);
  uint64_t v32 = v30 - 1;
  if (v31)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v2 + 16) = v32;
    ++*(_DWORD *)(v2 + 36);
  }
  return result;
}

unint64_t sub_251E3C014(unint64_t a1, uint64_t a2)
{
  return sub_251E3A004(a1, a2, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
}

unint64_t sub_251E3C02C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_251F36270();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      while (1)
      {
        sub_251F36CA0();
        CharacteristicKind.rawValue.getter();
        sub_251F357B0();
        swift_bridgeObjectRelease();
        uint64_t result = sub_251F36D00();
        unint64_t v9 = result & v7;
        if (v3 >= (uint64_t)v8) {
          break;
        }
        if (v9 < v8) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v10 = *(void *)(a2 + 48);
        uint64_t v11 = (unsigned char *)(v10 + v3);
        uint64_t v12 = (unsigned char *)(v10 + v6);
        if (v3 != v6 || v11 >= v12 + 1) {
          unsigned char *v11 = *v12;
        }
        uint64_t v13 = *(void *)(a2 + 56);
        uint64_t v14 = *(void *)(*(void *)(type metadata accessor for StaticCharacteristic() - 8) + 72);
        int64_t v15 = v14 * v3;
        uint64_t result = v13 + v14 * v3;
        int64_t v16 = v14 * v6;
        unint64_t v17 = v13 + v14 * v6 + v14;
        if (v15 < v16 || result >= v17)
        {
          uint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v15 == v16) {
            goto LABEL_6;
          }
          uint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v9 < v8) {
        goto LABEL_6;
      }
LABEL_11:
      if (v3 < (uint64_t)v9) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    uint64_t v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v20 = *v19;
    uint64_t v21 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v21 = *v19;
    uint64_t v20 = (-1 << result) - 1;
  }
  *uint64_t v19 = v21 & v20;
  uint64_t v22 = *(void *)(a2 + 16);
  BOOL v23 = __OFSUB__(v22, 1);
  uint64_t v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_251E3C240(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_251F36270();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = *(void *)(a2 + 48);
        uint64_t v10 = (void *)(v9 + 8 * v6);
        uint64_t result = sub_251F36C90();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            uint64_t v14 = (void *)(v9 + 8 * v3);
            if (v3 != v6 || v14 >= v10 + 1) {
              *uint64_t v14 = *v10;
            }
            uint64_t v15 = *(void *)(a2 + 56);
            int64_t v16 = (_OWORD *)(v15 + 16 * v3);
            unint64_t v17 = (_OWORD *)(v15 + 16 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 1))
            {
              *int64_t v16 = *v17;
              int64_t v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *uint64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_251E3C3D8(unint64_t a1, uint64_t a2)
{
  return sub_251E3C3F0(a1, a2, (uint64_t (*)(void))type metadata accessor for ActionEndpoint);
}

unint64_t sub_251E3C3F0(unint64_t result, uint64_t a2, uint64_t (*a3)(void))
{
  int64_t v4 = result;
  uint64_t v5 = a2 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v7 = (result + 1) & ~v6;
  if (((1 << v7) & *(void *)(a2 + 64 + 8 * (v7 >> 6))) != 0)
  {
    uint64_t v9 = ~v6;
    uint64_t result = sub_251F36270();
    if ((*(void *)(v5 + 8 * (v7 >> 6)) & (1 << v7)) != 0)
    {
      unint64_t v10 = (result + 1) & v9;
      do
      {
        uint64_t v11 = *(void *)(a2 + 48);
        uint64_t v12 = (_WORD *)(v11 + 2 * v7);
        uint64_t result = MEMORY[0x2533ABBC0](*(void *)(a2 + 40), (unsigned __int16)*v12, 2);
        unint64_t v13 = result & v9;
        if (v4 >= (uint64_t)v10)
        {
          if (v13 < v10 || v4 < (uint64_t)v13) {
            goto LABEL_6;
          }
        }
        else if (v13 < v10 && v4 < (uint64_t)v13)
        {
          goto LABEL_6;
        }
        int64_t v16 = (_WORD *)(v11 + 2 * v4);
        if (v4 != v7 || v16 >= v12 + 1) {
          *int64_t v16 = *v12;
        }
        uint64_t v17 = *(void *)(a2 + 56);
        uint64_t v18 = *(void *)(*(void *)(a3(0) - 8) + 72);
        int64_t v19 = v18 * v4;
        uint64_t result = v17 + v18 * v4;
        int64_t v20 = v18 * v7;
        unint64_t v21 = v17 + v18 * v7 + v18;
        if (v19 < v20 || result >= v21)
        {
          uint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v4 = v7;
          if (v19 == v20) {
            goto LABEL_6;
          }
          uint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v4 = v7;
LABEL_6:
        unint64_t v7 = (v7 + 1) & v9;
      }
      while (((*(void *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
    }
    uint64_t v23 = (uint64_t *)(v5 + 8 * ((unint64_t)v4 >> 6));
    uint64_t v24 = *v23;
    uint64_t v25 = (-1 << v4) - 1;
  }
  else
  {
    uint64_t v23 = (uint64_t *)(v5 + 8 * (result >> 6));
    uint64_t v25 = *v23;
    uint64_t v24 = (-1 << result) - 1;
  }
  *uint64_t v23 = v25 & v24;
  uint64_t v26 = *(void *)(a2 + 16);
  BOOL v27 = __OFSUB__(v26, 1);
  uint64_t v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v28;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_251E3C5D4(unint64_t a1, uint64_t a2)
{
  return sub_251E3A004(a1, a2, type metadata accessor for ScrubberElement);
}

unint64_t sub_251E3C5EC(unint64_t a1, uint64_t a2)
{
  return sub_251E3A004(a1, a2, (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
}

unint64_t sub_251E3C604(unint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = MEMORY[0x270FA5388](v4);
  unint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    uint64_t v30 = a2 + 64;
    unint64_t result = sub_251F36270();
    uint64_t v12 = v30;
    if ((*(void *)(v30 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v13 = (result + 1) & v11;
      uint64_t v14 = *(void *)(v5 + 72);
      while (1)
      {
        int64_t v15 = v14 * v10;
        sub_251E3E644(*(void *)(a2 + 48) + v14 * v10, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
        sub_251F36CA0();
        StaticAccessory.hash(into:)(v31);
        StaticService.hash(into:)(v31);
        StaticCharacteristic.hash(into:)((uint64_t)v31);
        uint64_t v16 = sub_251F36D00();
        unint64_t result = sub_251E3E6AC((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
        unint64_t v17 = v16 & v11;
        if ((uint64_t)a1 >= (uint64_t)v13) {
          break;
        }
        if (v17 < v13) {
          goto LABEL_11;
        }
LABEL_12:
        if ((uint64_t)(v14 * a1) < v15 || *(void *)(a2 + 48) + v14 * a1 >= *(void *)(a2 + 48) + v15 + v14)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v14 * a1 != v15)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        uint64_t v18 = *(void *)(a2 + 56);
        uint64_t v19 = *(void *)(*(void *)(type metadata accessor for IconTextValueStringDataHolder() - 8) + 72);
        int64_t v20 = v19 * a1;
        unint64_t result = v18 + v19 * a1;
        int64_t v21 = v19 * v10;
        unint64_t v22 = v18 + v19 * v10 + v19;
        if (v20 < v21 || result >= v22)
        {
          unint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          a1 = v10;
          if (v20 == v21) {
            goto LABEL_6;
          }
          unint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        a1 = v10;
LABEL_6:
        unint64_t v10 = (v10 + 1) & v11;
        uint64_t v12 = v30;
        if (((*(void *)(v30 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
          goto LABEL_23;
        }
      }
      if (v17 < v13) {
        goto LABEL_6;
      }
LABEL_11:
      if ((uint64_t)a1 < (uint64_t)v17) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_23:
    uint64_t v24 = (uint64_t *)(v12 + 8 * (a1 >> 6));
    uint64_t v25 = *v24;
    uint64_t v26 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v24 = (uint64_t *)(a2 + 64 + 8 * (a1 >> 6));
    uint64_t v26 = *v24;
    uint64_t v25 = (-1 << a1) - 1;
  }
  *uint64_t v24 = v26 & v25;
  uint64_t v27 = *(void *)(a2 + 16);
  BOOL v28 = __OFSUB__(v27, 1);
  uint64_t v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v29;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t type metadata accessor for ActionEndpoint()
{
  uint64_t result = qword_269BA4578;
  if (!qword_269BA4578) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t _s13HomeDataModel14ActionEndpointV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((sub_251F34D70() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = (int *)type metadata accessor for ActionEndpoint();
  if ((sub_251F34D70() & 1) == 0 || (sub_251B04848(*(void *)(a1 + v4[6]), *(void *)(a2 + v4[6])) & 1) == 0) {
    return 0;
  }
  uint64_t v5 = v4[7];
  uint64_t v6 = *(void *)(a1 + v5);
  uint64_t v7 = *(void *)(a1 + v5 + 8);
  unint64_t v8 = (void *)(a2 + v5);
  BOOL v9 = v6 == *v8 && v7 == v8[1];
  if (!v9 && (sub_251F36B10() & 1) == 0) {
    return 0;
  }
  if (*(unsigned __int8 *)(a1 + v4[8]) != *(unsigned __int8 *)(a2 + v4[8])) {
    return 0;
  }
  uint64_t v10 = v4[9];
  uint64_t v11 = *(void *)(a1 + v10);
  int v12 = *(unsigned __int16 *)(a1 + v10 + 8);
  unint64_t v13 = (uint64_t *)(a2 + v10);
  uint64_t v14 = *v13;
  int v15 = *((unsigned __int16 *)v13 + 4);
  BOOL v16 = v11 == v14 && v12 == v15;
  if (!v16
    || !_s13HomeDataModel18MatterTileMetadataV2eeoiySbAC_ACtFZ_0(a1 + v4[10], a2 + v4[10])
    || *(void *)(a1 + v4[11]) != *(void *)(a2 + v4[11])
    || (sub_251B05988(*(void *)(a1 + v4[12]), *(void *)(a2 + v4[12])) & 1) == 0
    || (sub_251AFCBF0(*(void *)(a1 + v4[13]), *(void *)(a2 + v4[13])) & 1) == 0)
  {
    return 0;
  }
  uint64_t v17 = v4[14];
  uint64_t v18 = *(void *)(a1 + v17);
  uint64_t v19 = *(void *)(a2 + v17);
  return sub_251B05B84(v18, v19);
}

uint64_t sub_251E3CAA8(uint64_t a1, uint64_t a2)
{
  return sub_251E38190(a1, a2, *(void *)(v2 + 16));
}

unint64_t sub_251E3CAC4()
{
  unint64_t result = qword_269BA4530;
  if (!qword_269BA4530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4530);
  }
  return result;
}

uint64_t sub_251E3CB18(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B9D888);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_251E3CB88()
{
  return sub_251E3CD1C(&qword_269BA4548, (void (*)(uint64_t))type metadata accessor for ActionEndpoint);
}

uint64_t sub_251E3CBD0()
{
  return sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
}

uint64_t sub_251E3CBF8(void *a1)
{
  a1[1] = sub_251E3CD1C(&qword_269BA4558, (void (*)(uint64_t))type metadata accessor for ActionEndpoint);
  a1[2] = sub_251E3CD1C(&qword_269BA4560, (void (*)(uint64_t))type metadata accessor for ActionEndpoint);
  a1[3] = sub_251E3CD1C(&qword_269B9F4E8, (void (*)(uint64_t))type metadata accessor for ActionEndpoint);
  a1[4] = sub_251E3CD1C(&qword_269B9F4D0, (void (*)(uint64_t))type metadata accessor for ActionEndpoint);
  a1[5] = sub_251E3CD1C(&qword_269BA4568, (void (*)(uint64_t))type metadata accessor for ActionEndpoint);
  uint64_t result = sub_251E3CD1C(&qword_269BA4570, (void (*)(uint64_t))type metadata accessor for ActionEndpoint);
  a1[6] = result;
  return result;
}

uint64_t sub_251E3CD1C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for ActionEndpoint(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v26 = *a2;
    *a1 = *a2;
    a1 = (void *)(v26 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_251F34DA0();
    unint64_t v8 = *(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((void *)((char *)a1 + a3[5]), (void *)((char *)a2 + a3[5]), v7);
    uint64_t v9 = a3[7];
    *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
    uint64_t v10 = (void *)((char *)a1 + v9);
    uint64_t v11 = (void *)((char *)a2 + v9);
    uint64_t v31 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v31;
    uint64_t v12 = a3[9];
    *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    unint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    *(void *)unint64_t v13 = *(void *)v14;
    *((_WORD *)v13 + 4) = *((_WORD *)v14 + 4);
    uint64_t v15 = a3[10];
    BOOL v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = *(void *)((char *)a2 + v15 + 8);
    *(void *)BOOL v16 = *(void *)((char *)a2 + v15);
    *((void *)v16 + 1) = v18;
    uint64_t v19 = *(void *)((char *)a2 + v15 + 24);
    *((void *)v16 + 2) = *(void *)((char *)a2 + v15 + 16);
    *((void *)v16 + 3) = v19;
    uint64_t v20 = *(void *)((char *)a2 + v15 + 40);
    *((void *)v16 + 4) = *(void *)((char *)a2 + v15 + 32);
    *((void *)v16 + 5) = v20;
    *((_DWORD *)v16 + 12) = *(_DWORD *)((char *)a2 + v15 + 48);
    uint64_t v21 = *(int *)(type metadata accessor for MatterTileMetadata() + 44);
    __dst = &v16[v21];
    unint64_t v22 = &v17[v21];
    uint64_t v23 = sub_251F34D20();
    uint64_t v24 = *(void *)(v23 - 8);
    uint64_t v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v30(v22, 1, v23))
    {
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
      memcpy(__dst, v22, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(__dst, v22, v23);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(__dst, 0, 1, v23);
    }
    uint64_t v27 = a3[12];
    *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
    *(void *)((char *)a1 + v27) = *(void *)((char *)a2 + v27);
    uint64_t v28 = a3[14];
    *(void *)((char *)a1 + a3[13]) = *(void *)((char *)a2 + a3[13]);
    *(void *)((char *)a1 + v28) = *(void *)((char *)a2 + v28);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ActionEndpoint(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_251F34DA0();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + *(int *)(a2 + 20), v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(a2 + 40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = v6 + *(int *)(type metadata accessor for MatterTileMetadata() + 44);
  uint64_t v8 = sub_251F34D20();
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ActionEndpoint(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v29 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v29;
  uint64_t v11 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(void *)uint64_t v12 = *(void *)v13;
  *(_WORD *)(v12 + 8) = *(_WORD *)(v13 + 8);
  uint64_t v14 = a3[10];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = *(void *)(a2 + v14 + 8);
  *(void *)uint64_t v15 = *(void *)(a2 + v14);
  *(void *)(v15 + 8) = v17;
  uint64_t v18 = *(void *)(a2 + v14 + 24);
  *(void *)(v15 + 16) = *(void *)(a2 + v14 + 16);
  *(void *)(v15 + 24) = v18;
  uint64_t v19 = *(void *)(a2 + v14 + 40);
  *(void *)(v15 + 32) = *(void *)(a2 + v14 + 32);
  *(void *)(v15 + 40) = v19;
  *(_DWORD *)(v15 + 48) = *(_DWORD *)(a2 + v14 + 48);
  uint64_t v20 = *(int *)(type metadata accessor for MatterTileMetadata() + 44);
  __dst = (void *)(v15 + v20);
  uint64_t v21 = (const void *)(v16 + v20);
  uint64_t v22 = sub_251F34D20();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v28 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v23 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v28(v21, 1, v22))
  {
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    memcpy(__dst, v21, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v23 + 16))(__dst, v21, v22);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56))(__dst, 0, 1, v22);
  }
  uint64_t v25 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  *(void *)(a1 + v25) = *(void *)(a2 + v25);
  uint64_t v26 = a3[14];
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  *(void *)(a1 + v26) = *(void *)(a2 + v26);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ActionEndpoint(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[7];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v11 = a3[9];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(void *)uint64_t v12 = *(void *)v13;
  *(_WORD *)(v12 + 8) = *(_WORD *)(v13 + 8);
  uint64_t v14 = a3[10];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(void *)uint64_t v15 = *(void *)(a2 + v14);
  *(void *)(v15 + 8) = *(void *)(a2 + v14 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v15 + 16) = *(void *)(v16 + 16);
  *(void *)(v15 + 24) = *(void *)(v16 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v15 + 32) = *(void *)(v16 + 32);
  *(void *)(v15 + 40) = *(void *)(v16 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v15 + 48) = *(unsigned char *)(v16 + 48);
  *(unsigned char *)(v15 + 49) = *(unsigned char *)(v16 + 49);
  *(unsigned char *)(v15 + 50) = *(unsigned char *)(v16 + 50);
  *(unsigned char *)(v15 + 51) = *(unsigned char *)(v16 + 51);
  uint64_t v17 = *(int *)(type metadata accessor for MatterTileMetadata() + 44);
  uint64_t v18 = (void *)(v15 + v17);
  uint64_t v19 = (void *)(v16 + v17);
  uint64_t v20 = sub_251F34D20();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v21 + 48);
  int v23 = v22(v18, 1, v20);
  int v24 = v22(v19, 1, v20);
  if (!v23)
  {
    if (!v24)
    {
      (*(void (**)(void *, void *, uint64_t))(v21 + 24))(v18, v19, v20);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v21 + 8))(v18, v20);
    goto LABEL_6;
  }
  if (v24)
  {
LABEL_6:
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    memcpy(v18, v19, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v21 + 16))(v18, v19, v20);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
LABEL_7:
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ActionEndpoint(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  uint64_t v9 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  *(void *)uint64_t v10 = *(void *)v11;
  *(_WORD *)(v10 + 8) = *(_WORD *)(v11 + 8);
  uint64_t v12 = a3[10];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  long long v15 = *(_OWORD *)(a2 + v12 + 16);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)(a2 + v12);
  *(_OWORD *)(v13 + 16) = v15;
  *(_OWORD *)(v13 + 32) = *(_OWORD *)(a2 + v12 + 32);
  *(_DWORD *)(v13 + 48) = *(_DWORD *)(a2 + v12 + 48);
  uint64_t v16 = *(int *)(type metadata accessor for MatterTileMetadata() + 44);
  uint64_t v17 = (void *)(v13 + v16);
  uint64_t v18 = (const void *)(v14 + v16);
  uint64_t v19 = sub_251F34D20();
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v20 + 32))(v17, v18, v19);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  uint64_t v22 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  *(void *)(a1 + v22) = *(void *)(a2 + v22);
  uint64_t v23 = a3[14];
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  *(void *)(a1 + v23) = *(void *)(a2 + v23);
  return a1;
}

uint64_t assignWithTake for ActionEndpoint(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[7];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  *(void *)uint64_t v14 = *(void *)v15;
  *(_WORD *)(v14 + 8) = *(_WORD *)(v15 + 8);
  uint64_t v16 = a3[10];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = *(void *)(a2 + v16 + 8);
  *(void *)uint64_t v17 = *(void *)(a2 + v16);
  *(void *)(v17 + 8) = v19;
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void *)(v18 + 24);
  *(void *)(v17 + 16) = *(void *)(v18 + 16);
  *(void *)(v17 + 24) = v20;
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void *)(v18 + 40);
  *(void *)(v17 + 32) = *(void *)(v18 + 32);
  *(void *)(v17 + 40) = v21;
  swift_bridgeObjectRelease();
  *(_DWORD *)(v17 + 48) = *(_DWORD *)(v18 + 48);
  uint64_t v22 = *(int *)(type metadata accessor for MatterTileMetadata() + 44);
  uint64_t v23 = (void *)(v17 + v22);
  int v24 = (void *)(v18 + v22);
  uint64_t v25 = sub_251F34D20();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
  int v28 = v27(v23, 1, v25);
  int v29 = v27(v24, 1, v25);
  if (!v28)
  {
    if (!v29)
    {
      (*(void (**)(void *, void *, uint64_t))(v26 + 40))(v23, v24, v25);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
    goto LABEL_6;
  }
  if (v29)
  {
LABEL_6:
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    memcpy(v23, v24, *(void *)(*(void *)(v30 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v26 + 32))(v23, v24, v25);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
LABEL_7:
  uint64_t v31 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  *(void *)(a1 + v31) = *(void *)(a2 + v31);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ActionEndpoint(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251E3DC34);
}

uint64_t sub_251E3DC34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = type metadata accessor for MatterTileMetadata();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 40);
    return v12(v14, a2, v13);
  }
}

uint64_t storeEnumTagSinglePayload for ActionEndpoint(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251E3DD74);
}

uint64_t sub_251E3DD74(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_251F34DA0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = type metadata accessor for MatterTileMetadata();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 40);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t sub_251E3DEA0()
{
  uint64_t result = sub_251F34DA0();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for MatterTileMetadata();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ActionEndpoint.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *uint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251E3E074);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActionEndpoint.CodingKeys()
{
  return &type metadata for ActionEndpoint.CodingKeys;
}

unint64_t sub_251E3E0B0()
{
  unint64_t result = qword_269BA4588;
  if (!qword_269BA4588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4588);
  }
  return result;
}

unint64_t sub_251E3E108()
{
  unint64_t result = qword_269BA4590;
  if (!qword_269BA4590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4590);
  }
  return result;
}

unint64_t sub_251E3E160()
{
  unint64_t result = qword_269BA4598;
  if (!qword_269BA4598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4598);
  }
  return result;
}

uint64_t sub_251E3E1B4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4449656D6F68 && a2 == 0xE600000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7344496D6F6F72 && a2 == 0xE700000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6168636165527369 && a2 == 0xEB00000000656C62 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x746E696F70646E65 && a2 == 0xEC00000068746150 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x617461646174656DLL && a2 == 0xE800000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x7453656369766564 && a2 == 0xEB00000000657461 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x7954656369766564 && a2 == 0xEB00000000736570 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x7372657473756C63 && a2 == 0xE800000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000251F6ADC0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 10;
    }
    else {
      return 11;
    }
  }
}

uint64_t sub_251E3E644(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_251E3E6AC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_251E3E70C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v0[10])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v0[17])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v0[26] != 1) {
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  return MEMORY[0x270FA0238](v0, 252, 7);
}

uint64_t sub_251E3E7B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(void *)a5 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4);
  *(void *)(a5 + 8) = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 32))(a3, a4);
  *(void *)(a5 + 16) = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 40))(a3, a4);
  *(void *)(a5 + 24) = v10;
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a4 + 72))(v20, a3, a4);
  sub_251E3F934((uint64_t)v20, (uint64_t)&v21);
  int v11 = v22;
  *(void *)(a5 + 32) = v21;
  *(_DWORD *)(a5 + 40) = v11;
  *(unsigned char *)(a5 + 44) = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 48))(a3, a4) & 1;
  uint64_t v12 = sub_251F34DA0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v20[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(a4 + 56))(a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 8))(a1, a3);
  uint64_t v16 = type metadata accessor for StaticAlarm();
  uint64_t v17 = *(void (**)(uint64_t, char *, uint64_t))(v13 + 32);
  v17(a5 + *(int *)(v16 + 36), v15, v12);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v17)(a5 + *(int *)(v16 + 40), a2, v12);
}

uint64_t StaticAlarm.hour.getter()
{
  return *(void *)v0;
}

uint64_t StaticAlarm.minute.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t StaticAlarm.title.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticAlarm.repeatSchedule.getter@<X0>(uint64_t a1@<X8>)
{
  int v2 = *(_DWORD *)(v1 + 40);
  *(void *)a1 = *(void *)(v1 + 32);
  *(_DWORD *)(a1 + 8) = v2;
  return swift_bridgeObjectRetain();
}

uint64_t StaticAlarm.isEnabled.getter()
{
  return *(unsigned __int8 *)(v0 + 44);
}

uint64_t StaticAlarm.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for StaticAlarm() + 36);
  uint64_t v4 = sub_251F34DA0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for StaticAlarm()
{
  uint64_t result = qword_269BA4700;
  if (!qword_269BA4700) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t StaticAlarm.parentContainerUUID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for StaticAlarm() + 40);
  uint64_t v4 = sub_251F34DA0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t StaticAlarm.hash(into:)()
{
  sub_251F36CB0();
  sub_251F36CB0();
  if (*(void *)(v0 + 24))
  {
    sub_251F36CC0();
    swift_bridgeObjectRetain();
    sub_251F357B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_251F36CC0();
  }
  uint64_t v1 = *(void *)(v0 + 32);
  sub_251F36CB0();
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = v1 + 32;
    do
    {
      ++v3;
      sub_251F36CB0();
      --v2;
    }
    while (v2);
  }
  sub_251F36CE0();
  sub_251F36CC0();
  type metadata accessor for StaticAlarm();
  sub_251F34DA0();
  sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
  sub_251F35610();
  return sub_251F35610();
}

unint64_t sub_251E3ECB0(char a1)
{
  unint64_t result = 1920298856;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6574756E696DLL;
      break;
    case 2:
      unint64_t result = 0x656C746974;
      break;
    case 3:
      unint64_t result = 0x6353746165706572;
      break;
    case 4:
      unint64_t result = 0x656C62616E457369;
      break;
    case 5:
      unint64_t result = 25705;
      break;
    case 6:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_251E3ED90()
{
  return sub_251E3ECB0(*v0);
}

uint64_t sub_251E3ED98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251E4293C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251E3EDC0(uint64_t a1)
{
  unint64_t v2 = sub_251E42780();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E3EDFC(uint64_t a1)
{
  unint64_t v2 = sub_251E42780();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticAlarm.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA45A0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251E42780();
  sub_251F36DA0();
  LOBYTE(v11) = 0;
  sub_251F36A00();
  if (!v2)
  {
    LOBYTE(v11) = 1;
    sub_251F36A00();
    LOBYTE(v11) = 2;
    sub_251F36910();
    int v9 = *(_DWORD *)(v3 + 40);
    uint64_t v11 = *(void *)(v3 + 32);
    int v12 = v9;
    char v13 = 3;
    sub_251E427D4();
    sub_251F36A20();
    LOBYTE(v11) = 4;
    sub_251F369E0();
    type metadata accessor for StaticAlarm();
    LOBYTE(v11) = 5;
    sub_251F34DA0();
    sub_251A1A8EC(&qword_26B21E348);
    sub_251F36A20();
    LOBYTE(v11) = 6;
    sub_251F36A20();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t StaticAlarm.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t StaticAlarm.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v30 = a2;
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA45B8);
  uint64_t v4 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for StaticAlarm();
  MEMORY[0x270FA5388](v7);
  int v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = a1[3];
  uint64_t v32 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_251E42780();
  uint64_t v11 = v6;
  sub_251F36D90();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v32);
  }
  uint64_t v12 = v4;
  LOBYTE(v33) = 0;
  uint64_t v13 = v31;
  uint64_t v14 = v9;
  *(void *)int v9 = sub_251F36860();
  LOBYTE(v33) = 1;
  *((void *)v9 + 1) = sub_251F36860();
  LOBYTE(v33) = 2;
  *((void *)v9 + 2) = sub_251F36790();
  *((void *)v9 + 3) = v15;
  char v35 = 3;
  sub_251E42828();
  sub_251F36880();
  int v16 = v34;
  *((void *)v9 + 4) = v33;
  *((_DWORD *)v9 + 10) = v16;
  LOBYTE(v33) = 4;
  char v17 = sub_251F36840();
  uint64_t v27 = 0;
  v9[44] = v17 & 1;
  uint64_t v18 = sub_251F34DA0();
  int v28 = v25;
  uint64_t v26 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  v25[2] = v19;
  uint64_t v29 = (uint64_t)v14;
  unint64_t v20 = (v19 + 15) & 0xFFFFFFFFFFFFFFF0;
  LOBYTE(v33) = 5;
  v25[1] = sub_251A1A8EC(&qword_269B9CC80);
  sub_251F36880();
  uint64_t v21 = v29 + *(int *)(v7 + 36);
  uint64_t v27 = *(uint64_t (**)(uint64_t, char *, uint64_t))(v26 + 32);
  uint64_t v22 = v27(v21, (char *)v25 - v20, v18);
  int v28 = v25;
  MEMORY[0x270FA5388](v22);
  LOBYTE(v33) = 6;
  sub_251F36880();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v11, v13);
  uint64_t v23 = v29;
  v27(v29 + *(int *)(v7 + 40), (char *)v25 - v20, v18);
  sub_251E4287C(v23, v30);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v32);
  return sub_251E428E0(v23);
}

uint64_t sub_251E3F654()
{
  return sub_251F36D00();
}

uint64_t sub_251E3F698()
{
  return sub_251F36D00();
}

uint64_t sub_251E3F6D4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticAlarm.init(from:)(a1, a2);
}

uint64_t sub_251E3F6EC(void *a1)
{
  return StaticAlarm.encode(to:)(a1);
}

uint64_t sub_251E3F704@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 36);
  uint64_t v5 = sub_251F34DA0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t sub_251E3F774(void *a1, void *a2, uint64_t a3)
{
  BOOL v3 = *a1 < *a2;
  if (*a1 == *a2)
  {
    uint64_t v4 = a1[1];
    uint64_t v5 = a2[1];
    BOOL v3 = v4 < v5;
    if (v4 == v5) {
      return MEMORY[0x2533A9CA0]((char *)a1 + *(int *)(a3 + 36), (char *)a2 + *(int *)(a3 + 36)) & 1;
    }
  }
  return v3;
}

BOOL static StaticAlarm.< infix(_:_:)(void *a1, void *a2)
{
  BOOL v2 = *a1 < *a2;
  if (*a1 != *a2) {
    return v2;
  }
  uint64_t v5 = a1[1];
  uint64_t v6 = a2[1];
  BOOL v2 = v5 < v6;
  if (v5 != v6) {
    return v2;
  }
  uint64_t v7 = type metadata accessor for StaticAlarm();
  return MEMORY[0x2533A9CA0]((char *)a1 + *(int *)(v7 + 36), (char *)a2 + *(int *)(v7 + 36)) & 1;
}

BOOL sub_251E3F830(void *a1, void *a2, uint64_t a3)
{
  BOOL v3 = *a2 < *a1;
  if (*a2 == *a1 && (uint64_t v4 = a2[1], v5 = a1[1], v3 = v4 < v5, v4 == v5)) {
    char v6 = MEMORY[0x2533A9CA0]((char *)a2 + *(int *)(a3 + 36), (char *)a1 + *(int *)(a3 + 36));
  }
  else {
    char v6 = v3;
  }
  return (v6 & 1) == 0;
}

BOOL sub_251E3F888(void *a1, void *a2, uint64_t a3)
{
  BOOL v3 = *a1 < *a2;
  if (*a1 == *a2 && (uint64_t v4 = a1[1], v5 = a2[1], v3 = v4 < v5, v4 == v5)) {
    char v6 = MEMORY[0x2533A9CA0]((char *)a1 + *(int *)(a3 + 36), (char *)a2 + *(int *)(a3 + 36));
  }
  else {
    char v6 = v3;
  }
  return (v6 & 1) == 0;
}

uint64_t sub_251E3F8DC(void *a1, void *a2, uint64_t a3)
{
  BOOL v3 = *a2 < *a1;
  if (*a2 == *a1)
  {
    uint64_t v4 = a2[1];
    uint64_t v5 = a1[1];
    BOOL v3 = v4 < v5;
    if (v4 == v5) {
      return MEMORY[0x2533A9CA0]((char *)a2 + *(int *)(a3 + 36), (char *)a1 + *(int *)(a3 + 36)) & 1;
    }
  }
  return v3;
}

uint64_t sub_251E3F934@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_251E44B54(a1, (uint64_t)&v38);
  if (!v39)
  {
    sub_251E44BBC(a1);
    uint64_t result = sub_251E44BBC((uint64_t)&v38);
    int v7 = 0;
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
LABEL_46:
    *(void *)a2 = v10;
    *(_DWORD *)(a2 + 8) = v7;
    return result;
  }
  sub_251A1A444(&v38, (uint64_t)v40);
  uint64_t v4 = v41;
  uint64_t v5 = v42;
  __swift_project_boxed_opaque_existential_1(v40, v41);
  unint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  if (!HIDWORD(v6))
  {
    int v7 = v6;
    uint64_t v8 = v41;
    uint64_t v9 = v42;
    __swift_project_boxed_opaque_existential_1(v40, v41);
    if ((*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(1, v8, v9))
    {
      uint64_t v10 = sub_251F10DA4(0, 1, 1, MEMORY[0x263F8EE78]);
      unint64_t v12 = *((void *)v10 + 2);
      unint64_t v11 = *((void *)v10 + 3);
      if (v12 >= v11 >> 1) {
        uint64_t v10 = sub_251F10DA4((char *)(v11 > 1), v12 + 1, 1, v10);
      }
      *((void *)v10 + 2) = v12 + 1;
      v10[v12 + 32] = 0;
    }
    else
    {
      uint64_t v10 = (char *)MEMORY[0x263F8EE78];
    }
    uint64_t v14 = v41;
    uint64_t v15 = v42;
    __swift_project_boxed_opaque_existential_1(v40, v41);
    if ((*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(2, v14, v15))
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v10 = sub_251F10DA4(0, *((void *)v10 + 2) + 1, 1, v10);
      }
      unint64_t v17 = *((void *)v10 + 2);
      unint64_t v16 = *((void *)v10 + 3);
      if (v17 >= v16 >> 1) {
        uint64_t v10 = sub_251F10DA4((char *)(v16 > 1), v17 + 1, 1, v10);
      }
      *((void *)v10 + 2) = v17 + 1;
      v10[v17 + 32] = 1;
    }
    uint64_t v18 = v41;
    uint64_t v19 = v42;
    __swift_project_boxed_opaque_existential_1(v40, v41);
    if ((*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(4, v18, v19))
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v10 = sub_251F10DA4(0, *((void *)v10 + 2) + 1, 1, v10);
      }
      unint64_t v21 = *((void *)v10 + 2);
      unint64_t v20 = *((void *)v10 + 3);
      if (v21 >= v20 >> 1) {
        uint64_t v10 = sub_251F10DA4((char *)(v20 > 1), v21 + 1, 1, v10);
      }
      *((void *)v10 + 2) = v21 + 1;
      v10[v21 + 32] = 2;
    }
    uint64_t v22 = v41;
    uint64_t v23 = v42;
    __swift_project_boxed_opaque_existential_1(v40, v41);
    if ((*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(8, v22, v23))
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v10 = sub_251F10DA4(0, *((void *)v10 + 2) + 1, 1, v10);
      }
      unint64_t v25 = *((void *)v10 + 2);
      unint64_t v24 = *((void *)v10 + 3);
      if (v25 >= v24 >> 1) {
        uint64_t v10 = sub_251F10DA4((char *)(v24 > 1), v25 + 1, 1, v10);
      }
      *((void *)v10 + 2) = v25 + 1;
      v10[v25 + 32] = 3;
    }
    uint64_t v26 = v41;
    uint64_t v27 = v42;
    __swift_project_boxed_opaque_existential_1(v40, v41);
    if ((*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27 + 16))(16, v26, v27))
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v10 = sub_251F10DA4(0, *((void *)v10 + 2) + 1, 1, v10);
      }
      unint64_t v29 = *((void *)v10 + 2);
      unint64_t v28 = *((void *)v10 + 3);
      if (v29 >= v28 >> 1) {
        uint64_t v10 = sub_251F10DA4((char *)(v28 > 1), v29 + 1, 1, v10);
      }
      *((void *)v10 + 2) = v29 + 1;
      v10[v29 + 32] = 4;
    }
    uint64_t v30 = v41;
    uint64_t v31 = v42;
    __swift_project_boxed_opaque_existential_1(v40, v41);
    if ((*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v31 + 16))(32, v30, v31))
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v10 = sub_251F10DA4(0, *((void *)v10 + 2) + 1, 1, v10);
      }
      unint64_t v33 = *((void *)v10 + 2);
      unint64_t v32 = *((void *)v10 + 3);
      if (v33 >= v32 >> 1) {
        uint64_t v10 = sub_251F10DA4((char *)(v32 > 1), v33 + 1, 1, v10);
      }
      *((void *)v10 + 2) = v33 + 1;
      v10[v33 + 32] = 5;
    }
    uint64_t v34 = v41;
    uint64_t v35 = v42;
    __swift_project_boxed_opaque_existential_1(v40, v41);
    if ((*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v35 + 16))(64, v34, v35))
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v10 = sub_251F10DA4(0, *((void *)v10 + 2) + 1, 1, v10);
      }
      unint64_t v37 = *((void *)v10 + 2);
      unint64_t v36 = *((void *)v10 + 3);
      if (v37 >= v36 >> 1) {
        uint64_t v10 = sub_251F10DA4((char *)(v36 > 1), v37 + 1, 1, v10);
      }
      *((void *)v10 + 2) = v37 + 1;
      v10[v37 + 32] = 6;
    }
    sub_251E44BBC(a1);
    uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v40);
    goto LABEL_46;
  }
  uint64_t result = sub_251F36670();
  __break(1u);
  return result;
}

uint64_t StaticAlarm.time.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v26 = a1;
  uint64_t v27 = sub_251F34880();
  uint64_t v25 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  BOOL v2 = (char *)&v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_251F34E50();
  uint64_t v3 = *(void *)(v22 - 8);
  uint64_t v23 = *(void *)(v3 + 64);
  MEMORY[0x270FA5388](v22);
  unint64_t v24 = (v4 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v5 = (char *)&v21 - v24;
  sub_251F34E10();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA45C8);
  uint64_t v6 = sub_251F34E40();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 72);
  unint64_t v9 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_251F476E0;
  unint64_t v11 = *(void (**)(unint64_t, void, uint64_t))(v7 + 104);
  v11(v10 + v9, *MEMORY[0x263F078B8], v6);
  v11(v10 + v9 + v8, *MEMORY[0x263F07888], v6);
  v11(v10 + v9 + 2 * v8, *MEMORY[0x263F078E0], v6);
  v11(v10 + v9 + 3 * v8, *MEMORY[0x263F07858], v6);
  v11(v10 + v9 + 4 * v8, *MEMORY[0x263F078B0], v6);
  v11(v10 + v9 + 5 * v8, *MEMORY[0x263F07898], v6);
  sub_251C0A918(v10);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v12 = sub_251F34D20();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34CF0();
  sub_251F34E00();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  unint64_t v16 = *(void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v17 = v22;
  v16(v5, v22);
  sub_251F34810();
  uint64_t v18 = sub_251F34840();
  MEMORY[0x270FA5388](v18);
  uint64_t v19 = (char *)&v21 - v24;
  sub_251F34E10();
  sub_251F34E20();
  v16(v19, v17);
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v2, v27);
}

BOOL static StaticAlarm.RepeatSchedule.Day.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t StaticAlarm.RepeatSchedule.Day.hash(into:)()
{
  return sub_251F36CB0();
}

uint64_t sub_251E40340()
{
  uint64_t result = 0x7961646E6F6DLL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x79616473657574;
      break;
    case 2:
      uint64_t result = 0x616473656E646577;
      break;
    case 3:
      uint64_t result = 0x7961647372756874;
      break;
    case 4:
      uint64_t result = 0x796164697266;
      break;
    case 5:
      uint64_t result = 0x7961647275746173;
      break;
    case 6:
      uint64_t result = 0x7961646E7573;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_251E4040C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251E447A0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251E40434(uint64_t a1)
{
  unint64_t v2 = sub_251E42C18();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E40470(uint64_t a1)
{
  unint64_t v2 = sub_251E42C18();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251E404AC(uint64_t a1)
{
  unint64_t v2 = sub_251E42D14();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E404E8(uint64_t a1)
{
  unint64_t v2 = sub_251E42D14();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251E40524(uint64_t a1)
{
  unint64_t v2 = sub_251E42E64();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E40560(uint64_t a1)
{
  unint64_t v2 = sub_251E42E64();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251E4059C(uint64_t a1)
{
  unint64_t v2 = sub_251E42CC0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E405D8(uint64_t a1)
{
  unint64_t v2 = sub_251E42CC0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251E40614(uint64_t a1)
{
  unint64_t v2 = sub_251E42C6C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E40650(uint64_t a1)
{
  unint64_t v2 = sub_251E42C6C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251E4068C(uint64_t a1)
{
  unint64_t v2 = sub_251E42D68();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E406C8(uint64_t a1)
{
  unint64_t v2 = sub_251E42D68();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251E40704(uint64_t a1)
{
  unint64_t v2 = sub_251E42E10();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E40740(uint64_t a1)
{
  unint64_t v2 = sub_251E42E10();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251E4077C(uint64_t a1)
{
  unint64_t v2 = sub_251E42DBC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E407B8(uint64_t a1)
{
  unint64_t v2 = sub_251E42DBC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticAlarm.RepeatSchedule.Day.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA45D0);
  uint64_t v46 = *(void *)(v3 - 8);
  uint64_t v47 = v3;
  MEMORY[0x270FA5388](v3);
  char v45 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA45D8);
  uint64_t v43 = *(void *)(v5 - 8);
  uint64_t v44 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v42 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA45E0);
  uint64_t v40 = *(void *)(v7 - 8);
  uint64_t v41 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v39 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA45E8);
  uint64_t v37 = *(void *)(v9 - 8);
  uint64_t v38 = v9;
  MEMORY[0x270FA5388](v9);
  unint64_t v36 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA45F0);
  uint64_t v34 = *(void *)(v11 - 8);
  uint64_t v35 = v11;
  MEMORY[0x270FA5388](v11);
  unint64_t v33 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA45F8);
  uint64_t v31 = *(void *)(v13 - 8);
  uint64_t v32 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4600);
  uint64_t v30 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4608);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v48 = v19;
  uint64_t v49 = v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251E42C18();
  sub_251F36DA0();
  switch(v23)
  {
    case 1:
      char v51 = 1;
      sub_251E42E10();
      uint64_t v26 = v48;
      sub_251F36900();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v15, v32);
      goto LABEL_10;
    case 2:
      char v52 = 2;
      sub_251E42DBC();
      uint64_t v27 = v33;
      uint64_t v26 = v48;
      sub_251F36900();
      uint64_t v29 = v34;
      uint64_t v28 = v35;
      goto LABEL_9;
    case 3:
      char v53 = 3;
      sub_251E42D68();
      uint64_t v27 = v36;
      uint64_t v26 = v48;
      sub_251F36900();
      uint64_t v29 = v37;
      uint64_t v28 = v38;
      goto LABEL_9;
    case 4:
      char v54 = 4;
      sub_251E42D14();
      uint64_t v27 = v39;
      uint64_t v26 = v48;
      sub_251F36900();
      uint64_t v29 = v40;
      uint64_t v28 = v41;
      goto LABEL_9;
    case 5:
      char v55 = 5;
      sub_251E42CC0();
      uint64_t v27 = v42;
      uint64_t v26 = v48;
      sub_251F36900();
      uint64_t v29 = v43;
      uint64_t v28 = v44;
      goto LABEL_9;
    case 6:
      char v56 = 6;
      sub_251E42C6C();
      uint64_t v27 = v45;
      uint64_t v26 = v48;
      sub_251F36900();
      uint64_t v29 = v46;
      uint64_t v28 = v47;
LABEL_9:
      (*(void (**)(char *, uint64_t))(v29 + 8))(v27, v28);
LABEL_10:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v22, v26);
      break;
    default:
      char v50 = 0;
      sub_251E42E64();
      uint64_t v24 = v48;
      sub_251F36900();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v18, v16);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v22, v24);
      break;
  }
  return result;
}

uint64_t StaticAlarm.RepeatSchedule.Day.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t StaticAlarm.RepeatSchedule.Day.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  v64 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4650);
  uint64_t v57 = *(void *)(v3 - 8);
  uint64_t v58 = v3;
  MEMORY[0x270FA5388](v3);
  v60 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4658);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v55 = v5;
  uint64_t v56 = v6;
  MEMORY[0x270FA5388](v5);
  v63 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4660);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v53 = v8;
  uint64_t v54 = v9;
  MEMORY[0x270FA5388](v8);
  v62 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4668);
  uint64_t v51 = *(void *)(v11 - 8);
  uint64_t v52 = v11;
  MEMORY[0x270FA5388](v11);
  v61 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4670);
  uint64_t v49 = *(void *)(v13 - 8);
  uint64_t v50 = v13;
  MEMORY[0x270FA5388](v13);
  v59 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4678);
  uint64_t v47 = *(void *)(v15 - 8);
  uint64_t v48 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4680);
  uint64_t v46 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4688);
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)&v42 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = a1[3];
  v65 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v25);
  sub_251E42C18();
  uint64_t v26 = v66;
  sub_251F36D90();
  if (!v26)
  {
    uint64_t v44 = v20;
    uint64_t v43 = v18;
    char v45 = v17;
    uint64_t v28 = v61;
    uint64_t v27 = v62;
    uint64_t v29 = v63;
    uint64_t v30 = v64;
    uint64_t v66 = v22;
    uint64_t v31 = v24;
    uint64_t v32 = sub_251F368E0();
    if (*(void *)(v32 + 16) == 1)
    {
      char v33 = *(unsigned char *)(v32 + 32);
      switch(v33)
      {
        case 1:
          char v68 = 1;
          sub_251E42E10();
          uint64_t v27 = v45;
          sub_251F36770();
          uint64_t v40 = v47;
          uint64_t v39 = v48;
          goto LABEL_13;
        case 2:
          char v69 = 2;
          sub_251E42DBC();
          uint64_t v27 = v59;
          sub_251F36770();
          uint64_t v40 = v49;
          uint64_t v39 = v50;
          goto LABEL_13;
        case 3:
          char v70 = 3;
          sub_251E42D68();
          uint64_t v27 = v28;
          sub_251F36770();
          uint64_t v40 = v51;
          uint64_t v39 = v52;
          goto LABEL_13;
        case 4:
          char v71 = 4;
          sub_251E42D14();
          sub_251F36770();
          uint64_t v39 = v53;
          uint64_t v40 = v54;
          goto LABEL_13;
        case 5:
          char v72 = 5;
          sub_251E42CC0();
          sub_251F36770();
          (*(void (**)(char *, uint64_t))(v56 + 8))(v29, v55);
          break;
        case 6:
          char v73 = 6;
          sub_251E42C6C();
          uint64_t v27 = v60;
          sub_251F36770();
          uint64_t v40 = v57;
          uint64_t v39 = v58;
LABEL_13:
          (*(void (**)(char *, uint64_t))(v40 + 8))(v27, v39);
          break;
        default:
          char v67 = 0;
          sub_251E42E64();
          uint64_t v34 = v44;
          sub_251F36770();
          (*(void (**)(char *, uint64_t))(v46 + 8))(v34, v43);
          break;
      }
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v66 + 8))(v31, v21);
      *uint64_t v30 = v33;
    }
    else
    {
      uint64_t v35 = sub_251F36490();
      swift_allocError();
      uint64_t v36 = v21;
      uint64_t v38 = v37;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D440);
      *uint64_t v38 = &type metadata for StaticAlarm.RepeatSchedule.Day;
      sub_251F36780();
      sub_251F36480();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v35 - 8) + 104))(v38, *MEMORY[0x263F8DCB0], v35);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v66 + 8))(v24, v36);
    }
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v65);
}

uint64_t sub_251E41720@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return StaticAlarm.RepeatSchedule.Day.init(from:)(a1, a2);
}

uint64_t sub_251E41738(void *a1)
{
  return StaticAlarm.RepeatSchedule.Day.encode(to:)(a1);
}

uint64_t StaticAlarm.RepeatSchedule.days.getter()
{
  return swift_bridgeObjectRetain();
}

id StaticAlarm.RepeatSchedule.detailDescription.getter()
{
  id result = (id)DetailDateMaskToString();
  if (result)
  {
    uint64_t v1 = result;
    uint64_t v2 = sub_251F356F0();

    return (id)v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t StaticAlarm.RepeatSchedule.hash(into:)()
{
  uint64_t v1 = *v0;
  sub_251F36CB0();
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = v1 + 32;
    do
    {
      ++v3;
      sub_251F36CB0();
      --v2;
    }
    while (v2);
  }
  return sub_251F36CE0();
}

uint64_t sub_251E41810()
{
  if (*v0) {
    return 0x65756C6156776172;
  }
  else {
    return 1937334628;
  }
}

uint64_t sub_251E41844@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251E44A70(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251E4186C(uint64_t a1)
{
  unint64_t v2 = sub_251E42EB8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E418A8(uint64_t a1)
{
  unint64_t v2 = sub_251E42EB8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticAlarm.RepeatSchedule.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4690);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  v10[2] = *((_DWORD *)v1 + 2);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251E42EB8();
  sub_251F36DA0();
  uint64_t v13 = v8;
  char v12 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA46A0);
  sub_251E42F60(&qword_269BA46A8, (void (*)(void))sub_251E42F0C);
  sub_251F36A20();
  if (!v2)
  {
    char v11 = 1;
    sub_251F36A60();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t StaticAlarm.RepeatSchedule.hashValue.getter()
{
  uint64_t v1 = *v0;
  sub_251F36CA0();
  sub_251F36CB0();
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = v1 + 32;
    do
    {
      ++v3;
      sub_251F36CB0();
      --v2;
    }
    while (v2);
  }
  sub_251F36CE0();
  return sub_251F36D00();
}

uint64_t StaticAlarm.RepeatSchedule.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA46B8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251E42EB8();
  sub_251F36D90();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA46A0);
  v12[15] = 0;
  sub_251E42F60(&qword_269BA46C0, (void (*)(void))sub_251E42FD0);
  sub_251F36880();
  uint64_t v9 = v13;
  v12[14] = 1;
  swift_bridgeObjectRetain();
  int v10 = sub_251F368C0();
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  *(void *)a2 = v9;
  *(_DWORD *)(a2 + 8) = v10;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_251E41D48()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 16);
  sub_251F36CB0();
  if (v2)
  {
    uint64_t v3 = v1 + 32;
    do
    {
      ++v3;
      sub_251F36CB0();
      --v2;
    }
    while (v2);
  }
  return sub_251F36CE0();
}

uint64_t sub_251E41DA8()
{
  uint64_t v1 = *v0;
  sub_251F36CA0();
  uint64_t v2 = *(void *)(v1 + 16);
  sub_251F36CB0();
  if (v2)
  {
    uint64_t v3 = v1 + 32;
    do
    {
      ++v3;
      sub_251F36CB0();
      --v2;
    }
    while (v2);
  }
  sub_251F36CE0();
  return sub_251F36D00();
}

uint64_t sub_251E41E24@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticAlarm.RepeatSchedule.init(from:)(a1, a2);
}

uint64_t sub_251E41E3C(void *a1)
{
  return StaticAlarm.RepeatSchedule.encode(to:)(a1);
}

Swift::Void __swiftcall StaticAlarm.setEnable(_:)(Swift::Bool a1)
{
  uint64_t v2 = type metadata accessor for StaticAlarm();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_251F35CD0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  sub_251E4287C(v1, (uint64_t)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v9 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = 0;
  *(void *)(v10 + 24) = 0;
  sub_251E43154((uint64_t)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v10 + v9);
  sub_251ACBEF4((uint64_t)v7, (uint64_t)&unk_269BA46D8, v10);
  swift_release();
}

uint64_t sub_251E41FE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a4;
  return MEMORY[0x270FA2498](sub_251E42000, 0, 0);
}

uint64_t sub_251E42000()
{
  *(void *)(v0 + 32) = sub_251F35C80();
  *(void *)(v0 + 40) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251E42098, v2, v1);
}

uint64_t sub_251E42098()
{
  swift_release();
  if (qword_26B21E6D8 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251E42130, 0, 0);
}

uint64_t sub_251E42130()
{
  *(void *)(v0 + 48) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251E421BC, v2, v1);
}

uint64_t sub_251E421BC()
{
  uint64_t v1 = v0[3];
  swift_release();
  uint64_t v2 = type metadata accessor for StaticAlarm();
  uint64_t v3 = v1 + *(int *)(v2 + 36);
  uint64_t v4 = v1 + *(int *)(v2 + 40);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[7] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_251E44C1C;
  uint64_t v6 = v0[2];
  return CoordinationDataModel.toggleAlarm(staticAlarmID:parentContainerID:)(v6, v3, v4);
}

uint64_t StaticAlarm.delete()(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_251E422AC, 0, 0);
}

uint64_t sub_251E422AC()
{
  *(void *)(v0 + 32) = sub_251F35C80();
  *(void *)(v0 + 40) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251E42344, v2, v1);
}

uint64_t sub_251E42344()
{
  swift_release();
  if (qword_26B21E6D8 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251E423DC, 0, 0);
}

uint64_t sub_251E423DC()
{
  *(void *)(v0 + 48) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251E42468, v2, v1);
}

uint64_t sub_251E42468()
{
  uint64_t v1 = v0[3];
  swift_release();
  uint64_t v2 = type metadata accessor for StaticAlarm();
  uint64_t v3 = v1 + *(int *)(v2 + 36);
  uint64_t v4 = v1 + *(int *)(v2 + 40);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[7] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_251E42538;
  uint64_t v6 = v0[2];
  return CoordinationDataModel.deleteAlarm(_:parentContainerID:)(v6, v3, v4);
}

uint64_t sub_251E42538()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

BOOL _s13HomeDataModel11StaticAlarmV14RepeatScheduleV2eeoiySbAE_AEtFZ_0(_DWORD *a1, _DWORD *a2)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(*(void *)a1 + 16);
  if (v4 == *(void *)(*(void *)a2 + 16))
  {
    if (v4) {
      BOOL v5 = v2 == v3;
    }
    else {
      BOOL v5 = 1;
    }
    if (v5) {
      return a1[2] == a2[2];
    }
    uint64_t v6 = (unsigned __int8 *)(v2 + 32);
    uint64_t v7 = (unsigned __int8 *)(v3 + 32);
    while (1)
    {
      int v9 = *v6++;
      int v8 = v9;
      int v10 = *v7++;
      if (v8 != v10) {
        break;
      }
      if (!--v4) {
        return a1[2] == a2[2];
      }
    }
  }
  return 0;
}

uint64_t _s13HomeDataModel11StaticAlarmV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 != *(void *)a2 || *(void *)(a1 + 8) != *(void *)(a2 + 8)) {
    return 0;
  }
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v5 = *(void *)(a2 + 24);
  if (v4)
  {
    if (!v5 || (*(void *)(a1 + 16) != *(void *)(a2 + 16) || v4 != v5) && (sub_251F36B10() & 1) == 0) {
      return 0;
    }
  }
  else if (v5)
  {
    return 0;
  }
  int v6 = *(_DWORD *)(a1 + 40);
  int v7 = *(_DWORD *)(a2 + 40);
  if (sub_251AB63C8(*(void *)(a1 + 32), *(void *)(a2 + 32))
    && v6 == v7
    && *(unsigned __int8 *)(a1 + 44) == *(unsigned __int8 *)(a2 + 44))
  {
    type metadata accessor for StaticAlarm();
    if (sub_251F34D70()) {
      return sub_251F34D70() & 1;
    }
  }
  return 0;
}

unint64_t sub_251E42780()
{
  unint64_t result = qword_269BA45A8;
  if (!qword_269BA45A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA45A8);
  }
  return result;
}

unint64_t sub_251E427D4()
{
  unint64_t result = qword_269BA45B0;
  if (!qword_269BA45B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA45B0);
  }
  return result;
}

unint64_t sub_251E42828()
{
  unint64_t result = qword_269BA45C0;
  if (!qword_269BA45C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA45C0);
  }
  return result;
}

uint64_t sub_251E4287C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticAlarm();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_251E428E0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StaticAlarm();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_251E4293C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1920298856 && a2 == 0xE400000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574756E696DLL && a2 == 0xE600000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6353746165706572 && a2 == 0xEE00656C75646568 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656C62616E457369 && a2 == 0xE900000000000064 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 25705 && a2 == 0xE200000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000251F723F0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

unint64_t sub_251E42C18()
{
  unint64_t result = qword_269BA4610;
  if (!qword_269BA4610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4610);
  }
  return result;
}

unint64_t sub_251E42C6C()
{
  unint64_t result = qword_269BA4618;
  if (!qword_269BA4618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4618);
  }
  return result;
}

unint64_t sub_251E42CC0()
{
  unint64_t result = qword_269BA4620;
  if (!qword_269BA4620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4620);
  }
  return result;
}

unint64_t sub_251E42D14()
{
  unint64_t result = qword_269BA4628;
  if (!qword_269BA4628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4628);
  }
  return result;
}

unint64_t sub_251E42D68()
{
  unint64_t result = qword_269BA4630;
  if (!qword_269BA4630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4630);
  }
  return result;
}

unint64_t sub_251E42DBC()
{
  unint64_t result = qword_269BA4638;
  if (!qword_269BA4638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4638);
  }
  return result;
}

unint64_t sub_251E42E10()
{
  unint64_t result = qword_269BA4640;
  if (!qword_269BA4640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4640);
  }
  return result;
}

unint64_t sub_251E42E64()
{
  unint64_t result = qword_269BA4648;
  if (!qword_269BA4648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4648);
  }
  return result;
}

unint64_t sub_251E42EB8()
{
  unint64_t result = qword_269BA4698;
  if (!qword_269BA4698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4698);
  }
  return result;
}

unint64_t sub_251E42F0C()
{
  unint64_t result = qword_269BA46B0;
  if (!qword_269BA46B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA46B0);
  }
  return result;
}

uint64_t sub_251E42F60(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269BA46A0);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_251E42FD0()
{
  unint64_t result = qword_269BA46C8;
  if (!qword_269BA46C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_269BA46C8);
  }
  return result;
}

uint64_t sub_251E43024()
{
  uint64_t v1 = (int *)(type metadata accessor for StaticAlarm() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  swift_unknownObjectRelease();
  uint64_t v6 = v0 + v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = v0 + v3 + v1[11];
  uint64_t v8 = sub_251F34DA0();
  int v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  v9(v7, v8);
  v9(v6 + v1[12], v8);
  return MEMORY[0x270FA0238](v0, v4, v5);
}

uint64_t sub_251E43154(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticAlarm();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_251E431B8(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for StaticAlarm() - 8);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[2] = a1;
  v6[3] = v5;
  v6[1] = sub_251AB3A34;
  return MEMORY[0x270FA2498](sub_251E42000, 0, 0);
}

unint64_t sub_251E432A4()
{
  unint64_t result = qword_269BA46E8;
  if (!qword_269BA46E8)
  {
    type metadata accessor for StaticAlarm();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA46E8);
  }
  return result;
}

uint64_t sub_251E432FC()
{
  return sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
}

unint64_t sub_251E43328()
{
  unint64_t result = qword_269BA46F0;
  if (!qword_269BA46F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA46F0);
  }
  return result;
}

unint64_t sub_251E43380()
{
  unint64_t result = qword_269BA46F8;
  if (!qword_269BA46F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA46F8);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for StaticAlarm(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v7 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v7;
    uint64_t v8 = a2[4];
    *(_DWORD *)(a1 + 40) = *((_DWORD *)a2 + 10);
    *(unsigned char *)(a1 + 44) = *((unsigned char *)a2 + 44);
    uint64_t v9 = *(int *)(a3 + 36);
    uint64_t v10 = a1 + v9;
    uint64_t v11 = (uint64_t)a2 + v9;
    *(void *)(a1 + 32) = v8;
    uint64_t v12 = sub_251F34DA0();
    uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    v13((uint64_t)v4 + *(int *)(a3 + 40), (uint64_t)a2 + *(int *)(a3 + 40), v12);
  }
  return v4;
}

uint64_t destroy for StaticAlarm(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = sub_251F34DA0();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v8)((void *)(v5 - 8), v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 40);
  return v8(v6, v5);
}

uint64_t initializeWithCopy for StaticAlarm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 44) = *(unsigned char *)(a2 + 44);
  uint64_t v8 = *(int *)(a3 + 36);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(void *)(a1 + 32) = v7;
  uint64_t v11 = sub_251F34DA0();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  v12(a1 + *(int *)(a3 + 40), a2 + *(int *)(a3 + 40), v11);
  return a1;
}

uint64_t assignWithCopy for StaticAlarm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 44) = *(unsigned char *)(a2 + 44);
  uint64_t v6 = *(int *)(a3 + 36);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_251F34DA0();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(a1 + *(int *)(a3 + 40), a2 + *(int *)(a3 + 40), v9);
  return a1;
}

uint64_t initializeWithTake for StaticAlarm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 44) = *(unsigned char *)(a2 + 44);
  uint64_t v7 = *(int *)(a3 + 36);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_251F34DA0();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v11(a1 + *(int *)(a3 + 40), a2 + *(int *)(a3 + 40), v10);
  return a1;
}

uint64_t assignWithTake for StaticAlarm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 44) = *(unsigned char *)(a2 + 44);
  uint64_t v7 = *(int *)(a3 + 36);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_251F34DA0();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v11(a1 + *(int *)(a3 + 40), a2 + *(int *)(a3 + 40), v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for StaticAlarm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251E4397C);
}

uint64_t sub_251E4397C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 32);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_251F34DA0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 36);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for StaticAlarm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251E43A40);
}

uint64_t sub_251E43A40(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 32) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_251F34DA0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 36);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_251E43AE8()
{
  uint64_t result = sub_251F34DA0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for StaticAlarm.RepeatSchedule(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for StaticAlarm.RepeatSchedule(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  return a1;
}

uint64_t __swift_memcpy12_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_DWORD *)(result + 8) = *((_DWORD *)a2 + 2);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t assignWithTake for StaticAlarm.RepeatSchedule(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for StaticAlarm.RepeatSchedule(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 12)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StaticAlarm.RepeatSchedule(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_DWORD *)(result + 8) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 12) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 12) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticAlarm.RepeatSchedule()
{
  return &type metadata for StaticAlarm.RepeatSchedule;
}

ValueMetadata *type metadata accessor for StaticAlarm.RepeatSchedule.Day()
{
  return &type metadata for StaticAlarm.RepeatSchedule.Day;
}

unsigned char *storeEnumTagSinglePayload for StaticAlarm.RepeatSchedule.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251E43DFCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticAlarm.RepeatSchedule.CodingKeys()
{
  return &type metadata for StaticAlarm.RepeatSchedule.CodingKeys;
}

ValueMetadata *type metadata accessor for StaticAlarm.RepeatSchedule.Day.CodingKeys()
{
  return &type metadata for StaticAlarm.RepeatSchedule.Day.CodingKeys;
}

ValueMetadata *type metadata accessor for StaticAlarm.RepeatSchedule.Day.MondayCodingKeys()
{
  return &type metadata for StaticAlarm.RepeatSchedule.Day.MondayCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAlarm.RepeatSchedule.Day.TuesdayCodingKeys()
{
  return &type metadata for StaticAlarm.RepeatSchedule.Day.TuesdayCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAlarm.RepeatSchedule.Day.WednesdayCodingKeys()
{
  return &type metadata for StaticAlarm.RepeatSchedule.Day.WednesdayCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAlarm.RepeatSchedule.Day.ThursdayCodingKeys()
{
  return &type metadata for StaticAlarm.RepeatSchedule.Day.ThursdayCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAlarm.RepeatSchedule.Day.FridayCodingKeys()
{
  return &type metadata for StaticAlarm.RepeatSchedule.Day.FridayCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAlarm.RepeatSchedule.Day.SaturdayCodingKeys()
{
  return &type metadata for StaticAlarm.RepeatSchedule.Day.SaturdayCodingKeys;
}

ValueMetadata *type metadata accessor for StaticAlarm.RepeatSchedule.Day.SundayCodingKeys()
{
  return &type metadata for StaticAlarm.RepeatSchedule.Day.SundayCodingKeys;
}

unsigned char *_s13HomeDataModel11StaticAlarmV14RepeatScheduleV3DayOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251E43F80);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticAlarm.CodingKeys()
{
  return &type metadata for StaticAlarm.CodingKeys;
}

unint64_t sub_251E43FBC()
{
  unint64_t result = qword_269BA4710;
  if (!qword_269BA4710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4710);
  }
  return result;
}

unint64_t sub_251E44014()
{
  unint64_t result = qword_269BA4718;
  if (!qword_269BA4718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4718);
  }
  return result;
}

unint64_t sub_251E4406C()
{
  unint64_t result = qword_269BA4720;
  if (!qword_269BA4720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4720);
  }
  return result;
}

unint64_t sub_251E440C4()
{
  unint64_t result = qword_269BA4728;
  if (!qword_269BA4728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4728);
  }
  return result;
}

unint64_t sub_251E4411C()
{
  unint64_t result = qword_269BA4730;
  if (!qword_269BA4730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4730);
  }
  return result;
}

unint64_t sub_251E44174()
{
  unint64_t result = qword_269BA4738;
  if (!qword_269BA4738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4738);
  }
  return result;
}

unint64_t sub_251E441CC()
{
  unint64_t result = qword_269BA4740;
  if (!qword_269BA4740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4740);
  }
  return result;
}

unint64_t sub_251E44224()
{
  unint64_t result = qword_269BA4748;
  if (!qword_269BA4748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4748);
  }
  return result;
}

unint64_t sub_251E4427C()
{
  unint64_t result = qword_269BA4750;
  if (!qword_269BA4750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4750);
  }
  return result;
}

unint64_t sub_251E442D4()
{
  unint64_t result = qword_269BA4758;
  if (!qword_269BA4758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4758);
  }
  return result;
}

unint64_t sub_251E4432C()
{
  unint64_t result = qword_269BA4760;
  if (!qword_269BA4760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4760);
  }
  return result;
}

unint64_t sub_251E44384()
{
  unint64_t result = qword_269BA4768;
  if (!qword_269BA4768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4768);
  }
  return result;
}

unint64_t sub_251E443DC()
{
  unint64_t result = qword_269BA4770;
  if (!qword_269BA4770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4770);
  }
  return result;
}

unint64_t sub_251E44434()
{
  unint64_t result = qword_269BA4778;
  if (!qword_269BA4778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4778);
  }
  return result;
}

unint64_t sub_251E4448C()
{
  unint64_t result = qword_269BA4780;
  if (!qword_269BA4780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4780);
  }
  return result;
}

unint64_t sub_251E444E4()
{
  unint64_t result = qword_269BA4788;
  if (!qword_269BA4788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4788);
  }
  return result;
}

unint64_t sub_251E4453C()
{
  unint64_t result = qword_269BA4790;
  if (!qword_269BA4790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4790);
  }
  return result;
}

unint64_t sub_251E44594()
{
  unint64_t result = qword_269BA4798;
  if (!qword_269BA4798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4798);
  }
  return result;
}

unint64_t sub_251E445EC()
{
  unint64_t result = qword_269BA47A0;
  if (!qword_269BA47A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA47A0);
  }
  return result;
}

unint64_t sub_251E44644()
{
  unint64_t result = qword_269BA47A8;
  if (!qword_269BA47A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA47A8);
  }
  return result;
}

unint64_t sub_251E4469C()
{
  unint64_t result = qword_269BA47B0;
  if (!qword_269BA47B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA47B0);
  }
  return result;
}

unint64_t sub_251E446F4()
{
  unint64_t result = qword_269BA47B8;
  if (!qword_269BA47B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA47B8);
  }
  return result;
}

unint64_t sub_251E4474C()
{
  unint64_t result = qword_269BA47C0;
  if (!qword_269BA47C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA47C0);
  }
  return result;
}

uint64_t sub_251E447A0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7961646E6F6DLL && a2 == 0xE600000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x79616473657574 && a2 == 0xE700000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x616473656E646577 && a2 == 0xE900000000000079 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7961647372756874 && a2 == 0xE800000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x796164697266 && a2 == 0xE600000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7961647275746173 && a2 == 0xE800000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7961646E7573 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_251E44A70(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1937334628 && a2 == 0xE400000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65756C6156776172 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_251E44B54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA47C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_251E44BBC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA47C8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

HomeDataModel::CameraClipPlaybackViewState_optional __swiftcall CameraClipPlaybackViewState.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_251F36750();
  result.value = swift_bridgeObjectRelease();
  char v5 = 5;
  if (v3 < 5) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

unint64_t CameraClipPlaybackViewState.rawValue.getter()
{
  unint64_t result = 0x646573756170;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x676E6979616C70;
      break;
    case 2:
      unint64_t result = 0xD000000000000014;
      break;
    case 3:
      unint64_t result = 0xD000000000000015;
      break;
    case 4:
      unint64_t result = 1702259052;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_251E44D2C(unsigned __int8 *a1, char *a2)
{
  return sub_251DB1E9C(*a1, *a2);
}

unint64_t sub_251E44D3C()
{
  unint64_t result = qword_269BA47D0;
  if (!qword_269BA47D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA47D0);
  }
  return result;
}

uint64_t sub_251E44D90()
{
  return sub_251EADE74();
}

uint64_t sub_251E44D98()
{
  return sub_251AA98FC();
}

uint64_t sub_251E44DA0()
{
  return sub_251EAE2DC();
}

HomeDataModel::CameraClipPlaybackViewState_optional sub_251E44DA8(Swift::String *a1)
{
  return CameraClipPlaybackViewState.init(rawValue:)(*a1);
}

unint64_t sub_251E44DB4@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = CameraClipPlaybackViewState.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unsigned char *storeEnumTagSinglePayload for CameraClipPlaybackViewState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251E44EA8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CameraClipPlaybackViewState()
{
  return &type metadata for CameraClipPlaybackViewState;
}

unsigned char *storeEnumTagSinglePayload for CameraClipPlaybackViewState.StateError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x251E44F7CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CameraClipPlaybackViewState.StateError()
{
  return &type metadata for CameraClipPlaybackViewState.StateError;
}

unint64_t sub_251E44FB8()
{
  unint64_t result = qword_269BA47D8;
  if (!qword_269BA47D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA47D8);
  }
  return result;
}

void sub_251E4500C(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  unint64_t v4 = a2;
  uint64_t v21 = a1;
  if ((a2 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_251F362B0();
    sub_251A1A568(0, (unint64_t *)&qword_26B21EB40);
    sub_251E51E44((unint64_t *)&qword_26B21EB48, (unint64_t *)&qword_26B21EB40);
    sub_251F35E90();
    unint64_t v4 = (unint64_t)v20[1];
    uint64_t v19 = v20[2];
    uint64_t v5 = (uint64_t)v20[3];
    unsigned int v6 = (char *)v20[4];
    unint64_t v7 = (unint64_t)v20[5];
  }
  else
  {
    uint64_t v8 = -1 << *(unsigned char *)(a2 + 32);
    uint64_t v19 = (void *)(a2 + 56);
    uint64_t v5 = ~v8;
    uint64_t v9 = -v8;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v7 = v10 & *(void *)(a2 + 56);
    swift_bridgeObjectRetain();
    unsigned int v6 = 0;
  }
  int64_t v11 = (unint64_t)(v5 + 64) >> 6;
  if ((v4 & 0x8000000000000000) == 0) {
    goto LABEL_11;
  }
LABEL_8:
  if (!sub_251F36340()) {
    goto LABEL_35;
  }
  sub_251A1A568(0, (unint64_t *)&qword_26B21EB40);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  id v12 = v20[0];
  swift_unknownObjectRelease();
  int64_t v13 = (int64_t)v6;
  uint64_t v14 = v7;
  if (!v12) {
    goto LABEL_35;
  }
  while (1)
  {
    v20[0] = v12;
    sub_251E4D520((uint64_t)&v21, v20);
    if (v3)
    {

      swift_bridgeObjectRelease();
      sub_251A1E630();
      return;
    }

    unsigned int v6 = (char *)v13;
    unint64_t v7 = v14;
    if ((v4 & 0x8000000000000000) != 0) {
      goto LABEL_8;
    }
LABEL_11:
    if (!v7) {
      break;
    }
    uint64_t v14 = (v7 - 1) & v7;
    unint64_t v15 = __clz(__rbit64(v7)) | ((void)v6 << 6);
    int64_t v13 = (int64_t)v6;
LABEL_24:
    id v12 = *(id *)(*(void *)(v4 + 48) + 8 * v15);
    if (!v12) {
      goto LABEL_35;
    }
  }
  int64_t v13 = (int64_t)(v6 + 1);
  if (__OFADD__(v6, 1))
  {
    __break(1u);
    return;
  }
  if (v13 >= v11) {
    goto LABEL_35;
  }
  unint64_t v16 = v19[v13];
  if (v16)
  {
LABEL_23:
    uint64_t v14 = (v16 - 1) & v16;
    unint64_t v15 = __clz(__rbit64(v16)) + (v13 << 6);
    goto LABEL_24;
  }
  int64_t v17 = (int64_t)(v6 + 2);
  if ((uint64_t)(v6 + 2) >= v11) {
    goto LABEL_35;
  }
  unint64_t v16 = v19[v17];
  if (v16) {
    goto LABEL_22;
  }
  int64_t v17 = (int64_t)(v6 + 3);
  if ((uint64_t)(v6 + 3) >= v11) {
    goto LABEL_35;
  }
  unint64_t v16 = v19[v17];
  if (v16) {
    goto LABEL_22;
  }
  int64_t v17 = (int64_t)(v6 + 4);
  if ((uint64_t)(v6 + 4) >= v11) {
    goto LABEL_35;
  }
  unint64_t v16 = v19[v17];
  if (v16)
  {
LABEL_22:
    int64_t v13 = v17;
    goto LABEL_23;
  }
  int64_t v13 = (int64_t)(v6 + 5);
  if ((uint64_t)(v6 + 5) >= v11) {
    goto LABEL_35;
  }
  unint64_t v16 = v19[v13];
  if (v16) {
    goto LABEL_23;
  }
  uint64_t v18 = v6 + 6;
  while ((char *)v11 != v18)
  {
    unint64_t v16 = v19[(void)v18++];
    if (v16)
    {
      int64_t v13 = (int64_t)(v18 - 1);
      goto LABEL_23;
    }
  }
LABEL_35:
  sub_251A1E630();
}

void sub_251E4531C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if ((a2 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_251F362B0();
    sub_251A1A568(0, (unint64_t *)&qword_26B21EB40);
    sub_251E51E44((unint64_t *)&qword_26B21EB48, (unint64_t *)&qword_26B21EB40);
    sub_251F35E90();
    uint64_t v2 = v40[1];
    uint64_t v38 = v40[2];
    uint64_t v4 = v40[3];
    int64_t v3 = v40[4];
    unint64_t v5 = v40[5];
  }
  else
  {
    uint64_t v6 = -1 << *(unsigned char *)(a2 + 32);
    uint64_t v38 = a2 + 56;
    uint64_t v4 = ~v6;
    uint64_t v7 = -v6;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v5 = v8 & *(void *)(a2 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    int64_t v3 = 0;
  }
  int64_t v9 = (unint64_t)(v4 + 64) >> 6;
  while (1)
  {
    int64_t v10 = v3;
    if (v2 < 0)
    {
      uint64_t v13 = sub_251F36340();
      if (!v13) {
        goto LABEL_46;
      }
      uint64_t v39 = v13;
      sub_251A1A568(0, (unint64_t *)&qword_26B21EB40);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v14 = (id)v40[0];
      swift_unknownObjectRelease();
      if (!v14) {
        goto LABEL_46;
      }
      goto LABEL_28;
    }
    if (!v5) {
      break;
    }
    unint64_t v11 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    unint64_t v12 = v11 | (v3 << 6);
LABEL_27:
    id v14 = *(id *)(*(void *)(v2 + 48) + 8 * v12);
    if (!v14) {
      goto LABEL_46;
    }
LABEL_28:
    self;
    uint64_t v17 = swift_dynamicCastObjCClass();
    if (v17)
    {
      uint64_t v18 = (void *)v17;
      id v19 = v14;
      id v20 = objc_msgSend(v18, sel_characteristic);
      id v21 = objc_msgSend(v20, sel_service);

      if (!v21)
      {

        goto LABEL_9;
      }
      id v22 = objc_msgSend(v21, sel_associatedServiceType);
      if (!v22)
      {
        LOBYTE(v39) = 8;
LABEL_36:
        id v29 = objc_msgSend(v21, sel_serviceType, rawValue);
        uint64_t v30 = sub_251F356F0();
        rawValue = v31;

        v32._countAndFlagsBits = v30;
        v32._object = rawValue;
        ServiceKind.init(rawValue:)(v32);
        char v33 = v40[0];
        if (LOBYTE(v40[0]) == 53) {
          char v33 = 0;
        }
        char v41 = v33;
        ServiceKind.umbrellaCategory.getter(v40);
        uint64_t v28 = LOBYTE(v40[0]);
        goto LABEL_39;
      }
      uint64_t v23 = v22;
      uint64_t v24 = sub_251F356F0();
      rawValue = v25;

      v26._countAndFlagsBits = v24;
      v26._object = rawValue;
      ServiceKind.init(rawValue:)(v26);
      char v27 = v40[0];
      if (LOBYTE(v40[0]) == 53) {
        char v27 = 0;
      }
      LOBYTE(v40[0]) = v27;
      sub_251E4EA24(&v39);
      uint64_t v28 = v39;
      if (v39 == 8) {
        goto LABEL_36;
      }
LABEL_39:
      v40[0] = a1;
      swift_bridgeObjectRetain();
      sub_251A680C8(&v39, v28);
      uint64_t v34 = v40[0];
      swift_bridgeObjectRelease();

      a1 = v34;
    }
    else
    {
LABEL_9:
    }
  }
  ++v3;
  if (!__OFADD__(v10, 1))
  {
    if (v3 >= v9) {
      goto LABEL_46;
    }
    unint64_t v15 = *(void *)(v38 + 8 * v3);
    if (!v15)
    {
      int64_t v16 = v10 + 2;
      if (v10 + 2 >= v9) {
        goto LABEL_46;
      }
      unint64_t v15 = *(void *)(v38 + 8 * v16);
      if (v15) {
        goto LABEL_25;
      }
      int64_t v16 = v10 + 3;
      if (v10 + 3 >= v9) {
        goto LABEL_46;
      }
      unint64_t v15 = *(void *)(v38 + 8 * v16);
      if (v15) {
        goto LABEL_25;
      }
      int64_t v16 = v10 + 4;
      if (v10 + 4 >= v9) {
        goto LABEL_46;
      }
      unint64_t v15 = *(void *)(v38 + 8 * v16);
      if (v15)
      {
LABEL_25:
        int64_t v3 = v16;
      }
      else
      {
        int64_t v3 = v10 + 5;
        if (v10 + 5 >= v9) {
          goto LABEL_46;
        }
        unint64_t v15 = *(void *)(v38 + 8 * v3);
        if (!v15)
        {
          int64_t v35 = v10 + 6;
          while (v9 != v35)
          {
            unint64_t v15 = *(void *)(v38 + 8 * v35++);
            if (v15)
            {
              int64_t v3 = v35 - 1;
              goto LABEL_26;
            }
          }
LABEL_46:
          sub_251A1E630();
          return;
        }
      }
    }
LABEL_26:
    unint64_t v5 = (v15 - 1) & v15;
    unint64_t v12 = __clz(__rbit64(v15)) + (v3 << 6);
    goto LABEL_27;
  }
  __break(1u);
}

uint64_t sub_251E45774()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CB38);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = 0;
  unint64_t v69 = 0xE000000000000000;
  sub_251F36400();
  uint64_t v80 = v68;
  unint64_t v81 = v69;
  sub_251F35800();
  unint64_t v5 = (int *)type metadata accessor for StaticMatterDevice();
  swift_bridgeObjectRetain();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  uint64_t v6 = sub_251F34DA0();
  sub_251A1A8EC((unint64_t *)&qword_26B21E6B0);
  uint64_t v55 = v6;
  sub_251F36AB0();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  swift_bridgeObjectRetain();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  uint64_t v68 = StaticMatterDevice.statusString.getter();
  unint64_t v69 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E2A8);
  sub_251F35770();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  sub_251F35800();
  sub_251F35800();
  StaticMatterDevice.tileIcon.getter((uint64_t)&v68);
  uint64_t v56 = v68;
  unint64_t v57 = v69;
  char v58 = v70;
  uint64_t v59 = v71;
  uint64_t v60 = v72;
  char v61 = v73;
  uint64_t v62 = v74;
  uint64_t v63 = v75;
  char v64 = v76;
  uint64_t v65 = v77;
  uint64_t v66 = v78;
  char v67 = v79;
  sub_251F36640();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_251F35800();
  int v8 = *(unsigned __int8 *)(v0 + v5[13] + 48);
  uint64_t v46 = v0 + v5[13];
  if (v8 != 2)
  {
    if ((v8 & 1) == 0) {
      sub_251F36B10();
    }
    swift_bridgeObjectRelease();
  }
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  uint64_t v45 = v5[7];
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  uint64_t v9 = MEMORY[0x263F8EE78];
  uint64_t v68 = MEMORY[0x263F8EE78];
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EAB0);
  unint64_t v11 = sub_251BFC684();
  uint64_t v44 = v10;
  unint64_t v43 = v11;
  sub_251F35620();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB80);
  uint64_t v12 = v55;
  uint64_t v13 = *(void *)(v55 - 8);
  unint64_t v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v54 = *(void *)(v13 + 72);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_251F38650;
  uint64_t v16 = v1 + v5[10];
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 16);
  uint64_t v53 = v13 + 16;
  uint64_t v52 = v17;
  v17((char *)(v15 + v14), v16, v12);
  uint64_t v18 = sub_251C08E40(v15);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  int64_t v19 = *(void *)(v18 + 16);
  if (v19)
  {
    uint64_t v41 = v1;
    uint64_t v42 = v4;
    uint64_t v68 = v9;
    sub_251A3DEDC(0, v19, 0);
    uint64_t v20 = sub_251A53EB8(v18);
    uint64_t v21 = v20;
    uint64_t v23 = v22;
    uint64_t v24 = *(void *)(v13 + 64);
    uint64_t v51 = v18 + 56;
    uint64_t v48 = (void (**)(char *, char *, uint64_t))(v13 + 32);
    uint64_t v47 = (void (**)(char *, uint64_t))(v13 + 8);
    uint64_t v50 = v18;
    uint64_t v49 = v24;
    uint64_t v25 = v55;
    while (1)
    {
      uint64_t result = MEMORY[0x270FA5388](v20);
      if (v27) {
        break;
      }
      if (v21 < 0 || v21 >= 1 << *(unsigned char *)(v18 + 32))
      {
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
        break;
      }
      if (((*(void *)(v51 + (((unint64_t)v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
        goto LABEL_26;
      }
      if (*(_DWORD *)(v18 + 36) != v23) {
        goto LABEL_27;
      }
      uint64_t v28 = v52((char *)&v41 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0), *(void *)(v18 + 48) + v21 * v54, v25);
      MEMORY[0x270FA5388](v28);
      id v29 = (char *)&v41 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*v48)(v29, v29, v25);
      uint64_t v30 = sub_251F34D40();
      uint64_t v32 = v31;
      (*v47)(v29, v25);
      uint64_t v33 = v68;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_251A3DEDC(0, *(void *)(v33 + 16) + 1, 1);
        uint64_t v33 = v68;
      }
      unint64_t v35 = *(void *)(v33 + 16);
      unint64_t v34 = *(void *)(v33 + 24);
      if (v35 >= v34 >> 1)
      {
        sub_251A3DEDC(v34 > 1, v35 + 1, 1);
        uint64_t v33 = v68;
      }
      *(void *)(v33 + 16) = v35 + 1;
      unint64_t v36 = v33 + 16 * v35;
      *(void *)(v36 + 32) = v30;
      *(void *)(v36 + 40) = v32;
      uint64_t v18 = v50;
      uint64_t v20 = sub_251A53F5C(v21, v23, 0, v50);
      uint64_t v21 = v20;
      uint64_t v23 = v37;
      char v39 = v38 & 1;
      --v19;
      uint64_t v24 = v49;
      if (!v19)
      {
        sub_251A4ECE4(v20, v37, v39);
        swift_bridgeObjectRelease();
        uint64_t v4 = v42;
        uint64_t v1 = v41;
        goto LABEL_20;
      }
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v33 = MEMORY[0x263F8EE78];
LABEL_20:
    uint64_t v68 = v33;
    sub_251F35620();
    swift_bridgeObjectRelease();
    sub_251F35800();
    swift_bridgeObjectRelease();
    sub_251F35800();
    sub_251F35800();
    swift_bridgeObjectRelease();
    sub_251F35800();
    sub_251F35800();
    swift_bridgeObjectRelease();
    sub_251F35800();
    if (*(void *)(v1 + v45) != 2)
    {
      StaticMatterDevice.mainEndpoint.getter((uint64_t)v4);
      uint64_t v40 = type metadata accessor for StaticEndpoint();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v40 - 8) + 48))(v4, 1, v40) == 1)
      {
        sub_251A1B064((uint64_t)v4, &qword_269B9CB38);
      }
      else
      {
        StaticEndpoint.isActivated.getter();
        sub_251E51EF0((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
      }
    }
    sub_251F35800();
    swift_bridgeObjectRelease();
    return v80;
  }
  return result;
}

uint64_t sub_251E461D4()
{
  sub_251F36400();
  uint64_t v59 = 0;
  unint64_t v60 = 0xE000000000000000;
  sub_251F35800();
  sub_251F35800();
  sub_251F35800();
  uint64_t v1 = sub_251F34DA0();
  sub_251A1A8EC((unint64_t *)&qword_26B21E6B0);
  uint64_t v34 = v1;
  sub_251F36AB0();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  uint64_t v2 = type metadata accessor for StaticEndpoint();
  swift_bridgeObjectRetain();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  uint64_t v47 = StaticEndpoint.statusString.getter();
  uint64_t v48 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E2A8);
  sub_251F35770();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  sub_251F35800();
  sub_251F35800();
  StaticEndpoint.tileIcon.getter((uint64_t)&v47);
  uint64_t v35 = v47;
  uint64_t v36 = v48;
  char v37 = v49;
  uint64_t v38 = v50;
  uint64_t v39 = v51;
  char v40 = v52;
  uint64_t v41 = v53;
  uint64_t v42 = v54;
  char v43 = v55;
  uint64_t v44 = v56;
  uint64_t v45 = v57;
  char v46 = v58;
  sub_251F36640();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_251F35800();
  int v4 = *(unsigned __int8 *)(v0 + *(int *)(v2 + 52) + 48);
  v30[4] = v0 + *(int *)(v2 + 52);
  if (v4 != 2)
  {
    if ((v4 & 1) == 0) {
      sub_251F36B10();
    }
    swift_bridgeObjectRelease();
  }
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  uint64_t v5 = MEMORY[0x263F8EE78];
  uint64_t v47 = MEMORY[0x263F8EE78];
  v30[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EAB0);
  v30[2] = sub_251BFC684();
  sub_251F35620();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  uint64_t v6 = *(void *)(v0 + *(int *)(v2 + 48));
  int64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    v30[1] = v0;
    uint64_t v47 = v5;
    swift_bridgeObjectRetain();
    sub_251A3DEDC(0, v7, 0);
    uint64_t v8 = sub_251A53EB8(v6);
    uint64_t v9 = v8;
    uint64_t v11 = v10;
    uint64_t v12 = *(void *)(v34 - 8);
    uint64_t v13 = *(void *)(v12 + 64);
    uint64_t v33 = v6 + 56;
    v30[7] = v12 + 16;
    v30[6] = v12 + 32;
    v30[8] = v12;
    v30[5] = v12 + 8;
    uint64_t v31 = v6;
    uint64_t v32 = v13;
    uint64_t v14 = v12;
    while (1)
    {
      uint64_t result = MEMORY[0x270FA5388](v8);
      uint64_t v16 = (char *)v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
      if (v17) {
        break;
      }
      if (v9 < 0 || v9 >= 1 << *(unsigned char *)(v6 + 32))
      {
        __break(1u);
LABEL_21:
        __break(1u);
LABEL_22:
        __break(1u);
        break;
      }
      if (((*(void *)(v33 + (((unint64_t)v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_21;
      }
      if (*(_DWORD *)(v6 + 36) != v11) {
        goto LABEL_22;
      }
      uint64_t v18 = v34;
      uint64_t v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), *(void *)(v6 + 48) + *(void *)(v14 + 72) * v9, v34);
      MEMORY[0x270FA5388](v19);
      uint64_t v20 = (char *)v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v20, v16, v18);
      uint64_t v21 = sub_251F34D40();
      uint64_t v23 = v22;
      (*(void (**)(char *, uint64_t))(v14 + 8))(v20, v18);
      uint64_t v5 = v47;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_251A3DEDC(0, *(void *)(v5 + 16) + 1, 1);
        uint64_t v5 = v47;
      }
      unint64_t v25 = *(void *)(v5 + 16);
      unint64_t v24 = *(void *)(v5 + 24);
      uint64_t v13 = v32;
      if (v25 >= v24 >> 1)
      {
        sub_251A3DEDC(v24 > 1, v25 + 1, 1);
        uint64_t v13 = v32;
        uint64_t v5 = v47;
      }
      *(void *)(v5 + 16) = v25 + 1;
      unint64_t v26 = v5 + 16 * v25;
      *(void *)(v26 + 32) = v21;
      *(void *)(v26 + 40) = v23;
      uint64_t v6 = v31;
      uint64_t v8 = sub_251A53F5C(v9, v11, 0, v31);
      uint64_t v9 = v8;
      uint64_t v11 = v27;
      char v29 = v28 & 1;
      if (!--v7)
      {
        sub_251A4ECE4(v8, v27, v29);
        swift_bridgeObjectRelease();
        goto LABEL_19;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_19:
    uint64_t v47 = v5;
    sub_251F35620();
    swift_bridgeObjectRelease();
    sub_251F35800();
    swift_bridgeObjectRelease();
    sub_251F35800();
    sub_251F35800();
    swift_bridgeObjectRelease();
    sub_251F35800();
    sub_251F35800();
    swift_bridgeObjectRelease();
    sub_251F35800();
    StaticEndpoint.isActivated.getter();
    sub_251F35800();
    swift_bridgeObjectRelease();
    return v59;
  }
  return result;
}

uint64_t sub_251E46A68()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CA50);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v50 = (uint64_t)v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v46 - v5;
  uint64_t v72 = 0;
  unint64_t v73 = 0xE000000000000000;
  sub_251F36400();
  uint64_t v84 = v72;
  unint64_t v85 = v73;
  sub_251F35800();
  sub_251F35800();
  sub_251F35800();
  uint64_t v7 = sub_251F34DA0();
  sub_251A1A8EC((unint64_t *)&qword_26B21E6B0);
  uint64_t v59 = v7;
  sub_251F36AB0();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  uint64_t v8 = type metadata accessor for ActionMatterDevice();
  swift_bridgeObjectRetain();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  ActionMatterDevice.mainActionEndpoint.getter((uint64_t)v6);
  uint64_t v9 = type metadata accessor for ActionEndpoint();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  uint64_t v48 = v9;
  uint64_t v47 = v11;
  v46[3] = v10 + 48;
  if (((unsigned int (*)(char *, uint64_t))v11)(v6, 1) == 1)
  {
    sub_251A1B064((uint64_t)v6, &qword_269B9CA50);
    uint64_t v12 = 0;
    unint64_t v13 = 0;
  }
  else
  {
    uint64_t v12 = ActionEndpoint.statusString.getter();
    unint64_t v13 = v14;
    sub_251E51EF0((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ActionEndpoint);
  }
  uint64_t v72 = v12;
  unint64_t v73 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E2A8);
  sub_251F35770();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  sub_251F35800();
  ActionMatterDevice.tileIcon.getter((uint64_t)&v72);
  uint64_t v60 = v72;
  unint64_t v61 = v73;
  char v62 = v74;
  uint64_t v63 = v75;
  uint64_t v64 = v76;
  char v65 = v77;
  uint64_t v66 = v78;
  uint64_t v67 = v79;
  char v68 = v80;
  uint64_t v69 = v81;
  uint64_t v70 = v82;
  char v71 = v83;
  sub_251F36640();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_251F35800();
  sub_251F35800();
  sub_251F35800();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  uint64_t v15 = MEMORY[0x263F8EE78];
  uint64_t v72 = MEMORY[0x263F8EE78];
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EAB0);
  void v46[2] = sub_251BFC684();
  sub_251F35620();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB80);
  uint64_t v17 = v59;
  uint64_t v18 = *(void *)(v59 - 8);
  unint64_t v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  uint64_t v58 = *(void *)(v18 + 72);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_251F38650;
  uint64_t v21 = *(int *)(v8 + 40);
  uint64_t v49 = v1;
  uint64_t v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 16);
  uint64_t v57 = v18 + 16;
  uint64_t v56 = v22;
  v22((char *)(v20 + v19), v1 + v21, v17);
  uint64_t v23 = sub_251C08E40(v20);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  int64_t v24 = *(void *)(v23 + 16);
  if (v24)
  {
    v46[1] = v16;
    uint64_t v72 = v15;
    sub_251A3DEDC(0, v24, 0);
    uint64_t v25 = sub_251A53EB8(v23);
    uint64_t v26 = v25;
    uint64_t v28 = v27;
    uint64_t v29 = *(void *)(v18 + 64);
    uint64_t v55 = v23 + 56;
    char v52 = (void (**)(char *, char *, uint64_t))(v18 + 32);
    uint64_t v51 = (void (**)(char *, uint64_t))(v18 + 8);
    uint64_t v54 = v23;
    uint64_t v53 = v29;
    uint64_t v30 = v59;
    while (1)
    {
      uint64_t result = MEMORY[0x270FA5388](v25);
      if (v32) {
        break;
      }
      if (v26 < 0 || v26 >= 1 << *(unsigned char *)(v23 + 32))
      {
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
        break;
      }
      if (((*(void *)(v55 + (((unint64_t)v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v26) & 1) == 0) {
        goto LABEL_23;
      }
      if (*(_DWORD *)(v23 + 36) != v28) {
        goto LABEL_24;
      }
      uint64_t v33 = v56((char *)v46 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0), *(void *)(v23 + 48) + v26 * v58, v30);
      MEMORY[0x270FA5388](v33);
      uint64_t v34 = (char *)v46 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*v52)(v34, v34, v30);
      uint64_t v35 = sub_251F34D40();
      uint64_t v37 = v36;
      (*v51)(v34, v30);
      uint64_t v38 = v72;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_251A3DEDC(0, *(void *)(v38 + 16) + 1, 1);
        uint64_t v38 = v72;
      }
      unint64_t v40 = *(void *)(v38 + 16);
      unint64_t v39 = *(void *)(v38 + 24);
      if (v40 >= v39 >> 1)
      {
        sub_251A3DEDC(v39 > 1, v40 + 1, 1);
        uint64_t v38 = v72;
      }
      *(void *)(v38 + 16) = v40 + 1;
      unint64_t v41 = v38 + 16 * v40;
      *(void *)(v41 + 32) = v35;
      *(void *)(v41 + 40) = v37;
      uint64_t v23 = v54;
      uint64_t v25 = sub_251A53F5C(v26, v28, 0, v54);
      uint64_t v26 = v25;
      uint64_t v28 = v42;
      char v44 = v43 & 1;
      --v24;
      uint64_t v29 = v53;
      if (!v24)
      {
        sub_251A4ECE4(v25, v42, v44);
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v38 = MEMORY[0x263F8EE78];
LABEL_18:
    uint64_t v72 = v38;
    sub_251F35620();
    swift_bridgeObjectRelease();
    sub_251F35800();
    swift_bridgeObjectRelease();
    sub_251F35800();
    sub_251F35800();
    sub_251F35800();
    sub_251F35800();
    sub_251F35800();
    uint64_t v45 = v50;
    ActionMatterDevice.mainActionEndpoint.getter(v50);
    if (v47(v45, 1, v48) == 1)
    {
      sub_251A1B064(v45, &qword_269B9CA50);
    }
    else
    {
      ActionEndpoint.isActivated.getter();
      sub_251E51EF0(v45, (uint64_t (*)(void))type metadata accessor for ActionEndpoint);
    }
    sub_251F35800();
    swift_bridgeObjectRelease();
    return v84;
  }
  return result;
}

uint64_t sub_251E4743C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for StaticMediaProfile();
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = 0;
  unint64_t v63 = 0xE000000000000000;
  sub_251F36400();
  uint64_t v74 = v62;
  unint64_t v75 = v63;
  sub_251F35800();
  swift_bridgeObjectRetain();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  uint64_t v5 = sub_251F34DA0();
  sub_251A1A8EC((unint64_t *)&qword_26B21E6B0);
  uint64_t v61 = v5;
  sub_251F36AB0();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  swift_bridgeObjectRetain();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  uint64_t v62 = StaticMediaProfile.tileStatusString.getter();
  unint64_t v63 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E2A8);
  sub_251F35770();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  sub_251F35800();
  sub_251E51F50(v0, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
  int v7 = *(unsigned __int16 *)&v4[*(int *)(v2 + 88)];
  uint64_t v53 = v1;
  uint64_t v52 = v2;
  if ((~v7 & 0xFEFC) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F218);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_251F38650;
    *(_WORD *)(inited + 32) = v7;
    uint64_t v9 = _s13HomeDataModel18StaticMediaProfileV10iconSymbol3forSSSayAA0D9AccessoryV07SpecialE8CategoryOG_tFZ_0(inited);
    unint64_t v8 = v21;
    swift_setDeallocating();
    sub_251E51EF0((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
    swift_bridgeObjectRetain_n();
    char v19 = 0;
    char v18 = 0;
    char v14 = 0;
    char v17 = 0;
    uint64_t v10 = v9;
    unint64_t v11 = v8;
    uint64_t v12 = v9;
    unint64_t v13 = v8;
    uint64_t v16 = v9;
    unint64_t v15 = v8;
  }
  else
  {
    uint64_t v60 = v4;
    if (qword_269B9C360 != -1) {
LABEL_22:
    }
      swift_once();
    uint64_t v9 = qword_269BA00F0;
    unint64_t v8 = *(void *)algn_269BA00F8;
    LODWORD(v59) = byte_269BA0100;
    uint64_t v10 = qword_269BA0108;
    unint64_t v11 = unk_269BA0110;
    LODWORD(v58) = byte_269BA0118;
    uint64_t v12 = qword_269BA0120;
    unint64_t v13 = unk_269BA0128;
    char v14 = byte_269BA0130;
    uint64_t v16 = qword_269BA0138;
    unint64_t v15 = unk_269BA0140;
    char v17 = byte_269BA0148;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_251E51EF0((uint64_t)v60, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
    char v18 = v58;
    char v19 = v59;
  }
  uint64_t v62 = v9;
  unint64_t v63 = v8;
  char v64 = v19;
  uint64_t v65 = v10;
  unint64_t v66 = v11;
  char v67 = v18;
  uint64_t v68 = v12;
  unint64_t v69 = v13;
  char v70 = v14;
  uint64_t v71 = v16;
  unint64_t v72 = v15;
  char v73 = v17;
  sub_251F36640();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_251F35800();
  uint64_t v22 = v52;
  uint64_t v23 = v53;
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  uint64_t v24 = MEMORY[0x263F8EE78];
  uint64_t v62 = MEMORY[0x263F8EE78];
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EAB0);
  unint64_t v26 = sub_251BFC684();
  v51[1] = v25;
  v51[0] = v26;
  sub_251F35620();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  uint64_t v27 = *(void *)(v23 + *(int *)(v22 + 24));
  int64_t v28 = *(void *)(v27 + 16);
  if (v28)
  {
    uint64_t v62 = v24;
    swift_bridgeObjectRetain();
    sub_251A3DEDC(0, v28, 0);
    uint64_t v29 = sub_251A53EB8(v27);
    uint64_t v30 = v29;
    uint64_t v32 = v31;
    uint64_t v33 = *(void *)(v61 - 8);
    uint64_t v34 = *(void *)(v33 + 64);
    uint64_t v60 = (char *)(v27 + 56);
    uint64_t v56 = v33 + 16;
    uint64_t v55 = v33 + 32;
    uint64_t v57 = v33;
    uint64_t v54 = v33 + 8;
    uint64_t v58 = v27;
    uint64_t v59 = v34;
    uint64_t v35 = v33;
    while (1)
    {
      uint64_t result = MEMORY[0x270FA5388](v29);
      uint64_t v37 = (char *)v51 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
      if (v38) {
        break;
      }
      if (v30 < 0 || v30 >= 1 << *(unsigned char *)(v27 + 32))
      {
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
        goto LABEL_22;
      }
      if (((*(void *)&v60[((unint64_t)v30 >> 3) & 0x1FFFFFFFFFFFFFF8] >> v30) & 1) == 0) {
        goto LABEL_20;
      }
      if (*(_DWORD *)(v27 + 36) != v32) {
        goto LABEL_21;
      }
      uint64_t v39 = v61;
      uint64_t v40 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 16))((char *)v51 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0), *(void *)(v27 + 48) + *(void *)(v35 + 72) * v30, v61);
      MEMORY[0x270FA5388](v40);
      unint64_t v41 = (char *)v51 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v41, v37, v39);
      uint64_t v42 = sub_251F34D40();
      uint64_t v44 = v43;
      (*(void (**)(char *, uint64_t))(v35 + 8))(v41, v39);
      uint64_t v24 = v62;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_251A3DEDC(0, *(void *)(v24 + 16) + 1, 1);
        uint64_t v24 = v62;
      }
      unint64_t v46 = *(void *)(v24 + 16);
      unint64_t v45 = *(void *)(v24 + 24);
      uint64_t v34 = v59;
      if (v46 >= v45 >> 1)
      {
        sub_251A3DEDC(v45 > 1, v46 + 1, 1);
        uint64_t v34 = v59;
        uint64_t v24 = v62;
      }
      *(void *)(v24 + 16) = v46 + 1;
      unint64_t v47 = v24 + 16 * v46;
      *(void *)(v47 + 32) = v42;
      *(void *)(v47 + 40) = v44;
      uint64_t v27 = v58;
      uint64_t v29 = sub_251A53F5C(v30, v32, 0, v58);
      uint64_t v30 = v29;
      uint64_t v32 = v48;
      char v50 = v49 & 1;
      if (!--v28)
      {
        sub_251A4ECE4(v29, v48, v50);
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_18:
    uint64_t v62 = v24;
    sub_251F35620();
    swift_bridgeObjectRelease();
    sub_251F35800();
    swift_bridgeObjectRelease();
    sub_251F35800();
    sub_251F35800();
    swift_bridgeObjectRelease();
    sub_251F35800();
    sub_251F35800();
    swift_bridgeObjectRelease();
    sub_251F35800();
    sub_251F35800();
    swift_bridgeObjectRelease();
    return v74;
  }
  return result;
}

uint64_t sub_251E47DC8()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0FB8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56.tileOnStateIconInfo.name._uint64_t countAndFlagsBits = 0;
  v56.tileOnStateIconInfo.name._object = (void *)0xE000000000000000;
  sub_251F36400();
  uint64_t countAndFlagsBits = v56.tileOnStateIconInfo.name._countAndFlagsBits;
  object = v56.tileOnStateIconInfo.name._object;
  sub_251F35800();
  uint64_t v5 = type metadata accessor for StaticCameraProfile();
  swift_bridgeObjectRetain();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  uint64_t v6 = sub_251F34DA0();
  sub_251A1A8EC((unint64_t *)&qword_26B21E6B0);
  uint64_t v49 = v6;
  sub_251F36AB0();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  swift_bridgeObjectRetain();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  v56.tileOnStateIconInfo.name._uint64_t countAndFlagsBits = _s13HomeDataModel19StaticCameraProfileV12statusStringSSSgvg_0();
  v56.tileOnStateIconInfo.name._object = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E2A8);
  sub_251F35770();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  sub_251F35800();
  sub_251F35800();
  v8._uint64_t countAndFlagsBits = 0x69662E6F65646976;
  v8._object = (void *)0xEA00000000006C6CLL;
  Icon.init(customIconName:)(&v56, v8);
  uint64_t v50 = v56.tileOnStateIconInfo.name._countAndFlagsBits;
  uint64_t v51 = v56.tileOnStateIconInfo.name._object;
  HomeDataModel::StaticRenderingMode renderingMode = v56.tileOnStateIconInfo.renderingMode;
  HomeDataModel::Icon::Info tileOffStateIconInfo = v56.tileOffStateIconInfo;
  HomeDataModel::Icon::Info accessoryControlOnStateIconInfo = v56.accessoryControlOnStateIconInfo;
  HomeDataModel::Icon::Info accessoryControlOffStateIconInfo = v56.accessoryControlOffStateIconInfo;
  sub_251F36640();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_251F35800();
  sub_251F35800();
  sub_251F35800();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  uint64_t v9 = MEMORY[0x263F8EE78];
  v56.tileOnStateIconInfo.name._uint64_t countAndFlagsBits = MEMORY[0x263F8EE78];
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EAB0);
  unint64_t v11 = sub_251BFC684();
  sub_251F35620();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  uint64_t v41 = v5;
  uint64_t v12 = *(void *)(v0 + *(int *)(v5 + 24));
  int64_t v13 = *(void *)(v12 + 16);
  if (v13)
  {
    v38[0] = v11;
    v38[1] = v10;
    uint64_t v39 = v0;
    uint64_t v40 = v4;
    v56.tileOnStateIconInfo.name._uint64_t countAndFlagsBits = v9;
    swift_bridgeObjectRetain();
    sub_251A3DEDC(0, v13, 0);
    uint64_t v14 = sub_251A53EB8(v12);
    uint64_t v15 = v14;
    uint64_t v17 = v16;
    uint64_t v18 = v49;
    uint64_t v19 = *(void *)(v49 - 8);
    uint64_t v20 = *(void *)(v19 + 64);
    uint64_t v48 = v12 + 56;
    uint64_t v44 = v19 + 16;
    uint64_t v43 = v19 + 32;
    uint64_t v46 = v19;
    uint64_t v42 = v19 + 8;
    uint64_t v47 = v12;
    uint64_t v45 = v20;
    while (1)
    {
      uint64_t result = MEMORY[0x270FA5388](v14);
      if (v22) {
        break;
      }
      if (v15 < 0 || v15 >= 1 << *(unsigned char *)(v12 + 32))
      {
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
        break;
      }
      if (((*(void *)(v48 + (((unint64_t)v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
        goto LABEL_19;
      }
      if (*(_DWORD *)(v12 + 36) != v17) {
        goto LABEL_20;
      }
      uint64_t v23 = *(void *)(v12 + 48);
      uint64_t v24 = v46;
      uint64_t v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v46 + 16))((char *)v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0), v23 + *(void *)(v46 + 72) * v15, v18);
      MEMORY[0x270FA5388](v25);
      unint64_t v26 = (char *)v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v26, v26, v18);
      uint64_t v27 = sub_251F34D40();
      uint64_t v29 = v28;
      (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v18);
      uint64_t v9 = v56.tileOnStateIconInfo.name._countAndFlagsBits;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_251A3DEDC(0, *(void *)(v9 + 16) + 1, 1);
        uint64_t v9 = v56.tileOnStateIconInfo.name._countAndFlagsBits;
      }
      unint64_t v31 = *(void *)(v9 + 16);
      unint64_t v30 = *(void *)(v9 + 24);
      if (v31 >= v30 >> 1)
      {
        sub_251A3DEDC(v30 > 1, v31 + 1, 1);
        uint64_t v9 = v56.tileOnStateIconInfo.name._countAndFlagsBits;
      }
      *(void *)(v9 + 16) = v31 + 1;
      uint64_t v32 = v9 + 16 * v31;
      *(void *)(v32 + 32) = v27;
      *(void *)(v32 + 40) = v29;
      uint64_t v12 = v47;
      uint64_t v14 = sub_251A53F5C(v15, v17, 0, v47);
      uint64_t v15 = v14;
      uint64_t v17 = v33;
      char v35 = v34 & 1;
      --v13;
      uint64_t v18 = v49;
      uint64_t v20 = v45;
      if (!v13)
      {
        sub_251A4ECE4(v14, v33, v35);
        swift_bridgeObjectRelease();
        uint64_t v4 = v40;
        uint64_t v1 = v39;
        goto LABEL_14;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_14:
    v56.tileOnStateIconInfo.name._uint64_t countAndFlagsBits = v9;
    sub_251F35620();
    swift_bridgeObjectRelease();
    sub_251F35800();
    swift_bridgeObjectRelease();
    sub_251F35800();
    uint64_t v36 = v41;
    sub_251F35800();
    swift_bridgeObjectRelease();
    sub_251F35800();
    sub_251F35800();
    swift_bridgeObjectRelease();
    sub_251F35800();
    sub_251A1B128(v1 + *(int *)(v36 + 52), (uint64_t)v4, &qword_269BA0FB8);
    uint64_t v37 = type metadata accessor for StaticCameraStreamControl();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v37 - 8) + 48))(v4, 1, v37) == 1) {
      sub_251A1B064((uint64_t)v4, &qword_269BA0FB8);
    }
    else {
      sub_251E51EF0((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticCameraStreamControl);
    }
    sub_251F35800();
    swift_bridgeObjectRelease();
    return countAndFlagsBits;
  }
  return result;
}

uint64_t sub_251E48734()
{
  sub_251F36400();
  uint64_t v73 = 0;
  unint64_t v74 = 0xE000000000000000;
  sub_251F35800();
  uint64_t v1 = type metadata accessor for StaticServiceGroup();
  swift_bridgeObjectRetain();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  uint64_t v2 = sub_251F34DA0();
  sub_251A1A8EC((unint64_t *)&qword_26B21E6B0);
  uint64_t v48 = v2;
  sub_251F36AB0();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  swift_bridgeObjectRetain();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  uint64_t v61 = StaticServiceGroup.tileStatusString.getter();
  uint64_t v62 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E2A8);
  sub_251F35770();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  StaticServiceGroup.description.getter();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  StaticServiceGroup.tileIcon.getter((uint64_t)&v61);
  uint64_t v49 = v61;
  uint64_t v50 = v62;
  char v51 = v63;
  uint64_t v52 = v64;
  uint64_t v53 = v65;
  char v54 = v66;
  uint64_t v55 = v67;
  uint64_t v56 = v68;
  char v57 = v69;
  uint64_t v58 = v70;
  uint64_t v59 = v71;
  char v60 = v72;
  sub_251F36640();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_251F35800();
  StaticServiceGroup.isDoubleHigh.getter();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  uint64_t v4 = sub_251B838F8();
  int64_t v5 = *(void *)(v4 + 16);
  uint64_t v40 = v1;
  if (v5)
  {
    uint64_t v61 = MEMORY[0x263F8EE78];
    sub_251A3DEDC(0, v5, 0);
    uint64_t v6 = 0;
    uint64_t v7 = v61;
    do
    {
      LOBYTE(v49) = *(unsigned char *)(v4 + v6 + 32);
      uint64_t v8 = ServiceKind.localizedDescription.getter();
      uint64_t v10 = v9;
      uint64_t v61 = v7;
      unint64_t v12 = *(void *)(v7 + 16);
      unint64_t v11 = *(void *)(v7 + 24);
      if (v12 >= v11 >> 1)
      {
        sub_251A3DEDC(v11 > 1, v12 + 1, 1);
        uint64_t v7 = v61;
      }
      ++v6;
      *(void *)(v7 + 16) = v12 + 1;
      unint64_t v13 = v7 + 16 * v12;
      *(void *)(v13 + 32) = v8;
      *(void *)(v13 + 40) = v10;
    }
    while (v5 != v6);
    swift_bridgeObjectRelease();
    uint64_t v1 = v40;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v7 = MEMORY[0x263F8EE78];
  }
  uint64_t v61 = v7;
  v39[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EAB0);
  v39[2] = sub_251BFC684();
  sub_251F35620();
  swift_bridgeObjectRelease();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  uint64_t v14 = *(void *)(v0 + *(int *)(v1 + 32));
  int64_t v15 = *(void *)(v14 + 16);
  uint64_t v16 = MEMORY[0x263F8EE78];
  if (v15)
  {
    v39[1] = v0;
    uint64_t v61 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_251A3DEDC(0, v15, 0);
    uint64_t v17 = sub_251A53EB8(v14);
    uint64_t v18 = v17;
    uint64_t v20 = v19;
    uint64_t v21 = *(void *)(v48 - 8);
    uint64_t v22 = *(void *)(v21 + 64);
    uint64_t v47 = v14 + 56;
    uint64_t v43 = v21 + 16;
    uint64_t v42 = v21 + 32;
    uint64_t v44 = v21;
    uint64_t v41 = v21 + 8;
    uint64_t v45 = v14;
    uint64_t v46 = v22;
    uint64_t v23 = v21;
    while (1)
    {
      uint64_t result = MEMORY[0x270FA5388](v17);
      uint64_t v25 = (char *)v39 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
      if (v26) {
        break;
      }
      if (v18 < 0 || v18 >= 1 << *(unsigned char *)(v14 + 32))
      {
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
        break;
      }
      if (((*(void *)(v47 + (((unint64_t)v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
        goto LABEL_23;
      }
      if (*(_DWORD *)(v14 + 36) != v20) {
        goto LABEL_24;
      }
      uint64_t v27 = v48;
      uint64_t v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 16))((char *)v39 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), *(void *)(v14 + 48) + *(void *)(v23 + 72) * v18, v48);
      MEMORY[0x270FA5388](v28);
      uint64_t v29 = (char *)v39 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v29, v25, v27);
      uint64_t v30 = sub_251F34D40();
      uint64_t v32 = v31;
      (*(void (**)(char *, uint64_t))(v23 + 8))(v29, v27);
      uint64_t v16 = v61;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_251A3DEDC(0, *(void *)(v16 + 16) + 1, 1);
        uint64_t v16 = v61;
      }
      unint64_t v34 = *(void *)(v16 + 16);
      unint64_t v33 = *(void *)(v16 + 24);
      uint64_t v22 = v46;
      if (v34 >= v33 >> 1)
      {
        sub_251A3DEDC(v33 > 1, v34 + 1, 1);
        uint64_t v22 = v46;
        uint64_t v16 = v61;
      }
      *(void *)(v16 + 16) = v34 + 1;
      unint64_t v35 = v16 + 16 * v34;
      *(void *)(v35 + 32) = v30;
      *(void *)(v35 + 40) = v32;
      uint64_t v14 = v45;
      uint64_t v17 = sub_251A53F5C(v18, v20, 0, v45);
      uint64_t v18 = v17;
      uint64_t v20 = v36;
      char v38 = v37 & 1;
      if (!--v15)
      {
        sub_251A4ECE4(v17, v36, v38);
        swift_bridgeObjectRelease();
        goto LABEL_21;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_21:
    uint64_t v61 = v16;
    sub_251F35620();
    swift_bridgeObjectRelease();
    sub_251F35800();
    swift_bridgeObjectRelease();
    sub_251F35800();
    sub_251F35800();
    sub_251F35800();
    sub_251F35800();
    swift_bridgeObjectRelease();
    sub_251F35800();
    StaticServiceGroup.isActivated.getter();
    sub_251F35800();
    swift_bridgeObjectRelease();
    return v73;
  }
  return result;
}

uint64_t sub_251E49040()
{
  uint64_t v1 = type metadata accessor for StaticMediaSystem();
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = 0;
  unint64_t v51 = 0xE000000000000000;
  sub_251F36400();
  uint64_t v62 = v50;
  unint64_t v63 = v51;
  sub_251F35800();
  swift_bridgeObjectRetain();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  uint64_t v4 = sub_251F34DA0();
  sub_251A1A8EC((unint64_t *)&qword_26B21E6B0);
  uint64_t v37 = v4;
  sub_251F36AB0();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  swift_bridgeObjectRetain();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  uint64_t v50 = StaticMediaSystem.tileStatusString.getter();
  unint64_t v51 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E2A8);
  sub_251F35770();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  sub_251F35800();
  sub_251F35800();
  sub_251E51F50(v0, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
  Icon.init(staticMediaSystem:)((uint64_t)v3, (uint64_t)&v50);
  uint64_t v38 = v50;
  unint64_t v39 = v51;
  char v40 = v52;
  uint64_t v41 = v53;
  uint64_t v42 = v54;
  char v43 = v55;
  uint64_t v44 = v56;
  uint64_t v45 = v57;
  char v46 = v58;
  uint64_t v47 = v59;
  uint64_t v48 = v60;
  char v49 = v61;
  sub_251F36640();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_251F35800();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  uint64_t v6 = MEMORY[0x263F8EE78];
  uint64_t v50 = MEMORY[0x263F8EE78];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EAB0);
  unint64_t v8 = sub_251BFC684();
  v33[4] = v7;
  v33[3] = v8;
  sub_251F35620();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  uint64_t v9 = *(void *)(v0 + *(int *)(v1 + 84));
  int64_t v10 = *(void *)(v9 + 16);
  if (v10)
  {
    v33[1] = v1;
    _OWORD v33[2] = v0;
    uint64_t v50 = v6;
    swift_bridgeObjectRetain();
    sub_251A3DEDC(0, v10, 0);
    uint64_t v11 = sub_251A53EB8(v9);
    uint64_t v12 = v11;
    uint64_t v14 = v13;
    uint64_t v15 = v37;
    uint64_t v16 = *(void *)(v37 - 8);
    uint64_t v17 = *(void *)(v16 + 64);
    uint64_t v36 = v9 + 56;
    v33[7] = v16 + 16;
    v33[6] = v16 + 32;
    v33[8] = v16;
    v33[5] = v16 + 8;
    uint64_t v34 = v9;
    uint64_t v35 = v17;
    uint64_t v18 = v16;
    while (1)
    {
      uint64_t result = MEMORY[0x270FA5388](v11);
      uint64_t v20 = (char *)v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
      if (v21) {
        break;
      }
      if (v12 < 0 || v12 >= 1 << *(unsigned char *)(v9 + 32))
      {
        __break(1u);
LABEL_16:
        __break(1u);
LABEL_17:
        __break(1u);
        break;
      }
      if (((*(void *)(v36 + (((unint64_t)v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
        goto LABEL_16;
      }
      if (*(_DWORD *)(v9 + 36) != v14) {
        goto LABEL_17;
      }
      uint64_t v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 16))((char *)v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), *(void *)(v9 + 48) + *(void *)(v18 + 72) * v12, v15);
      MEMORY[0x270FA5388](v22);
      uint64_t v23 = (char *)v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v23, v20, v15);
      uint64_t v24 = sub_251F34D40();
      uint64_t v26 = v25;
      (*(void (**)(char *, uint64_t))(v18 + 8))(v23, v15);
      uint64_t v6 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_251A3DEDC(0, *(void *)(v6 + 16) + 1, 1);
        uint64_t v6 = v50;
      }
      unint64_t v28 = *(void *)(v6 + 16);
      unint64_t v27 = *(void *)(v6 + 24);
      uint64_t v17 = v35;
      if (v28 >= v27 >> 1)
      {
        sub_251A3DEDC(v27 > 1, v28 + 1, 1);
        uint64_t v17 = v35;
        uint64_t v6 = v50;
      }
      *(void *)(v6 + 16) = v28 + 1;
      unint64_t v29 = v6 + 16 * v28;
      *(void *)(v29 + 32) = v24;
      *(void *)(v29 + 40) = v26;
      uint64_t v9 = v34;
      uint64_t v11 = sub_251A53F5C(v12, v14, 0, v34);
      uint64_t v12 = v11;
      uint64_t v14 = v30;
      char v32 = v31 & 1;
      --v10;
      uint64_t v15 = v37;
      if (!v10)
      {
        sub_251A4ECE4(v11, v30, v32);
        swift_bridgeObjectRelease();
        goto LABEL_14;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_14:
    uint64_t v50 = v6;
    sub_251F35620();
    swift_bridgeObjectRelease();
    sub_251F35800();
    swift_bridgeObjectRelease();
    sub_251F35800();
    sub_251F35800();
    swift_bridgeObjectRelease();
    sub_251F35800();
    sub_251F35800();
    swift_bridgeObjectRelease();
    sub_251F35800();
    sub_251F35800();
    swift_bridgeObjectRelease();
    return v62;
  }
  return result;
}

uint64_t sub_251E498D0()
{
  sub_251F36400();
  uint64_t v58 = 0;
  unint64_t v59 = 0xE000000000000000;
  sub_251F35800();
  sub_251F35800();
  sub_251F35800();
  uint64_t v1 = sub_251F34DA0();
  sub_251A1A8EC((unint64_t *)&qword_26B21E6B0);
  uint64_t v33 = v1;
  sub_251F36AB0();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  uint64_t v2 = type metadata accessor for ActionEndpoint();
  swift_bridgeObjectRetain();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  uint64_t v46 = ActionEndpoint.statusString.getter();
  uint64_t v47 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E2A8);
  sub_251F35770();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  sub_251F35800();
  ActionEndpoint.tileIcon.getter((uint64_t)&v46);
  uint64_t v34 = v46;
  uint64_t v35 = v47;
  char v36 = v48;
  uint64_t v37 = v49;
  uint64_t v38 = v50;
  char v39 = v51;
  uint64_t v40 = v52;
  uint64_t v41 = v53;
  char v42 = v54;
  uint64_t v43 = v55;
  uint64_t v44 = v56;
  char v45 = v57;
  sub_251F36640();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_251F35800();
  sub_251F35800();
  sub_251F35800();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  uint64_t v4 = MEMORY[0x263F8EE78];
  uint64_t v46 = MEMORY[0x263F8EE78];
  v29[2] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EAB0);
  v29[1] = sub_251BFC684();
  sub_251F35620();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  uint64_t v5 = *(void *)(v0 + *(int *)(v2 + 24));
  int64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    v29[0] = v0;
    uint64_t v46 = v4;
    swift_bridgeObjectRetain();
    sub_251A3DEDC(0, v6, 0);
    uint64_t v7 = sub_251A53EB8(v5);
    uint64_t v8 = v7;
    uint64_t v10 = v9;
    uint64_t v11 = v33;
    uint64_t v12 = *(void *)(v33 - 8);
    uint64_t v13 = *(void *)(v12 + 64);
    uint64_t v32 = v5 + 56;
    v29[5] = v12 + 16;
    v29[4] = v12 + 32;
    v29[6] = v12;
    v29[3] = v12 + 8;
    uint64_t v30 = v5;
    uint64_t v31 = v13;
    uint64_t v14 = v12;
    while (1)
    {
      uint64_t result = MEMORY[0x270FA5388](v7);
      uint64_t v16 = (char *)v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
      if (v17) {
        break;
      }
      if (v8 < 0 || v8 >= 1 << *(unsigned char *)(v5 + 32))
      {
        __break(1u);
LABEL_16:
        __break(1u);
LABEL_17:
        __break(1u);
        break;
      }
      if (((*(void *)(v32 + (((unint64_t)v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_16;
      }
      if (*(_DWORD *)(v5 + 36) != v10) {
        goto LABEL_17;
      }
      uint64_t v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), *(void *)(v5 + 48) + *(void *)(v14 + 72) * v8, v11);
      MEMORY[0x270FA5388](v18);
      uint64_t v19 = (char *)v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v19, v16, v11);
      uint64_t v20 = sub_251F34D40();
      uint64_t v22 = v21;
      (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v11);
      uint64_t v4 = v46;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_251A3DEDC(0, *(void *)(v4 + 16) + 1, 1);
        uint64_t v4 = v46;
      }
      unint64_t v24 = *(void *)(v4 + 16);
      unint64_t v23 = *(void *)(v4 + 24);
      uint64_t v13 = v31;
      if (v24 >= v23 >> 1)
      {
        sub_251A3DEDC(v23 > 1, v24 + 1, 1);
        uint64_t v13 = v31;
        uint64_t v4 = v46;
      }
      *(void *)(v4 + 16) = v24 + 1;
      unint64_t v25 = v4 + 16 * v24;
      *(void *)(v25 + 32) = v20;
      *(void *)(v25 + 40) = v22;
      uint64_t v5 = v30;
      uint64_t v7 = sub_251A53F5C(v8, v10, 0, v30);
      uint64_t v8 = v7;
      uint64_t v10 = v26;
      char v28 = v27 & 1;
      --v6;
      uint64_t v11 = v33;
      if (!v6)
      {
        sub_251A4ECE4(v7, v26, v28);
        swift_bridgeObjectRelease();
        goto LABEL_14;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_14:
    uint64_t v46 = v4;
    sub_251F35620();
    swift_bridgeObjectRelease();
    sub_251F35800();
    swift_bridgeObjectRelease();
    sub_251F35800();
    sub_251F35800();
    sub_251F35800();
    sub_251F35800();
    sub_251F35800();
    ActionEndpoint.isActivated.getter();
    sub_251F35800();
    swift_bridgeObjectRelease();
    return v58;
  }
  return result;
}

uint64_t sub_251E4A07C()
{
  sub_251F36400();
  uint64_t v56 = 0;
  unint64_t v57 = 0xE000000000000000;
  sub_251F35800();
  sub_251F35800();
  sub_251F35800();
  uint64_t v1 = sub_251F34DA0();
  sub_251A1A8EC((unint64_t *)&qword_26B21E6B0);
  sub_251F36AB0();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  uint64_t v2 = type metadata accessor for StaticActionSet();
  swift_bridgeObjectRetain();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  uint64_t v44 = 0;
  uint64_t v45 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E2A8);
  sub_251F35770();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  sub_251F35800();
  sub_251F35800();
  uint64_t v3 = v0 + *(int *)(v2 + 32);
  uint64_t v4 = *(void *)(v3 + 8);
  char v5 = *(unsigned char *)(v3 + 16);
  uint64_t v6 = *(void *)(v3 + 24);
  uint64_t v7 = *(void *)(v3 + 32);
  char v8 = *(unsigned char *)(v3 + 40);
  uint64_t v9 = *(void *)(v3 + 48);
  uint64_t v10 = *(void *)(v3 + 56);
  char v11 = *(unsigned char *)(v3 + 64);
  uint64_t v12 = *(void *)(v3 + 72);
  uint64_t v13 = *(void *)(v3 + 80);
  LOBYTE(v3) = *(unsigned char *)(v3 + 88);
  uint64_t v45 = v4;
  char v46 = v5;
  uint64_t v47 = v6;
  uint64_t v48 = v7;
  char v49 = v8;
  uint64_t v50 = v9;
  uint64_t v51 = v10;
  char v52 = v11;
  uint64_t v53 = v12;
  uint64_t v54 = v13;
  char v55 = v3;
  sub_251F36640();
  sub_251F35800();
  sub_251F35800();
  sub_251F35800();
  sub_251F35800();
  sub_251F35800();
  uint64_t v14 = MEMORY[0x263F8EE78];
  uint64_t v44 = MEMORY[0x263F8EE78];
  v39[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EAB0);
  v39[2] = sub_251BFC684();
  sub_251F35620();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  int64_t v15 = *(void *)(*(void *)(v0 + *(int *)(v2 + 40)) + 16);
  if (v15)
  {
    v39[0] = v2;
    v39[1] = v0;
    uint64_t v44 = v14;
    uint64_t v42 = swift_bridgeObjectRetain();
    sub_251A3DEDC(0, v15, 0);
    uint64_t v16 = v42;
    uint64_t v17 = sub_251A53EB8(v42);
    uint64_t v18 = v17;
    uint64_t v20 = v19;
    uint64_t v21 = *(void *)(v1 - 8);
    uint64_t v43 = *(void *)(v21 + 64);
    uint64_t v40 = v1;
    uint64_t v41 = v42 + 56;
    v39[5] = v21 + 32;
    v39[6] = v21 + 16;
    void v39[4] = v21 + 8;
    uint64_t v22 = v1;
    while (1)
    {
      uint64_t result = MEMORY[0x270FA5388](v17);
      unint64_t v25 = (char *)v39 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
      if (v26) {
        break;
      }
      if (v18 < 0 || v18 >= 1 << *(unsigned char *)(v16 + 32))
      {
        __break(1u);
LABEL_16:
        __break(1u);
LABEL_17:
        __break(1u);
        break;
      }
      if (((*(void *)(v41 + (((unint64_t)v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
        goto LABEL_16;
      }
      if (*(_DWORD *)(v16 + 36) != v20) {
        goto LABEL_17;
      }
      uint64_t v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 16))((char *)v39 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0), *(void *)(v16 + 48) + *(void *)(v21 + 72) * v18, v22);
      MEMORY[0x270FA5388](v27);
      unint64_t v29 = (char *)v39 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v29, v25, v22);
      uint64_t v30 = sub_251F34D40();
      uint64_t v32 = v31;
      (*(void (**)(char *, uint64_t))(v21 + 8))(v29, v22);
      uint64_t v14 = v44;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_251A3DEDC(0, *(void *)(v14 + 16) + 1, 1);
        uint64_t v14 = v44;
      }
      unint64_t v34 = *(void *)(v14 + 16);
      unint64_t v33 = *(void *)(v14 + 24);
      uint64_t v16 = v42;
      if (v34 >= v33 >> 1)
      {
        sub_251A3DEDC(v33 > 1, v34 + 1, 1);
        uint64_t v16 = v42;
        uint64_t v14 = v44;
      }
      *(void *)(v14 + 16) = v34 + 1;
      uint64_t v35 = v14 + 16 * v34;
      *(void *)(v35 + 32) = v30;
      *(void *)(v35 + 40) = v32;
      uint64_t v17 = sub_251A53F5C(v18, v20, 0, v16);
      uint64_t v18 = v17;
      uint64_t v20 = v36;
      char v38 = v37 & 1;
      --v15;
      uint64_t v22 = v40;
      if (!v15)
      {
        sub_251A4ECE4(v17, v36, v38);
        swift_bridgeObjectRelease();
        goto LABEL_14;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_14:
    uint64_t v44 = v14;
    sub_251F35620();
    swift_bridgeObjectRelease();
    sub_251F35800();
    swift_bridgeObjectRelease();
    sub_251F35800();
    sub_251F35800();
    swift_bridgeObjectRelease();
    sub_251F35800();
    sub_251F35800();
    swift_bridgeObjectRelease();
    sub_251F35800();
    sub_251F35800();
    swift_bridgeObjectRelease();
    return v56;
  }
  return result;
}

uint64_t type metadata accessor for StaticActionSet()
{
  uint64_t result = qword_26B2206B0;
  if (!qword_26B2206B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t StaticActionSet.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_251F34DA0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t StaticActionSet.name.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for StaticActionSet() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_251E4A8A0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v82 = a3;
  uint64_t v85 = a5;
  char v8 = (int *)type metadata accessor for StaticActionSet();
  uint64_t v84 = *((void *)v8 - 1);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = objc_msgSend(a2, sel_uniqueIdentifier);
  sub_251F34D80();

  id v12 = objc_msgSend(a2, sel_name);
  uint64_t v13 = sub_251F356F0();
  uint64_t v15 = v14;

  uint64_t v16 = (uint64_t *)&v10[v8[5]];
  *uint64_t v16 = v13;
  v16[1] = v15;
  id v17 = objc_msgSend(a2, sel_actions);
  uint64_t v18 = sub_251A1A568(0, (unint64_t *)&qword_26B21EB40);
  uint64_t v80 = sub_251E51E44((unint64_t *)&qword_26B21EB48, (unint64_t *)&qword_26B21EB40);
  uint64_t v81 = v18;
  unint64_t v19 = sub_251F35E40();

  sub_251E4500C(MEMORY[0x263F8EE88], v19);
  uint64_t v21 = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = *(void *)(v21 + 16);
  uint64_t v86 = a1;
  char v83 = a4;
  if (!v22)
  {
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB80);
    uint64_t v23 = sub_251F34DA0();
    v79[1] = 0;
    uint64_t v24 = v23;
    uint64_t v25 = *(void *)(v23 - 8);
    unint64_t v26 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
    uint64_t v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_251F38650;
    v79[0] = v27 + v26;
    id v28 = objc_msgSend(a4, sel_roomForEntireHome);
    id v29 = objc_msgSend(v28, sel_uniqueIdentifier);

    MEMORY[0x270FA5388](v30);
    uint64_t v32 = (char *)v79 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_251F34D80();

    (*(void (**)(void, char *, uint64_t))(v25 + 32))(v79[0], v32, v24);
    a1 = v86;
    uint64_t v21 = sub_251C08E40(v27);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
  }
  *(void *)&v10[v8[10]] = v21;
  unint64_t v33 = &off_26536F000;
  id v34 = objc_msgSend(a2, sel_actionSetType);
  sub_251F356F0();

  HMActionSet.ActionSetKind.init(rawValue:)((char *)v88);
  v10[v8[6]] = v88[0];
  HMActionSet.icon.getter((uint64_t)v88);
  uint64_t v35 = v88[1];
  char v36 = v89;
  uint64_t v37 = v90;
  uint64_t v38 = v91;
  char v39 = v92;
  uint64_t v40 = v93;
  uint64_t v41 = v94;
  char v42 = v95;
  uint64_t v44 = v96;
  uint64_t v43 = v97;
  char v45 = v98;
  char v46 = &v10[v8[8]];
  *(void *)char v46 = v88[0];
  *((void *)v46 + 1) = v35;
  v46[16] = v36;
  *((void *)v46 + 3) = v37;
  *((void *)v46 + 4) = v38;
  v46[40] = v39;
  *((void *)v46 + 6) = v40;
  *((void *)v46 + 7) = v41;
  v46[64] = v42;
  *((void *)v46 + 9) = v44;
  *((void *)v46 + 10) = v43;
  v46[88] = v45;
  uint64_t v47 = HMActionSet.iconTint.getter();
  if (!v47)
  {
    uint64_t v47 = HMActionSet.defaultTint.getter();
    if (!v47)
    {
      if (qword_269B9C508 != -1) {
        swift_once();
      }
      swift_beginAccess();
      uint64_t v47 = swift_retain();
    }
  }
  *(void *)&v10[v8[9]] = v47;
  int v48 = sub_251E4DEF4(a1, a2);
  LODWORD(v80) = v48;
  if (v48 == 2)
  {
    id v49 = objc_msgSend(a2, sel_actions);
    unint64_t v50 = sub_251F35E40();

    uint64_t v51 = v82;
    swift_bridgeObjectRetain();
    sub_251E4F6A4(1u, v50, v51);
    char v53 = v52;
    unint64_t v33 = &off_26536F000;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v54 = v48;
    swift_bridgeObjectRelease();
    char v53 = v54 & 1;
  }
  v10[v8[13]] = v53 & 1;
  id v55 = objc_msgSend(a2, sel_actions);
  uint64_t v56 = sub_251F35E40();

  sub_251E4531C(MEMORY[0x263F8EE88], v56);
  uint64_t v58 = v57;
  swift_bridgeObjectRelease();
  *(void *)&v10[v8[12]] = v58;
  id v59 = objc_msgSend(a2, sel_actions);
  uint64_t v60 = sub_251F35E40();

  if ((v60 & 0xC000000000000001) != 0) {
    uint64_t v61 = sub_251F36300();
  }
  else {
    uint64_t v61 = *(void *)(v60 + 16);
  }
  swift_bridgeObjectRelease();
  if (!v61) {
    goto LABEL_17;
  }
  id v62 = objc_msgSend(a2, sel_applicationData);
  unint64_t v63 = (void *)sub_251F356C0();
  id v64 = objc_msgSend(v62, sel_objectForKeyedSubscript_, v63);

  if (v64)
  {
    swift_unknownObjectRelease();
    char v65 = HMActionSet.shouldShowInDashboard.getter();
    goto LABEL_18;
  }
  id v66 = objc_msgSend(a2, sel_home);
  if (!v66 || (uint64_t v67 = v66, v68 = HMHome.showPredictedScenesOnDashboard.getter(), v67, (v68 & 1) != 0))
  {
    id v69 = [a2 (SEL)v33[349]];
    sub_251F356F0();

    HMActionSet.ActionSetKind.init(rawValue:)((char *)&v87);
    char v65 = sub_251D825B8(v87, (uint64_t)&unk_2702624A0);
  }
  else
  {
LABEL_17:
    char v65 = 0;
  }
LABEL_18:
  v10[v8[11]] = v65 & 1;
  uint64_t v70 = v83;
  if ((v80 & 0x100) != 0) {
    unsigned __int8 v71 = 2;
  }
  else {
    unsigned __int8 v71 = objc_msgSend(a2, sel_isExecuting);
  }
  v10[v8[14]] = v71;
  id v72 = objc_msgSend(v70, sel_uniqueIdentifier);
  uint64_t v73 = sub_251F34DA0();
  uint64_t v74 = *(void *)(v73 - 8);
  MEMORY[0x270FA5388](v73);
  uint64_t v76 = (char *)v79 - ((v75 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34D80();

  sub_251E51EF0(v86, type metadata accessor for StateSnapshot.UpdateType);
  (*(void (**)(char *, char *, uint64_t))(v74 + 32))(&v10[v8[7]], v76, v73);
  uint64_t v77 = v85;
  sub_251E51E88((uint64_t)v10, v85, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, int *))(v84 + 56))(v77, 0, 1, v8);
}

uint64_t StaticActionSet.actionSet.getter()
{
  *(void *)(v1 + 16) = v0;
  uint64_t v4 = (uint64_t (__cdecl *)())((char *)&dword_269BA1370 + dword_269BA1370);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_251E4B194;
  return v4();
}

uint64_t sub_251E4B194(uint64_t a1)
{
  *(void *)(*(void *)v1 + 32) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251E4B294, 0, 0);
}

uint64_t sub_251E4B294()
{
  Class isa = v0[4].super.isa;
  if (isa)
  {
    unint64_t v2 = (unint64_t)StaticActionSet.get(from:)(v0[4]);
  }
  else
  {
    unint64_t v2 = 0;
  }
  uint64_t v3 = (uint64_t (*)(unint64_t))v0[1].super.isa;
  return v3(v2);
}

BOOL static StaticActionSet.ExecutionStatus.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t StaticActionSet.ExecutionStatus.hash(into:)()
{
  return sub_251F36CB0();
}

uint64_t sub_251E4B34C()
{
  uint64_t v1 = 0x6E69747563657865;
  if (*v0 != 1) {
    uint64_t v1 = 0x64656C696166;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1701736302;
  }
}

uint64_t sub_251E4B3A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251E4FB2C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251E4B3C8(uint64_t a1)
{
  unint64_t v2 = sub_251E4F9DC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E4B404(uint64_t a1)
{
  unint64_t v2 = sub_251E4F9DC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251E4B440(uint64_t a1)
{
  unint64_t v2 = sub_251E4FA84();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E4B47C(uint64_t a1)
{
  unint64_t v2 = sub_251E4FA84();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251E4B4B8(uint64_t a1)
{
  unint64_t v2 = sub_251E4FA30();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E4B4F4(uint64_t a1)
{
  unint64_t v2 = sub_251E4FA30();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251E4B530(uint64_t a1)
{
  unint64_t v2 = sub_251E4FAD8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E4B56C(uint64_t a1)
{
  unint64_t v2 = sub_251E4FAD8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticActionSet.ExecutionStatus.encode(to:)(void *a1, int a2)
{
  int v24 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA47E8);
  uint64_t v22 = *(void *)(v3 - 8);
  uint64_t v23 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v21 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA47F0);
  uint64_t v19 = *(void *)(v5 - 8);
  uint64_t v20 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA47F8);
  uint64_t v18 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4800);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251E4F9DC();
  sub_251F36DA0();
  if ((_BYTE)v24)
  {
    if (v24 == 1)
    {
      char v26 = 1;
      sub_251E4FA84();
      sub_251F36900();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v20);
    }
    else
    {
      char v27 = 2;
      sub_251E4FA30();
      uint64_t v15 = v21;
      sub_251F36900();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v15, v23);
    }
  }
  else
  {
    char v25 = 0;
    sub_251E4FAD8();
    sub_251F36900();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v10, v8);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t StaticActionSet.ExecutionStatus.hashValue.getter()
{
  return sub_251F36D00();
}

void *StaticActionSet.ExecutionStatus.init(from:)(void *a1)
{
  return sub_251E4FC78(a1);
}

void *sub_251E4B974@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_251E4FC78(a1);
  if (!v2) {
    *a2 = (_BYTE)result;
  }
  return result;
}

uint64_t sub_251E4B9A0(void *a1)
{
  return StaticActionSet.ExecutionStatus.encode(to:)(a1, *v1);
}

uint64_t static StaticActionSet.Error.== infix(_:_:)()
{
  return 1;
}

uint64_t StaticActionSet.Error.hash(into:)()
{
  return sub_251F36CB0();
}

uint64_t StaticActionSet.Error.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t StaticActionSet.actionSetKind.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for StaticActionSet();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t StaticActionSet.homeId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for StaticActionSet() + 28);
  uint64_t v4 = sub_251F34DA0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t StaticActionSet.tileIcon.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for StaticActionSet() + 32));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  char v6 = *((unsigned char *)v3 + 16);
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  char v9 = *((unsigned char *)v3 + 40);
  uint64_t v10 = v3[6];
  uint64_t v11 = v3[7];
  char v12 = *((unsigned char *)v3 + 64);
  uint64_t v13 = v3[9];
  uint64_t v14 = v3[10];
  LOBYTE(v3) = *((unsigned char *)v3 + 88);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(unsigned char *)(a1 + 64) = v12;
  *(void *)(a1 + 72) = v13;
  *(void *)(a1 + 80) = v14;
  *(unsigned char *)(a1 + 88) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t StaticActionSet.roomIds.getter()
{
  type metadata accessor for StaticActionSet();
  return swift_bridgeObjectRetain();
}

uint64_t StaticActionSet.umbrellaCategories.getter()
{
  type metadata accessor for StaticActionSet();
  return swift_bridgeObjectRetain();
}

uint64_t StaticActionSet.isActivated.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticActionSet() + 52));
}

uint64_t StaticActionSet.executionStatus.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticActionSet() + 56));
}

uint64_t StaticActionSet.hash(into:)(long long *a1)
{
  uint64_t v2 = v1;
  sub_251F34DA0();
  sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
  sub_251F35610();
  uint64_t v4 = (int *)type metadata accessor for StaticActionSet();
  swift_bridgeObjectRetain();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(v1 + v4[6]) == 7)
  {
    sub_251F36CC0();
  }
  else
  {
    sub_251F36CC0();
    sub_251F357B0();
    swift_bridgeObjectRelease();
  }
  sub_251F35610();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_251F357B0();
  sub_251F36CB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_251F357B0();
  sub_251F36CB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_251F357B0();
  sub_251F36CB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_251F357B0();
  sub_251F36CB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_retain();
  sub_251F35330();
  swift_release();
  uint64_t v5 = *(void *)(v1 + v4[10]);
  swift_bridgeObjectRetain();
  sub_251A54708(a1, v5);
  swift_bridgeObjectRelease();
  sub_251F36CC0();
  uint64_t v6 = *(void *)(v2 + v4[12]);
  swift_bridgeObjectRetain();
  sub_251A55600((uint64_t)a1, v6);
  swift_bridgeObjectRelease();
  sub_251F36CC0();
  return sub_251F36CB0();
}

unint64_t sub_251E4BFA8(char a1)
{
  unint64_t result = 25705;
  switch(a1)
  {
    case 1:
      unint64_t result = 1701667182;
      break;
    case 2:
      unint64_t result = 0x65536E6F69746361;
      break;
    case 3:
      unint64_t result = 0x6449656D6F68;
      break;
    case 4:
    case 5:
      unint64_t result = 0x6E6F6349656C6974;
      break;
    case 6:
      unint64_t result = 0x7364496D6F6F72;
      break;
    case 7:
      unint64_t result = 0xD000000000000015;
      break;
    case 8:
      unint64_t result = 0xD000000000000012;
      break;
    case 9:
      unint64_t result = 0x6176697463417369;
      break;
    case 10:
      unint64_t result = 0x6F69747563657865;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_251E4C10C()
{
  return sub_251E4BFA8(*v0);
}

uint64_t sub_251E4C114@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251E519A0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251E4C13C(uint64_t a1)
{
  unint64_t v2 = sub_251E501E8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E4C178(uint64_t a1)
{
  unint64_t v2 = sub_251E501E8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticActionSet.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4828);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251E501E8();
  sub_251F36DA0();
  LOBYTE(v23[0]) = 0;
  sub_251F34DA0();
  sub_251A1A8EC(&qword_26B21E348);
  sub_251F36A20();
  if (!v2)
  {
    char v9 = (int *)type metadata accessor for StaticActionSet();
    LOBYTE(v23[0]) = 1;
    sub_251F369D0();
    LOBYTE(v23[0]) = *(unsigned char *)(v3 + v9[6]);
    char v34 = 2;
    sub_251CA7008();
    sub_251F36970();
    LOBYTE(v23[0]) = 3;
    sub_251F36A20();
    uint64_t v10 = (uint64_t *)(v3 + v9[8]);
    uint64_t v11 = *v10;
    uint64_t v12 = v10[1];
    char v13 = *((unsigned char *)v10 + 16);
    uint64_t v14 = v10[3];
    uint64_t v15 = v10[4];
    char v16 = *((unsigned char *)v10 + 40);
    uint64_t v17 = v10[6];
    uint64_t v18 = v10[7];
    char v19 = *((unsigned char *)v10 + 64);
    uint64_t v21 = v10[9];
    uint64_t v20 = v10[10];
    LOBYTE(v10) = *((unsigned char *)v10 + 88);
    v23[0] = v11;
    v23[1] = v12;
    char v24 = v13;
    uint64_t v25 = v14;
    uint64_t v26 = v15;
    char v27 = v16;
    uint64_t v28 = v17;
    uint64_t v29 = v18;
    char v30 = v19;
    uint64_t v31 = v21;
    uint64_t v32 = v20;
    char v33 = (char)v10;
    char v34 = 4;
    sub_251E5023C();
    sub_251F36A20();
    v23[0] = *(void *)(v3 + v9[9]);
    char v34 = 5;
    sub_251E50290();
    sub_251F36A20();
    v23[0] = *(void *)(v3 + v9[10]);
    char v34 = 6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC40);
    sub_251A1E490(&qword_269B9CC88, &qword_26B21E348);
    sub_251F36A20();
    LOBYTE(v23[0]) = 7;
    sub_251F369E0();
    v23[0] = *(void *)(v3 + v9[12]);
    char v34 = 8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4848);
    sub_251E503E0(&qword_269BA4850, (void (*)(void))sub_251D06C80);
    sub_251F36A20();
    LOBYTE(v23[0]) = 9;
    sub_251F369E0();
    LOBYTE(v23[0]) = *(unsigned char *)(v3 + v9[14]);
    char v34 = 10;
    sub_251E502E4();
    sub_251F36A20();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t StaticActionSet.hashValue.getter()
{
  sub_251F36CA0();
  StaticActionSet.hash(into:)(v1);
  return sub_251F36D00();
}

uint64_t StaticActionSet.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4860);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v50 = (int *)type metadata accessor for StaticActionSet();
  MEMORY[0x270FA5388](v50);
  uint64_t v51 = (char *)v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251E501E8();
  sub_251F36D90();
  if (v2)
  {
    uint64_t v49 = v2;
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    uint64_t v46 = v6;
    uint64_t v47 = a1;
    uint64_t v45 = a2;
    uint64_t v10 = v5;
    uint64_t v11 = sub_251F34DA0();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(void *)(v12 + 64);
    MEMORY[0x270FA5388](v11);
    LOBYTE(v52) = 0;
    uint64_t v14 = sub_251A1A8EC(&qword_269B9CC80);
    uint64_t v48 = v10;
    sub_251F36880();
    uint64_t v49 = v14;
    uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v15(v51, (char *)v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
    LOBYTE(v52) = 1;
    uint64_t v16 = sub_251F36830();
    uint64_t v43 = v15;
    uint64_t v44 = v12 + 32;
    uint64_t v23 = v50;
    uint64_t v22 = v51;
    char v24 = (uint64_t *)&v51[v50[5]];
    *char v24 = v16;
    v24[1] = v25;
    char v64 = 2;
    sub_251CA7254();
    uint64_t v26 = sub_251F367D0();
    v42[1] = v42;
    v22[v23[6]] = v52;
    MEMORY[0x270FA5388](v26);
    LOBYTE(v52) = 3;
    sub_251F36880();
    v43(&v22[v23[7]], (char *)v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
    char v64 = 4;
    sub_251E50338();
    sub_251F36880();
    uint64_t v27 = v53;
    char v28 = v54;
    uint64_t v29 = v55;
    uint64_t v30 = v56;
    char v31 = v57;
    uint64_t v32 = v58;
    uint64_t v33 = v59;
    char v34 = v60;
    uint64_t v35 = v61;
    uint64_t v36 = v62;
    char v37 = v63;
    uint64_t v38 = &v22[v23[8]];
    *(void *)uint64_t v38 = v52;
    *((void *)v38 + 1) = v27;
    v38[16] = v28;
    *((void *)v38 + 3) = v29;
    *((void *)v38 + 4) = v30;
    v38[40] = v31;
    *((void *)v38 + 6) = v32;
    *((void *)v38 + 7) = v33;
    v38[64] = v34;
    *((void *)v38 + 9) = v35;
    *((void *)v38 + 10) = v36;
    v38[88] = v37;
    char v64 = 5;
    sub_251E5038C();
    sub_251F36880();
    *(void *)&v22[v23[9]] = v52;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC40);
    char v64 = 6;
    sub_251A1E490(&qword_269B9CC78, &qword_269B9CC80);
    sub_251F36880();
    *(void *)&v22[v23[10]] = v52;
    LOBYTE(v52) = 7;
    v22[v23[11]] = sub_251F36840() & 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4848);
    char v64 = 8;
    sub_251E503E0(&qword_269BA4878, (void (*)(void))sub_251D06E10);
    sub_251F36880();
    *(void *)&v22[v23[12]] = v52;
    LOBYTE(v52) = 9;
    char v39 = sub_251F36840();
    uint64_t v49 = 0;
    v51[v50[13]] = v39 & 1;
    char v64 = 10;
    sub_251E50450();
    uint64_t v40 = v49;
    sub_251F36880();
    uint64_t v49 = v40;
    (*(void (**)(char *, uint64_t))(v46 + 8))(v8, v48);
    uint64_t v41 = (uint64_t)v51;
    if (v40)
    {
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v47);
      uint64_t v20 = sub_251F34DA0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v41, v20);
      uint64_t v21 = v50;
      swift_bridgeObjectRelease();
      uint64_t v18 = v41 + v21[7];
      uint64_t v19 = sub_251F34DA0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    else
    {
      v51[v50[14]] = v52;
      sub_251E51F50(v41, v45, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v47);
      return sub_251E51EF0(v41, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
    }
  }
}

uint64_t sub_251E4CFD4()
{
  sub_251F36CA0();
  StaticActionSet.hash(into:)(v1);
  return sub_251F36D00();
}

uint64_t sub_251E4D018()
{
  sub_251F36CA0();
  StaticActionSet.hash(into:)(v1);
  return sub_251F36D00();
}

uint64_t sub_251E4D054@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticActionSet.init(from:)(a1, a2);
}

uint64_t sub_251E4D06C(void *a1)
{
  return StaticActionSet.encode(to:)(a1);
}

uint64_t _s13HomeDataModel15StaticActionSetV12tileIconTint7SwiftUI5ColorVvg_0()
{
  type metadata accessor for StaticActionSet();
  return swift_retain();
}

uint64_t StaticActionSet.isDoubleHigh.getter()
{
  return 0;
}

void StaticActionSet.primaryServiceKind.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t StaticActionSet.dateAdded.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_251F34D20();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  return v3(a1, 1, 1, v2);
}

uint64_t StaticActionSet.isFavorite.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticActionSet() + 44));
}

uint64_t StaticActionSet.roomName.getter()
{
  return 0;
}

uint64_t StaticActionSet.canBeToggled.getter()
{
  return 1;
}

uint64_t StaticActionSet.isReachable.getter()
{
  return 1;
}

uint64_t StaticActionSet.statusString.getter()
{
  return 0;
}

uint64_t StaticActionSet.tileStatusString.getter()
{
  return 0;
}

uint64_t sub_251E4D190@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = (uint64_t *)(v2 + *(int *)(a1 + 32));
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  char v6 = *((unsigned char *)v3 + 16);
  uint64_t v7 = v3[3];
  uint64_t v8 = v3[4];
  char v9 = *((unsigned char *)v3 + 40);
  uint64_t v10 = v3[6];
  uint64_t v11 = v3[7];
  char v12 = *((unsigned char *)v3 + 64);
  uint64_t v13 = v3[9];
  uint64_t v14 = v3[10];
  LOBYTE(v3) = *((unsigned char *)v3 + 88);
  *(void *)a2 = v5;
  *(void *)(a2 + 8) = v4;
  *(unsigned char *)(a2 + 16) = v6;
  *(void *)(a2 + 24) = v7;
  *(void *)(a2 + 32) = v8;
  *(unsigned char *)(a2 + 40) = v9;
  *(void *)(a2 + 48) = v10;
  *(void *)(a2 + 56) = v11;
  *(unsigned char *)(a2 + 64) = v12;
  *(void *)(a2 + 72) = v13;
  *(void *)(a2 + 80) = v14;
  *(unsigned char *)(a2 + 88) = (_BYTE)v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_251E4D224()
{
  return swift_retain();
}

uint64_t sub_251E4D230()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_251E4D23C()
{
  return 0x6341636974617473;
}

BOOL sub_251E4D26C(uint64_t a1, uint64_t a2)
{
  return (_s13HomeDataModel15StaticActionSetV1loiySbAC_ACtFZ_0(a2, a1) & 1) == 0;
}

BOOL sub_251E4D298(uint64_t a1, uint64_t a2)
{
  return (_s13HomeDataModel15StaticActionSetV1loiySbAC_ACtFZ_0(a1, a2) & 1) == 0;
}

uint64_t sub_251E4D2B8(uint64_t a1, uint64_t a2)
{
  return _s13HomeDataModel15StaticActionSetV1loiySbAC_ACtFZ_0(a2, a1);
}

uint64_t sub_251E4D2C8@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x270FA5388](updated - 8);
  uint64_t v15 = (char *)v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *a1;
  uint64_t v17 = sub_251BFEA94(a2);
  if (!v17) {
    goto LABEL_3;
  }
  uint64_t v18 = v17;
  id v19 = objc_msgSend(v16, sel_uniqueIdentifier);
  uint64_t v20 = sub_251F34DA0();
  uint64_t v33 = a3;
  uint64_t v34 = v6;
  uint64_t v21 = v20;
  uint64_t v35 = a6;
  v32[1] = v32;
  uint64_t v22 = a5;
  uint64_t v23 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v25 = a4;
  uint64_t v26 = (char *)v32 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34D80();

  LOBYTE(v19) = sub_251DB3C24((uint64_t)v26, v18);
  swift_bridgeObjectRelease();
  uint64_t v27 = v26;
  a4 = v25;
  uint64_t v28 = v21;
  a3 = v33;
  (*(void (**)(char *, uint64_t))(v23 + 8))(v27, v28);
  a5 = v22;
  a6 = v35;
  if ((v19 & 1) == 0)
  {
    uint64_t v31 = type metadata accessor for StaticActionSet();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(a6, 1, 1, v31);
  }
  else
  {
LABEL_3:
    sub_251E51F50(a3, (uint64_t)v15, type metadata accessor for StateSnapshot.UpdateType);
    id v29 = v16;
    swift_bridgeObjectRetain();
    return sub_251E4A8A0((uint64_t)v15, v29, a4, a5, a6);
  }
}

void sub_251E4D520(uint64_t a1, void **a2)
{
  uint64_t v74 = a1;
  uint64_t v3 = *a2;
  self;
  if (!swift_dynamicCastObjCClass())
  {
    self;
    if (!swift_dynamicCastObjCClass()) {
      return;
    }
    uint64_t v70 = v2;
    self;
    uint64_t v26 = (void *)swift_dynamicCastObjCClassUnconditional();
    id v69 = v3;
    id v27 = objc_msgSend(v26, sel_mediaProfiles);
    uint64_t v28 = sub_251A1A568(0, &qword_269B9D128);
    sub_251E51E44((unint64_t *)&qword_269BA4940, &qword_269B9D128);
    uint64_t v29 = sub_251F35E40();

    uint64_t v72 = v28;
    if ((v29 & 0xC000000000000001) != 0)
    {
      sub_251F362B0();
      sub_251F35E90();
      uint64_t v29 = v85;
      uint64_t v76 = v86;
      uint64_t v30 = v87;
      uint64_t v31 = (uint64_t)v88;
      unint64_t v32 = v89;
    }
    else
    {
      uint64_t v31 = 0;
      uint64_t v33 = -1 << *(unsigned char *)(v29 + 32);
      uint64_t v34 = *(void *)(v29 + 56);
      uint64_t v76 = v29 + 56;
      uint64_t v35 = ~v33;
      uint64_t v36 = -v33;
      if (v36 < 64) {
        uint64_t v37 = ~(-1 << v36);
      }
      else {
        uint64_t v37 = -1;
      }
      unint64_t v32 = v37 & v34;
      uint64_t v30 = v35;
    }
    uint64_t v73 = v29 & 0x7FFFFFFFFFFFFFFFLL;
    v68[1] = v30;
    int64_t v75 = (unint64_t)(v30 + 64) >> 6;
    uint64_t v71 = MEMORY[0x263F8EE50] + 8;
    unint64_t v80 = v29;
    while (1)
    {
      if (v29 < 0)
      {
        uint64_t v42 = sub_251F36340();
        if (!v42) {
          goto LABEL_45;
        }
        uint64_t v84 = v42;
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v43 = v90;
        swift_unknownObjectRelease();
        uint64_t v41 = v31;
        uint64_t v39 = v32;
        if (!v43) {
          goto LABEL_45;
        }
      }
      else
      {
        if (v32)
        {
          uint64_t v39 = (v32 - 1) & v32;
          unint64_t v40 = __clz(__rbit64(v32)) | (v31 << 6);
          uint64_t v41 = v31;
        }
        else
        {
          int64_t v44 = v31 + 1;
          if (__OFADD__(v31, 1))
          {
            __break(1u);
            return;
          }
          if (v44 >= v75) {
            goto LABEL_45;
          }
          unint64_t v45 = *(void *)(v76 + 8 * v44);
          uint64_t v41 = v31 + 1;
          if (!v45)
          {
            uint64_t v41 = v31 + 2;
            if (v31 + 2 >= v75) {
              goto LABEL_45;
            }
            unint64_t v45 = *(void *)(v76 + 8 * v41);
            if (!v45)
            {
              uint64_t v41 = v31 + 3;
              if (v31 + 3 >= v75) {
                goto LABEL_45;
              }
              unint64_t v45 = *(void *)(v76 + 8 * v41);
              if (!v45)
              {
                uint64_t v41 = v31 + 4;
                if (v31 + 4 >= v75) {
                  goto LABEL_45;
                }
                unint64_t v45 = *(void *)(v76 + 8 * v41);
                if (!v45)
                {
                  uint64_t v46 = v31 + 5;
                  while (v75 != v46)
                  {
                    unint64_t v45 = *(void *)(v76 + 8 * v46++);
                    if (v45)
                    {
                      uint64_t v41 = v46 - 1;
                      goto LABEL_39;
                    }
                  }
LABEL_45:
                  sub_251A1E630();

                  return;
                }
              }
            }
          }
LABEL_39:
          uint64_t v39 = (v45 - 1) & v45;
          unint64_t v40 = __clz(__rbit64(v45)) + (v41 << 6);
        }
        id v43 = *(id *)(*(void *)(v29 + 48) + 8 * v40);
        if (!v43) {
          goto LABEL_45;
        }
      }
      char v83 = (void *)v39;
      uint64_t v81 = (void *)v41;
      uint64_t v47 = sub_251F34DA0();
      uint64_t v48 = *(void *)(v47 - 8);
      uint64_t v49 = *(void *)(v48 + 64);
      MEMORY[0x270FA5388](v47);
      uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
      uint64_t v82 = v68;
      MEMORY[0x270FA5388](v50 - 8);
      uint64_t v52 = (char *)v68 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
      id v53 = objc_msgSend(v43, sel_accessory);
      if (!v53) {
        break;
      }
      char v54 = v53;
      id v55 = objc_msgSend(v53, sel_room);

      if (!v55) {
        break;
      }
      uint64_t v78 = (char *)v68 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
      id v56 = objc_msgSend(v55, sel_uniqueIdentifier);

      uint64_t v79 = v68;
      MEMORY[0x270FA5388](v57);
      unint64_t v77 = (v49 + 15) & 0xFFFFFFFFFFFFFFF0;
      uint64_t v58 = (char *)v68 - v77;
      sub_251F34D80();

      uint64_t v59 = *(void (**)(char *, char *, uint64_t))(v48 + 32);
      v59(v52, v58, v47);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v52, 0, 1, v47);
      int v60 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v48 + 48))(v52, 1, v47);
      uint64_t v38 = v81;
      if (v60 == 1) {
        goto LABEL_18;
      }
      uint64_t v61 = v78;
      uint64_t v62 = ((uint64_t (*)(char *, char *, uint64_t))v59)(v78, v52, v47);
      uint64_t v63 = MEMORY[0x270FA5388](v62);
      char v64 = (char *)v68 - v77;
      MEMORY[0x270FA5388](v63);
      id v66 = (char *)v68 - v65;
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))((char *)v68 - v65, v61, v47);
      sub_251A637B8(v64, v66);

      uint64_t v67 = *(void (**)(char *, uint64_t))(v48 + 8);
      v67(v64, v47);
      v67(v61, v47);
LABEL_19:
      uint64_t v29 = v80;
      uint64_t v31 = (uint64_t)v38;
      unint64_t v32 = (unint64_t)v83;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v48 + 56))(v52, 1, 1, v47);
    uint64_t v38 = v81;
LABEL_18:

    sub_251A1B064((uint64_t)v52, &qword_26B21FF90);
    goto LABEL_19;
  }
  uint64_t v70 = v2;
  self;
  uint64_t v4 = (void *)swift_dynamicCastObjCClassUnconditional();
  uint64_t v5 = sub_251F34DA0();
  char v83 = v68;
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = v3;
  id v12 = objc_msgSend(v4, sel_characteristic);
  id v13 = objc_msgSend(v12, sel_service);

  if (v13
    && (id v14 = objc_msgSend(v13, sel_accessory), v13, v14)
    && (id v15 = objc_msgSend(v14, sel_room), v14, v15))
  {
    id v16 = objc_msgSend(v15, sel_uniqueIdentifier);

    uint64_t v81 = v68;
    MEMORY[0x270FA5388](v17);
    unint64_t v80 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v18 = (char *)v68 - v80;
    sub_251F34D80();

    id v19 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v19(v11, v18, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v11, 0, 1, v5);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5) != 1)
    {
      uint64_t v20 = ((uint64_t (*)(char *, char *, uint64_t))v19)((char *)v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v11, v5);
      uint64_t v21 = MEMORY[0x270FA5388](v20);
      uint64_t v22 = (char *)v68 - v80;
      MEMORY[0x270FA5388](v21);
      uint64_t v24 = (char *)v68 - v23;
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))((char *)v68 - v23, v8, v5);
      sub_251A637B8(v22, v24);

      uint64_t v25 = *(void (**)(char *, uint64_t))(v6 + 8);
      v25(v22, v5);
      v25(v8, v5);
      return;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v11, 1, 1, v5);
  }

  sub_251A1B064((uint64_t)v11, &qword_26B21FF90);
}

uint64_t sub_251E4DEF4(uint64_t a1, void *a2)
{
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x270FA5388](updated);
  uint64_t v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_251E51F50(a1, (uint64_t)v6, type metadata accessor for StateSnapshot.UpdateType);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v7 = *((void *)v6 + 1);
    uint64_t v8 = *((void *)v6 + 2);
    swift_bridgeObjectRelease();
    uint64_t v9 = sub_251F34DA0();
    uint64_t v10 = *(void *)(v9 - 8);
    MEMORY[0x270FA5388](v9);
    id v12 = &v20[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
    id v13 = objc_msgSend(a2, sel_uniqueIdentifier);
    sub_251F34D80();

    MEMORY[0x270FA5388](v14);
    *(void *)&v20[-16] = v12;
    char v15 = sub_251C60708((uint64_t (*)(char *))sub_251E51FB8, (uint64_t)&v20[-32], v7);
    uint64_t v16 = swift_bridgeObjectRelease();
    int v17 = v15 & 1;
    MEMORY[0x270FA5388](v16);
    *(void *)&v20[-16] = v12;
    LOBYTE(v13) = sub_251C60708((uint64_t (*)(char *))sub_251E520C4, (uint64_t)&v20[-32], v8);
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v12, v9);
    swift_bridgeObjectRelease();
    int v18 = v13 & 1;
  }
  else
  {
    sub_251E51EF0((uint64_t)v6, type metadata accessor for StateSnapshot.UpdateType);
    int v17 = 2;
    int v18 = 2;
  }
  return v17 | (v18 << 8);
}

void sub_251E4E16C(unsigned __int8 *a1@<X0>, void **a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X8>)
{
  uint64_t v82 = a3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F108);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v79 = &v70[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = type metadata accessor for StaticCharacteristic();
  uint64_t v78 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  id v12 = &v70[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = type metadata accessor for StaticService();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v80 = v13;
  uint64_t v81 = v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  int v17 = &v70[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v15);
  id v19 = &v70[-v18];
  int v20 = *a1;
  uint64_t v21 = *a2;
  self;
  uint64_t v22 = swift_dynamicCastObjCClass();
  if (!v22)
  {
    *a4 = v20;
    return;
  }
  uint64_t v72 = v12;
  uint64_t v73 = v10;
  int v71 = v20;
  int64_t v75 = v19;
  uint64_t v85 = a4;
  uint64_t v23 = (void *)v22;
  uint64_t v24 = sub_251F34DA0();
  char v83 = v70;
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(void *)(v25 + 64);
  MEMORY[0x270FA5388](v24);
  unint64_t v27 = (v26 + 15) & 0xFFFFFFFFFFFFFFF0;
  unint64_t v77 = &v70[-v27];
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  v88 = v70;
  MEMORY[0x270FA5388](v28 - 8);
  uint64_t v30 = &v70[-((v29 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v84 = v21;
  id v74 = v23;
  id v31 = objc_msgSend(v23, sel_characteristic);
  id v32 = objc_msgSend(v31, sel_service);

  if (!v32)
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v25 + 56))(v30, 1, 1, v24);
    goto LABEL_10;
  }
  id v33 = objc_msgSend(v32, sel_uniqueIdentifier);

  uint64_t v76 = v4;
  MEMORY[0x270FA5388](v34);
  sub_251F34D80();

  uint64_t v35 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v25 + 32);
  v35(v30, &v70[-v27], v24);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v25 + 56))(v30, 0, 1, v24);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v25 + 48))(v30, 1, v24) == 1)
  {
LABEL_10:

    sub_251A1B064((uint64_t)v30, &qword_26B21FF90);
    goto LABEL_12;
  }
  uint64_t v36 = v25;
  uint64_t v37 = v24;
  uint64_t v38 = (uint64_t)v77;
  v35(v77, v30, v24);
  uint64_t v39 = v82;
  if (!*(void *)(v82 + 16) || (unint64_t v40 = sub_2519FE584(v38), (v41 & 1) == 0))
  {
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v38, v37);

    goto LABEL_12;
  }
  sub_251E51F50(*(void *)(v39 + 56) + *(void *)(v81 + 72) * v40, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for StaticService);
  uint64_t v42 = (uint64_t)v75;
  sub_251E51E88((uint64_t)v17, (uint64_t)v75, (uint64_t (*)(void))type metadata accessor for StaticService);
  id v43 = objc_msgSend(v74, sel_characteristic);
  id v44 = objc_msgSend(v43, sel_characteristicType);

  uint64_t v45 = sub_251F356F0();
  uint64_t v47 = v46;

  v48._uint64_t countAndFlagsBits = v45;
  v48._object = v47;
  CharacteristicKind.init(rawValue:)(v48);
  uint64_t v49 = LOBYTE(v86[0]);
  if (LOBYTE(v86[0]) == 174)
  {

    sub_251E51EF0(v42, (uint64_t (*)(void))type metadata accessor for StaticService);
    (*(void (**)(unsigned char *, uint64_t))(v36 + 8))(v77, v37);
LABEL_12:
    uint64_t v50 = v85;
LABEL_13:
    *uint64_t v50 = 0;
    return;
  }
  uint64_t v51 = *(void *)(v42 + *(int *)(v80 + 112));
  if (!*(void *)(v51 + 16))
  {
    id v55 = v79;
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v78 + 56))(v79, 1, 1, v73);
    uint64_t v57 = v77;
LABEL_20:

    sub_251E51EF0((uint64_t)v75, (uint64_t (*)(void))type metadata accessor for StaticService);
    (*(void (**)(unsigned char *, uint64_t))(v36 + 8))(v57, v37);
    sub_251A1B064((uint64_t)v55, &qword_26B21F108);
    uint64_t v50 = v85;
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  unint64_t v52 = sub_2519FE568(v49);
  if (v53)
  {
    uint64_t v54 = v78;
    id v55 = v79;
    sub_251E51F50(*(void *)(v51 + 56) + *(void *)(v78 + 72) * v52, (uint64_t)v79, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
    uint64_t v56 = 0;
  }
  else
  {
    uint64_t v56 = 1;
    uint64_t v54 = v78;
    id v55 = v79;
  }
  uint64_t v58 = v73;
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v54 + 56))(v55, v56, 1, v73);
  swift_bridgeObjectRelease();
  int v59 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v54 + 48))(v55, 1, v58);
  uint64_t v57 = v77;
  if (v59 == 1) {
    goto LABEL_20;
  }
  sub_251E51E88((uint64_t)v55, (uint64_t)v72, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
  LOBYTE(v86[0]) = v49;
  if (CharacteristicKind.rawValue.getter() == 0xD000000000000024 && v60 == 0x8000000251F63C30)
  {

    swift_bridgeObjectRelease();
LABEL_26:
    uint64_t v62 = (uint64_t)v75;
    sub_251E51EF0((uint64_t)v72, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
    sub_251E51EF0(v62, (uint64_t (*)(void))type metadata accessor for StaticService);
    (*(void (**)(unsigned char *, uint64_t))(v36 + 8))(v77, v37);
    *uint64_t v85 = v71;
    return;
  }
  char v61 = sub_251F36B10();
  swift_bridgeObjectRelease();
  if (v61)
  {

    goto LABEL_26;
  }
  uint64_t v63 = (uint64_t)v72;
  char v64 = &v72[*(int *)(v73 + 24)];
  unint64_t v66 = *((void *)v64 + 1);
  char v67 = v64[16];
  v86[0] = *(void *)v64;
  uint64_t v65 = v86[0];
  v86[1] = v66;
  char v87 = v67;
  sub_251B2ED7C(v86[0], v66, v67);
  id v68 = objc_msgSend(v74, sel_targetValue);
  char IsRoughlyEqualToG0ySbAA0E4KindO0G0O_So8NSObjectCtFZ_0 = _s13HomeDataModel20StaticCharacteristicV026typedValueIsRoughlyEqualToG0ySbAA0E4KindO0G0O_So8NSObjectCtFZ_0((uint64_t)v86);

  sub_251A580B4(v65, v66, v67);
  sub_251E51EF0(v63, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
  sub_251E51EF0((uint64_t)v75, (uint64_t (*)(void))type metadata accessor for StaticService);
  (*(void (**)(unsigned char *, uint64_t))(v36 + 8))(v77, v37);
  *uint64_t v85 = v71 & IsRoughlyEqualToG0ySbAA0E4KindO0G0O_So8NSObjectCtFZ_0;
}

void sub_251E4EA24(unsigned char *a1@<X8>)
{
  ServiceKind.umbrellaCategory.getter(&v2);
  *a1 = v2;
}

BOOL _s13HomeDataModel15StaticActionSetV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((sub_251F34D70() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = (int *)type metadata accessor for StaticActionSet();
  uint64_t v5 = v4[5];
  uint64_t v6 = *(void *)(a1 + v5);
  uint64_t v7 = *(void *)(a1 + v5 + 8);
  uint64_t v8 = (void *)(a2 + v5);
  BOOL v9 = v6 == *v8 && v7 == v8[1];
  if (v9 || (v10 = sub_251F36B10(), BOOL result = 0, (v10 & 1) != 0))
  {
    uint64_t v12 = v4[6];
    int v13 = *(unsigned __int8 *)(a1 + v12);
    int v14 = *(unsigned __int8 *)(a2 + v12);
    if (v13 == 7)
    {
      if (v14 != 7) {
        return 0;
      }
    }
    else if (v14 == 7 || (sub_251DB3434(v13, v14) & 1) == 0)
    {
      return 0;
    }
    if (sub_251F34D70())
    {
      uint64_t v15 = (uint64_t *)(a1 + v4[8]);
      uint64_t v16 = *v15;
      uint64_t v17 = v15[1];
      char v18 = *((unsigned char *)v15 + 16);
      uint64_t v19 = v15[3];
      uint64_t v20 = v15[4];
      char v21 = *((unsigned char *)v15 + 40);
      uint64_t v22 = v15[6];
      uint64_t v23 = v15[7];
      char v24 = *((unsigned char *)v15 + 64);
      uint64_t v25 = v15[9];
      uint64_t v26 = v15[10];
      LOBYTE(v15) = *((unsigned char *)v15 + 88);
      v50[0] = v16;
      v50[1] = v17;
      char v51 = v18;
      uint64_t v52 = v19;
      uint64_t v53 = v20;
      char v54 = v21;
      uint64_t v55 = v22;
      uint64_t v56 = v23;
      char v57 = v24;
      uint64_t v58 = v25;
      uint64_t v59 = v26;
      char v60 = (char)v15;
      unint64_t v27 = (uint64_t *)(a2 + v4[8]);
      uint64_t v28 = *v27;
      uint64_t v29 = v27[1];
      char v30 = *((unsigned char *)v27 + 16);
      uint64_t v31 = v27[3];
      uint64_t v32 = v27[4];
      char v33 = *((unsigned char *)v27 + 40);
      uint64_t v34 = v27[6];
      uint64_t v35 = v27[7];
      char v36 = *((unsigned char *)v27 + 64);
      uint64_t v37 = v27[9];
      uint64_t v38 = v27[10];
      LOBYTE(v27) = *((unsigned char *)v27 + 88);
      v39[0] = v28;
      v39[1] = v29;
      char v40 = v30;
      uint64_t v41 = v31;
      uint64_t v42 = v32;
      char v43 = v33;
      uint64_t v44 = v34;
      uint64_t v45 = v35;
      char v46 = v36;
      uint64_t v47 = v37;
      uint64_t v48 = v38;
      char v49 = (char)v27;
      if (_s13HomeDataModel4IconV2eeoiySbAC_ACtFZ_0((uint64_t)v50, (uint64_t)v39)
        && (sub_251F352E0() & 1) != 0
        && (sub_251B04848(*(void *)(a1 + v4[10]), *(void *)(a2 + v4[10])) & 1) != 0
        && *(unsigned __int8 *)(a1 + v4[11]) == *(unsigned __int8 *)(a2 + v4[11])
        && (sub_251B0657C(*(void *)(a1 + v4[12]), *(void *)(a2 + v4[12])) & 1) != 0
        && *(unsigned __int8 *)(a1 + v4[13]) == *(unsigned __int8 *)(a2 + v4[13]))
      {
        return *(unsigned __int8 *)(a1 + v4[14]) == *(unsigned __int8 *)(a2 + v4[14]);
      }
    }
    return 0;
  }
  return result;
}

uint64_t _s13HomeDataModel15StaticActionSetV1loiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticActionSet();
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  char v10 = (char *)&v31 - v9;
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  int v13 = (char *)&v31 - v12;
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)&v31 - v15;
  uint64_t v17 = *(int *)(v14 + 20);
  uint64_t v18 = *(void *)(a1 + v17);
  uint64_t v19 = *(void *)(a1 + v17 + 8);
  uint64_t v20 = (void *)(a2 + v17);
  if (v18 == *v20 && v19 == v20[1])
  {
    sub_251E51F50(a1, (uint64_t)&v31 - v15, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
    sub_251E51F50(a2, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
  }
  else
  {
    char v22 = 1;
    char v23 = sub_251F36B10();
    sub_251E51F50(a1, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
    sub_251E51F50(a2, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
    if (v23) {
      goto LABEL_17;
    }
  }
  uint64_t v24 = *(int *)(v4 + 20);
  uint64_t v25 = *(void *)&v16[v24];
  uint64_t v26 = *(void *)&v16[v24 + 8];
  unint64_t v27 = &v13[v24];
  if (v25 == *(void *)v27 && v26 == *((void *)v27 + 1))
  {
    sub_251E51F50((uint64_t)v16, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
    sub_251E51F50((uint64_t)v13, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
  }
  else
  {
    char v29 = sub_251F36B10();
    sub_251E51F50((uint64_t)v16, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
    sub_251E51F50((uint64_t)v13, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
    char v22 = 0;
    if ((v29 & 1) == 0) {
      goto LABEL_16;
    }
  }
  char v22 = MEMORY[0x2533A9CA0](v10, v7);
LABEL_16:
  sub_251E51EF0((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
  sub_251E51EF0((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
LABEL_17:
  sub_251E51EF0((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
  sub_251E51EF0((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
  return v22 & 1;
}

uint64_t sub_251E4EEF0(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v48 = a3;
  uint64_t v7 = type metadata accessor for StaticActionSet();
  uint64_t v44 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v39 = (uint64_t)v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v38 - v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FFC8);
  uint64_t result = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)(a1 + 16);
  if (!v17) {
    return result;
  }
  v38[1] = a1;
  void v38[2] = v4;
  char v43 = &v16[*(int *)(result + 48)];
  uint64_t v18 = a1 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  uint64_t v40 = *(void *)(v14 + 72);
  swift_bridgeObjectRetain();
  uint64_t v41 = v16;
  uint64_t v42 = v11;
  while (1)
  {
    uint64_t v46 = v18;
    uint64_t v47 = v17;
    sub_251A1B128(v18, (uint64_t)v16, &qword_26B21FFC8);
    uint64_t v20 = sub_251F34DA0();
    uint64_t v45 = v38;
    uint64_t v21 = *(void *)(v20 - 8);
    MEMORY[0x270FA5388](v20);
    char v23 = (char *)v38 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
    v24(v23, v16, v20);
    sub_251E51E88((uint64_t)v43, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
    uint64_t v25 = *v48;
    unint64_t v27 = sub_2519FE584((uint64_t)v23);
    uint64_t v28 = *(void *)(v25 + 16);
    BOOL v29 = (v26 & 1) == 0;
    uint64_t v30 = v28 + v29;
    if (__OFADD__(v28, v29)) {
      break;
    }
    char v31 = v26;
    if (*(void *)(v25 + 24) >= v30)
    {
      if (a2)
      {
        if (v26) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_251A11E84();
        if (v31) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_251A017F8(v30, a2 & 1);
      unint64_t v32 = sub_2519FE584((uint64_t)v23);
      if ((v31 & 1) != (v33 & 1)) {
        goto LABEL_20;
      }
      unint64_t v27 = v32;
      if (v31)
      {
LABEL_3:
        uint64_t v11 = v42;
        uint64_t v19 = v39;
        sub_251E51E88((uint64_t)v42, v39, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
        (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
        sub_251E52060(v19, *(void *)(*v48 + 56) + *(void *)(v44 + 72) * v27);
        goto LABEL_4;
      }
    }
    uint64_t v34 = (void *)*v48;
    *(void *)(*v48 + 8 * (v27 >> 6) + 64) |= 1 << v27;
    v24((char *)(v34[6] + *(void *)(v21 + 72) * v27), v23, v20);
    uint64_t v11 = v42;
    sub_251E51E88((uint64_t)v42, v34[7] + *(void *)(v44 + 72) * v27, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
    uint64_t v35 = v34[2];
    BOOL v36 = __OFADD__(v35, 1);
    uint64_t v37 = v35 + 1;
    if (v36) {
      goto LABEL_19;
    }
    void v34[2] = v37;
LABEL_4:
    uint64_t v16 = v41;
    uint64_t v18 = v46 + v40;
    a2 = 1;
    uint64_t v17 = v47 - 1;
    if (v47 == 1) {
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  uint64_t result = sub_251F36BA0();
  __break(1u);
  return result;
}

unint64_t sub_251E4F318(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  if (sub_251BFE828(a4))
  {
    id v8 = objc_msgSend(a2, sel_actionSets);
    sub_251A1A568(0, &qword_26B21EB00);
    unint64_t v9 = sub_251F35AC0();

    MEMORY[0x270FA5388](v10);
    v30[2] = a4;
    v30[3] = a1;
    v30[4] = a3;
    v30[5] = a2;
    uint64_t v11 = 0;
    uint64_t v12 = sub_251A51A78((void (*)(id *))sub_251E51FD8, (uint64_t)v30, v9);
    swift_bridgeObjectRelease();
    int64_t v13 = *(void *)(v12 + 16);
    if (v13)
    {
      uint64_t v32 = 0;
      uint64_t v34 = MEMORY[0x263F8EE78];
      sub_251A3DF1C(0, v13, 0);
      uint64_t v14 = v34;
      uint64_t v15 = 0;
      uint64_t v33 = *(void *)(type metadata accessor for StaticActionSet() - 8);
      uint64_t v16 = *(unsigned __int8 *)(v33 + 80);
      v31[1] = v12;
      uint64_t v17 = v12 + ((v16 + 32) & ~v16);
      do
      {
        uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FFC8);
        uint64_t v19 = *(void *)(v18 - 8);
        uint64_t v20 = MEMORY[0x270FA5388](v18 - 8);
        uint64_t v22 = (char *)v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
        uint64_t v23 = (uint64_t)&v22[*(int *)(v20 + 56)];
        sub_251E51F50(v17 + *(void *)(v33 + 72) * v15, v23, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
        uint64_t v24 = sub_251F34DA0();
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
        uint64_t v34 = v14;
        unint64_t v26 = *(void *)(v14 + 16);
        unint64_t v25 = *(void *)(v14 + 24);
        if (v26 >= v25 >> 1)
        {
          sub_251A3DF1C(v25 > 1, v26 + 1, 1);
          uint64_t v14 = v34;
        }
        ++v15;
        *(void *)(v14 + 16) = v26 + 1;
        sub_251E51FF8((uint64_t)v22, v14+ ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80))+ *(void *)(v19 + 72) * v26);
      }
      while (v13 != v15);
      swift_bridgeObjectRelease();
      uint64_t v11 = v32;
      if (*(void *)(v14 + 16)) {
        goto LABEL_12;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v14 = MEMORY[0x263F8EE78];
      if (*(void *)(MEMORY[0x263F8EE78] + 16))
      {
LABEL_12:
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E5C8);
        uint64_t v29 = sub_251F36700();
        goto LABEL_15;
      }
    }
    uint64_t v29 = MEMORY[0x263F8EE80];
LABEL_15:
    uint64_t v34 = v29;
    sub_251E4EEF0(v14, 1, &v34);
    swift_bridgeObjectRelease();
    if (!v11) {
      return v34;
    }
    unint64_t result = swift_release();
    __break(1u);
    return result;
  }
  uint64_t v27 = MEMORY[0x263F8EE78];
  return sub_2519F9800(v27);
}

void sub_251E4F6A4(unsigned __int8 a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  unint64_t v6 = a2;
  unsigned __int8 v26 = a1;
  if ((a2 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_251F362B0();
    sub_251A1A568(0, (unint64_t *)&qword_26B21EB40);
    sub_251E51E44((unint64_t *)&qword_26B21EB48, (unint64_t *)&qword_26B21EB40);
    sub_251F35E90();
    unint64_t v6 = (unint64_t)v25[1];
    uint64_t v23 = v25[2];
    uint64_t v7 = v25[3];
    id v8 = (char *)v25[4];
    unint64_t v9 = (unint64_t)v25[5];
  }
  else
  {
    uint64_t v10 = -1 << *(unsigned char *)(a2 + 32);
    uint64_t v23 = (void *)(a2 + 56);
    uint64_t v11 = ~v10;
    uint64_t v12 = -v10;
    if (v12 < 64) {
      uint64_t v13 = ~(-1 << v12);
    }
    else {
      uint64_t v13 = -1;
    }
    unint64_t v9 = v13 & *(void *)(a2 + 56);
    swift_bridgeObjectRetain();
    uint64_t v7 = (void *)v11;
    id v8 = 0;
  }
  int64_t v22 = ((unint64_t)v7 + 64) >> 6;
  if ((v6 & 0x8000000000000000) == 0) {
    goto LABEL_11;
  }
LABEL_8:
  uint64_t v14 = sub_251F36340();
  if (v14)
  {
    uint64_t v24 = v14;
    sub_251A1A568(0, (unint64_t *)&qword_26B21EB40);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v15 = v25[0];
    swift_unknownObjectRelease();
    int64_t v16 = (int64_t)v8;
    uint64_t v17 = v9;
    while (v15)
    {
      v25[0] = v15;
      sub_251E4E16C(&v26, v25, a3, &v24);

      if (v4) {
        break;
      }
      unsigned __int8 v26 = v24;
      id v8 = (char *)v16;
      unint64_t v9 = v17;
      if ((v6 & 0x8000000000000000) != 0) {
        goto LABEL_8;
      }
LABEL_11:
      if (v9)
      {
        uint64_t v17 = (v9 - 1) & v9;
        unint64_t v18 = __clz(__rbit64(v9)) | ((void)v8 << 6);
        int64_t v16 = (int64_t)v8;
      }
      else
      {
        int64_t v16 = (int64_t)(v8 + 1);
        if (__OFADD__(v8, 1))
        {
          __break(1u);
          return;
        }
        if (v16 >= v22) {
          break;
        }
        unint64_t v19 = v23[v16];
        if (!v19)
        {
          int64_t v20 = (int64_t)(v8 + 2);
          if ((uint64_t)(v8 + 2) >= v22) {
            break;
          }
          unint64_t v19 = v23[v20];
          if (v19) {
            goto LABEL_22;
          }
          int64_t v20 = (int64_t)(v8 + 3);
          if ((uint64_t)(v8 + 3) >= v22) {
            break;
          }
          unint64_t v19 = v23[v20];
          if (v19) {
            goto LABEL_22;
          }
          int64_t v20 = (int64_t)(v8 + 4);
          if ((uint64_t)(v8 + 4) >= v22) {
            break;
          }
          unint64_t v19 = v23[v20];
          if (v19)
          {
LABEL_22:
            int64_t v16 = v20;
          }
          else
          {
            int64_t v16 = (int64_t)(v8 + 5);
            if ((uint64_t)(v8 + 5) >= v22) {
              break;
            }
            unint64_t v19 = v23[v16];
            if (!v19)
            {
              uint64_t v21 = v8 + 6;
              while ((char *)v22 != v21)
              {
                unint64_t v19 = v23[(void)v21++];
                if (v19)
                {
                  int64_t v16 = (int64_t)(v21 - 1);
                  goto LABEL_23;
                }
              }
              break;
            }
          }
        }
LABEL_23:
        uint64_t v17 = (v19 - 1) & v19;
        unint64_t v18 = __clz(__rbit64(v19)) + (v16 << 6);
      }
      id v15 = *(id *)(*(void *)(v6 + 48) + 8 * v18);
    }
  }
  sub_251A1E630();
}

unint64_t sub_251E4F9DC()
{
  unint64_t result = qword_269BA4808;
  if (!qword_269BA4808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4808);
  }
  return result;
}

unint64_t sub_251E4FA30()
{
  unint64_t result = qword_269BA4810;
  if (!qword_269BA4810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4810);
  }
  return result;
}

unint64_t sub_251E4FA84()
{
  unint64_t result = qword_269BA4818;
  if (!qword_269BA4818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4818);
  }
  return result;
}

unint64_t sub_251E4FAD8()
{
  unint64_t result = qword_269BA4820;
  if (!qword_269BA4820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4820);
  }
  return result;
}

uint64_t sub_251E4FB2C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701736302 && a2 == 0xE400000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E69747563657865 && a2 == 0xE900000000000067 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x64656C696166 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

void *sub_251E4FC78(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4920);
  uint64_t v25 = *(void *)(v2 - 8);
  uint64_t v26 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v29 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4928);
  uint64_t v24 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4930);
  uint64_t v23 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  id v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4938);
  uint64_t v28 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (uint64_t *)((char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251E4F9DC();
  uint64_t v12 = (uint64_t)v30;
  sub_251F36D90();
  if (v12) {
    goto LABEL_7;
  }
  uint64_t v22 = v6;
  uint64_t v13 = v29;
  uint64_t v30 = a1;
  uint64_t v14 = v11;
  uint64_t v15 = sub_251F368E0();
  if (*(void *)(v15 + 16) != 1)
  {
    uint64_t v17 = sub_251F36490();
    swift_allocError();
    uint64_t v11 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D440);
    void *v11 = &type metadata for StaticActionSet.ExecutionStatus;
    sub_251F36780();
    sub_251F36480();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v17 - 8) + 104))(v11, *MEMORY[0x263F8DCB0], v17);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(void *, uint64_t))(v28 + 8))(v14, v9);
    a1 = v30;
LABEL_7:
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
    return v11;
  }
  uint64_t v11 = (void *)*(unsigned __int8 *)(v15 + 32);
  if (*(unsigned char *)(v15 + 32))
  {
    if (v11 == 1)
    {
      char v32 = 1;
      sub_251E4FA84();
      sub_251F36770();
      uint64_t v16 = v28;
      (*(void (**)(char *, uint64_t))(v24 + 8))(v5, v27);
      swift_bridgeObjectRelease();
      (*(void (**)(void *, uint64_t))(v16 + 8))(v14, v9);
    }
    else
    {
      char v33 = 2;
      sub_251E4FA30();
      sub_251F36770();
      uint64_t v20 = v28;
      (*(void (**)(char *, uint64_t))(v25 + 8))(v13, v26);
      swift_bridgeObjectRelease();
      (*(void (**)(void *, uint64_t))(v20 + 8))(v14, v9);
    }
  }
  else
  {
    char v31 = 0;
    sub_251E4FAD8();
    sub_251F36770();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v22);
    swift_bridgeObjectRelease();
    (*(void (**)(void *, uint64_t))(v28 + 8))(v14, v9);
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v30);
  return v11;
}

unint64_t sub_251E501E8()
{
  unint64_t result = qword_269BA4830;
  if (!qword_269BA4830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4830);
  }
  return result;
}

unint64_t sub_251E5023C()
{
  unint64_t result = qword_269BA4838;
  if (!qword_269BA4838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4838);
  }
  return result;
}

unint64_t sub_251E50290()
{
  unint64_t result = qword_269BA4840;
  if (!qword_269BA4840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4840);
  }
  return result;
}

unint64_t sub_251E502E4()
{
  unint64_t result = qword_269BA4858;
  if (!qword_269BA4858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4858);
  }
  return result;
}

unint64_t sub_251E50338()
{
  unint64_t result = qword_269BA4868;
  if (!qword_269BA4868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4868);
  }
  return result;
}

unint64_t sub_251E5038C()
{
  unint64_t result = qword_269BA4870;
  if (!qword_269BA4870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4870);
  }
  return result;
}

uint64_t sub_251E503E0(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269BA4848);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_251E50450()
{
  unint64_t result = qword_269BA4880;
  if (!qword_269BA4880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4880);
  }
  return result;
}

unint64_t sub_251E504A8()
{
  unint64_t result = qword_269BA4888;
  if (!qword_269BA4888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4888);
  }
  return result;
}

unint64_t sub_251E50500()
{
  unint64_t result = qword_269BA4890;
  if (!qword_269BA4890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4890);
  }
  return result;
}

uint64_t sub_251E50554()
{
  return sub_251E506A8(&qword_269BA4898);
}

uint64_t sub_251E50588()
{
  return sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
}

uint64_t sub_251E505B0(void *a1)
{
  a1[1] = sub_251E506A8(&qword_269BA48A0);
  a1[2] = sub_251E506A8(&qword_269BA48A8);
  a1[3] = sub_251E506A8(&qword_269B9E180);
  a1[4] = sub_251E506A8(&qword_269B9E040);
  a1[5] = sub_251E506A8(&qword_269BA48B0);
  uint64_t result = sub_251E506A8(&qword_269BA48B8);
  a1[6] = result;
  return result;
}

uint64_t sub_251E506A8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for StaticActionSet();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for StaticActionSet(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v28 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_251F34DA0();
    id v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = a3[5];
    uint64_t v10 = a3[6];
    uint64_t v11 = &a1[v9];
    uint64_t v12 = (uint64_t *)&a2[v9];
    uint64_t v14 = *v12;
    uint64_t v13 = v12[1];
    LOBYTE(v12) = a2[v10];
    *(void *)uint64_t v11 = v14;
    *((void *)v11 + 1) = v13;
    a1[v10] = (char)v12;
    uint64_t v15 = a3[7];
    uint64_t v16 = &a1[v15];
    uint64_t v17 = &a2[v15];
    swift_bridgeObjectRetain();
    v8(v16, v17, v7);
    uint64_t v18 = a3[8];
    uint64_t v19 = a3[9];
    uint64_t v20 = &a1[v18];
    uint64_t v21 = &a2[v18];
    uint64_t v22 = *((void *)v21 + 1);
    *(void *)uint64_t v20 = *(void *)v21;
    *((void *)v20 + 1) = v22;
    unsigned char v20[16] = v21[16];
    uint64_t v23 = *((void *)v21 + 4);
    *((void *)v20 + 3) = *((void *)v21 + 3);
    *((void *)v20 + 4) = v23;
    v20[40] = v21[40];
    uint64_t v24 = *((void *)v21 + 7);
    *((void *)v20 + 6) = *((void *)v21 + 6);
    *((void *)v20 + 7) = v24;
    v20[64] = v21[64];
    uint64_t v25 = *((void *)v21 + 10);
    *((void *)v20 + 9) = *((void *)v21 + 9);
    *((void *)v20 + 10) = v25;
    v20[88] = v21[88];
    *(void *)&a1[v19] = *(void *)&a2[v19];
    uint64_t v26 = a3[11];
    *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
    a1[v26] = a2[v26];
    uint64_t v27 = a3[13];
    *(void *)&a1[a3[12]] = *(void *)&a2[a3[12]];
    a1[v27] = a2[v27];
    a1[a3[14]] = a2[a3[14]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for StaticActionSet(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_251F34DA0();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  swift_bridgeObjectRelease();
  v5(a1 + *(int *)(a2 + 28), v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StaticActionSet(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  uint64_t v10 = (void *)(a1 + v8);
  uint64_t v11 = (uint64_t *)(a2 + v8);
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  LOBYTE(v11) = *(unsigned char *)(a2 + v9);
  *uint64_t v10 = v13;
  v10[1] = v12;
  *(unsigned char *)(a1 + v9) = (_BYTE)v11;
  uint64_t v14 = a3[7];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  swift_bridgeObjectRetain();
  v7(v15, v16, v6);
  uint64_t v17 = a3[8];
  uint64_t v18 = a3[9];
  uint64_t v19 = a1 + v17;
  uint64_t v20 = a2 + v17;
  uint64_t v21 = *(void *)(v20 + 8);
  *(void *)uint64_t v19 = *(void *)v20;
  *(void *)(v19 + 8) = v21;
  *(unsigned char *)(v19 + 16) = *(unsigned char *)(v20 + 16);
  uint64_t v22 = *(void *)(v20 + 32);
  *(void *)(v19 + 24) = *(void *)(v20 + 24);
  *(void *)(v19 + 32) = v22;
  *(unsigned char *)(v19 + 40) = *(unsigned char *)(v20 + 40);
  uint64_t v23 = *(void *)(v20 + 56);
  *(void *)(v19 + 48) = *(void *)(v20 + 48);
  *(void *)(v19 + 56) = v23;
  *(unsigned char *)(v19 + 64) = *(unsigned char *)(v20 + 64);
  uint64_t v24 = *(void *)(v20 + 80);
  *(void *)(v19 + 72) = *(void *)(v20 + 72);
  *(void *)(v19 + 80) = v24;
  *(unsigned char *)(v19 + 88) = *(unsigned char *)(v20 + 88);
  *(void *)(a1 + v18) = *(void *)(a2 + v18);
  uint64_t v25 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  *(unsigned char *)(a1 + v25) = *(unsigned char *)(a2 + v25);
  uint64_t v26 = a3[13];
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  *(unsigned char *)(a1 + v26) = *(unsigned char *)(a2 + v26);
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for StaticActionSet(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  v7(a1 + a3[7], a2 + a3[7], v6);
  uint64_t v11 = a3[8];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(void *)uint64_t v12 = *(void *)(a2 + v11);
  *(void *)(v12 + 8) = *(void *)(a2 + v11 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v12 + 16) = *(unsigned char *)(v13 + 16);
  *(void *)(v12 + 24) = *(void *)(v13 + 24);
  *(void *)(v12 + 32) = *(void *)(v13 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v12 + 40) = *(unsigned char *)(v13 + 40);
  *(void *)(v12 + 48) = *(void *)(v13 + 48);
  *(void *)(v12 + 56) = *(void *)(v13 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v12 + 64) = *(unsigned char *)(v13 + 64);
  *(void *)(v12 + 72) = *(void *)(v13 + 72);
  *(void *)(v12 + 80) = *(void *)(v13 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v12 + 88) = *(unsigned char *)(v13 + 88);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  return a1;
}

uint64_t initializeWithTake for StaticActionSet(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  v7(a1 + a3[7], a2 + a3[7], v6);
  uint64_t v9 = a3[8];
  uint64_t v10 = a3[9];
  uint64_t v11 = (_OWORD *)(a1 + v9);
  uint64_t v12 = (_OWORD *)(a2 + v9);
  long long v13 = v12[3];
  v11[2] = v12[2];
  v11[3] = v13;
  v11[4] = v12[4];
  *(_OWORD *)((char *)v11 + 73) = *(_OWORD *)((char *)v12 + 73);
  long long v14 = v12[1];
  _OWORD *v11 = *v12;
  v11[1] = v14;
  *(void *)(a1 + v10) = *(void *)(a2 + v10);
  uint64_t v15 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  *(unsigned char *)(a1 + v15) = *(unsigned char *)(a2 + v15);
  uint64_t v16 = a3[13];
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  *(unsigned char *)(a1 + v16) = *(unsigned char *)(a2 + v16);
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  return a1;
}

uint64_t assignWithTake for StaticActionSet(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  v7(a1 + v13, a2 + v13, v6);
  uint64_t v14 = a3[8];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = *(void *)(a2 + v14 + 8);
  *(void *)uint64_t v15 = *(void *)(a2 + v14);
  *(void *)(v15 + 8) = v17;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v15 + 16) = *(unsigned char *)(v16 + 16);
  uint64_t v18 = *(void *)(v16 + 32);
  *(void *)(v15 + 24) = *(void *)(v16 + 24);
  *(void *)(v15 + 32) = v18;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v15 + 40) = *(unsigned char *)(v16 + 40);
  uint64_t v19 = *(void *)(v16 + 56);
  *(void *)(v15 + 48) = *(void *)(v16 + 48);
  *(void *)(v15 + 56) = v19;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v15 + 64) = *(unsigned char *)(v16 + 64);
  uint64_t v20 = *(void *)(v16 + 80);
  *(void *)(v15 + 72) = *(void *)(v16 + 72);
  *(void *)(v15 + 80) = v20;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v15 + 88) = *(unsigned char *)(v16 + 88);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_release();
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(void *)(a1 + v21) = *(void *)(a2 + v21);
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[14];
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  *(unsigned char *)(a1 + v22) = *(unsigned char *)(a2 + v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for StaticActionSet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251E50FE8);
}

uint64_t sub_251E50FE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for StaticActionSet(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251E510C0);
}

uint64_t sub_251E510C0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_251F34DA0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_251E51180()
{
  uint64_t result = sub_251F34DA0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticActionSet.ExecutionStatus()
{
  return &type metadata for StaticActionSet.ExecutionStatus;
}

unsigned char *storeEnumTagSinglePayload for StaticActionSet.Error(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x251E51310);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticActionSet.Error()
{
  return &type metadata for StaticActionSet.Error;
}

unsigned char *storeEnumTagSinglePayload for StaticActionSet.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *uint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251E51414);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticActionSet.CodingKeys()
{
  return &type metadata for StaticActionSet.CodingKeys;
}

unsigned char *_s13HomeDataModel15StaticActionSetV15ExecutionStatusOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251E51518);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticActionSet.ExecutionStatus.CodingKeys()
{
  return &type metadata for StaticActionSet.ExecutionStatus.CodingKeys;
}

ValueMetadata *type metadata accessor for StaticActionSet.ExecutionStatus.NoneCodingKeys()
{
  return &type metadata for StaticActionSet.ExecutionStatus.NoneCodingKeys;
}

ValueMetadata *type metadata accessor for StaticActionSet.ExecutionStatus.ExecutingCodingKeys()
{
  return &type metadata for StaticActionSet.ExecutionStatus.ExecutingCodingKeys;
}

ValueMetadata *type metadata accessor for StaticActionSet.ExecutionStatus.FailedCodingKeys()
{
  return &type metadata for StaticActionSet.ExecutionStatus.FailedCodingKeys;
}

unint64_t sub_251E51584()
{
  unint64_t result = qword_269BA48C0;
  if (!qword_269BA48C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA48C0);
  }
  return result;
}

unint64_t sub_251E515DC()
{
  unint64_t result = qword_269BA48C8;
  if (!qword_269BA48C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA48C8);
  }
  return result;
}

unint64_t sub_251E51634()
{
  unint64_t result = qword_269BA48D0;
  if (!qword_269BA48D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA48D0);
  }
  return result;
}

unint64_t sub_251E5168C()
{
  unint64_t result = qword_269BA48D8;
  if (!qword_269BA48D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA48D8);
  }
  return result;
}

unint64_t sub_251E516E4()
{
  unint64_t result = qword_269BA48E0;
  if (!qword_269BA48E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA48E0);
  }
  return result;
}

unint64_t sub_251E5173C()
{
  unint64_t result = qword_269BA48E8;
  if (!qword_269BA48E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA48E8);
  }
  return result;
}

unint64_t sub_251E51794()
{
  unint64_t result = qword_269BA48F0;
  if (!qword_269BA48F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA48F0);
  }
  return result;
}

unint64_t sub_251E517EC()
{
  unint64_t result = qword_269BA48F8;
  if (!qword_269BA48F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA48F8);
  }
  return result;
}

unint64_t sub_251E51844()
{
  unint64_t result = qword_269BA4900;
  if (!qword_269BA4900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4900);
  }
  return result;
}

unint64_t sub_251E5189C()
{
  unint64_t result = qword_269BA4908;
  if (!qword_269BA4908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4908);
  }
  return result;
}

unint64_t sub_251E518F4()
{
  unint64_t result = qword_269BA4910;
  if (!qword_269BA4910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4910);
  }
  return result;
}

unint64_t sub_251E5194C()
{
  unint64_t result = qword_269BA4918;
  if (!qword_269BA4918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4918);
  }
  return result;
}

uint64_t sub_251E519A0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65536E6F69746361 && a2 == 0xED0000646E694B74 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6449656D6F68 && a2 == 0xE600000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E6F6349656C6974 && a2 == 0xE800000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6E6F6349656C6974 && a2 == 0xEC000000746E6954 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7364496D6F6F72 && a2 == 0xE700000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000251F70F70 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000251F72410 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6176697463417369 && a2 == 0xEB00000000646574 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6F69747563657865 && a2 == 0xEF7375746174536ELL)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 10;
    }
    else {
      return 11;
    }
  }
}

uint64_t sub_251E51E44(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_251A1A568(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_251E51E88(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_251E51EF0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_251E51F50(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_251E51FB8()
{
  return sub_251C63A64() & 1;
}

uint64_t sub_251E51FD8@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_251E4D2C8(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void **)(v2 + 40), a2);
}

uint64_t sub_251E51FF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FFC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_251E52060(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticActionSet();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_251E520C4()
{
  return sub_251E51FB8() & 1;
}

unsigned __int8 *static MatterCommandFactory.matterCommand(clusterKind:commandID:expectedValues:commandFields:)@<X0>(unsigned __int8 *result@<X0>, int a2@<W1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  int v5 = *result;
  if ((v5 - 23) > 3) {
    goto LABEL_4;
  }
  uint64_t v8 = *(void *)a3;
  uint64_t v7 = *(void *)(a3 + 8);
  char v9 = *(unsigned char *)(a3 + 16);
  unint64_t v17 = sub_251C33658();
  v19[0] = v8;
  v19[1] = v7;
  char v20 = v9;
  uint64_t v16 = sub_251F36190();
  uint64_t v10 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v12 = (char *)&v16 - v11;
  char v18 = v5;
  swift_bridgeObjectRetain();
  sub_251C6D698(v8, v7, v9);
  StaticRVCClusterGroup.Command.init(clusterKind:commandID:expectedValues:commandFields:)(&v18, a2, (uint64_t)v19, (uint64_t)v12);
  uint64_t v13 = off_270277040;
  if (((unsigned int (*)(char *, uint64_t, ValueMetadata *))off_270277040->getEnumTagSinglePayload)(v12, 1, &type metadata for StaticRVCClusterGroup.Command) == 1)
  {
    uint64_t result = (unsigned __int8 *)(*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v16);
LABEL_4:
    *(void *)(a4 + 32) = 0;
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
    return result;
  }
  unint64_t v14 = v17;
  *(void *)(a4 + 24) = &type metadata for StaticRVCClusterGroup.Command;
  *(void *)(a4 + 32) = v14;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a4);
  return (unsigned __int8 *)((uint64_t (*)(uint64_t *, char *, ValueMetadata *))v13->initializeWithTake)(boxed_opaque_existential_1, v12, &type metadata for StaticRVCClusterGroup.Command);
}

ValueMetadata *static MatterCommandFactory.template(for:device:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for StaticMatterDevice();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_251E52588();
  if (!result) {
    goto LABEL_4;
  }
  uint64_t v11 = result;
  uint64_t v12 = v10;
  sub_251C6D9A8(a2, (uint64_t)v8);
  uint64_t v13 = *(void (**)(void *, char *, ValueMetadata *, uint64_t))(v12 + 16);
  uint64_t v14 = sub_251F36190();
  v20[1] = v20;
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  unint64_t v17 = (char *)v20 - v16;
  v13(a1, v8, v11, v12);
  Description = (unsigned int (**)(char *, uint64_t, ValueMetadata *))v11[-1].Description;
  if (Description[6](v17, 1, v11) == 1)
  {
    uint64_t result = (ValueMetadata *)(*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
LABEL_4:
    *(void *)(a3 + 32) = 0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    return result;
  }
  *(void *)(a3 + 24) = v11;
  *(void *)(a3 + 32) = v12;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)a3);
  return (ValueMetadata *)((uint64_t (*)(uint64_t *, char *, ValueMetadata *))Description[4])(boxed_opaque_existential_1, v17, v11);
}

uint64_t static MatterCommandFactory.== infix(_:_:)()
{
  return 1;
}

uint64_t MatterCommandFactory.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t sub_251E5251C()
{
  return sub_251F36D00();
}

uint64_t sub_251E52554()
{
  return sub_251F36D00();
}

ValueMetadata *sub_251E52588()
{
  type metadata accessor for StaticMatterDevice();
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_251AC549C(v0);
  uint64_t result = (ValueMetadata *)sub_251A53EB8(v1);
  if (v4) {
    goto LABEL_10;
  }
  if (*(_DWORD *)(v1 + 36) != v3)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    return result;
  }
  if (result == (ValueMetadata *)(1 << *(unsigned char *)(v1 + 32)))
  {
    swift_release();
  }
  else
  {
    sub_251A54058((uint64_t)result, v3, 0, v1, v5);
    swift_release();
    if (v5[0] == 23)
    {
      sub_251E526BC();
      return &type metadata for StaticRVCClusterGroup.Command.Template;
    }
  }
  return 0;
}

unint64_t sub_251E52658()
{
  unint64_t result = qword_269BA4948;
  if (!qword_269BA4948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4948);
  }
  return result;
}

ValueMetadata *type metadata accessor for MatterCommandFactory()
{
  return &type metadata for MatterCommandFactory;
}

unint64_t sub_251E526BC()
{
  unint64_t result = qword_269BA4950;
  if (!qword_269BA4950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4950);
  }
  return result;
}

uint64_t StaticClusterPowerSource.init(path:device:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  void (*v9)(uint64_t *__return_ptr, uint64_t *, uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  const char *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t result;
  unint64_t v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t *__return_ptr, uint64_t *, uint64_t, uint64_t, uint64_t);
  int v44;
  unsigned __int8 v45;
  uint64_t v46;
  int v47;
  unsigned int v48;
  uint64_t v49;
  __int16 v50;
  uint64_t v51;
  unsigned int v52;
  uint64_t v53;
  unsigned __int8 v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int16 v61;
  char v62;
  uint64_t v63;
  __int16 v64;
  char v65;
  uint64_t v66;

  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *(unsigned __int16 *)(a1 + 8);
  uint64_t v7 = *(unsigned __int8 *)(a1 + 10);
  uint64_t ObjectType = swift_getObjectType();
  char v60 = v5;
  char v61 = v6;
  uint64_t v62 = v7;
  char v9 = *(void (**)(uint64_t *__return_ptr, uint64_t *, uint64_t, uint64_t, uint64_t))(a2 + 48);
  v9(&v63, &v60, 0, ObjectType, a2);
  if (!v66)
  {
    sub_251A9090C((uint64_t)&v63);
    goto LABEL_12;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_12:
    if (qword_26B21ECD0 != -1) {
      swift_once();
    }
    unint64_t v17 = sub_251F350A0();
    __swift_project_value_buffer(v17, (uint64_t)qword_26B21ECB8);
    char v18 = sub_251F35080();
    uint64_t v19 = sub_251F35FB0();
    if (!os_log_type_enabled(v18, v19)) {
      goto LABEL_22;
    }
    char v20 = (uint8_t *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    uint64_t v22 = v7;
    uint64_t v23 = v21;
    *(_DWORD *)char v20 = 136315138;
    char v60 = v21;
    uint64_t v63 = v5;
    char v64 = v6;
    uint64_t v65 = v22;
    uint64_t v24 = ClusterPath.description.getter();
    uint64_t v63 = sub_251A00E84(v24, v25, &v60);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    uint64_t v26 = "Couldn't get value for status attribute '%s'";
    goto LABEL_21;
  }
  uint64_t v10 = v7;
  uint64_t v11 = v60;
  uint64_t v59 = v10;
  char v60 = v5;
  char v61 = v6;
  uint64_t v62 = v10;
  v9(&v63, &v60, 1, ObjectType, a2);
  if (!v66)
  {
    sub_251A9090C((uint64_t)&v63);
    goto LABEL_17;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_17:
    if (qword_26B21ECD0 != -1) {
      swift_once();
    }
    uint64_t v27 = sub_251F350A0();
    __swift_project_value_buffer(v27, (uint64_t)qword_26B21ECB8);
    char v18 = sub_251F35080();
    uint64_t v19 = sub_251F35FB0();
    if (!os_log_type_enabled(v18, v19)) {
      goto LABEL_22;
    }
    char v20 = (uint8_t *)swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    *(_DWORD *)char v20 = 136315138;
    char v60 = v23;
    uint64_t v63 = v5;
    char v64 = v6;
    uint64_t v65 = v59;
    uint64_t v28 = ClusterPath.description.getter();
    uint64_t v63 = sub_251A00E84(v28, v29, &v60);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    uint64_t v26 = "Couldn't get value for order attribute '%s'";
    goto LABEL_21;
  }
  uint64_t v12 = v60;
  uint64_t v63 = v5;
  char v64 = v6;
  uint64_t v65 = v59;
  uint64_t v13 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(a2 + 80))(&v63, ObjectType, a2);
  if ((v13 & 0x100000000) == 0)
  {
    uint64_t v14 = v13;
    if (v13)
    {
      char v60 = v5;
      char v61 = v6;
      uint64_t v62 = v59;
      (*(void (**)(uint64_t *__return_ptr, uint64_t *, uint64_t, uint64_t, uint64_t))(a2 + 72))(&v63, &v60, 9, ObjectType, a2);
      if (v66)
      {
        uint64_t v15 = swift_dynamicCast();
        uint64_t v16 = v60;
        if (!v15) {
          uint64_t v16 = 2;
        }
LABEL_30:
        uint64_t v55 = v16;
        char v57 = v12;
        uint64_t v58 = v5;
        if ((v14 & 2) != 0)
        {
          char v60 = v5;
          char v61 = v6;
          uint64_t v62 = v59;
          char v43 = *(void (**)(uint64_t *__return_ptr, uint64_t *, uint64_t, uint64_t, uint64_t))(a2 + 72);
          v43(&v63, &v60, 12, ObjectType, a2);
          if (v66)
          {
            uint64_t v44 = swift_dynamicCast();
            uint64_t v45 = v60;
            if (!v44) {
              uint64_t v45 = 0;
            }
            char v54 = v45;
            uint64_t v46 = v44 ^ 1u;
          }
          else
          {
            sub_251A9090C((uint64_t)&v63);
            char v54 = 0;
            uint64_t v46 = 1;
          }
          uint64_t v53 = v46;
          char v60 = v58;
          char v61 = v6;
          uint64_t v62 = v59;
          v43(&v63, &v60, 13, ObjectType, a2);
          if (v66)
          {
            uint64_t v47 = swift_dynamicCast();
            uint64_t v48 = v60;
            if (!v47) {
              uint64_t v48 = 0;
            }
            uint64_t v52 = v48;
            char v49 = v47 ^ 1u;
          }
          else
          {
            sub_251A9090C((uint64_t)&v63);
            uint64_t v52 = 0;
            char v49 = 1;
          }
          char v51 = v49;
          uint64_t v63 = v58;
          char v64 = v6;
          uint64_t v65 = v59;
          uint64_t v50 = sub_251E53E6C((uint64_t)&v63, ObjectType, a2, 14, "Failed to fetch batteryChargeLevel: %s");
          BOOL v36 = (unint64_t)v50 << 40;
          uint64_t v56 = (unint64_t)(v50 & 0x100) << 40;
          if ((v14 & 4) != 0) {
            goto LABEL_32;
          }
        }
        else
        {
          BOOL v36 = 0;
          uint64_t v52 = 0;
          char v54 = 0;
          uint64_t v56 = 0x1000000000000;
          char v51 = 1;
          uint64_t v53 = 1;
          if ((v14 & 4) != 0)
          {
LABEL_32:
            uint64_t v38 = v58;
            uint64_t v37 = v59;
            uint64_t v63 = v58;
            char v64 = v6;
            uint64_t v65 = v59;
            uint64_t v39 = a2;
            uint64_t v40 = v36;
            uint64_t v41 = sub_251E53E6C((uint64_t)&v63, ObjectType, v39, 26, "Failed to fetch batteryChargeState: %s");
            unint64_t result = swift_unknownObjectRelease();
            char v32 = (v41 >> 8) & 1;
            uint64_t v42 = v41 << 56;
            BOOL v36 = v40;
LABEL_45:
            char v31 = v56 | v36 | v52 | (v51 << 32) | v42;
            *(void *)a3 = v38;
            *(void *)(a3 + 8) = v6 | (v37 << 16) | (v11 << 24) | (v57 << 32);
            *(void *)(a3 + 16) = v14 | (unint64_t)(v55 << 32) | ((unint64_t)v54 << 40) | (v53 << 48);
            goto LABEL_23;
          }
        }
        unint64_t result = swift_unknownObjectRelease();
        uint64_t v42 = 0;
        LOBYTE(v32) = 1;
        uint64_t v38 = v58;
        uint64_t v37 = v59;
        goto LABEL_45;
      }
      sub_251A9090C((uint64_t)&v63);
    }
    uint64_t v16 = 2;
    goto LABEL_30;
  }
  if (qword_26B21ECD0 != -1) {
    swift_once();
  }
  char v33 = sub_251F350A0();
  __swift_project_value_buffer(v33, (uint64_t)qword_26B21ECB8);
  char v18 = sub_251F35080();
  uint64_t v19 = sub_251F35FB0();
  if (os_log_type_enabled(v18, v19))
  {
    char v20 = (uint8_t *)swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    *(_DWORD *)char v20 = 136315138;
    char v60 = v23;
    uint64_t v63 = v5;
    char v64 = v6;
    uint64_t v65 = v59;
    uint64_t v34 = ClusterPath.description.getter();
    uint64_t v63 = sub_251A00E84(v34, v35, &v60);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    uint64_t v26 = "Couldn't get value for feature map attribute '%s'";
LABEL_21:
    _os_log_impl(&dword_2519F3000, v18, v19, v26, v20, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v23, -1, -1);
    MEMORY[0x2533AC760](v20, -1, -1);
  }
LABEL_22:

  unint64_t result = swift_unknownObjectRelease();
  char v31 = 0;
  LOBYTE(v32) = 0;
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0x300000000;
LABEL_23:
  *(void *)(a3 + 24) = v31;
  *(unsigned char *)(a3 + 32) = v32;
  return result;
}

void StaticClusterPowerSource.id.getter(uint64_t a1@<X8>)
{
  __int16 v2 = *(_WORD *)(v1 + 8);
  char v3 = *(unsigned char *)(v1 + 10);
  *(void *)a1 = *(void *)v1;
  *(_WORD *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 10) = v3;
}

uint64_t StaticClusterPowerSource.status.getter()
{
  return *(unsigned __int8 *)(v0 + 11);
}

uint64_t StaticClusterPowerSource.order.getter()
{
  return *(unsigned __int8 *)(v0 + 12);
}

uint64_t StaticClusterPowerSource.supportedFeatures.getter()
{
  return *(unsigned int *)(v0 + 16);
}

uint64_t StaticClusterPowerSource.wiredConnected.getter()
{
  return *(unsigned __int8 *)(v0 + 20);
}

uint64_t StaticClusterPowerSource.batteryRemaining.getter()
{
  return *(unsigned __int8 *)(v0 + 21) | (*(unsigned __int8 *)(v0 + 22) << 8);
}

unint64_t StaticClusterPowerSource.batteryTimeRemaining.getter()
{
  return *(unsigned int *)(v0 + 24) | ((unint64_t)*(unsigned __int8 *)(v0 + 28) << 32);
}

uint64_t StaticClusterPowerSource.batteryChargeLevel.getter()
{
  return *(unsigned __int8 *)(v0 + 29) | (*(unsigned __int8 *)(v0 + 30) << 8);
}

uint64_t StaticClusterPowerSource.batteryChargeState.getter()
{
  return *(unsigned __int8 *)(v0 + 31) | (*(unsigned __int8 *)(v0 + 32) << 8);
}

uint64_t StaticClusterPowerSource.init(id:status:order:supportedFeatures:wiredConnected:batteryRemaining:batteryTimeRemaining:batteryChargeLevel:batteryChargeState:)@<X0>(uint64_t result@<X0>, char a2@<W1>, char a3@<W2>, int a4@<W3>, char a5@<W4>, __int16 a6@<W5>, uint64_t a7@<X6>, __int16 a8@<W7>, uint64_t a9@<X8>, char a10, char a11)
{
  __int16 v11 = *(_WORD *)(result + 8);
  char v12 = *(unsigned char *)(result + 10);
  *(void *)a9 = *(void *)result;
  *(_WORD *)(a9 + 8) = v11;
  *(unsigned char *)(a9 + 10) = v12;
  *(unsigned char *)(a9 + 11) = a2;
  *(unsigned char *)(a9 + 12) = a3;
  *(_DWORD *)(a9 + 16) = a4;
  *(unsigned char *)(a9 + 20) = a5;
  *(unsigned char *)(a9 + 21) = a6;
  *(unsigned char *)(a9 + 22) = HIBYTE(a6) & 1;
  *(_DWORD *)(a9 + 24) = a7;
  *(unsigned char *)(a9 + 28) = BYTE4(a7) & 1;
  *(unsigned char *)(a9 + 29) = a8;
  *(unsigned char *)(a9 + 30) = HIBYTE(a8) & 1;
  *(unsigned char *)(a9 + 31) = a10;
  *(unsigned char *)(a9 + 32) = a11 & 1;
  return result;
}

uint64_t StaticClusterPowerSource.hash(into:)()
{
  int v1 = v0[20];
  unsigned __int8 v2 = v0[22];
  int v3 = v0[28];
  unsigned __int8 v5 = v0[30];
  unsigned __int8 v6 = v0[32];
  sub_251F36CF0();
  sub_251F36CD0();
  sub_251F36CE0();
  sub_251F36CC0();
  sub_251F36CC0();
  sub_251F36CE0();
  if (v1 != 2) {
    sub_251F36CC0();
  }
  sub_251F36CC0();
  if ((v2 & 1) == 0) {
    sub_251F36CC0();
  }
  sub_251F36CC0();
  if (v3)
  {
    sub_251F36CC0();
    if (v5) {
      goto LABEL_9;
    }
    goto LABEL_7;
  }
  sub_251F36CC0();
  sub_251F36CE0();
  if ((v5 & 1) == 0) {
LABEL_7:
  }
    sub_251F36CC0();
LABEL_9:
  sub_251F36CC0();
  if ((v6 & 1) == 0) {
    sub_251F36CC0();
  }
  return sub_251F36CC0();
}

unint64_t sub_251E53174(char a1)
{
  unint64_t result = 25705;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x737574617473;
      break;
    case 2:
      unint64_t result = 0x726564726FLL;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
      unint64_t result = 0x6E6F436465726977;
      break;
    case 5:
      unint64_t result = 0xD000000000000010;
      break;
    case 6:
      unint64_t result = 0xD000000000000014;
      break;
    case 7:
    case 8:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_251E5328C()
{
  return sub_251E53174(*v0);
}

uint64_t sub_251E53294@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251E545C4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251E532BC(uint64_t a1)
{
  unint64_t v2 = sub_251E5420C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E532F8(uint64_t a1)
{
  unint64_t v2 = sub_251E5420C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticClusterPowerSource.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4958);
  uint64_t v30 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unsigned __int8 v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v1;
  __int16 v7 = *((_WORD *)v1 + 4);
  char v8 = *((unsigned char *)v1 + 10);
  int v34 = *((unsigned __int8 *)v1 + 11);
  int v9 = *((unsigned __int8 *)v1 + 12);
  int v27 = *((_DWORD *)v1 + 4);
  int v28 = v9;
  int v10 = *((unsigned __int8 *)v1 + 20);
  int v24 = *((unsigned __int8 *)v1 + 21);
  int v25 = *((unsigned __int8 *)v1 + 22);
  int v26 = v10;
  uint64_t v23 = *((unsigned int *)v1 + 6);
  int v11 = *((unsigned __int8 *)v1 + 28);
  int v12 = *((unsigned __int8 *)v1 + 29);
  int v21 = *((unsigned __int8 *)v1 + 30);
  int v22 = v11;
  int v18 = *((unsigned __int8 *)v1 + 31);
  int v19 = *((unsigned __int8 *)v1 + 32);
  int v20 = v12;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251E5420C();
  sub_251F36DA0();
  uint64_t v31 = v6;
  __int16 v32 = v7;
  char v33 = v8;
  char v35 = 0;
  sub_251A900F8();
  uint64_t v13 = v29;
  sub_251F36A20();
  if (v13) {
    return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v5, v3);
  }
  int v15 = v27;
  uint64_t v16 = v30;
  LOBYTE(v31) = v34;
  char v35 = 1;
  type metadata accessor for MTRPowerSourceStatus(0);
  sub_251E54260(&qword_269BA4968, type metadata accessor for MTRPowerSourceStatus);
  sub_251F36A20();
  LOBYTE(v31) = 2;
  sub_251F36A40();
  LODWORD(v31) = v15;
  char v35 = 3;
  type metadata accessor for MTRPowerSourceFeature(0);
  sub_251E54260(&qword_269BA4970, type metadata accessor for MTRPowerSourceFeature);
  sub_251F36A20();
  LOBYTE(v31) = 4;
  sub_251F36920();
  LOBYTE(v31) = 5;
  sub_251F36990();
  LOBYTE(v31) = 6;
  char v35 = v22;
  sub_251F369B0();
  LOBYTE(v31) = v20;
  BYTE1(v31) = v21;
  char v35 = 7;
  type metadata accessor for MTRPowerSourceBatChargeLevel(0);
  sub_251E54260(&qword_269BA4978, type metadata accessor for MTRPowerSourceBatChargeLevel);
  sub_251F36970();
  LOBYTE(v31) = v18;
  BYTE1(v31) = v19;
  char v35 = 8;
  type metadata accessor for MTRPowerSourceBatChargeState(0);
  sub_251E54260(&qword_269BA4980, type metadata accessor for MTRPowerSourceBatChargeState);
  sub_251F36970();
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v5, v3);
}

uint64_t StaticClusterPowerSource.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t StaticClusterPowerSource.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4988);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251E5420C();
  sub_251F36D90();
  if (!v2)
  {
    char v31 = 0;
    sub_251A9014C();
    sub_251F36880();
    int v26 = a2;
    uint64_t v9 = v27;
    int v10 = v28;
    int v11 = v29;
    type metadata accessor for MTRPowerSourceStatus(0);
    char v31 = 1;
    sub_251E54260(&qword_269BA4990, type metadata accessor for MTRPowerSourceStatus);
    sub_251F36880();
    uint64_t v24 = v9;
    int v25 = v10;
    int v30 = v11;
    LOBYTE(v9) = v27;
    LOBYTE(v27) = 2;
    LOBYTE(v11) = sub_251F368A0();
    type metadata accessor for MTRPowerSourceFeature(0);
    char v31 = 3;
    sub_251E54260(&qword_269BA4998, type metadata accessor for MTRPowerSourceFeature);
    sub_251F36880();
    int v12 = v27;
    LOBYTE(v27) = 4;
    int v23 = sub_251F367A0();
    LOBYTE(v27) = 5;
    int v22 = sub_251F367F0();
    LOBYTE(v27) = 6;
    uint64_t v21 = sub_251F36810();
    type metadata accessor for MTRPowerSourceBatChargeLevel(0);
    char v31 = 7;
    sub_251E54260(&qword_269BA49A0, type metadata accessor for MTRPowerSourceBatChargeLevel);
    sub_251F367D0();
    int v19 = BYTE1(v27);
    int v20 = v27;
    type metadata accessor for MTRPowerSourceBatChargeState(0);
    char v31 = 8;
    sub_251E54260(&qword_269BA49A8, type metadata accessor for MTRPowerSourceBatChargeState);
    sub_251F367D0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    char v14 = v27;
    char v15 = BYTE1(v27);
    uint64_t v16 = v26;
    *int v26 = v24;
    *((_WORD *)v16 + 4) = v25;
    *((unsigned char *)v16 + 10) = v30;
    *((unsigned char *)v16 + 11) = v9;
    *((unsigned char *)v16 + 12) = v11;
    *((_DWORD *)v16 + 4) = v12;
    *((unsigned char *)v16 + 20) = v23;
    char v17 = BYTE1(v22);
    *((unsigned char *)v16 + 21) = v22;
    *((unsigned char *)v16 + 22) = v17 & 1;
    char v18 = BYTE4(v21);
    *((_DWORD *)v16 + 6) = v21;
    *((unsigned char *)v16 + 28) = v18 & 1;
    *((unsigned char *)v16 + 29) = v20;
    *((unsigned char *)v16 + 30) = v19;
    *((unsigned char *)v16 + 31) = v14;
    *((unsigned char *)v16 + 32) = v15;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_251E53CF4()
{
  return sub_251F36D00();
}

uint64_t sub_251E53D9C()
{
  return sub_251F36D00();
}

uint64_t sub_251E53E3C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return StaticClusterPowerSource.init(from:)(a1, a2);
}

uint64_t sub_251E53E54(void *a1)
{
  return StaticClusterPowerSource.encode(to:)(a1);
}

uint64_t sub_251E53E6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5)
{
  uint64_t v6 = *(void *)a1;
  __int16 v7 = *(_WORD *)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 10);
  uint64_t v20 = *(void *)a1;
  __int16 v21 = v7;
  char v22 = v8;
  (*(void (**)(uint64_t *__return_ptr, uint64_t *, uint64_t, uint64_t, uint64_t))(a3 + 48))(&v23, &v20, a4, a2, a3);
  if (v26)
  {
    if (swift_dynamicCast())
    {
      int v9 = 0;
      int v10 = v20;
      return v10 | (v9 << 8);
    }
  }
  else
  {
    sub_251A9090C((uint64_t)&v23);
  }
  if (qword_26B21ECD0 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_251F350A0();
  __swift_project_value_buffer(v11, (uint64_t)qword_26B21ECB8);
  int v12 = sub_251F35080();
  os_log_type_t v13 = sub_251F35FB0();
  if (os_log_type_enabled(v12, v13))
  {
    format = a5;
    char v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)char v14 = 136315138;
    uint64_t v20 = v15;
    uint64_t v23 = v6;
    __int16 v24 = v7;
    char v25 = v8;
    uint64_t v16 = ClusterPath.description.getter();
    uint64_t v23 = sub_251A00E84(v16, v17, &v20);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2519F3000, v12, v13, format, v14, 0xCu);
    int v9 = 1;
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v15, -1, -1);
    MEMORY[0x2533AC760](v14, -1, -1);

    int v10 = 0;
  }
  else
  {

    int v10 = 0;
    int v9 = 1;
  }
  return v10 | (v9 << 8);
}

BOOL _s13HomeDataModel24StaticClusterPowerSourceV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  BOOL result = 0;
  if (*(void *)a1 == *(void *)a2 && *(unsigned __int16 *)(a1 + 8) == *(unsigned __int16 *)(a2 + 8))
  {
    if (dword_251F5A820[*(char *)(a1 + 10)] != dword_251F5A820[*(char *)(a2 + 10)]) {
      return 0;
    }
    BOOL result = 0;
    if (*(unsigned __int8 *)(a1 + 11) == *(unsigned __int8 *)(a2 + 11)
      && *(unsigned __int8 *)(a1 + 12) == *(unsigned __int8 *)(a2 + 12)
      && *(_DWORD *)(a1 + 16) == *(_DWORD *)(a2 + 16))
    {
      int v4 = *(unsigned __int8 *)(a1 + 20);
      int v5 = *(unsigned __int8 *)(a1 + 21);
      char v6 = *(unsigned char *)(a1 + 22);
      int v7 = *(_DWORD *)(a1 + 24);
      char v8 = *(unsigned char *)(a1 + 28);
      int v9 = *(unsigned __int8 *)(a1 + 29);
      char v10 = *(unsigned char *)(a1 + 30);
      int v11 = *(unsigned __int8 *)(a1 + 31);
      char v12 = *(unsigned char *)(a1 + 32);
      int v13 = *(unsigned __int8 *)(a2 + 20);
      if (v4 == 2)
      {
        if (v13 != 2) {
          return 0;
        }
        goto LABEL_12;
      }
      BOOL result = 0;
      if (v13 != 2 && ((((v4 & 1) == 0) ^ v13) & 1) != 0)
      {
LABEL_12:
        if (v6)
        {
          if (!*(unsigned char *)(a2 + 22)) {
            return 0;
          }
        }
        else
        {
          if (v5 == *(unsigned __int8 *)(a2 + 21)) {
            char v14 = *(unsigned char *)(a2 + 22);
          }
          else {
            char v14 = 1;
          }
          if (v14) {
            return 0;
          }
        }
        if (v8)
        {
          if (!*(unsigned char *)(a2 + 28)) {
            return 0;
          }
        }
        else
        {
          if (v7 == *(_DWORD *)(a2 + 24)) {
            char v15 = *(unsigned char *)(a2 + 28);
          }
          else {
            char v15 = 1;
          }
          if (v15) {
            return 0;
          }
        }
        if (v10)
        {
          if (!*(unsigned char *)(a2 + 30)) {
            return 0;
          }
        }
        else
        {
          if (v9 == *(unsigned __int8 *)(a2 + 29)) {
            char v16 = *(unsigned char *)(a2 + 30);
          }
          else {
            char v16 = 1;
          }
          if (v16) {
            return 0;
          }
        }
        if ((v12 & 1) == 0)
        {
          if (v11 == *(unsigned __int8 *)(a2 + 31)) {
            char v17 = *(unsigned char *)(a2 + 32);
          }
          else {
            char v17 = 1;
          }
          return (v17 & 1) == 0;
        }
        return (*(unsigned char *)(a2 + 32) & 1) != 0;
      }
    }
  }
  return result;
}

unint64_t sub_251E5420C()
{
  unint64_t result = qword_269BA4960;
  if (!qword_269BA4960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4960);
  }
  return result;
}

uint64_t sub_251E54260(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_251E542AC()
{
  unint64_t result = qword_269BA49B0;
  if (!qword_269BA49B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA49B0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for StaticClusterPowerSource(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 20);
  if (v3 >= 2) {
    int v4 = ((v3 + 2147483646) & 0x7FFFFFFF) - 1;
  }
  else {
    int v4 = -2;
  }
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for StaticClusterPowerSource(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)unint64_t result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 20) = a2 + 2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticClusterPowerSource()
{
  return &type metadata for StaticClusterPowerSource;
}

unsigned char *storeEnumTagSinglePayload for StaticClusterPowerSource.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251E54484);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticClusterPowerSource.CodingKeys()
{
  return &type metadata for StaticClusterPowerSource.CodingKeys;
}

unint64_t sub_251E544C0()
{
  unint64_t result = qword_269BA49B8;
  if (!qword_269BA49B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA49B8);
  }
  return result;
}

unint64_t sub_251E54518()
{
  unint64_t result = qword_269BA49C0;
  if (!qword_269BA49C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA49C0);
  }
  return result;
}

unint64_t sub_251E54570()
{
  unint64_t result = qword_269BA49C8;
  if (!qword_269BA49C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA49C8);
  }
  return result;
}

uint64_t sub_251E545C4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x737574617473 && a2 == 0xE600000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726564726FLL && a2 == 0xE500000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000251F72450 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E6F436465726977 && a2 == 0xEE0064657463656ELL || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000251F72470 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000251F72490 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000251F724B0 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000251F724D0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

BOOL static Action.MatterCommandAction.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2 && sub_251AB54C8(*((void *)a1 + 1), *((void *)a2 + 1));
}

void Action.MatterCommandAction.init(action:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  unsigned __int8 v5 = objc_msgSend(a1, sel_enforceExecutionOrder);
  id v6 = objc_msgSend(a1, sel_commands);
  sub_251A1A568(0, (unint64_t *)&qword_269B9D608);
  unint64_t v7 = sub_251F35AC0();

  sub_251ED42B8(v7);
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();

  if (!v2)
  {
    *(unsigned char *)a2 = v5;
    *(void *)(a2 + 8) = v9;
  }
}

uint64_t sub_251E54A24(void *a1)
{
  uint64_t v2 = *v1;
  uint64_t isUniquelyReferenced_nonNull_native = *((void *)v1 + 1);
  unint64_t v4 = (unint64_t)objc_msgSend(a1, sel_accessories);
  sub_251A1A568(0, (unint64_t *)&qword_26B21EAF8);
  uint64_t v5 = sub_251F35AC0();

  id v6 = (void *)sub_2519FA7F0(MEMORY[0x263F8EE78]);
  if ((unint64_t)v5 >> 62)
  {
LABEL_26:
    if (v5 < 0) {
      unint64_t v4 = v5;
    }
    else {
      unint64_t v4 = v5 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain_n();
    uint64_t v7 = sub_251F366C0();
    swift_bridgeObjectRelease();
    if (v7) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v7)
    {
LABEL_3:
      unsigned int v33 = v2;
      uint64_t v37 = isUniquelyReferenced_nonNull_native;
      unint64_t v38 = v5 & 0xC000000000000001;
      uint64_t v2 = 4;
      uint64_t v35 = v7;
      uint64_t v36 = v5;
      while (1)
      {
        uint64_t v9 = v2 - 4;
        if (v38)
        {
          id v10 = (id)MEMORY[0x2533AB3A0](v2 - 4, v5);
          uint64_t v11 = v2 - 3;
          if (__OFADD__(v9, 1)) {
            goto LABEL_23;
          }
        }
        else
        {
          id v10 = *(id *)(v5 + 8 * v2);
          uint64_t v11 = v2 - 3;
          if (__OFADD__(v9, 1))
          {
LABEL_23:
            __break(1u);
LABEL_24:
            __break(1u);
LABEL_25:
            __break(1u);
            goto LABEL_26;
          }
        }
        uint64_t v40 = v11;
        id v12 = v10;
        id v13 = objc_msgSend(v10, sel_uniqueIdentifier);
        uint64_t v14 = sub_251F34DA0();
        uint64_t v39 = v32;
        uint64_t v15 = *(void *)(v14 - 8);
        MEMORY[0x270FA5388](v14);
        char v17 = &v32[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
        sub_251F34D80();

        uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v41 = v6;
        unint64_t v4 = sub_2519FE584((uint64_t)v17);
        uint64_t v19 = v6[2];
        BOOL v20 = (v18 & 1) == 0;
        uint64_t v21 = v19 + v20;
        if (__OFADD__(v19, v20)) {
          goto LABEL_24;
        }
        uint64_t v5 = v18;
        if (v6[3] >= v21)
        {
          if (isUniquelyReferenced_nonNull_native)
          {
            id v6 = v41;
            if (v18) {
              goto LABEL_4;
            }
          }
          else
          {
            sub_251A139FC();
            id v6 = v41;
            if (v5) {
              goto LABEL_4;
            }
          }
        }
        else
        {
          sub_251A04650(v21, isUniquelyReferenced_nonNull_native);
          unint64_t v22 = sub_2519FE584((uint64_t)v17);
          if ((v5 & 1) != (v23 & 1))
          {
            uint64_t result = sub_251F36BA0();
            __break(1u);
            return result;
          }
          unint64_t v4 = v22;
          id v6 = v41;
          if (v5)
          {
LABEL_4:
            uint64_t v8 = v6[7];
            v4 *= 8;

            *(void *)(v8 + v4) = v12;
            goto LABEL_5;
          }
        }
        v6[(v4 >> 6) + 8] |= 1 << v4;
        (*(void (**)(unint64_t, unsigned char *, uint64_t))(v15 + 16))(v6[6] + *(void *)(v15 + 72) * v4, v17, v14);
        *(void *)(v6[7] + 8 * v4) = v12;
        uint64_t v24 = v6[2];
        BOOL v25 = __OFADD__(v24, 1);
        uint64_t v26 = v24 + 1;
        if (v25) {
          goto LABEL_25;
        }
        v6[2] = v26;
LABEL_5:
        swift_bridgeObjectRelease();
        (*(void (**)(unsigned char *, uint64_t))(v15 + 8))(v17, v14);
        ++v2;
        uint64_t v5 = v36;
        uint64_t isUniquelyReferenced_nonNull_native = v37;
        if (v40 == v35)
        {
          swift_bridgeObjectRelease();
          uint64_t v2 = v33;
          goto LABEL_31;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_31:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v27 = swift_bridgeObjectRetain();
  uint64_t v28 = v34;
  sub_251E55750(v27, (uint64_t)v6);
  if (v28)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v29 = objc_allocWithZone(MEMORY[0x263F0E4B0]);
    sub_251A1A568(0, (unint64_t *)&qword_269B9D608);
    int v30 = (void *)sub_251F35AA0();
    swift_bridgeObjectRelease();
    unint64_t v4 = (unint64_t)objc_msgSend(v29, sel_initWithMatterCommands_enforceExecutionOrder_, v30, v2);

    if (!v4)
    {
      unint64_t v4 = type metadata accessor for ActionCommand.Error(0);
      sub_251E558AC();
      swift_allocError();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
    }
  }
  swift_bridgeObjectRelease();
  return v4;
}

unint64_t Action.MatterCommandAction.debugDescription.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_251F36400();
  swift_bridgeObjectRelease();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  uint64_t v2 = type metadata accessor for ActionCommand(0);
  MEMORY[0x2533AAA60](v1, v2);
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  return 0xD00000000000001ELL;
}

uint64_t Action.MatterCommandAction.enforceExecutionOrder.getter()
{
  return *v0;
}

uint64_t Action.MatterCommandAction.commands.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Action.MatterCommandAction.init(enforceExecutionOrder:commands:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(unsigned char *)a3 = result;
  *(void *)(a3 + 8) = a2;
  return result;
}

uint64_t Action.MatterCommandAction.hash(into:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 8);
  sub_251F36CC0();
  swift_bridgeObjectRetain();
  sub_251A411C8(a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t Action.MatterCommandAction.hashValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_251F36CA0();
  sub_251F36CC0();
  sub_251A411C8((uint64_t)v3, v1);
  return sub_251F36D00();
}

uint64_t sub_251E55070()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_251F36CA0();
  sub_251F36CC0();
  sub_251A411C8((uint64_t)v3, v1);
  return sub_251F36D00();
}

uint64_t sub_251E550D0()
{
  uint64_t v1 = type metadata accessor for ActionCommand(0);
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  unint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(v0 + 8);
  sub_251F36CC0();
  uint64_t v6 = *(void *)(v5 + 16);
  uint64_t result = sub_251F36CB0();
  if (v6)
  {
    uint64_t v8 = v5 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    uint64_t v9 = *(void *)(v2 + 72);
    do
    {
      sub_251E55690(v8, (uint64_t)v4);
      sub_251F34DA0();
      sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
      sub_251F35610();
      sub_251F36CF0();
      sub_251F36CD0();
      __swift_project_boxed_opaque_existential_1(&v4[*(int *)(v1 + 28)], *(void *)&v4[*(int *)(v1 + 28) + 24]);
      sub_251F35610();
      uint64_t result = sub_251E556F4((uint64_t)v4);
      v8 += v9;
      --v6;
    }
    while (v6);
  }
  return result;
}

uint64_t sub_251E5525C()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_251F36CA0();
  sub_251F36CC0();
  sub_251A411C8((uint64_t)v3, v1);
  return sub_251F36D00();
}

BOOL sub_251E552B8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2 && sub_251AB54C8(*((void *)a1 + 1), *((void *)a2 + 1));
}

uint64_t ActionCommand.debugDescription.getter()
{
  uint64_t v9 = 0;
  unint64_t v10 = 0xE000000000000000;
  sub_251F36400();
  sub_251F35800();
  uint64_t v1 = type metadata accessor for ActionCommand(0);
  uint64_t v2 = (void *)(v0 + *(int *)(v1 + 28));
  uint64_t v3 = v2[3];
  uint64_t v4 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v3);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v4 + 32))(v8, v3, v4);
  sub_251F36640();
  sub_251F35800();
  uint64_t v5 = v2[3];
  uint64_t v6 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v5);
  LODWORD(v8[0]) = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 24))(v5, v6);
  type metadata accessor for MTRCommandIDType(0);
  sub_251F36640();
  sub_251F35800();
  LOWORD(v8[0]) = *(_WORD *)(v0 + *(int *)(v1 + 24));
  sub_251F36AB0();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  v8[0] = 3828584;
  v8[1] = 0xE300000000000000;
  sub_251F34DA0();
  sub_251A1A8EC((unint64_t *)&qword_26B21E6B0);
  sub_251F36AB0();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  sub_251F36AB0();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  swift_bridgeObjectRelease();
  return v9;
}

unint64_t sub_251E55574()
{
  unint64_t result = qword_269BA49D0;
  if (!qword_269BA49D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA49D0);
  }
  return result;
}

uint64_t _s19MatterCommandActionVwCP(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s19MatterCommandActionVwca(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s19MatterCommandActionVwta(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for Action.MatterCommandAction()
{
  return &type metadata for Action.MatterCommandAction;
}

uint64_t sub_251E55690(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ActionCommand(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_251E556F4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ActionCommand(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_251E55750(uint64_t a1, uint64_t a2)
{
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v10 = MEMORY[0x263F8EE78];
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    uint64_t v7 = *(void *)(type metadata accessor for ActionCommand(0) - 8);
    uint64_t v8 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    uint64_t v9 = *(void *)(v7 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_251C32484(a2);
      if (v2) {
        break;
      }
      MEMORY[0x2533AA9D0]();
      if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_251F35B10();
      }
      sub_251F35B70();
      sub_251F35AE0();
      v8 += v9;
      if (!--v5)
      {
        swift_bridgeObjectRelease();
        return v10;
      }
    }
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_251E558AC()
{
  unint64_t result = qword_269BA08B8;
  if (!qword_269BA08B8)
  {
    type metadata accessor for ActionCommand.Error(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA08B8);
  }
  return result;
}

uint64_t sub_251E55908@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  uint64_t v5 = a1 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a1 + 56);
  int64_t v22 = (unint64_t)(v6 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  if (!v8) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v11 | (v10 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v10 << 6))
  {
    uint64_t v16 = (uint64_t *)(*(void *)(a1 + 48) + 32 * i);
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    uint64_t v19 = v16[2];
    uint64_t v20 = v16[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v18 == objc_msgSend(a2, sel_unsignedShortValue))
    {

      uint64_t result = swift_release();
      *a3 = v18;
      a3[1] = v17;
      a3[2] = v19;
      a3[3] = v20;
      return result;
    }
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v8) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v13 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v13 >= v22) {
      goto LABEL_25;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v13);
    ++v10;
    if (!v14)
    {
      int64_t v10 = v13 + 1;
      if (v13 + 1 >= v22) {
        goto LABEL_25;
      }
      unint64_t v14 = *(void *)(v5 + 8 * v10);
      if (!v14)
      {
        int64_t v10 = v13 + 2;
        if (v13 + 2 >= v22) {
          goto LABEL_25;
        }
        unint64_t v14 = *(void *)(v5 + 8 * v10);
        if (!v14)
        {
          int64_t v10 = v13 + 3;
          if (v13 + 3 >= v22) {
            goto LABEL_25;
          }
          unint64_t v14 = *(void *)(v5 + 8 * v10);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_20:
    unint64_t v8 = (v14 - 1) & v14;
  }
  int64_t v15 = v13 + 4;
  if (v15 >= v22)
  {
LABEL_25:

    uint64_t result = swift_release();
    *(_OWORD *)a3 = 0u;
    *((_OWORD *)a3 + 1) = 0u;
    return result;
  }
  unint64_t v14 = *(void *)(v5 + 8 * v15);
  if (v14)
  {
    int64_t v10 = v15;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v10 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v10 >= v22) {
      goto LABEL_25;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v10);
    ++v15;
    if (v14) {
      goto LABEL_20;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

BOOL static StaticRVCClusterGroup.State.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

BOOL StaticRVCClusterGroup.RunMode.isIdle.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  if (!*(void *)(v1 + 16)) {
    return 0;
  }
  sub_251F36CA0();
  sub_251F36CD0();
  sub_251F357B0();
  uint64_t v2 = sub_251F36D00();
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  unint64_t v4 = v2 & ~v3;
  if (((*(void *)(v1 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
    return 0;
  }
  uint64_t v5 = ~v3;
  do
  {
    int v6 = *(unsigned __int8 *)(*(void *)(v1 + 48) + v4);
    BOOL result = v6 == 64;
    if (v6 == 64) {
      break;
    }
    unint64_t v4 = (v4 + 1) & v5;
  }
  while (((*(void *)(v1 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  return result;
}

uint64_t StaticRVCClusterGroup.start()()
{
  long long v2 = v0[13];
  *(_OWORD *)(v1 + 208) = v0[12];
  *(_OWORD *)(v1 + 224) = v2;
  *(_OWORD *)(v1 + 236) = *(_OWORD *)((char *)v0 + 220);
  long long v3 = v0[9];
  *(_OWORD *)(v1 + 144) = v0[8];
  *(_OWORD *)(v1 + 160) = v3;
  long long v4 = v0[11];
  *(_OWORD *)(v1 + 176) = v0[10];
  *(_OWORD *)(v1 + 192) = v4;
  long long v5 = v0[5];
  *(_OWORD *)(v1 + 80) = v0[4];
  *(_OWORD *)(v1 + 96) = v5;
  long long v6 = v0[7];
  *(_OWORD *)(v1 + 112) = v0[6];
  *(_OWORD *)(v1 + 128) = v6;
  long long v7 = v0[1];
  *(_OWORD *)(v1 + 16) = *v0;
  *(_OWORD *)(v1 + 32) = v7;
  long long v8 = v0[3];
  *(_OWORD *)(v1 + 48) = v0[2];
  *(_OWORD *)(v1 + 64) = v8;
  *(unsigned char *)(v1 + 252) = 1;
  uint64_t v9 = swift_task_alloc();
  *(void *)(v1 + 256) = v9;
  *(void *)uint64_t v9 = v1;
  *(void *)(v9 + 8) = sub_251E55D14;
  *(unsigned char *)(v9 + 255) = *(unsigned char *)(v1 + 252);
  long long v11 = *(_OWORD *)(v1 + 32);
  long long v10 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(v9 + 16) = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v9 + 32) = v11;
  *(_OWORD *)(v9 + 48) = v10;
  long long v12 = *(_OWORD *)(v1 + 192);
  long long v13 = *(_OWORD *)(v1 + 208);
  long long v14 = *(_OWORD *)(v1 + 224);
  *(_OWORD *)(v9 + 236) = *(_OWORD *)(v1 + 236);
  *(_OWORD *)(v9 + 208) = v13;
  *(_OWORD *)(v9 + 224) = v14;
  *(_OWORD *)(v9 + 192) = v12;
  long long v15 = *(_OWORD *)(v1 + 128);
  long long v16 = *(_OWORD *)(v1 + 144);
  long long v17 = *(_OWORD *)(v1 + 176);
  *(_OWORD *)(v9 + 160) = *(_OWORD *)(v1 + 160);
  *(_OWORD *)(v9 + 176) = v17;
  *(_OWORD *)(v9 + 128) = v15;
  *(_OWORD *)(v9 + 144) = v16;
  long long v18 = *(_OWORD *)(v1 + 64);
  long long v19 = *(_OWORD *)(v1 + 80);
  long long v20 = *(_OWORD *)(v1 + 112);
  *(_OWORD *)(v9 + 96) = *(_OWORD *)(v1 + 96);
  *(_OWORD *)(v9 + 112) = v20;
  *(_OWORD *)(v9 + 64) = v18;
  *(_OWORD *)(v9 + 80) = v19;
  return MEMORY[0x270FA2498](sub_251E5FAEC, 0, 0);
}

uint64_t sub_251E55D14()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t StaticRVCClusterGroup.resume()()
{
  long long v2 = v0[13];
  v1[13] = v0[12];
  v1[14] = v2;
  *(_OWORD *)((char *)v1 + 236) = *(_OWORD *)((char *)v0 + 220);
  long long v3 = v0[9];
  v1[9] = v0[8];
  v1[10] = v3;
  long long v4 = v0[11];
  v1[11] = v0[10];
  v1[12] = v4;
  long long v5 = v0[5];
  v1[5] = v0[4];
  v1[6] = v5;
  long long v6 = v0[7];
  v1[7] = v0[6];
  v1[8] = v6;
  long long v7 = v0[1];
  v1[1] = *v0;
  v1[2] = v7;
  long long v8 = v0[3];
  v1[3] = v0[2];
  long long v1[4] = v8;
  return MEMORY[0x270FA2498](sub_251E55E64, 0, 0);
}

uint64_t sub_251E55E64()
{
  unint64_t v1 = sub_251A19C30((uint64_t)&unk_270261980);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CE50);
  swift_arrayDestroy();
  uint64_t v2 = *(void *)(v0 + 16);
  *(void *)(v0 + 272) = v2;
  __int16 v3 = *(_WORD *)(v0 + 24);
  *(_WORD *)(v0 + 252) = v3;
  *(unsigned char *)(v0 + 254) = *(unsigned char *)(v0 + 26);
  sub_251AA4920(v1);
  *(void *)(v0 + 280) = v4;
  swift_bridgeObjectRelease();
  sub_251A4DB38(v0 + 16);
  sub_251A1A568(0, &qword_269B9CE58);
  *(void *)(v0 + 256) = v2;
  *(_WORD *)(v0 + 264) = v3;
  *(unsigned char *)(v0 + 266) = 23;
  long long v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 288) = v5;
  *long long v5 = v0;
  v5[1] = sub_251E55FB4;
  return sub_251C4E0D4((uint64_t *)(v0 + 256));
}

uint64_t sub_251E55FB4(uint64_t a1)
{
  uint64_t v2 = *(void *)v1 + 16;
  *(void *)(*(void *)v1 + 296) = a1;
  swift_task_dealloc();
  sub_251A81D30(v2);
  return MEMORY[0x270FA2498](sub_251E560C0, 0, 0);
}

uint64_t sub_251E560C0()
{
  uint64_t v1 = v0[35];
  ClusterPath.description.getter();
  sub_251F35800();
  swift_bridgeObjectRelease();
  v0[38] = 0x8000000251F68280;
  long long v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_269B9D700
                                                                                    + dword_269B9D700);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[39] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_251E654B8;
  uint64_t v3 = v0[37];
  return v5(0x656D75736572, 0xE600000000000000, v3, v1, 0xD000000000000016, 0x8000000251F68280);
}

uint64_t StaticRVCClusterGroup.goHome()()
{
  *(void *)(v1 + 512) = v0;
  long long v2 = v0[13];
  *(_OWORD *)(v1 + 208) = v0[12];
  *(_OWORD *)(v1 + 224) = v2;
  *(_OWORD *)(v1 + 236) = *(_OWORD *)((char *)v0 + 220);
  long long v3 = v0[9];
  *(_OWORD *)(v1 + 144) = v0[8];
  *(_OWORD *)(v1 + 160) = v3;
  long long v4 = v0[11];
  *(_OWORD *)(v1 + 176) = v0[10];
  *(_OWORD *)(v1 + 192) = v4;
  long long v5 = v0[5];
  *(_OWORD *)(v1 + 80) = v0[4];
  *(_OWORD *)(v1 + 96) = v5;
  long long v6 = v0[7];
  *(_OWORD *)(v1 + 112) = v0[6];
  *(_OWORD *)(v1 + 128) = v6;
  long long v7 = v0[1];
  *(_OWORD *)(v1 + 16) = *v0;
  *(_OWORD *)(v1 + 32) = v7;
  long long v8 = v0[3];
  *(_OWORD *)(v1 + 48) = v0[2];
  *(_OWORD *)(v1 + 64) = v8;
  return MEMORY[0x270FA2498](sub_251E56240, 0, 0);
}

uint64_t sub_251E56240()
{
  if (*(unsigned char *)(v0 + 128) == 1)
  {
    unint64_t v1 = sub_251A19C30((uint64_t)&unk_2702619B8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CE50);
    swift_arrayDestroy();
    uint64_t v2 = *(void *)(v0 + 16);
    *(void *)(v0 + 520) = v2;
    __int16 v3 = *(_WORD *)(v0 + 24);
    *(_WORD *)(v0 + 252) = v3;
    *(unsigned char *)(v0 + 255) = *(unsigned char *)(v0 + 26);
    sub_251AA4920(v1);
    *(void *)(v0 + 528) = v4;
    swift_bridgeObjectRelease();
    sub_251A4DB38(v0 + 16);
    sub_251A1A568(0, &qword_269B9CE58);
    *(void *)(v0 + 496) = v2;
    *(_WORD *)(v0 + 504) = v3;
    *(unsigned char *)(v0 + 506) = 23;
    long long v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 536) = v5;
    *long long v5 = v0;
    v5[1] = sub_251E564BC;
    return sub_251C4E0D4((uint64_t *)(v0 + 496));
  }
  else
  {
    long long v7 = *(_OWORD **)(v0 + 512);
    long long v9 = v7[1];
    long long v8 = v7[2];
    *(_OWORD *)(v0 + 256) = *v7;
    *(_OWORD *)(v0 + 272) = v9;
    *(_OWORD *)(v0 + 288) = v8;
    long long v10 = v7[6];
    long long v12 = v7[3];
    long long v11 = v7[4];
    *(_OWORD *)(v0 + 336) = v7[5];
    *(_OWORD *)(v0 + 352) = v10;
    *(_OWORD *)(v0 + 304) = v12;
    *(_OWORD *)(v0 + 320) = v11;
    long long v13 = v7[10];
    long long v15 = v7[7];
    long long v14 = v7[8];
    *(_OWORD *)(v0 + 400) = v7[9];
    *(_OWORD *)(v0 + 416) = v13;
    *(_OWORD *)(v0 + 368) = v15;
    *(_OWORD *)(v0 + 384) = v14;
    long long v17 = v7[12];
    long long v16 = v7[13];
    long long v18 = v7[11];
    *(_OWORD *)(v0 + 476) = *(_OWORD *)((char *)v7 + 220);
    *(_OWORD *)(v0 + 448) = v17;
    *(_OWORD *)(v0 + 464) = v16;
    *(_OWORD *)(v0 + 432) = v18;
    *(unsigned char *)(v0 + 254) = 0;
    uint64_t v19 = swift_task_alloc();
    *(void *)(v0 + 568) = v19;
    *(void *)uint64_t v19 = v0;
    *(void *)(v19 + 8) = sub_251E56838;
    *(unsigned char *)(v19 + 255) = *(unsigned char *)(v0 + 254);
    long long v21 = *(_OWORD *)(v0 + 272);
    long long v20 = *(_OWORD *)(v0 + 288);
    *(_OWORD *)(v19 + 16) = *(_OWORD *)(v0 + 256);
    *(_OWORD *)(v19 + 32) = v21;
    *(_OWORD *)(v19 + 48) = v20;
    long long v22 = *(_OWORD *)(v0 + 432);
    long long v23 = *(_OWORD *)(v0 + 476);
    long long v24 = *(_OWORD *)(v0 + 464);
    *(_OWORD *)(v19 + 208) = *(_OWORD *)(v0 + 448);
    *(_OWORD *)(v19 + 224) = v24;
    *(_OWORD *)(v19 + 236) = v23;
    *(_OWORD *)(v19 + 192) = v22;
    long long v25 = *(_OWORD *)(v0 + 368);
    long long v26 = *(_OWORD *)(v0 + 384);
    long long v27 = *(_OWORD *)(v0 + 416);
    *(_OWORD *)(v19 + 160) = *(_OWORD *)(v0 + 400);
    *(_OWORD *)(v19 + 176) = v27;
    *(_OWORD *)(v19 + 128) = v25;
    *(_OWORD *)(v19 + 144) = v26;
    long long v28 = *(_OWORD *)(v0 + 304);
    long long v29 = *(_OWORD *)(v0 + 320);
    long long v30 = *(_OWORD *)(v0 + 352);
    *(_OWORD *)(v19 + 96) = *(_OWORD *)(v0 + 336);
    *(_OWORD *)(v19 + 112) = v30;
    *(_OWORD *)(v19 + 64) = v28;
    *(_OWORD *)(v19 + 80) = v29;
    return MEMORY[0x270FA2498](sub_251E5FAEC, 0, 0);
  }
}

uint64_t sub_251E564BC(uint64_t a1)
{
  uint64_t v2 = *(void *)v1 + 16;
  *(void *)(*(void *)v1 + 544) = a1;
  swift_task_dealloc();
  sub_251A81D30(v2);
  return MEMORY[0x270FA2498](sub_251E565C8, 0, 0);
}

uint64_t sub_251E565C8()
{
  uint64_t v1 = v0[66];
  ClusterPath.description.getter();
  sub_251F35800();
  swift_bridgeObjectRelease();
  v0[69] = 0x8000000251F68280;
  long long v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_269B9D708
                                                                                    + dword_269B9D708);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[70] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_251E566EC;
  uint64_t v3 = v0[68];
  return v5(0x656D6F486F67, 0xE600000000000000, v3, v1, 0xD000000000000016, 0x8000000251F68280);
}

uint64_t sub_251E566EC()
{
  uint64_t v1 = *(void **)(*v0 + 544);
  uint64_t v4 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v2 = *(uint64_t (**)(void))(v4 + 8);
  return v2();
}

uint64_t sub_251E56838()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t StaticRVCClusterGroup.pause()()
{
  long long v2 = v0[13];
  v1[13] = v0[12];
  v1[14] = v2;
  *(_OWORD *)((char *)v1 + 236) = *(_OWORD *)((char *)v0 + 220);
  long long v3 = v0[9];
  v1[9] = v0[8];
  v1[10] = v3;
  long long v4 = v0[11];
  v1[11] = v0[10];
  v1[12] = v4;
  long long v5 = v0[5];
  v1[5] = v0[4];
  v1[6] = v5;
  long long v6 = v0[7];
  v1[7] = v0[6];
  v1[8] = v6;
  long long v7 = v0[1];
  v1[1] = *v0;
  v1[2] = v7;
  long long v8 = v0[3];
  v1[3] = v0[2];
  long long v1[4] = v8;
  return MEMORY[0x270FA2498](sub_251E56988, 0, 0);
}

uint64_t sub_251E56988()
{
  unint64_t v1 = sub_251A19C30((uint64_t)&unk_2702619F0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CE50);
  swift_arrayDestroy();
  uint64_t v2 = *(void *)(v0 + 16);
  *(void *)(v0 + 272) = v2;
  __int16 v3 = *(_WORD *)(v0 + 24);
  *(_WORD *)(v0 + 252) = v3;
  *(unsigned char *)(v0 + 254) = *(unsigned char *)(v0 + 26);
  sub_251AA4920(v1);
  *(void *)(v0 + 280) = v4;
  swift_bridgeObjectRelease();
  sub_251A4DB38(v0 + 16);
  sub_251A1A568(0, &qword_269B9CE58);
  *(void *)(v0 + 256) = v2;
  *(_WORD *)(v0 + 264) = v3;
  *(unsigned char *)(v0 + 266) = 23;
  long long v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 288) = v5;
  *long long v5 = v0;
  v5[1] = sub_251E56AD8;
  return sub_251C4E0D4((uint64_t *)(v0 + 256));
}

uint64_t sub_251E56AD8(uint64_t a1)
{
  uint64_t v2 = *(void *)v1 + 16;
  *(void *)(*(void *)v1 + 296) = a1;
  swift_task_dealloc();
  sub_251A81D30(v2);
  return MEMORY[0x270FA2498](sub_251E56BE4, 0, 0);
}

uint64_t sub_251E56BE4()
{
  uint64_t v1 = v0[35];
  ClusterPath.description.getter();
  sub_251F35800();
  swift_bridgeObjectRelease();
  v0[38] = 0x8000000251F68280;
  long long v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_269B9D710
                                                                                    + dword_269B9D710);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[39] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_251E56D04;
  uint64_t v3 = v0[37];
  return v5(0x6573756170, 0xE500000000000000, v3, v1, 0xD000000000000016, 0x8000000251F68280);
}

uint64_t sub_251E56D04()
{
  uint64_t v1 = *(void **)(*v0 + 296);
  uint64_t v4 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v2 = *(uint64_t (**)(void))(v4 + 8);
  return v2();
}

uint64_t sub_251E56E50(uint64_t a1)
{
  uint64_t v2 = a1 + 56;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 56);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  uint64_t v9 = MEMORY[0x263F8EE78];
  if (!v5) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v10 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  for (unint64_t i = v10 | (v8 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v8 << 6))
  {
    int v15 = *(char *)(*(void *)(a1 + 48) + i);
    if (v15 >= 0) {
      char v16 = 0x3020001u >> (8 * v15);
    }
    else {
      char v16 = (v15 & 0x7F) + 4;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_251F0F89C(0, *(void *)(v9 + 16) + 1, 1, (char *)v9);
      uint64_t v9 = result;
    }
    unint64_t v18 = *(void *)(v9 + 16);
    unint64_t v17 = *(void *)(v9 + 24);
    if (v18 >= v17 >> 1)
    {
      uint64_t result = (uint64_t)sub_251F0F89C((char *)(v17 > 1), v18 + 1, 1, (char *)v9);
      uint64_t v9 = result;
    }
    *(void *)(v9 + 16) = v18 + 1;
    *(unsigned char *)(v9 + v18 + 32) = v16;
    if (v5) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v12 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v12 >= v6) {
      goto LABEL_30;
    }
    unint64_t v13 = *(void *)(v2 + 8 * v12);
    ++v8;
    if (!v13)
    {
      int64_t v8 = v12 + 1;
      if (v12 + 1 >= v6) {
        goto LABEL_30;
      }
      unint64_t v13 = *(void *)(v2 + 8 * v8);
      if (!v13)
      {
        int64_t v8 = v12 + 2;
        if (v12 + 2 >= v6) {
          goto LABEL_30;
        }
        unint64_t v13 = *(void *)(v2 + 8 * v8);
        if (!v13)
        {
          int64_t v8 = v12 + 3;
          if (v12 + 3 >= v6) {
            goto LABEL_30;
          }
          unint64_t v13 = *(void *)(v2 + 8 * v8);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_20:
    unint64_t v5 = (v13 - 1) & v13;
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v6)
  {
LABEL_30:
    swift_release();
    return v9;
  }
  unint64_t v13 = *(void *)(v2 + 8 * v14);
  if (v13)
  {
    int64_t v8 = v14;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v8 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v8 >= v6) {
      goto LABEL_30;
    }
    unint64_t v13 = *(void *)(v2 + 8 * v8);
    ++v14;
    if (v13) {
      goto LABEL_20;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t StaticRVCClusterGroup.CleanMode.secondaryTags.getter()
{
  return sub_251E5B278(sub_251A80CA8);
}

uint64_t StaticRVCClusterGroup.CleanMode.isVacuumAndMop.getter()
{
  return sub_251A81B84((uint64_t)&unk_270261C58, *(void *)(v0 + 24));
}

uint64_t StaticRVCClusterGroup.CleanMode.isVacuumOnly.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  if (!*(void *)(v1 + 16)) {
    return 0;
  }
  sub_251F36CA0();
  sub_251F36CD0();
  sub_251F357B0();
  uint64_t v2 = sub_251F36D00();
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  unint64_t v4 = v2 & ~v3;
  if (((*(void *)(v1 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
    return 0;
  }
  uint64_t v5 = ~v3;
  while ((*(unsigned char *)(*(void *)(v1 + 48) + v4) & 0xBF) != 0x81)
  {
    unint64_t v4 = (v4 + 1) & v5;
    if (((*(void *)(v1 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
      return 0;
    }
  }
  return sub_251A7FCB4((uint64_t)&unk_270261C80, v1);
}

uint64_t StaticRVCClusterGroup.CleanMode.isMopOnly.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  if (!*(void *)(v1 + 16)) {
    return 0;
  }
  sub_251F36CA0();
  sub_251F36CD0();
  sub_251F357B0();
  uint64_t v2 = sub_251F36D00();
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  unint64_t v4 = v2 & ~v3;
  if (((*(void *)(v1 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
    return 0;
  }
  uint64_t v5 = ~v3;
  while ((*(unsigned char *)(*(void *)(v1 + 48) + v4) & 0xBF) != 0x82)
  {
    unint64_t v4 = (v4 + 1) & v5;
    if (((*(void *)(v1 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
      return 0;
    }
  }
  return sub_251A7FCB4((uint64_t)&unk_270261CA8, v1);
}

BOOL StaticRVCClusterGroup.CleanMode.isVacuum.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  if (!*(void *)(v1 + 16)) {
    return 0;
  }
  sub_251F36CA0();
  sub_251F36CD0();
  sub_251F357B0();
  uint64_t v2 = sub_251F36D00();
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  unint64_t v4 = v2 & ~v3;
  if (((*(void *)(v1 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
    return 0;
  }
  uint64_t v5 = ~v3;
  do
  {
    int v6 = *(unsigned char *)(*(void *)(v1 + 48) + v4) & 0xBF;
    BOOL result = v6 == 129;
    if (v6 == 129) {
      break;
    }
    unint64_t v4 = (v4 + 1) & v5;
  }
  while (((*(void *)(v1 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  return result;
}

BOOL StaticRVCClusterGroup.CleanMode.isMop.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  if (!*(void *)(v1 + 16)) {
    return 0;
  }
  sub_251F36CA0();
  sub_251F36CD0();
  sub_251F357B0();
  uint64_t v2 = sub_251F36D00();
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  unint64_t v4 = v2 & ~v3;
  if (((*(void *)(v1 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
    return 0;
  }
  uint64_t v5 = ~v3;
  do
  {
    int v6 = *(unsigned char *)(*(void *)(v1 + 48) + v4) & 0xBF;
    BOOL result = v6 == 130;
    if (v6 == 130) {
      break;
    }
    unint64_t v4 = (v4 + 1) & v5;
  }
  while (((*(void *)(v1 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  return result;
}

uint64_t StaticRVCClusterGroup.toggleKnownState()()
{
  return sub_251C5F41C(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t StaticRVCClusterGroup.init(endpointPath:device:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = *a1;
  uint64_t v6 = *((unsigned __int16 *)a1 + 4);
  uint64_t ObjectType = swift_getObjectType();
  if (!(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a2 + 24))(v6, ObjectType, a2))
  {
LABEL_34:
    swift_unknownObjectRelease();
    goto LABEL_35;
  }
  uint64_t v9 = v8;
  uint64_t v10 = swift_getObjectType();
  uint64_t v11 = MatterDescriptorCluster.availableClusterKinds.getter(v10, v9);
  if (qword_269B9C500 != -1) {
LABEL_84:
  }
    swift_once();
  if ((sub_251A7F320(v11, qword_269BA49D8) & 1) == 0
    || (uint64_t v93 = v11,
        *(void *)&long long v96 = v5,
        WORD4(v96) = v6,
        uint64_t v11 = 24,
        BYTE10(v96) = 24,
        (uint64_t v12 = sub_251E5DB10((uint64_t)&v96, ObjectType, a2)) == 0))
  {
LABEL_32:
    swift_unknownObjectRelease();
LABEL_33:
    swift_bridgeObjectRelease();
    goto LABEL_34;
  }
  uint64_t v13 = v12;
  *(void *)&long long v96 = v5;
  WORD4(v96) = v6;
  BYTE10(v96) = 24;
  uint64_t v14 = sub_251E5E6EC((uint64_t)&v96, ObjectType, a2, "Couldn't get value for current run mode: (%s path:'%s'");
  if ((v14 & 0x10000) != 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_32;
  }
  uint64_t v92 = v5;
  int64_t v15 = 0;
  uint64_t v16 = v13 + 56;
  uint64_t v17 = 1 << *(unsigned char *)(v13 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & *(void *)(v13 + 56);
  int64_t v20 = (unint64_t)(v17 + 63) >> 6;
  uint64_t v5 = (unsigned __int16)v14;
  do
  {
    if (v19)
    {
      unint64_t v21 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      unint64_t v22 = v21 | (v15 << 6);
    }
    else
    {
      int64_t v24 = v15 + 1;
      if (__OFADD__(v15, 1))
      {
        __break(1u);
        goto LABEL_84;
      }
      if (v24 >= v20) {
        goto LABEL_39;
      }
      unint64_t v25 = *(void *)(v16 + 8 * v24);
      ++v15;
      if (!v25)
      {
        int64_t v15 = v24 + 1;
        if (v24 + 1 >= v20) {
          goto LABEL_39;
        }
        unint64_t v25 = *(void *)(v16 + 8 * v15);
        if (!v25)
        {
          int64_t v15 = v24 + 2;
          if (v24 + 2 >= v20) {
            goto LABEL_39;
          }
          unint64_t v25 = *(void *)(v16 + 8 * v15);
          if (!v25)
          {
            int64_t v15 = v24 + 3;
            if (v24 + 3 >= v20) {
              goto LABEL_39;
            }
            unint64_t v25 = *(void *)(v16 + 8 * v15);
            if (!v25)
            {
              int64_t v15 = v24 + 4;
              if (v24 + 4 >= v20) {
                goto LABEL_39;
              }
              unint64_t v25 = *(void *)(v16 + 8 * v15);
              if (!v25)
              {
                int64_t v26 = v24 + 5;
                if (v26 >= v20)
                {
LABEL_39:
                  swift_unknownObjectRelease();
                  swift_bridgeObjectRelease();
                  goto LABEL_33;
                }
                unint64_t v25 = *(void *)(v16 + 8 * v26);
                if (!v25)
                {
                  while (1)
                  {
                    int64_t v15 = v26 + 1;
                    if (__OFADD__(v26, 1)) {
                      break;
                    }
                    if (v15 >= v20) {
                      goto LABEL_39;
                    }
                    unint64_t v25 = *(void *)(v16 + 8 * v15);
                    ++v26;
                    if (v25) {
                      goto LABEL_29;
                    }
                  }
                  __break(1u);
LABEL_86:
                  swift_once();
                  goto LABEL_77;
                }
                int64_t v15 = v26;
              }
            }
          }
        }
      }
LABEL_29:
      unint64_t v19 = (v25 - 1) & v25;
      unint64_t v22 = __clz(__rbit64(v25)) + (v15 << 6);
    }
    uint64_t v23 = *(void *)(v13 + 48);
  }
  while (*(void *)(v23 + 32 * v22) != (unsigned __int16)v14);
  long long v29 = (void *)(v23 + 32 * v22);
  uint64_t v89 = v29[1];
  uint64_t v30 = v29[3];
  uint64_t v91 = v29[2];
  swift_bridgeObjectRetain();
  uint64_t v90 = v30;
  swift_bridgeObjectRetain();
  *(void *)&long long v96 = v92;
  WORD4(v96) = v6;
  BYTE10(v96) = 24;
  uint64_t v85 = *(uint64_t (**)(long long *, uint64_t, uint64_t))(a2 + 80);
  unint64_t v31 = v85(&v96, ObjectType, a2);
  __int16 v32 = &unk_26B21E000;
  uint64_t v84 = a3;
  if ((v31 & 0x100000000) != 0)
  {
    if (qword_26B21ECD0 != -1) {
      swift_once();
    }
    uint64_t v33 = sub_251F350A0();
    __swift_project_value_buffer(v33, (uint64_t)qword_26B21ECB8);
    uint64_t v34 = sub_251F35080();
    os_log_type_t v35 = sub_251F35FB0();
    if (os_log_type_enabled(v34, v35))
    {
      os_log_type_t typea = v35;
      uint64_t v36 = (uint8_t *)swift_slowAlloc();
      uint64_t v79 = swift_slowAlloc();
      *(_DWORD *)uint64_t v36 = 136315138;
      *(void *)&v94[0] = v79;
      *(void *)&long long v96 = v92;
      WORD4(v96) = v6;
      BYTE10(v96) = 24;
      uint64_t v37 = ClusterPath.description.getter();
      *(void *)&long long v96 = sub_251A00E84(v37, v38, (uint64_t *)v94);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2519F3000, v34, typea, "Couldn't read runMode FeatureMap '%s'", v36, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v79, -1, -1);
      MEMORY[0x2533AC760](v36, -1, -1);
    }
    else
    {
    }
    LOBYTE(v76) = 0;
  }
  else
  {
    uint64_t v76 = (v31 >> 16) & 1;
  }
  if (sub_251DB3B04(25, v93))
  {
    *(void *)&long long v96 = v92;
    WORD4(v96) = v6;
    BYTE10(v96) = 25;
    uint64_t v39 = sub_251E5E104((uint64_t)&v96, ObjectType, a2);
    *(void *)&long long v96 = v92;
    WORD4(v96) = v6;
    BYTE10(v96) = 25;
    uint64_t v40 = sub_251E5E6EC((uint64_t)&v96, ObjectType, a2, "Couldn't get value for current clean mode: (%s path:'%s'");
    if (v39)
    {
      Class isa = v39[2].isa;
      os_log_t log = v39;
      if (isa)
      {
        uint64_t v42 = v39 + 7;
        while ((v40 & 0x10000) != 0 || v42[-3].isa != (Class)(unsigned __int16)v40)
        {
          v42 += 4;
          Class isa = (Class)((char *)isa - 1);
          if (!isa) {
            goto LABEL_55;
          }
        }
        uint64_t v80 = (uint64_t)v42[-2].isa;
        uint64_t type = (unsigned __int16)v40;
        Class v43 = v42->isa;
        buf = (uint8_t *)v42[-1].isa;
        swift_bridgeObjectRetain();
        Class v77 = v43;
        swift_bridgeObjectRetain();
      }
      else
      {
LABEL_55:
        uint64_t v80 = 0;
        uint64_t type = 0;
        Class v77 = 0;
        buf = 0;
      }
      __int16 v32 = (void *)&unk_26B21E000;
    }
    else
    {
      uint64_t v80 = 0;
      uint64_t type = 0;
      Class v77 = 0;
      buf = 0;
      os_log_t log = 0;
      __int16 v32 = &unk_26B21E000;
    }
  }
  else
  {
    uint64_t v80 = 0;
    uint64_t type = 0;
    Class v77 = 0;
    buf = 0;
    os_log_t log = 0;
  }
  *(void *)&long long v96 = v92;
  WORD4(v96) = v6;
  BYTE10(v96) = 25;
  unint64_t v44 = v85(&v96, ObjectType, a2);
  if ((v44 & 0x100000000) != 0)
  {
    if (v32[410] != -1) {
      swift_once();
    }
    uint64_t v45 = sub_251F350A0();
    __swift_project_value_buffer(v45, (uint64_t)qword_26B21ECB8);
    uint64_t v46 = sub_251F35080();
    os_log_type_t v47 = sub_251F35FB0();
    if (os_log_type_enabled(v46, v47))
    {
      uint64_t v48 = (uint8_t *)swift_slowAlloc();
      uint64_t v87 = swift_slowAlloc();
      *(_DWORD *)uint64_t v48 = 136315138;
      *(void *)&v94[0] = v87;
      *(void *)&long long v96 = v92;
      WORD4(v96) = v6;
      BYTE10(v96) = 25;
      uint64_t v49 = ClusterPath.description.getter();
      *(void *)&long long v96 = sub_251A00E84(v49, v50, (uint64_t *)v94);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2519F3000, v46, v47, "Couldn't read cleanMode FeatureMap '%s'", v48, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v87, -1, -1);
      MEMORY[0x2533AC760](v48, -1, -1);
    }

    LOBYTE(v86) = 0;
  }
  else
  {
    uint64_t v86 = (v44 >> 16) & 1;
  }
  *(void *)&long long v96 = v92;
  WORD4(v96) = v6;
  BYTE10(v96) = 23;
  os_log_t v88 = (os_log_t)sub_251E5E9D0((uint64_t)&v96, ObjectType, a2);
  *(void *)&long long v96 = v92;
  WORD4(v96) = v6;
  BYTE10(v96) = 23;
  sub_251E5EDBC((uint64_t)&v96, ObjectType, a2, v94);
  char v51 = v94[0];
  if (LOBYTE(v94[0]) >= 0xFCu)
  {
    *(void *)&long long v96 = v5;
    *((void *)&v96 + 1) = v89;
    uint64_t v97 = v91;
    uint64_t v98 = v90;
    char v51 = StaticRVCClusterGroup.RunMode.isCleaning.getter();
  }
  *(void *)&long long v96 = v92;
  WORD4(v96) = v6;
  BYTE10(v96) = 23;
  sub_251E5F0B4((uint64_t)&v96, ObjectType, a2, v94);
  if (LOBYTE(v94[0]) <= 0xEFu) {
    char v52 = v94[0];
  }
  else {
    char v52 = 0;
  }
  if (v51 < 0) {
    LOBYTE(v53) = (v51 & 0x7F) + 4;
  }
  else {
    unsigned int v53 = 0x3020001u >> (8 * v51);
  }
  if (v88)
  {
    char v74 = v53;
    char v75 = v52;
    uint64_t v54 = sub_251E56E50((uint64_t)v88);
    swift_bridgeObjectRelease();
    uint64_t v55 = sub_251EE0A70(v54);
    swift_bridgeObjectRelease();
    *(void *)&long long v96 = v92;
    WORD4(v96) = v6;
    BYTE10(v96) = 23;
    uint64_t v56 = (*(uint64_t (**)(long long *, uint64_t, uint64_t))(a2 + 96))(&v96, ObjectType, a2);
    char v57 = sub_251D81EDC(128, v56);
    swift_bridgeObjectRelease();
    BOOL v58 = sub_251DB3B04(26, v93);
    swift_bridgeObjectRelease();
    if (v58)
    {
      *(void *)&long long v96 = v92;
      WORD4(v96) = v6;
      sub_251EED200((uint64_t)&v96, a2, (uint64_t)v94);
      swift_unknownObjectRelease();
      long long v59 = v94[0];
      long long v60 = v94[1];
      long long v61 = v94[2];
      long long v62 = v94[3];
      long long v63 = v94[4];
      long long v64 = v94[5];
      long long v65 = v94[6];
      int v66 = v95;
    }
    else
    {
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      int v66 = 0;
      long long v59 = 0uLL;
      long long v60 = 0uLL;
      long long v61 = 0uLL;
      long long v62 = 0uLL;
      long long v63 = 0uLL;
      long long v64 = 0uLL;
      long long v65 = 0uLL;
    }
    *(void *)&long long v96 = v92;
    WORD4(v96) = v6;
    BYTE10(v96) = 23;
    BYTE11(v96) = v74;
    uint64_t v97 = v5;
    uint64_t v98 = v89;
    uint64_t v99 = v91;
    uint64_t v100 = v90;
    uint64_t v101 = type;
    uint64_t v102 = v80;
    v103 = buf;
    Class v104 = v77;
    char v105 = v75;
    uint64_t v106 = v55;
    uint64_t v107 = v13;
    os_log_t v108 = log;
    char v109 = v57 & 1;
    char v110 = v76;
    char v111 = v86;
    long long v112 = v59;
    long long v113 = v60;
    long long v114 = v61;
    long long v115 = v62;
    long long v116 = v63;
    long long v117 = v64;
    long long v118 = v65;
    int v119 = v66;
    nullsub_1(&v96);
    uint64_t v27 = v84;
    return sub_251C335DC((uint64_t)&v96, v27);
  }
  sub_251A4DE90(type, v80, (uint64_t)buf);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_26B21ECD0 != -1) {
    goto LABEL_86;
  }
LABEL_77:
  uint64_t v67 = sub_251F350A0();
  __swift_project_value_buffer(v67, (uint64_t)qword_26B21ECB8);
  id v68 = sub_251F35080();
  os_log_type_t v69 = sub_251F35FB0();
  if (os_log_type_enabled(v68, v69))
  {
    uint64_t v70 = (uint8_t *)swift_slowAlloc();
    uint64_t v71 = swift_slowAlloc();
    *(_DWORD *)uint64_t v70 = 136315138;
    *(void *)&v94[0] = v71;
    *(void *)&long long v96 = v92;
    WORD4(v96) = v6;
    BYTE10(v96) = 23;
    uint64_t v72 = ClusterPath.description.getter();
    *(void *)&long long v96 = sub_251A00E84(v72, v73, (uint64_t *)v94);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2519F3000, v68, v69, "Failed to fetch operationalStateList %s", v70, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v71, -1, -1);
    MEMORY[0x2533AC760](v70, -1, -1);
    swift_unknownObjectRelease();
  }
  else
  {

    swift_unknownObjectRelease();
  }
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  a3 = v84;
LABEL_35:
  sub_251C6E6E0(&v96);
  uint64_t v27 = a3;
  return sub_251C335DC((uint64_t)&v96, v27);
}

uint64_t sub_251E57FF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1;
  uint64_t v87 = *v2;
  __int16 v86 = *((_WORD *)v2 + 4);
  char v85 = *((unsigned char *)v2 + 10);
  char v67 = *((unsigned char *)v2 + 11);
  uint64_t v101 = v2[3];
  uint64_t v102 = v2[2];
  uint64_t v105 = v2[4];
  uint64_t v106 = v2[5];
  uint64_t v65 = v2[7];
  uint64_t v66 = v2[6];
  uint64_t v63 = v2[9];
  uint64_t v64 = v2[8];
  char v84 = *((unsigned char *)v2 + 80);
  uint64_t v4 = v2[12];
  uint64_t v79 = v2[11];
  uint64_t v5 = v2[13];
  uint64_t v6 = v2[16];
  uint64_t v74 = v2[15];
  uint64_t v71 = v2[18];
  uint64_t v69 = v2[17];
  uint64_t v70 = v2[19];
  uint64_t v68 = v2[20];
  uint64_t v7 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  uint64_t v116 = a1 + 64;
  unint64_t v9 = v8 & *(void *)(a1 + 64);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  int v77 = *((_DWORD *)v2 + 58);
  uint64_t v72 = v2[21];
  uint64_t v73 = v2[22];
  uint64_t v81 = v2[23];
  uint64_t v82 = v2[24];
  uint64_t v83 = v2[25];
  uint64_t v80 = v2[28];
  unint64_t v75 = v2[26];
  uint64_t v76 = v2[27];
  swift_bridgeObjectRetain();
  uint64_t v107 = 0;
  uint64_t v99 = 0;
  uint64_t v100 = 0;
  uint64_t v103 = 0;
  uint64_t v104 = 0;
  uint64_t v89 = 0;
  uint64_t v97 = 0;
  uint64_t v98 = 0;
  uint64_t v95 = 0;
  uint64_t v96 = 0;
  unint64_t v93 = 0;
  uint64_t v94 = 0;
  uint64_t v91 = 0;
  uint64_t v92 = 0;
  int v90 = 0;
  uint64_t v108 = 0;
  uint64_t v110 = 0;
  uint64_t v114 = 0;
  uint64_t v115 = 0;
  uint64_t v118 = 0;
  uint64_t v119 = 0;
  uint64_t v120 = 0;
  uint64_t v121 = 0;
  int64_t v11 = 0;
  BOOL v58 = (void *)(v6 + 48);
  uint64_t v88 = v5;
  long long v62 = (uint64_t *)(v5 + 56);
  char v111 = 7;
  uint64_t v117 = v6;
  while (v9)
  {
    unint64_t v12 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    unint64_t v13 = v12 | (v11 << 6);
LABEL_20:
    uint64_t v17 = *(void *)(v3 + 48) + 8 * v13;
    int v18 = *(_DWORD *)v17;
    int v19 = *(unsigned __int8 *)(v17 + 4);
    uint64_t v20 = *(void *)(v3 + 56) + 16 * v13;
    uint64_t v21 = *(void *)v20;
    uint64_t v22 = *(unsigned __int8 *)(v20 + 8);
    if (*(_DWORD *)v17 == 1)
    {
      uint64_t v6 = v117;
      if (v19 == 24)
      {
        switch(*(unsigned char *)(v20 + 8))
        {
          case 1:
            uint64_t v23 = MEMORY[0x263F8D6C8];
            goto LABEL_26;
          case 2:
            uint64_t v23 = MEMORY[0x263F8D9D0];
LABEL_26:
            uint64_t v126 = v23;
            uint64_t v123 = v21;
            break;
          case 3:
            uint64_t v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CDD0);
            uint64_t v123 = v21;
            swift_bridgeObjectRetain();
            break;
          default:
            uint64_t v126 = MEMORY[0x263F8D4F8];
            LOBYTE(v123) = v21 & 1;
            break;
        }
        sub_251A1A4B8(v21, v22);
        sub_251A1A568(0, (unint64_t *)&qword_269BA04A0);
        if ((swift_dynamicCast() & 1) == 0) {
          goto LABEL_6;
        }
        sub_251A4EBDC(v21, v22);
        sub_251A4DE90(v118, v119, v121);
        id v24 = v122;
        uint64_t v25 = swift_bridgeObjectRetain();
        sub_251E55908(v25, v24, &v123);

        swift_bridgeObjectRelease();
        uint64_t v118 = v123;
        uint64_t v119 = v124;
        uint64_t v120 = v126;
        uint64_t v121 = v125;
      }
      else
      {
        if (((1 << v19) & 0xCFFFFFF) != 0)
        {
          sub_251A1A4B8(v21, v22);
          goto LABEL_6;
        }
        sub_251A1A4B8(v21, v22);
        switch(v22)
        {
          case 1:
            uint64_t v27 = MEMORY[0x263F8D6C8];
            goto LABEL_49;
          case 2:
            uint64_t v27 = MEMORY[0x263F8D9D0];
LABEL_49:
            uint64_t v126 = v27;
            uint64_t v123 = v21;
            break;
          case 3:
            uint64_t v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CDD0);
            uint64_t v123 = v21;
            swift_bridgeObjectRetain();
            break;
          default:
            uint64_t v126 = MEMORY[0x263F8D4F8];
            LOBYTE(v123) = v21 & 1;
            break;
        }
        sub_251A1A568(0, (unint64_t *)&qword_269BA04A0);
        if (swift_dynamicCast())
        {
          sub_251A4DE90(v108, v115, v110);
          sub_251A4EBDC(v21, v22);
          if (v88 && (uint64_t v28 = *(void *)(v88 + 16)) != 0)
          {
            int64_t v56 = v10;
            uint64_t v57 = v3;
            uint64_t v59 = v4;
            swift_bridgeObjectRetain_n();
            long long v29 = v62;
            while (1)
            {
              uint64_t v31 = *(v29 - 1);
              uint64_t v30 = *v29;
              uint64_t v33 = *(v29 - 3);
              uint64_t v32 = *(v29 - 2);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (v33 == objc_msgSend(v122, sel_unsignedShortValue)) {
                break;
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v29 += 4;
              if (!--v28)
              {

                swift_bridgeObjectRelease_n();
                uint64_t v108 = 0;
                uint64_t v110 = 0;
                uint64_t v114 = 0;
                uint64_t v115 = 0;
                goto LABEL_60;
              }
            }
            uint64_t v115 = v32;
            uint64_t v108 = v33;
            uint64_t v110 = v31;

            swift_bridgeObjectRelease_n();
            uint64_t v114 = v30;
LABEL_60:
            uint64_t v4 = v59;
            int64_t v10 = v56;
            uint64_t v3 = v57;
          }
          else
          {

            uint64_t v108 = 0;
            uint64_t v110 = 0;
            uint64_t v114 = 0;
            uint64_t v115 = 0;
          }
        }
        else
        {
LABEL_6:
          sub_251A4EBDC(v21, v22);
        }
      }
    }
    else
    {
      sub_251A1A4B8(*(void *)v20, *(unsigned char *)(v20 + 8));
      if (v18 == 2)
      {
        uint64_t v6 = v117;
        if (v19 != 26) {
          goto LABEL_6;
        }
        switch(v22)
        {
          case 1:
            uint64_t v35 = MEMORY[0x263F8D6C8];
            goto LABEL_70;
          case 2:
            uint64_t v35 = MEMORY[0x263F8D9D0];
LABEL_70:
            uint64_t v126 = v35;
            goto LABEL_72;
          case 3:
            uint64_t v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CDD0);
LABEL_72:
            uint64_t v123 = v21;
            break;
          default:
            uint64_t v126 = MEMORY[0x263F8D4F8];
            LOBYTE(v123) = v21 & 1;
            break;
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CDD0);
        if (swift_dynamicCast())
        {
          sub_251A4DED4(v107, v99, v100, v104, v103, v89, v98, v97, v96, v95);
          if (v74)
          {
            swift_bridgeObjectRetain();
            uint64_t v36 = v68;
            sub_251A1ACA8(v74, v117, v69, v71, v70, v68, v72, v73, v81, v82);
            uint64_t v37 = swift_bridgeObjectRetain();
            uint64_t v38 = sub_251E62C80(v37, (uint64_t)v122);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v100 = v38;
            if (*(void *)(v38 + 16))
            {
              uint64_t v103 = v70;
              uint64_t v104 = v71;
              uint64_t v39 = v74;
              if (*(unsigned char *)(v38 + 40) != 1)
              {
                if (!v117 || (uint64_t v40 = *(void *)(v117 + 16)) == 0)
                {
LABEL_82:
                  uint64_t v103 = 0;
                  uint64_t v104 = 0;
                  uint64_t v89 = 0;
                  goto LABEL_86;
                }
                uint64_t v104 = *(unsigned int *)(v38 + 36);
                uint64_t v41 = v58;
                while (*((_DWORD *)v41 - 4) != v104)
                {
                  v41 += 3;
                  if (!--v40) {
                    goto LABEL_82;
                  }
                }
                uint64_t v36 = *v41;
                uint64_t v103 = *(v41 - 1);
              }
            }
            else
            {
              uint64_t v103 = v70;
              uint64_t v104 = v71;
              uint64_t v39 = v74;
            }
            uint64_t v89 = v36;
            swift_bridgeObjectRetain();
LABEL_86:
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_251A1AD5C(v72, v73, v81, v82);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            sub_251A4DED4(v39, v117, v69, v71, v70, v68, v72, v73, v81, v82);
            uint64_t v107 = v39;
            uint64_t v98 = v72;
            uint64_t v99 = v117;
            uint64_t v96 = v81;
            uint64_t v97 = v73;
            uint64_t v94 = v83;
            uint64_t v95 = v82;
            uint64_t v92 = v76 & 1;
            unint64_t v93 = v75 & 0xFFFFFFFF000000FFLL;
            uint64_t v91 = v80;
            int v90 = v77 & 0x10101;
          }
          else
          {
            swift_bridgeObjectRelease();
            uint64_t v107 = 0;
            uint64_t v99 = v117;
            uint64_t v100 = v69;
            uint64_t v103 = v70;
            uint64_t v104 = v71;
            uint64_t v89 = v68;
            uint64_t v97 = v73;
            uint64_t v98 = v72;
            uint64_t v95 = v82;
            uint64_t v96 = v81;
            unint64_t v93 = v75;
            uint64_t v94 = v83;
            uint64_t v91 = v80;
            uint64_t v92 = v76;
            int v90 = v77;
          }
        }
      }
      else
      {
        BOOL v26 = v18 == 4 && v19 == 23;
        uint64_t v6 = v117;
        if (!v26) {
          goto LABEL_6;
        }
        switch(v22)
        {
          case 1:
            uint64_t v34 = MEMORY[0x263F8D6C8];
            goto LABEL_63;
          case 2:
            uint64_t v34 = MEMORY[0x263F8D9D0];
LABEL_63:
            uint64_t v126 = v34;
            uint64_t v123 = v21;
            break;
          case 3:
            uint64_t v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CDD0);
            uint64_t v123 = v21;
            swift_bridgeObjectRetain();
            break;
          default:
            uint64_t v126 = MEMORY[0x263F8D4F8];
            LOBYTE(v123) = v21 & 1;
            break;
        }
        sub_251A1A568(0, (unint64_t *)&qword_269BA04A0);
        if ((swift_dynamicCast() & 1) == 0) {
          goto LABEL_6;
        }
        unsigned int v60 = objc_msgSend(v122, sel_unsignedCharValue);

        switch(v60)
        {
          case 0u:
            sub_251A4EBDC(v21, v22);
            char v111 = 1;
            break;
          case 1u:
            sub_251A4EBDC(v21, v22);
            char v111 = 0;
            break;
          case 2u:
            sub_251A4EBDC(v21, v22);
            char v111 = 2;
            break;
          case 3u:
            sub_251A4EBDC(v21, v22);
            char v111 = 3;
            break;
          case 0x40u:
            sub_251A4EBDC(v21, v22);
            char v111 = 4;
            break;
          case 0x41u:
            sub_251A4EBDC(v21, v22);
            char v111 = 5;
            break;
          case 0x42u:
            sub_251A4EBDC(v21, v22);
            char v111 = 6;
            break;
          default:
            goto LABEL_6;
        }
      }
    }
  }
  if (__OFADD__(v11++, 1))
  {
    __break(1u);
LABEL_112:
    __break(1u);
    JUMPOUT(0x251E58DB0);
  }
  if (v11 >= v10)
  {
LABEL_94:
    swift_release();
    uint64_t v42 = a2;
    goto LABEL_95;
  }
  unint64_t v15 = *(void *)(v116 + 8 * v11);
  if (v15)
  {
LABEL_19:
    unint64_t v9 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v11 << 6);
    goto LABEL_20;
  }
  int64_t v16 = v11 + 1;
  if (v11 + 1 >= v10) {
    goto LABEL_94;
  }
  unint64_t v15 = *(void *)(v116 + 8 * v16);
  if (v15) {
    goto LABEL_18;
  }
  int64_t v16 = v11 + 2;
  if (v11 + 2 >= v10) {
    goto LABEL_94;
  }
  unint64_t v15 = *(void *)(v116 + 8 * v16);
  if (v15) {
    goto LABEL_18;
  }
  int64_t v16 = v11 + 3;
  if (v11 + 3 >= v10) {
    goto LABEL_94;
  }
  unint64_t v15 = *(void *)(v116 + 8 * v16);
  if (v15)
  {
LABEL_18:
    int64_t v11 = v16;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      goto LABEL_112;
    }
    if (v11 >= v10) {
      break;
    }
    unint64_t v15 = *(void *)(v116 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_19;
    }
  }
  swift_release();
  uint64_t v42 = a2;
  uint64_t v6 = v117;
LABEL_95:
  uint64_t v43 = v100;
  char v44 = v111;
  uint64_t v45 = v110;
  uint64_t v46 = v107;
  uint64_t v47 = v114;
  if (v111 != 7)
  {
    uint64_t v48 = v121;
    if (v121)
    {
      uint64_t v102 = v118;
      uint64_t v101 = v119;
      uint64_t v106 = v120;
      goto LABEL_105;
    }
    char v67 = v111;
    goto LABEL_104;
  }
  if (!v121)
  {
LABEL_104:
    uint64_t v48 = v105;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v44 = v67;
    goto LABEL_105;
  }
  uint64_t v123 = v118;
  uint64_t v124 = v119;
  uint64_t v125 = v121;
  uint64_t v126 = v120;
  if (StaticRVCClusterGroup.RunMode.isCleaning.getter()) {
    char v44 = 0;
  }
  else {
    char v44 = 2;
  }
  uint64_t v101 = v119;
  uint64_t v102 = v118;
  uint64_t v48 = v121;
  uint64_t v47 = v114;
  uint64_t v46 = v107;
  uint64_t v106 = v120;
LABEL_105:
  uint64_t v49 = v87;
  __int16 v50 = v86;
  char v51 = v85;
  char v52 = v84;
  uint64_t v53 = v108;
  if (!v110)
  {
    char v112 = v44;
    uint64_t v45 = v64;
    sub_251A1AC64(v66, v65, v64);
    char v51 = v85;
    uint64_t v49 = v87;
    __int16 v50 = v86;
    char v52 = v84;
    uint64_t v53 = v66;
    uint64_t v43 = v100;
    char v44 = v112;
    uint64_t v47 = v63;
    uint64_t v115 = v65;
    if (v46) {
      goto LABEL_107;
    }
LABEL_109:
    char v113 = v44;
    uint64_t v109 = v53;
    uint64_t v61 = v4;
    char v55 = v52;
    sub_251A1ACA8(v74, v6, v69, v71, v70, v68, v72, v73, v81, v82);
    char v51 = v85;
    uint64_t v49 = v87;
    __int16 v50 = v86;
    char v52 = v55;
    uint64_t v99 = v6;
    uint64_t v43 = v69;
    char v44 = v113;
    uint64_t v103 = v70;
    uint64_t v104 = v71;
    uint64_t v89 = v68;
    uint64_t v97 = v73;
    uint64_t v98 = v72;
    uint64_t v46 = v74;
    uint64_t v4 = v61;
    uint64_t v53 = v109;
    uint64_t v96 = v81;
    uint64_t v95 = v82;
    uint64_t v94 = v83;
    unint64_t v93 = v75;
    uint64_t v92 = v76;
    uint64_t v91 = v80;
    int v90 = v77;
    goto LABEL_107;
  }
  if (!v46) {
    goto LABEL_109;
  }
LABEL_107:
  *(void *)uint64_t v42 = v49;
  *(_WORD *)(v42 + 8) = v50;
  *(unsigned char *)(v42 + 10) = v51;
  *(unsigned char *)(v42 + 11) = v44;
  *(void *)(v42 + 16) = v102;
  *(void *)(v42 + 24) = v101;
  *(void *)(v42 + 32) = v48;
  *(void *)(v42 + 40) = v106;
  *(void *)(v42 + 48) = v53;
  *(void *)(v42 + 56) = v115;
  *(void *)(v42 + 64) = v45;
  *(void *)(v42 + 72) = v47;
  *(unsigned char *)(v42 + 80) = v52;
  *(void *)(v42 + 120) = v46;
  *(void *)(v42 + 128) = v99;
  *(void *)(v42 + 136) = v43;
  *(void *)(v42 + 144) = v104;
  *(void *)(v42 + 152) = v103;
  *(void *)(v42 + 160) = v89;
  *(void *)(v42 + 168) = v98;
  *(void *)(v42 + 176) = v97;
  *(void *)(v42 + 184) = v96;
  *(void *)(v42 + 192) = v95;
  *(void *)(v42 + 200) = v94;
  *(void *)(v42 + 208) = v93;
  *(void *)(v42 + 216) = v92;
  *(void *)(v42 + 224) = v91;
  *(_DWORD *)(v42 + 232) = v90;
  *(void *)(v42 + 88) = v79;
  *(void *)(v42 + 96) = v4;
  *(void *)(v42 + 104) = v88;
  *(_WORD *)(v42 + 112) = 0;
  *(unsigned char *)(v42 + 114) = 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t StaticRVCClusterGroup.RunMode.init(id:label:tags:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

__n128 StaticRVCClusterGroup.init(id:state:runningMode:cleaningMode:serviceArea:error:allStates:allRunningModes:allCleaningModes:isGoHomeCommandSupported:supportsChangingRunModeWhileRunning:supportsChangingCleanModeWhileRunning:)@<Q0>(uint64_t *a1@<X0>, char *a2@<X1>, _OWORD *a3@<X2>, _OWORD *a4@<X3>, uint64_t a5@<X4>, char *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, char a11, char a12, char a13)
{
  long long v13 = a3[1];
  *(_OWORD *)(a9 + 16) = *a3;
  *(_OWORD *)(a9 + 32) = v13;
  long long v14 = a4[1];
  *(_OWORD *)(a9 + 48) = *a4;
  *(_OWORD *)(a9 + 64) = v14;
  long long v15 = *(_OWORD *)(a5 + 16);
  *(_OWORD *)(a9 + 120) = *(_OWORD *)a5;
  *(_OWORD *)(a9 + 136) = v15;
  long long v16 = *(_OWORD *)(a5 + 48);
  *(_OWORD *)(a9 + 152) = *(_OWORD *)(a5 + 32);
  *(_OWORD *)(a9 + 168) = v16;
  long long v17 = *(_OWORD *)(a5 + 80);
  *(_OWORD *)(a9 + 184) = *(_OWORD *)(a5 + 64);
  uint64_t v18 = *a1;
  __int16 v19 = *((_WORD *)a1 + 4);
  char v20 = *((unsigned char *)a1 + 10);
  char v21 = *a2;
  int v22 = *(_DWORD *)(a5 + 112);
  char v23 = *a6;
  *(void *)a9 = v18;
  *(_WORD *)(a9 + 8) = v19;
  *(unsigned char *)(a9 + 10) = v20;
  *(unsigned char *)(a9 + 11) = v21;
  *(unsigned char *)(a9 + 80) = v23;
  *(void *)(a9 + 88) = a7;
  *(void *)(a9 + 96) = a8;
  *(void *)(a9 + 104) = a10;
  *(unsigned char *)(a9 + 112) = a11;
  *(unsigned char *)(a9 + 113) = a12;
  *(unsigned char *)(a9 + 114) = a13;
  *(_OWORD *)(a9 + 200) = v17;
  __n128 result = *(__n128 *)(a5 + 96);
  *(__n128 *)(a9 + 216) = result;
  *(_DWORD *)(a9 + 232) = v22;
  return result;
}

void *static StaticRVCClusterGroup.State.allCases.getter()
{
  return &unk_270264D78;
}

void StaticRVCClusterGroup.id.getter(uint64_t a1@<X8>)
{
  __int16 v2 = *(_WORD *)(v1 + 8);
  char v3 = *(unsigned char *)(v1 + 10);
  *(void *)a1 = *(void *)v1;
  *(_WORD *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 10) = v3;
}

void StaticRVCClusterGroup.state.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 11);
}

uint64_t StaticRVCClusterGroup.runningMode.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 32);
  uint64_t v3 = *(void *)(v1 + 40);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 16);
  *(void *)(a1 + 16) = v2;
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t StaticRVCClusterGroup.cleaningMode.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[6];
  uint64_t v3 = v1[7];
  uint64_t v4 = v1[8];
  uint64_t v5 = v1[9];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return sub_251A1AC64(v2, v3, v4);
}

void StaticRVCClusterGroup.error.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 80);
}

uint64_t StaticRVCClusterGroup.allStates.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t StaticRVCClusterGroup.allRunningModes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t StaticRVCClusterGroup.allCleaningModes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t StaticRVCClusterGroup.isGoHomeCommandSupported.getter()
{
  return *(unsigned __int8 *)(v0 + 112);
}

uint64_t StaticRVCClusterGroup.supportsChangingRunModeWhileRunning.getter()
{
  return *(unsigned __int8 *)(v0 + 113);
}

uint64_t StaticRVCClusterGroup.supportsChangingCleanModeWhileRunning.getter()
{
  return *(unsigned __int8 *)(v0 + 114);
}

uint64_t StaticRVCClusterGroup.serviceArea.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 120);
  uint64_t v3 = *(void *)(v1 + 128);
  uint64_t v4 = *(void *)(v1 + 136);
  uint64_t v5 = *(void *)(v1 + 144);
  uint64_t v6 = *(void *)(v1 + 152);
  uint64_t v7 = *(void *)(v1 + 160);
  uint64_t v8 = *(void *)(v1 + 168);
  uint64_t v9 = *(void *)(v1 + 176);
  uint64_t v10 = *(void *)(v1 + 184);
  uint64_t v11 = *(void *)(v1 + 192);
  uint64_t v12 = *(void *)(v1 + 200);
  uint64_t v13 = *(void *)(v1 + 208);
  uint64_t v14 = *(void *)(v1 + 216);
  uint64_t v15 = *(void *)(v1 + 224);
  int v16 = *(_DWORD *)(v1 + 232);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(void *)(a1 + 64) = v10;
  *(void *)(a1 + 72) = v11;
  *(void *)(a1 + 80) = v12;
  *(void *)(a1 + 88) = v13;
  *(void *)(a1 + 96) = v14;
  *(void *)(a1 + 104) = v15;
  *(_DWORD *)(a1 + 112) = v16;
  return sub_251A1ACA8(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11);
}

uint64_t StaticRVCClusterGroup.hash(into:)(long long *a1)
{
  uint64_t v3 = v1[5];
  uint64_t v4 = v1[8];
  uint64_t v7 = v1[7];
  uint64_t v8 = v1[6];
  uint64_t v5 = v1[9];
  uint64_t v9 = v1[11];
  uint64_t v10 = v1[12];
  uint64_t v11 = v1[13];
  uint64_t v12 = v1[15];
  sub_251F36CF0();
  sub_251F36CD0();
  sub_251F36CE0();
  sub_251F36CB0();
  sub_251F36CB0();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_251A54AB8((uint64_t)a1, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  sub_251F36CC0();
  if (v4)
  {
    sub_251F36CB0();
    sub_251A1AC64(v8, v7, v4);
    swift_bridgeObjectRetain();
    sub_251F357B0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_251A54AB8((uint64_t)a1, v5);
    swift_bridgeObjectRelease();
    sub_251A4DE90(v8, v7, v4);
  }
  sub_251F36CC0();
  sub_251F357B0();
  swift_bridgeObjectRetain();
  sub_251A54ED4(a1, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_251A54CF4(a1, v10);
  swift_bridgeObjectRelease();
  sub_251F36CC0();
  if (v11)
  {
    swift_bridgeObjectRetain();
    sub_251A41DD4((uint64_t)a1, v11);
    swift_bridgeObjectRelease();
  }
  sub_251F36CC0();
  sub_251F36CC0();
  sub_251F36CC0();
  if (!v12) {
    return sub_251F36CC0();
  }
  sub_251F36CC0();
  return ServiceArea.hash(into:)((uint64_t)a1);
}

unint64_t sub_251E59494(char a1)
{
  unint64_t result = 25705;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6574617473;
      break;
    case 2:
      unint64_t result = 0x4D676E696E6E7572;
      break;
    case 3:
      unint64_t result = 0x676E696E61656C63;
      break;
    case 4:
      unint64_t result = 0x726F727265;
      break;
    case 5:
      unint64_t result = 0x65746174536C6C61;
      break;
    case 6:
      unint64_t result = 0x696E6E75526C6C61;
      break;
    case 7:
      unint64_t result = 0xD000000000000010;
      break;
    case 8:
      unint64_t result = 0xD000000000000018;
      break;
    case 9:
      unint64_t result = 0xD000000000000023;
      break;
    case 10:
      unint64_t result = 0xD000000000000025;
      break;
    case 11:
      unint64_t result = 0x4165636976726573;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_251E59628()
{
  return sub_251E59494(*v0);
}

uint64_t sub_251E59630@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251E64AAC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251E59658(uint64_t a1)
{
  unint64_t v2 = sub_251E62434();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E59694(uint64_t a1)
{
  unint64_t v2 = sub_251E62434();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticRVCClusterGroup.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4A10);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  __int16 v8 = *((_WORD *)v1 + 4);
  int v63 = *((unsigned __int8 *)v1 + 10);
  int v47 = *((unsigned __int8 *)v1 + 11);
  uint64_t v9 = v1[2];
  uint64_t v45 = v1[3];
  uint64_t v46 = v9;
  long long v41 = *((_OWORD *)v1 + 2);
  uint64_t v10 = v1[6];
  uint64_t v43 = v1[7];
  uint64_t v44 = v10;
  uint64_t v42 = v1[8];
  uint64_t v40 = v1[9];
  int v39 = *((unsigned __int8 *)v1 + 80);
  uint64_t v38 = v1[11];
  uint64_t v37 = v1[12];
  uint64_t v36 = v1[13];
  int v35 = *((unsigned __int8 *)v1 + 112);
  int v34 = *((unsigned __int8 *)v1 + 113);
  int v33 = *((unsigned __int8 *)v1 + 114);
  uint64_t v19 = v1[15];
  uint64_t v20 = v1[16];
  long long v21 = *(_OWORD *)(v1 + 17);
  uint64_t v32 = v1[19];
  uint64_t v31 = v1[20];
  uint64_t v30 = v1[21];
  uint64_t v29 = v1[22];
  uint64_t v28 = v1[23];
  uint64_t v27 = v1[24];
  uint64_t v26 = v1[25];
  uint64_t v25 = v1[26];
  uint64_t v24 = v1[27];
  uint64_t v23 = v1[28];
  int v22 = *((_DWORD *)v1 + 58);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251E62434();
  sub_251F36DA0();
  uint64_t v49 = v7;
  uint64_t v11 = v6;
  LOWORD(v50) = v8;
  BYTE2(v50) = v63;
  char v64 = 0;
  sub_251A900F8();
  uint64_t v12 = v48;
  sub_251F36A20();
  if (v12) {
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  uint64_t v13 = v45;
  uint64_t v14 = v46;
  uint64_t v15 = v42;
  uint64_t v16 = v43;
  uint64_t v17 = v44;
  LOBYTE(v49) = v47;
  char v64 = 1;
  sub_251E62488();
  sub_251F36A20();
  uint64_t v49 = v14;
  uint64_t v50 = v13;
  long long v51 = v41;
  char v64 = 2;
  sub_251E624DC();
  sub_251F36A20();
  uint64_t v48 = v4;
  uint64_t v49 = v17;
  uint64_t v50 = v16;
  *(void *)&long long v51 = v15;
  *((void *)&v51 + 1) = v40;
  char v64 = 3;
  sub_251E62530();
  sub_251F36970();
  LOBYTE(v49) = v39;
  char v64 = 4;
  sub_251E62584();
  sub_251F36A20();
  uint64_t v49 = v38;
  char v64 = 5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4A40);
  sub_251E62878(&qword_269BA4A48, &qword_269BA4A40, (void (*)(void))sub_251E62488);
  sub_251F36A20();
  uint64_t v49 = v37;
  char v64 = 6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4A50);
  sub_251E62878(&qword_269BA4A58, &qword_269BA4A50, (void (*)(void))sub_251E624DC);
  sub_251F36A20();
  uint64_t v49 = v36;
  char v64 = 7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4A60);
  sub_251E62878(&qword_269BA4A68, &qword_269BA4A60, (void (*)(void))sub_251E62530);
  sub_251F36970();
  LOBYTE(v49) = 8;
  sub_251F369E0();
  LOBYTE(v49) = 9;
  sub_251F369E0();
  LOBYTE(v49) = 10;
  sub_251F369E0();
  uint64_t v49 = v19;
  uint64_t v50 = v20;
  long long v51 = v21;
  uint64_t v52 = v32;
  uint64_t v53 = v31;
  uint64_t v54 = v30;
  uint64_t v55 = v29;
  uint64_t v56 = v28;
  uint64_t v57 = v27;
  uint64_t v58 = v26;
  uint64_t v59 = v25;
  uint64_t v60 = v24;
  uint64_t v61 = v23;
  int v62 = v22;
  char v64 = 11;
  sub_251E625D8();
  sub_251F36970();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v11, v3);
}

uint64_t StaticRVCClusterGroup.hashValue.getter()
{
  sub_251F36CA0();
  StaticRVCClusterGroup.hash(into:)(v1);
  return sub_251F36D00();
}

uint64_t StaticRVCClusterGroup.init(from:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4A78);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  __int16 v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1[3];
  v137 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_251E62434();
  sub_251F36D90();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v137);
    return v72;
  }
  else
  {
    uint64_t v71 = v6;
    uint64_t v68 = a2;
    LOBYTE(v76) = 0;
    sub_251A9014C();
    sub_251F36880();
    uint64_t v10 = v90;
    int v11 = (unsigned __int16)v91;
    int v12 = BYTE2(v91);
    LOBYTE(v76) = 1;
    sub_251E6262C();
    sub_251F36880();
    int v65 = v12;
    uint64_t v66 = v10;
    int v67 = v11;
    int v13 = v90;
    LOBYTE(v76) = 2;
    sub_251E62680();
    sub_251F36880();
    int v63 = v13;
    uint64_t v14 = v91;
    uint64_t v64 = v90;
    uint64_t v15 = v92;
    uint64_t v16 = v93;
    LOBYTE(v76) = 3;
    sub_251E626D4();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_251F367D0();
    uint64_t v70 = v16;
    uint64_t v61 = v14;
    uint64_t v62 = v15;
    uint64_t v17 = v90;
    uint64_t v18 = v91;
    uint64_t v19 = v92;
    LOBYTE(v76) = 4;
    *((void *)&v69 + 1) = v93;
    sub_251A1AC64(v90, v91, v92);
    sub_251E62728();
    sub_251F36880();
    *(void *)&long long v69 = v19;
    uint64_t v75 = v18;
    uint64_t v20 = v17;
    int v21 = v90;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4A40);
    LOBYTE(v76) = 5;
    sub_251E62878(&qword_269BA4AA0, &qword_269BA4A40, (void (*)(void))sub_251E6262C);
    sub_251F36880();
    int v60 = v21;
    uint64_t v22 = v90;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4A50);
    LOBYTE(v76) = 6;
    sub_251E62878(&qword_269BA4AA8, &qword_269BA4A50, (void (*)(void))sub_251E62680);
    swift_bridgeObjectRetain();
    sub_251F36880();
    uint64_t v74 = v22;
    uint64_t v23 = v90;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4A60);
    LOBYTE(v76) = 7;
    sub_251E62878(&qword_269BA4AB0, &qword_269BA4A60, (void (*)(void))sub_251E626D4);
    swift_bridgeObjectRetain();
    sub_251F367D0();
    uint64_t v73 = v23;
    uint64_t v24 = v90;
    LOBYTE(v90) = 8;
    swift_bridgeObjectRetain();
    char v25 = sub_251F36840();
    uint64_t v72 = v24;
    LOBYTE(v21) = v25;
    uint64_t v26 = v64;
    LOBYTE(v24) = v63;
    LOBYTE(v90) = 9;
    int v59 = sub_251F36840();
    LOBYTE(v90) = 10;
    LODWORD(v58) = sub_251F36840();
    char v124 = 11;
    sub_251E6277C();
    sub_251F367D0();
    int v27 = v21 & 1;
    LOBYTE(v15) = v59 & 1;
    int v43 = v59 & 1;
    int v44 = v27;
    int v59 = v58 & 1;
    (*(void (**)(char *, uint64_t))(v71 + 8))(v8, v5);
    uint64_t v71 = v125;
    uint64_t v57 = *((void *)&v126 + 1);
    uint64_t v58 = v126;
    uint64_t v55 = *((void *)&v127 + 1);
    uint64_t v56 = v127;
    uint64_t v53 = *((void *)&v128 + 1);
    uint64_t v54 = v128;
    uint64_t v51 = *((void *)&v129 + 1);
    uint64_t v52 = v129;
    uint64_t v49 = *((void *)&v130 + 1);
    uint64_t v50 = v130;
    uint64_t v47 = *((void *)&v131 + 1);
    uint64_t v48 = v131;
    uint64_t v46 = v132;
    int v45 = v133;
    *(void *)&long long v76 = v66;
    WORD4(v76) = v67;
    BYTE10(v76) = v65;
    BYTE11(v76) = v24;
    *(void *)&long long v77 = v26;
    *((void *)&v77 + 1) = v61;
    *(void *)&long long v78 = v62;
    *((void *)&v78 + 1) = v70;
    uint64_t v28 = v75;
    *(void *)&long long v79 = v20;
    *((void *)&v79 + 1) = v75;
    long long v80 = v69;
    LOBYTE(v81) = v60;
    *((void *)&v81 + 1) = v74;
    *(void *)&long long v82 = v73;
    *((void *)&v82 + 1) = v72;
    LOBYTE(v83) = v27;
    BYTE1(v83) = v15;
    BYTE2(v83) = v59;
    *((void *)&v83 + 1) = v125;
    long long v84 = v126;
    long long v85 = v127;
    long long v86 = v128;
    long long v87 = v129;
    long long v88 = v130;
    v89[0] = v131;
    *(void *)&v89[1] = v132;
    DWORD2(v89[1]) = v133;
    sub_251A4DB38((uint64_t)&v76);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v29 = v28;
    long long v30 = v69;
    sub_251A4DE90(v20, v28, v69);
    uint64_t v31 = v70;
    swift_bridgeObjectRelease();
    uint64_t v32 = v62;
    swift_bridgeObjectRelease();
    long long v33 = v89[0];
    int v34 = v68;
    v68[12] = v88;
    v34[13] = v33;
    *(_OWORD *)((char *)v34 + 220) = *(_OWORD *)((char *)v89 + 12);
    long long v35 = v85;
    v34[8] = v84;
    v34[9] = v35;
    long long v36 = v87;
    v34[10] = v86;
    v34[11] = v36;
    long long v37 = v81;
    v34[4] = v80;
    v34[5] = v37;
    long long v38 = v83;
    v34[6] = v82;
    v34[7] = v38;
    long long v39 = v77;
    *int v34 = v76;
    v34[1] = v39;
    long long v40 = v79;
    void v34[2] = v78;
    v34[3] = v40;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v137);
    uint64_t v90 = v66;
    LOWORD(v91) = v67;
    BYTE2(v91) = v65;
    BYTE3(v91) = v63;
    uint64_t v92 = v64;
    uint64_t v93 = v61;
    uint64_t v94 = v32;
    uint64_t v95 = v31;
    uint64_t v96 = v20;
    uint64_t v97 = v29;
    long long v98 = v30;
    char v99 = v60;
    *(_DWORD *)uint64_t v100 = v136[0];
    *(_DWORD *)&v100[3] = *(_DWORD *)((char *)v136 + 3);
    uint64_t v101 = v74;
    uint64_t v102 = v73;
    uint64_t v103 = v72;
    char v104 = v44;
    char v105 = v43;
    char v106 = v59;
    int v107 = v134;
    char v108 = v135;
    uint64_t v109 = v71;
    uint64_t v110 = v58;
    uint64_t v111 = v57;
    uint64_t v112 = v56;
    uint64_t v113 = v55;
    uint64_t v114 = v54;
    uint64_t v115 = v53;
    uint64_t v116 = v52;
    uint64_t v117 = v51;
    uint64_t v118 = v50;
    uint64_t v119 = v49;
    uint64_t v120 = v48;
    uint64_t v121 = v47;
    uint64_t v122 = v46;
    int v123 = v45;
    return sub_251A81D30((uint64_t)&v90);
  }
}

uint64_t sub_251E5A99C()
{
  sub_251F36CA0();
  StaticRVCClusterGroup.hash(into:)(v1);
  return sub_251F36D00();
}

uint64_t sub_251E5A9E0()
{
  sub_251F36CA0();
  StaticRVCClusterGroup.hash(into:)(v1);
  return sub_251F36D00();
}

uint64_t sub_251E5AA20@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return StaticRVCClusterGroup.init(from:)(a1, a2);
}

uint64_t sub_251E5AA38(void *a1)
{
  return StaticRVCClusterGroup.encode(to:)(a1);
}

uint64_t StaticRVCClusterGroup.longStateStatusString.getter()
{
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v4 = *(void *)(v0 + 64);
  uint64_t v3 = *(void *)(v0 + 72);
  switch(*(unsigned char *)(v0 + 11))
  {
    case 1:
    case 6:
      uint64_t v5 = 0xD000000000000017;
      uint64_t v6 = "HFStatusVacuumStateIdle";
      goto LABEL_9;
    case 2:
      uint64_t v5 = 0xD000000000000019;
      uint64_t v6 = "HFStatusVacuumStatePaused";
      goto LABEL_9;
    case 3:
      uint64_t v5 = 0xD000000000000018;
      uint64_t v6 = "HFStatusVacuumStateError";
      goto LABEL_9;
    case 4:
      uint64_t v5 = 0xD000000000000020;
      uint64_t v6 = "HFStatusVacuumStateReturningLong";
      goto LABEL_9;
    case 5:
      __int16 v8 = "HFStatusVacuumStateCharging";
      goto LABEL_16;
    default:
      if (!v4) {
        goto LABEL_15;
      }
      sub_251A1AC64(*(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64));
      if (sub_251A81B84((uint64_t)&unk_270261DC0, v3))
      {
        sub_251A4DE90(v2, v1, v4);
        uint64_t v5 = 0xD000000000000024;
        uint64_t v6 = "HFStatusVacuumStateVacuuming+Mopping";
LABEL_9:
        unint64_t v7 = (unint64_t)(v6 - 32) | 0x8000000000000000;
        return static String.hfLocalized(_:)(v5, v7);
      }
      if (StaticRVCClusterGroup.CleanMode.isVacuum.getter())
      {
        sub_251A4DE90(v2, v1, v4);
        uint64_t v5 = 0xD00000000000001CLL;
        uint64_t v6 = "HFStatusVacuumStateVacuuming";
        goto LABEL_9;
      }
      BOOL v9 = StaticRVCClusterGroup.CleanMode.isMop.getter();
      sub_251A4DE90(v2, v1, v4);
      if (v9)
      {
        uint64_t v5 = 0xD00000000000001ALL;
        uint64_t v6 = "HFStatusVacuumStateMopping";
        goto LABEL_9;
      }
LABEL_15:
      __int16 v8 = "HFStatusVacuumStateCleaning";
LABEL_16:
      unint64_t v7 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      uint64_t v5 = 0xD00000000000001BLL;
      return static String.hfLocalized(_:)(v5, v7);
  }
}

uint64_t StaticRVCClusterGroup.shortStateStatusString.getter()
{
  switch(*(unsigned char *)(v0 + 11))
  {
    case 1:
    case 6:
      uint64_t v1 = 0xD000000000000017;
      uint64_t v2 = "HFStatusVacuumStateIdle";
      goto LABEL_9;
    case 2:
      uint64_t v1 = 0xD000000000000019;
      uint64_t v2 = "HFStatusVacuumStatePaused";
      goto LABEL_9;
    case 3:
      uint64_t v1 = 0xD000000000000018;
      uint64_t v2 = "HFStatusVacuumStateError";
      goto LABEL_9;
    case 4:
      uint64_t v1 = 0xD000000000000021;
      uint64_t v2 = "HFStatusVacuumStateReturningShort";
LABEL_9:
      unint64_t v4 = (unint64_t)(v2 - 32) | 0x8000000000000000;
      return static String.hfLocalized(_:)(v1, v4);
    case 5:
      uint64_t v3 = "HFStatusVacuumStateCharging";
      goto LABEL_7;
    default:
      uint64_t v3 = "HFStatusVacuumStateCleaning";
LABEL_7:
      unint64_t v4 = (unint64_t)(v3 - 32) | 0x8000000000000000;
      uint64_t v1 = 0xD00000000000001BLL;
      return static String.hfLocalized(_:)(v1, v4);
  }
}

uint64_t StaticRVCClusterGroup.errorStateString.getter()
{
  uint64_t result = *(unsigned __int8 *)(v0 + 80);
  if (*(char *)(v0 + 80) < 0)
  {
    switch(result & 0x7F)
    {
      case 1:
        uint64_t v2 = 0xD000000000000018;
        uint64_t v3 = "HFStatusVacuumErrorStuck";
        goto LABEL_17;
      case 2:
        unint64_t v4 = "HFStatusVacuumErrorDustBinMissing";
        goto LABEL_12;
      case 3:
        uint64_t v2 = 0xD00000000000001ELL;
        uint64_t v3 = "HFStatusVacuumErrorDustBinFull";
        goto LABEL_17;
      case 4:
        unint64_t v4 = "HFStatusVacuumErrorWaterTankEmpty";
LABEL_12:
        unint64_t v5 = (unint64_t)(v4 - 32) | 0x8000000000000000;
        uint64_t v2 = 0xD000000000000021;
        goto LABEL_18;
      case 5:
        uint64_t v2 = 0xD000000000000023;
        uint64_t v3 = "HFStatusVacuumErrorWaterTankMissing";
        goto LABEL_17;
      case 6:
        uint64_t v2 = 0xD000000000000023;
        uint64_t v3 = "HFStatusVacuumErrorWaterTankLidOpen";
        goto LABEL_17;
      case 7:
        uint64_t v2 = 0xD000000000000028;
        uint64_t v3 = "HFStatusVacuumErrorMopCleaningPadMissing";
        goto LABEL_17;
      case 8:
        uint64_t v2 = 0xD00000000000001DLL;
        uint64_t v3 = "HFStatusVacuumErrorBatteryLow";
        goto LABEL_17;
      default:
        uint64_t v2 = 0xD00000000000002BLL;
        uint64_t v3 = "HFStatusVacuumErrorFailedToFindChargingDock";
LABEL_17:
        unint64_t v5 = (unint64_t)(v3 - 32) | 0x8000000000000000;
LABEL_18:
        uint64_t result = static String.hfLocalized(_:)(v2, v5);
        break;
    }
  }
  else
  {
    switch(*(unsigned char *)(v0 + 80))
    {
      case 1:
        uint64_t v2 = 0xD00000000000002ELL;
        uint64_t v3 = "HFStatusCommonMatterErrorUnableToStartOrResume";
        goto LABEL_17;
      case 2:
        uint64_t v2 = 0xD000000000000032;
        uint64_t v3 = "HFStatusCommonMatterErrorUnableToCompleteOperation";
        goto LABEL_17;
      case 3:
        uint64_t v2 = 0xD00000000000002ELL;
        uint64_t v3 = "HFStatusCommonMatterErrorCommandInvalidInState";
        goto LABEL_17;
      default:
        return result;
    }
  }
  return result;
}

uint64_t StaticRVCClusterGroup.RunMode.id.getter()
{
  return *(void *)v0;
}

uint64_t StaticRVCClusterGroup.RunMode.label.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticRVCClusterGroup.RunMode.tags.getter()
{
  return swift_bridgeObjectRetain();
}

BOOL StaticRVCClusterGroup.RunMode.isCleaning.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  if (!*(void *)(v1 + 16)) {
    return 0;
  }
  sub_251F36CA0();
  sub_251F36CD0();
  sub_251F357B0();
  uint64_t v2 = sub_251F36D00();
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  unint64_t v4 = v2 & ~v3;
  if (((*(void *)(v1 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
    return 0;
  }
  uint64_t v5 = ~v3;
  do
  {
    int v6 = *(unsigned __int8 *)(*(void *)(v1 + 48) + v4);
    BOOL result = v6 == 65;
    if (v6 == 65) {
      break;
    }
    unint64_t v4 = (v4 + 1) & v5;
  }
  while (((*(void *)(v1 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  return result;
}

BOOL StaticRVCClusterGroup.RunMode.isMapping.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  if (!*(void *)(v1 + 16)) {
    return 0;
  }
  sub_251F36CA0();
  sub_251F36CD0();
  sub_251F357B0();
  uint64_t v2 = sub_251F36D00();
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  unint64_t v4 = v2 & ~v3;
  if (((*(void *)(v1 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
    return 0;
  }
  uint64_t v5 = ~v3;
  do
  {
    int v6 = *(unsigned __int8 *)(*(void *)(v1 + 48) + v4);
    BOOL result = v6 == 66;
    if (v6 == 66) {
      break;
    }
    unint64_t v4 = (v4 + 1) & v5;
  }
  while (((*(void *)(v1 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  return result;
}

uint64_t sub_251E5B0B8()
{
  uint64_t v1 = 0x6C6562616CLL;
  if (*v0 != 1) {
    uint64_t v1 = 1936154996;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 25705;
  }
}

uint64_t sub_251E5B0FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251E64FB4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251E5B124(uint64_t a1)
{
  unint64_t v2 = sub_251E627D0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E5B160(uint64_t a1)
{
  unint64_t v2 = sub_251E627D0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticRVCClusterGroup.RunMode.encode(to:)(void *a1)
{
  return sub_251E5B484(a1, &qword_269BA4AC0, (void (*)(void))sub_251E627D0);
}

uint64_t StaticRVCClusterGroup.RunMode.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_251E5B75C(a1, &qword_269BA4AE8, (void (*)(void))sub_251E627D0, a2);
}

uint64_t sub_251E5B228@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return StaticRVCClusterGroup.RunMode.init(from:)(a1, a2);
}

uint64_t sub_251E5B240(void *a1)
{
  return StaticRVCClusterGroup.RunMode.encode(to:)(a1);
}

uint64_t StaticRVCClusterGroup.CleanMode.id.getter()
{
  return *(void *)v0;
}

uint64_t StaticRVCClusterGroup.CleanMode.primaryTags.getter()
{
  return sub_251E5B278(sub_251E615D8);
}

uint64_t sub_251E5B278(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = swift_bridgeObjectRetain();
  return a1(v2);
}

uint64_t _s13HomeDataModel21StaticRVCClusterGroupV7RunModeV4hash4intoys6HasherVz_tF_0(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 24);
  sub_251F36CB0();
  swift_bridgeObjectRetain();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_251A54AB8(a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t _s13HomeDataModel21StaticRVCClusterGroupV7RunModeV2eeoiySbAE_AEtFZ_0(void *a1, void *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  uint64_t v2 = a1[3];
  uint64_t v3 = a2[3];
  BOOL v4 = a1[1] == a2[1] && a1[2] == a2[2];
  if (!v4 && (sub_251F36B10() & 1) == 0) {
    return 0;
  }
  return sub_251B056E8(v2, v3);
}

uint64_t sub_251E5B3D0(uint64_t a1)
{
  unint64_t v2 = sub_251E62938();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E5B40C(uint64_t a1)
{
  unint64_t v2 = sub_251E62938();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticRVCClusterGroup.CleanMode.encode(to:)(void *a1)
{
  return sub_251E5B484(a1, &qword_269BA4B00, (void (*)(void))sub_251E62938);
}

uint64_t sub_251E5B484(void *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t v14 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  __int16 v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = v3[1];
  v13[1] = v3[2];
  v13[2] = v9;
  v13[0] = v3[3];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v14();
  sub_251F36DA0();
  char v19 = 0;
  uint64_t v10 = v15;
  sub_251F36A10();
  if (!v10)
  {
    uint64_t v11 = v13[0];
    char v18 = 1;
    sub_251F369D0();
    uint64_t v16 = v11;
    char v17 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4AD0);
    sub_251E62878(&qword_269BA4AD8, &qword_269BA4AD0, (void (*)(void))sub_251E62824);
    sub_251F36A20();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t _s13HomeDataModel21StaticRVCClusterGroupV7RunModeV9hashValueSivg_0()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_251F36CA0();
  sub_251F36CB0();
  swift_bridgeObjectRetain();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_251A54AB8((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  return sub_251F36D00();
}

uint64_t StaticRVCClusterGroup.CleanMode.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_251E5B75C(a1, &qword_269BA4B10, (void (*)(void))sub_251E62938, a2);
}

uint64_t sub_251E5B75C@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, void (*a3)(void)@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v23 = a4;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v7 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  a3();
  sub_251F36D90();
  if (v4) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  uint64_t v10 = v7;
  char v28 = 0;
  int v12 = v23;
  uint64_t v11 = v24;
  uint64_t v13 = sub_251F36870();
  char v27 = 1;
  uint64_t v21 = sub_251F36830();
  uint64_t v15 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4AD0);
  char v26 = 2;
  sub_251E62878(&qword_269BA4AF0, &qword_269BA4AD0, (void (*)(void))sub_251E628E4);
  uint64_t v22 = v15;
  swift_bridgeObjectRetain();
  sub_251F36880();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v9, v11);
  uint64_t v16 = v25;
  uint64_t v17 = v21;
  uint64_t v18 = v22;
  *int v12 = v13;
  v12[1] = v17;
  v12[2] = v18;
  v12[3] = v16;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_251E5B9FC()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_251F36CA0();
  sub_251F36CB0();
  swift_bridgeObjectRetain();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_251A54AB8((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  return sub_251F36D00();
}

uint64_t sub_251E5BA90@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return StaticRVCClusterGroup.CleanMode.init(from:)(a1, a2);
}

uint64_t sub_251E5BAA8(void *a1)
{
  return StaticRVCClusterGroup.CleanMode.encode(to:)(a1);
}

uint64_t StaticRVCClusterGroup.State.hash(into:)()
{
  return sub_251F36CB0();
}

uint64_t sub_251E5BAEC(uint64_t a1)
{
  unint64_t v2 = sub_251E62A34();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E5BB28(uint64_t a1)
{
  unint64_t v2 = sub_251E62A34();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251E5BB64()
{
  uint64_t result = 0x676E696E6E7572;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x646570706F7473;
      break;
    case 2:
      uint64_t result = 0x646573756170;
      break;
    case 3:
      uint64_t result = 0x726F727265;
      break;
    case 4:
      uint64_t result = 0x43676E696B656573;
      break;
    case 5:
      uint64_t result = 0x676E696772616863;
      break;
    case 6:
      uint64_t result = 0x64656B636F64;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_251E5BC44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251E650DC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251E5BC6C(uint64_t a1)
{
  unint64_t v2 = sub_251E6298C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E5BCA8(uint64_t a1)
{
  unint64_t v2 = sub_251E6298C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251E5BCE4(uint64_t a1)
{
  unint64_t v2 = sub_251E629E0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E5BD20(uint64_t a1)
{
  unint64_t v2 = sub_251E629E0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251E5BD5C(uint64_t a1)
{
  unint64_t v2 = sub_251E62ADC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E5BD98(uint64_t a1)
{
  unint64_t v2 = sub_251E62ADC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251E5BDD4(uint64_t a1)
{
  unint64_t v2 = sub_251E62B30();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E5BE10(uint64_t a1)
{
  unint64_t v2 = sub_251E62B30();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251E5BE4C(uint64_t a1)
{
  unint64_t v2 = sub_251E62BD8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E5BE88(uint64_t a1)
{
  unint64_t v2 = sub_251E62BD8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251E5BEC4(uint64_t a1)
{
  unint64_t v2 = sub_251E62A88();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E5BF00(uint64_t a1)
{
  unint64_t v2 = sub_251E62A88();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251E5BF3C(uint64_t a1)
{
  unint64_t v2 = sub_251E62B84();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E5BF78(uint64_t a1)
{
  unint64_t v2 = sub_251E62B84();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticRVCClusterGroup.State.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4B18);
  uint64_t v46 = *(void *)(v3 - 8);
  uint64_t v47 = v3;
  MEMORY[0x270FA5388](v3);
  int v45 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4B20);
  uint64_t v43 = *(void *)(v5 - 8);
  uint64_t v44 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v42 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4B28);
  uint64_t v40 = *(void *)(v7 - 8);
  uint64_t v41 = v7;
  MEMORY[0x270FA5388](v7);
  long long v39 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4B30);
  uint64_t v37 = *(void *)(v9 - 8);
  uint64_t v38 = v9;
  MEMORY[0x270FA5388](v9);
  long long v36 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4B38);
  uint64_t v34 = *(void *)(v11 - 8);
  uint64_t v35 = v11;
  MEMORY[0x270FA5388](v11);
  long long v33 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4B40);
  uint64_t v31 = *(void *)(v13 - 8);
  uint64_t v32 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4B48);
  uint64_t v30 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4B50);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v48 = v19;
  uint64_t v49 = v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251E6298C();
  sub_251F36DA0();
  switch(v23)
  {
    case 1:
      char v51 = 1;
      sub_251E62B84();
      uint64_t v26 = v48;
      sub_251F36900();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v15, v32);
      goto LABEL_10;
    case 2:
      char v52 = 2;
      sub_251E62B30();
      char v27 = v33;
      uint64_t v26 = v48;
      sub_251F36900();
      uint64_t v29 = v34;
      uint64_t v28 = v35;
      goto LABEL_9;
    case 3:
      char v53 = 3;
      sub_251E62ADC();
      char v27 = v36;
      uint64_t v26 = v48;
      sub_251F36900();
      uint64_t v29 = v37;
      uint64_t v28 = v38;
      goto LABEL_9;
    case 4:
      char v54 = 4;
      sub_251E62A88();
      char v27 = v39;
      uint64_t v26 = v48;
      sub_251F36900();
      uint64_t v29 = v40;
      uint64_t v28 = v41;
      goto LABEL_9;
    case 5:
      char v55 = 5;
      sub_251E62A34();
      char v27 = v42;
      uint64_t v26 = v48;
      sub_251F36900();
      uint64_t v29 = v43;
      uint64_t v28 = v44;
      goto LABEL_9;
    case 6:
      char v56 = 6;
      sub_251E629E0();
      char v27 = v45;
      uint64_t v26 = v48;
      sub_251F36900();
      uint64_t v29 = v46;
      uint64_t v28 = v47;
LABEL_9:
      (*(void (**)(char *, uint64_t))(v29 + 8))(v27, v28);
LABEL_10:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v22, v26);
      break;
    default:
      char v50 = 0;
      sub_251E62BD8();
      uint64_t v24 = v48;
      sub_251F36900();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v18, v16);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v22, v24);
      break;
  }
  return result;
}

uint64_t StaticRVCClusterGroup.State.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t StaticRVCClusterGroup.State.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v64 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4B98);
  uint64_t v57 = *(void *)(v3 - 8);
  uint64_t v58 = v3;
  MEMORY[0x270FA5388](v3);
  int v60 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4BA0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v55 = v5;
  uint64_t v56 = v6;
  MEMORY[0x270FA5388](v5);
  int v63 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4BA8);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v53 = v8;
  uint64_t v54 = v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v62 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4BB0);
  uint64_t v51 = *(void *)(v11 - 8);
  uint64_t v52 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v61 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4BB8);
  uint64_t v49 = *(void *)(v13 - 8);
  uint64_t v50 = v13;
  MEMORY[0x270FA5388](v13);
  int v59 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4BC0);
  uint64_t v47 = *(void *)(v15 - 8);
  uint64_t v48 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4BC8);
  uint64_t v46 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4BD0);
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)&v42 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = a1[3];
  int v65 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v25);
  sub_251E6298C();
  uint64_t v26 = v66;
  sub_251F36D90();
  if (!v26)
  {
    uint64_t v44 = v20;
    uint64_t v43 = v18;
    int v45 = v17;
    uint64_t v28 = v61;
    char v27 = v62;
    uint64_t v29 = v63;
    uint64_t v30 = v64;
    uint64_t v66 = v22;
    uint64_t v31 = v24;
    uint64_t v32 = sub_251F368E0();
    if (*(void *)(v32 + 16) == 1)
    {
      char v33 = *(unsigned char *)(v32 + 32);
      switch(v33)
      {
        case 1:
          char v68 = 1;
          sub_251E62B84();
          char v27 = v45;
          sub_251F36770();
          uint64_t v40 = v47;
          uint64_t v39 = v48;
          goto LABEL_13;
        case 2:
          char v69 = 2;
          sub_251E62B30();
          char v27 = v59;
          sub_251F36770();
          uint64_t v40 = v49;
          uint64_t v39 = v50;
          goto LABEL_13;
        case 3:
          char v70 = 3;
          sub_251E62ADC();
          char v27 = v28;
          sub_251F36770();
          uint64_t v40 = v51;
          uint64_t v39 = v52;
          goto LABEL_13;
        case 4:
          char v71 = 4;
          sub_251E62A88();
          sub_251F36770();
          uint64_t v39 = v53;
          uint64_t v40 = v54;
          goto LABEL_13;
        case 5:
          char v72 = 5;
          sub_251E62A34();
          sub_251F36770();
          (*(void (**)(char *, uint64_t))(v56 + 8))(v29, v55);
          break;
        case 6:
          char v73 = 6;
          sub_251E629E0();
          char v27 = v60;
          sub_251F36770();
          uint64_t v40 = v57;
          uint64_t v39 = v58;
LABEL_13:
          (*(void (**)(char *, uint64_t))(v40 + 8))(v27, v39);
          break;
        default:
          char v67 = 0;
          sub_251E62BD8();
          uint64_t v34 = v44;
          sub_251F36770();
          (*(void (**)(char *, uint64_t))(v46 + 8))(v34, v43);
          break;
      }
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v66 + 8))(v31, v21);
      *uint64_t v30 = v33;
    }
    else
    {
      uint64_t v35 = sub_251F36490();
      swift_allocError();
      uint64_t v36 = v21;
      uint64_t v38 = v37;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D440);
      *uint64_t v38 = &type metadata for StaticRVCClusterGroup.State;
      sub_251F36780();
      sub_251F36480();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v35 - 8) + 104))(v38, *MEMORY[0x263F8DCB0], v35);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v66 + 8))(v24, v36);
    }
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)v65);
}

uint64_t sub_251E5CEE0@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return StaticRVCClusterGroup.State.init(from:)(a1, a2);
}

uint64_t sub_251E5CEF8(void *a1)
{
  return StaticRVCClusterGroup.State.encode(to:)(a1);
}

void sub_251E5CF10(void *a1@<X8>)
{
  *a1 = &unk_270264D78;
}

uint64_t StaticRVCClusterGroup.firstIdleRunningMode.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 96);
  uint64_t v3 = v2 + 56;
  uint64_t v4 = 1 << *(unsigned char *)(v2 + 32);
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(v2 + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain_n();
  int64_t v9 = 0;
  while (1)
  {
    do
    {
      if (v6)
      {
        unint64_t v10 = __clz(__rbit64(v6));
        v6 &= v6 - 1;
        unint64_t v11 = v10 | (v9 << 6);
      }
      else
      {
        int64_t v12 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
LABEL_36:
          __break(1u);
          return result;
        }
        if (v12 >= v7) {
          goto LABEL_34;
        }
        unint64_t v13 = *(void *)(v3 + 8 * v12);
        ++v9;
        if (!v13)
        {
          int64_t v9 = v12 + 1;
          if (v12 + 1 >= v7) {
            goto LABEL_34;
          }
          unint64_t v13 = *(void *)(v3 + 8 * v9);
          if (!v13)
          {
            int64_t v9 = v12 + 2;
            if (v12 + 2 >= v7) {
              goto LABEL_34;
            }
            unint64_t v13 = *(void *)(v3 + 8 * v9);
            if (!v13)
            {
              int64_t v9 = v12 + 3;
              if (v12 + 3 >= v7) {
                goto LABEL_34;
              }
              unint64_t v13 = *(void *)(v3 + 8 * v9);
              if (!v13)
              {
                int64_t v9 = v12 + 4;
                if (v12 + 4 >= v7) {
                  goto LABEL_34;
                }
                unint64_t v13 = *(void *)(v3 + 8 * v9);
                if (!v13)
                {
                  int64_t v14 = v12 + 5;
                  if (v14 >= v7)
                  {
LABEL_34:
                    swift_release();
                    uint64_t result = swift_bridgeObjectRelease();
                    *(_OWORD *)a1 = 0u;
                    *(_OWORD *)(a1 + 16) = 0u;
                    return result;
                  }
                  unint64_t v13 = *(void *)(v3 + 8 * v14);
                  if (!v13)
                  {
                    while (1)
                    {
                      int64_t v9 = v14 + 1;
                      if (__OFADD__(v14, 1)) {
                        goto LABEL_36;
                      }
                      if (v9 >= v7) {
                        goto LABEL_34;
                      }
                      unint64_t v13 = *(void *)(v3 + 8 * v9);
                      ++v14;
                      if (v13) {
                        goto LABEL_25;
                      }
                    }
                  }
                  int64_t v9 = v14;
                }
              }
            }
          }
        }
LABEL_25:
        unint64_t v6 = (v13 - 1) & v13;
        unint64_t v11 = __clz(__rbit64(v13)) + (v9 << 6);
      }
      uint64_t v15 = (uint64_t *)(*(void *)(v2 + 48) + 32 * v11);
      uint64_t v16 = v15[3];
    }
    while (!*(void *)(v16 + 16));
    uint64_t v18 = *v15;
    uint64_t v17 = v15[1];
    uint64_t v19 = v15[2];
    sub_251F36CA0();
    sub_251F36CD0();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    sub_251F357B0();
    uint64_t v20 = sub_251F36D00();
    uint64_t v21 = -1 << *(unsigned char *)(v16 + 32);
    unint64_t v22 = v20 & ~v21;
    if ((*(void *)(v16 + 56 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22)) {
      break;
    }
LABEL_5:
    swift_bridgeObjectRelease_n();
    uint64_t result = swift_bridgeObjectRelease_n();
  }
  uint64_t v23 = ~v21;
  while (*(unsigned char *)(*(void *)(v16 + 48) + v22) != 64)
  {
    unint64_t v22 = (v22 + 1) & v23;
    if (((*(void *)(v16 + 56 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) == 0) {
      goto LABEL_5;
    }
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v18;
  *(void *)(a1 + 8) = v17;
  *(void *)(a1 + 16) = v19;
  *(void *)(a1 + 24) = v16;
  return result;
}

uint64_t StaticRVCClusterGroup.firstCleaningRunningMode.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 96);
  uint64_t v3 = v2 + 56;
  uint64_t v4 = 1 << *(unsigned char *)(v2 + 32);
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(v2 + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain_n();
  int64_t v9 = 0;
  while (1)
  {
    do
    {
      if (v6)
      {
        unint64_t v10 = __clz(__rbit64(v6));
        v6 &= v6 - 1;
        unint64_t v11 = v10 | (v9 << 6);
      }
      else
      {
        int64_t v12 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
LABEL_36:
          __break(1u);
          return result;
        }
        if (v12 >= v7) {
          goto LABEL_34;
        }
        unint64_t v13 = *(void *)(v3 + 8 * v12);
        ++v9;
        if (!v13)
        {
          int64_t v9 = v12 + 1;
          if (v12 + 1 >= v7) {
            goto LABEL_34;
          }
          unint64_t v13 = *(void *)(v3 + 8 * v9);
          if (!v13)
          {
            int64_t v9 = v12 + 2;
            if (v12 + 2 >= v7) {
              goto LABEL_34;
            }
            unint64_t v13 = *(void *)(v3 + 8 * v9);
            if (!v13)
            {
              int64_t v9 = v12 + 3;
              if (v12 + 3 >= v7) {
                goto LABEL_34;
              }
              unint64_t v13 = *(void *)(v3 + 8 * v9);
              if (!v13)
              {
                int64_t v9 = v12 + 4;
                if (v12 + 4 >= v7) {
                  goto LABEL_34;
                }
                unint64_t v13 = *(void *)(v3 + 8 * v9);
                if (!v13)
                {
                  int64_t v14 = v12 + 5;
                  if (v14 >= v7)
                  {
LABEL_34:
                    swift_release();
                    uint64_t result = swift_bridgeObjectRelease();
                    *(_OWORD *)a1 = 0u;
                    *(_OWORD *)(a1 + 16) = 0u;
                    return result;
                  }
                  unint64_t v13 = *(void *)(v3 + 8 * v14);
                  if (!v13)
                  {
                    while (1)
                    {
                      int64_t v9 = v14 + 1;
                      if (__OFADD__(v14, 1)) {
                        goto LABEL_36;
                      }
                      if (v9 >= v7) {
                        goto LABEL_34;
                      }
                      unint64_t v13 = *(void *)(v3 + 8 * v9);
                      ++v14;
                      if (v13) {
                        goto LABEL_25;
                      }
                    }
                  }
                  int64_t v9 = v14;
                }
              }
            }
          }
        }
LABEL_25:
        unint64_t v6 = (v13 - 1) & v13;
        unint64_t v11 = __clz(__rbit64(v13)) + (v9 << 6);
      }
      uint64_t v15 = (uint64_t *)(*(void *)(v2 + 48) + 32 * v11);
      uint64_t v16 = v15[3];
    }
    while (!*(void *)(v16 + 16));
    uint64_t v18 = *v15;
    uint64_t v17 = v15[1];
    uint64_t v19 = v15[2];
    sub_251F36CA0();
    sub_251F36CD0();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    sub_251F357B0();
    uint64_t v20 = sub_251F36D00();
    uint64_t v21 = -1 << *(unsigned char *)(v16 + 32);
    unint64_t v22 = v20 & ~v21;
    if ((*(void *)(v16 + 56 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22)) {
      break;
    }
LABEL_5:
    swift_bridgeObjectRelease_n();
    uint64_t result = swift_bridgeObjectRelease_n();
  }
  uint64_t v23 = ~v21;
  while (*(unsigned char *)(*(void *)(v16 + 48) + v22) != 65)
  {
    unint64_t v22 = (v22 + 1) & v23;
    if (((*(void *)(v16 + 56 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) == 0) {
      goto LABEL_5;
    }
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v18;
  *(void *)(a1 + 8) = v17;
  *(void *)(a1 + 16) = v19;
  *(void *)(a1 + 24) = v16;
  return result;
}

void StaticRVCClusterGroup.firstVacuumCleaningMode.getter(_OWORD *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 104);
  if (v2)
  {
    uint64_t v3 = *(void *)(v2 + 16);
    if (v3)
    {
      uint64_t v15 = a1;
      swift_bridgeObjectRetain_n();
      uint64_t v4 = 0;
      while (1)
      {
        uint64_t v5 = (uint64_t *)(v2 + 32 + 32 * v4);
        uint64_t v6 = v5[3];
        if (*(void *)(v6 + 16))
        {
          uint64_t v8 = *v5;
          uint64_t v7 = v5[1];
          uint64_t v9 = v5[2];
          sub_251F36CA0();
          sub_251F36CD0();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          sub_251F357B0();
          uint64_t v10 = sub_251F36D00();
          uint64_t v11 = -1 << *(unsigned char *)(v6 + 32);
          unint64_t v12 = v10 & ~v11;
          if ((*(void *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
          {
            uint64_t v13 = ~v11;
            while ((*(unsigned char *)(*(void *)(v6 + 48) + v12) & 0xBF) != 0x81)
            {
              unint64_t v12 = (v12 + 1) & v13;
              if (((*(void *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
                goto LABEL_4;
              }
            }
            char v14 = sub_251A7FCB4((uint64_t)&unk_270264E38, v6);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v14)
            {
              swift_bridgeObjectRelease_n();
              void *v15 = v8;
              v15[1] = v7;
              v15[2] = v9;
              v15[3] = v6;
              return;
            }
          }
          else
          {
LABEL_4:
            swift_bridgeObjectRelease_n();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        if (++v4 == v3)
        {
          swift_bridgeObjectRelease_n();
          a1 = v15;
          break;
        }
      }
    }
  }
  *a1 = 0u;
  a1[1] = 0u;
}

void StaticRVCClusterGroup.firstMopCleaningMode.getter(_OWORD *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 104);
  if (v2)
  {
    uint64_t v3 = *(void *)(v2 + 16);
    if (v3)
    {
      uint64_t v15 = a1;
      swift_bridgeObjectRetain_n();
      uint64_t v4 = 0;
      while (1)
      {
        uint64_t v5 = (uint64_t *)(v2 + 32 + 32 * v4);
        uint64_t v6 = v5[3];
        if (*(void *)(v6 + 16))
        {
          uint64_t v8 = *v5;
          uint64_t v7 = v5[1];
          uint64_t v9 = v5[2];
          sub_251F36CA0();
          sub_251F36CD0();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          sub_251F357B0();
          uint64_t v10 = sub_251F36D00();
          uint64_t v11 = -1 << *(unsigned char *)(v6 + 32);
          unint64_t v12 = v10 & ~v11;
          if ((*(void *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
          {
            uint64_t v13 = ~v11;
            while ((*(unsigned char *)(*(void *)(v6 + 48) + v12) & 0xBF) != 0x82)
            {
              unint64_t v12 = (v12 + 1) & v13;
              if (((*(void *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
                goto LABEL_4;
              }
            }
            char v14 = sub_251A7FCB4((uint64_t)&unk_270264E60, v6);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v14)
            {
              swift_bridgeObjectRelease_n();
              void *v15 = v8;
              v15[1] = v7;
              v15[2] = v9;
              v15[3] = v6;
              return;
            }
          }
          else
          {
LABEL_4:
            swift_bridgeObjectRelease_n();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        if (++v4 == v3)
        {
          swift_bridgeObjectRelease_n();
          a1 = v15;
          break;
        }
      }
    }
  }
  *a1 = 0u;
  a1[1] = 0u;
}

void StaticRVCClusterGroup.firstVacuumAndMopCleaningMode.getter(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 104);
  if (v3 && (uint64_t v4 = *(void *)(v3 + 16)) != 0)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v5 = (uint64_t *)(v3 + 56);
    while (1)
    {
      uint64_t v6 = *(v5 - 1);
      uint64_t v7 = *v5;
      uint64_t v9 = *(v5 - 3);
      uint64_t v8 = *(v5 - 2);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      char v10 = sub_251A81B84((uint64_t)&unk_270264E88, v7);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v10) {
        break;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v5 += 4;
      if (!--v4)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease_n();
    *a1 = v9;
    a1[1] = v8;
    a1[2] = v6;
    a1[3] = v7;
  }
  else
  {
LABEL_7:
    *(_OWORD *)a1 = 0u;
    *((_OWORD *)a1 + 1) = 0u;
  }
}

uint64_t StaticRVCClusterGroup.runMode(with:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  int64_t v3 = 0;
  uint64_t v4 = *(void *)(v2 + 96);
  uint64_t v5 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  uint64_t v7 = v4 + 56;
  unint64_t v8 = v6 & *(void *)(v4 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  do
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v3 << 6);
    }
    else
    {
      int64_t v13 = v3 + 1;
      if (__OFADD__(v3, 1))
      {
        __break(1u);
LABEL_30:
        __break(1u);
        return result;
      }
      if (v13 >= v9) {
        goto LABEL_28;
      }
      unint64_t v14 = *(void *)(v7 + 8 * v13);
      ++v3;
      if (!v14)
      {
        int64_t v3 = v13 + 1;
        if (v13 + 1 >= v9) {
          goto LABEL_28;
        }
        unint64_t v14 = *(void *)(v7 + 8 * v3);
        if (!v14)
        {
          int64_t v3 = v13 + 2;
          if (v13 + 2 >= v9) {
            goto LABEL_28;
          }
          unint64_t v14 = *(void *)(v7 + 8 * v3);
          if (!v14)
          {
            int64_t v3 = v13 + 3;
            if (v13 + 3 >= v9) {
              goto LABEL_28;
            }
            unint64_t v14 = *(void *)(v7 + 8 * v3);
            if (!v14)
            {
              int64_t v3 = v13 + 4;
              if (v13 + 4 >= v9) {
                goto LABEL_28;
              }
              unint64_t v14 = *(void *)(v7 + 8 * v3);
              if (!v14)
              {
                int64_t v15 = v13 + 5;
                if (v15 >= v9)
                {
LABEL_28:
                  *(_OWORD *)a2 = 0u;
                  *(_OWORD *)(a2 + 16) = 0u;
                  return result;
                }
                unint64_t v14 = *(void *)(v7 + 8 * v15);
                if (!v14)
                {
                  while (1)
                  {
                    int64_t v3 = v15 + 1;
                    if (__OFADD__(v15, 1)) {
                      goto LABEL_30;
                    }
                    if (v3 >= v9) {
                      goto LABEL_28;
                    }
                    unint64_t v14 = *(void *)(v7 + 8 * v3);
                    ++v15;
                    if (v14) {
                      goto LABEL_24;
                    }
                  }
                }
                int64_t v3 = v15;
              }
            }
          }
        }
      }
LABEL_24:
      unint64_t v8 = (v14 - 1) & v14;
      unint64_t v11 = __clz(__rbit64(v14)) + (v3 << 6);
    }
    uint64_t v12 = *(void *)(v4 + 48);
  }
  while (*(void *)(v12 + 32 * v11) != result);
  uint64_t v16 = (void *)(v12 + 32 * v11);
  uint64_t v17 = v16[2];
  uint64_t v18 = v16[3];
  uint64_t v19 = v16[1];
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v19;
  *(void *)(a2 + 16) = v17;
  *(void *)(a2 + 24) = v18;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t StaticRVCClusterGroup.cleanMode(with:)@<X0>(uint64_t result@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *(void *)(v2 + 104);
  if (v3 && (uint64_t v4 = *(void *)(v3 + 16)) != 0)
  {
    uint64_t v5 = (uint64_t *)(v3 + 56);
    while (*(v5 - 3) != result)
    {
      v5 += 4;
      if (!--v4) {
        goto LABEL_6;
      }
    }
    uint64_t v7 = *(v5 - 2);
    uint64_t v6 = *(v5 - 1);
    uint64_t v8 = *v5;
    *a2 = result;
    a2[1] = v7;
    a2[2] = v6;
    a2[3] = v8;
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  else
  {
LABEL_6:
    *(_OWORD *)a2 = 0u;
    *((_OWORD *)a2 + 1) = 0u;
  }
  return result;
}

uint64_t sub_251E5DAE8()
{
  uint64_t result = sub_251C09EC8((uint64_t)&unk_27025FB78);
  qword_269BA49D8 = result;
  return result;
}

uint64_t sub_251E5DB10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void **)a1;
  __int16 v4 = *(_WORD *)(a1 + 8);
  LOBYTE(v5) = *(unsigned char *)(a1 + 10);
  uint64_t v51 = *(void *)a1;
  __int16 v52 = v4;
  char v53 = v5;
  (*(void (**)(void *__return_ptr, uint64_t *, void, uint64_t))(a3 + 48))(v55, &v51, 0, a2);
  sub_251AA82A4((uint64_t)v55, (uint64_t)&v51);
  if (!v54)
  {
    sub_251A9090C((uint64_t)&v51);
LABEL_31:
    if (qword_26B21ECD0 == -1)
    {
LABEL_32:
      uint64_t v30 = sub_251F350A0();
      __swift_project_value_buffer(v30, (uint64_t)qword_26B21ECB8);
      sub_251AA82A4((uint64_t)v55, (uint64_t)&v51);
      uint64_t v31 = sub_251F35080();
      os_log_type_t v32 = sub_251F35FB0();
      if (os_log_type_enabled(v31, v32))
      {
        uint64_t v33 = swift_slowAlloc();
        uint64_t v34 = swift_slowAlloc();
        uint64_t v50 = v34;
        *(_DWORD *)uint64_t v33 = 136315394;
        sub_251AA82A4((uint64_t)&v51, (uint64_t)&v47);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E190);
        uint64_t v35 = sub_251F35790();
        unint64_t v47 = sub_251A00E84(v35, v36, &v50);
        sub_251F361D0();
        swift_bridgeObjectRelease();
        sub_251A9090C((uint64_t)&v51);
        *(_WORD *)(v33 + 12) = 2080;
        unint64_t v47 = (unint64_t)v3;
        __int16 v48 = v4;
        char v49 = v5;
        uint64_t v37 = ClusterPath.description.getter();
        unint64_t v47 = sub_251A00E84(v37, v38, &v50);
        sub_251F361D0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_2519F3000, v31, v32, "Couldn't create MTRRVCRunModeClusterModeOptionStruct from value '%s' path:'%s'", (uint8_t *)v33, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x2533AC760](v34, -1, -1);
        MEMORY[0x2533AC760](v33, -1, -1);
      }
      else
      {

        sub_251A9090C((uint64_t)&v51);
      }
      sub_251A9090C((uint64_t)v55);
      return 0;
    }
LABEL_37:
    swift_once();
    goto LABEL_32;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4D18);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_31;
  }
  if (v47 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v6 = sub_251F366C0();
    swift_bridgeObjectRelease();
    unint64_t v41 = v47;
    if (v6)
    {
LABEL_5:
      uint64_t v7 = 0;
      uint64_t v3 = (void *)MEMORY[0x263F8EE78];
      uint64_t v42 = v6;
      while (1)
      {
        id v8 = (v41 & 0xC000000000000001) != 0
           ? (id)MEMORY[0x2533AB3A0](v7, v41)
           : *(id *)(v41 + 32 + 8 * v7);
        int64_t v9 = v8;
        if (__OFADD__(v7++, 1)) {
          break;
        }
        uint64_t v46 = v3;
        id v11 = objc_msgSend(v8, sel_mode);
        id v45 = objc_msgSend(v11, sel_unsignedIntegerValue);

        id v12 = objc_msgSend(v9, sel_label);
        uint64_t v13 = sub_251F356F0();
        uint64_t v43 = v14;
        uint64_t v44 = v13;

        id v15 = objc_msgSend(v9, sel_modeTags);
        uint64_t v16 = sub_251F35AC0();

        uint64_t v17 = *(void *)(v16 + 16);
        if (v17)
        {
          uint64_t v18 = v16 + 32;
          swift_bridgeObjectRetain();
          uint64_t v19 = (char *)MEMORY[0x263F8EE78];
          do
          {
            sub_251A0D51C(v18, (uint64_t)&v51);
            sub_251E60BE0((uint64_t)&v51, &v47);
            __swift_destroy_boxed_opaque_existential_0((uint64_t)&v51);
            char v20 = v47;
            if (v47 <= 0xEFu)
            {
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v19 = sub_251F0F754(0, *((void *)v19 + 2) + 1, 1, v19);
              }
              unint64_t v22 = *((void *)v19 + 2);
              unint64_t v21 = *((void *)v19 + 3);
              unint64_t v5 = v22 + 1;
              if (v22 >= v21 >> 1) {
                uint64_t v19 = sub_251F0F754((char *)(v21 > 1), v22 + 1, 1, v19);
              }
              *((void *)v19 + 2) = v5;
              v19[v22 + 32] = v20;
            }
            v18 += 32;
            --v17;
          }
          while (v17);
          swift_bridgeObjectRelease_n();
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v19 = (char *)MEMORY[0x263F8EE78];
        }
        sub_251C94828();
        uint64_t v51 = sub_251F35E60();
        uint64_t v23 = *((void *)v19 + 2);
        if (v23)
        {
          uint64_t v24 = (unsigned __int8 *)(v19 + 32);
          do
          {
            unsigned int v25 = *v24++;
            sub_251A6331C(&v47, v25);
            --v23;
          }
          while (v23);
        }

        swift_bridgeObjectRelease();
        uint64_t v26 = v51;
        uint64_t v3 = v46;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v3 = sub_251F0F740(0, v46[2] + 1, 1, v46);
        }
        __int16 v4 = (__int16)v45;
        unint64_t v28 = v3[2];
        unint64_t v27 = v3[3];
        if (v28 >= v27 >> 1) {
          uint64_t v3 = sub_251F0F740((void *)(v27 > 1), v28 + 1, 1, v3);
        }
        v3[2] = v28 + 1;
        uint64_t v29 = &v3[4 * v28];
        v29[4] = v45;
        v29[5] = v44;
        v29[6] = v43;
        void v29[7] = v26;
        if (v7 == v42) {
          goto LABEL_40;
        }
      }
      __break(1u);
      goto LABEL_37;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    unint64_t v41 = v47;
    if (v6) {
      goto LABEL_5;
    }
  }
  uint64_t v3 = (void *)MEMORY[0x263F8EE78];
LABEL_40:
  swift_bridgeObjectRelease_n();
  uint64_t v39 = sub_251EE0980((uint64_t)v3);
  swift_bridgeObjectRelease();
  sub_251A9090C((uint64_t)v55);
  return v39;
}

void *sub_251E5E104(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void **)a1;
  __int16 v4 = *(_WORD *)(a1 + 8);
  LOBYTE(v5) = *(unsigned char *)(a1 + 10);
  uint64_t v50 = *(void *)a1;
  __int16 v51 = v4;
  char v52 = v5;
  (*(void (**)(void *__return_ptr, uint64_t *, void, uint64_t))(a3 + 48))(v54, &v50, 0, a2);
  sub_251AA82A4((uint64_t)v54, (uint64_t)&v50);
  if (!v53)
  {
    sub_251A9090C((uint64_t)&v50);
LABEL_31:
    if (qword_26B21ECD0 == -1)
    {
LABEL_32:
      uint64_t v30 = sub_251F350A0();
      __swift_project_value_buffer(v30, (uint64_t)qword_26B21ECB8);
      sub_251AA82A4((uint64_t)v54, (uint64_t)&v50);
      uint64_t v31 = sub_251F35080();
      os_log_type_t v32 = sub_251F35FB0();
      if (os_log_type_enabled(v31, v32))
      {
        uint64_t v33 = swift_slowAlloc();
        uint64_t v34 = swift_slowAlloc();
        uint64_t v49 = v34;
        *(_DWORD *)uint64_t v33 = 136315394;
        sub_251AA82A4((uint64_t)&v50, (uint64_t)&v46);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E190);
        uint64_t v35 = sub_251F35790();
        unint64_t v46 = sub_251A00E84(v35, v36, &v49);
        sub_251F361D0();
        swift_bridgeObjectRelease();
        sub_251A9090C((uint64_t)&v50);
        *(_WORD *)(v33 + 12) = 2080;
        unint64_t v46 = (unint64_t)v3;
        __int16 v47 = v4;
        char v48 = v5;
        uint64_t v37 = ClusterPath.description.getter();
        unint64_t v46 = sub_251A00E84(v37, v38, &v49);
        sub_251F361D0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_2519F3000, v31, v32, "Couldn't create MTRRVCCleanModeClusterModeOptionStruct from value (%s) path:'%s'", (uint8_t *)v33, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x2533AC760](v34, -1, -1);
        MEMORY[0x2533AC760](v33, -1, -1);
      }
      else
      {

        sub_251A9090C((uint64_t)&v50);
      }
      sub_251A9090C((uint64_t)v54);
      return 0;
    }
LABEL_37:
    swift_once();
    goto LABEL_32;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4CF0);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_31;
  }
  if (v46 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v6 = sub_251F366C0();
    swift_bridgeObjectRelease();
    unint64_t v40 = v46;
    if (v6)
    {
LABEL_5:
      uint64_t v7 = 0;
      uint64_t v3 = (void *)MEMORY[0x263F8EE78];
      uint64_t v41 = v6;
      while (1)
      {
        id v8 = (v40 & 0xC000000000000001) != 0
           ? (id)MEMORY[0x2533AB3A0](v7, v40)
           : *(id *)(v40 + 32 + 8 * v7);
        int64_t v9 = v8;
        if (__OFADD__(v7++, 1)) {
          break;
        }
        id v45 = v3;
        id v11 = objc_msgSend(v8, sel_mode);
        id v44 = objc_msgSend(v11, sel_unsignedIntegerValue);

        id v12 = objc_msgSend(v9, sel_label);
        uint64_t v13 = sub_251F356F0();
        uint64_t v42 = v14;
        uint64_t v43 = v13;

        id v15 = objc_msgSend(v9, sel_modeTags);
        uint64_t v16 = sub_251F35AC0();

        uint64_t v17 = *(void *)(v16 + 16);
        if (v17)
        {
          uint64_t v18 = v16 + 32;
          swift_bridgeObjectRetain();
          uint64_t v19 = (char *)MEMORY[0x263F8EE78];
          do
          {
            sub_251A0D51C(v18, (uint64_t)&v50);
            sub_251E60FD4((uint64_t)&v50, &v46);
            __swift_destroy_boxed_opaque_existential_0((uint64_t)&v50);
            char v20 = v46;
            if (v46 <= 0xEFu)
            {
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v19 = sub_251F0F754(0, *((void *)v19 + 2) + 1, 1, v19);
              }
              unint64_t v22 = *((void *)v19 + 2);
              unint64_t v21 = *((void *)v19 + 3);
              unint64_t v5 = v22 + 1;
              if (v22 >= v21 >> 1) {
                uint64_t v19 = sub_251F0F754((char *)(v21 > 1), v22 + 1, 1, v19);
              }
              *((void *)v19 + 2) = v5;
              v19[v22 + 32] = v20;
            }
            v18 += 32;
            --v17;
          }
          while (v17);
          swift_bridgeObjectRelease_n();
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v19 = (char *)MEMORY[0x263F8EE78];
        }
        sub_251C94828();
        uint64_t v50 = sub_251F35E60();
        uint64_t v23 = *((void *)v19 + 2);
        if (v23)
        {
          uint64_t v24 = (unsigned __int8 *)(v19 + 32);
          do
          {
            unsigned int v25 = *v24++;
            sub_251A6331C(&v46, v25);
            --v23;
          }
          while (v23);
        }

        swift_bridgeObjectRelease();
        uint64_t v26 = v50;
        uint64_t v3 = v45;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v3 = sub_251F0F760(0, v45[2] + 1, 1, v45);
        }
        __int16 v4 = (__int16)v44;
        unint64_t v28 = v3[2];
        unint64_t v27 = v3[3];
        if (v28 >= v27 >> 1) {
          uint64_t v3 = sub_251F0F760((void *)(v27 > 1), v28 + 1, 1, v3);
        }
        v3[2] = v28 + 1;
        uint64_t v29 = &v3[4 * v28];
        v29[4] = v44;
        v29[5] = v43;
        v29[6] = v42;
        void v29[7] = v26;
        if (v7 == v41) {
          goto LABEL_40;
        }
      }
      __break(1u);
      goto LABEL_37;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    unint64_t v40 = v46;
    if (v6) {
      goto LABEL_5;
    }
  }
  uint64_t v3 = (void *)MEMORY[0x263F8EE78];
LABEL_40:
  swift_bridgeObjectRelease();
  sub_251A9090C((uint64_t)v54);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_251E5E6EC(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  unint64_t v5 = *(void **)a1;
  __int16 v6 = *(_WORD *)(a1 + 8);
  char v7 = *(unsigned char *)(a1 + 10);
  uint64_t v24 = *(void **)a1;
  __int16 v25 = v6;
  char v26 = v7;
  (*(void (**)(void *__return_ptr, void **, uint64_t, uint64_t))(a3 + 48))(v28, &v24, 1, a2);
  sub_251AA82A4((uint64_t)v28, (uint64_t)&v24);
  if (v27)
  {
    sub_251A1A568(0, (unint64_t *)&qword_269BA04A0);
    if (swift_dynamicCast())
    {
      unsigned int v8 = objc_msgSend(v20, sel_unsignedShortValue);

      sub_251A9090C((uint64_t)v28);
      int v9 = 0;
      return v8 | (v9 << 16);
    }
  }
  else
  {
    sub_251A9090C((uint64_t)&v24);
  }
  if (qword_26B21ECD0 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_251F350A0();
  __swift_project_value_buffer(v10, (uint64_t)qword_26B21ECB8);
  sub_251AA82A4((uint64_t)v28, (uint64_t)&v24);
  id v11 = sub_251F35080();
  os_log_type_t v12 = sub_251F35FB0();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    v23[0] = v14;
    *(_DWORD *)uint64_t v13 = 136315394;
    sub_251AA82A4((uint64_t)&v24, (uint64_t)&v20);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E190);
    uint64_t v15 = sub_251F35790();
    id v20 = (id)sub_251A00E84(v15, v16, v23);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    sub_251A9090C((uint64_t)&v24);
    *(_WORD *)(v13 + 12) = 2080;
    id v20 = v5;
    __int16 v21 = v6;
    char v22 = v7;
    uint64_t v17 = ClusterPath.description.getter();
    id v20 = (id)sub_251A00E84(v17, v18, v23);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2519F3000, v11, v12, a4, (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v14, -1, -1);
    MEMORY[0x2533AC760](v13, -1, -1);
  }
  else
  {

    sub_251A9090C((uint64_t)&v24);
  }
  sub_251A9090C((uint64_t)v28);
  unsigned int v8 = 0;
  int v9 = 1;
  return v8 | (v9 << 16);
}

uint64_t sub_251E5E9D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3 = *(void *)a1;
  __int16 v4 = *(_WORD *)(a1 + 8);
  char v5 = *(unsigned char *)(a1 + 10);
  unint64_t v29 = *(void *)a1;
  __int16 v30 = v4;
  char v31 = v5;
  (*(void (**)(void *__return_ptr, unint64_t *, uint64_t, uint64_t))(a3 + 48))(v33, &v29, 3, a2);
  sub_251AA82A4((uint64_t)v33, (uint64_t)&v29);
  if (!v32)
  {
    sub_251A9090C((uint64_t)&v29);
    goto LABEL_18;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4D08);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_18:
    if (qword_26B21ECD0 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_251F350A0();
    __swift_project_value_buffer(v15, (uint64_t)qword_26B21ECB8);
    sub_251AA82A4((uint64_t)v33, (uint64_t)&v29);
    unint64_t v16 = sub_251F35080();
    os_log_type_t v17 = sub_251F35FB0();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      uint64_t v28 = v19;
      *(_DWORD *)uint64_t v18 = 136315394;
      sub_251AA82A4((uint64_t)&v29, (uint64_t)&v25);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E190);
      uint64_t v20 = sub_251F35790();
      unint64_t v25 = sub_251A00E84(v20, v21, &v28);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      sub_251A9090C((uint64_t)&v29);
      *(_WORD *)(v18 + 12) = 2080;
      unint64_t v25 = v3;
      __int16 v26 = v4;
      char v27 = v5;
      uint64_t v22 = ClusterPath.description.getter();
      unint64_t v25 = sub_251A00E84(v22, v23, &v28);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2519F3000, v16, v17, "Couldn't create MTRRVCOperationalStateClusterOperationalStateStruct from value '%s' path:'%s'", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v19, -1, -1);
      MEMORY[0x2533AC760](v18, -1, -1);
    }
    else
    {

      sub_251A9090C((uint64_t)&v29);
    }
    sub_251A9090C((uint64_t)v33);
    return 0;
  }
  unint64_t v6 = v25;
  if (!(v25 >> 62))
  {
    uint64_t v7 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v7) {
      goto LABEL_5;
    }
LABEL_25:
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
LABEL_26:
    swift_bridgeObjectRelease_n();
    uint64_t v24 = sub_251EE0A3C((uint64_t)v10);
    swift_bridgeObjectRelease();
    sub_251A9090C((uint64_t)v33);
    return v24;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_251F366C0();
  uint64_t v7 = result;
  if (!result) {
    goto LABEL_25;
  }
LABEL_5:
  if (v7 >= 1)
  {
    uint64_t v9 = 0;
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
    do
    {
      if ((v6 & 0xC000000000000001) != 0) {
        id v11 = (id)MEMORY[0x2533AB3A0](v9, v6);
      }
      else {
        id v11 = *(id *)(v6 + 8 * v9 + 32);
      }
      LOBYTE(v25) = v5;
      sub_251E609A4(v11, (char *)&v25, (char *)&v29);
      char v12 = v29;
      if (v29 <= 0xFBu)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v10 = sub_251F0F890(0, *((void *)v10 + 2) + 1, 1, v10);
        }
        unint64_t v14 = *((void *)v10 + 2);
        unint64_t v13 = *((void *)v10 + 3);
        if (v14 >= v13 >> 1) {
          uint64_t v10 = sub_251F0F890((char *)(v13 > 1), v14 + 1, 1, v10);
        }
        *((void *)v10 + 2) = v14 + 1;
        v10[v14 + 32] = v12;
      }
      ++v9;
    }
    while (v7 != v9);
    goto LABEL_26;
  }
  __break(1u);
  return result;
}

uint64_t sub_251E5EDBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X8>)
{
  char v5 = *(void **)a1;
  __int16 v6 = *(_WORD *)(a1 + 8);
  char v7 = *(unsigned char *)(a1 + 10);
  unint64_t v23 = *(void **)a1;
  __int16 v24 = v6;
  char v25 = v7;
  (*(void (**)(void *__return_ptr, void **, uint64_t, uint64_t))(a3 + 48))(v27, &v23, 4, a2);
  sub_251AA82A4((uint64_t)v27, (uint64_t)&v23);
  if (v26)
  {
    sub_251A1A568(0, (unint64_t *)&qword_269BA04A0);
    if (swift_dynamicCast())
    {
      id v8 = objc_msgSend(v19, sel_unsignedCharValue);

      sub_251A9090C((uint64_t)v27);
      LOBYTE(v23) = v7;
      return StaticRVCClusterGroup.OperationalState.init(rawValue:for:)((uint64_t)v8, &v23, a4);
    }
  }
  else
  {
    sub_251A9090C((uint64_t)&v23);
  }
  if (qword_26B21ECD0 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_251F350A0();
  __swift_project_value_buffer(v10, (uint64_t)qword_26B21ECB8);
  sub_251AA82A4((uint64_t)v27, (uint64_t)&v23);
  id v11 = sub_251F35080();
  os_log_type_t v12 = sub_251F35FB0();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v22 = v14;
    *(_DWORD *)uint64_t v13 = 136315394;
    sub_251AA82A4((uint64_t)&v23, (uint64_t)&v19);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E190);
    uint64_t v15 = sub_251F35790();
    id v19 = (id)sub_251A00E84(v15, v16, &v22);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    sub_251A9090C((uint64_t)&v23);
    *(_WORD *)(v13 + 12) = 2080;
    id v19 = v5;
    __int16 v20 = v6;
    char v21 = v7;
    uint64_t v17 = ClusterPath.description.getter();
    id v19 = (id)sub_251A00E84(v17, v18, &v22);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2519F3000, v11, v12, "Couldn't get value for operationalState: (%s path:'%s'", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v14, -1, -1);
    MEMORY[0x2533AC760](v13, -1, -1);
  }
  else
  {

    sub_251A9090C((uint64_t)&v23);
  }
  uint64_t result = sub_251A9090C((uint64_t)v27);
  *a4 = -4;
  return result;
}

uint64_t sub_251E5F0B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X8>)
{
  id v5 = *(id *)a1;
  __int16 v6 = *(_WORD *)(a1 + 8);
  char v7 = *(unsigned char *)(a1 + 10);
  id v21 = *(id *)a1;
  __int16 v22 = v6;
  char v23 = v7;
  (*(void (**)(long long *__return_ptr, id *, uint64_t, uint64_t))(a3 + 48))(&v25, &v21, 5, a2);
  if (v26)
  {
    sub_251A0D578(&v25, v27);
    sub_251A0D51C((uint64_t)v27, (uint64_t)&v25);
    sub_251A1A568(0, &qword_269BA4D00);
    if (swift_dynamicCast())
    {
      id v8 = v21;
      id v9 = objc_msgSend(v21, sel_errorStateID);
      id v10 = objc_msgSend(v9, sel_unsignedCharValue);

      __swift_destroy_boxed_opaque_existential_0((uint64_t)v27);
      LOBYTE(v25) = v7;
      return StaticRVCClusterGroup.ErrorState.init(rawValue:for:)((uint64_t)v10, &v25, a4);
    }
    if (qword_26B21ECD0 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_251F350A0();
    __swift_project_value_buffer(v12, (uint64_t)qword_26B21ECB8);
    sub_251A0D51C((uint64_t)v27, (uint64_t)&v25);
    uint64_t v13 = sub_251F35080();
    os_log_type_t v14 = sub_251F35FB0();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      uint64_t v24 = v16;
      *(_DWORD *)uint64_t v15 = 136315394;
      sub_251A0D51C((uint64_t)&v25, (uint64_t)&v21);
      uint64_t v17 = sub_251F35790();
      id v21 = (id)sub_251A00E84(v17, v18, &v24);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v25);
      *(_WORD *)(v15 + 12) = 2080;
      id v21 = v5;
      __int16 v22 = v6;
      char v23 = v7;
      uint64_t v19 = ClusterPath.description.getter();
      id v21 = (id)sub_251A00E84(v19, v20, &v24);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2519F3000, v13, v14, "Couldn't get value for operationalStateError: (%s path:'%s'", (uint8_t *)v15, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v16, -1, -1);
      MEMORY[0x2533AC760](v15, -1, -1);
    }
    else
    {

      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v25);
    }
    uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v27);
  }
  else
  {
    uint64_t result = sub_251A9090C((uint64_t)&v25);
  }
  *a4 = -16;
  return result;
}

uint64_t sub_251E5F3C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[18] = a3;
  v4[19] = a4;
  v4[16] = a1;
  v4[17] = a2;
  return MEMORY[0x270FA2498](sub_251E5F3E4, 0, 0);
}

uint64_t sub_251E5F3E4()
{
  uint64_t v1 = v0[18];
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA5550);
    uint64_t v1 = sub_251F35AA0();
  }
  v0[20] = v1;
  uint64_t v2 = v0[19];
  unint64_t v3 = (void *)v0[17];
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_251E5F51C;
  uint64_t v4 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_251E5F62C;
  v0[13] = &block_descriptor_58;
  v0[14] = v4;
  objc_msgSend(v3, sel_resumeWithExpectedValues_expectedValueInterval_completion_, v1, v2, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_251E5F51C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 168) = v1;
  if (v1) {
    uint64_t v2 = sub_251E654B4;
  }
  else {
    uint64_t v2 = sub_251E654D0;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_251E5F630(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[18] = a3;
  v4[19] = a4;
  v4[16] = a1;
  v4[17] = a2;
  return MEMORY[0x270FA2498](sub_251E5F654, 0, 0);
}

uint64_t sub_251E5F654()
{
  uint64_t v1 = v0[18];
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA5550);
    uint64_t v1 = sub_251F35AA0();
  }
  v0[20] = v1;
  uint64_t v2 = v0[19];
  unint64_t v3 = (void *)v0[17];
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_251E5F51C;
  uint64_t v4 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_251E5F62C;
  v0[13] = &block_descriptor_62;
  v0[14] = v4;
  objc_msgSend(v3, sel_pauseWithExpectedValues_expectedValueInterval_completion_, v1, v2, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_251E5F78C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[18] = a3;
  v4[19] = a4;
  v4[16] = a1;
  v4[17] = a2;
  return MEMORY[0x270FA2498](sub_251E5F7B0, 0, 0);
}

uint64_t sub_251E5F7B0()
{
  uint64_t v1 = v0[18];
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA5550);
    uint64_t v1 = sub_251F35AA0();
  }
  v0[20] = v1;
  uint64_t v2 = v0[19];
  unint64_t v3 = (void *)v0[17];
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_251E5F8E8;
  uint64_t v4 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_251E5F62C;
  v0[13] = &block_descriptor_60;
  v0[14] = v4;
  objc_msgSend(v3, sel_goHomeWithExpectedValues_expectedValueInterval_completion_, v1, v2, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_251E5F8E8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 168) = v1;
  if (v1) {
    uint64_t v2 = sub_251A8E960;
  }
  else {
    uint64_t v2 = sub_251E5F9F8;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_251E5F9F8()
{
  uint64_t v1 = (void *)v0[20];
  uint64_t v3 = v0[15];
  uint64_t v2 = (void *)v0[16];
  v2[3] = sub_251A1A568(0, &qword_269B9DDE8);
  *uint64_t v2 = v3;

  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t StaticRVCClusterGroup.changeToRunMode(containing:)(unsigned char *a1)
{
  *(unsigned char *)(v2 + 255) = *a1;
  long long v3 = v1[13];
  *(_OWORD *)(v2 + 208) = v1[12];
  *(_OWORD *)(v2 + 224) = v3;
  *(_OWORD *)(v2 + 236) = *(_OWORD *)((char *)v1 + 220);
  long long v4 = v1[9];
  *(_OWORD *)(v2 + 144) = v1[8];
  *(_OWORD *)(v2 + 160) = v4;
  long long v5 = v1[11];
  *(_OWORD *)(v2 + 176) = v1[10];
  *(_OWORD *)(v2 + 192) = v5;
  long long v6 = v1[5];
  *(_OWORD *)(v2 + 80) = v1[4];
  *(_OWORD *)(v2 + 96) = v6;
  long long v7 = v1[7];
  *(_OWORD *)(v2 + 112) = v1[6];
  *(_OWORD *)(v2 + 128) = v7;
  long long v8 = v1[1];
  *(_OWORD *)(v2 + 16) = *v1;
  *(_OWORD *)(v2 + 32) = v8;
  long long v9 = v1[3];
  *(_OWORD *)(v2 + 48) = v1[2];
  *(_OWORD *)(v2 + 64) = v9;
  return MEMORY[0x270FA2498](sub_251E5FAEC, 0, 0);
}

uint64_t sub_251E5FAEC()
{
  uint64_t v45 = v0;
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = v1 + 56;
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(v1 + 56);
  int64_t v42 = (unint64_t)(63 - v3) >> 6;
  int v6 = *(unsigned __int8 *)(v0 + 255) | 0x4000;
  uint64_t result = swift_bridgeObjectRetain_n();
  int64_t v8 = 0;
  while (v5)
  {
    unint64_t v9 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    unint64_t v10 = v9 | (v8 << 6);
LABEL_26:
    os_log_type_t v14 = (uint64_t *)(*(void *)(v1 + 48) + 32 * v10);
    uint64_t v15 = v14[3];
    if (*(void *)(v15 + 16))
    {
      uint64_t v16 = *v14;
      sub_251F36CA0();
      sub_251F36CD0();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_251F357B0();
      uint64_t v17 = sub_251F36D00();
      uint64_t v18 = -1 << *(unsigned char *)(v15 + 32);
      unint64_t v19 = v17 & ~v18;
      if ((*(void *)(v15 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19))
      {
        uint64_t v20 = ~v18;
        while (1)
        {
          char v21 = *(unsigned char *)(*(void *)(v15 + 48) + v19);
          if ((v21 & 0xC0) == 0x40 && (v21 & 0x3F | 0x4000) == v6) {
            break;
          }
          unint64_t v19 = (v19 + 1) & v20;
          if (((*(void *)(v15 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
            goto LABEL_5;
          }
        }
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        id v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F10F88]), sel_init);
        *(void *)(v0 + 352) = v23;
        uint64_t v24 = (void *)sub_251F361C0();
        objc_msgSend(v23, sel_setNewMode_, v24);

        __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D1D8);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_251F38650;
        *(_DWORD *)(inited + 32) = 1;
        *(void *)(inited + 40) = v16;
        *(unsigned char *)(inited + 48) = 2;
        unint64_t v26 = sub_251A19C30(inited);
        swift_setDeallocating();
        __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CE50);
        swift_arrayDestroy();
        uint64_t v27 = *(void *)(v0 + 16);
        *(void *)(v0 + 360) = v27;
        __int16 v28 = *(_WORD *)(v0 + 24);
        *(_WORD *)(v0 + 252) = v28;
        *(unsigned char *)(v0 + 323) = *(unsigned char *)(v0 + 26);
        LOBYTE(v44[0]) = 24;
        sub_251AA4920(v26);
        *(void *)(v0 + 368) = v29;
        swift_bridgeObjectRelease();
        sub_251A4DB38(v0 + 16);
        sub_251A1A568(0, &qword_269BA4BD8);
        *(void *)(v0 + 312) = v27;
        *(_WORD *)(v0 + 320) = v28;
        *(unsigned char *)(v0 + 322) = 24;
        __int16 v30 = (void *)swift_task_alloc();
        *(void *)(v0 + 376) = v30;
        *__int16 v30 = v0;
        v30[1] = sub_251E601B0;
        return sub_251C4E0D4((uint64_t *)(v0 + 312));
      }
LABEL_5:
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
    }
  }
  int64_t v11 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_46;
  }
  if (v11 >= v42) {
    goto LABEL_38;
  }
  unint64_t v12 = *(void *)(v2 + 8 * v11);
  ++v8;
  if (v12) {
    goto LABEL_25;
  }
  int64_t v8 = v11 + 1;
  if (v11 + 1 >= v42) {
    goto LABEL_38;
  }
  unint64_t v12 = *(void *)(v2 + 8 * v8);
  if (v12) {
    goto LABEL_25;
  }
  int64_t v8 = v11 + 2;
  if (v11 + 2 >= v42) {
    goto LABEL_38;
  }
  unint64_t v12 = *(void *)(v2 + 8 * v8);
  if (v12) {
    goto LABEL_25;
  }
  int64_t v8 = v11 + 3;
  if (v11 + 3 >= v42) {
    goto LABEL_38;
  }
  unint64_t v12 = *(void *)(v2 + 8 * v8);
  if (v12) {
    goto LABEL_25;
  }
  int64_t v8 = v11 + 4;
  if (v11 + 4 >= v42) {
    goto LABEL_38;
  }
  unint64_t v12 = *(void *)(v2 + 8 * v8);
  if (v12) {
    goto LABEL_25;
  }
  int64_t v13 = v11 + 5;
  if (v13 >= v42)
  {
LABEL_38:
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v2 = v0 + 16;
    if (qword_26B21ECD0 == -1)
    {
LABEL_39:
      uint64_t v31 = sub_251F350A0();
      __swift_project_value_buffer(v31, (uint64_t)qword_26B21ECB8);
      sub_251A4DB38(v2);
      sub_251A4DB38(v2);
      uint64_t v32 = sub_251F35080();
      os_log_type_t v33 = sub_251F35FB0();
      if (os_log_type_enabled(v32, v33))
      {
        char v34 = *(unsigned char *)(v0 + 255);
        uint64_t v35 = swift_slowAlloc();
        uint64_t v43 = swift_slowAlloc();
        v44[0] = v43;
        *(_DWORD *)uint64_t v35 = 136315650;
        *(void *)(v0 + 328) = sub_251A00E84(0xD00000000000001CLL, 0x8000000251F728A0, v44);
        sub_251F361D0();
        *(_WORD *)(v35 + 12) = 2080;
        *(unsigned char *)(v0 + 254) = v34;
        uint64_t v36 = sub_251F35790();
        *(void *)(v0 + 336) = sub_251A00E84(v36, v37, v44);
        sub_251F361D0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v35 + 22) = 2080;
        sub_251E62C2C();
        swift_bridgeObjectRetain();
        uint64_t v38 = sub_251F35E50();
        unint64_t v40 = v39;
        swift_bridgeObjectRelease();
        *(void *)(v0 + 344) = sub_251A00E84(v38, v40, v44);
        sub_251F361D0();
        swift_bridgeObjectRelease();
        sub_251A81D30(v2);
        sub_251A81D30(v2);
        _os_log_impl(&dword_2519F3000, v32, v33, "%s Couldn't find a run mode that contained the specified tag: %s allRunningModes: %s'", (uint8_t *)v35, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x2533AC760](v43, -1, -1);
        MEMORY[0x2533AC760](v35, -1, -1);
      }
      else
      {
        sub_251A81D30(v2);
        sub_251A81D30(v2);
      }

      uint64_t v41 = *(uint64_t (**)(void))(v0 + 8);
      return v41();
    }
LABEL_46:
    swift_once();
    goto LABEL_39;
  }
  unint64_t v12 = *(void *)(v2 + 8 * v13);
  if (v12)
  {
    int64_t v8 = v13;
LABEL_25:
    unint64_t v5 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v8 << 6);
    goto LABEL_26;
  }
  while (1)
  {
    int64_t v8 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v8 >= v42) {
      goto LABEL_38;
    }
    unint64_t v12 = *(void *)(v2 + 8 * v8);
    ++v13;
    if (v12) {
      goto LABEL_25;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_251E601B0(uint64_t a1)
{
  uint64_t v2 = *(void *)v1 + 16;
  *(void *)(*(void *)v1 + 384) = a1;
  swift_task_dealloc();
  sub_251A81D30(v2);
  return MEMORY[0x270FA2498](sub_251E602BC, 0, 0);
}

uint64_t sub_251E602BC()
{
  uint64_t v1 = *(void *)(v0 + 368);
  id v2 = *(id *)(v0 + 352);
  ClusterPath.description.getter();
  sub_251F35800();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 392) = 0x8000000251F68280;
  long long v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_269B9D6A8
                                                                                             + dword_269B9D6A8);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 400) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_251E603FC;
  uint64_t v4 = *(void *)(v0 + 384);
  uint64_t v5 = *(void *)(v0 + 352);
  return v7(0x6F5465676E616863, 0xEC00000065646F4DLL, v4, v1, 0xD000000000000016, 0x8000000251F68280, v5);
}

uint64_t sub_251E603FC()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 384);
  id v2 = *(void **)(*(void *)v0 + 352);
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA2498](sub_251E60568, 0, 0);
}

uint64_t sub_251E60568()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251E605C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[19] = a4;
  v5[20] = a5;
  v5[17] = a2;
  v5[18] = a3;
  v5[16] = a1;
  return MEMORY[0x270FA2498](sub_251E605F0, 0, 0);
}

uint64_t sub_251E605F0()
{
  uint64_t v1 = v0[18];
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA5550);
    uint64_t v1 = sub_251F35AA0();
  }
  v0[21] = v1;
  uint64_t v3 = v0[19];
  uint64_t v2 = v0[20];
  uint64_t v4 = (void *)v0[17];
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_251E60734;
  uint64_t v5 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_251E5F62C;
  v0[13] = &block_descriptor_18;
  v0[14] = v5;
  objc_msgSend(v4, sel_changeToModeWithParams_expectedValues_expectedValueInterval_completion_, v2, v1, v3, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_251E60734()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 176) = v1;
  if (v1) {
    uint64_t v2 = sub_251A5F6C4;
  }
  else {
    uint64_t v2 = sub_251E60844;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_251E60844()
{
  uint64_t v1 = (void *)v0[21];
  uint64_t v3 = v0[15];
  uint64_t v2 = (void *)v0[16];
  v2[3] = sub_251A1A568(0, &qword_269B9DE78);
  *uint64_t v2 = v3;

  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

unint64_t StaticRVCClusterGroup.errorStateIcon.getter()
{
  uint64_t v1 = *(char *)(v0 + 80);
  if ((v1 & 0x8000000000000000) == 0) {
    return qword_251F5B758[v1];
  }
  unint64_t result = 0x74616D616C637865;
  switch(v1 & 0x7F)
  {
    case 4:
    case 5:
    case 6:
      unint64_t result = 0x662E746F67697073;
      break;
    case 8:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

void sub_251E609A4(void *a1@<X0>, char *a2@<X1>, char *a3@<X8>)
{
  char v5 = *a2;
  id v6 = objc_msgSend(a1, sel_operationalStateID);
  id v7 = objc_msgSend(v6, sel_unsignedCharValue);

  LOBYTE(v17) = v5;
  StaticRVCClusterGroup.OperationalState.init(rawValue:for:)((uint64_t)v7, &v17, &v18);
  char v8 = v18;
  if (v18 < 0xFCu)
  {
  }
  else
  {
    if (qword_26B21ECD0 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_251F350A0();
    __swift_project_value_buffer(v9, (uint64_t)qword_26B21ECB8);
    id v10 = a1;
    int64_t v11 = sub_251F35080();
    os_log_type_t v12 = sub_251F35FB0();
    if (os_log_type_enabled(v11, v12))
    {
      int64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      uint64_t v17 = (uint64_t)v10;
      uint64_t v18 = v14;
      *(_DWORD *)int64_t v13 = 136315138;
      sub_251A1A568(0, &qword_269BA4D10);
      id v10 = v10;
      uint64_t v15 = sub_251F35790();
      uint64_t v17 = sub_251A00E84(v15, v16, &v18);
      sub_251F361D0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2519F3000, v11, v12, "Couldn't create OperationalState from value '%s'", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v14, -1, -1);
      MEMORY[0x2533AC760](v13, -1, -1);
    }
    else
    {
    }
    char v8 = -4;
  }
  *a3 = v8;
}

void sub_251E60BE0(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  sub_251A0D51C(a1, (uint64_t)v21);
  sub_251A1A568(0, &qword_269BA4D20);
  if (swift_dynamicCast())
  {
    id v4 = objc_msgSend(v20[0], sel_value);
    LOWORD(v21[0]) = 0;
    BYTE2(v21[0]) = 1;
    sub_251F36D50();

    if (BYTE2(v21[0]) != 1)
    {
      uint64_t v18 = LOWORD(v21[0]);

      LOBYTE(v21[0]) = 24;
      ModeClusterSemanticTag.init(rawValue:for:)(v18, (unsigned __int8 *)v21, a2);
      return;
    }
    if (qword_26B21ECD0 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_251F350A0();
    __swift_project_value_buffer(v5, (uint64_t)qword_26B21ECB8);
    id v6 = v20[0];
    id v7 = sub_251F35080();
    os_log_type_t v8 = sub_251F35FB0();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      unint64_t v19 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 138412290;
      v21[0] = v6;
      id v10 = a2;
      int64_t v11 = v6;
      sub_251F361D0();
      *unint64_t v19 = v6;

      a2 = v10;
      _os_log_impl(&dword_2519F3000, v7, v8, "Couldn't get run mode tag value from modeTag: '%@'", v9, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v19, -1, -1);
      MEMORY[0x2533AC760](v9, -1, -1);
    }
    else
    {

      id v7 = v6;
    }
  }
  else
  {
    if (qword_26B21ECD0 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_251F350A0();
    __swift_project_value_buffer(v12, (uint64_t)qword_26B21ECB8);
    sub_251A0D51C(a1, (uint64_t)v21);
    id v7 = sub_251F35080();
    os_log_type_t v13 = sub_251F35FB0();
    if (os_log_type_enabled(v7, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      uint64_t v22 = v15;
      *(_DWORD *)uint64_t v14 = 136315138;
      sub_251A0D51C((uint64_t)v21, (uint64_t)v20);
      uint64_t v16 = sub_251F35790();
      v20[0] = (id)sub_251A00E84(v16, v17, &v22);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v21);
      _os_log_impl(&dword_2519F3000, v7, v13, "Couldn't create MTRRVCRunModeClusterModeTagStruct from value '%s'", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v15, -1, -1);
      MEMORY[0x2533AC760](v14, -1, -1);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v21);
    }
  }

  *a2 = -16;
}

void sub_251E60FD4(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  sub_251A0D51C(a1, (uint64_t)v21);
  sub_251A1A568(0, &qword_269BA4CF8);
  if (swift_dynamicCast())
  {
    id v4 = objc_msgSend(v20[0], sel_value);
    LOWORD(v21[0]) = 0;
    BYTE2(v21[0]) = 1;
    sub_251F36D50();

    if (BYTE2(v21[0]) != 1)
    {
      uint64_t v18 = LOWORD(v21[0]);

      LOBYTE(v21[0]) = 25;
      ModeClusterSemanticTag.init(rawValue:for:)(v18, (unsigned __int8 *)v21, a2);
      return;
    }
    if (qword_26B21ECD0 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_251F350A0();
    __swift_project_value_buffer(v5, (uint64_t)qword_26B21ECB8);
    id v6 = v20[0];
    id v7 = sub_251F35080();
    os_log_type_t v8 = sub_251F35FB0();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      unint64_t v19 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 138412290;
      v21[0] = v6;
      id v10 = a2;
      int64_t v11 = v6;
      sub_251F361D0();
      *unint64_t v19 = v6;

      a2 = v10;
      _os_log_impl(&dword_2519F3000, v7, v8, "Couldn't get clean mode tag value from modeTag: '%@'", v9, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v19, -1, -1);
      MEMORY[0x2533AC760](v9, -1, -1);
    }
    else
    {

      id v7 = v6;
    }
  }
  else
  {
    if (qword_26B21ECD0 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_251F350A0();
    __swift_project_value_buffer(v12, (uint64_t)qword_26B21ECB8);
    sub_251A0D51C(a1, (uint64_t)v21);
    id v7 = sub_251F35080();
    os_log_type_t v13 = sub_251F35FB0();
    if (os_log_type_enabled(v7, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      uint64_t v22 = v15;
      *(_DWORD *)uint64_t v14 = 136315138;
      sub_251A0D51C((uint64_t)v21, (uint64_t)v20);
      uint64_t v16 = sub_251F35790();
      v20[0] = (id)sub_251A00E84(v16, v17, &v22);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v21);
      _os_log_impl(&dword_2519F3000, v7, v13, "Couldn't create MTRRVCCleanModeClusterModeTagStruct from value '%s'", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v15, -1, -1);
      MEMORY[0x2533AC760](v14, -1, -1);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v21);
    }
  }

  *a2 = -16;
}

uint64_t ServiceArea.copyApplying(selectedAreaIDs:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *v2;
  uint64_t v6 = v2[3];
  uint64_t v24 = v2[4];
  uint64_t v7 = v2[5];
  uint64_t v8 = v2[6];
  uint64_t v9 = v2[7];
  uint64_t v28 = v2[8];
  uint64_t v33 = v2[9];
  uint64_t v34 = v2[1];
  uint64_t v32 = v2[10];
  char v31 = *((unsigned char *)v2 + 88);
  char v26 = *((unsigned char *)v2 + 96);
  int v27 = *((_DWORD *)v2 + 23);
  uint64_t v30 = v2[13];
  char v25 = *((unsigned char *)v2 + 112);
  char v29 = *((unsigned char *)v2 + 113);
  char v10 = *((unsigned char *)v2 + 114);
  swift_bridgeObjectRetain();
  uint64_t v11 = swift_bridgeObjectRetain();
  uint64_t v12 = sub_251E62C80(v11, a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*(void *)(v12 + 16) || (*(unsigned char *)(v12 + 40) & 1) != 0)
  {
    uint64_t v13 = v8;
    uint64_t v14 = v9;
    uint64_t v15 = v28;
    uint64_t v16 = v24;
LABEL_4:
    swift_bridgeObjectRetain();
    char v18 = v26;
    int v17 = v27;
    char v19 = v25;
    uint64_t v20 = v34;
    goto LABEL_15;
  }
  uint64_t v20 = v34;
  if (v34)
  {
    uint64_t v21 = *(void *)(v34 + 16);
    uint64_t v13 = v8;
    if (v21)
    {
      uint64_t v6 = *(unsigned int *)(v12 + 36);
      uint64_t v22 = (void *)(v34 + 48);
      uint64_t v14 = v9;
      uint64_t v15 = v28;
      while (*((_DWORD *)v22 - 4) != v6)
      {
        v22 += 3;
        if (!--v21)
        {
          uint64_t v6 = 0;
          uint64_t v16 = 0;
          uint64_t v7 = 0;
          goto LABEL_14;
        }
      }
      uint64_t v16 = *(v22 - 1);
      uint64_t v7 = *v22;
      goto LABEL_4;
    }
    uint64_t v6 = 0;
    uint64_t v16 = 0;
    uint64_t v7 = 0;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v16 = 0;
    uint64_t v7 = 0;
    uint64_t v13 = v8;
  }
  uint64_t v14 = v9;
  uint64_t v15 = v28;
LABEL_14:
  char v18 = v26;
  int v17 = v27;
  char v19 = v25;
LABEL_15:
  *(void *)a2 = v5;
  *(void *)(a2 + 8) = v20;
  *(void *)(a2 + 16) = v12;
  *(void *)(a2 + 24) = v6;
  *(void *)(a2 + 32) = v16;
  *(void *)(a2 + 40) = v7;
  *(void *)(a2 + 48) = v13;
  *(void *)(a2 + 56) = v14;
  *(void *)(a2 + 64) = v15;
  *(void *)(a2 + 72) = v33;
  *(void *)(a2 + 80) = v32;
  *(unsigned char *)(a2 + 88) = v31;
  *(_DWORD *)(a2 + 92) = v17;
  *(unsigned char *)(a2 + 96) = v18;
  *(void *)(a2 + 104) = v30;
  *(unsigned char *)(a2 + 112) = v19;
  *(unsigned char *)(a2 + 113) = v29;
  *(unsigned char *)(a2 + 114) = v10;
  *(unsigned char *)(a2 + 115) = 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_251A1AD5C(v13, v14, v15, v33);
  return swift_bridgeObjectRetain();
}

uint64_t sub_251E615D8(uint64_t isStackAllocationSafe)
{
  uint64_t v2 = isStackAllocationSafe;
  v9[1] = *MEMORY[0x263EF8340];
  char v3 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v4 = (unint64_t)((1 << v3) + 63) >> 6;
  size_t v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    bzero((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    uint64_t v6 = sub_251E6173C((uint64_t)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v4, v2);
    swift_release();
    if (v1) {
      swift_willThrow();
    }
  }
  else
  {
    uint64_t v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    uint64_t v6 = sub_251E6173C((uint64_t)v7, v4, v2);
    swift_release();
    MEMORY[0x2533AC760](v7, -1, -1);
  }
  return v6;
}

uint64_t sub_251E6173C(uint64_t result, uint64_t a2, uint64_t a3)
{
  size_t v5 = (unint64_t *)result;
  uint64_t v6 = 0;
  int64_t v7 = 0;
  uint64_t v8 = a3 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(a3 + 56);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v7 << 6);
      goto LABEL_17;
    }
    BOOL v15 = __OFADD__(v7++, 1);
    if (v15)
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v7 >= v12) {
      goto LABEL_26;
    }
    unint64_t v16 = *(void *)(v8 + 8 * v7);
    if (!v16) {
      break;
    }
LABEL_16:
    unint64_t v18 = __clz(__rbit64(v16));
    unint64_t v11 = (v16 - 1) & v16;
    unint64_t v14 = v18 + (v7 << 6);
LABEL_17:
    int v19 = *(char *)(*(void *)(a3 + 48) + v14);
    if (v19 < 0 && (v19 & 0x3Fu) - 1 <= 1)
    {
      *(void *)(result + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      BOOL v15 = __OFADD__(v6++, 1);
      if (v15) {
        goto LABEL_29;
      }
    }
  }
  int64_t v17 = v7 + 1;
  if (v7 + 1 >= v12) {
    goto LABEL_26;
  }
  unint64_t v16 = *(void *)(v8 + 8 * v17);
  if (v16) {
    goto LABEL_15;
  }
  int64_t v17 = v7 + 2;
  if (v7 + 2 >= v12) {
    goto LABEL_26;
  }
  unint64_t v16 = *(void *)(v8 + 8 * v17);
  if (v16) {
    goto LABEL_15;
  }
  int64_t v17 = v7 + 3;
  if (v7 + 3 >= v12)
  {
LABEL_26:
    swift_retain();
    return sub_251F1B808(v5, a2, v6, a3);
  }
  unint64_t v16 = *(void *)(v8 + 8 * v17);
  if (v16)
  {
LABEL_15:
    int64_t v7 = v17;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v7 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v7 >= v12) {
      goto LABEL_26;
    }
    unint64_t v16 = *(void *)(v8 + 8 * v7);
    ++v17;
    if (v16) {
      goto LABEL_16;
    }
  }
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

BOOL _s13HomeDataModel21StaticRVCClusterGroupV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  BOOL result = 0;
  if (*(void *)a1 != *(void *)a2) {
    return result;
  }
  if (*(unsigned __int16 *)(a1 + 8) != *(unsigned __int16 *)(a2 + 8)) {
    return result;
  }
  BOOL result = 0;
  if (dword_251F5B798[*(char *)(a1 + 10)] != dword_251F5B798[*(char *)(a2 + 10)]
    || *(unsigned __int8 *)(a1 + 11) != *(unsigned __int8 *)(a2 + 11)
    || *(void *)(a1 + 16) != *(void *)(a2 + 16))
  {
    return result;
  }
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v85 = *(void *)(a1 + 48);
  uint64_t v86 = *(void *)(a1 + 56);
  uint64_t v6 = *(void *)(a1 + 72);
  int v83 = *(char *)(a1 + 80);
  uint64_t v81 = *(void *)(a1 + 88);
  uint64_t v79 = *(void *)(a1 + 96);
  uint64_t v77 = *(void *)(a1 + 104);
  int v72 = *(unsigned __int8 *)(a1 + 112);
  int v70 = *(unsigned __int8 *)(a1 + 113);
  int v66 = *(unsigned __int8 *)(a1 + 114);
  uint64_t v59 = *(void *)(a1 + 120);
  uint64_t v60 = *(void *)(a1 + 128);
  uint64_t v61 = *(void *)(a1 + 136);
  uint64_t v62 = *(void *)(a1 + 144);
  uint64_t v63 = *(void *)(a1 + 152);
  uint64_t v64 = *(void *)(a1 + 160);
  uint64_t v7 = *(void *)(a1 + 176);
  uint64_t v55 = *(void *)(a1 + 168);
  uint64_t v57 = *(void *)(a1 + 192);
  uint64_t v58 = *(void *)(a1 + 184);
  uint64_t v73 = *(void *)(a1 + 208);
  uint64_t v74 = *(void *)(a1 + 200);
  uint64_t v68 = *(void *)(a1 + 216);
  int v67 = *(_DWORD *)(a1 + 232);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  uint64_t v10 = *(void *)(a2 + 64);
  uint64_t v84 = *(void *)(a2 + 72);
  int v82 = *(char *)(a2 + 80);
  uint64_t v80 = *(void *)(a2 + 88);
  uint64_t v78 = *(void *)(a2 + 96);
  uint64_t v75 = *(void *)(a1 + 224);
  uint64_t v76 = *(void *)(a2 + 104);
  int v71 = *(unsigned __int8 *)(a2 + 112);
  int v69 = *(unsigned __int8 *)(a2 + 113);
  int v65 = *(unsigned __int8 *)(a2 + 114);
  uint64_t v56 = *(void *)(a2 + 120);
  uint64_t v47 = *(void *)(a2 + 128);
  uint64_t v48 = *(void *)(a2 + 136);
  uint64_t v49 = *(void *)(a2 + 144);
  uint64_t v50 = *(void *)(a2 + 152);
  uint64_t v51 = *(void *)(a2 + 160);
  uint64_t v53 = *(void *)(a2 + 168);
  uint64_t v54 = *(void *)(a2 + 176);
  uint64_t v42 = *(void *)(a2 + 200);
  uint64_t v43 = *(void *)(a2 + 192);
  uint64_t v41 = *(void *)(a2 + 208);
  uint64_t v44 = *(void *)(a2 + 216);
  uint64_t v45 = *(void *)(a2 + 184);
  uint64_t v46 = *(void *)(a2 + 224);
  int v52 = *(_DWORD *)(a2 + 232);
  if (*(void *)(a1 + 24) != *(void *)(a2 + 24) || *(void *)(a1 + 32) != *(void *)(a2 + 32))
  {
    char v12 = sub_251F36B10();
    BOOL result = 0;
    if ((v12 & 1) == 0) {
      return result;
    }
  }
  uint64_t v40 = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v13 = sub_251B056E8(v4, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v13 & 1) == 0) {
    return 0;
  }
  if (!v5)
  {
    if (!v10) {
      goto LABEL_19;
    }
    goto LABEL_24;
  }
  if (!v10)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_24:
    sub_251A1AC64(v9, v11, v10);
    sub_251A4DE90(v85, v86, v5);
    uint64_t v17 = v9;
    uint64_t v18 = v11;
    uint64_t v19 = v10;
    goto LABEL_25;
  }
  if (v85 != v9 || (v86 != v11 || v5 != v10) && (sub_251F36B10() & 1) == 0)
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v17 = v85;
    uint64_t v18 = v86;
    uint64_t v19 = v5;
LABEL_25:
    sub_251A4DE90(v17, v18, v19);
    return 0;
  }
  sub_251A1AC64(v85, v86, v5);
  sub_251A1AC64(v85, v86, v5);
  sub_251A1AC64(v85, v11, v10);
  char v14 = sub_251B056E8(v6, v84);
  sub_251A4DE90(v85, v11, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_251A4DE90(v85, v86, v5);
  if ((v14 & 1) == 0) {
    return 0;
  }
LABEL_19:
  if (v83 < 0)
  {
    BOOL result = 0;
    uint64_t v15 = v40;
    int v16 = v82;
    if ((v82 & 0x80000000) == 0) {
      return result;
    }
  }
  else
  {
    BOOL result = 0;
    uint64_t v15 = v40;
    int v16 = v82;
    if (v82 < 0) {
      return result;
    }
  }
  if (v83 == v16)
  {
    if ((sub_251B05984(v81, v80) & 1) == 0 || (sub_251B09590(v79, v78) & 1) == 0) {
      return 0;
    }
    if (v77)
    {
      if (!v76) {
        return 0;
      }
      swift_bridgeObjectRetain();
      uint64_t v20 = swift_bridgeObjectRetain();
      char v21 = sub_251AB66F8(v20, v76);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      BOOL result = 0;
      if (v21 & 1) == 0 || ((v72 ^ v71)) {
        return result;
      }
    }
    else
    {
      if (v76) {
        return 0;
      }
      BOOL result = 0;
      if (v72 != v71) {
        return result;
      }
    }
    if ((v70 ^ v69) & 1) != 0 || ((v66 ^ v65)) {
      return result;
    }
    if (v59)
    {
      uint64_t v94 = v59;
      uint64_t v23 = v60;
      uint64_t v22 = v61;
      uint64_t v95 = v60;
      uint64_t v96 = v61;
      uint64_t v25 = v62;
      uint64_t v24 = v63;
      uint64_t v97 = v62;
      uint64_t v98 = v63;
      uint64_t v26 = v64;
      uint64_t v99 = v64;
      uint64_t v27 = v55;
      uint64_t v100 = v55;
      uint64_t v101 = v15;
      uint64_t v29 = v57;
      uint64_t v28 = v58;
      uint64_t v102 = v58;
      uint64_t v103 = v57;
      uint64_t v104 = v74;
      uint64_t v105 = v73;
      uint64_t v106 = v68;
      uint64_t v107 = v75;
      int v108 = v67;
      if (v56)
      {
        v88[0] = v56;
        v88[1] = v47;
        void v88[2] = v48;
        v88[3] = v49;
        v88[4] = v50;
        v88[5] = v51;
        v88[6] = v53;
        v88[7] = v54;
        v88[8] = v45;
        v88[9] = v43;
        v88[10] = v42;
        char v89 = v41;
        int v90 = HIDWORD(v41);
        char v91 = v44 & 1;
        uint64_t v92 = v46;
        int v93 = v52 & 0x1010101;
        sub_251A1ACA8(v59, v60, v61, v62, v63, v64, v55, v15, v58, v57);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_251A1AD5C(v55, v15, v58, v57);
        swift_bridgeObjectRetain();
        char v87 = _s13HomeDataModel11ServiceAreaV2eeoiySbAC_ACtFZ_0((uint64_t)&v94, (uint64_t)v88);
        uint64_t v30 = v100;
        uint64_t v31 = v101;
        uint64_t v32 = v102;
        uint64_t v33 = v103;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_251A4DF84(v30, v31, v32, v33);
        swift_bridgeObjectRelease();
        sub_251A4DED4(v59, v60, v61, v62, v63, v64, v55, v40, v58, v57);
        return (v87 & 1) != 0;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_251A1AD5C(v55, v15, v58, v57);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_251A1AD5C(v55, v15, v58, v57);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_251A4DF84(v55, v15, v58, v57);
      swift_bridgeObjectRelease();
      uint64_t v34 = 0;
      int v39 = v67;
      uint64_t v35 = v74;
      uint64_t v38 = v75;
      uint64_t v37 = v68;
      uint64_t v36 = v73;
    }
    else
    {
      uint64_t v27 = v55;
      uint64_t v34 = v56;
      uint64_t v24 = v63;
      uint64_t v26 = v64;
      uint64_t v22 = v61;
      uint64_t v25 = v62;
      uint64_t v23 = v60;
      uint64_t v29 = v57;
      uint64_t v28 = v58;
      uint64_t v36 = v73;
      uint64_t v35 = v74;
      uint64_t v37 = v68;
      uint64_t v38 = v75;
      int v39 = v67;
      if (!v56) {
        return 1;
      }
    }
    uint64_t v94 = v59;
    uint64_t v95 = v23;
    uint64_t v96 = v22;
    uint64_t v97 = v25;
    uint64_t v98 = v24;
    uint64_t v99 = v26;
    uint64_t v100 = v27;
    uint64_t v101 = v15;
    uint64_t v102 = v28;
    uint64_t v103 = v29;
    uint64_t v104 = v35;
    uint64_t v105 = v36;
    uint64_t v106 = v37;
    uint64_t v107 = v38;
    int v108 = v39;
    uint64_t v109 = v34;
    uint64_t v110 = v47;
    uint64_t v111 = v48;
    uint64_t v112 = v49;
    uint64_t v113 = v50;
    uint64_t v114 = v51;
    uint64_t v115 = v53;
    uint64_t v116 = v54;
    uint64_t v117 = v45;
    uint64_t v118 = v43;
    uint64_t v119 = v42;
    uint64_t v120 = v41;
    uint64_t v121 = v44;
    uint64_t v122 = v46;
    int v123 = v52;
    sub_251A1ACA8(v34, v47, v48, v49, v50, v51, v53, v54, v45, v43);
    sub_251E653D0((uint64_t)&v94);
    return 0;
  }
  return result;
}

unint64_t _s13HomeDataModel21StaticRVCClusterGroupV11description12forAttribute0H0SSSgSo18MTRAttributeIDTypeV_AA11ClusterKindOtFZ_0(int a1, unsigned char *a2)
{
  unint64_t result = 0;
  if (*a2 >= 0x17u)
  {
    switch(*a2)
    {
      case 0x18:
      case 0x19:
        uint64_t v4 = 0x6574726F70707573;
        if (a1) {
          uint64_t v4 = 0;
        }
        if (a1 == 1) {
          unint64_t result = 0x4D746E6572727563;
        }
        else {
          unint64_t result = v4;
        }
        break;
      case 0x1A:
        switch(a1)
        {
          case 0:
          case 1:
            unint64_t result = 0x6574726F70707573;
            break;
          case 2:
            unint64_t result = 0x64657463656C6573;
            break;
          case 3:
            unint64_t result = 0x41746E6572727563;
            break;
          case 4:
            goto LABEL_18;
          case 5:
            unint64_t result = 0x73736572676F7270;
            break;
          default:
            goto LABEL_11;
        }
        break;
      case 0x1B:
        return result;
      default:
        switch(a1)
        {
          case 0:
            unint64_t result = 0x73694C6573616870;
            break;
          case 1:
            unint64_t result = 0x50746E6572727563;
            break;
          case 2:
            unint64_t result = 0x776F64746E756F63;
            break;
          case 3:
            unint64_t result = 0xD000000000000015;
            break;
          case 4:
          case 5:
LABEL_18:
            unint64_t result = 0xD000000000000010;
            break;
          default:
LABEL_11:
            unint64_t result = 0;
            break;
        }
        break;
    }
  }
  return result;
}

unint64_t sub_251E62434()
{
  unint64_t result = qword_269BA4A18;
  if (!qword_269BA4A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4A18);
  }
  return result;
}

unint64_t sub_251E62488()
{
  unint64_t result = qword_269BA4A20;
  if (!qword_269BA4A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4A20);
  }
  return result;
}

unint64_t sub_251E624DC()
{
  unint64_t result = qword_269BA4A28;
  if (!qword_269BA4A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4A28);
  }
  return result;
}

unint64_t sub_251E62530()
{
  unint64_t result = qword_269BA4A30;
  if (!qword_269BA4A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4A30);
  }
  return result;
}

unint64_t sub_251E62584()
{
  unint64_t result = qword_269BA4A38;
  if (!qword_269BA4A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4A38);
  }
  return result;
}

unint64_t sub_251E625D8()
{
  unint64_t result = qword_269BA4A70;
  if (!qword_269BA4A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4A70);
  }
  return result;
}

unint64_t sub_251E6262C()
{
  unint64_t result = qword_269BA4A80;
  if (!qword_269BA4A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4A80);
  }
  return result;
}

unint64_t sub_251E62680()
{
  unint64_t result = qword_269BA4A88;
  if (!qword_269BA4A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4A88);
  }
  return result;
}

unint64_t sub_251E626D4()
{
  unint64_t result = qword_269BA4A90;
  if (!qword_269BA4A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4A90);
  }
  return result;
}

unint64_t sub_251E62728()
{
  unint64_t result = qword_269BA4A98;
  if (!qword_269BA4A98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4A98);
  }
  return result;
}

unint64_t sub_251E6277C()
{
  unint64_t result = qword_269BA4AB8;
  if (!qword_269BA4AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4AB8);
  }
  return result;
}

unint64_t sub_251E627D0()
{
  unint64_t result = qword_269BA4AC8;
  if (!qword_269BA4AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4AC8);
  }
  return result;
}

unint64_t sub_251E62824()
{
  unint64_t result = qword_269BA4AE0;
  if (!qword_269BA4AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4AE0);
  }
  return result;
}

uint64_t sub_251E62878(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_251E628E4()
{
  unint64_t result = qword_269BA4AF8;
  if (!qword_269BA4AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4AF8);
  }
  return result;
}

unint64_t sub_251E62938()
{
  unint64_t result = qword_269BA4B08;
  if (!qword_269BA4B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4B08);
  }
  return result;
}

unint64_t sub_251E6298C()
{
  unint64_t result = qword_269BA4B58;
  if (!qword_269BA4B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4B58);
  }
  return result;
}

unint64_t sub_251E629E0()
{
  unint64_t result = qword_269BA4B60;
  if (!qword_269BA4B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4B60);
  }
  return result;
}

unint64_t sub_251E62A34()
{
  unint64_t result = qword_269BA4B68;
  if (!qword_269BA4B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4B68);
  }
  return result;
}

unint64_t sub_251E62A88()
{
  unint64_t result = qword_269BA4B70;
  if (!qword_269BA4B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4B70);
  }
  return result;
}

unint64_t sub_251E62ADC()
{
  unint64_t result = qword_269BA4B78;
  if (!qword_269BA4B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4B78);
  }
  return result;
}

unint64_t sub_251E62B30()
{
  unint64_t result = qword_269BA4B80;
  if (!qword_269BA4B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4B80);
  }
  return result;
}

unint64_t sub_251E62B84()
{
  unint64_t result = qword_269BA4B88;
  if (!qword_269BA4B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4B88);
  }
  return result;
}

unint64_t sub_251E62BD8()
{
  unint64_t result = qword_269BA4B90;
  if (!qword_269BA4B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4B90);
  }
  return result;
}

unint64_t sub_251E62C2C()
{
  unint64_t result = qword_269BA4BE0;
  if (!qword_269BA4BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4BE0);
  }
  return result;
}

uint64_t sub_251E62C80(uint64_t result, uint64_t a2)
{
  unint64_t v2 = *(void *)(result + 16);
  if (v2)
  {
    unint64_t v4 = 0;
    uint64_t v5 = result + 32;
    uint64_t v6 = MEMORY[0x263F8EE78];
    while (1)
    {
      if (v4 <= v2) {
        unint64_t v7 = v2;
      }
      else {
        unint64_t v7 = v4;
      }
      while (1)
      {
        if (v4 == v7) {
          goto LABEL_25;
        }
        uint64_t v8 = v4++;
        uint64_t v9 = *(void *)(a2 + 16);
        if (!v9) {
          goto LABEL_6;
        }
        uint64_t v10 = 48 * v8;
        int v11 = *(_DWORD *)(v5 + v10);
        if (*(_DWORD *)(a2 + 32) == v11) {
          break;
        }
        if (v9 != 1)
        {
          uint64_t v12 = 9;
          while (1)
          {
            uint64_t v13 = v12 - 7;
            if (__OFADD__(v12 - 8, 1)) {
              break;
            }
            if (*(_DWORD *)(a2 + 4 * v12) == v11) {
              goto LABEL_16;
            }
            ++v12;
            if (v13 == v9) {
              goto LABEL_6;
            }
          }
          __break(1u);
LABEL_25:
          __break(1u);
          return result;
        }
LABEL_6:
        if (v4 == v2) {
          return v6;
        }
      }
LABEL_16:
      char v27 = *(unsigned char *)(v5 + v10 + 39);
      char v28 = *(unsigned char *)(v5 + v10 + 40);
      char v25 = *(unsigned char *)(v5 + v10 + 37);
      char v26 = *(unsigned char *)(v5 + v10 + 38);
      char v23 = *(unsigned char *)(v5 + v10 + 35);
      char v24 = *(unsigned char *)(v5 + v10 + 36);
      __int16 v21 = *(_WORD *)(v5 + v10 + 32);
      char v22 = *(unsigned char *)(v5 + v10 + 34);
      uint64_t v14 = *(void *)(v5 + v10 + 24);
      uint64_t v20 = *(void *)(v5 + v10 + 16);
      int v18 = *(_DWORD *)(v5 + v10 + 4);
      char v19 = *(unsigned char *)(v5 + v10 + 8);
      swift_bridgeObjectRetain();
      unint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0) {
        unint64_t result = sub_251A3E220(0, *(void *)(v6 + 16) + 1, 1);
      }
      unint64_t v16 = *(void *)(v6 + 16);
      unint64_t v15 = *(void *)(v6 + 24);
      if (v16 >= v15 >> 1) {
        unint64_t result = sub_251A3E220(v15 > 1, v16 + 1, 1);
      }
      *(void *)(v6 + 16) = v16 + 1;
      uint64_t v17 = v6 + 48 * v16;
      *(_DWORD *)(v17 + 32) = v11;
      *(_DWORD *)(v17 + 36) = v18;
      *(unsigned char *)(v17 + 40) = v19;
      *(void *)(v17 + 48) = v20;
      *(void *)(v17 + 56) = v14;
      *(_WORD *)(v17 + 64) = v21;
      *(unsigned char *)(v17 + 66) = v22;
      *(unsigned char *)(v17 + 67) = v23;
      *(unsigned char *)(v17 + 68) = v24;
      *(unsigned char *)(v17 + 69) = v25;
      *(unsigned char *)(v17 + 70) = v26;
      *(unsigned char *)(v17 + 71) = v27;
      *(unsigned char *)(v17 + 72) = v28;
      if (v4 == v2) {
        return v6;
      }
    }
  }
  return MEMORY[0x263F8EE78];
}

unint64_t sub_251E62E94()
{
  unint64_t result = qword_269BA4BE8;
  if (!qword_269BA4BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4BE8);
  }
  return result;
}

unint64_t sub_251E62EEC()
{
  unint64_t result = qword_269BA4BF0;
  if (!qword_269BA4BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4BF0);
  }
  return result;
}

uint64_t sub_251E62F40()
{
  return MEMORY[0x263F8D9E0];
}

unint64_t sub_251E62F50()
{
  unint64_t result = qword_269BA4BF8;
  if (!qword_269BA4BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4BF8);
  }
  return result;
}

unint64_t sub_251E62FA8()
{
  unint64_t result = qword_269BA4C00;
  if (!qword_269BA4C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4C00);
  }
  return result;
}

unint64_t sub_251E63000()
{
  unint64_t result = qword_269BA4C08;
  if (!qword_269BA4C08)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269BA4C10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4C08);
  }
  return result;
}

uint64_t destroy for StaticRVCClusterGroup(void *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1[8])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = a1[15];
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (a1[24] != 1) {
      swift_bridgeObjectRelease();
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for StaticRVCClusterGroup(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 7) = *(_DWORD *)(a2 + 7);
  *(unsigned char *)(a1 + 11) = *(unsigned char *)(a2 + 11);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  uint64_t v5 = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v5)
  {
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    uint64_t v6 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = v5;
    *(void *)(a1 + 72) = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v7;
  }
  uint64_t v8 = *(void *)(a2 + 120);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v9 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v9;
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(_WORD *)(a1 + 113) = *(_WORD *)(a2 + 113);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8)
  {
    uint64_t v10 = *(void *)(a2 + 128);
    uint64_t v11 = *(void *)(a2 + 136);
    *(void *)(a1 + 120) = v8;
    *(void *)(a1 + 128) = v10;
    *(void *)(a1 + 136) = v11;
    *(_DWORD *)(a1 + 144) = *(_DWORD *)(a2 + 144);
    uint64_t v12 = *(void *)(a2 + 160);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(void *)(a1 + 160) = v12;
    uint64_t v13 = *(void *)(a2 + 192);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13 == 1)
    {
      long long v14 = *(_OWORD *)(a2 + 184);
      *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
      *(_OWORD *)(a1 + 184) = v14;
      *(_OWORD *)(a1 + 193) = *(_OWORD *)(a2 + 193);
    }
    else
    {
      int v18 = *(_DWORD *)(a2 + 172);
      *(_DWORD *)(a1 + 168) = *(_DWORD *)(a2 + 168);
      *(_DWORD *)(a1 + 172) = v18;
      *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      *(void *)(a1 + 192) = v13;
      *(_WORD *)(a1 + 200) = *(_WORD *)(a2 + 200);
      *(unsigned char *)(a1 + 202) = *(unsigned char *)(a2 + 202);
      *(_DWORD *)(a1 + 203) = *(_DWORD *)(a2 + 203);
      *(_WORD *)(a1 + 207) = *(_WORD *)(a2 + 207);
      swift_bridgeObjectRetain();
    }
    *(_DWORD *)(a1 + 212) = *(_DWORD *)(a2 + 212);
    *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    *(_DWORD *)(a1 + 232) = *(_DWORD *)(a2 + 232);
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v15 = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 200) = v15;
    *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
    *(_DWORD *)(a1 + 232) = *(_DWORD *)(a2 + 232);
    long long v16 = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 136) = v16;
    long long v17 = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 168) = v17;
  }
  return a1;
}

uint64_t assignWithCopy for StaticRVCClusterGroup(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(unsigned char *)(a1 + 10) = *(unsigned char *)(a2 + 10);
  *(unsigned char *)(a1 + 11) = *(unsigned char *)(a2 + 11);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 48);
  uint64_t v5 = (_OWORD *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 64);
  if (*(void *)(a1 + 64))
  {
    if (v6)
    {
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_251E637E0(a1 + 48);
      long long v7 = *(_OWORD *)(a2 + 64);
      *uint64_t v4 = *v5;
      *(_OWORD *)(a1 + 64) = v7;
    }
  }
  else if (v6)
  {
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v8 = *(_OWORD *)(a2 + 64);
    *uint64_t v4 = *v5;
    *(_OWORD *)(a1 + 64) = v8;
  }
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = (_OWORD *)(a1 + 120);
  uint64_t v10 = *(void *)(a1 + 120);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(unsigned char *)(a1 + 113) = *(unsigned char *)(a2 + 113);
  *(unsigned char *)(a1 + 114) = *(unsigned char *)(a2 + 114);
  uint64_t v12 = (long long *)(a2 + 120);
  uint64_t v11 = *(void *)(a2 + 120);
  if (v10)
  {
    if (v11)
    {
      *(void *)(a1 + 120) = v11;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 144) = *(_DWORD *)(a2 + 144);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v13 = (long long *)(a1 + 168);
      long long v14 = (long long *)(a2 + 168);
      uint64_t v15 = *(void *)(a2 + 192);
      if (*(void *)(a1 + 192) == 1)
      {
        if (v15 == 1)
        {
          long long v16 = *v14;
          long long v17 = *(_OWORD *)(a2 + 184);
          *(_OWORD *)(a1 + 193) = *(_OWORD *)(a2 + 193);
          *uint64_t v13 = v16;
          *(_OWORD *)(a1 + 184) = v17;
        }
        else
        {
          *(_DWORD *)(a1 + 168) = *(_DWORD *)(a2 + 168);
          int v37 = *(_DWORD *)(a2 + 172);
          *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
          *(_DWORD *)(a1 + 172) = v37;
          *(void *)(a1 + 184) = *(void *)(a2 + 184);
          *(void *)(a1 + 192) = *(void *)(a2 + 192);
          LOWORD(v37) = *(_WORD *)(a2 + 200);
          *(unsigned char *)(a1 + 202) = *(unsigned char *)(a2 + 202);
          *(_WORD *)(a1 + 200) = v37;
          *(_WORD *)(a1 + 203) = *(_WORD *)(a2 + 203);
          *(_WORD *)(a1 + 205) = *(_WORD *)(a2 + 205);
          *(_WORD *)(a1 + 207) = *(_WORD *)(a2 + 207);
          swift_bridgeObjectRetain();
        }
      }
      else if (v15 == 1)
      {
        sub_251E63814(a1 + 168);
        long long v27 = *(_OWORD *)(a2 + 193);
        long long v28 = *(_OWORD *)(a2 + 184);
        *uint64_t v13 = *v14;
        *(_OWORD *)(a1 + 184) = v28;
        *(_OWORD *)(a1 + 193) = v27;
      }
      else
      {
        *(_DWORD *)(a1 + 168) = *(_DWORD *)(a2 + 168);
        int v38 = *(_DWORD *)(a2 + 172);
        *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
        *(_DWORD *)(a1 + 172) = v38;
        *(void *)(a1 + 184) = *(void *)(a2 + 184);
        *(void *)(a1 + 192) = *(void *)(a2 + 192);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        __int16 v39 = *(_WORD *)(a2 + 200);
        *(unsigned char *)(a1 + 202) = *(unsigned char *)(a2 + 202);
        *(_WORD *)(a1 + 200) = v39;
        *(_WORD *)(a1 + 203) = *(_WORD *)(a2 + 203);
        *(_WORD *)(a1 + 205) = *(_WORD *)(a2 + 205);
        *(_WORD *)(a1 + 207) = *(_WORD *)(a2 + 207);
      }
      int v40 = *(_DWORD *)(a2 + 212);
      *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
      *(_DWORD *)(a1 + 212) = v40;
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
      *(unsigned char *)(a1 + 233) = *(unsigned char *)(a2 + 233);
      *(unsigned char *)(a1 + 234) = *(unsigned char *)(a2 + 234);
      *(unsigned char *)(a1 + 235) = *(unsigned char *)(a2 + 235);
    }
    else
    {
      sub_251E63868(a1 + 120);
      long long v21 = *(_OWORD *)(a2 + 168);
      long long v23 = *v12;
      long long v22 = *(_OWORD *)(a2 + 136);
      *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
      *(_OWORD *)(a1 + 168) = v21;
      *uint64_t v9 = v23;
      *(_OWORD *)(a1 + 136) = v22;
      long long v25 = *(_OWORD *)(a2 + 200);
      long long v24 = *(_OWORD *)(a2 + 216);
      long long v26 = *(_OWORD *)(a2 + 184);
      *(_DWORD *)(a1 + 232) = *(_DWORD *)(a2 + 232);
      *(_OWORD *)(a1 + 200) = v25;
      *(_OWORD *)(a1 + 216) = v24;
      *(_OWORD *)(a1 + 184) = v26;
    }
  }
  else if (v11)
  {
    *(void *)(a1 + 120) = v11;
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(_DWORD *)(a1 + 144) = *(_DWORD *)(a2 + 144);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(void *)(a1 + 160) = *(void *)(a2 + 160);
    uint64_t v18 = *(void *)(a2 + 192);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v18 == 1)
    {
      long long v19 = *(_OWORD *)(a2 + 168);
      long long v20 = *(_OWORD *)(a2 + 184);
      *(_OWORD *)(a1 + 193) = *(_OWORD *)(a2 + 193);
      *(_OWORD *)(a1 + 168) = v19;
      *(_OWORD *)(a1 + 184) = v20;
    }
    else
    {
      *(_DWORD *)(a1 + 168) = *(_DWORD *)(a2 + 168);
      int v35 = *(_DWORD *)(a2 + 172);
      *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
      *(_DWORD *)(a1 + 172) = v35;
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      LOWORD(v35) = *(_WORD *)(a2 + 200);
      *(unsigned char *)(a1 + 202) = *(unsigned char *)(a2 + 202);
      *(_WORD *)(a1 + 200) = v35;
      *(_WORD *)(a1 + 203) = *(_WORD *)(a2 + 203);
      *(_WORD *)(a1 + 205) = *(_WORD *)(a2 + 205);
      *(_WORD *)(a1 + 207) = *(_WORD *)(a2 + 207);
      swift_bridgeObjectRetain();
    }
    int v36 = *(_DWORD *)(a2 + 212);
    *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
    *(_DWORD *)(a1 + 212) = v36;
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
    *(unsigned char *)(a1 + 233) = *(unsigned char *)(a2 + 233);
    *(unsigned char *)(a1 + 234) = *(unsigned char *)(a2 + 234);
    *(unsigned char *)(a1 + 235) = *(unsigned char *)(a2 + 235);
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v29 = *v12;
    long long v30 = *(_OWORD *)(a2 + 136);
    long long v31 = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 168) = v31;
    *uint64_t v9 = v29;
    *(_OWORD *)(a1 + 136) = v30;
    long long v32 = *(_OWORD *)(a2 + 184);
    long long v33 = *(_OWORD *)(a2 + 200);
    long long v34 = *(_OWORD *)(a2 + 216);
    *(_DWORD *)(a1 + 232) = *(_DWORD *)(a2 + 232);
    *(_OWORD *)(a1 + 200) = v33;
    *(_OWORD *)(a1 + 216) = v34;
    *(_OWORD *)(a1 + 184) = v32;
  }
  return a1;
}

uint64_t sub_251E637E0(uint64_t a1)
{
  return a1;
}

uint64_t sub_251E63814(uint64_t a1)
{
  return a1;
}

uint64_t sub_251E63868(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy236_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  long long v7 = a2[7];
  long long v8 = a2[8];
  long long v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  __n128 result = (__n128)a2[11];
  long long v11 = a2[12];
  long long v12 = a2[13];
  *(_OWORD *)(a1 + 220) = *(long long *)((char *)a2 + 220);
  *(_OWORD *)(a1 + 192) = v11;
  *(_OWORD *)(a1 + 208) = v12;
  *(__n128 *)(a1 + 176) = result;
  return result;
}

uint64_t assignWithTake for StaticRVCClusterGroup(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 64))
  {
    uint64_t v4 = *(void *)(a2 + 64);
    if (v4)
    {
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
      *(void *)(a1 + 64) = v4;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_251E637E0(a1 + 48);
  }
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v5;
LABEL_6:
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 120);
  uint64_t v7 = *(void *)(a1 + 120);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(unsigned char *)(a1 + 113) = *(unsigned char *)(a2 + 113);
  *(unsigned char *)(a1 + 114) = *(unsigned char *)(a2 + 114);
  if (v7)
  {
    if (v6)
    {
      *(void *)(a1 + 120) = v6;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 144) = *(_DWORD *)(a2 + 144);
      uint64_t v8 = *(void *)(a2 + 160);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      *(void *)(a1 + 160) = v8;
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 192) != 1)
      {
        uint64_t v9 = *(void *)(a2 + 192);
        if (v9 != 1)
        {
          int v14 = *(_DWORD *)(a2 + 172);
          *(_DWORD *)(a1 + 168) = *(_DWORD *)(a2 + 168);
          *(_DWORD *)(a1 + 172) = v14;
          *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
          *(void *)(a1 + 184) = *(void *)(a2 + 184);
          *(void *)(a1 + 192) = v9;
          swift_bridgeObjectRelease();
          *(_WORD *)(a1 + 200) = *(_WORD *)(a2 + 200);
          *(unsigned char *)(a1 + 202) = *(unsigned char *)(a2 + 202);
          *(_WORD *)(a1 + 203) = *(_WORD *)(a2 + 203);
          *(_DWORD *)(a1 + 205) = *(_DWORD *)(a2 + 205);
          goto LABEL_15;
        }
        sub_251E63814(a1 + 168);
      }
      long long v10 = *(_OWORD *)(a2 + 184);
      *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
      *(_OWORD *)(a1 + 184) = v10;
      *(_OWORD *)(a1 + 193) = *(_OWORD *)(a2 + 193);
LABEL_15:
      *(_DWORD *)(a1 + 212) = *(_DWORD *)(a2 + 212);
      *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
      *(unsigned char *)(a1 + 233) = *(unsigned char *)(a2 + 233);
      *(unsigned char *)(a1 + 234) = *(unsigned char *)(a2 + 234);
      *(unsigned char *)(a1 + 235) = *(unsigned char *)(a2 + 235);
      return a1;
    }
    sub_251E63868(a1 + 120);
  }
  long long v11 = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = v11;
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_DWORD *)(a1 + 232) = *(_DWORD *)(a2 + 232);
  long long v12 = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = v12;
  long long v13 = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = v13;
  return a1;
}

uint64_t getEnumTagSinglePayload for StaticRVCClusterGroup(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 236)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StaticRVCClusterGroup(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 232) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 236) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 236) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticRVCClusterGroup()
{
  return &type metadata for StaticRVCClusterGroup;
}

ValueMetadata *type metadata accessor for StaticRVCClusterGroup.RunMode()
{
  return &type metadata for StaticRVCClusterGroup.RunMode;
}

uint64_t destroy for RoomSectionByUmbrellaCategory()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s13HomeDataModel21StaticRVCClusterGroupV7RunModeVwcp_0(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s13HomeDataModel21StaticRVCClusterGroupV7RunModeVwca_0(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *_s13HomeDataModel21StaticRVCClusterGroupV7RunModeVwta_0(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RoomSectionByUmbrellaCategory(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RoomSectionByUmbrellaCategory(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticRVCClusterGroup.CleanMode()
{
  return &type metadata for StaticRVCClusterGroup.CleanMode;
}

ValueMetadata *type metadata accessor for StaticRVCClusterGroup.State()
{
  return &type metadata for StaticRVCClusterGroup.State;
}

unsigned char *_s13HomeDataModel21StaticRVCClusterGroupV5StateOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *__n128 result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251E63EF8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticRVCClusterGroup.State.CodingKeys()
{
  return &type metadata for StaticRVCClusterGroup.State.CodingKeys;
}

ValueMetadata *type metadata accessor for StaticRVCClusterGroup.State.RunningCodingKeys()
{
  return &type metadata for StaticRVCClusterGroup.State.RunningCodingKeys;
}

ValueMetadata *type metadata accessor for StaticRVCClusterGroup.State.StoppedCodingKeys()
{
  return &type metadata for StaticRVCClusterGroup.State.StoppedCodingKeys;
}

ValueMetadata *type metadata accessor for StaticRVCClusterGroup.State.PausedCodingKeys()
{
  return &type metadata for StaticRVCClusterGroup.State.PausedCodingKeys;
}

ValueMetadata *type metadata accessor for StaticRVCClusterGroup.State.ErrorCodingKeys()
{
  return &type metadata for StaticRVCClusterGroup.State.ErrorCodingKeys;
}

ValueMetadata *type metadata accessor for StaticRVCClusterGroup.State.SeekingChargerCodingKeys()
{
  return &type metadata for StaticRVCClusterGroup.State.SeekingChargerCodingKeys;
}

ValueMetadata *type metadata accessor for StaticRVCClusterGroup.State.ChargingCodingKeys()
{
  return &type metadata for StaticRVCClusterGroup.State.ChargingCodingKeys;
}

ValueMetadata *type metadata accessor for StaticRVCClusterGroup.State.DockedCodingKeys()
{
  return &type metadata for StaticRVCClusterGroup.State.DockedCodingKeys;
}

ValueMetadata *type metadata accessor for StaticRVCClusterGroup.CleanMode.CodingKeys()
{
  return &type metadata for StaticRVCClusterGroup.CleanMode.CodingKeys;
}

unsigned char *_s13HomeDataModel21StaticRVCClusterGroupV9CleanModeV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251E64080);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticRVCClusterGroup.RunMode.CodingKeys()
{
  return &type metadata for StaticRVCClusterGroup.RunMode.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for StaticRVCClusterGroup.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *__n128 result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251E64184);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticRVCClusterGroup.CodingKeys()
{
  return &type metadata for StaticRVCClusterGroup.CodingKeys;
}

unint64_t sub_251E641C0()
{
  unint64_t result = qword_269BA4C18;
  if (!qword_269BA4C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4C18);
  }
  return result;
}

unint64_t sub_251E64218()
{
  unint64_t result = qword_269BA4C20;
  if (!qword_269BA4C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4C20);
  }
  return result;
}

unint64_t sub_251E64270()
{
  unint64_t result = qword_269BA4C28;
  if (!qword_269BA4C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4C28);
  }
  return result;
}

unint64_t sub_251E642C8()
{
  unint64_t result = qword_269BA4C30;
  if (!qword_269BA4C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4C30);
  }
  return result;
}

unint64_t sub_251E64320()
{
  unint64_t result = qword_269BA4C38;
  if (!qword_269BA4C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4C38);
  }
  return result;
}

unint64_t sub_251E64378()
{
  unint64_t result = qword_269BA4C40;
  if (!qword_269BA4C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4C40);
  }
  return result;
}

unint64_t sub_251E643D0()
{
  unint64_t result = qword_269BA4C48;
  if (!qword_269BA4C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4C48);
  }
  return result;
}

unint64_t sub_251E64428()
{
  unint64_t result = qword_269BA4C50;
  if (!qword_269BA4C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4C50);
  }
  return result;
}

unint64_t sub_251E64480()
{
  unint64_t result = qword_269BA4C58;
  if (!qword_269BA4C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4C58);
  }
  return result;
}

unint64_t sub_251E644D8()
{
  unint64_t result = qword_269BA4C60;
  if (!qword_269BA4C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4C60);
  }
  return result;
}

unint64_t sub_251E64530()
{
  unint64_t result = qword_269BA4C68;
  if (!qword_269BA4C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4C68);
  }
  return result;
}

unint64_t sub_251E64588()
{
  unint64_t result = qword_269BA4C70;
  if (!qword_269BA4C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4C70);
  }
  return result;
}

unint64_t sub_251E645E0()
{
  unint64_t result = qword_269BA4C78;
  if (!qword_269BA4C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4C78);
  }
  return result;
}

unint64_t sub_251E64638()
{
  unint64_t result = qword_269BA4C80;
  if (!qword_269BA4C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4C80);
  }
  return result;
}

unint64_t sub_251E64690()
{
  unint64_t result = qword_269BA4C88;
  if (!qword_269BA4C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4C88);
  }
  return result;
}

unint64_t sub_251E646E8()
{
  unint64_t result = qword_269BA4C90;
  if (!qword_269BA4C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4C90);
  }
  return result;
}

unint64_t sub_251E64740()
{
  unint64_t result = qword_269BA4C98;
  if (!qword_269BA4C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4C98);
  }
  return result;
}

unint64_t sub_251E64798()
{
  unint64_t result = qword_269BA4CA0;
  if (!qword_269BA4CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4CA0);
  }
  return result;
}

unint64_t sub_251E647F0()
{
  unint64_t result = qword_269BA4CA8;
  if (!qword_269BA4CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4CA8);
  }
  return result;
}

unint64_t sub_251E64848()
{
  unint64_t result = qword_269BA4CB0;
  if (!qword_269BA4CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4CB0);
  }
  return result;
}

unint64_t sub_251E648A0()
{
  unint64_t result = qword_269BA4CB8;
  if (!qword_269BA4CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4CB8);
  }
  return result;
}

unint64_t sub_251E648F8()
{
  unint64_t result = qword_269BA4CC0;
  if (!qword_269BA4CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4CC0);
  }
  return result;
}

unint64_t sub_251E64950()
{
  unint64_t result = qword_269BA4CC8;
  if (!qword_269BA4CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4CC8);
  }
  return result;
}

unint64_t sub_251E649A8()
{
  unint64_t result = qword_269BA4CD0;
  if (!qword_269BA4CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4CD0);
  }
  return result;
}

unint64_t sub_251E64A00()
{
  unint64_t result = qword_269BA4CD8;
  if (!qword_269BA4CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4CD8);
  }
  return result;
}

unint64_t sub_251E64A58()
{
  unint64_t result = qword_269BA4CE0;
  if (!qword_269BA4CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_269BA4CE0);
  }
  return result;
}

uint64_t sub_251E64AAC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574617473 && a2 == 0xE500000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4D676E696E6E7572 && a2 == 0xEB0000000065646FLL || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x676E696E61656C63 && a2 == 0xEC00000065646F4DLL || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x726F727265 && a2 == 0xE500000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x65746174536C6C61 && a2 == 0xE900000000000073 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x696E6E75526C6C61 && a2 == 0xEF7365646F4D676ELL || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000251F728E0 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x8000000251F72900 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x8000000251F72920 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000025 && a2 == 0x8000000251F72950 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x4165636976726573 && a2 == 0xEB00000000616572)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 11;
    }
    else {
      return 12;
    }
  }
}

uint64_t sub_251E64FB4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C6562616CLL && a2 == 0xE500000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1936154996 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_251E650DC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x676E696E6E7572 && a2 == 0xE700000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x646570706F7473 && a2 == 0xE700000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x646573756170 && a2 == 0xE600000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x726F727265 && a2 == 0xE500000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x43676E696B656573 && a2 == 0xEE00726567726168 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x676E696772616863 && a2 == 0xE800000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x64656B636F64 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_251E653D0(uint64_t a1)
{
  uint64_t v11 = *(void *)(a1 + 120);
  uint64_t v2 = *(void *)(a1 + 136);
  uint64_t v10 = *(void *)(a1 + 128);
  uint64_t v3 = *(void *)(a1 + 144);
  uint64_t v4 = *(void *)(a1 + 152);
  uint64_t v5 = *(void *)(a1 + 160);
  uint64_t v6 = *(void *)(a1 + 168);
  uint64_t v7 = *(void *)(a1 + 176);
  long long v9 = *(_OWORD *)(a1 + 184);
  sub_251A4DED4(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72));
  sub_251A4DED4(v11, v10, v2, v3, v4, v5, v6, v7, v9, *((uint64_t *)&v9 + 1));
  return a1;
}

uint64_t ActionService.actionCharaceristicDescription.getter()
{
  uint64_t v1 = type metadata accessor for ActionService();
  uint64_t result = 0;
  switch(*(unsigned char *)(v0 + *(int *)(v1 + 44)))
  {
    case 3:
      uint64_t result = ActionService.airPurifierString.getter();
      break;
    case 0xE:
    case 0x33:
    case 0x34:
      uint64_t result = ActionService.motorizedDoorOrWindowString.getter();
      break;
    case 0x10:
      uint64_t result = ActionService.fanString.getter();
      break;
    case 0x11:
      uint64_t result = ActionService.faucetString.getter();
      break;
    case 0x13:
      uint64_t result = ActionService.doorStateString.getter();
      break;
    case 0x14:
      uint64_t result = ActionService.heaterCoolerString.getter();
      break;
    case 0x15:
      uint64_t result = ActionService.humidifierDehumidifierString.getter();
      break;
    case 0x18:
      uint64_t result = ActionService.irrigationSystemString.getter();
      break;
    case 0x1C:
      uint64_t result = ActionService.lightBulbString.getter();
      break;
    case 0x1E:
      uint64_t result = ActionService.lockStateString.getter();
      break;
    case 0x22:
    case 0x29:
      uint64_t result = ActionService.switchString.getter();
      break;
    case 0x23:
      uint64_t result = ActionService.securitySystemString.getter();
      break;
    case 0x2C:
      uint64_t result = ActionService.televisionString.getter();
      break;
    case 0x2E:
      uint64_t result = ActionService.thermostatString.getter();
      break;
    case 0x2F:
      uint64_t result = ActionService.valveString.getter();
      break;
    case 0x30:
      uint64_t result = ActionService.ventilationFan.getter();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t ActionService.activeString.getter()
{
  uint64_t v8 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  unsigned __int8 v7 = 3;
  char v1 = sub_251B457DC(&v7);
  uint64_t v2 = 0;
  if (v1 != 2)
  {
    BOOL v3 = (v1 & 1) == 0;
    if (v1) {
      uint64_t v4 = 0xD000000000000019;
    }
    else {
      uint64_t v4 = 0xD00000000000001ALL;
    }
    if (v3) {
      uint64_t v5 = 0x8000000251F72AB0;
    }
    else {
      uint64_t v5 = 0x8000000251F72AD0;
    }
    uint64_t v2 = static String.hfLocalized(_:)(v4, v5);
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t ActionService.doorStateString.getter()
{
  uint64_t v6 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  char v5 = -107;
  Swift::Int_optional v7 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v5);
  Swift::Int value = v7.value;
  uint64_t result = 0;
  if (!v7.is_nil)
  {
    if (value == 1)
    {
      uint64_t v4 = 0xD00000000000001DLL;
      uint64_t v3 = 0x8000000251F72AF0;
      return static String.hfLocalized(_:)(v4, v3);
    }
    if (!value)
    {
      uint64_t v3 = 0x8000000251F72B10;
      uint64_t v4 = 0xD00000000000001BLL;
      return static String.hfLocalized(_:)(v4, v3);
    }
    return 0;
  }
  return result;
}

uint64_t ActionService.fanString.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  uint64_t v13 = v1;
  unsigned __int8 v12 = 105;
  char v2 = sub_251B457DC(&v12);
  uint64_t v3 = 0;
  if (v2 != 2)
  {
    uint64_t v4 = 0xD000000000000019;
    if ((v2 & 1) == 0)
    {
      uint64_t v4 = 0xD00000000000001ALL;
      uint64_t v5 = 0x8000000251F72AB0;
LABEL_7:
      uint64_t v3 = static String.hfLocalized(_:)(v4, v5);
      swift_bridgeObjectRelease();
      return v3;
    }
    uint64_t v13 = v1;
    unsigned __int8 v12 = 115;
    double v6 = COERCE_DOUBLE(sub_251B46610(&v12));
    uint64_t v5 = 0x8000000251F72AD0;
    if ((v7 & 1) != 0 || v6 <= 0.0) {
      goto LABEL_7;
    }
    sub_251B3F4F4();
    uint64_t v8 = (void *)sub_251F360F0();
    long long v9 = (void *)sub_251F360F0();
    uint64_t v10 = (void *)sub_251F360F0();
    uint64_t v3 = sub_251D3B848(v8);
  }
  return v3;
}

uint64_t ActionService.faucetString.getter()
{
  uint64_t v8 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  unsigned __int8 v7 = 3;
  char v1 = sub_251B457DC(&v7);
  uint64_t v2 = 0;
  if (v1 != 2)
  {
    BOOL v3 = (v1 & 1) == 0;
    if (v1) {
      uint64_t v4 = 0xD00000000000002FLL;
    }
    else {
      uint64_t v4 = 0xD00000000000002BLL;
    }
    if (v3) {
      uint64_t v5 = 0x8000000251F6D000;
    }
    else {
      uint64_t v5 = 0x8000000251F6D030;
    }
    uint64_t v2 = static String.hfLocalized(_:)(v4, v5);
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t ActionService.heaterCoolerString.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  uint64_t v30 = v1;
  unsigned __int8 v29 = 3;
  char v2 = sub_251B457DC(&v29);
  uint64_t v3 = 0;
  if (v2 != 2)
  {
    if ((v2 & 1) == 0) {
      return static String.hfLocalized(_:)(0xD00000000000001ALL, 0x8000000251F72AB0);
    }
    uint64_t v30 = v1;
    unsigned __int8 v29 = -105;
    Swift::Int_optional v31 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v29);
    if (v31.is_nil) {
      return 0;
    }
    if (v31.value == 2)
    {
      uint64_t v30 = v1;
      unsigned __int8 v29 = 29;
      uint64_t v18 = sub_251B46610(&v29);
      if (v19) {
        return 0;
      }
      double v20 = *(double *)&v18;
      long long v21 = "HFServiceControlDescriptionHeaterCoolerCoolingToWithTemperature";
    }
    else
    {
      if (v31.value != 1)
      {
        if (!v31.value)
        {
          uint64_t v30 = v1;
          unsigned __int8 v29 = 55;
          uint64_t v4 = sub_251B46610(&v29);
          if ((v5 & 1) == 0)
          {
            double v6 = *(double *)&v4;
            uint64_t v30 = v1;
            unsigned __int8 v29 = 29;
            uint64_t v7 = sub_251B46610(&v29);
            if ((v8 & 1) == 0)
            {
              double v9 = *(double *)&v7;
              static String.hfLocalized(_:)(0xD00000000000001BLL, 0x8000000251F6D7C0);
              __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
              uint64_t v10 = swift_allocObject();
              *(_OWORD *)(v10 + 16) = xmmword_251F3A500;
              uint64_t v11 = static ClimateSummarizer.temperatureAverageString(_:)(v6);
              uint64_t v13 = v12;
              uint64_t v14 = MEMORY[0x263F8D310];
              *(void *)(v10 + 56) = MEMORY[0x263F8D310];
              unint64_t v15 = sub_251B44770();
              *(void *)(v10 + 64) = v15;
              *(void *)(v10 + 32) = v11;
              *(void *)(v10 + 40) = v13;
              uint64_t v16 = static ClimateSummarizer.temperatureAverageString(_:)(v9);
              *(void *)(v10 + 96) = v14;
              *(void *)(v10 + 104) = v15;
              *(void *)(v10 + 72) = v16;
              *(void *)(v10 + 80) = v17;
LABEL_16:
              uint64_t v3 = sub_251F35710();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              return v3;
            }
          }
        }
        return 0;
      }
      uint64_t v30 = v1;
      unsigned __int8 v29 = 55;
      uint64_t v22 = sub_251B46610(&v29);
      if (v23) {
        return 0;
      }
      double v20 = *(double *)&v22;
      long long v21 = "HFServiceControlDescriptionHeaterCoolerHeatingToWithTemperature";
    }
    static String.hfLocalized(_:)(0xD00000000000003FLL, (unint64_t)(v21 - 32) | 0x8000000000000000);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_251F38650;
    uint64_t v25 = static ClimateSummarizer.temperatureAverageString(_:)(v20);
    uint64_t v27 = v26;
    *(void *)(v24 + 56) = MEMORY[0x263F8D310];
    *(void *)(v24 + 64) = sub_251B44770();
    *(void *)(v24 + 32) = v25;
    *(void *)(v24 + 40) = v27;
    goto LABEL_16;
  }
  return v3;
}

uint64_t ActionService.humidifierDehumidifierString.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  uint64_t v36 = v1;
  unsigned __int8 v35 = 3;
  char v2 = sub_251B457DC(&v35);
  uint64_t v3 = 0;
  if (v2 == 2) {
    return v3;
  }
  char v4 = v2;
  uint64_t v36 = v1;
  unsigned __int8 v35 = -102;
  Swift::Int_optional v37 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v35);
  if (v37.is_nil) {
    return 0;
  }
  if ((v4 & 1) == 0) {
    return static String.hfLocalized(_:)(0xD00000000000001ALL, 0x8000000251F72AB0);
  }
  Swift::Int value = v37.value;
  uint64_t v3 = static String.hfLocalized(_:)(0xD000000000000019, 0x8000000251F72AD0);
  switch(value)
  {
    case 2:
      uint64_t v36 = v1;
      unsigned __int8 v35 = 48;
      sub_251B46610(&v35);
      if (v24) {
        return v3;
      }
      swift_bridgeObjectRelease();
      uint64_t v25 = 0xD000000000000034;
      uint64_t v26 = "HFServiceDescriptionHumidifierDehumidifyWithHumidity";
      goto LABEL_17;
    case 1:
      uint64_t v36 = v1;
      unsigned __int8 v35 = 58;
      sub_251B46610(&v35);
      if (v27) {
        return v3;
      }
      swift_bridgeObjectRelease();
      uint64_t v25 = 0xD000000000000032;
      uint64_t v26 = "HFServiceDescriptionHumidifierHumidifyWithHumidity";
LABEL_17:
      static String.hfLocalized(_:)(v25, (unint64_t)(v26 - 32) | 0x8000000000000000);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
      uint64_t v28 = swift_allocObject();
      *(_OWORD *)(v28 + 16) = xmmword_251F38650;
      sub_251B3F4F4();
      unsigned __int8 v29 = (void *)sub_251F360F0();
      uint64_t v30 = (void *)sub_251F360F0();
      Swift::Int_optional v31 = (void *)sub_251F360F0();
      uint64_t v32 = sub_251D3B848(v29);
      uint64_t v34 = v33;

      *(void *)(v28 + 56) = MEMORY[0x263F8D310];
      *(void *)(v28 + 64) = sub_251B44770();
      *(void *)(v28 + 32) = v32;
      *(void *)(v28 + 40) = v34;
      goto LABEL_18;
    case 0:
      uint64_t v36 = v1;
      unsigned __int8 v35 = 58;
      sub_251B46610(&v35);
      if ((v7 & 1) == 0)
      {
        uint64_t v36 = v1;
        unsigned __int8 v35 = 48;
        sub_251B46610(&v35);
        if ((v8 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          static String.hfLocalized(_:)(0xD000000000000033, 0x8000000251F6D290);
          __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
          uint64_t v9 = swift_allocObject();
          *(_OWORD *)(v9 + 16) = xmmword_251F3A500;
          sub_251B3F4F4();
          uint64_t v10 = (void *)sub_251F360F0();
          uint64_t v11 = (void *)sub_251F360F0();
          uint64_t v12 = (void *)sub_251F360F0();
          uint64_t v13 = sub_251D3B848(v10);
          uint64_t v15 = v14;

          uint64_t v16 = MEMORY[0x263F8D310];
          *(void *)(v9 + 56) = MEMORY[0x263F8D310];
          unint64_t v17 = sub_251B44770();
          *(void *)(v9 + 64) = v17;
          *(void *)(v9 + 32) = v13;
          *(void *)(v9 + 40) = v15;
          uint64_t v18 = (void *)sub_251F360F0();
          char v19 = (void *)sub_251F360F0();
          double v20 = (void *)sub_251F360F0();
          uint64_t v21 = sub_251D3B848(v18);
          uint64_t v23 = v22;

          *(void *)(v9 + 96) = v16;
          *(void *)(v9 + 104) = v17;
          *(void *)(v9 + 72) = v21;
          *(void *)(v9 + 80) = v23;
LABEL_18:
          uint64_t v3 = sub_251F35710();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
      }
      break;
  }
  return v3;
}

uint64_t ActionService.irrigationSystemString.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  uint64_t v8 = v1;
  unsigned __int8 v7 = 65;
  char v2 = sub_251B457DC(&v7);
  uint64_t result = 0;
  if (v2 != 2)
  {
    if (v2)
    {
      uint64_t v4 = 0xD00000000000003ALL;
      char v5 = "HFServiceDescription.IrrigationSystem, State:RunningManual";
    }
    else
    {
      uint64_t v8 = v1;
      unsigned __int8 v7 = 3;
      if ((sub_251B457DC(&v7) & 1) == 0
        || (uint64_t v8 = v1, v7 = 106,
                     Swift::Int_optional v9 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v7),
                     v9.is_nil)
        || !v9.value)
      {
        unint64_t v6 = 0x8000000251F6D890;
        uint64_t v4 = 0xD000000000000030;
        return static String.hfLocalized(_:)(v4, v6);
      }
      uint64_t v4 = 0xD000000000000036;
      char v5 = "HFServiceDescription.IrrigationSystem, State:Scheduled";
    }
    unint64_t v6 = (unint64_t)(v5 - 32) | 0x8000000000000000;
    return static String.hfLocalized(_:)(v4, v6);
  }
  return result;
}

uint64_t ActionService.lightBulbString.getter()
{
  type metadata accessor for ActionService();
  unsigned __int8 v13 = 105;
  char v0 = sub_251B457DC(&v13);
  uint64_t v1 = 0;
  if (v0 != 2)
  {
    if (v0)
    {
      unsigned __int8 v13 = 12;
      Swift::Int_optional v14 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v13);
      if (!v14.is_nil
        && v14.value >= 1
        && (StaticProfileBag.isNaturalLightSupported.getter() & 1) != 0
        && (StaticProfileBag.isNaturalLightEnabled.getter() & 1) != 0)
      {
        sub_251B3F4F4();
        uint64_t v4 = (void *)sub_251F36100();
        char v5 = (void *)sub_251F36100();
        unint64_t v6 = (void *)sub_251F36100();
        uint64_t v7 = sub_251D3B848(v4);

        swift_bridgeObjectRetain();
        sub_251F35800();
        swift_bridgeObjectRelease();
        static String.hfLocalized(_:)(0xD000000000000017, 0x8000000251F6DE50);
        swift_bridgeObjectRetain();
        sub_251F35800();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v7;
      }
      unsigned __int8 v13 = 12;
      Swift::Int_optional v15 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v13);
      Swift::Int value = v15.value;
      uint64_t v2 = 0xD000000000000019;
      uint64_t v3 = 0x8000000251F72AD0;
      if (!v15.is_nil && value >= 1)
      {
        sub_251B3F4F4();
        Swift::Int_optional v9 = (void *)sub_251F36100();
        uint64_t v10 = (void *)sub_251F36100();
        uint64_t v11 = (void *)sub_251F36100();
        uint64_t v1 = sub_251D3B848(v9);

        return v1;
      }
    }
    else
    {
      uint64_t v2 = 0xD00000000000001ALL;
      uint64_t v3 = 0x8000000251F72AB0;
    }
    uint64_t v1 = static String.hfLocalized(_:)(v2, v3);
    swift_bridgeObjectRelease();
  }
  return v1;
}

uint64_t ActionService.lockStateString.getter()
{
  uint64_t v6 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  char v5 = -100;
  Swift::Int_optional v7 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v5);
  Swift::Int value = v7.value;
  uint64_t result = 0;
  if (!v7.is_nil)
  {
    if (!value)
    {
      uint64_t v4 = 0xD00000000000001FLL;
      uint64_t v3 = 0x8000000251F72B30;
      return static String.hfLocalized(_:)(v4, v3);
    }
    if (value == 1)
    {
      uint64_t v3 = 0x8000000251F72B50;
      uint64_t v4 = 0xD00000000000001DLL;
      return static String.hfLocalized(_:)(v4, v3);
    }
    return 0;
  }
  return result;
}

uint64_t ActionService.motorizedDoorOrWindowString.getter()
{
  uint64_t v13 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  char v12 = -98;
  Swift::Int_optional v14 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v12);
  uint64_t v1 = 0;
  if (!v14.is_nil)
  {
    if (v14.value == 100)
    {
      uint64_t v3 = 0x8000000251F72B10;
      uint64_t v2 = 0xD00000000000001BLL;
    }
    else
    {
      if (v14.value)
      {
        sub_251B3F4F4();
        uint64_t v4 = (void *)sub_251F36100();
        char v5 = (void *)sub_251F36100();
        uint64_t v6 = (void *)sub_251F36100();
        uint64_t v7 = sub_251D3B848(v4);
        uint64_t v9 = v8;

        static String.hfLocalized(_:)(0xD000000000000031, 0x8000000251F6DDE0);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
        uint64_t v10 = swift_allocObject();
        *(_OWORD *)(v10 + 16) = xmmword_251F38650;
        *(void *)(v10 + 56) = MEMORY[0x263F8D310];
        *(void *)(v10 + 64) = sub_251B44770();
        *(void *)(v10 + 32) = v7;
        *(void *)(v10 + 40) = v9;
        uint64_t v1 = sub_251F35720();
        swift_bridgeObjectRelease();
        return v1;
      }
      uint64_t v2 = 0xD00000000000001DLL;
      uint64_t v3 = 0x8000000251F72AF0;
    }
    return static String.hfLocalized(_:)(v2, v3);
  }
  return v1;
}

uint64_t ActionService.securitySystemString.getter()
{
  uint64_t v8 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  char v7 = -96;
  Swift::Int_optional v9 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v7);
  Swift::Int value = v9.value;
  uint64_t result = 0;
  if (!v9.is_nil)
  {
    switch(value)
    {
      case 0:
        uint64_t v3 = "HFCharacteristicValueTargetSecuritySystemStateStayArm";
        goto LABEL_6;
      case 1:
        uint64_t v3 = "HFCharacteristicValueTargetSecuritySystemStateAwayArm";
LABEL_6:
        unint64_t v4 = (unint64_t)(v3 - 32) | 0x8000000000000000;
        uint64_t v5 = 0xD000000000000035;
        goto LABEL_10;
      case 2:
        uint64_t v5 = 0xD000000000000036;
        uint64_t v6 = "HFCharacteristicValueTargetSecuritySystemStateNightArm";
        goto LABEL_9;
      case 3:
        uint64_t v5 = 0xD000000000000034;
        uint64_t v6 = "HFCharacteristicValueTargetSecuritySystemStateDisarm";
LABEL_9:
        unint64_t v4 = (unint64_t)(v6 - 32) | 0x8000000000000000;
LABEL_10:
        uint64_t result = static String.hfLocalized(_:)(v5, v4);
        break;
      default:
        uint64_t result = 0;
        break;
    }
  }
  return result;
}

uint64_t ActionService.switchString.getter()
{
  uint64_t v6 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  unsigned __int8 v5 = 105;
  char v1 = sub_251B457DC(&v5);
  uint64_t result = 0;
  if (v1 != 2)
  {
    if (v1)
    {
      uint64_t v4 = 0x8000000251F72AD0;
      uint64_t v3 = 0xD000000000000019;
    }
    else
    {
      uint64_t v3 = 0xD00000000000001ALL;
      uint64_t v4 = 0x8000000251F72AB0;
    }
    return static String.hfLocalized(_:)(v3, v4);
  }
  return result;
}

uint64_t ActionService.airPurifierString.getter()
{
  uint64_t v8 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  unsigned __int8 v7 = 3;
  char v1 = sub_251B457DC(&v7);
  uint64_t v2 = 0;
  if (v1 != 2)
  {
    BOOL v3 = (v1 & 1) == 0;
    if (v1) {
      uint64_t v4 = 0xD000000000000021;
    }
    else {
      uint64_t v4 = 0xD00000000000001ALL;
    }
    if (v3) {
      uint64_t v5 = 0x8000000251F72AB0;
    }
    else {
      uint64_t v5 = 0x8000000251F6CEB0;
    }
    uint64_t v2 = static String.hfLocalized(_:)(v4, v5);
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t ActionService.televisionString.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0ED0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (int *)type metadata accessor for ActionService();
  uint64_t v6 = *((void *)v5 - 1);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  Swift::Int_optional v9 = (char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  char v12 = (char *)v32 - v11;
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  Swift::Int_optional v15 = (char *)v32 - v14;
  uint64_t v16 = *(void *)(v0 + *(int *)(v13 + 60));
  uint64_t v34 = v16;
  unsigned __int8 v33 = 3;
  char v17 = sub_251B457DC(&v33);
  uint64_t v18 = 0;
  if (v17 != 2)
  {
    if ((v17 & 1) == 0)
    {
      uint64_t v19 = 0xD00000000000001ALL;
      uint64_t v20 = 0x8000000251F72AB0;
      return static String.hfLocalized(_:)(v19, v20);
    }
    uint64_t v34 = v16;
    unsigned __int8 v33 = 4;
    Swift::Int_optional v35 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v33);
    if (v35.is_nil)
    {
LABEL_15:
      uint64_t v20 = 0x8000000251F72AD0;
      uint64_t v19 = 0xD000000000000019;
      return static String.hfLocalized(_:)(v19, v20);
    }
    uint64_t v21 = *(void *)(v1 + v5[14]);
    uint64_t v22 = *(void *)(v21 + 16);
    if (v22)
    {
      Swift::Int value = v35.value;
      uint64_t v24 = v21 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
      uint64_t v25 = v21;
      uint64_t v26 = *(void *)(v6 + 72);
      v32[1] = v25;
      swift_bridgeObjectRetain();
      do
      {
        sub_251E67084(v24, (uint64_t)v12);
        char v27 = &v12[v5[9]];
        if ((v27[8] & 1) == 0 && *(void *)v27 == value)
        {
          sub_251C5E53C((uint64_t)v12, (uint64_t)v4);
          uint64_t v28 = 0;
          goto LABEL_13;
        }
        sub_251E670E8((uint64_t)v12);
        v24 += v26;
        --v22;
      }
      while (v22);
      uint64_t v28 = 1;
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v28 = 1;
    }
LABEL_13:
    (*(void (**)(char *, uint64_t, uint64_t, int *))(v6 + 56))(v4, v28, 1, v5);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v6 + 48))(v4, 1, v5) == 1)
    {
      sub_251E67144((uint64_t)v4);
      goto LABEL_15;
    }
    sub_251C5E53C((uint64_t)v4, (uint64_t)v15);
    uint64_t v18 = ActionService.configuredName.getter();
    uint64_t v31 = v30;
    sub_251C5E53C((uint64_t)v15, (uint64_t)v9);
    if (!v31)
    {
      uint64_t v18 = *(void *)&v9[v5[5]];
      swift_bridgeObjectRetain();
    }
    sub_251E670E8((uint64_t)v9);
  }
  return v18;
}

uint64_t ActionService.thermostatString.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  uint64_t v28 = v1;
  unsigned __int8 v27 = -104;
  Swift::Int_optional v29 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v27);
  uint64_t v2 = 0;
  if (!v29.is_nil)
  {
    Swift::Int value = v29.value;
    uint64_t v28 = v1;
    unsigned __int8 v27 = -94;
    uint64_t v4 = sub_251B46610(&v27);
    if (v5)
    {
      return 0;
    }
    else
    {
      double v6 = *(double *)&v4;
      switch(value)
      {
        case 0:
          return static String.hfLocalized(_:)(0xD00000000000002ALL, 0x8000000251F6DC90);
        case 1:
          uint64_t v7 = "HFServiceControlDescriptionHeaterCoolerHeatingToWithTemperature";
          goto LABEL_11;
        case 2:
          uint64_t v7 = "HFServiceControlDescriptionHeaterCoolerCoolingToWithTemperature";
LABEL_11:
          static String.hfLocalized(_:)(0xD00000000000003FLL, (unint64_t)(v7 - 32) | 0x8000000000000000);
          __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
          uint64_t v22 = swift_allocObject();
          *(_OWORD *)(v22 + 16) = xmmword_251F38650;
          uint64_t v23 = static ClimateSummarizer.temperatureAverageString(_:)(v6);
          uint64_t v25 = v24;
          *(void *)(v22 + 56) = MEMORY[0x263F8D310];
          *(void *)(v22 + 64) = sub_251B44770();
          *(void *)(v22 + 32) = v23;
          *(void *)(v22 + 40) = v25;
          break;
        case 3:
          uint64_t v28 = v1;
          unsigned __int8 v27 = 55;
          uint64_t v8 = sub_251B46610(&v27);
          if (v9) {
            return 0;
          }
          double v10 = *(double *)&v8;
          uint64_t v28 = v1;
          unsigned __int8 v27 = 29;
          uint64_t v11 = sub_251B46610(&v27);
          if (v12) {
            return 0;
          }
          double v13 = *(double *)&v11;
          static String.hfLocalized(_:)(0xD00000000000001BLL, 0x8000000251F6D7C0);
          __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
          uint64_t v14 = swift_allocObject();
          *(_OWORD *)(v14 + 16) = xmmword_251F3A500;
          uint64_t v15 = static ClimateSummarizer.temperatureAverageString(_:)(v10);
          uint64_t v17 = v16;
          uint64_t v18 = MEMORY[0x263F8D310];
          *(void *)(v14 + 56) = MEMORY[0x263F8D310];
          unint64_t v19 = sub_251B44770();
          *(void *)(v14 + 64) = v19;
          *(void *)(v14 + 32) = v15;
          *(void *)(v14 + 40) = v17;
          uint64_t v20 = static ClimateSummarizer.temperatureAverageString(_:)(v13);
          *(void *)(v14 + 96) = v18;
          *(void *)(v14 + 104) = v19;
          *(void *)(v14 + 72) = v20;
          *(void *)(v14 + 80) = v21;
          break;
        default:
          return 0;
      }
      uint64_t v2 = sub_251F35710();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  return v2;
}

uint64_t ActionService.valveString.getter()
{
  uint64_t v8 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  unsigned __int8 v7 = 3;
  char v1 = sub_251B457DC(&v7);
  uint64_t v2 = 0;
  if (v1 != 2)
  {
    BOOL v3 = (v1 & 1) == 0;
    if (v1) {
      uint64_t v4 = 0xD000000000000023;
    }
    else {
      uint64_t v4 = 0xD00000000000001FLL;
    }
    if (v3) {
      uint64_t v5 = 0x8000000251F6DD00;
    }
    else {
      uint64_t v5 = 0x8000000251F6DD80;
    }
    uint64_t v2 = static String.hfLocalized(_:)(v4, v5);
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t ActionService.ventilationFan.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ActionService() + 60));
  uint64_t v13 = v1;
  unsigned __int8 v12 = 3;
  char v2 = sub_251B457DC(&v12);
  uint64_t v3 = 0;
  if (v2 != 2)
  {
    uint64_t v4 = 0xD000000000000019;
    if ((v2 & 1) == 0)
    {
      uint64_t v4 = 0xD00000000000001ALL;
      uint64_t v5 = 0x8000000251F72AB0;
LABEL_7:
      uint64_t v3 = static String.hfLocalized(_:)(v4, v5);
      swift_bridgeObjectRelease();
      return v3;
    }
    uint64_t v13 = v1;
    unsigned __int8 v12 = 115;
    double v6 = COERCE_DOUBLE(sub_251B46610(&v12));
    uint64_t v5 = 0x8000000251F72AD0;
    if ((v7 & 1) != 0 || v6 <= 0.0) {
      goto LABEL_7;
    }
    sub_251B3F4F4();
    uint64_t v8 = (void *)sub_251F360F0();
    char v9 = (void *)sub_251F360F0();
    double v10 = (void *)sub_251F360F0();
    uint64_t v3 = sub_251D3B848(v8);
  }
  return v3;
}

uint64_t sub_251E67084(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ActionService();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_251E670E8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ActionService();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_251E67144(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA0ED0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_251E671A4()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_release();
}

void *sub_251E67208(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  a1[6] = a2[6];
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_retain();
  return a1;
}

void *sub_251E67298(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = a2[1];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[2] = a2[2];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[3] = a2[3];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[4] = a2[4];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[5] = a2[5];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_251E67370(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_unknownObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_release();
  return a1;
}

uint64_t type metadata accessor for CoordinationManagerObject()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_251E67408()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

id sub_251E674A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](a1);
  Swift::Int_optional v35 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v34 - v10;
  uint64_t v13 = *(void *)(v12 + 16);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v9);
  uint64_t v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = *(void *)(v3 + 48);
  unint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v19((char *)&v34 - v20, v18 + *(void *)(*(void *)v18 + 88), v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DF60);
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v41 = 0;
    long long v39 = 0u;
    long long v40 = 0u;
    sub_251A1B064((uint64_t)&v39, &qword_269B9DF68);
    goto LABEL_6;
  }
  sub_251A1A444(&v39, (uint64_t)v42);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v11, a1, a3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CEB8);
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v38 = 0;
    long long v36 = 0u;
    long long v37 = 0u;
    sub_251A1B064((uint64_t)&v36, &qword_269B9DF00);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v42);
LABEL_6:
    v19(v17, v18 + *(void *)(*(void *)v18 + 88), v13);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DF58);
    if (swift_dynamicCast())
    {
      sub_251A1A444(&v39, (uint64_t)v42);
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v35, a1, a3);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CEC8);
      if (swift_dynamicCast())
      {
        sub_251A1A444(&v36, (uint64_t)&v39);
        uint64_t v27 = v43;
        uint64_t v28 = v44;
        __swift_project_boxed_opaque_existential_1(v42, v43);
        uint64_t v29 = *((void *)&v40 + 1);
        uint64_t v30 = v41;
        uint64_t v31 = __swift_project_boxed_opaque_existential_1(&v39, *((uint64_t *)&v40 + 1));
        uint64_t v26 = (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 16))(v31, v29, v30, v27, v28);
        goto LABEL_9;
      }
      uint64_t v38 = 0;
      long long v36 = 0u;
      long long v37 = 0u;
      sub_251A1B064((uint64_t)&v36, &qword_269B9DF08);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v42);
    }
    else
    {
      uint64_t v41 = 0;
      long long v39 = 0u;
      long long v40 = 0u;
      sub_251A1B064((uint64_t)&v39, &qword_269BA1028);
    }
    return objc_msgSend(objc_allocWithZone(MEMORY[0x263F58190]), sel_init);
  }
  sub_251A1A444(&v36, (uint64_t)&v39);
  uint64_t v21 = v43;
  uint64_t v22 = v44;
  __swift_project_boxed_opaque_existential_1(v42, v43);
  uint64_t v23 = *((void *)&v40 + 1);
  uint64_t v24 = v41;
  uint64_t v25 = __swift_project_boxed_opaque_existential_1(&v39, *((uint64_t *)&v40 + 1));
  uint64_t v26 = (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 24))(v25, v23, v24, v21, v22);
LABEL_9:
  uint64_t v32 = v26;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v39);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v42);
  return (id)v32;
}

id sub_251E678D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](a1);
  Swift::Int_optional v35 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v34 - v10;
  uint64_t v13 = *(void *)(v12 + 16);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v9);
  uint64_t v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = *(void *)(v3 + 48);
  unint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v19((char *)&v34 - v20, v18 + *(void *)(*(void *)v18 + 88), v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DF60);
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v41 = 0;
    long long v39 = 0u;
    long long v40 = 0u;
    sub_251A1B064((uint64_t)&v39, &qword_269B9DF68);
    goto LABEL_6;
  }
  sub_251A1A444(&v39, (uint64_t)v42);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v11, a1, a3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CEB8);
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v38 = 0;
    long long v36 = 0u;
    long long v37 = 0u;
    sub_251A1B064((uint64_t)&v36, &qword_269B9DF00);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v42);
LABEL_6:
    v19(v17, v18 + *(void *)(*(void *)v18 + 88), v13);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DF58);
    if (swift_dynamicCast())
    {
      sub_251A1A444(&v39, (uint64_t)v42);
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v35, a1, a3);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CEC8);
      if (swift_dynamicCast())
      {
        sub_251A1A444(&v36, (uint64_t)&v39);
        uint64_t v27 = v43;
        uint64_t v28 = v44;
        __swift_project_boxed_opaque_existential_1(v42, v43);
        uint64_t v29 = *((void *)&v40 + 1);
        uint64_t v30 = v41;
        uint64_t v31 = __swift_project_boxed_opaque_existential_1(&v39, *((uint64_t *)&v40 + 1));
        uint64_t v26 = (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 32))(v31, v29, v30, v27, v28);
        goto LABEL_9;
      }
      uint64_t v38 = 0;
      long long v36 = 0u;
      long long v37 = 0u;
      sub_251A1B064((uint64_t)&v36, &qword_269B9DF08);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v42);
    }
    else
    {
      uint64_t v41 = 0;
      long long v39 = 0u;
      long long v40 = 0u;
      sub_251A1B064((uint64_t)&v39, &qword_269BA1028);
    }
    return objc_msgSend(objc_allocWithZone(MEMORY[0x263F58190]), sel_init);
  }
  sub_251A1A444(&v36, (uint64_t)&v39);
  uint64_t v21 = v43;
  uint64_t v22 = v44;
  __swift_project_boxed_opaque_existential_1(v42, v43);
  uint64_t v23 = *((void *)&v40 + 1);
  uint64_t v24 = v41;
  uint64_t v25 = __swift_project_boxed_opaque_existential_1(&v39, *((uint64_t *)&v40 + 1));
  uint64_t v26 = (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 40))(v25, v23, v24, v21, v22);
LABEL_9:
  uint64_t v32 = v26;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v39);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v42);
  return (id)v32;
}

id sub_251E67D04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](a1);
  Swift::Int_optional v35 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v34 - v10;
  uint64_t v13 = *(void *)(v12 + 16);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v9);
  uint64_t v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = *(void *)(v3 + 48);
  unint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v19((char *)&v34 - v20, v18 + *(void *)(*(void *)v18 + 88), v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DF60);
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v41 = 0;
    long long v39 = 0u;
    long long v40 = 0u;
    sub_251A1B064((uint64_t)&v39, &qword_269B9DF68);
    goto LABEL_6;
  }
  sub_251A1A444(&v39, (uint64_t)v42);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v11, a1, a3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CEB8);
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v38 = 0;
    long long v36 = 0u;
    long long v37 = 0u;
    sub_251A1B064((uint64_t)&v36, &qword_269B9DF00);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v42);
LABEL_6:
    v19(v17, v18 + *(void *)(*(void *)v18 + 88), v13);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DF58);
    if (swift_dynamicCast())
    {
      sub_251A1A444(&v39, (uint64_t)v42);
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v35, a1, a3);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CEC8);
      if (swift_dynamicCast())
      {
        sub_251A1A444(&v36, (uint64_t)&v39);
        uint64_t v27 = v43;
        uint64_t v28 = v44;
        __swift_project_boxed_opaque_existential_1(v42, v43);
        uint64_t v29 = *((void *)&v40 + 1);
        uint64_t v30 = v41;
        uint64_t v31 = __swift_project_boxed_opaque_existential_1(&v39, *((uint64_t *)&v40 + 1));
        uint64_t v26 = (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 24))(v31, v29, v30, v27, v28);
        goto LABEL_9;
      }
      uint64_t v38 = 0;
      long long v36 = 0u;
      long long v37 = 0u;
      sub_251A1B064((uint64_t)&v36, &qword_269B9DF08);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v42);
    }
    else
    {
      uint64_t v41 = 0;
      long long v39 = 0u;
      long long v40 = 0u;
      sub_251A1B064((uint64_t)&v39, &qword_269BA1028);
    }
    return objc_msgSend(objc_allocWithZone(MEMORY[0x263F58190]), sel_init);
  }
  sub_251A1A444(&v36, (uint64_t)&v39);
  uint64_t v21 = v43;
  uint64_t v22 = v44;
  __swift_project_boxed_opaque_existential_1(v42, v43);
  uint64_t v23 = *((void *)&v40 + 1);
  uint64_t v24 = v41;
  uint64_t v25 = __swift_project_boxed_opaque_existential_1(&v39, *((uint64_t *)&v40 + 1));
  uint64_t v26 = (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 32))(v25, v23, v24, v21, v22);
LABEL_9:
  uint64_t v32 = v26;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v39);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v42);
  return (id)v32;
}

uint64_t sub_251E68134()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 88));
  swift_unknownObjectWeakDestroy();
  return v0;
}

uint64_t sub_251E681C0()
{
  sub_251E68134();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ManagerWrapper()
{
  return __swift_instantiateGenericMetadata();
}

HomeDataModel::DeviceDisplayNames __swiftcall DeviceDisplayNames.init(name:roomName:)(Swift::String name, Swift::String_optional roomName)
{
  v2->Swift::Int value = name;
  v2[1] = roomName;
  result.roomName = roomName;
  result.name = name;
  return result;
}

uint64_t DeviceDisplayNames.displayName.getter()
{
  uint64_t v2 = *v0;
  unint64_t v1 = v0[1];
  if (!v0[3]) {
    goto LABEL_11;
  }
  uint64_t v3 = sub_251F35780();
  uint64_t v5 = v4;
  if (v3 == sub_251F35780() && v5 == v6)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_11;
  }
  char v8 = sub_251F36B10();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v8) {
    goto LABEL_11;
  }
  sub_251F35780();
  sub_251F35780();
  sub_251F35800();
  char v9 = sub_251F35870();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v9)
  {
    uint64_t result = sub_251F357C0();
    if (!__OFADD__(result, 1))
    {
      unint64_t v11 = sub_251F357F0();
      swift_bridgeObjectRetain();
      unint64_t v12 = sub_251E68774(v11, v2, v1);
LABEL_16:
      unint64_t v17 = v12;
      uint64_t v18 = v13;
      uint64_t v19 = v14;
      uint64_t v20 = v15;
      swift_bridgeObjectRelease();
      uint64_t v2 = MEMORY[0x2533AA6E0](v17, v18, v19, v20);
      swift_bridgeObjectRelease();
      return v2;
    }
    __break(1u);
    goto LABEL_18;
  }
  sub_251F35780();
  sub_251F35780();
  sub_251F35800();
  swift_bridgeObjectRelease();
  char v16 = sub_251F35880();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v16 & 1) == 0)
  {
LABEL_11:
    swift_bridgeObjectRetain();
    return v2;
  }
  uint64_t result = sub_251F357C0();
  if (!__OFADD__(result, 1))
  {
    sub_251F357F0();
    swift_bridgeObjectRetain();
    unint64_t v12 = sub_251F358C0();
    goto LABEL_16;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t DeviceDisplayNames.displayRoomName.getter()
{
  if (!*(void *)(v0 + 24)) {
    return 0;
  }
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = sub_251F35780();
  uint64_t v4 = v3;
  if (v2 == sub_251F35780() && v4 == v5)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v7 = sub_251F36B10();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0)
    {
      DeviceDisplayNames.displayName.getter();
      sub_251F35780();
      swift_bridgeObjectRelease();
      sub_251F35780();
      char v8 = sub_251F35870();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v8)
      {
        DeviceDisplayNames.displayName.getter();
        sub_251F35780();
        swift_bridgeObjectRelease();
        sub_251F35780();
        sub_251F35800();
        char v9 = sub_251F35870();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        char v10 = v9 ^ 1;
      }
      else
      {
        char v10 = 0;
      }
      DeviceDisplayNames.displayName.getter();
      sub_251F35780();
      swift_bridgeObjectRelease();
      sub_251F35780();
      char v12 = sub_251F35880();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v12)
      {
        DeviceDisplayNames.displayName.getter();
        sub_251F35780();
        swift_bridgeObjectRelease();
        sub_251F35780();
        sub_251F35800();
        swift_bridgeObjectRelease();
        char v13 = sub_251F35880();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (!(v10 & 1 | ((v13 & 1) == 0))) {
          return v1;
        }
      }
      else if ((v10 & 1) == 0)
      {
        return v1;
      }
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

unint64_t sub_251E68774(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (4 * v3 >= result >> 14) {
    return sub_251F358C0();
  }
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for DeviceDisplayNames()
{
  return &type metadata for DeviceDisplayNames;
}

uint64_t sub_251E687D0(uint64_t a1)
{
  uint64_t v2 = a1;
  unint64_t v3 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0) {
    uint64_t v4 = sub_251F36300();
  }
  else {
    uint64_t v4 = *(void *)(a1 + 16);
  }
  uint64_t result = MEMORY[0x263F8EE78];
  if (v4)
  {
    uint64_t v41 = MEMORY[0x263F8EE78];
    sub_251A3E084(0, v4 & ~(v4 >> 63), 0);
    if (v3)
    {
      uint64_t result = sub_251F362A0();
      unsigned __int8 v7 = 1;
    }
    else
    {
      uint64_t result = sub_251B72004(v2);
      unsigned __int8 v7 = v8 & 1;
    }
    uint64_t v38 = result;
    uint64_t v39 = v6;
    unsigned __int8 v40 = v7;
    if (v4 < 0)
    {
      __break(1u);
LABEL_25:
      __break(1u);
    }
    else
    {
      v31[1] = v1;
      uint64_t v9 = v2 & 0xFFFFFFFFFFFFFF8;
      if (v2 < 0) {
        uint64_t v9 = v2;
      }
      uint64_t v33 = v9;
      uint64_t v10 = sub_251F34DA0();
      uint64_t v11 = v10;
      uint64_t v12 = *(void *)(v10 - 8);
      uint64_t v35 = *(void *)(v12 + 64);
      uint64_t v36 = v12;
      uint64_t v34 = v12 + 32;
      uint64_t v32 = v10;
      do
      {
        while (1)
        {
          MEMORY[0x270FA5388](v10);
          uint64_t v23 = (char *)v31 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
          sub_251A5455C(v38, v39, v40, v2);
          uint64_t v25 = v24;
          id v26 = objc_msgSend(v24, sel_uniqueIdentifier);
          sub_251F34D80();

          uint64_t v27 = v41;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_251A3E084(0, *(void *)(v27 + 16) + 1, 1);
            uint64_t v27 = v41;
          }
          unint64_t v29 = *(void *)(v27 + 16);
          unint64_t v28 = *(void *)(v27 + 24);
          if (v29 >= v28 >> 1)
          {
            sub_251A3E084(v28 > 1, v29 + 1, 1);
            uint64_t v27 = v41;
          }
          *(void *)(v27 + 16) = v29 + 1;
          uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v36 + 32))(v27+ ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))+ *(void *)(v36 + 72) * v29, v23, v11);
          uint64_t v41 = v27;
          if (v3) {
            break;
          }
          uint64_t v13 = v38;
          uint64_t v14 = v39;
          char v15 = v40;
          uint64_t v16 = sub_251A53F5C(v38, v39, v40, v2);
          uint64_t v17 = v2;
          uint64_t v19 = v18;
          char v21 = v20;
          uint64_t v10 = sub_251A4ECE4(v13, v14, v15);
          uint64_t v38 = v16;
          uint64_t v39 = v19;
          uint64_t v2 = v17;
          unint64_t v3 = 0;
          uint64_t v11 = v32;
          unsigned __int8 v40 = v21 & 1;
          if (!--v4) {
            goto LABEL_22;
          }
        }
        if ((v40 & 1) == 0) {
          goto LABEL_25;
        }
        if (sub_251F362C0()) {
          swift_isUniquelyReferenced_nonNull_native();
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4DD0);
        uint64_t v30 = (uint64_t (*)(unsigned char *, void))sub_251F35E80();
        sub_251F36370();
        uint64_t v10 = v30(v37, 0);
        --v4;
      }
      while (v4);
LABEL_22:
      sub_251A4ECE4(v38, v39, v40);
      return v41;
    }
  }
  return result;
}

void sub_251E68B20(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_251F362B0();
    sub_251A1A568(0, &qword_269B9D128);
    sub_251E6A344();
    sub_251F35E90();
    uint64_t v1 = v29;
    uint64_t v28 = v30;
    uint64_t v3 = v31;
    uint64_t v2 = v32;
    unint64_t v4 = v33;
  }
  else
  {
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v28 = a1 + 56;
    uint64_t v3 = ~v5;
    uint64_t v6 = -v5;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v4 = v7 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v2 = 0;
  }
  int64_t v27 = (unint64_t)(v3 + 64) >> 6;
  id v26 = (void *)MEMORY[0x263F8EE78];
  while (1)
  {
    uint64_t v8 = v2;
    if ((v1 & 0x8000000000000000) == 0) {
      break;
    }
    if (!sub_251F36340()) {
      goto LABEL_38;
    }
    sub_251A1A568(0, &qword_269B9D128);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v11 = v34;
    swift_unknownObjectRelease();
    if (!v34) {
      goto LABEL_38;
    }
LABEL_31:
    id v15 = v11;
    id v16 = objc_msgSend(v15, sel_accessory);
    if (v16)
    {
      id v17 = v16;
      id v18 = objc_msgSend(v17, sel_name);
      uint64_t v25 = sub_251F356F0();
      uint64_t v20 = v19;

      char v21 = v26;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        char v21 = sub_251F0E8B8(0, v26[2] + 1, 1, v26);
      }
      unint64_t v23 = v21[2];
      unint64_t v22 = v21[3];
      if (v23 >= v22 >> 1) {
        char v21 = sub_251F0E8B8((void *)(v22 > 1), v23 + 1, 1, v21);
      }
      _OWORD v21[2] = v23 + 1;
      id v26 = v21;
      uint64_t v24 = &v21[2 * v23];
      v24[4] = v25;
      v24[5] = v20;
    }
    else
    {
    }
  }
  if (v4)
  {
    unint64_t v9 = __clz(__rbit64(v4));
    v4 &= v4 - 1;
    unint64_t v10 = v9 | (v2 << 6);
LABEL_30:
    id v11 = *(id *)(*(void *)(v1 + 48) + 8 * v10);
    if (!v11) {
      goto LABEL_38;
    }
    goto LABEL_31;
  }
  int64_t v12 = v2 + 1;
  if (!__OFADD__(v2, 1))
  {
    if (v12 >= v27) {
      goto LABEL_38;
    }
    unint64_t v13 = *(void *)(v28 + 8 * v12);
    ++v2;
    if (!v13)
    {
      uint64_t v2 = v8 + 2;
      if (v8 + 2 >= v27) {
        goto LABEL_38;
      }
      unint64_t v13 = *(void *)(v28 + 8 * v2);
      if (!v13)
      {
        uint64_t v2 = v8 + 3;
        if (v8 + 3 >= v27) {
          goto LABEL_38;
        }
        unint64_t v13 = *(void *)(v28 + 8 * v2);
        if (!v13)
        {
          uint64_t v2 = v8 + 4;
          if (v8 + 4 >= v27) {
            goto LABEL_38;
          }
          unint64_t v13 = *(void *)(v28 + 8 * v2);
          if (!v13)
          {
            uint64_t v2 = v8 + 5;
            if (v8 + 5 >= v27) {
              goto LABEL_38;
            }
            unint64_t v13 = *(void *)(v28 + 8 * v2);
            if (!v13)
            {
              uint64_t v14 = v8 + 6;
              while (v27 != v14)
              {
                unint64_t v13 = *(void *)(v28 + 8 * v14++);
                if (v13)
                {
                  uint64_t v2 = v14 - 1;
                  goto LABEL_29;
                }
              }
LABEL_38:
              sub_251A1E630();
              return;
            }
          }
        }
      }
    }
LABEL_29:
    unint64_t v4 = (v13 - 1) & v13;
    unint64_t v10 = __clz(__rbit64(v13)) + (v2 << 6);
    goto LABEL_30;
  }
  __break(1u);
}

void Action.MediaPlaybackAction.init(action:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_state);
  id v5 = objc_msgSend(a1, sel_mediaProfiles);
  sub_251A1A568(0, &qword_269B9D128);
  sub_251E6A344();
  uint64_t v6 = sub_251F35E40();

  uint64_t v7 = sub_251E687D0(v6);
  swift_bridgeObjectRelease();
  uint64_t v18 = sub_251EE04F8(v7);
  swift_bridgeObjectRelease();
  id v8 = objc_msgSend(a1, sel_volume);
  unint64_t v9 = v8;
  if (v8)
  {
    objc_msgSend(v8, sel_doubleValue);
    uint64_t v11 = v10;
  }
  else
  {
    uint64_t v11 = 0;
  }
  if (qword_269B9C338 != -1) {
    swift_once();
  }
  if (byte_269B9FF88 != 1) {
    goto LABEL_9;
  }
  id v12 = objc_msgSend(a1, sel_mediaProfiles);
  uint64_t v13 = sub_251F35E40();

  sub_251E68B20(v13);
  uint64_t v15 = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = sub_251EE16B8(v15);
  swift_bridgeObjectRelease();
  if (byte_269B9FF88 == 1)
  {
  }
  else
  {
LABEL_9:

    swift_bridgeObjectRelease();
    uint64_t v16 = 0;
  }
  unint64_t v17 = 0x5000403020100uLL >> (8 * v4);
  *(void *)a2 = v18;
  if ((unint64_t)v4 >= 7) {
    LOBYTE(v17) = 0;
  }
  *(unsigned char *)(a2 + 8) = v17;
  *(void *)(a2 + 16) = v11;
  *(unsigned char *)(a2 + 24) = v9 == 0;
  *(void *)(a2 + 32) = v16;
}

uint64_t sub_251E69108(void *a1, char a2)
{
  uint64_t v4 = *v2;
  uint64_t v5 = v2[4];
  id v6 = objc_msgSend(a1, sel_accessories);
  sub_251A1A568(0, (unint64_t *)&qword_26B21EAF8);
  unint64_t v7 = sub_251F35AC0();

  unint64_t v8 = v7 >> 62;
  uint64_t v93 = v4;
  unint64_t v83 = v7;
  uint64_t v76 = v5;
  if (a2)
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
  }
  else
  {
    uint64_t v9 = sub_251F34DA0();
    uint64_t v10 = sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v79 = v10;
    uint64_t v95 = sub_251F35E60();
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    MEMORY[0x270FA5388](v11 - 8);
    uint64_t v78 = (char *)v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    unint64_t v75 = v7 >> 62;
    v74[1] = v13;
    if (v8) {
      goto LABEL_25;
    }
    uint64_t v14 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    while (v14)
    {
      uint64_t v15 = 0;
      unint64_t v77 = v7 + 32;
      uint64_t v81 = v9 - 8;
      unint64_t v82 = v7 & 0xC000000000000001;
      uint64_t v89 = v4 + 56;
      uint64_t v92 = (char *)v9;
      unint64_t v80 = v14;
      while (1)
      {
        id v16 = v82 ? (id)MEMORY[0x2533AB3A0](v15, v7) : *(id *)(v77 + 8 * (void)v15);
        unint64_t v17 = v16;
        BOOL v18 = __OFADD__(v15, 1);
        uint64_t v15 = (void *)((char *)v15 + 1);
        if (v18) {
          break;
        }
        id v19 = objc_msgSend(v16, sel_mediaProfile);

        if (v19)
        {
          uint64_t v84 = v15;
          id v20 = v19;
          id v21 = objc_msgSend(v20, sel_uniqueIdentifier);
          uint64_t v85 = v74;
          unint64_t v22 = *(void **)v81;
          int v90 = *(void (**)(void, void, void))(*(void *)v81 + 64);
          MEMORY[0x270FA5388](v21);
          uint64_t v24 = (char *)v74 - v23;
          sub_251F34D80();

          uint64_t v25 = *(void *)(v4 + 16);
          id v86 = v20;
          char v87 = v22;
          char v91 = v24;
          if (v25
            && (uint64_t v26 = sub_251F35600(),
                uint64_t v27 = -1 << *(unsigned char *)(v4 + 32),
                unint64_t v28 = v26 & ~v27,
                ((*(void *)(v89 + ((v28 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v28) & 1) != 0))
          {
            uint64_t v88 = ~v27;
            uint64_t v31 = (void (*)(char *, unint64_t, char *))v22[2];
            uint64_t v30 = v22 + 2;
            uint64_t v29 = v31;
            uint64_t v32 = v30[7];
            do
            {
              MEMORY[0x270FA5388](v26);
              uint64_t v34 = (char *)v74 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
              uint64_t v35 = v92;
              v29(v34, *(void *)(v93 + 48) + v32 * v28, v92);
              sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
              char v36 = sub_251F35650();
              uint64_t v26 = ((uint64_t (*)(char *, char *))*(v30 - 1))(v34, v35);
              if (v36) {
                break;
              }
              unint64_t v28 = (v28 + 1) & v88;
            }
            while (((*(void *)(v89 + ((v28 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v28) & 1) != 0);
          }
          else
          {
            char v36 = 0;
          }
          long long v37 = v87;
          uint64_t v38 = (void (*)(void *, char *))v87[1];
          uint64_t v9 = (uint64_t)v92;
          v38(v91, v92);
          id v39 = v86;

          if (v36)
          {
            uint64_t v88 = (uint64_t)v38;
            char v91 = v74;
            uint64_t v41 = v90;
            MEMORY[0x270FA5388](v40);
            unint64_t v42 = ((unint64_t)v41 + 15) & 0xFFFFFFFFFFFFFFF0;
            id v43 = v39;
            id v44 = objc_msgSend(v43, sel_uniqueIdentifier);
            sub_251F34D80();

            uint64_t v45 = (void (*)(void))v37[4];
            uint64_t v46 = v78;
            v45();

            ((void (*)(char *, void, uint64_t, uint64_t))v37[7])(v46, 0, 1, v9);
            uint64_t v47 = ((uint64_t (*)(char *, uint64_t, uint64_t))v37[6])(v46, 1, v9);
            if (v47 == 1) {
              goto LABEL_27;
            }
            uint64_t v48 = MEMORY[0x270FA5388](v47);
            MEMORY[0x270FA5388](v48);
            ((void (*)(char *, char *, char *))v45)((char *)v74 - v42, v46, v92);
            uint64_t v9 = (uint64_t)v92;
            sub_251A637B8((char *)v74 - v42, (char *)v74 - v42);
            ((void (*)(char *, uint64_t))v88)((char *)v74 - v42, v9);
          }
          else
          {
          }
          uint64_t v4 = v93;
          unint64_t v7 = v83;
          uint64_t v15 = v84;
          uint64_t v14 = v80;
        }
        if (v15 == (void *)v14) {
          goto LABEL_26;
        }
      }
      __break(1u);
LABEL_25:
      swift_bridgeObjectRetain();
      uint64_t v14 = sub_251F366C0();
      swift_bridgeObjectRelease();
    }
LABEL_26:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v78, 1, 1, v9);
LABEL_27:
    unint64_t v7 = v83;
    swift_bridgeObjectRelease_n();
    uint64_t v49 = v95;
    uint64_t v4 = v93;
    if (*(void *)(v95 + 16) <= *(void *)(v93 + 16) >> 3)
    {
      uint64_t v95 = v93;
      swift_bridgeObjectRetain();
      sub_251AAD928(v49);
      swift_bridgeObjectRelease();
      uint64_t v50 = (void *)v95;
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v50 = (void *)sub_251AAE2A0(v49, v4);
      swift_bridgeObjectRelease();
    }
    unint64_t v8 = v75;
    if (v50[2])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_251E6A604();
      swift_allocError();
      *(void *)uint64_t v51 = v50;
      *(unsigned char *)(v51 + 8) = 1;
      swift_willThrow();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)v50;
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v52 = sub_251A1A568(0, &qword_269B9D128);
  unint64_t v53 = sub_251E6A344();
  swift_bridgeObjectRetain();
  uint64_t v78 = (char *)v53;
  uint64_t v79 = v52;
  uint64_t result = sub_251F35E60();
  uint64_t v95 = result;
  if (!v8)
  {
    uint64_t v55 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v55) {
      goto LABEL_35;
    }
LABEL_53:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v72 = objc_allocWithZone(MEMORY[0x263F0E510]);
    uint64_t v73 = (void *)sub_251F35E30();
    swift_bridgeObjectRelease();
    uint64_t v50 = objc_msgSend(v72, sel_initWithMediaProfiles_playbackState_volume_, v73, 4, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return (uint64_t)v50;
  }
  swift_bridgeObjectRetain();
  uint64_t v55 = sub_251F366C0();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v55) {
    goto LABEL_53;
  }
LABEL_35:
  if (v55 >= 1)
  {
    id v56 = 0;
    uint64_t v81 = v55;
    unint64_t v82 = v7 & 0xC000000000000001;
    unint64_t v80 = v7 + 32;
    char v91 = (void *)(v4 + 56);
    do
    {
      if (v82) {
        id v58 = (id)MEMORY[0x2533AB3A0](v56, v7);
      }
      else {
        id v58 = *(id *)(v80 + 8 * (void)v56);
      }
      uint64_t v59 = v58;
      id v60 = objc_msgSend(v58, sel_mediaProfile);

      if (v60)
      {
        id v86 = v56;
        uint64_t v85 = v60;
        id v61 = objc_msgSend(v85, sel_uniqueIdentifier);
        uint64_t v62 = sub_251F34DA0();
        uint64_t v84 = v74;
        char v87 = *(void **)(v62 - 8);
        uint64_t v63 = v87[8];
        MEMORY[0x270FA5388](v62);
        uint64_t v92 = (char *)v74 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
        sub_251F34D80();

        if (*(void *)(v4 + 16)
          && (sub_251A1A8EC((unint64_t *)&qword_26B21F2B0),
              uint64_t v64 = sub_251F35600(),
              uint64_t v65 = -1 << *(unsigned char *)(v4 + 32),
              unint64_t v66 = v64 & ~v65,
              ((*(void *)((char *)v91 + ((v66 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v66) & 1) != 0))
        {
          uint64_t v88 = ~v65;
          int v67 = (void (*)(void, void, void))v87[2];
          uint64_t v89 = v87[9];
          int v90 = v67;
          uint64_t v68 = (uint64_t (**)(char *, uint64_t))(v87 + 1);
          while (1)
          {
            MEMORY[0x270FA5388](v64);
            v90((char *)v74 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0), *(void *)(v4 + 48) + v89 * v66, v62);
            sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
            char v69 = sub_251F35650();
            int v70 = *v68;
            uint64_t v64 = (*v68)((char *)v74 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0), v62);
            if (v69) {
              break;
            }
            unint64_t v66 = (v66 + 1) & v88;
            uint64_t v4 = v93;
            if (((*(void *)((char *)v91 + ((v66 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v66) & 1) == 0) {
              goto LABEL_37;
            }
          }
          v70(v92, v62);
          id v71 = v85;

          sub_251A641AC(v94, v71);
          uint64_t v4 = v93;
        }
        else
        {
LABEL_37:
          ((void (*)(char *, uint64_t))v87[1])(v92, v62);
          id v57 = v85;
        }
        unint64_t v7 = v83;
        uint64_t v55 = v81;
        id v56 = v86;
      }
      id v56 = (char *)v56 + 1;
    }
    while (v56 != (id)v55);
    goto LABEL_53;
  }
  __break(1u);
  return result;
}

uint64_t Action.MediaPlaybackAction.debugDescription.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  sub_251F36400();
  sub_251F35800();
  sub_251F36640();
  sub_251F35800();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4DC0);
  sub_251F35770();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  if (v1)
  {
    sub_251F35E50();
    sub_251F35800();
    sub_251F34DA0();
    sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
    swift_bridgeObjectRetain();
    sub_251F35E50();
    sub_251F35800();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_251F35800();
  }
  else
  {
    sub_251F34DA0();
    sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
    swift_bridgeObjectRetain();
    sub_251F35E50();
    swift_bridgeObjectRelease();
  }
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  return 0;
}

uint64_t Action.MediaPlaybackAction.mediaProfiles.getter()
{
  return swift_bridgeObjectRetain();
}

void Action.MediaPlaybackAction.state.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 8);
}

uint64_t Action.MediaPlaybackAction.volume.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t Action.MediaPlaybackAction.hash(into:)(long long *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)v2;
  int v5 = *(unsigned __int8 *)(v2 + 24);
  uint64_t v6 = *(void *)(v2 + 32);
  swift_bridgeObjectRetain();
  sub_251A54708(a1, v4);
  swift_bridgeObjectRelease();
  sub_251F36CB0();
  if (v5 != 1)
  {
    sub_251F36CC0();
    sub_251F36CF0();
    if (v6) {
      goto LABEL_3;
    }
    return sub_251F36CC0();
  }
  sub_251F36CC0();
  if (!v6) {
    return sub_251F36CC0();
  }
LABEL_3:
  sub_251F36CC0();
  swift_bridgeObjectRetain();
  sub_251A54570((uint64_t)a1, v6);
  return swift_bridgeObjectRelease();
}

uint64_t Action.MediaPlaybackAction.hashValue.getter()
{
  uint64_t v1 = *(void *)v0;
  int v2 = *(unsigned __int8 *)(v0 + 24);
  uint64_t v3 = *(void *)(v0 + 32);
  sub_251F36CA0();
  swift_bridgeObjectRetain();
  sub_251A54708(v5, v1);
  swift_bridgeObjectRelease();
  sub_251F36CB0();
  if (v2 != 1)
  {
    sub_251F36CC0();
    sub_251F36CF0();
    if (v3) {
      goto LABEL_3;
    }
LABEL_5:
    sub_251F36CC0();
    return sub_251F36D00();
  }
  sub_251F36CC0();
  if (!v3) {
    goto LABEL_5;
  }
LABEL_3:
  sub_251F36CC0();
  swift_bridgeObjectRetain();
  sub_251A54570((uint64_t)v5, v3);
  swift_bridgeObjectRelease();
  return sub_251F36D00();
}

uint64_t sub_251E6A05C()
{
  uint64_t v1 = *(void *)v0;
  int v2 = *(unsigned __int8 *)(v0 + 24);
  uint64_t v3 = *(void *)(v0 + 32);
  sub_251F36CA0();
  swift_bridgeObjectRetain();
  sub_251A54708(v5, v1);
  swift_bridgeObjectRelease();
  sub_251F36CB0();
  if (v2 != 1)
  {
    sub_251F36CC0();
    sub_251F36CF0();
    if (v3) {
      goto LABEL_3;
    }
LABEL_5:
    sub_251F36CC0();
    return sub_251F36D00();
  }
  sub_251F36CC0();
  if (!v3) {
    goto LABEL_5;
  }
LABEL_3:
  sub_251F36CC0();
  swift_bridgeObjectRetain();
  sub_251A54570((uint64_t)v5, v3);
  swift_bridgeObjectRelease();
  return sub_251F36D00();
}

uint64_t Action.MediaPlaybackAction.mediaAccessoriesDescription.getter()
{
  if (*(void *)(v0 + 32))
  {
    uint64_t v3 = sub_251F35E50();
    sub_251F35800();
    sub_251F34DA0();
    sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
    swift_bridgeObjectRetain();
    sub_251F35E50();
    sub_251F35800();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_251F35800();
    return v3;
  }
  else
  {
    sub_251F34DA0();
    sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
    swift_bridgeObjectRetain();
    uint64_t v1 = sub_251F35E50();
    swift_bridgeObjectRelease();
  }
  return v1;
}

uint64_t _s13HomeDataModel6ActionO013MediaPlaybackD0V2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 8);
  double v3 = *(double *)(a1 + 16);
  char v4 = *(unsigned char *)(a1 + 24);
  uint64_t v5 = *(void *)(a1 + 32);
  int v6 = *(unsigned __int8 *)(a2 + 8);
  double v7 = *(double *)(a2 + 16);
  int v8 = *(unsigned __int8 *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  char v10 = sub_251B04848(*(void *)a1, *(void *)a2);
  uint64_t result = 0;
  if ((v10 & 1) != 0 && v2 == v6)
  {
    if (v4)
    {
      if (!v8) {
        return 0;
      }
    }
    else
    {
      if (v3 == v7) {
        char v12 = v8;
      }
      else {
        char v12 = 1;
      }
      if (v12) {
        return 0;
      }
    }
    if (v5)
    {
      if (!v9) {
        return 0;
      }
      swift_bridgeObjectRetain();
      uint64_t v13 = swift_bridgeObjectRetain();
      char v14 = sub_251B04D30(v13, v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v14 & 1) == 0) {
        return 0;
      }
    }
    else if (v9)
    {
      return 0;
    }
    return 1;
  }
  return result;
}

unint64_t sub_251E6A344()
{
  unint64_t result = qword_269BA4940;
  if (!qword_269BA4940)
  {
    sub_251A1A568(255, &qword_269B9D128);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4940);
  }
  return result;
}

unint64_t sub_251E6A3A4()
{
  unint64_t result = qword_269BA4DC8;
  if (!qword_269BA4DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4DC8);
  }
  return result;
}

uint64_t _s19MediaPlaybackActionVwxx()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s19MediaPlaybackActionVwcp(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s19MediaPlaybackActionVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s19MediaPlaybackActionVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s19MediaPlaybackActionVwet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s19MediaPlaybackActionVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Action.MediaPlaybackAction()
{
  return &type metadata for Action.MediaPlaybackAction;
}

unint64_t sub_251E6A604()
{
  unint64_t result = qword_269BA4DD8;
  if (!qword_269BA4DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4DD8);
  }
  return result;
}

uint64_t _s19MediaPlaybackActionV5ErrorOwCP(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_251E6A6A0(*(void *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

uint64_t sub_251E6A6A0(uint64_t a1, char a2)
{
  if (a2) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t _s19MediaPlaybackActionV5ErrorOwxx(uint64_t a1)
{
  return sub_251E6A6BC(*(void *)a1, *(unsigned char *)(a1 + 8));
}

uint64_t sub_251E6A6BC(uint64_t a1, char a2)
{
  if (a2) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s19MediaPlaybackActionV5ErrorOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_251E6A6A0(*(void *)a2, v4);
  uint64_t v5 = *(void *)a1;
  char v6 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  sub_251E6A6BC(v5, v6);
  return a1;
}

uint64_t _s19MediaPlaybackActionV5ErrorOwta(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  char v4 = *((unsigned char *)a2 + 8);
  uint64_t v5 = *(void *)a1;
  char v6 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  sub_251E6A6BC(v5, v6);
  return a1;
}

ValueMetadata *_s19MediaPlaybackActionV5ErrorOMa()
{
  return &_s19MediaPlaybackActionV5ErrorON;
}

uint64_t SpeakersAndTelevisionsCategoryInformation.stateSnapshot.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_251E6DEC0(v1, a1, type metadata accessor for StateSnapshot);
}

uint64_t SpeakersAndTelevisionsCategoryInformation.id.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for SpeakersAndTelevisionsCategoryInformation();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for SpeakersAndTelevisionsCategoryInformation()
{
  uint64_t result = qword_269BA4E08;
  if (!qword_269BA4E08) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t SpeakersAndTelevisionsCategoryInformation.categoryStaticAccessories.getter()
{
  type metadata accessor for SpeakersAndTelevisionsCategoryInformation();
  return swift_bridgeObjectRetain();
}

uint64_t static SpeakersAndTelevisionsCategoryInformation.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  if ((_s13HomeDataModel13StateSnapshotV2eeoiySbAC_ACtFZ_0(a1, a2) & 1) == 0) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for SpeakersAndTelevisionsCategoryInformation();
  if ((sub_251DB1CC8(*((unsigned char *)a1 + *(int *)(v4 + 20)), *((unsigned char *)a2 + *(int *)(v4 + 20))) & 1) == 0) {
    return 0;
  }
  uint64_t v5 = *(int *)(v4 + 24);
  uint64_t v6 = *(uint64_t *)((char *)a1 + v5);
  uint64_t v7 = *(uint64_t *)((char *)a2 + v5);
  return sub_251B04FB8(v6, v7);
}

uint64_t SpeakersAndTelevisionsCategoryInformation.hash(into:)(long long *a1)
{
  StateSnapshot.hash(into:)(a1);
  uint64_t v3 = type metadata accessor for SpeakersAndTelevisionsCategoryInformation();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(v1 + *(int *)(v3 + 24));
  swift_bridgeObjectRetain();
  sub_251A54A64(a1, v4);
  return swift_bridgeObjectRelease();
}

uint64_t SpeakersAndTelevisionsCategoryInformation.hashValue.getter()
{
  sub_251F36CA0();
  StateSnapshot.hash(into:)(v3);
  uint64_t v1 = type metadata accessor for SpeakersAndTelevisionsCategoryInformation();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  sub_251A54A64(v3, *(void *)(v0 + *(int *)(v1 + 24)));
  return sub_251F36D00();
}

uint64_t sub_251E6AB40@<X0>(uint64_t a1@<X8>)
{
  return sub_251E6DEC0(v1, a1, type metadata accessor for StateSnapshot);
}

uint64_t sub_251E6AB74()
{
  if (SpeakersAndTelevisionsCategoryInformation.activeMediaCount(stateSnapshot:)(v0)) {
    return 0;
  }
  else {
    return static String.hfLocalized(_:)(0xD00000000000002CLL, 0x8000000251F72CA0);
  }
}

uint64_t SpeakersAndTelevisionsCategoryInformation.summary.getter()
{
  if (SpeakersAndTelevisionsCategoryInformation.activeMediaCount(stateSnapshot:)(v0)) {
    return 0;
  }
  else {
    return static String.hfLocalized(_:)(0xD00000000000002CLL, 0x8000000251F72CA0);
  }
}

uint64_t sub_251E6AC0C()
{
  uint64_t result = SpeakersAndTelevisionsCategoryInformation.activeMediaCount(stateSnapshot:)(v0);
  if (result) {
    return sub_251F36AB0();
  }
  return result;
}

uint64_t SpeakersAndTelevisionsCategoryInformation.shortSummary.getter()
{
  uint64_t result = SpeakersAndTelevisionsCategoryInformation.activeMediaCount(stateSnapshot:)(v0);
  if (result) {
    return sub_251F36AB0();
  }
  return result;
}

void *SpeakersAndTelevisionsCategoryInformation.statusItems.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4DE0);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = &v27[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4DE8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = &v27[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for StateSnapshot(0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = &v27[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_251E6DEC0(v0, (uint64_t)v9, type metadata accessor for StateSnapshot);
  uint64_t v10 = sub_251AACD70();
  uint64_t v11 = swift_bridgeObjectRetain();
  uint64_t v12 = sub_251EDC460(v11);
  v29[2] = v9;
  uint64_t v13 = sub_251B1E514((uint64_t)sub_251E6DE80, (uint64_t)v29, v12);
  uint64_t v14 = swift_bridgeObjectRetain();
  uint64_t v15 = sub_251EDC738(v14);
  uint64_t v28 = v0;
  uint64_t v16 = sub_251B1E5B0((uint64_t)sub_251E6DEA0, (uint64_t)v27, v15);
  *(_OWORD *)&v33[56] = xmmword_251F3A500;
  sub_251B53804(v13, v16, (uint64_t)v6);
  uint64_t v17 = type metadata accessor for SpeakerStatusItem(0);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v6, 1, v17) == 1)
  {
    sub_251A1B064((uint64_t)v6, &qword_269BA4DE8);
    long long v34 = 0u;
    long long v35 = 0u;
    char v36 = 0;
  }
  else
  {
    *((void *)&v35 + 1) = v17;
    char v36 = &off_270268C98;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v34);
    sub_251E6DF28((uint64_t)v6, (uint64_t)boxed_opaque_existential_1, type metadata accessor for SpeakerStatusItem);
  }
  sub_251B54AEC(v10, (uint64_t)v3);
  uint64_t v19 = type metadata accessor for TelevisionStatusItem(0);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48))(v3, 1, v19) == 1)
  {
    sub_251A1B064((uint64_t)v3, &qword_269BA4DE0);
    long long v37 = 0u;
    long long v38 = 0u;
    id v39 = 0;
  }
  else
  {
    *((void *)&v38 + 1) = v19;
    id v39 = &off_270268CC0;
    id v20 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v37);
    sub_251E6DF28((uint64_t)v3, (uint64_t)v20, type metadata accessor for TelevisionStatusItem);
  }
  sub_251A1B128((uint64_t)&v34, (uint64_t)v33, &qword_269B9D720);
  sub_251AAFC70((uint64_t)v33, (uint64_t)&v30);
  if (v31)
  {
    sub_251A1A444(&v30, (uint64_t)v32);
    sub_251A1A444(v32, (uint64_t)&v30);
    id v21 = (void *)MEMORY[0x263F8EE78];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v21 = sub_251F0FD30(0, v21[2] + 1, 1, v21);
    }
    unint64_t v23 = v21[2];
    unint64_t v22 = v21[3];
    if (v23 >= v22 >> 1) {
      id v21 = sub_251F0FD30((void *)(v22 > 1), v23 + 1, 1, v21);
    }
    _OWORD v21[2] = v23 + 1;
    sub_251A1A444(&v30, (uint64_t)&v21[5 * v23 + 4]);
  }
  else
  {
    sub_251A1B064((uint64_t)&v30, &qword_269B9D720);
    id v21 = (void *)MEMORY[0x263F8EE78];
  }
  sub_251A1B128((uint64_t)&v37, (uint64_t)v33, &qword_269B9D720);
  sub_251AAFC70((uint64_t)v33, (uint64_t)&v30);
  if (v31)
  {
    sub_251A1A444(&v30, (uint64_t)v32);
    sub_251A1A444(v32, (uint64_t)&v30);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v21 = sub_251F0FD30(0, v21[2] + 1, 1, v21);
    }
    unint64_t v25 = v21[2];
    unint64_t v24 = v21[3];
    if (v25 >= v24 >> 1) {
      id v21 = sub_251F0FD30((void *)(v24 > 1), v25 + 1, 1, v21);
    }
    _OWORD v21[2] = v25 + 1;
    sub_251A1A444(&v30, (uint64_t)&v21[5 * v25 + 4]);
  }
  else
  {
    sub_251A1B064((uint64_t)&v30, &qword_269B9D720);
  }
  sub_251E6E93C((uint64_t)v9, type metadata accessor for StateSnapshot);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D720);
  swift_arrayDestroy();
  return v21;
}

uint64_t SpeakersAndTelevisionsCategoryInformation.init(stateSnapshot:umbrellaCategory:room:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  v31[0] = a3;
  uint64_t v5 = type metadata accessor for StateSnapshot(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)v31 - v9;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D138);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for SpeakersAndTelevisionsCategoryInformation();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251E6DEC0(a1, (uint64_t)v17, type metadata accessor for StateSnapshot);
  v17[*(int *)(v14 + 20)] = 3;
  sub_251A1B128(a2, (uint64_t)v13, &qword_269B9D138);
  uint64_t v18 = type metadata accessor for StaticRoom(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v13, 1, v18) == 1)
  {
    sub_251A1B064((uint64_t)v13, &qword_269B9D138);
    sub_251E6DEC0(a1, (uint64_t)v10, type metadata accessor for StateSnapshot);
  }
  else
  {
    uint64_t v19 = swift_bridgeObjectRetain();
    uint64_t v20 = sub_251EDCBC8(v19);
    sub_251E6E93C((uint64_t)v13, type metadata accessor for StaticRoom);
    sub_251E6DEC0(a1, (uint64_t)v10, type metadata accessor for StateSnapshot);
    if (v20) {
      goto LABEL_5;
    }
  }
  uint64_t v21 = swift_bridgeObjectRetain();
  uint64_t v20 = sub_251EDCBC8(v21);
LABEL_5:
  sub_251E6E93C((uint64_t)v10, type metadata accessor for StateSnapshot);
  uint64_t v22 = sub_251E6DA98(v20);
  *(void *)&v17[*(int *)(v14 + 24)] = v22;
  swift_retain();
  uint64_t v23 = swift_bridgeObjectRetain();
  uint64_t v24 = *(void *)(sub_251EDC460(v23) + 16);
  swift_bridgeObjectRelease();
  sub_251E6DEC0(a1, (uint64_t)v8, type metadata accessor for StateSnapshot);
  if (v24)
  {
    sub_251E6E93C((uint64_t)v8, type metadata accessor for StateSnapshot);
    uint64_t v25 = v31[0];
LABEL_8:
    swift_release();
    sub_251A1B064(a2, &qword_269B9D138);
    sub_251E6E93C(a1, type metadata accessor for StateSnapshot);
    goto LABEL_9;
  }
  uint64_t v26 = swift_bridgeObjectRetain();
  uint64_t v27 = *(void *)(sub_251EDC738(v26) + 16);
  swift_bridgeObjectRelease();
  sub_251E6E93C((uint64_t)v8, type metadata accessor for StateSnapshot);
  uint64_t v25 = v31[0];
  if (v27) {
    goto LABEL_8;
  }
  uint64_t v30 = *(void *)(v22 + 16);
  swift_release();
  sub_251A1B064(a2, &qword_269B9D138);
  sub_251E6E93C(a1, type metadata accessor for StateSnapshot);
  if (!v30)
  {
    sub_251E6E93C((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for SpeakersAndTelevisionsCategoryInformation);
    uint64_t v28 = 1;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(v25, v28, 1, v14);
  }
LABEL_9:
  sub_251E6DF28((uint64_t)v17, v25, (uint64_t (*)(void))type metadata accessor for SpeakersAndTelevisionsCategoryInformation);
  uint64_t v28 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56))(v25, v28, 1, v14);
}

uint64_t SpeakersAndTelevisionsCategoryInformation.contextMenuLabelsAndActions()()
{
  return MEMORY[0x263F8EE78];
}

uint64_t sub_251E6B620(long long *a1, uint64_t a2)
{
  StateSnapshot.hash(into:)(a1);
  sub_251F357B0();
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(v2 + *(int *)(a2 + 24));
  return sub_251A54A64(a1, v5);
}

uint64_t sub_251E6B738(uint64_t a1, uint64_t a2)
{
  sub_251F36CA0();
  StateSnapshot.hash(into:)(v5);
  sub_251F357B0();
  swift_bridgeObjectRelease();
  sub_251A54A64(v5, *(void *)(v2 + *(int *)(a2 + 24)));
  return sub_251F36D00();
}

BOOL sub_251E6B85C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for StaticService();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v33 - v8;
  uint64_t v10 = type metadata accessor for StaticAccessory(0);
  int v11 = *(unsigned __int16 *)(a1 + *(int *)(v10 + 88));
  if ((~v11 & 0xFEFC) != 0) {
    return v11 != 32771;
  }
  uint64_t v43 = v3;
  uint64_t v12 = *(void *)(a1 + *(int *)(v10 + 80));
  MEMORY[0x270FA5388](v10);
  *(&v33 - 2) = a1;
  swift_bridgeObjectRetain();
  unint64_t v13 = sub_251A51E88((void (*)(char *))sub_251AB2CBC, (uint64_t)(&v33 - 4), v12);
  swift_bridgeObjectRelease();
  unint64_t v14 = *(void *)(v13 + 16);
  if (!v14) {
    goto LABEL_18;
  }
  uint64_t v33 = v1;
  uint64_t v15 = 0;
  unint64_t v16 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v42 = v13;
  uint64_t v37 = v16;
  uint64_t v17 = v13 + v16;
  uint64_t v44 = *(void *)(v4 + 72);
  long long v38 = "13-AA62-01754F256DD5";
  id v39 = "00-8000-0026BB765291";
  long long v34 = "73-A058-C5E64BC487B2";
  long long v35 = "17-A590-755E1AAC02AE";
  uint64_t v40 = "73-8FBD-0E8978A33403";
  uint64_t v41 = "60-AD68-D91053B75F44";
  while (2)
  {
    sub_251E6DEC0(v17, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticService);
    char v45 = v9[*(int *)(v43 + 88)];
    ServiceKind.umbrellaCategory.getter(&v46);
    switch(v46)
    {
      case 1:
        uint64_t v18 = v38;
        goto LABEL_12;
      case 2:
        uint64_t v18 = v34;
        goto LABEL_12;
      case 3:
        goto LABEL_19;
      case 4:
        uint64_t v18 = v41;
        goto LABEL_12;
      case 5:
        unint64_t v19 = 0x8000000251F64800;
        goto LABEL_13;
      case 6:
        uint64_t v18 = v35;
        goto LABEL_12;
      case 7:
        uint64_t v18 = v40;
        goto LABEL_12;
      default:
        uint64_t v18 = v39;
LABEL_12:
        unint64_t v19 = (unint64_t)v18 | 0x8000000000000000;
LABEL_13:
        if (v19 != 0x8000000251F647A0)
        {
          char v20 = sub_251F36B10();
          swift_bridgeObjectRelease();
          sub_251E6E93C((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticService);
          if (v20) {
            goto LABEL_20;
          }
          ++v15;
          v17 += v44;
          if (v14 == v15) {
            goto LABEL_18;
          }
          continue;
        }
LABEL_19:
        swift_bridgeObjectRelease();
        sub_251E6E93C((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticService);
LABEL_20:
        if (v14 < v15)
        {
          uint64_t v22 = -1;
          uint64_t v23 = v15;
          uint64_t v15 = v14;
          goto LABEL_25;
        }
        if (v14 == v15)
        {
LABEL_18:
          swift_bridgeObjectRelease();
          return 0;
        }
        uint64_t v22 = 1;
        uint64_t v23 = v14;
LABEL_25:
        unint64_t v24 = v42;
        uint64_t v25 = v43;
        uint64_t v26 = 0;
        uint64_t v27 = (char *)(v42 + v37);
        uint64_t v37 = v22;
        long long v38 = v27;
        uint64_t v36 = v23;
LABEL_29:
        BOOL v28 = __OFADD__(v26, v22);
        v26 += v22;
        if (v28) {
          goto LABEL_49;
        }
        if (v15 == v14) {
          goto LABEL_50;
        }
        unint64_t v29 = v14;
        if (v15 + 1 == v14) {
          goto LABEL_28;
        }
        uint64_t v30 = (uint64_t)&v38[v44 * (v15 + 1)];
        unint64_t v29 = v15 + 1;
        while (2)
        {
          if (v15 < -1)
          {
            __break(1u);
LABEL_48:
            __break(1u);
LABEL_49:
            __break(1u);
LABEL_50:
            __break(1u);
            JUMPOUT(0x251E6BDA4);
          }
          if (v29 >= *(void *)(v24 + 16)) {
            goto LABEL_48;
          }
          sub_251E6DEC0(v30, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticService);
          switch(v7[*(int *)(v25 + 88)])
          {
            case 3:
            case 4:
            case 16:
            case 18:
            case 20:
            case 21:
            case 22:
            case 36:
            case 45:
            case 46:
            case 48:
            case 52:
              uint64_t v31 = v39;
              goto LABEL_39;
            case 6:
            case 7:
            case 8:
            case 9:
            case 10:
            case 11:
            case 14:
            case 15:
            case 19:
            case 26:
            case 29:
            case 30:
            case 31:
            case 32:
            case 33:
            case 35:
            case 37:
            case 51:
              uint64_t v31 = v41;
              goto LABEL_39;
            case 17:
            case 24:
            case 47:
              uint64_t v31 = v35;
              goto LABEL_39;
            case 27:
            case 28:
              uint64_t v31 = v34;
              goto LABEL_39;
            case 38:
            case 44:
              goto LABEL_26;
            default:
              uint64_t v31 = v40;
LABEL_39:
              if (((unint64_t)v31 | 0x8000000000000000) == 0x8000000251F647A0)
              {
LABEL_26:
                swift_bridgeObjectRelease();
                sub_251E6E93C((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticService);
                unint64_t v24 = v42;
                goto LABEL_27;
              }
              char v32 = sub_251F36B10();
              swift_bridgeObjectRelease();
              sub_251E6E93C((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticService);
              if ((v32 & 1) == 0)
              {
                ++v29;
                uint64_t v25 = v43;
                v30 += v44;
                unint64_t v24 = v42;
                if (v14 == v29)
                {
                  unint64_t v29 = v14;
                  goto LABEL_27;
                }
                continue;
              }
              unint64_t v24 = v42;
              uint64_t v25 = v43;
LABEL_27:
              uint64_t v23 = v36;
              uint64_t v22 = v37;
LABEL_28:
              uint64_t v15 = v29;
              if (v29 != v23) {
                goto LABEL_29;
              }
              swift_bridgeObjectRelease();
              return v26 > 0;
          }
        }
    }
  }
}

uint64_t SpeakersAndTelevisionsCategoryInformation.activeMediaCount(stateSnapshot:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v137 = (uint64_t)&v120 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v145 = type metadata accessor for StaticService();
  uint64_t v134 = *(void *)(v145 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v145);
  long long v126 = (char *)&v120 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  v139 = (char *)&v120 - v7;
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v138 = (uint64_t)&v120 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v133 = (uint64_t)&v120 - v10;
  uint64_t v144 = type metadata accessor for StaticAccessory(0);
  uint64_t v125 = *(void *)(v144 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v144);
  uint64_t v146 = (uint64_t)&v120 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v124 = (uint64_t)&v120 - v13;
  uint64_t v14 = type metadata accessor for StaticMediaSystem();
  uint64_t v148 = *(void *)(v14 - 8);
  uint64_t v149 = v14;
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v120 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  unint64_t v19 = (char *)&v120 - v18;
  uint64_t v20 = type metadata accessor for StaticMediaProfile();
  unint64_t v150 = *(void *)(v20 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v120 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)&v120 - v24;
  uint64_t v141 = type metadata accessor for StateSnapshot(0);
  uint64_t v142 = a1;
  uint64_t v26 = swift_bridgeObjectRetain();
  uint64_t v27 = sub_251EDC460(v26);
  uint64_t v28 = *(void *)(v27 + 56);
  v143 = (uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 56);
  uint64_t v29 = 1 << *(unsigned char *)(v27 + 32);
  uint64_t v30 = -1;
  if (v29 < 64) {
    uint64_t v30 = ~(-1 << v29);
  }
  unint64_t v31 = v30 & v28;
  int64_t v147 = (unint64_t)(v29 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v32 = 0;
  int64_t v33 = 0;
  do
  {
    while (1)
    {
      if (v31)
      {
        unint64_t v34 = __clz(__rbit64(v31));
        v31 &= v31 - 1;
        unint64_t v35 = v34 | (v33 << 6);
      }
      else
      {
        int64_t v36 = v33 + 1;
        if (__OFADD__(v33, 1)) {
          goto LABEL_225;
        }
        if (v36 >= v147) {
          goto LABEL_29;
        }
        unint64_t v37 = (unint64_t)v143[v36];
        ++v33;
        if (!v37)
        {
          int64_t v33 = v36 + 1;
          if (v36 + 1 >= v147) {
            goto LABEL_29;
          }
          unint64_t v37 = (unint64_t)v143[v33];
          if (!v37)
          {
            int64_t v33 = v36 + 2;
            if (v36 + 2 >= v147) {
              goto LABEL_29;
            }
            unint64_t v37 = (unint64_t)v143[v33];
            if (!v37)
            {
              int64_t v33 = v36 + 3;
              if (v36 + 3 >= v147) {
                goto LABEL_29;
              }
              unint64_t v37 = (unint64_t)v143[v33];
              if (!v37)
              {
                int64_t v33 = v36 + 4;
                if (v36 + 4 >= v147) {
                  goto LABEL_29;
                }
                unint64_t v37 = (unint64_t)v143[v33];
                if (!v37)
                {
                  int64_t v38 = v36 + 5;
                  if (v38 >= v147) {
                    goto LABEL_29;
                  }
                  unint64_t v37 = (unint64_t)v143[v38];
                  if (!v37)
                  {
                    while (1)
                    {
                      int64_t v33 = v38 + 1;
                      if (__OFADD__(v38, 1)) {
                        break;
                      }
                      if (v33 >= v147) {
                        goto LABEL_29;
                      }
                      unint64_t v37 = (unint64_t)v143[v33];
                      ++v38;
                      if (v37) {
                        goto LABEL_24;
                      }
                    }
LABEL_230:
                    __break(1u);
                    goto LABEL_231;
                  }
                  int64_t v33 = v38;
                }
              }
            }
          }
        }
LABEL_24:
        unint64_t v31 = (v37 - 1) & v37;
        unint64_t v35 = __clz(__rbit64(v37)) + (v33 << 6);
      }
      sub_251E6DEC0(*(void *)(v27 + 48) + *(void *)(v150 + 72) * v35, (uint64_t)v25, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
      sub_251E6DF28((uint64_t)v25, (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
      int v39 = v23[*(int *)(v20 + 76)];
      if (v39 != 6) {
        break;
      }
      sub_251E6E93C((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
    }
    uint64_t v40 = v39 == 1;
    sub_251E6E93C((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
    BOOL v41 = __OFADD__(v32, v40);
    v32 += v40;
  }
  while (!v41);
  __break(1u);
LABEL_29:
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v42 = swift_bridgeObjectRetain();
  uint64_t v43 = sub_251EDC738(v42);
  uint64_t v44 = v43;
  uint64_t v45 = v43 + 56;
  uint64_t v46 = 1 << *(unsigned char *)(v43 + 32);
  uint64_t v47 = -1;
  if (v46 < 64) {
    uint64_t v47 = ~(-1 << v46);
  }
  unint64_t v48 = v47 & *(void *)(v43 + 56);
  int64_t v49 = (unint64_t)(v46 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v50 = 0;
  int64_t v51 = 0;
  do
  {
    while (1)
    {
      if (v48)
      {
        unint64_t v52 = __clz(__rbit64(v48));
        v48 &= v48 - 1;
        unint64_t v53 = v52 | (v51 << 6);
      }
      else
      {
        int64_t v54 = v51 + 1;
        if (__OFADD__(v51, 1)) {
          goto LABEL_226;
        }
        if (v54 >= v49) {
          goto LABEL_57;
        }
        unint64_t v55 = *(void *)(v45 + 8 * v54);
        ++v51;
        if (!v55)
        {
          int64_t v51 = v54 + 1;
          if (v54 + 1 >= v49) {
            goto LABEL_57;
          }
          unint64_t v55 = *(void *)(v45 + 8 * v51);
          if (!v55)
          {
            int64_t v51 = v54 + 2;
            if (v54 + 2 >= v49) {
              goto LABEL_57;
            }
            unint64_t v55 = *(void *)(v45 + 8 * v51);
            if (!v55)
            {
              int64_t v51 = v54 + 3;
              if (v54 + 3 >= v49) {
                goto LABEL_57;
              }
              unint64_t v55 = *(void *)(v45 + 8 * v51);
              if (!v55)
              {
                int64_t v51 = v54 + 4;
                if (v54 + 4 >= v49) {
                  goto LABEL_57;
                }
                unint64_t v55 = *(void *)(v45 + 8 * v51);
                if (!v55)
                {
                  int64_t v56 = v54 + 5;
                  if (v56 >= v49) {
                    goto LABEL_57;
                  }
                  unint64_t v55 = *(void *)(v45 + 8 * v56);
                  if (!v55)
                  {
                    while (1)
                    {
                      int64_t v51 = v56 + 1;
                      if (__OFADD__(v56, 1)) {
                        break;
                      }
                      if (v51 >= v49) {
                        goto LABEL_57;
                      }
                      unint64_t v55 = *(void *)(v45 + 8 * v51);
                      ++v56;
                      if (v55) {
                        goto LABEL_52;
                      }
                    }
LABEL_231:
                    __break(1u);
                    goto LABEL_232;
                  }
                  int64_t v51 = v56;
                }
              }
            }
          }
        }
LABEL_52:
        unint64_t v48 = (v55 - 1) & v55;
        unint64_t v53 = __clz(__rbit64(v55)) + (v51 << 6);
      }
      sub_251E6DEC0(*(void *)(v44 + 48) + *(void *)(v148 + 72) * v53, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
      sub_251E6DF28((uint64_t)v19, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
      int v57 = v17[*(int *)(v149 + 60)];
      if (v57 != 6) {
        break;
      }
      sub_251E6E93C((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
    }
    uint64_t v58 = v57 == 1;
    sub_251E6E93C((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
    BOOL v41 = __OFADD__(v50, v58);
    v50 += v58;
  }
  while (!v41);
  __break(1u);
LABEL_57:
  swift_release();
  swift_bridgeObjectRelease();
  if (__OFADD__(v32, v50)) {
    goto LABEL_228;
  }
  uint64_t v121 = v32 + v50;
  uint64_t v59 = swift_bridgeObjectRetain();
  uint64_t v60 = sub_251EDCBC8(v59);
  uint64_t v61 = *(void *)(v60 + 56);
  uint64_t v122 = v60 + 56;
  uint64_t v62 = 1 << *(unsigned char *)(v60 + 32);
  uint64_t v63 = -1;
  if (v62 < 64) {
    uint64_t v63 = ~(-1 << v62);
  }
  unint64_t v64 = v63 & v61;
  int64_t v123 = (unint64_t)(v62 + 63) >> 6;
  char v135 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v134 + 48);
  v136 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v134 + 56);
  uint64_t v127 = v60;
  swift_bridgeObjectRetain();
  uint64_t v65 = 0;
  int64_t v66 = 0;
  uint64_t v67 = (uint64_t)v139;
  while (1)
  {
    uint64_t v132 = v65;
    if (!v64) {
      break;
    }
    uint64_t v130 = (v64 - 1) & v64;
    int64_t v131 = v66;
    unint64_t v69 = __clz(__rbit64(v64)) | (v66 << 6);
LABEL_84:
    uint64_t v74 = v124;
    sub_251E6DEC0(*(void *)(v127 + 48) + *(void *)(v125 + 72) * v69, v124, type metadata accessor for StaticAccessory);
    uint64_t v75 = v74;
    uint64_t v76 = v146;
    sub_251E6DF28(v75, v146, type metadata accessor for StaticAccessory);
    uint64_t v77 = *(void *)(v76 + *(int *)(v144 + 80));
    uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    long long v128 = &v120;
    MEMORY[0x270FA5388](v78 - 8);
    unint64_t v80 = (char *)&v120 - ((v79 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v81 = *(void *)(v77 + 16);
    uint64_t v129 = v77;
    if (v81)
    {
      uint64_t v82 = sub_251F34DA0();
      uint64_t v83 = *(void *)(v82 - 8);
      uint64_t v84 = v83;
      uint64_t v85 = v77 + ((*(unsigned __int8 *)(v84 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80));
      uint64_t v142 = *(void *)(v83 + 72);
      uint64_t v149 = v83 + 56;
      int64_t v87 = v83 + 16;
      uint64_t v86 = *(void *)(v83 + 16);
      int64_t v147 = v87;
      uint64_t v148 = v86;
      v143 = (uint64_t (**)(char *, uint64_t, uint64_t))(v84 + 48);
      v140 = (void (**)(char *, uint64_t))(v84 + 8);
      uint64_t v141 = v84 + 32;
      swift_bridgeObjectRetain();
      unint64_t v150 = MEMORY[0x263F8EE78];
      while (1)
      {
        ((void (*)(char *, uint64_t, uint64_t))v148)(v80, v85, v82);
        (*(void (**)(char *, void, uint64_t, uint64_t))v149)(v80, 0, 1, v82);
        uint64_t v88 = (*v143)(v80, 1, v82);
        if (v88 == 1) {
          break;
        }
        MEMORY[0x270FA5388](v88);
        int v90 = (char *)&v120 - ((v89 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, char *, uint64_t))(v84 + 32))(v90, v80, v82);
        uint64_t v91 = *(void *)(v146 + *(int *)(v144 + 76));
        if (*(void *)(v91 + 16) && (unint64_t v92 = sub_2519FE584((uint64_t)v90), (v93 & 1) != 0))
        {
          uint64_t v94 = *(void *)(v91 + 56) + *(void *)(v134 + 72) * v92;
          uint64_t v95 = v137;
          sub_251E6DEC0(v94, v137, (uint64_t (*)(void))type metadata accessor for StaticService);
          uint64_t v96 = 0;
        }
        else
        {
          uint64_t v96 = 1;
          uint64_t v95 = v137;
        }
        uint64_t v97 = v145;
        (*v136)(v95, v96, 1, v145);
        (*v140)(v90, v82);
        if ((*v135)(v95, 1, v97) == 1)
        {
          sub_251A1B064(v95, qword_26B21EE20);
        }
        else
        {
          uint64_t v98 = v133;
          sub_251E6DF28(v95, v133, (uint64_t (*)(void))type metadata accessor for StaticService);
          sub_251E6DF28(v98, v138, (uint64_t (*)(void))type metadata accessor for StaticService);
          if (swift_isUniquelyReferenced_nonNull_native()) {
            unint64_t v99 = v150;
          }
          else {
            unint64_t v99 = sub_251F0FB28(0, *(void *)(v150 + 16) + 1, 1, v150);
          }
          unint64_t v101 = *(void *)(v99 + 16);
          unint64_t v100 = *(void *)(v99 + 24);
          if (v101 >= v100 >> 1) {
            unint64_t v99 = sub_251F0FB28(v100 > 1, v101 + 1, 1, v99);
          }
          *(void *)(v99 + 16) = v101 + 1;
          unint64_t v102 = (*(unsigned __int8 *)(v134 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v134 + 80);
          unint64_t v150 = v99;
          sub_251E6DF28(v138, v99 + v102 + *(void *)(v134 + 72) * v101, (uint64_t (*)(void))type metadata accessor for StaticService);
        }
        v85 += v142;
        --v81;
        uint64_t v67 = (uint64_t)v139;
        if (!v81) {
          goto LABEL_101;
        }
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      unint64_t v150 = MEMORY[0x263F8EE78];
LABEL_101:
      uint64_t v103 = sub_251F34DA0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v103 - 8) + 56))(v80, 1, 1, v103);
    }
    swift_bridgeObjectRelease();
    uint64_t v104 = v145;
    uint64_t v105 = (uint64_t)v126;
    uint64_t v149 = *(void *)(v150 + 16);
    if (v149)
    {
      uint64_t v106 = v134;
      uint64_t v148 = v150 + ((*(unsigned __int8 *)(v134 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v134 + 80));
      swift_bridgeObjectRetain();
      uint64_t v107 = 0;
      int64_t v147 = *(void *)(v106 + 72);
      while (2)
      {
        uint64_t v109 = v148 + v147 * v107++;
        sub_251E6DEC0(v109, v67, (uint64_t (*)(void))type metadata accessor for StaticService);
        char v110 = 0;
        uint64_t v111 = 0;
        uint64_t v112 = *(unsigned __int8 *)(v67 + *(int *)(v104 + 88));
        while (1)
        {
          char v113 = v110;
          unint64_t v114 = 0x8000000251F62670;
          switch(*((unsigned char *)&unk_270264EB0 + v111 + 32))
          {
            case 1:
              uint64_t v115 = "0000003E-0000-1000-8000-0026BB765291";
              goto LABEL_161;
            case 2:
              uint64_t v115 = "00000270-0000-1000-8000-0026BB765291";
              goto LABEL_161;
            case 3:
              uint64_t v115 = "000000BB-0000-1000-8000-0026BB765291";
              goto LABEL_161;
            case 4:
              uint64_t v115 = "0000008D-0000-1000-8000-0026BB765291";
              goto LABEL_161;
            case 5:
              uint64_t v115 = "00000096-0000-1000-8000-0026BB765291";
              goto LABEL_161;
            case 6:
              uint64_t v115 = "00000042-0000-1000-8000-0026BB765291";
              goto LABEL_161;
            case 7:
              uint64_t v115 = "00000110-0000-1000-8000-0026BB765291";
              goto LABEL_161;
            case 8:
              uint64_t v115 = "00000204-0000-1000-8000-0026BB765291";
              goto LABEL_161;
            case 9:
              uint64_t v115 = "00000097-0000-1000-8000-0026BB765291";
              goto LABEL_161;
            case 0xA:
              uint64_t v115 = "0000007F-0000-1000-8000-0026BB765291";
              goto LABEL_161;
            case 0xB:
              uint64_t v115 = "00000080-0000-1000-8000-0026BB765291";
              goto LABEL_161;
            case 0xC:
              uint64_t v115 = "00000129-0000-1000-8000-0026BB765291";
              goto LABEL_161;
            case 0xD:
              uint64_t v115 = "00000237-0000-1000-8000-0026BB765291";
              goto LABEL_161;
            case 0xE:
              uint64_t v115 = "00000081-0000-1000-8000-0026BB765291";
              goto LABEL_161;
            case 0xF:
              uint64_t v115 = "00000121-0000-1000-8000-0026BB765291";
              goto LABEL_161;
            case 0x10:
              uint64_t v115 = "00000040-0000-1000-8000-0026BB765291";
              goto LABEL_161;
            case 0x11:
              uint64_t v115 = "000000D7-0000-1000-8000-0026BB765291";
              goto LABEL_161;
            case 0x12:
              uint64_t v115 = "000000BA-0000-1000-8000-0026BB765291";
              goto LABEL_161;
            case 0x13:
              uint64_t v115 = "00000041-0000-1000-8000-0026BB765291";
              goto LABEL_161;
            case 0x14:
              uint64_t v115 = "000000BC-0000-1000-8000-0026BB765291";
              goto LABEL_161;
            case 0x15:
              uint64_t v115 = "000000BD-0000-1000-8000-0026BB765291";
              goto LABEL_161;
            case 0x16:
              uint64_t v115 = "00000082-0000-1000-8000-0026BB765291";
              goto LABEL_161;
            case 0x17:
              uint64_t v115 = "000000D9-0000-1000-8000-0026BB765291";
              goto LABEL_161;
            case 0x18:
              uint64_t v115 = "000000CF-0000-1000-8000-0026BB765291";
              goto LABEL_161;
            case 0x19:
              uint64_t v115 = "000000CC-0000-1000-8000-0026BB765291";
              goto LABEL_161;
            case 0x1A:
              uint64_t v115 = "00000083-0000-1000-8000-0026BB765291";
              goto LABEL_161;
            case 0x1B:
              uint64_t v115 = "00000084-0000-1000-8000-0026BB765291";
              goto LABEL_161;
            case 0x1C:
              uint64_t v115 = "00000043-0000-1000-8000-0026BB765291";
              goto LABEL_161;
            case 0x1D:
              uint64_t v115 = "00000044-0000-1000-8000-0026BB765291";
              goto LABEL_161;
            case 0x1E:
              uint64_t v115 = "00000045-0000-1000-8000-0026BB765291";
              goto LABEL_161;
            case 0x1F:
              uint64_t v115 = "00000112-0000-1000-8000-0026BB765291";
              goto LABEL_161;
            case 0x20:
              uint64_t v115 = "00000085-0000-1000-8000-0026BB765291";
              goto LABEL_161;
            case 0x21:
              uint64_t v115 = "00000086-0000-1000-8000-0026BB765291";
              goto LABEL_161;
            case 0x22:
              uint64_t v115 = "00000047-0000-1000-8000-0026BB765291";
              goto LABEL_161;
            case 0x23:
              uint64_t v115 = "0000007E-0000-1000-8000-0026BB765291";
              goto LABEL_161;
            case 0x24:
              uint64_t v115 = "000000B9-0000-1000-8000-0026BB765291";
              goto LABEL_161;
            case 0x25:
              uint64_t v115 = "00000087-0000-1000-8000-0026BB765291";
              goto LABEL_161;
            case 0x26:
              uint64_t v115 = "00000113-0000-1000-8000-0026BB765291";
              goto LABEL_161;
            case 0x27:
              uint64_t v115 = "00000088-0000-1000-8000-0026BB765291";
              goto LABEL_161;
            case 0x28:
              uint64_t v115 = "00000089-0000-1000-8000-0026BB765291";
              goto LABEL_161;
            case 0x29:
              uint64_t v115 = "00000049-0000-1000-8000-0026BB765291";
              goto LABEL_161;
            case 0x2A:
              uint64_t v115 = "00000125-0000-1000-8000-0026BB765291";
              goto LABEL_161;
            case 0x2B:
              uint64_t v115 = "00000122-0000-1000-8000-0026BB765291";
              goto LABEL_161;
            case 0x2C:
              uint64_t v115 = "000000D8-0000-1000-8000-0026BB765291";
              goto LABEL_161;
            case 0x2D:
              uint64_t v115 = "0000008A-0000-1000-8000-0026BB765291";
              goto LABEL_161;
            case 0x2E:
              uint64_t v115 = "0000004A-0000-1000-8000-0026BB765291";
              goto LABEL_161;
            case 0x2F:
              uint64_t v115 = "000000D0-0000-1000-8000-0026BB765291";
              goto LABEL_161;
            case 0x30:
              uint64_t v115 = "000000B7-0000-1000-8000-0026BB765291";
              goto LABEL_161;
            case 0x31:
              uint64_t v115 = "0000020A-0000-1000-8000-0026BB765291";
              goto LABEL_161;
            case 0x32:
              uint64_t v115 = "0000020F-0000-1000-8000-0026BB765291";
              goto LABEL_161;
            case 0x33:
              uint64_t v115 = "0000008B-0000-1000-8000-0026BB765291";
              goto LABEL_161;
            case 0x34:
              uint64_t v115 = "0000008C-0000-1000-8000-0026BB765291";
LABEL_161:
              unint64_t v114 = (unint64_t)(v115 - 32) | 0x8000000000000000;
              break;
            default:
              break;
          }
          unint64_t v116 = 0x8000000251F62670;
          switch(v112)
          {
            case 1:
              uint64_t v117 = "0000003E-0000-1000-8000-0026BB765291";
              goto LABEL_215;
            case 2:
              uint64_t v117 = "00000270-0000-1000-8000-0026BB765291";
              goto LABEL_215;
            case 3:
              uint64_t v117 = "000000BB-0000-1000-8000-0026BB765291";
              goto LABEL_215;
            case 4:
              uint64_t v117 = "0000008D-0000-1000-8000-0026BB765291";
              goto LABEL_215;
            case 5:
              uint64_t v117 = "00000096-0000-1000-8000-0026BB765291";
              goto LABEL_215;
            case 6:
              uint64_t v117 = "00000042-0000-1000-8000-0026BB765291";
              goto LABEL_215;
            case 7:
              uint64_t v117 = "00000110-0000-1000-8000-0026BB765291";
              goto LABEL_215;
            case 8:
              uint64_t v117 = "00000204-0000-1000-8000-0026BB765291";
              goto LABEL_215;
            case 9:
              uint64_t v117 = "00000097-0000-1000-8000-0026BB765291";
              goto LABEL_215;
            case 10:
              uint64_t v117 = "0000007F-0000-1000-8000-0026BB765291";
              goto LABEL_215;
            case 11:
              uint64_t v117 = "00000080-0000-1000-8000-0026BB765291";
              goto LABEL_215;
            case 12:
              uint64_t v117 = "00000129-0000-1000-8000-0026BB765291";
              goto LABEL_215;
            case 13:
              uint64_t v117 = "00000237-0000-1000-8000-0026BB765291";
              goto LABEL_215;
            case 14:
              uint64_t v117 = "00000081-0000-1000-8000-0026BB765291";
              goto LABEL_215;
            case 15:
              uint64_t v117 = "00000121-0000-1000-8000-0026BB765291";
              goto LABEL_215;
            case 16:
              uint64_t v117 = "00000040-0000-1000-8000-0026BB765291";
              goto LABEL_215;
            case 17:
              uint64_t v117 = "000000D7-0000-1000-8000-0026BB765291";
              goto LABEL_215;
            case 18:
              uint64_t v117 = "000000BA-0000-1000-8000-0026BB765291";
              goto LABEL_215;
            case 19:
              uint64_t v117 = "00000041-0000-1000-8000-0026BB765291";
              goto LABEL_215;
            case 20:
              uint64_t v117 = "000000BC-0000-1000-8000-0026BB765291";
              goto LABEL_215;
            case 21:
              uint64_t v117 = "000000BD-0000-1000-8000-0026BB765291";
              goto LABEL_215;
            case 22:
              uint64_t v117 = "00000082-0000-1000-8000-0026BB765291";
              goto LABEL_215;
            case 23:
              uint64_t v117 = "000000D9-0000-1000-8000-0026BB765291";
              goto LABEL_215;
            case 24:
              uint64_t v117 = "000000CF-0000-1000-8000-0026BB765291";
              goto LABEL_215;
            case 25:
              uint64_t v117 = "000000CC-0000-1000-8000-0026BB765291";
              goto LABEL_215;
            case 26:
              uint64_t v117 = "00000083-0000-1000-8000-0026BB765291";
              goto LABEL_215;
            case 27:
              uint64_t v117 = "00000084-0000-1000-8000-0026BB765291";
              goto LABEL_215;
            case 28:
              uint64_t v117 = "00000043-0000-1000-8000-0026BB765291";
              goto LABEL_215;
            case 29:
              uint64_t v117 = "00000044-0000-1000-8000-0026BB765291";
              goto LABEL_215;
            case 30:
              uint64_t v117 = "00000045-0000-1000-8000-0026BB765291";
              goto LABEL_215;
            case 31:
              uint64_t v117 = "00000112-0000-1000-8000-0026BB765291";
              goto LABEL_215;
            case 32:
              uint64_t v117 = "00000085-0000-1000-8000-0026BB765291";
              goto LABEL_215;
            case 33:
              uint64_t v117 = "00000086-0000-1000-8000-0026BB765291";
              goto LABEL_215;
            case 34:
              uint64_t v117 = "00000047-0000-1000-8000-0026BB765291";
              goto LABEL_215;
            case 35:
              uint64_t v117 = "0000007E-0000-1000-8000-0026BB765291";
              goto LABEL_215;
            case 36:
              uint64_t v117 = "000000B9-0000-1000-8000-0026BB765291";
              goto LABEL_215;
            case 37:
              uint64_t v117 = "00000087-0000-1000-8000-0026BB765291";
              goto LABEL_215;
            case 38:
              uint64_t v117 = "00000113-0000-1000-8000-0026BB765291";
              goto LABEL_215;
            case 39:
              uint64_t v117 = "00000088-0000-1000-8000-0026BB765291";
              goto LABEL_215;
            case 40:
              uint64_t v117 = "00000089-0000-1000-8000-0026BB765291";
              goto LABEL_215;
            case 41:
              uint64_t v117 = "00000049-0000-1000-8000-0026BB765291";
              goto LABEL_215;
            case 42:
              uint64_t v117 = "00000125-0000-1000-8000-0026BB765291";
              goto LABEL_215;
            case 43:
              uint64_t v117 = "00000122-0000-1000-8000-0026BB765291";
              goto LABEL_215;
            case 44:
              uint64_t v117 = "000000D8-0000-1000-8000-0026BB765291";
              goto LABEL_215;
            case 45:
              uint64_t v117 = "0000008A-0000-1000-8000-0026BB765291";
              goto LABEL_215;
            case 46:
              uint64_t v117 = "0000004A-0000-1000-8000-0026BB765291";
              goto LABEL_215;
            case 47:
              uint64_t v117 = "000000D0-0000-1000-8000-0026BB765291";
              goto LABEL_215;
            case 48:
              uint64_t v117 = "000000B7-0000-1000-8000-0026BB765291";
              goto LABEL_215;
            case 49:
              uint64_t v117 = "0000020A-0000-1000-8000-0026BB765291";
              goto LABEL_215;
            case 50:
              uint64_t v117 = "0000020F-0000-1000-8000-0026BB765291";
              goto LABEL_215;
            case 51:
              uint64_t v117 = "0000008B-0000-1000-8000-0026BB765291";
              goto LABEL_215;
            case 52:
              uint64_t v117 = "0000008C-0000-1000-8000-0026BB765291";
LABEL_215:
              unint64_t v116 = (unint64_t)(v117 - 32) | 0x8000000000000000;
              break;
            default:
              break;
          }
          if (v114 == v116) {
            break;
          }
          char v118 = sub_251F36B10();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v118) {
            goto LABEL_105;
          }
          char v110 = 1;
          uint64_t v111 = 1u;
          if (v113)
          {
            sub_251E6DEC0(v67, v105, (uint64_t (*)(void))type metadata accessor for StaticService);
            sub_251E6E93C(v105, (uint64_t (*)(void))type metadata accessor for StaticService);
            sub_251E6E93C(v67, (uint64_t (*)(void))type metadata accessor for StaticService);
            goto LABEL_106;
          }
        }
        swift_bridgeObjectRelease_n();
LABEL_105:
        sub_251E6DEC0(v67, v105, (uint64_t (*)(void))type metadata accessor for StaticService);
        BOOL v108 = StaticService.isActivated.getter();
        sub_251E6E93C(v105, (uint64_t (*)(void))type metadata accessor for StaticService);
        sub_251E6E93C(v67, (uint64_t (*)(void))type metadata accessor for StaticService);
        if (v108)
        {
          swift_bridgeObjectRelease_n();
          uint64_t v68 = 1;
          goto LABEL_63;
        }
LABEL_106:
        if (v107 != v149) {
          continue;
        }
        break;
      }
      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    uint64_t v68 = 0;
LABEL_63:
    sub_251E6E93C(v146, type metadata accessor for StaticAccessory);
    int64_t v66 = v131;
    BOOL v41 = __OFADD__(v132, v68);
    uint64_t v65 = v132 + v68;
    unint64_t v64 = v130;
    if (v41)
    {
      __break(1u);
LABEL_225:
      __break(1u);
LABEL_226:
      __break(1u);
LABEL_227:
      __break(1u);
LABEL_228:
      __break(1u);
      goto LABEL_229;
    }
  }
  int64_t v70 = v66 + 1;
  if (__OFADD__(v66, 1)) {
    goto LABEL_227;
  }
  if (v70 < v123)
  {
    unint64_t v71 = *(void *)(v122 + 8 * v70);
    int64_t v72 = v66 + 1;
    if (!v71)
    {
      int64_t v72 = v66 + 2;
      if (v66 + 2 >= v123) {
        goto LABEL_222;
      }
      unint64_t v71 = *(void *)(v122 + 8 * v72);
      if (!v71)
      {
        int64_t v72 = v66 + 3;
        if (v66 + 3 >= v123) {
          goto LABEL_222;
        }
        unint64_t v71 = *(void *)(v122 + 8 * v72);
        if (!v71)
        {
          int64_t v72 = v66 + 4;
          if (v66 + 4 >= v123) {
            goto LABEL_222;
          }
          unint64_t v71 = *(void *)(v122 + 8 * v72);
          if (!v71)
          {
            int64_t v72 = v66 + 5;
            if (v66 + 5 >= v123) {
              goto LABEL_222;
            }
            unint64_t v71 = *(void *)(v122 + 8 * v72);
            if (!v71)
            {
              uint64_t v73 = v66 + 6;
              if (v66 + 6 >= v123) {
                goto LABEL_222;
              }
              unint64_t v71 = *(void *)(v122 + 8 * v73);
              if (!v71)
              {
                while (1)
                {
                  int64_t v72 = v73 + 1;
                  if (__OFADD__(v73, 1)) {
                    break;
                  }
                  if (v72 >= v123) {
                    goto LABEL_222;
                  }
                  unint64_t v71 = *(void *)(v122 + 8 * v72);
                  ++v73;
                  if (v71) {
                    goto LABEL_83;
                  }
                }
LABEL_232:
                __break(1u);
                JUMPOUT(0x251E6D3F4);
              }
              int64_t v72 = v66 + 6;
            }
          }
        }
      }
    }
LABEL_83:
    uint64_t v130 = (v71 - 1) & v71;
    int64_t v131 = v72;
    unint64_t v69 = __clz(__rbit64(v71)) + (v72 << 6);
    goto LABEL_84;
  }
LABEL_222:
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = v121 + v65;
  if (__OFADD__(v121, v65))
  {
LABEL_229:
    __break(1u);
    goto LABEL_230;
  }
  return result;
}

uint64_t sub_251E6D59C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticAccessory(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a2 + *(int *)(type metadata accessor for StateSnapshot(0) + 32));
  if (!*(void *)(v8 + 16)) {
    return 1;
  }
  uint64_t v9 = type metadata accessor for StaticMediaProfile();
  unint64_t v10 = sub_2519FE584(a1 + *(int *)(v9 + 56));
  if ((v11 & 1) == 0) {
    return 1;
  }
  sub_251E6DEC0(*(void *)(v8 + 56) + *(void *)(v5 + 72) * v10, (uint64_t)v7, type metadata accessor for StaticAccessory);
  uint64_t v12 = v7[*(int *)(v4 + 68)];
  sub_251E6E93C((uint64_t)v7, type metadata accessor for StaticAccessory);
  return v12;
}

uint64_t sub_251E6D6DC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F240);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  char v11 = (char *)v22 - v10;
  uint64_t v12 = *(void *)(a1 + *(int *)(type metadata accessor for StaticMediaSystem() + 92));
  uint64_t v24 = a2;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_251D9EEB4((void (*)(char *))sub_251E6F2DC, (uint64_t)v23, v12);
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(v13 + 16);
  if (!v14)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  v22[1] = v2;
  uint64_t v15 = v13 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  uint64_t v16 = *(void *)(v6 + 72);
  swift_bridgeObjectRetain();
  uint64_t v17 = 1;
  while (1)
  {
    sub_251A1B128(v15, (uint64_t)v11, &qword_26B21F240);
    sub_251A1B128((uint64_t)v11, (uint64_t)v9, &qword_26B21F240);
    uint64_t v18 = type metadata accessor for StaticAccessory(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v9, 1, v18) != 1) {
      break;
    }
    sub_251A1B064((uint64_t)v9, &qword_26B21F240);
    sub_251A1B064((uint64_t)v11, &qword_26B21F240);
LABEL_6:
    if (v14 == v17) {
      goto LABEL_10;
    }
    v15 += v16;
    if (__OFADD__(v17++, 1))
    {
      __break(1u);
LABEL_10:
      swift_bridgeObjectRelease_n();
      return 1;
    }
  }
  char v19 = v9[*(int *)(v18 + 68)];
  sub_251E6E93C((uint64_t)v9, type metadata accessor for StaticAccessory);
  sub_251A1B064((uint64_t)v11, &qword_26B21F240);
  if (v19) {
    goto LABEL_6;
  }
  swift_bridgeObjectRelease_n();
  return 0;
}

uint64_t sub_251E6D958@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(void *)(a2 + *(int *)(type metadata accessor for StateSnapshot(0) + 32));
  if (*(void *)(v5 + 16) && (unint64_t v6 = sub_2519FE584(a1), (v7 & 1) != 0))
  {
    unint64_t v8 = v6;
    uint64_t v9 = *(void *)(v5 + 56);
    uint64_t v10 = type metadata accessor for StaticAccessory(0);
    uint64_t v11 = *(void *)(v10 - 8);
    sub_251E6DEC0(v9 + *(void *)(v11 + 72) * v8, a3, type metadata accessor for StaticAccessory);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(a3, 0, 1, v10);
  }
  else
  {
    uint64_t v13 = type metadata accessor for StaticAccessory(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a3, 1, 1, v13);
  }
}

uint64_t sub_251E6DA98(uint64_t isStackAllocationSafe)
{
  uint64_t v2 = isStackAllocationSafe;
  v9[1] = *MEMORY[0x263EF8340];
  char v3 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v4 = (unint64_t)((1 << v3) + 63) >> 6;
  size_t v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    bzero((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    uint64_t v6 = sub_251E6DBFC((void *)((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0)), v4, v2);
    swift_release();
    if (v1) {
      swift_willThrow();
    }
  }
  else
  {
    char v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    uint64_t v6 = sub_251E6DBFC((unint64_t *)v7, v4, v2);
    swift_release();
    MEMORY[0x2533AC760](v7, -1, -1);
  }
  return v6;
}

uint64_t sub_251E6DBFC(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v24 = a2;
  uint64_t v25 = a1;
  uint64_t v5 = type metadata accessor for StaticAccessory(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t result = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = 0;
  int64_t v10 = 0;
  uint64_t v11 = a3 + 56;
  uint64_t v12 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(a3 + 56);
  int64_t v27 = (unint64_t)(v12 + 63) >> 6;
  while (v14)
  {
    unint64_t v15 = __clz(__rbit64(v14));
    v14 &= v14 - 1;
    unint64_t v16 = v15 | (v10 << 6);
LABEL_17:
    sub_251E6DEC0(*(void *)(a3 + 48) + *(void *)(v6 + 72) * v16, (uint64_t)v9, type metadata accessor for StaticAccessory);
    BOOL v20 = sub_251E6B85C((uint64_t)v9);
    uint64_t result = sub_251E6E93C((uint64_t)v9, type metadata accessor for StaticAccessory);
    if (v3) {
      return result;
    }
    if (v20)
    {
      *(unint64_t *)((char *)v25 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      BOOL v17 = __OFADD__(v26++, 1);
      if (v17) {
        goto LABEL_30;
      }
    }
  }
  BOOL v17 = __OFADD__(v10++, 1);
  if (v17)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v10 >= v27) {
    goto LABEL_27;
  }
  unint64_t v18 = *(void *)(v11 + 8 * v10);
  if (v18)
  {
LABEL_16:
    unint64_t v14 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v10 << 6);
    goto LABEL_17;
  }
  int64_t v19 = v10 + 1;
  if (v10 + 1 >= v27) {
    goto LABEL_27;
  }
  unint64_t v18 = *(void *)(v11 + 8 * v19);
  if (v18) {
    goto LABEL_15;
  }
  int64_t v19 = v10 + 2;
  if (v10 + 2 >= v27) {
    goto LABEL_27;
  }
  unint64_t v18 = *(void *)(v11 + 8 * v19);
  if (v18) {
    goto LABEL_15;
  }
  int64_t v19 = v10 + 3;
  if (v10 + 3 >= v27)
  {
LABEL_27:
    uint64_t v21 = v24;
    uint64_t v22 = v26;
    swift_retain();
    return sub_251F1BAE0(v25, v21, v22, a3);
  }
  unint64_t v18 = *(void *)(v11 + 8 * v19);
  if (v18)
  {
LABEL_15:
    int64_t v10 = v19;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v10 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v10 >= v27) {
      goto LABEL_27;
    }
    unint64_t v18 = *(void *)(v11 + 8 * v10);
    ++v19;
    if (v18) {
      goto LABEL_16;
    }
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_251E6DE80(uint64_t a1)
{
  return sub_251E6D59C(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_251E6DEA0(uint64_t a1)
{
  return sub_251E6D6DC(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_251E6DEC0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_251E6DF28(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_251E6DF90(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_251E6E02C(&qword_269BA4DF0);
  uint64_t result = sub_251E6E02C(&qword_269BA4DF8);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_251E6DFF8()
{
  return sub_251E6E02C(&qword_269BA4E00);
}

uint64_t sub_251E6E02C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for SpeakersAndTelevisionsCategoryInformation();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *assignWithCopy for SpeakersAndTelevisionsCategoryInformation(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int64_t v56 = (int *)type metadata accessor for StateSnapshot(0);
  uint64_t v5 = v56[5];
  unint64_t v55 = a1;
  uint64_t v6 = (char *)a1 + v5;
  char v7 = (char *)a2 + v5;
  uint64_t v8 = sub_251F34DA0();
  uint64_t v53 = *(void *)(v8 - 8);
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(v53 + 24);
  v9(v6, v7, v8);
  int64_t v10 = (int *)type metadata accessor for StaticHome();
  uint64_t v11 = v10[5];
  uint64_t v12 = &v6[v11];
  uint64_t v13 = &v7[v11];
  *(void *)uint64_t v12 = *(void *)v13;
  *((void *)v12 + 1) = *((void *)v13 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = v10[6];
  unint64_t v15 = &v6[v14];
  unint64_t v16 = &v7[v14];
  v9(&v6[v14], &v7[v14], v8);
  BOOL v17 = v9;
  unint64_t v18 = (int *)type metadata accessor for StaticRoom(0);
  uint64_t v19 = v18[5];
  BOOL v20 = &v15[v19];
  uint64_t v21 = &v16[v19];
  *(void *)BOOL v20 = *(void *)v21;
  *((void *)v20 + 1) = *((void *)v21 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[v18[6]] = v16[v18[6]];
  *(void *)&v15[v18[7]] = *(void *)&v16[v18[7]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17(&v15[v18[8]], &v16[v18[8]], v8);
  *(void *)&v15[v18[9]] = *(void *)&v16[v18[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v15[v18[10]] = *(void *)&v16[v18[10]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v15[v18[11]] = *(void *)&v16[v18[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v15[v18[12]] = *(void *)&v16[v18[12]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v15[v18[13]] = *(void *)&v16[v18[13]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v15[v18[14]] = *(void *)&v16[v18[14]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v15[v18[15]] = *(void *)&v16[v18[15]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v15[v18[16]] = *(void *)&v16[v18[16]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v15[v18[17]] = *(void *)&v16[v18[17]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v15[v18[18]] = *(void *)&v16[v18[18]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = v10[7];
  uint64_t v23 = &v6[v22];
  uint64_t v24 = &v7[v22];
  v17(&v6[v22], &v7[v22], v8);
  uint64_t v25 = (int *)type metadata accessor for StaticUser();
  uint64_t v26 = v25[5];
  int64_t v27 = &v23[v26];
  uint64_t v28 = &v24[v26];
  *(void *)int64_t v27 = *(void *)v28;
  *((void *)v27 + 1) = *((void *)v28 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17(&v23[v25[6]], &v24[v25[6]], v8);
  v23[v25[7]] = v24[v25[7]];
  v23[v25[8]] = v24[v25[8]];
  v6[v10[8]] = v7[v10[8]];
  v6[v10[9]] = v7[v10[9]];
  v6[v10[10]] = v7[v10[10]];
  *(void *)&v6[v10[11]] = *(void *)&v7[v10[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v6[v10[12]] = *(void *)&v7[v10[12]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v6[v10[13]] = *(void *)&v7[v10[13]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v6[v10[14]] = *(void *)&v7[v10[14]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v6[v10[15]] = *(void *)&v7[v10[15]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v6[v10[16]] = *(void *)&v7[v10[16]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6[v10[17]] = v7[v10[17]];
  *(void *)&v6[v10[18]] = *(void *)&v7[v10[18]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6[v10[19]] = v7[v10[19]];
  uint64_t v29 = v10[20];
  uint64_t v30 = &v6[v29];
  unint64_t v31 = &v7[v29];
  uint64_t v32 = (int *)type metadata accessor for StaticResident();
  uint64_t v33 = *((void *)v32 - 1);
  unint64_t v34 = *(uint64_t (**)(char *, uint64_t, int *))(v33 + 48);
  LODWORD(v23) = v34(v30, 1, v32);
  int v35 = v34(v31, 1, v32);
  if (!v23)
  {
    if (!v35)
    {
      v17(v30, v31, v8);
      uint64_t v47 = v32[5];
      unint64_t v48 = &v30[v47];
      int64_t v49 = &v31[v47];
      *(void *)unint64_t v48 = *(void *)v49;
      *((void *)v48 + 1) = *((void *)v49 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v50 = v32[6];
      int64_t v51 = &v30[v50];
      unint64_t v52 = &v31[v50];
      *(void *)int64_t v51 = *(void *)v52;
      *((void *)v51 + 1) = *((void *)v52 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)&v30[v32[7]] = *(void *)&v31[v32[7]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)&v30[v32[8]] = *(void *)&v31[v32[8]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_WORD *)&v30[v32[9]] = *(_WORD *)&v31[v32[9]];
      v17(&v30[v32[10]], &v31[v32[10]], v8);
      goto LABEL_7;
    }
    sub_251E6E93C((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for StaticResident);
    goto LABEL_6;
  }
  if (v35)
  {
LABEL_6:
    uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FDA0);
    memcpy(v30, v31, *(void *)(*(void *)(v45 - 8) + 64));
    goto LABEL_7;
  }
  int64_t v36 = *(void (**)(char *, char *, uint64_t))(v53 + 16);
  v36(v30, v31, v8);
  uint64_t v37 = v32[5];
  int64_t v38 = &v30[v37];
  int v39 = &v31[v37];
  *(void *)int64_t v38 = *(void *)v39;
  *((void *)v38 + 1) = *((void *)v39 + 1);
  uint64_t v40 = v32[6];
  BOOL v41 = &v30[v40];
  uint64_t v42 = &v31[v40];
  *(void *)BOOL v41 = *(void *)v42;
  *((void *)v41 + 1) = *((void *)v42 + 1);
  *(void *)&v30[v32[7]] = *(void *)&v31[v32[7]];
  *(void *)&v30[v32[8]] = *(void *)&v31[v32[8]];
  *(_WORD *)&v30[v32[9]] = *(_WORD *)&v31[v32[9]];
  uint64_t v43 = v32[10];
  int64_t v54 = &v30[v43];
  uint64_t v44 = &v31[v43];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v36(v54, v44, v8);
  (*(void (**)(char *, void, uint64_t, int *))(v33 + 56))(v30, 0, 1, v32);
LABEL_7:
  *(void *)((char *)v55 + v56[6]) = *(void *)((char *)a2 + v56[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v55 + v56[7]) = *(void *)((char *)a2 + v56[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v55 + v56[8]) = *(void *)((char *)a2 + v56[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v55 + v56[9]) = *(void *)((char *)a2 + v56[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v55 + v56[10]) = *(void *)((char *)a2 + v56[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v55 + v56[11]) = *(void *)((char *)a2 + v56[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v55 + v56[12]) = *(void *)((char *)a2 + v56[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v55 + v56[13]) = *(void *)((char *)a2 + v56[13]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v55 + v56[14]) = *(void *)((char *)a2 + v56[14]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v55 + v56[15]) = *(void *)((char *)a2 + v56[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v55 + v56[16]) = *(void *)((char *)a2 + v56[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v55 + v56[17]) = *(void *)((char *)a2 + v56[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v55 + v56[18]) = *(void *)((char *)a2 + v56[18]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v55 + v56[19]) = *(void *)((char *)a2 + v56[19]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)v55 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  *(void *)((char *)v55 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v55;
}

uint64_t sub_251E6E93C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *assignWithTake for SpeakersAndTelevisionsCategoryInformation(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  int v57 = a2;
  uint64_t v58 = (int *)type metadata accessor for StateSnapshot(0);
  uint64_t v5 = v58[5];
  uint64_t v6 = (char *)a1 + v5;
  char v7 = (char *)a2 + v5;
  uint64_t v8 = sub_251F34DA0();
  uint64_t v55 = *(void *)(v8 - 8);
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(v55 + 40);
  v9(v6, v7, v8);
  int64_t v10 = (int *)type metadata accessor for StaticHome();
  uint64_t v11 = v10[5];
  uint64_t v12 = &v6[v11];
  uint64_t v13 = &v7[v11];
  uint64_t v15 = *(void *)v13;
  uint64_t v14 = *((void *)v13 + 1);
  *(void *)uint64_t v12 = v15;
  *((void *)v12 + 1) = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = v10[6];
  BOOL v17 = &v6[v16];
  unint64_t v18 = &v7[v16];
  v9(&v6[v16], &v7[v16], v8);
  uint64_t v19 = (int *)type metadata accessor for StaticRoom(0);
  uint64_t v20 = v19[5];
  uint64_t v21 = &v17[v20];
  uint64_t v22 = &v18[v20];
  uint64_t v24 = *(void *)v22;
  uint64_t v23 = *((void *)v22 + 1);
  *(void *)uint64_t v21 = v24;
  *((void *)v21 + 1) = v23;
  swift_bridgeObjectRelease();
  v17[v19[6]] = v18[v19[6]];
  *(void *)&v17[v19[7]] = *(void *)&v18[v19[7]];
  swift_bridgeObjectRelease();
  v9(&v17[v19[8]], &v18[v19[8]], v8);
  *(void *)&v17[v19[9]] = *(void *)&v18[v19[9]];
  swift_bridgeObjectRelease();
  *(void *)&v17[v19[10]] = *(void *)&v18[v19[10]];
  swift_bridgeObjectRelease();
  *(void *)&v17[v19[11]] = *(void *)&v18[v19[11]];
  swift_bridgeObjectRelease();
  *(void *)&v17[v19[12]] = *(void *)&v18[v19[12]];
  swift_bridgeObjectRelease();
  *(void *)&v17[v19[13]] = *(void *)&v18[v19[13]];
  swift_bridgeObjectRelease();
  *(void *)&v17[v19[14]] = *(void *)&v18[v19[14]];
  swift_bridgeObjectRelease();
  *(void *)&v17[v19[15]] = *(void *)&v18[v19[15]];
  swift_bridgeObjectRelease();
  *(void *)&v17[v19[16]] = *(void *)&v18[v19[16]];
  swift_bridgeObjectRelease();
  *(void *)&v17[v19[17]] = *(void *)&v18[v19[17]];
  swift_bridgeObjectRelease();
  *(void *)&v17[v19[18]] = *(void *)&v18[v19[18]];
  swift_bridgeObjectRelease();
  uint64_t v25 = v10[7];
  uint64_t v26 = &v6[v25];
  int64_t v27 = &v7[v25];
  v9(&v6[v25], &v7[v25], v8);
  uint64_t v28 = (int *)type metadata accessor for StaticUser();
  uint64_t v29 = v28[5];
  uint64_t v30 = &v26[v29];
  unint64_t v31 = &v27[v29];
  uint64_t v33 = *(void *)v31;
  uint64_t v32 = *((void *)v31 + 1);
  *(void *)uint64_t v30 = v33;
  *((void *)v30 + 1) = v32;
  swift_bridgeObjectRelease();
  uint64_t v56 = v8;
  v9(&v26[v28[6]], &v27[v28[6]], v8);
  v26[v28[7]] = v27[v28[7]];
  v26[v28[8]] = v27[v28[8]];
  v6[v10[8]] = v7[v10[8]];
  v6[v10[9]] = v7[v10[9]];
  v6[v10[10]] = v7[v10[10]];
  *(void *)&v6[v10[11]] = *(void *)&v7[v10[11]];
  swift_bridgeObjectRelease();
  *(void *)&v6[v10[12]] = *(void *)&v7[v10[12]];
  swift_bridgeObjectRelease();
  *(void *)&v6[v10[13]] = *(void *)&v7[v10[13]];
  swift_bridgeObjectRelease();
  *(void *)&v6[v10[14]] = *(void *)&v7[v10[14]];
  swift_bridgeObjectRelease();
  *(void *)&v6[v10[15]] = *(void *)&v7[v10[15]];
  swift_bridgeObjectRelease();
  *(void *)&v6[v10[16]] = *(void *)&v7[v10[16]];
  swift_bridgeObjectRelease();
  v6[v10[17]] = v7[v10[17]];
  *(void *)&v6[v10[18]] = *(void *)&v7[v10[18]];
  swift_bridgeObjectRelease();
  v6[v10[19]] = v7[v10[19]];
  uint64_t v34 = v10[20];
  int v35 = &v6[v34];
  int64_t v36 = &v7[v34];
  uint64_t v37 = (int *)type metadata accessor for StaticResident();
  uint64_t v38 = *((void *)v37 - 1);
  int v39 = *(uint64_t (**)(char *, uint64_t, int *))(v38 + 48);
  LODWORD(v26) = v39(v35, 1, v37);
  int v40 = v39(v36, 1, v37);
  if (!v26)
  {
    if (!v40)
    {
      v9(v35, v36, v56);
      uint64_t v45 = v37[5];
      uint64_t v46 = &v35[v45];
      uint64_t v47 = &v36[v45];
      uint64_t v49 = *(void *)v47;
      uint64_t v48 = *((void *)v47 + 1);
      *(void *)uint64_t v46 = v49;
      *((void *)v46 + 1) = v48;
      swift_bridgeObjectRelease();
      uint64_t v50 = v37[6];
      int64_t v51 = &v35[v50];
      unint64_t v52 = &v36[v50];
      uint64_t v54 = *(void *)v52;
      uint64_t v53 = *((void *)v52 + 1);
      *(void *)int64_t v51 = v54;
      *((void *)v51 + 1) = v53;
      swift_bridgeObjectRelease();
      *(void *)&v35[v37[7]] = *(void *)&v36[v37[7]];
      swift_bridgeObjectRelease();
      *(void *)&v35[v37[8]] = *(void *)&v36[v37[8]];
      swift_bridgeObjectRelease();
      *(_WORD *)&v35[v37[9]] = *(_WORD *)&v36[v37[9]];
      v9(&v35[v37[10]], &v36[v37[10]], v56);
      goto LABEL_7;
    }
    sub_251E6E93C((uint64_t)v35, (uint64_t (*)(void))type metadata accessor for StaticResident);
    goto LABEL_6;
  }
  if (v40)
  {
LABEL_6:
    uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FDA0);
    memcpy(v35, v36, *(void *)(*(void *)(v42 - 8) + 64));
    goto LABEL_7;
  }
  BOOL v41 = *(void (**)(char *, char *, uint64_t))(v55 + 32);
  v41(v35, v36, v56);
  *(_OWORD *)&v35[v37[5]] = *(_OWORD *)&v36[v37[5]];
  *(_OWORD *)&v35[v37[6]] = *(_OWORD *)&v36[v37[6]];
  *(void *)&v35[v37[7]] = *(void *)&v36[v37[7]];
  *(void *)&v35[v37[8]] = *(void *)&v36[v37[8]];
  *(_WORD *)&v35[v37[9]] = *(_WORD *)&v36[v37[9]];
  v41(&v35[v37[10]], &v36[v37[10]], v56);
  (*(void (**)(char *, void, uint64_t, int *))(v38 + 56))(v35, 0, 1, v37);
LABEL_7:
  *(void *)((char *)a1 + v58[6]) = *(void *)((char *)v57 + v58[6]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[7]) = *(void *)((char *)v57 + v58[7]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[8]) = *(void *)((char *)v57 + v58[8]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[9]) = *(void *)((char *)v57 + v58[9]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[10]) = *(void *)((char *)v57 + v58[10]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[11]) = *(void *)((char *)v57 + v58[11]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[12]) = *(void *)((char *)v57 + v58[12]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[13]) = *(void *)((char *)v57 + v58[13]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[14]) = *(void *)((char *)v57 + v58[14]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[15]) = *(void *)((char *)v57 + v58[15]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[16]) = *(void *)((char *)v57 + v58[16]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[17]) = *(void *)((char *)v57 + v58[17]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[18]) = *(void *)((char *)v57 + v58[18]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[19]) = *(void *)((char *)v57 + v58[19]);
  swift_bridgeObjectRelease();
  uint64_t v43 = *(int *)(a3 + 24);
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)v57 + *(int *)(a3 + 20));
  *(void *)((char *)a1 + v43) = *(void *)((char *)v57 + v43);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SpeakersAndTelevisionsCategoryInformation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251E6F0A8);
}

uint64_t sub_251E6F0A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for StateSnapshot(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for SpeakersAndTelevisionsCategoryInformation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251E6F17C);
}

uint64_t sub_251E6F17C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for StateSnapshot(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_251E6F238()
{
  uint64_t result = type metadata accessor for StateSnapshot(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_251E6F2DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_251E6D958(a1, *(void *)(v2 + 16), a2);
}

uint64_t CoordinationSnapshot.staticCoordinationDataDictionary.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CoordinationSnapshot.multipleUpdatesNeeded(for:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  if (!*(void *)(v3 + 16)) {
    return 2;
  }
  id v4 = (id)a1;
  unint64_t v5 = sub_2519FE584(a1);
  if ((v6 & 1) == 0) {
    return 2;
  }
  uint64_t v7 = *(void *)(v3 + 56) + 32 * v5;
  id v8 = *(id *)(v7 + 16);
  if (v8 != (id)4)
  {
    sub_251A1A4CC(*(id *)(v7 + 16));
    uint64_t v29 = (uint64_t)v8;
LABEL_28:
    sub_251A1A4DC((id)v29);
    uint64_t v30 = 4;
LABEL_30:
    sub_251A1A4DC((id)v30);
    return 2;
  }
  uint64_t v9 = *(void *)v7;
  unint64_t v10 = *(void *)(v7 + 8);
  uint64_t v11 = *(void **)(v7 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_251A1A4CC((id)4);
  sub_251A1A4CC(v11);
  sub_251A1A4DC((id)4);
  sub_251A1A4DC((id)4);
  if (v11 != (void *)4)
  {
    sub_251A1A4CC(v11);
    sub_251A1A4DC(v11);
    sub_251A1A4DC((id)4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_251A1A4DC((id)4);
    uint64_t v30 = (uint64_t)v11;
    goto LABEL_30;
  }
  sub_251A1A4DC((id)4);
  sub_251A1A4DC((id)4);
  if (qword_26B21E6D8 != -1) {
    swift_once();
  }
  uint64_t v12 = &unk_26B21E000;
  unint64_t v13 = sub_251C706DC((uint64_t)v4);
  unint64_t v14 = v13;
  if (!(v13 >> 62))
  {
    if (*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_9;
    }
    goto LABEL_36;
  }
  if (!sub_251F366C0())
  {
LABEL_36:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v29 = 4;
    goto LABEL_28;
  }
LABEL_9:
  if ((v14 & 0xC000000000000001) != 0)
  {
    id v15 = (id)MEMORY[0x2533AB3A0](0, v14);
  }
  else
  {
    if (!*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_39;
    }
    id v15 = *(id *)(v14 + 32);
  }
  id v8 = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = (void **)(qword_26B21E630 + OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_currentHome);
  swift_beginAccess();
  BOOL v17 = *v16;
  if (!*v16)
  {
    unint64_t v34 = 0;
    goto LABEL_57;
  }
  id v65 = v4;
  unint64_t v67 = v10;
  uint64_t v68 = v9;
  id v18 = objc_msgSend(v17, sel_accessories);
  sub_251A1A568(0, (unint64_t *)&qword_26B21EAF8);
  unint64_t v10 = sub_251F35AC0();

  unint64_t v2 = MEMORY[0x263F8EE78];
  unint64_t v69 = MEMORY[0x263F8EE78];
  if (v10 >> 62)
  {
LABEL_39:
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_251F366C0();
    swift_bridgeObjectRelease();
    if (v19) {
      goto LABEL_15;
    }
LABEL_40:
    swift_bridgeObjectRelease();
    unint64_t v33 = MEMORY[0x263F8EE78];
    goto LABEL_41;
  }
  uint64_t v19 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v19) {
    goto LABEL_40;
  }
LABEL_15:
  id v66 = v8;
  if (v19 < 1) {
    goto LABEL_85;
  }
  for (uint64_t i = 0; i != v19; ++i)
  {
    if ((v10 & 0xC000000000000001) != 0) {
      id v21 = (id)MEMORY[0x2533AB3A0](i, v10);
    }
    else {
      id v21 = *(id *)(v10 + 8 * i + 32);
    }
    uint64_t v22 = v21;
    id v23 = objc_msgSend(v21, sel_category);
    id v24 = objc_msgSend(v23, sel_categoryType);

    uint64_t v25 = sub_251F356F0();
    uint64_t v27 = v26;

    if (v25 == 0xD000000000000024 && v27 == 0x8000000251F72CD0)
    {
      swift_bridgeObjectRelease();
LABEL_18:
      sub_251F364F0();
      sub_251F36530();
      sub_251F36540();
      sub_251F36500();
      continue;
    }
    char v28 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v28) {
      goto LABEL_18;
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v33 = v69;
  id v8 = v66;
  uint64_t v12 = (void *)&unk_26B21E000;
  unint64_t v2 = MEMORY[0x263F8EE78];
LABEL_41:
  unint64_t v69 = v2;
  if ((v33 & 0x8000000000000000) != 0 || (v33 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v35 = sub_251F366C0();
    swift_release();
    if (!v35) {
      goto LABEL_56;
    }
LABEL_44:
    if (v35 >= 1)
    {
      for (uint64_t j = 0; j != v35; ++j)
      {
        if ((v33 & 0xC000000000000001) != 0) {
          id v37 = (id)MEMORY[0x2533AB3A0](j, v33);
        }
        else {
          id v37 = *(id *)(v33 + 8 * j + 32);
        }
        uint64_t v38 = v37;
        id v39 = objc_msgSend(v37, sel_softwareVersion);
        if (v39 && (int v40 = v39, v41 = (uint64_t)objc_msgSend(v39, sel_majorVersion), v40, v41 < 18))
        {
          sub_251F364F0();
          sub_251F36530();
          sub_251F36540();
          sub_251F36500();
        }
        else
        {
        }
      }
      swift_release();
      unint64_t v34 = v69;
      unint64_t v10 = v67;
      uint64_t v9 = v68;
      id v4 = v65;
      uint64_t v12 = (void *)&unk_26B21E000;
      goto LABEL_57;
    }
    goto LABEL_86;
  }
  uint64_t v35 = *(void *)(v33 + 16);
  if (v35) {
    goto LABEL_44;
  }
LABEL_56:
  swift_release();
  unint64_t v34 = MEMORY[0x263F8EE78];
  unint64_t v10 = v67;
  uint64_t v9 = v68;
  id v4 = v65;
LABEL_57:
  id v42 = objc_msgSend(v8, sel_siriEndpointProfile);

  if (v42)
  {
    if (v34)
    {
      if (!(v34 >> 62))
      {
        uint64_t v43 = *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        goto LABEL_61;
      }
LABEL_87:
      swift_bridgeObjectRetain();
      uint64_t v43 = sub_251F366C0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
LABEL_61:
      sub_251A1A4DC((id)4);
      sub_251A1A4DC((id)4);
      swift_bridgeObjectRelease();
      return v43 > 1;
    }
LABEL_78:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

LABEL_79:
    sub_251A1A4DC((id)4);
    sub_251A1A4DC((id)4);
    return 0;
  }
  swift_bridgeObjectRelease();
  uint64_t v44 = (void **)(v12[198] + OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_currentHome);
  swift_beginAccess();
  uint64_t v45 = *v44;
  if (!*v44) {
    goto LABEL_78;
  }
  id v66 = v8;
  id v46 = objc_msgSend(v45, sel_mediaSystems);
  sub_251A1A568(0, (unint64_t *)&qword_26B21EB08);
  unint64_t v47 = sub_251F35AC0();

  MEMORY[0x270FA5388](v48);
  v64[2] = v4;
  uint64_t v49 = sub_251A95638(sub_251E70490, (uint64_t)v64, v47);
  swift_bridgeObjectRelease();
  if (!v49)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    goto LABEL_79;
  }
  unint64_t v67 = v10;
  uint64_t v68 = v9;
  id v65 = v49;
  id v50 = objc_msgSend(v65, sel_components);
  sub_251A1A568(0, (unint64_t *)&qword_269B9D518);
  unint64_t v51 = sub_251F35AC0();

  id v52 = v66;
  if (v51 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v53 = sub_251F366C0();
    if (v53) {
      goto LABEL_67;
    }
  }
  else
  {
    uint64_t v53 = *(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v53)
    {
LABEL_67:
      id v8 = (id)(v51 & 0xC000000000000001);
      uint64_t v54 = 4;
      while (1)
      {
        id v55 = v8 ? (id)MEMORY[0x2533AB3A0](v54 - 4, v51) : *(id *)(v51 + 8 * v54);
        uint64_t v56 = v55;
        uint64_t v57 = v54 - 3;
        if (__OFADD__(v54 - 4, 1)) {
          break;
        }
        id v58 = objc_msgSend(v55, sel_mediaProfile);
        if (!v58
          || (uint64_t v59 = v58,
              id v60 = objc_msgSend(v58, sel_accessory),
              v59,
              !v60)
          || (id v61 = objc_msgSend(v60, sel_softwareVersion), v60, !v61))
        {
          swift_bridgeObjectRelease();

          uint64_t v31 = 0;
          goto LABEL_91;
        }
        uint64_t v62 = (uint64_t)objc_msgSend(v61, sel_majorVersion);

        if (v62 >= 18)
        {

          swift_bridgeObjectRelease();
          uint64_t v31 = 0;
          goto LABEL_91;
        }
        ++v54;
        if (v57 == v53)
        {

          goto LABEL_90;
        }
      }
      __break(1u);
LABEL_85:
      __break(1u);
LABEL_86:
      __break(1u);
      goto LABEL_87;
    }
  }

LABEL_90:
  swift_bridgeObjectRelease();
  uint64_t v31 = 1;
LABEL_91:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v63 = v65;

  sub_251A1A4DC((id)4);
  sub_251A1A4DC((id)4);
  swift_bridgeObjectRelease();

  return v31;
}

uint64_t sub_251E6FBE4(id *a1)
{
  id v1 = objc_msgSend(*a1, sel_uniqueIdentifier);
  uint64_t v2 = sub_251F34DA0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34D80();

  char v6 = sub_251F34D70();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v6 & 1;
}

uint64_t static CoordinationSnapshot.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_251AF8A48(*a1, *a2);
}

uint64_t CoordinationSnapshot.hash(into:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  swift_bridgeObjectRetain();
  sub_251A4364C(a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t CoordinationSnapshot.hashValue.getter()
{
  uint64_t v1 = *v0;
  sub_251F36CA0();
  sub_251A4364C((uint64_t)v3, v1);
  return sub_251F36D00();
}

uint64_t sub_251E6FD90(uint64_t *a1, uint64_t *a2)
{
  return sub_251AF8A48(*a1, *a2);
}

uint64_t sub_251E6FD9C()
{
  uint64_t v1 = *v0;
  sub_251F36CA0();
  sub_251A4364C((uint64_t)v3, v1);
  return sub_251F36D00();
}

uint64_t sub_251E6FDE4(uint64_t a1)
{
  return sub_251A4364C(a1, *v1);
}

uint64_t sub_251E6FDEC()
{
  uint64_t v1 = *v0;
  sub_251F36CA0();
  sub_251A4364C((uint64_t)v3, v1);
  return sub_251F36D00();
}

uint64_t CoordinationSnapshot.UpdateType.description.getter()
{
  uint64_t updated = type metadata accessor for CoordinationSnapshot.UpdateType();
  MEMORY[0x270FA5388](updated);
  uint64_t v3 = (uint64_t *)((char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_251AF0624(v0, (uint64_t)v3);
  uint64_t v4 = 7105601;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v5 = *v3;
      uint64_t v6 = 0x6F4665766F6D6572;
      unint64_t v7 = 0xEB00000000203A72;
      goto LABEL_4;
    case 2u:
      uint64_t v9 = *(uint64_t *)((char *)v3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269BA10D8) + 48));
      uint64_t v10 = sub_251F34DA0();
      uint64_t v11 = *(void *)(v10 - 8);
      MEMORY[0x270FA5388](v10);
      unint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, uint64_t *, uint64_t))(v11 + 32))(v13, v3, v10);
      uint64_t v22 = 0;
      unint64_t v23 = 0xE000000000000000;
      sub_251F36400();
      swift_bridgeObjectRelease();
      uint64_t v14 = 0x3A6D72616C61;
      goto LABEL_7;
    case 3u:
      uint64_t v9 = *(uint64_t *)((char *)v3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269BA10D8) + 48));
      uint64_t v10 = sub_251F34DA0();
      uint64_t v11 = *(void *)(v10 - 8);
      MEMORY[0x270FA5388](v10);
      unint64_t v13 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, uint64_t *, uint64_t))(v11 + 32))(v13, v3, v10);
      uint64_t v22 = 0;
      unint64_t v23 = 0xE000000000000000;
      sub_251F36400();
      swift_bridgeObjectRelease();
      uint64_t v14 = 0x3A72656D6974;
LABEL_7:
      uint64_t v22 = v14 & 0xFFFFFFFFFFFFLL | 0x20000000000000;
      unint64_t v23 = 0xE700000000000000;
      uint64_t v16 = type metadata accessor for StaticAlarm();
      goto LABEL_11;
    case 4u:
      uint64_t v9 = *(uint64_t *)((char *)v3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269BA10F8) + 48));
      uint64_t v10 = sub_251F34DA0();
      uint64_t v11 = *(void *)(v10 - 8);
      MEMORY[0x270FA5388](v10);
      unint64_t v13 = (char *)&v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, uint64_t *, uint64_t))(v11 + 32))(v13, v3, v10);
      uint64_t v22 = 0;
      unint64_t v23 = 0xE000000000000000;
      sub_251F36400();
      swift_bridgeObjectRelease();
      uint64_t v18 = 0x6120656C676E6953;
      unsigned int v19 = 1836212588;
      goto LABEL_10;
    case 5u:
      uint64_t v9 = *(uint64_t *)((char *)v3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269BA10F8) + 48));
      uint64_t v10 = sub_251F34DA0();
      uint64_t v11 = *(void *)(v10 - 8);
      MEMORY[0x270FA5388](v10);
      unint64_t v13 = (char *)&v22 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, uint64_t *, uint64_t))(v11 + 32))(v13, v3, v10);
      uint64_t v22 = 0;
      unint64_t v23 = 0xE000000000000000;
      sub_251F36400();
      swift_bridgeObjectRelease();
      uint64_t v18 = 0x7420656C676E6953;
      unsigned int v19 = 1919249769;
LABEL_10:
      uint64_t v22 = v18;
      unint64_t v23 = v19 | 0xEE00203A00000000;
      uint64_t v16 = type metadata accessor for StaticTimer();
LABEL_11:
      MEMORY[0x2533AAA10](v9, v16);
      sub_251F35800();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_251F35800();
      sub_251AF752C();
      sub_251F36AB0();
      sub_251F35800();
      swift_bridgeObjectRelease();
      uint64_t v4 = v22;
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      return v4;
    case 6u:
      uint64_t v22 = 0;
      unint64_t v23 = 0xE000000000000000;
      sub_251F36400();
      sub_251F35800();
      swift_bridgeObjectRelease();
      sub_251F35800();
      return v22;
    case 7u:
      return v4;
    default:
      uint64_t v5 = *v3;
      uint64_t v6 = 0x3A726F4661746164;
      unint64_t v7 = 0xE900000000000020;
LABEL_4:
      uint64_t v22 = v6;
      unint64_t v23 = v7;
      uint64_t v8 = sub_251F34DA0();
      MEMORY[0x2533AAA10](v5, v8);
      sub_251F35800();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v22;
  }
}

unint64_t sub_251E70468()
{
  unint64_t result = sub_2519FABF8(MEMORY[0x263F8EE78]);
  qword_26B220CA8 = result;
  return result;
}

uint64_t sub_251E70490(id *a1)
{
  return sub_251E6FBE4(a1) & 1;
}

uint64_t type metadata accessor for CoordinationSnapshot.UpdateType()
{
  uint64_t result = qword_26B21E8F8;
  if (!qword_26B21E8F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t _s13HomeDataModel20CoordinationSnapshotV10UpdateTypeO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t updated = type metadata accessor for CoordinationSnapshot.UpdateType();
  uint64_t v5 = MEMORY[0x270FA5388](updated);
  unint64_t v7 = (char *)&v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v76 = (uint64_t)&v75 - v9;
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v75 - v11;
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v75 - v14;
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v75 - v17;
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  id v21 = (uint64_t *)((char *)&v75 - v20);
  MEMORY[0x270FA5388](v19);
  unint64_t v23 = (uint64_t *)((char *)&v75 - v22);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4E20);
  uint64_t v25 = MEMORY[0x270FA5388](v24 - 8);
  uint64_t v27 = (uint64_t *)((char *)&v75 + *(int *)(v25 + 56) - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v28 = a1;
  uint64_t v29 = (char *)&v75 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251AF0624(v28, (uint64_t)v29);
  sub_251AF0624(a2, (uint64_t)v27);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_251AF0624((uint64_t)v29, (uint64_t)v21);
      uint64_t v30 = *v21;
      if (swift_getEnumCaseMultiPayload() != 1) {
        goto LABEL_3;
      }
      goto LABEL_5;
    case 2u:
      sub_251AF0624((uint64_t)v29, (uint64_t)v18);
      uint64_t v32 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269BA10D8) + 48);
      uint64_t v33 = *(void *)&v18[v32];
      if (swift_getEnumCaseMultiPayload() != 2)
      {
        swift_bridgeObjectRelease();
        uint64_t v68 = sub_251F34DA0();
        (*(void (**)(char *, uint64_t))(*(void *)(v68 - 8) + 8))(v18, v68);
        goto LABEL_29;
      }
      uint64_t v34 = *(uint64_t *)((char *)v27 + v32);
      uint64_t v35 = sub_251F34DA0();
      uint64_t v36 = *(void *)(v35 - 8);
      MEMORY[0x270FA5388](v35);
      uint64_t v38 = (char *)&v75 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, uint64_t *, uint64_t))(v36 + 32))(v38, v27, v35);
      char v39 = sub_251F34D70();
      int v40 = *(void (**)(char *, uint64_t))(v36 + 8);
      v40(v18, v35);
      if (v39)
      {
        char v31 = sub_251AB5D40(v33, v34);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v40(v38, v35);
        goto LABEL_22;
      }
      v40(v38, v35);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_38;
    case 3u:
      sub_251AF0624((uint64_t)v29, (uint64_t)v15);
      uint64_t v41 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269BA10D8) + 48);
      uint64_t v42 = *(void *)&v15[v41];
      if (swift_getEnumCaseMultiPayload() != 3)
      {
        swift_bridgeObjectRelease();
        uint64_t v69 = sub_251F34DA0();
        (*(void (**)(char *, uint64_t))(*(void *)(v69 - 8) + 8))(v15, v69);
        goto LABEL_29;
      }
      uint64_t v43 = *(uint64_t *)((char *)v27 + v41);
      uint64_t v44 = sub_251F34DA0();
      uint64_t v45 = *(void *)(v44 - 8);
      MEMORY[0x270FA5388](v44);
      unint64_t v47 = (char *)&v75 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, uint64_t *, uint64_t))(v45 + 32))(v47, v27, v44);
      char v48 = sub_251F34D70();
      uint64_t v49 = *(void (**)(char *, uint64_t))(v45 + 8);
      v49(v15, v44);
      if (v48)
      {
        char v31 = sub_251AB5D40(v42, v43);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        id v50 = v47;
        uint64_t v51 = v44;
        goto LABEL_21;
      }
      uint64_t v73 = v47;
      uint64_t v74 = v44;
      goto LABEL_35;
    case 4u:
      sub_251AF0624((uint64_t)v29, (uint64_t)v12);
      uint64_t v52 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269BA10F8) + 48);
      uint64_t v53 = *(void *)&v12[v52];
      if (swift_getEnumCaseMultiPayload() != 4)
      {
        swift_bridgeObjectRelease();
        uint64_t v70 = sub_251F34DA0();
        (*(void (**)(char *, uint64_t))(*(void *)(v70 - 8) + 8))(v12, v70);
        goto LABEL_29;
      }
      uint64_t v54 = *(uint64_t *)((char *)v27 + v52);
      uint64_t v55 = sub_251F34DA0();
      uint64_t v56 = *(void *)(v55 - 8);
      MEMORY[0x270FA5388](v55);
      id v58 = (char *)&v75 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, uint64_t *, uint64_t))(v56 + 32))(v58, v27, v55);
      char v59 = sub_251F34D70();
      uint64_t v49 = *(void (**)(char *, uint64_t))(v56 + 8);
      v49(v12, v55);
      if (v59)
      {
        char v31 = sub_251AB5FF4(v53, v54);
        swift_bridgeObjectRelease();
        goto LABEL_20;
      }
      uint64_t v73 = v58;
      uint64_t v74 = v55;
LABEL_35:
      v49(v73, v74);
      swift_bridgeObjectRelease();
      goto LABEL_37;
    case 5u:
      uint64_t v60 = v76;
      sub_251AF0624((uint64_t)v29, v76);
      uint64_t v61 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269BA10F8) + 48);
      uint64_t v62 = *(void *)(v60 + v61);
      if (swift_getEnumCaseMultiPayload() != 5)
      {
        swift_bridgeObjectRelease();
        uint64_t v71 = sub_251F34DA0();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v71 - 8) + 8))(v60, v71);
        goto LABEL_29;
      }
      uint64_t v63 = *(uint64_t *)((char *)v27 + v61);
      uint64_t v55 = sub_251F34DA0();
      uint64_t v64 = *(void *)(v55 - 8);
      MEMORY[0x270FA5388](v55);
      id v58 = (char *)&v75 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, uint64_t *, uint64_t))(v64 + 32))(v58, v27, v55);
      char v66 = sub_251F34D70();
      uint64_t v49 = *(void (**)(char *, uint64_t))(v64 + 8);
      v49((char *)v60, v55);
      if (v66)
      {
        char v31 = sub_251AB5FF4(v62, v63);
        swift_bridgeObjectRelease();
LABEL_20:
        swift_bridgeObjectRelease();
        id v50 = v58;
        uint64_t v51 = v55;
LABEL_21:
        v49(v50, v51);
        goto LABEL_22;
      }
      v49(v58, v55);
      swift_bridgeObjectRelease();
LABEL_37:
      swift_bridgeObjectRelease();
LABEL_38:
      sub_251AF0688((uint64_t)v29);
      goto LABEL_30;
    case 6u:
      sub_251AF0624((uint64_t)v29, (uint64_t)v7);
      if (swift_getEnumCaseMultiPayload() != 6) {
        goto LABEL_29;
      }
      char v67 = *v7 ^ *(unsigned char *)v27;
      sub_251AF0688((uint64_t)v29);
      char v31 = v67 ^ 1;
      return v31 & 1;
    case 7u:
      if (swift_getEnumCaseMultiPayload() != 7) {
        goto LABEL_29;
      }
      sub_251AF0688((uint64_t)v29);
      char v31 = 1;
      return v31 & 1;
    default:
      sub_251AF0624((uint64_t)v29, (uint64_t)v23);
      uint64_t v30 = *v23;
      if (swift_getEnumCaseMultiPayload())
      {
LABEL_3:
        swift_bridgeObjectRelease();
LABEL_29:
        sub_251E71CFC((uint64_t)v29);
LABEL_30:
        char v31 = 0;
      }
      else
      {
LABEL_5:
        char v31 = sub_251AB6424(v30, *v27);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_22:
        sub_251AF0688((uint64_t)v29);
      }
      return v31 & 1;
  }
}

unint64_t sub_251E70E48()
{
  unint64_t result = qword_269BA4E18;
  if (!qword_269BA4E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4E18);
  }
  return result;
}

ValueMetadata *type metadata accessor for CoordinationSnapshot()
{
  return &type metadata for CoordinationSnapshot;
}

uint64_t *initializeBufferWithCopyOfBuffer for CoordinationSnapshot.UpdateType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
      case 3u:
        uint64_t v9 = sub_251F34DA0();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
        uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA10D8);
        *(uint64_t *)((char *)a1 + *(int *)(v10 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v10 + 48));
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
      case 5u:
        uint64_t v11 = sub_251F34DA0();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
        uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA10F8);
        *(uint64_t *)((char *)a1 + *(int *)(v12 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v12 + 48));
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for CoordinationSnapshot.UpdateType(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  uint64_t v3 = &qword_269BA10D8;
  switch((int)result)
  {
    case 0:
    case 1:
      goto LABEL_4;
    case 2:
    case 3:
      goto LABEL_3;
    case 4:
    case 5:
      uint64_t v3 = &qword_269BA10F8;
LABEL_3:
      uint64_t v4 = sub_251F34DA0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
      __swift_instantiateConcreteTypeFromMangledName(v3);
LABEL_4:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

void *initializeWithCopy for CoordinationSnapshot.UpdateType(void *a1, void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      goto LABEL_6;
    case 2u:
    case 3u:
      uint64_t v6 = sub_251F34DA0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA10D8);
      *(void *)((char *)a1 + *(int *)(v7 + 48)) = *(void *)((char *)a2 + *(int *)(v7 + 48));
      swift_bridgeObjectRetain();
      goto LABEL_6;
    case 4u:
    case 5u:
      uint64_t v8 = sub_251F34DA0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA10F8);
      *(void *)((char *)a1 + *(int *)(v9 + 48)) = *(void *)((char *)a2 + *(int *)(v9 + 48));
      swift_bridgeObjectRetain();
LABEL_6:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *assignWithCopy for CoordinationSnapshot.UpdateType(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_251AF0688((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
      case 3u:
        uint64_t v6 = sub_251F34DA0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA10D8);
        *(void *)((char *)a1 + *(int *)(v7 + 48)) = *(void *)((char *)a2 + *(int *)(v7 + 48));
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
      case 5u:
        uint64_t v8 = sub_251F34DA0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA10F8);
        *(void *)((char *)a1 + *(int *)(v9 + 48)) = *(void *)((char *)a2 + *(int *)(v9 + 48));
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

char *initializeWithTake for CoordinationSnapshot.UpdateType(char *a1, char *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
    case 3u:
      uint64_t v6 = sub_251F34DA0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA10D8);
      *(void *)&a1[*(int *)(v7 + 48)] = *(void *)&a2[*(int *)(v7 + 48)];
      goto LABEL_5;
    case 4u:
    case 5u:
      uint64_t v8 = sub_251F34DA0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA10F8);
      *(void *)&a1[*(int *)(v9 + 48)] = *(void *)&a2[*(int *)(v9 + 48)];
LABEL_5:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithTake for CoordinationSnapshot.UpdateType(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_251AF0688((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
      case 3u:
        uint64_t v6 = sub_251F34DA0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
        uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA10D8);
        *(void *)&a1[*(int *)(v7 + 48)] = *(void *)&a2[*(int *)(v7 + 48)];
        goto LABEL_6;
      case 4u:
      case 5u:
        uint64_t v8 = sub_251F34DA0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
        uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA10F8);
        *(void *)&a1[*(int *)(v9 + 48)] = *(void *)&a2[*(int *)(v9 + 48)];
LABEL_6:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_251E71BF8()
{
  uint64_t v6 = MEMORY[0x263F8CF50] + 64;
  uint64_t v7 = MEMORY[0x263F8CF50] + 64;
  uint64_t result = sub_251F34DA0();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    uint64_t v8 = &v5;
    swift_getTupleTypeLayout2();
    uint64_t v9 = &v4;
    swift_getTupleTypeLayout2();
    uint64_t v10 = &v3;
    swift_getTupleTypeLayout2();
    uint64_t v11 = &v2;
    uint64_t v12 = &unk_251F5BC00;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_251E71CFC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4E20);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_251E71D5C()
{
  unint64_t v0 = CharacteristicKind.rawValue.getter();
  uint64_t v2 = v1;
  if (v0 == CharacteristicKind.rawValue.getter() && v2 == v3)
  {
    swift_bridgeObjectRelease_n();
    char v6 = 1;
  }
  else
  {
    char v5 = sub_251F36B10();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v6 = v5 ^ 1;
  }
  return v6 & 1;
}

BOOL sub_251E71E04(double *a1, double *a2)
{
  uint64_t v4 = type metadata accessor for StaticTimer();
  char v5 = (int *)v4;
  uint64_t v6 = *(int *)(v4 + 32);
  int v7 = *((unsigned __int8 *)a2 + v6);
  if (v7 == 1)
  {
    double v8 = *(double *)((char *)a2 + *(int *)(v4 + 24));
  }
  else if (v7 == 2)
  {
    double v8 = *a2;
  }
  else
  {
    double v8 = 0.0;
    if (v7 == 3)
    {
      double v9 = *a2;
      sub_251F34CA0();
      double v8 = v9 + v10;
      uint64_t v6 = v5[8];
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v6);
  switch(v11)
  {
    case 1:
      double v14 = *(double *)((char *)a1 + v5[6]);
      if (v8 != v14) {
        goto LABEL_19;
      }
      break;
    case 2:
      double v14 = *a1;
      if (v8 != *a1) {
        goto LABEL_19;
      }
      break;
    case 3:
      double v12 = *a1;
      sub_251F34CA0();
      double v14 = v12 + v13;
      if (v8 != v14) {
        goto LABEL_19;
      }
      break;
    default:
      if (v8 != 0.0)
      {
        double v14 = 0.0;
LABEL_19:
        char v15 = v8 < v14;
        return (v15 & 1) == 0;
      }
      break;
  }
  char v15 = MEMORY[0x2533A9CA0]((char *)a2 + v5[10], (char *)a1 + v5[10]);
  return (v15 & 1) == 0;
}

uint64_t sub_251E71F24()
{
  unint64_t v0 = CharacteristicKind.rawValue.getter();
  uint64_t v2 = v1;
  if (v0 == CharacteristicKind.rawValue.getter() && v2 == v3)
  {
    swift_bridgeObjectRelease_n();
    char v6 = 1;
  }
  else
  {
    char v5 = sub_251F36B10();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v6 = v5 ^ 1;
  }
  return v6 & 1;
}

BOOL sub_251E71FCC(double *a1, double *a2)
{
  uint64_t v4 = type metadata accessor for StaticTimer();
  char v5 = (int *)v4;
  uint64_t v6 = *(int *)(v4 + 32);
  int v7 = *((unsigned __int8 *)a1 + v6);
  if (v7 == 1)
  {
    double v8 = *(double *)((char *)a1 + *(int *)(v4 + 24));
  }
  else if (v7 == 2)
  {
    double v8 = *a1;
  }
  else
  {
    double v8 = 0.0;
    if (v7 == 3)
    {
      double v9 = *a1;
      sub_251F34CA0();
      double v8 = v9 + v10;
      uint64_t v6 = v5[8];
    }
  }
  int v11 = *((unsigned __int8 *)a2 + v6);
  switch(v11)
  {
    case 1:
      double v14 = *(double *)((char *)a2 + v5[6]);
      if (v8 != v14) {
        goto LABEL_19;
      }
      break;
    case 2:
      double v14 = *a2;
      if (v8 != *a2) {
        goto LABEL_19;
      }
      break;
    case 3:
      double v12 = *a2;
      sub_251F34CA0();
      double v14 = v12 + v13;
      if (v8 != v14) {
        goto LABEL_19;
      }
      break;
    default:
      if (v8 != 0.0)
      {
        double v14 = 0.0;
LABEL_19:
        char v15 = v8 < v14;
        return (v15 & 1) == 0;
      }
      break;
  }
  char v15 = MEMORY[0x2533A9CA0]((char *)a1 + v5[10], (char *)a2 + v5[10]);
  return (v15 & 1) == 0;
}

uint64_t sub_251E720EC()
{
  unint64_t v0 = CharacteristicKind.rawValue.getter();
  uint64_t v2 = v1;
  if (v0 == CharacteristicKind.rawValue.getter() && v2 == v3) {
    char v5 = 0;
  }
  else {
    char v5 = sub_251F36B10();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

BOOL sub_251E72188(unsigned __int8 a1, unsigned __int8 a2)
{
  if (qword_269B9C4F0 != -1) {
LABEL_17:
  }
    swift_once();
  uint64_t v4 = qword_269BF3250;
  uint64_t v5 = *(void *)(qword_269BF3250 + 16);
  if (v5)
  {
    uint64_t v6 = 0;
    while (*(unsigned __int8 *)(qword_269BF3250 + v6 + 32) != a2)
    {
      if (v5 == ++v6) {
        goto LABEL_6;
      }
    }
    uint64_t v11 = sub_251D36EE0(a1, qword_269BF3250);
    if ((v12 & 1) == 0) {
      return v6 < v11;
    }
    uint64_t v5 = *(void *)(v4 + 16);
    if (v5)
    {
LABEL_6:
      for (uint64_t i = 0; ; ++i)
      {
        int v8 = *(unsigned __int8 *)(v4 + 32 + i);
        BOOL result = v8 == a2;
        if (v8 == a2) {
          break;
        }
        uint64_t v10 = i + 1;
        if (__OFADD__(i, 1))
        {
          __break(1u);
          goto LABEL_17;
        }
        if (v10 == v5) {
          return result;
        }
      }
      return result;
    }
  }
  return 0;
}

BOOL sub_251E72280(double *a1, double *a2)
{
  uint64_t v4 = type metadata accessor for StaticTimer();
  uint64_t v5 = (int *)v4;
  uint64_t v6 = *(int *)(v4 + 32);
  int v7 = *((unsigned __int8 *)a2 + v6);
  if (v7 == 1)
  {
    double v8 = *(double *)((char *)a2 + *(int *)(v4 + 24));
  }
  else if (v7 == 2)
  {
    double v8 = *a2;
  }
  else
  {
    double v8 = 0.0;
    if (v7 == 3)
    {
      double v9 = *a2;
      sub_251F34CA0();
      double v8 = v9 + v10;
      uint64_t v6 = v5[8];
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v6);
  switch(v11)
  {
    case 1:
      double v14 = *(double *)((char *)a1 + v5[6]);
      if (v8 != v14) {
        return v8 < v14;
      }
      return MEMORY[0x2533A9CA0]((char *)a2 + v5[10], (char *)a1 + v5[10]) & 1;
    case 2:
      double v14 = *a1;
      if (v8 != *a1) {
        return v8 < v14;
      }
      return MEMORY[0x2533A9CA0]((char *)a2 + v5[10], (char *)a1 + v5[10]) & 1;
    case 3:
      double v12 = *a1;
      sub_251F34CA0();
      double v14 = v12 + v13;
      if (v8 != v14) {
        return v8 < v14;
      }
      return MEMORY[0x2533A9CA0]((char *)a2 + v5[10], (char *)a1 + v5[10]) & 1;
  }
  if (v8 == 0.0) {
    return MEMORY[0x2533A9CA0]((char *)a2 + v5[10], (char *)a1 + v5[10]) & 1;
  }
  double v14 = 0.0;
  return v8 < v14;
}

uint64_t sub_251E7239C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  double v12 = (int *)type metadata accessor for StaticTimer();
  uint64_t v35 = *((void *)v12 - 1);
  MEMORY[0x270FA5388](v12);
  double v14 = (double *)((char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  if ((*(uint64_t (**)(uint64_t, uint64_t))(a5 + 80))(a4, a5))
  {
    uint64_t v15 = sub_251F34D20();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(a3, v15);
    uint64_t v16 = sub_251F34DA0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(a2, v16);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(a4 - 8) + 8))(a1, a4);
    uint64_t v17 = *(uint64_t (**)(void, void, void, void))(v35 + 56);
    return v17(a6, 1, 1, v12);
  }
  else
  {
    *double v14 = (*(double (**)(uint64_t, uint64_t))(a5 + 24))(a4, a5);
    uint64_t v19 = (char *)v14 + v12[5];
    uint64_t v33 = sub_251F34D20();
    uint64_t v34 = a6;
    uint64_t v20 = *(void *)(v33 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v19, a3, v33);
    *(double *)((char *)v14 + v12[6]) = (*(double (**)(uint64_t, uint64_t))(a5 + 32))(a4, a5);
    uint64_t v21 = (*(uint64_t (**)(uint64_t, uint64_t))(a5 + 40))(a4, a5);
    uint64_t v22 = (uint64_t *)((char *)v14 + v12[7]);
    *uint64_t v22 = v21;
    v22[1] = v23;
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a5 + 48))(v36, a4, a5);
    sub_251E72A8C((uint64_t)v36, &v37);
    *((unsigned char *)v14 + v12[8]) = v37;
    *((unsigned char *)v14 + v12[9]) = (*(uint64_t (**)(uint64_t, uint64_t))(a5 + 56))(a4, a5) & 1;
    uint64_t v24 = sub_251F34DA0();
    uint64_t v32 = &v30;
    uint64_t v25 = *(void *)(v24 - 8);
    MEMORY[0x270FA5388](v24);
    uint64_t v31 = a2;
    uint64_t v27 = (char *)&v30 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(uint64_t, uint64_t))(a5 + 64))(a4, a5);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(a3, v33);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(a4 - 8) + 8))(a1, a4);
    uint64_t v28 = *(void (**)(void, void, void))(v25 + 32);
    v28((char *)v14 + v12[10], v27, v24);
    v28((char *)v14 + v12[11], v31, v24);
    uint64_t v29 = v34;
    sub_251E746D0((uint64_t)v14, v34);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, int *))(v35 + 56))(v29, 0, 1, v12);
  }
}

uint64_t StaticTimer.State.rawValue.getter()
{
  return *v0;
}

double StaticTimer.remainingTime.getter()
{
  return *(double *)v0;
}

uint64_t StaticTimer.creationTime.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for StaticTimer() + 20);
  uint64_t v4 = sub_251F34D20();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for StaticTimer()
{
  uint64_t result = qword_269BA4E70;
  if (!qword_269BA4E70) {
    return swift_getSingletonMetadata();
  }
  return result;
}

double StaticTimer.duration.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for StaticTimer() + 24));
}

uint64_t StaticTimer.title.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for StaticTimer() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticTimer.state.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for StaticTimer();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t StaticTimer.isFiring.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticTimer() + 36));
}

uint64_t StaticTimer.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for StaticTimer() + 40);
  uint64_t v4 = sub_251F34DA0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t StaticTimer.parentContainerUUID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for StaticTimer() + 44);
  uint64_t v4 = sub_251F34DA0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t sub_251E72A8C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  sub_251E759D0(a1, (uint64_t)&v8);
  if (v9)
  {
    sub_251A1A444(&v8, (uint64_t)v10);
    uint64_t v4 = v11;
    uint64_t v5 = v12;
    __swift_project_boxed_opaque_existential_1(v10, v11);
    uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
    sub_251E75A38(a1);
    if (v6 != 2 && v6 != 3) {
      LOBYTE(v6) = v6 == 1;
    }
    uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v10);
  }
  else
  {
    sub_251E75A38(a1);
    uint64_t result = sub_251E75A38((uint64_t)&v8);
    LOBYTE(v6) = 0;
  }
  *a2 = v6;
  return result;
}

BOOL static StaticTimer.< infix(_:_:)(double *a1, double *a2)
{
  uint64_t v4 = type metadata accessor for StaticTimer();
  uint64_t v5 = (int *)v4;
  uint64_t v6 = *(int *)(v4 + 32);
  int v7 = *((unsigned __int8 *)a1 + v6);
  if (v7 == 1)
  {
    double v8 = *(double *)((char *)a1 + *(int *)(v4 + 24));
  }
  else if (v7 == 2)
  {
    double v8 = *a1;
  }
  else
  {
    double v8 = 0.0;
    if (v7 == 3)
    {
      double v9 = *a1;
      sub_251F34CA0();
      double v8 = v9 + v10;
      uint64_t v6 = v5[8];
    }
  }
  int v11 = *((unsigned __int8 *)a2 + v6);
  switch(v11)
  {
    case 1:
      double v14 = *(double *)((char *)a2 + v5[6]);
      if (v8 != v14) {
        return v8 < v14;
      }
      return MEMORY[0x2533A9CA0]((char *)a1 + v5[10], (char *)a2 + v5[10]) & 1;
    case 2:
      double v14 = *a2;
      if (v8 != *a2) {
        return v8 < v14;
      }
      return MEMORY[0x2533A9CA0]((char *)a1 + v5[10], (char *)a2 + v5[10]) & 1;
    case 3:
      double v12 = *a2;
      sub_251F34CA0();
      double v14 = v12 + v13;
      if (v8 != v14) {
        return v8 < v14;
      }
      return MEMORY[0x2533A9CA0]((char *)a1 + v5[10], (char *)a2 + v5[10]) & 1;
  }
  if (v8 == 0.0) {
    return MEMORY[0x2533A9CA0]((char *)a1 + v5[10], (char *)a2 + v5[10]) & 1;
  }
  double v14 = 0.0;
  return v8 < v14;
}

Swift::Double __swiftcall StaticTimer.calculatedRemainingTime()()
{
  uint64_t v1 = type metadata accessor for StaticTimer();
  int v2 = *((unsigned __int8 *)v0 + *(int *)(v1 + 32));
  if (v2 == 1) {
    return *(Swift::Double *)((char *)v0 + *(int *)(v1 + 24));
  }
  if (v2 == 2) {
    return *v0;
  }
  Swift::Double result = 0.0;
  if (v2 == 3)
  {
    double v4 = *v0;
    sub_251F34CA0();
    return v4 + v5;
  }
  return result;
}

uint64_t StaticTimer.hash(into:)()
{
  sub_251F36CF0();
  uint64_t v1 = type metadata accessor for StaticTimer();
  sub_251F34D20();
  sub_251E745C8(&qword_269B9CF80, MEMORY[0x270FA9118]);
  sub_251F35610();
  sub_251F36CF0();
  if (*(void *)(v0 + *(int *)(v1 + 28) + 8))
  {
    sub_251F36CC0();
    swift_bridgeObjectRetain();
    sub_251F357B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_251F36CC0();
  }
  sub_251F36CB0();
  sub_251F36CC0();
  sub_251F34DA0();
  sub_251E745C8((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA9588]);
  sub_251F35610();
  return sub_251F35610();
}

uint64_t sub_251E72E68(char a1)
{
  uint64_t result = 0x6E696E69616D6572;
  switch(a1)
  {
    case 1:
      unsigned int v3 = 1634038371;
      goto LABEL_4;
    case 2:
      unsigned int v3 = 1634891108;
LABEL_4:
      uint64_t result = v3 | 0x6E6F697400000000;
      break;
    case 3:
      uint64_t result = 0x656C746974;
      break;
    case 4:
      uint64_t result = 0x6574617473;
      break;
    case 5:
      uint64_t result = 0x676E697269467369;
      break;
    case 6:
      uint64_t result = 25705;
      break;
    case 7:
      uint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_251E72F68()
{
  return sub_251E72E68(*v0);
}

uint64_t sub_251E72F70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251E75620(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251E72F98(uint64_t a1)
{
  unint64_t v2 = sub_251E744CC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E72FD4(uint64_t a1)
{
  unint64_t v2 = sub_251E744CC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticTimer.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4E28);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  double v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251E744CC();
  sub_251F36DA0();
  v11[31] = 0;
  sub_251F369F0();
  if (!v2)
  {
    uint64_t v9 = type metadata accessor for StaticTimer();
    v11[30] = 1;
    sub_251F34D20();
    sub_251E745C8(&qword_269B9F590, MEMORY[0x270FA9118]);
    sub_251F36A20();
    v11[29] = 2;
    sub_251F369F0();
    v11[28] = 3;
    sub_251F36910();
    v11[27] = *(unsigned char *)(v3 + *(int *)(v9 + 32));
    v11[26] = 4;
    sub_251E74520();
    sub_251F36A20();
    v11[25] = 5;
    sub_251F369E0();
    v11[24] = 6;
    sub_251F34DA0();
    sub_251E745C8(&qword_26B21E348, MEMORY[0x270FA9588]);
    sub_251F36A20();
    v11[15] = 7;
    sub_251F36A20();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t StaticTimer.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t StaticTimer.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v48 = a2;
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4E40);
  uint64_t v4 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v6 = (char *)v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for StaticTimer();
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251E744CC();
  id v50 = v6;
  sub_251F36D90();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  uint64_t v10 = v4;
  uint64_t v47 = v7;
  char v59 = 0;
  uint64_t v11 = v49;
  sub_251F36850();
  double v12 = v9;
  *(void *)uint64_t v9 = v13;
  uint64_t v14 = sub_251F34D20();
  uint64_t v46 = v40;
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v58 = 1;
  sub_251E745C8(&qword_269B9DBE8, MEMORY[0x270FA9118]);
  sub_251F36880();
  uint64_t v18 = v12;
  uint64_t v19 = (int *)v47;
  uint64_t v20 = *(int *)(v47 + 20);
  uint64_t v44 = v15;
  uint64_t v45 = (uint64_t)v18;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(&v18[v20], v17, v14);
  char v57 = 2;
  sub_251F36850();
  uint64_t v21 = v10;
  *(void *)(v45 + v19[6]) = v22;
  char v56 = 3;
  uint64_t v23 = sub_251F36790();
  uint64_t v24 = v19;
  uint64_t v25 = v45;
  uint64_t v26 = (uint64_t *)(v45 + v24[7]);
  *uint64_t v26 = v23;
  v26[1] = v27;
  char v54 = 4;
  sub_251E74574();
  sub_251F36880();
  *(unsigned char *)(v25 + v24[8]) = v55;
  char v53 = 5;
  char v28 = sub_251F36840();
  uint64_t v42 = v14;
  *(unsigned char *)(v25 + v24[9]) = v28 & 1;
  uint64_t v29 = sub_251F34DA0();
  uint64_t v46 = v40;
  uint64_t v43 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  v40[2] = v30;
  uint64_t v31 = v24;
  unint64_t v32 = (v30 + 15) & 0xFFFFFFFFFFFFFFF0;
  char v52 = 6;
  uint64_t v33 = sub_251E745C8(&qword_269B9CC80, MEMORY[0x270FA9588]);
  uint64_t v41 = v29;
  v40[1] = v33;
  sub_251F36880();
  uint64_t v34 = v31[10];
  uint64_t v35 = v45;
  uint64_t v36 = *(void (**)(void, void, void))(v43 + 32);
  v43 += 32;
  char v37 = (void (*)(uint64_t, char *, uint64_t))v36;
  uint64_t v38 = ((uint64_t (*)(uint64_t, char *, uint64_t))v36)(v45 + v34, (char *)v40 - v32, v41);
  uint64_t v46 = v40;
  MEMORY[0x270FA5388](v38);
  char v51 = 7;
  sub_251F36880();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v50, v11);
  v37(v35 + *(int *)(v47 + 44), (char *)v40 - v32, v41);
  sub_251E74610(v35, v48);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return sub_251E74674(v35);
}

uint64_t sub_251E73A6C()
{
  return sub_251F36D00();
}

uint64_t sub_251E73AB0()
{
  return sub_251F36D00();
}

uint64_t sub_251E73AEC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticTimer.init(from:)(a1, a2);
}

uint64_t sub_251E73B04(void *a1)
{
  return StaticTimer.encode(to:)(a1);
}

BOOL sub_251E73B1C(double *a1, double *a2, int *a3)
{
  uint64_t v6 = a3[8];
  int v7 = *((unsigned __int8 *)a1 + v6);
  if (v7 == 1)
  {
    double v8 = *(double *)((char *)a1 + a3[6]);
  }
  else if (v7 == 2)
  {
    double v8 = *a1;
  }
  else
  {
    double v8 = 0.0;
    if (v7 == 3)
    {
      double v9 = *a1;
      sub_251F34CA0();
      double v8 = v9 + v10;
      uint64_t v6 = a3[8];
    }
  }
  int v11 = *((unsigned __int8 *)a2 + v6);
  switch(v11)
  {
    case 1:
      double v14 = *(double *)((char *)a2 + a3[6]);
      if (v8 != v14) {
        return v8 < v14;
      }
      return MEMORY[0x2533A9CA0]((char *)a1 + a3[10], (char *)a2 + a3[10]) & 1;
    case 2:
      double v14 = *a2;
      if (v8 != *a2) {
        return v8 < v14;
      }
      return MEMORY[0x2533A9CA0]((char *)a1 + a3[10], (char *)a2 + a3[10]) & 1;
    case 3:
      double v12 = *a2;
      sub_251F34CA0();
      double v14 = v12 + v13;
      if (v8 != v14) {
        return v8 < v14;
      }
      return MEMORY[0x2533A9CA0]((char *)a1 + a3[10], (char *)a2 + a3[10]) & 1;
  }
  if (v8 == 0.0) {
    return MEMORY[0x2533A9CA0]((char *)a1 + a3[10], (char *)a2 + a3[10]) & 1;
  }
  double v14 = 0.0;
  return v8 < v14;
}

uint64_t StaticTimer.shouldBeVisible.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for StaticTimer();
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v3);
  double v8 = (char *)&v17 - v7;
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  int v11 = (char *)&v17 - v10;
  int v12 = *(unsigned __int8 *)(v1 + *(int *)(v9 + 32));
  sub_251E74610(v1, (uint64_t)&v17 - v10);
  if (v12 == 3)
  {
    sub_251E74674((uint64_t)v11);
    sub_251E74610(v1, (uint64_t)v8);
    uint64_t v13 = 1;
  }
  else
  {
    int v14 = v11[*(int *)(v2 + 32)];
    sub_251E74674((uint64_t)v11);
    sub_251E74610(v1, (uint64_t)v8);
    if (v14 == 2)
    {
      uint64_t v13 = 1;
    }
    else
    {
      int v15 = v8[*(int *)(v2 + 32)];
      sub_251E746D0((uint64_t)v8, (uint64_t)v5);
      if (v15 == 1) {
        uint64_t v13 = v5[*(int *)(v2 + 36)];
      }
      else {
        uint64_t v13 = 0;
      }
      double v8 = v5;
    }
  }
  sub_251E74674((uint64_t)v8);
  return v13;
}

HomeDataModel::StaticTimer::State_optional __swiftcall StaticTimer.State.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 4;
  if ((unint64_t)rawValue < 4) {
    char v2 = rawValue;
  }
  *uint64_t v1 = v2;
  return (HomeDataModel::StaticTimer::State_optional)rawValue;
}

HomeDataModel::StaticTimer::State_optional sub_251E73DB0(Swift::Int *a1)
{
  return StaticTimer.State.init(rawValue:)(*a1);
}

uint64_t sub_251E73DB8()
{
  return sub_251F35A40();
}

uint64_t sub_251E73E18()
{
  return sub_251F359E0();
}

uint64_t StaticTimer.toggleState()(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_251E73E88, 0, 0);
}

uint64_t sub_251E73E88()
{
  *(void *)(v0 + 32) = sub_251F35C80();
  *(void *)(v0 + 40) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251E73F20, v2, v1);
}

uint64_t sub_251E73F20()
{
  swift_release();
  if (qword_26B21E6D8 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251E73FB8, 0, 0);
}

uint64_t sub_251E73FB8()
{
  *(void *)(v0 + 48) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251E74044, v2, v1);
}

uint64_t sub_251E74044()
{
  uint64_t v1 = v0[3];
  swift_release();
  uint64_t v2 = type metadata accessor for StaticTimer();
  uint64_t v3 = v1 + *(int *)(v2 + 40);
  uint64_t v4 = v1 + *(int *)(v2 + 44);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[7] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_251E42538;
  uint64_t v6 = v0[2];
  return CoordinationDataModel.toggleTimerState(staticTimerID:parentContainerID:)(v6, v3, v4);
}

uint64_t StaticTimer.delete()(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_251E74134, 0, 0);
}

uint64_t sub_251E74134()
{
  *(void *)(v0 + 32) = sub_251F35C80();
  *(void *)(v0 + 40) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251E741CC, v2, v1);
}

uint64_t sub_251E741CC()
{
  swift_release();
  if (qword_26B21E6D8 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251E74264, 0, 0);
}

uint64_t sub_251E74264()
{
  *(void *)(v0 + 48) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251E742F0, v2, v1);
}

uint64_t sub_251E742F0()
{
  uint64_t v1 = v0[3];
  swift_release();
  uint64_t v2 = type metadata accessor for StaticTimer();
  uint64_t v3 = v1 + *(int *)(v2 + 40);
  uint64_t v4 = v1 + *(int *)(v2 + 44);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[7] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_251E44C1C;
  uint64_t v6 = v0[2];
  return CoordinationDataModel.deleteTimer(staticTimerID:parentContainerID:)(v6, v3, v4);
}

uint64_t _s13HomeDataModel11StaticTimerV2eeoiySbAC_ACtFZ_0(double *a1, double *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  uint64_t v4 = (int *)type metadata accessor for StaticTimer();
  if ((sub_251F34CD0() & 1) == 0 || *(double *)((char *)a1 + v4[6]) != *(double *)((char *)a2 + v4[6])) {
    return 0;
  }
  uint64_t v5 = v4[7];
  uint64_t v6 = (void *)((char *)a1 + v5);
  uint64_t v7 = *(void *)((char *)a1 + v5 + 8);
  uint64_t v8 = (void *)((char *)a2 + v5);
  uint64_t v9 = v8[1];
  if (v7)
  {
    if (!v9) {
      return 0;
    }
    BOOL v10 = *v6 == *v8 && v7 == v9;
    if (!v10 && (sub_251F36B10() & 1) == 0) {
      return 0;
    }
  }
  else if (v9)
  {
    return 0;
  }
  if (*((unsigned __int8 *)a1 + v4[8]) == *((unsigned __int8 *)a2 + v4[8])
    && *((unsigned __int8 *)a1 + v4[9]) == *((unsigned __int8 *)a2 + v4[9])
    && (sub_251F34D70() & 1) != 0)
  {
    return sub_251F34D70() & 1;
  }
  return 0;
}

unint64_t sub_251E744CC()
{
  unint64_t result = qword_269BA4E30;
  if (!qword_269BA4E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4E30);
  }
  return result;
}

unint64_t sub_251E74520()
{
  unint64_t result = qword_269BA4E38;
  if (!qword_269BA4E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4E38);
  }
  return result;
}

unint64_t sub_251E74574()
{
  unint64_t result = qword_269BA4E48;
  if (!qword_269BA4E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4E48);
  }
  return result;
}

uint64_t sub_251E745C8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_251E74610(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticTimer();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_251E74674(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StaticTimer();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_251E746D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticTimer();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_251E74738()
{
  unint64_t result = qword_269BA4E60;
  if (!qword_269BA4E60)
  {
    type metadata accessor for StaticTimer();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4E60);
  }
  return result;
}

uint64_t sub_251E74790()
{
  return sub_251E745C8((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA9588]);
}

unint64_t sub_251E747C4()
{
  unint64_t result = qword_269BA4E68;
  if (!qword_269BA4E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4E68);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for StaticTimer(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_251F34D20();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = a3[7];
    *(void *)((char *)v4 + a3[6]) = *(void *)((char *)a2 + a3[6]);
    int v12 = (void *)((char *)v4 + v11);
    uint64_t v13 = (void *)((char *)a2 + v11);
    uint64_t v14 = v13[1];
    *int v12 = *v13;
    v12[1] = v14;
    uint64_t v15 = a3[9];
    *((unsigned char *)v4 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    *((unsigned char *)v4 + v15) = *((unsigned char *)a2 + v15);
    uint64_t v16 = a3[10];
    uint64_t v17 = (char *)v4 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = sub_251F34DA0();
    uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
    swift_bridgeObjectRetain();
    v20(v17, v18, v19);
    v20((char *)v4 + a3[11], (char *)a2 + a3[11], v19);
  }
  return v4;
}

uint64_t destroy for StaticTimer(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_251F34D20();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + a2[10];
  uint64_t v7 = sub_251F34DA0();
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v10)((void *)(v7 - 8), v6, v7);
  uint64_t v8 = a1 + a2[11];
  return v10(v8, v7);
}

void *initializeWithCopy for StaticTimer(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_251F34D20();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v11 = (void *)((char *)a1 + v10);
  int v12 = (void *)((char *)a2 + v10);
  uint64_t v13 = v12[1];
  void *v11 = *v12;
  v11[1] = v13;
  uint64_t v14 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *((unsigned char *)a1 + v14) = *((unsigned char *)a2 + v14);
  uint64_t v15 = a3[10];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = sub_251F34DA0();
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
  swift_bridgeObjectRetain();
  v19(v16, v17, v18);
  v19((char *)a1 + a3[11], (char *)a2 + a3[11], v18);
  return a1;
}

void *assignWithCopy for StaticTimer(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_251F34D20();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v10 = a3[7];
  uint64_t v11 = (void *)((char *)a1 + v10);
  int v12 = (void *)((char *)a2 + v10);
  void *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  uint64_t v13 = a3[10];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = sub_251F34DA0();
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 24);
  v17(v14, v15, v16);
  v17((char *)a1 + a3[11], (char *)a2 + a3[11], v16);
  return a1;
}

void *initializeWithTake for StaticTimer(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_251F34D20();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v10) = *(_OWORD *)((char *)a2 + v10);
  uint64_t v11 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *((unsigned char *)a1 + v11) = *((unsigned char *)a2 + v11);
  uint64_t v12 = a3[10];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_251F34DA0();
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32);
  v16(v13, v14, v15);
  v16((char *)a1 + a3[11], (char *)a2 + a3[11], v15);
  return a1;
}

void *assignWithTake for StaticTimer(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_251F34D20();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  void *v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *((unsigned char *)a1 + v15) = *((unsigned char *)a2 + v15);
  uint64_t v16 = a3[10];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = sub_251F34DA0();
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 40);
  v20(v17, v18, v19);
  v20((char *)a1 + a3[11], (char *)a2 + a3[11], v19);
  return a1;
}

uint64_t getEnumTagSinglePayload for StaticTimer(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251E74F90);
}

uint64_t sub_251E74F90(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34D20();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + a3[5];
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else if (a2 == 2147483646)
  {
    unint64_t v12 = *(void *)(a1 + a3[7] + 8);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    int v13 = v12 - 1;
    if (v13 < 0) {
      int v13 = -1;
    }
    return (v13 + 1);
  }
  else
  {
    uint64_t v14 = sub_251F34DA0();
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
    uint64_t v16 = v14;
    uint64_t v17 = a1 + a3[10];
    return v15(v17, a2, v16);
  }
}

uint64_t storeEnumTagSinglePayload for StaticTimer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251E750E4);
}

uint64_t sub_251E750E4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = sub_251F34D20();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + a4[5];
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else if (a3 == 2147483646)
  {
    *(void *)(a1 + a4[7] + 8) = a2;
  }
  else
  {
    uint64_t v13 = sub_251F34DA0();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
    uint64_t v15 = v13;
    uint64_t v16 = a1 + a4[10];
    return v14(v16, a2, a2, v15);
  }
  return result;
}

uint64_t sub_251E75218()
{
  uint64_t result = sub_251F34D20();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_251F34DA0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for StaticTimer.State(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251E753DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticTimer.State()
{
  return &type metadata for StaticTimer.State;
}

unsigned char *storeEnumTagSinglePayload for StaticTimer.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251E754E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticTimer.CodingKeys()
{
  return &type metadata for StaticTimer.CodingKeys;
}

unint64_t sub_251E7551C()
{
  unint64_t result = qword_269BA4E80;
  if (!qword_269BA4E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4E80);
  }
  return result;
}

unint64_t sub_251E75574()
{
  unint64_t result = qword_269BA4E88;
  if (!qword_269BA4E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4E88);
  }
  return result;
}

unint64_t sub_251E755CC()
{
  unint64_t result = qword_269BA4E90;
  if (!qword_269BA4E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4E90);
  }
  return result;
}

uint64_t sub_251E75620(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E696E69616D6572 && a2 == 0xED0000656D695467;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F697461657263 && a2 == 0xEC000000656D6954 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6574617473 && a2 == 0xE500000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x676E697269467369 && a2 == 0xE800000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 25705 && a2 == 0xE200000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000251F723F0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

unint64_t sub_251E7597C()
{
  unint64_t result = qword_269BA4E98;
  if (!qword_269BA4E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4E98);
  }
  return result;
}

uint64_t sub_251E759D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4EA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_251E75A38(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4EA0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t AccessoryDetails.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
  MEMORY[0x270FA5388](v4 - 8);
  char v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (int *)type metadata accessor for AccessoryDetails(0);
  *(unsigned char *)(a2 + v7[7]) = 8;
  sub_251E7605C(a1, a2, type metadata accessor for StaticAccessory);
  type metadata accessor for AccessoryDetails.Payload(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v8 = a2 + v7[5];
  sub_251E7605C(a1, v8, type metadata accessor for StaticAccessory);
  uint64_t v9 = (int *)type metadata accessor for AccessoryDetailsBasicInfo();
  uint64_t v10 = (void *)(v8 + v9[5]);
  *uint64_t v10 = 0;
  v10[1] = 0;
  uint64_t v11 = v8 + v9[6];
  uint64_t v12 = type metadata accessor for StaticRoom(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  uint64_t v13 = (void *)(v8 + v9[7]);
  *uint64_t v13 = 0;
  v13[1] = 0;
  *(unsigned char *)(v8 + v9[8]) = 2;
  *(unsigned char *)(v8 + v9[9]) = 2;
  *(unsigned char *)(v8 + v9[10]) = 89;
  swift_storeEnumTagMultiPayload();
  uint64_t v14 = type metadata accessor for StaticAccessory(0);
  sub_251A1B128(a1 + *(int *)(v14 + 28), (uint64_t)v6, &qword_26B21F110);
  sub_251E760C4(a1, type metadata accessor for StaticAccessory);
  return sub_251A4ECF0((uint64_t)v6, a2 + v7[6], &qword_26B21F110);
}

{
  int *v4;
  uint64_t v5;
  int *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t vars8;

  uint64_t v4 = (int *)type metadata accessor for AccessoryDetails(0);
  *(unsigned char *)(a2 + v4[7]) = 8;
  sub_251E7605C(a1, a2, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
  type metadata accessor for AccessoryDetails.Payload(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v5 = a2 + v4[5];
  char v6 = (int *)type metadata accessor for AccessoryDetailsBasicInfo();
  uint64_t v7 = (void *)(v5 + v6[5]);
  int *v7 = 0;
  v7[1] = 0;
  uint64_t v8 = v5 + v6[6];
  uint64_t v9 = type metadata accessor for StaticRoom(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  uint64_t v10 = (void *)(v5 + v6[7]);
  *uint64_t v10 = 0;
  v10[1] = 0;
  *(unsigned char *)(v5 + v6[8]) = 2;
  *(unsigned char *)(v5 + v6[9]) = 2;
  *(unsigned char *)(v5 + v6[10]) = 89;
  sub_251E87D58(a1, v5, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = a2 + v4[6];
  uint64_t v12 = type metadata accessor for StaticDeviceMetadata();
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
  return v13(v11, 1, 1, v12);
}

{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  int *v7;
  uint64_t v8;
  int *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v16;

  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
  MEMORY[0x270FA5388](v4 - 8);
  char v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (int *)type metadata accessor for AccessoryDetails(0);
  *(unsigned char *)(a2 + v7[7]) = 8;
  sub_251E7605C(a1, a2, (uint64_t (*)(void))type metadata accessor for StaticService);
  type metadata accessor for AccessoryDetails.Payload(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v8 = a2 + v7[5];
  sub_251E7605C(a1, v8, (uint64_t (*)(void))type metadata accessor for StaticService);
  uint64_t v9 = (int *)type metadata accessor for AccessoryDetailsBasicInfo();
  uint64_t v10 = (void *)(v8 + v9[5]);
  *uint64_t v10 = 0;
  v10[1] = 0;
  uint64_t v11 = v8 + v9[6];
  uint64_t v12 = type metadata accessor for StaticRoom(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  uint64_t v13 = (void *)(v8 + v9[7]);
  *uint64_t v13 = 0;
  v13[1] = 0;
  *(unsigned char *)(v8 + v9[8]) = 2;
  *(unsigned char *)(v8 + v9[9]) = 2;
  *(unsigned char *)(v8 + v9[10]) = 89;
  swift_storeEnumTagMultiPayload();
  uint64_t v14 = type metadata accessor for StaticService();
  sub_251A1B128(a1 + *(int *)(v14 + 52), (uint64_t)v6, &qword_26B21F110);
  sub_251E760C4(a1, (uint64_t (*)(void))type metadata accessor for StaticService);
  return sub_251A4ECF0((uint64_t)v6, a2 + v7[6], &qword_26B21F110);
}

uint64_t type metadata accessor for AccessoryDetails(uint64_t a1)
{
  return sub_251A1C6FC(a1, (uint64_t *)&unk_269BA4F90);
}

uint64_t type metadata accessor for AccessoryDetails.Payload(uint64_t a1)
{
  return sub_251A1C6FC(a1, (uint64_t *)&unk_269BA4FA0);
}

uint64_t sub_251E7605C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_251E760C4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t AccessoryDetails.Payload.basicInfo.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for AccessoryDetails.Payload(0);
  MEMORY[0x270FA5388](v4);
  char v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251E7605C(v2, (uint64_t)v6, type metadata accessor for AccessoryDetails.Payload);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      a1[3] = type metadata accessor for StaticService();
      uint64_t v7 = sub_251E87DC0(&qword_269BA2430, (void (*)(uint64_t))type metadata accessor for StaticService);
      uint64_t v8 = (uint64_t (*)(void))type metadata accessor for StaticService;
      break;
    case 2u:
      a1[3] = type metadata accessor for StaticServiceGroup();
      uint64_t v7 = sub_251E87DC0(&qword_269BA2428, (void (*)(uint64_t))type metadata accessor for StaticServiceGroup);
      uint64_t v8 = (uint64_t (*)(void))type metadata accessor for StaticServiceGroup;
      break;
    case 3u:
      a1[3] = type metadata accessor for StaticEndpoint();
      uint64_t v7 = sub_251E87DC0(&qword_269BA2420, (void (*)(uint64_t))type metadata accessor for StaticEndpoint);
      uint64_t v8 = (uint64_t (*)(void))type metadata accessor for StaticEndpoint;
      break;
    default:
      a1[3] = type metadata accessor for StaticAccessory(0);
      uint64_t v7 = sub_251E87DC0(&qword_269BA2438, (void (*)(uint64_t))type metadata accessor for StaticAccessory);
      uint64_t v8 = type metadata accessor for StaticAccessory;
      break;
  }
  uint64_t v9 = v8;
  a1[4] = v7;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a1);
  return sub_251E87D58((uint64_t)v6, (uint64_t)boxed_opaque_existential_1, v9);
}

uint64_t AccessoryDetails.Payload.staticMatterDevice.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v50 = a1;
  uint64_t v3 = type metadata accessor for StaticEndpoint();
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F240);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v49 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v47 - v9;
  uint64_t v11 = type metadata accessor for StaticService();
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for StaticAccessory(0);
  uint64_t v48 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for AccessoryDetails.Payload(0);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v47 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251E7605C(v2, (uint64_t)v19, type metadata accessor for AccessoryDetails.Payload);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_251E87D58((uint64_t)v19, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for StaticService);
      if (qword_26B2200E0 != -1) {
        swift_once();
      }
      uint64_t v23 = qword_26B21FF50;
      swift_getKeyPath();
      uint64_t v51 = v23;
      sub_251E87DC0((unint64_t *)&qword_26B21F280, (void (*)(uint64_t))type metadata accessor for DataModel);
      sub_251F34F10();
      swift_release();
      uint64_t v24 = v23 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentStateSnapshot;
      swift_beginAccess();
      uint64_t v25 = *(void *)(v24 + *(int *)(type metadata accessor for StateSnapshot(0) + 32));
      if (*(void *)(v25 + 16))
      {
        uint64_t v26 = (uint64_t)&v13[*(int *)(v11 + 44)];
        swift_bridgeObjectRetain();
        unint64_t v27 = sub_2519FE584(v26);
        uint64_t v29 = v48;
        if (v28)
        {
          sub_251E7605C(*(void *)(v25 + 56) + *(void *)(v48 + 72) * v27, (uint64_t)v10, type metadata accessor for StaticAccessory);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v10, 0, 1, v14);
        }
        else
        {
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v48 + 56))(v10, 1, 1, v14);
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v29 = v48;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v48 + 56))(v10, 1, 1, v14);
      }
      uint64_t v32 = (uint64_t)v49;
      sub_251E760C4((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for StaticService);
      sub_251A4ECF0((uint64_t)v10, v32, &qword_26B21F240);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v32, 1, v14) == 1)
      {
        sub_251A1B064(v32, &qword_26B21F240);
        goto LABEL_22;
      }
      uint64_t v33 = v32 + *(int *)(v14 + 36);
      uint64_t v21 = *(void *)v33;
      char v34 = *(unsigned char *)(v33 + 8);
      sub_251E760C4(v32, type metadata accessor for StaticAccessory);
      if (v34) {
        goto LABEL_22;
      }
      goto LABEL_17;
    case 2u:
      uint64_t v30 = type metadata accessor for StaticMatterDevice();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v50, 1, 1, v30);
      return sub_251E760C4((uint64_t)v19, type metadata accessor for AccessoryDetails.Payload);
    case 3u:
      sub_251E87D58((uint64_t)v19, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
      uint64_t v21 = *(void *)&v5[*(int *)(v3 + 20)];
      sub_251E760C4((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
      goto LABEL_17;
    default:
      sub_251E87D58((uint64_t)v19, (uint64_t)v16, type metadata accessor for StaticAccessory);
      uint64_t v20 = &v16[*(int *)(v14 + 36)];
      uint64_t v21 = *(void *)v20;
      char v22 = v20[8];
      sub_251E760C4((uint64_t)v16, type metadata accessor for StaticAccessory);
      if (v22) {
        goto LABEL_22;
      }
LABEL_17:
      if (qword_26B2200E0 != -1) {
        swift_once();
      }
      uint64_t v35 = qword_26B21FF50;
      swift_getKeyPath();
      uint64_t v51 = v35;
      sub_251E87DC0((unint64_t *)&qword_26B21F280, (void (*)(uint64_t))type metadata accessor for DataModel);
      sub_251F34F10();
      swift_release();
      uint64_t v36 = v35 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentMatterSnapshot;
      swift_beginAccess();
      uint64_t v37 = *(void *)(v36 + 16);
      if (*(void *)(v37 + 16) && (unint64_t v38 = sub_2519FE588(v21), (v39 & 1) != 0))
      {
        unint64_t v40 = v38;
        uint64_t v41 = *(void *)(v37 + 56);
        uint64_t v42 = type metadata accessor for StaticMatterDevice();
        uint64_t v43 = *(void *)(v42 - 8);
        uint64_t v44 = v41 + *(void *)(v43 + 72) * v40;
        uint64_t v45 = v50;
        sub_251E7605C(v44, v50, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
        return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v43 + 56))(v45, 0, 1, v42);
      }
      else
      {
LABEL_22:
        uint64_t v46 = type metadata accessor for StaticMatterDevice();
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v50, 1, 1, v46);
      }
  }
}

uint64_t AccessoryDetails.payload.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_251E7605C(v1, a1, type metadata accessor for AccessoryDetails.Payload);
}

uint64_t AccessoryDetails.payload.setter(uint64_t a1)
{
  return sub_251E87E18(a1, v1, type metadata accessor for AccessoryDetails.Payload);
}

uint64_t (*AccessoryDetails.payload.modify())()
{
  return nullsub_1;
}

uint64_t AccessoryDetails.basicInfo.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for AccessoryDetails(0);
  return sub_251E7605C(v1 + *(int *)(v3 + 20), a1, (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
}

uint64_t AccessoryDetails.basicInfo.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for AccessoryDetails(0);
  return sub_251E87E18(a1, v1 + *(int *)(v3 + 20), (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
}

uint64_t (*AccessoryDetails.basicInfo.modify())(void)
{
  return nullsub_1;
}

uint64_t AccessoryDetails.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for StaticEndpoint();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for StaticServiceGroup();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for StaticService();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for StaticAccessory(0);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for AccessoryDetails.Payload(0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for AccessoryDetails(0);
  sub_251E7605C(v1 + *(int *)(v18 + 20), (uint64_t)v17, type metadata accessor for AccessoryDetails.Payload);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_251E87D58((uint64_t)v17, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v24 = sub_251F34DA0();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v24 - 8) + 16))(a1, v11, v24);
      uint64_t v20 = (uint64_t (*)(void))type metadata accessor for StaticService;
      uint64_t v21 = (uint64_t)v11;
      break;
    case 2u:
      sub_251E87D58((uint64_t)v17, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
      uint64_t v22 = sub_251F34DA0();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v22 - 8) + 16))(a1, v8, v22);
      uint64_t v20 = (uint64_t (*)(void))type metadata accessor for StaticServiceGroup;
      uint64_t v21 = (uint64_t)v8;
      break;
    case 3u:
      sub_251E87D58((uint64_t)v17, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
      uint64_t v23 = sub_251F34DA0();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v23 - 8) + 16))(a1, v5, v23);
      uint64_t v20 = (uint64_t (*)(void))type metadata accessor for StaticEndpoint;
      uint64_t v21 = (uint64_t)v5;
      break;
    default:
      sub_251E87D58((uint64_t)v17, (uint64_t)v14, type metadata accessor for StaticAccessory);
      uint64_t v19 = sub_251F34DA0();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v19 - 8) + 16))(a1, v14, v19);
      uint64_t v20 = type metadata accessor for StaticAccessory;
      uint64_t v21 = (uint64_t)v14;
      break;
  }
  return sub_251E760C4(v21, v20);
}

uint64_t AccessoryDetails.deviceMetadata.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for AccessoryDetails(0);
  return sub_251A1B128(v1 + *(int *)(v3 + 24), a1, &qword_26B21F110);
}

Swift::Void __swiftcall AccessoryDetails.commit()()
{
  uint64_t v1 = type metadata accessor for AccessoryDetails(0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_251F35CD0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  sub_251E7605C(v0, (uint64_t)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for AccessoryDetails);
  unint64_t v8 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 0;
  *(void *)(v9 + 24) = 0;
  sub_251E87D58((uint64_t)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v9 + v8, type metadata accessor for AccessoryDetails);
  sub_251ACBB48((uint64_t)v6, (uint64_t)&unk_269BA4EB0, v9);
  swift_release();
}

uint64_t sub_251E77224(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return MEMORY[0x270FA2498](sub_251E77244, 0, 0);
}

uint64_t sub_251E77244()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v1 + *(int *)(type metadata accessor for AccessoryDetails(0) + 20);
  uint64_t v3 = swift_task_alloc();
  v0[3] = v3;
  *(void *)(v3 + 16) = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[4] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_251CD1A10;
  uint64_t v5 = MEMORY[0x263F8EE60] + 8;
  uint64_t v6 = MEMORY[0x263F8EE60] + 8;
  uint64_t v7 = MEMORY[0x263F8EE60] + 8;
  return MEMORY[0x270FA2158](v4, v5, v6, 0, 0, &unk_269BA23C0, v3, v7);
}

uint64_t AccessoryDetails.hash(into:)(long long *a1)
{
  uint64_t v3 = type metadata accessor for StaticDeviceMetadata();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  AccessoryDetails.Payload.hash(into:)(a1);
  uint64_t v10 = type metadata accessor for AccessoryDetails(0);
  AccessoryDetailsBasicInfo.hash(into:)(a1);
  sub_251A1B128(v1 + *(int *)(v10 + 24), (uint64_t)v9, &qword_26B21F110);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3) == 1)
  {
    sub_251F36CC0();
  }
  else
  {
    sub_251E87D58((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticDeviceMetadata);
    sub_251F36CC0();
    StaticDeviceMetadata.hash(into:)();
    sub_251E760C4((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticDeviceMetadata);
  }
  int v11 = *(unsigned __int8 *)(v1 + *(int *)(v10 + 28));
  if (v11 == 8) {
    return sub_251F36CC0();
  }
  sub_251F36CC0();
  switch(v11)
  {
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return sub_251F36CB0();
    default:
      sub_251F36CB0();
      break;
  }
  return sub_251F36CB0();
}

unint64_t sub_251E775C4()
{
  unint64_t result = 0x64616F6C796170;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x666E496369736162;
      break;
    case 2:
      unint64_t result = 0x654D656369766564;
      break;
    case 3:
      unint64_t result = 0xD000000000000019;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_251E77668@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251EA4C1C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251E77690(uint64_t a1)
{
  unint64_t v2 = sub_251E89738();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E776CC(uint64_t a1)
{
  unint64_t v2 = sub_251E89738();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AccessoryDetails.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4EB8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251E89738();
  sub_251F36DA0();
  v11[15] = 0;
  type metadata accessor for AccessoryDetails.Payload(0);
  sub_251E87DC0(&qword_269BA2408, (void (*)(uint64_t))type metadata accessor for AccessoryDetails.Payload);
  sub_251F36A20();
  if (!v2)
  {
    uint64_t v9 = type metadata accessor for AccessoryDetails(0);
    v11[14] = 1;
    type metadata accessor for AccessoryDetailsBasicInfo();
    sub_251E87DC0(&qword_269BA4EC8, (void (*)(uint64_t))type metadata accessor for AccessoryDetailsBasicInfo);
    sub_251F36A20();
    v11[13] = 2;
    type metadata accessor for StaticDeviceMetadata();
    sub_251E87DC0(&qword_269BA3808, (void (*)(uint64_t))type metadata accessor for StaticDeviceMetadata);
    sub_251F36970();
    v11[12] = *(unsigned char *)(v3 + *(int *)(v9 + 28));
    v11[11] = 3;
    sub_251C41FB8();
    sub_251F36970();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t AccessoryDetails.hashValue.getter()
{
  uint64_t v1 = type metadata accessor for StaticDeviceMetadata();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F36CA0();
  AccessoryDetails.Payload.hash(into:)(v12);
  uint64_t v8 = type metadata accessor for AccessoryDetails(0);
  AccessoryDetailsBasicInfo.hash(into:)(v12);
  sub_251A1B128(v0 + *(int *)(v8 + 24), (uint64_t)v7, &qword_26B21F110);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    sub_251F36CC0();
  }
  else
  {
    sub_251E87D58((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticDeviceMetadata);
    sub_251F36CC0();
    StaticDeviceMetadata.hash(into:)();
    sub_251E760C4((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticDeviceMetadata);
  }
  int v9 = *(unsigned __int8 *)(v0 + *(int *)(v8 + 28));
  if (v9 == 8)
  {
    sub_251F36CC0();
  }
  else
  {
    sub_251F36CC0();
    switch(v9)
    {
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
        break;
      default:
        sub_251F36CB0();
        break;
    }
    sub_251F36CB0();
  }
  return sub_251F36D00();
}

uint64_t AccessoryDetails.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v22 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for AccessoryDetailsBasicInfo();
  MEMORY[0x270FA5388](v24);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for AccessoryDetails.Payload(0);
  MEMORY[0x270FA5388](v25);
  uint64_t v27 = (uint64_t)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4ED0);
  uint64_t v23 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  int v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for AccessoryDetails(0);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(int *)(v11 + 28);
  v13[v14] = 8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251E89738();
  uint64_t v26 = v9;
  uint64_t v15 = v29;
  sub_251F36D90();
  if (v15) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  uint64_t v16 = v23;
  uint64_t v29 = v14;
  char v34 = 0;
  sub_251E87DC0(&qword_269BA2418, (void (*)(uint64_t))type metadata accessor for AccessoryDetails.Payload);
  sub_251F36880();
  sub_251E87D58(v27, (uint64_t)v13, type metadata accessor for AccessoryDetails.Payload);
  char v33 = 1;
  sub_251E87DC0(&qword_269BA4ED8, (void (*)(uint64_t))type metadata accessor for AccessoryDetailsBasicInfo);
  sub_251F36880();
  sub_251E87D58((uint64_t)v6, (uint64_t)&v13[*(int *)(v10 + 20)], (uint64_t (*)(void))type metadata accessor for AccessoryDetailsBasicInfo);
  type metadata accessor for StaticDeviceMetadata();
  char v32 = 2;
  sub_251E87DC0(&qword_269BA3838, (void (*)(uint64_t))type metadata accessor for StaticDeviceMetadata);
  uint64_t v17 = (uint64_t)v22;
  sub_251F367D0();
  sub_251A4ECF0(v17, (uint64_t)&v13[*(int *)(v10 + 24)], &qword_26B21F110);
  char v30 = 3;
  sub_251C42060();
  uint64_t v18 = v26;
  sub_251F367D0();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v28);
  v13[v29] = v31;
  sub_251E7605C((uint64_t)v13, v21, type metadata accessor for AccessoryDetails);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return sub_251E760C4((uint64_t)v13, type metadata accessor for AccessoryDetails);
}

uint64_t sub_251E781D8(long long *a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for StaticDeviceMetadata();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  AccessoryDetails.Payload.hash(into:)(a1);
  AccessoryDetailsBasicInfo.hash(into:)(a1);
  sub_251A1B128(v2 + *(int *)(a2 + 24), (uint64_t)v11, &qword_26B21F110);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5) == 1)
  {
    sub_251F36CC0();
  }
  else
  {
    sub_251E87D58((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticDeviceMetadata);
    sub_251F36CC0();
    StaticDeviceMetadata.hash(into:)();
    sub_251E760C4((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticDeviceMetadata);
  }
  int v12 = *(unsigned __int8 *)(v2 + *(int *)(a2 + 28));
  if (v12 == 8) {
    return sub_251F36CC0();
  }
  sub_251F36CC0();
  switch(v12)
  {
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return sub_251F36CB0();
    default:
      sub_251F36CB0();
      break;
  }
  return sub_251F36CB0();
}

uint64_t sub_251E78458(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticDeviceMetadata();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F36CA0();
  AccessoryDetails.Payload.hash(into:)(v14);
  AccessoryDetailsBasicInfo.hash(into:)(v14);
  sub_251A1B128(v2 + *(int *)(a2 + 24), (uint64_t)v10, &qword_26B21F110);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
  {
    sub_251F36CC0();
  }
  else
  {
    sub_251E87D58((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticDeviceMetadata);
    sub_251F36CC0();
    StaticDeviceMetadata.hash(into:)();
    sub_251E760C4((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticDeviceMetadata);
  }
  int v11 = *(unsigned __int8 *)(v2 + *(int *)(a2 + 28));
  if (v11 == 8)
  {
    sub_251F36CC0();
  }
  else
  {
    sub_251F36CC0();
    switch(v11)
    {
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
        break;
      default:
        sub_251F36CB0();
        break;
    }
    sub_251F36CB0();
  }
  return sub_251F36D00();
}

uint64_t sub_251E786DC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AccessoryDetails.init(from:)(a1, a2);
}

uint64_t sub_251E786F4(void *a1)
{
  return AccessoryDetails.encode(to:)(a1);
}

unint64_t AccessoryDetails.Payload.description.getter()
{
  sub_251E7876C(v0);
  sub_251F35800();
  swift_bridgeObjectRelease();
  return 0xD000000000000019;
}

uint64_t sub_251E7876C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StaticServiceGroup();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for StaticService();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for AccessoryDetails.Payload(0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251E7605C(a1, (uint64_t)v10, type metadata accessor for AccessoryDetails.Payload);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_251E87D58((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v11 = StaticService.description.getter();
      int v12 = type metadata accessor for StaticService;
      uint64_t v13 = (uint64_t)v7;
      goto LABEL_6;
    case 2u:
      sub_251E87D58((uint64_t)v10, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
      uint64_t v11 = StaticServiceGroup.description.getter();
      int v12 = type metadata accessor for StaticServiceGroup;
      uint64_t v13 = (uint64_t)v4;
LABEL_6:
      sub_251E760C4(v13, (uint64_t (*)(void))v12);
      break;
    case 3u:
      sub_251E760C4((uint64_t)v10, type metadata accessor for AccessoryDetails.Payload);
      uint64_t v11 = 0x6E45636974617473;
      break;
    default:
      sub_251E760C4((uint64_t)v10, type metadata accessor for AccessoryDetails.Payload);
      uint64_t v11 = 0x6341636974617473;
      break;
  }
  return v11;
}

uint64_t AccessoryDetails.Payload.hash(into:)(long long *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for StaticEndpoint();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for StaticServiceGroup();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for StaticService();
  MEMORY[0x270FA5388](v10 - 8);
  int v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for StaticAccessory(0);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for AccessoryDetails.Payload(0);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251E7605C(v2, (uint64_t)v18, type metadata accessor for AccessoryDetails.Payload);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_251E87D58((uint64_t)v18, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticService);
      sub_251F36CB0();
      StaticService.hash(into:)(a1);
      uint64_t v19 = (uint64_t (*)(void))type metadata accessor for StaticService;
      uint64_t v20 = (uint64_t)v12;
      break;
    case 2u:
      sub_251E87D58((uint64_t)v18, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
      sub_251F36CB0();
      StaticServiceGroup.hash(into:)(a1);
      uint64_t v19 = (uint64_t (*)(void))type metadata accessor for StaticServiceGroup;
      uint64_t v20 = (uint64_t)v9;
      break;
    case 3u:
      sub_251E87D58((uint64_t)v18, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
      sub_251F36CB0();
      StaticEndpoint.hash(into:)(a1);
      uint64_t v19 = (uint64_t (*)(void))type metadata accessor for StaticEndpoint;
      uint64_t v20 = (uint64_t)v6;
      break;
    default:
      sub_251E87D58((uint64_t)v18, (uint64_t)v15, type metadata accessor for StaticAccessory);
      sub_251F36CB0();
      StaticAccessory.hash(into:)(a1);
      uint64_t v19 = type metadata accessor for StaticAccessory;
      uint64_t v20 = (uint64_t)v15;
      break;
  }
  return sub_251E760C4(v20, v19);
}

unint64_t sub_251E78D2C()
{
  unint64_t result = 0x6341636974617473;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6553636974617473;
      break;
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0x6E45636974617473;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_251E78DE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251EA4E04(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251E78E0C(uint64_t a1)
{
  unint64_t v2 = sub_251E8978C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E78E48(uint64_t a1)
{
  unint64_t v2 = sub_251E8978C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251E78E84(uint64_t a1)
{
  unint64_t v2 = sub_251E898DC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E78EC0(uint64_t a1)
{
  unint64_t v2 = sub_251E898DC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251E78EFC(uint64_t a1)
{
  unint64_t v2 = sub_251E897E0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E78F38(uint64_t a1)
{
  unint64_t v2 = sub_251E897E0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251E78F74(uint64_t a1)
{
  unint64_t v2 = sub_251E89888();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E78FB0(uint64_t a1)
{
  unint64_t v2 = sub_251E89888();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251E78FEC(uint64_t a1)
{
  unint64_t v2 = sub_251E89834();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251E79028(uint64_t a1)
{
  unint64_t v2 = sub_251E89834();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AccessoryDetails.Payload.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4EE0);
  uint64_t v51 = *(void *)(v2 - 8);
  uint64_t v52 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v50 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = type metadata accessor for StaticEndpoint();
  MEMORY[0x270FA5388](v48);
  uint64_t v49 = (uint64_t)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4EE8);
  uint64_t v46 = *(void *)(v5 - 8);
  uint64_t v47 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v45 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = type metadata accessor for StaticServiceGroup();
  MEMORY[0x270FA5388](v43);
  uint64_t v44 = (uint64_t)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4EF0);
  uint64_t v41 = *(void *)(v8 - 8);
  uint64_t v42 = v8;
  MEMORY[0x270FA5388](v8);
  unint64_t v40 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for StaticService();
  MEMORY[0x270FA5388](v38);
  uint64_t v39 = (uint64_t)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4EF8);
  uint64_t v36 = *(void *)(v11 - 8);
  uint64_t v37 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for StaticAccessory(0);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for AccessoryDetails.Payload(0);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4F00);
  uint64_t v53 = *(void *)(v20 - 8);
  uint64_t v54 = v20;
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)&v36 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251E8978C();
  sub_251F36DA0();
  sub_251E7605C(v55, (uint64_t)v19, type metadata accessor for AccessoryDetails.Payload);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v27 = v39;
      sub_251E87D58((uint64_t)v19, v39, (uint64_t (*)(void))type metadata accessor for StaticService);
      char v57 = 1;
      sub_251E89888();
      char v33 = v40;
      uint64_t v23 = v54;
      sub_251F36900();
      sub_251E87DC0(&qword_269B9E0C8, (void (*)(uint64_t))type metadata accessor for StaticService);
      uint64_t v34 = v42;
      sub_251F36A20();
      (*(void (**)(char *, uint64_t))(v41 + 8))(v33, v34);
      char v30 = type metadata accessor for StaticService;
      goto LABEL_6;
    case 2u:
      uint64_t v27 = v44;
      sub_251E87D58((uint64_t)v19, v44, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
      char v58 = 2;
      sub_251E89834();
      uint64_t v28 = v45;
      uint64_t v23 = v54;
      sub_251F36900();
      sub_251E87DC0(&qword_269B9E0B0, (void (*)(uint64_t))type metadata accessor for StaticServiceGroup);
      uint64_t v29 = v47;
      sub_251F36A20();
      (*(void (**)(char *, uint64_t))(v46 + 8))(v28, v29);
      char v30 = type metadata accessor for StaticServiceGroup;
      goto LABEL_6;
    case 3u:
      uint64_t v27 = v49;
      sub_251E87D58((uint64_t)v19, v49, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
      char v59 = 3;
      sub_251E897E0();
      char v31 = v50;
      uint64_t v23 = v54;
      sub_251F36900();
      sub_251E87DC0(&qword_269B9CE18, (void (*)(uint64_t))type metadata accessor for StaticEndpoint);
      uint64_t v32 = v52;
      sub_251F36A20();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v31, v32);
      char v30 = type metadata accessor for StaticEndpoint;
LABEL_6:
      uint64_t v25 = (uint64_t (*)(uint64_t))v30;
      uint64_t v26 = v27;
      break;
    default:
      sub_251E87D58((uint64_t)v19, (uint64_t)v16, type metadata accessor for StaticAccessory);
      char v56 = 0;
      sub_251E898DC();
      uint64_t v23 = v54;
      sub_251F36900();
      sub_251E87DC0(&qword_269B9E028, (void (*)(uint64_t))type metadata accessor for StaticAccessory);
      uint64_t v24 = v37;
      sub_251F36A20();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v13, v24);
      uint64_t v25 = type metadata accessor for StaticAccessory;
      uint64_t v26 = (uint64_t)v16;
      break;
  }
  sub_251E760C4(v26, v25);
  return (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v22, v23);
}

uint64_t AccessoryDetails.Payload.hashValue.getter()
{
  sub_251F36CA0();
  AccessoryDetails.Payload.hash(into:)(v1);
  return sub_251F36D00();
}

uint64_t AccessoryDetails.Payload.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v73 = a2;
  uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4F30);
  uint64_t v72 = *(void *)(v70 - 8);
  MEMORY[0x270FA5388](v70);
  uint64_t v81 = (char *)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4F38);
  uint64_t v71 = *(void *)(v69 - 8);
  MEMORY[0x270FA5388](v69);
  uint64_t v79 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4F40);
  uint64_t v67 = *(void *)(v5 - 8);
  uint64_t v68 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v78 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4F48);
  uint64_t v65 = *(void *)(v7 - 8);
  uint64_t v66 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v74 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA4F50);
  uint64_t v76 = *(void *)(v9 - 8);
  uint64_t v77 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = type metadata accessor for AccessoryDetails.Payload(0);
  uint64_t v12 = MEMORY[0x270FA5388](v75);
  uint64_t v14 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)&v59 - v16;
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v20 = (char *)&v59 - v19;
  uint64_t v21 = MEMORY[0x270FA5388](v18);
  uint64_t v23 = (char *)&v59 - v22;
  MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)&v59 - v24;
  uint64_t v26 = a1[3];
  uint64_t v82 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v26);
  sub_251E8978C();
  unint64_t v80 = v11;
  uint64_t v27 = v83;
  sub_251F36D90();
  uint64_t v83 = v27;
  if (!v27)
  {
    uint64_t v60 = v20;
    uint64_t v61 = v17;
    uint64_t v62 = v23;
    uint64_t v63 = v14;
    uint64_t v64 = v25;
    uint64_t v28 = v78;
    uint64_t v29 = v79;
    char v30 = v80;
    char v31 = v81;
    uint64_t v32 = v77;
    uint64_t v33 = sub_251F368E0();
    if (*(void *)(v33 + 16) == 1)
    {
      switch(*(unsigned char *)(v33 + 32))
      {
        case 1:
          char v85 = 1;
          sub_251E89888();
          uint64_t v45 = v83;
          sub_251F36770();
          uint64_t v83 = v45;
          if (v45) {
            goto LABEL_15;
          }
          type metadata accessor for StaticService();
          sub_251E87DC0(&qword_269B9E1D8, (void (*)(uint64_t))type metadata accessor for StaticService);
          uint64_t v36 = (uint64_t)v60;
          uint64_t v46 = v68;
          uint64_t v47 = v83;
          sub_251F36880();
          (*(void (**)(char *, uint64_t))(v67 + 8))(v28, v46);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v76 + 8))(v30, v32);
          uint64_t v39 = (uint64_t)v82;
          uint64_t v83 = v47;
          if (!v47) {
            goto LABEL_6;
          }
          return __swift_destroy_boxed_opaque_existential_0(v39);
        case 2:
          char v86 = 2;
          sub_251E89834();
          uint64_t v48 = v83;
          sub_251F36770();
          uint64_t v83 = v48;
          uint64_t v49 = (uint64_t)v64;
          if (v48) {
            goto LABEL_15;
          }
          type metadata accessor for StaticServiceGroup();
          sub_251E87DC0(&qword_269B9E1C8, (void (*)(uint64_t))type metadata accessor for StaticServiceGroup);
          uint64_t v50 = (uint64_t)v61;
          uint64_t v51 = v69;
          uint64_t v52 = v83;
          sub_251F36880();
          uint64_t v53 = v76;
          uint64_t v83 = v52;
          if (v52)
          {
            (*(void (**)(char *, uint64_t))(v71 + 8))(v29, v51);
            goto LABEL_21;
          }
          (*(void (**)(char *, uint64_t))(v71 + 8))(v29, v51);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v53 + 8))(v30, v32);
          swift_storeEnumTagMultiPayload();
          uint64_t v36 = v50;
          uint64_t v39 = (uint64_t)v82;
          goto LABEL_25;
        case 3:
          char v87 = 3;
          sub_251E897E0();
          uint64_t v54 = v83;
          sub_251F36770();
          uint64_t v83 = v54;
          if (v54) {
            goto LABEL_15;
          }
          type metadata accessor for StaticEndpoint();
          sub_251E87DC0(&qword_269B9CE40, (void (*)(uint64_t))type metadata accessor for StaticEndpoint);
          uint64_t v56 = (uint64_t)v63;
          uint64_t v57 = v70;
          uint64_t v58 = v83;
          sub_251F36880();
          uint64_t v53 = v76;
          uint64_t v83 = v58;
          if (!v58)
          {
            (*(void (**)(char *, uint64_t))(v72 + 8))(v31, v57);
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v53 + 8))(v30, v32);
            swift_storeEnumTagMultiPayload();
            uint64_t v36 = v56;
            uint64_t v39 = (uint64_t)v82;
            goto LABEL_24;
          }
          (*(void (**)(char *, uint64_t))(v72 + 8))(v31, v57);
LABEL_21:
          swift_bridgeObjectRelease();
          goto LABEL_16;
        default:
          char v84 = 0;
          sub_251E898DC();
          uint64_t v34 = v74;
          uint64_t v35 = v83;
          sub_251F36770();
          uint64_t v83 = v35;
          if (!v35)
          {
            type metadata accessor for StaticAccessory(0);
            sub_251E87DC0(&qword_269B9E170, (void (*)(uint64_t))type metadata accessor for StaticAccessory);
            uint64_t v36 = (uint64_t)v62;
            uint64_t v37 = v66;
            uint64_t v38 = v83;
            sub_251F36880();
            (*(void (**)(char *, uint64_t))(v65 + 8))(v34, v37);
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v76 + 8))(v30, v32);
            uint64_t v39 = (uint64_t)v82;
            uint64_t v83 = v38;
            if (!v38)
            {
LABEL_6:
              swift_storeEnumTagMultiPayload();
LABEL_24:
              uint64_t v49 = (uint64_t)v64;
LABEL_25:
              sub_251E87D58(v36, v49, type metadata accessor for AccessoryDetails.Payload);
              sub_251E87D58(v49, v73, type metadata accessor for AccessoryDetails.Payload);
            }
            return __swift_destroy_boxed_opaque_existential_0(v39);
          }
LABEL_15:
          swift_bridgeObjectRelease();
          uint64_t v53 = v76;
LABEL_16:
          (*(void (**)(char *, uint64_t))(v53 + 8))(v30, v32);
          break;
      }
    }
    else
    {
      uint64_t v40 = v32;
      uint64_t v41 = sub_251F36490();
      uint64_t v42 = swift_allocError();
      uint64_t v44 = v43;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D440);
      *uint64_t v44 = v75;
      sub_251F36780();
      sub_251F36480();
      (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v41 - 8) + 104))(v44, *MEMORY[0x263F8DCB0], v41);
      uint64_t v83 = v42;
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v76 + 8))(v30, v40);
    }
  }
  uint64_t v39 = (uint64_t)v82;
  return __swift_destroy_boxed_opaque_existential_0(v39);
}

uint64_t sub_251E7A338()
{
  sub_251F36CA0();
  AccessoryDetails.Payload.hash(into:)(v1);
  return sub_251F36D00();
}

uint64_t sub_251E7A37C()
{
  sub_251F36CA0();
  AccessoryDetails.Payload.hash(into:)(v1);
  return sub_251F36D00();
}

uint64_t sub_251E7A3B8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AccessoryDetails.Payload.init(from:)(a1, a2);
}

uint64_t sub_251E7A3D0(void *a1)
{
  return AccessoryDetails.Payload.encode(to:)(a1);
}

unint64_t sub_251E7A3E8()
{
  sub_251E7876C(v0);
  sub_251F35800();
  swift_bridgeObjectRelease();
  return 0xD000000000000019;
}

uint64_t AccessoryDetails.softwareUpdate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for StaticService();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for StaticAccessory(0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for AccessoryDetails.Payload(0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251E7605C(v2, (uint64_t)v12, type metadata accessor for AccessoryDetails.Payload);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_251E87D58((uint64_t)v12, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticService);
      sub_251A1B128((uint64_t)&v6[*(int *)(v4 + 120)], a1, &qword_26B21F120);
      uint64_t v15 = (uint64_t (*)(void))type metadata accessor for StaticService;
      uint64_t v16 = (uint64_t)v6;
      goto LABEL_5;
    case 2u:
    case 3u:
      sub_251E760C4((uint64_t)v12, type metadata accessor for AccessoryDetails.Payload);
      uint64_t v13 = type metadata accessor for StaticSoftwareUpdate(0);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a1, 1, 1, v13);
      break;
    default:
      sub_251E87D58((uint64_t)v12, (uint64_t)v9, type metadata accessor for StaticAccessory);
      sub_251A1B128((uint64_t)&v9[*(int *)(v7 + 112)], a1, &qword_26B21F120);
      uint64_t v15 = type metadata accessor for StaticAccessory;
      uint64_t v16 = (uint64_t)v9;
LABEL_5:
      uint64_t result = sub_251E760C4(v16, v15);
      break;
  }
  return result;
}

uint64_t AccessoryDetails.updateState.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E338);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v17 - v10;
  uint64_t result = type metadata accessor for AccessoryDetails(0);
  int v13 = *(unsigned __int8 *)(v1 + *(int *)(result + 28));
  if (v13 == 8)
  {
    AccessoryDetails.softwareUpdate.getter((uint64_t)v5);
    uint64_t v14 = type metadata accessor for StaticSoftwareUpdate(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v5, 1, v14) == 1)
    {
      sub_251A1B064((uint64_t)v5, &qword_26B21F120);
      uint64_t v15 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v11, 1, 1, v15);
    }
    else
    {
      sub_251E7605C((uint64_t)&v5[*(int *)(v14 + 20)], (uint64_t)v11, type metadata accessor for StaticSoftwareUpdate.Kind);
      sub_251E760C4((uint64_t)v5, type metadata accessor for StaticSoftwareUpdate);
      uint64_t v16 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v11, 0, 1, v16);
      sub_251A1B128((uint64_t)v11, (uint64_t)v9, &qword_269B9E338);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        *a1 = v9[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468) + 48)];
        sub_251E760C4((uint64_t)v9, type metadata accessor for StaticSoftwareUpdateMetadata);
        return sub_251A1B064((uint64_t)v11, &qword_269B9E338);
      }
      sub_251E760C4((uint64_t)v9, type metadata accessor for StaticSoftwareUpdate.Kind);
    }
    uint64_t result = sub_251A1B064((uint64_t)v11, &qword_269B9E338);
    LOBYTE(v13) = 2;
  }
  *a1 = v13;
  return result;
}

uint64_t AccessoryDetails.updateState.setter(char *a1)
{
  char v2 = *a1;
  uint64_t result = type metadata accessor for AccessoryDetails(0);
  *(unsigned char *)(v1 + *(int *)(result + 28)) = v2;
  return result;
}

void (*AccessoryDetails.updateState.modify(void *a1))(uint64_t a1)
{
  uint64_t v3 = (char *)malloc(0x28uLL);
  *a1 = v3;
  uint64_t v4 = v3 + 36;
  *(void *)uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
  uint64_t v6 = malloc(*(void *)(*(void *)(v5 - 8) + 64));
  *((void *)v3 + 1) = v6;
  size_t v7 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269B9E338) - 8) + 64);
  uint64_t v8 = malloc(v7);
  *((void *)v3 + 2) = v8;
  uint64_t v9 = malloc(v7);
  *((void *)v3 + 3) = v9;
  uint64_t v10 = *(int *)(type metadata accessor for AccessoryDetails(0) + 28);
  *((_DWORD *)v3 + 8) = v10;
  int v11 = *(unsigned __int8 *)(v1 + v10);
  if (v11 != 8) {
    goto LABEL_8;
  }
  AccessoryDetails.softwareUpdate.getter((uint64_t)v6);
  uint64_t v12 = type metadata accessor for StaticSoftwareUpdate(0);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v6, 1, v12) == 1)
  {
    sub_251A1B064((uint64_t)v6, &qword_26B21F120);
    uint64_t v13 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v9, 1, 1, v13);
LABEL_7:
    sub_251A1B064((uint64_t)v9, &qword_269B9E338);
    LOBYTE(v11) = 2;
LABEL_8:
    *uint64_t v4 = v11;
    return sub_251E7AC8C;
  }
  sub_251E7605C((uint64_t)v6 + *(int *)(v12 + 20), (uint64_t)v9, type metadata accessor for StaticSoftwareUpdate.Kind);
  sub_251E760C4((uint64_t)v6, type metadata accessor for StaticSoftwareUpdate);
  uint64_t v14 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v9, 0, 1, v14);
  sub_251A1B128((uint64_t)v9, (uint64_t)v8, &qword_269B9E338);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_251E760C4((uint64_t)v8, type metadata accessor for StaticSoftwareUpdate.Kind);
    goto LABEL_7;
  }
  *uint64_t v4 = v8[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468) + 48)];
  sub_251E760C4((uint64_t)v8, type metadata accessor for StaticSoftwareUpdateMetadata);
  sub_251A1B064((uint64_t)v9, &qword_269B9E338);
  return sub_251E7AC8C;
}

void sub_251E7AC8C(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(int *)(*(void *)a1 + 32);
  uint64_t v4 = *(void **)(*(void *)a1 + 16);
  uint64_t v3 = *(void **)(*(void *)a1 + 24);
  uint64_t v5 = (void *)v1[1];
  *(unsigned char *)(*v1 + v2) = *((unsigned char *)v1 + 36);
  free(v3);
  free(v4);
  free(v5);
  free(v1);
}

uint64_t AccessoryDetails.performUpdate()()
{
  v1[19] = v0;
  v1[20] = type metadata accessor for StateSnapshot(0);
  v1[21] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F240);
  v1[22] = swift_task_alloc();
  v1[23] = type metadata accessor for StaticService();
  v1[24] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for StaticAccessory(0);
  v1[25] = v2;
  v1[26] = *(void *)(v2 - 8);
  v1[27] = swift_task_alloc();
  v1[28] = type metadata accessor for AccessoryDetails.Payload(0);
  v1[29] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251E7AE70, 0, 0);
}

uint64_t sub_251E7AE70()
{
  sub_251E7605C(v0[19], v0[29], type metadata accessor for AccessoryDetails.Payload);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((EnumCaseMultiPayload - 2) >= 2)
  {
    if (EnumCaseMultiPayload)
    {
      sub_251E87D58(v0[29], v0[24], (uint64_t (*)(void))type metadata accessor for StaticService);
      v0[37] = sub_251F35C80();
      v0[38] = sub_251F35C70();
      uint64_t v4 = sub_251F35C00();
      uint64_t v6 = v8;
      size_t v7 = sub_251E7B4FC;
    }
    else
    {
      sub_251E87D58(v0[29], v0[27], type metadata accessor for StaticAccessory);
      v0[30] = sub_251F35C80();
      v0[31] = sub_251F35C70();
      uint64_t v4 = sub_251F35C00();
      uint64_t v6 = v5;
      size_t v7 = sub_251E7B05C;
    }
    return MEMORY[0x270FA2498](v7, v4, v6);
  }
  else
  {
    sub_251E760C4(v0[29], type metadata accessor for AccessoryDetails.Payload);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = (uint64_t (*)(void))v0[1];
    return v2();
  }
}

uint64_t sub_251E7B05C()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251E7B0F4, 0, 0);
}

uint64_t sub_251E7B0F4()
{
  *(void *)(v0 + 256) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251E7B180, v2, v1);
}

uint64_t sub_251E7B180()
{
  swift_release();
  *(void *)(v0 + 264) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251E7B1F4, 0, 0);
}

uint64_t sub_251E7B1F4()
{
  *(void *)(v0 + 272) = sub_251F34D50();
  *(void *)(v0 + 280) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251E7B28C, v2, v1);
}

uint64_t sub_251E7B28C()
{
  uint64_t v1 = (void *)v0[34];
  uint64_t v2 = (void *)v0[33];
  swift_release();
  v0[36] = objc_msgSend(v2, sel_accessoryFor_, v1);

  return MEMORY[0x270FA2498](sub_251E7B31C, 0, 0);
}

uint64_t sub_251E7B31C()
{
  sub_251E760C4(v0[27], type metadata accessor for StaticAccessory);
  uint64_t v1 = (void *)v0[36];
  v0[48] = v1;
  if (v1)
  {
    id v2 = v1;
    id v3 = objc_msgSend(v2, sel_softwareUpdateController);
    v0[49] = v3;
    uint64_t v4 = v2;
    if (v3)
    {
      uint64_t v5 = v3;
      id v6 = objc_msgSend(v3, sel_availableUpdate);
      v0[50] = v6;
      if (v6)
      {
        id v7 = v6;
        v0[2] = v0;
        v0[3] = sub_251E7BEE4;
        uint64_t v8 = swift_continuation_init();
        v0[10] = MEMORY[0x263EF8330];
        v0[11] = 0x40000000;
        v0[12] = sub_251A5B804;
        v0[13] = &block_descriptor_19;
        v0[14] = v8;
        objc_msgSend(v5, sel_startUpdate_completionHandler_, v7, v0 + 10);
        return MEMORY[0x270FA23F0](v0 + 2);
      }

      uint64_t v4 = v5;
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_251E7B4FC()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251E7B594, 0, 0);
}

uint64_t sub_251E7B594()
{
  *(void *)(v0 + 312) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251E7B620, v2, v1);
}

uint64_t sub_251E7B620()
{
  swift_release();
  *(void *)(v0 + 320) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251E7B694, 0, 0);
}

uint64_t sub_251E7B694()
{
  *(void *)(v0 + 328) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251E7B720, v2, v1);
}

uint64_t sub_251E7B720()
{
  uint64_t v1 = v0[40];
  uint64_t v2 = v0[21];
  swift_release();
  swift_getKeyPath();
  v0[18] = v1;
  sub_251E87DC0((unint64_t *)&qword_26B21F280, (void (*)(uint64_t))type metadata accessor for DataModel);
  sub_251F34F10();
  swift_release();
  uint64_t v3 = v1 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentStateSnapshot;
  swift_beginAccess();
  sub_251E7605C(v3, v2, type metadata accessor for StateSnapshot);
  return MEMORY[0x270FA2498](sub_251E7B850, 0, 0);
}

uint64_t sub_251E7B850()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = *(void *)(v1 + *(int *)(v0[20] + 32));
  swift_bridgeObjectRetain();
  sub_251E760C4(v1, type metadata accessor for StateSnapshot);
  if (*(void *)(v2 + 16) && (unint64_t v3 = sub_2519FE584(v0[24] + *(int *)(v0[23] + 44)), (v4 & 1) != 0))
  {
    sub_251E7605C(*(void *)(v2 + 56) + *(void *)(v0[26] + 72) * v3, v0[22], type metadata accessor for StaticAccessory);
    uint64_t v5 = 0;
  }
  else
  {
    uint64_t v5 = 1;
  }
  uint64_t v6 = v0[25];
  uint64_t v7 = v0[26];
  uint64_t v8 = v0[22];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v8, v5, 1, v6);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v8, 1, v6) == 1)
  {
    uint64_t v9 = v0[22];
    sub_251E760C4(v0[24], (uint64_t (*)(void))type metadata accessor for StaticService);
    sub_251A1B064(v9, &qword_26B21F240);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = (uint64_t (*)(void))v0[1];
    return v10();
  }
  else
  {
    v0[42] = sub_251F35C70();
    uint64_t v13 = sub_251F35C00();
    return MEMORY[0x270FA2498](sub_251E7BA54, v13, v12);
  }
}

uint64_t sub_251E7BA54()
{
  swift_release();
  return MEMORY[0x270FA2498](sub_251E7BABC, 0, 0);
}

uint64_t sub_251E7BABC()
{
  *(void *)(v0 + 344) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251E7BB48, v2, v1);
}

uint64_t sub_251E7BB48()
{
  swift_release();
  *(void *)(v0 + 352) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251E7BBBC, 0, 0);
}

uint64_t sub_251E7BBBC()
{
  *(void *)(v0 + 360) = sub_251F34D50();
  *(void *)(v0 + 368) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251E7BC54, v2, v1);
}

uint64_t sub_251E7BC54()
{
  uint64_t v1 = (void *)v0[45];
  uint64_t v2 = (void *)v0[44];
  swift_release();
  v0[47] = objc_msgSend(v2, sel_accessoryFor_, v1);

  return MEMORY[0x270FA2498](sub_251E7BCE4, 0, 0);
}

uint64_t sub_251E7BCE4()
{
  uint64_t v1 = v0[22];
  sub_251E760C4(v0[24], (uint64_t (*)(void))type metadata accessor for StaticService);
  sub_251E760C4(v1, type metadata accessor for StaticAccessory);
  uint64_t v2 = (void *)v0[47];
  v0[48] = v2;
  if (v2)
  {
    id v3 = v2;
    id v4 = objc_msgSend(v3, sel_softwareUpdateController);
    v0[49] = v4;
    uint64_t v5 = v3;
    if (v4)
    {
      uint64_t v6 = v4;
      id v7 = objc_msgSend(v4, sel_availableUpdate);
      v0[50] = v7;
      if (v7)
      {
        id v8 = v7;
        v0[2] = v0;
        v0[3] = sub_251E7BEE4;
        uint64_t v9 = swift_continuation_init();
        v0[10] = MEMORY[0x263EF8330];
        v0[11] = 0x40000000;
        v0[12] = sub_251A5B804;
        v0[13] = &block_descriptor_19;
        v0[14] = v9;
        objc_msgSend(v6, sel_startUpdate_completionHandler_, v8, v0 + 10);
        return MEMORY[0x270FA23F0](v0 + 2);
      }

      uint64_t v5 = v6;
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_251E7BEE4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 408) = v1;
  if (v1) {
    uint64_t v2 = sub_251E7C0A0;
  }
  else {
    uint64_t v2 = sub_251E7BFF4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_251E7BFF4()
{
  uint64_t v1 = (void *)v0[49];
  uint64_t v2 = (void *)v0[50];
  id v3 = (void *)v0[48];

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_251E7C0A0()
{
  uint64_t v1 = (void *)v0[50];
  uint64_t v2 = (void *)v0[51];
  uint64_t v4 = (void *)v0[48];
  id v3 = (void *)v0[49];
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t AccessoryDetails.staticUser.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_26B21FF50;
  swift_getKeyPath();
  sub_251E87DC0((unint64_t *)&qword_26B21F280, (void (*)(uint64_t))type metadata accessor for DataModel);
  sub_251F34F10();
  swift_release();
  uint64_t v3 = v2 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentStateSnapshot;
  swift_beginAccess();
  uint64_t v4 = *(int *)(type metadata accessor for StateSnapshot(0) + 20);
  uint64_t v5 = type metadata accessor for StaticHome();
  return sub_251E7605C(v3 + v4 + *(int *)(v5 + 28), a1, (uint64_t (*)(void))type metadata accessor for StaticUser);
}

BOOL AccessoryDetails.userCanEdit.getter()
{
  uint64_t v0 = type metadata accessor for StaticUser();
  uint64_t v1 = MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)v12 - v4;
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  uint64_t v6 = qword_26B21FF50;
  swift_getKeyPath();
  v12[1] = v6;
  sub_251E87DC0((unint64_t *)&qword_26B21F280, (void (*)(uint64_t))type metadata accessor for DataModel);
  sub_251F34F10();
  swift_release();
  uint64_t v7 = v6 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentStateSnapshot;
  swift_beginAccess();
  uint64_t v8 = *(int *)(type metadata accessor for StateSnapshot(0) + 20);
  uint64_t v9 = type metadata accessor for StaticHome();
  sub_251E7605C(v7 + v8 + *(int *)(v9 + 28), (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticUser);
  LODWORD(v8) = v5[*(int *)(v0 + 28)];
  sub_251E7605C((uint64_t)v5, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for StaticUser);
  if (v8) {
    BOOL v10 = v3[*(int *)(v0 + 28)] == 1;
  }
  else {
    BOOL v10 = 1;
  }
  sub_251E760C4((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for StaticUser);
  sub_251E760C4((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticUser);
  return v10;
}

uint64_t AccessoryDetails.shouldShowLogging.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC90);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = &v26[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v3 = type metadata accessor for StaticUser();
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v26[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = &v26[-v7];
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  uint64_t v9 = qword_26B21FF50;
  swift_getKeyPath();
  uint64_t v27 = v9;
  sub_251E87DC0((unint64_t *)&qword_26B21F280, (void (*)(uint64_t))type metadata accessor for DataModel);
  sub_251F34F10();
  swift_release();
  uint64_t v10 = v9 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentStateSnapshot;
  swift_beginAccess();
  uint64_t v11 = *(int *)(type metadata accessor for StateSnapshot(0) + 20);
  uint64_t v12 = type metadata accessor for StaticHome();
  sub_251E7605C(v10 + v11 + *(int *)(v12 + 28), (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticUser);
  LODWORD(v11) = v8[*(int *)(v3 + 28)];
  sub_251E7605C((uint64_t)v8, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticUser);
  if (v11) {
    BOOL v13 = v6[*(int *)(v3 + 28)] == 1;
  }
  else {
    BOOL v13 = 1;
  }
  sub_251E760C4((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticUser);
  sub_251E760C4((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticUser);
  AccessoryDetails.Payload.staticMatterDevice.getter((uint64_t)v2);
  uint64_t v14 = type metadata accessor for StaticMatterDevice();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v2, 1, v14) == 1)
  {
    sub_251A1B064((uint64_t)v2, &qword_26B21EC90);
LABEL_13:
    char v24 = 0;
    return v24 & 1;
  }
  uint64_t v15 = (void **)(qword_26B21FF50 + OBJC_IVAR____TtC13HomeDataModel9DataModel_homeManager);
  swift_beginAccess();
  uint64_t v16 = *v15;
  if (!*v15)
  {
    sub_251E760C4((uint64_t)v2, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
    goto LABEL_13;
  }
  uint64_t v17 = *(void *)&v2[*(int *)(v14 + 20)];
  uint64_t v18 = (uint64_t)&v2[*(int *)(v14 + 36)];
  id v19 = v16;
  id v20 = HMHomeManager.matterDevice(with:inHomeWithID:)(v17, v18);
  uint64_t v22 = v21;

  sub_251E760C4((uint64_t)v2, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
  if (!v20) {
    goto LABEL_13;
  }
  uint64_t ObjectType = swift_getObjectType();
  char v24 = MatterDevice.supportsDiagnosticsLogs.getter(ObjectType, v22);
  swift_unknownObjectRelease();
  if (!v13) {
    goto LABEL_13;
  }
  return v24 & 1;
}

uint64_t AccessoryDetails.getDoorLockCluster()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for StaticService();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for AccessoryDetails.Payload(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v17 - v10;
  uint64_t v12 = type metadata accessor for StaticAccessory(0);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = v1 + *(int *)(type metadata accessor for AccessoryDetails(0) + 20);
  sub_251E7605C(v15, (uint64_t)v11, type metadata accessor for AccessoryDetails.Payload);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_251E760C4((uint64_t)v11, type metadata accessor for AccessoryDetails.Payload);
    sub_251E7605C(v15, (uint64_t)v9, type metadata accessor for AccessoryDetails.Payload);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_251E87D58((uint64_t)v9, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticService);
      sub_251E7CE2C((uint64_t)v5, a1);
      return sub_251E760C4((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticService);
    }
    else
    {
      uint64_t result = sub_251E760C4((uint64_t)v9, type metadata accessor for AccessoryDetails.Payload);
      *(void *)a1 = 0;
      *(void *)(a1 + 8) = 0;
      *(unsigned char *)(a1 + 20) = 0;
      *(_DWORD *)(a1 + 16) = 768;
    }
  }
  else
  {
    sub_251E87D58((uint64_t)v11, (uint64_t)v14, type metadata accessor for StaticAccessory);
    sub_251E7CAB4(a1);
    return sub_251E760C4((uint64_t)v14, type metadata accessor for StaticAccessory);
  }
  return result;
}

void sub_251E7CAB4(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for StaticService();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  StaticAccessory.primaryStaticService.getter((uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_251A1B064((uint64_t)v4, qword_26B21EE20);
    if (qword_269B9C350 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_251F350A0();
    __swift_project_value_buffer(v9, (uint64_t)qword_269B9FFC0);
    uint64_t v10 = sub_251F35080();
    os_log_type_t v11 = sub_251F35FD0();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      uint64_t v15 = v13;
      *(_DWORD *)uint64_t v12 = 136315650;
      uint64_t v14 = sub_251A00E84(0xD000000000000024, 0x8000000251F72D00, &v15);
      sub_251F361D0();
      *(_WORD *)(v12 + 12) = 2080;
      uint64_t v14 = sub_251A00E84(0xD000000000000028, 0x8000000251F72E90, &v15);
      sub_251F361D0();
      *(_WORD *)(v12 + 22) = 2080;
      uint64_t v14 = sub_251A00E84(0x6341636974617473, 0xEF79726F73736563, &v15);
      sub_251F361D0();
      _os_log_impl(&dword_2519F3000, v10, v11, "%s - %s: Unable to get doorLockCluster for %s because primaryStaticService does NOT exist.", (uint8_t *)v12, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v13, -1, -1);
      MEMORY[0x2533AC760](v12, -1, -1);
    }

    *(void *)a1 = 0;
    *(void *)(a1 + 8) = 0;
    *(unsigned char *)(a1 + 20) = 0;
    *(_DWORD *)(a1 + 16) = 768;
  }
  else
  {
    sub_251E87D58((uint64_t)v4, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticService);
    sub_251E7CE2C((uint64_t)v8, a1);
    sub_251E760C4((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticService);
  }
}

void sub_251E7CE2C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for StaticEndpoint();
  uint64_t v71 = *(void *)(v4 - 8);
  uint64_t v72 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v65[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = &v65[-v8];
  uint64_t v10 = type metadata accessor for StaticMatterDevice();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = &v65[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = &v65[-v16];
  MEMORY[0x270FA5388](v15);
  id v19 = &v65[-v18];
  uint64_t v20 = a1 + *(int *)(type metadata accessor for StaticService() + 140);
  if (*(unsigned char *)(v20 + 10))
  {
    if (qword_269B9C350 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_251F350A0();
    __swift_project_value_buffer(v21, (uint64_t)qword_269B9FFC0);
    uint64_t v22 = sub_251F35080();
    os_log_type_t v23 = sub_251F35FD0();
    if (os_log_type_enabled(v22, v23))
    {
      char v24 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      v74[0] = v25;
      *(_DWORD *)char v24 = 136315138;
      v73[0] = sub_251A00E84(0xD000000000000024, 0x8000000251F72D00, v74);
      sub_251F361D0();
      _os_log_impl(&dword_2519F3000, v22, v23, "%s: Returning nil, because matterEndpointPath is nil.", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v25, -1, -1);
      MEMORY[0x2533AC760](v24, -1, -1);
    }

    *(void *)a2 = 0;
    *(void *)(a2 + 8) = 0;
    *(unsigned char *)(a2 + 20) = 0;
    *(_DWORD *)(a2 + 16) = 768;
    return;
  }
  uint64_t v67 = v19;
  uint64_t v68 = v10;
  uint64_t v69 = *(void *)v20;
  uint64_t v70 = (void *)a2;
  int v66 = *(unsigned __int16 *)(v20 + 8);
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  uint64_t v26 = qword_26B21FF50;
  swift_getKeyPath();
  v74[0] = v26;
  sub_251E87DC0((unint64_t *)&qword_26B21F280, (void (*)(uint64_t))type metadata accessor for DataModel);
  sub_251F34F10();
  swift_release();
  uint64_t v27 = v26 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentMatterSnapshot;
  swift_beginAccess();
  uint64_t v28 = *(void *)(v27 + 16);
  if (!*(void *)(v28 + 16) || (unint64_t v29 = sub_2519FE588(v69), (v30 & 1) == 0))
  {
    uint64_t v44 = qword_269B9C350;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v44 != -1) {
      swift_once();
    }
    uint64_t v45 = sub_251F350A0();
    __swift_project_value_buffer(v45, (uint64_t)qword_269B9FFC0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v46 = sub_251F35080();
    os_log_type_t v47 = sub_251F35FD0();
    int v48 = v47;
    if (os_log_type_enabled(v46, v47))
    {
      uint64_t v49 = swift_slowAlloc();
      LODWORD(v72) = v48;
      uint64_t v50 = v49;
      uint64_t v71 = swift_slowAlloc();
      v74[0] = v71;
      *(_DWORD *)uint64_t v50 = 136315650;
      v73[0] = sub_251A00E84(0xD000000000000024, 0x8000000251F72D00, v74);
      sub_251F361D0();
      *(_WORD *)(v50 + 12) = 2048;
      v73[0] = v69;
      sub_251F361D0();
      *(_WORD *)(v50 + 22) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v51 = sub_251F35560();
      unint64_t v53 = v52;
      swift_bridgeObjectRelease();
      v73[0] = sub_251A00E84(v51, v53, v74);
      sub_251F361D0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2519F3000, v46, (os_log_type_t)v72, "%s: Returning nil, because staticDevice is not found for matterNodeID %llu among staticDevices %s.", (uint8_t *)v50, 0x20u);
      uint64_t v54 = v71;
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v54, -1, -1);
      MEMORY[0x2533AC760](v50, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    goto LABEL_30;
  }
  sub_251E7605C(*(void *)(v28 + 56) + *(void *)(v11 + 72) * v29, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
  uint64_t v31 = (uint64_t)v67;
  sub_251E87D58((uint64_t)v17, (uint64_t)v67, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
  uint64_t v32 = *(void *)(v31 + *(int *)(v68 + 48));
  if (!*(void *)(v32 + 16) || (unint64_t v33 = sub_2519FE5CC(v66), (v34 & 1) == 0))
  {
    if (qword_269B9C350 != -1) {
      swift_once();
    }
    uint64_t v55 = sub_251F350A0();
    __swift_project_value_buffer(v55, (uint64_t)qword_269B9FFC0);
    sub_251E7605C(v31, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
    uint64_t v56 = sub_251F35080();
    os_log_type_t v57 = sub_251F35FD0();
    if (os_log_type_enabled(v56, v57))
    {
      uint64_t v58 = swift_slowAlloc();
      uint64_t v71 = swift_slowAlloc();
      v74[0] = v71;
      *(_DWORD *)uint64_t v58 = 136315650;
      v73[0] = sub_251A00E84(0xD000000000000024, 0x8000000251F72D00, v74);
      sub_251F361D0();
      *(_WORD *)(v58 + 12) = 512;
      LOWORD(v73[0]) = v66;
      sub_251F361D0();
      *(_WORD *)(v58 + 16) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v59 = sub_251F35560();
      unint64_t v61 = v60;
      swift_bridgeObjectRelease();
      v73[0] = sub_251A00E84(v59, v61, v74);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      sub_251E760C4((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
      _os_log_impl(&dword_2519F3000, v56, v57, "%s: Returning nil, because endpoint is not found for endpointID %hu among endpoints %s.", (uint8_t *)v58, 0x1Au);
      uint64_t v62 = v71;
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v62, -1, -1);
      MEMORY[0x2533AC760](v58, -1, -1);

      uint64_t v63 = (uint64_t)v67;
    }
    else
    {

      sub_251E760C4((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
      uint64_t v63 = v31;
    }
    sub_251E760C4(v63, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
LABEL_30:
    uint64_t v64 = v70;
    *uint64_t v70 = 0;
    v64[1] = 0;
    *((unsigned char *)v64 + 20) = 0;
    *((_DWORD *)v64 + 4) = 768;
    return;
  }
  sub_251E7605C(*(void *)(v32 + 56) + *(void *)(v71 + 72) * v33, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
  sub_251E87D58((uint64_t)v7, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
  uint64_t v35 = *(void *)&v9[*(int *)(v72 + 36)];
  uint64_t v36 = v70;
  if (*(void *)(v35 + 16)
    && (unint64_t v37 = sub_2519FE614(21), (v38 & 1) != 0)
    && (sub_251A1A930(*(void *)(v35 + 56) + (v37 << 8), (uint64_t)v73),
        sub_251A1A930((uint64_t)v73, (uint64_t)v74),
        sub_251A4DB2C((uint64_t)v74) == 3))
  {
    uint64_t v39 = sub_251A4E128((uint64_t)v74);
    unint64_t v40 = *(unsigned __int16 *)(v39 + 8) | ((unint64_t)*(unsigned __int8 *)(v39 + 10) << 16) | ((unint64_t)*(unsigned int *)(v39 + 12) << 32);
    int v41 = 0x1000000;
    if (!*(unsigned char *)(v39 + 19)) {
      int v41 = 0;
    }
    int v42 = *(unsigned __int8 *)(v39 + 16) | (*(unsigned __int8 *)(v39 + 17) << 8) | (*(unsigned __int8 *)(v39 + 18) << 16) | v41;
    char v43 = *(unsigned char *)(v39 + 20);
    *uint64_t v36 = *(void *)v39;
    v36[1] = v40;
    *((unsigned char *)v36 + 20) = v43;
    *((_DWORD *)v36 + 4) = v42;
  }
  else
  {
    *uint64_t v36 = 0;
    v36[1] = 0;
    *((unsigned char *)v36 + 20) = 0;
    *((_DWORD *)v36 + 4) = 768;
  }
  sub_251E760C4((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
  sub_251E760C4(v31, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
}

Swift::Bool __swiftcall AccessoryDetails.supportsUWBUnlock()()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for AccessoryDetails(0);
  MEMORY[0x270FA5388](v2);
  uint64_t v70 = (uint64_t)&v65 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for StaticService();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v69 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v68 = (uint64_t)&v65 - v8;
  uint64_t v9 = type metadata accessor for StaticAccessory(0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v67 = (uint64_t)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for AccessoryDetails.Payload(0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  uint64_t v17 = (char *)&v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  id v19 = (char *)&v65 - v18;
  AccessoryDetailsBasicInfo.primaryStaticService.getter((uint64_t)&v65 - v18);
  int v66 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  if (v66(v19, 1, v4) == 1)
  {
    sub_251A1B064((uint64_t)v19, qword_26B21EE20);
    char v20 = 0;
  }
  else
  {
    char v20 = v19[*(int *)(v4 + 88)];
    sub_251E760C4((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for StaticService);
  }
  LOBYTE(v72) = v20;
  if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v21 == 0x8000000251F64E00)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v22 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if ((v22 & 1) == 0)
    {
      if (qword_269B9C350 != -1) {
        swift_once();
      }
      uint64_t v36 = sub_251F350A0();
      __swift_project_value_buffer(v36, (uint64_t)qword_269B9FFC0);
      uint64_t v37 = v70;
      sub_251E7605C(v1, v70, type metadata accessor for AccessoryDetails);
      uint64_t v25 = sub_251F35080();
      int v38 = sub_251F35FD0();
      if (!os_log_type_enabled(v25, (os_log_type_t)v38))
      {
        sub_251E760C4(v37, type metadata accessor for AccessoryDetails);
LABEL_44:

        LOBYTE(v35) = 0;
        return v35;
      }
      LODWORD(v69) = v38;
      uint64_t v39 = swift_slowAlloc();
      uint64_t v68 = swift_slowAlloc();
      uint64_t v72 = v68;
      *(_DWORD *)uint64_t v39 = 136315650;
      uint64_t v71 = sub_251A00E84(0xD000000000000024, 0x8000000251F72D00, &v72);
      sub_251F361D0();
      *(_WORD *)(v39 + 12) = 2080;
      uint64_t v71 = sub_251A00E84(0xD000000000000013, 0x8000000251F72D30, &v72);
      sub_251F361D0();
      *(_WORD *)(v39 + 22) = 2080;
      uint64_t v40 = v70;
      AccessoryDetailsBasicInfo.primaryStaticService.getter((uint64_t)v17);
      if (v66(v17, 1, v4) == 1)
      {
        sub_251A1B064((uint64_t)v17, qword_26B21EE20);
        char v41 = 0;
      }
      else
      {
        char v41 = v17[*(int *)(v4 + 88)];
        sub_251E760C4((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for StaticService);
      }
      LOBYTE(v71) = v41;
      uint64_t v61 = ServiceKind.localizedDescription.getter();
      uint64_t v71 = sub_251A00E84(v61, v62, &v72);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      sub_251E760C4(v40, type metadata accessor for AccessoryDetails);
      _os_log_impl(&dword_2519F3000, v25, (os_log_type_t)v69, "%s - %s: Returning false since our primaryServiceKind is not lockMechanism, it is: %s", (uint8_t *)v39, 0x20u);
      uint64_t v63 = v68;
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v63, -1, -1);
      uint64_t v29 = v39;
LABEL_43:
      MEMORY[0x2533AC760](v29, -1, -1);
      goto LABEL_44;
    }
  }
  sub_251E7605C(v1, (uint64_t)v13, type metadata accessor for AccessoryDetails.Payload);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((EnumCaseMultiPayload - 2) < 2)
  {
    sub_251E760C4((uint64_t)v13, type metadata accessor for AccessoryDetails.Payload);
    if (qword_269B9C350 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_251F350A0();
    __swift_project_value_buffer(v24, (uint64_t)qword_269B9FFC0);
    uint64_t v25 = sub_251F35080();
    os_log_type_t v26 = sub_251F35FD0();
    if (!os_log_type_enabled(v25, v26)) {
      goto LABEL_44;
    }
    uint64_t v27 = swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    uint64_t v72 = v28;
    *(_DWORD *)uint64_t v27 = 136315394;
    uint64_t v71 = sub_251A00E84(0xD000000000000024, 0x8000000251F72D00, &v72);
    sub_251F361D0();
    *(_WORD *)(v27 + 12) = 2080;
    uint64_t v71 = sub_251A00E84(0xD000000000000013, 0x8000000251F72D30, &v72);
    sub_251F361D0();
    _os_log_impl(&dword_2519F3000, v25, v26, "%s - %s: Returning false since payload type is staticServiceGroup / staticEndpoint", (uint8_t *)v27, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v28, -1, -1);
    uint64_t v29 = v27;
    goto LABEL_43;
  }
  if (EnumCaseMultiPayload)
  {
    uint64_t v42 = (uint64_t)v13;
    uint64_t v43 = v68;
    sub_251E87D58(v42, v68, (uint64_t (*)(void))type metadata accessor for StaticService);
    if (qword_26B2200E0 != -1) {
      swift_once();
    }
    uint64_t v44 = (void *)qword_26B21FF50;
    uint64_t v45 = (void *)sub_251F34D50();
    id v46 = objc_msgSend(v44, sel_accessoryFor_, v45);

    uint64_t v47 = (uint64_t)v69;
    if (v46)
    {
      unsigned int v35 = objc_msgSend(v46, sel_supportsUWBUnlock);
    }
    else
    {
      unsigned int v35 = 0;
    }
    if (qword_269B9C350 != -1) {
      swift_once();
    }
    uint64_t v53 = sub_251F350A0();
    __swift_project_value_buffer(v53, (uint64_t)qword_269B9FFC0);
    sub_251E7605C(v43, v47, (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t v54 = sub_251F35080();
    os_log_type_t v55 = sub_251F35FD0();
    if (os_log_type_enabled(v54, v55))
    {
      uint64_t v56 = swift_slowAlloc();
      uint64_t v57 = swift_slowAlloc();
      uint64_t v72 = v57;
      *(_DWORD *)uint64_t v56 = 136315906;
      uint64_t v71 = sub_251A00E84(0xD000000000000024, 0x8000000251F72D00, &v72);
      sub_251F361D0();
      *(_WORD *)(v56 + 12) = 2080;
      uint64_t v71 = sub_251A00E84(0xD000000000000013, 0x8000000251F72D30, &v72);
      sub_251F361D0();
      *(_WORD *)(v56 + 22) = 1024;
      LODWORD(v71) = v35;
      sub_251F361D0();
      *(_WORD *)(v56 + 28) = 2080;
      uint64_t v58 = (uint64_t)v69;
      uint64_t v59 = StaticService.description.getter();
      uint64_t v71 = sub_251A00E84(v59, v60, &v72);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      sub_251E760C4(v58, (uint64_t (*)(void))type metadata accessor for StaticService);
      _os_log_impl(&dword_2519F3000, v54, v55, "%s - %s: staticServiceSupportsUWBUnlock is %{BOOL}d for static service: %s", (uint8_t *)v56, 0x26u);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v57, -1, -1);
      MEMORY[0x2533AC760](v56, -1, -1);
    }
    else
    {

      sub_251E760C4(v47, (uint64_t (*)(void))type metadata accessor for StaticService);
    }
    sub_251E760C4(v43, (uint64_t (*)(void))type metadata accessor for StaticService);
  }
  else
  {
    uint64_t v30 = (uint64_t)v13;
    uint64_t v31 = v67;
    sub_251E87D58(v30, v67, type metadata accessor for StaticAccessory);
    if (qword_26B2200E0 != -1) {
      swift_once();
    }
    uint64_t v32 = (void *)qword_26B21FF50;
    unint64_t v33 = (void *)sub_251F34D50();
    id v34 = objc_msgSend(v32, sel_accessoryFor_, v33);

    if (v34)
    {
      unsigned int v35 = objc_msgSend(v34, sel_supportsUWBUnlock);
    }
    else
    {
      unsigned int v35 = 0;
    }
    if (qword_269B9C350 != -1) {
      swift_once();
    }
    uint64_t v48 = sub_251F350A0();
    __swift_project_value_buffer(v48, (uint64_t)qword_269B9FFC0);
    uint64_t v49 = sub_251F35080();
    os_log_type_t v50 = sub_251F35FD0();
    if (os_log_type_enabled(v49, v50))
    {
      uint64_t v51 = swift_slowAlloc();
      uint64_t v52 = swift_slowAlloc();
      uint64_t v72 = v52;
      *(_DWORD *)uint64_t v51 = 136315906;
      uint64_t v71 = sub_251A00E84(0xD000000000000024, 0x8000000251F72D00, &v72);
      sub_251F361D0();
      *(_WORD *)(v51 + 12) = 2080;
      uint64_t v71 = sub_251A00E84(0xD000000000000013, 0x8000000251F72D30, &v72);
      sub_251F361D0();
      *(_WORD *)(v51 + 22) = 1024;
      LODWORD(v71) = v35;
      sub_251F361D0();
      *(_WORD *)(v51 + 28) = 2080;
      uint64_t v71 = sub_251A00E84(0x6341636974617473, 0xEF79726F73736563, &v72);
      sub_251F361D0();
      _os_log_impl(&dword_2519F3000, v49, v50, "%s - %s: staticAccessorySupportsUWBUnlock is %{BOOL}d for static accessory: %s.", (uint8_t *)v51, 0x26u);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v52, -1, -1);
      MEMORY[0x2533AC760](v51, -1, -1);
    }

    sub_251E760C4(v31, type metadata accessor for StaticAccessory);
  }
  return v35;
}

Swift::Bool __swiftcall AccessoryDetails.supportsAccessCodes()()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for AccessoryDetails(0);
  MEMORY[0x270FA5388](v2);
  uint64_t v67 = (uint64_t)&v62 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for StaticService();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v65 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v66 = (uint64_t)&v62 - v8;
  uint64_t v9 = type metadata accessor for StaticAccessory(0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v64 = (uint64_t)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for AccessoryDetails.Payload(0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  uint64_t v17 = (char *)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  id v19 = (char *)&v62 - v18;
  AccessoryDetailsBasicInfo.primaryStaticService.getter((uint64_t)&v62 - v18);
  uint64_t v63 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  if (v63(v19, 1, v4) == 1)
  {
    sub_251A1B064((uint64_t)v19, qword_26B21EE20);
    char v20 = 0;
  }
  else
  {
    char v20 = v19[*(int *)(v4 + 88)];
    sub_251E760C4((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for StaticService);
  }
  LOBYTE(v69) = v20;
  if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v21 == 0x8000000251F64E00)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v22 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if ((v22 & 1) == 0)
    {
      if (qword_269B9C350 != -1) {
        swift_once();
      }
      uint64_t v35 = sub_251F350A0();
      __swift_project_value_buffer(v35, (uint64_t)qword_269B9FFC0);
      uint64_t v36 = v67;
      sub_251E7605C(v1, v67, type metadata accessor for AccessoryDetails);
      uint64_t v25 = sub_251F35080();
      int v37 = sub_251F35FD0();
      if (!os_log_type_enabled(v25, (os_log_type_t)v37))
      {
        sub_251E760C4(v36, type metadata accessor for AccessoryDetails);
LABEL_44:

        return 0;
      }
      LODWORD(v66) = v37;
      uint64_t v38 = swift_slowAlloc();
      uint64_t v65 = (char *)swift_slowAlloc();
      uint64_t v69 = v65;
      *(_DWORD *)uint64_t v38 = 136315650;
      uint64_t v68 = sub_251A00E84(0xD000000000000024, 0x8000000251F72D00, (uint64_t *)&v69);
      sub_251F361D0();
      *(_WORD *)(v38 + 12) = 2080;
      uint64_t v68 = sub_251A00E84(0xD000000000000015, 0x8000000251F72D50, (uint64_t *)&v69);
      sub_251F361D0();
      *(_WORD *)(v38 + 22) = 2080;
      uint64_t v39 = v67;
      AccessoryDetailsBasicInfo.primaryStaticService.getter((uint64_t)v17);
      if (v63(v17, 1, v4) == 1)
      {
        sub_251A1B064((uint64_t)v17, qword_26B21EE20);
        char v40 = 0;
      }
      else
      {
        char v40 = v17[*(int *)(v4 + 88)];
        sub_251E760C4((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for StaticService);
      }
      LOBYTE(v68) = v40;
      uint64_t v58 = ServiceKind.localizedDescription.getter();
      uint64_t v68 = sub_251A00E84(v58, v59, (uint64_t *)&v69);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      sub_251E760C4(v39, type metadata accessor for AccessoryDetails);
      _os_log_impl(&dword_2519F3000, v25, (os_log_type_t)v66, "%s - %s: Returning false since our primaryServiceKind is not lockMechanism, it is: %s", (uint8_t *)v38, 0x20u);
      unint64_t v60 = v65;
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v60, -1, -1);
      uint64_t v29 = v38;
LABEL_43:
      MEMORY[0x2533AC760](v29, -1, -1);
      goto LABEL_44;
    }
  }
  sub_251E7605C(v1, (uint64_t)v13, type metadata accessor for AccessoryDetails.Payload);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((EnumCaseMultiPayload - 2) < 2)
  {
    sub_251E760C4((uint64_t)v13, type metadata accessor for AccessoryDetails.Payload);
    if (qword_269B9C350 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_251F350A0();
    __swift_project_value_buffer(v24, (uint64_t)qword_269B9FFC0);
    uint64_t v25 = sub_251F35080();
    os_log_type_t v26 = sub_251F35FD0();
    if (!os_log_type_enabled(v25, v26)) {
      goto LABEL_44;
    }
    uint64_t v27 = swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    uint64_t v69 = (char *)v28;
    *(_DWORD *)uint64_t v27 = 136315394;
    uint64_t v68 = sub_251A00E84(0xD000000000000024, 0x8000000251F72D00, (uint64_t *)&v69);
    sub_251F361D0();
    *(_WORD *)(v27 + 12) = 2080;
    uint64_t v68 = sub_251A00E84(0xD000000000000015, 0x8000000251F72D50, (uint64_t *)&v69);
    sub_251F361D0();
    _os_log_impl(&dword_2519F3000, v25, v26, "%s - %s: Returning false since payload type is staticServiceGroup / staticEndpoint", (uint8_t *)v27, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v28, -1, -1);
    uint64_t v29 = v27;
    goto LABEL_43;
  }
  if (EnumCaseMultiPayload)
  {
    uint64_t v41 = v66;
    sub_251E87D58((uint64_t)v13, v66, (uint64_t (*)(void))type metadata accessor for StaticService);
    if (qword_26B2200E0 != -1) {
      swift_once();
    }
    uint64_t v42 = (void *)qword_26B21FF50;
    uint64_t v43 = (void *)sub_251F34D50();
    id v44 = objc_msgSend(v42, sel_accessoryFor_, v43);

    uint64_t v45 = (uint64_t)v65;
    if (v44)
    {
      unsigned __int8 v34 = objc_msgSend(v44, sel_supportsAccessCodes);
    }
    else
    {
      unsigned __int8 v34 = 0;
    }
    if (qword_269B9C350 != -1) {
      swift_once();
    }
    uint64_t v51 = sub_251F350A0();
    __swift_project_value_buffer(v51, (uint64_t)qword_269B9FFC0);
    sub_251E7605C(v41, v45, (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t v52 = sub_251F35080();
    os_log_type_t v53 = sub_251F35FD0();
    if (os_log_type_enabled(v52, v53))
    {
      uint64_t v54 = swift_slowAlloc();
      uint64_t v55 = swift_slowAlloc();
      uint64_t v69 = (char *)v55;
      *(_DWORD *)uint64_t v54 = 136315650;
      uint64_t v68 = sub_251A00E84(0xD000000000000024, 0x8000000251F72D00, (uint64_t *)&v69);
      sub_251F361D0();
      *(_WORD *)(v54 + 12) = 2080;
      uint64_t v68 = sub_251A00E84(0xD000000000000015, 0x8000000251F72D50, (uint64_t *)&v69);
      sub_251F361D0();
      *(_WORD *)(v54 + 22) = 2080;
      uint64_t v56 = StaticService.description.getter();
      uint64_t v68 = sub_251A00E84(v56, v57, (uint64_t *)&v69);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      sub_251E760C4(v45, (uint64_t (*)(void))type metadata accessor for StaticService);
      _os_log_impl(&dword_2519F3000, v52, v53, "%s - %s: static service: %s", (uint8_t *)v54, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v55, -1, -1);
      MEMORY[0x2533AC760](v54, -1, -1);
    }
    else
    {

      sub_251E760C4(v45, (uint64_t (*)(void))type metadata accessor for StaticService);
    }
    sub_251E760C4(v41, (uint64_t (*)(void))type metadata accessor for StaticService);
  }
  else
  {
    uint64_t v30 = v64;
    sub_251E87D58((uint64_t)v13, v64, type metadata accessor for StaticAccessory);
    if (qword_26B2200E0 != -1) {
      swift_once();
    }
    uint64_t v31 = (void *)qword_26B21FF50;
    uint64_t v32 = (void *)sub_251F34D50();
    id v33 = objc_msgSend(v31, sel_accessoryFor_, v32);

    if (v33)
    {
      unsigned __int8 v34 = objc_msgSend(v33, sel_supportsAccessCodes);
    }
    else
    {
      unsigned __int8 v34 = 0;
    }
    if (qword_269B9C350 != -1) {
      swift_once();
    }
    uint64_t v46 = sub_251F350A0();
    __swift_project_value_buffer(v46, (uint64_t)qword_269B9FFC0);
    uint64_t v47 = sub_251F35080();
    os_log_type_t v48 = sub_251F35FD0();
    if (os_log_type_enabled(v47, v48))
    {
      uint64_t v49 = swift_slowAlloc();
      uint64_t v50 = swift_slowAlloc();
      uint64_t v69 = (char *)v50;
      *(_DWORD *)uint64_t v49 = 136315650;
      uint64_t v68 = sub_251A00E84(0xD000000000000024, 0x8000000251F72D00, (uint64_t *)&v69);
      sub_251F361D0();
      *(_WORD *)(v49 + 12) = 2080;
      uint64_t v68 = sub_251A00E84(0xD000000000000015, 0x8000000251F72D50, (uint64_t *)&v69);
      sub_251F361D0();
      *(_WORD *)(v49 + 22) = 2080;
      uint64_t v68 = sub_251A00E84(0x6341636974617473, 0xEF79726F73736563, (uint64_t *)&v69);
      sub_251F361D0();
      _os_log_impl(&dword_2519F3000, v47, v48, "%s - %s: static accessory: %s", (uint8_t *)v49, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v50, -1, -1);
      MEMORY[0x2533AC760](v49, -1, -1);
    }

    sub_251E760C4(v30, type metadata accessor for StaticAccessory);
  }
  return v34;
}

Swift::Bool __swiftcall AccessoryDetails.accessorySupportsWalletKey()()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for AccessoryDetails(0);
  MEMORY[0x270FA5388](v2);
  uint64_t v110 = (uint64_t)&v101 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = type metadata accessor for StaticServiceGroup();
  MEMORY[0x270FA5388](v104);
  uint64_t v107 = (uint64_t)&v101 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for StaticService();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  unint64_t v102 = (char *)&v101 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v103 = (uint64_t)&v101 - v10;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v105 = (char *)&v101 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v108 = (uint64_t)&v101 - v13;
  uint64_t v14 = type metadata accessor for StaticAccessory(0);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v106 = (uint64_t)&v101 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for AccessoryDetails.Payload(0);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v101 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  char v22 = (char *)&v101 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v20);
  uint64_t v25 = (char *)&v101 - v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v27 = (char *)&v101 - v26;
  AccessoryDetailsBasicInfo.primaryStaticService.getter((uint64_t)&v101 - v26);
  uint64_t v109 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  if (v109(v27, 1, v5) == 1)
  {
    sub_251A1B064((uint64_t)v27, qword_26B21EE20);
    char v28 = 0;
  }
  else
  {
    char v28 = v27[*(int *)(v5 + 88)];
    sub_251E760C4((uint64_t)v27, (uint64_t (*)(void))type metadata accessor for StaticService);
  }
  LOBYTE(v112) = v28;
  if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v29 == 0x8000000251F64E00)
  {
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  char v30 = sub_251F36B10();
  swift_bridgeObjectRelease();
  if (v30)
  {
LABEL_8:
    sub_251E7605C(v1, (uint64_t)v18, type metadata accessor for AccessoryDetails.Payload);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v43 = (uint64_t)v18;
        uint64_t v44 = v108;
        sub_251E87D58(v43, v108, (uint64_t (*)(void))type metadata accessor for StaticService);
        if (qword_26B2200E0 != -1) {
          swift_once();
        }
        uint64_t v45 = (void *)qword_26B21FF50;
        uint64_t v46 = (void *)sub_251F34D50();
        id v47 = objc_msgSend(v45, sel_accessoryFor_, v46);

        uint64_t v48 = (uint64_t)v105;
        if (v47)
        {
          unsigned __int8 v35 = objc_msgSend(v47, sel_supportsWalletKey);
          if (qword_269B9C350 != -1) {
            swift_once();
          }
          uint64_t v49 = sub_251F350A0();
          __swift_project_value_buffer(v49, (uint64_t)qword_269B9FFC0);
          sub_251E7605C(v44, v48, (uint64_t (*)(void))type metadata accessor for StaticService);
          uint64_t v50 = sub_251F35080();
          os_log_type_t v51 = sub_251F35FD0();
          if (os_log_type_enabled(v50, v51))
          {
            uint64_t v52 = swift_slowAlloc();
            uint64_t v53 = swift_slowAlloc();
            uint64_t v112 = v53;
            *(_DWORD *)uint64_t v52 = 136315650;
            uint64_t v111 = sub_251A00E84(0xD000000000000024, 0x8000000251F72D00, &v112);
            sub_251F361D0();
            *(_WORD *)(v52 + 12) = 2080;
            uint64_t v111 = sub_251A00E84(0xD00000000000001CLL, 0x8000000251F72D70, &v112);
            sub_251F361D0();
            *(_WORD *)(v52 + 22) = 2080;
            uint64_t v54 = StaticService.description.getter();
            uint64_t v111 = sub_251A00E84(v54, v55, &v112);
            sub_251F361D0();
            swift_bridgeObjectRelease();
            sub_251E760C4(v48, (uint64_t (*)(void))type metadata accessor for StaticService);
            _os_log_impl(&dword_2519F3000, v50, v51, "%s - %s: static service: %s", (uint8_t *)v52, 0x20u);
            swift_arrayDestroy();
            MEMORY[0x2533AC760](v53, -1, -1);
            MEMORY[0x2533AC760](v52, -1, -1);

            sub_251E760C4(v108, (uint64_t (*)(void))type metadata accessor for StaticService);
          }
          else
          {

            sub_251E760C4(v48, (uint64_t (*)(void))type metadata accessor for StaticService);
            sub_251E760C4(v44, (uint64_t (*)(void))type metadata accessor for StaticService);
          }
          return v35;
        }
        if (qword_269B9C350 != -1) {
          swift_once();
        }
        uint64_t v86 = sub_251F350A0();
        __swift_project_value_buffer(v86, (uint64_t)qword_269B9FFC0);
        char v87 = sub_251F35080();
        os_log_type_t v88 = sub_251F35FD0();
        if (os_log_type_enabled(v87, v88))
        {
          uint64_t v89 = swift_slowAlloc();
          uint64_t v90 = swift_slowAlloc();
          uint64_t v112 = v90;
          *(_DWORD *)uint64_t v89 = 136315394;
          uint64_t v111 = sub_251A00E84(0xD000000000000024, 0x8000000251F72D00, &v112);
          sub_251F361D0();
          *(_WORD *)(v89 + 12) = 2080;
          uint64_t v111 = sub_251A00E84(0xD00000000000001CLL, 0x8000000251F72D70, &v112);
          sub_251F361D0();
          _os_log_impl(&dword_2519F3000, v87, v88, "%s - %s: Returning false since accessory is nil", (uint8_t *)v89, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x2533AC760](v90, -1, -1);
          MEMORY[0x2533AC760](v89, -1, -1);
        }

        uint64_t v91 = type metadata accessor for StaticService;
        goto LABEL_65;
      case 2u:
        uint64_t v56 = (uint64_t)v18;
        uint64_t v44 = v107;
        sub_251E87D58(v56, v107, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
        uint64_t v57 = swift_bridgeObjectRetain();
        uint64_t v58 = sub_251EDC188(v57);
        sub_251ABD970(v58, (uint64_t)v25);
        swift_bridgeObjectRelease();
        if (v109(v25, 1, v5) == 1)
        {
          sub_251A1B064((uint64_t)v25, qword_26B21EE20);
          if (qword_269B9C350 != -1) {
            swift_once();
          }
          uint64_t v59 = sub_251F350A0();
          __swift_project_value_buffer(v59, (uint64_t)qword_269B9FFC0);
          unint64_t v60 = sub_251F35080();
          os_log_type_t v61 = sub_251F35FD0();
          if (os_log_type_enabled(v60, v61))
          {
            uint64_t v62 = swift_slowAlloc();
            uint64_t v63 = swift_slowAlloc();
            uint64_t v112 = v63;
            *(_DWORD *)uint64_t v62 = 136315394;
            uint64_t v111 = sub_251A00E84(0xD000000000000024, 0x8000000251F72D00, &v112);
            sub_251F361D0();
            *(_WORD *)(v62 + 12) = 2080;
            uint64_t v111 = sub_251A00E84(0xD00000000000001CLL, 0x8000000251F72D70, &v112);
            sub_251F361D0();
            _os_log_impl(&dword_2519F3000, v60, v61, "%s - %s: Returning false since staticServices.first is nil", (uint8_t *)v62, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x2533AC760](v63, -1, -1);
            MEMORY[0x2533AC760](v62, -1, -1);
          }
        }
        else
        {
          uint64_t v69 = v103;
          sub_251E87D58((uint64_t)v25, v103, (uint64_t (*)(void))type metadata accessor for StaticService);
          if (qword_26B2200E0 != -1) {
            swift_once();
          }
          uint64_t v70 = (void *)qword_26B21FF50;
          uint64_t v71 = (void *)sub_251F34D50();
          id v72 = objc_msgSend(v70, sel_accessoryFor_, v71);

          uint64_t v73 = (uint64_t)v102;
          if (v72)
          {
            unsigned __int8 v35 = objc_msgSend(v72, sel_supportsWalletKey);
            if (qword_269B9C350 != -1) {
              swift_once();
            }
            uint64_t v74 = sub_251F350A0();
            __swift_project_value_buffer(v74, (uint64_t)qword_269B9FFC0);
            sub_251E7605C(v69, v73, (uint64_t (*)(void))type metadata accessor for StaticService);
            uint64_t v75 = sub_251F35080();
            os_log_type_t v76 = sub_251F35FD0();
            if (os_log_type_enabled(v75, v76))
            {
              uint64_t v77 = swift_slowAlloc();
              uint64_t v78 = swift_slowAlloc();
              uint64_t v112 = v78;
              *(_DWORD *)uint64_t v77 = 136315650;
              uint64_t v111 = sub_251A00E84(0xD000000000000024, 0x8000000251F72D00, &v112);
              sub_251F361D0();
              *(_WORD *)(v77 + 12) = 2080;
              uint64_t v111 = sub_251A00E84(0xD00000000000001CLL, 0x8000000251F72D70, &v112);
              sub_251F361D0();
              *(_WORD *)(v77 + 22) = 2080;
              uint64_t v79 = StaticService.description.getter();
              uint64_t v111 = sub_251A00E84(v79, v80, &v112);
              sub_251F361D0();
              swift_bridgeObjectRelease();
              sub_251E760C4(v73, (uint64_t (*)(void))type metadata accessor for StaticService);
              _os_log_impl(&dword_2519F3000, v75, v76, "%s - %s: static service: %s", (uint8_t *)v77, 0x20u);
              swift_arrayDestroy();
              MEMORY[0x2533AC760](v78, -1, -1);
              MEMORY[0x2533AC760](v77, -1, -1);

              sub_251E760C4(v103, (uint64_t (*)(void))type metadata accessor for StaticService);
              sub_251E760C4(v107, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
            }
            else
            {

              sub_251E760C4(v73, (uint64_t (*)(void))type metadata accessor for StaticService);
              sub_251E760C4(v69, (uint64_t (*)(void))type metadata accessor for StaticService);
              sub_251E760C4(v44, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
            }
            return v35;
          }
          if (qword_269B9C350 != -1) {
            swift_once();
          }
          uint64_t v95 = sub_251F350A0();
          __swift_project_value_buffer(v95, (uint64_t)qword_269B9FFC0);
          uint64_t v96 = sub_251F35080();
          os_log_type_t v97 = sub_251F35FD0();
          if (os_log_type_enabled(v96, v97))
          {
            uint64_t v98 = swift_slowAlloc();
            uint64_t v99 = swift_slowAlloc();
            uint64_t v112 = v99;
            *(_DWORD *)uint64_t v98 = 136315394;
            uint64_t v111 = sub_251A00E84(0xD000000000000024, 0x8000000251F72D00, &v112);
            sub_251F361D0();
            *(_WORD *)(v98 + 12) = 2080;
            uint64_t v111 = sub_251A00E84(0xD00000000000001CLL, 0x8000000251F72D70, &v112);
            sub_251F361D0();
            _os_log_impl(&dword_2519F3000, v96, v97, "%s - %s: Returning false since accessory is nil", (uint8_t *)v98, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x2533AC760](v99, -1, -1);
            MEMORY[0x2533AC760](v98, -1, -1);
          }

          sub_251E760C4(v69, (uint64_t (*)(void))type metadata accessor for StaticService);
        }
        uint64_t v91 = type metadata accessor for StaticServiceGroup;
LABEL_65:
        sub_251E760C4(v44, (uint64_t (*)(void))v91);
        break;
      case 3u:
        sub_251E760C4((uint64_t)v18, type metadata accessor for AccessoryDetails.Payload);
        if (qword_269B9C350 != -1) {
          swift_once();
        }
        uint64_t v64 = sub_251F350A0();
        __swift_project_value_buffer(v64, (uint64_t)qword_269B9FFC0);
        uint64_t v38 = sub_251F35080();
        os_log_type_t v65 = sub_251F35FD0();
        if (!os_log_type_enabled(v38, v65)) {
          goto LABEL_57;
        }
        uint64_t v66 = swift_slowAlloc();
        uint64_t v67 = swift_slowAlloc();
        uint64_t v112 = v67;
        *(_DWORD *)uint64_t v66 = 136315394;
        uint64_t v111 = sub_251A00E84(0xD000000000000024, 0x8000000251F72D00, &v112);
        sub_251F361D0();
        *(_WORD *)(v66 + 12) = 2080;
        uint64_t v111 = sub_251A00E84(0xD00000000000001CLL, 0x8000000251F72D70, &v112);
        sub_251F361D0();
        _os_log_impl(&dword_2519F3000, v38, v65, "%s - %s: Returning false since payload type is staticEndpoint", (uint8_t *)v66, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x2533AC760](v67, -1, -1);
        uint64_t v68 = v66;
        goto LABEL_56;
      default:
        uint64_t v31 = v106;
        sub_251E87D58((uint64_t)v18, v106, type metadata accessor for StaticAccessory);
        if (qword_26B2200E0 != -1) {
          swift_once();
        }
        uint64_t v32 = (void *)qword_26B21FF50;
        id v33 = (void *)sub_251F34D50();
        id v34 = objc_msgSend(v32, sel_accessoryFor_, v33);

        if (v34)
        {
          unsigned __int8 v35 = objc_msgSend(v34, sel_supportsWalletKey);
        }
        else
        {
          unsigned __int8 v35 = 0;
        }
        if (qword_269B9C350 != -1) {
          swift_once();
        }
        uint64_t v81 = sub_251F350A0();
        __swift_project_value_buffer(v81, (uint64_t)qword_269B9FFC0);
        uint64_t v82 = sub_251F35080();
        os_log_type_t v83 = sub_251F35FD0();
        if (os_log_type_enabled(v82, v83))
        {
          uint64_t v84 = swift_slowAlloc();
          uint64_t v85 = swift_slowAlloc();
          uint64_t v112 = v85;
          *(_DWORD *)uint64_t v84 = 136315650;
          uint64_t v111 = sub_251A00E84(0xD000000000000024, 0x8000000251F72D00, &v112);
          sub_251F361D0();
          *(_WORD *)(v84 + 12) = 2080;
          uint64_t v111 = sub_251A00E84(0xD00000000000001CLL, 0x8000000251F72D70, &v112);
          sub_251F361D0();
          *(_WORD *)(v84 + 22) = 2080;
          uint64_t v111 = sub_251A00E84(0x6341636974617473, 0xEF79726F73736563, &v112);
          sub_251F361D0();
          _os_log_impl(&dword_2519F3000, v82, v83, "%s - %s: static accessory: %s", (uint8_t *)v84, 0x20u);
          swift_arrayDestroy();
          MEMORY[0x2533AC760](v85, -1, -1);
          MEMORY[0x2533AC760](v84, -1, -1);
        }

        sub_251E760C4(v31, type metadata accessor for StaticAccessory);
        return v35;
    }
    return 0;
  }
  if (qword_269B9C350 != -1) {
    swift_once();
  }
  uint64_t v36 = sub_251F350A0();
  __swift_project_value_buffer(v36, (uint64_t)qword_269B9FFC0);
  uint64_t v37 = v110;
  sub_251E7605C(v1, v110, type metadata accessor for AccessoryDetails);
  uint64_t v38 = sub_251F35080();
  os_log_type_t v39 = sub_251F35FD0();
  if (os_log_type_enabled(v38, v39))
  {
    uint64_t v40 = swift_slowAlloc();
    uint64_t v108 = swift_slowAlloc();
    uint64_t v112 = v108;
    *(_DWORD *)uint64_t v40 = 136315650;
    uint64_t v111 = sub_251A00E84(0xD000000000000024, 0x8000000251F72D00, &v112);
    sub_251F361D0();
    *(_WORD *)(v40 + 12) = 2080;
    uint64_t v111 = sub_251A00E84(0xD00000000000001CLL, 0x8000000251F72D70, &v112);
    sub_251F361D0();
    *(_WORD *)(v40 + 22) = 2080;
    uint64_t v41 = v110;
    AccessoryDetailsBasicInfo.primaryStaticService.getter((uint64_t)v22);
    if (v109(v22, 1, v5) == 1)
    {
      sub_251A1B064((uint64_t)v22, qword_26B21EE20);
      char v42 = 0;
    }
    else
    {
      char v42 = v22[*(int *)(v5 + 88)];
      sub_251E760C4((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for StaticService);
    }
    LOBYTE(v111) = v42;
    uint64_t v92 = ServiceKind.localizedDescription.getter();
    uint64_t v111 = sub_251A00E84(v92, v93, &v112);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    sub_251E760C4(v41, type metadata accessor for AccessoryDetails);
    _os_log_impl(&dword_2519F3000, v38, v39, "%s - %s: Returning false since our primaryServiceKind is not lockMechanism, it is: %s", (uint8_t *)v40, 0x20u);
    uint64_t v94 = v108;
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v94, -1, -1);
    uint64_t v68 = v40;
LABEL_56:
    MEMORY[0x2533AC760](v68, -1, -1);
  }
  else
  {
    sub_251E760C4(v37, type metadata accessor for AccessoryDetails);
  }
LABEL_57:

  return 0;
}

Swift::Bool __swiftcall AccessoryDetails.hasOnboardedForAccessCode()()
{
  return sub_251E81048((SEL *)&selRef_hasOnboardedForAccessCode);
}

id AccessoryDetails.hmHomeFromPayload.getter()
{
  uint64_t v1 = v0;
  uint64_t v42 = type metadata accessor for StaticEndpoint();
  MEMORY[0x270FA5388](v42);
  uint64_t v3 = (char *)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for StaticServiceGroup();
  MEMORY[0x270FA5388](v7);
  uint64_t v43 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for StaticService();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v41 = (uint64_t)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v40 - v13;
  uint64_t v15 = type metadata accessor for StaticAccessory(0);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for AccessoryDetails.Payload(0);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251E7605C(v1, (uint64_t)v20, type metadata accessor for AccessoryDetails.Payload);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_251E87D58((uint64_t)v20, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for StaticService);
      if (qword_26B2200E0 != -1) {
        swift_once();
      }
      uint64_t v27 = (void *)qword_26B21FF50;
      char v28 = (void *)sub_251F34D50();
      id v29 = objc_msgSend(v27, sel_accessoryFor_, v28);

      id v24 = objc_msgSend(v29, sel_home);
      uint64_t v25 = (uint64_t (*)(void))type metadata accessor for StaticService;
      uint64_t v26 = (uint64_t)v14;
      goto LABEL_17;
    case 2u:
      uint64_t v3 = v43;
      sub_251E87D58((uint64_t)v20, (uint64_t)v43, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
      uint64_t v30 = swift_bridgeObjectRetain();
      uint64_t v31 = sub_251EDC188(v30);
      sub_251ABD970(v31, (uint64_t)v6);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9) == 1)
      {
        sub_251E760C4((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
        sub_251A1B064((uint64_t)v6, qword_26B21EE20);
        return 0;
      }
      else
      {
        uint64_t v35 = v41;
        sub_251E87D58((uint64_t)v6, v41, (uint64_t (*)(void))type metadata accessor for StaticService);
        if (qword_26B2200E0 != -1) {
          swift_once();
        }
        uint64_t v36 = (void *)qword_26B21FF50;
        uint64_t v37 = (void *)sub_251F34D50();
        id v38 = objc_msgSend(v36, sel_accessoryFor_, v37);

        id v24 = objc_msgSend(v38, sel_home);
        sub_251E760C4(v35, (uint64_t (*)(void))type metadata accessor for StaticService);
        id v34 = type metadata accessor for StaticServiceGroup;
LABEL_16:
        uint64_t v25 = (uint64_t (*)(void))v34;
        uint64_t v26 = (uint64_t)v3;
LABEL_17:
        sub_251E760C4(v26, v25);
      }
      return v24;
    case 3u:
      sub_251E87D58((uint64_t)v20, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
      if (qword_26B2200E0 != -1) {
        swift_once();
      }
      uint64_t v32 = (void *)qword_26B21FF50;
      id v33 = (void *)sub_251F34D50();
      id v24 = objc_msgSend(v32, sel_homeFor_, v33);

      id v34 = type metadata accessor for StaticEndpoint;
      goto LABEL_16;
    default:
      sub_251E87D58((uint64_t)v20, (uint64_t)v17, type metadata accessor for StaticAccessory);
      if (qword_26B2200E0 != -1) {
        swift_once();
      }
      uint64_t v21 = (void *)qword_26B21FF50;
      char v22 = (void *)sub_251F34D50();
      id v23 = objc_msgSend(v21, sel_accessoryFor_, v22);

      id v24 = objc_msgSend(v23, sel_home);
      uint64_t v25 = type metadata accessor for StaticAccessory;
      uint64_t v26 = (uint64_t)v17;
      goto LABEL_17;
  }
}

Swift::Bool __swiftcall AccessoryDetails._hasOnboardedForWalletKey()()
{
  return sub_251E81048((SEL *)&selRef_hasOnboardedForWalletKey);
}

id sub_251E81048(SEL *a1)
{
  id v2 = AccessoryDetails.hmHomeFromPayload.getter();
  if (!v2) {
    return 0;
  }
  uint64_t v3 = v2;
  id v4 = [v2 *a1];

  return v4;
}

BOOL AccessoryDetails.shouldShowManageAccessForLocks.getter()
{
  uint64_t v1 = v0;
  uint64_t v61 = type metadata accessor for StaticUser();
  uint64_t v2 = MEMORY[0x270FA5388](v61);
  id v4 = (char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v2);
  uint64_t v7 = (char *)&v53 - v6;
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v60 = (uint64_t)&v53 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v53 - v10;
  uint64_t v12 = type metadata accessor for AccessoryDetails(0);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v15 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v53 - v17;
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  uint64_t v21 = (char *)&v53 - v20;
  MEMORY[0x270FA5388](v19);
  id v23 = (char *)&v53 - v22;
  if (qword_269B9C350 != -1) {
    swift_once();
  }
  uint64_t v24 = sub_251F350A0();
  __swift_project_value_buffer(v24, (uint64_t)qword_269B9FFC0);
  sub_251E7605C(v0, (uint64_t)v23, type metadata accessor for AccessoryDetails);
  sub_251E7605C(v0, (uint64_t)v21, type metadata accessor for AccessoryDetails);
  sub_251E7605C(v0, (uint64_t)v18, type metadata accessor for AccessoryDetails);
  uint64_t v25 = sub_251F35080();
  int v26 = sub_251F35FD0();
  if (os_log_type_enabled(v25, (os_log_type_t)v26))
  {
    int v55 = v26;
    uint64_t v56 = v25;
    uint64_t v57 = v15;
    uint64_t v58 = v7;
    uint64_t v59 = v4;
    uint64_t v27 = swift_slowAlloc();
    uint64_t v54 = swift_slowAlloc();
    v64[0] = v54;
    *(_DWORD *)uint64_t v27 = 136316418;
    uint64_t v63 = sub_251A00E84(0xD000000000000024, 0x8000000251F72D00, v64);
    sub_251F361D0();
    *(_WORD *)(v27 + 12) = 2080;
    uint64_t v63 = sub_251A00E84(0xD00000000000001ELL, 0x8000000251F72D90, v64);
    sub_251F361D0();
    *(_WORD *)(v27 + 22) = 1024;
    BOOL v28 = AccessoryDetails.supportsAccessCodes()();
    sub_251E760C4((uint64_t)v23, type metadata accessor for AccessoryDetails);
    LODWORD(v63) = v28;
    sub_251F361D0();
    *(_WORD *)(v27 + 28) = 1024;
    id v29 = AccessoryDetails.hmHomeFromPayload.getter();
    if (v29)
    {
      uint64_t v30 = v29;
      unsigned int v31 = objc_msgSend(v29, sel_hasOnboardedForAccessCode);
    }
    else
    {
      unsigned int v31 = 0;
    }
    sub_251E760C4((uint64_t)v21, type metadata accessor for AccessoryDetails);
    LODWORD(v63) = v31;
    sub_251F361D0();
    *(_WORD *)(v27 + 34) = 1024;
    BOOL v33 = AccessoryDetails.accessoryIsReachable()();
    sub_251E760C4((uint64_t)v18, type metadata accessor for AccessoryDetails);
    LODWORD(v63) = v33;
    sub_251F361D0();
    *(_WORD *)(v27 + 40) = 1024;
    if (qword_26B2200E0 != -1) {
      swift_once();
    }
    uint64_t v34 = qword_26B21FF50;
    swift_getKeyPath();
    uint64_t v63 = v34;
    sub_251E87DC0((unint64_t *)&qword_26B21F280, (void (*)(uint64_t))type metadata accessor for DataModel);
    sub_251F34F10();
    swift_release();
    uint64_t v35 = v34 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentStateSnapshot;
    swift_beginAccess();
    uint64_t v36 = *(int *)(type metadata accessor for StateSnapshot(0) + 20);
    uint64_t v37 = type metadata accessor for StaticHome();
    sub_251E7605C(v35 + v36 + *(int *)(v37 + 28), (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticUser);
    uint64_t v38 = v60;
    uint64_t v32 = v61;
    LODWORD(v36) = v11[*(int *)(v61 + 28)];
    sub_251E7605C((uint64_t)v11, v60, (uint64_t (*)(void))type metadata accessor for StaticUser);
    uint64_t v7 = v58;
    id v4 = v59;
    os_log_type_t v39 = v56;
    if (v36) {
      BOOL v40 = *(unsigned __int8 *)(v38 + *(int *)(v32 + 28)) == 1;
    }
    else {
      BOOL v40 = 1;
    }
    sub_251E760C4(v38, (uint64_t (*)(void))type metadata accessor for StaticUser);
    sub_251E760C4((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticUser);
    BOOL v62 = v40;
    sub_251F361D0();
    _os_log_impl(&dword_2519F3000, v39, (os_log_type_t)v55, "%s - %s: supportsAccessCodes: %{BOOL}d hasOnboardedForAccessCode: %{BOOL}d, accessoryIsReachable: %{BOOL}d, userCanEdit: %{BOOL}d", (uint8_t *)v27, 0x2Eu);
    uint64_t v41 = v54;
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v41, -1, -1);
    MEMORY[0x2533AC760](v27, -1, -1);

    uint64_t v15 = v57;
  }
  else
  {
    sub_251E760C4((uint64_t)v18, type metadata accessor for AccessoryDetails);
    sub_251E760C4((uint64_t)v21, type metadata accessor for AccessoryDetails);
    sub_251E760C4((uint64_t)v23, type metadata accessor for AccessoryDetails);

    uint64_t v32 = v61;
  }
  Swift::Bool v42 = AccessoryDetails.supportsAccessCodes()();
  sub_251E7605C(v1, (uint64_t)v15, type metadata accessor for AccessoryDetails);
  if (v42)
  {
    id v43 = AccessoryDetails.hmHomeFromPayload.getter();
    BOOL v44 = (BOOL)v43;
    if (!v43)
    {
      uint64_t v50 = type metadata accessor for AccessoryDetails;
      uint64_t v51 = (uint64_t)v15;
LABEL_26:
      sub_251E760C4(v51, v50);
      return v44;
    }
    unsigned __int8 v45 = objc_msgSend(v43, sel_hasOnboardedForAccessCode);

    sub_251E760C4((uint64_t)v15, type metadata accessor for AccessoryDetails);
    if (v45)
    {
      if (qword_26B2200E0 != -1) {
        swift_once();
      }
      uint64_t v46 = qword_26B21FF50;
      swift_getKeyPath();
      v64[0] = v46;
      sub_251E87DC0((unint64_t *)&qword_26B21F280, (void (*)(uint64_t))type metadata accessor for DataModel);
      sub_251F34F10();
      swift_release();
      uint64_t v47 = v46 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentStateSnapshot;
      swift_beginAccess();
      uint64_t v48 = *(int *)(type metadata accessor for StateSnapshot(0) + 20);
      uint64_t v49 = type metadata accessor for StaticHome();
      sub_251E7605C(v47 + v48 + *(int *)(v49 + 28), (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticUser);
      LODWORD(v48) = v7[*(int *)(v32 + 28)];
      sub_251E7605C((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticUser);
      if (v48) {
        BOOL v44 = v4[*(int *)(v32 + 28)] == 1;
      }
      else {
        BOOL v44 = 1;
      }
      sub_251E760C4((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticUser);
      uint64_t v51 = (uint64_t)v7;
      uint64_t v50 = (uint64_t (*)(void))type metadata accessor for StaticUser;
      goto LABEL_26;
    }
    return 0;
  }
  else
  {
    sub_251E760C4((uint64_t)v15, type metadata accessor for AccessoryDetails);
    return 0;
  }
}

Swift::Bool __swiftcall AccessoryDetails.accessoryIsReachable()()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for StaticEndpoint();
  MEMORY[0x270FA5388](v2);
  id v4 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for StaticServiceGroup();
  MEMORY[0x270FA5388](v8);
  uint64_t v42 = (uint64_t)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for StaticService();
  uint64_t v41 = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v40 = (uint64_t)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v39 - v13;
  uint64_t v15 = type metadata accessor for StaticAccessory(0);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for AccessoryDetails.Payload(0);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251E7605C(v1, (uint64_t)v20, type metadata accessor for AccessoryDetails.Payload);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_251E87D58((uint64_t)v20, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for StaticService);
      if (qword_26B2200E0 != -1) {
        swift_once();
      }
      uint64_t v25 = (void *)qword_26B21FF50;
      int v26 = (void *)sub_251F34D50();
      id v27 = objc_msgSend(v25, sel_accessoryFor_, v26);

      if (v27)
      {
        unsigned __int8 v24 = objc_msgSend(v27, sel_isReachable);
      }
      else
      {
        unsigned __int8 v24 = 0;
      }
      unsigned int v31 = (uint64_t (*)(void))type metadata accessor for StaticService;
      uint64_t v32 = (uint64_t)v14;
      goto LABEL_23;
    case 2u:
      uint64_t v28 = v42;
      sub_251E87D58((uint64_t)v20, v42, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
      uint64_t v29 = swift_bridgeObjectRetain();
      uint64_t v30 = sub_251EDC188(v29);
      sub_251ABD970(v30, (uint64_t)v7);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v7, 1, v10) == 1)
      {
        sub_251E760C4(v28, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
        sub_251A1B064((uint64_t)v7, qword_26B21EE20);
        return 0;
      }
      else
      {
        uint64_t v33 = (uint64_t)v7;
        uint64_t v34 = v40;
        sub_251E87D58(v33, v40, (uint64_t (*)(void))type metadata accessor for StaticService);
        if (qword_26B2200E0 != -1) {
          swift_once();
        }
        uint64_t v35 = (void *)qword_26B21FF50;
        uint64_t v36 = (void *)sub_251F34D50();
        id v37 = objc_msgSend(v35, sel_accessoryFor_, v36);

        if (v37)
        {
          unsigned __int8 v24 = objc_msgSend(v37, sel_isReachable);
        }
        else
        {
          unsigned __int8 v24 = 0;
        }
        sub_251E760C4(v34, (uint64_t (*)(void))type metadata accessor for StaticService);
        unsigned int v31 = (uint64_t (*)(void))type metadata accessor for StaticServiceGroup;
        uint64_t v32 = v28;
LABEL_23:
        sub_251E760C4(v32, v31);
      }
      return v24;
    case 3u:
      sub_251E87D58((uint64_t)v20, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
      unsigned __int8 v24 = *(void *)&v4[*(int *)(v2 + 28)] == 1;
      unsigned int v31 = (uint64_t (*)(void))type metadata accessor for StaticEndpoint;
      uint64_t v32 = (uint64_t)v4;
      goto LABEL_23;
    default:
      sub_251E87D58((uint64_t)v20, (uint64_t)v17, type metadata accessor for StaticAccessory);
      if (qword_26B2200E0 != -1) {
        swift_once();
      }
      uint64_t v21 = (void *)qword_26B21FF50;
      uint64_t v22 = (void *)sub_251F34D50();
      id v23 = objc_msgSend(v21, sel_accessoryFor_, v22);

      if (v23)
      {
        unsigned __int8 v24 = objc_msgSend(v23, sel_isReachable);
      }
      else
      {
        unsigned __int8 v24 = 0;
      }
      unsigned int v31 = type metadata accessor for StaticAccessory;
      uint64_t v32 = (uint64_t)v17;
      goto LABEL_23;
  }
}

BOOL AccessoryDetails.shouldEnableManageAccessForLocks.getter()
{
  uint64_t v1 = type metadata accessor for AccessoryDetails(0);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_269B9C350 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_251F350A0();
  __swift_project_value_buffer(v4, (uint64_t)qword_269B9FFC0);
  sub_251E7605C(v0, (uint64_t)v3, type metadata accessor for AccessoryDetails);
  uint64_t v5 = sub_251F35080();
  os_log_type_t v6 = sub_251F35FD0();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v12 = v8;
    *(_DWORD *)uint64_t v7 = 136315650;
    uint64_t v11 = sub_251A00E84(0xD000000000000024, 0x8000000251F72D00, &v12);
    sub_251F361D0();
    *(_WORD *)(v7 + 12) = 2080;
    uint64_t v11 = sub_251A00E84(0xD000000000000020, 0x8000000251F72DB0, &v12);
    sub_251F361D0();
    *(_WORD *)(v7 + 22) = 1024;
    BOOL v9 = AccessoryDetails.accessoryIsReachable()();
    sub_251E760C4((uint64_t)v3, type metadata accessor for AccessoryDetails);
    LODWORD(v11) = v9;
    sub_251F361D0();
    _os_log_impl(&dword_2519F3000, v5, v6, "%s - %s: accessoryIsReachable: %{BOOL}d", (uint8_t *)v7, 0x1Cu);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v8, -1, -1);
    MEMORY[0x2533AC760](v7, -1, -1);
  }
  else
  {
    sub_251E760C4((uint64_t)v3, type metadata accessor for AccessoryDetails);
  }

  return AccessoryDetails.accessoryIsReachable()();
}

id AccessoryDetails.shouldShowAddHomeKeyToWallet.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for AccessoryDetails(0);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v3);
  uint64_t v8 = (char *)&v33 - v7;
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v11 = (char *)&v33 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v33 - v12;
  uint64_t v14 = (void *)sub_251F356C0();
  uint64_t v15 = (void *)MGGetStringAnswer();

  if (v15)
  {
    id v16 = v15;
    if (sub_251F35760() == 0x656E6F685069 && v17 == 0xE600000000000000)
    {

      swift_bridgeObjectRelease();
      int v18 = 1;
    }
    else
    {
      int v18 = sub_251F36B10();

      swift_bridgeObjectRelease();
    }
  }
  else
  {
    int v18 = 0;
  }
  if (qword_269B9C350 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_251F350A0();
  __swift_project_value_buffer(v19, (uint64_t)qword_269B9FFC0);
  sub_251E7605C(v1, (uint64_t)v13, type metadata accessor for AccessoryDetails);
  sub_251E7605C(v1, (uint64_t)v11, type metadata accessor for AccessoryDetails);
  uint64_t v20 = sub_251F35080();
  os_log_type_t v21 = sub_251F35FD0();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v36 = v8;
    uint64_t v33 = v5;
    uint64_t v22 = swift_slowAlloc();
    uint64_t v34 = swift_slowAlloc();
    uint64_t v38 = v34;
    *(_DWORD *)uint64_t v22 = 136316162;
    uint64_t v37 = sub_251A00E84(0xD000000000000024, 0x8000000251F72D00, &v38);
    sub_251F361D0();
    *(_WORD *)(v22 + 12) = 2080;
    uint64_t v37 = sub_251A00E84(0xD00000000000001CLL, 0x8000000251F72DE0, &v38);
    sub_251F361D0();
    *(_WORD *)(v22 + 22) = 1024;
    int v35 = v18;
    LODWORD(v37) = v18 & 1;
    sub_251F361D0();
    *(_WORD *)(v22 + 28) = 1024;
    BOOL v23 = AccessoryDetails.accessorySupportsWalletKey()();
    sub_251E760C4((uint64_t)v13, type metadata accessor for AccessoryDetails);
    LODWORD(v37) = v23;
    sub_251F361D0();
    *(_WORD *)(v22 + 34) = 1024;
    id v24 = AccessoryDetails.hmHomeFromPayload.getter();
    if (v24)
    {
      uint64_t v25 = v24;
      unsigned int v26 = objc_msgSend(v24, sel_hasOnboardedForWalletKey);
    }
    else
    {
      unsigned int v26 = 0;
    }
    uint64_t v5 = v33;
    sub_251E760C4((uint64_t)v11, type metadata accessor for AccessoryDetails);
    LODWORD(v37) = v26;
    sub_251F361D0();
    _os_log_impl(&dword_2519F3000, v20, v21, "%s - %s: isIphone: %{BOOL}d accessorySupportsWalletKey: %{BOOL}d, _hasOnboardedForWalletKey: %{BOOL}d", (uint8_t *)v22, 0x28u);
    uint64_t v27 = v34;
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v27, -1, -1);
    MEMORY[0x2533AC760](v22, -1, -1);

    uint64_t v8 = v36;
    LOBYTE(v18) = v35;
  }
  else
  {
    sub_251E760C4((uint64_t)v11, type metadata accessor for AccessoryDetails);
    sub_251E760C4((uint64_t)v13, type metadata accessor for AccessoryDetails);
  }
  sub_251E7605C(v1, (uint64_t)v8, type metadata accessor for AccessoryDetails);
  if ((v18 & 1) == 0)
  {
    sub_251E760C4((uint64_t)v8, type metadata accessor for AccessoryDetails);
    sub_251E7605C(v1, (uint64_t)v5, type metadata accessor for AccessoryDetails);
LABEL_20:
    id v31 = 0;
    goto LABEL_21;
  }
  Swift::Bool v28 = AccessoryDetails.accessorySupportsWalletKey()();
  sub_251E760C4((uint64_t)v8, type metadata accessor for AccessoryDetails);
  sub_251E7605C(v1, (uint64_t)v5, type metadata accessor for AccessoryDetails);
  if (!v28) {
    goto LABEL_20;
  }
  id v29 = AccessoryDetails.hmHomeFromPayload.getter();
  if (!v29) {
    goto LABEL_20;
  }
  uint64_t v30 = v29;
  id v31 = objc_msgSend(v29, sel_hasOnboardedForWalletKey);

LABEL_21:
  sub_251E760C4((uint64_t)v5, type metadata accessor for AccessoryDetails);
  return v31;
}

uint64_t AccessoryDetails.turnOnPairingMode()()
{
  v1[17] = v0;
  uint64_t v2 = type metadata accessor for StaticEndpoint();
  v1[18] = v2;
  v1[19] = *(void *)(v2 - 8);
  v1[20] = swift_task_alloc();
  v1[21] = type metadata accessor for StaticService();
  v1[22] = swift_task_alloc();
  type metadata accessor for StaticAccessory(0);
  v1[23] = swift_task_alloc();
  v1[24] = type metadata accessor for AccessoryDetails.Payload(0);
  v1[25] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CB38);
  v1[26] = swift_task_alloc();
  v1[27] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251E828D8, 0, 0);
}

uint64_t sub_251E828D8()
{
  uint64_t v1 = v0[25];
  uint64_t v2 = v0[17];
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0[19] + 56);
  v3(v0[27], 1, 1, v0[18]);
  sub_251E7605C(v2, v1, type metadata accessor for AccessoryDetails.Payload);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_251E87D58(v0[25], v0[22], (uint64_t (*)(void))type metadata accessor for StaticService);
      v0[35] = sub_251F35C80();
      v0[36] = sub_251F35C70();
      uint64_t v4 = sub_251F35C00();
      uint64_t v6 = v18;
      uint64_t v7 = sub_251E831C8;
      goto LABEL_13;
    case 2u:
      sub_251E760C4(v0[25], type metadata accessor for AccessoryDetails.Payload);
      goto LABEL_5;
    case 3u:
      uint64_t v8 = v0[27];
      uint64_t v9 = v0[25];
      uint64_t v10 = v0[18];
      sub_251A1B064(v8, &qword_269B9CB38);
      sub_251E87D58(v9, v8, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
      v3(v8, 0, 1, v10);
LABEL_5:
      uint64_t v11 = v0[26];
      uint64_t v12 = v0[18];
      uint64_t v13 = v0[19];
      sub_251A1B128(v0[27], v11, &qword_269B9CB38);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
      {
        uint64_t v14 = v0[26];
        sub_251A1B064(v0[27], &qword_269B9CB38);
        sub_251A1B064(v14, &qword_269B9CB38);
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v15 = (uint64_t (*)(void, void))v0[1];
        uint64_t result = v15(0, 0);
      }
      else
      {
        sub_251E87D58(v0[26], v0[20], (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
        uint64_t v17 = (void *)swift_task_alloc();
        v0[44] = v17;
        *uint64_t v17 = v0;
        v17[1] = sub_251E8390C;
        uint64_t result = StaticEndpoint.activateCHIPPairingModeAndCreateSetupPayloadString()();
      }
      break;
    default:
      sub_251E87D58(v0[25], v0[23], type metadata accessor for StaticAccessory);
      v0[28] = sub_251F35C80();
      v0[29] = sub_251F35C70();
      uint64_t v4 = sub_251F35C00();
      uint64_t v6 = v5;
      uint64_t v7 = sub_251E82C74;
LABEL_13:
      uint64_t result = MEMORY[0x270FA2498](v7, v4, v6);
      break;
  }
  return result;
}

uint64_t sub_251E82C74()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251E82D0C, 0, 0);
}

uint64_t sub_251E82D0C()
{
  *(void *)(v0 + 240) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251E82D98, v2, v1);
}

uint64_t sub_251E82D98()
{
  swift_release();
  *(void *)(v0 + 248) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251E82E0C, 0, 0);
}

uint64_t sub_251E82E0C()
{
  *(void *)(v0 + 256) = sub_251F34D50();
  *(void *)(v0 + 264) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251E82EA4, v2, v1);
}

uint64_t sub_251E82EA4()
{
  uint64_t v1 = (void *)v0[32];
  uint64_t v2 = (void *)v0[31];
  swift_release();
  v0[34] = objc_msgSend(v2, sel_accessoryFor_, v1);

  return MEMORY[0x270FA2498](sub_251E82F34, 0, 0);
}

uint64_t sub_251E82F34()
{
  sub_251E760C4(v0[23], type metadata accessor for StaticAccessory);
  uint64_t v1 = (void *)v0[34];
  v0[42] = v1;
  if (v1)
  {
    v0[2] = v0;
    v0[7] = v0 + 15;
    v0[3] = sub_251E83724;
    uint64_t v2 = swift_continuation_init();
    v0[10] = MEMORY[0x263EF8330];
    v0[11] = 0x40000000;
    v0[12] = sub_251B71F48;
    v0[13] = &block_descriptor_7;
    v0[14] = v2;
    objc_msgSend(v1, sel_activateCHIPPairingModeAndCreateSetupPayloadStringWithCompletion_, v0 + 10);
    return MEMORY[0x270FA23F0](v0 + 2);
  }
  else
  {
    uint64_t v3 = v0[26];
    uint64_t v4 = v0[18];
    uint64_t v5 = v0[19];
    sub_251A1B128(v0[27], v3, &qword_269B9CB38);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
    {
      uint64_t v6 = v0[26];
      sub_251A1B064(v0[27], &qword_269B9CB38);
      sub_251A1B064(v6, &qword_269B9CB38);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v7 = (uint64_t (*)(void, void))v0[1];
      return v7(0, 0);
    }
    else
    {
      sub_251E87D58(v0[26], v0[20], (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
      uint64_t v8 = (void *)swift_task_alloc();
      v0[44] = v8;
      *uint64_t v8 = v0;
      v8[1] = sub_251E8390C;
      return StaticEndpoint.activateCHIPPairingModeAndCreateSetupPayloadString()();
    }
  }
}

uint64_t sub_251E831C8()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251E83260, 0, 0);
}

uint64_t sub_251E83260()
{
  *(void *)(v0 + 296) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251E832EC, v2, v1);
}

uint64_t sub_251E832EC()
{
  swift_release();
  *(void *)(v0 + 304) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251E83360, 0, 0);
}

uint64_t sub_251E83360()
{
  *(void *)(v0 + 312) = sub_251F34D50();
  *(void *)(v0 + 320) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251E83400, v2, v1);
}

uint64_t sub_251E83400()
{
  uint64_t v1 = (void *)v0[39];
  uint64_t v2 = (void *)v0[38];
  swift_release();
  v0[41] = objc_msgSend(v2, sel_accessoryFor_, v1);

  return MEMORY[0x270FA2498](sub_251E83490, 0, 0);
}

uint64_t sub_251E83490()
{
  sub_251E760C4(v0[22], (uint64_t (*)(void))type metadata accessor for StaticService);
  uint64_t v1 = (void *)v0[41];
  v0[42] = v1;
  if (v1)
  {
    v0[2] = v0;
    v0[7] = v0 + 15;
    v0[3] = sub_251E83724;
    uint64_t v2 = swift_continuation_init();
    v0[10] = MEMORY[0x263EF8330];
    v0[11] = 0x40000000;
    v0[12] = sub_251B71F48;
    v0[13] = &block_descriptor_7;
    v0[14] = v2;
    objc_msgSend(v1, sel_activateCHIPPairingModeAndCreateSetupPayloadStringWithCompletion_, v0 + 10);
    return MEMORY[0x270FA23F0](v0 + 2);
  }
  else
  {
    uint64_t v3 = v0[26];
    uint64_t v4 = v0[18];
    uint64_t v5 = v0[19];
    sub_251A1B128(v0[27], v3, &qword_269B9CB38);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
    {
      uint64_t v6 = v0[26];
      sub_251A1B064(v0[27], &qword_269B9CB38);
      sub_251A1B064(v6, &qword_269B9CB38);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v7 = (uint64_t (*)(void, void))v0[1];
      return v7(0, 0);
    }
    else
    {
      sub_251E87D58(v0[26], v0[20], (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
      uint64_t v8 = (void *)swift_task_alloc();
      v0[44] = v8;
      *uint64_t v8 = v0;
      v8[1] = sub_251E8390C;
      return StaticEndpoint.activateCHIPPairingModeAndCreateSetupPayloadString()();
    }
  }
}

uint64_t sub_251E83724()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 344) = v1;
  if (v1) {
    uint64_t v2 = sub_251E83B28;
  }
  else {
    uint64_t v2 = sub_251E83834;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_251E83834()
{
  uint64_t v1 = (void *)v0[42];
  uint64_t v2 = v0[27];

  sub_251A1B064(v2, &qword_269B9CB38);
  uint64_t v4 = v0[15];
  uint64_t v3 = v0[16];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v5(v4, v3);
}

uint64_t sub_251E8390C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 360) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v7 = sub_251E83C04;
  }
  else
  {
    *(void *)(v6 + 368) = a2;
    *(void *)(v6 + 376) = a1;
    uint64_t v7 = sub_251E83A40;
  }
  return MEMORY[0x270FA2498](v7, 0, 0);
}

uint64_t sub_251E83A40()
{
  uint64_t v1 = v0[27];
  sub_251E760C4(v0[20], (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
  sub_251A1B064(v1, &qword_269B9CB38);
  uint64_t v2 = v0[46];
  uint64_t v3 = v0[47];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v4(v3, v2);
}

uint64_t sub_251E83B28()
{
  uint64_t v2 = (void *)v0[42];
  uint64_t v1 = (void *)v0[43];
  uint64_t v3 = v0[27];
  swift_willThrow();

  sub_251A1B064(v3, &qword_269B9CB38);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void, void))v0[1];
  return v4(0, 0);
}

uint64_t sub_251E83C04()
{
  uint64_t v1 = (void *)v0[45];
  uint64_t v2 = v0[27];
  sub_251E760C4(v0[20], (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
  sub_251A1B064(v2, &qword_269B9CB38);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void, void))v0[1];
  return v3(0, 0);
}

uint64_t AccessoryDetails.removeAccessoryFromAppleHome()()
{
  v1[44] = v0;
  type metadata accessor for StaticServiceGroup();
  v1[45] = swift_task_alloc();
  v1[46] = type metadata accessor for StaticService();
  v1[47] = swift_task_alloc();
  type metadata accessor for StaticAccessory(0);
  v1[48] = swift_task_alloc();
  v1[49] = type metadata accessor for AccessoryDetails.Payload(0);
  v1[50] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251E83E08, 0, 0);
}

uint64_t sub_251E83E08()
{
  sub_251E7605C(v0[44], v0[50], type metadata accessor for AccessoryDetails.Payload);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_251E87D58(v0[50], v0[47], (uint64_t (*)(void))type metadata accessor for StaticService);
      v0[60] = sub_251F35C80();
      v0[61] = sub_251F35C70();
      uint64_t v1 = sub_251F35C00();
      uint64_t v3 = v8;
      uint64_t v4 = sub_251E846B8;
      goto LABEL_8;
    case 2u:
      sub_251E87D58(v0[50], v0[45], (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
      v0[69] = sub_251F35C80();
      v0[70] = sub_251F35C70();
      uint64_t v1 = sub_251F35C00();
      uint64_t v3 = v5;
      uint64_t v4 = sub_251E84D08;
      goto LABEL_8;
    case 3u:
      sub_251E760C4(v0[50], type metadata accessor for AccessoryDetails.Payload);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v6 = (uint64_t (*)(void))v0[1];
      return v6();
    default:
      sub_251E87D58(v0[50], v0[48], type metadata accessor for StaticAccessory);
      v0[51] = sub_251F35C80();
      v0[52] = sub_251F35C70();
      uint64_t v1 = sub_251F35C00();
      uint64_t v3 = v2;
      uint64_t v4 = sub_251E84074;
LABEL_8:
      return MEMORY[0x270FA2498](v4, v1, v3);
  }
}

uint64_t sub_251E84074()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251E8410C, 0, 0);
}

uint64_t sub_251E8410C()
{
  *(void *)(v0 + 424) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251E84198, v2, v1);
}

uint64_t sub_251E84198()
{
  swift_release();
  *(void *)(v0 + 432) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251E8420C, 0, 0);
}

uint64_t sub_251E8420C()
{
  *(void *)(v0 + 440) = sub_251F34D50();
  *(void *)(v0 + 448) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251E842A4, v2, v1);
}

uint64_t sub_251E842A4()
{
  uint64_t v1 = (void *)v0[55];
  uint64_t v2 = (void *)v0[54];
  swift_release();
  v0[57] = objc_msgSend(v2, sel_accessoryFor_, v1);

  return MEMORY[0x270FA2498](sub_251E84334, 0, 0);
}

uint64_t sub_251E84334()
{
  uint64_t v1 = (void *)v0[57];
  if (v1)
  {
    id v2 = objc_msgSend(v1, sel_home);
    v0[58] = v2;
    if (v2)
    {
      uint64_t v3 = v2;
      uint64_t v4 = v0[57];
      v0[10] = v0;
      v0[11] = sub_251E844F4;
      uint64_t v5 = swift_continuation_init();
      v0[26] = MEMORY[0x263EF8330];
      v0[27] = 0x40000000;
      v0[28] = sub_251A5B804;
      v0[29] = &block_descriptor_10;
      v0[30] = v5;
      objc_msgSend(v3, sel_removeAccessory_completionHandler_, v4, v0 + 26);
      return MEMORY[0x270FA23F0](v0 + 10);
    }
    uint64_t v6 = (void *)v0[57];
    sub_251E760C4(v0[48], type metadata accessor for StaticAccessory);
  }
  else
  {
    sub_251E760C4(v0[48], type metadata accessor for StaticAccessory);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_251E844F4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 112);
  *(void *)(*(void *)v0 + 472) = v1;
  if (v1) {
    id v2 = sub_251E85464;
  }
  else {
    id v2 = sub_251E84604;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_251E84604()
{
  uint64_t v1 = *(void **)(v0 + 464);
  uint64_t v2 = *(void *)(v0 + 384);

  sub_251E760C4(v2, type metadata accessor for StaticAccessory);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_251E846B8()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251E84750, 0, 0);
}

uint64_t sub_251E84750()
{
  *(void *)(v0 + 496) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251E847DC, v2, v1);
}

uint64_t sub_251E847DC()
{
  swift_release();
  *(void *)(v0 + 504) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251E84850, 0, 0);
}

uint64_t sub_251E84850()
{
  *(void *)(v0 + 512) = sub_251F34D50();
  *(void *)(v0 + 520) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251E848F0, v2, v1);
}

uint64_t sub_251E848F0()
{
  uint64_t v1 = (void *)v0[63];
  uint64_t v2 = (void *)v0[64];
  swift_release();
  v0[66] = objc_msgSend(v1, sel_accessoryFor_, v2);

  return MEMORY[0x270FA2498](sub_251E84980, 0, 0);
}

uint64_t sub_251E84980()
{
  uint64_t v1 = (void *)v0[66];
  if (v1)
  {
    id v2 = objc_msgSend(v1, sel_home);
    v0[67] = v2;
    if (v2)
    {
      uint64_t v3 = v2;
      uint64_t v4 = v0[66];
      v0[18] = v0;
      v0[19] = sub_251E84B40;
      uint64_t v5 = swift_continuation_init();
      v0[31] = MEMORY[0x263EF8330];
      v0[32] = 0x40000000;
      v0[33] = sub_251A5B804;
      v0[34] = &block_descriptor_9;
      v0[35] = v5;
      objc_msgSend(v3, sel_removeAccessory_completionHandler_, v4, v0 + 31);
      return MEMORY[0x270FA23F0](v0 + 18);
    }
    uint64_t v6 = (void *)v0[66];
    sub_251E760C4(v0[47], (uint64_t (*)(void))type metadata accessor for StaticService);
  }
  else
  {
    sub_251E760C4(v0[47], (uint64_t (*)(void))type metadata accessor for StaticService);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_251E84B40()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 176);
  *(void *)(*(void *)v0 + 544) = v1;
  if (v1) {
    id v2 = sub_251E85788;
  }
  else {
    id v2 = sub_251E84C50;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_251E84C50()
{
  uint64_t v1 = *(void **)(v0 + 536);
  uint64_t v2 = *(void *)(v0 + 376);

  sub_251E760C4(v2, (uint64_t (*)(void))type metadata accessor for StaticService);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_251E84D08()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251E84DA0, 0, 0);
}

uint64_t sub_251E84DA0()
{
  *(void *)(v0 + 568) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251E84E2C, v2, v1);
}

uint64_t sub_251E84E2C()
{
  swift_release();
  *(void *)(v0 + 576) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251E84EA0, 0, 0);
}

uint64_t sub_251E84EA0()
{
  *(void *)(v0 + 584) = sub_251F34D50();
  *(void *)(v0 + 592) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251E84F38, v2, v1);
}

uint64_t sub_251E84F38()
{
  uint64_t v1 = (void *)v0[73];
  uint64_t v2 = (void *)v0[72];
  swift_release();
  v0[75] = objc_msgSend(v2, sel_serviceGroupFor_, v1);

  return MEMORY[0x270FA2498](sub_251E84FCC, 0, 0);
}

uint64_t sub_251E84FCC()
{
  uint64_t v1 = (void *)v0[75];
  if (!v1)
  {
    sub_251E760C4(v0[45], (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
    goto LABEL_16;
  }
  id v2 = objc_msgSend(v1, sel_services);
  sub_251B50D6C();
  unint64_t v3 = sub_251F35AC0();

  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_251F366C0();
    uint64_t v4 = swift_bridgeObjectRelease();
    if (v12) {
      goto LABEL_4;
    }
LABEL_15:
    uint64_t v13 = (void *)v0[75];
    uint64_t v14 = v0[45];
    swift_bridgeObjectRelease();
    sub_251E760C4(v14, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);

    goto LABEL_16;
  }
  if (!*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_15;
  }
LABEL_4:
  if ((v3 & 0xC000000000000001) != 0)
  {
    id v5 = (id)MEMORY[0x2533AB3A0](0, v3);
  }
  else
  {
    if (!*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return MEMORY[0x270FA23F0](v4);
    }
    id v5 = *(id *)(v3 + 32);
  }
  uint64_t v6 = v5;
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(v6, sel_accessory);

  if (v7)
  {
    id v8 = objc_msgSend(v7, sel_home);
    v0[76] = v8;

    if (v8)
    {
      uint64_t v9 = v0[75];
      v0[2] = v0;
      v0[3] = sub_251E8529C;
      uint64_t v10 = swift_continuation_init();
      v0[36] = MEMORY[0x263EF8330];
      v0[37] = 0x40000000;
      v0[38] = sub_251A5B804;
      v0[39] = &block_descriptor_8;
      v0[40] = v10;
      objc_msgSend(v8, sel_removeServiceGroup_completionHandler_, v9, v0 + 36);
      uint64_t v4 = (uint64_t)(v0 + 2);
      return MEMORY[0x270FA23F0](v4);
    }
  }
  uint64_t v11 = (void *)v0[75];
  sub_251E760C4(v0[45], (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);

LABEL_16:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_251E8529C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 616) = v1;
  if (v1) {
    id v2 = sub_251E85AB0;
  }
  else {
    id v2 = sub_251E853AC;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_251E853AC()
{
  uint64_t v1 = *(void **)(v0 + 608);
  uint64_t v2 = *(void *)(v0 + 360);

  sub_251E760C4(v2, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_251E85464()
{
  uint64_t v17 = v0;
  uint64_t v1 = *(void **)(v0 + 456);
  uint64_t v2 = *(void *)(v0 + 384);
  swift_willThrow();

  sub_251E760C4(v2, type metadata accessor for StaticAccessory);
  unint64_t v3 = *(void **)(v0 + 472);

  if (qword_269B9C350 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_251F350A0();
  __swift_project_value_buffer(v4, (uint64_t)qword_269B9FFC0);
  id v5 = v3;
  id v6 = v3;
  id v7 = sub_251F35080();
  os_log_type_t v8 = sub_251F35FB0();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = (void *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    v16[0] = v11;
    *(_DWORD *)uint64_t v9 = 136315650;
    *(void *)(v0 + 336) = sub_251A00E84(0xD000000000000024, 0x8000000251F72D00, v16);
    sub_251F361D0();
    *(_WORD *)(v9 + 12) = 2080;
    *(void *)(v0 + 328) = sub_251A00E84(0xD00000000000001ELL, 0x8000000251F72E00, v16);
    sub_251F361D0();
    *(_WORD *)(v9 + 22) = 2112;
    id v12 = v3;
    uint64_t v13 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 344) = v13;
    sub_251F361D0();
    *uint64_t v10 = v13;

    _os_log_impl(&dword_2519F3000, v7, v8, "%s - %s: error %@.", (uint8_t *)v9, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v10, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v11, -1, -1);
    MEMORY[0x2533AC760](v9, -1, -1);
  }
  else
  {
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14();
}

uint64_t sub_251E85788()
{
  uint64_t v17 = v0;
  uint64_t v1 = *(void **)(v0 + 528);
  uint64_t v2 = *(void *)(v0 + 376);
  swift_willThrow();

  sub_251E760C4(v2, (uint64_t (*)(void))type metadata accessor for StaticService);
  unint64_t v3 = *(void **)(v0 + 544);

  if (qword_269B9C350 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_251F350A0();
  __swift_project_value_buffer(v4, (uint64_t)qword_269B9FFC0);
  id v5 = v3;
  id v6 = v3;
  id v7 = sub_251F35080();
  os_log_type_t v8 = sub_251F35FB0();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = (void *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    v16[0] = v11;
    *(_DWORD *)uint64_t v9 = 136315650;
    *(void *)(v0 + 336) = sub_251A00E84(0xD000000000000024, 0x8000000251F72D00, v16);
    sub_251F361D0();
    *(_WORD *)(v9 + 12) = 2080;
    *(void *)(v0 + 328) = sub_251A00E84(0xD00000000000001ELL, 0x8000000251F72E00, v16);
    sub_251F361D0();
    *(_WORD *)(v9 + 22) = 2112;
    id v12 = v3;
    uint64_t v13 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 344) = v13;
    sub_251F361D0();
    *uint64_t v10 = v13;

    _os_log_impl(&dword_2519F3000, v7, v8, "%s - %s: error %@.", (uint8_t *)v9, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v10, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v11, -1, -1);
    MEMORY[0x2533AC760](v9, -1, -1);
  }
  else
  {
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14();
}

uint64_t sub_251E85AB0()
{
  uint64_t v17 = v0;
  uint64_t v1 = *(void **)(v0 + 600);
  uint64_t v2 = *(void *)(v0 + 360);
  swift_willThrow();

  sub_251E760C4(v2, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
  unint64_t v3 = *(void **)(v0 + 616);

  if (qword_269B9C350 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_251F350A0();
  __swift_project_value_buffer(v4, (uint64_t)qword_269B9FFC0);
  id v5 = v3;
  id v6 = v3;
  id v7 = sub_251F35080();
  os_log_type_t v8 = sub_251F35FB0();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = (void *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    v16[0] = v11;
    *(_DWORD *)uint64_t v9 = 136315650;
    *(void *)(v0 + 336) = sub_251A00E84(0xD000000000000024, 0x8000000251F72D00, v16);
    sub_251F361D0();
    *(_WORD *)(v9 + 12) = 2080;
    *(void *)(v0 + 328) = sub_251A00E84(0xD00000000000001ELL, 0x8000000251F72E00, v16);
    sub_251F361D0();
    *(_WORD *)(v9 + 22) = 2112;
    id v12 = v3;
    uint64_t v13 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 344) = v13;
    sub_251F361D0();
    *uint64_t v10 = v13;

    _os_log_impl(&dword_2519F3000, v7, v8, "%s - %s: error %@.", (uint8_t *)v9, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v10, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v11, -1, -1);
    MEMORY[0x2533AC760](v9, -1, -1);
  }
  else
  {
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14();
}

uint64_t AccessoryDetails.removeAccessoryFromAllEcosystems()()
{
  v1[31] = v0;
  v1[32] = type metadata accessor for StaticService();
  v1[33] = swift_task_alloc();
  type metadata accessor for StaticAccessory(0);
  v1[34] = swift_task_alloc();
  v1[35] = type metadata accessor for AccessoryDetails.Payload(0);
  v1[36] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251E85EC8, 0, 0);
}

uint64_t sub_251E85EC8()
{
  sub_251E7605C(v0[31], v0[36], type metadata accessor for AccessoryDetails.Payload);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((EnumCaseMultiPayload - 2) >= 2)
  {
    if (EnumCaseMultiPayload)
    {
      sub_251E87D58(v0[36], v0[33], (uint64_t (*)(void))type metadata accessor for StaticService);
      v0[46] = sub_251F35C80();
      v0[47] = sub_251F35C70();
      uint64_t v4 = sub_251F35C00();
      uint64_t v6 = v8;
      id v7 = sub_251E866B4;
    }
    else
    {
      sub_251E87D58(v0[36], v0[34], type metadata accessor for StaticAccessory);
      v0[37] = sub_251F35C80();
      v0[38] = sub_251F35C70();
      uint64_t v4 = sub_251F35C00();
      uint64_t v6 = v5;
      id v7 = sub_251E86090;
    }
    return MEMORY[0x270FA2498](v7, v4, v6);
  }
  else
  {
    sub_251E760C4(v0[36], type metadata accessor for AccessoryDetails.Payload);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = (uint64_t (*)(void))v0[1];
    return v2();
  }
}

uint64_t sub_251E86090()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251E86128, 0, 0);
}

uint64_t sub_251E86128()
{
  *(void *)(v0 + 312) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251E861B4, v2, v1);
}

uint64_t sub_251E861B4()
{
  swift_release();
  *(void *)(v0 + 320) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251E86228, 0, 0);
}

uint64_t sub_251E86228()
{
  *(void *)(v0 + 328) = sub_251F34D50();
  *(void *)(v0 + 336) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251E862C0, v2, v1);
}

uint64_t sub_251E862C0()
{
  uint64_t v1 = (void *)v0[41];
  uint64_t v2 = (void *)v0[40];
  swift_release();
  v0[43] = objc_msgSend(v2, sel_accessoryFor_, v1);

  return MEMORY[0x270FA2498](sub_251E86350, 0, 0);
}

uint64_t sub_251E86350()
{
  uint64_t v1 = (void *)v0[43];
  if (v1)
  {
    id v2 = objc_msgSend(v1, sel_home);
    v0[44] = v2;
    if (v2)
    {
      uint64_t v3 = v2;
      uint64_t v4 = v0[43];
      v0[10] = v0;
      v0[11] = sub_251E86504;
      uint64_t v5 = swift_continuation_init();
      v0[18] = MEMORY[0x263EF8330];
      v0[19] = 0x40000000;
      v0[20] = sub_251A5B804;
      v0[21] = &block_descriptor_12;
      v0[22] = v5;
      objc_msgSend(v3, sel_resetAndRemoveAllCHIPPairingsFromAccessory_completion_, v4, v0 + 18);
      return MEMORY[0x270FA23F0](v0 + 10);
    }
    uint64_t v6 = (void *)v0[43];
    sub_251E760C4(v0[34], type metadata accessor for StaticAccessory);
  }
  else
  {
    sub_251E760C4(v0[34], type metadata accessor for StaticAccessory);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_251E86504()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 112);
  *(void *)(*(void *)v0 + 360) = v1;
  if (v1) {
    id v2 = sub_251E86CE0;
  }
  else {
    id v2 = sub_251E86614;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_251E86614()
{
  uint64_t v1 = *(void **)(v0 + 352);
  uint64_t v2 = *(void *)(v0 + 272);

  sub_251E760C4(v2, type metadata accessor for StaticAccessory);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_251E866B4()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251E8674C, 0, 0);
}

uint64_t sub_251E8674C()
{
  *(void *)(v0 + 384) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251E867D8, v2, v1);
}

uint64_t sub_251E867D8()
{
  swift_release();
  *(void *)(v0 + 392) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251E8684C, 0, 0);
}

uint64_t sub_251E8684C()
{
  *(void *)(v0 + 400) = sub_251F34D50();
  *(void *)(v0 + 408) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251E868EC, v2, v1);
}

uint64_t sub_251E868EC()
{
  uint64_t v1 = (void *)v0[50];
  uint64_t v2 = (void *)v0[49];
  swift_release();
  v0[52] = objc_msgSend(v2, sel_accessoryFor_, v1);

  return MEMORY[0x270FA2498](sub_251E8697C, 0, 0);
}

uint64_t sub_251E8697C()
{
  uint64_t v1 = (void *)v0[52];
  if (v1)
  {
    id v2 = objc_msgSend(v1, sel_home);
    v0[53] = v2;
    if (v2)
    {
      uint64_t v3 = v2;
      uint64_t v4 = v0[52];
      v0[2] = v0;
      v0[3] = sub_251E86B30;
      uint64_t v5 = swift_continuation_init();
      v0[23] = MEMORY[0x263EF8330];
      v0[24] = 0x40000000;
      v0[25] = sub_251A5B804;
      v0[26] = &block_descriptor_11;
      v0[27] = v5;
      objc_msgSend(v3, sel_resetAndRemoveAllCHIPPairingsFromAccessory_completion_, v4, v0 + 23);
      return MEMORY[0x270FA23F0](v0 + 2);
    }
    uint64_t v6 = (void *)v0[52];
    sub_251E760C4(v0[33], (uint64_t (*)(void))type metadata accessor for StaticService);
  }
  else
  {
    sub_251E760C4(v0[33], (uint64_t (*)(void))type metadata accessor for StaticService);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_251E86B30()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 432) = v1;
  if (v1) {
    id v2 = sub_251E86FF4;
  }
  else {
    id v2 = sub_251E86C40;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_251E86C40()
{
  uint64_t v1 = *(void **)(v0 + 424);
  uint64_t v2 = *(void *)(v0 + 264);

  sub_251E760C4(v2, (uint64_t (*)(void))type metadata accessor for StaticService);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_251E86CE0()
{
  uint64_t v17 = v0;
  uint64_t v1 = *(void **)(v0 + 344);
  uint64_t v2 = *(void *)(v0 + 272);
  swift_willThrow();

  sub_251E760C4(v2, type metadata accessor for StaticAccessory);
  uint64_t v3 = *(void **)(v0 + 360);

  if (qword_269B9C350 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_251F350A0();
  __swift_project_value_buffer(v4, (uint64_t)qword_269B9FFC0);
  id v5 = v3;
  id v6 = v3;
  id v7 = sub_251F35080();
  os_log_type_t v8 = sub_251F35FB0();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = (void *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    v16[0] = v15;
    *(_DWORD *)uint64_t v9 = 136315650;
    *(void *)(v0 + 224) = sub_251A00E84(0xD000000000000024, 0x8000000251F72D00, v16);
    sub_251F361D0();
    *(_WORD *)(v9 + 12) = 2080;
    *(void *)(v0 + 240) = sub_251A00E84(0xD000000000000022, 0x8000000251F72E20, v16);
    sub_251F361D0();
    *(_WORD *)(v9 + 22) = 2112;
    id v11 = v3;
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 232) = v12;
    sub_251F361D0();
    *uint64_t v10 = v12;

    _os_log_impl(&dword_2519F3000, v7, v8, "%s - %s: error %@.", (uint8_t *)v9, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v10, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v15, -1, -1);
    MEMORY[0x2533AC760](v9, -1, -1);
  }
  else
  {
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

uint64_t sub_251E86FF4()
{
  uint64_t v17 = v0;
  uint64_t v1 = *(void **)(v0 + 416);
  uint64_t v2 = *(void *)(v0 + 264);
  swift_willThrow();

  sub_251E760C4(v2, (uint64_t (*)(void))type metadata accessor for StaticService);
  uint64_t v3 = *(void **)(v0 + 432);

  if (qword_269B9C350 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_251F350A0();
  __swift_project_value_buffer(v4, (uint64_t)qword_269B9FFC0);
  id v5 = v3;
  id v6 = v3;
  id v7 = sub_251F35080();
  os_log_type_t v8 = sub_251F35FB0();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = (void *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    v16[0] = v15;
    *(_DWORD *)uint64_t v9 = 136315650;
    *(void *)(v0 + 224) = sub_251A00E84(0xD000000000000024, 0x8000000251F72D00, v16);
    sub_251F361D0();
    *(_WORD *)(v9 + 12) = 2080;
    *(void *)(v0 + 240) = sub_251A00E84(0xD000000000000022, 0x8000000251F72E20, v16);
    sub_251F361D0();
    *(_WORD *)(v9 + 22) = 2112;
    id v11 = v3;
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 232) = v12;
    sub_251F361D0();
    *uint64_t v10 = v12;

    _os_log_impl(&dword_2519F3000, v7, v8, "%s - %s: error %@.", (uint8_t *)v9, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v10, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v15, -1, -1);
    MEMORY[0x2533AC760](v9, -1, -1);
  }
  else
  {
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

uint64_t _s13HomeDataModel16AccessoryDetailsV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticDeviceMetadata();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F118);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)&v31 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v31 - v18;
  if ((_s13HomeDataModel16AccessoryDetailsV7PayloadO2eeoiySbAE_AEtFZ_0(a1, a2) & 1) == 0) {
    return 0;
  }
  uint64_t v34 = v7;
  uint64_t v20 = type metadata accessor for AccessoryDetails(0);
  if ((_s13HomeDataModel25AccessoryDetailsBasicInfoV2eeoiySbAC_ACtFZ_0(a1 + *(int *)(v20 + 20), a2 + *(int *)(v20 + 20)) & 1) == 0)return 0; {
  uint64_t v21 = *(int *)(v20 + 24);
  }
  uint64_t v32 = a1;
  sub_251A1B128(a1 + v21, (uint64_t)v19, &qword_26B21F110);
  uint64_t v31 = v20;
  uint64_t v22 = *(int *)(v20 + 24);
  uint64_t v33 = a2;
  sub_251A1B128(a2 + v22, (uint64_t)v17, &qword_26B21F110);
  uint64_t v23 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_251A1B128((uint64_t)v19, (uint64_t)v10, &qword_26B21F110);
  sub_251A1B128((uint64_t)v17, v23, &qword_26B21F110);
  id v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v24((uint64_t)v10, 1, v4) != 1)
  {
    sub_251A1B128((uint64_t)v10, (uint64_t)v14, &qword_26B21F110);
    if (v24(v23, 1, v4) != 1)
    {
      uint64_t v25 = (uint64_t)v34;
      sub_251E87D58(v23, (uint64_t)v34, (uint64_t (*)(void))type metadata accessor for StaticDeviceMetadata);
      char v26 = _s13HomeDataModel20StaticDeviceMetadataV2eeoiySbAC_ACtFZ_0((uint64_t)v14, v25);
      sub_251E760C4(v25, (uint64_t (*)(void))type metadata accessor for StaticDeviceMetadata);
      sub_251A1B064((uint64_t)v17, &qword_26B21F110);
      sub_251A1B064((uint64_t)v19, &qword_26B21F110);
      sub_251E760C4((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for StaticDeviceMetadata);
      sub_251A1B064((uint64_t)v10, &qword_26B21F110);
      if ((v26 & 1) == 0) {
        return 0;
      }
      goto LABEL_10;
    }
    sub_251A1B064((uint64_t)v17, &qword_26B21F110);
    sub_251A1B064((uint64_t)v19, &qword_26B21F110);
    sub_251E760C4((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for StaticDeviceMetadata);
LABEL_8:
    sub_251A1B064((uint64_t)v10, &qword_26B21F118);
    return 0;
  }
  sub_251A1B064((uint64_t)v17, &qword_26B21F110);
  sub_251A1B064((uint64_t)v19, &qword_26B21F110);
  if (v24(v23, 1, v4) != 1) {
    goto LABEL_8;
  }
  sub_251A1B064((uint64_t)v10, &qword_26B21F110);
LABEL_10:
  uint64_t v27 = *(int *)(v31 + 28);
  int v28 = *(unsigned __int8 *)(v32 + v27);
  int v29 = *(unsigned __int8 *)(v33 + v27);
  if (v28 == 8)
  {
    if (v29 == 8) {
      return 1;
    }
  }
  else if (v29 != 8)
  {
    switch(v28)
    {
      case 2:
        return v29 == 2;
      case 3:
        return v29 == 3;
      case 4:
        return v29 == 4;
      case 5:
        return v29 == 5;
      case 6:
        return v29 == 6;
      case 7:
        return v29 == 7;
      default:
        return (v29 - 2) >= 6 && ((v29 ^ v28) & 1) == 0;
    }
  }
  return 0;
}

uint64_t _s13HomeDataModel16AccessoryDetailsV7PayloadO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v40 = a1;
  uint64_t v41 = a2;
  uint64_t v2 = type metadata accessor for StaticEndpoint();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v39 = (uint64_t)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for StaticServiceGroup();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v38 = (uint64_t)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for StaticService();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for StaticAccessory(0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for AccessoryDetails.Payload(0);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v38 - v17;
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  uint64_t v21 = (char *)&v38 - v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v38 - v22;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA5040);
  uint64_t v25 = MEMORY[0x270FA5388](v24 - 8);
  uint64_t v27 = (char *)&v38 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = (uint64_t)&v27[*(int *)(v25 + 56)];
  sub_251E7605C(v40, (uint64_t)v27, type metadata accessor for AccessoryDetails.Payload);
  sub_251E7605C(v41, v28, type metadata accessor for AccessoryDetails.Payload);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_251E7605C((uint64_t)v27, (uint64_t)v21, type metadata accessor for AccessoryDetails.Payload);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_251E87D58(v28, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticService);
        char v31 = static StaticService.== infix(_:_:)(v21, v8);
        uint64_t v32 = type metadata accessor for StaticService;
        sub_251E760C4((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticService);
        uint64_t v33 = (uint64_t)v21;
        goto LABEL_15;
      }
      int v29 = (uint64_t (*)(void))type metadata accessor for StaticService;
      uint64_t v30 = (uint64_t)v21;
      goto LABEL_13;
    case 2u:
      sub_251E7605C((uint64_t)v27, (uint64_t)v18, type metadata accessor for AccessoryDetails.Payload);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        uint64_t v34 = v38;
        sub_251E87D58(v28, v38, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
        char v31 = _s13HomeDataModel18StaticServiceGroupV2eeoiySbAC_ACtFZ_0((uint64_t)v18, v34);
        sub_251E760C4(v34, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
        uint64_t v33 = (uint64_t)v18;
        int v35 = type metadata accessor for StaticServiceGroup;
        goto LABEL_16;
      }
      int v29 = (uint64_t (*)(void))type metadata accessor for StaticServiceGroup;
      uint64_t v30 = (uint64_t)v18;
      goto LABEL_13;
    case 3u:
      sub_251E7605C((uint64_t)v27, (uint64_t)v15, type metadata accessor for AccessoryDetails.Payload);
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        uint64_t v36 = v39;
        sub_251E87D58(v28, v39, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
        char v31 = static StaticEndpoint.== infix(_:_:)((uint64_t)v15, v36);
        uint64_t v32 = type metadata accessor for StaticEndpoint;
        sub_251E760C4(v36, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
        uint64_t v33 = (uint64_t)v15;
        goto LABEL_15;
      }
      int v29 = (uint64_t (*)(void))type metadata accessor for StaticEndpoint;
      uint64_t v30 = (uint64_t)v15;
      goto LABEL_13;
    default:
      sub_251E7605C((uint64_t)v27, (uint64_t)v23, type metadata accessor for AccessoryDetails.Payload);
      if (swift_getEnumCaseMultiPayload())
      {
        int v29 = type metadata accessor for StaticAccessory;
        uint64_t v30 = (uint64_t)v23;
LABEL_13:
        sub_251E760C4(v30, v29);
        sub_251A1B064((uint64_t)v27, &qword_269BA5040);
        char v31 = 0;
      }
      else
      {
        sub_251E87D58(v28, (uint64_t)v11, type metadata accessor for StaticAccessory);
        char v31 = static StaticAccessory.== infix(_:_:)(v23, v11);
        uint64_t v32 = (uint64_t (*)())type metadata accessor for StaticAccessory;
        sub_251E760C4((uint64_t)v11, type metadata accessor for StaticAccessory);
        uint64_t v33 = (uint64_t)v23;
LABEL_15:
        int v35 = v32;
LABEL_16:
        sub_251E760C4(v33, (uint64_t (*)(void))v35);
        sub_251E760C4((uint64_t)v27, type metadata accessor for AccessoryDetails.Payload);
      }
      return v31 & 1;
  }
}

uint64_t sub_251E87D58(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_251E87DC0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_251E87E18(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_251E87E80()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for AccessoryDetails(0);
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(v2 - 8) + 80);
  uint64_t v121 = *(void *)(*(void *)(v2 - 8) + 64);
  swift_unknownObjectRelease();
  uint64_t v122 = (v3 + 32) & ~v3;
  uint64_t v4 = v0 + v122;
  type metadata accessor for AccessoryDetails.Payload(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v5 = sub_251F34DA0();
      uint64_t v6 = *(void *)(v5 - 8);
      uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
      v7(v4, v5);
      uint64_t v8 = (int *)type metadata accessor for StaticAccessory(0);
      swift_bridgeObjectRelease();
      uint64_t v9 = v4 + v8[6];
      type metadata accessor for StaticAccessory.DeviceIdentifier(0);
      uint64_t v113 = v2;
      if (swift_getEnumCaseMultiPayload() == 1) {
        v7(v9, v5);
      }
      else {
        swift_bridgeObjectRelease();
      }
      uint64_t v34 = v4 + v8[7];
      uint64_t v35 = type metadata accessor for StaticDeviceMetadata();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 48))(v34, 1, v35))
      {
        v7(v34, v5);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      uint64_t v36 = v4 + v8[8];
      uint64_t v37 = sub_251F34D20();
      uint64_t v110 = *(void *)(v37 - 8);
      uint64_t v106 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v110 + 48);
      if (!v106(v36, 1, v37)) {
        (*(void (**)(uint64_t, uint64_t))(v110 + 8))(v36, v37);
      }
      v7(v4 + v8[11], v5);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v38 = v4 + v8[21];
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v38, 1, v5)) {
        v7(v38, v5);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v39 = v4 + v8[28];
      uint64_t v40 = type metadata accessor for StaticSoftwareUpdate(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 48))(v39, 1, v40)) {
        goto LABEL_42;
      }
      v7(v39, v5);
      uint64_t v41 = v39 + *(int *)(v40 + 20);
      type metadata accessor for StaticSoftwareUpdate.Kind(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v45 = v41 + *(int *)(type metadata accessor for StaticSoftwareUpdateMetadata(0) + 20);
        if (!v106(v45, 1, v37)) {
          (*(void (**)(uint64_t, uint64_t))(v110 + 8))(v45, v37);
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        if (EnumCaseMultiPayload) {
          goto LABEL_42;
        }
        v7(v41, v5);
        type metadata accessor for StaticHH2Update(0);
      }
      swift_bridgeObjectRelease();
LABEL_42:
      swift_bridgeObjectRelease();
      uint64_t v1 = v0;
      uint64_t v2 = v113;
      goto LABEL_43;
    case 1u:
      uint64_t v114 = v2;
      uint64_t v10 = sub_251F34DA0();
      uint64_t v11 = *(void *)(v10 - 8);
      uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
      v12(v4, v10);
      uint64_t v13 = (int *)type metadata accessor for StaticService();
      swift_bridgeObjectRelease();
      uint64_t v109 = v12;
      v12(v4 + v13[11], v10);
      uint64_t v14 = v4 + v13[13];
      uint64_t v15 = type metadata accessor for StaticDeviceMetadata();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15))
      {
        v109(v14, v10);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      uint64_t v117 = v3;
      uint64_t v16 = v4 + v13[14];
      uint64_t v17 = sub_251F34D20();
      uint64_t v18 = *(void *)(v17 - 8);
      uint64_t v105 = *(unsigned int (**)(void))(v18 + 48);
      if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v105)(v16, 1, v17)) {
        (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
      }
      uint64_t v103 = v18;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v19 = v4 + v13[25];
      uint64_t v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
      if (!v20(v19, 1, v10)) {
        v109(v19, v10);
      }
      uint64_t v21 = v4 + v13[26];
      if (!v20(v21, 1, v10)) {
        v109(v21, v10);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v22 = v4 + v13[30];
      uint64_t v23 = type metadata accessor for StaticSoftwareUpdate(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48))(v22, 1, v23)) {
        goto LABEL_36;
      }
      v109(v22, v10);
      uint64_t v24 = v22 + *(int *)(v23 + 20);
      type metadata accessor for StaticSoftwareUpdate.Kind(0);
      int v25 = swift_getEnumCaseMultiPayload();
      if (v25 == 2 || v25 == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v101 = v24 + *(int *)(type metadata accessor for StaticSoftwareUpdateMetadata(0) + 20);
        if (!v105()) {
          (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v101, v17);
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        if (v25) {
          goto LABEL_36;
        }
        v109(v24, v10);
        type metadata accessor for StaticHH2Update(0);
      }
      swift_bridgeObjectRelease();
LABEL_36:
      swift_bridgeObjectRelease();
      uint64_t v43 = v4 + v13[33];
      unsigned int v44 = v20(v43, 1, v10);
      uint64_t v3 = v117;
      uint64_t v1 = v0;
      uint64_t v2 = v114;
      if (!v44) {
        v109(v43, v10);
      }
LABEL_43:
      uint64_t v46 = v4 + *(int *)(v2 + 20);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v119 = v1;
          uint64_t v47 = sub_251F34DA0();
          uint64_t v48 = *(void *)(v47 - 8);
          uint64_t v49 = *(void (**)(uint64_t, uint64_t))(v48 + 8);
          v49(v46, v47);
          uint64_t v50 = (int *)type metadata accessor for StaticAccessory(0);
          swift_bridgeObjectRelease();
          uint64_t v51 = v46 + v50[6];
          type metadata accessor for StaticAccessory.DeviceIdentifier(0);
          uint64_t v115 = v2;
          if (swift_getEnumCaseMultiPayload() == 1) {
            v49(v51, v47);
          }
          else {
            swift_bridgeObjectRelease();
          }
          uint64_t v76 = v46 + v50[7];
          uint64_t v77 = type metadata accessor for StaticDeviceMetadata();
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v77 - 8) + 48))(v76, 1, v77))
          {
            v49(v76, v47);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          uint64_t v78 = v46 + v50[8];
          uint64_t v79 = sub_251F34D20();
          uint64_t v112 = *(void *)(v79 - 8);
          uint64_t v108 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v112 + 48);
          if (!v108(v78, 1, v79)) {
            (*(void (**)(uint64_t, uint64_t))(v112 + 8))(v78, v79);
          }
          v49(v46 + v50[11], v47);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v80 = v46 + v50[21];
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v48 + 48))(v80, 1, v47)) {
            v49(v80, v47);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v81 = v46 + v50[28];
          uint64_t v82 = type metadata accessor for StaticSoftwareUpdate(0);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v82 - 8) + 48))(v81, 1, v82)) {
            goto LABEL_84;
          }
          v49(v81, v47);
          uint64_t v83 = v81 + *(int *)(v82 + 20);
          type metadata accessor for StaticSoftwareUpdate.Kind(0);
          int v84 = swift_getEnumCaseMultiPayload();
          if (v84 == 2 || v84 == 1)
          {
            swift_bridgeObjectRelease();
            uint64_t v87 = v83 + *(int *)(type metadata accessor for StaticSoftwareUpdateMetadata(0) + 20);
            if (!v108(v87, 1, v79)) {
              (*(void (**)(uint64_t, uint64_t))(v112 + 8))(v87, v79);
            }
            swift_bridgeObjectRelease();
          }
          else
          {
            if (v84) {
              goto LABEL_84;
            }
            v49(v83, v47);
            type metadata accessor for StaticHH2Update(0);
          }
          swift_bridgeObjectRelease();
LABEL_84:
          swift_bridgeObjectRelease();
          uint64_t v1 = v119;
          uint64_t v2 = v115;
          goto LABEL_85;
        case 1u:
          uint64_t v116 = v2;
          uint64_t v52 = sub_251F34DA0();
          uint64_t v53 = *(void *)(v52 - 8);
          uint64_t v54 = *(void (**)(uint64_t, uint64_t))(v53 + 8);
          v54(v46, v52);
          int v55 = (int *)type metadata accessor for StaticService();
          swift_bridgeObjectRelease();
          uint64_t v111 = v54;
          v54(v46 + v55[11], v52);
          uint64_t v56 = v46 + v55[13];
          uint64_t v57 = type metadata accessor for StaticDeviceMetadata();
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 48))(v56, 1, v57))
          {
            v111(v56, v52);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          uint64_t v118 = v3;
          uint64_t v58 = v46 + v55[14];
          uint64_t v59 = sub_251F34D20();
          uint64_t v60 = *(void *)(v59 - 8);
          uint64_t v107 = *(unsigned int (**)(void))(v60 + 48);
          if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v107)(v58, 1, v59)) {
            (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v58, v59);
          }
          uint64_t v104 = v60;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v61 = v46 + v55[25];
          BOOL v62 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v53 + 48);
          if (!v62(v61, 1, v52)) {
            v111(v61, v52);
          }
          uint64_t v120 = v1;
          uint64_t v63 = v46 + v55[26];
          if (!v62(v63, 1, v52)) {
            v111(v63, v52);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v64 = v46 + v55[30];
          uint64_t v65 = type metadata accessor for StaticSoftwareUpdate(0);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 48))(v64, 1, v65)) {
            goto LABEL_78;
          }
          v111(v64, v52);
          uint64_t v66 = v64 + *(int *)(v65 + 20);
          type metadata accessor for StaticSoftwareUpdate.Kind(0);
          int v67 = swift_getEnumCaseMultiPayload();
          if (v67 == 2 || v67 == 1)
          {
            swift_bridgeObjectRelease();
            uint64_t v102 = v66 + *(int *)(type metadata accessor for StaticSoftwareUpdateMetadata(0) + 20);
            if (!v107()) {
              (*(void (**)(uint64_t, uint64_t))(v104 + 8))(v102, v59);
            }
            swift_bridgeObjectRelease();
          }
          else
          {
            if (v67) {
              goto LABEL_78;
            }
            v111(v66, v52);
            type metadata accessor for StaticHH2Update(0);
          }
          swift_bridgeObjectRelease();
LABEL_78:
          swift_bridgeObjectRelease();
          uint64_t v85 = v46 + v55[33];
          unsigned int v86 = v62(v85, 1, v52);
          uint64_t v3 = v118;
          uint64_t v1 = v120;
          uint64_t v2 = v116;
          if (!v86) {
            v111(v85, v52);
          }
LABEL_85:
          uint64_t v88 = type metadata accessor for AccessoryDetailsBasicInfo();
          swift_bridgeObjectRelease();
          uint64_t v89 = v46 + *(int *)(v88 + 24);
          uint64_t v90 = type metadata accessor for StaticRoom(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v90 - 8) + 48))(v89, 1, v90))
          {
            uint64_t v91 = v3;
            uint64_t v92 = v1;
            uint64_t v93 = v2;
            uint64_t v94 = sub_251F34DA0();
            uint64_t v95 = *(void (**)(uint64_t, uint64_t))(*(void *)(v94 - 8) + 8);
            v95(v89, v94);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v96 = v94;
            uint64_t v2 = v93;
            uint64_t v1 = v92;
            uint64_t v3 = v91;
            uint64_t v4 = v0 + v122;
            v95(v89 + *(int *)(v90 + 32), v96);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          uint64_t v97 = v4 + *(int *)(v2 + 24);
          uint64_t v98 = type metadata accessor for StaticDeviceMetadata();
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v98 - 8) + 48))(v97, 1, v98))
          {
            uint64_t v99 = sub_251F34DA0();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v99 - 8) + 8))(v97, v99);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          return MEMORY[0x270FA0238](v1, v122 + v121, v3 | 7);
        case 2u:
          uint64_t v68 = sub_251F34DA0();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v68 - 8) + 8))(v46, v68);
          type metadata accessor for StaticServiceGroup();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_85;
        case 3u:
          uint64_t v69 = sub_251F34DA0();
          uint64_t v70 = *(void (**)(uint64_t, uint64_t))(*(void *)(v69 - 8) + 8);
          v70(v46, v69);
          uint64_t v71 = type metadata accessor for StaticEndpoint();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v70(v46 + *(int *)(v71 + 44), v69);
          swift_bridgeObjectRelease();
          uint64_t v72 = v46 + *(int *)(v71 + 52);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v73 = v72 + *(int *)(type metadata accessor for MatterTileMetadata() + 44);
          uint64_t v74 = sub_251F34D20();
          uint64_t v75 = *(void *)(v74 - 8);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v75 + 48))(v73, 1, v74)) {
            (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v73, v74);
          }
          goto LABEL_85;
        default:
          goto LABEL_85;
      }
    case 2u:
      uint64_t v26 = sub_251F34DA0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v0 + v122, v26);
      type metadata accessor for StaticServiceGroup();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_43;
    case 3u:
      uint64_t v27 = sub_251F34DA0();
      uint64_t v28 = *(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8);
      v28(v4, v27);
      uint64_t v29 = type metadata accessor for StaticEndpoint();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v28(v4 + *(int *)(v29 + 44), v27);
      swift_bridgeObjectRelease();
      uint64_t v30 = v4 + *(int *)(v29 + 52);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v31 = v30 + *(int *)(type metadata accessor for MatterTileMetadata() + 44);
      uint64_t v32 = sub_251F34D20();
      uint64_t v33 = *(void *)(v32 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32)) {
        (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v31, v32);
      }
      goto LABEL_43;
    default:
      goto LABEL_43;
  }
}

uint64_t sub_251E89658()
{
  uint64_t v2 = *(void *)(type metadata accessor for AccessoryDetails(0) - 8);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_251AB3DD4;
  v4[2] = v3;
  return MEMORY[0x270FA2498](sub_251E77244, 0, 0);
}

unint64_t sub_251E89738()
{
  unint64_t result = qword_269BA4EC0;
  if (!qword_269BA4EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4EC0);
  }
  return result;
}

unint64_t sub_251E8978C()
{
  unint64_t result = qword_269BA4F08;
  if (!qword_269BA4F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4F08);
  }
  return result;
}

unint64_t sub_251E897E0()
{
  unint64_t result = qword_269BA4F10;
  if (!qword_269BA4F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4F10);
  }
  return result;
}

unint64_t sub_251E89834()
{
  unint64_t result = qword_269BA4F18;
  if (!qword_269BA4F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4F18);
  }
  return result;
}

unint64_t sub_251E89888()
{
  unint64_t result = qword_269BA4F20;
  if (!qword_269BA4F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4F20);
  }
  return result;
}

unint64_t sub_251E898DC()
{
  unint64_t result = qword_269BA4F28;
  if (!qword_269BA4F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4F28);
  }
  return result;
}

uint64_t sub_251E89930()
{
  return sub_251E87DC0(&qword_269BA4F78, (void (*)(uint64_t))type metadata accessor for AccessoryDetails);
}

uint64_t sub_251E89978()
{
  return sub_251E87DC0(&qword_269BA4F80, (void (*)(uint64_t))type metadata accessor for AccessoryDetails.Payload);
}

uint64_t sub_251E899C0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = AccessoryDetails.updateState.getter(&v3);
  *a1 = v3;
  return result;
}

uint64_t sub_251E899FC(char *a1, uint64_t a2)
{
  char v3 = *a1;
  uint64_t result = type metadata accessor for AccessoryDetails(0);
  *(unsigned char *)(a2 + *(int *)(result + 28)) = v3;
  return result;
}

uint64_t dispatch thunk of Committable.commit()(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 8) + **(int **)(a2 + 8));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_251AB3A34;
  return v7(a1, a2);
}

char *initializeBufferWithCopyOfBuffer for AccessoryDetails(char *a1, char *a2, uint64_t a3)
{
  char v3 = (char *)a2;
  uint64_t v4 = (char *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = (char *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return v4;
  }
  uint64_t v6 = a3;
  type metadata accessor for AccessoryDetails.Payload(0);
  uint64_t v611 = v6;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v18 = sub_251F34DA0();
      uint64_t v19 = *(void *)(v18 - 8);
      uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
      v20(v4, v3, v18);
      uint64_t v21 = (int *)type metadata accessor for StaticService();
      uint64_t v22 = v21[5];
      uint64_t v23 = &v4[v22];
      uint64_t v24 = &v3[v22];
      uint64_t v25 = v24[1];
      *uint64_t v23 = *v24;
      v23[1] = v25;
      v4[v21[6]] = v3[v21[6]];
      v4[v21[7]] = v3[v21[7]];
      v4[v21[8]] = v3[v21[8]];
      v4[v21[9]] = v3[v21[9]];
      v4[v21[10]] = v3[v21[10]];
      uint64_t v26 = v21[11];
      uint64_t v27 = &v4[v26];
      uint64_t v28 = &v3[v26];
      swift_bridgeObjectRetain();
      v20(v27, v28, v18);
      uint64_t v29 = v21[12];
      uint64_t v30 = &v4[v29];
      uint64_t v31 = &v3[v29];
      *(void *)uint64_t v30 = *(void *)v31;
      v30[8] = v31[8];
      uint64_t v32 = v21[13];
      uint64_t v33 = &v4[v32];
      uint64_t v34 = &v3[v32];
      uint64_t v35 = (int *)type metadata accessor for StaticDeviceMetadata();
      __dst = (void *)*((void *)v35 - 1);
      uint64_t v593 = v19;
      v613 = v20;
      uint64_t v617 = v18;
      if (((unsigned int (*)(char *, uint64_t, int *))__dst[6])(v34, 1, v35))
      {
        uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
        memcpy(v33, v34, *(void *)(*(void *)(v36 - 8) + 64));
      }
      else
      {
        v20(v33, v34, v18);
        uint64_t v81 = v35[5];
        uint64_t v82 = &v33[v81];
        uint64_t v83 = &v34[v81];
        uint64_t v84 = *((void *)v83 + 1);
        *(void *)uint64_t v82 = *(void *)v83;
        *((void *)v82 + 1) = v84;
        uint64_t v85 = v35[6];
        unsigned int v86 = &v33[v85];
        uint64_t v87 = &v34[v85];
        uint64_t v88 = *((void *)v87 + 1);
        *(void *)unsigned int v86 = *(void *)v87;
        *((void *)v86 + 1) = v88;
        uint64_t v89 = v35[7];
        uint64_t v90 = &v33[v89];
        uint64_t v91 = &v34[v89];
        uint64_t v92 = *((void *)v91 + 1);
        *(void *)uint64_t v90 = *(void *)v91;
        *((void *)v90 + 1) = v92;
        uint64_t v93 = v35[8];
        uint64_t v94 = &v33[v93];
        uint64_t v95 = &v34[v93];
        uint64_t v96 = *((void *)v95 + 1);
        *(void *)uint64_t v94 = *(void *)v95;
        *((void *)v94 + 1) = v96;
        v33[v35[9]] = v34[v35[9]];
        v33[v35[10]] = v34[v35[10]];
        v33[v35[11]] = v34[v35[11]];
        v33[v35[12]] = v34[v35[12]];
        uint64_t v97 = (void (*)(char *, void, uint64_t, int *))__dst[7];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v3 = (char *)a2;
        swift_bridgeObjectRetain();
        uint64_t v4 = (char *)a1;
        swift_bridgeObjectRetain();
        v97(v33, 0, 1, v35);
      }
      uint64_t v37 = v19;
      uint64_t v98 = v21[14];
      uint64_t v99 = &v4[v98];
      unint64_t v100 = &v3[v98];
      uint64_t v101 = sub_251F34D20();
      uint64_t v102 = *(void *)(v101 - 8);
      v586 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v102 + 48);
      uint64_t v588 = v101;
      uint64_t v582 = v102;
      if (v586(v100, 1, v101))
      {
        uint64_t v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
        memcpy(v99, v100, *(void *)(*(void *)(v103 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v99, v100, v101);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v102 + 56))(v99, 0, 1, v101);
      }
      *(void *)&v4[v21[15]] = *(void *)&v3[v21[15]];
      uint64_t v130 = v21[16];
      int64_t v131 = &v4[v130];
      uint64_t v132 = &v3[v130];
      uint64_t v133 = v132[1];
      *int64_t v131 = *v132;
      v131[1] = v133;
      v4[v21[17]] = v3[v21[17]];
      v4[v21[18]] = v3[v21[18]];
      v4[v21[19]] = v3[v21[19]];
      v4[v21[20]] = v3[v21[20]];
      uint64_t v134 = v21[21];
      char v135 = &v4[v134];
      v136 = &v3[v134];
      uint64_t v137 = v3;
      uint64_t v138 = v136[1];
      *char v135 = *v136;
      v135[1] = v138;
      v4[v21[22]] = *((unsigned char *)v137 + v21[22]);
      v4[v21[23]] = *((unsigned char *)v137 + v21[23]);
      v4[v21[24]] = *((unsigned char *)v137 + v21[24]);
      uint64_t v139 = v21[25];
      v140 = &v4[v139];
      uint64_t v141 = (char *)v137 + v139;
      uint64_t v142 = v37;
      v143 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      __dsta = v143;
      if (v143(v141, 1, v617))
      {
        uint64_t v144 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
        memcpy(v140, v141, *(void *)(*(void *)(v144 - 8) + 64));
        uint64_t v145 = v613;
      }
      else
      {
        uint64_t v145 = v613;
        v613(v140, v141, v617);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v142 + 56))(v140, 0, 1, v617);
      }
      uint64_t v158 = v21[26];
      v159 = &v4[v158];
      v160 = (char *)a2 + v158;
      if (__dsta((char *)a2 + v158, 1, v617))
      {
        uint64_t v161 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
        memcpy(v159, v160, *(void *)(*(void *)(v161 - 8) + 64));
      }
      else
      {
        v145(v159, v160, v617);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v593 + 56))(v159, 0, 1, v617);
      }
      *(void *)&v4[v21[27]] = *(void *)((char *)a2 + v21[27]);
      *(void *)&v4[v21[28]] = *(void *)((char *)a2 + v21[28]);
      uint64_t v174 = v21[29];
      v175 = &v4[v174];
      v176 = (void *)((char *)a2 + v174);
      uint64_t v177 = v176[1];
      char *v175 = *v176;
      v175[1] = v177;
      uint64_t v178 = v21[30];
      v179 = &v4[v178];
      v180 = (char *)a2 + v178;
      uint64_t v181 = type metadata accessor for StaticSoftwareUpdate(0);
      uint64_t v182 = *(void *)(v181 - 8);
      v183 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v182 + 48);
      uint64_t v184 = v181;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v183(v180, 1, v184))
      {
        uint64_t v185 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
        memcpy(v179, v180, *(void *)(*(void *)(v185 - 8) + 64));
        v186 = v613;
        uint64_t v4 = (char *)a1;
        uint64_t v187 = v617;
        char v3 = (char *)a2;
        uint64_t v6 = v611;
      }
      else
      {
        uint64_t v577 = v182;
        uint64_t v187 = v617;
        v186 = v613;
        v613(v179, v180, v617);
        uint64_t v579 = v184;
        v581 = v179;
        uint64_t v202 = *(int *)(v184 + 20);
        v203 = &v179[v202];
        v204 = &v180[v202];
        uint64_t v205 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        uint64_t v6 = v611;
        if (EnumCaseMultiPayload == 2)
        {
          uint64_t v224 = *((void *)v204 + 1);
          *(void *)v203 = *(void *)v204;
          *((void *)v203 + 1) = v224;
          uint64_t updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
          uint64_t v225 = updated[5];
          v226 = &v203[v225];
          v227 = &v204[v225];
          swift_bridgeObjectRetain();
          if (v586(v227, 1, v588))
          {
            uint64_t v228 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
            memcpy(v226, v227, *(void *)(*(void *)(v228 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v582 + 16))(v226, v227, v588);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v582 + 56))(v226, 0, 1, v588);
          }
          char v3 = (char *)a2;
          uint64_t v243 = updated[6];
          v244 = &v203[v243];
          v245 = &v204[v243];
          uint64_t v246 = *((void *)v245 + 1);
          *(void *)v244 = *(void *)v245;
          *((void *)v244 + 1) = v246;
          uint64_t v247 = updated[7];
          v248 = &v203[v247];
          v249 = &v204[v247];
          uint64_t v250 = *((void *)v249 + 1);
          *(void *)v248 = *(void *)v249;
          *((void *)v248 + 1) = v250;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v251 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
          v203[*(int *)(v251 + 48)] = v204[*(int *)(v251 + 48)];
          swift_storeEnumTagMultiPayload();
          uint64_t v4 = (char *)a1;
        }
        else if (EnumCaseMultiPayload == 1)
        {
          uint64_t v229 = *((void *)v204 + 1);
          *(void *)v203 = *(void *)v204;
          *((void *)v203 + 1) = v229;
          v230 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
          uint64_t v231 = v230[5];
          v574 = &v203[v231];
          v232 = &v204[v231];
          swift_bridgeObjectRetain();
          char v3 = (char *)a2;
          if (v586(v232, 1, v588))
          {
            uint64_t v233 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
            memcpy(v574, v232, *(void *)(*(void *)(v233 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v582 + 16))(v574, v232, v588);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v582 + 56))(v574, 0, 1, v588);
          }
          uint64_t v252 = v230[6];
          v253 = &v203[v252];
          v254 = &v204[v252];
          uint64_t v255 = *((void *)v254 + 1);
          *(void *)v253 = *(void *)v254;
          *((void *)v253 + 1) = v255;
          uint64_t v256 = v230[7];
          v257 = &v203[v256];
          v258 = &v204[v256];
          uint64_t v259 = *((void *)v258 + 1);
          *(void *)v257 = *(void *)v258;
          *((void *)v257 + 1) = v259;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v260 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
          v203[*(int *)(v260 + 48)] = v204[*(int *)(v260 + 48)];
          swift_storeEnumTagMultiPayload();
          uint64_t v4 = (char *)a1;
          uint64_t v187 = v617;
        }
        else
        {
          char v3 = (char *)a2;
          if (EnumCaseMultiPayload)
          {
            memcpy(v203, v204, *(void *)(*(void *)(v205 - 8) + 64));
          }
          else
          {
            v613(v203, v204, v617);
            v207 = (int *)type metadata accessor for StaticHH2Update(0);
            v203[v207[5]] = v204[v207[5]];
            uint64_t v208 = v207[6];
            v209 = &v203[v208];
            v210 = &v204[v208];
            uint64_t v212 = *(void *)v210;
            uint64_t v211 = *((void *)v210 + 1);
            *(void *)v209 = v212;
            *((void *)v209 + 1) = v211;
            uint64_t v213 = v207[7];
            v214 = &v203[v213];
            v215 = &v204[v213];
            v214[8] = v215[8];
            *(void *)v214 = *(void *)v215;
            swift_bridgeObjectRetain();
            swift_storeEnumTagMultiPayload();
          }
          uint64_t v4 = (char *)a1;
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v577 + 56))(v581, 0, 1, v579);
      }
      v4[v21[31]] = v3[v21[31]];
      *(void *)&v4[v21[32]] = *(void *)&v3[v21[32]];
      uint64_t v261 = v21[33];
      v262 = &v4[v261];
      v263 = &v3[v261];
      swift_bridgeObjectRetain();
      if (__dsta(v263, 1, v187))
      {
        uint64_t v264 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
        memcpy(v262, v263, *(void *)(*(void *)(v264 - 8) + 64));
      }
      else
      {
        v186(v262, v263, v187);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v593 + 56))(v262, 0, 1, v187);
      }
      uint64_t v265 = v21[34];
      v266 = &v4[v265];
      v267 = &v3[v265];
      *(_WORD *)v266 = *(_WORD *)v267;
      v266[2] = v267[2];
      uint64_t v268 = v21[35];
      v269 = &v4[v268];
      v270 = &v3[v268];
      *(_DWORD *)(v269 + 7) = *(_DWORD *)(v270 + 7);
      *(void *)v269 = *(void *)v270;
      goto LABEL_70;
    case 2u:
      uint64_t v38 = sub_251F34DA0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16))(v4, v3, v38);
      uint64_t v39 = (int *)type metadata accessor for StaticServiceGroup();
      uint64_t v40 = v39[5];
      uint64_t v41 = &v4[v40];
      uint64_t v42 = (uint64_t *)&v3[v40];
      uint64_t v44 = *v42;
      uint64_t v43 = v42[1];
      *uint64_t v41 = v44;
      v41[1] = v43;
      v4[v39[6]] = v3[v39[6]];
      v4[v39[7]] = v3[v39[7]];
      *(void *)&v4[v39[8]] = *(void *)&v3[v39[8]];
      uint64_t v45 = v39[9];
      uint64_t v46 = &v4[v45];
      uint64_t v47 = &v3[v45];
      uint64_t v48 = v47[1];
      char *v46 = *v47;
      v46[1] = v48;
      v4[v39[10]] = v3[v39[10]];
      *(void *)&v4[v39[11]] = *(void *)&v3[v39[11]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_70;
    case 3u:
      uint64_t v49 = sub_251F34DA0();
      v618 = *(void (**)(void *, void *, uint64_t))(*(void *)(v49 - 8) + 16);
      v618(v4, v3, v49);
      uint64_t v50 = (int *)type metadata accessor for StaticEndpoint();
      uint64_t v51 = v50[5];
      uint64_t v52 = &v4[v51];
      uint64_t v53 = &v3[v51];
      *(void *)uint64_t v52 = *(void *)v53;
      *((_WORD *)v52 + 4) = *((_WORD *)v53 + 4);
      uint64_t v54 = v50[6];
      int v55 = &v4[v54];
      uint64_t v56 = &v3[v54];
      uint64_t v57 = v56[1];
      *int v55 = *v56;
      v55[1] = v57;
      *(void *)&v4[v50[7]] = *(void *)&v3[v50[7]];
      *(void *)&v4[v50[8]] = *(void *)&v3[v50[8]];
      *(void *)&v4[v50[9]] = *(void *)&v3[v50[9]];
      *(void *)&v4[v50[10]] = *(void *)&v3[v50[10]];
      uint64_t v58 = v50[11];
      uint64_t v59 = &v4[v58];
      uint64_t v60 = &v3[v58];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v618(v59, v60, v49);
      *(void *)&v4[v50[12]] = *(void *)&v3[v50[12]];
      uint64_t v61 = v50[13];
      BOOL v62 = &v4[v61];
      uint64_t v63 = &v3[v61];
      uint64_t v64 = *(void *)&v3[v61 + 8];
      *(void *)BOOL v62 = *(void *)&v3[v61];
      *((void *)v62 + 1) = v64;
      uint64_t v65 = *(void *)&v3[v61 + 16];
      uint64_t v66 = *((void *)v63 + 3);
      *((void *)v62 + 2) = v65;
      *((void *)v62 + 3) = v66;
      uint64_t v67 = *((void *)v63 + 5);
      *((void *)v62 + 4) = *((void *)v63 + 4);
      *((void *)v62 + 5) = v67;
      *((_DWORD *)v62 + 12) = *((_DWORD *)v63 + 12);
      uint64_t v68 = *(int *)(type metadata accessor for MatterTileMetadata() + 44);
      v619 = &v62[v68];
      uint64_t v69 = &v63[v68];
      uint64_t v70 = sub_251F34D20();
      uint64_t v71 = *(void *)(v70 - 8);
      uint64_t v72 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v72(v69, 1, v70))
      {
        uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
        memcpy(v619, v69, *(void *)(*(void *)(v73 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v71 + 16))(v619, v69, v70);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v71 + 56))(v619, 0, 1, v70);
      }
      uint64_t v6 = v611;
      uint64_t v104 = v50[14];
      uint64_t v4 = (char *)a1;
      uint64_t v105 = (char *)a1 + v104;
      char v3 = (char *)a2;
      uint64_t v106 = (char *)a2 + v104;
      *(_WORD *)uint64_t v105 = *(_WORD *)v106;
      v105[2] = v106[2];
      *((unsigned char *)a1 + v50[15]) = *((unsigned char *)a2 + v50[15]);
LABEL_70:
      swift_storeEnumTagMultiPayload();
      goto LABEL_71;
    default:
      uint64_t v7 = sub_251F34DA0();
      uint64_t v612 = *(void *)(v7 - 8);
      uint64_t v8 = *(void (**)(char *, char *, uint64_t))(v612 + 16);
      v8(v4, v3, v7);
      uint64_t v9 = (int *)type metadata accessor for StaticAccessory(0);
      uint64_t v10 = v9[5];
      uint64_t v11 = &v4[v10];
      uint64_t v12 = &v3[v10];
      uint64_t v13 = v12[1];
      char *v11 = *v12;
      v11[1] = v13;
      uint64_t v14 = v9[6];
      uint64_t v15 = &v4[v14];
      uint64_t v16 = &v3[v14];
      type metadata accessor for StaticAccessory.DeviceIdentifier(0);
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v8(v15, v16, v7);
      }
      else
      {
        uint64_t v74 = *((void *)v16 + 1);
        *(void *)uint64_t v15 = *(void *)v16;
        *((void *)v15 + 1) = v74;
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v75 = v9[7];
      uint64_t v76 = &v4[v75];
      uint64_t v77 = &v3[v75];
      uint64_t v78 = (int *)type metadata accessor for StaticDeviceMetadata();
      uint64_t v79 = *((void *)v78 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v79 + 48))(v77, 1, v78))
      {
        uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
        memcpy(v76, v77, *(void *)(*(void *)(v80 - 8) + 64));
      }
      else
      {
        v8(v76, v77, v7);
        uint64_t v107 = v78[5];
        uint64_t v108 = &v76[v107];
        uint64_t v109 = &v77[v107];
        uint64_t v110 = *((void *)v109 + 1);
        *(void *)uint64_t v108 = *(void *)v109;
        *((void *)v108 + 1) = v110;
        uint64_t v111 = v78[6];
        uint64_t v112 = &v76[v111];
        uint64_t v113 = &v77[v111];
        uint64_t v114 = *((void *)v113 + 1);
        *(void *)uint64_t v112 = *(void *)v113;
        *((void *)v112 + 1) = v114;
        uint64_t v115 = v78[7];
        uint64_t v116 = &v76[v115];
        uint64_t v117 = &v77[v115];
        uint64_t v118 = *((void *)v117 + 1);
        *(void *)uint64_t v116 = *(void *)v117;
        *((void *)v116 + 1) = v118;
        uint64_t v119 = v78[8];
        uint64_t v120 = &v76[v119];
        uint64_t v121 = &v77[v119];
        uint64_t v122 = *((void *)v121 + 1);
        *(void *)uint64_t v120 = *(void *)v121;
        *((void *)v120 + 1) = v122;
        v76[v78[9]] = v77[v78[9]];
        v76[v78[10]] = v77[v78[10]];
        v76[v78[11]] = v77[v78[11]];
        v76[v78[12]] = v77[v78[12]];
        int64_t v123 = *(void (**)(char *, void, uint64_t, int *))(v79 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v3 = (char *)a2;
        swift_bridgeObjectRetain();
        uint64_t v4 = (char *)a1;
        swift_bridgeObjectRetain();
        v123(v76, 0, 1, v78);
      }
      uint64_t v124 = v9[8];
      uint64_t v125 = &v4[v124];
      long long v126 = &v3[v124];
      uint64_t v127 = sub_251F34D20();
      uint64_t v128 = *(void *)(v127 - 8);
      v594 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v128 + 48);
      uint64_t v589 = v128;
      if (v594(v126, 1, v127))
      {
        uint64_t v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
        memcpy(v125, v126, *(void *)(*(void *)(v129 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v128 + 16))(v125, v126, v127);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v128 + 56))(v125, 0, 1, v127);
      }
      uint64_t v146 = v9[9];
      int64_t v147 = &v4[v146];
      uint64_t v148 = &v3[v146];
      *(void *)int64_t v147 = *(void *)v148;
      v147[8] = v148[8];
      v4[v9[10]] = v3[v9[10]];
      v8(&v4[v9[11]], &v3[v9[11]], v7);
      *(void *)&v4[v9[12]] = *(void *)&v3[v9[12]];
      uint64_t v149 = v9[13];
      unint64_t v150 = &v4[v149];
      v151 = &v3[v149];
      uint64_t v152 = v151[1];
      *unint64_t v150 = *v151;
      v150[1] = v152;
      v4[v9[14]] = v3[v9[14]];
      v4[v9[15]] = v3[v9[15]];
      v4[v9[16]] = v3[v9[16]];
      v4[v9[17]] = v3[v9[17]];
      v4[v9[18]] = v3[v9[18]];
      *(void *)&v4[v9[19]] = *(void *)&v3[v9[19]];
      *(void *)&v4[v9[20]] = *(void *)&v3[v9[20]];
      uint64_t v153 = v9[21];
      __dstb = &v4[v153];
      v154 = &v3[v153];
      v155 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v612 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v156 = v8;
      if (v155(v154, 1, v7))
      {
        uint64_t v157 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
        memcpy(__dstb, v154, *(void *)(*(void *)(v157 - 8) + 64));
      }
      else
      {
        v8(__dstb, v154, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v612 + 56))(__dstb, 0, 1, v7);
      }
      *(_WORD *)((char *)a1 + v9[22]) = *(_WORD *)((char *)a2 + v9[22]);
      uint64_t v162 = v9[23];
      v163 = (void *)((char *)a1 + v162);
      v164 = (void *)((char *)a2 + v162);
      uint64_t v165 = v164[1];
      void *v163 = *v164;
      v163[1] = v165;
      *(void *)((char *)a1 + v9[24]) = *(void *)((char *)a2 + v9[24]);
      *((unsigned char *)a1 + v9[25]) = *((unsigned char *)a2 + v9[25]);
      *((unsigned char *)a1 + v9[26]) = *((unsigned char *)a2 + v9[26]);
      *((unsigned char *)a1 + v9[27]) = *((unsigned char *)a2 + v9[27]);
      uint64_t v166 = v9[28];
      v167 = (char *)a1 + v166;
      v168 = (char *)a2 + v166;
      uint64_t v169 = type metadata accessor for StaticSoftwareUpdate(0);
      uint64_t v170 = *(void *)(v169 - 8);
      v171 = *(unsigned int (**)(char *, uint64_t, int *))(v170 + 48);
      v172 = (int *)v169;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v171(v168, 1, v172))
      {
        uint64_t v173 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
        memcpy(v167, v168, *(void *)(*(void *)(v173 - 8) + 64));
        uint64_t v4 = (char *)a1;
        char v3 = (char *)a2;
        goto LABEL_60;
      }
      v156(v167, v168, v7);
      __dstc = v172;
      uint64_t v188 = v172[5];
      v189 = &v167[v188];
      v190 = &v168[v188];
      uint64_t v191 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
      int v192 = swift_getEnumCaseMultiPayload();
      v614 = v167;
      if (v192 == 2)
      {
        uint64_t v216 = *((void *)v190 + 1);
        *(void *)v189 = *(void *)v190;
        *((void *)v189 + 1) = v216;
        v217 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        uint64_t v218 = v217[5];
        v219 = &v189[v218];
        v220 = &v190[v218];
        swift_bridgeObjectRetain();
        if (v594(v220, 1, v127)) {
          goto LABEL_48;
        }
        goto LABEL_56;
      }
      if (v192 == 1)
      {
        uint64_t v221 = *((void *)v190 + 1);
        *(void *)v189 = *(void *)v190;
        *((void *)v189 + 1) = v221;
        v217 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        uint64_t v222 = v217[5];
        v219 = &v189[v222];
        v220 = &v190[v222];
        swift_bridgeObjectRetain();
        if (v594(v220, 1, v127))
        {
LABEL_48:
          uint64_t v223 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
          memcpy(v219, v220, *(void *)(*(void *)(v223 - 8) + 64));
LABEL_57:
          uint64_t v234 = v217[6];
          v235 = &v189[v234];
          v236 = &v190[v234];
          uint64_t v237 = *((void *)v236 + 1);
          *(void *)v235 = *(void *)v236;
          *((void *)v235 + 1) = v237;
          uint64_t v238 = v217[7];
          v239 = &v189[v238];
          v240 = &v190[v238];
          uint64_t v241 = *((void *)v240 + 1);
          *(void *)v239 = *(void *)v240;
          *((void *)v239 + 1) = v241;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v242 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
          v189[*(int *)(v242 + 48)] = v190[*(int *)(v242 + 48)];
          goto LABEL_58;
        }
LABEL_56:
        (*(void (**)(char *, char *, uint64_t))(v589 + 16))(v219, v220, v127);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v589 + 56))(v219, 0, 1, v127);
        goto LABEL_57;
      }
      if (v192)
      {
        memcpy(v189, v190, *(void *)(*(void *)(v191 - 8) + 64));
        goto LABEL_59;
      }
      v156(v189, v190, v7);
      v193 = (int *)type metadata accessor for StaticHH2Update(0);
      v189[v193[5]] = v190[v193[5]];
      uint64_t v194 = v193[6];
      v195 = &v189[v194];
      v196 = &v190[v194];
      uint64_t v198 = *(void *)v196;
      uint64_t v197 = *((void *)v196 + 1);
      *(void *)v195 = v198;
      *((void *)v195 + 1) = v197;
      uint64_t v199 = v193[7];
      v200 = &v189[v199];
      v201 = &v190[v199];
      v200[8] = v201[8];
      *(void *)v200 = *(void *)v201;
      swift_bridgeObjectRetain();
LABEL_58:
      swift_storeEnumTagMultiPayload();
LABEL_59:
      uint64_t v4 = (char *)a1;
      char v3 = (char *)a2;
      (*(void (**)(char *, void, uint64_t, int *))(v170 + 56))(v614, 0, 1, __dstc);
LABEL_60:
      v4[v9[29]] = v3[v9[29]];
      v4[v9[30]] = v3[v9[30]];
      *(void *)&v4[v9[31]] = *(void *)&v3[v9[31]];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
      uint64_t v6 = v611;
LABEL_71:
      uint64_t v271 = *(int *)(v6 + 20);
      v272 = &v4[v271];
      v273 = &v3[v271];
      v615 = &v4[v271];
      v620 = &v3[v271];
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v284 = sub_251F34DA0();
          uint64_t v596 = *(void *)(v284 - 8);
          v285 = *(void (**)(char *, char *, uint64_t))(v596 + 16);
          v285(v272, v273, v284);
          v286 = (int *)type metadata accessor for StaticService();
          uint64_t v287 = v286[5];
          v288 = &v272[v287];
          v289 = &v273[v287];
          uint64_t v290 = *((void *)v289 + 1);
          *(void *)v288 = *(void *)v289;
          *((void *)v288 + 1) = v290;
          v272[v286[6]] = v273[v286[6]];
          v272[v286[7]] = v273[v286[7]];
          v272[v286[8]] = v273[v286[8]];
          v272[v286[9]] = v273[v286[9]];
          v272[v286[10]] = v273[v286[10]];
          uint64_t v291 = v286[11];
          v292 = &v272[v291];
          v293 = &v273[v291];
          swift_bridgeObjectRetain();
          v285(v292, v293, v284);
          uint64_t v294 = v286[12];
          v295 = &v272[v294];
          v296 = &v273[v294];
          *(void *)v295 = *(void *)v296;
          v295[8] = v296[8];
          uint64_t v297 = v286[13];
          v298 = &v272[v297];
          v299 = &v273[v297];
          v300 = (int *)type metadata accessor for StaticDeviceMetadata();
          uint64_t v301 = *((void *)v300 - 1);
          uint64_t v592 = v284;
          __dstd = v285;
          if ((*(unsigned int (**)(char *, uint64_t, int *))(v301 + 48))(v299, 1, v300))
          {
            uint64_t v302 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
            memcpy(v298, v299, *(void *)(*(void *)(v302 - 8) + 64));
          }
          else
          {
            v285(v298, v299, v284);
            uint64_t v346 = v300[5];
            v347 = &v298[v346];
            v348 = &v299[v346];
            uint64_t v349 = *((void *)v348 + 1);
            *(void *)v347 = *(void *)v348;
            *((void *)v347 + 1) = v349;
            uint64_t v350 = v300[6];
            v351 = &v298[v350];
            v352 = &v299[v350];
            uint64_t v590 = *((void *)v352 + 1);
            *(void *)v351 = *(void *)v352;
            *((void *)v351 + 1) = v590;
            uint64_t v353 = v300[7];
            v354 = &v298[v353];
            v355 = &v299[v353];
            uint64_t v356 = *((void *)v355 + 1);
            *(void *)v354 = *(void *)v355;
            *((void *)v354 + 1) = v356;
            uint64_t v357 = v300[8];
            v358 = &v298[v357];
            v359 = &v299[v357];
            uint64_t v360 = *((void *)v359 + 1);
            *(void *)v358 = *(void *)v359;
            *((void *)v358 + 1) = v360;
            v298[v300[9]] = v299[v300[9]];
            v298[v300[10]] = v299[v300[10]];
            v298[v300[11]] = v299[v300[11]];
            v298[v300[12]] = v299[v300[12]];
            v361 = *(void (**)(char *, void, uint64_t, int *))(v301 + 56);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v361(v298, 0, 1, v300);
          }
          uint64_t v362 = v286[14];
          v363 = &v272[v362];
          v364 = &v273[v362];
          uint64_t v365 = sub_251F34D20();
          uint64_t v366 = *(void *)(v365 - 8);
          v583 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v366 + 48);
          uint64_t v585 = v365;
          uint64_t v580 = v366;
          if (v583(v364, 1, v365))
          {
            uint64_t v367 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
            memcpy(v363, v364, *(void *)(*(void *)(v367 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v366 + 16))(v363, v364, v365);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v366 + 56))(v363, 0, 1, v365);
          }
          *(void *)&v272[v286[15]] = *(void *)&v273[v286[15]];
          uint64_t v394 = v286[16];
          v395 = &v272[v394];
          v396 = &v273[v394];
          uint64_t v397 = *((void *)v396 + 1);
          *(void *)v395 = *(void *)v396;
          *((void *)v395 + 1) = v397;
          v272[v286[17]] = v273[v286[17]];
          v272[v286[18]] = v273[v286[18]];
          v272[v286[19]] = v273[v286[19]];
          v272[v286[20]] = v273[v286[20]];
          uint64_t v398 = v286[21];
          v399 = &v272[v398];
          v400 = &v273[v398];
          uint64_t v401 = *((void *)v400 + 1);
          *(void *)v399 = *(void *)v400;
          *((void *)v399 + 1) = v401;
          v272[v286[22]] = v273[v286[22]];
          v272[v286[23]] = v273[v286[23]];
          v272[v286[24]] = v273[v286[24]];
          uint64_t v402 = v286[25];
          v403 = &v272[v402];
          v404 = &v273[v402];
          v405 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v596 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v405(v404, 1, v284))
          {
            uint64_t v406 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
            memcpy(v403, v404, *(void *)(*(void *)(v406 - 8) + 64));
          }
          else
          {
            __dstd(v403, v404, v284);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v596 + 56))(v403, 0, 1, v284);
          }
          uint64_t v419 = v286[26];
          v420 = &v272[v419];
          v421 = &v620[v419];
          v591 = v405;
          if (v405(&v620[v419], 1, v284))
          {
            uint64_t v422 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
            memcpy(v420, v421, *(void *)(*(void *)(v422 - 8) + 64));
          }
          else
          {
            __dstd(v420, v421, v284);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v596 + 56))(v420, 0, 1, v284);
          }
          *(void *)&v272[v286[27]] = *(void *)&v620[v286[27]];
          *(void *)&v272[v286[28]] = *(void *)&v620[v286[28]];
          uint64_t v434 = v286[29];
          v435 = &v272[v434];
          v436 = &v620[v434];
          uint64_t v437 = *((void *)v436 + 1);
          *(void *)v435 = *(void *)v436;
          *((void *)v435 + 1) = v437;
          uint64_t v438 = v286[30];
          v439 = &v272[v438];
          v440 = &v620[v438];
          uint64_t v441 = type metadata accessor for StaticSoftwareUpdate(0);
          uint64_t v442 = *(void *)(v441 - 8);
          v443 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v442 + 48);
          uint64_t v444 = v441;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v443(v440, 1, v444))
          {
            uint64_t v445 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
            memcpy(v439, v440, *(void *)(*(void *)(v445 - 8) + 64));
            uint64_t v4 = (char *)a1;
            char v3 = (char *)a2;
            uint64_t v446 = v284;
            v447 = __dstd;
LABEL_133:
            v272 = v615;
            v615[v286[31]] = v620[v286[31]];
            *(void *)&v615[v286[32]] = *(void *)&v620[v286[32]];
            uint64_t v511 = v286[33];
            v512 = &v615[v511];
            v513 = &v620[v511];
            swift_bridgeObjectRetain();
            if (v591(v513, 1, v446))
            {
              uint64_t v514 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
              memcpy(v512, v513, *(void *)(*(void *)(v514 - 8) + 64));
            }
            else
            {
              v447(v512, v513, v446);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v596 + 56))(v512, 0, 1, v446);
            }
            uint64_t v515 = v286[34];
            v516 = &v615[v515];
            v273 = v620;
            v517 = &v620[v515];
            *(_WORD *)v516 = *(_WORD *)v517;
            v516[2] = v517[2];
            uint64_t v518 = v286[35];
            v519 = &v615[v518];
            v520 = &v620[v518];
            *(_DWORD *)(v519 + 7) = *(_DWORD *)(v520 + 7);
            *(void *)v519 = *(void *)v520;
            goto LABEL_137;
          }
          uint64_t v576 = v442;
          uint64_t v446 = v284;
          v447 = __dstd;
          __dstd(v439, v440, v592);
          uint64_t v578 = v444;
          uint64_t v462 = *(int *)(v444 + 20);
          v463 = &v439[v462];
          v464 = &v440[v462];
          v575 = (void *)type metadata accessor for StaticSoftwareUpdate.Kind(0);
          int v465 = swift_getEnumCaseMultiPayload();
          char v3 = (char *)a2;
          v466 = v439;
          if (v465 == 2)
          {
            uint64_t v484 = *((void *)v464 + 1);
            *(void *)v463 = *(void *)v464;
            *((void *)v463 + 1) = v484;
            v485 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
            uint64_t v486 = v485[5];
            v571 = &v463[v486];
            v487 = &v464[v486];
            swift_bridgeObjectRetain();
            if (v583(v487, 1, v585))
            {
              uint64_t v488 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
              memcpy(v571, v487, *(void *)(*(void *)(v488 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v580 + 16))(v571, v487, v585);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v580 + 56))(v571, 0, 1, v585);
            }
          }
          else
          {
            if (v465 != 1)
            {
              if (v465)
              {
                memcpy(v463, v464, *(void *)(*(v575 - 1) + 64));
LABEL_132:
                uint64_t v4 = (char *)a1;
                (*(void (**)(char *, void, uint64_t, uint64_t))(v576 + 56))(v466, 0, 1, v578);
                goto LABEL_133;
              }
              __dstd(v463, v464, v592);
              v467 = (int *)type metadata accessor for StaticHH2Update(0);
              v463[v467[5]] = v464[v467[5]];
              uint64_t v468 = v467[6];
              v469 = &v463[v468];
              v470 = &v464[v468];
              uint64_t v472 = *(void *)v470;
              uint64_t v471 = *((void *)v470 + 1);
              *(void *)v469 = v472;
              *((void *)v469 + 1) = v471;
              uint64_t v473 = v467[7];
              v474 = &v463[v473];
              v475 = &v464[v473];
              v474[8] = v475[8];
              *(void *)v474 = *(void *)v475;
              swift_bridgeObjectRetain();
LABEL_131:
              swift_storeEnumTagMultiPayload();
              goto LABEL_132;
            }
            uint64_t v489 = *((void *)v464 + 1);
            *(void *)v463 = *(void *)v464;
            *((void *)v463 + 1) = v489;
            v485 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
            uint64_t v490 = v485[5];
            v572 = &v463[v490];
            v491 = &v464[v490];
            swift_bridgeObjectRetain();
            if (v583(v491, 1, v585))
            {
              uint64_t v492 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
              memcpy(v572, v491, *(void *)(*(void *)(v492 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v580 + 16))(v572, v491, v585);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v580 + 56))(v572, 0, 1, v585);
            }
          }
          uint64_t v502 = v485[6];
          v503 = &v463[v502];
          v504 = &v464[v502];
          uint64_t v505 = *((void *)v504 + 1);
          *(void *)v503 = *(void *)v504;
          *((void *)v503 + 1) = v505;
          uint64_t v506 = v485[7];
          v507 = &v463[v506];
          v508 = &v464[v506];
          uint64_t v509 = *((void *)v508 + 1);
          *(void *)v507 = *(void *)v508;
          *((void *)v507 + 1) = v509;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v510 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
          v463[*(int *)(v510 + 48)] = v464[*(int *)(v510 + 48)];
          goto LABEL_131;
        case 2u:
          uint64_t v303 = sub_251F34DA0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v303 - 8) + 16))(v272, v273, v303);
          v304 = (int *)type metadata accessor for StaticServiceGroup();
          uint64_t v305 = v304[5];
          v306 = &v272[v305];
          v307 = &v273[v305];
          uint64_t v309 = *(void *)v307;
          uint64_t v308 = *((void *)v307 + 1);
          *(void *)v306 = v309;
          *((void *)v306 + 1) = v308;
          v272[v304[6]] = v273[v304[6]];
          v272[v304[7]] = v273[v304[7]];
          *(void *)&v272[v304[8]] = *(void *)&v273[v304[8]];
          uint64_t v310 = v304[9];
          v311 = &v272[v310];
          v312 = &v273[v310];
          uint64_t v313 = *((void *)v312 + 1);
          *(void *)v311 = *(void *)v312;
          *((void *)v311 + 1) = v313;
          v272[v304[10]] = v273[v304[10]];
          *(void *)&v272[v304[11]] = *(void *)&v273[v304[11]];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_137;
        case 3u:
          uint64_t v314 = sub_251F34DA0();
          __dsth = *(void (**)(char *, char *, uint64_t))(*(void *)(v314 - 8) + 16);
          __dsth(v272, v273, v314);
          v315 = (int *)type metadata accessor for StaticEndpoint();
          uint64_t v316 = v315[5];
          v317 = &v272[v316];
          v318 = &v273[v316];
          *(void *)v317 = *(void *)v318;
          *((_WORD *)v317 + 4) = *((_WORD *)v318 + 4);
          uint64_t v319 = v315[6];
          v320 = &v272[v319];
          v321 = &v273[v319];
          uint64_t v322 = *((void *)v321 + 1);
          *(void *)v320 = *(void *)v321;
          *((void *)v320 + 1) = v322;
          *(void *)&v272[v315[7]] = *(void *)&v273[v315[7]];
          *(void *)&v272[v315[8]] = *(void *)&v273[v315[8]];
          *(void *)&v272[v315[9]] = *(void *)&v273[v315[9]];
          *(void *)&v272[v315[10]] = *(void *)&v273[v315[10]];
          uint64_t v323 = v315[11];
          v324 = &v272[v323];
          v325 = &v273[v323];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          __dsth(v324, v325, v314);
          *(void *)&v272[v315[12]] = *(void *)&v273[v315[12]];
          uint64_t v326 = v315[13];
          v327 = &v272[v326];
          v328 = &v273[v326];
          uint64_t v329 = *(void *)&v273[v326 + 8];
          *(void *)v327 = *(void *)&v273[v326];
          *((void *)v327 + 1) = v329;
          uint64_t v330 = *(void *)&v273[v326 + 24];
          *((void *)v327 + 2) = *(void *)&v273[v326 + 16];
          *((void *)v327 + 3) = v330;
          uint64_t v331 = *(void *)&v273[v326 + 40];
          *((void *)v327 + 4) = *(void *)&v273[v326 + 32];
          *((void *)v327 + 5) = v331;
          *((_DWORD *)v327 + 12) = *(_DWORD *)&v273[v326 + 48];
          uint64_t v332 = *(int *)(type metadata accessor for MatterTileMetadata() + 44);
          __dste = &v327[v332];
          v333 = &v328[v332];
          uint64_t v334 = sub_251F34D20();
          uint64_t v335 = *(void *)(v334 - 8);
          v336 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v335 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v336(v333, 1, v334))
          {
            uint64_t v337 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
            memcpy(__dste, v333, *(void *)(*(void *)(v337 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v335 + 16))(__dste, v333, v334);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v335 + 56))(__dste, 0, 1, v334);
          }
          uint64_t v368 = v315[14];
          v272 = v615;
          v369 = &v615[v368];
          v273 = v620;
          v370 = &v620[v368];
          *(_WORD *)v369 = *(_WORD *)v370;
          v369[2] = v370[2];
          v615[v315[15]] = v620[v315[15]];
          swift_storeEnumTagMultiPayload();
          uint64_t v4 = (char *)a1;
          char v3 = (char *)a2;
          goto LABEL_138;
        default:
          uint64_t v274 = sub_251F34DA0();
          uint64_t v595 = *(void *)(v274 - 8);
          v275 = *(void (**)(char *, char *, uint64_t))(v595 + 16);
          v275(v272, v273, v274);
          v276 = (int *)type metadata accessor for StaticAccessory(0);
          uint64_t v277 = v276[5];
          v278 = &v272[v277];
          v279 = &v273[v277];
          uint64_t v280 = *((void *)v279 + 1);
          *(void *)v278 = *(void *)v279;
          *((void *)v278 + 1) = v280;
          uint64_t v281 = v276[6];
          v282 = &v272[v281];
          v283 = &v273[v281];
          type metadata accessor for StaticAccessory.DeviceIdentifier(0);
          swift_bridgeObjectRetain();
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            v275(v282, v283, v274);
          }
          else
          {
            uint64_t v338 = *((void *)v283 + 1);
            *(void *)v282 = *(void *)v283;
            *((void *)v282 + 1) = v338;
            swift_bridgeObjectRetain();
          }
          v339 = v275;
          swift_storeEnumTagMultiPayload();
          uint64_t v340 = v276[7];
          v341 = &v272[v340];
          v342 = &v273[v340];
          v343 = (int *)type metadata accessor for StaticDeviceMetadata();
          uint64_t v344 = *((void *)v343 - 1);
          v598 = (void (*)(char *, char *, void *))v275;
          __dstf = (void *)v274;
          if ((*(unsigned int (**)(char *, uint64_t, int *))(v344 + 48))(v342, 1, v343))
          {
            uint64_t v345 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
            memcpy(v341, v342, *(void *)(*(void *)(v345 - 8) + 64));
          }
          else
          {
            v275(v341, v342, v274);
            uint64_t v371 = v343[5];
            v372 = &v341[v371];
            v373 = &v342[v371];
            uint64_t v374 = *((void *)v373 + 1);
            *(void *)v372 = *(void *)v373;
            *((void *)v372 + 1) = v374;
            uint64_t v375 = v343[6];
            v376 = &v341[v375];
            v377 = &v342[v375];
            uint64_t v378 = *((void *)v377 + 1);
            *(void *)v376 = *(void *)v377;
            *((void *)v376 + 1) = v378;
            uint64_t v379 = v343[7];
            v380 = &v341[v379];
            v381 = &v342[v379];
            uint64_t v382 = *((void *)v381 + 1);
            *(void *)v380 = *(void *)v381;
            *((void *)v380 + 1) = v382;
            uint64_t v383 = v343[8];
            v384 = &v341[v383];
            v385 = &v342[v383];
            uint64_t v386 = *((void *)v385 + 1);
            *(void *)v384 = *(void *)v385;
            *((void *)v384 + 1) = v386;
            v341[v343[9]] = v342[v343[9]];
            v341[v343[10]] = v342[v343[10]];
            v341[v343[11]] = v342[v343[11]];
            v341[v343[12]] = v342[v343[12]];
            v387 = *(void (**)(char *, void, uint64_t, int *))(v344 + 56);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v274 = (uint64_t)__dstf;
            swift_bridgeObjectRetain();
            v339 = v275;
            swift_bridgeObjectRetain();
            v387(v341, 0, 1, v343);
          }
          uint64_t v388 = v276[8];
          v389 = &v272[v388];
          v390 = &v620[v388];
          uint64_t v391 = sub_251F34D20();
          uint64_t v392 = *(void *)(v391 - 8);
          v587 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v392 + 48);
          uint64_t v584 = v392;
          if (v587(v390, 1, v391))
          {
            uint64_t v393 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
            memcpy(v389, v390, *(void *)(*(void *)(v393 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v392 + 16))(v389, v390, v391);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v392 + 56))(v389, 0, 1, v391);
          }
          uint64_t v407 = v276[9];
          v408 = &v272[v407];
          v409 = &v620[v407];
          *(void *)v408 = *(void *)v409;
          v408[8] = v409[8];
          v272[v276[10]] = v620[v276[10]];
          v339(&v272[v276[11]], &v620[v276[11]], v274);
          *(void *)&v272[v276[12]] = *(void *)&v620[v276[12]];
          uint64_t v410 = v276[13];
          v411 = &v272[v410];
          v412 = &v620[v410];
          uint64_t v413 = *((void *)v412 + 1);
          *(void *)v411 = *(void *)v412;
          *((void *)v411 + 1) = v413;
          v272[v276[14]] = v620[v276[14]];
          v272[v276[15]] = v620[v276[15]];
          v272[v276[16]] = v620[v276[16]];
          v272[v276[17]] = v620[v276[17]];
          v272[v276[18]] = v620[v276[18]];
          *(void *)&v272[v276[19]] = *(void *)&v620[v276[19]];
          *(void *)&v272[v276[20]] = *(void *)&v620[v276[20]];
          uint64_t v414 = v276[21];
          v415 = &v272[v414];
          v416 = &v620[v414];
          v417 = *(unsigned int (**)(char *, uint64_t, void *))(v595 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v417(v416, 1, __dstf))
          {
            uint64_t v418 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
            memcpy(v415, v416, *(void *)(*(void *)(v418 - 8) + 64));
          }
          else
          {
            v275(v415, v416, (uint64_t)__dstf);
            (*(void (**)(char *, void, uint64_t, void *))(v595 + 56))(v415, 0, 1, __dstf);
          }
          *(_WORD *)&v615[v276[22]] = *(_WORD *)&v620[v276[22]];
          uint64_t v423 = v276[23];
          v424 = &v615[v423];
          v425 = &v620[v423];
          uint64_t v426 = *((void *)v425 + 1);
          *(void *)v424 = *(void *)v425;
          *((void *)v424 + 1) = v426;
          *(void *)&v615[v276[24]] = *(void *)&v620[v276[24]];
          v615[v276[25]] = v620[v276[25]];
          v615[v276[26]] = v620[v276[26]];
          v615[v276[27]] = v620[v276[27]];
          uint64_t v427 = v276[28];
          v428 = &v615[v427];
          v429 = &v620[v427];
          uint64_t v430 = type metadata accessor for StaticSoftwareUpdate(0);
          uint64_t v431 = *(void *)(v430 - 8);
          v432 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v431 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v432(v429, 1, v430))
          {
            uint64_t v433 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
            memcpy(v428, v429, *(void *)(*(void *)(v433 - 8) + 64));
            uint64_t v4 = (char *)a1;
            char v3 = (char *)a2;
            goto LABEL_127;
          }
          v598(v428, v429, __dstf);
          uint64_t v448 = *(int *)(v430 + 20);
          v449 = &v428[v448];
          v450 = &v429[v448];
          uint64_t v451 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
          int v452 = swift_getEnumCaseMultiPayload();
          uint64_t v597 = v451;
          if (v452 == 2)
          {
            uint64_t v476 = *((void *)v450 + 1);
            *(void *)v449 = *(void *)v450;
            *((void *)v449 + 1) = v476;
            uint64_t v477 = type metadata accessor for StaticSoftwareUpdateMetadata(0);
            uint64_t v478 = *(int *)(v477 + 20);
            uint64_t v599 = v477;
            __dstg = &v449[v478];
            v479 = &v450[v478];
            swift_bridgeObjectRetain();
            if (v587(v479, 1, v391)) {
              goto LABEL_116;
            }
            goto LABEL_123;
          }
          if (v452 == 1)
          {
            uint64_t v480 = *((void *)v450 + 1);
            *(void *)v449 = *(void *)v450;
            *((void *)v449 + 1) = v480;
            uint64_t v481 = type metadata accessor for StaticSoftwareUpdateMetadata(0);
            uint64_t v482 = *(int *)(v481 + 20);
            uint64_t v599 = v481;
            __dstg = &v449[v482];
            v479 = &v450[v482];
            swift_bridgeObjectRetain();
            if (v587(v479, 1, v391))
            {
LABEL_116:
              uint64_t v483 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
              memcpy(__dstg, v479, *(void *)(*(void *)(v483 - 8) + 64));
LABEL_124:
              char v3 = (char *)a2;
              uint64_t v493 = *(int *)(v599 + 24);
              v494 = &v449[v493];
              v495 = &v450[v493];
              uint64_t v496 = *((void *)v495 + 1);
              *(void *)v494 = *(void *)v495;
              *((void *)v494 + 1) = v496;
              uint64_t v497 = *(int *)(v599 + 28);
              v498 = &v449[v497];
              v499 = &v450[v497];
              uint64_t v500 = *((void *)v499 + 1);
              *(void *)v498 = *(void *)v499;
              *((void *)v498 + 1) = v500;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v501 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
              v449[*(int *)(v501 + 48)] = v450[*(int *)(v501 + 48)];
              goto LABEL_125;
            }
LABEL_123:
            (*(void (**)(char *, char *, uint64_t))(v584 + 16))(__dstg, v479, v391);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v584 + 56))(__dstg, 0, 1, v391);
            goto LABEL_124;
          }
          char v3 = (char *)a2;
          if (v452)
          {
            memcpy(v449, v450, *(void *)(*(void *)(v597 - 8) + 64));
            goto LABEL_126;
          }
          v598(v449, v450, __dstf);
          v453 = (int *)type metadata accessor for StaticHH2Update(0);
          v449[v453[5]] = v450[v453[5]];
          uint64_t v454 = v453[6];
          v455 = &v449[v454];
          v456 = &v450[v454];
          uint64_t v458 = *(void *)v456;
          uint64_t v457 = *((void *)v456 + 1);
          *(void *)v455 = v458;
          *((void *)v455 + 1) = v457;
          uint64_t v459 = v453[7];
          v460 = &v449[v459];
          v461 = &v450[v459];
          v460[8] = v461[8];
          *(void *)v460 = *(void *)v461;
          swift_bridgeObjectRetain();
LABEL_125:
          swift_storeEnumTagMultiPayload();
LABEL_126:
          uint64_t v4 = (char *)a1;
          (*(void (**)(char *, void, uint64_t, uint64_t))(v431 + 56))(v428, 0, 1, v430);
LABEL_127:
          v272 = v615;
          v615[v276[29]] = v620[v276[29]];
          v615[v276[30]] = v620[v276[30]];
          *(void *)&v615[v276[31]] = *(void *)&v620[v276[31]];
          swift_bridgeObjectRetain();
          v273 = v620;
LABEL_137:
          swift_storeEnumTagMultiPayload();
LABEL_138:
          v521 = (int *)type metadata accessor for AccessoryDetailsBasicInfo();
          uint64_t v522 = v521[5];
          v523 = &v272[v522];
          v524 = &v273[v522];
          uint64_t v525 = *((void *)v524 + 1);
          *(void *)v523 = *(void *)v524;
          *((void *)v523 + 1) = v525;
          uint64_t v526 = v521[6];
          v527 = &v272[v526];
          v528 = &v273[v526];
          v529 = (int *)type metadata accessor for StaticRoom(0);
          uint64_t v609 = *((void *)v529 - 1);
          v530 = *(unsigned int (**)(char *, uint64_t, int *))(v609 + 48);
          swift_bridgeObjectRetain();
          if (v530(v528, 1, v529))
          {
            uint64_t v531 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D138);
            memcpy(v527, v528, *(void *)(*(void *)(v531 - 8) + 64));
          }
          else
          {
            uint64_t v532 = sub_251F34DA0();
            v533 = *(void (**)(char *, char *, uint64_t))(*(void *)(v532 - 8) + 16);
            v533(v527, v528, v532);
            uint64_t v534 = v529[5];
            v535 = &v527[v534];
            v536 = &v528[v534];
            uint64_t v537 = *((void *)v536 + 1);
            *(void *)v535 = *(void *)v536;
            *((void *)v535 + 1) = v537;
            v527[v529[6]] = v528[v529[6]];
            *(void *)&v527[v529[7]] = *(void *)&v528[v529[7]];
            uint64_t v538 = v529[8];
            v539 = &v527[v538];
            v540 = &v528[v538];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v533(v539, v540, v532);
            *(void *)&v527[v529[9]] = *(void *)&v528[v529[9]];
            *(void *)&v527[v529[10]] = *(void *)&v528[v529[10]];
            *(void *)&v527[v529[11]] = *(void *)&v528[v529[11]];
            *(void *)&v527[v529[12]] = *(void *)&v528[v529[12]];
            *(void *)&v527[v529[13]] = *(void *)&v528[v529[13]];
            *(void *)&v527[v529[14]] = *(void *)&v528[v529[14]];
            *(void *)&v527[v529[15]] = *(void *)&v528[v529[15]];
            *(void *)&v527[v529[16]] = *(void *)&v528[v529[16]];
            *(void *)&v527[v529[17]] = *(void *)&v528[v529[17]];
            *(void *)&v527[v529[18]] = *(void *)&v528[v529[18]];
            v610 = *(void (**)(char *, void, uint64_t, int *))(v609 + 56);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            char v3 = (char *)a2;
            swift_bridgeObjectRetain();
            uint64_t v4 = (char *)a1;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v610(v527, 0, 1, v529);
            v273 = v620;
          }
          uint64_t v541 = v521[7];
          v542 = &v615[v541];
          v543 = &v273[v541];
          uint64_t v544 = *((void *)v543 + 1);
          *(void *)v542 = *(void *)v543;
          *((void *)v542 + 1) = v544;
          v615[v521[8]] = v273[v521[8]];
          v615[v521[9]] = v273[v521[9]];
          v615[v521[10]] = v273[v521[10]];
          uint64_t v545 = *(int *)(v611 + 24);
          v546 = &v4[v545];
          v547 = &v3[v545];
          v548 = (int *)type metadata accessor for StaticDeviceMetadata();
          uint64_t v549 = *((void *)v548 - 1);
          v550 = *(unsigned int (**)(char *, uint64_t, int *))(v549 + 48);
          swift_bridgeObjectRetain();
          if (v550(v547, 1, v548))
          {
            uint64_t v551 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
            memcpy(v546, v547, *(void *)(*(void *)(v551 - 8) + 64));
          }
          else
          {
            uint64_t v552 = sub_251F34DA0();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v552 - 8) + 16))(v546, v547, v552);
            uint64_t v553 = v548[5];
            v554 = &v546[v553];
            v555 = &v547[v553];
            uint64_t v556 = *((void *)v555 + 1);
            *(void *)v554 = *(void *)v555;
            *((void *)v554 + 1) = v556;
            uint64_t v557 = v548[6];
            v558 = &v546[v557];
            v559 = &v547[v557];
            uint64_t v560 = *((void *)v559 + 1);
            *(void *)v558 = *(void *)v559;
            *((void *)v558 + 1) = v560;
            uint64_t v561 = v548[7];
            v562 = &v546[v561];
            v563 = &v547[v561];
            uint64_t v564 = *((void *)v563 + 1);
            *(void *)v562 = *(void *)v563;
            *((void *)v562 + 1) = v564;
            uint64_t v565 = v548[8];
            v566 = &v546[v565];
            v567 = &v547[v565];
            uint64_t v568 = *((void *)v567 + 1);
            *(void *)v566 = *(void *)v567;
            *((void *)v566 + 1) = v568;
            v546[v548[9]] = v547[v548[9]];
            v546[v548[10]] = v547[v548[10]];
            v546[v548[11]] = v547[v548[11]];
            v546[v548[12]] = v547[v548[12]];
            v569 = *(void (**)(char *, void, uint64_t, int *))(v549 + 56);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v569(v546, 0, 1, v548);
          }
          v4[*(int *)(v611 + 28)] = v3[*(int *)(v611 + 28)];
          return v4;
      }
  }
}

uint64_t destroy for AccessoryDetails(uint64_t a1, uint64_t a2)
{
  type metadata accessor for AccessoryDetails.Payload(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v4 = sub_251F34DA0();
      uint64_t v5 = *(void *)(v4 - 8);
      uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
      v6(a1, v4);
      uint64_t v7 = (int *)type metadata accessor for StaticAccessory(0);
      swift_bridgeObjectRelease();
      uint64_t v8 = a1 + v7[6];
      type metadata accessor for StaticAccessory.DeviceIdentifier(0);
      if (swift_getEnumCaseMultiPayload() == 1) {
        v6(v8, v4);
      }
      else {
        swift_bridgeObjectRelease();
      }
      uint64_t v33 = a1 + v7[7];
      uint64_t v34 = type metadata accessor for StaticDeviceMetadata();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 48))(v33, 1, v34))
      {
        v6(v33, v4);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      uint64_t v35 = a1 + v7[8];
      uint64_t v36 = sub_251F34D20();
      uint64_t v105 = *(void *)(v36 - 8);
      uint64_t v101 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v105 + 48);
      if (!v101(v35, 1, v36)) {
        (*(void (**)(uint64_t, uint64_t))(v105 + 8))(v35, v36);
      }
      v6(a1 + v7[11], v4);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v37 = a1 + v7[21];
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v37, 1, v4)) {
        v6(v37, v4);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v38 = a1 + v7[28];
      uint64_t v39 = type metadata accessor for StaticSoftwareUpdate(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 48))(v38, 1, v39)) {
        goto LABEL_42;
      }
      v6(v38, v4);
      uint64_t v40 = v38 + *(int *)(v39 + 20);
      type metadata accessor for StaticSoftwareUpdate.Kind(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v44 = v40 + *(int *)(type metadata accessor for StaticSoftwareUpdateMetadata(0) + 20);
        if (!v101(v44, 1, v36)) {
          (*(void (**)(uint64_t, uint64_t))(v105 + 8))(v44, v36);
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        if (EnumCaseMultiPayload) {
          goto LABEL_42;
        }
        v6(v40, v4);
        type metadata accessor for StaticHH2Update(0);
      }
      swift_bridgeObjectRelease();
LABEL_42:
      swift_bridgeObjectRelease();
      goto LABEL_43;
    case 1u:
      uint64_t v9 = sub_251F34DA0();
      uint64_t v10 = *(void *)(v9 - 8);
      uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
      v11(a1, v9);
      uint64_t v12 = (int *)type metadata accessor for StaticService();
      swift_bridgeObjectRelease();
      v11(a1 + v12[11], v9);
      uint64_t v13 = a1 + v12[13];
      uint64_t v14 = type metadata accessor for StaticDeviceMetadata();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v13, 1, v14))
      {
        v11(v13, v9);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      uint64_t v108 = a2;
      uint64_t v15 = a1 + v12[14];
      uint64_t v16 = sub_251F34D20();
      uint64_t v17 = *(void *)(v16 - 8);
      unint64_t v100 = *(unsigned int (**)(void))(v17 + 48);
      if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v100)(v15, 1, v16)) {
        (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
      }
      uint64_t v98 = v17;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v18 = a1 + v12[25];
      uint64_t v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
      if (!v19(v18, 1, v9)) {
        v11(v18, v9);
      }
      uint64_t v20 = a1 + v12[26];
      if (!v19(v20, 1, v9)) {
        v11(v20, v9);
      }
      uint64_t v104 = v11;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v21 = a1 + v12[30];
      uint64_t v22 = type metadata accessor for StaticSoftwareUpdate(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48))(v21, 1, v22)) {
        goto LABEL_36;
      }
      v104(v21, v9);
      uint64_t v23 = v21 + *(int *)(v22 + 20);
      type metadata accessor for StaticSoftwareUpdate.Kind(0);
      int v24 = swift_getEnumCaseMultiPayload();
      if (v24 == 2 || v24 == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v96 = v23 + *(int *)(type metadata accessor for StaticSoftwareUpdateMetadata(0) + 20);
        if (!v100()) {
          (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v96, v16);
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        if (v24) {
          goto LABEL_36;
        }
        v104(v23, v9);
        type metadata accessor for StaticHH2Update(0);
      }
      swift_bridgeObjectRelease();
LABEL_36:
      swift_bridgeObjectRelease();
      uint64_t v42 = a1 + v12[33];
      unsigned int v43 = v19(v42, 1, v9);
      a2 = v108;
      if (!v43) {
        v104(v42, v9);
      }
LABEL_43:
      uint64_t v45 = a1 + *(int *)(a2 + 20);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v46 = sub_251F34DA0();
          uint64_t v47 = *(void *)(v46 - 8);
          uint64_t v48 = *(void (**)(uint64_t, uint64_t))(v47 + 8);
          v48(v45, v46);
          uint64_t v49 = (int *)type metadata accessor for StaticAccessory(0);
          swift_bridgeObjectRelease();
          uint64_t v50 = v45 + v49[6];
          type metadata accessor for StaticAccessory.DeviceIdentifier(0);
          if (swift_getEnumCaseMultiPayload() == 1) {
            v48(v50, v46);
          }
          else {
            swift_bridgeObjectRelease();
          }
          uint64_t v75 = v45 + v49[7];
          uint64_t v76 = type metadata accessor for StaticDeviceMetadata();
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v76 - 8) + 48))(v75, 1, v76))
          {
            v48(v75, v46);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          uint64_t v77 = v45 + v49[8];
          uint64_t v78 = sub_251F34D20();
          uint64_t v107 = *(void *)(v78 - 8);
          uint64_t v103 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v107 + 48);
          if (!v103(v77, 1, v78)) {
            (*(void (**)(uint64_t, uint64_t))(v107 + 8))(v77, v78);
          }
          v48(v45 + v49[11], v46);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v79 = v45 + v49[21];
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v79, 1, v46)) {
            v48(v79, v46);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v80 = v45 + v49[28];
          uint64_t v81 = type metadata accessor for StaticSoftwareUpdate(0);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v81 - 8) + 48))(v80, 1, v81)) {
            goto LABEL_84;
          }
          v48(v80, v46);
          uint64_t v82 = v80 + *(int *)(v81 + 20);
          type metadata accessor for StaticSoftwareUpdate.Kind(0);
          int v83 = swift_getEnumCaseMultiPayload();
          if (v83 == 2 || v83 == 1)
          {
            swift_bridgeObjectRelease();
            uint64_t v86 = v82 + *(int *)(type metadata accessor for StaticSoftwareUpdateMetadata(0) + 20);
            if (!v103(v86, 1, v78)) {
              (*(void (**)(uint64_t, uint64_t))(v107 + 8))(v86, v78);
            }
            swift_bridgeObjectRelease();
          }
          else
          {
            if (v83) {
              goto LABEL_84;
            }
            v48(v82, v46);
            type metadata accessor for StaticHH2Update(0);
          }
          swift_bridgeObjectRelease();
LABEL_84:
          swift_bridgeObjectRelease();
          goto LABEL_85;
        case 1u:
          uint64_t v51 = sub_251F34DA0();
          uint64_t v52 = *(void *)(v51 - 8);
          uint64_t v53 = *(void (**)(uint64_t, uint64_t))(v52 + 8);
          v53(v45, v51);
          uint64_t v54 = (int *)type metadata accessor for StaticService();
          swift_bridgeObjectRelease();
          v53(v45 + v54[11], v51);
          uint64_t v55 = v45 + v54[13];
          uint64_t v56 = type metadata accessor for StaticDeviceMetadata();
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 48))(v55, 1, v56))
          {
            v53(v55, v51);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          uint64_t v109 = a2;
          uint64_t v57 = v45 + v54[14];
          uint64_t v58 = sub_251F34D20();
          uint64_t v59 = *(void *)(v58 - 8);
          uint64_t v102 = *(unsigned int (**)(void))(v59 + 48);
          if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v102)(v57, 1, v58)) {
            (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v57, v58);
          }
          uint64_t v99 = v59;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v60 = v45 + v54[25];
          uint64_t v61 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v52 + 48);
          if (!v61(v60, 1, v51)) {
            v53(v60, v51);
          }
          uint64_t v62 = v45 + v54[26];
          if (!v61(v62, 1, v51)) {
            v53(v62, v51);
          }
          uint64_t v106 = v53;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v63 = v45 + v54[30];
          uint64_t v64 = type metadata accessor for StaticSoftwareUpdate(0);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 48))(v63, 1, v64)) {
            goto LABEL_78;
          }
          v106(v63, v51);
          uint64_t v65 = v63 + *(int *)(v64 + 20);
          type metadata accessor for StaticSoftwareUpdate.Kind(0);
          int v66 = swift_getEnumCaseMultiPayload();
          if (v66 == 2 || v66 == 1)
          {
            swift_bridgeObjectRelease();
            uint64_t v97 = v65 + *(int *)(type metadata accessor for StaticSoftwareUpdateMetadata(0) + 20);
            if (!v102()) {
              (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v97, v58);
            }
            swift_bridgeObjectRelease();
          }
          else
          {
            if (v66) {
              goto LABEL_78;
            }
            v106(v65, v51);
            type metadata accessor for StaticHH2Update(0);
          }
          swift_bridgeObjectRelease();
LABEL_78:
          swift_bridgeObjectRelease();
          uint64_t v84 = v45 + v54[33];
          unsigned int v85 = v61(v84, 1, v51);
          a2 = v109;
          if (!v85) {
            v106(v84, v51);
          }
LABEL_85:
          uint64_t v87 = type metadata accessor for AccessoryDetailsBasicInfo();
          swift_bridgeObjectRelease();
          uint64_t v88 = v45 + *(int *)(v87 + 24);
          uint64_t v89 = type metadata accessor for StaticRoom(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v89 - 8) + 48))(v88, 1, v89))
          {
            uint64_t v90 = sub_251F34DA0();
            uint64_t v91 = *(void (**)(uint64_t, uint64_t))(*(void *)(v90 - 8) + 8);
            v91(v88, v90);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v91(v88 + *(int *)(v89 + 32), v90);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          uint64_t v92 = a1 + *(int *)(a2 + 24);
          uint64_t v93 = type metadata accessor for StaticDeviceMetadata();
          uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v93 - 8) + 48))(v92, 1, v93);
          if (!result)
          {
            uint64_t v95 = sub_251F34DA0();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v95 - 8) + 8))(v92, v95);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return swift_bridgeObjectRelease();
          }
          return result;
        case 2u:
          uint64_t v67 = sub_251F34DA0();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v67 - 8) + 8))(v45, v67);
          type metadata accessor for StaticServiceGroup();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_85;
        case 3u:
          uint64_t v68 = sub_251F34DA0();
          uint64_t v69 = *(void (**)(uint64_t, uint64_t))(*(void *)(v68 - 8) + 8);
          v69(v45, v68);
          uint64_t v70 = type metadata accessor for StaticEndpoint();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v69(v45 + *(int *)(v70 + 44), v68);
          swift_bridgeObjectRelease();
          uint64_t v71 = v45 + *(int *)(v70 + 52);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v72 = v71 + *(int *)(type metadata accessor for MatterTileMetadata() + 44);
          uint64_t v73 = sub_251F34D20();
          uint64_t v74 = *(void *)(v73 - 8);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v74 + 48))(v72, 1, v73)) {
            (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v72, v73);
          }
          goto LABEL_85;
        default:
          goto LABEL_85;
      }
    case 2u:
      uint64_t v25 = sub_251F34DA0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(a1, v25);
      type metadata accessor for StaticServiceGroup();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_43;
    case 3u:
      uint64_t v26 = sub_251F34DA0();
      uint64_t v27 = *(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8);
      v27(a1, v26);
      uint64_t v28 = type metadata accessor for StaticEndpoint();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v27(a1 + *(int *)(v28 + 44), v26);
      swift_bridgeObjectRelease();
      uint64_t v29 = a1 + *(int *)(v28 + 52);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v30 = v29 + *(int *)(type metadata accessor for MatterTileMetadata() + 44);
      uint64_t v31 = sub_251F34D20();
      uint64_t v32 = *(void *)(v31 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31)) {
        (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v30, v31);
      }
      goto LABEL_43;
    default:
      goto LABEL_43;
  }
}

uint64_t initializeWithCopy for AccessoryDetails(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3 = a2;
  uint64_t v4 = a1;
  type metadata accessor for AccessoryDetails.Payload(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v15 = sub_251F34DA0();
      uint64_t v16 = *(void *)(v15 - 8);
      uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16);
      v17(v4, v3, v15);
      uint64_t v18 = (int *)type metadata accessor for StaticService();
      uint64_t v19 = v18[5];
      uint64_t v20 = (void *)(v4 + v19);
      uint64_t v21 = (void *)(v3 + v19);
      uint64_t v22 = v21[1];
      *uint64_t v20 = *v21;
      v20[1] = v22;
      *(unsigned char *)(v4 + v18[6]) = *(unsigned char *)(v3 + v18[6]);
      *(unsigned char *)(v4 + v18[7]) = *(unsigned char *)(v3 + v18[7]);
      *(unsigned char *)(v4 + v18[8]) = *(unsigned char *)(v3 + v18[8]);
      *(unsigned char *)(v4 + v18[9]) = *(unsigned char *)(v3 + v18[9]);
      *(unsigned char *)(v4 + v18[10]) = *(unsigned char *)(v3 + v18[10]);
      uint64_t v23 = v18[11];
      uint64_t v24 = v4 + v23;
      uint64_t v25 = v3 + v23;
      swift_bridgeObjectRetain();
      v17(v24, v25, v15);
      uint64_t v26 = v18[12];
      uint64_t v27 = v4 + v26;
      uint64_t v28 = v3 + v26;
      *(void *)uint64_t v27 = *(void *)v28;
      *(unsigned char *)(v27 + 8) = *(unsigned char *)(v28 + 8);
      uint64_t v29 = v18[13];
      uint64_t v30 = (char *)(v4 + v29);
      uint64_t v31 = (char *)(v3 + v29);
      uint64_t v32 = (int *)type metadata accessor for StaticDeviceMetadata();
      __dst = (void *)*((void *)v32 - 1);
      uint64_t v609 = v16;
      v630 = v17;
      uint64_t v634 = v15;
      if (((unsigned int (*)(char *, uint64_t, int *))__dst[6])(v31, 1, v32))
      {
        uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
        memcpy(v30, v31, *(void *)(*(void *)(v33 - 8) + 64));
      }
      else
      {
        v17((uint64_t)v30, (uint64_t)v31, v15);
        uint64_t v78 = v32[5];
        uint64_t v79 = &v30[v78];
        uint64_t v80 = &v31[v78];
        uint64_t v81 = *((void *)v80 + 1);
        *(void *)uint64_t v79 = *(void *)v80;
        *((void *)v79 + 1) = v81;
        uint64_t v82 = v32[6];
        int v83 = &v30[v82];
        uint64_t v84 = &v31[v82];
        uint64_t v85 = *((void *)v84 + 1);
        *(void *)int v83 = *(void *)v84;
        *((void *)v83 + 1) = v85;
        uint64_t v86 = v32[7];
        uint64_t v87 = &v30[v86];
        uint64_t v88 = &v31[v86];
        uint64_t v89 = *((void *)v88 + 1);
        *(void *)uint64_t v87 = *(void *)v88;
        *((void *)v87 + 1) = v89;
        uint64_t v90 = v32[8];
        uint64_t v91 = &v30[v90];
        uint64_t v92 = &v31[v90];
        uint64_t v93 = *((void *)v92 + 1);
        *(void *)uint64_t v91 = *(void *)v92;
        *((void *)v91 + 1) = v93;
        v30[v32[9]] = v31[v32[9]];
        v30[v32[10]] = v31[v32[10]];
        v30[v32[11]] = v31[v32[11]];
        v30[v32[12]] = v31[v32[12]];
        uint64_t v94 = (void (*)(char *, void, uint64_t, int *))__dst[7];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v3 = a2;
        swift_bridgeObjectRetain();
        uint64_t v4 = a1;
        swift_bridgeObjectRetain();
        v94(v30, 0, 1, v32);
      }
      uint64_t v34 = v16;
      uint64_t v95 = v18[14];
      uint64_t v96 = (void *)(v4 + v95);
      uint64_t v97 = (const void *)(v3 + v95);
      uint64_t v98 = sub_251F34D20();
      uint64_t v99 = *(void *)(v98 - 8);
      v603 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v99 + 48);
      uint64_t v605 = v98;
      uint64_t v599 = v99;
      if (v603(v97, 1, v98))
      {
        uint64_t v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
        memcpy(v96, v97, *(void *)(*(void *)(v100 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v99 + 16))(v96, v97, v98);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v99 + 56))(v96, 0, 1, v98);
      }
      *(void *)(v4 + v18[15]) = *(void *)(v3 + v18[15]);
      uint64_t v127 = v18[16];
      uint64_t v128 = (void *)(v4 + v127);
      uint64_t v129 = (void *)(v3 + v127);
      uint64_t v130 = v129[1];
      *uint64_t v128 = *v129;
      v128[1] = v130;
      *(unsigned char *)(v4 + v18[17]) = *(unsigned char *)(v3 + v18[17]);
      *(unsigned char *)(v4 + v18[18]) = *(unsigned char *)(v3 + v18[18]);
      *(unsigned char *)(v4 + v18[19]) = *(unsigned char *)(v3 + v18[19]);
      *(unsigned char *)(v4 + v18[20]) = *(unsigned char *)(v3 + v18[20]);
      uint64_t v131 = v18[21];
      uint64_t v132 = (void *)(v4 + v131);
      uint64_t v133 = (void *)(v3 + v131);
      uint64_t v134 = v3;
      uint64_t v135 = v133[1];
      *uint64_t v132 = *v133;
      v132[1] = v135;
      *(unsigned char *)(v4 + v18[22]) = *(unsigned char *)(v134 + v18[22]);
      *(unsigned char *)(v4 + v18[23]) = *(unsigned char *)(v134 + v18[23]);
      *(unsigned char *)(v4 + v18[24]) = *(unsigned char *)(v134 + v18[24]);
      uint64_t v136 = v18[25];
      uint64_t v137 = (void *)(v4 + v136);
      uint64_t v138 = (const void *)(v134 + v136);
      uint64_t v139 = v34;
      v140 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      __dsta = v140;
      if (v140((uint64_t)v138, 1, v634))
      {
        uint64_t v141 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
        memcpy(v137, v138, *(void *)(*(void *)(v141 - 8) + 64));
        uint64_t v142 = (void (*)(void *, const void *, uint64_t))v630;
      }
      else
      {
        uint64_t v142 = (void (*)(void *, const void *, uint64_t))v630;
        v630((uint64_t)v137, (uint64_t)v138, v634);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v139 + 56))(v137, 0, 1, v634);
      }
      uint64_t v155 = v18[26];
      v156 = (void *)(v4 + v155);
      uint64_t v157 = (const void *)(a2 + v155);
      if (__dsta(a2 + v155, 1, v634))
      {
        uint64_t v158 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
        memcpy(v156, v157, *(void *)(*(void *)(v158 - 8) + 64));
      }
      else
      {
        v142(v156, v157, v634);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v609 + 56))(v156, 0, 1, v634);
      }
      *(void *)(v4 + v18[27]) = *(void *)(a2 + v18[27]);
      *(void *)(v4 + v18[28]) = *(void *)(a2 + v18[28]);
      uint64_t v171 = v18[29];
      v172 = (void *)(v4 + v171);
      uint64_t v173 = (void *)(a2 + v171);
      uint64_t v174 = v173[1];
      void *v172 = *v173;
      v172[1] = v174;
      uint64_t v175 = v18[30];
      v176 = (char *)(v4 + v175);
      uint64_t v177 = (char *)(a2 + v175);
      uint64_t v178 = type metadata accessor for StaticSoftwareUpdate(0);
      uint64_t v179 = *(void *)(v178 - 8);
      v180 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v179 + 48);
      uint64_t v181 = v178;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v180(v177, 1, v181))
      {
        uint64_t v182 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
        memcpy(v176, v177, *(void *)(*(void *)(v182 - 8) + 64));
        v183 = (void (*)(void *, const void *, uint64_t))v630;
        uint64_t v4 = a1;
        uint64_t v184 = v634;
        uint64_t v3 = a2;
      }
      else
      {
        uint64_t v594 = v179;
        uint64_t v184 = v634;
        v183 = (void (*)(void *, const void *, uint64_t))v630;
        v630((uint64_t)v176, (uint64_t)v177, v634);
        uint64_t v596 = v181;
        v598 = v176;
        uint64_t v199 = *(int *)(v181 + 20);
        v200 = &v176[v199];
        v201 = &v177[v199];
        uint64_t v202 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          uint64_t v225 = *((void *)v201 + 1);
          *(void *)v200 = *(void *)v201;
          *((void *)v200 + 1) = v225;
          uint64_t updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
          uint64_t v226 = updated[5];
          v227 = &v200[v226];
          uint64_t v228 = &v201[v226];
          swift_bridgeObjectRetain();
          if (v603(v228, 1, v605))
          {
            uint64_t v229 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
            memcpy(v227, v228, *(void *)(*(void *)(v229 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v599 + 16))(v227, v228, v605);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v599 + 56))(v227, 0, 1, v605);
          }
          uint64_t v3 = a2;
          uint64_t v253 = updated[6];
          v254 = &v200[v253];
          uint64_t v255 = &v201[v253];
          uint64_t v256 = *((void *)v255 + 1);
          *(void *)v254 = *(void *)v255;
          *((void *)v254 + 1) = v256;
          uint64_t v257 = updated[7];
          v258 = &v200[v257];
          uint64_t v259 = &v201[v257];
          uint64_t v260 = *((void *)v259 + 1);
          *(void *)v258 = *(void *)v259;
          *((void *)v258 + 1) = v260;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v261 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
          v200[*(int *)(v261 + 48)] = v201[*(int *)(v261 + 48)];
          swift_storeEnumTagMultiPayload();
          uint64_t v4 = a1;
        }
        else if (EnumCaseMultiPayload == 1)
        {
          uint64_t v230 = *((void *)v201 + 1);
          *(void *)v200 = *(void *)v201;
          *((void *)v200 + 1) = v230;
          uint64_t v231 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
          uint64_t v232 = v231[5];
          v591 = &v200[v232];
          uint64_t v233 = &v201[v232];
          swift_bridgeObjectRetain();
          uint64_t v3 = a2;
          if (v603(v233, 1, v605))
          {
            uint64_t v234 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
            memcpy(v591, v233, *(void *)(*(void *)(v234 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v599 + 16))(v591, v233, v605);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v599 + 56))(v591, 0, 1, v605);
          }
          uint64_t v262 = v231[6];
          v263 = &v200[v262];
          uint64_t v264 = &v201[v262];
          uint64_t v265 = *((void *)v264 + 1);
          *(void *)v263 = *(void *)v264;
          *((void *)v263 + 1) = v265;
          uint64_t v266 = v231[7];
          v267 = &v200[v266];
          uint64_t v268 = &v201[v266];
          uint64_t v269 = *((void *)v268 + 1);
          *(void *)v267 = *(void *)v268;
          *((void *)v267 + 1) = v269;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v270 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
          v200[*(int *)(v270 + 48)] = v201[*(int *)(v270 + 48)];
          swift_storeEnumTagMultiPayload();
          uint64_t v4 = a1;
          uint64_t v184 = v634;
        }
        else
        {
          uint64_t v3 = a2;
          if (EnumCaseMultiPayload)
          {
            memcpy(v200, v201, *(void *)(*(void *)(v202 - 8) + 64));
          }
          else
          {
            v630((uint64_t)v200, (uint64_t)v201, v634);
            v204 = (int *)type metadata accessor for StaticHH2Update(0);
            v200[v204[5]] = v201[v204[5]];
            uint64_t v205 = v204[6];
            v206 = &v200[v205];
            v207 = &v201[v205];
            uint64_t v209 = *(void *)v207;
            uint64_t v208 = *((void *)v207 + 1);
            *(void *)v206 = v209;
            *((void *)v206 + 1) = v208;
            uint64_t v210 = v204[7];
            uint64_t v211 = &v200[v210];
            uint64_t v212 = &v201[v210];
            v211[8] = v212[8];
            *(void *)uint64_t v211 = *(void *)v212;
            swift_bridgeObjectRetain();
            swift_storeEnumTagMultiPayload();
          }
          uint64_t v4 = a1;
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v594 + 56))(v598, 0, 1, v596);
      }
      *(unsigned char *)(v4 + v18[31]) = *(unsigned char *)(v3 + v18[31]);
      *(void *)(v4 + v18[32]) = *(void *)(v3 + v18[32]);
      uint64_t v271 = v18[33];
      v272 = (void *)(v4 + v271);
      v273 = (const void *)(v3 + v271);
      swift_bridgeObjectRetain();
      if (__dsta((uint64_t)v273, 1, v184))
      {
        uint64_t v274 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
        memcpy(v272, v273, *(void *)(*(void *)(v274 - 8) + 64));
      }
      else
      {
        v183(v272, v273, v184);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v609 + 56))(v272, 0, 1, v184);
      }
      uint64_t v275 = v18[34];
      uint64_t v276 = v4 + v275;
      uint64_t v277 = v3 + v275;
      *(_WORD *)uint64_t v276 = *(_WORD *)v277;
      *(unsigned char *)(v276 + 2) = *(unsigned char *)(v277 + 2);
      uint64_t v278 = v18[35];
      uint64_t v279 = v4 + v278;
      uint64_t v280 = v3 + v278;
      *(_DWORD *)(v279 + 7) = *(_DWORD *)(v280 + 7);
      *(void *)uint64_t v279 = *(void *)v280;
      goto LABEL_71;
    case 2u:
      uint64_t v35 = sub_251F34DA0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 16))(v4, v3, v35);
      uint64_t v36 = (int *)type metadata accessor for StaticServiceGroup();
      uint64_t v37 = v36[5];
      uint64_t v38 = (void *)(v4 + v37);
      uint64_t v39 = (uint64_t *)(v3 + v37);
      uint64_t v41 = *v39;
      uint64_t v40 = v39[1];
      *uint64_t v38 = v41;
      v38[1] = v40;
      *(unsigned char *)(v4 + v36[6]) = *(unsigned char *)(v3 + v36[6]);
      *(unsigned char *)(v4 + v36[7]) = *(unsigned char *)(v3 + v36[7]);
      *(void *)(v4 + v36[8]) = *(void *)(v3 + v36[8]);
      uint64_t v42 = v36[9];
      unsigned int v43 = (void *)(v4 + v42);
      uint64_t v44 = (void *)(v3 + v42);
      uint64_t v45 = v44[1];
      *unsigned int v43 = *v44;
      v43[1] = v45;
      *(unsigned char *)(v4 + v36[10]) = *(unsigned char *)(v3 + v36[10]);
      *(void *)(v4 + v36[11]) = *(void *)(v3 + v36[11]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_71;
    case 3u:
      uint64_t v46 = sub_251F34DA0();
      v635 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 16);
      v635(v4, v3, v46);
      uint64_t v47 = (int *)type metadata accessor for StaticEndpoint();
      uint64_t v48 = v47[5];
      uint64_t v49 = v4 + v48;
      uint64_t v50 = v3 + v48;
      *(void *)uint64_t v49 = *(void *)v50;
      *(_WORD *)(v49 + 8) = *(_WORD *)(v50 + 8);
      uint64_t v51 = v47[6];
      uint64_t v52 = (void *)(v4 + v51);
      uint64_t v53 = (void *)(v3 + v51);
      uint64_t v54 = v53[1];
      *uint64_t v52 = *v53;
      v52[1] = v54;
      *(void *)(v4 + v47[7]) = *(void *)(v3 + v47[7]);
      *(void *)(v4 + v47[8]) = *(void *)(v3 + v47[8]);
      *(void *)(v4 + v47[9]) = *(void *)(v3 + v47[9]);
      *(void *)(v4 + v47[10]) = *(void *)(v3 + v47[10]);
      uint64_t v55 = v47[11];
      uint64_t v56 = v4 + v55;
      uint64_t v57 = v3 + v55;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v635(v56, v57, v46);
      *(void *)(v4 + v47[12]) = *(void *)(v3 + v47[12]);
      uint64_t v58 = v47[13];
      uint64_t v59 = v4 + v58;
      uint64_t v60 = v3 + v58;
      uint64_t v61 = *(void *)(v3 + v58 + 8);
      *(void *)uint64_t v59 = *(void *)(v3 + v58);
      *(void *)(v59 + 8) = v61;
      uint64_t v62 = *(void *)(v3 + v58 + 16);
      uint64_t v63 = *(void *)(v60 + 24);
      *(void *)(v59 + 16) = v62;
      *(void *)(v59 + 24) = v63;
      uint64_t v64 = *(void *)(v60 + 40);
      *(void *)(v59 + 32) = *(void *)(v60 + 32);
      *(void *)(v59 + 40) = v64;
      *(_DWORD *)(v59 + 48) = *(_DWORD *)(v60 + 48);
      uint64_t v65 = *(int *)(type metadata accessor for MatterTileMetadata() + 44);
      v636 = (void *)(v59 + v65);
      int v66 = (const void *)(v60 + v65);
      uint64_t v67 = sub_251F34D20();
      uint64_t v68 = *(void *)(v67 - 8);
      uint64_t v69 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v68 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v69(v66, 1, v67))
      {
        uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
        memcpy(v636, v66, *(void *)(*(void *)(v70 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v68 + 16))(v636, v66, v67);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v68 + 56))(v636, 0, 1, v67);
      }
      uint64_t v101 = v47[14];
      uint64_t v4 = a1;
      uint64_t v102 = a1 + v101;
      uint64_t v3 = a2;
      uint64_t v103 = a2 + v101;
      *(_WORD *)uint64_t v102 = *(_WORD *)v103;
      *(unsigned char *)(v102 + 2) = *(unsigned char *)(v103 + 2);
      *(unsigned char *)(a1 + v47[15]) = *(unsigned char *)(a2 + v47[15]);
      goto LABEL_71;
    default:
      uint64_t v5 = sub_251F34DA0();
      uint64_t v629 = *(void *)(v5 - 8);
      uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v629 + 16);
      v6(v4, v3, v5);
      uint64_t v7 = (int *)type metadata accessor for StaticAccessory(0);
      uint64_t v8 = v7[5];
      uint64_t v9 = (void *)(v4 + v8);
      uint64_t v10 = (void *)(v3 + v8);
      uint64_t v11 = v10[1];
      *uint64_t v9 = *v10;
      v9[1] = v11;
      uint64_t v12 = v7[6];
      uint64_t v13 = (void *)(v4 + v12);
      uint64_t v14 = (void *)(v3 + v12);
      type metadata accessor for StaticAccessory.DeviceIdentifier(0);
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v6((uint64_t)v13, (uint64_t)v14, v5);
      }
      else
      {
        uint64_t v71 = v14[1];
        *uint64_t v13 = *v14;
        v13[1] = v71;
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v72 = v7[7];
      uint64_t v73 = (char *)(v4 + v72);
      uint64_t v74 = (char *)(v3 + v72);
      uint64_t v75 = (int *)type metadata accessor for StaticDeviceMetadata();
      uint64_t v76 = *((void *)v75 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v76 + 48))(v74, 1, v75))
      {
        uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
        memcpy(v73, v74, *(void *)(*(void *)(v77 - 8) + 64));
      }
      else
      {
        v6((uint64_t)v73, (uint64_t)v74, v5);
        uint64_t v104 = v75[5];
        uint64_t v105 = &v73[v104];
        uint64_t v106 = &v74[v104];
        uint64_t v107 = *((void *)v106 + 1);
        *(void *)uint64_t v105 = *(void *)v106;
        *((void *)v105 + 1) = v107;
        uint64_t v108 = v75[6];
        uint64_t v109 = &v73[v108];
        uint64_t v110 = &v74[v108];
        uint64_t v111 = *((void *)v110 + 1);
        *(void *)uint64_t v109 = *(void *)v110;
        *((void *)v109 + 1) = v111;
        uint64_t v112 = v75[7];
        uint64_t v113 = &v73[v112];
        uint64_t v114 = &v74[v112];
        uint64_t v115 = *((void *)v114 + 1);
        *(void *)uint64_t v113 = *(void *)v114;
        *((void *)v113 + 1) = v115;
        uint64_t v116 = v75[8];
        uint64_t v117 = &v73[v116];
        uint64_t v118 = &v74[v116];
        uint64_t v119 = *((void *)v118 + 1);
        *(void *)uint64_t v117 = *(void *)v118;
        *((void *)v117 + 1) = v119;
        v73[v75[9]] = v74[v75[9]];
        v73[v75[10]] = v74[v75[10]];
        v73[v75[11]] = v74[v75[11]];
        v73[v75[12]] = v74[v75[12]];
        uint64_t v120 = *(void (**)(char *, void, uint64_t, int *))(v76 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v3 = a2;
        swift_bridgeObjectRetain();
        uint64_t v4 = a1;
        swift_bridgeObjectRetain();
        v120(v73, 0, 1, v75);
      }
      uint64_t v121 = v7[8];
      uint64_t v122 = (void *)(v4 + v121);
      int64_t v123 = (const void *)(v3 + v121);
      uint64_t v124 = sub_251F34D20();
      uint64_t v125 = *(void *)(v124 - 8);
      v610 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v125 + 48);
      uint64_t v606 = v125;
      if (v610(v123, 1, v124))
      {
        uint64_t v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
        memcpy(v122, v123, *(void *)(*(void *)(v126 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v125 + 16))(v122, v123, v124);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v125 + 56))(v122, 0, 1, v124);
      }
      uint64_t v143 = v7[9];
      uint64_t v144 = v4 + v143;
      uint64_t v145 = v3 + v143;
      *(void *)uint64_t v144 = *(void *)v145;
      *(unsigned char *)(v144 + 8) = *(unsigned char *)(v145 + 8);
      *(unsigned char *)(v4 + v7[10]) = *(unsigned char *)(v3 + v7[10]);
      v6(v4 + v7[11], v3 + v7[11], v5);
      *(void *)(v4 + v7[12]) = *(void *)(v3 + v7[12]);
      uint64_t v146 = v7[13];
      int64_t v147 = (void *)(v4 + v146);
      uint64_t v148 = (void *)(v3 + v146);
      uint64_t v149 = v148[1];
      *int64_t v147 = *v148;
      v147[1] = v149;
      *(unsigned char *)(v4 + v7[14]) = *(unsigned char *)(v3 + v7[14]);
      *(unsigned char *)(v4 + v7[15]) = *(unsigned char *)(v3 + v7[15]);
      *(unsigned char *)(v4 + v7[16]) = *(unsigned char *)(v3 + v7[16]);
      *(unsigned char *)(v4 + v7[17]) = *(unsigned char *)(v3 + v7[17]);
      *(unsigned char *)(v4 + v7[18]) = *(unsigned char *)(v3 + v7[18]);
      *(void *)(v4 + v7[19]) = *(void *)(v3 + v7[19]);
      *(void *)(v4 + v7[20]) = *(void *)(v3 + v7[20]);
      uint64_t v150 = v7[21];
      __dstb = (void *)(v4 + v150);
      v151 = (const void *)(v3 + v150);
      uint64_t v152 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v629 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v153 = (void (*)(char *, char *, uint64_t))v6;
      if (v152(v151, 1, v5))
      {
        uint64_t v154 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
        memcpy(__dstb, v151, *(void *)(*(void *)(v154 - 8) + 64));
      }
      else
      {
        v6((uint64_t)__dstb, (uint64_t)v151, v5);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v629 + 56))(__dstb, 0, 1, v5);
      }
      *(_WORD *)(a1 + v7[22]) = *(_WORD *)(a2 + v7[22]);
      uint64_t v159 = v7[23];
      v160 = (void *)(a1 + v159);
      uint64_t v161 = (void *)(a2 + v159);
      uint64_t v162 = v161[1];
      void *v160 = *v161;
      v160[1] = v162;
      *(void *)(a1 + v7[24]) = *(void *)(a2 + v7[24]);
      *(unsigned char *)(a1 + v7[25]) = *(unsigned char *)(a2 + v7[25]);
      *(unsigned char *)(a1 + v7[26]) = *(unsigned char *)(a2 + v7[26]);
      *(unsigned char *)(a1 + v7[27]) = *(unsigned char *)(a2 + v7[27]);
      uint64_t v163 = v7[28];
      v164 = (char *)(a1 + v163);
      uint64_t v165 = (char *)(a2 + v163);
      uint64_t v166 = type metadata accessor for StaticSoftwareUpdate(0);
      uint64_t v167 = *(void *)(v166 - 8);
      v168 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v167 + 48);
      uint64_t v169 = v166;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v168(v165, 1, v169))
      {
        uint64_t v170 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
        memcpy(v164, v165, *(void *)(*(void *)(v170 - 8) + 64));
        uint64_t v4 = a1;
        uint64_t v3 = a2;
        goto LABEL_61;
      }
      v153(v164, v165, v5);
      uint64_t v631 = v169;
      uint64_t v185 = *(int *)(v169 + 20);
      v186 = &v164[v185];
      uint64_t v187 = &v165[v185];
      uint64_t v188 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
      int v189 = swift_getEnumCaseMultiPayload();
      if (v189 != 2)
      {
        if (v189 == 1)
        {
          __dstd = v164;
          uint64_t v219 = *((void *)v187 + 1);
          *(void *)v186 = *(void *)v187;
          *((void *)v186 + 1) = v219;
          v220 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
          uint64_t v221 = v220[5];
          uint64_t v222 = &v186[v221];
          uint64_t v223 = &v187[v221];
          swift_bridgeObjectRetain();
          if (v610(v223, 1, v124))
          {
            uint64_t v224 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
            memcpy(v222, v223, *(void *)(*(void *)(v224 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v606 + 16))(v222, v223, v124);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v606 + 56))(v222, 0, 1, v124);
          }
          v164 = __dstd;
          uint64_t v244 = v220[6];
          v245 = &v186[v244];
          uint64_t v246 = &v187[v244];
          uint64_t v247 = *((void *)v246 + 1);
          *(void *)v245 = *(void *)v246;
          *((void *)v245 + 1) = v247;
          uint64_t v248 = v220[7];
          v249 = &v186[v248];
          uint64_t v250 = &v187[v248];
          uint64_t v251 = *((void *)v250 + 1);
          *(void *)v249 = *(void *)v250;
          *((void *)v249 + 1) = v251;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v252 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
          v186[*(int *)(v252 + 48)] = v187[*(int *)(v252 + 48)];
        }
        else
        {
          if (v189)
          {
            memcpy(v186, v187, *(void *)(*(void *)(v188 - 8) + 64));
LABEL_59:
            uint64_t v4 = a1;
            uint64_t v3 = a2;
            goto LABEL_60;
          }
          v153(v186, v187, v5);
          v190 = (int *)type metadata accessor for StaticHH2Update(0);
          v186[v190[5]] = v187[v190[5]];
          uint64_t v191 = v190[6];
          int v192 = &v186[v191];
          v193 = &v187[v191];
          uint64_t v195 = *(void *)v193;
          uint64_t v194 = *((void *)v193 + 1);
          *(void *)int v192 = v195;
          *((void *)v192 + 1) = v194;
          uint64_t v196 = v190[7];
          uint64_t v197 = &v186[v196];
          uint64_t v198 = &v187[v196];
          v197[8] = v198[8];
          *(void *)uint64_t v197 = *(void *)v198;
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_59;
      }
      __dstc = v164;
      uint64_t v213 = *((void *)v187 + 1);
      *(void *)v186 = *(void *)v187;
      *((void *)v186 + 1) = v213;
      v214 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      uint64_t v215 = v214[5];
      uint64_t v216 = &v186[v215];
      v217 = &v187[v215];
      swift_bridgeObjectRetain();
      if (v610(v217, 1, v124))
      {
        uint64_t v218 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
        memcpy(v216, v217, *(void *)(*(void *)(v218 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v606 + 16))(v216, v217, v124);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v606 + 56))(v216, 0, 1, v124);
      }
      uint64_t v235 = v214[6];
      v236 = &v186[v235];
      uint64_t v237 = &v187[v235];
      uint64_t v238 = *((void *)v237 + 1);
      *(void *)v236 = *(void *)v237;
      *((void *)v236 + 1) = v238;
      uint64_t v239 = v214[7];
      v240 = &v186[v239];
      uint64_t v241 = &v187[v239];
      uint64_t v242 = *((void *)v241 + 1);
      *(void *)v240 = *(void *)v241;
      *((void *)v240 + 1) = v242;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v243 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
      v186[*(int *)(v243 + 48)] = v187[*(int *)(v243 + 48)];
      swift_storeEnumTagMultiPayload();
      uint64_t v4 = a1;
      uint64_t v3 = a2;
      v164 = __dstc;
LABEL_60:
      (*(void (**)(char *, void, uint64_t, uint64_t))(v167 + 56))(v164, 0, 1, v631);
LABEL_61:
      *(unsigned char *)(v4 + v7[29]) = *(unsigned char *)(v3 + v7[29]);
      *(unsigned char *)(v4 + v7[30]) = *(unsigned char *)(v3 + v7[30]);
      *(void *)(v4 + v7[31]) = *(void *)(v3 + v7[31]);
      swift_bridgeObjectRetain();
LABEL_71:
      swift_storeEnumTagMultiPayload();
      uint64_t v281 = a3[5];
      uint64_t v282 = v4 + v281;
      uint64_t v283 = v3 + v281;
      uint64_t v632 = v4 + v281;
      uint64_t v637 = v3 + v281;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v294 = sub_251F34DA0();
          uint64_t v612 = *(void *)(v294 - 8);
          v295 = *(void (**)(uint64_t, uint64_t, uint64_t))(v612 + 16);
          v295(v282, v283, v294);
          v296 = (int *)type metadata accessor for StaticService();
          uint64_t v297 = v296[5];
          v298 = (void *)(v282 + v297);
          v299 = (void *)(v283 + v297);
          uint64_t v300 = v299[1];
          void *v298 = *v299;
          v298[1] = v300;
          *(unsigned char *)(v282 + v296[6]) = *(unsigned char *)(v283 + v296[6]);
          *(unsigned char *)(v282 + v296[7]) = *(unsigned char *)(v283 + v296[7]);
          *(unsigned char *)(v282 + v296[8]) = *(unsigned char *)(v283 + v296[8]);
          *(unsigned char *)(v282 + v296[9]) = *(unsigned char *)(v283 + v296[9]);
          *(unsigned char *)(v282 + v296[10]) = *(unsigned char *)(v283 + v296[10]);
          uint64_t v301 = v296[11];
          uint64_t v302 = v282 + v301;
          uint64_t v303 = v283 + v301;
          swift_bridgeObjectRetain();
          v295(v302, v303, v294);
          uint64_t v304 = v296[12];
          uint64_t v305 = v282 + v304;
          uint64_t v306 = v283 + v304;
          *(void *)uint64_t v305 = *(void *)v306;
          *(unsigned char *)(v305 + 8) = *(unsigned char *)(v306 + 8);
          uint64_t v307 = v296[13];
          uint64_t v308 = (char *)(v282 + v307);
          uint64_t v309 = (char *)(v283 + v307);
          uint64_t v310 = (int *)type metadata accessor for StaticDeviceMetadata();
          uint64_t v311 = *((void *)v310 - 1);
          v614 = (void (*)(void *, const void *, uint64_t))v295;
          if ((*(unsigned int (**)(char *, uint64_t, int *))(v311 + 48))(v309, 1, v310))
          {
            uint64_t v312 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
            memcpy(v308, v309, *(void *)(*(void *)(v312 - 8) + 64));
          }
          else
          {
            v295((uint64_t)v308, (uint64_t)v309, v294);
            uint64_t v356 = v310[5];
            uint64_t v357 = &v308[v356];
            v358 = &v309[v356];
            uint64_t v359 = *((void *)v358 + 1);
            *(void *)uint64_t v357 = *(void *)v358;
            *((void *)v357 + 1) = v359;
            uint64_t v360 = v310[6];
            v361 = &v308[v360];
            uint64_t v362 = &v309[v360];
            uint64_t v607 = *((void *)v362 + 1);
            *(void *)v361 = *(void *)v362;
            *((void *)v361 + 1) = v607;
            uint64_t v363 = v310[7];
            v364 = &v308[v363];
            uint64_t v365 = &v309[v363];
            uint64_t v366 = *((void *)v365 + 1);
            *(void *)v364 = *(void *)v365;
            *((void *)v364 + 1) = v366;
            uint64_t v367 = v310[8];
            uint64_t v368 = &v308[v367];
            v369 = &v309[v367];
            uint64_t v370 = *((void *)v369 + 1);
            *(void *)uint64_t v368 = *(void *)v369;
            *((void *)v368 + 1) = v370;
            v308[v310[9]] = v309[v310[9]];
            v308[v310[10]] = v309[v310[10]];
            v308[v310[11]] = v309[v310[11]];
            v308[v310[12]] = v309[v310[12]];
            uint64_t v371 = *(void (**)(char *, void, uint64_t, int *))(v311 + 56);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v371(v308, 0, 1, v310);
          }
          uint64_t v372 = v296[14];
          v373 = (void *)(v282 + v372);
          uint64_t v374 = (const void *)(v283 + v372);
          uint64_t v375 = sub_251F34D20();
          uint64_t v376 = *(void *)(v375 - 8);
          v600 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v376 + 48);
          uint64_t v602 = v375;
          uint64_t v597 = v376;
          if (v600(v374, 1, v375))
          {
            uint64_t v377 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
            memcpy(v373, v374, *(void *)(*(void *)(v377 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v376 + 16))(v373, v374, v375);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v376 + 56))(v373, 0, 1, v375);
          }
          *(void *)(v282 + v296[15]) = *(void *)(v283 + v296[15]);
          uint64_t v404 = v296[16];
          v405 = (void *)(v282 + v404);
          uint64_t v406 = (void *)(v283 + v404);
          uint64_t v407 = v406[1];
          void *v405 = *v406;
          v405[1] = v407;
          *(unsigned char *)(v282 + v296[17]) = *(unsigned char *)(v283 + v296[17]);
          *(unsigned char *)(v282 + v296[18]) = *(unsigned char *)(v283 + v296[18]);
          *(unsigned char *)(v282 + v296[19]) = *(unsigned char *)(v283 + v296[19]);
          *(unsigned char *)(v282 + v296[20]) = *(unsigned char *)(v283 + v296[20]);
          uint64_t v408 = v296[21];
          v409 = (void *)(v282 + v408);
          uint64_t v410 = (void *)(v283 + v408);
          uint64_t v411 = v410[1];
          void *v409 = *v410;
          v409[1] = v411;
          *(unsigned char *)(v282 + v296[22]) = *(unsigned char *)(v283 + v296[22]);
          *(unsigned char *)(v282 + v296[23]) = *(unsigned char *)(v283 + v296[23]);
          *(unsigned char *)(v282 + v296[24]) = *(unsigned char *)(v283 + v296[24]);
          uint64_t v412 = v296[25];
          uint64_t v413 = (void *)(v282 + v412);
          uint64_t v414 = (const void *)(v283 + v412);
          v415 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v612 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v415(v414, 1, v294))
          {
            uint64_t v416 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
            memcpy(v413, v414, *(void *)(*(void *)(v416 - 8) + 64));
          }
          else
          {
            v614(v413, v414, v294);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v612 + 56))(v413, 0, 1, v294);
          }
          uint64_t v429 = v296[26];
          uint64_t v430 = (void *)(v282 + v429);
          uint64_t v431 = (const void *)(v637 + v429);
          v608 = v415;
          if (v415((const void *)(v637 + v429), 1, v294))
          {
            uint64_t v432 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
            memcpy(v430, v431, *(void *)(*(void *)(v432 - 8) + 64));
          }
          else
          {
            v614(v430, v431, v294);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v612 + 56))(v430, 0, 1, v294);
          }
          *(void *)(v282 + v296[27]) = *(void *)(v637 + v296[27]);
          *(void *)(v282 + v296[28]) = *(void *)(v637 + v296[28]);
          uint64_t v444 = v296[29];
          uint64_t v445 = (void *)(v282 + v444);
          uint64_t v446 = (void *)(v637 + v444);
          uint64_t v447 = v446[1];
          *uint64_t v445 = *v446;
          v445[1] = v447;
          uint64_t v448 = v296[30];
          v449 = (char *)(v282 + v448);
          v450 = (char *)(v637 + v448);
          uint64_t v451 = type metadata accessor for StaticSoftwareUpdate(0);
          int v452 = *(void **)(v451 - 8);
          v453 = (unsigned int (*)(char *, uint64_t, uint64_t))v452[6];
          uint64_t v454 = v451;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v453(v450, 1, v454))
          {
            uint64_t v455 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
            memcpy(v449, v450, *(void *)(*(void *)(v455 - 8) + 64));
            uint64_t v4 = a1;
            uint64_t v3 = a2;
LABEL_135:
            uint64_t v282 = v632;
            *(unsigned char *)(v632 + v296[31]) = *(unsigned char *)(v637 + v296[31]);
            *(void *)(v632 + v296[32]) = *(void *)(v637 + v296[32]);
            uint64_t v527 = v296[33];
            v528 = (void *)(v632 + v527);
            v529 = (const void *)(v637 + v527);
            swift_bridgeObjectRetain();
            if (v608(v529, 1, v294))
            {
              uint64_t v530 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
              memcpy(v528, v529, *(void *)(*(void *)(v530 - 8) + 64));
            }
            else
            {
              v614(v528, v529, v294);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v612 + 56))(v528, 0, 1, v294);
            }
            uint64_t v531 = v296[34];
            uint64_t v532 = v632 + v531;
            uint64_t v283 = v637;
            uint64_t v533 = v637 + v531;
            *(_WORD *)uint64_t v532 = *(_WORD *)v533;
            *(unsigned char *)(v532 + 2) = *(unsigned char *)(v533 + 2);
            uint64_t v534 = v296[35];
            uint64_t v535 = v632 + v534;
            uint64_t v536 = v637 + v534;
            *(_DWORD *)(v535 + 7) = *(_DWORD *)(v536 + 7);
            *(void *)uint64_t v535 = *(void *)v536;
            goto LABEL_139;
          }
          uint64_t v592 = (void (**)(char *, void, uint64_t, uint64_t))v452;
          v614(v449, v450, v294);
          uint64_t v593 = v454;
          uint64_t v595 = v449;
          uint64_t v470 = *(int *)(v454 + 20);
          uint64_t v471 = &v449[v470];
          uint64_t v472 = &v450[v470];
          uint64_t v473 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
          int v474 = swift_getEnumCaseMultiPayload();
          uint64_t v3 = a2;
          if (v474 == 2)
          {
            uint64_t v494 = *((void *)v472 + 1);
            *(void *)uint64_t v471 = *(void *)v472;
            *((void *)v471 + 1) = v494;
            v587 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
            uint64_t v495 = v587[5];
            uint64_t v589 = &v471[v495];
            uint64_t v496 = &v472[v495];
            swift_bridgeObjectRetain();
            uint64_t v588 = v496;
            if (v600(v496, 1, v602))
            {
LABEL_122:
              uint64_t v499 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
              memcpy(v589, v588, *(void *)(*(void *)(v499 - 8) + 64));
LABEL_132:
              uint64_t v518 = v587[6];
              v519 = &v471[v518];
              v520 = &v472[v518];
              uint64_t v521 = *((void *)v520 + 1);
              *(void *)v519 = *(void *)v520;
              *((void *)v519 + 1) = v521;
              uint64_t v522 = v587[7];
              v523 = &v471[v522];
              v524 = &v472[v522];
              uint64_t v525 = *((void *)v524 + 1);
              *(void *)v523 = *(void *)v524;
              *((void *)v523 + 1) = v525;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v526 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
              v471[*(int *)(v526 + 48)] = v472[*(int *)(v526 + 48)];
              goto LABEL_133;
            }
          }
          else
          {
            if (v474 != 1)
            {
              if (v474)
              {
                memcpy(v471, v472, *(void *)(*(void *)(v473 - 8) + 64));
LABEL_134:
                uint64_t v4 = a1;
                v592[7](v595, 0, 1, v593);
                goto LABEL_135;
              }
              v614(v471, v472, v294);
              v475 = (int *)type metadata accessor for StaticHH2Update(0);
              v471[v475[5]] = v472[v475[5]];
              uint64_t v476 = v475[6];
              uint64_t v477 = &v471[v476];
              uint64_t v478 = &v472[v476];
              uint64_t v480 = *(void *)v478;
              uint64_t v479 = *((void *)v478 + 1);
              *(void *)uint64_t v477 = v480;
              *((void *)v477 + 1) = v479;
              uint64_t v481 = v475[7];
              uint64_t v482 = &v471[v481];
              uint64_t v483 = &v472[v481];
              v482[8] = v483[8];
              *(void *)uint64_t v482 = *(void *)v483;
              swift_bridgeObjectRetain();
LABEL_133:
              swift_storeEnumTagMultiPayload();
              goto LABEL_134;
            }
            uint64_t v497 = *((void *)v472 + 1);
            *(void *)uint64_t v471 = *(void *)v472;
            *((void *)v471 + 1) = v497;
            v587 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
            uint64_t v498 = v587[5];
            uint64_t v589 = &v471[v498];
            uint64_t v496 = &v472[v498];
            swift_bridgeObjectRetain();
            uint64_t v588 = v496;
            if (v600(v496, 1, v602)) {
              goto LABEL_122;
            }
          }
          (*(void (**)(char *, char *, uint64_t))(v597 + 16))(v589, v496, v602);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v597 + 56))(v589, 0, 1, v602);
          goto LABEL_132;
        case 2u:
          uint64_t v313 = sub_251F34DA0();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v313 - 8) + 16))(v282, v283, v313);
          uint64_t v314 = (int *)type metadata accessor for StaticServiceGroup();
          uint64_t v315 = v314[5];
          uint64_t v316 = (void *)(v282 + v315);
          v317 = (uint64_t *)(v283 + v315);
          uint64_t v319 = *v317;
          uint64_t v318 = v317[1];
          *uint64_t v316 = v319;
          v316[1] = v318;
          *(unsigned char *)(v282 + v314[6]) = *(unsigned char *)(v283 + v314[6]);
          *(unsigned char *)(v282 + v314[7]) = *(unsigned char *)(v283 + v314[7]);
          *(void *)(v282 + v314[8]) = *(void *)(v283 + v314[8]);
          uint64_t v320 = v314[9];
          v321 = (void *)(v282 + v320);
          uint64_t v322 = (void *)(v283 + v320);
          uint64_t v323 = v322[1];
          void *v321 = *v322;
          v321[1] = v323;
          *(unsigned char *)(v282 + v314[10]) = *(unsigned char *)(v283 + v314[10]);
          *(void *)(v282 + v314[11]) = *(void *)(v283 + v314[11]);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_139;
        case 3u:
          uint64_t v324 = sub_251F34DA0();
          __dstuint64_t i = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v324 - 8) + 16);
          __dsti(v282, v283, v324);
          v325 = (int *)type metadata accessor for StaticEndpoint();
          uint64_t v326 = v325[5];
          uint64_t v327 = v282 + v326;
          uint64_t v328 = v283 + v326;
          *(void *)uint64_t v327 = *(void *)v328;
          *(_WORD *)(v327 + 8) = *(_WORD *)(v328 + 8);
          uint64_t v329 = v325[6];
          uint64_t v330 = (void *)(v282 + v329);
          uint64_t v331 = (void *)(v283 + v329);
          uint64_t v332 = v331[1];
          *uint64_t v330 = *v331;
          v330[1] = v332;
          *(void *)(v282 + v325[7]) = *(void *)(v283 + v325[7]);
          *(void *)(v282 + v325[8]) = *(void *)(v283 + v325[8]);
          *(void *)(v282 + v325[9]) = *(void *)(v283 + v325[9]);
          *(void *)(v282 + v325[10]) = *(void *)(v283 + v325[10]);
          uint64_t v333 = v325[11];
          uint64_t v334 = v282 + v333;
          uint64_t v335 = v283 + v333;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          __dsti(v334, v335, v324);
          *(void *)(v282 + v325[12]) = *(void *)(v283 + v325[12]);
          uint64_t v336 = v325[13];
          uint64_t v337 = v282 + v336;
          uint64_t v338 = v283 + v336;
          uint64_t v339 = *(void *)(v283 + v336 + 8);
          *(void *)uint64_t v337 = *(void *)(v283 + v336);
          *(void *)(v337 + 8) = v339;
          uint64_t v340 = *(void *)(v283 + v336 + 24);
          *(void *)(v337 + 16) = *(void *)(v283 + v336 + 16);
          *(void *)(v337 + 24) = v340;
          uint64_t v341 = *(void *)(v283 + v336 + 40);
          *(void *)(v337 + 32) = *(void *)(v283 + v336 + 32);
          *(void *)(v337 + 40) = v341;
          *(_DWORD *)(v337 + 48) = *(_DWORD *)(v283 + v336 + 48);
          uint64_t v342 = *(int *)(type metadata accessor for MatterTileMetadata() + 44);
          __dste = (void *)(v337 + v342);
          v343 = (const void *)(v338 + v342);
          uint64_t v344 = sub_251F34D20();
          uint64_t v345 = *(void *)(v344 - 8);
          uint64_t v346 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v345 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v346(v343, 1, v344))
          {
            uint64_t v347 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
            memcpy(__dste, v343, *(void *)(*(void *)(v347 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v345 + 16))(__dste, v343, v344);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v345 + 56))(__dste, 0, 1, v344);
          }
          uint64_t v378 = v325[14];
          uint64_t v282 = v632;
          uint64_t v379 = v632 + v378;
          uint64_t v283 = v637;
          uint64_t v380 = v637 + v378;
          *(_WORD *)uint64_t v379 = *(_WORD *)v380;
          *(unsigned char *)(v379 + 2) = *(unsigned char *)(v380 + 2);
          *(unsigned char *)(v632 + v325[15]) = *(unsigned char *)(v637 + v325[15]);
          swift_storeEnumTagMultiPayload();
          uint64_t v4 = a1;
          uint64_t v3 = a2;
          goto LABEL_140;
        default:
          uint64_t v284 = sub_251F34DA0();
          uint64_t v611 = *(void *)(v284 - 8);
          v285 = *(void (**)(uint64_t, uint64_t, uint64_t))(v611 + 16);
          v285(v282, v283, v284);
          v286 = (int *)type metadata accessor for StaticAccessory(0);
          uint64_t v287 = v286[5];
          v288 = (void *)(v282 + v287);
          v289 = (void *)(v283 + v287);
          uint64_t v290 = v289[1];
          void *v288 = *v289;
          v288[1] = v290;
          uint64_t v291 = v286[6];
          v292 = (void *)(v282 + v291);
          v293 = (void *)(v283 + v291);
          type metadata accessor for StaticAccessory.DeviceIdentifier(0);
          swift_bridgeObjectRetain();
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            v285((uint64_t)v292, (uint64_t)v293, v284);
          }
          else
          {
            uint64_t v348 = v293[1];
            void *v292 = *v293;
            v292[1] = v348;
            swift_bridgeObjectRetain();
          }
          uint64_t v349 = v285;
          swift_storeEnumTagMultiPayload();
          uint64_t v350 = v286[7];
          v351 = (char *)(v282 + v350);
          v352 = (char *)(v283 + v350);
          uint64_t v353 = (int *)type metadata accessor for StaticDeviceMetadata();
          uint64_t v354 = *((void *)v353 - 1);
          v615 = (void (*)(char *, char *, void *))v285;
          __dstf = (void *)v284;
          if ((*(unsigned int (**)(char *, uint64_t, int *))(v354 + 48))(v352, 1, v353))
          {
            uint64_t v355 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
            memcpy(v351, v352, *(void *)(*(void *)(v355 - 8) + 64));
          }
          else
          {
            v285((uint64_t)v351, (uint64_t)v352, v284);
            uint64_t v381 = v353[5];
            uint64_t v382 = &v351[v381];
            uint64_t v383 = &v352[v381];
            uint64_t v384 = *((void *)v383 + 1);
            *(void *)uint64_t v382 = *(void *)v383;
            *((void *)v382 + 1) = v384;
            uint64_t v385 = v353[6];
            uint64_t v386 = &v351[v385];
            v387 = &v352[v385];
            uint64_t v388 = *((void *)v387 + 1);
            *(void *)uint64_t v386 = *(void *)v387;
            *((void *)v386 + 1) = v388;
            uint64_t v389 = v353[7];
            v390 = &v351[v389];
            uint64_t v391 = &v352[v389];
            uint64_t v392 = *((void *)v391 + 1);
            *(void *)v390 = *(void *)v391;
            *((void *)v390 + 1) = v392;
            uint64_t v393 = v353[8];
            uint64_t v394 = &v351[v393];
            v395 = &v352[v393];
            uint64_t v396 = *((void *)v395 + 1);
            *(void *)uint64_t v394 = *(void *)v395;
            *((void *)v394 + 1) = v396;
            v351[v353[9]] = v352[v353[9]];
            v351[v353[10]] = v352[v353[10]];
            v351[v353[11]] = v352[v353[11]];
            v351[v353[12]] = v352[v353[12]];
            uint64_t v397 = *(void (**)(char *, void, uint64_t, int *))(v354 + 56);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v284 = (uint64_t)__dstf;
            swift_bridgeObjectRetain();
            uint64_t v349 = v285;
            swift_bridgeObjectRetain();
            v397(v351, 0, 1, v353);
          }
          uint64_t v398 = v286[8];
          v399 = (void *)(v282 + v398);
          v400 = (const void *)(v637 + v398);
          uint64_t v401 = sub_251F34D20();
          uint64_t v402 = *(void *)(v401 - 8);
          v604 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v402 + 48);
          uint64_t v601 = v402;
          if (v604(v400, 1, v401))
          {
            uint64_t v403 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
            memcpy(v399, v400, *(void *)(*(void *)(v403 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v402 + 16))(v399, v400, v401);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v402 + 56))(v399, 0, 1, v401);
          }
          uint64_t v417 = v286[9];
          uint64_t v418 = v282 + v417;
          uint64_t v419 = v637 + v417;
          *(void *)uint64_t v418 = *(void *)v419;
          *(unsigned char *)(v418 + 8) = *(unsigned char *)(v419 + 8);
          *(unsigned char *)(v282 + v286[10]) = *(unsigned char *)(v637 + v286[10]);
          v349(v282 + v286[11], v637 + v286[11], v284);
          *(void *)(v282 + v286[12]) = *(void *)(v637 + v286[12]);
          uint64_t v420 = v286[13];
          v421 = (void *)(v282 + v420);
          uint64_t v422 = (void *)(v637 + v420);
          uint64_t v423 = v422[1];
          void *v421 = *v422;
          v421[1] = v423;
          *(unsigned char *)(v282 + v286[14]) = *(unsigned char *)(v637 + v286[14]);
          *(unsigned char *)(v282 + v286[15]) = *(unsigned char *)(v637 + v286[15]);
          *(unsigned char *)(v282 + v286[16]) = *(unsigned char *)(v637 + v286[16]);
          *(unsigned char *)(v282 + v286[17]) = *(unsigned char *)(v637 + v286[17]);
          *(unsigned char *)(v282 + v286[18]) = *(unsigned char *)(v637 + v286[18]);
          *(void *)(v282 + v286[19]) = *(void *)(v637 + v286[19]);
          *(void *)(v282 + v286[20]) = *(void *)(v637 + v286[20]);
          uint64_t v424 = v286[21];
          v425 = (void *)(v282 + v424);
          uint64_t v426 = (const void *)(v637 + v424);
          uint64_t v427 = *(unsigned int (**)(const void *, uint64_t, void *))(v611 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v427(v426, 1, __dstf))
          {
            uint64_t v428 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
            memcpy(v425, v426, *(void *)(*(void *)(v428 - 8) + 64));
          }
          else
          {
            v285((uint64_t)v425, (uint64_t)v426, (uint64_t)__dstf);
            (*(void (**)(void *, void, uint64_t, void *))(v611 + 56))(v425, 0, 1, __dstf);
          }
          *(_WORD *)(v632 + v286[22]) = *(_WORD *)(v637 + v286[22]);
          uint64_t v433 = v286[23];
          uint64_t v434 = (void *)(v632 + v433);
          v435 = (void *)(v637 + v433);
          uint64_t v436 = v435[1];
          *uint64_t v434 = *v435;
          v434[1] = v436;
          *(void *)(v632 + v286[24]) = *(void *)(v637 + v286[24]);
          *(unsigned char *)(v632 + v286[25]) = *(unsigned char *)(v637 + v286[25]);
          *(unsigned char *)(v632 + v286[26]) = *(unsigned char *)(v637 + v286[26]);
          *(unsigned char *)(v632 + v286[27]) = *(unsigned char *)(v637 + v286[27]);
          uint64_t v437 = v286[28];
          uint64_t v438 = (char *)(v632 + v437);
          v439 = (char *)(v637 + v437);
          uint64_t v440 = type metadata accessor for StaticSoftwareUpdate(0);
          uint64_t v441 = *(void *)(v440 - 8);
          uint64_t v442 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v441 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v442(v439, 1, v440))
          {
            uint64_t v443 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
            memcpy(v438, v439, *(void *)(*(void *)(v443 - 8) + 64));
            uint64_t v4 = a1;
            uint64_t v283 = v637;
            uint64_t v3 = a2;
            goto LABEL_130;
          }
          v615(v438, v439, __dstf);
          uint64_t v456 = *(int *)(v440 + 20);
          uint64_t v457 = &v438[v456];
          uint64_t v458 = &v439[v456];
          uint64_t v459 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
          int v460 = swift_getEnumCaseMultiPayload();
          uint64_t v613 = v459;
          if (v460 == 2)
          {
            uint64_t v484 = *((void *)v458 + 1);
            *(void *)uint64_t v457 = *(void *)v458;
            *((void *)v457 + 1) = v484;
            __dstg = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
            uint64_t v485 = __dstg[5];
            uint64_t v486 = &v457[v485];
            v487 = &v458[v485];
            swift_bridgeObjectRetain();
            if (v604(v487, 1, v401))
            {
              uint64_t v488 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
              memcpy(v486, v487, *(void *)(*(void *)(v488 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v601 + 16))(v486, v487, v401);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v601 + 56))(v486, 0, 1, v401);
            }
            uint64_t v283 = v637;
            uint64_t v3 = a2;
            uint64_t v500 = __dstg[6];
            uint64_t v501 = &v457[v500];
            uint64_t v502 = &v458[v500];
            uint64_t v503 = *((void *)v502 + 1);
            *(void *)uint64_t v501 = *(void *)v502;
            *((void *)v501 + 1) = v503;
            uint64_t v504 = __dstg[7];
            uint64_t v505 = &v457[v504];
            uint64_t v506 = &v458[v504];
            uint64_t v507 = *((void *)v506 + 1);
            *(void *)uint64_t v505 = *(void *)v506;
            *((void *)v505 + 1) = v507;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v508 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
            v457[*(int *)(v508 + 48)] = v458[*(int *)(v508 + 48)];
            goto LABEL_128;
          }
          if (v460 == 1)
          {
            uint64_t v489 = *((void *)v458 + 1);
            *(void *)uint64_t v457 = *(void *)v458;
            *((void *)v457 + 1) = v489;
            uint64_t v490 = type metadata accessor for StaticSoftwareUpdateMetadata(0);
            uint64_t v491 = *(int *)(v490 + 20);
            uint64_t v616 = v490;
            __dsth = &v457[v491];
            uint64_t v492 = &v458[v491];
            swift_bridgeObjectRetain();
            uint64_t v283 = v637;
            if (v604(v492, 1, v401))
            {
              uint64_t v493 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
              memcpy(__dsth, v492, *(void *)(*(void *)(v493 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v601 + 16))(__dsth, v492, v401);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v601 + 56))(__dsth, 0, 1, v401);
            }
            uint64_t v3 = a2;
            uint64_t v509 = *(int *)(v616 + 24);
            uint64_t v510 = &v457[v509];
            uint64_t v511 = &v458[v509];
            uint64_t v512 = *((void *)v511 + 1);
            *(void *)uint64_t v510 = *(void *)v511;
            *((void *)v510 + 1) = v512;
            uint64_t v513 = *(int *)(v616 + 28);
            uint64_t v514 = &v457[v513];
            uint64_t v515 = &v458[v513];
            uint64_t v516 = *((void *)v515 + 1);
            *(void *)uint64_t v514 = *(void *)v515;
            *((void *)v514 + 1) = v516;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v517 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
            v457[*(int *)(v517 + 48)] = v458[*(int *)(v517 + 48)];
LABEL_128:
            swift_storeEnumTagMultiPayload();
            uint64_t v4 = a1;
            goto LABEL_129;
          }
          uint64_t v283 = v637;
          uint64_t v3 = a2;
          if (v460)
          {
            memcpy(v457, v458, *(void *)(*(void *)(v613 - 8) + 64));
          }
          else
          {
            v615(v457, v458, __dstf);
            v461 = (int *)type metadata accessor for StaticHH2Update(0);
            v457[v461[5]] = v458[v461[5]];
            uint64_t v462 = v461[6];
            v463 = &v457[v462];
            v464 = &v458[v462];
            uint64_t v466 = *(void *)v464;
            uint64_t v465 = *((void *)v464 + 1);
            *(void *)v463 = v466;
            *((void *)v463 + 1) = v465;
            uint64_t v467 = v461[7];
            uint64_t v468 = &v457[v467];
            v469 = &v458[v467];
            v468[8] = v469[8];
            *(void *)uint64_t v468 = *(void *)v469;
            swift_bridgeObjectRetain();
            swift_storeEnumTagMultiPayload();
          }
          uint64_t v4 = a1;
LABEL_129:
          (*(void (**)(char *, void, uint64_t, uint64_t))(v441 + 56))(v438, 0, 1, v440);
LABEL_130:
          uint64_t v282 = v632;
          *(unsigned char *)(v632 + v286[29]) = *(unsigned char *)(v283 + v286[29]);
          *(unsigned char *)(v632 + v286[30]) = *(unsigned char *)(v283 + v286[30]);
          *(void *)(v632 + v286[31]) = *(void *)(v283 + v286[31]);
          swift_bridgeObjectRetain();
LABEL_139:
          swift_storeEnumTagMultiPayload();
LABEL_140:
          uint64_t v537 = (int *)type metadata accessor for AccessoryDetailsBasicInfo();
          uint64_t v538 = v537[5];
          v539 = (void *)(v282 + v538);
          v540 = (void *)(v283 + v538);
          uint64_t v541 = v540[1];
          void *v539 = *v540;
          v539[1] = v541;
          uint64_t v542 = v537[6];
          v543 = (char *)(v282 + v542);
          uint64_t v544 = (char *)(v283 + v542);
          uint64_t v545 = (int *)type metadata accessor for StaticRoom(0);
          uint64_t v627 = *((void *)v545 - 1);
          v546 = *(unsigned int (**)(char *, uint64_t, int *))(v627 + 48);
          swift_bridgeObjectRetain();
          if (v546(v544, 1, v545))
          {
            uint64_t v547 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D138);
            memcpy(v543, v544, *(void *)(*(void *)(v547 - 8) + 64));
          }
          else
          {
            uint64_t v548 = sub_251F34DA0();
            uint64_t v549 = *(void (**)(char *, char *, uint64_t))(*(void *)(v548 - 8) + 16);
            v549(v543, v544, v548);
            uint64_t v550 = v545[5];
            uint64_t v551 = &v543[v550];
            uint64_t v552 = &v544[v550];
            uint64_t v553 = *((void *)v552 + 1);
            *(void *)uint64_t v551 = *(void *)v552;
            *((void *)v551 + 1) = v553;
            v543[v545[6]] = v544[v545[6]];
            *(void *)&v543[v545[7]] = *(void *)&v544[v545[7]];
            uint64_t v554 = v545[8];
            v555 = &v543[v554];
            uint64_t v556 = &v544[v554];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v549(v555, v556, v548);
            *(void *)&v543[v545[9]] = *(void *)&v544[v545[9]];
            *(void *)&v543[v545[10]] = *(void *)&v544[v545[10]];
            *(void *)&v543[v545[11]] = *(void *)&v544[v545[11]];
            *(void *)&v543[v545[12]] = *(void *)&v544[v545[12]];
            *(void *)&v543[v545[13]] = *(void *)&v544[v545[13]];
            *(void *)&v543[v545[14]] = *(void *)&v544[v545[14]];
            *(void *)&v543[v545[15]] = *(void *)&v544[v545[15]];
            *(void *)&v543[v545[16]] = *(void *)&v544[v545[16]];
            *(void *)&v543[v545[17]] = *(void *)&v544[v545[17]];
            *(void *)&v543[v545[18]] = *(void *)&v544[v545[18]];
            v628 = *(void (**)(char *, void, uint64_t, int *))(v627 + 56);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v3 = a2;
            swift_bridgeObjectRetain();
            uint64_t v4 = a1;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v628(v543, 0, 1, v545);
            uint64_t v283 = v637;
          }
          uint64_t v557 = v537[7];
          v558 = (void *)(v632 + v557);
          v559 = (void *)(v283 + v557);
          uint64_t v560 = v559[1];
          void *v558 = *v559;
          v558[1] = v560;
          *(unsigned char *)(v632 + v537[8]) = *(unsigned char *)(v283 + v537[8]);
          *(unsigned char *)(v632 + v537[9]) = *(unsigned char *)(v283 + v537[9]);
          *(unsigned char *)(v632 + v537[10]) = *(unsigned char *)(v283 + v537[10]);
          uint64_t v561 = a3[6];
          v562 = (char *)(v4 + v561);
          v563 = (char *)(v3 + v561);
          uint64_t v564 = (int *)type metadata accessor for StaticDeviceMetadata();
          uint64_t v565 = *((void *)v564 - 1);
          v566 = *(unsigned int (**)(char *, uint64_t, int *))(v565 + 48);
          swift_bridgeObjectRetain();
          if (v566(v563, 1, v564))
          {
            uint64_t v567 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
            memcpy(v562, v563, *(void *)(*(void *)(v567 - 8) + 64));
          }
          else
          {
            uint64_t v568 = sub_251F34DA0();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v568 - 8) + 16))(v562, v563, v568);
            uint64_t v569 = v564[5];
            v570 = &v562[v569];
            v571 = &v563[v569];
            uint64_t v572 = *((void *)v571 + 1);
            *(void *)v570 = *(void *)v571;
            *((void *)v570 + 1) = v572;
            uint64_t v573 = v564[6];
            v574 = &v562[v573];
            v575 = &v563[v573];
            uint64_t v576 = *((void *)v575 + 1);
            *(void *)v574 = *(void *)v575;
            *((void *)v574 + 1) = v576;
            uint64_t v577 = v564[7];
            uint64_t v578 = &v562[v577];
            uint64_t v579 = &v563[v577];
            uint64_t v580 = *((void *)v579 + 1);
            *(void *)uint64_t v578 = *(void *)v579;
            *((void *)v578 + 1) = v580;
            uint64_t v581 = v564[8];
            uint64_t v582 = &v562[v581];
            v583 = &v563[v581];
            uint64_t v584 = *((void *)v583 + 1);
            *(void *)uint64_t v582 = *(void *)v583;
            *((void *)v582 + 1) = v584;
            v562[v564[9]] = v563[v564[9]];
            v562[v564[10]] = v563[v564[10]];
            v562[v564[11]] = v563[v564[11]];
            v562[v564[12]] = v563[v564[12]];
            uint64_t v585 = *(void (**)(char *, void, uint64_t, int *))(v565 + 56);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v585(v562, 0, 1, v564);
          }
          *(unsigned char *)(v4 + a3[7]) = *(unsigned char *)(v3 + a3[7]);
          return v4;
      }
  }
}

uint64_t assignWithCopy for AccessoryDetails(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3 = a2;
  uint64_t v4 = a1;
  if (a1 == a2)
  {
    uint64_t v14 = a3[5];
    uint64_t v15 = a1 + v14;
    uint64_t v16 = a2 + v14;
    goto LABEL_145;
  }
  sub_251E760C4(a1, type metadata accessor for AccessoryDetails.Payload);
  type metadata accessor for AccessoryDetails.Payload(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v17 = sub_251F34DA0();
      uint64_t v18 = *(void *)(v17 - 8);
      uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16);
      v19(v4, v3, v17);
      uint64_t v20 = (int *)type metadata accessor for StaticService();
      uint64_t v21 = v20[5];
      uint64_t v22 = (void *)(v4 + v21);
      uint64_t v23 = (void *)(v3 + v21);
      *uint64_t v22 = *v23;
      v22[1] = v23[1];
      *(unsigned char *)(v4 + v20[6]) = *(unsigned char *)(v3 + v20[6]);
      *(unsigned char *)(v4 + v20[7]) = *(unsigned char *)(v3 + v20[7]);
      *(unsigned char *)(v4 + v20[8]) = *(unsigned char *)(v3 + v20[8]);
      *(unsigned char *)(v4 + v20[9]) = *(unsigned char *)(v3 + v20[9]);
      *(unsigned char *)(v4 + v20[10]) = *(unsigned char *)(v3 + v20[10]);
      uint64_t v24 = v20[11];
      uint64_t v25 = v4 + v24;
      uint64_t v26 = v3 + v24;
      swift_bridgeObjectRetain();
      v19(v25, v26, v17);
      uint64_t v27 = v20[12];
      uint64_t v28 = v4 + v27;
      uint64_t v29 = (uint64_t *)(v3 + v27);
      uint64_t v30 = *v29;
      *(unsigned char *)(v28 + 8) = *((unsigned char *)v29 + 8);
      *(void *)uint64_t v28 = v30;
      uint64_t v31 = v20[13];
      uint64_t v32 = (char *)(v4 + v31);
      uint64_t v33 = (char *)(v3 + v31);
      uint64_t v34 = (int *)type metadata accessor for StaticDeviceMetadata();
      __dst = (void *)*((void *)v34 - 1);
      uint64_t v578 = v18;
      uint64_t v598 = v17;
      if (((unsigned int (*)(char *, uint64_t, int *))__dst[6])(v33, 1, v34))
      {
        uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
        memcpy(v32, v33, *(void *)(*(void *)(v35 - 8) + 64));
      }
      else
      {
        v19((uint64_t)v32, (uint64_t)v33, v17);
        uint64_t v72 = v34[5];
        uint64_t v73 = &v32[v72];
        uint64_t v74 = &v33[v72];
        *(void *)uint64_t v73 = *(void *)v74;
        *((void *)v73 + 1) = *((void *)v74 + 1);
        uint64_t v75 = v34[6];
        uint64_t v76 = &v32[v75];
        uint64_t v77 = &v33[v75];
        *(void *)uint64_t v76 = *(void *)v77;
        *((void *)v76 + 1) = *((void *)v77 + 1);
        uint64_t v78 = v34[7];
        uint64_t v79 = &v32[v78];
        uint64_t v80 = &v33[v78];
        *(void *)uint64_t v79 = *(void *)v80;
        *((void *)v79 + 1) = *((void *)v80 + 1);
        uint64_t v81 = v34[8];
        uint64_t v82 = &v32[v81];
        int v83 = &v33[v81];
        *(void *)uint64_t v82 = *(void *)v83;
        *((void *)v82 + 1) = *((void *)v83 + 1);
        v32[v34[9]] = v33[v34[9]];
        v32[v34[10]] = v33[v34[10]];
        v32[v34[11]] = v33[v34[11]];
        v32[v34[12]] = v33[v34[12]];
        uint64_t v84 = (void (*)(char *, void, uint64_t, int *))__dst[7];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v3 = a2;
        swift_bridgeObjectRetain();
        uint64_t v4 = a1;
        swift_bridgeObjectRetain();
        v84(v32, 0, 1, v34);
      }
      uint64_t v36 = v18;
      uint64_t v85 = v20[14];
      uint64_t v86 = (void *)(v4 + v85);
      uint64_t v87 = (const void *)(v3 + v85);
      uint64_t v88 = sub_251F34D20();
      uint64_t v89 = *(void *)(v88 - 8);
      v571 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v89 + 48);
      uint64_t v573 = v88;
      uint64_t v567 = v89;
      if (v571(v87, 1, v88))
      {
        uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
        memcpy(v86, v87, *(void *)(*(void *)(v90 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v89 + 16))(v86, v87, v88);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v89 + 56))(v86, 0, 1, v88);
      }
      *(void *)(v4 + v20[15]) = *(void *)(v3 + v20[15]);
      uint64_t v114 = v20[16];
      uint64_t v115 = (void *)(v4 + v114);
      uint64_t v116 = (void *)(v3 + v114);
      *uint64_t v115 = *v116;
      v115[1] = v116[1];
      *(unsigned char *)(v4 + v20[17]) = *(unsigned char *)(v3 + v20[17]);
      *(unsigned char *)(v4 + v20[18]) = *(unsigned char *)(v3 + v20[18]);
      *(unsigned char *)(v4 + v20[19]) = *(unsigned char *)(v3 + v20[19]);
      *(unsigned char *)(v4 + v20[20]) = *(unsigned char *)(v3 + v20[20]);
      uint64_t v117 = v20[21];
      uint64_t v118 = (void *)(v4 + v117);
      uint64_t v119 = (void *)(v3 + v117);
      *uint64_t v118 = *v119;
      v118[1] = v119[1];
      *(unsigned char *)(v4 + v20[22]) = *(unsigned char *)(v3 + v20[22]);
      *(unsigned char *)(v4 + v20[23]) = *(unsigned char *)(v3 + v20[23]);
      *(unsigned char *)(v4 + v20[24]) = *(unsigned char *)(v3 + v20[24]);
      uint64_t v120 = v20[25];
      uint64_t v121 = (void *)(v4 + v120);
      uint64_t v122 = (const void *)(v3 + v120);
      uint64_t v123 = v36;
      uint64_t v124 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      __dsta = v124;
      if (v124((uint64_t)v122, 1, v598))
      {
        uint64_t v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
        memcpy(v121, v122, *(void *)(*(void *)(v125 - 8) + 64));
        uint64_t v126 = (void (*)(void *, const void *, uint64_t))v19;
      }
      else
      {
        uint64_t v126 = (void (*)(void *, const void *, uint64_t))v19;
        v19((uint64_t)v121, (uint64_t)v122, v598);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v123 + 56))(v121, 0, 1, v598);
      }
      uint64_t v139 = v20[26];
      v140 = (void *)(v4 + v139);
      uint64_t v141 = (const void *)(a2 + v139);
      if (__dsta(a2 + v139, 1, v598))
      {
        uint64_t v142 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
        memcpy(v140, v141, *(void *)(*(void *)(v142 - 8) + 64));
      }
      else
      {
        v126(v140, v141, v598);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v578 + 56))(v140, 0, 1, v598);
      }
      *(void *)(v4 + v20[27]) = *(void *)(a2 + v20[27]);
      *(void *)(v4 + v20[28]) = *(void *)(a2 + v20[28]);
      uint64_t v154 = v20[29];
      uint64_t v155 = (void *)(v4 + v154);
      v156 = (void *)(a2 + v154);
      *uint64_t v155 = *v156;
      v155[1] = v156[1];
      uint64_t v157 = v20[30];
      uint64_t v158 = (char *)(v4 + v157);
      uint64_t v159 = (char *)(a2 + v157);
      uint64_t v160 = type metadata accessor for StaticSoftwareUpdate(0);
      uint64_t v161 = *(void *)(v160 - 8);
      uint64_t v162 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v161 + 48);
      uint64_t v163 = v160;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v162(v159, 1, v163))
      {
        uint64_t v164 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
        memcpy(v158, v159, *(void *)(*(void *)(v164 - 8) + 64));
        uint64_t v4 = a1;
        uint64_t v3 = a2;
        uint64_t v165 = v598;
      }
      else
      {
        uint64_t v562 = v161;
        uint64_t v165 = v598;
        v19((uint64_t)v158, (uint64_t)v159, v598);
        uint64_t v564 = v163;
        v566 = v158;
        uint64_t v179 = *(int *)(v163 + 20);
        v180 = &v158[v179];
        uint64_t v181 = &v159[v179];
        uint64_t v182 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          *(void *)v180 = *(void *)v181;
          *((void *)v180 + 1) = *((void *)v181 + 1);
          uint64_t updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
          uint64_t v202 = updated[5];
          v203 = &v180[v202];
          v204 = &v181[v202];
          swift_bridgeObjectRetain();
          if (v571(v204, 1, v573))
          {
            uint64_t v205 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
            memcpy(v203, v204, *(void *)(*(void *)(v205 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v567 + 16))(v203, v204, v573);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v567 + 56))(v203, 0, 1, v573);
          }
          uint64_t v3 = a2;
          uint64_t v224 = updated[6];
          uint64_t v225 = &v180[v224];
          uint64_t v226 = &v181[v224];
          *(void *)uint64_t v225 = *(void *)v226;
          *((void *)v225 + 1) = *((void *)v226 + 1);
          uint64_t v227 = updated[7];
          uint64_t v228 = &v180[v227];
          uint64_t v229 = &v181[v227];
          *(void *)uint64_t v228 = *(void *)v229;
          *((void *)v228 + 1) = *((void *)v229 + 1);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v230 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
          v180[*(int *)(v230 + 48)] = v181[*(int *)(v230 + 48)];
          swift_storeEnumTagMultiPayload();
          uint64_t v4 = a1;
        }
        else if (EnumCaseMultiPayload == 1)
        {
          *(void *)v180 = *(void *)v181;
          *((void *)v180 + 1) = *((void *)v181 + 1);
          v206 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
          uint64_t v207 = v206[5];
          v558 = &v180[v207];
          uint64_t v208 = &v181[v207];
          swift_bridgeObjectRetain();
          uint64_t v3 = a2;
          if (v571(v208, 1, v573))
          {
            uint64_t v209 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
            memcpy(v558, v208, *(void *)(*(void *)(v209 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v567 + 16))(v558, v208, v573);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v567 + 56))(v558, 0, 1, v573);
          }
          uint64_t v231 = v206[6];
          uint64_t v232 = &v180[v231];
          uint64_t v233 = &v181[v231];
          *(void *)uint64_t v232 = *(void *)v233;
          *((void *)v232 + 1) = *((void *)v233 + 1);
          uint64_t v234 = v206[7];
          uint64_t v235 = &v180[v234];
          v236 = &v181[v234];
          *(void *)uint64_t v235 = *(void *)v236;
          *((void *)v235 + 1) = *((void *)v236 + 1);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v237 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
          v180[*(int *)(v237 + 48)] = v181[*(int *)(v237 + 48)];
          swift_storeEnumTagMultiPayload();
          uint64_t v4 = a1;
          uint64_t v165 = v598;
        }
        else
        {
          uint64_t v3 = a2;
          if (EnumCaseMultiPayload)
          {
            memcpy(v180, v181, *(void *)(*(void *)(v182 - 8) + 64));
          }
          else
          {
            v19((uint64_t)v180, (uint64_t)v181, v598);
            uint64_t v184 = (int *)type metadata accessor for StaticHH2Update(0);
            v180[v184[5]] = v181[v184[5]];
            uint64_t v185 = v184[6];
            v186 = &v180[v185];
            uint64_t v187 = &v181[v185];
            *(void *)v186 = *(void *)v187;
            *((void *)v186 + 1) = *((void *)v187 + 1);
            uint64_t v188 = v184[7];
            int v189 = &v180[v188];
            v190 = &v181[v188];
            char v191 = v190[8];
            *(void *)int v189 = *(void *)v190;
            v189[8] = v191;
            swift_bridgeObjectRetain();
            swift_storeEnumTagMultiPayload();
          }
          uint64_t v4 = a1;
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v562 + 56))(v566, 0, 1, v564);
      }
      *(unsigned char *)(v4 + v20[31]) = *(unsigned char *)(v3 + v20[31]);
      *(void *)(v4 + v20[32]) = *(void *)(v3 + v20[32]);
      uint64_t v238 = v20[33];
      uint64_t v239 = (void *)(v4 + v238);
      v240 = (const void *)(v3 + v238);
      swift_bridgeObjectRetain();
      if (__dsta((uint64_t)v240, 1, v165))
      {
        uint64_t v241 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
        memcpy(v239, v240, *(void *)(*(void *)(v241 - 8) + 64));
      }
      else
      {
        v19((uint64_t)v239, (uint64_t)v240, v165);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v578 + 56))(v239, 0, 1, v165);
      }
      uint64_t v242 = v20[34];
      uint64_t v243 = v4 + v242;
      uint64_t v244 = (__int16 *)(v3 + v242);
      __int16 v245 = *v244;
      *(unsigned char *)(v243 + 2) = *((unsigned char *)v244 + 2);
      *(_WORD *)uint64_t v243 = v245;
      uint64_t v246 = v20[35];
      uint64_t v247 = v4 + v246;
      uint64_t v248 = (uint64_t *)(v3 + v246);
      uint64_t v249 = *v248;
      *(_DWORD *)(v247 + 7) = *(_DWORD *)((char *)v248 + 7);
      *(void *)uint64_t v247 = v249;
      goto LABEL_73;
    case 2u:
      uint64_t v37 = sub_251F34DA0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 16))(v4, v3, v37);
      uint64_t v38 = (int *)type metadata accessor for StaticServiceGroup();
      uint64_t v39 = v38[5];
      uint64_t v40 = (void *)(v4 + v39);
      uint64_t v41 = (void *)(v3 + v39);
      *uint64_t v40 = *v41;
      v40[1] = v41[1];
      *(unsigned char *)(v4 + v38[6]) = *(unsigned char *)(v3 + v38[6]);
      *(unsigned char *)(v4 + v38[7]) = *(unsigned char *)(v3 + v38[7]);
      *(void *)(v4 + v38[8]) = *(void *)(v3 + v38[8]);
      uint64_t v42 = v38[9];
      unsigned int v43 = (void *)(v4 + v42);
      uint64_t v44 = (void *)(v3 + v42);
      *unsigned int v43 = *v44;
      v43[1] = v44[1];
      *(unsigned char *)(v4 + v38[10]) = *(unsigned char *)(v3 + v38[10]);
      *(void *)(v4 + v38[11]) = *(void *)(v3 + v38[11]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_73;
    case 3u:
      uint64_t v45 = sub_251F34DA0();
      uint64_t v599 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 16);
      v599(v4, v3, v45);
      uint64_t v46 = (int *)type metadata accessor for StaticEndpoint();
      uint64_t v47 = v46[5];
      uint64_t v48 = v4 + v47;
      uint64_t v49 = v3 + v47;
      __int16 v50 = *(_WORD *)(v49 + 8);
      *(void *)uint64_t v48 = *(void *)v49;
      *(_WORD *)(v48 + 8) = v50;
      uint64_t v51 = v46[6];
      uint64_t v52 = (void *)(v4 + v51);
      uint64_t v53 = (void *)(v3 + v51);
      *uint64_t v52 = *v53;
      v52[1] = v53[1];
      *(void *)(v4 + v46[7]) = *(void *)(v3 + v46[7]);
      *(void *)(v4 + v46[8]) = *(void *)(v3 + v46[8]);
      *(void *)(v4 + v46[9]) = *(void *)(v3 + v46[9]);
      *(void *)(v4 + v46[10]) = *(void *)(v3 + v46[10]);
      uint64_t v54 = v46[11];
      uint64_t v55 = v4 + v54;
      uint64_t v56 = v3 + v54;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v599(v55, v56, v45);
      *(void *)(v4 + v46[12]) = *(void *)(v3 + v46[12]);
      uint64_t v57 = v46[13];
      uint64_t v58 = v4 + v57;
      uint64_t v59 = v3 + v57;
      *(void *)uint64_t v58 = *(void *)(v3 + v57);
      *(void *)(v58 + 8) = *(void *)(v3 + v57 + 8);
      *(void *)(v58 + 16) = *(void *)(v3 + v57 + 16);
      *(void *)(v58 + 24) = *(void *)(v3 + v57 + 24);
      *(void *)(v58 + 32) = *(void *)(v3 + v57 + 32);
      *(void *)(v58 + 40) = *(void *)(v3 + v57 + 40);
      *(unsigned char *)(v58 + 48) = *(unsigned char *)(v3 + v57 + 48);
      *(unsigned char *)(v58 + 49) = *(unsigned char *)(v3 + v57 + 49);
      *(unsigned char *)(v58 + 50) = *(unsigned char *)(v3 + v57 + 50);
      *(unsigned char *)(v58 + 51) = *(unsigned char *)(v3 + v57 + 51);
      uint64_t v60 = *(int *)(type metadata accessor for MatterTileMetadata() + 44);
      v600 = (void *)(v58 + v60);
      uint64_t v61 = (const void *)(v59 + v60);
      uint64_t v62 = sub_251F34D20();
      uint64_t v63 = *(void *)(v62 - 8);
      uint64_t v64 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v63 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v64(v61, 1, v62))
      {
        uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
        memcpy(v600, v61, *(void *)(*(void *)(v65 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v63 + 16))(v600, v61, v62);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v63 + 56))(v600, 0, 1, v62);
      }
      uint64_t v91 = v46[14];
      uint64_t v4 = a1;
      uint64_t v92 = a1 + v91;
      uint64_t v3 = a2;
      uint64_t v93 = (__int16 *)(a2 + v91);
      __int16 v94 = *v93;
      *(unsigned char *)(v92 + 2) = *((unsigned char *)v93 + 2);
      *(_WORD *)uint64_t v92 = v94;
      *(unsigned char *)(a1 + v46[15]) = *(unsigned char *)(a2 + v46[15]);
      goto LABEL_73;
    default:
      uint64_t v5 = sub_251F34DA0();
      uint64_t v592 = *(void *)(v5 - 8);
      uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v592 + 16);
      v6(v4, v3, v5);
      uint64_t v7 = (int *)type metadata accessor for StaticAccessory(0);
      uint64_t v8 = v7[5];
      uint64_t v9 = (void *)(v4 + v8);
      uint64_t v10 = (void *)(v3 + v8);
      *uint64_t v9 = *v10;
      v9[1] = v10[1];
      uint64_t v11 = v7[6];
      uint64_t v12 = (void *)(v4 + v11);
      uint64_t v13 = (void *)(v3 + v11);
      type metadata accessor for StaticAccessory.DeviceIdentifier(0);
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v6((uint64_t)v12, (uint64_t)v13, v5);
      }
      else
      {
        *uint64_t v12 = *v13;
        v12[1] = v13[1];
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v66 = v7[7];
      uint64_t v67 = (char *)(v4 + v66);
      uint64_t v68 = (char *)(v3 + v66);
      uint64_t v69 = (int *)type metadata accessor for StaticDeviceMetadata();
      uint64_t v70 = *((void *)v69 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v70 + 48))(v68, 1, v69))
      {
        uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
        memcpy(v67, v68, *(void *)(*(void *)(v71 - 8) + 64));
      }
      else
      {
        v6((uint64_t)v67, (uint64_t)v68, v5);
        uint64_t v95 = v69[5];
        uint64_t v96 = &v67[v95];
        uint64_t v97 = &v68[v95];
        *(void *)uint64_t v96 = *(void *)v97;
        *((void *)v96 + 1) = *((void *)v97 + 1);
        uint64_t v98 = v69[6];
        uint64_t v99 = &v67[v98];
        uint64_t v100 = &v68[v98];
        *(void *)uint64_t v99 = *(void *)v100;
        *((void *)v99 + 1) = *((void *)v100 + 1);
        uint64_t v101 = v69[7];
        uint64_t v102 = &v67[v101];
        uint64_t v103 = &v68[v101];
        *(void *)uint64_t v102 = *(void *)v103;
        *((void *)v102 + 1) = *((void *)v103 + 1);
        uint64_t v104 = v69[8];
        uint64_t v105 = &v67[v104];
        uint64_t v106 = &v68[v104];
        *(void *)uint64_t v105 = *(void *)v106;
        *((void *)v105 + 1) = *((void *)v106 + 1);
        v67[v69[9]] = v68[v69[9]];
        v67[v69[10]] = v68[v69[10]];
        v67[v69[11]] = v68[v69[11]];
        v67[v69[12]] = v68[v69[12]];
        uint64_t v107 = *(void (**)(char *, void, uint64_t, int *))(v70 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v3 = a2;
        swift_bridgeObjectRetain();
        uint64_t v4 = a1;
        swift_bridgeObjectRetain();
        v107(v67, 0, 1, v69);
      }
      uint64_t v108 = v7[8];
      uint64_t v109 = (void *)(v4 + v108);
      uint64_t v110 = (const void *)(v3 + v108);
      uint64_t v111 = sub_251F34D20();
      uint64_t v112 = *(void *)(v111 - 8);
      uint64_t v579 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v112 + 48);
      uint64_t v574 = v112;
      if (v579(v110, 1, v111))
      {
        uint64_t v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
        memcpy(v109, v110, *(void *)(*(void *)(v113 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v112 + 16))(v109, v110, v111);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v112 + 56))(v109, 0, 1, v111);
      }
      uint64_t v127 = v7[9];
      uint64_t v128 = v4 + v127;
      uint64_t v129 = (uint64_t *)(v3 + v127);
      uint64_t v130 = *v129;
      *(unsigned char *)(v128 + 8) = *((unsigned char *)v129 + 8);
      *(void *)uint64_t v128 = v130;
      *(unsigned char *)(v4 + v7[10]) = *(unsigned char *)(v3 + v7[10]);
      v6(v4 + v7[11], v3 + v7[11], v5);
      *(void *)(v4 + v7[12]) = *(void *)(v3 + v7[12]);
      uint64_t v131 = v7[13];
      uint64_t v132 = (void *)(v4 + v131);
      uint64_t v133 = (void *)(v3 + v131);
      *uint64_t v132 = *v133;
      v132[1] = v133[1];
      *(unsigned char *)(v4 + v7[14]) = *(unsigned char *)(v3 + v7[14]);
      *(unsigned char *)(v4 + v7[15]) = *(unsigned char *)(v3 + v7[15]);
      *(unsigned char *)(v4 + v7[16]) = *(unsigned char *)(v3 + v7[16]);
      *(unsigned char *)(v4 + v7[17]) = *(unsigned char *)(v3 + v7[17]);
      *(unsigned char *)(v4 + v7[18]) = *(unsigned char *)(v3 + v7[18]);
      *(void *)(v4 + v7[19]) = *(void *)(v3 + v7[19]);
      *(void *)(v4 + v7[20]) = *(void *)(v3 + v7[20]);
      uint64_t v134 = v7[21];
      __dstb = (void *)(v4 + v134);
      uint64_t v135 = (const void *)(v3 + v134);
      uint64_t v136 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v592 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v137 = (void (*)(char *, char *, uint64_t))v6;
      if (v136(v135, 1, v5))
      {
        uint64_t v138 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
        memcpy(__dstb, v135, *(void *)(*(void *)(v138 - 8) + 64));
      }
      else
      {
        v6((uint64_t)__dstb, (uint64_t)v135, v5);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v592 + 56))(__dstb, 0, 1, v5);
      }
      *(_WORD *)(a1 + v7[22]) = *(_WORD *)(a2 + v7[22]);
      uint64_t v143 = v7[23];
      uint64_t v144 = (void *)(a1 + v143);
      uint64_t v145 = (void *)(a2 + v143);
      *uint64_t v144 = *v145;
      v144[1] = v145[1];
      *(void *)(a1 + v7[24]) = *(void *)(a2 + v7[24]);
      *(unsigned char *)(a1 + v7[25]) = *(unsigned char *)(a2 + v7[25]);
      *(unsigned char *)(a1 + v7[26]) = *(unsigned char *)(a2 + v7[26]);
      *(unsigned char *)(a1 + v7[27]) = *(unsigned char *)(a2 + v7[27]);
      uint64_t v146 = v7[28];
      int64_t v147 = (char *)(a1 + v146);
      uint64_t v148 = (char *)(a2 + v146);
      uint64_t v149 = type metadata accessor for StaticSoftwareUpdate(0);
      uint64_t v150 = *(void *)(v149 - 8);
      v151 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v150 + 48);
      uint64_t v152 = v149;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v151(v148, 1, v152))
      {
        uint64_t v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
        memcpy(v147, v148, *(void *)(*(void *)(v153 - 8) + 64));
        uint64_t v4 = a1;
        uint64_t v3 = a2;
        goto LABEL_63;
      }
      v137(v147, v148, v5);
      uint64_t v593 = v152;
      uint64_t v166 = *(int *)(v152 + 20);
      uint64_t v167 = &v147[v166];
      v168 = &v148[v166];
      uint64_t v169 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
      int v170 = swift_getEnumCaseMultiPayload();
      if (v170 != 2)
      {
        if (v170 == 1)
        {
          __dstd = v147;
          *(void *)uint64_t v167 = *(void *)v168;
          *((void *)v167 + 1) = *((void *)v168 + 1);
          uint64_t v197 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
          uint64_t v198 = v197[5];
          uint64_t v199 = &v167[v198];
          v200 = &v168[v198];
          swift_bridgeObjectRetain();
          if (v579(v200, 1, v111))
          {
            uint64_t v201 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
            memcpy(v199, v200, *(void *)(*(void *)(v201 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v574 + 16))(v199, v200, v111);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v574 + 56))(v199, 0, 1, v111);
          }
          int64_t v147 = __dstd;
          uint64_t v217 = v197[6];
          uint64_t v218 = &v167[v217];
          uint64_t v219 = &v168[v217];
          *(void *)uint64_t v218 = *(void *)v219;
          *((void *)v218 + 1) = *((void *)v219 + 1);
          uint64_t v220 = v197[7];
          uint64_t v221 = &v167[v220];
          uint64_t v222 = &v168[v220];
          *(void *)uint64_t v221 = *(void *)v222;
          *((void *)v221 + 1) = *((void *)v222 + 1);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v223 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
          v167[*(int *)(v223 + 48)] = v168[*(int *)(v223 + 48)];
        }
        else
        {
          if (v170)
          {
            memcpy(v167, v168, *(void *)(*(void *)(v169 - 8) + 64));
LABEL_61:
            uint64_t v4 = a1;
            uint64_t v3 = a2;
            goto LABEL_62;
          }
          v137(v167, v168, v5);
          uint64_t v171 = (int *)type metadata accessor for StaticHH2Update(0);
          v167[v171[5]] = v168[v171[5]];
          uint64_t v172 = v171[6];
          uint64_t v173 = &v167[v172];
          uint64_t v174 = &v168[v172];
          *(void *)uint64_t v173 = *(void *)v174;
          *((void *)v173 + 1) = *((void *)v174 + 1);
          uint64_t v175 = v171[7];
          v176 = &v167[v175];
          uint64_t v177 = &v168[v175];
          char v178 = v177[8];
          *(void *)v176 = *(void *)v177;
          v176[8] = v178;
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_61;
      }
      __dstc = v147;
      *(void *)uint64_t v167 = *(void *)v168;
      *((void *)v167 + 1) = *((void *)v168 + 1);
      int v192 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
      uint64_t v193 = v192[5];
      uint64_t v194 = &v167[v193];
      uint64_t v195 = &v168[v193];
      swift_bridgeObjectRetain();
      if (v579(v195, 1, v111))
      {
        uint64_t v196 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
        memcpy(v194, v195, *(void *)(*(void *)(v196 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v574 + 16))(v194, v195, v111);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v574 + 56))(v194, 0, 1, v111);
      }
      uint64_t v210 = v192[6];
      uint64_t v211 = &v167[v210];
      uint64_t v212 = &v168[v210];
      *(void *)uint64_t v211 = *(void *)v212;
      *((void *)v211 + 1) = *((void *)v212 + 1);
      uint64_t v213 = v192[7];
      v214 = &v167[v213];
      uint64_t v215 = &v168[v213];
      *(void *)v214 = *(void *)v215;
      *((void *)v214 + 1) = *((void *)v215 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v216 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
      v167[*(int *)(v216 + 48)] = v168[*(int *)(v216 + 48)];
      swift_storeEnumTagMultiPayload();
      uint64_t v4 = a1;
      uint64_t v3 = a2;
      int64_t v147 = __dstc;
LABEL_62:
      (*(void (**)(char *, void, uint64_t, uint64_t))(v150 + 56))(v147, 0, 1, v593);
LABEL_63:
      *(unsigned char *)(v4 + v7[29]) = *(unsigned char *)(v3 + v7[29]);
      *(unsigned char *)(v4 + v7[30]) = *(unsigned char *)(v3 + v7[30]);
      *(void *)(v4 + v7[31]) = *(void *)(v3 + v7[31]);
      swift_bridgeObjectRetain();
LABEL_73:
      swift_storeEnumTagMultiPayload();
      uint64_t v250 = a3[5];
      uint64_t v15 = v4 + v250;
      uint64_t v16 = v3 + v250;
      sub_251E760C4(v4 + v250, type metadata accessor for AccessoryDetails.Payload);
      uint64_t v594 = v15;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v260 = sub_251F34DA0();
          uint64_t v576 = *(void *)(v260 - 8);
          uint64_t v261 = *(void (**)(uint64_t, uint64_t, uint64_t))(v576 + 16);
          v261(v15, v16, v260);
          uint64_t v262 = (int *)type metadata accessor for StaticService();
          uint64_t v263 = v262[5];
          uint64_t v264 = (void *)(v15 + v263);
          uint64_t v265 = (void *)(v16 + v263);
          *uint64_t v264 = *v265;
          v264[1] = v265[1];
          *(unsigned char *)(v15 + v262[6]) = *(unsigned char *)(v16 + v262[6]);
          *(unsigned char *)(v15 + v262[7]) = *(unsigned char *)(v16 + v262[7]);
          *(unsigned char *)(v15 + v262[8]) = *(unsigned char *)(v16 + v262[8]);
          *(unsigned char *)(v15 + v262[9]) = *(unsigned char *)(v16 + v262[9]);
          *(unsigned char *)(v15 + v262[10]) = *(unsigned char *)(v16 + v262[10]);
          uint64_t v266 = v262[11];
          uint64_t v267 = v15 + v266;
          uint64_t v268 = v16 + v266;
          swift_bridgeObjectRetain();
          v261(v267, v268, v260);
          uint64_t v269 = v262[12];
          uint64_t v270 = v15 + v269;
          uint64_t v271 = (uint64_t *)(v16 + v269);
          uint64_t v272 = *v271;
          *(unsigned char *)(v270 + 8) = *((unsigned char *)v271 + 8);
          *(void *)uint64_t v270 = v272;
          uint64_t v273 = v262[13];
          uint64_t v274 = (char *)(v15 + v273);
          uint64_t v275 = (char *)(v16 + v273);
          uint64_t v276 = (int *)type metadata accessor for StaticDeviceMetadata();
          uint64_t v277 = *((void *)v276 - 1);
          uint64_t v582 = (void (*)(void *, const void *, uint64_t))v261;
          if ((*(unsigned int (**)(char *, uint64_t, int *))(v277 + 48))(v275, 1, v276))
          {
            uint64_t v278 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
            memcpy(v274, v275, *(void *)(*(void *)(v278 - 8) + 64));
          }
          else
          {
            v261((uint64_t)v274, (uint64_t)v275, v260);
            uint64_t v314 = v276[5];
            uint64_t v315 = &v274[v314];
            uint64_t v316 = &v275[v314];
            *(void *)uint64_t v315 = *(void *)v316;
            *((void *)v315 + 1) = *((void *)v316 + 1);
            uint64_t v317 = v276[6];
            uint64_t v318 = &v274[v317];
            uint64_t v319 = &v275[v317];
            *(void *)uint64_t v318 = *(void *)v319;
            *((void *)v318 + 1) = *((void *)v319 + 1);
            uint64_t v320 = v276[7];
            v321 = &v274[v320];
            uint64_t v322 = &v275[v320];
            *(void *)v321 = *(void *)v322;
            *((void *)v321 + 1) = *((void *)v322 + 1);
            uint64_t v323 = v276[8];
            uint64_t v324 = &v274[v323];
            v325 = &v275[v323];
            *(void *)uint64_t v324 = *(void *)v325;
            *((void *)v324 + 1) = *((void *)v325 + 1);
            v274[v276[9]] = v275[v276[9]];
            v274[v276[10]] = v275[v276[10]];
            v274[v276[11]] = v275[v276[11]];
            v274[v276[12]] = v275[v276[12]];
            uint64_t v326 = *(void (**)(char *, void, uint64_t, int *))(v277 + 56);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v326(v274, 0, 1, v276);
          }
          uint64_t v327 = v262[14];
          uint64_t v328 = (void *)(v15 + v327);
          uint64_t v329 = (const void *)(v16 + v327);
          uint64_t v330 = sub_251F34D20();
          uint64_t v331 = *(void *)(v330 - 8);
          uint64_t v568 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v331 + 48);
          uint64_t v569 = v330;
          uint64_t v565 = v331;
          if (v568(v329, 1, v330))
          {
            uint64_t v332 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
            memcpy(v328, v329, *(void *)(*(void *)(v332 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v331 + 16))(v328, v329, v330);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v331 + 56))(v328, 0, 1, v330);
          }
          *(void *)(v15 + v262[15]) = *(void *)(v16 + v262[15]);
          uint64_t v356 = v262[16];
          uint64_t v357 = (void *)(v15 + v356);
          v358 = (void *)(v16 + v356);
          *uint64_t v357 = *v358;
          v357[1] = v358[1];
          *(unsigned char *)(v15 + v262[17]) = *(unsigned char *)(v16 + v262[17]);
          *(unsigned char *)(v15 + v262[18]) = *(unsigned char *)(v16 + v262[18]);
          *(unsigned char *)(v15 + v262[19]) = *(unsigned char *)(v16 + v262[19]);
          *(unsigned char *)(v15 + v262[20]) = *(unsigned char *)(v16 + v262[20]);
          uint64_t v359 = v262[21];
          uint64_t v360 = (void *)(v15 + v359);
          v361 = (void *)(v16 + v359);
          *uint64_t v360 = *v361;
          v360[1] = v361[1];
          *(unsigned char *)(v15 + v262[22]) = *(unsigned char *)(v16 + v262[22]);
          *(unsigned char *)(v15 + v262[23]) = *(unsigned char *)(v16 + v262[23]);
          *(unsigned char *)(v15 + v262[24]) = *(unsigned char *)(v16 + v262[24]);
          uint64_t v362 = v262[25];
          uint64_t v363 = (void *)(v15 + v362);
          v364 = (const void *)(v16 + v362);
          uint64_t v365 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v576 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v365(v364, 1, v260))
          {
            uint64_t v366 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
            memcpy(v363, v364, *(void *)(*(void *)(v366 - 8) + 64));
          }
          else
          {
            v582(v363, v364, v260);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v576 + 56))(v363, 0, 1, v260);
          }
          uint64_t v380 = v262[26];
          uint64_t v381 = (void *)(v594 + v380);
          uint64_t v382 = (const void *)(v16 + v380);
          uint64_t v572 = v365;
          if (v365((const void *)(v16 + v380), 1, v260))
          {
            uint64_t v383 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
            memcpy(v381, v382, *(void *)(*(void *)(v383 - 8) + 64));
          }
          else
          {
            v582(v381, v382, v260);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v576 + 56))(v381, 0, 1, v260);
          }
          *(void *)(v594 + v262[27]) = *(void *)(v16 + v262[27]);
          *(void *)(v594 + v262[28]) = *(void *)(v16 + v262[28]);
          uint64_t v394 = v262[29];
          v395 = (void *)(v594 + v394);
          uint64_t v396 = (void *)(v16 + v394);
          void *v395 = *v396;
          v395[1] = v396[1];
          uint64_t v397 = v262[30];
          uint64_t v398 = (char *)(v594 + v397);
          uint64_t v604 = v16;
          v399 = (char *)(v16 + v397);
          uint64_t v400 = type metadata accessor for StaticSoftwareUpdate(0);
          uint64_t v401 = *(void *)(v400 - 8);
          uint64_t v402 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v401 + 48);
          uint64_t v403 = v400;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v402(v399, 1, v403))
          {
            uint64_t v404 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
            memcpy(v398, v399, *(void *)(*(void *)(v404 - 8) + 64));
            uint64_t v4 = a1;
            v405 = v572;
            goto LABEL_140;
          }
          v582(v398, v399, v260);
          uint64_t v561 = v403;
          v563 = v398;
          uint64_t v419 = *(int *)(v403 + 20);
          uint64_t v420 = &v398[v419];
          v421 = &v399[v419];
          uint64_t v422 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
          int v423 = swift_getEnumCaseMultiPayload();
          v405 = v572;
          if (v423 != 2)
          {
            if (v423 == 1)
            {
              *(void *)uint64_t v420 = *(void *)v421;
              *((void *)v420 + 1) = *((void *)v421 + 1);
              uint64_t v556 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
              uint64_t v444 = v556[5];
              uint64_t v560 = &v420[v444];
              uint64_t v445 = &v421[v444];
              swift_bridgeObjectRetain();
              if (v568(v445, 1, v569))
              {
                uint64_t v446 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
                memcpy(v560, v445, *(void *)(*(void *)(v446 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v565 + 16))(v560, v445, v569);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v565 + 56))(v560, 0, 1, v569);
              }
              uint64_t v470 = v556[6];
              uint64_t v471 = &v420[v470];
              uint64_t v472 = &v421[v470];
              *(void *)uint64_t v471 = *(void *)v472;
              *((void *)v471 + 1) = *((void *)v472 + 1);
              uint64_t v473 = v556[7];
              int v474 = &v420[v473];
              v475 = &v421[v473];
              *(void *)int v474 = *(void *)v475;
              *((void *)v474 + 1) = *((void *)v475 + 1);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v476 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
              v420[*(int *)(v476 + 48)] = v421[*(int *)(v476 + 48)];
            }
            else
            {
              if (v423)
              {
                memcpy(v420, v421, *(void *)(*(void *)(v422 - 8) + 64));
LABEL_138:
                uint64_t v4 = a1;
                uint64_t v469 = v561;
                uint64_t v468 = v563;
                goto LABEL_139;
              }
              v582(v420, v421, v260);
              uint64_t v424 = (int *)type metadata accessor for StaticHH2Update(0);
              v420[v424[5]] = v421[v424[5]];
              uint64_t v425 = v424[6];
              uint64_t v426 = &v420[v425];
              uint64_t v427 = &v421[v425];
              *(void *)uint64_t v426 = *(void *)v427;
              *((void *)v426 + 1) = *((void *)v427 + 1);
              uint64_t v428 = v424[7];
              uint64_t v429 = &v420[v428];
              uint64_t v430 = &v421[v428];
              char v431 = v430[8];
              *(void *)uint64_t v429 = *(void *)v430;
              v429[8] = v431;
              swift_bridgeObjectRetain();
            }
            swift_storeEnumTagMultiPayload();
            goto LABEL_138;
          }
          *(void *)uint64_t v420 = *(void *)v421;
          *((void *)v420 + 1) = *((void *)v421 + 1);
          v555 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
          uint64_t v441 = v555[5];
          v559 = &v420[v441];
          uint64_t v442 = &v421[v441];
          swift_bridgeObjectRetain();
          if (v568(v442, 1, v330))
          {
            uint64_t v443 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
            memcpy(v559, v442, *(void *)(*(void *)(v443 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v565 + 16))(v559, v442, v330);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v565 + 56))(v559, 0, 1, v330);
          }
          uint64_t v461 = v555[6];
          uint64_t v462 = &v420[v461];
          v463 = &v421[v461];
          *(void *)uint64_t v462 = *(void *)v463;
          *((void *)v462 + 1) = *((void *)v463 + 1);
          uint64_t v464 = v555[7];
          uint64_t v465 = &v420[v464];
          uint64_t v466 = &v421[v464];
          *(void *)uint64_t v465 = *(void *)v466;
          *((void *)v465 + 1) = *((void *)v466 + 1);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v467 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
          v420[*(int *)(v467 + 48)] = v421[*(int *)(v467 + 48)];
          swift_storeEnumTagMultiPayload();
          uint64_t v4 = a1;
          uint64_t v469 = v561;
          uint64_t v468 = v563;
LABEL_139:
          (*(void (**)(char *, void, uint64_t, uint64_t))(v401 + 56))(v468, 0, 1, v469);
LABEL_140:
          uint64_t v16 = v604;
          *(unsigned char *)(v594 + v262[31]) = *(unsigned char *)(v604 + v262[31]);
          *(void *)(v594 + v262[32]) = *(void *)(v604 + v262[32]);
          uint64_t v477 = v262[33];
          uint64_t v478 = (void *)(v594 + v477);
          uint64_t v479 = (const void *)(v604 + v477);
          swift_bridgeObjectRetain();
          if (v405(v479, 1, v260))
          {
            uint64_t v480 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
            memcpy(v478, v479, *(void *)(*(void *)(v480 - 8) + 64));
          }
          else
          {
            v582(v478, v479, v260);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v576 + 56))(v478, 0, 1, v260);
          }
          uint64_t v481 = v262[34];
          uint64_t v15 = v594;
          uint64_t v482 = v594 + v481;
          uint64_t v483 = (__int16 *)(v604 + v481);
          __int16 v484 = *v483;
          *(unsigned char *)(v482 + 2) = *((unsigned char *)v483 + 2);
          *(_WORD *)uint64_t v482 = v484;
          uint64_t v485 = v262[35];
          uint64_t v486 = v594 + v485;
          v487 = (uint64_t *)(v604 + v485);
          uint64_t v488 = *v487;
          *(_DWORD *)(v486 + 7) = *(_DWORD *)((char *)v487 + 7);
          *(void *)uint64_t v486 = v488;
          goto LABEL_144;
        case 2u:
          uint64_t v279 = sub_251F34DA0();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v279 - 8) + 16))(v15, v16, v279);
          uint64_t v280 = (int *)type metadata accessor for StaticServiceGroup();
          uint64_t v281 = v280[5];
          uint64_t v282 = (void *)(v15 + v281);
          uint64_t v283 = (void *)(v16 + v281);
          void *v282 = *v283;
          v282[1] = v283[1];
          *(unsigned char *)(v15 + v280[6]) = *(unsigned char *)(v16 + v280[6]);
          *(unsigned char *)(v15 + v280[7]) = *(unsigned char *)(v16 + v280[7]);
          *(void *)(v15 + v280[8]) = *(void *)(v16 + v280[8]);
          uint64_t v284 = v280[9];
          v285 = (void *)(v15 + v284);
          v286 = (void *)(v16 + v284);
          void *v285 = *v286;
          v285[1] = v286[1];
          *(unsigned char *)(v15 + v280[10]) = *(unsigned char *)(v16 + v280[10]);
          *(void *)(v15 + v280[11]) = *(void *)(v16 + v280[11]);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_144;
        case 3u:
          uint64_t v287 = sub_251F34DA0();
          uint64_t v601 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v287 - 8) + 16);
          v601(v15, v16, v287);
          v288 = (int *)type metadata accessor for StaticEndpoint();
          uint64_t v289 = v288[5];
          uint64_t v290 = v15 + v289;
          uint64_t v291 = v16 + v289;
          __int16 v292 = *(_WORD *)(v291 + 8);
          *(void *)uint64_t v290 = *(void *)v291;
          *(_WORD *)(v290 + 8) = v292;
          uint64_t v293 = v288[6];
          uint64_t v294 = (void *)(v15 + v293);
          v295 = (void *)(v16 + v293);
          *uint64_t v294 = *v295;
          v294[1] = v295[1];
          *(void *)(v15 + v288[7]) = *(void *)(v16 + v288[7]);
          *(void *)(v15 + v288[8]) = *(void *)(v16 + v288[8]);
          *(void *)(v15 + v288[9]) = *(void *)(v16 + v288[9]);
          *(void *)(v15 + v288[10]) = *(void *)(v16 + v288[10]);
          uint64_t v296 = v288[11];
          uint64_t v297 = v15 + v296;
          uint64_t v298 = v16 + v296;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v601(v297, v298, v287);
          *(void *)(v15 + v288[12]) = *(void *)(v16 + v288[12]);
          uint64_t v299 = v288[13];
          uint64_t v300 = v15 + v299;
          uint64_t v602 = v16;
          uint64_t v301 = v16 + v299;
          *(void *)uint64_t v300 = *(void *)v301;
          *(void *)(v300 + 8) = *(void *)(v301 + 8);
          *(void *)(v300 + 16) = *(void *)(v301 + 16);
          *(void *)(v300 + 24) = *(void *)(v301 + 24);
          *(void *)(v300 + 32) = *(void *)(v301 + 32);
          *(void *)(v300 + 40) = *(void *)(v301 + 40);
          *(unsigned char *)(v300 + 48) = *(unsigned char *)(v301 + 48);
          *(unsigned char *)(v300 + 49) = *(unsigned char *)(v301 + 49);
          *(unsigned char *)(v300 + 50) = *(unsigned char *)(v301 + 50);
          *(unsigned char *)(v300 + 51) = *(unsigned char *)(v301 + 51);
          uint64_t v302 = *(int *)(type metadata accessor for MatterTileMetadata() + 44);
          __dste = (void *)(v300 + v302);
          uint64_t v303 = (const void *)(v301 + v302);
          uint64_t v304 = sub_251F34D20();
          uint64_t v305 = *(void *)(v304 - 8);
          uint64_t v306 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v305 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v306(v303, 1, v304))
          {
            uint64_t v307 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
            memcpy(__dste, v303, *(void *)(*(void *)(v307 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v305 + 16))(__dste, v303, v304);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v305 + 56))(__dste, 0, 1, v304);
          }
          uint64_t v4 = a1;
          uint64_t v333 = v288[14];
          uint64_t v15 = v594;
          uint64_t v334 = v594 + v333;
          uint64_t v16 = v602;
          uint64_t v335 = (__int16 *)(v602 + v333);
          __int16 v336 = *v335;
          *(unsigned char *)(v334 + 2) = *((unsigned char *)v335 + 2);
          *(_WORD *)uint64_t v334 = v336;
          *(unsigned char *)(v594 + v288[15]) = *(unsigned char *)(v602 + v288[15]);
          goto LABEL_144;
        default:
          uint64_t v251 = sub_251F34DA0();
          uint64_t v580 = *(void *)(v251 - 8);
          uint64_t v252 = *(void (**)(uint64_t, uint64_t, uint64_t))(v580 + 16);
          v252(v15, v16, v251);
          uint64_t v253 = (int *)type metadata accessor for StaticAccessory(0);
          uint64_t v254 = v253[5];
          uint64_t v255 = (void *)(v15 + v254);
          uint64_t v256 = (void *)(v16 + v254);
          *uint64_t v255 = *v256;
          v255[1] = v256[1];
          uint64_t v257 = v253[6];
          v258 = (void *)(v15 + v257);
          uint64_t v259 = (void *)(v16 + v257);
          type metadata accessor for StaticAccessory.DeviceIdentifier(0);
          swift_bridgeObjectRetain();
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            v252((uint64_t)v258, (uint64_t)v259, v251);
          }
          else
          {
            void *v258 = *v259;
            v258[1] = v259[1];
            swift_bridgeObjectRetain();
          }
          swift_storeEnumTagMultiPayload();
          uint64_t v308 = v253[7];
          uint64_t v309 = (char *)(v15 + v308);
          uint64_t v310 = (char *)(v16 + v308);
          uint64_t v311 = (int *)type metadata accessor for StaticDeviceMetadata();
          uint64_t v312 = *((void *)v311 - 1);
          v583 = (void (*)(char *, char *, uint64_t))v252;
          if ((*(unsigned int (**)(char *, uint64_t, int *))(v312 + 48))(v310, 1, v311))
          {
            uint64_t v313 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
            memcpy(v309, v310, *(void *)(*(void *)(v313 - 8) + 64));
          }
          else
          {
            v252((uint64_t)v309, (uint64_t)v310, v251);
            uint64_t v337 = v311[5];
            uint64_t v338 = &v309[v337];
            uint64_t v339 = &v310[v337];
            *(void *)uint64_t v338 = *(void *)v339;
            *((void *)v338 + 1) = *((void *)v339 + 1);
            uint64_t v340 = v311[6];
            uint64_t v341 = &v309[v340];
            uint64_t v342 = &v310[v340];
            *(void *)uint64_t v341 = *(void *)v342;
            *((void *)v341 + 1) = *((void *)v342 + 1);
            uint64_t v343 = v311[7];
            uint64_t v344 = &v309[v343];
            uint64_t v345 = &v310[v343];
            *(void *)uint64_t v344 = *(void *)v345;
            *((void *)v344 + 1) = *((void *)v345 + 1);
            uint64_t v346 = v311[8];
            uint64_t v347 = &v309[v346];
            uint64_t v348 = &v310[v346];
            *(void *)uint64_t v347 = *(void *)v348;
            *((void *)v347 + 1) = *((void *)v348 + 1);
            v309[v311[9]] = v310[v311[9]];
            v309[v311[10]] = v310[v311[10]];
            v309[v311[11]] = v310[v311[11]];
            v309[v311[12]] = v310[v311[12]];
            uint64_t v349 = *(void (**)(char *, void, uint64_t, int *))(v312 + 56);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v349(v309, 0, 1, v311);
          }
          uint64_t v350 = v253[8];
          v351 = (void *)(v594 + v350);
          v352 = (const void *)(v16 + v350);
          uint64_t v353 = sub_251F34D20();
          uint64_t v354 = *(void *)(v353 - 8);
          v575 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v354 + 48);
          uint64_t v577 = v353;
          uint64_t v570 = v354;
          if (v575(v352, 1, v353))
          {
            uint64_t v355 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
            memcpy(v351, v352, *(void *)(*(void *)(v355 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v354 + 16))(v351, v352, v353);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v354 + 56))(v351, 0, 1, v353);
          }
          uint64_t v367 = v253[9];
          uint64_t v368 = v594 + v367;
          v369 = (uint64_t *)(v16 + v367);
          uint64_t v370 = *v369;
          *(unsigned char *)(v368 + 8) = *((unsigned char *)v369 + 8);
          *(void *)uint64_t v368 = v370;
          *(unsigned char *)(v594 + v253[10]) = *(unsigned char *)(v16 + v253[10]);
          v252(v594 + v253[11], v16 + v253[11], v251);
          *(void *)(v594 + v253[12]) = *(void *)(v16 + v253[12]);
          uint64_t v371 = v253[13];
          uint64_t v372 = (void *)(v594 + v371);
          v373 = (void *)(v16 + v371);
          void *v372 = *v373;
          v372[1] = v373[1];
          *(unsigned char *)(v594 + v253[14]) = *(unsigned char *)(v16 + v253[14]);
          *(unsigned char *)(v594 + v253[15]) = *(unsigned char *)(v16 + v253[15]);
          *(unsigned char *)(v594 + v253[16]) = *(unsigned char *)(v16 + v253[16]);
          *(unsigned char *)(v594 + v253[17]) = *(unsigned char *)(v16 + v253[17]);
          *(unsigned char *)(v594 + v253[18]) = *(unsigned char *)(v16 + v253[18]);
          *(void *)(v594 + v253[19]) = *(void *)(v16 + v253[19]);
          *(void *)(v594 + v253[20]) = *(void *)(v16 + v253[20]);
          uint64_t v374 = v253[21];
          uint64_t v375 = (void *)(v594 + v374);
          uint64_t v603 = v16;
          uint64_t v376 = (const void *)(v16 + v374);
          uint64_t v377 = v251;
          uint64_t v378 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v580 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v378(v376, 1, v251))
          {
            uint64_t v379 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
            memcpy(v375, v376, *(void *)(*(void *)(v379 - 8) + 64));
          }
          else
          {
            v252((uint64_t)v375, (uint64_t)v376, v251);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v580 + 56))(v375, 0, 1, v251);
          }
          *(_WORD *)(v594 + v253[22]) = *(_WORD *)(v16 + v253[22]);
          uint64_t v384 = v253[23];
          uint64_t v385 = (void *)(v594 + v384);
          uint64_t v386 = (void *)(v16 + v384);
          void *v385 = *v386;
          v385[1] = v386[1];
          *(void *)(v594 + v253[24]) = *(void *)(v16 + v253[24]);
          *(unsigned char *)(v594 + v253[25]) = *(unsigned char *)(v16 + v253[25]);
          *(unsigned char *)(v594 + v253[26]) = *(unsigned char *)(v16 + v253[26]);
          *(unsigned char *)(v594 + v253[27]) = *(unsigned char *)(v16 + v253[27]);
          uint64_t v387 = v253[28];
          uint64_t v388 = (char *)(v594 + v387);
          uint64_t v389 = (char *)(v16 + v387);
          uint64_t v390 = type metadata accessor for StaticSoftwareUpdate(0);
          uint64_t v391 = *(void *)(v390 - 8);
          uint64_t v392 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v391 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v392(v389, 1, v390))
          {
            uint64_t v393 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
            memcpy(v388, v389, *(void *)(*(void *)(v393 - 8) + 64));
            uint64_t v4 = a1;
            uint64_t v15 = v594;
            goto LABEL_132;
          }
          v252((uint64_t)v388, (uint64_t)v389, v377);
          uint64_t v406 = *(int *)(v390 + 20);
          uint64_t v581 = v388;
          uint64_t v407 = &v388[v406];
          uint64_t v408 = &v389[v406];
          uint64_t v409 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
          int v410 = swift_getEnumCaseMultiPayload();
          if (v410 == 2)
          {
            *(void *)uint64_t v407 = *(void *)v408;
            *((void *)v407 + 1) = *((void *)v408 + 1);
            uint64_t v432 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
            uint64_t v433 = v432[5];
            uint64_t v434 = &v407[v433];
            v435 = &v408[v433];
            swift_bridgeObjectRetain();
            if (v575(v435, 1, v577))
            {
              uint64_t v436 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
              memcpy(v434, v435, *(void *)(*(void *)(v436 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v570 + 16))(v434, v435, v577);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v570 + 56))(v434, 0, 1, v577);
            }
            uint64_t v15 = v594;
            uint64_t v447 = v432[6];
            uint64_t v448 = &v407[v447];
            v449 = &v408[v447];
            *(void *)uint64_t v448 = *(void *)v449;
            *((void *)v448 + 1) = *((void *)v449 + 1);
            uint64_t v450 = v432[7];
            uint64_t v451 = &v407[v450];
            int v452 = &v408[v450];
            *(void *)uint64_t v451 = *(void *)v452;
            *((void *)v451 + 1) = *((void *)v452 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v453 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
            v407[*(int *)(v453 + 48)] = v408[*(int *)(v453 + 48)];
            goto LABEL_130;
          }
          if (v410 == 1)
          {
            *(void *)uint64_t v407 = *(void *)v408;
            *((void *)v407 + 1) = *((void *)v408 + 1);
            uint64_t v437 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
            uint64_t v438 = v437[5];
            uint64_t v584 = &v407[v438];
            v439 = &v408[v438];
            swift_bridgeObjectRetain();
            uint64_t v15 = v594;
            if (v575(v439, 1, v577))
            {
              uint64_t v440 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
              memcpy(v584, v439, *(void *)(*(void *)(v440 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v570 + 16))(v584, v439, v577);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v570 + 56))(v584, 0, 1, v577);
            }
            uint64_t v454 = v437[6];
            uint64_t v455 = &v407[v454];
            uint64_t v456 = &v408[v454];
            *(void *)uint64_t v455 = *(void *)v456;
            *((void *)v455 + 1) = *((void *)v456 + 1);
            uint64_t v457 = v437[7];
            uint64_t v458 = &v407[v457];
            uint64_t v459 = &v408[v457];
            *(void *)uint64_t v458 = *(void *)v459;
            *((void *)v458 + 1) = *((void *)v459 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v460 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
            v407[*(int *)(v460 + 48)] = v408[*(int *)(v460 + 48)];
LABEL_130:
            swift_storeEnumTagMultiPayload();
            uint64_t v4 = a1;
            goto LABEL_131;
          }
          uint64_t v15 = v594;
          if (v410)
          {
            memcpy(v407, v408, *(void *)(*(void *)(v409 - 8) + 64));
          }
          else
          {
            v583(v407, v408, v377);
            uint64_t v411 = (int *)type metadata accessor for StaticHH2Update(0);
            v407[v411[5]] = v408[v411[5]];
            uint64_t v412 = v411[6];
            uint64_t v413 = &v407[v412];
            uint64_t v414 = &v408[v412];
            *(void *)uint64_t v413 = *(void *)v414;
            *((void *)v413 + 1) = *((void *)v414 + 1);
            uint64_t v415 = v411[7];
            uint64_t v416 = &v407[v415];
            uint64_t v417 = &v408[v415];
            char v418 = v417[8];
            *(void *)uint64_t v416 = *(void *)v417;
            v416[8] = v418;
            swift_bridgeObjectRetain();
            swift_storeEnumTagMultiPayload();
          }
          uint64_t v4 = a1;
LABEL_131:
          (*(void (**)(char *, void, uint64_t, uint64_t))(v391 + 56))(v581, 0, 1, v390);
LABEL_132:
          uint64_t v16 = v603;
          *(unsigned char *)(v15 + v253[29]) = *(unsigned char *)(v603 + v253[29]);
          *(unsigned char *)(v15 + v253[30]) = *(unsigned char *)(v603 + v253[30]);
          *(void *)(v15 + v253[31]) = *(void *)(v603 + v253[31]);
          swift_bridgeObjectRetain();
LABEL_144:
          swift_storeEnumTagMultiPayload();
LABEL_145:
          uint64_t v489 = (int *)type metadata accessor for AccessoryDetailsBasicInfo();
          uint64_t v490 = v489[5];
          uint64_t v491 = (void *)(v15 + v490);
          uint64_t v492 = (void *)(v16 + v490);
          void *v491 = *v492;
          v491[1] = v492[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          uint64_t v493 = v489[6];
          uint64_t v494 = (char *)(v15 + v493);
          uint64_t v605 = v16;
          uint64_t v495 = (char *)(v16 + v493);
          uint64_t v496 = (int *)type metadata accessor for StaticRoom(0);
          uint64_t v497 = *((void *)v496 - 1);
          uint64_t v498 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v497 + 48);
          int v499 = v498(v494, 1, v496);
          int v500 = v498(v495, 1, v496);
          if (v499)
          {
            if (!v500)
            {
              uint64_t v501 = sub_251F34DA0();
              v591 = *(void (**)(char *, char *, uint64_t))(*(void *)(v501 - 8) + 16);
              v591(v494, v495, v501);
              uint64_t v502 = v496[5];
              uint64_t v503 = &v494[v502];
              uint64_t v504 = &v495[v502];
              *(void *)uint64_t v503 = *(void *)v504;
              *((void *)v503 + 1) = *((void *)v504 + 1);
              v494[v496[6]] = v495[v496[6]];
              *(void *)&v494[v496[7]] = *(void *)&v495[v496[7]];
              uint64_t v505 = v496[8];
              uint64_t v506 = &v494[v505];
              uint64_t v507 = &v495[v505];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v591(v506, v507, v501);
              *(void *)&v494[v496[9]] = *(void *)&v495[v496[9]];
              *(void *)&v494[v496[10]] = *(void *)&v495[v496[10]];
              *(void *)&v494[v496[11]] = *(void *)&v495[v496[11]];
              *(void *)&v494[v496[12]] = *(void *)&v495[v496[12]];
              *(void *)&v494[v496[13]] = *(void *)&v495[v496[13]];
              *(void *)&v494[v496[14]] = *(void *)&v495[v496[14]];
              *(void *)&v494[v496[15]] = *(void *)&v495[v496[15]];
              *(void *)&v494[v496[16]] = *(void *)&v495[v496[16]];
              *(void *)&v494[v496[17]] = *(void *)&v495[v496[17]];
              *(void *)&v494[v496[18]] = *(void *)&v495[v496[18]];
              uint64_t v508 = *(void (**)(unsigned char *, void, uint64_t, int *))(v497 + 56);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v4 = a1;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v508(v494, 0, 1, v496);
              goto LABEL_151;
            }
            goto LABEL_150;
          }
          if (v500)
          {
            sub_251E760C4((uint64_t)v494, type metadata accessor for StaticRoom);
LABEL_150:
            uint64_t v509 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D138);
            memcpy(v494, v495, *(void *)(*(void *)(v509 - 8) + 64));
            goto LABEL_151;
          }
          uint64_t v537 = sub_251F34DA0();
          uint64_t v538 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v537 - 8) + 24);
          v538(v494, v495, v537);
          uint64_t v539 = v496[5];
          v540 = &v494[v539];
          uint64_t v541 = &v495[v539];
          *(void *)v540 = *(void *)v541;
          *((void *)v540 + 1) = *((void *)v541 + 1);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          v494[v496[6]] = v495[v496[6]];
          *(void *)&v494[v496[7]] = *(void *)&v495[v496[7]];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          v538(&v494[v496[8]], &v495[v496[8]], v537);
          *(void *)&v494[v496[9]] = *(void *)&v495[v496[9]];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)&v494[v496[10]] = *(void *)&v495[v496[10]];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)&v494[v496[11]] = *(void *)&v495[v496[11]];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)&v494[v496[12]] = *(void *)&v495[v496[12]];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)&v494[v496[13]] = *(void *)&v495[v496[13]];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)&v494[v496[14]] = *(void *)&v495[v496[14]];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)&v494[v496[15]] = *(void *)&v495[v496[15]];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)&v494[v496[16]] = *(void *)&v495[v496[16]];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)&v494[v496[17]] = *(void *)&v495[v496[17]];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)&v494[v496[18]] = *(void *)&v495[v496[18]];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
LABEL_151:
          uint64_t v510 = v489[7];
          uint64_t v511 = (void *)(v15 + v510);
          uint64_t v512 = (void *)(v605 + v510);
          *uint64_t v511 = *v512;
          v511[1] = v512[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(unsigned char *)(v15 + v489[8]) = *(unsigned char *)(v605 + v489[8]);
          *(unsigned char *)(v15 + v489[9]) = *(unsigned char *)(v605 + v489[9]);
          *(unsigned char *)(v15 + v489[10]) = *(unsigned char *)(v605 + v489[10]);
          uint64_t v513 = a3[6];
          uint64_t v514 = (unsigned char *)(v4 + v513);
          uint64_t v515 = (unsigned char *)(a2 + v513);
          uint64_t v516 = (int *)type metadata accessor for StaticDeviceMetadata();
          uint64_t v517 = *((void *)v516 - 1);
          uint64_t v518 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v517 + 48);
          int v519 = v518(v514, 1, v516);
          int v520 = v518(v515, 1, v516);
          if (!v519)
          {
            if (!v520)
            {
              uint64_t v542 = sub_251F34DA0();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v542 - 8) + 24))(v514, v515, v542);
              uint64_t v543 = v516[5];
              uint64_t v544 = &v514[v543];
              uint64_t v545 = &v515[v543];
              *uint64_t v544 = *v545;
              v544[1] = v545[1];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              uint64_t v546 = v516[6];
              uint64_t v547 = &v514[v546];
              uint64_t v548 = &v515[v546];
              void *v547 = *v548;
              v547[1] = v548[1];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              uint64_t v549 = v516[7];
              uint64_t v550 = &v514[v549];
              uint64_t v551 = &v515[v549];
              *uint64_t v550 = *v551;
              v550[1] = v551[1];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              uint64_t v552 = v516[8];
              uint64_t v553 = &v514[v552];
              uint64_t v554 = &v515[v552];
              *uint64_t v553 = *v554;
              v553[1] = v554[1];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              v514[v516[9]] = v515[v516[9]];
              v514[v516[10]] = v515[v516[10]];
              v514[v516[11]] = v515[v516[11]];
              v514[v516[12]] = v515[v516[12]];
              goto LABEL_157;
            }
            sub_251E760C4((uint64_t)v514, (uint64_t (*)(void))type metadata accessor for StaticDeviceMetadata);
            goto LABEL_156;
          }
          if (v520)
          {
LABEL_156:
            uint64_t v535 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
            memcpy(v514, v515, *(void *)(*(void *)(v535 - 8) + 64));
            goto LABEL_157;
          }
          uint64_t v521 = sub_251F34DA0();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v521 - 8) + 16))(v514, v515, v521);
          uint64_t v522 = v516[5];
          v523 = &v514[v522];
          v524 = &v515[v522];
          void *v523 = *v524;
          v523[1] = v524[1];
          uint64_t v525 = v516[6];
          uint64_t v526 = &v514[v525];
          uint64_t v527 = &v515[v525];
          *uint64_t v526 = *v527;
          v526[1] = v527[1];
          uint64_t v528 = v516[7];
          v529 = &v514[v528];
          uint64_t v530 = &v515[v528];
          void *v529 = *v530;
          v529[1] = v530[1];
          uint64_t v531 = v516[8];
          uint64_t v532 = &v514[v531];
          uint64_t v533 = &v515[v531];
          *uint64_t v532 = *v533;
          v532[1] = v533[1];
          v514[v516[9]] = v515[v516[9]];
          v514[v516[10]] = v515[v516[10]];
          v514[v516[11]] = v515[v516[11]];
          v514[v516[12]] = v515[v516[12]];
          uint64_t v534 = *(void (**)(unsigned char *, void, uint64_t, int *))(v517 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v534(v514, 0, 1, v516);
LABEL_157:
          *(unsigned char *)(v4 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
          return v4;
      }
  }
}

uint64_t initializeWithTake for AccessoryDetails(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for AccessoryDetails.Payload(0);
  uint64_t v318 = a2;
  uint64_t v313 = a3;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v13 = sub_251F34DA0();
      uint64_t v315 = *(void *)(v13 - 8);
      uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v315 + 32);
      v14(a1, a2, v13);
      uint64_t v15 = (int *)type metadata accessor for StaticService();
      *(_OWORD *)(a1 + v15[5]) = *(_OWORD *)(a2 + v15[5]);
      *(unsigned char *)(a1 + v15[6]) = *(unsigned char *)(a2 + v15[6]);
      *(unsigned char *)(a1 + v15[7]) = *(unsigned char *)(a2 + v15[7]);
      *(unsigned char *)(a1 + v15[8]) = *(unsigned char *)(a2 + v15[8]);
      *(unsigned char *)(a1 + v15[9]) = *(unsigned char *)(a2 + v15[9]);
      *(unsigned char *)(a1 + v15[10]) = *(unsigned char *)(a2 + v15[10]);
      v14(a1 + v15[11], a2 + v15[11], v13);
      uint64_t v16 = v15[12];
      uint64_t v17 = a1 + v16;
      uint64_t v18 = a2 + v16;
      *(void *)uint64_t v17 = *(void *)v18;
      *(unsigned char *)(v17 + 8) = *(unsigned char *)(v18 + 8);
      uint64_t v19 = v15[13];
      uint64_t v20 = (char *)(a1 + v19);
      uint64_t v21 = (char *)(a2 + v19);
      uint64_t v22 = (int *)type metadata accessor for StaticDeviceMetadata();
      uint64_t v23 = *((void *)v22 - 1);
      uint64_t v309 = (void (*)(char *, char *, uint64_t))v14;
      uint64_t v304 = v13;
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v23 + 48))(v21, 1, v22))
      {
        uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
        memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        v14((uint64_t)v20, (uint64_t)v21, v13);
        *(_OWORD *)&v20[v22[5]] = *(_OWORD *)&v21[v22[5]];
        *(_OWORD *)&v20[v22[6]] = *(_OWORD *)&v21[v22[6]];
        *(_OWORD *)&v20[v22[7]] = *(_OWORD *)&v21[v22[7]];
        *(_OWORD *)&v20[v22[8]] = *(_OWORD *)&v21[v22[8]];
        v20[v22[9]] = v21[v22[9]];
        v20[v22[10]] = v21[v22[10]];
        v20[v22[11]] = v21[v22[11]];
        v20[v22[12]] = v21[v22[12]];
        (*(void (**)(char *, void, uint64_t, int *))(v23 + 56))(v20, 0, 1, v22);
      }
      uint64_t v49 = v15[14];
      __int16 v50 = (void *)(a1 + v49);
      uint64_t v51 = (const void *)(a2 + v49);
      uint64_t v52 = sub_251F34D20();
      uint64_t v53 = *(void *)(v52 - 8);
      uint64_t v297 = *(unsigned int (**)(void))(v53 + 48);
      a3 = v313;
      if (((unsigned int (*)(const void *, uint64_t, uint64_t))v297)(v51, 1, v52))
      {
        uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
        memcpy(v50, v51, *(void *)(*(void *)(v54 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v53 + 32))(v50, v51, v52);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
      }
      *(void *)(a1 + v15[15]) = *(void *)(v318 + v15[15]);
      *(_OWORD *)(a1 + v15[16]) = *(_OWORD *)(v318 + v15[16]);
      *(unsigned char *)(a1 + v15[17]) = *(unsigned char *)(v318 + v15[17]);
      *(unsigned char *)(a1 + v15[18]) = *(unsigned char *)(v318 + v15[18]);
      *(unsigned char *)(a1 + v15[19]) = *(unsigned char *)(v318 + v15[19]);
      *(unsigned char *)(a1 + v15[20]) = *(unsigned char *)(v318 + v15[20]);
      *(_OWORD *)(a1 + v15[21]) = *(_OWORD *)(v318 + v15[21]);
      *(unsigned char *)(a1 + v15[22]) = *(unsigned char *)(v318 + v15[22]);
      *(unsigned char *)(a1 + v15[23]) = *(unsigned char *)(v318 + v15[23]);
      *(unsigned char *)(a1 + v15[24]) = *(unsigned char *)(v318 + v15[24]);
      uint64_t v64 = v15[25];
      uint64_t v65 = (void *)(a1 + v64);
      uint64_t v66 = (const void *)(v318 + v64);
      uint64_t v67 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v315 + 48);
      if (v67(v318 + v64, 1, v304))
      {
        uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
        memcpy(v65, v66, *(void *)(*(void *)(v68 - 8) + 64));
      }
      else
      {
        v14((uint64_t)v65, (uint64_t)v66, v304);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v315 + 56))(v65, 0, 1, v304);
      }
      uint64_t v76 = v15[26];
      uint64_t v77 = (void *)(a1 + v76);
      uint64_t v78 = (const void *)(v318 + v76);
      uint64_t v79 = v67;
      if (v67(v318 + v76, 1, v304))
      {
        uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
        memcpy(v77, v78, *(void *)(*(void *)(v80 - 8) + 64));
      }
      else
      {
        v14((uint64_t)v77, (uint64_t)v78, v304);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v315 + 56))(v77, 0, 1, v304);
      }
      *(void *)(a1 + v15[27]) = *(void *)(v318 + v15[27]);
      *(void *)(a1 + v15[28]) = *(void *)(v318 + v15[28]);
      *(_OWORD *)(a1 + v15[29]) = *(_OWORD *)(v318 + v15[29]);
      uint64_t v87 = v15[30];
      uint64_t v88 = (char *)(a1 + v87);
      uint64_t v89 = (char *)(v318 + v87);
      uint64_t v90 = type metadata accessor for StaticSoftwareUpdate(0);
      uint64_t v91 = *(void *)(v90 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v91 + 48))(v89, 1, v90))
      {
        uint64_t v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
        memcpy(v88, v89, *(void *)(*(void *)(v92 - 8) + 64));
        goto LABEL_64;
      }
      v309(v88, v89, v304);
      uint64_t v100 = *(int *)(v90 + 20);
      uint64_t v293 = &v88[v100];
      uint64_t v101 = &v89[v100];
      uint64_t v102 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload != 2)
      {
        if (EnumCaseMultiPayload == 1)
        {
          *(_OWORD *)uint64_t v293 = *(_OWORD *)v101;
          uint64_t updated = type metadata accessor for StaticSoftwareUpdateMetadata(0);
          uint64_t v119 = *(int *)(updated + 20);
          uint64_t v287 = updated;
          __dsta = &v293[v119];
          uint64_t v120 = &v101[v119];
          if (v297())
          {
            uint64_t v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
            memcpy(__dsta, v120, *(void *)(*(void *)(v121 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v53 + 32))(__dsta, v120, v52);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v53 + 56))(__dsta, 0, 1, v52);
          }
          *(_OWORD *)&v293[*(int *)(v287 + 24)] = *(_OWORD *)&v101[*(int *)(v287 + 24)];
          *(_OWORD *)&v293[*(int *)(v287 + 28)] = *(_OWORD *)&v101[*(int *)(v287 + 28)];
          uint64_t v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
          v293[*(int *)(v124 + 48)] = v101[*(int *)(v124 + 48)];
        }
        else
        {
          if (EnumCaseMultiPayload)
          {
            memcpy(v293, v101, *(void *)(*(void *)(v102 - 8) + 64));
LABEL_62:
            a3 = v313;
            goto LABEL_63;
          }
          v309(v293, v101, v304);
          uint64_t v104 = (int *)type metadata accessor for StaticHH2Update(0);
          v293[v104[5]] = v101[v104[5]];
          *(_OWORD *)&v293[v104[6]] = *(_OWORD *)&v101[v104[6]];
          uint64_t v105 = v104[7];
          uint64_t v106 = &v293[v105];
          uint64_t v107 = &v101[v105];
          v106[8] = v107[8];
          *(void *)uint64_t v106 = *(void *)v107;
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_62;
      }
      *(_OWORD *)uint64_t v293 = *(_OWORD *)v101;
      uint64_t v114 = type metadata accessor for StaticSoftwareUpdateMetadata(0);
      uint64_t v115 = *(int *)(v114 + 20);
      uint64_t v286 = v114;
      __dst = &v293[v115];
      uint64_t v116 = &v101[v115];
      if (v297())
      {
        uint64_t v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
        memcpy(__dst, v116, *(void *)(*(void *)(v117 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v53 + 32))(__dst, v116, v52);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v53 + 56))(__dst, 0, 1, v52);
      }
      *(_OWORD *)&v293[*(int *)(v286 + 24)] = *(_OWORD *)&v101[*(int *)(v286 + 24)];
      *(_OWORD *)&v293[*(int *)(v286 + 28)] = *(_OWORD *)&v101[*(int *)(v286 + 28)];
      uint64_t v123 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
      v293[*(int *)(v123 + 48)] = v101[*(int *)(v123 + 48)];
      swift_storeEnumTagMultiPayload();
      a3 = v313;
LABEL_63:
      (*(void (**)(char *, void, uint64_t, uint64_t))(v91 + 56))(v88, 0, 1, v90);
LABEL_64:
      *(unsigned char *)(a1 + v15[31]) = *(unsigned char *)(v318 + v15[31]);
      *(void *)(a1 + v15[32]) = *(void *)(v318 + v15[32]);
      uint64_t v125 = v15[33];
      uint64_t v126 = (void *)(a1 + v125);
      uint64_t v127 = (void *)(v318 + v125);
      if (v79(v318 + v125, 1, v304))
      {
        uint64_t v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
        memcpy(v126, v127, *(void *)(*(void *)(v128 - 8) + 64));
      }
      else
      {
        v309((char *)v126, (char *)v127, v304);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v315 + 56))(v126, 0, 1, v304);
      }
      uint64_t v129 = v15[34];
      uint64_t v130 = a1 + v129;
      uint64_t v131 = v318 + v129;
      *(_WORD *)uint64_t v130 = *(_WORD *)v131;
      *(unsigned char *)(v130 + 2) = *(unsigned char *)(v131 + 2);
      uint64_t v132 = v15[35];
      uint64_t v133 = a1 + v132;
      uint64_t v134 = v318 + v132;
      *(_DWORD *)(v133 + 7) = *(_DWORD *)(v134 + 7);
      *(void *)uint64_t v133 = *(void *)v134;
      goto LABEL_68;
    case 2u:
      uint64_t v25 = sub_251F34DA0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 32))(a1, a2, v25);
      uint64_t v26 = (int *)type metadata accessor for StaticServiceGroup();
      *(_OWORD *)(a1 + v26[5]) = *(_OWORD *)(a2 + v26[5]);
      *(unsigned char *)(a1 + v26[6]) = *(unsigned char *)(a2 + v26[6]);
      *(unsigned char *)(a1 + v26[7]) = *(unsigned char *)(a2 + v26[7]);
      *(void *)(a1 + v26[8]) = *(void *)(a2 + v26[8]);
      *(_OWORD *)(a1 + v26[9]) = *(_OWORD *)(a2 + v26[9]);
      *(unsigned char *)(a1 + v26[10]) = *(unsigned char *)(a2 + v26[10]);
      *(void *)(a1 + v26[11]) = *(void *)(a2 + v26[11]);
      goto LABEL_68;
    case 3u:
      uint64_t v27 = sub_251F34DA0();
      uint64_t v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 32);
      v28(a1, a2, v27);
      uint64_t v29 = (int *)type metadata accessor for StaticEndpoint();
      uint64_t v30 = v29[5];
      uint64_t v31 = a1 + v30;
      uint64_t v32 = a2 + v30;
      *(void *)uint64_t v31 = *(void *)v32;
      *(_WORD *)(v31 + 8) = *(_WORD *)(v32 + 8);
      *(_OWORD *)(a1 + v29[6]) = *(_OWORD *)(a2 + v29[6]);
      *(void *)(a1 + v29[7]) = *(void *)(a2 + v29[7]);
      *(void *)(a1 + v29[8]) = *(void *)(a2 + v29[8]);
      *(void *)(a1 + v29[9]) = *(void *)(a2 + v29[9]);
      *(void *)(a1 + v29[10]) = *(void *)(a2 + v29[10]);
      v28(a1 + v29[11], a2 + v29[11], v27);
      *(void *)(a1 + v29[12]) = *(void *)(a2 + v29[12]);
      uint64_t v33 = v29[13];
      uint64_t v34 = a1 + v33;
      uint64_t v35 = a2 + v33;
      long long v36 = *(_OWORD *)(a2 + v33 + 16);
      *(_OWORD *)uint64_t v34 = *(_OWORD *)(a2 + v33);
      *(_OWORD *)(v34 + 16) = v36;
      *(_OWORD *)(v34 + 32) = *(_OWORD *)(a2 + v33 + 32);
      *(_DWORD *)(v34 + 48) = *(_DWORD *)(a2 + v33 + 48);
      uint64_t v37 = *(int *)(type metadata accessor for MatterTileMetadata() + 44);
      uint64_t v38 = (void *)(v34 + v37);
      uint64_t v39 = (const void *)(v35 + v37);
      uint64_t v40 = sub_251F34D20();
      uint64_t v41 = *(void *)(v40 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
      {
        uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
        memcpy(v38, v39, *(void *)(*(void *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v41 + 32))(v38, v39, v40);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
      }
      uint64_t v55 = v29[14];
      uint64_t v56 = a1 + v55;
      uint64_t v57 = a2 + v55;
      *(_WORD *)uint64_t v56 = *(_WORD *)v57;
      *(unsigned char *)(v56 + 2) = *(unsigned char *)(v57 + 2);
      *(unsigned char *)(a1 + v29[15]) = *(unsigned char *)(a2 + v29[15]);
      goto LABEL_68;
    default:
      uint64_t v6 = sub_251F34DA0();
      uint64_t v314 = *(void *)(v6 - 8);
      uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v314 + 32);
      v7(a1, a2, v6);
      uint64_t v8 = (int *)type metadata accessor for StaticAccessory(0);
      *(_OWORD *)(a1 + v8[5]) = *(_OWORD *)(a2 + v8[5]);
      uint64_t v9 = v8[6];
      uint64_t v10 = (void *)(a1 + v9);
      uint64_t v11 = (const void *)(a2 + v9);
      uint64_t v12 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v7((uint64_t)v10, (uint64_t)v11, v6);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
      }
      uint64_t v43 = v8[7];
      uint64_t v44 = (char *)(a1 + v43);
      uint64_t v45 = (char *)(a2 + v43);
      uint64_t v46 = (int *)type metadata accessor for StaticDeviceMetadata();
      uint64_t v47 = *((void *)v46 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v47 + 48))(v45, 1, v46))
      {
        uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
        memcpy(v44, v45, *(void *)(*(void *)(v48 - 8) + 64));
      }
      else
      {
        v7((uint64_t)v44, (uint64_t)v45, v6);
        *(_OWORD *)&v44[v46[5]] = *(_OWORD *)&v45[v46[5]];
        *(_OWORD *)&v44[v46[6]] = *(_OWORD *)&v45[v46[6]];
        *(_OWORD *)&v44[v46[7]] = *(_OWORD *)&v45[v46[7]];
        *(_OWORD *)&v44[v46[8]] = *(_OWORD *)&v45[v46[8]];
        v44[v46[9]] = v45[v46[9]];
        v44[v46[10]] = v45[v46[10]];
        v44[v46[11]] = v45[v46[11]];
        v44[v46[12]] = v45[v46[12]];
        (*(void (**)(char *, void, uint64_t, int *))(v47 + 56))(v44, 0, 1, v46);
      }
      uint64_t v58 = v8[8];
      uint64_t v59 = (void *)(a1 + v58);
      uint64_t v60 = (const void *)(a2 + v58);
      uint64_t v61 = sub_251F34D20();
      uint64_t v62 = *(void *)(v61 - 8);
      uint64_t v310 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v62 + 48);
      if (v310(v60, 1, v61))
      {
        uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
        memcpy(v59, v60, *(void *)(*(void *)(v63 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v62 + 32))(v59, v60, v61);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v62 + 56))(v59, 0, 1, v61);
      }
      uint64_t v69 = v8[9];
      uint64_t v70 = a1 + v69;
      uint64_t v71 = a2 + v69;
      *(void *)uint64_t v70 = *(void *)v71;
      *(unsigned char *)(v70 + 8) = *(unsigned char *)(v71 + 8);
      *(unsigned char *)(a1 + v8[10]) = *(unsigned char *)(a2 + v8[10]);
      v7(a1 + v8[11], a2 + v8[11], v6);
      *(void *)(a1 + v8[12]) = *(void *)(a2 + v8[12]);
      *(_OWORD *)(a1 + v8[13]) = *(_OWORD *)(a2 + v8[13]);
      *(unsigned char *)(a1 + v8[14]) = *(unsigned char *)(a2 + v8[14]);
      *(unsigned char *)(a1 + v8[15]) = *(unsigned char *)(a2 + v8[15]);
      *(unsigned char *)(a1 + v8[16]) = *(unsigned char *)(a2 + v8[16]);
      *(unsigned char *)(a1 + v8[17]) = *(unsigned char *)(a2 + v8[17]);
      *(unsigned char *)(a1 + v8[18]) = *(unsigned char *)(a2 + v8[18]);
      *(void *)(a1 + v8[19]) = *(void *)(a2 + v8[19]);
      *(void *)(a1 + v8[20]) = *(void *)(a2 + v8[20]);
      uint64_t v72 = v8[21];
      uint64_t v73 = (void *)(a1 + v72);
      uint64_t v74 = (const void *)(a2 + v72);
      uint64_t v305 = v62;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v314 + 48))(a2 + v72, 1, v6))
      {
        uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
        memcpy(v73, v74, *(void *)(*(void *)(v75 - 8) + 64));
      }
      else
      {
        v7((uint64_t)v73, (uint64_t)v74, v6);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v314 + 56))(v73, 0, 1, v6);
      }
      *(_WORD *)(a1 + v8[22]) = *(_WORD *)(a2 + v8[22]);
      *(_OWORD *)(a1 + v8[23]) = *(_OWORD *)(a2 + v8[23]);
      *(void *)(a1 + v8[24]) = *(void *)(a2 + v8[24]);
      *(unsigned char *)(a1 + v8[25]) = *(unsigned char *)(a2 + v8[25]);
      *(unsigned char *)(a1 + v8[26]) = *(unsigned char *)(a2 + v8[26]);
      *(unsigned char *)(a1 + v8[27]) = *(unsigned char *)(a2 + v8[27]);
      uint64_t v81 = v8[28];
      uint64_t v82 = (char *)(a1 + v81);
      int v83 = (char *)(v318 + v81);
      uint64_t v84 = type metadata accessor for StaticSoftwareUpdate(0);
      uint64_t v85 = *(void *)(v84 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v85 + 48))(v83, 1, v84))
      {
        uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
        memcpy(v82, v83, *(void *)(*(void *)(v86 - 8) + 64));
        goto LABEL_56;
      }
      v7((uint64_t)v82, (uint64_t)v83, v6);
      uint64_t v93 = *(int *)(v84 + 20);
      uint64_t v316 = &v82[v93];
      __int16 v94 = &v83[v93];
      uint64_t v301 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
      int v95 = swift_getEnumCaseMultiPayload();
      if (v95 == 2)
      {
        uint64_t v108 = v316;
        *(_OWORD *)uint64_t v316 = *(_OWORD *)v94;
        uint64_t v298 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        uint64_t v109 = v298[5];
        uint64_t v110 = &v316[v109];
        uint64_t v111 = &v94[v109];
        if (v310(&v94[v109], 1, v61)) {
          goto LABEL_46;
        }
        goto LABEL_53;
      }
      if (v95 == 1)
      {
        uint64_t v108 = v316;
        *(_OWORD *)uint64_t v316 = *(_OWORD *)v94;
        uint64_t v298 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        uint64_t v112 = v298[5];
        uint64_t v110 = &v316[v112];
        uint64_t v111 = &v94[v112];
        if (v310(&v94[v112], 1, v61))
        {
LABEL_46:
          uint64_t v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
          memcpy(v110, v111, *(void *)(*(void *)(v113 - 8) + 64));
LABEL_54:
          a3 = v313;
          *(_OWORD *)((char *)v108 + v298[6]) = *(_OWORD *)&v94[v298[6]];
          *(_OWORD *)((char *)v108 + v298[7]) = *(_OWORD *)&v94[v298[7]];
          uint64_t v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
          *((unsigned char *)v108 + *(int *)(v122 + 48)) = v94[*(int *)(v122 + 48)];
          swift_storeEnumTagMultiPayload();
          goto LABEL_55;
        }
LABEL_53:
        (*(void (**)(char *, char *, uint64_t))(v305 + 32))(v110, v111, v61);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v305 + 56))(v110, 0, 1, v61);
        uint64_t v108 = v316;
        goto LABEL_54;
      }
      if (v95)
      {
        memcpy(v316, v94, *(void *)(*(void *)(v301 - 8) + 64));
      }
      else
      {
        v7((uint64_t)v316, (uint64_t)v94, v6);
        uint64_t v96 = (int *)type metadata accessor for StaticHH2Update(0);
        v316[v96[5]] = v94[v96[5]];
        *(_OWORD *)&v316[v96[6]] = *(_OWORD *)&v94[v96[6]];
        uint64_t v97 = v96[7];
        uint64_t v98 = &v316[v97];
        uint64_t v99 = &v94[v97];
        v98[8] = v99[8];
        *(void *)uint64_t v98 = *(void *)v99;
        swift_storeEnumTagMultiPayload();
      }
LABEL_55:
      (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v82, 0, 1, v84);
LABEL_56:
      *(unsigned char *)(a1 + v8[29]) = *(unsigned char *)(v318 + v8[29]);
      *(unsigned char *)(a1 + v8[30]) = *(unsigned char *)(v318 + v8[30]);
      *(void *)(a1 + v8[31]) = *(void *)(v318 + v8[31]);
LABEL_68:
      swift_storeEnumTagMultiPayload();
      uint64_t v135 = *(int *)(a3 + 20);
      uint64_t v136 = a1 + v135;
      uint64_t v137 = v318 + v135;
      uint64_t v317 = v318 + v135;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v145 = sub_251F34DA0();
          uint64_t v311 = *(void **)(v145 - 8);
          uint64_t v146 = (void (*)(uint64_t, uint64_t, uint64_t))v311[4];
          v146(v136, v137, v145);
          int64_t v147 = (int *)type metadata accessor for StaticService();
          *(_OWORD *)(v136 + v147[5]) = *(_OWORD *)(v137 + v147[5]);
          *(unsigned char *)(v136 + v147[6]) = *(unsigned char *)(v137 + v147[6]);
          *(unsigned char *)(v136 + v147[7]) = *(unsigned char *)(v137 + v147[7]);
          *(unsigned char *)(v136 + v147[8]) = *(unsigned char *)(v137 + v147[8]);
          *(unsigned char *)(v136 + v147[9]) = *(unsigned char *)(v137 + v147[9]);
          *(unsigned char *)(v136 + v147[10]) = *(unsigned char *)(v137 + v147[10]);
          v146(v136 + v147[11], v137 + v147[11], v145);
          uint64_t v148 = v147[12];
          uint64_t v149 = v136 + v148;
          uint64_t v150 = v137 + v148;
          *(void *)uint64_t v149 = *(void *)v150;
          *(unsigned char *)(v149 + 8) = *(unsigned char *)(v150 + 8);
          uint64_t v151 = v147[13];
          uint64_t v152 = (char *)(v136 + v151);
          uint64_t v153 = (char *)(v137 + v151);
          uint64_t v154 = (int *)type metadata accessor for StaticDeviceMetadata();
          uint64_t v155 = *((void *)v154 - 1);
          uint64_t v308 = (void (*)(void *, const void *, uint64_t))v146;
          uint64_t v302 = v145;
          if ((*(unsigned int (**)(char *, uint64_t, int *))(v155 + 48))(v153, 1, v154))
          {
            uint64_t v156 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
            memcpy(v152, v153, *(void *)(*(void *)(v156 - 8) + 64));
          }
          else
          {
            v146((uint64_t)v152, (uint64_t)v153, v145);
            *(_OWORD *)&v152[v154[5]] = *(_OWORD *)&v153[v154[5]];
            *(_OWORD *)&v152[v154[6]] = *(_OWORD *)&v153[v154[6]];
            *(_OWORD *)&v152[v154[7]] = *(_OWORD *)&v153[v154[7]];
            *(_OWORD *)&v152[v154[8]] = *(_OWORD *)&v153[v154[8]];
            v152[v154[9]] = v153[v154[9]];
            v152[v154[10]] = v153[v154[10]];
            v152[v154[11]] = v153[v154[11]];
            v152[v154[12]] = v153[v154[12]];
            (*(void (**)(char *, void, uint64_t, int *))(v155 + 56))(v152, 0, 1, v154);
          }
          uint64_t v183 = v147[14];
          uint64_t v184 = (void *)(v136 + v183);
          uint64_t v185 = (const void *)(v317 + v183);
          uint64_t v186 = sub_251F34D20();
          uint64_t v187 = *(void *)(v186 - 8);
          uint64_t v294 = *(unsigned int (**)(void))(v187 + 48);
          uint64_t v296 = v186;
          if (((unsigned int (*)(const void *, uint64_t, uint64_t))v294)(v185, 1, v186))
          {
            uint64_t v188 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
            memcpy(v184, v185, *(void *)(*(void *)(v188 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v187 + 32))(v184, v185, v186);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v187 + 56))(v184, 0, 1, v186);
          }
          *(void *)(v136 + v147[15]) = *(void *)(v317 + v147[15]);
          *(_OWORD *)(v136 + v147[16]) = *(_OWORD *)(v317 + v147[16]);
          *(unsigned char *)(v136 + v147[17]) = *(unsigned char *)(v317 + v147[17]);
          *(unsigned char *)(v136 + v147[18]) = *(unsigned char *)(v317 + v147[18]);
          *(unsigned char *)(v136 + v147[19]) = *(unsigned char *)(v317 + v147[19]);
          *(unsigned char *)(v136 + v147[20]) = *(unsigned char *)(v317 + v147[20]);
          *(_OWORD *)(v136 + v147[21]) = *(_OWORD *)(v317 + v147[21]);
          *(unsigned char *)(v136 + v147[22]) = *(unsigned char *)(v317 + v147[22]);
          *(unsigned char *)(v136 + v147[23]) = *(unsigned char *)(v317 + v147[23]);
          *(unsigned char *)(v136 + v147[24]) = *(unsigned char *)(v317 + v147[24]);
          uint64_t v198 = v147[25];
          uint64_t v199 = (void *)(v136 + v198);
          v200 = (const void *)(v317 + v198);
          uint64_t v201 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v311[6];
          if (v201(v317 + v198, 1, v145))
          {
            uint64_t v202 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
            memcpy(v199, v200, *(void *)(*(void *)(v202 - 8) + 64));
          }
          else
          {
            v308(v199, v200, v145);
            ((void (*)(void *, void, uint64_t, uint64_t))v311[7])(v199, 0, 1, v145);
          }
          uint64_t v210 = v147[26];
          uint64_t v211 = (void *)(v136 + v210);
          uint64_t v212 = (const void *)(v317 + v210);
          uint64_t v300 = v201;
          if (v201(v317 + v210, 1, v145))
          {
            uint64_t v213 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
            memcpy(v211, v212, *(void *)(*(void *)(v213 - 8) + 64));
            v214 = (void (*)(char *, char *, uint64_t))v308;
          }
          else
          {
            v214 = (void (*)(char *, char *, uint64_t))v308;
            v308(v211, v212, v145);
            ((void (*)(void *, void, uint64_t, uint64_t))v311[7])(v211, 0, 1, v145);
          }
          *(void *)(v136 + v147[27]) = *(void *)(v317 + v147[27]);
          *(void *)(v136 + v147[28]) = *(void *)(v317 + v147[28]);
          *(_OWORD *)(v136 + v147[29]) = *(_OWORD *)(v317 + v147[29]);
          uint64_t v221 = v147[30];
          uint64_t v222 = (char *)(v136 + v221);
          uint64_t v223 = (char *)(v317 + v221);
          uint64_t v224 = type metadata accessor for StaticSoftwareUpdate(0);
          uint64_t v225 = *(unsigned int (***)(const void *, uint64_t, uint64_t))(v224 - 8);
          if (v225[6](v223, 1, v224))
          {
            uint64_t v226 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
            memcpy(v222, v223, *(void *)(*(void *)(v226 - 8) + 64));
            uint64_t v227 = v311;
            goto LABEL_129;
          }
          __dstb = v225;
          v214(v222, v223, v302);
          uint64_t v236 = *(int *)(v224 + 20);
          uint64_t v291 = v222;
          uint64_t v237 = &v222[v236];
          uint64_t v238 = &v223[v236];
          uint64_t v239 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
          int v240 = swift_getEnumCaseMultiPayload();
          if (v240 == 2)
          {
            *(_OWORD *)uint64_t v237 = *(_OWORD *)v238;
            uint64_t v284 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
            v285 = v237;
            uint64_t v250 = v284[5];
            uint64_t v251 = &v237[v250];
            uint64_t v252 = &v238[v250];
            if (v294())
            {
LABEL_118:
              uint64_t v254 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
              memcpy(v251, v252, *(void *)(*(void *)(v254 - 8) + 64));
LABEL_127:
              uint64_t v227 = v311;
              *(_OWORD *)((char *)v285 + v284[6]) = *(_OWORD *)&v238[v284[6]];
              *(_OWORD *)((char *)v285 + v284[7]) = *(_OWORD *)&v238[v284[7]];
              uint64_t v256 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
              *((unsigned char *)v285 + *(int *)(v256 + 48)) = v238[*(int *)(v256 + 48)];
              swift_storeEnumTagMultiPayload();
              goto LABEL_128;
            }
          }
          else
          {
            if (v240 != 1)
            {
              if (v240)
              {
                memcpy(v237, v238, *(void *)(*(void *)(v239 - 8) + 64));
              }
              else
              {
                v214(v237, v238, v302);
                uint64_t v241 = (int *)type metadata accessor for StaticHH2Update(0);
                v237[v241[5]] = v238[v241[5]];
                *(_OWORD *)&v237[v241[6]] = *(_OWORD *)&v238[v241[6]];
                uint64_t v242 = v241[7];
                uint64_t v243 = &v237[v242];
                uint64_t v244 = &v238[v242];
                v243[8] = v244[8];
                *(void *)uint64_t v243 = *(void *)v244;
                swift_storeEnumTagMultiPayload();
              }
              uint64_t v227 = v311;
LABEL_128:
              ((void (*)(char *, void, uint64_t, uint64_t))__dstb[7])(v291, 0, 1, v224);
LABEL_129:
              *(unsigned char *)(v136 + v147[31]) = *(unsigned char *)(v317 + v147[31]);
              *(void *)(v136 + v147[32]) = *(void *)(v317 + v147[32]);
              uint64_t v257 = v147[33];
              v258 = (void *)(v136 + v257);
              uint64_t v259 = (const void *)(v317 + v257);
              if (v300(v317 + v257, 1, v302))
              {
                uint64_t v260 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
                memcpy(v258, v259, *(void *)(*(void *)(v260 - 8) + 64));
              }
              else
              {
                v308(v258, v259, v302);
                ((void (*)(void *, void, uint64_t, uint64_t))v227[7])(v258, 0, 1, v302);
              }
              uint64_t v261 = v147[34];
              uint64_t v262 = v136 + v261;
              uint64_t v137 = v317;
              uint64_t v263 = v317 + v261;
              *(_WORD *)uint64_t v262 = *(_WORD *)v263;
              *(unsigned char *)(v262 + 2) = *(unsigned char *)(v263 + 2);
              uint64_t v264 = v147[35];
              uint64_t v265 = v136 + v264;
              uint64_t v266 = v317 + v264;
              *(_DWORD *)(v265 + 7) = *(_DWORD *)(v266 + 7);
              *(void *)uint64_t v265 = *(void *)v266;
              goto LABEL_133;
            }
            *(_OWORD *)uint64_t v237 = *(_OWORD *)v238;
            uint64_t v284 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
            v285 = v237;
            uint64_t v253 = v284[5];
            uint64_t v251 = &v237[v253];
            uint64_t v252 = &v238[v253];
            if (v294()) {
              goto LABEL_118;
            }
          }
          (*(void (**)(char *, char *, uint64_t))(v187 + 32))(v251, v252, v296);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v187 + 56))(v251, 0, 1, v296);
          goto LABEL_127;
        case 2u:
          uint64_t v157 = sub_251F34DA0();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v157 - 8) + 32))(v136, v137, v157);
          uint64_t v158 = (int *)type metadata accessor for StaticServiceGroup();
          *(_OWORD *)(v136 + v158[5]) = *(_OWORD *)(v137 + v158[5]);
          *(unsigned char *)(v136 + v158[6]) = *(unsigned char *)(v137 + v158[6]);
          *(unsigned char *)(v136 + v158[7]) = *(unsigned char *)(v137 + v158[7]);
          *(void *)(v136 + v158[8]) = *(void *)(v137 + v158[8]);
          *(_OWORD *)(v136 + v158[9]) = *(_OWORD *)(v137 + v158[9]);
          *(unsigned char *)(v136 + v158[10]) = *(unsigned char *)(v137 + v158[10]);
          *(void *)(v136 + v158[11]) = *(void *)(v137 + v158[11]);
          goto LABEL_133;
        case 3u:
          uint64_t v159 = sub_251F34DA0();
          uint64_t v160 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v159 - 8) + 32);
          v160(v136, v137, v159);
          uint64_t v161 = (int *)type metadata accessor for StaticEndpoint();
          uint64_t v162 = v161[5];
          uint64_t v163 = v136 + v162;
          uint64_t v164 = v137 + v162;
          *(void *)uint64_t v163 = *(void *)v164;
          *(_WORD *)(v163 + 8) = *(_WORD *)(v164 + 8);
          *(_OWORD *)(v136 + v161[6]) = *(_OWORD *)(v137 + v161[6]);
          *(void *)(v136 + v161[7]) = *(void *)(v137 + v161[7]);
          *(void *)(v136 + v161[8]) = *(void *)(v137 + v161[8]);
          *(void *)(v136 + v161[9]) = *(void *)(v137 + v161[9]);
          *(void *)(v136 + v161[10]) = *(void *)(v137 + v161[10]);
          v160(v136 + v161[11], v137 + v161[11], v159);
          *(void *)(v136 + v161[12]) = *(void *)(v137 + v161[12]);
          uint64_t v165 = v161[13];
          uint64_t v166 = v136 + v165;
          uint64_t v167 = v137 + v165;
          long long v168 = *(_OWORD *)(v137 + v165 + 16);
          *(_OWORD *)uint64_t v166 = *(_OWORD *)(v137 + v165);
          *(_OWORD *)(v166 + 16) = v168;
          *(_OWORD *)(v166 + 32) = *(_OWORD *)(v137 + v165 + 32);
          *(_DWORD *)(v166 + 48) = *(_DWORD *)(v137 + v165 + 48);
          uint64_t v169 = *(int *)(type metadata accessor for MatterTileMetadata() + 44);
          int v170 = (void *)(v166 + v169);
          uint64_t v171 = (const void *)(v167 + v169);
          uint64_t v172 = sub_251F34D20();
          uint64_t v173 = *(void *)(v172 - 8);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v173 + 48))(v171, 1, v172))
          {
            uint64_t v174 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
            memcpy(v170, v171, *(void *)(*(void *)(v174 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v173 + 32))(v170, v171, v172);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v173 + 56))(v170, 0, 1, v172);
          }
          uint64_t v189 = v161[14];
          uint64_t v190 = v136 + v189;
          uint64_t v191 = v137 + v189;
          *(_WORD *)uint64_t v190 = *(_WORD *)v191;
          *(unsigned char *)(v190 + 2) = *(unsigned char *)(v191 + 2);
          *(unsigned char *)(v136 + v161[15]) = *(unsigned char *)(v137 + v161[15]);
          goto LABEL_133;
        default:
          uint64_t v138 = sub_251F34DA0();
          uint64_t v306 = *(void *)(v138 - 8);
          uint64_t v139 = *(void (**)(uint64_t, uint64_t, uint64_t))(v306 + 32);
          v139(v136, v137, v138);
          v140 = (int *)type metadata accessor for StaticAccessory(0);
          *(_OWORD *)(v136 + v140[5]) = *(_OWORD *)(v137 + v140[5]);
          uint64_t v141 = v140[6];
          uint64_t v142 = (void *)(v136 + v141);
          uint64_t v143 = (const void *)(v137 + v141);
          uint64_t v144 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            v139((uint64_t)v142, (uint64_t)v143, v138);
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v142, v143, *(void *)(*(void *)(v144 - 8) + 64));
          }
          uint64_t v175 = (void (*)(char *, char *, uint64_t))v139;
          uint64_t v176 = v140[7];
          uint64_t v177 = (char *)(v136 + v176);
          char v178 = (char *)(v137 + v176);
          uint64_t v179 = (int *)type metadata accessor for StaticDeviceMetadata();
          uint64_t v180 = *((void *)v179 - 1);
          if ((*(unsigned int (**)(char *, uint64_t, int *))(v180 + 48))(v178, 1, v179))
          {
            uint64_t v181 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
            memcpy(v177, v178, *(void *)(*(void *)(v181 - 8) + 64));
            uint64_t v182 = v138;
          }
          else
          {
            uint64_t v182 = v138;
            v175(v177, v178, v138);
            *(_OWORD *)&v177[v179[5]] = *(_OWORD *)&v178[v179[5]];
            *(_OWORD *)&v177[v179[6]] = *(_OWORD *)&v178[v179[6]];
            *(_OWORD *)&v177[v179[7]] = *(_OWORD *)&v178[v179[7]];
            *(_OWORD *)&v177[v179[8]] = *(_OWORD *)&v178[v179[8]];
            v177[v179[9]] = v178[v179[9]];
            v177[v179[10]] = v178[v179[10]];
            v177[v179[11]] = v178[v179[11]];
            v177[v179[12]] = v178[v179[12]];
            (*(void (**)(char *, void, uint64_t, int *))(v180 + 56))(v177, 0, 1, v179);
          }
          uint64_t v192 = v140[8];
          uint64_t v193 = (void *)(v136 + v192);
          uint64_t v137 = v317;
          uint64_t v194 = (const void *)(v317 + v192);
          uint64_t v195 = sub_251F34D20();
          uint64_t v196 = *(void *)(v195 - 8);
          uint64_t v299 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v196 + 48);
          uint64_t v295 = v196;
          uint64_t v303 = v195;
          if (v299(v194, 1, v195))
          {
            uint64_t v197 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
            memcpy(v193, v194, *(void *)(*(void *)(v197 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v196 + 32))(v193, v194, v195);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v196 + 56))(v193, 0, 1, v195);
          }
          uint64_t v203 = v140[9];
          uint64_t v204 = v136 + v203;
          uint64_t v205 = v317 + v203;
          *(void *)uint64_t v204 = *(void *)v205;
          *(unsigned char *)(v204 + 8) = *(unsigned char *)(v205 + 8);
          *(unsigned char *)(v136 + v140[10]) = *(unsigned char *)(v317 + v140[10]);
          v175((char *)(v136 + v140[11]), (char *)(v317 + v140[11]), v182);
          *(void *)(v136 + v140[12]) = *(void *)(v317 + v140[12]);
          *(_OWORD *)(v136 + v140[13]) = *(_OWORD *)(v317 + v140[13]);
          *(unsigned char *)(v136 + v140[14]) = *(unsigned char *)(v317 + v140[14]);
          *(unsigned char *)(v136 + v140[15]) = *(unsigned char *)(v317 + v140[15]);
          *(unsigned char *)(v136 + v140[16]) = *(unsigned char *)(v317 + v140[16]);
          *(unsigned char *)(v136 + v140[17]) = *(unsigned char *)(v317 + v140[17]);
          *(unsigned char *)(v136 + v140[18]) = *(unsigned char *)(v317 + v140[18]);
          *(void *)(v136 + v140[19]) = *(void *)(v317 + v140[19]);
          *(void *)(v136 + v140[20]) = *(void *)(v317 + v140[20]);
          uint64_t v206 = v140[21];
          uint64_t v207 = (void *)(v136 + v206);
          uint64_t v208 = (void *)(v317 + v206);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v306 + 48))(v317 + v206, 1, v182))
          {
            uint64_t v209 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
            memcpy(v207, v208, *(void *)(*(void *)(v209 - 8) + 64));
          }
          else
          {
            v175((char *)v207, (char *)v208, v182);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v306 + 56))(v207, 0, 1, v182);
          }
          *(_WORD *)(v136 + v140[22]) = *(_WORD *)(v317 + v140[22]);
          *(_OWORD *)(v136 + v140[23]) = *(_OWORD *)(v317 + v140[23]);
          *(void *)(v136 + v140[24]) = *(void *)(v317 + v140[24]);
          *(unsigned char *)(v136 + v140[25]) = *(unsigned char *)(v317 + v140[25]);
          *(unsigned char *)(v136 + v140[26]) = *(unsigned char *)(v317 + v140[26]);
          *(unsigned char *)(v136 + v140[27]) = *(unsigned char *)(v317 + v140[27]);
          uint64_t v215 = v140[28];
          uint64_t v216 = (char *)(v136 + v215);
          uint64_t v217 = (char *)(v317 + v215);
          uint64_t v218 = type metadata accessor for StaticSoftwareUpdate(0);
          uint64_t v219 = *(void *)(v218 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v219 + 48))(v217, 1, v218))
          {
            uint64_t v220 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
            memcpy(v216, v217, *(void *)(*(void *)(v220 - 8) + 64));
            goto LABEL_125;
          }
          v175(v216, v217, v182);
          uint64_t v228 = *(int *)(v218 + 20);
          uint64_t v307 = v216;
          uint64_t v229 = &v216[v228];
          uint64_t v230 = &v217[v228];
          uint64_t v292 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
          int v231 = swift_getEnumCaseMultiPayload();
          if (v231 == 2)
          {
            *(_OWORD *)uint64_t v229 = *(_OWORD *)v230;
            __int16 v245 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
            uint64_t v246 = v245[5];
            uint64_t v312 = &v229[v246];
            uint64_t v247 = &v230[v246];
            if (v299(&v230[v246], 1, v303)) {
              goto LABEL_113;
            }
            goto LABEL_121;
          }
          if (v231 == 1)
          {
            *(_OWORD *)uint64_t v229 = *(_OWORD *)v230;
            __int16 v245 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
            uint64_t v248 = v245[5];
            uint64_t v312 = &v229[v248];
            uint64_t v247 = &v230[v248];
            if (v299(&v230[v248], 1, v303))
            {
LABEL_113:
              uint64_t v249 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
              memcpy(v312, v247, *(void *)(*(void *)(v249 - 8) + 64));
LABEL_122:
              *(_OWORD *)&v229[v245[6]] = *(_OWORD *)&v230[v245[6]];
              *(_OWORD *)&v229[v245[7]] = *(_OWORD *)&v230[v245[7]];
              uint64_t v255 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
              v229[*(int *)(v255 + 48)] = v230[*(int *)(v255 + 48)];
              goto LABEL_123;
            }
LABEL_121:
            (*(void (**)(char *, char *, uint64_t))(v295 + 32))(v312, v247, v303);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v295 + 56))(v312, 0, 1, v303);
            goto LABEL_122;
          }
          if (v231)
          {
            memcpy(v229, v230, *(void *)(*(void *)(v292 - 8) + 64));
            goto LABEL_124;
          }
          v175(v229, v230, v182);
          uint64_t v232 = (int *)type metadata accessor for StaticHH2Update(0);
          v229[v232[5]] = v230[v232[5]];
          *(_OWORD *)&v229[v232[6]] = *(_OWORD *)&v230[v232[6]];
          uint64_t v233 = v232[7];
          uint64_t v234 = &v229[v233];
          uint64_t v235 = &v230[v233];
          v234[8] = v235[8];
          *(void *)uint64_t v234 = *(void *)v235;
LABEL_123:
          swift_storeEnumTagMultiPayload();
LABEL_124:
          (*(void (**)(char *, void, uint64_t, uint64_t))(v219 + 56))(v307, 0, 1, v218);
LABEL_125:
          *(unsigned char *)(v136 + v140[29]) = *(unsigned char *)(v317 + v140[29]);
          *(unsigned char *)(v136 + v140[30]) = *(unsigned char *)(v317 + v140[30]);
          *(void *)(v136 + v140[31]) = *(void *)(v317 + v140[31]);
LABEL_133:
          swift_storeEnumTagMultiPayload();
          uint64_t v267 = (int *)type metadata accessor for AccessoryDetailsBasicInfo();
          *(_OWORD *)(v136 + v267[5]) = *(_OWORD *)(v137 + v267[5]);
          uint64_t v268 = v267[6];
          uint64_t v269 = (char *)(v136 + v268);
          uint64_t v270 = (char *)(v137 + v268);
          uint64_t v271 = (int *)type metadata accessor for StaticRoom(0);
          uint64_t v272 = *((void *)v271 - 1);
          if ((*(unsigned int (**)(char *, uint64_t, int *))(v272 + 48))(v270, 1, v271))
          {
            uint64_t v273 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D138);
            memcpy(v269, v270, *(void *)(*(void *)(v273 - 8) + 64));
          }
          else
          {
            uint64_t v274 = sub_251F34DA0();
            uint64_t v275 = *(void (**)(char *, char *, uint64_t))(*(void *)(v274 - 8) + 32);
            v275(v269, v270, v274);
            *(_OWORD *)&v269[v271[5]] = *(_OWORD *)&v270[v271[5]];
            v269[v271[6]] = v270[v271[6]];
            *(void *)&v269[v271[7]] = *(void *)&v270[v271[7]];
            v275(&v269[v271[8]], &v270[v271[8]], v274);
            *(void *)&v269[v271[9]] = *(void *)&v270[v271[9]];
            *(void *)&v269[v271[10]] = *(void *)&v270[v271[10]];
            *(void *)&v269[v271[11]] = *(void *)&v270[v271[11]];
            *(void *)&v269[v271[12]] = *(void *)&v270[v271[12]];
            *(void *)&v269[v271[13]] = *(void *)&v270[v271[13]];
            *(void *)&v269[v271[14]] = *(void *)&v270[v271[14]];
            *(void *)&v269[v271[15]] = *(void *)&v270[v271[15]];
            *(void *)&v269[v271[16]] = *(void *)&v270[v271[16]];
            *(void *)&v269[v271[17]] = *(void *)&v270[v271[17]];
            *(void *)&v269[v271[18]] = *(void *)&v270[v271[18]];
            (*(void (**)(char *, void, uint64_t, int *))(v272 + 56))(v269, 0, 1, v271);
          }
          *(_OWORD *)(v136 + v267[7]) = *(_OWORD *)(v317 + v267[7]);
          *(unsigned char *)(v136 + v267[8]) = *(unsigned char *)(v317 + v267[8]);
          *(unsigned char *)(v136 + v267[9]) = *(unsigned char *)(v317 + v267[9]);
          *(unsigned char *)(v136 + v267[10]) = *(unsigned char *)(v317 + v267[10]);
          uint64_t v276 = *(int *)(v313 + 24);
          uint64_t v277 = (char *)(a1 + v276);
          uint64_t v278 = (char *)(v318 + v276);
          uint64_t v279 = (int *)type metadata accessor for StaticDeviceMetadata();
          uint64_t v280 = *((void *)v279 - 1);
          if ((*(unsigned int (**)(char *, uint64_t, int *))(v280 + 48))(v278, 1, v279))
          {
            uint64_t v281 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
            memcpy(v277, v278, *(void *)(*(void *)(v281 - 8) + 64));
          }
          else
          {
            uint64_t v282 = sub_251F34DA0();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v282 - 8) + 32))(v277, v278, v282);
            *(_OWORD *)&v277[v279[5]] = *(_OWORD *)&v278[v279[5]];
            *(_OWORD *)&v277[v279[6]] = *(_OWORD *)&v278[v279[6]];
            *(_OWORD *)&v277[v279[7]] = *(_OWORD *)&v278[v279[7]];
            *(_OWORD *)&v277[v279[8]] = *(_OWORD *)&v278[v279[8]];
            v277[v279[9]] = v278[v279[9]];
            v277[v279[10]] = v278[v279[10]];
            v277[v279[11]] = v278[v279[11]];
            v277[v279[12]] = v278[v279[12]];
            (*(void (**)(char *, void, uint64_t, int *))(v280 + 56))(v277, 0, 1, v279);
          }
          *(unsigned char *)(a1 + *(int *)(v313 + 28)) = *(unsigned char *)(v318 + *(int *)(v313 + 28));
          return a1;
      }
  }
}

uint64_t assignWithTake for AccessoryDetails(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3 = a3;
  uint64_t v4 = a2;
  uint64_t v5 = a1;
  if (a1 == a2)
  {
    uint64_t v14 = a3[5];
    uint64_t v15 = a1 + v14;
    uint64_t v16 = a2 + v14;
    goto LABEL_132;
  }
  sub_251E760C4(a1, type metadata accessor for AccessoryDetails.Payload);
  type metadata accessor for AccessoryDetails.Payload(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v17 = sub_251F34DA0();
      uint64_t v356 = *(void *)(v17 - 8);
      uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v356 + 32);
      v18(v5, v4, v17);
      uint64_t v19 = (int *)type metadata accessor for StaticService();
      *(_OWORD *)(v5 + v19[5]) = *(_OWORD *)(v4 + v19[5]);
      *(unsigned char *)(v5 + v19[6]) = *(unsigned char *)(v4 + v19[6]);
      *(unsigned char *)(v5 + v19[7]) = *(unsigned char *)(v4 + v19[7]);
      *(unsigned char *)(v5 + v19[8]) = *(unsigned char *)(v4 + v19[8]);
      *(unsigned char *)(v5 + v19[9]) = *(unsigned char *)(v4 + v19[9]);
      *(unsigned char *)(v5 + v19[10]) = *(unsigned char *)(v4 + v19[10]);
      v18(v5 + v19[11], v4 + v19[11], v17);
      uint64_t v20 = v19[12];
      uint64_t v21 = v5 + v20;
      uint64_t v22 = v4 + v20;
      *(void *)uint64_t v21 = *(void *)v22;
      *(unsigned char *)(v21 + 8) = *(unsigned char *)(v22 + 8);
      uint64_t v23 = v19[13];
      uint64_t v24 = (char *)(v5 + v23);
      uint64_t v25 = (char *)(v4 + v23);
      uint64_t v26 = (int *)type metadata accessor for StaticDeviceMetadata();
      uint64_t v27 = *((void *)v26 - 1);
      uint64_t v345 = v17;
      uint64_t v349 = (void (*)(void *, const void *, uint64_t))v18;
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v27 + 48))(v25, 1, v26))
      {
        uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
        memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        v18((uint64_t)v24, (uint64_t)v25, v17);
        *(_OWORD *)&v24[v26[5]] = *(_OWORD *)&v25[v26[5]];
        *(_OWORD *)&v24[v26[6]] = *(_OWORD *)&v25[v26[6]];
        *(_OWORD *)&v24[v26[7]] = *(_OWORD *)&v25[v26[7]];
        *(_OWORD *)&v24[v26[8]] = *(_OWORD *)&v25[v26[8]];
        v24[v26[9]] = v25[v26[9]];
        v24[v26[10]] = v25[v26[10]];
        v24[v26[11]] = v25[v26[11]];
        v24[v26[12]] = v25[v26[12]];
        (*(void (**)(char *, void, uint64_t, int *))(v27 + 56))(v24, 0, 1, v26);
      }
      uint64_t v55 = v19[14];
      uint64_t v56 = (void *)(v5 + v55);
      uint64_t v57 = (const void *)(v4 + v55);
      uint64_t v58 = sub_251F34D20();
      uint64_t v59 = *(void *)(v58 - 8);
      __int16 v336 = *(unsigned int (**)(void))(v59 + 48);
      uint64_t v3 = a3;
      if (((unsigned int (*)(const void *, uint64_t, uint64_t))v336)(v57, 1, v58))
      {
        uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
        memcpy(v56, v57, *(void *)(*(void *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v59 + 32))(v56, v57, v58);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v59 + 56))(v56, 0, 1, v58);
      }
      *(void *)(v5 + v19[15]) = *(void *)(v4 + v19[15]);
      *(_OWORD *)(v5 + v19[16]) = *(_OWORD *)(v4 + v19[16]);
      *(unsigned char *)(v5 + v19[17]) = *(unsigned char *)(v4 + v19[17]);
      *(unsigned char *)(v5 + v19[18]) = *(unsigned char *)(v4 + v19[18]);
      *(unsigned char *)(v5 + v19[19]) = *(unsigned char *)(v4 + v19[19]);
      *(unsigned char *)(v5 + v19[20]) = *(unsigned char *)(v4 + v19[20]);
      *(_OWORD *)(v5 + v19[21]) = *(_OWORD *)(v4 + v19[21]);
      *(unsigned char *)(v5 + v19[22]) = *(unsigned char *)(v4 + v19[22]);
      *(unsigned char *)(v5 + v19[23]) = *(unsigned char *)(v4 + v19[23]);
      *(unsigned char *)(v5 + v19[24]) = *(unsigned char *)(v4 + v19[24]);
      uint64_t v70 = v19[25];
      uint64_t v71 = (void *)(v5 + v70);
      uint64_t v72 = (const void *)(v4 + v70);
      uint64_t v73 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v356 + 48);
      if (v73(v4 + v70, 1, v345))
      {
        uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
        memcpy(v71, v72, *(void *)(*(void *)(v74 - 8) + 64));
      }
      else
      {
        v349(v71, v72, v345);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v356 + 56))(v71, 0, 1, v345);
      }
      uint64_t v82 = v19[26];
      int v83 = (void *)(v5 + v82);
      uint64_t v84 = (const void *)(v4 + v82);
      uint64_t v342 = v73;
      if (v73(v4 + v82, 1, v345))
      {
        uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
        memcpy(v83, v84, *(void *)(*(void *)(v85 - 8) + 64));
        uint64_t v86 = (void (*)(char *, char *, uint64_t))v349;
      }
      else
      {
        uint64_t v86 = (void (*)(char *, char *, uint64_t))v349;
        v349(v83, v84, v345);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v356 + 56))(v83, 0, 1, v345);
      }
      *(void *)(v5 + v19[27]) = *(void *)(v4 + v19[27]);
      *(void *)(v5 + v19[28]) = *(void *)(v4 + v19[28]);
      *(_OWORD *)(v5 + v19[29]) = *(_OWORD *)(v4 + v19[29]);
      uint64_t v93 = v19[30];
      __int16 v94 = (char *)(v5 + v93);
      int v95 = (char *)(v4 + v93);
      uint64_t v96 = type metadata accessor for StaticSoftwareUpdate(0);
      uint64_t v97 = *(void *)(v96 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v97 + 48))(v95, 1, v96))
      {
        uint64_t v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
        memcpy(v94, v95, *(void *)(*(void *)(v98 - 8) + 64));
        goto LABEL_64;
      }
      v86(v94, v95, v345);
      uint64_t v108 = *(int *)(v96 + 20);
      __dst = &v94[v108];
      uint64_t v109 = &v95[v108];
      uint64_t v110 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        *(_OWORD *)__dst = *(_OWORD *)v109;
        uint64_t updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        uint64_t v122 = updated[5];
        __src = &v109[v122];
        uint64_t v329 = &__dst[v122];
        if (v336())
        {
LABEL_54:
          uint64_t v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
          memcpy(v329, __src, *(void *)(*(void *)(v124 - 8) + 64));
LABEL_61:
          *(_OWORD *)&__dst[updated[6]] = *(_OWORD *)&v109[updated[6]];
          *(_OWORD *)&__dst[updated[7]] = *(_OWORD *)&v109[updated[7]];
          uint64_t v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
          __dst[*(int *)(v126 + 48)] = v109[*(int *)(v126 + 48)];
          goto LABEL_62;
        }
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          if (EnumCaseMultiPayload)
          {
            memcpy(__dst, v109, *(void *)(*(void *)(v110 - 8) + 64));
            goto LABEL_63;
          }
          v86(__dst, v109, v345);
          uint64_t v112 = (int *)type metadata accessor for StaticHH2Update(0);
          __dst[v112[5]] = v109[v112[5]];
          *(_OWORD *)&__dst[v112[6]] = *(_OWORD *)&v109[v112[6]];
          uint64_t v113 = v112[7];
          uint64_t v114 = &__dst[v113];
          uint64_t v115 = &v109[v113];
          v114[8] = v115[8];
          *(void *)uint64_t v114 = *(void *)v115;
LABEL_62:
          swift_storeEnumTagMultiPayload();
LABEL_63:
          uint64_t v3 = a3;
          (*(void (**)(char *, void, uint64_t, uint64_t))(v97 + 56))(v94, 0, 1, v96);
LABEL_64:
          uint64_t v4 = a2;
          uint64_t v5 = a1;
          *(unsigned char *)(a1 + v19[31]) = *(unsigned char *)(a2 + v19[31]);
          *(void *)(a1 + v19[32]) = *(void *)(a2 + v19[32]);
          uint64_t v127 = v19[33];
          uint64_t v128 = (void *)(a1 + v127);
          uint64_t v129 = (void *)(a2 + v127);
          if (v342(a2 + v127, 1, v345))
          {
            uint64_t v130 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
            memcpy(v128, v129, *(void *)(*(void *)(v130 - 8) + 64));
          }
          else
          {
            v86((char *)v128, (char *)v129, v345);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v356 + 56))(v128, 0, 1, v345);
          }
          uint64_t v131 = v19[34];
          uint64_t v132 = a1 + v131;
          uint64_t v133 = a2 + v131;
          *(_WORD *)uint64_t v132 = *(_WORD *)v133;
          *(unsigned char *)(v132 + 2) = *(unsigned char *)(v133 + 2);
          uint64_t v134 = v19[35];
          uint64_t v135 = a1 + v134;
          uint64_t v136 = a2 + v134;
          *(_DWORD *)(v135 + 7) = *(_DWORD *)(v136 + 7);
          *(void *)uint64_t v135 = *(void *)v136;
          goto LABEL_68;
        }
        *(_OWORD *)__dst = *(_OWORD *)v109;
        uint64_t updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        uint64_t v123 = updated[5];
        __src = &v109[v123];
        uint64_t v329 = &__dst[v123];
        if (v336()) {
          goto LABEL_54;
        }
      }
      (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v329, __src, v58);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v59 + 56))(v329, 0, 1, v58);
      goto LABEL_61;
    case 2u:
      uint64_t v29 = sub_251F34DA0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 32))(v5, v4, v29);
      uint64_t v30 = (int *)type metadata accessor for StaticServiceGroup();
      *(_OWORD *)(v5 + v30[5]) = *(_OWORD *)(v4 + v30[5]);
      *(unsigned char *)(v5 + v30[6]) = *(unsigned char *)(v4 + v30[6]);
      *(unsigned char *)(v5 + v30[7]) = *(unsigned char *)(v4 + v30[7]);
      *(void *)(v5 + v30[8]) = *(void *)(v4 + v30[8]);
      *(_OWORD *)(v5 + v30[9]) = *(_OWORD *)(v4 + v30[9]);
      *(unsigned char *)(v5 + v30[10]) = *(unsigned char *)(v4 + v30[10]);
      *(void *)(v5 + v30[11]) = *(void *)(v4 + v30[11]);
      goto LABEL_68;
    case 3u:
      uint64_t v31 = sub_251F34DA0();
      uint64_t v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 32);
      v32(v5, v4, v31);
      uint64_t v33 = (int *)type metadata accessor for StaticEndpoint();
      uint64_t v34 = v33[5];
      uint64_t v35 = v5 + v34;
      uint64_t v36 = v4 + v34;
      *(void *)uint64_t v35 = *(void *)v36;
      *(_WORD *)(v35 + 8) = *(_WORD *)(v36 + 8);
      *(_OWORD *)(v5 + v33[6]) = *(_OWORD *)(v4 + v33[6]);
      *(void *)(v5 + v33[7]) = *(void *)(v4 + v33[7]);
      *(void *)(v5 + v33[8]) = *(void *)(v4 + v33[8]);
      *(void *)(v5 + v33[9]) = *(void *)(v4 + v33[9]);
      *(void *)(v5 + v33[10]) = *(void *)(v4 + v33[10]);
      v32(v5 + v33[11], v4 + v33[11], v31);
      *(void *)(v5 + v33[12]) = *(void *)(v4 + v33[12]);
      uint64_t v37 = v33[13];
      uint64_t v38 = v5 + v37;
      uint64_t v39 = v4 + v37;
      long long v40 = *(_OWORD *)(v4 + v37 + 16);
      *(_OWORD *)uint64_t v38 = *(_OWORD *)(v4 + v37);
      *(_OWORD *)(v38 + 16) = v40;
      *(_OWORD *)(v38 + 32) = *(_OWORD *)(v4 + v37 + 32);
      *(_DWORD *)(v38 + 48) = *(_DWORD *)(v4 + v37 + 48);
      uint64_t v41 = *(int *)(type metadata accessor for MatterTileMetadata() + 44);
      uint64_t v42 = (void *)(v38 + v41);
      uint64_t v43 = (const void *)(v39 + v41);
      uint64_t v44 = sub_251F34D20();
      uint64_t v45 = *(void *)(v44 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
      {
        uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
        memcpy(v42, v43, *(void *)(*(void *)(v46 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v45 + 32))(v42, v43, v44);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
      }
      uint64_t v61 = v33[14];
      uint64_t v62 = v5 + v61;
      uint64_t v63 = v4 + v61;
      *(_WORD *)uint64_t v62 = *(_WORD *)v63;
      *(unsigned char *)(v62 + 2) = *(unsigned char *)(v63 + 2);
      *(unsigned char *)(v5 + v33[15]) = *(unsigned char *)(v4 + v33[15]);
      goto LABEL_68;
    default:
      uint64_t v6 = sub_251F34DA0();
      uint64_t v348 = *(void *)(v6 - 8);
      uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v348 + 32);
      v7(v5, v4, v6);
      uint64_t v8 = type metadata accessor for StaticAccessory(0);
      *(_OWORD *)(v5 + *(int *)(v8 + 20)) = *(_OWORD *)(v4 + *(int *)(v8 + 20));
      uint64_t v9 = (int *)v8;
      uint64_t v10 = *(int *)(v8 + 24);
      uint64_t v11 = (void *)(v5 + v10);
      uint64_t v12 = (const void *)(v4 + v10);
      uint64_t v13 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
      uint64_t v355 = (void (*)(char *, char *, uint64_t))v7;
      uint64_t v344 = v6;
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v7((uint64_t)v11, (uint64_t)v12, v6);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
      }
      uint64_t v47 = v9;
      uint64_t v48 = v9[7];
      uint64_t v49 = (char *)(v5 + v48);
      __int16 v50 = (char *)(v4 + v48);
      uint64_t v51 = (int *)type metadata accessor for StaticDeviceMetadata();
      uint64_t v52 = *((void *)v51 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v52 + 48))(v50, 1, v51))
      {
        uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
        memcpy(v49, v50, *(void *)(*(void *)(v53 - 8) + 64));
        uint64_t v54 = v344;
      }
      else
      {
        uint64_t v54 = v344;
        v7((uint64_t)v49, (uint64_t)v50, v344);
        *(_OWORD *)&v49[v51[5]] = *(_OWORD *)&v50[v51[5]];
        *(_OWORD *)&v49[v51[6]] = *(_OWORD *)&v50[v51[6]];
        *(_OWORD *)&v49[v51[7]] = *(_OWORD *)&v50[v51[7]];
        *(_OWORD *)&v49[v51[8]] = *(_OWORD *)&v50[v51[8]];
        v49[v51[9]] = v50[v51[9]];
        v49[v51[10]] = v50[v51[10]];
        v49[v51[11]] = v50[v51[11]];
        v49[v51[12]] = v50[v51[12]];
        (*(void (**)(char *, void, uint64_t, int *))(v52 + 56))(v49, 0, 1, v51);
      }
      uint64_t v64 = v9[8];
      uint64_t v65 = (void *)(a1 + v64);
      uint64_t v66 = (const void *)(a2 + v64);
      uint64_t v67 = sub_251F34D20();
      uint64_t v68 = *(void *)(v67 - 8);
      uint64_t v339 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v68 + 48);
      uint64_t v341 = v67;
      if (v339(v66, 1, v67))
      {
        uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
        memcpy(v65, v66, *(void *)(*(void *)(v69 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v68 + 32))(v65, v66, v67);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v68 + 56))(v65, 0, 1, v67);
      }
      uint64_t v75 = v9[9];
      uint64_t v76 = a1 + v75;
      uint64_t v77 = a2 + v75;
      *(void *)uint64_t v76 = *(void *)v77;
      *(unsigned char *)(v76 + 8) = *(unsigned char *)(v77 + 8);
      *(unsigned char *)(a1 + v9[10]) = *(unsigned char *)(a2 + v9[10]);
      v7(a1 + v9[11], a2 + v9[11], v54);
      *(void *)(a1 + v9[12]) = *(void *)(a2 + v9[12]);
      *(_OWORD *)(a1 + v9[13]) = *(_OWORD *)(a2 + v9[13]);
      *(unsigned char *)(a1 + v9[14]) = *(unsigned char *)(a2 + v9[14]);
      *(unsigned char *)(a1 + v9[15]) = *(unsigned char *)(a2 + v9[15]);
      *(unsigned char *)(a1 + v9[16]) = *(unsigned char *)(a2 + v9[16]);
      *(unsigned char *)(a1 + v9[17]) = *(unsigned char *)(a2 + v9[17]);
      *(unsigned char *)(a1 + v9[18]) = *(unsigned char *)(a2 + v9[18]);
      *(void *)(a1 + v9[19]) = *(void *)(a2 + v9[19]);
      *(void *)(a1 + v9[20]) = *(void *)(a2 + v9[20]);
      uint64_t v78 = v9[21];
      uint64_t v79 = (void *)(a1 + v78);
      uint64_t v80 = (const void *)(a2 + v78);
      uint64_t v334 = v68;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v348 + 48))(a2 + v78, 1, v54))
      {
        uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
        memcpy(v79, v80, *(void *)(*(void *)(v81 - 8) + 64));
      }
      else
      {
        v7((uint64_t)v79, (uint64_t)v80, v54);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v348 + 56))(v79, 0, 1, v54);
      }
      *(_WORD *)(a1 + v9[22]) = *(_WORD *)(a2 + v9[22]);
      *(_OWORD *)(a1 + v9[23]) = *(_OWORD *)(a2 + v9[23]);
      *(void *)(a1 + v9[24]) = *(void *)(a2 + v9[24]);
      *(unsigned char *)(a1 + v9[25]) = *(unsigned char *)(a2 + v9[25]);
      *(unsigned char *)(a1 + v9[26]) = *(unsigned char *)(a2 + v9[26]);
      *(unsigned char *)(a1 + v9[27]) = *(unsigned char *)(a2 + v9[27]);
      uint64_t v87 = v9[28];
      uint64_t v88 = (char *)(a1 + v87);
      uint64_t v89 = (char *)(a2 + v87);
      uint64_t v90 = type metadata accessor for StaticSoftwareUpdate(0);
      uint64_t v91 = *(void *)(v90 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v91 + 48))(v89, 1, v90))
      {
        uint64_t v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
        memcpy(v88, v89, *(void *)(*(void *)(v92 - 8) + 64));
        uint64_t v3 = a3;
        goto LABEL_59;
      }
      v7((uint64_t)v88, (uint64_t)v89, v54);
      uint64_t v99 = *(int *)(v90 + 20);
      uint64_t v100 = &v88[v99];
      uint64_t v101 = &v89[v99];
      uint64_t v102 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
      int v103 = swift_getEnumCaseMultiPayload();
      if (v103 == 2)
      {
        *(_OWORD *)uint64_t v100 = *(_OWORD *)v101;
        uint64_t v116 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        uint64_t v117 = v116[5];
        uint64_t v118 = &v100[v117];
        uint64_t v119 = &v101[v117];
        if (v339(&v101[v117], 1, v341)) {
          goto LABEL_48;
        }
        goto LABEL_56;
      }
      if (v103 == 1)
      {
        *(_OWORD *)uint64_t v100 = *(_OWORD *)v101;
        uint64_t v116 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        uint64_t v120 = v116[5];
        uint64_t v118 = &v100[v120];
        uint64_t v119 = &v101[v120];
        if (v339(&v101[v120], 1, v341))
        {
LABEL_48:
          uint64_t v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
          memcpy(v118, v119, *(void *)(*(void *)(v121 - 8) + 64));
LABEL_57:
          uint64_t v3 = a3;
          *(_OWORD *)&v100[v116[6]] = *(_OWORD *)&v101[v116[6]];
          *(_OWORD *)&v100[v116[7]] = *(_OWORD *)&v101[v116[7]];
          uint64_t v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
          v100[*(int *)(v125 + 48)] = v101[*(int *)(v125 + 48)];
          swift_storeEnumTagMultiPayload();
          goto LABEL_58;
        }
LABEL_56:
        (*(void (**)(char *, char *, uint64_t))(v334 + 32))(v118, v119, v341);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v334 + 56))(v118, 0, 1, v341);
        goto LABEL_57;
      }
      if (v103)
      {
        memcpy(v100, v101, *(void *)(*(void *)(v102 - 8) + 64));
      }
      else
      {
        v355(v100, v101, v54);
        uint64_t v104 = (int *)type metadata accessor for StaticHH2Update(0);
        v100[v104[5]] = v101[v104[5]];
        *(_OWORD *)&v100[v104[6]] = *(_OWORD *)&v101[v104[6]];
        uint64_t v105 = v104[7];
        uint64_t v106 = &v100[v105];
        uint64_t v107 = &v101[v105];
        v106[8] = v107[8];
        *(void *)uint64_t v106 = *(void *)v107;
        swift_storeEnumTagMultiPayload();
      }
      uint64_t v3 = a3;
LABEL_58:
      (*(void (**)(char *, void, uint64_t, uint64_t))(v91 + 56))(v88, 0, 1, v90);
LABEL_59:
      uint64_t v4 = a2;
      uint64_t v5 = a1;
      *(unsigned char *)(a1 + v47[29]) = *(unsigned char *)(a2 + v47[29]);
      *(unsigned char *)(a1 + v47[30]) = *(unsigned char *)(a2 + v47[30]);
      *(void *)(a1 + v47[31]) = *(void *)(a2 + v47[31]);
LABEL_68:
      swift_storeEnumTagMultiPayload();
      uint64_t v137 = v3[5];
      uint64_t v15 = v5 + v137;
      uint64_t v16 = v4 + v137;
      sub_251E760C4(v5 + v137, type metadata accessor for AccessoryDetails.Payload);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v145 = sub_251F34DA0();
          uint64_t v350 = *(void *)(v145 - 8);
          uint64_t v146 = *(void (**)(uint64_t, uint64_t, uint64_t))(v350 + 32);
          v146(v15, v16, v145);
          int64_t v147 = (int *)type metadata accessor for StaticService();
          *(_OWORD *)(v15 + v147[5]) = *(_OWORD *)(v16 + v147[5]);
          *(unsigned char *)(v15 + v147[6]) = *(unsigned char *)(v16 + v147[6]);
          *(unsigned char *)(v15 + v147[7]) = *(unsigned char *)(v16 + v147[7]);
          *(unsigned char *)(v15 + v147[8]) = *(unsigned char *)(v16 + v147[8]);
          *(unsigned char *)(v15 + v147[9]) = *(unsigned char *)(v16 + v147[9]);
          *(unsigned char *)(v15 + v147[10]) = *(unsigned char *)(v16 + v147[10]);
          v146(v15 + v147[11], v16 + v147[11], v145);
          uint64_t v148 = v147[12];
          uint64_t v149 = v15 + v148;
          uint64_t v150 = v16 + v148;
          *(void *)uint64_t v149 = *(void *)v150;
          *(unsigned char *)(v149 + 8) = *(unsigned char *)(v150 + 8);
          uint64_t v151 = v147[13];
          uint64_t v152 = (char *)(v15 + v151);
          uint64_t v153 = (char *)(v16 + v151);
          uint64_t v154 = (int *)type metadata accessor for StaticDeviceMetadata();
          uint64_t v155 = *((void *)v154 - 1);
          uint64_t v357 = v146;
          if ((*(unsigned int (**)(char *, uint64_t, int *))(v155 + 48))(v153, 1, v154))
          {
            uint64_t v156 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
            memcpy(v152, v153, *(void *)(*(void *)(v156 - 8) + 64));
          }
          else
          {
            v146((uint64_t)v152, (uint64_t)v153, v145);
            *(_OWORD *)&v152[v154[5]] = *(_OWORD *)&v153[v154[5]];
            *(_OWORD *)&v152[v154[6]] = *(_OWORD *)&v153[v154[6]];
            *(_OWORD *)&v152[v154[7]] = *(_OWORD *)&v153[v154[7]];
            *(_OWORD *)&v152[v154[8]] = *(_OWORD *)&v153[v154[8]];
            v152[v154[9]] = v153[v154[9]];
            v152[v154[10]] = v153[v154[10]];
            v152[v154[11]] = v153[v154[11]];
            v152[v154[12]] = v153[v154[12]];
            (*(void (**)(char *, void, uint64_t, int *))(v155 + 56))(v152, 0, 1, v154);
          }
          uint64_t v182 = v147[14];
          uint64_t v183 = (void *)(v15 + v182);
          uint64_t v184 = (const void *)(v16 + v182);
          uint64_t v185 = sub_251F34D20();
          uint64_t v186 = *(void *)(v185 - 8);
          uint64_t v343 = *(unsigned int (**)(void))(v186 + 48);
          uint64_t v335 = v186;
          if (((unsigned int (*)(const void *, uint64_t, uint64_t))v343)(v184, 1, v185))
          {
            uint64_t v187 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
            memcpy(v183, v184, *(void *)(*(void *)(v187 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v186 + 32))(v183, v184, v185);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v186 + 56))(v183, 0, 1, v185);
          }
          *(void *)(v15 + v147[15]) = *(void *)(v16 + v147[15]);
          *(_OWORD *)(v15 + v147[16]) = *(_OWORD *)(v16 + v147[16]);
          *(unsigned char *)(v15 + v147[17]) = *(unsigned char *)(v16 + v147[17]);
          *(unsigned char *)(v15 + v147[18]) = *(unsigned char *)(v16 + v147[18]);
          *(unsigned char *)(v15 + v147[19]) = *(unsigned char *)(v16 + v147[19]);
          *(unsigned char *)(v15 + v147[20]) = *(unsigned char *)(v16 + v147[20]);
          *(_OWORD *)(v15 + v147[21]) = *(_OWORD *)(v16 + v147[21]);
          *(unsigned char *)(v15 + v147[22]) = *(unsigned char *)(v16 + v147[22]);
          *(unsigned char *)(v15 + v147[23]) = *(unsigned char *)(v16 + v147[23]);
          *(unsigned char *)(v15 + v147[24]) = *(unsigned char *)(v16 + v147[24]);
          uint64_t v197 = v147[25];
          uint64_t v198 = (void *)(v15 + v197);
          uint64_t v199 = (const void *)(v16 + v197);
          v200 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v350 + 48);
          if (v200(v16 + v197, 1, v145))
          {
            uint64_t v201 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
            memcpy(v198, v199, *(void *)(*(void *)(v201 - 8) + 64));
          }
          else
          {
            v146((uint64_t)v198, (uint64_t)v199, v145);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v350 + 56))(v198, 0, 1, v145);
          }
          uint64_t v209 = v147[26];
          uint64_t v210 = (void *)(v15 + v209);
          uint64_t v211 = (const void *)(v16 + v209);
          uint64_t v337 = v185;
          if (v200(v16 + v209, 1, v145))
          {
            uint64_t v212 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
            memcpy(v210, v211, *(void *)(*(void *)(v212 - 8) + 64));
          }
          else
          {
            v146((uint64_t)v210, (uint64_t)v211, v145);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v350 + 56))(v210, 0, 1, v145);
          }
          *(void *)(v15 + v147[27]) = *(void *)(v16 + v147[27]);
          *(void *)(v15 + v147[28]) = *(void *)(v16 + v147[28]);
          *(_OWORD *)(v15 + v147[29]) = *(_OWORD *)(v16 + v147[29]);
          uint64_t v219 = v147[30];
          uint64_t v220 = (char *)(v15 + v219);
          uint64_t v221 = (char *)(v16 + v219);
          uint64_t v222 = type metadata accessor for StaticSoftwareUpdate(0);
          uint64_t v223 = *(unsigned int (***)(const void *, uint64_t, uint64_t))(v222 - 8);
          uint64_t v347 = v200;
          if (v223[6](v221, 1, v222))
          {
            uint64_t v224 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
            memcpy(v220, v221, *(void *)(*(void *)(v224 - 8) + 64));
            uint64_t v225 = (void (*)(void *, const void *, uint64_t))v357;
            goto LABEL_127;
          }
          __dsta = v223;
          v357((uint64_t)v220, (uint64_t)v221, v145);
          uint64_t v235 = *(int *)(v222 + 20);
          uint64_t v236 = &v220[v235];
          uint64_t v237 = &v221[v235];
          uint64_t v330 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
          int v238 = swift_getEnumCaseMultiPayload();
          uint64_t v333 = v220;
          if (v238 == 2)
          {
            *(_OWORD *)uint64_t v236 = *(_OWORD *)v237;
            uint64_t v326 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
            uint64_t v248 = v326[5];
            uint64_t v249 = &v236[v248];
            __srca = &v237[v248];
            if (v343())
            {
LABEL_118:
              uint64_t v251 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
              memcpy(v249, __srca, *(void *)(*(void *)(v251 - 8) + 64));
LABEL_125:
              uint64_t v225 = (void (*)(void *, const void *, uint64_t))v357;
              *(_OWORD *)&v236[v326[6]] = *(_OWORD *)&v237[v326[6]];
              *(_OWORD *)&v236[v326[7]] = *(_OWORD *)&v237[v326[7]];
              uint64_t v253 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
              v236[*(int *)(v253 + 48)] = v237[*(int *)(v253 + 48)];
              swift_storeEnumTagMultiPayload();
              goto LABEL_126;
            }
          }
          else
          {
            if (v238 != 1)
            {
              if (v238)
              {
                memcpy(v236, v237, *(void *)(*(void *)(v330 - 8) + 64));
                uint64_t v225 = (void (*)(void *, const void *, uint64_t))v357;
              }
              else
              {
                uint64_t v225 = (void (*)(void *, const void *, uint64_t))v357;
                v357((uint64_t)v236, (uint64_t)v237, v145);
                uint64_t v239 = (int *)type metadata accessor for StaticHH2Update(0);
                v236[v239[5]] = v237[v239[5]];
                *(_OWORD *)&v236[v239[6]] = *(_OWORD *)&v237[v239[6]];
                uint64_t v240 = v239[7];
                uint64_t v241 = &v236[v240];
                uint64_t v242 = &v237[v240];
                v241[8] = v242[8];
                *(void *)uint64_t v241 = *(void *)v242;
                swift_storeEnumTagMultiPayload();
              }
LABEL_126:
              ((void (*)(char *, void, uint64_t, uint64_t))__dsta[7])(v333, 0, 1, v222);
LABEL_127:
              *(unsigned char *)(v15 + v147[31]) = *(unsigned char *)(v16 + v147[31]);
              *(void *)(v15 + v147[32]) = *(void *)(v16 + v147[32]);
              uint64_t v254 = v147[33];
              uint64_t v255 = (void *)(v15 + v254);
              uint64_t v256 = (const void *)(v16 + v254);
              if (v347(v16 + v254, 1, v145))
              {
                uint64_t v257 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
                memcpy(v255, v256, *(void *)(*(void *)(v257 - 8) + 64));
              }
              else
              {
                v225(v255, v256, v145);
                (*(void (**)(void *, void, uint64_t, uint64_t))(v350 + 56))(v255, 0, 1, v145);
              }
              uint64_t v258 = v147[34];
              uint64_t v259 = v15 + v258;
              uint64_t v260 = v16 + v258;
              *(_WORD *)uint64_t v259 = *(_WORD *)v260;
              *(unsigned char *)(v259 + 2) = *(unsigned char *)(v260 + 2);
              uint64_t v261 = v147[35];
              uint64_t v262 = v15 + v261;
              uint64_t v263 = v16 + v261;
              *(_DWORD *)(v262 + 7) = *(_DWORD *)(v263 + 7);
              *(void *)uint64_t v262 = *(void *)v263;
              goto LABEL_131;
            }
            *(_OWORD *)uint64_t v236 = *(_OWORD *)v237;
            uint64_t v326 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
            uint64_t v250 = v326[5];
            uint64_t v249 = &v236[v250];
            __srca = &v237[v250];
            if (v343()) {
              goto LABEL_118;
            }
          }
          (*(void (**)(char *, char *, uint64_t))(v335 + 32))(v249, __srca, v337);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v335 + 56))(v249, 0, 1, v337);
          goto LABEL_125;
        case 2u:
          uint64_t v157 = sub_251F34DA0();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v157 - 8) + 32))(v15, v16, v157);
          uint64_t v158 = (int *)type metadata accessor for StaticServiceGroup();
          *(_OWORD *)(v15 + v158[5]) = *(_OWORD *)(v16 + v158[5]);
          *(unsigned char *)(v15 + v158[6]) = *(unsigned char *)(v16 + v158[6]);
          *(unsigned char *)(v15 + v158[7]) = *(unsigned char *)(v16 + v158[7]);
          *(void *)(v15 + v158[8]) = *(void *)(v16 + v158[8]);
          *(_OWORD *)(v15 + v158[9]) = *(_OWORD *)(v16 + v158[9]);
          *(unsigned char *)(v15 + v158[10]) = *(unsigned char *)(v16 + v158[10]);
          *(void *)(v15 + v158[11]) = *(void *)(v16 + v158[11]);
          goto LABEL_131;
        case 3u:
          uint64_t v159 = sub_251F34DA0();
          uint64_t v160 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v159 - 8) + 32);
          v160(v15, v16, v159);
          uint64_t v161 = (int *)type metadata accessor for StaticEndpoint();
          uint64_t v162 = v161[5];
          uint64_t v163 = v15 + v162;
          uint64_t v164 = v16 + v162;
          *(void *)uint64_t v163 = *(void *)v164;
          *(_WORD *)(v163 + 8) = *(_WORD *)(v164 + 8);
          *(_OWORD *)(v15 + v161[6]) = *(_OWORD *)(v16 + v161[6]);
          *(void *)(v15 + v161[7]) = *(void *)(v16 + v161[7]);
          *(void *)(v15 + v161[8]) = *(void *)(v16 + v161[8]);
          *(void *)(v15 + v161[9]) = *(void *)(v16 + v161[9]);
          *(void *)(v15 + v161[10]) = *(void *)(v16 + v161[10]);
          v160(v15 + v161[11], v16 + v161[11], v159);
          *(void *)(v15 + v161[12]) = *(void *)(v16 + v161[12]);
          uint64_t v165 = v161[13];
          uint64_t v166 = v15 + v165;
          uint64_t v167 = v16 + v165;
          long long v168 = *(_OWORD *)(v16 + v165 + 16);
          *(_OWORD *)uint64_t v166 = *(_OWORD *)(v16 + v165);
          *(_OWORD *)(v166 + 16) = v168;
          *(_OWORD *)(v166 + 32) = *(_OWORD *)(v16 + v165 + 32);
          *(_DWORD *)(v166 + 48) = *(_DWORD *)(v16 + v165 + 48);
          uint64_t v169 = *(int *)(type metadata accessor for MatterTileMetadata() + 44);
          int v170 = (void *)(v166 + v169);
          uint64_t v171 = (const void *)(v167 + v169);
          uint64_t v172 = sub_251F34D20();
          uint64_t v173 = *(void *)(v172 - 8);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v173 + 48))(v171, 1, v172))
          {
            uint64_t v174 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
            memcpy(v170, v171, *(void *)(*(void *)(v174 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v173 + 32))(v170, v171, v172);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v173 + 56))(v170, 0, 1, v172);
          }
          uint64_t v188 = v161[14];
          uint64_t v189 = v15 + v188;
          uint64_t v190 = v16 + v188;
          *(_WORD *)uint64_t v189 = *(_WORD *)v190;
          *(unsigned char *)(v189 + 2) = *(unsigned char *)(v190 + 2);
          *(unsigned char *)(v15 + v161[15]) = *(unsigned char *)(v16 + v161[15]);
          goto LABEL_131;
        default:
          uint64_t v138 = sub_251F34DA0();
          uint64_t v353 = *(void *)(v138 - 8);
          uint64_t v139 = *(void (**)(uint64_t, uint64_t, uint64_t))(v353 + 32);
          v139(v15, v16, v138);
          v140 = (int *)type metadata accessor for StaticAccessory(0);
          *(_OWORD *)(v15 + v140[5]) = *(_OWORD *)(v16 + v140[5]);
          uint64_t v141 = v140[6];
          uint64_t v142 = (void *)(v15 + v141);
          uint64_t v143 = (const void *)(v16 + v141);
          uint64_t v144 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            v139((uint64_t)v142, (uint64_t)v143, v138);
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v142, v143, *(void *)(*(void *)(v144 - 8) + 64));
          }
          uint64_t v175 = v139;
          uint64_t v176 = v140[7];
          uint64_t v177 = (char *)(v15 + v176);
          char v178 = (char *)(v16 + v176);
          uint64_t v179 = (int *)type metadata accessor for StaticDeviceMetadata();
          uint64_t v180 = *((void *)v179 - 1);
          if ((*(unsigned int (**)(char *, uint64_t, int *))(v180 + 48))(v178, 1, v179))
          {
            uint64_t v181 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
            memcpy(v177, v178, *(void *)(*(void *)(v181 - 8) + 64));
          }
          else
          {
            v139((uint64_t)v177, (uint64_t)v178, v138);
            *(_OWORD *)&v177[v179[5]] = *(_OWORD *)&v178[v179[5]];
            *(_OWORD *)&v177[v179[6]] = *(_OWORD *)&v178[v179[6]];
            *(_OWORD *)&v177[v179[7]] = *(_OWORD *)&v178[v179[7]];
            *(_OWORD *)&v177[v179[8]] = *(_OWORD *)&v178[v179[8]];
            v177[v179[9]] = v178[v179[9]];
            v177[v179[10]] = v178[v179[10]];
            v177[v179[11]] = v178[v179[11]];
            v177[v179[12]] = v178[v179[12]];
            (*(void (**)(char *, void, uint64_t, int *))(v180 + 56))(v177, 0, 1, v179);
          }
          uint64_t v191 = v140[8];
          uint64_t v192 = (void *)(v15 + v191);
          uint64_t v193 = (const void *)(v16 + v191);
          uint64_t v194 = sub_251F34D20();
          uint64_t v195 = *(void *)(v194 - 8);
          uint64_t v346 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v195 + 48);
          uint64_t v340 = v195;
          if (v346(v193, 1, v194))
          {
            uint64_t v196 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
            memcpy(v192, v193, *(void *)(*(void *)(v196 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v195 + 32))(v192, v193, v194);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v195 + 56))(v192, 0, 1, v194);
          }
          uint64_t v202 = v140[9];
          uint64_t v203 = v15 + v202;
          uint64_t v204 = v16 + v202;
          *(void *)uint64_t v203 = *(void *)v204;
          *(unsigned char *)(v203 + 8) = *(unsigned char *)(v204 + 8);
          *(unsigned char *)(v15 + v140[10]) = *(unsigned char *)(v16 + v140[10]);
          v175(v15 + v140[11], v16 + v140[11], v138);
          *(void *)(v15 + v140[12]) = *(void *)(v16 + v140[12]);
          *(_OWORD *)(v15 + v140[13]) = *(_OWORD *)(v16 + v140[13]);
          *(unsigned char *)(v15 + v140[14]) = *(unsigned char *)(v16 + v140[14]);
          *(unsigned char *)(v15 + v140[15]) = *(unsigned char *)(v16 + v140[15]);
          *(unsigned char *)(v15 + v140[16]) = *(unsigned char *)(v16 + v140[16]);
          *(unsigned char *)(v15 + v140[17]) = *(unsigned char *)(v16 + v140[17]);
          *(unsigned char *)(v15 + v140[18]) = *(unsigned char *)(v16 + v140[18]);
          *(void *)(v15 + v140[19]) = *(void *)(v16 + v140[19]);
          *(void *)(v15 + v140[20]) = *(void *)(v16 + v140[20]);
          uint64_t v205 = v140[21];
          uint64_t v206 = (void *)(v15 + v205);
          uint64_t v207 = (const void *)(v16 + v205);
          v351 = (void (*)(char *, char *, uint64_t))v175;
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v353 + 48))(v16 + v205, 1, v138))
          {
            uint64_t v208 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
            memcpy(v206, v207, *(void *)(*(void *)(v208 - 8) + 64));
          }
          else
          {
            v175((uint64_t)v206, (uint64_t)v207, v138);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v353 + 56))(v206, 0, 1, v138);
          }
          *(_WORD *)(v15 + v140[22]) = *(_WORD *)(v16 + v140[22]);
          *(_OWORD *)(v15 + v140[23]) = *(_OWORD *)(v16 + v140[23]);
          *(void *)(v15 + v140[24]) = *(void *)(v16 + v140[24]);
          *(unsigned char *)(v15 + v140[25]) = *(unsigned char *)(v16 + v140[25]);
          *(unsigned char *)(v15 + v140[26]) = *(unsigned char *)(v16 + v140[26]);
          *(unsigned char *)(v15 + v140[27]) = *(unsigned char *)(v16 + v140[27]);
          uint64_t v213 = v140[28];
          v214 = (char *)(v15 + v213);
          uint64_t v215 = (char *)(v16 + v213);
          uint64_t v216 = type metadata accessor for StaticSoftwareUpdate(0);
          uint64_t v217 = *(void *)(v216 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v217 + 48))(v215, 1, v216))
          {
            uint64_t v218 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
            memcpy(v214, v215, *(void *)(*(void *)(v218 - 8) + 64));
            goto LABEL_123;
          }
          uint64_t v338 = v217;
          v351(v214, v215, v138);
          uint64_t v226 = *(int *)(v216 + 20);
          uint64_t v354 = v214;
          uint64_t v227 = &v214[v226];
          uint64_t v228 = &v215[v226];
          uint64_t v229 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
          int v230 = swift_getEnumCaseMultiPayload();
          if (v230 == 2)
          {
            *(_OWORD *)uint64_t v227 = *(_OWORD *)v228;
            v352 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
            uint64_t v243 = v352[5];
            v358 = v227;
            uint64_t v244 = &v227[v243];
            __int16 v245 = &v228[v243];
            if (v346(&v228[v243], 1, v194)) {
              goto LABEL_113;
            }
            goto LABEL_120;
          }
          if (v230 == 1)
          {
            *(_OWORD *)uint64_t v227 = *(_OWORD *)v228;
            v352 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
            uint64_t v246 = v352[5];
            v358 = v227;
            uint64_t v244 = &v227[v246];
            __int16 v245 = &v228[v246];
            if (v346(&v228[v246], 1, v194))
            {
LABEL_113:
              uint64_t v247 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
              memcpy(v244, v245, *(void *)(*(void *)(v247 - 8) + 64));
LABEL_121:
              *(_OWORD *)((char *)v358 + v352[6]) = *(_OWORD *)&v228[v352[6]];
              *(_OWORD *)((char *)v358 + v352[7]) = *(_OWORD *)&v228[v352[7]];
              uint64_t v252 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
              *((unsigned char *)v358 + *(int *)(v252 + 48)) = v228[*(int *)(v252 + 48)];
              swift_storeEnumTagMultiPayload();
              goto LABEL_122;
            }
LABEL_120:
            (*(void (**)(char *, char *, uint64_t))(v340 + 32))(v244, v245, v194);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v340 + 56))(v244, 0, 1, v194);
            goto LABEL_121;
          }
          if (v230)
          {
            memcpy(v227, v228, *(void *)(*(void *)(v229 - 8) + 64));
          }
          else
          {
            v351(v227, v228, v138);
            int v231 = (int *)type metadata accessor for StaticHH2Update(0);
            v227[v231[5]] = v228[v231[5]];
            *(_OWORD *)&v227[v231[6]] = *(_OWORD *)&v228[v231[6]];
            uint64_t v232 = v231[7];
            uint64_t v233 = &v227[v232];
            uint64_t v234 = &v228[v232];
            v233[8] = v234[8];
            *(void *)uint64_t v233 = *(void *)v234;
            swift_storeEnumTagMultiPayload();
          }
LABEL_122:
          (*(void (**)(char *, void, uint64_t, uint64_t))(v338 + 56))(v354, 0, 1, v216);
LABEL_123:
          *(unsigned char *)(v15 + v140[29]) = *(unsigned char *)(v16 + v140[29]);
          *(unsigned char *)(v15 + v140[30]) = *(unsigned char *)(v16 + v140[30]);
          *(void *)(v15 + v140[31]) = *(void *)(v16 + v140[31]);
LABEL_131:
          swift_storeEnumTagMultiPayload();
LABEL_132:
          uint64_t v264 = (int *)type metadata accessor for AccessoryDetailsBasicInfo();
          uint64_t v265 = v264[5];
          uint64_t v266 = (void *)(v15 + v265);
          uint64_t v267 = (uint64_t *)(v16 + v265);
          uint64_t v269 = *v267;
          uint64_t v268 = v267[1];
          void *v266 = v269;
          v266[1] = v268;
          swift_bridgeObjectRelease();
          uint64_t v270 = v264[6];
          uint64_t v271 = (unsigned char *)(v15 + v270);
          uint64_t v272 = (unsigned char *)(v16 + v270);
          uint64_t v273 = (int *)type metadata accessor for StaticRoom(0);
          uint64_t v274 = *((void *)v273 - 1);
          uint64_t v275 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v274 + 48);
          int v276 = v275(v271, 1, v273);
          int v277 = v275(v272, 1, v273);
          if (v276)
          {
            if (!v277)
            {
              uint64_t v278 = sub_251F34DA0();
              uint64_t v279 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v278 - 8) + 32);
              v279(v271, v272, v278);
              *(_OWORD *)&v271[v273[5]] = *(_OWORD *)&v272[v273[5]];
              v271[v273[6]] = v272[v273[6]];
              *(void *)&v271[v273[7]] = *(void *)&v272[v273[7]];
              v279(&v271[v273[8]], &v272[v273[8]], v278);
              *(void *)&v271[v273[9]] = *(void *)&v272[v273[9]];
              *(void *)&v271[v273[10]] = *(void *)&v272[v273[10]];
              *(void *)&v271[v273[11]] = *(void *)&v272[v273[11]];
              *(void *)&v271[v273[12]] = *(void *)&v272[v273[12]];
              *(void *)&v271[v273[13]] = *(void *)&v272[v273[13]];
              *(void *)&v271[v273[14]] = *(void *)&v272[v273[14]];
              *(void *)&v271[v273[15]] = *(void *)&v272[v273[15]];
              *(void *)&v271[v273[16]] = *(void *)&v272[v273[16]];
              *(void *)&v271[v273[17]] = *(void *)&v272[v273[17]];
              *(void *)&v271[v273[18]] = *(void *)&v272[v273[18]];
              (*(void (**)(unsigned char *, void, uint64_t, int *))(v274 + 56))(v271, 0, 1, v273);
              goto LABEL_138;
            }
            goto LABEL_137;
          }
          if (v277)
          {
            sub_251E760C4((uint64_t)v271, type metadata accessor for StaticRoom);
LABEL_137:
            uint64_t v280 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D138);
            memcpy(v271, v272, *(void *)(*(void *)(v280 - 8) + 64));
            goto LABEL_138;
          }
          uint64_t v297 = sub_251F34DA0();
          uint64_t v298 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v297 - 8) + 40);
          v298(v271, v272, v297);
          uint64_t v299 = v273[5];
          uint64_t v300 = &v271[v299];
          uint64_t v301 = (uint64_t *)&v272[v299];
          uint64_t v303 = *v301;
          uint64_t v302 = v301[1];
          void *v300 = v303;
          v300[1] = v302;
          swift_bridgeObjectRelease();
          v271[v273[6]] = v272[v273[6]];
          *(void *)&v271[v273[7]] = *(void *)&v272[v273[7]];
          swift_bridgeObjectRelease();
          v298(&v271[v273[8]], &v272[v273[8]], v297);
          *(void *)&v271[v273[9]] = *(void *)&v272[v273[9]];
          swift_bridgeObjectRelease();
          *(void *)&v271[v273[10]] = *(void *)&v272[v273[10]];
          swift_bridgeObjectRelease();
          *(void *)&v271[v273[11]] = *(void *)&v272[v273[11]];
          swift_bridgeObjectRelease();
          *(void *)&v271[v273[12]] = *(void *)&v272[v273[12]];
          swift_bridgeObjectRelease();
          *(void *)&v271[v273[13]] = *(void *)&v272[v273[13]];
          swift_bridgeObjectRelease();
          *(void *)&v271[v273[14]] = *(void *)&v272[v273[14]];
          swift_bridgeObjectRelease();
          *(void *)&v271[v273[15]] = *(void *)&v272[v273[15]];
          swift_bridgeObjectRelease();
          *(void *)&v271[v273[16]] = *(void *)&v272[v273[16]];
          swift_bridgeObjectRelease();
          *(void *)&v271[v273[17]] = *(void *)&v272[v273[17]];
          swift_bridgeObjectRelease();
          *(void *)&v271[v273[18]] = *(void *)&v272[v273[18]];
          swift_bridgeObjectRelease();
LABEL_138:
          uint64_t v281 = v264[7];
          uint64_t v282 = (void *)(v15 + v281);
          uint64_t v283 = (uint64_t *)(v16 + v281);
          uint64_t v285 = *v283;
          uint64_t v284 = v283[1];
          void *v282 = v285;
          v282[1] = v284;
          swift_bridgeObjectRelease();
          *(unsigned char *)(v15 + v264[8]) = *(unsigned char *)(v16 + v264[8]);
          *(unsigned char *)(v15 + v264[9]) = *(unsigned char *)(v16 + v264[9]);
          *(unsigned char *)(v15 + v264[10]) = *(unsigned char *)(v16 + v264[10]);
          uint64_t v286 = a3[6];
          uint64_t v287 = (unsigned char *)(a1 + v286);
          v288 = (unsigned char *)(a2 + v286);
          uint64_t v289 = (int *)type metadata accessor for StaticDeviceMetadata();
          uint64_t v290 = *((void *)v289 - 1);
          uint64_t v291 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v290 + 48);
          int v292 = v291(v287, 1, v289);
          int v293 = v291(v288, 1, v289);
          if (!v292)
          {
            if (!v293)
            {
              uint64_t v304 = sub_251F34DA0();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v304 - 8) + 40))(v287, v288, v304);
              uint64_t v305 = v289[5];
              uint64_t v306 = &v287[v305];
              uint64_t v307 = (uint64_t *)&v288[v305];
              uint64_t v309 = *v307;
              uint64_t v308 = v307[1];
              void *v306 = v309;
              v306[1] = v308;
              swift_bridgeObjectRelease();
              uint64_t v310 = v289[6];
              uint64_t v311 = &v287[v310];
              uint64_t v312 = (uint64_t *)&v288[v310];
              uint64_t v314 = *v312;
              uint64_t v313 = v312[1];
              void *v311 = v314;
              v311[1] = v313;
              swift_bridgeObjectRelease();
              uint64_t v315 = v289[7];
              uint64_t v316 = &v287[v315];
              uint64_t v317 = (uint64_t *)&v288[v315];
              uint64_t v319 = *v317;
              uint64_t v318 = v317[1];
              *uint64_t v316 = v319;
              v316[1] = v318;
              swift_bridgeObjectRelease();
              uint64_t v320 = v289[8];
              v321 = &v287[v320];
              uint64_t v322 = (uint64_t *)&v288[v320];
              uint64_t v324 = *v322;
              uint64_t v323 = v322[1];
              void *v321 = v324;
              v321[1] = v323;
              swift_bridgeObjectRelease();
              v287[v289[9]] = v288[v289[9]];
              v287[v289[10]] = v288[v289[10]];
              v287[v289[11]] = v288[v289[11]];
              v287[v289[12]] = v288[v289[12]];
              goto LABEL_144;
            }
            sub_251E760C4((uint64_t)v287, (uint64_t (*)(void))type metadata accessor for StaticDeviceMetadata);
            goto LABEL_143;
          }
          if (v293)
          {
LABEL_143:
            uint64_t v295 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
            memcpy(v287, v288, *(void *)(*(void *)(v295 - 8) + 64));
            goto LABEL_144;
          }
          uint64_t v294 = sub_251F34DA0();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v294 - 8) + 32))(v287, v288, v294);
          *(_OWORD *)&v287[v289[5]] = *(_OWORD *)&v288[v289[5]];
          *(_OWORD *)&v287[v289[6]] = *(_OWORD *)&v288[v289[6]];
          *(_OWORD *)&v287[v289[7]] = *(_OWORD *)&v288[v289[7]];
          *(_OWORD *)&v287[v289[8]] = *(_OWORD *)&v288[v289[8]];
          v287[v289[9]] = v288[v289[9]];
          v287[v289[10]] = v288[v289[10]];
          v287[v289[11]] = v288[v289[11]];
          v287[v289[12]] = v288[v289[12]];
          (*(void (**)(unsigned char *, void, uint64_t, int *))(v290 + 56))(v287, 0, 1, v289);
LABEL_144:
          *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
          return a1;
      }
  }
}

uint64_t getEnumTagSinglePayload for AccessoryDetails(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251E9BB94);
}

uint64_t sub_251E9BB94(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for AccessoryDetails.Payload(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for AccessoryDetailsBasicInfo();
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_7;
  }
  if (*(unsigned __int8 *)(a1 + a3[7]) <= 8u) {
    int v16 = 8;
  }
  else {
    int v16 = *(unsigned __int8 *)(a1 + a3[7]);
  }
  unsigned int v17 = v16 - 8;
  if (*(unsigned __int8 *)(a1 + a3[7]) >= 2u) {
    return v17;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for AccessoryDetails(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251E9BD14);
}

uint64_t sub_251E9BD14(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = type metadata accessor for AccessoryDetails.Payload(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t v13 = type metadata accessor for AccessoryDetailsBasicInfo();
    if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
    {
      uint64_t v10 = v13;
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = a4[5];
    }
    else
    {
      uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
      if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
      {
        *(unsigned char *)(a1 + a4[7]) = a2 + 8;
        return result;
      }
      uint64_t v10 = result;
      uint64_t v14 = *(void *)(result - 8);
      uint64_t v15 = a4[6];
    }
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_251E9BE74()
{
  type metadata accessor for AccessoryDetails.Payload(319);
  if (v0 <= 0x3F)
  {
    type metadata accessor for AccessoryDetailsBasicInfo();
    if (v1 <= 0x3F)
    {
      sub_251E9BF80();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_251E9BF80()
{
  if (!qword_26B21FDE0[0])
  {
    type metadata accessor for StaticDeviceMetadata();
    unint64_t v0 = sub_251F36190();
    if (!v1) {
      atomic_store(v0, qword_26B21FDE0);
    }
  }
}

char *initializeBufferWithCopyOfBuffer for AccessoryDetails.Payload(char *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v17 = sub_251F34DA0();
        uint64_t v282 = *(void *)(v17 - 8);
        uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v282 + 16);
        v18(a1, a2, v17);
        uint64_t v19 = (int *)type metadata accessor for StaticService();
        uint64_t v20 = v19[5];
        uint64_t v21 = &a1[v20];
        uint64_t v22 = &a2[v20];
        uint64_t v23 = *((void *)v22 + 1);
        *(void *)uint64_t v21 = *(void *)v22;
        *((void *)v21 + 1) = v23;
        a1[v19[6]] = a2[v19[6]];
        a1[v19[7]] = a2[v19[7]];
        a1[v19[8]] = a2[v19[8]];
        a1[v19[9]] = a2[v19[9]];
        a1[v19[10]] = a2[v19[10]];
        uint64_t v24 = v19[11];
        uint64_t v25 = &a1[v24];
        uint64_t v26 = &a2[v24];
        swift_bridgeObjectRetain();
        uint64_t v27 = v25;
        uint64_t v28 = v17;
        v18(v27, v26, v17);
        uint64_t v29 = v19[12];
        uint64_t v30 = &a1[v29];
        uint64_t v31 = &a2[v29];
        *(void *)uint64_t v30 = *(void *)v31;
        v30[8] = v31[8];
        uint64_t v32 = v19[13];
        uint64_t v33 = &a1[v32];
        uint64_t v34 = &a2[v32];
        uint64_t v35 = (int *)type metadata accessor for StaticDeviceMetadata();
        uint64_t v36 = *((void *)v35 - 1);
        uint64_t v287 = v18;
        uint64_t v289 = v28;
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v36 + 48))(v34, 1, v35))
        {
          uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
          memcpy(v33, v34, *(void *)(*(void *)(v37 - 8) + 64));
        }
        else
        {
          v18(v33, v34, v28);
          uint64_t v79 = v35[5];
          uint64_t v80 = &v33[v79];
          uint64_t v81 = &v34[v79];
          uint64_t v82 = *((void *)v81 + 1);
          *(void *)uint64_t v80 = *(void *)v81;
          *((void *)v80 + 1) = v82;
          uint64_t v83 = v35[6];
          uint64_t v84 = &v33[v83];
          uint64_t v85 = &v34[v83];
          uint64_t v86 = *((void *)v85 + 1);
          *(void *)uint64_t v84 = *(void *)v85;
          *((void *)v84 + 1) = v86;
          uint64_t v87 = v35[7];
          uint64_t v88 = &v33[v87];
          uint64_t v89 = &v34[v87];
          uint64_t v90 = *((void *)v89 + 1);
          *(void *)uint64_t v88 = *(void *)v89;
          *((void *)v88 + 1) = v90;
          uint64_t v91 = v35[8];
          uint64_t v92 = &v33[v91];
          uint64_t v93 = &v34[v91];
          uint64_t v94 = *((void *)v93 + 1);
          *(void *)uint64_t v92 = *(void *)v93;
          *((void *)v92 + 1) = v94;
          v33[v35[9]] = v34[v35[9]];
          v33[v35[10]] = v34[v35[10]];
          v33[v35[11]] = v34[v35[11]];
          v33[v35[12]] = v34[v35[12]];
          int v95 = *(void (**)(char *, void, uint64_t, int *))(v36 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v95(v33, 0, 1, v35);
        }
        uint64_t v96 = v19[14];
        uint64_t v97 = &a1[v96];
        uint64_t v98 = &a2[v96];
        uint64_t v99 = sub_251F34D20();
        uint64_t v100 = *(void *)(v99 - 8);
        uint64_t v269 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v100 + 48);
        uint64_t v271 = v99;
        uint64_t v268 = v100;
        if (v269(v98, 1, v99))
        {
          uint64_t v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
          memcpy(v97, v98, *(void *)(*(void *)(v101 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v100 + 16))(v97, v98, v99);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v100 + 56))(v97, 0, 1, v99);
        }
        *(void *)&a1[v19[15]] = *(void *)&a2[v19[15]];
        uint64_t v128 = v19[16];
        uint64_t v129 = &a1[v128];
        uint64_t v130 = &a2[v128];
        uint64_t v131 = *((void *)v130 + 1);
        *(void *)uint64_t v129 = *(void *)v130;
        *((void *)v129 + 1) = v131;
        a1[v19[17]] = a2[v19[17]];
        a1[v19[18]] = a2[v19[18]];
        a1[v19[19]] = a2[v19[19]];
        a1[v19[20]] = a2[v19[20]];
        uint64_t v132 = v19[21];
        uint64_t v133 = &a1[v132];
        uint64_t v134 = &a2[v132];
        uint64_t v135 = *((void *)v134 + 1);
        *(void *)uint64_t v133 = *(void *)v134;
        *((void *)v133 + 1) = v135;
        a1[v19[22]] = a2[v19[22]];
        a1[v19[23]] = a2[v19[23]];
        a1[v19[24]] = a2[v19[24]];
        uint64_t v136 = v19[25];
        uint64_t v137 = &a1[v136];
        uint64_t v138 = &a2[v136];
        uint64_t v139 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v282 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v139(v138, 1, v289))
        {
          uint64_t v140 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
          memcpy(v137, v138, *(void *)(*(void *)(v140 - 8) + 64));
        }
        else
        {
          v287(v137, v138, v289);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v282 + 56))(v137, 0, 1, v289);
        }
        uint64_t v152 = v19[26];
        uint64_t v153 = &a1[v152];
        uint64_t v154 = &a2[v152];
        uint64_t v273 = v139;
        if (v139(&a2[v152], 1, v289))
        {
          uint64_t v155 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
          memcpy(v153, v154, *(void *)(*(void *)(v155 - 8) + 64));
        }
        else
        {
          v287(v153, v154, v289);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v282 + 56))(v153, 0, 1, v289);
        }
        *(void *)&a1[v19[27]] = *(void *)&a2[v19[27]];
        *(void *)&a1[v19[28]] = *(void *)&a2[v19[28]];
        uint64_t v166 = v19[29];
        uint64_t v167 = &a1[v166];
        long long v168 = &a2[v166];
        uint64_t v169 = v19;
        uint64_t v170 = *((void *)v168 + 1);
        *(void *)uint64_t v167 = *(void *)v168;
        *((void *)v167 + 1) = v170;
        uint64_t v171 = v169[30];
        uint64_t v278 = v169;
        __dsta = &a1[v171];
        uint64_t v172 = &a2[v171];
        uint64_t v173 = type metadata accessor for StaticSoftwareUpdate(0);
        uint64_t v174 = *(void *)(v173 - 8);
        uint64_t v275 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v174 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v275(v172, 1, v173))
        {
          uint64_t v175 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
          memcpy(__dsta, v172, *(void *)(*(void *)(v175 - 8) + 64));
          uint64_t v176 = v287;
          uint64_t v177 = v273;
          char v178 = v278;
LABEL_67:
          a1[v178[31]] = a2[v178[31]];
          *(void *)&a1[v178[32]] = *(void *)&a2[v178[32]];
          uint64_t v254 = v178[33];
          uint64_t v255 = &a1[v254];
          uint64_t v256 = &a2[v254];
          swift_bridgeObjectRetain();
          if (v177(v256, 1, v289))
          {
            uint64_t v257 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
            memcpy(v255, v256, *(void *)(*(void *)(v257 - 8) + 64));
          }
          else
          {
            v176(v255, v256, v289);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v282 + 56))(v255, 0, 1, v289);
          }
          uint64_t v258 = v178[34];
          uint64_t v259 = &a1[v258];
          uint64_t v260 = &a2[v258];
          *(_WORD *)uint64_t v259 = *(_WORD *)v260;
          v259[2] = v260[2];
          uint64_t v261 = v178[35];
          uint64_t v262 = &a1[v261];
          uint64_t v263 = &a2[v261];
          *(_DWORD *)(v262 + 7) = *(_DWORD *)(v263 + 7);
          *(void *)uint64_t v262 = *(void *)v263;
          goto LABEL_71;
        }
        uint64_t v276 = v174;
        uint64_t v192 = __dsta;
        uint64_t v176 = v287;
        v287(__dsta, v172, v289);
        uint64_t v193 = *(int *)(v173 + 20);
        uint64_t v194 = &__dsta[v193];
        uint64_t v195 = &v172[v193];
        uint64_t v196 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          uint64_t v214 = *((void *)v195 + 1);
          *(void *)uint64_t v194 = *(void *)v195;
          *((void *)v194 + 1) = v214;
          uint64_t updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
          uint64_t v216 = updated[5];
          uint64_t v266 = &v194[v216];
          uint64_t v217 = &v195[v216];
          swift_bridgeObjectRetain();
          if (v269(v217, 1, v271))
          {
            uint64_t v218 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
            memcpy(v266, v217, *(void *)(*(void *)(v218 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v268 + 16))(v266, v217, v271);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v268 + 56))(v266, 0, 1, v271);
          }
          uint64_t v236 = updated[6];
          uint64_t v237 = &v194[v236];
          int v238 = &v195[v236];
          uint64_t v239 = *((void *)v238 + 1);
          *(void *)uint64_t v237 = *(void *)v238;
          *((void *)v237 + 1) = v239;
          uint64_t v240 = updated[7];
          uint64_t v241 = &v194[v240];
          uint64_t v242 = &v195[v240];
          uint64_t v243 = *((void *)v242 + 1);
          *(void *)uint64_t v241 = *(void *)v242;
          *((void *)v241 + 1) = v243;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v244 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
          v194[*(int *)(v244 + 48)] = v195[*(int *)(v244 + 48)];
          swift_storeEnumTagMultiPayload();
          uint64_t v177 = v273;
          char v178 = v278;
        }
        else
        {
          if (EnumCaseMultiPayload != 1)
          {
            char v178 = v278;
            if (EnumCaseMultiPayload)
            {
              memcpy(v194, v195, *(void *)(*(void *)(v196 - 8) + 64));
            }
            else
            {
              v287(v194, v195, v289);
              uint64_t v198 = (int *)type metadata accessor for StaticHH2Update(0);
              v194[v198[5]] = v195[v198[5]];
              uint64_t v199 = v198[6];
              v200 = &v194[v199];
              uint64_t v201 = &v195[v199];
              uint64_t v203 = *(void *)v201;
              uint64_t v202 = *((void *)v201 + 1);
              *(void *)v200 = v203;
              *((void *)v200 + 1) = v202;
              uint64_t v204 = v198[7];
              uint64_t v205 = &v194[v204];
              uint64_t v206 = &v195[v204];
              v205[8] = v206[8];
              *(void *)uint64_t v205 = *(void *)v206;
              swift_bridgeObjectRetain();
              swift_storeEnumTagMultiPayload();
            }
            uint64_t v177 = v273;
            uint64_t v226 = v276;
            goto LABEL_66;
          }
          uint64_t v219 = *((void *)v195 + 1);
          *(void *)uint64_t v194 = *(void *)v195;
          *((void *)v194 + 1) = v219;
          uint64_t v220 = type metadata accessor for StaticSoftwareUpdateMetadata(0);
          uint64_t v221 = *(int *)(v220 + 20);
          uint64_t v265 = v220;
          uint64_t v267 = &v194[v221];
          uint64_t v222 = &v195[v221];
          swift_bridgeObjectRetain();
          uint64_t v223 = v222;
          unsigned int v224 = v269(v222, 1, v271);
          char v178 = v278;
          if (v224)
          {
            uint64_t v225 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
            memcpy(v267, v223, *(void *)(*(void *)(v225 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, const void *, uint64_t))(v268 + 16))(v267, v223, v271);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v268 + 56))(v267, 0, 1, v271);
            char v178 = v278;
          }
          uint64_t v245 = *(int *)(v265 + 24);
          uint64_t v246 = &v194[v245];
          uint64_t v247 = &v195[v245];
          uint64_t v248 = *((void *)v247 + 1);
          *(void *)uint64_t v246 = *(void *)v247;
          *((void *)v246 + 1) = v248;
          uint64_t v249 = *(int *)(v265 + 28);
          uint64_t v250 = &v194[v249];
          uint64_t v251 = &v195[v249];
          uint64_t v252 = *((void *)v251 + 1);
          *(void *)uint64_t v250 = *(void *)v251;
          *((void *)v250 + 1) = v252;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v253 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
          v194[*(int *)(v253 + 48)] = v195[*(int *)(v253 + 48)];
          swift_storeEnumTagMultiPayload();
          uint64_t v177 = v273;
        }
        uint64_t v226 = v276;
        uint64_t v192 = __dsta;
LABEL_66:
        (*(void (**)(char *, void, uint64_t, uint64_t))(v226 + 56))(v192, 0, 1, v173);
        goto LABEL_67;
      case 2u:
        uint64_t v38 = sub_251F34DA0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16))(a1, a2, v38);
        uint64_t v39 = (int *)type metadata accessor for StaticServiceGroup();
        uint64_t v40 = v39[5];
        uint64_t v41 = &a1[v40];
        uint64_t v42 = (uint64_t *)&a2[v40];
        uint64_t v44 = *v42;
        uint64_t v43 = v42[1];
        *(void *)uint64_t v41 = v44;
        *((void *)v41 + 1) = v43;
        a1[v39[6]] = a2[v39[6]];
        a1[v39[7]] = a2[v39[7]];
        *(void *)&a1[v39[8]] = *(void *)&a2[v39[8]];
        uint64_t v45 = v39[9];
        uint64_t v46 = &a1[v45];
        uint64_t v47 = &a2[v45];
        uint64_t v48 = *((void *)v47 + 1);
        *(void *)uint64_t v46 = *(void *)v47;
        *((void *)v46 + 1) = v48;
        a1[v39[10]] = a2[v39[10]];
        *(void *)&a1[v39[11]] = *(void *)&a2[v39[11]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_71;
      case 3u:
        uint64_t v49 = sub_251F34DA0();
        uint64_t v290 = *(void (**)(void *, void *, uint64_t))(*(void *)(v49 - 8) + 16);
        v290(a1, a2, v49);
        __int16 v50 = (int *)type metadata accessor for StaticEndpoint();
        uint64_t v51 = v50[5];
        uint64_t v52 = &a1[v51];
        uint64_t v53 = &a2[v51];
        *(void *)uint64_t v52 = *(void *)v53;
        *((_WORD *)v52 + 4) = *((_WORD *)v53 + 4);
        uint64_t v54 = v50[6];
        uint64_t v55 = &a1[v54];
        uint64_t v56 = &a2[v54];
        uint64_t v57 = *((void *)v56 + 1);
        *(void *)uint64_t v55 = *(void *)v56;
        *((void *)v55 + 1) = v57;
        *(void *)&a1[v50[7]] = *(void *)&a2[v50[7]];
        *(void *)&a1[v50[8]] = *(void *)&a2[v50[8]];
        *(void *)&a1[v50[9]] = *(void *)&a2[v50[9]];
        *(void *)&a1[v50[10]] = *(void *)&a2[v50[10]];
        uint64_t v58 = v50[11];
        uint64_t v59 = &a1[v58];
        uint64_t v60 = &a2[v58];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v290(v59, v60, v49);
        *(void *)&a1[v50[12]] = *(void *)&a2[v50[12]];
        uint64_t v61 = v50[13];
        uint64_t v62 = &a1[v61];
        uint64_t v63 = &a2[v61];
        uint64_t v64 = *(void *)&a2[v61 + 8];
        *(void *)uint64_t v62 = *(void *)&a2[v61];
        *((void *)v62 + 1) = v64;
        uint64_t v65 = *(void *)&a2[v61 + 24];
        *((void *)v62 + 2) = *(void *)&a2[v61 + 16];
        *((void *)v62 + 3) = v65;
        uint64_t v66 = *(void *)&a2[v61 + 40];
        *((void *)v62 + 4) = *(void *)&a2[v61 + 32];
        *((void *)v62 + 5) = v66;
        *((_DWORD *)v62 + 12) = *(_DWORD *)&a2[v61 + 48];
        uint64_t v67 = *(int *)(type metadata accessor for MatterTileMetadata() + 44);
        uint64_t v291 = &v62[v67];
        uint64_t v68 = &v63[v67];
        uint64_t v69 = sub_251F34D20();
        uint64_t v70 = *(void *)(v69 - 8);
        uint64_t v285 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v285(v68, 1, v69))
        {
          uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
          memcpy(v291, v68, *(void *)(*(void *)(v71 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v291, v68, v69);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v70 + 56))(v291, 0, 1, v69);
        }
        uint64_t v102 = v50[14];
        int v103 = &a1[v102];
        uint64_t v104 = &a2[v102];
        *(_WORD *)int v103 = *(_WORD *)v104;
        v103[2] = v104[2];
        a1[v50[15]] = a2[v50[15]];
        goto LABEL_71;
      default:
        uint64_t v6 = sub_251F34DA0();
        uint64_t v284 = *(void **)(v6 - 8);
        uint64_t v7 = (void (*)(void *, void *, uint64_t))v284[2];
        v7(a1, a2, v6);
        uint64_t v8 = (int *)type metadata accessor for StaticAccessory(0);
        uint64_t v9 = v8[5];
        uint64_t v10 = &a1[v9];
        uint64_t v11 = &a2[v9];
        uint64_t v12 = *((void *)v11 + 1);
        *(void *)uint64_t v10 = *(void *)v11;
        *((void *)v10 + 1) = v12;
        uint64_t v13 = v8[6];
        uint64_t v14 = &a1[v13];
        uint64_t v15 = &a2[v13];
        type metadata accessor for StaticAccessory.DeviceIdentifier(0);
        swift_bridgeObjectRetain();
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v7(v14, v15, v6);
        }
        else
        {
          uint64_t v72 = *((void *)v15 + 1);
          *(void *)uint64_t v14 = *(void *)v15;
          *((void *)v14 + 1) = v72;
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
        uint64_t v73 = v8[7];
        uint64_t v74 = &a1[v73];
        uint64_t v75 = &a2[v73];
        uint64_t v76 = (int *)type metadata accessor for StaticDeviceMetadata();
        uint64_t v77 = *((void *)v76 - 1);
        uint64_t v288 = v6;
        uint64_t v283 = v7;
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v77 + 48))(v75, 1, v76))
        {
          uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
          memcpy(v74, v75, *(void *)(*(void *)(v78 - 8) + 64));
        }
        else
        {
          v7(v74, v75, v6);
          uint64_t v105 = v76[5];
          uint64_t v106 = &v74[v105];
          uint64_t v107 = &v75[v105];
          uint64_t v108 = *((void *)v107 + 1);
          *(void *)uint64_t v106 = *(void *)v107;
          *((void *)v106 + 1) = v108;
          uint64_t v109 = v76[6];
          uint64_t v110 = &v74[v109];
          uint64_t v111 = &v75[v109];
          uint64_t v112 = *((void *)v111 + 1);
          *(void *)uint64_t v110 = *(void *)v111;
          *((void *)v110 + 1) = v112;
          uint64_t v113 = v76[7];
          uint64_t v114 = &v74[v113];
          uint64_t v115 = &v75[v113];
          uint64_t v116 = *((void *)v115 + 1);
          *(void *)uint64_t v114 = *(void *)v115;
          *((void *)v114 + 1) = v116;
          uint64_t v117 = v76[8];
          uint64_t v118 = &v74[v117];
          uint64_t v119 = &v75[v117];
          uint64_t v120 = *((void *)v119 + 1);
          *(void *)uint64_t v118 = *(void *)v119;
          *((void *)v118 + 1) = v120;
          v74[v76[9]] = v75[v76[9]];
          v74[v76[10]] = v75[v76[10]];
          v74[v76[11]] = v75[v76[11]];
          v74[v76[12]] = v75[v76[12]];
          uint64_t v121 = *(void (**)(char *, void, uint64_t, int *))(v77 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v7 = v283;
          swift_bridgeObjectRetain();
          uint64_t v6 = v288;
          swift_bridgeObjectRetain();
          v121(v74, 0, 1, v76);
        }
        uint64_t v122 = v8[8];
        uint64_t v123 = &a1[v122];
        uint64_t v124 = &a2[v122];
        uint64_t v125 = sub_251F34D20();
        uint64_t v126 = *(void *)(v125 - 8);
        uint64_t v274 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v126 + 48);
        uint64_t v277 = v125;
        uint64_t v272 = v126;
        if (v274(v124, 1, v125))
        {
          uint64_t v127 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
          memcpy(v123, v124, *(void *)(*(void *)(v127 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v126 + 16))(v123, v124, v125);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v126 + 56))(v123, 0, 1, v125);
        }
        uint64_t v141 = v8[9];
        uint64_t v142 = &a1[v141];
        uint64_t v143 = &a2[v141];
        *(void *)uint64_t v142 = *(void *)v143;
        v142[8] = v143[8];
        a1[v8[10]] = a2[v8[10]];
        v7(&a1[v8[11]], &a2[v8[11]], v6);
        *(void *)&a1[v8[12]] = *(void *)&a2[v8[12]];
        uint64_t v144 = v8[13];
        uint64_t v145 = &a1[v144];
        uint64_t v146 = &a2[v144];
        uint64_t v147 = *((void *)v146 + 1);
        *(void *)uint64_t v145 = *(void *)v146;
        *((void *)v145 + 1) = v147;
        a1[v8[14]] = a2[v8[14]];
        a1[v8[15]] = a2[v8[15]];
        a1[v8[16]] = a2[v8[16]];
        a1[v8[17]] = a2[v8[17]];
        a1[v8[18]] = a2[v8[18]];
        *(void *)&a1[v8[19]] = *(void *)&a2[v8[19]];
        *(void *)&a1[v8[20]] = *(void *)&a2[v8[20]];
        uint64_t v148 = v8[21];
        __dst = &a1[v148];
        uint64_t v149 = &a2[v148];
        uint64_t v150 = (unsigned int (*)(char *, uint64_t, uint64_t))v284[6];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v150(v149, 1, v288))
        {
          uint64_t v151 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
          memcpy(__dst, v149, *(void *)(*(void *)(v151 - 8) + 64));
        }
        else
        {
          v283(__dst, v149, v288);
          ((void (*)(char *, void, uint64_t, uint64_t))v284[7])(__dst, 0, 1, v288);
        }
        *(_WORD *)&a1[v8[22]] = *(_WORD *)&a2[v8[22]];
        uint64_t v156 = v8[23];
        uint64_t v157 = &a1[v156];
        uint64_t v158 = &a2[v156];
        uint64_t v159 = *((void *)v158 + 1);
        *(void *)uint64_t v157 = *(void *)v158;
        *((void *)v157 + 1) = v159;
        *(void *)&a1[v8[24]] = *(void *)&a2[v8[24]];
        a1[v8[25]] = a2[v8[25]];
        a1[v8[26]] = a2[v8[26]];
        a1[v8[27]] = a2[v8[27]];
        uint64_t v160 = v8[28];
        uint64_t v286 = &a1[v160];
        uint64_t v161 = &a2[v160];
        uint64_t v162 = type metadata accessor for StaticSoftwareUpdate(0);
        uint64_t v163 = *(void *)(v162 - 8);
        uint64_t v164 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v163 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v164(v161, 1, v162))
        {
          uint64_t v165 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
          memcpy(v286, v161, *(void *)(*(void *)(v165 - 8) + 64));
LABEL_60:
          a1[v8[29]] = a2[v8[29]];
          a1[v8[30]] = a2[v8[30]];
          *(void *)&a1[v8[31]] = *(void *)&a2[v8[31]];
          swift_bridgeObjectRetain();
LABEL_71:
          swift_storeEnumTagMultiPayload();
          return a1;
        }
        v283(v286, v161, v288);
        __dstb = (void *)v162;
        uint64_t v179 = *(int *)(v162 + 20);
        uint64_t v180 = &v286[v179];
        uint64_t v181 = &v161[v179];
        uint64_t v270 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
        int v182 = swift_getEnumCaseMultiPayload();
        if (v182 == 2)
        {
          uint64_t v207 = *((void *)v181 + 1);
          *(void *)uint64_t v180 = *(void *)v181;
          *((void *)v180 + 1) = v207;
          int v292 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
          uint64_t v208 = v292[5];
          uint64_t v209 = &v180[v208];
          uint64_t v210 = &v181[v208];
          swift_bridgeObjectRetain();
          if (v274(v210, 1, v277))
          {
LABEL_48:
            uint64_t v213 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
            memcpy(v209, v210, *(void *)(*(void *)(v213 - 8) + 64));
LABEL_57:
            uint64_t v227 = v292[6];
            uint64_t v228 = &v180[v227];
            uint64_t v229 = &v181[v227];
            uint64_t v230 = *((void *)v229 + 1);
            *(void *)uint64_t v228 = *(void *)v229;
            *((void *)v228 + 1) = v230;
            uint64_t v231 = v292[7];
            uint64_t v232 = &v180[v231];
            uint64_t v233 = &v181[v231];
            uint64_t v234 = *((void *)v233 + 1);
            *(void *)uint64_t v232 = *(void *)v233;
            *((void *)v232 + 1) = v234;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v235 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
            v180[*(int *)(v235 + 48)] = v181[*(int *)(v235 + 48)];
            goto LABEL_58;
          }
        }
        else
        {
          if (v182 != 1)
          {
            if (v182)
            {
              memcpy(v180, v181, *(void *)(*(void *)(v270 - 8) + 64));
LABEL_59:
              (*(void (**)(char *, void, uint64_t, void *))(v163 + 56))(v286, 0, 1, __dstb);
              goto LABEL_60;
            }
            v283(v180, v181, v288);
            uint64_t v183 = (int *)type metadata accessor for StaticHH2Update(0);
            v180[v183[5]] = v181[v183[5]];
            uint64_t v184 = v183[6];
            uint64_t v185 = &v180[v184];
            uint64_t v186 = &v181[v184];
            uint64_t v188 = *(void *)v186;
            uint64_t v187 = *((void *)v186 + 1);
            *(void *)uint64_t v185 = v188;
            *((void *)v185 + 1) = v187;
            uint64_t v189 = v183[7];
            uint64_t v190 = &v180[v189];
            uint64_t v191 = &v181[v189];
            v190[8] = v191[8];
            *(void *)uint64_t v190 = *(void *)v191;
            swift_bridgeObjectRetain();
LABEL_58:
            swift_storeEnumTagMultiPayload();
            goto LABEL_59;
          }
          uint64_t v211 = *((void *)v181 + 1);
          *(void *)uint64_t v180 = *(void *)v181;
          *((void *)v180 + 1) = v211;
          int v292 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
          uint64_t v212 = v292[5];
          uint64_t v209 = &v180[v212];
          uint64_t v210 = &v181[v212];
          swift_bridgeObjectRetain();
          if (v274(v210, 1, v277)) {
            goto LABEL_48;
          }
        }
        (*(void (**)(char *, char *, uint64_t))(v272 + 16))(v209, v210, v277);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v272 + 56))(v209, 0, 1, v277);
        goto LABEL_57;
    }
  }
  uint64_t v16 = *(void *)a2;
  *(void *)a1 = *(void *)a2;
  a1 = (char *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t destroy for AccessoryDetails.Payload(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      uint64_t v3 = sub_251F34DA0();
      uint64_t v4 = *(void *)(v3 - 8);
      int v5 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
      v5(a1, v3);
      uint64_t v6 = (int *)type metadata accessor for StaticAccessory(0);
      swift_bridgeObjectRelease();
      uint64_t v7 = a1 + v6[6];
      type metadata accessor for StaticAccessory.DeviceIdentifier(0);
      if (swift_getEnumCaseMultiPayload() == 1) {
        v5(v7, v3);
      }
      else {
        swift_bridgeObjectRelease();
      }
      uint64_t v34 = a1 + v6[7];
      uint64_t v35 = type metadata accessor for StaticDeviceMetadata();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 48))(v34, 1, v35))
      {
        v5(v34, v3);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      uint64_t v36 = a1 + v6[8];
      uint64_t v37 = sub_251F34D20();
      uint64_t v50 = *(void *)(v37 - 8);
      uint64_t v38 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48);
      if (!v38(v36, 1, v37)) {
        (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v36, v37);
      }
      v5(a1 + v6[11], v3);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v39 = a1 + v6[21];
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v39, 1, v3)) {
        v5(v39, v3);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v40 = a1 + v6[28];
      uint64_t v41 = type metadata accessor for StaticSoftwareUpdate(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 48))(v40, 1, v41)) {
        goto LABEL_46;
      }
      v5(v40, v3);
      uint64_t v42 = v40 + *(int *)(v41 + 20);
      type metadata accessor for StaticSoftwareUpdate.Kind(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v45 = v42 + *(int *)(type metadata accessor for StaticSoftwareUpdateMetadata(0) + 20);
        if (!v38(v45, 1, v37)) {
          (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v45, v37);
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        if (EnumCaseMultiPayload) {
          goto LABEL_46;
        }
        v5(v42, v3);
        type metadata accessor for StaticHH2Update(0);
      }
      swift_bridgeObjectRelease();
      goto LABEL_46;
    case 1:
      uint64_t v8 = sub_251F34DA0();
      uint64_t v9 = *(void *)(v8 - 8);
      uint64_t v48 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
      v48(a1, v8);
      uint64_t v10 = (int *)type metadata accessor for StaticService();
      swift_bridgeObjectRelease();
      v48(a1 + v10[11], v8);
      uint64_t v11 = a1 + v10[13];
      uint64_t v12 = type metadata accessor for StaticDeviceMetadata();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v11, 1, v12))
      {
        v48(v11, v8);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      uint64_t v13 = a1 + v10[14];
      uint64_t v14 = sub_251F34D20();
      uint64_t v15 = *(void *)(v14 - 8);
      uint64_t v16 = *(unsigned int (**)(void))(v15 + 48);
      if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v16)(v13, 1, v14)) {
        (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v17 = a1 + v10[25];
      uint64_t v18 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      if (!v18(v17, 1, v8)) {
        v48(v17, v8);
      }
      uint64_t v47 = v15;
      uint64_t v19 = a1 + v10[26];
      if (!v18(v19, 1, v8)) {
        v48(v19, v8);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v20 = a1 + v10[30];
      uint64_t v21 = type metadata accessor for StaticSoftwareUpdate(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v20, 1, v21)) {
        goto LABEL_36;
      }
      v48(v20, v8);
      uint64_t v22 = v20 + *(int *)(v21 + 20);
      type metadata accessor for StaticSoftwareUpdate.Kind(0);
      int v23 = swift_getEnumCaseMultiPayload();
      if (v23 == 2 || v23 == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v46 = v22 + *(int *)(type metadata accessor for StaticSoftwareUpdateMetadata(0) + 20);
        if (!v16()) {
          (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v46, v14);
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        if (v23) {
          goto LABEL_36;
        }
        v48(v22, v8);
        type metadata accessor for StaticHH2Update(0);
      }
      swift_bridgeObjectRelease();
LABEL_36:
      swift_bridgeObjectRelease();
      uint64_t v44 = a1 + v10[33];
      uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v18)(v44, 1, v8);
      if (!result)
      {
        uint64_t v32 = v44;
        uint64_t v33 = v8;
        uint64_t v31 = (uint64_t (*)(uint64_t, uint64_t))v48;
LABEL_39:
        return v31(v32, v33);
      }
      return result;
    case 2:
      uint64_t v24 = sub_251F34DA0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(a1, v24);
      type metadata accessor for StaticServiceGroup();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_46:
      return swift_bridgeObjectRelease();
    case 3:
      uint64_t v25 = sub_251F34DA0();
      uint64_t v26 = *(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8);
      v26(a1, v25);
      uint64_t v27 = type metadata accessor for StaticEndpoint();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v26(a1 + *(int *)(v27 + 44), v25);
      swift_bridgeObjectRelease();
      uint64_t v28 = a1 + *(int *)(v27 + 52);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v29 = v28 + *(int *)(type metadata accessor for MatterTileMetadata() + 44);
      uint64_t v30 = sub_251F34D20();
      uint64_t v49 = *(void *)(v30 - 8);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v29, 1, v30);
      if (result) {
        return result;
      }
      uint64_t v31 = *(uint64_t (**)(uint64_t, uint64_t))(v49 + 8);
      uint64_t v32 = v29;
      uint64_t v33 = v30;
      goto LABEL_39;
    default:
      return result;
  }
}

uint64_t initializeWithCopy for AccessoryDetails.Payload(uint64_t a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v14 = sub_251F34DA0();
      uint64_t v279 = *(void *)(v14 - 8);
      uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v279 + 16);
      v15(a1, a2, v14);
      uint64_t v16 = (int *)type metadata accessor for StaticService();
      uint64_t v17 = v16[5];
      uint64_t v18 = (void *)(a1 + v17);
      uint64_t v19 = (void *)(a2 + v17);
      uint64_t v20 = v19[1];
      *uint64_t v18 = *v19;
      v18[1] = v20;
      *(unsigned char *)(a1 + v16[6]) = *(unsigned char *)(a2 + v16[6]);
      *(unsigned char *)(a1 + v16[7]) = *(unsigned char *)(a2 + v16[7]);
      *(unsigned char *)(a1 + v16[8]) = *(unsigned char *)(a2 + v16[8]);
      *(unsigned char *)(a1 + v16[9]) = *(unsigned char *)(a2 + v16[9]);
      *(unsigned char *)(a1 + v16[10]) = *(unsigned char *)(a2 + v16[10]);
      uint64_t v21 = v16[11];
      uint64_t v22 = a1 + v21;
      uint64_t v23 = a2 + v21;
      swift_bridgeObjectRetain();
      uint64_t v24 = v22;
      uint64_t v25 = v14;
      v15(v24, v23, v14);
      uint64_t v26 = v16[12];
      uint64_t v27 = a1 + v26;
      uint64_t v28 = a2 + v26;
      *(void *)uint64_t v27 = *(void *)v28;
      *(unsigned char *)(v27 + 8) = *(unsigned char *)(v28 + 8);
      uint64_t v29 = v16[13];
      uint64_t v30 = (char *)(a1 + v29);
      uint64_t v31 = (char *)(a2 + v29);
      uint64_t v32 = (int *)type metadata accessor for StaticDeviceMetadata();
      uint64_t v33 = *((void *)v32 - 1);
      uint64_t v284 = (void (*)(void *, const void *, uint64_t))v15;
      uint64_t v287 = v25;
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v33 + 48))(v31, 1, v32))
      {
        uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
        memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        v15((uint64_t)v30, (uint64_t)v31, v25);
        uint64_t v76 = v32[5];
        uint64_t v77 = &v30[v76];
        uint64_t v78 = &v31[v76];
        uint64_t v79 = *((void *)v78 + 1);
        *(void *)uint64_t v77 = *(void *)v78;
        *((void *)v77 + 1) = v79;
        uint64_t v80 = v32[6];
        uint64_t v81 = &v30[v80];
        uint64_t v82 = &v31[v80];
        uint64_t v83 = *((void *)v82 + 1);
        *(void *)uint64_t v81 = *(void *)v82;
        *((void *)v81 + 1) = v83;
        uint64_t v84 = v32[7];
        uint64_t v85 = &v30[v84];
        uint64_t v86 = &v31[v84];
        uint64_t v87 = *((void *)v86 + 1);
        *(void *)uint64_t v85 = *(void *)v86;
        *((void *)v85 + 1) = v87;
        uint64_t v88 = v32[8];
        uint64_t v89 = &v30[v88];
        uint64_t v90 = &v31[v88];
        uint64_t v91 = *((void *)v90 + 1);
        *(void *)uint64_t v89 = *(void *)v90;
        *((void *)v89 + 1) = v91;
        v30[v32[9]] = v31[v32[9]];
        v30[v32[10]] = v31[v32[10]];
        v30[v32[11]] = v31[v32[11]];
        v30[v32[12]] = v31[v32[12]];
        uint64_t v92 = *(void (**)(char *, void, uint64_t, int *))(v33 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v92(v30, 0, 1, v32);
      }
      uint64_t v93 = v16[14];
      uint64_t v94 = (void *)(a1 + v93);
      int v95 = (const void *)(a2 + v93);
      uint64_t v96 = sub_251F34D20();
      uint64_t v97 = *(void *)(v96 - 8);
      uint64_t v266 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v97 + 48);
      uint64_t v268 = v96;
      uint64_t v265 = v97;
      if (v266(v95, 1, v96))
      {
        uint64_t v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
        memcpy(v94, v95, *(void *)(*(void *)(v98 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v97 + 16))(v94, v95, v96);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v97 + 56))(v94, 0, 1, v96);
      }
      *(void *)(a1 + v16[15]) = *(void *)(a2 + v16[15]);
      uint64_t v125 = v16[16];
      uint64_t v126 = (void *)(a1 + v125);
      uint64_t v127 = (void *)(a2 + v125);
      uint64_t v128 = v127[1];
      *uint64_t v126 = *v127;
      v126[1] = v128;
      *(unsigned char *)(a1 + v16[17]) = *(unsigned char *)(a2 + v16[17]);
      *(unsigned char *)(a1 + v16[18]) = *(unsigned char *)(a2 + v16[18]);
      *(unsigned char *)(a1 + v16[19]) = *(unsigned char *)(a2 + v16[19]);
      *(unsigned char *)(a1 + v16[20]) = *(unsigned char *)(a2 + v16[20]);
      uint64_t v129 = v16[21];
      uint64_t v130 = (void *)(a1 + v129);
      uint64_t v131 = (void *)(a2 + v129);
      uint64_t v132 = v131[1];
      *uint64_t v130 = *v131;
      v130[1] = v132;
      *(unsigned char *)(a1 + v16[22]) = *(unsigned char *)(a2 + v16[22]);
      *(unsigned char *)(a1 + v16[23]) = *(unsigned char *)(a2 + v16[23]);
      *(unsigned char *)(a1 + v16[24]) = *(unsigned char *)(a2 + v16[24]);
      uint64_t v133 = v16[25];
      uint64_t v134 = (void *)(a1 + v133);
      uint64_t v135 = (const void *)(a2 + v133);
      uint64_t v136 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v279 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v136(v135, 1, v287))
      {
        uint64_t v137 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
        memcpy(v134, v135, *(void *)(*(void *)(v137 - 8) + 64));
      }
      else
      {
        v284(v134, v135, v287);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v279 + 56))(v134, 0, 1, v287);
      }
      uint64_t v149 = v16[26];
      uint64_t v150 = (void *)(a1 + v149);
      uint64_t v151 = (const void *)(a2 + v149);
      uint64_t v270 = v136;
      if (v136((const void *)(a2 + v149), 1, v287))
      {
        uint64_t v152 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
        memcpy(v150, v151, *(void *)(*(void *)(v152 - 8) + 64));
      }
      else
      {
        v284(v150, v151, v287);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v279 + 56))(v150, 0, 1, v287);
      }
      *(void *)(a1 + v16[27]) = *(void *)(a2 + v16[27]);
      *(void *)(a1 + v16[28]) = *(void *)(a2 + v16[28]);
      uint64_t v163 = v16[29];
      uint64_t v164 = (void *)(a1 + v163);
      uint64_t v165 = (void *)(a2 + v163);
      uint64_t v166 = v16;
      uint64_t v167 = v165[1];
      void *v164 = *v165;
      v164[1] = v167;
      uint64_t v168 = v166[30];
      uint64_t v275 = v166;
      __dsta = (char *)(a1 + v168);
      uint64_t v169 = (char *)(a2 + v168);
      uint64_t v170 = type metadata accessor for StaticSoftwareUpdate(0);
      uint64_t v171 = *(void *)(v170 - 8);
      uint64_t v272 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v171 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v272(v169, 1, v170))
      {
        uint64_t v172 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
        memcpy(__dsta, v169, *(void *)(*(void *)(v172 - 8) + 64));
        uint64_t v173 = v284;
        uint64_t v174 = v270;
        uint64_t v175 = v275;
        goto LABEL_65;
      }
      uint64_t v273 = v171;
      uint64_t v189 = __dsta;
      uint64_t v173 = v284;
      v284(__dsta, v169, v287);
      uint64_t v190 = *(int *)(v170 + 20);
      uint64_t v191 = &__dsta[v190];
      uint64_t v192 = &v169[v190];
      uint64_t v193 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v211 = *((void *)v192 + 1);
        *(void *)uint64_t v191 = *(void *)v192;
        *((void *)v191 + 1) = v211;
        uint64_t updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        uint64_t v213 = updated[5];
        uint64_t v263 = &v191[v213];
        uint64_t v214 = &v192[v213];
        swift_bridgeObjectRetain();
        if (v266(v214, 1, v268))
        {
          uint64_t v215 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
          memcpy(v263, v214, *(void *)(*(void *)(v215 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v265 + 16))(v263, v214, v268);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v265 + 56))(v263, 0, 1, v268);
        }
        uint64_t v233 = updated[6];
        uint64_t v234 = &v191[v233];
        uint64_t v235 = &v192[v233];
        uint64_t v236 = *((void *)v235 + 1);
        *(void *)uint64_t v234 = *(void *)v235;
        *((void *)v234 + 1) = v236;
        uint64_t v237 = updated[7];
        int v238 = &v191[v237];
        uint64_t v239 = &v192[v237];
        uint64_t v240 = *((void *)v239 + 1);
        *(void *)int v238 = *(void *)v239;
        *((void *)v238 + 1) = v240;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v241 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
        v191[*(int *)(v241 + 48)] = v192[*(int *)(v241 + 48)];
        swift_storeEnumTagMultiPayload();
        uint64_t v174 = v270;
        uint64_t v175 = v275;
        goto LABEL_63;
      }
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v216 = *((void *)v192 + 1);
        *(void *)uint64_t v191 = *(void *)v192;
        *((void *)v191 + 1) = v216;
        uint64_t v217 = type metadata accessor for StaticSoftwareUpdateMetadata(0);
        uint64_t v218 = *(int *)(v217 + 20);
        uint64_t v262 = v217;
        uint64_t v264 = &v191[v218];
        uint64_t v219 = &v192[v218];
        swift_bridgeObjectRetain();
        uint64_t v220 = v219;
        unsigned int v221 = v266(v219, 1, v268);
        uint64_t v175 = v275;
        if (v221)
        {
          uint64_t v222 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
          memcpy(v264, v220, *(void *)(*(void *)(v222 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, const void *, uint64_t))(v265 + 16))(v264, v220, v268);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v265 + 56))(v264, 0, 1, v268);
          uint64_t v175 = v275;
        }
        uint64_t v242 = *(int *)(v262 + 24);
        uint64_t v243 = &v191[v242];
        uint64_t v244 = &v192[v242];
        uint64_t v245 = *((void *)v244 + 1);
        *(void *)uint64_t v243 = *(void *)v244;
        *((void *)v243 + 1) = v245;
        uint64_t v246 = *(int *)(v262 + 28);
        uint64_t v247 = &v191[v246];
        uint64_t v248 = &v192[v246];
        uint64_t v249 = *((void *)v248 + 1);
        *(void *)uint64_t v247 = *(void *)v248;
        *((void *)v247 + 1) = v249;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v250 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
        v191[*(int *)(v250 + 48)] = v192[*(int *)(v250 + 48)];
        swift_storeEnumTagMultiPayload();
        uint64_t v174 = v270;
LABEL_63:
        uint64_t v223 = v273;
        uint64_t v189 = __dsta;
        goto LABEL_64;
      }
      uint64_t v175 = v275;
      if (EnumCaseMultiPayload)
      {
        memcpy(v191, v192, *(void *)(*(void *)(v193 - 8) + 64));
      }
      else
      {
        v284(v191, v192, v287);
        uint64_t v195 = (int *)type metadata accessor for StaticHH2Update(0);
        v191[v195[5]] = v192[v195[5]];
        uint64_t v196 = v195[6];
        uint64_t v197 = &v191[v196];
        uint64_t v198 = &v192[v196];
        uint64_t v200 = *(void *)v198;
        uint64_t v199 = *((void *)v198 + 1);
        *(void *)uint64_t v197 = v200;
        *((void *)v197 + 1) = v199;
        uint64_t v201 = v195[7];
        uint64_t v202 = &v191[v201];
        uint64_t v203 = &v192[v201];
        v202[8] = v203[8];
        *(void *)uint64_t v202 = *(void *)v203;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
      uint64_t v174 = v270;
      uint64_t v223 = v273;
LABEL_64:
      (*(void (**)(char *, void, uint64_t, uint64_t))(v223 + 56))(v189, 0, 1, v170);
LABEL_65:
      *(unsigned char *)(a1 + v175[31]) = *(unsigned char *)(a2 + v175[31]);
      *(void *)(a1 + v175[32]) = *(void *)(a2 + v175[32]);
      uint64_t v251 = v175[33];
      uint64_t v252 = (void *)(a1 + v251);
      uint64_t v253 = (const void *)(a2 + v251);
      swift_bridgeObjectRetain();
      if (v174(v253, 1, v287))
      {
        uint64_t v254 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
        memcpy(v252, v253, *(void *)(*(void *)(v254 - 8) + 64));
      }
      else
      {
        v173(v252, v253, v287);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v279 + 56))(v252, 0, 1, v287);
      }
      uint64_t v255 = v175[34];
      uint64_t v256 = a1 + v255;
      uint64_t v257 = a2 + v255;
      *(_WORD *)uint64_t v256 = *(_WORD *)v257;
      *(unsigned char *)(v256 + 2) = *(unsigned char *)(v257 + 2);
      uint64_t v258 = v175[35];
      uint64_t v259 = a1 + v258;
      uint64_t v260 = a2 + v258;
      *(_DWORD *)(v259 + 7) = *(_DWORD *)(v260 + 7);
      *(void *)uint64_t v259 = *(void *)v260;
LABEL_69:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 2u:
      uint64_t v35 = sub_251F34DA0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 16))(a1, a2, v35);
      uint64_t v36 = (int *)type metadata accessor for StaticServiceGroup();
      uint64_t v37 = v36[5];
      uint64_t v38 = (void *)(a1 + v37);
      uint64_t v39 = (uint64_t *)(a2 + v37);
      uint64_t v41 = *v39;
      uint64_t v40 = v39[1];
      *uint64_t v38 = v41;
      v38[1] = v40;
      *(unsigned char *)(a1 + v36[6]) = *(unsigned char *)(a2 + v36[6]);
      *(unsigned char *)(a1 + v36[7]) = *(unsigned char *)(a2 + v36[7]);
      *(void *)(a1 + v36[8]) = *(void *)(a2 + v36[8]);
      uint64_t v42 = v36[9];
      uint64_t v43 = (void *)(a1 + v42);
      uint64_t v44 = (void *)(a2 + v42);
      uint64_t v45 = v44[1];
      *uint64_t v43 = *v44;
      v43[1] = v45;
      *(unsigned char *)(a1 + v36[10]) = *(unsigned char *)(a2 + v36[10]);
      *(void *)(a1 + v36[11]) = *(void *)(a2 + v36[11]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_69;
    case 3u:
      uint64_t v46 = sub_251F34DA0();
      uint64_t v288 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 16);
      v288(a1, a2, v46);
      uint64_t v47 = (int *)type metadata accessor for StaticEndpoint();
      uint64_t v48 = v47[5];
      uint64_t v49 = a1 + v48;
      uint64_t v50 = a2 + v48;
      *(void *)uint64_t v49 = *(void *)v50;
      *(_WORD *)(v49 + 8) = *(_WORD *)(v50 + 8);
      uint64_t v51 = v47[6];
      uint64_t v52 = (void *)(a1 + v51);
      uint64_t v53 = (void *)(a2 + v51);
      uint64_t v54 = v53[1];
      *uint64_t v52 = *v53;
      v52[1] = v54;
      *(void *)(a1 + v47[7]) = *(void *)(a2 + v47[7]);
      *(void *)(a1 + v47[8]) = *(void *)(a2 + v47[8]);
      *(void *)(a1 + v47[9]) = *(void *)(a2 + v47[9]);
      *(void *)(a1 + v47[10]) = *(void *)(a2 + v47[10]);
      uint64_t v55 = v47[11];
      uint64_t v56 = a1 + v55;
      uint64_t v57 = a2 + v55;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v288(v56, v57, v46);
      *(void *)(a1 + v47[12]) = *(void *)(a2 + v47[12]);
      uint64_t v58 = v47[13];
      uint64_t v59 = a1 + v58;
      uint64_t v285 = a2;
      uint64_t v60 = a2 + v58;
      uint64_t v61 = *(void *)(a2 + v58 + 8);
      *(void *)uint64_t v59 = *(void *)(a2 + v58);
      *(void *)(v59 + 8) = v61;
      uint64_t v62 = *(void *)(a2 + v58 + 24);
      *(void *)(v59 + 16) = *(void *)(a2 + v58 + 16);
      *(void *)(v59 + 24) = v62;
      uint64_t v63 = *(void *)(a2 + v58 + 40);
      *(void *)(v59 + 32) = *(void *)(a2 + v58 + 32);
      *(void *)(v59 + 40) = v63;
      *(_DWORD *)(v59 + 48) = *(_DWORD *)(a2 + v58 + 48);
      uint64_t v64 = *(int *)(type metadata accessor for MatterTileMetadata() + 44);
      uint64_t v289 = (void *)(v59 + v64);
      uint64_t v65 = (const void *)(v60 + v64);
      uint64_t v66 = sub_251F34D20();
      uint64_t v67 = *(void *)(v66 - 8);
      uint64_t v282 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v67 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v282(v65, 1, v66))
      {
        uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
        memcpy(v289, v65, *(void *)(*(void *)(v68 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v67 + 16))(v289, v65, v66);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v67 + 56))(v289, 0, 1, v66);
      }
      uint64_t v99 = v47[14];
      uint64_t v100 = a1 + v99;
      uint64_t v101 = v285 + v99;
      *(_WORD *)uint64_t v100 = *(_WORD *)v101;
      *(unsigned char *)(v100 + 2) = *(unsigned char *)(v101 + 2);
      *(unsigned char *)(a1 + v47[15]) = *(unsigned char *)(v285 + v47[15]);
      goto LABEL_69;
    default:
      uint64_t v4 = sub_251F34DA0();
      uint64_t v281 = *(void **)(v4 - 8);
      int v5 = (void (*)(uint64_t, uint64_t, uint64_t))v281[2];
      v5(a1, a2, v4);
      uint64_t v6 = (int *)type metadata accessor for StaticAccessory(0);
      uint64_t v7 = v6[5];
      uint64_t v8 = (void *)(a1 + v7);
      uint64_t v9 = (void *)(a2 + v7);
      uint64_t v10 = v9[1];
      *uint64_t v8 = *v9;
      v8[1] = v10;
      uint64_t v11 = v6[6];
      uint64_t v12 = (void *)(a1 + v11);
      uint64_t v13 = (void *)(a2 + v11);
      type metadata accessor for StaticAccessory.DeviceIdentifier(0);
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v5((uint64_t)v12, (uint64_t)v13, v4);
      }
      else
      {
        uint64_t v69 = v13[1];
        *uint64_t v12 = *v13;
        v12[1] = v69;
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v70 = v6[7];
      uint64_t v71 = (char *)(a1 + v70);
      uint64_t v72 = (char *)(a2 + v70);
      uint64_t v73 = (int *)type metadata accessor for StaticDeviceMetadata();
      uint64_t v74 = *((void *)v73 - 1);
      uint64_t v286 = v4;
      uint64_t v280 = v5;
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v74 + 48))(v72, 1, v73))
      {
        uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
        memcpy(v71, v72, *(void *)(*(void *)(v75 - 8) + 64));
      }
      else
      {
        v5((uint64_t)v71, (uint64_t)v72, v4);
        uint64_t v102 = v73[5];
        int v103 = &v71[v102];
        uint64_t v104 = &v72[v102];
        uint64_t v105 = *((void *)v104 + 1);
        *(void *)int v103 = *(void *)v104;
        *((void *)v103 + 1) = v105;
        uint64_t v106 = v73[6];
        uint64_t v107 = &v71[v106];
        uint64_t v108 = &v72[v106];
        uint64_t v109 = *((void *)v108 + 1);
        *(void *)uint64_t v107 = *(void *)v108;
        *((void *)v107 + 1) = v109;
        uint64_t v110 = v73[7];
        uint64_t v111 = &v71[v110];
        uint64_t v112 = &v72[v110];
        uint64_t v113 = *((void *)v112 + 1);
        *(void *)uint64_t v111 = *(void *)v112;
        *((void *)v111 + 1) = v113;
        uint64_t v114 = v73[8];
        uint64_t v115 = &v71[v114];
        uint64_t v116 = &v72[v114];
        uint64_t v117 = *((void *)v116 + 1);
        *(void *)uint64_t v115 = *(void *)v116;
        *((void *)v115 + 1) = v117;
        v71[v73[9]] = v72[v73[9]];
        v71[v73[10]] = v72[v73[10]];
        v71[v73[11]] = v72[v73[11]];
        v71[v73[12]] = v72[v73[12]];
        uint64_t v118 = *(void (**)(char *, void, uint64_t, int *))(v74 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        int v5 = v280;
        swift_bridgeObjectRetain();
        uint64_t v4 = v286;
        swift_bridgeObjectRetain();
        v118(v71, 0, 1, v73);
      }
      uint64_t v119 = v6[8];
      uint64_t v120 = (void *)(a1 + v119);
      uint64_t v121 = (const void *)(a2 + v119);
      uint64_t v122 = sub_251F34D20();
      uint64_t v123 = *(void *)(v122 - 8);
      uint64_t v271 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v123 + 48);
      uint64_t v274 = v122;
      uint64_t v269 = v123;
      if (v271(v121, 1, v122))
      {
        uint64_t v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
        memcpy(v120, v121, *(void *)(*(void *)(v124 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v123 + 16))(v120, v121, v122);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v123 + 56))(v120, 0, 1, v122);
      }
      uint64_t v138 = v6[9];
      uint64_t v139 = a1 + v138;
      uint64_t v140 = a2 + v138;
      *(void *)uint64_t v139 = *(void *)v140;
      *(unsigned char *)(v139 + 8) = *(unsigned char *)(v140 + 8);
      *(unsigned char *)(a1 + v6[10]) = *(unsigned char *)(a2 + v6[10]);
      v5(a1 + v6[11], a2 + v6[11], v4);
      *(void *)(a1 + v6[12]) = *(void *)(a2 + v6[12]);
      uint64_t v141 = v6[13];
      uint64_t v142 = (void *)(a1 + v141);
      uint64_t v143 = (void *)(a2 + v141);
      uint64_t v144 = v143[1];
      *uint64_t v142 = *v143;
      v142[1] = v144;
      *(unsigned char *)(a1 + v6[14]) = *(unsigned char *)(a2 + v6[14]);
      *(unsigned char *)(a1 + v6[15]) = *(unsigned char *)(a2 + v6[15]);
      *(unsigned char *)(a1 + v6[16]) = *(unsigned char *)(a2 + v6[16]);
      *(unsigned char *)(a1 + v6[17]) = *(unsigned char *)(a2 + v6[17]);
      *(unsigned char *)(a1 + v6[18]) = *(unsigned char *)(a2 + v6[18]);
      *(void *)(a1 + v6[19]) = *(void *)(a2 + v6[19]);
      *(void *)(a1 + v6[20]) = *(void *)(a2 + v6[20]);
      uint64_t v145 = v6[21];
      __dst = (void *)(a1 + v145);
      uint64_t v146 = (const void *)(a2 + v145);
      uint64_t v147 = (unsigned int (*)(const void *, uint64_t, uint64_t))v281[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v147(v146, 1, v286))
      {
        uint64_t v148 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
        memcpy(__dst, v146, *(void *)(*(void *)(v148 - 8) + 64));
      }
      else
      {
        v280((uint64_t)__dst, (uint64_t)v146, v286);
        ((void (*)(void *, void, uint64_t, uint64_t))v281[7])(__dst, 0, 1, v286);
      }
      *(_WORD *)(a1 + v6[22]) = *(_WORD *)(a2 + v6[22]);
      uint64_t v153 = v6[23];
      uint64_t v154 = (void *)(a1 + v153);
      uint64_t v155 = (void *)(a2 + v153);
      uint64_t v156 = v155[1];
      void *v154 = *v155;
      v154[1] = v156;
      *(void *)(a1 + v6[24]) = *(void *)(a2 + v6[24]);
      *(unsigned char *)(a1 + v6[25]) = *(unsigned char *)(a2 + v6[25]);
      *(unsigned char *)(a1 + v6[26]) = *(unsigned char *)(a2 + v6[26]);
      *(unsigned char *)(a1 + v6[27]) = *(unsigned char *)(a2 + v6[27]);
      uint64_t v157 = v6[28];
      uint64_t v283 = (char *)(a1 + v157);
      uint64_t v158 = (char *)(a2 + v157);
      uint64_t v159 = type metadata accessor for StaticSoftwareUpdate(0);
      uint64_t v160 = *(void *)(v159 - 8);
      uint64_t v161 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v160 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v161(v158, 1, v159))
      {
        uint64_t v162 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
        memcpy(v283, v158, *(void *)(*(void *)(v162 - 8) + 64));
LABEL_58:
        *(unsigned char *)(a1 + v6[29]) = *(unsigned char *)(a2 + v6[29]);
        *(unsigned char *)(a1 + v6[30]) = *(unsigned char *)(a2 + v6[30]);
        *(void *)(a1 + v6[31]) = *(void *)(a2 + v6[31]);
        swift_bridgeObjectRetain();
        goto LABEL_69;
      }
      v280((uint64_t)v283, (uint64_t)v158, v286);
      __dstb = (void *)v159;
      uint64_t v176 = *(int *)(v159 + 20);
      uint64_t v177 = &v283[v176];
      char v178 = &v158[v176];
      uint64_t v267 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
      int v179 = swift_getEnumCaseMultiPayload();
      if (v179 == 2)
      {
        uint64_t v204 = *((void *)v178 + 1);
        *(void *)uint64_t v177 = *(void *)v178;
        *((void *)v177 + 1) = v204;
        uint64_t v290 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        uint64_t v205 = v290[5];
        uint64_t v206 = &v177[v205];
        uint64_t v207 = &v178[v205];
        swift_bridgeObjectRetain();
        if (v271(v207, 1, v274))
        {
LABEL_46:
          uint64_t v210 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
          memcpy(v206, v207, *(void *)(*(void *)(v210 - 8) + 64));
LABEL_55:
          uint64_t v224 = v290[6];
          uint64_t v225 = &v177[v224];
          uint64_t v226 = &v178[v224];
          uint64_t v227 = *((void *)v226 + 1);
          *(void *)uint64_t v225 = *(void *)v226;
          *((void *)v225 + 1) = v227;
          uint64_t v228 = v290[7];
          uint64_t v229 = &v177[v228];
          uint64_t v230 = &v178[v228];
          uint64_t v231 = *((void *)v230 + 1);
          *(void *)uint64_t v229 = *(void *)v230;
          *((void *)v229 + 1) = v231;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v232 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
          v177[*(int *)(v232 + 48)] = v178[*(int *)(v232 + 48)];
          goto LABEL_56;
        }
      }
      else
      {
        if (v179 != 1)
        {
          if (v179)
          {
            memcpy(v177, v178, *(void *)(*(void *)(v267 - 8) + 64));
LABEL_57:
            (*(void (**)(char *, void, uint64_t, void *))(v160 + 56))(v283, 0, 1, __dstb);
            goto LABEL_58;
          }
          v280((uint64_t)v177, (uint64_t)v178, v286);
          uint64_t v180 = (int *)type metadata accessor for StaticHH2Update(0);
          v177[v180[5]] = v178[v180[5]];
          uint64_t v181 = v180[6];
          int v182 = &v177[v181];
          uint64_t v183 = &v178[v181];
          uint64_t v185 = *(void *)v183;
          uint64_t v184 = *((void *)v183 + 1);
          *(void *)int v182 = v185;
          *((void *)v182 + 1) = v184;
          uint64_t v186 = v180[7];
          uint64_t v187 = &v177[v186];
          uint64_t v188 = &v178[v186];
          v187[8] = v188[8];
          *(void *)uint64_t v187 = *(void *)v188;
          swift_bridgeObjectRetain();
LABEL_56:
          swift_storeEnumTagMultiPayload();
          goto LABEL_57;
        }
        uint64_t v208 = *((void *)v178 + 1);
        *(void *)uint64_t v177 = *(void *)v178;
        *((void *)v177 + 1) = v208;
        uint64_t v290 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        uint64_t v209 = v290[5];
        uint64_t v206 = &v177[v209];
        uint64_t v207 = &v178[v209];
        swift_bridgeObjectRetain();
        if (v271(v207, 1, v274)) {
          goto LABEL_46;
        }
      }
      (*(void (**)(char *, char *, uint64_t))(v269 + 16))(v206, v207, v274);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v269 + 56))(v206, 0, 1, v274);
      goto LABEL_55;
  }
}

uint64_t assignWithCopy for AccessoryDetails.Payload(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_251E760C4(a1, type metadata accessor for AccessoryDetails.Payload);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v13 = sub_251F34DA0();
        uint64_t v248 = *(void *)(v13 - 8);
        uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v248 + 16);
        v14(a1, a2, v13);
        uint64_t v15 = (int *)type metadata accessor for StaticService();
        uint64_t v16 = v15[5];
        uint64_t v17 = (void *)(a1 + v16);
        uint64_t v18 = (void *)(a2 + v16);
        *uint64_t v17 = *v18;
        v17[1] = v18[1];
        *(unsigned char *)(a1 + v15[6]) = *(unsigned char *)(a2 + v15[6]);
        *(unsigned char *)(a1 + v15[7]) = *(unsigned char *)(a2 + v15[7]);
        *(unsigned char *)(a1 + v15[8]) = *(unsigned char *)(a2 + v15[8]);
        *(unsigned char *)(a1 + v15[9]) = *(unsigned char *)(a2 + v15[9]);
        *(unsigned char *)(a1 + v15[10]) = *(unsigned char *)(a2 + v15[10]);
        uint64_t v19 = v15[11];
        uint64_t v20 = a1 + v19;
        uint64_t v21 = a2 + v19;
        swift_bridgeObjectRetain();
        uint64_t v22 = v20;
        uint64_t v23 = v13;
        v14(v22, v21, v13);
        uint64_t v24 = v15[12];
        uint64_t v25 = a1 + v24;
        uint64_t v26 = (uint64_t *)(a2 + v24);
        uint64_t v27 = *v26;
        *(unsigned char *)(v25 + 8) = *((unsigned char *)v26 + 8);
        *(void *)uint64_t v25 = v27;
        uint64_t v28 = v15[13];
        uint64_t v29 = (char *)(a1 + v28);
        uint64_t v30 = (char *)(a2 + v28);
        uint64_t v31 = (int *)type metadata accessor for StaticDeviceMetadata();
        uint64_t v32 = *((void *)v31 - 1);
        uint64_t v253 = (void (*)(char *, char *, uint64_t))v14;
        uint64_t v254 = v23;
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v32 + 48))(v30, 1, v31))
        {
          uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
          memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
        }
        else
        {
          v14((uint64_t)v29, (uint64_t)v30, v23);
          uint64_t v68 = v31[5];
          uint64_t v69 = &v29[v68];
          uint64_t v70 = &v30[v68];
          *(void *)uint64_t v69 = *(void *)v70;
          *((void *)v69 + 1) = *((void *)v70 + 1);
          uint64_t v71 = v31[6];
          uint64_t v72 = &v29[v71];
          uint64_t v73 = &v30[v71];
          *(void *)uint64_t v72 = *(void *)v73;
          *((void *)v72 + 1) = *((void *)v73 + 1);
          uint64_t v74 = v31[7];
          uint64_t v75 = &v29[v74];
          uint64_t v76 = &v30[v74];
          *(void *)uint64_t v75 = *(void *)v76;
          *((void *)v75 + 1) = *((void *)v76 + 1);
          uint64_t v77 = v31[8];
          uint64_t v78 = &v29[v77];
          uint64_t v79 = &v30[v77];
          *(void *)uint64_t v78 = *(void *)v79;
          *((void *)v78 + 1) = *((void *)v79 + 1);
          v29[v31[9]] = v30[v31[9]];
          v29[v31[10]] = v30[v31[10]];
          v29[v31[11]] = v30[v31[11]];
          v29[v31[12]] = v30[v31[12]];
          uint64_t v80 = *(void (**)(char *, void, uint64_t, int *))(v32 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v80(v29, 0, 1, v31);
        }
        uint64_t v81 = v15[14];
        uint64_t v82 = (void *)(a1 + v81);
        uint64_t v83 = (const void *)(a2 + v81);
        uint64_t v84 = sub_251F34D20();
        uint64_t v85 = *(void *)(v84 - 8);
        uint64_t v235 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v85 + 48);
        uint64_t v237 = v84;
        uint64_t v234 = v85;
        if (v235(v83, 1, v84))
        {
          uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
          memcpy(v82, v83, *(void *)(*(void *)(v86 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v85 + 16))(v82, v83, v84);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v85 + 56))(v82, 0, 1, v84);
        }
        *(void *)(a1 + v15[15]) = *(void *)(a2 + v15[15]);
        uint64_t v110 = v15[16];
        uint64_t v111 = (void *)(a1 + v110);
        uint64_t v112 = (void *)(a2 + v110);
        *uint64_t v111 = *v112;
        v111[1] = v112[1];
        *(unsigned char *)(a1 + v15[17]) = *(unsigned char *)(a2 + v15[17]);
        *(unsigned char *)(a1 + v15[18]) = *(unsigned char *)(a2 + v15[18]);
        *(unsigned char *)(a1 + v15[19]) = *(unsigned char *)(a2 + v15[19]);
        *(unsigned char *)(a1 + v15[20]) = *(unsigned char *)(a2 + v15[20]);
        uint64_t v113 = v15[21];
        uint64_t v114 = (void *)(a1 + v113);
        uint64_t v115 = (void *)(a2 + v113);
        *uint64_t v114 = *v115;
        v114[1] = v115[1];
        *(unsigned char *)(a1 + v15[22]) = *(unsigned char *)(a2 + v15[22]);
        *(unsigned char *)(a1 + v15[23]) = *(unsigned char *)(a2 + v15[23]);
        *(unsigned char *)(a1 + v15[24]) = *(unsigned char *)(a2 + v15[24]);
        uint64_t v116 = v15[25];
        uint64_t v117 = (void *)(a1 + v116);
        uint64_t v118 = (const void *)(a2 + v116);
        uint64_t v119 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v248 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v119(v118, 1, v254))
        {
          uint64_t v120 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
          memcpy(v117, v118, *(void *)(*(void *)(v120 - 8) + 64));
        }
        else
        {
          v14((uint64_t)v117, (uint64_t)v118, v254);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v248 + 56))(v117, 0, 1, v254);
        }
        uint64_t v132 = v15[26];
        uint64_t v133 = (void *)(a1 + v132);
        uint64_t v134 = (const void *)(a2 + v132);
        uint64_t v239 = v119;
        if (v119((const void *)(a2 + v132), 1, v254))
        {
          uint64_t v135 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
          memcpy(v133, v134, *(void *)(*(void *)(v135 - 8) + 64));
        }
        else
        {
          v14((uint64_t)v133, (uint64_t)v134, v254);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v248 + 56))(v133, 0, 1, v254);
        }
        *(void *)(a1 + v15[27]) = *(void *)(a2 + v15[27]);
        *(void *)(a1 + v15[28]) = *(void *)(a2 + v15[28]);
        uint64_t v145 = v15[29];
        uint64_t v146 = (void *)(a1 + v145);
        uint64_t v147 = (void *)(a2 + v145);
        *uint64_t v146 = *v147;
        v146[1] = v147[1];
        uint64_t v148 = v15[30];
        uint64_t v244 = v15;
        __dsta = (char *)(a1 + v148);
        uint64_t v149 = (char *)(a2 + v148);
        uint64_t v150 = type metadata accessor for StaticSoftwareUpdate(0);
        uint64_t v151 = *(void *)(v150 - 8);
        uint64_t v241 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v151 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v241(v149, 1, v150))
        {
          uint64_t v152 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
          memcpy(__dsta, v149, *(void *)(*(void *)(v152 - 8) + 64));
          uint64_t v153 = (void (*)(void *, const void *, uint64_t))v14;
          uint64_t v154 = v239;
LABEL_66:
          *(unsigned char *)(a1 + v15[31]) = *(unsigned char *)(a2 + v15[31]);
          *(void *)(a1 + v15[32]) = *(void *)(a2 + v15[32]);
          uint64_t v218 = v15[33];
          uint64_t v219 = (void *)(a1 + v218);
          uint64_t v220 = (const void *)(a2 + v218);
          swift_bridgeObjectRetain();
          if (v154(v220, 1, v254))
          {
            uint64_t v221 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
            memcpy(v219, v220, *(void *)(*(void *)(v221 - 8) + 64));
          }
          else
          {
            v153(v219, v220, v254);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v248 + 56))(v219, 0, 1, v254);
          }
          uint64_t v222 = v15[34];
          uint64_t v223 = a1 + v222;
          uint64_t v224 = (__int16 *)(a2 + v222);
          __int16 v225 = *v224;
          *(unsigned char *)(v223 + 2) = *((unsigned char *)v224 + 2);
          *(_WORD *)uint64_t v223 = v225;
          uint64_t v226 = v15[35];
          uint64_t v227 = a1 + v226;
          uint64_t v228 = (uint64_t *)(a2 + v226);
          uint64_t v229 = *v228;
          *(_DWORD *)(v227 + 7) = *(_DWORD *)((char *)v228 + 7);
          *(void *)uint64_t v227 = v229;
          goto LABEL_70;
        }
        uint64_t v242 = v151;
        uint64_t v167 = __dsta;
        uint64_t v153 = (void (*)(void *, const void *, uint64_t))v14;
        v14((uint64_t)__dsta, (uint64_t)v149, v254);
        uint64_t v168 = *(int *)(v150 + 20);
        uint64_t v169 = &__dsta[v168];
        uint64_t v170 = &v149[v168];
        uint64_t v171 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          *(void *)uint64_t v169 = *(void *)v170;
          *((void *)v169 + 1) = *((void *)v170 + 1);
          uint64_t updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
          uint64_t v187 = updated[5];
          uint64_t v232 = &v169[v187];
          uint64_t v188 = &v170[v187];
          swift_bridgeObjectRetain();
          if (v235(v188, 1, v237))
          {
            uint64_t v189 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
            memcpy(v232, v188, *(void *)(*(void *)(v189 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v234 + 16))(v232, v188, v237);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v234 + 56))(v232, 0, 1, v237);
          }
          uint64_t v204 = updated[6];
          uint64_t v205 = &v169[v204];
          uint64_t v206 = &v170[v204];
          *(void *)uint64_t v205 = *(void *)v206;
          *((void *)v205 + 1) = *((void *)v206 + 1);
          uint64_t v207 = updated[7];
          uint64_t v208 = &v169[v207];
          uint64_t v209 = &v170[v207];
          *(void *)uint64_t v208 = *(void *)v209;
          *((void *)v208 + 1) = *((void *)v209 + 1);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v210 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
          v169[*(int *)(v210 + 48)] = v170[*(int *)(v210 + 48)];
          swift_storeEnumTagMultiPayload();
          uint64_t v154 = v239;
          uint64_t v15 = v244;
        }
        else
        {
          if (EnumCaseMultiPayload != 1)
          {
            if (EnumCaseMultiPayload)
            {
              memcpy(v169, v170, *(void *)(*(void *)(v171 - 8) + 64));
            }
            else
            {
              v253(v169, v170, v254);
              uint64_t v173 = (int *)type metadata accessor for StaticHH2Update(0);
              v169[v173[5]] = v170[v173[5]];
              uint64_t v174 = v173[6];
              uint64_t v175 = &v169[v174];
              uint64_t v176 = &v170[v174];
              *(void *)uint64_t v175 = *(void *)v176;
              *((void *)v175 + 1) = *((void *)v176 + 1);
              uint64_t v177 = v173[7];
              char v178 = &v169[v177];
              int v179 = &v170[v177];
              char v180 = v179[8];
              *(void *)char v178 = *(void *)v179;
              v178[8] = v180;
              swift_bridgeObjectRetain();
              swift_storeEnumTagMultiPayload();
            }
            uint64_t v154 = v239;
            uint64_t v196 = v242;
            goto LABEL_65;
          }
          *(void *)uint64_t v169 = *(void *)v170;
          *((void *)v169 + 1) = *((void *)v170 + 1);
          uint64_t v190 = type metadata accessor for StaticSoftwareUpdateMetadata(0);
          uint64_t v191 = *(int *)(v190 + 20);
          uint64_t v231 = v190;
          uint64_t v233 = &v169[v191];
          uint64_t v192 = &v170[v191];
          swift_bridgeObjectRetain();
          uint64_t v193 = v192;
          unsigned int v194 = v235(v192, 1, v237);
          uint64_t v15 = v244;
          if (v194)
          {
            uint64_t v195 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
            memcpy(v233, v193, *(void *)(*(void *)(v195 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, const void *, uint64_t))(v234 + 16))(v233, v193, v237);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v234 + 56))(v233, 0, 1, v237);
            uint64_t v15 = v244;
          }
          uint64_t v211 = *(int *)(v231 + 24);
          uint64_t v212 = &v169[v211];
          uint64_t v213 = &v170[v211];
          *(void *)uint64_t v212 = *(void *)v213;
          *((void *)v212 + 1) = *((void *)v213 + 1);
          uint64_t v214 = *(int *)(v231 + 28);
          uint64_t v215 = &v169[v214];
          uint64_t v216 = &v170[v214];
          *(void *)uint64_t v215 = *(void *)v216;
          *((void *)v215 + 1) = *((void *)v216 + 1);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v217 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
          v169[*(int *)(v217 + 48)] = v170[*(int *)(v217 + 48)];
          swift_storeEnumTagMultiPayload();
          uint64_t v154 = v239;
        }
        uint64_t v196 = v242;
        uint64_t v167 = __dsta;
LABEL_65:
        (*(void (**)(char *, void, uint64_t, uint64_t))(v196 + 56))(v167, 0, 1, v150);
        goto LABEL_66;
      case 2u:
        uint64_t v34 = sub_251F34DA0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(a1, a2, v34);
        uint64_t v35 = (int *)type metadata accessor for StaticServiceGroup();
        uint64_t v36 = v35[5];
        uint64_t v37 = (void *)(a1 + v36);
        uint64_t v38 = (void *)(a2 + v36);
        void *v37 = *v38;
        v37[1] = v38[1];
        *(unsigned char *)(a1 + v35[6]) = *(unsigned char *)(a2 + v35[6]);
        *(unsigned char *)(a1 + v35[7]) = *(unsigned char *)(a2 + v35[7]);
        *(void *)(a1 + v35[8]) = *(void *)(a2 + v35[8]);
        uint64_t v39 = v35[9];
        uint64_t v40 = (void *)(a1 + v39);
        uint64_t v41 = (void *)(a2 + v39);
        *uint64_t v40 = *v41;
        v40[1] = v41[1];
        *(unsigned char *)(a1 + v35[10]) = *(unsigned char *)(a2 + v35[10]);
        *(void *)(a1 + v35[11]) = *(void *)(a2 + v35[11]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_70;
      case 3u:
        uint64_t v42 = sub_251F34DA0();
        uint64_t v255 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16);
        v255(a1, a2, v42);
        uint64_t v43 = (int *)type metadata accessor for StaticEndpoint();
        uint64_t v44 = v43[5];
        uint64_t v45 = a1 + v44;
        uint64_t v46 = a2 + v44;
        __int16 v47 = *(_WORD *)(v46 + 8);
        *(void *)uint64_t v45 = *(void *)v46;
        *(_WORD *)(v45 + 8) = v47;
        uint64_t v48 = v43[6];
        uint64_t v49 = (void *)(a1 + v48);
        uint64_t v50 = (void *)(a2 + v48);
        void *v49 = *v50;
        v49[1] = v50[1];
        *(void *)(a1 + v43[7]) = *(void *)(a2 + v43[7]);
        *(void *)(a1 + v43[8]) = *(void *)(a2 + v43[8]);
        *(void *)(a1 + v43[9]) = *(void *)(a2 + v43[9]);
        *(void *)(a1 + v43[10]) = *(void *)(a2 + v43[10]);
        uint64_t v51 = v43[11];
        uint64_t v52 = a1 + v51;
        uint64_t v53 = a2 + v51;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v255(v52, v53, v42);
        *(void *)(a1 + v43[12]) = *(void *)(a2 + v43[12]);
        uint64_t v54 = v43[13];
        uint64_t v55 = a1 + v54;
        uint64_t v56 = a2 + v54;
        *(void *)uint64_t v55 = *(void *)(a2 + v54);
        *(void *)(v55 + 8) = *(void *)(a2 + v54 + 8);
        *(void *)(v55 + 16) = *(void *)(a2 + v54 + 16);
        *(void *)(v55 + 24) = *(void *)(a2 + v54 + 24);
        *(void *)(v55 + 32) = *(void *)(a2 + v54 + 32);
        *(void *)(v55 + 40) = *(void *)(a2 + v54 + 40);
        *(unsigned char *)(v55 + 48) = *(unsigned char *)(a2 + v54 + 48);
        *(unsigned char *)(v55 + 49) = *(unsigned char *)(a2 + v54 + 49);
        *(unsigned char *)(v55 + 50) = *(unsigned char *)(a2 + v54 + 50);
        *(unsigned char *)(v55 + 51) = *(unsigned char *)(a2 + v54 + 51);
        uint64_t v57 = *(int *)(type metadata accessor for MatterTileMetadata() + 44);
        uint64_t v256 = (void *)(v55 + v57);
        uint64_t v58 = (const void *)(v56 + v57);
        uint64_t v59 = sub_251F34D20();
        uint64_t v60 = *(void *)(v59 - 8);
        uint64_t v251 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v60 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v251(v58, 1, v59))
        {
          uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
          memcpy(v256, v58, *(void *)(*(void *)(v61 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v60 + 16))(v256, v58, v59);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v60 + 56))(v256, 0, 1, v59);
        }
        uint64_t v87 = v43[14];
        uint64_t v88 = a1 + v87;
        uint64_t v89 = (__int16 *)(a2 + v87);
        __int16 v90 = *v89;
        *(unsigned char *)(v88 + 2) = *((unsigned char *)v89 + 2);
        *(_WORD *)uint64_t v88 = v90;
        *(unsigned char *)(a1 + v43[15]) = *(unsigned char *)(a2 + v43[15]);
        goto LABEL_70;
      default:
        uint64_t v4 = sub_251F34DA0();
        uint64_t v250 = *(void **)(v4 - 8);
        int v5 = (void (*)(uint64_t, uint64_t, uint64_t))v250[2];
        v5(a1, a2, v4);
        uint64_t v6 = (int *)type metadata accessor for StaticAccessory(0);
        uint64_t v7 = v6[5];
        uint64_t v8 = (void *)(a1 + v7);
        uint64_t v9 = (void *)(a2 + v7);
        *uint64_t v8 = *v9;
        v8[1] = v9[1];
        uint64_t v10 = v6[6];
        uint64_t v11 = (void *)(a1 + v10);
        uint64_t v12 = (void *)(a2 + v10);
        type metadata accessor for StaticAccessory.DeviceIdentifier(0);
        swift_bridgeObjectRetain();
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v5((uint64_t)v11, (uint64_t)v12, v4);
        }
        else
        {
          void *v11 = *v12;
          v11[1] = v12[1];
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
        uint64_t v62 = v6[7];
        uint64_t v63 = (char *)(a1 + v62);
        uint64_t v64 = (char *)(a2 + v62);
        uint64_t v65 = (int *)type metadata accessor for StaticDeviceMetadata();
        uint64_t v66 = *((void *)v65 - 1);
        uint64_t v249 = (void (*)(char *, char *, uint64_t))v5;
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v66 + 48))(v64, 1, v65))
        {
          uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
          memcpy(v63, v64, *(void *)(*(void *)(v67 - 8) + 64));
        }
        else
        {
          v5((uint64_t)v63, (uint64_t)v64, v4);
          uint64_t v91 = v65[5];
          uint64_t v92 = &v63[v91];
          uint64_t v93 = &v64[v91];
          *(void *)uint64_t v92 = *(void *)v93;
          *((void *)v92 + 1) = *((void *)v93 + 1);
          uint64_t v94 = v65[6];
          int v95 = &v63[v94];
          uint64_t v96 = &v64[v94];
          *(void *)int v95 = *(void *)v96;
          *((void *)v95 + 1) = *((void *)v96 + 1);
          uint64_t v97 = v65[7];
          uint64_t v98 = &v63[v97];
          uint64_t v99 = &v64[v97];
          *(void *)uint64_t v98 = *(void *)v99;
          *((void *)v98 + 1) = *((void *)v99 + 1);
          uint64_t v100 = v65[8];
          uint64_t v101 = &v63[v100];
          uint64_t v102 = &v64[v100];
          *(void *)uint64_t v101 = *(void *)v102;
          *((void *)v101 + 1) = *((void *)v102 + 1);
          v63[v65[9]] = v64[v65[9]];
          v63[v65[10]] = v64[v65[10]];
          v63[v65[11]] = v64[v65[11]];
          v63[v65[12]] = v64[v65[12]];
          int v103 = *(void (**)(char *, void, uint64_t, int *))(v66 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v103(v63, 0, 1, v65);
        }
        uint64_t v104 = v6[8];
        uint64_t v105 = (void *)(a1 + v104);
        uint64_t v106 = (const void *)(a2 + v104);
        uint64_t v107 = sub_251F34D20();
        uint64_t v108 = *(void *)(v107 - 8);
        uint64_t v240 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v108 + 48);
        uint64_t v243 = v107;
        uint64_t v238 = v108;
        if (v240(v106, 1, v107))
        {
          uint64_t v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
          memcpy(v105, v106, *(void *)(*(void *)(v109 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v108 + 16))(v105, v106, v107);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v108 + 56))(v105, 0, 1, v107);
        }
        uint64_t v121 = v6[9];
        uint64_t v122 = a1 + v121;
        uint64_t v123 = (uint64_t *)(a2 + v121);
        uint64_t v124 = *v123;
        *(unsigned char *)(v122 + 8) = *((unsigned char *)v123 + 8);
        *(void *)uint64_t v122 = v124;
        *(unsigned char *)(a1 + v6[10]) = *(unsigned char *)(a2 + v6[10]);
        v5(a1 + v6[11], a2 + v6[11], v4);
        *(void *)(a1 + v6[12]) = *(void *)(a2 + v6[12]);
        uint64_t v125 = v6[13];
        uint64_t v126 = (void *)(a1 + v125);
        uint64_t v127 = (void *)(a2 + v125);
        *uint64_t v126 = *v127;
        v126[1] = v127[1];
        *(unsigned char *)(a1 + v6[14]) = *(unsigned char *)(a2 + v6[14]);
        *(unsigned char *)(a1 + v6[15]) = *(unsigned char *)(a2 + v6[15]);
        *(unsigned char *)(a1 + v6[16]) = *(unsigned char *)(a2 + v6[16]);
        *(unsigned char *)(a1 + v6[17]) = *(unsigned char *)(a2 + v6[17]);
        *(unsigned char *)(a1 + v6[18]) = *(unsigned char *)(a2 + v6[18]);
        *(void *)(a1 + v6[19]) = *(void *)(a2 + v6[19]);
        *(void *)(a1 + v6[20]) = *(void *)(a2 + v6[20]);
        uint64_t v128 = v6[21];
        __dst = (void *)(a1 + v128);
        uint64_t v129 = (const void *)(a2 + v128);
        uint64_t v130 = (unsigned int (*)(const void *, uint64_t, uint64_t))v250[6];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v130(v129, 1, v4))
        {
          uint64_t v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
          memcpy(__dst, v129, *(void *)(*(void *)(v131 - 8) + 64));
        }
        else
        {
          v5((uint64_t)__dst, (uint64_t)v129, v4);
          ((void (*)(void *, void, uint64_t, uint64_t))v250[7])(__dst, 0, 1, v4);
        }
        *(_WORD *)(a1 + v6[22]) = *(_WORD *)(a2 + v6[22]);
        uint64_t v136 = v6[23];
        uint64_t v137 = (void *)(a1 + v136);
        uint64_t v138 = (void *)(a2 + v136);
        void *v137 = *v138;
        v137[1] = v138[1];
        *(void *)(a1 + v6[24]) = *(void *)(a2 + v6[24]);
        *(unsigned char *)(a1 + v6[25]) = *(unsigned char *)(a2 + v6[25]);
        *(unsigned char *)(a1 + v6[26]) = *(unsigned char *)(a2 + v6[26]);
        *(unsigned char *)(a1 + v6[27]) = *(unsigned char *)(a2 + v6[27]);
        uint64_t v139 = v6[28];
        uint64_t v252 = (char *)(a1 + v139);
        uint64_t v140 = (char *)(a2 + v139);
        uint64_t v141 = type metadata accessor for StaticSoftwareUpdate(0);
        uint64_t v142 = *(void *)(v141 - 8);
        uint64_t v143 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v142 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v143(v140, 1, v141))
        {
          uint64_t v144 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
          memcpy(v252, v140, *(void *)(*(void *)(v144 - 8) + 64));
LABEL_59:
          *(unsigned char *)(a1 + v6[29]) = *(unsigned char *)(a2 + v6[29]);
          *(unsigned char *)(a1 + v6[30]) = *(unsigned char *)(a2 + v6[30]);
          *(void *)(a1 + v6[31]) = *(void *)(a2 + v6[31]);
          swift_bridgeObjectRetain();
LABEL_70:
          swift_storeEnumTagMultiPayload();
          return a1;
        }
        v249(v252, v140, v4);
        __dstb = (void *)v141;
        uint64_t v155 = *(int *)(v141 + 20);
        uint64_t v156 = &v252[v155];
        uint64_t v157 = &v140[v155];
        uint64_t v236 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
        int v158 = swift_getEnumCaseMultiPayload();
        if (v158 == 2)
        {
          *(void *)uint64_t v156 = *(void *)v157;
          *((void *)v156 + 1) = *((void *)v157 + 1);
          uint64_t v257 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
          uint64_t v181 = v257[5];
          int v182 = &v156[v181];
          uint64_t v183 = &v157[v181];
          swift_bridgeObjectRetain();
          if (v240(v183, 1, v243))
          {
LABEL_47:
            uint64_t v185 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
            memcpy(v182, v183, *(void *)(*(void *)(v185 - 8) + 64));
LABEL_56:
            uint64_t v197 = v257[6];
            uint64_t v198 = &v156[v197];
            uint64_t v199 = &v157[v197];
            *(void *)uint64_t v198 = *(void *)v199;
            *((void *)v198 + 1) = *((void *)v199 + 1);
            uint64_t v200 = v257[7];
            uint64_t v201 = &v156[v200];
            uint64_t v202 = &v157[v200];
            *(void *)uint64_t v201 = *(void *)v202;
            *((void *)v201 + 1) = *((void *)v202 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v203 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
            v156[*(int *)(v203 + 48)] = v157[*(int *)(v203 + 48)];
            goto LABEL_57;
          }
        }
        else
        {
          if (v158 != 1)
          {
            if (v158)
            {
              memcpy(v156, v157, *(void *)(*(void *)(v236 - 8) + 64));
LABEL_58:
              (*(void (**)(char *, void, uint64_t, void *))(v142 + 56))(v252, 0, 1, __dstb);
              goto LABEL_59;
            }
            v249(v156, v157, v4);
            uint64_t v159 = (int *)type metadata accessor for StaticHH2Update(0);
            v156[v159[5]] = v157[v159[5]];
            uint64_t v160 = v159[6];
            uint64_t v161 = &v156[v160];
            uint64_t v162 = &v157[v160];
            *(void *)uint64_t v161 = *(void *)v162;
            *((void *)v161 + 1) = *((void *)v162 + 1);
            uint64_t v163 = v159[7];
            uint64_t v164 = &v156[v163];
            uint64_t v165 = &v157[v163];
            char v166 = v165[8];
            *(void *)uint64_t v164 = *(void *)v165;
            v164[8] = v166;
            swift_bridgeObjectRetain();
LABEL_57:
            swift_storeEnumTagMultiPayload();
            goto LABEL_58;
          }
          *(void *)uint64_t v156 = *(void *)v157;
          *((void *)v156 + 1) = *((void *)v157 + 1);
          uint64_t v257 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
          uint64_t v184 = v257[5];
          int v182 = &v156[v184];
          uint64_t v183 = &v157[v184];
          swift_bridgeObjectRetain();
          if (v240(v183, 1, v243)) {
            goto LABEL_47;
          }
        }
        (*(void (**)(char *, char *, uint64_t))(v238 + 16))(v182, v183, v243);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v238 + 56))(v182, 0, 1, v243);
        goto LABEL_56;
    }
  }
  return a1;
}

uint64_t initializeWithTake for AccessoryDetails.Payload(uint64_t a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v11 = sub_251F34DA0();
      __dsta = *(void **)(v11 - 8);
      uint64_t v12 = (void (*)(uint64_t, uint64_t, uint64_t))__dsta[4];
      v12(a1, a2, v11);
      uint64_t v13 = (int *)type metadata accessor for StaticService();
      *(_OWORD *)(a1 + v13[5]) = *(_OWORD *)(a2 + v13[5]);
      *(unsigned char *)(a1 + v13[6]) = *(unsigned char *)(a2 + v13[6]);
      *(unsigned char *)(a1 + v13[7]) = *(unsigned char *)(a2 + v13[7]);
      *(unsigned char *)(a1 + v13[8]) = *(unsigned char *)(a2 + v13[8]);
      *(unsigned char *)(a1 + v13[9]) = *(unsigned char *)(a2 + v13[9]);
      *(unsigned char *)(a1 + v13[10]) = *(unsigned char *)(a2 + v13[10]);
      v12(a1 + v13[11], a2 + v13[11], v11);
      uint64_t v14 = v13[12];
      uint64_t v15 = a1 + v14;
      uint64_t v16 = a2 + v14;
      *(void *)uint64_t v15 = *(void *)v16;
      *(unsigned char *)(v15 + 8) = *(unsigned char *)(v16 + 8);
      uint64_t v17 = v13[13];
      uint64_t v18 = (char *)(a1 + v17);
      uint64_t v19 = (char *)(a2 + v17);
      uint64_t v20 = (int *)type metadata accessor for StaticDeviceMetadata();
      uint64_t v21 = *((void *)v20 - 1);
      uint64_t v138 = v11;
      uint64_t v139 = (void (*)(char *, char *, uint64_t))v12;
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v21 + 48))(v19, 1, v20))
      {
        uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
        memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        v12((uint64_t)v18, (uint64_t)v19, v11);
        *(_OWORD *)&v18[v20[5]] = *(_OWORD *)&v19[v20[5]];
        *(_OWORD *)&v18[v20[6]] = *(_OWORD *)&v19[v20[6]];
        *(_OWORD *)&v18[v20[7]] = *(_OWORD *)&v19[v20[7]];
        *(_OWORD *)&v18[v20[8]] = *(_OWORD *)&v19[v20[8]];
        v18[v20[9]] = v19[v20[9]];
        v18[v20[10]] = v19[v20[10]];
        v18[v20[11]] = v19[v20[11]];
        v18[v20[12]] = v19[v20[12]];
        (*(void (**)(char *, void, uint64_t, int *))(v21 + 56))(v18, 0, 1, v20);
      }
      uint64_t v47 = v13[14];
      uint64_t v48 = (void *)(a1 + v47);
      uint64_t v49 = (const void *)(a2 + v47);
      uint64_t v50 = sub_251F34D20();
      uint64_t v51 = *(void *)(v50 - 8);
      uint64_t v135 = *(unsigned int (**)(void))(v51 + 48);
      if (((unsigned int (*)(const void *, uint64_t, uint64_t))v135)(v49, 1, v50))
      {
        uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
        memcpy(v48, v49, *(void *)(*(void *)(v52 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v51 + 32))(v48, v49, v50);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
      }
      *(void *)(a1 + v13[15]) = *(void *)(a2 + v13[15]);
      *(_OWORD *)(a1 + v13[16]) = *(_OWORD *)(a2 + v13[16]);
      *(unsigned char *)(a1 + v13[17]) = *(unsigned char *)(a2 + v13[17]);
      *(unsigned char *)(a1 + v13[18]) = *(unsigned char *)(a2 + v13[18]);
      *(unsigned char *)(a1 + v13[19]) = *(unsigned char *)(a2 + v13[19]);
      *(unsigned char *)(a1 + v13[20]) = *(unsigned char *)(a2 + v13[20]);
      *(_OWORD *)(a1 + v13[21]) = *(_OWORD *)(a2 + v13[21]);
      *(unsigned char *)(a1 + v13[22]) = *(unsigned char *)(a2 + v13[22]);
      *(unsigned char *)(a1 + v13[23]) = *(unsigned char *)(a2 + v13[23]);
      *(unsigned char *)(a1 + v13[24]) = *(unsigned char *)(a2 + v13[24]);
      uint64_t v62 = v13[25];
      uint64_t v63 = (void *)(a1 + v62);
      uint64_t v64 = (const void *)(a2 + v62);
      uint64_t v65 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))__dsta[6];
      if (v65(a2 + v62, 1, v138))
      {
        uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
        memcpy(v63, v64, *(void *)(*(void *)(v66 - 8) + 64));
      }
      else
      {
        v12((uint64_t)v63, (uint64_t)v64, v138);
        ((void (*)(void *, void, uint64_t, uint64_t))__dsta[7])(v63, 0, 1, v138);
      }
      uint64_t v74 = v13[26];
      uint64_t v75 = (void *)(a1 + v74);
      uint64_t v76 = (const void *)(a2 + v74);
      uint64_t v137 = v65;
      if (v65(a2 + v74, 1, v138))
      {
        uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
        memcpy(v75, v76, *(void *)(*(void *)(v77 - 8) + 64));
      }
      else
      {
        v12((uint64_t)v75, (uint64_t)v76, v138);
        ((void (*)(void *, void, uint64_t, uint64_t))__dsta[7])(v75, 0, 1, v138);
      }
      *(void *)(a1 + v13[27]) = *(void *)(a2 + v13[27]);
      *(void *)(a1 + v13[28]) = *(void *)(a2 + v13[28]);
      *(_OWORD *)(a1 + v13[29]) = *(_OWORD *)(a2 + v13[29]);
      uint64_t v83 = v13[30];
      uint64_t v84 = (char *)(a1 + v83);
      uint64_t v85 = (char *)(a2 + v83);
      uint64_t v86 = type metadata accessor for StaticSoftwareUpdate(0);
      uint64_t v87 = *(void *)(v86 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v87 + 48))(v85, 1, v86))
      {
        uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
        memcpy(v84, v85, *(void *)(*(void *)(v88 - 8) + 64));
        goto LABEL_62;
      }
      v139(v84, v85, v138);
      uint64_t v96 = *(int *)(v86 + 20);
      uint64_t v132 = v84;
      uint64_t v97 = &v84[v96];
      uint64_t v98 = &v85[v96];
      uint64_t v130 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        *(_OWORD *)uint64_t v97 = *(_OWORD *)v98;
        uint64_t updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        uint64_t v110 = updated[5];
        uint64_t v128 = &v98[v110];
        uint64_t v129 = &v97[v110];
        if (v135()) {
          goto LABEL_51;
        }
        goto LABEL_59;
      }
      if (EnumCaseMultiPayload == 1)
      {
        *(_OWORD *)uint64_t v97 = *(_OWORD *)v98;
        uint64_t updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        uint64_t v111 = updated[5];
        uint64_t v128 = &v98[v111];
        uint64_t v129 = &v97[v111];
        if (v135())
        {
LABEL_51:
          uint64_t v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
          memcpy(v129, v128, *(void *)(*(void *)(v112 - 8) + 64));
LABEL_60:
          uint64_t v113 = v132;
          *(_OWORD *)&v97[updated[6]] = *(_OWORD *)&v98[updated[6]];
          *(_OWORD *)&v97[updated[7]] = *(_OWORD *)&v98[updated[7]];
          uint64_t v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
          v97[*(int *)(v115 + 48)] = v98[*(int *)(v115 + 48)];
          swift_storeEnumTagMultiPayload();
          goto LABEL_61;
        }
LABEL_59:
        (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v129, v128, v50);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v129, 0, 1, v50);
        goto LABEL_60;
      }
      if (EnumCaseMultiPayload)
      {
        memcpy(v97, v98, *(void *)(*(void *)(v130 - 8) + 64));
      }
      else
      {
        v139(v97, v98, v138);
        uint64_t v100 = (int *)type metadata accessor for StaticHH2Update(0);
        v97[v100[5]] = v98[v100[5]];
        *(_OWORD *)&v97[v100[6]] = *(_OWORD *)&v98[v100[6]];
        uint64_t v101 = v100[7];
        uint64_t v102 = &v97[v101];
        int v103 = &v98[v101];
        v102[8] = v103[8];
        *(void *)uint64_t v102 = *(void *)v103;
        swift_storeEnumTagMultiPayload();
      }
      uint64_t v113 = v132;
LABEL_61:
      (*(void (**)(char *, void, uint64_t, uint64_t))(v87 + 56))(v113, 0, 1, v86);
LABEL_62:
      *(unsigned char *)(a1 + v13[31]) = *(unsigned char *)(a2 + v13[31]);
      *(void *)(a1 + v13[32]) = *(void *)(a2 + v13[32]);
      uint64_t v116 = v13[33];
      uint64_t v117 = (void *)(a1 + v116);
      uint64_t v118 = (void *)(a2 + v116);
      if (v137(a2 + v116, 1, v138))
      {
        uint64_t v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
        memcpy(v117, v118, *(void *)(*(void *)(v119 - 8) + 64));
      }
      else
      {
        v139((char *)v117, (char *)v118, v138);
        ((void (*)(void *, void, uint64_t, uint64_t))__dsta[7])(v117, 0, 1, v138);
      }
      uint64_t v120 = v13[34];
      uint64_t v121 = a1 + v120;
      uint64_t v122 = a2 + v120;
      *(_WORD *)uint64_t v121 = *(_WORD *)v122;
      *(unsigned char *)(v121 + 2) = *(unsigned char *)(v122 + 2);
      uint64_t v123 = v13[35];
      uint64_t v124 = a1 + v123;
      uint64_t v125 = a2 + v123;
      *(_DWORD *)(v124 + 7) = *(_DWORD *)(v125 + 7);
      *(void *)uint64_t v124 = *(void *)v125;
LABEL_66:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 2u:
      uint64_t v23 = sub_251F34DA0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 32))(a1, a2, v23);
      uint64_t v24 = (int *)type metadata accessor for StaticServiceGroup();
      *(_OWORD *)(a1 + v24[5]) = *(_OWORD *)(a2 + v24[5]);
      *(unsigned char *)(a1 + v24[6]) = *(unsigned char *)(a2 + v24[6]);
      *(unsigned char *)(a1 + v24[7]) = *(unsigned char *)(a2 + v24[7]);
      *(void *)(a1 + v24[8]) = *(void *)(a2 + v24[8]);
      *(_OWORD *)(a1 + v24[9]) = *(_OWORD *)(a2 + v24[9]);
      *(unsigned char *)(a1 + v24[10]) = *(unsigned char *)(a2 + v24[10]);
      *(void *)(a1 + v24[11]) = *(void *)(a2 + v24[11]);
      goto LABEL_66;
    case 3u:
      uint64_t v25 = sub_251F34DA0();
      uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 32);
      v26(a1, a2, v25);
      uint64_t v27 = (int *)type metadata accessor for StaticEndpoint();
      uint64_t v28 = v27[5];
      uint64_t v29 = a1 + v28;
      uint64_t v30 = a2 + v28;
      *(void *)uint64_t v29 = *(void *)v30;
      *(_WORD *)(v29 + 8) = *(_WORD *)(v30 + 8);
      *(_OWORD *)(a1 + v27[6]) = *(_OWORD *)(a2 + v27[6]);
      *(void *)(a1 + v27[7]) = *(void *)(a2 + v27[7]);
      *(void *)(a1 + v27[8]) = *(void *)(a2 + v27[8]);
      *(void *)(a1 + v27[9]) = *(void *)(a2 + v27[9]);
      *(void *)(a1 + v27[10]) = *(void *)(a2 + v27[10]);
      v26(a1 + v27[11], a2 + v27[11], v25);
      *(void *)(a1 + v27[12]) = *(void *)(a2 + v27[12]);
      uint64_t v31 = v27[13];
      uint64_t v32 = a1 + v31;
      uint64_t v33 = a2 + v31;
      long long v34 = *(_OWORD *)(a2 + v31 + 16);
      *(_OWORD *)uint64_t v32 = *(_OWORD *)(a2 + v31);
      *(_OWORD *)(v32 + 16) = v34;
      *(_OWORD *)(v32 + 32) = *(_OWORD *)(a2 + v31 + 32);
      *(_DWORD *)(v32 + 48) = *(_DWORD *)(a2 + v31 + 48);
      uint64_t v35 = *(int *)(type metadata accessor for MatterTileMetadata() + 44);
      uint64_t v36 = (void *)(v32 + v35);
      uint64_t v37 = (const void *)(v33 + v35);
      uint64_t v38 = sub_251F34D20();
      uint64_t v39 = *(void *)(v38 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
      {
        uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
        memcpy(v36, v37, *(void *)(*(void *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v39 + 32))(v36, v37, v38);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
      }
      uint64_t v53 = v27[14];
      uint64_t v54 = a1 + v53;
      uint64_t v55 = a2 + v53;
      *(_WORD *)uint64_t v54 = *(_WORD *)v55;
      *(unsigned char *)(v54 + 2) = *(unsigned char *)(v55 + 2);
      *(unsigned char *)(a1 + v27[15]) = *(unsigned char *)(a2 + v27[15]);
      goto LABEL_66;
    default:
      uint64_t v4 = sub_251F34DA0();
      __dst = *(void **)(v4 - 8);
      int v5 = (void (*)(uint64_t, uint64_t, uint64_t))__dst[4];
      v5(a1, a2, v4);
      uint64_t v6 = (int *)type metadata accessor for StaticAccessory(0);
      *(_OWORD *)(a1 + v6[5]) = *(_OWORD *)(a2 + v6[5]);
      uint64_t v7 = v6[6];
      uint64_t v8 = (void *)(a1 + v7);
      uint64_t v9 = (const void *)(a2 + v7);
      uint64_t v10 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v5((uint64_t)v8, (uint64_t)v9, v4);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
      }
      uint64_t v41 = v6[7];
      uint64_t v42 = (char *)(a1 + v41);
      uint64_t v43 = (char *)(a2 + v41);
      uint64_t v44 = (int *)type metadata accessor for StaticDeviceMetadata();
      uint64_t v45 = *((void *)v44 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v45 + 48))(v43, 1, v44))
      {
        uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
        memcpy(v42, v43, *(void *)(*(void *)(v46 - 8) + 64));
      }
      else
      {
        v5((uint64_t)v42, (uint64_t)v43, v4);
        *(_OWORD *)&v42[v44[5]] = *(_OWORD *)&v43[v44[5]];
        *(_OWORD *)&v42[v44[6]] = *(_OWORD *)&v43[v44[6]];
        *(_OWORD *)&v42[v44[7]] = *(_OWORD *)&v43[v44[7]];
        *(_OWORD *)&v42[v44[8]] = *(_OWORD *)&v43[v44[8]];
        v42[v44[9]] = v43[v44[9]];
        v42[v44[10]] = v43[v44[10]];
        v42[v44[11]] = v43[v44[11]];
        v42[v44[12]] = v43[v44[12]];
        (*(void (**)(char *, void, uint64_t, int *))(v45 + 56))(v42, 0, 1, v44);
      }
      uint64_t v56 = v6[8];
      uint64_t v57 = (void *)(a1 + v56);
      uint64_t v58 = (const void *)(a2 + v56);
      uint64_t v59 = sub_251F34D20();
      uint64_t v60 = *(void *)(v59 - 8);
      uint64_t v136 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v60 + 48);
      if (v136(v58, 1, v59))
      {
        uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
        memcpy(v57, v58, *(void *)(*(void *)(v61 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v60 + 32))(v57, v58, v59);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
      }
      uint64_t v67 = v6[9];
      uint64_t v68 = a1 + v67;
      uint64_t v69 = a2 + v67;
      *(void *)uint64_t v68 = *(void *)v69;
      *(unsigned char *)(v68 + 8) = *(unsigned char *)(v69 + 8);
      *(unsigned char *)(a1 + v6[10]) = *(unsigned char *)(a2 + v6[10]);
      v5(a1 + v6[11], a2 + v6[11], v4);
      *(void *)(a1 + v6[12]) = *(void *)(a2 + v6[12]);
      *(_OWORD *)(a1 + v6[13]) = *(_OWORD *)(a2 + v6[13]);
      *(unsigned char *)(a1 + v6[14]) = *(unsigned char *)(a2 + v6[14]);
      *(unsigned char *)(a1 + v6[15]) = *(unsigned char *)(a2 + v6[15]);
      *(unsigned char *)(a1 + v6[16]) = *(unsigned char *)(a2 + v6[16]);
      *(unsigned char *)(a1 + v6[17]) = *(unsigned char *)(a2 + v6[17]);
      *(unsigned char *)(a1 + v6[18]) = *(unsigned char *)(a2 + v6[18]);
      *(void *)(a1 + v6[19]) = *(void *)(a2 + v6[19]);
      *(void *)(a1 + v6[20]) = *(void *)(a2 + v6[20]);
      uint64_t v70 = v6[21];
      uint64_t v71 = (void *)(a1 + v70);
      uint64_t v72 = (const void *)(a2 + v70);
      uint64_t v134 = v60;
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))__dst[6])(a2 + v70, 1, v4))
      {
        uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
        memcpy(v71, v72, *(void *)(*(void *)(v73 - 8) + 64));
      }
      else
      {
        v5((uint64_t)v71, (uint64_t)v72, v4);
        ((void (*)(void *, void, uint64_t, uint64_t))__dst[7])(v71, 0, 1, v4);
      }
      *(_WORD *)(a1 + v6[22]) = *(_WORD *)(a2 + v6[22]);
      *(_OWORD *)(a1 + v6[23]) = *(_OWORD *)(a2 + v6[23]);
      *(void *)(a1 + v6[24]) = *(void *)(a2 + v6[24]);
      *(unsigned char *)(a1 + v6[25]) = *(unsigned char *)(a2 + v6[25]);
      *(unsigned char *)(a1 + v6[26]) = *(unsigned char *)(a2 + v6[26]);
      *(unsigned char *)(a1 + v6[27]) = *(unsigned char *)(a2 + v6[27]);
      uint64_t v78 = v6[28];
      __dstb = (char *)(a1 + v78);
      uint64_t v79 = (char *)(a2 + v78);
      uint64_t v80 = type metadata accessor for StaticSoftwareUpdate(0);
      uint64_t v81 = *(void *)(v80 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v81 + 48))(v79, 1, v80))
      {
        uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
        memcpy(__dstb, v79, *(void *)(*(void *)(v82 - 8) + 64));
LABEL_58:
        *(unsigned char *)(a1 + v6[29]) = *(unsigned char *)(a2 + v6[29]);
        *(unsigned char *)(a1 + v6[30]) = *(unsigned char *)(a2 + v6[30]);
        *(void *)(a1 + v6[31]) = *(void *)(a2 + v6[31]);
        goto LABEL_66;
      }
      v5((uint64_t)__dstb, (uint64_t)v79, v4);
      uint64_t v89 = *(int *)(v80 + 20);
      uint64_t v131 = &__dstb[v89];
      uint64_t v133 = &v79[v89];
      uint64_t v90 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
      int v91 = swift_getEnumCaseMultiPayload();
      if (v91 == 2)
      {
        uint64_t v104 = v131;
        *(_OWORD *)uint64_t v131 = *(_OWORD *)v133;
        uint64_t v105 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        uint64_t v106 = v105[5];
        uint64_t v143 = &v131[v106];
        uint64_t v107 = &v133[v106];
        if (v136(&v133[v106], 1, v59))
        {
LABEL_46:
          uint64_t v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
          memcpy(v143, v107, *(void *)(*(void *)(v109 - 8) + 64));
LABEL_55:
          *(_OWORD *)((char *)v104 + v105[6]) = *(_OWORD *)&v133[v105[6]];
          *(_OWORD *)((char *)v104 + v105[7]) = *(_OWORD *)&v133[v105[7]];
          uint64_t v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
          *((unsigned char *)v104 + *(int *)(v114 + 48)) = v133[*(int *)(v114 + 48)];
          goto LABEL_56;
        }
      }
      else
      {
        if (v91 != 1)
        {
          if (v91)
          {
            memcpy(v131, v133, *(void *)(*(void *)(v90 - 8) + 64));
LABEL_57:
            (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(__dstb, 0, 1, v80);
            goto LABEL_58;
          }
          v5((uint64_t)v131, (uint64_t)v133, v4);
          uint64_t v92 = (int *)type metadata accessor for StaticHH2Update(0);
          v131[v92[5]] = v133[v92[5]];
          *(_OWORD *)&v131[v92[6]] = *(_OWORD *)&v133[v92[6]];
          uint64_t v93 = v92[7];
          uint64_t v94 = &v131[v93];
          int v95 = &v133[v93];
          v94[8] = v95[8];
          *(void *)uint64_t v94 = *(void *)v95;
LABEL_56:
          swift_storeEnumTagMultiPayload();
          goto LABEL_57;
        }
        uint64_t v104 = v131;
        *(_OWORD *)uint64_t v131 = *(_OWORD *)v133;
        uint64_t v105 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        uint64_t v108 = v105[5];
        uint64_t v143 = &v131[v108];
        uint64_t v107 = &v133[v108];
        if (v136(&v133[v108], 1, v59)) {
          goto LABEL_46;
        }
      }
      (*(void (**)(char *, char *, uint64_t))(v134 + 32))(v143, v107, v59);
      uint64_t v104 = v131;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v134 + 56))(v143, 0, 1, v59);
      goto LABEL_55;
  }
}

uint64_t assignWithTake for AccessoryDetails.Payload(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_251E760C4(a1, type metadata accessor for AccessoryDetails.Payload);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v12 = sub_251F34DA0();
        uint64_t v143 = *(void *)(v12 - 8);
        uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v143 + 32);
        v13(a1, a2, v12);
        uint64_t v14 = (int *)type metadata accessor for StaticService();
        *(_OWORD *)(a1 + v14[5]) = *(_OWORD *)(a2 + v14[5]);
        *(unsigned char *)(a1 + v14[6]) = *(unsigned char *)(a2 + v14[6]);
        *(unsigned char *)(a1 + v14[7]) = *(unsigned char *)(a2 + v14[7]);
        *(unsigned char *)(a1 + v14[8]) = *(unsigned char *)(a2 + v14[8]);
        *(unsigned char *)(a1 + v14[9]) = *(unsigned char *)(a2 + v14[9]);
        *(unsigned char *)(a1 + v14[10]) = *(unsigned char *)(a2 + v14[10]);
        v13(a1 + v14[11], a2 + v14[11], v12);
        uint64_t v15 = v14[12];
        uint64_t v16 = a1 + v15;
        uint64_t v17 = a2 + v15;
        *(void *)uint64_t v16 = *(void *)v17;
        *(unsigned char *)(v16 + 8) = *(unsigned char *)(v17 + 8);
        uint64_t v18 = v14[13];
        uint64_t v19 = (char *)(a1 + v18);
        uint64_t v20 = (char *)(a2 + v18);
        uint64_t v21 = (int *)type metadata accessor for StaticDeviceMetadata();
        uint64_t v22 = *((void *)v21 - 1);
        uint64_t v140 = v12;
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v22 + 48))(v20, 1, v21))
        {
          uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
          memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
        }
        else
        {
          v13((uint64_t)v19, (uint64_t)v20, v12);
          *(_OWORD *)&v19[v21[5]] = *(_OWORD *)&v20[v21[5]];
          *(_OWORD *)&v19[v21[6]] = *(_OWORD *)&v20[v21[6]];
          *(_OWORD *)&v19[v21[7]] = *(_OWORD *)&v20[v21[7]];
          *(_OWORD *)&v19[v21[8]] = *(_OWORD *)&v20[v21[8]];
          v19[v21[9]] = v20[v21[9]];
          v19[v21[10]] = v20[v21[10]];
          v19[v21[11]] = v20[v21[11]];
          v19[v21[12]] = v20[v21[12]];
          (*(void (**)(char *, void, uint64_t, int *))(v22 + 56))(v19, 0, 1, v21);
        }
        uint64_t v50 = v14[14];
        uint64_t v51 = (void *)(a1 + v50);
        uint64_t v52 = (const void *)(a2 + v50);
        uint64_t v53 = sub_251F34D20();
        uint64_t v54 = *(void *)(v53 - 8);
        uint64_t v136 = *(unsigned int (**)(void))(v54 + 48);
        uint64_t v134 = v54;
        if (((unsigned int (*)(const void *, uint64_t, uint64_t))v136)(v52, 1, v53))
        {
          uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
          memcpy(v51, v52, *(void *)(*(void *)(v55 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v54 + 32))(v51, v52, v53);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
        }
        *(void *)(a1 + v14[15]) = *(void *)(a2 + v14[15]);
        *(_OWORD *)(a1 + v14[16]) = *(_OWORD *)(a2 + v14[16]);
        *(unsigned char *)(a1 + v14[17]) = *(unsigned char *)(a2 + v14[17]);
        *(unsigned char *)(a1 + v14[18]) = *(unsigned char *)(a2 + v14[18]);
        *(unsigned char *)(a1 + v14[19]) = *(unsigned char *)(a2 + v14[19]);
        *(unsigned char *)(a1 + v14[20]) = *(unsigned char *)(a2 + v14[20]);
        *(_OWORD *)(a1 + v14[21]) = *(_OWORD *)(a2 + v14[21]);
        *(unsigned char *)(a1 + v14[22]) = *(unsigned char *)(a2 + v14[22]);
        *(unsigned char *)(a1 + v14[23]) = *(unsigned char *)(a2 + v14[23]);
        *(unsigned char *)(a1 + v14[24]) = *(unsigned char *)(a2 + v14[24]);
        uint64_t v65 = v14[25];
        uint64_t v66 = (void *)(a1 + v65);
        uint64_t v67 = (const void *)(a2 + v65);
        uint64_t v68 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v143 + 48);
        if (v68(a2 + v65, 1, v140))
        {
          uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
          memcpy(v66, v67, *(void *)(*(void *)(v69 - 8) + 64));
        }
        else
        {
          v13((uint64_t)v66, (uint64_t)v67, v140);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v143 + 56))(v66, 0, 1, v140);
        }
        uint64_t v77 = v14[26];
        uint64_t v78 = (void *)(a1 + v77);
        uint64_t v79 = (const void *)(a2 + v77);
        uint64_t v138 = v68;
        if (v68(a2 + v77, 1, v140))
        {
          uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
          memcpy(v78, v79, *(void *)(*(void *)(v80 - 8) + 64));
        }
        else
        {
          v13((uint64_t)v78, (uint64_t)v79, v140);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v143 + 56))(v78, 0, 1, v140);
        }
        *(void *)(a1 + v14[27]) = *(void *)(a2 + v14[27]);
        *(void *)(a1 + v14[28]) = *(void *)(a2 + v14[28]);
        *(_OWORD *)(a1 + v14[29]) = *(_OWORD *)(a2 + v14[29]);
        uint64_t v87 = v14[30];
        uint64_t v88 = (char *)(a1 + v87);
        uint64_t v89 = (char *)(a2 + v87);
        uint64_t v90 = type metadata accessor for StaticSoftwareUpdate(0);
        uint64_t v91 = *(void *)(v90 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v91 + 48))(v89, 1, v90))
        {
          uint64_t v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
          memcpy(v88, v89, *(void *)(*(void *)(v92 - 8) + 64));
LABEL_63:
          *(unsigned char *)(a1 + v14[31]) = *(unsigned char *)(a2 + v14[31]);
          *(void *)(a1 + v14[32]) = *(void *)(a2 + v14[32]);
          uint64_t v118 = v14[33];
          uint64_t v119 = (void *)(a1 + v118);
          uint64_t v120 = (const void *)(a2 + v118);
          if (v138(a2 + v118, 1, v140))
          {
            uint64_t v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
            memcpy(v119, v120, *(void *)(*(void *)(v121 - 8) + 64));
          }
          else
          {
            v13((uint64_t)v119, (uint64_t)v120, v140);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v143 + 56))(v119, 0, 1, v140);
          }
          uint64_t v122 = v14[34];
          uint64_t v123 = a1 + v122;
          uint64_t v124 = a2 + v122;
          *(_WORD *)uint64_t v123 = *(_WORD *)v124;
          *(unsigned char *)(v123 + 2) = *(unsigned char *)(v124 + 2);
          uint64_t v125 = v14[35];
          uint64_t v126 = a1 + v125;
          uint64_t v127 = a2 + v125;
          *(_DWORD *)(v126 + 7) = *(_DWORD *)(v127 + 7);
          *(void *)uint64_t v126 = *(void *)v127;
          goto LABEL_67;
        }
        v13((uint64_t)v88, (uint64_t)v89, v140);
        uint64_t v101 = *(int *)(v90 + 20);
        uint64_t v133 = &v88[v101];
        uint64_t v102 = &v89[v101];
        uint64_t v132 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          *(_OWORD *)uint64_t v133 = *(_OWORD *)v102;
          uint64_t updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
          uint64_t v113 = updated[5];
          uint64_t v130 = &v102[v113];
          uint64_t v131 = &v133[v113];
          if (v136())
          {
LABEL_53:
            uint64_t v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
            memcpy(v131, v130, *(void *)(*(void *)(v115 - 8) + 64));
LABEL_60:
            *(_OWORD *)&v133[updated[6]] = *(_OWORD *)&v102[updated[6]];
            *(_OWORD *)&v133[updated[7]] = *(_OWORD *)&v102[updated[7]];
            uint64_t v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
            v133[*(int *)(v117 + 48)] = v102[*(int *)(v117 + 48)];
            goto LABEL_61;
          }
        }
        else
        {
          if (EnumCaseMultiPayload != 1)
          {
            if (EnumCaseMultiPayload)
            {
              memcpy(v133, v102, *(void *)(*(void *)(v132 - 8) + 64));
LABEL_62:
              (*(void (**)(char *, void, uint64_t, uint64_t))(v91 + 56))(v88, 0, 1, v90);
              goto LABEL_63;
            }
            v13((uint64_t)v133, (uint64_t)v102, v140);
            uint64_t v104 = (int *)type metadata accessor for StaticHH2Update(0);
            v133[v104[5]] = v102[v104[5]];
            *(_OWORD *)&v133[v104[6]] = *(_OWORD *)&v102[v104[6]];
            uint64_t v105 = v104[7];
            uint64_t v106 = &v133[v105];
            uint64_t v107 = &v102[v105];
            v106[8] = v107[8];
            *(void *)uint64_t v106 = *(void *)v107;
LABEL_61:
            swift_storeEnumTagMultiPayload();
            goto LABEL_62;
          }
          *(_OWORD *)uint64_t v133 = *(_OWORD *)v102;
          uint64_t updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
          uint64_t v114 = updated[5];
          uint64_t v130 = &v102[v114];
          uint64_t v131 = &v133[v114];
          if (v136()) {
            goto LABEL_53;
          }
        }
        (*(void (**)(char *, char *, uint64_t))(v134 + 32))(v131, v130, v53);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v134 + 56))(v131, 0, 1, v53);
        goto LABEL_60;
      case 2u:
        uint64_t v24 = sub_251F34DA0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 32))(a1, a2, v24);
        uint64_t v25 = (int *)type metadata accessor for StaticServiceGroup();
        *(_OWORD *)(a1 + v25[5]) = *(_OWORD *)(a2 + v25[5]);
        *(unsigned char *)(a1 + v25[6]) = *(unsigned char *)(a2 + v25[6]);
        *(unsigned char *)(a1 + v25[7]) = *(unsigned char *)(a2 + v25[7]);
        *(void *)(a1 + v25[8]) = *(void *)(a2 + v25[8]);
        *(_OWORD *)(a1 + v25[9]) = *(_OWORD *)(a2 + v25[9]);
        *(unsigned char *)(a1 + v25[10]) = *(unsigned char *)(a2 + v25[10]);
        *(void *)(a1 + v25[11]) = *(void *)(a2 + v25[11]);
        goto LABEL_67;
      case 3u:
        uint64_t v26 = sub_251F34DA0();
        uint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32);
        v27(a1, a2, v26);
        uint64_t v28 = (int *)type metadata accessor for StaticEndpoint();
        uint64_t v29 = v28[5];
        uint64_t v30 = a1 + v29;
        uint64_t v31 = a2 + v29;
        *(void *)uint64_t v30 = *(void *)v31;
        *(_WORD *)(v30 + 8) = *(_WORD *)(v31 + 8);
        *(_OWORD *)(a1 + v28[6]) = *(_OWORD *)(a2 + v28[6]);
        *(void *)(a1 + v28[7]) = *(void *)(a2 + v28[7]);
        *(void *)(a1 + v28[8]) = *(void *)(a2 + v28[8]);
        *(void *)(a1 + v28[9]) = *(void *)(a2 + v28[9]);
        *(void *)(a1 + v28[10]) = *(void *)(a2 + v28[10]);
        v27(a1 + v28[11], a2 + v28[11], v26);
        *(void *)(a1 + v28[12]) = *(void *)(a2 + v28[12]);
        uint64_t v32 = v28[13];
        uint64_t v33 = a1 + v32;
        uint64_t v34 = a2 + v32;
        long long v35 = *(_OWORD *)(a2 + v32 + 16);
        *(_OWORD *)uint64_t v33 = *(_OWORD *)(a2 + v32);
        *(_OWORD *)(v33 + 16) = v35;
        *(_OWORD *)(v33 + 32) = *(_OWORD *)(a2 + v32 + 32);
        *(_DWORD *)(v33 + 48) = *(_DWORD *)(a2 + v32 + 48);
        uint64_t v36 = *(int *)(type metadata accessor for MatterTileMetadata() + 44);
        uint64_t v37 = (void *)(v33 + v36);
        uint64_t v38 = (const void *)(v34 + v36);
        uint64_t v39 = sub_251F34D20();
        uint64_t v40 = *(void *)(v39 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
        {
          uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
          memcpy(v37, v38, *(void *)(*(void *)(v41 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v40 + 32))(v37, v38, v39);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
        }
        uint64_t v56 = v28[14];
        uint64_t v57 = a1 + v56;
        uint64_t v58 = a2 + v56;
        *(_WORD *)uint64_t v57 = *(_WORD *)v58;
        *(unsigned char *)(v57 + 2) = *(unsigned char *)(v58 + 2);
        *(unsigned char *)(a1 + v28[15]) = *(unsigned char *)(a2 + v28[15]);
        goto LABEL_67;
      default:
        uint64_t v4 = sub_251F34DA0();
        uint64_t v139 = *(void *)(v4 - 8);
        int v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v139 + 32);
        v5(a1, a2, v4);
        uint64_t v6 = type metadata accessor for StaticAccessory(0);
        *(_OWORD *)(a1 + *(int *)(v6 + 20)) = *(_OWORD *)(a2 + *(int *)(v6 + 20));
        uint64_t v142 = (int *)v6;
        uint64_t v7 = *(int *)(v6 + 24);
        uint64_t v8 = (void *)(a1 + v7);
        uint64_t v9 = (const void *)(a2 + v7);
        uint64_t v10 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
        uint64_t v144 = v5;
        uint64_t v11 = v4;
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v5((uint64_t)v8, (uint64_t)v9, v4);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
        }
        uint64_t v42 = v142;
        uint64_t v43 = v142[7];
        uint64_t v44 = (char *)(a1 + v43);
        uint64_t v45 = (char *)(a2 + v43);
        uint64_t v46 = (int *)type metadata accessor for StaticDeviceMetadata();
        uint64_t v47 = *((void *)v46 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v47 + 48))(v45, 1, v46))
        {
          uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
          memcpy(v44, v45, *(void *)(*(void *)(v48 - 8) + 64));
          uint64_t v49 = v11;
        }
        else
        {
          uint64_t v49 = v11;
          v5((uint64_t)v44, (uint64_t)v45, v11);
          *(_OWORD *)&v44[v46[5]] = *(_OWORD *)&v45[v46[5]];
          *(_OWORD *)&v44[v46[6]] = *(_OWORD *)&v45[v46[6]];
          *(_OWORD *)&v44[v46[7]] = *(_OWORD *)&v45[v46[7]];
          *(_OWORD *)&v44[v46[8]] = *(_OWORD *)&v45[v46[8]];
          v44[v46[9]] = v45[v46[9]];
          v44[v46[10]] = v45[v46[10]];
          v44[v46[11]] = v45[v46[11]];
          v44[v46[12]] = v45[v46[12]];
          (*(void (**)(char *, void, uint64_t, int *))(v47 + 56))(v44, 0, 1, v46);
        }
        uint64_t v59 = v142[8];
        uint64_t v60 = (void *)(a1 + v59);
        uint64_t v61 = (const void *)(a2 + v59);
        uint64_t v62 = sub_251F34D20();
        uint64_t v63 = *(void *)(v62 - 8);
        uint64_t v137 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v63 + 48);
        if (v137(v61, 1, v62))
        {
          uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
          memcpy(v60, v61, *(void *)(*(void *)(v64 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v63 + 32))(v60, v61, v62);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v62);
        }
        uint64_t v70 = v142[9];
        uint64_t v71 = a1 + v70;
        uint64_t v72 = a2 + v70;
        *(void *)uint64_t v71 = *(void *)v72;
        *(unsigned char *)(v71 + 8) = *(unsigned char *)(v72 + 8);
        *(unsigned char *)(a1 + v142[10]) = *(unsigned char *)(a2 + v142[10]);
        v144(a1 + v142[11], a2 + v142[11], v49);
        *(void *)(a1 + v142[12]) = *(void *)(a2 + v142[12]);
        *(_OWORD *)(a1 + v142[13]) = *(_OWORD *)(a2 + v142[13]);
        *(unsigned char *)(a1 + v142[14]) = *(unsigned char *)(a2 + v142[14]);
        *(unsigned char *)(a1 + v142[15]) = *(unsigned char *)(a2 + v142[15]);
        *(unsigned char *)(a1 + v142[16]) = *(unsigned char *)(a2 + v142[16]);
        *(unsigned char *)(a1 + v142[17]) = *(unsigned char *)(a2 + v142[17]);
        *(unsigned char *)(a1 + v142[18]) = *(unsigned char *)(a2 + v142[18]);
        *(void *)(a1 + v142[19]) = *(void *)(a2 + v142[19]);
        *(void *)(a1 + v142[20]) = *(void *)(a2 + v142[20]);
        uint64_t v73 = v142[21];
        uint64_t v74 = (void *)(a1 + v73);
        uint64_t v75 = (const void *)(a2 + v73);
        uint64_t v135 = v63;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v139 + 48))(a2 + v73, 1, v49))
        {
          uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
          memcpy(v74, v75, *(void *)(*(void *)(v76 - 8) + 64));
        }
        else
        {
          v144((uint64_t)v74, (uint64_t)v75, v49);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v139 + 56))(v74, 0, 1, v49);
        }
        *(_WORD *)(a1 + v142[22]) = *(_WORD *)(a2 + v142[22]);
        *(_OWORD *)(a1 + v142[23]) = *(_OWORD *)(a2 + v142[23]);
        *(void *)(a1 + v142[24]) = *(void *)(a2 + v142[24]);
        *(unsigned char *)(a1 + v142[25]) = *(unsigned char *)(a2 + v142[25]);
        *(unsigned char *)(a1 + v142[26]) = *(unsigned char *)(a2 + v142[26]);
        *(unsigned char *)(a1 + v142[27]) = *(unsigned char *)(a2 + v142[27]);
        uint64_t v81 = v142[28];
        uint64_t v82 = (char *)(a1 + v81);
        uint64_t v83 = (char *)(a2 + v81);
        uint64_t v84 = type metadata accessor for StaticSoftwareUpdate(0);
        uint64_t v85 = *(void *)(v84 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v85 + 48))(v83, 1, v84))
        {
          uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
          memcpy(v82, v83, *(void *)(*(void *)(v86 - 8) + 64));
LABEL_58:
          *(unsigned char *)(a1 + v42[29]) = *(unsigned char *)(a2 + v42[29]);
          *(unsigned char *)(a1 + v42[30]) = *(unsigned char *)(a2 + v42[30]);
          *(void *)(a1 + v42[31]) = *(void *)(a2 + v42[31]);
LABEL_67:
          swift_storeEnumTagMultiPayload();
          return a1;
        }
        v144((uint64_t)v82, (uint64_t)v83, v49);
        uint64_t v93 = *(int *)(v84 + 20);
        uint64_t v94 = &v82[v93];
        int v95 = &v83[v93];
        uint64_t v141 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
        int v96 = swift_getEnumCaseMultiPayload();
        if (v96 == 2)
        {
          *(_OWORD *)uint64_t v94 = *(_OWORD *)v95;
          uint64_t v145 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
          uint64_t v108 = v145[5];
          uint64_t v109 = &v94[v108];
          uint64_t v110 = &v95[v108];
          if (v137(&v95[v108], 1, v62))
          {
LABEL_47:
            uint64_t v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
            memcpy(v109, v110, *(void *)(*(void *)(v112 - 8) + 64));
LABEL_56:
            uint64_t v42 = v142;
            *(_OWORD *)&v94[v145[6]] = *(_OWORD *)&v95[v145[6]];
            *(_OWORD *)&v94[v145[7]] = *(_OWORD *)&v95[v145[7]];
            uint64_t v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
            v94[*(int *)(v116 + 48)] = v95[*(int *)(v116 + 48)];
            swift_storeEnumTagMultiPayload();
LABEL_57:
            (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v82, 0, 1, v84);
            goto LABEL_58;
          }
        }
        else
        {
          if (v96 != 1)
          {
            if (v96)
            {
              memcpy(v94, v95, *(void *)(*(void *)(v141 - 8) + 64));
            }
            else
            {
              v144((uint64_t)v94, (uint64_t)v95, v49);
              uint64_t v97 = (int *)type metadata accessor for StaticHH2Update(0);
              v94[v97[5]] = v95[v97[5]];
              *(_OWORD *)&v94[v97[6]] = *(_OWORD *)&v95[v97[6]];
              uint64_t v98 = v97[7];
              uint64_t v99 = &v94[v98];
              uint64_t v100 = &v95[v98];
              v99[8] = v100[8];
              *(void *)uint64_t v99 = *(void *)v100;
              swift_storeEnumTagMultiPayload();
            }
            uint64_t v42 = v142;
            goto LABEL_57;
          }
          *(_OWORD *)uint64_t v94 = *(_OWORD *)v95;
          uint64_t v145 = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
          uint64_t v111 = v145[5];
          uint64_t v109 = &v94[v111];
          uint64_t v110 = &v95[v111];
          if (v137(&v95[v111], 1, v62)) {
            goto LABEL_47;
          }
        }
        (*(void (**)(char *, char *))(v135 + 32))(v109, v110);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v135 + 56))(v109, 0, 1, v62);
        goto LABEL_56;
    }
  }
  return a1;
}

uint64_t sub_251EA4204()
{
  uint64_t result = type metadata accessor for StaticAccessory(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for StaticService();
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for StaticServiceGroup();
      if (v3 <= 0x3F)
      {
        uint64_t result = type metadata accessor for StaticEndpoint();
        if (v4 <= 0x3F)
        {
          swift_initEnumMetadataMultiPayload();
          return 0;
        }
      }
    }
  }
  return result;
}

uint64_t dispatch thunk of AccessoryDetailsBasicInfoPayload.name.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of AccessoryDetailsBasicInfoPayload.isReachable.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of AccessoryDetailsBasicInfoPayload.roomId.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of AccessoryDetailsBasicInfoPayload.shouldShowInDashboard.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of AccessoryDetailsBasicInfoPayload.isFavorite.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of AccessoryDetailsBasicInfoPayload.statusIcon.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of AccessoryDetailsBasicInfoPayload.isActivated.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

ValueMetadata *type metadata accessor for AccessoryDetails.Payload.CodingKeys()
{
  return &type metadata for AccessoryDetails.Payload.CodingKeys;
}

ValueMetadata *type metadata accessor for AccessoryDetails.Payload.StaticAccessoryCodingKeys()
{
  return &type metadata for AccessoryDetails.Payload.StaticAccessoryCodingKeys;
}

ValueMetadata *type metadata accessor for AccessoryDetails.Payload.StaticServiceCodingKeys()
{
  return &type metadata for AccessoryDetails.Payload.StaticServiceCodingKeys;
}

ValueMetadata *type metadata accessor for AccessoryDetails.Payload.StaticServiceGroupCodingKeys()
{
  return &type metadata for AccessoryDetails.Payload.StaticServiceGroupCodingKeys;
}

unsigned char *_s13HomeDataModel16AccessoryDetailsV7PayloadO25StaticAccessoryCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x251EA44B0);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AccessoryDetails.Payload.StaticEndpointCodingKeys()
{
  return &type metadata for AccessoryDetails.Payload.StaticEndpointCodingKeys;
}

unsigned char *_s13HomeDataModel16AccessoryDetailsV7PayloadO10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251EA45B4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AccessoryDetails.CodingKeys()
{
  return &type metadata for AccessoryDetails.CodingKeys;
}

unint64_t sub_251EA45F0()
{
  unint64_t result = qword_269BA4FB0;
  if (!qword_269BA4FB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4FB0);
  }
  return result;
}

unint64_t sub_251EA4648()
{
  unint64_t result = qword_269BA4FB8;
  if (!qword_269BA4FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4FB8);
  }
  return result;
}

unint64_t sub_251EA46A0()
{
  unint64_t result = qword_269BA4FC0;
  if (!qword_269BA4FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4FC0);
  }
  return result;
}

unint64_t sub_251EA46F8()
{
  unint64_t result = qword_269BA4FC8;
  if (!qword_269BA4FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4FC8);
  }
  return result;
}

unint64_t sub_251EA4750()
{
  unint64_t result = qword_269BA4FD0;
  if (!qword_269BA4FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4FD0);
  }
  return result;
}

unint64_t sub_251EA47A8()
{
  unint64_t result = qword_269BA4FD8;
  if (!qword_269BA4FD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4FD8);
  }
  return result;
}

unint64_t sub_251EA4800()
{
  unint64_t result = qword_269BA4FE0;
  if (!qword_269BA4FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4FE0);
  }
  return result;
}

unint64_t sub_251EA4858()
{
  unint64_t result = qword_269BA4FE8;
  if (!qword_269BA4FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4FE8);
  }
  return result;
}

unint64_t sub_251EA48B0()
{
  unint64_t result = qword_269BA4FF0;
  if (!qword_269BA4FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4FF0);
  }
  return result;
}

unint64_t sub_251EA4908()
{
  unint64_t result = qword_269BA4FF8;
  if (!qword_269BA4FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA4FF8);
  }
  return result;
}

unint64_t sub_251EA4960()
{
  unint64_t result = qword_269BA5000;
  if (!qword_269BA5000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5000);
  }
  return result;
}

unint64_t sub_251EA49B8()
{
  unint64_t result = qword_269BA5008;
  if (!qword_269BA5008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5008);
  }
  return result;
}

unint64_t sub_251EA4A10()
{
  unint64_t result = qword_269BA5010;
  if (!qword_269BA5010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5010);
  }
  return result;
}

unint64_t sub_251EA4A68()
{
  unint64_t result = qword_269BA5018;
  if (!qword_269BA5018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5018);
  }
  return result;
}

unint64_t sub_251EA4AC0()
{
  unint64_t result = qword_269BA5020;
  if (!qword_269BA5020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5020);
  }
  return result;
}

unint64_t sub_251EA4B18()
{
  unint64_t result = qword_269BA5028;
  if (!qword_269BA5028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5028);
  }
  return result;
}

unint64_t sub_251EA4B70()
{
  unint64_t result = qword_269BA5030;
  if (!qword_269BA5030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5030);
  }
  return result;
}

unint64_t sub_251EA4BC8()
{
  unint64_t result = qword_269BA5038;
  if (!qword_269BA5038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5038);
  }
  return result;
}

uint64_t sub_251EA4C1C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x64616F6C796170 && a2 == 0xE700000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x666E496369736162 && a2 == 0xE90000000000006FLL || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x654D656369766564 && a2 == 0xEE00617461646174 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x8000000251F72E50)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_251EA4E04(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6341636974617473 && a2 == 0xEF79726F73736563;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6553636974617473 && a2 == 0xED00006563697672 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000251F72E70 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E45636974617473 && a2 == 0xEE00746E696F7064)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t TileInfoBearer.serviceKinds.getter(char *a1)
{
  uint64_t v2 = v1;
  uint64_t v68 = type metadata accessor for StaticServiceGroup();
  uint64_t v4 = MEMORY[0x270FA5388](v68);
  uint64_t v66 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v69 = (char *)&v65 - v6;
  uint64_t v71 = type metadata accessor for StaticService();
  uint64_t v76 = *(void *)(v71 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v71);
  uint64_t v75 = (uint64_t)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v70 = (char *)&v65 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v65 - v11;
  uint64_t v13 = type metadata accessor for StaticAccessory(0);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v19 = (char *)&v65 - v18;
  uint64_t v20 = *((void *)a1 - 1);
  uint64_t v21 = MEMORY[0x270FA5388](v17);
  uint64_t v65 = (char *)&v65 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v67 = (char *)&v65 - v24;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v27 = (char *)&v65 - v26;
  MEMORY[0x270FA5388](v25);
  uint64_t v29 = (char *)&v65 - v28;
  uint64_t v73 = v20;
  uint64_t v30 = *(void (**)(char *, uint64_t, char *))(v20 + 16);
  v30((char *)&v65 - v28, v2, a1);
  uint64_t v74 = v19;
  int v31 = swift_dynamicCast();
  uint64_t v72 = v29;
  if (v31)
  {
    v30(v27, v2, a1);
    uint64_t v70 = a1;
    uint64_t v32 = swift_dynamicCast();
    uint64_t v33 = *(void *)&v16[*(int *)(v13 + 80)];
    MEMORY[0x270FA5388](v32);
    *(&v65 - 2) = v16;
    swift_bridgeObjectRetain();
    unint64_t v34 = sub_251A51E88((void (*)(char *))sub_251AB2CBC, (uint64_t)(&v65 - 4), v33);
    swift_bridgeObjectRelease();
    sub_251EA8C84((uint64_t)v16, type metadata accessor for StaticAccessory);
    int64_t v35 = *(void *)(v34 + 16);
    if (v35)
    {
      uint64_t v77 = MEMORY[0x263F8EE78];
      sub_251A3E424(0, v35, 0);
      uint64_t v36 = v34 + ((*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80));
      uint64_t v37 = *(void *)(v76 + 72);
      uint64_t v38 = v77;
      uint64_t v39 = v71;
      do
      {
        sub_251AD2AE0(v36, (uint64_t)v12);
        char v40 = v12[*(int *)(v39 + 88)];
        sub_251EA8C84((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticService);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_251A3E424(0, *(void *)(v38 + 16) + 1, 1);
          uint64_t v38 = v77;
        }
        unint64_t v42 = *(void *)(v38 + 16);
        unint64_t v41 = *(void *)(v38 + 24);
        if (v42 >= v41 >> 1)
        {
          sub_251A3E424(v41 > 1, v42 + 1, 1);
          uint64_t v38 = v77;
        }
        *(void *)(v38 + 16) = v42 + 1;
        *(unsigned char *)(v38 + v42 + 32) = v40;
        v36 += v37;
        --v35;
      }
      while (v35);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v38 = MEMORY[0x263F8EE78];
    }
    uint64_t v63 = type metadata accessor for StaticAccessory;
    uint64_t v64 = (uint64_t)v74;
    goto LABEL_28;
  }
  uint64_t v44 = (uint64_t)v70;
  uint64_t v43 = v71;
  if (swift_dynamicCast())
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CFA8);
    uint64_t v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_251F38650;
    v30(v67, v2, a1);
    swift_dynamicCast();
    char v45 = v12[*(int *)(v43 + 88)];
    sub_251EA8C84((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticService);
    *(unsigned char *)(v38 + 32) = v45;
    sub_251EA8C84(v44, (uint64_t (*)(void))type metadata accessor for StaticService);
LABEL_29:
    (*(void (**)(char *, char *))(v73 + 8))(v72, a1);
    return v38;
  }
  int v46 = swift_dynamicCast();
  uint64_t v38 = MEMORY[0x263F8EE78];
  if (!v46) {
    goto LABEL_29;
  }
  v30(v65, v2, a1);
  uint64_t v47 = (uint64_t)v66;
  uint64_t v70 = a1;
  swift_dynamicCast();
  uint64_t v48 = swift_bridgeObjectRetain();
  uint64_t v49 = sub_251EDC188(v48);
  sub_251EA8C84(v47, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
  int64_t v50 = *(void *)(v49 + 16);
  if (!v50)
  {
LABEL_30:
    swift_bridgeObjectRelease();
    uint64_t v63 = (uint64_t (*)(void))type metadata accessor for StaticServiceGroup;
    uint64_t v64 = (uint64_t)v69;
LABEL_28:
    sub_251EA8C84(v64, v63);
    a1 = v70;
    goto LABEL_29;
  }
  uint64_t v77 = v38;
  sub_251A3E424(0, v50, 0);
  uint64_t result = sub_251A53EB8(v49);
  uint64_t v52 = result;
  uint64_t v54 = v53;
  char v56 = v55 & 1;
  uint64_t v74 = (char *)(v49 + 56);
  while ((v56 & 1) == 0)
  {
    if (v52 < 0 || v52 >= 1 << *(unsigned char *)(v49 + 32))
    {
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
      break;
    }
    if (((*(void *)&v74[((unint64_t)v52 >> 3) & 0x1FFFFFFFFFFFFFF8] >> v52) & 1) == 0) {
      goto LABEL_32;
    }
    if (*(_DWORD *)(v49 + 36) != v54) {
      goto LABEL_33;
    }
    uint64_t v57 = v75;
    sub_251AD2AE0(*(void *)(v49 + 48) + *(void *)(v76 + 72) * v52, v75);
    sub_251EA8F40(v57, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticService);
    char v58 = v12[*(int *)(v43 + 88)];
    sub_251EA8C84((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t v38 = v77;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_251A3E424(0, *(void *)(v38 + 16) + 1, 1);
      uint64_t v38 = v77;
    }
    unint64_t v60 = *(void *)(v38 + 16);
    unint64_t v59 = *(void *)(v38 + 24);
    if (v60 >= v59 >> 1)
    {
      sub_251A3E424(v59 > 1, v60 + 1, 1);
      uint64_t v38 = v77;
    }
    *(void *)(v38 + 16) = v60 + 1;
    *(unsigned char *)(v38 + v60 + 32) = v58;
    uint64_t result = sub_251A53F5C(v52, v54, 0, v49);
    uint64_t v52 = result;
    uint64_t v54 = v61;
    char v56 = v62 & 1;
    if (!--v50)
    {
      sub_251A4ECE4(result, v61, v56);
      goto LABEL_30;
    }
  }
  __break(1u);
  return result;
}

unint64_t TileInfoBearer.description.getter(uint64_t a1)
{
  uint64_t v28 = type metadata accessor for StaticEndpoint();
  MEMORY[0x270FA5388](v28);
  uint64_t v27 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = type metadata accessor for StaticMatterDevice();
  MEMORY[0x270FA5388](v29);
  uint64_t v30 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for StaticServiceGroup();
  MEMORY[0x270FA5388](v31);
  uint64_t v32 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = type metadata accessor for StaticService();
  MEMORY[0x270FA5388](v34);
  uint64_t v33 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = type metadata accessor for StaticMediaSystem();
  MEMORY[0x270FA5388](v35);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for StaticCameraProfile();
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for StaticActionSet();
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for StaticAccessory(0);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v20 = (char *)&v27 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, v36, a1);
  if (swift_dynamicCast())
  {
    unint64_t v21 = 0x6341636974617473;
    sub_251EA8C84((uint64_t)v17, type metadata accessor for StaticAccessory);
  }
  else if (swift_dynamicCast())
  {
    unint64_t v21 = 0x6341636974617473;
    sub_251EA8C84((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
  }
  else if (swift_dynamicCast())
  {
    sub_251EA8C84((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
    unint64_t v21 = 0xD000000000000013;
  }
  else if (swift_dynamicCast())
  {
    sub_251EA8C84((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
    unint64_t v21 = 0xD000000000000011;
  }
  else
  {
    uint64_t v22 = (uint64_t)v33;
    if (swift_dynamicCast())
    {
      sub_251EA8C84(v22, (uint64_t (*)(void))type metadata accessor for StaticService);
      unint64_t v21 = 0x6553636974617473;
    }
    else
    {
      uint64_t v23 = (uint64_t)v32;
      if (swift_dynamicCast())
      {
        unint64_t v21 = 0xD000000000000012;
        sub_251EA8C84(v23, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
      }
      else
      {
        uint64_t v24 = (uint64_t)v30;
        if (swift_dynamicCast())
        {
          unint64_t v21 = 0xD000000000000012;
          sub_251EA8C84(v24, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
        }
        else
        {
          uint64_t v26 = (uint64_t)v27;
          if (swift_dynamicCast())
          {
            sub_251EA8C84(v26, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
            unint64_t v21 = 0x6E45636974617473;
          }
          else
          {
            unint64_t v21 = 0;
          }
        }
      }
    }
  }
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, a1);
  return v21;
}

uint64_t TileInfoBearer.debugDescription.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v74 = 0;
  unint64_t v75 = 0xE000000000000000;
  sub_251F36400();
  uint64_t v86 = 0;
  unint64_t v87 = 0xE000000000000000;
  sub_251F35800();
  (*(void (**)(uint64_t, uint64_t))(a2 + 144))(a1, a2);
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  uint64_t v5 = sub_251F34DA0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v61 = v7;
  uint64_t v8 = (char *)v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F36420();
  sub_251AF752C();
  sub_251F36AB0();
  sub_251F35800();
  swift_bridgeObjectRelease();
  uint64_t v60 = v6;
  uint64_t v9 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v59 = v5;
  uint64_t v58 = v6 + 8;
  uint64_t v57 = v9;
  v9(v8, v5);
  sub_251F35800();
  (*(void (**)(uint64_t, uint64_t))(a2 + 56))(a1, a2);
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  uint64_t v74 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 176))(a1, a2);
  unint64_t v75 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E2A8);
  sub_251F35770();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  sub_251F36AB0();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a2 + 72))(&v74, a1, a2);
  uint64_t v62 = v74;
  unint64_t v63 = v75;
  char v64 = v76;
  uint64_t v65 = v77;
  uint64_t v66 = v78;
  char v67 = v79;
  uint64_t v68 = v80;
  uint64_t v69 = v81;
  char v70 = v82;
  uint64_t v71 = v83;
  uint64_t v72 = v84;
  char v73 = v85;
  sub_251F36640();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_251F35800();
  (*(void (**)(uint64_t, uint64_t))(a2 + 88))(a1, a2);
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  (*(void (**)(uint64_t, uint64_t))(a2 + 168))(a1, a2);
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 96);
  uint64_t v53 = v2;
  uint64_t v52 = a1;
  uint64_t v12 = v11(a1, a2);
  int64_t v13 = *(void *)(v12 + 16);
  uint64_t v14 = MEMORY[0x263F8EE78];
  if (v13)
  {
    uint64_t v74 = MEMORY[0x263F8EE78];
    sub_251A3DEDC(0, v13, 0);
    uint64_t v15 = 0;
    uint64_t v16 = v74;
    do
    {
      LOBYTE(v62) = *(unsigned char *)(v12 + v15 + 32);
      uint64_t v17 = ServiceKind.localizedDescription.getter();
      uint64_t v19 = v18;
      uint64_t v74 = v16;
      unint64_t v21 = *(void *)(v16 + 16);
      unint64_t v20 = *(void *)(v16 + 24);
      if (v21 >= v20 >> 1)
      {
        sub_251A3DEDC(v20 > 1, v21 + 1, 1);
        uint64_t v16 = v74;
      }
      ++v15;
      *(void *)(v16 + 16) = v21 + 1;
      unint64_t v22 = v16 + 16 * v21;
      *(void *)(v22 + 32) = v17;
      *(void *)(v22 + 40) = v19;
    }
    while (v13 != v15);
    swift_bridgeObjectRelease();
    uint64_t v14 = MEMORY[0x263F8EE78];
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v16 = MEMORY[0x263F8EE78];
  }
  uint64_t v74 = v16;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EAB0);
  unint64_t v24 = sub_251BFC684();
  void v51[2] = v23;
  v51[1] = v24;
  sub_251F35620();
  swift_bridgeObjectRelease();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  uint64_t v25 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 136))(v52, a2);
  int64_t v26 = *(void *)(v25 + 16);
  if (v26)
  {
    v51[0] = a2;
    uint64_t v74 = v14;
    sub_251A3DEDC(0, v26, 0);
    uint64_t v27 = sub_251A53EB8(v25);
    uint64_t v28 = v27;
    uint64_t v30 = v29;
    uint64_t v56 = v25 + 56;
    uint64_t v55 = v60 + 16;
    uint64_t v54 = v60 + 32;
    while (1)
    {
      uint64_t result = MEMORY[0x270FA5388](v27);
      uint64_t v33 = (char *)v51 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
      if (v34) {
        break;
      }
      if (v28 < 0 || v28 >= 1 << *(unsigned char *)(v25 + 32))
      {
        __break(1u);
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
        break;
      }
      if (((*(void *)(v56 + (((unint64_t)v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v28) & 1) == 0) {
        goto LABEL_24;
      }
      if (*(_DWORD *)(v25 + 36) != v30) {
        goto LABEL_25;
      }
      uint64_t v35 = v60;
      uint64_t v36 = v59;
      uint64_t v37 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v60 + 16))((char *)v51 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0), *(void *)(v25 + 48) + *(void *)(v60 + 72) * v28, v59);
      MEMORY[0x270FA5388](v37);
      uint64_t v39 = (char *)v51 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v39, v33, v36);
      uint64_t v40 = sub_251F34D40();
      uint64_t v42 = v41;
      v57(v39, v36);
      uint64_t v43 = v74;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_251A3DEDC(0, *(void *)(v43 + 16) + 1, 1);
        uint64_t v43 = v74;
      }
      unint64_t v45 = *(void *)(v43 + 16);
      unint64_t v44 = *(void *)(v43 + 24);
      if (v45 >= v44 >> 1)
      {
        sub_251A3DEDC(v44 > 1, v45 + 1, 1);
        uint64_t v43 = v74;
      }
      *(void *)(v43 + 16) = v45 + 1;
      unint64_t v46 = v43 + 16 * v45;
      *(void *)(v46 + 32) = v40;
      *(void *)(v46 + 40) = v42;
      uint64_t v27 = sub_251A53F5C(v28, v30, 0, v25);
      uint64_t v28 = v27;
      uint64_t v30 = v47;
      char v49 = v48 & 1;
      if (!--v26)
      {
        sub_251A4ECE4(v27, v47, v49);
        swift_bridgeObjectRelease();
        a2 = v51[0];
        goto LABEL_22;
      }
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v43 = MEMORY[0x263F8EE78];
LABEL_22:
    uint64_t v74 = v43;
    sub_251F35620();
    swift_bridgeObjectRelease();
    sub_251F35800();
    swift_bridgeObjectRelease();
    sub_251F35800();
    uint64_t v50 = v52;
    (*(void (**)(uint64_t, uint64_t))(a2 + 120))(v52, a2);
    sub_251F35800();
    swift_bridgeObjectRelease();
    sub_251F35800();
    (*(void (**)(uint64_t, uint64_t))(a2 + 128))(v50, a2);
    sub_251F35800();
    swift_bridgeObjectRelease();
    sub_251F35800();
    (*(void (**)(uint64_t, uint64_t))(a2 + 152))(v50, a2);
    sub_251F35800();
    swift_bridgeObjectRelease();
    return v86;
  }
  return result;
}

unint64_t TileInfoBearer.staticServices.getter(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for StaticService();
  v28[0] = *(void *)(v4 - 8);
  v28[1] = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for StaticAccessory(0);
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  unint64_t v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  int64_t v13 = (char *)v28 - v12;
  uint64_t v14 = *(void *)(a1 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v11);
  uint64_t v17 = (char *)v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)v28 - v18;
  uint64_t v29 = v14;
  unint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v20((char *)v28 - v18, v2, a1);
  if (swift_dynamicCast())
  {
    v20(v17, v2, a1);
    uint64_t v21 = swift_dynamicCast();
    uint64_t v22 = *(void *)&v10[*(int *)(v7 + 80)];
    MEMORY[0x270FA5388](v21);
    v28[-2] = v10;
    swift_bridgeObjectRetain();
    unint64_t v23 = sub_251A51E88((void (*)(char *))sub_251AB3DF0, (uint64_t)&v28[-4], v22);
    swift_bridgeObjectRelease();
    sub_251EA8C84((uint64_t)v10, type metadata accessor for StaticAccessory);
    uint64_t v24 = (uint64_t)v13;
    uint64_t v25 = type metadata accessor for StaticAccessory;
  }
  else
  {
    uint64_t v26 = v2;
    if (!swift_dynamicCast())
    {
      unint64_t v23 = MEMORY[0x263F8EE78];
      goto LABEL_7;
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F208);
    unint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_251F38650;
    v20(v17, v26, a1);
    swift_dynamicCast();
    uint64_t v25 = (uint64_t (*)(void))type metadata accessor for StaticService;
    uint64_t v24 = (uint64_t)v6;
  }
  sub_251EA8C84(v24, v25);
LABEL_7:
  (*(void (**)(char *, uint64_t))(v29 + 8))(v19, a1);
  return v23;
}

uint64_t TileInfoBearer.primaryStaticService.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v49 = a2;
  uint64_t v4 = type metadata accessor for StaticService();
  uint64_t v50 = *(void *)(v4 - 8);
  uint64_t v51 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v47 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v43 - v7;
  uint64_t v9 = type metadata accessor for StaticAccessory(0);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  unint64_t v46 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v43 - v13;
  uint64_t v15 = *(void *)(a1 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v12);
  unint64_t v44 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  unint64_t v20 = (char *)&v43 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v43 - v21;
  uint64_t v48 = v15;
  unint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  uint64_t v24 = v2;
  v23((char *)&v43 - v21, v2, a1);
  unint64_t v45 = v14;
  uint64_t v25 = a1;
  if (swift_dynamicCast())
  {
    uint64_t v26 = v51;
    v23(v20, v24, a1);
    uint64_t v27 = (uint64_t)v46;
    uint64_t v28 = swift_dynamicCast();
    uint64_t v29 = *(void *)(v27 + *(int *)(v9 + 80));
    MEMORY[0x270FA5388](v28);
    *(&v43 - 2) = v27;
    swift_bridgeObjectRetain();
    unint64_t v30 = sub_251A51E88((void (*)(char *))sub_251AB3DF0, (uint64_t)(&v43 - 4), v29);
    swift_bridgeObjectRelease();
    sub_251EA8C84(v27, type metadata accessor for StaticAccessory);
    uint64_t v31 = *(void *)(v30 + 16);
    if (v31)
    {
      uint64_t v32 = v50;
      uint64_t v33 = v30 + ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80));
      uint64_t v34 = *(void *)(v50 + 72);
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_251AD2AE0(v33, (uint64_t)v8);
        if (v8[*(int *)(v26 + 24)] == 1) {
          break;
        }
        sub_251EA8C84((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticService);
        v33 += v34;
        if (!--v31)
        {
          swift_bridgeObjectRelease();
          uint64_t v35 = 1;
          goto LABEL_12;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v40 = v49;
      sub_251EA8F40((uint64_t)v8, v49, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v35 = 0;
    }
    else
    {
      uint64_t v35 = 1;
      uint64_t v32 = v50;
LABEL_12:
      uint64_t v40 = v49;
    }
    uint64_t v39 = v48;
    uint64_t v41 = (uint64_t)v45;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 56))(v40, v35, 1, v26);
    swift_bridgeObjectRelease();
    sub_251EA8C84(v41, type metadata accessor for StaticAccessory);
  }
  else
  {
    uint64_t v36 = (uint64_t)v47;
    uint64_t v37 = v51;
    if (swift_dynamicCast())
    {
      v23(v44, v24, a1);
      uint64_t v38 = v49;
      swift_dynamicCast();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v50 + 56))(v38, 0, 1, v37);
      sub_251EA8C84(v36, (uint64_t (*)(void))type metadata accessor for StaticService);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v50 + 56))(v49, 1, 1, v37);
    }
    uint64_t v39 = v48;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v22, v25);
}

uint64_t TileInfoBearer.cameraProfile.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  MEMORY[0x270FA5388](a1);
  (*(void (**)(char *))(v4 + 16))((char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for StaticCameraProfile();
  int v6 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(a2, v6 ^ 1u, 1, v5);
}

uint64_t TileInfoBearer.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  sub_251F36420();
  uint64_t v2 = sub_251F34DA0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  return v3(a1, 0, 1, v2);
}

uint64_t static StateSnapshot.toggleAll(_:)(uint64_t a1, uint64_t a2)
{
  v2[20] = a1;
  v2[21] = a2;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  v2[22] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for StaticService();
  v2[23] = v3;
  v2[24] = *(void *)(v3 - 8);
  v2[25] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251EA73D4, 0, 0);
}

uint64_t sub_251EA73D4()
{
  uint64_t v21 = v0;
  uint64_t v1 = *(void *)(v0 + 168);
  uint64_t v2 = MEMORY[0x263F8EE78];
  uint64_t v19 = MEMORY[0x263F8EE78];
  uint64_t v3 = *(void *)(v1 + 16);
  if (v3)
  {
    uint64_t v4 = v1 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_251EA86EC(v4, &v20);
      sub_251ED6260(v20);
      v4 += 40;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    uint64_t v2 = v19;
  }
  *(void *)(v0 + 208) = v2;
  uint64_t v5 = qword_270264EF8;
  *(void *)(v0 + 112) = sub_2519F95BC(MEMORY[0x263F8EE78]);
  *(unsigned char *)(v0 + 120) = v5 & 1;
  *(void *)(v0 + 128) = v5;
  uint64_t v6 = *(void *)(v2 + 16);
  *(void *)(v0 + 216) = v6;
  if (v6)
  {
    uint64_t v7 = *(void *)(v0 + 192);
    *(_DWORD *)(v0 + 392) = *(_DWORD *)(v7 + 80);
    *(void *)(v0 + 224) = *(void *)(v7 + 72);
    swift_bridgeObjectRetain();
    uint64_t v8 = 0;
    do
    {
      *(void *)(v0 + 232) = v8;
      uint64_t v9 = *(void *)(v0 + 200);
      uint64_t v10 = *(void *)(v0 + 184);
      sub_251AD2AE0(*(void *)(v0 + 208)+ ((*(unsigned __int8 *)(v0 + 392) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 392))+ *(void *)(v0 + 224) * v8, v9);
      unsigned int v11 = *(unsigned __int8 *)(v9 + *(int *)(v10 + 88));
      if (v11 <= 0x30)
      {
        if (((1 << v11) & 0x1940001320008) != 0)
        {
          char v12 = 3;
          goto LABEL_15;
        }
        if (((1 << v11) & 0x20410010000) != 0)
        {
          char v12 = 105;
          goto LABEL_15;
        }
        if (((1 << v11) & 0x4080000000) != 0)
        {
          char v12 = 84;
LABEL_15:
          *(unsigned char *)(v0 + 396) = v12;
          *(void *)(v0 + 240) = sub_251F35C80();
          *(void *)(v0 + 248) = sub_251F35C70();
          uint64_t v13 = sub_251F35C00();
          uint64_t v15 = v14;
          uint64_t v16 = sub_251EA7688;
          goto LABEL_18;
        }
      }
      sub_251EA8C84(*(void *)(v0 + 200), (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v8 = *(void *)(v0 + 232) + 1;
    }
    while (v8 != *(void *)(v0 + 216));
    swift_bridgeObjectRelease();
  }
  *(void *)(v0 + 296) = sub_251F35C80();
  *(void *)(v0 + 304) = sub_251F35C70();
  uint64_t v13 = sub_251F35C00();
  uint64_t v15 = v17;
  uint64_t v16 = sub_251EA7E14;
LABEL_18:
  return MEMORY[0x270FA2498](v16, v13, v15);
}

uint64_t sub_251EA7688()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251EA7720, 0, 0);
}

uint64_t sub_251EA7720()
{
  *(void *)(v0 + 256) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251EA77AC, v2, v1);
}

uint64_t sub_251EA77AC()
{
  swift_release();
  *(void *)(v0 + 264) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251EA7820, 0, 0);
}

uint64_t sub_251EA7820()
{
  *(void *)(v0 + 272) = sub_251F34D50();
  *(void *)(v0 + 280) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251EA78B8, v2, v1);
}

uint64_t sub_251EA78B8()
{
  uint64_t v1 = (void *)v0[34];
  uint64_t v2 = (void *)v0[33];
  swift_release();
  v0[36] = objc_msgSend(v2, sel_serviceFor_, v1);

  return MEMORY[0x270FA2498](sub_251EA7948, 0, 0);
}

uint64_t sub_251EA7948()
{
  uint64_t v1 = *(void **)(v0 + 288);
  if (v1)
  {
    uint64_t v2 = v0 + 16;
    uint64_t v3 = (void *)(v0 + 48);
    uint64_t v4 = (uint64_t *)(v0 + 112);
    BOOL v5 = StaticService.isActivated.getter();
    *(void *)(v0 + 40) = MEMORY[0x263F8D4F8];
    *(unsigned char *)(v0 + 16) = !v5;
    id v6 = objc_msgSend(v1, sel_uniqueIdentifier);
    uint64_t v7 = sub_251F34DA0();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = swift_task_alloc();
    sub_251F34D80();

    if (!*(void *)(*(void *)(v0 + 112) + 16) || (sub_2519FE584(v9), (v10 & 1) == 0))
    {
      uint64_t v11 = swift_task_alloc();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v11, v9, v7);
      unint64_t v12 = sub_2519FA2DC(MEMORY[0x263F8EE78]);
      uint64_t v13 = *v4;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v15 = v12;
      uint64_t v2 = v0 + 16;
      uint64_t v3 = (void *)(v0 + 48);
      sub_251A0BCE8(v15, v11, isUniquelyReferenced_nonNull_native);
      *uint64_t v4 = v13;
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v11, v7);
      swift_task_dealloc();
    }
    uint64_t v16 = swift_task_alloc();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v16, v9, v7);
    uint64_t v18 = sub_251AF1F44(v3);
    if (*v17)
    {
      uint64_t v19 = v17;
      unsigned int v35 = *(unsigned __int8 *)(v0 + 396);
      sub_251A0D51C(v2, v0 + 80);
      char v20 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v36 = *v19;
      *uint64_t v19 = 0x8000000000000000;
      sub_251A0D3B4((_OWORD *)(v0 + 80), v35, v20);
      *uint64_t v19 = v36;
      swift_bridgeObjectRelease();
    }
    ((void (*)(void *, void))v18)(v3, 0);
    uint64_t v21 = *(void **)(v0 + 288);
    uint64_t v22 = *(void *)(v0 + 200);
    unint64_t v23 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v23(v16, v7);
    swift_task_dealloc();
    v23(v9, v7);

    swift_task_dealloc();
    sub_251EA8C84(v22, (uint64_t (*)(void))type metadata accessor for StaticService);
    __swift_destroy_boxed_opaque_existential_0(v2);
  }
  else
  {
    sub_251EA8C84(*(void *)(v0 + 200), (uint64_t (*)(void))type metadata accessor for StaticService);
  }
  uint64_t v24 = *(void *)(v0 + 232) + 1;
  if (v24 == *(void *)(v0 + 216))
  {
LABEL_10:
    swift_bridgeObjectRelease();
    *(void *)(v0 + 296) = sub_251F35C80();
    *(void *)(v0 + 304) = sub_251F35C70();
    uint64_t v25 = sub_251F35C00();
    uint64_t v27 = v26;
    uint64_t v28 = sub_251EA7E14;
    goto LABEL_21;
  }
  while (1)
  {
    *(void *)(v0 + 232) = v24;
    uint64_t v29 = *(void *)(v0 + 200);
    uint64_t v30 = *(void *)(v0 + 184);
    sub_251AD2AE0(*(void *)(v0 + 208)+ ((*(unsigned __int8 *)(v0 + 392) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 392))+ *(void *)(v0 + 224) * v24, v29);
    unsigned int v31 = *(unsigned __int8 *)(v29 + *(int *)(v30 + 88));
    if (v31 > 0x30) {
      goto LABEL_12;
    }
    if (((1 << v31) & 0x1940001320008) != 0)
    {
      char v32 = 3;
      goto LABEL_20;
    }
    if (((1 << v31) & 0x20410010000) != 0) {
      break;
    }
    if (((1 << v31) & 0x4080000000) != 0)
    {
      char v32 = 84;
      goto LABEL_20;
    }
LABEL_12:
    sub_251EA8C84(*(void *)(v0 + 200), (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t v24 = *(void *)(v0 + 232) + 1;
    if (v24 == *(void *)(v0 + 216)) {
      goto LABEL_10;
    }
  }
  char v32 = 105;
LABEL_20:
  *(unsigned char *)(v0 + 396) = v32;
  *(void *)(v0 + 240) = sub_251F35C80();
  *(void *)(v0 + 248) = sub_251F35C70();
  uint64_t v25 = sub_251F35C00();
  uint64_t v27 = v33;
  uint64_t v28 = sub_251EA7688;
LABEL_21:
  return MEMORY[0x270FA2498](v28, v25, v27);
}

uint64_t sub_251EA7E14()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251EA7EAC, 0, 0);
}

uint64_t sub_251EA7EAC()
{
  *(void *)(v0 + 312) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251EA7F38, v2, v1);
}

uint64_t sub_251EA7F38()
{
  swift_release();
  *(void *)(v0 + 320) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251EA7FAC, 0, 0);
}

uint64_t sub_251EA7FAC(uint64_t (*a1)(), uint64_t a2, uint64_t a3)
{
  *(void *)(v3 + 136) = *(void *)(v3 + 112);
  uint64_t v4 = *(void *)(v3 + 128);
  *(unsigned char *)(v3 + 144) = *(unsigned char *)(v3 + 120);
  *(void *)(v3 + 152) = v4;
  uint64_t v5 = *(void *)(v3 + 208);
  if (*(void *)(v3 + 216))
  {
    if (!*(void *)(v5 + 16))
    {
      __break(1u);
      return MEMORY[0x270FA2498](a1, a2, a3);
    }
    uint64_t v7 = *(void *)(v3 + 184);
    uint64_t v6 = *(void *)(v3 + 192);
    uint64_t v8 = *(void *)(v3 + 176);
    sub_251AD2AE0(v5 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)), v8);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56))(v8, 0, 1, v7);
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v3 + 192) + 56))(*(void *)(v3 + 176), 1, 1, *(void *)(v3 + 184));
  }
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(v3 + 176);
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(*(void *)(v3 + 192) + 48))(v9, 1, *(void *)(v3 + 184)) != 1)
  {
    *(void *)(v3 + 328) = sub_251F35C70();
    uint64_t v13 = sub_251F35C00();
    uint64_t v15 = v14;
    a1 = sub_251EA81A4;
    a2 = v13;
    a3 = v15;
    return MEMORY[0x270FA2498](a1, a2, a3);
  }
  sub_251A1B064(v9, qword_26B21EE20);
  *(void *)(v3 + 376) = 0;
  char v10 = (void *)swift_task_alloc();
  *(void *)(v3 + 384) = v10;
  *char v10 = v3;
  v10[1] = sub_251EA8548;
  uint64_t v11 = *(void *)(v3 + 160);
  return DataModel.write(characteristicValueSet:home:)(v11, (uint64_t *)(v3 + 136), 0);
}

uint64_t sub_251EA81A4()
{
  swift_release();
  return MEMORY[0x270FA2498](sub_251EA820C, 0, 0);
}

uint64_t sub_251EA820C()
{
  *(void *)(v0 + 336) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251EA8298, v2, v1);
}

uint64_t sub_251EA8298()
{
  swift_release();
  *(void *)(v0 + 344) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251EA830C, 0, 0);
}

uint64_t sub_251EA830C()
{
  *(void *)(v0 + 352) = sub_251F34D50();
  *(void *)(v0 + 360) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251EA83A4, v2, v1);
}

uint64_t sub_251EA83A4()
{
  uint64_t v1 = (void *)v0[44];
  uint64_t v2 = (void *)v0[43];
  swift_release();
  v0[46] = objc_msgSend(v2, sel_serviceFor_, v1);

  return MEMORY[0x270FA2498](sub_251EA8434, 0, 0);
}

uint64_t sub_251EA8434()
{
  uint64_t v1 = (void *)v0[46];
  sub_251EA8C84(v0[22], (uint64_t (*)(void))type metadata accessor for StaticService);
  id v2 = objc_msgSend(v1, sel_accessory);

  id v3 = objc_msgSend(v2, sel_home);
  v0[47] = (uint64_t)v3;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[48] = (uint64_t)v4;
  *uint64_t v4 = v0;
  v4[1] = sub_251EA8548;
  uint64_t v5 = v0[20];
  return DataModel.write(characteristicValueSet:home:)(v5, v0 + 17, (uint64_t)v3);
}

uint64_t sub_251EA8548()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 376);
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_251EA8680, 0, 0);
}

uint64_t sub_251EA8680()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251EA86EC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v46 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9F460);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v42 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F240);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v43 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for StaticAccessory(0);
  uint64_t v44 = *(void *)(v7 - 8);
  uint64_t v45 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v40 - v14;
  uint64_t v16 = type metadata accessor for StaticService();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  char v20 = (char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v40 - v21;
  sub_251A1A4EC(a1, (uint64_t)v47);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF78);
  char v23 = swift_dynamicCast();
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
  if (v23)
  {
    v24(v15, 0, 1, v16);
    sub_251EA8F40((uint64_t)v15, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for StaticService);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F208);
    unint64_t v25 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    uint64_t v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_251F38650;
    uint64_t result = sub_251EA8F40((uint64_t)v22, v26 + v25, (uint64_t (*)(void))type metadata accessor for StaticService);
  }
  else
  {
    uint64_t v41 = v20;
    v24(v15, 1, 1, v16);
    sub_251A1B064((uint64_t)v15, qword_26B21EE20);
    sub_251A1A4EC(a1, (uint64_t)v47);
    uint64_t v28 = (uint64_t)v43;
    uint64_t v29 = v45;
    char v30 = swift_dynamicCast();
    unsigned int v31 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v44 + 56);
    if (v30)
    {
      v31(v28, 0, 1, v29);
      sub_251EA8F40(v28, (uint64_t)v9, type metadata accessor for StaticAccessory);
      StaticAccessory.primaryStaticService.getter((uint64_t)v13);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v13, 1, v16) != 1)
      {
        uint64_t v38 = (uint64_t)v41;
        sub_251EA8F40((uint64_t)v13, (uint64_t)v41, (uint64_t (*)(void))type metadata accessor for StaticService);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F208);
        unint64_t v39 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
        uint64_t v26 = swift_allocObject();
        *(_OWORD *)(v26 + 16) = xmmword_251F38650;
        sub_251EA8F40(v38, v26 + v39, (uint64_t (*)(void))type metadata accessor for StaticService);
        uint64_t result = sub_251EA8C84((uint64_t)v9, type metadata accessor for StaticAccessory);
        goto LABEL_12;
      }
      sub_251EA8C84((uint64_t)v9, type metadata accessor for StaticAccessory);
      char v32 = qword_26B21EE20;
      uint64_t v33 = (uint64_t)v13;
    }
    else
    {
      v31(v28, 1, 1, v29);
      char v32 = &qword_26B21F240;
      uint64_t v33 = v28;
    }
    sub_251A1B064(v33, v32);
    sub_251A1A4EC(a1, (uint64_t)v47);
    uint64_t v34 = type metadata accessor for StaticServiceGroup();
    uint64_t v35 = (uint64_t)v42;
    if (swift_dynamicCast())
    {
      uint64_t v36 = v35;
      uint64_t v37 = 0;
    }
    else
    {
      uint64_t v36 = v35;
      uint64_t v37 = 1;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v36, v37, 1, v34);
    uint64_t result = sub_251A1B064(v35, &qword_269B9F460);
    uint64_t v26 = MEMORY[0x263F8EE78];
  }
LABEL_12:
  uint64_t *v46 = v26;
  return result;
}

uint64_t sub_251EA8C84(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t dispatch thunk of TileInfoBearer.name.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of TileInfoBearer.dateAdded.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of TileInfoBearer.tileIcon.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of TileInfoBearer.foregroundColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of TileInfoBearer.isDoubleHigh.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of TileInfoBearer.serviceKinds.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of TileInfoBearer.primaryServiceKind.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of TileInfoBearer.displayAsServiceKind.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of TileInfoBearer.isFavorite.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t dispatch thunk of TileInfoBearer.shouldShowInDashboard.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 128))();
}

uint64_t dispatch thunk of TileInfoBearer.roomIds.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 136))();
}

uint64_t dispatch thunk of TileInfoBearer.roomName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 144))();
}

uint64_t dispatch thunk of TileInfoBearer.isActivated.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 152))();
}

uint64_t dispatch thunk of TileInfoBearer.canBeToggled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 160))();
}

uint64_t dispatch thunk of TileInfoBearer.isReachable.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 168))();
}

uint64_t dispatch thunk of TileInfoBearer.statusString.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 176))();
}

uint64_t dispatch thunk of TileInfoBearer.tileStatusString.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 184))();
}

uint64_t dispatch thunk of TileInfoBearer.toggle()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 192) + **(int **)(a3 + 192));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_251AB3A34;
  return v9(a1, a2, a3);
}

uint64_t sub_251EA8F40(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t HMService.isVisibleService.getter()
{
  id v1 = objc_msgSend(v0, sel_serviceType);
  uint64_t v2 = sub_251F356F0();
  uint64_t v4 = v3;

  v5._uint64_t countAndFlagsBits = v2;
  v5._object = v4;
  ServiceKind.init(rawValue:)(v5);
  unsigned int v6 = v19;
  if (v19 == 53) {
    unsigned int v6 = 0;
  }
  BOOL v7 = v6 > 0x32;
  unint64_t v8 = 0x1D3DCD33FC008uLL >> v6;
  if (qword_269B9C2E0 != -1) {
    swift_once();
  }
  char v9 = v7 | v8;
  uint64_t v10 = sub_251F350A0();
  __swift_project_value_buffer(v10, (uint64_t)qword_269BF30A8);
  id v11 = v0;
  uint64_t v12 = sub_251F35080();
  os_log_type_t v13 = sub_251F35FD0();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v15 = (void *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    uint64_t v19 = v18;
    *(_DWORD *)uint64_t v14 = 136315650;
    sub_251A00E84(0xD000000000000010, 0x8000000251F72EC0, &v19);
    sub_251F361D0();
    *(_WORD *)(v14 + 12) = 2112;
    id v16 = v11;
    sub_251F361D0();
    void *v15 = v11;

    *(_WORD *)(v14 + 22) = 1024;
    sub_251F361D0();
    _os_log_impl(&dword_2519F3000, v12, v13, "%s HMService:%@ isVisible:%{BOOL}d", (uint8_t *)v14, 0x1Cu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v15, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v18, -1, -1);
    MEMORY[0x2533AC760](v14, -1, -1);
  }
  else
  {
  }
  return v9 & 1;
}

uint64_t Collection<>.writable.getter(uint64_t a1)
{
  MEMORY[0x270FA5388](a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v1, a1);
  return sub_251F35940();
}

uint64_t sub_251EA9348(id *a1)
{
  id v1 = objc_msgSend(*a1, sel_properties);
  uint64_t v2 = sub_251F35AC0();

  uint64_t v8 = 0;
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = (uint64_t *)(v2 + 40);
    do
    {
      uint64_t v5 = *v4;
      v7[0] = *(v4 - 1);
      v7[1] = v5;
      sub_251BC227C(&v8, v7);
      v4 += 2;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease_n();
    return (v8 >> 2) & 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
}

uint64_t Collection<>.widgetBehavior.getter()
{
  if (sub_251F35EF0()) {
    char v0 = 1;
  }
  else {
    char v0 = sub_251F35900() ^ 1;
  }
  return v0 & 1;
}

uint64_t sub_251EA9484(id *a1)
{
  id v1 = *a1;
  id v2 = objc_msgSend(*a1, sel_accessory);
  if (!v2)
  {
    id v11 = objc_msgSend(v1, sel_serviceType);
    uint64_t v12 = sub_251F356F0();
    uint64_t v14 = v13;

    v15._uint64_t countAndFlagsBits = v12;
    v15._object = v14;
    ServiceKind.init(rawValue:)(v15);
    uint64_t v4 = v27;
    if (v27 <= 0x35u)
    {
      if (((1 << v27) & 0x1964491330008) != 0)
      {
        char v16 = 1;
        return v16 & 1;
      }
      if (v27 == 53) {
        uint64_t v4 = 0;
      }
    }
    if (qword_269B9C310 == -1) {
      goto LABEL_21;
    }
    goto LABEL_39;
  }
  uint64_t v3 = v2;
  uint64_t v4 = (uint64_t)objc_msgSend(v2, sel_services);
  sub_251B50D6C();
  unint64_t v5 = sub_251F35AC0();

  uint64_t v28 = MEMORY[0x263F8EE78];
  if (!(v5 >> 62))
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v6) {
      goto LABEL_4;
    }
LABEL_23:
    swift_bridgeObjectRelease();
    uint64_t v10 = MEMORY[0x263F8EE78];
    if ((MEMORY[0x263F8EE78] & 0x8000000000000000) != 0) {
      goto LABEL_37;
    }
    goto LABEL_24;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_251F366C0();
  swift_bridgeObjectRelease();
  if (!v6) {
    goto LABEL_23;
  }
LABEL_4:
  if (v6 < 1)
  {
    __break(1u);
LABEL_39:
    swift_once();
LABEL_21:
    swift_beginAccess();
    uint64_t v17 = off_269B9F948;
    swift_bridgeObjectRetain();
    char v16 = sub_251DB3C0C(v4, (uint64_t)v17);
LABEL_35:
    swift_bridgeObjectRelease();
    return v16 & 1;
  }
  for (uint64_t i = 0; i != v6; ++i)
  {
    if ((v5 & 0xC000000000000001) != 0) {
      id v8 = (id)MEMORY[0x2533AB3A0](i, v5);
    }
    else {
      id v8 = *(id *)(v5 + 8 * i + 32);
    }
    char v9 = v8;
    if (HMService.isVisibleService.getter())
    {
      sub_251F364F0();
      sub_251F36530();
      sub_251F36540();
      sub_251F36500();
    }
    else
    {
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = v28;
  if (v28 < 0) {
    goto LABEL_37;
  }
LABEL_24:
  if ((v10 & 0x4000000000000000) == 0)
  {
    uint64_t v18 = *(void *)(v10 + 16);
    goto LABEL_26;
  }
LABEL_37:
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_251F366C0();
  swift_release();
LABEL_26:
  swift_release();
  if ((HMAccessory.showAsIndividualTiles.getter() & 1) != 0 || v18 < 2)
  {
    id v19 = objc_msgSend(v1, sel_serviceType);
    uint64_t v20 = sub_251F356F0();
    uint64_t v22 = v21;

    v23._uint64_t countAndFlagsBits = v20;
    v23._object = v22;
    ServiceKind.init(rawValue:)(v23);
    uint64_t v24 = 0;
    switch((char)v28)
    {
      case 3:
      case 16:
      case 17:
      case 20:
      case 21:
      case 24:
      case 28:
      case 31:
      case 34:
      case 38:
      case 41:
      case 42:
      case 44:
      case 47:
      case 48:

        char v16 = 1;
        return v16 & 1;
      case 53:
        goto LABEL_32;
      default:
        uint64_t v24 = v28;
LABEL_32:
        if (qword_269B9C310 != -1) {
          swift_once();
        }
        swift_beginAccess();
        unint64_t v25 = off_269B9F948;
        swift_bridgeObjectRetain();
        char v16 = sub_251DB3C0C(v24, (uint64_t)v25);

        goto LABEL_35;
    }
  }

  char v16 = 0;
  return v16 & 1;
}

uint64_t dispatch thunk of CameraClipPlaybackManager.ContentProvider.minimumClipDate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of CameraClipPlaybackManager.ContentProvider.initialEventFetchLimit.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of CameraClipPlaybackManager.ContentProvider.defaultEventFetchLimit.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of CameraClipPlaybackManager.ContentProvider.fetchTimelineEvents(dateInterval:limit:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  os_log_type_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 32) + **(int **)(a5 + 32));
  id v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  void *v11 = v5;
  v11[1] = sub_251AB3A34;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of CameraClipPlaybackManager.ContentProvider.generateInitialPosterFrames(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 40) + **(int **)(a3 + 40));
  BOOL v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_251EA9DAC;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of CameraClipPlaybackManager.ContentProvider.downloadAndUpdateFullAsset(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 48) + **(int **)(a3 + 48));
  BOOL v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_251EA9DAC;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of CameraClipPlaybackManager.ContentProvider.fetchSignificantEvents(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 56) + **(int **)(a3 + 56));
  BOOL v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_251AD8F68;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of CameraClipPlaybackManager.ContentProvider.purgeExpiredCacheEntries()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t _s17PlatformUtilitiesCMa()
{
  return self;
}

void static StaticAccessory.SpecialMediaCategory.siriEndpoint(from:)(void *a1@<X0>, __int16 *a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_siriEndpointProfile);
  if (v4)
  {
    uint64_t v5 = v4;
    id v6 = objc_msgSend(a1, sel_category);
    id v7 = objc_msgSend(v6, sel_categoryType);

    uint64_t v8 = sub_251F356F0();
    uint64_t v10 = v9;

    if (sub_251F356F0() != v8 || v11 != v10)
    {
      char v13 = sub_251F36B10();
      swift_bridgeObjectRelease();
      if (v13)
      {
LABEL_7:
        swift_bridgeObjectRelease();
LABEL_12:
        __int16 v16 = 16640;
LABEL_13:
        unsigned __int16 v17 = (unsigned __int16)objc_msgSend(v5, sel_supportsOnboarding);

        __int16 v14 = v16 | v17;
        goto LABEL_14;
      }
      if (sub_251F356F0() != v8 || v15 != v10)
      {
        char v18 = sub_251F36B10();
        swift_bridgeObjectRelease();
        if (v18) {
          goto LABEL_7;
        }
        if (sub_251F356F0() != v8 || v19 != v10)
        {
          char v20 = sub_251F36B10();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v20) {
            __int16 v16 = 16640;
          }
          else {
            __int16 v16 = 0x4000;
          }
          goto LABEL_13;
        }
      }
    }
    swift_bridgeObjectRelease_n();
    goto LABEL_12;
  }
  __int16 v14 = -260;
LABEL_14:
  *a2 = v14;
}

id static StaticAccessory.HomePodTypes.homePodType(from:)@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  id result = objc_msgSend(a1, sel_homePodVariant);
  if ((unint64_t)result >= 4) {
    char v4 = 1;
  }
  else {
    char v4 = (char)result;
  }
  *a2 = v4;
  return result;
}

uint64_t TemperatureStringIcon.text.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TemperatureStringIcon.textColor.getter()
{
  return swift_retain();
}

uint64_t sub_251EAA014(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + *(int *)(type metadata accessor for ActionService() + 60));
  uint64_t v10 = v1;
  unsigned __int8 v9 = -94;
  *(double *)&uint64_t result = COERCE_DOUBLE(sub_251B46610(&v9));
  if (v3)
  {
    uint64_t v10 = v1;
    unsigned __int8 v9 = 55;
    uint64_t v4 = sub_251B46610(&v9);
    if ((v5 & 1) != 0
      || (double v6 = *(double *)&v4, v10 = v1, v9 = 29, v7 = COERCE_DOUBLE(sub_251B46610(&v9)), (v8 & 1) != 0))
    {
      *(double *)&uint64_t result = 0.0;
    }
    else
    {
      *(double *)&uint64_t result = (v6 + v7) * 0.5;
    }
  }
  return result;
}

uint64_t sub_251EAA0DC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + *(int *)(type metadata accessor for ActionService() + 60));
  uint64_t v7 = v2;
  unsigned __int8 v6 = -105;
  Swift::Int_optional v8 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v6);
  if (v8.is_nil) {
    return 0;
  }
  Swift::Int value = v8.value;
  uint64_t result = sub_251EAA188(a1);
  if (value == 2)
  {
    uint64_t v7 = v2;
    unsigned __int8 v5 = 29;
  }
  else
  {
    if (value != 1) {
      return result;
    }
    uint64_t v7 = v2;
    unsigned __int8 v5 = 55;
  }
  unsigned __int8 v6 = v5;
  return sub_251B46610(&v6);
}

uint64_t sub_251EAA188(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F108);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(a1 + *(int *)(type metadata accessor for ActionService() + 60));
  uint64_t v27 = v5;
  HIBYTE(v26) = 55;
  uint64_t v6 = sub_251B46610((unsigned __int8 *)&v26 + 7);
  if ((v7 & 1) != 0 || (uint64_t v8 = v6, v27 = v5, HIBYTE(v26) = 29, sub_251B46610((unsigned __int8 *)&v26 + 7), (v9 & 1) == 0))
  {
    uint64_t v27 = v5;
    HIBYTE(v26) = 29;
    uint64_t v10 = sub_251B46610((unsigned __int8 *)&v26 + 7);
    if ((v11 & 1) != 0
      || (uint64_t v8 = v10, v27 = v5, HIBYTE(v26) = 55, sub_251B46610((unsigned __int8 *)&v26 + 7), (v12 & 1) == 0))
    {
      if (!*(void *)(v5 + 16))
      {
        uint64_t v19 = type metadata accessor for StaticCharacteristic();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v4, 1, 1, v19);
LABEL_12:
        sub_251EAB0B4((uint64_t)v4);
        return 0;
      }
      swift_bridgeObjectRetain();
      unint64_t v13 = sub_2519FE568(55);
      if (v14)
      {
        unint64_t v15 = v13;
        uint64_t v16 = *(void *)(v5 + 56);
        uint64_t v17 = type metadata accessor for StaticCharacteristic();
        uint64_t v18 = *(void *)(v17 - 8);
        sub_251BB1974(v16 + *(void *)(v18 + 72) * v15, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v4, 0, 1, v17);
      }
      else
      {
        uint64_t v17 = type metadata accessor for StaticCharacteristic();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v4, 1, 1, v17);
      }
      swift_bridgeObjectRelease();
      type metadata accessor for StaticCharacteristic();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v4, 1, v17) == 1) {
        goto LABEL_12;
      }
      uint64_t v21 = (uint64_t *)&v4[*(int *)(v17 + 44)];
      uint64_t v23 = *v21;
      uint64_t v22 = v21[1];
      uint64_t v24 = v21[2];
      unint64_t v25 = v21[3];
      sub_251A11E3C(*v21, v22, v24, v25);
      sub_251D8DB20((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
      if (v25 >> 8 == 0xFFFFFFFF) {
        return 0;
      }
      sub_251A11E60(v23, v22, v24, v25);
      if ((v25 & 0xC000000000000000) == 0x4000000000000000) {
        return v22;
      }
      else {
        return 0;
      }
    }
  }
  return v8;
}

uint64_t static TemperatureStringIcon.== infix(_:_:)(void *a1, void *a2)
{
  BOOL v2 = *a1 == *a2 && a1[1] == a2[1];
  if (v2 || (sub_251F36B10() & 1) != 0) {
    return sub_251F352E0() & 1;
  }
  else {
    return 0;
  }
}

uint64_t TemperatureStringIcon.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  swift_retain();
  sub_251F35330();
  return swift_release();
}

uint64_t TemperatureStringIcon.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t sub_251EAA5F8(void *a1, void *a2)
{
  BOOL v2 = *a1 == *a2 && a1[1] == a2[1];
  if (v2 || (sub_251F36B10() & 1) != 0) {
    return sub_251F352E0() & 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_251EAA65C()
{
  return sub_251F36D00();
}

uint64_t sub_251EAA6C0()
{
  return sub_251F35330();
}

uint64_t sub_251EAA6F8()
{
  return sub_251F36D00();
}

uint64_t sub_251EAA758(uint64_t a1)
{
  type metadata accessor for ActionService();
  if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v2 == 0x8000000251F65100)
  {
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  char v3 = sub_251F36B10();
  swift_bridgeObjectRelease();
  if (v3)
  {
LABEL_5:
    uint64_t v4 = sub_251EAA014(a1);
    if ((v5 & 1) == 0) {
      return static ClimateSummarizer.temperatureAverageString(_:)(*(double *)&v4);
    }
    return static String.hfLocalized(_:)(0xD00000000000001FLL, 0x8000000251F72F20);
  }
  if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v7 == 0x8000000251F64C20)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v8 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if ((v8 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v4 = sub_251EAA0DC(a1);
  if ((v9 & 1) == 0) {
    return static ClimateSummarizer.temperatureAverageString(_:)(*(double *)&v4);
  }
  return static String.hfLocalized(_:)(0xD00000000000001FLL, 0x8000000251F72F20);
}

uint64_t sub_251EAA8C0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ActionService();
  char v3 = *(unsigned char *)(a1 + *(int *)(v2 + 44));
  LOBYTE(v13) = v3;
  if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v4 == 0x8000000251F65100)
  {
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  char v5 = sub_251F36B10();
  swift_bridgeObjectRelease();
  if (v5)
  {
LABEL_5:
    uint64_t v13 = *(void *)(a1 + *(int *)(v2 + 60));
    unsigned __int8 v12 = -104;
    Swift::Int_optional v14 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v12);
    if (!v14.is_nil)
    {
      switch(v14.value)
      {
        case 0:
          return sub_251F35320();
        case 1:
          return sub_251F35390();
        case 2:
          return sub_251F35310();
        case 3:
          return sub_251F35360();
        default:
          return 0;
      }
    }
    return 0;
  }
  LOBYTE(v13) = v3;
  if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v7 == 0x8000000251F64C20)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v8 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if ((v8 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v9 = *(void *)(a1 + *(int *)(v2 + 60));
  uint64_t v13 = v9;
  unsigned __int8 v12 = -105;
  Swift::Int_optional v15 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v12);
  if (!v15.is_nil)
  {
    Swift::Int value = v15.value;
    uint64_t v13 = v9;
    unsigned __int8 v12 = 3;
    char v11 = sub_251B457DC(&v12);
    if (v11 != 2)
    {
      if ((v11 & 1) == 0) {
        return sub_251F35320();
      }
      switch(value)
      {
        case 2:
          return sub_251F35310();
        case 1:
          return sub_251F35390();
        case 0:
          return sub_251F35360();
      }
    }
  }
  return 0;
}

uint64_t _s13HomeDataModel21TemperatureStringIconV4text4withSSSgAA13StaticServiceV_tFZ_0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StaticService();
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  char v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v17 = *(unsigned char *)(a1 + *(int *)(v3 + 88));
  if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v6 == 0x8000000251F65100)
  {
    swift_bridgeObjectRelease();
    sub_251BB1974(a1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticService);
LABEL_8:
    sub_251D8DB20((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticService);
    goto LABEL_9;
  }
  char v7 = sub_251F36B10();
  swift_bridgeObjectRelease();
  sub_251BB1974(a1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticService);
  if (v7) {
    goto LABEL_8;
  }
  char v16 = v5[*(int *)(v2 + 88)];
  if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v8 == 0x8000000251F64C20)
  {
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  char v12 = sub_251F36B10();
  swift_bridgeObjectRelease();
  sub_251D8DB20((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticService);
  if ((v12 & 1) == 0) {
    return 0;
  }
LABEL_9:
  uint64_t v15 = *(void *)(a1 + *(int *)(v2 + 112));
  unsigned __int8 v14 = 44;
  uint64_t v9 = sub_251B46610(&v14);
  if (v10) {
    return static String.hfLocalized(_:)(0xD00000000000001FLL, 0x8000000251F72F20);
  }
  else {
    return static ClimateSummarizer.temperatureAverageString(_:)(*(double *)&v9);
  }
}

uint64_t _s13HomeDataModel21TemperatureStringIconV9textColor4with7SwiftUI0H0VSgAA13StaticServiceV_tFZ_0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StaticService();
  char v3 = *(unsigned char *)(a1 + *(int *)(v2 + 88));
  LOBYTE(v15) = v3;
  if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v4 == 0x8000000251F65100)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v5 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if ((v5 & 1) == 0) {
      goto LABEL_12;
    }
  }
  uint64_t v6 = *(void *)(a1 + *(int *)(v2 + 112));
  uint64_t v15 = v6;
  unsigned __int8 v14 = -104;
  Swift::Int_optional v16 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v14);
  if (!v16.is_nil)
  {
    Swift::Int value = v16.value;
    uint64_t v15 = v6;
    unsigned __int8 v14 = 34;
    Swift::Int_optional v17 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v14);
    if (!v17.is_nil)
    {
      if (v17.value != 2)
      {
        if (v17.value != 1)
        {
          if (!v17.value)
          {
            if (!value) {
              return sub_251F35370();
            }
            return sub_251F35360();
          }
          return 0;
        }
        if (value) {
          return sub_251F35390();
        }
        return sub_251F35370();
      }
      if (!value) {
        return sub_251F35370();
      }
      return sub_251F35310();
    }
  }
LABEL_12:
  LOBYTE(v15) = v3;
  if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v8 == 0x8000000251F64C20)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v9 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if ((v9 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v10 = *(void *)(a1 + *(int *)(v2 + 112));
  uint64_t v15 = v10;
  unsigned __int8 v14 = 3;
  char v11 = sub_251B457DC(&v14);
  if (v11 == 2) {
    return 0;
  }
  char v12 = v11;
  uint64_t v15 = v10;
  unsigned __int8 v14 = 33;
  Swift::Int_optional v18 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v14);
  if (v18.is_nil) {
    return 0;
  }
  if ((v12 & 1) == 0) {
    return sub_251F35370();
  }
  if (v18.value < 2uLL) {
    return sub_251F35360();
  }
  if (v18.value != 2)
  {
    if (v18.value != 3) {
      return 0;
    }
    return sub_251F35310();
  }
  return sub_251F35390();
}

unint64_t sub_251EAAF20()
{
  unint64_t result = qword_269BA5078;
  if (!qword_269BA5078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5078);
  }
  return result;
}

uint64_t destroy for TemperatureStringIcon()
{
  swift_bridgeObjectRelease();
  return swift_release();
}

void *_s13HomeDataModel21TemperatureStringIconVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *assignWithCopy for TemperatureStringIcon(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for TemperatureStringIcon(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for TemperatureStringIcon()
{
  return &type metadata for TemperatureStringIcon;
}

uint64_t sub_251EAB0B4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F108);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t Color.init(_:)(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    if (*(void *)(result + 16)
      && (unint64_t v2 = sub_2519FE798(114, 0xE100000000000000), (v3 & 1) != 0)
      && *(void *)(v1 + 16)
      && (double v4 = *(double *)(*(void *)(v1 + 56) + 8 * v2), v5 = sub_2519FE798(103, 0xE100000000000000),
                                                           (v6 & 1) != 0)
      && *(void *)(v1 + 16)
      && (v7 = *(double *)(*(void *)(v1 + 56) + 8 * v5), unint64_t v8 = sub_2519FE798(98, 0xE100000000000000), (v9 & 1) != 0))
    {
      double v10 = *(double *)(*(void *)(v1 + 56) + 8 * v8);
      swift_bridgeObjectRelease();
      uint64_t v11 = sub_251F352D0();
      MEMORY[0x270FA5388](v11);
      uint64_t v13 = (char *)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, void))(v14 + 104))(v13, *MEMORY[0x263F1B380]);
      return MEMORY[0x2533AA330](v13, v4, v7, v10, 1.0);
    }
    else
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  return result;
}

unint64_t Color.colorDictionary.getter()
{
  uint64_t v0 = sub_251F35210();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  char v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F35200();
  sub_251F353B0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269BA2970);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_251F3DAB0;
  *(void *)(inited + 32) = 114;
  *(void *)(inited + 40) = 0xE100000000000000;
  sub_251F353C0();
  *(double *)(inited + 48) = v5;
  *(void *)(inited + 56) = 103;
  *(void *)(inited + 64) = 0xE100000000000000;
  sub_251F353E0();
  *(double *)(inited + 72) = v6;
  *(void *)(inited + 80) = 98;
  *(void *)(inited + 88) = 0xE100000000000000;
  sub_251F353D0();
  *(double *)(inited + 96) = v7;
  return sub_2519FBC6C(inited);
}

void *Color.init(from:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA5088);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  float v6 = &v26[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  float v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251EACCF4();
  sub_251F36D90();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    v26[15] = 0;
    double v8 = COERCE_DOUBLE(sub_251F367B0());
    double v10 = 1.0;
    if (v9) {
      double v11 = 1.0;
    }
    else {
      double v11 = v8;
    }
    v26[14] = 1;
    double v12 = COERCE_DOUBLE(sub_251F367B0());
    if ((v13 & 1) == 0) {
      double v10 = v12;
    }
    v26[13] = 2;
    double v14 = COERCE_DOUBLE(sub_251F367B0());
    char v16 = v15;
    v26[12] = 3;
    double v17 = COERCE_DOUBLE(sub_251F367B0());
    if (v16) {
      double v20 = 1.0;
    }
    else {
      double v20 = v14;
    }
    if (v18) {
      double v21 = 1.0;
    }
    else {
      double v21 = v17;
    }
    uint64_t v22 = sub_251F352D0();
    MEMORY[0x270FA5388](v22);
    uint64_t v24 = &v26[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
    (*(void (**)(unsigned char *, void))(v25 + 104))(v24, *MEMORY[0x263F1B380]);
    float v7 = (void *)MEMORY[0x2533AA330](v24, v11, v10, v20, v21);
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  return v7;
}

uint64_t Color.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(qword_269BA5098);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  float v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251EACCF4();
  sub_251F36DA0();
  uint64_t v7 = sub_251F35210();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  double v10 = &v12[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_251F35200();
  sub_251F353B0();
  (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
  sub_251F353C0();
  v12[15] = 0;
  v12[12] = 0;
  sub_251F36940();
  if (!v1)
  {
    sub_251F353E0();
    v12[11] = 1;
    v12[8] = 0;
    sub_251F36940();
    sub_251F353D0();
    v12[7] = 2;
    void v12[4] = 0;
    sub_251F36940();
    v12[3] = 3;
    v12[0] = 0;
    sub_251F36940();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_251EAB9D8()
{
  uint64_t result = 6579570;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6E65657267;
      break;
    case 2:
      uint64_t result = 1702194274;
      break;
    case 3:
      uint64_t result = 0x7974696361706FLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_251EABA54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251EADC0C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251EABA7C(uint64_t a1)
{
  unint64_t v2 = sub_251EACCF4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251EABAB8(uint64_t a1)
{
  unint64_t v2 = sub_251EACCF4();
  return MEMORY[0x270FA00B8](a1, v2);
}

void *sub_251EABAF4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = Color.init(from:)(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_251EABB20(void *a1)
{
  return Color.encode(to:)(a1);
}

uint64_t sub_251EABB3C()
{
  uint64_t result = sub_251F35390();
  qword_269BA5080 = result;
  return result;
}

uint64_t static Color.homeAccentColor.getter()
{
  if (qword_269B9C508 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_retain();
}

uint64_t static Color.homeAccentColor.setter(uint64_t a1)
{
  if (qword_269B9C508 != -1) {
    swift_once();
  }
  swift_beginAccess();
  qword_269BA5080 = a1;
  return swift_release();
}

uint64_t (*static Color.homeAccentColor.modify())()
{
  if (qword_269B9C508 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t Color.resolve(for:)(uint64_t a1)
{
  uint64_t v2 = sub_251F35210();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F35200();
  uint64_t v6 = sub_251F351B0();
  MEMORY[0x270FA5388](v6);
  (*(void (**)(char *, uint64_t))(v8 + 16))((char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  sub_251F351F0();
  sub_251F353B0();
  uint64_t v9 = sub_251F35400();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v9;
}

uint64_t DynamicColor.init(light:dark:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32);
  v9(a3 - 8, a4, a1);
  uint64_t v7 = a4 + *(int *)(type metadata accessor for DynamicColor() + 36);
  return v9(v7, a2, a3);
}

uint64_t DynamicColor.resolve(in:)()
{
  uint64_t v0 = sub_251F351B0();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = *(void *)(v1 + 64);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = sub_251F351E0();
  MEMORY[0x270FA5388](v3);
  uint64_t v4 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v4, *MEMORY[0x263F18510], v0);
  sub_251F351A0();
  uint64_t v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v4, v0);
  v5(v4, v0);
  return sub_251F35160();
}

uint64_t sub_251EAC080()
{
  return sub_251F35190();
}

uint64_t sub_251EAC0AC()
{
  return sub_251F35170();
}

uint64_t sub_251EAC0C4()
{
  return sub_251F35180();
}

uint64_t OnOffColor.on.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_251A1A4EC(v1, a1);
}

uint64_t OnOffColor.on.setter(long long *a1)
{
  __swift_destroy_boxed_opaque_existential_0(v1);
  return sub_251A1A444(a1, v1);
}

uint64_t (*OnOffColor.on.modify())()
{
  return nullsub_1;
}

uint64_t OnOffColor.off.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_251A1A4EC(v1 + 40, a1);
}

uint64_t OnOffColor.off.setter(long long *a1)
{
  uint64_t v3 = v1 + 40;
  __swift_destroy_boxed_opaque_existential_0(v3);
  return sub_251A1A444(a1, v3);
}

uint64_t (*OnOffColor.off.modify())()
{
  return nullsub_1;
}

uint64_t OnOffColor.init(on:off:)@<X0>(long long *a1@<X0>, long long *a2@<X1>, uint64_t a3@<X8>)
{
  sub_251A1A444(a1, a3);
  return sub_251A1A444(a2, a3 + 40);
}

uint64_t OnOffColor.init<A, B>(onLight:onDark:offLight:offDark:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v12 = type metadata accessor for DynamicColor();
  a7[3] = v12;
  a7[4] = swift_getWitnessTable();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a7);
  double v14 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32);
  v14(boxed_opaque_existential_1, a1, a5);
  v14((uint64_t *)((char *)boxed_opaque_existential_1 + *(int *)(v12 + 36)), a2, a5);
  uint64_t v15 = type metadata accessor for DynamicColor();
  a7[8] = v15;
  a7[9] = swift_getWitnessTable();
  char v16 = __swift_allocate_boxed_opaque_existential_1(a7 + 5);
  double v21 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32);
  v21(v16, a3, a6);
  double v17 = (char *)v16 + *(int *)(v15 + 36);
  return ((uint64_t (*)(char *, uint64_t, uint64_t))v21)(v17, a4, a6);
}

uint64_t OnOffColor.init<A>(on:offLight:offDark:)@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  sub_251A1A444(a1, (uint64_t)a5);
  uint64_t v9 = type metadata accessor for DynamicColor();
  a5[8] = v9;
  a5[9] = swift_getWitnessTable();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a5 + 5);
  char v13 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32);
  v13(boxed_opaque_existential_1, a2, a4);
  uint64_t v11 = (char *)boxed_opaque_existential_1 + *(int *)(v9 + 36);
  return ((uint64_t (*)(char *, uint64_t, uint64_t))v13)(v11, a3, a4);
}

uint64_t OnOffColor.init<A>(onLight:onDark:off:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v10 = type metadata accessor for DynamicColor();
  a5[3] = v10;
  a5[4] = swift_getWitnessTable();
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(a5);
  uint64_t v12 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32);
  v12(boxed_opaque_existential_1, a1, a4);
  v12((uint64_t *)((char *)boxed_opaque_existential_1 + *(int *)(v10 + 36)), a2, a4);
  return sub_251A1A444(a3, (uint64_t)(a5 + 5));
}

uint64_t OnOffColor.resolve(for:)@<X0>(char a1@<W0>, uint64_t *a2@<X8>)
{
  if (a1) {
    uint64_t v4 = __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  }
  else {
    uint64_t v4 = __swift_project_boxed_opaque_existential_1(v2 + 5, v2[8]);
  }
  MEMORY[0x270FA5388](v4);
  (*(void (**)(char *))(v6 + 16))((char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = sub_251F351C0();
  *a2 = result;
  return result;
}

uint64_t static ShapeStyle<>.dynamic<A>(light:dark:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = *(void *)(a3 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](a1);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v17 - v11;
  char v13 = *(void (**)(char *))(v7 + 16);
  v13((char *)&v17 - v11);
  ((void (*)(char *, uint64_t, uint64_t))v13)(v10, a2, a3);
  double v14 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 32);
  v14(a4, v12, a3);
  uint64_t v15 = type metadata accessor for DynamicColor();
  return ((uint64_t (*)(uint64_t, char *, uint64_t))v14)(a4 + *(int *)(v15 + 36), v10, a3);
}

uint64_t View.foregroundStyle(_:isOn:)(void *a1, char a2)
{
  if (a2)
  {
    uint64_t v2 = a1[3];
  }
  else
  {
    uint64_t v2 = a1[8];
    a1 += 5;
  }
  uint64_t v3 = __swift_project_boxed_opaque_existential_1(a1, v2);
  MEMORY[0x270FA5388](v3);
  (*(void (**)(char *))(v5 + 16))((char *)v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7[1] = sub_251F351C0();
  sub_251F352C0();
  return swift_release();
}

uint64_t View.background(_:isOn:)(void *a1, char a2)
{
  if (a2)
  {
    uint64_t v2 = a1[3];
  }
  else
  {
    uint64_t v2 = a1[8];
    a1 += 5;
  }
  uint64_t v3 = __swift_project_boxed_opaque_existential_1(a1, v2);
  MEMORY[0x270FA5388](v3);
  (*(void (**)(char *))(v5 + 16))((char *)v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7[1] = sub_251F351C0();
  sub_251F35290();
  sub_251F352A0();
  return swift_release();
}

uint64_t View.background<A>(_:in:isOn:fillStyle:)(void *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v11[1] = a7;
  if (a3) {
    uint64_t v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  }
  else {
    uint64_t v7 = __swift_project_boxed_opaque_existential_1(a1 + 5, a1[8]);
  }
  MEMORY[0x270FA5388](v7);
  (*(void (**)(char *))(v9 + 16))((char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11[3] = sub_251F351C0();
  sub_251F352B0();
  return swift_release();
}

unint64_t sub_251EACCF4()
{
  unint64_t result = qword_269BA5090;
  if (!qword_269BA5090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5090);
  }
  return result;
}

uint64_t type metadata accessor for DynamicColor()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_251EACD60()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_251EACDA4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_251EACE34(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = *(_DWORD *)(v6 + 80);
  uint64_t v9 = ~v8;
  uint64_t v10 = v7 + v8;
  unint64_t v11 = ((v7 + v8) & ~v8) + v7;
  if (v8 > 7 || (*(_DWORD *)(v6 + 80) & 0x100000) != 0 || v11 > 0x18)
  {
    uint64_t v14 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v14 + ((v8 + 16) & v9));
    swift_retain();
  }
  else
  {
    uint64_t v15 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16);
    v15(a1, a2, v5);
    v15((uint64_t *)(((unint64_t)v4 + v10) & v9), (uint64_t *)(((unint64_t)a2 + v10) & v9), v5);
  }
  return v4;
}

uint64_t sub_251EACF40(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(v3 - 8) + 8;
  uint64_t v7 = *(uint64_t (**)(unint64_t, uint64_t))v6;
  (*(void (**)(uint64_t, uint64_t))v6)(a1, v3);
  unint64_t v4 = (*(void *)(v6 + 56) + a1 + *(unsigned __int8 *)(v6 + 72)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 72);
  return v7(v4, v3);
}

unint64_t sub_251EACFDC(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16);
  uint64_t v8 = v6 + 16;
  v7(a1, a2, v5);
  v7((*(void *)(v8 + 48) + *(unsigned __int8 *)(v8 + 64) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 64), (*(void *)(v8 + 48) + *(unsigned __int8 *)(v8 + 64) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 64), v5);
  return a1;
}

unint64_t sub_251EAD070(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 24);
  uint64_t v8 = v6 + 24;
  v7(a1, a2, v5);
  v7((*(void *)(v8 + 40) + *(unsigned __int8 *)(v8 + 56) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 56), (*(void *)(v8 + 40) + *(unsigned __int8 *)(v8 + 56) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 56), v5);
  return a1;
}

unint64_t sub_251EAD104(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 32);
  uint64_t v8 = v6 + 32;
  v7(a1, a2, v5);
  v7((*(void *)(v8 + 32) + *(unsigned __int8 *)(v8 + 48) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 48), (*(void *)(v8 + 32) + *(unsigned __int8 *)(v8 + 48) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 48), v5);
  return a1;
}

unint64_t sub_251EAD198(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 40);
  uint64_t v8 = v6 + 40;
  v7(a1, a2, v5);
  v7((*(void *)(v8 + 24) + *(unsigned __int8 *)(v8 + 40) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 40), (*(void *)(v8 + 24) + *(unsigned __int8 *)(v8 + 40) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 40), v5);
  return a1;
}

uint64_t sub_251EAD22C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  uint64_t v6 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  uint64_t v8 = ((v6 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)) + v6;
  char v9 = 8 * v8;
  if (v8 <= 3)
  {
    unsigned int v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      int v10 = *(_DWORD *)((char *)a1 + v8);
      if (!v10) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      int v10 = *(unsigned __int16 *)((char *)a1 + v8);
      if (!*(unsigned __int16 *)((char *)a1 + v8)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v10 = *((unsigned __int8 *)a1 + v8);
  if (!*((unsigned char *)a1 + v8)) {
    goto LABEL_19;
  }
LABEL_11:
  int v12 = (v10 - 1) << v9;
  if (v8 > 3) {
    int v12 = 0;
  }
  if (v8)
  {
    if (v8 > 3) {
      LODWORD(v8) = 4;
    }
    switch((int)v8)
    {
      case 2:
        LODWORD(v8) = *a1;
        break;
      case 3:
        LODWORD(v8) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v8) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v8) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v8 | v12) + 1;
}

void sub_251EAD398(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = ((*(void *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x251EAD5C0);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        char v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t destroy for OnOffColor(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_0(a1);
  return __swift_destroy_boxed_opaque_existential_0(a1 + 40);
}

uint64_t initializeWithCopy for OnOffColor(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1 + 40, a2 + 40);
  return a1;
}

uint64_t *assignWithCopy for OnOffColor(uint64_t *a1, uint64_t *a2)
{
  return a1;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for OnOffColor(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  __swift_destroy_boxed_opaque_existential_0(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for OnOffColor(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OnOffColor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OnOffColor()
{
  return &type metadata for OnOffColor;
}

uint64_t sub_251EAD828()
{
  swift_getAssociatedTypeWitness();
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_251EAD89C()
{
  return MEMORY[0x263F18890];
}

uint64_t sub_251EAD8A8(uint64_t a1)
{
  return get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyxAA24_ForegroundStyleModifierVyAA08AnyShapeG0VGGAaBHPxAaBHD1__AiA0cH0HPyHCHCTm(a1, &qword_269BA5120, &qword_269BA5128);
}

uint64_t sub_251EAD8C4(uint64_t a1)
{
  return get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyxAA24_ForegroundStyleModifierVyAA08AnyShapeG0VGGAaBHPxAaBHD1__AiA0cH0HPyHCHCTm(a1, &qword_269BA5130, &qword_269BA5138);
}

uint64_t get_witness_table_7SwiftUI4ViewRzlAA15ModifiedContentVyxAA24_ForegroundStyleModifierVyAA08AnyShapeG0VGGAaBHPxAaBHD1__AiA0cH0HPyHCHCTm(uint64_t a1, uint64_t *a2, unint64_t *a3)
{
  return swift_getWitnessTable();
}

uint64_t sub_251EAD968()
{
  return swift_getWitnessTable();
}

unsigned char *_s9ColorKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251EADACCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *_s9ColorKeysOMa()
{
  return &_s9ColorKeysON;
}

unint64_t sub_251EADB08()
{
  unint64_t result = qword_269BA5140;
  if (!qword_269BA5140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5140);
  }
  return result;
}

unint64_t sub_251EADB60()
{
  unint64_t result = qword_269BA5148;
  if (!qword_269BA5148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5148);
  }
  return result;
}

unint64_t sub_251EADBB8()
{
  unint64_t result = qword_269BA5150;
  if (!qword_269BA5150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5150);
  }
  return result;
}

uint64_t sub_251EADC0C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 6579570 && a2 == 0xE300000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E65657267 && a2 == 0xE500000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1702194274 && a2 == 0xE400000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7974696361706FLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_251EADDA0()
{
  return sub_251F36D00();
}

uint64_t sub_251EADE74()
{
  return sub_251F36D00();
}

uint64_t sub_251EADF6C()
{
  return sub_251F36D00();
}

uint64_t sub_251EADFF4()
{
  return sub_251F36D00();
}

uint64_t sub_251EAE104()
{
  return sub_251F36D00();
}

uint64_t sub_251EAE188()
{
  return sub_251F36D00();
}

uint64_t sub_251EAE2DC()
{
  return sub_251F36D00();
}

uint64_t sub_251EAE3D0()
{
  return sub_251F36D00();
}

uint64_t sub_251EAE504()
{
  return sub_251F36D00();
}

uint64_t sub_251EAE604()
{
  return sub_251F36D00();
}

uint64_t sub_251EAE73C()
{
  return sub_251F36D00();
}

void HMApplicationData.isDoubleHigh.setter(char a1)
{
  if (a1 != 2)
  {
    id v2 = objc_msgSend(v1, sel_applicationData);
    int v3 = (void *)sub_251F356C0();
    unsigned int v4 = (void *)sub_251F356C0();
    objc_msgSend(v2, sel_setObject_forKeyedSubscript_, v3, v4);

    swift_bridgeObjectRelease();
    id v5 = objc_msgSend(v1, sel_applicationData);
    v7[4] = sub_251EAED08;
    v7[5] = 0;
    v7[0] = MEMORY[0x263EF8330];
    v7[1] = 1107296256;
    void v7[2] = sub_251C97A44;
    v7[3] = &block_descriptor_43;
    char v6 = _Block_copy(v7);
    objc_msgSend(v1, sel_updateApplicationData_completionHandler_, v5, v6);
    _Block_release(v6);
  }
}

uint64_t HMApplicationData.isDoubleHigh.getter()
{
  id v1 = objc_msgSend(v0, sel_applicationData);
  id v2 = (void *)sub_251F356C0();
  id v3 = objc_msgSend(v1, sel_objectForKeyedSubscript_, v2);

  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB50);
    swift_dynamicCast();
  }
  uint64_t v4 = sub_251F36750();
  swift_bridgeObjectRelease();
  if (v4 == 1) {
    unsigned int v5 = 1;
  }
  else {
    unsigned int v5 = 2;
  }
  if (v4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t static HMApplicationData.tileSizeKey.getter()
{
  return 0x6953656C69544648;
}

unint64_t static HMApplicationData.dateAddedData.getter()
{
  return 0xD00000000000001ELL;
}

HomeDataModel::TileSize_optional __swiftcall TileSize.init(rawValue:)(Swift::String rawValue)
{
  id v2 = v1;
  uint64_t v3 = sub_251F36750();
  result.Swift::Int value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *id v2 = v5;
  return result;
}

unint64_t TileSize.rawValue.getter()
{
  if (*v0) {
    return 0xD000000000000019;
  }
  else {
    return 0xD000000000000018;
  }
}

HomeDataModel::TileSize_optional sub_251EAEB78(Swift::String *a1)
{
  return TileSize.init(rawValue:)(*a1);
}

void sub_251EAEB84(unint64_t *a1@<X8>)
{
  if (*v1) {
    unint64_t v2 = 0xD000000000000019;
  }
  else {
    unint64_t v2 = 0xD000000000000018;
  }
  unint64_t v3 = 0x8000000251F65250;
  if (*v1) {
    unint64_t v3 = 0x8000000251F65270;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_251EAEBC8()
{
  return sub_251EADF6C();
}

uint64_t sub_251EAEBD0()
{
  sub_251F357B0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_251EAEC44()
{
  return sub_251EAE104();
}

uint64_t sub_251EAEC4C(char *a1, char *a2)
{
  return sub_251DB3600(*a1, *a2);
}

uint64_t sub_251EAEC58()
{
  return sub_251F35A30();
}

uint64_t sub_251EAECB8()
{
  return sub_251F359D0();
}

uint64_t sub_251EAED08()
{
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x270FA5388](updated);
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB8);
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B2200D8 != -1) {
    swift_once();
  }
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BD0);
  __swift_project_value_buffer(v5, (uint64_t)qword_26B21FF20);
  swift_storeEnumTagMultiPayload();
  sub_251F35CF0();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

void (*HMApplicationData.isDoubleHigh.modify(uint64_t a1, uint64_t a2))(uint64_t a1)
{
  *(void *)a1 = a2;
  *(void *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 16) = HMApplicationData.isDoubleHigh.getter();
  return sub_251EAEEDC;
}

void sub_251EAEEDC(uint64_t a1)
{
}

unint64_t sub_251EAEF08()
{
  unint64_t result = qword_269BA5158;
  if (!qword_269BA5158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5158);
  }
  return result;
}

uint64_t sub_251EAEF5C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = HMApplicationData.isDoubleHigh.getter();
  *a1 = result;
  return result;
}

void sub_251EAEF88(char *a1)
{
}

uint64_t sub_251EAEFB0()
{
  return 8;
}

void *sub_251EAEFBC(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

unsigned char *storeEnumTagSinglePayload for TileSize(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251EAF094);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TileSize()
{
  return &type metadata for TileSize;
}

unint64_t sub_251EAF0CC()
{
  unint64_t result = qword_269BA5160;
  if (!qword_269BA5160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5160);
  }
  return result;
}

unint64_t sub_251EAF120(uint64_t a1, unsigned char *a2, void *a3)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2202A8);
  MEMORY[0x270FA5388](v7 - 8);
  BOOL v9 = (char *)v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  uint64_t v11 = MEMORY[0x270FA5388](updated);
  int v13 = (char *)v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  char v16 = (id *)((char *)v51 - v15);
  MEMORY[0x270FA5388](v14);
  uint64_t v69 = (uint64_t)v51 - v18;
  uint64_t v73 = *(void *)(a1 + 16);
  if (!v73) {
    return MEMORY[0x263F8EE78];
  }
  v51[1] = v3;
  unint64_t v68 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v72 = a1 + v68;
  uint64_t v74 = *(void *)(v17 + 72);
  uint64_t v71 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
  uint64_t v57 = (unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  v51[0] = a1;
  swift_bridgeObjectRetain();
  uint64_t v19 = 0;
  unint64_t v20 = MEMORY[0x263F8EE78];
  uint64_t v55 = a2;
  uint64_t v56 = a3;
  uint64_t v53 = updated;
  uint64_t v54 = v9;
  char v70 = v16;
  uint64_t v52 = v13;
  do
  {
    uint64_t v21 = v72 + v74 * v19;
    sub_251EB5040(v21, (uint64_t)v16, type metadata accessor for StateSnapshot.UpdateType);
    if (swift_getEnumCaseMultiPayload())
    {
      sub_251EB4FE0((uint64_t)v16, type metadata accessor for StateSnapshot.UpdateType);
LABEL_5:
      sub_251EB5040(v21, (uint64_t)v9, type metadata accessor for StateSnapshot.UpdateType);
      (*v71)(v9, 0, 1, updated);
      goto LABEL_6;
    }
    id v25 = *v16;
    if (!*v16) {
      goto LABEL_5;
    }
    if ((*a2 & 1) == 0)
    {
      uint64_t v26 = *a3;
      swift_bridgeObjectRetain();
      id v59 = v25;
      id v27 = objc_msgSend(v25, sel_uniqueIdentifier);
      uint64_t v28 = sub_251F34DA0();
      uint64_t v29 = *(void *)(v28 - 8);
      MEMORY[0x270FA5388](v28);
      uint64_t v67 = v30;
      unsigned int v31 = (char *)v51 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_251F34D80();

      uint64_t v32 = *(void *)(v26 + 16);
      uint64_t v58 = v21;
      if (v32)
      {
        sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
        uint64_t v33 = v31;
        uint64_t v34 = sub_251F35600();
        uint64_t v35 = -1 << *(unsigned char *)(v26 + 32);
        unint64_t v36 = v34 & ~v35;
        uint64_t v64 = v26 + 56;
        if ((*(void *)(v26 + 56 + ((v36 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v36))
        {
          uint64_t v65 = v33;
          uint64_t v66 = (void *)v26;
          void v51[2] = v51;
          uint64_t v60 = ~v35;
          uint64_t v38 = *(void (**)(char *, unint64_t, uint64_t))(v29 + 16);
          uint64_t v37 = v29 + 16;
          uint64_t v61 = *(void *)(v37 + 56);
          uint64_t v62 = v38;
          uint64_t v63 = v37;
          unint64_t v39 = (uint64_t (**)(char *, uint64_t))(v37 - 8);
          while (1)
          {
            MEMORY[0x270FA5388](v34);
            uint64_t v41 = (char *)v51 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
            v62(v41, v66[6] + v61 * v36, v28);
            sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
            char v42 = sub_251F35650();
            uint64_t v43 = *v39;
            uint64_t v34 = (*v39)(v41, v28);
            if (v42) {
              break;
            }
            unint64_t v36 = (v36 + 1) & v60;
            if (((*(void *)(v64 + ((v36 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v36) & 1) == 0)
            {
              uint64_t v64 = (unint64_t)v39 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
              swift_bridgeObjectRelease();
              v43(v65, v28);
              id v44 = v59;
              goto LABEL_26;
            }
          }
          swift_bridgeObjectRelease();
          v43(v65, v28);
          a2 = v55;
          a3 = v56;
          uint64_t updated = v53;
          BOOL v9 = v54;
          int v13 = v52;
          char v16 = v70;
          id v25 = v59;
          goto LABEL_15;
        }
        swift_bridgeObjectRelease();
        uint64_t v46 = v29 + 8;
        uint64_t v43 = *(uint64_t (**)(char *, uint64_t))(v29 + 8);
        uint64_t v64 = v46 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
        v43(v33, v28);
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v45 = v29 + 8;
        uint64_t v43 = *(uint64_t (**)(char *, uint64_t))(v29 + 8);
        uint64_t v64 = v45 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
        v43(v31, v28);
      }
      id v44 = v59;
LABEL_26:
      uint64_t v66 = v51;
      uint64_t v47 = v67;
      id v48 = objc_msgSend((id)MEMORY[0x270FA5388](v44), sel_uniqueIdentifier);
      MEMORY[0x270FA5388](v48);
      uint64_t v49 = (char *)v51 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_251F34D80();

      a3 = v56;
      sub_251A637B8(v49, v49);

      v43(v49, v28);
      BOOL v9 = v54;
      a2 = v55;
      uint64_t updated = v53;
      int v13 = v52;
      uint64_t v21 = v58;
      goto LABEL_5;
    }
LABEL_15:
    (*v71)(v9, 1, 1, updated);

    if ((*v57)(v9, 1, updated) == 1)
    {
      sub_251A1B064((uint64_t)v9, &qword_26B2202A8);
      goto LABEL_11;
    }
LABEL_6:
    uint64_t v22 = v69;
    sub_251EB4F78((uint64_t)v9, v69, type metadata accessor for StateSnapshot.UpdateType);
    sub_251EB4F78(v22, (uint64_t)v13, type metadata accessor for StateSnapshot.UpdateType);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v20 = sub_251F10AFC(0, *(void *)(v20 + 16) + 1, 1, v20);
    }
    unint64_t v24 = *(void *)(v20 + 16);
    unint64_t v23 = *(void *)(v20 + 24);
    if (v24 >= v23 >> 1) {
      unint64_t v20 = sub_251F10AFC(v23 > 1, v24 + 1, 1, v20);
    }
    *(void *)(v20 + 16) = v24 + 1;
    sub_251EB4F78((uint64_t)v13, v20 + v68 + v24 * v74, type metadata accessor for StateSnapshot.UpdateType);
    char v16 = v70;
LABEL_11:
    ++v19;
  }
  while (v19 != v73);
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_251EAF8BC(uint64_t isUniquelyReferenced_nonNull_native, void (*a2)(void *a1@<X8>), uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v91 = a2;
  uint64_t v92 = a5;
  uint64_t v86 = a4;
  uint64_t v88 = a3;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA5168);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v98 = (char *)v80 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = _s7MergeIdVMa();
  uint64_t v97 = *(void *)(v99 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v99);
  uint64_t v84 = (uint64_t)v80 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)v80 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v94 = (uint64_t)v80 - v13;
  uint64_t updated = (void *)type metadata accessor for StateSnapshot.UpdateType(0);
  uint64_t v87 = *(updated - 1);
  uint64_t v14 = MEMORY[0x270FA5388](updated);
  uint64_t v93 = (uint64_t)v80 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  char v85 = (id *)((char *)v80 - v17);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v90 = (uint64_t)v80 - v19;
  MEMORY[0x270FA5388](v18);
  int v95 = (void **)((char *)v80 - v20);
  uint64_t v21 = sub_251F34DA0();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(void *)(v22 + 64);
  MEMORY[0x270FA5388](v21);
  unint64_t v24 = (v23 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v25 - 8);
  id v27 = (char *)v80 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251EB02D8((uint64_t)v27);
  int v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48))(v27, 1, v21);
  uint64_t v89 = v22;
  uint64_t v100 = v23;
  if (v28 == 1)
  {
    sub_251A1B064((uint64_t)v27, &qword_26B21FF90);
    uint64_t v91 = 0;
    uint64_t v23 = (uint64_t)v12;
    uint64_t v29 = v21;
  }
  else
  {
    uint64_t v83 = isUniquelyReferenced_nonNull_native;
    uint64_t v81 = v12;
    uint64_t v30 = (*(uint64_t (**)(char *, char *, uint64_t))(v22 + 32))((char *)v80 - v24, v27, v21);
    v80[1] = v80;
    MEMORY[0x270FA5388](v30);
    unint64_t v31 = (unint64_t)v80 - v24;
    uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v22 + 16);
    char v82 = (char *)v80 - v24;
    v80[0] = v32;
    v32((char *)v80 - v24, (char *)v80 - v24, v21);
    uint64_t v33 = v91;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v101 = (void *)*v33;
    uint64_t v34 = v101;
    *uint64_t v33 = 0x8000000000000000;
    unint64_t v36 = sub_2519FE584((uint64_t)v80 - v24);
    uint64_t v37 = v34[2];
    BOOL v38 = (v35 & 1) == 0;
    uint64_t v39 = v37 + v38;
    if (__OFADD__(v37, v38))
    {
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    uint64_t v23 = v35;
    uint64_t v29 = v21;
    if (v34[3] >= v39)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_251A12544();
        uint64_t v34 = v101;
      }
    }
    else
    {
      sub_251A01FC8(v39, isUniquelyReferenced_nonNull_native);
      uint64_t v34 = v101;
      unint64_t v40 = sub_2519FE584(v31);
      if ((v23 & 1) != (v41 & 1))
      {
        sub_251F36BA0();
        __break(1u);
        goto LABEL_43;
      }
      unint64_t v36 = v40;
    }
    char isUniquelyReferenced_nonNull_native = v83;
    *uint64_t v33 = v34;
    swift_bridgeObjectRelease();
    uint64_t v34 = (void *)*v33;
    uint64_t v42 = swift_bridgeObjectRetain();
    if ((v23 & 1) == 0)
    {
      uint64_t v23 = (uint64_t)v80;
      MEMORY[0x270FA5388](v42);
      id v44 = (char *)v80 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
      ((void (*)(char *, unint64_t, uint64_t))v80[0])(v44, v31, v21);
      uint64_t v45 = (uint64_t)v44;
      char isUniquelyReferenced_nonNull_native = v83;
      sub_251A112AC(v36, v45, 0, v34);
    }
    uint64_t v46 = v34[7];
    swift_bridgeObjectRelease();
    uint64_t v47 = *(void *)(v46 + 8 * v36);
    BOOL v48 = __OFADD__(v47, 1);
    uint64_t v49 = v47 + 1;
    uint64_t v50 = v82;
    if (v48)
    {
LABEL_40:
      __break(1u);
LABEL_41:
      uint64_t v34 = (void *)sub_251F10AFC(0, v34[2] + 1, 1, (unint64_t)v34);
      *(void *)(isUniquelyReferenced_nonNull_native + 8 * v31) = v34;
LABEL_34:
      unint64_t v78 = v34[2];
      unint64_t v77 = v34[3];
      if (v78 >= v77 >> 1)
      {
        uint64_t v34 = (void *)sub_251F10AFC(v77 > 1, v78 + 1, 1, (unint64_t)v34);
        *(void *)(isUniquelyReferenced_nonNull_native + 8 * v31) = v34;
      }
      uint64_t v63 = (uint64_t)v91;
      void v34[2] = v78 + 1;
      sub_251EB4F78(v93, (uint64_t)v34+ ((*(unsigned __int8 *)(v87 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80))+ *(void *)(v87 + 72) * v78, type metadata accessor for StateSnapshot.UpdateType);
      sub_251EB4FE0(v23, (uint64_t (*)(void))_s7MergeIdVMa);
      sub_251EB4FE0(v94, (uint64_t (*)(void))_s7MergeIdVMa);
      return sub_251A27C7C(v63);
    }
    *(void *)(v46 + 8 * v36) = v49;
    uint64_t v51 = *(void (**)(unint64_t, uint64_t))(v89 + 8);
    v51(v31, v21);
    v51((unint64_t)v50, v21);
    uint64_t v91 = sub_2519FDDC0;
    uint64_t v23 = (uint64_t)v81;
  }
  uint64_t v52 = v95;
  sub_251EB5040(isUniquelyReferenced_nonNull_native, (uint64_t)v95, type metadata accessor for StateSnapshot.UpdateType);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v54 = v100;
  if (EnumCaseMultiPayload)
  {
    sub_251EB4FE0((uint64_t)v52, type metadata accessor for StateSnapshot.UpdateType);
  }
  else
  {
    uint64_t v60 = *v52;
    if (v60)
    {
      uint64_t updated = v80;
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      id v61 = objc_msgSend(v60, sel_uniqueIdentifier);
      MEMORY[0x270FA5388](v61);
      sub_251F34D80();

      sub_251A637B8((char *)v80 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0), (char *)v80 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(char *, uint64_t))(v89 + 8))((char *)v80 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0), v29);
      uint64_t v57 = (uint64_t)v98;
      uint64_t v58 = v99;
      goto LABEL_23;
    }
  }
  uint64_t v55 = v90;
  sub_251EB5040(isUniquelyReferenced_nonNull_native, v90, type metadata accessor for StateSnapshot.UpdateType);
  int v56 = swift_getEnumCaseMultiPayload();
  uint64_t v57 = (uint64_t)v98;
  uint64_t v58 = v99;
  if (v56 != 9)
  {
    if (v56)
    {
LABEL_19:
      sub_251EB4FE0(v55, type metadata accessor for StateSnapshot.UpdateType);
      goto LABEL_23;
    }
    id v59 = v85;
    sub_251EB5040(v55, (uint64_t)v85, type metadata accessor for StateSnapshot.UpdateType);
    if (*v59)
    {

      goto LABEL_19;
    }
  }
  sub_251EB4FE0(v55, type metadata accessor for StateSnapshot.UpdateType);
  uint64_t v62 = swift_bridgeObjectRetain();
  sub_251AC11C8(v62);
LABEL_23:
  sub_251EB05A0(v57);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v97 + 48))(v57, 1, v58) == 1)
  {
    sub_251A1B064(v57, &qword_269BA5168);
    uint64_t v63 = (uint64_t)v91;
    return sub_251A27C7C(v63);
  }
  uint64_t v64 = v94;
  sub_251EB4F78(v57, v94, (uint64_t (*)(void))_s7MergeIdVMa);
  sub_251EB5040(v64, v23, (uint64_t (*)(void))_s7MergeIdVMa);
  sub_251EB5040(isUniquelyReferenced_nonNull_native, v93, type metadata accessor for StateSnapshot.UpdateType);
  uint64_t v65 = v92;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v101 = (void *)*v65;
  uint64_t v34 = v101;
  void *v65 = 0x8000000000000000;
  unint64_t v31 = sub_2519FED18(v23);
  uint64_t v67 = v34[2];
  BOOL v68 = (v66 & 1) == 0;
  uint64_t v69 = v67 + v68;
  if (__OFADD__(v67, v68)) {
    goto LABEL_39;
  }
  char v70 = v66;
  if (v34[3] >= v69)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_251A176AC();
      uint64_t v34 = v101;
    }
LABEL_31:
    uint64_t v73 = (void **)v92;
    *uint64_t v92 = v34;
    swift_bridgeObjectRelease();
    uint64_t v74 = *v73;
    swift_bridgeObjectRetain();
    if ((v70 & 1) == 0)
    {
      uint64_t v75 = v84;
      sub_251EB5040(v23, v84, (uint64_t (*)(void))_s7MergeIdVMa);
      sub_251A11BD4(v31, v75, MEMORY[0x263F8EE78], v74);
    }
    char isUniquelyReferenced_nonNull_native = v74[7];
    swift_bridgeObjectRelease();
    uint64_t v34 = *(void **)(isUniquelyReferenced_nonNull_native + 8 * v31);
    char v76 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(isUniquelyReferenced_nonNull_native + 8 * v31) = v34;
    if (v76) {
      goto LABEL_34;
    }
    goto LABEL_41;
  }
  sub_251A0AC18(v69, isUniquelyReferenced_nonNull_native);
  uint64_t v34 = v101;
  unint64_t v71 = sub_2519FED18(v23);
  if ((v70 & 1) == (v72 & 1))
  {
    unint64_t v31 = v71;
    goto LABEL_31;
  }
LABEL_43:
  uint64_t result = sub_251F36BA0();
  __break(1u);
  return result;
}

uint64_t sub_251EB02D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x270FA5388](updated);
  uint64_t v6 = (char *)&v20[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251EB5040(v2, (uint64_t)v6, type metadata accessor for StateSnapshot.UpdateType);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 6)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E298);
    swift_bridgeObjectRelease();
    uint64_t v15 = sub_251F34DA0();
    uint64_t v16 = *(void *)(v15 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(a1, v6, v15);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v8 = *(void *)v6;
    uint64_t v9 = *((void *)v6 + 1);
    int v10 = v6[16];
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    MEMORY[0x270FA5388](v11 - 8);
    uint64_t v13 = (char *)&v20[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (v10)
    {
      sub_251B286EC(v8, v9, v10);
      uint64_t v14 = sub_251F34DA0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
    }
    else
    {
      v20[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E320);
      id v20[4] = sub_251A1E590(&qword_269BA5180, &qword_269B9E320);
      v20[0] = v8;
      sub_251EB3A6C(v20, (uint64_t)v13);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v20);
    }
    return sub_251A1E9B4((uint64_t)v13, a1);
  }
  else
  {
    uint64_t v18 = sub_251F34DA0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(a1, 1, 1, v18);
    return sub_251EB4FE0((uint64_t)v6, type metadata accessor for StateSnapshot.UpdateType);
  }
}

uint64_t sub_251EB05A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x270FA5388](updated);
  uint64_t v5 = (char *)&v78 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251EB5040(v1, (uint64_t)v5, type metadata accessor for StateSnapshot.UpdateType);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 6:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E298);
      swift_bridgeObjectRelease();
      uint64_t v20 = sub_251F34DA0();
      uint64_t v21 = *(void *)(v20 - 8);
      MEMORY[0x270FA5388](v20);
      uint64_t v23 = (char *)&v78 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v23, v5, v20);
      uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
      MEMORY[0x270FA5388](v24 - 8);
      uint64_t v26 = (char *)&v78 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v26, v23, v20);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v26, 0, 1, v20);
      (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
      sub_251A1E9B4((uint64_t)v26, a1);
      uint64_t v27 = _s7MergeIdVMa();
      int v28 = (void *)(a1 + *(int *)(v27 + 20));
      *int v28 = 0x73656C69666F7270;
      v28[1] = 0xE800000000000000;
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(a1, 0, 1, v27);
    case 4:
      uint64_t v30 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_269B9E2A0);
      char v79 = *(uint64_t **)&v5[v30[12]];
      unint64_t v31 = *(void **)&v5[v30[16]];
      uint64_t v32 = *(void **)&v5[v30[20]];
      uint64_t v33 = sub_251F34DA0();
      uint64_t v80 = &v78;
      uint64_t v34 = *(void *)(v33 - 8);
      MEMORY[0x270FA5388](v33);
      unint64_t v36 = (char *)&v78 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v36, v5, v33);
      uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
      MEMORY[0x270FA5388](v37 - 8);
      uint64_t v39 = (char *)&v78 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v34 + 56))(v39, 1, 1, v33);
      uint64_t v81 = 0;
      unint64_t v82 = 0xE000000000000000;
      sub_251F36400();
      swift_bridgeObjectRelease();
      uint64_t v81 = 0x6572617774666F73;
      unint64_t v82 = 0xEF2D657461647055;
      sub_251F34D40();
      sub_251F35800();
      swift_bridgeObjectRelease();

      uint64_t v40 = v81;
      unint64_t v41 = v82;
      (*(void (**)(char *, uint64_t))(v34 + 8))(v36, v33);
      sub_251A1E9B4((uint64_t)v39, a1);
      uint64_t v42 = _s7MergeIdVMa();
      uint64_t v43 = (uint64_t *)(a1 + *(int *)(v42 + 20));
      *uint64_t v43 = v40;
      v43[1] = v41;
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(a1, 0, 1, v42);
    case 1:
      uint64_t v8 = *(void *)v5;
      uint64_t v7 = *((void *)v5 + 1);
      switch(v5[16])
      {
        case 1:
          uint64_t v80 = (uint64_t *)a1;
          uint64_t v45 = sub_251F34DA0();
          char v79 = &v78;
          uint64_t v46 = *(void *)(v45 - 8);
          MEMORY[0x270FA5388](v45);
          BOOL v48 = (char *)&v78 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
          uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
          uint64_t v50 = *(void *)(*(void *)(v49 - 8) + 64);
          MEMORY[0x270FA5388](v49 - 8);
          unint64_t v51 = (v50 + 15) & 0xFFFFFFFFFFFFFFF0;
          uint64_t v16 = (char *)&v78 - v51;
          uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E310);
          uint64_t v84 = sub_251A1E590(&qword_269BA5178, &qword_269B9E310);
          uint64_t v81 = v8;
          swift_bridgeObjectRetain();
          sub_251EB3A6C(&v81, (uint64_t)&v78 - v51);
          __swift_destroy_boxed_opaque_existential_0((uint64_t)&v81);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))((char *)&v78 - v51, 1, v45) == 1)
          {
            uint64_t v17 = v8;
            uint64_t v18 = v7;
            unsigned __int8 v19 = 1;
            goto LABEL_16;
          }
          uint64_t v75 = (*(uint64_t (**)(char *, char *, uint64_t))(v46 + 32))(v48, (char *)&v78 - v51, v45);
          MEMORY[0x270FA5388](v75);
          (*(void (**)(char *, char *, uint64_t))(v46 + 16))((char *)&v78 - v51, v48, v45);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))((char *)&v78 - v51, 0, 1, v45);
          sub_251B286EC(v8, v7, 1u);
          (*(void (**)(char *, uint64_t))(v46 + 8))(v48, v45);
          uint64_t v69 = (uint64_t)v80;
          sub_251A1E9B4((uint64_t)&v78 - v51, (uint64_t)v80);
          uint64_t v70 = _s7MergeIdVMa();
          uint64_t v71 = v70;
          char v72 = (unint64_t *)(v69 + *(int *)(v70 + 20));
          unint64_t v73 = 0x53676E6964616F6CLL;
          unint64_t v74 = 0xED00007365746174;
          goto LABEL_23;
        case 2:
          uint64_t v80 = (uint64_t *)a1;
          uint64_t v52 = sub_251F34DA0();
          char v79 = &v78;
          uint64_t v53 = *(void *)(v52 - 8);
          MEMORY[0x270FA5388](v52);
          uint64_t v55 = (char *)&v78 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
          uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
          uint64_t v57 = *(void *)(*(void *)(v56 - 8) + 64);
          MEMORY[0x270FA5388](v56 - 8);
          unint64_t v58 = (v57 + 15) & 0xFFFFFFFFFFFFFFF0;
          uint64_t v16 = (char *)&v78 - v58;
          uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E300);
          uint64_t v84 = sub_251A1E590(&qword_269BA5170, &qword_269B9E300);
          uint64_t v81 = v8;
          swift_bridgeObjectRetain();
          sub_251EB3A6C(&v81, (uint64_t)&v78 - v58);
          __swift_destroy_boxed_opaque_existential_0((uint64_t)&v81);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))((char *)&v78 - v58, 1, v52) == 1)
          {
            uint64_t v17 = v8;
            uint64_t v18 = v7;
            unsigned __int8 v19 = 2;
            goto LABEL_16;
          }
          uint64_t v76 = (*(uint64_t (**)(char *, char *, uint64_t))(v53 + 32))(v55, (char *)&v78 - v58, v52);
          MEMORY[0x270FA5388](v76);
          (*(void (**)(char *, char *, uint64_t))(v53 + 16))((char *)&v78 - v58, v55, v52);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v53 + 56))((char *)&v78 - v58, 0, 1, v52);
          sub_251B286EC(v8, v7, 2u);
          (*(void (**)(char *, uint64_t))(v53 + 8))(v55, v52);
          uint64_t v69 = (uint64_t)v80;
          sub_251A1E9B4((uint64_t)&v78 - v58, (uint64_t)v80);
          uint64_t v70 = _s7MergeIdVMa();
          uint64_t v71 = v70;
          char v72 = (unint64_t *)(v69 + *(int *)(v70 + 20));
          unint64_t v73 = 0x656469727265766FLL;
          unint64_t v74 = 0xEE007365756C6156;
          goto LABEL_23;
        case 3:
          uint64_t v80 = (uint64_t *)a1;
          uint64_t v59 = sub_251F34DA0();
          char v79 = &v78;
          uint64_t v60 = *(void *)(v59 - 8);
          MEMORY[0x270FA5388](v59);
          uint64_t v62 = (char *)&v78 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
          uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
          uint64_t v64 = *(void *)(*(void *)(v63 - 8) + 64);
          MEMORY[0x270FA5388](v63 - 8);
          unint64_t v65 = (v64 + 15) & 0xFFFFFFFFFFFFFFF0;
          uint64_t v16 = (char *)&v78 - v65;
          uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E300);
          uint64_t v84 = sub_251A1E590(&qword_269BA5170, &qword_269B9E300);
          uint64_t v81 = v8;
          swift_bridgeObjectRetain();
          sub_251EB3A6C(&v81, (uint64_t)&v78 - v65);
          __swift_destroy_boxed_opaque_existential_0((uint64_t)&v81);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))((char *)&v78 - v65, 1, v59) == 1)
          {
            uint64_t v17 = v8;
            uint64_t v18 = v7;
            unsigned __int8 v19 = 3;
            goto LABEL_16;
          }
          uint64_t v77 = (*(uint64_t (**)(char *, char *, uint64_t))(v60 + 32))(v62, (char *)&v78 - v65, v59);
          MEMORY[0x270FA5388](v77);
          (*(void (**)(char *, char *, uint64_t))(v60 + 16))((char *)&v78 - v65, v62, v59);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v60 + 56))((char *)&v78 - v65, 0, 1, v59);
          sub_251B286EC(v8, v7, 3u);
          (*(void (**)(char *, uint64_t))(v60 + 8))(v62, v59);
          uint64_t v69 = (uint64_t)v80;
          sub_251A1E9B4((uint64_t)&v78 - v65, (uint64_t)v80);
          uint64_t v70 = _s7MergeIdVMa();
          uint64_t v71 = v70;
          char v72 = (unint64_t *)(v69 + *(int *)(v70 + 20));
          unint64_t v73 = 0xD000000000000013;
          unint64_t v74 = 0x8000000251F72F40;
          goto LABEL_23;
        case 4:
          sub_251B286EC(*(void *)v5, *((void *)v5 + 1), 4u);
          uint64_t v67 = _s7MergeIdVMa();
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 56))(a1, 1, 1, v67);
        default:
          uint64_t v80 = (uint64_t *)a1;
          uint64_t v9 = sub_251F34DA0();
          char v79 = &v78;
          uint64_t v10 = *(void *)(v9 - 8);
          MEMORY[0x270FA5388](v9);
          uint64_t v12 = (char *)&v78 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
          uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
          uint64_t v14 = *(void *)(*(void *)(v13 - 8) + 64);
          MEMORY[0x270FA5388](v13 - 8);
          unint64_t v15 = (v14 + 15) & 0xFFFFFFFFFFFFFFF0;
          uint64_t v16 = (char *)&v78 - v15;
          uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E320);
          uint64_t v84 = sub_251A1E590(&qword_269BA5180, &qword_269B9E320);
          uint64_t v81 = v8;
          swift_bridgeObjectRetain();
          sub_251EB3A6C(&v81, (uint64_t)&v78 - v15);
          __swift_destroy_boxed_opaque_existential_0((uint64_t)&v81);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))((char *)&v78 - v15, 1, v9) == 1)
          {
            uint64_t v17 = v8;
            uint64_t v18 = v7;
            unsigned __int8 v19 = 0;
LABEL_16:
            sub_251B286EC(v17, v18, v19);
            sub_251A1B064((uint64_t)v16, &qword_26B21FF90);
            uint64_t v66 = _s7MergeIdVMa();
            uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 56))(v80, 1, 1, v66);
          }
          else
          {
            uint64_t v68 = (*(uint64_t (**)(char *, char *, uint64_t))(v10 + 32))(v12, (char *)&v78 - v15, v9);
            MEMORY[0x270FA5388](v68);
            (*(void (**)(char *, char *, uint64_t))(v10 + 16))((char *)&v78 - v15, v12, v9);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))((char *)&v78 - v15, 0, 1, v9);
            sub_251B286EC(v8, v7, 0);
            (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
            uint64_t v69 = (uint64_t)v80;
            sub_251A1E9B4((uint64_t)&v78 - v15, (uint64_t)v80);
            uint64_t v70 = _s7MergeIdVMa();
            uint64_t v71 = v70;
            char v72 = (unint64_t *)(v69 + *(int *)(v70 + 20));
            unint64_t v73 = 0x68736572666572;
            unint64_t v74 = 0xE700000000000000;
LABEL_23:
            *char v72 = v73;
            v72[1] = v74;
            uint64_t result = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v70 - 8) + 56))(v69, 0, 1, v71);
          }
          break;
      }
      break;
    default:
      uint64_t v44 = _s7MergeIdVMa();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(a1, 1, 1, v44);
      return sub_251EB4FE0((uint64_t)v5, type metadata accessor for StateSnapshot.UpdateType);
  }
  return result;
}

uint64_t sub_251EB1558@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t *a6@<X5>, void *a7@<X8>)
{
  int v96 = a7;
  uint64_t v90 = a6;
  uint64_t v91 = a3;
  uint64_t v93 = a5;
  uint64_t v94 = a2;
  uint64_t v88 = a4;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2202A8);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v87 = (uint64_t)&v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA5168);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v83 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = _s7MergeIdVMa();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v86 = (uint64_t)&v83 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v85 = (uint64_t)&v83 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v92 = (uint64_t *)((char *)&v83 - v19);
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  uint64_t v21 = *(void *)(updated - 8);
  uint64_t v97 = updated;
  uint64_t v98 = v21;
  uint64_t v22 = MEMORY[0x270FA5388](updated);
  uint64_t v84 = (uint64_t)&v83 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v89 = (uint64_t)&v83 - v24;
  uint64_t v25 = sub_251F34DA0();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(void *)(v26 + 64);
  MEMORY[0x270FA5388](v25);
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v28 - 8);
  uint64_t v30 = (char *)&v83 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = a1;
  sub_251EB02D8((uint64_t)v30);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v30, 1, v25) == 1)
  {
    sub_251A1B064((uint64_t)v30, &qword_26B21FF90);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))((char *)&v83 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0), v30, v25);
    uint64_t v31 = v25;
    uint64_t v32 = v26;
    uint64_t v33 = *v94;
    swift_bridgeObjectRetain();
    char v34 = sub_251DB3C24((uint64_t)&v83 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0), v33);
    swift_bridgeObjectRelease();
    uint64_t v35 = (char *)&v83 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (v34)
    {
      (*(void (**)(char *, uint64_t))(v32 + 8))((char *)&v83 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0), v31);
      return (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(v98 + 56))(v96, 1, 1, v97);
    }
    uint64_t v37 = v32;
    if (sub_251DB3C24((uint64_t)v35, v91))
    {
      uint64_t v38 = (char *)&v83 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v39 = v88;
      uint64_t v40 = v31;
      if (*(void *)(v88 + 16) && (unint64_t v41 = sub_2519FE584((uint64_t)v38), (v42 & 1) != 0))
      {
        uint64_t v43 = *(void (**)(char *, uint64_t))(v37 + 8);
        id v44 = *(id *)(*(void *)(v39 + 56) + 8 * v41);
        v43(v38, v31);
        uint64_t v45 = v96;
        *int v96 = v44;
        uint64_t v46 = v97;
        swift_storeEnumTagMultiPayload();
        return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(v98 + 56))(v45, 0, 1, v46);
      }
      else
      {
        if (qword_26B21F2C0 != -1) {
          swift_once();
        }
        uint64_t v59 = sub_251F350A0();
        uint64_t v60 = __swift_project_value_buffer(v59, (uint64_t)qword_26B21F290);
        MEMORY[0x270FA5388](v60);
        uint64_t v61 = (char *)&v83 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v61, v38, v31);
        uint64_t v62 = v89;
        sub_251EB5040(v95, v89, type metadata accessor for StateSnapshot.UpdateType);
        uint64_t v63 = (uint64_t *)v38;
        uint64_t v64 = sub_251F35080();
        os_log_type_t v65 = sub_251F35FB0();
        int v66 = v65;
        if (os_log_type_enabled(v64, v65))
        {
          uint64_t v67 = swift_slowAlloc();
          uint64_t v93 = (uint64_t *)swift_slowAlloc();
          uint64_t v100 = v93;
          *(_DWORD *)uint64_t v67 = 136315394;
          sub_251A1A8EC((unint64_t *)&qword_26B21E6B0);
          uint64_t v94 = v63;
          uint64_t v68 = sub_251F36AB0();
          uint64_t v99 = sub_251A00E84(v68, v69, (uint64_t *)&v100);
          LODWORD(v91) = v66;
          sub_251F361D0();
          swift_bridgeObjectRelease();
          uint64_t v92 = &v83;
          uint64_t v70 = *(void (**)(char *, uint64_t))(v37 + 8);
          v70(v61, v40);
          *(_WORD *)(v67 + 12) = 2080;
          uint64_t v71 = v89;
          unint64_t v72 = StateSnapshot.UpdateType.description.getter();
          uint64_t v99 = sub_251A00E84(v72, v73, (uint64_t *)&v100);
          sub_251F361D0();
          swift_bridgeObjectRelease();
          sub_251EB4FE0(v71, type metadata accessor for StateSnapshot.UpdateType);
          _os_log_impl(&dword_2519F3000, v64, (os_log_type_t)v91, "Failed to find home for homeID (%s) from update: %s", (uint8_t *)v67, 0x16u);
          unint64_t v74 = v93;
          swift_arrayDestroy();
          MEMORY[0x2533AC760](v74, -1, -1);
          MEMORY[0x2533AC760](v67, -1, -1);

          v70((char *)v94, v40);
        }
        else
        {

          sub_251EB4FE0(v62, type metadata accessor for StateSnapshot.UpdateType);
          uint64_t v75 = *(void (**)(char *, uint64_t))(v37 + 8);
          v75(v61, v40);
          v75((char *)v63, v40);
        }
        uint64_t v76 = v96;
        uint64_t v78 = v97;
        uint64_t v77 = v98;
        sub_251EB5040(v95, (uint64_t)v96, type metadata accessor for StateSnapshot.UpdateType);
        return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(v77 + 56))(v76, 0, 1, v78);
      }
    }
    (*(void (**)(char *, uint64_t))(v32 + 8))(v35, v31);
  }
  uint64_t v47 = v95;
  sub_251EB05A0((uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_251A1B064((uint64_t)v12, &qword_269BA5168);
    BOOL v48 = v96;
    uint64_t v50 = v97;
    uint64_t v49 = v98;
LABEL_21:
    sub_251EB5040(v47, (uint64_t)v48, type metadata accessor for StateSnapshot.UpdateType);
    return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(v49 + 56))(v48, 0, 1, v50);
  }
  uint64_t v51 = (uint64_t)v92;
  sub_251EB4F78((uint64_t)v12, (uint64_t)v92, (uint64_t (*)(void))_s7MergeIdVMa);
  uint64_t v52 = *v93;
  swift_bridgeObjectRetain();
  char v53 = sub_251DB49F4(v51, v52);
  swift_bridgeObjectRelease();
  uint64_t v50 = v97;
  uint64_t v49 = v98;
  if (v53)
  {
    sub_251EB4FE0(v51, (uint64_t (*)(void))_s7MergeIdVMa);
    return (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(v49 + 56))(v96, 1, 1, v50);
  }
  uint64_t v54 = *v90;
  if (!*(void *)(*v90 + 16)
    || (unint64_t v55 = sub_2519FED18(v51), (v56 & 1) == 0)
    || *(void *)(*(void *)(*(void *)(v54 + 56) + 8 * v55) + 16) <= 1uLL)
  {
    sub_251EB4FE0(v51, (uint64_t (*)(void))_s7MergeIdVMa);
    goto LABEL_20;
  }
  uint64_t v57 = swift_bridgeObjectRetain();
  uint64_t v58 = v87;
  sub_251EB1F80(v57, v87);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v58, 1, v50) == 1)
  {
    sub_251EB4FE0(v51, (uint64_t (*)(void))_s7MergeIdVMa);
    sub_251A1B064(v58, &qword_26B2202A8);
LABEL_20:
    BOOL v48 = v96;
    goto LABEL_21;
  }
  uint64_t v79 = v84;
  sub_251EB4F78(v58, v84, type metadata accessor for StateSnapshot.UpdateType);
  uint64_t v80 = v86;
  sub_251EB5040(v51, v86, (uint64_t (*)(void))_s7MergeIdVMa);
  uint64_t v81 = v85;
  sub_251A683C0(v85, v80);
  sub_251EB4FE0(v81, (uint64_t (*)(void))_s7MergeIdVMa);
  sub_251EB4FE0(v51, (uint64_t (*)(void))_s7MergeIdVMa);
  unint64_t v82 = v96;
  sub_251EB4F78(v79, (uint64_t)v96, type metadata accessor for StateSnapshot.UpdateType);
  return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(v49 + 56))(v82, 0, 1, v50);
}

uint64_t sub_251EB1F80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  uint64_t v5 = MEMORY[0x270FA5388](updated);
  uint64_t v7 = (char *)&v172 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v172 - v9;
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v187 = (char *)&v172 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v185 = (void (*)(void))((char *)&v172 - v14);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v172 - v16;
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v20 = (char *)&v172 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v23 = (char *)&v172 - v22;
  uint64_t v189 = *(void (**)(void))(a1 + 16);
  if (!v189)
  {
    char v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 56);
    return v34(a2, 1, 1, updated);
  }
  unint64_t v24 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  uint64_t v180 = a1;
  uint64_t v183 = v21;
  uint64_t v184 = a1 + v24;
  sub_251EB5040(a1 + v24, (uint64_t)&v172 - v22, type metadata accessor for StateSnapshot.UpdateType);
  uint64_t v181 = v23;
  sub_251EB5040((uint64_t)v23, (uint64_t)v20, type metadata accessor for StateSnapshot.UpdateType);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v186 = updated;
  uint64_t v182 = a2;
  if (EnumCaseMultiPayload != 6)
  {
    if (EnumCaseMultiPayload == 4)
    {
      uint64_t v49 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_269B9E2A0);

      sub_251EB5040(v184 + *(void *)(v183 + 72) * ((void)v189 - 1), a2, type metadata accessor for StateSnapshot.UpdateType);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v183 + 56))(a2, 0, 1, updated);
      sub_251EB4FE0((uint64_t)v181, type metadata accessor for StateSnapshot.UpdateType);
      uint64_t v50 = sub_251F34DA0();
      return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v50 - 8) + 8))(v20, v50);
    }
    if (EnumCaseMultiPayload != 1)
    {
      sub_251EB4FE0((uint64_t)v181, type metadata accessor for StateSnapshot.UpdateType);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v183 + 56))(a2, 1, 1, updated);
      return sub_251EB4FE0((uint64_t)v20, type metadata accessor for StateSnapshot.UpdateType);
    }
    uint64_t v27 = *(void *)v20;
    uint64_t v26 = *((void *)v20 + 1);
    switch(v20[16])
    {
      case 1:
        uint64_t v172 = *(void *)v20;
        uint64_t v173 = v26;
        uint64_t v174 = *(void *)(v183 + 72);
        swift_bridgeObjectRetain();
        uint64_t v52 = 0;
        char v53 = (void *)MEMORY[0x263F8EE80];
        while (1)
        {
          unint64_t v55 = (uint64_t *)v185;
          sub_251EB5040(v184 + v174 * v52, (uint64_t)v185, type metadata accessor for StateSnapshot.UpdateType);
          if (swift_getEnumCaseMultiPayload() != 1) {
            break;
          }
          uint64_t v57 = *v55;
          uint64_t v56 = v55[1];
          int v58 = *((unsigned __int8 *)v55 + 16);
          if (v58 != 1)
          {
            sub_251B286EC(v172, v173, 1u);
            uint64_t v167 = v57;
            goto LABEL_157;
          }
          unint64_t v178 = v56;
          uint64_t v179 = v52 + 1;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v192 = v53;
          uint64_t v60 = *(void *)(v57 + 64);
          uint64_t v188 = v57 + 64;
          uint64_t v61 = -1 << *(unsigned char *)(v57 + 32);
          uint64_t v177 = ~v61;
          if (-v61 < 64) {
            uint64_t v62 = ~(-1 << -(char)v61);
          }
          else {
            uint64_t v62 = -1;
          }
          unint64_t v63 = v62 & v60;
          unint64_t v64 = (unint64_t)(63 - v61) >> 6;
          swift_bridgeObjectRetain();
          os_log_type_t v65 = 0;
          uint64_t v187 = (char *)v64;
          uint64_t v175 = (char *)(v57 + 112);
          unint64_t v176 = v64 - 6;
          if (v63)
          {
            do
            {
              while (1)
              {
                unint64_t v190 = (v63 - 1) & v63;
                uint64_t v191 = v65;
                unint64_t v67 = __clz(__rbit64(v63)) | ((void)v65 << 6);
LABEL_52:
                uint64_t v54 = v57;
                unint64_t v72 = *(void **)(*(void *)(v57 + 48) + 8 * v67);
                uint64_t v73 = *(void *)(v57 + 56) + 32 * v67;
                uint64_t v75 = *(void *)v73;
                uint64_t v74 = *(void *)(v73 + 8);
                uint64_t v76 = *(void *)(v73 + 16);
                char v77 = *(unsigned char *)(v73 + 24);
                id v78 = v72;
                sub_251A1A550(v75, v74, v76, v77);
                id v79 = v78;
                sub_251A1A550(v75, v74, v76, v77);

                sub_251A1A5A4(v75, v74, v76, v77);
                if (!v79) {
                  goto LABEL_26;
                }
                unint64_t v81 = sub_2519FE68C((uint64_t)v79);
                uint64_t v82 = v53[2];
                BOOL v83 = (v80 & 1) == 0;
                uint64_t v84 = v82 + v83;
                if (__OFADD__(v82, v83))
                {
                  __break(1u);
LABEL_168:
                  __break(1u);
LABEL_169:
                  __break(1u);
LABEL_170:
                  __break(1u);
LABEL_171:
                  __break(1u);
LABEL_172:
                  __break(1u);
LABEL_173:
                  __break(1u);
LABEL_174:
                  __break(1u);
LABEL_175:
                  __break(1u);
LABEL_176:
                  sub_251AC7B2C();
                  sub_251F36BA0();
                  __break(1u);
                  JUMPOUT(0x251EB34FCLL);
                }
                char v85 = v80;
                if (v53[3] >= v84) {
                  break;
                }
                sub_251A023CC(v84, isUniquelyReferenced_nonNull_native & 1);
                unint64_t v86 = sub_2519FE68C((uint64_t)v79);
                if ((v85 & 1) != (v87 & 1)) {
                  goto LABEL_176;
                }
                unint64_t v81 = v86;
                char v53 = v192;
                if ((v85 & 1) == 0) {
                  goto LABEL_60;
                }
LABEL_34:

                uint64_t v66 = v53[7] + 32 * v81;
                sub_251A1A5A4(*(void *)v66, *(void *)(v66 + 8), *(void *)(v66 + 16), *(unsigned char *)(v66 + 24));
                *(void *)uint64_t v66 = v75;
                *(void *)(v66 + 8) = v74;
                *(void *)(v66 + 16) = v76;
                char isUniquelyReferenced_nonNull_native = 1;
                unint64_t v63 = v190;
                os_log_type_t v65 = v191;
                *(unsigned char *)(v66 + 24) = v77;
                uint64_t v57 = v54;
                if (!v63) {
                  goto LABEL_36;
                }
              }
              if (isUniquelyReferenced_nonNull_native)
              {
                char v53 = v192;
                if (v80) {
                  goto LABEL_34;
                }
              }
              else
              {
                sub_251A127FC();
                char v53 = v192;
                if (v85) {
                  goto LABEL_34;
                }
              }
LABEL_60:
              v53[(v81 >> 6) + 8] |= 1 << v81;
              *(void *)(v53[6] + 8 * v81) = v79;
              uint64_t v88 = v53[7] + 32 * v81;
              *(void *)uint64_t v88 = v75;
              *(void *)(v88 + 8) = v74;
              *(void *)(v88 + 16) = v76;
              *(unsigned char *)(v88 + 24) = v77;
              uint64_t v89 = v53[2];
              BOOL v90 = __OFADD__(v89, 1);
              uint64_t v91 = v89 + 1;
              if (v90) {
                goto LABEL_170;
              }
              v53[2] = v91;
              char isUniquelyReferenced_nonNull_native = 1;
              unint64_t v63 = v190;
              os_log_type_t v65 = v191;
              uint64_t v57 = v54;
            }
            while (v190);
          }
LABEL_36:
          uint64_t v68 = (uint64_t)(v65 + 1);
          if (__OFADD__(v65, 1)) {
            goto LABEL_173;
          }
          if (v68 < (uint64_t)v187)
          {
            unint64_t v69 = *(void *)(v188 + 8 * v68);
            uint64_t v70 = v65 + 1;
            if (v69) {
              goto LABEL_51;
            }
            uint64_t v70 = v65 + 2;
            if ((uint64_t)(v65 + 2) < (uint64_t)v187)
            {
              unint64_t v69 = *(void *)(v188 + 8 * (void)v70);
              if (v69) {
                goto LABEL_51;
              }
              uint64_t v70 = v65 + 3;
              if ((uint64_t)(v65 + 3) < (uint64_t)v187)
              {
                unint64_t v69 = *(void *)(v188 + 8 * (void)v70);
                if (v69) {
                  goto LABEL_51;
                }
                uint64_t v70 = v65 + 4;
                if ((uint64_t)(v65 + 4) < (uint64_t)v187)
                {
                  unint64_t v69 = *(void *)(v188 + 8 * (void)v70);
                  if (v69) {
                    goto LABEL_51;
                  }
                  uint64_t v70 = v65 + 5;
                  if ((uint64_t)(v65 + 5) < (uint64_t)v187)
                  {
                    unint64_t v69 = *(void *)(v188 + 8 * (void)v70);
                    if (!v69)
                    {
                      uint64_t v71 = v65;
                      do
                      {
                        if ((char *)v176 == v71) {
                          goto LABEL_25;
                        }
                        unint64_t v69 = *(void *)&v175[8 * (void)v71++];
                      }
                      while (!v69);
                      uint64_t v70 = v71 + 5;
                    }
LABEL_51:
                    unint64_t v190 = (v69 - 1) & v69;
                    uint64_t v191 = v70;
                    unint64_t v67 = __clz(__rbit64(v69)) + ((void)v70 << 6);
                    goto LABEL_52;
                  }
                }
              }
            }
          }
LABEL_25:
          uint64_t v54 = v57;
LABEL_26:
          sub_251B286EC(v54, v178, 1u);
          sub_251A1E630();
          swift_bridgeObjectRelease();
          uint64_t v52 = v179;
          uint64_t updated = v186;
          a2 = v182;
          if ((void (*)(void))v179 == v189)
          {
            char v168 = 1;
            uint64_t v169 = v172;
            uint64_t v170 = v173;
            unsigned __int8 v171 = 1;
            goto LABEL_165;
          }
        }
        uint64_t v164 = v172;
        uint64_t v165 = v173;
        unsigned __int8 v166 = 1;
        goto LABEL_153;
      case 2:
        uint64_t v172 = *(void *)v20;
        uint64_t v173 = v26;
        uint64_t v175 = *(char **)(v183 + 72);
        swift_bridgeObjectRetain();
        uint64_t v92 = 0;
        char v53 = (void *)MEMORY[0x263F8EE80];
        while (1)
        {
          unint64_t v55 = (uint64_t *)v187;
          sub_251EB5040(v184 + (void)v175 * (void)v92, (uint64_t)v187, type metadata accessor for StateSnapshot.UpdateType);
          if (swift_getEnumCaseMultiPayload() != 1) {
            break;
          }
          uint64_t v94 = *v55;
          uint64_t v56 = v55[1];
          int v58 = *((unsigned __int8 *)v55 + 16);
          if (v58 != 2)
          {
            sub_251B286EC(v172, v173, 2u);
            uint64_t v167 = v94;
LABEL_157:
            sub_251B286EC(v167, v56, v58);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            unint64_t v55 = (uint64_t *)v181;
            goto LABEL_158;
          }
          uint64_t v179 = v56;
          uint64_t v185 = (void (*)(void))((char *)v92 + 1);
          char v95 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v192 = v53;
          uint64_t v96 = *(void *)(v94 + 64);
          unint64_t v190 = v94 + 64;
          uint64_t v97 = -1 << *(unsigned char *)(v94 + 32);
          unint64_t v178 = ~v97;
          if (-v97 < 64) {
            uint64_t v98 = ~(-1 << -(char)v97);
          }
          else {
            uint64_t v98 = -1;
          }
          unint64_t v99 = v98 & v96;
          unint64_t v100 = (unint64_t)(63 - v97) >> 6;
          swift_bridgeObjectRetain();
          uint64_t v101 = 0;
          uint64_t v188 = v100;
          unint64_t v176 = v94 + 112;
          uint64_t v177 = v100 - 6;
          if (v99)
          {
            do
            {
              while (1)
              {
                uint64_t v191 = (char *)((v99 - 1) & v99);
                unint64_t v103 = __clz(__rbit64(v99)) | (v101 << 6);
                uint64_t v104 = v101;
LABEL_93:
                uint64_t v93 = v94;
                uint64_t v108 = *(void **)(*(void *)(v94 + 48) + 8 * v103);
                uint64_t v109 = *(void *)(v94 + 56) + 24 * v103;
                uint64_t v111 = *(void *)v109;
                unint64_t v110 = *(void *)(v109 + 8);
                char v112 = *(unsigned char *)(v109 + 16);
                id v113 = v108;
                sub_251A1A870(v111, v110, v112);
                id v114 = v113;
                sub_251A1A870(v111, v110, v112);

                sub_251A1AD70(v111, v110, v112);
                if (!v114) {
                  goto LABEL_67;
                }
                unint64_t v116 = sub_2519FE68C((uint64_t)v114);
                uint64_t v117 = v53[2];
                BOOL v118 = (v115 & 1) == 0;
                uint64_t v119 = v117 + v118;
                if (__OFADD__(v117, v118)) {
                  goto LABEL_168;
                }
                char v120 = v115;
                if (v53[3] >= v119) {
                  break;
                }
                sub_251A057BC(v119, v95 & 1);
                unint64_t v121 = sub_2519FE68C((uint64_t)v114);
                if ((v120 & 1) != (v122 & 1)) {
                  goto LABEL_176;
                }
                unint64_t v116 = v121;
                char v53 = v192;
                if ((v120 & 1) == 0) {
                  goto LABEL_101;
                }
LABEL_75:

                uint64_t v102 = v53[7] + 24 * v116;
                sub_251A1AD70(*(void *)v102, *(void *)(v102 + 8), *(unsigned char *)(v102 + 16));
                *(void *)uint64_t v102 = v111;
                *(void *)(v102 + 8) = v110;
                char v95 = 1;
                uint64_t v101 = v104;
                unint64_t v99 = (unint64_t)v191;
                *(unsigned char *)(v102 + 16) = v112;
                uint64_t v94 = v93;
                if (!v99) {
                  goto LABEL_77;
                }
              }
              if (v95)
              {
                char v53 = v192;
                if (v115) {
                  goto LABEL_75;
                }
              }
              else
              {
                sub_251A1417C();
                char v53 = v192;
                if (v120) {
                  goto LABEL_75;
                }
              }
LABEL_101:
              v53[(v116 >> 6) + 8] |= 1 << v116;
              *(void *)(v53[6] + 8 * v116) = v114;
              uint64_t v123 = v53[7] + 24 * v116;
              *(void *)uint64_t v123 = v111;
              *(void *)(v123 + 8) = v110;
              *(unsigned char *)(v123 + 16) = v112;
              uint64_t v124 = v53[2];
              BOOL v90 = __OFADD__(v124, 1);
              uint64_t v125 = v124 + 1;
              if (v90) {
                goto LABEL_171;
              }
              v53[2] = v125;
              char v95 = 1;
              uint64_t v101 = v104;
              unint64_t v99 = (unint64_t)v191;
              uint64_t v94 = v93;
            }
            while (v191);
          }
LABEL_77:
          uint64_t v105 = v101 + 1;
          if (__OFADD__(v101, 1)) {
            goto LABEL_174;
          }
          if (v105 < v188)
          {
            unint64_t v106 = *(void *)(v190 + 8 * v105);
            uint64_t v104 = v101 + 1;
            if (v106) {
              goto LABEL_92;
            }
            uint64_t v104 = v101 + 2;
            if (v101 + 2 < v188)
            {
              unint64_t v106 = *(void *)(v190 + 8 * v104);
              if (v106) {
                goto LABEL_92;
              }
              uint64_t v104 = v101 + 3;
              if (v101 + 3 < v188)
              {
                unint64_t v106 = *(void *)(v190 + 8 * v104);
                if (v106) {
                  goto LABEL_92;
                }
                uint64_t v104 = v101 + 4;
                if (v101 + 4 < v188)
                {
                  unint64_t v106 = *(void *)(v190 + 8 * v104);
                  if (v106) {
                    goto LABEL_92;
                  }
                  uint64_t v104 = v101 + 5;
                  if (v101 + 5 < v188)
                  {
                    unint64_t v106 = *(void *)(v190 + 8 * v104);
                    if (!v106)
                    {
                      uint64_t v107 = v101;
                      do
                      {
                        if (v177 == v107) {
                          goto LABEL_66;
                        }
                        unint64_t v106 = *(void *)(v176 + 8 * v107++);
                      }
                      while (!v106);
                      uint64_t v104 = v107 + 5;
                    }
LABEL_92:
                    uint64_t v191 = (char *)((v106 - 1) & v106);
                    unint64_t v103 = __clz(__rbit64(v106)) + (v104 << 6);
                    goto LABEL_93;
                  }
                }
              }
            }
          }
LABEL_66:
          uint64_t v93 = v94;
LABEL_67:
          sub_251B286EC(v93, v179, 2u);
          sub_251A1E630();
          swift_bridgeObjectRelease();
          uint64_t v92 = v185;
          uint64_t updated = v186;
          a2 = v182;
          if (v185 == v189)
          {
            char v168 = 2;
            uint64_t v169 = v172;
            uint64_t v170 = v173;
            unsigned __int8 v171 = 2;
            goto LABEL_165;
          }
        }
        uint64_t v164 = v172;
        uint64_t v165 = v173;
        unsigned __int8 v166 = 2;
LABEL_153:
        sub_251B286EC(v164, v165, v166);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_251EB4FE0((uint64_t)v181, type metadata accessor for StateSnapshot.UpdateType);
LABEL_158:
        uint64_t v162 = (uint64_t)v55;
        goto LABEL_161;
      case 3:
        uint64_t v172 = *(void *)v20;
        uint64_t v173 = v26;
        unint64_t v176 = *(void *)(v183 + 72);
        swift_bridgeObjectRetain();
        uint64_t v126 = 0;
        char v53 = (void *)MEMORY[0x263F8EE80];
        uint64_t v175 = v10;
        break;
      case 4:
        sub_251B286EC(*(void *)v20, v26, 4u);
        uint64_t v162 = (uint64_t)v181;
        goto LABEL_161;
      default:
        uint64_t v28 = *((void *)v20 + 1);
        uint64_t v192 = (void *)MEMORY[0x263F8EE88];
        uint64_t v29 = *(void *)(v183 + 72);
        swift_bridgeObjectRetain();
        uint64_t v30 = v184;
        while (2)
        {
          sub_251EB5040(v30, (uint64_t)v17, type metadata accessor for StateSnapshot.UpdateType);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v31 = v30;
            uint64_t v32 = *(void *)v17;
            unsigned __int8 v33 = v17[16];
            if (!v33)
            {
              sub_251AC154C(*(void *)v17);
              uint64_t v30 = v31 + v29;
              uint64_t v189 = (void (*)(void))((char *)v189 - 1);
              if (!v189)
              {
                sub_251B286EC(v27, v28, 0);
                swift_bridgeObjectRelease();
                sub_251EB4FE0((uint64_t)v181, type metadata accessor for StateSnapshot.UpdateType);
                *(void *)a2 = v192;
                *(void *)(a2 + 8) = 0;
                *(unsigned char *)(a2 + 16) = 0;
                goto LABEL_166;
              }
              continue;
            }
            uint64_t v163 = *((void *)v17 + 1);
            sub_251B286EC(v27, v28, 0);
            sub_251B286EC(v32, v163, v33);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v17 = v181;
          }
          else
          {
            sub_251B286EC(v27, v28, 0);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_251EB4FE0((uint64_t)v181, type metadata accessor for StateSnapshot.UpdateType);
          }
          break;
        }
        uint64_t v162 = (uint64_t)v17;
        goto LABEL_161;
    }
    while (1)
    {
      sub_251EB5040(v184 + v176 * v126, (uint64_t)v10, type metadata accessor for StateSnapshot.UpdateType);
      if (swift_getEnumCaseMultiPayload() != 1) {
        break;
      }
      uint64_t v129 = *(void *)v10;
      uint64_t v128 = *((void *)v10 + 1);
      int v130 = v10[16];
      if (v130 != 3)
      {
        sub_251B286EC(v172, v173, 3u);
        sub_251B286EC(v129, v128, v130);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v10 = v181;
        goto LABEL_160;
      }
      uint64_t v185 = (void (*)(void))*((void *)v10 + 1);
      uint64_t v187 = (char *)(v126 + 1);
      char v131 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v192 = v53;
      uint64_t v132 = *(void *)(v129 + 64);
      unint64_t v190 = v129 + 64;
      uint64_t v133 = -1 << *(unsigned char *)(v129 + 32);
      uint64_t v179 = ~v133;
      if (-v133 < 64) {
        uint64_t v134 = ~(-1 << -(char)v133);
      }
      else {
        uint64_t v134 = -1;
      }
      unint64_t v135 = v134 & v132;
      unint64_t v136 = (unint64_t)(63 - v133) >> 6;
      swift_bridgeObjectRetain();
      uint64_t v137 = 0;
      uint64_t v188 = v136;
      uint64_t v177 = v129 + 112;
      unint64_t v178 = v136 - 6;
      if (v135)
      {
        do
        {
          while (1)
          {
            uint64_t v191 = (char *)((v135 - 1) & v135);
            unint64_t v139 = __clz(__rbit64(v135)) | (v137 << 6);
            uint64_t v140 = v137;
LABEL_134:
            uint64_t v127 = v129;
            uint64_t v144 = *(void **)(*(void *)(v129 + 48) + 8 * v139);
            uint64_t v145 = *(void *)(v129 + 56) + 24 * v139;
            uint64_t v147 = *(void *)v145;
            unint64_t v146 = *(void *)(v145 + 8);
            char v148 = *(unsigned char *)(v145 + 16);
            id v149 = v144;
            sub_251A1A870(v147, v146, v148);
            id v150 = v149;
            sub_251A1A870(v147, v146, v148);

            sub_251A1AD70(v147, v146, v148);
            if (!v150) {
              goto LABEL_108;
            }
            unint64_t v152 = sub_2519FE68C((uint64_t)v150);
            uint64_t v153 = v53[2];
            BOOL v154 = (v151 & 1) == 0;
            uint64_t v155 = v153 + v154;
            if (__OFADD__(v153, v154)) {
              goto LABEL_169;
            }
            char v156 = v151;
            if (v53[3] >= v155) {
              break;
            }
            sub_251A057BC(v155, v131 & 1);
            unint64_t v157 = sub_2519FE68C((uint64_t)v150);
            if ((v156 & 1) != (v158 & 1)) {
              goto LABEL_176;
            }
            unint64_t v152 = v157;
            char v53 = v192;
            if ((v156 & 1) == 0) {
              goto LABEL_142;
            }
LABEL_116:

            uint64_t v138 = v53[7] + 24 * v152;
            sub_251A1AD70(*(void *)v138, *(void *)(v138 + 8), *(unsigned char *)(v138 + 16));
            *(void *)uint64_t v138 = v147;
            *(void *)(v138 + 8) = v146;
            char v131 = 1;
            uint64_t v137 = v140;
            unint64_t v135 = (unint64_t)v191;
            *(unsigned char *)(v138 + 16) = v148;
            uint64_t v129 = v127;
            if (!v135) {
              goto LABEL_118;
            }
          }
          if (v131)
          {
            char v53 = v192;
            if (v151) {
              goto LABEL_116;
            }
          }
          else
          {
            sub_251A1417C();
            char v53 = v192;
            if (v156) {
              goto LABEL_116;
            }
          }
LABEL_142:
          v53[(v152 >> 6) + 8] |= 1 << v152;
          *(void *)(v53[6] + 8 * v152) = v150;
          uint64_t v159 = v53[7] + 24 * v152;
          *(void *)uint64_t v159 = v147;
          *(void *)(v159 + 8) = v146;
          *(unsigned char *)(v159 + 16) = v148;
          uint64_t v160 = v53[2];
          BOOL v90 = __OFADD__(v160, 1);
          uint64_t v161 = v160 + 1;
          if (v90) {
            goto LABEL_172;
          }
          v53[2] = v161;
          char v131 = 1;
          uint64_t v137 = v140;
          unint64_t v135 = (unint64_t)v191;
          uint64_t v129 = v127;
        }
        while (v191);
      }
LABEL_118:
      uint64_t v141 = v137 + 1;
      if (__OFADD__(v137, 1)) {
        goto LABEL_175;
      }
      if (v141 < v188)
      {
        unint64_t v142 = *(void *)(v190 + 8 * v141);
        uint64_t v140 = v137 + 1;
        if (v142) {
          goto LABEL_133;
        }
        uint64_t v140 = v137 + 2;
        if (v137 + 2 < v188)
        {
          unint64_t v142 = *(void *)(v190 + 8 * v140);
          if (v142) {
            goto LABEL_133;
          }
          uint64_t v140 = v137 + 3;
          if (v137 + 3 < v188)
          {
            unint64_t v142 = *(void *)(v190 + 8 * v140);
            if (v142) {
              goto LABEL_133;
            }
            uint64_t v140 = v137 + 4;
            if (v137 + 4 < v188)
            {
              unint64_t v142 = *(void *)(v190 + 8 * v140);
              if (v142) {
                goto LABEL_133;
              }
              uint64_t v140 = v137 + 5;
              if (v137 + 5 < v188)
              {
                unint64_t v142 = *(void *)(v190 + 8 * v140);
                if (!v142)
                {
                  uint64_t v143 = v137;
                  do
                  {
                    if (v178 == v143) {
                      goto LABEL_107;
                    }
                    unint64_t v142 = *(void *)(v177 + 8 * v143++);
                  }
                  while (!v142);
                  uint64_t v140 = v143 + 5;
                }
LABEL_133:
                uint64_t v191 = (char *)((v142 - 1) & v142);
                unint64_t v139 = __clz(__rbit64(v142)) + (v140 << 6);
                goto LABEL_134;
              }
            }
          }
        }
      }
LABEL_107:
      uint64_t v127 = v129;
LABEL_108:
      sub_251B286EC(v127, (uint64_t)v185, 3u);
      sub_251A1E630();
      swift_bridgeObjectRelease();
      uint64_t updated = v186;
      uint64_t v126 = (uint64_t)v187;
      a2 = v182;
      uint64_t v10 = v175;
      if (v187 == (char *)v189)
      {
        char v168 = 3;
        uint64_t v169 = v172;
        uint64_t v170 = v173;
        unsigned __int8 v171 = 3;
LABEL_165:
        sub_251B286EC(v169, v170, v171);
        swift_bridgeObjectRelease();
        sub_251EB4FE0((uint64_t)v181, type metadata accessor for StateSnapshot.UpdateType);
        *(void *)a2 = v53;
        *(void *)(a2 + 8) = 0;
        *(unsigned char *)(a2 + 16) = v168;
LABEL_166:
        swift_storeEnumTagMultiPayload();
        return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v183 + 56))(a2, 0, 1, updated);
      }
    }
    sub_251B286EC(v172, v173, 3u);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_251EB4FE0((uint64_t)v181, type metadata accessor for StateSnapshot.UpdateType);
LABEL_160:
    uint64_t v162 = (uint64_t)v10;
LABEL_161:
    sub_251EB4FE0(v162, type metadata accessor for StateSnapshot.UpdateType);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v183 + 56))(a2, 1, 1, updated);
  }
  uint64_t v188 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E298);
  swift_bridgeObjectRelease();
  uint64_t v36 = sub_251F34DA0();
  uint64_t v179 = (uint64_t)&v172;
  uint64_t v37 = *(void *)(v36 - 8);
  uint64_t v38 = *(void *)(v37 + 64);
  MEMORY[0x270FA5388](v36);
  uint64_t v39 = *(void (**)(void))(v37 + 32);
  unint64_t v190 = (v38 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v191 = (char *)&v172 - v190;
  uint64_t v185 = v39;
  v39();
  uint64_t v192 = (void *)MEMORY[0x263F8EE88];
  uint64_t v187 = (char *)(v37 + 32);
  uint64_t v40 = (void (**)(char *, uint64_t))(v37 + 8);
  uint64_t v41 = *(void *)(v183 + 72);
  uint64_t v42 = swift_bridgeObjectRetain();
  uint64_t v43 = v184;
  while (1)
  {
    MEMORY[0x270FA5388](v42);
    id v44 = (char *)&v172 - v190;
    sub_251EB5040(v43, (uint64_t)v7, type metadata accessor for StateSnapshot.UpdateType);
    if (swift_getEnumCaseMultiPayload() != 6)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*v40)(v191, v36);
      sub_251EB4FE0((uint64_t)v181, type metadata accessor for StateSnapshot.UpdateType);
      goto LABEL_23;
    }
    uint64_t v45 = *(void *)&v7[*(int *)(v188 + 48)];
    ((void (*)(char *, char *, uint64_t))v185)(v44, v7, v36);
    if ((sub_251F34D70() & 1) == 0) {
      break;
    }
    sub_251AC17F4(v45);
    uint64_t v42 = ((uint64_t (*)(char *, uint64_t))*v40)(v44, v36);
    v43 += v41;
    uint64_t v189 = (void (*)(void))((char *)v189 - 1);
    if (!v189)
    {
      swift_bridgeObjectRelease();
      sub_251EB4FE0((uint64_t)v181, type metadata accessor for StateSnapshot.UpdateType);
      uint64_t v46 = *(int *)(v188 + 48);
      uint64_t v47 = v182;
      ((void (*)(uint64_t, char *, uint64_t))v185)(v182, v191, v36);
      *(void *)(v47 + v46) = v192;
      uint64_t v48 = v186;
      swift_storeEnumTagMultiPayload();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v183 + 56))(v47, 0, 1, v48);
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v51 = (uint64_t (*)(char *, uint64_t))*v40;
  (*v40)(v44, v36);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v51(v191, v36);
  uint64_t v7 = v181;
LABEL_23:
  sub_251EB4FE0((uint64_t)v7, type metadata accessor for StateSnapshot.UpdateType);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v183 + 56))(v182, 1, 1, v186);
}

uint64_t sub_251EB3510()
{
  uint64_t v1 = v0;
  sub_251F36CA0();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1E280(v1, (uint64_t)v4);
  uint64_t v5 = sub_251F34DA0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (v7 == 1)
  {
    sub_251F36CC0();
  }
  else
  {
    MEMORY[0x270FA5388](v7);
    uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v4, v5);
    sub_251F36CC0();
    sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
    sub_251F35610();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  _s7MergeIdVMa();
  sub_251F357B0();
  return sub_251F36D00();
}

uint64_t sub_251EB36E0()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1E280(v1, (uint64_t)v4);
  uint64_t v5 = sub_251F34DA0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (v7 == 1)
  {
    sub_251F36CC0();
  }
  else
  {
    MEMORY[0x270FA5388](v7);
    uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v4, v5);
    sub_251F36CC0();
    sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
    sub_251F35610();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  return sub_251F357B0();
}

uint64_t sub_251EB389C()
{
  uint64_t v1 = v0;
  sub_251F36CA0();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1E280(v1, (uint64_t)v4);
  uint64_t v5 = sub_251F34DA0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (v7 == 1)
  {
    sub_251F36CC0();
  }
  else
  {
    MEMORY[0x270FA5388](v7);
    uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v4, v5);
    sub_251F36CC0();
    sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
    sub_251F35610();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  sub_251F357B0();
  return sub_251F36D00();
}

uint64_t sub_251EB3A6C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251F35930();
  if (v11)
  {
    id v3 = objc_msgSend(v11, sel_service);
    if (v3)
    {
      uint64_t v4 = v3;
      id v5 = objc_msgSend(v3, sel_accessory);

      if (v5)
      {
        id v6 = objc_msgSend(v5, sel_home);

        if (v6)
        {
          id v7 = objc_msgSend(v6, sel_uniqueIdentifier);

          sub_251F34D80();
          uint64_t v8 = sub_251F34DA0();
          return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(a2, 0, 1, v8);
        }
      }
    }
  }
  uint64_t v10 = sub_251F34DA0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a2, 1, 1, v10);
}

BOOL sub_251EB3BF4(id *a1)
{
  id v1 = objc_msgSend(*a1, sel_service);
  id v2 = objc_msgSend(v1, sel_accessory);

  id v3 = objc_msgSend(v2, sel_home);
  if (v3) {

  }
  return v3 != 0;
}

unint64_t *sub_251EB3C88(uint64_t isStackAllocationSafe)
{
  id v2 = (unint64_t *)isStackAllocationSafe;
  v9[1] = *MEMORY[0x263EF8340];
  char v3 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v4 = (unint64_t)((1 << v3) + 63) >> 6;
  size_t v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    bzero((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    id v6 = sub_251EB3DE0((void *)((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0)), v4, (uint64_t)v2);
    if (v1) {
      swift_willThrow();
    }
    else {
      return v6;
    }
  }
  else
  {
    id v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    id v2 = sub_251EB3DE0((unint64_t *)v7, v4, (uint64_t)v2);
    MEMORY[0x2533AC760](v7, -1, -1);
  }
  return v2;
}

unint64_t *sub_251EB3DE0(unint64_t *result, uint64_t a2, uint64_t a3)
{
  uint64_t v29 = a2;
  uint64_t v30 = result;
  uint64_t v31 = 0;
  int64_t v3 = 0;
  uint64_t v35 = a3;
  uint64_t v6 = *(void *)(a3 + 64);
  uint64_t v4 = a3 + 64;
  uint64_t v5 = v6;
  uint64_t v7 = 1 << *(unsigned char *)(v4 - 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & v5;
  uint64_t v32 = v4;
  int64_t v33 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      uint64_t v37 = (v9 - 1) & v9;
      int64_t v38 = v3;
      unint64_t v10 = __clz(__rbit64(v9)) | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v24 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v24 >= v33) {
      return (unint64_t *)sub_251C64B70(v30, v29, v31, v35);
    }
    unint64_t v25 = *(void *)(v32 + 8 * v24);
    int64_t v26 = v3 + 1;
    if (!v25)
    {
      int64_t v26 = v3 + 2;
      if (v3 + 2 >= v33) {
        return (unint64_t *)sub_251C64B70(v30, v29, v31, v35);
      }
      unint64_t v25 = *(void *)(v32 + 8 * v26);
      if (!v25)
      {
        int64_t v26 = v3 + 3;
        if (v3 + 3 >= v33) {
          return (unint64_t *)sub_251C64B70(v30, v29, v31, v35);
        }
        unint64_t v25 = *(void *)(v32 + 8 * v26);
        if (!v25) {
          break;
        }
      }
    }
LABEL_20:
    uint64_t v37 = (v25 - 1) & v25;
    int64_t v38 = v26;
    unint64_t v10 = __clz(__rbit64(v25)) + (v26 << 6);
LABEL_5:
    uint64_t v11 = sub_251F34DA0();
    uint64_t v36 = &v29;
    uint64_t v12 = *(void *)(v11 - 8);
    MEMORY[0x270FA5388](v11);
    uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v15 = v35;
    uint64_t v17 = *(void (**)(char *, unint64_t, uint64_t))(v12 + 16);
    v17(v14, *(void *)(v35 + 48) + *(void *)(v16 + 72) * v10, v11);
    uint64_t v18 = *(void *)(v15 + 56);
    unint64_t v34 = v10;
    uint64_t v19 = *(void *)(v18 + 8 * v10);
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA5188);
    uint64_t v21 = v20 - 8;
    MEMORY[0x270FA5388](v20);
    uint64_t v23 = (char *)&v29 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
    v17(v23, (unint64_t)v14, v11);
    *(void *)&v23[*(int *)(v21 + 56)] = v19;
    sub_251A1B064((uint64_t)v23, &qword_269BA5188);
    uint64_t result = (unint64_t *)(*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    unint64_t v9 = v37;
    int64_t v3 = v38;
    if (v19 >= 6)
    {
      *(unint64_t *)((char *)v30 + ((v34 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v34;
      if (__OFADD__(v31++, 1))
      {
        __break(1u);
        return (unint64_t *)sub_251C64B70(v30, v29, v31, v35);
      }
    }
  }
  uint64_t v27 = v3 + 4;
  if (v3 + 4 >= v33) {
    return (unint64_t *)sub_251C64B70(v30, v29, v31, v35);
  }
  unint64_t v25 = *(void *)(v32 + 8 * v27);
  if (v25)
  {
    int64_t v26 = v3 + 4;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v26 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v26 >= v33) {
      return (unint64_t *)sub_251C64B70(v30, v29, v31, v35);
    }
    unint64_t v25 = *(void *)(v32 + 8 * v26);
    ++v27;
    if (v25) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_251EB4118(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t v5 = *(void *)(*(void *)(v4 - 8) + 64);
  MEMORY[0x270FA5388](v4 - 8);
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v7 = (char *)v31 - v6;
  uint64_t v32 = a1;
  uint64_t v8 = sub_251A1E280(a1, (uint64_t)v31 - v6);
  MEMORY[0x270FA5388](v8);
  unint64_t v9 = (char *)v31 - v6;
  uint64_t v33 = a2;
  sub_251A1E280(a2, (uint64_t)v31 - v6);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E6B8);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (uint64_t)&v13[*(int *)(v11 + 56)];
  sub_251A1E280((uint64_t)v31 - v6, (uint64_t)v13);
  sub_251A1E280((uint64_t)v31 - v6, v14);
  uint64_t v15 = sub_251F34DA0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  uint64_t v18 = v17(v13, 1, v15);
  if (v18 != 1)
  {
    v31[1] = v31;
    MEMORY[0x270FA5388](v18);
    uint64_t v19 = (char *)v31 - v6;
    sub_251A1E280((uint64_t)v13, (uint64_t)v31 - v6);
    uint64_t v20 = v17((char *)v14, 1, v15);
    if (v20 != 1)
    {
      MEMORY[0x270FA5388](v20);
      uint64_t v22 = (char *)v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, uint64_t, uint64_t))(v16 + 32))(v22, v14, v15);
      sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
      char v23 = sub_251F35650();
      int64_t v24 = *(void (**)(char *, uint64_t))(v16 + 8);
      v24(v22, v15);
      sub_251A1B064((uint64_t)v9, &qword_26B21FF90);
      sub_251A1B064((uint64_t)v7, &qword_26B21FF90);
      v24(v19, v15);
      sub_251A1B064((uint64_t)v13, &qword_26B21FF90);
      if (v23) {
        goto LABEL_8;
      }
LABEL_11:
      char v29 = 0;
      return v29 & 1;
    }
    sub_251A1B064((uint64_t)v31 - v6, &qword_26B21FF90);
    sub_251A1B064((uint64_t)v31 - v6, &qword_26B21FF90);
    (*(void (**)(char *, uint64_t))(v16 + 8))((char *)v31 - v6, v15);
LABEL_6:
    sub_251A1B064((uint64_t)v13, &qword_26B21E6B8);
    goto LABEL_11;
  }
  sub_251A1B064((uint64_t)v31 - v6, &qword_26B21FF90);
  sub_251A1B064((uint64_t)v31 - v6, &qword_26B21FF90);
  if (v17((char *)v14, 1, v15) != 1) {
    goto LABEL_6;
  }
  sub_251A1B064((uint64_t)v13, &qword_26B21FF90);
LABEL_8:
  uint64_t v25 = *(int *)(_s7MergeIdVMa() + 20);
  int64_t v26 = (void *)(v32 + v25);
  uint64_t v27 = *(void *)(v32 + v25 + 8);
  uint64_t v28 = (void *)(v33 + v25);
  if (*v26 == *v28 && v27 == v28[1]) {
    char v29 = 1;
  }
  else {
    char v29 = sub_251F36B10();
  }
  return v29 & 1;
}

unint64_t sub_251EB44E4(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t *a6)
{
  uint64_t v37 = a4;
  uint64_t v35 = a2;
  uint64_t v36 = a3;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2202A8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (void *)((char *)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  uint64_t v13 = MEMORY[0x270FA5388](updated);
  uint64_t v33 = (uint64_t)v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v32 = (uint64_t)v28 - v16;
  uint64_t v17 = *(void *)(a1 + 16);
  if (!v17) {
    return MEMORY[0x263F8EE78];
  }
  unint64_t v30 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = a1 + v30;
  uint64_t v19 = *(void *)(v15 + 72);
  uint64_t v20 = (unsigned int (**)(void *, uint64_t, uint64_t))(v15 + 48);
  v28[1] = a1;
  uint64_t v21 = v19;
  swift_bridgeObjectRetain();
  unint64_t v22 = MEMORY[0x263F8EE78];
  uint64_t v31 = a5;
  uint64_t v29 = v21;
  do
  {
    sub_251EB1558(v18, v35, v36, v37, a5, a6, v12);
    if (v6)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v22;
    }
    if ((*v20)(v12, 1, updated) == 1)
    {
      sub_251A1B064((uint64_t)v12, &qword_26B2202A8);
    }
    else
    {
      uint64_t v23 = v32;
      sub_251EB4F78((uint64_t)v12, v32, type metadata accessor for StateSnapshot.UpdateType);
      sub_251EB4F78(v23, v33, type metadata accessor for StateSnapshot.UpdateType);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v22 = sub_251F10AFC(0, *(void *)(v22 + 16) + 1, 1, v22);
      }
      unint64_t v25 = *(void *)(v22 + 16);
      unint64_t v24 = *(void *)(v22 + 24);
      if (v25 >= v24 >> 1) {
        unint64_t v22 = sub_251F10AFC(v24 > 1, v25 + 1, 1, v22);
      }
      *(void *)(v22 + 16) = v25 + 1;
      uint64_t v26 = v22 + v30 + v25 * v29;
      uint64_t v21 = v29;
      sub_251EB4F78(v33, v26, type metadata accessor for StateSnapshot.UpdateType);
      a5 = v31;
    }
    v18 += v21;
    --v17;
  }
  while (v17);
  swift_bridgeObjectRelease();
  return v22;
}

uint64_t _s13HomeDataModel13StateSnapshotV10UpdateTypeO6unique7updates2inSayAEGAI_SaySo6HMHomeCGtFZ_0(void *a1, unint64_t a2)
{
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  uint64_t v4 = *(void *)(updated - 8);
  uint64_t v5 = MEMORY[0x270FA5388](updated);
  uint64_t v67 = (uint64_t)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v61 = (id *)((char *)&v59 - v8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v62 = (char *)&v59 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v69 = (uint64_t)&v59 - v11;
  if (a2 >> 62) {
    goto LABEL_26;
  }
  uint64_t v12 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  uint64_t v60 = a1;
  if (!v12)
  {
LABEL_27:
    swift_bridgeObjectRelease();
    uint64_t v13 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_28;
  }
LABEL_3:
  uint64_t v59 = v4;
  unint64_t v65 = a2 & 0xC000000000000001;
  uint64_t v13 = (void *)MEMORY[0x263F8EE80];
  uint64_t v4 = 4;
  uint64_t v63 = v12;
  unint64_t v64 = a2;
  while (1)
  {
    uint64_t v15 = v4 - 4;
    if (v65)
    {
      uint64_t v16 = (void *)MEMORY[0x2533AB3A0](v4 - 4, a2);
      uint64_t v17 = v4 - 3;
      if (__OFADD__(v15, 1)) {
        goto LABEL_23;
      }
    }
    else
    {
      uint64_t v16 = *(id *)(a2 + 8 * v4);
      uint64_t v17 = v4 - 3;
      if (__OFADD__(v15, 1))
      {
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
LABEL_26:
        swift_bridgeObjectRetain();
        uint64_t v12 = sub_251F366C0();
        uint64_t v60 = a1;
        if (!v12) {
          goto LABEL_27;
        }
        goto LABEL_3;
      }
    }
    uint64_t v68 = (void *)v17;
    a1 = v16;
    id v18 = objc_msgSend(v16, sel_uniqueIdentifier, v59);
    uint64_t v19 = sub_251F34DA0();
    uint64_t v20 = *(void *)(v19 - 8);
    MEMORY[0x270FA5388](v19);
    unint64_t v22 = (char *)&v59 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_251F34D80();

    uint64_t v23 = (uint64_t)v13;
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v75 = (void *)v23;
    unint64_t v26 = sub_2519FE584((uint64_t)v22);
    uint64_t v27 = *(void *)(v23 + 16);
    BOOL v28 = (v25 & 1) == 0;
    uint64_t v29 = v27 + v28;
    if (__OFADD__(v27, v28)) {
      goto LABEL_24;
    }
    a2 = v25;
    if (*(void *)(v23 + 24) < v29) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v13 = v75;
      if ((v25 & 1) == 0) {
        goto LABEL_18;
      }
    }
    else
    {
      sub_251A16568();
      uint64_t v13 = v75;
      if ((a2 & 1) == 0)
      {
LABEL_18:
        v13[(v26 >> 6) + 8] |= 1 << v26;
        (*(void (**)(unint64_t, char *, uint64_t))(v20 + 16))(v13[6] + *(void *)(v20 + 72) * v26, v22, v19);
        *(void *)(v13[7] + 8 * v26) = a1;
        uint64_t v32 = v13[2];
        BOOL v33 = __OFADD__(v32, 1);
        uint64_t v34 = v32 + 1;
        if (v33) {
          goto LABEL_25;
        }
        v13[2] = v34;
        goto LABEL_5;
      }
    }
LABEL_4:
    uint64_t v14 = v13[7];

    *(void *)(v14 + 8 * v26) = a1;
LABEL_5:
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
    ++v4;
    a2 = v64;
    if (v68 == (void *)v63)
    {
      swift_bridgeObjectRelease();
      uint64_t v4 = v59;
      a1 = v60;
LABEL_28:
      uint64_t v74 = MEMORY[0x263F8EE80];
      uint64_t v75 = (void *)MEMORY[0x263F8EE88];
      uint64_t v35 = MEMORY[0x263F8EE78];
      unint64_t v73 = sub_2519FB68C(MEMORY[0x263F8EE78]);
      uint64_t v36 = a1[2];
      if (v36)
      {
        uint64_t v37 = (uint64_t)a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
        uint64_t v38 = *(void *)(v4 + 72);
        swift_bridgeObjectRetain();
        uint64_t v39 = v36;
        do
        {
          sub_251EAF8BC(v37, (void (*)(void *@<X8>))&v74, (uint64_t)&v75, (uint64_t)v13, &v73);
          v37 += v38;
          --v39;
        }
        while (v39);
        swift_bridgeObjectRelease();
      }
      uint64_t v40 = swift_bridgeObjectRetain();
      uint64_t v41 = sub_251EB3C88(v40);
      swift_bridgeObjectRelease();
      uint64_t v42 = sub_251EDEBB8((uint64_t)v41);
      v72[0] = 0;
      uint64_t v71 = v35;
      swift_bridgeObjectRetain();
      if (!v36)
      {
LABEL_49:
        swift_bridgeObjectRelease();
        uint64_t v55 = MEMORY[0x263F8EE88];
        uint64_t v71 = MEMORY[0x263F8EE88];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v56 = sub_251EB44E4(v35, (uint64_t *)&v75, v42, (uint64_t)v13, &v71, (uint64_t *)&v73);
        swift_release();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        uint64_t v70 = v55;
        unint64_t v57 = sub_251EAF120(v56, v72, &v70);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v57;
      }
      unint64_t v65 = v42;
      uint64_t v68 = v13;
      char v43 = 0;
      uint64_t v44 = v4;
      unint64_t v45 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
      uint64_t v46 = *(void *)(v44 + 72);
      uint64_t v47 = (uint64_t)a1 + v45;
      uint64_t v48 = MEMORY[0x263F8EE78];
      uint64_t v49 = (uint64_t)v62;
      uint64_t v50 = v69;
      while (1)
      {
        sub_251EB5040(v47, v50, type metadata accessor for StateSnapshot.UpdateType);
        sub_251EB5040(v50, v49, type metadata accessor for StateSnapshot.UpdateType);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload != 9)
        {
          if (EnumCaseMultiPayload) {
            goto LABEL_40;
          }
          uint64_t v52 = v61;
          sub_251EB5040(v49, (uint64_t)v61, type metadata accessor for StateSnapshot.UpdateType);
          if (*v52) {
            break;
          }
        }
        sub_251EB4FE0(v49, type metadata accessor for StateSnapshot.UpdateType);
        if ((v43 & 1) == 0)
        {
          char v43 = 1;
          v72[0] = 1;
          goto LABEL_43;
        }
        sub_251EB4FE0(v69, type metadata accessor for StateSnapshot.UpdateType);
        char v43 = 1;
LABEL_35:
        v47 += v46;
        if (!--v36)
        {
          uint64_t v35 = v71;
          uint64_t v13 = v68;
          uint64_t v42 = v65;
          goto LABEL_49;
        }
      }

LABEL_40:
      sub_251EB4FE0(v49, type metadata accessor for StateSnapshot.UpdateType);
LABEL_43:
      sub_251EB4F78(v69, v67, type metadata accessor for StateSnapshot.UpdateType);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_251A3E7B0(0, *(void *)(v48 + 16) + 1, 1);
      }
      uint64_t v48 = v71;
      unint64_t v54 = *(void *)(v71 + 16);
      unint64_t v53 = *(void *)(v71 + 24);
      if (v54 >= v53 >> 1)
      {
        sub_251A3E7B0(v53 > 1, v54 + 1, 1);
        uint64_t v48 = v71;
      }
      *(void *)(v48 + 16) = v54 + 1;
      sub_251EB4F78(v67, v48 + v45 + v54 * v46, type metadata accessor for StateSnapshot.UpdateType);
      uint64_t v49 = (uint64_t)v62;
      goto LABEL_35;
    }
  }
  sub_251A0973C(v29, isUniquelyReferenced_nonNull_native);
  unint64_t v30 = sub_2519FE584((uint64_t)v22);
  if ((a2 & 1) == (v31 & 1))
  {
    unint64_t v26 = v30;
    uint64_t v13 = v75;
    if ((a2 & 1) == 0) {
      goto LABEL_18;
    }
    goto LABEL_4;
  }
  uint64_t result = sub_251F36BA0();
  __break(1u);
  return result;
}

uint64_t _s7MergeIdVMa()
{
  uint64_t result = qword_269BA5190;
  if (!qword_269BA5190) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_251EB4F78(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_251EB4FE0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_251EB5040(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t *sub_251EB50A8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_251F34DA0();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = *(int *)(a3 + 20);
    uint64_t v12 = (uint64_t *)((char *)a1 + v11);
    uint64_t v13 = (uint64_t *)((char *)a2 + v11);
    uint64_t v14 = v13[1];
    *uint64_t v12 = *v13;
    v12[1] = v14;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_251EB522C(uint64_t a1)
{
  uint64_t v2 = sub_251F34DA0();
  uint64_t v3 = *(void *)(v2 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2)) {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }
  return swift_bridgeObjectRelease();
}

char *sub_251EB52FC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = *((void *)v11 + 1);
  *(void *)uint64_t v10 = *(void *)v11;
  *((void *)v10 + 1) = v12;
  swift_bridgeObjectRetain();
  return a1;
}

char *sub_251EB5430(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  *(void *)uint64_t v13 = *(void *)v14;
  *((void *)v13 + 1) = *((void *)v14 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_251EB55DC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  *(_OWORD *)&a1[*(int *)(a3 + 20)] = *(_OWORD *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *sub_251EB5704(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v16 = *(void *)v14;
  uint64_t v15 = *((void *)v14 + 1);
  *(void *)uint64_t v13 = v16;
  *((void *)v13 + 1) = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_251EB58A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251EB58B4);
}

uint64_t sub_251EB58B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_251EB597C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251EB5990);
}

uint64_t sub_251EB5990(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

void sub_251EB5A54()
{
  sub_251A24BB4();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_251EB5AEC()
{
  unint64_t result = qword_269BA51A0;
  if (!qword_269BA51A0)
  {
    _s7MergeIdVMa();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA51A0);
  }
  return result;
}

uint64_t sub_251EB5B44(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  unint64_t v4 = a3;
  uint64_t v19 = MEMORY[0x263F8EE78];
  if (a3 >> 62) {
    goto LABEL_18;
  }
  uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v7)
  {
    while (1)
    {
      unint64_t v8 = 0;
      uint64_t v16 = v4 & 0xFFFFFFFFFFFFFF8;
      unint64_t v17 = v4 & 0xC000000000000001;
      unint64_t v15 = v4;
      while (v17)
      {
        id v9 = (id)MEMORY[0x2533AB3A0](v8, v4);
LABEL_9:
        unint64_t v10 = v9;
        unint64_t v11 = v8 + 1;
        if (__OFADD__(v8, 1)) {
          goto LABEL_17;
        }
        id v18 = v9;
        uint64_t v12 = a2;
        char v13 = a1(&v18);
        if (v3)
        {
          swift_bridgeObjectRelease();

          swift_release();
          return v12;
        }
        if (v13)
        {
          sub_251F364F0();
          sub_251F36530();
          unint64_t v4 = v15;
          sub_251F36540();
          sub_251F36500();
        }
        else
        {
        }
        ++v8;
        if (v11 == v7)
        {
          uint64_t v12 = v19;
          goto LABEL_20;
        }
      }
      if (v8 < *(void *)(v16 + 16)) {
        break;
      }
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      uint64_t v7 = sub_251F366C0();
      if (!v7) {
        goto LABEL_19;
      }
    }
    id v9 = *(id *)(v4 + 8 * v8 + 32);
    goto LABEL_9;
  }
LABEL_19:
  uint64_t v12 = MEMORY[0x263F8EE78];
LABEL_20:
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_251EB5CF0(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  return sub_251EB5DC0(a1, a2, a3, (uint64_t (*)(void))type metadata accessor for StaticService, (uint64_t (*)(void))type metadata accessor for StaticService, MEMORY[0x263F8EEA0], (void (*)(BOOL, uint64_t, uint64_t))sub_251A3E3E8);
}

uint64_t sub_251EB5D58(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  return sub_251EB5DC0(a1, a2, a3, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice, MEMORY[0x263F8EED8], (void (*)(BOOL, uint64_t, uint64_t))sub_251A3E71C);
}

uint64_t sub_251EB5DC0(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), void (*a6)(uint64_t), void (*a7)(BOOL, uint64_t, uint64_t))
{
  uint64_t v27 = a7;
  BOOL v33 = a1;
  uint64_t v34 = a2;
  uint64_t v11 = a4(0);
  uint64_t v32 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v31 = (uint64_t)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v25 - v15;
  uint64_t v17 = MEMORY[0x263F8EE78];
  uint64_t v35 = MEMORY[0x263F8EE78];
  uint64_t v30 = *(void *)(a3 + 16);
  if (v30)
  {
    unint64_t v26 = a6;
    unint64_t v18 = 0;
    uint64_t v19 = MEMORY[0x263F8EE78];
    BOOL v28 = a5;
    uint64_t v29 = a3;
    while (v18 < *(void *)(a3 + 16))
    {
      unint64_t v20 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
      uint64_t v21 = *(void *)(v32 + 72);
      sub_251EB7344(a3 + v20 + v21 * v18, (uint64_t)v16, a5);
      uint64_t v17 = v34;
      char v22 = v33(v16);
      if (v7)
      {
        sub_251EB7414((uint64_t)v16, a5);
        swift_release();
        v26(a3);
        return v17;
      }
      if (v22)
      {
        sub_251EB73AC((uint64_t)v16, v31, a5);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          v27(0, *(void *)(v19 + 16) + 1, 1);
        }
        uint64_t v19 = v35;
        unint64_t v24 = *(void *)(v35 + 16);
        unint64_t v23 = *(void *)(v35 + 24);
        if (v24 >= v23 >> 1)
        {
          v27(v23 > 1, v24 + 1, 1);
          uint64_t v19 = v35;
        }
        *(void *)(v19 + 16) = v24 + 1;
        a5 = v28;
        uint64_t result = sub_251EB73AC(v31, v19 + v20 + v24 * v21, v28);
        a3 = v29;
      }
      else
      {
        uint64_t result = sub_251EB7414((uint64_t)v16, a5);
      }
      if (v30 == ++v18)
      {
        uint64_t v17 = v35;
        a6 = v26;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    a6(a3);
    return v17;
  }
  return result;
}

uint64_t sub_251EB6038(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StaticAccessory(0);
  uint64_t v25 = *(void *)(v2 - 8);
  uint64_t v26 = v2;
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  int v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v22 - v6;
  uint64_t v28 = MEMORY[0x263F8EE78];
  uint64_t v8 = *(void *)(a1 + 56);
  uint64_t v23 = a1 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v8;
  int64_t v24 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v27 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v13 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v14 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v15 = v14 | (v13 << 6);
      goto LABEL_5;
    }
    if (__OFADD__(v13++, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v13 >= v24) {
      goto LABEL_24;
    }
    unint64_t v20 = *(void *)(v23 + 8 * v13);
    if (!v20) {
      break;
    }
LABEL_19:
    unint64_t v11 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v13 << 6);
LABEL_5:
    sub_251EB7344(*(void *)(v27 + 48) + *(void *)(v25 + 72) * v15, (uint64_t)v7, type metadata accessor for StaticAccessory);
    uint64_t v16 = sub_251EB73AC((uint64_t)v7, (uint64_t)v5, type metadata accessor for StaticAccessory);
    uint64_t v17 = *(void *)&v5[*(int *)(v26 + 80)];
    MEMORY[0x270FA5388](v16);
    *(&v22 - 2) = (uint64_t)v5;
    swift_bridgeObjectRetain();
    unint64_t v18 = sub_251A51E88((void (*)(char *))sub_251AB2CBC, (uint64_t)(&v22 - 4), v17);
    swift_bridgeObjectRelease();
    sub_251EB7414((uint64_t)v5, type metadata accessor for StaticAccessory);
    uint64_t result = sub_251ED6260(v18);
  }
  int64_t v21 = v13 + 1;
  if (v13 + 1 >= v24) {
    goto LABEL_24;
  }
  unint64_t v20 = *(void *)(v23 + 8 * v21);
  if (v20) {
    goto LABEL_18;
  }
  int64_t v21 = v13 + 2;
  if (v13 + 2 >= v24) {
    goto LABEL_24;
  }
  unint64_t v20 = *(void *)(v23 + 8 * v21);
  if (v20) {
    goto LABEL_18;
  }
  int64_t v21 = v13 + 3;
  if (v13 + 3 >= v24) {
    goto LABEL_24;
  }
  unint64_t v20 = *(void *)(v23 + 8 * v21);
  if (v20) {
    goto LABEL_18;
  }
  int64_t v21 = v13 + 4;
  if (v13 + 4 >= v24)
  {
LABEL_24:
    swift_release();
    return v28;
  }
  unint64_t v20 = *(void *)(v23 + 8 * v21);
  if (v20)
  {
LABEL_18:
    int64_t v13 = v21;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v13 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v13 >= v24) {
      goto LABEL_24;
    }
    unint64_t v20 = *(void *)(v23 + 8 * v13);
    ++v21;
    if (v20) {
      goto LABEL_19;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t static UmbrellaCategoryInformation.categoryStaticAccessories(for:from:)(unsigned __int8 *a1, uint64_t a2)
{
  unsigned __int8 v3 = *a1;
  swift_bridgeObjectRetain();
  return sub_251AAD29C(a2, v3);
}

uint64_t UmbrellaCategoryInformation.activeServiceCount.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (*(uint64_t (**)(void))(a2 + 48))();
  uint64_t v6 = sub_251AAD138(v5);
  void v9[2] = a1;
  v9[3] = a2;
  uint64_t v10 = v2;
  uint64_t v7 = sub_251AA8A60(0, (void (*)(uint64_t *, char *))sub_251EB7298, (uint64_t)v9, v6);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t UmbrellaCategoryInformation.categoryStaticServicesSkippingNonContributingToHomeStatus.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v36 = type metadata accessor for StaticService();
  uint64_t v4 = *(void *)(v36 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v36);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v32 - v9;
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  int64_t v13 = (char *)&v32 - v12;
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v35 = (uint64_t)&v32 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v32 - v16;
  uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 48))(a1, a2);
  uint64_t v19 = sub_251AAD138(v18);
  uint64_t v20 = sub_251EB6038(v19);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v22 = MEMORY[0x263F8EE78];
  uint64_t v37 = MEMORY[0x263F8EE78];
  uint64_t v34 = *(void *)(v20 + 16);
  if (v34)
  {
    uint64_t v32 = v10;
    BOOL v33 = v7;
    unint64_t v23 = 0;
    uint64_t v24 = MEMORY[0x263F8EE78];
    while (v23 < *(void *)(v20 + 16))
    {
      unint64_t v25 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
      uint64_t v26 = *(void *)(v4 + 72);
      sub_251EB7344(v20 + v25 + v26 * v23, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for StaticService);
      if (v17[*(int *)(v36 + 80)] == 1)
      {
        sub_251EB73AC((uint64_t)v17, v35, (uint64_t (*)(void))type metadata accessor for StaticService);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_251A3E3E8(0, *(void *)(v24 + 16) + 1, 1);
        }
        uint64_t v24 = v37;
        unint64_t v28 = *(void *)(v37 + 16);
        unint64_t v27 = *(void *)(v37 + 24);
        if (v28 >= v27 >> 1)
        {
          sub_251A3E3E8(v27 > 1, v28 + 1, 1);
          uint64_t v24 = v37;
        }
        *(void *)(v24 + 16) = v28 + 1;
        uint64_t result = sub_251EB73AC(v35, v24 + v25 + v28 * v26, (uint64_t (*)(void))type metadata accessor for StaticService);
      }
      else
      {
        uint64_t result = sub_251EB7414((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for StaticService);
      }
      if (v34 == ++v23)
      {
        uint64_t v22 = v37;
        uint64_t v10 = v32;
        uint64_t v7 = v33;
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease();
    uint64_t v37 = MEMORY[0x263F8EE88];
    uint64_t v29 = *(void *)(v22 + 16);
    if (v29)
    {
      uint64_t v30 = v22 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
      uint64_t v31 = *(void *)(v4 + 72);
      swift_retain();
      do
      {
        sub_251EB7344(v30, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for StaticService);
        sub_251EB7344((uint64_t)v13, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticService);
        sub_251A641C8((uint64_t)v10, (uint64_t)v7);
        sub_251EB7414((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticService);
        sub_251EB7414((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for StaticService);
        v30 += v31;
        --v29;
      }
      while (v29);
      swift_release_n();
      return v37;
    }
    else
    {
      swift_release();
      return MEMORY[0x263F8EE88];
    }
  }
  return result;
}

uint64_t UmbrellaCategoryInformation.categoryStaticAccessoriesSkippingNonContributingToHomeStatus.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = (*(uint64_t (**)(void))(a2 + 48))();
  return sub_251AAD138(v2);
}

uint64_t UmbrellaCategoryInformation.statusItems.getter()
{
  return MEMORY[0x263F8EE78];
}

uint64_t UmbrellaCategoryInformation.umbrellaCategory.getter()
{
  return sub_251F36420();
}

uint64_t UmbrellaCategoryInformation.name.getter()
{
  return UmbrellaCategory.localizedDescription.getter();
}

uint64_t UmbrellaCategoryInformation.foregroundColor.getter()
{
  sub_251F36420();
  switch(v1)
  {
    case 0:
      uint64_t result = sub_251F35310();
      break;
    case 2:
      uint64_t result = sub_251F353A0();
      break;
    case 3:
      uint64_t result = sub_251F35370();
      break;
    case 4:
      uint64_t result = sub_251F35340();
      break;
    case 6:
      uint64_t result = sub_251F35300();
      break;
    default:
      uint64_t result = sub_251F35360();
      break;
  }
  return result;
}

uint64_t UmbrellaCategoryInformation.iconSymbol.getter()
{
  sub_251F36420();
  uint64_t result = 0x6564616C626E6166;
  switch(v2)
  {
    case 0:
      return result;
    case 2:
      uint64_t result = 0x6C7562746867696CLL;
      break;
    case 3:
      uint64_t result = 0xD00000000000001CLL;
      break;
    case 4:
      unsigned int v1 = 1801678700;
      goto LABEL_7;
    case 6:
      unsigned int v1 = 1886351972;
LABEL_7:
      uint64_t result = v1 | 0x6C69662E00000000;
      break;
    default:
      uint64_t result = 0xD00000000000001DLL;
      break;
  }
  return result;
}

uint64_t sub_251EB6A1C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = *(void *)(a2 + *(int *)(type metadata accessor for StaticAccessory(0) + 80));
  uint64_t v16 = a2;
  swift_bridgeObjectRetain();
  unint64_t v11 = sub_251A51E88((void (*)(char *))sub_251AB3DF0, (uint64_t)v15, v10);
  swift_bridgeObjectRelease();
  v14[2] = a4;
  v14[3] = a5;
  long long v14[4] = a3;
  uint64_t v12 = *(void *)(sub_251EB5DC0((uint64_t (*)(char *))sub_251EB7474, (uint64_t)v14, v11, (uint64_t (*)(void))type metadata accessor for StaticService, (uint64_t (*)(void))type metadata accessor for StaticService, MEMORY[0x263F8EEA0], (void (*)(BOOL, uint64_t, uint64_t))sub_251A3E3E8)+ 16);
  uint64_t result = swift_bridgeObjectRelease();
  if (__OFADD__(*a1, v12)) {
    __break(1u);
  }
  else {
    *a1 += v12;
  }
  return result;
}

BOOL sub_251EB6B60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v20[1] = a3;
  uint64_t v4 = type metadata accessor for StaticService();
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)v20 - v9;
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  int64_t v13 = (char *)v20 - v12;
  int v14 = *(unsigned __int8 *)(a1 + *(int *)(v11 + 96));
  sub_251EB7344(a1, (uint64_t)v20 - v12, (uint64_t (*)(void))type metadata accessor for StaticService);
  if (v14 == 53) {
    LOBYTE(v14) = v13[*(int *)(v4 + 88)];
  }
  sub_251EB7414((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for StaticService);
  char v22 = v14;
  ServiceKind.umbrellaCategory.getter(&v23);
  char v15 = v23;
  sub_251F36420();
  char v16 = sub_251DB1CC8(v15, v21);
  sub_251EB7344(a1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticService);
  if (v16)
  {
    int v17 = v10[*(int *)(v4 + 80)];
    sub_251EB7414((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticService);
    sub_251EB7344(a1, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticService);
    BOOL v18 = v17 == 1 && StaticService.isActivated.getter();
  }
  else
  {
    sub_251EB7414((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticService);
    sub_251EB7344(a1, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticService);
    BOOL v18 = 0;
  }
  sub_251EB7414((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticService);
  return v18;
}

BOOL sub_251EB6D9C(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v44 = type metadata accessor for StaticService();
  uint64_t v41 = *(void *)(v44 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v44);
  uint64_t v43 = (uint64_t)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v42 = (char *)&v29 - v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v29 - v9;
  uint64_t v11 = *(void *)(a1 + *(int *)(type metadata accessor for StaticAccessory(0) + 80));
  uint64_t v46 = a1;
  swift_bridgeObjectRetain();
  unint64_t v12 = sub_251A51E88((void (*)(char *))sub_251AB3DF0, (uint64_t)v45, v11);
  uint64_t v30 = v2;
  swift_bridgeObjectRelease();
  uint64_t v13 = MEMORY[0x263F8EE78];
  uint64_t v49 = MEMORY[0x263F8EE78];
  uint64_t v40 = *(void *)(v12 + 16);
  if (v40)
  {
    unint64_t v14 = 0;
    uint64_t v38 = a2;
    unint64_t v39 = (unint64_t)"00-8000-0026BB765291";
    uint64_t v36 = "73-A058-C5E64BC487B2";
    uint64_t v37 = "13-AA62-01754F256DD5";
    uint64_t v34 = "60-AD68-D91053B75F44";
    uint64_t v35 = "CE-986D-63B28F62C9E3";
    uint64_t v32 = "17-A590-755E1AAC02AE";
    BOOL v33 = "7E-BE63-1D00B1500545";
    uint64_t v31 = "73-8FBD-0E8978A33403";
    uint64_t v15 = (uint64_t)v42;
    while (1)
    {
      if (v14 >= *(void *)(v12 + 16))
      {
        __break(1u);
        JUMPOUT(0x251EB7258);
      }
      unint64_t v16 = (*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
      uint64_t v17 = *(void *)(v41 + 72);
      unint64_t v18 = v12;
      sub_251EB7344(v12 + v16 + v17 * v14, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticService);
      int v19 = v10[*(int *)(v44 + 96)];
      sub_251EB7344((uint64_t)v10, v15, (uint64_t (*)(void))type metadata accessor for StaticService);
      if (v19 == 53) {
        LOBYTE(v19) = *(unsigned char *)(v15 + *(int *)(v44 + 88));
      }
      ++v14;
      sub_251EB7414(v15, (uint64_t (*)(void))type metadata accessor for StaticService);
      char v47 = v19;
      ServiceKind.umbrellaCategory.getter(v48);
      unint64_t v20 = v39 | 0x8000000000000000;
      switch(v48[0])
      {
        case 1:
          char v21 = v37;
          goto LABEL_16;
        case 2:
          char v21 = v36;
          goto LABEL_16;
        case 3:
          char v21 = v35;
          goto LABEL_16;
        case 4:
          char v21 = v34;
          goto LABEL_16;
        case 5:
          char v21 = v33;
          goto LABEL_16;
        case 6:
          char v21 = v32;
          goto LABEL_16;
        case 7:
          char v21 = v31;
LABEL_16:
          unint64_t v20 = (unint64_t)v21 | 0x8000000000000000;
          break;
        default:
          break;
      }
      unint64_t v22 = v39 | 0x8000000000000000;
      switch(v38)
      {
        case 1:
          char v23 = v37;
          goto LABEL_25;
        case 2:
          char v23 = v36;
          goto LABEL_25;
        case 3:
          char v23 = v35;
          goto LABEL_25;
        case 4:
          char v23 = v34;
          goto LABEL_25;
        case 5:
          char v23 = v33;
          goto LABEL_25;
        case 6:
          char v23 = v32;
          goto LABEL_25;
        case 7:
          char v23 = v31;
LABEL_25:
          unint64_t v22 = (unint64_t)v23 | 0x8000000000000000;
          break;
        default:
          break;
      }
      if (v20 == v22) {
        break;
      }
      char v24 = sub_251F36B10();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v24) {
        goto LABEL_30;
      }
      sub_251EB7414((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticService);
LABEL_4:
      unint64_t v12 = v18;
      uint64_t v15 = (uint64_t)v42;
      if (v40 == v14)
      {
        uint64_t v13 = v49;
        goto LABEL_36;
      }
    }
    swift_bridgeObjectRelease_n();
LABEL_30:
    sub_251EB73AC((uint64_t)v10, v43, (uint64_t (*)(void))type metadata accessor for StaticService);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_251A3E3E8(0, *(void *)(v13 + 16) + 1, 1);
    }
    uint64_t v13 = v49;
    unint64_t v26 = *(void *)(v49 + 16);
    unint64_t v25 = *(void *)(v49 + 24);
    if (v26 >= v25 >> 1)
    {
      sub_251A3E3E8(v25 > 1, v26 + 1, 1);
      uint64_t v13 = v49;
    }
    *(void *)(v13 + 16) = v26 + 1;
    sub_251EB73AC(v43, v13 + v16 + v26 * v17, (uint64_t (*)(void))type metadata accessor for StaticService);
    goto LABEL_4;
  }
LABEL_36:
  swift_bridgeObjectRelease();
  uint64_t v27 = *(void *)(v13 + 16);
  swift_release();
  return v27 != 0;
}

uint64_t sub_251EB7298(void *a1, uint64_t a2)
{
  return sub_251EB6A1C(a1, a2, v2[4], v2[2], v2[3]);
}

uint64_t dispatch thunk of UmbrellaCategoryInformation.stateSnapshot.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of UmbrellaCategoryInformation.summary.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of UmbrellaCategoryInformation.shortSummary.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of UmbrellaCategoryInformation.categoryStaticAccessories.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of UmbrellaCategoryInformation.statusItems.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of UmbrellaCategoryInformation.init(stateSnapshot:umbrellaCategory:room:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 64))();
}

uint64_t dispatch thunk of UmbrellaCategoryInformation.contextMenuLabelsAndActions()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t sub_251EB7344(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_251EB73AC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_251EB7414(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

BOOL sub_251EB7474(uint64_t a1)
{
  return sub_251EB6B60(a1, *(void *)(v1 + 32), *(void *)(v1 + 16));
}

HomeDataModel::HFCAPackageIconIdentifier_optional __swiftcall HFCAPackageIconIdentifier.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_251F36B50();
  result.Swift::Int value = swift_bridgeObjectRelease();
  char v5 = 0;
  char v6 = 41;
  switch(v3)
  {
    case 0:
      goto LABEL_43;
    case 1:
      char v5 = 1;
      goto LABEL_43;
    case 2:
      char v5 = 2;
      goto LABEL_43;
    case 3:
      char v5 = 3;
      goto LABEL_43;
    case 4:
      char v5 = 4;
      goto LABEL_43;
    case 5:
      char v5 = 5;
      goto LABEL_43;
    case 6:
      char v5 = 6;
      goto LABEL_43;
    case 7:
      char v5 = 7;
      goto LABEL_43;
    case 8:
      char v5 = 8;
      goto LABEL_43;
    case 9:
      char v5 = 9;
      goto LABEL_43;
    case 10:
      char v5 = 10;
      goto LABEL_43;
    case 11:
      char v5 = 11;
      goto LABEL_43;
    case 12:
      char v5 = 12;
      goto LABEL_43;
    case 13:
      char v5 = 13;
      goto LABEL_43;
    case 14:
      char v5 = 14;
      goto LABEL_43;
    case 15:
      char v5 = 15;
      goto LABEL_43;
    case 16:
      char v5 = 16;
      goto LABEL_43;
    case 17:
      char v5 = 17;
      goto LABEL_43;
    case 18:
      char v5 = 18;
      goto LABEL_43;
    case 19:
      char v5 = 19;
      goto LABEL_43;
    case 20:
      char v5 = 20;
      goto LABEL_43;
    case 21:
      char v5 = 21;
      goto LABEL_43;
    case 22:
      char v5 = 22;
      goto LABEL_43;
    case 23:
      char v5 = 23;
      goto LABEL_43;
    case 24:
      char v5 = 24;
      goto LABEL_43;
    case 25:
      char v5 = 25;
      goto LABEL_43;
    case 26:
      char v5 = 26;
      goto LABEL_43;
    case 27:
      char v5 = 27;
      goto LABEL_43;
    case 28:
      char v5 = 28;
      goto LABEL_43;
    case 29:
      char v5 = 29;
      goto LABEL_43;
    case 30:
      char v5 = 30;
      goto LABEL_43;
    case 31:
      char v5 = 31;
      goto LABEL_43;
    case 32:
      char v5 = 32;
      goto LABEL_43;
    case 33:
      char v5 = 33;
      goto LABEL_43;
    case 34:
      char v5 = 34;
      goto LABEL_43;
    case 35:
      char v5 = 35;
      goto LABEL_43;
    case 36:
      char v5 = 36;
      goto LABEL_43;
    case 37:
      char v5 = 37;
      goto LABEL_43;
    case 38:
      char v5 = 38;
      goto LABEL_43;
    case 39:
      char v5 = 39;
      goto LABEL_43;
    case 40:
      char v5 = 40;
LABEL_43:
      char v6 = v5;
      break;
    case 41:
      break;
    case 42:
      char v6 = 42;
      break;
    case 43:
      char v6 = 43;
      break;
    case 44:
      char v6 = 44;
      break;
    case 45:
      char v6 = 45;
      break;
    case 46:
      char v6 = 46;
      break;
    case 47:
      char v6 = 47;
      break;
    case 48:
      char v6 = 48;
      break;
    case 49:
      char v6 = 49;
      break;
    case 50:
      char v6 = 50;
      break;
    case 51:
      char v6 = 51;
      break;
    case 52:
      char v6 = 52;
      break;
    case 53:
      char v6 = 53;
      break;
    case 54:
      char v6 = 54;
      break;
    case 55:
      char v6 = 55;
      break;
    case 56:
      char v6 = 56;
      break;
    case 57:
      char v6 = 57;
      break;
    case 58:
      char v6 = 58;
      break;
    default:
      char v6 = 59;
      break;
  }
  *uint64_t v2 = v6;
  return result;
}

unint64_t HFCAPackageIconIdentifier.rawValue.getter()
{
  unint64_t result = 0xD000000000000024;
  switch(*v0)
  {
    case 1:
    case 6:
    case 0xD:
    case 0x10:
    case 0x1B:
    case 0x1F:
    case 0x27:
    case 0x29:
    case 0x2B:
    case 0x2C:
    case 0x3A:
      unint64_t result = 0xD000000000000023;
      break;
    case 2:
      unint64_t result = 0xD000000000000025;
      break;
    case 3:
      unint64_t result = 0xD000000000000024;
      break;
    case 4:
      unint64_t result = 0xD000000000000022;
      break;
    case 5:
      unint64_t result = 0xD000000000000025;
      break;
    case 7:
      unint64_t result = 0xD00000000000002CLL;
      break;
    case 8:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 9:
      unint64_t result = 0xD000000000000025;
      break;
    case 0xA:
      unint64_t result = 0xD000000000000024;
      break;
    case 0xB:
      unint64_t result = 0xD00000000000002DLL;
      break;
    case 0xC:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 0xE:
      unint64_t result = 0xD000000000000021;
      break;
    case 0xF:
      unint64_t result = 0xD000000000000029;
      break;
    case 0x11:
      unint64_t result = 0xD000000000000024;
      break;
    case 0x12:
      unint64_t result = 0xD000000000000024;
      break;
    case 0x13:
      unint64_t result = 0xD000000000000024;
      break;
    case 0x14:
      unint64_t result = 0xD000000000000024;
      break;
    case 0x15:
      unint64_t result = 0xD000000000000024;
      break;
    case 0x16:
      unint64_t result = 0xD000000000000024;
      break;
    case 0x17:
      unint64_t result = 0xD000000000000024;
      break;
    case 0x18:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 0x19:
      unint64_t result = 0xD000000000000020;
      break;
    case 0x1A:
      unint64_t result = 0xD000000000000020;
      break;
    case 0x1C:
      unint64_t result = 0xD00000000000002CLL;
      break;
    case 0x1D:
      unint64_t result = 0xD000000000000021;
      break;
    case 0x1E:
      unint64_t result = 0xD000000000000022;
      break;
    case 0x20:
      unint64_t result = 0xD000000000000025;
      break;
    case 0x21:
      unint64_t result = 0xD000000000000029;
      break;
    case 0x22:
      unint64_t result = 0xD000000000000027;
      break;
    case 0x23:
      unint64_t result = 0xD000000000000024;
      break;
    case 0x24:
      unint64_t result = 0xD000000000000021;
      break;
    case 0x25:
      unint64_t result = 0xD000000000000022;
      break;
    case 0x26:
      unint64_t result = 0xD000000000000025;
      break;
    case 0x28:
      unint64_t result = 0xD000000000000026;
      break;
    case 0x2A:
      unint64_t result = 0xD000000000000029;
      break;
    case 0x2D:
      unint64_t result = 0xD000000000000027;
      break;
    case 0x2E:
      unint64_t result = 0xD000000000000029;
      break;
    case 0x2F:
      unint64_t result = 0xD000000000000026;
      break;
    case 0x30:
      unint64_t result = 0xD000000000000027;
      break;
    case 0x31:
      unint64_t result = 0xD000000000000025;
      break;
    case 0x32:
      unint64_t result = 0xD000000000000033;
      break;
    case 0x33:
      unint64_t result = 0xD000000000000035;
      break;
    case 0x34:
      unint64_t result = 0xD000000000000037;
      break;
    case 0x35:
      unint64_t result = 0xD000000000000032;
      break;
    case 0x36:
      unint64_t result = 0xD000000000000031;
      break;
    case 0x37:
      unint64_t result = 0xD00000000000002FLL;
      break;
    case 0x38:
      unint64_t result = 0xD00000000000002DLL;
      break;
    case 0x39:
      unint64_t result = 0xD000000000000022;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t HFCAPackageIconIdentifier.offStateSymbolName.getter()
{
  unint64_t result = 0xD000000000000011;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    case 4:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 5:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 6:
      unint64_t result = 0xD000000000000012;
      break;
    case 7:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 8:
      unint64_t result = 0xD000000000000016;
      break;
    case 9:
      unint64_t result = 0xD000000000000015;
      break;
    case 0xA:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 0xB:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 0xC:
      unint64_t result = 0xD000000000000016;
      break;
    case 0xD:
      unint64_t result = 0xD000000000000012;
      break;
    case 0xE:
      unint64_t result = 0x6C69662E6B636F6CLL;
      break;
    case 0xF:
    case 0x11:
    case 0x12:
    case 0x13:
    case 0x14:
    case 0x15:
    case 0x16:
    case 0x17:
    case 0x21:
      unint64_t result = 0xD000000000000017;
      break;
    case 0x10:
      unint64_t result = 0xD000000000000016;
      break;
    case 0x18:
      unint64_t result = 0xD000000000000014;
      break;
    case 0x19:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 0x1A:
      unint64_t result = 0x6B7365642E6E6166;
      break;
    case 0x1B:
      unint64_t result = 0xD000000000000010;
      break;
    case 0x1C:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 0x1D:
      unint64_t result = 0x6F6F6C662E6E6166;
      break;
    case 0x1E:
      unint64_t result = 0x6C7562746867696CLL;
      break;
    case 0x1F:
      unint64_t result = 0xD000000000000010;
      break;
    case 0x20:
      unint64_t result = 0xD000000000000012;
      break;
    case 0x22:
      unint64_t result = 0xD000000000000015;
      break;
    case 0x24:
      unint64_t result = 0x7365642E706D616CLL;
      break;
    case 0x25:
      unint64_t result = 0x6F6C662E706D616CLL;
      break;
    case 0x27:
      unint64_t result = 0x6261742E706D616CLL;
      break;
    case 0x28:
      unint64_t result = 0xD000000000000013;
      break;
    case 0x29:
      unint64_t result = 0xD000000000000010;
      break;
    case 0x2A:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 0x2B:
      unint64_t result = 0xD000000000000012;
      break;
    case 0x2C:
      unint64_t result = 0x696C65646E616863;
      break;
    case 0x2D:
      unint64_t result = 0xD000000000000016;
      break;
    case 0x2E:
      unint64_t result = 0xD000000000000018;
      break;
    case 0x2F:
      unint64_t result = 0xD000000000000015;
      break;
    case 0x30:
      unint64_t result = 0xD000000000000016;
      break;
    case 0x31:
    case 0x38:
      unint64_t result = 0xD000000000000014;
      break;
    case 0x32:
      unint64_t result = 0xD000000000000013;
      break;
    case 0x33:
      unint64_t result = 0xD000000000000016;
      break;
    case 0x34:
      unint64_t result = 0xD000000000000018;
      break;
    case 0x35:
      unint64_t result = 0xD000000000000013;
      break;
    case 0x36:
      unint64_t result = 0xD000000000000012;
      break;
    case 0x37:
      unint64_t result = 0x736E696174727563;
      break;
    case 0x39:
      unint64_t result = 0xD000000000000016;
      break;
    case 0x3A:
      unint64_t result = 30324;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t HFCAPackageIconIdentifier.onStateSymbolName.getter()
{
  unint64_t result = 0xD000000000000010;
  switch(*v0)
  {
    case 6:
    case 0xD:
    case 0x36:
      return result;
    case 7:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 8:
    case 0xC:
    case 0x2D:
    case 0x33:
      unint64_t result = 0xD000000000000014;
      break;
    case 9:
      unint64_t result = 0xD000000000000013;
      break;
    case 0xA:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 0xB:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 0xE:
      unint64_t result = 0x65706F2E6B636F6CLL;
      break;
    case 0x18:
      unint64_t result = 0xD000000000000013;
      break;
    case 0x19:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 0x2E:
      unint64_t result = 0xD000000000000011;
      break;
    case 0x2F:
    case 0x30:
      unint64_t result = 0x632E776F646E6977;
      break;
    case 0x31:
    case 0x38:
      unint64_t result = 0x612E776F646E6977;
      break;
    case 0x32:
      unint64_t result = 0xD000000000000011;
      break;
    case 0x34:
      unint64_t result = 0xD000000000000016;
      break;
    case 0x35:
      unint64_t result = 0xD000000000000011;
      break;
    case 0x37:
      unint64_t result = 0x736E696174727563;
      break;
    case 0x39:
      unint64_t result = 0xD00000000000001BLL;
      break;
    default:
      unint64_t result = HFCAPackageIconIdentifier.offStateSymbolName.getter();
      break;
  }
  return result;
}

unint64_t HFCAPackageIconIdentifier.slashOffSymbolName.getter()
{
  if (*v0 == 30) {
    return 0xD000000000000014;
  }
  else {
    return 0;
  }
}

void HFCAPackageIconIdentifier.onStateSymbolRenderingMode.getter(char *a1@<X8>)
{
  unsigned int v2 = *v1;
  BOOL v3 = v2 > 0x21;
  uint64_t v4 = (1 << v2) & 0x300001000;
  if (v3 || v4 == 0) {
    char v6 = 2;
  }
  else {
    char v6 = 0;
  }
  *a1 = v6;
}

void HFCAPackageIconIdentifier.offStateSymbolRenderingMode.getter(char *a1@<X8>)
{
  int v2 = *v1;
  if ((v2 - 17) < 7 || v2 == 1) {
    char v4 = 2;
  }
  else {
    char v4 = 0;
  }
  *a1 = v4;
}

HomeDataModel::HFCAPackageIconIdentifier_optional sub_251EB855C(Swift::String *a1)
{
  return HFCAPackageIconIdentifier.init(rawValue:)(*a1);
}

unint64_t sub_251EB8568@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = HFCAPackageIconIdentifier.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_251EB8590()
{
  return sub_251F35A30();
}

uint64_t sub_251EB85F0()
{
  return sub_251F359D0();
}

uint64_t sub_251EB8640(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_251DB2068(*a1, *a2);
}

unint64_t sub_251EB8650()
{
  unint64_t result = qword_269BA51A8;
  if (!qword_269BA51A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA51A8);
  }
  return result;
}

uint64_t sub_251EB86A4()
{
  return sub_251F36D00();
}

uint64_t sub_251EB870C()
{
  HFCAPackageIconIdentifier.rawValue.getter();
  sub_251F357B0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_251EB8770()
{
  return sub_251F36D00();
}

uint64_t getEnumTagSinglePayload for HFCAPackageIconIdentifier(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xC6) {
    goto LABEL_17;
  }
  if (a2 + 58 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 58) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 58;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 58;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 58;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x3B;
  int v8 = v6 - 59;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for HFCAPackageIconIdentifier(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 58 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 58) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xC6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xC5)
  {
    unsigned int v6 = ((a2 - 198) >> 8) + 1;
    *unint64_t result = a2 + 58;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251EB8930);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 58;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HFCAPackageIconIdentifier()
{
  return &type metadata for HFCAPackageIconIdentifier;
}

unint64_t sub_251EB8968()
{
  unint64_t result = qword_269BA51B0;
  if (!qword_269BA51B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA51B0);
  }
  return result;
}

uint64_t StaticOnOffCluster.on()()
{
  *(void *)(v1 + 32) = *(void *)v0;
  *(_WORD *)(v1 + 28) = *(_WORD *)(v0 + 8);
  *(unsigned char *)(v1 + 27) = *(unsigned char *)(v0 + 10);
  return MEMORY[0x270FA2498](sub_251EB89F0, 0, 0);
}

uint64_t sub_251EB89F0()
{
  char v1 = *(unsigned char *)(v0 + 27);
  uint64_t v2 = *(void *)(v0 + 32);
  __int16 v3 = *(_WORD *)(v0 + 28);
  unint64_t v4 = sub_251A19C30((uint64_t)&unk_270261910);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CE50);
  swift_arrayDestroy();
  sub_251AA4920(v4);
  *(void *)(v0 + 40) = v5;
  swift_bridgeObjectRelease();
  sub_251EBAA90();
  *(void *)(v0 + 16) = v2;
  *(_WORD *)(v0 + 24) = v3;
  *(unsigned char *)(v0 + 26) = v1;
  unsigned int v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v6;
  *unsigned int v6 = v0;
  v6[1] = sub_251EB8B0C;
  return sub_251C4E0D4((uint64_t *)(v0 + 16));
}

uint64_t sub_251EB8B0C(uint64_t a1)
{
  *(void *)(*(void *)v1 + 56) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251EB8C0C, 0, 0);
}

uint64_t sub_251EB8C0C()
{
  uint64_t v1 = v0[5];
  ClusterPath.description.getter();
  sub_251F35800();
  swift_bridgeObjectRelease();
  v0[8] = 0x8000000251F682D0;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_269B9D6F0
                                                                                    + dword_269B9D6F0);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[9] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_251EB8D24;
  uint64_t v3 = v0[7];
  return v5(28271, 0xE200000000000000, v3, v1, 0xD000000000000013, 0x8000000251F682D0);
}

uint64_t sub_251EB8D24()
{
  uint64_t v1 = *(void **)(*v0 + 56);
  uint64_t v4 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v2 = *(uint64_t (**)(void))(v4 + 8);
  return v2();
}

uint64_t StaticOnOffCluster.off()()
{
  *(void *)(v1 + 32) = *(void *)v0;
  *(_WORD *)(v1 + 28) = *(_WORD *)(v0 + 8);
  *(unsigned char *)(v1 + 27) = *(unsigned char *)(v0 + 10);
  return MEMORY[0x270FA2498](sub_251EB8EA4, 0, 0);
}

uint64_t sub_251EB8EA4()
{
  char v1 = *(unsigned char *)(v0 + 27);
  uint64_t v2 = *(void *)(v0 + 32);
  __int16 v3 = *(_WORD *)(v0 + 28);
  unint64_t v4 = sub_251A19C30((uint64_t)&unk_270261948);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CE50);
  swift_arrayDestroy();
  sub_251AA4920(v4);
  *(void *)(v0 + 40) = v5;
  swift_bridgeObjectRelease();
  sub_251EBAA90();
  *(void *)(v0 + 16) = v2;
  *(_WORD *)(v0 + 24) = v3;
  *(unsigned char *)(v0 + 26) = v1;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_251EB8FC0;
  return sub_251C4E0D4((uint64_t *)(v0 + 16));
}

uint64_t sub_251EB8FC0(uint64_t a1)
{
  *(void *)(*(void *)v1 + 56) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251EB90C0, 0, 0);
}

uint64_t sub_251EB90C0()
{
  uint64_t v1 = v0[5];
  ClusterPath.description.getter();
  sub_251F35800();
  swift_bridgeObjectRelease();
  v0[8] = 0x8000000251F682D0;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_269B9D6F8
                                                                                    + dword_269B9D6F8);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[9] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_251EBAF04;
  uint64_t v3 = v0[7];
  return v5(6710895, 0xE300000000000000, v3, v1, 0xD000000000000013, 0x8000000251F682D0);
}

uint64_t StaticOnOffCluster.toggleKnownState()()
{
  *(void *)(v1 + 56) = *(void *)v0;
  *(_WORD *)(v1 + 44) = *(_WORD *)(v0 + 8);
  *(unsigned char *)(v1 + 46) = *(unsigned char *)(v0 + 10);
  *(unsigned char *)(v1 + 47) = *(unsigned char *)(v0 + 11);
  return MEMORY[0x270FA2498](sub_251EB9218, 0, 0);
}

uint64_t sub_251EB9218()
{
  uint64_t v20 = v0;
  if (qword_26B21ECD0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_251F350A0();
  __swift_project_value_buffer(v1, (uint64_t)qword_26B21ECB8);
  uint64_t v2 = sub_251F35080();
  os_log_type_t v3 = sub_251F35FD0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = *(void *)(v0 + 56);
    int v16 = *(unsigned __int8 *)(v0 + 47);
    char v5 = *(unsigned char *)(v0 + 46);
    __int16 v6 = *(_WORD *)(v0 + 44);
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315394;
    v17[0] = v8;
    v17[1] = 0xD000000000000013;
    v17[2] = 0x8000000251F682D0;
    v17[3] = v4;
    __int16 v18 = v6;
    char v19 = v5;
    ClusterPath.description.getter();
    sub_251F35800();
    swift_bridgeObjectRelease();
    *(void *)(v0 + 48) = sub_251A00E84(0xD000000000000013, 0x8000000251F682D0, v17);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 1024;
    *(_DWORD *)(v0 + 28) = v16;
    sub_251F361D0();
    _os_log_impl(&dword_2519F3000, v2, v3, "%s: toggling known state, currently %{BOOL}d", (uint8_t *)v7, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v8, -1, -1);
    MEMORY[0x2533AC760](v7, -1, -1);
  }

  char v9 = *(unsigned char *)(v0 + 46);
  __int16 v10 = *(_WORD *)(v0 + 44);
  uint64_t v11 = *(void *)(v0 + 56);
  if (*(unsigned char *)(v0 + 47))
  {
    *(void *)(v0 + 32) = v11;
    *(_WORD *)(v0 + 40) = v10;
    *(unsigned char *)(v0 + 42) = v9;
    *(unsigned char *)(v0 + 43) = 1;
    uint64_t v12 = swift_task_alloc();
    *(void *)(v0 + 72) = v12;
    *(void *)uint64_t v12 = v0;
    *(void *)(v12 + 8) = sub_251DBEDCC;
    *(void *)(v12 + 32) = *(void *)(v0 + 32);
    *(_WORD *)(v12 + 28) = *(_WORD *)(v0 + 40);
    *(unsigned char *)(v12 + 27) = *(unsigned char *)(v0 + 42);
    uint64_t v13 = sub_251EB8EA4;
  }
  else
  {
    *(void *)(v0 + 16) = v11;
    *(_WORD *)(v0 + 24) = v10;
    *(unsigned char *)(v0 + 26) = v9;
    *(unsigned char *)(v0 + 27) = 0;
    uint64_t v14 = swift_task_alloc();
    *(void *)(v0 + 64) = v14;
    *(void *)uint64_t v14 = v0;
    *(void *)(v14 + 8) = sub_251BED9F0;
    *(void *)(v14 + 32) = *(void *)(v0 + 16);
    *(_WORD *)(v14 + 28) = *(_WORD *)(v0 + 24);
    *(unsigned char *)(v14 + 27) = *(unsigned char *)(v0 + 26);
    uint64_t v13 = sub_251EB89F0;
  }
  return MEMORY[0x270FA2498](v13, 0, 0);
}

uint64_t static StaticOnOffCluster.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  BOOL v2 = *(void *)a1 == *(void *)a2 && *(unsigned __int16 *)(a1 + 8) == *(unsigned __int16 *)(a2 + 8);
  if (v2 && dword_251F5D2BC[*(char *)(a1 + 10)] == dword_251F5D2BC[*(char *)(a2 + 10)]) {
    return *(unsigned __int8 *)(a1 + 11) ^ *(unsigned __int8 *)(a2 + 11) ^ 1u;
  }
  else {
    return 0;
  }
}

uint64_t StaticOnOffCluster.init(path:device:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5 = *a1;
  int v6 = *((unsigned __int16 *)a1 + 4);
  int v7 = *((unsigned __int8 *)a1 + 10);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v12 = v5;
  __int16 v13 = v6;
  char v14 = v7;
  (*(void (**)(void *__return_ptr, uint64_t *, void, uint64_t, uint64_t))(a2 + 48))(v15, &v12, 0, ObjectType, a2);
  swift_unknownObjectRelease();
  if (!v15[3])
  {
    uint64_t result = sub_251A9090C((uint64_t)v15);
    goto LABEL_8;
  }
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
LABEL_8:
    uint64_t v5 = 0;
    int v11 = 0x2000000;
    goto LABEL_9;
  }
  if ((_BYTE)v12) {
    int v10 = 0x1000000;
  }
  else {
    int v10 = 0;
  }
  int v11 = v6 | (v7 << 16) | v10;
LABEL_9:
  *(void *)a3 = v5;
  *(_DWORD *)(a3 + 8) = v11;
  return result;
}

uint64_t StaticOnOffCluster.init(id:value:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  __int16 v3 = *(_WORD *)(result + 8);
  char v4 = *(unsigned char *)(result + 10);
  *(void *)a3 = *(void *)result;
  *(_WORD *)(a3 + 8) = v3;
  *(unsigned char *)(a3 + 10) = v4;
  *(unsigned char *)(a3 + 11) = a2;
  return result;
}

void StaticOnOffCluster.id.getter(uint64_t a1@<X8>)
{
  __int16 v2 = *(_WORD *)(v1 + 8);
  char v3 = *(unsigned char *)(v1 + 10);
  *(void *)a1 = *(void *)v1;
  *(_WORD *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 10) = v3;
}

uint64_t StaticOnOffCluster.value.getter()
{
  return *(unsigned __int8 *)(v0 + 11);
}

uint64_t StaticOnOffCluster.hash(into:)()
{
  return sub_251F36CC0();
}

uint64_t sub_251EB9744()
{
  if (*v0) {
    return 0x65756C6176;
  }
  else {
    return 25705;
  }
}

uint64_t sub_251EB9770@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251EBAE30(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251EB9798(uint64_t a1)
{
  unint64_t v2 = sub_251EBAAD0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251EB97D4(uint64_t a1)
{
  unint64_t v2 = sub_251EBAAD0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticOnOffCluster.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA51D0);
  uint64_t v12 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v1;
  __int16 v7 = *((_WORD *)v1 + 4);
  char v8 = *((unsigned char *)v1 + 10);
  int v16 = *((unsigned __int8 *)v1 + 11);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251EBAAD0();
  sub_251F36DA0();
  uint64_t v13 = v6;
  __int16 v14 = v7;
  char v15 = v8;
  char v18 = 0;
  sub_251A900F8();
  uint64_t v9 = v11;
  sub_251F36A20();
  if (!v9)
  {
    char v17 = 1;
    sub_251F369E0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v5, v3);
}

uint64_t StaticOnOffCluster.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t StaticOnOffCluster.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA51E0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251EBAAD0();
  sub_251F36D90();
  if (!v2)
  {
    char v18 = 0;
    sub_251A9014C();
    sub_251F36880();
    uint64_t v9 = v13;
    __int16 v10 = v14;
    int v16 = v15;
    char v17 = 1;
    char v11 = sub_251F36840();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(void *)a2 = v9;
    *(_WORD *)(a2 + 8) = v10;
    *(unsigned char *)(a2 + 10) = v16;
    *(unsigned char *)(a2 + 11) = v11 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_251EB9C10(uint64_t a1, uint64_t a2)
{
  BOOL v2 = *(void *)a1 == *(void *)a2 && *(unsigned __int16 *)(a1 + 8) == *(unsigned __int16 *)(a2 + 8);
  if (v2 && dword_251F5D2BC[*(char *)(a1 + 10)] == dword_251F5D2BC[*(char *)(a2 + 10)]) {
    return *(unsigned __int8 *)(a1 + 11) ^ *(unsigned __int8 *)(a2 + 11) ^ 1u;
  }
  else {
    return 0;
  }
}

uint64_t sub_251EB9C68()
{
  return sub_251F36D00();
}

uint64_t sub_251EB9CF8()
{
  return sub_251F36CC0();
}

uint64_t sub_251EB9D60()
{
  return sub_251F36D00();
}

uint64_t sub_251EB9DEC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticOnOffCluster.init(from:)(a1, a2);
}

uint64_t sub_251EB9E04(void *a1)
{
  return StaticOnOffCluster.encode(to:)(a1);
}

uint64_t StaticOnOffCluster.cluster.getter()
{
  uint64_t v2 = *v0;
  __int16 v3 = *((_WORD *)v0 + 4);
  char v4 = *((unsigned char *)v0 + 10);
  sub_251EBAA90();
  *(void *)(v1 + 16) = v2;
  *(_WORD *)(v1 + 24) = v3;
  *(unsigned char *)(v1 + 26) = v4;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 32) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_251A8DF4C;
  return sub_251C4E0D4((uint64_t *)(v1 + 16));
}

uint64_t sub_251EB9EE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[17] = a3;
  v4[18] = a4;
  v4[15] = a1;
  v4[16] = a2;
  return MEMORY[0x270FA2498](sub_251EB9F08, 0, 0);
}

uint64_t sub_251EB9F08()
{
  uint64_t v1 = v0[17];
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA5550);
    uint64_t v1 = sub_251F35AA0();
  }
  v0[19] = v1;
  uint64_t v2 = v0[18];
  __int16 v3 = (void *)v0[16];
  v0[2] = v0;
  v0[3] = sub_251EBA03C;
  uint64_t v4 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_251A5B804;
  v0[13] = &block_descriptor_21_0;
  v0[14] = v4;
  objc_msgSend(v3, sel_onWithParams_expectedValues_expectedValueInterval_completion_, 0, v1, v2, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_251EBA03C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 160) = v1;
  if (v1) {
    uint64_t v2 = sub_251B71ED8;
  }
  else {
    uint64_t v2 = sub_251EBA14C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_251EBA14C()
{
  uint64_t v1 = (void *)v0[19];
  *(void *)(v0[15] + 24) = MEMORY[0x263F8EE60] + 8;

  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_251EBA1C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[17] = a3;
  v4[18] = a4;
  v4[15] = a1;
  v4[16] = a2;
  return MEMORY[0x270FA2498](sub_251EBA1E8, 0, 0);
}

uint64_t sub_251EBA1E8()
{
  uint64_t v1 = v0[17];
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA5550);
    uint64_t v1 = sub_251F35AA0();
  }
  v0[19] = v1;
  uint64_t v2 = v0[18];
  __int16 v3 = (void *)v0[16];
  v0[2] = v0;
  v0[3] = sub_251EBA31C;
  uint64_t v4 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_251A5B804;
  v0[13] = &block_descriptor_23_0;
  v0[14] = v4;
  objc_msgSend(v3, sel_offWithParams_expectedValues_expectedValueInterval_completion_, 0, v1, v2, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_251EBA31C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 160) = v1;
  if (v1) {
    uint64_t v2 = sub_251EBAF08;
  }
  else {
    uint64_t v2 = sub_251EBAF0C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t StaticOnOffCluster.toggle()()
{
  *(void *)(v1 + 88) = *(void *)v0;
  *(_WORD *)(v1 + 84) = *(_WORD *)(v0 + 8);
  *(unsigned char *)(v1 + 83) = *(unsigned char *)(v0 + 10);
  *(unsigned char *)(v1 + 86) = *(unsigned char *)(v0 + 11);
  return MEMORY[0x270FA2498](sub_251EBA468, 0, 0);
}

uint64_t sub_251EBA468()
{
  char v1 = *(unsigned char *)(v0 + 86);
  char v2 = *(unsigned char *)(v0 + 83);
  uint64_t v3 = *(void *)(v0 + 88);
  __int16 v4 = *(_WORD *)(v0 + 84);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D1D8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_251F38650;
  *(_DWORD *)(inited + 32) = 0;
  *(void *)(inited + 40) = (v1 & 1) == 0;
  *(unsigned char *)(inited + 48) = 0;
  unint64_t v6 = sub_251A19C30(inited);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CE50);
  swift_arrayDestroy();
  sub_251AA4920(v6);
  *(void *)(v0 + 96) = v7;
  swift_bridgeObjectRelease();
  sub_251EBAA90();
  *(void *)(v0 + 72) = v3;
  *(_WORD *)(v0 + 80) = v4;
  *(unsigned char *)(v0 + 82) = v2;
  char v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v8;
  *char v8 = v0;
  v8[1] = sub_251EBA5CC;
  return sub_251C4E0D4((uint64_t *)(v0 + 72));
}

uint64_t sub_251EBA5CC(uint64_t a1)
{
  *(void *)(*(void *)v1 + 112) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251EBA6CC, 0, 0);
}

uint64_t sub_251EBA6CC()
{
  uint64_t v1 = v0[12];
  ClusterPath.description.getter();
  sub_251F35800();
  swift_bridgeObjectRelease();
  v0[15] = 0x8000000251F682D0;
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_269B9D6A0
                                                                                    + dword_269B9D6A0);
  char v2 = (void *)swift_task_alloc();
  v0[16] = v2;
  *char v2 = v0;
  v2[1] = sub_251EBA7EC;
  uint64_t v3 = v0[14];
  return v5(0x656C67676F74, 0xE600000000000000, v3, v1, 0xD000000000000013, 0x8000000251F682D0);
}

uint64_t sub_251EBA7EC()
{
  uint64_t v1 = *(void **)(*v0 + 112);
  uint64_t v4 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  char v2 = *(uint64_t (**)(void))(v4 + 8);
  return v2();
}

uint64_t sub_251EBA938(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[17] = a3;
  v4[18] = a4;
  v4[15] = a1;
  v4[16] = a2;
  return MEMORY[0x270FA2498](sub_251EBA95C, 0, 0);
}

uint64_t sub_251EBA95C()
{
  uint64_t v1 = v0[17];
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA5550);
    uint64_t v1 = sub_251F35AA0();
  }
  v0[19] = v1;
  uint64_t v2 = v0[18];
  uint64_t v3 = (void *)v0[16];
  v0[2] = v0;
  v0[3] = sub_251EBA31C;
  uint64_t v4 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_251A5B804;
  v0[13] = &block_descriptor_20;
  v0[14] = v4;
  objc_msgSend(v3, sel_toggleWithParams_expectedValues_expectedValueInterval_completion_, 0, v1, v2, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

unint64_t sub_251EBAA90()
{
  unint64_t result = qword_269B9CE60;
  if (!qword_269B9CE60)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_269B9CE60);
  }
  return result;
}

unint64_t sub_251EBAAD0()
{
  unint64_t result = qword_269BA51D8;
  if (!qword_269BA51D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA51D8);
  }
  return result;
}

unint64_t sub_251EBAB28()
{
  unint64_t result = qword_269BA51F8;
  if (!qword_269BA51F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA51F8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for StaticOnOffCluster(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 12)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 11);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for StaticOnOffCluster(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_DWORD *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 12) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 12) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 11) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticOnOffCluster()
{
  return &type metadata for StaticOnOffCluster;
}

unsigned char *storeEnumTagSinglePayload for StaticOnOffCluster.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251EBACF0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticOnOffCluster.CodingKeys()
{
  return &type metadata for StaticOnOffCluster.CodingKeys;
}

unint64_t sub_251EBAD2C()
{
  unint64_t result = qword_269BA5200;
  if (!qword_269BA5200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5200);
  }
  return result;
}

unint64_t sub_251EBAD84()
{
  unint64_t result = qword_269BA5208;
  if (!qword_269BA5208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5208);
  }
  return result;
}

unint64_t sub_251EBADDC()
{
  unint64_t result = qword_269BA5210;
  if (!qword_269BA5210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_269BA5210);
  }
  return result;
}

uint64_t sub_251EBAE30(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t StaticRVCClusterGroup.Command.init(commandTemplate:cluster:)@<X0>(uint64_t *a1@<X0>, _OWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *((unsigned __int8 *)a1 + 8);
  long long v6 = a2[13];
  long long v35 = a2[12];
  v36[0] = v6;
  *(_OWORD *)((char *)v36 + 12) = *(_OWORD *)((char *)a2 + 220);
  long long v7 = a2[9];
  long long v31 = a2[8];
  long long v32 = v7;
  long long v8 = a2[11];
  long long v33 = a2[10];
  long long v34 = v8;
  long long v9 = a2[5];
  void v29[4] = a2[4];
  v29[5] = v9;
  long long v10 = a2[7];
  v29[6] = a2[6];
  long long v30 = v10;
  long long v11 = a2[1];
  v29[0] = *a2;
  v29[1] = v11;
  long long v12 = a2[3];
  v29[2] = a2[2];
  v29[3] = v12;
  switch(v5 >> 6)
  {
    case 1u:
      if ((v5 & 1) == 0)
      {
        uint64_t result = sub_251A81D30((uint64_t)v29);
        *(void *)a3 = v4;
        char v14 = 1;
        goto LABEL_30;
      }
      if (v4)
      {
        char v16 = v4 != 1;
        char v17 = 1;
      }
      else
      {
        char v16 = 1;
        char v17 = 0;
      }
      StaticRVCClusterGroup.bestFitSelectingPrimaryTags(vacuum:mop:withSecondaryTags:)(v16, v17, 0, (unint64_t)&v26);
      uint64_t result = sub_251A81D30((uint64_t)v29);
      if (!v28) {
        goto LABEL_29;
      }
      uint64_t v24 = v26;
      uint64_t result = sub_251A4DE90(v26, v27, v28);
      *(void *)a3 = v24;
      *(unsigned char *)(a3 + 8) = 1;
      return result;
    case 2u:
      if (v4)
      {
        uint64_t result = sub_251A81D30((uint64_t)v29);
LABEL_8:
        *(void *)a3 = v4;
        char v14 = 2;
        goto LABEL_30;
      }
      uint64_t v18 = *((void *)&v30 + 1);
      if (*((void *)&v30 + 1))
      {
        int64_t v19 = *(void *)(*((void *)&v30 + 1) + 16);
        if (v19)
        {
          uint64_t v25 = MEMORY[0x263F8EE78];
          swift_bridgeObjectRetain();
          sub_251A3E1E0(0, v19, 0);
          uint64_t v4 = v25;
          unint64_t v20 = *(void *)(v25 + 16);
          uint64_t v21 = 32;
          do
          {
            int v22 = *(_DWORD *)(v18 + v21);
            unint64_t v23 = *(void *)(v25 + 24);
            if (v20 >= v23 >> 1) {
              sub_251A3E1E0(v23 > 1, v20 + 1, 1);
            }
            *(void *)(v25 + 16) = v20 + 1;
            *(_DWORD *)(v25 + 4 * v20 + 32) = v22;
            v21 += 48;
            ++v20;
            --v19;
          }
          while (v19);
          sub_251A81D30((uint64_t)v29);
          sub_251C33644(0, v5);
          swift_bridgeObjectRelease();
          uint64_t result = sub_251C33644(0, v5);
        }
        else
        {
          swift_bridgeObjectRetain();
          sub_251A81D30((uint64_t)v29);
          sub_251C33644(0, v5);
          swift_bridgeObjectRelease();
          uint64_t result = sub_251C33644(0, v5);
          uint64_t v4 = MEMORY[0x263F8EE78];
        }
        goto LABEL_8;
      }
      sub_251A81D30((uint64_t)v29);
      uint64_t result = sub_251C33644(0, v5);
LABEL_29:
      *(void *)a3 = 0;
      char v14 = -1;
LABEL_30:
      *(unsigned char *)(a3 + 8) = v14;
      return result;
    case 3u:
      uint64_t result = sub_251A81D30((uint64_t)v29);
      if (v4 | v5 ^ 0xC0) {
        *(void *)a3 = 1;
      }
      else {
        *(void *)a3 = 0;
      }
      char v14 = 3;
      goto LABEL_30;
    default:
      if (v4) {
        StaticRVCClusterGroup.firstCleaningRunningMode.getter((uint64_t)&v26);
      }
      else {
        StaticRVCClusterGroup.firstIdleRunningMode.getter((uint64_t)&v26);
      }
      uint64_t result = sub_251A81D30((uint64_t)v29);
      if (!v28) {
        goto LABEL_29;
      }
      uint64_t v15 = v26;
      uint64_t result = sub_251A4DE90(v26, v27, v28);
      *(void *)a3 = v15;
      *(unsigned char *)(a3 + 8) = 0;
      return result;
  }
}

uint64_t sub_251EBB374(uint64_t a1)
{
  if (!a1) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v24 = a1 + 64;
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  unint64_t v4 = v3 & *(void *)(a1 + 64);
  int64_t v25 = (unint64_t)(v2 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v6 = 0;
  uint64_t v7 = MEMORY[0x263F8EE78];
  while (1)
  {
    if (v4)
    {
      unint64_t v8 = __clz(__rbit64(v4));
      v4 &= v4 - 1;
      unint64_t v9 = v8 | (v6 << 6);
      goto LABEL_6;
    }
    int64_t v21 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v25) {
      goto LABEL_24;
    }
    unint64_t v22 = *(void *)(v24 + 8 * v21);
    ++v6;
    if (!v22)
    {
      int64_t v6 = v21 + 1;
      if (v21 + 1 >= v25) {
        goto LABEL_24;
      }
      unint64_t v22 = *(void *)(v24 + 8 * v6);
      if (!v22)
      {
        int64_t v6 = v21 + 2;
        if (v21 + 2 >= v25) {
          goto LABEL_24;
        }
        unint64_t v22 = *(void *)(v24 + 8 * v6);
        if (!v22)
        {
          int64_t v6 = v21 + 3;
          if (v21 + 3 >= v25) {
            goto LABEL_24;
          }
          unint64_t v22 = *(void *)(v24 + 8 * v6);
          if (!v22) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v4 = (v22 - 1) & v22;
    unint64_t v9 = __clz(__rbit64(v22)) + (v6 << 6);
LABEL_6:
    int v10 = *(_DWORD *)(*(void *)(a1 + 48) + 8 * v9);
    uint64_t v11 = *(void *)(a1 + 56) + 16 * v9;
    uint64_t v12 = *(void *)v11;
    char v13 = *(unsigned char *)(v11 + 8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D1D8);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_251F38650;
    *(_DWORD *)(inited + 32) = v10;
    *(void *)(inited + 40) = v12;
    *(unsigned char *)(inited + 48) = v13;
    unint64_t v15 = sub_251A19C30(inited);
    swift_setDeallocating();
    sub_251A1A4B8(v12, v13);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CE50);
    swift_arrayDestroy();
    char v16 = (void *)sub_251F36D40();
    char v17 = (void *)sub_251F36D60();
    uint64_t v18 = (void *)sub_251F36D60();
    id v19 = objc_msgSend(self, sel_attributePathWithEndpointID_clusterID_attributeID_, v16, v17, v18);

    uint64_t v20 = sub_251EC0880(v15, v19);
    swift_bridgeObjectRelease();

    uint64_t result = sub_251ED7CF8(v20);
  }
  int64_t v23 = v21 + 4;
  if (v23 >= v25)
  {
LABEL_24:
    swift_release();
    return v7;
  }
  unint64_t v22 = *(void *)(v24 + 8 * v23);
  if (v22)
  {
    int64_t v6 = v23;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v6 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v6 >= v25) {
      goto LABEL_24;
    }
    unint64_t v22 = *(void *)(v24 + 8 * v6);
    ++v23;
    if (v22) {
      goto LABEL_23;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_251EBB654(void *a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  int v8 = a4;
  unint64_t v9 = (void *)sub_251F36D60();
  sub_251A1A930(a2, (uint64_t)v23);
  sub_251A4DB2C((uint64_t)v23);
  sub_251A4E128((uint64_t)v23);
  int v10 = (void *)sub_251F36D40();
  switch(v8)
  {
    case 0:
    case 1:
      uint64_t v11 = (void *)sub_251F36D60();
      char v12 = 2;
      goto LABEL_4;
    case 2:
      uint64_t v11 = (void *)sub_251F36D60();
      swift_bridgeObjectRetain();
      char v12 = 3;
LABEL_4:
      v21[0] = 0;
      v21[1] = a3;
      char v22 = v12;
      unint64_t v13 = MatterCommandFields.asDictionary()();
      sub_251EBED64(a3, a4);
      break;
    case 3:
      uint64_t v11 = (void *)sub_251F36D60();
      unint64_t v13 = 0;
      break;
    default:
      JUMPOUT(0);
  }
  sub_251A1A930(a2, (uint64_t)v21);
  sub_251A4DB2C((uint64_t)v21);
  sub_251A4E128((uint64_t)v21);
  unint64_t v14 = StaticRVCClusterGroup.Command.expectedValues.getter();
  sub_251EBB374(v14);
  swift_bridgeObjectRelease();
  id v15 = a1;
  if (v13)
  {
    char v16 = (void *)sub_251F35540();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v16 = 0;
  }
  id v17 = objc_allocWithZone(MEMORY[0x263F0E4A8]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA5550);
  uint64_t v18 = (void *)sub_251F35AA0();
  swift_bridgeObjectRelease();
  id v19 = objc_msgSend(v17, sel_initWithCommandID_endpointID_clusterID_accessory_commandFields_expectedValues_, v9, v10, v11, a1, v16, v18);

  return v19;
}

uint64_t sub_251EBB894(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  sub_251F36CE0();
  sub_251F36CE0();
  unint64_t v6 = StaticRVCClusterGroup.Command.expectedValues.getter();
  if (v6)
  {
    uint64_t v7 = v6;
    sub_251F36CC0();
    sub_251A433B0(a1, v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_251F36CC0();
  }
  if (a3 >= 2u)
  {
    if (a3 != 2)
    {
      sub_251F36CC0();
      goto LABEL_9;
    }
    swift_bridgeObjectRetain();
  }
  sub_251F36CC0();
  sub_251F36CB0();
  MatterAttributeDataBuilder.hash(into:)();
  sub_251EBED64(a2, a3);
LABEL_9:
  StaticRVCClusterGroup.Command.description.getter();
  sub_251F357B0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_251EBB9E4()
{
  uint64_t v0 = sub_251F350A0();
  __swift_allocate_value_buffer(v0, qword_269BA5230);
  __swift_project_value_buffer(v0, (uint64_t)qword_269BA5230);
  return sub_251F35090();
}

uint64_t static Logger.matterAutomation.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_269B9C510 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_251F350A0();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_269BA5230);
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

BOOL static StaticRVCClusterGroup.Command.CleanMode.== infix(_:_:)(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = *(void *)a2;
  if (*((unsigned char *)a1 + 8) == 1)
  {
    if (v2)
    {
      if (v2 == 1)
      {
        if (v3 == 1) {
          char v4 = *(unsigned char *)(a2 + 8);
        }
        else {
          char v4 = 0;
        }
        if (v4) {
          return 1;
        }
      }
      else
      {
        if (v3 > 1) {
          char v7 = *(unsigned char *)(a2 + 8);
        }
        else {
          char v7 = 0;
        }
        if (v7) {
          return 1;
        }
      }
    }
    else
    {
      if (v3) {
        LOBYTE(v6) = 0;
      }
      else {
        uint64_t v6 = *(unsigned __int8 *)(a2 + 8);
      }
      if (v6) {
        return 1;
      }
    }
  }
  else if ((*(unsigned char *)(a2 + 8) & 1) == 0)
  {
    return v2 == v3;
  }
  return 0;
}

uint64_t StaticRVCClusterGroup.Command.CleanMode.hash(into:)()
{
  if ((*(unsigned char *)(v0 + 8) & 1) == 0) {
    sub_251F36CB0();
  }
  return sub_251F36CB0();
}

uint64_t StaticRVCClusterGroup.Command.CleanMode.hashValue.getter()
{
  char v1 = *(unsigned char *)(v0 + 8);
  sub_251F36CA0();
  if ((v1 & 1) == 0) {
    sub_251F36CB0();
  }
  sub_251F36CB0();
  return sub_251F36D00();
}

BOOL sub_251EBBC24(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = *(void *)a2;
  if (*((unsigned char *)a1 + 8) != 1)
  {
    if ((*(unsigned char *)(a2 + 8) & 1) == 0) {
      return v2 == v3;
    }
    return 0;
  }
  if (v2)
  {
    if (v2 != 1)
    {
      if (v3 > 1) {
        char v7 = *(unsigned char *)(a2 + 8);
      }
      else {
        char v7 = 0;
      }
      return (v7 & 1) != 0;
    }
    BOOL v4 = v3 == 1;
  }
  else
  {
    BOOL v4 = v3 == 0;
  }
  if (v4) {
    char v6 = *(unsigned char *)(a2 + 8);
  }
  else {
    char v6 = 0;
  }
  return (v6 & 1) != 0;
}

uint64_t sub_251EBBC88()
{
  char v1 = *(unsigned char *)(v0 + 8);
  sub_251F36CA0();
  if ((v1 & 1) == 0) {
    sub_251F36CB0();
  }
  sub_251F36CB0();
  return sub_251F36D00();
}

uint64_t sub_251EBBCE4()
{
  if ((*(unsigned char *)(v0 + 8) & 1) == 0) {
    sub_251F36CB0();
  }
  return sub_251F36CB0();
}

uint64_t sub_251EBBD24()
{
  char v1 = *(unsigned char *)(v0 + 8);
  sub_251F36CA0();
  if ((v1 & 1) == 0) {
    sub_251F36CB0();
  }
  sub_251F36CB0();
  return sub_251F36D00();
}

BOOL static StaticRVCClusterGroup.Command.RunMode.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t StaticRVCClusterGroup.Command.RunMode.hash(into:)()
{
  return sub_251F36CB0();
}

uint64_t StaticRVCClusterGroup.Command.RunMode.hashValue.getter()
{
  return sub_251F36D00();
}

BOOL static StaticRVCClusterGroup.Command.RoomSelection.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  if (!v2)
  {
    if (!v3)
    {
      swift_bridgeObjectRelease_n();
      return 1;
    }
    return 0;
  }
  if (!v3) {
    return 0;
  }
  return sub_251AB62F0(v2, v3);
}

uint64_t StaticRVCClusterGroup.Command.RoomSelection.hash(into:)()
{
  uint64_t v1 = *v0;
  if (!*v0) {
    return sub_251F36CB0();
  }
  sub_251F36CB0();
  uint64_t result = sub_251F36CB0();
  uint64_t v3 = *(void *)(v1 + 16);
  if (v3)
  {
    uint64_t v4 = v1 + 32;
    do
    {
      v4 += 4;
      uint64_t result = sub_251F36CE0();
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t StaticRVCClusterGroup.Command.RoomSelection.hashValue.getter()
{
  uint64_t v1 = *v0;
  sub_251F36CA0();
  if (v1)
  {
    sub_251F36CB0();
    sub_251F36CB0();
    uint64_t v2 = *(void *)(v1 + 16);
    if (v2)
    {
      uint64_t v3 = v1 + 32;
      do
      {
        v3 += 4;
        sub_251F36CE0();
        --v2;
      }
      while (v2);
    }
  }
  else
  {
    sub_251F36CB0();
  }
  return sub_251F36D00();
}

BOOL sub_251EBBF5C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  if (!v2)
  {
    if (!v3)
    {
      swift_bridgeObjectRelease_n();
      return 1;
    }
    return 0;
  }
  if (!v3) {
    return 0;
  }
  return sub_251AB62F0(v2, v3);
}

uint64_t sub_251EBBFBC()
{
  uint64_t v1 = *v0;
  if (!*v0) {
    return sub_251F36CB0();
  }
  sub_251F36CB0();
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t result = sub_251F36CB0();
  if (v2)
  {
    uint64_t v4 = v1 + 32;
    do
    {
      v4 += 4;
      uint64_t result = sub_251F36CE0();
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_251EBC028()
{
  uint64_t v1 = *v0;
  sub_251F36CA0();
  if (v1)
  {
    sub_251F36CB0();
    uint64_t v2 = *(void *)(v1 + 16);
    sub_251F36CB0();
    if (v2)
    {
      uint64_t v3 = v1 + 32;
      do
      {
        v3 += 4;
        sub_251F36CE0();
        --v2;
      }
      while (v2);
    }
  }
  else
  {
    sub_251F36CB0();
  }
  return sub_251F36D00();
}

uint64_t StaticRVCClusterGroup.Command.Template.init(matterCommand:device:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for StaticEndpoint();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6 - 8);
  unint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a2 + *(int *)(type metadata accessor for StaticMatterDevice() + 48));
  id v11 = objc_msgSend(a1, sel_endpointID);
  unsigned __int16 v12 = (unsigned __int16)objc_msgSend(v11, sel_unsignedShortValue);

  if (!*(void *)(v10 + 16)
    || (unint64_t v13 = sub_2519FE5CC(v12), (v14 & 1) == 0)
    || (sub_251DF91CC(*(void *)(v10 + 56) + *(void *)(v7 + 72) * v13, (uint64_t)v9),
        StaticEndpoint.rvcClusterGroup.getter((uint64_t)&v51),
        sub_251C335DC((uint64_t)&v51, (uint64_t)v65),
        sub_251EBECA4((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticEndpoint),
        sub_251C335DC((uint64_t)v65, (uint64_t)v66),
        sub_251B72348((uint64_t)v66) == 1))
  {
LABEL_4:

LABEL_5:
    uint64_t result = sub_251EBECA4(a2, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
    *(void *)a3 = 0;
    char v16 = -2;
    goto LABEL_6;
  }
  HMMatterCommand.associatedMatterCommand.getter((uint64_t)&v51);
  if (!*((void *)&v52 + 1))
  {

    sub_251EBF294((uint64_t)v65, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _DWORD))sub_251B723DC);
    sub_251EBED04((uint64_t)&v51);
    goto LABEL_5;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CEE0);
  if (!swift_dynamicCast())
  {

    sub_251EBF294((uint64_t)v65, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _DWORD))sub_251B723DC);
    goto LABEL_5;
  }
  uint64_t v17 = v49;
  switch(BYTE8(v49))
  {
    case 1:
      if (!*((void *)&v67 + 1)) {
        goto LABEL_20;
      }
      uint64_t v21 = *(void *)(*((void *)&v67 + 1) + 16);
      if (!v21) {
        goto LABEL_20;
      }
      char v22 = (uint64_t *)(*((void *)&v67 + 1) + 56);
      break;
    case 2:

      uint64_t v23 = *((void *)&v68 + 1);
      if (!*((void *)&v68 + 1))
      {
        sub_251EBF294((uint64_t)v65, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _DWORD))sub_251B723DC);
        sub_251EBED64(v17, 2);
        goto LABEL_5;
      }
      int v44 = DWORD2(v74[1]);
      uint64_t v42 = *((void *)&v73 + 1);
      uint64_t v43 = *((void *)&v74[0] + 1);
      uint64_t v39 = v73;
      uint64_t v40 = *(void *)&v74[0];
      uint64_t v24 = *((void *)&v72 + 1);
      uint64_t v41 = *((void *)&v72 + 1);
      uint64_t v48 = v72;
      long long v47 = v71;
      uint64_t v45 = *(void *)&v74[1];
      uint64_t v46 = *((void *)&v70 + 1);
      uint64_t v38 = v70;
      uint64_t v25 = *((void *)&v69 + 1);
      uint64_t v26 = v69;
      sub_251EBED78(v17, 2);
      uint64_t v27 = v39;
      uint64_t v37 = v24;
      uint64_t v28 = v38;
      sub_251A1ACA8(v23, v26, v25, v38, v46, v47, *((uint64_t *)&v47 + 1), v48, v37, v39);
      sub_251EBF294((uint64_t)v65, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _DWORD))sub_251B723DC);
      uint64_t v29 = swift_bridgeObjectRetain();
      sub_251A4DED4(v29, v26, v25, v28, v46, v47, *((uint64_t *)&v47 + 1), v48, v41, v27);
      uint64_t v30 = *(void *)(v17 + 16);
      sub_251EBED64(v17, 2);
      uint64_t v31 = *(void *)(v23 + 16);
      swift_bridgeObjectRelease();
      uint64_t result = sub_251EBECA4(a2, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
      if (v30 == v31)
      {
        uint64_t result = sub_251EBED64(v17, 2);
        *(void *)a3 = 0;
      }
      else
      {
        *(void *)a3 = v17;
      }
      char v16 = 0x80;
      goto LABEL_6;
    case 3:

      sub_251EBF294((uint64_t)v65, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _DWORD))sub_251B723DC);
      uint64_t result = sub_251EBECA4(a2, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
      if (v17) {
        *(void *)a3 = 1;
      }
      else {
        *(void *)a3 = 0;
      }
      char v16 = -64;
      goto LABEL_6;
    default:
      long long v63 = v73;
      v64[0] = v74[0];
      *(_OWORD *)((char *)v64 + 12) = *(_OWORD *)((char *)v74 + 12);
      long long v59 = v69;
      long long v60 = v70;
      long long v61 = v71;
      long long v62 = v72;
      long long v55 = v66[4];
      long long v56 = v66[5];
      long long v57 = v67;
      long long v58 = v68;
      long long v51 = v66[0];
      long long v52 = v66[1];
      long long v53 = v66[2];
      long long v54 = v66[3];
      StaticRVCClusterGroup.runMode(with:)(v49, (uint64_t)&v49);
      sub_251EBF294((uint64_t)v65, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _DWORD))sub_251B723DC);
      uint64_t v18 = v50;
      if (!(void)v50) {
        goto LABEL_4;
      }
      long long v19 = v49;
      long long v51 = v49;
      long long v52 = v50;
      BOOL v20 = StaticRVCClusterGroup.RunMode.isCleaning.getter();

      sub_251A4DE90(v19, *((uint64_t *)&v19 + 1), v18);
      uint64_t result = sub_251EBECA4(a2, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
      *(void *)a3 = v20;
      *(unsigned char *)(a3 + 8) = 0;
      return result;
  }
  while (*(v22 - 3) != (void)v49)
  {
    v22 += 4;
    if (!--v21)
    {
LABEL_20:
      sub_251EBF294((uint64_t)v65, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _DWORD))sub_251B723DC);
      goto LABEL_4;
    }
  }
  uint64_t v33 = *(v22 - 2);
  uint64_t v32 = *(v22 - 1);
  uint64_t v34 = *v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_251EBF294((uint64_t)v65, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _DWORD))sub_251B723DC);
  *(void *)&long long v51 = v17;
  *((void *)&v51 + 1) = v33;
  *(void *)&long long v52 = v32;
  *((void *)&v52 + 1) = v34;
  if (StaticRVCClusterGroup.CleanMode.isVacuum.getter())
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    uint64_t result = sub_251EBECA4(a2, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
    *(void *)a3 = 0;
  }
  else
  {
    *(void *)&long long v51 = v17;
    *((void *)&v51 + 1) = v33;
    *(void *)&long long v52 = v32;
    *((void *)&v52 + 1) = v34;
    if (StaticRVCClusterGroup.CleanMode.isMop.getter())
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      uint64_t result = sub_251EBECA4(a2, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
      uint64_t v35 = 1;
    }
    else
    {
      char v36 = sub_251A81B84((uint64_t)&unk_2702631E8, v34);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      uint64_t result = sub_251EBECA4(a2, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
      if ((v36 & 1) == 0)
      {
        *(void *)a3 = v17;
        char v16 = 64;
        goto LABEL_6;
      }
      uint64_t v35 = 2;
    }
    *(void *)a3 = v35;
  }
  char v16 = 65;
LABEL_6:
  *(unsigned char *)(a3 + 8) = v16;
  return result;
}

id StaticRVCClusterGroup.Command.Template.command(with:endpoint:)(void *a1)
{
  uint64_t v3 = *(void *)v1;
  char v4 = *(unsigned char *)(v1 + 8);
  StaticEndpoint.rvcClusterGroup.getter((uint64_t)v13);
  sub_251C335DC((uint64_t)v13, (uint64_t)v15);
  sub_251C335DC((uint64_t)v15, (uint64_t)&v16);
  if (sub_251B72348((uint64_t)&v16) == 1) {
    return 0;
  }
  uint64_t v11 = v3;
  char v12 = v4;
  v13[12] = v28;
  v14[0] = v29[0];
  *(_OWORD *)((char *)v14 + 12) = *(_OWORD *)((char *)v29 + 12);
  v13[8] = v24;
  v13[9] = v25;
  v13[10] = v26;
  v13[11] = v27;
  v13[4] = v20;
  v13[5] = v21;
  v13[6] = v22;
  v13[7] = v23;
  v13[0] = v16;
  v13[1] = v17;
  v13[2] = v18;
  void v13[3] = v19;
  sub_251EBF280(v3, v4);
  sub_251EBF294((uint64_t)v15, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _DWORD))sub_251EBF318);
  StaticRVCClusterGroup.Command.init(commandTemplate:cluster:)(&v11, v13, (uint64_t)v9);
  char v5 = BYTE8(v9[0]);
  if (BYTE8(v9[0]) == 255)
  {
    sub_251EBF294((uint64_t)v15, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _DWORD))sub_251B723DC);
    return 0;
  }
  uint64_t v6 = *(void *)&v9[0];
  v9[12] = v28;
  *(_OWORD *)uint64_t v10 = v29[0];
  *(_OWORD *)&v10[12] = *(_OWORD *)((char *)v29 + 12);
  v9[8] = v24;
  v9[9] = v25;
  v9[10] = v26;
  v9[11] = v27;
  void v9[4] = v20;
  v9[5] = v21;
  v9[6] = v22;
  v9[7] = v23;
  v9[0] = v16;
  v9[1] = v17;
  void v9[2] = v18;
  v9[3] = v19;
  sub_251BE4D7C((uint64_t)v9);
  sub_251A1A930((uint64_t)v9, (uint64_t)v13);
  id v7 = sub_251EBB654(a1, (uint64_t)v13, v6, v5);
  sub_251EBF294((uint64_t)v15, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _DWORD))sub_251B723DC);
  sub_251EBF484(v6, v5);
  return v7;
}

double StaticRVCClusterGroup.Command.Template.matterCommand(endpoint:)@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)v1;
  char v4 = *(unsigned char *)(v1 + 8);
  StaticEndpoint.rvcClusterGroup.getter((uint64_t)v12);
  sub_251C335DC((uint64_t)v12, (uint64_t)v14);
  sub_251C335DC((uint64_t)v14, (uint64_t)v15);
  if (sub_251B72348((uint64_t)v15) == 1) {
    goto LABEL_4;
  }
  uint64_t v8 = v3;
  char v9 = v4;
  v12[12] = v15[12];
  v13[0] = v16[0];
  *(_OWORD *)((char *)v13 + 12) = *(_OWORD *)((char *)v16 + 12);
  v12[8] = v15[8];
  v12[9] = v15[9];
  v12[10] = v15[10];
  v12[11] = v15[11];
  void v12[4] = v15[4];
  v12[5] = v15[5];
  v12[6] = v15[6];
  v12[7] = v15[7];
  v12[0] = v15[0];
  v12[1] = v15[1];
  v12[2] = v15[2];
  v12[3] = v15[3];
  sub_251EBF280(v3, v4);
  StaticRVCClusterGroup.Command.init(commandTemplate:cluster:)(&v8, v12, (uint64_t)&v10);
  unsigned __int8 v5 = v11;
  if (v11 == 255)
  {
LABEL_4:
    *(void *)(a1 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  else
  {
    uint64_t v6 = v10;
    *(void *)(a1 + 24) = &type metadata for StaticRVCClusterGroup.Command;
    *(void *)(a1 + 32) = sub_251C33658();
    *(void *)a1 = v6;
    *(unsigned char *)(a1 + 8) = v5;
  }
  return result;
}

uint64_t StaticRVCClusterGroup.Command.Template.hash(into:)()
{
  uint64_t v1 = *v0;
  unsigned int v2 = *((unsigned __int8 *)v0 + 8);
  switch(v2 >> 6)
  {
    case 1u:
      sub_251F36CB0();
      if (v2) {
        goto LABEL_10;
      }
      goto LABEL_2;
    case 2u:
      sub_251F36CB0();
      if (!v1) {
        goto LABEL_10;
      }
      sub_251F36CB0();
      uint64_t result = sub_251F36CB0();
      uint64_t v4 = *(void *)(v1 + 16);
      if (v4)
      {
        uint64_t v5 = v1 + 32;
        do
        {
          v5 += 4;
          uint64_t result = sub_251F36CE0();
          --v4;
        }
        while (v4);
      }
      break;
    case 3u:
      goto LABEL_10;
    default:
LABEL_2:
      sub_251F36CB0();
LABEL_10:
      uint64_t result = sub_251F36CB0();
      break;
  }
  return result;
}

uint64_t StaticRVCClusterGroup.Command.Template.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t sub_251EBCC10()
{
  return sub_251F36D00();
}

uint64_t sub_251EBCC68()
{
  return sub_251F36D00();
}

void StaticRVCClusterGroup.Command.RVCOperationType.init(rawValue:)(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t StaticRVCClusterGroup.Command.RVCOperationType.rawValue.getter()
{
  return *v0;
}

uint64_t StaticRVCClusterGroup.Command.init(clusterKind:commandID:expectedValues:commandFields:)@<X0>(unsigned char *a1@<X0>, int a2@<W1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)a3;
  uint64_t v9 = *(void *)(a3 + 8);
  int v10 = *(unsigned __int8 *)(a3 + 16);
  switch(*a1)
  {
    case 0x17:
      uint64_t result = sub_251C32408(result, v9, v10);
      if (a2) {
        *(void *)a4 = 1;
      }
      else {
        *(void *)a4 = 0;
      }
      char v11 = 3;
      goto LABEL_16;
    case 0x18:
      if (v10 == 255) {
        goto LABEL_15;
      }
      if (v10 != 2) {
        goto LABEL_14;
      }
      *(void *)a4 = v9;
      *(unsigned char *)(a4 + 8) = 0;
      return result;
    case 0x19:
      if (v10 == 255) {
        goto LABEL_15;
      }
      if (v10 != 2) {
        goto LABEL_14;
      }
      *(void *)a4 = v9;
      char v11 = 1;
      goto LABEL_16;
    case 0x1A:
      if (v10 == 255) {
        goto LABEL_15;
      }
      if (v10 == 3)
      {
        *(void *)a4 = v9;
        char v11 = 2;
      }
      else
      {
LABEL_14:
        uint64_t result = sub_251C32408(result, v9, v10);
LABEL_15:
        *(void *)a4 = 0;
        char v11 = -1;
      }
LABEL_16:
      *(unsigned char *)(a4 + 8) = v11;
      return result;
    default:
      goto LABEL_14;
  }
}

uint64_t StaticRVCClusterGroup.Command.commandID.getter()
{
  if (*(unsigned __int8 *)(v0 + 8) >= 3u) {
    return (*(void *)v0 != 0) << 7;
  }
  else {
    return 0;
  }
}

void StaticRVCClusterGroup.Command.clusterKind.getter(unsigned char *a1@<X8>)
{
  *a1 = 0x171A1918u >> (8 * *(unsigned char *)(v1 + 8));
}

uint64_t StaticRVCClusterGroup.Command.executionOrder.getter()
{
  uint64_t result = 2;
  switch(*(unsigned char *)(v0 + 8))
  {
    case 1:
      uint64_t result = 1;
      break;
    case 2:
      uint64_t result = 0;
      break;
    case 3:
      if (*(void *)v0) {
        uint64_t result = 4;
      }
      else {
        uint64_t result = 3;
      }
      break;
    default:
      return result;
  }
  return result;
}

unint64_t StaticRVCClusterGroup.Command.expectedValues.getter()
{
  uint64_t v1 = *(void *)v0;
  switch(*(unsigned char *)(v0 + 8))
  {
    case 1:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269BA5250);
      uint64_t inited = swift_initStackObject();
      *(_DWORD *)(inited + 32) = 1;
      *(_OWORD *)(inited + 16) = xmmword_251F38650;
      char v3 = 25;
      goto LABEL_4;
    case 2:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269BA5250);
      uint64_t v5 = swift_initStackObject();
      *(_DWORD *)(v5 + 32) = 2;
      *(_OWORD *)(v5 + 16) = xmmword_251F38650;
      *(unsigned char *)(v5 + 36) = 26;
      *(void *)(v5 + 40) = v1;
      *(unsigned char *)(v5 + 48) = 3;
      unint64_t v4 = sub_251A19244(v5);
      swift_setDeallocating();
      sub_251EBED78(v1, 2);
      goto LABEL_6;
    case 3:
      if (v1) {
        uint64_t v6 = &unk_27025DF00;
      }
      else {
        uint64_t v6 = &unk_27025DEC8;
      }
      unint64_t v4 = sub_251A19244((uint64_t)v6);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269BA5248);
      goto LABEL_11;
    default:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269BA5250);
      uint64_t inited = swift_initStackObject();
      *(_DWORD *)(inited + 32) = 1;
      *(_OWORD *)(inited + 16) = xmmword_251F38650;
      char v3 = 24;
LABEL_4:
      *(unsigned char *)(inited + 36) = v3;
      *(void *)(inited + 40) = v1;
      *(unsigned char *)(inited + 48) = 2;
      unint64_t v4 = sub_251A19244(inited);
      swift_setDeallocating();
LABEL_6:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269BA5248);
LABEL_11:
      swift_arrayDestroy();
      return v4;
  }
}

unint64_t StaticRVCClusterGroup.Command.overridingAttributes.getter()
{
  return StaticRVCClusterGroup.Command.expectedValues.getter();
}

uint64_t StaticRVCClusterGroup.Command.commandFields.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = *(void *)v1;
  switch(*(unsigned char *)(v1 + 8))
  {
    case 2:
      *(void *)a1 = 0;
      *(void *)(a1 + 8) = result;
      *(unsigned char *)(a1 + 16) = 3;
      uint64_t result = swift_bridgeObjectRetain();
      break;
    case 3:
      *(void *)a1 = 0;
      *(void *)(a1 + 8) = 0;
      *(unsigned char *)(a1 + 16) = -1;
      break;
    default:
      *(void *)a1 = 0;
      *(void *)(a1 + 8) = result;
      *(unsigned char *)(a1 + 16) = 2;
      break;
  }
  return result;
}

unint64_t StaticRVCClusterGroup.Command.operationType.getter@<X0>(uint64_t a1@<X8>)
{
  BOOL v3 = *(unsigned __int8 *)(v1 + 8) < 3u;
  *(void *)(a1 + 24) = &type metadata for StaticRVCClusterGroup.Command.RVCOperationType;
  unint64_t result = sub_251EBF498();
  *(void *)(a1 + 32) = result;
  *(unsigned char *)a1 = v3;
  return result;
}

uint64_t sub_251EBD114(uint64_t a1)
{
  unint64_t v2 = sub_251EBF5E8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251EBD150(uint64_t a1)
{
  unint64_t v2 = sub_251EBF5E8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251EBD18C(uint64_t a1)
{
  unint64_t v2 = sub_251EBF690();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251EBD1C8(uint64_t a1)
{
  unint64_t v2 = sub_251EBF690();
  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_251EBD204()
{
  unint64_t result = 0x755265676E616863;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6573756170;
      break;
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0x6F527463656C6573;
      break;
    case 4:
      unint64_t result = 0x656D6F486F67;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_251EBD2C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251EC0B80(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251EBD2E8(uint64_t a1)
{
  unint64_t v2 = sub_251EBF4EC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251EBD324(uint64_t a1)
{
  unint64_t v2 = sub_251EBF4EC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251EBD360(uint64_t a1)
{
  unint64_t v2 = sub_251EBF540();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251EBD39C(uint64_t a1)
{
  unint64_t v2 = sub_251EBF540();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251EBD3D8(uint64_t a1)
{
  unint64_t v2 = sub_251EBF63C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251EBD414(uint64_t a1)
{
  unint64_t v2 = sub_251EBF63C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251EBD450(uint64_t a1)
{
  unint64_t v2 = sub_251EBF594();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251EBD48C(uint64_t a1)
{
  unint64_t v2 = sub_251EBF594();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticRVCClusterGroup.Command.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA5260);
  uint64_t v34 = *(void *)(v4 - 8);
  uint64_t v35 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v33 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA5268);
  uint64_t v40 = *(void *)(v6 - 8);
  uint64_t v41 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v39 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA5270);
  uint64_t v37 = *(void *)(v8 - 8);
  uint64_t v38 = v8;
  MEMORY[0x270FA5388](v8);
  int v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA5278);
  uint64_t v31 = *(void *)(v11 - 8);
  uint64_t v32 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v30 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA5280);
  uint64_t v36 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  id v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA5288);
  uint64_t v42 = *(void *)(v16 - 8);
  uint64_t v43 = v16;
  MEMORY[0x270FA5388](v16);
  long long v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *v2;
  uint64_t v20 = *((unsigned __int8 *)v2 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251EBF4EC();
  sub_251F36DA0();
  switch(v20)
  {
    case 1:
      char v47 = 2;
      sub_251EBF5E8();
      uint64_t v21 = v43;
      sub_251F36900();
      uint64_t v22 = v38;
      sub_251F36A10();
      uint64_t v23 = v37;
      goto LABEL_5;
    case 2:
      char v48 = 3;
      sub_251EBF594();
      int v10 = v39;
      uint64_t v21 = v43;
      sub_251F36900();
      uint64_t v44 = v19;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CDD0);
      sub_251EBF6E4(&qword_269BA52A8);
      uint64_t v22 = v41;
      sub_251F36A20();
      uint64_t v23 = v40;
LABEL_5:
      (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v22);
      return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v18, v21);
    case 3:
      long long v25 = (uint64_t (**)(char *, uint64_t))(v42 + 8);
      if (v19)
      {
        char v49 = 4;
        sub_251EBF540();
        long long v26 = v33;
        uint64_t v27 = v43;
        sub_251F36900();
        uint64_t v29 = v34;
        uint64_t v28 = v35;
      }
      else
      {
        char v46 = 1;
        sub_251EBF63C();
        long long v26 = v30;
        uint64_t v27 = v43;
        sub_251F36900();
        uint64_t v29 = v31;
        uint64_t v28 = v32;
      }
      (*(void (**)(char *, uint64_t))(v29 + 8))(v26, v28);
      return (*v25)(v18, v27);
    default:
      char v45 = 0;
      sub_251EBF690();
      uint64_t v21 = v43;
      sub_251F36900();
      sub_251F36A10();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v15, v13);
      return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v18, v21);
  }
}

uint64_t StaticRVCClusterGroup.Command.hashValue.getter()
{
  uint64_t v1 = *(void *)v0;
  unsigned __int8 v2 = *(unsigned char *)(v0 + 8);
  sub_251F36CA0();
  sub_251EBB894((uint64_t)v4, v1, v2);
  return sub_251F36D00();
}

uint64_t StaticRVCClusterGroup.Command.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v52 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA52C8);
  uint64_t v46 = *(void *)(v3 - 8);
  uint64_t v47 = v3;
  MEMORY[0x270FA5388](v3);
  char v49 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA52D0);
  uint64_t v48 = *(void *)(v44 - 8);
  MEMORY[0x270FA5388](v44);
  long long v51 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA52D8);
  uint64_t v45 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  long long v50 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA52E0);
  uint64_t v42 = *(void *)(v7 - 8);
  uint64_t v43 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA52E8);
  uint64_t v41 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA52F0);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = a1[3];
  long long v53 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v17);
  sub_251EBF4EC();
  long long v18 = v54;
  sub_251F36D90();
  if (v18) {
    goto LABEL_10;
  }
  long long v54 = v12;
  uint64_t v39 = v10;
  uint64_t v19 = v50;
  uint64_t v20 = v51;
  uint64_t v21 = v52;
  uint64_t v22 = sub_251F368E0();
  if (*(void *)(v22 + 16) != 1)
  {
    uint64_t v28 = v13;
    uint64_t v29 = sub_251F36490();
    swift_allocError();
    uint64_t v31 = v30;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D440);
    *uint64_t v31 = &type metadata for StaticRVCClusterGroup.Command;
    sub_251F36780();
    sub_251F36480();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v29 - 8) + 104))(v31, *MEMORY[0x263F8DCB0], v29);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v28);
LABEL_10:
    uint64_t v26 = (uint64_t)v53;
    return __swift_destroy_boxed_opaque_existential_0(v26);
  }
  switch(*(unsigned char *)(v22 + 32))
  {
    case 1:
      char v57 = 1;
      sub_251EBF63C();
      sub_251F36770();
      (*(void (**)(char *, uint64_t))(v42 + 8))(v9, v43);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
      uint64_t v25 = 0;
      char v27 = 3;
      goto LABEL_12;
    case 2:
      char v58 = 2;
      sub_251EBF5E8();
      uint64_t v32 = v16;
      sub_251F36770();
      uint64_t v36 = v40;
      uint64_t v25 = sub_251F36870();
      (*(void (**)(char *, uint64_t))(v45 + 8))(v19, v36);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v32, v13);
      uint64_t v21 = v52;
      uint64_t v26 = (uint64_t)v53;
      char v27 = 1;
      break;
    case 3:
      long long v54 = (char *)v22;
      char v59 = 3;
      sub_251EBF594();
      uint64_t v33 = v20;
      sub_251F36770();
      long long v50 = (char *)v13;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CDD0);
      sub_251EBF6E4(&qword_269BA52F8);
      uint64_t v37 = v44;
      sub_251F36880();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v33, v37);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, char *))(v14 + 8))(v16, v50);
      uint64_t v25 = v55;
      char v27 = 2;
      goto LABEL_12;
    case 4:
      char v60 = 4;
      sub_251EBF540();
      uint64_t v34 = v49;
      sub_251F36770();
      (*(void (**)(char *, uint64_t))(v46 + 8))(v34, v47);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
      char v27 = 3;
      uint64_t v25 = 1;
LABEL_12:
      uint64_t v26 = (uint64_t)v53;
      break;
    default:
      char v56 = 0;
      sub_251EBF690();
      uint64_t v23 = v54;
      sub_251F36770();
      uint64_t v24 = v39;
      uint64_t v25 = sub_251F36870();
      (*(void (**)(char *, uint64_t))(v41 + 8))(v23, v24);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
      uint64_t v26 = (uint64_t)v53;
      char v27 = 0;
      break;
  }
  *(void *)uint64_t v21 = v25;
  *(unsigned char *)(v21 + 8) = v27;
  return __swift_destroy_boxed_opaque_existential_0(v26);
}

uint64_t sub_251EBE3A4@<X0>(char *a1@<X0>, int a2@<W1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  char v5 = *a1;
  return StaticRVCClusterGroup.Command.init(clusterKind:commandID:expectedValues:commandFields:)(&v5, a2, a3, a4);
}

uint64_t sub_251EBE3D0()
{
  if (*(unsigned __int8 *)(v0 + 8) >= 3u) {
    return (*(void *)v0 != 0) << 7;
  }
  else {
    return 0;
  }
}

void sub_251EBE3F8(unsigned char *a1@<X8>)
{
  *a1 = 0x171A1918u >> (8 * *(unsigned char *)(v1 + 8));
}

uint64_t sub_251EBE414()
{
  uint64_t result = 2;
  switch(*(unsigned char *)(v0 + 8))
  {
    case 1:
      uint64_t result = 1;
      break;
    case 2:
      uint64_t result = 0;
      break;
    case 3:
      if (*(void *)v0) {
        uint64_t result = 4;
      }
      else {
        uint64_t result = 3;
      }
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_251EBE478()
{
  return StaticRVCClusterGroup.Command.expectedValues.getter();
}

unint64_t sub_251EBE4B4@<X0>(uint64_t a1@<X8>)
{
  BOOL v3 = *(unsigned __int8 *)(v1 + 8) < 3u;
  *(void *)(a1 + 24) = &type metadata for StaticRVCClusterGroup.Command.RVCOperationType;
  unint64_t result = sub_251EBF498();
  *(void *)(a1 + 32) = result;
  *(unsigned char *)a1 = v3;
  return result;
}

uint64_t StaticRVCClusterGroup.Command.description.getter()
{
  uint64_t v1 = *v0;
  switch(*((unsigned char *)v0 + 8))
  {
    case 1:
      sub_251F36400();
      swift_bridgeObjectRelease();
      v3[0] = 0xD000000000000013;
      v3[1] = 0x8000000251F72F60;
      goto LABEL_9;
    case 2:
      strcpy((char *)v3, "selectRooms(");
      BYTE5(v3[1]) = 0;
      HIWORD(v3[1]) = -5120;
      MEMORY[0x2533AAA10](v1, MEMORY[0x263F8E8F8]);
      goto LABEL_10;
    case 3:
      if (v1) {
        return 0x656D6F486F67;
      }
      else {
        return 0x6573756170;
      }
    default:
      sub_251F36400();
      swift_bridgeObjectRelease();
      strcpy((char *)v3, "changeRunMode(");
      HIBYTE(v3[1]) = -18;
LABEL_9:
      sub_251F36AB0();
LABEL_10:
      sub_251F35800();
      swift_bridgeObjectRelease();
      sub_251F35800();
      return v3[0];
  }
}

uint64_t sub_251EBE67C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticRVCClusterGroup.Command.init(from:)(a1, a2);
}

uint64_t sub_251EBE694(void *a1)
{
  return StaticRVCClusterGroup.Command.encode(to:)(a1);
}

uint64_t sub_251EBE6B0()
{
  uint64_t v1 = *(void *)v0;
  unsigned __int8 v2 = *(unsigned char *)(v0 + 8);
  sub_251F36CA0();
  sub_251EBB894((uint64_t)v4, v1, v2);
  return sub_251F36D00();
}

uint64_t sub_251EBE700(uint64_t a1)
{
  return sub_251EBB894(a1, *(void *)v1, *(unsigned char *)(v1 + 8));
}

uint64_t sub_251EBE70C()
{
  uint64_t v1 = *(void *)v0;
  unsigned __int8 v2 = *(unsigned char *)(v0 + 8);
  sub_251F36CA0();
  sub_251EBB894((uint64_t)v4, v1, v2);
  return sub_251F36D00();
}

uint64_t StaticRVCClusterGroup.defaultCommands()()
{
  long long v1 = v0[5];
  long long v45 = v0[4];
  long long v46 = v1;
  long long v47 = v0[6];
  long long v2 = v0[1];
  long long v41 = *v0;
  long long v42 = v2;
  long long v3 = v0[3];
  long long v43 = v0[2];
  long long v44 = v3;
  uint64_t v4 = *((void *)v0 + 15);
  uint64_t v48 = *((void *)v0 + 14);
  uint64_t v5 = *((void *)v0 + 18);
  uint64_t v38 = *((void *)v0 + 20);
  StaticRVCClusterGroup.firstCleaningRunningMode.getter((uint64_t)&v39);
  if (v40)
  {
    uint64_t v6 = v39;
    sub_251A4DE90(v39, *((uint64_t *)&v39 + 1), v40);
    uint64_t v7 = sub_251F110A4(0, 1, 1, MEMORY[0x263F8EE78]);
    unint64_t v9 = v7[2];
    unint64_t v8 = v7[3];
    if (v9 >= v8 >> 1) {
      uint64_t v7 = sub_251F110A4((void *)(v8 > 1), v9 + 1, 1, v7);
    }
    char v10 = 0;
    void v7[2] = v9 + 1;
    uint64_t v11 = &v7[2 * v9];
    void v11[4] = v6;
    uint64_t v12 = v11 + 4;
  }
  else
  {
    uint64_t v7 = sub_251F110A4(0, 1, 1, MEMORY[0x263F8EE78]);
    unint64_t v14 = v7[2];
    unint64_t v13 = v7[3];
    if (v14 >= v13 >> 1) {
      uint64_t v7 = sub_251F110A4((void *)(v13 > 1), v14 + 1, 1, v7);
    }
    void v7[2] = v14 + 1;
    uint64_t v15 = &v7[2 * v14];
    void v15[4] = 0;
    uint64_t v12 = v15 + 4;
    char v10 = 3;
  }
  *((unsigned char *)v12 + 8) = v10;
  StaticRVCClusterGroup.firstVacuumCleaningMode.getter(&v39);
  if (v40)
  {
    uint64_t v16 = v39;
    sub_251A4DE90(v39, *((uint64_t *)&v39 + 1), v40);
    unint64_t v18 = v7[2];
    unint64_t v17 = v7[3];
    if (v18 >= v17 >> 1) {
      uint64_t v7 = sub_251F110A4((void *)(v17 > 1), v18 + 1, 1, v7);
    }
    void v7[2] = v18 + 1;
    uint64_t v19 = &v7[2 * v18];
    v19[4] = v16;
    *((unsigned char *)v19 + 40) = 1;
    uint64_t v20 = MEMORY[0x263F8EE78];
    if (v4)
    {
      if (v38)
      {
        uint64_t v21 = ServiceArea.supportedAreas(for:)(v5);
        int64_t v22 = *(void *)(v21 + 16);
        if (v22)
        {
          sub_251A3E1E0(0, v22, 0);
          unint64_t v23 = *(void *)(v20 + 16);
          uint64_t v24 = 32;
          do
          {
            int v25 = *(_DWORD *)(v21 + v24);
            unint64_t v26 = *(void *)(v20 + 24);
            if (v23 >= v26 >> 1) {
              sub_251A3E1E0(v26 > 1, v23 + 1, 1);
            }
            *(void *)(v20 + 16) = v23 + 1;
            *(_DWORD *)(v20 + 4 * v23 + 32) = v25;
            v24 += 48;
            ++v23;
            --v22;
          }
          while (v22);
        }
      }
      else
      {
        uint64_t v27 = ServiceArea.validAreas.getter();
        int64_t v28 = *(void *)(v27 + 16);
        if (v28)
        {
          sub_251A3E1E0(0, v28, 0);
          unint64_t v29 = *(void *)(v20 + 16);
          uint64_t v30 = 32;
          do
          {
            int v31 = *(_DWORD *)(v27 + v30);
            unint64_t v32 = *(void *)(v20 + 24);
            if (v29 >= v32 >> 1) {
              sub_251A3E1E0(v32 > 1, v29 + 1, 1);
            }
            *(void *)(v20 + 16) = v29 + 1;
            *(_DWORD *)(v20 + 4 * v29 + 32) = v31;
            v30 += 48;
            ++v29;
            --v28;
          }
          while (v28);
        }
      }
      swift_bridgeObjectRelease();
    }
    unint64_t v34 = v7[2];
    unint64_t v33 = v7[3];
    if (v34 >= v33 >> 1) {
      uint64_t v7 = sub_251F110A4((void *)(v33 > 1), v34 + 1, 1, v7);
    }
    void v7[2] = v34 + 1;
    uint64_t v35 = &v7[2 * v34];
    v35[4] = v20;
    *((unsigned char *)v35 + 40) = 2;
  }
  uint64_t v36 = sub_251EECEEC((uint64_t)v7);
  swift_bridgeObjectRelease();
  return v36;
}

uint64_t sub_251EBECA4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_251EBED04(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA08C0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_251EBED64(uint64_t a1, char a2)
{
  if (a2 == 2) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_251EBED78(uint64_t a1, char a2)
{
  if (a2 == 2) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t _s13HomeDataModel21StaticRVCClusterGroupV7CommandO8TemplateO2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(unsigned __int8 *)(a1 + 8);
  unint64_t v4 = *(void *)a2;
  unsigned int v5 = *(unsigned __int8 *)(a2 + 8);
  switch(v3 >> 6)
  {
    case 1u:
      if ((v5 & 0xC0) != 0x40) {
        goto LABEL_27;
      }
      sub_251C33644(*(void *)a1, v3);
      sub_251C33644(v4, v5);
      if ((v3 & 1) == 0) {
        return (v5 & 1) == 0 && v2 == v4;
      }
      if (!v2) {
        return (v5 & 1) != 0 && !v4;
      }
      if (v2 == 1) {
        return (v5 & 1) != 0 && v4 == 1;
      }
      return (v5 & 1) != 0 && v4 >= 2;
    case 2u:
      if ((v5 & 0xC0) != 0x80)
      {
        swift_bridgeObjectRetain();
        goto LABEL_27;
      }
      if (v2)
      {
        if (v4)
        {
          BOOL v7 = sub_251AB62F0(*(void *)a1, *(void *)a2);
          sub_251EBF280(v4, v5);
          sub_251EBF280(v2, v3);
          sub_251EBF280(v4, v5);
          sub_251EBF280(v2, v3);
          sub_251EBF280(v4, v5);
          sub_251EBF280(v2, v3);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_251C33644(v2, v3);
          sub_251C33644(v4, v5);
          sub_251C33644(v4, v5);
          sub_251C33644(v2, v3);
          return v7;
        }
LABEL_37:
        sub_251EBF280(*(void *)a2, *(unsigned char *)(a2 + 8));
        sub_251EBF280(v2, v3);
        sub_251EBF280(v4, v5);
        sub_251EBF280(v2, v3);
        sub_251EBF280(v4, v5);
        sub_251EBF280(v2, v3);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_251C33644(v2, v3);
        sub_251C33644(v4, v5);
        sub_251C33644(v4, v5);
        uint64_t v11 = v2;
        char v12 = v3;
        goto LABEL_28;
      }
      if (v4) {
        goto LABEL_37;
      }
      sub_251EBF280(0, *(unsigned char *)(a2 + 8));
      sub_251EBF280(0, v5);
      sub_251EBF280(0, v5);
      sub_251EBF280(0, v3);
      swift_bridgeObjectRelease_n();
      sub_251C33644(0, v3);
      sub_251C33644(0, v5);
      sub_251C33644(0, v5);
      char v9 = v3;
LABEL_47:
      sub_251C33644(0, v9);
      return 1;
    case 3u:
      if (v2 | v3 ^ 0xC0)
      {
        BOOL v10 = v5 >= 0xC0 && v4 == 1;
        if (v10 && v5 == 192)
        {
          sub_251C33644(*(void *)a1, v3);
          uint64_t v6 = 1;
          sub_251C33644(1, 192);
          return v6;
        }
      }
      else
      {
        BOOL v8 = v5 >= 0xC0 && v4 == 0;
        if (v8 && v5 == 192)
        {
          sub_251C33644(*(void *)a1, v3);
          char v9 = -64;
          goto LABEL_47;
        }
      }
LABEL_27:
      sub_251EBF280(v4, v5);
      sub_251C33644(v2, v3);
      uint64_t v11 = v4;
      char v12 = v5;
LABEL_28:
      sub_251C33644(v11, v12);
      return 0;
    default:
      if (v5 >= 0x40) {
        goto LABEL_27;
      }
      sub_251C33644(*(void *)a1, v3);
      sub_251C33644(v4, v5);
      return ((v4 ^ v2) & 1) == 0;
  }
}

BOOL _s13HomeDataModel21StaticRVCClusterGroupV7CommandO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = *(void *)a2;
  int v5 = *(unsigned __int8 *)(a2 + 8);
  switch(v3)
  {
    case 1:
      if (v5 != 1) {
        goto LABEL_21;
      }
      sub_251EBED64(*(void *)a1, 1);
      uint64_t v6 = v4;
      char v7 = 1;
      goto LABEL_6;
    case 2:
      uint64_t v9 = *(void *)a1;
      if (v5 == 2)
      {
        BOOL v10 = sub_251AB62F0(v9, *(void *)a2);
        sub_251EBED78(v4, 2);
        sub_251EBED78(v2, 2);
        sub_251EBED64(v2, 2);
        sub_251EBED64(v4, 2);
        return v10;
      }
      swift_bridgeObjectRetain();
      goto LABEL_21;
    case 3:
      if (v2)
      {
        if (v5 == 3 && v4 == 1)
        {
          uint64_t v8 = 1;
          sub_251EBED64(1, 3);
          sub_251EBED64(1, 3);
          return v8;
        }
        goto LABEL_21;
      }
      if (v5 != 3 || v4 != 0)
      {
LABEL_21:
        sub_251EBED78(v4, v5);
        sub_251EBED64(v2, v3);
        sub_251EBED64(v4, v5);
        return 0;
      }
      sub_251EBED64(0, 3);
      sub_251EBED64(0, 3);
      return 1;
    default:
      if (*(unsigned char *)(a2 + 8)) {
        goto LABEL_21;
      }
      sub_251EBED64(*(void *)a1, 0);
      uint64_t v6 = v4;
      char v7 = 0;
LABEL_6:
      sub_251EBED64(v6, v7);
      return v2 == v4;
  }
}

uint64_t sub_251EBF280(uint64_t a1, char a2)
{
  if ((a2 & 0xC0) == 0x80) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_251EBF294(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _DWORD))
{
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void *)(a1 + 216),
    *(void *)(a1 + 224),
    *(_DWORD *)(a1 + 232));
  return a1;
}

void sub_251EBF318(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  if (a5)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_251A1AC64(a7, a8, a9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_251A1ACA8(a16, a17, a18, a19, a20, a21, a22, a23, a24, a25);
  }
}

uint64_t sub_251EBF484(uint64_t a1, char a2)
{
  if (a2 != -1) {
    return sub_251EBED64(a1, a2);
  }
  return a1;
}

unint64_t sub_251EBF498()
{
  unint64_t result = qword_269BA5258;
  if (!qword_269BA5258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5258);
  }
  return result;
}

unint64_t sub_251EBF4EC()
{
  unint64_t result = qword_269BA5290;
  if (!qword_269BA5290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5290);
  }
  return result;
}

unint64_t sub_251EBF540()
{
  unint64_t result = qword_269BA5298;
  if (!qword_269BA5298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5298);
  }
  return result;
}

unint64_t sub_251EBF594()
{
  unint64_t result = qword_269BA52A0;
  if (!qword_269BA52A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA52A0);
  }
  return result;
}

unint64_t sub_251EBF5E8()
{
  unint64_t result = qword_269BA52B0;
  if (!qword_269BA52B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA52B0);
  }
  return result;
}

unint64_t sub_251EBF63C()
{
  unint64_t result = qword_269BA52B8;
  if (!qword_269BA52B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA52B8);
  }
  return result;
}

unint64_t sub_251EBF690()
{
  unint64_t result = qword_269BA52C0;
  if (!qword_269BA52C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA52C0);
  }
  return result;
}

uint64_t sub_251EBF6E4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B9CDD0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_251EBF74C()
{
  unint64_t result = qword_269BA5300;
  if (!qword_269BA5300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5300);
  }
  return result;
}

unint64_t sub_251EBF7A4()
{
  unint64_t result = qword_269BA5308;
  if (!qword_269BA5308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5308);
  }
  return result;
}

unint64_t sub_251EBF7FC()
{
  unint64_t result = qword_269BA5310;
  if (!qword_269BA5310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5310);
  }
  return result;
}

unint64_t sub_251EBF850(uint64_t a1)
{
  unint64_t result = sub_251EBF878();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_251EBF878()
{
  unint64_t result = qword_269BA5318;
  if (!qword_269BA5318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5318);
  }
  return result;
}

unint64_t sub_251EBF8D0()
{
  unint64_t result = qword_269BA5320;
  if (!qword_269BA5320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5320);
  }
  return result;
}

unint64_t sub_251EBF928()
{
  unint64_t result = qword_269BA5328;
  if (!qword_269BA5328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5328);
  }
  return result;
}

unint64_t sub_251EBF97C(uint64_t a1)
{
  unint64_t result = sub_251EBF9A4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_251EBF9A4()
{
  unint64_t result = qword_269BA5330;
  if (!qword_269BA5330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5330);
  }
  return result;
}

unint64_t sub_251EBF9F8(uint64_t a1)
{
  unint64_t result = sub_251EBFA20();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_251EBFA20()
{
  unint64_t result = qword_269BA5338;
  if (!qword_269BA5338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5338);
  }
  return result;
}

unint64_t sub_251EBFA78()
{
  unint64_t result = qword_269BA5340;
  if (!qword_269BA5340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5340);
  }
  return result;
}

unint64_t sub_251EBFACC(uint64_t a1)
{
  unint64_t result = sub_251EBFAF4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_251EBFAF4()
{
  unint64_t result = qword_269BA5348;
  if (!qword_269BA5348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5348);
  }
  return result;
}

uint64_t _s7CommandOwCP(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_251EBED78(*(void *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

uint64_t _s7CommandOwxx(uint64_t a1)
{
  return sub_251EBED64(*(void *)a1, *(unsigned char *)(a1 + 8));
}

uint64_t *_s7CommandOwca(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_251EBFE30(a1, a2, a3, (void (*)(void, void))sub_251EBED78, (void (*)(uint64_t, uint64_t))sub_251EBED64);
}

uint64_t _s7CommandOwta(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)a1;
  *(void *)a1 = *(void *)a2;
  char v5 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  sub_251EBED64(v4, v5);
  return a1;
}

uint64_t sub_251EBFC0C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 2u) {
    return *(unsigned __int8 *)(a1 + 8);
  }
  else {
    return (*(_DWORD *)a1 + 3);
  }
}

uint64_t sub_251EBFC24(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(void *)unint64_t result = a2 - 3;
    LOBYTE(a2) = 3;
  }
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for StaticRVCClusterGroup.Command()
{
  return &type metadata for StaticRVCClusterGroup.Command;
}

uint64_t _s7CommandO9CleanModeOwet(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t _s7CommandO9CleanModeOwst(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)unint64_t result = 0;
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

uint64_t sub_251EBFC9C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_251EBFCB8(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)unint64_t result = (a2 - 1);
    *(unsigned char *)(result + 8) = 1;
  }
  else
  {
    *(unsigned char *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticRVCClusterGroup.Command.CleanMode()
{
  return &type metadata for StaticRVCClusterGroup.Command.CleanMode;
}

ValueMetadata *type metadata accessor for StaticRVCClusterGroup.Command.RunMode()
{
  return &type metadata for StaticRVCClusterGroup.Command.RunMode;
}

void *_s7CommandO13RoomSelectionOwCP(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  return a1;
}

void *_s7CommandO13RoomSelectionOwca(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *_s7CommandO13RoomSelectionOwta(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for StaticRVCClusterGroup.Command.RoomSelection()
{
  return &type metadata for StaticRVCClusterGroup.Command.RoomSelection;
}

uint64_t _s7CommandO8TemplateOwCP(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_251EBF280(*(void *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

uint64_t _s7CommandO8TemplateOwxx(uint64_t a1)
{
  return sub_251C33644(*(void *)a1, *(unsigned char *)(a1 + 8));
}

uint64_t *_s7CommandO8TemplateOwca(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_251EBFE30(a1, a2, a3, (void (*)(void, void))sub_251EBF280, (void (*)(uint64_t, uint64_t))sub_251C33644);
}

uint64_t *sub_251EBFE30(uint64_t *a1, uint64_t *a2, uint64_t a3, void (*a4)(void, void), void (*a5)(uint64_t, uint64_t))
{
  uint64_t v7 = *a2;
  unsigned __int8 v8 = *((unsigned char *)a2 + 8);
  a4(*a2, v8);
  uint64_t v9 = *a1;
  *a1 = v7;
  uint64_t v10 = *((unsigned __int8 *)a1 + 8);
  *((unsigned char *)a1 + 8) = v8;
  a5(v9, v10);
  return a1;
}

uint64_t _s7CommandO8TemplateOwta(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)a1;
  *(void *)a1 = *(void *)a2;
  char v5 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  sub_251C33644(v4, v5);
  return a1;
}

uint64_t _s7CommandO8TemplateOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7D && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 125);
  }
  unsigned int v3 = ((*(unsigned __int8 *)(a1 + 8) >> 6) & 0xFFFFFF83 | (4 * ((*(unsigned __int8 *)(a1 + 8) >> 1) & 0x1F))) ^ 0x7F;
  if (v3 >= 0x7C) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t _s7CommandO8TemplateOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7C)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 125;
    if (a3 >= 0x7D) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7D) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2)
    {
      *(void *)unint64_t result = 0;
      *(unsigned char *)(result + 8) = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
    }
  }
  return result;
}

uint64_t sub_251EBFF78(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 8) >> 6;
  if (v1 == 3) {
    return (*(_DWORD *)a1 + 3);
  }
  else {
    return v1;
  }
}

uint64_t sub_251EBFF94(uint64_t result)
{
  *(unsigned char *)(result + 8) &= 0x3Fu;
  return result;
}

uint64_t sub_251EBFFA4(uint64_t result, unsigned int a2)
{
  if (a2 < 3)
  {
    *(unsigned char *)(result + 8) = *(unsigned char *)(result + 8) & 1 | ((_BYTE)a2 << 6);
  }
  else
  {
    *(void *)unint64_t result = a2 - 3;
    *(unsigned char *)(result + 8) = -64;
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticRVCClusterGroup.Command.Template()
{
  return &type metadata for StaticRVCClusterGroup.Command.Template;
}

unsigned char *_s7CommandO7RunModeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251EC00ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticRVCClusterGroup.Command.RVCOperationType()
{
  return &type metadata for StaticRVCClusterGroup.Command.RVCOperationType;
}

unsigned char *_s7CommandO10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251EC01B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *_s7CommandO10CodingKeysOMa()
{
  return &_s7CommandO10CodingKeysON;
}

ValueMetadata *_s7CommandO23ChangeRunModeCodingKeysOMa()
{
  return &_s7CommandO23ChangeRunModeCodingKeysON;
}

ValueMetadata *_s7CommandO15PauseCodingKeysOMa()
{
  return &_s7CommandO15PauseCodingKeysON;
}

ValueMetadata *_s7CommandO28ChangeCleaningModeCodingKeysOMa()
{
  return &_s7CommandO28ChangeCleaningModeCodingKeysON;
}

unsigned char *_s7CommandO23ChangeRunModeCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x251EC02B8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s7CommandO21SelectRoomsCodingKeysOMa()
{
  return &_s7CommandO21SelectRoomsCodingKeysON;
}

ValueMetadata *_s7CommandO16GoHomeCodingKeysOMa()
{
  return &_s7CommandO16GoHomeCodingKeysON;
}

unint64_t sub_251EC0304()
{
  unint64_t result = qword_269BA5350;
  if (!qword_269BA5350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5350);
  }
  return result;
}

unint64_t sub_251EC035C()
{
  unint64_t result = qword_269BA5358;
  if (!qword_269BA5358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5358);
  }
  return result;
}

unint64_t sub_251EC03B4()
{
  unint64_t result = qword_269BA5360;
  if (!qword_269BA5360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5360);
  }
  return result;
}

unint64_t sub_251EC040C()
{
  unint64_t result = qword_269BA5368;
  if (!qword_269BA5368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5368);
  }
  return result;
}

unint64_t sub_251EC0464()
{
  unint64_t result = qword_269BA5370;
  if (!qword_269BA5370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5370);
  }
  return result;
}

unint64_t sub_251EC04BC()
{
  unint64_t result = qword_269BA5378;
  if (!qword_269BA5378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5378);
  }
  return result;
}

unint64_t sub_251EC0514()
{
  unint64_t result = qword_269BA5380;
  if (!qword_269BA5380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5380);
  }
  return result;
}

unint64_t sub_251EC056C()
{
  unint64_t result = qword_269BA5388;
  if (!qword_269BA5388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5388);
  }
  return result;
}

unint64_t sub_251EC05C4()
{
  unint64_t result = qword_269BA5390;
  if (!qword_269BA5390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5390);
  }
  return result;
}

unint64_t sub_251EC061C()
{
  unint64_t result = qword_269BA5398;
  if (!qword_269BA5398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5398);
  }
  return result;
}

unint64_t sub_251EC0674()
{
  unint64_t result = qword_269BA53A0;
  if (!qword_269BA53A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA53A0);
  }
  return result;
}

unint64_t sub_251EC06CC()
{
  unint64_t result = qword_269BA53A8;
  if (!qword_269BA53A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA53A8);
  }
  return result;
}

unint64_t sub_251EC0724()
{
  unint64_t result = qword_269BA53B0;
  if (!qword_269BA53B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA53B0);
  }
  return result;
}

unint64_t sub_251EC077C()
{
  unint64_t result = qword_269BA53B8;
  if (!qword_269BA53B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA53B8);
  }
  return result;
}

unint64_t sub_251EC07D4()
{
  unint64_t result = qword_269BA53C0;
  if (!qword_269BA53C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA53C0);
  }
  return result;
}

unint64_t sub_251EC082C()
{
  unint64_t result = qword_269BA53C8;
  if (!qword_269BA53C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA53C8);
  }
  return result;
}

uint64_t sub_251EC0880(uint64_t a1, void *a2)
{
  uint64_t v21 = a1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  uint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v22 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v7 = 0;
  unsigned __int8 v8 = (void *)MEMORY[0x263F8EE78];
  if (!v5) {
    goto LABEL_5;
  }
LABEL_4:
  for (v5 &= v5 - 1; ; uint64_t v5 = (v10 - 1) & v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D6B0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_251F3A500;
    *(void *)(inited + 32) = sub_251F356F0();
    *(void *)(inited + 40) = v13;
    *(void *)(inited + 48) = a2;
    *(void *)(inited + 56) = sub_251F356F0();
    *(void *)(inited + 64) = v14;
    id v15 = a2;
    sub_251AA3F7C();
    sub_251AA88D0();
    uint64_t v16 = sub_251F35540();
    swift_bridgeObjectRelease();
    *(void *)(inited + 72) = v16;
    unint64_t v17 = sub_2519FA460(inited);
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_251F0F8C8(0, v8[2] + 1, 1, v8);
      unsigned __int8 v8 = (void *)result;
    }
    unint64_t v19 = v8[2];
    unint64_t v18 = v8[3];
    if (v19 >= v18 >> 1)
    {
      uint64_t result = (uint64_t)sub_251F0F8C8((void *)(v18 > 1), v19 + 1, 1, v8);
      unsigned __int8 v8 = (void *)result;
    }
    void v8[2] = v19 + 1;
    v8[v19 + 4] = v17;
    if (v5) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v9 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v9 >= v22) {
      goto LABEL_29;
    }
    uint64_t v10 = *(void *)(v21 + 8 * v9);
    ++v7;
    if (!v10)
    {
      int64_t v7 = v9 + 1;
      if (v9 + 1 >= v22) {
        goto LABEL_29;
      }
      uint64_t v10 = *(void *)(v21 + 8 * v7);
      if (!v10)
      {
        int64_t v7 = v9 + 2;
        if (v9 + 2 >= v22) {
          goto LABEL_29;
        }
        uint64_t v10 = *(void *)(v21 + 8 * v7);
        if (!v10)
        {
          int64_t v7 = v9 + 3;
          if (v9 + 3 >= v22) {
            goto LABEL_29;
          }
          uint64_t v10 = *(void *)(v21 + 8 * v7);
          if (!v10)
          {
            int64_t v7 = v9 + 4;
            if (v9 + 4 >= v22) {
              goto LABEL_29;
            }
            uint64_t v10 = *(void *)(v21 + 8 * v7);
            if (!v10) {
              break;
            }
          }
        }
      }
    }
LABEL_22:
    ;
  }
  int64_t v11 = v9 + 5;
  if (v11 >= v22)
  {
LABEL_29:
    swift_release();
    uint64_t v20 = sub_251EEC5F8((uint64_t)v8);
    swift_bridgeObjectRelease();
    return v20;
  }
  uint64_t v10 = *(void *)(v21 + 8 * v11);
  if (v10)
  {
    int64_t v7 = v11;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v7 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v7 >= v22) {
      goto LABEL_29;
    }
    uint64_t v10 = *(void *)(v21 + 8 * v7);
    ++v11;
    if (v10) {
      goto LABEL_22;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_251EC0B80(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x755265676E616863 && a2 == 0xED000065646F4D6ELL;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6573756170 && a2 == 0xE500000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000251F72F80 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6F527463656C6573 && a2 == 0xEB00000000736D6FLL || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656D6F486F67 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t StaticCameraProfile.clipPlaybackManager(contentProvider:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA53E8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for StaticCameraProfile();
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  unsigned __int8 v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v17 - v9;
  sub_251EC8868(v1, (uint64_t)&v17 - v9, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
  sub_251EC8868((uint64_t)v10, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
  uint64_t v11 = sub_251F34DA0();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34D90();
  uint64_t v14 = type metadata accessor for ScrubberPositionData();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v4, 1, 1, v14);
  type metadata accessor for CameraClipPlaybackManager();
  uint64_t v15 = swift_allocObject();
  sub_251EC63C4((uint64_t)v8, (uint64_t)v13, (uint64_t)v4);
  sub_251EC88D0((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
  return v15;
}

uint64_t type metadata accessor for CameraClipPlaybackManager()
{
  uint64_t result = qword_269BA5450;
  if (!qword_269BA5450) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_251EC1008()
{
  uint64_t v0 = sub_251F350A0();
  __swift_allocate_value_buffer(v0, qword_269BA53D0);
  __swift_project_value_buffer(v0, (uint64_t)qword_269BA53D0);
  return sub_251F35090();
}

uint64_t static Logger.cameraClipPlaybackManager.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_269B9C518 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_251F350A0();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_269BA53D0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t CameraClipPlaybackManager.cameraProfile.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_251EC8868(v1 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager_cameraProfile, a1, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
}

uint64_t CameraClipPlaybackManager.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager_id;
  uint64_t v4 = sub_251F34DA0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t CameraClipPlaybackManager.eventCache.getter()
{
  return swift_retain();
}

uint64_t sub_251EC11F4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_251EC12B8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_251EC8D34(&qword_269BA5400, (void (*)(uint64_t))type metadata accessor for CameraClipPlaybackManager);
  sub_251F34F10();
  swift_release();
  uint64_t v4 = (void *)(v3 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__visitedEventRequestID);
  swift_beginAccess();
  *a2 = *v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_251EC1384()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_251EC1464(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)(a1 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__visitedEventRequestID);
  swift_beginAccess();
  *uint64_t v3 = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

id CameraClipPlaybackManager.avPlayer.getter()
{
  return objc_retain(*(id *)(*(void *)(v0 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager_playbackManager)
                           + 56));
}

uint64_t CameraClipPlaybackManager.readyForPlayback.getter()
{
  swift_getKeyPath();
  sub_251EC8D34(&qword_269BA5400, (void (*)(uint64_t))type metadata accessor for CameraClipPlaybackManager);
  sub_251F34F10();
  swift_release();
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__readyForPlayback);
}

uint64_t sub_251EC1590@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_251EC8D34(&qword_269BA5400, (void (*)(uint64_t))type metadata accessor for CameraClipPlaybackManager);
  sub_251F34F10();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__readyForPlayback);
  return result;
}

uint64_t sub_251EC1640()
{
  return swift_release();
}

uint64_t sub_251EC1710(unsigned __int8 *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ScrubberPositionData();
  uint64_t v34 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA53E8);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C908);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *a1;
  swift_getKeyPath();
  v36[0] = v1;
  sub_251EC8D34(&qword_269BA5400, (void (*)(uint64_t))type metadata accessor for CameraClipPlaybackManager);
  sub_251F34F10();
  swift_release();
  uint64_t v14 = OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__currentState;
  uint64_t result = sub_251DB1E9C(v13, *(unsigned char *)(v1 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__currentState));
  if ((result & 1) == 0)
  {
    unint64_t v33 = v6;
    if (qword_269B9C518 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_251F350A0();
    __swift_project_value_buffer(v16, (uint64_t)qword_269BA53D0);
    swift_retain_n();
    uint64_t v17 = sub_251F35080();
    int v18 = sub_251F35FA0();
    if (os_log_type_enabled(v17, (os_log_type_t)v18))
    {
      int v31 = v18;
      uint64_t v32 = v4;
      uint64_t v19 = swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      v36[0] = v30;
      *(_DWORD *)uint64_t v19 = 136315394;
      unint64_t v20 = 0xE600000000000000;
      uint64_t v21 = 0x646573756170;
      switch(v13)
      {
        case 1:
          unint64_t v20 = 0xE700000000000000;
          uint64_t v21 = 0x676E6979616C70;
          break;
        case 2:
          unint64_t v20 = 0x8000000251F67C60;
          uint64_t v21 = 0xD000000000000014;
          break;
        case 3:
          uint64_t v21 = 0xD000000000000015;
          unint64_t v20 = 0x8000000251F67C80;
          break;
        case 4:
          unint64_t v20 = 0xE400000000000000;
          uint64_t v21 = 1702259052;
          break;
        default:
          break;
      }
      uint64_t v35 = sub_251A00E84(v21, v20, v36);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 12) = 2080;
      swift_getKeyPath();
      uint64_t v35 = v2;
      sub_251F34F10();
      swift_release();
      unint64_t v22 = 0xE600000000000000;
      uint64_t v23 = 0x646573756170;
      switch(*(unsigned char *)(v2 + v14))
      {
        case 1:
          unint64_t v22 = 0xE700000000000000;
          uint64_t v23 = 0x676E6979616C70;
          break;
        case 2:
          unint64_t v22 = 0x8000000251F67C60;
          uint64_t v23 = 0xD000000000000014;
          break;
        case 3:
          uint64_t v23 = 0xD000000000000015;
          unint64_t v22 = 0x8000000251F67C80;
          break;
        case 4:
          unint64_t v22 = 0xE400000000000000;
          uint64_t v23 = 1702259052;
          break;
        default:
          break;
      }
      uint64_t v35 = sub_251A00E84(v23, v22, v36);
      sub_251F361D0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2519F3000, v17, (os_log_type_t)v31, "Updated current state from %s to %s", (uint8_t *)v19, 0x16u);
      uint64_t v24 = v30;
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v24, -1, -1);
      MEMORY[0x2533AC760](v19, -1, -1);

      uint64_t v4 = v32;
    }
    else
    {

      swift_release_n();
    }
    swift_getKeyPath();
    v36[0] = v2;
    sub_251F34F10();
    swift_release();
    LOBYTE(v36[0]) = *(unsigned char *)(v2 + v14);
    sub_251EC1E68(v36);
    swift_getKeyPath();
    v36[0] = v2;
    sub_251F34F10();
    swift_release();
    uint64_t v25 = v2 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__currentPosition;
    swift_beginAccess();
    sub_251A1B128(v25, (uint64_t)v9, &qword_269BA53E8);
    int v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48))(v9, 1, v4);
    uint64_t v27 = (uint64_t)v33;
    if (v26)
    {
      sub_251A1B064((uint64_t)v9, &qword_269BA53E8);
      uint64_t v28 = type metadata accessor for ScrubberElement(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v12, 1, 1, v28);
    }
    else
    {
      sub_251EC8868((uint64_t)v9, (uint64_t)v33, (uint64_t (*)(void))type metadata accessor for ScrubberPositionData);
      sub_251A1B064((uint64_t)v9, &qword_269BA53E8);
      sub_251A1B128(v27 + *(int *)(v4 + 32), (uint64_t)v12, &qword_269B9C908);
      sub_251EC88D0(v27, (uint64_t (*)(void))type metadata accessor for ScrubberPositionData);
    }
    return sub_251A1B064((uint64_t)v12, &qword_269B9C908);
  }
  return result;
}

uint64_t CameraClipPlaybackManager.currentState.getter@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  sub_251EC8D34(&qword_269BA5400, (void (*)(uint64_t))type metadata accessor for CameraClipPlaybackManager);
  sub_251F34F10();
  uint64_t result = swift_release();
  *a1 = *(unsigned char *)(v1 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__currentState);
  return result;
}

id sub_251EC1E68(unsigned char *a1)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager_playbackManager);
  if (*a1 == 1)
  {
    sub_251ABB4C4();
    uint64_t v3 = &selRef_play;
  }
  else
  {
    sub_251ABB8F8();
    uint64_t v3 = &selRef_pause;
  }
  uint64_t v4 = *(void **)(v2 + 56);
  uint64_t v5 = *v3;
  return [v4 v5];
}

uint64_t CameraClipPlaybackManager.currentElement.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ScrubberPositionData();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA53E8);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  uint64_t v14 = v1;
  sub_251EC8D34(&qword_269BA5400, (void (*)(uint64_t))type metadata accessor for CameraClipPlaybackManager);
  sub_251F34F10();
  swift_release();
  uint64_t v10 = v1 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__currentPosition;
  swift_beginAccess();
  sub_251A1B128(v10, (uint64_t)v9, &qword_269BA53E8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3))
  {
    sub_251A1B064((uint64_t)v9, &qword_269BA53E8);
    uint64_t v11 = type metadata accessor for ScrubberElement(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(a1, 1, 1, v11);
  }
  else
  {
    sub_251EC8868((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ScrubberPositionData);
    sub_251A1B064((uint64_t)v9, &qword_269BA53E8);
    sub_251A1B128((uint64_t)&v6[*(int *)(v3 + 32)], a1, &qword_269B9C908);
    return sub_251EC88D0((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ScrubberPositionData);
  }
}

uint64_t sub_251EC218C@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_251EC8D34(&qword_269BA5400, (void (*)(uint64_t))type metadata accessor for CameraClipPlaybackManager);
  sub_251F34F10();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__currentState);
  return result;
}

uint64_t sub_251EC223C()
{
  return swift_release();
}

uint64_t sub_251EC230C(uint64_t a1)
{
  uint64_t v131 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v123 = (char *)v118 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for ScrubberElement.ID(0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v126 = (uint64_t)v118 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v135 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9FE30);
  uint64_t v6 = MEMORY[0x270FA5388](v135);
  uint64_t v128 = (uint64_t)v118 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v133 = (uint64_t)v118 - v8;
  uint64_t v139 = type metadata accessor for ScrubberPositionData();
  unint64_t v142 = *(void **)(v139 - 8);
  MEMORY[0x270FA5388](v139);
  unint64_t v136 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))((char *)v118 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA53E8);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v130 = (uint64_t)v118 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)v118 - v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C908);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v124 = (uint64_t)v118 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v127 = (uint64_t)v118 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v134 = (uint64_t)v118 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v125 = (uint64_t)v118 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v132 = (uint64_t)v118 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v137 = (uint64_t)v118 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v129 = (uint64_t)v118 - v29;
  MEMORY[0x270FA5388](v28);
  uint64_t v138 = (uint64_t)v118 - v30;
  uint64_t v31 = type metadata accessor for ScrubberElement(0);
  uint64_t v140 = *(void *)(v31 - 8);
  uint64_t v141 = v31;
  uint64_t v32 = *(void *)(v140 + 64);
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  MEMORY[0x270FA5388](v33);
  uint64_t v35 = (char *)v118 - v34;
  swift_getKeyPath();
  uint64_t v36 = v1 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager___observationRegistrar;
  uint64_t v145 = v1;
  uint64_t v37 = sub_251EC8D34(&qword_269BA5400, (void (*)(uint64_t))type metadata accessor for CameraClipPlaybackManager);
  sub_251F34F10();
  swift_release();
  uint64_t v38 = v1;
  uint64_t v39 = v1 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__currentPosition;
  swift_beginAccess();
  sub_251A1B128(v39, (uint64_t)v14, &qword_269BA53E8);
  uint64_t v40 = (unsigned int (*)(char *, uint64_t))v142[6];
  uint64_t v41 = v139;
  long long v42 = (char *)(v142 + 6);
  if (v40(v14, 1))
  {
    sub_251A1B064((uint64_t)v14, &qword_269BA53E8);
    uint64_t v43 = v138;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v140 + 56))(v138, 1, 1, v141);
    return sub_251A1B064(v43, &qword_269B9C908);
  }
  unint64_t v142 = v42;
  uint64_t v121 = v37;
  v118[2] = v36;
  v118[1] = v32;
  uint64_t v120 = (uint64_t)v118 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = v38;
  long long v44 = v136;
  sub_251EC8868((uint64_t)v14, (uint64_t)v136, (uint64_t (*)(void))type metadata accessor for ScrubberPositionData);
  sub_251A1B064((uint64_t)v14, &qword_269BA53E8);
  uint64_t v43 = v138;
  sub_251A1B128((uint64_t)v44 + *(int *)(v41 + 32), v138, &qword_269B9C908);
  sub_251EC88D0((uint64_t)v44, (uint64_t (*)(void))type metadata accessor for ScrubberPositionData);
  uint64_t v45 = v140;
  uint64_t v46 = v141;
  long long v47 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v140 + 48);
  if (v47(v43, 1, v141) == 1) {
    return sub_251A1B064(v43, &qword_269B9C908);
  }
  unint64_t v136 = v47;
  sub_251EC8CC4(v43, (uint64_t)v35, type metadata accessor for ScrubberElement);
  uint64_t v49 = v130;
  sub_251A1B128(v131, v130, &qword_269BA53E8);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v40)(v49, 1, v41) == 1)
  {
    sub_251A1B064(v49, &qword_269BA53E8);
    uint64_t v50 = v129;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v45 + 56))(v129, 1, 1, v46);
  }
  else
  {
    uint64_t v50 = v129;
    sub_251A1B128(v49 + *(int *)(v41 + 32), v129, &qword_269B9C908);
    sub_251EC88D0(v49, (uint64_t (*)(void))type metadata accessor for ScrubberPositionData);
  }
  uint64_t v51 = v122;
  uint64_t v52 = v137;
  sub_251A1B064(v50, &qword_269B9C908);
  sub_251EC34F8();
  uint64_t v119 = v35;
  sub_251EC8868((uint64_t)v35, v52, type metadata accessor for ScrubberElement);
  long long v53 = *(void **)(v45 + 56);
  uint64_t v54 = 1;
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v53)(v52, 0, 1, v46);
  uint64_t v55 = v45;
  uint64_t v56 = *(void *)(v51 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager_eventCache);
  swift_getKeyPath();
  uint64_t v57 = v56 + OBJC_IVAR____TtC13HomeDataModel16CameraEventCache___observationRegistrar;
  uint64_t v144 = v56;
  uint64_t v58 = sub_251EC8D34((unint64_t *)&qword_269BA2A90, (void (*)(uint64_t))type metadata accessor for CameraEventCache);
  sub_251F34F10();
  swift_release();
  uint64_t v59 = v56 + OBJC_IVAR____TtC13HomeDataModel16CameraEventCache__elements;
  swift_beginAccess();
  uint64_t v60 = *(void *)v59;
  uint64_t v61 = *(void *)(*(void *)v59 + 16);
  uint64_t v138 = v58;
  uint64_t v139 = v57;
  uint64_t v131 = v59;
  if (v61)
  {
    uint64_t v62 = v132;
    sub_251EC8868(v60 + ((*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80)), v132, type metadata accessor for ScrubberElement);
    uint64_t v54 = 0;
    uint64_t v63 = v135;
  }
  else
  {
    uint64_t v63 = v135;
    uint64_t v62 = v132;
  }
  uint64_t v64 = v141;
  unint64_t v142 = v53;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v53)(v62, v54, 1, v141);
  uint64_t v65 = *(int *)(v63 + 48);
  uint64_t v66 = v133;
  uint64_t v67 = v133 + v65;
  uint64_t v68 = v137;
  sub_251A1B128(v137, v133, &qword_269B9C908);
  sub_251A1B128(v62, v67, &qword_269B9C908);
  long long v69 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v136;
  if (v136(v66, 1, v64) == 1)
  {
    sub_251A1B064(v62, &qword_269B9C908);
    uint64_t v66 = v133;
    sub_251A1B064(v68, &qword_269B9C908);
    int v70 = v69(v67, 1, v64);
    uint64_t v71 = (uint64_t)v119;
    long long v72 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v142;
    if (v70 == 1)
    {
      sub_251A1B064(v66, &qword_269B9C908);
      goto LABEL_18;
    }
LABEL_16:
    sub_251A1B064(v66, &qword_269B9FE30);
    goto LABEL_19;
  }
  uint64_t v73 = v125;
  sub_251A1B128(v66, v125, &qword_269B9C908);
  if (v69(v67, 1, v64) == 1)
  {
    sub_251A1B064(v132, &qword_269B9C908);
    sub_251A1B064(v137, &qword_269B9C908);
    sub_251EC88D0(v73, type metadata accessor for ScrubberElement);
    uint64_t v71 = (uint64_t)v119;
    long long v72 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v142;
    goto LABEL_16;
  }
  uint64_t v74 = v67;
  uint64_t v75 = v73;
  uint64_t v76 = v120;
  sub_251EC8CC4(v74, v120, type metadata accessor for ScrubberElement);
  BOOL v77 = _s13HomeDataModel15ScrubberElementO2eeoiySbAC_ACtFZ_0(v75, v76);
  sub_251EC88D0(v76, type metadata accessor for ScrubberElement);
  sub_251A1B064(v132, &qword_269B9C908);
  sub_251A1B064(v137, &qword_269B9C908);
  sub_251EC88D0(v75, type metadata accessor for ScrubberElement);
  sub_251A1B064(v66, &qword_269B9C908);
  uint64_t v71 = (uint64_t)v119;
  long long v72 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v142;
  if (!v77) {
    goto LABEL_19;
  }
LABEL_18:
  swift_getKeyPath();
  uint64_t v78 = v122;
  uint64_t v143 = v122;
  sub_251F34F10();
  swift_release();
  id v79 = (uint64_t *)(v78 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__visitedEventRequestID);
  swift_beginAccess();
  uint64_t v80 = *v79;
  swift_bridgeObjectRetain();
  uint64_t v81 = v126;
  ScrubberElement.id.getter(v126);
  char v82 = sub_251DB3C24(v81, v80);
  swift_bridgeObjectRelease();
  uint64_t v83 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v83 - 8) + 8))(v81, v83);
  if (v82)
  {
LABEL_19:
    uint64_t v84 = v134;
    sub_251EC8868(v71, v134, type metadata accessor for ScrubberElement);
    uint64_t v85 = 1;
    v72(v84, 0, 1, v141);
    swift_getKeyPath();
    uint64_t v143 = v56;
    sub_251F34F10();
    swift_release();
    uint64_t v86 = *(void *)(*(void *)v131 + 16);
    uint64_t v87 = v140;
    if (v86)
    {
      uint64_t v88 = v127;
      sub_251EC8868(*(void *)v131+ ((*(unsigned __int8 *)(v140 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v140 + 80))+ *(void *)(v140 + 72) * (v86 - 1), v127, type metadata accessor for ScrubberElement);
      uint64_t v85 = 0;
      uint64_t v89 = v135;
    }
    else
    {
      uint64_t v89 = v135;
      uint64_t v88 = v127;
    }
    uint64_t v90 = v141;
    v72(v88, v85, 1, v141);
    uint64_t v91 = v128;
    uint64_t v92 = v128 + *(int *)(v89 + 48);
    uint64_t v93 = v134;
    sub_251A1B128(v134, v128, &qword_269B9C908);
    sub_251A1B128(v88, v92, &qword_269B9C908);
    if (v69(v91, 1, v90) == 1)
    {
      sub_251A1B064(v88, &qword_269B9C908);
      sub_251A1B064(v93, &qword_269B9C908);
      if (v69(v92, 1, v90) == 1)
      {
        sub_251A1B064(v91, &qword_269B9C908);
        uint64_t v94 = v120;
        uint64_t v95 = (uint64_t)v119;
        goto LABEL_29;
      }
    }
    else
    {
      uint64_t v96 = v124;
      sub_251A1B128(v91, v124, &qword_269B9C908);
      if (v69(v92, 1, v90) != 1)
      {
        uint64_t v94 = v120;
        sub_251EC8CC4(v92, v120, type metadata accessor for ScrubberElement);
        BOOL v97 = _s13HomeDataModel15ScrubberElementO2eeoiySbAC_ACtFZ_0(v96, v94);
        sub_251EC88D0(v94, type metadata accessor for ScrubberElement);
        sub_251A1B064(v88, &qword_269B9C908);
        sub_251A1B064(v93, &qword_269B9C908);
        sub_251EC88D0(v96, type metadata accessor for ScrubberElement);
        sub_251A1B064(v91, &qword_269B9C908);
        uint64_t v95 = (uint64_t)v119;
        if (v97)
        {
LABEL_29:
          swift_getKeyPath();
          uint64_t v98 = v122;
          uint64_t v143 = v122;
          sub_251F34F10();
          swift_release();
          unint64_t v99 = (uint64_t *)(v98 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__visitedEventRequestID);
          swift_beginAccess();
          uint64_t v100 = *v99;
          swift_bridgeObjectRetain();
          uint64_t v101 = v126;
          ScrubberElement.id.getter(v126);
          char v102 = sub_251DB3C24(v101, v100);
          swift_bridgeObjectRelease();
          uint64_t v103 = sub_251F34DA0();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v103 - 8) + 8))(v101, v103);
          if ((v102 & 1) == 0)
          {
            uint64_t v104 = sub_251F35CD0();
            uint64_t v105 = (uint64_t)v123;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v104 - 8) + 56))(v123, 1, 1, v104);
            sub_251EC8868(v95, v94, type metadata accessor for ScrubberElement);
            sub_251F35C80();
            swift_retain();
            uint64_t v106 = sub_251F35C70();
            unint64_t v107 = (*(unsigned __int8 *)(v87 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80);
            uint64_t v108 = (void *)swift_allocObject();
            uint64_t v109 = MEMORY[0x263F8F500];
            v108[2] = v106;
            v108[3] = v109;
            v108[4] = v98;
            sub_251EC8CC4(v94, (uint64_t)v108 + v107, type metadata accessor for ScrubberElement);
            sub_251ACBB48(v105, (uint64_t)&unk_269BA5478, (uint64_t)v108);
            swift_release();
          }
        }
        return sub_251EC88D0(v95, type metadata accessor for ScrubberElement);
      }
      sub_251A1B064(v88, &qword_269B9C908);
      sub_251A1B064(v93, &qword_269B9C908);
      sub_251EC88D0(v96, type metadata accessor for ScrubberElement);
    }
    sub_251A1B064(v91, &qword_269B9FE30);
    uint64_t v95 = (uint64_t)v119;
    return sub_251EC88D0(v95, type metadata accessor for ScrubberElement);
  }
  uint64_t v110 = sub_251F35CD0();
  uint64_t v111 = v122;
  uint64_t v112 = (uint64_t)v123;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v110 - 8) + 56))(v123, 1, 1, v110);
  uint64_t v113 = v120;
  sub_251EC8868(v71, v120, type metadata accessor for ScrubberElement);
  sub_251F35C80();
  swift_retain();
  uint64_t v114 = sub_251F35C70();
  unint64_t v115 = (*(unsigned __int8 *)(v140 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v140 + 80);
  unint64_t v116 = (void *)swift_allocObject();
  uint64_t v117 = MEMORY[0x263F8F500];
  v116[2] = v114;
  v116[3] = v117;
  v116[4] = v111;
  sub_251EC8CC4(v113, (uint64_t)v116 + v115, type metadata accessor for ScrubberElement);
  sub_251ACBB48(v112, (uint64_t)&unk_269BA5488, (uint64_t)v116);
  swift_release();
  return sub_251EC88D0(v71, type metadata accessor for ScrubberElement);
}

uint64_t CameraClipPlaybackManager.currentPosition.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_251EC5290(&OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__currentPosition, &qword_269BA53E8, a1);
}

uint64_t sub_251EC34F8()
{
  uint64_t v1 = type metadata accessor for ScrubberPositionData();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA53E8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((CameraClipPlaybackManager.isPlaying.getter() & 1) == 0
    || (uint64_t result = CameraClipPlaybackManager.isScrubbing.getter(), (result & 1) != 0))
  {
    swift_getKeyPath();
    v10[1] = v0;
    sub_251EC8D34(&qword_269BA5400, (void (*)(uint64_t))type metadata accessor for CameraClipPlaybackManager);
    sub_251F34F10();
    swift_release();
    uint64_t v9 = v0 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__currentPosition;
    swift_beginAccess();
    sub_251A1B128(v9, (uint64_t)v7, &qword_269BA53E8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1))
    {
      return sub_251A1B064((uint64_t)v7, &qword_269BA53E8);
    }
    else
    {
      sub_251EC8868((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for ScrubberPositionData);
      sub_251A1B064((uint64_t)v7, &qword_269BA53E8);
      sub_251EC88D0((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for ScrubberPositionData);
      return sub_251ABAA48();
    }
  }
  return result;
}

uint64_t sub_251EC374C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[8] = a4;
  unsigned char v5[9] = a5;
  type metadata accessor for ScrubberElement.ID(0);
  v5[10] = swift_task_alloc();
  v5[11] = sub_251F35C80();
  v5[12] = sub_251F35C70();
  uint64_t v7 = sub_251F35C00();
  v5[13] = v7;
  v5[14] = v6;
  return MEMORY[0x270FA2498](sub_251EC3814, v7, v6);
}

uint64_t sub_251EC3814()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[8];
  uint64_t v3 = sub_251F34DA0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = (char *)swift_task_alloc();
  ScrubberElement.id.getter(v1);
  uint64_t v6 = (char *)swift_task_alloc();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v6, v1, v3);
  swift_getKeyPath();
  v0[5] = v2;
  sub_251EC8D34(&qword_269BA5400, (void (*)(uint64_t))type metadata accessor for CameraClipPlaybackManager);
  sub_251F34F10();
  swift_release();
  v0[6] = v2;
  swift_getKeyPath();
  sub_251F34F30();
  swift_release();
  swift_beginAccess();
  sub_251A637B8(v5, v6);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v5, v3);
  swift_endAccess();
  v0[7] = v2;
  swift_getKeyPath();
  sub_251F34F20();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  v0[15] = sub_251F35C70();
  uint64_t v8 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251EC3AA4, v8, v7);
}

uint64_t sub_251EC3AA4()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 112);
  return MEMORY[0x270FA2498](sub_251EC9074, v1, v2);
}

uint64_t sub_251EC3B08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[8] = a4;
  unsigned char v5[9] = a5;
  type metadata accessor for ScrubberElement.ID(0);
  v5[10] = swift_task_alloc();
  v5[11] = sub_251F35C80();
  v5[12] = sub_251F35C70();
  uint64_t v7 = sub_251F35C00();
  v5[13] = v7;
  v5[14] = v6;
  return MEMORY[0x270FA2498](sub_251EC3BD0, v7, v6);
}

uint64_t sub_251EC3BD0()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[8];
  uint64_t v3 = sub_251F34DA0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = (char *)swift_task_alloc();
  ScrubberElement.id.getter(v1);
  uint64_t v6 = (char *)swift_task_alloc();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v6, v1, v3);
  swift_getKeyPath();
  v0[5] = v2;
  sub_251EC8D34(&qword_269BA5400, (void (*)(uint64_t))type metadata accessor for CameraClipPlaybackManager);
  sub_251F34F10();
  swift_release();
  v0[6] = v2;
  swift_getKeyPath();
  sub_251F34F30();
  swift_release();
  swift_beginAccess();
  sub_251A637B8(v5, v6);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v5, v3);
  swift_endAccess();
  v0[7] = v2;
  swift_getKeyPath();
  sub_251F34F20();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  v0[15] = sub_251F35C70();
  uint64_t v8 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251EC3E60, v8, v7);
}

uint64_t sub_251EC3E60()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 112);
  return MEMORY[0x270FA2498](sub_251EC3EC4, v1, v2);
}

uint64_t sub_251EC3EC4()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251EC3F30@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_251EC5380(a1, &OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__currentPosition, &qword_269BA53E8, a2);
}

uint64_t sub_251EC3F4C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA53E8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_251A1B128(a1, (uint64_t)v6, &qword_269BA53E8);
  uint64_t v7 = *a2;
  swift_getKeyPath();
  uint64_t v10 = v7;
  uint64_t v11 = v6;
  uint64_t v12 = v7;
  sub_251EC8D34(&qword_269BA5400, (void (*)(uint64_t))type metadata accessor for CameraClipPlaybackManager);
  sub_251F34F00();
  swift_release();
  return sub_251A1B064((uint64_t)v6, &qword_269BA53E8);
}

uint64_t CameraClipPlaybackManager.currentPosition.setter(uint64_t a1)
{
  return sub_251A1B064(a1, &qword_269BA53E8);
}

uint64_t sub_251EC4168(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA53E8);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = &v12[-v8];
  sub_251A1B128(a2, (uint64_t)&v12[-v8], &qword_269BA53E8);
  uint64_t v10 = a1 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__currentPosition;
  swift_beginAccess();
  sub_251A1B128(v10, (uint64_t)v7, &qword_269BA53E8);
  swift_beginAccess();
  sub_251EC8B94((uint64_t)v9, v10, &qword_269BA53E8);
  swift_endAccess();
  sub_251EC230C((uint64_t)v7);
  sub_251A1B064((uint64_t)v9, &qword_269BA53E8);
  return sub_251A1B064((uint64_t)v7, &qword_269BA53E8);
}

void (*CameraClipPlaybackManager.currentPosition.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v2 = v1;
  uint64_t v4 = malloc(0xA0uLL);
  *a1 = v4;
  v4[13] = v1;
  size_t v5 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269BA53E8) - 8) + 64);
  v4[14] = malloc(v5);
  v4[15] = malloc(v5);
  uint64_t v6 = malloc(v5);
  v4[16] = v6;
  swift_getKeyPath();
  v4[17] = OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager___observationRegistrar;
  v4[9] = v2;
  v4[18] = sub_251EC8D34(&qword_269BA5400, (void (*)(uint64_t))type metadata accessor for CameraClipPlaybackManager);
  sub_251F34F10();
  swift_release();
  v4[11] = v2;
  swift_getKeyPath();
  sub_251F34F30();
  swift_release();
  uint64_t v7 = OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__currentPosition;
  v4[19] = OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__currentPosition;
  uint64_t v8 = v2 + v7;
  swift_beginAccess();
  sub_251A1B128(v8, (uint64_t)v6, &qword_269BA53E8);
  return sub_251EC4444;
}

void sub_251EC4444(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 128);
  uint64_t v4 = *(void **)(*(void *)a1 + 112);
  size_t v5 = *(void **)(*(void *)a1 + 120);
  uint64_t v6 = *(void *)(*(void *)a1 + 104);
  if (a2)
  {
    uint64_t v7 = v6 + v2[19];
    sub_251A1B128(v2[16], v2[15], &qword_269BA53E8);
    sub_251A1B128(v7, (uint64_t)v4, &qword_269BA53E8);
    swift_beginAccess();
    sub_251EC8B94((uint64_t)v5, v7, &qword_269BA53E8);
    swift_endAccess();
    sub_251EC230C((uint64_t)v4);
    sub_251A1B064((uint64_t)v5, &qword_269BA53E8);
    sub_251A1B064((uint64_t)v4, &qword_269BA53E8);
    sub_251A1B064((uint64_t)v3, &qword_269BA53E8);
    v2[10] = v6;
  }
  else
  {
    uint64_t v8 = v6 + v2[19];
    sub_251A1B128(v8, v2[15], &qword_269BA53E8);
    swift_beginAccess();
    sub_251EC8B94((uint64_t)v3, v8, &qword_269BA53E8);
    swift_endAccess();
    sub_251EC230C((uint64_t)v5);
    sub_251A1B064((uint64_t)v3, &qword_269BA53E8);
    sub_251A1B064((uint64_t)v5, &qword_269BA53E8);
    v2[12] = v6;
  }
  swift_getKeyPath();
  sub_251F34F20();
  swift_release();
  free(v3);
  free(v5);
  free(v4);
  free(v2);
}

uint64_t CameraClipPlaybackManager.targetOffset.getter()
{
  swift_getKeyPath();
  sub_251EC8D34(&qword_269BA5400, (void (*)(uint64_t))type metadata accessor for CameraClipPlaybackManager);
  sub_251F34F10();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__targetOffset;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_251EC46CC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_251EC8D34(&qword_269BA5400, (void (*)(uint64_t))type metadata accessor for CameraClipPlaybackManager);
  sub_251F34F10();
  swift_release();
  uint64_t v4 = v3 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__targetOffset;
  uint64_t result = swift_beginAccess();
  char v6 = *(unsigned char *)(v4 + 8);
  *(void *)a2 = *(void *)v4;
  *(unsigned char *)(a2 + 8) = v6;
  return result;
}

uint64_t sub_251EC479C()
{
  return swift_release();
}

uint64_t CameraClipPlaybackManager.targetOffset.setter()
{
  return swift_release();
}

void (*CameraClipPlaybackManager.targetOffset.modify(void *a1))(void **a1)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[3] = v1;
  swift_getKeyPath();
  long long v3[4] = OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager___observationRegistrar;
  *uint64_t v3 = v1;
  v3[5] = sub_251EC8D34(&qword_269BA5400, (void (*)(uint64_t))type metadata accessor for CameraClipPlaybackManager);
  sub_251F34F10();
  swift_release();
  *uint64_t v3 = v1;
  swift_getKeyPath();
  sub_251F34F30();
  swift_release();
  swift_beginAccess();
  return sub_251EC4A78;
}

void sub_251EC4A78(void **a1)
{
}

id sub_251EC4A84()
{
  if (qword_269B9C518 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_251F350A0();
  __swift_project_value_buffer(v1, (uint64_t)qword_269BA53D0);
  swift_retain_n();
  uint64_t v2 = sub_251F35080();
  os_log_type_t v3 = sub_251F35FA0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 67109120;
    swift_getKeyPath();
    sub_251EC8D34(&qword_269BA5400, (void (*)(uint64_t))type metadata accessor for CameraClipPlaybackManager);
    sub_251F34F10();
    swift_release();
    swift_beginAccess();
    swift_release();
    sub_251F361D0();
    swift_release();
    _os_log_impl(&dword_2519F3000, v2, v3, "Clip playback prefers audio muted: %{BOOL}d", v4, 8u);
    MEMORY[0x2533AC760](v4, -1, -1);
  }
  else
  {

    swift_release_n();
  }
  uint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager_playbackManager);
  swift_getKeyPath();
  sub_251EC8D34(&qword_269BA5400, (void (*)(uint64_t))type metadata accessor for CameraClipPlaybackManager);
  sub_251F34F10();
  swift_release();
  char v6 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__prefersAudioMuted);
  swift_beginAccess();
  return objc_msgSend(*(id *)(v5 + 56), sel_setMuted_, *v6);
}

uint64_t CameraClipPlaybackManager.prefersAudioMuted.getter()
{
  swift_getKeyPath();
  sub_251EC8D34(&qword_269BA5400, (void (*)(uint64_t))type metadata accessor for CameraClipPlaybackManager);
  sub_251F34F10();
  swift_release();
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__prefersAudioMuted);
  swift_beginAccess();
  return *v1;
}

id (*sub_251EC4DD0(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_251EC4E30;
}

id sub_251EC4E30(uint64_t a1, char a2)
{
  id result = (id)swift_endAccess();
  if ((a2 & 1) == 0) {
    return sub_251EC4A84();
  }
  return result;
}

uint64_t sub_251EC4E64@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_251EC8D34(&qword_269BA5400, (void (*)(uint64_t))type metadata accessor for CameraClipPlaybackManager);
  sub_251F34F10();
  swift_release();
  uint64_t v4 = (unsigned char *)(v3 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__prefersAudioMuted);
  uint64_t result = swift_beginAccess();
  *a2 = *v4;
  return result;
}

uint64_t sub_251EC4F2C()
{
  return swift_release();
}

uint64_t CameraClipPlaybackManager.prefersAudioMuted.setter()
{
  return swift_release();
}

void (*CameraClipPlaybackManager.prefersAudioMuted.modify(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  long long v3[4] = v1;
  swift_getKeyPath();
  v3[5] = OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager___observationRegistrar;
  *uint64_t v3 = v1;
  v3[6] = sub_251EC8D34(&qword_269BA5400, (void (*)(uint64_t))type metadata accessor for CameraClipPlaybackManager);
  sub_251F34F10();
  swift_release();
  *uint64_t v3 = v1;
  swift_getKeyPath();
  sub_251F34F30();
  swift_release();
  v3[7] = sub_251EC4DD0((uint64_t)v3);
  return sub_251EC51E8;
}

void sub_251EC51E8(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 56))(*a1, 0);
  *uint64_t v1 = v1[4];
  swift_getKeyPath();
  sub_251F34F20();
  swift_release();
  free(v1);
}

uint64_t CameraClipPlaybackManager.expandedElement.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_251EC5290(&OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__expandedElement, &qword_269B9C908, a1);
}

uint64_t sub_251EC5290@<X0>(void *a1@<X1>, uint64_t *a2@<X2>, uint64_t a3@<X8>)
{
  swift_getKeyPath();
  sub_251EC8D34(&qword_269BA5400, (void (*)(uint64_t))type metadata accessor for CameraClipPlaybackManager);
  sub_251F34F10();
  swift_release();
  uint64_t v7 = v3 + *a1;
  swift_beginAccess();
  return sub_251A1B128(v7, a3, a2);
}

uint64_t sub_251EC5364@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_251EC5380(a1, &OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__expandedElement, &qword_269B9C908, a2);
}

uint64_t sub_251EC5380@<X0>(uint64_t *a1@<X0>, void *a2@<X4>, uint64_t *a3@<X5>, uint64_t a4@<X8>)
{
  uint64_t v7 = *a1;
  swift_getKeyPath();
  sub_251EC8D34(&qword_269BA5400, (void (*)(uint64_t))type metadata accessor for CameraClipPlaybackManager);
  sub_251F34F10();
  swift_release();
  uint64_t v8 = v7 + *a2;
  swift_beginAccess();
  return sub_251A1B128(v8, a4, a3);
}

uint64_t sub_251EC5458(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C908);
  MEMORY[0x270FA5388](v4 - 8);
  char v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_251A1B128(a1, (uint64_t)v6, &qword_269B9C908);
  uint64_t v7 = *a2;
  swift_getKeyPath();
  uint64_t v10 = v7;
  uint64_t v11 = v6;
  uint64_t v12 = v7;
  sub_251EC8D34(&qword_269BA5400, (void (*)(uint64_t))type metadata accessor for CameraClipPlaybackManager);
  sub_251F34F00();
  swift_release();
  return sub_251A1B064((uint64_t)v6, &qword_269B9C908);
}

uint64_t CameraClipPlaybackManager.expandedElement.setter(uint64_t a1)
{
  return sub_251A1B064(a1, &qword_269B9C908);
}

uint64_t sub_251EC5674(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__expandedElement;
  swift_beginAccess();
  sub_251EC8B94(a2, v3, &qword_269B9C908);
  return swift_endAccess();
}

void (*CameraClipPlaybackManager.expandedElement.modify(void *a1))(void **a1)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[3] = v1;
  swift_getKeyPath();
  long long v3[4] = OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager___observationRegistrar;
  *uint64_t v3 = v1;
  v3[5] = sub_251EC8D34(&qword_269BA5400, (void (*)(uint64_t))type metadata accessor for CameraClipPlaybackManager);
  sub_251F34F10();
  swift_release();
  *uint64_t v3 = v1;
  swift_getKeyPath();
  sub_251F34F30();
  swift_release();
  swift_beginAccess();
  return sub_251EC5818;
}

void sub_251EC5818(void **a1)
{
}

void sub_251EC5824(void **a1)
{
  uint64_t v1 = *a1;
  swift_endAccess();
  *uint64_t v1 = v1[3];
  swift_getKeyPath();
  sub_251F34F20();
  swift_release();
  free(v1);
}

uint64_t CameraClipPlaybackManager.isScrubbing.getter()
{
  swift_getKeyPath();
  sub_251EC8D34(&qword_269BA5400, (void (*)(uint64_t))type metadata accessor for CameraClipPlaybackManager);
  sub_251F34F10();
  swift_release();
  uint64_t v1 = OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__currentState;
  char v2 = 1;
  switch(*(unsigned char *)(v0 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__currentState))
  {
    case 2:
      goto LABEL_6;
    default:
      char v3 = sub_251F36B10();
      swift_bridgeObjectRelease();
      if (v3)
      {
        char v2 = 1;
      }
      else
      {
        swift_getKeyPath();
        sub_251F34F10();
        swift_release();
        char v2 = 1;
        switch(*(unsigned char *)(v0 + v1))
        {
          case 3:
            break;
          default:
            char v2 = sub_251F36B10();
            break;
        }
LABEL_6:
        swift_bridgeObjectRelease();
      }
      return v2 & 1;
  }
}

uint64_t CameraClipPlaybackManager.isPlaying.getter()
{
  swift_getKeyPath();
  sub_251EC8D34(&qword_269BA5400, (void (*)(uint64_t))type metadata accessor for CameraClipPlaybackManager);
  sub_251F34F10();
  swift_release();
  uint64_t v1 = OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__currentState;
  char v2 = 1;
  switch(*(unsigned char *)(v0 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__currentState))
  {
    case 1:
      goto LABEL_6;
    default:
      char v3 = sub_251F36B10();
      swift_bridgeObjectRelease();
      if (v3)
      {
        char v2 = 1;
      }
      else
      {
        swift_getKeyPath();
        sub_251F34F10();
        swift_release();
        char v2 = 1;
        switch(*(unsigned char *)(v0 + v1))
        {
          case 3:
            break;
          default:
            char v2 = sub_251F36B10();
            break;
        }
LABEL_6:
        swift_bridgeObjectRelease();
      }
      return v2 & 1;
  }
}

uint64_t CameraClipPlaybackManager.isLive.getter()
{
  swift_getKeyPath();
  sub_251EC8D34(&qword_269BA5400, (void (*)(uint64_t))type metadata accessor for CameraClipPlaybackManager);
  sub_251F34F10();
  swift_release();
  uint64_t v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__currentState);
  char v2 = 1;
  switch(v1)
  {
    case 4:
      break;
    default:
      char v2 = sub_251F36B10();
      break;
  }
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t CameraClipPlaybackManager.currentTime.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ScrubberPositionData();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA53E8);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  uint64_t v14 = v1;
  sub_251EC8D34(&qword_269BA5400, (void (*)(uint64_t))type metadata accessor for CameraClipPlaybackManager);
  sub_251F34F10();
  swift_release();
  uint64_t v10 = v1 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__currentPosition;
  swift_beginAccess();
  sub_251A1B128(v10, (uint64_t)v9, &qword_269BA53E8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3))
  {
    sub_251A1B064((uint64_t)v9, &qword_269BA53E8);
    uint64_t v11 = sub_251F34D20();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(a1, 1, 1, v11);
  }
  else
  {
    sub_251EC8868((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ScrubberPositionData);
    sub_251A1B064((uint64_t)v9, &qword_269BA53E8);
    sub_251A1B128((uint64_t)&v6[*(int *)(v3 + 36)], a1, &qword_26B21EC20);
    return sub_251EC88D0((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ScrubberPositionData);
  }
}

double CameraClipPlaybackManager.currentOffset.getter()
{
  uint64_t v1 = type metadata accessor for ScrubberPositionData();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (double *)((char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA53E8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  uint64_t v12 = v0;
  sub_251EC8D34(&qword_269BA5400, (void (*)(uint64_t))type metadata accessor for CameraClipPlaybackManager);
  sub_251F34F10();
  swift_release();
  uint64_t v8 = v0 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__currentPosition;
  swift_beginAccess();
  sub_251A1B128(v8, (uint64_t)v7, &qword_269BA53E8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1))
  {
    sub_251A1B064((uint64_t)v7, &qword_269BA53E8);
    return 0.0;
  }
  else
  {
    sub_251EC8868((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for ScrubberPositionData);
    sub_251A1B064((uint64_t)v7, &qword_269BA53E8);
    double v9 = *v4;
    sub_251EC88D0((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for ScrubberPositionData);
  }
  return v9;
}

uint64_t sub_251EC63C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v27 = a2;
  uint64_t v28 = a3;
  uint64_t v7 = type metadata accessor for StaticCameraProfile();
  MEMORY[0x270FA5388](v7 - 8);
  double v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA53E8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v4 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__visitedEventRequestID) = MEMORY[0x263F8EE88];
  *(unsigned char *)(v4 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__readyForPlayback) = 0;
  *(unsigned char *)(v4 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__currentState) = 4;
  uint64_t v13 = v4 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__currentPosition;
  uint64_t v14 = type metadata accessor for ScrubberPositionData();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  uint64_t v15 = v4 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__targetOffset;
  *(void *)uint64_t v15 = 0;
  *(unsigned char *)(v15 + 8) = 1;
  *(unsigned char *)(v4 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__prefersAudioMuted) = 0;
  uint64_t v16 = v4 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__expandedElement;
  uint64_t v17 = type metadata accessor for ScrubberElement(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
  sub_251F34F40();
  sub_251EC8868(a1, v4 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager_cameraProfile, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
  uint64_t v18 = v4 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager_id;
  uint64_t v19 = sub_251F34DA0();
  uint64_t v20 = *(void *)(v19 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(v18, a2, v19);
  uint64_t v21 = v28;
  sub_251A1B128(v28, (uint64_t)v12, &qword_269BA53E8);
  sub_251A1B064(v13, &qword_269BA53E8);
  sub_251EC900C((uint64_t)v12, v13);
  sub_251EC8868(a1, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
  type metadata accessor for CameraEventCache();
  uint64_t v22 = swift_allocObject();
  sub_251F34F40();
  sub_251EC8868((uint64_t)v9, v22 + OBJC_IVAR____TtC13HomeDataModel16CameraEventCache_cameraProfile, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
  uint64_t v23 = MEMORY[0x263F8EE78];
  *(void *)(v22 + OBJC_IVAR____TtC13HomeDataModel16CameraEventCache__elements) = MEMORY[0x263F8EE78];
  unint64_t v24 = sub_2519FBD80(v23);
  sub_251EC88D0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
  *(void *)(v22 + OBJC_IVAR____TtC13HomeDataModel16CameraEventCache__elementsByUUID) = v24;
  *(void *)(v4 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager_eventCache) = v22;
  type metadata accessor for CameraClipAssetPlaybackManager();
  swift_allocObject();
  uint64_t v25 = sub_251ABA964();
  sub_251A1B064(v21, &qword_269BA53E8);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v27, v19);
  sub_251EC88D0(a1, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
  *(void *)(v4 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager_playbackManager) = v25;
  *(void *)(v25 + 48) = &off_2702775A8;
  swift_unknownObjectWeakAssign();
  return v4;
}

uint64_t sub_251EC67A0()
{
  return sub_251EC4168(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_251EC67C4()
{
  return sub_251EC8C60();
}

id sub_251EC67E4()
{
  return sub_251EC8BF8();
}

uint64_t sub_251EC6804()
{
  return sub_251EC5674(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

Swift::Void __swiftcall CameraClipPlaybackManager.resetToInitialPlayState()()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA53E8);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = &v5[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = type metadata accessor for ScrubberPositionData();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  swift_getKeyPath();
  uint64_t v8 = v0;
  double v9 = v3;
  uint64_t v10 = v0;
  sub_251EC8D34(&qword_269BA5400, (void (*)(uint64_t))type metadata accessor for CameraClipPlaybackManager);
  sub_251F34F00();
  swift_release();
  sub_251A1B064((uint64_t)v3, &qword_269BA53E8);
  swift_getKeyPath();
  uint64_t v6 = v0;
  char v7 = 4;
  uint64_t v10 = v0;
  sub_251F34F00();
  swift_release();
}

uint64_t sub_251EC69EC()
{
  return sub_251EC8FA0();
}

Swift::Void __swiftcall CameraClipPlaybackManager.updateState(enablingScrubbing:)(Swift::Bool enablingScrubbing)
{
  swift_getKeyPath();
  sub_251EC8D34(&qword_269BA5400, (void (*)(uint64_t))type metadata accessor for CameraClipPlaybackManager);
  sub_251F34F10();
  swift_release();
  switch(*(unsigned char *)(v1 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__currentState))
  {
    case 4:
      if (!enablingScrubbing) {
        goto LABEL_8;
      }
      sub_251EC6C80();
      uint64_t v3 = (void *)swift_allocError();
      swift_willThrow();
      if (qword_269B9C518 != -1) {
        swift_once();
      }
      uint64_t v4 = sub_251F350A0();
      __swift_project_value_buffer(v4, (uint64_t)qword_269BA53D0);
      uint64_t v5 = sub_251F35080();
      os_log_type_t v6 = sub_251F35FB0();
      if (os_log_type_enabled(v5, v6))
      {
        char v7 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)char v7 = 0;
        _os_log_impl(&dword_2519F3000, v5, v6, "Invalid action, attempting to enable scrubbing while Live", v7, 2u);
        MEMORY[0x2533AC760](v7, -1, -1);
      }

      break;
    default:
LABEL_8:
      uint64_t KeyPath = swift_getKeyPath();
      MEMORY[0x270FA5388](KeyPath);
      sub_251F34F00();
      swift_release();
      break;
  }
}

unint64_t sub_251EC6C80()
{
  unint64_t result = qword_269BA5438;
  if (!qword_269BA5438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5438);
  }
  return result;
}

Swift::Void __swiftcall CameraClipPlaybackManager.togglePlayState()()
{
  CameraClipPlaybackManager.isPlaying.getter();
  swift_getKeyPath();
  sub_251EC8D34(&qword_269BA5400, (void (*)(uint64_t))type metadata accessor for CameraClipPlaybackManager);
  sub_251F34F10();
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x270FA5388](KeyPath);
  sub_251F34F00();
  swift_release();
}

Swift::Void __swiftcall CameraClipPlaybackManager.updateStateToPaused()()
{
}

Swift::Void __swiftcall CameraClipPlaybackManager.updateStateToPlaying()()
{
}

Swift::Void __swiftcall CameraClipPlaybackManager.updateStateToLive()()
{
}

uint64_t CameraClipPlaybackManager.elementDidAppear(_:)()
{
  sub_251F35C80();
  *(void *)(v0 + 16) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251D37D2C, v2, v1);
}

uint64_t sub_251EC72C4(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(double *)(v6 + 32) = a1;
  *(double *)(v6 + 40) = a2;
  *(void *)(v6 + 24) = a6;
  sub_251F35C80();
  *(void *)(v6 + 48) = sub_251F35C70();
  uint64_t v8 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251EC7360, v8, v7);
}

uint64_t sub_251EC7360()
{
  double v2 = v0[4];
  double v1 = v0[5];
  uint64_t v3 = *((void *)v0 + 3);
  swift_release();
  uint64_t v4 = sub_251EC74B0(v2, v1);
  char v6 = v5;
  swift_getKeyPath();
  uint64_t v7 = swift_task_alloc();
  *(void *)(v7 + 16) = v3;
  *(void *)(v7 + 24) = v4;
  *(unsigned char *)(v7 + 32) = v6 & 1;
  *((void *)v0 + 2) = v3;
  sub_251EC8D34(&qword_269BA5400, (void (*)(uint64_t))type metadata accessor for CameraClipPlaybackManager);
  sub_251F34F00();
  swift_release();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))*((void *)v0 + 1);
  return v8();
}

uint64_t sub_251EC74B0(double a1, double a2)
{
  uint64_t v5 = type metadata accessor for ScrubberPositionData();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (double *)((char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA53E8);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v21 - v13;
  swift_getKeyPath();
  uint64_t v22 = v2;
  sub_251EC8D34(&qword_269BA5400, (void (*)(uint64_t))type metadata accessor for CameraClipPlaybackManager);
  sub_251F34F10();
  swift_release();
  uint64_t v15 = v2 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__currentPosition;
  swift_beginAccess();
  sub_251A1B128(v15, (uint64_t)v14, &qword_269BA53E8);
  uint64_t v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  if (v16(v14, 1, v5))
  {
    uint64_t v17 = (uint64_t)v14;
LABEL_5:
    sub_251A1B064(v17, &qword_269BA53E8);
LABEL_6:
    *(double *)&uint64_t result = 0.0;
    return result;
  }
  sub_251EC8868((uint64_t)v14, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ScrubberPositionData);
  sub_251A1B064((uint64_t)v14, &qword_269BA53E8);
  double v18 = v8[3];
  sub_251EC88D0((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ScrubberPositionData);
  swift_getKeyPath();
  uint64_t v21 = v2;
  sub_251F34F10();
  swift_release();
  sub_251A1B128(v15, (uint64_t)v12, &qword_269BA53E8);
  if (v16(v12, 1, v5))
  {
    uint64_t v17 = (uint64_t)v12;
    goto LABEL_5;
  }
  sub_251EC8868((uint64_t)v12, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ScrubberPositionData);
  sub_251A1B064((uint64_t)v12, &qword_269BA53E8);
  double v20 = v8[1];
  sub_251EC88D0((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ScrubberPositionData);
  if (a2 <= 0.0 || (~*(void *)&a2 & 0x7FF0000000000000) == 0 && (*(void *)&a2 & 0xFFFFFFFFFFFFFLL) != 0) {
    goto LABEL_6;
  }
  *(double *)&uint64_t result = v20 - a1 / a2 * v18;
  return result;
}

Swift::Bool __swiftcall CameraClipPlaybackManager.shouldAdvanceToNextElement()()
{
  uint64_t v1 = type metadata accessor for CameraClip();
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for ScrubberElement(0);
  uint64_t v46 = *(void *)(v4 - 8);
  uint64_t v47 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v44 = (uint64_t)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C908);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ScrubberPositionData();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v45 = (uint64_t)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (double *)((char *)&v41 - v13);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA53E8);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  double v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  double v20 = (char *)&v41 - v19;
  if ((CameraClipPlaybackManager.isPlaying.getter() & 1) == 0) {
    goto LABEL_9;
  }
  uint64_t v42 = v1;
  uint64_t v43 = v8;
  uint64_t v41 = v3;
  swift_getKeyPath();
  v49[1] = v0;
  sub_251EC8D34(&qword_269BA5400, (void (*)(uint64_t))type metadata accessor for CameraClipPlaybackManager);
  sub_251F34F10();
  swift_release();
  uint64_t v21 = v0 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__currentPosition;
  swift_beginAccess();
  sub_251A1B128(v21, (uint64_t)v20, &qword_269BA53E8);
  uint64_t v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v22(v20, 1, v9))
  {
    uint64_t v23 = &qword_269BA53E8;
    uint64_t v24 = (uint64_t)v20;
LABEL_8:
    sub_251A1B064(v24, v23);
LABEL_9:
    LOBYTE(v28) = 0;
    return v28;
  }
  sub_251EC8868((uint64_t)v20, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ScrubberPositionData);
  sub_251A1B064((uint64_t)v20, &qword_269BA53E8);
  double v25 = v14[2];
  sub_251EC88D0((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ScrubberPositionData);
  swift_getKeyPath();
  v49[0] = v0;
  sub_251F34F10();
  swift_release();
  sub_251A1B128(v21, (uint64_t)v18, &qword_269BA53E8);
  if (v22(v18, 1, v9))
  {
    uint64_t v23 = &qword_269BA53E8;
    uint64_t v24 = (uint64_t)v18;
    goto LABEL_8;
  }
  uint64_t v26 = v45;
  sub_251EC8868((uint64_t)v18, v45, (uint64_t (*)(void))type metadata accessor for ScrubberPositionData);
  sub_251A1B064((uint64_t)v18, &qword_269BA53E8);
  uint64_t v27 = (uint64_t)v43;
  sub_251A1B128(v26 + *(int *)(v9 + 32), (uint64_t)v43, &qword_269B9C908);
  sub_251EC88D0(v26, (uint64_t (*)(void))type metadata accessor for ScrubberPositionData);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v27, 1, v47) == 1)
  {
    uint64_t v23 = &qword_269B9C908;
    uint64_t v24 = v27;
    goto LABEL_8;
  }
  uint64_t v30 = v44;
  sub_251EC8868(v27, v44, type metadata accessor for ScrubberElement);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_251EC88D0(v30, type metadata accessor for ScrubberElement);
    sub_251EC88D0(v27, type metadata accessor for ScrubberElement);
    goto LABEL_9;
  }
  uint64_t v31 = (uint64_t)v41;
  sub_251EC8CC4(v30, (uint64_t)v41, (uint64_t (*)(void))type metadata accessor for CameraClip);
  double v32 = *(double *)(v31 + *(int *)(v42 + 36));
  sub_251EC88D0(v31, (uint64_t (*)(void))type metadata accessor for CameraClip);
  sub_251EC88D0(v27, type metadata accessor for ScrubberElement);
  BOOL v33 = vabdd_f64(v25, v32) < 0.001;
  BOOL v28 = v32 <= v25 || v33;
  if (qword_269B9C518 != -1) {
    swift_once();
  }
  uint64_t v34 = sub_251F350A0();
  __swift_project_value_buffer(v34, (uint64_t)qword_269BA53D0);
  uint64_t v35 = sub_251F35080();
  os_log_type_t v36 = sub_251F35FA0();
  if (os_log_type_enabled(v35, v36))
  {
    uint64_t v37 = swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    v49[0] = v38;
    *(_DWORD *)uint64_t v37 = 136315650;
    if (v28) {
      uint64_t v39 = 5457241;
    }
    else {
      uint64_t v39 = 20302;
    }
    if (v28) {
      unint64_t v40 = 0xE300000000000000;
    }
    else {
      unint64_t v40 = 0xE200000000000000;
    }
    uint64_t v48 = sub_251A00E84(v39, v40, v49);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v37 + 12) = 2048;
    uint64_t v48 = *(void *)&v25;
    sub_251F361D0();
    *(_WORD *)(v37 + 22) = 2048;
    uint64_t v48 = *(void *)&v32;
    sub_251F361D0();
    _os_log_impl(&dword_2519F3000, v35, v36, "Should advance to next clip: %s | timeElapsed: %f vs duration: %f", (uint8_t *)v37, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v38, -1, -1);
    MEMORY[0x2533AC760](v37, -1, -1);
  }

  return v28;
}

Swift::Void __swiftcall CameraClipPlaybackManager.advanceToNextElementIfNeeded()()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ScrubberPositionData();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (double *)((char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA53E8);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)&v33 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v33 - v13;
  if (CameraClipPlaybackManager.shouldAdvanceToNextElement()())
  {
    uint64_t v37 = v9;
    swift_getKeyPath();
    uint64_t v15 = v0 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager___observationRegistrar;
    v40[2] = v1;
    uint64_t v16 = sub_251EC8D34(&qword_269BA5400, (void (*)(uint64_t))type metadata accessor for CameraClipPlaybackManager);
    sub_251F34F10();
    swift_release();
    uint64_t v17 = v1 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__currentPosition;
    swift_beginAccess();
    sub_251A1B128(v17, (uint64_t)v14, &qword_269BA53E8);
    double v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48);
    if (v18(v14, 1, v2))
    {
      uint64_t v19 = (uint64_t)v14;
LABEL_6:
      sub_251A1B064(v19, &qword_269BA53E8);
      return;
    }
    sub_251EC8868((uint64_t)v14, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ScrubberPositionData);
    sub_251A1B064((uint64_t)v14, &qword_269BA53E8);
    double v20 = v5[3];
    sub_251EC88D0((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ScrubberPositionData);
    swift_getKeyPath();
    uint64_t v39 = v1;
    uint64_t v36 = v16;
    sub_251F34F10();
    swift_release();
    sub_251A1B128(v17, (uint64_t)v12, &qword_269BA53E8);
    if (v18(v12, 1, v2))
    {
      uint64_t v19 = (uint64_t)v12;
      goto LABEL_6;
    }
    uint64_t v34 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v18;
    sub_251EC8868((uint64_t)v12, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ScrubberPositionData);
    sub_251A1B064((uint64_t)v12, &qword_269BA53E8);
    double v21 = v5[1];
    sub_251EC88D0((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ScrubberPositionData);
    uint64_t KeyPath = swift_getKeyPath();
    MEMORY[0x270FA5388](KeyPath);
    *(&v33 - 4) = v1;
    *((double *)&v33 - 3) = v21 - v20 + -1.0;
    *((unsigned char *)&v33 - 16) = 0;
    uint64_t v39 = v1;
    uint64_t v35 = v15;
    sub_251F34F00();
    swift_release();
    if (qword_269B9C518 != -1) {
      swift_once();
    }
    uint64_t v23 = sub_251F350A0();
    __swift_project_value_buffer(v23, (uint64_t)qword_269BA53D0);
    swift_retain_n();
    uint64_t v24 = sub_251F35080();
    os_log_type_t v25 = sub_251F35FA0();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      v40[0] = v33;
      *(_DWORD *)uint64_t v26 = 136315394;
      swift_getKeyPath();
      uint64_t v39 = v1;
      sub_251F34F10();
      swift_release();
      uint64_t v27 = (uint64_t)v37;
      sub_251A1B128(v17, (uint64_t)v37, &qword_269BA53E8);
      if (v34(v27, 1, v2))
      {
        sub_251A1B064(v27, &qword_269BA53E8);
      }
      else
      {
        sub_251EC8868(v27, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ScrubberPositionData);
        sub_251A1B064(v27, &qword_269BA53E8);
        sub_251EC88D0((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ScrubberPositionData);
      }
      uint64_t v28 = sub_251F35DD0();
      uint64_t v39 = sub_251A00E84(v28, v29, v40);
      sub_251F361D0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v26 + 12) = 2048;
      swift_getKeyPath();
      uint64_t v39 = v1;
      sub_251F34F10();
      swift_release();
      uint64_t v30 = v1 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__targetOffset;
      swift_beginAccess();
      double v31 = *(double *)v30;
      if (*(unsigned char *)(v30 + 8)) {
        double v31 = 0.0;
      }
      double v38 = v31;
      sub_251F361D0();
      swift_release_n();
      _os_log_impl(&dword_2519F3000, v24, v25, "Advancing to next clip, from %s to %f", (uint8_t *)v26, 0x16u);
      uint64_t v32 = v33;
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v32, -1, -1);
      MEMORY[0x2533AC760](v26, -1, -1);
    }
    else
    {

      swift_release_n();
    }
  }
}

uint64_t CameraClipPlaybackManager.deinit()
{
  sub_251EC88D0(v0 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager_cameraProfile, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
  uint64_t v1 = v0 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager_id;
  uint64_t v2 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_251A1B064(v0 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__currentPosition, &qword_269BA53E8);
  sub_251A1B064(v0 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__expandedElement, &qword_269B9C908);
  uint64_t v3 = v0 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager___observationRegistrar;
  uint64_t v4 = sub_251F34F50();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t CameraClipPlaybackManager.__deallocating_deinit()
{
  sub_251EC88D0(v0 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager_cameraProfile, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
  uint64_t v1 = v0 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager_id;
  uint64_t v2 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_251A1B064(v0 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__currentPosition, &qword_269BA53E8);
  sub_251A1B064(v0 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__expandedElement, &qword_269B9C908);
  uint64_t v3 = v0 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager___observationRegistrar;
  uint64_t v4 = sub_251F34F50();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  return swift_deallocClassInstance();
}

uint64_t sub_251EC8868(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_251EC88D0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_251EC8930()
{
  return type metadata accessor for CameraClipPlaybackManager();
}

void sub_251EC8938()
{
  type metadata accessor for StaticCameraProfile();
  if (v0 <= 0x3F)
  {
    sub_251F34DA0();
    if (v1 <= 0x3F)
    {
      sub_251EC8B40(319, &qword_269BA5460, (void (*)(uint64_t))type metadata accessor for ScrubberPositionData);
      if (v2 <= 0x3F)
      {
        sub_251EC8B40(319, (unint64_t *)&qword_269B9D848, (void (*)(uint64_t))type metadata accessor for ScrubberElement);
        if (v3 <= 0x3F)
        {
          sub_251F34F50();
          if (v4 <= 0x3F) {
            swift_updateClassMetadata2();
          }
        }
      }
    }
  }
}

uint64_t method lookup function for CameraClipPlaybackManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for CameraClipPlaybackManager);
}

void sub_251EC8B40(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_251F36190();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_251EC8B94(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 24))(a2, a1, v5);
  return a2;
}

id sub_251EC8BF8()
{
  char v1 = *(unsigned char *)(v0 + 24);
  unint64_t v2 = (unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__prefersAudioMuted);
  swift_beginAccess();
  *unint64_t v2 = v1;
  return sub_251EC4A84();
}

uint64_t sub_251EC8C60()
{
  uint64_t v1 = *(void *)(v0 + 24);
  char v2 = *(unsigned char *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 16) + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__targetOffset;
  uint64_t result = swift_beginAccess();
  *(void *)uint64_t v3 = v1;
  *(unsigned char *)(v3 + 8) = v2;
  return result;
}

uint64_t sub_251EC8CC4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_251EC8D34(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_251EC8D88(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for ScrubberElement(0) - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_251AB3A34;
  return sub_251EC3B08(a1, v5, v6, v7, v8);
}

uint64_t sub_251EC8E88(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for ScrubberElement(0) - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_251AB3DD4;
  return sub_251EC374C(a1, v5, v6, v7, v8);
}

uint64_t sub_251EC8F84()
{
  return sub_251EC1464(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_251EC8FA0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  unsigned __int8 v2 = *(unsigned char *)(v1 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__currentState);
  *(unsigned char *)(v1 + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__currentState) = *(unsigned char *)(v0 + 24);
  unsigned __int8 v4 = v2;
  return sub_251EC1710(&v4);
}

void sub_251EC8FF4()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC13HomeDataModel25CameraClipPlaybackManager__readyForPlayback) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_251EC900C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA53E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_251EC9078()
{
  return sub_251EC67A0();
}

uint64_t sub_251EC9090()
{
  return sub_251EC6804();
}

uint64_t StaticTelevisionProfile.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_251F34DA0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t StaticTelevisionProfile.mediaSourceDisplayOrder.getter()
{
  type metadata accessor for StaticTelevisionProfile();
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for StaticTelevisionProfile()
{
  uint64_t result = qword_26B21F130;
  if (!qword_26B21F130) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t StaticTelevisionProfile.accessoryId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for StaticTelevisionProfile() + 24);
  uint64_t v4 = sub_251F34DA0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t static StaticTelevisionProfile.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((sub_251F34D70() & 1) != 0
    && (uint64_t v4 = type metadata accessor for StaticTelevisionProfile(),
        sub_251AB6284(*(void **)(a1 + *(int *)(v4 + 20)), *(void **)(a2 + *(int *)(v4 + 20)))))
  {
    return sub_251F34D70() & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t StaticTelevisionProfile.hash(into:)()
{
  sub_251F34DA0();
  sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
  sub_251F35610();
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for StaticTelevisionProfile() + 20));
  sub_251F36CB0();
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = v1 + 32;
    do
    {
      v3 += 8;
      sub_251F36CB0();
      --v2;
    }
    while (v2);
  }
  return sub_251F35610();
}

uint64_t sub_251EC9340()
{
  unint64_t v1 = 0xD000000000000017;
  if (*v0 != 1) {
    unint64_t v1 = 0x726F737365636361;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 25705;
  }
}

uint64_t sub_251EC939C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251ECA884(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251EC93C4(uint64_t a1)
{
  unint64_t v2 = sub_251EC965C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251EC9400(uint64_t a1)
{
  unint64_t v2 = sub_251EC965C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticTelevisionProfile.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA5490);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251EC965C();
  sub_251F36DA0();
  char v13 = 0;
  sub_251F34DA0();
  sub_251A1A8EC(&qword_26B21E348);
  sub_251F36A20();
  if (!v2)
  {
    v10[1] = *(void *)(v3 + *(int *)(type metadata accessor for StaticTelevisionProfile() + 20));
    char v12 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E408);
    sub_251EC9E04(&qword_269B9E410);
    sub_251F36A20();
    char v11 = 2;
    sub_251F36A20();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_251EC965C()
{
  unint64_t result = qword_269BA5498;
  if (!qword_269BA5498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA5498);
  }
  return result;
}

uint64_t StaticTelevisionProfile.hashValue.getter()
{
  sub_251F36CA0();
  sub_251F34DA0();
  sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
  sub_251F35610();
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for StaticTelevisionProfile() + 20));
  sub_251F36CB0();
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = v1 + 32;
    do
    {
      v3 += 8;
      sub_251F36CB0();
      --v2;
    }
    while (v2);
  }
  sub_251F35610();
  return sub_251F36D00();
}

uint64_t StaticTelevisionProfile.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA54A0);
  uint64_t v4 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for StaticTelevisionProfile();
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251EC965C();
  sub_251F36D90();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  uint64_t v27 = v4;
  os_log_type_t v25 = v9;
  uint64_t v23 = v7;
  uint64_t v10 = sub_251F34DA0();
  uint64_t v26 = v20;
  uint64_t v24 = *(void *)(v10 - 8);
  uint64_t v11 = *(void *)(v24 + 64);
  MEMORY[0x270FA5388](v10);
  char v33 = 0;
  uint64_t v12 = sub_251A1A8EC(&qword_269B9CC80);
  uint64_t v13 = v29;
  sub_251F36880();
  uint64_t v14 = v24 + 32;
  double v21 = *(void (**)(char *, char *, uint64_t))(v24 + 32);
  uint64_t v22 = v12;
  v21(v25, (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E408);
  char v32 = 1;
  sub_251EC9E04(&qword_269B9E420);
  uint64_t v15 = v13;
  uint64_t v16 = sub_251F36880();
  v20[1] = v14;
  uint64_t v26 = v20;
  uint64_t v17 = v23;
  *(void *)&v25[*(int *)(v23 + 20)] = v30;
  MEMORY[0x270FA5388](v16);
  char v31 = 2;
  sub_251F36880();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v6, v15);
  uint64_t v18 = (uint64_t)v25;
  v21(&v25[*(int *)(v17 + 24)], (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  sub_251EC9E68(v18, v28);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return sub_251EC9ECC(v18);
}

uint64_t sub_251EC9C04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((sub_251F34D70() & 1) != 0
    && sub_251AB6284(*(void **)(a1 + *(int *)(a3 + 20)), *(void **)(a2 + *(int *)(a3 + 20))))
  {
    return sub_251F34D70() & 1;
  }
  else
  {
    return 0;
  }
}

uint64_t sub_251EC9C70(uint64_t a1, uint64_t a2)
{
  sub_251F34DA0();
  sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
  sub_251F35610();
  uint64_t v4 = *(void *)(v2 + *(int *)(a2 + 20));
  uint64_t v5 = *(void *)(v4 + 16);
  sub_251F36CB0();
  if (v5)
  {
    uint64_t v6 = v4 + 32;
    do
    {
      v6 += 8;
      sub_251F36CB0();
      --v5;
    }
    while (v5);
  }
  return sub_251F35610();
}

uint64_t sub_251EC9D30(uint64_t a1, uint64_t a2)
{
  sub_251F36CA0();
  sub_251F34DA0();
  sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
  sub_251F35610();
  uint64_t v4 = *(void *)(v2 + *(int *)(a2 + 20));
  sub_251F36CB0();
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = v4 + 32;
    do
    {
      v6 += 8;
      sub_251F36CB0();
      --v5;
    }
    while (v5);
  }
  sub_251F35610();
  return sub_251F36D00();
}

uint64_t sub_251EC9E04(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B9E408);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_251EC9E68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticTelevisionProfile();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_251EC9ECC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StaticTelevisionProfile();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_251EC9F2C()
{
  unint64_t result = qword_269BA54A8;
  if (!qword_269BA54A8)
  {
    type metadata accessor for StaticTelevisionProfile();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA54A8);
  }
  return result;
}

uint64_t sub_251EC9F84()
{
  return sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
}

uint64_t sub_251EC9FAC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticTelevisionProfile.init(from:)(a1, a2);
}

uint64_t sub_251EC9FC4(void *a1)
{
  return StaticTelevisionProfile.encode(to:)(a1);
}

char *initializeBufferWithCopyOfBuffer for StaticTelevisionProfile(char *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *(void *)a1 = *a2;
    a1 = (char *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_251F34DA0();
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, (char *)a2, v7);
    uint64_t v9 = *(int *)(a3 + 24);
    *(void *)&a1[*(int *)(a3 + 20)] = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    uint64_t v10 = &a1[v9];
    uint64_t v11 = (char *)a2 + v9;
    swift_bridgeObjectRetain();
    v8(v10, v11, v7);
  }
  return a1;
}

uint64_t destroy for StaticTelevisionProfile(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_251F34DA0();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v7)((void *)(v4 - 8), a1, v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  return v7(v5, v4);
}

uint64_t initializeWithCopy for StaticTelevisionProfile(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  swift_bridgeObjectRetain();
  v7(v9, v10, v6);
  return a1;
}

uint64_t assignWithCopy for StaticTelevisionProfile(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7(a1 + *(int *)(a3 + 24), a2 + *(int *)(a3 + 24), v6);
  return a1;
}

uint64_t initializeWithTake for StaticTelevisionProfile(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  v7(a1 + v8, a2 + v8, v6);
  return a1;
}

uint64_t assignWithTake for StaticTelevisionProfile(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  v7(a1 + *(int *)(a3 + 24), a2 + *(int *)(a3 + 24), v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for StaticTelevisionProfile(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251ECA44C);
}

uint64_t sub_251ECA44C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for StaticTelevisionProfile(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251ECA520);
}

uint64_t sub_251ECA520(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_251F34DA0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_251ECA5DC()
{
  uint64_t result = sub_251F34DA0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for StaticTelevisionProfile.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251ECA744);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticTelevisionProfile.CodingKeys()
{
  return &type metadata for StaticTelevisionProfile.CodingKeys;
}

unint64_t sub_251ECA780()
{
  unint64_t result = qword_269BA54B0;
  if (!qword_269BA54B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA54B0);
  }
  return result;
}

unint64_t sub_251ECA7D8()
{
  unint64_t result = qword_269BA54B8;
  if (!qword_269BA54B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA54B8);
  }
  return result;
}

unint64_t sub_251ECA830()
{
  unint64_t result = qword_269BA54C0;
  if (!qword_269BA54C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA54C0);
  }
  return result;
}

uint64_t sub_251ECA884(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000251F730B0 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F737365636361 && a2 == 0xEB00000000644979)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

void RoomSectionByUmbrellaCategory.id.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t RoomSectionByUmbrellaCategory.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RoomSectionByUmbrellaCategory.tileInfoBearers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t static RoomSectionByUmbrellaCategory.sections(for:staticRoom:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2519FBF1C(MEMORY[0x263F8EE78]);
  uint64_t v11 = v4;
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    char v6 = (void *)(a1 + 32);
    swift_bridgeObjectRetain();
    do
    {
      sub_251ECAB60((void (*)(void *@<X8>))&v11, v6);
      v6 += 5;
      --v5;
    }
    while (v5);
    uint64_t v4 = swift_bridgeObjectRelease();
    uint64_t v7 = v11;
  }
  else
  {
    uint64_t v7 = v4;
  }
  MEMORY[0x270FA5388](v4);
  void v10[2] = v7;
  void v10[3] = a2;
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_251AA9434(MEMORY[0x263F8EE78], (uint64_t (*)(uint64_t *, char *))sub_251ECC9A0, (uint64_t)v10, v7);
  swift_bridgeObjectRelease_n();
  uint64_t v11 = v8;
  swift_bridgeObjectRetain();
  sub_251ECCAD4(&v11);
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_251ECAB60(void (*a1)(void *a1@<X8>), void *a2)
{
  char v148 = a1;
  uint64_t v139 = type metadata accessor for StaticServiceGroup();
  MEMORY[0x270FA5388](v139);
  unint64_t v142 = (char *)&v138 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v143 = type metadata accessor for StaticService();
  uint64_t v4 = MEMORY[0x270FA5388](v143);
  uint64_t v140 = (uint64_t)&v138 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v141 = (char *)&v138 - v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v144 = (char *)&v138 - v8;
  uint64_t v9 = type metadata accessor for StaticMediaSystem();
  MEMORY[0x270FA5388](v9);
  unint64_t v146 = (char *)&v138 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for StaticMediaProfile();
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v138 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F240);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v138 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for StaticAccessory(0);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v145 = (uint64_t *)((char *)&v138 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v138 - v21;
  sub_251A1A4EC((uint64_t)a2, (uint64_t)v151);
  unint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF78);
  uint64_t v147 = v22;
  if (!swift_dynamicCast())
  {
    if (swift_dynamicCast())
    {
      sub_251A1A4EC((uint64_t)a2, (uint64_t)v150);
      char v31 = v148;
      uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      id v149 = *(void **)v31;
      char v33 = v149;
      *(void *)char v31 = 0x8000000000000000;
      unint64_t v23 = sub_2519FE754(3u);
      uint64_t v35 = v33[2];
      BOOL v36 = (v34 & 1) == 0;
      uint64_t v37 = v35 + v36;
      if (__OFADD__(v35, v36))
      {
        __break(1u);
LABEL_92:
        char v33 = sub_251F102B0(0, v33[2] + 1, 1, v33);
        *(void *)(isUniquelyReferenced_nonNull_native + 8 * v23) = v33;
LABEL_34:
        unint64_t v85 = v33[2];
        unint64_t v84 = v33[3];
        if (v85 >= v84 >> 1)
        {
          char v33 = sub_251F102B0((void *)(v84 > 1), v85 + 1, 1, v33);
          *(void *)(isUniquelyReferenced_nonNull_native + 8 * v23) = v33;
        }
        _OWORD v33[2] = v85 + 1;
        sub_251A1A444(v150, (uint64_t)&v33[5 * v85 + 4]);
        sub_251ECE874((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
        uint64_t v41 = 0;
        uint64_t v42 = 0;
        uint64_t v86 = 0;
        uint64_t v79 = 0;
        uint64_t v87 = 0;
        char v31 = sub_251A22E08;
        goto LABEL_81;
      }
      LOBYTE(v38) = v34;
      if (v33[3] < v37)
      {
        sub_251A0AED8(v37, isUniquelyReferenced_nonNull_native);
        char v33 = v149;
        unint64_t v39 = sub_2519FE754(3u);
        if ((v38 & 1) != (v40 & 1)) {
          goto LABEL_102;
        }
        unint64_t v23 = v39;
LABEL_31:
        *(void *)char v31 = v33;
        swift_bridgeObjectRelease();
        char v82 = *(void **)v31;
        swift_bridgeObjectRetain();
        if ((v38 & 1) == 0) {
          sub_251A11BD0(v23, 3, MEMORY[0x263F8EE78], v82);
        }
        uint64_t isUniquelyReferenced_nonNull_native = v82[7];
        swift_bridgeObjectRelease();
        char v33 = *(void **)(isUniquelyReferenced_nonNull_native + 8 * v23);
        char v83 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(isUniquelyReferenced_nonNull_native + 8 * v23) = v33;
        if (v83) {
          goto LABEL_34;
        }
        goto LABEL_92;
      }
      if (isUniquelyReferenced_nonNull_native) {
        goto LABEL_31;
      }
LABEL_94:
      sub_251A1795C();
      char v33 = v149;
      goto LABEL_31;
    }
    char v31 = (void (*)(void *@<X8>))v146;
    int v43 = swift_dynamicCast();
    uint64_t v27 = v148;
    if (v43)
    {
      sub_251A1A4EC((uint64_t)a2, (uint64_t)v150);
      char v44 = swift_isUniquelyReferenced_nonNull_native();
      id v149 = (void *)*v27;
      uint64_t v45 = v149;
      *uint64_t v27 = 0x8000000000000000;
      unint64_t v38 = sub_2519FE754(3u);
      uint64_t v47 = v45[2];
      BOOL v48 = (v46 & 1) == 0;
      uint64_t v49 = v47 + v48;
      if (!__OFADD__(v47, v48))
      {
        LOBYTE(v50) = v46;
        if (v45[3] >= v49)
        {
          if ((v44 & 1) == 0)
          {
LABEL_99:
            sub_251A1795C();
            uint64_t v45 = v149;
          }
        }
        else
        {
          sub_251A0AED8(v49, v44);
          uint64_t v45 = v149;
          unint64_t v51 = sub_2519FE754(3u);
          if ((v50 & 1) != (v52 & 1)) {
            goto LABEL_102;
          }
          unint64_t v38 = v51;
        }
        *uint64_t v27 = v45;
        swift_bridgeObjectRelease();
        uint64_t v109 = (void *)*v27;
        swift_bridgeObjectRetain();
        if ((v50 & 1) == 0) {
          sub_251A11BD0(v38, 3, MEMORY[0x263F8EE78], v109);
        }
        uint64_t v110 = v109[7];
        swift_bridgeObjectRelease();
        uint64_t v111 = *(void **)(v110 + 8 * v38);
        char v112 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v110 + 8 * v38) = v111;
        if ((v112 & 1) == 0)
        {
          uint64_t v111 = sub_251F102B0(0, v111[2] + 1, 1, v111);
          *(void *)(v110 + 8 * v38) = v111;
        }
        unint64_t v114 = v111[2];
        unint64_t v113 = v111[3];
        if (v114 >= v113 >> 1)
        {
          uint64_t v111 = sub_251F102B0((void *)(v113 > 1), v114 + 1, 1, v111);
          *(void *)(v110 + 8 * v38) = v111;
        }
        v111[2] = v114 + 1;
        sub_251A1A444(v150, (uint64_t)&v111[5 * v114 + 4]);
        sub_251ECE874((uint64_t)v31, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
        uint64_t v41 = 0;
        uint64_t v42 = 0;
        char v31 = 0;
        uint64_t v79 = 0;
        uint64_t v87 = 0;
        uint64_t v86 = sub_251A22E08;
        goto LABEL_81;
      }
      __break(1u);
      goto LABEL_94;
    }
    uint64_t v68 = v143;
    uint64_t v69 = (uint64_t)v144;
    int v70 = a2;
    if (swift_dynamicCast())
    {
      sub_251A1A4EC((uint64_t)a2, (uint64_t)v150);
      char v31 = (void (*)(void *@<X8>))v141;
      swift_dynamicCast();
      int v71 = *((unsigned __int8 *)v31 + *(int *)(v68 + 96));
      uint64_t v72 = v140;
      sub_251ECE80C((uint64_t)v31, v140, (uint64_t (*)(void))type metadata accessor for StaticService);
      if (v71 == 53) {
        LOBYTE(v71) = *(unsigned char *)(v72 + *(int *)(v68 + 88));
      }
      sub_251ECE874(v72, (uint64_t (*)(void))type metadata accessor for StaticService);
      LOBYTE(v150[0]) = v71;
      ServiceKind.umbrellaCategory.getter(&v152);
      unint64_t v38 = v152;
      sub_251A1A4EC((uint64_t)v70, (uint64_t)v150);
      char v73 = swift_isUniquelyReferenced_nonNull_native();
      id v149 = (void *)*v27;
      uint64_t v74 = v149;
      *uint64_t v27 = 0x8000000000000000;
      unint64_t v50 = sub_2519FE754(v38);
      uint64_t v76 = v74[2];
      BOOL v77 = (v75 & 1) == 0;
      uint64_t v78 = v76 + v77;
      if (__OFADD__(v76, v77))
      {
        __break(1u);
LABEL_98:
        __break(1u);
        goto LABEL_99;
      }
      LOBYTE(v79) = v75;
      if (v74[3] < v78)
      {
        sub_251A0AED8(v78, v73);
        uint64_t v74 = v149;
        unint64_t v80 = sub_2519FE754(v38);
        if ((v79 & 1) != (v81 & 1)) {
          goto LABEL_102;
        }
        unint64_t v50 = v80;
LABEL_64:
        *uint64_t v27 = v74;
        swift_bridgeObjectRelease();
        uint64_t v119 = (void *)*v27;
        swift_bridgeObjectRetain();
        if ((v79 & 1) == 0) {
          sub_251A11BD0(v50, v38, MEMORY[0x263F8EE78], v119);
        }
        uint64_t v120 = v119[7];
        swift_bridgeObjectRelease();
        uint64_t v121 = *(void **)(v120 + 8 * v50);
        char v122 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v120 + 8 * v50) = v121;
        if ((v122 & 1) == 0)
        {
          uint64_t v121 = sub_251F102B0(0, v121[2] + 1, 1, v121);
          *(void *)(v120 + 8 * v50) = v121;
        }
        unint64_t v124 = v121[2];
        unint64_t v123 = v121[3];
        if (v124 >= v123 >> 1)
        {
          uint64_t v121 = sub_251F102B0((void *)(v123 > 1), v124 + 1, 1, v121);
          *(void *)(v120 + 8 * v50) = v121;
        }
        v121[2] = v124 + 1;
        sub_251A1A444(v150, (uint64_t)&v121[5 * v124 + 4]);
        sub_251ECE874((uint64_t)v31, (uint64_t (*)(void))type metadata accessor for StaticService);
        sub_251ECE874(v69, (uint64_t (*)(void))type metadata accessor for StaticService);
        uint64_t v41 = 0;
        uint64_t v42 = 0;
        char v31 = 0;
        uint64_t v86 = 0;
        uint64_t v87 = 0;
        uint64_t v79 = (uint64_t)sub_251A22E08;
        goto LABEL_81;
      }
      if (v73) {
        goto LABEL_64;
      }
    }
    else
    {
      uint64_t v69 = (uint64_t)v142;
      uint64_t v41 = 0;
      uint64_t v42 = 0;
      char v31 = 0;
      uint64_t v86 = 0;
      uint64_t v79 = 0;
      uint64_t v87 = 0;
      if (!swift_dynamicCast())
      {
LABEL_81:
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v151);
        sub_251A27C7C((uint64_t)v41);
        sub_251A27C7C((uint64_t)v42);
        sub_251A27C7C((uint64_t)v31);
        sub_251A27C7C((uint64_t)v86);
        sub_251A27C7C(v79);
        return sub_251A27C7C((uint64_t)v87);
      }
      uint64_t v99 = v70[3];
      unint64_t v38 = v70[4];
      __swift_project_boxed_opaque_existential_1(v70, v99);
      (*(void (**)(long long *__return_ptr, uint64_t, unint64_t))(v38 + 112))(v150, v99, v38);
      ServiceKind.umbrellaCategory.getter(&v152);
      LOBYTE(v38) = v152;
      sub_251A1A4EC((uint64_t)v70, (uint64_t)v150);
      char v100 = swift_isUniquelyReferenced_nonNull_native();
      id v149 = (void *)*v27;
      uint64_t v101 = v149;
      *uint64_t v27 = 0x8000000000000000;
      unint64_t v50 = sub_2519FE754(v38);
      uint64_t v103 = v101[2];
      BOOL v104 = (v102 & 1) == 0;
      uint64_t v105 = v103 + v104;
      if (!__OFADD__(v103, v104))
      {
        char v106 = v102;
        if (v101[3] >= v105)
        {
          if ((v100 & 1) == 0)
          {
            sub_251A1795C();
            uint64_t v101 = v149;
          }
        }
        else
        {
          sub_251A0AED8(v105, v100);
          uint64_t v101 = v149;
          unint64_t v107 = sub_2519FE754(v38);
          if ((v106 & 1) != (v108 & 1)) {
            goto LABEL_102;
          }
          unint64_t v50 = v107;
        }
        *uint64_t v27 = v101;
        swift_bridgeObjectRelease();
        uint64_t v132 = (void *)*v27;
        swift_bridgeObjectRetain();
        if ((v106 & 1) == 0) {
          sub_251A11BD0(v50, v38, MEMORY[0x263F8EE78], v132);
        }
        uint64_t v133 = v132[7];
        swift_bridgeObjectRelease();
        uint64_t v134 = *(void **)(v133 + 8 * v50);
        char v135 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v133 + 8 * v50) = v134;
        if ((v135 & 1) == 0)
        {
          uint64_t v134 = sub_251F102B0(0, v134[2] + 1, 1, v134);
          *(void *)(v133 + 8 * v50) = v134;
        }
        unint64_t v137 = v134[2];
        unint64_t v136 = v134[3];
        if (v137 >= v136 >> 1)
        {
          uint64_t v134 = sub_251F102B0((void *)(v136 > 1), v137 + 1, 1, v134);
          *(void *)(v133 + 8 * v50) = v134;
        }
        v134[2] = v137 + 1;
        sub_251A1A444(v150, (uint64_t)&v134[5 * v137 + 4]);
        sub_251ECE874(v69, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
        uint64_t v41 = 0;
        uint64_t v42 = 0;
        char v31 = 0;
        uint64_t v86 = 0;
        uint64_t v79 = 0;
        uint64_t v87 = sub_251A22E08;
        goto LABEL_81;
      }
      __break(1u);
    }
    sub_251A1795C();
    uint64_t v74 = v149;
    goto LABEL_64;
  }
  sub_251A1A4EC((uint64_t)a2, (uint64_t)v150);
  char v24 = swift_dynamicCast();
  os_log_type_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
  if ((v24 & 1) == 0)
  {
    v25(v16, 1, 1, v17);
    sub_251A1B064((uint64_t)v16, &qword_26B21F240);
    uint64_t v41 = 0;
    uint64_t v42 = 0;
LABEL_80:
    sub_251ECE874((uint64_t)v147, type metadata accessor for StaticAccessory);
    char v31 = 0;
    uint64_t v86 = 0;
    uint64_t v79 = 0;
    uint64_t v87 = 0;
    goto LABEL_81;
  }
  uint64_t v26 = a2;
  v25(v16, 0, 1, v17);
  uint64_t v27 = v145;
  sub_251ECE73C((uint64_t)v16, (uint64_t)v145, type metadata accessor for StaticAccessory);
  uint64_t v28 = a2[3];
  uint64_t v29 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v28);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v29 + 112))(v150, v28, v29);
  if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v30 == 0x8000000251F62670)
  {
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  char v53 = sub_251F36B10();
  swift_bridgeObjectRelease();
  if ((v53 & 1) == 0)
  {
    uint64_t v88 = v26[3];
    uint64_t v89 = v26[4];
    __swift_project_boxed_opaque_existential_1(v26, v88);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v89 + 112))(v150, v88, v89);
    ServiceKind.umbrellaCategory.getter(&v152);
    unint64_t v38 = v152;
    sub_251A1A4EC((uint64_t)v26, (uint64_t)v150);
    char v31 = v148;
    char v90 = swift_isUniquelyReferenced_nonNull_native();
    id v149 = *(void **)v31;
    uint64_t v91 = v149;
    *(void *)char v31 = 0x8000000000000000;
    unint64_t v50 = sub_2519FE754(v38);
    uint64_t v93 = v91[2];
    BOOL v94 = (v92 & 1) == 0;
    uint64_t v95 = v93 + v94;
    if (!__OFADD__(v93, v94))
    {
      char v96 = v92;
      if (v91[3] >= v95)
      {
        if ((v90 & 1) == 0)
        {
          sub_251A1795C();
          uint64_t v91 = v149;
        }
      }
      else
      {
        sub_251A0AED8(v95, v90);
        uint64_t v91 = v149;
        unint64_t v97 = sub_2519FE754(v38);
        if ((v96 & 1) != (v98 & 1)) {
          goto LABEL_102;
        }
        unint64_t v50 = v97;
      }
      *(void *)char v31 = v91;
      swift_bridgeObjectRelease();
      uint64_t v125 = *(void **)v31;
      swift_bridgeObjectRetain();
      if ((v96 & 1) == 0) {
        sub_251A11BD0(v50, v38, MEMORY[0x263F8EE78], v125);
      }
      uint64_t v126 = v125[7];
      swift_bridgeObjectRelease();
      uint64_t v127 = *(void **)(v126 + 8 * v50);
      char v128 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v126 + 8 * v50) = v127;
      if ((v128 & 1) == 0)
      {
        uint64_t v127 = sub_251F102B0(0, v127[2] + 1, 1, v127);
        *(void *)(v126 + 8 * v50) = v127;
      }
      unint64_t v130 = v127[2];
      unint64_t v129 = v127[3];
      if (v130 >= v129 >> 1)
      {
        uint64_t v127 = sub_251F102B0((void *)(v129 > 1), v130 + 1, 1, v127);
        *(void *)(v126 + 8 * v50) = v127;
      }
      v127[2] = v130 + 1;
      sub_251A1A444(v150, (uint64_t)&v127[5 * v130 + 4]);
      sub_251ECE874((uint64_t)v27, type metadata accessor for StaticAccessory);
      uint64_t v42 = 0;
      uint64_t v41 = sub_251A22E08;
      goto LABEL_80;
    }
    goto LABEL_98;
  }
LABEL_18:
  uint64_t v54 = (void *)((char *)v27 + *(int *)(v17 + 92));
  uint64_t v42 = (void (*)(void *@<X8>))v54[1];
  if (!v42)
  {
    sub_251ECE874((uint64_t)v27, type metadata accessor for StaticAccessory);
    uint64_t v41 = 0;
    goto LABEL_80;
  }
  uint64_t v55 = *v54;
  swift_bridgeObjectRetain();
  static RoomSectionByUmbrellaCategory.umbrellaCategory(for:)(v55, (uint64_t)v42, (char *)&v152);
  swift_bridgeObjectRelease();
  unsigned __int8 v56 = v152;
  sub_251A1A4EC((uint64_t)v26, (uint64_t)v150);
  uint64_t v57 = v148;
  char v58 = swift_isUniquelyReferenced_nonNull_native();
  id v149 = (void *)*v57;
  uint64_t v59 = v149;
  *uint64_t v57 = 0x8000000000000000;
  unint64_t v61 = sub_2519FE754(v56);
  uint64_t v62 = v59[2];
  BOOL v63 = (v60 & 1) == 0;
  uint64_t v64 = v62 + v63;
  if (__OFADD__(v62, v63))
  {
    __break(1u);
LABEL_96:
    uint64_t v59 = sub_251F102B0(0, v59[2] + 1, 1, v59);
    *(void *)&v16[8 * v61] = v59;
LABEL_60:
    unint64_t v118 = v59[2];
    unint64_t v117 = v59[3];
    if (v118 >= v117 >> 1)
    {
      uint64_t v59 = sub_251F102B0((void *)(v117 > 1), v118 + 1, 1, v59);
      *(void *)&v16[8 * v61] = v59;
    }
    v59[2] = v118 + 1;
    sub_251A1A444(v150, (uint64_t)&v59[5 * v118 + 4]);
    sub_251ECE874((uint64_t)v27, type metadata accessor for StaticAccessory);
    uint64_t v41 = 0;
    uint64_t v42 = sub_251A22E08;
    goto LABEL_80;
  }
  char v65 = v60;
  if (v59[3] >= v64)
  {
    if ((v58 & 1) == 0)
    {
      sub_251A1795C();
      uint64_t v59 = v149;
    }
LABEL_57:
    *uint64_t v57 = v59;
    swift_bridgeObjectRelease();
    unint64_t v115 = (void *)*v57;
    swift_bridgeObjectRetain();
    if ((v65 & 1) == 0) {
      sub_251A11BD0(v61, v56, MEMORY[0x263F8EE78], v115);
    }
    uint64_t v16 = (char *)v115[7];
    swift_bridgeObjectRelease();
    uint64_t v59 = *(void **)&v16[8 * v61];
    char v116 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&v16[8 * v61] = v59;
    if (v116) {
      goto LABEL_60;
    }
    goto LABEL_96;
  }
  sub_251A0AED8(v64, v58);
  uint64_t v59 = v149;
  unint64_t v66 = sub_2519FE754(v56);
  if ((v65 & 1) == (v67 & 1))
  {
    unint64_t v61 = v66;
    goto LABEL_57;
  }
LABEL_102:
  uint64_t result = sub_251F36BA0();
  __break(1u);
  return result;
}

uint64_t static RoomSectionByUmbrellaCategory.umbrellaCategory(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  if (sub_251F356F0() == a1 && v6 == a2) {
    goto LABEL_18;
  }
  char v8 = sub_251F36B10();
  uint64_t result = swift_bridgeObjectRelease();
  char v10 = 0;
  if (v8) {
    goto LABEL_19;
  }
  if (sub_251F356F0() == a1 && v11 == a2) {
    goto LABEL_18;
  }
  char v13 = sub_251F36B10();
  uint64_t result = swift_bridgeObjectRelease();
  char v10 = 0;
  if (v13) {
    goto LABEL_19;
  }
  if (sub_251F356F0() == a1 && v14 == a2) {
    goto LABEL_18;
  }
  char v16 = sub_251F36B10();
  uint64_t result = swift_bridgeObjectRelease();
  char v10 = 0;
  if (v16) {
    goto LABEL_19;
  }
  if (sub_251F356F0() == a1 && v17 == a2) {
    goto LABEL_18;
  }
  char v18 = sub_251F36B10();
  uint64_t result = swift_bridgeObjectRelease();
  char v10 = 0;
  if (v18) {
    goto LABEL_19;
  }
  if (sub_251F356F0() == a1 && v19 == a2)
  {
LABEL_23:
    uint64_t result = swift_bridgeObjectRelease();
    char v10 = 7;
    goto LABEL_19;
  }
  char v20 = sub_251F36B10();
  uint64_t result = swift_bridgeObjectRelease();
  if (v20)
  {
LABEL_25:
    char v10 = 7;
    goto LABEL_19;
  }
  if (sub_251F356F0() == a1 && v21 == a2)
  {
LABEL_18:
    uint64_t result = swift_bridgeObjectRelease();
    char v10 = 0;
    goto LABEL_19;
  }
  char v22 = sub_251F36B10();
  uint64_t result = swift_bridgeObjectRelease();
  char v10 = 0;
  if (v22) {
    goto LABEL_19;
  }
  if (sub_251F356F0() == a1 && v23 == a2) {
    goto LABEL_31;
  }
  char v24 = sub_251F36B10();
  uint64_t result = swift_bridgeObjectRelease();
  if (v24) {
    goto LABEL_33;
  }
  if (sub_251F356F0() == a1 && v25 == a2) {
    goto LABEL_31;
  }
  char v26 = sub_251F36B10();
  uint64_t result = swift_bridgeObjectRelease();
  if (v26) {
    goto LABEL_33;
  }
  if (sub_251F356F0() == a1 && v27 == a2) {
    goto LABEL_23;
  }
  char v28 = sub_251F36B10();
  uint64_t result = swift_bridgeObjectRelease();
  if (v28) {
    goto LABEL_25;
  }
  if (sub_251F356F0() == a1 && v29 == a2) {
    goto LABEL_42;
  }
  char v30 = sub_251F36B10();
  uint64_t result = swift_bridgeObjectRelease();
  if (v30) {
    goto LABEL_44;
  }
  if (sub_251F356F0() == a1 && v31 == a2) {
    goto LABEL_42;
  }
  char v32 = sub_251F36B10();
  uint64_t result = swift_bridgeObjectRelease();
  if (v32) {
    goto LABEL_44;
  }
  if (sub_251F356F0() == a1 && v33 == a2) {
    goto LABEL_18;
  }
  char v34 = sub_251F36B10();
  uint64_t result = swift_bridgeObjectRelease();
  char v10 = 0;
  if (v34) {
    goto LABEL_19;
  }
  if (sub_251F356F0() == a1 && v35 == a2) {
    goto LABEL_53;
  }
  char v36 = sub_251F36B10();
  uint64_t result = swift_bridgeObjectRelease();
  if (v36) {
    goto LABEL_55;
  }
  if (sub_251F356F0() == a1 && v37 == a2) {
    goto LABEL_42;
  }
  char v38 = sub_251F36B10();
  uint64_t result = swift_bridgeObjectRelease();
  if (v38) {
    goto LABEL_44;
  }
  if (sub_251F356F0() == a1 && v39 == a2) {
    goto LABEL_31;
  }
  char v40 = sub_251F36B10();
  uint64_t result = swift_bridgeObjectRelease();
  if (v40) {
    goto LABEL_33;
  }
  if (sub_251F356F0() == a1 && v41 == a2) {
    goto LABEL_42;
  }
  char v42 = sub_251F36B10();
  uint64_t result = swift_bridgeObjectRelease();
  if (v42) {
    goto LABEL_44;
  }
  if (sub_251F356F0() == a1 && v43 == a2)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v10 = 2;
    goto LABEL_19;
  }
  char v44 = sub_251F36B10();
  uint64_t result = swift_bridgeObjectRelease();
  if (v44)
  {
    char v10 = 2;
    goto LABEL_19;
  }
  if (sub_251F356F0() == a1 && v45 == a2) {
    goto LABEL_23;
  }
  char v46 = sub_251F36B10();
  uint64_t result = swift_bridgeObjectRelease();
  if (v46) {
    goto LABEL_25;
  }
  if (sub_251F356F0() == a1 && v47 == a2) {
    goto LABEL_23;
  }
  char v48 = sub_251F36B10();
  uint64_t result = swift_bridgeObjectRelease();
  if (v48) {
    goto LABEL_25;
  }
  if (sub_251F356F0() == a1 && v49 == a2) {
    goto LABEL_23;
  }
  char v50 = sub_251F36B10();
  uint64_t result = swift_bridgeObjectRelease();
  if (v50) {
    goto LABEL_25;
  }
  if (sub_251F356F0() == a1 && v51 == a2) {
    goto LABEL_23;
  }
  char v52 = sub_251F36B10();
  uint64_t result = swift_bridgeObjectRelease();
  if (v52) {
    goto LABEL_25;
  }
  if (sub_251F356F0() == a1 && v53 == a2) {
    goto LABEL_42;
  }
  char v54 = sub_251F36B10();
  uint64_t result = swift_bridgeObjectRelease();
  if (v54)
  {
LABEL_44:
    char v10 = 4;
    goto LABEL_19;
  }
  if (sub_251F356F0() == a1 && v55 == a2) {
    goto LABEL_23;
  }
  char v56 = sub_251F36B10();
  uint64_t result = swift_bridgeObjectRelease();
  if (v56) {
    goto LABEL_25;
  }
  if (sub_251F356F0() == a1 && v57 == a2)
  {
LABEL_53:
    uint64_t result = swift_bridgeObjectRelease();
    char v10 = 6;
    goto LABEL_19;
  }
  char v58 = sub_251F36B10();
  uint64_t result = swift_bridgeObjectRelease();
  if (v58)
  {
LABEL_55:
    char v10 = 6;
    goto LABEL_19;
  }
  if (sub_251F356F0() == a1 && v59 == a2) {
    goto LABEL_31;
  }
  char v60 = sub_251F36B10();
  uint64_t result = swift_bridgeObjectRelease();
  if (v60) {
    goto LABEL_33;
  }
  if (sub_251F356F0() == a1 && v61 == a2) {
    goto LABEL_53;
  }
  char v62 = sub_251F36B10();
  uint64_t result = swift_bridgeObjectRelease();
  if (v62) {
    goto LABEL_55;
  }
  if (sub_251F356F0() == a1 && v63 == a2) {
    goto LABEL_23;
  }
  char v64 = sub_251F36B10();
  uint64_t result = swift_bridgeObjectRelease();
  if (v64) {
    goto LABEL_25;
  }
  if (sub_251F356F0() == a1 && v65 == a2) {
    goto LABEL_23;
  }
  char v66 = sub_251F36B10();
  uint64_t result = swift_bridgeObjectRelease();
  if (v66) {
    goto LABEL_25;
  }
  if (sub_251F356F0() == a1 && v67 == a2)
  {
LABEL_31:
    uint64_t result = swift_bridgeObjectRelease();
    char v10 = 3;
    goto LABEL_19;
  }
  char v68 = sub_251F36B10();
  uint64_t result = swift_bridgeObjectRelease();
  if (v68) {
    goto LABEL_33;
  }
  if (sub_251F356F0() == a1 && v69 == a2) {
    goto LABEL_31;
  }
  char v70 = sub_251F36B10();
  uint64_t result = swift_bridgeObjectRelease();
  if (v70) {
    goto LABEL_33;
  }
  if (sub_251F356F0() == a1 && v71 == a2) {
    goto LABEL_31;
  }
  char v72 = sub_251F36B10();
  uint64_t result = swift_bridgeObjectRelease();
  if (v72)
  {
LABEL_33:
    char v10 = 3;
    goto LABEL_19;
  }
  if (sub_251F356F0() == a1 && v73 == a2) {
    goto LABEL_18;
  }
  char v74 = sub_251F36B10();
  uint64_t result = swift_bridgeObjectRelease();
  char v10 = 0;
  if (v74) {
    goto LABEL_19;
  }
  if (sub_251F356F0() == a1 && v75 == a2) {
    goto LABEL_42;
  }
  char v76 = sub_251F36B10();
  uint64_t result = swift_bridgeObjectRelease();
  if (v76) {
    goto LABEL_44;
  }
  if (sub_251F356F0() == a1 && v77 == a2) {
    goto LABEL_23;
  }
  char v78 = sub_251F36B10();
  uint64_t result = swift_bridgeObjectRelease();
  if (v78) {
    goto LABEL_25;
  }
  if (sub_251F356F0() == a1 && v79 == a2)
  {
LABEL_42:
    uint64_t result = swift_bridgeObjectRelease();
    char v10 = 4;
    goto LABEL_19;
  }
  char v80 = sub_251F36B10();
  uint64_t result = swift_bridgeObjectRelease();
  if (v80) {
    goto LABEL_44;
  }
  if (sub_251F356F0() == a1 && v81 == a2) {
    goto LABEL_42;
  }
  char v82 = sub_251F36B10();
  uint64_t result = swift_bridgeObjectRelease();
  if (v82) {
    char v10 = 4;
  }
  else {
    char v10 = 7;
  }
LABEL_19:
  *a3 = v10;
  return result;
}

uint64_t sub_251ECC750(void **a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D138);
  uint64_t result = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a3 + 16)) {
    return result;
  }
  unsigned __int8 v12 = *a2;
  uint64_t result = sub_2519FE754(v12);
  if ((v13 & 1) == 0) {
    return result;
  }
  uint64_t v14 = *(void *)(*(void *)(a3 + 56) + 8 * result);
  sub_251ECE7A4(a4, (uint64_t)v11);
  uint64_t v15 = type metadata accessor for StaticRoom(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v11, 1, v15) == 1)
  {
    swift_bridgeObjectRetain();
    sub_251A1B064((uint64_t)v11, &qword_269B9D138);
LABEL_9:
    uint64_t v19 = MEMORY[0x263F8EE78];
    goto LABEL_10;
  }
  uint64_t v16 = *(void *)&v11[*(int *)(v15 + 72)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_251ECE874((uint64_t)v11, type metadata accessor for StaticRoom);
  if (!*(void *)(v16 + 16) || (unint64_t v17 = sub_2519FE754(v12), (v18 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  uint64_t v19 = *(void *)(*(void *)(v16 + 56) + 8 * v17);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_10:
  uint64_t v20 = sub_251CFF0B0(v19, v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unsigned __int8 v29 = v12;
  uint64_t v21 = UmbrellaCategory.localizedDescription.getter();
  uint64_t v23 = v22;
  char v24 = *a1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_251F111B4(0, v24[2] + 1, 1, v24);
    char v24 = (void *)result;
  }
  unint64_t v26 = v24[2];
  unint64_t v25 = v24[3];
  if (v26 >= v25 >> 1)
  {
    uint64_t result = (uint64_t)sub_251F111B4((void *)(v25 > 1), v26 + 1, 1, v24);
    char v24 = (void *)result;
  }
  v24[2] = v26 + 1;
  uint64_t v27 = &v24[4 * v26];
  *((unsigned char *)v27 + 32) = v12;
  v27[5] = v21;
  v27[6] = v23;
  v27[7] = v20;
  *a1 = v24;
  return result;
}

uint64_t sub_251ECC9A0(void **a1, unsigned __int8 *a2)
{
  return sub_251ECC750(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t static RoomSectionByUmbrellaCategory.< infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) == *(void *)(a2 + 8) && *(void *)(a1 + 16) == *(void *)(a2 + 16)) {
    return 0;
  }
  else {
    return sub_251F36B10();
  }
}

uint64_t sub_251ECC9EC(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) == *(void *)(a2 + 8) && *(void *)(a1 + 16) == *(void *)(a2 + 16)) {
    return 0;
  }
  else {
    return sub_251F36B10();
  }
}

uint64_t sub_251ECCA1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  if (v4 == v2 && v5 == v3) {
    char v7 = 1;
  }
  else {
    char v7 = sub_251F36B10() ^ 1;
  }
  return v7 & 1;
}

uint64_t sub_251ECCA5C(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) == *(void *)(a2 + 8) && *(void *)(a1 + 16) == *(void *)(a2 + 16)) {
    char v3 = 1;
  }
  else {
    char v3 = sub_251F36B10() ^ 1;
  }
  return v3 & 1;
}

uint64_t sub_251ECCAA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  if (v4 == v2 && v5 == v3) {
    return 0;
  }
  else {
    return sub_251F36B10();
  }
}

uint64_t sub_251ECCAD4(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_251ECDDA0(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_251ECCB40(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_251ECCB40(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_251F36AA0();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_251ECD238(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_160;
  }
  uint64_t v109 = result;
  char v106 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    __dst = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x263F8EE78] + 16);
      uint64_t v11 = (char *)MEMORY[0x263F8EE78];
LABEL_118:
      char v98 = v11;
      uint64_t v108 = v8;
      if (v12 >= 2)
      {
        uint64_t v99 = *v106;
        do
        {
          unint64_t v100 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_147;
          }
          if (!v99) {
            goto LABEL_159;
          }
          uint64_t v101 = v98;
          uint64_t v102 = *(void *)&v98[16 * v100 + 32];
          uint64_t v103 = *(void *)&v98[16 * v12 + 24];
          sub_251ECD318((char *)(v99 + 32 * v102), (char *)(v99 + 32 * *(void *)&v98[16 * v12 + 16]), v99 + 32 * v103, __dst);
          if (v1) {
            break;
          }
          if (v103 < v102) {
            goto LABEL_148;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v101 = sub_251ECDC38((uint64_t)v101);
          }
          if (v100 >= *((void *)v101 + 2)) {
            goto LABEL_149;
          }
          BOOL v104 = &v101[16 * v100 + 32];
          *(void *)BOOL v104 = v102;
          *((void *)v104 + 1) = v103;
          unint64_t v105 = *((void *)v101 + 2);
          if (v12 > v105) {
            goto LABEL_150;
          }
          memmove(&v101[16 * v12 + 16], &v101[16 * v12 + 32], 16 * (v105 - v12));
          char v98 = v101;
          *((void *)v101 + 2) = v105 - 1;
          unint64_t v12 = v105 - 1;
        }
        while (v105 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(void *)(v108 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v108 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_251F35B50();
    *(void *)(v7 + 16) = v6;
    uint64_t v108 = v7;
    __dst = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v107 = *a1 + 16;
  uint64_t v11 = (char *)MEMORY[0x263F8EE78];
  uint64_t v110 = v3;
  uint64_t v111 = v10;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 >= v3) {
      goto LABEL_46;
    }
    uint64_t v14 = v10 + 32 * v9;
    uint64_t v15 = *(void *)(v14 + 8);
    uint64_t v16 = *(void *)(v14 + 16);
    uint64_t v17 = v10 + 32 * v13;
    if (v15 == *(void *)(v17 + 8) && v16 == *(void *)(v17 + 16))
    {
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_45;
      }
      int v19 = 0;
    }
    else
    {
      int v19 = sub_251F36B10();
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    uint64_t v21 = (void *)(v107 + 32 * v20);
    do
    {
      uint64_t v23 = v10 + 32 * v9;
      if (*(v21 - 1) == *(void *)(v23 + 8) && *v21 == *(void *)(v23 + 16))
      {
        if (v19) {
          goto LABEL_37;
        }
      }
      else if ((v19 ^ sub_251F36B10()))
      {
        goto LABEL_36;
      }
      uint64_t v22 = v20 + 1;
      v21 += 4;
      uint64_t v9 = v20;
      uint64_t v20 = v22;
    }
    while (v22 < v3);
    uint64_t v20 = v22;
LABEL_36:
    uint64_t v9 = v20;
    if (v19)
    {
LABEL_37:
      if (v20 < v13) {
        goto LABEL_155;
      }
      if (v13 < v20)
      {
        uint64_t v25 = 32 * v20;
        uint64_t v26 = 32 * v13;
        uint64_t v27 = v20;
        uint64_t v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10) {
              goto LABEL_158;
            }
            unsigned __int8 v29 = (_OWORD *)(v10 + v26);
            uint64_t v30 = v10 + v25;
            char v31 = *(unsigned char *)(v10 + v26);
            uint64_t v32 = *(void *)(v10 + v26 + 8);
            long long v33 = *(_OWORD *)(v10 + v26 + 16);
            long long v34 = *(_OWORD *)(v10 + v25 - 16);
            *unsigned __int8 v29 = *(_OWORD *)(v10 + v25 - 32);
            v29[1] = v34;
            *(unsigned char *)(v30 - 32) = v31;
            *(void *)(v30 - 24) = v32;
            *(_OWORD *)(v30 - 16) = v33;
          }
          ++v28;
          v25 -= 32;
          v26 += 32;
        }
        while (v28 < v27);
      }
LABEL_45:
      uint64_t v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13)) {
        goto LABEL_151;
      }
      if (v9 - v13 < v109) {
        break;
      }
    }
LABEL_67:
    if (v9 < v13) {
      goto LABEL_146;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_251ECD5C4(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v49 = *((void *)v11 + 2);
    unint64_t v48 = *((void *)v11 + 3);
    unint64_t v12 = v49 + 1;
    if (v49 >= v48 >> 1) {
      uint64_t v11 = sub_251ECD5C4((char *)(v48 > 1), v49 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    char v50 = v11 + 32;
    uint64_t v51 = &v11[16 * v49 + 32];
    *(void *)uint64_t v51 = v13;
    *((void *)v51 + 1) = v9;
    if (v49)
    {
      uint64_t v10 = v111;
      while (1)
      {
        unint64_t v52 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v57 = &v50[16 * v12];
          uint64_t v58 = *((void *)v57 - 8);
          uint64_t v59 = *((void *)v57 - 7);
          BOOL v63 = __OFSUB__(v59, v58);
          uint64_t v60 = v59 - v58;
          if (v63) {
            goto LABEL_135;
          }
          uint64_t v62 = *((void *)v57 - 6);
          uint64_t v61 = *((void *)v57 - 5);
          BOOL v63 = __OFSUB__(v61, v62);
          uint64_t v55 = v61 - v62;
          char v56 = v63;
          if (v63) {
            goto LABEL_136;
          }
          unint64_t v64 = v12 - 2;
          uint64_t v65 = &v50[16 * v12 - 32];
          uint64_t v67 = *(void *)v65;
          uint64_t v66 = *((void *)v65 + 1);
          BOOL v63 = __OFSUB__(v66, v67);
          uint64_t v68 = v66 - v67;
          if (v63) {
            goto LABEL_138;
          }
          BOOL v63 = __OFADD__(v55, v68);
          uint64_t v69 = v55 + v68;
          if (v63) {
            goto LABEL_141;
          }
          if (v69 >= v60)
          {
            uint64_t v87 = &v50[16 * v52];
            uint64_t v89 = *(void *)v87;
            uint64_t v88 = *((void *)v87 + 1);
            BOOL v63 = __OFSUB__(v88, v89);
            uint64_t v90 = v88 - v89;
            if (v63) {
              goto LABEL_145;
            }
            BOOL v80 = v55 < v90;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v81 = *((void *)v11 + 4);
            uint64_t v82 = *((void *)v11 + 5);
            BOOL v63 = __OFSUB__(v82, v81);
            uint64_t v74 = v82 - v81;
            char v75 = v63;
            goto LABEL_99;
          }
          uint64_t v54 = *((void *)v11 + 4);
          uint64_t v53 = *((void *)v11 + 5);
          BOOL v63 = __OFSUB__(v53, v54);
          uint64_t v55 = v53 - v54;
          char v56 = v63;
        }
        if (v56) {
          goto LABEL_137;
        }
        unint64_t v64 = v12 - 2;
        char v70 = &v50[16 * v12 - 32];
        uint64_t v72 = *(void *)v70;
        uint64_t v71 = *((void *)v70 + 1);
        BOOL v73 = __OFSUB__(v71, v72);
        uint64_t v74 = v71 - v72;
        char v75 = v73;
        if (v73) {
          goto LABEL_140;
        }
        char v76 = &v50[16 * v52];
        uint64_t v78 = *(void *)v76;
        uint64_t v77 = *((void *)v76 + 1);
        BOOL v63 = __OFSUB__(v77, v78);
        uint64_t v79 = v77 - v78;
        if (v63) {
          goto LABEL_143;
        }
        if (__OFADD__(v74, v79)) {
          goto LABEL_144;
        }
        if (v74 + v79 >= v55)
        {
          BOOL v80 = v55 < v79;
LABEL_105:
          if (v80) {
            unint64_t v52 = v64;
          }
          goto LABEL_107;
        }
LABEL_99:
        if (v75) {
          goto LABEL_139;
        }
        char v83 = &v50[16 * v52];
        uint64_t v85 = *(void *)v83;
        uint64_t v84 = *((void *)v83 + 1);
        BOOL v63 = __OFSUB__(v84, v85);
        uint64_t v86 = v84 - v85;
        if (v63) {
          goto LABEL_142;
        }
        if (v86 < v74) {
          goto LABEL_15;
        }
LABEL_107:
        unint64_t v91 = v52 - 1;
        if (v52 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        if (!v10) {
          goto LABEL_157;
        }
        uint64_t v92 = v10;
        uint64_t v93 = &v50[16 * v91];
        uint64_t v94 = *(void *)v93;
        uint64_t v95 = &v50[16 * v52];
        uint64_t v96 = *((void *)v95 + 1);
        sub_251ECD318((char *)(v92 + 32 * *(void *)v93), (char *)(v92 + 32 * *(void *)v95), v92 + 32 * v96, __dst);
        if (v1) {
          goto LABEL_115;
        }
        if (v96 < v94) {
          goto LABEL_132;
        }
        if (v52 > *((void *)v11 + 2)) {
          goto LABEL_133;
        }
        *(void *)uint64_t v93 = v94;
        *(void *)&v50[16 * v91 + 8] = v96;
        unint64_t v97 = *((void *)v11 + 2);
        if (v52 >= v97) {
          goto LABEL_134;
        }
        unint64_t v12 = v97 - 1;
        memmove(&v50[16 * v52], v95 + 16, 16 * (v97 - 1 - v52));
        *((void *)v11 + 2) = v97 - 1;
        BOOL v80 = v97 > 2;
        uint64_t v10 = v111;
        if (!v80) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
    uint64_t v10 = v111;
LABEL_15:
    uint64_t v3 = v110;
    if (v9 >= v110)
    {
      uint64_t v8 = v108;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v109)) {
    goto LABEL_153;
  }
  if (v13 + v109 >= v3) {
    uint64_t v35 = v3;
  }
  else {
    uint64_t v35 = v13 + v109;
  }
  if (v35 >= v13)
  {
    if (v9 != v35)
    {
      uint64_t v36 = v107 + 32 * v9;
      do
      {
        uint64_t v37 = v10 + 32 * v9;
        uint64_t v38 = *(void *)(v37 + 8);
        uint64_t v39 = *(void *)(v37 + 16);
        uint64_t v40 = v13;
        uint64_t v41 = v36;
        do
        {
          BOOL v42 = v38 == *(void *)(v41 - 40) && v39 == *(void *)(v41 - 32);
          if (v42 || (sub_251F36B10() & 1) == 0) {
            break;
          }
          if (!v10) {
            goto LABEL_156;
          }
          uint64_t v43 = (_OWORD *)(v41 - 16);
          long long v44 = *(_OWORD *)v41;
          long long v46 = *(_OWORD *)(v41 - 48);
          long long v45 = *(_OWORD *)(v41 - 32);
          *(_OWORD *)(v41 - 32) = *(_OWORD *)v41;
          v41 -= 32;
          char v47 = *(unsigned char *)(v41 + 16);
          uint64_t v38 = *(void *)(v41 + 24);
          *uint64_t v43 = v46;
          v43[1] = v45;
          *(unsigned char *)(v41 - 16) = v47;
          *(void *)(v41 - 8) = v38;
          uint64_t v39 = v44;
          ++v40;
        }
        while (v9 != v40);
        ++v9;
        v36 += 32;
      }
      while (v9 != v35);
      uint64_t v9 = v35;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  uint64_t result = sub_251F36670();
  __break(1u);
  return result;
}

uint64_t sub_251ECD238(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 32 * a3 + 16;
LABEL_5:
    uint64_t v9 = v7 + 32 * v4;
    uint64_t result = *(void *)(v9 + 8);
    uint64_t v10 = *(void *)(v9 + 16);
    uint64_t v11 = v6;
    uint64_t v12 = v8;
    while (1)
    {
      BOOL v13 = result == *(void *)(v12 - 40) && v10 == *(void *)(v12 - 32);
      if (v13 || (uint64_t result = sub_251F36B10(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 32;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      uint64_t v14 = (_OWORD *)(v12 - 16);
      long long v15 = *(_OWORD *)v12;
      long long v17 = *(_OWORD *)(v12 - 48);
      long long v16 = *(_OWORD *)(v12 - 32);
      *(_OWORD *)(v12 - 32) = *(_OWORD *)v12;
      v12 -= 32;
      char v18 = *(unsigned char *)(v12 + 16);
      uint64_t result = *(void *)(v12 + 24);
      *uint64_t v14 = v17;
      v14[1] = v16;
      *(unsigned char *)(v12 - 16) = v18;
      *(void *)(v12 - 8) = result;
      uint64_t v10 = v15;
      if (v4 == ++v11) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_251ECD318(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 31;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 5;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 31;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 5;
  uint64_t v30 = __src;
  unsigned __int8 v29 = __dst;
  if (v10 >= v12 >> 5)
  {
    if (v11 >= -31)
    {
      if (__dst != a2 || &a2[32 * v13] <= __dst) {
        memmove(__dst, a2, 32 * v13);
      }
      uint64_t v20 = &v4[32 * v13];
      uint64_t v28 = v20;
      uint64_t v30 = v6;
      if (v7 < v6 && v11 >= 32)
      {
        uint64_t v21 = (char *)(a3 - 32);
        do
        {
          uint64_t v22 = v21 + 32;
          BOOL v23 = *((void *)v20 - 3) == *((void *)v6 - 3) && *((void *)v20 - 2) == *((void *)v6 - 2);
          if (v23 || (sub_251F36B10() & 1) == 0)
          {
            uint64_t v28 = v20 - 32;
            if (v22 < v20 || v21 >= v20 || v22 != v20)
            {
              long long v26 = *((_OWORD *)v20 - 1);
              *(_OWORD *)uint64_t v21 = *((_OWORD *)v20 - 2);
              *((_OWORD *)v21 + 1) = v26;
            }
            char v24 = v6;
            v20 -= 32;
            if (v6 <= v7) {
              break;
            }
          }
          else
          {
            char v24 = v6 - 32;
            if (v22 != v6 || v21 >= v6)
            {
              long long v25 = *((_OWORD *)v6 - 1);
              *(_OWORD *)uint64_t v21 = *(_OWORD *)v24;
              *((_OWORD *)v21 + 1) = v25;
            }
            uint64_t v30 = v6 - 32;
            if (v24 <= v7) {
              break;
            }
          }
          v21 -= 32;
          uint64_t v6 = v24;
        }
        while (v20 > v4);
      }
LABEL_52:
      sub_251ECD6F0((void **)&v30, &v29, &v28);
      return 1;
    }
  }
  else if (v8 >= -31)
  {
    if (__dst != __src || &__src[32 * v10] <= __dst) {
      memmove(__dst, __src, 32 * v10);
    }
    uint64_t v14 = &v4[32 * v10];
    uint64_t v28 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 32)
    {
      long long v15 = v4;
      while (1)
      {
        BOOL v16 = *((void *)v6 + 1) == *((void *)v15 + 1) && *((void *)v6 + 2) == *((void *)v15 + 2);
        if (v16 || (sub_251F36B10() & 1) == 0)
        {
          uint64_t v4 = v15 + 32;
          char v18 = v15;
          long long v17 = v6;
          if (v7 == v15)
          {
            v15 += 32;
            if (v7 < v4) {
              goto LABEL_26;
            }
          }
          else
          {
            v15 += 32;
          }
        }
        else
        {
          long long v17 = v6 + 32;
          char v18 = v6;
          if (v7 == v6 && v7 < v17) {
            goto LABEL_26;
          }
        }
        long long v19 = *((_OWORD *)v18 + 1);
        *(_OWORD *)uint64_t v7 = *(_OWORD *)v18;
        *((_OWORD *)v7 + 1) = v19;
LABEL_26:
        v7 += 32;
        if (v15 < v14)
        {
          uint64_t v6 = v17;
          if ((unint64_t)v17 < a3) {
            continue;
          }
        }
        unsigned __int8 v29 = v4;
        uint64_t v30 = v7;
        goto LABEL_52;
      }
    }
    goto LABEL_52;
  }
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

char *sub_251ECD5C4(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269BA54E8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_251ECD6C0(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_251ECDAF4(a1, a2, a3, (uint64_t (*)(void))type metadata accessor for StaticService);
}

uint64_t sub_251ECD6D8(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_251ECDAF4(a1, a2, a3, (uint64_t (*)(void))type metadata accessor for StaticHome);
}

char *sub_251ECD6F0(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 31;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -32)
  {
    uint64_t result = (char *)sub_251F36710();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 5;
    if (result != v3 || result >= &v3[32 * v7])
    {
      return (char *)memmove(result, v3, 32 * v7);
    }
  }
  return result;
}

uint64_t sub_251ECD7B0(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_251ECDAF4(a1, a2, a3, (uint64_t (*)(void))type metadata accessor for StaticTimer);
}

uint64_t sub_251ECD7C8(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_251ECDAF4(a1, a2, a3, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
}

uint64_t sub_251ECD7E4(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_251ECDAF4(a1, a2, a3, type metadata accessor for ScrubberElement);
}

uint64_t sub_251ECD7FC(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_251ECDAF4(a1, a2, a3, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
}

uint64_t sub_251ECD814(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_251ECDAF4(a1, a2, a3, type metadata accessor for StaticRoom);
}

uint64_t sub_251ECD82C(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_251ECDAF4(a1, a2, a3, type metadata accessor for RoomType);
}

uint64_t sub_251ECD844(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_251ECDAF4(a1, a2, a3, (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer);
}

uint64_t sub_251ECD85C(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_251ECDAF4(a1, a2, a3, (uint64_t (*)(void))type metadata accessor for StaticUserActionPrediction);
}

char *sub_251ECD874(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  int64_t v4 = *a3 - (void)v3;
  if (v4 < 0)
  {
    uint64_t result = (char *)sub_251F36710();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    if (result != v3 || result >= &v3[v4])
    {
      return (char *)memmove(result, v3, v4);
    }
  }
  return result;
}

uint64_t sub_251ECD918(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_251ECDAF4(a1, a2, a3, (uint64_t (*)(void))type metadata accessor for ActionService);
}

char *sub_251ECD930(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -40)
  {
    uint64_t result = (char *)sub_251F36710();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v6 = v4 / 40;
    if (result != v3 || result >= &v3[40 * v6])
    {
      return (char *)memmove(result, v3, 40 * v6);
    }
  }
  return result;
}

uint64_t sub_251ECD9FC(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_251ECDAF4(a1, a2, a3, MEMORY[0x270FA9480]);
}

char *sub_251ECDA08(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 7;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -8)
  {
    uint64_t result = (char *)sub_251F36710();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
    {
      return (char *)memmove(result, v3, 8 * v7);
    }
  }
  return result;
}

uint64_t sub_251ECDAC4(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_251ECDAF4(a1, a2, a3, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
}

uint64_t sub_251ECDADC(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_251ECDAF4(a1, a2, a3, (uint64_t (*)(void))type metadata accessor for StaticResident);
}

uint64_t sub_251ECDAF4(unint64_t *a1, unint64_t *a2, uint64_t *a3, uint64_t (*a4)(void))
{
  unint64_t v4 = *a1;
  unint64_t v5 = *a2;
  uint64_t v6 = *a3;
  uint64_t result = a4(0);
  uint64_t v8 = *(void *)(*(void *)(result - 8) + 72);
  if (!v8)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v9 = v6 - v5;
  if (v6 - v5 == 0x8000000000000000 && v8 == -1) {
    goto LABEL_18;
  }
  if (v9 / v8 < 0)
  {
LABEL_19:
    uint64_t result = sub_251F36710();
    __break(1u);
    return result;
  }
  if (v4 < v5 || v4 >= v5 + v9 / v8 * v8)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v4 != v5)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

char *sub_251ECDC38(uint64_t a1)
{
  return sub_251ECD5C4(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_251ECDC4C(void *a1)
{
  return sub_251A3ECF0(0, a1[2], 0, a1);
}

uint64_t sub_251ECDC60(void *a1)
{
  return sub_251A3ED30(0, a1[2], 0, a1);
}

uint64_t sub_251ECDC74(uint64_t a1)
{
  return sub_251A3FD34(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_251ECDC88(void *a1)
{
  return sub_251A3FEA0(0, a1[2], 0, a1);
}

uint64_t sub_251ECDC9C(void *a1)
{
  return sub_251A3FEC0(0, a1[2], 0, a1);
}

uint64_t sub_251ECDCB0(uint64_t a1)
{
  return sub_251A3FEEC(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_251ECDCC4(void *a1)
{
  return sub_251A401C0(0, a1[2], 0, a1);
}

void sub_251ECDCD8()
{
}

uint64_t sub_251ECDCEC(void *a1)
{
  return sub_251A401E0(0, a1[2], 0, a1);
}

uint64_t sub_251ECDD00(void *a1)
{
  return sub_251A3ED10(0, a1[2], 0, a1);
}

uint64_t sub_251ECDD14(void *a1)
{
  return sub_251A40200(0, a1[2], 0, a1);
}

uint64_t sub_251ECDD28(void *a1)
{
  return sub_251A4051C(0, a1[2], 0, a1);
}

uint64_t sub_251ECDD3C(void *a1)
{
  return sub_251A4053C(0, a1[2], 0, a1);
}

uint64_t sub_251ECDD50(uint64_t a1)
{
  return sub_251A3FEE0(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_251ECDD64(void *a1)
{
  return sub_251A40830(0, a1[2], 0, a1);
}

uint64_t sub_251ECDD78(void *a1)
{
  return sub_251A40850(0, a1[2], 0, a1);
}

uint64_t sub_251ECDD8C(void *a1)
{
  return sub_251A3ED50(0, a1[2], 0, a1);
}

uint64_t sub_251ECDDA0(uint64_t a1)
{
  return sub_251A40DD4(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_251ECDDB4(void *a1)
{
  return sub_251A40F40(0, a1[2], 0, a1);
}

uint64_t sub_251ECDDC8(void *a1)
{
  return sub_251A40F60(0, a1[2], 0, a1);
}

uint64_t _s13HomeDataModel29RoomSectionByUmbrellaCategoryV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticAccessory(0);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v60 - v9;
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v68 = (uint64_t)&v60 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v67 = (uint64_t)&v60 - v13;
  uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA54D0);
  MEMORY[0x270FA5388](v66);
  uint64_t v65 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v63 = (int *)type metadata accessor for StaticServiceGroup();
  uint64_t v15 = MEMORY[0x270FA5388](v63);
  unint64_t v64 = (char *)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  long long v19 = (char *)&v60 - v18;
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  uint64_t v78 = (uint64_t)&v60 - v21;
  MEMORY[0x270FA5388](v20);
  uint64_t v77 = (uint64_t)&v60 - v22;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_269BA54D8);
  MEMORY[0x270FA5388](v23);
  long long v25 = (char *)&v60 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = *(void *)(a1 + 24);
  uint64_t v27 = *(void *)(a2 + 24);
  uint64_t v28 = *(void *)(v26 + 16);
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v76 = v28;
  if (!v28)
  {
    int v79 = 1;
LABEL_36:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v79 & 1;
  }
  char v75 = v25;
  uint64_t v61 = v10;
  uint64_t v62 = v7;
  unint64_t v30 = 0;
  uint64_t v74 = (uint64_t)v85 + 8;
  uint64_t v73 = (uint64_t)v83 + 8;
  uint64_t v72 = &v81;
  int v79 = 1;
  uint64_t v31 = 32;
  uint64_t v32 = (uint64_t)v65;
  uint64_t v33 = (uint64_t)v64;
  uint64_t v71 = v26;
  uint64_t v70 = v23;
  uint64_t v69 = v27;
  while (v30 < *(void *)(v26 + 16))
  {
    uint64_t result = sub_251A1A4EC(v26 + v31, (uint64_t)v82);
    unint64_t v34 = *(void *)(v27 + 16);
    if (v30 == v34)
    {
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v82);
      goto LABEL_36;
    }
    if (v30 >= v34) {
      goto LABEL_38;
    }
    uint64_t v35 = (uint64_t)v19;
    sub_251A1A444(v82, (uint64_t)v84);
    sub_251A1A4EC(v27 + v31, v74);
    v83[0] = v85[0];
    v83[1] = v85[1];
    v83[2] = v85[2];
    v82[0] = v84[0];
    v82[1] = v84[1];
    sub_251A1A4EC((uint64_t)v82, (uint64_t)v80);
    sub_251A1A4EC(v73, (uint64_t)v72);
    __swift_instantiateConcreteTypeFromMangledName(&qword_269BA54E0);
    uint64_t v36 = (uint64_t)v75;
    if (!swift_dynamicCast())
    {
      uint64_t v53 = v66;
      if (swift_dynamicCast())
      {
        uint64_t v54 = v32 + *(int *)(v53 + 48);
        uint64_t v55 = v67;
        sub_251ECE73C(v32, v67, type metadata accessor for StaticAccessory);
        uint64_t v56 = v68;
        sub_251ECE73C(v54, v68, type metadata accessor for StaticAccessory);
        uint64_t v57 = v55;
        uint64_t v58 = (uint64_t)v61;
        sub_251ECE80C(v57, (uint64_t)v61, type metadata accessor for StaticAccessory);
        uint64_t v59 = (uint64_t)v62;
        sub_251ECE80C(v56, (uint64_t)v62, type metadata accessor for StaticAccessory);
        if (v79) {
          int v79 = static StaticAccessory.== infix(_:_:)(v58, v59);
        }
        else {
          int v79 = 0;
        }
        sub_251ECE874(v59, type metadata accessor for StaticAccessory);
        sub_251ECE874(v58, type metadata accessor for StaticAccessory);
        sub_251ECE874(v68, type metadata accessor for StaticAccessory);
        sub_251ECE874(v67, type metadata accessor for StaticAccessory);
        uint64_t v32 = (uint64_t)v65;
        uint64_t v33 = (uint64_t)v64;
        long long v19 = (char *)v35;
        uint64_t v26 = v71;
        uint64_t v23 = v70;
        uint64_t v27 = v69;
      }
      else
      {
        int v79 = 0;
        long long v19 = (char *)v35;
      }
      goto LABEL_4;
    }
    uint64_t v37 = v36 + *(int *)(v23 + 48);
    uint64_t v38 = v77;
    sub_251ECE73C(v36, v77, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
    uint64_t v39 = v78;
    sub_251ECE73C(v37, v78, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
    long long v19 = (char *)v35;
    sub_251ECE80C(v38, v35, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
    sub_251ECE80C(v39, v33, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
    if (v79 & 1) != 0 && (sub_251F34D70())
    {
      uint64_t v40 = v63[5];
      uint64_t v41 = *(void *)(v35 + v40);
      uint64_t v42 = *(void *)(v35 + v40 + 8);
      uint64_t v43 = (void *)(v33 + v40);
      uint64_t v23 = v70;
      uint64_t v27 = v69;
      if (v41 != *v43 || v42 != v43[1])
      {
        char v44 = sub_251F36B10();
        int v45 = 0;
        if ((v44 & 1) == 0) {
          goto LABEL_27;
        }
      }
      long long v46 = v63;
      if (*(unsigned __int8 *)(v35 + v63[6]) == *(unsigned __int8 *)(v33 + v63[6])
        && *(unsigned __int8 *)(v35 + v63[7]) == *(unsigned __int8 *)(v33 + v63[7])
        && (sub_251B04848(*(void *)(v35 + v63[8]), *(void *)(v33 + v63[8])) & 1) != 0)
      {
        uint64_t v47 = v46[9];
        unint64_t v48 = (void *)(v35 + v47);
        uint64_t v49 = *(void *)(v35 + v47 + 8);
        char v50 = (void *)(v33 + v47);
        uint64_t v51 = v50[1];
        if (v49)
        {
          if (v51)
          {
            if (*v48 != *v50 || v49 != v51)
            {
              char v52 = sub_251F36B10();
              int v45 = 0;
              if ((v52 & 1) == 0) {
                goto LABEL_27;
              }
            }
            goto LABEL_31;
          }
        }
        else if (!v51)
        {
LABEL_31:
          if (*(unsigned __int8 *)(v35 + v63[10]) == *(unsigned __int8 *)(v33 + v63[10]))
          {
            int v45 = sub_251AF99A8(*(void *)(v35 + v63[11]), *(void *)(v33 + v63[11]));
            goto LABEL_27;
          }
        }
      }
      int v45 = 0;
      goto LABEL_27;
    }
    int v45 = 0;
    uint64_t v23 = v70;
    uint64_t v27 = v69;
LABEL_27:
    int v79 = v45;
    sub_251ECE874(v33, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
    sub_251ECE874(v35, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
    sub_251ECE874(v78, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
    sub_251ECE874(v77, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
    uint64_t v26 = v71;
LABEL_4:
    ++v30;
    sub_251A1B064((uint64_t)v80, &qword_269BA54E0);
    uint64_t result = sub_251A1B064((uint64_t)v82, &qword_269BA54E0);
    v31 += 40;
    if (v76 == v30) {
      goto LABEL_36;
    }
  }
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

unint64_t sub_251ECE5D0()
{
  unint64_t result = qword_269BA54C8;
  if (!qword_269BA54C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269BA54C8);
  }
  return result;
}

uint64_t initializeWithCopy for RoomSectionByUmbrellaCategory(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RoomSectionByUmbrellaCategory(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for RoomSectionByUmbrellaCategory(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for RoomSectionByUmbrellaCategory()
{
  return &type metadata for RoomSectionByUmbrellaCategory;
}

uint64_t sub_251ECE73C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_251ECE7A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D138);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_251ECE80C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_251ECE874(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_251ECE8D8(void *a1)
{
  HMHome.matterAccessories.getter();
  unint64_t v3 = v2;
  id v4 = a1;
  uint64_t v5 = sub_251ED1094(v3);

  swift_bridgeObjectRelease();
  if (qword_26B21ECD0 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_251F350A0();
  __swift_project_value_buffer(v6, (uint64_t)qword_26B21ECB8);
  id v7 = v4;
  swift_bridgeObjectRetain_n();
  id v8 = v7;
  uint64_t v9 = sub_251F35080();
  os_log_type_t v10 = sub_251F35FD0();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    uint64_t v37 = v35;
    *(_DWORD *)uint64_t v11 = 136315394;
    id v12 = objc_msgSend(v8, sel_name);
    uint64_t v13 = sub_251F356F0();
    unint64_t v15 = v14;

    sub_251A00E84(v13, v15, &v37);
    sub_251F361D0();

    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC80);
    uint64_t v17 = MEMORY[0x2533AAA10](v5, v16);
    unint64_t v19 = v18;
    swift_bridgeObjectRelease();
    sub_251A00E84(v17, v19, &v37);
    sub_251F361D0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2519F3000, v9, v10, "Removing delegates for all devices in home: %s: %s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v35, -1, -1);
    MEMORY[0x2533AC760](v11, -1, -1);

    uint64_t v20 = *(void *)(v5 + 16);
    if (v20) {
      goto LABEL_11;
    }
  }
  else
  {

    swift_bridgeObjectRelease_n();
    uint64_t v20 = *(void *)(v5 + 16);
    if (v20) {
      goto LABEL_11;
    }
  }
  id v21 = v8;
  uint64_t v22 = sub_251F35080();
  os_log_type_t v23 = sub_251F35FA0();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    uint64_t v37 = v36;
    *(_DWORD *)uint64_t v24 = 136315394;
    sub_251A00E84(0xD00000000000001DLL, 0x8000000251F730F0, &v37);
    sub_251F361D0();
    *(_WORD *)(v24 + 12) = 2080;
    HMHome.matterAccessories.getter();
    uint64_t v26 = v25;
    uint64_t v27 = sub_251A1A568(0, (unint64_t *)&qword_26B21EAF8);
    uint64_t v28 = MEMORY[0x2533AAA10](v26, v27);
    unint64_t v30 = v29;
    swift_bridgeObjectRelease();
    sub_251A00E84(v28, v30, &v37);
    sub_251F361D0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2519F3000, v22, v23, "%s No eligible devices found: %s", (uint8_t *)v24, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v36, -1, -1);
    MEMORY[0x2533AC760](v24, -1, -1);

    uint64_t v20 = *(void *)(v5 + 16);
    if (!v20) {
      return swift_bridgeObjectRelease();
    }
  }
  else
  {

    uint64_t v20 = *(void *)(v5 + 16);
    if (!v20) {
      return swift_bridgeObjectRelease();
    }
  }
LABEL_11:
  swift_bridgeObjectRetain();
  uint64_t v31 = (uint64_t *)(v5 + 40);
  do
  {
    uint64_t v32 = *v31;
    uint64_t v33 = swift_unknownObjectRetain();
    sub_251ECF90C(v33, v32, 0);
    swift_unknownObjectRelease();
    v31 += 2;
    --v20;
  }
  while (v20);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_251ECED84(void *a1)
{
  uint64_t v41 = &type metadata for HomeAppFeatures;
  unint64_t v42 = sub_251A23FFC();
  v40[0] = 1;
  char v2 = sub_251F34F60();
  uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v40);
  if (v2)
  {
    uint64_t v41 = &type metadata for HomeKitFeatures;
    unint64_t v42 = sub_251A4DA94();
    v40[0] = 4;
    char v4 = sub_251F34F60();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v40);
    if (v4) {
      goto LABEL_7;
    }
    if (qword_269B9C4C0 != -1) {
      swift_once();
    }
    if ((byte_269BA38B2 & 1) != 0 || (uint64_t result = swift_beginAccess(), qword_26B21F258 == 1))
    {
LABEL_7:
      HMHome.matterAccessories.getter();
      unint64_t v6 = v5;
      id v7 = a1;
      uint64_t v8 = sub_251ED1094(v6);

      swift_bridgeObjectRelease();
      if (qword_26B21ECD0 != -1) {
        swift_once();
      }
      uint64_t v9 = sub_251F350A0();
      __swift_project_value_buffer(v9, (uint64_t)qword_26B21ECB8);
      id v10 = v7;
      swift_bridgeObjectRetain_n();
      id v11 = v10;
      id v12 = sub_251F35080();
      os_log_type_t v13 = sub_251F35FD0();
      if (os_log_type_enabled(v12, v13))
      {
        uint64_t v14 = swift_slowAlloc();
        uint64_t v37 = swift_slowAlloc();
        uint64_t v39 = v37;
        *(_DWORD *)uint64_t v14 = 136315394;
        id v15 = objc_msgSend(v11, sel_name);
        uint64_t v16 = sub_251F356F0();
        unint64_t v18 = v17;

        sub_251A00E84(v16, v18, &v39);
        sub_251F361D0();

        swift_bridgeObjectRelease();
        *(_WORD *)(v14 + 12) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC80);
        uint64_t v20 = MEMORY[0x2533AAA10](v8, v19);
        unint64_t v22 = v21;
        swift_bridgeObjectRelease();
        sub_251A00E84(v20, v22, &v39);
        sub_251F361D0();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_2519F3000, v12, v13, "Setting up delegates for all devices in home: %s: %s", (uint8_t *)v14, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x2533AC760](v37, -1, -1);
        MEMORY[0x2533AC760](v14, -1, -1);

        uint64_t v23 = *(void *)(v8 + 16);
        if (v23) {
          goto LABEL_17;
        }
      }
      else
      {

        swift_bridgeObjectRelease_n();
        uint64_t v23 = *(void *)(v8 + 16);
        if (v23) {
          goto LABEL_17;
        }
      }
      id v24 = v11;
      uint64_t v25 = sub_251F35080();
      os_log_type_t v26 = sub_251F35FA0();
      if (os_log_type_enabled(v25, v26))
      {
        uint64_t v27 = swift_slowAlloc();
        uint64_t v38 = swift_slowAlloc();
        uint64_t v39 = v38;
        *(_DWORD *)uint64_t v27 = 136315394;
        sub_251A00E84(0xD00000000000001CLL, 0x8000000251F73170, &v39);
        sub_251F361D0();
        *(_WORD *)(v27 + 12) = 2080;
        HMHome.matterAccessories.getter();
        uint64_t v29 = v28;
        uint64_t v30 = sub_251A1A568(0, (unint64_t *)&qword_26B21EAF8);
        uint64_t v31 = MEMORY[0x2533AAA10](v29, v30);
        unint64_t v33 = v32;
        swift_bridgeObjectRelease();
        sub_251A00E84(v31, v33, &v39);
        sub_251F361D0();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_2519F3000, v25, v26, "%s No eligible devices found: %s", (uint8_t *)v27, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x2533AC760](v38, -1, -1);
        MEMORY[0x2533AC760](v27, -1, -1);

        uint64_t v23 = *(void *)(v8 + 16);
        if (!v23) {
          return swift_bridgeObjectRelease();
        }
      }
      else
      {

        uint64_t v23 = *(void *)(v8 + 16);
        if (!v23) {
          return swift_bridgeObjectRelease();
        }
      }
LABEL_17:
      swift_bridgeObjectRetain();
      unint64_t v34 = (uint64_t *)(v8 + 40);
      do
      {
        uint64_t v35 = *v34;
        uint64_t v36 = swift_unknownObjectRetain();
        sub_251ECF90C(v36, v35, 1);
        swift_unknownObjectRelease();
        v34 += 2;
        --v23;
      }
      while (v23);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_251ECF2FC(void *a1)
{
  uint64_t v20 = &type metadata for HomeAppFeatures;
  unint64_t v21 = sub_251A23FFC();
  v19[0] = 1;
  char v2 = sub_251F34F60();
  uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
  if (v2)
  {
    uint64_t v20 = &type metadata for HomeKitFeatures;
    unint64_t v21 = sub_251A4DA94();
    v19[0] = 4;
    char v4 = sub_251F34F60();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
    if (v4) {
      goto LABEL_7;
    }
    if (qword_269B9C4C0 != -1) {
      swift_once();
    }
    if ((byte_269BA38B2 & 1) != 0 || (uint64_t result = swift_beginAccess(), qword_26B21F258 == 1))
    {
LABEL_7:
      id v5 = sub_251D90BA4(a1);
      uint64_t v7 = v6;
      if (qword_26B21ECD0 != -1) {
        swift_once();
      }
      uint64_t v8 = sub_251F350A0();
      __swift_project_value_buffer(v8, (uint64_t)qword_26B21ECB8);
      swift_unknownObjectRetain_n();
      id v9 = a1;
      id v10 = sub_251F35080();
      os_log_type_t v11 = sub_251F35FD0();
      if (os_log_type_enabled(v10, v11))
      {
        uint64_t v12 = swift_slowAlloc();
        uint64_t v16 = (void *)swift_slowAlloc();
        uint64_t v17 = swift_slowAlloc();
        uint64_t v18 = v17;
        *(_DWORD *)uint64_t v12 = 136315394;
        swift_unknownObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC80);
        uint64_t v13 = sub_251F35790();
        sub_251A00E84(v13, v14, &v18);
        sub_251F361D0();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v12 + 12) = 2112;
        id v15 = v9;
        sub_251F361D0();
        *uint64_t v16 = v9;

        _os_log_impl(&dword_2519F3000, v10, v11, "Setting up delegate for device (%s) accessory: %@", (uint8_t *)v12, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
        swift_arrayDestroy();
        MEMORY[0x2533AC760](v16, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x2533AC760](v17, -1, -1);
        MEMORY[0x2533AC760](v12, -1, -1);
      }
      else
      {

        swift_unknownObjectRelease_n();
      }
      sub_251ECF90C((uint64_t)v5, v7, 1);
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_251ECF66C(void *a1)
{
  id v2 = sub_251D90BA4(a1);
  uint64_t v4 = v3;
  if (qword_26B21ECD0 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_251F350A0();
  __swift_project_value_buffer(v5, (uint64_t)qword_26B21ECB8);
  swift_unknownObjectRetain_n();
  id v6 = a1;
  uint64_t v7 = sub_251F35080();
  os_log_type_t v8 = sub_251F35FD0();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    unint64_t v14 = (void *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    uint64_t v16 = v15;
    *(_DWORD *)uint64_t v9 = 136315394;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC80);
    uint64_t v10 = sub_251F35790();
    sub_251A00E84(v10, v11, &v16);
    sub_251F361D0();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2112;
    id v12 = v6;
    sub_251F361D0();
    *unint64_t v14 = v6;

    _os_log_impl(&dword_2519F3000, v7, v8, "Removing delegate for device (%s) accessory: %@", (uint8_t *)v9, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v14, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v15, -1, -1);
    MEMORY[0x2533AC760](v9, -1, -1);
  }
  else
  {

    swift_unknownObjectRelease_n();
  }
  sub_251ECF90C((uint64_t)v2, v4, 0);
  return swift_unknownObjectRelease();
}

void sub_251ECF90C(uint64_t a1, uint64_t a2, char a3)
{
  if (a1 && (self, (uint64_t v5 = (void *)swift_dynamicCastObjCClass()) != 0))
  {
    id v6 = v5;
    if (a3)
    {
      uint64_t v7 = qword_269B9C530;
      swift_unknownObjectRetain();
      if (v7 != -1) {
        swift_once();
      }
      objc_msgSend(v6, sel_addDelegate_queue_, v3, qword_269BF3278);
      swift_unknownObjectRelease();
    }
    else
    {
      objc_msgSend(v5, sel_removeDelegate_, v3);
    }
  }
  else
  {
    if (qword_26B21ECD0 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_251F350A0();
    __swift_project_value_buffer(v8, (uint64_t)qword_26B21ECB8);
    swift_unknownObjectRetain_n();
    uint64_t v9 = sub_251F35080();
    os_log_type_t v10 = sub_251F35FB0();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      uint64_t v15 = v12;
      *(_DWORD *)uint64_t v11 = 136315650;
      sub_251A00E84(0xD00000000000002DLL, 0x8000000251F73110, &v15);
      sub_251F361D0();
      *(_WORD *)(v11 + 12) = 2080;
      sub_251A00E84(0xD00000000000002BLL, 0x8000000251F73140, &v15);
      sub_251F361D0();
      *(_WORD *)(v11 + 22) = 2080;
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC80);
      uint64_t v13 = sub_251F35790();
      sub_251A00E84(v13, v14, &v15);
      sub_251F361D0();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2519F3000, v9, v10, "%s:%s device was expected to be of type MTRDevice %s", (uint8_t *)v11, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v12, -1, -1);
      MEMORY[0x2533AC760](v11, -1, -1);
    }
    else
    {

      swift_unknownObjectRelease_n();
    }
  }
}

uint64_t sub_251ECFCC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 48) = a4;
  *(void *)(v5 + 56) = a5;
  return MEMORY[0x270FA2498](sub_251ECFCE8, 0, 0);
}

uint64_t sub_251ECFCE8()
{
  *(void *)(v0 + 64) = sub_251F35C80();
  *(void *)(v0 + 72) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251ECFD80, v2, v1);
}

uint64_t sub_251ECFD80()
{
  swift_release();
  if (qword_26B21E388 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251ECFE18, 0, 0);
}

uint64_t sub_251ECFE18()
{
  *(void *)(v0 + 80) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251ECFEA4, v2, v1);
}

uint64_t sub_251ECFEA4()
{
  swift_release();
  *(void *)(v0 + 88) = qword_26B21E178;
  return MEMORY[0x270FA2498](sub_251ECFF18, 0, 0);
}

uint64_t sub_251ECFF18()
{
  uint64_t v1 = *(void **)(v0 + 48);
  *(void *)(v0 + 96) = objc_msgSend(v1, sel_path);
  if (objc_msgSend(v1, sel_value))
  {
    sub_251F36240();
    swift_unknownObjectRelease();
  }
  else
  {
    *(_OWORD *)(v0 + 16) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
  }
  uint64_t v2 = *(void *)(v0 + 88);
  *(void *)(v0 + 104) = objc_msgSend(*(id *)(v0 + 48), sel_error);
  return MEMORY[0x270FA2498](sub_251ECFFF8, v2, 0);
}

uint64_t sub_251ECFFF8()
{
  uint64_t v2 = *(void **)(v0 + 96);
  uint64_t v1 = *(void **)(v0 + 104);
  MatterSnapshotModerator.receivedAttributeReport(for:device:value:error:)(v2, *(id *)(v0 + 56), v0 + 16, v1);

  sub_251A1B064(v0 + 16, &qword_26B21E190);
  return MEMORY[0x270FA2498](sub_251ED0098, 0, 0);
}

uint64_t sub_251ED0098()
{
  unint64_t v22 = v0;
  if (qword_26B21ECD0 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[6];
  uint64_t v2 = (void *)v0[7];
  uint64_t v3 = sub_251F350A0();
  __swift_project_value_buffer(v3, (uint64_t)qword_26B21ECB8);
  id v4 = v1;
  id v5 = v2;
  id v6 = v4;
  id v7 = v5;
  uint64_t v8 = sub_251F35080();
  os_log_type_t v9 = sub_251F35FD0();
  BOOL v10 = os_log_type_enabled(v8, v9);
  uint64_t v11 = (void *)v0[6];
  uint64_t v12 = (void *)v0[7];
  if (v10)
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v19 = (void *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    uint64_t v21 = v20;
    *(_DWORD *)uint64_t v13 = 136315394;
    uint64_t v14 = sub_251ED030C();
    v0[2] = sub_251A00E84(v14, v15, &v21);
    sub_251F361D0();
    swift_bridgeObjectRelease();

    *(_WORD *)(v13 + 12) = 2112;
    id v16 = objc_msgSend(v12, sel_hdm_nodeID);
    v0[2] = v16;
    sub_251F361D0();
    *uint64_t v19 = v16;

    _os_log_impl(&dword_2519F3000, v8, v9, "Updating for MTRDevice delegate receivedAttributeReport (%s) for device: %@", (uint8_t *)v13, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v19, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v20, -1, -1);
    MEMORY[0x2533AC760](v13, -1, -1);
  }
  else
  {
  }
  uint64_t v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t sub_251ED030C()
{
  uint64_t v1 = v0;
  id v2 = objc_msgSend(v0, sel_path);
  id v3 = objc_msgSend(v2, sel_endpoint);

  unsigned int v4 = objc_msgSend(v3, sel_unsignedIntValue);
  id v5 = objc_msgSend(v1, sel_path);
  id v6 = objc_msgSend(v5, sel_cluster);

  LODWORD(v5) = objc_msgSend(v6, sel_unsignedIntValue);
  ClusterKind.init(rawValue:)((Swift::UInt32)v5);
  id v7 = objc_msgSend(v1, sel_path);
  id v8 = objc_msgSend(v7, sel_attribute);

  int v9 = objc_msgSend(v8, sel_unsignedIntValue);
  if (LOBYTE(v20[0]) == 28)
  {
    *(void *)&v20[0] = 0x2D6E776F6E6B75;
    *((void *)&v20[0] + 1) = 0xE700000000000000;
    id v10 = objc_msgSend(v1, sel_path);
    id v11 = objc_msgSend(v10, sel_cluster);

    LODWORD(v10) = objc_msgSend(v11, sel_unsignedIntValue);
    LODWORD(v19) = v10;
    sub_251F36AB0();
    sub_251F35800();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_251F35770();
    sub_251BE6060(v9, (char *)v20);
    if (v12) {
      goto LABEL_5;
    }
  }
  *(void *)&v20[0] = 0x2D6E776F6E6B6E75;
  *((void *)&v20[0] + 1) = 0xE800000000000000;
  id v13 = objc_msgSend(v1, sel_path);
  id v14 = objc_msgSend(v13, sel_attribute);

  LODWORD(v13) = objc_msgSend(v14, sel_unsignedIntValue);
  LODWORD(v19) = v13;
  sub_251F36AB0();
  sub_251F35800();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_5:
  if (objc_msgSend(v1, sel_value))
  {
    sub_251F36240();
    swift_unknownObjectRelease();
    sub_251A0D578(&v19, v20);
    *(void *)&long long v19 = 0;
    *((void *)&v19 + 1) = 0xE000000000000000;
    sub_251F36400();
    sub_251F35800();
    sub_251F36AB0();
    sub_251F35800();
    swift_bridgeObjectRelease();
    sub_251F35800();
    sub_251F35800();
    swift_bridgeObjectRelease();
    sub_251F35800();
    sub_251F35800();
    swift_bridgeObjectRelease();
    sub_251F35800();
    sub_251F36640();
    uint64_t v15 = v19;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v20);
  }
  else
  {
    id v16 = objc_msgSend(v1, sel_error);
    if (v16)
    {
      uint64_t v17 = v16;
      *(void *)&v20[0] = 0;
      *((void *)&v20[0] + 1) = 0xE000000000000000;
      sub_251F36400();
      sub_251F35800();
      sub_251F36AB0();
      sub_251F35800();
      swift_bridgeObjectRelease();
      sub_251F35800();
      sub_251F35800();
      swift_bridgeObjectRelease();
      sub_251F35800();
      sub_251F35800();
      swift_bridgeObjectRelease();
      sub_251F35800();
      *(void *)&long long v19 = v17;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D1B0);
      sub_251F36640();
    }
    else
    {
      *(void *)&v20[0] = 0;
      *((void *)&v20[0] + 1) = 0xE000000000000000;
      sub_251F36400();
      swift_bridgeObjectRelease();
      *(void *)&v20[0] = 0x746E696F70646E45;
      *((void *)&v20[0] + 1) = 0xE90000000000002DLL;
      LODWORD(v19) = v4;
      sub_251F36AB0();
      sub_251F35800();
      swift_bridgeObjectRelease();
      sub_251F35800();
      sub_251F35800();
      swift_bridgeObjectRelease();
      sub_251F35800();
      sub_251F35800();
      swift_bridgeObjectRelease();
      sub_251F35800();
    }
    return *(void *)&v20[0];
  }
  return v15;
}

uint64_t sub_251ED08FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[11] = a5;
  v6[12] = a6;
  v6[10] = a4;
  return MEMORY[0x270FA2498](sub_251ED0920, 0, 0);
}

uint64_t sub_251ED0920()
{
  *(void *)(v0 + 104) = sub_251F35C80();
  *(void *)(v0 + 112) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251ED09B8, v2, v1);
}