uint64_t sub_251B0A9B8(void (*a1)(uint64_t *__return_ptr, void *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  unint64_t i;
  unint64_t v13;
  int64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  uint64_t v23;
  void v24[5];
  uint64_t v25;

  v25 = MEMORY[0x263F8EE78];
  v20 = a3 + 56;
  v5 = 1 << *(unsigned char *)(a3 + 32);
  v6 = -1;
  if (v5 < 64) {
    v6 = ~(-1 << v5);
  }
  v7 = v6 & *(void *)(a3 + 56);
  v21 = (unint64_t)(v5 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  if (!v7) {
    goto LABEL_5;
  }
LABEL_4:
  v10 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (i = v10 | (v9 << 6); ; i = __clz(__rbit64(v13)) + (v9 << 6))
  {
    v15 = (void *)(*(void *)(a3 + 48) + 40 * i);
    v16 = v15[1];
    v17 = v15[2];
    v18 = v15[3];
    v19 = v15[4];
    v24[0] = *v15;
    v24[1] = v16;
    v24[2] = v17;
    v24[3] = v18;
    v24[4] = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a1(&v23, v24);
    if (v3)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = sub_251ED6B94(v23);
    if (v7) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v9++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v9 >= v21) {
      goto LABEL_26;
    }
    v13 = *(void *)(v20 + 8 * v9);
    if (!v13) {
      break;
    }
LABEL_17:
    v7 = (v13 - 1) & v13;
  }
  v14 = v9 + 1;
  if (v9 + 1 >= v21) {
    goto LABEL_26;
  }
  v13 = *(void *)(v20 + 8 * v14);
  if (v13) {
    goto LABEL_16;
  }
  v14 = v9 + 2;
  if (v9 + 2 >= v21) {
    goto LABEL_26;
  }
  v13 = *(void *)(v20 + 8 * v14);
  if (v13) {
    goto LABEL_16;
  }
  v14 = v9 + 3;
  if (v9 + 3 >= v21) {
    goto LABEL_26;
  }
  v13 = *(void *)(v20 + 8 * v14);
  if (v13) {
    goto LABEL_16;
  }
  v14 = v9 + 4;
  if (v9 + 4 >= v21)
  {
LABEL_26:
    swift_release();
    return v25;
  }
  v13 = *(void *)(v20 + 8 * v14);
  if (v13)
  {
LABEL_16:
    v9 = v14;
    goto LABEL_17;
  }
  while (1)
  {
    v9 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v9 >= v21) {
      goto LABEL_26;
    }
    v13 = *(void *)(v20 + 8 * v9);
    ++v14;
    if (v13) {
      goto LABEL_17;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_251B0AC28(void (*a1)(uint64_t *__return_ptr, char *), uint64_t a2, uint64_t a3)
{
  uint64_t v26 = a2;
  uint64_t v6 = type metadata accessor for StaticMediaSystem();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6 - 8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  v12 = (char *)&v24 - v11;
  uint64_t v28 = MEMORY[0x263F8EE78];
  uint64_t v13 = *(void *)(a3 + 64);
  uint64_t v24 = a3 + 64;
  uint64_t v14 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v13;
  int64_t v25 = (unint64_t)(v14 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v18 = 0;
  if (!v16) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v19 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  for (unint64_t i = v19 | (v18 << 6); ; unint64_t i = __clz(__rbit64(v22)) + (v18 << 6))
  {
    sub_251B25B74(*(void *)(a3 + 56) + *(void *)(v7 + 72) * i, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
    sub_251B25C90((uint64_t)v12, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
    a1(&v27, v10);
    sub_251B25BDC((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
    if (v3)
    {
      swift_release();
      return swift_bridgeObjectRelease();
    }
    uint64_t result = sub_251ED88D0(v27);
    if (v16) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v18++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v25) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v24 + 8 * v18);
    if (!v22) {
      break;
    }
LABEL_17:
    unint64_t v16 = (v22 - 1) & v22;
  }
  int64_t v23 = v18 + 1;
  if (v18 + 1 >= v25) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v24 + 8 * v23);
  if (v22) {
    goto LABEL_16;
  }
  int64_t v23 = v18 + 2;
  if (v18 + 2 >= v25) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v24 + 8 * v23);
  if (v22) {
    goto LABEL_16;
  }
  int64_t v23 = v18 + 3;
  if (v18 + 3 >= v25) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v24 + 8 * v23);
  if (v22) {
    goto LABEL_16;
  }
  int64_t v23 = v18 + 4;
  if (v18 + 4 >= v25)
  {
LABEL_26:
    swift_release();
    return v28;
  }
  unint64_t v22 = *(void *)(v24 + 8 * v23);
  if (v22)
  {
LABEL_16:
    int64_t v18 = v23;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v18 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v18 >= v25) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v24 + 8 * v18);
    ++v23;
    if (v22) {
      goto LABEL_17;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t StateSnapshot.staticAccessories.getter()
{
  type metadata accessor for StateSnapshot(0);
  uint64_t v0 = swift_bridgeObjectRetain();
  return sub_251EDCBC8(v0);
}

uint64_t StateSnapshot.CharacteristicUpdateType.ValueType.init(value:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_251A1B128(a1, (uint64_t)v10, &qword_26B21E190);
  if (!v11)
  {
    sub_251A1B064((uint64_t)v10, &qword_26B21E190);
LABEL_5:
    sub_251A1B128(a1, (uint64_t)v10, &qword_26B21E190);
    if (v11)
    {
      if (swift_dynamicCast())
      {
        uint64_t v4 = v8;
        uint64_t result = sub_251A1B064(a1, &qword_26B21E190);
        uint64_t v6 = 0;
        char v7 = 1;
        goto LABEL_22;
      }
    }
    else
    {
      sub_251A1B064((uint64_t)v10, &qword_26B21E190);
    }
    sub_251A1B128(a1, (uint64_t)v10, &qword_26B21E190);
    if (v11)
    {
      if (swift_dynamicCast())
      {
        uint64_t v4 = v8;
        uint64_t result = sub_251A1B064(a1, &qword_26B21E190);
        uint64_t v6 = 0;
        char v7 = 2;
        goto LABEL_22;
      }
    }
    else
    {
      sub_251A1B064((uint64_t)v10, &qword_26B21E190);
    }
    sub_251A1B128(a1, (uint64_t)v10, &qword_26B21E190);
    if (v11)
    {
      if (swift_dynamicCast())
      {
        uint64_t v4 = v8;
        uint64_t v6 = v9;
        uint64_t result = sub_251A1B064(a1, &qword_26B21E190);
        char v7 = 3;
        goto LABEL_22;
      }
    }
    else
    {
      sub_251A1B064((uint64_t)v10, &qword_26B21E190);
    }
    sub_251A4ECF0(a1, (uint64_t)v10, &qword_26B21E190);
    if (v11)
    {
      uint64_t result = swift_dynamicCast();
      if (result)
      {
        uint64_t v4 = v8;
        uint64_t v6 = v9;
        char v7 = 4;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t result = sub_251A1B064((uint64_t)v10, &qword_26B21E190);
    }
    uint64_t v4 = 0;
    uint64_t v6 = 0;
    char v7 = 5;
    goto LABEL_22;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_5;
  }
  uint64_t v4 = v8;
  uint64_t result = sub_251A1B064(a1, &qword_26B21E190);
  uint64_t v6 = 0;
  char v7 = 0;
LABEL_22:
  *(void *)a2 = v4;
  *(void *)(a2 + 8) = v6;
  *(unsigned char *)(a2 + 16) = v7;
  return result;
}

uint64_t sub_251B0B198(uint64_t a1, uint64_t a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = a2;
  sub_251B2203C(a1, (uint64_t)sub_251B23E84, 0, isUniquelyReferenced_nonNull_native, &v8);
  uint64_t v6 = v8;
  swift_bridgeObjectRelease();
  if (v2) {
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t StateSnapshot.coverages.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t StateSnapshot.staticHome.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for StateSnapshot(0);
  return sub_251B25B74(v1 + *(int *)(v3 + 20), a1, (uint64_t (*)(void))type metadata accessor for StaticHome);
}

uint64_t StateSnapshot.staticHomesInOrder.getter()
{
  type metadata accessor for StateSnapshot(0);
  return swift_bridgeObjectRetain();
}

uint64_t StateSnapshot.staticZonesDictionary.getter()
{
  type metadata accessor for StateSnapshot(0);
  return swift_bridgeObjectRetain();
}

uint64_t StateSnapshot.staticAccessoriesDictionary.getter()
{
  type metadata accessor for StateSnapshot(0);
  return swift_bridgeObjectRetain();
}

uint64_t StateSnapshot.staticActionSetsDictionary.getter()
{
  type metadata accessor for StateSnapshot(0);
  return swift_bridgeObjectRetain();
}

uint64_t StateSnapshot.staticCameraProfilesDictionary.getter()
{
  type metadata accessor for StateSnapshot(0);
  return swift_bridgeObjectRetain();
}

uint64_t StateSnapshot.staticMediaSystemsDictionary.getter()
{
  type metadata accessor for StateSnapshot(0);
  return swift_bridgeObjectRetain();
}

uint64_t StateSnapshot.staticMediaProfilesDictionary.getter()
{
  type metadata accessor for StateSnapshot(0);
  return swift_bridgeObjectRetain();
}

uint64_t StateSnapshot.staticRoomsDictionary.getter()
{
  type metadata accessor for StateSnapshot(0);
  return swift_bridgeObjectRetain();
}

uint64_t StateSnapshot.staticServiceGroupsDictionary.getter()
{
  type metadata accessor for StateSnapshot(0);
  return swift_bridgeObjectRetain();
}

uint64_t StateSnapshot.staticServicesDictionary.getter()
{
  type metadata accessor for StateSnapshot(0);
  return swift_bridgeObjectRetain();
}

uint64_t StateSnapshot.staticUsersDictionary.getter()
{
  type metadata accessor for StateSnapshot(0);
  return swift_bridgeObjectRetain();
}

uint64_t StateSnapshot.staticUserActionPredictions.getter()
{
  type metadata accessor for StateSnapshot(0);
  return swift_bridgeObjectRetain();
}

uint64_t StateSnapshot.staticHH2UpdatesDictionary.getter()
{
  type metadata accessor for StateSnapshot(0);
  return swift_bridgeObjectRetain();
}

uint64_t StateSnapshot.staticResidentDictionary.getter()
{
  type metadata accessor for StateSnapshot(0);
  return swift_bridgeObjectRetain();
}

uint64_t StateSnapshot.hash(into:)(long long *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for StaticHome();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4 - 8);
  char v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  swift_bridgeObjectRetain();
  sub_251A565C0((uint64_t)a1, v8);
  swift_bridgeObjectRelease();
  uint64_t v9 = (int *)type metadata accessor for StateSnapshot(0);
  StaticHome.hash(into:)(a1);
  uint64_t v10 = *(uint64_t *)((char *)v2 + v9[6]);
  sub_251F36CB0();
  uint64_t v11 = *(void *)(v10 + 16);
  if (v11)
  {
    uint64_t v12 = v10 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v13 = *(void *)(v5 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_251B25B74(v12, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticHome);
      StaticHome.hash(into:)(a1);
      sub_251B25BDC((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticHome);
      v12 += v13;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
  }
  uint64_t v14 = *(uint64_t *)((char *)v2 + v9[7]);
  swift_bridgeObjectRetain();
  sub_251A4B234(a1, v14);
  swift_bridgeObjectRelease();
  uint64_t v15 = *(uint64_t *)((char *)v2 + v9[8]);
  swift_bridgeObjectRetain();
  sub_251A45A18((uint64_t)a1, v15);
  swift_bridgeObjectRelease();
  uint64_t v16 = *(uint64_t *)((char *)v2 + v9[9]);
  swift_bridgeObjectRetain();
  sub_251A4ACC8((uint64_t)a1, v16);
  swift_bridgeObjectRelease();
  uint64_t v17 = *(uint64_t *)((char *)v2 + v9[10]);
  swift_bridgeObjectRetain();
  sub_251A4A75C((uint64_t)a1, v17);
  swift_bridgeObjectRelease();
  uint64_t v18 = *(uint64_t *)((char *)v2 + v9[11]);
  swift_bridgeObjectRetain();
  sub_251A4A1F0((uint64_t)a1, v18);
  swift_bridgeObjectRelease();
  uint64_t v19 = *(uint64_t *)((char *)v2 + v9[12]);
  swift_bridgeObjectRetain();
  sub_251A49C84((uint64_t)a1, v19);
  swift_bridgeObjectRelease();
  uint64_t v20 = *(uint64_t *)((char *)v2 + v9[13]);
  swift_bridgeObjectRetain();
  sub_251A49718((uint64_t)a1, v20);
  swift_bridgeObjectRelease();
  uint64_t v21 = *(uint64_t *)((char *)v2 + v9[14]);
  swift_bridgeObjectRetain();
  sub_251A44E40((uint64_t)a1, v21);
  swift_bridgeObjectRelease();
  uint64_t v22 = *(uint64_t *)((char *)v2 + v9[15]);
  swift_bridgeObjectRetain();
  sub_251A454AC((uint64_t)a1, v22);
  swift_bridgeObjectRelease();
  uint64_t v23 = *(uint64_t *)((char *)v2 + v9[16]);
  swift_bridgeObjectRetain();
  sub_251A4914C(a1, v23);
  swift_bridgeObjectRelease();
  uint64_t v24 = *(uint64_t *)((char *)v2 + v9[17]);
  swift_bridgeObjectRetain();
  sub_251A41F48((uint64_t)a1, v24);
  swift_bridgeObjectRelease();
  uint64_t v25 = *(uint64_t *)((char *)v2 + v9[18]);
  swift_bridgeObjectRetain();
  sub_251A48B10(a1, v25);
  swift_bridgeObjectRelease();
  uint64_t v26 = *(uint64_t *)((char *)v2 + v9[19]);
  swift_bridgeObjectRetain();
  sub_251A483E4((uint64_t)a1, v26);
  return swift_bridgeObjectRelease();
}

unint64_t sub_251B0B8AC(char a1)
{
  unint64_t result = 0x6567617265766F63;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6F48636974617473;
      break;
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
    case 9:
    case 12:
      unint64_t result = 0xD000000000000015;
      break;
    case 4:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 5:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 6:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 7:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 8:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 10:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 11:
      unint64_t result = 0xD000000000000018;
      break;
    case 13:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 14:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 15:
      unint64_t result = 0xD000000000000018;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_251B0BA8C()
{
  return sub_251B0B8AC(*v0);
}

uint64_t sub_251B0BA94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251B2E75C(a1, a2);
  *a3 = result;
  return result;
}

void sub_251B0BABC(unsigned char *a1@<X8>)
{
  *a1 = 16;
}

uint64_t sub_251B0BAC8(uint64_t a1)
{
  unint64_t v2 = sub_251B246F8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251B0BB04(uint64_t a1)
{
  unint64_t v2 = sub_251B246F8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StateSnapshot.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DFC0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251B246F8();
  sub_251F36DA0();
  uint64_t v12 = *v3;
  HIBYTE(v11) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DFD0);
  sub_251B2514C(&qword_269B9DFD8, (void (*)(void))sub_251B2474C);
  sub_251F36A20();
  if (!v2)
  {
    uint64_t v9 = (int *)type metadata accessor for StateSnapshot(0);
    LOBYTE(v12) = 1;
    type metadata accessor for StaticHome();
    sub_251B2485C(&qword_269B9DFE8, (void (*)(uint64_t))type metadata accessor for StaticHome);
    sub_251F36A20();
    uint64_t v12 = *(uint64_t *)((char *)v3 + v9[6]);
    HIBYTE(v11) = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DFF0);
    sub_251B25210(&qword_269B9DFF8, &qword_269B9DFE8);
    sub_251F36A20();
    uint64_t v12 = *(uint64_t *)((char *)v3 + v9[7]);
    HIBYTE(v11) = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E000);
    sub_251B247A0();
    sub_251F36A20();
    uint64_t v12 = *(uint64_t *)((char *)v3 + v9[8]);
    HIBYTE(v11) = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E018);
    sub_251B248A4();
    sub_251F36A20();
    uint64_t v12 = *(uint64_t *)((char *)v3 + v9[9]);
    HIBYTE(v11) = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E030);
    sub_251B24960();
    sub_251F36A20();
    uint64_t v12 = *(uint64_t *)((char *)v3 + v9[10]);
    HIBYTE(v11) = 6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E048);
    sub_251B24A1C();
    sub_251F36A20();
    uint64_t v12 = *(uint64_t *)((char *)v3 + v9[11]);
    HIBYTE(v11) = 7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E060);
    sub_251B24AD8();
    sub_251F36A20();
    uint64_t v12 = *(uint64_t *)((char *)v3 + v9[12]);
    HIBYTE(v11) = 8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E078);
    sub_251B24B94();
    sub_251F36A20();
    uint64_t v12 = *(uint64_t *)((char *)v3 + v9[13]);
    HIBYTE(v11) = 9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E088);
    sub_251B24C50();
    sub_251F36A20();
    uint64_t v12 = *(uint64_t *)((char *)v3 + v9[14]);
    HIBYTE(v11) = 10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E0A0);
    sub_251B24D0C();
    sub_251F36A20();
    uint64_t v12 = *(uint64_t *)((char *)v3 + v9[15]);
    HIBYTE(v11) = 11;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E0B8);
    sub_251B24DC8();
    sub_251F36A20();
    uint64_t v12 = *(uint64_t *)((char *)v3 + v9[16]);
    HIBYTE(v11) = 12;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E0D0);
    sub_251B24E84();
    sub_251F36A20();
    uint64_t v12 = *(uint64_t *)((char *)v3 + v9[17]);
    HIBYTE(v11) = 13;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E0E8);
    sub_251B24F40(&qword_269B9E0F0, &qword_269B9E0F8);
    sub_251F36A20();
    uint64_t v12 = *(uint64_t *)((char *)v3 + v9[18]);
    HIBYTE(v11) = 14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E100);
    sub_251B24FD4();
    sub_251F36A20();
    uint64_t v12 = *(uint64_t *)((char *)v3 + v9[19]);
    HIBYTE(v11) = 15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E118);
    sub_251B25090();
    sub_251F36A20();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t StateSnapshot.hashValue.getter()
{
  return sub_251B1561C((void (*)(unsigned char *))StateSnapshot.hash(into:));
}

uint64_t StateSnapshot.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for StaticHome();
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E130);
  uint64_t v8 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = (int *)type metadata accessor for StateSnapshot(0);
  MEMORY[0x270FA5388](v21);
  uint64_t v19 = a1;
  uint64_t v20 = (uint64_t *)((char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251B246F8();
  uint64_t v18 = v10;
  sub_251F36D90();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
  }
  uint64_t v12 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DFD0);
  char v22 = 0;
  sub_251B2514C(&qword_269B9E138, (void (*)(void))sub_251B251BC);
  sub_251F36880();
  uint64_t v13 = v20;
  *uint64_t v20 = v23;
  LOBYTE(v23) = 1;
  sub_251B2485C(&qword_269B9E148, (void (*)(uint64_t))type metadata accessor for StaticHome);
  sub_251F36880();
  uint64_t v14 = v21;
  sub_251B25C90((uint64_t)v7, (uint64_t)v13 + v21[5], (uint64_t (*)(void))type metadata accessor for StaticHome);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DFF0);
  char v22 = 2;
  sub_251B25210(&qword_269B9E150, &qword_269B9E148);
  sub_251F36880();
  *(void *)((char *)v13 + v14[6]) = v23;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E000);
  char v22 = 3;
  sub_251B252A4();
  sub_251F36880();
  *(void *)((char *)v13 + v14[7]) = v23;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E018);
  char v22 = 4;
  sub_251B25360();
  sub_251F36880();
  *(void *)((char *)v13 + v14[8]) = v23;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E030);
  char v22 = 5;
  sub_251B2541C();
  sub_251F36880();
  *(void *)((char *)v13 + v14[9]) = v23;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E048);
  char v22 = 6;
  sub_251B254D8();
  sub_251F36880();
  *(void *)((char *)v13 + v14[10]) = v23;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E060);
  char v22 = 7;
  sub_251B25594();
  sub_251F36880();
  *(void *)((char *)v13 + v14[11]) = v23;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E078);
  char v22 = 8;
  sub_251B25650();
  sub_251F36880();
  *(void *)((char *)v13 + v14[12]) = v23;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E088);
  char v22 = 9;
  sub_251B2570C();
  sub_251F36880();
  *(void *)((char *)v20 + v21[13]) = v23;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E0A0);
  char v22 = 10;
  sub_251B257C8();
  sub_251F36880();
  *(void *)((char *)v20 + v21[14]) = v23;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E0B8);
  char v22 = 11;
  sub_251B25884();
  sub_251F36880();
  *(void *)((char *)v20 + v21[15]) = v23;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E0D0);
  char v22 = 12;
  sub_251B25940();
  sub_251F36880();
  *(void *)((char *)v20 + v21[16]) = v23;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E0E8);
  char v22 = 13;
  sub_251B24F40(&qword_269B9E1F0, &qword_269B9E1F8);
  sub_251F36880();
  *(void *)((char *)v20 + v21[17]) = v23;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E100);
  char v22 = 14;
  sub_251B259FC();
  sub_251F36880();
  *(void *)((char *)v20 + v21[18]) = v23;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E118);
  char v22 = 15;
  sub_251B25AB8();
  sub_251F36880();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v18, v17);
  uint64_t v15 = (uint64_t)v20;
  *(void *)((char *)v20 + v21[19]) = v23;
  sub_251B25B74(v15, v12, type metadata accessor for StateSnapshot);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
  return sub_251B25BDC(v15, type metadata accessor for StateSnapshot);
}

uint64_t sub_251B0CE80(uint64_t a1, uint64_t a2)
{
  return sub_251B15684(a1, a2, (void (*)(unsigned char *))StateSnapshot.hash(into:));
}

uint64_t sub_251B0CE9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_251B156E8(a1, a2, a3, (void (*)(unsigned char *))StateSnapshot.hash(into:));
}

uint64_t sub_251B0CEB4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return StateSnapshot.init(from:)(a1, a2);
}

uint64_t sub_251B0CECC(void *a1)
{
  return StateSnapshot.encode(to:)(a1);
}

uint64_t static UTType.frozenHomeType.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E220);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_251F34FA0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  return sub_251F34F80();
}

uint64_t _s13HomeDataModel13StateSnapshotV20readableContentTypesSay22UniformTypeIdentifiers6UTTypeVGvgZ_0()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E220);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E228);
  uint64_t v3 = sub_251F34FA0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_251F38650;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
  sub_251F34F80();
  return v5;
}

uint64_t StateSnapshot.init(configuration:)(uint64_t a1)
{
  uint64_t v2 = (void *)sub_251F35260();
  id v3 = objc_msgSend(v2, sel_regularFileContents);

  if (v3)
  {
    uint64_t v4 = sub_251F34C20();
    unint64_t v6 = v5;

    sub_251F34540();
    swift_allocObject();
    sub_251F34530();
    type metadata accessor for StateSnapshot(0);
    sub_251B2485C(&qword_269B9E238, (void (*)(uint64_t))type metadata accessor for StateSnapshot);
    sub_251F34520();
    uint64_t v7 = sub_251F35270();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(a1, v7);
    swift_release();
    return sub_251A1AD94(v4, v6);
  }
  else
  {
    sub_251B25C3C();
    swift_allocError();
    swift_willThrow();
    uint64_t v9 = sub_251F35270();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(a1, v9);
  }
}

uint64_t StateSnapshot.fileWrapper(configuration:)()
{
  sub_251F345B0();
  swift_allocObject();
  sub_251F345A0();
  type metadata accessor for StateSnapshot(0);
  sub_251B2485C(&qword_269B9E240, (void (*)(uint64_t))type metadata accessor for StateSnapshot);
  uint64_t v1 = sub_251F34590();
  unint64_t v3 = v2;
  uint64_t result = swift_release();
  if (!v0)
  {
    id v5 = objc_allocWithZone(MEMORY[0x263F08868]);
    unint64_t v6 = (void *)sub_251F34BF0();
    id v7 = objc_msgSend(v5, sel_initRegularFileWithContents_, v6);
    sub_251A1AD94(v1, v3);

    return (uint64_t)v7;
  }
  return result;
}

uint64_t static StateSnapshot.StateSnapshotFileErrors.== infix(_:_:)()
{
  return 1;
}

uint64_t StateSnapshot.StateSnapshotFileErrors.hash(into:)()
{
  return sub_251F36CB0();
}

uint64_t StateSnapshot.StateSnapshotFileErrors.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t sub_251B0D454(uint64_t a1)
{
  return StateSnapshot.init(configuration:)(a1);
}

uint64_t sub_251B0D46C()
{
  sub_251F345B0();
  swift_allocObject();
  sub_251F345A0();
  sub_251B2485C(&qword_269B9E240, (void (*)(uint64_t))type metadata accessor for StateSnapshot);
  uint64_t v1 = sub_251F34590();
  unint64_t v3 = v2;
  uint64_t result = swift_release();
  if (!v0)
  {
    id v5 = objc_allocWithZone(MEMORY[0x263F08868]);
    unint64_t v6 = (void *)sub_251F34BF0();
    id v7 = objc_msgSend(v5, sel_initRegularFileWithContents_, v6);
    sub_251A1AD94(v1, v3);

    return (uint64_t)v7;
  }
  return result;
}

uint64_t StateSnapshot.staticZones.getter()
{
  type metadata accessor for StateSnapshot(0);
  uint64_t v0 = swift_bridgeObjectRetain();
  return sub_251EDD7D0(v0);
}

uint64_t StateSnapshot.staticActionSets.getter()
{
  type metadata accessor for StateSnapshot(0);
  uint64_t v0 = swift_bridgeObjectRetain();
  return sub_251EDDAA8(v0);
}

uint64_t StateSnapshot.staticCameraProfiles.getter()
{
  type metadata accessor for StateSnapshot(0);
  uint64_t v0 = swift_bridgeObjectRetain();
  return sub_251EDDD80(v0);
}

uint64_t StateSnapshot.staticMediaSystems.getter()
{
  type metadata accessor for StateSnapshot(0);
  uint64_t v0 = swift_bridgeObjectRetain();
  return sub_251EDC738(v0);
}

uint64_t StateSnapshot.staticMediaProfiles.getter()
{
  type metadata accessor for StateSnapshot(0);
  uint64_t v0 = swift_bridgeObjectRetain();
  return sub_251EDC460(v0);
}

uint64_t StateSnapshot.staticRooms.getter()
{
  type metadata accessor for StateSnapshot(0);
  uint64_t v0 = swift_bridgeObjectRetain();
  return sub_251EDE058(v0);
}

uint64_t StateSnapshot.staticServiceGroups.getter()
{
  type metadata accessor for StateSnapshot(0);
  uint64_t v0 = swift_bridgeObjectRetain();
  return sub_251EDE330(v0);
}

uint64_t StateSnapshot.staticServices.getter()
{
  type metadata accessor for StateSnapshot(0);
  uint64_t v0 = swift_bridgeObjectRetain();
  return sub_251EDC188(v0);
}

uint64_t StateSnapshot.staticUsers.getter()
{
  type metadata accessor for StateSnapshot(0);
  uint64_t v0 = swift_bridgeObjectRetain();
  return sub_251EDE608(v0);
}

uint64_t StateSnapshot.staticResidents.getter()
{
  type metadata accessor for StateSnapshot(0);
  uint64_t v0 = swift_bridgeObjectRetain();
  return sub_251EDE8E0(v0);
}

void *StateSnapshot.staticActionSetsInOrder.getter()
{
  uint64_t v1 = type metadata accessor for StaticHome();
  uint64_t v2 = v1 - 8;
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for StateSnapshot(0);
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = sub_251EDDAA8(v6);
  uint64_t v8 = sub_251B1E140(v7);
  sub_251B25B74(v0 + *(int *)(v5 + 20), (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticHome);
  uint64_t v9 = *(void *)&v4[*(int *)(v2 + 60)];
  swift_bridgeObjectRetain();
  sub_251B25BDC((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticHome);
  uint64_t v10 = sub_251B0DB30((void (*)(char *))sub_251B0D8F0, 0, (void (*)(void *__return_ptr, char *))sub_251B0D8F4, 0, v9, v8);
  swift_release();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_251B0D8F4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_251B11390(a1, (uint64_t (*)(void))type metadata accessor for StaticActionSet, a2);
}

void *sub_251B0D90C(void (*a1)(char *), uint64_t a2, void (*a3)(void *__return_ptr, char *), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v25 = (void *)a6;
  uint64_t v12 = *(void *)(a5 + 16);
  swift_bridgeObjectRetain();
  if (v12)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = (void *)sub_251B270AC(a6, a5, a1, a2);
    swift_bridgeObjectRelease();
    v24[0] = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_251B27608(v24, a5, (void (*)(uint64_t))a1, a2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v14 = v24[0];
  }
  else
  {
    uint64_t v14 = (void *)MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_251B27AF4((unint64_t *)&v25, (uint64_t)v14);
  swift_bridgeObjectRelease();
  uint64_t v16 = v25[2];
  if (v16 < v15)
  {
    __break(1u);
  }
  else
  {
    sub_251D39848(v15, v16);
    uint64_t v17 = swift_bridgeObjectRetain();
    uint64_t v18 = (void *)sub_251B27780(v17, a3, a4);
    swift_bridgeObjectRelease();
    v24[0] = v18;
    swift_bridgeObjectRetain();
    sub_251B279BC(v24, (void *(*)(uint64_t *__return_ptr))a3, a4);
    swift_bridgeObjectRelease();
    uint64_t v19 = v24[0];
    swift_retain();
    uint64_t v20 = sub_251B27AF4((unint64_t *)&v25, (uint64_t)v19);
    swift_release();
    uint64_t v21 = v25[2];
    if (v21 >= v20)
    {
      sub_251D39848(v20, v21);
      v24[0] = v25;
      swift_bridgeObjectRetain_n();
      sub_251B28198(v24, (void (*)(uint64_t))a1, a2);
      swift_bridgeObjectRelease_n();
      char v22 = v24[0];
      v24[0] = v14;
      sub_251ED5820((uint64_t)v19);
      sub_251ED5820((uint64_t)v22);
      return v24[0];
    }
  }
  __break(1u);
  swift_bridgeObjectRelease();
  uint64_t result = (void *)swift_release();
  __break(1u);
  return result;
}

void *sub_251B0DB30(void (*a1)(char *), uint64_t a2, void (*a3)(void *__return_ptr, char *), uint64_t a4, uint64_t a5, uint64_t a6)
{
  swift_bridgeObjectRetain();
  uint64_t v12 = (void *)sub_251A91B90(a6);
  swift_bridgeObjectRelease();
  uint64_t v26 = v12;
  if (*(void *)(a5 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = swift_retain();
    uint64_t v14 = (void *)sub_251B2C820(v13, a5, a1, a2);
    swift_release();
    swift_bridgeObjectRelease();
    v25[0] = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_251B30284(v25, a5, (void (*)(uint64_t))a1, a2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v15 = v25[0];
  }
  else
  {
    uint64_t v15 = (void *)MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_251B31298((unint64_t *)&v26, (uint64_t)v15);
  swift_bridgeObjectRelease();
  uint64_t v17 = v26[2];
  if (v17 < v16)
  {
    __break(1u);
  }
  else
  {
    sub_251D39B9C(v16, v17);
    uint64_t v18 = swift_bridgeObjectRetain();
    uint64_t v19 = (void *)sub_251B2CD7C(v18, a3, a4);
    swift_bridgeObjectRelease();
    v25[0] = v19;
    swift_bridgeObjectRetain();
    sub_251B31160(v25, (void *(*)(uint64_t *__return_ptr))a3, a4);
    swift_bridgeObjectRelease();
    uint64_t v20 = v25[0];
    swift_retain();
    uint64_t v21 = sub_251B31298((unint64_t *)&v26, (uint64_t)v20);
    swift_release();
    uint64_t v22 = v26[2];
    if (v22 >= v21)
    {
      sub_251D39B9C(v21, v22);
      v25[0] = v26;
      swift_bridgeObjectRetain_n();
      sub_251B323D0(v25, (void (*)(uint64_t))a1, a2);
      swift_bridgeObjectRelease_n();
      uint64_t v23 = v25[0];
      v25[0] = v15;
      sub_251ED767C((uint64_t)v20);
      sub_251ED767C((uint64_t)v23);
      return v25[0];
    }
  }
  __break(1u);
  swift_bridgeObjectRelease();
  uint64_t result = (void *)swift_release();
  __break(1u);
  return result;
}

void *sub_251B0DD74(void (*a1)(char *), uint64_t a2, void (*a3)(void *__return_ptr, char *), uint64_t a4, uint64_t a5, uint64_t a6)
{
  swift_bridgeObjectRetain();
  uint64_t v12 = (void *)sub_251A91BD8(a6);
  swift_bridgeObjectRelease();
  uint64_t v26 = v12;
  if (*(void *)(a5 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = swift_retain();
    uint64_t v14 = (void *)sub_251B2CFB8(v13, a5, a1, a2);
    swift_release();
    swift_bridgeObjectRelease();
    v25[0] = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_251B32508(v25, a5, (void (*)(uint64_t))a1, a2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v15 = v25[0];
  }
  else
  {
    uint64_t v15 = (void *)MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_251B23F34((unint64_t *)&v26, (uint64_t)v15);
  uint64_t v17 = v26[2];
  if (v17 < v16)
  {
    __break(1u);
  }
  else
  {
    sub_251D39BC8(v16, v17);
    uint64_t v18 = swift_bridgeObjectRetain();
    uint64_t v19 = (void *)sub_251B2D514(v18, a3, a4);
    swift_bridgeObjectRelease();
    v25[0] = v19;
    swift_bridgeObjectRetain();
    sub_251B33064(v25, (void *(*)(uint64_t *__return_ptr))a3, a4);
    swift_bridgeObjectRelease();
    uint64_t v20 = v25[0];
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_251B23F34((unint64_t *)&v26, (uint64_t)v20);
    uint64_t v22 = v26[2];
    if (v22 >= v21)
    {
      sub_251D39BC8(v21, v22);
      v25[0] = v26;
      swift_bridgeObjectRetain_n();
      sub_251B3319C(v25, (void (*)(uint64_t))a1, a2);
      swift_bridgeObjectRelease_n();
      uint64_t v23 = v25[0];
      v25[0] = v15;
      sub_251ED76A8((uint64_t)v20);
      sub_251ED76A8((uint64_t)v23);
      return v25[0];
    }
  }
  __break(1u);
  swift_bridgeObjectRelease();
  uint64_t result = (void *)swift_release();
  __break(1u);
  return result;
}

void *sub_251B0DF98(void (*a1)(char *), uint64_t a2, void (*a3)(uint64_t *__return_ptr, unint64_t), uint64_t a4, uint64_t a5, uint64_t a6)
{
  swift_bridgeObjectRetain();
  uint64_t v12 = (void *)sub_251A923C0(a6);
  swift_bridgeObjectRelease();
  uint64_t v26 = v12;
  if (*(void *)(a5 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = swift_retain();
    uint64_t v14 = (void *)sub_251B2D750(v13, a5, a1, a2);
    swift_release();
    swift_bridgeObjectRelease();
    v25[0] = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_251B33444((uint64_t *)v25, a5, (void (*)(uint64_t))a1, a2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v15 = v25[0];
  }
  else
  {
    uint64_t v15 = (void *)MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_251B33690((unint64_t *)&v26, (uint64_t)v15);
  swift_bridgeObjectRelease();
  uint64_t v17 = v26[2];
  if (v17 < v16)
  {
    __break(1u);
  }
  else
  {
    sub_251D39BF4(v16, v17);
    uint64_t v18 = swift_bridgeObjectRetain();
    uint64_t v19 = (void *)sub_251B2DCAC(v18, (void (*)(void *__return_ptr, char *))a3, a4);
    swift_bridgeObjectRelease();
    v25[0] = v19;
    swift_bridgeObjectRetain();
    sub_251B1EC9C(v25, a3, a4);
    swift_bridgeObjectRelease();
    uint64_t v20 = v25[0];
    swift_retain();
    uint64_t v21 = sub_251B33690((unint64_t *)&v26, (uint64_t)v20);
    swift_release();
    uint64_t v22 = v26[2];
    if (v22 >= v21)
    {
      sub_251D39BF4(v21, v22);
      v25[0] = v26;
      swift_bridgeObjectRetain_n();
      sub_251B1EDC4(v25, (void (*)(uint64_t))a1, a2);
      swift_bridgeObjectRelease_n();
      uint64_t v23 = v25[0];
      v25[0] = v15;
      sub_251ED9B3C((uint64_t)v20);
      sub_251ED9B3C((uint64_t)v23);
      return v25[0];
    }
  }
  __break(1u);
  swift_bridgeObjectRelease();
  uint64_t result = (void *)swift_release();
  __break(1u);
  return result;
}

void *sub_251B0E1DC(void (*a1)(char *), uint64_t a2, void (*a3)(uint64_t *__return_ptr, unint64_t), uint64_t a4, uint64_t a5, uint64_t a6)
{
  swift_bridgeObjectRetain();
  uint64_t v12 = (void *)sub_251A92570(a6);
  swift_bridgeObjectRelease();
  uint64_t v26 = v12;
  if (*(void *)(a5 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = swift_retain();
    uint64_t v14 = (void *)sub_251B2DEE8(v13, a5, a1, a2);
    swift_release();
    swift_bridgeObjectRelease();
    v25[0] = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_251B35BB8((uint64_t *)v25, a5, (void (*)(uint64_t))a1, a2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v15 = v25[0];
  }
  else
  {
    uint64_t v15 = (void *)MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRetain();
  int64_t v16 = sub_251B3746C((unint64_t *)&v26, (uint64_t)v15);
  swift_bridgeObjectRelease();
  uint64_t v17 = v26[2];
  if (v17 < v16)
  {
    __break(1u);
  }
  else
  {
    sub_251D39C20(v16, v17);
    uint64_t v18 = swift_bridgeObjectRetain();
    uint64_t v19 = (void *)sub_251B2E444(v18, (void (*)(void *__return_ptr, char *))a3, a4);
    swift_bridgeObjectRelease();
    v25[0] = v19;
    swift_bridgeObjectRetain();
    sub_251B1EEFC(v25, a3, a4);
    swift_bridgeObjectRelease();
    uint64_t v20 = v25[0];
    swift_retain();
    int64_t v21 = sub_251B3746C((unint64_t *)&v26, (uint64_t)v20);
    swift_release();
    uint64_t v22 = v26[2];
    if (v22 >= v21)
    {
      sub_251D39C20(v21, v22);
      v25[0] = v26;
      swift_bridgeObjectRetain_n();
      sub_251B1F024(v25, (void (*)(uint64_t))a1, a2);
      swift_bridgeObjectRelease_n();
      uint64_t v23 = v25[0];
      v25[0] = v15;
      sub_251ED9B68((uint64_t)v20);
      sub_251ED9B68((uint64_t)v23);
      return v25[0];
    }
  }
  __break(1u);
  swift_bridgeObjectRelease();
  uint64_t result = (void *)swift_release();
  __break(1u);
  return result;
}

uint64_t StateSnapshot.filteredStaticActionSetsInOrder(filterCategory:)(unsigned __int8 *a1)
{
  uint64_t v2 = v1;
  uint64_t v50 = type metadata accessor for StaticActionSet();
  uint64_t v4 = *(void *)(v50 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v50);
  v46 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v46 - v8;
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v51 = (uint64_t)&v46 - v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v48 = (uint64_t)&v46 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v46 - v14;
  uint64_t v16 = type metadata accessor for StaticHome();
  uint64_t v17 = v16 - 8;
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v47 = *a1;
  uint64_t v20 = type metadata accessor for StateSnapshot(0);
  uint64_t v21 = swift_bridgeObjectRetain();
  uint64_t v22 = sub_251EDDAA8(v21);
  uint64_t v23 = sub_251B1E140(v22);
  sub_251B25B74(v2 + *(int *)(v20 + 20), (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for StaticHome);
  uint64_t v24 = *(void *)&v19[*(int *)(v17 + 60)];
  swift_bridgeObjectRetain();
  sub_251B25BDC((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for StaticHome);
  uint64_t v25 = sub_251B0DB30((void (*)(char *))sub_251B0D8F0, 0, (void (*)(void *__return_ptr, char *))sub_251B0D8F4, 0, v24, v23);
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v27 = MEMORY[0x263F8EE78];
  uint64_t v52 = MEMORY[0x263F8EE78];
  uint64_t v28 = v25[2];
  v49 = v9;
  if (!v28)
  {
    uint64_t v35 = MEMORY[0x263F8EE78];
    uint64_t v36 = (uint64_t)v46;
LABEL_14:
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v52 = v27;
    uint64_t v37 = *(void *)(v35 + 16);
    if (!v37)
    {
LABEL_28:
      swift_release();
      return v27;
    }
    unint64_t v38 = 0;
    while (1)
    {
      if (v38 >= *(void *)(v35 + 16)) {
        goto LABEL_30;
      }
      unint64_t v39 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
      uint64_t v40 = *(void *)(v4 + 72);
      uint64_t v41 = v51;
      sub_251B25B74(v35 + v39 + v40 * v38, v51, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
      sub_251B25B74(v41, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
      if (v47 == 8) {
        break;
      }
      char v42 = sub_251DB3F78(v47, *(void *)&v9[*(int *)(v50 + 48)]);
      sub_251B25BDC((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
      if (v42) {
        goto LABEL_22;
      }
      uint64_t result = sub_251B25BDC(v51, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
LABEL_17:
      if (v37 == ++v38)
      {
        uint64_t v27 = v52;
        goto LABEL_28;
      }
    }
    sub_251B25BDC((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
LABEL_22:
    sub_251B25C90(v51, v36, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
    uint64_t v43 = v52;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_251A3E5F8(0, *(void *)(v43 + 16) + 1, 1);
      uint64_t v36 = (uint64_t)v46;
      uint64_t v43 = v52;
    }
    unint64_t v45 = *(void *)(v43 + 16);
    unint64_t v44 = *(void *)(v43 + 24);
    if (v45 >= v44 >> 1)
    {
      sub_251A3E5F8(v44 > 1, v45 + 1, 1);
      uint64_t v36 = (uint64_t)v46;
      uint64_t v43 = v52;
    }
    *(void *)(v43 + 16) = v45 + 1;
    uint64_t result = sub_251B25C90(v36, v43 + v39 + v45 * v40, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
    uint64_t v9 = v49;
    goto LABEL_17;
  }
  unint64_t v29 = 0;
  uint64_t v30 = MEMORY[0x263F8EE78];
  while (v29 < v25[2])
  {
    unint64_t v31 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v32 = *(void *)(v4 + 72);
    sub_251B25B74((uint64_t)v25 + v31 + v32 * v29, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
    if (v15[*(int *)(v50 + 44)] == 1)
    {
      sub_251B25C90((uint64_t)v15, v48, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_251A3E5F8(0, *(void *)(v30 + 16) + 1, 1);
      }
      uint64_t v30 = v52;
      unint64_t v34 = *(void *)(v52 + 16);
      unint64_t v33 = *(void *)(v52 + 24);
      if (v34 >= v33 >> 1)
      {
        sub_251A3E5F8(v33 > 1, v34 + 1, 1);
        uint64_t v30 = v52;
      }
      *(void *)(v30 + 16) = v34 + 1;
      uint64_t result = sub_251B25C90(v48, v30 + v31 + v34 * v32, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
      uint64_t v9 = v49;
    }
    else
    {
      uint64_t result = sub_251B25BDC((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
    }
    if (v28 == ++v29)
    {
      uint64_t v35 = v52;
      uint64_t v36 = (uint64_t)v46;
      uint64_t v27 = MEMORY[0x263F8EE78];
      goto LABEL_14;
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

void *StateSnapshot.staticRoomsToShowInOrder.getter()
{
  uint64_t v1 = type metadata accessor for StateSnapshot(0);
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_251EDE058(v2);
  uint64_t v10 = v0;
  uint64_t v4 = sub_251B1E340((uint64_t)sub_251B25CF8, (uint64_t)&v9, v3, type metadata accessor for StaticRoom, type metadata accessor for StaticRoom, type metadata accessor for StaticRoom, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_251F1C414);
  uint64_t v5 = v0 + *(int *)(v1 + 20);
  uint64_t v6 = type metadata accessor for StaticHome();
  uint64_t v7 = sub_251B0DD74((void (*)(char *))sub_251B0EC78, 0, (void (*)(void *__return_ptr, char *))sub_251B0ECE4, 0, *(void *)(v5 + *(int *)(v6 + 44)), v4);
  swift_release();
  return v7;
}

BOOL sub_251B0EADC(uint64_t a1)
{
  uint64_t v2 = sub_251F34DA0();
  uint64_t v3 = *(void **)(v2 - 8);
  uint64_t v4 = v3[8];
  MEMORY[0x270FA5388](v2);
  unint64_t v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v6 = (void (*)(char *, uint64_t, uint64_t))v3[2];
  v6((char *)&v10 - v5, a1, v2);
  type metadata accessor for StateSnapshot(0);
  uint64_t v7 = type metadata accessor for StaticHome();
  MEMORY[0x270FA5388](v7);
  ((void (*)(char *))v6)((char *)&v10 - v5);
  sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
  LOBYTE(a1) = sub_251F35650();
  uint64_t v8 = (void (*)(char *, uint64_t))v3[1];
  v8((char *)&v10 - v5, v2);
  v8((char *)&v10 - v5, v2);
  return (a1 & 1) == 0;
}

uint64_t sub_251B0EC78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_251F34DA0();
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a2, a1, v4);
}

uint64_t sub_251B0ECE4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(a1 + *(int *)(type metadata accessor for StaticRoom(0) + 20));
  uint64_t v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

void *StateSnapshot.staticRoomTypesToShowInOrder.getter()
{
  uint64_t v256 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E248);
  MEMORY[0x270FA5388](v256);
  uint64_t v2 = (char *)&v223 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D138);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v227 = (uint64_t)&v223 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E250);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v237 = (uint64_t)&v223 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v236 = type metadata accessor for RoomType(0);
  uint64_t v228 = *(void *)(v236 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v236);
  uint64_t v244 = (uint64_t)&v223 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v254 = (uint64_t)&v223 - v10;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  v253 = (char *)&v223 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v257 = (uint64_t)&v223 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v229 = (uint64_t)&v223 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  v233 = (uint64_t *)((char *)&v223 - v18);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  v232 = (uint64_t *)((char *)&v223 - v20);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  v250 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))((char *)&v223 - v22);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  unint64_t v245 = (unint64_t)&v223 - v24;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  v255 = (uint64_t *)((char *)&v223 - v26);
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v242 = (uint64_t)&v223 - v28;
  MEMORY[0x270FA5388](v27);
  uint64_t v240 = (uint64_t)&v223 - v29;
  v259 = (int *)type metadata accessor for StaticRoom(0);
  uint64_t v30 = *((void *)v259 - 1);
  uint64_t v31 = MEMORY[0x270FA5388](v259);
  uint64_t v235 = (uint64_t)&v223 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  uint64_t v246 = (uint64_t)&v223 - v34;
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  uint64_t v226 = (uint64_t)&v223 - v36;
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  uint64_t v241 = (uint64_t)&v223 - v38;
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  uint64_t v41 = (char *)&v223 - v40;
  MEMORY[0x270FA5388](v39);
  uint64_t v252 = (uint64_t)&v223 - v42;
  unint64_t v247 = type metadata accessor for StateSnapshot(0);
  v248 = v0;
  v225 = (uint64_t (*)(void))*(int *)(v247 + 52);
  uint64_t v43 = swift_bridgeObjectRetain();
  uint64_t v44 = sub_251EDE058(v43);
  uint64_t v45 = 0;
  uint64_t v46 = *(void *)(v44 + 56);
  uint64_t v243 = v44 + 56;
  uint64_t v258 = v44;
  uint64_t v47 = 1 << *(unsigned char *)(v44 + 32);
  uint64_t v48 = -1;
  if (v47 < 64) {
    uint64_t v48 = ~(-1 << v47);
  }
  unint64_t v49 = v48 & v46;
  *(void *)&long long v249 = (unint64_t)(v47 + 63) >> 6;
  uint64_t v251 = v30;
  v238 = (void (**)(uint64_t, void, uint64_t, int *))(v30 + 56);
  uint64_t v50 = (void *)MEMORY[0x263F8EE80];
LABEL_4:
  v231 = v50;
  if (v49)
  {
LABEL_5:
    unint64_t v51 = __clz(__rbit64(v49));
    v49 &= v49 - 1;
    unint64_t v52 = v51 | (v45 << 6);
    goto LABEL_20;
  }
  while (1)
  {
    uint64_t v53 = v45 + 1;
    if (__OFADD__(v45, 1)) {
      goto LABEL_149;
    }
    if (v53 >= (uint64_t)v249) {
      break;
    }
    unint64_t v54 = *(void *)(v243 + 8 * v53);
    ++v45;
    if (v54) {
      goto LABEL_19;
    }
    uint64_t v45 = v53 + 1;
    if (v53 + 1 >= (uint64_t)v249) {
      break;
    }
    unint64_t v54 = *(void *)(v243 + 8 * v45);
    if (v54) {
      goto LABEL_19;
    }
    uint64_t v45 = v53 + 2;
    if (v53 + 2 >= (uint64_t)v249) {
      break;
    }
    unint64_t v54 = *(void *)(v243 + 8 * v45);
    if (v54) {
      goto LABEL_19;
    }
    uint64_t v55 = v53 + 3;
    if (v55 >= (uint64_t)v249) {
      break;
    }
    unint64_t v54 = *(void *)(v243 + 8 * v55);
    if (!v54)
    {
      while (1)
      {
        uint64_t v45 = v55 + 1;
        if (__OFADD__(v55, 1)) {
          break;
        }
        if (v45 >= (uint64_t)v249) {
          goto LABEL_34;
        }
        unint64_t v54 = *(void *)(v243 + 8 * v45);
        ++v55;
        if (v54) {
          goto LABEL_19;
        }
      }
LABEL_151:
      __break(1u);
LABEL_152:
      __break(1u);
LABEL_153:
      __break(1u);
LABEL_154:
      __break(1u);
LABEL_155:
      __break(1u);
LABEL_156:
      sub_251F36BA0();
      __break(1u);
      swift_release();
      __break(1u);
      JUMPOUT(0x251B10B8CLL);
    }
    uint64_t v45 = v55;
LABEL_19:
    unint64_t v49 = (v54 - 1) & v54;
    unint64_t v52 = __clz(__rbit64(v54)) + (v45 << 6);
LABEL_20:
    uint64_t v56 = v252;
    sub_251B25B74(*(void *)(v258 + 48) + *(void *)(v251 + 72) * v52, v252, type metadata accessor for StaticRoom);
    sub_251B25C90(v56, (uint64_t)v41, type metadata accessor for StaticRoom);
    v57 = &v248[*(int *)(v247 + 20)];
    v58 = &v57[*(int *)(type metadata accessor for StaticHome() + 24)];
    uint64_t v59 = sub_251F34DA0();
    uint64_t v60 = *(void *)(v59 - 8);
    MEMORY[0x270FA5388](v59);
    v62 = (char *)&v223 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v62, v58, v59);
    sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
    LOBYTE(v58) = sub_251F35650();
    (*(void (**)(char *, uint64_t))(v60 + 8))(v62, v59);
    if ((v58 & 1) == 0)
    {
      sub_251A1A8EC((unint64_t *)&qword_26B21E6B0);
      uint64_t v63 = sub_251F36AB0();
      uint64_t v65 = v64;
      uint64_t v66 = v240;
      sub_251B25B74((uint64_t)v41, v240, type metadata accessor for StaticRoom);
      (*v238)(v66, 0, 4, v259);
      sub_251B25C90(v66, v242, type metadata accessor for RoomType);
      uint64_t v67 = (uint64_t)v231;
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v261 = v67;
      uint64_t v69 = v63;
      uint64_t v70 = v65;
      unint64_t v72 = sub_2519FE798(v63, v65);
      uint64_t v73 = *(void *)(v67 + 16);
      BOOL v74 = (v71 & 1) == 0;
      uint64_t v75 = v73 + v74;
      if (__OFADD__(v73, v74)) {
        goto LABEL_152;
      }
      char v76 = v71;
      if (*(void *)(v67 + 24) >= v75)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_251A15264();
        }
        uint64_t v77 = v70;
        uint64_t v50 = (void *)v261;
        if (v76) {
          goto LABEL_32;
        }
LABEL_27:
        v50[(v72 >> 6) + 8] |= 1 << v72;
        v80 = (uint64_t *)(v50[6] + 16 * v72);
        uint64_t *v80 = v69;
        v80[1] = v77;
        sub_251B25C90(v242, v50[7] + *(void *)(v228 + 72) * v72, type metadata accessor for RoomType);
        uint64_t v81 = v50[2];
        BOOL v82 = __OFADD__(v81, 1);
        uint64_t v83 = v81 + 1;
        if (!v82)
        {
          v50[2] = v83;
          swift_bridgeObjectRetain();
          goto LABEL_33;
        }
        goto LABEL_154;
      }
      sub_251A077AC(v75, isUniquelyReferenced_nonNull_native);
      uint64_t v77 = v70;
      unint64_t v78 = sub_2519FE798(v69, v70);
      if ((v76 & 1) != (v79 & 1)) {
        goto LABEL_156;
      }
      unint64_t v72 = v78;
      uint64_t v50 = (void *)v261;
      if ((v76 & 1) == 0) {
        goto LABEL_27;
      }
LABEL_32:
      sub_251B392A8(v242, v50[7] + *(void *)(v228 + 72) * v72, type metadata accessor for RoomType);
LABEL_33:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_251B25BDC((uint64_t)v41, type metadata accessor for StaticRoom);
      goto LABEL_4;
    }
    sub_251B25BDC((uint64_t)v41, type metadata accessor for StaticRoom);
    if (v49) {
      goto LABEL_5;
    }
  }
LABEL_34:
  swift_release();
  uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D068);
  uint64_t v85 = *(void *)(v228 + 72);
  uint64_t v86 = *(unsigned __int8 *)(v228 + 80);
  uint64_t v87 = (v86 + 32) & ~v86;
  uint64_t v240 = v84;
  uint64_t v239 = v86 | 7;
  uint64_t v88 = swift_allocObject();
  *(_OWORD *)(v88 + 16) = xmmword_251F3DAB0;
  uint64_t v252 = v87;
  uint64_t v243 = v88;
  uint64_t v90 = v251;
  v91 = *(void (**)(uint64_t, uint64_t, uint64_t, int *))(v251 + 56);
  uint64_t v89 = v88 + v87;
  v92 = v259;
  v91(v89, 3, 4, v259);
  v91(v89 + v85, 1, 4, v92);
  v93 = v92;
  v94 = v231;
  v234 = v91;
  v91(v89 + 2 * v85, 2, 4, v93);
  unint64_t v95 = 0;
  v96 = (unsigned int (**)(uint64_t, uint64_t, int *))(v90 + 48);
  unint64_t v230 = (unint64_t)"com.apple.Home.frozen";
  uint64_t v242 = v89;
  uint64_t v97 = v89;
  uint64_t v258 = v85;
  do
  {
    if (v95 >= *(void *)(v243 + 16))
    {
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
LABEL_148:
      __break(1u);
LABEL_149:
      __break(1u);
LABEL_150:
      __break(1u);
      goto LABEL_151;
    }
    *(void *)&long long v249 = v95 + 1;
    uint64_t v100 = (uint64_t)v255;
    sub_251B25B74(v97, (uint64_t)v255, type metadata accessor for RoomType);
    uint64_t v101 = v245;
    sub_251B25B74(v100, v245, type metadata accessor for RoomType);
    v102 = *v96;
    unint64_t v103 = 0xED00006E6F697463;
    uint64_t v104 = 0x655373656E656373;
    switch((*v96)(v101, 4, v259))
    {
      case 1u:
        break;
      case 2u:
        unint64_t v103 = 0xEE006E6F69746365;
        uint64_t v104 = 0x53736172656D6163;
        break;
      case 3u:
        unint64_t v103 = v230 | 0x8000000000000000;
        uint64_t v104 = 0xD000000000000010;
        break;
      case 4u:
        unint64_t v103 = 0xEB000000006D6F6FLL;
        uint64_t v104 = 0x526E776F6E6B6E75;
        break;
      default:
        uint64_t v105 = v241;
        sub_251B25C90(v245, v241, type metadata accessor for StaticRoom);
        v106 = (uint64_t *)(v105 + v259[5]);
        uint64_t v104 = *v106;
        unint64_t v103 = v106[1];
        swift_bridgeObjectRetain();
        sub_251B25BDC(v105, type metadata accessor for StaticRoom);
        break;
    }
    sub_251B25B74((uint64_t)v255, (uint64_t)v250, type metadata accessor for RoomType);
    int v107 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v261 = (uint64_t)v94;
    unint64_t v109 = sub_2519FE798(v104, v103);
    uint64_t v110 = v94[2];
    BOOL v111 = (v108 & 1) == 0;
    uint64_t v112 = v110 + v111;
    if (__OFADD__(v110, v111)) {
      goto LABEL_145;
    }
    char v113 = v108;
    if (v94[3] >= v112)
    {
      if (v107)
      {
        v94 = (void *)v261;
        if (v108) {
          goto LABEL_35;
        }
      }
      else
      {
        sub_251A15264();
        v94 = (void *)v261;
        if (v113) {
          goto LABEL_35;
        }
      }
    }
    else
    {
      sub_251A077AC(v112, v107);
      unint64_t v114 = sub_2519FE798(v104, v103);
      if ((v113 & 1) != (v115 & 1)) {
        goto LABEL_156;
      }
      unint64_t v109 = v114;
      v94 = (void *)v261;
      if (v113)
      {
LABEL_35:
        uint64_t v98 = v94[7] + v109 * v258;
        uint64_t v99 = v258;
        sub_251B392A8((uint64_t)v250, v98, type metadata accessor for RoomType);
        goto LABEL_36;
      }
    }
    v94[(v109 >> 6) + 8] |= 1 << v109;
    v116 = (uint64_t *)(v94[6] + 16 * v109);
    uint64_t *v116 = v104;
    v116[1] = v103;
    uint64_t v117 = v94[7] + v109 * v258;
    uint64_t v99 = v258;
    sub_251B25C90((uint64_t)v250, v117, type metadata accessor for RoomType);
    uint64_t v118 = v94[2];
    BOOL v82 = __OFADD__(v118, 1);
    uint64_t v119 = v118 + 1;
    if (v82) {
      goto LABEL_150;
    }
    v94[2] = v119;
    swift_bridgeObjectRetain();
LABEL_36:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_251B25BDC((uint64_t)v255, type metadata accessor for RoomType);
    v97 += v99;
    unint64_t v95 = v249;
  }
  while ((void)v249 != 3);
  v120 = v248;
  uint64_t v121 = swift_bridgeObjectRetain();
  uint64_t v261 = sub_251EDE058(v121);
  v122 = &v120[*(int *)(v247 + 20)];
  uint64_t v123 = *(void *)(*(void *)&v122[*(int *)(type metadata accessor for StaticHome() + 48)] + 16);
  v231 = v94;
  if (v123)
  {
    v124 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v228 + 56);
    v250 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v228 + 48);
    *(void *)&long long v249 = swift_bridgeObjectRetain();
    v125 = (uint64_t *)(v249 + 40);
    v255 = (void *)MEMORY[0x263F8EE78];
    uint64_t v126 = v257;
    while (1)
    {
      if (v94[2])
      {
        uint64_t v128 = *(v125 - 1);
        uint64_t v129 = *v125;
        swift_bridgeObjectRetain();
        unint64_t v130 = sub_2519FE798(v128, v129);
        if (v131)
        {
          uint64_t v132 = v237;
          sub_251B25B74(v94[7] + v130 * v258, v237, type metadata accessor for RoomType);
          uint64_t v133 = 0;
        }
        else
        {
          uint64_t v133 = 1;
          uint64_t v132 = v237;
        }
        uint64_t v134 = v236;
        (*v124)(v132, v133, 1, v236);
        swift_bridgeObjectRelease();
        int v135 = (*v250)(v132, 1, v134);
        uint64_t v127 = v132;
        uint64_t v126 = v257;
        uint64_t v136 = (uint64_t)v232;
        if (v135 != 1)
        {
          sub_251B25C90(v127, (uint64_t)v232, type metadata accessor for RoomType);
          sub_251B25B74(v136, (uint64_t)v233, type metadata accessor for RoomType);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            v255 = (void *)sub_251F10090(0, v255[2] + 1, 1, (unint64_t)v255);
          }
          unint64_t v138 = v255[2];
          unint64_t v137 = v255[3];
          if (v138 >= v137 >> 1) {
            v255 = (void *)sub_251F10090(v137 > 1, v138 + 1, 1, (unint64_t)v255);
          }
          uint64_t v139 = (uint64_t)v255;
          v255[2] = v138 + 1;
          sub_251B25C90((uint64_t)v233, v139 + v252 + v138 * v258, type metadata accessor for RoomType);
          uint64_t v140 = v229;
          sub_251B25B74(v136, v229, type metadata accessor for RoomType);
          if (v102(v140, 4, v259))
          {
            sub_251B25BDC(v136, type metadata accessor for RoomType);
            uint64_t v141 = v140;
          }
          else
          {
            uint64_t v142 = v226;
            sub_251B25C90(v140, v226, type metadata accessor for StaticRoom);
            uint64_t v143 = v227;
            sub_251B22B30(v142, v227);
            sub_251A1B064(v143, &qword_269B9D138);
            sub_251B25BDC(v142, type metadata accessor for StaticRoom);
            uint64_t v141 = v136;
          }
          sub_251B25BDC(v141, type metadata accessor for RoomType);
          v94 = v231;
          uint64_t v126 = v257;
          goto LABEL_58;
        }
      }
      else
      {
        uint64_t v127 = v237;
        (*v124)(v237, 1, 1, v236);
      }
      sub_251A1B064(v127, &qword_269B9E250);
LABEL_58:
      v125 += 2;
      if (!--v123)
      {
        swift_bridgeObjectRelease();
        uint64_t v99 = v258;
        v144 = v255;
        goto LABEL_74;
      }
    }
  }
  v144 = (void *)MEMORY[0x263F8EE78];
  uint64_t v126 = v257;
LABEL_74:
  uint64_t v145 = (uint64_t)v253;
  if (*(void *)(v243 + 16) < 3uLL) {
    goto LABEL_153;
  }
  uint64_t v146 = 0;
  v250 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v252 + v99);
  long long v249 = xmmword_251F38650;
LABEL_78:
  sub_251B25B74(v242 + v146 * v99, v126, type metadata accessor for RoomType);
  uint64_t v149 = v144[2];
  if (!v149) {
    goto LABEL_76;
  }
  v150 = (char *)v144 + v252;
  v255 = v144;
  swift_bridgeObjectRetain();
  uint64_t v151 = 0;
  while (2)
  {
    uint64_t v152 = (uint64_t)&v150[v151 * v258];
    ++v151;
    sub_251B25B74(v152, v145, type metadata accessor for RoomType);
    uint64_t v153 = (uint64_t)&v2[*(int *)(v256 + 48)];
    sub_251B25B74(v145, (uint64_t)v2, type metadata accessor for RoomType);
    sub_251B25B74(v257, v153, type metadata accessor for RoomType);
    switch(v102((uint64_t)v2, 4, v259))
    {
      case 1u:
        if (v102(v153, 4, v259) == 1) {
          goto LABEL_128;
        }
        goto LABEL_90;
      case 2u:
        if (v102(v153, 4, v259) == 2) {
          goto LABEL_128;
        }
        goto LABEL_90;
      case 3u:
        if (v102(v153, 4, v259) == 3) {
          goto LABEL_128;
        }
        goto LABEL_90;
      case 4u:
        if (v102(v153, 4, v259) == 4) {
          goto LABEL_128;
        }
        goto LABEL_90;
      default:
        uint64_t v154 = v254;
        sub_251B25B74((uint64_t)v2, v254, type metadata accessor for RoomType);
        if (v102(v153, 4, v259))
        {
          sub_251B25BDC(v154, type metadata accessor for StaticRoom);
          uint64_t v145 = (uint64_t)v253;
LABEL_90:
          sub_251A1B064((uint64_t)v2, &qword_269B9E248);
LABEL_91:
          sub_251B25BDC(v145, type metadata accessor for RoomType);
          if (v151 == v149)
          {
            v144 = v255;
            swift_bridgeObjectRelease();
LABEL_76:
            uint64_t v147 = swift_allocObject();
            *(_OWORD *)(v147 + 16) = v249;
            uint64_t v148 = v257;
            sub_251B25B74(v257, v147 + v252, type metadata accessor for RoomType);
            v260 = (void *)v147;
            sub_251ED76D4((uint64_t)v144);
            v144 = v260;
            goto LABEL_77;
          }
          continue;
        }
        uint64_t v155 = v246;
        sub_251B25C90(v153, v246, type metadata accessor for StaticRoom);
        char v156 = sub_251F34D70();
        uint64_t v157 = v155;
        if ((v156 & 1) == 0) {
          goto LABEL_100;
        }
        uint64_t v158 = v259[5];
        uint64_t v159 = *(void *)(v154 + v158);
        uint64_t v160 = *(void *)(v154 + v158 + 8);
        v161 = (void *)(v155 + v158);
        if (v159 != *v161 || v160 != v161[1])
        {
          char v163 = sub_251F36B10();
          uint64_t v157 = v246;
          if ((v163 & 1) == 0) {
            goto LABEL_100;
          }
        }
        if (*(unsigned __int8 *)(v154 + v259[6]) != *(unsigned __int8 *)(v157 + v259[6])) {
          goto LABEL_100;
        }
        uint64_t v164 = v259[7];
        uint64_t v165 = *(void *)(v157 + v164);
        if (*(void *)(v154 + v164))
        {
          uint64_t v154 = v254;
          if (!v165) {
            goto LABEL_100;
          }
          swift_bridgeObjectRetain();
          uint64_t v166 = swift_bridgeObjectRetain();
          LODWORD(v248) = sub_251B09F88(v166, v165);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v157 = v246;
          if ((v248 & 1) == 0) {
            goto LABEL_100;
          }
        }
        else
        {
          uint64_t v154 = v254;
          if (v165) {
            goto LABEL_100;
          }
        }
        char v167 = sub_251F34D70();
        uint64_t v157 = v246;
        if ((v167 & 1) == 0) {
          goto LABEL_100;
        }
        char v168 = sub_251AF9FA8(*(void *)(v154 + v259[9]), *(void *)(v246 + v259[9]));
        uint64_t v157 = v246;
        if ((v168 & 1) == 0) {
          goto LABEL_100;
        }
        char v169 = sub_251AFECF0(*(void *)(v154 + v259[10]), *(void *)(v246 + v259[10]));
        uint64_t v157 = v246;
        if ((v169 & 1) == 0) {
          goto LABEL_100;
        }
        char v170 = sub_251AFF55C(*(void *)(v154 + v259[11]), *(void *)(v246 + v259[11]));
        uint64_t v157 = v246;
        if ((v170 & 1) == 0) {
          goto LABEL_100;
        }
        char v171 = sub_251AFFB5C(*(void *)(v154 + v259[12]), *(void *)(v246 + v259[12]));
        uint64_t v157 = v246;
        if ((v171 & 1) == 0) {
          goto LABEL_100;
        }
        char v172 = sub_251B0015C(*(void *)(v154 + v259[13]), *(void *)(v246 + v259[13]));
        uint64_t v157 = v246;
        if ((v172 & 1) == 0) {
          goto LABEL_100;
        }
        char v173 = sub_251AFA5A8(*(void *)(v154 + v259[14]), *(void *)(v246 + v259[14]));
        uint64_t v157 = v246;
        if ((v173 & 1) == 0) {
          goto LABEL_100;
        }
        char v174 = sub_251AF99A8(*(void *)(v154 + v259[15]), *(void *)(v246 + v259[15]));
        uint64_t v157 = v246;
        if ((v174 & 1) == 0) {
          goto LABEL_100;
        }
        uint64_t v175 = v259[16];
        uint64_t v176 = *(void *)(v154 + v175);
        uint64_t v177 = *(void *)(v246 + v175);
        uint64_t v229 = v176;
        uint64_t v178 = *(void *)(v176 + 16);
        uint64_t v228 = v177;
        if (v178 != *(void *)(v177 + 16)) {
          goto LABEL_100;
        }
        if (v178)
        {
          uint64_t v179 = sub_251F34DA0();
          uint64_t v157 = v246;
          uint64_t v227 = v179;
          uint64_t v180 = *(void *)(v179 - 8);
          if (v229 != v228)
          {
            unint64_t v181 = (*(unsigned __int8 *)(v180 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v180 + 80);
            v225 = *(uint64_t (**)(void))(v180 + 16);
            uint64_t v237 = *(void *)(v180 + 64);
            uint64_t v223 = *(void *)(v180 + 72);
            uint64_t v226 = v180 + 16;
            v224 = (unint64_t *)(v180 + 8);
            do
            {
              unint64_t v245 = v181;
              uint64_t v236 = v178;
              v233 = &v223;
              MEMORY[0x270FA5388](v179);
              unint64_t v247 = (v182 + 15) & 0xFFFFFFFFFFFFFFF0;
              v248 = (char *)&v223 - v247;
              uint64_t v183 = v227;
              uint64_t v184 = v225();
              v232 = &v223;
              MEMORY[0x270FA5388](v184);
              v185 = (char *)&v223 - v247;
              v186((char *)&v223 - v247, v228 + v245, v183);
              sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
              LODWORD(v230) = sub_251F35650();
              unint64_t v247 = *v224;
              v187 = v185;
              uint64_t v188 = v236;
              ((void (*)(char *, uint64_t))v247)(v187, v183);
              uint64_t v179 = ((uint64_t (*)(char *, uint64_t))v247)(v248, v183);
              uint64_t v157 = v246;
              uint64_t v154 = v254;
              if ((v230 & 1) == 0) {
                goto LABEL_100;
              }
              unint64_t v181 = v245 + v223;
              uint64_t v178 = v188 - 1;
            }
            while (v178);
          }
        }
        uint64_t v189 = v259[17];
        uint64_t v154 = v254;
        uint64_t v190 = *(void *)(v254 + v189);
        uint64_t v191 = *(void *)(v157 + v189);
        uint64_t v229 = v190;
        uint64_t v192 = *(void *)(v190 + 16);
        uint64_t v228 = v191;
        if (v192 != *(void *)(v191 + 16)) {
          goto LABEL_100;
        }
        if (v192)
        {
          uint64_t v193 = sub_251F34DA0();
          uint64_t v157 = v246;
          uint64_t v227 = v193;
          uint64_t v194 = *(void *)(v193 - 8);
          if (v229 != v228)
          {
            unint64_t v195 = (*(unsigned __int8 *)(v194 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v194 + 80);
            v225 = *(uint64_t (**)(void))(v194 + 16);
            uint64_t v237 = *(void *)(v194 + 64);
            uint64_t v223 = *(void *)(v194 + 72);
            uint64_t v226 = v194 + 16;
            v224 = (unint64_t *)(v194 + 8);
            do
            {
              unint64_t v245 = v195;
              uint64_t v236 = v192;
              v233 = &v223;
              MEMORY[0x270FA5388](v193);
              unint64_t v247 = (v196 + 15) & 0xFFFFFFFFFFFFFFF0;
              v248 = (char *)&v223 - v247;
              uint64_t v197 = v227;
              uint64_t v198 = v225();
              v232 = &v223;
              MEMORY[0x270FA5388](v198);
              v199 = (char *)&v223 - v247;
              v200((char *)&v223 - v247, v228 + v245, v197);
              sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
              LODWORD(v230) = sub_251F35650();
              unint64_t v247 = *v224;
              v201 = v199;
              uint64_t v202 = v236;
              ((void (*)(char *, uint64_t))v247)(v201, v197);
              uint64_t v193 = ((uint64_t (*)(char *, uint64_t))v247)(v248, v197);
              uint64_t v157 = v246;
              uint64_t v154 = v254;
              if ((v230 & 1) == 0) {
                goto LABEL_100;
              }
              unint64_t v195 = v245 + v223;
              uint64_t v192 = v202 - 1;
            }
            while (v192);
          }
        }
        uint64_t v154 = v254;
        char v203 = sub_251B042A4(*(void *)(v254 + v259[18]), *(void *)(v157 + v259[18]));
        uint64_t v157 = v246;
        if ((v203 & 1) == 0)
        {
LABEL_100:
          sub_251B25BDC(v157, type metadata accessor for StaticRoom);
          sub_251B25BDC(v154, type metadata accessor for StaticRoom);
          sub_251B25BDC((uint64_t)v2, type metadata accessor for RoomType);
          uint64_t v145 = (uint64_t)v253;
          goto LABEL_91;
        }
        sub_251B25BDC(v246, type metadata accessor for StaticRoom);
        sub_251B25BDC(v154, type metadata accessor for StaticRoom);
        uint64_t v145 = (uint64_t)v253;
LABEL_128:
        sub_251B25BDC((uint64_t)v2, type metadata accessor for RoomType);
        sub_251B25BDC(v145, type metadata accessor for RoomType);
        v144 = v255;
        swift_bridgeObjectRelease();
        uint64_t v148 = v257;
LABEL_77:
        ++v146;
        sub_251B25BDC(v148, type metadata accessor for RoomType);
        uint64_t v126 = v148;
        uint64_t v99 = v258;
        if (v146 != 3) {
          goto LABEL_78;
        }
        swift_bridgeObjectRelease();
        uint64_t v204 = v261;
        int64_t v205 = *(void *)(v261 + 16);
        if (v205)
        {
          v260 = (void *)MEMORY[0x263F8EE78];
          v255 = v144;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_251A3E634(0, v205, 0);
          uint64_t v206 = sub_251A53EB8(v204);
          uint64_t v208 = v207;
          char v210 = v209 & 1;
          do
          {
            if (v210) {
              goto LABEL_155;
            }
            if (v206 < 0 || v206 >= 1 << *(unsigned char *)(v204 + 32)) {
              goto LABEL_146;
            }
            if (((*(void *)(v204 + 56 + (((unint64_t)v206 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v206) & 1) == 0) {
              goto LABEL_147;
            }
            if (*(_DWORD *)(v204 + 36) != v208) {
              goto LABEL_148;
            }
            uint64_t v211 = v235;
            sub_251B25B74(*(void *)(v204 + 48) + *(void *)(v251 + 72) * v206, v235, type metadata accessor for StaticRoom);
            uint64_t v212 = v241;
            sub_251B25C90(v211, v241, type metadata accessor for StaticRoom);
            uint64_t v213 = v244;
            sub_251B25B74(v212, v244, type metadata accessor for StaticRoom);
            v234(v213, 0, 4, v259);
            sub_251B25BDC(v212, type metadata accessor for StaticRoom);
            v214 = v260;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_251A3E634(0, v214[2] + 1, 1);
              v214 = v260;
            }
            unint64_t v216 = v214[2];
            unint64_t v215 = v214[3];
            if (v216 >= v215 >> 1)
            {
              sub_251A3E634(v215 > 1, v216 + 1, 1);
              v214 = v260;
            }
            v214[2] = v216 + 1;
            sub_251B25C90(v244, (uint64_t)v214 + v252 + v216 * v99, type metadata accessor for RoomType);
            uint64_t v217 = sub_251A53F5C(v206, v208, 0, v204);
            uint64_t v206 = v217;
            uint64_t v208 = v218;
            char v210 = v219 & 1;
            --v205;
          }
          while (v205);
          sub_251A4ECE4(v217, v218, v210);
          swift_bridgeObjectRelease();
          v144 = v255;
        }
        else
        {
          swift_bridgeObjectRetain();
          v214 = (void *)MEMORY[0x263F8EE78];
        }
        v260 = v214;
        swift_bridgeObjectRetain();
        sub_251B1EBF4(&v260);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v220 = v260;
        swift_bridgeObjectRelease();
        v260 = v144;
        sub_251ED76D4((uint64_t)v220);
        v221 = v260;
        swift_bridgeObjectRelease();
        return v221;
    }
  }
}

uint64_t sub_251B10BB4(uint64_t a1, uint64_t a2)
{
  uint64_t v57 = a2;
  uint64_t v3 = type metadata accessor for RoomType(0);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v58 = (uint64_t)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v51 - v6;
  uint64_t v8 = type metadata accessor for StaticRoom(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v56 = (uint64_t)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v51 - v13;
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)&v51 - v16;
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v20 = (char *)&v51 - v19;
  uint64_t v21 = MEMORY[0x270FA5388](v18);
  uint64_t v23 = (char *)&v51 - v22;
  MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)&v51 - v24;
  sub_251B25B74(a1, (uint64_t)v7, type metadata accessor for RoomType);
  uint64_t v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (!v26((uint64_t)v7, 4, v8))
  {
    unint64_t v52 = v14;
    uint64_t v53 = v17;
    unint64_t v54 = v20;
    uint64_t v55 = v23;
    sub_251B25C90((uint64_t)v7, (uint64_t)v25, type metadata accessor for StaticRoom);
    uint64_t v28 = v58;
    sub_251B25B74(v57, v58, type metadata accessor for RoomType);
    uint64_t v29 = (uint64_t)v25;
    if (v26(v28, 4, v8))
    {
      sub_251B25BDC((uint64_t)v25, type metadata accessor for StaticRoom);
      uint64_t v27 = v28;
      goto LABEL_5;
    }
    uint64_t v32 = v8;
    uint64_t v33 = v28;
    uint64_t v34 = (uint64_t)v55;
    sub_251B25C90(v33, (uint64_t)v55, type metadata accessor for StaticRoom);
    uint64_t v35 = *(int *)(v8 + 20);
    uint64_t v36 = *(void *)(v29 + v35);
    uint64_t v37 = *(void *)(v29 + v35 + 8);
    uint64_t v38 = (void *)(v34 + v35);
    if (v36 == *v38 && v37 == v38[1])
    {
      uint64_t v41 = (uint64_t)v54;
      sub_251B25B74(v29, (uint64_t)v54, type metadata accessor for StaticRoom);
      uint64_t v42 = (uint64_t)v53;
      sub_251B25B74(v34, (uint64_t)v53, type metadata accessor for StaticRoom);
    }
    else
    {
      char v40 = sub_251F36B10();
      uint64_t v41 = (uint64_t)v54;
      sub_251B25B74(v29, (uint64_t)v54, type metadata accessor for StaticRoom);
      uint64_t v42 = (uint64_t)v53;
      sub_251B25B74(v34, (uint64_t)v53, type metadata accessor for StaticRoom);
      if (v40)
      {
        sub_251B25BDC(v42, type metadata accessor for StaticRoom);
        sub_251B25BDC(v41, type metadata accessor for StaticRoom);
        sub_251B25BDC(v34, type metadata accessor for StaticRoom);
        sub_251B25BDC(v29, type metadata accessor for StaticRoom);
        char v30 = 1;
        return v30 & 1;
      }
    }
    uint64_t v43 = *(int *)(v32 + 20);
    uint64_t v44 = *(void *)(v41 + v43);
    uint64_t v45 = *(void *)(v41 + v43 + 8);
    uint64_t v46 = (void *)(v42 + v43);
    if (v44 == *v46 && v45 == v46[1])
    {
      uint64_t v49 = (uint64_t)v52;
      sub_251B25B74(v41, (uint64_t)v52, type metadata accessor for StaticRoom);
      uint64_t v50 = v56;
      sub_251B25B74(v42, v56, type metadata accessor for StaticRoom);
    }
    else
    {
      char v48 = sub_251F36B10();
      uint64_t v49 = (uint64_t)v52;
      sub_251B25B74(v41, (uint64_t)v52, type metadata accessor for StaticRoom);
      uint64_t v50 = v56;
      sub_251B25B74(v42, v56, type metadata accessor for StaticRoom);
      char v30 = 0;
      if ((v48 & 1) == 0) {
        goto LABEL_22;
      }
    }
    char v30 = MEMORY[0x2533A9CA0](v49, v50);
LABEL_22:
    sub_251B25BDC(v50, type metadata accessor for StaticRoom);
    sub_251B25BDC(v49, type metadata accessor for StaticRoom);
    sub_251B25BDC(v42, type metadata accessor for StaticRoom);
    sub_251B25BDC(v41, type metadata accessor for StaticRoom);
    sub_251B25BDC(v34, type metadata accessor for StaticRoom);
    sub_251B25BDC(v29, type metadata accessor for StaticRoom);
    return v30 & 1;
  }
  uint64_t v27 = (uint64_t)v7;
LABEL_5:
  sub_251B25BDC(v27, type metadata accessor for RoomType);
  char v30 = 1;
  return v30 & 1;
}

void *StateSnapshot.staticCameraProfilesInOrder.getter()
{
  uint64_t v1 = type metadata accessor for StaticHome();
  uint64_t v2 = v1 - 8;
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for StateSnapshot(0);
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = sub_251EDDD80(v6);
  sub_251B25B74(v0 + *(int *)(v5 + 20), (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticHome);
  uint64_t v8 = *(void *)&v4[*(int *)(v2 + 68)];
  swift_bridgeObjectRetain();
  sub_251B25BDC((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticHome);
  uint64_t v9 = sub_251B0DF98((void (*)(char *))sub_251B0D8F0, 0, (void (*)(uint64_t *__return_ptr, unint64_t))sub_251B11214, 0, v8, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_251B11214@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_251B11390(a1, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile, a2);
}

void *StateSnapshot.staticResidentsInOrder.getter()
{
  uint64_t v1 = type metadata accessor for StaticHome();
  uint64_t v2 = v1 - 8;
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for StateSnapshot(0);
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = sub_251EDE8E0(v6);
  sub_251B25B74(v0 + *(int *)(v5 + 20), (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticHome);
  uint64_t v8 = *(void *)&v4[*(int *)(v2 + 80)];
  swift_bridgeObjectRetain();
  sub_251B25BDC((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticHome);
  if (!v8) {
    uint64_t v8 = MEMORY[0x263F8EE78];
  }
  uint64_t v9 = sub_251B0E1DC((void (*)(char *))sub_251B0D8F0, 0, (void (*)(uint64_t *__return_ptr, unint64_t))sub_251B11378, 0, v8, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_251B11378@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_251B11390(a1, (uint64_t (*)(void))type metadata accessor for StaticResident, a2);
}

uint64_t sub_251B11390@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, void *a3@<X8>)
{
  uint64_t v4 = (void *)(a1 + *(int *)(a2(0) + 20));
  uint64_t v5 = v4[1];
  *a3 = *v4;
  a3[1] = v5;
  return swift_bridgeObjectRetain();
}

double StateSnapshot.tileInfo(for:)@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v97 = a2;
  uint64_t v98 = a1;
  uint64_t v79 = type metadata accessor for StaticMediaProfile();
  uint64_t v76 = *(void *)(v79 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v79);
  uint64_t v77 = (uint64_t)&v76 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v78 = (uint64_t)&v76 - v5;
  uint64_t v83 = type metadata accessor for StaticMediaSystem();
  uint64_t v80 = *(void *)(v83 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v83);
  uint64_t v81 = (uint64_t)&v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v82 = (uint64_t)&v76 - v8;
  uint64_t v87 = type metadata accessor for StaticCameraProfile();
  uint64_t v84 = *(void *)(v87 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v87);
  uint64_t v85 = (uint64_t)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v86 = (uint64_t)&v76 - v11;
  uint64_t v91 = type metadata accessor for StaticService();
  uint64_t v88 = *(void *)(v91 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v91);
  uint64_t v89 = (uint64_t)&v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v90 = (uint64_t)&v76 - v14;
  uint64_t v95 = type metadata accessor for StaticServiceGroup();
  uint64_t v92 = *(void *)(v95 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v95);
  uint64_t v93 = (uint64_t)&v76 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v94 = (uint64_t)&v76 - v17;
  uint64_t v18 = type metadata accessor for StaticActionSet();
  uint64_t v96 = *(void *)(v18 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v76 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v76 - v22;
  uint64_t v24 = type metadata accessor for StaticAccessory(0);
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v28 = (char *)&v76 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v26);
  char v30 = (char *)&v76 - v29;
  uint64_t v31 = (int *)type metadata accessor for StateSnapshot(0);
  uint64_t v32 = v2;
  uint64_t v33 = *(void *)(v2 + v31[8]);
  if (*(void *)(v33 + 16) && (unint64_t v34 = sub_2519FE584(v98), (v35 & 1) != 0))
  {
    sub_251B25B74(*(void *)(v33 + 56) + *(void *)(v25 + 72) * v34, (uint64_t)v28, type metadata accessor for StaticAccessory);
    uint64_t v36 = type metadata accessor for StaticAccessory;
    sub_251B25C90((uint64_t)v28, (uint64_t)v30, type metadata accessor for StaticAccessory);
    uint64_t v37 = v97;
    v97[3] = v24;
    v37[4] = sub_251B2485C(&qword_269B9E288, (void (*)(uint64_t))type metadata accessor for StaticAccessory);
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v37);
    uint64_t v39 = (uint64_t)v30;
  }
  else
  {
    uint64_t v40 = *(void *)(v32 + v31[9]);
    uint64_t v41 = v98;
    if (*(void *)(v40 + 16) && (unint64_t v42 = sub_2519FE584(v98), (v43 & 1) != 0))
    {
      sub_251B25B74(*(void *)(v40 + 56) + *(void *)(v96 + 72) * v42, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
      uint64_t v36 = (uint64_t (*)(void))type metadata accessor for StaticActionSet;
      sub_251B25C90((uint64_t)v21, (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
      uint64_t v44 = v97;
      v97[3] = v18;
      v44[4] = sub_251B2485C(&qword_269B9E280, (void (*)(uint64_t))type metadata accessor for StaticActionSet);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v44);
      uint64_t v39 = (uint64_t)v23;
    }
    else
    {
      uint64_t v45 = *(void *)(v32 + v31[14]);
      if (*(void *)(v45 + 16) && (unint64_t v46 = sub_2519FE584(v41), (v47 & 1) != 0))
      {
        uint64_t v48 = *(void *)(v45 + 56);
        uint64_t v49 = v93;
        sub_251B25B74(v48 + *(void *)(v92 + 72) * v46, v93, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
        uint64_t v36 = (uint64_t (*)(void))type metadata accessor for StaticServiceGroup;
        uint64_t v50 = v94;
        sub_251B25C90(v49, v94, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
        uint64_t v51 = v97;
        v97[3] = v95;
        unint64_t v52 = &qword_269B9E278;
        uint64_t v53 = type metadata accessor for StaticServiceGroup;
      }
      else
      {
        uint64_t v54 = *(void *)(v32 + v31[15]);
        if (*(void *)(v54 + 16) && (unint64_t v55 = sub_2519FE584(v41), (v56 & 1) != 0))
        {
          uint64_t v57 = *(void *)(v54 + 56);
          uint64_t v58 = v89;
          sub_251B25B74(v57 + *(void *)(v88 + 72) * v55, v89, (uint64_t (*)(void))type metadata accessor for StaticService);
          uint64_t v36 = (uint64_t (*)(void))type metadata accessor for StaticService;
          uint64_t v50 = v90;
          sub_251B25C90(v58, v90, (uint64_t (*)(void))type metadata accessor for StaticService);
          uint64_t v51 = v97;
          v97[3] = v91;
          unint64_t v52 = &qword_269B9E270;
          uint64_t v53 = type metadata accessor for StaticService;
        }
        else
        {
          uint64_t v59 = *(void *)(v32 + v31[10]);
          if (*(void *)(v59 + 16) && (unint64_t v60 = sub_2519FE584(v41), (v61 & 1) != 0))
          {
            uint64_t v62 = *(void *)(v59 + 56);
            uint64_t v63 = v85;
            sub_251B25B74(v62 + *(void *)(v84 + 72) * v60, v85, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
            uint64_t v36 = (uint64_t (*)(void))type metadata accessor for StaticCameraProfile;
            uint64_t v50 = v86;
            sub_251B25C90(v63, v86, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
            uint64_t v51 = v97;
            v97[3] = v87;
            unint64_t v52 = (unint64_t *)&unk_269B9E268;
            uint64_t v53 = type metadata accessor for StaticCameraProfile;
          }
          else
          {
            uint64_t v64 = *(void *)(v32 + v31[11]);
            if (*(void *)(v64 + 16) && (unint64_t v65 = sub_2519FE584(v41), (v66 & 1) != 0))
            {
              uint64_t v67 = *(void *)(v64 + 56);
              uint64_t v68 = v81;
              sub_251B25B74(v67 + *(void *)(v80 + 72) * v65, v81, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
              uint64_t v36 = (uint64_t (*)(void))type metadata accessor for StaticMediaSystem;
              uint64_t v50 = v82;
              sub_251B25C90(v68, v82, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
              uint64_t v51 = v97;
              v97[3] = v83;
              unint64_t v52 = &qword_269B9E260;
              uint64_t v53 = type metadata accessor for StaticMediaSystem;
            }
            else
            {
              uint64_t v69 = *(void *)(v32 + v31[12]);
              if (!*(void *)(v69 + 16) || (unint64_t v70 = sub_2519FE584(v41), (v71 & 1) == 0))
              {
                uint64_t v75 = v97;
                v97[4] = 0;
                double result = 0.0;
                *(_OWORD *)uint64_t v75 = 0u;
                *((_OWORD *)v75 + 1) = 0u;
                return result;
              }
              uint64_t v72 = *(void *)(v69 + 56) + *(void *)(v76 + 72) * v70;
              uint64_t v73 = v77;
              sub_251B25B74(v72, v77, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
              uint64_t v36 = (uint64_t (*)(void))type metadata accessor for StaticMediaProfile;
              uint64_t v50 = v78;
              sub_251B25C90(v73, v78, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
              uint64_t v51 = v97;
              v97[3] = v79;
              unint64_t v52 = (unint64_t *)&unk_269B9E258;
              uint64_t v53 = type metadata accessor for StaticMediaProfile;
            }
          }
        }
      }
      v51[4] = sub_251B2485C(v52, (void (*)(uint64_t))v53);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v51);
      uint64_t v39 = v50;
    }
  }
  sub_251B25C90(v39, (uint64_t)boxed_opaque_existential_1, v36);
  return result;
}

uint64_t StateSnapshot.accessoryDetails(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v74 = a2;
  uint64_t v5 = type metadata accessor for StaticService();
  uint64_t v70 = *(void *)(v5 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v72 = (uint64_t)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v69 = (uint64_t)&v69 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v71 = (uint64_t)&v69 - v10;
  uint64_t v11 = type metadata accessor for StaticServiceGroup();
  uint64_t v73 = *(uint64_t **)(v11 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)&v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v69 - v15;
  uint64_t v17 = type metadata accessor for StaticAccessory(0);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v17 - 8);
  uint64_t v21 = (char *)&v69 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v19);
  uint64_t v24 = (char *)&v69 - v23;
  MEMORY[0x270FA5388](v22);
  uint64_t v26 = (char *)&v69 - v25;
  uint64_t v27 = (int *)type metadata accessor for StateSnapshot(0);
  uint64_t v28 = *(void *)(v2 + v27[8]);
  if (*(void *)(v28 + 16) && (unint64_t v29 = sub_2519FE584(a1), (v30 & 1) != 0))
  {
    sub_251B25B74(*(void *)(v28 + 56) + *(void *)(v18 + 72) * v29, (uint64_t)v24, type metadata accessor for StaticAccessory);
    sub_251B25C90((uint64_t)v24, (uint64_t)v26, type metadata accessor for StaticAccessory);
    sub_251B25B74((uint64_t)v26, (uint64_t)v21, type metadata accessor for StaticAccessory);
    uint64_t v31 = v74;
    AccessoryDetails.init(_:)((uint64_t)v21, v74);
    sub_251B25BDC((uint64_t)v26, type metadata accessor for StaticAccessory);
    uint64_t v32 = type metadata accessor for AccessoryDetails(0);
    uint64_t v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56);
    uint64_t v34 = v31;
    uint64_t v35 = 0;
  }
  else
  {
    uint64_t v36 = *(void *)(v3 + v27[14]);
    if (*(void *)(v36 + 16))
    {
      unint64_t v37 = sub_2519FE584(a1);
      if (v38)
      {
        sub_251B25B74(*(void *)(v36 + 56) + v73[9] * v37, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
        sub_251B25C90((uint64_t)v14, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
        uint64_t v39 = (int *)type metadata accessor for AccessoryDetails(0);
        uint64_t v40 = v74;
        uint64_t v41 = v74 + v39[5];
        sub_251B25C90((uint64_t)v16, v41, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
        *(unsigned char *)(v40 + v39[7]) = 8;
        sub_251B25B74(v41, v40, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
        type metadata accessor for AccessoryDetails.Payload(0);
        swift_storeEnumTagMultiPayload();
        unint64_t v42 = (int *)type metadata accessor for AccessoryDetailsBasicInfo();
        char v43 = (void *)(v41 + v42[5]);
        *char v43 = 0;
        v43[1] = 0;
        uint64_t v44 = v41 + v42[6];
        uint64_t v45 = type metadata accessor for StaticRoom(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v44, 1, 1, v45);
        unint64_t v46 = (void *)(v41 + v42[7]);
        void *v46 = 0;
        v46[1] = 0;
        *(unsigned char *)(v41 + v42[8]) = 2;
        *(unsigned char *)(v41 + v42[9]) = 2;
        *(unsigned char *)(v41 + v42[10]) = 89;
        swift_storeEnumTagMultiPayload();
        uint64_t v47 = v40 + v39[6];
        uint64_t v48 = type metadata accessor for StaticDeviceMetadata();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v47, 1, 1, v48);
        return (*(uint64_t (**)(uint64_t, void, uint64_t, int *))(*((void *)v39 - 1) + 56))(v40, 0, 1, v39);
      }
    }
    uint64_t v50 = *(void *)(v3 + v27[15]);
    if (*(void *)(v50 + 16) && (unint64_t v51 = sub_2519FE584(a1), (v52 & 1) != 0))
    {
      uint64_t v53 = *(void *)(v50 + 56);
      uint64_t v54 = v69;
      sub_251B25B74(v53 + *(void *)(v70 + 72) * v51, v69, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v55 = v71;
      sub_251B25C90(v54, v71, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v56 = v72;
      sub_251B25B74(v55, v72, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v57 = v74;
      AccessoryDetails.init(_:)(v56, v74);
      sub_251B25BDC(v55, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v32 = type metadata accessor for AccessoryDetails(0);
      uint64_t v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56);
      uint64_t v34 = v57;
      uint64_t v35 = 0;
    }
    else
    {
      if (qword_26B21F2C0 != -1) {
        swift_once();
      }
      uint64_t v58 = sub_251F350A0();
      __swift_project_value_buffer(v58, (uint64_t)qword_26B21F290);
      uint64_t v59 = sub_251F34DA0();
      uint64_t v60 = *(void *)(v59 - 8);
      MEMORY[0x270FA5388](v59);
      uint64_t v62 = (char *)&v69 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))(v62, a1, v59);
      uint64_t v63 = sub_251F35080();
      os_log_type_t v64 = sub_251F35FB0();
      if (os_log_type_enabled(v63, v64))
      {
        uint64_t v65 = swift_slowAlloc();
        uint64_t v66 = swift_slowAlloc();
        uint64_t v76 = v66;
        *(_DWORD *)uint64_t v65 = 136315650;
        uint64_t v75 = sub_251A00E84(0xD000000000000021, 0x8000000251F69DA0, &v76);
        uint64_t v73 = &v69;
        sub_251F361D0();
        *(_WORD *)(v65 + 12) = 2080;
        uint64_t v75 = sub_251A00E84(0xD000000000000016, 0x8000000251F69DD0, &v76);
        sub_251F361D0();
        *(_WORD *)(v65 + 22) = 2080;
        sub_251A1A8EC((unint64_t *)&qword_26B21E6B0);
        uint64_t v67 = sub_251F36AB0();
        uint64_t v75 = sub_251A00E84(v67, v68, &v76);
        sub_251F361D0();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v60 + 8))(v62, v59);
        _os_log_impl(&dword_2519F3000, v63, v64, "%s - %s Could not create AccessoryDetails for uuid: %s", (uint8_t *)v65, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x2533AC760](v66, -1, -1);
        MEMORY[0x2533AC760](v65, -1, -1);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v60 + 8))(v62, v59);
      }

      uint64_t v32 = type metadata accessor for AccessoryDetails(0);
      uint64_t v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56);
      uint64_t v34 = v74;
      uint64_t v35 = 1;
    }
  }
  return v33(v34, v35, 1, v32);
}

uint64_t StateSnapshot.findServiceGroup(with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for StateSnapshot(0);
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_251EDE330(v4);
  swift_bridgeObjectRetain();
  sub_251AF764C(v5, a1, a2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_251B1271C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticService();
  uint64_t v44 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v43 = (uint64_t)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v42 = (uint64_t)&v33 - v7;
  type metadata accessor for StaticServiceGroup();
  uint64_t v8 = swift_bridgeObjectRetain();
  uint64_t v9 = sub_251EDC188(v8);
  int64_t v10 = *(void *)(v9 + 16);
  if (v10)
  {
    uint64_t v34 = a2;
    uint64_t v35 = v2;
    uint64_t v45 = MEMORY[0x263F8EE78];
    sub_251A3E084(0, v10, 0);
    uint64_t v11 = sub_251A53EB8(v9);
    uint64_t v13 = v12;
    char v15 = v14 & 1;
    uint64_t v16 = sub_251F34DA0();
    uint64_t v17 = v16;
    uint64_t v18 = *(void *)(v16 - 8);
    uint64_t v41 = *(void *)(v18 + 64);
    uint64_t v39 = v16;
    uint64_t v40 = v9 + 56;
    unint64_t v37 = (void (**)(char *, uint64_t, uint64_t))(v18 + 16);
    uint64_t v38 = v18;
    uint64_t v36 = v18 + 32;
    while (1)
    {
      uint64_t result = MEMORY[0x270FA5388](v16);
      uint64_t v21 = (char *)&v33 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
      if (v15) {
        break;
      }
      if (v11 < 0 || v11 >= 1 << *(unsigned char *)(v9 + 32))
      {
        __break(1u);
LABEL_17:
        __break(1u);
LABEL_18:
        __break(1u);
        break;
      }
      if (((*(void *)(v40 + (((unint64_t)v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
        goto LABEL_17;
      }
      if (*(_DWORD *)(v9 + 36) != v13) {
        goto LABEL_18;
      }
      uint64_t v22 = v42;
      sub_251B25B74(*(void *)(v9 + 48) + *(void *)(v44 + 72) * v11, v42, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v23 = v22;
      uint64_t v24 = v43;
      sub_251B25C90(v23, v43, (uint64_t (*)(void))type metadata accessor for StaticService);
      (*v37)(v21, v24, v17);
      sub_251B25BDC(v24, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v25 = v45;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_251A3E084(0, *(void *)(v25 + 16) + 1, 1);
        uint64_t v25 = v45;
      }
      unint64_t v27 = *(void *)(v25 + 16);
      unint64_t v26 = *(void *)(v25 + 24);
      if (v27 >= v26 >> 1)
      {
        sub_251A3E084(v26 > 1, v27 + 1, 1);
        uint64_t v25 = v45;
      }
      *(void *)(v25 + 16) = v27 + 1;
      unint64_t v28 = v25
          + ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))
          + *(void *)(v38 + 72) * v27;
      uint64_t v17 = v39;
      (*(void (**)(unint64_t, char *, uint64_t))(v38 + 32))(v28, v21, v39);
      uint64_t v45 = v25;
      uint64_t v16 = sub_251A53F5C(v11, v13, 0, v9);
      uint64_t v11 = v16;
      uint64_t v13 = v29;
      char v15 = v30 & 1;
      if (!--v10)
      {
        sub_251A4ECE4(v16, v29, v30 & 1);
        swift_bridgeObjectRelease();
        a2 = v34;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v25 = MEMORY[0x263F8EE78];
LABEL_15:
    uint64_t v31 = sub_251EE04F8(v25);
    swift_bridgeObjectRelease();
    char v32 = sub_251B04848(v31, a2);
    swift_bridgeObjectRelease();
    return v32 & 1;
  }
  return result;
}

uint64_t StateSnapshot.staticAccessoryServiceCharacteristicTriplets(matching:filterOutHiddenStatusAccessories:)(uint64_t a1, char a2)
{
  type metadata accessor for StateSnapshot(0);
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_251EDCBC8(v4);
  uint64_t v11 = a1;
  v9[16] = a2;
  v9[17] = 0;
  int64_t v10 = &v11;
  uint64_t v6 = sub_251B0A6D4((void (*)(uint64_t *__return_ptr, char *))sub_251B25D18, (uint64_t)v9, v5);
  uint64_t v7 = sub_251EE0F50(v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t StateSnapshot.CharacteristicUpdateType.ValueType.hash(into:)()
{
  uint64_t v1 = *(void *)v0;
  unint64_t v2 = *(void *)(v0 + 8);
  switch(*(unsigned char *)(v0 + 16))
  {
    case 1:
      sub_251F36CB0();
      uint64_t result = sub_251F36CF0();
      break;
    case 2:
      sub_251F36CB0();
      goto LABEL_11;
    case 3:
      sub_251F36CB0();
      uint64_t result = sub_251F357B0();
      break;
    case 4:
      sub_251F36CB0();
      sub_251A1A894(v1, v2);
      sub_251F34C30();
      uint64_t result = sub_251A1AD70(v1, v2, 4);
      break;
    case 5:
LABEL_11:
      uint64_t result = sub_251F36CB0();
      break;
    default:
      sub_251F36CB0();
      uint64_t result = sub_251F36CC0();
      break;
  }
  return result;
}

uint64_t StateSnapshot.CharacteristicUpdateType.ValueType.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t sub_251B12D48()
{
  return sub_251F36D00();
}

uint64_t sub_251B12DA0()
{
  return sub_251F36D00();
}

id sub_251B12DF0()
{
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  switch(*(unsigned char *)(v0 + 16))
  {
    case 1:
      uint64_t v8 = swift_bridgeObjectRetain();
      sub_251ABDB60(v8, (uint64_t)&v22);
      sub_251B286EC(v1, v2, 1u);
      uint64_t v9 = v22;
      if (!v22) {
        return 0;
      }
      sub_251A1A5A4(v23, v24, v25, v26);
      id v10 = objc_msgSend(v9, sel_service);

      if (!v10) {
        return 0;
      }
      id v11 = objc_msgSend(v10, sel_accessory);

      if (!v11) {
        return 0;
      }
      goto LABEL_14;
    case 2:
      uint64_t v12 = swift_bridgeObjectRetain();
      sub_251ABDC6C(v12, (uint64_t)&v22);
      sub_251B286EC(v1, v2, 2u);
      uint64_t v13 = v22;
      if (v22)
      {
        sub_251A1AD70(v23, v24, v25);
        id v14 = objc_msgSend(v13, sel_service);

        if (v14)
        {
          id v11 = objc_msgSend(v14, sel_accessory);

          if (v11) {
            goto LABEL_14;
          }
        }
      }
      return 0;
    case 3:
      uint64_t v15 = swift_bridgeObjectRetain();
      sub_251ABDC6C(v15, (uint64_t)&v22);
      sub_251B286EC(v1, v2, 3u);
      uint64_t v16 = v22;
      if (!v22) {
        return 0;
      }
      sub_251A1AD70(v23, v24, v25);
      id v17 = objc_msgSend(v16, sel_service);

      if (!v17) {
        return 0;
      }
      id v11 = objc_msgSend(v17, sel_accessory);

      if (!v11) {
        return 0;
      }
LABEL_14:
      id v18 = objc_msgSend(v11, sel_home);
LABEL_17:
      id v7 = v18;

      return v7;
    case 4:
      uint64_t v19 = (void *)sub_251ABDD60(*(void *)v0);
      id v20 = objc_msgSend(v19, sel_service);

      id v11 = objc_msgSend(v20, sel_accessory);
      id v18 = objc_msgSend(v11, sel_home);
      goto LABEL_17;
    default:
      uint64_t v3 = swift_bridgeObjectRetain();
      uint64_t v4 = (void *)sub_251ABDB34(v3);
      sub_251B286EC(v1, v2, 0);
      id v5 = objc_msgSend(v4, sel_service);

      id v6 = objc_msgSend(v5, sel_accessory);
      id v7 = objc_msgSend(v6, sel_home);

      return v7;
  }
}

unint64_t StateSnapshot.CharacteristicUpdateType.description.getter()
{
  switch(*(unsigned char *)(v0 + 16))
  {
    case 1:
      sub_251F36400();
      swift_bridgeObjectRelease();
      unint64_t v3 = 0x53676E6964616F6CLL;
      sub_251A1A568(0, (unint64_t *)&qword_26B21F170);
      sub_251AD2B44();
      goto LABEL_9;
    case 2:
      sub_251F36400();
      swift_bridgeObjectRelease();
      unint64_t v1 = 0xD000000000000010;
      goto LABEL_6;
    case 3:
      sub_251F36400();
      swift_bridgeObjectRelease();
      unint64_t v1 = 0xD000000000000015;
LABEL_6:
      unint64_t v3 = v1;
      sub_251A1A568(0, (unint64_t *)&qword_26B21F170);
      sub_251AD2B44();
      goto LABEL_9;
    case 4:
      sub_251F36400();
      swift_bridgeObjectRelease();
      unint64_t v3 = 0xD00000000000001ALL;
      sub_251A1A568(0, (unint64_t *)&qword_26B21F170);
      sub_251AD2B44();
      sub_251F35560();
      sub_251F35800();
      swift_bridgeObjectRelease();
      sub_251F35800();
      sub_251F34DA0();
      sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
LABEL_9:
      sub_251F35560();
      break;
    default:
      unint64_t v3 = 0x3A68736572666572;
      sub_251A1A568(0, (unint64_t *)&qword_26B21F170);
      sub_251AD2B44();
      sub_251F35E50();
      break;
  }
  sub_251F35800();
  swift_bridgeObjectRelease();
  return v3;
}

void StateSnapshot.CharacteristicUpdateType.hash(into:)(long long *a1)
{
  uint64_t v2 = *(void *)v1;
  switch(*(unsigned char *)(v1 + 16))
  {
    case 1:
      sub_251F36CB0();
      sub_251A4C19C((uint64_t)a1, v2);
      break;
    case 2:
    case 3:
      sub_251F36CB0();
      sub_251A4BED8((uint64_t)a1, v2);
      break;
    case 4:
      uint64_t v4 = *(void *)(v1 + 8);
      sub_251F36CB0();
      sub_251A4BED8((uint64_t)a1, v2);
      sub_251A4BA44(a1, v4);
      break;
    default:
      sub_251F36CB0();
      sub_251A5679C((uint64_t)a1, v2);
      break;
  }
}

uint64_t StateSnapshot.CharacteristicUpdateType.hashValue.getter()
{
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  uint64_t v3 = *(unsigned __int8 *)(v0 + 16);
  sub_251F36CA0();
  switch(v3)
  {
    case 1:
      sub_251F36CB0();
      sub_251A4C19C((uint64_t)v5, v1);
      break;
    case 2:
    case 3:
      sub_251F36CB0();
      sub_251A4BED8((uint64_t)v5, v1);
      break;
    case 4:
      sub_251F36CB0();
      sub_251A4BED8((uint64_t)v5, v1);
      sub_251A4BA44(v5, v2);
      break;
    default:
      sub_251F36CB0();
      sub_251A5679C((uint64_t)v5, v1);
      break;
  }
  return sub_251F36D00();
}

void sub_251B13638(long long *a1)
{
  uint64_t v2 = *(void *)v1;
  switch(*(unsigned char *)(v1 + 16))
  {
    case 1:
      sub_251F36CB0();
      sub_251A4C19C((uint64_t)a1, v2);
      break;
    case 2:
    case 3:
      sub_251F36CB0();
      sub_251A4BED8((uint64_t)a1, v2);
      break;
    case 4:
      uint64_t v4 = *(void *)(v1 + 8);
      sub_251F36CB0();
      sub_251A4BED8((uint64_t)a1, v2);
      sub_251A4BA44(a1, v4);
      break;
    default:
      sub_251F36CB0();
      sub_251A5679C((uint64_t)a1, v2);
      break;
  }
}

uint64_t sub_251B13774()
{
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  uint64_t v3 = *(unsigned __int8 *)(v0 + 16);
  sub_251F36CA0();
  switch(v3)
  {
    case 1:
      sub_251F36CB0();
      sub_251A4C19C((uint64_t)v5, v1);
      break;
    case 2:
    case 3:
      sub_251F36CB0();
      sub_251A4BED8((uint64_t)v5, v1);
      break;
    case 4:
      sub_251F36CB0();
      sub_251A4BED8((uint64_t)v5, v1);
      sub_251A4BA44(v5, v2);
      break;
    default:
      sub_251F36CB0();
      sub_251A5679C((uint64_t)v5, v1);
      break;
  }
  return sub_251F36D00();
}

unint64_t StateSnapshot.UpdateType.description.getter()
{
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x270FA5388](updated);
  uint64_t v3 = (char *)&v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251B25B74(v0, (uint64_t)v3, type metadata accessor for StateSnapshot.UpdateType);
  unint64_t v4 = 0xD00000000000001FLL;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v7 = *(void *)v3;
      uint64_t v8 = *((void *)v3 + 1);
      unsigned __int8 v9 = v3[16];
      unint64_t v48 = 0;
      unint64_t v49 = 0xE000000000000000;
      sub_251F36400();
      swift_bridgeObjectRelease();
      unint64_t v51 = 0xD000000000000011;
      unint64_t v52 = 0x8000000251F69F30;
      unint64_t v48 = v7;
      unint64_t v49 = v8;
      unsigned __int8 v50 = v9;
      StateSnapshot.CharacteristicUpdateType.description.getter();
      sub_251F35800();
      swift_bridgeObjectRelease();
      sub_251B286EC(v7, v8, v9);
      return v51;
    case 2u:
      uint64_t v11 = *(void *)v3;
      uint64_t v10 = *((void *)v3 + 1);
      uint64_t v12 = *((void *)v3 + 2);
      unint64_t v48 = 0;
      unint64_t v49 = 0xE000000000000000;
      sub_251F36400();
      swift_bridgeObjectRelease();
      unint64_t v48 = 0xD000000000000015;
      unint64_t v49 = 0x8000000251F69F10;
      uint64_t v13 = sub_251A1A568(0, &qword_26B21EB00);
      MEMORY[0x2533AAA10](v11, v13);
      sub_251F35800();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_251F35800();
      uint64_t v14 = sub_251F34DA0();
      MEMORY[0x2533AAA10](v10, v14);
      sub_251F35800();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_251F35800();
      uint64_t v15 = v12;
      uint64_t v16 = v14;
      goto LABEL_7;
    case 3u:
      uint64_t v17 = *(void *)v3;
      unint64_t v48 = 0;
      unint64_t v49 = 0xE000000000000000;
      sub_251F36400();
      swift_bridgeObjectRelease();
      unint64_t v48 = 0xD000000000000019;
      unint64_t v49 = 0x8000000251F69EF0;
      uint64_t v16 = sub_251A1A568(0, &qword_26B21EB20);
      uint64_t v15 = v17;
LABEL_7:
      MEMORY[0x2533AAA10](v15, v16);
      sub_251F35800();
      swift_bridgeObjectRelease();
      goto LABEL_16;
    case 4u:
      id v18 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_269B9E2A0);
      uint64_t v19 = *(void **)&v3[v18[12]];
      id v20 = *(void **)&v3[v18[16]];
      uint64_t v21 = *(void **)&v3[v18[20]];
      uint64_t v22 = sub_251F34DA0();
      uint64_t v47 = &v45;
      uint64_t v23 = *(void *)(v22 - 8);
      MEMORY[0x270FA5388](v22);
      uint64_t v25 = (char *)&v45 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v25, v3, v22);
      unint64_t v48 = 0;
      unint64_t v49 = 0xE000000000000000;
      sub_251F36400();
      sub_251F35800();
      id v46 = v19;
      if (v19)
      {
        id v26 = objc_msgSend(v19, sel_description);
        uint64_t v27 = sub_251F356F0();
        unint64_t v29 = v28;
      }
      else
      {
        uint64_t v27 = 0;
        unint64_t v29 = 0;
      }
      unint64_t v51 = v27;
      unint64_t v52 = v29;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E2A8);
      sub_251F35770();
      sub_251F35800();
      swift_bridgeObjectRelease();
      sub_251F35800();
      id v45 = v20;
      if (v20)
      {
        id v37 = objc_msgSend(v20, sel_description, v45, v46, v47);
        uint64_t v38 = sub_251F356F0();
        unint64_t v40 = v39;
      }
      else
      {
        uint64_t v38 = 0;
        unint64_t v40 = 0;
      }
      unint64_t v51 = v38;
      unint64_t v52 = v40;
      sub_251F35770();
      sub_251F35800();
      swift_bridgeObjectRelease();
      sub_251F35800();
      if (v21)
      {
        id v41 = objc_msgSend(v21, (SEL)&selRef_releaseNotes);
        uint64_t v42 = sub_251F356F0();
        unint64_t v44 = v43;
      }
      else
      {
        uint64_t v42 = 0;
        unint64_t v44 = 0;
      }
      unint64_t v51 = v42;
      unint64_t v52 = v44;
      sub_251F35770();
      sub_251F35800();
      swift_bridgeObjectRelease();
      sub_251F35800();
      sub_251A1A8EC((unint64_t *)&qword_26B21E6B0);
      sub_251F36AB0();
      sub_251F35800();

      swift_bridgeObjectRelease();
      unint64_t v4 = v48;
      (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
      return v4;
    case 5u:
      char v30 = v3[*(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA1B60) + 48)];
      uint64_t v31 = sub_251F34DA0();
      uint64_t v32 = *(void *)(v31 - 8);
      MEMORY[0x270FA5388](v31);
      uint64_t v34 = (char *)&v45 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v34, v3, v31);
      unint64_t v48 = 0;
      unint64_t v49 = 0xE000000000000000;
      sub_251F36400();
      sub_251F35800();
      LOBYTE(v51) = v30;
      sub_251F36640();
      sub_251F35800();
      sub_251A1A8EC((unint64_t *)&qword_26B21E6B0);
      sub_251F36AB0();
      sub_251F35800();
      swift_bridgeObjectRelease();
      unint64_t v4 = v48;
      (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v31);
      return v4;
    case 6u:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E298);
      unint64_t v48 = 0x73656C69666F7270;
      unint64_t v49 = 0xEA0000000000203ALL;
      uint64_t v35 = sub_251F34DA0();
      sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
      sub_251F35E50();
      goto LABEL_13;
    case 7u:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E290);
      unint64_t v48 = 0;
      unint64_t v49 = 0xE000000000000000;
      sub_251F36400();
      swift_bridgeObjectRelease();
      unint64_t v48 = 0xD00000000000001ALL;
      unint64_t v49 = 0x8000000251F69E70;
      uint64_t v35 = sub_251F34DA0();
      sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
      sub_251F35560();
LABEL_13:
      sub_251F35800();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v4 = v48;
      (*(void (**)(char *, uint64_t))(*(void *)(v35 - 8) + 8))(v3, v35);
      return v4;
    case 8u:
      unint64_t v48 = 0;
      unint64_t v49 = 0xE000000000000000;
      sub_251F36400();
      sub_251F35800();
      swift_bridgeObjectRelease();
      sub_251F35800();
      return v48;
    case 9u:
      return v4;
    default:
      id v5 = *(void **)v3;
      unint64_t v48 = 543976513;
      unint64_t v49 = 0xE400000000000000;
      if (v5)
      {
        id v6 = objc_msgSend(v5, sel_name);
        sub_251F356F0();
      }
      sub_251F35800();

LABEL_16:
      swift_bridgeObjectRelease();
      return v48;
  }
}

HMHome_optional __swiftcall StateSnapshot.UpdateType.relevantHome(in:)(Swift::OpaquePointer in)
{
  uint64_t v2 = v1;
  unint64_t v4 = 0;
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x270FA5388](updated);
  uint64_t v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251B25B74(v2, (uint64_t)v7, type metadata accessor for StateSnapshot.UpdateType);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v10 = *((void *)v7 + 1);
      unsigned __int8 v11 = v7[16];
      v24[0] = *(void *)v7;
      uint64_t v9 = v24[0];
      v24[1] = v10;
      unsigned __int8 v25 = v11;
      unint64_t v4 = (objc_class *)sub_251B12DF0();
      sub_251B286EC(v9, v10, v11);
      break;
    case 2u:
      unint64_t v12 = *(void *)v7;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      unint64_t v4 = (objc_class *)sub_251B282D0((unint64_t)in._rawValue, v12);
      swift_bridgeObjectRelease_n();
      break;
    case 3u:
      sub_251B25BDC((uint64_t)v7, type metadata accessor for StateSnapshot.UpdateType);
      goto LABEL_8;
    case 4u:
      uint64_t v13 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_269B9E2A0);

      goto LABEL_7;
    case 5u:
LABEL_7:
      uint64_t v14 = sub_251F34DA0();
      (*(void (**)(char *, uint64_t))(*(void *)(v14 - 8) + 8))(v7, v14);
LABEL_8:
      unint64_t v4 = 0;
      break;
    case 6u:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E298);
      swift_bridgeObjectRelease();
      uint64_t v15 = sub_251F34DA0();
      uint64_t v16 = *(void *)(v15 - 8);
      MEMORY[0x270FA5388](v15);
      id v18 = (char *)v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v19 = (*(uint64_t (**)(char *, char *, uint64_t))(v16 + 32))(v18, v7, v15);
      MEMORY[0x270FA5388](v19);
      id v20 = &v24[-4];
      v24[-2] = v18;
      goto LABEL_11;
    case 7u:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E290);
      swift_bridgeObjectRelease();
      uint64_t v15 = sub_251F34DA0();
      uint64_t v16 = *(void *)(v15 - 8);
      MEMORY[0x270FA5388](v15);
      id v18 = (char *)v24 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v22 = (*(uint64_t (**)(char *, char *, uint64_t))(v16 + 32))(v18, v7, v15);
      MEMORY[0x270FA5388](v22);
      id v20 = &v24[-4];
      v24[-2] = v18;
LABEL_11:
      unint64_t v4 = (objc_class *)sub_251A95638(sub_251B39310, (uint64_t)v20, (unint64_t)in._rawValue);
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
      break;
    case 8u:
    case 9u:
      break;
    default:
      unint64_t v4 = *(objc_class **)v7;
      break;
  }
  uint64_t v23 = v4;
  result.value.super.isa = v23;
  result.is_nil = v8;
  return result;
}

const char *StateSnapshot.UpdateType.signpostID.getter()
{
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x270FA5388](updated);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251B25B74(v0, (uint64_t)v3, type metadata accessor for StateSnapshot.UpdateType);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  HMHome_optional result = "updateType: .unknownHome";
  switch(EnumCaseMultiPayload)
  {
    case 1:
      uint64_t v6 = *(void *)v3;
      uint64_t v7 = *((void *)v3 + 1);
      switch(v3[16])
      {
        case 1:
          sub_251B286EC(v6, v7, 1u);
          HMHome_optional result = "updateType: .characteristics(.loadingStates(_))";
          break;
        case 2:
          sub_251B286EC(v6, v7, 2u);
          HMHome_optional result = "updateType: .characteristics(.overrideValues(_))";
          break;
        case 3:
          sub_251B286EC(v6, v7, 3u);
          HMHome_optional result = "updateType: .characteristics(.localOverrideValues(_))";
          break;
        case 4:
          sub_251B286EC(v6, v7, 4u);
          HMHome_optional result = "updateType: .characteristics(.statelessValues(_, _))";
          break;
        default:
          sub_251B286EC(v6, v7, 0);
          HMHome_optional result = "updateType: .characteristics(.refresh(_))";
          break;
      }
      break;
    case 2:
      sub_251B25BDC((uint64_t)v3, type metadata accessor for StateSnapshot.UpdateType);
      HMHome_optional result = "updateType: .statelessActionSets(_,on:_,failed:_)";
      break;
    case 3:
      sub_251B25BDC((uint64_t)v3, type metadata accessor for StateSnapshot.UpdateType);
      HMHome_optional result = "updateType: .userActionPredictions(_)";
      break;
    case 4:
      Swift::Bool v8 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_269B9E2A0);

      uint64_t v9 = sub_251F34DA0();
      (*(void (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8))(v3, v9);
      HMHome_optional result = "updateType: .softwareUpdate(uuid: _, update: _, progress: _, documentation: _)";
      break;
    case 5:
      uint64_t v10 = sub_251F34DA0();
      (*(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v3, v10);
      HMHome_optional result = "updateType: .softwareUpdateOverride(uuid: _, state: _)";
      break;
    case 6:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E298);
      swift_bridgeObjectRelease();
      uint64_t v11 = sub_251F34DA0();
      (*(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8))(v3, v11);
      HMHome_optional result = "updateType: .profiles(homeID: _, profiles: _)";
      break;
    case 7:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E290);
      swift_bridgeObjectRelease();
      uint64_t v12 = sub_251F34DA0();
      (*(void (**)(char *, uint64_t))(*(void *)(v12 - 8) + 8))(v3, v12);
      HMHome_optional result = "updateType: .lightProfile(homeID: _, valueUpdates: _)";
      break;
    case 8:
      HMHome_optional result = "updateType: .snapshotStream";
      break;
    case 9:
      return result;
    default:
      sub_251B25BDC((uint64_t)v3, type metadata accessor for StateSnapshot.UpdateType);
      HMHome_optional result = "updateType: .all(_)";
      break;
  }
  return result;
}

const char *StateSnapshot.UpdateType.metricsID.getter()
{
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x270FA5388](updated);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251B25B74(v0, (uint64_t)v3, type metadata accessor for StateSnapshot.UpdateType);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  HMHome_optional result = "StateSnapshot.unknownHome";
  switch(EnumCaseMultiPayload)
  {
    case 1:
      uint64_t v6 = *(void *)v3;
      uint64_t v7 = *((void *)v3 + 1);
      switch(v3[16])
      {
        case 1:
          sub_251B286EC(v6, v7, 1u);
          HMHome_optional result = "StateSnapshot.characteristics.loadingStates";
          break;
        case 2:
          sub_251B286EC(v6, v7, 2u);
          HMHome_optional result = "StateSnapshot.characteristics.overrideValues";
          break;
        case 3:
          sub_251B286EC(v6, v7, 3u);
          HMHome_optional result = "StateSnapshot.characteristics.localOverrideValues";
          break;
        case 4:
          sub_251B286EC(v6, v7, 4u);
          HMHome_optional result = "StateSnapshot.characteristics.statelessValues";
          break;
        default:
          sub_251B286EC(v6, v7, 0);
          HMHome_optional result = "StateSnapshot.characteristics.refresh";
          break;
      }
      break;
    case 2:
      sub_251B25BDC((uint64_t)v3, type metadata accessor for StateSnapshot.UpdateType);
      HMHome_optional result = "StateSnapshot.statelessActionSets";
      break;
    case 3:
      sub_251B25BDC((uint64_t)v3, type metadata accessor for StateSnapshot.UpdateType);
      HMHome_optional result = "StateSnapshot.userActionPredictions";
      break;
    case 4:
      Swift::Bool v8 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_269B9E2A0);

      uint64_t v9 = sub_251F34DA0();
      (*(void (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8))(v3, v9);
      HMHome_optional result = "StateSnapshot.softwareUpdate";
      break;
    case 5:
      uint64_t v10 = sub_251F34DA0();
      (*(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v3, v10);
      HMHome_optional result = "StateSnapshot.softwareUpdateOverride";
      break;
    case 6:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E298);
      swift_bridgeObjectRelease();
      uint64_t v11 = sub_251F34DA0();
      (*(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8))(v3, v11);
      HMHome_optional result = "StateSnapshot.profiles";
      break;
    case 7:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E290);
      swift_bridgeObjectRelease();
      uint64_t v12 = sub_251F34DA0();
      (*(void (**)(char *, uint64_t))(*(void *)(v12 - 8) + 8))(v3, v12);
      HMHome_optional result = "StateSnapshot.lightProfile";
      break;
    case 8:
      HMHome_optional result = "StateSnapshot.snapshotStream";
      break;
    case 9:
      return result;
    default:
      sub_251B25BDC((uint64_t)v3, type metadata accessor for StateSnapshot.UpdateType);
      HMHome_optional result = "StateSnapshot.all";
      break;
  }
  return result;
}

void StateSnapshot.UpdateType.hash(into:)(long long *a1)
{
  uint64_t v2 = v1;
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x270FA5388](updated);
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251B25B74(v2, (uint64_t)v6, type metadata accessor for StateSnapshot.UpdateType);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v10 = *(void *)v6;
      uint64_t v9 = *((void *)v6 + 1);
      uint64_t v11 = v6[16];
      sub_251F36CB0();
      switch(v11)
      {
        case 1:
          sub_251F36CB0();
          sub_251A4C19C((uint64_t)a1, v10);
          sub_251B286EC(v10, v9, 1u);
          break;
        case 2:
          sub_251F36CB0();
          sub_251A4BED8((uint64_t)a1, v10);
          sub_251B286EC(v10, v9, 2u);
          break;
        case 3:
          sub_251F36CB0();
          sub_251A4BED8((uint64_t)a1, v10);
          sub_251B286EC(v10, v9, 3u);
          break;
        case 4:
          sub_251F36CB0();
          sub_251A4BED8((uint64_t)a1, v10);
          sub_251A4BA44(a1, v9);
          sub_251B286EC(v10, v9, 4u);
          break;
        default:
          sub_251F36CB0();
          sub_251A5679C((uint64_t)a1, v10);
          sub_251B286EC(v10, v9, 0);
          break;
      }
      return;
    case 2u:
      uint64_t v12 = *(void *)v6;
      uint64_t v13 = *((void *)v6 + 1);
      uint64_t v14 = *((void *)v6 + 2);
      sub_251F36CB0();
      sub_251A42258(a1, v12);
      swift_bridgeObjectRelease();
      sub_251A41A94((uint64_t)a1, v13);
      swift_bridgeObjectRelease();
      sub_251A41A94((uint64_t)a1, v14);
      swift_bridgeObjectRelease();
      return;
    case 3u:
      uint64_t v15 = *(void *)v6;
      sub_251F36CB0();
      sub_251A42258(a1, v15);
      swift_bridgeObjectRelease();
      return;
    case 4u:
      uint64_t v16 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_269B9E2A0);
      uint64_t v17 = *(void **)&v6[v16[12]];
      id v18 = *(void **)&v6[v16[16]];
      uint64_t v19 = *(void **)&v6[v16[20]];
      uint64_t v20 = sub_251F34DA0();
      uint64_t v21 = *(void *)(v20 - 8);
      MEMORY[0x270FA5388](v20);
      uint64_t v23 = (char *)&v39 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v23, v6, v20);
      sub_251F36CB0();
      sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
      sub_251F35610();
      if (v17)
      {
        sub_251F36CC0();
        id v24 = v17;
        sub_251F36130();

        if (v18) {
          goto LABEL_10;
        }
LABEL_23:
        sub_251F36CC0();
        if (v19) {
          goto LABEL_11;
        }
        goto LABEL_24;
      }
      sub_251F36CC0();
      if (!v18) {
        goto LABEL_23;
      }
LABEL_10:
      sub_251F36CC0();
      id v25 = v18;
      sub_251F36130();

      if (v19)
      {
LABEL_11:
        sub_251F36CC0();
        id v26 = v19;
        sub_251F36130();

        goto LABEL_25;
      }
LABEL_24:
      sub_251F36CC0();
      id v26 = 0;
LABEL_25:

      (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
      return;
    case 5u:
      char v32 = v6[*(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA1B60) + 48)];
      uint64_t v33 = sub_251F34DA0();
      uint64_t v34 = *(void *)(v33 - 8);
      MEMORY[0x270FA5388](v33);
      uint64_t v36 = (char *)&v39 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v36, v6, v33);
      sub_251F36CB0();
      sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
      sub_251F35610();
      if ((v32 - 2) >= 6u) {
        sub_251F36CB0();
      }
      sub_251F36CB0();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v36, v33);
      return;
    case 6u:
      uint64_t v37 = *(void *)&v6[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269B9E298) + 48)];
      uint64_t v28 = sub_251F34DA0();
      uint64_t v29 = *(void *)(v28 - 8);
      MEMORY[0x270FA5388](v28);
      uint64_t v31 = (char *)&v39 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v31, v6, v28);
      sub_251F36CB0();
      sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
      sub_251F35610();
      sub_251A54708(a1, v37);
      goto LABEL_17;
    case 7u:
      uint64_t v27 = *(void *)&v6[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269B9E290) + 48)];
      uint64_t v28 = sub_251F34DA0();
      uint64_t v29 = *(void *)(v28 - 8);
      MEMORY[0x270FA5388](v28);
      uint64_t v31 = (char *)&v39 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v31, v6, v28);
      sub_251F36CB0();
      sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
      sub_251F35610();
      sub_251A4C428(a1, v27);
LABEL_17:
      (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v28);
      swift_bridgeObjectRelease();
      return;
    case 8u:
      sub_251F36CB0();
      goto LABEL_21;
    case 9u:
      sub_251F36CB0();
      return;
    default:
      uint64_t v7 = *(void **)v6;
      sub_251F36CB0();
      if (v7)
      {
        sub_251F36CC0();
        id v8 = v7;
        sub_251F36130();
      }
      else
      {
LABEL_21:
        sub_251F36CC0();
      }
      return;
  }
}

uint64_t StateSnapshot.UpdateType.hashValue.getter()
{
  return sub_251B1561C((void (*)(unsigned char *))StateSnapshot.UpdateType.hash(into:));
}

uint64_t sub_251B1561C(void (*a1)(unsigned char *))
{
  sub_251F36CA0();
  a1(v3);
  return sub_251F36D00();
}

uint64_t sub_251B1566C(uint64_t a1, uint64_t a2)
{
  return sub_251B15684(a1, a2, (void (*)(unsigned char *))StateSnapshot.UpdateType.hash(into:));
}

uint64_t sub_251B15684(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *))
{
  sub_251F36CA0();
  a3(v5);
  return sub_251F36D00();
}

uint64_t sub_251B156D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_251B156E8(a1, a2, a3, (void (*)(unsigned char *))StateSnapshot.UpdateType.hash(into:));
}

uint64_t sub_251B156E8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *))
{
  sub_251F36CA0();
  a4(v6);
  return sub_251F36D00();
}

uint64_t StateSnapshot.init(updateType:homeManager:home:previousStateSnapshot:coverages:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  uint64_t v148 = a1;
  uint64_t v149 = a5;
  uint64_t v154 = a3;
  id v145 = a2;
  uint64_t v141 = a6;
  uint64_t v153 = (char *)type metadata accessor for StaticHome();
  uint64_t v137 = *((void *)v153 - 1);
  uint64_t v7 = MEMORY[0x270FA5388](v153);
  uint64_t v146 = (uint64_t)&v130 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v144 = (uint64_t)&v130 - v10;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v134 = (uint64_t)&v130 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v147 = (uint64_t)&v130 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v130 - v15;
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x270FA5388](updated);
  uint64_t v19 = (char *)&v130 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2203A0);
  uint64_t v21 = MEMORY[0x270FA5388](v20 - 8);
  uint64_t v140 = (uint64_t)&v130 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v139 = (uint64_t)&v130 - v24;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v138 = (uint64_t)&v130 - v26;
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v136 = (uint64_t *)((char *)&v130 - v28);
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v142 = (uint64_t *)((char *)&v130 - v30);
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  uint64_t v133 = ((char *)&v130 - v32);
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  int v135 = ((char *)&v130 - v34);
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  uint64_t v37 = (uint64_t *)((char *)&v130 - v36);
  MEMORY[0x270FA5388](v35);
  uint64_t v39 = (char *)&v130 - v38;
  uint64_t v40 = type metadata accessor for StateSnapshot(0);
  uint64_t v41 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  unint64_t v43 = (uint64_t *)((char *)&v130 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v152 = a4;
  sub_251A1B128(a4, (uint64_t)v39, &qword_26B2203A0);
  unint64_t v44 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48);
  uint64_t v143 = v40;
  v150 = v44;
  uint64_t v151 = v41 + 48;
  if (v44((uint64_t)v39, 1, v40) == 1)
  {
    uint64_t v45 = v148;
    sub_251A1B064((uint64_t)v39, &qword_26B2203A0);
LABEL_3:
    id v46 = v154;
    uint64_t v47 = v144;
    uint64_t v48 = v147;
LABEL_4:
    uint64_t v136 = (void *)sub_251D7AF94(v46);
    id v49 = v145;
    uint64_t v50 = sub_251B1D3D8();
    id v51 = objc_msgSend(v49, sel_homes);
    sub_251A1A568(0, (unint64_t *)&qword_26B21F2D0);
    unint64_t v52 = sub_251F35AC0();

    id v53 = v49;
    uint64_t v54 = sub_251B26EA4(v52, v53);
    int v135 = 0;
    swift_bridgeObjectRelease();
    uint64_t v142 = v53;

    uint64_t v55 = sub_251B0D90C((void (*)(char *))sub_251B0EC78, 0, (void (*)(void *__return_ptr, char *))sub_251C83EB4, 0, v50, v54);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_26B21F2C0 != -1) {
      swift_once();
    }
    uint64_t v56 = sub_251F350A0();
    __swift_project_value_buffer(v56, (uint64_t)qword_26B21F290);
    swift_bridgeObjectRetain_n();
    uint64_t v57 = sub_251F35080();
    int v58 = sub_251F35FD0();
    BOOL v59 = os_log_type_enabled(v57, (os_log_type_t)v58);
    id v145 = v55;
    if (v59)
    {
      int v131 = v58;
      uint64_t v133 = v57;
      uint64_t v60 = (uint8_t *)swift_slowAlloc();
      uint64_t v130 = swift_slowAlloc();
      uint64_t v156 = v130;
      uint64_t v132 = v60;
      *(_DWORD *)uint64_t v60 = 136315138;
      int64_t v61 = v55[2];
      uint64_t v62 = MEMORY[0x263F8EE78];
      if (v61)
      {
        uint64_t v155 = MEMORY[0x263F8EE78];
        sub_251A3DEDC(0, v61, 0);
        uint64_t v63 = (uint64_t)v55
            + ((*(unsigned __int8 *)(v137 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v137 + 80));
        uint64_t v64 = *(void *)(v137 + 72);
        uint64_t v62 = v155;
        do
        {
          sub_251B25B74(v63, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for StaticHome);
          uint64_t v65 = &v16[*((int *)v153 + 5)];
          uint64_t v67 = *(void *)v65;
          uint64_t v66 = *((void *)v65 + 1);
          swift_bridgeObjectRetain();
          sub_251B25BDC((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for StaticHome);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_251A3DEDC(0, *(void *)(v62 + 16) + 1, 1);
            uint64_t v62 = v155;
          }
          unint64_t v69 = *(void *)(v62 + 16);
          unint64_t v68 = *(void *)(v62 + 24);
          if (v69 >= v68 >> 1)
          {
            sub_251A3DEDC(v68 > 1, v69 + 1, 1);
            uint64_t v62 = v155;
          }
          *(void *)(v62 + 16) = v69 + 1;
          unint64_t v70 = v62 + 16 * v69;
          *(void *)(v70 + 32) = v67;
          *(void *)(v70 + 40) = v66;
          v63 += v64;
          --v61;
        }
        while (v61);
        uint64_t v48 = v147;
        uint64_t v45 = v148;
        uint64_t v47 = v144;
      }
      uint64_t v74 = v132;
      uint64_t v155 = v62;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EAB0);
      sub_251A1E590((unint64_t *)&qword_26B21EAB8, &qword_26B21EAB0);
      uint64_t v75 = sub_251F35620();
      unint64_t v77 = v76;
      swift_bridgeObjectRelease();
      uint64_t v155 = sub_251A00E84(v75, v77, &v156);
      sub_251F361D0();
      uint64_t v55 = v145;
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      uint64_t v78 = v133;
      _os_log_impl(&dword_2519F3000, v133, (os_log_type_t)v131, "Homes found: [%s]", v74, 0xCu);
      uint64_t v79 = v130;
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v79, -1, -1);
      MEMORY[0x2533AC760](v74, -1, -1);

      uint64_t v73 = v55[2];
      if (v73)
      {
LABEL_21:
        uint64_t v80 = (uint64_t)v55
            + ((*(unsigned __int8 *)(v137 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v137 + 80));
        uint64_t v81 = *(void *)(v137 + 72);
        swift_bridgeObjectRetain();
        while (1)
        {
          sub_251B25B74(v80, v47, (uint64_t (*)(void))type metadata accessor for StaticHome);
          id v82 = objc_msgSend(v154, sel_uniqueIdentifier);
          uint64_t v83 = sub_251F34DA0();
          uint64_t v84 = *(void *)(v83 - 8);
          MEMORY[0x270FA5388](v83);
          uint64_t v86 = (char *)&v130 - ((v85 + 15) & 0xFFFFFFFFFFFFFFF0);
          sub_251F34D80();

          LOBYTE(v82) = sub_251F34D70();
          (*(void (**)(char *, uint64_t))(v84 + 8))(v86, v83);
          if (v82) {
            break;
          }
          sub_251B25BDC(v47, (uint64_t (*)(void))type metadata accessor for StaticHome);
          v80 += v81;
          if (!--v73)
          {
            swift_bridgeObjectRelease();
            uint64_t v48 = v147;
            uint64_t v45 = v148;
            goto LABEL_25;
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v89 = v134;
        sub_251B25C90(v47, v134, (uint64_t (*)(void))type metadata accessor for StaticHome);
        uint64_t v48 = v147;
        sub_251B25C90(v89, v147, (uint64_t (*)(void))type metadata accessor for StaticHome);
        uint64_t v45 = v148;
        uint64_t v88 = v154;
        goto LABEL_27;
      }
    }
    else
    {

      swift_bridgeObjectRelease_n();
      uint64_t v73 = v55[2];
      if (v73) {
        goto LABEL_21;
      }
    }
LABEL_25:
    uint64_t v87 = v142;
    uint64_t v88 = v154;
    sub_251C7E220(v154, v87, v48);
LABEL_27:
    uint64_t v137 = sub_251AB99BC(v88);
    uint64_t v90 = *((int *)v153 + 10);
    char v91 = *(unsigned char *)(v48 + v90);
    id v92 = objc_msgSend(v88, sel_accessories);
    sub_251A1A568(0, (unint64_t *)&qword_26B21EAF8);
    unint64_t v93 = sub_251F35AC0();

    unint64_t v94 = sub_2519F9B94(MEMORY[0x263F8EE78]);
    uint64_t v95 = MEMORY[0x270FA5388](v94);
    uint64_t v96 = v152;
    uint64_t v97 = (uint64_t)v154;
    *(&v130 - 4) = v152;
    *(&v130 - 3) = v97;
    *((unsigned char *)&v130 - 16) = v91;
    uint64_t v98 = v149;
    *(&v130 - 1) = v149;
    uint64_t v99 = sub_251AF797C(v95, (void (*)(uint64_t *__return_ptr, uint64_t *, id *))sub_251B28748, (uint64_t)(&v130 - 6), v93);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v100 = v154;
    uint64_t v153 = (char *)sub_251E4F318(v45, v154, v99, v98);
    LOBYTE(v156) = *(unsigned char *)(v48 + v90);
    LOBYTE(v92) = v156;
    uint64_t v144 = sub_251DD1B5C(v100, (unsigned __int8 *)&v156, v99);
    LOBYTE(v156) = (_BYTE)v92;
    uint64_t v101 = v138;
    sub_251A1B128(v96, v138, &qword_26B2203A0);
    v102 = (int *)v143;
    if (v150(v101, 1, v143) == 1)
    {
      sub_251A1B064(v101, &qword_26B2203A0);
      unint64_t v103 = sub_2519F9BD0(MEMORY[0x263F8EE78]);
    }
    else
    {
      unint64_t v103 = *(void *)(v101 + v102[18]);
      swift_bridgeObjectRetain();
      sub_251B25BDC(v101, type metadata accessor for StateSnapshot);
    }
    uint64_t v104 = v100;
    uint64_t v105 = (void *)sub_251E15048(v100, (char *)&v156, v99, v103);
    swift_bridgeObjectRelease();
    uint64_t v106 = v147;
    char v107 = *(unsigned char *)(v147 + v90);
    uint64_t v108 = sub_251D57D98(v100, (uint64_t)&v156, (uint64_t)v105);
    LOBYTE(v156) = v107;
    unint64_t v109 = v100;
    uint64_t v110 = v149;
    uint64_t v111 = sub_251DEA04C(v109, (char *)&v156, v105, v149);
    LOBYTE(v156) = v107;
    uint64_t v112 = sub_251D48D2C(v104, (char *)&v156, v105, v110);
    uint64_t v138 = sub_251D0AB74(v104, (uint64_t)v105, v153, v108, v111, v112, v144, v99);
    char v113 = v104;
    uint64_t v114 = v106;
    uint64_t v143 = sub_251C9F4EC(v113);
    sub_251B25B74(v106, v146, (uint64_t (*)(void))type metadata accessor for StaticHome);
    uint64_t v115 = v139;
    sub_251A1B128(v152, v139, &qword_26B2203A0);
    v116 = v102;
    if (v150(v115, 1, (uint64_t)v102) == 1)
    {
      sub_251A1B064(v115, &qword_26B2203A0);
      uint64_t v117 = MEMORY[0x263F8EE78];
    }
    else
    {
      uint64_t v117 = *(void *)(v115 + v102[17]);
      swift_bridgeObjectRetain();
      sub_251B25BDC(v115, type metadata accessor for StateSnapshot);
    }
    uint64_t v118 = v140;
    sub_251A1B128(v152, v140, &qword_26B2203A0);
    if (v150(v118, 1, (uint64_t)v116) == 1)
    {
      sub_251A1B064(v118, &qword_26B2203A0);
      unint64_t v119 = sub_2519F9BD0(MEMORY[0x263F8EE78]);
    }
    else
    {
      unint64_t v119 = *(void *)(v118 + v116[18]);
      swift_bridgeObjectRetain();
      sub_251B25BDC(v118, type metadata accessor for StateSnapshot);
    }

    sub_251A1B064(v152, &qword_26B2203A0);
    sub_251B25BDC(v148, type metadata accessor for StateSnapshot.UpdateType);
    sub_251B25BDC(v114, (uint64_t (*)(void))type metadata accessor for StaticHome);
    v120 = v141;
    *uint64_t v141 = v149;
    uint64_t result = sub_251B25C90(v146, (uint64_t)v120 + v116[5], (uint64_t (*)(void))type metadata accessor for StaticHome);
    *(void *)((char *)v120 + v116[6]) = v145;
    *(void *)((char *)v120 + v116[7]) = v137;
    *(void *)((char *)v120 + v116[8]) = v105;
    *(void *)((char *)v120 + v116[9]) = v153;
    *(void *)((char *)v120 + v116[10]) = v108;
    *(void *)((char *)v120 + v116[11]) = v111;
    *(void *)((char *)v120 + v116[12]) = v112;
    *(void *)((char *)v120 + v116[13]) = v138;
    *(void *)((char *)v120 + v116[14]) = v144;
    *(void *)((char *)v120 + v116[15]) = v99;
    *(void *)((char *)v120 + v116[16]) = v136;
    *(void *)((char *)v120 + v116[17]) = v117;
    *(void *)((char *)v120 + v116[18]) = v119;
    *(void *)((char *)v120 + v116[19]) = v143;
    return result;
  }
  sub_251B25C90((uint64_t)v39, (uint64_t)v43, type metadata accessor for StateSnapshot);
  uint64_t v71 = v148;
  sub_251B25B74(v148, (uint64_t)v19, type metadata accessor for StateSnapshot.UpdateType);
  int v72 = swift_getEnumCaseMultiPayload() - 1;
  id v46 = v154;
  uint64_t v47 = v144;
  uint64_t v48 = v147;
  switch(v72)
  {
    case 0:
      sub_251B286EC(*(void *)v19, *((void *)v19 + 1), v19[16]);
      sub_251B16A48(v71, v46, v43, v37);
      sub_251B25BDC((uint64_t)v43, type metadata accessor for StateSnapshot);
      if (v150((uint64_t)v37, 1, v143) == 1)
      {
        uint64_t v45 = v71;
        sub_251A1B064((uint64_t)v37, &qword_26B2203A0);
        goto LABEL_4;
      }

      swift_bridgeObjectRelease();
      sub_251A1B064(v152, &qword_26B2203A0);
      sub_251B25BDC(v71, type metadata accessor for StateSnapshot.UpdateType);
      uint64_t v128 = (uint64_t)v37;
      return sub_251B25C90(v128, (uint64_t)v141, type metadata accessor for StateSnapshot);
    case 1:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v123 = v135;
      sub_251B17138(v71, (uint64_t)v46, v43, v135);
      goto LABEL_40;
    case 2:
      swift_bridgeObjectRelease();
      uint64_t v123 = v133;
      sub_251B1753C(v71, v43, v133);
LABEL_40:
      sub_251B25BDC((uint64_t)v43, type metadata accessor for StateSnapshot);
      if (v150((uint64_t)v123, 1, v143) == 1)
      {
        uint64_t v45 = v71;
        sub_251A1B064((uint64_t)v123, &qword_26B2203A0);
        goto LABEL_4;
      }

      swift_bridgeObjectRelease();
      sub_251A1B064(v152, &qword_26B2203A0);
      sub_251B25BDC(v71, type metadata accessor for StateSnapshot.UpdateType);
      uint64_t v128 = (uint64_t)v123;
      return sub_251B25C90(v128, (uint64_t)v141, type metadata accessor for StateSnapshot);
    case 3:
      v124 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_269B9E2A0);

      v125 = v142;
      sub_251B17D18(v71, v43, v46, v142);
      goto LABEL_44;
    case 4:
      v125 = v136;
      sub_251B18360(v71, v43, (uint64_t)v154, v136);
LABEL_44:
      sub_251B25BDC((uint64_t)v43, type metadata accessor for StateSnapshot);
      if (v150((uint64_t)v125, 1, v143) == 1)
      {
        uint64_t v126 = v19;
        uint64_t v45 = v71;
        sub_251A1B064((uint64_t)v125, &qword_26B2203A0);
        uint64_t v127 = sub_251F34DA0();
        (*(void (**)(char *, uint64_t))(*(void *)(v127 - 8) + 8))(v126, v127);
        goto LABEL_4;
      }

      swift_bridgeObjectRelease();
      sub_251A1B064(v152, &qword_26B2203A0);
      sub_251B25BDC(v71, type metadata accessor for StateSnapshot.UpdateType);
      sub_251B25C90((uint64_t)v125, (uint64_t)v141, type metadata accessor for StateSnapshot);
      uint64_t v129 = sub_251F34DA0();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v129 - 8) + 8))(v19, v129);
      break;
    default:
      uint64_t v122 = (uint64_t)v19;
      uint64_t v45 = v71;
      sub_251B25BDC((uint64_t)v43, type metadata accessor for StateSnapshot);
      sub_251B25BDC(v122, type metadata accessor for StateSnapshot.UpdateType);
      goto LABEL_3;
  }
  return result;
}

uint64_t sub_251B16A48@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x270FA5388](updated);
  uint64_t v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251B25B74(a1, (uint64_t)v10, type metadata accessor for StateSnapshot.UpdateType);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = *(void *)v10;
    uint64_t v12 = *((void *)v10 + 1);
    unsigned __int8 v13 = v10[16];
    switch(v13)
    {
      case 1u:
        uint64_t v14 = &qword_269B9E310;
        *((void *)&v63 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E310);
        uint64_t v15 = (unint64_t *)&unk_269B9E318;
        break;
      case 2u:
      case 3u:
      case 4u:
        uint64_t v14 = &qword_269B9E300;
        *((void *)&v63 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E300);
        uint64_t v15 = (unint64_t *)&unk_269B9E308;
        break;
      default:
        uint64_t v14 = &qword_269B9E320;
        *((void *)&v63 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E320);
        uint64_t v15 = (unint64_t *)&unk_269B9E328;
        break;
    }
    uint64_t v64 = sub_251A1E590(v15, v14);
    *(void *)&long long v62 = v11;
    swift_bridgeObjectRetain();
    sub_251A1A444(&v62, (uint64_t)&v65);
    sub_251B286EC(v11, v12, v13);
    uint64_t v43 = *((void *)&v66 + 1);
    uint64_t v44 = v67;
    uint64_t v45 = __swift_project_boxed_opaque_existential_1(&v65, *((uint64_t *)&v66 + 1));
    *((void *)&v63 + 1) = v43;
    uint64_t v64 = *(void *)(v44 + 8);
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v62);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v43 - 8) + 16))(boxed_opaque_existential_1, v45, v43);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v65);
    if (!*((void *)&v63 + 1)) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v64 = 0;
    long long v62 = 0u;
    long long v63 = 0u;
    sub_251B25BDC((uint64_t)v10, type metadata accessor for StateSnapshot.UpdateType);
    if (!*((void *)&v63 + 1))
    {
LABEL_13:
      long long v65 = v62;
      long long v66 = v63;
      uint64_t v67 = v64;
LABEL_14:
      long long v59 = v65;
      long long v60 = v66;
      uint64_t v61 = v67;
      if (!*((void *)&v66 + 1)) {
        goto LABEL_15;
      }
      goto LABEL_7;
    }
  }
  sub_251A1A444(&v62, (uint64_t)&v65);
  if (!*((void *)&v66 + 1)) {
    goto LABEL_14;
  }
  sub_251A1A4EC((uint64_t)&v65, (uint64_t)&v59);
  if (!*((void *)&v60 + 1))
  {
LABEL_15:
    if (*((void *)&v66 + 1))
    {
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v65);
      if (*((void *)&v60 + 1)) {
        __swift_destroy_boxed_opaque_existential_0((uint64_t)&v59);
      }
    }
    uint64_t v47 = type metadata accessor for StateSnapshot(0);
    return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(a4, 1, 1, v47);
  }
LABEL_7:
  uint64_t v56 = a4;
  sub_251A1A444(&v59, (uint64_t)&v62);
  uint64_t v16 = *a3;
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_251D90B34((uint64_t)&unk_27025F120, v16);
  swift_arrayDestroy();
  uint64_t v18 = (int *)type metadata accessor for StateSnapshot(0);
  uint64_t v19 = *(uint64_t *)((char *)a3 + v18[8]);
  uint64_t v58 = *(uint64_t *)((char *)a3 + v18[15]);
  *(void *)&long long v59 = v19;
  uint64_t v55 = v64;
  uint64_t v20 = __swift_project_boxed_opaque_existential_1(&v62, *((uint64_t *)&v63 + 1));
  uint64_t v54 = (char *)&v48;
  MEMORY[0x270FA5388](v20);
  uint64_t v21 = a2;
  *(&v48 - 6) = (uint64_t)a3;
  *(&v48 - 5) = a1;
  *(&v48 - 4) = (uint64_t)a2;
  *(&v48 - 3) = v17;
  *(&v48 - 2) = (uint64_t)&v59;
  *(&v48 - 1) = (uint64_t)&v58;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_251F35990();
  uint64_t v22 = v58;
  swift_bridgeObjectRetain();
  uint64_t v55 = v17;
  uint64_t v23 = (char *)sub_251E4F318(a1, a2, v22, v17);
  swift_bridgeObjectRelease();
  uint64_t v24 = (uint64_t)a3 + v18[5];
  uint64_t v25 = *(int *)(type metadata accessor for StaticHome() + 40);
  uint64_t v52 = v24;
  unsigned __int8 v26 = *(unsigned char *)(v24 + v25);
  uint64_t v27 = v59;
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_251D57D98(v21, (uint64_t)v57, v27);
  swift_bridgeObjectRelease();
  v57[0] = v26;
  swift_bridgeObjectRetain();
  uint64_t v29 = sub_251DD1B5C(v21, v57, v22);
  swift_bridgeObjectRelease();
  uint64_t v30 = v18[12];
  uint64_t v31 = *(uint64_t *)((char *)a3 + v18[11]);
  id v51 = a3;
  uint64_t v32 = *(uint64_t *)((char *)a3 + v30);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v54 = v23;
  uint64_t v53 = v28;
  uint64_t v50 = v29;
  uint64_t v49 = sub_251D0AB74(v21, v27, v23, v28, v31, v32, v29, v22);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*((void *)&v66 + 1)) {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v65);
  }
  uint64_t v33 = v56;
  sub_251B25B74(v52, (uint64_t)v56 + v18[5], (uint64_t (*)(void))type metadata accessor for StaticHome);
  uint64_t v34 = *(uint64_t *)((char *)v51 + v18[6]);
  uint64_t v35 = *(uint64_t *)((char *)v51 + v18[7]);
  uint64_t v37 = v58;
  uint64_t v36 = v59;
  uint64_t v38 = *(uint64_t *)((char *)v51 + v18[16]);
  uint64_t v39 = *(uint64_t *)((char *)v51 + v18[17]);
  uint64_t v40 = *(uint64_t *)((char *)v51 + v18[18]);
  uint64_t v41 = *(uint64_t *)((char *)v51 + v18[19]);
  *uint64_t v33 = v55;
  *(uint64_t *)((char *)v33 + v18[6]) = v34;
  *(uint64_t *)((char *)v33 + v18[7]) = v35;
  *(uint64_t *)((char *)v33 + v18[8]) = v36;
  *(uint64_t *)((char *)v33 + v18[9]) = (uint64_t)v54;
  *(uint64_t *)((char *)v33 + v18[10]) = v53;
  *(uint64_t *)((char *)v33 + v18[11]) = v31;
  *(uint64_t *)((char *)v33 + v18[12]) = v32;
  *(uint64_t *)((char *)v33 + v18[13]) = v49;
  *(uint64_t *)((char *)v33 + v18[14]) = v50;
  *(uint64_t *)((char *)v33 + v18[15]) = v37;
  *(uint64_t *)((char *)v33 + v18[16]) = v38;
  *(uint64_t *)((char *)v33 + v18[17]) = v39;
  *(uint64_t *)((char *)v33 + v18[18]) = v40;
  *(uint64_t *)((char *)v33 + v18[19]) = v41;
  (*(void (**)(uint64_t *, void, uint64_t, int *))(*((void *)v18 - 1) + 56))(v33, 0, 1, v18);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)&v62);
}

uint64_t sub_251B17138@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, void *a4@<X8>)
{
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x270FA5388](updated);
  uint64_t v10 = (unint64_t *)((char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_251B25B74(a1, (uint64_t)v10, type metadata accessor for StateSnapshot.UpdateType);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    unint64_t v11 = *v10;
    swift_bridgeObjectRelease();
    uint64_t v12 = swift_bridgeObjectRelease();
    if (v11 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v33 = sub_251F366C0();
      uint64_t v12 = swift_bridgeObjectRelease();
      if (v33) {
        goto LABEL_4;
      }
    }
    else if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_4:
      MEMORY[0x270FA5388](v12);
      *(&v35 - 4) = a1;
      *(&v35 - 3) = (uint64_t)a3;
      *(&v35 - 2) = a2;
      uint64_t v36 = sub_251AA8924(MEMORY[0x263F8EE80], (void (*)(void **, id *))sub_251B2EE94, (uint64_t)(&v35 - 6), v11);
      swift_bridgeObjectRelease();
      uint64_t v13 = *a3;
      uint64_t v14 = (int *)type metadata accessor for StateSnapshot(0);
      sub_251B25B74((uint64_t)a3 + v14[5], (uint64_t)a4 + v14[5], (uint64_t (*)(void))type metadata accessor for StaticHome);
      uint64_t v15 = *(uint64_t *)((char *)a3 + v14[6]);
      uint64_t v16 = *(uint64_t *)((char *)a3 + v14[7]);
      uint64_t v17 = *(uint64_t *)((char *)a3 + v14[8]);
      uint64_t v18 = *(uint64_t *)((char *)a3 + v14[10]);
      uint64_t v19 = *(uint64_t *)((char *)a3 + v14[11]);
      uint64_t v20 = *(uint64_t *)((char *)a3 + v14[12]);
      uint64_t v21 = *(uint64_t *)((char *)a3 + v14[13]);
      uint64_t v22 = v14[15];
      uint64_t v35 = *(uint64_t *)((char *)a3 + v14[14]);
      uint64_t v23 = v35;
      uint64_t v24 = *(uint64_t *)((char *)a3 + v22);
      uint64_t v25 = v14[17];
      uint64_t v26 = *(uint64_t *)((char *)a3 + v14[16]);
      uint64_t v37 = v24;
      uint64_t v38 = v26;
      uint64_t v27 = *(uint64_t *)((char *)a3 + v25);
      uint64_t v28 = v14[19];
      uint64_t v29 = *(uint64_t *)((char *)a3 + v14[18]);
      uint64_t v39 = v27;
      uint64_t v40 = v29;
      uint64_t v30 = *(uint64_t *)((char *)a3 + v28);
      uint64_t v41 = v30;
      *a4 = v13;
      *(void *)((char *)a4 + v14[6]) = v15;
      *(void *)((char *)a4 + v14[7]) = v16;
      *(void *)((char *)a4 + v14[8]) = v17;
      *(void *)((char *)a4 + v14[9]) = v36;
      *(void *)((char *)a4 + v14[10]) = v18;
      *(void *)((char *)a4 + v14[11]) = v19;
      *(void *)((char *)a4 + v14[12]) = v20;
      *(void *)((char *)a4 + v14[13]) = v21;
      *(void *)((char *)a4 + v14[14]) = v23;
      *(void *)((char *)a4 + v14[15]) = v24;
      *(void *)((char *)a4 + v14[16]) = v26;
      *(void *)((char *)a4 + v14[17]) = v27;
      *(void *)((char *)a4 + v14[18]) = v29;
      *(void *)((char *)a4 + v14[19]) = v30;
      (*(void (**)(void *, void, uint64_t, int *))(*((void *)v14 - 1) + 56))(a4, 0, 1, v14);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    sub_251B25B74((uint64_t)a3, (uint64_t)a4, type metadata accessor for StateSnapshot);
    uint64_t v34 = type metadata accessor for StateSnapshot(0);
    return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(a4, 0, 1, v34);
  }
  else
  {
    sub_251B25BDC((uint64_t)v10, type metadata accessor for StateSnapshot.UpdateType);
    uint64_t v32 = type metadata accessor for StateSnapshot(0);
    return (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(a4, 1, 1, v32);
  }
}

uint64_t sub_251B1753C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EA40);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (int *)type metadata accessor for StaticUserActionPrediction();
  uint64_t v63 = *((void *)v9 - 1);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v69 = (uint64_t)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v60 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v62 = (uint64_t)&v60 - v15;
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x270FA5388](updated);
  uint64_t v18 = (unint64_t *)((char *)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_251B25B74(a1, (uint64_t)v18, type metadata accessor for StateSnapshot.UpdateType);
  if (swift_getEnumCaseMultiPayload() != 3)
  {
    sub_251B25BDC((uint64_t)v18, type metadata accessor for StateSnapshot.UpdateType);
    uint64_t v41 = type metadata accessor for StateSnapshot(0);
    return (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(a3, 1, 1, v41);
  }
  unint64_t v19 = *v18;
  if (v19 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_251F366C0();
    long long v60 = a2;
    uint64_t v61 = a3;
    if (v20) {
      goto LABEL_4;
    }
LABEL_23:
    unint64_t v22 = MEMORY[0x263F8EE78];
LABEL_24:
    swift_bridgeObjectRelease_n();
    uint64_t v43 = v60;
    uint64_t v44 = *v60;
    uint64_t v45 = (int *)type metadata accessor for StateSnapshot(0);
    id v46 = v61;
    sub_251B25B74((uint64_t)v43 + v45[5], (uint64_t)v61 + v45[5], (uint64_t (*)(void))type metadata accessor for StaticHome);
    uint64_t v47 = *(void *)((char *)v43 + v45[6]);
    uint64_t v48 = *(void *)((char *)v43 + v45[7]);
    uint64_t v49 = *(void *)((char *)v43 + v45[8]);
    uint64_t v50 = *(void *)((char *)v43 + v45[9]);
    uint64_t v51 = *(void *)((char *)v43 + v45[10]);
    uint64_t v52 = *(void *)((char *)v43 + v45[11]);
    uint64_t v54 = *(void (***)(char *, void, uint64_t, int *))((char *)v43 + v45[13]);
    uint64_t v64 = *(unsigned int (***)(char *, uint64_t, int *))((char *)v43 + v45[12]);
    uint64_t v53 = v64;
    long long v65 = v54;
    uint64_t v56 = *(void *)((char *)v43 + v45[15]);
    unint64_t v66 = *(void *)((char *)v43 + v45[14]);
    unint64_t v55 = v66;
    uint64_t v67 = v56;
    uint64_t v58 = *(void *)((char *)v43 + v45[18]);
    uint64_t v59 = *(void *)((char *)v43 + v45[19]);
    uint64_t v68 = *(void *)((char *)v43 + v45[16]);
    uint64_t v57 = v68;
    uint64_t v69 = v59;
    void *v46 = v44;
    *(void *)((char *)v46 + v45[6]) = v47;
    *(void *)((char *)v46 + v45[7]) = v48;
    *(void *)((char *)v46 + v45[8]) = v49;
    *(void *)((char *)v46 + v45[9]) = v50;
    *(void *)((char *)v46 + v45[10]) = v51;
    *(void *)((char *)v46 + v45[11]) = v52;
    *(void *)((char *)v46 + v45[12]) = v53;
    *(void *)((char *)v46 + v45[13]) = v54;
    *(void *)((char *)v46 + v45[14]) = v55;
    *(void *)((char *)v46 + v45[15]) = v56;
    *(void *)((char *)v46 + v45[16]) = v57;
    *(void *)((char *)v46 + v45[17]) = v22;
    *(void *)((char *)v46 + v45[18]) = v58;
    *(void *)((char *)v46 + v45[19]) = v59;
    (*(void (**)(void *, void, uint64_t, int *))(*((void *)v45 - 1) + 56))(v46, 0, 1, v45);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  uint64_t v20 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  long long v60 = a2;
  uint64_t v61 = a3;
  if (!v20) {
    goto LABEL_23;
  }
LABEL_4:
  if (v20 < 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v21 = 0;
    long long v65 = (void (**)(char *, void, uint64_t, int *))(v63 + 56);
    unint64_t v66 = v19 & 0xC000000000000001;
    uint64_t v64 = (unsigned int (**)(char *, uint64_t, int *))(v63 + 48);
    unint64_t v22 = MEMORY[0x263F8EE78];
    uint64_t v23 = &qword_26B21FF90;
    uint64_t v67 = v20;
    uint64_t v68 = v19;
    while (1)
    {
      id v24 = v66 ? (id)MEMORY[0x2533AB3A0](v21, v19) : *(id *)(v19 + 8 * v21 + 32);
      id v25 = v24;
      id v26 = objc_msgSend(v25, sel_predictionTargetUUID);
      sub_251F34D80();

      objc_msgSend(v25, sel_predictionScore);
      *(void *)&v14[v9[5]] = v27;
      id v28 = objc_msgSend(v25, sel_targetServiceUUID);
      uint64_t v29 = v23;
      uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(v23);
      MEMORY[0x270FA5388](v30 - 8);
      uint64_t v32 = (char *)&v60 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
      if (v28)
      {
        sub_251F34D80();

        uint64_t v33 = sub_251F34DA0();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v32, 0, 1, v33);
      }
      else
      {
        uint64_t v34 = sub_251F34DA0();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v32, 1, 1, v34);
      }
      uint64_t v35 = (uint64_t)v32;
      uint64_t v23 = v29;
      sub_251A4ECF0(v35, (uint64_t)&v14[v9[6]], v29);
      id v36 = objc_msgSend(v25, sel_predictionType);
      if ((unint64_t)v36 >= 5) {
        break;
      }
      char v37 = (char)v36;

      v14[v9[7]] = v37;
      sub_251B25C90((uint64_t)v14, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticUserActionPrediction);
      (*v65)(v8, 0, 1, v9);

      if ((*v64)(v8, 1, v9) == 1)
      {
        sub_251A1B064((uint64_t)v8, &qword_26B21EA40);
      }
      else
      {
        uint64_t v38 = v62;
        sub_251B25C90((uint64_t)v8, v62, (uint64_t (*)(void))type metadata accessor for StaticUserActionPrediction);
        sub_251B25C90(v38, v69, (uint64_t (*)(void))type metadata accessor for StaticUserActionPrediction);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v22 = sub_251F0F474(0, *(void *)(v22 + 16) + 1, 1, v22);
        }
        unint64_t v40 = *(void *)(v22 + 16);
        unint64_t v39 = *(void *)(v22 + 24);
        if (v40 >= v39 >> 1) {
          unint64_t v22 = sub_251F0F474(v39 > 1, v40 + 1, 1, v22);
        }
        *(void *)(v22 + 16) = v40 + 1;
        sub_251B25C90(v69, v22+ ((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80))+ *(void *)(v63 + 72) * v40, (uint64_t (*)(void))type metadata accessor for StaticUserActionPrediction);
      }
      unint64_t v19 = v68;
      if (v67 == ++v21) {
        goto LABEL_24;
      }
    }
  }
  uint64_t result = sub_251F36680();
  __break(1u);
  return result;
}

uint64_t sub_251B17D18@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
  uint64_t v62 = a2;
  id v63 = a3;
  uint64_t v64 = a4;
  long long v65 = (char *)a1;
  uint64_t v61 = type metadata accessor for StaticSoftwareUpdate(0);
  MEMORY[0x270FA5388](v61);
  uint64_t v5 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for StaticHH2Update(0);
  uint64_t v60 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F0A8);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v53 - v13;
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x270FA5388](updated);
  uint64_t v17 = (char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_251F34DA0();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v53 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251B25B74((uint64_t)v65, (uint64_t)v17, type metadata accessor for StateSnapshot.UpdateType);
  if (swift_getEnumCaseMultiPayload() != 4)
  {
    sub_251B25BDC((uint64_t)v17, type metadata accessor for StateSnapshot.UpdateType);
LABEL_8:
    uint64_t v41 = type metadata accessor for StateSnapshot(0);
    uint64_t v42 = v41;
    return (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v64, 1, 1, v41);
  }
  uint64_t v58 = v14;
  uint64_t v59 = v6;
  long long v65 = v12;
  unint64_t v55 = v8;
  uint64_t v56 = v5;
  unint64_t v22 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_269B9E2A0);
  uint64_t v23 = *(void **)&v17[v22[12]];
  id v24 = *(void **)&v17[v22[16]];
  id v25 = *(void **)&v17[v22[20]];
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v21, v17, v18);
  id v26 = objc_msgSend(v63, sel_accessories);
  sub_251A1A568(0, (unint64_t *)&qword_26B21EAF8);
  unint64_t v27 = sub_251F35AC0();

  MEMORY[0x270FA5388](v28);
  *(&v53 - 2) = (uint64_t)v21;
  uint64_t v29 = sub_251A95638(sub_251B2EEB4, (uint64_t)(&v53 - 4), v27);
  swift_bridgeObjectRelease();
  uint64_t v30 = v19;
  if (!v29)
  {

    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    goto LABEL_8;
  }
  uint64_t v31 = v25;
  uint64_t v32 = type metadata accessor for StateSnapshot(0);
  uint64_t v33 = *(void *)((char *)v62 + *(int *)(v32 + 72));
  uint64_t v34 = *(void *)(v33 + 16);
  uint64_t v57 = v21;
  uint64_t v53 = v32;
  uint64_t v54 = v18;
  uint64_t v35 = v23;
  if (v34)
  {
    unint64_t v36 = sub_2519FE584((uint64_t)v21);
    uint64_t v37 = (uint64_t)v58;
    uint64_t v38 = v60;
    if (v39)
    {
      sub_251B25B74(*(void *)(v33 + 56) + *(void *)(v60 + 72) * v36, (uint64_t)v58, type metadata accessor for StaticHH2Update);
      uint64_t v40 = 0;
    }
    else
    {
      uint64_t v40 = 1;
    }
  }
  else
  {
    uint64_t v40 = 1;
    uint64_t v37 = (uint64_t)v58;
    uint64_t v38 = v60;
  }
  uint64_t v44 = v59;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 56))(v37, v40, 1, v59);
  uint64_t v45 = (uint64_t)v65;
  id v46 = v31;
  sub_251B1ADD4(v37, v35, v31, v29, v24, (uint64_t)v65);
  int v47 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v45, 1, v44);
  uint64_t v48 = v61;
  if (v47 != 1)
  {
    uint64_t v49 = v45;
    uint64_t v50 = (uint64_t)v55;
    sub_251B25C90(v49, (uint64_t)v55, type metadata accessor for StaticHH2Update);
    uint64_t v51 = (uint64_t)v56;
    uint64_t v52 = v54;
    (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v56, v57, v54);
    sub_251B25B74(v50, v51 + *(int *)(v48 + 20), type metadata accessor for StaticHH2Update);
    type metadata accessor for StaticSoftwareUpdate.Kind(0);
    swift_storeEnumTagMultiPayload();
    sub_251B1B268(v51, v62, v64);

    sub_251B25BDC(v51, type metadata accessor for StaticSoftwareUpdate);
    sub_251B25BDC(v50, type metadata accessor for StaticHH2Update);
    sub_251A1B064(v37, &qword_26B21F0A8);
    return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v57, v52);
  }
  sub_251A1B064(v37, &qword_26B21F0A8);

  (*(void (**)(char *, uint64_t))(v30 + 8))(v57, v54);
  sub_251A1B064(v45, &qword_26B21F0A8);
  uint64_t v41 = v53;
  uint64_t v42 = v53;
  return (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v64, 1, 1, v41);
}

uint64_t sub_251B18360@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v44 = a3;
  int v47 = a2;
  uint64_t v48 = a4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E338);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v43 = &v39[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for StaticAccessory(0);
  uint64_t v45 = *(void *)(v7 - 8);
  uint64_t v46 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = &v39[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = &v39[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = type metadata accessor for StaticSoftwareUpdate(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v42 = &v39[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v15);
  uint64_t v41 = &v39[-v17];
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x270FA5388](updated);
  uint64_t v20 = &v39[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v21 = sub_251F34DA0();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  id v24 = &v39[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_251B25B74(a1, (uint64_t)v20, type metadata accessor for StateSnapshot.UpdateType);
  if (swift_getEnumCaseMultiPayload() == 5)
  {
    id v25 = v48;
    int v40 = v20[*(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA1B60) + 48)];
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v22 + 32))(v24, v20, v21);
    uint64_t v26 = type metadata accessor for StateSnapshot(0);
    uint64_t v27 = *(void *)((char *)v47 + *(int *)(v26 + 32));
    if (*(void *)(v27 + 16) && (unint64_t v28 = sub_2519FE584((uint64_t)v24), (v29 & 1) != 0))
    {
      sub_251B25B74(*(void *)(v27 + 56) + *(void *)(v45 + 72) * v28, (uint64_t)v9, type metadata accessor for StaticAccessory);
      sub_251A1B128((uint64_t)&v9[*(int *)(v46 + 112)], (uint64_t)v12, &qword_26B21F120);
      sub_251B25BDC((uint64_t)v9, type metadata accessor for StaticAccessory);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) != 1)
      {
        uint64_t v30 = v41;
        sub_251B25C90((uint64_t)v12, (uint64_t)v41, type metadata accessor for StaticSoftwareUpdate);
        uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
        MEMORY[0x270FA5388](v31 - 8);
        uint64_t v33 = &v39[-((v32 + 15) & 0xFFFFFFFFFFFFFFF0)];
        (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v33, 1, 1, v21);
        unsigned __int8 v49 = v40;
        uint64_t v34 = v43;
        sub_251C38730(&v49, (uint64_t)v43);
        uint64_t v35 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v34, 0, 1, v35);
        unint64_t v36 = v42;
        sub_251C389C0((uint64_t)v33, (uint64_t)v34, (uint64_t)v42);
        sub_251A1B064((uint64_t)v34, &qword_269B9E338);
        sub_251A1B064((uint64_t)v33, &qword_26B21FF90);
        sub_251B1B268((uint64_t)v36, v47, v25);
        sub_251B25BDC((uint64_t)v36, type metadata accessor for StaticSoftwareUpdate);
        sub_251B25BDC((uint64_t)v30, type metadata accessor for StaticSoftwareUpdate);
        return (*(uint64_t (**)(unsigned char *, uint64_t))(v22 + 8))(v24, v21);
      }
    }
    else
    {
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
    }
    (*(void (**)(unsigned char *, uint64_t))(v22 + 8))(v24, v21);
    sub_251A1B064((uint64_t)v12, &qword_26B21F120);
    return (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v25, 1, 1, v26);
  }
  else
  {
    sub_251B25BDC((uint64_t)v20, type metadata accessor for StateSnapshot.UpdateType);
    uint64_t v38 = type metadata accessor for StateSnapshot(0);
    return (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v48, 1, 1, v38);
  }
}

void sub_251B189A0(id *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7)
{
  uint64_t v196 = a6;
  uint64_t v195 = a5;
  uint64_t v194 = a3;
  uint64_t v210 = a2;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v189 = (char *)&v170 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v199 = (uint64_t)&v170 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F090);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v198 = (uint64_t)&v170 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x270FA5388](updated);
  uint64_t v19 = (char *)&v170 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F240);
  uint64_t v21 = MEMORY[0x270FA5388](v20 - 8);
  uint64_t v204 = (uint64_t)&v170 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  id v24 = (char *)&v170 - v23;
  uint64_t v205 = type metadata accessor for StaticAccessory(0);
  uint64_t v25 = *(void *)(v205 - 8);
  uint64_t v26 = MEMORY[0x270FA5388](v205);
  uint64_t v197 = (uint64_t)&v170 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v203 = (uint64_t)&v170 - v29;
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v209 = (uint64_t)&v170 - v31;
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  uint64_t v192 = (uint64_t)&v170 - v33;
  MEMORY[0x270FA5388](v32);
  uint64_t v191 = (uint64_t)&v170 - v34;
  id v35 = objc_msgSend(*a1, sel_service);
  if (v35)
  {
    unint64_t v36 = v35;
    v187 = a7;
    uint64_t v202 = v7;
    uint64_t v37 = (uint64_t *)objc_msgSend(v35, sel_accessory);

    if (v37)
    {
      uint64_t v201 = v25;
      uint64_t v224 = type metadata accessor for StateSnapshot(0);
      uint64_t v208 = *(int *)(v224 + 32);
      uint64_t v38 = *(void *)(v210 + v208);
      id v39 = objc_msgSend(v37, sel_uniqueIdentifier);
      uint64_t v221 = sub_251F34DA0();
      v214 = *(void **)(v221 - 8);
      MEMORY[0x270FA5388](v221);
      uint64_t v227 = v40;
      uint64_t v41 = (char *)&v170 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_251F34D80();

      uint64_t v42 = *(void *)(v38 + 16);
      unint64_t v225 = a4;
      if (v42 && (unint64_t v43 = sub_2519FE584((uint64_t)v41), (v44 & 1) != 0))
      {
        uint64_t v45 = v201;
        sub_251B25B74(*(void *)(v38 + 56) + *(void *)(v201 + 72) * v43, (uint64_t)v24, type metadata accessor for StaticAccessory);
        uint64_t v46 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v45 + 56);
        int v47 = v24;
        uint64_t v48 = 0;
      }
      else
      {
        uint64_t v45 = v201;
        uint64_t v46 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v201 + 56);
        int v47 = v24;
        uint64_t v48 = 1;
      }
      uint64_t v49 = v205;
      uint64_t v190 = v46;
      v46((uint64_t)v47, v48, 1, v205);
      uint64_t v50 = v41;
      uint64_t v51 = v214 + 1;
      uint64_t v228 = (void (*)(char *, uint64_t))v214[1];
      v228(v50, v221);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v24, 1, v49) == 1)
      {

        sub_251A1B064((uint64_t)v24, &qword_26B21F240);
        return;
      }
      uint64_t v226 = v51;
      uint64_t v52 = v191;
      sub_251B25C90((uint64_t)v24, v191, type metadata accessor for StaticAccessory);
      uint64_t v53 = (uint64_t *)v224;
      uint64_t v54 = v210 + *(int *)(v224 + 20);
      uint64_t v55 = *(int *)(type metadata accessor for StaticHome() + 40);
      uint64_t v186 = v54;
      uint64_t v185 = v55;
      LOBYTE(v231) = *(unsigned char *)(v54 + v55);
      uint64_t v56 = v204;
      sub_251B25B74(v52, v204, type metadata accessor for StaticAccessory);
      uint64_t v188 = v45 + 56;
      v190(v56, 0, 1, v49);
      uint64_t v57 = v194;
      uint64_t v58 = (void *)v225;
      uint64_t v59 = sub_251DC9944(v194, v225, v37, (char *)&v231, 1, v56, v195);
      sub_251A1B064(v56, &qword_26B21F240);
      uint64_t v231 = v59;
      sub_251B25B74(v57, (uint64_t)v19, type metadata accessor for StateSnapshot.UpdateType);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v60 = *((void *)v19 + 1);
        int v61 = v19[16];
        uint64_t v62 = v221;
        if (v61 == 4)
        {
          swift_bridgeObjectRelease();
          id v63 = objc_msgSend(v37, sel_uniqueIdentifier);
          MEMORY[0x270FA5388](v63);
          long long v65 = (char *)&v170 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
          sub_251F34D80();

          if (*(void *)(v60 + 16))
          {
            unint64_t v66 = sub_2519FE584((uint64_t)v65);
            if (v67)
            {
              LODWORD(v19) = *(unsigned __int8 *)(*(void *)(v60 + 56) + v66);
              swift_bridgeObjectRelease();
              v228(v65, v62);
              if (qword_269B9C2E0 != -1) {
                goto LABEL_76;
              }
              goto LABEL_15;
            }
          }
          swift_bridgeObjectRelease();
          v228(v65, v62);
          LODWORD(v19) = 2;
        }
        else
        {
          sub_251B286EC(*(void *)v19, *((void *)v19 + 1), v61);
          LODWORD(v19) = 2;
        }
        uint64_t v58 = (void *)v225;
      }
      else
      {
        sub_251B25BDC((uint64_t)v19, type metadata accessor for StateSnapshot.UpdateType);
        LODWORD(v19) = 2;
      }
LABEL_22:
      id v75 = v58;
      unint64_t v76 = v37;
      id v77 = objc_msgSend(v76, sel_room);
      if (!v77) {
        id v77 = objc_msgSend(v75, sel_roomForEntireHome);
      }
      LOBYTE(v230) = *(unsigned char *)(v186 + v185);
      uint64_t v78 = v231;
      uint64_t v79 = *(void *)(v210 + *((int *)v53 + 18));
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v80 = v192;
      id v193 = v75;
      sub_251DFAA18((char *)v76, v75, v77, (int)v19, (unsigned __int8 *)&v230, v78, v79, v192);
      uint64_t v175 = v76;
      id v81 = objc_msgSend(v76, sel_uniqueIdentifier);
      uint64_t v82 = v227;
      MEMORY[0x270FA5388](v81);
      unint64_t v83 = (v82 + 15) & 0xFFFFFFFFFFFFFFF0;
      sub_251F34D80();

      uint64_t v84 = v204;
      sub_251BB83B4((uint64_t)&v170 - v83, v204);
      uint64_t v85 = v221;
      v228((char *)&v170 - v83, v221);
      uint64_t v86 = sub_251A1B064(v84, &qword_26B21F240);
      MEMORY[0x270FA5388](v86);
      uint64_t v87 = (char *)&v170 - v83;
      uint64_t v88 = v214 + 2;
      uint64_t v212 = (void (*)(char *, uint64_t, uint64_t))v214[2];
      v212(v87, v80, v85);
      uint64_t v89 = v80;
      uint64_t v90 = v85;
      sub_251B25B74(v89, v84, type metadata accessor for StaticAccessory);
      v190(v84, 0, 1, v205);
      sub_2519F77D8(v84, (uint64_t)v87);
      uint64_t v91 = v231;
      uint64_t v92 = *(void *)(v231 + 64);
      uint64_t v200 = v231 + 64;
      uint64_t v93 = 1 << *(unsigned char *)(v231 + 32);
      uint64_t v94 = -1;
      if (v93 < 64) {
        uint64_t v94 = ~(-1 << v93);
      }
      unint64_t v225 = v94 & v92;
      uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E660);
      char v174 = &v170;
      MEMORY[0x270FA5388](v95 - 8);
      unint64_t v217 = (v96 + 15) & 0xFFFFFFFFFFFFFFF0;
      uint64_t v218 = v96;
      uint64_t v19 = (char *)&v170 - v217;
      unint64_t v97 = (unint64_t)(v93 + 63) >> 6;
      unint64_t v215 = (unsigned int (**)(char *, uint64_t, uint64_t))(v88 + 4);
      uint64_t v207 = (void (**)(char *, char *, uint64_t))(v88 + 2);
      uint64_t v213 = v88;
      uint64_t v176 = (uint64_t (**)(void))(v88 + 5);
      uint64_t v171 = v97 - 1;
      uint64_t v98 = swift_bridgeObjectRetain();
      int64_t v206 = v97;
      unint64_t v173 = v97 - 5;
      uint64_t v211 = v91;
      uint64_t v172 = v91 + 104;
      uint64_t v53 = &qword_26B21E658;
      char v219 = v19;
LABEL_29:
      while (1)
      {
        uint64_t v37 = &v170;
        MEMORY[0x270FA5388](v98);
        uint64_t v101 = (char *)&v170 - v217;
        if (v225) {
          break;
        }
        uint64_t v108 = v100 + 1;
        if (__OFADD__(v100, 1)) {
          goto LABEL_75;
        }
        if (v108 >= v206)
        {
          uint64_t v224 = v100;
        }
        else
        {
          unint64_t v109 = *(void *)(v200 + 8 * v108);
          if (v109) {
            goto LABEL_35;
          }
          if (v100 + 2 >= v206)
          {
            uint64_t v224 = v100 + 1;
          }
          else
          {
            unint64_t v109 = *(void *)(v200 + 8 * (v100 + 2));
            if (v109)
            {
              uint64_t v108 = v100 + 2;
              goto LABEL_35;
            }
            if (v100 + 3 >= v206)
            {
              uint64_t v224 = v100 + 2;
            }
            else
            {
              unint64_t v109 = *(void *)(v200 + 8 * (v100 + 3));
              if (v109)
              {
                uint64_t v108 = v100 + 3;
LABEL_35:
                uint64_t v224 = v108;
                unint64_t v225 = (v109 - 1) & v109;
                unint64_t v103 = __clz(__rbit64(v109)) + (v108 << 6);
LABEL_31:
                uint64_t v104 = v211;
                v212((char *)&v170 - v217, *(void *)(v211 + 48) + v214[9] * v103, v90);
                uint64_t v105 = *(void *)(v104 + 56);
                uint64_t v106 = v105 + *(void *)(*(void *)(type metadata accessor for StaticService() - 8) + 72) * v103;
                uint64_t v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E658);
                sub_251B25B74(v106, (uint64_t)&v101[*(int *)(v107 + 48)], (uint64_t (*)(void))type metadata accessor for StaticService);
                (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v107 - 8) + 56))(v101, 0, 1, v107);
                goto LABEL_38;
              }
              uint64_t v108 = v100 + 4;
              if (v100 + 4 >= v206)
              {
                uint64_t v224 = v100 + 3;
              }
              else
              {
                unint64_t v109 = *(void *)(v200 + 8 * v108);
                if (v109) {
                  goto LABEL_35;
                }
                while (v173 != v100)
                {
                  unint64_t v109 = *(void *)(v172 + 8 * v100++);
                  if (v109)
                  {
                    uint64_t v108 = v100 + 4;
                    goto LABEL_35;
                  }
                }
                uint64_t v224 = v171;
              }
            }
          }
        }
        uint64_t v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E658);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v110 - 8) + 56))(v101, 1, 1, v110);
        unint64_t v225 = 0;
LABEL_38:
        sub_251A4ECF0((uint64_t)v101, (uint64_t)v19, &qword_26B21E660);
        uint64_t v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E658);
        uint64_t v112 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v111 - 8) + 48))(v19, 1, v111);
        if (v112 == 1)
        {
          swift_release();
          uint64_t v162 = v191;
          uint64_t v163 = swift_bridgeObjectRetain();
          uint64_t v164 = v187;
          sub_251AF8034(v163, v187);
          swift_bridgeObjectRelease();
          uint64_t v165 = *v164;
          swift_bridgeObjectRetain();
          uint64_t v166 = swift_bridgeObjectRetain();
          uint64_t v167 = sub_251B0B198(v166, v165);

          sub_251B25BDC(v192, type metadata accessor for StaticAccessory);
          sub_251B25BDC(v162, type metadata accessor for StaticAccessory);
          *uint64_t v164 = v167;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return;
        }
        uint64_t v223 = &v170;
        uint64_t v113 = (uint64_t)&v19[*(int *)(v111 + 48)];
        MEMORY[0x270FA5388](v112);
        uint64_t v115 = (char *)&v170 - ((v114 + 15) & 0xFFFFFFFFFFFFFFF0);
        uint64_t v116 = v113 + *(int *)(type metadata accessor for StaticService() + 132);
        uint64_t v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
        MEMORY[0x270FA5388](v117 - 8);
        uint64_t v216 = v118;
        unint64_t v119 = (char *)&v170 - ((v118 + 15) & 0xFFFFFFFFFFFFFFF0);
        sub_251A1B128(v116, (uint64_t)v119, &qword_26B21FF90);
        sub_251B25BDC(v113, (uint64_t (*)(void))type metadata accessor for StaticService);
        if ((*v215)(v119, 1, v90) == 1)
        {
          sub_251A1B064((uint64_t)v119, &qword_26B21FF90);
          uint64_t v99 = v228;
          goto LABEL_28;
        }
        (*v207)(v115, v119, v90);
        uint64_t v120 = *(void *)(v210 + v208);
        uint64_t v99 = v228;
        if (*(void *)(v120 + 16) && (unint64_t v121 = sub_2519FE584((uint64_t)v115), (v122 & 1) != 0))
        {
          v222 = v115;
          uint64_t v123 = v203;
          sub_251B25B74(*(void *)(v120 + 56) + *(void *)(v201 + 72) * v121, v203, type metadata accessor for StaticAccessory);
          sub_251B25C90(v123, v209, type metadata accessor for StaticAccessory);
          id v124 = objc_msgSend(v193, sel_accessories);
          sub_251A1A568(0, (unint64_t *)&qword_26B21EAF8);
          unint64_t v125 = sub_251F35AC0();

          if (v125 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v126 = sub_251F366C0();
            if (v126)
            {
LABEL_44:
              unint64_t v220 = v125 & 0xC000000000000001;
              uint64_t v127 = 4;
              do
              {
                uint64_t v37 = (uint64_t *)(v127 - 4);
                if (v220)
                {
                  id v128 = (id)MEMORY[0x2533AB3A0](v127 - 4, v125);
                  uint64_t v129 = v127 - 3;
                  if (__OFADD__(v37, 1)) {
                    goto LABEL_74;
                  }
                }
                else
                {
                  id v128 = *(id *)(v125 + 8 * v127);
                  uint64_t v129 = v127 - 3;
                  if (__OFADD__(v37, 1))
                  {
LABEL_74:
                    __break(1u);
LABEL_75:
                    __break(1u);
LABEL_76:
                    swift_once();
LABEL_15:
                    uint64_t v68 = sub_251F350A0();
                    __swift_project_value_buffer(v68, (uint64_t)qword_269BF30A8);
                    uint64_t v69 = sub_251F35080();
                    os_log_type_t v70 = sub_251F35FD0();
                    BOOL v71 = os_log_type_enabled(v69, v70);
                    uint64_t v58 = (void *)v225;
                    if (v71)
                    {
                      uint64_t v72 = swift_slowAlloc();
                      uint64_t v73 = swift_slowAlloc();
                      uint64_t v230 = v73;
                      *(_DWORD *)uint64_t v72 = 136315394;
                      uint64_t v229 = sub_251A00E84(0xD00000000000004DLL, 0x8000000251F6A650, &v230);
                      sub_251F361D0();
                      *(_WORD *)(v72 + 12) = 1024;
                      LODWORD(v229) = v19;
                      sub_251F361D0();
                      _os_log_impl(&dword_2519F3000, v69, v70, "%s Applying reachability flag: %{BOOL}d", (uint8_t *)v72, 0x12u);
                      swift_arrayDestroy();
                      uint64_t v74 = v73;
                      uint64_t v53 = (uint64_t *)v224;
                      MEMORY[0x2533AC760](v74, -1, -1);
                      MEMORY[0x2533AC760](v72, -1, -1);
                    }

                    goto LABEL_22;
                  }
                }
                uint64_t v130 = v128;
                id v131 = objc_msgSend(v128, sel_uniqueIdentifier);
                MEMORY[0x270FA5388](v131);
                unint64_t v133 = (v132 + 15) & 0xFFFFFFFFFFFFFFF0;
                sub_251F34D80();

                LOBYTE(v131) = sub_251F34D70();
                uint64_t v90 = v221;
                v228((char *)&v170 - v133, v221);
                if (v131)
                {
                  swift_bridgeObjectRelease_n();
                  LOBYTE(v230) = *(unsigned char *)(v186 + v185);
                  uint64_t v184 = type metadata accessor for StaticAccessory;
                  uint64_t v135 = v204;
                  sub_251B25B74(v209, v204, type metadata accessor for StaticAccessory);
                  v190(v135, 0, 1, v205);
                  uint64_t v136 = sub_251DC9944(v194, (uint64_t)v193, v130, (char *)&v230, 1, v135, v195);
                  uint64_t v182 = v136;
                  uint64_t v137 = sub_251A1B064(v135, &qword_26B21F240);
                  MEMORY[0x270FA5388](v137);
                  v169[2] = v210;
                  v169[3] = &v231;
                  uint64_t v138 = v202;
                  uint64_t v139 = sub_251AF7D30((void (*)(char *))sub_251B2EE78, (uint64_t)v169, v136);
                  uint64_t v202 = v138;
                  uint64_t v183 = &v170;
                  uint64_t v140 = v216;
                  MEMORY[0x270FA5388](v139);
                  unint64_t v141 = (v140 + 15) & 0xFFFFFFFFFFFFFFF0;
                  unint64_t v220 = (unint64_t)&v170 - v141;
                  uint64_t v142 = *v176;
                  (*v176)();
                  uint64_t v143 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
                  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v143 - 8) + 56))(v198, 1, 1, v143);
                  uint64_t v144 = type metadata accessor for StaticDeviceMetadata();
                  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v144 - 8) + 56))(v199, 1, 1, v144);
                  uint64_t v145 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
                  unint64_t v181 = &v170;
                  MEMORY[0x270FA5388](v145 - 8);
                  uint64_t v147 = (char *)&v170 - ((v146 + 15) & 0xFFFFFFFFFFFFFFF0);
                  uint64_t v178 = v147;
                  uint64_t v148 = sub_251F34D20();
                  uint64_t v149 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v148 - 8) + 56))(v147, 1, 1, v148);
                  uint64_t v180 = &v170;
                  MEMORY[0x270FA5388](v149);
                  v150 = (char *)&v170 - v141;
                  uint64_t v177 = (uint64_t)&v170 - v141;
                  uint64_t v151 = v142();
                  uint64_t v179 = &v170;
                  MEMORY[0x270FA5388](v151);
                  uint64_t v152 = (char *)&v170 - v141;
                  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v142)((char *)&v170 - v141, 1, 1, v90);
                  LOWORD(v230) = -260;
                  uint64_t v153 = type metadata accessor for StaticSoftwareUpdate(0);
                  uint64_t v154 = (uint64_t)v189;
                  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v153 - 8) + 56))(v189, 1, 1, v153);
                  LOBYTE(v229) = 2;
                  uint64_t v168 = (uint64_t)v150;
                  uint64_t v155 = v198;
                  uint64_t v156 = v199;
                  uint64_t v157 = (uint64_t)v178;
                  StaticAccessory.copyReplacing(id:name:deviceIdentifier:deviceMetadata:dateAdded:matterNodeID:isDoubleHigh:homeId:roomIds:roomName:isCurrentAccessory:isFavorite:shouldShowInDashboard:contributesToHomeStatus:showAsIndividualTiles:staticServicesDictionary:staticServiceIDs:primaryServiceId:specialMediaCategory:accessoryCategory:bridgedAccessoryIds:showAsBridge:isCeilingFanWithLight:isPowerStrip:symptoms:softwareUpdate:isReachable:homeNonResponsiveType:)(v220, 0, 0, v198, v199, (uint64_t)v178, 0, 1, v197, 2, v168, 0, 0, 0, 2, 2, 2, 2, 2,
                    v182,
                    0,
                    (uint64_t)v152,
                    (unsigned __int16 *)&v230,
                    0,
                    0,
                    0,
                    2,
                    2,
                    2,
                    0,
                    v154,
                    2,
                    (unsigned __int8 *)&v229);
                  swift_bridgeObjectRelease();
                  sub_251A1B064(v154, &qword_26B21F120);
                  sub_251A1B064((uint64_t)v152, &qword_26B21FF90);
                  sub_251A1B064(v177, &qword_26B21FF90);
                  sub_251A1B064(v157, &qword_26B21EC20);
                  sub_251A1B064(v156, &qword_26B21F110);
                  sub_251A1B064(v155, &qword_26B21F090);
                  uint64_t v158 = sub_251A1B064(v220, &qword_26B21FF90);
                  MEMORY[0x270FA5388](v158);
                  uint64_t v159 = v197;
                  v212((char *)&v170 - v133, v197, v221);
                  uint64_t v160 = v204;
                  sub_251B25B74(v159, v204, v184);
                  v190(v160, 0, 1, v205);
                  sub_2519F77D8(v160, (uint64_t)&v170 - v133);

                  uint64_t v90 = v221;
                  sub_251B25BDC(v159, type metadata accessor for StaticAccessory);
                  sub_251B25BDC(v209, type metadata accessor for StaticAccessory);
                  v161 = (uint64_t (*)(char *, uint64_t))v228;
                  v228(v222, v90);
                  uint64_t v19 = v219;
                  uint64_t v53 = &qword_26B21E658;
                  uint64_t v98 = v161(v219, v90);
                  goto LABEL_29;
                }

                ++v127;
                uint64_t v19 = v219;
                uint64_t v53 = &qword_26B21E658;
              }
              while (v129 != v126);
            }
          }
          else
          {
            uint64_t v126 = *(void *)((v125 & 0xFFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain();
            if (v126) {
              goto LABEL_44;
            }
          }
          swift_bridgeObjectRelease_n();
          sub_251B25BDC(v209, type metadata accessor for StaticAccessory);
          uint64_t v134 = (uint64_t (*)(char *, uint64_t))v228;
          v228(v222, v90);
          uint64_t v98 = v134(v19, v90);
        }
        else
        {
          v99(v115, v90);
LABEL_28:
          uint64_t v98 = ((uint64_t (*)(char *, uint64_t))v99)(v19, v90);
        }
      }
      unint64_t v102 = __clz(__rbit64(v225));
      uint64_t v224 = v100;
      v225 &= v225 - 1;
      unint64_t v103 = v102 | (v100 << 6);
      goto LABEL_31;
    }
  }
}

uint64_t sub_251B1A344(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v74 = a3;
  id v77 = (char *)a2;
  uint64_t v86 = type metadata accessor for StaticService();
  uint64_t v84 = *(uint64_t **)(v86 - 8);
  MEMORY[0x270FA5388](v86);
  uint64_t v66 = (uint64_t)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E330);
  MEMORY[0x270FA5388](v76);
  uint64_t v80 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v73 = (uint64_t)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v67 = (uint64_t)&v65 - v10;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  id v81 = (uint64_t *)((char *)&v65 - v12);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v65 - v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E658);
  uint64_t v16 = *(void *)(*(void *)(v15 - 8) + 64);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  unint64_t v75 = (v16 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v18 = (char *)&v65 - v75;
  uint64_t v19 = *(int *)(v17 + 48);
  uint64_t v20 = (char *)&v65 + v19 - v75;
  uint64_t v21 = a1 + v19;
  uint64_t v87 = sub_251F34DA0();
  uint64_t v85 = *(void *)(v87 - 8);
  uint64_t v22 = v85 + 16;
  uint64_t v23 = *(void (**)(void))(v85 + 16);
  uint64_t v79 = v18;
  ((void (*)(char *, unint64_t, uint64_t))v23)(v18, a1, v87);
  sub_251B25B74(v21, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for StaticService);
  sub_251B25C90((uint64_t)v20, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for StaticService);
  id v24 = (void (*)(void, void, void, void))v84[7];
  uint64_t v78 = (uint64_t *)v14;
  uint64_t v82 = (void (*)(void (*)(void, void), uint64_t, uint64_t, uint64_t))v24;
  unint64_t v83 = v84 + 7;
  v24(v14, 0, 1, v86);
  uint64_t v25 = type metadata accessor for StateSnapshot(0);
  uint64_t v26 = *(void *)&v77[*(int *)(v25 + 60)];
  uint64_t v70 = v16;
  MEMORY[0x270FA5388](v25);
  uint64_t v27 = (char *)&v65 - v75;
  uint64_t v72 = v15;
  uint64_t v28 = (char *)&v65 + *(int *)(v15 + 48) - v75;
  uint64_t v29 = (char *)&v65 - v75;
  unint64_t v75 = a1;
  uint64_t v68 = v23;
  uint64_t v69 = v22;
  ((void (*)(char *, unint64_t, uint64_t))v23)(v29, a1, v87);
  uint64_t v71 = v21;
  id v77 = v28;
  sub_251B25B74(v21, (uint64_t)v28, (uint64_t (*)(void))type metadata accessor for StaticService);
  if (*(void *)(v26 + 16))
  {
    unint64_t v30 = sub_2519FE584((uint64_t)v27);
    if (v31)
    {
      uint64_t v32 = v84;
      uint64_t v33 = (void (*)(void, void))v81;
      sub_251B25B74(*(void *)(v26 + 56) + v84[9] * v30, (uint64_t)v81, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v34 = 0;
      uint64_t v35 = (uint64_t)v80;
      uint64_t v36 = (uint64_t)v78;
    }
    else
    {
      uint64_t v34 = 1;
      uint64_t v35 = (uint64_t)v80;
      uint64_t v32 = v84;
      uint64_t v36 = (uint64_t)v78;
      uint64_t v33 = (void (*)(void, void))v81;
    }
  }
  else
  {
    uint64_t v35 = (uint64_t)v80;
    uint64_t v32 = v84;
    uint64_t v36 = (uint64_t)v78;
    uint64_t v33 = (void (*)(void, void))v81;
    uint64_t v34 = 1;
  }
  uint64_t v37 = v86;
  v82(v33, v34, 1, v86);
  uint64_t v38 = v35 + *(int *)(v76 + 48);
  id v39 = qword_26B21EE20;
  sub_251A1B128(v36, v35, qword_26B21EE20);
  sub_251A1B128((uint64_t)v33, v38, qword_26B21EE20);
  uint64_t v40 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v32[6];
  if (v40(v35, 1, v37) == 1)
  {
    sub_251A1B064((uint64_t)v33, qword_26B21EE20);
    sub_251A1B064(v36, qword_26B21EE20);
    if (v40(v38, 1, v37) == 1)
    {
      char v41 = -1;
    }
    else
    {
      id v39 = &qword_269B9E330;
      char v41 = 0;
    }
  }
  else
  {
    uint64_t v42 = v67;
    sub_251A1B128(v35, v67, qword_26B21EE20);
    if (v40(v38, 1, v37) == 1)
    {
      sub_251A1B064((uint64_t)v81, qword_26B21EE20);
      sub_251A1B064(v36, qword_26B21EE20);
      sub_251B25BDC(v42, (uint64_t (*)(void))type metadata accessor for StaticService);
      char v41 = 0;
      id v39 = &qword_269B9E330;
    }
    else
    {
      uint64_t v43 = v66;
      sub_251B25C90(v38, v66, (uint64_t (*)(void))type metadata accessor for StaticService);
      char v41 = _s13HomeDataModel13StaticServiceV2eeoiySbAC_ACtFZ_0(v42, v43);
      sub_251B25BDC(v43, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v44 = v42;
      id v39 = qword_26B21EE20;
      sub_251A1B064((uint64_t)v81, qword_26B21EE20);
      sub_251A1B064(v36, qword_26B21EE20);
      sub_251B25BDC(v44, (uint64_t (*)(void))type metadata accessor for StaticService);
    }
  }
  uint64_t v45 = v85;
  sub_251A1B064(v35, v39);
  sub_251B25BDC((uint64_t)v77, (uint64_t (*)(void))type metadata accessor for StaticService);
  uint64_t v48 = *(uint64_t **)(v45 + 8);
  uint64_t v46 = v45 + 8;
  int v47 = v48;
  uint64_t v49 = v87;
  ((void (*)(char *, uint64_t))v48)(v27, v87);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v48)(v79, v49);
  if ((v41 & 1) == 0)
  {
    uint64_t v84 = &v65;
    uint64_t v51 = v70;
    MEMORY[0x270FA5388](result);
    id v81 = v47;
    unint64_t v52 = (v51 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v53 = v72;
    uint64_t v54 = *(int *)(v72 + 48);
    uint64_t v85 = v46;
    uint64_t v55 = (char *)&v65 + v54 - v52;
    uint64_t v79 = (char *)&v65 - v52;
    uint64_t v80 = v55;
    unint64_t v56 = v75;
    uint64_t v57 = v68;
    v68();
    uint64_t v58 = v71;
    uint64_t v59 = sub_251B25B74(v71, (uint64_t)v55, (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t v78 = &v65;
    MEMORY[0x270FA5388](v59);
    uint64_t v60 = (char *)&v65 - v52;
    uint64_t v61 = (uint64_t)&v60[*(int *)(v53 + 48)];
    unint64_t v62 = v56;
    uint64_t v63 = v87;
    ((void (*)(char *, unint64_t, uint64_t))v57)(v60, v62, v87);
    sub_251B25B74(v58, v61, (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t v64 = v73;
    sub_251B25C90(v61, v73, (uint64_t (*)(void))type metadata accessor for StaticService);
    v82((void (*)(void, void))v64, 0, 1, v86);
    sub_2519F79F8(v64, (uint64_t)v79);
    ((void (*)(char *, uint64_t))v81)(v60, v63);
    return sub_251B25BDC((uint64_t)v80, (uint64_t (*)(void))type metadata accessor for StaticService);
  }
  return result;
}

uint64_t sub_251B1AB04(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x270FA5388](updated - 8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E708);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *a2;
  id v16 = objc_msgSend(v15, sel_uniqueIdentifier);
  uint64_t v17 = sub_251F34DA0();
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v19 = (char *)&v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34D80();

  sub_251B25B74(a3, (uint64_t)v11, type metadata accessor for StateSnapshot.UpdateType);
  uint64_t v20 = *(void *)(a4 + *(int *)(type metadata accessor for StateSnapshot(0) + 60));
  id v21 = v15;
  swift_bridgeObjectRetain();
  sub_251E4A8A0((uint64_t)v11, v21, v20, a5, (uint64_t)v14);
  return sub_2519F8694((uint64_t)v14, (uint64_t)v19);
}

uint64_t sub_251B1ACC8(id *a1)
{
  id v1 = objc_msgSend(*a1, sel_uniqueIdentifier);
  uint64_t v2 = sub_251F34DA0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34D80();

  char v6 = sub_251F34D70();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v6 & 1;
}

uint64_t sub_251B1ADD4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X2>, void *a4@<X3>, void *a5@<X4>, uint64_t a6@<X8>)
{
  id v39 = a5;
  uint64_t v40 = a4;
  uint64_t v38 = a3;
  uint64_t v41 = a6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F0A8);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v38 - v12;
  uint64_t v14 = (int *)type metadata accessor for StaticHH2Update(0);
  uint64_t v15 = *((void *)v14 - 1);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v38 - v19;
  sub_251A1B128(a1, (uint64_t)v13, &qword_26B21F0A8);
  id v21 = *(unsigned int (**)(char *, uint64_t, int *))(v15 + 48);
  if (v21(v13, 1, v14) == 1)
  {
    sub_251A1B064((uint64_t)v13, &qword_26B21F0A8);
  }
  else
  {
    sub_251B25C90((uint64_t)v13, (uint64_t)v20, type metadata accessor for StaticHH2Update);
    if (a2)
    {
      id v22 = a2;
      sub_251C38128(v22, v38, v40, v41);

      return sub_251B25BDC((uint64_t)v20, type metadata accessor for StaticHH2Update);
    }
    sub_251B25BDC((uint64_t)v20, type metadata accessor for StaticHH2Update);
  }
  sub_251A1B128(a1, (uint64_t)v11, &qword_26B21F0A8);
  if (v21(v11, 1, v14) == 1)
  {
    sub_251A1B064((uint64_t)v11, &qword_26B21F0A8);
    if (a2)
    {
LABEL_8:
      id v24 = a2;
      uint64_t v25 = v40;
      id v26 = objc_msgSend(v25, sel_uniqueIdentifier, v38);
      uint64_t v27 = v41;
      sub_251F34D80();

      sub_251C40A04(v24, objc_msgSend(v25, sel_softwareVersion), (char *)&v42);
      *(unsigned char *)(v27 + v14[5]) = v42;
      uint64_t v28 = (void *)(v27 + v14[6]);
      *uint64_t v28 = 0;
      v28[1] = 0;
      uint64_t v29 = v27 + v14[7];
      *(void *)uint64_t v29 = 0;
      *(unsigned char *)(v29 + 8) = 1;
      return (*(uint64_t (**)(uint64_t, void, uint64_t, int *))(v15 + 56))(v27, 0, 1, v14);
    }
  }
  else
  {
    sub_251B25C90((uint64_t)v11, (uint64_t)v18, type metadata accessor for StaticHH2Update);
    unint64_t v30 = v39;
    if (v39)
    {
      uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
      MEMORY[0x270FA5388](v31 - 8);
      uint64_t v33 = (char *)&v38 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v34 = sub_251F34DA0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v33, 1, 1, v34);
      unsigned __int8 v43 = 8;
      long long v42 = xmmword_251F3BEC0;
      id v35 = v30;
      objc_msgSend(v35, sel_percentageComplete, v38);
      uint64_t v37 = v41;
      sub_251C382F0((uint64_t)v33, &v43, (uint64_t *)&v42, COERCE__INT64(v36), 0, v41);

      sub_251A1B064((uint64_t)v33, &qword_26B21FF90);
      sub_251B25BDC((uint64_t)v18, type metadata accessor for StaticHH2Update);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, int *))(v15 + 56))(v37, 0, 1, v14);
    }
    sub_251B25BDC((uint64_t)v18, type metadata accessor for StaticHH2Update);
    if (a2) {
      goto LABEL_8;
    }
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v15 + 56))(v41, 1, 1, v14);
}

uint64_t sub_251B1B268@<X0>(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  int64_t v206 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v200 = (uint64_t)v182 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v199 = (void *)type metadata accessor for StaticService();
  uint64_t v198 = *(v199 - 1);
  uint64_t v7 = MEMORY[0x270FA5388](v199);
  uint64_t v193 = (uint64_t)v182 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v194 = (uint64_t)v182 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v208 = (uint64_t)v182 - v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E848);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v196 = (char *)v182 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v195 = type metadata accessor for StaticMediaSystem();
  uint64_t v204 = *(void **)(v195 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v195);
  uint64_t v191 = (uint64_t)v182 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v192 = (uint64_t)v182 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v197 = (uint64_t)v182 - v18;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E850);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v203 = (void *)((char *)v182 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v202 = (void *)type metadata accessor for StaticMediaProfile();
  uint64_t v201 = (void *)*(v202 - 1);
  uint64_t v21 = MEMORY[0x270FA5388](v202);
  uint64_t v188 = (uint64_t)v182 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v190 = (uint64_t)v182 - v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v189 = (uint64_t)v182 - v25;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
  MEMORY[0x270FA5388](v26 - 8);
  uint64_t v214 = (uint64_t)v182 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F110);
  MEMORY[0x270FA5388](v28 - 8);
  uint64_t v209 = (uint64_t)v182 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F090);
  MEMORY[0x270FA5388](v30 - 8);
  uint64_t v216 = (uint64_t)v182 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = type metadata accessor for StaticAccessory(0);
  uint64_t v185 = *(uint64_t (**)(uint64_t))(v32 - 8);
  uint64_t v33 = MEMORY[0x270FA5388](v32 - 8);
  uint64_t v186 = (uint64_t)v182 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  uint64_t v187 = (uint64_t)v182 - v36;
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  uint64_t v184 = (void *)((char *)v182 - v38);
  MEMORY[0x270FA5388](v37);
  uint64_t v217 = (uint64_t)v182 - v39;
  uint64_t v40 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  MEMORY[0x270FA5388](v40);
  long long v42 = (char *)v182 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = type metadata accessor for StaticHH2Update(0);
  uint64_t v44 = MEMORY[0x270FA5388](v43 - 8);
  uint64_t v205 = (uint64_t)v182 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v44);
  uint64_t v210 = (uint64_t)v182 - v46;
  uint64_t v47 = sub_251F34DA0();
  uint64_t v48 = *(void *)(v47 - 8);
  uint64_t v49 = *(void *)(v48 + 64);
  MEMORY[0x270FA5388](v47);
  unint64_t v50 = (v49 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v222 = v48;
  uint64_t v53 = *(void (**)(char *, char *, uint64_t))(v48 + 16);
  uint64_t v51 = v48 + 16;
  unint64_t v52 = v53;
  v53((char *)v182 - v50, (char *)a1, v47);
  unint64_t v220 = (int *)type metadata accessor for StateSnapshot(0);
  uint64_t v221 = a2;
  uint64_t v54 = *(void *)((char *)a2 + v220[18]);
  uint64_t v211 = type metadata accessor for StaticSoftwareUpdate(0);
  uint64_t v55 = *(int *)(v211 + 20);
  unint64_t v215 = (void *)a1;
  sub_251B25B74(a1 + v55, (uint64_t)v42, type metadata accessor for StaticSoftwareUpdate.Kind);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v218 = (uint64_t)v182 - v50;
  uint64_t v219 = v47;
  uint64_t v212 = (void (*)(char *, uint64_t, uint64_t))v53;
  uint64_t v213 = v49;
  if (EnumCaseMultiPayload)
  {
    swift_bridgeObjectRetain();
    sub_251B25BDC((uint64_t)v42, type metadata accessor for StaticSoftwareUpdate.Kind);
    uint64_t v57 = v222;
    uint64_t v205 = v54;
  }
  else
  {
    uint64_t v58 = v210;
    uint64_t v59 = sub_251B25C90((uint64_t)v42, v210, type metadata accessor for StaticHH2Update);
    uint64_t v183 = v182;
    MEMORY[0x270FA5388](v59);
    uint64_t v60 = (char *)v182 - v50;
    v52((char *)v182 - v50, (char *)v182 - v50, v47);
    uint64_t v61 = v205;
    sub_251B25B74(v58, v205, type metadata accessor for StaticHH2Update);
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v224 = v54;
    sub_251A0C704(v61, (uint64_t)v60, isUniquelyReferenced_nonNull_native);
    uint64_t v205 = v224;
    swift_bridgeObjectRelease();
    uint64_t v57 = v222;
    (*(void (**)(char *, uint64_t))(v222 + 8))(v60, v47);
    sub_251B25BDC(v58, type metadata accessor for StaticHH2Update);
  }
  uint64_t v63 = *(void *)((char *)v221 + v220[8]);
  uint64_t v64 = *(void *)(v63 + 16);
  swift_bridgeObjectRetain();
  uint64_t v207 = v51;
  if (v64)
  {
    unint64_t v65 = sub_2519FE584(v218);
    if (v66)
    {
      uint64_t v67 = *(void *)(v63 + 56) + *((void *)v185 + 9) * v65;
      uint64_t v185 = type metadata accessor for StaticAccessory;
      uint64_t v68 = (uint64_t)v184;
      sub_251B25B74(v67, (uint64_t)v184, type metadata accessor for StaticAccessory);
      sub_251B25C90(v68, v217, type metadata accessor for StaticAccessory);
      uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
      uint64_t v184 = v182;
      uint64_t v70 = *(void *)(*(void *)(v69 - 8) + 64);
      MEMORY[0x270FA5388](v69 - 8);
      uint64_t v71 = (char *)v182 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v72 = *(void (**)(char *, uint64_t, uint64_t))(v57 + 56);
      uint64_t v73 = v219;
      v72(v71, 1, 1);
      uint64_t v74 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 56))(v216, 1, 1, v74);
      uint64_t v75 = type metadata accessor for StaticDeviceMetadata();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v75 - 8) + 56))(v209, 1, 1, v75);
      uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
      uint64_t v183 = v182;
      MEMORY[0x270FA5388](v76 - 8);
      uint64_t v210 = v63;
      uint64_t v78 = (char *)v182 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v79 = sub_251F34D20();
      uint64_t v80 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 56))(v78, 1, 1, v79);
      v182[2] = v182;
      MEMORY[0x270FA5388](v80);
      uint64_t v81 = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v72)(v71, 1, 1, v73);
      v182[1] = v182;
      MEMORY[0x270FA5388](v81);
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v72)(v71, 1, 1, v73);
      uint64_t v82 = v218;
      LOWORD(v224) = -260;
      uint64_t v83 = v214;
      sub_251B25B74((uint64_t)v215, v214, type metadata accessor for StaticSoftwareUpdate);
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v211 - 8) + 56))(v83, 0, 1);
      LOBYTE(v225) = 2;
      uint64_t v84 = v187;
      uint64_t v85 = v216;
      uint64_t v86 = v209;
      StaticAccessory.copyReplacing(id:name:deviceIdentifier:deviceMetadata:dateAdded:matterNodeID:isDoubleHigh:homeId:roomIds:roomName:isCurrentAccessory:isFavorite:shouldShowInDashboard:contributesToHomeStatus:showAsIndividualTiles:staticServicesDictionary:staticServiceIDs:primaryServiceId:specialMediaCategory:accessoryCategory:bridgedAccessoryIds:showAsBridge:isCeilingFanWithLight:isPowerStrip:symptoms:softwareUpdate:isReachable:homeNonResponsiveType:)((uint64_t)v71, 0, 0, v216, v209, (uint64_t)v78, 0, 1, v187, 2, (uint64_t)v71, 0, 0, 0, 2, 2, 2, 2, 2,
        0,
        0,
        (uint64_t)v71,
        (unsigned __int16 *)&v224,
        0,
        0,
        0,
        2,
        2,
        2,
        0,
        v83,
        2,
        (unsigned __int8 *)&v225);
      sub_251A1B064(v83, &qword_26B21F120);
      sub_251A1B064((uint64_t)v71, &qword_26B21FF90);
      sub_251A1B064((uint64_t)v71, &qword_26B21FF90);
      sub_251A1B064((uint64_t)v78, &qword_26B21EC20);
      sub_251A1B064(v86, &qword_26B21F110);
      sub_251A1B064(v85, &qword_26B21F090);
      uint64_t v87 = sub_251A1B064((uint64_t)v71, &qword_26B21FF90);
      MEMORY[0x270FA5388](v87);
      uint64_t v89 = (char *)v182 - ((v88 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v90 = v219;
      v212(v89, v82, v219);
      uint64_t v91 = v186;
      sub_251B25B74(v84, v186, v185);
      uint64_t v92 = v210;
      char v93 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&long long v224 = v92;
      sub_251A0C480(v91, (uint64_t)v89, v93);
      uint64_t v63 = v224;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v222 + 8))(v89, v90);
      sub_251B25BDC(v84, type metadata accessor for StaticAccessory);
      sub_251B25BDC(v217, type metadata accessor for StaticAccessory);
    }
  }
  uint64_t v94 = *(void *)((char *)v221 + v220[12]);
  swift_bridgeObjectRetain_n();
  uint64_t v95 = sub_251EDC460(v94);
  MEMORY[0x270FA5388](v95);
  uint64_t v96 = (uint64_t)v203;
  uint64_t v97 = 0;
  sub_251A95278((uint64_t (*)(char *))sub_251B2EED4, v95, (uint64_t)v203);
  swift_bridgeObjectRelease();
  int v98 = ((uint64_t (*)(uint64_t, uint64_t, void *))v201[6])(v96, 1, v202);
  uint64_t v210 = v63;
  uint64_t v217 = v94;
  if (v98 == 1)
  {
    sub_251A1B064(v96, &qword_26B21E850);
    uint64_t v99 = v219;
  }
  else
  {
    uint64_t v203 = 0;
    uint64_t v100 = v189;
    sub_251B25C90(v96, v189, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
    uint64_t v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    uint64_t v202 = v182;
    uint64_t v102 = *(void *)(*(void *)(v101 - 8) + 64);
    MEMORY[0x270FA5388](v101 - 8);
    unint64_t v103 = (char *)v182 - ((v102 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v104 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v222 + 56);
    uint64_t v105 = v219;
    v104(v103, 1, 1, v219);
    uint64_t v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    uint64_t v201 = v182;
    MEMORY[0x270FA5388](v106 - 8);
    uint64_t v108 = (void *)((char *)v182 - ((v107 + 15) & 0xFFFFFFFFFFFFFFF0));
    uint64_t v109 = sub_251F34D20();
    uint64_t v110 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v109 - 8) + 56))(v108, 1, 1, v109);
    MEMORY[0x270FA5388](v110);
    v104(v103, 1, 1, v105);
    uint64_t v111 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
    uint64_t v112 = v216;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v111 - 8) + 56))(v216, 1, 1, v111);
    LOBYTE(v225) = 6;
    unsigned __int8 v228 = 4;
    LOWORD(v224) = -260;
    uint64_t v113 = v214;
    sub_251B25B74((uint64_t)v215, v214, type metadata accessor for StaticSoftwareUpdate);
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v211 - 8) + 56))(v113, 0, 1);
    unsigned __int8 v227 = 2;
    uint64_t v114 = v190;
    StaticMediaProfile.copyReplacing(id:name:roomIds:roomName:dateAdded:iconSymbol:isDoubleHigh:isCurrentAccessory:isFavorite:shouldShowInDashboard:staticAccessoryId:isReachable:hasValidSettings:staticServicesDictionary:deviceId:playbackState:sleepWakeState:audioDestinationId:specialMediaCategory:symptoms:softwareUpdate:homeNonResponsiveType:)((uint64_t)v103, 0, 0, 0, 0, 0, v108, 0, v190, 0, 2, 2, 2, (uint64_t)v103, 2, 2, 0, v112, (unsigned __int8 *)&v225,
      &v228,
      0,
      0,
      (unsigned __int16 *)&v224,
      0,
      v113,
      &v227);
    sub_251A1B064(v113, &qword_26B21F120);
    sub_251A1B064(v112, &qword_26B21F090);
    uint64_t v99 = v105;
    sub_251A1B064((uint64_t)v103, &qword_26B21FF90);
    sub_251A1B064((uint64_t)v108, &qword_26B21EC20);
    uint64_t v115 = sub_251A1B064((uint64_t)v103, &qword_26B21FF90);
    uint64_t v116 = v213;
    MEMORY[0x270FA5388](v115);
    v212((char *)v182 - ((v116 + 15) & 0xFFFFFFFFFFFFFFF0), v114, v105);
    uint64_t v117 = v188;
    sub_251B25B74(v114, v188, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
    uint64_t v118 = v217;
    char v119 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v224 = v118;
    sub_251A0C1FC(v117, (uint64_t)v182 - ((v116 + 15) & 0xFFFFFFFFFFFFFFF0), v119);
    uint64_t v217 = v224;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v222 + 8))((char *)v182 - ((v116 + 15) & 0xFFFFFFFFFFFFFFF0), v105);
    sub_251B25BDC(v114, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
    uint64_t v120 = v100;
    uint64_t v97 = (uint64_t)v203;
    sub_251B25BDC(v120, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
  }
  uint64_t v121 = (uint64_t)v196;
  uint64_t v122 = v195;
  uint64_t v123 = *(void *)((char *)v221 + v220[11]);
  swift_bridgeObjectRetain_n();
  uint64_t v124 = sub_251EDC738(v123);
  MEMORY[0x270FA5388](v124);
  sub_251A952B8((uint64_t (*)(char *))sub_251B2EF24, v124, v121);
  swift_bridgeObjectRelease();
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v204[6])(v121, 1, v122) == 1)
  {
    uint64_t v204 = (void *)v123;
    sub_251A1B064(v121, &qword_26B21E848);
  }
  else
  {
    sub_251B25C90(v121, v197, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
    uint64_t v125 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    uint64_t v204 = v182;
    uint64_t v126 = *(void *)(*(void *)(v125 - 8) + 64);
    MEMORY[0x270FA5388](v125 - 8);
    uint64_t v127 = (char *)v182 - ((v126 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v216 = v97;
    id v128 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v222 + 56);
    v128(v127, 1, 1, v99);
    uint64_t v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    uint64_t v203 = v182;
    MEMORY[0x270FA5388](v129 - 8);
    id v131 = (void *)((char *)v182 - ((v130 + 15) & 0xFFFFFFFFFFFFFFF0));
    uint64_t v132 = sub_251F34D20();
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v132 - 8) + 56))(v131, 1, 1, v132);
    LOBYTE(v224) = 6;
    uint64_t v133 = v214;
    sub_251B25B74((uint64_t)v215, v214, type metadata accessor for StaticSoftwareUpdate);
    uint64_t v134 = (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v211 - 8) + 56))(v133, 0, 1);
    LOBYTE(v225) = 2;
    MEMORY[0x270FA5388](v134);
    v128(v127, 1, 1, v219);
    uint64_t v135 = v192;
    uint64_t v136 = v197;
    sub_251DE2D6C((uint64_t)v127, 0, 0, 0, 0, v131, 0, 0, v192, 2, 2, 2, 2, 2, 2, (unsigned __int8 *)&v224, 0, 0, 0,
      v133,
      (unsigned __int8 *)&v225,
      (uint64_t)v127,
      0,
      0,
      0,
      0,
      0,
      0);
    sub_251A1B064((uint64_t)v127, &qword_26B21FF90);
    uint64_t v137 = v133;
    uint64_t v138 = v213;
    sub_251A1B064(v137, &qword_26B21F120);
    uint64_t v139 = (uint64_t)v131;
    uint64_t v99 = v219;
    sub_251A1B064(v139, &qword_26B21EC20);
    uint64_t v140 = sub_251A1B064((uint64_t)v127, &qword_26B21FF90);
    MEMORY[0x270FA5388](v140);
    v212((char *)v182 - ((v138 + 15) & 0xFFFFFFFFFFFFFFF0), v135, v99);
    uint64_t v141 = v191;
    sub_251B25B74(v135, v191, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
    char v142 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v224 = v123;
    sub_251A0BF78(v141, (uint64_t)v182 - ((v138 + 15) & 0xFFFFFFFFFFFFFFF0), v142);
    uint64_t v204 = (void *)v224;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v222 + 8))((char *)v182 - ((v138 + 15) & 0xFFFFFFFFFFFFFFF0), v99);
    sub_251B25BDC(v135, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
    sub_251B25BDC(v136, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
  }
  uint64_t v143 = v200;
  uint64_t v144 = v199;
  uint64_t v145 = v198;
  uint64_t v146 = *(void *)((char *)v221 + v220[15]);
  swift_bridgeObjectRetain_n();
  uint64_t v216 = v146;
  uint64_t v147 = sub_251EDC188(v146);
  MEMORY[0x270FA5388](v147);
  sub_251A955F8((uint64_t (*)(char *))sub_251B2EF74, v147, v143);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, void *))(v145 + 48))(v143, 1, v144) == 1)
  {
    sub_251A1B064(v143, qword_26B21EE20);
  }
  else
  {
    sub_251B25C90(v143, v208, (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t v148 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    uint64_t v203 = v182;
    uint64_t v149 = *(void *)(*(void *)(v148 - 8) + 64);
    MEMORY[0x270FA5388](v148 - 8);
    unint64_t v150 = (v149 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v200 = (uint64_t)v182 - v150;
    uint64_t v151 = *(uint64_t (**)(void))(v222 + 56);
    uint64_t v152 = v151();
    uint64_t v202 = v182;
    MEMORY[0x270FA5388](v152);
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v151)((char *)v182 - v150, 1, 1, v99);
    uint64_t v153 = type metadata accessor for StaticDeviceMetadata();
    uint64_t v154 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v153 - 8) + 56))(v209, 1, 1, v153);
    uint64_t v201 = v182;
    unsigned __int8 v228 = 53;
    unsigned __int8 v227 = 5;
    MEMORY[0x270FA5388](v154);
    uint64_t v155 = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v151)((char *)v182 - v150, 1, 1, v99);
    uint64_t v199 = v182;
    MEMORY[0x270FA5388](v155);
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v151)((char *)v182 - v150, 1, 1, v99);
    unsigned __int8 v226 = 53;
    uint64_t v225 = 0;
    long long v224 = 0u;
    uint64_t v156 = v214;
    sub_251B25B74((uint64_t)v215, v214, type metadata accessor for StaticSoftwareUpdate);
    uint64_t v157 = (*(uint64_t (**)(uint64_t, void, uint64_t))(*(void *)(v211 - 8) + 56))(v156, 0, 1);
    unint64_t v215 = v182;
    unsigned __int8 v223 = 2;
    MEMORY[0x270FA5388](v157);
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v151)((char *)v182 - v150, 1, 1, v99);
    uint64_t v158 = v209;
    uint64_t v159 = v194;
    uint64_t v160 = v200;
    StaticService.copyReplacing(id:name:isPrimary:isDoubleHigh:isReachable:isCalibrating:isLowBattery:accessoryId:mediaSourceIdentifier:deviceMetadata:removingMediaSourceIdentifier:roomIds:roomName:shouldShowInDashboard:accessoryShowsAsIndividualTiles:isFavorite:contributesToHomeStatus:customIconSymbol:removingCustomIconSymbol:serviceKind:serviceSubKind:parentServiceId:batteryServiceId:linkedStaticServices:associatedServiceKind:removingAssociatedServiceKind:staticCharacteristicsBag:staticProfileBag:softwareUpdate:homeNonResponsiveType:bridgedStaticServices:bridgeAccessoryId:matterEndpointID:)(v200, 0, 0, 2, 2, 2, 2, 2, v194, (uint64_t)v182 - v150, 0, 1, v209, 0, 0, 0, 0, 2, 2,
      2,
      2,
      0,
      0,
      0,
      &v228,
      &v227,
      (uint64_t)v182 - v150,
      (uint64_t)v182 - v150,
      0,
      &v226,
      0,
      &v225,
      (uint64_t *)&v224,
      v156,
      &v223,
      0,
      (uint64_t)v182 - v150,
      0x10000);
    sub_251A1B064((uint64_t)v182 - v150, &qword_26B21FF90);
    sub_251A1B064(v156, &qword_26B21F120);
    sub_251A1B064((uint64_t)v182 - v150, &qword_26B21FF90);
    sub_251A1B064((uint64_t)v182 - v150, &qword_26B21FF90);
    sub_251A1B064(v158, &qword_26B21F110);
    sub_251A1B064((uint64_t)v182 - v150, &qword_26B21FF90);
    uint64_t v161 = sub_251A1B064(v160, &qword_26B21FF90);
    MEMORY[0x270FA5388](v161);
    uint64_t v163 = (char *)v182 - ((v162 + 15) & 0xFFFFFFFFFFFFFFF0);
    v212(v163, v159, v99);
    uint64_t v164 = v193;
    sub_251B25B74(v159, v193, (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t v165 = v216;
    char v166 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v224 = v165;
    sub_251A0BCF4(v164, (uint64_t)v163, v166);
    uint64_t v216 = v224;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v222 + 8))(v163, v99);
    sub_251B25BDC(v159, (uint64_t (*)(void))type metadata accessor for StaticService);
    sub_251B25BDC(v208, (uint64_t (*)(void))type metadata accessor for StaticService);
  }
  uint64_t v167 = v220;
  uint64_t v168 = v221;
  uint64_t v169 = *v221;
  uint64_t v170 = v206;
  sub_251B25B74((uint64_t)v221 + v220[5], (uint64_t)v206 + v220[5], (uint64_t (*)(void))type metadata accessor for StaticHome);
  uint64_t v171 = *(void *)((char *)v168 + v167[6]);
  uint64_t v172 = *(void *)((char *)v168 + v167[7]);
  unint64_t v173 = v168;
  uint64_t v174 = *(void *)((char *)v168 + v167[9]);
  uint64_t v175 = *(void *)((char *)v168 + v167[10]);
  uint64_t v176 = *(void *)((char *)v173 + v167[13]);
  uint64_t v177 = *(void *)((char *)v173 + v167[14]);
  uint64_t v179 = *(void *)((char *)v173 + v167[17]);
  uint64_t v214 = *(void *)((char *)v173 + v167[16]);
  uint64_t v178 = v214;
  unint64_t v215 = (void *)v179;
  uint64_t v180 = *(void **)((char *)v173 + v167[19]);
  uint64_t v221 = v180;
  *uint64_t v170 = v169;
  *(void *)((char *)v170 + v167[6]) = v171;
  *(void *)((char *)v170 + v167[7]) = v172;
  *(void *)((char *)v170 + v167[8]) = v210;
  *(void *)((char *)v170 + v167[9]) = v174;
  *(void *)((char *)v170 + v167[10]) = v175;
  *(void *)((char *)v170 + v167[11]) = v204;
  *(void *)((char *)v170 + v167[12]) = v217;
  *(void *)((char *)v170 + v167[13]) = v176;
  *(void *)((char *)v170 + v167[14]) = v177;
  *(void *)((char *)v170 + v167[15]) = v216;
  *(void *)((char *)v170 + v167[16]) = v178;
  *(void *)((char *)v170 + v167[17]) = v179;
  *(void *)((char *)v170 + v167[18]) = v205;
  *(void *)((char *)v170 + v167[19]) = v180;
  uint64_t v222 = *(void *)(v222 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  ((void (*)(uint64_t, uint64_t))v222)(v218, v219);
  return (*(uint64_t (**)(void *, void, uint64_t, int *))(*((void *)v167 - 1) + 56))(v170, 0, 1, v167);
}

uint64_t sub_251B1D114()
{
  uint64_t v0 = (int *)type metadata accessor for StateSnapshot(0);
  __swift_allocate_value_buffer((uint64_t)v0, qword_26B21FF70);
  id v1 = (void *)__swift_project_value_buffer((uint64_t)v0, (uint64_t)qword_26B21FF70);
  if (qword_26B21F398 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_26B220000;
  uint64_t v19 = qword_26B21F5E0;
  swift_bridgeObjectRetain();
  if (v2 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for StaticHome();
  uint64_t v17 = __swift_project_value_buffer(v3, (uint64_t)qword_26B220D30);
  uint64_t v4 = MEMORY[0x263F8EE78];
  unint64_t v18 = sub_2519F9C0C(MEMORY[0x263F8EE78]);
  unint64_t v16 = sub_2519F9A68(v4);
  unint64_t v15 = sub_2519F9800(v4);
  unint64_t v14 = sub_2519F9AA4(v4);
  unint64_t v13 = sub_2519F9AE0(v4);
  unint64_t v5 = sub_2519F9B1C(v4);
  unint64_t v6 = sub_2519F9C48(v4);
  unint64_t v7 = sub_2519F9B58(v4);
  unint64_t v8 = sub_2519F9B94(v4);
  unint64_t v9 = sub_2519F9C84(v4);
  unint64_t v10 = sub_2519F9BD0(v4);
  unint64_t v11 = sub_2519F9CC0(v4);
  *id v1 = v19;
  uint64_t result = sub_251B25B74(v17, (uint64_t)v1 + v0[5], (uint64_t (*)(void))type metadata accessor for StaticHome);
  *(void *)((char *)v1 + v0[6]) = v4;
  *(void *)((char *)v1 + v0[7]) = v18;
  *(void *)((char *)v1 + v0[8]) = v16;
  *(void *)((char *)v1 + v0[9]) = v15;
  *(void *)((char *)v1 + v0[10]) = v14;
  *(void *)((char *)v1 + v0[11]) = v13;
  *(void *)((char *)v1 + v0[12]) = v5;
  *(void *)((char *)v1 + v0[13]) = v6;
  *(void *)((char *)v1 + v0[14]) = v7;
  *(void *)((char *)v1 + v0[15]) = v8;
  *(void *)((char *)v1 + v0[16]) = v9;
  *(void *)((char *)v1 + v0[17]) = v4;
  *(void *)((char *)v1 + v0[18]) = v10;
  *(void *)((char *)v1 + v0[19]) = v11;
  return result;
}

uint64_t static StateSnapshot.empty.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_26B220320 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for StateSnapshot(0);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_26B21FF70);
  return sub_251B25B74(v3, a1, type metadata accessor for StateSnapshot);
}

uint64_t sub_251B1D3D8()
{
  id v1 = objc_msgSend(v0, sel_applicationData);
  uint64_t v2 = (void *)sub_251F356C0();
  id v3 = objc_msgSend(v1, sel_objectForKeyedSubscript_, v2);

  if (!v3
    || (id v28 = v3,
        uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB50),
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EAC8),
        (swift_dynamicCast() & 1) == 0))
  {

    return MEMORY[0x263F8EE78];
  }
  unint64_t v5 = v29;

  if (!(v29 >> 62))
  {
    uint64_t v6 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v6) {
      goto LABEL_5;
    }
    goto LABEL_23;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_251F366C0();
  uint64_t v6 = result;
  if (!result)
  {
LABEL_23:
    swift_bridgeObjectRelease_n();
    return MEMORY[0x263F8EE78];
  }
LABEL_5:
  if (v6 >= 1)
  {
    uint64_t v8 = 0;
    unint64_t v23 = v29 & 0xC000000000000001;
    unint64_t v9 = MEMORY[0x263F8EE78];
    uint64_t v24 = v6;
    unint64_t v25 = v29;
    v22[1] = v4;
    do
    {
      unint64_t v27 = v9;
      if (v23)
      {
        uint64_t v10 = MEMORY[0x2533AB3A0](v8, v5);
      }
      else
      {
        uint64_t v10 = *(void *)(v5 + 8 * v8 + 32);
        swift_unknownObjectRetain();
      }
      uint64_t v11 = sub_251F34DA0();
      uint64_t v26 = v22;
      uint64_t v12 = *(void *)(v11 - 8);
      uint64_t v13 = *(void *)(v12 + 64);
      MEMORY[0x270FA5388](v11);
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
      MEMORY[0x270FA5388](v14 - 8);
      unint64_t v16 = (char *)v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
      unint64_t v29 = v10;
      swift_unknownObjectRetain();
      swift_dynamicCast();
      sub_251F34D30();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v16, 1, v11) == 1)
      {
        sub_251A1B064((uint64_t)v16, &qword_26B21FF90);
        unint64_t v9 = v27;
      }
      else
      {
        uint64_t v17 = *(uint64_t (**)(char *, char *, uint64_t))(v12 + 32);
        uint64_t v18 = v17((char *)v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v16, v11);
        MEMORY[0x270FA5388](v18);
        uint64_t v19 = (char *)v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
        v17(v19, v19, v11);
        unint64_t v9 = v27;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v9 = sub_251F0F4DC(0, *(void *)(v9 + 16) + 1, 1, v9);
        }
        unint64_t v21 = *(void *)(v9 + 16);
        unint64_t v20 = *(void *)(v9 + 24);
        if (v21 >= v20 >> 1) {
          unint64_t v9 = sub_251F0F4DC(v20 > 1, v21 + 1, 1, v9);
        }
        *(void *)(v9 + 16) = v21 + 1;
        v17((char *)(v9+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(void *)(v12 + 72) * v21), v19, v11);
      }
      unint64_t v5 = v25;
      ++v8;
    }
    while (v24 != v8);
    swift_bridgeObjectRelease_n();
    return v9;
  }
  __break(1u);
  return result;
}

void *sub_251B1D804(uint64_t a1, uint64_t a2, void *(*a3)(uint64_t *__return_ptr))
{
  uint64_t result = a3(&v11);
  uint64_t v6 = v12;
  if (!v12)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t result = ((void *(*)(uint64_t *__return_ptr, uint64_t))a3)(&v9, a2);
  if (!v10)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  if (v11 == v9 && v6 == v10) {
    char v8 = 0;
  }
  else {
    char v8 = sub_251F36B10();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (void *)(v8 & 1);
}

uint64_t sub_251B1D8C8(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (int *)type metadata accessor for StaticRoom(0);
  uint64_t v6 = *((void *)v5 - 1);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(a2 + 16);
  if (!v9) {
    return 0;
  }
  uint64_t v10 = a2 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  sub_251B25B74(v10, (uint64_t)v8, type metadata accessor for StaticRoom);
  swift_bridgeObjectRetain();
  char v11 = _s13HomeDataModel10StaticRoomV2eeoiySbAC_ACtFZ_0((uint64_t)v8, a1);
  sub_251B25BDC((uint64_t)v8, type metadata accessor for StaticRoom);
  if (v11)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  uint64_t v66 = a2;
  if (v9 == 1)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v65 = v2;
  uint64_t v67 = *(void *)(v6 + 72);
  uint64_t v13 = 1;
  while (1)
  {
    uint64_t result = sub_251B25B74(v10 + v67 * v13, (uint64_t)v8, type metadata accessor for StaticRoom);
    if (__OFADD__(v13++, 1))
    {
      __break(1u);
      goto LABEL_46;
    }
    if ((sub_251F34D70() & 1) == 0) {
      goto LABEL_9;
    }
    uint64_t v15 = v5[5];
    uint64_t v16 = *(void *)&v8[v15];
    uint64_t v17 = *(void *)&v8[v15 + 8];
    uint64_t v18 = (void *)(a1 + v15);
    BOOL v19 = v16 == *v18 && v17 == v18[1];
    if (!v19 && (sub_251F36B10() & 1) == 0 || v8[v5[6]] != *(unsigned char *)(a1 + v5[6])) {
      goto LABEL_9;
    }
    uint64_t v20 = v5[7];
    uint64_t v21 = *(void *)(a1 + v20);
    if (*(void *)&v8[v20]) {
      break;
    }
    if (!v21) {
      goto LABEL_21;
    }
LABEL_9:
    sub_251B25BDC((uint64_t)v8, type metadata accessor for StaticRoom);
    if (v13 == v9)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  if (!v21) {
    goto LABEL_9;
  }
  swift_bridgeObjectRetain();
  uint64_t v22 = swift_bridgeObjectRetain();
  char v23 = sub_251B09F88(v22, v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v23 & 1) == 0) {
    goto LABEL_9;
  }
LABEL_21:
  if ((sub_251F34D70() & 1) == 0) {
    goto LABEL_9;
  }
  if ((sub_251AF9FA8(*(void *)&v8[v5[9]], *(void *)(a1 + v5[9])) & 1) == 0) {
    goto LABEL_9;
  }
  if ((sub_251AFECF0(*(void *)&v8[v5[10]], *(void *)(a1 + v5[10])) & 1) == 0) {
    goto LABEL_9;
  }
  if ((sub_251AFF55C(*(void *)&v8[v5[11]], *(void *)(a1 + v5[11])) & 1) == 0) {
    goto LABEL_9;
  }
  if ((sub_251AFFB5C(*(void *)&v8[v5[12]], *(void *)(a1 + v5[12])) & 1) == 0) {
    goto LABEL_9;
  }
  if ((sub_251B0015C(*(void *)&v8[v5[13]], *(void *)(a1 + v5[13])) & 1) == 0) {
    goto LABEL_9;
  }
  if ((sub_251AFA5A8(*(void *)&v8[v5[14]], *(void *)(a1 + v5[14])) & 1) == 0) {
    goto LABEL_9;
  }
  if ((sub_251AF99A8(*(void *)&v8[v5[15]], *(void *)(a1 + v5[15])) & 1) == 0) {
    goto LABEL_9;
  }
  uint64_t v24 = v5[16];
  uint64_t v25 = *(void *)&v8[v24];
  uint64_t v54 = *(void *)(a1 + v24);
  uint64_t v55 = v25;
  uint64_t v26 = *(char **)(v54 + 16);
  unint64_t v56 = *(char **)(v25 + 16);
  if (v56 != v26) {
    goto LABEL_9;
  }
  if (!v56 || (uint64_t v27 = sub_251F34DA0(), v28 = *(void **)(v27 - 8), v55 == v54))
  {
LABEL_36:
    uint64_t v38 = v5[17];
    uint64_t v39 = *(void *)&v8[v38];
    uint64_t v55 = *(void *)(a1 + v38);
    unint64_t v56 = (char *)v39;
    unint64_t v40 = *(void *)(v39 + 16);
    if (v40 == *(void *)(v55 + 16))
    {
      if (!v40 || (uint64_t v41 = sub_251F34DA0(), v54 = v41, v42 = *(void *)(v41 - 8), v56 == (char *)v55))
      {
LABEL_42:
        if (sub_251B042A4(*(void *)&v8[v5[18]], *(void *)(a1 + v5[18])))
        {
          sub_251B25BDC((uint64_t)v8, type metadata accessor for StaticRoom);
          swift_bridgeObjectRelease();
          return 1;
        }
      }
      else
      {
        unint64_t v43 = (*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
        unint64_t v52 = *(uint64_t (**)(char *))(v42 + 16);
        uint64_t v53 = v42 + 16;
        unint64_t v62 = *(void **)(v42 + 64);
        unint64_t v50 = *(uint64_t (**)(void))(v42 + 72);
        uint64_t v51 = (void (**)(char *, uint64_t))(v42 + 8);
        while (1)
        {
          unint64_t v63 = v43;
          uint64_t v60 = &v49;
          unint64_t v61 = v40;
          MEMORY[0x270FA5388](v41);
          unint64_t v58 = (v44 + 15) & 0xFFFFFFFFFFFFFFF0;
          uint64_t v64 = (char *)&v49 - v58;
          uint64_t v45 = v54;
          uint64_t v46 = v52((char *)&v49 - v58);
          uint64_t v59 = &v49;
          MEMORY[0x270FA5388](v46);
          uint64_t v57 = (char *)&v49 - v58;
          v47((char *)&v49 - v58, v55 + v63, v45);
          sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
          LODWORD(v58) = sub_251F35650();
          uint64_t v48 = *v51;
          (*v51)(v57, v45);
          uint64_t v41 = ((uint64_t (*)(char *, uint64_t))v48)(v64, v45);
          if ((v58 & 1) == 0) {
            break;
          }
          unint64_t v43 = (unint64_t)v50 + v63;
          unint64_t v40 = v61 - 1;
          if (v61 == 1) {
            goto LABEL_42;
          }
        }
      }
    }
    goto LABEL_9;
  }
  unint64_t v29 = 0;
  uint64_t v30 = (uint64_t (*)(void))v28[2];
  uint64_t v31 = v28[8];
  unint64_t v52 = (uint64_t (*)(char *))v27;
  uint64_t v53 = v31;
  uint64_t v49 = v28[9];
  unint64_t v50 = v30;
  unint64_t v62 = v28 + 2;
  uint64_t v51 = (void (**)(char *, uint64_t))(v28 + 1);
  while (1)
  {
    uint64_t v60 = &v49;
    uint64_t v32 = v53;
    MEMORY[0x270FA5388](v27);
    unint64_t v61 = (v32 + 15) & 0xFFFFFFFFFFFFFFF0;
    unint64_t v63 = v33;
    uint64_t v64 = (char *)&v49 - v61;
    uint64_t v34 = v30((char *)&v49 - v61);
    uint64_t v59 = &v49;
    uint64_t result = MEMORY[0x270FA5388](v34);
    uint64_t v35 = v52;
    unint64_t v36 = *(void *)(v54 + 16);
    uint64_t v57 = v29;
    if ((unint64_t)v29 >= v36) {
      break;
    }
    unint64_t v58 = (unint64_t)&v49 - v61;
    ((void (*)(char *, unint64_t, uint64_t (*)(char *)))v30)((char *)&v49 - v61, v54 + v63, v52);
    sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
    LODWORD(v61) = sub_251F35650();
    uint64_t v37 = *v51;
    (*v51)((char *)v58, (uint64_t)v35);
    uint64_t v27 = ((uint64_t (*)(char *, uint64_t (*)(char *)))v37)(v64, v35);
    if ((v61 & 1) == 0) {
      goto LABEL_9;
    }
    unint64_t v29 = v57 + 1;
    uint64_t v30 = v50;
    if (v56 == v57 + 1) {
      goto LABEL_36;
    }
  }
LABEL_46:
  __break(1u);
  return result;
}

void sub_251B1DFEC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  if (v3 != sub_251F36300()) {
    return;
  }
  int64_t v4 = 0;
  uint64_t v5 = a2 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a2 + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (v8)
  {
    unint64_t v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v11 = v10 | (v4 << 6);
LABEL_6:
    id v12 = *(id *)(*(void *)(a2 + 48) + 8 * v11);
    char v13 = sub_251F36350();

    if ((v13 & 1) == 0) {
      return;
    }
  }
  int64_t v14 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v14 >= v9) {
    return;
  }
  unint64_t v15 = *(void *)(v5 + 8 * v14);
  ++v4;
  if (v15) {
    goto LABEL_19;
  }
  int64_t v4 = v14 + 1;
  if (v14 + 1 >= v9) {
    return;
  }
  unint64_t v15 = *(void *)(v5 + 8 * v4);
  if (v15)
  {
LABEL_19:
    unint64_t v8 = (v15 - 1) & v15;
    unint64_t v11 = __clz(__rbit64(v15)) + (v4 << 6);
    goto LABEL_6;
  }
  int64_t v16 = v14 + 2;
  if (v16 >= v9) {
    return;
  }
  unint64_t v15 = *(void *)(v5 + 8 * v16);
  if (v15)
  {
    int64_t v4 = v16;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v4 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v4 >= v9) {
      return;
    }
    unint64_t v15 = *(void *)(v5 + 8 * v4);
    ++v16;
    if (v15) {
      goto LABEL_19;
    }
  }
LABEL_23:
  __break(1u);
}

uint64_t sub_251B1E140(uint64_t isStackAllocationSafe)
{
  uint64_t v2 = isStackAllocationSafe;
  v9[1] = *MEMORY[0x263EF8340];
  char v3 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v4 = (unint64_t)((1 << v3) + 63) >> 6;
  size_t v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    bzero((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    uint64_t v6 = sub_251B1E6E8((void *)((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0)), v4, v2);
    swift_release();
    if (v1) {
      swift_willThrow();
    }
  }
  else
  {
    uint64_t v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    uint64_t v6 = sub_251B1E6E8((unint64_t *)v7, v4, v2);
    swift_release();
    MEMORY[0x2533AC760](v7, -1, -1);
  }
  return v6;
}

uint64_t sub_251B1E2A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_251B1E340(a1, a2, a3, (uint64_t (*)(void))type metadata accessor for StaticService, (uint64_t (*)(void))type metadata accessor for StaticService, (uint64_t (*)(void))type metadata accessor for StaticService, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_251F1BD94);
}

uint64_t sub_251B1E340(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void), uint64_t (*a7)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  BOOL v19 = a6;
  uint64_t v20 = a7;
  id v12 = (uint64_t (*)(char *))isStackAllocationSafe;
  uint64_t v21 = *MEMORY[0x263EF8340];
  char v13 = *(unsigned char *)(a3 + 32);
  unint64_t v14 = (unint64_t)((1 << v13) + 63) >> 6;
  size_t v15 = 8 * v14;
  if ((v13 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    uint64_t v18 = &v18;
    MEMORY[0x270FA5388](isStackAllocationSafe);
    bzero((char *)&v18 - ((v15 + 15) & 0x3FFFFFFFFFFFFFF0), v15);
    uint64_t v16 = sub_251B1E95C((uint64_t)&v18 - ((v15 + 15) & 0x3FFFFFFFFFFFFFF0), v14, a3, v12, a2, a4, a5, v19, v20);
    swift_release();
    if (v7) {
      swift_willThrow();
    }
  }
  else
  {
    uint64_t v18 = (void *)swift_slowAlloc();
    bzero(v18, v15);
    uint64_t v16 = sub_251B1E95C((uint64_t)v18, v14, a3, v12, a2, a4, a5, v19, v20);
    swift_release();
    MEMORY[0x2533AC760](v18, -1, -1);
  }
  return v16;
}

uint64_t sub_251B1E514(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_251B1E340(a1, a2, a3, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_251F1CFC0);
}

uint64_t sub_251B1E5B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_251B1E340(a1, a2, a3, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_251F1D274);
}

uint64_t sub_251B1E64C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_251B1E340(a1, a2, a3, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_251F1D528);
}

uint64_t sub_251B1E6E8(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v22 = a2;
  char v23 = a1;
  uint64_t v4 = type metadata accessor for StaticActionSet();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t result = MEMORY[0x270FA5388](v4);
  unint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = 0;
  int64_t v9 = 0;
  uint64_t v10 = *(void *)(a3 + 56);
  uint64_t v25 = a3 + 56;
  uint64_t v11 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v10;
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v9 << 6);
      goto LABEL_5;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v18 >= v14) {
      goto LABEL_24;
    }
    unint64_t v19 = *(void *)(v25 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v14) {
        goto LABEL_24;
      }
      unint64_t v19 = *(void *)(v25 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v14) {
          goto LABEL_24;
        }
        unint64_t v19 = *(void *)(v25 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v13 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_5:
    sub_251B25B74(*(void *)(a3 + 48) + *(void *)(v5 + 72) * v16, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
    int v17 = v8[*(int *)(v4 + 44)];
    uint64_t result = sub_251B25BDC((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
    if (v17 == 1)
    {
      *(unint64_t *)((char *)v23 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      if (__OFADD__(v24++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        return sub_251F1C0D4(v23, v22, v24, a3);
      }
    }
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v14) {
    goto LABEL_24;
  }
  unint64_t v19 = *(void *)(v25 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v14) {
      goto LABEL_24;
    }
    unint64_t v19 = *(void *)(v25 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_251B1E95C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *), uint64_t a5, uint64_t (*a6)(void), uint64_t (*a7)(void), uint64_t (*a8)(void), uint64_t (*a9)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v39 = a8;
  uint64_t v37 = a4;
  uint64_t v38 = a7;
  uint64_t v33 = a1;
  uint64_t v31 = a2;
  uint64_t v32 = a9;
  uint64_t v11 = a6(0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t result = MEMORY[0x270FA5388](v11 - 8);
  unint64_t v15 = (char *)&v31 - v14;
  int64_t v16 = 0;
  uint64_t v17 = a3;
  uint64_t v18 = *(void *)(a3 + 56);
  uint64_t v34 = 0;
  uint64_t v35 = a3 + 56;
  uint64_t v19 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v20 = -1;
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  unint64_t v21 = v20 & v18;
  int64_t v36 = (unint64_t)(v19 + 63) >> 6;
  while (v21)
  {
    unint64_t v22 = __clz(__rbit64(v21));
    v21 &= v21 - 1;
    unint64_t v23 = v22 | (v16 << 6);
LABEL_17:
    sub_251B25B74(*(void *)(v17 + 48) + *(void *)(v12 + 72) * v23, (uint64_t)v15, v38);
    char v27 = v37(v15);
    uint64_t result = sub_251B25BDC((uint64_t)v15, v39);
    if (v9) {
      return result;
    }
    if (v27)
    {
      *(void *)(v33 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
      BOOL v24 = __OFADD__(v34++, 1);
      if (v24) {
        goto LABEL_30;
      }
    }
  }
  BOOL v24 = __OFADD__(v16++, 1);
  if (v24)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v16 >= v36) {
    goto LABEL_27;
  }
  unint64_t v25 = *(void *)(v35 + 8 * v16);
  if (v25)
  {
LABEL_16:
    unint64_t v21 = (v25 - 1) & v25;
    unint64_t v23 = __clz(__rbit64(v25)) + (v16 << 6);
    goto LABEL_17;
  }
  int64_t v26 = v16 + 1;
  if (v16 + 1 >= v36) {
    goto LABEL_27;
  }
  unint64_t v25 = *(void *)(v35 + 8 * v26);
  if (v25) {
    goto LABEL_15;
  }
  int64_t v26 = v16 + 2;
  if (v16 + 2 >= v36) {
    goto LABEL_27;
  }
  unint64_t v25 = *(void *)(v35 + 8 * v26);
  if (v25) {
    goto LABEL_15;
  }
  int64_t v26 = v16 + 3;
  if (v16 + 3 >= v36)
  {
LABEL_27:
    uint64_t v29 = v31;
    id v28 = v32;
    uint64_t v30 = v34;
    swift_retain();
    return v28(v33, v29, v30, v17);
  }
  unint64_t v25 = *(void *)(v35 + 8 * v26);
  if (v25)
  {
LABEL_15:
    int64_t v16 = v26;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v16 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_27;
    }
    unint64_t v25 = *(void *)(v35 + 8 * v16);
    ++v26;
    if (v25) {
      goto LABEL_16;
    }
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_251B1EBF4(void **a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for RoomType(0) - 8);
  char v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    char v3 = (void *)sub_251ECDD14(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  uint64_t result = sub_251B1F15C(v6);
  *a1 = v3;
  return result;
}

void *sub_251B1EC9C(void **a1, void (*a2)(uint64_t *__return_ptr, unint64_t), uint64_t a3)
{
  uint64_t v6 = *(void *)(type metadata accessor for StaticCameraProfile() - 8);
  uint64_t v7 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v7 = (void *)sub_251ECDDB4(v7);
  }
  uint64_t v8 = v7[2];
  v10[0] = (uint64_t)v7 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  v10[1] = v8;
  uint64_t result = sub_251B367B4(v10, a2, a3, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile, (void (*)(unint64_t *, unint64_t *, unint64_t *))sub_251ECDAC4);
  *a1 = v7;
  return result;
}

uint64_t sub_251B1EDC4(void **a1, void (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v6 = *(void *)(type metadata accessor for StaticCameraProfile() - 8);
  uint64_t v7 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v7 = (void *)sub_251ECDDB4(v7);
  }
  uint64_t v8 = v7[2];
  v10[0] = (char *)v7 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  v10[1] = v8;
  uint64_t result = sub_251B38498(v10, a2, a3, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile, (void (*)(unint64_t *, unint64_t *, unint64_t *))sub_251ECDAC4);
  *a1 = v7;
  return result;
}

void *sub_251B1EEFC(void **a1, void (*a2)(uint64_t *__return_ptr, unint64_t), uint64_t a3)
{
  uint64_t v6 = *(void *)(type metadata accessor for StaticResident() - 8);
  uint64_t v7 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v7 = (void *)sub_251ECDDC8(v7);
  }
  uint64_t v8 = v7[2];
  v10[0] = (uint64_t)v7 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  v10[1] = v8;
  uint64_t result = sub_251B367B4(v10, a2, a3, (uint64_t (*)(void))type metadata accessor for StaticResident, (uint64_t (*)(void))type metadata accessor for StaticResident, (uint64_t (*)(void))type metadata accessor for StaticResident, (uint64_t (*)(void))type metadata accessor for StaticResident, (uint64_t (*)(void))type metadata accessor for StaticResident, (void (*)(unint64_t *, unint64_t *, unint64_t *))sub_251ECDADC);
  *a1 = v7;
  return result;
}

uint64_t sub_251B1F024(void **a1, void (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v6 = *(void *)(type metadata accessor for StaticResident() - 8);
  uint64_t v7 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v7 = (void *)sub_251ECDDC8(v7);
  }
  uint64_t v8 = v7[2];
  v10[0] = (char *)v7 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  v10[1] = v8;
  uint64_t result = sub_251B38498(v10, a2, a3, (uint64_t (*)(void))type metadata accessor for StaticResident, (uint64_t (*)(void))type metadata accessor for StaticResident, (uint64_t (*)(void))type metadata accessor for StaticResident, (uint64_t (*)(void))type metadata accessor for StaticResident, (uint64_t (*)(void))type metadata accessor for StaticResident, (void (*)(unint64_t *, unint64_t *, unint64_t *))sub_251ECDADC);
  *a1 = v7;
  return result;
}

uint64_t sub_251B1F15C(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v260 = type metadata accessor for StaticRoom(0);
  uint64_t v4 = *(void *)(v260 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v260);
  uint64_t v246 = (uint64_t)&v224 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v224 - v8;
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)&v224 - v11;
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v248 = (uint64_t)&v224 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v250 = (uint64_t)&v224 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v254 = (uint64_t)&v224 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  unint64_t v21 = (char *)&v224 - v20;
  uint64_t v22 = MEMORY[0x270FA5388](v19);
  uint64_t v227 = (uint64_t)&v224 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v233 = (uint64_t)&v224 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v232 = (uint64_t)&v224 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v243 = (uint64_t)&v224 - v29;
  MEMORY[0x270FA5388](v28);
  uint64_t v235 = (uint64_t)&v224 - v30;
  uint64_t v253 = type metadata accessor for RoomType(0);
  uint64_t v244 = *(void *)(v253 - 8);
  uint64_t v31 = MEMORY[0x270FA5388](v253);
  uint64_t v237 = (uint64_t)&v224 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  uint64_t v252 = (char *)&v224 - v34;
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  uint64_t v37 = (char *)&v224 - v36;
  uint64_t v38 = MEMORY[0x270FA5388](v35);
  uint64_t v255 = (uint64_t)&v224 - v39;
  uint64_t v40 = MEMORY[0x270FA5388](v38);
  uint64_t v264 = (uint64_t)&v224 - v41;
  uint64_t v42 = MEMORY[0x270FA5388](v40);
  uint64_t v263 = (uint64_t)&v224 - v43;
  uint64_t v44 = MEMORY[0x270FA5388](v42);
  uint64_t v46 = (char *)&v224 - v45;
  uint64_t v47 = MEMORY[0x270FA5388](v44);
  v234 = (char *)&v224 - v48;
  uint64_t v49 = MEMORY[0x270FA5388](v47);
  uint64_t v242 = (uint64_t)&v224 - v50;
  uint64_t v51 = MEMORY[0x270FA5388](v49);
  uint64_t v239 = (uint64_t)&v224 - v52;
  uint64_t v53 = MEMORY[0x270FA5388](v51);
  uint64_t v228 = (uint64_t)&v224 - v54;
  MEMORY[0x270FA5388](v53);
  uint64_t v240 = (char *)&v224 - v55;
  v265 = a1;
  uint64_t v56 = a1[1];
  uint64_t result = sub_251F36AA0();
  if (result >= v56)
  {
    if (v56 < 0) {
      goto LABEL_180;
    }
    if (v56) {
      return sub_251B208A4(0, v56, 1, v265);
    }
    return result;
  }
  unint64_t v245 = v9;
  if (v56 >= 0) {
    uint64_t v58 = v56;
  }
  else {
    uint64_t v58 = v56 + 1;
  }
  if (v56 < -1) {
    goto LABEL_188;
  }
  uint64_t v59 = v4;
  uint64_t v230 = result;
  uint64_t v225 = v21;
  if (v56 < 2)
  {
    uint64_t v64 = MEMORY[0x263F8EE78];
    unint64_t v241 = MEMORY[0x263F8EE78]
         + ((*(unsigned __int8 *)(v244 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v244 + 80));
    if (v56 != 1)
    {
      unint64_t v165 = *(void *)(MEMORY[0x263F8EE78] + 16);
      uint64_t v68 = (char *)MEMORY[0x263F8EE78];
      goto LABEL_143;
    }
    uint64_t v60 = 1;
    uint64_t v247 = v1;
    uint64_t v226 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v60 = v56;
    uint64_t v247 = v1;
    uint64_t v61 = v58 >> 1;
    uint64_t v62 = sub_251F35B50();
    *(void *)(v62 + 16) = v61;
    uint64_t v63 = *(unsigned __int8 *)(v244 + 80);
    uint64_t v226 = v62;
    unint64_t v241 = v62 + ((v63 + 32) & ~v63);
  }
  uint64_t v65 = 0;
  long long v249 = v12;
  uint64_t v66 = v250;
  uint64_t v67 = v243;
  uint64_t v251 = v37;
  uint64_t v68 = (char *)MEMORY[0x263F8EE78];
  uint64_t v231 = v46;
  uint64_t v69 = (uint64_t)v240;
  uint64_t v70 = v60;
  v259 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48);
  do
  {
    uint64_t v71 = v65;
    uint64_t v72 = v65 + 1;
    uint64_t v256 = v70;
    uint64_t v238 = v65;
    if (v65 + 1 >= v70)
    {
      ++v65;
      uint64_t v106 = v230;
      goto LABEL_55;
    }
    uint64_t v229 = v68;
    uint64_t v73 = *v265;
    uint64_t v74 = *(void *)(v244 + 72);
    sub_251B25B74(*v265 + v74 * v72, v69, type metadata accessor for RoomType);
    uint64_t v236 = v73;
    uint64_t v262 = v74;
    uint64_t v75 = v73 + v74 * v65;
    uint64_t v71 = v65;
    uint64_t v76 = v228;
    sub_251B25B74(v75, v228, type metadata accessor for RoomType);
    uint64_t v77 = v247;
    LODWORD(v261) = sub_251B10BB4(v69, v76);
    uint64_t v78 = v260;
    uint64_t v79 = v242;
    if (v77)
    {
      sub_251B25BDC(v76, type metadata accessor for RoomType);
      sub_251B25BDC(v69, type metadata accessor for RoomType);
      goto LABEL_157;
    }
    uint64_t v247 = 0;
    sub_251B25BDC(v76, type metadata accessor for RoomType);
    sub_251B25BDC(v69, type metadata accessor for RoomType);
    v65 += 2;
    if (v71 + 2 >= v256)
    {
      uint64_t v66 = v250;
      goto LABEL_41;
    }
    uint64_t v258 = v262 * v72;
    uint64_t v80 = v236;
    uint64_t v257 = v262 * v65;
    uint64_t v81 = (uint64_t)v234;
    uint64_t v82 = v256;
    do
    {
      uint64_t v83 = v239;
      sub_251B25B74(v80 + v257, v239, type metadata accessor for RoomType);
      sub_251B25B74(v80 + v258, v79, type metadata accessor for RoomType);
      sub_251B25B74(v83, v81, type metadata accessor for RoomType);
      uint64_t v84 = *v259;
      if ((*v259)(v81, 4, v78))
      {
        sub_251B25BDC(v81, type metadata accessor for RoomType);
        int v85 = 1;
        goto LABEL_23;
      }
      uint64_t v86 = v235;
      sub_251B25C90(v81, v235, type metadata accessor for StaticRoom);
      uint64_t v87 = (uint64_t)v231;
      sub_251B25B74(v79, (uint64_t)v231, type metadata accessor for RoomType);
      if (v84(v87, 4, v78))
      {
        sub_251B25BDC(v86, type metadata accessor for StaticRoom);
        sub_251B25BDC(v87, type metadata accessor for RoomType);
        int v85 = 1;
        uint64_t v81 = (uint64_t)v234;
        goto LABEL_23;
      }
      uint64_t v88 = v87;
      uint64_t v89 = v243;
      sub_251B25C90(v88, v243, type metadata accessor for StaticRoom);
      uint64_t v90 = *(int *)(v78 + 20);
      uint64_t v91 = *(void *)(v86 + v90);
      uint64_t v92 = *(void *)(v86 + v90 + 8);
      char v93 = (void *)(v89 + v90);
      if (v91 == *v93 && v92 == v93[1])
      {
        uint64_t v98 = v232;
        sub_251B25B74(v86, v232, type metadata accessor for StaticRoom);
        uint64_t v97 = v233;
        sub_251B25B74(v89, v233, type metadata accessor for StaticRoom);
        uint64_t v81 = (uint64_t)v234;
      }
      else
      {
        char v95 = sub_251F36B10();
        uint64_t v96 = v232;
        sub_251B25B74(v86, v232, type metadata accessor for StaticRoom);
        uint64_t v97 = v233;
        uint64_t v98 = v96;
        uint64_t v78 = v260;
        sub_251B25B74(v89, v233, type metadata accessor for StaticRoom);
        uint64_t v81 = (uint64_t)v234;
        if (v95)
        {
          sub_251B25BDC(v97, type metadata accessor for StaticRoom);
          sub_251B25BDC(v98, type metadata accessor for StaticRoom);
          sub_251B25BDC(v243, type metadata accessor for StaticRoom);
          sub_251B25BDC(v235, type metadata accessor for StaticRoom);
          int v85 = 1;
          uint64_t v82 = v256;
          goto LABEL_23;
        }
      }
      uint64_t v99 = *(int *)(v78 + 20);
      uint64_t v100 = *(void *)(v98 + v99);
      uint64_t v101 = *(void *)(v98 + v99 + 8);
      uint64_t v102 = (void *)(v97 + v99);
      if (v100 == *v102 && v101 == v102[1])
      {
        uint64_t v103 = v227;
        sub_251B25B74(v98, v227, type metadata accessor for StaticRoom);
        uint64_t v104 = (uint64_t)v225;
        sub_251B25B74(v97, (uint64_t)v225, type metadata accessor for StaticRoom);
LABEL_37:
        int v85 = MEMORY[0x2533A9CA0](v103, v104);
        goto LABEL_38;
      }
      char v105 = sub_251F36B10();
      uint64_t v103 = v227;
      sub_251B25B74(v98, v227, type metadata accessor for StaticRoom);
      uint64_t v104 = (uint64_t)v225;
      sub_251B25B74(v97, (uint64_t)v225, type metadata accessor for StaticRoom);
      int v85 = 0;
      if (v105) {
        goto LABEL_37;
      }
LABEL_38:
      sub_251B25BDC(v104, type metadata accessor for StaticRoom);
      sub_251B25BDC(v103, type metadata accessor for StaticRoom);
      sub_251B25BDC(v233, type metadata accessor for StaticRoom);
      sub_251B25BDC(v232, type metadata accessor for StaticRoom);
      sub_251B25BDC(v243, type metadata accessor for StaticRoom);
      sub_251B25BDC(v235, type metadata accessor for StaticRoom);
      uint64_t v82 = v256;
LABEL_23:
      sub_251B25BDC(v242, type metadata accessor for RoomType);
      sub_251B25BDC(v239, type metadata accessor for RoomType);
      if ((v261 ^ v85)) {
        goto LABEL_40;
      }
      ++v65;
      v80 += v262;
      uint64_t v78 = v260;
      uint64_t v79 = v242;
    }
    while (v82 != v65);
    uint64_t v65 = v82;
LABEL_40:
    uint64_t v66 = v250;
    uint64_t v69 = (uint64_t)v240;
    uint64_t v71 = v238;
LABEL_41:
    uint64_t v68 = v229;
    uint64_t v106 = v230;
    uint64_t v67 = v243;
    if (v261)
    {
      if (v65 >= v71)
      {
        if (v71 < v65)
        {
          uint64_t v107 = 0;
          uint64_t v108 = v71;
          uint64_t v109 = v262 * (v65 - 1);
          uint64_t v110 = v65 * v262;
          uint64_t v111 = v108;
          uint64_t v112 = v108 * v262;
          do
          {
            if (v111 != v65 + v107 - 1)
            {
              uint64_t v113 = v236;
              if (!v236) {
                goto LABEL_186;
              }
              unint64_t v114 = v236 + v112;
              sub_251B25C90(v236 + v112, v237, type metadata accessor for RoomType);
              if (v112 < v109 || v114 >= v113 + v110)
              {
                swift_arrayInitWithTakeFrontToBack();
              }
              else if (v112 != v109)
              {
                swift_arrayInitWithTakeBackToFront();
              }
              sub_251B25C90(v237, v113 + v109, type metadata accessor for RoomType);
            }
            ++v111;
            --v107;
            v109 -= v262;
            v110 -= v262;
            v112 += v262;
          }
          while (v111 < v65 + v107);
          uint64_t v66 = v250;
          uint64_t v67 = v243;
          uint64_t v68 = v229;
          uint64_t v69 = (uint64_t)v240;
          uint64_t v106 = v230;
          uint64_t v71 = v238;
        }
        goto LABEL_55;
      }
LABEL_183:
      __break(1u);
LABEL_184:
      __break(1u);
LABEL_185:
      __break(1u);
LABEL_186:
      __break(1u);
LABEL_187:
      __break(1u);
LABEL_188:
      uint64_t result = sub_251F36670();
      __break(1u);
      return result;
    }
LABEL_55:
    if (v65 >= v256) {
      goto LABEL_90;
    }
    if (__OFSUB__(v65, v71)) {
      goto LABEL_179;
    }
    if (v65 - v71 >= v106) {
      goto LABEL_90;
    }
    uint64_t v115 = v71 + v106;
    if (__OFADD__(v71, v106)) {
      goto LABEL_181;
    }
    uint64_t v116 = v256;
    if (v115 < v256) {
      uint64_t v116 = v115;
    }
    if (v116 < v71)
    {
LABEL_182:
      __break(1u);
      goto LABEL_183;
    }
    if (v65 == v116) {
      goto LABEL_90;
    }
    uint64_t v229 = v68;
    uint64_t v117 = *(void *)(v244 + 72);
    uint64_t v118 = v117 * (v65 - 1);
    uint64_t v256 = v117;
    uint64_t v119 = v65 * v117;
    uint64_t v120 = (uint64_t)v252;
    uint64_t v236 = v116;
    while (2)
    {
      uint64_t v121 = 0;
      uint64_t v122 = v238;
      uint64_t v257 = v119;
      uint64_t v258 = v65;
      while (2)
      {
        uint64_t v123 = *v265;
        uint64_t v262 = v119 + v121;
        uint64_t v124 = v263;
        sub_251B25B74(v119 + v121 + v123, v263, type metadata accessor for RoomType);
        uint64_t v125 = v118;
        uint64_t v261 = v118 + v121;
        uint64_t v126 = v118 + v121 + v123;
        uint64_t v127 = v264;
        sub_251B25B74(v126, v264, type metadata accessor for RoomType);
        uint64_t v128 = v124;
        uint64_t v129 = v255;
        sub_251B25B74(v128, v255, type metadata accessor for RoomType);
        uint64_t v130 = v260;
        id v131 = *v259;
        if ((*v259)(v129, 4, v260))
        {
          sub_251B25BDC(v129, type metadata accessor for RoomType);
          goto LABEL_72;
        }
        uint64_t v132 = v129;
        uint64_t v133 = v254;
        sub_251B25C90(v132, v254, type metadata accessor for StaticRoom);
        uint64_t v134 = (uint64_t)v251;
        sub_251B25B74(v127, (uint64_t)v251, type metadata accessor for RoomType);
        if (v131(v134, 4, v130))
        {
          sub_251B25BDC(v133, type metadata accessor for StaticRoom);
          sub_251B25BDC(v134, type metadata accessor for RoomType);
          uint64_t v120 = (uint64_t)v252;
LABEL_72:
          uint64_t v135 = v258;
          uint64_t v118 = v125;
LABEL_73:
          sub_251B25BDC(v264, type metadata accessor for RoomType);
          sub_251B25BDC(v263, type metadata accessor for RoomType);
          uint64_t v119 = v257;
LABEL_74:
          uint64_t v136 = *v265;
          if (!*v265) {
            goto LABEL_184;
          }
          uint64_t v137 = v136 + v118 + v121;
          sub_251B25C90(v136 + v119 + v121, v120, type metadata accessor for RoomType);
          swift_arrayInitWithTakeFrontToBack();
          sub_251B25C90(v120, v137, type metadata accessor for RoomType);
          v121 -= v256;
          if (v135 == ++v122) {
            goto LABEL_65;
          }
          continue;
        }
        break;
      }
      uint64_t v138 = v134;
      uint64_t v139 = v250;
      sub_251B25C90(v138, v250, type metadata accessor for StaticRoom);
      uint64_t v140 = *(int *)(v130 + 20);
      uint64_t v141 = *(void *)(v133 + v140);
      uint64_t v142 = *(void *)(v133 + v140 + 8);
      uint64_t v143 = (void *)(v139 + v140);
      BOOL v144 = v141 == *v143 && v142 == v143[1];
      uint64_t v135 = v258;
      uint64_t v118 = v125;
      if (v144)
      {
        uint64_t v149 = v133;
        uint64_t v147 = v248;
        sub_251B25B74(v149, v248, type metadata accessor for StaticRoom);
        uint64_t v148 = (uint64_t)v249;
        sub_251B25B74(v139, (uint64_t)v249, type metadata accessor for StaticRoom);
      }
      else
      {
        char v145 = sub_251F36B10();
        uint64_t v146 = v133;
        uint64_t v147 = v248;
        sub_251B25B74(v146, v248, type metadata accessor for StaticRoom);
        uint64_t v148 = (uint64_t)v249;
        uint64_t v130 = v260;
        sub_251B25B74(v139, (uint64_t)v249, type metadata accessor for StaticRoom);
        if (v145)
        {
          sub_251B25BDC(v148, type metadata accessor for StaticRoom);
          sub_251B25BDC(v147, type metadata accessor for StaticRoom);
          sub_251B25BDC(v250, type metadata accessor for StaticRoom);
          sub_251B25BDC(v254, type metadata accessor for StaticRoom);
          uint64_t v120 = (uint64_t)v252;
          goto LABEL_73;
        }
      }
      uint64_t v150 = *(int *)(v130 + 20);
      uint64_t v151 = *(void *)(v147 + v150);
      uint64_t v152 = *(void *)(v147 + v150 + 8);
      uint64_t v153 = (void *)(v148 + v150);
      if (v151 == *v153 && v152 == v153[1])
      {
        uint64_t v154 = v147;
        uint64_t v155 = (uint64_t)v245;
        sub_251B25B74(v154, (uint64_t)v245, type metadata accessor for StaticRoom);
        uint64_t v156 = (uint64_t)v249;
        uint64_t v157 = v246;
        sub_251B25B74((uint64_t)v249, v246, type metadata accessor for StaticRoom);
        uint64_t v119 = v257;
        goto LABEL_87;
      }
      char v158 = sub_251F36B10();
      uint64_t v159 = v147;
      uint64_t v155 = (uint64_t)v245;
      sub_251B25B74(v159, (uint64_t)v245, type metadata accessor for StaticRoom);
      uint64_t v156 = (uint64_t)v249;
      uint64_t v157 = v246;
      sub_251B25B74((uint64_t)v249, v246, type metadata accessor for StaticRoom);
      uint64_t v119 = v257;
      if (v158)
      {
LABEL_87:
        char v160 = MEMORY[0x2533A9CA0](v155, v157);
        sub_251B25BDC(v157, type metadata accessor for StaticRoom);
        sub_251B25BDC(v155, type metadata accessor for StaticRoom);
        sub_251B25BDC(v156, type metadata accessor for StaticRoom);
        sub_251B25BDC(v248, type metadata accessor for StaticRoom);
        sub_251B25BDC(v250, type metadata accessor for StaticRoom);
        sub_251B25BDC(v254, type metadata accessor for StaticRoom);
        sub_251B25BDC(v264, type metadata accessor for RoomType);
        sub_251B25BDC(v263, type metadata accessor for RoomType);
        uint64_t v120 = (uint64_t)v252;
        if ((v160 & 1) == 0) {
          goto LABEL_65;
        }
        goto LABEL_74;
      }
      sub_251B25BDC(v157, type metadata accessor for StaticRoom);
      sub_251B25BDC(v155, type metadata accessor for StaticRoom);
      sub_251B25BDC(v156, type metadata accessor for StaticRoom);
      sub_251B25BDC(v248, type metadata accessor for StaticRoom);
      sub_251B25BDC(v250, type metadata accessor for StaticRoom);
      sub_251B25BDC(v254, type metadata accessor for StaticRoom);
      sub_251B25BDC(v264, type metadata accessor for RoomType);
      sub_251B25BDC(v263, type metadata accessor for RoomType);
      uint64_t v120 = (uint64_t)v252;
LABEL_65:
      uint64_t v65 = v135 + 1;
      v118 += v256;
      v119 += v256;
      if (v65 != v236) {
        continue;
      }
      break;
    }
    uint64_t v65 = v236;
    uint64_t v67 = v243;
    uint64_t v68 = v229;
    uint64_t v69 = (uint64_t)v240;
    uint64_t v71 = v238;
    uint64_t v66 = v250;
LABEL_90:
    if (v65 < v71) {
      goto LABEL_175;
    }
    uint64_t v161 = v67;
    uint64_t v162 = v66;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v68 = sub_251ECD5C4(0, *((void *)v68 + 2) + 1, 1, v68);
    }
    unint64_t v164 = *((void *)v68 + 2);
    unint64_t v163 = *((void *)v68 + 3);
    unint64_t v165 = v164 + 1;
    if (v164 >= v163 >> 1)
    {
      uint64_t v68 = sub_251ECD5C4((char *)(v163 > 1), v164 + 1, 1, v68);
      uint64_t v67 = v161;
      uint64_t v66 = v162;
    }
    else
    {
      uint64_t v66 = v162;
      uint64_t v67 = v161;
    }
    *((void *)v68 + 2) = v165;
    char v166 = v68 + 32;
    uint64_t v167 = &v68[16 * v164 + 32];
    *(void *)uint64_t v167 = v238;
    *((void *)v167 + 1) = v65;
    if (v164)
    {
      while (2)
      {
        unint64_t v168 = v165 - 1;
        if (v165 >= 4)
        {
          unint64_t v173 = &v166[16 * v165];
          uint64_t v174 = *((void *)v173 - 8);
          uint64_t v175 = *((void *)v173 - 7);
          BOOL v179 = __OFSUB__(v175, v174);
          uint64_t v176 = v175 - v174;
          if (v179) {
            goto LABEL_163;
          }
          uint64_t v178 = *((void *)v173 - 6);
          uint64_t v177 = *((void *)v173 - 5);
          BOOL v179 = __OFSUB__(v177, v178);
          uint64_t v171 = v177 - v178;
          char v172 = v179;
          if (v179) {
            goto LABEL_164;
          }
          unint64_t v180 = v165 - 2;
          unint64_t v181 = &v166[16 * v165 - 32];
          uint64_t v183 = *(void *)v181;
          uint64_t v182 = *((void *)v181 + 1);
          BOOL v179 = __OFSUB__(v182, v183);
          uint64_t v184 = v182 - v183;
          if (v179) {
            goto LABEL_166;
          }
          BOOL v179 = __OFADD__(v171, v184);
          uint64_t v185 = v171 + v184;
          if (v179) {
            goto LABEL_169;
          }
          if (v185 >= v176)
          {
            uint64_t v203 = &v166[16 * v168];
            uint64_t v205 = *(void *)v203;
            uint64_t v204 = *((void *)v203 + 1);
            BOOL v179 = __OFSUB__(v204, v205);
            uint64_t v206 = v204 - v205;
            if (v179) {
              goto LABEL_173;
            }
            BOOL v196 = v171 < v206;
          }
          else
          {
LABEL_109:
            if (v172) {
              goto LABEL_165;
            }
            unint64_t v180 = v165 - 2;
            uint64_t v186 = &v166[16 * v165 - 32];
            uint64_t v188 = *(void *)v186;
            uint64_t v187 = *((void *)v186 + 1);
            BOOL v189 = __OFSUB__(v187, v188);
            uint64_t v190 = v187 - v188;
            char v191 = v189;
            if (v189) {
              goto LABEL_168;
            }
            uint64_t v192 = &v166[16 * v168];
            uint64_t v194 = *(void *)v192;
            uint64_t v193 = *((void *)v192 + 1);
            BOOL v179 = __OFSUB__(v193, v194);
            uint64_t v195 = v193 - v194;
            if (v179) {
              goto LABEL_171;
            }
            if (__OFADD__(v190, v195)) {
              goto LABEL_172;
            }
            if (v190 + v195 < v171) {
              goto LABEL_121;
            }
            BOOL v196 = v171 < v195;
          }
          if (v196) {
            unint64_t v168 = v180;
          }
        }
        else
        {
          if (v165 == 3)
          {
            uint64_t v170 = *((void *)v68 + 4);
            uint64_t v169 = *((void *)v68 + 5);
            BOOL v179 = __OFSUB__(v169, v170);
            uint64_t v171 = v169 - v170;
            char v172 = v179;
            goto LABEL_109;
          }
          uint64_t v197 = *((void *)v68 + 4);
          uint64_t v198 = *((void *)v68 + 5);
          BOOL v179 = __OFSUB__(v198, v197);
          uint64_t v190 = v198 - v197;
          char v191 = v179;
LABEL_121:
          if (v191) {
            goto LABEL_167;
          }
          uint64_t v199 = &v166[16 * v168];
          uint64_t v201 = *(void *)v199;
          uint64_t v200 = *((void *)v199 + 1);
          BOOL v179 = __OFSUB__(v200, v201);
          uint64_t v202 = v200 - v201;
          if (v179) {
            goto LABEL_170;
          }
          if (v202 < v190) {
            goto LABEL_138;
          }
        }
        unint64_t v207 = v168 - 1;
        if (v168 - 1 >= v165)
        {
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          __break(1u);
LABEL_164:
          __break(1u);
LABEL_165:
          __break(1u);
LABEL_166:
          __break(1u);
LABEL_167:
          __break(1u);
LABEL_168:
          __break(1u);
LABEL_169:
          __break(1u);
LABEL_170:
          __break(1u);
LABEL_171:
          __break(1u);
LABEL_172:
          __break(1u);
LABEL_173:
          __break(1u);
LABEL_174:
          __break(1u);
LABEL_175:
          __break(1u);
LABEL_176:
          __break(1u);
LABEL_177:
          __break(1u);
LABEL_178:
          __break(1u);
LABEL_179:
          __break(1u);
LABEL_180:
          __break(1u);
LABEL_181:
          __break(1u);
          goto LABEL_182;
        }
        if (!*v265) {
          goto LABEL_185;
        }
        uint64_t v208 = v65;
        uint64_t v209 = v68;
        uint64_t v210 = &v166[16 * v207];
        uint64_t v211 = *(void *)v210;
        uint64_t v212 = &v166[16 * v168];
        uint64_t v213 = *((void *)v212 + 1);
        uint64_t v214 = v247;
        sub_251B210F8(*v265 + *(void *)(v244 + 72) * *(void *)v210, *v265 + *(void *)(v244 + 72) * *(void *)v212, *v265 + *(void *)(v244 + 72) * v213, v241);
        uint64_t v247 = v214;
        if (v214) {
          goto LABEL_157;
        }
        if (v213 < v211) {
          goto LABEL_160;
        }
        if (v168 > *((void *)v209 + 2)) {
          goto LABEL_161;
        }
        *(void *)uint64_t v210 = v211;
        *(void *)&v166[16 * v207 + 8] = v213;
        unint64_t v215 = *((void *)v209 + 2);
        if (v168 >= v215) {
          goto LABEL_162;
        }
        uint64_t v68 = v209;
        unint64_t v165 = v215 - 1;
        memmove(&v166[16 * v168], v212 + 16, 16 * (v215 - 1 - v168));
        *((void *)v68 + 2) = v215 - 1;
        BOOL v196 = v215 > 2;
        uint64_t v66 = v250;
        uint64_t v67 = v243;
        uint64_t v69 = (uint64_t)v240;
        uint64_t v65 = v208;
        if (!v196) {
          goto LABEL_138;
        }
        continue;
      }
    }
    unint64_t v165 = 1;
LABEL_138:
    uint64_t v70 = v265[1];
  }
  while (v65 < v70);
  uint64_t v64 = v226;
  uint64_t v2 = v247;
LABEL_143:
  uint64_t v226 = v64;
  if (v165 >= 2)
  {
    uint64_t v216 = *v265;
    do
    {
      unint64_t v217 = v165 - 2;
      if (v165 < 2) {
        goto LABEL_174;
      }
      if (!v216) {
        goto LABEL_187;
      }
      uint64_t v218 = v68;
      uint64_t v219 = v68 + 32;
      uint64_t v220 = *(void *)&v68[16 * v217 + 32];
      uint64_t v221 = *(void *)&v68[16 * v165 + 24];
      sub_251B210F8(v216 + *(void *)(v244 + 72) * v220, v216 + *(void *)(v244 + 72) * *(void *)&v219[16 * v165 - 16], v216 + *(void *)(v244 + 72) * v221, v241);
      if (v2) {
        break;
      }
      if (v221 < v220) {
        goto LABEL_176;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v218 = sub_251ECDC38((uint64_t)v218);
      }
      if (v217 >= *((void *)v218 + 2)) {
        goto LABEL_177;
      }
      uint64_t v222 = &v218[16 * v217 + 32];
      *(void *)uint64_t v222 = v220;
      *((void *)v222 + 1) = v221;
      unint64_t v223 = *((void *)v218 + 2);
      if (v165 > v223) {
        goto LABEL_178;
      }
      uint64_t v68 = v218;
      memmove(&v218[16 * v165 + 16], &v218[16 * v165 + 32], 16 * (v223 - v165));
      *((void *)v218 + 2) = v223 - 1;
      unint64_t v165 = v223 - 1;
    }
    while (v223 > 2);
  }
LABEL_157:
  swift_bridgeObjectRelease();
  *(void *)(v226 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_251B208A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v82 = a4;
  uint64_t v64 = a1;
  uint64_t v79 = type metadata accessor for StaticRoom(0);
  uint64_t v6 = *(void *)(v79 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v79);
  uint64_t v66 = (uint64_t)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v65 = (uint64_t)&v62 - v10;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v68 = (uint64_t)&v62 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v62 - v14;
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v69 = (uint64_t)&v62 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v74 = (uint64_t)&v62 - v18;
  uint64_t v73 = type metadata accessor for RoomType(0);
  uint64_t v19 = MEMORY[0x270FA5388](v73);
  unint64_t v21 = (char *)&v62 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v19);
  uint64_t v72 = (uint64_t)&v62 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v26 = (char *)&v62 - v25;
  uint64_t v27 = MEMORY[0x270FA5388](v24);
  uint64_t v84 = (uint64_t)&v62 - v28;
  uint64_t result = MEMORY[0x270FA5388](v27);
  uint64_t v83 = (uint64_t)&v62 - v31;
  uint64_t v78 = a3;
  uint64_t v63 = a2;
  if (a3 != a2)
  {
    uint64_t v32 = *(void *)(v30 + 72);
    uint64_t v75 = (unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
    uint64_t v76 = v32;
    uint64_t v85 = v32 * (v78 - 1);
    uint64_t v33 = v32 * v78;
    uint64_t v70 = v26;
    uint64_t v71 = v21;
LABEL_6:
    uint64_t v34 = 0;
    uint64_t v35 = v64;
    uint64_t v77 = v33;
    while (1)
    {
      uint64_t v36 = (uint64_t)v15;
      uint64_t v37 = *v82;
      uint64_t v81 = v33 + v34;
      uint64_t v38 = v33 + v34 + v37;
      uint64_t v39 = v83;
      sub_251B25B74(v38, v83, type metadata accessor for RoomType);
      uint64_t v80 = v85 + v34;
      uint64_t v40 = v84;
      sub_251B25B74(v85 + v34 + v37, v84, type metadata accessor for RoomType);
      sub_251B25B74(v39, (uint64_t)v26, type metadata accessor for RoomType);
      uint64_t v41 = *v75;
      uint64_t v42 = v79;
      if ((*v75)(v26, 4, v79)) {
        break;
      }
      uint64_t v43 = v74;
      sub_251B25C90((uint64_t)v26, v74, type metadata accessor for StaticRoom);
      uint64_t v44 = v72;
      sub_251B25B74(v40, v72, type metadata accessor for RoomType);
      if (v41((char *)v44, 4, v42))
      {
        sub_251B25BDC(v43, type metadata accessor for StaticRoom);
        sub_251B25BDC(v44, type metadata accessor for RoomType);
        uint64_t v26 = v70;
        unint64_t v21 = v71;
        goto LABEL_12;
      }
      uint64_t v47 = v69;
      sub_251B25C90(v44, v69, type metadata accessor for StaticRoom);
      uint64_t v48 = *(int *)(v42 + 20);
      uint64_t v49 = *(void *)(v43 + v48);
      uint64_t v50 = *(void *)(v43 + v48 + 8);
      uint64_t v51 = (void *)(v47 + v48);
      BOOL v52 = v49 == *v51 && v50 == v51[1];
      uint64_t v33 = v77;
      if (v52)
      {
        sub_251B25B74(v43, v36, type metadata accessor for StaticRoom);
        uint64_t v54 = v68;
        sub_251B25B74(v47, v68, type metadata accessor for StaticRoom);
      }
      else
      {
        char v53 = sub_251F36B10();
        sub_251B25B74(v43, v36, type metadata accessor for StaticRoom);
        uint64_t v54 = v68;
        uint64_t v42 = v79;
        sub_251B25B74(v47, v68, type metadata accessor for StaticRoom);
        if (v53)
        {
          sub_251B25BDC(v54, type metadata accessor for StaticRoom);
          sub_251B25BDC(v36, type metadata accessor for StaticRoom);
          sub_251B25BDC(v69, type metadata accessor for StaticRoom);
          sub_251B25BDC(v74, type metadata accessor for StaticRoom);
          uint64_t v15 = (char *)v36;
          uint64_t v26 = v70;
          unint64_t v21 = v71;
          goto LABEL_13;
        }
      }
      uint64_t v55 = *(int *)(v42 + 20);
      uint64_t v15 = (char *)v36;
      uint64_t v56 = *(void *)(v36 + v55);
      uint64_t v57 = *(void *)(v36 + v55 + 8);
      uint64_t v58 = (void *)(v54 + v55);
      if (v56 == *v58 && v57 == v58[1])
      {
        uint64_t v59 = v65;
        sub_251B25B74(v36, v65, type metadata accessor for StaticRoom);
        uint64_t v60 = v66;
        sub_251B25B74(v54, v66, type metadata accessor for StaticRoom);
        uint64_t v61 = v69;
        uint64_t v26 = v70;
        unint64_t v21 = v71;
      }
      else
      {
        int v67 = sub_251F36B10();
        uint64_t v59 = v65;
        sub_251B25B74(v36, v65, type metadata accessor for StaticRoom);
        uint64_t v60 = v66;
        sub_251B25B74(v54, v66, type metadata accessor for StaticRoom);
        uint64_t v61 = v69;
        uint64_t v26 = v70;
        unint64_t v21 = v71;
        if ((v67 & 1) == 0)
        {
          sub_251B25BDC(v60, type metadata accessor for StaticRoom);
          sub_251B25BDC(v59, type metadata accessor for StaticRoom);
          sub_251B25BDC(v68, type metadata accessor for StaticRoom);
          sub_251B25BDC((uint64_t)v15, type metadata accessor for StaticRoom);
          sub_251B25BDC(v61, type metadata accessor for StaticRoom);
          uint64_t v33 = v77;
          sub_251B25BDC(v74, type metadata accessor for StaticRoom);
          sub_251B25BDC(v84, type metadata accessor for RoomType);
          uint64_t result = sub_251B25BDC(v83, type metadata accessor for RoomType);
LABEL_5:
          v85 += v76;
          v33 += v76;
          if (++v78 == v63) {
            return result;
          }
          goto LABEL_6;
        }
      }
      int v67 = MEMORY[0x2533A9CA0](v59, v60);
      sub_251B25BDC(v60, type metadata accessor for StaticRoom);
      sub_251B25BDC(v59, type metadata accessor for StaticRoom);
      sub_251B25BDC(v68, type metadata accessor for StaticRoom);
      sub_251B25BDC((uint64_t)v15, type metadata accessor for StaticRoom);
      sub_251B25BDC(v61, type metadata accessor for StaticRoom);
      sub_251B25BDC(v74, type metadata accessor for StaticRoom);
      sub_251B25BDC(v84, type metadata accessor for RoomType);
      uint64_t result = sub_251B25BDC(v83, type metadata accessor for RoomType);
      if ((v67 & 1) == 0) {
        goto LABEL_5;
      }
LABEL_14:
      uint64_t v45 = *v82;
      if (!*v82)
      {
        __break(1u);
        return result;
      }
      uint64_t v46 = v45 + v85 + v34;
      sub_251B25C90(v45 + v33 + v34, (uint64_t)v21, type metadata accessor for RoomType);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = sub_251B25C90((uint64_t)v21, v46, type metadata accessor for RoomType);
      v34 -= v76;
      if (v78 == ++v35) {
        goto LABEL_5;
      }
    }
    sub_251B25BDC((uint64_t)v26, type metadata accessor for RoomType);
LABEL_12:
    uint64_t v15 = (char *)v36;
    uint64_t v33 = v77;
LABEL_13:
    sub_251B25BDC(v84, type metadata accessor for RoomType);
    uint64_t result = sub_251B25BDC(v83, type metadata accessor for RoomType);
    goto LABEL_14;
  }
  return result;
}

uint64_t sub_251B210F8(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v5 = v4;
  unint64_t v149 = a3;
  uint64_t v148 = type metadata accessor for StaticRoom(0);
  uint64_t v128 = *(void *)(v148 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v148);
  uint64_t v132 = (uint64_t)&v127 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v130 = (uint64_t)&v127 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v137 = (uint64_t)&v127 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v136 = (uint64_t)&v127 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v138 = (uint64_t)&v127 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  unint64_t v140 = (unint64_t)&v127 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v131 = (uint64_t)&v127 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v129 = (uint64_t)&v127 - v24;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v146 = (uint64_t)&v127 - v26;
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v135 = (uint64_t)&v127 - v28;
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v142 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))((char *)&v127 - v30);
  MEMORY[0x270FA5388](v29);
  uint64_t v32 = (char *)&v127 - v31;
  uint64_t v145 = type metadata accessor for RoomType(0);
  uint64_t v33 = MEMORY[0x270FA5388](v145);
  uint64_t v35 = (char *)&v127 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = MEMORY[0x270FA5388](v33);
  BOOL v144 = (char *)&v127 - v37;
  MEMORY[0x270FA5388](v36);
  uint64_t v39 = MEMORY[0x270FA5388]((char *)&v127 - v38);
  uint64_t v147 = (uint64_t *)((char *)&v127 - v40);
  uint64_t v41 = MEMORY[0x270FA5388](v39);
  uint64_t v42 = MEMORY[0x270FA5388](v41);
  uint64_t v44 = (char *)&v127 - v43;
  uint64_t v45 = MEMORY[0x270FA5388](v42);
  uint64_t v47 = (char *)&v127 - v46;
  uint64_t v48 = MEMORY[0x270FA5388](v45);
  uint64_t v51 = (char *)&v127 - v50;
  uint64_t v53 = *(void *)(v52 + 72);
  if (!v53)
  {
    __break(1u);
LABEL_100:
    __break(1u);
LABEL_101:
    __break(1u);
    goto LABEL_102;
  }
  unint64_t v54 = a1;
  if (a2 - a1 == 0x8000000000000000 && v53 == -1) {
    goto LABEL_100;
  }
  int64_t v55 = v149 - a2;
  if (v149 - a2 == 0x8000000000000000 && v53 == -1) {
    goto LABEL_101;
  }
  uint64_t v56 = (uint64_t)(a2 - a1) / v53;
  unint64_t v152 = a1;
  unint64_t v151 = a4;
  uint64_t v57 = v55 / v53;
  uint64_t v133 = v5;
  uint64_t v134 = v53;
  if (v56 >= v55 / v53)
  {
    if (v57 < 0) {
      goto LABEL_102;
    }
    uint64_t v60 = v57 * v53;
    uint64_t v139 = v35;
    uint64_t v61 = (uint64_t)v144;
    uint64_t v146 = v48;
    if (a4 < a2 || a2 + v60 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a2)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v89 = a4 + v60;
    unint64_t v150 = a4 + v60;
    unint64_t v152 = a2;
    unint64_t v143 = a1;
    if (v60 < 1 || a1 >= a2)
    {
LABEL_64:
      sub_251ECD82C(&v152, &v151, (uint64_t *)&v150);
      return 1;
    }
    uint64_t v92 = -v134;
    char v93 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v128 + 48);
    unint64_t v141 = a4;
    uint64_t v142 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v128 + 48);
    while (1)
    {
      uint64_t v94 = v147;
      sub_251B25B74(v89 + v92, (uint64_t)v147, type metadata accessor for RoomType);
      unint64_t v95 = a2 + v92;
      uint64_t v96 = v146;
      sub_251B25B74(a2 + v92, v146, type metadata accessor for RoomType);
      sub_251B25B74((uint64_t)v94, v61, type metadata accessor for RoomType);
      uint64_t v97 = *v93;
      uint64_t v98 = v148;
      if ((*v93)(v61, 4, v148)) {
        goto LABEL_68;
      }
      uint64_t v99 = v140;
      sub_251B25C90(v61, v140, type metadata accessor for StaticRoom);
      uint64_t v61 = (uint64_t)v139;
      sub_251B25B74(v96, (uint64_t)v139, type metadata accessor for RoomType);
      if (v97(v61, 4, v98)) {
        break;
      }
      uint64_t v105 = v138;
      sub_251B25C90(v61, v138, type metadata accessor for StaticRoom);
      uint64_t v106 = *(int *)(v98 + 20);
      uint64_t v107 = *(void *)(v99 + v106);
      uint64_t v108 = *(void *)(v99 + v106 + 8);
      uint64_t v109 = (void *)(v105 + v106);
      BOOL v110 = v107 == *v109 && v108 == v109[1];
      uint64_t v111 = v99;
      if (v110)
      {
        uint64_t v114 = v136;
        sub_251B25B74(v99, v136, type metadata accessor for StaticRoom);
        uint64_t v115 = v137;
        sub_251B25B74(v105, v137, type metadata accessor for StaticRoom);
        unint64_t v101 = v149;
LABEL_93:
        uint64_t v116 = *(int *)(v98 + 20);
        uint64_t v117 = *(void *)(v114 + v116);
        uint64_t v118 = *(void *)(v114 + v116 + 8);
        uint64_t v119 = (void *)(v115 + v116);
        if (v117 == *v119 && v118 == v119[1])
        {
          uint64_t v120 = v114;
          uint64_t v121 = v130;
          sub_251B25B74(v120, v130, type metadata accessor for StaticRoom);
          uint64_t v122 = v115;
          uint64_t v123 = v132;
          sub_251B25B74(v122, v132, type metadata accessor for StaticRoom);
          unint64_t v102 = v141;
          goto LABEL_97;
        }
        char v124 = sub_251F36B10();
        uint64_t v125 = v114;
        uint64_t v121 = v130;
        sub_251B25B74(v125, v130, type metadata accessor for StaticRoom);
        uint64_t v126 = v115;
        uint64_t v123 = v132;
        sub_251B25B74(v126, v132, type metadata accessor for StaticRoom);
        char v100 = 0;
        unint64_t v102 = v141;
        if (v124) {
LABEL_97:
        }
          char v100 = MEMORY[0x2533A9CA0](v121, v123);
        sub_251B25BDC(v123, type metadata accessor for StaticRoom);
        sub_251B25BDC(v121, type metadata accessor for StaticRoom);
        sub_251B25BDC(v137, type metadata accessor for StaticRoom);
        sub_251B25BDC(v136, type metadata accessor for StaticRoom);
        sub_251B25BDC(v138, type metadata accessor for StaticRoom);
        sub_251B25BDC(v140, type metadata accessor for StaticRoom);
        goto LABEL_70;
      }
      char v112 = sub_251F36B10();
      uint64_t v113 = v111;
      uint64_t v114 = v136;
      sub_251B25B74(v113, v136, type metadata accessor for StaticRoom);
      uint64_t v115 = v137;
      sub_251B25B74(v105, v137, type metadata accessor for StaticRoom);
      unint64_t v101 = v149;
      if ((v112 & 1) == 0) {
        goto LABEL_93;
      }
      sub_251B25BDC(v115, type metadata accessor for StaticRoom);
      sub_251B25BDC(v114, type metadata accessor for StaticRoom);
      sub_251B25BDC(v138, type metadata accessor for StaticRoom);
      sub_251B25BDC(v140, type metadata accessor for StaticRoom);
      char v100 = 1;
LABEL_69:
      unint64_t v102 = v141;
LABEL_70:
      unint64_t v103 = v101 + v92;
      sub_251B25BDC(v146, type metadata accessor for RoomType);
      sub_251B25BDC((uint64_t)v147, type metadata accessor for RoomType);
      if (v100)
      {
        char v93 = v142;
        if (v101 < a2 || v103 >= a2)
        {
          swift_arrayInitWithTakeFrontToBack();
          uint64_t v61 = (uint64_t)v144;
        }
        else
        {
          uint64_t v61 = (uint64_t)v144;
          if (v101 != a2) {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        v152 += v92;
      }
      else
      {
        unint64_t v104 = v150;
        v150 += v92;
        char v93 = v142;
        if (v101 < v104 || v103 >= v104)
        {
          swift_arrayInitWithTakeFrontToBack();
          unint64_t v95 = a2;
          uint64_t v61 = (uint64_t)v144;
        }
        else
        {
          uint64_t v61 = (uint64_t)v144;
          if (v101 != v104) {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v95 = a2;
        }
      }
      unint64_t v89 = v150;
      if (v150 > v102)
      {
        a2 = v95;
        unint64_t v149 = v101 + v92;
        if (v95 > v143) {
          continue;
        }
      }
      goto LABEL_64;
    }
    sub_251B25BDC(v99, type metadata accessor for StaticRoom);
LABEL_68:
    sub_251B25BDC(v61, type metadata accessor for RoomType);
    char v100 = 1;
    unint64_t v101 = v149;
    goto LABEL_69;
  }
  BOOL v144 = v32;
  if ((v56 & 0x8000000000000000) == 0)
  {
    uint64_t v58 = v56 * v53;
    unint64_t v143 = v49;
    if (a4 < v54 || v54 + v58 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
      unint64_t v59 = v149;
    }
    else
    {
      unint64_t v59 = v149;
      if (a4 != v54) {
        swift_arrayInitWithTakeBackToFront();
      }
    }
    unint64_t v62 = a4 + v58;
    unint64_t v150 = a4 + v58;
    if (v58 >= 1 && a2 < v59)
    {
      uint64_t v147 = (void *)(v128 + 48);
      uint64_t v139 = v47;
      unint64_t v140 = a4 + v58;
      while (1)
      {
        sub_251B25B74(a2, (uint64_t)v51, type metadata accessor for RoomType);
        sub_251B25B74(a4, (uint64_t)v47, type metadata accessor for RoomType);
        sub_251B25B74((uint64_t)v51, (uint64_t)v44, type metadata accessor for RoomType);
        uint64_t v64 = v148;
        uint64_t v65 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))*v147;
        if (((unsigned int (*)(char *, uint64_t, uint64_t))*v147)(v44, 4, v148)) {
          break;
        }
        uint64_t v66 = (uint64_t)v144;
        sub_251B25C90((uint64_t)v44, (uint64_t)v144, type metadata accessor for StaticRoom);
        uint64_t v67 = (uint64_t)v47;
        uint64_t v68 = v143;
        sub_251B25B74(v67, v143, type metadata accessor for RoomType);
        int v69 = v65(v68, 4, v64);
        uint64_t v70 = v146;
        if (v69)
        {
          sub_251B25BDC(v66, type metadata accessor for StaticRoom);
          sub_251B25BDC(v68, type metadata accessor for RoomType);
          goto LABEL_27;
        }
        uint64_t v73 = v68;
        uint64_t v74 = (uint64_t)v142;
        sub_251B25C90(v73, (uint64_t)v142, type metadata accessor for StaticRoom);
        uint64_t v75 = *(int *)(v64 + 20);
        uint64_t v76 = *(void *)(v66 + v75);
        uint64_t v77 = *(void *)(v66 + v75 + 8);
        uint64_t v78 = (void *)(v74 + v75);
        if (v76 == *v78 && v77 == v78[1])
        {
          uint64_t v81 = v135;
          sub_251B25B74(v66, v135, type metadata accessor for StaticRoom);
          sub_251B25B74(v74, v70, type metadata accessor for StaticRoom);
        }
        else
        {
          char v80 = sub_251F36B10();
          uint64_t v81 = v135;
          sub_251B25B74(v66, v135, type metadata accessor for StaticRoom);
          uint64_t v70 = v146;
          sub_251B25B74(v74, v146, type metadata accessor for StaticRoom);
          if (v80)
          {
            sub_251B25BDC(v70, type metadata accessor for StaticRoom);
            sub_251B25BDC(v81, type metadata accessor for StaticRoom);
            sub_251B25BDC((uint64_t)v142, type metadata accessor for StaticRoom);
            sub_251B25BDC((uint64_t)v144, type metadata accessor for StaticRoom);
            uint64_t v53 = v134;
LABEL_27:
            uint64_t v47 = v139;
            unint64_t v62 = v140;
LABEL_28:
            sub_251B25BDC((uint64_t)v47, type metadata accessor for RoomType);
            sub_251B25BDC((uint64_t)v51, type metadata accessor for RoomType);
            goto LABEL_29;
          }
        }
        uint64_t v82 = *(int *)(v148 + 20);
        uint64_t v83 = *(void *)(v81 + v82);
        uint64_t v84 = *(void *)(v81 + v82 + 8);
        uint64_t v85 = (void *)(v70 + v82);
        uint64_t v53 = v134;
        uint64_t v47 = v139;
        unint64_t v62 = v140;
        if (v83 == *v85 && v84 == v85[1])
        {
          uint64_t v86 = v129;
          sub_251B25B74(v81, v129, type metadata accessor for StaticRoom);
          uint64_t v87 = v131;
          sub_251B25B74(v146, v131, type metadata accessor for StaticRoom);
        }
        else
        {
          LODWORD(v141) = sub_251F36B10();
          uint64_t v86 = v129;
          sub_251B25B74(v81, v129, type metadata accessor for StaticRoom);
          uint64_t v87 = v131;
          sub_251B25B74(v146, v131, type metadata accessor for StaticRoom);
          if ((v141 & 1) == 0)
          {
            sub_251B25BDC(v87, type metadata accessor for StaticRoom);
            sub_251B25BDC(v86, type metadata accessor for StaticRoom);
            sub_251B25BDC(v146, type metadata accessor for StaticRoom);
            sub_251B25BDC(v135, type metadata accessor for StaticRoom);
            sub_251B25BDC((uint64_t)v142, type metadata accessor for StaticRoom);
            sub_251B25BDC((uint64_t)v144, type metadata accessor for StaticRoom);
            sub_251B25BDC((uint64_t)v47, type metadata accessor for RoomType);
            sub_251B25BDC((uint64_t)v51, type metadata accessor for RoomType);
LABEL_49:
            unint64_t v71 = v152;
            unint64_t v88 = v151 + v53;
            if (v152 < v151 || v152 >= v88)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v152 != v151)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v151 = v88;
            unint64_t v72 = a2;
            goto LABEL_55;
          }
        }
        LODWORD(v141) = MEMORY[0x2533A9CA0](v86, v87);
        sub_251B25BDC(v87, type metadata accessor for StaticRoom);
        sub_251B25BDC(v86, type metadata accessor for StaticRoom);
        sub_251B25BDC(v146, type metadata accessor for StaticRoom);
        sub_251B25BDC(v135, type metadata accessor for StaticRoom);
        sub_251B25BDC((uint64_t)v142, type metadata accessor for StaticRoom);
        sub_251B25BDC((uint64_t)v144, type metadata accessor for StaticRoom);
        sub_251B25BDC((uint64_t)v47, type metadata accessor for RoomType);
        sub_251B25BDC((uint64_t)v51, type metadata accessor for RoomType);
        if ((v141 & 1) == 0) {
          goto LABEL_49;
        }
LABEL_29:
        unint64_t v71 = v152;
        unint64_t v72 = a2 + v53;
        if (v152 < a2 || v152 >= v72)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v152 == a2)
        {
          unint64_t v71 = a2;
        }
        else
        {
          swift_arrayInitWithTakeBackToFront();
        }
LABEL_55:
        unint64_t v152 = v71 + v53;
        a4 = v151;
        if (v151 < v62)
        {
          a2 = v72;
          if (v72 < v149) {
            continue;
          }
        }
        goto LABEL_64;
      }
      sub_251B25BDC((uint64_t)v44, type metadata accessor for RoomType);
      goto LABEL_28;
    }
    goto LABEL_64;
  }
LABEL_102:
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251B2203C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v61 = a5;
  uint64_t v9 = type metadata accessor for StaticService();
  uint64_t v50 = *(void *)(v9 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v49 = (uint64_t)v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v46 - v12;
  uint64_t v14 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v15 = ~v14;
  uint64_t v16 = *(void *)(a1 + 64);
  uint64_t v17 = -v14;
  uint64_t v54 = a1;
  uint64_t v55 = a1 + 64;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  else {
    uint64_t v18 = -1;
  }
  uint64_t v56 = v15;
  uint64_t v57 = 0;
  uint64_t v58 = v18 & v16;
  uint64_t v59 = a2;
  uint64_t v60 = a3;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F028);
  v46[0] = v46;
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v21 = (char *)v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46[2] = a1;
  swift_bridgeObjectRetain();
  v46[1] = a3;
  swift_retain();
  sub_251AF606C((uint64_t)v21);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FFB8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48))(v21, 1, v22) == 1)
  {
LABEL_5:
    swift_release();
    swift_bridgeObjectRelease();
    sub_251A1E630();
    return swift_release();
  }
  uint64_t v24 = sub_251F34DA0();
  uint64_t v53 = v24;
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = v25;
  uint64_t v27 = *(void *)(v25 + 64);
  uint64_t v29 = v25 + 32;
  uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
  uint64_t v51 = v29;
  uint64_t v52 = v28;
  uint64_t v47 = (void (**)(char *, uint64_t))(v26 + 8);
  uint64_t v48 = v26;
  while (1)
  {
    MEMORY[0x270FA5388](v24);
    uint64_t v31 = (uint64_t)&v21[*(int *)(v22 + 48)];
    v52((char *)v46 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0), v21, v53);
    uint64_t v32 = (uint64_t)v13;
    sub_251B25C90(v31, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t v33 = *v61;
    unint64_t v35 = sub_2519FE584((uint64_t)v46 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
    uint64_t v36 = *(void *)(v33 + 16);
    BOOL v37 = (v34 & 1) == 0;
    uint64_t v38 = v36 + v37;
    if (__OFADD__(v36, v37)) {
      break;
    }
    char v39 = v34;
    if (*(void *)(v33 + 24) >= v38)
    {
      if (a4)
      {
        if (v34) {
          goto LABEL_7;
        }
      }
      else
      {
        sub_251A12304();
        if (v39) {
          goto LABEL_7;
        }
      }
    }
    else
    {
      sub_251A01DD0(v38, a4 & 1);
      unint64_t v40 = sub_2519FE584((uint64_t)v46 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
      if ((v39 & 1) != (v41 & 1)) {
        goto LABEL_22;
      }
      unint64_t v35 = v40;
      if (v39)
      {
LABEL_7:
        uint64_t v13 = (char *)v32;
        uint64_t v30 = v49;
        sub_251B25B74(v32, v49, (uint64_t (*)(void))type metadata accessor for StaticService);
        sub_251B25BDC(v32, (uint64_t (*)(void))type metadata accessor for StaticService);
        (*v47)((char *)v46 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0), v53);
        sub_251B392A8(v30, *(void *)(*v61 + 56) + *(void *)(v50 + 72) * v35, (uint64_t (*)(void))type metadata accessor for StaticService);
        goto LABEL_8;
      }
    }
    uint64_t v42 = (void *)*v61;
    *(void *)(*v61 + 8 * (v35 >> 6) + 64) |= 1 << v35;
    v52((char *)(v42[6] + *(void *)(v48 + 72) * v35), (char *)v46 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0), v53);
    uint64_t v13 = (char *)v32;
    sub_251B25C90(v32, v42[7] + *(void *)(v50 + 72) * v35, (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t v43 = v42[2];
    BOOL v44 = __OFADD__(v43, 1);
    uint64_t v45 = v43 + 1;
    if (v44) {
      goto LABEL_21;
    }
    v42[2] = v45;
LABEL_8:
    sub_251AF606C((uint64_t)v21);
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FFB8);
    a4 = 1;
    uint64_t v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48))(v21, 1, v22);
    if (v24 == 1) {
      goto LABEL_5;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  uint64_t result = sub_251F36BA0();
  __break(1u);
  return result;
}

uint64_t sub_251B22560@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *v2;
  uint64_t v6 = sub_251F34DA0();
  sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
  swift_bridgeObjectRetain();
  uint64_t v36 = a1;
  uint64_t v7 = sub_251F35600();
  uint64_t v8 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v9 = v7 & ~v8;
  uint64_t v10 = v5;
  uint64_t v35 = v5 + 56;
  unint64_t v11 = *(void *)(v5 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8));
  uint64_t v12 = v6 - 8;
  if ((v11 >> v9))
  {
    uint64_t v30 = v2;
    uint64_t v31 = a2;
    uint64_t v32 = ~v8;
    uint64_t v13 = *(void **)v12;
    v27[1] = v12 & 0xFFFFFFFFFFFFLL | 0x2E3F000000000000;
    uint64_t v14 = v13[8];
    uint64_t v34 = v13[9];
    uint64_t v28 = v13;
    uint64_t v33 = (void (*)(char *, unint64_t, uint64_t))v13[2];
    uint64_t v29 = v13;
    uint64_t v15 = (void (**)(char *, uint64_t))(v13 + 1);
    while (1)
    {
      uint64_t v16 = MEMORY[0x270FA5388](v10);
      unint64_t v17 = v34 * v9;
      v33((char *)v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), *(void *)(v16 + 48) + v34 * v9, v6);
      sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
      char v18 = sub_251F35650();
      (*v15)((char *)v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
      if (v18) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v32;
      uint64_t v10 = v16;
      if (((*(void *)(v35 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        a2 = v31;
        uint64_t v19 = v28;
        return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v19[7])(a2, 1, 1, v6);
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v21 = v30;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v23 = *v21;
    uint64_t v37 = *v21;
    *uint64_t v21 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_251A76F8C();
      uint64_t v23 = v37;
    }
    unint64_t v24 = *(void *)(v23 + 48) + v17;
    uint64_t v25 = v29;
    uint64_t v26 = v31;
    ((void (*)(uint64_t, unint64_t, uint64_t))v29[4])(v31, v24, v6);
    sub_251B23784(v9);
    *uint64_t v21 = v37;
    swift_bridgeObjectRelease();
    return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v25[7])(v26, 0, 1, v6);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v19 = *(void **)v12;
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v19[7])(a2, 1, 1, v6);
  }
}

uint64_t sub_251B22880@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for StaticService();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = v2;
  uint64_t v9 = *v2;
  sub_251F36CA0();
  swift_bridgeObjectRetain();
  StaticService.hash(into:)(v24);
  uint64_t v10 = sub_251F36D00();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v12 = v10 & ~v11;
  if ((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    uint64_t v21 = v5;
    uint64_t v22 = a2;
    uint64_t v13 = ~v11;
    uint64_t v14 = *(void *)(v6 + 72);
    while (1)
    {
      sub_251B25B74(*(void *)(v9 + 48) + v14 * v12, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticService);
      char v15 = _s13HomeDataModel13StaticServiceV2eeoiySbAC_ACtFZ_0((uint64_t)v8, a1);
      sub_251B25BDC((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticService);
      if (v15) {
        break;
      }
      unint64_t v12 = (v12 + 1) & v13;
      if (((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v16 = 1;
        uint64_t v5 = v21;
        a2 = v22;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v16, 1, v5);
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v17 = v23;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = *v17;
    *(void *)&v24[0] = *v17;
    *unint64_t v17 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_251A773E4();
      uint64_t v19 = *(void *)&v24[0];
    }
    a2 = v22;
    sub_251B25C90(*(void *)(v19 + 48) + v14 * v12, v22, (uint64_t (*)(void))type metadata accessor for StaticService);
    sub_251B23A54(v12, (uint64_t (*)(void))type metadata accessor for StaticService, (uint64_t (*)(void))type metadata accessor for StaticService, (void (*)(char *))StaticService.hash(into:), (uint64_t (*)(void))type metadata accessor for StaticService);
    *unint64_t v17 = *(void *)&v24[0];
    swift_bridgeObjectRelease();
    uint64_t v16 = 0;
    uint64_t v5 = v21;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v16 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v16, 1, v5);
}

uint64_t sub_251B22B30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v76 = (int *)type metadata accessor for StaticRoom(0);
  uint64_t v5 = *((void *)v76 - 1);
  MEMORY[0x270FA5388](v76);
  uint64_t v7 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_251F36CA0();
  swift_bridgeObjectRetain();
  StaticRoom.hash(into:)(v77);
  uint64_t v9 = sub_251F36D00();
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  unint64_t v11 = v9 & ~v10;
  if (((*(void *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v5 + 56))(a2, 1, 1, v76);
  }
  unint64_t v72 = v2;
  uint64_t v73 = v5;
  uint64_t v74 = a2;
  uint64_t v75 = ~v10;
  uint64_t v12 = *(void *)(v5 + 72);
  do
  {
    unint64_t v13 = v12 * v11;
    sub_251B25B74(*(void *)(v8 + 48) + v12 * v11, (uint64_t)v7, type metadata accessor for StaticRoom);
    if (sub_251F34D70())
    {
      uint64_t v14 = v76[5];
      uint64_t v15 = *(void *)&v7[v14];
      uint64_t v16 = *(void *)&v7[v14 + 8];
      unint64_t v17 = (void *)(a1 + v14);
      BOOL v18 = v15 == *v17 && v16 == v17[1];
      if (v18 || (sub_251F36B10()) && v7[v76[6]] == *(unsigned char *)(a1 + v76[6]))
      {
        uint64_t v19 = v76[7];
        uint64_t v20 = *(void *)(a1 + v19);
        if (*(void *)&v7[v19])
        {
          if (!v20) {
            goto LABEL_4;
          }
          swift_bridgeObjectRetain();
          uint64_t v21 = swift_bridgeObjectRetain();
          char v22 = sub_251B09F88(v21, v20);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v22 & 1) == 0) {
            goto LABEL_4;
          }
        }
        else if (v20)
        {
          goto LABEL_4;
        }
        if ((sub_251F34D70() & 1) != 0
          && (sub_251AF9FA8(*(void *)&v7[v76[9]], *(void *)(a1 + v76[9])) & 1) != 0
          && (sub_251AFECF0(*(void *)&v7[v76[10]], *(void *)(a1 + v76[10])) & 1) != 0
          && (sub_251AFF55C(*(void *)&v7[v76[11]], *(void *)(a1 + v76[11])) & 1) != 0
          && (sub_251AFFB5C(*(void *)&v7[v76[12]], *(void *)(a1 + v76[12])) & 1) != 0
          && (sub_251B0015C(*(void *)&v7[v76[13]], *(void *)(a1 + v76[13])) & 1) != 0
          && (sub_251AFA5A8(*(void *)&v7[v76[14]], *(void *)(a1 + v76[14])) & 1) != 0
          && (sub_251AF99A8(*(void *)&v7[v76[15]], *(void *)(a1 + v76[15])) & 1) != 0)
        {
          uint64_t v23 = v76[16];
          uint64_t v24 = *(void *)&v7[v23];
          uint64_t v25 = *(void *)(a1 + v23);
          uint64_t v63 = v24;
          uint64_t v26 = *(char **)(v24 + 16);
          uint64_t v62 = v25;
          uint64_t v27 = *(char **)(v25 + 16);
          uint64_t v64 = v26;
          if (v26 == v27)
          {
            if (v64)
            {
              uint64_t v28 = sub_251F34DA0();
              uint64_t v29 = *(void **)(v28 - 8);
              if (v63 != v62)
              {
                uint64_t v30 = v28;
                unint64_t v31 = 0;
                uint64_t v32 = (uint64_t (*)(void))v29[2];
                uint64_t v61 = v29[8];
                uint64_t v58 = (void (**)(char *, uint64_t))v29[9];
                uint64_t v68 = v29 + 2;
                uint64_t v60 = (uint64_t (**)(char *, uint64_t))(v29 + 1);
                uint64_t v59 = v32;
                while (1)
                {
                  unint64_t v70 = v31;
                  uint64_t v66 = &v57;
                  uint64_t v33 = v61;
                  MEMORY[0x270FA5388](v28);
                  unint64_t v67 = (v33 + 15) & 0xFFFFFFFFFFFFFFF0;
                  uint64_t v69 = v34;
                  unint64_t v71 = (char *)&v57 - v67;
                  uint64_t v35 = v32();
                  unint64_t v65 = (unint64_t)&v57;
                  MEMORY[0x270FA5388](v35);
                  uint64_t v36 = v30;
                  uint64_t v37 = (char *)&v57 - v67;
                  if (v70 >= *(void *)(v62 + 16)) {
                    break;
                  }
                  ((void (*)(char *, uint64_t, uint64_t))v32)((char *)&v57 - v67, v62 + v69, v36);
                  sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
                  LODWORD(v67) = sub_251F35650();
                  uint64_t v38 = v37;
                  char v39 = *v60;
                  (*v60)(v38, v36);
                  uint64_t v28 = v39(v71, v36);
                  if ((v67 & 1) == 0) {
                    goto LABEL_4;
                  }
                  uint64_t v30 = v36;
                  unint64_t v31 = v70 + 1;
                  uint64_t v32 = v59;
                  if (v64 == (char *)(v70 + 1)) {
                    goto LABEL_30;
                  }
                }
                __break(1u);
LABEL_43:
                sub_251A7742C();
                uint64_t v54 = *(void *)&v77[0];
LABEL_38:
                uint64_t v55 = v74;
                sub_251B25C90(*(void *)(v54 + 48) + v13, v74, type metadata accessor for StaticRoom);
                sub_251B23A54(v11, type metadata accessor for StaticRoom, type metadata accessor for StaticRoom, (void (*)(char *))StaticRoom.hash(into:), type metadata accessor for StaticRoom);
                *unint64_t v72 = *(void *)&v77[0];
                swift_bridgeObjectRelease();
                return (*(uint64_t (**)(uint64_t, void, uint64_t, int *))(v73 + 56))(v55, 0, 1, v76);
              }
            }
LABEL_30:
            uint64_t v40 = v76[17];
            uint64_t v41 = *(void *)&v7[v40];
            uint64_t v42 = *(void *)(a1 + v40);
            uint64_t v63 = v41;
            uint64_t v43 = *(void **)(v41 + 16);
            uint64_t v62 = v42;
            if (v43 == *(void **)(v42 + 16))
            {
              if (!v43 || (uint64_t v44 = sub_251F34DA0(), v61 = v44, v45 = *(void *)(v44 - 8), v63 == v62))
              {
LABEL_36:
                if (sub_251B042A4(*(void *)&v7[v76[18]], *(void *)(a1 + v76[18])))
                {
                  sub_251B25BDC((uint64_t)v7, type metadata accessor for StaticRoom);
                  swift_bridgeObjectRelease();
                  uint64_t v52 = v72;
                  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                  uint64_t v54 = *v52;
                  *(void *)&v77[0] = *v52;
                  *uint64_t v52 = 0x8000000000000000;
                  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
                    goto LABEL_43;
                  }
                  goto LABEL_38;
                }
              }
              else
              {
                unint64_t v46 = (*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
                uint64_t v59 = *(uint64_t (**)(void))(v45 + 16);
                uint64_t v69 = *(void *)(v45 + 64);
                uint64_t v57 = *(void *)(v45 + 72);
                uint64_t v60 = (uint64_t (**)(char *, uint64_t))(v45 + 16);
                uint64_t v58 = (void (**)(char *, uint64_t))(v45 + 8);
                while (1)
                {
                  unint64_t v70 = v46;
                  unint64_t v67 = (unint64_t)&v57;
                  uint64_t v68 = v43;
                  MEMORY[0x270FA5388](v44);
                  unint64_t v65 = (v47 + 15) & 0xFFFFFFFFFFFFFFF0;
                  unint64_t v71 = (char *)&v57 - v65;
                  uint64_t v48 = v61;
                  uint64_t v49 = v59();
                  uint64_t v66 = &v57;
                  MEMORY[0x270FA5388](v49);
                  uint64_t v64 = (char *)&v57 - v65;
                  v50((char *)&v57 - v65, v62 + v70, v48);
                  sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
                  LODWORD(v65) = sub_251F35650();
                  uint64_t v51 = *v58;
                  (*v58)(v64, v48);
                  uint64_t v44 = ((uint64_t (*)(char *, uint64_t))v51)(v71, v48);
                  if ((v65 & 1) == 0) {
                    break;
                  }
                  unint64_t v46 = v70 + v57;
                  uint64_t v43 = (void *)((char *)v68 - 1);
                  if (v68 == (void *)1) {
                    goto LABEL_36;
                  }
                }
              }
            }
          }
        }
      }
    }
LABEL_4:
    sub_251B25BDC((uint64_t)v7, type metadata accessor for StaticRoom);
    unint64_t v11 = (v11 + 1) & v75;
  }
  while (((*(void *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  swift_bridgeObjectRelease();
  uint64_t v5 = v73;
  a2 = v74;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v5 + 56))(a2, 1, 1, v76);
}

uint64_t sub_251B23410(void *a1)
{
  uint64_t v3 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    id v4 = a1;
    char v5 = sub_251F36350();

    if (v5)
    {
      uint64_t v6 = sub_251B235E8();
      swift_bridgeObjectRelease();
      return v6;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_251F36110();
  uint64_t v8 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
    goto LABEL_12;
  }
  sub_251A1A568(0, (unint64_t *)&qword_26B21F170);
  id v10 = *(id *)(*(void *)(v3 + 48) + 8 * v9);
  char v11 = sub_251F36120();

  if ((v11 & 1) == 0)
  {
    uint64_t v12 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v12;
      if (((*(void *)(v3 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_12;
      }
      id v13 = *(id *)(*(void *)(v3 + 48) + 8 * v9);
      char v14 = sub_251F36120();
    }
    while ((v14 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v16 = *v1;
  uint64_t v18 = *v1;
  *uint64_t v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_251A768F4();
    uint64_t v16 = v18;
  }
  uint64_t v6 = *(void *)(*(void *)(v16 + 48) + 8 * v9);
  sub_251B23CE0(v9);
  *uint64_t v1 = v18;
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_251B235E8()
{
  uint64_t v1 = v0;
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_251F36300();
  uint64_t v3 = swift_unknownObjectRetain();
  uint64_t v4 = sub_251A68BC0(v3, v2);
  uint64_t v15 = v4;
  swift_retain();
  uint64_t v5 = sub_251F36110();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  if ((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7))
  {
    sub_251A1A568(0, (unint64_t *)&qword_26B21F170);
    id v8 = *(id *)(*(void *)(v4 + 48) + 8 * v7);
    char v9 = sub_251F36120();

    if (v9)
    {
LABEL_6:
      swift_release();
      uint64_t v13 = *(void *)(*(void *)(v4 + 48) + 8 * v7);
      sub_251B23CE0(v7);
      if (sub_251F36120())
      {
        *uint64_t v1 = v15;
        return v13;
      }
      __break(1u);
    }
    else
    {
      uint64_t v10 = ~v6;
      while (1)
      {
        unint64_t v7 = (v7 + 1) & v10;
        if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
          break;
        }
        id v11 = *(id *)(*(void *)(v4 + 48) + 8 * v7);
        char v12 = sub_251F36120();

        if (v12) {
          goto LABEL_6;
        }
      }
    }
    swift_release();
    __break(1u);
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

unint64_t sub_251B23784(unint64_t result)
{
  unint64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v33 = v1;
    uint64_t v7 = ~v5;
    swift_retain();
    int64_t v8 = v2;
    uint64_t v9 = sub_251F36270();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v10 = (v9 + 1) & v7;
      unint64_t v11 = sub_251F34DA0();
      unint64_t v40 = v11;
      char v12 = *(void **)(v11 - 8);
      uint64_t v13 = (void (*)(char *, unint64_t, unint64_t))v12[2];
      uint64_t v37 = v12 + 2;
      uint64_t v38 = v13;
      uint64_t v14 = v12[8];
      uint64_t v15 = v12[9];
      uint64_t v35 = v15;
      uint64_t v36 = v14;
      uint64_t v34 = (uint64_t (**)(char *, unint64_t))(v12 + 1);
      uint64_t v39 = v4;
      unint64_t v16 = v11;
      do
      {
        MEMORY[0x270FA5388](v11);
        uint64_t v18 = v7;
        uint64_t v19 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
        int64_t v20 = v15 * v6;
        v38(v19, *(void *)(v3 + 48) + v15 * v6, v16);
        uint64_t v21 = v3;
        sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
        uint64_t v22 = sub_251F35600();
        uint64_t v23 = v19;
        uint64_t v7 = v18;
        unint64_t v11 = (*v34)(v23, v16);
        unint64_t v24 = v22 & v18;
        if (v8 >= (uint64_t)v10)
        {
          if (v24 >= v10 && v8 >= (uint64_t)v24)
          {
LABEL_16:
            uint64_t v3 = v21;
            uint64_t v27 = *(void *)(v21 + 48);
            uint64_t v15 = v35;
            int64_t v28 = v35 * v8;
            unint64_t v11 = v27 + v35 * v8;
            if (v35 * v8 < v20 || v11 >= v27 + v20 + v35)
            {
              unint64_t v11 = swift_arrayInitWithTakeFrontToBack();
              int64_t v8 = v6;
            }
            else
            {
              int64_t v8 = v6;
              if (v28 != v20)
              {
                unint64_t v11 = swift_arrayInitWithTakeBackToFront();
                int64_t v8 = v6;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v24 >= v10 || v8 >= (uint64_t)v24)
        {
          goto LABEL_16;
        }
        uint64_t v3 = v21;
        uint64_t v15 = v35;
LABEL_5:
        unint64_t v6 = (v6 + 1) & v18;
        uint64_t v4 = v39;
      }
      while (((*(void *)(v39 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v8) - 1;
    uint64_t result = swift_release();
    uint64_t v1 = v33;
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v29 = *v1;
  uint64_t v30 = *(void *)(*v1 + 16);
  BOOL v31 = __OFSUB__(v30, 1);
  uint64_t v32 = v30 - 1;
  if (v31)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v29 + 16) = v32;
    ++*(_DWORD *)(v29 + 36);
  }
  return result;
}

uint64_t sub_251B23A54(unint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void), void (*a4)(char *), uint64_t (*a5)(void))
{
  uint64_t v30 = a4;
  BOOL v31 = a5;
  uint64_t v29 = a3;
  uint64_t v28 = a2(0);
  uint64_t v7 = *(void *)(v28 - 8);
  uint64_t result = MEMORY[0x270FA5388](v28);
  unint64_t v10 = (char *)&v27 - v9;
  uint64_t v11 = *v5;
  uint64_t v12 = *v5 + 56;
  uint64_t v13 = -1 << *(unsigned char *)(*v5 + 32);
  unint64_t v14 = (a1 + 1) & ~v13;
  if (((1 << v14) & *(void *)(v12 + 8 * (v14 >> 6))) != 0)
  {
    uint64_t v27 = v5;
    uint64_t v15 = ~v13;
    swift_retain();
    uint64_t v16 = sub_251F36270();
    if ((*(void *)(v12 + 8 * (v14 >> 6)) & (1 << v14)) != 0)
    {
      unint64_t v17 = (v16 + 1) & v15;
      uint64_t v18 = *(void *)(v7 + 72);
      while (1)
      {
        int64_t v19 = v18 * v14;
        sub_251B25B74(*(void *)(v11 + 48) + v18 * v14, (uint64_t)v10, v29);
        sub_251F36CA0();
        v30(v32);
        uint64_t v20 = sub_251F36D00();
        sub_251B25BDC((uint64_t)v10, v31);
        unint64_t v21 = v20 & v15;
        if ((uint64_t)a1 >= (uint64_t)v17) {
          break;
        }
        if (v21 < v17) {
          goto LABEL_11;
        }
LABEL_12:
        unint64_t v22 = v18 * a1;
        if ((uint64_t)(v18 * a1) < v19 || *(void *)(v11 + 48) + v18 * a1 >= *(void *)(v11 + 48) + v19 + v18)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          a1 = v14;
          if (v22 == v19) {
            goto LABEL_6;
          }
          swift_arrayInitWithTakeBackToFront();
        }
        a1 = v14;
LABEL_6:
        unint64_t v14 = (v14 + 1) & v15;
        if (((*(void *)(v12 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
          goto LABEL_16;
        }
      }
      if (v21 < v17) {
        goto LABEL_6;
      }
LABEL_11:
      if ((uint64_t)a1 < (uint64_t)v21) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_16:
    *(void *)(v12 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    uint64_t result = swift_release();
    uint64_t v5 = v27;
  }
  else
  {
    *(void *)(v12 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  uint64_t v23 = *v5;
  uint64_t v24 = *(void *)(*v5 + 16);
  BOOL v25 = __OFSUB__(v24, 1);
  uint64_t v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v23 + 16) = v26;
    ++*(_DWORD *)(v23 + 36);
  }
  return result;
}

unint64_t sub_251B23CE0(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_251F36270();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        id v10 = *(id *)(*(void *)(v3 + 48) + 8 * v6);
        uint64_t v11 = sub_251F36110();

        unint64_t v12 = v11 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v2 >= (uint64_t)v12)
          {
LABEL_16:
            uint64_t v15 = *(void *)(v3 + 48);
            uint64_t v16 = (void *)(v15 + 8 * v2);
            unint64_t v17 = (void *)(v15 + 8 * v6);
            if (v2 != v6 || (int64_t v2 = v6, v16 >= v17 + 1))
            {
              *uint64_t v16 = *v17;
              int64_t v2 = v6;
            }
          }
        }
        else if (v12 >= v9 || v2 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v18 = *(void *)(v3 + 16);
  BOOL v19 = __OFSUB__(v18, 1);
  uint64_t v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_251B23E84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B21E658) + 48);
  uint64_t v5 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B21FFB8) + 48);
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return sub_251B25B74(v4, v5, (uint64_t (*)(void))type metadata accessor for StaticService);
}

uint64_t sub_251B23F34(unint64_t *a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for StaticRoom(0) - 8;
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v33 = (uint64_t)&v29 - v10;
  MEMORY[0x270FA5388](v9);
  unint64_t v13 = *a1;
  uint64_t v14 = *(void *)(*a1 + 16);
  if (!v14)
  {
    unint64_t v17 = 0;
LABEL_11:
    swift_bridgeObjectRelease();
    return v17;
  }
  BOOL v31 = (char *)&v29 - v12;
  unint64_t v15 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v16 = *(void *)(v11 + 72);
  swift_bridgeObjectRetain();
  unint64_t v17 = 0;
  unint64_t v32 = v15;
  while (1)
  {
    char v18 = sub_251B1D8C8(v13 + v15, a2);
    if (v2)
    {
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    if (v18) {
      break;
    }
    ++v17;
    v15 += v16;
    if (v14 == v17)
    {
      swift_bridgeObjectRelease();
      unint64_t v17 = *(void *)(v13 + 16);
      goto LABEL_11;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (!__OFADD__(v17, 1))
  {
    unint64_t v20 = *(void *)(v13 + 16);
    if (v17 + 1 == v20) {
      goto LABEL_11;
    }
    uint64_t v29 = a1;
    uint64_t v30 = v8;
    uint64_t v21 = v16 + v15;
    unint64_t v22 = v17 + 1;
    uint64_t v23 = (uint64_t)v31;
    while (v22 < v20)
    {
      sub_251B25B74(v13 + v21, v23, type metadata accessor for StaticRoom);
      char v24 = sub_251B1D8C8(v23, a2);
      uint64_t result = sub_251B25BDC(v23, type metadata accessor for StaticRoom);
      if ((v24 & 1) == 0)
      {
        if (v22 != v17)
        {
          if ((v17 & 0x8000000000000000) != 0) {
            goto LABEL_31;
          }
          unint64_t v25 = *a1;
          unint64_t v26 = *(void *)(*a1 + 16);
          if (v17 >= v26) {
            goto LABEL_32;
          }
          uint64_t result = sub_251B25B74(v25 + v32 + v17 * v16, v33, type metadata accessor for StaticRoom);
          if (v22 >= v26) {
            goto LABEL_33;
          }
          sub_251B25B74(v25 + v21, (uint64_t)v30, type metadata accessor for StaticRoom);
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          a1 = v29;
          *uint64_t v29 = v25;
          if ((result & 1) == 0)
          {
            uint64_t result = sub_251A9260C(v25);
            unint64_t v25 = result;
            *a1 = result;
          }
          if (v17 >= *(void *)(v25 + 16)) {
            goto LABEL_34;
          }
          uint64_t result = sub_251B392A8((uint64_t)v30, v25 + v32 + v17 * v16, type metadata accessor for StaticRoom);
          if (v22 >= *(void *)(*a1 + 16)) {
            goto LABEL_35;
          }
          uint64_t result = sub_251B392A8(v33, *a1 + v21, type metadata accessor for StaticRoom);
          uint64_t v23 = (uint64_t)v31;
        }
        if (__OFADD__(v17++, 1)) {
          goto LABEL_30;
        }
      }
      unint64_t v28 = v22 + 1;
      if (__OFADD__(v22, 1)) {
        goto LABEL_29;
      }
      unint64_t v13 = *a1;
      unint64_t v20 = *(void *)(*a1 + 16);
      ++v22;
      v21 += v16;
      if (v28 == v20) {
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t _s13HomeDataModel13StateSnapshotV24CharacteristicUpdateTypeO05ValueH0O2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t *)a1;
  unint64_t v3 = *(void *)(a1 + 8);
  char v4 = *(unsigned char *)(a1 + 16);
  uint64_t v5 = *(uint64_t *)a2;
  unint64_t v6 = *(void *)(a2 + 8);
  int v7 = *(unsigned __int8 *)(a2 + 16);
  switch(v4)
  {
    case 1:
      if (v7 != 1) {
        goto LABEL_24;
      }
      sub_251A1AD70(*(void *)a1, v3, 1);
      sub_251A1AD70(v5, v6, 1);
      char v8 = *(double *)&v2 == *(double *)&v5;
      break;
    case 2:
      if (v7 != 2) {
        goto LABEL_24;
      }
      sub_251A1AD70(*(void *)a1, v3, 2);
      sub_251A1AD70(v5, v6, 2);
      char v8 = v2 == v5;
      break;
    case 3:
      if (v7 != 3)
      {
        swift_bridgeObjectRetain();
        goto LABEL_24;
      }
      if (v2 == v5 && v3 == v6) {
        char v8 = 1;
      }
      else {
        char v8 = sub_251F36B10();
      }
      sub_251A1A870(v5, v6, 3);
      sub_251A1A870(v2, v3, 3);
      sub_251A1AD70(v2, v3, 3);
      sub_251A1AD70(v5, v6, 3);
      break;
    case 4:
      if (v7 != 4)
      {
        sub_251A1A894(*(void *)a1, v3);
        goto LABEL_24;
      }
      sub_251A1A870(*(void *)a2, *(void *)(a2 + 8), 4);
      sub_251A1A870(v2, v3, 4);
      char v8 = sub_251D97ECC(v2, v3, v5, v6);
      sub_251A1AD70(v2, v3, 4);
      sub_251A1AD70(v5, v6, 4);
      break;
    case 5:
      if (v7 != 5 || (v6 | v5) != 0) {
        goto LABEL_24;
      }
      sub_251A1AD70(*(void *)a1, v3, 5);
      sub_251A1AD70(0, 0, 5);
      char v8 = 1;
      break;
    default:
      if (*(unsigned char *)(a2 + 16))
      {
LABEL_24:
        sub_251A1A870(v5, v6, v7);
        sub_251A1AD70(v2, v3, v4);
        sub_251A1AD70(v5, v6, v7);
        char v8 = 0;
      }
      else
      {
        sub_251A1AD70(*(void *)a1, v3, 0);
        sub_251A1AD70(v5, v6, 0);
        char v8 = ((v2 & 1) == 0) ^ v5;
      }
      break;
  }
  return v8 & 1;
}

uint64_t _s13HomeDataModel13StateSnapshotV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  if ((sub_251B09868(*a1, *a2) & 1) == 0) {
    return 0;
  }
  char v4 = (int *)type metadata accessor for StateSnapshot(0);
  if ((static StaticHome.== infix(_:_:)((uint64_t)a1 + v4[5], (uint64_t)a2 + v4[5]) & 1) == 0
    || (sub_251AB6800(*(uint64_t *)((char *)a1 + v4[6]), *(uint64_t *)((char *)a2 + v4[6])) & 1) == 0
    || (sub_251AFE48C(*(uint64_t *)((char *)a1 + v4[7]), *(uint64_t *)((char *)a2 + v4[7])) & 1) == 0
    || (sub_251AF9FA8(*(uint64_t *)((char *)a1 + v4[8]), *(uint64_t *)((char *)a2 + v4[8])) & 1) == 0
    || (sub_251AFECF0(*(uint64_t *)((char *)a1 + v4[9]), *(uint64_t *)((char *)a2 + v4[9])) & 1) == 0
    || (sub_251AFF55C(*(uint64_t *)((char *)a1 + v4[10]), *(uint64_t *)((char *)a2 + v4[10])) & 1) == 0
    || (sub_251AFFB5C(*(uint64_t *)((char *)a1 + v4[11]), *(uint64_t *)((char *)a2 + v4[11])) & 1) == 0
    || (sub_251B0015C(*(uint64_t *)((char *)a1 + v4[12]), *(uint64_t *)((char *)a2 + v4[12])) & 1) == 0
    || (sub_251B0075C(*(uint64_t *)((char *)a1 + v4[13]), *(uint64_t *)((char *)a2 + v4[13])) & 1) == 0
    || (sub_251AFA5A8(*(uint64_t *)((char *)a1 + v4[14]), *(uint64_t *)((char *)a2 + v4[14])) & 1) == 0
    || (sub_251AF99A8(*(uint64_t *)((char *)a1 + v4[15]), *(uint64_t *)((char *)a2 + v4[15])) & 1) == 0
    || (sub_251B00D5C(*(uint64_t *)((char *)a1 + v4[16]), *(uint64_t *)((char *)a2 + v4[16])) & 1) == 0
    || !sub_251AB69C8(*(uint64_t *)((char *)a1 + v4[17]), *(uint64_t *)((char *)a2 + v4[17]))
    || (sub_251B013D4(*(uint64_t *)((char *)a1 + v4[18]), *(uint64_t *)((char *)a2 + v4[18])) & 1) == 0)
  {
    return 0;
  }
  uint64_t v5 = v4[19];
  uint64_t v6 = *(uint64_t *)((char *)a1 + v5);
  uint64_t v7 = *(uint64_t *)((char *)a2 + v5);
  return sub_251B01B18(v6, v7);
}

uint64_t type metadata accessor for StateSnapshot(uint64_t a1)
{
  return sub_251A1C6FC(a1, qword_26B220328);
}

unint64_t sub_251B246F8()
{
  unint64_t result = qword_269B9DFC8;
  if (!qword_269B9DFC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9DFC8);
  }
  return result;
}

unint64_t sub_251B2474C()
{
  unint64_t result = qword_269B9DFE0;
  if (!qword_269B9DFE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9DFE0);
  }
  return result;
}

unint64_t sub_251B247A0()
{
  unint64_t result = qword_269B9E008;
  if (!qword_269B9E008)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B9E000);
    sub_251A1A8EC(&qword_26B21E348);
    sub_251B2485C(&qword_269B9E010, (void (*)(uint64_t))type metadata accessor for StaticZone);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E008);
  }
  return result;
}

uint64_t sub_251B2485C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_251B248A4()
{
  unint64_t result = qword_269B9E020;
  if (!qword_269B9E020)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B9E018);
    sub_251A1A8EC(&qword_26B21E348);
    sub_251B2485C(&qword_269B9E028, (void (*)(uint64_t))type metadata accessor for StaticAccessory);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E020);
  }
  return result;
}

unint64_t sub_251B24960()
{
  unint64_t result = qword_269B9E038;
  if (!qword_269B9E038)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B9E030);
    sub_251A1A8EC(&qword_26B21E348);
    sub_251B2485C(&qword_269B9E040, (void (*)(uint64_t))type metadata accessor for StaticActionSet);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E038);
  }
  return result;
}

unint64_t sub_251B24A1C()
{
  unint64_t result = qword_269B9E050;
  if (!qword_269B9E050)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B9E048);
    sub_251A1A8EC(&qword_26B21E348);
    sub_251B2485C(&qword_269B9E058, (void (*)(uint64_t))type metadata accessor for StaticCameraProfile);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E050);
  }
  return result;
}

unint64_t sub_251B24AD8()
{
  unint64_t result = qword_269B9E068;
  if (!qword_269B9E068)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B9E060);
    sub_251A1A8EC(&qword_26B21E348);
    sub_251B2485C(&qword_269B9E070, (void (*)(uint64_t))type metadata accessor for StaticMediaSystem);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E068);
  }
  return result;
}

unint64_t sub_251B24B94()
{
  unint64_t result = qword_269B9E080;
  if (!qword_269B9E080)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B9E078);
    sub_251A1A8EC(&qword_26B21E348);
    sub_251B2485C(&qword_269B9D370, (void (*)(uint64_t))type metadata accessor for StaticMediaProfile);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E080);
  }
  return result;
}

unint64_t sub_251B24C50()
{
  unint64_t result = qword_269B9E090;
  if (!qword_269B9E090)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B9E088);
    sub_251A1A8EC(&qword_26B21E348);
    sub_251B2485C(&qword_269B9E098, (void (*)(uint64_t))type metadata accessor for StaticRoom);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E090);
  }
  return result;
}

unint64_t sub_251B24D0C()
{
  unint64_t result = qword_269B9E0A8;
  if (!qword_269B9E0A8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B9E0A0);
    sub_251A1A8EC(&qword_26B21E348);
    sub_251B2485C(&qword_269B9E0B0, (void (*)(uint64_t))type metadata accessor for StaticServiceGroup);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E0A8);
  }
  return result;
}

unint64_t sub_251B24DC8()
{
  unint64_t result = qword_269B9E0C0;
  if (!qword_269B9E0C0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B9E0B8);
    sub_251A1A8EC(&qword_26B21E348);
    sub_251B2485C(&qword_269B9E0C8, (void (*)(uint64_t))type metadata accessor for StaticService);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E0C0);
  }
  return result;
}

unint64_t sub_251B24E84()
{
  unint64_t result = qword_269B9E0D8;
  if (!qword_269B9E0D8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B9E0D0);
    sub_251A1A8EC(&qword_26B21E348);
    sub_251B2485C(&qword_269B9E0E0, (void (*)(uint64_t))type metadata accessor for StaticUser);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E0D8);
  }
  return result;
}

uint64_t sub_251B24F40(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B9E0E8);
    sub_251B2485C(a2, (void (*)(uint64_t))type metadata accessor for StaticUserActionPrediction);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_251B24FD4()
{
  unint64_t result = qword_269B9E108;
  if (!qword_269B9E108)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B9E100);
    sub_251A1A8EC(&qword_26B21E348);
    sub_251B2485C(&qword_269B9E110, (void (*)(uint64_t))type metadata accessor for StaticHH2Update);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E108);
  }
  return result;
}

unint64_t sub_251B25090()
{
  unint64_t result = qword_269B9E120;
  if (!qword_269B9E120)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B9E118);
    sub_251A1A8EC(&qword_26B21E348);
    sub_251B2485C(&qword_269B9E128, (void (*)(uint64_t))type metadata accessor for StaticResident);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E120);
  }
  return result;
}

uint64_t sub_251B2514C(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B9DFD0);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_251B251BC()
{
  unint64_t result = qword_269B9E140;
  if (!qword_269B9E140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E140);
  }
  return result;
}

uint64_t sub_251B25210(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B9DFF0);
    sub_251B2485C(a2, (void (*)(uint64_t))type metadata accessor for StaticHome);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_251B252A4()
{
  unint64_t result = qword_269B9E158;
  if (!qword_269B9E158)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B9E000);
    sub_251A1A8EC(&qword_269B9CC80);
    sub_251B2485C(&qword_269B9E160, (void (*)(uint64_t))type metadata accessor for StaticZone);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E158);
  }
  return result;
}

unint64_t sub_251B25360()
{
  unint64_t result = qword_269B9E168;
  if (!qword_269B9E168)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B9E018);
    sub_251A1A8EC(&qword_269B9CC80);
    sub_251B2485C(&qword_269B9E170, (void (*)(uint64_t))type metadata accessor for StaticAccessory);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E168);
  }
  return result;
}

unint64_t sub_251B2541C()
{
  unint64_t result = qword_269B9E178;
  if (!qword_269B9E178)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B9E030);
    sub_251A1A8EC(&qword_269B9CC80);
    sub_251B2485C(&qword_269B9E180, (void (*)(uint64_t))type metadata accessor for StaticActionSet);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E178);
  }
  return result;
}

unint64_t sub_251B254D8()
{
  unint64_t result = qword_269B9E188;
  if (!qword_269B9E188)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B9E048);
    sub_251A1A8EC(&qword_269B9CC80);
    sub_251B2485C(&qword_269B9E190, (void (*)(uint64_t))type metadata accessor for StaticCameraProfile);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E188);
  }
  return result;
}

unint64_t sub_251B25594()
{
  unint64_t result = qword_269B9E198;
  if (!qword_269B9E198)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B9E060);
    sub_251A1A8EC(&qword_269B9CC80);
    sub_251B2485C(&qword_269B9E1A0, (void (*)(uint64_t))type metadata accessor for StaticMediaSystem);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E198);
  }
  return result;
}

unint64_t sub_251B25650()
{
  unint64_t result = qword_269B9E1A8;
  if (!qword_269B9E1A8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B9E078);
    sub_251A1A8EC(&qword_269B9CC80);
    sub_251B2485C(&qword_269B9D388, (void (*)(uint64_t))type metadata accessor for StaticMediaProfile);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E1A8);
  }
  return result;
}

unint64_t sub_251B2570C()
{
  unint64_t result = qword_269B9E1B0;
  if (!qword_269B9E1B0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B9E088);
    sub_251A1A8EC(&qword_269B9CC80);
    sub_251B2485C(&qword_269B9E1B8, (void (*)(uint64_t))type metadata accessor for StaticRoom);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E1B0);
  }
  return result;
}

unint64_t sub_251B257C8()
{
  unint64_t result = qword_269B9E1C0;
  if (!qword_269B9E1C0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B9E0A0);
    sub_251A1A8EC(&qword_269B9CC80);
    sub_251B2485C(&qword_269B9E1C8, (void (*)(uint64_t))type metadata accessor for StaticServiceGroup);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E1C0);
  }
  return result;
}

unint64_t sub_251B25884()
{
  unint64_t result = qword_269B9E1D0;
  if (!qword_269B9E1D0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B9E0B8);
    sub_251A1A8EC(&qword_269B9CC80);
    sub_251B2485C(&qword_269B9E1D8, (void (*)(uint64_t))type metadata accessor for StaticService);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E1D0);
  }
  return result;
}

unint64_t sub_251B25940()
{
  unint64_t result = qword_269B9E1E0;
  if (!qword_269B9E1E0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B9E0D0);
    sub_251A1A8EC(&qword_269B9CC80);
    sub_251B2485C(&qword_269B9E1E8, (void (*)(uint64_t))type metadata accessor for StaticUser);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E1E0);
  }
  return result;
}

unint64_t sub_251B259FC()
{
  unint64_t result = qword_269B9E200;
  if (!qword_269B9E200)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B9E100);
    sub_251A1A8EC(&qword_269B9CC80);
    sub_251B2485C(&qword_269B9E208, (void (*)(uint64_t))type metadata accessor for StaticHH2Update);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E200);
  }
  return result;
}

unint64_t sub_251B25AB8()
{
  unint64_t result = qword_269B9E210;
  if (!qword_269B9E210)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B9E118);
    sub_251A1A8EC(&qword_269B9CC80);
    sub_251B2485C(&qword_269B9E218, (void (*)(uint64_t))type metadata accessor for StaticResident);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E210);
  }
  return result;
}

uint64_t sub_251B25B74(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_251B25BDC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_251B25C3C()
{
  unint64_t result = qword_269B9E230;
  if (!qword_269B9E230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E230);
  }
  return result;
}

uint64_t sub_251B25C90(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

BOOL sub_251B25CF8(uint64_t a1)
{
  return sub_251B0EADC(a1);
}

uint64_t sub_251B25D18@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_251CCC28C(a1, *(unsigned char *)(v2 + 16), *(unsigned char *)(v2 + 17), **(void **)(v2 + 24));
  if (!v3) {
    *a2 = result;
  }
  return result;
}

uint64_t _s13HomeDataModel13StateSnapshotV24CharacteristicUpdateTypeO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  unsigned __int8 v4 = *(unsigned char *)(a1 + 16);
  uint64_t v5 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  int v7 = *(unsigned __int8 *)(a2 + 16);
  switch(v4)
  {
    case 1u:
      if (v7 != 1) {
        goto LABEL_15;
      }
      unsigned __int8 v4 = 1;
      sub_251B2B004(*(void *)a2, *(void *)(a2 + 8), 1u);
      sub_251B2B004(v2, v3, 1u);
      char v9 = sub_251B022B4(v2, v5);
      break;
    case 2u:
      if (v7 != 2) {
        goto LABEL_15;
      }
      unsigned __int8 v4 = 2;
      sub_251B2B004(*(void *)a2, *(void *)(a2 + 8), 2u);
      uint64_t v10 = v2;
      uint64_t v11 = v3;
      unsigned __int8 v12 = 2;
      goto LABEL_14;
    case 3u:
      if (v7 != 3) {
        goto LABEL_15;
      }
      unsigned __int8 v4 = 3;
      sub_251B2B004(*(void *)a2, *(void *)(a2 + 8), 3u);
      uint64_t v10 = v2;
      uint64_t v11 = v3;
      unsigned __int8 v12 = 3;
LABEL_14:
      sub_251B2B004(v10, v11, v12);
      char v9 = sub_251B02780(v2, v5);
      break;
    case 4u:
      if (v7 != 4) {
        goto LABEL_15;
      }
      unsigned __int8 v4 = 4;
      sub_251B2B004(*(void *)a2, *(void *)(a2 + 8), 4u);
      sub_251B2B004(v2, v3, 4u);
      if (sub_251B02780(v2, v5))
      {
        char v9 = sub_251B03590(v3, v6);
        unsigned __int8 v4 = 4;
      }
      else
      {
        char v9 = 0;
      }
      LOBYTE(v7) = 4;
      break;
    default:
      if (*(unsigned char *)(a2 + 16))
      {
LABEL_15:
        sub_251B2B004(*(void *)a2, *(void *)(a2 + 8), v7);
        sub_251B2B004(v2, v3, v4);
        char v9 = 0;
      }
      else
      {
        sub_251B2B004(*(void *)a2, *(void *)(a2 + 8), 0);
        sub_251B2B004(v2, v3, 0);
        sub_251B09C6C(v2, v5);
        char v9 = v8;
        unsigned __int8 v4 = 0;
      }
      break;
  }
  sub_251B286EC(v2, v3, v4);
  sub_251B286EC(v5, v6, v7);
  return v9 & 1;
}

uint64_t _s13HomeDataModel13StateSnapshotV10UpdateTypeO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  uint64_t v5 = MEMORY[0x270FA5388](updated);
  int v7 = (char *)v125 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v129 = (char *)v125 - v9;
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v128 = (char *)v125 - v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v126 = (char *)v125 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v127 = (char *)v125 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  char v18 = (uint64_t *)((char *)v125 - v17);
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  uint64_t v21 = (uint64_t *)((char *)v125 - v20);
  uint64_t v22 = MEMORY[0x270FA5388](v19);
  char v24 = (char *)v125 - v23;
  MEMORY[0x270FA5388](v22);
  unint64_t v26 = (id *)((char *)v125 - v25);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E340);
  uint64_t v28 = MEMORY[0x270FA5388](v27 - 8);
  uint64_t v30 = (char *)v125 + *(int *)(v28 + 56) - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = a1;
  unint64_t v32 = (char *)v125 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251B25B74(v31, (uint64_t)v32, type metadata accessor for StateSnapshot.UpdateType);
  sub_251B25B74(a2, (uint64_t)v30, type metadata accessor for StateSnapshot.UpdateType);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_251B25B74((uint64_t)v32, (uint64_t)v24, type metadata accessor for StateSnapshot.UpdateType);
      uint64_t v35 = *(void *)v24;
      uint64_t v34 = *((void *)v24 + 1);
      unsigned __int8 v36 = v24[16];
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v37 = *(void *)v30;
        uint64_t v38 = *((void *)v30 + 1);
        unsigned __int8 v39 = v30[16];
        v132[0] = v35;
        v132[1] = v34;
        unsigned __int8 v133 = v36;
        v130[0] = v37;
        v130[1] = v38;
        unsigned __int8 v131 = v39;
        char v40 = _s13HomeDataModel13StateSnapshotV24CharacteristicUpdateTypeO2eeoiySbAE_AEtFZ_0((uint64_t)v132, (uint64_t)v130);
        sub_251B286EC(v37, v38, v39);
        sub_251B286EC(v35, v34, v36);
        goto LABEL_31;
      }
      sub_251B286EC(v35, v34, v36);
      goto LABEL_43;
    case 2u:
      sub_251B25B74((uint64_t)v32, (uint64_t)v21, type metadata accessor for StateSnapshot.UpdateType);
      uint64_t v42 = *v21;
      uint64_t v41 = v21[1];
      uint64_t v43 = v21[2];
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        uint64_t v44 = *((void *)v30 + 1);
        uint64_t v45 = *((void *)v30 + 2);
        char v46 = sub_251AB6E94(v42, *(void *)v30);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v46)
        {
          char v47 = sub_251AB6424(v41, v44);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v47)
          {
            char v48 = sub_251AB6424(v43, v45);
LABEL_12:
            char v40 = v48;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_31:
            sub_251B25BDC((uint64_t)v32, type metadata accessor for StateSnapshot.UpdateType);
            return v40 & 1;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_69;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_39:
      swift_bridgeObjectRelease();
LABEL_43:
      sub_251A1B064((uint64_t)v32, &qword_269B9E340);
      goto LABEL_83;
    case 3u:
      sub_251B25B74((uint64_t)v32, (uint64_t)v18, type metadata accessor for StateSnapshot.UpdateType);
      uint64_t v49 = *v18;
      if (swift_getEnumCaseMultiPayload() != 3) {
        goto LABEL_39;
      }
      char v48 = sub_251AB6EA8(v49, *(void *)v30);
      goto LABEL_12;
    case 4u:
      uint64_t v50 = v127;
      sub_251B25B74((uint64_t)v32, (uint64_t)v127, type metadata accessor for StateSnapshot.UpdateType);
      uint64_t v51 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_269B9E2A0);
      uint64_t v52 = v51[12];
      uint64_t v53 = *(char **)&v50[v52];
      uint64_t v54 = v51[16];
      uint64_t v55 = *(void **)&v50[v54];
      uint64_t v56 = v51[20];
      uint64_t v57 = *(char **)&v50[v56];
      if (swift_getEnumCaseMultiPayload() != 4)
      {

        uint64_t v108 = sub_251F34DA0();
        (*(void (**)(char *, uint64_t))(*(void *)(v108 - 8) + 8))(v50, v108);
        goto LABEL_43;
      }
      uint64_t v128 = v57;
      uint64_t v129 = v53;
      uint64_t v126 = v32;
      uint64_t v58 = *(void **)&v30[v52];
      uint64_t v59 = *(char **)&v30[v54];
      uint64_t v60 = *(void **)&v30[v56];
      uint64_t v61 = sub_251F34DA0();
      v125[1] = v125;
      uint64_t v62 = *(void *)(v61 - 8);
      MEMORY[0x270FA5388](v61);
      uint64_t v64 = (char *)v125 - ((v63 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v64, v30, v61);
      char v65 = sub_251F34D70();
      uint64_t v66 = *(void (**)(char *, uint64_t))(v62 + 8);
      v66(v50, v61);
      if ((v65 & 1) == 0)
      {
        v66(v64, v61);

LABEL_80:
        goto LABEL_81;
      }
      uint64_t v127 = v59;
      v125[0] = v60;
      unint64_t v67 = v58;
      if (v129)
      {
        uint64_t v68 = v58;
        uint64_t v69 = v127;
        unint64_t v70 = v55;
        if (!v67) {
          goto LABEL_79;
        }
        sub_251A1A568(0, &qword_269B9E358);
        id v71 = v67;
        unint64_t v72 = v129;
        char v73 = sub_251F36120();

        uint64_t v68 = v67;
        uint64_t v69 = v127;
        if ((v73 & 1) == 0) {
          goto LABEL_79;
        }
      }
      else
      {
        uint64_t v68 = v58;
        uint64_t v69 = v127;
        unint64_t v70 = v55;
        if (v67) {
          goto LABEL_79;
        }
      }
      if (!v70)
      {
        if (!v69) {
          goto LABEL_61;
        }
LABEL_79:
        v66(v64, v61);

        goto LABEL_80;
      }
      if (!v69) {
        goto LABEL_79;
      }
      sub_251A1A568(0, &qword_269B9E350);
      uint64_t v115 = v69;
      id v116 = v70;
      char v117 = sub_251F36120();

      uint64_t v68 = v67;
      uint64_t v69 = v127;
      if ((v117 & 1) == 0) {
        goto LABEL_79;
      }
LABEL_61:
      if (!v128)
      {

        v66(v64, v61);
        char v124 = (char *)v125[0];
        if (!v125[0]) {
          goto LABEL_86;
        }
LABEL_88:

        goto LABEL_81;
      }
      id v118 = v125[0];
      if (!v125[0])
      {
        char v124 = v128;

        v66(v64, v61);
        goto LABEL_88;
      }
      sub_251A1A568(0, &qword_269B9E348);
      id v119 = v118;
      uint64_t v120 = v128;
      char v121 = sub_251F36120();

      v66(v64, v61);
      if ((v121 & 1) == 0)
      {
LABEL_81:
        uint64_t v122 = (uint64_t)v126;
        goto LABEL_82;
      }
LABEL_86:
      uint64_t v107 = (uint64_t)v126;
LABEL_36:
      sub_251B25BDC(v107, type metadata accessor for StateSnapshot.UpdateType);
      char v40 = 1;
      return v40 & 1;
    case 5u:
      uint64_t v74 = (uint64_t)v126;
      sub_251B25B74((uint64_t)v32, (uint64_t)v126, type metadata accessor for StateSnapshot.UpdateType);
      uint64_t v75 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA1B60) + 48);
      int v76 = *(unsigned __int8 *)(v74 + v75);
      if (swift_getEnumCaseMultiPayload() != 5)
      {
        uint64_t v109 = sub_251F34DA0();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v109 - 8) + 8))(v74, v109);
        goto LABEL_43;
      }
      int v77 = v30[v75];
      uint64_t v78 = sub_251F34DA0();
      uint64_t v79 = *(void *)(v78 - 8);
      MEMORY[0x270FA5388](v78);
      uint64_t v81 = (char *)v125 - ((v80 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v81, v30, v78);
      char v82 = sub_251F34D70();
      uint64_t v83 = *(void (**)(char *, uint64_t))(v79 + 8);
      v83(v81, v78);
      v83((char *)v74, v78);
      if (v82)
      {
        switch(v76)
        {
          case 2:
            if (v77 == 2) {
              goto LABEL_35;
            }
            goto LABEL_69;
          case 3:
            if (v77 != 3) {
              goto LABEL_69;
            }
            goto LABEL_35;
          case 4:
            if (v77 == 4) {
              goto LABEL_35;
            }
            goto LABEL_69;
          case 5:
            if (v77 == 5) {
              goto LABEL_35;
            }
            goto LABEL_69;
          case 6:
            if (v77 == 6) {
              goto LABEL_35;
            }
            goto LABEL_69;
          case 7:
            if (v77 == 7) {
              goto LABEL_35;
            }
            goto LABEL_69;
          default:
            if ((v77 - 2) >= 6 && ((v77 ^ v76) & 1) == 0) {
              goto LABEL_35;
            }
            goto LABEL_69;
        }
      }
      goto LABEL_69;
    case 6u:
      uint64_t v84 = v128;
      sub_251B25B74((uint64_t)v32, (uint64_t)v128, type metadata accessor for StateSnapshot.UpdateType);
      uint64_t v85 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269B9E298) + 48);
      uint64_t v86 = *(void *)&v84[v85];
      if (swift_getEnumCaseMultiPayload() != 6) {
        goto LABEL_42;
      }
      uint64_t v87 = *(void *)&v30[v85];
      uint64_t v88 = sub_251F34DA0();
      uint64_t v89 = *(void *)(v88 - 8);
      MEMORY[0x270FA5388](v88);
      uint64_t v91 = (char *)v125 - ((v90 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t))(v89 + 32))(v91, v30, v88);
      char v92 = sub_251F34D70();
      char v93 = v84;
      char v94 = v92;
      unint64_t v95 = *(void (**)(char *, uint64_t))(v89 + 8);
      v95(v93, v88);
      if (v94)
      {
        char v40 = sub_251B04848(v86, v87);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v96 = v91;
        goto LABEL_30;
      }
      v95(v91, v88);
      swift_bridgeObjectRelease();
      goto LABEL_52;
    case 7u:
      uint64_t v84 = v129;
      sub_251B25B74((uint64_t)v32, (uint64_t)v129, type metadata accessor for StateSnapshot.UpdateType);
      uint64_t v97 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269B9E290) + 48);
      uint64_t v98 = *(void *)&v84[v97];
      if (swift_getEnumCaseMultiPayload() != 7)
      {
LABEL_42:
        swift_bridgeObjectRelease();
        uint64_t v110 = sub_251F34DA0();
        (*(void (**)(char *, uint64_t))(*(void *)(v110 - 8) + 8))(v84, v110);
        goto LABEL_43;
      }
      uint64_t v99 = *(void *)&v30[v97];
      uint64_t v88 = sub_251F34DA0();
      uint64_t v100 = *(void *)(v88 - 8);
      MEMORY[0x270FA5388](v88);
      unint64_t v102 = (char *)v125 - ((v101 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t))(v100 + 32))(v102, v30, v88);
      char v103 = sub_251F34D70();
      unint64_t v104 = v84;
      char v105 = v103;
      unint64_t v95 = *(void (**)(char *, uint64_t))(v100 + 8);
      v95(v104, v88);
      if (v105)
      {
        char v40 = sub_251B03A28(v98, v99);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v96 = v102;
LABEL_30:
        v95(v96, v88);
        goto LABEL_31;
      }
      v95(v102, v88);
      swift_bridgeObjectRelease();
LABEL_52:
      swift_bridgeObjectRelease();
      goto LABEL_69;
    case 8u:
      sub_251B25B74((uint64_t)v32, (uint64_t)v7, type metadata accessor for StateSnapshot.UpdateType);
      if (swift_getEnumCaseMultiPayload() != 8) {
        goto LABEL_43;
      }
      char v106 = *v7 ^ *v30;
      sub_251B25BDC((uint64_t)v32, type metadata accessor for StateSnapshot.UpdateType);
      char v40 = v106 ^ 1;
      return v40 & 1;
    case 9u:
      if (swift_getEnumCaseMultiPayload() == 9) {
        goto LABEL_35;
      }
      goto LABEL_43;
    default:
      sub_251B25B74((uint64_t)v32, (uint64_t)v26, type metadata accessor for StateSnapshot.UpdateType);
      uint64_t v33 = *v26;
      if (swift_getEnumCaseMultiPayload())
      {

        goto LABEL_43;
      }
      uint64_t v111 = *(void **)v30;
      if (v33)
      {
        if (v111)
        {
          sub_251A1A568(0, (unint64_t *)&qword_26B21F2D0);
          id v112 = v111;
          id v113 = v33;
          char v114 = sub_251F36120();

          if ((v114 & 1) == 0)
          {
LABEL_69:
            uint64_t v122 = (uint64_t)v32;
LABEL_82:
            sub_251B25BDC(v122, type metadata accessor for StateSnapshot.UpdateType);
LABEL_83:
            char v40 = 0;
            return v40 & 1;
          }
LABEL_35:
          uint64_t v107 = (uint64_t)v32;
          goto LABEL_36;
        }
      }
      else
      {
        if (!v111) {
          goto LABEL_35;
        }
        uint64_t v33 = *(void **)v30;
      }

      goto LABEL_69;
  }
}

uint64_t sub_251B26EA4(unint64_t a1, void *a2)
{
  unint64_t v3 = v2;
  id v17 = a2;
  uint64_t v5 = type metadata accessor for StaticHome();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v9 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v10 = MEMORY[0x263F8EE78];
    if (!v9) {
      return v10;
    }
    uint64_t v18 = MEMORY[0x263F8EE78];
    uint64_t result = sub_251A3E048(0, v9 & ~(v9 >> 63), 0);
    if (v9 < 0) {
      break;
    }
    unint64_t v16 = v3;
    uint64_t v12 = 0;
    uint64_t v10 = v18;
    unint64_t v3 = a1 & 0xC000000000000001;
    while (v9 != v12)
    {
      if (v3) {
        id v13 = (id)MEMORY[0x2533AB3A0](v12, a1);
      }
      else {
        id v13 = *(id *)(a1 + 8 * v12 + 32);
      }
      sub_251C7E220(v13, v17, (uint64_t)v8);
      uint64_t v18 = v10;
      unint64_t v15 = *(void *)(v10 + 16);
      unint64_t v14 = *(void *)(v10 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_251A3E048(v14 > 1, v15 + 1, 1);
        uint64_t v10 = v18;
      }
      ++v12;
      *(void *)(v10 + 16) = v15 + 1;
      sub_251B25C90((uint64_t)v8, v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v15, (uint64_t (*)(void))type metadata accessor for StaticHome);
      if (v9 == v12) {
        return v10;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_251F366C0();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_251B270AC(uint64_t a1, uint64_t a2, void (*a3)(char *), uint64_t a4)
{
  char v48 = a3;
  uint64_t v49 = a4;
  uint64_t v7 = type metadata accessor for StaticHome() - 8;
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v43 = (uint64_t)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v41 - v11;
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v64 = MEMORY[0x263F8EE78];
  uint64_t v47 = *(void *)(a1 + 16);
  if (v47)
  {
    uint64_t v41 = v4;
    uint64_t v14 = 0;
    uint64_t v15 = *(unsigned __int8 *)(v10 + 80);
    uint64_t v50 = *(void *)(v10 + 72);
    uint64_t v42 = (v15 + 32) & ~v15;
    uint64_t v44 = a1 + v42;
    uint64_t v45 = (char *)&v41 - v11;
    uint64_t v46 = a2;
    do
    {
      uint64_t v52 = v14;
      sub_251B25B74(v44 + v50 * v14, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticHome);
      uint64_t v17 = sub_251F34DA0();
      uint64_t v54 = &v41;
      uint64_t v18 = *(void *)(v17 - 8);
      MEMORY[0x270FA5388](v17);
      uint64_t v62 = v19;
      uint64_t v63 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
      v48(v12);
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
      uint64_t v53 = &v41;
      MEMORY[0x270FA5388](v20 - 8);
      uint64_t v22 = (char *)&v41 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v23 = *(void *)(a2 + 16);
      uint64_t v51 = v18;
      if (v23)
      {
        uint64_t v24 = v18 + 16;
        uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
        uint64_t v26 = a2 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
        uint64_t v27 = *(void *)(v18 + 72);
        uint64_t v28 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
        uint64_t v59 = (uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 32);
        uint64_t v60 = v25;
        uint64_t v56 = v27;
        uint64_t v57 = (void (**)(char *, char *, uint64_t))(v24 + 16);
        uint64_t v61 = v24;
        uint64_t v58 = (void (**)(char *, uint64_t))(v24 - 8);
        swift_bridgeObjectRetain();
        while (1)
        {
          v60(v22, v26, v17);
          uint64_t v29 = *v28;
          (*v28)(v22, 0, 1, v17);
          uint64_t v30 = (*v59)(v22, 1, v17);
          if (v30 == 1) {
            break;
          }
          uint64_t v55 = v29;
          MEMORY[0x270FA5388](v30);
          uint64_t v32 = v17;
          uint64_t v33 = (char *)&v41 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
          uint64_t v34 = v22;
          (*v57)(v33, v22, v32);
          sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
          char v35 = sub_251F35650();
          unsigned __int8 v36 = *v58;
          uint64_t v37 = v33;
          uint64_t v17 = v32;
          (*v58)(v37, v32);
          if (v35)
          {
            a2 = v46;
            swift_bridgeObjectRelease();
            v36(v63, v32);
            uint64_t v12 = v45;
            sub_251B25C90((uint64_t)v45, v43, (uint64_t (*)(void))type metadata accessor for StaticHome);
            uint64_t v38 = v64;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_251A3E048(0, *(void *)(v38 + 16) + 1, 1);
              uint64_t v38 = v64;
            }
            unint64_t v40 = *(void *)(v38 + 16);
            unint64_t v39 = *(void *)(v38 + 24);
            if (v40 >= v39 >> 1)
            {
              sub_251A3E048(v39 > 1, v40 + 1, 1);
              uint64_t v38 = v64;
            }
            *(void *)(v38 + 16) = v40 + 1;
            sub_251B25C90(v43, v38 + v42 + v40 * v50, (uint64_t (*)(void))type metadata accessor for StaticHome);
            goto LABEL_5;
          }
          v26 += v56;
          --v23;
          uint64_t v22 = v34;
          if (!v23)
          {
            v55(v34, 1, 1, v32);
            break;
          }
        }
      }
      else
      {
        unint64_t v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
        swift_bridgeObjectRetain();
        v16(v22, 1, 1, v17);
      }
      a2 = v46;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v63, v17);
      uint64_t v12 = v45;
      sub_251B25BDC((uint64_t)v45, (uint64_t (*)(void))type metadata accessor for StaticHome);
LABEL_5:
      uint64_t v14 = v52 + 1;
    }
    while (v52 + 1 != v47);
    return v64;
  }
  return result;
}

uint64_t sub_251B27608(void **a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v8 = *(void *)(type metadata accessor for StaticHome() - 8);
  uint64_t v9 = *a1;
  swift_bridgeObjectRetain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v9 = (void *)sub_251ECDC60(v9);
  }
  uint64_t v10 = v9[2];
  v12[0] = (uint64_t)v9 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  v12[1] = v10;
  swift_bridgeObjectRetain();
  sub_251B2EFC4(v12, a2, a3, a4, (uint64_t (*)(void))type metadata accessor for StaticHome, (uint64_t (*)(void))type metadata accessor for StaticHome, (uint64_t (*)(void))type metadata accessor for StaticHome, (uint64_t (*)(void))type metadata accessor for StaticHome, (uint64_t (*)(void))type metadata accessor for StaticHome, (void (*)(unint64_t *, unint64_t *, unint64_t *))sub_251ECD6D8);
  swift_bridgeObjectRelease();
  *a1 = v9;
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_251B27780(uint64_t a1, void (*a2)(void *__return_ptr, char *), uint64_t a3)
{
  void (*v22)(void *__return_ptr, char *);
  uint64_t v23;
  void v24[2];
  uint64_t v25;

  uint64_t v22 = a2;
  uint64_t v23 = a3;
  uint64_t v5 = type metadata accessor for StaticHome() - 8;
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v11 = (char *)&v20 - v10;
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v25 = MEMORY[0x263F8EE78];
  uint64_t v13 = *(void *)(a1 + 16);
  if (v13)
  {
    uint64_t v20 = v3;
    uint64_t v14 = *(void *)(v9 + 72);
    unint64_t v21 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v15 = a1 + v21;
    uint64_t v16 = MEMORY[0x263F8EE78];
    do
    {
      sub_251B25B74(v15, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticHome);
      v22(v24, v11);
      uint64_t v17 = v24[1];
      swift_bridgeObjectRelease();
      if (v17)
      {
        sub_251B25C90((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticHome);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_251A3E048(0, *(void *)(v16 + 16) + 1, 1);
        }
        uint64_t v16 = v25;
        unint64_t v19 = *(void *)(v25 + 16);
        unint64_t v18 = *(void *)(v25 + 24);
        if (v19 >= v18 >> 1)
        {
          sub_251A3E048(v18 > 1, v19 + 1, 1);
          uint64_t v16 = v25;
        }
        *(void *)(v16 + 16) = v19 + 1;
        sub_251B25C90((uint64_t)v8, v16 + v21 + v19 * v14, (uint64_t (*)(void))type metadata accessor for StaticHome);
      }
      else
      {
        sub_251B25BDC((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticHome);
      }
      v15 += v14;
      --v13;
    }
    while (v13);
    return v25;
  }
  return result;
}

void *sub_251B279BC(void **a1, void *(*a2)(uint64_t *__return_ptr), uint64_t a3)
{
  uint64_t v6 = *(void *)(type metadata accessor for StaticHome() - 8);
  uint64_t v7 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v7 = (void *)sub_251ECDC60(v7);
  }
  uint64_t v8 = v7[2];
  v10[0] = (uint64_t)v7 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  v10[1] = v8;
  uint64_t result = sub_251B303FC(v10, a2, a3, (uint64_t (*)(void))type metadata accessor for StaticHome, (uint64_t (*)(void))type metadata accessor for StaticHome, (uint64_t (*)(void))type metadata accessor for StaticHome, (uint64_t (*)(void))type metadata accessor for StaticHome, (uint64_t (*)(void))type metadata accessor for StaticHome, (void (*)(unint64_t *, unint64_t *, unint64_t *))sub_251ECD6D8);
  *a1 = v7;
  return result;
}

uint64_t sub_251B27AF4(unint64_t *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticHome() - 8;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v51 = (uint64_t)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v52 = (uint64_t)&v49 - v8;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v49 - v10;
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v60 = (uint64_t)&v49 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v49 - v15;
  uint64_t v58 = a1;
  unint64_t v17 = *a1;
  uint64_t v55 = *(void *)(v17 + 16);
  if (!v55) {
    return 0;
  }
  unint64_t v18 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  unint64_t v53 = v17 + v18;
  uint64_t v62 = *(void *)(a2 + 16);
  uint64_t v19 = *(void *)(v14 + 72);
  uint64_t v57 = a2 + v18;
  uint64_t v54 = a2 + v18 + v19;
  swift_bridgeObjectRetain();
  unint64_t v20 = 0;
  uint64_t v61 = v19;
  uint64_t v50 = a2 + v18 + 2 * v19;
  uint64_t v59 = a2;
  unint64_t v56 = v18;
  while (1)
  {
    if (!v62) {
      goto LABEL_4;
    }
    uint64_t v21 = v53 + v61 * v20;
    sub_251B25B74(v57, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for StaticHome);
    swift_bridgeObjectRetain();
    char v22 = _s13HomeDataModel06StaticA0V2eeoiySbAC_ACtFZ_0((uint64_t)v16, v21);
    sub_251B25BDC((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for StaticHome);
    if (v22) {
      goto LABEL_15;
    }
    if (v62 != 1) {
      break;
    }
LABEL_3:
    swift_bridgeObjectRelease();
LABEL_4:
    if (++v20 == v55)
    {
      swift_bridgeObjectRelease();
      return *(void *)(v17 + 16);
    }
  }
  sub_251B25B74(v54, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for StaticHome);
  char v23 = _s13HomeDataModel06StaticA0V2eeoiySbAC_ACtFZ_0((uint64_t)v16, v21);
  sub_251B25BDC((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for StaticHome);
  if (v23)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    uint64_t v29 = v59;
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v30 = v20 + 1;
    unint64_t v31 = v56;
    if (__OFADD__(v20, 1)) {
      goto LABEL_55;
    }
    unint64_t v32 = *(void *)(v17 + 16);
    if (v30 == v32) {
      return v20;
    }
    uint64_t v33 = v29 + v56 + 2 * v61;
    while (1)
    {
      if (v30 >= v32) {
        goto LABEL_47;
      }
      uint64_t v34 = v60;
      uint64_t v35 = v30 * v61;
      sub_251B25B74(v17 + v31 + v30 * v61, v60, (uint64_t (*)(void))type metadata accessor for StaticHome);
      sub_251B25B74(v57, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticHome);
      swift_bridgeObjectRetain();
      char v36 = _s13HomeDataModel06StaticA0V2eeoiySbAC_ACtFZ_0((uint64_t)v11, v34);
      sub_251B25BDC((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticHome);
      if (v36) {
        break;
      }
      if (v62 != 1)
      {
        sub_251B25B74(v54, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticHome);
        char v44 = _s13HomeDataModel06StaticA0V2eeoiySbAC_ACtFZ_0((uint64_t)v11, v60);
        sub_251B25BDC((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticHome);
        if (v44) {
          break;
        }
        if (v62 != 2)
        {
          uint64_t v45 = v33;
          uint64_t v46 = 2;
          do
          {
            uint64_t result = sub_251B25B74(v45, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticHome);
            uint64_t v47 = v46 + 1;
            if (__OFADD__(v46, 1)) {
              goto LABEL_46;
            }
            char v48 = _s13HomeDataModel06StaticA0V2eeoiySbAC_ACtFZ_0((uint64_t)v11, v60);
            sub_251B25BDC((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticHome);
            if (v48) {
              goto LABEL_20;
            }
            ++v46;
            v45 += v61;
          }
          while (v47 != v62);
        }
      }
      swift_bridgeObjectRelease();
      uint64_t result = sub_251B25BDC(v60, (uint64_t (*)(void))type metadata accessor for StaticHome);
      unint64_t v31 = v56;
      if (v20 != v30)
      {
        if ((v20 & 0x8000000000000000) != 0) {
          goto LABEL_50;
        }
        unint64_t v37 = *v58;
        unint64_t v38 = *(void *)(*v58 + 16);
        if (v20 >= v38) {
          goto LABEL_51;
        }
        unint64_t v39 = v37 + v56;
        uint64_t v40 = v20 * v61;
        uint64_t result = sub_251B25B74(v37 + v56 + v20 * v61, v52, (uint64_t (*)(void))type metadata accessor for StaticHome);
        if (v30 >= v38) {
          goto LABEL_52;
        }
        uint64_t v41 = v51;
        sub_251B25B74(v39 + v35, v51, (uint64_t (*)(void))type metadata accessor for StaticHome);
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        unint64_t *v58 = v37;
        if ((result & 1) == 0)
        {
          uint64_t result = sub_251A925B8(v37);
          unint64_t v37 = result;
          unint64_t *v58 = result;
        }
        if (v20 >= *(void *)(v37 + 16)) {
          goto LABEL_53;
        }
        unint64_t v42 = v56;
        uint64_t result = sub_251B392A8(v41, v37 + v56 + v40, (uint64_t (*)(void))type metadata accessor for StaticHome);
        if (v30 >= *(void *)(*v58 + 16)) {
          goto LABEL_54;
        }
        uint64_t result = sub_251B392A8(v52, *v58 + v42 + v35, (uint64_t (*)(void))type metadata accessor for StaticHome);
        unint64_t v31 = v42;
      }
      BOOL v43 = __OFADD__(v20++, 1);
      if (v43) {
        goto LABEL_49;
      }
LABEL_32:
      BOOL v43 = __OFADD__(v30++, 1);
      if (v43) {
        goto LABEL_48;
      }
      unint64_t v17 = *v58;
      unint64_t v32 = *(void *)(*v58 + 16);
      if (v30 == v32) {
        return v20;
      }
    }
LABEL_20:
    swift_bridgeObjectRelease();
    uint64_t result = sub_251B25BDC(v60, (uint64_t (*)(void))type metadata accessor for StaticHome);
    unint64_t v31 = v56;
    goto LABEL_32;
  }
  if (v62 == 2) {
    goto LABEL_3;
  }
  uint64_t v24 = v50;
  uint64_t v25 = 2;
  while (1)
  {
    uint64_t result = sub_251B25B74(v24, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for StaticHome);
    uint64_t v27 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    char v28 = _s13HomeDataModel06StaticA0V2eeoiySbAC_ACtFZ_0((uint64_t)v16, v21);
    sub_251B25BDC((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for StaticHome);
    if (v28) {
      goto LABEL_15;
    }
    ++v25;
    v24 += v61;
    if (v27 == v62) {
      goto LABEL_3;
    }
  }
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
  return result;
}

uint64_t sub_251B28198(void **a1, void (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v6 = *(void *)(type metadata accessor for StaticHome() - 8);
  uint64_t v7 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v7 = (void *)sub_251ECDC60(v7);
  }
  uint64_t v8 = v7[2];
  v10[0] = (char *)v7 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  v10[1] = v8;
  uint64_t result = sub_251B315D8(v10, a2, a3, (uint64_t (*)(void))type metadata accessor for StaticHome, (uint64_t (*)(void))type metadata accessor for StaticHome, (uint64_t (*)(void))type metadata accessor for StaticHome, (uint64_t (*)(void))type metadata accessor for StaticHome, (uint64_t (*)(void))type metadata accessor for StaticHome, (void (*)(unint64_t *, unint64_t *, unint64_t *))sub_251ECD6D8);
  *a1 = v7;
  return result;
}

id sub_251B282D0(unint64_t a1, unint64_t a2)
{
  uint64_t v3 = a1;
  if (!(a1 >> 62))
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_3;
    }
LABEL_41:
    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_47:
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_251F366C0();
  if (!v4) {
    goto LABEL_41;
  }
LABEL_3:
  uint64_t v5 = 0;
  unint64_t v6 = v3 & 0xC000000000000001;
  uint64_t v28 = v3 + 32;
  unint64_t v37 = a2 & 0xC000000000000001;
  uint64_t v7 = &off_26536F000;
  uint64_t v32 = v3;
  unint64_t v29 = v3 & 0xC000000000000001;
  uint64_t v30 = v4;
  while (1)
  {
    id result = v6 ? (id)MEMORY[0x2533AB3A0](v5, v3) : *(id *)(v28 + 8 * v5);
    id v9 = result;
    BOOL v10 = __OFADD__(v5, 1);
    uint64_t v11 = v5 + 1;
    if (v10) {
      break;
    }
    id v12 = [result (SEL)v7[267]];
    sub_251A1A568(0, &qword_26B21EB00);
    unint64_t v13 = sub_251F35AC0();

    unint64_t v14 = v13;
    uint64_t v34 = v9;
    uint64_t v31 = v11;
    if (!(v13 >> 62))
    {
      uint64_t v15 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v15) {
        goto LABEL_10;
      }
      goto LABEL_40;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_251F366C0();
    if (v15)
    {
LABEL_10:
      uint64_t v16 = 0;
      unint64_t v38 = v13 & 0xC000000000000001;
      unint64_t v33 = v13 + 32;
      unint64_t v36 = v13;
      uint64_t v35 = v15;
      while (1)
      {
        if (v38) {
          id v17 = (id)MEMORY[0x2533AB3A0](v16, v14);
        }
        else {
          id v17 = *(id *)(v33 + 8 * v16);
        }
        unint64_t v18 = v17;
        BOOL v10 = __OFADD__(v16++, 1);
        if (v10)
        {
LABEL_46:
          __break(1u);
          goto LABEL_47;
        }
        if (a2 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v19 = sub_251F366C0();
          if (v19) {
            goto LABEL_20;
          }
LABEL_11:

          swift_bridgeObjectRelease();
          if (v16 == v15) {
            break;
          }
        }
        else
        {
          uint64_t v19 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (!v19) {
            goto LABEL_11;
          }
LABEL_20:
          if (v37) {
            id v20 = (id)MEMORY[0x2533AB3A0](0, a2);
          }
          else {
            id v20 = *(id *)(a2 + 32);
          }
          uint64_t v21 = v20;
          char v22 = sub_251F36120();

          if (v22)
          {
LABEL_42:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return v34;
          }
          if (v19 != 1)
          {
            if (v37)
            {
              uint64_t v23 = 1;
              while (1)
              {
                MEMORY[0x2533AB3A0](v23, a2);
                uint64_t v24 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  break;
                }
                uint64_t v3 = sub_251F36120();
                swift_unknownObjectRelease();
                if (v3) {
                  goto LABEL_42;
                }
                ++v23;
                if (v24 == v19) {
                  goto LABEL_35;
                }
              }
              __break(1u);
            }
            else
            {
              uint64_t v3 = 5;
              while (1)
              {
                uint64_t v25 = v3 - 3;
                if (__OFADD__(v3 - 4, 1)) {
                  break;
                }
                id v26 = *(id *)(a2 + 8 * v3);
                char v27 = sub_251F36120();

                if (v27) {
                  goto LABEL_42;
                }
                ++v3;
                if (v25 == v19)
                {
LABEL_35:

                  swift_bridgeObjectRelease();
                  uint64_t v3 = v32;
                  uint64_t v4 = v30;
                  goto LABEL_36;
                }
              }
            }
            __break(1u);
            goto LABEL_46;
          }

          swift_bridgeObjectRelease();
LABEL_36:
          unint64_t v14 = v36;
          uint64_t v15 = v35;
          if (v16 == v35) {
            break;
          }
        }
      }
    }
LABEL_40:
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease_n();
    uint64_t v5 = v31;
    unint64_t v6 = v29;
    uint64_t v7 = &off_26536F000;
    if (v31 == v4) {
      goto LABEL_41;
    }
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for StateSnapshot.UpdateType(uint64_t a1)
{
  return sub_251A1C6FC(a1, qword_26B220270);
}

uint64_t sub_251B286EC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 >= 4u)
  {
    if (a3 != 4) {
      return result;
    }
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_251B28748@<X0>(uint64_t *a1@<X0>, void **a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_251DC114C(a1, a2, *(void *)(v3 + 16), *(void **)(v3 + 24), *(unsigned __int8 *)(v3 + 32), *(void *)(v3 + 40), a3);
}

uint64_t sub_251B2876C()
{
  return sub_251B2485C(&qword_269B9E2B0, (void (*)(uint64_t))type metadata accessor for StateSnapshot);
}

unint64_t sub_251B287B8()
{
  unint64_t result = qword_269B9E2B8;
  if (!qword_269B9E2B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E2B8);
  }
  return result;
}

unint64_t sub_251B28810()
{
  unint64_t result = qword_269B9E2C0;
  if (!qword_269B9E2C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E2C0);
  }
  return result;
}

unint64_t sub_251B28868()
{
  unint64_t result = qword_269B9E2C8;
  if (!qword_269B9E2C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E2C8);
  }
  return result;
}

uint64_t sub_251B288BC()
{
  return sub_251B2485C(&qword_269B9E2D0, (void (*)(uint64_t))type metadata accessor for StateSnapshot.UpdateType);
}

uint64_t *initializeBufferWithCopyOfBuffer for StateSnapshot(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    BOOL v43 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a3[5];
    unint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_251F34DA0();
    id v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
    swift_bridgeObjectRetain();
    uint64_t v70 = v8;
    v9(v6, v7, v8);
    BOOL v10 = (int *)type metadata accessor for StaticHome();
    uint64_t v11 = v10[5];
    id v12 = &v6[v11];
    unint64_t v13 = &v7[v11];
    uint64_t v14 = *((void *)v13 + 1);
    *(void *)id v12 = *(void *)v13;
    *((void *)v12 + 1) = v14;
    uint64_t v15 = v10[6];
    uint64_t v16 = &v6[v15];
    id v17 = &v7[v15];
    swift_bridgeObjectRetain();
    uint64_t v18 = v8;
    uint64_t v19 = v9;
    uint64_t v69 = v9;
    v9(v16, v17, v18);
    id v20 = (int *)type metadata accessor for StaticRoom(0);
    uint64_t v21 = v20[5];
    char v22 = &v16[v21];
    uint64_t v23 = &v17[v21];
    uint64_t v24 = *((void *)v23 + 1);
    *(void *)char v22 = *(void *)v23;
    *((void *)v22 + 1) = v24;
    v16[v20[6]] = v17[v20[6]];
    *(void *)&v16[v20[7]] = *(void *)&v17[v20[7]];
    uint64_t v25 = v20[8];
    id v26 = &v16[v25];
    char v27 = &v17[v25];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v19(v26, v27, v70);
    *(void *)&v16[v20[9]] = *(void *)&v17[v20[9]];
    *(void *)&v16[v20[10]] = *(void *)&v17[v20[10]];
    *(void *)&v16[v20[11]] = *(void *)&v17[v20[11]];
    *(void *)&v16[v20[12]] = *(void *)&v17[v20[12]];
    *(void *)&v16[v20[13]] = *(void *)&v17[v20[13]];
    *(void *)&v16[v20[14]] = *(void *)&v17[v20[14]];
    *(void *)&v16[v20[15]] = *(void *)&v17[v20[15]];
    *(void *)&v16[v20[16]] = *(void *)&v17[v20[16]];
    *(void *)&v16[v20[17]] = *(void *)&v17[v20[17]];
    *(void *)&v16[v20[18]] = *(void *)&v17[v20[18]];
    uint64_t v28 = v10[7];
    unint64_t v29 = &v6[v28];
    uint64_t v30 = &v7[v28];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v69(v29, v30, v70);
    uint64_t v31 = (int *)type metadata accessor for StaticUser();
    uint64_t v32 = v31[5];
    unint64_t v33 = &v29[v32];
    uint64_t v34 = &v30[v32];
    uint64_t v35 = *((void *)v34 + 1);
    *(void *)unint64_t v33 = *(void *)v34;
    *((void *)v33 + 1) = v35;
    uint64_t v36 = v31[6];
    unint64_t v37 = &v29[v36];
    unint64_t v38 = &v30[v36];
    swift_bridgeObjectRetain();
    v69(v37, v38, v70);
    v29[v31[7]] = v30[v31[7]];
    v29[v31[8]] = v30[v31[8]];
    v6[v10[8]] = v7[v10[8]];
    v6[v10[9]] = v7[v10[9]];
    v6[v10[10]] = v7[v10[10]];
    *(void *)&v6[v10[11]] = *(void *)&v7[v10[11]];
    *(void *)&v6[v10[12]] = *(void *)&v7[v10[12]];
    *(void *)&v6[v10[13]] = *(void *)&v7[v10[13]];
    *(void *)&v6[v10[14]] = *(void *)&v7[v10[14]];
    *(void *)&v6[v10[15]] = *(void *)&v7[v10[15]];
    *(void *)&v6[v10[16]] = *(void *)&v7[v10[16]];
    v6[v10[17]] = v7[v10[17]];
    *(void *)&v6[v10[18]] = *(void *)&v7[v10[18]];
    v6[v10[19]] = v7[v10[19]];
    uint64_t v39 = v10[20];
    __dst = &v6[v39];
    uint64_t v40 = &v7[v39];
    uint64_t v41 = (int *)type metadata accessor for StaticResident();
    uint64_t v63 = *((void *)v41 - 1);
    uint64_t v64 = *(unsigned int (**)(char *, uint64_t, int *))(v63 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v64(v40, 1, v41))
    {
      uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FDA0);
      memcpy(__dst, v40, *(void *)(*(void *)(v42 - 8) + 64));
    }
    else
    {
      v69(__dst, v40, v70);
      uint64_t v44 = v41[5];
      uint64_t v45 = &__dst[v44];
      uint64_t v46 = &v40[v44];
      uint64_t v47 = *((void *)v46 + 1);
      *(void *)uint64_t v45 = *(void *)v46;
      *((void *)v45 + 1) = v47;
      uint64_t v48 = v41[6];
      uint64_t v49 = &__dst[v48];
      uint64_t v50 = &v40[v48];
      uint64_t v51 = *((void *)v50 + 1);
      *(void *)uint64_t v49 = *(void *)v50;
      *((void *)v49 + 1) = v51;
      *(void *)&__dst[v41[7]] = *(void *)&v40[v41[7]];
      *(void *)&__dst[v41[8]] = *(void *)&v40[v41[8]];
      *(_WORD *)&__dst[v41[9]] = *(_WORD *)&v40[v41[9]];
      uint64_t v52 = v41[10];
      unint64_t v53 = &__dst[v52];
      uint64_t v54 = &v40[v52];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v69(v53, v54, v70);
      (*(void (**)(char *, void, uint64_t, int *))(v63 + 56))(__dst, 0, 1, v41);
    }
    uint64_t v55 = a3[7];
    BOOL v43 = a1;
    *(uint64_t *)((char *)a1 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    *(uint64_t *)((char *)a1 + v55) = *(uint64_t *)((char *)a2 + v55);
    uint64_t v56 = a3[9];
    *(uint64_t *)((char *)a1 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    *(uint64_t *)((char *)a1 + v56) = *(uint64_t *)((char *)a2 + v56);
    uint64_t v57 = a3[11];
    *(uint64_t *)((char *)a1 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
    *(uint64_t *)((char *)a1 + v57) = *(uint64_t *)((char *)a2 + v57);
    uint64_t v58 = a3[13];
    *(uint64_t *)((char *)a1 + a3[12]) = *(uint64_t *)((char *)a2 + a3[12]);
    *(uint64_t *)((char *)a1 + v58) = *(uint64_t *)((char *)a2 + v58);
    uint64_t v59 = a3[15];
    *(uint64_t *)((char *)a1 + a3[14]) = *(uint64_t *)((char *)a2 + a3[14]);
    *(uint64_t *)((char *)a1 + v59) = *(uint64_t *)((char *)a2 + v59);
    uint64_t v60 = a3[17];
    *(uint64_t *)((char *)a1 + a3[16]) = *(uint64_t *)((char *)a2 + a3[16]);
    *(uint64_t *)((char *)a1 + v60) = *(uint64_t *)((char *)a2 + v60);
    uint64_t v61 = a3[19];
    *(uint64_t *)((char *)a1 + a3[18]) = *(uint64_t *)((char *)a2 + a3[18]);
    *(uint64_t *)((char *)a1 + v61) = *(uint64_t *)((char *)a2 + v61);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v43;
}

uint64_t destroy for StateSnapshot(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_251F34DA0();
  unint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  uint64_t v7 = (int *)type metadata accessor for StaticHome();
  swift_bridgeObjectRelease();
  uint64_t v8 = v4 + v7[6];
  v6(v8, v5);
  uint64_t v9 = type metadata accessor for StaticRoom(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6(v8 + *(int *)(v9 + 32), v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = v4 + v7[7];
  v6(v10, v5);
  uint64_t v11 = type metadata accessor for StaticUser();
  swift_bridgeObjectRelease();
  v6(v10 + *(int *)(v11 + 24), v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v12 = v4 + v7[20];
  uint64_t v13 = type metadata accessor for StaticResident();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v12, 1, v13))
  {
    v6(v12, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6(v12 + *(int *)(v13 + 40), v5);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for StateSnapshot(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v3 = a3[5];
  uint64_t v4 = (char *)a1 + v3;
  uint64_t v5 = (char *)a2 + v3;
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16);
  swift_bridgeObjectRetain();
  uint64_t v66 = v6;
  v7(v4, v5, v6);
  uint64_t v8 = (int *)type metadata accessor for StaticHome();
  uint64_t v9 = v8[5];
  uint64_t v10 = &v4[v9];
  uint64_t v11 = &v5[v9];
  uint64_t v12 = *((void *)v11 + 1);
  *(void *)uint64_t v10 = *(void *)v11;
  *((void *)v10 + 1) = v12;
  uint64_t v13 = v8[6];
  uint64_t v14 = &v4[v13];
  uint64_t v15 = &v5[v13];
  swift_bridgeObjectRetain();
  uint64_t v16 = v7;
  char v65 = v7;
  v7(v14, v15, v6);
  id v17 = (int *)type metadata accessor for StaticRoom(0);
  uint64_t v18 = v17[5];
  uint64_t v19 = &v14[v18];
  id v20 = &v15[v18];
  uint64_t v21 = *((void *)v20 + 1);
  *(void *)uint64_t v19 = *(void *)v20;
  *((void *)v19 + 1) = v21;
  v14[v17[6]] = v15[v17[6]];
  *(void *)&v14[v17[7]] = *(void *)&v15[v17[7]];
  uint64_t v22 = v17[8];
  uint64_t v23 = &v14[v22];
  uint64_t v24 = &v15[v22];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v16(v23, v24, v6);
  *(void *)&v14[v17[9]] = *(void *)&v15[v17[9]];
  *(void *)&v14[v17[10]] = *(void *)&v15[v17[10]];
  *(void *)&v14[v17[11]] = *(void *)&v15[v17[11]];
  *(void *)&v14[v17[12]] = *(void *)&v15[v17[12]];
  *(void *)&v14[v17[13]] = *(void *)&v15[v17[13]];
  *(void *)&v14[v17[14]] = *(void *)&v15[v17[14]];
  *(void *)&v14[v17[15]] = *(void *)&v15[v17[15]];
  *(void *)&v14[v17[16]] = *(void *)&v15[v17[16]];
  *(void *)&v14[v17[17]] = *(void *)&v15[v17[17]];
  *(void *)&v14[v17[18]] = *(void *)&v15[v17[18]];
  uint64_t v25 = v8[7];
  id v26 = &v4[v25];
  char v27 = &v5[v25];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v65(v26, v27, v6);
  uint64_t v28 = (int *)type metadata accessor for StaticUser();
  uint64_t v29 = v28[5];
  uint64_t v30 = &v26[v29];
  uint64_t v31 = &v27[v29];
  uint64_t v32 = *((void *)v31 + 1);
  *(void *)uint64_t v30 = *(void *)v31;
  *((void *)v30 + 1) = v32;
  uint64_t v33 = v28[6];
  uint64_t v34 = &v26[v33];
  uint64_t v35 = &v27[v33];
  swift_bridgeObjectRetain();
  v65(v34, v35, v6);
  v26[v28[7]] = v27[v28[7]];
  v26[v28[8]] = v27[v28[8]];
  v4[v8[8]] = v5[v8[8]];
  v4[v8[9]] = v5[v8[9]];
  v4[v8[10]] = v5[v8[10]];
  *(void *)&v4[v8[11]] = *(void *)&v5[v8[11]];
  *(void *)&v4[v8[12]] = *(void *)&v5[v8[12]];
  *(void *)&v4[v8[13]] = *(void *)&v5[v8[13]];
  *(void *)&v4[v8[14]] = *(void *)&v5[v8[14]];
  *(void *)&v4[v8[15]] = *(void *)&v5[v8[15]];
  *(void *)&v4[v8[16]] = *(void *)&v5[v8[16]];
  v4[v8[17]] = v5[v8[17]];
  *(void *)&v4[v8[18]] = *(void *)&v5[v8[18]];
  v4[v8[19]] = v5[v8[19]];
  uint64_t v36 = v8[20];
  __dst = &v4[v36];
  unint64_t v37 = &v5[v36];
  unint64_t v38 = (int *)type metadata accessor for StaticResident();
  uint64_t v59 = *((void *)v38 - 1);
  uint64_t v60 = *(unsigned int (**)(char *, uint64_t, int *))(v59 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v60(v37, 1, v38))
  {
    uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FDA0);
    memcpy(__dst, v37, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    v65(__dst, v37, v6);
    uint64_t v40 = v38[5];
    uint64_t v41 = &__dst[v40];
    uint64_t v42 = &v37[v40];
    uint64_t v43 = *((void *)v42 + 1);
    *(void *)uint64_t v41 = *(void *)v42;
    *((void *)v41 + 1) = v43;
    uint64_t v44 = v38[6];
    uint64_t v45 = &__dst[v44];
    uint64_t v46 = &v37[v44];
    uint64_t v47 = *((void *)v46 + 1);
    *(void *)uint64_t v45 = *(void *)v46;
    *((void *)v45 + 1) = v47;
    *(void *)&__dst[v38[7]] = *(void *)&v37[v38[7]];
    *(void *)&__dst[v38[8]] = *(void *)&v37[v38[8]];
    *(_WORD *)&__dst[v38[9]] = *(_WORD *)&v37[v38[9]];
    uint64_t v48 = v38[10];
    uint64_t v49 = &__dst[v48];
    uint64_t v50 = &v37[v48];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v65(v49, v50, v66);
    (*(void (**)(char *, void, uint64_t, int *))(v59 + 56))(__dst, 0, 1, v38);
  }
  uint64_t v51 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v51) = *(void *)((char *)a2 + v51);
  uint64_t v52 = a3[9];
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  *(void *)((char *)a1 + v52) = *(void *)((char *)a2 + v52);
  uint64_t v53 = a3[11];
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  *(void *)((char *)a1 + v53) = *(void *)((char *)a2 + v53);
  uint64_t v54 = a3[13];
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  *(void *)((char *)a1 + v54) = *(void *)((char *)a2 + v54);
  uint64_t v55 = a3[15];
  *(void *)((char *)a1 + a3[14]) = *(void *)((char *)a2 + a3[14]);
  *(void *)((char *)a1 + v55) = *(void *)((char *)a2 + v55);
  uint64_t v56 = a3[17];
  *(void *)((char *)a1 + a3[16]) = *(void *)((char *)a2 + a3[16]);
  *(void *)((char *)a1 + v56) = *(void *)((char *)a2 + v56);
  uint64_t v57 = a3[19];
  *(void *)((char *)a1 + a3[18]) = *(void *)((char *)a2 + a3[18]);
  *(void *)((char *)a1 + v57) = *(void *)((char *)a2 + v57);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for StateSnapshot(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v58 = a3;
  uint64_t v6 = a3[5];
  uint64_t v57 = a1;
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_251F34DA0();
  uint64_t v55 = *(void *)(v9 - 8);
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(v55 + 24);
  v10(v7, v8, v9);
  uint64_t v11 = (int *)type metadata accessor for StaticHome();
  uint64_t v12 = v11[5];
  uint64_t v13 = &v7[v12];
  uint64_t v14 = &v8[v12];
  *(void *)uint64_t v13 = *(void *)v14;
  *((void *)v13 + 1) = *((void *)v14 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = v11[6];
  uint64_t v16 = &v7[v15];
  id v17 = &v8[v15];
  uint64_t v59 = v9;
  v10(&v7[v15], &v8[v15], v9);
  uint64_t v18 = (int *)type metadata accessor for StaticRoom(0);
  uint64_t v19 = v18[5];
  id v20 = &v16[v19];
  uint64_t v21 = &v17[v19];
  *(void *)id v20 = *(void *)v21;
  *((void *)v20 + 1) = *((void *)v21 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16[v18[6]] = v17[v18[6]];
  *(void *)&v16[v18[7]] = *(void *)&v17[v18[7]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = v9;
  uint64_t v23 = v10;
  v10(&v16[v18[8]], &v17[v18[8]], v22);
  *(void *)&v16[v18[9]] = *(void *)&v17[v18[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v16[v18[10]] = *(void *)&v17[v18[10]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v16[v18[11]] = *(void *)&v17[v18[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v16[v18[12]] = *(void *)&v17[v18[12]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v16[v18[13]] = *(void *)&v17[v18[13]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v16[v18[14]] = *(void *)&v17[v18[14]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v16[v18[15]] = *(void *)&v17[v18[15]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v16[v18[16]] = *(void *)&v17[v18[16]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v16[v18[17]] = *(void *)&v17[v18[17]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v16[v18[18]] = *(void *)&v17[v18[18]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v24 = v11[7];
  uint64_t v25 = &v7[v24];
  id v26 = &v8[v24];
  v23(&v7[v24], &v8[v24], v59);
  char v27 = (int *)type metadata accessor for StaticUser();
  uint64_t v28 = v27[5];
  uint64_t v29 = &v25[v28];
  uint64_t v30 = &v26[v28];
  *(void *)uint64_t v29 = *(void *)v30;
  *((void *)v29 + 1) = *((void *)v30 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v23(&v25[v27[6]], &v26[v27[6]], v59);
  v25[v27[7]] = v26[v27[7]];
  v25[v27[8]] = v26[v27[8]];
  v7[v11[8]] = v8[v11[8]];
  v7[v11[9]] = v8[v11[9]];
  v7[v11[10]] = v8[v11[10]];
  *(void *)&v7[v11[11]] = *(void *)&v8[v11[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v7[v11[12]] = *(void *)&v8[v11[12]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v7[v11[13]] = *(void *)&v8[v11[13]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v7[v11[14]] = *(void *)&v8[v11[14]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v7[v11[15]] = *(void *)&v8[v11[15]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v7[v11[16]] = *(void *)&v8[v11[16]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[v11[17]] = v8[v11[17]];
  *(void *)&v7[v11[18]] = *(void *)&v8[v11[18]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[v11[19]] = v8[v11[19]];
  uint64_t v31 = v11[20];
  uint64_t v32 = &v7[v31];
  uint64_t v33 = &v8[v31];
  uint64_t v34 = (int *)type metadata accessor for StaticResident();
  uint64_t v35 = *((void *)v34 - 1);
  uint64_t v36 = *(uint64_t (**)(char *, uint64_t, int *))(v35 + 48);
  LODWORD(v25) = v36(v32, 1, v34);
  int v37 = v36(v33, 1, v34);
  if (!v25)
  {
    if (!v37)
    {
      v23(v32, v33, v59);
      uint64_t v49 = v34[5];
      uint64_t v50 = &v32[v49];
      uint64_t v51 = &v33[v49];
      *(void *)uint64_t v50 = *(void *)v51;
      *((void *)v50 + 1) = *((void *)v51 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v52 = v34[6];
      uint64_t v53 = &v32[v52];
      uint64_t v54 = &v33[v52];
      *(void *)uint64_t v53 = *(void *)v54;
      *((void *)v53 + 1) = *((void *)v54 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)&v32[v34[7]] = *(void *)&v33[v34[7]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)&v32[v34[8]] = *(void *)&v33[v34[8]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_WORD *)&v32[v34[9]] = *(_WORD *)&v33[v34[9]];
      v23(&v32[v34[10]], &v33[v34[10]], v59);
      goto LABEL_7;
    }
    sub_251B25BDC((uint64_t)v32, (uint64_t (*)(void))type metadata accessor for StaticResident);
    goto LABEL_6;
  }
  if (v37)
  {
LABEL_6:
    uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FDA0);
    memcpy(v32, v33, *(void *)(*(void *)(v47 - 8) + 64));
    goto LABEL_7;
  }
  unint64_t v38 = *(void (**)(char *, char *, uint64_t))(v55 + 16);
  v38(v32, v33, v59);
  uint64_t v39 = v34[5];
  uint64_t v40 = &v32[v39];
  uint64_t v41 = &v33[v39];
  *(void *)uint64_t v40 = *(void *)v41;
  *((void *)v40 + 1) = *((void *)v41 + 1);
  uint64_t v42 = v34[6];
  uint64_t v43 = &v32[v42];
  uint64_t v44 = &v33[v42];
  *(void *)uint64_t v43 = *(void *)v44;
  *((void *)v43 + 1) = *((void *)v44 + 1);
  *(void *)&v32[v34[7]] = *(void *)&v33[v34[7]];
  *(void *)&v32[v34[8]] = *(void *)&v33[v34[8]];
  *(_WORD *)&v32[v34[9]] = *(_WORD *)&v33[v34[9]];
  uint64_t v45 = v34[10];
  uint64_t v56 = &v32[v45];
  uint64_t v46 = &v33[v45];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v38(v56, v46, v59);
  (*(void (**)(char *, void, uint64_t, int *))(v35 + 56))(v32, 0, 1, v34);
LABEL_7:
  *(void *)((char *)v57 + v58[6]) = *(void *)((char *)a2 + v58[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v57 + v58[7]) = *(void *)((char *)a2 + v58[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v57 + v58[8]) = *(void *)((char *)a2 + v58[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v57 + v58[9]) = *(void *)((char *)a2 + v58[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v57 + v58[10]) = *(void *)((char *)a2 + v58[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v57 + v58[11]) = *(void *)((char *)a2 + v58[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v57 + v58[12]) = *(void *)((char *)a2 + v58[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v57 + v58[13]) = *(void *)((char *)a2 + v58[13]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v57 + v58[14]) = *(void *)((char *)a2 + v58[14]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v57 + v58[15]) = *(void *)((char *)a2 + v58[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v57 + v58[16]) = *(void *)((char *)a2 + v58[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v57 + v58[17]) = *(void *)((char *)a2 + v58[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v57 + v58[18]) = *(void *)((char *)a2 + v58[18]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)v57 + v58[19]) = *(void *)((char *)a2 + v58[19]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v57;
}

void *initializeWithTake for StateSnapshot(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v4 = a3[5];
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_251F34DA0();
  uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32);
  v8(v5, v6, v7);
  uint64_t v9 = (int *)type metadata accessor for StaticHome();
  *(_OWORD *)&v5[v9[5]] = *(_OWORD *)&v6[v9[5]];
  uint64_t v10 = v9[6];
  uint64_t v11 = &v5[v10];
  uint64_t v12 = &v6[v10];
  v8(&v5[v10], &v6[v10], v7);
  uint64_t v13 = (int *)type metadata accessor for StaticRoom(0);
  *(_OWORD *)&v11[v13[5]] = *(_OWORD *)&v12[v13[5]];
  v11[v13[6]] = v12[v13[6]];
  *(void *)&v11[v13[7]] = *(void *)&v12[v13[7]];
  v8(&v11[v13[8]], &v12[v13[8]], v7);
  *(void *)&v11[v13[9]] = *(void *)&v12[v13[9]];
  *(void *)&v11[v13[10]] = *(void *)&v12[v13[10]];
  *(void *)&v11[v13[11]] = *(void *)&v12[v13[11]];
  *(void *)&v11[v13[12]] = *(void *)&v12[v13[12]];
  *(void *)&v11[v13[13]] = *(void *)&v12[v13[13]];
  *(void *)&v11[v13[14]] = *(void *)&v12[v13[14]];
  *(void *)&v11[v13[15]] = *(void *)&v12[v13[15]];
  *(void *)&v11[v13[16]] = *(void *)&v12[v13[16]];
  *(void *)&v11[v13[17]] = *(void *)&v12[v13[17]];
  *(void *)&v11[v13[18]] = *(void *)&v12[v13[18]];
  uint64_t v14 = v9[7];
  uint64_t v15 = &v5[v14];
  uint64_t v16 = &v6[v14];
  v8(&v5[v14], &v6[v14], v7);
  id v17 = (int *)type metadata accessor for StaticUser();
  *(_OWORD *)&v15[v17[5]] = *(_OWORD *)&v16[v17[5]];
  v8(&v15[v17[6]], &v16[v17[6]], v7);
  v15[v17[7]] = v16[v17[7]];
  v15[v17[8]] = v16[v17[8]];
  v5[v9[8]] = v6[v9[8]];
  v5[v9[9]] = v6[v9[9]];
  v5[v9[10]] = v6[v9[10]];
  *(void *)&v5[v9[11]] = *(void *)&v6[v9[11]];
  *(void *)&v5[v9[12]] = *(void *)&v6[v9[12]];
  *(void *)&v5[v9[13]] = *(void *)&v6[v9[13]];
  *(void *)&v5[v9[14]] = *(void *)&v6[v9[14]];
  *(void *)&v5[v9[15]] = *(void *)&v6[v9[15]];
  *(void *)&v5[v9[16]] = *(void *)&v6[v9[16]];
  v5[v9[17]] = v6[v9[17]];
  *(void *)&v5[v9[18]] = *(void *)&v6[v9[18]];
  v5[v9[19]] = v6[v9[19]];
  uint64_t v18 = v9[20];
  uint64_t v19 = &v5[v18];
  id v20 = &v6[v18];
  uint64_t v21 = (int *)type metadata accessor for StaticResident();
  uint64_t v22 = *((void *)v21 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v22 + 48))(v20, 1, v21))
  {
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FDA0);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    v8(v19, v20, v7);
    *(_OWORD *)&v19[v21[5]] = *(_OWORD *)&v20[v21[5]];
    *(_OWORD *)&v19[v21[6]] = *(_OWORD *)&v20[v21[6]];
    *(void *)&v19[v21[7]] = *(void *)&v20[v21[7]];
    *(void *)&v19[v21[8]] = *(void *)&v20[v21[8]];
    *(_WORD *)&v19[v21[9]] = *(_WORD *)&v20[v21[9]];
    v8(&v19[v21[10]], &v20[v21[10]], v7);
    (*(void (**)(char *, void, uint64_t, int *))(v22 + 56))(v19, 0, 1, v21);
  }
  uint64_t v24 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v24) = *(void *)((char *)a2 + v24);
  uint64_t v25 = a3[9];
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  *(void *)((char *)a1 + v25) = *(void *)((char *)a2 + v25);
  uint64_t v26 = a3[11];
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  *(void *)((char *)a1 + v26) = *(void *)((char *)a2 + v26);
  uint64_t v27 = a3[13];
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
  *(void *)((char *)a1 + v27) = *(void *)((char *)a2 + v27);
  uint64_t v28 = a3[15];
  *(void *)((char *)a1 + a3[14]) = *(void *)((char *)a2 + a3[14]);
  *(void *)((char *)a1 + v28) = *(void *)((char *)a2 + v28);
  uint64_t v29 = a3[17];
  *(void *)((char *)a1 + a3[16]) = *(void *)((char *)a2 + a3[16]);
  *(void *)((char *)a1 + v29) = *(void *)((char *)a2 + v29);
  uint64_t v30 = a3[19];
  *(void *)((char *)a1 + a3[18]) = *(void *)((char *)a2 + a3[18]);
  *(void *)((char *)a1 + v30) = *(void *)((char *)a2 + v30);
  return a1;
}

void *assignWithTake for StateSnapshot(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v57 = a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_251F34DA0();
  uint64_t v55 = *(void *)(v9 - 8);
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(v55 + 40);
  v10(v7, v8, v9);
  uint64_t v11 = (int *)type metadata accessor for StaticHome();
  uint64_t v12 = v11[5];
  uint64_t v13 = &v7[v12];
  uint64_t v14 = &v8[v12];
  uint64_t v16 = *(void *)v14;
  uint64_t v15 = *((void *)v14 + 1);
  *(void *)uint64_t v13 = v16;
  *((void *)v13 + 1) = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = v11[6];
  uint64_t v18 = &v7[v17];
  uint64_t v19 = &v8[v17];
  v10(&v7[v17], &v8[v17], v9);
  id v20 = (int *)type metadata accessor for StaticRoom(0);
  uint64_t v21 = v20[5];
  uint64_t v22 = &v18[v21];
  uint64_t v23 = &v19[v21];
  uint64_t v25 = *(void *)v23;
  uint64_t v24 = *((void *)v23 + 1);
  *(void *)uint64_t v22 = v25;
  *((void *)v22 + 1) = v24;
  swift_bridgeObjectRelease();
  v18[v20[6]] = v19[v20[6]];
  *(void *)&v18[v20[7]] = *(void *)&v19[v20[7]];
  swift_bridgeObjectRelease();
  v10(&v18[v20[8]], &v19[v20[8]], v9);
  *(void *)&v18[v20[9]] = *(void *)&v19[v20[9]];
  swift_bridgeObjectRelease();
  *(void *)&v18[v20[10]] = *(void *)&v19[v20[10]];
  swift_bridgeObjectRelease();
  *(void *)&v18[v20[11]] = *(void *)&v19[v20[11]];
  swift_bridgeObjectRelease();
  *(void *)&v18[v20[12]] = *(void *)&v19[v20[12]];
  swift_bridgeObjectRelease();
  *(void *)&v18[v20[13]] = *(void *)&v19[v20[13]];
  swift_bridgeObjectRelease();
  *(void *)&v18[v20[14]] = *(void *)&v19[v20[14]];
  swift_bridgeObjectRelease();
  *(void *)&v18[v20[15]] = *(void *)&v19[v20[15]];
  swift_bridgeObjectRelease();
  *(void *)&v18[v20[16]] = *(void *)&v19[v20[16]];
  swift_bridgeObjectRelease();
  *(void *)&v18[v20[17]] = *(void *)&v19[v20[17]];
  swift_bridgeObjectRelease();
  *(void *)&v18[v20[18]] = *(void *)&v19[v20[18]];
  swift_bridgeObjectRelease();
  uint64_t v26 = v11[7];
  uint64_t v27 = &v7[v26];
  uint64_t v28 = &v8[v26];
  v10(&v7[v26], &v8[v26], v9);
  uint64_t v29 = (int *)type metadata accessor for StaticUser();
  uint64_t v30 = v29[5];
  uint64_t v31 = &v27[v30];
  uint64_t v32 = &v28[v30];
  uint64_t v34 = *(void *)v32;
  uint64_t v33 = *((void *)v32 + 1);
  *(void *)uint64_t v31 = v34;
  *((void *)v31 + 1) = v33;
  swift_bridgeObjectRelease();
  uint64_t v56 = v9;
  v10(&v27[v29[6]], &v28[v29[6]], v9);
  v27[v29[7]] = v28[v29[7]];
  v27[v29[8]] = v28[v29[8]];
  v7[v11[8]] = v8[v11[8]];
  v7[v11[9]] = v8[v11[9]];
  v7[v11[10]] = v8[v11[10]];
  *(void *)&v7[v11[11]] = *(void *)&v8[v11[11]];
  swift_bridgeObjectRelease();
  *(void *)&v7[v11[12]] = *(void *)&v8[v11[12]];
  swift_bridgeObjectRelease();
  *(void *)&v7[v11[13]] = *(void *)&v8[v11[13]];
  swift_bridgeObjectRelease();
  *(void *)&v7[v11[14]] = *(void *)&v8[v11[14]];
  swift_bridgeObjectRelease();
  *(void *)&v7[v11[15]] = *(void *)&v8[v11[15]];
  swift_bridgeObjectRelease();
  *(void *)&v7[v11[16]] = *(void *)&v8[v11[16]];
  swift_bridgeObjectRelease();
  v7[v11[17]] = v8[v11[17]];
  *(void *)&v7[v11[18]] = *(void *)&v8[v11[18]];
  swift_bridgeObjectRelease();
  v7[v11[19]] = v8[v11[19]];
  uint64_t v35 = v11[20];
  uint64_t v36 = &v7[v35];
  int v37 = &v8[v35];
  unint64_t v38 = (int *)type metadata accessor for StaticResident();
  uint64_t v39 = *((void *)v38 - 1);
  uint64_t v40 = *(uint64_t (**)(char *, uint64_t, int *))(v39 + 48);
  LODWORD(v27) = v40(v36, 1, v38);
  int v41 = v40(v37, 1, v38);
  if (!v27)
  {
    if (!v41)
    {
      v10(v36, v37, v56);
      uint64_t v45 = v38[5];
      uint64_t v46 = &v36[v45];
      uint64_t v47 = &v37[v45];
      uint64_t v49 = *(void *)v47;
      uint64_t v48 = *((void *)v47 + 1);
      *(void *)uint64_t v46 = v49;
      *((void *)v46 + 1) = v48;
      swift_bridgeObjectRelease();
      uint64_t v50 = v38[6];
      uint64_t v51 = &v36[v50];
      uint64_t v52 = &v37[v50];
      uint64_t v54 = *(void *)v52;
      uint64_t v53 = *((void *)v52 + 1);
      *(void *)uint64_t v51 = v54;
      *((void *)v51 + 1) = v53;
      swift_bridgeObjectRelease();
      *(void *)&v36[v38[7]] = *(void *)&v37[v38[7]];
      swift_bridgeObjectRelease();
      *(void *)&v36[v38[8]] = *(void *)&v37[v38[8]];
      swift_bridgeObjectRelease();
      *(_WORD *)&v36[v38[9]] = *(_WORD *)&v37[v38[9]];
      v10(&v36[v38[10]], &v37[v38[10]], v56);
      goto LABEL_7;
    }
    sub_251B25BDC((uint64_t)v36, (uint64_t (*)(void))type metadata accessor for StaticResident);
    goto LABEL_6;
  }
  if (v41)
  {
LABEL_6:
    uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FDA0);
    memcpy(v36, v37, *(void *)(*(void *)(v43 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v42 = *(void (**)(char *, char *, uint64_t))(v55 + 32);
  v42(v36, v37, v56);
  *(_OWORD *)&v36[v38[5]] = *(_OWORD *)&v37[v38[5]];
  *(_OWORD *)&v36[v38[6]] = *(_OWORD *)&v37[v38[6]];
  *(void *)&v36[v38[7]] = *(void *)&v37[v38[7]];
  *(void *)&v36[v38[8]] = *(void *)&v37[v38[8]];
  *(_WORD *)&v36[v38[9]] = *(_WORD *)&v37[v38[9]];
  v42(&v36[v38[10]], &v37[v38[10]], v56);
  (*(void (**)(char *, void, uint64_t, int *))(v39 + 56))(v36, 0, 1, v38);
LABEL_7:
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)v57 + a3[6]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)v57 + a3[7]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)v57 + a3[8]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)v57 + a3[9]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)v57 + a3[10]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[11]) = *(void *)((char *)v57 + a3[11]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[12]) = *(void *)((char *)v57 + a3[12]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[13]) = *(void *)((char *)v57 + a3[13]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[14]) = *(void *)((char *)v57 + a3[14]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[15]) = *(void *)((char *)v57 + a3[15]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[16]) = *(void *)((char *)v57 + a3[16]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[17]) = *(void *)((char *)v57 + a3[17]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[18]) = *(void *)((char *)v57 + a3[18]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[19]) = *(void *)((char *)v57 + a3[19]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StateSnapshot(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251B2ACF4);
}

uint64_t sub_251B2ACF4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for StaticHome();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for StateSnapshot(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251B2ADB8);
}

void *sub_251B2ADB8(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for StaticHome();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_251B2AE60()
{
  uint64_t result = type metadata accessor for StaticHome();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for StateSnapshot.StateSnapshotFileErrors(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x251B2AFB4);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for StateSnapshot.StateSnapshotFileErrors()
{
  return &type metadata for StateSnapshot.StateSnapshotFileErrors;
}

uint64_t initializeBufferWithCopyOfBuffer for StateSnapshot.CharacteristicUpdateType(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_251B2B188(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_251B2B004);
}

uint64_t sub_251B2B004(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 >= 4u)
  {
    if (a3 != 4) {
      return result;
    }
    swift_bridgeObjectRetain();
  }
  return swift_bridgeObjectRetain();
}

uint64_t destroy for StateSnapshot.CharacteristicUpdateType(uint64_t a1)
{
  return sub_251B286EC(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t *assignWithCopy for StateSnapshot.CharacteristicUpdateType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_251B2B204(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_251B2B004, (void (*)(uint64_t, uint64_t, uint64_t))sub_251B286EC);
}

uint64_t *assignWithTake for StateSnapshot.CharacteristicUpdateType(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_251B2B288(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_251B286EC);
}

uint64_t getEnumTagSinglePayload for StateSnapshot.CharacteristicUpdateType(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 4) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for StateSnapshot.CharacteristicUpdateType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 252;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_251B2B140(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_251B2B148(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for StateSnapshot.CharacteristicUpdateType()
{
  return &type metadata for StateSnapshot.CharacteristicUpdateType;
}

uint64_t initializeBufferWithCopyOfBuffer for StateSnapshot.CharacteristicUpdateType.ValueType(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_251B2B188(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_251A1A870);
}

uint64_t destroy for StateSnapshot.CharacteristicUpdateType.ValueType(uint64_t a1)
{
  return sub_251A1AD70(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_251B2B188(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t))
{
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = *((unsigned __int8 *)a2 + 16);
  a4(*a2, v6, v7);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = v7;
  return a1;
}

uint64_t *assignWithCopy for StateSnapshot.CharacteristicUpdateType.ValueType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_251B2B204(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_251A1A870, (void (*)(uint64_t, uint64_t, uint64_t))sub_251A1AD70);
}

uint64_t *sub_251B2B204(uint64_t *a1, uint64_t *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  uint64_t v9 = *((unsigned __int8 *)a2 + 16);
  a4(*a2, v8, v9);
  uint64_t v10 = *a1;
  uint64_t v11 = a1[1];
  *a1 = v7;
  a1[1] = v8;
  uint64_t v12 = *((unsigned __int8 *)a1 + 16);
  *((unsigned char *)a1 + 16) = v9;
  a5(v10, v11, v12);
  return a1;
}

uint64_t *assignWithTake for StateSnapshot.CharacteristicUpdateType.ValueType(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_251B2B288(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_251A1AD70);
}

uint64_t *sub_251B2B288(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  char v5 = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v8 = *((unsigned __int8 *)a1 + 16);
  *((unsigned char *)a1 + 16) = v5;
  a4(v6, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for StateSnapshot.CharacteristicUpdateType.ValueType(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFB && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 251);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 5) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for StateSnapshot.CharacteristicUpdateType.ValueType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 251;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_251B2B360(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 4u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 5);
  }
}

uint64_t sub_251B2B378(uint64_t result, unsigned int a2)
{
  if (a2 >= 5)
  {
    *(void *)uint64_t result = a2 - 5;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 5;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for StateSnapshot.CharacteristicUpdateType.ValueType()
{
  return &type metadata for StateSnapshot.CharacteristicUpdateType.ValueType;
}

uint64_t *initializeBufferWithCopyOfBuffer for StateSnapshot.UpdateType(uint64_t *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *(char **)a2;
    *a1 = *(void *)a2;
    a1 = (uint64_t *)&v9[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = *(void **)a2;
        *a1 = *(void *)a2;
        id v8 = v7;
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        uint64_t v11 = *(void *)a2;
        uint64_t v12 = *((void *)a2 + 1);
        unsigned __int8 v13 = a2[16];
        sub_251B2B004(v11, v12, v13);
        *a1 = v11;
        a1[1] = v12;
        *((unsigned char *)a1 + 16) = v13;
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        uint64_t v14 = *((void *)a2 + 1);
        *a1 = *(void *)a2;
        a1[1] = v14;
        a1[2] = *((void *)a2 + 2);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        *a1 = *(void *)a2;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        uint64_t v15 = sub_251F34DA0();
        (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(a1, a2, v15);
        uint64_t v16 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_269B9E2A0);
        uint64_t v17 = v16[12];
        uint64_t v18 = *(void **)&a2[v17];
        *(uint64_t *)((char *)a1 + v17) = (uint64_t)v18;
        uint64_t v19 = v16[16];
        id v20 = *(void **)&a2[v19];
        *(uint64_t *)((char *)a1 + v19) = (uint64_t)v20;
        uint64_t v21 = v16[20];
        uint64_t v22 = *(void **)&a2[v21];
        *(uint64_t *)((char *)a1 + v21) = (uint64_t)v22;
        id v23 = v18;
        id v24 = v20;
        id v25 = v22;
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        uint64_t v26 = sub_251F34DA0();
        (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(a1, a2, v26);
        uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA1B60);
        *((unsigned char *)a1 + *(int *)(v27 + 48)) = a2[*(int *)(v27 + 48)];
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        uint64_t v28 = sub_251F34DA0();
        (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(a1, a2, v28);
        uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E298);
        *(uint64_t *)((char *)a1 + *(int *)(v29 + 48)) = *(void *)&a2[*(int *)(v29 + 48)];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 7u:
        uint64_t v30 = sub_251F34DA0();
        (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(a1, a2, v30);
        uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E290);
        *(uint64_t *)((char *)a1 + *(int *)(v31 + 48)) = *(void *)&a2[*(int *)(v31 + 48)];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

void destroy for StateSnapshot.UpdateType(uint64_t a1)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      unint64_t v2 = *(void **)a1;
      goto LABEL_8;
    case 1u:
      uint64_t v3 = *(void *)a1;
      uint64_t v4 = *(void *)(a1 + 8);
      unsigned __int8 v5 = *(unsigned char *)(a1 + 16);
      sub_251B286EC(v3, v4, v5);
      return;
    case 2u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_17;
    case 3u:
      goto LABEL_17;
    case 4u:
      uint64_t v6 = sub_251F34DA0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
      uint64_t v7 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_269B9E2A0);

      unint64_t v2 = *(void **)(a1 + v7[20]);
LABEL_8:

      return;
    case 5u:
      uint64_t v8 = sub_251F34DA0();
      uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
      v9(a1, v8);
      return;
    case 6u:
      uint64_t v10 = sub_251F34DA0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(a1, v10);
      uint64_t v11 = &qword_269B9E298;
      goto LABEL_16;
    case 7u:
      uint64_t v12 = sub_251F34DA0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(a1, v12);
      uint64_t v11 = &qword_269B9E290;
LABEL_16:
      __swift_instantiateConcreteTypeFromMangledName(v11);
LABEL_17:
      swift_bridgeObjectRelease();
      break;
    default:
      return;
  }
}

uint64_t *initializeWithCopy for StateSnapshot.UpdateType(uint64_t *a1, char *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = *(void **)a2;
      *a1 = *(void *)a2;
      id v7 = v6;
      goto LABEL_11;
    case 1u:
      uint64_t v8 = *(void *)a2;
      uint64_t v9 = *((void *)a2 + 1);
      unsigned __int8 v10 = a2[16];
      sub_251B2B004(v8, v9, v10);
      *a1 = v8;
      a1[1] = v9;
      *((unsigned char *)a1 + 16) = v10;
      goto LABEL_11;
    case 2u:
      uint64_t v11 = *((void *)a2 + 1);
      *a1 = *(void *)a2;
      a1[1] = v11;
      a1[2] = *((void *)a2 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_11;
    case 3u:
      *a1 = *(void *)a2;
      swift_bridgeObjectRetain();
      goto LABEL_11;
    case 4u:
      uint64_t v12 = sub_251F34DA0();
      (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
      unsigned __int8 v13 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_269B9E2A0);
      uint64_t v14 = v13[12];
      uint64_t v15 = *(void **)&a2[v14];
      *(uint64_t *)((char *)a1 + v14) = (uint64_t)v15;
      uint64_t v16 = v13[16];
      uint64_t v17 = *(void **)&a2[v16];
      *(uint64_t *)((char *)a1 + v16) = (uint64_t)v17;
      uint64_t v18 = v13[20];
      uint64_t v19 = *(void **)&a2[v18];
      *(uint64_t *)((char *)a1 + v18) = (uint64_t)v19;
      id v20 = v15;
      id v21 = v17;
      id v22 = v19;
      goto LABEL_11;
    case 5u:
      uint64_t v23 = sub_251F34DA0();
      (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(a1, a2, v23);
      uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA1B60);
      *((unsigned char *)a1 + *(int *)(v24 + 48)) = a2[*(int *)(v24 + 48)];
      goto LABEL_11;
    case 6u:
      uint64_t v25 = sub_251F34DA0();
      (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(a1, a2, v25);
      uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E298);
      *(uint64_t *)((char *)a1 + *(int *)(v26 + 48)) = *(void *)&a2[*(int *)(v26 + 48)];
      swift_bridgeObjectRetain();
      goto LABEL_11;
    case 7u:
      uint64_t v27 = sub_251F34DA0();
      (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(a1, a2, v27);
      uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E290);
      *(uint64_t *)((char *)a1 + *(int *)(v28 + 48)) = *(void *)&a2[*(int *)(v28 + 48)];
      swift_bridgeObjectRetain();
LABEL_11:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t *assignWithCopy for StateSnapshot.UpdateType(uint64_t *a1, char *a2, uint64_t a3)
{
  if (a1 != (uint64_t *)a2)
  {
    sub_251B25BDC((uint64_t)a1, type metadata accessor for StateSnapshot.UpdateType);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = *(void **)a2;
        *a1 = *(void *)a2;
        id v7 = v6;
        goto LABEL_12;
      case 1u:
        uint64_t v8 = *(void *)a2;
        uint64_t v9 = *((void *)a2 + 1);
        unsigned __int8 v10 = a2[16];
        sub_251B2B004(v8, v9, v10);
        *a1 = v8;
        a1[1] = v9;
        *((unsigned char *)a1 + 16) = v10;
        goto LABEL_12;
      case 2u:
        *a1 = *(void *)a2;
        a1[1] = *((void *)a2 + 1);
        a1[2] = *((void *)a2 + 2);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_12;
      case 3u:
        *a1 = *(void *)a2;
        swift_bridgeObjectRetain();
        goto LABEL_12;
      case 4u:
        uint64_t v11 = sub_251F34DA0();
        (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
        uint64_t v12 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_269B9E2A0);
        uint64_t v13 = v12[12];
        uint64_t v14 = *(void **)&a2[v13];
        *(uint64_t *)((char *)a1 + v13) = (uint64_t)v14;
        uint64_t v15 = v12[16];
        uint64_t v16 = *(void **)&a2[v15];
        *(uint64_t *)((char *)a1 + v15) = (uint64_t)v16;
        uint64_t v17 = v12[20];
        uint64_t v18 = *(void **)&a2[v17];
        *(uint64_t *)((char *)a1 + v17) = (uint64_t)v18;
        id v19 = v14;
        id v20 = v16;
        id v21 = v18;
        goto LABEL_12;
      case 5u:
        uint64_t v22 = sub_251F34DA0();
        (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(a1, a2, v22);
        uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA1B60);
        *((unsigned char *)a1 + *(int *)(v23 + 48)) = a2[*(int *)(v23 + 48)];
        goto LABEL_12;
      case 6u:
        uint64_t v24 = sub_251F34DA0();
        (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(a1, a2, v24);
        uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E298);
        *(uint64_t *)((char *)a1 + *(int *)(v25 + 48)) = *(void *)&a2[*(int *)(v25 + 48)];
        swift_bridgeObjectRetain();
        goto LABEL_12;
      case 7u:
        uint64_t v26 = sub_251F34DA0();
        (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(a1, a2, v26);
        uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E290);
        *(uint64_t *)((char *)a1 + *(int *)(v27 + 48)) = *(void *)&a2[*(int *)(v27 + 48)];
        swift_bridgeObjectRetain();
LABEL_12:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

unsigned char *initializeWithTake for StateSnapshot.UpdateType(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 4u:
      uint64_t v6 = sub_251F34DA0();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      id v7 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_269B9E2A0);
      *(void *)&a1[v7[12]] = *(void *)&a2[v7[12]];
      *(void *)&a1[v7[16]] = *(void *)&a2[v7[16]];
      *(void *)&a1[v7[20]] = *(void *)&a2[v7[20]];
      goto LABEL_7;
    case 5u:
      uint64_t v8 = sub_251F34DA0();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA1B60);
      a1[*(int *)(v9 + 48)] = a2[*(int *)(v9 + 48)];
      goto LABEL_7;
    case 6u:
      uint64_t v10 = sub_251F34DA0();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
      uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E298);
      *(void *)&a1[*(int *)(v11 + 48)] = *(void *)&a2[*(int *)(v11 + 48)];
      goto LABEL_7;
    case 7u:
      uint64_t v12 = sub_251F34DA0();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v12 - 8) + 32))(a1, a2, v12);
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E290);
      *(void *)&a1[*(int *)(v13 + 48)] = *(void *)&a2[*(int *)(v13 + 48)];
LABEL_7:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

unsigned char *assignWithTake for StateSnapshot.UpdateType(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_251B25BDC((uint64_t)a1, type metadata accessor for StateSnapshot.UpdateType);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 4u:
        uint64_t v6 = sub_251F34DA0();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
        id v7 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_269B9E2A0);
        *(void *)&a1[v7[12]] = *(void *)&a2[v7[12]];
        *(void *)&a1[v7[16]] = *(void *)&a2[v7[16]];
        *(void *)&a1[v7[20]] = *(void *)&a2[v7[20]];
        goto LABEL_8;
      case 5u:
        uint64_t v8 = sub_251F34DA0();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
        uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA1B60);
        a1[*(int *)(v9 + 48)] = a2[*(int *)(v9 + 48)];
        goto LABEL_8;
      case 6u:
        uint64_t v10 = sub_251F34DA0();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
        uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E298);
        *(void *)&a1[*(int *)(v11 + 48)] = *(void *)&a2[*(int *)(v11 + 48)];
        goto LABEL_8;
      case 7u:
        uint64_t v12 = sub_251F34DA0();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v12 - 8) + 32))(a1, a2, v12);
        uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E290);
        *(void *)&a1[*(int *)(v13 + 48)] = *(void *)&a2[*(int *)(v13 + 48)];
LABEL_8:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_251B2C44C()
{
  uint64_t v10 = "\b";
  uint64_t v11 = &unk_251F3DF28;
  uint64_t v12 = &unk_251F3DF40;
  uint64_t v13 = MEMORY[0x263F8CF50] + 64;
  uint64_t result = sub_251F34DA0();
  if (v1 <= 0x3F)
  {
    uint64_t v5 = *(void *)(result - 8) + 64;
    uint64_t v6 = "\b";
    id v7 = "\b";
    uint64_t v8 = "\b";
    swift_getTupleTypeLayout();
    uint64_t v14 = &v9;
    swift_getTupleTypeLayout2();
    uint64_t v15 = &v4;
    swift_getTupleTypeLayout2();
    uint64_t v16 = &v3;
    swift_getTupleTypeLayout2();
    uint64_t v17 = &v2;
    uint64_t v18 = &unk_251F3DF70;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for StateSnapshot.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF1) {
    goto LABEL_17;
  }
  if (a2 + 15 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 15) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 15;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 15;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 15;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x10;
  int v8 = v6 - 16;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for StateSnapshot.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 15 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 15) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF1) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF0)
  {
    unsigned int v6 = ((a2 - 241) >> 8) + 1;
    *uint64_t result = a2 + 15;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251B2C6E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 15;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StateSnapshot.CodingKeys()
{
  return &type metadata for StateSnapshot.CodingKeys;
}

unint64_t sub_251B2C71C()
{
  unint64_t result = qword_269B9E2D8;
  if (!qword_269B9E2D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E2D8);
  }
  return result;
}

unint64_t sub_251B2C774()
{
  unint64_t result = qword_269B9E2E0;
  if (!qword_269B9E2E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E2E0);
  }
  return result;
}

unint64_t sub_251B2C7CC()
{
  unint64_t result = qword_269B9E2E8;
  if (!qword_269B9E2E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E2E8);
  }
  return result;
}

uint64_t sub_251B2C820(uint64_t a1, uint64_t a2, void (*a3)(char *), uint64_t a4)
{
  uint64_t v48 = a3;
  uint64_t v49 = a4;
  uint64_t v7 = type metadata accessor for StaticActionSet() - 8;
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v43 = (uint64_t)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v41 - v11;
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v64 = MEMORY[0x263F8EE78];
  uint64_t v47 = *(void *)(a1 + 16);
  if (v47)
  {
    uint64_t v41 = v4;
    uint64_t v14 = 0;
    uint64_t v15 = *(unsigned __int8 *)(v10 + 80);
    uint64_t v50 = *(void *)(v10 + 72);
    uint64_t v42 = (v15 + 32) & ~v15;
    uint64_t v44 = a1 + v42;
    uint64_t v45 = (char *)&v41 - v11;
    uint64_t v46 = a2;
    do
    {
      uint64_t v52 = v14;
      sub_251B25B74(v44 + v50 * v14, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
      uint64_t v17 = sub_251F34DA0();
      uint64_t v54 = &v41;
      uint64_t v18 = *(void *)(v17 - 8);
      MEMORY[0x270FA5388](v17);
      uint64_t v62 = v19;
      uint64_t v63 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
      v48(v12);
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
      uint64_t v53 = &v41;
      MEMORY[0x270FA5388](v20 - 8);
      uint64_t v22 = (char *)&v41 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v23 = *(void *)(a2 + 16);
      uint64_t v51 = v18;
      if (v23)
      {
        uint64_t v24 = v18 + 16;
        uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
        uint64_t v26 = a2 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
        uint64_t v27 = *(void *)(v18 + 72);
        uint64_t v28 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
        uint64_t v59 = (uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 32);
        uint64_t v60 = v25;
        uint64_t v56 = v27;
        uint64_t v57 = (void (**)(char *, char *, uint64_t))(v24 + 16);
        uint64_t v61 = v24;
        uint64_t v58 = (void (**)(char *, uint64_t))(v24 - 8);
        swift_bridgeObjectRetain();
        while (1)
        {
          v60(v22, v26, v17);
          uint64_t v29 = *v28;
          (*v28)(v22, 0, 1, v17);
          uint64_t v30 = (*v59)(v22, 1, v17);
          if (v30 == 1) {
            break;
          }
          uint64_t v55 = v29;
          MEMORY[0x270FA5388](v30);
          uint64_t v32 = v17;
          uint64_t v33 = (char *)&v41 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
          uint64_t v34 = v22;
          (*v57)(v33, v22, v32);
          sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
          char v35 = sub_251F35650();
          uint64_t v36 = *v58;
          int v37 = v33;
          uint64_t v17 = v32;
          (*v58)(v37, v32);
          if (v35)
          {
            a2 = v46;
            swift_bridgeObjectRelease();
            v36(v63, v32);
            uint64_t v12 = v45;
            sub_251B25C90((uint64_t)v45, v43, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
            uint64_t v38 = v64;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_251A3E5F8(0, *(void *)(v38 + 16) + 1, 1);
              uint64_t v38 = v64;
            }
            unint64_t v40 = *(void *)(v38 + 16);
            unint64_t v39 = *(void *)(v38 + 24);
            if (v40 >= v39 >> 1)
            {
              sub_251A3E5F8(v39 > 1, v40 + 1, 1);
              uint64_t v38 = v64;
            }
            *(void *)(v38 + 16) = v40 + 1;
            sub_251B25C90(v43, v38 + v42 + v40 * v50, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
            goto LABEL_5;
          }
          v26 += v56;
          --v23;
          uint64_t v22 = v34;
          if (!v23)
          {
            v55(v34, 1, 1, v32);
            break;
          }
        }
      }
      else
      {
        uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
        swift_bridgeObjectRetain();
        v16(v22, 1, 1, v17);
      }
      a2 = v46;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v63, v17);
      uint64_t v12 = v45;
      sub_251B25BDC((uint64_t)v45, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
LABEL_5:
      uint64_t v14 = v52 + 1;
    }
    while (v52 + 1 != v47);
    return v64;
  }
  return result;
}

uint64_t sub_251B2CD7C(uint64_t a1, void (*a2)(void *__return_ptr, char *), uint64_t a3)
{
  void (*v22)(void *__return_ptr, char *);
  uint64_t v23;
  void v24[2];
  uint64_t v25;

  uint64_t v22 = a2;
  uint64_t v23 = a3;
  uint64_t v5 = type metadata accessor for StaticActionSet() - 8;
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v11 = (char *)&v20 - v10;
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v25 = MEMORY[0x263F8EE78];
  uint64_t v13 = *(void *)(a1 + 16);
  if (v13)
  {
    uint64_t v20 = v3;
    uint64_t v14 = *(void *)(v9 + 72);
    unint64_t v21 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v15 = a1 + v21;
    uint64_t v16 = MEMORY[0x263F8EE78];
    do
    {
      sub_251B25B74(v15, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
      v22(v24, v11);
      uint64_t v17 = v24[1];
      swift_bridgeObjectRelease();
      if (v17)
      {
        sub_251B25C90((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_251A3E5F8(0, *(void *)(v16 + 16) + 1, 1);
        }
        uint64_t v16 = v25;
        unint64_t v19 = *(void *)(v25 + 16);
        unint64_t v18 = *(void *)(v25 + 24);
        if (v19 >= v18 >> 1)
        {
          sub_251A3E5F8(v18 > 1, v19 + 1, 1);
          uint64_t v16 = v25;
        }
        *(void *)(v16 + 16) = v19 + 1;
        sub_251B25C90((uint64_t)v8, v16 + v21 + v19 * v14, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
      }
      else
      {
        sub_251B25BDC((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
      }
      v15 += v14;
      --v13;
    }
    while (v13);
    return v25;
  }
  return result;
}

uint64_t sub_251B2CFB8(uint64_t a1, uint64_t a2, void (*a3)(char *), uint64_t a4)
{
  uint64_t v48 = a3;
  uint64_t v49 = a4;
  uint64_t v7 = type metadata accessor for StaticRoom(0) - 8;
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v43 = (uint64_t)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v41 - v11;
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v64 = MEMORY[0x263F8EE78];
  uint64_t v47 = *(void *)(a1 + 16);
  if (v47)
  {
    uint64_t v41 = v4;
    uint64_t v14 = 0;
    uint64_t v15 = *(unsigned __int8 *)(v10 + 80);
    uint64_t v50 = *(void *)(v10 + 72);
    uint64_t v42 = (v15 + 32) & ~v15;
    uint64_t v44 = a1 + v42;
    uint64_t v45 = (char *)&v41 - v11;
    uint64_t v46 = a2;
    do
    {
      uint64_t v52 = v14;
      sub_251B25B74(v44 + v50 * v14, (uint64_t)v12, type metadata accessor for StaticRoom);
      uint64_t v17 = sub_251F34DA0();
      uint64_t v54 = &v41;
      uint64_t v18 = *(void *)(v17 - 8);
      MEMORY[0x270FA5388](v17);
      uint64_t v62 = v19;
      uint64_t v63 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
      v48(v12);
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
      uint64_t v53 = &v41;
      MEMORY[0x270FA5388](v20 - 8);
      uint64_t v22 = (char *)&v41 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v23 = *(void *)(a2 + 16);
      uint64_t v51 = v18;
      if (v23)
      {
        uint64_t v24 = v18 + 16;
        uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
        uint64_t v26 = a2 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
        uint64_t v27 = *(void *)(v18 + 72);
        uint64_t v28 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
        uint64_t v59 = (uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 32);
        uint64_t v60 = v25;
        uint64_t v56 = v27;
        uint64_t v57 = (void (**)(char *, char *, uint64_t))(v24 + 16);
        uint64_t v61 = v24;
        uint64_t v58 = (void (**)(char *, uint64_t))(v24 - 8);
        swift_bridgeObjectRetain();
        while (1)
        {
          v60(v22, v26, v17);
          uint64_t v29 = *v28;
          (*v28)(v22, 0, 1, v17);
          uint64_t v30 = (*v59)(v22, 1, v17);
          if (v30 == 1) {
            break;
          }
          uint64_t v55 = v29;
          MEMORY[0x270FA5388](v30);
          uint64_t v32 = v17;
          uint64_t v33 = (char *)&v41 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
          uint64_t v34 = v22;
          (*v57)(v33, v22, v32);
          sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
          char v35 = sub_251F35650();
          uint64_t v36 = *v58;
          int v37 = v33;
          uint64_t v17 = v32;
          (*v58)(v37, v32);
          if (v35)
          {
            a2 = v46;
            swift_bridgeObjectRelease();
            v36(v63, v32);
            uint64_t v12 = v45;
            sub_251B25C90((uint64_t)v45, v43, type metadata accessor for StaticRoom);
            uint64_t v38 = v64;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_251A3DFDC(0, *(void *)(v38 + 16) + 1, 1);
              uint64_t v38 = v64;
            }
            unint64_t v40 = *(void *)(v38 + 16);
            unint64_t v39 = *(void *)(v38 + 24);
            if (v40 >= v39 >> 1)
            {
              sub_251A3DFDC(v39 > 1, v40 + 1, 1);
              uint64_t v38 = v64;
            }
            *(void *)(v38 + 16) = v40 + 1;
            sub_251B25C90(v43, v38 + v42 + v40 * v50, type metadata accessor for StaticRoom);
            goto LABEL_5;
          }
          v26 += v56;
          --v23;
          uint64_t v22 = v34;
          if (!v23)
          {
            v55(v34, 1, 1, v32);
            break;
          }
        }
      }
      else
      {
        uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
        swift_bridgeObjectRetain();
        v16(v22, 1, 1, v17);
      }
      a2 = v46;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v63, v17);
      uint64_t v12 = v45;
      sub_251B25BDC((uint64_t)v45, type metadata accessor for StaticRoom);
LABEL_5:
      uint64_t v14 = v52 + 1;
    }
    while (v52 + 1 != v47);
    return v64;
  }
  return result;
}

uint64_t sub_251B2D514(uint64_t a1, void (*a2)(void *__return_ptr, char *), uint64_t a3)
{
  void (*v22)(void *__return_ptr, char *);
  uint64_t v23;
  void v24[2];
  uint64_t v25;

  uint64_t v22 = a2;
  uint64_t v23 = a3;
  uint64_t v5 = type metadata accessor for StaticRoom(0) - 8;
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v11 = (char *)&v20 - v10;
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v25 = MEMORY[0x263F8EE78];
  uint64_t v13 = *(void *)(a1 + 16);
  if (v13)
  {
    uint64_t v20 = v3;
    uint64_t v14 = *(void *)(v9 + 72);
    unint64_t v21 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v15 = a1 + v21;
    uint64_t v16 = MEMORY[0x263F8EE78];
    do
    {
      sub_251B25B74(v15, (uint64_t)v11, type metadata accessor for StaticRoom);
      v22(v24, v11);
      uint64_t v17 = v24[1];
      swift_bridgeObjectRelease();
      if (v17)
      {
        sub_251B25C90((uint64_t)v11, (uint64_t)v8, type metadata accessor for StaticRoom);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_251A3DFDC(0, *(void *)(v16 + 16) + 1, 1);
        }
        uint64_t v16 = v25;
        unint64_t v19 = *(void *)(v25 + 16);
        unint64_t v18 = *(void *)(v25 + 24);
        if (v19 >= v18 >> 1)
        {
          sub_251A3DFDC(v18 > 1, v19 + 1, 1);
          uint64_t v16 = v25;
        }
        *(void *)(v16 + 16) = v19 + 1;
        sub_251B25C90((uint64_t)v8, v16 + v21 + v19 * v14, type metadata accessor for StaticRoom);
      }
      else
      {
        sub_251B25BDC((uint64_t)v11, type metadata accessor for StaticRoom);
      }
      v15 += v14;
      --v13;
    }
    while (v13);
    return v25;
  }
  return result;
}

uint64_t sub_251B2D750(uint64_t a1, uint64_t a2, void (*a3)(char *), uint64_t a4)
{
  uint64_t v48 = a3;
  uint64_t v49 = a4;
  uint64_t v7 = type metadata accessor for StaticCameraProfile() - 8;
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v43 = (uint64_t)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v41 - v11;
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v64 = MEMORY[0x263F8EE78];
  uint64_t v47 = *(void *)(a1 + 16);
  if (v47)
  {
    uint64_t v41 = v4;
    uint64_t v14 = 0;
    uint64_t v15 = *(unsigned __int8 *)(v10 + 80);
    uint64_t v50 = *(void *)(v10 + 72);
    uint64_t v42 = (v15 + 32) & ~v15;
    uint64_t v44 = a1 + v42;
    uint64_t v45 = (char *)&v41 - v11;
    uint64_t v46 = a2;
    do
    {
      uint64_t v52 = v14;
      sub_251B25B74(v44 + v50 * v14, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
      uint64_t v17 = sub_251F34DA0();
      uint64_t v54 = &v41;
      uint64_t v18 = *(void *)(v17 - 8);
      MEMORY[0x270FA5388](v17);
      uint64_t v62 = v19;
      uint64_t v63 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
      v48(v12);
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
      uint64_t v53 = &v41;
      MEMORY[0x270FA5388](v20 - 8);
      uint64_t v22 = (char *)&v41 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v23 = *(void *)(a2 + 16);
      uint64_t v51 = v18;
      if (v23)
      {
        uint64_t v24 = v18 + 16;
        uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
        uint64_t v26 = a2 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
        uint64_t v27 = *(void *)(v18 + 72);
        uint64_t v28 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
        uint64_t v59 = (uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 32);
        uint64_t v60 = v25;
        uint64_t v56 = v27;
        uint64_t v57 = (void (**)(char *, char *, uint64_t))(v24 + 16);
        uint64_t v61 = v24;
        uint64_t v58 = (void (**)(char *, uint64_t))(v24 - 8);
        swift_bridgeObjectRetain();
        while (1)
        {
          v60(v22, v26, v17);
          uint64_t v29 = *v28;
          (*v28)(v22, 0, 1, v17);
          uint64_t v30 = (*v59)(v22, 1, v17);
          if (v30 == 1) {
            break;
          }
          uint64_t v55 = v29;
          MEMORY[0x270FA5388](v30);
          uint64_t v32 = v17;
          uint64_t v33 = (char *)&v41 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
          uint64_t v34 = v22;
          (*v57)(v33, v22, v32);
          sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
          char v35 = sub_251F35650();
          uint64_t v36 = *v58;
          int v37 = v33;
          uint64_t v17 = v32;
          (*v58)(v37, v32);
          if (v35)
          {
            a2 = v46;
            swift_bridgeObjectRelease();
            v36(v63, v32);
            uint64_t v12 = v45;
            sub_251B25C90((uint64_t)v45, v43, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
            uint64_t v38 = v64;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_251A3E964(0, *(void *)(v38 + 16) + 1, 1);
              uint64_t v38 = v64;
            }
            unint64_t v40 = *(void *)(v38 + 16);
            unint64_t v39 = *(void *)(v38 + 24);
            if (v40 >= v39 >> 1)
            {
              sub_251A3E964(v39 > 1, v40 + 1, 1);
              uint64_t v38 = v64;
            }
            *(void *)(v38 + 16) = v40 + 1;
            sub_251B25C90(v43, v38 + v42 + v40 * v50, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
            goto LABEL_5;
          }
          v26 += v56;
          --v23;
          uint64_t v22 = v34;
          if (!v23)
          {
            v55(v34, 1, 1, v32);
            break;
          }
        }
      }
      else
      {
        uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
        swift_bridgeObjectRetain();
        v16(v22, 1, 1, v17);
      }
      a2 = v46;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v63, v17);
      uint64_t v12 = v45;
      sub_251B25BDC((uint64_t)v45, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
LABEL_5:
      uint64_t v14 = v52 + 1;
    }
    while (v52 + 1 != v47);
    return v64;
  }
  return result;
}

uint64_t sub_251B2DCAC(uint64_t a1, void (*a2)(void *__return_ptr, char *), uint64_t a3)
{
  void (*v22)(void *__return_ptr, char *);
  uint64_t v23;
  void v24[2];
  uint64_t v25;

  uint64_t v22 = a2;
  uint64_t v23 = a3;
  uint64_t v5 = type metadata accessor for StaticCameraProfile() - 8;
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v11 = (char *)&v20 - v10;
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v25 = MEMORY[0x263F8EE78];
  uint64_t v13 = *(void *)(a1 + 16);
  if (v13)
  {
    uint64_t v20 = v3;
    uint64_t v14 = *(void *)(v9 + 72);
    unint64_t v21 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v15 = a1 + v21;
    uint64_t v16 = MEMORY[0x263F8EE78];
    do
    {
      sub_251B25B74(v15, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
      v22(v24, v11);
      uint64_t v17 = v24[1];
      swift_bridgeObjectRelease();
      if (v17)
      {
        sub_251B25C90((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_251A3E964(0, *(void *)(v16 + 16) + 1, 1);
        }
        uint64_t v16 = v25;
        unint64_t v19 = *(void *)(v25 + 16);
        unint64_t v18 = *(void *)(v25 + 24);
        if (v19 >= v18 >> 1)
        {
          sub_251A3E964(v18 > 1, v19 + 1, 1);
          uint64_t v16 = v25;
        }
        *(void *)(v16 + 16) = v19 + 1;
        sub_251B25C90((uint64_t)v8, v16 + v21 + v19 * v14, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
      }
      else
      {
        sub_251B25BDC((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
      }
      v15 += v14;
      --v13;
    }
    while (v13);
    return v25;
  }
  return result;
}

uint64_t sub_251B2DEE8(uint64_t a1, uint64_t a2, void (*a3)(char *), uint64_t a4)
{
  uint64_t v48 = a3;
  uint64_t v49 = a4;
  uint64_t v7 = type metadata accessor for StaticResident() - 8;
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v43 = (uint64_t)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v41 - v11;
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v64 = MEMORY[0x263F8EE78];
  uint64_t v47 = *(void *)(a1 + 16);
  if (v47)
  {
    uint64_t v41 = v4;
    uint64_t v14 = 0;
    uint64_t v15 = *(unsigned __int8 *)(v10 + 80);
    uint64_t v50 = *(void *)(v10 + 72);
    uint64_t v42 = (v15 + 32) & ~v15;
    uint64_t v44 = a1 + v42;
    uint64_t v45 = (char *)&v41 - v11;
    uint64_t v46 = a2;
    do
    {
      uint64_t v52 = v14;
      sub_251B25B74(v44 + v50 * v14, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticResident);
      uint64_t v17 = sub_251F34DA0();
      uint64_t v54 = &v41;
      uint64_t v18 = *(void *)(v17 - 8);
      MEMORY[0x270FA5388](v17);
      uint64_t v62 = v19;
      uint64_t v63 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
      v48(v12);
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
      uint64_t v53 = &v41;
      MEMORY[0x270FA5388](v20 - 8);
      uint64_t v22 = (char *)&v41 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v23 = *(void *)(a2 + 16);
      uint64_t v51 = v18;
      if (v23)
      {
        uint64_t v24 = v18 + 16;
        uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
        uint64_t v26 = a2 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
        uint64_t v27 = *(void *)(v18 + 72);
        uint64_t v28 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
        uint64_t v59 = (uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 32);
        uint64_t v60 = v25;
        uint64_t v56 = v27;
        uint64_t v57 = (void (**)(char *, char *, uint64_t))(v24 + 16);
        uint64_t v61 = v24;
        uint64_t v58 = (void (**)(char *, uint64_t))(v24 - 8);
        swift_bridgeObjectRetain();
        while (1)
        {
          v60(v22, v26, v17);
          uint64_t v29 = *v28;
          (*v28)(v22, 0, 1, v17);
          uint64_t v30 = (*v59)(v22, 1, v17);
          if (v30 == 1) {
            break;
          }
          uint64_t v55 = v29;
          MEMORY[0x270FA5388](v30);
          uint64_t v32 = v17;
          uint64_t v33 = (char *)&v41 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
          uint64_t v34 = v22;
          (*v57)(v33, v22, v32);
          sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
          char v35 = sub_251F35650();
          uint64_t v36 = *v58;
          int v37 = v33;
          uint64_t v17 = v32;
          (*v58)(v37, v32);
          if (v35)
          {
            a2 = v46;
            swift_bridgeObjectRelease();
            v36(v63, v32);
            uint64_t v12 = v45;
            sub_251B25C90((uint64_t)v45, v43, (uint64_t (*)(void))type metadata accessor for StaticResident);
            uint64_t v38 = v64;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_251A3E9A0(0, *(void *)(v38 + 16) + 1, 1);
              uint64_t v38 = v64;
            }
            unint64_t v40 = *(void *)(v38 + 16);
            unint64_t v39 = *(void *)(v38 + 24);
            if (v40 >= v39 >> 1)
            {
              sub_251A3E9A0(v39 > 1, v40 + 1, 1);
              uint64_t v38 = v64;
            }
            *(void *)(v38 + 16) = v40 + 1;
            sub_251B25C90(v43, v38 + v42 + v40 * v50, (uint64_t (*)(void))type metadata accessor for StaticResident);
            goto LABEL_5;
          }
          v26 += v56;
          --v23;
          uint64_t v22 = v34;
          if (!v23)
          {
            v55(v34, 1, 1, v32);
            break;
          }
        }
      }
      else
      {
        uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
        swift_bridgeObjectRetain();
        v16(v22, 1, 1, v17);
      }
      a2 = v46;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v63, v17);
      uint64_t v12 = v45;
      sub_251B25BDC((uint64_t)v45, (uint64_t (*)(void))type metadata accessor for StaticResident);
LABEL_5:
      uint64_t v14 = v52 + 1;
    }
    while (v52 + 1 != v47);
    return v64;
  }
  return result;
}

uint64_t sub_251B2E444(uint64_t a1, void (*a2)(void *__return_ptr, char *), uint64_t a3)
{
  void (*v22)(void *__return_ptr, char *);
  uint64_t v23;
  void v24[2];
  uint64_t v25;

  uint64_t v22 = a2;
  uint64_t v23 = a3;
  uint64_t v5 = type metadata accessor for StaticResident() - 8;
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v11 = (char *)&v20 - v10;
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v25 = MEMORY[0x263F8EE78];
  uint64_t v13 = *(void *)(a1 + 16);
  if (v13)
  {
    uint64_t v20 = v3;
    uint64_t v14 = *(void *)(v9 + 72);
    unint64_t v21 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v15 = a1 + v21;
    uint64_t v16 = MEMORY[0x263F8EE78];
    do
    {
      sub_251B25B74(v15, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticResident);
      v22(v24, v11);
      uint64_t v17 = v24[1];
      swift_bridgeObjectRelease();
      if (v17)
      {
        sub_251B25C90((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticResident);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_251A3E9A0(0, *(void *)(v16 + 16) + 1, 1);
        }
        uint64_t v16 = v25;
        unint64_t v19 = *(void *)(v25 + 16);
        unint64_t v18 = *(void *)(v25 + 24);
        if (v19 >= v18 >> 1)
        {
          sub_251A3E9A0(v18 > 1, v19 + 1, 1);
          uint64_t v16 = v25;
        }
        *(void *)(v16 + 16) = v19 + 1;
        sub_251B25C90((uint64_t)v8, v16 + v21 + v19 * v14, (uint64_t (*)(void))type metadata accessor for StaticResident);
      }
      else
      {
        sub_251B25BDC((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticResident);
      }
      v15 += v14;
      --v13;
    }
    while (v13);
    return v25;
  }
  return result;
}

uint64_t sub_251B2E680(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t v5 = 0;
  uint64_t v6 = *(void *)(type metadata accessor for StaticResident() - 8);
  uint64_t v7 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  uint64_t v8 = *(void *)(v6 + 72);
  while ((sub_251D82F30(v7, a2) & 1) == 0)
  {
    ++v5;
    v7 += v8;
    if (v2 == v5) {
      return 0;
    }
  }
  return v5;
}

uint64_t sub_251B2E75C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6567617265766F63 && a2 == 0xE900000000000073;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F48636974617473 && a2 == 0xEA0000000000656DLL || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000251F6A490 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000251F6A4B0 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x8000000251F6A4D0 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x8000000251F6A4F0 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x8000000251F6A510 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x8000000251F6A530 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x8000000251F6A550 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000251F6A570 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x8000000251F6A590 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x8000000251F6A5B0 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000251F6A5D0 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x8000000251F6A5F0 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x8000000251F6A610 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x8000000251F6A630)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 15;
    }
    else {
      return 16;
    }
  }
}

uint64_t sub_251B2ED58(uint64_t result, unint64_t a2, unsigned __int8 a3)
{
  int v3 = a3 >> 6;
  if (!(a3 >> 6)) {
    return sub_251B2ED7C(result, a2, a3);
  }
  if (v3 == 2 || v3 == 1)
  {
    a3 &= 0x3Fu;
    return sub_251B2ED7C(result, a2, a3);
  }
  return result;
}

uint64_t sub_251B2ED7C(uint64_t result, unint64_t a2, char a3)
{
  if (a3 == 10 || a3 == 9) {
    return sub_251A1A894(result, a2);
  }
  if (a3 == 8) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

void sub_251B2EDA8(uint64_t a1, unint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) == 0) {
    sub_251B2EDB8(a2);
  }
}

unint64_t sub_251B2EDB8(unint64_t result)
{
  if (result >= 2) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_251B2EDC8(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, _DWORD))
{
  long long v4 = *(_OWORD *)(a1 + 208);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    v4,
    *((void *)&v4 + 1),
    *(void *)(a1 + 224),
    *(void *)(a1 + 232),
    *(void *)(a1 + 240),
    *(_DWORD *)(a1 + 248));
  return a1;
}

void sub_251B2EE54(id *a1)
{
  sub_251B189A0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(uint64_t **)(v1 + 56));
}

uint64_t sub_251B2EE78(unint64_t a1)
{
  return sub_251B1A344(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_251B2EE94(uint64_t a1, void **a2)
{
  return sub_251B1AB04(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32));
}

uint64_t sub_251B2EEB4(id *a1)
{
  return sub_251B1ACC8(a1) & 1;
}

uint64_t sub_251B2EED4()
{
  return sub_251F34D70() & 1;
}

uint64_t sub_251B2EF24(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = type metadata accessor for StaticMediaSystem();
  return sub_251DB3C24(v3, *(void *)(a1 + *(int *)(v4 + 92))) & 1;
}

uint64_t sub_251B2EF74()
{
  return sub_251F34D70() & 1;
}

uint64_t sub_251B2EFC4(uint64_t *a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t (*a5)(void), uint64_t (*a6)(void), uint64_t (*a7)(void), uint64_t (*a8)(void), uint64_t (*a9)(void), void (*a10)(unint64_t *, unint64_t *, unint64_t *))
{
  uint64_t v199 = a7;
  uint64_t v200 = a6;
  uint64_t v214 = a4;
  unint64_t v215 = a3;
  char v191 = a9;
  uint64_t v193 = a5(0);
  uint64_t v192 = *(void *)(v193 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v193);
  uint64_t v183 = (uint64_t)&v180 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v204 = (uint64_t)&v180 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v208 = (uint64_t)&v180 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v209 = (uint64_t)&v180 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v206 = (uint64_t)&v180 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v207 = (uint64_t)&v180 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v186 = (uint64_t)&v180 - v27;
  MEMORY[0x270FA5388](v26);
  uint64_t v187 = (uint64_t)&v180 - v28;
  uint64_t v205 = a1;
  uint64_t v29 = a1[1];
  swift_bridgeObjectRetain_n();
  uint64_t v30 = sub_251F36AA0();
  if (v30 >= v29)
  {
    if (v29 < 0)
    {
LABEL_185:
      __break(1u);
LABEL_186:
      __break(1u);
LABEL_187:
      __break(1u);
LABEL_188:
      __break(1u);
LABEL_189:
      __break(1u);
LABEL_190:
      swift_bridgeObjectRelease_n();
      __break(1u);
LABEL_191:
      swift_bridgeObjectRelease_n();
      __break(1u);
LABEL_192:
      swift_bridgeObjectRelease_n();
      __break(1u);
LABEL_193:
      swift_bridgeObjectRelease_n();
      __break(1u);
      goto LABEL_194;
    }
    if (v29)
    {
      swift_bridgeObjectRetain();
      sub_251B34380(0, v29, 1, v205, a2, v215, v214, v191, v200, v199, a8);
    }
    swift_bridgeObjectRelease_n();
    return swift_bridgeObjectRelease();
  }
  if (v29 >= 0) {
    uint64_t v31 = v29;
  }
  else {
    uint64_t v31 = v29 + 1;
  }
  if (v29 >= -1)
  {
    BOOL v189 = a10;
    uint64_t v197 = a2;
    uint64_t v195 = a8;
    uint64_t v181 = v30;
    uint64_t v196 = v10;
    if (v29 >= 2)
    {
      uint64_t v32 = v31 >> 1;
      uint64_t v33 = sub_251F35B50();
      *(void *)(v33 + 16) = v32;
      uint64_t v34 = *(unsigned __int8 *)(v192 + 80);
      uint64_t v180 = v33;
      unint64_t v188 = v33 + ((v34 + 32) & ~v34);
      goto LABEL_13;
    }
    char v35 = (char *)MEMORY[0x263F8EE78];
    unint64_t v188 = MEMORY[0x263F8EE78]
         + ((*(unsigned __int8 *)(v192 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v192 + 80));
    uint64_t v180 = MEMORY[0x263F8EE78];
    if (v29 == 1)
    {
LABEL_13:
      uint64_t v36 = 0;
      char v35 = (char *)MEMORY[0x263F8EE78];
LABEL_14:
      uint64_t v37 = v36 + 1;
      uint64_t v190 = v35;
      uint64_t v194 = v36;
      if (v36 + 1 >= v29) {
        goto LABEL_70;
      }
      uint64_t v38 = *v205;
      uint64_t v39 = v36;
      uint64_t v40 = *(void *)(v192 + 72);
      uint64_t v185 = v37;
      uint64_t v41 = v38 + v40 * v37;
      uint64_t v42 = v200;
      sub_251B25B74(v41, v187, v200);
      uint64_t v198 = v40;
      uint64_t v43 = v38 + v40 * v39;
      uint64_t v36 = v39;
      sub_251B25B74(v43, v186, v42);
      unint64_t v44 = *(void *)(a2 + 16);
      uint64_t v184 = v38;
      uint64_t v213 = v44;
      uint64_t v182 = v29;
      if (v44)
      {
        uint64_t v45 = sub_251F34DA0();
        uint64_t v203 = 0;
        uint64_t v212 = (char *)v45;
        uint64_t v46 = *(void *)(v45 - 8);
        unint64_t v47 = a2 + ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80));
        uint64_t v211 = *(uint64_t (***)(char *, char *))(v46 + 72);
        uint64_t v48 = *(void *)(v46 + 64);
        uint64_t v49 = (uint64_t (**)(char *, char *))(v46 + 8);
        unint64_t v50 = v47;
        while (1)
        {
          MEMORY[0x270FA5388](v45);
          v215(v187);
          char v51 = sub_251F34D70();
          uint64_t v52 = *v49;
          uint64_t v45 = (*v49)((char *)&v180 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0), v212);
          if (v51) {
            break;
          }
          v50 += (unint64_t)v211;
          if (v213 == ++v203)
          {
            uint64_t v203 = 1000;
            break;
          }
        }
        uint64_t v53 = 0;
        uint64_t v54 = v195;
        while (1)
        {
          uint64_t v202 = v53;
          MEMORY[0x270FA5388](v45);
          v215(v186);
          char v55 = sub_251F34D70();
          uint64_t v45 = v52((char *)&v180 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0), v212);
          if (v55) {
            break;
          }
          if (__OFADD__(v202, 1)) {
            goto LABEL_168;
          }
          uint64_t v53 = v202 + 1;
          v47 += (unint64_t)v211;
          if (v202 + 1 == v213)
          {
            uint64_t v202 = 1000;
            break;
          }
        }
        a2 = v197;
        char v35 = v190;
        uint64_t v36 = v194;
        uint64_t v29 = v182;
        uint64_t v38 = v184;
      }
      else
      {
        uint64_t v202 = 1000;
        uint64_t v203 = 1000;
        uint64_t v54 = v195;
      }
      uint64_t v56 = v199;
      sub_251B25BDC(v186, v199);
      sub_251B25BDC(v187, v56);
      uint64_t v57 = v36 + 2;
      uint64_t v58 = v185;
      if (v36 + 2 >= v29) {
        goto LABEL_45;
      }
LABEL_29:
      uint64_t v59 = v36;
      uint64_t v60 = v198;
      uint64_t v201 = v57;
      uint64_t v61 = v200;
      sub_251B25B74(v38 + v57 * v198, v207, v200);
      sub_251B25B74(v38 + v58 * v60, v206, v61);
      if (!v213)
      {
        uint64_t v70 = 1000;
        uint64_t v63 = 1000;
        uint64_t v36 = v59;
        goto LABEL_41;
      }
      uint64_t v62 = sub_251F34DA0();
      uint64_t v63 = 0;
      uint64_t v212 = (char *)v62;
      uint64_t v64 = *(void *)(v62 - 8);
      unint64_t v65 = a2 + ((*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80));
      uint64_t v210 = *(void *)(v64 + 72);
      uint64_t v66 = *(void *)(v64 + 64);
      uint64_t v211 = (uint64_t (**)(char *, char *))(v64 + 8);
      unint64_t v67 = v65;
      while (1)
      {
        MEMORY[0x270FA5388](v62);
        v215(v207);
        char v68 = sub_251F34D70();
        uint64_t v69 = *v211;
        uint64_t v62 = (*v211)((char *)&v180 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0), v212);
        if (v68) {
          break;
        }
        ++v63;
        v67 += v210;
        if (v213 == v63)
        {
          uint64_t v63 = 1000;
          break;
        }
      }
      uint64_t v70 = 0;
      while (1)
      {
        MEMORY[0x270FA5388](v62);
        v215(v206);
        char v71 = sub_251F34D70();
        uint64_t v62 = v69((char *)&v180 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0), v212);
        if (v71) {
          goto LABEL_39;
        }
        uint64_t v72 = v70 + 1;
        if (__OFADD__(v70, 1)) {
          break;
        }
        ++v70;
        v65 += v210;
        if (v72 == v213)
        {
          uint64_t v70 = 1000;
LABEL_39:
          a2 = v197;
          uint64_t v36 = v194;
          uint64_t v54 = v195;
          uint64_t v38 = v184;
LABEL_41:
          BOOL v73 = v203 < v202;
          BOOL v74 = v63 >= v70;
          uint64_t v75 = v199;
          sub_251B25BDC(v206, v199);
          sub_251B25BDC(v207, v75);
          if ((v73 ^ v74))
          {
            uint64_t v58 = v201;
            uint64_t v57 = v201 + 1;
            uint64_t v29 = v182;
            char v35 = v190;
            if (v201 + 1 == v182)
            {
              uint64_t v57 = v182;
              goto LABEL_45;
            }
            goto LABEL_29;
          }
          char v35 = v190;
          uint64_t v29 = v182;
          uint64_t v57 = v201;
LABEL_45:
          if (v203 >= v202) {
            goto LABEL_58;
          }
          if (v57 < v36) {
            goto LABEL_189;
          }
          if (v36 >= v57)
          {
LABEL_58:
            uint64_t v37 = v57;
            if (v57 < v29) {
              goto LABEL_61;
            }
LABEL_70:
            if (v37 < v36) {
              goto LABEL_184;
            }
            goto LABEL_71;
          }
          uint64_t v76 = 0;
          uint64_t v77 = v198 * (v57 - 1);
          uint64_t v78 = v57 * v198;
          uint64_t v79 = v36;
          uint64_t v80 = v36 * v198;
          uint64_t v201 = v57;
          do
          {
            if (v79 != v57 + v76 - 1)
            {
              if (!v38) {
                goto LABEL_192;
              }
              uint64_t v213 = v38 + v77;
              sub_251B25C90(v38 + v80, v183, v54);
              if (v80 < v77 || v38 + v80 >= (unint64_t)(v38 + v78))
              {
                uint64_t v81 = v213;
                swift_arrayInitWithTakeFrontToBack();
              }
              else
              {
                uint64_t v81 = v213;
                if (v80 != v77) {
                  swift_arrayInitWithTakeBackToFront();
                }
              }
              sub_251B25C90(v183, v81, v54);
              uint64_t v38 = v184;
              uint64_t v57 = v201;
            }
            ++v79;
            --v76;
            v77 -= v198;
            v78 -= v198;
            v80 += v198;
          }
          while (v79 < v57 + v76);
          uint64_t v37 = v57;
          a2 = v197;
          char v35 = v190;
          uint64_t v29 = v182;
          if (v57 >= v182) {
            goto LABEL_70;
          }
LABEL_61:
          if (__OFSUB__(v37, v36)) {
            goto LABEL_186;
          }
          uint64_t v82 = v37;
          if (v37 - v36 >= v181) {
            goto LABEL_69;
          }
          if (__OFADD__(v36, v181)) {
            goto LABEL_187;
          }
          if (v36 + v181 >= v29) {
            uint64_t v83 = v29;
          }
          else {
            uint64_t v83 = v36 + v181;
          }
          if (v83 < v36) {
            goto LABEL_188;
          }
          if (v82 == v83)
          {
LABEL_69:
            uint64_t v37 = v82;
            goto LABEL_70;
          }
          uint64_t v211 = *(uint64_t (***)(char *, char *))(a2 + 16);
          uint64_t v198 = *(void *)(v192 + 72);
          uint64_t v143 = v82;
          uint64_t v184 = v83;
          while (2)
          {
            uint64_t v185 = v143;
            while (2)
            {
              uint64_t v144 = v143 - 1;
              uint64_t v145 = *v205;
              uint64_t v146 = v198;
              uint64_t v202 = v198 * v143;
              uint64_t v147 = v200;
              sub_251B25B74(v145 + v198 * v143, v209, v200);
              uint64_t v203 = v144;
              uint64_t v201 = v146 * v144;
              sub_251B25B74(v145 + v146 * v144, v208, v147);
              if (!v211)
              {
                uint64_t v156 = 1000;
                uint64_t v149 = 1000;
                goto LABEL_138;
              }
              uint64_t v148 = sub_251F34DA0();
              uint64_t v149 = 0;
              uint64_t v213 = v148;
              uint64_t v150 = *(void *)(v148 - 8);
              unint64_t v151 = a2
                   + ((*(unsigned __int8 *)(v150 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v150 + 80));
              uint64_t v210 = *(void *)(v150 + 72);
              uint64_t v152 = *(void *)(v150 + 64);
              uint64_t v212 = (char *)(v150 + 8);
              unint64_t v153 = v151;
              while (1)
              {
                MEMORY[0x270FA5388](v148);
                v215(v209);
                char v154 = sub_251F34D70();
                uint64_t v155 = *(uint64_t (**)(char *, uint64_t))v212;
                uint64_t v148 = (*(uint64_t (**)(char *, uint64_t))v212)((char *)&v180 - ((v152 + 15) & 0xFFFFFFFFFFFFFFF0), v213);
                if (v154) {
                  break;
                }
                ++v149;
                v153 += v210;
                if (v211 == (uint64_t (**)(char *, char *))v149)
                {
                  uint64_t v149 = 1000;
                  break;
                }
              }
              uint64_t v156 = 0;
              while (2)
              {
                MEMORY[0x270FA5388](v148);
                v215(v208);
                char v157 = sub_251F34D70();
                uint64_t v148 = v155((char *)&v180 - ((v152 + 15) & 0xFFFFFFFFFFFFFFF0), v213);
                if (v157) {
                  goto LABEL_136;
                }
                uint64_t v158 = v156 + 1;
                if (__OFADD__(v156, 1))
                {
                  __break(1u);
LABEL_145:
                  swift_bridgeObjectRelease();
                  goto LABEL_159;
                }
                ++v156;
                v151 += v210;
                if ((uint64_t (**)(char *, char *))v158 != v211) {
                  continue;
                }
                break;
              }
              uint64_t v156 = 1000;
LABEL_136:
              a2 = v197;
              uint64_t v36 = v194;
              uint64_t v54 = v195;
LABEL_138:
              uint64_t v159 = v199;
              sub_251B25BDC(v208, v199);
              sub_251B25BDC(v209, v159);
              if (v149 >= v156) {
                break;
              }
              uint64_t v160 = *v205;
              if (!*v205) {
                goto LABEL_190;
              }
              uint64_t v162 = v201;
              uint64_t v161 = v202;
              unint64_t v163 = v160 + v202;
              uint64_t v164 = v160 + v201;
              sub_251B25C90(v160 + v202, v204, v54);
              if (v161 < v162 || v163 >= v164 + v198) {
                swift_arrayInitWithTakeFrontToBack();
              }
              sub_251B25C90(v204, v164, v54);
              uint64_t v143 = v203;
              if (v203 != v36) {
                continue;
              }
              break;
            }
            uint64_t v143 = v185 + 1;
            uint64_t v37 = v184;
            if (v185 + 1 != v184) {
              continue;
            }
            break;
          }
          char v35 = v190;
          if (v184 < v36) {
            goto LABEL_184;
          }
LABEL_71:
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v185 = v37;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            char v35 = sub_251ECD5C4(0, *((void *)v35 + 2) + 1, 1, v35);
          }
          unint64_t v86 = *((void *)v35 + 2);
          unint64_t v85 = *((void *)v35 + 3);
          unint64_t v87 = v86 + 1;
          if (v86 >= v85 >> 1) {
            char v35 = sub_251ECD5C4((char *)(v85 > 1), v86 + 1, 1, v35);
          }
          *((void *)v35 + 2) = v87;
          uint64_t v88 = v35 + 32;
          uint64_t v89 = &v35[16 * v86 + 32];
          uint64_t v90 = v185;
          *(void *)uint64_t v89 = v36;
          *((void *)v89 + 1) = v90;
          if (v86)
          {
            uint64_t v212 = v35 + 32;
            while (1)
            {
              unint64_t v91 = v87 - 1;
              if (v87 >= 4)
              {
                uint64_t v96 = &v88[16 * v87];
                uint64_t v97 = *((void *)v96 - 8);
                uint64_t v98 = *((void *)v96 - 7);
                BOOL v102 = __OFSUB__(v98, v97);
                uint64_t v99 = v98 - v97;
                if (v102) {
                  goto LABEL_169;
                }
                uint64_t v101 = *((void *)v96 - 6);
                uint64_t v100 = *((void *)v96 - 5);
                BOOL v102 = __OFSUB__(v100, v101);
                uint64_t v94 = v100 - v101;
                char v95 = v102;
                if (v102) {
                  goto LABEL_170;
                }
                unint64_t v103 = v87 - 2;
                unint64_t v104 = &v88[16 * v87 - 32];
                uint64_t v106 = *(void *)v104;
                uint64_t v105 = *((void *)v104 + 1);
                BOOL v102 = __OFSUB__(v105, v106);
                uint64_t v107 = v105 - v106;
                if (v102) {
                  goto LABEL_172;
                }
                BOOL v102 = __OFADD__(v94, v107);
                uint64_t v108 = v94 + v107;
                if (v102) {
                  goto LABEL_175;
                }
                if (v108 >= v99)
                {
                  uint64_t v126 = &v88[16 * v91];
                  uint64_t v128 = *(void *)v126;
                  uint64_t v127 = *((void *)v126 + 1);
                  BOOL v102 = __OFSUB__(v127, v128);
                  uint64_t v129 = v127 - v128;
                  if (v102) {
                    goto LABEL_179;
                  }
                  BOOL v119 = v94 < v129;
                  goto LABEL_108;
                }
              }
              else
              {
                if (v87 != 3)
                {
                  uint64_t v120 = *((void *)v35 + 4);
                  uint64_t v121 = *((void *)v35 + 5);
                  BOOL v102 = __OFSUB__(v121, v120);
                  uint64_t v113 = v121 - v120;
                  char v114 = v102;
                  goto LABEL_102;
                }
                uint64_t v93 = *((void *)v35 + 4);
                uint64_t v92 = *((void *)v35 + 5);
                BOOL v102 = __OFSUB__(v92, v93);
                uint64_t v94 = v92 - v93;
                char v95 = v102;
              }
              if (v95) {
                goto LABEL_171;
              }
              unint64_t v103 = v87 - 2;
              uint64_t v109 = &v88[16 * v87 - 32];
              uint64_t v111 = *(void *)v109;
              uint64_t v110 = *((void *)v109 + 1);
              BOOL v112 = __OFSUB__(v110, v111);
              uint64_t v113 = v110 - v111;
              char v114 = v112;
              if (v112) {
                goto LABEL_174;
              }
              uint64_t v115 = &v88[16 * v91];
              uint64_t v117 = *(void *)v115;
              uint64_t v116 = *((void *)v115 + 1);
              BOOL v102 = __OFSUB__(v116, v117);
              uint64_t v118 = v116 - v117;
              if (v102) {
                goto LABEL_177;
              }
              if (__OFADD__(v113, v118)) {
                goto LABEL_178;
              }
              if (v113 + v118 >= v94)
              {
                BOOL v119 = v94 < v118;
LABEL_108:
                if (v119) {
                  unint64_t v91 = v103;
                }
                goto LABEL_110;
              }
LABEL_102:
              if (v114) {
                goto LABEL_173;
              }
              uint64_t v122 = &v88[16 * v91];
              uint64_t v124 = *(void *)v122;
              uint64_t v123 = *((void *)v122 + 1);
              BOOL v102 = __OFSUB__(v123, v124);
              uint64_t v125 = v123 - v124;
              if (v102) {
                goto LABEL_176;
              }
              if (v125 < v113) {
                goto LABEL_119;
              }
LABEL_110:
              unint64_t v130 = v91 - 1;
              if (v91 - 1 >= v87) {
                goto LABEL_164;
              }
              uint64_t v131 = *v205;
              if (!*v205) {
                goto LABEL_191;
              }
              uint64_t v132 = &v88[16 * v130];
              uint64_t v133 = *(void *)v132;
              unint64_t v134 = v91;
              uint64_t v135 = &v88[16 * v91];
              uint64_t v136 = *((void *)v135 + 1);
              uint64_t v137 = *(void *)(v192 + 72);
              unint64_t v138 = v131 + v137 * *(void *)v132;
              uint64_t v213 = v131 + v137 * *(void *)v135;
              unint64_t v139 = v131 + v137 * v136;
              a2 = v197;
              swift_bridgeObjectRetain();
              unint64_t v140 = v138;
              uint64_t v141 = v196;
              sub_251B33A80(v140, v213, v139, v188, a2, (void (*)(unint64_t))v215, v214, v191, v200, v199, v189);
              uint64_t v196 = v141;
              if (v141) {
                goto LABEL_145;
              }
              swift_bridgeObjectRelease();
              if (v136 < v133) {
                goto LABEL_165;
              }
              if (v134 > *((void *)v35 + 2)) {
                goto LABEL_166;
              }
              *(void *)uint64_t v132 = v133;
              uint64_t v88 = v212;
              *(void *)&v212[16 * v130 + 8] = v136;
              unint64_t v142 = *((void *)v35 + 2);
              if (v134 >= v142) {
                goto LABEL_167;
              }
              unint64_t v87 = v142 - 1;
              memmove(v135, v135 + 16, 16 * (v142 - 1 - v134));
              *((void *)v35 + 2) = v142 - 1;
              if (v142 <= 2) {
                goto LABEL_119;
              }
            }
          }
          unint64_t v87 = 1;
LABEL_119:
          uint64_t v29 = v205[1];
          uint64_t v36 = v185;
          if (v185 >= v29) {
            goto LABEL_148;
          }
          goto LABEL_14;
        }
      }
      __break(1u);
LABEL_164:
      __break(1u);
LABEL_165:
      __break(1u);
LABEL_166:
      __break(1u);
LABEL_167:
      __break(1u);
LABEL_168:
      __break(1u);
LABEL_169:
      __break(1u);
LABEL_170:
      __break(1u);
LABEL_171:
      __break(1u);
LABEL_172:
      __break(1u);
LABEL_173:
      __break(1u);
LABEL_174:
      __break(1u);
LABEL_175:
      __break(1u);
LABEL_176:
      __break(1u);
LABEL_177:
      __break(1u);
LABEL_178:
      __break(1u);
LABEL_179:
      __break(1u);
      goto LABEL_180;
    }
    unint64_t v87 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_148:
    uint64_t v190 = v35;
    if (v87 >= 2)
    {
      uint64_t v165 = *v205;
      while (1)
      {
        unint64_t v166 = v87 - 2;
        if (v87 < 2) {
          break;
        }
        if (!v165) {
          goto LABEL_193;
        }
        uint64_t v167 = *(void *)&v190[16 * v166 + 32];
        uint64_t v168 = *(void *)&v190[16 * v87 + 24];
        uint64_t v169 = *(void *)(v192 + 72);
        unint64_t v170 = v165 + v169 * v167;
        unint64_t v171 = v165 + v169 * *(void *)&v190[16 * v87 + 16];
        unint64_t v172 = v165 + v169 * v168;
        uint64_t v173 = v197;
        swift_bridgeObjectRetain();
        unint64_t v174 = v170;
        uint64_t v175 = v196;
        sub_251B33A80(v174, v171, v172, v188, v173, (void (*)(unint64_t))v215, v214, v191, v200, v199, v189);
        uint64_t v196 = v175;
        if (v175) {
          goto LABEL_145;
        }
        swift_bridgeObjectRelease();
        if (v168 < v167) {
          goto LABEL_181;
        }
        uint64_t v176 = v190;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v176 = sub_251ECDC38((uint64_t)v176);
        }
        if (v166 >= *((void *)v176 + 2)) {
          goto LABEL_182;
        }
        uint64_t v177 = &v176[16 * v166 + 32];
        *(void *)uint64_t v177 = v167;
        *((void *)v177 + 1) = v168;
        unint64_t v178 = *((void *)v176 + 2);
        if (v87 > v178) {
          goto LABEL_183;
        }
        memmove(&v176[16 * v87 + 16], &v176[16 * v87 + 32], 16 * (v178 - v87));
        uint64_t v190 = v176;
        *((void *)v176 + 2) = v178 - 1;
        unint64_t v87 = v178 - 1;
        if (v178 <= 2) {
          goto LABEL_159;
        }
      }
LABEL_180:
      __break(1u);
LABEL_181:
      __break(1u);
LABEL_182:
      __break(1u);
LABEL_183:
      __break(1u);
LABEL_184:
      __break(1u);
      goto LABEL_185;
    }
LABEL_159:
    swift_bridgeObjectRelease();
    *(void *)(v180 + 16) = 0;
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
LABEL_194:
  swift_bridgeObjectRelease_n();
  uint64_t result = sub_251F36670();
  __break(1u);
  return result;
}

uint64_t sub_251B30284(void **a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v8 = *(void *)(type metadata accessor for StaticActionSet() - 8);
  uint64_t v9 = *a1;
  swift_bridgeObjectRetain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v9 = (void *)sub_251ECDCEC(v9);
  }
  uint64_t v10 = v9[2];
  v12[0] = (uint64_t)v9 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  v12[1] = v10;
  swift_bridgeObjectRetain();
  sub_251B2EFC4(v12, a2, a3, a4, (uint64_t (*)(void))type metadata accessor for StaticActionSet, (uint64_t (*)(void))type metadata accessor for StaticActionSet, (uint64_t (*)(void))type metadata accessor for StaticActionSet, (uint64_t (*)(void))type metadata accessor for StaticActionSet, (uint64_t (*)(void))type metadata accessor for StaticActionSet, (void (*)(unint64_t *, unint64_t *, unint64_t *))sub_251ECD7FC);
  swift_bridgeObjectRelease();
  *a1 = v9;
  return swift_bridgeObjectRelease_n();
}

void *sub_251B303FC(uint64_t *a1, void *(*a2)(uint64_t *__return_ptr), uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void), uint64_t (*a7)(void), uint64_t (*a8)(void), void (*a9)(unint64_t *, unint64_t *, unint64_t *))
{
  void (*v50)(uint64_t *__return_ptr, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)(void);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t (*v59)(void);
  void (*v60)(uint64_t *__return_ptr, char *);
  uint64_t v61;
  uint64_t v62;
  int v64;
  uint64_t (*v65)(void);
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t (*v78)(void);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t (*v83)(void);
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(uint64_t *__return_ptr, uint64_t);
  uint64_t v88;
  uint64_t v89;
  BOOL v90;
  char v91;
  uint64_t (*v92)(void);
  uint64_t v93;
  uint64_t v94;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v96;
  unint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  BOOL v112;
  unint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  BOOL v122;
  uint64_t v123;
  char v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  BOOL v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  unint64_t v147;
  uint64_t v148;
  unint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  unint64_t v155;
  uint64_t v156;
  char *v157;
  void *v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  unint64_t v166;
  void (*v167)(unint64_t *, unint64_t *, unint64_t *);
  uint64_t (*v168)(void);
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t (*v175)(void);
  uint64_t (*v176)(void);
  void *(*v177)(uint64_t *__return_ptr);
  uint64_t v178;
  uint64_t v179;
  uint64_t (*v180)(void);
  char *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t *v187;

  uint64_t v168 = a8;
  uint64_t v180 = a7;
  uint64_t v175 = a6;
  uint64_t v176 = a5;
  unint64_t v171 = a4(0);
  uint64_t v169 = *(void *)(v171 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v171);
  uint64_t v162 = (uint64_t)&v156 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  unint64_t v178 = (uint64_t)&v156 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v156 - v18;
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  uint64_t v182 = (uint64_t)&v156 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v156 - v23;
  uint64_t v25 = MEMORY[0x270FA5388](v22);
  uint64_t v165 = (uint64_t)&v156 - v26;
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v29 = (char *)&v156 - v28;
  MEMORY[0x270FA5388](v27);
  uint64_t v160 = (uint64_t)&v156 - v30;
  uint64_t v187 = a1;
  uint64_t v31 = a1[1];
  uint64_t result = (void *)sub_251F36AA0();
  if ((uint64_t)result >= v31)
  {
    if (v31 < 0) {
      goto LABEL_161;
    }
    if (v31) {
      return sub_251B32D20(0, v31, 1, v187, a2, a3, v168, v176, v175, v180);
    }
    return result;
  }
  if (v31 >= 0) {
    uint64_t v33 = v31;
  }
  else {
    uint64_t v33 = v31 + 1;
  }
  if (v31 < -1) {
    goto LABEL_175;
  }
  uint64_t v167 = a9;
  uint64_t v177 = a2;
  uint64_t v158 = result;
  unint64_t v170 = v9;
  if (v31 < 2)
  {
    unint64_t v166 = MEMORY[0x263F8EE78]
         + ((*(unsigned __int8 *)(v169 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v169 + 80));
    uint64_t v156 = MEMORY[0x263F8EE78];
    if (v31 != 1)
    {
      uint64_t v38 = (char *)MEMORY[0x263F8EE78];
      unint64_t v39 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_127:
      if (v39 >= 2)
      {
        uint64_t v148 = *v187;
        do
        {
          uint64_t v149 = v39 - 2;
          if (v39 < 2) {
            goto LABEL_156;
          }
          if (!v148) {
            goto LABEL_172;
          }
          uint64_t v150 = v38;
          unint64_t v151 = *(void *)&v38[16 * v149 + 32];
          uint64_t v152 = *(void *)&v38[16 * v39 + 24];
          unint64_t v153 = v170;
          sub_251B32680(v148 + *(void *)(v169 + 72) * v151, v148 + *(void *)(v169 + 72) * *(void *)&v38[16 * v39 + 16], v148 + *(void *)(v169 + 72) * v152, v166, (void (*)(void *__return_ptr, void))v177, a3, v168, v176, v175, v167);
          unint64_t v170 = v153;
          if (v153) {
            break;
          }
          if (v152 < v151) {
            goto LABEL_157;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v150 = sub_251ECDC38((uint64_t)v38);
          }
          if (v149 >= *((void *)v150 + 2)) {
            goto LABEL_158;
          }
          char v154 = &v150[16 * v149 + 32];
          *(void *)char v154 = v151;
          *((void *)v154 + 1) = v152;
          uint64_t v155 = *((void *)v150 + 2);
          if (v39 > v155) {
            goto LABEL_159;
          }
          memmove(&v150[16 * v39 + 16], &v150[16 * v39 + 32], 16 * (v155 - v39));
          *((void *)v150 + 2) = v155 - 1;
          unint64_t v39 = v155 - 1;
          uint64_t v38 = v150;
        }
        while (v155 > 2);
      }
LABEL_138:
      swift_bridgeObjectRelease();
      *(void *)(v156 + 16) = 0;
      return (void *)swift_bridgeObjectRelease();
    }
    uint64_t v181 = v19;
  }
  else
  {
    uint64_t v181 = v19;
    uint64_t v34 = v33 >> 1;
    uint64_t v35 = sub_251F35B50();
    *(void *)(v35 + 16) = v34;
    uint64_t v36 = *(unsigned __int8 *)(v169 + 80);
    uint64_t v156 = v35;
    unint64_t v166 = v35 + ((v36 + 32) & ~v36);
  }
  uint64_t v37 = 0;
  uint64_t v38 = (char *)MEMORY[0x263F8EE78];
  uint64_t v164 = v24;
  char v157 = v29;
  while (1)
  {
    uint64_t v40 = v37;
    uint64_t v41 = v37 + 1;
    unint64_t v174 = v31;
    unint64_t v163 = v37;
    if (v37 + 1 >= v31) {
      goto LABEL_53;
    }
    uint64_t v42 = *v187;
    uint64_t v43 = *(void *)(v169 + 72);
    uint64_t v161 = v37 + 1;
    uint64_t v44 = v42 + v43 * v41;
    uint64_t v45 = v37;
    uint64_t v46 = v160;
    unint64_t v47 = v176;
    sub_251B25B74(v44, v160, v176);
    unint64_t v172 = v42;
    BOOL v179 = v43;
    uint64_t v48 = v42 + v43 * v45;
    uint64_t v49 = (uint64_t)v157;
    sub_251B25B74(v48, (uint64_t)v157, v47);
    ((void (*)(uint64_t *__return_ptr, uint64_t))a2)(&v185, v46);
    unint64_t v50 = (void (*)(uint64_t *__return_ptr, uint64_t))a2;
    char v51 = v186;
    if (!v186) {
      goto LABEL_173;
    }
    uint64_t v52 = v185;
    v50(&v183, v49);
    if (!v184) {
      goto LABEL_174;
    }
    uint64_t v40 = v163;
    if (v52 == v183 && v51 == v184) {
      LODWORD(v173) = 0;
    }
    else {
      LODWORD(v173) = sub_251F36B10();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v53 = v175;
    sub_251B25BDC(v49, v175);
    sub_251B25BDC(v160, v53);
    uint64_t v41 = v40 + 2;
    if (v40 + 2 >= v174)
    {
      a2 = v177;
LABEL_39:
      uint64_t v66 = (char *)v174;
      if (v173)
      {
LABEL_40:
        if (v41 < v40) {
          goto LABEL_162;
        }
        if (v40 < v41)
        {
          uint64_t v159 = v38;
          unint64_t v67 = 0;
          char v68 = v179 * (v41 - 1);
          uint64_t v69 = v41 * v179;
          uint64_t v70 = v40 * v179;
          do
          {
            if (v40 != v41 + v67 - 1)
            {
              uint64_t v72 = v172;
              if (!v172) {
                goto LABEL_171;
              }
              BOOL v73 = v172 + v70;
              uint64_t v173 = v172 + v68;
              sub_251B25C90(v172 + v70, v162, v180);
              if (v70 < v68 || v73 >= v72 + v69)
              {
                char v71 = v173;
                swift_arrayInitWithTakeFrontToBack();
              }
              else
              {
                char v71 = v173;
                if (v70 != v68) {
                  swift_arrayInitWithTakeBackToFront();
                }
              }
              sub_251B25C90(v162, v71, v180);
              a2 = v177;
            }
            ++v40;
            --v67;
            v68 -= v179;
            v69 -= v179;
            v70 += v179;
          }
          while (v40 < v41 + v67);
          uint64_t v38 = v159;
          uint64_t v24 = v164;
          uint64_t v40 = v163;
LABEL_53:
          uint64_t v66 = (char *)v174;
        }
      }
    }
    else
    {
      uint64_t v159 = v38;
      uint64_t v54 = v179 * v161;
      char v55 = v172;
      uint64_t v56 = v179 * v41;
      a2 = v177;
      do
      {
        uint64_t v57 = v41;
        uint64_t v58 = v165;
        uint64_t v59 = v176;
        sub_251B25B74(v55 + v56, v165, v176);
        sub_251B25B74(v55 + v54, (uint64_t)v24, v59);
        ((void (*)(uint64_t *__return_ptr, uint64_t))a2)(&v185, v58);
        uint64_t v60 = (void (*)(uint64_t *__return_ptr, char *))a2;
        uint64_t v61 = v186;
        if (!v186) {
          goto LABEL_169;
        }
        uint64_t v62 = v185;
        v60(&v183, v24);
        if (!v184) {
          goto LABEL_170;
        }
        if (v62 == v183 && v61 == v184) {
          uint64_t v64 = 0;
        }
        else {
          uint64_t v64 = sub_251F36B10();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v65 = v175;
        sub_251B25BDC((uint64_t)v24, v175);
        sub_251B25BDC(v165, v65);
        if ((v173 ^ v64))
        {
          a2 = v177;
          uint64_t v38 = v159;
          uint64_t v41 = v57;
          uint64_t v40 = v163;
          goto LABEL_39;
        }
        uint64_t v41 = v57 + 1;
        v55 += v179;
        a2 = v177;
      }
      while (v174 != v57 + 1);
      uint64_t v66 = (char *)v174;
      uint64_t v41 = v174;
      uint64_t v38 = v159;
      uint64_t v40 = v163;
      if (v173) {
        goto LABEL_40;
      }
    }
    if (v41 >= (uint64_t)v66) {
      goto LABEL_79;
    }
    if (__OFSUB__(v41, v40)) {
      goto LABEL_160;
    }
    if (v41 - v40 >= (uint64_t)v158) {
      goto LABEL_79;
    }
    if (__OFADD__(v40, v158)) {
      goto LABEL_163;
    }
    BOOL v74 = (uint64_t)((char *)v158 + v40) >= (uint64_t)v66 ? v66 : (char *)v158 + v40;
    if ((uint64_t)v74 < v40) {
      break;
    }
    if ((char *)v41 != v74)
    {
      uint64_t v159 = v38;
      uint64_t v75 = *(void *)(v169 + 72);
      uint64_t v76 = v75 * (v41 - 1);
      unint64_t v172 = v75;
      uint64_t v77 = v41 * v75;
      uint64_t v161 = (uint64_t)v74;
      do
      {
        uint64_t v80 = 0;
        uint64_t v173 = v77;
        unint64_t v174 = v41;
        while (1)
        {
          BOOL v179 = v40;
          uint64_t v81 = *v187;
          uint64_t v82 = v182;
          uint64_t v83 = v176;
          sub_251B25B74(v77 + v80 + *v187, v182, v176);
          uint64_t v84 = v76;
          unint64_t v85 = v76 + v80 + v81;
          unint64_t v86 = (uint64_t)v181;
          sub_251B25B74(v85, (uint64_t)v181, v83);
          unint64_t v87 = (void (*)(uint64_t *__return_ptr, uint64_t))v177;
          ((void (*)(uint64_t *__return_ptr, uint64_t))v177)(&v185, v82);
          uint64_t v88 = v186;
          if (!v186) {
            goto LABEL_165;
          }
          uint64_t v89 = v185;
          v87(&v183, v86);
          if (!v184) {
            goto LABEL_166;
          }
          uint64_t v90 = v89 == v183 && v88 == v184;
          uint64_t v76 = v84;
          if (v90) {
            break;
          }
          unint64_t v91 = sub_251F36B10();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v92 = v175;
          sub_251B25BDC((uint64_t)v181, v175);
          sub_251B25BDC(v182, v92);
          if ((v91 & 1) == 0) {
            goto LABEL_65;
          }
          uint64_t v93 = *v187;
          if (!*v187) {
            goto LABEL_167;
          }
          uint64_t v77 = v173;
          uint64_t v94 = v93 + v76 + v80;
          sub_251B25C90(v93 + v173 + v80, v178, v180);
          swift_arrayInitWithTakeFrontToBack();
          sub_251B25C90(v178, v94, v180);
          v80 -= v172;
          uint64_t v40 = v179 + 1;
          uint64_t v79 = v174;
          if (v174 == v179 + 1) {
            goto LABEL_66;
          }
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v78 = v175;
        sub_251B25BDC((uint64_t)v181, v175);
        sub_251B25BDC(v182, v78);
LABEL_65:
        uint64_t v77 = v173;
        uint64_t v79 = v174;
LABEL_66:
        uint64_t v41 = v79 + 1;
        v76 += v172;
        v77 += v172;
        uint64_t v40 = v163;
      }
      while (v41 != v161);
      uint64_t v41 = v161;
      a2 = v177;
      uint64_t v38 = v159;
      uint64_t v24 = v164;
    }
LABEL_79:
    if (v41 < v40) {
      goto LABEL_155;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v174 = v41;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v38 = sub_251ECD5C4(0, *((void *)v38 + 2) + 1, 1, v38);
    }
    uint64_t v97 = *((void *)v38 + 2);
    uint64_t v96 = *((void *)v38 + 3);
    unint64_t v39 = v97 + 1;
    if (v97 >= v96 >> 1) {
      uint64_t v38 = sub_251ECD5C4((char *)(v96 > 1), v97 + 1, 1, v38);
    }
    *((void *)v38 + 2) = v39;
    uint64_t v98 = v38 + 32;
    uint64_t v99 = &v38[16 * v97 + 32];
    uint64_t v100 = v174;
    *(void *)uint64_t v99 = v40;
    *((void *)v99 + 1) = v100;
    if (v97)
    {
      while (1)
      {
        uint64_t v101 = v39 - 1;
        if (v39 >= 4)
        {
          uint64_t v106 = &v98[16 * v39];
          uint64_t v107 = *((void *)v106 - 8);
          uint64_t v108 = *((void *)v106 - 7);
          BOOL v112 = __OFSUB__(v108, v107);
          uint64_t v109 = v108 - v107;
          if (v112) {
            goto LABEL_144;
          }
          uint64_t v111 = *((void *)v106 - 6);
          uint64_t v110 = *((void *)v106 - 5);
          BOOL v112 = __OFSUB__(v110, v111);
          unint64_t v104 = v110 - v111;
          uint64_t v105 = v112;
          if (v112) {
            goto LABEL_145;
          }
          uint64_t v113 = v39 - 2;
          char v114 = &v98[16 * v39 - 32];
          uint64_t v116 = *(void *)v114;
          uint64_t v115 = *((void *)v114 + 1);
          BOOL v112 = __OFSUB__(v115, v116);
          uint64_t v117 = v115 - v116;
          if (v112) {
            goto LABEL_147;
          }
          BOOL v112 = __OFADD__(v104, v117);
          uint64_t v118 = v104 + v117;
          if (v112) {
            goto LABEL_150;
          }
          if (v118 >= v109)
          {
            uint64_t v136 = &v98[16 * v101];
            unint64_t v138 = *(void *)v136;
            uint64_t v137 = *((void *)v136 + 1);
            BOOL v112 = __OFSUB__(v137, v138);
            unint64_t v139 = v137 - v138;
            if (v112) {
              goto LABEL_154;
            }
            uint64_t v129 = v104 < v139;
            goto LABEL_116;
          }
        }
        else
        {
          if (v39 != 3)
          {
            unint64_t v130 = *((void *)v38 + 4);
            uint64_t v131 = *((void *)v38 + 5);
            BOOL v112 = __OFSUB__(v131, v130);
            uint64_t v123 = v131 - v130;
            uint64_t v124 = v112;
            goto LABEL_110;
          }
          unint64_t v103 = *((void *)v38 + 4);
          BOOL v102 = *((void *)v38 + 5);
          BOOL v112 = __OFSUB__(v102, v103);
          unint64_t v104 = v102 - v103;
          uint64_t v105 = v112;
        }
        if (v105) {
          goto LABEL_146;
        }
        uint64_t v113 = v39 - 2;
        BOOL v119 = &v98[16 * v39 - 32];
        uint64_t v121 = *(void *)v119;
        uint64_t v120 = *((void *)v119 + 1);
        uint64_t v122 = __OFSUB__(v120, v121);
        uint64_t v123 = v120 - v121;
        uint64_t v124 = v122;
        if (v122) {
          goto LABEL_149;
        }
        uint64_t v125 = &v98[16 * v101];
        uint64_t v127 = *(void *)v125;
        uint64_t v126 = *((void *)v125 + 1);
        BOOL v112 = __OFSUB__(v126, v127);
        uint64_t v128 = v126 - v127;
        if (v112) {
          goto LABEL_152;
        }
        if (__OFADD__(v123, v128)) {
          goto LABEL_153;
        }
        if (v123 + v128 >= v104)
        {
          uint64_t v129 = v104 < v128;
LABEL_116:
          if (v129) {
            uint64_t v101 = v113;
          }
          goto LABEL_118;
        }
LABEL_110:
        if (v124) {
          goto LABEL_148;
        }
        uint64_t v132 = &v98[16 * v101];
        unint64_t v134 = *(void *)v132;
        uint64_t v133 = *((void *)v132 + 1);
        BOOL v112 = __OFSUB__(v133, v134);
        uint64_t v135 = v133 - v134;
        if (v112) {
          goto LABEL_151;
        }
        if (v135 < v123) {
          goto LABEL_15;
        }
LABEL_118:
        unint64_t v140 = v101 - 1;
        if (v101 - 1 >= v39)
        {
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          __break(1u);
          goto LABEL_164;
        }
        if (!*v187) {
          goto LABEL_168;
        }
        uint64_t v141 = v38;
        unint64_t v142 = &v98[16 * v140];
        uint64_t v143 = *(void *)v142;
        uint64_t v144 = &v98[16 * v101];
        uint64_t v145 = *((void *)v144 + 1);
        uint64_t v146 = v170;
        sub_251B32680(*v187 + *(void *)(v169 + 72) * *(void *)v142, *v187 + *(void *)(v169 + 72) * *(void *)v144, *v187 + *(void *)(v169 + 72) * v145, v166, (void (*)(void *__return_ptr, void))v177, a3, v168, v176, v175, v167);
        unint64_t v170 = v146;
        if (v146) {
          goto LABEL_138;
        }
        if (v145 < v143) {
          goto LABEL_141;
        }
        if (v101 > *((void *)v141 + 2)) {
          goto LABEL_142;
        }
        *(void *)unint64_t v142 = v143;
        *(void *)&v98[16 * v140 + 8] = v145;
        uint64_t v147 = *((void *)v141 + 2);
        if (v101 >= v147) {
          goto LABEL_143;
        }
        uint64_t v38 = v141;
        unint64_t v39 = v147 - 1;
        memmove(&v98[16 * v101], v144 + 16, 16 * (v147 - 1 - v101));
        *((void *)v141 + 2) = v147 - 1;
        a2 = v177;
        uint64_t v24 = v164;
        if (v147 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v39 = 1;
LABEL_15:
    uint64_t v31 = v187[1];
    uint64_t v37 = v174;
    if (v174 >= v31) {
      goto LABEL_127;
    }
  }
LABEL_164:
  __break(1u);
LABEL_165:
  __break(1u);
LABEL_166:
  __break(1u);
LABEL_167:
  __break(1u);
LABEL_168:
  __break(1u);
LABEL_169:
  __break(1u);
LABEL_170:
  __break(1u);
LABEL_171:
  __break(1u);
LABEL_172:
  __break(1u);
LABEL_173:
  __break(1u);
LABEL_174:
  __break(1u);
LABEL_175:
  uint64_t result = (void *)sub_251F36670();
  __break(1u);
  return result;
}

void *sub_251B31160(void **a1, void *(*a2)(uint64_t *__return_ptr), uint64_t a3)
{
  uint64_t v6 = *(void *)(type metadata accessor for StaticActionSet() - 8);
  uint64_t v7 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v7 = (void *)sub_251ECDCEC(v7);
  }
  uint64_t v8 = v7[2];
  v10[0] = (uint64_t)v7 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  v10[1] = v8;
  uint64_t result = sub_251B303FC(v10, a2, a3, (uint64_t (*)(void))type metadata accessor for StaticActionSet, (uint64_t (*)(void))type metadata accessor for StaticActionSet, (uint64_t (*)(void))type metadata accessor for StaticActionSet, (uint64_t (*)(void))type metadata accessor for StaticActionSet, (uint64_t (*)(void))type metadata accessor for StaticActionSet, (void (*)(unint64_t *, unint64_t *, unint64_t *))sub_251ECD7FC);
  *a1 = v7;
  return result;
}

uint64_t sub_251B31298(unint64_t *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticActionSet() - 8;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v30 = (uint64_t)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v31 = (uint64_t)&v27 - v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v27 - v10;
  uint64_t v28 = a1;
  unint64_t v12 = *a1;
  uint64_t v13 = *(void *)(*a1 + 16);
  if (!v13) {
    return 0;
  }
  unint64_t v14 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v15 = *(void *)(v9 + 72);
  swift_bridgeObjectRetain();
  unint64_t v16 = 0;
  unint64_t v29 = v14;
  while ((sub_251D81FB8(v12 + v14, a2) & 1) == 0)
  {
    ++v16;
    v14 += v15;
    if (v13 == v16)
    {
      swift_bridgeObjectRelease();
      return *(void *)(v12 + 16);
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (!__OFADD__(v16, 1))
  {
    unint64_t v18 = *(void *)(v12 + 16);
    if (v16 + 1 == v18) {
      return v16;
    }
    uint64_t v19 = v15 + v14;
    unint64_t v20 = v16 + 1;
    uint64_t v21 = v28;
    while (v20 < v18)
    {
      sub_251B25B74(v12 + v19, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
      char v22 = sub_251D81FB8((uint64_t)v11, a2);
      uint64_t result = sub_251B25BDC((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
      if ((v22 & 1) == 0)
      {
        if (v20 != v16)
        {
          if ((v16 & 0x8000000000000000) != 0) {
            goto LABEL_29;
          }
          unint64_t v23 = *v21;
          unint64_t v24 = *(void *)(*v21 + 16);
          if (v16 >= v24) {
            goto LABEL_30;
          }
          uint64_t result = sub_251B25B74(v23 + v29 + v16 * v15, v31, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
          if (v20 >= v24) {
            goto LABEL_31;
          }
          sub_251B25B74(v23 + v19, v30, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v21 = v28;
          *uint64_t v28 = v23;
          if ((result & 1) == 0)
          {
            uint64_t result = sub_251A925F8(v23);
            unint64_t v23 = result;
            *uint64_t v21 = result;
          }
          if (v16 >= *(void *)(v23 + 16)) {
            goto LABEL_32;
          }
          uint64_t result = sub_251B392A8(v30, v23 + v29 + v16 * v15, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
          if (v20 >= *(void *)(*v21 + 16)) {
            goto LABEL_33;
          }
          uint64_t result = sub_251B392A8(v31, *v21 + v19, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
        }
        if (__OFADD__(v16++, 1)) {
          goto LABEL_28;
        }
      }
      unint64_t v26 = v20 + 1;
      if (__OFADD__(v20, 1)) {
        goto LABEL_27;
      }
      unint64_t v12 = *v21;
      unint64_t v18 = *(void *)(*v21 + 16);
      ++v20;
      v19 += v15;
      if (v26 == v18) {
        return v16;
      }
    }
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_251B315D8(void *a1, void (*a2)(uint64_t), uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void), uint64_t (*a7)(void), uint64_t (*a8)(void), void (*a9)(unint64_t *, unint64_t *, unint64_t *))
{
  unint64_t v163 = a8;
  uint64_t v180 = a7;
  uint64_t v170 = a3;
  unint64_t v171 = a6;
  unint64_t v172 = a2;
  uint64_t v173 = a5;
  uint64_t v165 = a4(0);
  uint64_t v11 = *(void *)(v165 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v165);
  uint64_t v157 = (uint64_t)&v151 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v174 = (uint64_t)&v151 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v181 = (uint64_t)&v151 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v182 = (uint64_t)&v151 - v18;
  uint64_t v19 = a1[1];
  uint64_t result = sub_251F36AA0();
  if (result >= v19)
  {
    if (v19 < 0) {
      goto LABEL_138;
    }
    if (v19) {
      return sub_251B380F8(0, v19, 1, a1, v172, v170, v163, v173, v171, v180);
    }
    return result;
  }
  if (v19 >= 0) {
    uint64_t v21 = v19;
  }
  else {
    uint64_t v21 = v19 + 1;
  }
  if (v19 < -1) {
    goto LABEL_146;
  }
  uint64_t v161 = a9;
  uint64_t v152 = result;
  uint64_t v164 = v9;
  if (v19 < 2)
  {
    uint64_t v25 = (char *)MEMORY[0x263F8EE78];
    unint64_t v160 = MEMORY[0x263F8EE78]
         + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    uint64_t v151 = MEMORY[0x263F8EE78];
    if (v19 != 1)
    {
      unint64_t v27 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_104:
      if (v27 >= 2)
      {
        uint64_t v142 = v11;
        uint64_t v143 = *a1;
        do
        {
          unint64_t v144 = v27 - 2;
          if (v27 < 2) {
            goto LABEL_133;
          }
          if (!v143) {
            goto LABEL_145;
          }
          uint64_t v145 = v25;
          uint64_t v146 = *(void *)&v25[16 * v144 + 32];
          uint64_t v147 = *(void *)&v25[16 * v27 + 24];
          uint64_t v148 = v164;
          sub_251B37994(v143 + *(void *)(v142 + 72) * v146, v143 + *(void *)(v142 + 72) * *(void *)&v25[16 * v27 + 16], (uint64_t *)(v143 + *(void *)(v142 + 72) * v147), v160, v172, v170, v163, v173, v171, v161);
          uint64_t v164 = v148;
          if (v148) {
            break;
          }
          if (v147 < v146) {
            goto LABEL_134;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v145 = sub_251ECDC38((uint64_t)v25);
          }
          if (v144 >= *((void *)v145 + 2)) {
            goto LABEL_135;
          }
          uint64_t v149 = &v145[16 * v144 + 32];
          *(void *)uint64_t v149 = v146;
          *((void *)v149 + 1) = v147;
          unint64_t v150 = *((void *)v145 + 2);
          if (v27 > v150) {
            goto LABEL_136;
          }
          memmove(&v145[16 * v27 + 16], &v145[16 * v27 + 32], 16 * (v150 - v27));
          *((void *)v145 + 2) = v150 - 1;
          unint64_t v27 = v150 - 1;
          uint64_t v25 = v145;
        }
        while (v150 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(void *)(v151 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v22 = v21 >> 1;
    uint64_t v23 = sub_251F35B50();
    *(void *)(v23 + 16) = v22;
    unint64_t v24 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    uint64_t v151 = v23;
    unint64_t v160 = v23 + v24;
  }
  uint64_t v26 = 0;
  uint64_t v25 = (char *)MEMORY[0x263F8EE78];
  uint64_t v162 = v11;
  uint64_t v159 = a1;
  while (1)
  {
    uint64_t v28 = v26;
    uint64_t v29 = v26 + 1;
    uint64_t v158 = v26;
    if (v26 + 1 >= v19)
    {
      uint64_t v45 = v26 + 1;
    }
    else
    {
      unint64_t v153 = v25;
      uint64_t v154 = *a1;
      uint64_t v30 = v154;
      uint64_t v31 = *(void *)(v11 + 72);
      uint64_t v177 = v31;
      uint64_t v32 = v182;
      uint64_t v33 = v173;
      sub_251B25B74(v154 + v31 * v29, v182, v173);
      uint64_t v176 = v19;
      uint64_t v34 = v181;
      sub_251B25B74(v30 + v31 * v28, v181, v33);
      uint64_t v35 = sub_251F34DA0();
      BOOL v179 = &v151;
      uint64_t v36 = *(void *)(v35 - 8);
      uint64_t v37 = *(void *)(v36 + 64);
      MEMORY[0x270FA5388](v35);
      uint64_t v38 = (char *)&v151 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v39 = v32;
      uint64_t v40 = v172;
      uint64_t v41 = ((uint64_t (*)(uint64_t))v172)(v39);
      unint64_t v178 = &v151;
      uint64_t v167 = v37;
      MEMORY[0x270FA5388](v41);
      v40(v34);
      LODWORD(v175) = MEMORY[0x2533A9CA0](v38, v38);
      uint64_t v42 = *(void (**)(char *, uint64_t))(v36 + 8);
      uint64_t v28 = v158;
      v42(v38, v35);
      uint64_t v168 = v36 + 8;
      uint64_t v169 = v35;
      uint64_t v166 = (uint64_t)v42;
      v42(v38, v35);
      uint64_t v43 = v34;
      uint64_t v19 = v176;
      uint64_t v44 = v171;
      sub_251B25BDC(v43, v171);
      sub_251B25BDC(v182, v44);
      uint64_t v45 = v28 + 2;
      if (v28 + 2 >= v19)
      {
        uint64_t v11 = v162;
      }
      else
      {
        uint64_t v156 = v177 * v29;
        uint64_t v46 = v154;
        uint64_t v155 = v177 * v45;
        while (1)
        {
          uint64_t v47 = v182;
          uint64_t v48 = v173;
          sub_251B25B74(v46 + v155, v182, v173);
          uint64_t v49 = v181;
          uint64_t v50 = sub_251B25B74(v46 + v156, v181, v48);
          BOOL v179 = &v151;
          uint64_t v51 = v167;
          MEMORY[0x270FA5388](v50);
          uint64_t v52 = (char *)&v151 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
          uint64_t v53 = v172;
          uint64_t v54 = ((uint64_t (*)(uint64_t))v172)(v47);
          unint64_t v178 = &v151;
          MEMORY[0x270FA5388](v54);
          v53(v49);
          int v55 = MEMORY[0x2533A9CA0](v52, v52);
          uint64_t v56 = v169;
          uint64_t v57 = (void (*)(char *, uint64_t))v166;
          ((void (*)(char *, uint64_t))v166)(v52, v169);
          v57(v52, v56);
          uint64_t v58 = v171;
          sub_251B25BDC(v49, v171);
          sub_251B25BDC(v47, v58);
          if ((v175 ^ v55)) {
            break;
          }
          ++v45;
          v46 += v177;
          if (v176 == v45)
          {
            uint64_t v19 = v176;
            uint64_t v45 = v176;
            uint64_t v11 = v162;
            uint64_t v28 = v158;
            goto LABEL_24;
          }
        }
        uint64_t v11 = v162;
        uint64_t v28 = v158;
        uint64_t v19 = v176;
      }
LABEL_24:
      a1 = v159;
      uint64_t v25 = v153;
      if (v175)
      {
        uint64_t v59 = v177;
        if (v45 < v28) {
          goto LABEL_139;
        }
        if (v28 < v45)
        {
          uint64_t v60 = 0;
          uint64_t v61 = v177 * (v45 - 1);
          uint64_t v62 = v45 * v177;
          uint64_t v63 = v28;
          uint64_t v64 = v28 * v177;
          do
          {
            if (v63 != v45 + v60 - 1)
            {
              uint64_t v65 = v154;
              if (!v154) {
                goto LABEL_144;
              }
              unint64_t v66 = v154 + v64;
              uint64_t v67 = v154 + v61;
              sub_251B25C90(v154 + v64, v157, v180);
              if (v64 < v61 || v66 >= v65 + v62)
              {
                swift_arrayInitWithTakeFrontToBack();
                uint64_t v59 = v177;
              }
              else
              {
                uint64_t v59 = v177;
                if (v64 != v61) {
                  swift_arrayInitWithTakeBackToFront();
                }
              }
              sub_251B25C90(v157, v67, v180);
              uint64_t v28 = v158;
            }
            ++v63;
            --v60;
            v61 -= v59;
            v62 -= v59;
            v64 += v59;
          }
          while (v63 < v45 + v60);
          uint64_t v11 = v162;
          a1 = v159;
          uint64_t v25 = v153;
          uint64_t v19 = v176;
        }
      }
    }
    if (v45 < v19)
    {
      if (__OFSUB__(v45, v28)) {
        goto LABEL_137;
      }
      if (v45 - v28 < v152) {
        break;
      }
    }
LABEL_56:
    if (v45 < v28) {
      goto LABEL_132;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v25 = sub_251ECD5C4(0, *((void *)v25 + 2) + 1, 1, v25);
    }
    unint64_t v91 = *((void *)v25 + 2);
    unint64_t v90 = *((void *)v25 + 3);
    unint64_t v27 = v91 + 1;
    if (v91 >= v90 >> 1) {
      uint64_t v25 = sub_251ECD5C4((char *)(v90 > 1), v91 + 1, 1, v25);
    }
    *((void *)v25 + 2) = v27;
    uint64_t v92 = v25 + 32;
    uint64_t v93 = &v25[16 * v91 + 32];
    *(void *)uint64_t v93 = v28;
    *((void *)v93 + 1) = v45;
    uint64_t v169 = v45;
    if (v91)
    {
      while (1)
      {
        unint64_t v94 = v27 - 1;
        if (v27 >= 4)
        {
          uint64_t v99 = &v92[16 * v27];
          uint64_t v100 = *((void *)v99 - 8);
          uint64_t v101 = *((void *)v99 - 7);
          BOOL v105 = __OFSUB__(v101, v100);
          uint64_t v102 = v101 - v100;
          if (v105) {
            goto LABEL_121;
          }
          uint64_t v104 = *((void *)v99 - 6);
          uint64_t v103 = *((void *)v99 - 5);
          BOOL v105 = __OFSUB__(v103, v104);
          uint64_t v97 = v103 - v104;
          char v98 = v105;
          if (v105) {
            goto LABEL_122;
          }
          unint64_t v106 = v27 - 2;
          uint64_t v107 = &v92[16 * v27 - 32];
          uint64_t v109 = *(void *)v107;
          uint64_t v108 = *((void *)v107 + 1);
          BOOL v105 = __OFSUB__(v108, v109);
          uint64_t v110 = v108 - v109;
          if (v105) {
            goto LABEL_124;
          }
          BOOL v105 = __OFADD__(v97, v110);
          uint64_t v111 = v97 + v110;
          if (v105) {
            goto LABEL_127;
          }
          if (v111 >= v102)
          {
            uint64_t v129 = &v92[16 * v94];
            uint64_t v131 = *(void *)v129;
            uint64_t v130 = *((void *)v129 + 1);
            BOOL v105 = __OFSUB__(v130, v131);
            uint64_t v132 = v130 - v131;
            if (v105) {
              goto LABEL_131;
            }
            BOOL v122 = v97 < v132;
            goto LABEL_93;
          }
        }
        else
        {
          if (v27 != 3)
          {
            uint64_t v123 = *((void *)v25 + 4);
            uint64_t v124 = *((void *)v25 + 5);
            BOOL v105 = __OFSUB__(v124, v123);
            uint64_t v116 = v124 - v123;
            char v117 = v105;
            goto LABEL_87;
          }
          uint64_t v96 = *((void *)v25 + 4);
          uint64_t v95 = *((void *)v25 + 5);
          BOOL v105 = __OFSUB__(v95, v96);
          uint64_t v97 = v95 - v96;
          char v98 = v105;
        }
        if (v98) {
          goto LABEL_123;
        }
        unint64_t v106 = v27 - 2;
        BOOL v112 = &v92[16 * v27 - 32];
        uint64_t v114 = *(void *)v112;
        uint64_t v113 = *((void *)v112 + 1);
        BOOL v115 = __OFSUB__(v113, v114);
        uint64_t v116 = v113 - v114;
        char v117 = v115;
        if (v115) {
          goto LABEL_126;
        }
        uint64_t v118 = &v92[16 * v94];
        uint64_t v120 = *(void *)v118;
        uint64_t v119 = *((void *)v118 + 1);
        BOOL v105 = __OFSUB__(v119, v120);
        uint64_t v121 = v119 - v120;
        if (v105) {
          goto LABEL_129;
        }
        if (__OFADD__(v116, v121)) {
          goto LABEL_130;
        }
        if (v116 + v121 >= v97)
        {
          BOOL v122 = v97 < v121;
LABEL_93:
          if (v122) {
            unint64_t v94 = v106;
          }
          goto LABEL_95;
        }
LABEL_87:
        if (v117) {
          goto LABEL_125;
        }
        uint64_t v125 = &v92[16 * v94];
        uint64_t v127 = *(void *)v125;
        uint64_t v126 = *((void *)v125 + 1);
        BOOL v105 = __OFSUB__(v126, v127);
        uint64_t v128 = v126 - v127;
        if (v105) {
          goto LABEL_128;
        }
        if (v128 < v116) {
          goto LABEL_14;
        }
LABEL_95:
        unint64_t v133 = v94 - 1;
        if (v94 - 1 >= v27)
        {
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
          goto LABEL_141;
        }
        uint64_t v134 = *a1;
        if (!*a1) {
          goto LABEL_143;
        }
        uint64_t v135 = v25;
        uint64_t v136 = &v92[16 * v133];
        uint64_t v137 = *(void *)v136;
        unint64_t v138 = &v92[16 * v94];
        uint64_t v139 = *((void *)v138 + 1);
        uint64_t v140 = v164;
        sub_251B37994(v134 + *(void *)(v162 + 72) * *(void *)v136, v134 + *(void *)(v162 + 72) * *(void *)v138, (uint64_t *)(v134 + *(void *)(v162 + 72) * v139), v160, v172, v170, v163, v173, v171, v161);
        uint64_t v164 = v140;
        if (v140) {
          goto LABEL_115;
        }
        if (v139 < v137) {
          goto LABEL_118;
        }
        if (v94 > *((void *)v135 + 2)) {
          goto LABEL_119;
        }
        *(void *)uint64_t v136 = v137;
        *(void *)&v92[16 * v133 + 8] = v139;
        unint64_t v141 = *((void *)v135 + 2);
        if (v94 >= v141) {
          goto LABEL_120;
        }
        uint64_t v25 = v135;
        unint64_t v27 = v141 - 1;
        memmove(&v92[16 * v94], v138 + 16, 16 * (v141 - 1 - v94));
        *((void *)v135 + 2) = v141 - 1;
        a1 = v159;
        if (v141 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v27 = 1;
LABEL_14:
    uint64_t v19 = a1[1];
    uint64_t v26 = v169;
    uint64_t v11 = v162;
    if (v169 >= v19) {
      goto LABEL_104;
    }
  }
  if (__OFADD__(v28, v152)) {
    goto LABEL_140;
  }
  if (v28 + v152 >= v19) {
    uint64_t v68 = v19;
  }
  else {
    uint64_t v68 = v28 + v152;
  }
  if (v68 >= v28)
  {
    if (v45 != v68)
    {
      unint64_t v153 = v25;
      uint64_t v69 = *(void *)(v11 + 72);
      uint64_t v70 = v69 * (v45 - 1);
      uint64_t v166 = v69;
      uint64_t v71 = v45 * v69;
      uint64_t v156 = v68;
      do
      {
        uint64_t v73 = 0;
        uint64_t v168 = v70;
        uint64_t v169 = v45;
        uint64_t v167 = v71;
        while (1)
        {
          uint64_t v74 = *a1;
          uint64_t v176 = v71 + v73;
          uint64_t v177 = v28;
          uint64_t v75 = v71 + v73 + v74;
          uint64_t v76 = v182;
          uint64_t v77 = v173;
          sub_251B25B74(v75, v182, v173);
          uint64_t v175 = v70 + v73;
          sub_251B25B74(v70 + v73 + v74, v181, v77);
          uint64_t v78 = sub_251F34DA0();
          BOOL v179 = &v151;
          uint64_t v79 = a1;
          uint64_t v80 = *(void *)(v78 - 8);
          uint64_t v81 = *(void *)(v80 + 64);
          MEMORY[0x270FA5388](v78);
          uint64_t v82 = v172;
          uint64_t v83 = ((uint64_t (*)(uint64_t))v172)(v76);
          unint64_t v178 = &v151;
          MEMORY[0x270FA5388](v83);
          uint64_t v84 = (char *)&v151 - ((v81 + 15) & 0xFFFFFFFFFFFFFFF0);
          uint64_t v85 = v181;
          v82(v181);
          LOBYTE(v76) = MEMORY[0x2533A9CA0](v84, v84);
          unint64_t v86 = *(void (**)(char *, uint64_t))(v80 + 8);
          v86(v84, v78);
          v86(v84, v78);
          unint64_t v87 = v171;
          sub_251B25BDC(v85, v171);
          sub_251B25BDC(v182, v87);
          if ((v76 & 1) == 0) {
            break;
          }
          uint64_t v88 = *v79;
          if (!*v79) {
            goto LABEL_142;
          }
          a1 = v79;
          uint64_t v71 = v167;
          uint64_t v70 = v168;
          uint64_t v89 = v88 + v168 + v73;
          sub_251B25C90(v88 + v167 + v73, v174, v180);
          uint64_t v72 = v169;
          swift_arrayInitWithTakeFrontToBack();
          sub_251B25C90(v174, v89, v180);
          v73 -= v166;
          uint64_t v28 = v177 + 1;
          if (v72 == v177 + 1) {
            goto LABEL_49;
          }
        }
        a1 = v79;
        uint64_t v70 = v168;
        uint64_t v72 = v169;
        uint64_t v71 = v167;
LABEL_49:
        uint64_t v45 = v72 + 1;
        v70 += v166;
        v71 += v166;
        uint64_t v28 = v158;
      }
      while (v45 != v156);
      uint64_t v45 = v156;
      uint64_t v25 = v153;
    }
    goto LABEL_56;
  }
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  uint64_t result = sub_251F36670();
  __break(1u);
  return result;
}

uint64_t sub_251B323D0(void **a1, void (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v6 = *(void *)(type metadata accessor for StaticActionSet() - 8);
  uint64_t v7 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v7 = (void *)sub_251ECDCEC(v7);
  }
  uint64_t v8 = v7[2];
  v10[0] = (char *)v7 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  v10[1] = v8;
  uint64_t result = sub_251B315D8(v10, a2, a3, (uint64_t (*)(void))type metadata accessor for StaticActionSet, (uint64_t (*)(void))type metadata accessor for StaticActionSet, (uint64_t (*)(void))type metadata accessor for StaticActionSet, (uint64_t (*)(void))type metadata accessor for StaticActionSet, (uint64_t (*)(void))type metadata accessor for StaticActionSet, (void (*)(unint64_t *, unint64_t *, unint64_t *))sub_251ECD7FC);
  *a1 = v7;
  return result;
}

uint64_t sub_251B32508(void **a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v8 = *(void *)(type metadata accessor for StaticRoom(0) - 8);
  uint64_t v9 = *a1;
  swift_bridgeObjectRetain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v9 = (void *)sub_251ECDD00(v9);
  }
  uint64_t v10 = v9[2];
  v12[0] = (uint64_t)v9 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  v12[1] = v10;
  swift_bridgeObjectRetain();
  sub_251B2EFC4(v12, a2, a3, a4, type metadata accessor for StaticRoom, type metadata accessor for StaticRoom, type metadata accessor for StaticRoom, type metadata accessor for StaticRoom, type metadata accessor for StaticRoom, (void (*)(unint64_t *, unint64_t *, unint64_t *))sub_251ECD814);
  swift_bridgeObjectRelease();
  *a1 = v9;
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_251B32680(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, void (*a5)(void *__return_ptr, void), uint64_t a6, uint64_t (*a7)(void), uint64_t (*a8)(void), uint64_t (*a9)(void), void (*a10)(unint64_t *, unint64_t *, unint64_t *))
{
  void (*v33)(uint64_t *__return_ptr, char *);
  uint64_t v34;
  char v36;
  uint64_t (*v37)(void);
  unint64_t v38;
  unint64_t v39;
  uint64_t (*v40)(void);
  unint64_t v41;
  unint64_t v42;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(void);
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v55;
  unint64_t v56;
  uint64_t (*v57)(void);
  unint64_t v58;
  unint64_t v59;
  uint64_t result;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  void (*v65)(void *__return_ptr, void);
  uint64_t (*v66)(void);
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t (*v70)(void);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;

  uint64_t v69 = a6;
  uint64_t v70 = a8;
  uint64_t v64 = a7(0);
  uint64_t v15 = MEMORY[0x270FA5388](v64);
  uint64_t v68 = (unint64_t)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v67 = (uint64_t)&v61 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v61 - v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v61 - v22;
  uint64_t v71 = *(void *)(v24 + 72);
  if (!v71)
  {
    __break(1u);
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }
  if (a2 - a1 == 0x8000000000000000 && v71 == -1) {
    goto LABEL_76;
  }
  int64_t v25 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v71 == -1)
  {
LABEL_77:
    __break(1u);
LABEL_78:
    __break(1u);
    goto LABEL_79;
  }
  uint64_t v65 = a5;
  unint64_t v66 = a9;
  uint64_t v26 = (uint64_t)(a2 - a1) / v71;
  uint64_t v78 = a1;
  uint64_t v77 = a4;
  uint64_t v27 = v25 / v71;
  if (v26 >= v25 / v71)
  {
    if (v27 < 0) {
      goto LABEL_82;
    }
    uint64_t v29 = v27 * v71;
    if (a4 < a2 || a2 + v29 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a2)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    uint64_t v42 = a4 + v29;
    uint64_t v76 = a4 + v29;
    uint64_t v78 = a2;
    if (v29 < 1 || a1 >= a2)
    {
LABEL_74:
      a10(&v78, &v77, &v76);
      return 1;
    }
    uint64_t v44 = -v71;
    uint64_t v62 = a1;
    uint64_t v63 = a4;
    while (1)
    {
      uint64_t v45 = a3;
      uint64_t v46 = v67;
      uint64_t v47 = v70;
      uint64_t v48 = v44;
      sub_251B25B74(v42 + v44, v67, v70);
      uint64_t v49 = v48;
      uint64_t v50 = a2 + v48;
      uint64_t v51 = v68;
      sub_251B25B74(v50, v68, v47);
      a5(&v74, v46);
      uint64_t v52 = v75;
      if (!v75) {
        break;
      }
      uint64_t v53 = v74;
      a5(&v72, v51);
      if (!v73) {
        goto LABEL_81;
      }
      if (v53 == v72 && v52 == v73) {
        int v55 = 0;
      }
      else {
        int v55 = sub_251F36B10();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v56 = v45 + v49;
      uint64_t v57 = v66;
      sub_251B25BDC(v68, v66);
      sub_251B25BDC(v67, v57);
      if (v55)
      {
        a5 = v65;
        if (v45 < a2 || v56 >= a2)
        {
          swift_arrayInitWithTakeFrontToBack();
          uint64_t v58 = v62;
        }
        else
        {
          uint64_t v58 = v62;
          if (v45 != a2) {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        uint64_t v44 = v49;
        v78 += v49;
      }
      else
      {
        uint64_t v59 = v76;
        v76 += v49;
        a5 = v65;
        if (v45 < v59 || v56 >= v59)
        {
          swift_arrayInitWithTakeFrontToBack();
          uint64_t v44 = v49;
          uint64_t v50 = a2;
          uint64_t v58 = v62;
        }
        else
        {
          uint64_t v58 = v62;
          if (v45 != v59) {
            swift_arrayInitWithTakeBackToFront();
          }
          uint64_t v44 = v49;
          uint64_t v50 = a2;
        }
      }
      uint64_t v42 = v76;
      if (v76 > v63)
      {
        a2 = v50;
        a3 = v45 + v49;
        if (v50 > v58) {
          continue;
        }
      }
      goto LABEL_74;
    }
LABEL_79:
    __break(1u);
LABEL_80:
    __break(1u);
LABEL_81:
    __break(1u);
    goto LABEL_82;
  }
  if ((v26 & 0x8000000000000000) == 0)
  {
    uint64_t v28 = v26 * v71;
    if (a4 < a1 || a1 + v28 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    uint64_t v68 = a4 + v28;
    uint64_t v76 = a4 + v28;
    if (v28 >= 1 && a2 < a3)
    {
      while (1)
      {
        uint64_t v31 = v70;
        sub_251B25B74(a2, (uint64_t)v23, v70);
        sub_251B25B74(a4, (uint64_t)v21, v31);
        a5(&v74, v23);
        uint64_t v32 = v75;
        if (!v75) {
          goto LABEL_78;
        }
        uint64_t v33 = (void (*)(uint64_t *__return_ptr, char *))a5;
        uint64_t v34 = v74;
        v33(&v72, v21);
        if (!v73) {
          goto LABEL_80;
        }
        if (v34 == v72 && v32 == v73) {
          break;
        }
        uint64_t v36 = sub_251F36B10();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v37 = v66;
        sub_251B25BDC((uint64_t)v21, v66);
        sub_251B25BDC((uint64_t)v23, v37);
        if ((v36 & 1) == 0) {
          goto LABEL_34;
        }
        uint64_t v38 = v78;
        uint64_t v39 = a2 + v71;
        if (v78 < a2 || v78 >= v39)
        {
          swift_arrayInitWithTakeFrontToBack();
          a5 = v65;
        }
        else
        {
          a5 = v65;
          if (v78 == a2) {
            uint64_t v38 = a2;
          }
          else {
            swift_arrayInitWithTakeBackToFront();
          }
        }
LABEL_40:
        uint64_t v78 = v38 + v71;
        a4 = v77;
        if (v77 < v68)
        {
          a2 = v39;
          if (v39 < a3) {
            continue;
          }
        }
        goto LABEL_74;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v40 = v66;
      sub_251B25BDC((uint64_t)v21, v66);
      sub_251B25BDC((uint64_t)v23, v40);
LABEL_34:
      uint64_t v38 = v78;
      uint64_t v41 = v77 + v71;
      if (v78 < v77 || v78 >= v41)
      {
        swift_arrayInitWithTakeFrontToBack();
        a5 = v65;
      }
      else
      {
        a5 = v65;
        if (v78 != v77) {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      uint64_t v77 = v41;
      uint64_t v39 = a2;
      goto LABEL_40;
    }
    goto LABEL_74;
  }
LABEL_82:
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

void *sub_251B32D20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, void *(*a5)(uint64_t *__return_ptr), uint64_t a6, uint64_t (*a7)(void), uint64_t (*a8)(void), uint64_t (*a9)(void), uint64_t (*a10)(void))
{
  void *(*v28)(uint64_t *__return_ptr);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v35;
  uint64_t (*v36)(void);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(void);
  void *(*v44)(uint64_t *__return_ptr);
  uint64_t (*v45)(void);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(void);
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  uint64_t v44 = a5;
  uint64_t v45 = a8;
  uint64_t v52 = a4;
  uint64_t v41 = a1;
  uint64_t v42 = a7(0);
  uint64_t v12 = MEMORY[0x270FA5388](v42);
  uint64_t v50 = (uint64_t)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v39 - v15;
  uint64_t result = (void *)MEMORY[0x270FA5388](v14);
  uint64_t v20 = (char *)&v39 - v19;
  uint64_t v48 = a3;
  uint64_t v40 = a2;
  if (a3 != a2)
  {
    uint64_t v49 = a10;
    uint64_t v43 = a9;
    uint64_t v21 = *(void *)(v18 + 72);
    uint64_t v22 = v21 * (v48 - 1);
    uint64_t v46 = v21;
    uint64_t v23 = v21 * v48;
LABEL_6:
    uint64_t v25 = 0;
    uint64_t v57 = v41;
    uint64_t v47 = v23;
    while (1)
    {
      uint64_t v26 = *v52;
      uint64_t v51 = v23 + v25;
      uint64_t v27 = v45;
      sub_251B25B74(v23 + v25 + v26, (uint64_t)v20, v45);
      sub_251B25B74(v22 + v25 + v26, (uint64_t)v16, v27);
      uint64_t v28 = v44;
      ((void (*)(uint64_t *__return_ptr, char *))v44)(&v55, v20);
      uint64_t result = v16;
      uint64_t v29 = v56;
      if (!v56) {
        break;
      }
      uint64_t v30 = v22;
      uint64_t v31 = (uint64_t)v20;
      uint64_t v32 = v55;
      uint64_t v33 = (uint64_t)result;
      uint64_t result = v28(&v53);
      if (!v54) {
        goto LABEL_18;
      }
      if (v32 == v53 && v29 == v54)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v16 = (char *)v33;
        uint64_t v24 = v43;
        sub_251B25BDC(v33, v43);
        uint64_t v20 = (char *)v31;
        uint64_t result = (void *)sub_251B25BDC(v31, v24);
        uint64_t v22 = v30;
        uint64_t v23 = v47;
LABEL_5:
        v22 += v46;
        v23 += v46;
        if (++v48 == v40) {
          return result;
        }
        goto LABEL_6;
      }
      uint64_t v35 = sub_251F36B10();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v16 = (char *)v33;
      uint64_t v36 = v43;
      sub_251B25BDC(v33, v43);
      uint64_t v20 = (char *)v31;
      uint64_t result = (void *)sub_251B25BDC(v31, v36);
      uint64_t v22 = v30;
      uint64_t v23 = v47;
      if (v35)
      {
        uint64_t v37 = *v52;
        if (!*v52) {
          goto LABEL_19;
        }
        uint64_t v38 = v37 + v22 + v25;
        sub_251B25C90(v37 + v47 + v25, v50, v49);
        swift_arrayInitWithTakeFrontToBack();
        uint64_t result = (void *)sub_251B25C90(v50, v38, v49);
        v25 -= v46;
        if (v48 != ++v57) {
          continue;
        }
      }
      goto LABEL_5;
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
  }
  return result;
}

void *sub_251B33064(void **a1, void *(*a2)(uint64_t *__return_ptr), uint64_t a3)
{
  uint64_t v6 = *(void *)(type metadata accessor for StaticRoom(0) - 8);
  uint64_t v7 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v7 = (void *)sub_251ECDD00(v7);
  }
  uint64_t v8 = v7[2];
  v10[0] = (uint64_t)v7 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  v10[1] = v8;
  uint64_t result = sub_251B303FC(v10, a2, a3, type metadata accessor for StaticRoom, type metadata accessor for StaticRoom, type metadata accessor for StaticRoom, type metadata accessor for StaticRoom, type metadata accessor for StaticRoom, (void (*)(unint64_t *, unint64_t *, unint64_t *))sub_251ECD814);
  *a1 = v7;
  return result;
}

uint64_t sub_251B3319C(void **a1, void (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v6 = *(void *)(type metadata accessor for StaticRoom(0) - 8);
  uint64_t v7 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v7 = (void *)sub_251ECDD00(v7);
  }
  uint64_t v8 = v7[2];
  v10[0] = (char *)v7 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  v10[1] = v8;
  uint64_t result = sub_251B315D8(v10, a2, a3, type metadata accessor for StaticRoom, type metadata accessor for StaticRoom, type metadata accessor for StaticRoom, type metadata accessor for StaticRoom, type metadata accessor for StaticRoom, (void (*)(unint64_t *, unint64_t *, unint64_t *))sub_251ECD814);
  *a1 = v7;
  return result;
}

uint64_t sub_251B332D4(void **a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v8 = *a1;
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v8 = (void *)sub_251ECDDB4(v8);
  }
  uint64_t v9 = v8[2];
  uint64_t v10 = *(void *)(type metadata accessor for StaticCameraProfile() - 8);
  v12[0] = (uint64_t)v8 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
  v12[1] = v9;
  swift_bridgeObjectRetain();
  sub_251B347A8(v12, a2, a3, a4, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile, (void (*)(unint64_t *, unint64_t *, unint64_t *))sub_251ECDAC4);
  swift_bridgeObjectRelease();
  *a1 = v8;
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_251B33444(uint64_t *a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v9 = type metadata accessor for StaticCameraProfile();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain_n();
  char v13 = sub_251B332D4((void **)a1, a2, a3, a4);
  swift_bridgeObjectRelease();
  if (v4 || (v13 & 1) == 0) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v15 = (void *)*a1;
  uint64_t v27 = (void *)*a1;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_251B33444(&v27, a2, a3, a4);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v16 = v27;
  uint64_t v26 = v15[2];
  if (v26)
  {
    unint64_t v17 = 0;
    uint64_t v18 = v27[2];
    uint64_t v24 = v27;
    uint64_t v25 = v18;
    while (v25 != v17)
    {
      if (v17 >= v16[2])
      {
        __break(1u);
LABEL_16:
        __break(1u);
        return result;
      }
      unint64_t v19 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      uint64_t v20 = (char *)v16 + v19;
      uint64_t v21 = v10;
      uint64_t v22 = *(void *)(v10 + 72) * v17;
      sub_251B25B74((uint64_t)&v20[v22], (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      *a1 = (uint64_t)v15;
      if ((result & 1) == 0)
      {
        uint64_t result = sub_251ECDDB4(v15);
        uint64_t v15 = (void *)result;
        *a1 = result;
      }
      if (v17 >= v15[2]) {
        goto LABEL_16;
      }
      ++v17;
      uint64_t result = sub_251B392A8((uint64_t)v12, (uint64_t)v15 + v19 + v22, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
      uint64_t v15 = (void *)*a1;
      uint64_t v10 = v21;
      uint64_t v16 = v24;
      if (v26 == v17) {
        break;
      }
    }
  }
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_251B33690(unint64_t *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticCameraProfile();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v42 = (uint64_t)v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v41 = (uint64_t)v40 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v40 - v10;
  uint64_t v43 = a1;
  unint64_t v12 = *a1;
  uint64_t v13 = *(void *)(*a1 + 16);
  swift_bridgeObjectRetain();
  uint64_t v44 = v13;
  if (v13)
  {
    unint64_t v14 = 0;
    unint64_t v15 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    unint64_t v16 = v12 + v15;
    uint64_t v17 = *(void *)(v5 + 72);
    unint64_t v46 = v15;
    uint64_t v18 = a2 + v15;
    uint64_t v45 = a2 + v15;
    v40[0] = v12 + v15;
LABEL_3:
    uint64_t v19 = v16 + v17 * v14;
    uint64_t v20 = *(void *)(a2 + 16);
    swift_bridgeObjectRetain();
    uint64_t v21 = v20 + 1;
    uint64_t v22 = v18;
    do
    {
      if (!--v21)
      {
        swift_bridgeObjectRelease();
        ++v14;
        uint64_t v18 = v45;
        unint64_t v16 = v40[0];
        if (v14 != v44) {
          goto LABEL_3;
        }
        goto LABEL_8;
      }
      uint64_t v23 = v22 + v17;
      char v24 = _s13HomeDataModel19StaticCameraProfileV2eeoiySbAC_ACtFZ_0(v22, v19);
      uint64_t v22 = v23;
    }
    while ((v24 & 1) == 0);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    int64_t v26 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_40:
      __break(1u);
      return result;
    }
    uint64_t v44 = v20 + 1;
    uint64_t v27 = v43;
    unint64_t v28 = v46;
    v40[2] = a2;
LABEL_15:
    while (1)
    {
      unint64_t v30 = *(void *)(*v27 + 16);
      if (v26 == v30) {
        break;
      }
      if (v26 >= v30)
      {
        __break(1u);
LABEL_33:
        __break(1u);
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        goto LABEL_40;
      }
      uint64_t v31 = v26 * v17;
      sub_251B25B74(*v27 + v28 + v26 * v17, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
      swift_bridgeObjectRetain();
      uint64_t v33 = v44;
      uint64_t v32 = v45;
      while (--v33)
      {
        uint64_t v34 = v32 + v17;
        char v35 = _s13HomeDataModel19StaticCameraProfileV2eeoiySbAC_ACtFZ_0(v32, (uint64_t)v11);
        uint64_t v32 = v34;
        if (v35)
        {
          swift_bridgeObjectRelease();
          uint64_t result = sub_251B25BDC((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
          unint64_t v28 = v46;
          BOOL v29 = __OFADD__(v26++, 1);
          if (v29) {
            goto LABEL_33;
          }
          goto LABEL_15;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t result = sub_251B25BDC((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
      unint64_t v28 = v46;
      if (v14 != v26)
      {
        if ((v14 & 0x8000000000000000) != 0) {
          goto LABEL_35;
        }
        unint64_t v36 = *v27;
        unint64_t v37 = *(void *)(v36 + 16);
        if (v14 >= v37) {
          goto LABEL_36;
        }
        unint64_t v38 = v36 + v46;
        uint64_t result = sub_251B25B74(v36 + v46 + v14 * v17, v41, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
        if (v26 >= (uint64_t)v37) {
          goto LABEL_37;
        }
        sub_251B25B74(v38 + v31, v42, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        *uint64_t v43 = v36;
        if ((result & 1) == 0)
        {
          uint64_t result = sub_251A926B0(v36);
          unint64_t v36 = result;
          *uint64_t v43 = result;
        }
        if (v14 >= *(void *)(v36 + 16)) {
          goto LABEL_38;
        }
        unint64_t v39 = v46;
        uint64_t result = sub_251B392A8(v42, v36 + v46 + v14 * v17, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
        uint64_t v27 = v43;
        if (v26 >= *(void *)(*v43 + 16)) {
          goto LABEL_39;
        }
        uint64_t result = sub_251B392A8(v41, *v43 + v39 + v31, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
        unint64_t v28 = v39;
      }
      BOOL v29 = __OFADD__(v14++, 1);
      if (v29) {
        goto LABEL_34;
      }
      BOOL v29 = __OFADD__(v26++, 1);
      if (v29) {
        goto LABEL_33;
      }
    }
  }
  else
  {
LABEL_8:
    swift_bridgeObjectRelease();
    return *(void *)(v12 + 16);
  }
  return v14;
}

uint64_t sub_251B33A80(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5, void (*a6)(unint64_t), uint64_t a7, uint64_t (*a8)(void), uint64_t (*a9)(void), uint64_t (*a10)(void), void (*a11)(unint64_t *, unint64_t *, unint64_t *))
{
  uint64_t v85 = a6;
  uint64_t v71 = a5;
  uint64_t v72 = a8(0);
  uint64_t v15 = MEMORY[0x270FA5388](v72);
  unint64_t v78 = (unint64_t)&v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  unint64_t v80 = (unint64_t)&v67 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v77 = (uint64_t)&v67 - v20;
  MEMORY[0x270FA5388](v19);
  unint64_t v79 = (unint64_t)&v67 - v21;
  uint64_t v23 = *(void *)(v22 + 72);
  if (!v23)
  {
LABEL_87:
    __break(1u);
LABEL_88:
    __break(1u);
LABEL_89:
    __break(1u);
    goto LABEL_90;
  }
  if (a2 - a1 == 0x8000000000000000 && v23 == -1) {
    goto LABEL_88;
  }
  int64_t v24 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v23 == -1) {
    goto LABEL_89;
  }
  uint64_t v74 = a10;
  uint64_t v75 = a9;
  uint64_t v25 = (uint64_t)(a2 - a1) / v23;
  unint64_t v88 = a1;
  unint64_t v87 = a4;
  uint64_t v26 = v24 / v23;
  if (v25 >= v24 / v23)
  {
    if ((v26 & 0x8000000000000000) == 0)
    {
      uint64_t v28 = v26 * v23;
      if (a4 < a2 || a2 + v28 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v46 = a4 + v28;
      unint64_t v86 = a4 + v28;
      unint64_t v88 = a2;
      if (v28 >= 1 && a1 < a2)
      {
        uint64_t v82 = *(void *)(v71 + 16);
        uint64_t v48 = -v23;
        uint64_t v77 = -v23;
        unint64_t v69 = a4;
        unint64_t v70 = a1;
        do
        {
          uint64_t v49 = v75;
          sub_251B25B74(v46 + v48, v80, v75);
          sub_251B25B74(a2 + v48, v78, v49);
          unint64_t v79 = a2 + v48;
          if (v82)
          {
            unint64_t v76 = a2;
            unint64_t v73 = a3;
            uint64_t v50 = sub_251F34DA0();
            uint64_t v51 = 0;
            uint64_t v84 = v50;
            uint64_t v52 = *(void *)(v50 - 8);
            uint64_t v53 = v71 + ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80));
            uint64_t v81 = *(void *)(v52 + 72);
            uint64_t v54 = *(void *)(v52 + 64);
            uint64_t v83 = (uint64_t (**)(char *, uint64_t))(v52 + 8);
            uint64_t v55 = v53;
            while (1)
            {
              MEMORY[0x270FA5388](v50);
              v85(v80);
              char v56 = sub_251F34D70();
              uint64_t v57 = *v83;
              uint64_t v50 = (*v83)((char *)&v67 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0), v84);
              if (v56) {
                break;
              }
              ++v51;
              v55 += v81;
              if (v82 == v51)
              {
                uint64_t v51 = 1000;
                break;
              }
            }
            uint64_t v58 = 0;
            while (1)
            {
              MEMORY[0x270FA5388](v50);
              v85(v78);
              char v59 = sub_251F34D70();
              uint64_t v50 = v57((char *)&v67 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0), v84);
              if (v59) {
                break;
              }
              uint64_t v60 = v58 + 1;
              if (__OFADD__(v58, 1)) {
                goto LABEL_86;
              }
              ++v58;
              v53 += v81;
              if (v60 == v82)
              {
                uint64_t v58 = 1000;
                break;
              }
            }
            a3 = v73;
            a2 = v76;
            uint64_t v48 = v77;
            a4 = v69;
          }
          else
          {
            uint64_t v58 = 1000;
            uint64_t v51 = 1000;
          }
          unint64_t v61 = a3 + v48;
          uint64_t v62 = v74;
          sub_251B25BDC(v78, v74);
          sub_251B25BDC(v80, v62);
          if (v51 >= v58)
          {
            unint64_t v65 = v86;
            v86 += v48;
            if (a3 < v65 || v61 >= v65)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v64 = a2;
              unint64_t v63 = v70;
            }
            else
            {
              unint64_t v63 = v70;
              if (a3 != v65) {
                swift_arrayInitWithTakeBackToFront();
              }
              unint64_t v64 = a2;
            }
          }
          else
          {
            if (a3 < a2 || v61 >= a2)
            {
              unint64_t v64 = v79;
              swift_arrayInitWithTakeFrontToBack();
              uint64_t v48 = v77;
              unint64_t v63 = v70;
            }
            else
            {
              uint64_t v48 = v77;
              unint64_t v63 = v70;
              unint64_t v64 = v79;
              if (a3 != a2) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v88 += v48;
          }
          unint64_t v46 = v86;
          if (v86 <= a4) {
            break;
          }
          a2 = v64;
          a3 = v61;
        }
        while (v64 > v63);
      }
      goto LABEL_84;
    }
  }
  else if ((v25 & 0x8000000000000000) == 0)
  {
    uint64_t v27 = v25 * v23;
    if (a4 < a1 || a1 + v27 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v80 = a4 + v27;
    unint64_t v86 = a4 + v27;
    if (v27 >= 1 && a2 < a3)
    {
      uint64_t v82 = *(void *)(v71 + 16);
      unint64_t v73 = a3;
      uint64_t v68 = v23;
      while (1)
      {
        unint64_t v30 = v75;
        sub_251B25B74(a2, v79, v75);
        sub_251B25B74(a4, v77, v30);
        if (v82) {
          break;
        }
        uint64_t v39 = 1000;
        uint64_t v32 = 1000;
LABEL_35:
        uint64_t v42 = v74;
        sub_251B25BDC(v77, v74);
        sub_251B25BDC(v79, v42);
        unint64_t v43 = v88;
        if (v32 >= v39)
        {
          unint64_t v45 = v87 + v23;
          if (v88 < v87 || v88 >= v45)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v88 != v87)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v87 = v45;
          unint64_t v44 = a2;
        }
        else
        {
          unint64_t v44 = a2 + v23;
          if (v88 < a2 || v88 >= v44)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v88 == a2)
          {
            unint64_t v43 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        unint64_t v88 = v43 + v23;
        a4 = v87;
        if (v87 < v80)
        {
          a2 = v44;
          if (v44 < a3) {
            continue;
          }
        }
        goto LABEL_84;
      }
      unint64_t v76 = a2;
      uint64_t v31 = sub_251F34DA0();
      uint64_t v32 = 0;
      uint64_t v84 = v31;
      uint64_t v33 = *(void *)(v31 - 8);
      uint64_t v34 = v71 + ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80));
      uint64_t v81 = *(void *)(v33 + 72);
      uint64_t v35 = *(void *)(v33 + 64);
      uint64_t v83 = (uint64_t (**)(char *, uint64_t))(v33 + 8);
      uint64_t v36 = v34;
      while (1)
      {
        MEMORY[0x270FA5388](v31);
        v85(v79);
        char v37 = sub_251F34D70();
        unint64_t v38 = *v83;
        uint64_t v31 = (*v83)((char *)&v67 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0), v84);
        if (v37) {
          break;
        }
        ++v32;
        v36 += v81;
        if (v82 == v32)
        {
          uint64_t v32 = 1000;
          break;
        }
      }
      uint64_t v39 = 0;
      while (1)
      {
        MEMORY[0x270FA5388](v31);
        v85(v77);
        char v40 = sub_251F34D70();
        uint64_t v31 = v38((char *)&v67 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0), v84);
        if (v40) {
          goto LABEL_33;
        }
        uint64_t v41 = v39 + 1;
        if (__OFADD__(v39, 1)) {
          break;
        }
        ++v39;
        v34 += v81;
        if (v41 == v82)
        {
          uint64_t v39 = 1000;
LABEL_33:
          a3 = v73;
          a2 = v76;
          uint64_t v23 = v68;
          goto LABEL_35;
        }
      }
      __break(1u);
LABEL_86:
      __break(1u);
      goto LABEL_87;
    }
LABEL_84:
    a11(&v88, &v87, &v86);
    return 1;
  }
LABEL_90:
  swift_bridgeObjectRelease();
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251B34380(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, void (*a6)(uint64_t), uint64_t a7, uint64_t (*a8)(void), uint64_t (*a9)(void), uint64_t (*a10)(void), uint64_t (*a11)(void))
{
  uint64_t v62 = a6;
  uint64_t v52 = a5;
  uint64_t v53 = a1;
  uint64_t v47 = a8(0);
  uint64_t v14 = MEMORY[0x270FA5388](v47);
  uint64_t v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v59 = (uint64_t)&v44 - v18;
  uint64_t result = MEMORY[0x270FA5388](v17);
  uint64_t v60 = (uint64_t)&v44 - v21;
  uint64_t v45 = a2;
  if (a3 != a2)
  {
    uint64_t v22 = a11;
    uint64_t v54 = a10;
    uint64_t v55 = a9;
    uint64_t v63 = *(void *)(v52 + 16);
    uint64_t v23 = *(void *)(v20 + 72);
    uint64_t v50 = v16;
    uint64_t v51 = a4;
    uint64_t v48 = v23;
    uint64_t v49 = a11;
LABEL_5:
    uint64_t v46 = a3;
    uint64_t v24 = a3;
    while (1)
    {
      uint64_t v25 = v24 - 1;
      uint64_t v26 = *a4;
      uint64_t v57 = v23 * v24;
      uint64_t v27 = v55;
      sub_251B25B74(v26 + v23 * v24, v60, v55);
      uint64_t v58 = v25;
      uint64_t v56 = v23 * v25;
      sub_251B25B74(v26 + v23 * v25, v59, v27);
      if (v63) {
        break;
      }
      uint64_t v35 = 1000;
      uint64_t v28 = 1000;
LABEL_20:
      unint64_t v38 = v54;
      sub_251B25BDC(v59, v54);
      uint64_t result = sub_251B25BDC(v60, v38);
      if (v28 < v35)
      {
        uint64_t v39 = *a4;
        if (!*a4) {
          goto LABEL_26;
        }
        uint64_t v41 = v56;
        uint64_t v40 = v57;
        unint64_t v42 = v39 + v57;
        uint64_t v43 = v39 + v56;
        sub_251B25C90(v39 + v57, (uint64_t)v16, v22);
        if (v40 < v41 || v42 >= v43 + v23) {
          swift_arrayInitWithTakeFrontToBack();
        }
        uint64_t result = sub_251B25C90((uint64_t)v16, v43, v22);
        uint64_t v24 = v58;
        if (v58 != v53) {
          continue;
        }
      }
      a3 = v46 + 1;
      if (v46 + 1 == v45) {
        return result;
      }
      goto LABEL_5;
    }
    uint64_t result = sub_251F34DA0();
    uint64_t v28 = 0;
    uint64_t v65 = result;
    uint64_t v29 = *(void *)(result - 8);
    uint64_t v30 = v52 + ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80));
    uint64_t v61 = *(void *)(v29 + 72);
    uint64_t v31 = *(void *)(v29 + 64);
    unint64_t v64 = (uint64_t (**)(char *, uint64_t))(v29 + 8);
    uint64_t v32 = v30;
    while (1)
    {
      MEMORY[0x270FA5388](result);
      v62(v60);
      char v33 = sub_251F34D70();
      uint64_t v34 = *v64;
      uint64_t result = (*v64)((char *)&v44 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0), v65);
      if (v33) {
        break;
      }
      ++v28;
      v32 += v61;
      if (v63 == v28)
      {
        uint64_t v28 = 1000;
        break;
      }
    }
    uint64_t v35 = 0;
    while (1)
    {
      MEMORY[0x270FA5388](result);
      v62(v59);
      char v36 = sub_251F34D70();
      uint64_t result = v34((char *)&v44 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0), v65);
      if (v36) {
        goto LABEL_18;
      }
      uint64_t v37 = v35 + 1;
      if (__OFADD__(v35, 1)) {
        break;
      }
      ++v35;
      v30 += v61;
      if (v37 == v63)
      {
        uint64_t v35 = 1000;
LABEL_18:
        uint64_t v16 = v50;
        a4 = v51;
        uint64_t v23 = v48;
        uint64_t v22 = v49;
        goto LABEL_20;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
  }
  return result;
}

uint64_t sub_251B347A8(uint64_t *a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t (*a5)(void), uint64_t (*a6)(void), uint64_t (*a7)(void), uint64_t (*a8)(void), uint64_t (*a9)(void), void (*a10)(unint64_t *, unint64_t *, unint64_t *))
{
  uint64_t v206 = a8;
  uint64_t v201 = a7;
  uint64_t v202 = a6;
  uint64_t v216 = a4;
  unint64_t v217 = a3;
  uint64_t v190 = a9;
  uint64_t v192 = a5(0);
  uint64_t v191 = *(void *)(v192 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v192);
  uint64_t v182 = (uint64_t)&v180 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v205 = (uint64_t)&v180 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v210 = (uint64_t)&v180 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v211 = (uint64_t)&v180 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v208 = (uint64_t)&v180 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v209 = (uint64_t)&v180 - v24;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v183 = (uint64_t)&v180 - v26;
  MEMORY[0x270FA5388](v25);
  uint64_t v184 = (uint64_t)&v180 - v27;
  uint64_t v207 = a1;
  uint64_t v28 = a1[1];
  swift_bridgeObjectRetain_n();
  uint64_t v29 = sub_251F36AA0();
  if (v29 >= v28)
  {
    if ((v28 & 0x8000000000000000) == 0)
    {
      if (v28)
      {
        swift_bridgeObjectRetain();
        sub_251B34380(0, v28, 1, v207, a2, v217, v216, v190, v202, v201, v206);
      }
      swift_bridgeObjectRelease_n();
      return swift_bridgeObjectRelease();
    }
    goto LABEL_181;
  }
  if (v28 >= 0) {
    uint64_t v30 = v28;
  }
  else {
    uint64_t v30 = v28 + 1;
  }
  if (v28 < -1) {
    goto LABEL_190;
  }
  BOOL v189 = a10;
  uint64_t v199 = a2;
  uint64_t v181 = v29;
  uint64_t v194 = v10;
  if (v28 < 2)
  {
    unint64_t v188 = MEMORY[0x263F8EE78]
         + ((*(unsigned __int8 *)(v191 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v191 + 80));
    uint64_t v180 = MEMORY[0x263F8EE78];
    if (v28 != 1)
    {
      unint64_t v106 = *(void *)(MEMORY[0x263F8EE78] + 16);
      uint64_t v35 = (char *)MEMORY[0x263F8EE78];
LABEL_142:
      if (v106 < 2) {
        goto LABEL_156;
      }
      uint64_t v164 = *v207;
      while (1)
      {
        unint64_t v165 = v106 - 2;
        if (v106 < 2) {
          break;
        }
        if (!v164) {
          goto LABEL_189;
        }
        uint64_t v196 = v35;
        uint64_t v166 = *(void *)&v35[16 * v165 + 32];
        uint64_t v167 = *(void *)&v35[16 * v106 + 24];
        uint64_t v168 = *(void *)(v191 + 72);
        unint64_t v169 = v164 + v168 * v166;
        unint64_t v170 = v164 + v168 * *(void *)&v35[16 * v106 + 16];
        unint64_t v171 = v164 + v168 * v167;
        uint64_t v172 = v199;
        swift_bridgeObjectRetain();
        unint64_t v173 = v169;
        uint64_t v174 = v194;
        sub_251B33A80(v173, v170, v171, v188, v172, (void (*)(unint64_t))v217, v216, v190, v202, v201, v189);
        uint64_t v194 = v174;
        if (v174) {
          goto LABEL_155;
        }
        swift_bridgeObjectRelease();
        if (v167 < v166) {
          goto LABEL_177;
        }
        if (swift_isUniquelyReferenced_nonNull_native()) {
          uint64_t v175 = v196;
        }
        else {
          uint64_t v175 = sub_251ECDC38((uint64_t)v196);
        }
        if (v165 >= *((void *)v175 + 2)) {
          goto LABEL_178;
        }
        uint64_t v176 = &v175[16 * v165 + 32];
        *(void *)uint64_t v176 = v166;
        *((void *)v176 + 1) = v167;
        unint64_t v177 = *((void *)v175 + 2);
        if (v106 > v177) {
          goto LABEL_179;
        }
        unint64_t v178 = v175;
        memmove(&v175[16 * v106 + 16], &v175[16 * v106 + 32], 16 * (v177 - v106));
        uint64_t v35 = v178;
        *((void *)v178 + 2) = v177 - 1;
        unint64_t v106 = v177 - 1;
        if (v177 <= 2) {
          goto LABEL_156;
        }
      }
LABEL_176:
      __break(1u);
LABEL_177:
      __break(1u);
LABEL_178:
      __break(1u);
LABEL_179:
      __break(1u);
LABEL_180:
      __break(1u);
LABEL_181:
      __break(1u);
LABEL_182:
      __break(1u);
LABEL_183:
      __break(1u);
LABEL_184:
      __break(1u);
LABEL_185:
      __break(1u);
LABEL_186:
      swift_bridgeObjectRelease_n();
      __break(1u);
LABEL_187:
      swift_bridgeObjectRelease_n();
      __break(1u);
LABEL_188:
      swift_bridgeObjectRelease_n();
      __break(1u);
LABEL_189:
      swift_bridgeObjectRelease_n();
      __break(1u);
LABEL_190:
      swift_bridgeObjectRelease_n();
      uint64_t result = sub_251F36670();
      __break(1u);
      return result;
    }
  }
  else
  {
    uint64_t v31 = v30 >> 1;
    uint64_t v32 = sub_251F35B50();
    *(void *)(v32 + 16) = v31;
    uint64_t v33 = *(unsigned __int8 *)(v191 + 80);
    uint64_t v180 = v32;
    unint64_t v188 = v32 + ((v33 + 32) & ~v33);
  }
  uint64_t v34 = 0;
  uint64_t v35 = (char *)MEMORY[0x263F8EE78];
  while (1)
  {
    uint64_t v36 = v34;
    uint64_t v195 = v34;
    uint64_t v198 = v34 + 1;
    if (v34 + 1 < v28)
    {
      uint64_t v196 = v35;
      uint64_t v37 = *v207;
      uint64_t v38 = *(void *)(v191 + 72);
      uint64_t v39 = v202;
      sub_251B25B74(*v207 + v38 * (v34 + 1), v184, v202);
      sub_251B25B74(v37 + v38 * v36, v183, v39);
      uint64_t v40 = *(char **)(a2 + 16);
      uint64_t v185 = v38;
      unint64_t v215 = v40;
      uint64_t v186 = v28;
      uint64_t v187 = v37;
      if (v40)
      {
        uint64_t v41 = sub_251F34DA0();
        uint64_t v203 = 0;
        uint64_t v214 = (uint64_t (**)(char *, char *))v41;
        uint64_t v42 = *(void *)(v41 - 8);
        unint64_t v43 = a2 + ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80));
        uint64_t v213 = *(uint64_t (***)(char *, void))(v42 + 72);
        uint64_t v44 = *(void *)(v42 + 64);
        uint64_t v45 = (uint64_t (**)(char *, void))(v42 + 8);
        unint64_t v46 = v43;
        while (1)
        {
          MEMORY[0x270FA5388](v41);
          v217(v184);
          char v47 = sub_251F34D70();
          uint64_t v48 = *v45;
          uint64_t v41 = (*v45)((char *)&v180 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0), v214);
          if (v47) {
            break;
          }
          v46 += (unint64_t)v213;
          if (v215 == (char *)++v203)
          {
            uint64_t v203 = 1000;
            break;
          }
        }
        uint64_t v49 = 0;
        uint64_t v28 = v186;
        while (1)
        {
          uint64_t v200 = v49;
          MEMORY[0x270FA5388](v41);
          v217(v183);
          char v50 = sub_251F34D70();
          uint64_t v41 = v48((char *)&v180 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0), v214);
          if (v50) {
            break;
          }
          if (__OFADD__(v200, 1)) {
            goto LABEL_164;
          }
          uint64_t v49 = v200 + 1;
          v43 += (unint64_t)v213;
          if ((char *)(v200 + 1) == v215)
          {
            uint64_t v200 = 1000;
            break;
          }
        }
        a2 = v199;
        uint64_t v36 = v195;
        uint64_t v37 = v187;
        uint64_t v38 = v185;
      }
      else
      {
        uint64_t v200 = 1000;
        uint64_t v203 = 1000;
      }
      uint64_t v51 = v201;
      sub_251B25BDC(v183, v201);
      sub_251B25BDC(v184, v51);
      uint64_t v52 = 0;
      uint64_t v53 = v198;
      uint64_t v54 = v38 * v198;
      uint64_t v55 = v38 * (v36 + 2);
      do
      {
        uint64_t v64 = v53;
        uint64_t v61 = v52;
        uint64_t v62 = v54;
        uint64_t v63 = v55;
        uint64_t v198 = ++v53;
        if (v53 >= v28) {
          break;
        }
        uint64_t v193 = v55;
        uint64_t v204 = v54;
        uint64_t v197 = v52;
        uint64_t v65 = v202;
        sub_251B25B74(v37 + v53 * v38, v209, v202);
        sub_251B25B74(v37 + v64 * v38, v208, v65);
        if (v215)
        {
          uint64_t v66 = sub_251F34DA0();
          uint64_t v57 = 0;
          uint64_t v214 = (uint64_t (**)(char *, char *))v66;
          uint64_t v67 = *(void *)(v66 - 8);
          unint64_t v68 = a2 + ((*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80));
          uint64_t v212 = *(void *)(v67 + 72);
          uint64_t v69 = *(void *)(v67 + 64);
          uint64_t v213 = (uint64_t (**)(char *, void))(v67 + 8);
          unint64_t v70 = v68;
          while (1)
          {
            MEMORY[0x270FA5388](v66);
            v217(v209);
            char v71 = sub_251F34D70();
            uint64_t v72 = *v213;
            uint64_t v66 = (*v213)((char *)&v180 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0), v214);
            if (v71) {
              break;
            }
            ++v57;
            v70 += v212;
            if (v215 == (char *)v57)
            {
              uint64_t v57 = 1000;
              break;
            }
          }
          uint64_t v56 = 0;
          while (1)
          {
            MEMORY[0x270FA5388](v66);
            v217(v208);
            char v73 = sub_251F34D70();
            uint64_t v66 = v72((char *)&v180 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0), v214);
            if (v73) {
              break;
            }
            uint64_t v74 = v56 + 1;
            if (__OFADD__(v56, 1)) {
              goto LABEL_159;
            }
            ++v56;
            v68 += v212;
            if ((char *)v74 == v215)
            {
              uint64_t v56 = 1000;
              break;
            }
          }
          a2 = v199;
          uint64_t v36 = v195;
          uint64_t v28 = v186;
          uint64_t v38 = v185;
        }
        else
        {
          uint64_t v56 = 1000;
          uint64_t v57 = 1000;
        }
        BOOL v58 = v203 < v200;
        BOOL v59 = v57 >= v56;
        uint64_t v60 = v201;
        sub_251B25BDC(v208, v201);
        sub_251B25BDC(v209, v60);
        uint64_t v61 = v197;
        uint64_t v53 = v198;
        uint64_t v52 = v197 + 1;
        uint64_t v62 = v204;
        uint64_t v54 = v204 + v38;
        uint64_t v63 = v193;
        uint64_t v55 = v193 + v38;
        uint64_t v37 = v187;
      }
      while (((v58 ^ v59) & 1) != 0);
      if (v203 >= v200)
      {
LABEL_55:
        uint64_t v35 = v196;
      }
      else
      {
        uint64_t v35 = v196;
        if (v53 < v36) {
          goto LABEL_185;
        }
        if (v36 < v53)
        {
          uint64_t v75 = 0;
          uint64_t v76 = v36 * v38;
          while (1)
          {
            if (v36 + v75 != v36 + v61 + 1)
            {
              if (!v37) {
                goto LABEL_188;
              }
              uint64_t v77 = v63;
              uint64_t v78 = v61;
              uint64_t v79 = v37 + v62;
              uint64_t v204 = v62;
              sub_251B25C90(v37 + v76, v182, v206);
              if (v76 < v204 || v37 + v76 >= (unint64_t)(v37 + v77))
              {
                swift_arrayInitWithTakeFrontToBack();
              }
              else if (v76 != v204)
              {
                swift_arrayInitWithTakeBackToFront();
              }
              sub_251B25C90(v182, v79, v206);
              uint64_t v38 = v185;
              uint64_t v61 = v78;
              uint64_t v28 = v186;
              uint64_t v62 = v204;
              uint64_t v63 = v77;
              a2 = v199;
            }
            --v61;
            ++v75;
            v62 -= v38;
            v63 -= v38;
            v76 += v38;
            if (v75 + v36 >= v36 + v61 + 2) {
              goto LABEL_55;
            }
          }
        }
      }
    }
    if (v198 >= v28) {
      goto LABEL_88;
    }
    if (__OFSUB__(v198, v36)) {
      goto LABEL_182;
    }
    if (v198 - v36 >= v181) {
      goto LABEL_88;
    }
    if (__OFADD__(v36, v181)) {
      goto LABEL_183;
    }
    if (v36 + v181 >= v28) {
      uint64_t v80 = v28;
    }
    else {
      uint64_t v80 = v36 + v181;
    }
    if (v80 < v36) {
      goto LABEL_184;
    }
    if (v198 == v80) {
      goto LABEL_88;
    }
    uint64_t v196 = v35;
    uint64_t v213 = *(uint64_t (***)(char *, void))(a2 + 16);
    uint64_t v200 = *(void *)(v191 + 72);
    uint64_t v81 = v198;
    uint64_t v193 = v80;
    while (2)
    {
      uint64_t v198 = v81;
      while (2)
      {
        uint64_t v82 = v81 - 1;
        uint64_t v83 = *v207;
        uint64_t v84 = v200;
        uint64_t v85 = v200 * v81;
        unint64_t v86 = v202;
        sub_251B25B74(*v207 + v200 * v81, v211, v202);
        uint64_t v203 = v84 * v82;
        uint64_t v204 = v82;
        sub_251B25B74(v83 + v84 * v82, v210, v86);
        if (!v213)
        {
          uint64_t v95 = 1000;
          uint64_t v88 = 1000;
          goto LABEL_82;
        }
        uint64_t v197 = v85;
        uint64_t v87 = sub_251F34DA0();
        uint64_t v88 = 0;
        unint64_t v215 = (char *)v87;
        uint64_t v89 = *(void *)(v87 - 8);
        unint64_t v90 = a2 + ((*(unsigned __int8 *)(v89 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80));
        uint64_t v212 = *(void *)(v89 + 72);
        uint64_t v91 = *(void *)(v89 + 64);
        uint64_t v214 = (uint64_t (**)(char *, char *))(v89 + 8);
        unint64_t v92 = v90;
        while (1)
        {
          MEMORY[0x270FA5388](v87);
          v217(v211);
          char v93 = sub_251F34D70();
          unint64_t v94 = *v214;
          uint64_t v87 = (*v214)((char *)&v180 - ((v91 + 15) & 0xFFFFFFFFFFFFFFF0), v215);
          if (v93) {
            break;
          }
          ++v88;
          v92 += v212;
          if (v213 == (uint64_t (**)(char *, void))v88)
          {
            uint64_t v88 = 1000;
            break;
          }
        }
        uint64_t v95 = 0;
        do
        {
          MEMORY[0x270FA5388](v87);
          v217(v210);
          char v96 = sub_251F34D70();
          uint64_t v87 = v94((char *)&v180 - ((v91 + 15) & 0xFFFFFFFFFFFFFFF0), v215);
          if (v96) {
            goto LABEL_80;
          }
          uint64_t v97 = v95 + 1;
          if (__OFADD__(v95, 1))
          {
            __break(1u);
LABEL_159:
            __break(1u);
LABEL_160:
            __break(1u);
LABEL_161:
            __break(1u);
LABEL_162:
            __break(1u);
LABEL_163:
            __break(1u);
LABEL_164:
            __break(1u);
LABEL_165:
            __break(1u);
LABEL_166:
            __break(1u);
LABEL_167:
            __break(1u);
LABEL_168:
            __break(1u);
LABEL_169:
            __break(1u);
LABEL_170:
            __break(1u);
LABEL_171:
            __break(1u);
LABEL_172:
            __break(1u);
LABEL_173:
            __break(1u);
LABEL_174:
            __break(1u);
LABEL_175:
            __break(1u);
            goto LABEL_176;
          }
          ++v95;
          v90 += v212;
        }
        while ((uint64_t (**)(char *, void))v97 != v213);
        uint64_t v95 = 1000;
LABEL_80:
        a2 = v199;
        uint64_t v36 = v195;
        uint64_t v85 = v197;
LABEL_82:
        char v98 = v201;
        sub_251B25BDC(v210, v201);
        sub_251B25BDC(v211, v98);
        if (v88 >= v95) {
          break;
        }
        uint64_t v99 = *v207;
        if (!*v207) {
          goto LABEL_186;
        }
        unint64_t v100 = v99 + v85;
        uint64_t v101 = v203;
        uint64_t v102 = v99 + v203;
        sub_251B25C90(v99 + v85, v205, v206);
        if (v85 < v101 || v100 >= v102 + v200) {
          swift_arrayInitWithTakeFrontToBack();
        }
        sub_251B25C90(v205, v102, v206);
        uint64_t v81 = v204;
        if (v204 != v36) {
          continue;
        }
        break;
      }
      uint64_t v81 = v198 + 1;
      if (v198 + 1 != v193) {
        continue;
      }
      break;
    }
    uint64_t v198 = v193;
    uint64_t v35 = v196;
LABEL_88:
    if (v198 < v36) {
      goto LABEL_180;
    }
    uint64_t v103 = v35;
    if (swift_isUniquelyReferenced_nonNull_native()) {
      uint64_t v35 = v103;
    }
    else {
      uint64_t v35 = sub_251ECD5C4(0, *((void *)v103 + 2) + 1, 1, v103);
    }
    unint64_t v105 = *((void *)v35 + 2);
    unint64_t v104 = *((void *)v35 + 3);
    unint64_t v106 = v105 + 1;
    if (v105 >= v104 >> 1) {
      uint64_t v35 = sub_251ECD5C4((char *)(v104 > 1), v105 + 1, 1, v35);
    }
    *((void *)v35 + 2) = v106;
    uint64_t v107 = v35 + 32;
    uint64_t v108 = &v35[16 * v105 + 32];
    uint64_t v109 = v198;
    *(void *)uint64_t v108 = v195;
    *((void *)v108 + 1) = v109;
    if (v105) {
      break;
    }
    unint64_t v106 = 1;
LABEL_137:
    uint64_t v28 = v207[1];
    uint64_t v34 = v198;
    if (v198 >= v28) {
      goto LABEL_142;
    }
  }
  uint64_t v196 = v35;
  unint64_t v215 = v35 + 32;
  while (1)
  {
    unint64_t v110 = v106 - 1;
    if (v106 >= 4)
    {
      BOOL v115 = &v107[16 * v106];
      uint64_t v116 = *((void *)v115 - 8);
      uint64_t v117 = *((void *)v115 - 7);
      BOOL v121 = __OFSUB__(v117, v116);
      uint64_t v118 = v117 - v116;
      if (v121) {
        goto LABEL_165;
      }
      uint64_t v120 = *((void *)v115 - 6);
      uint64_t v119 = *((void *)v115 - 5);
      BOOL v121 = __OFSUB__(v119, v120);
      uint64_t v113 = v119 - v120;
      char v114 = v121;
      if (v121) {
        goto LABEL_166;
      }
      unint64_t v122 = v106 - 2;
      uint64_t v123 = &v107[16 * v106 - 32];
      uint64_t v125 = *(void *)v123;
      uint64_t v124 = *((void *)v123 + 1);
      BOOL v121 = __OFSUB__(v124, v125);
      uint64_t v126 = v124 - v125;
      if (v121) {
        goto LABEL_168;
      }
      BOOL v121 = __OFADD__(v113, v126);
      uint64_t v127 = v113 + v126;
      if (v121) {
        goto LABEL_171;
      }
      if (v127 >= v118)
      {
        uint64_t v145 = &v107[16 * v110];
        uint64_t v147 = *(void *)v145;
        uint64_t v146 = *((void *)v145 + 1);
        BOOL v121 = __OFSUB__(v146, v147);
        uint64_t v148 = v146 - v147;
        if (v121) {
          goto LABEL_175;
        }
        BOOL v138 = v113 < v148;
        goto LABEL_126;
      }
    }
    else
    {
      if (v106 != 3)
      {
        uint64_t v139 = *((void *)v35 + 4);
        uint64_t v140 = *((void *)v35 + 5);
        BOOL v121 = __OFSUB__(v140, v139);
        uint64_t v132 = v140 - v139;
        char v133 = v121;
        goto LABEL_120;
      }
      uint64_t v112 = *((void *)v35 + 4);
      uint64_t v111 = *((void *)v35 + 5);
      BOOL v121 = __OFSUB__(v111, v112);
      uint64_t v113 = v111 - v112;
      char v114 = v121;
    }
    if (v114) {
      goto LABEL_167;
    }
    unint64_t v122 = v106 - 2;
    uint64_t v128 = &v107[16 * v106 - 32];
    uint64_t v130 = *(void *)v128;
    uint64_t v129 = *((void *)v128 + 1);
    BOOL v131 = __OFSUB__(v129, v130);
    uint64_t v132 = v129 - v130;
    char v133 = v131;
    if (v131) {
      goto LABEL_170;
    }
    uint64_t v134 = &v107[16 * v110];
    uint64_t v136 = *(void *)v134;
    uint64_t v135 = *((void *)v134 + 1);
    BOOL v121 = __OFSUB__(v135, v136);
    uint64_t v137 = v135 - v136;
    if (v121) {
      goto LABEL_173;
    }
    if (__OFADD__(v132, v137)) {
      goto LABEL_174;
    }
    if (v132 + v137 >= v113)
    {
      BOOL v138 = v113 < v137;
LABEL_126:
      if (v138) {
        unint64_t v110 = v122;
      }
      goto LABEL_128;
    }
LABEL_120:
    if (v133) {
      goto LABEL_169;
    }
    unint64_t v141 = &v107[16 * v110];
    uint64_t v143 = *(void *)v141;
    uint64_t v142 = *((void *)v141 + 1);
    BOOL v121 = __OFSUB__(v142, v143);
    uint64_t v144 = v142 - v143;
    if (v121) {
      goto LABEL_172;
    }
    if (v144 < v132)
    {
      uint64_t v35 = v196;
      goto LABEL_137;
    }
LABEL_128:
    unint64_t v149 = v110 - 1;
    if (v110 - 1 >= v106) {
      goto LABEL_160;
    }
    uint64_t v150 = *v207;
    if (!*v207) {
      goto LABEL_187;
    }
    uint64_t v151 = &v107[16 * v149];
    uint64_t v152 = *(void *)v151;
    unint64_t v153 = v110;
    uint64_t v154 = &v107[16 * v110];
    uint64_t v155 = *((void *)v154 + 1);
    uint64_t v156 = *(void *)(v191 + 72);
    unint64_t v157 = v150 + v156 * *(void *)v151;
    unint64_t v158 = v150 + v156 * *(void *)v154;
    unint64_t v159 = v150 + v156 * v155;
    a2 = v199;
    swift_bridgeObjectRetain();
    unint64_t v160 = v157;
    uint64_t v161 = v194;
    sub_251B33A80(v160, v158, v159, v188, a2, (void (*)(unint64_t))v217, v216, v190, v202, v201, v189);
    uint64_t v194 = v161;
    if (v161) {
      break;
    }
    swift_bridgeObjectRelease();
    if (v155 < v152) {
      goto LABEL_161;
    }
    uint64_t v162 = (uint64_t)v196;
    if (v153 > *((void *)v196 + 2)) {
      goto LABEL_162;
    }
    *(void *)uint64_t v151 = v152;
    uint64_t v107 = v215;
    *(void *)&v215[16 * v149 + 8] = v155;
    unint64_t v163 = *(void *)(v162 + 16);
    if (v153 >= v163) {
      goto LABEL_163;
    }
    unint64_t v106 = v163 - 1;
    memmove(v154, v154 + 16, 16 * (v163 - 1 - v153));
    uint64_t v35 = v196;
    *((void *)v196 + 2) = v163 - 1;
    if (v163 <= 2) {
      goto LABEL_137;
    }
  }
LABEL_155:
  swift_bridgeObjectRelease();
LABEL_156:
  swift_bridgeObjectRelease();
  *(void *)(v180 + 16) = 0;
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_251B35A48(void **a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v8 = *a1;
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v8 = (void *)sub_251ECDDC8(v8);
  }
  uint64_t v9 = v8[2];
  uint64_t v10 = *(void *)(type metadata accessor for StaticResident() - 8);
  v12[0] = (uint64_t)v8 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
  v12[1] = v9;
  swift_bridgeObjectRetain();
  sub_251B347A8(v12, a2, a3, a4, (uint64_t (*)(void))type metadata accessor for StaticResident, (uint64_t (*)(void))type metadata accessor for StaticResident, (uint64_t (*)(void))type metadata accessor for StaticResident, (uint64_t (*)(void))type metadata accessor for StaticResident, (uint64_t (*)(void))type metadata accessor for StaticResident, (void (*)(unint64_t *, unint64_t *, unint64_t *))sub_251ECDADC);
  swift_bridgeObjectRelease();
  *a1 = v8;
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_251B35BB8(uint64_t *a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v9 = type metadata accessor for StaticResident();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9 - 8);
  unint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain_n();
  char v13 = sub_251B35A48((void **)a1, a2, a3, a4);
  swift_bridgeObjectRelease();
  if (v4 || (v13 & 1) == 0) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v15 = (void *)*a1;
  uint64_t v27 = (void *)*a1;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_251B35BB8(&v27, a2, a3, a4);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v16 = v27;
  uint64_t v26 = v15[2];
  if (v26)
  {
    unint64_t v17 = 0;
    uint64_t v18 = v27[2];
    uint64_t v24 = v27;
    uint64_t v25 = v18;
    while (v25 != v17)
    {
      if (v17 >= v16[2])
      {
        __break(1u);
LABEL_16:
        __break(1u);
        return result;
      }
      unint64_t v19 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      uint64_t v20 = (char *)v16 + v19;
      uint64_t v21 = v10;
      uint64_t v22 = *(void *)(v10 + 72) * v17;
      sub_251B25B74((uint64_t)&v20[v22], (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticResident);
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      *a1 = (uint64_t)v15;
      if ((result & 1) == 0)
      {
        uint64_t result = sub_251ECDDC8(v15);
        uint64_t v15 = (void *)result;
        *a1 = result;
      }
      if (v17 >= v15[2]) {
        goto LABEL_16;
      }
      ++v17;
      uint64_t result = sub_251B392A8((uint64_t)v12, (uint64_t)v15 + v19 + v22, (uint64_t (*)(void))type metadata accessor for StaticResident);
      uint64_t v15 = (void *)*a1;
      uint64_t v10 = v21;
      uint64_t v16 = v24;
      if (v26 == v17) {
        break;
      }
    }
  }
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_251B35E04(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, void (*a5)(uint64_t *__return_ptr, unint64_t), uint64_t a6, uint64_t (*a7)(void), uint64_t (*a8)(void), uint64_t (*a9)(void), void (*a10)(unint64_t *, unint64_t *, unint64_t *))
{
  void (*v32)(uint64_t *__return_ptr, char *);
  uint64_t v33;
  char v35;
  uint64_t (*v36)(void);
  unint64_t v37;
  unint64_t v38;
  uint64_t (*v39)(void);
  unint64_t v40;
  unint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(void);
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  void (*v50)(uint64_t *__return_ptr, unint64_t);
  uint64_t v51;
  char v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t (*v56)(void);
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t result;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t (*v65)(void);
  void (*v66)(uint64_t *__return_ptr, unint64_t);
  uint64_t v67;
  unint64_t v68;
  uint64_t (*v69)(void);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;

  uint64_t v69 = a8;
  uint64_t v64 = a7(0);
  uint64_t v15 = MEMORY[0x270FA5388](v64);
  unint64_t v68 = (unint64_t)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v67 = (uint64_t)&v61 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v61 - v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v61 - v22;
  unint64_t v70 = *(void *)(v24 + 72);
  if (!v70)
  {
    __break(1u);
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }
  if (a2 - a1 == 0x8000000000000000 && v70 == -1) {
    goto LABEL_76;
  }
  int64_t v25 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v70 == -1)
  {
LABEL_77:
    __break(1u);
LABEL_78:
    __break(1u);
    goto LABEL_79;
  }
  uint64_t v65 = a9;
  uint64_t v66 = a5;
  uint64_t v26 = (uint64_t)(a2 - a1) / v70;
  uint64_t v77 = a1;
  uint64_t v76 = a4;
  uint64_t v27 = v25 / v70;
  if (v26 >= v25 / v70)
  {
    if (v27 < 0) {
      goto LABEL_82;
    }
    uint64_t v29 = v27 * v70;
    if (a4 < a2 || a2 + v29 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a2)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    uint64_t v41 = a4 + v29;
    uint64_t v75 = a4 + v29;
    uint64_t v77 = a2;
    if (v29 < 1 || a1 >= a2)
    {
LABEL_74:
      a10(&v77, &v76, &v75);
      return 1;
    }
    unint64_t v43 = -v70;
    uint64_t v62 = a1;
    uint64_t v63 = a4;
    while (1)
    {
      unint64_t v70 = a3;
      uint64_t v44 = v67;
      uint64_t v45 = v69;
      sub_251B25B74(v41 + v43, v67, v69);
      unint64_t v46 = v43;
      char v47 = a2 + v43;
      uint64_t v48 = a2 + v43;
      uint64_t v49 = v68;
      sub_251B25B74(v48, v68, v45);
      char v50 = v66;
      v66(&v73, v44);
      uint64_t v51 = v74;
      if (!v74) {
        break;
      }
      v50(&v71, v49);
      if (!v72) {
        goto LABEL_81;
      }
      if (v73 == v71 && v51 == v72) {
        uint64_t v53 = 0;
      }
      else {
        uint64_t v53 = sub_251F36B10();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v54 = v70;
      uint64_t v55 = v70 + v46;
      uint64_t v56 = v65;
      sub_251B25BDC(v68, v65);
      sub_251B25BDC(v67, v56);
      if (v53)
      {
        uint64_t v57 = v62;
        if (v54 < a2 || v55 >= a2)
        {
          swift_arrayInitWithTakeFrontToBack();
          BOOL v58 = v63;
          unint64_t v43 = v46;
        }
        else
        {
          BOOL v58 = v63;
          unint64_t v43 = v46;
          if (v70 != a2) {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        v77 += v43;
      }
      else
      {
        BOOL v59 = v75;
        v75 += v46;
        uint64_t v57 = v62;
        unint64_t v43 = v46;
        if (v54 < v59 || v55 >= v59)
        {
          swift_arrayInitWithTakeFrontToBack();
          char v47 = a2;
          BOOL v58 = v63;
        }
        else
        {
          BOOL v58 = v63;
          if (v70 != v59) {
            swift_arrayInitWithTakeBackToFront();
          }
          char v47 = a2;
        }
      }
      uint64_t v41 = v75;
      if (v75 > v58)
      {
        a2 = v47;
        a3 = v55;
        if (v47 > v57) {
          continue;
        }
      }
      goto LABEL_74;
    }
LABEL_79:
    __break(1u);
LABEL_80:
    __break(1u);
LABEL_81:
    __break(1u);
    goto LABEL_82;
  }
  if ((v26 & 0x8000000000000000) == 0)
  {
    uint64_t v28 = v26 * v70;
    if (a4 < a1 || a1 + v28 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v68 = a4 + v28;
    uint64_t v75 = a4 + v28;
    if (v28 >= 1 && a2 < a3)
    {
      while (1)
      {
        uint64_t v31 = v69;
        sub_251B25B74(a2, (uint64_t)v23, v69);
        sub_251B25B74(a4, (uint64_t)v21, v31);
        uint64_t v32 = (void (*)(uint64_t *__return_ptr, char *))v66;
        v66(&v73, (unint64_t)v23);
        uint64_t v33 = v74;
        if (!v74) {
          goto LABEL_78;
        }
        v32(&v71, v21);
        if (!v72) {
          goto LABEL_80;
        }
        if (v73 == v71 && v33 == v72) {
          break;
        }
        uint64_t v35 = sub_251F36B10();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v36 = v65;
        sub_251B25BDC((uint64_t)v21, v65);
        sub_251B25BDC((uint64_t)v23, v36);
        if ((v35 & 1) == 0) {
          goto LABEL_34;
        }
        uint64_t v37 = v77;
        uint64_t v38 = a2 + v70;
        if (v77 < a2 || v77 >= v38)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v77 == a2)
        {
          uint64_t v37 = a2;
        }
        else
        {
          swift_arrayInitWithTakeBackToFront();
        }
LABEL_40:
        uint64_t v77 = v37 + v70;
        a4 = v76;
        if (v76 < v68)
        {
          a2 = v38;
          if (v38 < a3) {
            continue;
          }
        }
        goto LABEL_74;
      }
      swift_bridgeObjectRelease_n();
      uint64_t v39 = v65;
      sub_251B25BDC((uint64_t)v21, v65);
      sub_251B25BDC((uint64_t)v23, v39);
LABEL_34:
      uint64_t v37 = v77;
      uint64_t v40 = v76 + v70;
      if (v77 < v76 || v77 >= v40)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (v77 != v76)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      uint64_t v76 = v40;
      uint64_t v38 = a2;
      goto LABEL_40;
    }
    goto LABEL_74;
  }
LABEL_82:
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

void *sub_251B36484(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, void *(*a5)(uint64_t *__return_ptr), uint64_t a6, uint64_t (*a7)(void), uint64_t (*a8)(void), uint64_t (*a9)(void), uint64_t (*a10)(void))
{
  void *(*v27)(uint64_t *__return_ptr);
  uint64_t v28;
  uint64_t v29;
  char v31;
  uint64_t (*v32)(void);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(void);
  void *(*v40)(uint64_t *__return_ptr);
  uint64_t (*v41)(void);
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(void);
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  uint64_t v40 = a5;
  uint64_t v41 = a8;
  unint64_t v46 = a4;
  uint64_t v37 = a1;
  uint64_t v38 = a7(0);
  uint64_t v12 = MEMORY[0x270FA5388](v38);
  uint64_t v45 = (uint64_t)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v35 - v15;
  uint64_t result = (void *)MEMORY[0x270FA5388](v14);
  char v47 = (uint64_t)&v35 - v19;
  unint64_t v43 = a3;
  uint64_t v36 = a2;
  if (a3 != a2)
  {
    uint64_t v44 = a10;
    uint64_t v39 = a9;
    uint64_t v20 = *(void *)(v18 + 72);
    uint64_t v53 = v20 * (v43 - 1);
    uint64_t v42 = v20;
    uint64_t v48 = v20 * v43;
LABEL_6:
    uint64_t v22 = 0;
    uint64_t v23 = v37;
    while (1)
    {
      uint64_t v24 = v47;
      uint64_t v25 = *v46;
      uint64_t v26 = v41;
      sub_251B25B74(v48 + v22 + *v46, v47, v41);
      sub_251B25B74(v53 + v22 + v25, (uint64_t)v16, v26);
      uint64_t v27 = v40;
      ((void (*)(uint64_t *__return_ptr, uint64_t))v40)(&v51, v24);
      uint64_t result = v16;
      uint64_t v28 = v52;
      if (!v52) {
        break;
      }
      uint64_t v29 = (uint64_t)result;
      uint64_t result = v27(&v49);
      if (!v50) {
        goto LABEL_18;
      }
      if (v51 == v49 && v28 == v50)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v16 = (char *)v29;
        uint64_t v21 = v39;
        sub_251B25BDC(v29, v39);
        uint64_t result = (void *)sub_251B25BDC(v47, v21);
LABEL_5:
        v53 += v42;
        v48 += v42;
        if (++v43 == v36) {
          return result;
        }
        goto LABEL_6;
      }
      uint64_t v31 = sub_251F36B10();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v16 = (char *)v29;
      uint64_t v32 = v39;
      sub_251B25BDC(v29, v39);
      uint64_t result = (void *)sub_251B25BDC(v47, v32);
      if (v31)
      {
        uint64_t v33 = *v46;
        if (!*v46) {
          goto LABEL_19;
        }
        uint64_t v34 = v33 + v53 + v22;
        sub_251B25C90(v33 + v48 + v22, v45, v44);
        swift_arrayInitWithTakeFrontToBack();
        uint64_t result = (void *)sub_251B25C90(v45, v34, v44);
        v22 -= v42;
        ++v23;
        uint64_t v16 = (char *)v29;
        if (v43 != v23) {
          continue;
        }
      }
      goto LABEL_5;
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
  }
  return result;
}

void *sub_251B367B4(uint64_t *a1, void (*a2)(uint64_t *__return_ptr, unint64_t), uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void), uint64_t (*a7)(void), uint64_t (*a8)(void), void (*a9)(unint64_t *, unint64_t *, unint64_t *))
{
  void (*v56)(uint64_t *__return_ptr, unint64_t);
  uint64_t v57;
  void *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t (*v69)(void);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t (*v76)(void);
  uint64_t v77;
  unint64_t v78;
  void (*v79)(uint64_t *__return_ptr, unint64_t);
  uint64_t v80;
  BOOL v81;
  char v82;
  uint64_t (*v83)(void);
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  unint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  BOOL v103;
  unint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  BOOL v113;
  uint64_t v114;
  char v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  BOOL v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  char *v132;
  char *v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;
  unint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  unint64_t v145;
  uint64_t (*v146)(void);
  uint64_t v147;
  char *v148;
  char *v149;
  char *v150;
  void *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  unint64_t v156;
  void (*v157)(unint64_t *, unint64_t *, unint64_t *);
  uint64_t (*v158)(void);
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t (*v165)(void);
  void (*v166)(uint64_t *__return_ptr, unint64_t);
  uint64_t (*v167)(void);
  uint64_t v168;
  uint64_t v169;
  uint64_t (*v170)(void);
  char *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t *v178;

  unint64_t v158 = a8;
  unint64_t v170 = a7;
  unint64_t v165 = a6;
  uint64_t v166 = a2;
  uint64_t v167 = a5;
  uint64_t v162 = a4(0);
  unint64_t v159 = *(void *)(v162 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v162);
  unint64_t v153 = (uint64_t)&v147 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v168 = (uint64_t)&v147 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v147 - v16;
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v172 = (uint64_t)&v147 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v147 - v21;
  uint64_t v23 = MEMORY[0x270FA5388](v20);
  unint64_t v160 = (uint64_t)&v147 - v24;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v27 = (char *)&v147 - v26;
  MEMORY[0x270FA5388](v25);
  uint64_t v29 = (char *)&v147 - v28;
  unint64_t v178 = a1;
  uint64_t v30 = a1[1];
  uint64_t result = (void *)sub_251F36AA0();
  uint64_t v151 = result;
  if ((uint64_t)result >= v30)
  {
    if (v30 < 0) {
      goto LABEL_155;
    }
    if (v30) {
      return sub_251B36484(0, v30, 1, v178, (void *(*)(uint64_t *__return_ptr))v166, a3, v158, v167, v165, v170);
    }
    return result;
  }
  if (v30 >= 0) {
    uint64_t v32 = v30;
  }
  else {
    uint64_t v32 = v30 + 1;
  }
  if (v30 < -1) {
    goto LABEL_167;
  }
  unint64_t v157 = a9;
  if (v30 < 2)
  {
    uint64_t v156 = MEMORY[0x263F8EE78]
         + ((*(unsigned __int8 *)(v159 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v159 + 80));
    uint64_t v147 = MEMORY[0x263F8EE78];
    if (v30 != 1)
    {
      uint64_t v37 = (char *)MEMORY[0x263F8EE78];
      uint64_t v88 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_119:
      if (v88 >= 2)
      {
        uint64_t v139 = *v178;
        do
        {
          uint64_t v140 = v88 - 2;
          if (v88 < 2) {
            goto LABEL_149;
          }
          if (!v139) {
            goto LABEL_166;
          }
          unint64_t v141 = *(void *)&v37[16 * v140 + 32];
          uint64_t v142 = *(void *)&v37[16 * v88 + 24];
          uint64_t v143 = v161;
          sub_251B35E04(v139 + *(void *)(v159 + 72) * v141, v139 + *(void *)(v159 + 72) * *(void *)&v37[16 * v88 + 16], v139 + *(void *)(v159 + 72) * v142, v156, v166, a3, v158, v167, v165, v157);
          uint64_t v161 = v143;
          if (v143) {
            break;
          }
          if (v142 < v141) {
            goto LABEL_151;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v37 = sub_251ECDC38((uint64_t)v37);
          }
          if (v140 >= *((void *)v37 + 2)) {
            goto LABEL_152;
          }
          uint64_t v144 = &v37[16 * v140 + 32];
          *(void *)uint64_t v144 = v141;
          *((void *)v144 + 1) = v142;
          uint64_t v145 = *((void *)v37 + 2);
          if (v88 > v145) {
            goto LABEL_153;
          }
          memmove(&v37[16 * v88 + 16], &v37[16 * v88 + 32], 16 * (v145 - v88));
          *((void *)v37 + 2) = v145 - 1;
          uint64_t v88 = v145 - 1;
        }
        while (v145 > 2);
      }
LABEL_132:
      swift_bridgeObjectRelease();
      *(void *)(v147 + 16) = 0;
      return (void *)swift_bridgeObjectRelease();
    }
    uint64_t v148 = v27;
    unint64_t v171 = v17;
  }
  else
  {
    uint64_t v148 = v27;
    unint64_t v171 = v17;
    uint64_t v33 = v32 >> 1;
    uint64_t v34 = sub_251F35B50();
    *(void *)(v34 + 16) = v33;
    uint64_t v35 = *(unsigned __int8 *)(v159 + 80);
    uint64_t v147 = v34;
    uint64_t v156 = v34 + ((v35 + 32) & ~v35);
  }
  uint64_t v36 = 0;
  uint64_t v37 = (char *)MEMORY[0x263F8EE78];
  uint64_t v155 = v22;
  unint64_t v149 = v29;
  while (1)
  {
    uint64_t v38 = v36;
    uint64_t v39 = v36 + 1;
    uint64_t v154 = v36;
    if (v36 + 1 >= v30)
    {
      BOOL v58 = v151;
    }
    else
    {
      unint64_t v169 = v30;
      uint64_t v40 = *v178;
      uint64_t v41 = *(void *)(v159 + 72);
      uint64_t v42 = v167;
      sub_251B25B74(*v178 + v41 * v39, (uint64_t)v29, v167);
      unint64_t v163 = v40;
      uint64_t v43 = v40 + v41 * v38;
      uint64_t v44 = (uint64_t)v148;
      sub_251B25B74(v43, (uint64_t)v148, v42);
      uint64_t v45 = v161;
      LODWORD(v164) = sub_251B1D804((uint64_t)v29, v44, (void *(*)(uint64_t *__return_ptr))v166);
      uint64_t v161 = v45;
      if (v45)
      {
        uint64_t v146 = v165;
        sub_251B25BDC(v44, v165);
        sub_251B25BDC((uint64_t)v29, v146);
        goto LABEL_132;
      }
      uint64_t v150 = v37;
      unint64_t v46 = v165;
      sub_251B25BDC(v44, v165);
      sub_251B25BDC((uint64_t)v29, v46);
      uint64_t v47 = v38 + 2;
      uint64_t v48 = v41 * (v38 + 2);
      uint64_t v49 = v41 * v39;
      uint64_t v50 = v163;
      unint64_t v173 = v41;
      do
      {
        if (v169 == v47)
        {
          uint64_t v30 = v169;
          uint64_t v39 = v169;
          goto LABEL_28;
        }
        uint64_t v53 = v160;
        uint64_t v54 = v167;
        sub_251B25B74(v50 + v48, v160, v167);
        sub_251B25B74(v50 + v49, (uint64_t)v22, v54);
        unint64_t v55 = v53;
        uint64_t v56 = v166;
        v166(&v176, v55);
        uint64_t v57 = v177;
        if (!v177) {
          goto LABEL_163;
        }
        v56(&v174, (unint64_t)v22);
        if (!v175) {
          goto LABEL_162;
        }
        if (v176 == v174 && v57 == v175) {
          int v51 = 0;
        }
        else {
          int v51 = sub_251F36B10();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v52 = v165;
        sub_251B25BDC((uint64_t)v22, v165);
        sub_251B25BDC(v160, v52);
        ++v47;
        uint64_t v41 = v173;
        v50 += v173;
      }
      while (((v164 ^ v51) & 1) == 0);
      uint64_t v39 = v47 - 1;
      uint64_t v30 = v169;
LABEL_28:
      uint64_t v37 = v150;
      BOOL v58 = v151;
      uint64_t v38 = v154;
      if (v164)
      {
        if (v39 < v154) {
          goto LABEL_158;
        }
        if (v154 < v39)
        {
          BOOL v59 = 0;
          uint64_t v60 = v41 * (v39 - 1);
          uint64_t v61 = v39 * v41;
          uint64_t v62 = v154 * v41;
          do
          {
            if (v38 != v39 + v59 - 1)
            {
              uint64_t v64 = v163;
              if (!v163) {
                goto LABEL_165;
              }
              uint64_t v65 = v163 + v62;
              uint64_t v164 = v163 + v60;
              sub_251B25C90(v163 + v62, v153, v170);
              if (v62 < v60 || v65 >= v64 + v61)
              {
                uint64_t v63 = v164;
                swift_arrayInitWithTakeFrontToBack();
              }
              else
              {
                uint64_t v63 = v164;
                if (v62 != v60) {
                  swift_arrayInitWithTakeBackToFront();
                }
              }
              sub_251B25C90(v153, v63, v170);
              uint64_t v41 = v173;
            }
            ++v38;
            --v59;
            v60 -= v41;
            v61 -= v41;
            v62 += v41;
          }
          while (v38 < v39 + v59);
          uint64_t v37 = v150;
          uint64_t v22 = v155;
          BOOL v58 = v151;
          uint64_t v38 = v154;
          uint64_t v30 = v169;
        }
      }
    }
    if (v39 < v30)
    {
      if (__OFSUB__(v39, v38)) {
        goto LABEL_154;
      }
      if (v39 - v38 < (uint64_t)v58) {
        break;
      }
    }
LABEL_67:
    if (v39 < v38) {
      goto LABEL_150;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v37 = sub_251ECD5C4(0, *((void *)v37 + 2) + 1, 1, v37);
    }
    uint64_t v87 = *((void *)v37 + 2);
    unint64_t v86 = *((void *)v37 + 3);
    uint64_t v88 = v87 + 1;
    uint64_t v164 = v39;
    if (v87 >= v86 >> 1) {
      uint64_t v37 = sub_251ECD5C4((char *)(v86 > 1), v87 + 1, 1, v37);
    }
    *((void *)v37 + 2) = v88;
    uint64_t v89 = v37 + 32;
    unint64_t v90 = &v37[16 * v87 + 32];
    uint64_t v91 = v164;
    *(void *)unint64_t v90 = v38;
    *((void *)v90 + 1) = v91;
    if (v87)
    {
      while (1)
      {
        unint64_t v92 = v88 - 1;
        if (v88 >= 4)
        {
          uint64_t v97 = &v89[16 * v88];
          char v98 = *((void *)v97 - 8);
          uint64_t v99 = *((void *)v97 - 7);
          uint64_t v103 = __OFSUB__(v99, v98);
          unint64_t v100 = v99 - v98;
          if (v103) {
            goto LABEL_138;
          }
          uint64_t v102 = *((void *)v97 - 6);
          uint64_t v101 = *((void *)v97 - 5);
          uint64_t v103 = __OFSUB__(v101, v102);
          uint64_t v95 = v101 - v102;
          char v96 = v103;
          if (v103) {
            goto LABEL_139;
          }
          unint64_t v104 = v88 - 2;
          unint64_t v105 = &v89[16 * v88 - 32];
          uint64_t v107 = *(void *)v105;
          unint64_t v106 = *((void *)v105 + 1);
          uint64_t v103 = __OFSUB__(v106, v107);
          uint64_t v108 = v106 - v107;
          if (v103) {
            goto LABEL_141;
          }
          uint64_t v103 = __OFADD__(v95, v108);
          uint64_t v109 = v95 + v108;
          if (v103) {
            goto LABEL_144;
          }
          if (v109 >= v100)
          {
            uint64_t v127 = &v89[16 * v92];
            uint64_t v129 = *(void *)v127;
            uint64_t v128 = *((void *)v127 + 1);
            uint64_t v103 = __OFSUB__(v128, v129);
            uint64_t v130 = v128 - v129;
            if (v103) {
              goto LABEL_148;
            }
            uint64_t v120 = v95 < v130;
            goto LABEL_104;
          }
        }
        else
        {
          if (v88 != 3)
          {
            BOOL v121 = *((void *)v37 + 4);
            unint64_t v122 = *((void *)v37 + 5);
            uint64_t v103 = __OFSUB__(v122, v121);
            char v114 = v122 - v121;
            BOOL v115 = v103;
            goto LABEL_98;
          }
          unint64_t v94 = *((void *)v37 + 4);
          char v93 = *((void *)v37 + 5);
          uint64_t v103 = __OFSUB__(v93, v94);
          uint64_t v95 = v93 - v94;
          char v96 = v103;
        }
        if (v96) {
          goto LABEL_140;
        }
        unint64_t v104 = v88 - 2;
        unint64_t v110 = &v89[16 * v88 - 32];
        uint64_t v112 = *(void *)v110;
        uint64_t v111 = *((void *)v110 + 1);
        uint64_t v113 = __OFSUB__(v111, v112);
        char v114 = v111 - v112;
        BOOL v115 = v113;
        if (v113) {
          goto LABEL_143;
        }
        uint64_t v116 = &v89[16 * v92];
        uint64_t v118 = *(void *)v116;
        uint64_t v117 = *((void *)v116 + 1);
        uint64_t v103 = __OFSUB__(v117, v118);
        uint64_t v119 = v117 - v118;
        if (v103) {
          goto LABEL_146;
        }
        if (__OFADD__(v114, v119)) {
          goto LABEL_147;
        }
        if (v114 + v119 >= v95)
        {
          uint64_t v120 = v95 < v119;
LABEL_104:
          if (v120) {
            unint64_t v92 = v104;
          }
          goto LABEL_106;
        }
LABEL_98:
        if (v115) {
          goto LABEL_142;
        }
        uint64_t v123 = &v89[16 * v92];
        uint64_t v125 = *(void *)v123;
        uint64_t v124 = *((void *)v123 + 1);
        uint64_t v103 = __OFSUB__(v124, v125);
        uint64_t v126 = v124 - v125;
        if (v103) {
          goto LABEL_145;
        }
        if (v126 < v114) {
          goto LABEL_115;
        }
LABEL_106:
        BOOL v131 = v92 - 1;
        if (v92 - 1 >= v88)
        {
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
          goto LABEL_157;
        }
        if (!*v178) {
          goto LABEL_164;
        }
        uint64_t v132 = v37;
        char v133 = &v89[16 * v131];
        uint64_t v134 = *(void *)v133;
        uint64_t v135 = &v89[16 * v92];
        uint64_t v136 = *((void *)v135 + 1);
        uint64_t v137 = v161;
        sub_251B35E04(*v178 + *(void *)(v159 + 72) * *(void *)v133, *v178 + *(void *)(v159 + 72) * *(void *)v135, *v178 + *(void *)(v159 + 72) * v136, v156, v166, a3, v158, v167, v165, v157);
        uint64_t v161 = v137;
        if (v137) {
          goto LABEL_132;
        }
        if (v136 < v134) {
          goto LABEL_135;
        }
        if (v92 > *((void *)v132 + 2)) {
          goto LABEL_136;
        }
        *(void *)char v133 = v134;
        *(void *)&v89[16 * v131 + 8] = v136;
        BOOL v138 = *((void *)v132 + 2);
        if (v92 >= v138) {
          goto LABEL_137;
        }
        uint64_t v37 = v132;
        uint64_t v88 = v138 - 1;
        memmove(&v89[16 * v92], v135 + 16, 16 * (v138 - 1 - v92));
        *((void *)v132 + 2) = v138 - 1;
        uint64_t v22 = v155;
        if (v138 <= 2) {
          goto LABEL_115;
        }
      }
    }
    uint64_t v88 = 1;
LABEL_115:
    uint64_t v30 = v178[1];
    uint64_t v36 = v164;
    uint64_t v29 = v149;
    if (v164 >= v30) {
      goto LABEL_119;
    }
  }
  if (__OFADD__(v38, v58)) {
    goto LABEL_156;
  }
  if ((uint64_t)v58 + v38 >= v30) {
    uint64_t v66 = v30;
  }
  else {
    uint64_t v66 = (uint64_t)v58 + v38;
  }
  if (v66 >= v38)
  {
    if (v39 != v66)
    {
      uint64_t v150 = v37;
      uint64_t v67 = *(void *)(v159 + 72);
      unint64_t v173 = v67 * (v39 - 1);
      unint64_t v163 = v67;
      unint64_t v68 = v39 * v67;
      uint64_t v152 = v66;
      do
      {
        char v71 = 0;
        uint64_t v164 = v39;
        while (1)
        {
          unint64_t v169 = v38;
          uint64_t v72 = *v178;
          char v73 = v68;
          uint64_t v74 = v68 + v71 + *v178;
          uint64_t v75 = v172;
          uint64_t v76 = v167;
          sub_251B25B74(v74, v172, v167);
          uint64_t v77 = (uint64_t)v171;
          sub_251B25B74(v173 + v71 + v72, (uint64_t)v171, v76);
          uint64_t v78 = v75;
          uint64_t v79 = v166;
          v166(&v176, v78);
          uint64_t v80 = v177;
          if (!v177) {
            goto LABEL_159;
          }
          v79(&v174, v77);
          if (!v175) {
            goto LABEL_160;
          }
          uint64_t v81 = v176 == v174 && v80 == v175;
          unint64_t v68 = v73;
          if (v81) {
            break;
          }
          uint64_t v82 = sub_251F36B10();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v83 = v165;
          sub_251B25BDC((uint64_t)v171, v165);
          sub_251B25BDC(v172, v83);
          if ((v82 & 1) == 0) {
            goto LABEL_53;
          }
          uint64_t v84 = *v178;
          if (!*v178) {
            goto LABEL_161;
          }
          uint64_t v85 = v84 + v173 + v71;
          sub_251B25C90(v84 + v73 + v71, v168, v170);
          unint64_t v70 = v164;
          swift_arrayInitWithTakeFrontToBack();
          sub_251B25C90(v168, v85, v170);
          v71 -= v163;
          uint64_t v38 = v169 + 1;
          if (v70 == v169 + 1) {
            goto LABEL_54;
          }
        }
        swift_bridgeObjectRelease_n();
        uint64_t v69 = v165;
        sub_251B25BDC((uint64_t)v171, v165);
        sub_251B25BDC(v172, v69);
LABEL_53:
        unint64_t v70 = v164;
LABEL_54:
        uint64_t v39 = v70 + 1;
        v173 += v163;
        unint64_t v68 = v73 + v163;
        uint64_t v38 = v154;
      }
      while (v39 != v152);
      uint64_t v39 = v152;
      uint64_t v37 = v150;
      uint64_t v22 = v155;
    }
    goto LABEL_67;
  }
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  __break(1u);
LABEL_161:
  __break(1u);
LABEL_162:
  __break(1u);
LABEL_163:
  __break(1u);
LABEL_164:
  __break(1u);
LABEL_165:
  __break(1u);
LABEL_166:
  __break(1u);
LABEL_167:
  uint64_t result = (void *)sub_251F36670();
  __break(1u);
  return result;
}

unint64_t sub_251B3746C(unint64_t *a1, uint64_t a2)
{
  uint64_t v5 = (int *)type metadata accessor for StaticResident();
  uint64_t v6 = *((void *)v5 - 1);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v51 = (uint64_t)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v48 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v48 - v12;
  unint64_t v14 = *a1;
  uint64_t v15 = swift_bridgeObjectRetain();
  unint64_t v16 = sub_251B2E680(v15, a2);
  LODWORD(v54) = v17;
  swift_bridgeObjectRelease();
  if (!v2)
  {
    uint64_t v50 = v11;
    if ((v54 & 1) == 0)
    {
      int64_t v18 = v16 + 1;
      if (!__OFADD__(v16, 1))
      {
        uint64_t v48 = 0;
        uint64_t v49 = v6;
        uint64_t v52 = a1;
        while (1)
        {
          unint64_t v19 = *a1;
          unint64_t v20 = *(void *)(*a1 + 16);
          if (v18 == v20) {
            return v16;
          }
          if (v18 >= v20) {
            break;
          }
          unint64_t v54 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
          uint64_t v21 = *(void *)(v6 + 72);
          int64_t v53 = v21 * v18;
          sub_251B25B74(v19 + v54 + v21 * v18, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for StaticResident);
          uint64_t v22 = *(void *)(a2 + 16);
          swift_bridgeObjectRetain();
          if (v22)
          {
            unint64_t v23 = v54;
            do
            {
              unint64_t v24 = a2 + v23;
              if ((sub_251F34D70() & 1) == 0) {
                goto LABEL_10;
              }
              uint64_t v25 = v5[5];
              uint64_t v26 = *(void *)(v24 + v25);
              uint64_t v27 = *(void *)(v24 + v25 + 8);
              uint64_t v28 = &v13[v25];
              BOOL v29 = v26 == *(void *)v28 && v27 == *((void *)v28 + 1);
              if (!v29 && (sub_251F36B10() & 1) == 0) {
                goto LABEL_10;
              }
              uint64_t v30 = v5[6];
              uint64_t v31 = (void *)(a2 + v23 + v30);
              uint64_t v32 = v31[1];
              uint64_t v33 = &v13[v30];
              uint64_t v34 = *((void *)v33 + 1);
              if (v32)
              {
                if (!v34) {
                  goto LABEL_10;
                }
                BOOL v35 = *v31 == *(void *)v33 && v32 == v34;
                if (!v35 && (sub_251F36B10() & 1) == 0) {
                  goto LABEL_10;
                }
              }
              else if (v34)
              {
                goto LABEL_10;
              }
              if ((sub_251B0693C(*(void *)(a2 + v5[7] + v23), *(void *)&v13[v5[7]]) & 1) == 0
                || (sub_251B06B20(*(void *)(a2 + v5[8] + v23), *(void *)&v13[v5[8]]) & 1) == 0)
              {
                goto LABEL_10;
              }
              uint64_t v36 = v5[9];
              unsigned int v37 = *(unsigned __int16 *)(a2 + v36 + v23);
              unsigned int v38 = *(unsigned __int16 *)&v13[v36];
              if (v37 >> 14)
              {
                if (v37 >> 14 != 1)
                {
                  switch(v37)
                  {
                    case 0x8000u:
                      if (v38 == 0x8000) {
                        goto LABEL_43;
                      }
                      goto LABEL_10;
                    case 0x8001u:
                      int v39 = 32769;
                      goto LABEL_42;
                    case 0x8002u:
                      int v39 = 32770;
                      goto LABEL_42;
                    case 0x8003u:
                      int v39 = 32771;
                      goto LABEL_42;
                    default:
                      int v39 = 33024;
LABEL_42:
                      if (v38 == v39) {
                        goto LABEL_43;
                      }
                      goto LABEL_10;
                  }
                }
                if ((v38 & 0xC000) != 0x4000
                  || ((v37 & 1) == 0) == (v38 & 1)
                  || ((((v37 & 0x100) == 0) ^ ((unsigned __int16)(v38 & 0x100) >> 8)) & 1) == 0)
                {
                  goto LABEL_10;
                }
              }
              else if (v38 >> 14 || v38 != v37)
              {
                goto LABEL_10;
              }
LABEL_43:
              if (sub_251F34D70())
              {
                swift_bridgeObjectRelease();
                sub_251B25BDC((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for StaticResident);
                a1 = v52;
                goto LABEL_55;
              }
LABEL_10:
              v23 += v21;
              --v22;
            }
            while (v22);
          }
          swift_bridgeObjectRelease();
          sub_251B25BDC((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for StaticResident);
          a1 = v52;
          if (v16 != v18)
          {
            if ((v16 & 0x8000000000000000) != 0) {
              goto LABEL_63;
            }
            unint64_t v40 = *v52;
            unint64_t v41 = *(void *)(*v52 + 16);
            if (v16 >= v41) {
              goto LABEL_64;
            }
            unint64_t v42 = v40 + v54;
            unint64_t v43 = v21 * v16;
            sub_251B25B74(v40 + v54 + v43, (uint64_t)v50, (uint64_t (*)(void))type metadata accessor for StaticResident);
            if (v18 >= (uint64_t)v41) {
              goto LABEL_65;
            }
            sub_251B25B74(v42 + v53, v51, (uint64_t (*)(void))type metadata accessor for StaticResident);
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            a1 = v52;
            *uint64_t v52 = v40;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              unint64_t v40 = sub_251A926C4(v40);
              *a1 = v40;
            }
            if (v16 >= *(void *)(v40 + 16)) {
              goto LABEL_66;
            }
            unint64_t v45 = v54;
            sub_251B392A8(v51, v40 + v54 + v43, (uint64_t (*)(void))type metadata accessor for StaticResident);
            if (v18 >= *(void *)(*a1 + 16)) {
              goto LABEL_67;
            }
            sub_251B392A8((uint64_t)v50, *a1 + v45 + v53, (uint64_t (*)(void))type metadata accessor for StaticResident);
          }
          BOOL v46 = __OFADD__(v16++, 1);
          if (v46) {
            goto LABEL_62;
          }
LABEL_55:
          BOOL v46 = __OFADD__(v18++, 1);
          uint64_t v6 = v49;
          if (v46) {
            goto LABEL_61;
          }
        }
        __break(1u);
LABEL_61:
        __break(1u);
LABEL_62:
        __break(1u);
LABEL_63:
        __break(1u);
LABEL_64:
        __break(1u);
LABEL_65:
        __break(1u);
LABEL_66:
        __break(1u);
LABEL_67:
        __break(1u);
      }
      __break(1u);
      JUMPOUT(0x251B37984);
    }
    return *(void *)(v14 + 16);
  }
  return v16;
}

uint64_t sub_251B37994(unint64_t a1, unint64_t a2, uint64_t *a3, unint64_t a4, void (*a5)(uint64_t), uint64_t a6, uint64_t (*a7)(void), uint64_t (*a8)(void), uint64_t (*a9)(void), void (*a10)(unint64_t *, unint64_t *, unint64_t *))
{
  uint64_t v76 = a5;
  uint64_t v68 = a7(0);
  uint64_t v15 = MEMORY[0x270FA5388](v68);
  uint64_t v75 = (uint64_t)&v63 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v74 = (uint64_t)&v63 - v17;
  uint64_t v19 = *(void *)(v18 + 72);
  if (!v19)
  {
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  if (a2 - a1 == 0x8000000000000000 && v19 == -1) {
    goto LABEL_61;
  }
  uint64_t v20 = (uint64_t)a3 - a2;
  if ((uint64_t *)((char *)a3 - a2) == (uint64_t *)0x8000000000000000 && v19 == -1) {
    goto LABEL_62;
  }
  char v73 = a9;
  uint64_t v21 = (uint64_t)(a2 - a1) / v19;
  unint64_t v81 = a1;
  unint64_t v80 = a4;
  uint64_t v22 = v20 / v19;
  if (v21 >= v20 / v19)
  {
    if ((v22 & 0x8000000000000000) == 0)
    {
      uint64_t v24 = v22 * v19;
      if (a4 < a2 || a2 + v24 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v43 = a4 + v24;
      unint64_t v79 = a4 + v24;
      unint64_t v81 = a2;
      if (v24 >= 1 && a1 < a2)
      {
        uint64_t v45 = -v19;
        uint64_t v72 = a8;
        unint64_t v65 = a1;
        unint64_t v66 = a4;
        uint64_t v64 = v45;
        uint64_t v46 = v74;
        do
        {
          uint64_t v77 = a3;
          unint64_t v78 = a2;
          char v71 = (uint64_t *)((char *)a3 + v45);
          sub_251B25B74(v43 + v45, v46, a8);
          uint64_t v67 = a2 + v45;
          uint64_t v47 = v75;
          sub_251B25B74(a2 + v45, v75, a8);
          uint64_t v48 = sub_251F34DA0();
          unint64_t v70 = &v63;
          uint64_t v49 = *(void *)(v48 - 8);
          uint64_t v50 = *(void *)(v49 + 64);
          MEMORY[0x270FA5388](v48);
          uint64_t v51 = v76;
          uint64_t v52 = ((uint64_t (*)(uint64_t))v76)(v46);
          uint64_t v69 = &v63;
          MEMORY[0x270FA5388](v52);
          int64_t v53 = (char *)&v63 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
          v51(v47);
          char v54 = MEMORY[0x2533A9CA0](v53, v53);
          unint64_t v55 = *(void (**)(char *, uint64_t))(v49 + 8);
          v55(v53, v48);
          v55(v53, v48);
          uint64_t v56 = v47;
          uint64_t v57 = v73;
          sub_251B25BDC(v56, v73);
          sub_251B25BDC(v46, v57);
          if (v54)
          {
            uint64_t v45 = v64;
            a3 = v71;
            if ((unint64_t)v77 < v78 || (unint64_t)v71 >= v78)
            {
              unint64_t v60 = v67;
              swift_arrayInitWithTakeFrontToBack();
              a8 = v72;
              unint64_t v58 = v65;
              unint64_t v59 = v66;
            }
            else
            {
              a8 = v72;
              unint64_t v58 = v65;
              unint64_t v59 = v66;
              unint64_t v60 = v67;
              if (v77 != (uint64_t *)v78) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v81 += v45;
          }
          else
          {
            unint64_t v60 = v78;
            unint64_t v61 = v79;
            v79 += v64;
            uint64_t v45 = v64;
            a3 = v71;
            if ((unint64_t)v77 < v61 || (unint64_t)v71 >= v61)
            {
              swift_arrayInitWithTakeFrontToBack();
              a8 = v72;
              unint64_t v58 = v65;
              unint64_t v59 = v66;
            }
            else
            {
              a8 = v72;
              unint64_t v58 = v65;
              unint64_t v59 = v66;
              if (v77 != (uint64_t *)v61) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
          }
          unint64_t v43 = v79;
          if (v79 <= v59) {
            break;
          }
          a2 = v60;
        }
        while (v60 > v58);
      }
      goto LABEL_59;
    }
  }
  else if ((v21 & 0x8000000000000000) == 0)
  {
    uint64_t v23 = v21 * v19;
    if (a4 < a1 || a1 + v23 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    uint64_t v69 = (uint64_t *)(a4 + v23);
    unint64_t v79 = a4 + v23;
    if (v23 >= 1 && a2 < (unint64_t)a3)
    {
      uint64_t v72 = a8;
      uint64_t v77 = a3;
      uint64_t v67 = v19;
      do
      {
        unint64_t v78 = a2;
        uint64_t v26 = v74;
        sub_251B25B74(a2, v74, a8);
        uint64_t v27 = v75;
        sub_251B25B74(a4, v75, a8);
        uint64_t v28 = sub_251F34DA0();
        char v71 = &v63;
        uint64_t v29 = *(void *)(v28 - 8);
        uint64_t v30 = *(void *)(v29 + 64);
        MEMORY[0x270FA5388](v28);
        uint64_t v31 = v76;
        uint64_t v32 = ((uint64_t (*)(uint64_t))v76)(v26);
        unint64_t v70 = &v63;
        MEMORY[0x270FA5388](v32);
        uint64_t v33 = (char *)&v63 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
        v31(v27);
        char v34 = MEMORY[0x2533A9CA0](v33, v33);
        BOOL v35 = *(void (**)(char *, uint64_t))(v29 + 8);
        v35(v33, v28);
        v35(v33, v28);
        uint64_t v36 = v73;
        sub_251B25BDC(v27, v73);
        sub_251B25BDC(v26, v36);
        unint64_t v37 = v81;
        if (v34)
        {
          uint64_t v38 = v67;
          unint64_t v39 = v78 + v67;
          if (v81 < v78 || v81 >= v39)
          {
            swift_arrayInitWithTakeFrontToBack();
            unint64_t v40 = (unint64_t)v77;
            a8 = v72;
          }
          else
          {
            unint64_t v40 = (unint64_t)v77;
            a8 = v72;
            if (v81 == v78) {
              unint64_t v37 = v78;
            }
            else {
              swift_arrayInitWithTakeBackToFront();
            }
          }
        }
        else
        {
          unint64_t v41 = v78;
          uint64_t v38 = v67;
          unint64_t v42 = v80 + v67;
          if (v81 < v80 || v81 >= v42)
          {
            swift_arrayInitWithTakeFrontToBack();
            unint64_t v40 = (unint64_t)v77;
            a8 = v72;
          }
          else
          {
            unint64_t v40 = (unint64_t)v77;
            a8 = v72;
            if (v81 != v80) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          unint64_t v80 = v42;
          unint64_t v39 = v41;
        }
        unint64_t v81 = v37 + v38;
        a4 = v80;
        if (v80 >= (unint64_t)v69) {
          break;
        }
        a2 = v39;
      }
      while (v39 < v40);
    }
LABEL_59:
    a10(&v81, &v80, &v79);
    return 1;
  }
LABEL_63:
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251B380F8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(uint64_t), uint64_t a6, uint64_t (*a7)(void), uint64_t (*a8)(void), uint64_t (*a9)(void), uint64_t (*a10)(void))
{
  uint64_t v49 = a5;
  uint64_t v50 = a8;
  uint64_t v44 = a1;
  uint64_t v45 = a7(0);
  uint64_t v13 = MEMORY[0x270FA5388](v45);
  uint64_t v56 = (uint64_t)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v48 = (uint64_t)&v42 - v16;
  uint64_t result = MEMORY[0x270FA5388](v15);
  uint64_t v62 = (uint64_t)&v42 - v19;
  uint64_t v54 = a3;
  uint64_t v43 = a2;
  if (a3 != a2)
  {
    unint64_t v55 = a10;
    uint64_t v46 = a9;
    uint64_t v47 = a4;
    uint64_t v20 = *(void *)(v18 + 72);
    uint64_t v21 = v20 * (v54 - 1);
    uint64_t v51 = v20;
    uint64_t v22 = v20 * v54;
LABEL_5:
    uint64_t v23 = 0;
    uint64_t v59 = v44;
    uint64_t v52 = v22;
    uint64_t v53 = v21;
    while (1)
    {
      uint64_t v24 = *a4;
      uint64_t v58 = v22 + v23;
      uint64_t v25 = v22 + v23 + v24;
      uint64_t v26 = v62;
      uint64_t v27 = v50;
      sub_251B25B74(v25, v62, v50);
      uint64_t v57 = v21 + v23;
      uint64_t v28 = v21 + v23 + v24;
      uint64_t v29 = v48;
      sub_251B25B74(v28, v48, v27);
      uint64_t v30 = sub_251F34DA0();
      unint64_t v61 = &v42;
      uint64_t v31 = *(void *)(v30 - 8);
      uint64_t v32 = *(void *)(v31 + 64);
      MEMORY[0x270FA5388](v30);
      uint64_t v33 = v26;
      char v34 = v49;
      uint64_t v35 = ((uint64_t (*)(uint64_t))v49)(v33);
      unint64_t v60 = &v42;
      MEMORY[0x270FA5388](v35);
      uint64_t v36 = (char *)&v42 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
      v34(v29);
      LOBYTE(v27) = MEMORY[0x2533A9CA0](v36, v36);
      unint64_t v37 = *(void (**)(char *, uint64_t))(v31 + 8);
      v37(v36, v30);
      a4 = v47;
      v37(v36, v30);
      uint64_t v38 = v29;
      uint64_t v22 = v52;
      uint64_t v21 = v53;
      unint64_t v39 = v46;
      sub_251B25BDC(v38, v46);
      uint64_t result = sub_251B25BDC(v62, v39);
      if ((v27 & 1) == 0)
      {
LABEL_4:
        v21 += v51;
        v22 += v51;
        if (++v54 == v43) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v40 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v41 = v40 + v21 + v23;
      sub_251B25C90(v40 + v22 + v23, v56, v55);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = sub_251B25C90(v56, v41, v55);
      v23 -= v51;
      if (v54 == ++v59) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_251B38498(void *a1, void (*a2)(uint64_t), uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void), uint64_t (*a6)(void), uint64_t (*a7)(void), uint64_t (*a8)(void), void (*a9)(unint64_t *, unint64_t *, unint64_t *))
{
  uint64_t v156 = a8;
  uint64_t v176 = a7;
  uint64_t v166 = a3;
  uint64_t v167 = a6;
  uint64_t v168 = a2;
  unint64_t v169 = a5;
  uint64_t v161 = a4(0);
  uint64_t v158 = *(void *)(v161 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v161);
  uint64_t v150 = (uint64_t)&v147 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v170 = (uint64_t)&v147 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v177 = (uint64_t)&v147 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v178 = (uint64_t)&v147 - v17;
  uint64_t v18 = a1[1];
  uint64_t result = sub_251F36AA0();
  if (result >= v18)
  {
    if (v18 < 0) {
      goto LABEL_138;
    }
    if (v18) {
      return sub_251B380F8(0, v18, 1, a1, v168, v166, v156, v169, v167, v176);
    }
    return result;
  }
  if (v18 >= 0) {
    uint64_t v20 = v18;
  }
  else {
    uint64_t v20 = v18 + 1;
  }
  if (v18 < -1) {
    goto LABEL_146;
  }
  uint64_t v155 = a9;
  uint64_t v147 = result;
  uint64_t v160 = v9;
  if (v18 < 2)
  {
    uint64_t v22 = MEMORY[0x263F8EE78];
    unint64_t v154 = MEMORY[0x263F8EE78]
         + ((*(unsigned __int8 *)(v158 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v158 + 80));
    if (v18 != 1)
    {
      unint64_t v25 = *(void *)(MEMORY[0x263F8EE78] + 16);
      uint64_t v24 = (char *)MEMORY[0x263F8EE78];
LABEL_103:
      if (v25 >= 2)
      {
        uint64_t v139 = *a1;
        uint64_t v157 = v22;
        do
        {
          unint64_t v140 = v25 - 2;
          if (v25 < 2) {
            goto LABEL_133;
          }
          if (!v139) {
            goto LABEL_145;
          }
          unint64_t v141 = v24;
          uint64_t v142 = *(void *)&v24[16 * v140 + 32];
          uint64_t v143 = *(void *)&v24[16 * v25 + 24];
          uint64_t v144 = v160;
          sub_251B37994(v139 + *(void *)(v158 + 72) * v142, v139 + *(void *)(v158 + 72) * *(void *)&v24[16 * v25 + 16], (uint64_t *)(v139 + *(void *)(v158 + 72) * v143), v154, v168, v166, v156, v169, v167, v155);
          uint64_t v160 = v144;
          if (v144) {
            goto LABEL_101;
          }
          if (v143 < v142) {
            goto LABEL_134;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v141 = sub_251ECDC38((uint64_t)v141);
          }
          if (v140 >= *((void *)v141 + 2)) {
            goto LABEL_135;
          }
          uint64_t v145 = &v141[16 * v140 + 32];
          *(void *)uint64_t v145 = v142;
          *((void *)v145 + 1) = v143;
          unint64_t v146 = *((void *)v141 + 2);
          if (v25 > v146) {
            goto LABEL_136;
          }
          memmove(&v141[16 * v25 + 16], &v141[16 * v25 + 32], 16 * (v146 - v25));
          uint64_t v24 = v141;
          *((void *)v141 + 2) = v146 - 1;
          unint64_t v25 = v146 - 1;
          uint64_t v22 = v157;
        }
        while (v146 > 2);
      }
      swift_bridgeObjectRelease();
      *(void *)(v22 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v21 = v20 >> 1;
    uint64_t v22 = sub_251F35B50();
    *(void *)(v22 + 16) = v21;
    unint64_t v154 = v22 + ((*(unsigned __int8 *)(v158 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v158 + 80));
  }
  uint64_t v23 = 0;
  uint64_t v24 = (char *)MEMORY[0x263F8EE78];
  uint64_t v157 = v22;
  uint64_t v151 = a1;
  while (1)
  {
    uint64_t v26 = v23;
    uint64_t v27 = v23 + 1;
    unint64_t v149 = v24;
    uint64_t v159 = v23;
    if (v23 + 1 < v18)
    {
      uint64_t v172 = v18;
      uint64_t v28 = *a1;
      uint64_t v29 = *(void *)(v158 + 72);
      uint64_t v165 = v29 * v27;
      uint64_t v148 = v28;
      uint64_t v30 = v178;
      uint64_t v31 = v169;
      sub_251B25B74(v28 + v29 * v27, v178, v169);
      uint64_t v32 = v177;
      sub_251B25B74(v28 + v29 * v26, v177, v31);
      uint64_t v33 = sub_251F34DA0();
      uint64_t v175 = &v147;
      uint64_t v34 = *(void *)(v33 - 8);
      uint64_t v35 = *(void *)(v34 + 64);
      MEMORY[0x270FA5388](v33);
      unint64_t v36 = (v35 + 15) & 0xFFFFFFFFFFFFFFF0;
      unint64_t v37 = v168;
      uint64_t v38 = ((uint64_t (*)(uint64_t))v168)(v30);
      uint64_t v174 = &v147;
      uint64_t v162 = v35;
      MEMORY[0x270FA5388](v38);
      v37(v32);
      LODWORD(v171) = MEMORY[0x2533A9CA0]((char *)&v147 - v36, (char *)&v147 - v36);
      unint64_t v39 = *(void (**)(char *, uint64_t))(v34 + 8);
      uint64_t v26 = v159;
      v39((char *)&v147 - v36, v33);
      uint64_t v163 = v34 + 8;
      uint64_t v164 = v33;
      unint64_t v153 = v39;
      v39((char *)&v147 - v36, v33);
      uint64_t v40 = v167;
      sub_251B25BDC(v32, v167);
      sub_251B25BDC(v178, v40);
      uint64_t v41 = v26 + 2;
      uint64_t v173 = v29;
      uint64_t v152 = v29 * (v26 + 2);
      uint64_t v42 = v148;
      while (1)
      {
        uint64_t v18 = v172;
        if (v172 == v41) {
          break;
        }
        uint64_t v43 = v178;
        uint64_t v44 = v169;
        sub_251B25B74(v42 + v152, v178, v169);
        uint64_t v45 = v177;
        uint64_t v46 = sub_251B25B74(v42 + v165, v177, v44);
        uint64_t v175 = &v147;
        uint64_t v47 = v162;
        MEMORY[0x270FA5388](v46);
        uint64_t v48 = (char *)&v147 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
        uint64_t v49 = v168;
        uint64_t v50 = ((uint64_t (*)(uint64_t))v168)(v43);
        uint64_t v174 = &v147;
        MEMORY[0x270FA5388](v50);
        v49(v45);
        LODWORD(v49) = MEMORY[0x2533A9CA0](v48, v48) & 1;
        uint64_t v51 = v164;
        uint64_t v52 = v153;
        v153(v48, v164);
        uint64_t v53 = v48;
        uint64_t v26 = v159;
        v52(v53, v51);
        uint64_t v54 = v167;
        sub_251B25BDC(v45, v167);
        sub_251B25BDC(v43, v54);
        ++v41;
        v42 += v173;
        if ((v171 & 1) != v49)
        {
          uint64_t v27 = v41 - 1;
          uint64_t v18 = v172;
          goto LABEL_21;
        }
      }
      uint64_t v27 = v172;
LABEL_21:
      uint64_t v22 = v157;
      a1 = v151;
      if (v171)
      {
        if (v27 < v26) {
          goto LABEL_139;
        }
        if (v26 < v27)
        {
          uint64_t v55 = 0;
          uint64_t v56 = v173 * (v27 - 1);
          uint64_t v57 = v27 * v173;
          uint64_t v58 = v26;
          uint64_t v59 = v26 * v173;
          do
          {
            if (v58 != v27 + v55 - 1)
            {
              uint64_t v61 = v148;
              if (!v148) {
                goto LABEL_144;
              }
              unint64_t v62 = v148 + v59;
              uint64_t v175 = (uint64_t *)(v148 + v56);
              sub_251B25C90(v148 + v59, v150, v176);
              if (v59 < v56 || v62 >= v61 + v57)
              {
                uint64_t v60 = (uint64_t)v175;
                swift_arrayInitWithTakeFrontToBack();
              }
              else
              {
                uint64_t v60 = (uint64_t)v175;
                if (v59 != v56) {
                  swift_arrayInitWithTakeBackToFront();
                }
              }
              sub_251B25C90(v150, v60, v176);
              uint64_t v26 = v159;
            }
            ++v58;
            --v55;
            v56 -= v173;
            v57 -= v173;
            v59 += v173;
          }
          while (v58 < v27 + v55);
          uint64_t v22 = v157;
          a1 = v151;
        }
      }
    }
    if (v27 < v18)
    {
      if (__OFSUB__(v27, v26)) {
        goto LABEL_137;
      }
      if (v27 - v26 < v147) {
        break;
      }
    }
LABEL_53:
    if (v27 < v26) {
      goto LABEL_132;
    }
    if (swift_isUniquelyReferenced_nonNull_native()) {
      uint64_t v24 = v149;
    }
    else {
      uint64_t v24 = sub_251ECD5C4(0, *((void *)v149 + 2) + 1, 1, v149);
    }
    unint64_t v88 = *((void *)v24 + 2);
    unint64_t v87 = *((void *)v24 + 3);
    unint64_t v25 = v88 + 1;
    if (v88 >= v87 >> 1) {
      uint64_t v24 = sub_251ECD5C4((char *)(v87 > 1), v88 + 1, 1, v24);
    }
    *((void *)v24 + 2) = v25;
    uint64_t v89 = v24 + 32;
    unint64_t v90 = &v24[16 * v88 + 32];
    *(void *)unint64_t v90 = v26;
    *((void *)v90 + 1) = v27;
    uint64_t v165 = v27;
    if (v88)
    {
      while (1)
      {
        unint64_t v91 = v25 - 1;
        if (v25 >= 4)
        {
          char v96 = &v89[16 * v25];
          uint64_t v97 = *((void *)v96 - 8);
          uint64_t v98 = *((void *)v96 - 7);
          BOOL v102 = __OFSUB__(v98, v97);
          uint64_t v99 = v98 - v97;
          if (v102) {
            goto LABEL_121;
          }
          uint64_t v101 = *((void *)v96 - 6);
          uint64_t v100 = *((void *)v96 - 5);
          BOOL v102 = __OFSUB__(v100, v101);
          uint64_t v94 = v100 - v101;
          char v95 = v102;
          if (v102) {
            goto LABEL_122;
          }
          unint64_t v103 = v25 - 2;
          unint64_t v104 = &v89[16 * v25 - 32];
          uint64_t v106 = *(void *)v104;
          uint64_t v105 = *((void *)v104 + 1);
          BOOL v102 = __OFSUB__(v105, v106);
          uint64_t v107 = v105 - v106;
          if (v102) {
            goto LABEL_124;
          }
          BOOL v102 = __OFADD__(v94, v107);
          uint64_t v108 = v94 + v107;
          if (v102) {
            goto LABEL_127;
          }
          if (v108 >= v99)
          {
            uint64_t v126 = &v89[16 * v91];
            uint64_t v128 = *(void *)v126;
            uint64_t v127 = *((void *)v126 + 1);
            BOOL v102 = __OFSUB__(v127, v128);
            uint64_t v129 = v127 - v128;
            if (v102) {
              goto LABEL_131;
            }
            BOOL v119 = v94 < v129;
            goto LABEL_90;
          }
        }
        else
        {
          if (v25 != 3)
          {
            uint64_t v120 = *((void *)v24 + 4);
            uint64_t v121 = *((void *)v24 + 5);
            BOOL v102 = __OFSUB__(v121, v120);
            uint64_t v113 = v121 - v120;
            char v114 = v102;
            goto LABEL_84;
          }
          uint64_t v93 = *((void *)v24 + 4);
          uint64_t v92 = *((void *)v24 + 5);
          BOOL v102 = __OFSUB__(v92, v93);
          uint64_t v94 = v92 - v93;
          char v95 = v102;
        }
        if (v95) {
          goto LABEL_123;
        }
        unint64_t v103 = v25 - 2;
        uint64_t v109 = &v89[16 * v25 - 32];
        uint64_t v111 = *(void *)v109;
        uint64_t v110 = *((void *)v109 + 1);
        BOOL v112 = __OFSUB__(v110, v111);
        uint64_t v113 = v110 - v111;
        char v114 = v112;
        if (v112) {
          goto LABEL_126;
        }
        BOOL v115 = &v89[16 * v91];
        uint64_t v117 = *(void *)v115;
        uint64_t v116 = *((void *)v115 + 1);
        BOOL v102 = __OFSUB__(v116, v117);
        uint64_t v118 = v116 - v117;
        if (v102) {
          goto LABEL_129;
        }
        if (__OFADD__(v113, v118)) {
          goto LABEL_130;
        }
        if (v113 + v118 >= v94)
        {
          BOOL v119 = v94 < v118;
LABEL_90:
          if (v119) {
            unint64_t v91 = v103;
          }
          goto LABEL_92;
        }
LABEL_84:
        if (v114) {
          goto LABEL_125;
        }
        unint64_t v122 = &v89[16 * v91];
        uint64_t v124 = *(void *)v122;
        uint64_t v123 = *((void *)v122 + 1);
        BOOL v102 = __OFSUB__(v123, v124);
        uint64_t v125 = v123 - v124;
        if (v102) {
          goto LABEL_128;
        }
        if (v125 < v113) {
          goto LABEL_14;
        }
LABEL_92:
        unint64_t v130 = v91 - 1;
        if (v91 - 1 >= v25)
        {
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
          goto LABEL_141;
        }
        uint64_t v131 = *a1;
        if (!*a1) {
          goto LABEL_143;
        }
        uint64_t v132 = v24;
        char v133 = &v89[16 * v130];
        uint64_t v134 = *(void *)v133;
        uint64_t v135 = &v89[16 * v91];
        uint64_t v136 = *((void *)v135 + 1);
        uint64_t v137 = v160;
        sub_251B37994(v131 + *(void *)(v158 + 72) * *(void *)v133, v131 + *(void *)(v158 + 72) * *(void *)v135, (uint64_t *)(v131 + *(void *)(v158 + 72) * v136), v154, v168, v166, v156, v169, v167, v155);
        if (v137)
        {
LABEL_101:
          swift_bridgeObjectRelease();
          *(void *)(v157 + 16) = 0;
          return swift_bridgeObjectRelease();
        }
        if (v136 < v134) {
          goto LABEL_118;
        }
        if (v91 > *((void *)v132 + 2)) {
          goto LABEL_119;
        }
        *(void *)char v133 = v134;
        *(void *)&v89[16 * v130 + 8] = v136;
        unint64_t v138 = *((void *)v132 + 2);
        if (v91 >= v138) {
          goto LABEL_120;
        }
        uint64_t v160 = 0;
        unint64_t v25 = v138 - 1;
        memmove(&v89[16 * v91], v135 + 16, 16 * (v138 - 1 - v91));
        uint64_t v24 = v132;
        *((void *)v132 + 2) = v138 - 1;
        uint64_t v22 = v157;
        a1 = v151;
        if (v138 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v25 = 1;
LABEL_14:
    uint64_t v18 = a1[1];
    uint64_t v23 = v165;
    if (v165 >= v18) {
      goto LABEL_103;
    }
  }
  if (__OFADD__(v26, v147)) {
    goto LABEL_140;
  }
  if (v26 + v147 >= v18) {
    uint64_t v63 = (void (*)(char *, uint64_t))v18;
  }
  else {
    uint64_t v63 = (void (*)(char *, uint64_t))(v26 + v147);
  }
  if ((uint64_t)v63 >= v26)
  {
    if ((void (*)(char *, uint64_t))v27 != v63)
    {
      uint64_t v64 = *(void *)(v158 + 72);
      uint64_t v65 = v64 * (v27 - 1);
      uint64_t v162 = v64;
      uint64_t v66 = v27 * v64;
      unint64_t v153 = v63;
      do
      {
        uint64_t v68 = 0;
        uint64_t v164 = v65;
        uint64_t v165 = v27;
        uint64_t v163 = v66;
        while (1)
        {
          uint64_t v69 = *a1;
          uint64_t v172 = v66 + v68;
          uint64_t v173 = v26;
          uint64_t v70 = v66 + v68 + v69;
          uint64_t v71 = v178;
          uint64_t v72 = a1;
          char v73 = v169;
          sub_251B25B74(v70, v178, v169);
          uint64_t v171 = v65 + v68;
          sub_251B25B74(v65 + v68 + v69, v177, v73);
          uint64_t v74 = sub_251F34DA0();
          uint64_t v175 = &v147;
          uint64_t v75 = *(void *)(v74 - 8);
          uint64_t v76 = *(void *)(v75 + 64);
          MEMORY[0x270FA5388](v74);
          uint64_t v77 = v71;
          unint64_t v78 = v168;
          uint64_t v79 = ((uint64_t (*)(uint64_t))v168)(v77);
          uint64_t v174 = &v147;
          MEMORY[0x270FA5388](v79);
          unint64_t v80 = (char *)&v147 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0);
          uint64_t v81 = v177;
          v78(v177);
          char v82 = MEMORY[0x2533A9CA0](v80, v80);
          uint64_t v83 = *(void (**)(char *, uint64_t))(v75 + 8);
          v83(v80, v74);
          v83(v80, v74);
          uint64_t v84 = v167;
          sub_251B25BDC(v81, v167);
          sub_251B25BDC(v178, v84);
          if ((v82 & 1) == 0) {
            break;
          }
          uint64_t v85 = *v72;
          if (!*v72) {
            goto LABEL_142;
          }
          a1 = v72;
          uint64_t v66 = v163;
          uint64_t v65 = v164;
          uint64_t v86 = v85 + v164 + v68;
          sub_251B25C90(v85 + v163 + v68, v170, v176);
          uint64_t v67 = v165;
          swift_arrayInitWithTakeFrontToBack();
          sub_251B25C90(v170, v86, v176);
          v68 -= v162;
          uint64_t v26 = v173 + 1;
          if (v67 == v173 + 1) {
            goto LABEL_46;
          }
        }
        a1 = v72;
        uint64_t v65 = v164;
        uint64_t v67 = v165;
        uint64_t v66 = v163;
LABEL_46:
        uint64_t v27 = v67 + 1;
        v65 += v162;
        v66 += v162;
        uint64_t v26 = v159;
      }
      while ((void (*)(char *, uint64_t))v27 != v153);
      uint64_t v27 = (uint64_t)v153;
      uint64_t v22 = v157;
    }
    goto LABEL_53;
  }
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  uint64_t result = sub_251F36670();
  __break(1u);
  return result;
}

uint64_t sub_251B392A8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_251B39310(id *a1)
{
  return sub_251B2EEB4(a1) & 1;
}

uint64_t sub_251B3932C()
{
  uint64_t v0 = sub_251F350A0();
  __swift_allocate_value_buffer(v0, qword_269B9E360);
  __swift_project_value_buffer(v0, (uint64_t)qword_269B9E360);
  return sub_251F35090();
}

uint64_t static Logger.cameraClipPosterFrameGenerator.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_269B9C2C8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_251F350A0();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_269B9E360);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t sub_251B39458()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CameraClipPosterFrameGenerator()
{
  return self;
}

HomeDataModel::ClusterKind_optional __swiftcall ClusterKind.init(rawValue:)(Swift::UInt32 rawValue)
{
  if ((int)rawValue > 257)
  {
    if ((int)rawValue <= 511)
    {
      if (rawValue == 258)
      {
        *uint64_t v1 = 22;
      }
      else if (rawValue == 336)
      {
        *uint64_t v1 = 26;
      }
      else
      {
LABEL_19:
        *uint64_t v1 = 28;
      }
    }
    else
    {
      switch(rawValue)
      {
        case 0x200u:
          *uint64_t v1 = 17;
          return (HomeDataModel::ClusterKind_optional)rawValue;
        case 0x201u:
          *uint64_t v1 = 18;
          return (HomeDataModel::ClusterKind_optional)rawValue;
        case 0x202u:
          *uint64_t v1 = 19;
          return (HomeDataModel::ClusterKind_optional)rawValue;
        case 0x203u:
          goto LABEL_19;
        case 0x204u:
          *uint64_t v1 = 20;
          return (HomeDataModel::ClusterKind_optional)rawValue;
        default:
          if (rawValue == 768)
          {
            *uint64_t v1 = 16;
          }
          else
          {
            if (rawValue != 323615747) {
              goto LABEL_19;
            }
            *uint64_t v1 = 27;
          }
          break;
      }
    }
  }
  else
  {
    char v2 = 0;
    char v3 = 10;
    switch(rawValue)
    {
      case 3u:
        char v2 = 9;
        goto LABEL_31;
      case 4u:
      case 5u:
      case 7u:
      case 9u:
      case 0xAu:
      case 0xBu:
      case 0xCu:
      case 0xDu:
      case 0xEu:
      case 0xFu:
      case 0x10u:
      case 0x11u:
      case 0x12u:
      case 0x13u:
      case 0x14u:
      case 0x15u:
      case 0x16u:
      case 0x17u:
      case 0x18u:
      case 0x19u:
      case 0x1Au:
      case 0x1Bu:
      case 0x1Cu:
      case 0x1Eu:
      case 0x1Fu:
      case 0x20u:
      case 0x21u:
      case 0x22u:
      case 0x23u:
      case 0x24u:
      case 0x25u:
      case 0x26u:
      case 0x27u:
      case 0x29u:
      case 0x2Au:
      case 0x2Bu:
      case 0x2Cu:
      case 0x2Du:
      case 0x30u:
      case 0x31u:
      case 0x34u:
      case 0x35u:
      case 0x37u:
      case 0x38u:
      case 0x39u:
      case 0x3Au:
      case 0x3Cu:
      case 0x3Du:
      case 0x3Eu:
      case 0x3Fu:
      case 0x42u:
      case 0x43u:
      case 0x44u:
      case 0x46u:
      case 0x47u:
      case 0x48u:
      case 0x49u:
      case 0x4Au:
      case 0x4Bu:
      case 0x4Cu:
      case 0x4Du:
      case 0x4Eu:
      case 0x4Fu:
      case 0x51u:
      case 0x52u:
      case 0x53u:
      case 0x56u:
      case 0x57u:
      case 0x58u:
      case 0x59u:
      case 0x5Au:
      case 0x5Bu:
      case 0x5Cu:
      case 0x5Du:
      case 0x5Eu:
      case 0x5Fu:
        goto LABEL_19;
      case 6u:
        goto LABEL_32;
      case 8u:
        *uint64_t v1 = 11;
        return (HomeDataModel::ClusterKind_optional)rawValue;
      case 0x1Du:
        goto LABEL_31;
      case 0x28u:
        char v2 = 1;
        goto LABEL_31;
      case 0x2Eu:
        char v2 = 3;
        goto LABEL_31;
      case 0x2Fu:
        char v2 = 2;
        goto LABEL_31;
      case 0x32u:
        char v2 = 4;
        goto LABEL_31;
      case 0x33u:
        char v2 = 5;
        goto LABEL_31;
      case 0x36u:
        char v2 = 6;
        goto LABEL_31;
      case 0x3Bu:
        *uint64_t v1 = 14;
        return (HomeDataModel::ClusterKind_optional)rawValue;
      case 0x40u:
        char v2 = 7;
        goto LABEL_31;
      case 0x41u:
        char v2 = 8;
LABEL_31:
        char v3 = v2;
LABEL_32:
        *uint64_t v1 = v3;
        break;
      case 0x45u:
        *uint64_t v1 = 12;
        break;
      case 0x50u:
        *uint64_t v1 = 13;
        break;
      case 0x54u:
        *uint64_t v1 = 24;
        break;
      case 0x55u:
        *uint64_t v1 = 25;
        break;
      case 0x60u:
        *uint64_t v1 = 15;
        break;
      case 0x61u:
        *uint64_t v1 = 23;
        break;
      default:
        if (rawValue != 257) {
          goto LABEL_19;
        }
        *uint64_t v1 = 21;
        break;
    }
  }
  return (HomeDataModel::ClusterKind_optional)rawValue;
}

uint64_t ClusterKind.rawValue.getter()
{
  return dword_251F3E33C[*v0];
}

HomeDataModel::ClusterKind_optional __swiftcall ClusterKind.init(clusterID:)(NSNumber clusterID)
{
  Swift::UInt32 v2 = [(objc_class *)clusterID.super.super.isa unsignedIntValue];

  return ClusterKind.init(rawValue:)(v2);
}

uint64_t ClusterKind.description.getter()
{
  return sub_251F35770();
}

void *static ClusterKind.allCases.getter()
{
  return &unk_2702624C8;
}

HomeDataModel::ClusterKind_optional sub_251B39894(Swift::UInt32 *a1)
{
  return ClusterKind.init(rawValue:)(*a1);
}

void sub_251B3989C(_DWORD *a1@<X8>)
{
  *a1 = dword_251F3E33C[*v1];
}

unint64_t sub_251B398B8()
{
  unint64_t result = qword_269B9E378;
  if (!qword_269B9E378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E378);
  }
  return result;
}

uint64_t sub_251B3990C()
{
  return sub_251F36D00();
}

uint64_t sub_251B3995C()
{
  return sub_251F36CE0();
}

uint64_t sub_251B39994()
{
  return sub_251F36D00();
}

BOOL sub_251B399E0(char *a1, char *a2)
{
  return dword_251F3E33C[*a1] == dword_251F3E33C[*a2];
}

uint64_t sub_251B39A04()
{
  return sub_251F35A80();
}

uint64_t sub_251B39A64()
{
  return sub_251F35A20();
}

unint64_t sub_251B39AB8()
{
  unint64_t result = qword_269B9E380;
  if (!qword_269B9E380)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B9E388);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E380);
  }
  return result;
}

void sub_251B39B14(void *a1@<X8>)
{
  *a1 = &unk_2702624C8;
}

uint64_t getEnumTagSinglePayload for ClusterKind(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xE5) {
    goto LABEL_17;
  }
  if (a2 + 27 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 27) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 27;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 27;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 27;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x1C;
  int v8 = v6 - 28;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ClusterKind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 27 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 27) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE4)
  {
    unsigned int v6 = ((a2 - 229) >> 8) + 1;
    *unint64_t result = a2 + 27;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251B39C80);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 27;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClusterKind()
{
  return &type metadata for ClusterKind;
}

unint64_t sub_251B39CB8()
{
  unint64_t result = qword_269B9E390;
  if (!qword_269B9E390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E390);
  }
  return result;
}

HomeDataModel::UmbrellaCategory_optional __swiftcall UmbrellaCategory.init(rawValue:)(Swift::String rawValue)
{
  int v2 = v1;
  unint64_t v3 = sub_251F36750();
  result.value = swift_bridgeObjectRelease();
  char v5 = 8;
  if (v3 < 8) {
    char v5 = v3;
  }
  *int v2 = v5;
  return result;
}

void *static UmbrellaCategory.allCases.getter()
{
  return &unk_270262508;
}

unint64_t UmbrellaCategory.rawValue.getter()
{
  return 0xD000000000000024;
}

HomeDataModel::UmbrellaCategory_optional sub_251B39E2C(Swift::String *a1)
{
  return UmbrellaCategory.init(rawValue:)(*a1);
}

unint64_t sub_251B39E38@<X0>(void *a1@<X8>)
{
  unint64_t result = UmbrellaCategory.rawValue.getter();
  *a1 = 0xD000000000000024;
  a1[1] = v3;
  return result;
}

void sub_251B39E68(void *a1@<X8>)
{
  *a1 = &unk_270262508;
}

uint64_t sub_251B39E78(char *a1, char *a2)
{
  return sub_251DB1CC8(*a1, *a2);
}

uint64_t sub_251B39E84()
{
  return sub_251EAE504();
}

uint64_t sub_251B39E90()
{
  return sub_251AA96CC();
}

uint64_t sub_251B39E98()
{
  return sub_251EAE504();
}

uint64_t sub_251B39EA0()
{
  return sub_251F35A30();
}

uint64_t sub_251B39F00()
{
  return sub_251F359D0();
}

void UmbrellaCategory.id.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t UmbrellaCategory.iconColorBase.getter()
{
  switch(*v0)
  {
    case 0:
      uint64_t result = sub_251F35310();
      break;
    case 2:
      uint64_t result = sub_251F353A0();
      break;
    case 3:
      uint64_t result = sub_251F35370();
      break;
    case 4:
      uint64_t result = sub_251F35340();
      break;
    case 6:
      uint64_t result = sub_251F35300();
      break;
    default:
      uint64_t result = sub_251F35360();
      break;
  }
  return result;
}

uint64_t UmbrellaCategory.iconSymbol.getter()
{
  uint64_t result = 0x6564616C626E6166;
  switch(*v0)
  {
    case 0:
      return result;
    case 2:
      uint64_t result = 0x6C7562746867696CLL;
      break;
    case 3:
      uint64_t result = 0xD00000000000001CLL;
      break;
    case 4:
      unsigned int v2 = 1801678700;
      goto LABEL_7;
    case 6:
      unsigned int v2 = 1886351972;
LABEL_7:
      uint64_t result = v2 | 0x6C69662E00000000;
      break;
    default:
      uint64_t result = 0xD00000000000001DLL;
      break;
  }
  return result;
}

uint64_t UmbrellaCategory.localizedDescription.getter()
{
  switch(*v0)
  {
    case 0:
      uint64_t v1 = 0xD00000000000001FLL;
      unsigned int v2 = "HFAccessoryTypeGroupNameClimate";
      return static String.hfLocalized(_:)(v1, (unint64_t)(v2 - 32) | 0x8000000000000000);
    case 2:
      uint64_t v1 = 0xD00000000000001ELL;
      unsigned int v2 = "HFAccessoryTypeGroupNameLights";
      return static String.hfLocalized(_:)(v1, (unint64_t)(v2 - 32) | 0x8000000000000000);
    case 3:
      uint64_t v1 = 0xD000000000000026;
      unsigned int v2 = "HFAccessoryTypeGroupNameSpeakersAndTVs";
      return static String.hfLocalized(_:)(v1, (unint64_t)(v2 - 32) | 0x8000000000000000);
    case 4:
      uint64_t v1 = 0xD000000000000020;
      unsigned int v2 = "HFAccessoryTypeGroupNameSecurity";
      return static String.hfLocalized(_:)(v1, (unint64_t)(v2 - 32) | 0x8000000000000000);
    case 6:
      uint64_t v3 = "HFAccessoryTypeGroupNameWater";
      return static String.hfLocalized(_:)(0xD00000000000001DLL, (unint64_t)(v3 - 32) | 0x8000000000000000);
    default:
      uint64_t v3 = "HFAccessoryTypeGroupNameOther";
      return static String.hfLocalized(_:)(0xD00000000000001DLL, (unint64_t)(v3 - 32) | 0x8000000000000000);
  }
}

unint64_t sub_251B3A1B4()
{
  unint64_t result = qword_269B9E398;
  if (!qword_269B9E398)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B9E3A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E398);
  }
  return result;
}

unint64_t sub_251B3A214()
{
  unint64_t result = qword_269B9E3A8;
  if (!qword_269B9E3A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E3A8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for UmbrellaCategory(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for UmbrellaCategory(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251B3A3C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UmbrellaCategory()
{
  return &type metadata for UmbrellaCategory;
}

unint64_t sub_251B3A3FC()
{
  unint64_t result = qword_269B9E3B0;
  if (!qword_269B9E3B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E3B0);
  }
  return result;
}

uint64_t StaticCharacteristicMetadata.IntMetadata.validValues.getter()
{
  if (v0[4])
  {
    uint64_t v1 = v0[4];
  }
  else
  {
    if (v0[2] <= 1) {
      uint64_t v2 = 1;
    }
    else {
      uint64_t v2 = v0[2];
    }
    uint64_t v1 = sub_251A1815C(v0[1], *v0, v2);
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_251B3A4A0(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v3 = MEMORY[0x263F8EE78];
    if (!v2) {
      return v3;
    }
    uint64_t v11 = MEMORY[0x263F8EE78];
    uint64_t result = sub_251A3E2C0(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0) {
      break;
    }
    uint64_t v5 = 0;
    uint64_t v3 = v11;
    while (v2 != v5)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v6 = (id)MEMORY[0x2533AB3A0](v5, a1);
      }
      else {
        id v6 = *(id *)(a1 + 8 * v5 + 32);
      }
      BOOL v7 = v6;
      id v8 = objc_msgSend(v6, sel_integerValue);

      unint64_t v10 = *(void *)(v11 + 16);
      unint64_t v9 = *(void *)(v11 + 24);
      if (v10 >= v9 >> 1) {
        sub_251A3E2C0(v9 > 1, v10 + 1, 1);
      }
      ++v5;
      *(void *)(v11 + 16) = v10 + 1;
      *(void *)(v11 + 8 * v10 + 32) = v8;
      if (v2 == v5) {
        return v3;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_251F366C0();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_251B3A604(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v3 = MEMORY[0x263F8EE78];
    if (!v2) {
      return v3;
    }
    uint64_t v12 = MEMORY[0x263F8EE78];
    uint64_t result = sub_251A3E2E0(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0) {
      break;
    }
    uint64_t v5 = 0;
    uint64_t v3 = v12;
    while (v2 != v5)
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v6 = (id)MEMORY[0x2533AB3A0](v5, a1);
      }
      else {
        id v6 = *(id *)(a1 + 8 * v5 + 32);
      }
      BOOL v7 = v6;
      objc_msgSend(v6, sel_doubleValue);
      uint64_t v9 = v8;

      unint64_t v11 = *(void *)(v12 + 16);
      unint64_t v10 = *(void *)(v12 + 24);
      if (v11 >= v10 >> 1) {
        sub_251A3E2E0(v10 > 1, v11 + 1, 1);
      }
      ++v5;
      *(void *)(v12 + 16) = v11 + 1;
      *(void *)(v12 + 8 * v11 + 32) = v9;
      if (v2 == v5) {
        return v3;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_251F366C0();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void sub_251B3A768(void *a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>)
{
  if (a1)
  {
    int v4 = *a2;
    id v5 = a1;
    id v6 = objc_msgSend(v5, sel_format);
    if (v6)
    {
      BOOL v7 = v6;
      uint64_t v8 = sub_251F356F0();
      unint64_t v10 = v9;

      if (v4 == 11)
      {
        v11._countAndFlagsBits = v8;
        v11._object = v10;
        CharacteristicKind.Format.init(rawValue:)(v11);
        int v4 = v19;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      if ((v4 - 1) < 6)
      {
        sub_251B3AA8C(v5, (uint64_t)&v19);
        uint64_t v12 = v20;
        uint64_t v13 = v21;
        uint64_t v14 = v22;
LABEL_8:
        *(_OWORD *)a3 = v19;
        *(void *)(a3 + 16) = v12;
        *(void *)(a3 + 24) = v13;
        *(void *)(a3 + 32) = v14;
        return;
      }
      if (v4 == 7)
      {
        sub_251B3A8D8(v5, (uint64_t)&v19);
        uint64_t v12 = v20;
        uint64_t v14 = v22;
        uint64_t v13 = v21 | 0x4000000000000000;
        goto LABEL_8;
      }
      if (v4 == 8)
      {
        id v15 = objc_msgSend(v5, sel_maxLength);
        if (v15)
        {
          uint64_t v16 = v15;
          uint64_t v17 = (uint64_t)objc_msgSend(v15, sel_integerValue);
        }
        else
        {
          uint64_t v17 = 0x7FFFFFFFFFFFFFFFLL;
        }

        *(void *)(a3 + 8) = 0;
        *(void *)(a3 + 16) = 0;
        *(void *)a3 = v17;
        long long v18 = xmmword_251F3E560;
        goto LABEL_15;
      }
    }
  }
  *(void *)a3 = 0;
  *(void *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  long long v18 = xmmword_251F3E570;
LABEL_15:
  *(_OWORD *)(a3 + 24) = v18;
}

void sub_251B3A8D8(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_maximumValue);
  if (v4)
  {
    id v5 = v4;
    objc_msgSend(v4, sel_doubleValue);
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v7 = 0x7FEFFFFFFFFFFFFFLL;
  }
  id v8 = objc_msgSend(a1, sel_minimumValue);
  if (v8)
  {
    uint64_t v9 = v8;
    objc_msgSend(v8, sel_doubleValue);
    uint64_t v11 = v10;
  }
  else
  {
    uint64_t v11 = 0x10000000000000;
  }
  id v12 = objc_msgSend(a1, sel_stepValue);
  if (v12)
  {
    uint64_t v13 = v12;
    objc_msgSend(v12, sel_doubleValue);
    double v15 = v14;
  }
  else
  {
    double v15 = 1.0;
  }
  id v16 = objc_msgSend(a1, sel_units);
  if (v16)
  {
    uint64_t v17 = v16;
    uint64_t v18 = sub_251F356F0();
    uint64_t v20 = v19;

    v21._countAndFlagsBits = v18;
    v21._object = v20;
    StaticCharacteristicMetadata.Unit.init(rawValue:)(v21);
    char v22 = v25;
  }
  else
  {
    char v22 = 8;
  }
  id v23 = objc_msgSend(a1, sel_validValues);
  if (v23)
  {
    sub_251B3F4F4();
    unint64_t v24 = sub_251F35AC0();

    id v23 = (id)sub_251B3A604(v24);
    swift_bridgeObjectRelease();
  }

  *(void *)a2 = v7;
  *(void *)(a2 + 8) = v11;
  *(double *)(a2 + 16) = v15;
  *(unsigned char *)(a2 + 24) = v22;
  *(void *)(a2 + 32) = v23;
}

void sub_251B3AA8C(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_maximumValue);
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = (uint64_t)objc_msgSend(v4, sel_integerValue);
  }
  else
  {
    uint64_t v6 = 0x7FFFFFFFFFFFFFFFLL;
  }
  id v7 = objc_msgSend(a1, sel_minimumValue);
  if (v7)
  {
    id v8 = v7;
    id v9 = objc_msgSend(v7, sel_integerValue);
  }
  else
  {
    id v9 = (id)0x8000000000000000;
  }
  id v10 = objc_msgSend(a1, sel_stepValue);
  if (v10)
  {
    uint64_t v11 = v10;
    uint64_t v12 = (uint64_t)objc_msgSend(v10, sel_integerValue);

    if (v12 <= 1) {
      uint64_t v13 = 1;
    }
    else {
      uint64_t v13 = v12;
    }
  }
  else
  {
    uint64_t v13 = 1;
  }
  id v14 = objc_msgSend(a1, sel_units);
  if (v14)
  {
    double v15 = v14;
    uint64_t v16 = sub_251F356F0();
    uint64_t v18 = v17;

    v19._countAndFlagsBits = v16;
    v19._object = v18;
    StaticCharacteristicMetadata.Unit.init(rawValue:)(v19);
    char v20 = v23;
  }
  else
  {
    char v20 = 8;
  }
  id v21 = objc_msgSend(a1, sel_validValues);
  if (v21)
  {
    sub_251B3F4F4();
    unint64_t v22 = sub_251F35AC0();

    id v21 = (id)sub_251B3A4A0(v22);
    swift_bridgeObjectRelease();
  }

  *(void *)a2 = v6;
  *(void *)(a2 + 8) = v9;
  *(void *)(a2 + 16) = v13;
  *(unsigned char *)(a2 + 24) = v20;
  *(void *)(a2 + 32) = v21;
}

double StaticCharacteristicMetadata.FloatMetadata.max.getter()
{
  return *(double *)v0;
}

double StaticCharacteristicMetadata.FloatMetadata.min.getter()
{
  return *(double *)(v0 + 8);
}

double StaticCharacteristicMetadata.FloatMetadata.stepValue.getter()
{
  return *(double *)(v0 + 16);
}

void StaticCharacteristicMetadata.FloatMetadata.validValues.getter()
{
  if (*(void *)(v0 + 32)) {
    goto LABEL_7;
  }
  double v1 = *(double *)(v0 + 8);
  if (v1 > *(double *)v0) {
    goto LABEL_7;
  }
  double v2 = *(double *)(v0 + 16);
  if (v2 <= 0.0) {
    double v2 = 1.0;
  }
  if (v2 != 0.0)
  {
    sub_251A18E18(v1, *(double *)v0, v2);
LABEL_7:
    swift_bridgeObjectRetain();
    return;
  }
  __break(1u);
}

char *StaticCharacteristicMetadata.FloatMetadata.init(max:min:stepValue:unit:)@<X0>(char *result@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>)
{
  char v5 = *result;
  *(double *)a2 = a3;
  *(double *)(a2 + 8) = a4;
  *(double *)(a2 + 16) = a5;
  *(unsigned char *)(a2 + 24) = v5;
  *(void *)(a2 + 32) = 0;
  return result;
}

uint64_t StaticCharacteristicMetadata.FloatMetadata.hash(into:)(uint64_t a1)
{
  uint64_t v2 = v1;
  int v4 = *(unsigned __int8 *)(v2 + 24);
  uint64_t v5 = *(void *)(v2 + 32);
  sub_251F36CF0();
  sub_251F36CF0();
  sub_251F36CF0();
  if (v4 != 8)
  {
    sub_251F36CC0();
    sub_251F357B0();
    swift_bridgeObjectRelease();
    if (v5) {
      goto LABEL_3;
    }
    return sub_251F36CC0();
  }
  sub_251F36CC0();
  if (!v5) {
    return sub_251F36CC0();
  }
LABEL_3:
  sub_251F36CC0();
  return sub_251A41588(a1, v5);
}

uint64_t sub_251B3AEC0(uint64_t a1)
{
  unint64_t v2 = sub_251B3D97C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251B3AEFC(uint64_t a1)
{
  unint64_t v2 = sub_251B3D97C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticCharacteristicMetadata.FloatMetadata.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E3B8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v12 = *(unsigned __int8 *)(v1 + 24);
  uint64_t v8 = *(void *)(v1 + 32);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251B3D97C();
  sub_251F36DA0();
  char v19 = 0;
  sub_251F369F0();
  if (!v2)
  {
    char v9 = v12;
    char v18 = 1;
    sub_251F369F0();
    char v17 = 2;
    sub_251F369F0();
    char v16 = v9;
    char v15 = 3;
    sub_251B3D9D0();
    sub_251F36970();
    uint64_t v14 = v8;
    char v13 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E3D0);
    sub_251B3DACC(&qword_269B9E3D8, &qword_269B9E3D0);
    sub_251F36970();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t StaticCharacteristicMetadata.FloatMetadata.hashValue.getter()
{
  uint64_t v1 = *((void *)v0 + 2);
  char v2 = *((unsigned char *)v0 + 24);
  uint64_t v3 = *((void *)v0 + 4);
  long long v6 = *v0;
  uint64_t v7 = v1;
  char v8 = v2;
  uint64_t v9 = v3;
  sub_251F36CA0();
  StaticCharacteristicMetadata.FloatMetadata.hash(into:)((uint64_t)v5);
  return sub_251F36D00();
}

uint64_t StaticCharacteristicMetadata.FloatMetadata.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E3E0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251B3D97C();
  sub_251F36D90();
  if (!v2)
  {
    char v24 = 0;
    sub_251F36850();
    uint64_t v10 = v9;
    char v23 = 1;
    sub_251F36850();
    uint64_t v12 = v11;
    char v22 = 2;
    sub_251F36850();
    uint64_t v14 = v13;
    char v20 = 3;
    sub_251B3DA24();
    sub_251F367D0();
    char v16 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E3D0);
    v18[15] = 4;
    sub_251B3DACC(&qword_269B9E3F0, &qword_269B9E3D0);
    sub_251F367D0();
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v17 = v19;
    *(void *)a2 = v10;
    *(void *)(a2 + 8) = v12;
    *(void *)(a2 + 16) = v14;
    *(unsigned char *)(a2 + 24) = v16;
    *(void *)(a2 + 32) = v17;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_251B3B4A0()
{
  uint64_t v1 = *((void *)v0 + 2);
  char v2 = *((unsigned char *)v0 + 24);
  uint64_t v3 = *((void *)v0 + 4);
  long long v6 = *v0;
  uint64_t v7 = v1;
  char v8 = v2;
  uint64_t v9 = v3;
  sub_251F36CA0();
  StaticCharacteristicMetadata.FloatMetadata.hash(into:)((uint64_t)v5);
  return sub_251F36D00();
}

uint64_t sub_251B3B508()
{
  uint64_t v1 = *((void *)v0 + 2);
  char v2 = *((unsigned char *)v0 + 24);
  uint64_t v3 = *((void *)v0 + 4);
  long long v6 = *v0;
  uint64_t v7 = v1;
  char v8 = v2;
  uint64_t v9 = v3;
  sub_251F36CA0();
  StaticCharacteristicMetadata.FloatMetadata.hash(into:)((uint64_t)v5);
  return sub_251F36D00();
}

uint64_t sub_251B3B568@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticCharacteristicMetadata.FloatMetadata.init(from:)(a1, a2);
}

uint64_t sub_251B3B580(void *a1)
{
  return StaticCharacteristicMetadata.FloatMetadata.encode(to:)(a1);
}

uint64_t StaticCharacteristicMetadata.IntMetadata.max.getter()
{
  return *(void *)v0;
}

uint64_t StaticCharacteristicMetadata.IntMetadata.min.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t StaticCharacteristicMetadata.IntMetadata.stepValue.getter()
{
  return *(void *)(v0 + 16);
}

void StaticCharacteristicMetadata.IntMetadata.unit.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 24);
}

uint64_t StaticCharacteristicMetadata.IntMetadata.init(max:min:stepValue:unit:validValues:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  char v6 = *a4;
  *(void *)a6 = result;
  *(void *)(a6 + 8) = a2;
  if (a3 <= 1) {
    uint64_t v7 = 1;
  }
  else {
    uint64_t v7 = a3;
  }
  *(void *)(a6 + 16) = v7;
  *(unsigned char *)(a6 + 24) = v6;
  *(void *)(a6 + 32) = a5;
  return result;
}

uint64_t StaticCharacteristicMetadata.IntMetadata.hash(into:)()
{
  int v1 = *(unsigned __int8 *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 32);
  sub_251F36CB0();
  sub_251F36CB0();
  sub_251F36CB0();
  if (v1 == 8)
  {
    sub_251F36CC0();
    if (v2) {
      goto LABEL_3;
    }
    return sub_251F36CC0();
  }
  sub_251F36CC0();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  if (!v2) {
    return sub_251F36CC0();
  }
LABEL_3:
  sub_251F36CC0();
  uint64_t result = sub_251F36CB0();
  uint64_t v4 = *(void *)(v2 + 16);
  if (v4)
  {
    uint64_t v5 = v2 + 32;
    do
    {
      v5 += 8;
      uint64_t result = sub_251F36CB0();
      --v4;
    }
    while (v4);
  }
  return result;
}

unint64_t sub_251B3B7AC()
{
  unint64_t result = 7889261;
  switch(*v0)
  {
    case 1:
      unint64_t result = 7235949;
      break;
    case 2:
      unint64_t result = 0x756C615670657473;
      break;
    case 3:
      unint64_t result = 1953066613;
      break;
    case 4:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_251B3B844@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251B3E074(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251B3B86C(uint64_t a1)
{
  unint64_t v2 = sub_251B3DA78();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251B3B8A8(uint64_t a1)
{
  unint64_t v2 = sub_251B3DA78();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticCharacteristicMetadata.IntMetadata.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E3F8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v1 + 8);
  uint64_t v17 = *(void *)(v1 + 16);
  uint64_t v18 = v8;
  HIDWORD(v16) = *(unsigned __int8 *)(v1 + 24);
  uint64_t v9 = *(void *)(v1 + 32);
  uint64_t v10 = a1[3];
  uint64_t v11 = a1;
  uint64_t v13 = v12;
  __swift_project_boxed_opaque_existential_1(v11, v10);
  sub_251B3DA78();
  sub_251F36DA0();
  char v25 = 0;
  sub_251F36A00();
  if (!v2)
  {
    char v14 = BYTE4(v16);
    char v24 = 1;
    sub_251F36A00();
    char v23 = 2;
    sub_251F36A00();
    char v22 = v14;
    char v21 = 3;
    sub_251B3D9D0();
    sub_251F36970();
    uint64_t v19 = v9;
    char v20 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E408);
    sub_251B3DACC(&qword_269B9E410, &qword_269B9E408);
    sub_251F36970();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v13);
}

uint64_t StaticCharacteristicMetadata.IntMetadata.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t StaticCharacteristicMetadata.IntMetadata.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E418);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251B3DA78();
  sub_251F36D90();
  if (!v2)
  {
    char v23 = 0;
    uint64_t v9 = sub_251F36860();
    char v22 = 1;
    uint64_t v10 = sub_251F36860();
    char v21 = 2;
    uint64_t v16 = sub_251F36860();
    char v19 = 3;
    sub_251B3DA24();
    sub_251F367D0();
    int v15 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E408);
    char v18 = 4;
    sub_251B3DACC(&qword_269B9E420, &qword_269B9E408);
    sub_251F367D0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v13 = v16;
    uint64_t v12 = v17;
    *(void *)a2 = v9;
    *(void *)(a2 + 8) = v10;
    *(void *)(a2 + 16) = v13;
    *(unsigned char *)(a2 + 24) = v15;
    *(void *)(a2 + 32) = v12;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_251B3BE3C()
{
  return sub_251F36D00();
}

uint64_t sub_251B3BEA4()
{
  return sub_251F36D00();
}

uint64_t sub_251B3BF04@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticCharacteristicMetadata.IntMetadata.init(from:)(a1, a2);
}

uint64_t sub_251B3BF1C(void *a1)
{
  return StaticCharacteristicMetadata.IntMetadata.encode(to:)(a1);
}

HomeDataModel::StaticCharacteristicMetadata::Unit_optional __swiftcall StaticCharacteristicMetadata.Unit.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_251F36750();
  result.value = swift_bridgeObjectRelease();
  char v5 = 8;
  if (v3 < 8) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t StaticCharacteristicMetadata.Unit.rawValue.getter()
{
  uint64_t result = 0x737569736C6563;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x65686E6572686166;
      break;
    case 2:
      uint64_t result = 0x61746E6563726570;
      break;
    case 3:
      uint64_t result = 0x6572676564637261;
      break;
    case 4:
      uint64_t result = 0x73646E6F636573;
      break;
    case 5:
      uint64_t result = 7894380;
      break;
    case 6:
      uint64_t result = 7172208;
      break;
    case 7:
      uint64_t result = 0x6172676F7263696DLL;
      break;
    default:
      return result;
  }
  return result;
}

HomeDataModel::StaticCharacteristicMetadata::Unit_optional sub_251B3C09C(Swift::String *a1)
{
  return StaticCharacteristicMetadata.Unit.init(rawValue:)(*a1);
}

void sub_251B3C0A8(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x737569736C6563;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEA00000000007469;
      uint64_t v3 = 0x65686E6572686166;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x61746E6563726570;
      *(void *)(a1 + 8) = 0xEA00000000006567;
      break;
    case 3:
      *(void *)a1 = 0x6572676564637261;
      *(void *)(a1 + 8) = 0xEA00000000007365;
      break;
    case 4:
      *(void *)a1 = 0x73646E6F636573;
      *(void *)(a1 + 8) = 0xE700000000000000;
      break;
    case 5:
      *(void *)a1 = 7894380;
      *(void *)(a1 + 8) = 0xE300000000000000;
      break;
    case 6:
      *(void *)a1 = 7172208;
      *(void *)(a1 + 8) = 0xE300000000000000;
      break;
    case 7:
      strcpy((char *)a1, "micrograms/m^3");
      *(unsigned char *)(a1 + 15) = -18;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_251B3C1D0(unsigned __int8 *a1, char *a2)
{
  return sub_251DB21E0(*a1, *a2);
}

uint64_t sub_251B3C1DC()
{
  return sub_251EAE188();
}

uint64_t sub_251B3C1E8()
{
  return sub_251AA97B8();
}

uint64_t sub_251B3C1F0()
{
  return sub_251EAE188();
}

uint64_t sub_251B3C1F8()
{
  return sub_251F35A30();
}

uint64_t sub_251B3C258()
{
  return sub_251F359D0();
}

uint64_t StaticCharacteristicMetadata.hash(into:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 24) >> 62;
  if (v3)
  {
    if (v3 == 1)
    {
      sub_251F36CB0();
      return StaticCharacteristicMetadata.FloatMetadata.hash(into:)(a1);
    }
    else
    {
      sub_251F36CB0();
      return sub_251F36CB0();
    }
  }
  else
  {
    sub_251F36CB0();
    return StaticCharacteristicMetadata.IntMetadata.hash(into:)();
  }
}

uint64_t sub_251B3C374()
{
  uint64_t v1 = 0x74616F6C66;
  if (*v0 != 1) {
    uint64_t v1 = 0x676E69727473;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 7630441;
  }
}

uint64_t sub_251B3C3C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251B3E26C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251B3C3E8(uint64_t a1)
{
  unint64_t v2 = sub_251B3DDD4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251B3C424(uint64_t a1)
{
  unint64_t v2 = sub_251B3DDD4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251B3C460()
{
  return 12383;
}

uint64_t sub_251B3C470(uint64_t a1)
{
  unint64_t v2 = sub_251B3DE7C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251B3C4AC(uint64_t a1)
{
  unint64_t v2 = sub_251B3DE7C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251B3C4E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_251F36B10();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_251B3C568(uint64_t a1)
{
  unint64_t v2 = sub_251B3DF24();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251B3C5A4(uint64_t a1)
{
  unint64_t v2 = sub_251B3DF24();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251B3C5E0()
{
  return 0x74676E654C78616DLL;
}

uint64_t sub_251B3C5FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x74676E654C78616DLL && a2 == 0xE900000000000068)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_251F36B10();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_251B3C6A0(uint64_t a1)
{
  unint64_t v2 = sub_251B3DE28();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251B3C6DC(uint64_t a1)
{
  unint64_t v2 = sub_251B3DE28();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticCharacteristicMetadata.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E428);
  uint64_t v28 = *(void *)(v3 - 8);
  uint64_t v29 = v3;
  MEMORY[0x270FA5388](v3);
  char v25 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E430);
  uint64_t v26 = *(void *)(v5 - 8);
  uint64_t v27 = v5;
  MEMORY[0x270FA5388](v5);
  char v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E438);
  uint64_t v24 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E440);
  uint64_t v34 = *(void *)(v11 - 8);
  uint64_t v35 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *v1;
  uint64_t v15 = v1[2];
  unint64_t v16 = v1[3];
  uint64_t v30 = v1[1];
  uint64_t v31 = v15;
  uint64_t v32 = v1[4];
  uint64_t v33 = v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251B3DDD4();
  sub_251F36DA0();
  if (v16 >> 62)
  {
    if (v16 >> 62 == 1)
    {
      LOBYTE(v36) = 1;
      sub_251B3DE7C();
      uint64_t v17 = v35;
      sub_251F36900();
      uint64_t v36 = v33;
      uint64_t v37 = v30;
      uint64_t v38 = v31;
      char v39 = v16;
      uint64_t v40 = v32;
      sub_251B3DED0();
      uint64_t v18 = v27;
      sub_251F36A20();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v18);
    }
    else
    {
      LOBYTE(v36) = 2;
      sub_251B3DE28();
      char v21 = v25;
      uint64_t v17 = v35;
      sub_251F36900();
      uint64_t v22 = v29;
      sub_251F36A00();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v21, v22);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v13, v17);
  }
  else
  {
    LOBYTE(v36) = 0;
    sub_251B3DF24();
    uint64_t v19 = v35;
    sub_251F36900();
    uint64_t v36 = v33;
    uint64_t v37 = v30;
    uint64_t v38 = v31;
    char v39 = v16;
    uint64_t v40 = v32;
    sub_251B3DF78();
    sub_251F36A20();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v10, v8);
    return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v13, v19);
  }
}

uint64_t StaticCharacteristicMetadata.hashValue.getter()
{
  unint64_t v1 = *(void *)(v0 + 24);
  sub_251F36CA0();
  if (v1 >> 62)
  {
    sub_251F36CB0();
    if (v1 >> 62 == 1) {
      StaticCharacteristicMetadata.FloatMetadata.hash(into:)((uint64_t)v3);
    }
    else {
      sub_251F36CB0();
    }
  }
  else
  {
    sub_251F36CB0();
    StaticCharacteristicMetadata.IntMetadata.hash(into:)();
  }
  return sub_251F36D00();
}

uint64_t StaticCharacteristicMetadata.init(from:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v42 = a2;
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E478);
  uint64_t v40 = *(void *)(v44 - 8);
  MEMORY[0x270FA5388](v44);
  uint64_t v43 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E480);
  uint64_t v41 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  uint64_t v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E488);
  uint64_t v38 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E490);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  uint64_t v45 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_251B3DDD4();
  uint64_t v14 = v50;
  sub_251F36D90();
  if (v14) {
    goto LABEL_9;
  }
  uint64_t v37 = v6;
  unint64_t v16 = v43;
  uint64_t v15 = v44;
  uint64_t v50 = v10;
  uint64_t v17 = sub_251F368E0();
  if (*(void *)(v17 + 16) != 1)
  {
    uint64_t v23 = sub_251F36490();
    swift_allocError();
    uint64_t v24 = v12;
    uint64_t v25 = v9;
    uint64_t v27 = v26;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D440);
    *uint64_t v27 = &type metadata for StaticCharacteristicMetadata;
    sub_251F36780();
    sub_251F36480();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v23 - 8) + 104))(v27, *MEMORY[0x263F8DCB0], v23);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v50 + 8))(v24, v25);
LABEL_9:
    uint64_t v30 = (uint64_t)v45;
    return __swift_destroy_boxed_opaque_existential_0(v30);
  }
  if (*(unsigned char *)(v17 + 32))
  {
    if (*(unsigned char *)(v17 + 32) == 1)
    {
      LOBYTE(v46) = 1;
      sub_251B3DE7C();
      sub_251F36770();
      sub_251B3DFCC();
      uint64_t v18 = v39;
      sub_251F36880();
      (*(void (**)(char *, uint64_t))(v41 + 8))(v5, v18);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v50 + 8))(v12, v9);
      long long v19 = v46;
      uint64_t v20 = v47;
      uint64_t v21 = v49;
      uint64_t v22 = v48 | 0x4000000000000000;
    }
    else
    {
      LOBYTE(v46) = 2;
      sub_251B3DE28();
      sub_251F36770();
      uint64_t v32 = sub_251F36860();
      uint64_t v33 = v50;
      uint64_t v34 = v32;
      (*(void (**)(char *, uint64_t))(v40 + 8))(v16, v15);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v12, v9);
      uint64_t v20 = 0;
      uint64_t v21 = 0;
      long long v19 = (unint64_t)v34;
      uint64_t v22 = 0x8000000000000000;
    }
  }
  else
  {
    LOBYTE(v46) = 0;
    sub_251B3DF24();
    uint64_t v28 = v8;
    sub_251F36770();
    sub_251B3E020();
    uint64_t v29 = v37;
    sub_251F36880();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v28, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v50 + 8))(v12, v9);
    long long v19 = v46;
    uint64_t v20 = v47;
    uint64_t v22 = v48;
    uint64_t v21 = v49;
  }
  uint64_t v30 = (uint64_t)v45;
  uint64_t v35 = v42;
  *uint64_t v42 = v19;
  v35[2] = v20;
  v35[3] = v22;
  v35[4] = v21;
  return __swift_destroy_boxed_opaque_existential_0(v30);
}

uint64_t sub_251B3D2A4(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 24) >> 62;
  if (v3)
  {
    if (v3 == 1)
    {
      sub_251F36CB0();
      return StaticCharacteristicMetadata.FloatMetadata.hash(into:)(a1);
    }
    else
    {
      sub_251F36CB0();
      return sub_251F36CB0();
    }
  }
  else
  {
    sub_251F36CB0();
    return StaticCharacteristicMetadata.IntMetadata.hash(into:)();
  }
}

uint64_t sub_251B3D36C()
{
  unint64_t v1 = *(void *)(v0 + 24);
  sub_251F36CA0();
  if (v1 >> 62)
  {
    sub_251F36CB0();
    if (v1 >> 62 == 1) {
      StaticCharacteristicMetadata.FloatMetadata.hash(into:)((uint64_t)v3);
    }
    else {
      sub_251F36CB0();
    }
  }
  else
  {
    sub_251F36CB0();
    StaticCharacteristicMetadata.IntMetadata.hash(into:)();
  }
  return sub_251F36D00();
}

uint64_t sub_251B3D434@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return StaticCharacteristicMetadata.init(from:)(a1, a2);
}

uint64_t sub_251B3D44C(void *a1)
{
  return StaticCharacteristicMetadata.encode(to:)(a1);
}

double static StaticCharacteristicMetadata.BOOL.getter@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = 1;
  *(_OWORD *)a1 = xmmword_251F3BBE0;
  *(_OWORD *)(a1 + 16) = xmmword_251F3E580;
  *(void *)(a1 + 32) = 0;
  return result;
}

uint64_t StaticCharacteristicMetadata.validated(value:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  long long v4 = *(_OWORD *)result;
  int v5 = *(unsigned __int8 *)(result + 16);
  uint64_t v6 = v2[1];
  uint64_t v7 = v2[2];
  unint64_t v8 = v2[3];
  uint64_t v9 = (void *)v2[4];
  if (!(v8 >> 62))
  {
    switch(*(unsigned char *)(result + 16))
    {
      case 0:
        uint64_t v13 = v4 & 1;
        goto LABEL_19;
      case 1:
        uint64_t v13 = v4;
        goto LABEL_19;
      case 2:
        uint64_t v13 = (unsigned __int16)v4;
        goto LABEL_19;
      case 3:
        uint64_t v13 = v4;
        goto LABEL_19;
      case 4:
        uint64_t v13 = *(void *)result;
        if ((v4 & 0x8000000000000000) == 0) {
          goto LABEL_19;
        }
        goto LABEL_41;
      case 5:
      case 6:
        uint64_t v13 = (int)v4;
LABEL_19:
        if (v7 <= 1) {
          uint64_t v7 = 1;
        }
        double v15 = round((double)v13 / (double)v7);
        if ((~*(void *)&v15 & 0x7FF0000000000000) != 0)
        {
          if (v15 > -9.22337204e18)
          {
            if (v15 < 9.22337204e18)
            {
              uint64_t v16 = (uint64_t)v15 * v7;
              if ((unsigned __int128)((uint64_t)v15 * (__int128)v7) >> 64 == v16 >> 63)
              {
                if (v9)
                {
                  double result = sub_251B3E3A4(v16, v9);
                  if (v17)
                  {
                    long long v18 = 0uLL;
                    char v14 = -1;
                    goto LABEL_35;
                  }
                }
                else
                {
                  if (v16 > v6) {
                    uint64_t v6 = (uint64_t)v15 * v7;
                  }
                  if (*v2 >= v16) {
                    double result = v6;
                  }
                  else {
                    double result = *v2;
                  }
                }
                double result = sub_251B3D750(result, (uint64_t)&v19);
                long long v18 = v19;
                char v14 = v20;
LABEL_35:
                *(_OWORD *)a2 = v18;
                goto LABEL_36;
              }
LABEL_40:
              __break(1u);
LABEL_41:
              __break(1u);
              JUMPOUT(0x251B3D658);
            }
LABEL_39:
            __break(1u);
            goto LABEL_40;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
        goto LABEL_39;
      default:
        goto LABEL_13;
    }
  }
  if (v8 >> 62 != 1 || (*(void *)&long long v19 = *v2, *((void *)&v19 + 1) = v6, v20 = v7, v21 = v8, v22 = v9, v5 != 7))
  {
LABEL_13:
    *(void *)a2 = 0;
    *(void *)(a2 + 8) = 0;
    char v14 = -1;
LABEL_36:
    *(unsigned char *)(a2 + 16) = v14;
    return result;
  }
  double result = sub_251B3D674(*(double *)&v4);
  if (v10) {
    uint64_t v11 = 0;
  }
  else {
    uint64_t v11 = result;
  }
  if (v10) {
    char v12 = -1;
  }
  else {
    char v12 = 7;
  }
  *(void *)a2 = v11;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = v12;
  return result;
}

uint64_t sub_251B3D674(double a1)
{
  double v2 = v1[2];
  if (v2 <= 0.0) {
    double v2 = 1.0;
  }
  double v3 = v2 * round(a1 / v2);
  sub_251B3F534((uint64_t)(v1 + 4), (uint64_t)&v10);
  sub_251B3F534((uint64_t)&v10, (uint64_t)&v11);
  if (v11)
  {
    uint64_t v4 = *(void *)(v11 + 16);
    if (v4)
    {
      uint64_t result = *(void *)(v11 + 32);
      uint64_t v6 = 1;
LABEL_6:
      double v7 = vabdd_f64(*(double *)&result, v3);
      while (v4 != v6)
      {
        double v8 = *(double *)(v11 + 32 + 8 * v6++);
        if (vabdd_f64(v8, v3) < v7)
        {
          uint64_t result = *(void *)&v8;
          goto LABEL_6;
        }
      }
    }
    else
    {
      return 0;
    }
  }
  else
  {
    double v9 = *v1;
    if (*v1 >= v3 && (double v9 = v1[1], v3 >= v9)) {
      return *(void *)&v3;
    }
    else {
      return *(void *)&v9;
    }
  }
  return result;
}

uint64_t sub_251B3D750@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  switch(*(unsigned char *)(v2 + 16))
  {
    case 0:
      char v4 = 0;
      int64_t v3 = result > 0;
      break;
    case 1:
      uint64_t v5 = 255;
      if (result < 255) {
        uint64_t v5 = result;
      }
      int64_t v3 = v5 & ~(v5 >> 63);
      char v4 = 1;
      break;
    case 2:
      uint64_t v6 = 0xFFFFLL;
      if (result < 0xFFFF) {
        uint64_t v6 = result;
      }
      int64_t v3 = v6 & ~(v6 >> 63);
      char v4 = 2;
      break;
    case 3:
      uint64_t v7 = 0xFFFFFFFFLL;
      if (result < 0xFFFFFFFFLL) {
        uint64_t v7 = result;
      }
      int64_t v3 = v7 & ~(v7 >> 63);
      char v4 = 3;
      break;
    case 4:
      int64_t v3 = result & ~(result >> 63);
      char v4 = 4;
      break;
    case 5:
    case 6:
      int64_t v3 = 0x7FFFFFFFLL;
      if (result < 0x7FFFFFFF) {
        int64_t v3 = result;
      }
      if (v3 <= (uint64_t)0xFFFFFFFF80000000) {
        LODWORD(v3) = 0x80000000;
      }
      int64_t v3 = v3;
      char v4 = 5;
      break;
    default:
      int64_t v3 = 0;
      char v4 = -1;
      break;
  }
  *(void *)a2 = v3;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = v4;
  return result;
}

BOOL _s13HomeDataModel28StaticCharacteristicMetadataO03IntF0V2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 != *(void *)a2
    || *(void *)(a1 + 8) != *(void *)(a2 + 8)
    || *(void *)(a1 + 16) != *(void *)(a2 + 16))
  {
    return 0;
  }
  int v6 = *(unsigned __int8 *)(a1 + 24);
  uint64_t v7 = *(void **)(a1 + 32);
  int v8 = *(unsigned __int8 *)(a2 + 24);
  double v9 = *(void **)(a2 + 32);
  if (v6 == 8)
  {
    if (v8 != 8) {
      return 0;
    }
  }
  else if (v8 == 8 || (sub_251DB21E0(v6, *(unsigned char *)(a2 + 24)) & 1) == 0)
  {
    return 0;
  }
  if (v7) {
    return v9 && sub_251AB6284(v7, v9);
  }
  return !v9;
}

BOOL _s13HomeDataModel28StaticCharacteristicMetadataO05FloatF0V2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  if (*(double *)a1 != *(double *)a2
    || *(double *)(a1 + 8) != *(double *)(a2 + 8)
    || *(double *)(a1 + 16) != *(double *)(a2 + 16))
  {
    return 0;
  }
  int v6 = *(unsigned __int8 *)(a1 + 24);
  uint64_t v7 = *(void *)(a1 + 32);
  int v8 = *(unsigned __int8 *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  if (v6 == 8)
  {
    if (v8 != 8) {
      return 0;
    }
  }
  else if (v8 == 8 || (sub_251DB21E0(v6, *(unsigned char *)(a2 + 24)) & 1) == 0)
  {
    return 0;
  }
  if (v7) {
    return v9 && sub_251AB635C(v7, v9);
  }
  return !v9;
}

unint64_t sub_251B3D97C()
{
  unint64_t result = qword_269B9E3C0;
  if (!qword_269B9E3C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E3C0);
  }
  return result;
}

unint64_t sub_251B3D9D0()
{
  unint64_t result = qword_269B9E3C8;
  if (!qword_269B9E3C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E3C8);
  }
  return result;
}

unint64_t sub_251B3DA24()
{
  unint64_t result = qword_269B9E3E8;
  if (!qword_269B9E3E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E3E8);
  }
  return result;
}

unint64_t sub_251B3DA78()
{
  unint64_t result = qword_269B9E400;
  if (!qword_269B9E400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E400);
  }
  return result;
}

uint64_t sub_251B3DACC(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

BOOL _s13HomeDataModel28StaticCharacteristicMetadataO2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = a1[2];
  unint64_t v4 = a1[3];
  uint64_t v6 = a1[4];
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  uint64_t v10 = a2[2];
  unint64_t v9 = a2[3];
  uint64_t v11 = a2[4];
  if (!(v4 >> 62))
  {
    if (!(v9 >> 62))
    {
      uint64_t v22 = *a1;
      uint64_t v23 = v3;
      uint64_t v24 = v5;
      char v25 = v4;
      uint64_t v26 = v6;
      uint64_t v17 = v7;
      uint64_t v18 = v8;
      uint64_t v19 = v10;
      char v20 = v9;
      uint64_t v21 = v11;
      sub_251A11E50(v7, v8, v10, v9);
      sub_251A11E50(v2, v3, v5, v4);
      sub_251A11E50(v2, v3, v5, v4);
      sub_251A11E50(v7, v8, v10, v9);
      BOOL v12 = _s13HomeDataModel28StaticCharacteristicMetadataO03IntF0V2eeoiySbAE_AEtFZ_0((uint64_t)&v22, (uint64_t)&v17);
      goto LABEL_7;
    }
    goto LABEL_10;
  }
  if (v4 >> 62 != 1)
  {
    if (v9 >> 62 == 2)
    {
      sub_251A11E74(*a1, v3, v5, v4);
      sub_251A11E74(v7, v8, v10, v9);
      return v2 == v7;
    }
LABEL_11:
    sub_251A11E50(v7, v8, v10, v9);
    sub_251A11E74(v2, v3, v5, v4);
    sub_251A11E74(v7, v8, v10, v9);
    return 0;
  }
  if (v9 >> 62 != 1)
  {
LABEL_10:
    swift_bridgeObjectRetain();
    goto LABEL_11;
  }
  uint64_t v22 = *a1;
  uint64_t v23 = v3;
  uint64_t v24 = v5;
  char v25 = v4;
  uint64_t v26 = v6;
  uint64_t v17 = v7;
  uint64_t v18 = v8;
  uint64_t v19 = v10;
  char v20 = v9;
  uint64_t v21 = v11;
  sub_251A11E50(v7, v8, v10, v9);
  sub_251A11E50(v2, v3, v5, v4);
  sub_251A11E50(v2, v3, v5, v4);
  sub_251A11E50(v7, v8, v10, v9);
  BOOL v12 = _s13HomeDataModel28StaticCharacteristicMetadataO05FloatF0V2eeoiySbAE_AEtFZ_0((uint64_t)&v22, (uint64_t)&v17);
LABEL_7:
  uint64_t v13 = v5;
  uint64_t v16 = v5;
  BOOL v14 = v12;
  sub_251A11E74(v2, v3, v13, v4);
  sub_251A11E74(v7, v8, v10, v9);
  sub_251A11E74(v7, v8, v10, v9);
  sub_251A11E74(v2, v3, v16, v4);
  return v14;
}

unint64_t sub_251B3DDD4()
{
  unint64_t result = qword_269B9E448;
  if (!qword_269B9E448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E448);
  }
  return result;
}

unint64_t sub_251B3DE28()
{
  unint64_t result = qword_269B9E450;
  if (!qword_269B9E450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E450);
  }
  return result;
}

unint64_t sub_251B3DE7C()
{
  unint64_t result = qword_269B9E458;
  if (!qword_269B9E458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E458);
  }
  return result;
}

unint64_t sub_251B3DED0()
{
  unint64_t result = qword_269B9E460;
  if (!qword_269B9E460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E460);
  }
  return result;
}

unint64_t sub_251B3DF24()
{
  unint64_t result = qword_269B9E468;
  if (!qword_269B9E468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E468);
  }
  return result;
}

unint64_t sub_251B3DF78()
{
  unint64_t result = qword_269B9E470;
  if (!qword_269B9E470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E470);
  }
  return result;
}

unint64_t sub_251B3DFCC()
{
  unint64_t result = qword_269B9E498;
  if (!qword_269B9E498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E498);
  }
  return result;
}

unint64_t sub_251B3E020()
{
  unint64_t result = qword_269B9E4A0;
  if (!qword_269B9E4A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E4A0);
  }
  return result;
}

uint64_t sub_251B3E074(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 7889261 && a2 == 0xE300000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7235949 && a2 == 0xE300000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x756C615670657473 && a2 == 0xE900000000000065 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1953066613 && a2 == 0xE400000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000251F6A830)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_251B3E26C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 7630441 && a2 == 0xE300000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74616F6C66 && a2 == 0xE500000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x676E69727473 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_251B3E3A4(uint64_t a1, void *a2)
{
  uint64_t v2 = a2[2];
  if (!v2) {
    return 0;
  }
  uint64_t result = a2[4];
  uint64_t v5 = v2 - 1;
  if (v2 != 1)
  {
    char v6 = a2 + 5;
    while (1)
    {
      uint64_t v7 = result - a1;
      if (__OFSUB__(result, a1)) {
        break;
      }
      uint64_t v9 = *v6++;
      uint64_t v8 = v9;
      if (v7 < 0)
      {
        BOOL v11 = __OFSUB__(0, v7);
        uint64_t v7 = a1 - result;
        if (v11) {
          goto LABEL_22;
        }
        uint64_t v10 = v8 - a1;
        if (__OFSUB__(v8, a1)) {
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t v10 = v8 - a1;
        if (__OFSUB__(v8, a1)) {
          goto LABEL_21;
        }
      }
      if (v10 < 0)
      {
        BOOL v11 = __OFSUB__(0, v10);
        uint64_t v10 = -v10;
        if (v11)
        {
          __break(1u);
          return 0;
        }
      }
      if (v10 < v7) {
        uint64_t result = v8;
      }
      if (!--v5) {
        return result;
      }
    }
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
  }
  return result;
}

unint64_t sub_251B3E434()
{
  unint64_t result = qword_269B9E4A8;
  if (!qword_269B9E4A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E4A8);
  }
  return result;
}

unint64_t sub_251B3E48C()
{
  unint64_t result = qword_269B9E4B0;
  if (!qword_269B9E4B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E4B0);
  }
  return result;
}

unint64_t sub_251B3E4E4()
{
  unint64_t result = qword_269B9E4B8;
  if (!qword_269B9E4B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E4B8);
  }
  return result;
}

unint64_t sub_251B3E53C()
{
  unint64_t result = qword_269B9E4C0;
  if (!qword_269B9E4C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E4C0);
  }
  return result;
}

uint64_t sub_251B3E590()
{
  return MEMORY[0x263F8D560];
}

uint64_t sub_251B3E59C()
{
  return MEMORY[0x263F8D590];
}

uint64_t sub_251B3E5A8()
{
  return MEMORY[0x263F8D6E0];
}

uint64_t sub_251B3E5B4()
{
  return MEMORY[0x263F8D720];
}

uint64_t destroy for StaticCharacteristicMetadata(uint64_t *a1)
{
  return sub_251A11E74(*a1, a1[1], a1[2], a1[3]);
}

uint64_t *initializeWithCopy for StaticCharacteristicMetadata(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  sub_251A11E50(*a2, v4, v5, v6);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  return a1;
}

uint64_t *assignWithCopy for StaticCharacteristicMetadata(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  sub_251A11E50(*a2, v4, v5, v6);
  uint64_t v8 = *a1;
  uint64_t v9 = a1[1];
  uint64_t v10 = a1[2];
  uint64_t v11 = a1[3];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  sub_251A11E74(v8, v9, v10, v11);
  return a1;
}

uint64_t *assignWithTake for StaticCharacteristicMetadata(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 32);
  uint64_t v4 = *a1;
  uint64_t v6 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v7 = a1[3];
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v8;
  a1[4] = v3;
  sub_251A11E74(v4, v6, v5, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for StaticCharacteristicMetadata(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unsigned int v2 = *(_DWORD *)(a1 + 25);
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for StaticCharacteristicMetadata(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = 0;
      *(void *)(result + 24) = (unint64_t)-a2 << 8;
      *(void *)(result + 32) = 0;
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_251B3E794(uint64_t a1)
{
  return *(void *)(a1 + 24) >> 62;
}

uint64_t sub_251B3E7A0(uint64_t result)
{
  *(void *)(result + 24) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_251B3E7B0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 24) = *(unsigned __int8 *)(result + 24) | (unint64_t)(a2 << 62);
  return result;
}

ValueMetadata *type metadata accessor for StaticCharacteristicMetadata()
{
  return &type metadata for StaticCharacteristicMetadata;
}

uint64_t assignWithCopy for StaticCharacteristicMetadata.FloatMetadata(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for StaticCharacteristicMetadata.FloatMetadata(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for StaticCharacteristicMetadata.FloatMetadata()
{
  return &type metadata for StaticCharacteristicMetadata.FloatMetadata;
}

uint64_t destroy for StaticCharacteristicMetadata.IntMetadata()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s13HomeDataModel28StaticCharacteristicMetadataO11IntMetadataVwcp_0(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for StaticCharacteristicMetadata.IntMetadata(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for StaticCharacteristicMetadata.IntMetadata(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s13HomeDataModel28StaticCharacteristicMetadataO11IntMetadataVwet_0(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 32);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s13HomeDataModel28StaticCharacteristicMetadataO11IntMetadataVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(void *)(result + 32) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticCharacteristicMetadata.IntMetadata()
{
  return &type metadata for StaticCharacteristicMetadata.IntMetadata;
}

unsigned char *storeEnumTagSinglePayload for StaticCharacteristicMetadata.Unit(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251B3EB20);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticCharacteristicMetadata.Unit()
{
  return &type metadata for StaticCharacteristicMetadata.Unit;
}

unsigned char *storeEnumTagSinglePayload for StaticCharacteristicMetadata.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251B3EC24);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticCharacteristicMetadata.CodingKeys()
{
  return &type metadata for StaticCharacteristicMetadata.CodingKeys;
}

ValueMetadata *type metadata accessor for StaticCharacteristicMetadata.IntCodingKeys()
{
  return &type metadata for StaticCharacteristicMetadata.IntCodingKeys;
}

ValueMetadata *type metadata accessor for StaticCharacteristicMetadata.FloatCodingKeys()
{
  return &type metadata for StaticCharacteristicMetadata.FloatCodingKeys;
}

unsigned char *_s13HomeDataModel28StaticCharacteristicMetadataO13IntCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x251B3ED1CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticCharacteristicMetadata.StringCodingKeys()
{
  return &type metadata for StaticCharacteristicMetadata.StringCodingKeys;
}

ValueMetadata *type metadata accessor for StaticCharacteristicMetadata.IntMetadata.CodingKeys()
{
  return &type metadata for StaticCharacteristicMetadata.IntMetadata.CodingKeys;
}

unsigned char *_s13HomeDataModel28StaticCharacteristicMetadataO11IntMetadataV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251B3EE38);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticCharacteristicMetadata.FloatMetadata.CodingKeys()
{
  return &type metadata for StaticCharacteristicMetadata.FloatMetadata.CodingKeys;
}

unint64_t sub_251B3EE74()
{
  unint64_t result = qword_269B9E4C8;
  if (!qword_269B9E4C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E4C8);
  }
  return result;
}

unint64_t sub_251B3EECC()
{
  unint64_t result = qword_269B9E4D0;
  if (!qword_269B9E4D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E4D0);
  }
  return result;
}

unint64_t sub_251B3EF24()
{
  unint64_t result = qword_269B9E4D8;
  if (!qword_269B9E4D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E4D8);
  }
  return result;
}

unint64_t sub_251B3EF7C()
{
  unint64_t result = qword_269B9E4E0;
  if (!qword_269B9E4E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E4E0);
  }
  return result;
}

unint64_t sub_251B3EFD4()
{
  unint64_t result = qword_269B9E4E8;
  if (!qword_269B9E4E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E4E8);
  }
  return result;
}

unint64_t sub_251B3F02C()
{
  unint64_t result = qword_269B9E4F0;
  if (!qword_269B9E4F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E4F0);
  }
  return result;
}

unint64_t sub_251B3F084()
{
  unint64_t result = qword_269B9E4F8;
  if (!qword_269B9E4F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E4F8);
  }
  return result;
}

unint64_t sub_251B3F0DC()
{
  unint64_t result = qword_269B9E500;
  if (!qword_269B9E500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E500);
  }
  return result;
}

unint64_t sub_251B3F134()
{
  unint64_t result = qword_269B9E508;
  if (!qword_269B9E508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E508);
  }
  return result;
}

unint64_t sub_251B3F18C()
{
  unint64_t result = qword_269B9E510;
  if (!qword_269B9E510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E510);
  }
  return result;
}

unint64_t sub_251B3F1E4()
{
  unint64_t result = qword_269B9E518;
  if (!qword_269B9E518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E518);
  }
  return result;
}

unint64_t sub_251B3F23C()
{
  unint64_t result = qword_269B9E520;
  if (!qword_269B9E520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E520);
  }
  return result;
}

unint64_t sub_251B3F294()
{
  unint64_t result = qword_269B9E528;
  if (!qword_269B9E528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E528);
  }
  return result;
}

unint64_t sub_251B3F2EC()
{
  unint64_t result = qword_269B9E530;
  if (!qword_269B9E530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E530);
  }
  return result;
}

unint64_t sub_251B3F344()
{
  unint64_t result = qword_269B9E538;
  if (!qword_269B9E538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E538);
  }
  return result;
}

unint64_t sub_251B3F39C()
{
  unint64_t result = qword_269B9E540;
  if (!qword_269B9E540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E540);
  }
  return result;
}

unint64_t sub_251B3F3F4()
{
  unint64_t result = qword_269B9E548;
  if (!qword_269B9E548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E548);
  }
  return result;
}

unint64_t sub_251B3F44C()
{
  unint64_t result = qword_269B9E550;
  if (!qword_269B9E550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E550);
  }
  return result;
}

unint64_t sub_251B3F4A0()
{
  unint64_t result = qword_269B9E558;
  if (!qword_269B9E558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E558);
  }
  return result;
}

unint64_t sub_251B3F4F4()
{
  unint64_t result = qword_269BA04A0;
  if (!qword_269BA04A0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_269BA04A0);
  }
  return result;
}

uint64_t sub_251B3F534(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E560);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_251B3F5AC()
{
  uint64_t v35 = *MEMORY[0x263EF8340];
  long long v2 = v0[5];
  long long v32 = v0[4];
  long long v33 = v2;
  long long v34 = v0[6];
  long long v3 = v0[1];
  long long v28 = *v0;
  long long v29 = v3;
  long long v4 = v0[3];
  long long v30 = v0[2];
  long long v31 = v4;
  sub_251F345B0();
  swift_allocObject();
  sub_251F345A0();
  sub_251A241A4();
  uint64_t v5 = sub_251F34590();
  unint64_t v7 = v6;
  uint64_t result = swift_release();
  if (v1) {
    return result;
  }
  uint64_t v9 = self;
  uint64_t v10 = (void *)sub_251F34BF0();
  v27[0] = 0;
  id v11 = objc_msgSend(v9, sel_JSONObjectWithData_options_error_, v10, 4, v27);

  if (!v11)
  {
    id v21 = v27[0];
    sub_251F34A30();

LABEL_9:
    swift_willThrow();
    return sub_251A1AD94(v5, v7);
  }
  id v12 = v27[0];
  sub_251F36240();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ECE0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    objc_msgSend(objc_allocWithZone(MEMORY[0x263F087E0]), sel_init);
    goto LABEL_9;
  }
  id v26 = v25;

  uint64_t v13 = sub_251F34D20();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v19 = (char *)&v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34CF0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v19, 0, 1, v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v19, 1, v13) == 1)
  {
    sub_251A1B064((uint64_t)v19, &qword_26B21EC20);
    char v20 = (void *)sub_251BB8688(0x6D617473656D6974, 0xE900000000000070);
    sub_251A1AD94(v5, v7);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v19, v13);
    sub_251F34CC0();
    uint64_t v22 = sub_251F35DC0();
    uint64_t v23 = v26;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v27[0] = v23;
    sub_251A0D588(v22, 0x6D617473656D6974, 0xE900000000000070, isUniquelyReferenced_nonNull_native);
    id v26 = v27[0];
    swift_bridgeObjectRelease();
    sub_251A1AD94(v5, v7);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  return (uint64_t)v26;
}

uint64_t sub_251B3FA08()
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  long long v2 = v0[1];
  long long v27 = *v0;
  long long v28 = v2;
  long long v3 = v0[3];
  long long v29 = v0[2];
  long long v30 = v3;
  sub_251F345B0();
  swift_allocObject();
  sub_251F345A0();
  sub_251B44B68();
  uint64_t v4 = sub_251F34590();
  unint64_t v6 = v5;
  uint64_t result = swift_release();
  if (v1) {
    return result;
  }
  long long v8 = self;
  uint64_t v9 = (void *)sub_251F34BF0();
  v26[0] = 0;
  id v10 = objc_msgSend(v8, sel_JSONObjectWithData_options_error_, v9, 4, v26);

  if (!v10)
  {
    id v20 = v26[0];
    sub_251F34A30();

LABEL_9:
    swift_willThrow();
    return sub_251A1AD94(v4, v6);
  }
  id v11 = v26[0];
  sub_251F36240();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ECE0);
  if ((swift_dynamicCast() & 1) == 0)
  {
    objc_msgSend(objc_allocWithZone(MEMORY[0x263F087E0]), sel_init);
    goto LABEL_9;
  }
  id v25 = v24;

  uint64_t v12 = sub_251F34D20();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34CF0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v18, 0, 1, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v18, 1, v12) == 1)
  {
    sub_251A1B064((uint64_t)v18, &qword_26B21EC20);
    uint64_t v19 = (void *)sub_251BB8688(0x6D617473656D6974, 0xE900000000000070);
    sub_251A1AD94(v4, v6);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v18, v12);
    sub_251F34CC0();
    uint64_t v21 = sub_251F35DC0();
    uint64_t v22 = v25;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v26[0] = v22;
    sub_251A0D588(v21, 0x6D617473656D6974, 0xE900000000000070, isUniquelyReferenced_nonNull_native);
    id v25 = v26[0];
    swift_bridgeObjectRelease();
    sub_251A1AD94(v4, v6);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  return (uint64_t)v25;
}

uint64_t sub_251B3FE54(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v14 = MEMORY[0x263F8EE78];
    sub_251A3E2A0(0, v1, 0);
    uint64_t v2 = v14;
    uint64_t v4 = *(void *)(_s8IntervalVMa(0) - 8);
    uint64_t v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v13 = *(void *)(v4 + 72);
    do
    {
      uint64_t v6 = sub_251F365A0();
      uint64_t v8 = v7;
      unint64_t v10 = *(void *)(v14 + 16);
      unint64_t v9 = *(void *)(v14 + 24);
      if (v10 >= v9 >> 1) {
        sub_251A3E2A0(v9 > 1, v10 + 1, 1);
      }
      *(void *)(v14 + 16) = v10 + 1;
      uint64_t v11 = v14 + 16 * v10;
      *(void *)(v11 + 32) = v6;
      *(void *)(v11 + 40) = v8;
      v5 += v13;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_251B3FFA4(uint64_t a1)
{
  uint64_t v12 = MEMORY[0x263F8EE78];
  uint64_t v1 = a1 + 64;
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  uint64_t v4 = v3 & *(void *)(a1 + 64);
  int64_t v5 = (unint64_t)(v2 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v7 = 0;
  while (1)
  {
    if (v4)
    {
      v4 &= v4 - 1;
      goto LABEL_5;
    }
    int64_t v9 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v9 >= v5) {
      goto LABEL_23;
    }
    uint64_t v10 = *(void *)(v1 + 8 * v9);
    ++v7;
    if (!v10)
    {
      int64_t v7 = v9 + 1;
      if (v9 + 1 >= v5) {
        goto LABEL_23;
      }
      uint64_t v10 = *(void *)(v1 + 8 * v7);
      if (!v10)
      {
        int64_t v7 = v9 + 2;
        if (v9 + 2 >= v5) {
          goto LABEL_23;
        }
        uint64_t v10 = *(void *)(v1 + 8 * v7);
        if (!v10)
        {
          int64_t v7 = v9 + 3;
          if (v9 + 3 >= v5) {
            goto LABEL_23;
          }
          uint64_t v10 = *(void *)(v1 + 8 * v7);
          if (!v10) {
            break;
          }
        }
      }
    }
LABEL_22:
    uint64_t v4 = (v10 - 1) & v10;
LABEL_5:
    uint64_t v8 = swift_bridgeObjectRetain();
    uint64_t result = sub_251ED7720(v8);
  }
  int64_t v11 = v9 + 4;
  if (v11 >= v5)
  {
LABEL_23:
    swift_release();
    return v12;
  }
  uint64_t v10 = *(void *)(v1 + 8 * v11);
  if (v10)
  {
    int64_t v7 = v11;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v7 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v7 >= v5) {
      goto LABEL_23;
    }
    uint64_t v10 = *(void *)(v1 + 8 * v7);
    ++v11;
    if (v10) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_251B40114(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_251B40168(a1, a2, a3);
}

uint64_t sub_251B40140(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_251B40168(a1, a2, a3);
}

uint64_t sub_251B40168(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251B43100(a1, (uint64_t)v8);
  uint64_t v9 = sub_251F35CD0();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_251A1B064((uint64_t)v8, &qword_26B220BB0);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v11 = sub_251F35C00();
      uint64_t v13 = v12;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_251F35CC0();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v11 = 0;
  uint64_t v13 = 0;
LABEL_6:
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(void *)(v14 + 24) = a3;
  if (v13 | v11)
  {
    v16[0] = 0;
    v16[1] = 0;
    v16[2] = v11;
    v16[3] = v13;
  }
  return swift_task_create();
}

uint64_t PhoenixMetricsAggregator.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  swift_defaultActor_initialize();
  sub_251F365C0();
  uint64_t v1 = OBJC_IVAR____TtC13HomeDataModel24PhoenixMetricsAggregator_intervalBuffer;
  uint64_t v2 = MEMORY[0x263F8EE78];
  *(void *)(v0 + v1) = sub_2519FB070(MEMORY[0x263F8EE78]);
  *(void *)(v0 + OBJC_IVAR____TtC13HomeDataModel24PhoenixMetricsAggregator_batchEvents) = v2;
  *(void *)(v0 + OBJC_IVAR____TtC13HomeDataModel24PhoenixMetricsAggregator_timer) = 0;
  return v0;
}

uint64_t PhoenixMetricsAggregator.init()()
{
  swift_defaultActor_initialize();
  sub_251F365C0();
  uint64_t v1 = OBJC_IVAR____TtC13HomeDataModel24PhoenixMetricsAggregator_intervalBuffer;
  uint64_t v2 = MEMORY[0x263F8EE78];
  *(void *)(v0 + v1) = sub_2519FB070(MEMORY[0x263F8EE78]);
  *(void *)(v0 + OBJC_IVAR____TtC13HomeDataModel24PhoenixMetricsAggregator_batchEvents) = v2;
  *(void *)(v0 + OBJC_IVAR____TtC13HomeDataModel24PhoenixMetricsAggregator_timer) = 0;
  return v0;
}

void sub_251B40444()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC13HomeDataModel24PhoenixMetricsAggregator_timer;
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC13HomeDataModel24PhoenixMetricsAggregator_timer), sel_invalidate);
  if (qword_26B21FEF0 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_251F350A0();
  __swift_project_value_buffer(v3, (uint64_t)qword_26B21F6E8);
  uint64_t v4 = sub_251F35080();
  os_log_type_t v5 = sub_251F35FD0();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    v15[0] = v7;
    *(_DWORD *)uint64_t v6 = 136315394;
    uint64_t v8 = sub_251F36E70();
    sub_251A00E84(v8, v9, v15);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2048;
    *(void *)&long long v13 = 0x405E000000000000;
    sub_251F361D0();
    _os_log_impl(&dword_2519F3000, v4, v5, "%s beginning metrics aggregation with interval %f", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v7, -1, -1);
    MEMORY[0x2533AC760](v6, -1, -1);
  }

  sub_251B44B28();
  v15[3] = type metadata accessor for PhoenixMetricsAggregator();
  v15[0] = v1;
  long long v13 = 0u;
  long long v14 = 0u;
  swift_retain();
  id v10 = sub_251B406D0(v15, (uint64_t)sel_timerFired, &v13, 1, 120.0);
  id v11 = objc_msgSend(self, sel_mainRunLoop, v13, v14);
  objc_msgSend(v11, sel_addTimer_forMode_, v10, *MEMORY[0x263EFF580]);

  uint64_t v12 = *(void **)(v1 + v2);
  *(void *)(v1 + v2) = v10;
}

id sub_251B406D0(void *a1, uint64_t a2, void *a3, char a4, double a5)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v10 = sub_251F36B00();
  uint64_t v11 = a3[3];
  if (v11)
  {
    uint64_t v12 = __swift_project_boxed_opaque_existential_1(a3, a3[3]);
    v21[1] = v21;
    char v13 = a4;
    uint64_t v14 = a2;
    uint64_t v15 = *(void *)(v11 - 8);
    MEMORY[0x270FA5388](v12);
    uint64_t v17 = (char *)v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v15 + 16))(v17);
    uint64_t v18 = sub_251F36B00();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v11);
    a2 = v14;
    a4 = v13;
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a3);
  }
  else
  {
    uint64_t v18 = 0;
  }
  id v19 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_timerWithTimeInterval_target_selector_userInfo_repeats_, v10, a2, v18, a4 & 1, a5);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return v19;
}

uint64_t sub_251B40894()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_251F35CD0();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = v1;
  int v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  swift_retain();
  if (v8 == 1)
  {
    sub_251A1B064((uint64_t)v4, &qword_26B220BB0);
    uint64_t v9 = 0;
    uint64_t v10 = 0;
  }
  else
  {
    sub_251F35CC0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    if (v7[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v9 = sub_251F35C00();
      uint64_t v10 = v11;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v9 = 0;
      uint64_t v10 = 0;
    }
  }
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = &unk_269B9E598;
  *(void *)(v12 + 24) = v7;
  if (v10 | v9)
  {
    v14[0] = 0;
    v14[1] = 0;
    v14[2] = v9;
    v14[3] = v10;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_251B40AD8()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_251AB3DD4;
  return sub_251B40BA4();
}

uint64_t sub_251B40BA4()
{
  v1[11] = v0;
  v1[12] = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  v1[13] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251B40C60, v0, 0);
}

uint64_t sub_251B40C60()
{
  uint64_t v1 = v0[11] + OBJC_IVAR____TtC13HomeDataModel24PhoenixMetricsAggregator_intervalBuffer;
  swift_beginAccess();
  uint64_t v2 = *(void *)v1;
  if (*(void *)(*(void *)v1 + 16)
    || (uint64_t v3 = v0[11] + OBJC_IVAR____TtC13HomeDataModel24PhoenixMetricsAggregator_batchEvents,
        swift_beginAccess(),
        *(void *)(*(void *)v3 + 16)))
  {
    uint64_t v5 = v0[12];
    uint64_t v4 = v0[13];
    uint64_t v6 = (uint64_t *)(v0[11] + OBJC_IVAR____TtC13HomeDataModel24PhoenixMetricsAggregator_batchEvents);
    swift_beginAccess();
    uint64_t v7 = *v6;
    *(void *)uint64_t v1 = MEMORY[0x263F8EE80];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *uint64_t v6 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRelease();
    uint64_t v8 = sub_251F35CD0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v4, 1, 1, v8);
    uint64_t v9 = (void *)swift_allocObject();
    void v9[2] = 0;
    v9[3] = 0;
    v9[4] = v7;
    v9[5] = v2;
    v9[6] = v5;
    sub_251B40168(v4, (uint64_t)&unk_269B9E580, (uint64_t)v9);
    swift_release();
    sub_251A1B064(v4, &qword_26B220BB0);
  }
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_251B40E58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[39] = a5;
  v6[40] = a6;
  v6[38] = a4;
  uint64_t v7 = _s8IntervalV11AggregationVMa(0);
  v6[41] = v7;
  v6[42] = *(void *)(v7 - 8);
  v6[43] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251B40F1C, 0, 0);
}

uint64_t sub_251B40F1C()
{
  uint64_t v1 = (uint64_t)(v0 + 30);
  uint64_t v2 = v0[39];
  sub_251B41484((uint64_t)(v0 + 30));
  uint64_t v3 = sub_251B419F8(v2);
  uint64_t v4 = sub_251F36E20();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v3 + 16);
  if (v7)
  {
    uint64_t v8 = v0[42];
    uint64_t v40 = v0[41];
    uint64_t v9 = v3 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    swift_bridgeObjectRetain();
    uint64_t v11 = v9;
    uint64_t v12 = v6;
    uint64_t v13 = v4;
    uint64_t v14 = v7;
    do
    {
      uint64_t v15 = v0[43];
      sub_251B44CAC(v11, v15, _s8IntervalV11AggregationVMa);
      uint64_t v13 = MEMORY[0x2533ABD30](v13, v12, *(void *)(v15 + *(int *)(v40 + 20) + 8), *(void *)(v15 + *(int *)(v40 + 20) + 16));
      uint64_t v12 = v16;
      sub_251B4502C(v15, _s8IntervalV11AggregationVMa);
      v11 += v10;
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v17 = 0;
    uint64_t v39 = v13;
    uint64_t v6 = v12;
    uint64_t v1 = (uint64_t)(v0 + 30);
    while (1)
    {
      uint64_t v18 = v0[43];
      uint64_t result = sub_251B44CAC(v9, v18, _s8IntervalV11AggregationVMa);
      uint64_t v20 = *(void *)(v18 + *(int *)(v40 + 20));
      BOOL v21 = __CFADD__(v17, v20);
      v17 += v20;
      if (v21) {
        break;
      }
      sub_251B4502C(v0[43], _s8IntervalV11AggregationVMa);
      v9 += v10;
      if (!--v7)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v4 = v39;
        goto LABEL_9;
      }
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_9:
    uint64_t v41 = v0;
    sub_251A22B00();
    sub_251A272C8(v1);
    sub_251B42734();
    uint64_t v22 = swift_bridgeObjectRetain();
    uint64_t v23 = sub_251B3FFA4(v22);
    swift_bridgeObjectRelease();
    uint64_t v24 = (void *)sub_251B3FE54(v23);
    swift_bridgeObjectRelease();
    uint64_t v25 = v24[2];
    if (v25)
    {
      uint64_t v26 = v24[4];
      uint64_t v27 = v24[5];
      uint64_t v28 = v25 - 1;
      if (v25 != 1)
      {
        uint64_t v29 = v6;
        uint64_t v30 = v4;
        swift_bridgeObjectRetain();
        uint64_t v31 = v24 + 7;
        do
        {
          uint64_t v32 = *(v31 - 1);
          uint64_t v33 = *v31;
          if (sub_251F36DD0())
          {
            uint64_t v26 = v32;
            uint64_t v27 = v33;
          }
          v31 += 2;
          --v28;
        }
        while (v28);
        swift_bridgeObjectRelease();
        uint64_t v4 = v30;
        uint64_t v6 = v29;
      }
    }
    else
    {
      uint64_t v26 = 0;
      uint64_t v27 = 0;
    }
    char v34 = v25 == 0;
    swift_bridgeObjectRelease();
    uint64_t v35 = sub_251F36E30();
    uint64_t v37 = v36;
    uint64_t v38 = (void *)swift_task_alloc();
    v41[44] = v38;
    *uint64_t v38 = v41;
    v38[1] = sub_251B41278;
    return PhoenixMetricsAggregator.HighSnapshotActivityAnalyticsEvent.init(totalSnapshotTime:aggregationInterval:maxSnapshotTime:)((uint64_t)(v41 + 16), v4, v6, v35, v37, v26, v27, v34);
  }
  return result;
}

uint64_t sub_251B41278()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251B41374, 0, 0);
}

uint64_t sub_251B41374()
{
  uint64_t v1 = *(void *)(v0 + 136);
  if (v1)
  {
    uint64_t v16 = *(void *)(v0 + 128);
    uint64_t v2 = *(void *)(v0 + 152);
    uint64_t v15 = *(void *)(v0 + 144);
    uint64_t v3 = *(void *)(v0 + 168);
    uint64_t v14 = *(void *)(v0 + 160);
    uint64_t v5 = *(void *)(v0 + 184);
    uint64_t v4 = *(void *)(v0 + 176);
    uint64_t v6 = *(void *)(v0 + 192);
    uint64_t v7 = *(void *)(v0 + 200);
    uint64_t v8 = *(void *)(v0 + 208);
    uint64_t v9 = *(void *)(v0 + 216);
    uint64_t v10 = *(void *)(v0 + 224);
    uint64_t v11 = *(void *)(v0 + 232);
    *(void *)(v0 + 16) = v16;
    *(void *)(v0 + 24) = v1;
    *(void *)(v0 + 32) = v15;
    *(void *)(v0 + 40) = v2;
    *(void *)(v0 + 48) = v14;
    *(void *)(v0 + 56) = v3;
    *(void *)(v0 + 64) = v4;
    *(unsigned char *)(v0 + 72) = v5 & 1;
    *(void *)(v0 + 80) = v6;
    *(void *)(v0 + 88) = v7;
    *(void *)(v0 + 96) = v8;
    *(unsigned char *)(v0 + 104) = v9 & 1;
    *(void *)(v0 + 112) = v10;
    *(void *)(v0 + 120) = v11;
    sub_251B42AE0();
    sub_251B445B0(v16, v1);
  }
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

double sub_251B41484@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = swift_bridgeObjectRetain();
  sub_251A27480(v2, v22);
  uint64_t v3 = sub_251F34570();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E5F0);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_251F3A500;
  sub_251F34560();
  sub_251F34550();
  uint64_t v21 = v7;
  sub_251B448B4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E590);
  sub_251B44900();
  sub_251F36260();
  uint64_t v8 = sub_251A23268((uint64_t)v6);
  unint64_t v10 = v9;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  if (qword_26B21FEF0 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_251F350A0();
  __swift_project_value_buffer(v11, (uint64_t)qword_26B21F6E8);
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_251F35080();
  os_log_type_t v13 = sub_251F35FD0();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    uint64_t v21 = v15;
    *(_DWORD *)uint64_t v14 = 136315394;
    uint64_t v16 = sub_251F36E70();
    uint64_t v20 = sub_251A00E84(v16, v17, &v21);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_251A00E84((uint64_t)v8, v10, &v21);
    sub_251F361D0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2519F3000, v12, v13, "%s batches: %s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v15, -1, -1);
    MEMORY[0x2533AC760](v14, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  long long v18 = v22[1];
  *(_OWORD *)a1 = v22[0];
  *(_OWORD *)(a1 + 16) = v18;
  double result = *(double *)&v23;
  *(_OWORD *)(a1 + 32) = v23;
  *(void *)(a1 + 48) = v24;
  return result;
}

uint64_t sub_251B419F8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0);
  uint64_t v86 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v94 = (uint64_t)v80 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = _s8IntervalV11AggregationVMa(0);
  uint64_t v92 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v90 = (uint64_t)v80 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v98 = (uint64_t)v80 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E3C8);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)v80 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)v80 - v15;
  uint64_t v17 = *(void *)(a1 + 64);
  uint64_t v81 = a1 + 64;
  uint64_t v18 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v19 = -1;
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  unint64_t v20 = v19 & v17;
  uint64_t v84 = &v100;
  int64_t v82 = (unint64_t)(v18 + 63) >> 6;
  v80[0] = v82 - 1;
  uint64_t v87 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v22 = 0;
  long long v23 = 0;
  unint64_t v24 = MEMORY[0x263F8EE78];
  *(void *)&long long v25 = 136315394;
  long long v83 = v25;
  v80[1] = MEMORY[0x263F8EE58] + 8;
  uint64_t v89 = v14;
  unint64_t v88 = v16;
  uint64_t v93 = v4;
  unint64_t v91 = v7;
  while (1)
  {
    if (v20)
    {
      uint64_t v97 = (v20 - 1) & v20;
      unint64_t v26 = __clz(__rbit64(v20)) | (v22 << 6);
      goto LABEL_8;
    }
    int64_t v30 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
      goto LABEL_50;
    }
    if (v30 < v82)
    {
      unint64_t v31 = *(void *)(v81 + 8 * v30);
      if (v31) {
        goto LABEL_12;
      }
      v22 += 2;
      if (v30 + 1 >= v82)
      {
        int64_t v22 = v30;
        goto LABEL_17;
      }
      unint64_t v31 = *(void *)(v81 + 8 * v22);
      if (v31)
      {
        ++v30;
        goto LABEL_12;
      }
      if (v30 + 2 < v82) {
        break;
      }
    }
LABEL_17:
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E3C0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v14, 1, 1, v32);
    uint64_t v97 = 0;
LABEL_18:
    sub_251A4ECF0((uint64_t)v14, (uint64_t)v16, &qword_26B21E3C8);
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E3C0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 48))(v16, 1, v33) == 1)
    {
      swift_release();
      return v24;
    }
    int64_t v95 = v22;
    uint64_t v34 = *(void *)&v16[*(int *)(v33 + 48)];
    uint64_t v35 = v94;
    sub_251B44ECC((uint64_t)v16, v94, type metadata accessor for PhoenixMetricsAggregator.IntervalKey);
    uint64_t v36 = sub_251B3FE54(v34);
    swift_bridgeObjectRelease();
    uint64_t v37 = v90;
    sub_251B44CAC(v35, v90, type metadata accessor for PhoenixMetricsAggregator.IntervalKey);
    sub_251D9C1DC(v36, v101);
    swift_bridgeObjectRelease();
    sub_251B4502C(v35, type metadata accessor for PhoenixMetricsAggregator.IntervalKey);
    uint64_t v38 = v37 + *(int *)(v4 + 20);
    long long v39 = v101[3];
    *(_OWORD *)(v38 + 32) = v101[2];
    *(_OWORD *)(v38 + 48) = v39;
    *(_OWORD *)(v38 + 64) = v101[4];
    *(void *)(v38 + 80) = v102;
    long long v40 = v101[1];
    *(_OWORD *)uint64_t v38 = v101[0];
    *(_OWORD *)(v38 + 16) = v40;
    uint64_t v41 = v98;
    sub_251B44ECC(v37, v98, _s8IntervalV11AggregationVMa);
    sub_251B44CAC(v41, (uint64_t)v7, _s8IntervalV11AggregationVMa);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v24 = sub_251F10200(0, *(void *)(v24 + 16) + 1, 1, v24);
    }
    unint64_t v43 = *(void *)(v24 + 16);
    unint64_t v42 = *(void *)(v24 + 24);
    if (v43 >= v42 >> 1) {
      unint64_t v24 = sub_251F10200(v42 > 1, v43 + 1, 1, v24);
    }
    *(void *)(v24 + 16) = v43 + 1;
    unint64_t v44 = (*(unsigned __int8 *)(v92 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80);
    unint64_t v96 = v24;
    sub_251B44ECC((uint64_t)v7, v24 + v44 + *(void *)(v92 + 72) * v43, _s8IntervalV11AggregationVMa);
    uint64_t v45 = sub_251F34570();
    uint64_t v46 = *(void *)(v45 - 8);
    uint64_t v47 = *(void *)(v46 + 64);
    MEMORY[0x270FA5388](v45);
    unsigned __int8 v48 = (char *)v80 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_251F34560();
    sub_251F345B0();
    swift_allocObject();
    uint64_t v49 = sub_251F345A0();
    MEMORY[0x270FA5388](v49);
    (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v48, v48, v45);
    sub_251F34580();
    sub_251B4485C();
    uint64_t v50 = sub_251F34590();
    if (v23) {
      goto LABEL_24;
    }
    uint64_t v65 = v50;
    unint64_t v66 = v51;
    uint64_t v67 = sub_251F35740();
    MEMORY[0x270FA5388](v67 - 8);
    sub_251F35730();
    uint64_t v68 = sub_251F35700();
    if (!v69)
    {
      sub_251A27348();
      long long v23 = (void *)swift_allocError();
      swift_willThrow();
      sub_251A1AD94(v65, v66);
LABEL_24:
      swift_release();
      (*(void (**)(char *, uint64_t))(v46 + 8))(v48, v45);
      if (qword_26B21FEF0 != -1) {
        swift_once();
      }
      uint64_t v52 = sub_251F350A0();
      __swift_project_value_buffer(v52, (uint64_t)qword_26B21F6E8);
      id v53 = v23;
      id v54 = v23;
      uint64_t v55 = sub_251F35080();
      os_log_type_t v56 = sub_251F35FD0();
      BOOL v57 = os_log_type_enabled(v55, v56);
      uint64_t v14 = v89;
      if (v57)
      {
        uint64_t v58 = swift_slowAlloc();
        uint64_t v59 = (void *)swift_slowAlloc();
        uint64_t v60 = swift_slowAlloc();
        uint64_t v100 = v60;
        *(_DWORD *)uint64_t v58 = v83;
        uint64_t v61 = sub_251F36E70();
        uint64_t v99 = sub_251A00E84(v61, v62, &v100);
        uint64_t v85 = 0;
        sub_251F361D0();
        swift_bridgeObjectRelease();
        *(_WORD *)(v58 + 12) = 2112;
        id v63 = v23;
        uint64_t v64 = _swift_stdlib_bridgeErrorToNSError();
        uint64_t v99 = v64;
        sub_251F361D0();
        *uint64_t v59 = v64;

        _os_log_impl(&dword_2519F3000, v55, v56, "%s interval aggregation failed to convert to JSON with error: %@", (uint8_t *)v58, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
        swift_arrayDestroy();
        MEMORY[0x2533AC760](v59, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x2533AC760](v60, -1, -1);
        MEMORY[0x2533AC760](v58, -1, -1);

        uint64_t result = sub_251B4502C(v98, _s8IntervalV11AggregationVMa);
        long long v23 = v85;
      }
      else
      {

        uint64_t result = sub_251B4502C(v98, _s8IntervalV11AggregationVMa);
        long long v23 = 0;
      }
      goto LABEL_5;
    }
    unint64_t v70 = v69;
    uint64_t v85 = (void *)v68;
    sub_251A1AD94(v65, v66);
    swift_release();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v48, v45);
    if (qword_26B21FEF0 != -1) {
      swift_once();
    }
    uint64_t v71 = sub_251F350A0();
    __swift_project_value_buffer(v71, (uint64_t)qword_26B21F6E8);
    swift_bridgeObjectRetain();
    uint64_t v72 = sub_251F35080();
    os_log_type_t v73 = sub_251F35FD0();
    BOOL v74 = os_log_type_enabled(v72, v73);
    uint64_t v14 = v89;
    if (v74)
    {
      uint64_t v75 = swift_slowAlloc();
      uint64_t v76 = swift_slowAlloc();
      uint64_t v100 = v76;
      *(_DWORD *)uint64_t v75 = v83;
      uint64_t v77 = sub_251F36E70();
      uint64_t v99 = sub_251A00E84(v77, v78, &v100);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v75 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v99 = sub_251A00E84((uint64_t)v85, v70, &v100);
      sub_251F361D0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2519F3000, v72, v73, "%s interval aggregation: %s", (uint8_t *)v75, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v76, -1, -1);
      MEMORY[0x2533AC760](v75, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t result = sub_251B4502C(v98, _s8IntervalV11AggregationVMa);
LABEL_5:
    uint64_t v4 = v93;
    uint64_t v7 = v91;
    uint64_t v16 = v88;
    int64_t v22 = v95;
    unint64_t v24 = v96;
    unint64_t v20 = v97;
  }
  unint64_t v31 = *(void *)(v81 + 8 * (v30 + 2));
  if (v31)
  {
    v30 += 2;
    goto LABEL_12;
  }
  int64_t v79 = v30 + 3;
  if (v30 + 3 >= v82)
  {
    int64_t v22 = v30 + 2;
    goto LABEL_17;
  }
  unint64_t v31 = *(void *)(v81 + 8 * v79);
  if (v31)
  {
    v30 += 3;
LABEL_12:
    uint64_t v97 = (v31 - 1) & v31;
    unint64_t v26 = __clz(__rbit64(v31)) + (v30 << 6);
    int64_t v22 = v30;
LABEL_8:
    uint64_t v27 = v87;
    sub_251B44CAC(*(void *)(v87 + 48) + *(void *)(v86 + 72) * v26, (uint64_t)v14, type metadata accessor for PhoenixMetricsAggregator.IntervalKey);
    uint64_t v28 = *(void *)(v27 + 56);
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E3C0);
    *(void *)&v14[*(int *)(v29 + 48)] = *(void *)(v28 + 8 * v26);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v14, 0, 1, v29);
    swift_bridgeObjectRetain();
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v30 = v79 + 1;
    if (__OFADD__(v79, 1)) {
      break;
    }
    if (v30 >= v82)
    {
      int64_t v22 = v80[0];
      goto LABEL_17;
    }
    unint64_t v31 = *(void *)(v81 + 8 * v30);
    ++v79;
    if (v31) {
      goto LABEL_12;
    }
  }
LABEL_50:
  __break(1u);
  return result;
}

void sub_251B42734()
{
  sub_251F36DB0();
  sub_251F35DF0();
  sub_251F35800();
  sub_251B44808();
  sub_251F36DE0();
  sub_251F36DC0();
  sub_251F36DB0();
  v7[1] = 0xE000000000000000;
  sub_251F35DF0();
  sub_251F35800();
  if (qword_26B21FEF0 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_251F350A0();
  __swift_project_value_buffer(v0, (uint64_t)qword_26B21F6E8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_251F35080();
  os_log_type_t v2 = sub_251F35FD0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    v7[0] = v4;
    *(_DWORD *)uint64_t v3 = 136316162;
    uint64_t v5 = sub_251F36E70();
    sub_251A00E84(v5, v6, v7);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v3 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_251A00E84(0, 0xE000000000000000, v7);
    sub_251F361D0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v3 + 22) = 2048;
    sub_251F361D0();
    *(_WORD *)(v3 + 32) = 2048;
    sub_251F361D0();
    *(_WORD *)(v3 + 42) = 2080;
    swift_bridgeObjectRetain();
    sub_251A00E84(0, 0xE000000000000000, v7);
    sub_251F361D0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2519F3000, v1, v2, "%s total snapshot time in interval: %s in %lu snapshots out of %lu unfiltered (est. %s)", (uint8_t *)v3, 0x34u);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v4, -1, -1);
    MEMORY[0x2533AC760](v3, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
}

void sub_251B42AE0()
{
  uint64_t v1 = (_OWORD *)swift_allocObject();
  long long v2 = v0[5];
  v1[5] = v0[4];
  v1[6] = v2;
  v1[7] = v0[6];
  long long v3 = v0[1];
  v1[1] = *v0;
  v1[2] = v3;
  long long v4 = v0[3];
  v1[3] = v0[2];
  v1[4] = v4;
  sub_251B446D8((uint64_t)v0);
  sub_251B446D8((uint64_t)v0);
  if (qword_26B21EC68 != -1) {
    swift_once();
  }
  if (byte_26B220CB8 == 1)
  {
    sub_251B44724((uint64_t)v0);
    sub_251A4ECF0((uint64_t)(v0 + 1), (uint64_t)v14, &qword_269B9E2A8);
    sub_251A4ECF0((uint64_t)v14, (uint64_t)&v15, &qword_269B9E2A8);
    if (v16)
    {
      uint64_t aBlock = v15;
      uint64_t v9 = v16;
      swift_bridgeObjectRetain();
      sub_251F35800();
      swift_bridgeObjectRetain();
      sub_251F35800();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    unint64_t v6 = (void *)sub_251F356C0();
    swift_bridgeObjectRelease();
    uint64_t v12 = sub_251B446D0;
    uint64_t v13 = v1;
    uint64_t aBlock = MEMORY[0x263EF8330];
    uint64_t v9 = 1107296256;
    uint64_t v10 = sub_251BB7CC4;
    uint64_t v11 = &block_descriptor_25;
    uint64_t v7 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    AnalyticsSendEventLazy();
    swift_release();
    _Block_release(v7);
  }
  else
  {
    uint64_t v5 = sub_251B3F5AC();
    sub_251B43F6C(v5);
    swift_release();
    swift_bridgeObjectRelease();
    sub_251B44724((uint64_t)v0);
  }
}

uint64_t PhoenixMetricsAggregator.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC13HomeDataModel24PhoenixMetricsAggregator_clock;
  uint64_t v2 = sub_251F365D0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_defaultActor_destroy();
  return v0;
}

uint64_t PhoenixMetricsAggregator.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC13HomeDataModel24PhoenixMetricsAggregator_clock;
  uint64_t v2 = sub_251F365D0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_defaultActor_destroy();
  return MEMORY[0x270FA2418](v0);
}

uint64_t PhoenixMetricsAggregator.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_251B42EB0()
{
  return v0;
}

uint64_t sub_251B42EBC()
{
  return type metadata accessor for PhoenixMetricsAggregator();
}

uint64_t type metadata accessor for PhoenixMetricsAggregator()
{
  uint64_t result = qword_26B21FEB8;
  if (!qword_26B21FEB8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_251B42F10()
{
  uint64_t result = sub_251F365D0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for PhoenixMetricsAggregator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for PhoenixMetricsAggregator);
}

uint64_t dispatch thunk of PhoenixMetricsAggregator.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t sub_251B42FF0()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_251B43038(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_251AB3DD4;
  return sub_251B40E58(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_251B43100(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_251B43168(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = _s8IntervalVMa(0);
  uint64_t v6 = v5 - 8;
  uint64_t v7 = *(void *)(v5 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v21 - v11;
  sub_251B44CAC(a1, (uint64_t)&v21 - v11, type metadata accessor for PhoenixMetricsAggregator.IntervalKey);
  uint64_t v13 = a1 + *(int *)(type metadata accessor for PhoenixMetricsAggregator.OpenInterval(0) + 20);
  uint64_t v14 = &v12[*(int *)(v6 + 28)];
  uint64_t v15 = sub_251F365B0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v14, v13, v15);
  sub_251F36580();
  uint64_t v16 = sub_251F35CD0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v4, 1, 1, v16);
  uint64_t v17 = swift_allocObject();
  swift_weakInit();
  sub_251B44CAC((uint64_t)v12, (uint64_t)v10, _s8IntervalVMa);
  unint64_t v18 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v19 = (void *)swift_allocObject();
  v19[2] = 0;
  v19[3] = 0;
  v19[4] = v17;
  sub_251B44ECC((uint64_t)v10, (uint64_t)v19 + v18, _s8IntervalVMa);
  sub_251ACBCF4((uint64_t)v4, (uint64_t)&unk_269B9E5D8, (uint64_t)v19);
  swift_release();
  return sub_251B4502C((uint64_t)v12, _s8IntervalVMa);
}

uint64_t sub_251B4341C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  v5[5] = a1;
  return MEMORY[0x270FA2498](sub_251B43440, 0, 0);
}

uint64_t sub_251B43440()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 64) = Strong;
  if (Strong)
  {
    return MEMORY[0x270FA2498](sub_251B43508, Strong, 0);
  }
  else
  {
    **(unsigned char **)(v0 + 40) = 1;
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
}

uint64_t sub_251B43508()
{
  sub_251B435A0(*(void **)(v0 + 56));
  swift_release();
  return MEMORY[0x270FA2498](sub_251B43578, 0, 0);
}

uint64_t sub_251B43578()
{
  **(unsigned char **)(v0 + 40) = *(void *)(v0 + 64) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_251B435A0(void *a1)
{
  uint64_t v40 = *v1;
  uint64_t v3 = _s8IntervalVMa(0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v38 - v8;
  uint64_t v10 = type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (uint64_t *)((char *)&v38 - v14);
  sub_251B44CAC((uint64_t)a1, (uint64_t)&v38 - v14, type metadata accessor for PhoenixMetricsAggregator.IntervalKey);
  uint64_t v16 = (uint64_t *)((char *)v1 + OBJC_IVAR____TtC13HomeDataModel24PhoenixMetricsAggregator_intervalBuffer);
  swift_beginAccess();
  uint64_t v17 = *v16;
  uint64_t v18 = *(void *)(*v16 + 16);
  swift_bridgeObjectRetain();
  if (v18 && (unint64_t v19 = sub_2519FEAB8(v15), (v20 & 1) != 0))
  {
    uint64_t v21 = *(void *)(*(void *)(v17 + 56) + 8 * v19);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v21 = MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRelease();
  sub_251B4502C((uint64_t)v15, type metadata accessor for PhoenixMetricsAggregator.IntervalKey);
  swift_bridgeObjectRetain();
  char v22 = sub_251D8284C(a1, v21);
  swift_bridgeObjectRelease();
  if (v22) {
    return swift_bridgeObjectRelease();
  }
  sub_251B44CAC((uint64_t)a1, (uint64_t)v9, _s8IntervalVMa);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v21 = sub_251F10234(0, *(void *)(v21 + 16) + 1, 1, v21);
  }
  unint64_t v25 = *(void *)(v21 + 16);
  unint64_t v24 = *(void *)(v21 + 24);
  if (v25 >= v24 >> 1) {
    uint64_t v21 = sub_251F10234(v24 > 1, v25 + 1, 1, v21);
  }
  long long v39 = v13;
  *(void *)(v21 + 16) = v25 + 1;
  sub_251B44ECC((uint64_t)v9, v21+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v25, _s8IntervalVMa);
  if (qword_26B21FEF0 != -1) {
    swift_once();
  }
  uint64_t v26 = sub_251F350A0();
  __swift_project_value_buffer(v26, (uint64_t)qword_26B21F6E8);
  sub_251B44CAC((uint64_t)a1, (uint64_t)v7, _s8IntervalVMa);
  uint64_t v27 = sub_251F35080();
  os_log_type_t v28 = sub_251F35FA0();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    v42[0] = v38;
    *(_DWORD *)uint64_t v29 = 136315394;
    uint64_t v30 = sub_251F36E70();
    uint64_t v41 = sub_251A00E84(v30, v31, v42);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v29 + 12) = 2080;
    uint64_t v32 = sub_251A210C8();
    uint64_t v41 = sub_251A00E84(v32, v33, v42);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    sub_251B4502C((uint64_t)v7, _s8IntervalVMa);
    _os_log_impl(&dword_2519F3000, v27, v28, "%s adding interval %s", (uint8_t *)v29, 0x16u);
    uint64_t v34 = v38;
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v34, -1, -1);
    MEMORY[0x2533AC760](v29, -1, -1);
  }
  else
  {
    sub_251B4502C((uint64_t)v7, _s8IntervalVMa);
  }

  uint64_t v35 = (uint64_t)a1;
  uint64_t v36 = v39;
  sub_251B44CAC(v35, (uint64_t)v39, type metadata accessor for PhoenixMetricsAggregator.IntervalKey);
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v41 = *v16;
  *uint64_t v16 = 0x8000000000000000;
  sub_251A0F0EC(v21, v36, isUniquelyReferenced_nonNull_native);
  *uint64_t v16 = v41;
  swift_bridgeObjectRelease();
  sub_251B4502C((uint64_t)v36, type metadata accessor for PhoenixMetricsAggregator.IntervalKey);
  return swift_endAccess();
}

uint64_t sub_251B43AF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[10] = a5;
  v6[11] = a6;
  v6[8] = a1;
  v6[9] = a4;
  return MEMORY[0x270FA2498](sub_251B43B18, 0, 0);
}

uint64_t sub_251B43B18()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 96) = Strong;
  if (Strong)
  {
    return MEMORY[0x270FA2498](sub_251B43BE0, Strong, 0);
  }
  else
  {
    **(unsigned char **)(v0 + 64) = 1;
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
}

uint64_t sub_251B43BE0()
{
  unint64_t v1 = (void **)(*(void *)(v0 + 96) + OBJC_IVAR____TtC13HomeDataModel24PhoenixMetricsAggregator_batchEvents);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *unint64_t v1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v2 = sub_251F100D0(0, v2[2] + 1, 1, v2);
    *unint64_t v1 = v2;
  }
  unint64_t v5 = v2[2];
  unint64_t v4 = v2[3];
  if (v5 >= v4 >> 1)
  {
    uint64_t v2 = sub_251F100D0((void *)(v4 > 1), v5 + 1, 1, v2);
    *unint64_t v1 = v2;
  }
  long long v6 = *(_OWORD *)(v0 + 80);
  v2[2] = v5 + 1;
  *(_OWORD *)&v2[2 * v5 + 4] = v6;
  swift_endAccess();
  swift_release();
  return MEMORY[0x270FA2498](sub_251B43D1C, 0, 0);
}

uint64_t sub_251B43D1C()
{
  **(unsigned char **)(v0 + 64) = *(void *)(v0 + 96) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_251B43D44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[10] = a5;
  v6[11] = a6;
  v6[8] = a1;
  v6[9] = a4;
  return MEMORY[0x270FA2498](sub_251B43D68, 0, 0);
}

uint64_t sub_251B43D68()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 96) = Strong;
  if (Strong)
  {
    return MEMORY[0x270FA2498](sub_251B43E30, Strong, 0);
  }
  else
  {
    **(unsigned char **)(v0 + 64) = 1;
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
}

uint64_t sub_251B43E30()
{
  unint64_t v1 = (void **)(*(void *)(v0 + 96) + OBJC_IVAR____TtC13HomeDataModel24PhoenixMetricsAggregator_batchEvents);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *unint64_t v1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v2 = sub_251F100D0(0, v2[2] + 1, 1, v2);
    *unint64_t v1 = v2;
  }
  unint64_t v5 = v2[2];
  unint64_t v4 = v2[3];
  if (v5 >= v4 >> 1)
  {
    uint64_t v2 = sub_251F100D0((void *)(v4 > 1), v5 + 1, 1, v2);
    *unint64_t v1 = v2;
  }
  long long v6 = *(_OWORD *)(v0 + 80);
  v2[2] = v5 + 1;
  *(_OWORD *)&v2[2 * v5 + 4] = v6;
  swift_endAccess();
  swift_release();
  return MEMORY[0x270FA2498](sub_251B45094, 0, 0);
}

uint64_t sub_251B43F6C(uint64_t a1)
{
  if (qword_26B21EC68 != -1) {
    swift_once();
  }
  if (byte_26B220CB8 != 1)
  {
    if (qword_26B21ED00 != -1) {
      swift_once();
    }
    sub_251F35FD0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
    uint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_251F3DAB0;
    uint64_t v4 = MEMORY[0x263F8D310];
    *(void *)(v3 + 56) = MEMORY[0x263F8D310];
    unint64_t v5 = sub_251B44770();
    *(void *)(v3 + 64) = v5;
    *(void *)(v3 + 32) = 0xD000000000000022;
    *(void *)(v3 + 40) = 0x8000000251F6A8E0;
    sub_251A4ECF0((uint64_t)(v1 + 2), (uint64_t)v11, &qword_269B9E2A8);
    sub_251A4ECF0((uint64_t)v11, (uint64_t)&v12, &qword_269B9E2A8);
    if (v13) {
      goto LABEL_11;
    }
LABEL_12:
    uint64_t v7 = *v1;
    uint64_t v6 = swift_bridgeObjectRetain();
    goto LABEL_13;
  }
  if (qword_26B21ED00 != -1) {
    swift_once();
  }
  sub_251F35FD0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_251F3DAB0;
  uint64_t v4 = MEMORY[0x263F8D310];
  *(void *)(v3 + 56) = MEMORY[0x263F8D310];
  unint64_t v5 = sub_251B44770();
  *(void *)(v3 + 64) = v5;
  *(void *)(v3 + 32) = 0xD000000000000022;
  *(void *)(v3 + 40) = 0x8000000251F6A8E0;
  sub_251A4ECF0((uint64_t)(v1 + 2), (uint64_t)v11, &qword_269B9E2A8);
  sub_251A4ECF0((uint64_t)v11, (uint64_t)&v12, &qword_269B9E2A8);
  if (!v13) {
    goto LABEL_12;
  }
LABEL_11:
  uint64_t v9 = v12;
  uint64_t v10 = v13;
  swift_bridgeObjectRetain();
  sub_251F35800();
  swift_bridgeObjectRetain();
  sub_251F35800();
  swift_bridgeObjectRelease();
  uint64_t v7 = v9;
  uint64_t v6 = v10;
LABEL_13:
  *(void *)(v3 + 96) = v4;
  *(void *)(v3 + 104) = v5;
  *(void *)(v3 + 72) = v7;
  *(void *)(v3 + 80) = v6;
  *(void *)(v3 + 136) = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ECE0);
  *(void *)(v3 + 144) = sub_251B447B8();
  *(void *)(v3 + 112) = a1;
  swift_bridgeObjectRetain();
  sub_251F34FB0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_251B442D0()
{
  if (qword_26B21ED00 != -1) {
    swift_once();
  }
  sub_251F35FB0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_251F3DAB0;
  uint64_t v2 = MEMORY[0x263F8D310];
  *(void *)(v1 + 56) = MEMORY[0x263F8D310];
  unint64_t v3 = sub_251B44770();
  *(void *)(v1 + 64) = v3;
  *(void *)(v1 + 32) = 0xD000000000000022;
  *(void *)(v1 + 40) = 0x8000000251F6A8E0;
  sub_251A4ECF0((uint64_t)(v0 + 2), (uint64_t)v11, &qword_269B9E2A8);
  sub_251A4ECF0((uint64_t)v11, (uint64_t)&v12, &qword_269B9E2A8);
  if (v13)
  {
    uint64_t v9 = v12;
    uint64_t v10 = v13;
    swift_bridgeObjectRetain();
    sub_251F35800();
    swift_bridgeObjectRetain();
    sub_251F35800();
    swift_bridgeObjectRelease();
    uint64_t v5 = v9;
    uint64_t v4 = v10;
  }
  else
  {
    uint64_t v5 = *v0;
    uint64_t v4 = swift_bridgeObjectRetain();
  }
  *(void *)(v1 + 96) = v2;
  *(void *)(v1 + 104) = v3;
  *(void *)(v1 + 72) = v5;
  *(void *)(v1 + 80) = v4;
  swift_getErrorValue();
  uint64_t v6 = sub_251F36BF0();
  *(void *)(v1 + 136) = v2;
  *(void *)(v1 + 144) = v3;
  *(void *)(v1 + 112) = v6;
  *(void *)(v1 + 120) = v7;
  sub_251F34FB0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_251B4449C(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_251B45098;
  return v6(a1);
}

uint64_t sub_251B44578()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_251B445B0(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_251B44600()
{
  uint64_t v0 = sub_251B3F5AC();
  sub_251B43F6C(v0);
  return v0;
}

uint64_t sub_251B44688()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 128, 7);
}

uint64_t sub_251B446D0()
{
  return sub_251B44600();
}

uint64_t sub_251B446D8(uint64_t a1)
{
  return a1;
}

uint64_t sub_251B44724(uint64_t a1)
{
  return a1;
}

unint64_t sub_251B44770()
{
  unint64_t result = qword_26B21ECD8;
  if (!qword_26B21ECD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B21ECD8);
  }
  return result;
}

unint64_t sub_251B447B8()
{
  unint64_t result = qword_26B21ECE8;
  if (!qword_26B21ECE8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B21ECE0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B21ECE8);
  }
  return result;
}

unint64_t sub_251B44808()
{
  unint64_t result = qword_26B21E458;
  if (!qword_26B21E458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B21E458);
  }
  return result;
}

unint64_t sub_251B4485C()
{
  unint64_t result = qword_26B21E430;
  if (!qword_26B21E430)
  {
    _s8IntervalV11AggregationVMa(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B21E430);
  }
  return result;
}

unint64_t sub_251B448B4()
{
  unint64_t result = qword_26B21E330;
  if (!qword_26B21E330)
  {
    sub_251F34570();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B21E330);
  }
  return result;
}

unint64_t sub_251B44900()
{
  unint64_t result = qword_26B21E598;
  if (!qword_26B21E598)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B21E590);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B21E598);
  }
  return result;
}

uint64_t sub_251B4495C()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_251B4499C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_251AB3A34;
  uint64_t v2 = (void *)swift_task_alloc();
  v1[2] = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_251AB3DD4;
  return sub_251B40BA4();
}

uint64_t sub_251B44A70(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_251AB3DD4;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_269B9E588 + dword_269B9E588);
  return v6(a1, v4);
}

unint64_t sub_251B44B28()
{
  unint64_t result = qword_26B21FF10;
  if (!qword_26B21FF10)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B21FF10);
  }
  return result;
}

unint64_t sub_251B44B68()
{
  unint64_t result = qword_26B21ECB0;
  if (!qword_26B21ECB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B21ECB0);
  }
  return result;
}

uint64_t sub_251B44BBC(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_251AB3A34;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_269B9E5B8 + dword_269B9E5B8);
  return v6(a1, v4);
}

uint64_t sub_251B44C74()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_251B44CAC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_251B44D14()
{
  uint64_t v1 = _s8IntervalVMa(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v5 = v0 + v3;
  swift_bridgeObjectRelease();
  uint64_t v6 = v0 + v3 + *(int *)(type metadata accessor for PhoenixMetricsAggregator.IntervalKey(0) + 20);
  uint64_t v7 = sub_251F34DA0();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  uint64_t v9 = v2 | 7;
  uint64_t v10 = v3 + v4;
  uint64_t v11 = v5 + *(int *)(v1 + 20);
  uint64_t v12 = sub_251F365B0();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);
  v13(v11, v12);
  v13(v5 + *(int *)(v1 + 24), v12);
  return MEMORY[0x270FA0238](v0, v10, v9);
}

uint64_t sub_251B44ECC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_251B44F34(uint64_t a1)
{
  uint64_t v4 = *(void *)(_s8IntervalVMa(0) - 8);
  uint64_t v5 = *(void *)(v1 + 32);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_251AB3DD4;
  v7[6] = v5;
  v7[7] = v6;
  v7[5] = a1;
  return MEMORY[0x270FA2498](sub_251B43440, 0, 0);
}

uint64_t sub_251B4502C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t static StaticCharacteristicsBag.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_251AF8598(*a1, *a2);
}

uint64_t StaticCharacteristicsBag.hash(into:)(long long *a1)
{
  uint64_t v3 = *v1;
  swift_bridgeObjectRetain();
  sub_251A42984(a1, v3);
  return swift_bridgeObjectRelease();
}

unint64_t sub_251B450F4()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_251B45110@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251B4C9E8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_251B4513C(uint64_t a1)
{
  unint64_t v2 = sub_251B4A768();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251B45178(uint64_t a1)
{
  unint64_t v2 = sub_251B4A768();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticCharacteristicsBag.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E5E8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251B4A768();
  sub_251F36DA0();
  v9[1] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E5F8);
  sub_251B4A7BC();
  sub_251F36A20();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t StaticCharacteristicsBag.hashValue.getter()
{
  uint64_t v1 = *v0;
  sub_251F36CA0();
  sub_251A42984(v3, v1);
  return sub_251F36D00();
}

uint64_t StaticCharacteristicsBag.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E618);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251B4A768();
  sub_251F36D90();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E5F8);
    sub_251B4A8A8();
    sub_251F36880();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_251B454C4(uint64_t *a1, uint64_t *a2)
{
  return sub_251AF8598(*a1, *a2);
}

uint64_t sub_251B454D0()
{
  uint64_t v1 = *v0;
  sub_251F36CA0();
  sub_251A42984(v3, v1);
  return sub_251F36D00();
}

uint64_t sub_251B45518(long long *a1)
{
  return sub_251A42984(a1, *v1);
}

uint64_t sub_251B45520()
{
  uint64_t v1 = *v0;
  sub_251F36CA0();
  sub_251A42984(v3, v1);
  return sub_251F36D00();
}

uint64_t sub_251B45564@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return StaticCharacteristicsBag.init(from:)(a1, a2);
}

uint64_t sub_251B4557C(void *a1)
{
  return StaticCharacteristicsBag.encode(to:)(a1);
}

size_t StaticCharacteristicsBag.staticCharacteristics.getter()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  size_t v1 = sub_251A91C20(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t StaticCharacteristicsBag.staticCharacteristic(for:)@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *v2;
  if (*(void *)(v4 + 16) && (unint64_t v5 = sub_2519FE568(*a1), (v6 & 1) != 0))
  {
    unint64_t v7 = v5;
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v9 = type metadata accessor for StaticCharacteristic();
    uint64_t v16 = *(void *)(v9 - 8);
    sub_251B4CAD0(v8 + *(void *)(v16 + 72) * v7, a2, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56);
    uint64_t v11 = a2;
    uint64_t v12 = 0;
    uint64_t v13 = v9;
  }
  else
  {
    uint64_t v14 = type metadata accessor for StaticCharacteristic();
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
    uint64_t v13 = v14;
    uint64_t v11 = a2;
    uint64_t v12 = 1;
  }
  return v10(v11, v12, 1, v13);
}

uint64_t StaticCharacteristicsBag.staticCharacteristic(for:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  swift_bridgeObjectRetain();
  sub_251A95CF0((uint64_t (*)(char *))sub_251B4A9D8, v3, a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_251B45768()
{
  return sub_251F34D70() & 1;
}

uint64_t StaticCharacteristicsBag.allValues.getter()
{
  return swift_bridgeObjectRetain();
}

Swift::Bool_optional __swiftcall StaticCharacteristicsBag.BOOL(for:)(HomeDataModel::CharacteristicKind a1)
{
  unsigned __int8 v2 = *(unsigned char *)a1;
  uint64_t v5 = *v1;
  unsigned __int8 v4 = v2;
  return (Swift::Bool_optional)sub_251B457DC(&v4);
}

uint64_t sub_251B457DC(unsigned __int8 *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F108);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  char v6 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  uint64_t v64 = (uint64_t)&v61 - v8;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v61 - v10;
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v14 = (char *)&v61 - v13;
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)&v61 - v16;
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  char v20 = (char *)&v61 - v19;
  uint64_t v21 = MEMORY[0x270FA5388](v18);
  long long v23 = (char *)&v61 - v22;
  MEMORY[0x270FA5388](v21);
  unint64_t v25 = (char *)&v61 - v24;
  uint64_t v26 = *a1;
  uint64_t v27 = *v1;
  if (*(void *)(v27 + 16) && (unint64_t v28 = sub_2519FE568(v26), (v29 & 1) != 0))
  {
    unint64_t v30 = v28;
    unint64_t v62 = v23;
    unint64_t v31 = v20;
    uint64_t v32 = v6;
    unint64_t v33 = v14;
    uint64_t v34 = v11;
    uint64_t v35 = *(void *)(v27 + 56);
    uint64_t v36 = type metadata accessor for StaticCharacteristic();
    uint64_t v37 = *(void *)(v36 - 8);
    id v63 = v17;
    uint64_t v38 = v37;
    uint64_t v39 = v35 + *(void *)(v37 + 72) * v30;
    uint64_t v11 = v34;
    uint64_t v14 = v33;
    char v6 = v32;
    char v20 = v31;
    long long v23 = v62;
    sub_251B4CAD0(v39, (uint64_t)v25, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v25, 0, 1, v36);
    uint64_t v17 = v63;
    if ((int)v26 > 113) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v42 = type metadata accessor for StaticCharacteristic();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v25, 1, 1, v42);
    if ((int)v26 > 113)
    {
LABEL_4:
      switch(v26)
      {
        case 0x72:
          uint64_t v44 = v64;
          sub_251A4ECF0((uint64_t)v25, v64, &qword_26B21F108);
          uint64_t v45 = type metadata accessor for StaticCharacteristic();
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 48))(v44, 1, v45) != 1)
          {
            uint64_t v55 = (uint64_t *)(v64 + *(int *)(v45 + 24));
            uint64_t v52 = *v55;
            switch(*((unsigned char *)v55 + 16))
            {
              case 1:
                uint64_t v52 = *v55;
                goto LABEL_57;
              case 2:
                uint64_t v52 = (unsigned __int16)*v55;
                goto LABEL_57;
              case 3:
                uint64_t v52 = *v55;
                goto LABEL_57;
              case 4:
                if ((v52 & 0x8000000000000000) == 0) {
                  goto LABEL_57;
                }
                goto LABEL_80;
              case 5:
              case 6:
                uint64_t v52 = (int)v52;
LABEL_57:
                uint64_t v59 = v64;
                goto LABEL_76;
              default:
                sub_251B4CA70(v64, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
                return 2;
            }
          }
          uint64_t v41 = v64;
          break;
        case 0x95:
          sub_251A4ECF0((uint64_t)v25, (uint64_t)v23, &qword_26B21F108);
          uint64_t v46 = type metadata accessor for StaticCharacteristic();
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v46 - 8) + 48))(v23, 1, v46) != 1)
          {
            os_log_type_t v56 = &v23[*(int *)(v46 + 24)];
            uint64_t v52 = *(void *)v56;
            switch(v56[16])
            {
              case 1:
                uint64_t v52 = *(void *)v56;
                goto LABEL_63;
              case 2:
                uint64_t v52 = (unsigned __int16)*(void *)v56;
                goto LABEL_63;
              case 3:
                uint64_t v52 = *(void *)v56;
                goto LABEL_63;
              case 4:
                if ((v52 & 0x8000000000000000) == 0) {
                  goto LABEL_63;
                }
                goto LABEL_81;
              case 5:
              case 6:
                uint64_t v52 = (int)v52;
LABEL_63:
                uint64_t v59 = (uint64_t)v23;
                goto LABEL_76;
              default:
                sub_251B4CA70((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
                return 2;
            }
          }
          uint64_t v41 = (uint64_t)v23;
          break;
        case 0x9C:
          sub_251A4ECF0((uint64_t)v25, (uint64_t)v17, &qword_26B21F108);
          uint64_t v40 = type metadata accessor for StaticCharacteristic();
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v40 - 8) + 48))(v17, 1, v40) != 1)
          {
            unint64_t v51 = &v17[*(int *)(v40 + 24)];
            uint64_t v52 = *(void *)v51;
            switch(v51[16])
            {
              case 1:
                uint64_t v52 = *(void *)v51;
                goto LABEL_45;
              case 2:
                uint64_t v52 = (unsigned __int16)*(void *)v51;
                goto LABEL_45;
              case 3:
                uint64_t v52 = *(void *)v51;
                goto LABEL_45;
              case 4:
                if ((v52 & 0x8000000000000000) == 0) {
                  goto LABEL_45;
                }
                __break(1u);
                goto LABEL_79;
              case 5:
              case 6:
                uint64_t v52 = (int)v52;
LABEL_45:
                uint64_t v59 = (uint64_t)v17;
                goto LABEL_76;
              default:
                sub_251B4CA70((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
                return 2;
            }
          }
          uint64_t v41 = (uint64_t)v17;
          break;
        default:
LABEL_23:
          sub_251A4ECF0((uint64_t)v25, (uint64_t)v6, &qword_26B21F108);
          uint64_t v49 = type metadata accessor for StaticCharacteristic();
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v49 - 8) + 48))(v6, 1, v49) != 1)
          {
            uint64_t v50 = StaticCharacteristic.BOOLValue.getter();
            sub_251B4CA70((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
            return v50;
          }
          uint64_t v41 = (uint64_t)v6;
          break;
      }
LABEL_25:
      sub_251A1B064(v41, &qword_26B21F108);
      return 2;
    }
  }
  if (v26 != 31)
  {
    if (v26 == 38)
    {
      sub_251A4ECF0((uint64_t)v25, (uint64_t)v14, &qword_26B21F108);
      uint64_t v48 = type metadata accessor for StaticCharacteristic();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v48 - 8) + 48))(v14, 1, v48) != 1)
      {
        uint64_t v58 = &v14[*(int *)(v48 + 24)];
        uint64_t v52 = *(void *)v58;
        switch(v58[16])
        {
          case 1:
            uint64_t v52 = *(void *)v58;
            goto LABEL_75;
          case 2:
            uint64_t v52 = (unsigned __int16)*(void *)v58;
            goto LABEL_75;
          case 3:
            uint64_t v52 = *(void *)v58;
            goto LABEL_75;
          case 4:
            if ((v52 & 0x8000000000000000) == 0) {
              goto LABEL_75;
            }
            goto LABEL_83;
          case 5:
          case 6:
            uint64_t v52 = (int)v52;
LABEL_75:
            uint64_t v59 = (uint64_t)v14;
            goto LABEL_76;
          default:
            sub_251B4CA70((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
            return 2;
        }
      }
      uint64_t v41 = (uint64_t)v14;
    }
    else
    {
      if (v26 != 47) {
        goto LABEL_23;
      }
      sub_251A4ECF0((uint64_t)v25, (uint64_t)v11, &qword_26B21F108);
      uint64_t v43 = type metadata accessor for StaticCharacteristic();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v43 - 8) + 48))(v11, 1, v43) != 1)
      {
        id v53 = &v11[*(int *)(v43 + 24)];
        uint64_t v54 = *(void *)v53;
        switch(v53[16])
        {
          case 1:
            uint64_t v54 = *(void *)v53;
            goto LABEL_51;
          case 2:
            uint64_t v54 = (unsigned __int16)*(void *)v53;
            goto LABEL_51;
          case 3:
            uint64_t v54 = *(void *)v53;
            goto LABEL_51;
          case 4:
            if ((v54 & 0x8000000000000000) == 0) {
              goto LABEL_51;
            }
LABEL_79:
            __break(1u);
LABEL_80:
            __break(1u);
LABEL_81:
            __break(1u);
            goto LABEL_82;
          case 5:
          case 6:
            uint64_t v54 = (int)v54;
LABEL_51:
            sub_251B4CA70((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
            return v54 != 1;
          default:
            sub_251B4CA70((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
            return 2;
        }
      }
      uint64_t v41 = (uint64_t)v11;
    }
    goto LABEL_25;
  }
  sub_251A4ECF0((uint64_t)v25, (uint64_t)v20, &qword_26B21F108);
  uint64_t v47 = type metadata accessor for StaticCharacteristic();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v47 - 8) + 48))(v20, 1, v47) == 1)
  {
    uint64_t v41 = (uint64_t)v20;
    goto LABEL_25;
  }
  BOOL v57 = &v20[*(int *)(v47 + 24)];
  uint64_t v52 = *(void *)v57;
  switch(v57[16])
  {
    case 1:
      uint64_t v52 = *(void *)v57;
      break;
    case 2:
      uint64_t v52 = (unsigned __int16)*(void *)v57;
      break;
    case 3:
      uint64_t v52 = *(void *)v57;
      break;
    case 4:
      if (v52 < 0)
      {
LABEL_82:
        __break(1u);
LABEL_83:
        __break(1u);
        JUMPOUT(0x251B461B8);
      }
      return result;
    case 5:
    case 6:
      uint64_t v52 = (int)v52;
      break;
    default:
      sub_251B4CA70((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
      return 2;
  }
  uint64_t v59 = (uint64_t)v20;
LABEL_76:
  sub_251B4CA70(v59, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
  return v52 == 0;
}

Swift::Int_optional __swiftcall StaticCharacteristicsBag.int(for:)(HomeDataModel::CharacteristicKind a1)
{
  unsigned __int8 v2 = (unsigned __int8 *)a1;
  uint64_t v3 = type metadata accessor for StaticCharacteristic();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = &v25[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = &v25[-v8];
  uint64_t v10 = *v2;
  uint64_t v11 = *v1;
  char v28 = v10;
  if (CharacteristicKind.rawValue.getter() == 0xD000000000000024 && v12 == 0x8000000251F628B0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v13 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if ((v13 & 1) == 0) {
      goto LABEL_15;
    }
  }
  if (!*(void *)(v11 + 16) || (unint64_t v14 = sub_2519FE568(v10), (v15 & 1) == 0))
  {
LABEL_15:
    if (*(void *)(v11 + 16) && (unint64_t v18 = sub_2519FE568(v10), (v19 & 1) != 0))
    {
      sub_251B4CAD0(*(void *)(v11 + 56) + *(void *)(v4 + 72) * v18, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
      char v20 = &v7[*(int *)(v3 + 24)];
      uint64_t v21 = *(void *)v20;
      switch(v20[16])
      {
        case 1:
          char v22 = 0;
          uint64_t v21 = *(void *)v20;
          goto LABEL_29;
        case 2:
          char v22 = 0;
          uint64_t v21 = (unsigned __int16)*(void *)v20;
          goto LABEL_29;
        case 3:
          char v22 = 0;
          uint64_t v21 = *(void *)v20;
          goto LABEL_29;
        case 4:
          if (v21 < 0)
          {
            __break(1u);
LABEL_32:
            __break(1u);
            JUMPOUT(0x251B4659CLL);
          }
          char v22 = 0;
LABEL_29:
          sub_251B4CA70((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
          break;
        case 5:
        case 6:
          char v22 = 0;
          uint64_t v21 = (int)v21;
          goto LABEL_29;
        default:
          uint64_t v21 = 0;
          char v22 = 1;
          goto LABEL_29;
      }
    }
    else
    {
      uint64_t v21 = 0;
      char v22 = 1;
    }
    goto LABEL_30;
  }
  sub_251B4CAD0(*(void *)(v11 + 56) + *(void *)(v4 + 72) * v14, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
  uint64_t v16 = &v9[*(int *)(v3 + 24)];
  uint64_t v17 = *(void *)v16;
  switch(v16[16])
  {
    case 1:
      uint64_t v17 = *(void *)v16;
      goto LABEL_14;
    case 2:
      uint64_t v17 = (unsigned __int16)*(void *)v16;
      goto LABEL_14;
    case 3:
      uint64_t v17 = *(void *)v16;
      goto LABEL_14;
    case 4:
      if ((v17 & 0x8000000000000000) == 0) {
        goto LABEL_14;
      }
      goto LABEL_32;
    case 5:
    case 6:
      uint64_t v17 = (int)v17;
LABEL_14:
      sub_251B4CA70((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
      uint64_t v27 = v11;
      unsigned __int8 v26 = 105;
      if ((sub_251B457DC(&v26) & 1) == 0) {
        goto LABEL_15;
      }
      char v22 = 0;
      if (v17) {
        uint64_t v21 = v17;
      }
      else {
        uint64_t v21 = 100;
      }
      break;
    default:
      sub_251B4CA70((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
      goto LABEL_15;
  }
LABEL_30:
  Swift::Int v23 = v21;
  Swift::Bool v24 = v22;
  result.value = v23;
  result.is_nil = v24;
  return result;
}

Swift::Double_optional __swiftcall StaticCharacteristicsBag.double(for:)(HomeDataModel::CharacteristicKind a1)
{
  unsigned __int8 v2 = *(unsigned char *)a1;
  uint64_t v6 = *v1;
  unsigned __int8 v5 = v2;
  char v3 = sub_251B46610(&v5);
  result.value = v4;
  result.is_nil = v3;
  return result;
}

uint64_t sub_251B46610(unsigned __int8 *a1)
{
  uint64_t v3 = type metadata accessor for StaticCharacteristic();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *a1;
  uint64_t v8 = *v1;
  if (*(void *)(v8 + 16))
  {
    unint64_t v9 = sub_2519FE568(v7);
    if (v10)
    {
      sub_251B4CAD0(*(void *)(v8 + 56) + *(void *)(v4 + 72) * v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
      uint64_t v11 = &v6[*(int *)(v3 + 24)];
      if (v11[16] == 7)
      {
        double value = *(double *)v11;
        sub_251B4CA70((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
        return *(void *)&value;
      }
      sub_251B4CA70((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
    }
  }
  uint64_t v15 = v8;
  HIBYTE(v14) = v7;
  Swift::Int_optional v16 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)((char *)&v14 + 7));
  if (v16.is_nil) {
    double value = 0.0;
  }
  else {
    double value = (double)v16.value;
  }
  return *(void *)&value;
}

Swift::String_optional __swiftcall StaticCharacteristicsBag.string(for:)(HomeDataModel::CharacteristicKind a1)
{
  unsigned __int8 v2 = (unsigned __int8 *)a1;
  uint64_t v3 = type metadata accessor for StaticCharacteristic();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  if (*(void *)(v7 + 16) && (unint64_t v8 = sub_2519FE568(*v2), (v9 & 1) != 0))
  {
    sub_251B4CAD0(*(void *)(v7 + 56) + *(void *)(v4 + 72) * v8, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
    char v10 = &v6[*(int *)(v3 + 24)];
    if (v10[16] == 8)
    {
      uint64_t v11 = *(void *)v10;
      uint64_t v12 = (void *)*((void *)v10 + 1);
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v11 = 0;
      uint64_t v12 = 0;
    }
    sub_251B4CA70((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
  }
  else
  {
    uint64_t v11 = 0;
    uint64_t v12 = 0;
  }
  uint64_t v13 = v11;
  uint64_t v14 = v12;
  result.value._object = v14;
  result.value._countAndFlagsBits = v13;
  return result;
}

uint64_t StaticCharacteristicsBag.data(for:)(unsigned __int8 *a1)
{
  uint64_t v3 = type metadata accessor for StaticCharacteristic();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  if (!*(void *)(v7 + 16)) {
    return 0;
  }
  unint64_t v8 = sub_2519FE568(*a1);
  if ((v9 & 1) == 0) {
    return 0;
  }
  sub_251B4CAD0(*(void *)(v7 + 56) + *(void *)(v4 + 72) * v8, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
  char v10 = &v6[*(int *)(v3 + 24)];
  if (v10[16] == 10)
  {
    uint64_t v11 = *(void *)v10;
    sub_251A1A894(*(void *)v10, *((void *)v10 + 1));
  }
  else
  {
    uint64_t v11 = 0;
  }
  sub_251B4CA70((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
  return v11;
}

uint64_t StaticCharacteristicsBag.isUpdating(for:)(uint64_t a1)
{
  swift_bridgeObjectRetain();
  uint64_t v2 = swift_bridgeObjectRetain();
  char v3 = sub_251B4C57C(v2, a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

Swift::Bool __swiftcall StaticCharacteristicsBag.isReachable(for:)(HomeDataModel::ServiceKind a1)
{
  uint64_t v2 = (unsigned __int8 *)a1;
  uint64_t v35 = type metadata accessor for StaticCharacteristic();
  uint64_t v38 = *(void *)(v35 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v35);
  MEMORY[0x270FA5388](v3);
  uint64_t v37 = (uint64_t)&v32 - v5;
  uint64_t v6 = *v1;
  uint64_t v7 = *(void *)(*v1 + 64);
  uint64_t v33 = *v1 + 64;
  int v36 = *v2;
  uint64_t v8 = 1 << *(unsigned char *)(v6 + 32);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & v7;
  uint64_t v39 = v6;
  uint64_t v40 = v4;
  uint64_t v32 = v4 + 24;
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  Swift::Bool result = swift_bridgeObjectRetain_n();
  int64_t v12 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v12 << 6);
      goto LABEL_26;
    }
    int64_t v15 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_42;
    }
    if (v15 >= v34) {
      goto LABEL_39;
    }
    unint64_t v16 = *(void *)(v33 + 8 * v15);
    ++v12;
    if (!v16)
    {
      int64_t v12 = v15 + 1;
      if (v15 + 1 >= v34) {
        goto LABEL_39;
      }
      unint64_t v16 = *(void *)(v33 + 8 * v12);
      if (!v16)
      {
        int64_t v12 = v15 + 2;
        if (v15 + 2 >= v34) {
          goto LABEL_39;
        }
        unint64_t v16 = *(void *)(v33 + 8 * v12);
        if (!v16)
        {
          int64_t v12 = v15 + 3;
          if (v15 + 3 >= v34) {
            goto LABEL_39;
          }
          unint64_t v16 = *(void *)(v33 + 8 * v12);
          if (!v16)
          {
            int64_t v12 = v15 + 4;
            if (v15 + 4 >= v34) {
              goto LABEL_39;
            }
            unint64_t v16 = *(void *)(v33 + 8 * v12);
            if (!v16) {
              break;
            }
          }
        }
      }
    }
LABEL_25:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v12 << 6);
LABEL_26:
    uint64_t v18 = v37;
    sub_251B4CAD0(*(void *)(v39 + 56) + *(void *)(v38 + 72) * v14, v37, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
    sub_251B4C984(v18, v40);
    char v42 = v36;
    uint64_t v19 = ServiceKind.stateStatusDependentCharaceristicKinds.getter();
    if (!*(void *)(v19 + 16)) {
      goto LABEL_5;
    }
    char v20 = *(unsigned char *)(v40 + *(int *)(v35 + 20));
    sub_251F36CA0();
    char v41 = v20;
    CharacteristicKind.rawValue.getter();
    sub_251F357B0();
    swift_bridgeObjectRelease();
    uint64_t v21 = sub_251F36D00();
    uint64_t v22 = -1 << *(unsigned char *)(v19 + 32);
    unint64_t v23 = v21 & ~v22;
    if ((*(void *)(v19 + 56 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23))
    {
      uint64_t v24 = ~v22;
      while (1)
      {
        char v42 = *(unsigned char *)(*(void *)(v19 + 48) + v23);
        char v41 = v20;
        unint64_t v25 = CharacteristicKind.rawValue.getter();
        uint64_t v27 = v26;
        if (v25 == CharacteristicKind.rawValue.getter() && v27 == v28) {
          break;
        }
        char v30 = sub_251F36B10();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v30) {
          goto LABEL_37;
        }
        unint64_t v23 = (v23 + 1) & v24;
        if (((*(void *)(v19 + 56 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0) {
          goto LABEL_5;
        }
      }
      swift_bridgeObjectRelease_n();
LABEL_37:
      swift_bridgeObjectRelease();
      int v31 = *(unsigned __int8 *)(v32 + *(int *)(v35 + 32));
      Swift::Bool result = sub_251B4CA70(v40, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
      if (v31 == 2)
      {
        swift_release();
        swift_bridgeObjectRelease();
        return 0;
      }
    }
    else
    {
LABEL_5:
      swift_bridgeObjectRelease();
      Swift::Bool result = sub_251B4CA70(v40, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
    }
  }
  int64_t v17 = v15 + 5;
  if (v17 >= v34)
  {
LABEL_39:
    swift_release();
    swift_bridgeObjectRelease();
    return 1;
  }
  unint64_t v16 = *(void *)(v33 + 8 * v17);
  if (v16)
  {
    int64_t v12 = v17;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v12 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v12 >= v34) {
      goto LABEL_39;
    }
    unint64_t v16 = *(void *)(v33 + 8 * v12);
    ++v17;
    if (v16) {
      goto LABEL_25;
    }
  }
LABEL_42:
  __break(1u);
  return result;
}

Swift::Bool __swiftcall StaticCharacteristicsBag.isWriting(for:)(HomeDataModel::ServiceKind a1)
{
  uint64_t v2 = (unsigned __int8 *)a1;
  uint64_t v34 = type metadata accessor for StaticCharacteristic();
  uint64_t v37 = *(void *)(v34 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v34);
  MEMORY[0x270FA5388](v3);
  uint64_t v36 = (uint64_t)&v31 - v5;
  uint64_t v6 = *v1;
  uint64_t v7 = *(void *)(*v1 + 64);
  uint64_t v32 = *v1 + 64;
  int v35 = *v2;
  uint64_t v8 = 1 << *(unsigned char *)(v6 + 32);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & v7;
  uint64_t v38 = v6;
  uint64_t v39 = v4;
  uint64_t v31 = v4 + 24;
  int64_t v33 = (unint64_t)(v8 + 63) >> 6;
  Swift::Bool result = swift_bridgeObjectRetain_n();
  int64_t v12 = 0;
  while (v10)
  {
    unint64_t v13 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v14 = v13 | (v12 << 6);
LABEL_27:
    uint64_t v18 = v36;
    sub_251B4CAD0(*(void *)(v38 + 56) + *(void *)(v37 + 72) * v14, v36, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
    sub_251B4C984(v18, v39);
    char v41 = v35;
    uint64_t v19 = ServiceKind.stateStatusDependentCharaceristicKinds.getter();
    if (!*(void *)(v19 + 16)) {
      goto LABEL_5;
    }
    char v20 = *(unsigned char *)(v39 + *(int *)(v34 + 20));
    sub_251F36CA0();
    char v40 = v20;
    CharacteristicKind.rawValue.getter();
    sub_251F357B0();
    swift_bridgeObjectRelease();
    uint64_t v21 = sub_251F36D00();
    uint64_t v22 = -1 << *(unsigned char *)(v19 + 32);
    unint64_t v23 = v21 & ~v22;
    if ((*(void *)(v19 + 56 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23))
    {
      uint64_t v24 = ~v22;
      while (1)
      {
        char v41 = *(unsigned char *)(*(void *)(v19 + 48) + v23);
        char v40 = v20;
        unint64_t v25 = CharacteristicKind.rawValue.getter();
        uint64_t v27 = v26;
        if (v25 == CharacteristicKind.rawValue.getter() && v27 == v28) {
          break;
        }
        char v30 = sub_251F36B10();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v30) {
          goto LABEL_38;
        }
        unint64_t v23 = (v23 + 1) & v24;
        if (((*(void *)(v19 + 56 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0) {
          goto LABEL_5;
        }
      }
      swift_bridgeObjectRelease_n();
LABEL_38:
      swift_bridgeObjectRelease();
      if (*(unsigned char *)(v31 + *(int *)(v34 + 32)) == 1)
      {
        sub_251B4CA70(v39, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
        swift_release();
        swift_bridgeObjectRelease();
        return 1;
      }
    }
    else
    {
LABEL_5:
      swift_bridgeObjectRelease();
    }
    Swift::Bool result = sub_251B4CA70(v39, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
  }
  int64_t v15 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
    goto LABEL_43;
  }
  if (v15 >= v33) {
    goto LABEL_40;
  }
  unint64_t v16 = *(void *)(v32 + 8 * v15);
  ++v12;
  if (v16) {
    goto LABEL_26;
  }
  int64_t v12 = v15 + 1;
  if (v15 + 1 >= v33) {
    goto LABEL_40;
  }
  unint64_t v16 = *(void *)(v32 + 8 * v12);
  if (v16) {
    goto LABEL_26;
  }
  int64_t v12 = v15 + 2;
  if (v15 + 2 >= v33) {
    goto LABEL_40;
  }
  unint64_t v16 = *(void *)(v32 + 8 * v12);
  if (v16) {
    goto LABEL_26;
  }
  int64_t v12 = v15 + 3;
  if (v15 + 3 >= v33) {
    goto LABEL_40;
  }
  unint64_t v16 = *(void *)(v32 + 8 * v12);
  if (v16) {
    goto LABEL_26;
  }
  int64_t v12 = v15 + 4;
  if (v15 + 4 >= v33) {
    goto LABEL_40;
  }
  unint64_t v16 = *(void *)(v32 + 8 * v12);
  if (v16)
  {
LABEL_26:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v12 << 6);
    goto LABEL_27;
  }
  int64_t v17 = v15 + 5;
  if (v17 >= v33)
  {
LABEL_40:
    swift_release();
    swift_bridgeObjectRelease();
    return 0;
  }
  unint64_t v16 = *(void *)(v32 + 8 * v17);
  if (v16)
  {
    int64_t v12 = v17;
    goto LABEL_26;
  }
  while (1)
  {
    int64_t v12 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v12 >= v33) {
      goto LABEL_40;
    }
    unint64_t v16 = *(void *)(v32 + 8 * v12);
    ++v17;
    if (v16) {
      goto LABEL_26;
    }
  }
LABEL_43:
  __break(1u);
  return result;
}

uint64_t StaticCharacteristicsBag.active.getter()
{
  uint64_t v3 = *v0;
  unsigned __int8 v2 = 3;
  return sub_251B457DC(&v2);
}

uint64_t StaticCharacteristicsBag.airParticulateDensity.getter()
{
  uint64_t v3 = *v0;
  unsigned __int8 v2 = 6;
  return sub_251B46610(&v2);
}

Swift::Int StaticCharacteristicsBag.airParticulateSize.getter()
{
  uint64_t v3 = *v0;
  char v2 = 7;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.double value = 0;
  }
  return v4.value;
}

Swift::Int StaticCharacteristicsBag.airQuality.getter()
{
  uint64_t v3 = *v0;
  char v2 = 8;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.double value = 0;
  }
  return v4.value;
}

unint64_t StaticCharacteristicsBag.batteryLevel.getter()
{
  return sub_251B48CB8(11);
}

unint64_t StaticCharacteristicsBag.brightness.getter()
{
  return sub_251B48CB8(12);
}

uint64_t StaticCharacteristicsBag.cameraNightVision.getter()
{
  uint64_t v3 = *v0;
  unsigned __int8 v2 = 14;
  return sub_251B457DC(&v2);
}

Swift::Int StaticCharacteristicsBag.carbonDioxideDetected.getter()
{
  uint64_t v3 = *v0;
  char v2 = 18;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.double value = 0;
  }
  return v4.value;
}

uint64_t StaticCharacteristicsBag.carbonDioxideLevel.getter()
{
  uint64_t v3 = *v0;
  unsigned __int8 v2 = 19;
  return sub_251B46610(&v2);
}

uint64_t StaticCharacteristicsBag.carbonDioxidePeakLevel.getter()
{
  uint64_t v3 = *v0;
  unsigned __int8 v2 = 20;
  return sub_251B46610(&v2);
}

Swift::Int StaticCharacteristicsBag.carbonMonoxideDetected.getter()
{
  uint64_t v3 = *v0;
  char v2 = 21;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.double value = 0;
  }
  return v4.value;
}

uint64_t StaticCharacteristicsBag.carbonMonoxideLevel.getter()
{
  uint64_t v3 = *v0;
  unsigned __int8 v2 = 22;
  return sub_251B46610(&v2);
}

uint64_t StaticCharacteristicsBag.carbonMonoxidePeakLevel.getter()
{
  uint64_t v3 = *v0;
  unsigned __int8 v2 = 23;
  return sub_251B46610(&v2);
}

Swift::Int StaticCharacteristicsBag.chargingState.getter()
{
  uint64_t v3 = *v0;
  char v2 = 24;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.double value = 0;
  }
  return v4.value;
}

unint64_t StaticCharacteristicsBag.colorTemperature.getter()
{
  return sub_251B48CB8(26);
}

uint64_t StaticCharacteristicsBag.configuredName.getter()
{
  uint64_t v1 = type metadata accessor for StaticCharacteristic();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  Swift::Int_optional v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  if (!*(void *)(v5 + 16)) {
    return 0;
  }
  unint64_t v6 = sub_2519FE568(27);
  if ((v7 & 1) == 0) {
    return 0;
  }
  sub_251B4CAD0(*(void *)(v5 + 56) + *(void *)(v2 + 72) * v6, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
  uint64_t v8 = &v4[*(int *)(v1 + 24)];
  if (v8[16] == 8)
  {
    uint64_t v9 = *(void *)v8;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v9 = 0;
  }
  sub_251B4CA70((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
  return v9;
}

Swift::Int StaticCharacteristicsBag.contactState.getter()
{
  uint64_t v3 = *v0;
  char v2 = 28;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.double value = 0;
  }
  return v4.value;
}

uint64_t StaticCharacteristicsBag.coolingThreshold.getter()
{
  uint64_t v3 = *v0;
  unsigned __int8 v2 = 29;
  return sub_251B46610(&v2);
}

Swift::Int StaticCharacteristicsBag.currentAirPurifierState.getter()
{
  uint64_t v3 = *v0;
  char v2 = 30;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.double value = 0;
  }
  return v4.value;
}

Swift::Int StaticCharacteristicsBag.currentDoorState.getter()
{
  uint64_t v3 = *v0;
  char v2 = 31;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.double value = 0;
  }
  return v4.value;
}

Swift::Int StaticCharacteristicsBag.currentFanState.getter()
{
  uint64_t v3 = *v0;
  char v2 = 32;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.double value = 0;
  }
  return v4.value;
}

Swift::Int StaticCharacteristicsBag.currentHeaterCoolerState.getter()
{
  uint64_t v3 = *v0;
  char v2 = 33;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.double value = 0;
  }
  return v4.value;
}

Swift::Int StaticCharacteristicsBag.currentHeatingCooling.getter()
{
  uint64_t v3 = *v0;
  char v2 = 34;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.double value = 0;
  }
  return v4.value;
}

unint64_t StaticCharacteristicsBag.currentHorizontalTilt.getter()
{
  return sub_251B48CB8(35);
}

Swift::Int StaticCharacteristicsBag.currentHumidifierDehumidifierState.getter()
{
  uint64_t v3 = *v0;
  char v2 = 36;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.double value = 0;
  }
  return v4.value;
}

uint64_t StaticCharacteristicsBag.currentLightLevel.getter()
{
  uint64_t v3 = *v0;
  unsigned __int8 v2 = 37;
  return sub_251B46610(&v2);
}

Swift::Int StaticCharacteristicsBag.currentLockMechanismState.getter()
{
  uint64_t v3 = *v0;
  char v2 = 38;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.double value = 0;
  }
  return v4.value;
}

unint64_t StaticCharacteristicsBag.currentPosition.getter()
{
  return sub_251B48CB8(40);
}

uint64_t StaticCharacteristicsBag.currentRelativeHumidity.getter()
{
  uint64_t v3 = *v0;
  unsigned __int8 v2 = 41;
  return sub_251B46610(&v2);
}

Swift::Int StaticCharacteristicsBag.currentSecuritySystemState.getter()
{
  uint64_t v3 = *v0;
  char v2 = 42;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.double value = 0;
  }
  return v4.value;
}

uint64_t StaticCharacteristicsBag.currentTemperature.getter()
{
  uint64_t v3 = *v0;
  unsigned __int8 v2 = 44;
  return sub_251B46610(&v2);
}

unint64_t StaticCharacteristicsBag.currentTilt.getter()
{
  return sub_251B48CB8(45);
}

unint64_t StaticCharacteristicsBag.currentVerticalTilt.getter()
{
  return sub_251B48CB8(46);
}

Swift::Int StaticCharacteristicsBag.currentVisibilityState.getter()
{
  uint64_t v3 = *v0;
  char v2 = 47;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.double value = 0;
  }
  return v4.value;
}

uint64_t StaticCharacteristicsBag.dehumidifierThreshold.getter()
{
  uint64_t v3 = *v0;
  unsigned __int8 v2 = 48;
  return sub_251B46610(&v2);
}

Swift::Int StaticCharacteristicsBag.filterChangeIndication.getter()
{
  uint64_t v3 = *v0;
  char v2 = 50;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.double value = 0;
  }
  return v4.value;
}

uint64_t StaticCharacteristicsBag.filterLifeLevel.getter()
{
  uint64_t v3 = *v0;
  unsigned __int8 v2 = 51;
  return sub_251B46610(&v2);
}

uint64_t StaticCharacteristicsBag.heatingThreshold.getter()
{
  uint64_t v3 = *v0;
  unsigned __int8 v2 = 55;
  return sub_251B46610(&v2);
}

uint64_t StaticCharacteristicsBag.hue.getter()
{
  uint64_t v3 = *v0;
  unsigned __int8 v2 = 57;
  return sub_251B46610(&v2);
}

uint64_t StaticCharacteristicsBag.humidifierThreshold.getter()
{
  uint64_t v3 = *v0;
  unsigned __int8 v2 = 58;
  return sub_251B46610(&v2);
}

uint64_t StaticCharacteristicsBag.inUse.getter()
{
  uint64_t v3 = *v0;
  unsigned __int8 v2 = 65;
  return sub_251B457DC(&v2);
}

Swift::Int StaticCharacteristicsBag.isConfigured.getter()
{
  uint64_t v3 = *v0;
  char v2 = 70;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.double value = 0;
  }
  return v4.value;
}

Swift::Int StaticCharacteristicsBag.leakDetected.getter()
{
  uint64_t v3 = *v0;
  char v2 = 74;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.double value = 0;
  }
  return v4.value;
}

Swift::Int StaticCharacteristicsBag.lockPhysicalControls.getter()
{
  uint64_t v3 = *v0;
  char v2 = 78;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.double value = 0;
  }
  return v4.value;
}

uint64_t StaticCharacteristicsBag.manufacturer.getter()
{
  uint64_t v1 = type metadata accessor for StaticCharacteristic();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  Swift::Int_optional v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  if (!*(void *)(v5 + 16)) {
    return 0;
  }
  unint64_t v6 = sub_2519FE568(80);
  if ((v7 & 1) == 0) {
    return 0;
  }
  sub_251B4CAD0(*(void *)(v5 + 56) + *(void *)(v2 + 72) * v6, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
  uint64_t v8 = &v4[*(int *)(v1 + 24)];
  if (v8[16] == 8)
  {
    uint64_t v9 = *(void *)v8;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v9 = 0;
  }
  sub_251B4CA70((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
  return v9;
}

uint64_t StaticCharacteristicsBag.model.getter()
{
  uint64_t v1 = type metadata accessor for StaticCharacteristic();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  Swift::Int_optional v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  if (!*(void *)(v5 + 16)) {
    return 0;
  }
  unint64_t v6 = sub_2519FE568(82);
  if ((v7 & 1) == 0) {
    return 0;
  }
  sub_251B4CAD0(*(void *)(v5 + 56) + *(void *)(v2 + 72) * v6, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
  uint64_t v8 = &v4[*(int *)(v1 + 24)];
  if (v8[16] == 8)
  {
    uint64_t v9 = *(void *)v8;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v9 = 0;
  }
  sub_251B4CA70((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
  return v9;
}

uint64_t StaticCharacteristicsBag.motionDetected.getter()
{
  uint64_t v3 = *v0;
  unsigned __int8 v2 = 83;
  return sub_251B457DC(&v2);
}

uint64_t StaticCharacteristicsBag.mute.getter()
{
  uint64_t v3 = *v0;
  unsigned __int8 v2 = 84;
  return sub_251B457DC(&v2);
}

uint64_t StaticCharacteristicsBag.nightVision.getter()
{
  uint64_t v3 = *v0;
  unsigned __int8 v2 = 86;
  return sub_251B457DC(&v2);
}

uint64_t StaticCharacteristicsBag.nitrogenDioxideDensity.getter()
{
  uint64_t v3 = *v0;
  unsigned __int8 v2 = 87;
  return sub_251B46610(&v2);
}

uint64_t StaticCharacteristicsBag.obstructionDetected.getter()
{
  uint64_t v3 = *v0;
  unsigned __int8 v2 = 88;
  return sub_251B457DC(&v2);
}

Swift::Int StaticCharacteristicsBag.occupancyDetected.getter()
{
  uint64_t v3 = *v0;
  char v2 = 89;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.double value = 0;
  }
  return v4.value;
}

uint64_t StaticCharacteristicsBag.outletInUse.getter()
{
  uint64_t v3 = *v0;
  unsigned __int8 v2 = 91;
  return sub_251B457DC(&v2);
}

uint64_t StaticCharacteristicsBag.ozoneDensity.getter()
{
  uint64_t v3 = *v0;
  unsigned __int8 v2 = 94;
  return sub_251B46610(&v2);
}

uint64_t StaticCharacteristicsBag.pM10Density.getter()
{
  uint64_t v3 = *v0;
  unsigned __int8 v2 = 95;
  return sub_251B46610(&v2);
}

uint64_t StaticCharacteristicsBag.pM2_5Density.getter()
{
  uint64_t v3 = *v0;
  unsigned __int8 v2 = 96;
  return sub_251B46610(&v2);
}

Swift::Int StaticCharacteristicsBag.positionState.getter()
{
  uint64_t v3 = *v0;
  char v2 = 102;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.double value = 0;
  }
  return v4.value;
}

uint64_t StaticCharacteristicsBag.powerState.getter()
{
  uint64_t v3 = *v0;
  unsigned __int8 v2 = 105;
  return sub_251B457DC(&v2);
}

Swift::Int StaticCharacteristicsBag.programMode.getter()
{
  uint64_t v3 = *v0;
  char v2 = 106;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.double value = 0;
  }
  return v4.value;
}

unint64_t StaticCharacteristicsBag.remainingDuration.getter()
{
  return sub_251B48CB8(112);
}

Swift::Int StaticCharacteristicsBag.rotationDirection.getter()
{
  uint64_t v3 = *v0;
  char v2 = 114;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.double value = 0;
  }
  return v4.value;
}

uint64_t StaticCharacteristicsBag.rotationSpeed.getter()
{
  uint64_t v3 = *v0;
  unsigned __int8 v2 = 115;
  return sub_251B46610(&v2);
}

unint64_t StaticCharacteristicsBag.setDuration.getter()
{
  return sub_251B48CB8(123);
}

Swift::Int StaticCharacteristicsBag.slatType.getter()
{
  uint64_t v3 = *v0;
  char v2 = 125;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.double value = 0;
  }
  return v4.value;
}

uint64_t StaticCharacteristicsBag.saturation.getter()
{
  uint64_t v3 = *v0;
  unsigned __int8 v2 = 116;
  return sub_251B46610(&v2);
}

Swift::Int StaticCharacteristicsBag.smokeDetected.getter()
{
  uint64_t v3 = *v0;
  char v2 = 127;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.double value = 0;
  }
  return v4.value;
}

uint64_t StaticCharacteristicsBag.statusActive.getter()
{
  uint64_t v3 = *v0;
  unsigned __int8 v2 = -127;
  return sub_251B457DC(&v2);
}

Swift::Int StaticCharacteristicsBag.statusFault.getter()
{
  uint64_t v3 = *v0;
  char v2 = -126;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.double value = 0;
  }
  return v4.value;
}

Swift::Int StaticCharacteristicsBag.statusJammed.getter()
{
  uint64_t v3 = *v0;
  char v2 = -125;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.double value = 0;
  }
  return v4.value;
}

Swift::Int StaticCharacteristicsBag.statusLowBattery.getter()
{
  uint64_t v3 = *v0;
  char v2 = -124;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.double value = 0;
  }
  return v4.value;
}

Swift::Int StaticCharacteristicsBag.statusTampered.getter()
{
  uint64_t v3 = *v0;
  char v2 = -123;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.double value = 0;
  }
  return v4.value;
}

uint64_t StaticCharacteristicsBag.sulphurDioxideDensity.getter()
{
  uint64_t v3 = *v0;
  unsigned __int8 v2 = -121;
  return sub_251B46610(&v2);
}

Swift::Int StaticCharacteristicsBag.swingMode.getter()
{
  uint64_t v3 = *v0;
  char v2 = -110;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.double value = 0;
  }
  return v4.value;
}

Swift::Int StaticCharacteristicsBag.targetAirPurifierState.getter()
{
  uint64_t v3 = *v0;
  char v2 = -109;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.double value = 0;
  }
  return v4.value;
}

Swift::Int StaticCharacteristicsBag.targetDoorState.getter()
{
  uint64_t v3 = *v0;
  char v2 = -107;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.double value = 0;
  }
  return v4.value;
}

Swift::Int StaticCharacteristicsBag.targetFanState.getter()
{
  uint64_t v3 = *v0;
  char v2 = -106;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.double value = 0;
  }
  return v4.value;
}

Swift::Int StaticCharacteristicsBag.targetHeaterCoolerState.getter()
{
  uint64_t v3 = *v0;
  char v2 = -105;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.double value = 0;
  }
  return v4.value;
}

Swift::Int StaticCharacteristicsBag.targetHeatingCoolingMode.getter()
{
  uint64_t v3 = *v0;
  char v2 = -104;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.double value = 0;
  }
  return v4.value;
}

unint64_t StaticCharacteristicsBag.targetHorizontalTilt.getter()
{
  return sub_251B48CB8(153);
}

Swift::Int _s13HomeDataModel24StaticCharacteristicsBagV33humidifierDehumidifierTargetStateSo021HMCharacteristicValuei10HumidifierhJ0VSgvg_0()
{
  uint64_t v3 = *v0;
  char v2 = -102;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.double value = 0;
  }
  return v4.value;
}

Swift::Int StaticCharacteristicsBag.targetLockMechanismState.getter()
{
  uint64_t v3 = *v0;
  char v2 = -100;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.double value = 0;
  }
  return v4.value;
}

unint64_t StaticCharacteristicsBag.targetPosition.getter()
{
  return sub_251B48CB8(158);
}

uint64_t StaticCharacteristicsBag.targetRelativeHumidity.getter()
{
  uint64_t v3 = *v0;
  unsigned __int8 v2 = -97;
  return sub_251B46610(&v2);
}

Swift::Int StaticCharacteristicsBag.targetSecuritySystemState.getter()
{
  uint64_t v3 = *v0;
  char v2 = -96;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.double value = 0;
  }
  return v4.value;
}

uint64_t StaticCharacteristicsBag.targetTemperature.getter()
{
  uint64_t v3 = *v0;
  unsigned __int8 v2 = -94;
  return sub_251B46610(&v2);
}

unint64_t StaticCharacteristicsBag.targetTilt.getter()
{
  return sub_251B48CB8(163);
}

unint64_t StaticCharacteristicsBag.targetVerticalTilt.getter()
{
  return sub_251B48CB8(164);
}

Swift::Int StaticCharacteristicsBag.temperatureUnits.getter()
{
  uint64_t v3 = *v0;
  char v2 = -90;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.double value = 0;
  }
  return v4.value;
}

Swift::Int StaticCharacteristicsBag.valveType.getter()
{
  uint64_t v3 = *v0;
  char v2 = -89;
  Swift::Int_optional v4 = StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v2);
  if (v4.is_nil) {
    v4.double value = 0;
  }
  return v4.value;
}

uint64_t StaticCharacteristicsBag.version.getter()
{
  uint64_t v1 = type metadata accessor for StaticCharacteristic();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  Swift::Int_optional v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  if (!*(void *)(v5 + 16)) {
    return 0;
  }
  unint64_t v6 = sub_2519FE568(168);
  if ((v7 & 1) == 0) {
    return 0;
  }
  sub_251B4CAD0(*(void *)(v5 + 56) + *(void *)(v2 + 72) * v6, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
  uint64_t v8 = &v4[*(int *)(v1 + 24)];
  if (v8[16] == 8)
  {
    uint64_t v9 = *(void *)v8;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v9 = 0;
  }
  sub_251B4CA70((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
  return v9;
}

uint64_t StaticCharacteristicsBag.volatileOrganicCompoundDensity.getter()
{
  uint64_t v3 = *v0;
  unsigned __int8 v2 = -87;
  return sub_251B46610(&v2);
}

unint64_t StaticCharacteristicsBag.volume.getter()
{
  return sub_251B48CB8(170);
}

unint64_t sub_251B48CB8(char a1)
{
  uint64_t v4 = *v1;
  char v3 = a1;
  return (unint64_t)StaticCharacteristicsBag.int(for:)((HomeDataModel::CharacteristicKind)&v3);
}

uint64_t StaticCharacteristicsBag.waterLevel.getter()
{
  uint64_t v3 = *v0;
  unsigned __int8 v2 = -83;
  return sub_251B46610(&v2);
}

uint64_t StaticCharacteristicsBag.init(updateType:from:previousStaticCharacteristicsBag:coverages:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, unint64_t *a5@<X8>)
{
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x270FA5388](updated);
  int64_t v12 = (char *)v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *a3;
  char v14 = sub_251BFE960(a4);
  swift_bridgeObjectRelease();
  if ((v14 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    unint64_t v21 = sub_2519FB260(MEMORY[0x263F8EE78]);

LABEL_13:
    uint64_t result = sub_251B4CA70(a1, type metadata accessor for StateSnapshot.UpdateType);
    goto LABEL_14;
  }
  sub_251B4CAD0(a1, (uint64_t)v12, type metadata accessor for StateSnapshot.UpdateType);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_251B4CA70((uint64_t)v12, type metadata accessor for StateSnapshot.UpdateType);
LABEL_9:
    uint64_t v22 = HMService.supportedCharacteristicKinds.getter();
    swift_bridgeObjectRetain();
    id v23 = a2;
    uint64_t v24 = sub_251B4C1B4(v22, (uint64_t)v23, v13);
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease_n();
    if (*(void *)(v24 + 16))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F1D8);
      uint64_t v25 = sub_251F36700();
    }
    else
    {
      uint64_t v25 = MEMORY[0x263F8EE80];
    }
    v43[0] = v25;
    sub_251B4EB5C(v24, 1, v43);

    swift_bridgeObjectRelease();
    unint64_t v21 = v43[0];
    goto LABEL_13;
  }
  uint64_t v16 = *(void *)v12;
  uint64_t v15 = *((void *)v12 + 1);
  if (!v13)
  {
    sub_251B286EC(*(void *)v12, *((void *)v12 + 1), v12[16]);
    goto LABEL_9;
  }
  switch(v12[16])
  {
    case 1:
      id v37 = a2;
      sub_251B2B004(v16, v15, 1u);
      uint64_t v38 = sub_251B4E12C(v16, v37);

      sub_251B286EC(v16, v15, 1u);
      id v39 = v37;
      unint64_t v21 = sub_251B4B280(v13, v38, v39);

      uint64_t v34 = v16;
      uint64_t v35 = v15;
      unsigned __int8 v36 = 1;
      goto LABEL_19;
    case 2:
      id v31 = a2;
      sub_251B2B004(v16, v15, 2u);
      uint64_t v32 = sub_251B4E9B8(v16, v31);

      sub_251B286EC(v16, v15, 2u);
      id v33 = v31;
      unint64_t v21 = sub_251B4B52C(v13, v32, v33);

      uint64_t v34 = v16;
      uint64_t v35 = v15;
      unsigned __int8 v36 = 2;
      goto LABEL_19;
    case 3:
      id v40 = a2;
      sub_251B2B004(v16, v15, 3u);
      uint64_t v41 = sub_251B4E9B8(v16, v40);

      sub_251B286EC(v16, v15, 3u);
      id v42 = v40;
      unint64_t v21 = sub_251B4B814(v13, v41, v42);

      uint64_t v34 = v16;
      uint64_t v35 = v15;
      unsigned __int8 v36 = 3;
LABEL_19:
      sub_251B286EC(v34, v35, v36);
      sub_251B4CA70(a1, type metadata accessor for StateSnapshot.UpdateType);
      goto LABEL_20;
    case 4:
      id v27 = a2;
      uint64_t v28 = swift_bridgeObjectRetain();
      uint64_t v29 = sub_251B4E9B8(v28, v27);
      swift_bridgeObjectRelease();

      id v30 = v27;
      swift_bridgeObjectRetain();
      unint64_t v21 = sub_251B4BB0C(v13, v29, v15, v30);
      swift_bridgeObjectRelease();

      sub_251B4CA70(a1, type metadata accessor for StateSnapshot.UpdateType);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t result = sub_251B286EC(v16, v15, 4u);
      break;
    default:
      id v17 = a2;
      sub_251B2B004(v16, v15, 0);
      unint64_t v18 = sub_251B4D38C(v16, v17);

      id v19 = v17;
      uint64_t v20 = swift_bridgeObjectRetain();
      unint64_t v21 = sub_251B4AF44(v20, v18, v19, v13);

      swift_bridgeObjectRelease();
      sub_251B286EC(v16, v15, 0);
      sub_251B4CA70(a1, type metadata accessor for StateSnapshot.UpdateType);

LABEL_20:
      swift_release();
      uint64_t result = swift_bridgeObjectRelease();
      break;
  }
LABEL_14:
  *a5 = v21;
  return result;
}

uint64_t sub_251B49254@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F108);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v21 = a1;
  sub_251A1A568(0, (unint64_t *)&qword_26B21F170);
  id v9 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F140);
  if (swift_dynamicCast())
  {
    sub_251A1A444(v19, (uint64_t)v22);
    uint64_t v10 = v23;
    uint64_t v11 = v24;
    __swift_project_boxed_opaque_existential_1(v22, v23);
    sub_251BC59E8(v10, v11, a3);
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v22);
  }
  else
  {
    uint64_t v20 = 0;
    memset(v19, 0, sizeof(v19));
    sub_251A1B064((uint64_t)v19, &qword_269B9E658);
    sub_251A1B128(a2, (uint64_t)v8, &qword_26B21F108);
    uint64_t v13 = type metadata accessor for StaticCharacteristic();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v8, 1, v13) == 1)
    {
      uint64_t result = sub_251A1B064((uint64_t)v8, &qword_26B21F108);
      *(void *)(a3 + 8) = 0;
      *(void *)(a3 + 16) = 0;
      *(void *)a3 = 0;
      *(unsigned char *)(a3 + 24) = -1;
    }
    else
    {
      char v14 = &v8[*(int *)(v13 + 32)];
      uint64_t v15 = *(void *)v14;
      uint64_t v16 = *((void *)v14 + 1);
      uint64_t v17 = *((void *)v14 + 2);
      char v18 = v14[24];
      sub_251A1A550(*(void *)v14, v16, v17, v18);
      uint64_t result = sub_251B4CA70((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
      *(void *)a3 = v15;
      *(void *)(a3 + 8) = v16;
      *(void *)(a3 + 16) = v17;
      *(unsigned char *)(a3 + 24) = v18;
    }
  }
  return result;
}

uint64_t sub_251B49454@<X0>(uint64_t *a1@<X0>, void **a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F108);
  MEMORY[0x270FA5388](v10 - 8);
  int64_t v12 = (char *)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *a1;
  char v14 = *a2;
  if (objc_msgSend(v14, sel_value))
  {
    sub_251F36240();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v40, 0, sizeof(v40));
  }
  id v15 = objc_msgSend(v14, sel_characteristicType);
  uint64_t v16 = sub_251F356F0();
  char v18 = v17;

  v19._countAndFlagsBits = v16;
  v19._object = v18;
  CharacteristicKind.init(rawValue:)(v19);
  if (*(void *)(a4 + 16)
    && (v36 != 174 ? (uint64_t v20 = v36) : (uint64_t v20 = 0),
        unint64_t v21 = sub_2519FE568(v20),
        (v22 & 1) != 0))
  {
    unint64_t v23 = v21;
    uint64_t v24 = *(void *)(a4 + 56);
    uint64_t v25 = type metadata accessor for StaticCharacteristic();
    uint64_t v26 = *(void *)(v25 - 8);
    sub_251B4CAD0(v24 + *(void *)(v26 + 72) * v23, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v12, 0, 1, v25);
  }
  else
  {
    uint64_t v27 = type metadata accessor for StaticCharacteristic();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v12, 1, 1, v27);
  }
  sub_251B49254(v14, (uint64_t)v12, (uint64_t)&v36);
  sub_251A1B064((uint64_t)v12, &qword_26B21F108);
  uint64_t v28 = v36;
  uint64_t v29 = v37;
  uint64_t v30 = v38;
  char v31 = v39;
  v34[0] = v36;
  v34[1] = v37;
  v34[2] = v38;
  char v35 = v39;
  uint64_t v32 = sub_251B4AA08(v14, (uint64_t)v40, a3, v13, (uint64_t)v34);
  sub_251B4F22C(v28, v29, v30, v31);
  uint64_t result = sub_251A1B064((uint64_t)v40, &qword_26B21E190);
  *a5 = v32;
  return result;
}

uint64_t sub_251B496F0@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X2>, unsigned char *a3@<X8>)
{
  uint64_t v71 = a3;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F108);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v59 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v56 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v56 - v12;
  uint64_t v14 = type metadata accessor for StaticCharacteristic();
  id v15 = *(void **)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v60 = (uint64_t)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v56 - v19;
  uint64_t v21 = MEMORY[0x270FA5388](v18);
  uint64_t v62 = (uint64_t)&v56 - v22;
  MEMORY[0x270FA5388](v21);
  uint64_t v61 = (uint64_t)&v56 - v23;
  unsigned int v63 = *a1;
  LOBYTE(v70[0]) = v63;
  uint64_t v24 = HMService.subscript.getter();
  if (!v24) {
    goto LABEL_12;
  }
  uint64_t v25 = v24;
  if (objc_msgSend(v24, sel_value))
  {
    sub_251F36240();
    swift_unknownObjectRelease();
    uint64_t v58 = v3;
    if (!a2) {
      goto LABEL_9;
    }
  }
  else
  {
    memset(v70, 0, sizeof(v70));
    uint64_t v58 = v3;
    if (!a2) {
      goto LABEL_9;
    }
  }
  if (*(void *)(a2 + 16))
  {
    unint64_t v26 = sub_2519FE568(v63);
    if (v27)
    {
      sub_251B4CAD0(*(void *)(a2 + 56) + v15[9] * v26, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
      uint64_t v28 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v15[7];
      v28(v11, 0, 1, v14);
      goto LABEL_10;
    }
  }
LABEL_9:
  uint64_t v28 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v15[7];
  v28(v11, 1, 1, v14);
LABEL_10:
  sub_251B49254(v25, (uint64_t)v11, (uint64_t)&v67);
  sub_251A1B064((uint64_t)v11, &qword_26B21F108);
  long long v64 = v67;
  uint64_t v65 = v68;
  char v66 = v69;
  id v29 = v25;
  StaticCharacteristic.init(from:value:loadingState:)(v29, (uint64_t)v70, (uint64_t)&v64, (uint64_t)v13);
  uint64_t v30 = (unsigned int (*)(char *, uint64_t, uint64_t))v15[6];
  if (v30(v13, 1, v14) == 1)
  {

    sub_251A1B064((uint64_t)v13, &qword_26B21F108);
LABEL_12:
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F0D8);
    return (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v71, 1, 1, v31);
  }
  uint64_t v33 = (uint64_t)v13;
  uint64_t v34 = v61;
  sub_251B4C984(v33, v61);
  id v57 = v29;
  if (a2 && *(void *)(a2 + 16) && (unint64_t v35 = sub_2519FE568(v63), (v36 & 1) != 0))
  {
    sub_251B4CAD0(*(void *)(a2 + 56) + v15[9] * v35, (uint64_t)v59, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
    uint64_t v37 = 0;
  }
  else
  {
    uint64_t v37 = 1;
  }
  uint64_t v38 = (uint64_t)v59;
  v28(v59, v37, 1, v14);
  sub_251B4CAD0(v34, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
  unsigned int v39 = v30((char *)v38, 1, v14);
  uint64_t v40 = v60;
  if (v39 == 1)
  {
    uint64_t v41 = v62;
    sub_251B4C984((uint64_t)v20, v62);
    sub_251A1B064(v38, &qword_26B21F108);
  }
  else
  {
    sub_251B4CA70((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
    uint64_t v41 = v62;
    sub_251B4C984(v38, v62);
  }
  id v42 = v71;
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F0D8);
  uint64_t v44 = (uint64_t)&v42[*(int *)(v43 + 48)];
  *id v42 = v63;
  int v45 = *(unsigned __int8 *)(v41 + *(int *)(v14 + 32) + 24);
  sub_251B4CAD0(v41, v40, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
  if (v45 == 1)
  {
    sub_251B4CA70(v40, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);

    uint64_t v46 = v34;
  }
  else
  {
    uint64_t v47 = v40 + *(int *)(v14 + 32);
    uint64_t v48 = *(void *)v47;
    uint64_t v49 = *(void *)(v47 + 8);
    uint64_t v50 = *(void *)(v47 + 16);
    char v51 = *(unsigned char *)(v47 + 24);
    switch(v51)
    {
      case 1:
        uint64_t v52 = *(void *)v47;
        uint64_t v53 = *(void *)(v47 + 8);
        uint64_t v54 = *(void *)(v47 + 16);
        char v55 = 1;
        goto LABEL_33;
      case 2:
        swift_bridgeObjectRetain_n();
        uint64_t v52 = v48;
        uint64_t v53 = v49;
        uint64_t v54 = v50;
        char v55 = 2;
        goto LABEL_33;
      case 3:
        if (v50 | v49 | v48)
        {
          if (v48 != 1 || v50 | v49)
          {
            sub_251A1A5A4(2, 0, 0, 3);
            sub_251A1A5A4(2, 0, 0, 3);

            sub_251A1A5A4(2, 0, 0, 3);
            sub_251B4CA70(v60, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
            uint64_t v46 = v61;
            uint64_t v41 = v62;
            break;
          }
          uint64_t v52 = 1;
        }
        else
        {
          uint64_t v52 = 0;
        }
        uint64_t v53 = 0;
        uint64_t v54 = 0;
        char v55 = 3;
LABEL_33:
        sub_251A1A5A4(v52, v53, v54, v55);
        sub_251A1A5A4(2, 0, 0, 3);

        sub_251A1A5A4(v48, v49, v50, v51);
        sub_251B4CA70(v60, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
        uint64_t v41 = v61;
        uint64_t v46 = v62;
        break;
      default:
        uint64_t v52 = *(void *)v47;
        uint64_t v53 = *(void *)(v47 + 8);
        uint64_t v54 = *(void *)(v47 + 16);
        char v55 = 0;
        goto LABEL_33;
    }
  }
  sub_251B4CA70(v46, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
  sub_251B4C984(v41, v44);
  return (*(uint64_t (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v42, 0, 1, v43);
}

HomeDataModel::StaticCharacteristicsBag __swiftcall StaticCharacteristicsBag.copyReplacing(characteristicValuesDictionary:)(Swift::OpaquePointer_optional characteristicValuesDictionary)
{
  unsigned __int8 v2 = v1;
  if (!characteristicValuesDictionary.value._rawValue) {
    characteristicValuesDictionary.value._rawValue = (void *)swift_bridgeObjectRetain();
  }
  *unsigned __int8 v2 = characteristicValuesDictionary.value._rawValue;
  return (HomeDataModel::StaticCharacteristicsBag)swift_bridgeObjectRetain();
}

uint64_t StaticCharacteristicsBag.copy(mappingCharacteristics:addingCharacteristics:)@<X0>(void (*a1)(uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v9 = type metadata accessor for StaticCharacteristic();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  id v15 = (char *)v36 - v14;
  uint64_t v16 = *v4;
  if (a1)
  {
    swift_bridgeObjectRetain();
    sub_251AE9658((uint64_t)a1);
    uint64_t v17 = sub_251B4A110(a1, a2, (uint64_t)v16);
    swift_bridgeObjectRelease();
    uint64_t result = sub_251A27C7C((uint64_t)a1);
    uint64_t v16 = (void *)v17;
    if (!a3) {
      goto LABEL_21;
    }
  }
  else
  {
    uint64_t result = swift_bridgeObjectRetain();
    if (!a3)
    {
LABEL_21:
      *a4 = v16;
      return result;
    }
  }
  uint64_t result = a3;
  uint64_t v19 = *(void *)(a3 + 16);
  if (!v19) {
    goto LABEL_21;
  }
  uint64_t v20 = *(int *)(v9 + 20);
  uint64_t v37 = a4;
  uint64_t v38 = v20;
  uint64_t v21 = result + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
  uint64_t v22 = *(void *)(v10 + 72);
  v36[1] = result;
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_251B4CAD0(v21, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
    uint64_t v23 = v15[v38];
    sub_251B4C984((uint64_t)v15, (uint64_t)v13);
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unsigned int v39 = v16;
    unint64_t v26 = sub_2519FE568(v23);
    uint64_t v27 = v16[2];
    BOOL v28 = (v25 & 1) == 0;
    uint64_t v29 = v27 + v28;
    if (__OFADD__(v27, v28)) {
      break;
    }
    char v30 = v25;
    if (v16[3] >= v29)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v16 = v39;
        if (v25) {
          goto LABEL_7;
        }
      }
      else
      {
        sub_251A154F8();
        uint64_t v16 = v39;
        if (v30) {
          goto LABEL_7;
        }
      }
    }
    else
    {
      sub_251A07E4C(v29, isUniquelyReferenced_nonNull_native);
      unint64_t v31 = sub_2519FE568(v23);
      if ((v30 & 1) != (v32 & 1)) {
        goto LABEL_24;
      }
      unint64_t v26 = v31;
      uint64_t v16 = v39;
      if (v30)
      {
LABEL_7:
        sub_251B4EF84((uint64_t)v13, v16[7] + v26 * v22);
        goto LABEL_8;
      }
    }
    v16[(v26 >> 6) + 8] |= 1 << v26;
    *(unsigned char *)(v16[6] + v26) = v23;
    sub_251B4C984((uint64_t)v13, v16[7] + v26 * v22);
    uint64_t v33 = v16[2];
    BOOL v34 = __OFADD__(v33, 1);
    uint64_t v35 = v33 + 1;
    if (v34) {
      goto LABEL_23;
    }
    v16[2] = v35;
LABEL_8:
    swift_bridgeObjectRelease();
    v21 += v22;
    if (!--v19)
    {
      uint64_t result = swift_bridgeObjectRelease();
      a4 = v37;
      goto LABEL_21;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_251F36BA0();
  __break(1u);
  return result;
}

uint64_t sub_251B4A110(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v59 = a1;
  uint64_t v60 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F108);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v58 = (char *)v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = type metadata accessor for StaticCharacteristic();
  uint64_t v7 = *(void *)(v55 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v55);
  uint64_t v53 = (uint64_t)v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v50 = (uint64_t)v48 - v10;
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F0B0);
  uint64_t v11 = MEMORY[0x270FA5388](v62);
  uint64_t v49 = (char *)v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  unsigned int v63 = (char *)v48 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v56 = (char *)v48 - v15;
  uint64_t v65 = MEMORY[0x263F8EE80];
  uint64_t v16 = *(void *)(a3 + 64);
  uint64_t v52 = a3 + 64;
  uint64_t v17 = -1 << *(unsigned char *)(a3 + 32);
  v48[1] = ~v17;
  if (-v17 < 64) {
    uint64_t v18 = ~(-1 << -(char)v17);
  }
  else {
    uint64_t v18 = -1;
  }
  unint64_t v19 = v18 & v16;
  int64_t v51 = (unint64_t)(63 - v17) >> 6;
  uint64_t v57 = v7;
  uint64_t v54 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  uint64_t v61 = a3;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v21 = 0;
  while (1)
  {
    if (v19)
    {
      uint64_t v22 = (v19 - 1) & v19;
      unint64_t v23 = __clz(__rbit64(v19)) | (v21 << 6);
      int64_t v24 = v21;
      goto LABEL_22;
    }
    int64_t v24 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    if (v24 >= v51) {
      goto LABEL_42;
    }
    unint64_t v25 = *(void *)(v52 + 8 * v24);
    if (!v25) {
      break;
    }
LABEL_21:
    uint64_t v22 = (v25 - 1) & v25;
    unint64_t v23 = __clz(__rbit64(v25)) + (v24 << 6);
LABEL_22:
    uint64_t v27 = v62;
    char v28 = *(unsigned char *)(*(void *)(v61 + 48) + v23);
    uint64_t v29 = v56;
    uint64_t v30 = *(void *)(v57 + 72);
    sub_251B4CAD0(*(void *)(v61 + 56) + v30 * v23, (uint64_t)&v56[*(int *)(v62 + 48)], (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
    *uint64_t v29 = v28;
    unint64_t v31 = v63;
    sub_251A4ECF0((uint64_t)v29, (uint64_t)v63, &qword_26B21F0B0);
    uint64_t v32 = (uint64_t)&v31[*(int *)(v27 + 48)];
    uint64_t v33 = (uint64_t)v58;
    v59(v32);
    if (v3)
    {
      sub_251A1B064((uint64_t)v63, &qword_26B21F0B0);
      swift_release();
      return sub_251A1E630();
    }
    if ((*v54)(v33, 1, v55) == 1)
    {
      sub_251A1B064((uint64_t)v63, &qword_26B21F0B0);
      uint64_t result = sub_251A1B064(v33, &qword_26B21F108);
    }
    else
    {
      uint64_t v34 = v50;
      sub_251B4C984(v33, v50);
      uint64_t v35 = (uint64_t)&v49[*(int *)(v62 + 48)];
      char v36 = *v63;
      unsigned char *v49 = *v63;
      sub_251B4C984(v32, v35);
      sub_251B4C984(v34, v53);
      uint64_t v37 = v65;
      unint64_t v38 = *(void *)(v65 + 16);
      if (*(void *)(v65 + 24) <= v38)
      {
        sub_251A07E4C(v38 + 1, 1);
        uint64_t v37 = v65;
      }
      sub_251F36CA0();
      char v64 = v36;
      CharacteristicKind.rawValue.getter();
      sub_251F357B0();
      swift_bridgeObjectRelease();
      uint64_t result = sub_251F36D00();
      uint64_t v39 = v37 + 64;
      uint64_t v40 = -1 << *(unsigned char *)(v37 + 32);
      unint64_t v41 = result & ~v40;
      unint64_t v42 = v41 >> 6;
      if (((-1 << v41) & ~*(void *)(v37 + 64 + 8 * (v41 >> 6))) != 0)
      {
        unint64_t v43 = __clz(__rbit64((-1 << v41) & ~*(void *)(v37 + 64 + 8 * (v41 >> 6)))) | v41 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v44 = 0;
        unint64_t v45 = (unint64_t)(63 - v40) >> 6;
        do
        {
          if (++v42 == v45 && (v44 & 1) != 0)
          {
            __break(1u);
            goto LABEL_43;
          }
          BOOL v46 = v42 == v45;
          if (v42 == v45) {
            unint64_t v42 = 0;
          }
          v44 |= v46;
          uint64_t v47 = *(void *)(v39 + 8 * v42);
        }
        while (v47 == -1);
        unint64_t v43 = __clz(__rbit64(~v47)) + (v42 << 6);
      }
      *(void *)(v39 + ((v43 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v43;
      *(unsigned char *)(*(void *)(v37 + 48) + v43) = v36;
      sub_251B4C984(v53, *(void *)(v37 + 56) + v43 * v30);
      ++*(void *)(v37 + 16);
      uint64_t result = sub_251B4CA70(v35, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
    }
    int64_t v21 = v24;
    unint64_t v19 = v22;
  }
  int64_t v26 = v21 + 2;
  if (v21 + 2 >= v51) {
    goto LABEL_42;
  }
  unint64_t v25 = *(void *)(v52 + 8 * v26);
  if (v25) {
    goto LABEL_20;
  }
  int64_t v26 = v21 + 3;
  if (v21 + 3 >= v51) {
    goto LABEL_42;
  }
  unint64_t v25 = *(void *)(v52 + 8 * v26);
  if (v25) {
    goto LABEL_20;
  }
  int64_t v26 = v21 + 4;
  if (v21 + 4 >= v51) {
    goto LABEL_42;
  }
  unint64_t v25 = *(void *)(v52 + 8 * v26);
  if (v25) {
    goto LABEL_20;
  }
  int64_t v26 = v21 + 5;
  if (v21 + 5 >= v51)
  {
LABEL_42:
    sub_251A1E630();
    return v65;
  }
  unint64_t v25 = *(void *)(v52 + 8 * v26);
  if (v25)
  {
LABEL_20:
    int64_t v24 = v26;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v24 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v24 >= v51) {
      goto LABEL_42;
    }
    unint64_t v25 = *(void *)(v52 + 8 * v24);
    ++v26;
    if (v25) {
      goto LABEL_21;
    }
  }
LABEL_44:
  __break(1u);
  return result;
}

unint64_t sub_251B4A768()
{
  unint64_t result = qword_269B9E5F0;
  if (!qword_269B9E5F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E5F0);
  }
  return result;
}

unint64_t sub_251B4A7BC()
{
  unint64_t result = qword_269B9E600;
  if (!qword_269B9E600)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B9E5F8);
    sub_251B4A854();
    sub_251B4A994(&qword_269B9E610);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E600);
  }
  return result;
}

unint64_t sub_251B4A854()
{
  unint64_t result = qword_269B9E608;
  if (!qword_269B9E608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E608);
  }
  return result;
}

unint64_t sub_251B4A8A8()
{
  unint64_t result = qword_269B9E620;
  if (!qword_269B9E620)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B9E5F8);
    sub_251B4A940();
    sub_251B4A994(&qword_269B9E630);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E620);
  }
  return result;
}

unint64_t sub_251B4A940()
{
  unint64_t result = qword_269B9E628;
  if (!qword_269B9E628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E628);
  }
  return result;
}

uint64_t sub_251B4A994(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for StaticCharacteristic();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_251B4A9D8()
{
  return sub_251F34D70() & 1;
}

uint64_t sub_251B4AA08(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v58 = a4;
  uint64_t v56 = a2;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F108);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = &v52[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = type metadata accessor for StaticCharacteristic();
  uint64_t v57 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = &v52[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = &v52[-v15];
  uint64_t v17 = *(void *)a5;
  uint64_t v18 = *(void *)(a5 + 8);
  uint64_t v54 = *(void *)(a5 + 16);
  uint64_t v55 = v17;
  int v53 = *(unsigned __int8 *)(a5 + 24);
  id v19 = objc_msgSend(a1, sel_service);
  if (!v19) {
    goto LABEL_13;
  }
  uint64_t v20 = v19;
  sub_251A1A568(0, (unint64_t *)&qword_26B21F180);
  id v21 = a3;
  id v22 = v20;
  char v23 = sub_251F36120();

  if ((v23 & 1) == 0) {
    goto LABEL_13;
  }
  uint64_t v24 = HMService.supportedCharacteristicKinds.getter();
  id v25 = objc_msgSend(a1, sel_characteristicType);
  uint64_t v26 = sub_251F356F0();
  char v28 = v27;

  v29._countAndFlagsBits = v26;
  v29._object = v28;
  CharacteristicKind.init(rawValue:)(v29);
  uint64_t v30 = LOBYTE(v61[0]) == 174 ? 0 : LOBYTE(v61[0]);
  char v31 = sub_251DB3DEC(v30, v24);
  swift_bridgeObjectRelease();
  if (v31)
  {
    sub_251A1B128(v56, (uint64_t)v61, &qword_26B21E190);
    uint64_t v33 = v54;
    uint64_t v32 = v55;
    v59[0] = v55;
    v59[1] = v18;
    v59[2] = v54;
    char v34 = v53;
    char v60 = v53;
    uint64_t v35 = v58;
    swift_bridgeObjectRetain();
    id v36 = a1;
    sub_251B4F240(v32, v18, v33, v34);
    StaticCharacteristic.init(from:value:loadingState:)(v36, (uint64_t)v61, (uint64_t)v59, (uint64_t)v10);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v57 + 48))(v10, 1, v11) == 1)
    {
      sub_251A1B064((uint64_t)v10, &qword_26B21F108);
      if (objc_msgSend(v36, sel_value))
      {
        sub_251F36240();
        swift_unknownObjectRelease();
        sub_251A1B064((uint64_t)v61, &qword_26B21E190);
        if (qword_26B21F2C0 != -1) {
          swift_once();
        }
        uint64_t v37 = sub_251F350A0();
        __swift_project_value_buffer(v37, (uint64_t)qword_26B21F290);
        id v38 = v36;
        uint64_t v39 = sub_251F35080();
        os_log_type_t v40 = sub_251F35FB0();
        if (os_log_type_enabled(v39, v40))
        {
          unint64_t v41 = (uint8_t *)swift_slowAlloc();
          unint64_t v42 = (void *)swift_slowAlloc();
          *(_DWORD *)unint64_t v41 = 138412290;
          *(void *)&v61[0] = v38;
          id v43 = v38;
          uint64_t v35 = v58;
          sub_251F361D0();
          *unint64_t v42 = v38;

          _os_log_impl(&dword_2519F3000, v39, v40, "updatedCharacteristicValuesDictionary() unable to slurp value for characteristic %@", v41, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
          swift_arrayDestroy();
          MEMORY[0x2533AC760](v42, -1, -1);
          MEMORY[0x2533AC760](v41, -1, -1);
        }
        else
        {
        }
      }
      else
      {
        memset(v61, 0, sizeof(v61));
        sub_251A1B064((uint64_t)v61, &qword_26B21E190);
      }
    }
    else
    {
      sub_251B4C984((uint64_t)v10, (uint64_t)v16);
      id v45 = objc_msgSend(v36, sel_characteristicType);
      uint64_t v46 = sub_251F356F0();
      uint64_t v48 = v47;

      v49._countAndFlagsBits = v46;
      v49._object = v48;
      CharacteristicKind.init(rawValue:)(v49);
      if (LOBYTE(v61[0]) == 174) {
        uint64_t v50 = 0;
      }
      else {
        uint64_t v50 = LOBYTE(v61[0]);
      }
      sub_251B4CAD0((uint64_t)v16, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&v61[0] = v35;
      sub_251A0F2D8((uint64_t)v14, v50, isUniquelyReferenced_nonNull_native);
      uint64_t v35 = *(void *)&v61[0];
      swift_bridgeObjectRelease();
      sub_251B4CA70((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
    }
  }
  else
  {
LABEL_13:
    uint64_t v35 = v58;
    swift_bridgeObjectRetain();
  }
  return v35;
}

uint64_t sub_251B4AF44(uint64_t a1, unint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v5 = v4;
  unint64_t v7 = a2;
  uint64_t v29 = a1;
  if ((a2 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_251F362B0();
    sub_251A1A568(0, (unint64_t *)&qword_26B21F170);
    sub_251AD2B44();
    uint64_t result = sub_251F35E90();
    unint64_t v7 = (unint64_t)v28[1];
    id v25 = v28[2];
    uint64_t v9 = v28[3];
    uint64_t v10 = (char *)v28[4];
    unint64_t v11 = (unint64_t)v28[5];
  }
  else
  {
    uint64_t v12 = -1 << *(unsigned char *)(a2 + 32);
    id v25 = (void *)(a2 + 56);
    uint64_t v13 = ~v12;
    uint64_t v14 = -v12;
    if (v14 < 64) {
      uint64_t v15 = ~(-1 << v14);
    }
    else {
      uint64_t v15 = -1;
    }
    unint64_t v11 = v15 & *(void *)(a2 + 56);
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v9 = (void *)v13;
    uint64_t v10 = 0;
  }
  int64_t v24 = ((unint64_t)v9 + 64) >> 6;
  if ((v7 & 0x8000000000000000) == 0) {
    goto LABEL_11;
  }
LABEL_8:
  uint64_t v16 = sub_251F36340();
  if (!v16) {
    goto LABEL_35;
  }
  uint64_t v27 = v16;
  sub_251A1A568(0, (unint64_t *)&qword_26B21F170);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  id v17 = v28[0];
  swift_unknownObjectRelease();
  int64_t v18 = (int64_t)v10;
  uint64_t v19 = v11;
  if (!v17) {
    goto LABEL_35;
  }
  while (1)
  {
    v28[0] = v17;
    sub_251B49454(&v29, v28, a3, a4, &v27);

    if (v5)
    {
      sub_251A1E630();
      return swift_bridgeObjectRelease();
    }
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v29 = v27;
    uint64_t v10 = (char *)v18;
    unint64_t v11 = v19;
    if ((v7 & 0x8000000000000000) != 0) {
      goto LABEL_8;
    }
LABEL_11:
    if (!v11) {
      break;
    }
    uint64_t v19 = (v11 - 1) & v11;
    unint64_t v20 = __clz(__rbit64(v11)) | ((void)v10 << 6);
    int64_t v18 = (int64_t)v10;
LABEL_24:
    id v17 = *(id *)(*(void *)(v7 + 48) + 8 * v20);
    if (!v17) {
      goto LABEL_35;
    }
  }
  int64_t v18 = (int64_t)(v10 + 1);
  if (__OFADD__(v10, 1))
  {
    __break(1u);
    return result;
  }
  if (v18 >= v24) {
    goto LABEL_35;
  }
  unint64_t v21 = v25[v18];
  if (v21)
  {
LABEL_23:
    uint64_t v19 = (v21 - 1) & v21;
    unint64_t v20 = __clz(__rbit64(v21)) + (v18 << 6);
    goto LABEL_24;
  }
  int64_t v22 = (int64_t)(v10 + 2);
  if ((uint64_t)(v10 + 2) >= v24) {
    goto LABEL_35;
  }
  unint64_t v21 = v25[v22];
  if (v21) {
    goto LABEL_22;
  }
  int64_t v22 = (int64_t)(v10 + 3);
  if ((uint64_t)(v10 + 3) >= v24) {
    goto LABEL_35;
  }
  unint64_t v21 = v25[v22];
  if (v21) {
    goto LABEL_22;
  }
  int64_t v22 = (int64_t)(v10 + 4);
  if ((uint64_t)(v10 + 4) >= v24) {
    goto LABEL_35;
  }
  unint64_t v21 = v25[v22];
  if (v21)
  {
LABEL_22:
    int64_t v18 = v22;
    goto LABEL_23;
  }
  int64_t v18 = (int64_t)(v10 + 5);
  if ((uint64_t)(v10 + 5) >= v24) {
    goto LABEL_35;
  }
  unint64_t v21 = v25[v18];
  if (v21) {
    goto LABEL_23;
  }
  char v23 = v10 + 6;
  while ((char *)v24 != v23)
  {
    unint64_t v21 = v25[(void)v23++];
    if (v21)
    {
      int64_t v18 = (int64_t)(v23 - 1);
      goto LABEL_23;
    }
  }
LABEL_35:
  sub_251A1E630();
  return v29;
}

uint64_t sub_251B4B280(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v24 = a2 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a2 + 64);
  int64_t v25 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v30 = a2;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v12 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v13 = v12 | (v9 << 6);
      goto LABEL_24;
    }
    int64_t v14 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v14 >= v25) {
      goto LABEL_26;
    }
    unint64_t v15 = *(void *)(v24 + 8 * v14);
    ++v9;
    if (!v15)
    {
      int64_t v9 = v14 + 1;
      if (v14 + 1 >= v25) {
        goto LABEL_26;
      }
      unint64_t v15 = *(void *)(v24 + 8 * v9);
      if (!v15)
      {
        int64_t v9 = v14 + 2;
        if (v14 + 2 >= v25) {
          goto LABEL_26;
        }
        unint64_t v15 = *(void *)(v24 + 8 * v9);
        if (!v15)
        {
          int64_t v9 = v14 + 3;
          if (v14 + 3 >= v25) {
            goto LABEL_26;
          }
          unint64_t v15 = *(void *)(v24 + 8 * v9);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v9 << 6);
LABEL_24:
    id v17 = *(void **)(*(void *)(v30 + 48) + 8 * v13);
    uint64_t v18 = *(void *)(v30 + 56) + 32 * v13;
    uint64_t v19 = *(void *)v18;
    uint64_t v20 = *(void *)(v18 + 8);
    uint64_t v21 = *(void *)(v18 + 16);
    char v22 = *(unsigned char *)(v18 + 24);
    id v23 = v17;
    sub_251A1A550(v19, v20, v21, v22);
    if (objc_msgSend(v23, sel_value))
    {
      sub_251F36240();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v29, 0, sizeof(v29));
    }
    id v10 = v23;
    sub_251A1A550(v19, v20, v21, v22);

    v27[0] = v19;
    v27[1] = v20;
    void v27[2] = v21;
    char v28 = v22;
    uint64_t v11 = sub_251B4AA08(v10, (uint64_t)v29, a3, a1, (uint64_t)v27);
    sub_251A1A5A4(v19, v20, v21, v22);
    sub_251A1B064((uint64_t)v29, &qword_26B21E190);

    sub_251A1A5A4(v19, v20, v21, v22);
    uint64_t result = swift_bridgeObjectRelease();
    a1 = v11;
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v25)
  {
LABEL_26:
    swift_release();
    return a1;
  }
  unint64_t v15 = *(void *)(v24 + 8 * v16);
  if (v15)
  {
    int64_t v9 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v9 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v9 >= v25) {
      goto LABEL_26;
    }
    unint64_t v15 = *(void *)(v24 + 8 * v9);
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_251B4B52C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v29 = a3;
  uint64_t v23 = a2 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a2 + 64);
  int64_t v24 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v12 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v13 = v12 | (v8 << 6);
      goto LABEL_25;
    }
    int64_t v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v14 >= v24) {
      goto LABEL_31;
    }
    unint64_t v15 = *(void *)(v23 + 8 * v14);
    ++v8;
    if (!v15)
    {
      int64_t v8 = v14 + 1;
      if (v14 + 1 >= v24) {
        goto LABEL_31;
      }
      unint64_t v15 = *(void *)(v23 + 8 * v8);
      if (!v15)
      {
        int64_t v8 = v14 + 2;
        if (v14 + 2 >= v24) {
          goto LABEL_31;
        }
        unint64_t v15 = *(void *)(v23 + 8 * v8);
        if (!v15)
        {
          int64_t v8 = v14 + 3;
          if (v14 + 3 >= v24) {
            goto LABEL_31;
          }
          unint64_t v15 = *(void *)(v23 + 8 * v8);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_24:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v8 << 6);
LABEL_25:
    id v17 = *(void **)(*(void *)(a2 + 48) + 8 * v13);
    uint64_t v18 = *(void *)(a2 + 56) + 24 * v13;
    uint64_t v19 = *(void *)v18;
    unint64_t v20 = *(void *)(v18 + 8);
    char v21 = *(unsigned char *)(v18 + 16);
    switch(v21)
    {
      case 1:
        uint64_t v9 = MEMORY[0x263F8D538];
        goto LABEL_5;
      case 2:
        uint64_t v9 = MEMORY[0x263F8D6C8];
LABEL_5:
        *((void *)&v28 + 1) = v9;
        *(void *)&long long v27 = v19;
        break;
      case 3:
        *((void *)&v28 + 1) = MEMORY[0x263F8D310];
        *(void *)&long long v27 = v19;
        *((void *)&v27 + 1) = v20;
        swift_bridgeObjectRetain_n();
        break;
      case 4:
        *((void *)&v28 + 1) = MEMORY[0x263F06F70];
        *(void *)&long long v27 = v19;
        *((void *)&v27 + 1) = v20;
        sub_251A1A894(v19, v20);
        sub_251A1A894(v19, v20);
        break;
      case 5:
        long long v27 = 0u;
        long long v28 = 0u;
        break;
      default:
        *((void *)&v28 + 1) = MEMORY[0x263F8D4F8];
        LOBYTE(v27) = v19 & 1;
        break;
    }
    memset(v25, 0, sizeof(v25));
    char v26 = 1;
    id v10 = v17;
    uint64_t v11 = sub_251B4AA08(v10, (uint64_t)&v27, v29, a1, (uint64_t)v25);
    sub_251A1B064((uint64_t)&v27, &qword_26B21E190);

    sub_251A1AD70(v19, v20, v21);
    swift_bridgeObjectRelease();
    a1 = v11;
  }
  int64_t v16 = v14 + 4;
  if (v16 < v24)
  {
    unint64_t v15 = *(void *)(v23 + 8 * v16);
    if (!v15)
    {
      while (1)
      {
        int64_t v8 = v16 + 1;
        if (__OFADD__(v16, 1)) {
          break;
        }
        if (v8 >= v24) {
          goto LABEL_31;
        }
        unint64_t v15 = *(void *)(v23 + 8 * v8);
        ++v16;
        if (v15) {
          goto LABEL_24;
        }
      }
LABEL_33:
      __break(1u);
      JUMPOUT(0x251B4B7FCLL);
    }
    int64_t v8 = v16;
    goto LABEL_24;
  }
LABEL_31:
  swift_release();
  return a1;
}

uint64_t sub_251B4B814(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v23 = a2 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a2 + 64);
  int64_t v24 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v30 = a2;
  swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v12 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v13 = v12 | (v8 << 6);
      goto LABEL_25;
    }
    int64_t v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v14 >= v24) {
      goto LABEL_31;
    }
    unint64_t v15 = *(void *)(v23 + 8 * v14);
    ++v8;
    if (!v15)
    {
      int64_t v8 = v14 + 1;
      if (v14 + 1 >= v24) {
        goto LABEL_31;
      }
      unint64_t v15 = *(void *)(v23 + 8 * v8);
      if (!v15)
      {
        int64_t v8 = v14 + 2;
        if (v14 + 2 >= v24) {
          goto LABEL_31;
        }
        unint64_t v15 = *(void *)(v23 + 8 * v8);
        if (!v15)
        {
          int64_t v8 = v14 + 3;
          if (v14 + 3 >= v24) {
            goto LABEL_31;
          }
          unint64_t v15 = *(void *)(v23 + 8 * v8);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_24:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v8 << 6);
LABEL_25:
    id v17 = *(void **)(*(void *)(v30 + 48) + 8 * v13);
    uint64_t v18 = *(void *)(v30 + 56) + 24 * v13;
    uint64_t v19 = *(void *)v18;
    unint64_t v20 = *(void *)(v18 + 8);
    char v21 = *(unsigned char *)(v18 + 16);
    switch(v21)
    {
      case 1:
        uint64_t v9 = MEMORY[0x263F8D538];
        goto LABEL_5;
      case 2:
        uint64_t v9 = MEMORY[0x263F8D6C8];
LABEL_5:
        *((void *)&v29 + 1) = v9;
        *(void *)&long long v28 = v19;
        break;
      case 3:
        *((void *)&v29 + 1) = MEMORY[0x263F8D310];
        *(void *)&long long v28 = v19;
        *((void *)&v28 + 1) = v20;
        swift_bridgeObjectRetain_n();
        break;
      case 4:
        *((void *)&v29 + 1) = MEMORY[0x263F06F70];
        *(void *)&long long v28 = v19;
        *((void *)&v28 + 1) = v20;
        sub_251A1A894(v19, v20);
        sub_251A1A894(v19, v20);
        break;
      case 5:
        long long v28 = 0u;
        long long v29 = 0u;
        break;
      default:
        *((void *)&v29 + 1) = MEMORY[0x263F8D4F8];
        LOBYTE(v28) = v19 & 1;
        break;
    }
    v26[0] = 2;
    v26[1] = 0;
    v26[2] = 0;
    char v27 = 3;
    id v10 = v17;
    uint64_t v11 = sub_251B4AA08(v10, (uint64_t)&v28, a3, a1, (uint64_t)v26);
    sub_251A1B064((uint64_t)&v28, &qword_26B21E190);

    sub_251A1AD70(v19, v20, v21);
    swift_bridgeObjectRelease();
    a1 = v11;
  }
  int64_t v16 = v14 + 4;
  if (v16 < v24)
  {
    unint64_t v15 = *(void *)(v23 + 8 * v16);
    if (!v15)
    {
      while (1)
      {
        int64_t v8 = v16 + 1;
        if (__OFADD__(v16, 1)) {
          break;
        }
        if (v8 >= v24) {
          goto LABEL_31;
        }
        unint64_t v15 = *(void *)(v23 + 8 * v8);
        ++v16;
        if (v15) {
          goto LABEL_24;
        }
      }
LABEL_33:
      __break(1u);
      JUMPOUT(0x251B4BAF4);
    }
    int64_t v8 = v16;
    goto LABEL_24;
  }
LABEL_31:
  swift_release();
  return a1;
}

uint64_t sub_251B4BB0C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v59 = a4;
  uint64_t v55 = a3;
  uint64_t v6 = *(void *)(a2 + 64);
  uint64_t v56 = a2 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & v6;
  int64_t v57 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v58 = *MEMORY[0x263F0C710];
  swift_bridgeObjectRetain();
  uint64_t v60 = a2;
  swift_bridgeObjectRetain();
  for (int64_t i = 0; ; int64_t i = v75)
  {
    uint64_t v69 = a1;
    if (!v9) {
      break;
    }
    uint64_t v65 = (v9 - 1) & v9;
    int64_t v75 = i;
    unint64_t v17 = __clz(__rbit64(v9)) | (i << 6);
LABEL_25:
    char v22 = *(void **)(*(void *)(v60 + 48) + 8 * v17);
    uint64_t v23 = *(void *)(v60 + 56) + 24 * v17;
    uint64_t v25 = *(void *)v23;
    unint64_t v24 = *(void *)(v23 + 8);
    uint64_t v26 = *(unsigned __int8 *)(v23 + 16);
    uint64_t v27 = sub_251F356F0();
    uint64_t v68 = v28;
    uint64_t v29 = sub_251F34DA0();
    uint64_t v62 = v54;
    uint64_t v30 = *(void *)(v29 - 8);
    uint64_t v31 = *(void *)(v30 + 64);
    MEMORY[0x270FA5388](v29);
    uint64_t v61 = &v54[-((v31 + 15) & 0xFFFFFFFFFFFFFFF0)];
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    char v66 = v54;
    MEMORY[0x270FA5388](v32 - 8);
    char v34 = &v54[-((v33 + 15) & 0xFFFFFFFFFFFFFFF0)];
    id v35 = v22;
    unint64_t v63 = v24;
    uint64_t v64 = v25;
    uint64_t v70 = v26;
    sub_251A1A870(v25, v24, v26);
    long long v67 = v35;
    id v36 = objc_msgSend(v35, sel_service);
    if (!v36
      || (uint64_t v37 = v36, v38 = objc_msgSend(v36, sel_accessory), v37, !v38))
    {
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v30 + 56))(v34, 1, 1, v29);
      uint64_t v42 = v69;
LABEL_34:
      sub_251A1B064((uint64_t)v34, &qword_26B21FF90);
      unint64_t v9 = v65;
      char v49 = 2;
      uint64_t v50 = 4;
      int64_t v51 = v75;
      unint64_t v48 = v63;
      uint64_t v52 = v64;
      goto LABEL_35;
    }
    id v39 = objc_msgSend(v38, sel_uniqueIdentifier);

    MEMORY[0x270FA5388](v40);
    sub_251F34D80();

    unint64_t v41 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v30 + 32);
    v41(v34, &v54[-((v31 + 15) & 0xFFFFFFFFFFFFFFF0)], v29);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v30 + 56))(v34, 0, 1, v29);
    uint64_t v42 = v69;
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v30 + 48))(v34, 1, v29) == 1) {
      goto LABEL_34;
    }
    uint64_t v43 = (uint64_t)v61;
    v41(v61, v34, v29);
    if (!*(void *)(v55 + 16) || (unint64_t v44 = sub_2519FE584(v43), (v45 & 1) == 0))
    {
      (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v43, v29);
      uint64_t v42 = v69;
      unint64_t v9 = v65;
      unint64_t v48 = v63;
LABEL_42:
      char v49 = 2;
      uint64_t v50 = 4;
      goto LABEL_43;
    }
    int v46 = *(unsigned __int8 *)(*(void *)(v55 + 56) + v44);
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v43, v29);
    BOOL v47 = v46 == 1;
    uint64_t v42 = v69;
    unint64_t v9 = v65;
    unint64_t v48 = v63;
    if (!v47) {
      goto LABEL_42;
    }
    swift_bridgeObjectRelease();
    uint64_t v27 = 0;
    uint64_t v68 = 0;
    char v49 = 3;
    uint64_t v50 = 1;
LABEL_43:
    int64_t v51 = v75;
    uint64_t v52 = v64;
LABEL_35:
    int64_t v75 = v51;
    switch(v70)
    {
      case 1:
        uint64_t v11 = MEMORY[0x263F8D538];
        goto LABEL_5;
      case 2:
        uint64_t v11 = MEMORY[0x263F8D6C8];
LABEL_5:
        *((void *)&v74 + 1) = v11;
        *(void *)&long long v73 = v52;
        break;
      case 3:
        *((void *)&v74 + 1) = MEMORY[0x263F8D310];
        *(void *)&long long v73 = v52;
        *((void *)&v73 + 1) = v48;
        swift_bridgeObjectRetain();
        break;
      case 4:
        *((void *)&v74 + 1) = MEMORY[0x263F06F70];
        *(void *)&long long v73 = v52;
        *((void *)&v73 + 1) = v48;
        sub_251A1A894(v52, v48);
        break;
      case 5:
        long long v73 = 0u;
        long long v74 = 0u;
        break;
      default:
        *((void *)&v74 + 1) = MEMORY[0x263F8D4F8];
        LOBYTE(v73) = v52 & 1;
        break;
    }
    v71[0] = v50;
    v71[1] = v27;
    uint64_t v12 = v27;
    unint64_t v13 = v67;
    uint64_t v14 = v68;
    v71[2] = v68;
    char v72 = v49;
    uint64_t v15 = sub_251B4AA08(v67, (uint64_t)&v73, v59, v42, (uint64_t)v71);
    char v16 = v49;
    a1 = v15;
    sub_251A1A5A4(v50, v12, v14, v16);
    sub_251A1B064((uint64_t)&v73, &qword_26B21E190);

    sub_251A1AD70(v52, v48, v70);
    swift_bridgeObjectRelease();
  }
  int64_t v18 = i + 1;
  if (__OFADD__(i, 1))
  {
    __break(1u);
    goto LABEL_46;
  }
  if (v18 >= v57) {
    goto LABEL_44;
  }
  unint64_t v19 = *(void *)(v56 + 8 * v18);
  int64_t v20 = i + 1;
  if (v19) {
    goto LABEL_24;
  }
  int64_t v20 = i + 2;
  if (i + 2 >= v57) {
    goto LABEL_44;
  }
  unint64_t v19 = *(void *)(v56 + 8 * v20);
  if (v19) {
    goto LABEL_24;
  }
  int64_t v20 = i + 3;
  if (i + 3 >= v57) {
    goto LABEL_44;
  }
  unint64_t v19 = *(void *)(v56 + 8 * v20);
  if (v19) {
    goto LABEL_24;
  }
  int64_t v20 = i + 4;
  if (i + 4 >= v57) {
    goto LABEL_44;
  }
  unint64_t v19 = *(void *)(v56 + 8 * v20);
  if (v19)
  {
LABEL_24:
    uint64_t v65 = (v19 - 1) & v19;
    int64_t v75 = v20;
    unint64_t v17 = __clz(__rbit64(v19)) + (v20 << 6);
    goto LABEL_25;
  }
  uint64_t v21 = i + 5;
  if (i + 5 < v57)
  {
    unint64_t v19 = *(void *)(v56 + 8 * v21);
    if (!v19)
    {
      while (1)
      {
        int64_t v20 = v21 + 1;
        if (__OFADD__(v21, 1)) {
          break;
        }
        if (v20 >= v57) {
          goto LABEL_44;
        }
        unint64_t v19 = *(void *)(v56 + 8 * v20);
        ++v21;
        if (v19) {
          goto LABEL_24;
        }
      }
LABEL_46:
      __break(1u);
      JUMPOUT(0x251B4C19CLL);
    }
    int64_t v20 = i + 5;
    goto LABEL_24;
  }
LABEL_44:
  swift_release();
  return a1;
}

uint64_t sub_251B4C1B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v36 = a2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F0E0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F0D8);
  uint64_t v9 = MEMORY[0x270FA5388](v35);
  uint64_t v34 = (uint64_t)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  unint64_t v13 = (char *)&v29 - v12;
  uint64_t v14 = *(void *)(a1 + 56);
  uint64_t v32 = a1 + 56;
  uint64_t v15 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  int64_t v33 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v29 = v11;
  int64_t v18 = (unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v20 = 0;
  unint64_t v21 = MEMORY[0x263F8EE78];
  uint64_t v30 = a3;
  uint64_t v31 = a1;
  if (v17) {
    goto LABEL_6;
  }
LABEL_7:
  if (__OFADD__(v20++, 1))
  {
    __break(1u);
    goto LABEL_35;
  }
  if (v20 >= v33) {
    goto LABEL_33;
  }
  unint64_t v25 = *(void *)(v32 + 8 * v20);
  if (v25) {
    goto LABEL_19;
  }
  int64_t v26 = v20 + 1;
  if (v20 + 1 >= v33) {
    goto LABEL_33;
  }
  unint64_t v25 = *(void *)(v32 + 8 * v26);
  if (v25)
  {
LABEL_18:
    int64_t v20 = v26;
LABEL_19:
    unint64_t v17 = (v25 - 1) & v25;
    for (unint64_t i = __clz(__rbit64(v25)) + (v20 << 6); ; unint64_t i = v22 | (v20 << 6))
    {
      unsigned __int8 v37 = *(unsigned char *)(*(void *)(a1 + 48) + i);
      sub_251B496F0(&v37, a3, v8);
      if (v3) {
        break;
      }
      if ((*v18)(v8, 1, v35) == 1)
      {
        uint64_t result = sub_251A1B064((uint64_t)v8, &qword_26B21F0E0);
        if (!v17) {
          goto LABEL_7;
        }
      }
      else
      {
        sub_251A4ECF0((uint64_t)v8, (uint64_t)v13, &qword_26B21F0D8);
        sub_251A4ECF0((uint64_t)v13, v34, &qword_26B21F0D8);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v21 = sub_251F10268(0, *(void *)(v21 + 16) + 1, 1, v21);
        }
        unint64_t v28 = *(void *)(v21 + 16);
        unint64_t v27 = *(void *)(v21 + 24);
        if (v28 >= v27 >> 1) {
          unint64_t v21 = sub_251F10268(v27 > 1, v28 + 1, 1, v21);
        }
        *(void *)(v21 + 16) = v28 + 1;
        uint64_t result = sub_251A4ECF0(v34, v21+ ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80))+ *(void *)(v29 + 72) * v28, &qword_26B21F0D8);
        a3 = v30;
        a1 = v31;
        if (!v17) {
          goto LABEL_7;
        }
      }
LABEL_6:
      unint64_t v22 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
    }
    swift_bridgeObjectRelease();
    goto LABEL_33;
  }
  int64_t v26 = v20 + 2;
  if (v20 + 2 >= v33)
  {
LABEL_33:
    swift_release();
    return v21;
  }
  unint64_t v25 = *(void *)(v32 + 8 * v26);
  if (v25) {
    goto LABEL_18;
  }
  int64_t v26 = v20 + 3;
  if (v20 + 3 >= v33) {
    goto LABEL_33;
  }
  unint64_t v25 = *(void *)(v32 + 8 * v26);
  if (v25) {
    goto LABEL_18;
  }
  int64_t v26 = v20 + 4;
  if (v20 + 4 >= v33) {
    goto LABEL_33;
  }
  unint64_t v25 = *(void *)(v32 + 8 * v26);
  if (v25) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v20 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v20 >= v33) {
      goto LABEL_33;
    }
    unint64_t v25 = *(void *)(v32 + 8 * v20);
    ++v26;
    if (v25) {
      goto LABEL_19;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_251B4C57C(uint64_t a1, uint64_t a2)
{
  uint64_t v37 = type metadata accessor for StaticCharacteristic();
  uint64_t v39 = *(void *)(v37 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v37);
  MEMORY[0x270FA5388](v4);
  uint64_t v38 = (uint64_t)&v33 - v6;
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t v35 = a1 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(a1 + 32);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & v7;
  uint64_t v42 = v5;
  uint64_t v34 = v5 + 24;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = a2 + 56;
  uint64_t v40 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v14 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      int64_t v41 = v13;
      unint64_t v15 = v14 | (v13 << 6);
      goto LABEL_23;
    }
    int64_t v16 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v16 >= v36) {
      goto LABEL_36;
    }
    unint64_t v17 = *(void *)(v35 + 8 * v16);
    int64_t v18 = v13 + 1;
    if (!v17)
    {
      int64_t v18 = v13 + 2;
      if (v13 + 2 >= v36) {
        goto LABEL_36;
      }
      unint64_t v17 = *(void *)(v35 + 8 * v18);
      if (!v17)
      {
        int64_t v18 = v13 + 3;
        if (v13 + 3 >= v36) {
          goto LABEL_36;
        }
        unint64_t v17 = *(void *)(v35 + 8 * v18);
        if (!v17)
        {
          int64_t v18 = v13 + 4;
          if (v13 + 4 >= v36) {
            goto LABEL_36;
          }
          unint64_t v17 = *(void *)(v35 + 8 * v18);
          if (!v17)
          {
            uint64_t v19 = v13 + 5;
            if (v13 + 5 >= v36)
            {
LABEL_36:
              swift_release();
              return 0;
            }
            unint64_t v17 = *(void *)(v35 + 8 * v19);
            int64_t v18 = v13 + 5;
            if (!v17) {
              break;
            }
          }
        }
      }
    }
LABEL_22:
    unint64_t v10 = (v17 - 1) & v17;
    int64_t v41 = v18;
    unint64_t v15 = __clz(__rbit64(v17)) + (v18 << 6);
LABEL_23:
    uint64_t v20 = v38;
    sub_251B4CAD0(*(void *)(v40 + 56) + *(void *)(v39 + 72) * v15, v38, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
    sub_251B4C984(v20, v42);
    if (!*(void *)(a2 + 16)) {
      goto LABEL_5;
    }
    char v21 = *(unsigned char *)(v42 + *(int *)(v37 + 20));
    sub_251F36CA0();
    char v44 = v21;
    CharacteristicKind.rawValue.getter();
    sub_251F357B0();
    swift_bridgeObjectRelease();
    uint64_t v22 = sub_251F36D00();
    uint64_t v23 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v24 = v22 & ~v23;
    if ((*(void *)(v11 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24))
    {
      uint64_t v25 = ~v23;
      while (1)
      {
        char v43 = *(unsigned char *)(*(void *)(a2 + 48) + v24);
        char v44 = v21;
        unint64_t v26 = CharacteristicKind.rawValue.getter();
        uint64_t v28 = v27;
        if (v26 == CharacteristicKind.rawValue.getter() && v28 == v29) {
          break;
        }
        char v31 = sub_251F36B10();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v31) {
          goto LABEL_34;
        }
        unint64_t v24 = (v24 + 1) & v25;
        if (((*(void *)(v11 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24) & 1) == 0) {
          goto LABEL_5;
        }
      }
      swift_bridgeObjectRelease_n();
LABEL_34:
      int v32 = *(unsigned __int8 *)(v34 + *(int *)(v37 + 32));
      uint64_t result = sub_251B4CA70(v42, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
      int64_t v13 = v41;
      if (!v32)
      {
        swift_release();
        return 1;
      }
    }
    else
    {
LABEL_5:
      uint64_t result = sub_251B4CA70(v42, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
      int64_t v13 = v41;
    }
  }
  while (1)
  {
    int64_t v18 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v18 >= v36) {
      goto LABEL_36;
    }
    unint64_t v17 = *(void *)(v35 + 8 * v18);
    ++v19;
    if (v17) {
      goto LABEL_22;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_251B4C984(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticCharacteristic();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_251B4C9E8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD00000000000001ELL && a2 == 0x8000000251F6A9C0)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_251F36B10();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_251B4CA70(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_251B4CAD0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_251B4CB38(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v51 = a2;
  id v58 = a4;
  uint64_t v52 = a1;
  uint64_t v53 = 0;
  int64_t v4 = 0;
  uint64_t v60 = a3;
  uint64_t v7 = *(void *)(a3 + 56);
  uint64_t v5 = a3 + 56;
  uint64_t v6 = v7;
  uint64_t v8 = 1 << *(unsigned char *)(v5 - 24);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v6;
  uint64_t v55 = v5;
  int64_t v56 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = &qword_26B21FF90;
  uint64_t v12 = &off_26536F000;
  while (v10)
  {
    uint64_t v63 = (v10 - 1) & v10;
    int64_t v64 = v4;
    unint64_t v14 = __clz(__rbit64(v10)) | (v4 << 6);
LABEL_22:
    uint64_t v19 = *(void *)(v60 + 48);
    unint64_t v59 = v14;
    uint64_t v20 = *(void **)(v19 + 8 * v14);
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(v11);
    uint64_t v68 = &v51;
    uint64_t v22 = *(void *)(*(void *)(v21 - 8) + 64);
    MEMORY[0x270FA5388](v21 - 8);
    id v67 = v20;
    id v23 = objc_msgSend(v67, sel_service, v51);
    if (v23)
    {
      unint64_t v24 = v23;
      id v25 = [v23 (SEL)v12[241]];

      sub_251F34D80();
      uint64_t v26 = sub_251F34DA0();
      uint64_t v27 = (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))((char *)&v51 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), 0, 1, v26);
    }
    else
    {
      uint64_t v26 = sub_251F34DA0();
      uint64_t v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))((char *)&v51 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v26);
    }
    char v66 = &v51;
    MEMORY[0x270FA5388](v27);
    uint64_t v61 = (uint64_t *)((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v28 = (char *)((char *)&v51 - (char *)v61);
    id v29 = [v58 (SEL)v12[241]];
    sub_251F34D80();

    sub_251F34DA0();
    uint64_t v30 = *(void *)(v26 - 8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v28, 0, 1, v26);
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E6B8);
    uint64_t v65 = &v51;
    uint64_t v32 = MEMORY[0x270FA5388](v31 - 8);
    uint64_t v34 = (char *)&v51 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v35 = (uint64_t)&v34[*(int *)(v32 + 56)];
    sub_251A1B128((uint64_t)&v51 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v34, v11);
    sub_251A1B128((uint64_t)v28, v35, v11);
    int64_t v36 = (char *)&v51 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v62 = v30;
    uint64_t v37 = v30;
    uint64_t v38 = v11;
    uint64_t v39 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v37 + 48);
    uint64_t v40 = v39(v34, 1, v26);
    if (v40 == 1)
    {
      sub_251A1B064((uint64_t)v28, v38);
      sub_251A1B064((uint64_t)v36, v38);
      int v13 = v39((char *)v35, 1, v26);
      uint64_t v11 = v38;
      if (v13 != 1) {
        goto LABEL_5;
      }
      sub_251A1B064((uint64_t)v34, v38);

      int64_t v4 = v64;
      uint64_t v12 = &off_26536F000;
      unint64_t v10 = v63;
LABEL_31:
      *(unint64_t *)((char *)v52 + ((v59 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v59;
      if (__OFADD__(v53++, 1))
      {
        __break(1u);
LABEL_34:
        uint64_t v50 = v60;
        swift_retain();
        sub_251F1C6C8(v52, v51, v53, v50);
        return;
      }
    }
    else
    {
      int64_t v57 = v36;
      MEMORY[0x270FA5388](v40);
      int64_t v41 = (char *)((char *)&v51 - (char *)v61);
      sub_251A1B128((uint64_t)v34, (char *)&v51 - (char *)v61, v38);
      uint64_t v42 = v39((char *)v35, 1, v26);
      if (v42 == 1)
      {
        sub_251A1B064((uint64_t)v28, v38);
        sub_251A1B064((uint64_t)v57, v38);
        (*(void (**)(char *, uint64_t))(v62 + 8))(v41, v26);
        uint64_t v11 = v38;
LABEL_5:
        sub_251A1B064((uint64_t)v34, &qword_26B21E6B8);

        int64_t v4 = v64;
        uint64_t v12 = &off_26536F000;
        unint64_t v10 = v63;
      }
      else
      {
        uint64_t v61 = &v51;
        char v43 = v41;
        uint64_t v44 = v62;
        MEMORY[0x270FA5388](v42);
        uint64_t v54 = &v51;
        int v46 = (char *)&v51 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, uint64_t, uint64_t))(v44 + 32))(v46, v35, v26);
        sub_251A9FE88();
        char v47 = sub_251F35650();
        unint64_t v48 = *(void (**)(char *, uint64_t))(v44 + 8);
        v48(v46, v26);
        sub_251A1B064((uint64_t)v28, v38);
        sub_251A1B064((uint64_t)v57, v38);
        v48(v43, v26);
        sub_251A1B064((uint64_t)v34, v38);

        int64_t v4 = v64;
        uint64_t v11 = v38;
        uint64_t v12 = &off_26536F000;
        unint64_t v10 = v63;
        if (v47) {
          goto LABEL_31;
        }
      }
    }
  }
  int64_t v15 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_36;
  }
  if (v15 >= v56) {
    goto LABEL_34;
  }
  unint64_t v16 = *(void *)(v55 + 8 * v15);
  int64_t v17 = v4 + 1;
  if (v16) {
    goto LABEL_21;
  }
  int64_t v17 = v4 + 2;
  if (v4 + 2 >= v56) {
    goto LABEL_34;
  }
  unint64_t v16 = *(void *)(v55 + 8 * v17);
  if (v16) {
    goto LABEL_21;
  }
  int64_t v17 = v4 + 3;
  if (v4 + 3 >= v56) {
    goto LABEL_34;
  }
  unint64_t v16 = *(void *)(v55 + 8 * v17);
  if (v16)
  {
LABEL_21:
    uint64_t v63 = (v16 - 1) & v16;
    int64_t v64 = v17;
    unint64_t v14 = __clz(__rbit64(v16)) + (v17 << 6);
    goto LABEL_22;
  }
  uint64_t v18 = v4 + 4;
  if (v4 + 4 >= v56) {
    goto LABEL_34;
  }
  unint64_t v16 = *(void *)(v55 + 8 * v18);
  if (v16)
  {
    int64_t v17 = v4 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v17 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v17 >= v56) {
      goto LABEL_34;
    }
    unint64_t v16 = *(void *)(v55 + 8 * v17);
    ++v18;
    if (v16) {
      goto LABEL_21;
    }
  }
LABEL_36:
  __break(1u);
}

uint64_t sub_251B4D1D8(uint64_t a1, void *a2)
{
  v17[1] = *MEMORY[0x263EF8340];
  char v4 = *(unsigned char *)(a1 + 32);
  unsigned int v5 = v4 & 0x3F;
  unint64_t v6 = (unint64_t)((1 << v4) + 63) >> 6;
  uint64_t isStackAllocationSafe = a2;
  uint64_t v8 = (void *)isStackAllocationSafe;
  if (v5 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    uint64_t v9 = (char *)v17 - ((8 * v6 + 15) & 0x3FFFFFFFFFFFFFF0);
    bzero(v9, 8 * v6);
    id v10 = v8;
    sub_251B4CB38((unint64_t *)v9, v6, a1, v10);
    uint64_t v12 = v11;
    swift_release();

    if (v2) {
      swift_willThrow();
    }
  }
  else
  {
    int v13 = (void *)swift_slowAlloc();
    bzero(v13, 8 * v6);
    id v14 = v8;
    sub_251B4CB38((unint64_t *)v13, v6, a1, v14);
    uint64_t v12 = v15;
    swift_release();

    MEMORY[0x2533AC760](v13, -1, -1);
  }
  return v12;
}

uint64_t sub_251B4D38C(uint64_t a1, void *a2)
{
  if ((a1 & 0xC000000000000001) == 0) {
    return sub_251B4D1D8(a1, a2);
  }
  uint64_t v2 = MEMORY[0x263F8EE88];
  uint64_t v58 = MEMORY[0x263F8EE88];
  id v50 = a2;
  uint64_t v49 = sub_251F362B0();
  uint64_t v3 = sub_251F36340();
  if (!v3) {
    goto LABEL_30;
  }
  uint64_t v4 = v3;
  uint64_t v48 = sub_251A1A568(0, (unint64_t *)&qword_26B21F170);
  uint64_t v47 = MEMORY[0x263F8EE50] + 8;
  unsigned int v5 = &off_26536F000;
  do
  {
    uint64_t v56 = v4;
    swift_dynamicCast();
    id v12 = v57;
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    uint64_t v54 = v45;
    uint64_t v14 = *(void *)(*(void *)(v13 - 8) + 64);
    MEMORY[0x270FA5388](v13 - 8);
    id v15 = objc_msgSend(v12, sel_service);
    if (v15)
    {
      unint64_t v16 = v15;
      id v17 = [v15 (SEL)v5[241]];

      sub_251F34D80();
      uint64_t v18 = sub_251F34DA0();
      uint64_t v19 = (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))((char *)v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), 0, 1, v18);
    }
    else
    {
      uint64_t v18 = sub_251F34DA0();
      uint64_t v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))((char *)v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v18);
    }
    uint64_t v53 = v45;
    MEMORY[0x270FA5388](v19);
    uint64_t v51 = (char *)((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v20 = (char *)((char *)v45 - v51);
    id v21 = [v50 (SEL)v5[241]];
    sub_251F34D80();

    sub_251F34DA0();
    uint64_t v22 = *(void *)(v18 - 8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v20, 0, 1, v18);
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E6B8);
    uint64_t v52 = v45;
    uint64_t v24 = MEMORY[0x270FA5388](v23 - 8);
    uint64_t v26 = (char *)v45 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v27 = (uint64_t)&v26[*(int *)(v24 + 56)];
    sub_251A1B128((uint64_t)v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v26, &qword_26B21FF90);
    uint64_t v55 = v27;
    sub_251A1B128((uint64_t)v20, v27, &qword_26B21FF90);
    uint64_t v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48);
    uint64_t v29 = v28(v26, 1, v18);
    if (v29 == 1)
    {
      sub_251A1B064((uint64_t)v20, &qword_26B21FF90);
      sub_251A1B064((uint64_t)v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_26B21FF90);
      if (v28((char *)v55, 1, v18) != 1) {
        goto LABEL_16;
      }
      sub_251A1B064((uint64_t)v26, &qword_26B21FF90);
      unsigned int v5 = &off_26536F000;
    }
    else
    {
      uint64_t v46 = (uint64_t)v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
      MEMORY[0x270FA5388](v29);
      uint64_t v30 = (char *)((char *)v45 - v51);
      sub_251A1B128((uint64_t)v26, (char *)v45 - v51, &qword_26B21FF90);
      uint64_t v31 = v28((char *)v55, 1, v18);
      if (v31 == 1)
      {
        sub_251A1B064((uint64_t)v20, &qword_26B21FF90);
        sub_251A1B064(v46, &qword_26B21FF90);
        (*(void (**)(char *, uint64_t))(v22 + 8))(v30, v18);
LABEL_16:
        sub_251A1B064((uint64_t)v26, &qword_26B21E6B8);
        unsigned int v5 = &off_26536F000;
LABEL_20:

        goto LABEL_7;
      }
      uint64_t v51 = (char *)v45;
      uint64_t v32 = v30;
      uint64_t v33 = v22;
      MEMORY[0x270FA5388](v31);
      v45[1] = v45;
      uint64_t v35 = (char *)v45 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, uint64_t, uint64_t))(v22 + 32))(v35, v55, v18);
      sub_251A9FE88();
      char v36 = sub_251F35650();
      uint64_t v37 = *(void (**)(char *, uint64_t))(v33 + 8);
      v37(v35, v18);
      sub_251A1B064((uint64_t)v20, &qword_26B21FF90);
      sub_251A1B064(v46, &qword_26B21FF90);
      v37(v32, v18);
      sub_251A1B064((uint64_t)v26, &qword_26B21FF90);
      unsigned int v5 = &off_26536F000;
      if ((v36 & 1) == 0) {
        goto LABEL_20;
      }
    }
    id v38 = v57;
    uint64_t v39 = v58;
    unint64_t v40 = *(void *)(v58 + 16);
    if (*(void *)(v58 + 24) <= v40)
    {
      sub_251A6A074(v40 + 1);
      uint64_t v39 = v58;
    }
    uint64_t result = sub_251F36110();
    uint64_t v7 = v39 + 56;
    uint64_t v8 = -1 << *(unsigned char *)(v39 + 32);
    unint64_t v9 = result & ~v8;
    unint64_t v10 = v9 >> 6;
    if (((-1 << v9) & ~*(void *)(v39 + 56 + 8 * (v9 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v9) & ~*(void *)(v39 + 56 + 8 * (v9 >> 6)))) | v9 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v41 = 0;
      unint64_t v42 = (unint64_t)(63 - v8) >> 6;
      do
      {
        if (++v10 == v42 && (v41 & 1) != 0)
        {
          __break(1u);
          return result;
        }
        BOOL v43 = v10 == v42;
        if (v10 == v42) {
          unint64_t v10 = 0;
        }
        v41 |= v43;
        uint64_t v44 = *(void *)(v7 + 8 * v10);
      }
      while (v44 == -1);
      unint64_t v11 = __clz(__rbit64(~v44)) + (v10 << 6);
    }
    *(void *)(v7 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    *(void *)(*(void *)(v39 + 48) + 8 * v11) = v38;
    ++*(void *)(v39 + 16);
LABEL_7:
    uint64_t v4 = sub_251F36340();
  }
  while (v4);
  uint64_t v2 = v58;
LABEL_30:

  swift_release();
  return v2;
}

void sub_251B4DA20(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v61 = a4;
  uint64_t v54 = a2;
  uint64_t v55 = a1;
  uint64_t v56 = 0;
  int64_t v4 = 0;
  uint64_t v63 = a3;
  uint64_t v7 = *(void *)(a3 + 64);
  uint64_t v5 = a3 + 64;
  uint64_t v6 = v7;
  uint64_t v8 = 1 << *(unsigned char *)(v5 - 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v6;
  uint64_t v58 = v5;
  int64_t v59 = (unint64_t)(v8 + 63) >> 6;
  unint64_t v11 = &qword_26B21FF90;
  id v12 = &off_26536F000;
  while (v10)
  {
    uint64_t v66 = (v10 - 1) & v10;
    int64_t v67 = v4;
    unint64_t v13 = __clz(__rbit64(v10)) | (v4 << 6);
LABEL_22:
    uint64_t v18 = *(void *)(v63 + 56);
    uint64_t v19 = *(void **)(*(void *)(v63 + 48) + 8 * v13);
    unint64_t v62 = v13;
    uint64_t v20 = v18 + 32 * v13;
    uint64_t v22 = *(void *)v20;
    uint64_t v21 = *(void *)(v20 + 8);
    uint64_t v23 = *(void *)(v20 + 16);
    int v24 = *(unsigned __int8 *)(v20 + 24);
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(v11);
    int64_t v75 = &v53;
    uint64_t v26 = *(void *)(*(void *)(v25 - 8) + 64);
    MEMORY[0x270FA5388](v25 - 8);
    id v27 = v19;
    uint64_t v71 = v22;
    uint64_t v72 = v21;
    uint64_t v73 = v23;
    int v74 = v24;
    sub_251A1A550(v22, v21, v23, v24);
    id v70 = v27;
    id v28 = objc_msgSend(v27, sel_service);
    if (v28)
    {
      uint64_t v29 = v28;
      id v30 = [v28 (SEL)v12[241]];

      sub_251F34D80();
      uint64_t v31 = sub_251F34DA0();
      uint64_t v32 = (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))((char *)&v53 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0), 0, 1, v31);
    }
    else
    {
      uint64_t v31 = sub_251F34DA0();
      uint64_t v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))((char *)&v53 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v31);
    }
    uint64_t v33 = (char *)&v53 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v69 = &v53;
    MEMORY[0x270FA5388](v32);
    int64_t v64 = (char *)((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v34 = (char *)((char *)&v53 - v64);
    id v35 = [v61 (SEL)v12[241]];
    sub_251F34D80();

    sub_251F34DA0();
    uint64_t v36 = *(void *)(v31 - 8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v34, 0, 1, v31);
    uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E6B8);
    uint64_t v68 = &v53;
    uint64_t v38 = MEMORY[0x270FA5388](v37 - 8);
    unint64_t v40 = (char *)&v53 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v41 = (uint64_t)&v40[*(int *)(v38 + 56)];
    sub_251A1B128((uint64_t)v33, (uint64_t)v40, v11);
    sub_251A1B128((uint64_t)v34, v41, v11);
    unint64_t v42 = v11;
    uint64_t v65 = v36;
    BOOL v43 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v36 + 48);
    uint64_t v44 = v43(v40, 1, v31);
    if (v44 == 1)
    {
      sub_251A1B064((uint64_t)v34, v11);
      sub_251A1B064((uint64_t)v33, v11);
      if (v43((char *)v41, 1, v31) != 1) {
        goto LABEL_5;
      }
      sub_251A1B064((uint64_t)v40, v11);
      sub_251A1A5A4(v71, v72, v73, v74);

      int64_t v4 = v67;
      id v12 = &off_26536F000;
      unint64_t v10 = v66;
LABEL_31:
      *(unint64_t *)((char *)v55 + ((v62 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v62;
      if (__OFADD__(v56++, 1))
      {
        __break(1u);
LABEL_34:
        sub_251C648AC(v55, v54, v56, v63);
        return;
      }
    }
    else
    {
      uint64_t v60 = v33;
      MEMORY[0x270FA5388](v44);
      uint64_t v45 = (char *)((char *)&v53 - v64);
      sub_251A1B128((uint64_t)v40, (char *)&v53 - v64, v11);
      uint64_t v46 = v43((char *)v41, 1, v31);
      if (v46 == 1)
      {
        sub_251A1B064((uint64_t)v34, v11);
        sub_251A1B064((uint64_t)v60, v11);
        (*(void (**)(char *, uint64_t))(v65 + 8))(v45, v31);
LABEL_5:
        sub_251A1B064((uint64_t)v40, &qword_26B21E6B8);
        sub_251A1A5A4(v71, v72, v73, v74);

        int64_t v4 = v67;
        id v12 = &off_26536F000;
        unint64_t v10 = v66;
      }
      else
      {
        int64_t v64 = (char *)&v53;
        uint64_t v47 = v45;
        uint64_t v48 = v65;
        MEMORY[0x270FA5388](v46);
        id v50 = (char *)&v53 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, uint64_t, uint64_t))(v48 + 32))(v50, v41, v31);
        sub_251A9FE88();
        int v57 = sub_251F35650();
        uint64_t v51 = *(void (**)(char *, uint64_t))(v48 + 8);
        v51(v50, v31);
        sub_251A1B064((uint64_t)v34, v42);
        sub_251A1B064((uint64_t)v60, v42);
        v51(v47, v31);
        sub_251A1B064((uint64_t)v40, v42);
        sub_251A1A5A4(v71, v72, v73, v74);

        int64_t v4 = v67;
        unint64_t v11 = v42;
        id v12 = &off_26536F000;
        unint64_t v10 = v66;
        if (v57) {
          goto LABEL_31;
        }
      }
    }
  }
  int64_t v14 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_36;
  }
  if (v14 >= v59) {
    goto LABEL_34;
  }
  unint64_t v15 = *(void *)(v58 + 8 * v14);
  int64_t v16 = v4 + 1;
  if (v15) {
    goto LABEL_21;
  }
  int64_t v16 = v4 + 2;
  if (v4 + 2 >= v59) {
    goto LABEL_34;
  }
  unint64_t v15 = *(void *)(v58 + 8 * v16);
  if (v15) {
    goto LABEL_21;
  }
  int64_t v16 = v4 + 3;
  if (v4 + 3 >= v59) {
    goto LABEL_34;
  }
  unint64_t v15 = *(void *)(v58 + 8 * v16);
  if (v15)
  {
LABEL_21:
    uint64_t v66 = (v15 - 1) & v15;
    int64_t v67 = v16;
    unint64_t v13 = __clz(__rbit64(v15)) + (v16 << 6);
    goto LABEL_22;
  }
  uint64_t v17 = v4 + 4;
  if (v4 + 4 >= v59) {
    goto LABEL_34;
  }
  unint64_t v15 = *(void *)(v58 + 8 * v17);
  if (v15)
  {
    int64_t v16 = v4 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v16 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v16 >= v59) {
      goto LABEL_34;
    }
    unint64_t v15 = *(void *)(v58 + 8 * v16);
    ++v17;
    if (v15) {
      goto LABEL_21;
    }
  }
LABEL_36:
  __break(1u);
}

uint64_t sub_251B4E12C(uint64_t a1, void *a2)
{
  v17[1] = *MEMORY[0x263EF8340];
  char v4 = *(unsigned char *)(a1 + 32);
  unsigned int v5 = v4 & 0x3F;
  unint64_t v6 = (unint64_t)((1 << v4) + 63) >> 6;
  uint64_t isStackAllocationSafe = a2;
  uint64_t v8 = (void *)isStackAllocationSafe;
  if (v5 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    uint64_t v9 = (char *)v17 - ((8 * v6 + 15) & 0x3FFFFFFFFFFFFFF0);
    bzero(v9, 8 * v6);
    id v10 = v8;
    sub_251B4DA20((unint64_t *)v9, v6, a1, v10);
    uint64_t v12 = v11;

    if (v2) {
      swift_willThrow();
    }
  }
  else
  {
    unint64_t v13 = (void *)swift_slowAlloc();
    bzero(v13, 8 * v6);
    id v14 = v8;
    sub_251B4DA20((unint64_t *)v13, v6, a1, v14);
    uint64_t v12 = v15;

    MEMORY[0x2533AC760](v13, -1, -1);
  }
  return v12;
}

void sub_251B4E2D0(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v52 = a2;
  id v59 = a4;
  uint64_t v53 = a1;
  uint64_t v54 = 0;
  int64_t v4 = 0;
  uint64_t v61 = a3;
  uint64_t v7 = *(void *)(a3 + 64);
  uint64_t v5 = a3 + 64;
  uint64_t v6 = v7;
  uint64_t v8 = 1 << *(unsigned char *)(v5 - 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v6;
  uint64_t v56 = v5;
  int64_t v57 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = &qword_26B21FF90;
  uint64_t v12 = &off_26536F000;
  while (v10)
  {
    uint64_t v64 = (v10 - 1) & v10;
    int64_t v65 = v4;
    unint64_t v13 = __clz(__rbit64(v10)) | (v4 << 6);
LABEL_22:
    uint64_t v18 = *(void *)(v61 + 56);
    uint64_t v19 = *(void **)(*(void *)(v61 + 48) + 8 * v13);
    unint64_t v60 = v13;
    uint64_t v20 = v18 + 24 * v13;
    uint64_t v22 = *(void *)v20;
    unint64_t v21 = *(void *)(v20 + 8);
    int v23 = *(unsigned __int8 *)(v20 + 16);
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(v11);
    uint64_t v72 = &v52;
    uint64_t v25 = *(void *)(*(void *)(v24 - 8) + 64);
    MEMORY[0x270FA5388](v24 - 8);
    uint64_t v26 = (char *)&v52 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
    id v27 = v19;
    uint64_t v69 = v22;
    unint64_t v70 = v21;
    int v71 = v23;
    sub_251A1A870(v22, v21, v23);
    id v68 = v27;
    id v28 = objc_msgSend(v27, sel_service, v52);
    if (v28)
    {
      uint64_t v29 = v28;
      id v30 = [v28 (SEL)v12[241]];

      sub_251F34D80();
      uint64_t v31 = sub_251F34DA0();
      uint64_t v32 = (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))((char *)&v52 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), 0, 1, v31);
    }
    else
    {
      uint64_t v31 = sub_251F34DA0();
      uint64_t v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))((char *)&v52 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v31);
    }
    int64_t v67 = &v52;
    MEMORY[0x270FA5388](v32);
    unint64_t v62 = (uint64_t *)((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v33 = (char *)((char *)&v52 - (char *)v62);
    id v34 = [v59 (SEL)v12[241]];
    sub_251F34D80();

    sub_251F34DA0();
    uint64_t v35 = *(void *)(v31 - 8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v33, 0, 1, v31);
    uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E6B8);
    uint64_t v66 = &v52;
    uint64_t v37 = MEMORY[0x270FA5388](v36 - 8);
    uint64_t v39 = (char *)&v52 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v40 = (uint64_t)&v39[*(int *)(v37 + 56)];
    sub_251A1B128((uint64_t)&v52 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v39, v11);
    sub_251A1B128((uint64_t)v33, v40, v11);
    uint64_t v41 = v11;
    uint64_t v63 = v35;
    unint64_t v42 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 48);
    uint64_t v43 = v42(v39, 1, v31);
    if (v43 == 1)
    {
      sub_251A1B064((uint64_t)v33, v11);
      sub_251A1B064((uint64_t)v26, v11);
      if (v42((char *)v40, 1, v31) != 1) {
        goto LABEL_5;
      }
      sub_251A1B064((uint64_t)v39, v11);
      sub_251A1AD70(v69, v70, v71);

      int64_t v4 = v65;
      uint64_t v12 = &off_26536F000;
      unint64_t v10 = v64;
LABEL_31:
      *(unint64_t *)((char *)v53 + ((v60 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v60;
      if (__OFADD__(v54++, 1))
      {
        __break(1u);
LABEL_34:
        sub_251C645E8(v53, v52, v54, v61);
        return;
      }
    }
    else
    {
      uint64_t v58 = v26;
      MEMORY[0x270FA5388](v43);
      uint64_t v44 = (char *)((char *)&v52 - (char *)v62);
      sub_251A1B128((uint64_t)v39, (char *)&v52 - (char *)v62, v11);
      uint64_t v45 = v42((char *)v40, 1, v31);
      if (v45 == 1)
      {
        sub_251A1B064((uint64_t)v33, v11);
        sub_251A1B064((uint64_t)v58, v11);
        (*(void (**)(char *, uint64_t))(v63 + 8))(v44, v31);
LABEL_5:
        sub_251A1B064((uint64_t)v39, &qword_26B21E6B8);
        sub_251A1AD70(v69, v70, v71);

        int64_t v4 = v65;
        uint64_t v12 = &off_26536F000;
        unint64_t v10 = v64;
      }
      else
      {
        unint64_t v62 = &v52;
        uint64_t v46 = v44;
        uint64_t v47 = v63;
        MEMORY[0x270FA5388](v45);
        uint64_t v49 = (char *)&v52 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, uint64_t, uint64_t))(v47 + 32))(v49, v40, v31);
        sub_251A9FE88();
        int v55 = sub_251F35650();
        id v50 = *(void (**)(char *, uint64_t))(v47 + 8);
        v50(v49, v31);
        sub_251A1B064((uint64_t)v33, v41);
        sub_251A1B064((uint64_t)v58, v41);
        v50(v46, v31);
        sub_251A1B064((uint64_t)v39, v41);
        sub_251A1AD70(v69, v70, v71);

        int64_t v4 = v65;
        uint64_t v11 = v41;
        uint64_t v12 = &off_26536F000;
        unint64_t v10 = v64;
        if (v55) {
          goto LABEL_31;
        }
      }
    }
  }
  int64_t v14 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_36;
  }
  if (v14 >= v57) {
    goto LABEL_34;
  }
  unint64_t v15 = *(void *)(v56 + 8 * v14);
  int64_t v16 = v4 + 1;
  if (v15) {
    goto LABEL_21;
  }
  int64_t v16 = v4 + 2;
  if (v4 + 2 >= v57) {
    goto LABEL_34;
  }
  unint64_t v15 = *(void *)(v56 + 8 * v16);
  if (v15) {
    goto LABEL_21;
  }
  int64_t v16 = v4 + 3;
  if (v4 + 3 >= v57) {
    goto LABEL_34;
  }
  unint64_t v15 = *(void *)(v56 + 8 * v16);
  if (v15)
  {
LABEL_21:
    uint64_t v64 = (v15 - 1) & v15;
    int64_t v65 = v16;
    unint64_t v13 = __clz(__rbit64(v15)) + (v16 << 6);
    goto LABEL_22;
  }
  uint64_t v17 = v4 + 4;
  if (v4 + 4 >= v57) {
    goto LABEL_34;
  }
  unint64_t v15 = *(void *)(v56 + 8 * v17);
  if (v15)
  {
    int64_t v16 = v4 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v16 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v16 >= v57) {
      goto LABEL_34;
    }
    unint64_t v15 = *(void *)(v56 + 8 * v16);
    ++v17;
    if (v15) {
      goto LABEL_21;
    }
  }
LABEL_36:
  __break(1u);
}

uint64_t sub_251B4E9B8(uint64_t a1, void *a2)
{
  v17[1] = *MEMORY[0x263EF8340];
  char v4 = *(unsigned char *)(a1 + 32);
  unsigned int v5 = v4 & 0x3F;
  unint64_t v6 = (unint64_t)((1 << v4) + 63) >> 6;
  uint64_t isStackAllocationSafe = a2;
  uint64_t v8 = (void *)isStackAllocationSafe;
  if (v5 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    uint64_t v9 = (char *)v17 - ((8 * v6 + 15) & 0x3FFFFFFFFFFFFFF0);
    bzero(v9, 8 * v6);
    id v10 = v8;
    sub_251B4E2D0((unint64_t *)v9, v6, a1, v10);
    uint64_t v12 = v11;

    if (v2) {
      swift_willThrow();
    }
  }
  else
  {
    unint64_t v13 = (void *)swift_slowAlloc();
    bzero(v13, 8 * v6);
    id v14 = v8;
    sub_251B4E2D0((unint64_t *)v13, v6, a1, v14);
    uint64_t v12 = v15;

    MEMORY[0x2533AC760](v13, -1, -1);
  }
  return v12;
}

uint64_t sub_251B4EB5C(uint64_t a1, char a2, void *a3)
{
  uint64_t v7 = type metadata accessor for StaticCharacteristic();
  uint64_t v58 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v55 = (uint64_t)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v52 - v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F0D8);
  uint64_t result = MEMORY[0x270FA5388](v12);
  int64_t v16 = (unsigned __int8 *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)(a1 + 16);
  if (v17)
  {
    uint64_t v52 = v3;
    uint64_t v18 = (uint64_t)&v16[*(int *)(result + 48)];
    unint64_t v53 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    uint64_t v54 = a1;
    uint64_t v19 = a1 + v53;
    uint64_t v57 = *(void *)(v14 + 72);
    swift_bridgeObjectRetain();
    sub_251A1B128(v19, (uint64_t)v16, &qword_26B21F0D8);
    uint64_t v20 = *v16;
    uint64_t v56 = v18;
    sub_251B4C984(v18, (uint64_t)v11);
    unint64_t v21 = (void *)*a3;
    unint64_t v23 = sub_2519FE568(v20);
    uint64_t v24 = v21[2];
    BOOL v25 = (v22 & 1) == 0;
    uint64_t v26 = v24 + v25;
    if (__OFADD__(v24, v25))
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    char v27 = v22;
    if (v21[3] < v26)
    {
      sub_251A07E4C(v26, a2 & 1);
      unint64_t v28 = sub_2519FE568(v20);
      if ((v27 & 1) != (v29 & 1))
      {
LABEL_28:
        uint64_t result = sub_251F36BA0();
        __break(1u);
        return result;
      }
      unint64_t v23 = v28;
      id v30 = (void *)*a3;
      if ((v27 & 1) == 0) {
        goto LABEL_12;
      }
LABEL_9:
      unint64_t v31 = v53;
      uint64_t v32 = v55;
      sub_251B4C984((uint64_t)v11, v55);
      sub_251B4EF84(v32, v30[7] + *(void *)(v58 + 72) * v23);
      uint64_t v33 = v17 - 1;
      if (v17 == 1) {
        return swift_bridgeObjectRelease();
      }
LABEL_16:
      uint64_t v37 = v54 + v57 + v31;
      while (1)
      {
        sub_251A1B128(v37, (uint64_t)v16, &qword_26B21F0D8);
        uint64_t v39 = *v16;
        sub_251B4C984(v56, (uint64_t)v11);
        uint64_t v40 = (void *)*a3;
        unint64_t v42 = sub_2519FE568(v39);
        uint64_t v43 = v40[2];
        BOOL v44 = (v41 & 1) == 0;
        uint64_t v45 = v43 + v44;
        if (__OFADD__(v43, v44)) {
          goto LABEL_26;
        }
        char v46 = v41;
        if (v40[3] < v45)
        {
          sub_251A07E4C(v45, 1);
          unint64_t v47 = sub_2519FE568(v39);
          if ((v46 & 1) != (v48 & 1)) {
            goto LABEL_28;
          }
          unint64_t v42 = v47;
        }
        uint64_t v49 = (void *)*a3;
        if (v46)
        {
          uint64_t v38 = v55;
          sub_251B4C984((uint64_t)v11, v55);
          sub_251B4EF84(v38, v49[7] + *(void *)(v58 + 72) * v42);
        }
        else
        {
          v49[(v42 >> 6) + 8] |= 1 << v42;
          *(unsigned char *)(v49[6] + v42) = v39;
          sub_251B4C984((uint64_t)v11, v49[7] + *(void *)(v58 + 72) * v42);
          uint64_t v50 = v49[2];
          BOOL v35 = __OFADD__(v50, 1);
          uint64_t v51 = v50 + 1;
          if (v35) {
            goto LABEL_27;
          }
          v49[2] = v51;
        }
        v37 += v57;
        if (!--v33) {
          return swift_bridgeObjectRelease();
        }
      }
    }
    if (a2)
    {
      id v30 = (void *)*a3;
      if (v22) {
        goto LABEL_9;
      }
    }
    else
    {
      sub_251A154F8();
      id v30 = (void *)*a3;
      if (v27) {
        goto LABEL_9;
      }
    }
LABEL_12:
    v30[(v23 >> 6) + 8] |= 1 << v23;
    *(unsigned char *)(v30[6] + v23) = v20;
    sub_251B4C984((uint64_t)v11, v30[7] + *(void *)(v58 + 72) * v23);
    uint64_t v34 = v30[2];
    BOOL v35 = __OFADD__(v34, 1);
    uint64_t v36 = v34 + 1;
    if (v35)
    {
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    unint64_t v31 = v53;
    v30[2] = v36;
    uint64_t v33 = v17 - 1;
    if (v17 == 1) {
      return swift_bridgeObjectRelease();
    }
    goto LABEL_16;
  }
  return result;
}

uint64_t sub_251B4EF84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticCharacteristic();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_251B4EFEC()
{
  unint64_t result = qword_269B9E638;
  if (!qword_269B9E638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E638);
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticCharacteristicsBag()
{
  return &type metadata for StaticCharacteristicsBag;
}

unsigned char *storeEnumTagSinglePayload for StaticCharacteristicsBag.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x251B4F0ECLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticCharacteristicsBag.CodingKeys()
{
  return &type metadata for StaticCharacteristicsBag.CodingKeys;
}

unint64_t sub_251B4F128()
{
  unint64_t result = qword_269B9E640;
  if (!qword_269B9E640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E640);
  }
  return result;
}

unint64_t sub_251B4F180()
{
  unint64_t result = qword_269B9E648;
  if (!qword_269B9E648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E648);
  }
  return result;
}

unint64_t sub_251B4F1D8()
{
  unint64_t result = qword_269B9E650;
  if (!qword_269B9E650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E650);
  }
  return result;
}

uint64_t sub_251B4F22C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 != -1) {
    return sub_251A1A5A4(a1, a2, a3, a4);
  }
  return a1;
}

uint64_t sub_251B4F240(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 != -1) {
    return sub_251A1A550(a1, a2, a3, a4);
  }
  return a1;
}

uint64_t static CameraController.AudioMode.< infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  BOOL v5 = v3 == 1 || v2 != 1;
  BOOL v6 = v2 != 2 && v5;
  return v3 == 2 || v6;
}

BOOL static CameraController.StreamState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t CameraController.StreamState.description.getter()
{
  uint64_t result = 0x6572747320746F6ELL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x676E697472617473;
      break;
    case 2:
      uint64_t result = 0x6E696D6165727473;
      break;
    case 3:
      uint64_t result = 0x676E6970706F7473;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t CameraController.StreamState.state.getter()
{
  return qword_251F3F7C0[*v0];
}

uint64_t CameraController.StreamState.hash(into:)()
{
  return sub_251F36CB0();
}

void *static CameraController.StreamState.allCases.getter()
{
  return &unk_270262530;
}

uint64_t CameraController.StreamState.hashValue.getter()
{
  return sub_251F36D00();
}

void sub_251B4F3C8(void *a1@<X8>)
{
  *a1 = &unk_270262558;
}

uint64_t sub_251B4F3D8()
{
  uint64_t result = 0x6572747320746F6ELL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x676E697472617473;
      break;
    case 2:
      uint64_t result = 0x6E696D6165727473;
      break;
    case 3:
      uint64_t result = 0x676E6970706F7473;
      break;
    default:
      return result;
  }
  return result;
}

void *static CameraController.AudioMode.allCases.getter()
{
  return &unk_270262580;
}

uint64_t CameraController.AudioMode.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2 = sub_251F36750();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 3;
  if (v2 < 3) {
    char v4 = v2;
  }
  *a1 = v4;
  return result;
}

uint64_t CameraController.AudioMode.rawValue.getter()
{
  uint64_t v1 = 0x676E696D6F636E69;
  if (*v0 != 1) {
    uint64_t v1 = 0x7463657269646962;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x646574756DLL;
  }
}

uint64_t sub_251B4F544(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_251DB1B1C(*a1, *a2);
}

uint64_t sub_251B4F550()
{
  return sub_251F36D00();
}

uint64_t sub_251B4F5FC()
{
  sub_251F357B0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_251B4F694()
{
  return sub_251F36D00();
}

uint64_t sub_251B4F73C@<X0>(char *a1@<X8>)
{
  return CameraController.AudioMode.init(rawValue:)(a1);
}

void sub_251B4F748(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE500000000000000;
  unint64_t v4 = 0xE800000000000000;
  uint64_t v5 = 0x676E696D6F636E69;
  if (v2 != 1)
  {
    uint64_t v5 = 0x7463657269646962;
    unint64_t v4 = 0xED00006C616E6F69;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x646574756DLL;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_251B4F7B0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  BOOL v5 = v3 == 1 || v2 != 1;
  BOOL v6 = v2 != 2 && v5;
  return v3 == 2 || v6;
}

uint64_t sub_251B4F7DC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  if (v2 == 2) {
    return 0;
  }
  int v4 = *a2;
  BOOL v6 = v2 != 1 && v4 == 1;
  return v4 == 2 || v6;
}

uint64_t sub_251B4F810(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a2;
  if (v2 == 2) {
    return 0;
  }
  int v4 = *a1;
  BOOL v6 = v2 != 1 && v4 == 1;
  return v4 == 2 || v6;
}

uint64_t sub_251B4F844(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  BOOL v5 = v2 == 1 || v3 != 1;
  BOOL v6 = v3 != 2 && v5;
  return v2 == 2 || v6;
}

void sub_251B4F870(void *a1@<X8>)
{
  *a1 = &unk_270262610;
}

uint64_t CameraController.Availability.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2 = sub_251F36750();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 7;
  if (v2 < 7) {
    char v4 = v2;
  }
  *a1 = v4;
  return result;
}

unint64_t CameraController.Availability.rawValue.getter()
{
  unint64_t result = 0x6C62616C69617661;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6863616552746F6ELL;
      break;
    case 2:
      unint64_t result = 2037609826;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    case 5:
      unint64_t result = 0x646C6F436F6F74;
      break;
    case 6:
      unint64_t result = 0x746F486F6F74;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_251B4F9CC(unsigned __int8 *a1, char *a2)
{
  return sub_251DB3114(*a1, *a2);
}

uint64_t sub_251B4F9D8()
{
  return sub_251EAE604();
}

uint64_t sub_251B4F9E4()
{
  return sub_251AA9CD4();
}

uint64_t sub_251B4F9EC()
{
  return sub_251EAE604();
}

uint64_t sub_251B4F9F4@<X0>(char *a1@<X8>)
{
  return CameraController.Availability.init(rawValue:)(a1);
}

unint64_t sub_251B4FA00@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = CameraController.Availability.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t CameraController.AccessMode.description.getter()
{
  unint64_t result = 1701736302;
  switch(*v0)
  {
    case 1:
      unint64_t result = 6710895;
      break;
    case 2:
      unint64_t result = 0x6120746365746564;
      break;
    case 3:
      unint64_t result = 0x6D6165727473;
      break;
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

BOOL static CameraController.AccessMode.< infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

uint64_t CameraController.AccessMode.rawValue.getter()
{
  return *v0;
}

unint64_t CameraController.AccessMode.init(rawValue:)@<X0>(unint64_t result@<X0>, char *a2@<X8>)
{
  char v2 = 5;
  if (result < 5) {
    char v2 = result;
  }
  *a2 = v2;
  return result;
}

unint64_t sub_251B4FB00@<X0>(unint64_t *a1@<X0>, char *a2@<X8>)
{
  return CameraController.AccessMode.init(rawValue:)(*a1, a2);
}

void sub_251B4FB08(void *a1@<X8>)
{
  *a1 = *v1;
}

BOOL sub_251B4FB14(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

BOOL sub_251B4FB28(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 >= *a1;
}

BOOL sub_251B4FB3C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 >= *a2;
}

BOOL sub_251B4FB50(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 < *a1;
}

void CameraController.Resolution.init(size:displayScale:)(BOOL *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>)
{
  double v4 = a2 * a4 * (a3 * a4);
  if (v4 >= 2560000.0)
  {
    *a1 = 4;
  }
  else if (v4 >= 2073600.0)
  {
    *a1 = 3;
  }
  else if (v4 >= 921600.0)
  {
    *a1 = 2;
  }
  else
  {
    *a1 = v4 >= 307200.0;
  }
}

uint64_t CameraController.Resolution.description.getter()
{
  uint64_t result = 0x647261646E617473;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6465636E61686E65;
      break;
    case 2:
      uint64_t result = 1751607656;
      break;
    case 3:
      uint64_t result = 0x676968206C6C7566;
      break;
    case 4:
      uint64_t result = 0x6968206172746C75;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t CameraController.Resolution.videoResolutions.getter()
{
  switch(*v0)
  {
    case 1:
      if (qword_269B9C2D0 == -1) {
        goto LABEL_8;
      }
      goto LABEL_26;
    case 2:
      if (qword_269B9C2D0 == -1) {
        goto LABEL_12;
      }
      goto LABEL_29;
    case 3:
      if (qword_269B9C2D0 == -1) {
        goto LABEL_16;
      }
      goto LABEL_32;
    case 4:
      if (qword_269B9C2D0 == -1) {
        goto LABEL_20;
      }
      goto LABEL_35;
    default:
      if (qword_269B9C2D0 != -1) {
        swift_once();
      }
      if (*(void *)(qword_269BF30A0 + 16))
      {
        sub_2519FECAC(0);
        if (v1) {
          return swift_bridgeObjectRetain();
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
LABEL_26:
      swift_once();
LABEL_8:
      uint64_t v3 = qword_269BF30A0;
      if (!*(void *)(qword_269BF30A0 + 16))
      {
        __break(1u);
        goto LABEL_28;
      }
      unint64_t v4 = sub_2519FECAC(1u);
      if ((v5 & 1) == 0)
      {
LABEL_28:
        __break(1u);
LABEL_29:
        swift_once();
LABEL_12:
        uint64_t v7 = qword_269BF30A0;
        if (*(void *)(qword_269BF30A0 + 16))
        {
          unint64_t v8 = sub_2519FECAC(2u);
          if (v9)
          {
            uint64_t v6 = *(void *)(*(void *)(v7 + 56) + 8 * v8);
            goto LABEL_23;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
LABEL_32:
        swift_once();
LABEL_16:
        uint64_t v10 = qword_269BF30A0;
        if (*(void *)(qword_269BF30A0 + 16))
        {
          unint64_t v11 = sub_2519FECAC(3u);
          if (v12)
          {
            uint64_t v6 = *(void *)(*(void *)(v10 + 56) + 8 * v11);
            goto LABEL_23;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
LABEL_35:
        swift_once();
LABEL_20:
        uint64_t v13 = qword_269BF30A0;
        if (*(void *)(qword_269BF30A0 + 16))
        {
          unint64_t v14 = sub_2519FECAC(4u);
          if (v15)
          {
            uint64_t v6 = *(void *)(*(void *)(v13 + 56) + 8 * v14);
            goto LABEL_23;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
        JUMPOUT(0x251B4FEF0);
      }
      uint64_t v6 = *(void *)(*(void *)(v3 + 56) + 8 * v4);
LABEL_23:
      uint64_t v16 = swift_bridgeObjectRetain();
      unint64_t v17 = CameraController.Resolution.videoResolutions.getter(v16);
      sub_251ED7908(v17);
      return v6;
  }
}

uint64_t sub_251B4FF04()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E6A8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_251F3F270;
  *(unsigned char *)(inited + 32) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EBB0);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_251F3F280;
  *(void *)(v1 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0E230]), sel_initWithVideoResolutionType_, 11);
  *(void *)(v1 + 40) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0E230]), sel_initWithVideoResolutionType_, 12);
  *(void *)(v1 + 48) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0E230]), sel_initWithVideoResolutionType_, 23);
  *(void *)(v1 + 56) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0E230]), sel_initWithVideoResolutionType_, 22);
  *(void *)(v1 + 64) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0E230]), sel_initWithVideoResolutionType_, 6);
  *(void *)(v1 + 72) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0E230]), sel_initWithVideoResolutionType_, 7);
  *(void *)(v1 + 80) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0E230]), sel_initWithVideoResolutionType_, 8);
  *(void *)(v1 + 88) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0E230]), sel_initWithVideoResolutionType_, 1);
  *(void *)(v1 + 96) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0E230]), sel_initWithVideoResolutionType_, 2);
  *(void *)(v1 + 104) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0E230]), sel_initWithVideoResolutionType_, 27);
  sub_251F35AE0();
  *(void *)(inited + 40) = v1;
  *(unsigned char *)(inited + 48) = 1;
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_251F3F290;
  *(void *)(v2 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0E230]), sel_initWithVideoResolutionType_, 21);
  *(void *)(v2 + 40) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0E230]), sel_initWithVideoResolutionType_, 3);
  sub_251F35AE0();
  *(void *)(inited + 56) = v2;
  *(unsigned char *)(inited + 64) = 2;
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_251F3F2A0;
  *(void *)(v3 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0E230]), sel_initWithVideoResolutionType_, 13);
  *(void *)(v3 + 40) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0E230]), sel_initWithVideoResolutionType_, 20);
  *(void *)(v3 + 48) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0E230]), sel_initWithVideoResolutionType_, 19);
  *(void *)(v3 + 56) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0E230]), sel_initWithVideoResolutionType_, 9);
  *(void *)(v3 + 64) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0E230]), sel_initWithVideoResolutionType_, 4);
  *(void *)(v3 + 72) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0E230]), sel_initWithVideoResolutionType_, 5);
  *(void *)(v3 + 80) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0E230]), sel_initWithVideoResolutionType_, 26);
  sub_251F35AE0();
  *(void *)(inited + 72) = v3;
  *(unsigned char *)(inited + 80) = 3;
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_251F3F2B0;
  *(void *)(v4 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0E230]), sel_initWithVideoResolutionType_, 14);
  *(void *)(v4 + 40) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0E230]), sel_initWithVideoResolutionType_, 18);
  *(void *)(v4 + 48) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0E230]), sel_initWithVideoResolutionType_, 17);
  *(void *)(v4 + 56) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0E230]), sel_initWithVideoResolutionType_, 10);
  *(void *)(v4 + 64) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0E230]), sel_initWithVideoResolutionType_, 16);
  *(void *)(v4 + 72) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0E230]), sel_initWithVideoResolutionType_, 15);
  *(void *)(v4 + 80) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0E230]), sel_initWithVideoResolutionType_, 25);
  *(void *)(v4 + 88) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0E230]), sel_initWithVideoResolutionType_, 24);
  sub_251F35AE0();
  *(void *)(inited + 88) = v4;
  *(unsigned char *)(inited + 96) = 4;
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_251F3F290;
  *(void *)(v5 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0E230]), sel_initWithVideoResolutionType_, 29);
  *(void *)(v5 + 40) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0E230]), sel_initWithVideoResolutionType_, 28);
  sub_251F35AE0();
  *(void *)(inited + 104) = v5;
  unint64_t v6 = sub_251A19E4C(inited);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269B9E6B0);
  uint64_t result = swift_arrayDestroy();
  qword_269BF30A0 = v6;
  return result;
}

void sub_251B50394(char *a1@<X8>)
{
  id v3 = objc_msgSend(v1, sel_accessory);
  if (v3)
  {
    uint64_t v4 = v3;
    unsigned int v5 = objc_msgSend(v3, sel_isReachable);
  }
  else
  {
    unsigned int v5 = 0;
  }
  id v6 = objc_msgSend(v1, sel_userSettings);
  if (v6)
  {
    uint64_t v7 = v6;
    unsigned int v8 = objc_msgSend(v6, sel_isCameraManuallyDisabled);
  }
  else
  {
    unsigned int v8 = 0;
  }
  id v9 = objc_msgSend(v1, sel_userSettings);
  if (!v9) {
    goto LABEL_10;
  }
  uint64_t v10 = v9;
  unint64_t v11 = (char *)objc_msgSend(v9, sel_currentAccessMode);

  if ((unint64_t)(v11 - 1) >= 2)
  {
    if (!v11)
    {
      int v12 = 1;
      goto LABEL_11;
    }
LABEL_10:
    int v12 = 0;
LABEL_11:
    int v13 = v5 ^ 1 | v8 | v12;
    if (v5) {
      char v14 = 3;
    }
    else {
      char v14 = 1;
    }
    if (v13) {
      char v15 = v14;
    }
    else {
      char v15 = 4;
    }
    goto LABEL_17;
  }
  if (v8) {
    char v15 = 3;
  }
  else {
    char v15 = 4;
  }
  if (!v5) {
    char v15 = 1;
  }
  if (((v5 ^ 1 | v8) & 1) == 0)
  {
    id v16 = objc_msgSend(v1, sel_accessory);
    if (!v16)
    {
      char v15 = 0;
      goto LABEL_17;
    }
    unint64_t v17 = v16;
    id v18 = objc_msgSend(v16, sel_services);

    sub_251B50D6C();
    unint64_t v19 = sub_251F35AC0();

    if (v19 >> 62)
    {
LABEL_44:
      swift_bridgeObjectRetain();
      uint64_t v20 = sub_251F366C0();
      if (v20)
      {
LABEL_27:
        uint64_t v21 = 4;
        while (1)
        {
          if ((v19 & 0xC000000000000001) != 0) {
            id v22 = (id)MEMORY[0x2533AB3A0](v21 - 4, v19);
          }
          else {
            id v22 = *(id *)(v19 + 8 * v21);
          }
          unint64_t v23 = v22;
          uint64_t v24 = v21 - 3;
          if (__OFADD__(v21 - 4, 1))
          {
            __break(1u);
            goto LABEL_44;
          }
          if (objc_msgSend(v22, sel_hasOperatingState)
            && objc_msgSend(v23, sel_lastKnownOperatingState) == (id)2
            && (objc_msgSend(v23, sel_hasOperatingStateAbnormalReasons) & 1) != 0)
          {
            break;
          }

          ++v21;
          if (v24 == v20) {
            goto LABEL_45;
          }
        }
        swift_bridgeObjectRelease_n();
        if ((objc_msgSend(v23, sel_lastKnownOperatingStateAbnormalReasons) & 2) != 0)
        {

          char v15 = 5;
        }
        else
        {
          unsigned __int8 v25 = objc_msgSend(v23, sel_lastKnownOperatingStateAbnormalReasons);

          if ((v25 & 4) != 0) {
            char v15 = 6;
          }
          else {
            char v15 = 1;
          }
        }
        goto LABEL_17;
      }
    }
    else
    {
      uint64_t v20 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v20) {
        goto LABEL_27;
      }
    }
LABEL_45:
    swift_bridgeObjectRelease_n();
    char v15 = 0;
  }
LABEL_17:
  *a1 = v15;
}

void sub_251B50670(__int16 *a1@<X8>)
{
  id v3 = objc_msgSend(v1, sel_streamControl);
  if (!v3) {
    goto LABEL_9;
  }
  uint64_t v4 = v3;
  id v5 = objc_msgSend(v3, sel_cameraStream);
  if (!v5)
  {

LABEL_9:
    __int16 v8 = 5;
    goto LABEL_10;
  }
  id v6 = v5;
  if (objc_msgSend(v4, sel_streamState) != (id)2)
  {

    goto LABEL_9;
  }
  id v7 = objc_msgSend(v6, sel_audioStreamSetting);

  __int16 v8 = (v7 == (id)2) | 0x500;
  if (v7 == (id)3) {
    __int16 v8 = 1282;
  }
LABEL_10:
  *a1 = v8;
}

unint64_t sub_251B50744()
{
  unint64_t result = qword_269B9E660;
  if (!qword_269B9E660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E660);
  }
  return result;
}

uint64_t sub_251B50798()
{
  return sub_251A95228(&qword_269B9E668, &qword_269B9E670);
}

unint64_t sub_251B507C4()
{
  unint64_t result = qword_269B9E678;
  if (!qword_269B9E678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E678);
  }
  return result;
}

uint64_t sub_251B50818()
{
  return sub_251A95228(&qword_269B9E680, &qword_269B9E688);
}

unint64_t sub_251B50844()
{
  unint64_t result = qword_269B9E690;
  if (!qword_269B9E690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E690);
  }
  return result;
}

unint64_t sub_251B5089C()
{
  unint64_t result = qword_269B9E698;
  if (!qword_269B9E698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E698);
  }
  return result;
}

unint64_t sub_251B508F4()
{
  unint64_t result = qword_269B9E6A0;
  if (!qword_269B9E6A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E6A0);
  }
  return result;
}

unsigned char *_s11StreamStateOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251B50A14);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CameraController.StreamState()
{
  return &type metadata for CameraController.StreamState;
}

unsigned char *_s9AudioModeOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251B50B18);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CameraController.AudioMode()
{
  return &type metadata for CameraController.AudioMode;
}

unsigned char *_s12AvailabilityOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251B50C1CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CameraController.Availability()
{
  return &type metadata for CameraController.Availability;
}

ValueMetadata *type metadata accessor for CameraController.AccessMode()
{
  return &type metadata for CameraController.AccessMode;
}

unsigned char *_s10ResolutionOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251B50D34);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CameraController.Resolution()
{
  return &type metadata for CameraController.Resolution;
}

unint64_t sub_251B50D6C()
{
  unint64_t result = qword_26B21F180;
  if (!qword_26B21F180)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B21F180);
  }
  return result;
}

Swift::Void __swiftcall CameraController.cameraStreamControlDidStartStream(_:)(HMCameraStreamControl a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E6C0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = [(objc_class *)a1.super.super.isa streamState];
  if ((unint64_t)v8 >= 4) {
    uint64_t v9 = 0;
  }
  else {
    uint64_t v9 = v8;
  }
  if (qword_269B9C348 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_251F350A0();
  __swift_project_value_buffer(v10, (uint64_t)qword_269B9FFA8);
  swift_retain_n();
  unint64_t v11 = sub_251F35080();
  os_log_type_t v12 = sub_251F35FD0();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v22 = v5;
    isa = a1.super.super.isa;
    uint64_t v25 = v4;
    uint64_t v13 = v9;
    uint64_t v9 = swift_slowAlloc();
    char v14 = (void *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    uint64_t v26 = v2;
    v27[0] = v21;
    *(_DWORD *)uint64_t v9 = 138412802;
    swift_retain();
    sub_251F361D0();
    *char v14 = v2;
    swift_release_n();
    *(_WORD *)(v9 + 12) = 2080;
    uint64_t v26 = sub_251A00E84(0xD000000000000025, 0x8000000251F6AA00, v27);
    sub_251F361D0();
    *(_WORD *)(v9 + 22) = 2080;
    unint64_t v15 = 0xED0000676E696D61;
    uint64_t v16 = 0x6572747320746F6ELL;
    uint64_t v23 = v13;
    uint64_t v17 = v13;
    a1.super.super.isa = isa;
    uint64_t v5 = v22;
    switch(v17)
    {
      case 1:
        unint64_t v15 = 0xE800000000000000;
        uint64_t v18 = 0x697472617473;
        goto LABEL_12;
      case 2:
        unint64_t v15 = 0xE900000000000067;
        uint64_t v16 = 0x6E696D6165727473;
        break;
      case 3:
        unint64_t v15 = 0xE800000000000000;
        uint64_t v18 = 0x6970706F7473;
LABEL_12:
        uint64_t v16 = v18 & 0xFFFFFFFFFFFFLL | 0x676E000000000000;
        break;
      default:
        break;
    }
    uint64_t v26 = sub_251A00E84(v16, v15, v27);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2519F3000, v11, v12, "%@ %s stream state: %s", (uint8_t *)v9, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v14, -1, -1);
    uint64_t v19 = v21;
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v19, -1, -1);
    MEMORY[0x2533AC760](v9, -1, -1);

    uint64_t v4 = v25;
    LOBYTE(v9) = v23;
  }
  else
  {

    swift_release_n();
  }
  id v20 = [(objc_class *)a1.super.super.isa cameraStream];
  v27[0] = v9;
  v27[1] = (uint64_t)v20;
  void v27[2] = 0;
  char v28 = 0x80;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E6C8);
  sub_251F35CF0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t CameraController.cameraStreamControl(_:didStopStreamWithError:)(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E6C0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = objc_msgSend(a1, sel_streamState);
  if ((unint64_t)v10 >= 4) {
    unsigned __int8 v11 = 0;
  }
  else {
    unsigned __int8 v11 = v10;
  }
  if (a2)
  {
    id v12 = a2;
    if (qword_269B9C348 != -1) {
      swift_once();
    }
    uint64_t v13 = sub_251F350A0();
    __swift_project_value_buffer(v13, (uint64_t)qword_269B9FFA8);
    id v14 = a2;
    swift_retain();
    id v15 = a2;
    swift_retain();
    uint64_t v16 = sub_251F35080();
    os_log_type_t v17 = sub_251F35FB0();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v44 = (uint64_t)v9;
      uint64_t v45 = a1;
      uint64_t v46 = v7;
      uint64_t v47 = v6;
      uint64_t v18 = swift_slowAlloc();
      uint64_t v19 = (void *)swift_slowAlloc();
      uint64_t v43 = swift_slowAlloc();
      uint64_t v48 = v3;
      v49[0] = v43;
      *(_DWORD *)uint64_t v18 = 138413058;
      swift_retain();
      sub_251F361D0();
      unint64_t v42 = v19;
      *uint64_t v19 = v3;
      swift_release_n();
      *(_WORD *)(v18 + 12) = 2080;
      uint64_t v48 = sub_251A00E84(0xD00000000000002ELL, 0x8000000251F6AA30, v49);
      sub_251F361D0();
      *(_WORD *)(v18 + 22) = 2080;
      unint64_t v20 = 0xED0000676E696D61;
      uint64_t v9 = (char *)v44;
      uint64_t v21 = 0x6572747320746F6ELL;
      switch(v11)
      {
        case 1u:
          unint64_t v20 = 0xE800000000000000;
          uint64_t v22 = 0x697472617473;
          goto LABEL_19;
        case 2u:
          uint64_t v21 = 0x6E696D6165727473;
          unint64_t v20 = 0xE900000000000067;
          break;
        case 3u:
          unint64_t v20 = 0xE800000000000000;
          uint64_t v22 = 0x6970706F7473;
LABEL_19:
          uint64_t v21 = v22 & 0xFFFFFFFFFFFFLL | 0x676E000000000000;
          break;
        default:
          break;
      }
      uint64_t v48 = sub_251A00E84(v21, v20, v49);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 32) = 2080;
      uint64_t v48 = (uint64_t)a2;
      id v31 = a2;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D1B0);
      uint64_t v32 = sub_251F35770();
      uint64_t v48 = sub_251A00E84(v32, v33, v49);
      sub_251F361D0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_2519F3000, v16, v17, "%@ %s stream state: %s error: %s", (uint8_t *)v18, 0x2Au);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
      uint64_t v34 = v42;
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v34, -1, -1);
      uint64_t v35 = v43;
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v35, -1, -1);
      MEMORY[0x2533AC760](v18, -1, -1);

      uint64_t v7 = v46;
      uint64_t v6 = v47;
      a1 = v45;
    }
    else
    {

      swift_release_n();
    }
  }
  else
  {
    if (qword_269B9C348 != -1) {
      swift_once();
    }
    uint64_t v23 = sub_251F350A0();
    __swift_project_value_buffer(v23, (uint64_t)qword_269B9FFA8);
    swift_retain_n();
    uint64_t v24 = sub_251F35080();
    int v25 = sub_251F35FD0();
    if (os_log_type_enabled(v24, (os_log_type_t)v25))
    {
      LODWORD(v42) = v25;
      uint64_t v45 = a1;
      uint64_t v46 = v7;
      uint64_t v47 = v6;
      uint64_t v26 = swift_slowAlloc();
      char v27 = (void *)swift_slowAlloc();
      uint64_t v44 = swift_slowAlloc();
      uint64_t v48 = v3;
      v49[0] = v44;
      *(_DWORD *)uint64_t v26 = 138412802;
      swift_retain();
      sub_251F361D0();
      uint64_t v43 = (uint64_t)v27;
      *char v27 = v3;
      swift_release_n();
      *(_WORD *)(v26 + 12) = 2080;
      uint64_t v48 = sub_251A00E84(0xD00000000000002ELL, 0x8000000251F6AA30, v49);
      sub_251F361D0();
      *(_WORD *)(v26 + 22) = 2080;
      unint64_t v28 = 0xED0000676E696D61;
      uint64_t v29 = 0x6572747320746F6ELL;
      switch(v11)
      {
        case 1u:
          unint64_t v28 = 0xE800000000000000;
          uint64_t v30 = 0x697472617473;
          goto LABEL_23;
        case 2u:
          uint64_t v29 = 0x6E696D6165727473;
          unint64_t v28 = 0xE900000000000067;
          break;
        case 3u:
          unint64_t v28 = 0xE800000000000000;
          uint64_t v30 = 0x6970706F7473;
LABEL_23:
          uint64_t v29 = v30 & 0xFFFFFFFFFFFFLL | 0x676E000000000000;
          break;
        default:
          break;
      }
      uint64_t v48 = sub_251A00E84(v29, v28, v49);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2519F3000, v24, (os_log_type_t)v42, "%@ %s stream state: %s", (uint8_t *)v26, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
      uint64_t v36 = v43;
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v36, -1, -1);
      uint64_t v37 = v44;
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v37, -1, -1);
      MEMORY[0x2533AC760](v26, -1, -1);

      uint64_t v7 = v46;
      uint64_t v6 = v47;
      a1 = v45;
    }
    else
    {

      swift_release_n();
    }
  }
  id v38 = objc_msgSend(a1, sel_cameraStream);
  v49[0] = v11;
  v49[1] = (uint64_t)v38;
  v49[2] = (uint64_t)a2;
  char v50 = 0x80;
  id v39 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E6C8);
  sub_251F35CF0();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

Swift::Void __swiftcall CameraController.cameraSnapshotControlDidUpdateMostRecentSnapshot(_:)(HMCameraSnapshotControl a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E6C0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = [(objc_class *)a1.super.super.isa mostRecentSnapshot];
  if (v8)
  {
    uint64_t v9 = v8;
    if (qword_269B9C348 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_251F350A0();
    __swift_project_value_buffer(v10, (uint64_t)qword_269B9FFA8);
    swift_retain_n();
    id v11 = v9;
    id v12 = sub_251F35080();
    os_log_type_t v13 = sub_251F35FD0();
    int v14 = v13;
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v15 = swift_slowAlloc();
      id v33 = v11;
      uint64_t v16 = v15;
      os_log_type_t v17 = (void *)swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      v34[0] = v30;
      *(_DWORD *)uint64_t v16 = 138412802;
      uint64_t v31 = v5;
      uint64_t v32 = v4;
      HIDWORD(v29) = v14;
      uint64_t v36 = v2;
      swift_retain();
      sub_251F361D0();
      *os_log_type_t v17 = v2;
      swift_release_n();
      *(_WORD *)(v16 + 12) = 2080;
      uint64_t v36 = sub_251A00E84(0xD000000000000034, 0x8000000251F6AA60, v34);
      sub_251F361D0();
      *(_WORD *)(v16 + 22) = 2112;
      uint64_t v36 = (uint64_t)v33;
      id v18 = v33;
      uint64_t v5 = v31;
      uint64_t v4 = v32;
      sub_251F361D0();
      v17[1] = v9;

      uint64_t v19 = v12;
      _os_log_impl(&dword_2519F3000, v12, BYTE4(v29), "%@ %s snapshot: %@", (uint8_t *)v16, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v17, -1, -1);
      uint64_t v20 = v30;
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v20, -1, -1);
      uint64_t v21 = v16;
      id v11 = v33;
      MEMORY[0x2533AC760](v21, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    v34[1] = 0;
    v34[2] = 0;
    v34[0] = (uint64_t)v9;
    char v35 = -127;
    id v28 = v11;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E6C8);
    sub_251F35CF0();

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    if (qword_269B9C348 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_251F350A0();
    __swift_project_value_buffer(v22, (uint64_t)qword_269B9FFA8);
    swift_retain_n();
    uint64_t v23 = sub_251F35080();
    os_log_type_t v24 = sub_251F35FB0();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = swift_slowAlloc();
      uint64_t v26 = (void *)swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      v34[0] = v27;
      *(_DWORD *)uint64_t v25 = 138412546;
      uint64_t v36 = v2;
      swift_retain();
      sub_251F361D0();
      *uint64_t v26 = v2;
      swift_release_n();
      *(_WORD *)(v25 + 12) = 2080;
      uint64_t v36 = sub_251A00E84(0xD000000000000034, 0x8000000251F6AA60, v34);
      sub_251F361D0();
      _os_log_impl(&dword_2519F3000, v23, v24, "%@ %s no snapshot present", (uint8_t *)v25, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v26, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v27, -1, -1);
      MEMORY[0x2533AC760](v25, -1, -1);
    }
    else
    {

      swift_release_n();
    }
  }
}

uint64_t CameraController.cameraSnapshotControl(_:didTake:error:)(uint64_t a1, void *a2, void *a3)
{
  return sub_251B52500(a2, a3);
}

uint64_t CameraController.cameraUserSettingsDidUpdate(_:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E6C0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_msgSend(a1, sel_currentAccessMode);
  unsigned int v9 = objc_msgSend(a1, sel_isCameraManuallyDisabled);
  if (qword_269B9C348 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_251F350A0();
  __swift_project_value_buffer(v10, (uint64_t)qword_269B9FFA8);
  swift_retain_n();
  id v11 = sub_251F35080();
  os_log_type_t v12 = sub_251F35FD0();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v21 = v7;
    uint64_t v22 = v4;
    unsigned int v25 = v9;
    uint64_t v26 = v5;
    uint64_t v13 = 0xD000000000000011;
    uint64_t v14 = swift_slowAlloc();
    uint64_t v15 = (void *)swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    uint64_t v27 = v2;
    v28[0] = v24;
    *(_DWORD *)uint64_t v14 = 138413058;
    swift_retain();
    sub_251F361D0();
    uint64_t v23 = v15;
    *uint64_t v15 = v2;
    swift_release_n();
    *(_WORD *)(v14 + 12) = 2080;
    uint64_t v27 = sub_251A00E84(0xD00000000000001FLL, 0x8000000251F6AAA0, v28);
    sub_251F361D0();
    *(_WORD *)(v14 + 22) = 2080;
    switch((unint64_t)v8)
    {
      case 0uLL:
        unint64_t v16 = 0xE300000000000000;
        uint64_t v13 = 6710895;
        break;
      case 1uLL:
        unint64_t v16 = 0xE600000000000000;
        uint64_t v13 = 0x6D6165727473;
        break;
      case 2uLL:
        unint64_t v16 = 0x8000000251F6A9E0;
        break;
      case 3uLL:
        unint64_t v16 = 0xEF79746976697463;
        uint64_t v13 = 0x6120746365746564;
        break;
      default:
        unint64_t v16 = 0xE400000000000000;
        uint64_t v13 = 1701736302;
        break;
    }
    uint64_t v7 = v21;
    uint64_t v4 = v22;
    uint64_t v27 = sub_251A00E84(v13, v16, v28);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 32) = 1024;
    LODWORD(v27) = v25;
    sub_251F361D0();
    _os_log_impl(&dword_2519F3000, v11, v12, "%@ %s updating accessMode: %s, isManuallyDisabled: %{BOOL}d", (uint8_t *)v14, 0x26u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
    os_log_type_t v17 = v23;
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v17, -1, -1);
    uint64_t v18 = v24;
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v18, -1, -1);
    MEMORY[0x2533AC760](v14, -1, -1);

    uint64_t v5 = v26;
  }
  else
  {

    swift_release_n();
  }
  memset(v28, 0, sizeof(v28));
  char v29 = -126;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E6C8);
  sub_251F35CF0();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_251B524A0(uint64_t a1, uint64_t a2, void *a3, void (*a4)(id))
{
  id v5 = a3;
  swift_retain();
  a4(v5);

  return swift_release();
}

uint64_t sub_251B52500(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E6C0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  unsigned int v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    id v10 = a2;
    if (qword_269B9C348 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_251F350A0();
    __swift_project_value_buffer(v11, (uint64_t)qword_269B9FFA8);
    id v12 = a2;
    swift_retain();
    id v13 = a2;
    swift_retain();
    uint64_t v14 = sub_251F35080();
    os_log_type_t v15 = sub_251F35FB0();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = swift_slowAlloc();
      uint64_t v48 = a1;
      uint64_t v17 = v16;
      uint64_t v18 = swift_slowAlloc();
      uint64_t v45 = v9;
      uint64_t v19 = (void *)v18;
      uint64_t v20 = swift_slowAlloc();
      uint64_t v49 = v3;
      v50[0] = v20;
      *(_DWORD *)uint64_t v17 = 138412802;
      uint64_t v46 = v7;
      uint64_t v47 = v6;
      swift_retain();
      sub_251F361D0();
      *uint64_t v19 = v3;
      swift_release_n();
      *(_WORD *)(v17 + 12) = 2080;
      uint64_t v49 = sub_251A00E84(0xD000000000000027, 0x8000000251F6AAF0, v50);
      sub_251F361D0();
      *(_WORD *)(v17 + 22) = 2080;
      uint64_t v49 = (uint64_t)a2;
      id v21 = a2;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D1B0);
      uint64_t v22 = sub_251F35770();
      uint64_t v49 = sub_251A00E84(v22, v23, v50);
      uint64_t v7 = v46;
      sub_251F361D0();
      uint64_t v6 = v47;
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_2519F3000, v14, v15, "%@ %s error: %s", (uint8_t *)v17, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
      swift_arrayDestroy();
      uint64_t v24 = v19;
      unsigned int v9 = v45;
      MEMORY[0x2533AC760](v24, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v20, -1, -1);
      uint64_t v25 = v17;
      a1 = v48;
      MEMORY[0x2533AC760](v25, -1, -1);
    }
    else
    {

      swift_release_n();
    }
  }
  else
  {
    if (qword_269B9C348 != -1) {
      swift_once();
    }
    uint64_t v26 = sub_251F350A0();
    __swift_project_value_buffer(v26, (uint64_t)qword_269B9FFA8);
    id v27 = a1;
    swift_retain_n();
    id v28 = v27;
    char v29 = sub_251F35080();
    os_log_type_t v30 = sub_251F35FD0();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = swift_slowAlloc();
      uint64_t v48 = a1;
      uint64_t v32 = v31;
      uint64_t v33 = swift_slowAlloc();
      uint64_t v45 = v9;
      uint64_t v34 = (void *)v33;
      uint64_t v44 = swift_slowAlloc();
      uint64_t v49 = v3;
      v50[0] = v44;
      *(_DWORD *)uint64_t v32 = 138412802;
      uint64_t v46 = v7;
      uint64_t v47 = v6;
      swift_retain();
      sub_251F361D0();
      *uint64_t v34 = v3;
      swift_release_n();
      *(_WORD *)(v32 + 12) = 2080;
      uint64_t v49 = sub_251A00E84(0xD000000000000027, 0x8000000251F6AAF0, v50);
      sub_251F361D0();
      *(_WORD *)(v32 + 22) = 2080;
      uint64_t v49 = (uint64_t)v48;
      id v35 = v28;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269B9E7F0);
      uint64_t v36 = sub_251F35770();
      uint64_t v49 = sub_251A00E84(v36, v37, v50);
      sub_251F361D0();

      uint64_t v7 = v46;
      uint64_t v6 = v47;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2519F3000, v29, v30, "%@ %s snapshot: %s", (uint8_t *)v32, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
      swift_arrayDestroy();
      id v38 = v34;
      unsigned int v9 = v45;
      MEMORY[0x2533AC760](v38, -1, -1);
      uint64_t v39 = v44;
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v39, -1, -1);
      uint64_t v40 = v32;
      a1 = v48;
      MEMORY[0x2533AC760](v40, -1, -1);
    }
    else
    {

      swift_release_n();
    }
  }
  v50[0] = (uint64_t)a1;
  v50[1] = (uint64_t)a2;
  v50[2] = 0;
  char v51 = -127;
  id v41 = a2;
  id v42 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E6C8);
  sub_251F35CF0();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_251B52B3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = type metadata accessor for IconTextValueStringDataHolder();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(v5 + 32);
  int v7 = *(unsigned __int8 *)(v6 + 24);
  if (v7 != 255) {
    sub_251A1B604(*(void *)v6, *(void *)(v6 + 8), *(void *)(v6 + 16), v7);
  }
  uint64_t v8 = a1 + *(int *)(a2 + 20);
  type metadata accessor for TilesFilter();
  uint64_t result = swift_getEnumCaseMultiPayload();
  if ((result - 1) <= 2)
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(off_26536E338[(int)result - 1]);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
    return v11(v8, v10);
  }
  return result;
}

uint64_t sub_251B52C88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_indexTm_1);
}

uint64_t sub_251B52CA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_indexTm_1);
}

uint64_t type metadata accessor for SpeakerStatusItem(uint64_t a1)
{
  return sub_251A1C6FC(a1, (uint64_t *)&unk_269B9E860);
}

uint64_t sub_251B52CD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  int v7 = (int *)type metadata accessor for IconTextValueStringDataHolder();
  uint64_t v8 = v7[5];
  unsigned int v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  *unsigned int v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = v7[6];
  id v12 = (void *)(a1 + v11);
  id v13 = (void *)(a2 + v11);
  void *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = v7[7];
  os_log_type_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  *os_log_type_t v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = v7[8];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = (long long *)(a2 + v17);
  int v20 = *(unsigned __int8 *)(a2 + v17 + 24);
  if (*(unsigned __int8 *)(a1 + v17 + 24) == 255)
  {
    if (v20 == 255)
    {
      long long v32 = *v19;
      *(_OWORD *)(v18 + 9) = *(long long *)((char *)v19 + 9);
      *(_OWORD *)uint64_t v18 = v32;
      if (a1 == a2) {
        return a1;
      }
    }
    else
    {
      uint64_t v28 = *(void *)v19;
      uint64_t v29 = *((void *)v19 + 1);
      uint64_t v30 = *((void *)v19 + 2);
      sub_251A1B4AC(v28, v29, v30, v20);
      *(void *)uint64_t v18 = v28;
      *(void *)(v18 + 8) = v29;
      *(void *)(v18 + 16) = v30;
      *(unsigned char *)(v18 + 24) = v20;
      if (a1 == a2) {
        return a1;
      }
    }
  }
  else if (v20 == 255)
  {
    sub_251A1B620(v18);
    long long v31 = *(long long *)((char *)v19 + 9);
    *(_OWORD *)uint64_t v18 = *v19;
    *(_OWORD *)(v18 + 9) = v31;
    if (a1 == a2) {
      return a1;
    }
  }
  else
  {
    uint64_t v21 = *(void *)v19;
    uint64_t v22 = *((void *)v19 + 1);
    uint64_t v23 = *((void *)v19 + 2);
    sub_251A1B4AC(v21, v22, v23, v20);
    uint64_t v24 = *(void *)v18;
    uint64_t v25 = *(void *)(v18 + 8);
    uint64_t v26 = *(void *)(v18 + 16);
    *(void *)uint64_t v18 = v21;
    *(void *)(v18 + 8) = v22;
    *(void *)(v18 + 16) = v23;
    char v27 = *(unsigned char *)(v18 + 24);
    *(unsigned char *)(v18 + 24) = v20;
    sub_251A1B604(v24, v25, v26, v27);
    if (a1 == a2) {
      return a1;
    }
  }
  uint64_t v33 = *(int *)(a3 + 20);
  uint64_t v34 = (void *)(a1 + v33);
  id v35 = (const void *)(a2 + v33);
  sub_251B55758(a1 + v33, (uint64_t (*)(void))type metadata accessor for TilesFilter);
  uint64_t v36 = type metadata accessor for TilesFilter();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC00);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v39 - 8) + 16))(v34, v35, v39);
      swift_storeEnumTagMultiPayload();
      break;
    case 2:
      uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CBF8);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v40 - 8) + 16))(v34, v35, v40);
      swift_storeEnumTagMultiPayload();
      break;
    case 1:
      uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CBF0);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v38 - 8) + 16))(v34, v35, v38);
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t sub_251B5303C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  int v7 = (int *)type metadata accessor for IconTextValueStringDataHolder();
  uint64_t v8 = v7[5];
  unsigned int v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *unsigned int v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  uint64_t v13 = v7[6];
  uint64_t v14 = (void *)(a1 + v13);
  os_log_type_t v15 = (uint64_t *)(a2 + v13);
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  *uint64_t v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  uint64_t v18 = v7[7];
  uint64_t v19 = (void *)(a1 + v18);
  int v20 = (uint64_t *)(a2 + v18);
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  *uint64_t v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  uint64_t v23 = v7[8];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  int v26 = *(unsigned __int8 *)(a1 + v23 + 24);
  if (v26 == 255)
  {
LABEL_6:
    *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
    *(_OWORD *)(v24 + 9) = *(_OWORD *)(v25 + 9);
    if (a1 == a2) {
      return a1;
    }
    goto LABEL_7;
  }
  int v27 = *(unsigned __int8 *)(v25 + 24);
  if (v27 == 255)
  {
    sub_251A1B620(v24);
    goto LABEL_6;
  }
  uint64_t v28 = *(void *)(v25 + 16);
  uint64_t v29 = *(void *)v24;
  uint64_t v30 = *(void *)(v24 + 8);
  uint64_t v31 = *(void *)(v24 + 16);
  *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
  *(void *)(v24 + 16) = v28;
  *(unsigned char *)(v24 + 24) = v27;
  sub_251A1B604(v29, v30, v31, v26);
  if (a1 == a2) {
    return a1;
  }
LABEL_7:
  uint64_t v32 = *(int *)(a3 + 20);
  uint64_t v33 = (void *)(a1 + v32);
  uint64_t v34 = (const void *)(a2 + v32);
  sub_251B55758(a1 + v32, (uint64_t (*)(void))type metadata accessor for TilesFilter);
  uint64_t v35 = type metadata accessor for TilesFilter();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC00);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v38 - 8) + 32))(v33, v34, v38);
      swift_storeEnumTagMultiPayload();
      break;
    case 2:
      uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CBF8);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v39 - 8) + 32))(v33, v34, v39);
      swift_storeEnumTagMultiPayload();
      break;
    case 1:
      uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CBF0);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v37 - 8) + 32))(v33, v34, v37);
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t sub_251B532F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_indexTm_2);
}

uint64_t sub_251B53310(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_indexTm_2);
}

uint64_t type metadata accessor for TelevisionStatusItem(uint64_t a1)
{
  return sub_251A1C6FC(a1, (uint64_t *)&unk_269B9E870);
}

uint64_t sub_251B53348(uint64_t a1, uint64_t a2, uint64_t (*a3)(char *), uint64_t a4)
{
  uint64_t v8 = type metadata accessor for StaticService();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8 - 8);
  char v50 = (char *)v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)v47 - v13;
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)v47 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v48 = (uint64_t)v47 - v18;
  uint64_t v19 = *(void *)(a2 + 56);
  uint64_t v55 = a2 + 56;
  uint64_t v59 = a1;
  uint64_t v20 = -1 << *(unsigned char *)(a2 + 32);
  if (-v20 < 64) {
    uint64_t v21 = ~(-1 << -(char)v20);
  }
  else {
    uint64_t v21 = -1;
  }
  unint64_t v22 = v21 & v19;
  v47[1] = -1 << *(unsigned char *)(a2 + 32);
  int64_t v54 = (unint64_t)(63 - v20) >> 6;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v24 = 0;
  uint64_t v52 = a4;
  uint64_t v53 = a2;
  uint64_t v51 = v9;
  uint64_t v49 = v14;
  uint64_t v25 = (uint64_t)v50;
  while (1)
  {
    if (v22)
    {
      unint64_t v26 = __clz(__rbit64(v22));
      v22 &= v22 - 1;
      unint64_t v27 = v26 | (v24 << 6);
      goto LABEL_26;
    }
    int64_t v28 = v24 + 1;
    if (__OFADD__(v24, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v28 >= v54) {
      goto LABEL_28;
    }
    unint64_t v29 = *(void *)(v55 + 8 * v28);
    int64_t v30 = v24 + 1;
    if (!v29)
    {
      int64_t v30 = v24 + 2;
      if (v24 + 2 >= v54) {
        goto LABEL_28;
      }
      unint64_t v29 = *(void *)(v55 + 8 * v30);
      if (!v29)
      {
        int64_t v30 = v24 + 3;
        if (v24 + 3 >= v54) {
          goto LABEL_28;
        }
        unint64_t v29 = *(void *)(v55 + 8 * v30);
        if (!v29)
        {
          int64_t v30 = v24 + 4;
          if (v24 + 4 >= v54) {
            goto LABEL_28;
          }
          unint64_t v29 = *(void *)(v55 + 8 * v30);
          if (!v29)
          {
            int64_t v30 = v24 + 5;
            if (v24 + 5 >= v54) {
              goto LABEL_28;
            }
            unint64_t v29 = *(void *)(v55 + 8 * v30);
            if (!v29) {
              break;
            }
          }
        }
      }
    }
LABEL_25:
    unint64_t v22 = (v29 - 1) & v29;
    unint64_t v27 = __clz(__rbit64(v29)) + (v30 << 6);
    int64_t v24 = v30;
LABEL_26:
    sub_251B556F0(*(void *)(a2 + 48) + *(void *)(v9 + 72) * v27, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for StaticService);
    sub_251B55688((uint64_t)v14, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for StaticService);
    char v32 = a3(v17);
    uint64_t v33 = (uint64_t)v17;
    if (v32)
    {
      int64_t v58 = v24;
      uint64_t v34 = v48;
      sub_251B55688((uint64_t)v17, v48, (uint64_t (*)(void))type metadata accessor for StaticService);
      sub_251B55688(v34, v25, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v35 = sub_251F34DA0();
      uint64_t v57 = v47;
      uint64_t v36 = *(void *)(v35 - 8);
      uint64_t v37 = MEMORY[0x270FA5388](v35);
      uint64_t v39 = (char *)v47 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v56 = v47;
      MEMORY[0x270FA5388](v37);
      uint64_t v40 = v17;
      id v41 = a3;
      uint64_t v43 = (char *)v47 - v42;
      (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))((char *)v47 - v42, v25, v35);
      uint64_t v44 = v43;
      a3 = v41;
      uint64_t v17 = v40;
      int64_t v24 = v58;
      sub_251A637B8(v39, v44);
      uint64_t v45 = v39;
      uint64_t v14 = v49;
      uint64_t v46 = v35;
      a2 = v53;
      (*(void (**)(char *, uint64_t))(v36 + 8))(v45, v46);
      uint64_t v9 = v51;
      uint64_t v33 = v25;
    }
    uint64_t result = sub_251B55758(v33, (uint64_t (*)(void))type metadata accessor for StaticService);
  }
  int64_t v31 = v24 + 6;
  if (v24 + 6 >= v54)
  {
LABEL_28:
    sub_251A1E630();
    swift_release();
    return v59;
  }
  unint64_t v29 = *(void *)(v55 + 8 * v31);
  if (v29)
  {
    int64_t v30 = v24 + 6;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v30 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      break;
    }
    if (v30 >= v54) {
      goto LABEL_28;
    }
    unint64_t v29 = *(void *)(v55 + 8 * v30);
    ++v31;
    if (v29) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_251B53804@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v117 = a1;
  uint64_t v113 = a3;
  uint64_t v110 = type metadata accessor for TilesFilter();
  MEMORY[0x270FA5388](v110);
  uint64_t v109 = (char *)&v106 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = type metadata accessor for IconTextValueStringDataHolder();
  MEMORY[0x270FA5388](v108);
  uint64_t v107 = (char *)&v106 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F090);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v116 = (char *)&v106 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  uint64_t v114 = *(void *)(v8 - 8);
  uint64_t v115 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v118 = (uint64_t)&v106 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = type metadata accessor for StaticMediaProfile();
  uint64_t v126 = *(void *)(v120 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v120);
  uint64_t v12 = (char *)&v106 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  unint64_t v125 = (unint64_t)&v106 - v13;
  uint64_t v14 = type metadata accessor for StaticMediaSystem();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v106 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v106 - v19;
  uint64_t v112 = type metadata accessor for SpeakerStatusItem(0);
  uint64_t v111 = *(void *)(v112 - 8);
  uint64_t result = MEMORY[0x270FA5388](v112);
  uint64_t v106 = (uint64_t)&v106 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v23 = 0;
  uint64_t v131 = MEMORY[0x263F8EE88];
  uint64_t v132 = MEMORY[0x263F8EE88];
  uint64_t v130 = MEMORY[0x263F8EE88];
  uint64_t v24 = *(void *)(a2 + 56);
  uint64_t v121 = a2 + 56;
  uint64_t v25 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v26 = -1;
  if (v25 < 64) {
    uint64_t v26 = ~(-1 << v25);
  }
  unint64_t v27 = v26 & v24;
  int64_t v122 = (unint64_t)(v25 + 63) >> 6;
  uint64_t v127 = v12;
  BOOL v119 = v20;
  while (1)
  {
    if (v27)
    {
      unint64_t v28 = __clz(__rbit64(v27));
      v27 &= v27 - 1;
      int64_t v128 = v23;
      unint64_t v29 = v28 | (v23 << 6);
      goto LABEL_21;
    }
    int64_t v30 = v23 + 1;
    if (__OFADD__(v23, 1))
    {
      __break(1u);
LABEL_63:
      __break(1u);
      goto LABEL_64;
    }
    uint64_t v32 = (uint64_t)v116;
    uint64_t v31 = v117;
    uint64_t v33 = v115;
    uint64_t v34 = v118;
    if (v30 >= v122) {
      goto LABEL_23;
    }
    unint64_t v35 = *(void *)(v121 + 8 * v30);
    int64_t v36 = v23 + 1;
    if (!v35)
    {
      int64_t v36 = v23 + 2;
      if (v23 + 2 >= v122) {
        goto LABEL_23;
      }
      unint64_t v35 = *(void *)(v121 + 8 * v36);
      if (!v35)
      {
        int64_t v36 = v23 + 3;
        if (v23 + 3 >= v122) {
          goto LABEL_23;
        }
        unint64_t v35 = *(void *)(v121 + 8 * v36);
        if (!v35) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v27 = (v35 - 1) & v35;
    int64_t v128 = v36;
    unint64_t v29 = __clz(__rbit64(v35)) + (v36 << 6);
LABEL_21:
    sub_251B556F0(*(void *)(a2 + 48) + *(void *)(v15 + 72) * v29, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
    sub_251B55688((uint64_t)v20, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
    uint64_t v38 = swift_bridgeObjectRetain();
    sub_251AC0B6C(v38);
    if (v18[*(int *)(v14 + 60)] == 1)
    {
      uint64_t v39 = sub_251F34DA0();
      uint64_t v124 = &v106;
      uint64_t v40 = *(void *)(v39 - 8);
      uint64_t v41 = MEMORY[0x270FA5388](v39);
      uint64_t v43 = v15;
      uint64_t v44 = v14;
      uint64_t v45 = (char *)&v106 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v123 = &v106;
      MEMORY[0x270FA5388](v41);
      uint64_t v46 = a2;
      uint64_t v48 = (char *)&v106 - v47;
      (*(void (**)(char *, char *, uint64_t))(v40 + 16))((char *)&v106 - v47, v18, v39);
      uint64_t v49 = v48;
      a2 = v46;
      sub_251A637B8(v45, v49);
      char v50 = v45;
      uint64_t v14 = v44;
      uint64_t v15 = v43;
      (*(void (**)(char *, uint64_t))(v40 + 8))(v50, v39);
      uint64_t v20 = v119;
    }
    uint64_t result = sub_251B55758((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
    uint64_t v12 = v127;
    int64_t v23 = v128;
  }
  int64_t v37 = v23 + 4;
  if (v23 + 4 >= v122)
  {
LABEL_23:
    uint64_t result = swift_release();
    int64_t v51 = 0;
    uint64_t v52 = *(void *)(v31 + 56);
    uint64_t v124 = (uint64_t *)(v31 + 56);
    uint64_t v53 = 1 << *(unsigned char *)(v31 + 32);
    uint64_t v54 = -1;
    if (v53 < 64) {
      uint64_t v54 = ~(-1 << v53);
    }
    unint64_t v55 = v54 & v52;
    int64_t v128 = (unint64_t)(v53 + 63) >> 6;
    uint64_t v56 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v114 + 48);
LABEL_27:
    uint64_t v57 = v120;
    while (1)
    {
      while (1)
      {
        while (1)
        {
          if (v55)
          {
            unint64_t v58 = __clz(__rbit64(v55));
            v55 &= v55 - 1;
            unint64_t v59 = v58 | (v51 << 6);
          }
          else
          {
            int64_t v60 = v51 + 1;
            if (__OFADD__(v51, 1)) {
              goto LABEL_63;
            }
            if (v60 >= v128)
            {
LABEL_56:
              swift_release();
              swift_bridgeObjectRelease();
              uint64_t v75 = sub_251D8F0C0(v131, v132);
              if (*(void *)(v75 + 16))
              {
                uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
                uint64_t v124 = &v106;
                uint64_t v77 = *(void *)(*(void *)(v76 - 8) + 64);
                MEMORY[0x270FA5388](v76 - 8);
                unint64_t v125 = (v77 + 15) & 0xFFFFFFFFFFFFFFF0;
                unint64_t v78 = (char *)&v106 - v125;
                uint64_t v79 = sub_251F34DA0();
                uint64_t v80 = *(void *)(v79 - 8);
                (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v80 + 56))(v78, 1, 1, v79);
                uint64_t v81 = static String.hfLocalized(_:)(0xD000000000000021, 0x8000000251F6AB90);
                uint64_t v127 = (char *)v82;
                int64_t v128 = v81;
                static String.hfLocalized(_:)(0xD000000000000017, 0x8000000251F6AB50);
                __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
                uint64_t v83 = swift_allocObject();
                *(_OWORD *)(v83 + 16) = xmmword_251F38650;
                uint64_t v84 = *(void *)(v75 + 16);
                uint64_t v85 = MEMORY[0x263F8D750];
                *(void *)(v83 + 56) = MEMORY[0x263F8D6C8];
                *(void *)(v83 + 64) = v85;
                *(void *)(v83 + 32) = v84;
                uint64_t v86 = sub_251F35710();
                uint64_t v126 = v87;
                swift_bridgeObjectRelease();
                uint64_t v88 = swift_bridgeObjectRelease();
                uint64_t v89 = MEMORY[0x270FA5388](v88);
                unint64_t v91 = (char *)&v106 - ((v90 + 15) & 0xFFFFFFFFFFFFFFF0);
                MEMORY[0x270FA5388](v89);
                uint64_t v92 = (char *)&v106 - v125;
                sub_251A1B128((uint64_t)v78, (uint64_t)&v106 - v125, &qword_26B21FF90);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48))(v92, 1, v79) == 1)
                {
                  sub_251F34D90();
                  sub_251A1B064((uint64_t)v78, &qword_26B21FF90);
                  sub_251A1B064((uint64_t)v92, &qword_26B21FF90);
                  uint64_t v93 = *(void (**)(char *, char *, uint64_t))(v80 + 32);
                }
                else
                {
                  sub_251A1B064((uint64_t)v78, &qword_26B21FF90);
                  uint64_t v93 = *(void (**)(char *, char *, uint64_t))(v80 + 32);
                  v93(v91, v92, v79);
                }
                uint64_t v94 = (uint64_t)v107;
                v93(v107, v91, v79);
                int64_t v95 = (int *)v108;
                unint64_t v96 = (void *)(v94 + *(int *)(v108 + 20));
                *unint64_t v96 = 0xD000000000000010;
                v96[1] = 0x8000000251F6AB70;
                uint64_t v97 = (int64_t *)(v94 + v95[6]);
                *uint64_t v97 = v128;
                v97[1] = (int64_t)v127;
                uint64_t v98 = (uint64_t *)(v94 + v95[7]);
                uint64_t v99 = v126;
                *uint64_t v98 = v86;
                v98[1] = v99;
                uint64_t v100 = v94 + v95[8];
                *(void *)uint64_t v100 = 0;
                *(void *)(v100 + 8) = 0;
                *(void *)(v100 + 16) = 0;
                *(unsigned char *)(v100 + 24) = -1;
                uint64_t v101 = v106;
                uint64_t v102 = sub_251B55688(v94, v106, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
                MEMORY[0x270FA5388](v102);
                *(&v106 - 2) = v75;
                uint64_t v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF78);
                uint64_t v103 = (uint64_t)v109;
                sub_251F34EF0();
                swift_bridgeObjectRelease();
                swift_storeEnumTagMultiPayload();
                uint64_t v104 = v112;
                sub_251B55688(v103, v101 + *(int *)(v112 + 20), (uint64_t (*)(void))type metadata accessor for TilesFilter);
                uint64_t v105 = v113;
                sub_251B55688(v101, v113, type metadata accessor for SpeakerStatusItem);
                return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v111 + 56))(v105, 0, 1, v104);
              }
              else
              {
                swift_bridgeObjectRelease();
                return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v111 + 56))(v113, 1, 1, v112);
              }
            }
            unint64_t v61 = v124[v60];
            ++v51;
            if (!v61)
            {
              int64_t v51 = v60 + 1;
              if (v60 + 1 >= v128) {
                goto LABEL_56;
              }
              unint64_t v61 = v124[v51];
              if (!v61)
              {
                int64_t v51 = v60 + 2;
                if (v60 + 2 >= v128) {
                  goto LABEL_56;
                }
                unint64_t v61 = v124[v51];
                if (!v61)
                {
                  int64_t v62 = v60 + 3;
                  if (v62 >= v128) {
                    goto LABEL_56;
                  }
                  unint64_t v61 = v124[v62];
                  if (!v61)
                  {
                    while (1)
                    {
                      int64_t v51 = v62 + 1;
                      if (__OFADD__(v62, 1)) {
                        goto LABEL_65;
                      }
                      if (v51 >= v128) {
                        goto LABEL_56;
                      }
                      unint64_t v61 = v124[v51];
                      ++v62;
                      if (v61) {
                        goto LABEL_44;
                      }
                    }
                  }
                  int64_t v51 = v62;
                }
              }
            }
LABEL_44:
            unint64_t v55 = (v61 - 1) & v61;
            unint64_t v59 = __clz(__rbit64(v61)) + (v51 << 6);
          }
          uint64_t v63 = v125;
          sub_251B556F0(*(void *)(v31 + 48) + *(void *)(v126 + 72) * v59, v125, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
          sub_251B55688(v63, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
          sub_251A1B128((uint64_t)&v12[*(int *)(v57 + 72)], v32, &qword_26B21F090);
          if ((*v56)(v32, 1, v33) != 1) {
            break;
          }
          sub_251B55758((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
          uint64_t result = sub_251A1B064(v32, &qword_26B21F090);
        }
        sub_251B55688(v32, v34, type metadata accessor for StaticAccessory.DeviceIdentifier);
        uint64_t v64 = v130;
        swift_bridgeObjectRetain();
        char v65 = sub_251DB41F4(v34, v64);
        swift_bridgeObjectRelease();
        if (v65)
        {
          sub_251B55758(v34, type metadata accessor for StaticAccessory.DeviceIdentifier);
          uint64_t v12 = v127;
          uint64_t result = sub_251B55758((uint64_t)v127, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
          goto LABEL_27;
        }
        uint64_t v57 = v120;
        uint64_t v12 = v127;
        if (v127[*(int *)(v120 + 76)] == 1)
        {
          unsigned int v66 = *(unsigned __int16 *)&v127[*(int *)(v120 + 88)];
          if ((~v66 & 0xFEFC) != 0) {
            break;
          }
        }
LABEL_49:
        sub_251B55758(v34, type metadata accessor for StaticAccessory.DeviceIdentifier);
        uint64_t result = sub_251B55758((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
      }
      if (v66 >> 14)
      {
        if (v66 >> 14 == 1)
        {
          if ((v66 & 0x100) == 0) {
            goto LABEL_49;
          }
        }
        else if (v66 == 32771)
        {
          goto LABEL_49;
        }
      }
      uint64_t v67 = sub_251F34DA0();
      uint64_t v68 = *(void *)(v67 - 8);
      uint64_t v69 = MEMORY[0x270FA5388](v67);
      int v71 = (char *)&v106 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0);
      MEMORY[0x270FA5388](v69);
      uint64_t v73 = (char *)&v106 - v72;
      (*(void (**)(char *, char *, uint64_t))(v68 + 16))((char *)&v106 - v72, v12, v67);
      sub_251A637B8(v71, v73);
      uint64_t v12 = v127;
      uint64_t v74 = v67;
      uint64_t v57 = v120;
      (*(void (**)(char *, uint64_t))(v68 + 8))(v71, v74);
      sub_251B55758(v118, type metadata accessor for StaticAccessory.DeviceIdentifier);
      uint64_t result = sub_251B55758((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
      uint64_t v31 = v117;
      uint64_t v34 = v118;
      uint64_t v33 = v115;
      uint64_t v32 = (uint64_t)v116;
    }
  }
  unint64_t v35 = *(void *)(v121 + 8 * v37);
  if (v35)
  {
    int64_t v36 = v23 + 4;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v36 = v37 + 1;
    if (__OFADD__(v37, 1)) {
      break;
    }
    if (v36 >= v122) {
      goto LABEL_23;
    }
    unint64_t v35 = *(void *)(v121 + 8 * v36);
    ++v37;
    if (v35) {
      goto LABEL_20;
    }
  }
LABEL_64:
  __break(1u);
LABEL_65:
  __break(1u);
  return result;
}

uint64_t sub_251B54744@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC38);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v19 = v4;
  uint64_t v20 = v5;
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC40);
  sub_251F34980();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E880);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E888);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1E590(&qword_269B9E890, &qword_269B9E888);
  sub_251F34990();
  swift_getKeyPath();
  sub_251F34920();
  swift_release();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  a2[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E898);
  a2[4] = sub_251B55808();
  __swift_allocate_boxed_opaque_existential_1(a2);
  sub_251A1E590(&qword_269B9CCA0, &qword_269B9CC38);
  sub_251A1E590(&qword_269B9E8B8, &qword_269B9E880);
  sub_251A1E5D4();
  sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
  uint64_t v16 = v19;
  sub_251F34940();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v7, v16);
}

uint64_t sub_251B54A80@<X0>(uint64_t a1@<X8>)
{
  return sub_251B556F0(v1, a1, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
}

uint64_t sub_251B54AB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_251B556F0(v2 + *(int *)(a1 + 20), a2, (uint64_t (*)(void))type metadata accessor for TilesFilter);
}

uint64_t sub_251B54AEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for TilesFilter();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for IconTextValueStringDataHolder();
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TelevisionStatusItem(0);
  uint64_t v62 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_251B53348(MEMORY[0x263F8EE88], a1, (uint64_t (*)(char *))sub_251B5510C, 0);
  swift_bridgeObjectRelease();
  if (*(void *)(v13 + 16))
  {
    unint64_t v55 = (int *)v7;
    uint64_t v57 = v12;
    unint64_t v58 = v6;
    uint64_t v59 = v4;
    uint64_t v60 = v10;
    uint64_t v61 = a2;
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    uint64_t v54 = v48;
    v48[1] = *(void *)(*(void *)(v14 - 8) + 64);
    MEMORY[0x270FA5388](v14 - 8);
    unint64_t v49 = (v15 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v16 = (char *)v48 - v49;
    uint64_t v17 = sub_251F34DA0();
    uint64_t v18 = v13;
    uint64_t v19 = *(void *)(v17 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v16, 1, 1, v17);
    uint64_t v20 = static String.hfLocalized(_:)(0xD000000000000024, 0x8000000251F6AB20);
    uint64_t v52 = v21;
    uint64_t v53 = v20;
    static String.hfLocalized(_:)(0xD000000000000017, 0x8000000251F6AB50);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_251F38650;
    uint64_t v56 = v18;
    uint64_t v23 = *(void *)(v18 + 16);
    uint64_t v24 = MEMORY[0x263F8D750];
    *(void *)(v22 + 56) = MEMORY[0x263F8D6C8];
    *(void *)(v22 + 64) = v24;
    *(void *)(v22 + 32) = v23;
    uint64_t v25 = sub_251F35710();
    uint64_t v50 = v26;
    uint64_t v51 = v25;
    swift_bridgeObjectRelease();
    uint64_t v27 = swift_bridgeObjectRelease();
    uint64_t v28 = v17;
    uint64_t v29 = MEMORY[0x270FA5388](v27);
    uint64_t v31 = (char *)v48 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
    MEMORY[0x270FA5388](v29);
    uint64_t v32 = (char *)v48 - v49;
    sub_251A1B128((uint64_t)v16, (uint64_t)v48 - v49, &qword_26B21FF90);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v32, 1, v28) == 1)
    {
      sub_251F34D90();
      sub_251A1B064((uint64_t)v16, &qword_26B21FF90);
      sub_251A1B064((uint64_t)v32, &qword_26B21FF90);
      uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
    }
    else
    {
      sub_251A1B064((uint64_t)v16, &qword_26B21FF90);
      uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
      v33(v31, v32, v28);
    }
    int64_t v36 = v55;
    v33(v9, v31, v28);
    int64_t v37 = &v9[v36[5]];
    *(void *)int64_t v37 = 0x6C6C69662E7674;
    *((void *)v37 + 1) = 0xE700000000000000;
    uint64_t v38 = &v9[v36[6]];
    uint64_t v39 = v52;
    *(void *)uint64_t v38 = v53;
    *((void *)v38 + 1) = v39;
    uint64_t v40 = &v9[v36[7]];
    uint64_t v41 = v50;
    *(void *)uint64_t v40 = v51;
    *((void *)v40 + 1) = v41;
    uint64_t v42 = &v9[v36[8]];
    *(void *)uint64_t v42 = 0;
    *((void *)v42 + 1) = 0;
    *((void *)v42 + 2) = 0;
    v42[24] = -1;
    uint64_t v43 = (uint64_t)v57;
    uint64_t v44 = sub_251B55688((uint64_t)v9, (uint64_t)v57, (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
    MEMORY[0x270FA5388](v44);
    v48[-2] = v56;
    uint64_t v63 = type metadata accessor for StaticService();
    uint64_t v45 = (uint64_t)v58;
    sub_251F34EF0();
    swift_bridgeObjectRelease();
    swift_storeEnumTagMultiPayload();
    uint64_t v46 = v60;
    sub_251B55688(v45, v43 + *(int *)(v60 + 20), (uint64_t (*)(void))type metadata accessor for TilesFilter);
    uint64_t v47 = v61;
    sub_251B55688(v43, v61, type metadata accessor for TelevisionStatusItem);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v62 + 56))(v47, 0, 1, v46);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v62 + 56);
    return v34(a2, 1, 1, v10);
  }
}

BOOL sub_251B5510C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StaticService();
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = MEMORY[0x270FA5388](v3);
  uint64_t v8 = &v14[-v7];
  int v9 = *(unsigned __int8 *)(a1 + *(int *)(v6 + 80));
  sub_251B556F0(a1, (uint64_t)&v14[-v7], (uint64_t (*)(void))type metadata accessor for StaticService);
  if (v9 == 1)
  {
    v14[15] = v8[*(int *)(v2 + 88)];
    if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v10 == 0x8000000251F650A0)
    {
      swift_bridgeObjectRelease();
      sub_251B55758((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticService);
      sub_251B556F0(a1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticService);
LABEL_7:
      BOOL v11 = StaticService.isActivated.getter();
      goto LABEL_8;
    }
    char v12 = sub_251F36B10();
    swift_bridgeObjectRelease();
    sub_251B55758((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticService);
    sub_251B556F0(a1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticService);
    BOOL v11 = 0;
    if (v12) {
      goto LABEL_7;
    }
  }
  else
  {
    sub_251B55758((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticService);
    sub_251B556F0(a1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticService);
    BOOL v11 = 0;
  }
LABEL_8:
  sub_251B55758((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticService);
  return v11;
}

uint64_t sub_251B55344@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC38);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v19 = v4;
  uint64_t v20 = v5;
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC40);
  sub_251F34980();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC48);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  BOOL v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC50);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1E590(&qword_269B9CC58, &qword_269B9CC50);
  sub_251F34990();
  swift_getKeyPath();
  sub_251F34920();
  swift_release();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  a2[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC60);
  a2[4] = sub_251A1E358();
  __swift_allocate_boxed_opaque_existential_1(a2);
  sub_251A1E590(&qword_269B9CCA0, &qword_269B9CC38);
  sub_251A1E590(&qword_269B9CCA8, &qword_269B9CC48);
  sub_251A1E5D4();
  sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
  uint64_t v16 = v19;
  sub_251F34940();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v7, v16);
}

uint64_t sub_251B55680@<X0>(uint64_t *a1@<X8>)
{
  return sub_251B55344(*(void *)(v1 + 16), a1);
}

uint64_t sub_251B55688(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_251B556F0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_251B55758(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_251B557B8@<X0>(uint64_t *a1@<X8>)
{
  return sub_251B54744(*(void *)(v1 + 16), a1);
}

uint64_t sub_251B557C0(void *a1)
{
  return sub_251F36420();
}

unint64_t sub_251B55808()
{
  unint64_t result = qword_269B9E8A0;
  if (!qword_269B9E8A0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B9E898);
    sub_251A1E3C8();
    sub_251B55898(&qword_269B9E8A8, &qword_269B9E880, &qword_269B9E8B0, &qword_269B9E888);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E8A0);
  }
  return result;
}

uint64_t sub_251B55898(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    sub_251A1E590(a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

int *IconTextValueStringDataHolder.init(id:iconSymbol:label:valueString:attachedData:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X7>, char *a9@<X8>)
{
  uint64_t v37 = a6;
  uint64_t v38 = a7;
  uint64_t v32 = a5;
  uint64_t v14 = *a8;
  uint64_t v35 = a8[1];
  uint64_t v36 = v14;
  uint64_t v34 = a8[2];
  int v33 = *((unsigned __int8 *)a8 + 24);
  uint64_t v15 = sub_251F34DA0();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v21 = (char *)&v31 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1E280(a1, (uint64_t)v21);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v21, 1, v15) == 1)
  {
    sub_251F34D90();
    sub_251B55B48(a1);
    sub_251B55B48((uint64_t)v21);
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(a9, v18, v15);
  }
  else
  {
    sub_251B55B48(a1);
    uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
    v22(v18, v21, v15);
    v22(a9, v18, v15);
  }
  uint64_t result = (int *)type metadata accessor for IconTextValueStringDataHolder();
  uint64_t v24 = &a9[result[5]];
  *(void *)uint64_t v24 = a2;
  *((void *)v24 + 1) = a3;
  uint64_t v25 = &a9[result[6]];
  uint64_t v26 = v32;
  *(void *)uint64_t v25 = a4;
  *((void *)v25 + 1) = v26;
  uint64_t v27 = &a9[result[7]];
  uint64_t v28 = v38;
  *(void *)uint64_t v27 = v37;
  *((void *)v27 + 1) = v28;
  uint64_t v29 = &a9[result[8]];
  uint64_t v30 = v35;
  *(void *)uint64_t v29 = v36;
  *((void *)v29 + 1) = v30;
  *((void *)v29 + 2) = v34;
  v29[24] = v33;
  return result;
}

uint64_t sub_251B55B48(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for IconTextValueStringDataHolder()
{
  uint64_t result = qword_269B9E978;
  if (!qword_269B9E978) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t IconTextValueStringDataHolder.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_251F34DA0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t IconTextValueStringDataHolder.iconSymbol.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for IconTextValueStringDataHolder() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t IconTextValueStringDataHolder.label.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for IconTextValueStringDataHolder() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t IconTextValueStringDataHolder.valueString.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for IconTextValueStringDataHolder() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t IconTextValueStringDataHolder.attachedData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for IconTextValueStringDataHolder() + 32);
  uint64_t v4 = *(void *)v3;
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v6 = *(void *)(v3 + 16);
  *(void *)a1 = *(void *)v3;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  char v7 = *(unsigned char *)(v3 + 24);
  *(unsigned char *)(a1 + 24) = v7;
  return sub_251B55D74(v4, v5, v6, v7);
}

uint64_t sub_251B55D74(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 != -1) {
    return sub_251A1B4AC(a1, a2, a3, a4);
  }
  return a1;
}

uint64_t IconTextValueStringDataHolder.hash(into:)(uint64_t a1)
{
  sub_251F34DA0();
  sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
  sub_251F35610();
  uint64_t v3 = type metadata accessor for IconTextValueStringDataHolder();
  swift_bridgeObjectRetain();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  if (*(void *)(v1 + *(int *)(v3 + 28) + 8))
  {
    sub_251F36CC0();
    swift_bridgeObjectRetain();
    sub_251F357B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_251F36CC0();
  }
  uint64_t v4 = v1 + *(int *)(v3 + 32);
  int v5 = *(unsigned __int8 *)(v4 + 24);
  if (v5 == 255) {
    return sub_251F36CC0();
  }
  uint64_t v7 = *(void *)v4;
  sub_251F36CC0();
  if (v5)
  {
    if (v5 == 1)
    {
      sub_251F36CB0();
      sub_251F36CF0();
      sub_251F36CF0();
      return sub_251F36CF0();
    }
    else
    {
      sub_251F36CB0();
      return sub_251A41A94(a1, v7);
    }
  }
  else
  {
    sub_251F36CB0();
    return sub_251F36CB0();
  }
}

uint64_t sub_251B55F64()
{
  uint64_t result = 25705;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x626D79536E6F6369;
      break;
    case 2:
      uint64_t result = 0x6C6562616CLL;
      break;
    case 3:
      uint64_t result = 0x72745365756C6176;
      break;
    case 4:
      uint64_t result = 0x6465686361747461;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_251B56014@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251B59F90(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251B5603C(uint64_t a1)
{
  unint64_t v2 = sub_251B57EA8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251B56078(uint64_t a1)
{
  unint64_t v2 = sub_251B57EA8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t IconTextValueStringDataHolder.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E8C0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251B57EA8();
  sub_251F36DA0();
  LOBYTE(v15) = 0;
  sub_251F34DA0();
  sub_251A1A8EC(&qword_26B21E348);
  sub_251F36A20();
  if (!v2)
  {
    uint64_t v9 = type metadata accessor for IconTextValueStringDataHolder();
    LOBYTE(v15) = 1;
    sub_251F369D0();
    LOBYTE(v15) = 2;
    sub_251F369D0();
    LOBYTE(v15) = 3;
    sub_251F36910();
    uint64_t v10 = (long long *)(v3 + *(int *)(v9 + 32));
    uint64_t v11 = *((void *)v10 + 2);
    char v12 = *((unsigned char *)v10 + 24);
    long long v15 = *v10;
    uint64_t v16 = v11;
    char v17 = v12;
    v14[15] = 4;
    sub_251B57EFC();
    sub_251F36970();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t IconTextValueStringDataHolder.hashValue.getter()
{
  sub_251F36CA0();
  IconTextValueStringDataHolder.hash(into:)((uint64_t)v1);
  return sub_251F36D00();
}

uint64_t IconTextValueStringDataHolder.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v34 = a2;
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E8D8);
  uint64_t v4 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (int *)type metadata accessor for IconTextValueStringDataHolder();
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251B57EA8();
  sub_251F36D90();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  uint64_t v31 = v9;
  uint64_t v32 = a1;
  uint64_t v33 = v4;
  uint64_t v10 = sub_251F34DA0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v36) = 0;
  sub_251A1A8EC(&qword_269B9CC80);
  uint64_t v14 = v35;
  sub_251F36880();
  uint64_t v30 = v11;
  long long v15 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  uint64_t v16 = (uint64_t)v31;
  v15(v31, v13, v10);
  LOBYTE(v36) = 1;
  uint64_t v17 = sub_251F36830();
  uint64_t v18 = (uint64_t *)(v16 + v7[5]);
  *uint64_t v18 = v17;
  v18[1] = v19;
  LOBYTE(v36) = 2;
  uint64_t v20 = sub_251F36830();
  uint64_t v21 = (uint64_t *)(v16 + v7[6]);
  *uint64_t v21 = v20;
  v21[1] = v22;
  LOBYTE(v36) = 3;
  uint64_t v23 = sub_251F36790();
  uint64_t v24 = (uint64_t *)(v16 + v7[7]);
  *uint64_t v24 = v23;
  v24[1] = v25;
  char v39 = 4;
  sub_251B57F50();
  sub_251F367D0();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v6, v14);
  uint64_t v26 = v37;
  char v27 = v38;
  uint64_t v28 = v16 + v7[8];
  *(_OWORD *)uint64_t v28 = v36;
  *(void *)(v28 + 16) = v26;
  *(unsigned char *)(v28 + 24) = v27;
  sub_251B57FA4(v16, v34);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v32);
  return sub_251B58008(v16);
}

uint64_t sub_251B56800()
{
  sub_251F36CA0();
  IconTextValueStringDataHolder.hash(into:)((uint64_t)v1);
  return sub_251F36D00();
}

uint64_t sub_251B56844()
{
  sub_251F36CA0();
  IconTextValueStringDataHolder.hash(into:)((uint64_t)v1);
  return sub_251F36D00();
}

uint64_t sub_251B56880@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return IconTextValueStringDataHolder.init(from:)(a1, a2);
}

uint64_t sub_251B56898(void *a1)
{
  return IconTextValueStringDataHolder.encode(to:)(a1);
}

uint64_t IconTextValueStringDataHolder.AttachedData.description.getter()
{
  uint64_t v1 = *v0;
  int v2 = *((unsigned __int8 *)v0 + 24);
  if (v2 == 2)
  {
    strcpy(v5, ".serviceIDs(");
    v5[13] = 0;
    *(_WORD *)&v5[14] = -5120;
    uint64_t v3 = sub_251F34DA0();
    MEMORY[0x2533AAA10](v1, v3);
    sub_251F35800();
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  if (v2 == 1)
  {
    uint64_t v6 = 0x614465677561672ELL;
    unint64_t v7 = 0xEB00000000286174;
    *(void *)uint64_t v5 = v1;
    *(_OWORD *)&v5[8] = *(_OWORD *)(v0 + 1);
    GaugeDataHolder.description.getter();
    sub_251F35800();
    swift_bridgeObjectRelease();
    sub_251F35800();
    return 0x614465677561672ELL;
  }
  else
  {
    if (!*((unsigned char *)v0 + 24))
    {
      *(void *)uint64_t v5 = 0;
      *(void *)&v5[8] = 0xE000000000000000;
      sub_251F36400();
      sub_251F35800();
      LOBYTE(v6) = v1;
      sub_251F36640();
LABEL_6:
      sub_251F35800();
      return *(void *)v5;
    }
    return 0x6E776F6E6B6E75;
  }
}

uint64_t IconTextValueStringDataHolder.AttachedData.debugDescription.getter()
{
  return IconTextValueStringDataHolder.AttachedData.description.getter();
}

uint64_t IconTextValueStringDataHolder.AttachedData.hash(into:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)v2;
  if (*(unsigned char *)(v2 + 24))
  {
    if (*(unsigned char *)(v2 + 24) == 1)
    {
      sub_251F36CB0();
      sub_251F36CF0();
      sub_251F36CF0();
      return sub_251F36CF0();
    }
    else
    {
      sub_251F36CB0();
      return sub_251A41A94(a1, v4);
    }
  }
  else
  {
    sub_251F36CB0();
    return sub_251F36CB0();
  }
}

uint64_t sub_251B56B38()
{
  uint64_t v1 = 0x7461446567756167;
  if (*v0 != 1) {
    uint64_t v1 = 0x4965636976726573;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x7974697275636573;
  }
}

uint64_t sub_251B56BA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251B5A1CC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251B56BD0(uint64_t a1)
{
  unint64_t v2 = sub_251B5872C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251B56C0C(uint64_t a1)
{
  unint64_t v2 = sub_251B5872C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251B56C48(uint64_t a1)
{
  unint64_t v2 = sub_251B587D4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251B56C84(uint64_t a1)
{
  unint64_t v2 = sub_251B587D4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251B56CC0(uint64_t a1)
{
  unint64_t v2 = sub_251B5887C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251B56CFC(uint64_t a1)
{
  unint64_t v2 = sub_251B5887C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251B56D38(uint64_t a1)
{
  unint64_t v2 = sub_251B58780();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251B56D74(uint64_t a1)
{
  unint64_t v2 = sub_251B58780();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t IconTextValueStringDataHolder.AttachedData.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E8E8);
  uint64_t v27 = *(void *)(v3 - 8);
  uint64_t v28 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v26 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E8F0);
  uint64_t v24 = *(void *)(v5 - 8);
  uint64_t v25 = v5;
  MEMORY[0x270FA5388](v5);
  unint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E8F8);
  uint64_t v23 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E900);
  uint64_t v30 = *(void *)(v11 - 8);
  uint64_t v31 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = *v1;
  uint64_t v14 = v1[1];
  uint64_t v15 = v1[2];
  int v16 = *((unsigned __int8 *)v1 + 24);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251B5872C();
  sub_251F36DA0();
  if (v16)
  {
    if (v16 == 1)
    {
      LOBYTE(v32) = 1;
      sub_251B587D4();
      uint64_t v17 = v31;
      sub_251F36900();
      uint64_t v32 = v29;
      uint64_t v33 = v14;
      uint64_t v34 = v15;
      sub_251B58828();
      uint64_t v18 = v25;
      sub_251F36A20();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v18);
      return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v13, v17);
    }
    LOBYTE(v32) = 2;
    sub_251B58780();
    uint64_t v21 = v26;
    uint64_t v20 = v31;
    sub_251F36900();
    uint64_t v32 = v29;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2C8);
    sub_251AB8C90(&qword_269B9D7E8, &qword_26B21E348);
    uint64_t v22 = v28;
    sub_251F36A20();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v21, v22);
  }
  else
  {
    LOBYTE(v32) = 0;
    sub_251B5887C();
    uint64_t v20 = v31;
    sub_251F36900();
    LOBYTE(v32) = v29;
    sub_251B588D0();
    sub_251F36A20();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v8);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v13, v20);
}

uint64_t IconTextValueStringDataHolder.AttachedData.hashValue.getter()
{
  uint64_t v1 = *(void *)v0;
  int v2 = *(unsigned __int8 *)(v0 + 24);
  sub_251F36CA0();
  if (v2)
  {
    sub_251F36CB0();
    if (v2 == 1)
    {
      sub_251F36CF0();
      sub_251F36CF0();
      sub_251F36CF0();
    }
    else
    {
      sub_251A41A94((uint64_t)v4, v1);
    }
  }
  else
  {
    sub_251F36CB0();
    sub_251F36CB0();
  }
  return sub_251F36D00();
}

uint64_t IconTextValueStringDataHolder.AttachedData.init(from:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v34 = a2;
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E938);
  uint64_t v30 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v35 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E940);
  uint64_t v29 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E948);
  uint64_t v32 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E950);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  long long v36 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_251B5872C();
  uint64_t v14 = v39;
  sub_251F36D90();
  if (v14) {
    goto LABEL_7;
  }
  uint64_t v39 = v10;
  uint64_t v15 = sub_251F368E0();
  if (*(void *)(v15 + 16) != 1)
  {
    uint64_t v19 = sub_251F36490();
    swift_allocError();
    uint64_t v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D440);
    *uint64_t v21 = &type metadata for IconTextValueStringDataHolder.AttachedData;
    sub_251F36780();
    sub_251F36480();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v19 - 8) + 104))(v21, *MEMORY[0x263F8DCB0], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v12, v9);
LABEL_7:
    uint64_t v22 = (uint64_t)v36;
    return __swift_destroy_boxed_opaque_existential_0(v22);
  }
  int v16 = *(unsigned __int8 *)(v15 + 32);
  if (*(unsigned char *)(v15 + 32))
  {
    if (v16 == 1)
    {
      LOBYTE(v37) = 1;
      sub_251B587D4();
      sub_251F36770();
      sub_251B58924();
      uint64_t v17 = v31;
      sub_251F36880();
      uint64_t v18 = v39;
      (*(void (**)(char *, uint64_t))(v29 + 8))(v5, v17);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v12, v9);
      long long v26 = v37;
      uint64_t v27 = v38;
    }
    else
    {
      LOBYTE(v37) = 2;
      sub_251B58780();
      sub_251F36770();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2C8);
      sub_251AB8C90(&qword_269B9D7F8, &qword_269B9CC80);
      uint64_t v24 = v33;
      uint64_t v25 = v35;
      sub_251F36880();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v25, v24);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v12, v9);
      uint64_t v27 = 0;
      *(void *)&long long v26 = v37;
    }
  }
  else
  {
    uint64_t v35 = (char *)v15;
    LOBYTE(v37) = 0;
    sub_251B5887C();
    sub_251F36770();
    sub_251B58978();
    sub_251F36880();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v8, v6);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v12, v9);
    uint64_t v27 = 0;
    long long v26 = v37;
  }
  uint64_t v22 = (uint64_t)v36;
  uint64_t v28 = v34;
  *uint64_t v34 = v26;
  *((void *)v28 + 2) = v27;
  *((unsigned char *)v28 + 24) = v16;
  return __swift_destroy_boxed_opaque_existential_0(v22);
}

uint64_t sub_251B5798C()
{
  uint64_t v1 = *(void *)v0;
  int v2 = *(unsigned __int8 *)(v0 + 24);
  sub_251F36CA0();
  if (v2)
  {
    sub_251F36CB0();
    if (v2 == 1)
    {
      sub_251F36CF0();
      sub_251B57E5C();
    }
    else
    {
      sub_251A41A94((uint64_t)v4, v1);
    }
  }
  else
  {
    sub_251F36CB0();
    sub_251F36CB0();
  }
  return sub_251F36D00();
}

uint64_t sub_251B57A44@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return IconTextValueStringDataHolder.AttachedData.init(from:)(a1, a2);
}

uint64_t sub_251B57A5C(void *a1)
{
  return IconTextValueStringDataHolder.AttachedData.encode(to:)(a1);
}

uint64_t sub_251B57A78()
{
  return IconTextValueStringDataHolder.AttachedData.description.getter();
}

int *IconTextValueStringDataHolder.init(value:valueRange:iconSymbol:label:valueString:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>, double a8@<D0>, double a9@<D1>, double a10@<D2>)
{
  sub_251F34D90();
  uint64_t result = (int *)type metadata accessor for IconTextValueStringDataHolder();
  uint64_t v21 = (void *)(a7 + result[5]);
  *uint64_t v21 = a1;
  v21[1] = a2;
  uint64_t v22 = (void *)(a7 + result[6]);
  *uint64_t v22 = a3;
  v22[1] = a4;
  uint64_t v23 = (void *)(a7 + result[7]);
  *uint64_t v23 = a5;
  v23[1] = a6;
  uint64_t v24 = a7 + result[8];
  *(double *)uint64_t v24 = a8;
  *(double *)(v24 + 8) = a9;
  *(double *)(v24 + 16) = a10;
  *(unsigned char *)(v24 + 24) = 1;
  return result;
}

uint64_t IconTextValueStringDataHolder.description.getter()
{
  sub_251F36400();
  sub_251F35800();
  sub_251F34D40();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  uint64_t v1 = type metadata accessor for IconTextValueStringDataHolder();
  swift_bridgeObjectRetain();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  swift_bridgeObjectRetain();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  if (*(void *)(v0 + *(int *)(v1 + 28) + 8))
  {
    sub_251F36400();
    swift_bridgeObjectRelease();
    sub_251F35800();
    sub_251F35800();
    sub_251F35800();
    swift_bridgeObjectRelease();
  }
  if (*(unsigned __int8 *)(v0 + *(int *)(v1 + 32) + 24) != 255)
  {
    sub_251F36400();
    swift_bridgeObjectRelease();
    IconTextValueStringDataHolder.AttachedData.description.getter();
    sub_251F35800();
    swift_bridgeObjectRelease();
    sub_251F35800();
    swift_bridgeObjectRelease();
  }
  sub_251F35800();
  return 0;
}

BOOL sub_251B57E00(uint64_t a1, uint64_t a2)
{
  return (_s13HomeDataModel019IconTextValueStringB6HolderV1loiySbAC_ACtFZ_0(a2, a1) & 1) == 0;
}

BOOL sub_251B57E2C(uint64_t a1, uint64_t a2)
{
  return (_s13HomeDataModel019IconTextValueStringB6HolderV1loiySbAC_ACtFZ_0(a1, a2) & 1) == 0;
}

uint64_t sub_251B57E4C(uint64_t a1, uint64_t a2)
{
  return _s13HomeDataModel019IconTextValueStringB6HolderV1loiySbAC_ACtFZ_0(a2, a1);
}

uint64_t sub_251B57E5C()
{
  return sub_251F36CF0();
}

unint64_t sub_251B57EA8()
{
  unint64_t result = qword_269B9E8C8;
  if (!qword_269B9E8C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E8C8);
  }
  return result;
}

unint64_t sub_251B57EFC()
{
  unint64_t result = qword_269B9E8D0;
  if (!qword_269B9E8D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E8D0);
  }
  return result;
}

unint64_t sub_251B57F50()
{
  unint64_t result = qword_269B9E8E0;
  if (!qword_269B9E8E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E8E0);
  }
  return result;
}

uint64_t sub_251B57FA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for IconTextValueStringDataHolder();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_251B58008(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for IconTextValueStringDataHolder();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

BOOL _s13HomeDataModel019IconTextValueStringB6HolderV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (int *)type metadata accessor for IconTextValueStringDataHolder();
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v56 - v9;
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)&v56 - v12;
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  int v16 = (char *)&v56 - v15;
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v19 = (char *)&v56 - v18;
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  uint64_t v22 = (char *)&v56 - v21;
  uint64_t v23 = *(int *)(v20 + 20);
  uint64_t v24 = *(void *)(a1 + v23);
  uint64_t v25 = *(void *)(a1 + v23 + 8);
  long long v26 = (void *)(a2 + v23);
  if (v24 == *v26 && v25 == v26[1])
  {
    sub_251B57FA4(a1, (uint64_t)&v56 - v21);
    sub_251B57FA4(a2, (uint64_t)v19);
  }
  else
  {
    char v28 = sub_251F36B10();
    sub_251B57FA4(a1, (uint64_t)v22);
    sub_251B57FA4(a2, (uint64_t)v19);
    if ((v28 & 1) == 0) {
      goto LABEL_29;
    }
  }
  uint64_t v29 = v4[6];
  uint64_t v30 = *(void *)&v22[v29];
  uint64_t v31 = *(void *)&v22[v29 + 8];
  uint64_t v32 = &v19[v29];
  if (v30 == *(void *)v32 && v31 == *((void *)v32 + 1))
  {
    sub_251B57FA4((uint64_t)v22, (uint64_t)v16);
    sub_251B57FA4((uint64_t)v19, (uint64_t)v13);
  }
  else
  {
    char v34 = sub_251F36B10();
    sub_251B57FA4((uint64_t)v22, (uint64_t)v16);
    sub_251B57FA4((uint64_t)v19, (uint64_t)v13);
    if ((v34 & 1) == 0)
    {
      sub_251B58008((uint64_t)v13);
      sub_251B58008((uint64_t)v16);
LABEL_27:
      sub_251B57FA4((uint64_t)v22, (uint64_t)v10);
      sub_251B57FA4((uint64_t)v19, (uint64_t)v7);
      goto LABEL_28;
    }
  }
  uint64_t v35 = v4[7];
  long long v36 = &v16[v35];
  uint64_t v37 = *(void *)&v16[v35 + 8];
  uint64_t v38 = &v13[v35];
  uint64_t v39 = *((void *)v38 + 1);
  if (!v37)
  {
    swift_bridgeObjectRetain();
    sub_251B58008((uint64_t)v13);
    sub_251B58008((uint64_t)v16);
    if (!v39)
    {
LABEL_33:
      sub_251B57FA4((uint64_t)v22, (uint64_t)v10);
      sub_251B57FA4((uint64_t)v19, (uint64_t)v7);
      goto LABEL_34;
    }
LABEL_26:
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
  if (!v39)
  {
    swift_bridgeObjectRetain();
    sub_251B58008((uint64_t)v13);
    sub_251B58008((uint64_t)v16);
    goto LABEL_26;
  }
  if (*(void *)v36 == *(void *)v38 && v37 == v39)
  {
    swift_bridgeObjectRetain();
    sub_251B58008((uint64_t)v13);
    sub_251B58008((uint64_t)v16);
    swift_bridgeObjectRelease();
    goto LABEL_33;
  }
  char v41 = sub_251F36B10();
  swift_bridgeObjectRetain();
  sub_251B58008((uint64_t)v13);
  sub_251B58008((uint64_t)v16);
  swift_bridgeObjectRelease();
  sub_251B57FA4((uint64_t)v22, (uint64_t)v10);
  sub_251B57FA4((uint64_t)v19, (uint64_t)v7);
  if ((v41 & 1) == 0)
  {
LABEL_28:
    sub_251B58008((uint64_t)v7);
    sub_251B58008((uint64_t)v10);
LABEL_29:
    sub_251B58008((uint64_t)v19);
    sub_251B58008((uint64_t)v22);
    return 0;
  }
LABEL_34:
  uint64_t v44 = v4[8];
  uint64_t v46 = *(void *)&v10[v44];
  uint64_t v45 = *(void *)&v10[v44 + 8];
  uint64_t v47 = *(void *)&v10[v44 + 16];
  int v48 = v10[v44 + 24];
  unint64_t v49 = &v7[v44];
  uint64_t v51 = *(void *)v49;
  uint64_t v50 = *((void *)v49 + 1);
  uint64_t v52 = *((void *)v49 + 2);
  int v53 = v49[24];
  if (v48 == 255)
  {
    uint64_t v54 = *(void *)v49;
    uint64_t v55 = *((void *)v49 + 1);
    uint64_t v56 = *((void *)v49 + 2);
    uint64_t v57 = v50;
    sub_251B55D74(v54, v55, v52, v53);
    sub_251B58008((uint64_t)v7);
    sub_251B58008((uint64_t)v10);
    sub_251B58008((uint64_t)v19);
    sub_251B58008((uint64_t)v22);
    if (v53 == 255)
    {
      sub_251B5A360(v46, v45, v47, 255);
      return 1;
    }
  }
  else
  {
    uint64_t v60 = v46;
    uint64_t v61 = v45;
    uint64_t v62 = v47;
    char v63 = v48;
    if (v53 != 255)
    {
      v58[0] = v51;
      v58[1] = v50;
      v58[2] = v52;
      char v59 = v53;
      sub_251A1B4AC(v46, v45, v47, v48);
      sub_251A1B4AC(v46, v45, v47, v48);
      BOOL v42 = _s13HomeDataModel019IconTextValueStringB6HolderV08AttachedB0O2eeoiySbAE_AEtFZ_0((uint64_t)&v60, (uint64_t)v58);
      sub_251B58008((uint64_t)v7);
      sub_251B58008((uint64_t)v10);
      sub_251B58008((uint64_t)v19);
      sub_251B58008((uint64_t)v22);
      sub_251A1B604(v60, v61, v62, v63);
      sub_251B5A360(v46, v45, v47, v48);
      return v42;
    }
    uint64_t v56 = v52;
    uint64_t v57 = v50;
    sub_251A1B4AC(v46, v45, v47, v48);
    sub_251A1B4AC(v46, v45, v47, v48);
    sub_251B58008((uint64_t)v7);
    sub_251B58008((uint64_t)v10);
    sub_251B58008((uint64_t)v19);
    sub_251B58008((uint64_t)v22);
    sub_251A1B604(v46, v45, v47, v48);
  }
  sub_251B5A360(v46, v45, v47, v48);
  sub_251B5A360(v51, v57, v56, v53);
  return 0;
}

BOOL _s13HomeDataModel019IconTextValueStringB6HolderV08AttachedB0O2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t *)a1;
  uint64_t v3 = *(uint64_t *)(a1 + 8);
  uint64_t v4 = *(uint64_t *)(a1 + 16);
  int v5 = *(unsigned __int8 *)(a1 + 24);
  uint64_t v6 = *(uint64_t *)a2;
  uint64_t v7 = *(uint64_t *)(a2 + 8);
  uint64_t v8 = *(uint64_t *)(a2 + 16);
  int v9 = *(unsigned __int8 *)(a2 + 24);
  if (!*(unsigned char *)(a1 + 24))
  {
    if (!*(unsigned char *)(a2 + 24))
    {
      sub_251A1B604(*(void *)a1, v3, v4, 0);
      sub_251A1B604(v6, v7, v8, 0);
      return v6 == v2;
    }
    goto LABEL_14;
  }
  if (v5 != 1)
  {
    if (v9 == 2)
    {
      sub_251A1B4AC(*(void *)a2, *(void *)(a2 + 8), v8, 2);
      sub_251A1B4AC(v2, v3, v4, 2);
      char v12 = sub_251AB6424(v2, v6);
      sub_251A1B604(v2, v3, v4, 2);
      sub_251A1B604(v6, v7, v8, 2);
      return v12 & 1;
    }
    swift_bridgeObjectRetain();
    goto LABEL_14;
  }
  if (v9 != 1)
  {
LABEL_14:
    sub_251A1B4AC(v6, v7, v8, v9);
    sub_251A1B604(v2, v3, v4, v5);
    sub_251A1B604(v6, v7, v8, v9);
    return 0;
  }
  sub_251A1B604(*(void *)a1, v3, v4, 1);
  sub_251A1B604(v6, v7, v8, 1);
  BOOL v10 = *(double *)&v2 == *(double *)&v6;
  if (*(double *)&v3 != *(double *)&v7) {
    BOOL v10 = 0;
  }
  return *(double *)&v4 == *(double *)&v8 && v10;
}

unint64_t sub_251B5872C()
{
  unint64_t result = qword_269B9E908;
  if (!qword_269B9E908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E908);
  }
  return result;
}

unint64_t sub_251B58780()
{
  unint64_t result = qword_269B9E910;
  if (!qword_269B9E910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E910);
  }
  return result;
}

unint64_t sub_251B587D4()
{
  unint64_t result = qword_269B9E918;
  if (!qword_269B9E918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E918);
  }
  return result;
}

unint64_t sub_251B58828()
{
  unint64_t result = qword_269B9E920;
  if (!qword_269B9E920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E920);
  }
  return result;
}

unint64_t sub_251B5887C()
{
  unint64_t result = qword_269B9E928;
  if (!qword_269B9E928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E928);
  }
  return result;
}

unint64_t sub_251B588D0()
{
  unint64_t result = qword_269B9E930;
  if (!qword_269B9E930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E930);
  }
  return result;
}

unint64_t sub_251B58924()
{
  unint64_t result = qword_269B9E958;
  if (!qword_269B9E958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E958);
  }
  return result;
}

unint64_t sub_251B58978()
{
  unint64_t result = qword_269B9E960;
  if (!qword_269B9E960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E960);
  }
  return result;
}

uint64_t _s13HomeDataModel019IconTextValueStringB6HolderV1loiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for IconTextValueStringDataHolder();
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  BOOL v10 = (char *)&v36 - v9;
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)&v36 - v12;
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  int v16 = (char *)&v36 - v15;
  uint64_t v17 = *(int *)(v14 + 24);
  uint64_t v18 = *(void *)(a1 + v17);
  uint64_t v19 = *(void *)(a1 + v17 + 8);
  uint64_t v20 = (void *)(a2 + v17);
  if (v18 == *v20 && v19 == v20[1])
  {
    sub_251B57FA4(a1, (uint64_t)&v36 - v15);
    sub_251B57FA4(a2, (uint64_t)v13);
  }
  else
  {
    char v22 = 1;
    char v23 = sub_251F36B10();
    sub_251B57FA4(a1, (uint64_t)v16);
    sub_251B57FA4(a2, (uint64_t)v13);
    if (v23) {
      goto LABEL_23;
    }
  }
  uint64_t v24 = *(int *)(v4 + 24);
  uint64_t v25 = *(void *)&v16[v24];
  uint64_t v26 = *(void *)&v16[v24 + 8];
  uint64_t v27 = &v13[v24];
  if (v25 == *(void *)v27 && v26 == *((void *)v27 + 1))
  {
    sub_251B57FA4((uint64_t)v16, (uint64_t)v10);
    sub_251B57FA4((uint64_t)v13, (uint64_t)v7);
    goto LABEL_15;
  }
  char v29 = sub_251F36B10();
  sub_251B57FA4((uint64_t)v16, (uint64_t)v10);
  sub_251B57FA4((uint64_t)v13, (uint64_t)v7);
  char v22 = 0;
  if (v29)
  {
LABEL_15:
    uint64_t v30 = sub_251F34D40();
    uint64_t v32 = v31;
    if (v30 == sub_251F34D40() && v32 == v33) {
      char v22 = 0;
    }
    else {
      char v22 = sub_251F36B10();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_251B58008((uint64_t)v7);
  sub_251B58008((uint64_t)v10);
LABEL_23:
  sub_251B58008((uint64_t)v13);
  sub_251B58008((uint64_t)v16);
  return v22 & 1;
}

uint64_t sub_251B58C14()
{
  return sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
}

unint64_t sub_251B58C40()
{
  unint64_t result = qword_269B9E968;
  if (!qword_269B9E968)
  {
    type metadata accessor for IconTextValueStringDataHolder();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E968);
  }
  return result;
}

unint64_t sub_251B58C9C()
{
  unint64_t result = qword_269B9E970;
  if (!qword_269B9E970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E970);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for IconTextValueStringDataHolder(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v27 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v27 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_251F34DA0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    BOOL v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    void *v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (uint64_t *)((char *)a1 + v9);
    uint64_t v14 = (uint64_t *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = a3[7];
    uint64_t v17 = a3[8];
    uint64_t v18 = (uint64_t *)((char *)a1 + v16);
    uint64_t v19 = (uint64_t *)((char *)a2 + v16);
    uint64_t v20 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v20;
    uint64_t v21 = (char *)a1 + v17;
    char v22 = (char *)a2 + v17;
    int v23 = *((unsigned __int8 *)a2 + v17 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v23 == 255)
    {
      *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
      *(_OWORD *)(v21 + 9) = *(_OWORD *)(v22 + 9);
    }
    else
    {
      uint64_t v24 = *(void *)v22;
      uint64_t v25 = *((void *)v22 + 1);
      uint64_t v26 = *((void *)v22 + 2);
      sub_251A1B4AC(v24, v25, v26, v23);
      *(void *)uint64_t v21 = v24;
      *((void *)v21 + 1) = v25;
      *((void *)v21 + 2) = v26;
      v21[24] = v23;
    }
  }
  return a1;
}

uint64_t destroy for IconTextValueStringDataHolder(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(a2 + 32);
  int v7 = *(unsigned __int8 *)(v6 + 24);
  if (v7 != 255)
  {
    uint64_t v8 = *(void *)v6;
    uint64_t v9 = *(void *)(v6 + 8);
    uint64_t v10 = *(void *)(v6 + 16);
    return sub_251A1B604(v8, v9, v10, v7);
  }
  return result;
}

uint64_t initializeWithCopy for IconTextValueStringDataHolder(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  uint64_t v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  void *v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)(a1 + v15);
  uint64_t v18 = (void *)(a2 + v15);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = a1 + v16;
  uint64_t v21 = (uint64_t *)(a2 + v16);
  int v22 = *(unsigned __int8 *)(a2 + v16 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v22 == 255)
  {
    *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
    *(_OWORD *)(v20 + 9) = *(_OWORD *)((char *)v21 + 9);
  }
  else
  {
    uint64_t v23 = *v21;
    uint64_t v24 = v21[1];
    uint64_t v25 = v21[2];
    sub_251A1B4AC(*v21, v24, v25, v22);
    *(void *)uint64_t v20 = v23;
    *(void *)(v20 + 8) = v24;
    *(void *)(v20 + 16) = v25;
    *(unsigned char *)(v20 + 24) = v22;
  }
  return a1;
}

uint64_t assignWithCopy for IconTextValueStringDataHolder(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[8];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = (long long *)(a2 + v16);
  int v19 = *(unsigned __int8 *)(a2 + v16 + 24);
  if (*(unsigned __int8 *)(a1 + v16 + 24) == 255)
  {
    if (v19 == 255)
    {
      long long v31 = *v18;
      *(_OWORD *)(v17 + 9) = *(long long *)((char *)v18 + 9);
      *(_OWORD *)uint64_t v17 = v31;
    }
    else
    {
      uint64_t v27 = *(void *)v18;
      uint64_t v28 = *((void *)v18 + 1);
      uint64_t v29 = *((void *)v18 + 2);
      sub_251A1B4AC(v27, v28, v29, v19);
      *(void *)uint64_t v17 = v27;
      *(void *)(v17 + 8) = v28;
      *(void *)(v17 + 16) = v29;
      *(unsigned char *)(v17 + 24) = v19;
    }
  }
  else if (v19 == 255)
  {
    sub_251A1B620(v17);
    long long v30 = *(long long *)((char *)v18 + 9);
    *(_OWORD *)uint64_t v17 = *v18;
    *(_OWORD *)(v17 + 9) = v30;
  }
  else
  {
    uint64_t v20 = *(void *)v18;
    uint64_t v21 = *((void *)v18 + 1);
    uint64_t v22 = *((void *)v18 + 2);
    sub_251A1B4AC(v20, v21, v22, v19);
    uint64_t v23 = *(void *)v17;
    uint64_t v24 = *(void *)(v17 + 8);
    uint64_t v25 = *(void *)(v17 + 16);
    *(void *)uint64_t v17 = v20;
    *(void *)(v17 + 8) = v21;
    *(void *)(v17 + 16) = v22;
    char v26 = *(unsigned char *)(v17 + 24);
    *(unsigned char *)(v17 + 24) = v19;
    sub_251A1B604(v23, v24, v25, v26);
  }
  return a1;
}

uint64_t initializeWithTake for IconTextValueStringDataHolder(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  uint64_t v9 = (_OWORD *)(a1 + v8);
  uint64_t v10 = (_OWORD *)(a2 + v8);
  *uint64_t v9 = *v10;
  *(_OWORD *)((char *)v9 + 9) = *(_OWORD *)((char *)v10 + 9);
  return a1;
}

uint64_t assignWithTake for IconTextValueStringDataHolder(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[7];
  uint64_t v18 = (void *)(a1 + v17);
  int v19 = (uint64_t *)(a2 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *uint64_t v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[8];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  int v25 = *(unsigned __int8 *)(a1 + v22 + 24);
  if (v25 == 255) {
    goto LABEL_5;
  }
  int v26 = *(unsigned __int8 *)(v24 + 24);
  if (v26 == 255)
  {
    sub_251A1B620(v23);
LABEL_5:
    *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
    *(_OWORD *)(v23 + 9) = *(_OWORD *)(v24 + 9);
    return a1;
  }
  uint64_t v27 = *(void *)(v24 + 16);
  uint64_t v28 = *(void *)v23;
  uint64_t v29 = *(void *)(v23 + 8);
  uint64_t v30 = *(void *)(v23 + 16);
  *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
  *(void *)(v23 + 16) = v27;
  *(unsigned char *)(v23 + 24) = v26;
  sub_251A1B604(v28, v29, v30, v25);
  return a1;
}

uint64_t getEnumTagSinglePayload for IconTextValueStringDataHolder(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251B593D0);
}

uint64_t sub_251B593D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for IconTextValueStringDataHolder(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251B594A8);
}

uint64_t sub_251B594A8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_251F34DA0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_251B59568()
{
  uint64_t result = sub_251F34DA0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for IconTextValueStringDataHolder.AttachedData(uint64_t a1)
{
  return sub_251A1B604(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
}

uint64_t initializeWithCopy for IconTextValueStringDataHolder.AttachedData(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_251A1B4AC(*(void *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for IconTextValueStringDataHolder.AttachedData(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_251A1B4AC(*(void *)a2, v4, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  char v10 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v6;
  sub_251A1B604(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for IconTextValueStringDataHolder.AttachedData(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  char v8 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v4;
  sub_251A1B604(v5, v7, v6, v8);
  return a1;
}

uint64_t sub_251B59748(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24);
}

uint64_t sub_251B59750(uint64_t result, char a2)
{
  *(unsigned char *)(result + 24) = a2;
  return result;
}

ValueMetadata *type metadata accessor for IconTextValueStringDataHolder.AttachedData()
{
  return &type metadata for IconTextValueStringDataHolder.AttachedData;
}

unsigned char *storeEnumTagSinglePayload for IconTextValueStringDataHolder.AttachedData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251B59834);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IconTextValueStringDataHolder.AttachedData.CodingKeys()
{
  return &type metadata for IconTextValueStringDataHolder.AttachedData.CodingKeys;
}

ValueMetadata *type metadata accessor for IconTextValueStringDataHolder.AttachedData.SecurityIssueCodingKeys()
{
  return &type metadata for IconTextValueStringDataHolder.AttachedData.SecurityIssueCodingKeys;
}

ValueMetadata *type metadata accessor for IconTextValueStringDataHolder.AttachedData.GaugeDataCodingKeys()
{
  return &type metadata for IconTextValueStringDataHolder.AttachedData.GaugeDataCodingKeys;
}

unsigned char *_s13HomeDataModel29IconTextValueStringDataHolderV12AttachedDataO23SecurityIssueCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x251B5992CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for IconTextValueStringDataHolder.AttachedData.ServiceIDsCodingKeys()
{
  return &type metadata for IconTextValueStringDataHolder.AttachedData.ServiceIDsCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for IconTextValueStringDataHolder.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251B59A30);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IconTextValueStringDataHolder.CodingKeys()
{
  return &type metadata for IconTextValueStringDataHolder.CodingKeys;
}

unint64_t sub_251B59A6C()
{
  unint64_t result = qword_269B9E988;
  if (!qword_269B9E988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E988);
  }
  return result;
}

unint64_t sub_251B59AC4()
{
  unint64_t result = qword_269B9E990;
  if (!qword_269B9E990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E990);
  }
  return result;
}

unint64_t sub_251B59B1C()
{
  unint64_t result = qword_269B9E998;
  if (!qword_269B9E998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E998);
  }
  return result;
}

unint64_t sub_251B59B74()
{
  unint64_t result = qword_269B9E9A0;
  if (!qword_269B9E9A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E9A0);
  }
  return result;
}

unint64_t sub_251B59BCC()
{
  unint64_t result = qword_269B9E9A8;
  if (!qword_269B9E9A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E9A8);
  }
  return result;
}

unint64_t sub_251B59C24()
{
  unint64_t result = qword_269B9E9B0;
  if (!qword_269B9E9B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E9B0);
  }
  return result;
}

unint64_t sub_251B59C7C()
{
  unint64_t result = qword_269B9E9B8;
  if (!qword_269B9E9B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E9B8);
  }
  return result;
}

unint64_t sub_251B59CD4()
{
  unint64_t result = qword_269B9E9C0;
  if (!qword_269B9E9C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E9C0);
  }
  return result;
}

unint64_t sub_251B59D2C()
{
  unint64_t result = qword_269B9E9C8;
  if (!qword_269B9E9C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E9C8);
  }
  return result;
}

unint64_t sub_251B59D84()
{
  unint64_t result = qword_269B9E9D0;
  if (!qword_269B9E9D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E9D0);
  }
  return result;
}

unint64_t sub_251B59DDC()
{
  unint64_t result = qword_269B9E9D8;
  if (!qword_269B9E9D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E9D8);
  }
  return result;
}

unint64_t sub_251B59E34()
{
  unint64_t result = qword_269B9E9E0;
  if (!qword_269B9E9E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E9E0);
  }
  return result;
}

unint64_t sub_251B59E8C()
{
  unint64_t result = qword_269B9E9E8;
  if (!qword_269B9E9E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E9E8);
  }
  return result;
}

unint64_t sub_251B59EE4()
{
  unint64_t result = qword_269B9E9F0;
  if (!qword_269B9E9F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9E9F0);
  }
  return result;
}

unint64_t sub_251B59F3C()
{
  unint64_t result = qword_269B9E9F8;
  if (!qword_269B9E9F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_269B9E9F8);
  }
  return result;
}

uint64_t sub_251B59F90(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x626D79536E6F6369 && a2 == 0xEA00000000006C6FLL || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C6562616CLL && a2 == 0xE500000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x72745365756C6176 && a2 == 0xEB00000000676E69 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6465686361747461 && a2 == 0xEC00000061746144)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_251B5A1CC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7974697275636573 && a2 == 0xED00006575737349;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7461446567756167 && a2 == 0xE900000000000061 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4965636976726573 && a2 == 0xEA00000000007344)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_251B5A360(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4 != -1) {
    return sub_251A1B604(a1, a2, a3, a4);
  }
  return a1;
}

uint64_t sub_251B5A374(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v4 + 144) = a3;
  *(void *)(v4 + 152) = v3;
  *(void *)(v4 + 136) = a1;
  *(_OWORD *)(v4 + 160) = *(_OWORD *)a2;
  *(unsigned char *)(v4 + 280) = *(unsigned char *)(a2 + 16);
  return MEMORY[0x270FA2498](sub_251B5A3A8, v3, 0);
}

uint64_t sub_251B5A3A8()
{
  *(void *)(v0 + 40) = &type metadata for HomeAppFeatures;
  unint64_t v1 = sub_251A23FFC();
  *(unsigned char *)(v0 + 16) = 1;
  *(void *)(v0 + 176) = v1;
  *(void *)(v0 + 48) = v1;
  char v2 = sub_251F34F60();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  if (v2)
  {
    *(void *)(v0 + 184) = sub_251F35C80();
    *(void *)(v0 + 192) = sub_251F35C70();
    uint64_t v4 = sub_251F35C00();
    return MEMORY[0x270FA2498](sub_251B5A520, v4, v3);
  }
  else
  {
    if (qword_26B21F6E0 != -1) {
      swift_once();
    }
    uint64_t v5 = *(void **)(v0 + 136);
    uint64_t v6 = *(void *)algn_26B21F698;
    uint64_t v8 = qword_26B21F6A0;
    uint64_t v7 = unk_26B21F6A8;
    *uint64_t v5 = qword_26B21F690;
    v5[1] = v6;
    v5[2] = v8;
    v5[3] = v7;
    char v10 = *(uint64_t (**)(void))(v0 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return v10();
  }
}

uint64_t sub_251B5A520()
{
  uint64_t v1 = *(void *)(v0 + 152);
  swift_release();
  return MEMORY[0x270FA2498](sub_251B5A58C, v1, 0);
}

uint64_t sub_251B5A58C()
{
  *(void *)(v0 + 200) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251B5A618, v2, v1);
}

uint64_t sub_251B5A618()
{
  uint64_t v1 = *(void *)(v0 + 152);
  swift_release();
  swift_beginAccess();
  *(void *)(v0 + 208) = qword_26B21F258;
  return MEMORY[0x270FA2498](sub_251B5A6B4, v1, 0);
}

uint64_t sub_251B5A6B4()
{
  uint64_t v111 = v0;
  *(void *)(v0 + 40) = &type metadata for HomeKitFeatures;
  unint64_t v1 = sub_251A4DA94();
  *(unsigned char *)(v0 + 16) = 4;
  *(void *)(v0 + 48) = v1;
  char v2 = sub_251F34F60();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  if ((v2 & 1) == 0)
  {
    if (qword_269B9C4C0 != -1) {
      swift_once();
    }
    if ((byte_269BA38B2 & 1) == 0 && *(void *)(v0 + 208) != 1) {
      goto LABEL_6;
    }
  }
  uint64_t v7 = *(void *)(v0 + 152);
  id v8 = objc_msgSend(*(id *)(v0 + 144), sel_matterControllerID);
  uint64_t v9 = sub_251F356F0();
  uint64_t v11 = v10;

  uint64_t v92 = (uint64_t *)(v7 + 112);
  swift_beginAccess();
  uint64_t v12 = *(void *)(v7 + 112);
  if (*(void *)(v12 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v13 = sub_2519FE798(v9, v11);
    if (v14)
    {
      uint64_t v15 = (uint64_t *)(*(void *)(v12 + 56) + 32 * v13);
      uint64_t v98 = *v15;
      uint64_t v17 = v15[2];
      uint64_t v16 = v15[3];
      uint64_t v96 = v15[1];
      swift_bridgeObjectRetain();
      uint64_t v100 = v17;
      swift_bridgeObjectRetain();
      uint64_t v101 = v16;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v98 = 0;
      uint64_t v100 = 0;
      uint64_t v96 = 0;
      uint64_t v101 = 0;
    }
    uint64_t v18 = &off_26536F000;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v98 = 0;
    uint64_t v100 = 0;
    uint64_t v96 = 0;
    uint64_t v101 = 0;
    uint64_t v18 = &off_26536F000;
  }
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void *)(v0 + 152);
  id v20 = [*(id *)(v0 + 144) (SEL)v18[99]];
  uint64_t v21 = sub_251F356F0();
  uint64_t v23 = v22;

  swift_beginAccess();
  uint64_t v24 = *(void *)(v19 + 120);
  if (!*(void *)(v24 + 16)) {
    goto LABEL_19;
  }
  swift_bridgeObjectRetain();
  unint64_t v25 = sub_2519FE798(v21, v23);
  if ((v26 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_19:
    swift_bridgeObjectRelease();
    unint64_t v27 = sub_251A19AD0(MEMORY[0x263F8EE78]);
    goto LABEL_20;
  }
  unint64_t v27 = *(void *)(*(void *)(v24 + 56) + 8 * v25);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_20:
  uint64_t v28 = *(void **)(v0 + 160);
  uint64_t v29 = *(void **)(v0 + 168);
  *(void *)(v0 + 128) = v27;
  *(void *)(v0 + 40) = &type metadata for HomeKitFeatures;
  *(void *)(v0 + 48) = v1;
  *(unsigned char *)(v0 + 16) = 4;
  sub_251A4D4C4(v28, v29, *(unsigned char *)(v0 + 280));
  char v30 = sub_251F34F60();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  uint64_t v31 = v98;
  if ((v30 & 1) == 0)
  {
    if (qword_269B9C4C0 != -1) {
      swift_once();
    }
    if ((byte_269BA38B2 & 1) == 0)
    {
      uint64_t v32 = *(void *)(v0 + 176);
      *(void *)(v0 + 40) = &type metadata for HomeAppFeatures;
      *(void *)(v0 + 48) = v32;
      *(unsigned char *)(v0 + 16) = 2;
      char v33 = sub_251F34F60();
      __swift_destroy_boxed_opaque_existential_0(v0 + 16);
      if ((v33 & 1) == 0)
      {
        int v34 = *(unsigned __int8 *)(v0 + 280);
        if (v34 == 3)
        {
          uint64_t v35 = *(void **)(v0 + 160);
          uint64_t v36 = *(void **)(v0 + 168);
          if (*(_OWORD *)(v0 + 160) == 0) {
            goto LABEL_48;
          }
        }
        else if (!*(unsigned char *)(v0 + 280))
        {
          uint64_t v35 = *(void **)(v0 + 160);
          uint64_t v36 = *(void **)(v0 + 168);
LABEL_48:
          sub_251A4D4A0(v35, v36, v34);
          swift_bridgeObjectRelease();
          if (!v96)
          {
LABEL_6:
            if (qword_26B21F6E0 != -1) {
              swift_once();
            }
            uint64_t v3 = *(void **)(v0 + 136);
            uint64_t v4 = *(void *)algn_26B21F698;
            uint64_t v6 = qword_26B21F6A0;
            uint64_t v5 = unk_26B21F6A8;
            *uint64_t v3 = qword_26B21F690;
            v3[1] = v4;
            v3[2] = v6;
            v3[3] = v5;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_50;
          }
          uint64_t v86 = *(uint64_t **)(v0 + 136);
          *uint64_t v86 = v98;
          v86[1] = v96;
          v86[2] = v100;
          v86[3] = v101;
LABEL_50:
          uint64_t v87 = *(uint64_t (**)(void))(v0 + 8);
          return v87();
        }
      }
    }
  }
  int64_t v95 = (uint64_t *)(v19 + 120);
  sub_251A4D4A0(*(id *)(v0 + 160), *(id *)(v0 + 168), *(unsigned char *)(v0 + 280));
  if (qword_26B21ECD0 != -1) {
    swift_once();
  }
  uint64_t v38 = *(void **)(v0 + 160);
  uint64_t v37 = *(void **)(v0 + 168);
  uint64_t v39 = *(void **)(v0 + 144);
  char v40 = *(unsigned char *)(v0 + 280);
  uint64_t v41 = sub_251F350A0();
  __swift_project_value_buffer(v41, (uint64_t)qword_26B21ECB8);
  sub_251A4D4C4(v38, v37, v40);
  id v42 = v39;
  sub_251A4D4C4(v38, v37, v40);
  id v43 = v42;
  uint64_t v44 = sub_251F35080();
  os_log_type_t v45 = sub_251F35FD0();
  BOOL v46 = os_log_type_enabled(v44, v45);
  char v47 = *(unsigned char *)(v0 + 280);
  unint64_t v49 = *(void **)(v0 + 160);
  int v48 = *(void **)(v0 + 168);
  uint64_t v50 = *(void **)(v0 + 144);
  if (v46)
  {
    uint64_t v51 = swift_slowAlloc();
    uint64_t v93 = swift_slowAlloc();
    v102[0] = v93;
    *(_DWORD *)uint64_t v51 = 136315394;
    log = v44;
    id v52 = objc_msgSend(v50, sel_matterControllerID);
    os_log_type_t type = v45;
    uint64_t v53 = sub_251F356F0();
    unint64_t v55 = v54;

    *(void *)(v0 + 16) = sub_251A00E84(v53, v55, v102);
    sub_251F361D0();
    uint64_t v31 = v98;
    swift_bridgeObjectRelease();

    *(_WORD *)(v51 + 12) = 2080;
    uint64_t v107 = (uint64_t)v49;
    uint64_t v108 = (uint64_t)v48;
    LOBYTE(v109) = v47;
    uint64_t updated = MatterStateSnapshot.UpdateType.description.getter();
    *(void *)(v0 + 16) = sub_251A00E84(updated, v57, v102);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    sub_251A4D4A0(v49, v48, v47);
    sub_251A4D4A0(v49, v48, v47);
    _os_log_impl(&dword_2519F3000, log, type, "new matter snapshot for '%s' , %s", (uint8_t *)v51, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v93, -1, -1);
    uint64_t v58 = 0x26536F000;
    MEMORY[0x2533AC760](v51, -1, -1);
  }
  else
  {

    sub_251A4D4A0(v49, v48, v47);
    sub_251A4D4A0(v49, v48, v47);

    uint64_t v58 = (uint64_t)v18;
  }
  char v59 = *(void **)(v0 + 168);
  uint64_t v60 = *(void **)(v0 + 144);
  char v61 = *(unsigned char *)(v0 + 280);
  v105[0] = *(id *)(v0 + 160);
  v105[1] = v59;
  char v106 = v61;
  uint64_t v107 = v31;
  uint64_t v108 = v96;
  uint64_t v109 = v100;
  uint64_t v110 = v101;
  sub_251A4D4C4(v105[0], v59, v61);
  id v62 = v60;
  sub_251B5C164(v31, v96);
  *(void *)&double v63 = sub_251A2E8C0((uint64_t)v105, v62, v0 + 128, &v107, (uint64_t)v102).n128_u64[0];
  uint64_t v64 = v102[1];
  uint64_t v97 = v102[0];
  *(void *)(v0 + 216) = v102[0];
  *(void *)(v0 + 224) = v64;
  uint64_t v94 = v64;
  uint64_t v66 = v103;
  uint64_t v65 = v104;
  *(void *)(v0 + 232) = v103;
  *(void *)(v0 + 240) = v65;
  uint64_t v99 = v65;
  uint64_t v67 = *(void *)(v0 + 128);
  id v68 = objc_msgSend(v62, *(SEL *)(v58 + 792), v63);
  uint64_t v69 = sub_251F356F0();
  uint64_t v70 = v31;
  uint64_t v72 = v71;

  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v107 = *v95;
  *int64_t v95 = 0x8000000000000000;
  sub_251A0DDCC(v67, v69, v72, isUniquelyReferenced_nonNull_native);
  *int64_t v95 = v107;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v96)
  {
    uint64_t v74 = v94;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_251A4EB8C(v70, 0);
    sub_251A4EB8C(v97, v94);
    uint64_t v75 = &off_26536F000;
    goto LABEL_45;
  }
  uint64_t v74 = v94;
  if ((v70 != v97 || v96 != v94) && (sub_251F36B10() & 1) == 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v75 = &off_26536F000;
    goto LABEL_44;
  }
  sub_251B5C164(v70, v96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v75 = &off_26536F000;
  if ((sub_251AFAC94(v100, v66) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_44:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_251A4EB8C(v70, v96);
    goto LABEL_45;
  }
  char loga = sub_251AFB270(v101, v99);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_251A4EB8C(v70, v96);
  if (loga)
  {
    uint64_t v76 = *(void *)(v0 + 240);
    uint64_t v77 = *(void *)(v0 + 136);
    long long v78 = *(_OWORD *)(v0 + 224);
    *(void *)uint64_t v77 = *(void *)(v0 + 216);
    *(_OWORD *)(v77 + 8) = v78;
    *(void *)(v77 + 24) = v76;
    goto LABEL_50;
  }
LABEL_45:
  id v79 = [*(id *)(v0 + 144) (SEL)v75[99]];
  uint64_t v80 = sub_251F356F0();
  uint64_t v82 = v81;

  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v83 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v107 = *v92;
  uint64_t *v92 = 0x8000000000000000;
  sub_251A0DF3C(v97, v74, v66, v99, v80, v82, v83);
  uint64_t *v92 = v107;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  *(void *)(v0 + 248) = sub_251F35C70();
  uint64_t v85 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251B5B144, v85, v84);
}

uint64_t sub_251B5B144()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 152);
  return MEMORY[0x270FA2498](sub_251B5B1DC, v1, 0);
}

uint64_t sub_251B5B1DC()
{
  *(void *)(v0 + 256) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251B5B268, v2, v1);
}

uint64_t sub_251B5B268()
{
  uint64_t v1 = *(void *)(v0 + 152);
  swift_release();
  *(void *)(v0 + 264) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251B5B2E0, v1, 0);
}

uint64_t sub_251B5B2E0()
{
  uint64_t v1 = *(void *)(v0 + 240);
  *(void *)(v0 + 16) = *(void *)(v0 + 216);
  *(_OWORD *)(v0 + 24) = *(_OWORD *)(v0 + 224);
  *(void *)(v0 + 40) = v1;
  *(void *)(v0 + 272) = sub_251F35C70();
  uint64_t v3 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251B5B384, v3, v2);
}

uint64_t sub_251B5B384()
{
  uint64_t v1 = *(void *)(v0 + 152);
  swift_release();
  sub_251B7588C((uint64_t *)(v0 + 16));
  return MEMORY[0x270FA2498](sub_251B5B404, v1, 0);
}

uint64_t sub_251B5B404()
{
  uint64_t v1 = *(void *)(v0 + 240);
  uint64_t v2 = *(void *)(v0 + 136);
  long long v3 = *(_OWORD *)(v0 + 224);
  *(void *)uint64_t v2 = *(void *)(v0 + 216);
  *(_OWORD *)(v2 + 8) = v3;
  *(void *)(v2 + 24) = v1;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t MatterSnapshotModerator.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t MatterSnapshotModerator.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return MEMORY[0x270FA2418](v0);
}

uint64_t MatterSnapshotModerator.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_251B5B4B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[7] = a6;
  v7[8] = a7;
  v7[5] = a4;
  v7[6] = a5;
  return MEMORY[0x270FA2498](sub_251B5B4D4, a4, 0);
}

uint64_t sub_251B5B4D4()
{
  uint64_t v2 = v0[7];
  uint64_t v1 = v0[8];
  uint64_t v4 = v0[5];
  uint64_t v3 = v0[6];
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = *(void *)(v4 + 120);
  *(void *)(v4 + 120) = 0x8000000000000000;
  sub_251A0DDCC(v3, v2, v1, isUniquelyReferenced_nonNull_native);
  *(void *)(v4 + 120) = v8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

id MatterSnapshotModerator.receivedAttributeReport(for:device:value:error:)(void *a1, id a2, uint64_t a3, void *a4)
{
  id result = objc_msgSend(a2, sel_deviceController);
  if (result)
  {
    id v10 = result;
    id result = objc_msgSend(result, sel_hdm_controllerXPCID);
    if (result)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DF78);
      swift_dynamicCast();

      uint64_t v11 = (uint64_t *)(v4 + 120);
      swift_beginAccess();
      uint64_t v12 = *(void *)(v4 + 120);
      if (*(void *)(v12 + 16))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v13 = sub_2519FE798(v19, v20);
        if (v14)
        {
          uint64_t v15 = *(void *)(*(void *)(v12 + 56) + 8 * v13);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v21 = v15;
          sub_251B5B7A8(a1, a2, a3, a4, &v21);
          uint64_t v16 = v21;
          swift_beginAccess();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v18 = *v11;
          *uint64_t v11 = 0x8000000000000000;
          sub_251A0DDCC(v16, v19, v20, isUniquelyReferenced_nonNull_native);
          *uint64_t v11 = v18;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_endAccess();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }
      }
      return (id)swift_bridgeObjectRelease();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_251B5B7A8(void *a1, void *a2, uint64_t a3, void *a4, uint64_t *a5)
{
  uint64_t v7 = a2;
  memset(v55, 0, sizeof(v55));
  char v56 = -1;
  sub_251B5BD60(a2, a5);
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v13 = objc_msgSend(a1, sel_attribute);
  unsigned int v14 = objc_msgSend(v13, sel_intValue);

  if (v14 != 3
    || (id v15 = objc_msgSend(a1, sel_endpoint),
        id v16 = objc_msgSend(v15, sel_integerValue),
        v15,
        v16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_251A1B128(a3, (uint64_t)v52, &qword_26B21E190);
    if (v53)
    {
      uint64_t v17 = v7;
      sub_251A0D578(v52, &v49);
      uint64_t v18 = v50;
      uint64_t v19 = __swift_project_boxed_opaque_existential_1(&v49, v50);
      uint64_t v53 = v18;
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v52);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(boxed_opaque_existential_1, v19, v18);
      sub_251A1B064((uint64_t)v55, &qword_269B9C970);
      char v54 = 0;
      sub_251A1A5BC((uint64_t)v52, (uint64_t)v55);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v49);
    }
    else
    {
      sub_251A1B064((uint64_t)v52, &qword_26B21E190);
      uint64_t v17 = v7;
      if (a4)
      {
        id v21 = a4;
        sub_251A1B064((uint64_t)v55, &qword_269B9C970);
        *(void *)&v55[0] = a4;
        char v56 = 1;
      }
    }
LABEL_26:
    id v35 = objc_msgSend(a1, sel_cluster);
    Swift::UInt32 v36 = objc_msgSend(v35, sel_unsignedIntValue);

    ClusterKind.init(rawValue:)(v36);
    int v37 = LOBYTE(v52[0]);
    if (LOBYTE(v52[0]) != 28)
    {
      sub_251A1B128((uint64_t)v55, (uint64_t)&v49, &qword_269B9C970);
      if (v51 == 255)
      {
        sub_251A1B064((uint64_t)v55, &qword_269B9C970);
        uint64_t v44 = &v49;
        goto LABEL_30;
      }
      sub_251B5BF24((uint64_t)&v49, (uint64_t)v52);
      id v38 = objc_msgSend(v17, sel_hdm_nodeID);
      id v39 = objc_msgSend(v38, sel_unsignedLongLongValue);

      id v40 = objc_msgSend(a1, sel_endpoint);
      unsigned int v41 = objc_msgSend(v40, sel_unsignedShortValue);

      id v42 = objc_msgSend(a1, sel_attribute);
      unsigned int v43 = objc_msgSend(v42, sel_unsignedIntValue);

      sub_251B5BF80(v17, (uint64_t)v39, v41 | (v37 << 16), v43, v52, a5);
      sub_251A2C274((uint64_t)v52);
    }
    uint64_t v44 = v55;
LABEL_30:
    sub_251A1B064((uint64_t)v44, &qword_269B9C970);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  sub_251A1B128(a3, (uint64_t)v52, &qword_26B21E190);
  if (!v53)
  {
    sub_251A1B064((uint64_t)v52, &qword_26B21E190);
    goto LABEL_21;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DA50);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_21:
    uint64_t v26 = 0;
LABEL_25:
    uint64_t v17 = v7;
    id v32 = objc_msgSend(v7, sel_hdm_nodeID);
    id v33 = objc_msgSend(v32, sel_unsignedLongLongValue);

    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v52[0] = *a5;
    *a5 = 0x8000000000000000;
    sub_251A0D6F8(v26, v10, v12, (uint64_t)v33, isUniquelyReferenced_nonNull_native);
    *a5 = v52[0];
    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  char v47 = v7;
  uint64_t v22 = v49;
  if (!((unint64_t)v49 >> 62))
  {
    uint64_t v23 = *(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v23) {
      goto LABEL_11;
    }
LABEL_23:
    swift_bridgeObjectRelease();
    uint64_t v26 = MEMORY[0x263F8EE78];
LABEL_24:
    uint64_t v7 = v47;
    goto LABEL_25;
  }
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_251F366C0();
  swift_bridgeObjectRelease();
  if (!v23) {
    goto LABEL_23;
  }
LABEL_11:
  uint64_t v45 = v12;
  uint64_t v46 = v10;
  v52[0] = MEMORY[0x263F8EE78];
  uint64_t result = sub_251A3E200(0, v23 & ~(v23 >> 63), 0);
  if ((v23 & 0x8000000000000000) == 0)
  {
    uint64_t v25 = 0;
    uint64_t v26 = v52[0];
    do
    {
      if ((v22 & 0xC000000000000001) != 0) {
        id v27 = (id)MEMORY[0x2533AB3A0](v25, v22);
      }
      else {
        id v27 = *(id *)(v22 + 8 * v25 + 32);
      }
      uint64_t v28 = v27;
      unsigned __int16 v29 = (unsigned __int16)objc_msgSend(v27, sel_unsignedShortValue, v45, v46);

      v52[0] = v26;
      unint64_t v31 = *(void *)(v26 + 16);
      unint64_t v30 = *(void *)(v26 + 24);
      if (v31 >= v30 >> 1)
      {
        sub_251A3E200(v30 > 1, v31 + 1, 1);
        uint64_t v26 = v52[0];
      }
      ++v25;
      *(void *)(v26 + 16) = v31 + 1;
      *(_WORD *)(v26 + 2 * v31 + 32) = v29;
    }
    while (v23 != v25);
    swift_bridgeObjectRelease();
    uint64_t v12 = v45;
    uint64_t v10 = v46;
    goto LABEL_24;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for MatterSnapshotModerator()
{
  return self;
}

uint64_t method lookup function for MatterSnapshotModerator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for MatterSnapshotModerator);
}

uint64_t sub_251B5BD60(void *a1, uint64_t *a2)
{
  id v4 = objc_msgSend(a1, sel_hdm_nodeID);
  id v5 = objc_msgSend(v4, sel_unsignedLongLongValue);

  uint64_t result = sub_251B7499C((uint64_t)v5, *a2);
  if (!v7)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    unint64_t v9 = sub_251A1983C(MEMORY[0x263F8EE78]);
    unint64_t v10 = sub_251A19848(v8);
    id v11 = objc_msgSend(a1, sel_hdm_nodeID);
    id v12 = objc_msgSend(v11, sel_unsignedLongLongValue);

    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v17 = *a2;
    *a2 = 0x8000000000000000;
    sub_251A0D6F8(0, v9, v10, (uint64_t)v12, isUniquelyReferenced_nonNull_native);
    *a2 = v17;
    swift_bridgeObjectRelease();
    id v14 = a1;
    id v15 = (void *)sub_251F36D40();
    if (qword_269B9C530 != -1) {
      swift_once();
    }
    id v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F10CE8]), sel_initWithDevice_endpointID_queue_, v14, v15, qword_269BF3278);

    if (v16)
    {
      MTRClusterDescriptor.endpointIDs.getter();
      swift_bridgeObjectRelease();
    }
    return 0;
  }
  return result;
}

uint64_t sub_251B5BF24(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_251B5BF80(void *a1, uint64_t a2, int a3, unsigned int a4, uint64_t *a5, uint64_t *a6)
{
  uint64_t v29 = sub_251B5BD60(a1, a6);
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  if (*(void *)(v13 + 16) && (unint64_t v15 = sub_2519FE5CC(a3), (v16 & 1) != 0))
  {
    unint64_t v17 = *(void *)(*(void *)(v14 + 56) + 8 * v15);
    swift_bridgeObjectRetain();
  }
  else
  {
    unint64_t v17 = sub_251A19854(MEMORY[0x263F8EE78]);
  }
  if (*(void *)(v17 + 16) && (unint64_t v18 = sub_2519FE614(SBYTE2(a3)), (v19 & 1) != 0))
  {
    unint64_t v31 = *(void *)(*(void *)(v17 + 56) + 8 * v18);
    swift_bridgeObjectRetain();
  }
  else
  {
    unint64_t v31 = sub_251A19874(MEMORY[0x263F8EE78]);
  }
  sub_251A2C2A4(a5, (uint64_t)v30);
  sub_2519F8108((uint64_t)v30, a4);
  uint64_t v20 = v31;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v30[0] = v17;
  sub_251A0D9B4(v20, SBYTE2(a3), isUniquelyReferenced_nonNull_native);
  uint64_t v22 = v30[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  char v23 = swift_isUniquelyReferenced_nonNull_native();
  v30[0] = v14;
  sub_251A0D864(v22, a3, v23);
  uint64_t v24 = v30[0];
  swift_bridgeObjectRelease();
  id v25 = objc_msgSend(a1, sel_hdm_nodeID);
  id v26 = objc_msgSend(v25, sel_unsignedLongLongValue);

  char v27 = swift_isUniquelyReferenced_nonNull_native();
  v30[0] = *a6;
  *a6 = 0x8000000000000000;
  sub_251A0D6F8(v29, v12, v24, (uint64_t)v26, v27);
  *a6 = v30[0];
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_251B5C164(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t Event.TimeEvent.SignificantTime.hash(into:)()
{
  return sub_251F36CB0();
}

BOOL static Event.TimeEvent.SignificantTime.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t Event.TimeEvent.SignificantTime.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t Event.TimeEvent.TimeComponents.timezone.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_251F34ED0();
  id v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t Event.TimeEvent.TimeComponents.hour.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Event.TimeEvent.TimeComponents(0) + 20));
}

uint64_t type metadata accessor for Event.TimeEvent.TimeComponents(uint64_t a1)
{
  return sub_251A1C6FC(a1, (uint64_t *)&unk_269B9EA88);
}

uint64_t Event.TimeEvent.TimeComponents.minute.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Event.TimeEvent.TimeComponents(0) + 24));
}

uint64_t Event.TimeEvent.TimeComponents.second.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Event.TimeEvent.TimeComponents(0) + 28));
}

int *Event.TimeEvent.TimeComponents.init(timezone:hour:minute:second:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v10 = sub_251F34ED0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(a5, a1, v10);
  uint64_t result = (int *)type metadata accessor for Event.TimeEvent.TimeComponents(0);
  *(unsigned char *)(a5 + result[5]) = a2;
  *(unsigned char *)(a5 + result[6]) = a3;
  *(unsigned char *)(a5 + result[7]) = a4;
  return result;
}

uint64_t Event.TimeEvent.TimeComponents.hash(into:)()
{
  return sub_251F36CC0();
}

uint64_t Event.TimeEvent.TimeComponents.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t sub_251B5C524()
{
  return sub_251F36D00();
}

uint64_t sub_251B5C5D4()
{
  return sub_251F36CC0();
}

uint64_t sub_251B5C66C()
{
  return sub_251F36D00();
}

uint64_t Event.TimeEvent.hash(into:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Event.TimeEvent.TimeComponents(0);
  MEMORY[0x270FA5388](v2);
  id v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Event.TimeEvent(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251B5E944(v1, (uint64_t)v7);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_251B5F2B8((uint64_t)v7, (uint64_t)v4, type metadata accessor for Event.TimeEvent.TimeComponents);
      sub_251F36CB0();
      sub_251F34ED0();
      sub_251B609E8(&qword_269B9EA10, MEMORY[0x270FA99C0]);
      sub_251F35610();
      sub_251F36CC0();
      sub_251F36CC0();
      sub_251F36CC0();
      return sub_251B5FC84((uint64_t)v4, type metadata accessor for Event.TimeEvent.TimeComponents);
    }
    else
    {
      uint64_t v14 = (uint64_t)&v7[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269B9EA18) + 48)];
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9EA20);
      uint64_t v16 = *(void *)(*(void *)(v15 - 8) + 64);
      MEMORY[0x270FA5388](v15 - 8);
      unint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_251B5E9A8(v14, (uint64_t)v17);
      sub_251F36CB0();
      uint64_t v18 = sub_251F36CB0();
      MEMORY[0x270FA5388](v18);
      sub_251B5EA10((uint64_t)v17, (uint64_t)v17);
      uint64_t v19 = sub_251F34880();
      uint64_t v20 = *(void *)(v19 - 8);
      uint64_t v21 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48))(v17, 1, v19);
      if (v21 == 1)
      {
        sub_251F36CC0();
      }
      else
      {
        MEMORY[0x270FA5388](v21);
        char v23 = (char *)&v24 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v23, v17, v19);
        sub_251F36CC0();
        sub_251B609E8(&qword_269B9EA28, MEMORY[0x270FA8200]);
        sub_251F35610();
        (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v19);
      }
      return sub_251A1B064((uint64_t)v17, &qword_269B9EA20);
    }
  }
  else
  {
    uint64_t v10 = sub_251F34D20();
    uint64_t v11 = *(void *)(v10 - 8);
    MEMORY[0x270FA5388](v10);
    uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v7, v10);
    sub_251F36CB0();
    sub_251B609E8(&qword_269B9CF80, MEMORY[0x270FA9248]);
    sub_251F35610();
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
}

uint64_t Event.TimeEvent.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t sub_251B5CBE4()
{
  return sub_251F36D00();
}

uint64_t sub_251B5CC28()
{
  return sub_251F36D00();
}

void Event.TimeEvent.init(event:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v24 = type metadata accessor for Event.TimeEvent(0);
  MEMORY[0x270FA5388](v24);
  uint64_t v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v26 = a1;
  id v6 = objc_msgSend(a1, sel_fireDateComponents);
  uint64_t v7 = sub_251F34880();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x270FA5388](v7);
  unint64_t v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  sub_251F347D0();

  sub_251F347E0();
  LOBYTE(v6) = v11;
  uint64_t v12 = *(void (**)(char *, uint64_t))(v8 + 8);
  v12((char *)v23 - v10, v7);
  if (v6)
  {
    Event.TimeEvent.TimeComponents.init(event:)(v26, v5);
    if (!v2)
    {
      swift_storeEnumTagMultiPayload();
      sub_251B5F2B8((uint64_t)v5, v25, type metadata accessor for Event.TimeEvent);
    }
  }
  else
  {
    v23[1] = v2;
    uint64_t v13 = sub_251F34D20();
    v23[3] = v23;
    uint64_t v14 = *(void *)(v13 - 8);
    MEMORY[0x270FA5388](v13);
    v23[0] = (char *)v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
    id v16 = objc_msgSend(v26, sel_fireDateComponents);
    v23[2] = v23;
    MEMORY[0x270FA5388](v16);
    sub_251F347D0();

    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    MEMORY[0x270FA5388](v17 - 8);
    uint64_t v19 = (char *)v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_251F347F0();
    v12((char *)v23 - v10, v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v19, 1, v13) == 1)
    {
      sub_251A1B064((uint64_t)v19, &qword_26B21EC20);
      sub_251B5F320();
      swift_allocError();
      *uint64_t v20 = 1;
      swift_willThrow();
    }
    else
    {

      uint64_t v21 = *(void (**)(uint64_t, char *, uint64_t))(v14 + 32);
      uint64_t v22 = (char *)v23[0];
      v21(v23[0], v19, v13);
      v21(v25, v22, v13);
      swift_storeEnumTagMultiPayload();
    }
  }
}

void Event.TimeEvent.TimeComponents.init(event:)(void *a1@<X0>, char *a2@<X8>)
{
  unsigned int v43 = a2;
  uint64_t v3 = sub_251F34ED0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v42 = v5;
  id v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v46 = a1;
  id v7 = objc_msgSend(a1, sel_fireDateComponents);
  uint64_t v8 = sub_251F34880();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x270FA5388](v8);
  unint64_t v11 = (v10 + 15) & 0xFFFFFFFFFFFFFFF0;
  sub_251F347D0();

  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9EA38);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34870();
  uint64_t v44 = *(void (**)(char *, uint64_t))(v9 + 8);
  uint64_t v45 = v8;
  v44((char *)&v37 - v11, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v14, 1, v3) == 1)
  {
    sub_251A1B064((uint64_t)v14, &qword_269B9EA38);
LABEL_15:
    sub_251B5F320();
    swift_allocError();
    *Swift::UInt32 v36 = 0;
    swift_willThrow();

    return;
  }
  id v39 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
  uint64_t v40 = v4 + 32;
  v39(v6, v14, v3);
  id v15 = objc_msgSend(v46, sel_fireDateComponents);
  MEMORY[0x270FA5388](v15);
  id v16 = (char *)&v37 - v11;
  sub_251F347D0();

  uint64_t v17 = sub_251F34800();
  LOBYTE(v15) = v18;
  v44(v16, v45);
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    goto LABEL_15;
  }
  unint64_t v37 = v17;
  uint64_t v38 = v4;
  uint64_t v41 = v3;
  id v19 = objc_msgSend(v46, sel_fireDateComponents);
  MEMORY[0x270FA5388](v19);
  unint64_t v20 = (v10 + 15) & 0xFFFFFFFFFFFFFFF0;
  sub_251F347D0();

  unint64_t v21 = sub_251F34830();
  LOBYTE(v19) = v22;
  v44((char *)&v37 - v20, v45);
  if (v19) {
    goto LABEL_14;
  }
  id v23 = objc_msgSend(v46, sel_fireDateComponents);
  MEMORY[0x270FA5388](v23);
  sub_251F347D0();

  unint64_t v24 = sub_251F34850();
  char v26 = v25;
  v44((char *)&v37 - v20, v45);
  uint64_t v27 = v38;
  if (v26)
  {
LABEL_14:
    (*(void (**)(char *, uint64_t))(v38 + 8))(v6, v41);
    goto LABEL_15;
  }

  MEMORY[0x270FA5388](v28);
  unint64_t v30 = (char *)&v37 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v30, v6, v41);
  char v31 = v37;
  if ((v37 & 0x8000000000000000) != 0
    || v37 >= 0x100
    || (v21 & 0x8000000000000000) != 0
    || v21 >= 0x100
    || (v24 & 0x8000000000000000) != 0
    || v24 >= 0x100)
  {
    sub_251F36670();
    __break(1u);
  }
  else
  {
    char v32 = v21;
    uint64_t v33 = v41;
    (*(void (**)(char *, uint64_t))(v27 + 8))(v6, v41);
    int v34 = v43;
    v39(v43, v30, v33);
    id v35 = (int *)type metadata accessor for Event.TimeEvent.TimeComponents(0);
    v34[v35[5]] = v31;
    v34[v35[6]] = v32;
    v34[v35[7]] = v24;
  }
}

void Event.TimeEvent.init(event:)(void *a1@<X0>, char *a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_significantEvent);
  uint64_t v5 = sub_251F356F0();
  uint64_t v7 = v6;
  if (v5 == sub_251F356F0() && v7 == v8)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_13;
  }
  char v10 = sub_251F36B10();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v10)
  {
LABEL_13:

    char v19 = 0;
    goto LABEL_14;
  }
  uint64_t v11 = sub_251F356F0();
  uint64_t v13 = v12;
  if (v11 == sub_251F356F0() && v13 == v14)
  {

    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v16 = sub_251F36B10();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v16 & 1) == 0)
    {
      id v17 = objc_msgSend(a1, sel_significantEvent);
      sub_251B5F320();
      swift_allocError();
      *char v18 = v17;
      swift_willThrow();

      return;
    }
  }
  char v19 = 1;
LABEL_14:
  *a2 = v19;
  id v20 = objc_msgSend(a1, sel_offset);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9EA20);
  MEMORY[0x270FA5388](v21 - 8);
  id v23 = (char *)&v27 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v20)
  {
    sub_251F347D0();

    uint64_t v24 = sub_251F34880();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 0, 1, v24);
  }
  else
  {

    uint64_t v25 = sub_251F34880();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v23, 1, 1, v25);
  }
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9EA18);
  sub_251B5E9A8((uint64_t)v23, (uint64_t)&a2[*(int *)(v26 + 48)]);
  type metadata accessor for Event.TimeEvent(0);
  swift_storeEnumTagMultiPayload();
}

HMTimeEvent __swiftcall Event.TimeEvent.createEvent()()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Event.TimeEvent.TimeComponents(0);
  MEMORY[0x270FA5388](v2 - 8);
  id v4 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Event.TimeEvent(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (unsigned __int8 *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251B5E944(v1, (uint64_t)v7);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_251B5F2B8((uint64_t)v7, (uint64_t)v4, type metadata accessor for Event.TimeEvent.TimeComponents);
      v9.super.super.super.isa = Event.TimeEvent.TimeComponents.createEvent()().super.super.super.isa;
      sub_251B5FC84((uint64_t)v4, type metadata accessor for Event.TimeEvent.TimeComponents);
    }
    else
    {
      int v25 = *v7;
      uint64_t v26 = (uint64_t)&v7[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269B9EA18) + 48)];
      uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9EA20);
      uint64_t v28 = *(void *)(*(void *)(v27 - 8) + 64);
      MEMORY[0x270FA5388](v27 - 8);
      unint64_t v29 = (v28 + 15) & 0xFFFFFFFFFFFFFFF0;
      unint64_t v30 = (char *)&v39 - v29;
      sub_251B5E9A8(v26, (uint64_t)&v39 - v29);
      char v31 = (id *)MEMORY[0x263F0D8F8];
      if (v25) {
        char v31 = (id *)MEMORY[0x263F0D908];
      }
      id v32 = *v31;
      MEMORY[0x270FA5388](v32);
      uint64_t v33 = (char *)&v39 - v29;
      sub_251B5EA10((uint64_t)&v39 - v29, (uint64_t)&v39 - v29);
      uint64_t v34 = sub_251F34880();
      uint64_t v35 = *(void *)(v34 - 8);
      int v36 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 48))((char *)&v39 - v29, 1, v34);
      unint64_t v37 = 0;
      if (v36 != 1)
      {
        unint64_t v37 = (void *)sub_251F347C0();
        (*(void (**)(char *, uint64_t))(v35 + 8))(v33, v34);
      }
      v9.super.super.super.isa = (Class)objc_msgSend(objc_allocWithZone(MEMORY[0x263F0E788]), sel_initWithSignificantEvent_offset_, v32, v37);

      sub_251A1B064((uint64_t)v30, &qword_269B9EA20);
    }
  }
  else
  {
    uint64_t v43 = sub_251F34D20();
    uint64_t v44 = &v39;
    uint64_t v10 = *(void *)(v43 - 8);
    MEMORY[0x270FA5388](v43);
    uint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, unsigned __int8 *))(v10 + 32))(v12, v7);
    uint64_t v41 = sub_251F34880();
    uint64_t v42 = &v39;
    uint64_t v40 = *(void *)(v41 - 8);
    MEMORY[0x270FA5388](v41);
    uint64_t v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v15 = sub_251F34E50();
    uint64_t v39 = (uint64_t)&v39;
    uint64_t v16 = *(void *)(v15 - 8);
    MEMORY[0x270FA5388](v15);
    char v18 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_251F34E30();
    uint64_t v19 = sub_251F34ED0();
    uint64_t v20 = *(void *)(v19 - 8);
    MEMORY[0x270FA5388](v19);
    uint64_t v22 = (char *)&v39 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_251F34EC0();
    sub_251F34DF0();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    id v23 = objc_allocWithZone(MEMORY[0x263F0E170]);
    uint64_t v24 = (void *)sub_251F347C0();
    v9.super.super.super.isa = (Class)objc_msgSend(v23, sel_initWithFireDateComponents_, v24, v39);

    (*(void (**)(char *, uint64_t))(v40 + 8))(v14, v41);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v43);
  }
  return v9.super;
}

HMCalendarEvent __swiftcall Event.TimeEvent.TimeComponents.createEvent()()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_251F34880();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9EA40);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_251F34E50();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9EA38);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_251F34ED0();
  uint64_t v14 = *(void *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v12, v1, v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
  type metadata accessor for Event.TimeEvent.TimeComponents(0);
  sub_251F34860();
  id v15 = objc_allocWithZone(MEMORY[0x263F0E170]);
  uint64_t v16 = (void *)sub_251F347C0();
  id v17 = objc_msgSend(v15, sel_initWithFireDateComponents_, v16);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (HMCalendarEvent)v17;
}

unint64_t Event.TimeEvent.debugDescription.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = (int *)type metadata accessor for Event.TimeEvent.TimeComponents(0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Event.TimeEvent(0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251B5E944(v1, (uint64_t)v7);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_251B5F2B8((uint64_t)v7, (uint64_t)v4, type metadata accessor for Event.TimeEvent.TimeComponents);
      unint64_t v27 = 0;
      unint64_t v28 = 0xE000000000000000;
      sub_251F36400();
      sub_251F35800();
      char v26 = v4[v2[5]];
      sub_251F36AB0();
      sub_251F35800();
      swift_bridgeObjectRelease();
      sub_251F35800();
      char v26 = v4[v2[6]];
      sub_251F36AB0();
      sub_251F35800();
      swift_bridgeObjectRelease();
      sub_251F35800();
      char v26 = v4[v2[7]];
      sub_251F36AB0();
      sub_251F35800();
      swift_bridgeObjectRelease();
      sub_251F35800();
      sub_251F34ED0();
      sub_251B609E8((unint64_t *)&qword_269B9CDB0, MEMORY[0x270FA99C0]);
      sub_251F36AB0();
      sub_251F35800();
      swift_bridgeObjectRelease();
      sub_251F35800();
      unint64_t v9 = v27;
      sub_251B5FC84((uint64_t)v4, type metadata accessor for Event.TimeEvent.TimeComponents);
    }
    else
    {
      char v14 = *v7;
      uint64_t v15 = (uint64_t)&v7[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269B9EA18) + 48)];
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9EA20);
      uint64_t v25 = (uint64_t)&v25;
      uint64_t v17 = *(void *)(*(void *)(v16 - 8) + 64);
      MEMORY[0x270FA5388](v16 - 8);
      unint64_t v18 = (v17 + 15) & 0xFFFFFFFFFFFFFFF0;
      sub_251B5E9A8(v15, (uint64_t)&v25 - v18);
      uint64_t v19 = sub_251F34880();
      uint64_t v20 = *(void *)(v19 - 8);
      uint64_t v21 = MEMORY[0x270FA5388](v19);
      id v23 = (char *)&v25 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
      MEMORY[0x270FA5388](v21);
      sub_251B5EA10((uint64_t)&v25 - v18, (uint64_t)&v25 - v18);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))((char *)&v25 - v18, 1, v19) == 1)
      {
        sub_251A1B064((uint64_t)&v25 - v18, &qword_269B9EA20);
        unint64_t v27 = 0;
        unint64_t v28 = 0xE000000000000000;
        sub_251F36400();
        sub_251F35800();
        char v26 = v14;
        sub_251F36640();
        sub_251F35800();
        unint64_t v9 = v27;
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v23, (char *)&v25 - v18, v19);
        unint64_t v27 = 0;
        unint64_t v28 = 0xE000000000000000;
        sub_251F36400();
        sub_251F35800();
        char v26 = v14;
        sub_251F36640();
        sub_251F35800();
        sub_251B609E8(&qword_269B9EA48, MEMORY[0x270FA8200]);
        sub_251F36AB0();
        sub_251F35800();
        swift_bridgeObjectRelease();
        sub_251F35800();
        unint64_t v9 = v27;
        (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v19);
      }
      sub_251A1B064((uint64_t)&v25 - v18, &qword_269B9EA20);
    }
  }
  else
  {
    uint64_t v10 = sub_251F34D20();
    uint64_t v11 = *(void *)(v10 - 8);
    MEMORY[0x270FA5388](v10);
    uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v7, v10);
    unint64_t v27 = 0;
    unint64_t v28 = 0xE000000000000000;
    sub_251F36400();
    swift_bridgeObjectRelease();
    unint64_t v27 = 0xD000000000000011;
    unint64_t v28 = 0x8000000251F6AD00;
    sub_251B609E8(&qword_269B9EA50, MEMORY[0x270FA9248]);
    sub_251F36AB0();
    sub_251F35800();
    swift_bridgeObjectRelease();
    sub_251F35800();
    unint64_t v9 = v27;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  return v9;
}

BOOL _s13HomeDataModel5EventO04TimeD0O0E10ComponentsV2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((MEMORY[0x2533A9DE0]() & 1) != 0
    && (uint64_t v4 = (int *)type metadata accessor for Event.TimeEvent.TimeComponents(0),
        *(unsigned __int8 *)(a1 + v4[5]) == *(unsigned __int8 *)(a2 + v4[5]))
    && *(unsigned __int8 *)(a1 + v4[6]) == *(unsigned __int8 *)(a2 + v4[6]))
  {
    return *(unsigned __int8 *)(a1 + v4[7]) == *(unsigned __int8 *)(a2 + v4[7]);
  }
  else
  {
    return 0;
  }
}

uint64_t type metadata accessor for Event.TimeEvent(uint64_t a1)
{
  return sub_251A1C6FC(a1, (uint64_t *)&unk_269B9EA70);
}

uint64_t sub_251B5E944(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Event.TimeEvent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_251B5E9A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9EA20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_251B5EA10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9EA20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t _s13HomeDataModel5EventO04TimeD0O2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (int *)type metadata accessor for Event.TimeEvent.TimeComponents(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Event.TimeEvent(0);
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v10 = (unsigned __int8 *)v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)v55 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)v55 - v14;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9EA98);
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  uint64_t v19 = (char *)v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = &v19[*(int *)(v17 + 56)];
  sub_251B5E944(a1, (uint64_t)v19);
  sub_251B5E944(a2, (uint64_t)v20);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_251B5E944((uint64_t)v19, (uint64_t)v13);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_251B5F2B8((uint64_t)v20, (uint64_t)v6, type metadata accessor for Event.TimeEvent.TimeComponents);
        if ((MEMORY[0x2533A9DE0](v13, v6) & 1) != 0
          && v13[v4[5]] == v6[v4[5]]
          && v13[v4[6]] == v6[v4[6]]
          && v13[v4[7]] == v6[v4[7]])
        {
          sub_251B5FC84((uint64_t)v6, type metadata accessor for Event.TimeEvent.TimeComponents);
          sub_251B5FC84((uint64_t)v13, type metadata accessor for Event.TimeEvent.TimeComponents);
LABEL_29:
          sub_251B5FC84((uint64_t)v19, type metadata accessor for Event.TimeEvent);
          LOBYTE(v37) = 1;
          return v37 & 1;
        }
        sub_251B5FC84((uint64_t)v6, type metadata accessor for Event.TimeEvent.TimeComponents);
        sub_251B5FC84((uint64_t)v13, type metadata accessor for Event.TimeEvent.TimeComponents);
        goto LABEL_25;
      }
      sub_251B5FC84((uint64_t)v13, type metadata accessor for Event.TimeEvent.TimeComponents);
LABEL_16:
      sub_251A1B064((uint64_t)v19, &qword_269B9EA98);
LABEL_26:
      LOBYTE(v37) = 0;
      return v37 & 1;
    }
    sub_251B5E944((uint64_t)v19, (uint64_t)v10);
    uint64_t v26 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269B9EA18) + 48);
    uint64_t v27 = (uint64_t)&v10[v26];
    if (swift_getEnumCaseMultiPayload() != 2)
    {
      sub_251A1B064((uint64_t)&v10[v26], &qword_269B9EA20);
      goto LABEL_16;
    }
    int v28 = *v10;
    int v29 = *v20;
    uint64_t v30 = (uint64_t)&v20[v26];
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9EA20);
    uint64_t v32 = *(void *)(*(void *)(v31 - 8) + 64);
    MEMORY[0x270FA5388](v31 - 8);
    uint64_t v33 = (char *)v55 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v34 = sub_251B5E9A8(v27, (uint64_t)v33);
    MEMORY[0x270FA5388](v34);
    sub_251B5E9A8(v30, (uint64_t)v33);
    if (v28 == v29)
    {
      v55[4] = v55;
      v55[5] = v55;
      uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9EAA0);
      v55[3] = v55;
      uint64_t v40 = MEMORY[0x270FA5388](v39 - 8);
      uint64_t v42 = (char *)v55 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v43 = (uint64_t)&v42[*(int *)(v40 + 56)];
      sub_251B5EA10((uint64_t)v33, (uint64_t)v42);
      sub_251B5EA10((uint64_t)v33, v43);
      uint64_t v44 = sub_251F34880();
      uint64_t v45 = *(void *)(v44 - 8);
      id v46 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v45 + 48);
      uint64_t v47 = v46(v42, 1, v44);
      if (v47 == 1)
      {
        sub_251A1B064((uint64_t)v33, &qword_269B9EA20);
        sub_251A1B064((uint64_t)v33, &qword_269B9EA20);
        if (v46((char *)v43, 1, v44) == 1)
        {
          sub_251A1B064((uint64_t)v42, &qword_269B9EA20);
          goto LABEL_29;
        }
      }
      else
      {
        _OWORD v55[2] = v55;
        MEMORY[0x270FA5388](v47);
        int v48 = (char *)v55 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
        sub_251B5EA10((uint64_t)v42, (uint64_t)v48);
        uint64_t v49 = v46((char *)v43, 1, v44);
        if (v49 != 1)
        {
          v55[1] = v55;
          MEMORY[0x270FA5388](v49);
          id v52 = (char *)v55 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *, uint64_t, uint64_t))(v45 + 32))(v52, v43, v44);
          sub_251B609E8(&qword_269B9EAA8, MEMORY[0x270FA8200]);
          char v53 = sub_251F35650();
          char v54 = *(void (**)(char *, uint64_t))(v45 + 8);
          v54(v52, v44);
          sub_251A1B064((uint64_t)v33, &qword_269B9EA20);
          sub_251A1B064((uint64_t)v33, &qword_269B9EA20);
          v54(v48, v44);
          sub_251A1B064((uint64_t)v42, &qword_269B9EA20);
          if (v53) {
            goto LABEL_29;
          }
          goto LABEL_25;
        }
        sub_251A1B064((uint64_t)v33, &qword_269B9EA20);
        sub_251A1B064((uint64_t)v33, &qword_269B9EA20);
        (*(void (**)(char *, uint64_t))(v45 + 8))(v48, v44);
      }
      sub_251A1B064((uint64_t)v42, &qword_269B9EAA0);
    }
    else
    {
      sub_251A1B064((uint64_t)v33, &qword_269B9EA20);
      sub_251A1B064((uint64_t)v33, &qword_269B9EA20);
    }
LABEL_25:
    sub_251B5FC84((uint64_t)v19, type metadata accessor for Event.TimeEvent);
    goto LABEL_26;
  }
  sub_251B5E944((uint64_t)v19, (uint64_t)v15);
  int v22 = swift_getEnumCaseMultiPayload();
  uint64_t v23 = sub_251F34D20();
  uint64_t v24 = v23;
  uint64_t v25 = *(void *)(v23 - 8);
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(*(void *)(v23 - 8) + 8))(v15, v23);
    goto LABEL_16;
  }
  MEMORY[0x270FA5388](v23);
  int v36 = (char *)v55 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v36, v20, v24);
  int v37 = sub_251F34CD0();
  uint64_t v38 = *(void (**)(char *, uint64_t))(v25 + 8);
  v38(v36, v24);
  v38(v15, v24);
  sub_251B5FC84((uint64_t)v19, type metadata accessor for Event.TimeEvent);
  return v37 & 1;
}

uint64_t sub_251B5F2B8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_251B5F320()
{
  unint64_t result = qword_269B9EA30;
  if (!qword_269B9EA30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9EA30);
  }
  return result;
}

unint64_t sub_251B5F378()
{
  unint64_t result = qword_269B9EA58;
  if (!qword_269B9EA58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9EA58);
  }
  return result;
}

uint64_t sub_251B5F3CC()
{
  return sub_251B5F45C(&qword_269B9EA60, (void (*)(uint64_t))type metadata accessor for Event.TimeEvent.TimeComponents);
}

uint64_t sub_251B5F414()
{
  return sub_251B5F45C(&qword_269B9EA68, (void (*)(uint64_t))type metadata accessor for Event.TimeEvent);
}

uint64_t sub_251B5F45C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *_s9TimeEventOwCP(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (void *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v10 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269B9EA18) + 48);
      uint64_t v11 = (char *)a1 + v10;
      uint64_t v12 = (char *)a2 + v10;
      uint64_t v13 = sub_251F34880();
      uint64_t v14 = *(void *)(v13 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
      {
        uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9EA20);
        memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      }
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = sub_251F34ED0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      uint64_t v8 = (int *)type metadata accessor for Event.TimeEvent.TimeComponents(0);
      *((unsigned char *)a1 + v8[5]) = *((unsigned char *)a2 + v8[5]);
      *((unsigned char *)a1 + v8[6]) = *((unsigned char *)a2 + v8[6]);
      *((unsigned char *)a1 + v8[7]) = *((unsigned char *)a2 + v8[7]);
    }
    else
    {
      uint64_t v16 = sub_251F34D20();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(a1, a2, v16);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t _s9TimeEventOwxx(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    uint64_t v4 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269B9EA18) + 48);
    uint64_t v5 = sub_251F34880();
    uint64_t v9 = *(void *)(v5 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v4, 1, v5);
    if (result) {
      return result;
    }
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);
    uint64_t v8 = v4;
    uint64_t v7 = v5;
  }
  else
  {
    if (result == 1)
    {
      uint64_t v3 = sub_251F34ED0();
    }
    else
    {
      if (result) {
        return result;
      }
      uint64_t v3 = sub_251F34D20();
    }
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    uint64_t v7 = v3;
    uint64_t v8 = a1;
  }
  return v6(v8, v7);
}

unsigned char *_s9TimeEventOwcp(unsigned char *a1, unsigned char *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *a1 = *a2;
    uint64_t v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269B9EA18) + 48);
    uint64_t v8 = &a1[v7];
    uint64_t v9 = &a2[v7];
    uint64_t v10 = sub_251F34880();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9EA20);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v5 = sub_251F34ED0();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
    uint64_t v6 = (int *)type metadata accessor for Event.TimeEvent.TimeComponents(0);
    a1[v6[5]] = a2[v6[5]];
    a1[v6[6]] = a2[v6[6]];
    a1[v6[7]] = a2[v6[7]];
  }
  else
  {
    uint64_t v13 = sub_251F34D20();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

unsigned char *_s9TimeEventOwca(unsigned char *a1, unsigned char *a2)
{
  if (a1 != a2)
  {
    sub_251B5FC84((uint64_t)a1, type metadata accessor for Event.TimeEvent);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      uint64_t v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269B9EA18) + 48);
      uint64_t v8 = &a1[v7];
      uint64_t v9 = &a2[v7];
      uint64_t v10 = sub_251F34880();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9EA20);
        memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v11 + 16))(v8, v9, v10);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v5 = sub_251F34ED0();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
      uint64_t v6 = (int *)type metadata accessor for Event.TimeEvent.TimeComponents(0);
      a1[v6[5]] = a2[v6[5]];
      a1[v6[6]] = a2[v6[6]];
      a1[v6[7]] = a2[v6[7]];
    }
    else
    {
      uint64_t v13 = sub_251F34D20();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_251B5FC84(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unsigned char *_s9TimeEventOwtk(unsigned char *a1, unsigned char *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *a1 = *a2;
    uint64_t v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269B9EA18) + 48);
    uint64_t v8 = &a1[v7];
    uint64_t v9 = &a2[v7];
    uint64_t v10 = sub_251F34880();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9EA20);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v5 = sub_251F34ED0();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
    uint64_t v6 = (int *)type metadata accessor for Event.TimeEvent.TimeComponents(0);
    a1[v6[5]] = a2[v6[5]];
    a1[v6[6]] = a2[v6[6]];
    a1[v6[7]] = a2[v6[7]];
  }
  else
  {
    uint64_t v13 = sub_251F34D20();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v13 - 8) + 32))(a1, a2, v13);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

unsigned char *_s9TimeEventOwta(unsigned char *a1, unsigned char *a2)
{
  if (a1 != a2)
  {
    sub_251B5FC84((uint64_t)a1, type metadata accessor for Event.TimeEvent);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      uint64_t v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269B9EA18) + 48);
      uint64_t v8 = &a1[v7];
      uint64_t v9 = &a2[v7];
      uint64_t v10 = sub_251F34880();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9EA20);
        memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v11 + 32))(v8, v9, v10);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v5 = sub_251F34ED0();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
      uint64_t v6 = (int *)type metadata accessor for Event.TimeEvent.TimeComponents(0);
      a1[v6[5]] = a2[v6[5]];
      a1[v6[6]] = a2[v6[6]];
      a1[v6[7]] = a2[v6[7]];
    }
    else
    {
      uint64_t v13 = sub_251F34D20();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v13 - 8) + 32))(a1, a2, v13);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_251B60138()
{
  uint64_t v0 = sub_251F34D20();
  if (v1 <= 0x3F)
  {
    uint64_t v6 = *(void *)(v0 - 8) + 64;
    uint64_t v2 = type metadata accessor for Event.TimeEvent.TimeComponents(319);
    if (v3 <= 0x3F)
    {
      uint64_t v7 = *(void *)(v2 - 8) + 64;
      sub_251B6024C();
      if (v4 <= 0x3F)
      {
        swift_getTupleTypeLayout2();
        uint64_t v8 = &v5;
        swift_initEnumMetadataMultiPayload();
      }
    }
  }
}

void sub_251B6024C()
{
  if (!qword_269B9EA80)
  {
    sub_251F34880();
    unint64_t v0 = sub_251F36190();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269B9EA80);
    }
  }
}

unsigned char *_s9TimeEventO15SignificantTimeOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251B60370);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Event.TimeEvent.SignificantTime()
{
  return &type metadata for Event.TimeEvent.SignificantTime;
}

void *_s9TimeEventO14TimeComponentsVwCP(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (void *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_251F34ED0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
    *((unsigned char *)a1 + v8) = *((unsigned char *)a2 + v8);
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  }
  return a1;
}

uint64_t _s9TimeEventO14TimeComponentsVwxx(uint64_t a1)
{
  uint64_t v2 = sub_251F34ED0();
  int v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t _s9TimeEventO14TimeComponentsVwcp(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34ED0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t _s9TimeEventO14TimeComponentsVwca(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34ED0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t _s9TimeEventO14TimeComponentsVwtk(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34ED0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t _s9TimeEventO14TimeComponentsVwta(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34ED0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t _s9TimeEventO14TimeComponentsVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251B60744);
}

uint64_t sub_251B60744(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_251F34ED0();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t _s9TimeEventO14TimeComponentsVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251B607C4);
}

uint64_t sub_251B607C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_251F34ED0();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t sub_251B60834()
{
  uint64_t result = sub_251F34ED0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void **_s14DateEventErrorOwta(void **a1, unint64_t *a2)
{
  int v3 = *a1;
  unint64_t v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF) {
    goto LABEL_5;
  }
  if (v4 < 0xFFFFFFFF)
  {

LABEL_5:
    *a1 = (void *)v4;
    return a1;
  }
  *a1 = (void *)v4;

  return a1;
}

uint64_t _s13LocationEventO8UserTypeOwet(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t _s13LocationEventO8UserTypeOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)uint64_t result = 0;
    *(_DWORD *)uint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *_s14DateEventErrorOMa()
{
  return &_s14DateEventErrorON;
}

uint64_t sub_251B609E8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t Event.CharacteristicEvent.serviceID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_251F34DA0();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t Event.CharacteristicEvent.characteristicKind.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for Event.CharacteristicEvent();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for Event.CharacteristicEvent()
{
  uint64_t result = qword_269B9EAC8;
  if (!qword_269B9EAC8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t Event.CharacteristicEvent.condition.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Event.CharacteristicEvent() + 24);
  uint64_t v4 = *(void *)v3;
  unint64_t v5 = *(void *)(v3 + 8);
  *(void *)a1 = *(void *)v3;
  *(void *)(a1 + 8) = v5;
  unsigned __int8 v6 = *(unsigned char *)(v3 + 16);
  *(unsigned char *)(a1 + 16) = v6;
  return sub_251B2ED58(v4, v5, v6);
}

uint64_t Event.CharacteristicEvent.condition.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  char v4 = *((unsigned char *)a1 + 16);
  uint64_t v5 = v1 + *(int *)(type metadata accessor for Event.CharacteristicEvent() + 24);
  uint64_t result = sub_251A58090(*(void *)v5, *(void *)(v5 + 8), *(unsigned char *)(v5 + 16));
  *(void *)uint64_t v5 = v2;
  *(void *)(v5 + 8) = v3;
  *(unsigned char *)(v5 + 16) = v4;
  return result;
}

uint64_t (*Event.CharacteristicEvent.condition.modify())(void)
{
  return nullsub_1;
}

uint64_t Event.CharacteristicEvent.init(serviceID:characteristicKind:condition:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  char v6 = *a2;
  uint64_t v7 = *a3;
  uint64_t v8 = a3[1];
  char v9 = *((unsigned char *)a3 + 16);
  uint64_t v10 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(a4, a1, v10);
  uint64_t result = type metadata accessor for Event.CharacteristicEvent();
  *(unsigned char *)(a4 + *(int *)(result + 20)) = v6;
  uint64_t v12 = a4 + *(int *)(result + 24);
  *(void *)uint64_t v12 = v7;
  *(void *)(v12 + 8) = v8;
  *(unsigned char *)(v12 + 16) = v9;
  return result;
}

uint64_t Event.CharacteristicEvent.Condition.hash(into:)()
{
  return CharacteristicKind.Value.hash(into:)();
}

uint64_t Event.CharacteristicEvent.Condition.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t sub_251B60DBC()
{
  return sub_251F36D00();
}

uint64_t Event.CharacteristicEvent.hash(into:)()
{
  return CharacteristicKind.Value.hash(into:)();
}

uint64_t Event.CharacteristicEvent.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t sub_251B61060()
{
  return CharacteristicKind.Value.hash(into:)();
}

uint64_t sub_251B61158()
{
  return sub_251F36D00();
}

void Event.CharacteristicEvent.init(event:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v5 = objc_msgSend(a1, sel_characteristic);
  id v6 = objc_msgSend(v5, sel_service);

  if (!v6)
  {
    sub_251B62C70();
    swift_allocError();
    void *v10 = 1;
    swift_willThrow();
LABEL_12:

    return;
  }
  id v7 = objc_msgSend(a1, sel_characteristic);
  id v8 = objc_msgSend(a1, sel_triggerValue);
  if (v8)
  {
    id v9 = v8;
    *((void *)&v36 + 1) = swift_getObjectType();
    *(void *)&long long v35 = v9;
  }
  else
  {
    long long v35 = 0u;
    long long v36 = 0u;
  }
  static CharacteristicKind.Value.typedValue(for:value:)(v7, (uint64_t)&v35, (uint64_t)v37);

  sub_251A9090C((uint64_t)&v35);
  if (v38 == 255)
  {
    id v27 = objc_msgSend(a1, sel_triggerValue);
    sub_251B62C70();
    swift_allocError();
    *int v28 = v27;
    swift_willThrow();

    goto LABEL_12;
  }
  uint64_t v34 = v37[1];
  uint64_t v32 = v37[0];
  int v33 = v38;
  id v11 = objc_msgSend(v6, sel_uniqueIdentifier);
  uint64_t v30 = sub_251F34DA0();
  uint64_t v31 = &v29;
  uint64_t v12 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34D80();

  id v15 = objc_msgSend(a1, sel_characteristic);
  id v16 = objc_msgSend(v15, sel_characteristicType);
  uint64_t v39 = v2;
  uint64_t v17 = a2;
  id v18 = v16;
  uint64_t v19 = sub_251F356F0();
  uint64_t v21 = v20;

  v22._countAndFlagsBits = v19;
  v22._object = v21;
  CharacteristicKind.init(rawValue:)(v22);

  if (v35 == 174) {
    char v23 = 0;
  }
  else {
    char v23 = v35;
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v17, v14, v30);
  uint64_t v24 = type metadata accessor for Event.CharacteristicEvent();
  *(unsigned char *)(v17 + *(int *)(v24 + 20)) = v23;
  uint64_t v25 = v17 + *(int *)(v24 + 24);
  uint64_t v26 = v34;
  *(void *)uint64_t v25 = v32;
  *(void *)(v25 + 8) = v26;
  *(unsigned char *)(v25 + 16) = v33;
}

{
  id v2;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  id v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  id v19;
  unsigned __int8 v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  void *v25;
  void *v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  id v31;
  void *v32;
  id v33;
  uint64_t v34;
  char *v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  void *v40;
  void *v41;
  Swift::String v42;
  id v43;
  unsigned __int8 v44;
  uint64_t v45;
  uint64_t v46;
  uint8_t *v47;
  id v48;
  id v49;
  uint64_t v50;
  char *v51;
  id v52;
  id v53;
  uint64_t v54;
  void *v55;
  void *v56;
  Swift::String v57;
  unsigned __int8 v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint8_t *v62;
  void *v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t *v68;
  void *v69;
  uint8_t *v70;
  unsigned __int8 v71[24];
  uint64_t v72;
  void *v73;
  uint8_t *v74;
  unsigned __int8 v75;
  void *v76;

  uint64_t v2 = a1;
  char v4 = objc_msgSend(a1, sel_characteristic);
  id v5 = objc_msgSend(v4, sel_service);

  if (!v5)
  {
    sub_251B62C70();
    swift_allocError();
    *id v16 = 1;
    swift_willThrow();
    goto LABEL_30;
  }
  id v6 = objc_msgSend(v2, sel_thresholdRange);
  id v7 = objc_msgSend(v6, sel_minValue);

  id v8 = objc_msgSend(v2, sel_thresholdRange);
  id v9 = objc_msgSend(v8, sel_maxValue);

  if (!v7)
  {
    if (!v9)
    {
      if (qword_26B21F2C0 != -1) {
        swift_once();
      }
      id v27 = sub_251F350A0();
      __swift_project_value_buffer(v27, (uint64_t)qword_26B21F290);
      uint64_t v2 = v2;
      int v28 = sub_251F35080();
      uint64_t v29 = sub_251F35FB0();
      if (os_log_type_enabled(v28, v29))
      {
        uint64_t v30 = (uint8_t *)swift_slowAlloc();
        uint64_t v76 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v30 = 138412290;
        *(void *)uint64_t v71 = v2;
        uint64_t v31 = v2;
        sub_251F361D0();
        uint64_t v32 = v76;
        *uint64_t v76 = v2;

        _os_log_impl(&dword_2519F3000, v28, v29, "Failed to snapshot event because the range is nil  %@", v30, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
        swift_arrayDestroy();
        MEMORY[0x2533AC760](v32, -1, -1);
        MEMORY[0x2533AC760](v30, -1, -1);
      }
      else
      {
      }
      sub_251B62C70();
      swift_allocError();
      *double v63 = 4;
      swift_willThrow();

      goto LABEL_30;
    }
    uint64_t v17 = v9;
    id v18 = objc_msgSend(v2, sel_characteristic);
    uint64_t v72 = sub_251A1A568(0, (unint64_t *)&qword_269BA04A0);
    *(void *)uint64_t v71 = v17;
    uint64_t v19 = v17;
    static CharacteristicKind.Value.typedValue(for:value:)(v18, (uint64_t)v71, (uint64_t)&v73);

    sub_251A9090C((uint64_t)v71);
    uint64_t v20 = v75;
    if (v75 != 255)
    {
      uint64_t v69 = v73;
      uint64_t v70 = v74;
      uint64_t v65 = v19;
      int v33 = objc_msgSend(v5, sel_uniqueIdentifier);
      uint64_t v67 = (uint64_t *)sub_251F34DA0();
      id v68 = &v64;
      uint64_t v66 = *(v67 - 1);
      MEMORY[0x270FA5388](v67);
      long long v35 = (char *)&v64 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_251F34D80();

      long long v36 = objc_msgSend(v2, sel_characteristic);
      int v37 = objc_msgSend(v36, sel_characteristicType);
      uint64_t v76 = v5;
      unsigned __int8 v38 = v37;
      uint64_t v39 = sub_251F356F0();
      uint64_t v41 = v40;

      v42._countAndFlagsBits = v39;
      v42._object = v41;
      CharacteristicKind.init(rawValue:)(v42);

      uint64_t v43 = v65;
      if (v71[0] == 174) {
        uint64_t v44 = 0;
      }
      else {
        uint64_t v44 = v71[0];
      }
      (*(void (**)(uint64_t, char *, uint64_t *))(v66 + 32))(a2, v35, v67);
      uint64_t v45 = type metadata accessor for Event.CharacteristicEvent();
      *(unsigned char *)(a2 + *(int *)(v45 + 20)) = v44;
      id v46 = a2 + *(int *)(v45 + 24);
      uint64_t v47 = v70;
      *(void *)id v46 = v69;
      *(void *)(v46 + 8) = v47;
      *(unsigned char *)(v46 + 16) = v20 | 0x80;
      return;
    }
    sub_251B62C70();
    swift_allocError();
    *uint64_t v21 = 3;
    swift_willThrow();

LABEL_30:
    return;
  }
  if (v9)
  {
    if (qword_26B21F2C0 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_251F350A0();
    __swift_project_value_buffer(v10, (uint64_t)qword_26B21F290);
    uint64_t v2 = v2;
    id v11 = sub_251F35080();
    uint64_t v12 = sub_251F35FB0();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v69 = (void *)swift_slowAlloc();
      uint64_t v70 = v13;
      *(void *)uint64_t v71 = v2;
      *(_DWORD *)uint64_t v13 = 138412290;
      uint64_t v76 = v5;
      uint64_t v14 = v2;
      sub_251F361D0();
      id v15 = v69;
      *uint64_t v69 = v2;

      id v5 = v76;
      _os_log_impl(&dword_2519F3000, v11, v12, "Failed to snapshot event because it is falls within threshold range %@", v70, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v15, -1, -1);
      MEMORY[0x2533AC760](v70, -1, -1);
    }
    else
    {
    }
    sub_251B62C70();
    swift_allocError();
    *uint64_t v26 = 5;
    swift_willThrow();

    goto LABEL_30;
  }
  Swift::String v22 = v7;
  char v23 = objc_msgSend(v2, sel_characteristic);
  uint64_t v72 = sub_251A1A568(0, (unint64_t *)&qword_269BA04A0);
  *(void *)uint64_t v71 = v22;
  uint64_t v24 = v22;
  static CharacteristicKind.Value.typedValue(for:value:)(v23, (uint64_t)v71, (uint64_t)&v73);

  sub_251A9090C((uint64_t)v71);
  if (v75 == 255)
  {
    sub_251B62C70();
    swift_allocError();
    *uint64_t v25 = 3;
    swift_willThrow();

    goto LABEL_30;
  }
  LODWORD(v68) = v75;
  uint64_t v69 = v73;
  uint64_t v70 = v74;
  int v48 = objc_msgSend(v5, sel_uniqueIdentifier);
  uint64_t v76 = v5;
  uint64_t v49 = v48;
  uint64_t v66 = sub_251F34DA0();
  uint64_t v67 = &v64;
  uint64_t v65 = *(id *)(v66 - 8);
  MEMORY[0x270FA5388](v66);
  uint64_t v51 = (char *)&v64 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34D80();

  id v52 = objc_msgSend(v2, sel_characteristic);
  char v53 = objc_msgSend(v52, sel_characteristicType);
  char v54 = sub_251F356F0();
  char v56 = v55;

  v57._countAndFlagsBits = v54;
  v57._object = v56;
  CharacteristicKind.init(rawValue:)(v57);

  if (v71[0] == 174) {
    uint64_t v58 = 0;
  }
  else {
    uint64_t v58 = v71[0];
  }
  char v59 = v68 | 0x40;
  (*((void (**)(uint64_t, char *, uint64_t))v65 + 4))(a2, v51, v66);
  uint64_t v60 = type metadata accessor for Event.CharacteristicEvent();
  *(unsigned char *)(a2 + *(int *)(v60 + 20)) = v58;
  char v61 = a2 + *(int *)(v60 + 24);
  id v62 = v70;
  *(void *)char v61 = v69;
  *(void *)(v61 + 8) = v62;
  *(unsigned char *)(v61 + 16) = v59;
}

HMEvent __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Event.CharacteristicEvent.createEvent(in:)(HMHome in)
{
  Class isa = v2;
  sub_251B61F54(v1);
  if (v4)
  {
    id v5 = v4;
    type metadata accessor for Event.CharacteristicEvent();
    id v6 = HMService.subscript.getter();
    if (v6)
    {
      id v7 = v6;
      Class isa = Event.CharacteristicEvent.createEvent(for:)((HMCharacteristic)v6).super.isa;
    }
    else
    {
      sub_251B62C70();
      swift_allocError();
      *id v9 = 2;
      swift_willThrow();
    }
  }
  else
  {
    sub_251B62C70();
    swift_allocError();
    *id v8 = 1;
    swift_willThrow();
  }
  return (HMEvent)isa;
}

void sub_251B61F54(uint64_t a1)
{
  id v3 = objc_msgSend(v1, sel_accessories);
  sub_251A1A568(0, (unint64_t *)&qword_26B21EAF8);
  unint64_t v4 = sub_251F35AC0();

  uint64_t v5 = sub_251F34DA0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](v5);
  uint64_t v38 = v6;
  id v8 = *(void (**)(void))(v6 + 16);
  uint64_t v9 = ((uint64_t (*)(char *, uint64_t, uint64_t))v8)((char *)v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
  uint64_t v45 = v7;
  MEMORY[0x270FA5388](v9);
  uint64_t v10 = v5;
  uint64_t v47 = (char *)v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8();
  long long v36 = (char *)v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v4 >> 62)
  {
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_251F366C0();
    swift_bridgeObjectRelease();
    if (v11) {
      goto LABEL_3;
    }
LABEL_22:
    uint64_t v24 = *(void (**)(char *, uint64_t))(v38 + 8);
    v24(v36, v10);
LABEL_29:
    swift_bridgeObjectRelease();
    v24(v47, v10);
    return;
  }
  uint64_t v11 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v11) {
    goto LABEL_22;
  }
LABEL_3:
  unint64_t v12 = 0;
  unint64_t v40 = v4;
  unint64_t v41 = v4 & 0xC000000000000001;
  uint64_t v44 = (void (**)(char *, uint64_t))(v38 + 8);
  v34[1] = (v38 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  unint64_t v35 = v4 + 32;
  uint64_t v46 = v10;
  uint64_t v39 = v11;
  while (1)
  {
    unint64_t v43 = v12;
    if (v41)
    {
      swift_bridgeObjectRetain();
      id v13 = (id)MEMORY[0x2533AB3A0](v12, v4);
    }
    else
    {
      uint64_t v14 = *(void **)(v35 + 8 * v12);
      swift_bridgeObjectRetain();
      id v13 = v14;
      uint64_t v10 = v46;
    }
    id v42 = v13;
    id v15 = objc_msgSend(v13, sel_services);
    uint64_t v37 = sub_251A1A568(0, (unint64_t *)&qword_26B21F180);
    unint64_t v16 = sub_251F35AC0();

    if (v16 >> 62) {
      break;
    }
    uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v17) {
      goto LABEL_9;
    }
LABEL_16:
    swift_bridgeObjectRelease_n();
    unint64_t v4 = v40;
    swift_bridgeObjectRelease();

    unint64_t v12 = v43 + 1;
    if (__OFADD__(v43, 1))
    {
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
    if (v12 == v39) {
      goto LABEL_22;
    }
  }
  swift_bridgeObjectRetain_n();
  uint64_t v17 = sub_251F366C0();
  swift_bridgeObjectRelease();
  if (!v17) {
    goto LABEL_16;
  }
LABEL_9:
  uint64_t v18 = 4;
  while (1)
  {
    if ((v16 & 0xC000000000000001) != 0) {
      id v19 = (id)MEMORY[0x2533AB3A0](v18 - 4, v16);
    }
    else {
      id v19 = *(id *)(v16 + 8 * v18);
    }
    uint64_t v20 = v19;
    unint64_t v4 = v18 - 3;
    if (__OFADD__(v18 - 4, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    id v21 = objc_msgSend(v19, sel_uniqueIdentifier);
    MEMORY[0x270FA5388](v21);
    char v23 = (char *)v34 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_251F34D80();

    LOBYTE(v21) = sub_251F34D70();
    uint64_t v24 = *v44;
    uint64_t v25 = v23;
    uint64_t v10 = v46;
    (*v44)(v25, v46);

    if (v21) {
      break;
    }
    ++v18;
    if (v4 == v17) {
      goto LABEL_16;
    }
  }
  unint64_t v26 = v40;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease_n();
  if (v43 == v39) {
    goto LABEL_22;
  }
  if (v41)
  {
    id v27 = (id)MEMORY[0x2533AB3A0]();
LABEL_28:
    int v28 = v27;
    id v29 = objc_msgSend(v27, sel_services);
    unint64_t v30 = sub_251F35AC0();

    MEMORY[0x270FA5388](v31);
    uint64_t v32 = v36;
    v34[-2] = v36;
    int v33 = sub_251A95638(sub_251B637FC, (uint64_t)&v34[-4], v30);
    swift_bridgeObjectRelease();
    uint64_t v10 = v46;
    v24(v32, v46);

    if (v33) {
      goto LABEL_29;
    }
  }
  else
  {
    if ((v43 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v43 < *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v27 = *(id *)(v35 + 8 * v43);
      goto LABEL_28;
    }
    __break(1u);
  }
  __break(1u);
}

HMEvent __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Event.CharacteristicEvent.createEvent(for:)(HMCharacteristic a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Event.CharacteristicEvent() + 24);
  uint64_t v5 = *(void *)v3;
  unint64_t v4 = *(void *)(v3 + 8);
  unsigned int v6 = *(unsigned __int8 *)(v3 + 16);
  if (v6 <= 0x3F)
  {
    sub_251B2ED58(v5, v4, v6);
    uint64_t v7 = a1.super.isa;
    id v8 = (void *)CharacteristicKind.Value.rawObjectValue.getter();
    id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0E258]), sel_initWithCharacteristic_triggerValue_, v7, v8);

    sub_251A58090(v5, v4, v6);
    return (HMEvent)v9;
  }
  uint64_t v11 = CharacteristicKind.Value.rawObjectValue.getter();
  if (!v11) {
    goto LABEL_9;
  }
  unint64_t v12 = (void *)v11;
  self;
  uint64_t v13 = swift_dynamicCastObjCClass();
  if (!v13)
  {

LABEL_9:
    sub_251B62C70();
    swift_allocError();
    *id v21 = 3;
    return (HMEvent)swift_willThrow();
  }
  uint64_t v14 = v13;
  id v15 = self;
  unint64_t v16 = &selRef_numberRangeWithMinValue_;
  if ((v6 & 0xC0) != 0x80) {
    unint64_t v16 = &selRef_numberRangeWithMaxValue_;
  }
  id v17 = objc_msgSend(v15, *v16, v14);
  id v18 = objc_allocWithZone(MEMORY[0x263F0E288]);
  id v19 = a1.super.isa;
  id v20 = objc_msgSend(v18, sel_initWithCharacteristic_thresholdRange_, v19, v17);

  return (HMEvent)v20;
}

uint64_t Event.CharacteristicEvent.debugDescription.getter()
{
  return 0;
}

uint64_t Event.CharacteristicEvent.Condition.debugDescription.getter()
{
  uint64_t v2 = *(void *)v0;
  unint64_t v1 = *(void *)(v0 + 8);
  unsigned int v3 = *(unsigned __int8 *)(v0 + 16);
  if (v3 >> 6)
  {
    if (v3 >> 6 == 1) {
      uint64_t v4 = 0x203E2065756C6176;
    }
    else {
      uint64_t v4 = 0x203C2065756C6176;
    }
    uint64_t v6 = v4;
  }
  else
  {
    uint64_t v6 = 0x3D3D2065756C6176;
  }
  sub_251B2ED58(v2, v1, v3);
  CharacteristicKind.Value.description.getter();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251A58090(v2, v1, v3);
  return v6;
}

uint64_t sub_251B628C4(id *a1)
{
  id v1 = objc_msgSend(*a1, sel_uniqueIdentifier);
  uint64_t v2 = sub_251F34DA0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34D80();

  char v6 = sub_251F34D70();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v6 & 1;
}

uint64_t _s13HomeDataModel5EventO014CharacteristicD0V9ConditionO2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  unint64_t v2 = *(void *)(a1 + 8);
  unsigned int v4 = *(unsigned __int8 *)(a1 + 16);
  uint64_t v6 = *(void *)a2;
  unint64_t v5 = *(void *)(a2 + 8);
  unsigned int v7 = *(unsigned __int8 *)(a2 + 16);
  if (v4 >> 6)
  {
    if (v4 >> 6 == 1)
    {
      if ((v7 & 0xC0) != 0x40) {
        goto LABEL_10;
      }
      goto LABEL_8;
    }
    if ((v7 & 0xC0) == 0x80)
    {
LABEL_8:
      uint64_t v13 = *(void *)a1;
      unint64_t v14 = v2;
      char v15 = v4 & 0x3F;
      uint64_t v10 = v6;
      unint64_t v11 = v5;
      char v12 = v7 & 0x3F;
      goto LABEL_9;
    }
LABEL_10:
    sub_251B2ED58(*(void *)a1, v2, v4);
    sub_251B2ED58(v6, v5, v7);
    sub_251A58090(v3, v2, v4);
    sub_251A58090(v6, v5, v7);
    char v8 = 0;
    return v8 & 1;
  }
  if (v7 > 0x3F) {
    goto LABEL_10;
  }
  uint64_t v13 = *(void *)a1;
  unint64_t v14 = v2;
  char v15 = v4;
  uint64_t v10 = v6;
  unint64_t v11 = v5;
  char v12 = v7;
LABEL_9:
  sub_251B2ED58(v6, v5, v7);
  sub_251B2ED58(v3, v2, v4);
  sub_251B2ED58(v3, v2, v4);
  sub_251B2ED58(v6, v5, v7);
  char v8 = _s13HomeDataModel18CharacteristicKindO5ValueO2eeoiySbAE_AEtFZ_0((uint64_t)&v13, (uint64_t)&v10);
  sub_251A58090(v3, v2, v4);
  sub_251A58090(v6, v5, v7);
  sub_251A58090(v6, v5, v7);
  sub_251A58090(v3, v2, v4);
  return v8 & 1;
}

uint64_t _s13HomeDataModel5EventO014CharacteristicD0V2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  if (sub_251F34D70())
  {
    uint64_t v4 = type metadata accessor for Event.CharacteristicEvent();
    uint64_t v5 = *(int *)(v4 + 20);
    char v6 = *(unsigned char *)(a1 + v5);
    LOBYTE(v5) = *(unsigned char *)(a2 + v5);
    LOBYTE(v20) = v6;
    LOBYTE(v18) = v5;
    unint64_t v7 = CharacteristicKind.rawValue.getter();
    uint64_t v9 = v8;
    if (v7 == CharacteristicKind.rawValue.getter() && v9 == v10)
    {
      swift_bridgeObjectRelease_n();
LABEL_7:
      uint64_t v13 = *(int *)(v4 + 24);
      char v14 = *(unsigned char *)(a1 + v13 + 16);
      long long v20 = *(_OWORD *)(a1 + v13);
      char v21 = v14;
      char v15 = (long long *)(a2 + v13);
      char v16 = *((unsigned char *)v15 + 16);
      long long v18 = *v15;
      char v19 = v16;
      char v11 = _s13HomeDataModel5EventO014CharacteristicD0V9ConditionO2eeoiySbAG_AGtFZ_0((uint64_t)&v20, (uint64_t)&v18);
      return v11 & 1;
    }
    char v12 = sub_251F36B10();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v11 = 0;
    if (v12) {
      goto LABEL_7;
    }
  }
  else
  {
    char v11 = 0;
  }
  return v11 & 1;
}

unint64_t sub_251B62C70()
{
  unint64_t result = qword_269B9EAB0;
  if (!qword_269B9EAB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9EAB0);
  }
  return result;
}

unint64_t sub_251B62CC8()
{
  unint64_t result = qword_269B9EAB8;
  if (!qword_269B9EAB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9EAB8);
  }
  return result;
}

unint64_t sub_251B62D20()
{
  unint64_t result = qword_269B9EAC0;
  if (!qword_269B9EAC0)
  {
    type metadata accessor for Event.CharacteristicEvent();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9EAC0);
  }
  return result;
}

void *_s19CharacteristicEventVwCP(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_251F34DA0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = *(void *)((char *)a2 + v8);
    unint64_t v12 = *((void *)v10 + 1);
    unsigned __int8 v13 = v10[16];
    sub_251B2ED58(v11, v12, v13);
    *(void *)uint64_t v9 = v11;
    *((void *)v9 + 1) = v12;
    v9[16] = v13;
  }
  return a1;
}

uint64_t _s19CharacteristicEventVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  uint64_t v6 = *(void *)v5;
  unint64_t v7 = *(void *)(v5 + 8);
  unsigned __int8 v8 = *(unsigned char *)(v5 + 16);
  return sub_251A58090(v6, v7, v8);
}

uint64_t _s19CharacteristicEventVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7);
  unint64_t v11 = *(void *)(a2 + v7 + 8);
  unsigned __int8 v12 = *(unsigned char *)(v9 + 16);
  sub_251B2ED58(v10, v11, v12);
  *(void *)uint64_t v8 = v10;
  *(void *)(v8 + 8) = v11;
  *(unsigned char *)(v8 + 16) = v12;
  return a1;
}

uint64_t _s19CharacteristicEventVwca(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)v9;
  unint64_t v11 = *(void *)(v9 + 8);
  unsigned __int8 v12 = *(unsigned char *)(v9 + 16);
  sub_251B2ED58(*(void *)v9, v11, v12);
  uint64_t v13 = *(void *)v8;
  unint64_t v14 = *(void *)(v8 + 8);
  *(void *)uint64_t v8 = v10;
  *(void *)(v8 + 8) = v11;
  unsigned __int8 v15 = *(unsigned char *)(v8 + 16);
  *(unsigned char *)(v8 + 16) = v12;
  sub_251A58090(v13, v14, v15);
  return a1;
}

uint64_t _s19CharacteristicEventVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(unsigned char *)(v8 + 16) = *(unsigned char *)(v9 + 16);
  return a1;
}

uint64_t _s19CharacteristicEventVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  char v10 = *(unsigned char *)(v9 + 16);
  uint64_t v11 = *(void *)v8;
  unint64_t v12 = *(void *)(v8 + 8);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  unsigned __int8 v13 = *(unsigned char *)(v8 + 16);
  *(unsigned char *)(v8 + 16) = v10;
  sub_251A58090(v11, v12, v13);
  return a1;
}

uint64_t _s19CharacteristicEventVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251B631A0);
}

uint64_t sub_251B631A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xAE) {
      return v10 - 173;
    }
    else {
      return 0;
    }
  }
}

uint64_t _s19CharacteristicEventVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251B63270);
}

uint64_t sub_251B63270(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_251F34DA0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 - 83;
  }
  return result;
}

uint64_t sub_251B6332C()
{
  uint64_t result = sub_251F34DA0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t _s19CharacteristicEventV9ConditionOwxx(uint64_t a1)
{
  return sub_251A58090(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s19CharacteristicEventV9ConditionOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_251B2ED58(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s19CharacteristicEventV9ConditionOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_251B2ED58(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_251A58090(v6, v7, v8);
  return a1;
}

uint64_t _s19CharacteristicEventV9ConditionOwta(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_251A58090(v4, v5, v6);
  return a1;
}

uint64_t _s19CharacteristicEventV9ConditionOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xE && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 14);
  }
  unsigned int v3 = ((*(unsigned __int8 *)(a1 + 16) >> 2) & 0xC | (*(unsigned __int8 *)(a1 + 16) >> 6)) ^ 0xF;
  if (v3 >= 0xD) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t _s19CharacteristicEventV9ConditionOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xD)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 14;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xE) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xE) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2)
    {
      *(void *)uint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(unsigned char *)(result + 16) = 16 * (((-a2 >> 2) & 3) - 4 * a2);
    }
  }
  return result;
}

uint64_t sub_251B63574(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16) >> 6;
}

uint64_t sub_251B63580(uint64_t result)
{
  *(unsigned char *)(result + 16) &= 0x3Fu;
  return result;
}

uint64_t sub_251B63590(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = *(unsigned char *)(result + 16) & 0xF | (a2 << 6);
  return result;
}

ValueMetadata *type metadata accessor for Event.CharacteristicEvent.Condition()
{
  return &type metadata for Event.CharacteristicEvent.Condition;
}

unint64_t _s19CharacteristicEventV5ErrorOwxx(unint64_t *a1)
{
  unint64_t result = *a1;
  int v2 = -1;
  if (result < 0xFFFFFFFF) {
    int v2 = result;
  }
  if ((v2 + 1) <= 1) {
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t *_s19CharacteristicEventV5ErrorOwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  LODWORD(v4) = -1;
  if ((unint64_t)*a2 < 0xFFFFFFFF) {
    uint64_t v4 = *a2;
  }
  if ((v4 + 1) <= 1) {
    uint64_t v3 = swift_unknownObjectRetain();
  }
  *a1 = v3;
  return a1;
}

uint64_t *_s19CharacteristicEventV5ErrorOwca(uint64_t *a1, uint64_t *a2)
{
  LODWORD(v3) = -1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v4) = -1;
  }
  else {
    uint64_t v4 = *a1;
  }
  unsigned int v5 = v4 + 1;
  uint64_t v6 = *a2;
  if ((unint64_t)*a2 < 0xFFFFFFFF) {
    uint64_t v3 = *a2;
  }
  unsigned int v7 = v3 + 1;
  if (v5 > 1)
  {
    *a1 = v6;
    if (v7 <= 1) {
      swift_unknownObjectRetain();
    }
  }
  else if (v7 > 1)
  {
    swift_unknownObjectRelease();
    *a1 = *a2;
  }
  else
  {
    *a1 = v6;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
  }
  return a1;
}

unint64_t *_s19CharacteristicEventV5ErrorOwta(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  LODWORD(v4) = -1;
  if (v3 >= 0xFFFFFFFF) {
    int v5 = -1;
  }
  else {
    int v5 = v3;
  }
  unsigned int v6 = v5 + 1;
  unint64_t v7 = *a2;
  if (*a2 < 0xFFFFFFFF) {
    unint64_t v4 = *a2;
  }
  unsigned int v8 = v4 + 1;
  if (v6 > 1) {
    goto LABEL_11;
  }
  if (v8 > 1)
  {
    swift_unknownObjectRelease();
LABEL_11:
    *a1 = v7;
    return a1;
  }
  *a1 = v7;
  swift_unknownObjectRelease();
  return a1;
}

uint64_t _s19CharacteristicEventV5ErrorOwet(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFF9 && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483642);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) < 2) {
    LODWORD(v3) = 0;
  }
  if (v3 >= 6) {
    return (v3 - 5);
  }
  else {
    return 0;
  }
}

uint64_t sub_251B6379C(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  if ((v1 + 1) >= 2) {
    return v1;
  }
  else {
    return 0;
  }
}

void *sub_251B637BC(void *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    *unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 0x7FFFFFFF;
  }
  else if (a2)
  {
    *unint64_t result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for Event.CharacteristicEvent.Error()
{
  return &type metadata for Event.CharacteristicEvent.Error;
}

uint64_t sub_251B637FC(id *a1)
{
  return sub_251B628C4(a1) & 1;
}

uint64_t sub_251B6381C(unint64_t a1)
{
  unint64_t v2 = v1;
  unint64_t v3 = a1;
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v5 = MEMORY[0x263F8EE78];
    if (!v4) {
      return v5;
    }
    uint64_t v20 = MEMORY[0x263F8EE78];
    uint64_t result = sub_251A3E084(0, v4 & ~(v4 >> 63), 0);
    if (v4 < 0) {
      break;
    }
    v16[1] = v2;
    uint64_t v5 = v20;
    unint64_t v18 = v3 & 0xC000000000000001;
    uint64_t v7 = sub_251F34DA0();
    uint64_t v8 = 0;
    uint64_t v17 = v7;
    uint64_t v9 = *(void *)(v7 - 8);
    uint64_t v10 = *(void *)(v9 + 64);
    v16[2] = v9 + 32;
    unint64_t v19 = v3;
    while (v4 != v8)
    {
      MEMORY[0x270FA5388](v7);
      if (v18) {
        id v11 = (id)MEMORY[0x2533AB3A0](v8, v3);
      }
      else {
        id v11 = *(id *)(v3 + 8 * v8 + 32);
      }
      unint64_t v12 = v11;
      id v13 = objc_msgSend(v11, sel_uniqueIdentifier);
      sub_251F34D80();

      uint64_t v20 = v5;
      unint64_t v15 = *(void *)(v5 + 16);
      unint64_t v14 = *(void *)(v5 + 24);
      unint64_t v2 = v15 + 1;
      if (v15 >= v14 >> 1)
      {
        sub_251A3E084(v14 > 1, v15 + 1, 1);
        uint64_t v5 = v20;
      }
      ++v8;
      *(void *)(v5 + 16) = v2;
      uint64_t v7 = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v9 + 32))(v5+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v15, (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v17);
      unint64_t v3 = v19;
      if (v4 == v8) {
        return v5;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_251F366C0();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t Event.LocationEvent.UserType.hash(into:)(long long *a1)
{
  uint64_t v3 = *v1;
  if (!*v1 || v3 == 1) {
    return sub_251F36CB0();
  }
  sub_251F36CB0();
  return sub_251A54708(a1, v3);
}

uint64_t Event.LocationEvent.UserType.hashValue.getter()
{
  unint64_t v1 = *v0;
  sub_251F36CA0();
  sub_251F36CB0();
  if (v1 > 1) {
    sub_251A54708(v3, v1);
  }
  return sub_251F36D00();
}

uint64_t sub_251B63B4C()
{
  unint64_t v1 = *v0;
  sub_251F36CA0();
  sub_251F36CB0();
  if (v1 > 1) {
    sub_251A54708(v3, v1);
  }
  return sub_251F36D00();
}

uint64_t sub_251B63BC0(long long *a1)
{
  uint64_t v3 = *v1;
  if (!*v1 || v3 == 1) {
    return sub_251F36CB0();
  }
  sub_251F36CB0();
  return sub_251A54708(a1, v3);
}

uint64_t sub_251B63C40()
{
  unint64_t v1 = *v0;
  sub_251F36CA0();
  sub_251F36CB0();
  if (v1 > 1) {
    sub_251A54708(v3, v1);
  }
  return sub_251F36D00();
}

uint64_t Event.LocationEvent.CircularRegion.hash(into:)()
{
  return sub_251F36CF0();
}

BOOL static Event.LocationEvent.CircularRegion.== infix(_:_:)(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

uint64_t Event.LocationEvent.CircularRegion.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t sub_251B63DB8()
{
  return sub_251F36CF0();
}

uint64_t sub_251B63E10()
{
  return sub_251F36D00();
}

BOOL sub_251B63E84(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

uint64_t Event.LocationEvent.hash(into:)(long long *a1)
{
  uint64_t v2 = v1;
  unint64_t v4 = *(void *)(v2 + 8);
  if (*(unsigned char *)(v2 + 24) == 1)
  {
    sub_251F36CB0();
    sub_251F36CF0();
    sub_251F36CF0();
    return sub_251F36CF0();
  }
  else
  {
    sub_251F36CB0();
    sub_251F36CB0();
    if (v4 > 1)
    {
      sub_251F36CB0();
      return sub_251A54708(a1, v4);
    }
    else
    {
      return sub_251F36CB0();
    }
  }
}

uint64_t Event.LocationEvent.hashValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  char v2 = *(unsigned char *)(v0 + 24);
  *(_OWORD *)&v4[9] = *(_OWORD *)v0;
  v4[11] = v1;
  char v5 = v2;
  sub_251F36CA0();
  Event.LocationEvent.hash(into:)((long long *)v4);
  return sub_251F36D00();
}

uint64_t sub_251B63FE0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  char v2 = *(unsigned char *)(v0 + 24);
  *(_OWORD *)&v4[9] = *(_OWORD *)v0;
  v4[11] = v1;
  char v5 = v2;
  sub_251F36CA0();
  Event.LocationEvent.hash(into:)((long long *)v4);
  return sub_251F36D00();
}

uint64_t sub_251B64040()
{
  uint64_t v1 = *(void *)(v0 + 16);
  char v2 = *(unsigned char *)(v0 + 24);
  *(_OWORD *)&v4[9] = *(_OWORD *)v0;
  v4[11] = v1;
  char v5 = v2;
  sub_251F36CA0();
  Event.LocationEvent.hash(into:)((long long *)v4);
  return sub_251F36D00();
}

void Event.LocationEvent.init(event:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_region);
  if (v4)
  {
    char v5 = v4;
    self;
    unsigned int v6 = (void *)swift_dynamicCastObjCClass();
    if (v6)
    {
      uint64_t v7 = v6;
      objc_msgSend(v6, sel_center);
      uint64_t v9 = v8;
      objc_msgSend(v7, sel_center);
      uint64_t v11 = v10;
      objc_msgSend(v7, sel_radius);
      uint64_t v13 = v12;

      *(void *)a2 = v9;
      *(void *)(a2 + 8) = v11;
      *(void *)(a2 + 16) = v13;
      *(unsigned char *)(a2 + 24) = 1;
      return;
    }
  }
  sub_251B65130();
  swift_allocError();
  *unint64_t v14 = 2;
  swift_willThrow();
}

{
  id v4;
  uint64_t v5;
  id v6;
  unint64_t v7;
  uint64_t v8;
  id v9;
  unsigned char *v10;

  id v4 = objc_msgSend(a1, sel_presenceUserType);
  if (v4 == (id)1)
  {
    char v5 = 0;
    goto LABEL_7;
  }
  if (v4 == (id)3)
  {
    unsigned int v6 = objc_msgSend(a1, sel_users);
    sub_251B65184();
    uint64_t v7 = sub_251F35AC0();

    uint64_t v8 = sub_251B6381C(v7);
    swift_bridgeObjectRelease();
    char v5 = sub_251EE04F8(v8);
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  if (v4 == (id)2)
  {
    char v5 = 1;
LABEL_7:
    uint64_t v9 = objc_msgSend(a1, sel_presenceEventType);

    *(void *)a2 = v9;
    *(void *)(a2 + 8) = v5;
    *(void *)(a2 + 16) = 0;
    *(unsigned char *)(a2 + 24) = 0;
    return;
  }
  sub_251B65130();
  swift_allocError();
  char *v10 = 3;
  swift_willThrow();
}

HMEvent __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Event.LocationEvent.createEvent(in:)(HMHome in)
{
  double v4 = *(double *)v1;
  id v3 = *(id *)(v1 + 8);
  if (*(unsigned char *)(v1 + 24) == 1)
  {
    double v5 = *(double *)(v1 + 16);
    id v6 = objc_allocWithZone(MEMORY[0x263F00A28]);
    uint64_t v7 = (void *)sub_251F356C0();
    id v8 = objc_msgSend(v6, sel_initWithCenter_radius_identifier_, v7, v4, *(double *)&v3, v5);

    id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0E478]), sel_initWithRegion_, v8);
    return (HMEvent)v9;
  }
  else if (v3)
  {
    if (v3 == (id)1)
    {
      return (HMEvent)objc_msgSend(objc_allocWithZone(MEMORY[0x263F0E670]), sel_initWithPresenceEventType_presenceUserType_, *(void *)&v4, 2);
    }
    else
    {
      v14[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC40);
      void v14[4] = sub_251B651C4();
      v14[0] = v3;
      sub_251B2EDB8((unint64_t)v3);
      Event.LocationEvent.users(for:in:)(v14, in.super.isa);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v14);
      if (!v2)
      {
        id v12 = objc_allocWithZone(MEMORY[0x263F0E670]);
        sub_251B65184();
        uint64_t v13 = (void *)sub_251F35AA0();
        swift_bridgeObjectRelease();
        id v3 = objc_msgSend(v12, sel_initWithPresenceEventType_presenceUserType_users_, *(void *)&v4, 3, v13);
      }
      return (HMEvent)v3;
    }
  }
  else
  {
    return (HMEvent)objc_msgSend(objc_allocWithZone(MEMORY[0x263F0E670]), sel_initWithPresenceEventType_presenceUserType_, *(void *)&v4, 1);
  }
}

void *Event.LocationEvent.users(for:in:)(void *a1, void *a2)
{
  double v4 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (sub_251F35EF0())
  {
    sub_251B65130();
    swift_allocError();
    char v6 = 0;
LABEL_6:
    *double v5 = v6;
    swift_willThrow();
    return v4;
  }
  id v7 = objc_msgSend(a2, sel_users);
  sub_251B65184();
  unint64_t v8 = sub_251F35AC0();

  MEMORY[0x270FA5388](v9);
  v13[2] = a1;
  unint64_t v10 = sub_251EB5B44(sub_251B65220, (uint64_t)v13, v8);
  double v4 = (void *)v10;
  if (v10 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_251F366C0();
    swift_bridgeObjectRelease();
    if (v12) {
      return v4;
    }
    goto LABEL_5;
  }
  if (!*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_5:
    swift_bridgeObjectRelease();
    sub_251B65130();
    swift_allocError();
    char v6 = 1;
    goto LABEL_6;
  }
  return v4;
}

uint64_t Event.LocationEvent.staticUsers(for:in:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  if (sub_251F35EF0())
  {
    sub_251B65130();
    swift_allocError();
    *uint64_t v2 = 0;
    return swift_willThrow();
  }
  else
  {
    double v4 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    MEMORY[0x270FA5388](v4);
    type metadata accessor for StaticUser();
    return sub_251F35910();
  }
}

uint64_t sub_251B64768@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(void *)(a2 + *(int *)(type metadata accessor for StateSnapshot(0) + 64));
  if (*(void *)(v5 + 16) && (unint64_t v6 = sub_2519FE584(a1), (v7 & 1) != 0))
  {
    unint64_t v8 = v6;
    uint64_t v9 = *(void *)(v5 + 56);
    uint64_t v10 = type metadata accessor for StaticUser();
    uint64_t v11 = *(void *)(v10 - 8);
    sub_251B65800(v9 + *(void *)(v11 + 72) * v8, a3);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(a3, 0, 1, v10);
  }
  else
  {
    uint64_t v13 = type metadata accessor for StaticUser();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a3, 1, 1, v13);
  }
}

uint64_t sub_251B64894(void **a1, void *a2)
{
  uint64_t v2 = *a1;
  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  id v3 = objc_msgSend(v2, sel_uniqueIdentifier);
  uint64_t v4 = sub_251F34DA0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34D80();

  sub_251A9FE88();
  char v8 = sub_251F359B0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v8 & 1;
}

uint64_t Event.LocationEvent.debugDescription.getter()
{
  if (*(unsigned char *)(v0 + 24) == 1)
  {
    sub_251F36400();
    sub_251F35800();
    sub_251F35DF0();
    sub_251F35800();
    sub_251F35DF0();
    sub_251F35800();
    sub_251F35DF0();
  }
  else
  {
    id v1 = (id)HMPresenceEventTypeAsString();
    if (v1)
    {
      uint64_t v2 = v1;
      sub_251F356F0();
    }
    else
    {
      sub_251F36AB0();
      sub_251F35800();
      swift_bridgeObjectRelease();
      sub_251F35800();
    }
    sub_251F36400();
    sub_251F35800();
    sub_251F35800();
    swift_bridgeObjectRelease();
    sub_251F35800();
    sub_251F36640();
  }
  sub_251F35800();
  return 0;
}

uint64_t _s13HomeDataModel5EventO08LocationD0O2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(uint64_t *)a1;
  unint64_t v3 = *(unint64_t *)(a1 + 8);
  uint64_t v4 = *(uint64_t *)(a1 + 16);
  int v5 = *(unsigned __int8 *)(a1 + 24);
  uint64_t v7 = *(uint64_t *)a2;
  unint64_t v6 = *(unint64_t *)(a2 + 8);
  uint64_t v8 = *(uint64_t *)(a2 + 16);
  char v9 = *(unsigned char *)(a2 + 24);
  if (v5 != 1)
  {
    if (!*(unsigned char *)(a2 + 24))
    {
      if (v2 == v7)
      {
        if (*(double *)&v3 == 0.0)
        {
          if (*(double *)&v6 == 0.0)
          {
            sub_251B2EDB8(0);
            sub_251B2EDB8(0);
            sub_251A580F0(0);
            sub_251A580F0(0);
            sub_251A580E0(v2, 0, v4, 0);
            sub_251A580E0(v2, 0, v8, 0);
            sub_251A580E0(v2, 0, v8, 0);
            sub_251A580E0(v2, 0, v4, 0);
            return 1;
          }
        }
        else if (v3 == 1)
        {
          if (v6 == 1)
          {
            uint64_t v11 = 1;
            sub_251B2EDB8(1uLL);
            sub_251B2EDB8(1uLL);
            sub_251A580F0(1uLL);
            sub_251A580F0(1uLL);
            sub_251A580E0(v2, 1uLL, v4, 0);
            sub_251A580E0(v2, 1uLL, v8, 0);
            sub_251A580E0(v2, 1uLL, v8, 0);
            sub_251A580E0(v2, 1uLL, v4, 0);
            return v11;
          }
        }
        else if (v6 >= 2)
        {
          sub_251B2EDA8(*(void *)a1, *(void *)(a2 + 8), v8, 0);
          sub_251B2EDA8(v2, v3, v4, 0);
          sub_251B2EDA8(v2, v6, v8, 0);
          sub_251B2EDA8(v2, v3, v4, 0);
          sub_251B2EDA8(v2, v6, v8, 0);
          sub_251B2EDA8(v2, v3, v4, 0);
          char v17 = sub_251B04848(v3, v6);
          sub_251A580F0(v3);
          sub_251A580F0(v6);
          sub_251A580E0(v2, v3, v4, 0);
          sub_251A580E0(v2, v6, v8, 0);
          sub_251A580E0(v2, v6, v8, 0);
          sub_251A580E0(v2, v3, v4, 0);
          return (v17 & 1) != 0;
        }
        sub_251B2EDA8(*(void *)a1, *(void *)(a2 + 8), v8, 0);
        sub_251B2EDA8(v2, v3, v4, 0);
        sub_251B2EDA8(v2, v6, v8, 0);
        sub_251B2EDA8(v2, v3, v4, 0);
        sub_251B2EDA8(v2, v6, v8, 0);
        sub_251B2EDA8(v2, v3, v4, 0);
        sub_251A580F0(v3);
        sub_251A580F0(v6);
        sub_251A580E0(v2, v3, v4, 0);
        sub_251A580E0(v2, v6, v8, 0);
        sub_251A580E0(v2, v6, v8, 0);
        uint64_t v12 = v2;
        unint64_t v13 = v3;
        uint64_t v14 = v4;
      }
      else
      {
        sub_251B2EDA8(*(void *)a2, *(void *)(a2 + 8), v8, 0);
        sub_251B2EDA8(v2, v3, v4, 0);
        sub_251A580E0(v2, v3, v4, 0);
        uint64_t v12 = v7;
        unint64_t v13 = v6;
        uint64_t v14 = v8;
      }
      char v15 = 0;
LABEL_22:
      sub_251A580E0(v12, v13, v14, v15);
      return 0;
    }
    sub_251B2EDB8(*(void *)(a1 + 8));
LABEL_10:
    sub_251B2EDA8(v7, v6, v8, v9);
    sub_251A580E0(v2, v3, v4, v5);
    uint64_t v12 = v7;
    unint64_t v13 = v6;
    uint64_t v14 = v8;
    char v15 = v9;
    goto LABEL_22;
  }
  if ((*(unsigned char *)(a2 + 24) & 1) == 0) {
    goto LABEL_10;
  }
  sub_251A580E0(*(void *)a1, v3, v4, 1);
  sub_251A580E0(v7, v6, v8, 1);
  BOOL v10 = *(double *)&v2 == *(double *)&v7;
  if (*(double *)&v3 != *(double *)&v6) {
    BOOL v10 = 0;
  }
  return *(double *)&v4 == *(double *)&v8 && v10;
}

uint64_t _s13HomeDataModel5EventO08LocationD0O8UserTypeO2eeoiySbAG_AGtFZ_0(unint64_t *a1, unint64_t *a2)
{
  unint64_t v2 = *a1;
  unint64_t v3 = *a2;
  if (!*a1)
  {
    if (!v3)
    {
      unint64_t v2 = 0;
      char v4 = 1;
      goto LABEL_10;
    }
    goto LABEL_8;
  }
  if (v2 != 1)
  {
    if (v3 >= 2)
    {
      sub_251B2EDB8(*a2);
      sub_251B2EDB8(v2);
      char v4 = sub_251B04848(v2, v3);
      goto LABEL_10;
    }
    goto LABEL_8;
  }
  if (v3 != 1)
  {
LABEL_8:
    sub_251B2EDB8(*a2);
    sub_251B2EDB8(v2);
    char v4 = 0;
    goto LABEL_10;
  }
  unint64_t v2 = 1;
  char v4 = 1;
LABEL_10:
  sub_251A580F0(v2);
  sub_251A580F0(v3);
  return v4 & 1;
}

unint64_t sub_251B65130()
{
  unint64_t result = qword_269B9EAD8;
  if (!qword_269B9EAD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9EAD8);
  }
  return result;
}

unint64_t sub_251B65184()
{
  unint64_t result = qword_26B21EB30;
  if (!qword_26B21EB30)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B21EB30);
  }
  return result;
}

unint64_t sub_251B651C4()
{
  unint64_t result = qword_269B9EAE0;
  if (!qword_269B9EAE0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B9CC40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9EAE0);
  }
  return result;
}

uint64_t sub_251B65220(void **a1)
{
  return sub_251B64894(a1, *(void **)(v1 + 16)) & 1;
}

uint64_t sub_251B65240@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_251B64768(a1, *(void *)(v2 + 16), a2);
}

unint64_t sub_251B65260()
{
  unint64_t result = qword_269B9EAE8;
  if (!qword_269B9EAE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9EAE8);
  }
  return result;
}

unint64_t sub_251B652B8()
{
  unint64_t result = qword_269B9EAF0;
  if (!qword_269B9EAF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9EAF0);
  }
  return result;
}

unint64_t sub_251B65310()
{
  unint64_t result = qword_269B9EAF8;
  if (!qword_269B9EAF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9EAF8);
  }
  return result;
}

void _s13LocationEventOwxx(uint64_t a1)
{
}

uint64_t _s13LocationEventOwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_251B2EDA8(*(void *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t _s13LocationEventOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_251B2EDA8(*(void *)a2, v4, v5, v6);
  uint64_t v7 = *(void *)a1;
  unint64_t v8 = *(void *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  char v10 = *(unsigned char *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  sub_251A580E0(v7, v8, v9, v10);
  return a1;
}

uint64_t _s13LocationEventOwta(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  char v8 = *(unsigned char *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = v4;
  sub_251A580E0(v5, v7, v6, v8);
  return a1;
}

uint64_t _s13LocationEventOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t _s13LocationEventOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_251B65528(uint64_t result, char a2)
{
  *(unsigned char *)(result + 24) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for Event.LocationEvent()
{
  return &type metadata for Event.LocationEvent;
}

uint64_t *_s13LocationEventO8UserTypeOwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF) {
    uint64_t v3 = swift_bridgeObjectRetain();
  }
  *a1 = v3;
  return a1;
}

unint64_t _s13LocationEventO8UserTypeOwxx(unint64_t *a1)
{
  unint64_t result = *a1;
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t *_s13LocationEventO8UserTypeOwca(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  if (v3 < 0xFFFFFFFF)
  {
    *a1 = v4;
    if (v4 >= 0xFFFFFFFF) {
      swift_bridgeObjectRetain();
    }
  }
  else if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    *a1 = *a2;
  }
  else
  {
    *a1 = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  return a1;
}

unint64_t *_s13LocationEventO8UserTypeOwta(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  if (*a1 < 0xFFFFFFFF) {
    goto LABEL_5;
  }
  if (v3 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *a1 = v3;
    return a1;
  }
  *a1 = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for Event.LocationEvent.UserType()
{
  return &type metadata for Event.LocationEvent.UserType;
}

ValueMetadata *type metadata accessor for Event.LocationEvent.CircularRegion()
{
  return &type metadata for Event.LocationEvent.CircularRegion;
}

unsigned char *_s13LocationEventO5ErrorOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251B65770);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *_s13LocationEventO5ErrorOMa()
{
  return &_s13LocationEventO5ErrorON;
}

unint64_t sub_251B657AC()
{
  unint64_t result = qword_269B9EB00;
  if (!qword_269B9EB00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9EB00);
  }
  return result;
}

uint64_t sub_251B65800(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticUser();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

HMEvent __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> Event.createEvent(in:)(HMHome in)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Event.CharacteristicEvent();
  MEMORY[0x270FA5388](v4 - 8);
  unsigned int v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Event.TimeEvent(0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Event();
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251B65AD0(v2, (uint64_t)v12);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_251B66EE4((uint64_t)v12, (uint64_t)v9, type metadata accessor for Event.TimeEvent);
      v14.super.super.Class isa = Event.TimeEvent.createEvent()().super.super.isa;
      sub_251B67C04((uint64_t)v9, type metadata accessor for Event.TimeEvent);
    }
    else
    {
      sub_251B66EE4((uint64_t)v12, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for Event.CharacteristicEvent);
      v14.super = Event.CharacteristicEvent.createEvent(in:)(in);
      sub_251B67C04((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for Event.CharacteristicEvent);
    }
  }
  else
  {
    uint64_t v15 = *(void *)v12;
    unint64_t v16 = *((void *)v12 + 1);
    uint64_t v17 = *((void *)v12 + 2);
    char v18 = v12[24];
    v20[0] = v15;
    v20[1] = v16;
    v20[2] = v17;
    char v21 = v18;
    v14.super = Event.LocationEvent.createEvent(in:)(in);
    sub_251A580E0(v15, v16, v17, v18);
  }
  return v14.super;
}

uint64_t type metadata accessor for Event()
{
  uint64_t result = qword_269B9EB20;
  if (!qword_269B9EB20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_251B65AD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Event();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void Event.hash(into:)(long long *a1)
{
  uint64_t v3 = type metadata accessor for Event.CharacteristicEvent();
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Event.TimeEvent(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Event();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251B65AD0(v1, (uint64_t)v11);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D120);
      sub_251B66EE4((uint64_t)v11, (uint64_t)v8, type metadata accessor for Event.TimeEvent);
      sub_251F36CB0();
      Event.TimeEvent.hash(into:)();
      sub_251F36CB0();
      uint64_t v13 = (uint64_t)v8;
      HMTimeEvent v14 = type metadata accessor for Event.TimeEvent;
    }
    else
    {
      sub_251B66EE4((uint64_t)v11, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for Event.CharacteristicEvent);
      sub_251F36CB0();
      sub_251F34DA0();
      sub_251AD2788();
      sub_251F35610();
      LOBYTE(v23) = v5[*(int *)(v3 + 20)];
      CharacteristicKind.rawValue.getter();
      sub_251F357B0();
      swift_bridgeObjectRelease();
      unint64_t v19 = &v5[*(int *)(v3 + 24)];
      uint64_t v21 = *(void *)v19;
      unint64_t v20 = *((void *)v19 + 1);
      unsigned int v22 = v19[16];
      if (v22 >> 6) {
        LOBYTE(v22) = v22 & 0x3F;
      }
      sub_251F36CB0();
      uint64_t v23 = v21;
      unint64_t v24 = v20;
      LOBYTE(v25) = v22;
      CharacteristicKind.Value.hash(into:)();
      HMTimeEvent v14 = (uint64_t (*)(void))type metadata accessor for Event.CharacteristicEvent;
      uint64_t v13 = (uint64_t)v5;
    }
    sub_251B67C04(v13, v14);
  }
  else
  {
    uint64_t v15 = *(void *)v11;
    unint64_t v16 = *((void *)v11 + 1);
    uint64_t v17 = *((void *)v11 + 2);
    char v18 = v11[24];
    sub_251F36CB0();
    uint64_t v23 = v15;
    unint64_t v24 = v16;
    uint64_t v25 = v17;
    char v26 = v18;
    Event.LocationEvent.hash(into:)(a1);
    sub_251A580E0(v15, v16, v17, v18);
  }
}

uint64_t Event.hashValue.getter()
{
  sub_251F36CA0();
  Event.hash(into:)(v1);
  return sub_251F36D00();
}

uint64_t sub_251B65E5C()
{
  sub_251F36CA0();
  Event.hash(into:)(v1);
  return sub_251F36D00();
}

uint64_t sub_251B65EA0()
{
  sub_251F36CA0();
  Event.hash(into:)(v1);
  return sub_251F36D00();
}

void Event.init(event:in:)(id a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  id v91 = a2;
  uint64_t v89 = a3;
  uint64_t v88 = type metadata accessor for Event();
  uint64_t v4 = MEMORY[0x270FA5388](v88);
  uint64_t v6 = (char *)&v85 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  uint64_t v9 = (char *)&v85 - v8;
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)&v85 - v11;
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v85 - v14;
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  char v18 = (char *)&v85 - v17;
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  uint64_t v21 = (char *)&v85 - v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v85 - v22;
  self;
  uint64_t v24 = swift_dynamicCastObjCClass();
  if (v24)
  {
    uint64_t v25 = (void *)v24;
    id v26 = a1;
    id v27 = objc_msgSend(v25, sel_region);
    id v28 = v91;
    if (v27)
    {
      id v29 = v27;
      self;
      unint64_t v30 = (void *)swift_dynamicCastObjCClass();
      if (v30)
      {
        uint64_t v31 = v30;
        objc_msgSend(v30, sel_center);
        uint64_t v33 = v32;
        objc_msgSend(v31, sel_center);
        uint64_t v35 = v34;
        objc_msgSend(v31, sel_radius);
        uint64_t v37 = v36;

        *(void *)uint64_t v23 = v33;
        *((void *)v23 + 1) = v35;
        *((void *)v23 + 2) = v37;
        v23[24] = 1;
        swift_storeEnumTagMultiPayload();
        char v18 = v23;
LABEL_22:
        sub_251B66EE4((uint64_t)v18, v89, (uint64_t (*)(void))type metadata accessor for Event);
        return;
      }
    }
    sub_251B65130();
    swift_allocError();
    *unint64_t v43 = 2;
    swift_willThrow();

LABEL_12:
    return;
  }
  self;
  uint64_t v38 = swift_dynamicCastObjCClass();
  if (v38)
  {
    uint64_t v39 = (void *)v38;
    id v26 = a1;
    id v40 = objc_msgSend(v39, sel_presenceUserType);
    if (v40 == (id)1)
    {
      uint64_t v42 = 0;
      id v41 = v91;
    }
    else
    {
      id v41 = v91;
      if (v40 == (id)3)
      {
        id v61 = objc_msgSend(v39, sel_users);
        sub_251B65184();
        unint64_t v62 = sub_251F35AC0();

        uint64_t v63 = v90;
        uint64_t v64 = sub_251B6381C(v62);
        uint64_t v90 = v63;
        swift_bridgeObjectRelease();
        uint64_t v42 = sub_251EE04F8(v64);
        swift_bridgeObjectRelease();
      }
      else
      {
        if (v40 != (id)2)
        {
          sub_251B65130();
          swift_allocError();
          *uint64_t v66 = 3;
          swift_willThrow();

          goto LABEL_12;
        }
        uint64_t v42 = 1;
      }
    }
    id v65 = objc_msgSend(v39, sel_presenceEventType);

    *(void *)uint64_t v21 = v65;
    *((void *)v21 + 1) = v42;
    *((void *)v21 + 2) = 0;
    v21[24] = 0;
    swift_storeEnumTagMultiPayload();
    char v18 = v21;
    goto LABEL_22;
  }
  self;
  uint64_t v44 = swift_dynamicCastObjCClass();
  if (v44)
  {
    uint64_t v45 = (void *)v44;
    id v87 = a1;
    id v46 = objc_msgSend(v45, sel_fireDateComponents);
    uint64_t v47 = sub_251F34880();
    uint64_t v86 = &v85;
    uint64_t v48 = *(void *)(v47 - 8);
    uint64_t v49 = *(void *)(v48 + 64);
    MEMORY[0x270FA5388](v47);
    unint64_t v50 = (v49 + 15) & 0xFFFFFFFFFFFFFFF0;
    sub_251F347D0();

    sub_251F347E0();
    LOBYTE(v46) = v51;
    id v52 = *(void (**)(char *, uint64_t))(v48 + 8);
    uint64_t v85 = v47;
    uint64_t v53 = v47;
    char v54 = v52;
    v52((char *)&v85 - v50, v53);
    if ((v46 & 1) == 0) {
      goto LABEL_16;
    }
    id v55 = objc_msgSend(v45, sel_fireDateComponents);
    uint64_t v86 = &v85;
    MEMORY[0x270FA5388](v55);
    sub_251F347D0();

    sub_251F34820();
    LOBYTE(v55) = v56;
    v54((char *)&v85 - v50, v85);
    if (v55)
    {
      a1 = v87;
      uint64_t v73 = v90;
      Event.TimeEvent.init(event:)(v45, (uint64_t)v18);
      if (!v73)
      {
        long long v78 = (uint64_t *)&v18[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269B9D120) + 48)];
        self;
        id v79 = v91;
        uint64_t v80 = (void *)swift_dynamicCastObjCClass();
        if (v80)
        {
          sub_251D8AEB8((uint64_t)objc_msgSend(v80, sel_recurrenceDays), v78);
        }
        else
        {

          *long long v78 = 0;
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_22;
      }
    }
    else
    {
LABEL_16:
      a1 = v87;
      uint64_t v57 = v90;
      Event.TimeEvent.init(event:)(v45, (uint64_t)v15);
      if (!v57)
      {
        uint64_t v58 = (uint64_t *)&v15[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269B9D120) + 48)];
        self;
        id v59 = v91;
        uint64_t v60 = (void *)swift_dynamicCastObjCClass();
        if (v60)
        {
          sub_251D8AEB8((uint64_t)objc_msgSend(v60, sel_recurrenceDays), v58);
        }
        else
        {

          uint64_t *v58 = 0;
        }
        swift_storeEnumTagMultiPayload();
        char v18 = v15;
        goto LABEL_22;
      }
    }
    goto LABEL_30;
  }
  self;
  uint64_t v67 = swift_dynamicCastObjCClass();
  if (v67)
  {
    id v68 = (void *)v67;
    a1 = a1;
    uint64_t v69 = v90;
    Event.TimeEvent.init(event:)(v68, v12);
    if (!v69)
    {
      uint64_t v70 = (uint64_t *)&v12[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269B9D120) + 48)];
      self;
      id v71 = v91;
      uint64_t v72 = (void *)swift_dynamicCastObjCClass();
      if (v72)
      {
        sub_251D8AEB8((uint64_t)objc_msgSend(v72, sel_recurrenceDays), v70);
      }
      else
      {

        *uint64_t v70 = 0;
      }
      swift_storeEnumTagMultiPayload();
      char v18 = v12;
      goto LABEL_22;
    }
LABEL_30:

LABEL_31:
    return;
  }
  self;
  uint64_t v74 = swift_dynamicCastObjCClass();
  if (v74)
  {
    uint64_t v75 = (void *)v74;
    id v76 = a1;
    uint64_t v77 = v90;
    Event.CharacteristicEvent.init(event:)(v75, (uint64_t)v9);

    if (!v77)
    {
      swift_storeEnumTagMultiPayload();
      char v18 = v9;
      goto LABEL_22;
    }
  }
  else
  {
    self;
    uint64_t v81 = swift_dynamicCastObjCClass();
    if (!v81)
    {
      sub_251B66E90();
      swift_allocError();
      swift_willThrow();
      goto LABEL_31;
    }
    uint64_t v82 = (void *)v81;
    id v83 = a1;
    uint64_t v84 = v90;
    Event.CharacteristicEvent.init(event:)(v82, (uint64_t)v6);

    if (!v84)
    {
      swift_storeEnumTagMultiPayload();
      char v18 = v6;
      goto LABEL_22;
    }
  }
}

uint64_t static Event.Error.== infix(_:_:)()
{
  return 1;
}

uint64_t Event.Error.hash(into:)()
{
  return sub_251F36CB0();
}

uint64_t Event.Error.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t Event.debugDescription.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Event.TimeEvent(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Event.CharacteristicEvent();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Event();
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251B65AD0(v1, (uint64_t)v10);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      unint64_t v12 = *(void *)&v10[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269B9D120) + 48)];
      sub_251B66EE4((uint64_t)v10, (uint64_t)v4, type metadata accessor for Event.TimeEvent);
      unint64_t v24 = Event.TimeEvent.debugDescription.getter();
      unint64_t v25 = v13;
      swift_bridgeObjectRetain();
      sub_251F35800();
      swift_bridgeObjectRelease();
      unint64_t v15 = v24;
      unint64_t v14 = v25;
      unint64_t v24 = v12;
      TriggerRecurrenceWeekdays.description.getter();
      unint64_t v24 = v15;
      unint64_t v25 = v14;
      swift_bridgeObjectRetain();
      sub_251F35800();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v16 = v24;
      uint64_t v17 = (uint64_t)v4;
      char v18 = type metadata accessor for Event.TimeEvent;
    }
    else
    {
      sub_251B66EE4((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for Event.CharacteristicEvent);
      uint64_t v16 = Event.CharacteristicEvent.debugDescription.getter();
      uint64_t v17 = (uint64_t)v7;
      char v18 = (uint64_t (*)(void))type metadata accessor for Event.CharacteristicEvent;
    }
    sub_251B67C04(v17, v18);
  }
  else
  {
    unint64_t v20 = *((void *)v10 + 1);
    uint64_t v21 = *((void *)v10 + 2);
    char v22 = v10[24];
    unint64_t v24 = *(void *)v10;
    uint64_t v19 = v24;
    unint64_t v25 = v20;
    uint64_t v26 = v21;
    char v27 = v22;
    uint64_t v16 = Event.LocationEvent.debugDescription.getter();
    sub_251A580E0(v19, v20, v21, v22);
  }
  return v16;
}

uint64_t _s13HomeDataModel5EventO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Event.CharacteristicEvent();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Event.TimeEvent(0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Event();
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  unint64_t v13 = (char *)v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)v43 - v15;
  MEMORY[0x270FA5388](v14);
  char v18 = (char *)v43 - v17;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E2F8);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  char v22 = (char *)v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = (uint64_t)&v22[*(int *)(v20 + 56)];
  sub_251B65AD0(a1, (uint64_t)v22);
  sub_251B65AD0(a2, v23);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_251B65AD0((uint64_t)v22, (uint64_t)v18);
    uint64_t v33 = *(void *)v18;
    unint64_t v32 = *((void *)v18 + 1);
    uint64_t v34 = *((void *)v18 + 2);
    char v35 = v18[24];
    if (!swift_getEnumCaseMultiPayload())
    {
      uint64_t v38 = *(void *)v23;
      unint64_t v39 = *(void *)(v23 + 8);
      uint64_t v40 = *(void *)(v23 + 16);
      char v41 = *(unsigned char *)(v23 + 24);
      v45[0] = v33;
      v45[1] = v32;
      void v45[2] = v34;
      char v46 = v35;
      v43[0] = v38;
      v43[1] = v39;
      void v43[2] = v40;
      char v44 = v41;
      char v29 = static Event.LocationEvent.== infix(_:_:)(v45, v43);
      sub_251A580E0(v38, v39, v40, v41);
      sub_251A580E0(v33, v32, v34, v35);
      goto LABEL_17;
    }
    sub_251A580E0(v33, v32, v34, v35);
    goto LABEL_14;
  }
  if (EnumCaseMultiPayload != 1)
  {
    sub_251B65AD0((uint64_t)v22, (uint64_t)v13);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_251B66EE4(v23, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for Event.CharacteristicEvent);
      char v29 = _s13HomeDataModel5EventO014CharacteristicD0V2eeoiySbAE_AEtFZ_0((uint64_t)v13, (uint64_t)v6);
      sub_251B67C04((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for Event.CharacteristicEvent);
      uint64_t v31 = (uint64_t)v13;
      unint64_t v30 = (uint64_t (*)(void))type metadata accessor for Event.CharacteristicEvent;
      goto LABEL_10;
    }
    uint64_t v36 = (uint64_t (*)(void))type metadata accessor for Event.CharacteristicEvent;
    uint64_t v37 = (uint64_t)v13;
    goto LABEL_13;
  }
  sub_251B65AD0((uint64_t)v22, (uint64_t)v16);
  uint64_t v25 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269B9D120) + 48);
  uint64_t v26 = *(void *)&v16[v25];
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    uint64_t v36 = type metadata accessor for Event.TimeEvent;
    uint64_t v37 = (uint64_t)v16;
LABEL_13:
    sub_251B67C04(v37, v36);
LABEL_14:
    sub_251B68464((uint64_t)v22);
    goto LABEL_15;
  }
  uint64_t v27 = *(void *)(v23 + v25);
  sub_251B66EE4(v23, (uint64_t)v9, type metadata accessor for Event.TimeEvent);
  char v28 = static Event.TimeEvent.== infix(_:_:)(v16, v9);
  sub_251B67C04((uint64_t)v16, type metadata accessor for Event.TimeEvent);
  if (v28)
  {
    char v29 = v26 == v27;
    unint64_t v30 = type metadata accessor for Event.TimeEvent;
    uint64_t v31 = (uint64_t)v9;
LABEL_10:
    sub_251B67C04(v31, v30);
LABEL_17:
    sub_251B67C04((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for Event);
    return v29 & 1;
  }
  sub_251B67C04((uint64_t)v9, type metadata accessor for Event.TimeEvent);
  sub_251B67C04((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for Event);
LABEL_15:
  char v29 = 0;
  return v29 & 1;
}

unint64_t sub_251B66E90()
{
  unint64_t result = qword_269B9EB08;
  if (!qword_269B9EB08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9EB08);
  }
  return result;
}

uint64_t sub_251B66EE4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_251B66F50()
{
  unint64_t result = qword_269B9EB10;
  if (!qword_269B9EB10)
  {
    type metadata accessor for Event();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9EB10);
  }
  return result;
}

unint64_t sub_251B66FAC()
{
  unint64_t result = qword_269B9EB18;
  if (!qword_269B9EB18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9EB18);
  }
  return result;
}

unint64_t initializeBufferWithCopyOfBuffer for Event(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v10 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v11 = sub_251F34DA0();
      (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
      uint64_t v12 = type metadata accessor for Event.CharacteristicEvent();
      *(unsigned char *)(a1 + *(int *)(v12 + 20)) = *(unsigned char *)(a2 + *(int *)(v12 + 20));
      uint64_t v13 = *(int *)(v12 + 24);
      uint64_t v14 = a1 + v13;
      uint64_t v15 = a2 + v13;
      uint64_t v16 = *(void *)v15;
      unint64_t v17 = *(void *)(v15 + 8);
      unsigned __int8 v18 = *(unsigned char *)(v15 + 16);
      sub_251B2ED58(*(void *)v15, v17, v18);
      *(void *)uint64_t v14 = v16;
      *(void *)(v14 + 8) = v17;
      *(unsigned char *)(v14 + 16) = v18;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      type metadata accessor for Event.TimeEvent(0);
      int v7 = swift_getEnumCaseMultiPayload();
      if (v7 == 2)
      {
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v23 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269B9EA18) + 48);
        unint64_t v24 = (void *)(a1 + v23);
        uint64_t v25 = (const void *)(a2 + v23);
        uint64_t v26 = sub_251F34880();
        uint64_t v27 = *(void *)(v26 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
        {
          uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9EA20);
          memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v27 + 16))(v24, v25, v26);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
        }
      }
      else if (v7 == 1)
      {
        uint64_t v8 = sub_251F34ED0();
        (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        uint64_t v9 = (int *)type metadata accessor for Event.TimeEvent.TimeComponents(0);
        *(unsigned char *)(a1 + v9[5]) = *(unsigned char *)(a2 + v9[5]);
        *(unsigned char *)(a1 + v9[6]) = *(unsigned char *)(a2 + v9[6]);
        *(unsigned char *)(a1 + v9[7]) = *(unsigned char *)(a2 + v9[7]);
      }
      else
      {
        uint64_t v29 = sub_251F34D20();
        (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16))(a1, a2, v29);
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D120);
      *(void *)(a1 + *(int *)(v30 + 48)) = *(void *)(a2 + *(int *)(v30 + 48));
    }
    else
    {
      uint64_t v19 = *(void *)a2;
      unint64_t v20 = *(void *)(a2 + 8);
      uint64_t v21 = *(void *)(a2 + 16);
      char v22 = *(unsigned char *)(a2 + 24);
      sub_251B2EDA8(v19, v20, v21, v22);
      *(void *)a1 = v19;
      *(void *)(a1 + 8) = v20;
      *(void *)(a1 + 16) = v21;
      *(unsigned char *)(a1 + 24) = v22;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void destroy for Event(uint64_t a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v7 = sub_251F34DA0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(a1, v7);
      uint64_t v8 = a1 + *(int *)(type metadata accessor for Event.CharacteristicEvent() + 24);
      uint64_t v9 = *(void *)v8;
      unint64_t v10 = *(void *)(v8 + 8);
      unsigned __int8 v11 = *(unsigned char *)(v8 + 16);
      sub_251A58090(v9, v10, v11);
      break;
    case 1:
      type metadata accessor for Event.TimeEvent(0);
      int v12 = swift_getEnumCaseMultiPayload();
      if (v12 == 2)
      {
        uint64_t v14 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269B9EA18) + 48);
        uint64_t v15 = sub_251F34880();
        uint64_t v19 = *(void *)(v15 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v14, 1, v15)) {
          return;
        }
        uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
        uint64_t v18 = v14;
        uint64_t v17 = v15;
      }
      else
      {
        if (v12 == 1)
        {
          uint64_t v13 = sub_251F34ED0();
        }
        else
        {
          if (v12) {
            return;
          }
          uint64_t v13 = sub_251F34D20();
        }
        uint64_t v16 = *(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8);
        uint64_t v17 = v13;
        uint64_t v18 = a1;
      }
      v16(v18, v17);
      break;
    case 0:
      uint64_t v3 = *(void *)a1;
      unint64_t v4 = *(void *)(a1 + 8);
      uint64_t v5 = *(void *)(a1 + 16);
      char v6 = *(unsigned char *)(a1 + 24);
      sub_251A580E0(v3, v4, v5, v6);
      break;
  }
}

uint64_t initializeWithCopy for Event(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v8 = sub_251F34DA0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    uint64_t v9 = type metadata accessor for Event.CharacteristicEvent();
    *(unsigned char *)(a1 + *(int *)(v9 + 20)) = *(unsigned char *)(a2 + *(int *)(v9 + 20));
    uint64_t v10 = *(int *)(v9 + 24);
    uint64_t v11 = a1 + v10;
    uint64_t v12 = a2 + v10;
    uint64_t v13 = *(void *)v12;
    unint64_t v14 = *(void *)(v12 + 8);
    unsigned __int8 v15 = *(unsigned char *)(v12 + 16);
    sub_251B2ED58(*(void *)v12, v14, v15);
    *(void *)uint64_t v11 = v13;
    *(void *)(v11 + 8) = v14;
    *(unsigned char *)(v11 + 16) = v15;
  }
  else if (EnumCaseMultiPayload == 1)
  {
    type metadata accessor for Event.TimeEvent(0);
    int v5 = swift_getEnumCaseMultiPayload();
    if (v5 == 2)
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v20 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269B9EA18) + 48);
      uint64_t v21 = (void *)(a1 + v20);
      char v22 = (const void *)(a2 + v20);
      uint64_t v23 = sub_251F34880();
      uint64_t v24 = *(void *)(v23 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
      {
        uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9EA20);
        memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v24 + 16))(v21, v22, v23);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
      }
    }
    else if (v5 == 1)
    {
      uint64_t v6 = sub_251F34ED0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      uint64_t v7 = (int *)type metadata accessor for Event.TimeEvent.TimeComponents(0);
      *(unsigned char *)(a1 + v7[5]) = *(unsigned char *)(a2 + v7[5]);
      *(unsigned char *)(a1 + v7[6]) = *(unsigned char *)(a2 + v7[6]);
      *(unsigned char *)(a1 + v7[7]) = *(unsigned char *)(a2 + v7[7]);
    }
    else
    {
      uint64_t v26 = sub_251F34D20();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(a1, a2, v26);
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D120);
    *(void *)(a1 + *(int *)(v27 + 48)) = *(void *)(a2 + *(int *)(v27 + 48));
  }
  else
  {
    uint64_t v16 = *(void *)a2;
    unint64_t v17 = *(void *)(a2 + 8);
    uint64_t v18 = *(void *)(a2 + 16);
    char v19 = *(unsigned char *)(a2 + 24);
    sub_251B2EDA8(v16, v17, v18, v19);
    *(void *)a1 = v16;
    *(void *)(a1 + 8) = v17;
    *(void *)(a1 + 16) = v18;
    *(unsigned char *)(a1 + 24) = v19;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for Event(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_251B67C04(a1, (uint64_t (*)(void))type metadata accessor for Event);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v8 = sub_251F34DA0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      uint64_t v9 = type metadata accessor for Event.CharacteristicEvent();
      *(unsigned char *)(a1 + *(int *)(v9 + 20)) = *(unsigned char *)(a2 + *(int *)(v9 + 20));
      uint64_t v10 = *(int *)(v9 + 24);
      uint64_t v11 = a1 + v10;
      uint64_t v12 = a2 + v10;
      uint64_t v13 = *(void *)v12;
      unint64_t v14 = *(void *)(v12 + 8);
      unsigned __int8 v15 = *(unsigned char *)(v12 + 16);
      sub_251B2ED58(*(void *)v12, v14, v15);
      *(void *)uint64_t v11 = v13;
      *(void *)(v11 + 8) = v14;
      *(unsigned char *)(v11 + 16) = v15;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      type metadata accessor for Event.TimeEvent(0);
      int v5 = swift_getEnumCaseMultiPayload();
      if (v5 == 2)
      {
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v20 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269B9EA18) + 48);
        uint64_t v21 = (void *)(a1 + v20);
        char v22 = (const void *)(a2 + v20);
        uint64_t v23 = sub_251F34880();
        uint64_t v24 = *(void *)(v23 - 8);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
        {
          uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9EA20);
          memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v24 + 16))(v21, v22, v23);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
        }
      }
      else if (v5 == 1)
      {
        uint64_t v6 = sub_251F34ED0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        uint64_t v7 = (int *)type metadata accessor for Event.TimeEvent.TimeComponents(0);
        *(unsigned char *)(a1 + v7[5]) = *(unsigned char *)(a2 + v7[5]);
        *(unsigned char *)(a1 + v7[6]) = *(unsigned char *)(a2 + v7[6]);
        *(unsigned char *)(a1 + v7[7]) = *(unsigned char *)(a2 + v7[7]);
      }
      else
      {
        uint64_t v26 = sub_251F34D20();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(a1, a2, v26);
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D120);
      *(void *)(a1 + *(int *)(v27 + 48)) = *(void *)(a2 + *(int *)(v27 + 48));
    }
    else
    {
      uint64_t v16 = *(void *)a2;
      unint64_t v17 = *(void *)(a2 + 8);
      uint64_t v18 = *(void *)(a2 + 16);
      char v19 = *(unsigned char *)(a2 + 24);
      sub_251B2EDA8(v16, v17, v18, v19);
      *(void *)a1 = v16;
      *(void *)(a1 + 8) = v17;
      *(void *)(a1 + 16) = v18;
      *(unsigned char *)(a1 + 24) = v19;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_251B67C04(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unsigned char *initializeWithTake for Event(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v10 = sub_251F34DA0();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
    uint64_t v11 = type metadata accessor for Event.CharacteristicEvent();
    a1[*(int *)(v11 + 20)] = a2[*(int *)(v11 + 20)];
    uint64_t v12 = *(int *)(v11 + 24);
    uint64_t v13 = &a1[v12];
    unint64_t v14 = &a2[v12];
    v13[16] = v14[16];
    *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
LABEL_13:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  if (EnumCaseMultiPayload == 1)
  {
    type metadata accessor for Event.TimeEvent(0);
    int v7 = swift_getEnumCaseMultiPayload();
    if (v7 == 2)
    {
      *a1 = *a2;
      uint64_t v15 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269B9EA18) + 48);
      uint64_t v16 = &a1[v15];
      unint64_t v17 = &a2[v15];
      uint64_t v18 = sub_251F34880();
      uint64_t v19 = *(void *)(v18 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      {
        uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9EA20);
        memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v19 + 32))(v16, v17, v18);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      }
    }
    else if (v7 == 1)
    {
      uint64_t v8 = sub_251F34ED0();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
      uint64_t v9 = (int *)type metadata accessor for Event.TimeEvent.TimeComponents(0);
      a1[v9[5]] = a2[v9[5]];
      a1[v9[6]] = a2[v9[6]];
      a1[v9[7]] = a2[v9[7]];
    }
    else
    {
      uint64_t v21 = sub_251F34D20();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v21 - 8) + 32))(a1, a2, v21);
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D120);
    *(void *)&a1[*(int *)(v22 + 48)] = *(void *)&a2[*(int *)(v22 + 48)];
    goto LABEL_13;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

unsigned char *assignWithTake for Event(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_251B67C04((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for Event);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v10 = sub_251F34DA0();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
      uint64_t v11 = type metadata accessor for Event.CharacteristicEvent();
      a1[*(int *)(v11 + 20)] = a2[*(int *)(v11 + 20)];
      uint64_t v12 = *(int *)(v11 + 24);
      uint64_t v13 = &a1[v12];
      unint64_t v14 = &a2[v12];
      v13[16] = v14[16];
      *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
LABEL_14:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (EnumCaseMultiPayload == 1)
    {
      type metadata accessor for Event.TimeEvent(0);
      int v7 = swift_getEnumCaseMultiPayload();
      if (v7 == 2)
      {
        *a1 = *a2;
        uint64_t v15 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269B9EA18) + 48);
        uint64_t v16 = &a1[v15];
        unint64_t v17 = &a2[v15];
        uint64_t v18 = sub_251F34880();
        uint64_t v19 = *(void *)(v18 - 8);
        if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
        {
          uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9EA20);
          memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
        }
        else
        {
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v19 + 32))(v16, v17, v18);
          (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
        }
      }
      else if (v7 == 1)
      {
        uint64_t v8 = sub_251F34ED0();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
        uint64_t v9 = (int *)type metadata accessor for Event.TimeEvent.TimeComponents(0);
        a1[v9[5]] = a2[v9[5]];
        a1[v9[6]] = a2[v9[6]];
        a1[v9[7]] = a2[v9[7]];
      }
      else
      {
        uint64_t v21 = sub_251F34D20();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v21 - 8) + 32))(a1, a2, v21);
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D120);
      *(void *)&a1[*(int *)(v22 + 48)] = *(void *)&a2[*(int *)(v22 + 48)];
      goto LABEL_14;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_251B682A8()
{
  unint64_t v4 = &unk_251F409B0;
  uint64_t result = type metadata accessor for Event.TimeEvent(319);
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    int v5 = &v3;
    uint64_t result = type metadata accessor for Event.CharacteristicEvent();
    if (v2 <= 0x3F)
    {
      uint64_t v6 = *(void *)(result - 8) + 64;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for Event.Error(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x251B6842CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for Event.Error()
{
  return &type metadata for Event.Error;
}

uint64_t sub_251B68464(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E2F8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t StaticCameraProfile.AccessMode.description.getter()
{
  unint64_t result = 1701736302;
  switch(*v0)
  {
    case 1:
      unint64_t result = 6710895;
      break;
    case 2:
      unint64_t result = 0x6120746365746564;
      break;
    case 3:
      unint64_t result = 0x6D6165727473;
      break;
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

BOOL static StaticCameraProfile.AccessMode.< infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

uint64_t StaticCameraProfile.AccessMode.rawValue.getter()
{
  return *v0;
}

unint64_t StaticCameraProfile.AccessMode.init(rawValue:)@<X0>(unint64_t result@<X0>, char *a2@<X8>)
{
  char v2 = 5;
  if (result < 5) {
    char v2 = result;
  }
  *a2 = v2;
  return result;
}

void *static StaticCameraProfile.AccessMode.allCases.getter()
{
  return &unk_270262700;
}

unint64_t sub_251B685A8@<X0>(unint64_t *a1@<X0>, char *a2@<X8>)
{
  return StaticCameraProfile.AccessMode.init(rawValue:)(*a1, a2);
}

unint64_t sub_251B685B4()
{
  unint64_t result = qword_269B9EB30;
  if (!qword_269B9EB30)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B9EB38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9EB30);
  }
  return result;
}

void sub_251B68610(void *a1@<X8>)
{
  *a1 = &unk_270262728;
}

unint64_t sub_251B68624()
{
  unint64_t result = qword_269B9EB40;
  if (!qword_269B9EB40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9EB40);
  }
  return result;
}

uint64_t sub_251B68678()
{
  return sub_251F35A40();
}

uint64_t sub_251B686D8()
{
  return sub_251F359E0();
}

unsigned char *_s10AccessModeOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251B687F4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticCameraProfile.AccessMode()
{
  return &type metadata for StaticCameraProfile.AccessMode;
}

unint64_t sub_251B6882C()
{
  unint64_t result = qword_269B9EB48;
  if (!qword_269B9EB48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9EB48);
  }
  return result;
}

uint64_t StaticCameraStreamControl.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_251F34DA0();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t StaticCameraStreamControl.state.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for StaticCameraStreamControl();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for StaticCameraStreamControl()
{
  uint64_t result = qword_26B21FEC8;
  if (!qword_26B21FEC8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

BOOL static StaticCameraStreamControl.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((sub_251F34D70() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for StaticCameraStreamControl();
  return *(unsigned __int8 *)(a1 + *(int *)(v4 + 20)) == *(unsigned __int8 *)(a2 + *(int *)(v4 + 20));
}

BOOL static StaticCameraStreamControl.StreamState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t StaticCameraStreamControl.hash(into:)()
{
  return sub_251F36CB0();
}

uint64_t sub_251B68A3C()
{
  if (*v0) {
    return 0x6574617473;
  }
  else {
    return 25705;
  }
}

uint64_t sub_251B68A68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251B6B9AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251B68A90(uint64_t a1)
{
  unint64_t v2 = sub_251B6A934();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251B68ACC(uint64_t a1)
{
  unint64_t v2 = sub_251B6A934();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticCameraStreamControl.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9EB50);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251B6A934();
  sub_251F36DA0();
  v10[15] = 0;
  sub_251F34DA0();
  sub_251A1A8EC(&qword_26B21E348);
  sub_251F36A20();
  if (!v2)
  {
    v10[14] = *(unsigned char *)(v3 + *(int *)(type metadata accessor for StaticCameraStreamControl() + 20));
    v10[13] = 1;
    sub_251B6A988();
    sub_251F36A20();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t StaticCameraStreamControl.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t StaticCameraStreamControl.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9EB68);
  uint64_t v4 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for StaticCameraStreamControl();
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251B6A934();
  sub_251F36D90();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  uint64_t v19 = v9;
  uint64_t v21 = v4;
  uint64_t v10 = sub_251F34DA0();
  uint64_t v20 = &v18;
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v26 = 0;
  sub_251A1A8EC(&qword_269B9CC80);
  uint64_t v14 = v23;
  sub_251F36880();
  uint64_t v18 = v11;
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  uint64_t v16 = (uint64_t)v19;
  v15(v19, v13, v10);
  char v24 = 1;
  sub_251B6A9DC();
  sub_251F36880();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v14);
  *(unsigned char *)(v16 + *(int *)(v7 + 20)) = v25;
  sub_251B6AA30(v16, v22);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return sub_251B6AA94(v16);
}

BOOL sub_251B69084(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (sub_251F34D70() & 1) != 0
      && *(unsigned __int8 *)(a1 + *(int *)(a3 + 20)) == *(unsigned __int8 *)(a2 + *(int *)(a3 + 20));
}

uint64_t sub_251B690D8()
{
  return sub_251F36D00();
}

uint64_t sub_251B6915C()
{
  return sub_251F36CB0();
}

uint64_t sub_251B691C8()
{
  return sub_251F36D00();
}

uint64_t sub_251B69248@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticCameraStreamControl.init(from:)(a1, a2);
}

uint64_t sub_251B69260(void *a1)
{
  return StaticCameraStreamControl.encode(to:)(a1);
}

id StaticCameraStreamControl.cameraStream.getter()
{
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_26B21FF50;
  uint64_t v1 = (void *)sub_251F34D50();
  id v2 = objc_msgSend(v0, sel_cameraProfileFor_, v1);

  id v3 = objc_msgSend(v2, sel_streamControl);
  id v4 = objc_msgSend(v3, sel_cameraStream);

  return v4;
}

Swift::Void __swiftcall StaticCameraStreamControl.startStream()()
{
}

Swift::Void __swiftcall StaticCameraStreamControl.stopStream()()
{
}

void sub_251B69374(const char *a1, SEL *a2, const char *a3)
{
  uint64_t v7 = type metadata accessor for StaticCameraStreamControl();
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v31 - v11;
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  uint64_t v13 = (void *)qword_26B21FF50;
  uint64_t v14 = (void *)sub_251F34D50();
  id v15 = objc_msgSend(v13, sel_cameraProfileFor_, v14);

  id v16 = objc_msgSend(v15, sel_streamControl);
  if (v16)
  {
    if (qword_269B9C348 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_251F350A0();
    __swift_project_value_buffer(v17, (uint64_t)qword_269B9FFA8);
    sub_251B6AA30(v3, (uint64_t)v12);
    uint64_t v18 = sub_251F35080();
    os_log_type_t v19 = sub_251F35FD0();
    if (os_log_type_enabled(v18, v19))
    {
      unint64_t v32 = a2;
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      uint64_t v34 = v21;
      *(_DWORD *)uint64_t v20 = 136315138;
      uint64_t v31 = a1;
      sub_251F34DA0();
      sub_251A1A8EC((unint64_t *)&qword_26B21E6B0);
      uint64_t v22 = sub_251F36AB0();
      uint64_t v33 = sub_251A00E84(v22, v23, &v34);
      sub_251F361D0();
      a2 = v32;
      swift_bridgeObjectRelease();
      sub_251B6AA94((uint64_t)v12);
      _os_log_impl(&dword_2519F3000, v18, v19, v31, v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v21, -1, -1);
      MEMORY[0x2533AC760](v20, -1, -1);
    }
    else
    {
      sub_251B6AA94((uint64_t)v12);
    }

    [v16 *a2];
  }
  else
  {
    if (qword_269B9C348 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_251F350A0();
    __swift_project_value_buffer(v24, (uint64_t)qword_269B9FFA8);
    sub_251B6AA30(v3, (uint64_t)v10);
    char v25 = sub_251F35080();
    os_log_type_t v26 = sub_251F35FB0();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      uint64_t v34 = v28;
      *(_DWORD *)uint64_t v27 = 136315138;
      sub_251F34DA0();
      sub_251A1A8EC((unint64_t *)&qword_26B21E6B0);
      uint64_t v29 = sub_251F36AB0();
      uint64_t v33 = sub_251A00E84(v29, v30, &v34);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      sub_251B6AA94((uint64_t)v10);
      _os_log_impl(&dword_2519F3000, v25, v26, a3, v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v28, -1, -1);
      MEMORY[0x2533AC760](v27, -1, -1);
    }
    else
    {
      sub_251B6AA94((uint64_t)v10);
    }
  }
}

uint64_t StaticCameraStreamControl.StreamState.description.getter()
{
  uint64_t result = 1701736302;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x676E697472617473;
      break;
    case 2:
      uint64_t result = 0x6E696D6165727473;
      break;
    case 3:
      uint64_t result = 0x676E6970706F7473;
      break;
    case 4:
      uint64_t result = 0x6572747320746F6ELL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t StaticCameraStreamControl.StreamState.hash(into:)()
{
  return sub_251F36CB0();
}

uint64_t sub_251B698AC()
{
  uint64_t result = 1701736302;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x676E697472617473;
      break;
    case 2:
      uint64_t result = 0x6E696D6165727473;
      break;
    case 3:
      uint64_t result = 0x676E6970706F7473;
      break;
    case 4:
      uint64_t result = 0x6165727453746F6ELL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_251B6995C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251B6BA80(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251B69984(uint64_t a1)
{
  unint64_t v2 = sub_251B6AC58();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251B699C0(uint64_t a1)
{
  unint64_t v2 = sub_251B6AC58();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251B699FC(uint64_t a1)
{
  unint64_t v2 = sub_251B6ADFC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251B69A38(uint64_t a1)
{
  unint64_t v2 = sub_251B6ADFC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251B69A74(uint64_t a1)
{
  unint64_t v2 = sub_251B6ACAC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251B69AB0(uint64_t a1)
{
  unint64_t v2 = sub_251B6ACAC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251B69AEC(uint64_t a1)
{
  unint64_t v2 = sub_251B6ADA8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251B69B28(uint64_t a1)
{
  unint64_t v2 = sub_251B6ADA8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251B69B64(uint64_t a1)
{
  unint64_t v2 = sub_251B6AD00();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251B69BA0(uint64_t a1)
{
  unint64_t v2 = sub_251B6AD00();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251B69BDC(uint64_t a1)
{
  unint64_t v2 = sub_251B6AD54();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251B69C18(uint64_t a1)
{
  unint64_t v2 = sub_251B6AD54();
  return MEMORY[0x270FA00B8](a1, v2);
}

void *static StaticCameraStreamControl.StreamState.allCases.getter()
{
  return &unk_270262750;
}

uint64_t StaticCameraStreamControl.StreamState.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9EB78);
  uint64_t v36 = *(void *)(v3 - 8);
  uint64_t v37 = v3;
  MEMORY[0x270FA5388](v3);
  char v35 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9EB80);
  uint64_t v33 = *(void *)(v5 - 8);
  uint64_t v34 = v5;
  MEMORY[0x270FA5388](v5);
  unint64_t v32 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9EB88);
  uint64_t v30 = *(void *)(v7 - 8);
  uint64_t v31 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v29 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9EB90);
  uint64_t v27 = *(void *)(v9 - 8);
  uint64_t v28 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9EB98);
  uint64_t v26 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9EBA0);
  uint64_t v38 = *(void *)(v15 - 8);
  uint64_t v39 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251B6AC58();
  sub_251F36DA0();
  switch(v18)
  {
    case 1:
      char v41 = 1;
      sub_251B6ADA8();
      uint64_t v21 = v39;
      sub_251F36900();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v28);
      goto LABEL_8;
    case 2:
      char v42 = 2;
      sub_251B6AD54();
      uint64_t v22 = v29;
      uint64_t v21 = v39;
      sub_251F36900();
      uint64_t v24 = v30;
      uint64_t v23 = v31;
      goto LABEL_7;
    case 3:
      char v43 = 3;
      sub_251B6AD00();
      uint64_t v22 = v32;
      uint64_t v21 = v39;
      sub_251F36900();
      uint64_t v24 = v33;
      uint64_t v23 = v34;
      goto LABEL_7;
    case 4:
      char v44 = 4;
      sub_251B6ACAC();
      uint64_t v22 = v35;
      uint64_t v21 = v39;
      sub_251F36900();
      uint64_t v24 = v36;
      uint64_t v23 = v37;
LABEL_7:
      (*(void (**)(char *, uint64_t))(v24 + 8))(v22, v23);
LABEL_8:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v17, v21);
      break;
    default:
      char v40 = 0;
      sub_251B6ADFC();
      uint64_t v19 = v39;
      sub_251F36900();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v12);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v17, v19);
      break;
  }
  return result;
}

uint64_t StaticCameraStreamControl.StreamState.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t StaticCameraStreamControl.StreamState.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  char v54 = a2;
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9EBD8);
  uint64_t v43 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50);
  uint64_t v53 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9EBE0);
  uint64_t v49 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46);
  id v52 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9EBE8);
  uint64_t v47 = *(void *)(v5 - 8);
  uint64_t v48 = v5;
  MEMORY[0x270FA5388](v5);
  char v51 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9EBF0);
  uint64_t v44 = *(void *)(v7 - 8);
  uint64_t v45 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9EBF8);
  uint64_t v42 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9EC00);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = a1[3];
  id v55 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v17);
  sub_251B6AC58();
  uint64_t v18 = v56;
  sub_251F36D90();
  if (v18)
  {
LABEL_7:
    uint64_t v33 = (uint64_t)v55;
    return __swift_destroy_boxed_opaque_existential_0(v33);
  }
  uint64_t v39 = v10;
  char v40 = v12;
  uint64_t v19 = v9;
  uint64_t v21 = v51;
  uint64_t v20 = v52;
  uint64_t v41 = 0;
  uint64_t v56 = v14;
  uint64_t v22 = v53;
  uint64_t v23 = v54;
  uint64_t v24 = v16;
  uint64_t v25 = sub_251F368E0();
  if (*(void *)(v25 + 16) != 1)
  {
    uint64_t v30 = sub_251F36490();
    swift_allocError();
    unint64_t v32 = v31;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D440);
    *unint64_t v32 = &type metadata for StaticCameraStreamControl.StreamState;
    sub_251F36780();
    sub_251F36480();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v30 - 8) + 104))(v32, *MEMORY[0x263F8DCB0], v30);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v16, v13);
    goto LABEL_7;
  }
  char v26 = *(unsigned char *)(v25 + 32);
  switch(v26)
  {
    case 1:
      char v58 = 1;
      sub_251B6ADA8();
      uint64_t v35 = v41;
      sub_251F36770();
      if (v35) {
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v44 + 8))(v19, v45);
      goto LABEL_19;
    case 2:
      char v59 = 2;
      sub_251B6AD54();
      uint64_t v36 = v41;
      sub_251F36770();
      if (v36) {
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v47 + 8))(v21, v48);
      goto LABEL_19;
    case 3:
      char v60 = 3;
      sub_251B6AD00();
      uint64_t v37 = v41;
      sub_251F36770();
      if (v37) {
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v49 + 8))(v20, v46);
LABEL_19:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v24, v13);
      goto LABEL_21;
    case 4:
      char v61 = 4;
      sub_251B6ACAC();
      uint64_t v38 = v41;
      sub_251F36770();
      if (v38) {
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v43 + 8))(v22, v50);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v24, v13);
      uint64_t v23 = v54;
      goto LABEL_21;
    default:
      char v27 = *(unsigned char *)(v25 + 32);
      char v57 = 0;
      sub_251B6ADFC();
      uint64_t v29 = v40;
      uint64_t v28 = v41;
      sub_251F36770();
      if (v28)
      {
LABEL_16:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v56 + 8))(v24, v13);
        uint64_t v33 = (uint64_t)v55;
        return __swift_destroy_boxed_opaque_existential_0(v33);
      }
      (*(void (**)(char *, uint64_t))(v42 + 8))(v29, v39);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v24, v13);
      char v26 = v27;
LABEL_21:
      *uint64_t v23 = v26;
      uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v55);
      break;
  }
  return result;
}

unint64_t sub_251B6A934()
{
  unint64_t result = qword_269B9EB58;
  if (!qword_269B9EB58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9EB58);
  }
  return result;
}

unint64_t sub_251B6A988()
{
  unint64_t result = qword_269B9EB60;
  if (!qword_269B9EB60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9EB60);
  }
  return result;
}

unint64_t sub_251B6A9DC()
{
  unint64_t result = qword_269B9EB70;
  if (!qword_269B9EB70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9EB70);
  }
  return result;
}

uint64_t sub_251B6AA30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticCameraStreamControl();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_251B6AA94(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StaticCameraStreamControl();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_251B6AAF0@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return StaticCameraStreamControl.StreamState.init(from:)(a1, a2);
}

uint64_t sub_251B6AB08(void *a1)
{
  return StaticCameraStreamControl.StreamState.encode(to:)(a1);
}

void sub_251B6AB20(void *a1@<X8>)
{
  *a1 = &unk_270262778;
}

uint64_t sub_251B6AB30@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_uniqueIdentifier);
  sub_251F34D80();

  id v5 = objc_msgSend(a1, sel_streamControl);
  if (v5)
  {
    uint64_t v6 = v5;
    id v7 = objc_msgSend(v5, sel_streamState);

    if ((unint64_t)v7 >= 5) {
      char v8 = 0;
    }
    else {
      char v8 = (char)v7;
    }
  }
  else
  {

    char v8 = 0;
  }
  uint64_t v9 = type metadata accessor for StaticCameraStreamControl();
  *(unsigned char *)(a2 + *(int *)(v9 + 20)) = v8;
  uint64_t v10 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
  return v10(a2, 0, 1, v9);
}

uint64_t static StaticCameraStreamControl.test(state:)@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  char v3 = *a1;
  sub_251F34D90();
  uint64_t result = type metadata accessor for StaticCameraStreamControl();
  *(unsigned char *)(a2 + *(int *)(result + 20)) = v3;
  return result;
}

unint64_t sub_251B6AC58()
{
  unint64_t result = qword_269B9EBA8;
  if (!qword_269B9EBA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9EBA8);
  }
  return result;
}

unint64_t sub_251B6ACAC()
{
  unint64_t result = qword_269B9EBB0;
  if (!qword_269B9EBB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9EBB0);
  }
  return result;
}

unint64_t sub_251B6AD00()
{
  unint64_t result = qword_269B9EBB8;
  if (!qword_269B9EBB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9EBB8);
  }
  return result;
}

unint64_t sub_251B6AD54()
{
  unint64_t result = qword_269B9EBC0;
  if (!qword_269B9EBC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9EBC0);
  }
  return result;
}

unint64_t sub_251B6ADA8()
{
  unint64_t result = qword_269B9EBC8;
  if (!qword_269B9EBC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9EBC8);
  }
  return result;
}

unint64_t sub_251B6ADFC()
{
  unint64_t result = qword_269B9EBD0;
  if (!qword_269B9EBD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9EBD0);
  }
  return result;
}

unint64_t sub_251B6AE54()
{
  unint64_t result = qword_269B9EC08;
  if (!qword_269B9EC08)
  {
    type metadata accessor for StaticCameraStreamControl();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9EC08);
  }
  return result;
}

uint64_t sub_251B6AEAC()
{
  return sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
}

unint64_t sub_251B6AED8()
{
  unint64_t result = qword_269B9EC10;
  if (!qword_269B9EC10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9EC10);
  }
  return result;
}

unint64_t sub_251B6AF30()
{
  unint64_t result = qword_269B9EC18;
  if (!qword_269B9EC18)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B9EC20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9EC18);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for StaticCameraStreamControl(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251B6AFA0);
}

uint64_t sub_251B6AFA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    char v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 5) {
      return v10 - 4;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for StaticCameraStreamControl(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251B6B070);
}

uint64_t sub_251B6B070(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_251F34DA0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 4;
  }
  return result;
}

uint64_t sub_251B6B12C()
{
  uint64_t result = sub_251F34DA0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticCameraStreamControl.StreamState()
{
  return &type metadata for StaticCameraStreamControl.StreamState;
}

unsigned char *_s13HomeDataModel25StaticCameraStreamControlV11StreamStateOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251B6B2A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticCameraStreamControl.StreamState.CodingKeys()
{
  return &type metadata for StaticCameraStreamControl.StreamState.CodingKeys;
}

ValueMetadata *type metadata accessor for StaticCameraStreamControl.StreamState.NoneCodingKeys()
{
  return &type metadata for StaticCameraStreamControl.StreamState.NoneCodingKeys;
}

ValueMetadata *type metadata accessor for StaticCameraStreamControl.StreamState.StartingCodingKeys()
{
  return &type metadata for StaticCameraStreamControl.StreamState.StartingCodingKeys;
}

ValueMetadata *type metadata accessor for StaticCameraStreamControl.StreamState.StreamingCodingKeys()
{
  return &type metadata for StaticCameraStreamControl.StreamState.StreamingCodingKeys;
}

ValueMetadata *type metadata accessor for StaticCameraStreamControl.StreamState.StoppingCodingKeys()
{
  return &type metadata for StaticCameraStreamControl.StreamState.StoppingCodingKeys;
}

ValueMetadata *type metadata accessor for StaticCameraStreamControl.StreamState.NotStreamingCodingKeys()
{
  return &type metadata for StaticCameraStreamControl.StreamState.NotStreamingCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for StaticCameraStreamControl.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251B6B3F4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticCameraStreamControl.CodingKeys()
{
  return &type metadata for StaticCameraStreamControl.CodingKeys;
}

unint64_t sub_251B6B430()
{
  unint64_t result = qword_269B9EC28;
  if (!qword_269B9EC28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9EC28);
  }
  return result;
}

unint64_t sub_251B6B488()
{
  unint64_t result = qword_269B9EC30;
  if (!qword_269B9EC30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9EC30);
  }
  return result;
}

unint64_t sub_251B6B4E0()
{
  unint64_t result = qword_269B9EC38;
  if (!qword_269B9EC38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9EC38);
  }
  return result;
}

unint64_t sub_251B6B538()
{
  unint64_t result = qword_269B9EC40;
  if (!qword_269B9EC40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9EC40);
  }
  return result;
}

unint64_t sub_251B6B590()
{
  unint64_t result = qword_269B9EC48;
  if (!qword_269B9EC48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9EC48);
  }
  return result;
}

unint64_t sub_251B6B5E8()
{
  unint64_t result = qword_269B9EC50;
  if (!qword_269B9EC50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9EC50);
  }
  return result;
}

unint64_t sub_251B6B640()
{
  unint64_t result = qword_269B9EC58;
  if (!qword_269B9EC58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9EC58);
  }
  return result;
}

unint64_t sub_251B6B698()
{
  unint64_t result = qword_269B9EC60;
  if (!qword_269B9EC60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9EC60);
  }
  return result;
}

unint64_t sub_251B6B6F0()
{
  unint64_t result = qword_269B9EC68;
  if (!qword_269B9EC68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9EC68);
  }
  return result;
}

unint64_t sub_251B6B748()
{
  unint64_t result = qword_269B9EC70;
  if (!qword_269B9EC70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9EC70);
  }
  return result;
}

unint64_t sub_251B6B7A0()
{
  unint64_t result = qword_269B9EC78;
  if (!qword_269B9EC78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9EC78);
  }
  return result;
}

unint64_t sub_251B6B7F8()
{
  unint64_t result = qword_269B9EC80;
  if (!qword_269B9EC80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9EC80);
  }
  return result;
}

unint64_t sub_251B6B850()
{
  unint64_t result = qword_269B9EC88;
  if (!qword_269B9EC88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9EC88);
  }
  return result;
}

unint64_t sub_251B6B8A8()
{
  unint64_t result = qword_269B9EC90;
  if (!qword_269B9EC90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9EC90);
  }
  return result;
}

unint64_t sub_251B6B900()
{
  unint64_t result = qword_269B9EC98;
  if (!qword_269B9EC98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9EC98);
  }
  return result;
}

unint64_t sub_251B6B958()
{
  unint64_t result = qword_269B9ECA0;
  if (!qword_269B9ECA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9ECA0);
  }
  return result;
}

uint64_t sub_251B6B9AC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574617473 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_251B6BA80(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701736302 && a2 == 0xE400000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E697472617473 && a2 == 0xE800000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E696D6165727473 && a2 == 0xE900000000000067 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x676E6970706F7473 && a2 == 0xE800000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6165727453746F6ELL && a2 == 0xEC000000676E696DLL)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t StaticEndpoint.init(device:path:homeId:roomId:accessoryName:limitedSnapshotController:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v49 = a6;
  unint64_t v50 = a7;
  uint64_t v46 = a5;
  uint64_t v53 = a4;
  uint64_t v12 = type metadata accessor for MatterTileMetadata();
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v47 = (uint64_t)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (uint64_t)&v42 - v16;
  uint64_t v18 = *(void *)a3;
  unsigned int v19 = *(unsigned __int16 *)(a3 + 8);
  uint64_t v20 = (char *)&v42 + *(int *)(v15 + 52) - v16;
  uint64_t v21 = sub_251F34D20();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 1, 1, v21);
  *(_OWORD *)(v17 + 16) = 0u;
  *(_OWORD *)(v17 + 32) = 0u;
  *(_OWORD *)uint64_t v17 = 0u;
  uint64_t v48 = v17;
  *(_DWORD *)(v17 + 48) = 33686018;
  uint64_t v22 = sub_251A2A734(a1, a2, v19);
  LOBYTE(v17) = sub_251DB3B04(21, v22);
  swift_bridgeObjectRelease();
  uint64_t v51 = a1;
  uint64_t v52 = a8;
  if (v17)
  {
    uint64_t v23 = v46;
    uint64_t v55 = v18;
    __int16 v56 = v19;
    char v57 = 21;
    swift_unknownObjectRetain();
    StaticDoorLockCluster.init(path:device:limitedSnapshotController:)(&v55, a1, a2, (uint64_t)&v62);
    uint64_t v24 = MEMORY[0x263F8EE80];
    if ((v66 & 0xFF00) != 0x300)
    {
      uint64_t v55 = v62;
      __int16 v56 = v63;
      char v57 = v64;
      int v58 = v65;
      __int16 v59 = v66 & 0xFF01;
      __int16 v60 = v67 & 0x1FF;
      char v61 = v68;
      sub_251B72274((uint64_t)&v55);
      sub_251A1A930((uint64_t)&v55, (uint64_t)&v62);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v54 = v24;
      sub_251A0D0A0((uint64_t)&v62, 21, isUniquelyReferenced_nonNull_native);
      uint64_t v24 = v54;
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v23 = v46;
    uint64_t v24 = MEMORY[0x263F8EE80];
  }
  uint64_t v44 = v24;
  uint64_t v26 = sub_251F34DA0();
  uint64_t v46 = &v42;
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(void *)(v27 + 64);
  MEMORY[0x270FA5388](v26);
  unint64_t v29 = (v28 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v43 = (uint64_t)&v42 - v29;
  uint64_t v30 = static UUID.matterObjectIdentifier(deviceID:endpointID:)(v18, v19, (uint64_t)&v42 - v29);
  uint64_t v45 = &v42;
  uint64_t v55 = v18;
  __int16 v56 = v19;
  MEMORY[0x270FA5388](v30);
  uint64_t v31 = (char *)&v42 - v29;
  unint64_t v32 = *(void (**)(char *, void *, uint64_t))(v27 + 16);
  v32((char *)&v42 - v29, v53, v26);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB80);
  unint64_t v33 = (*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  uint64_t v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_251F38650;
  v32((char *)(v34 + v33), v23, v26);
  uint64_t v35 = sub_251C08E40(v34);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v36 = v47;
  uint64_t v37 = v48;
  sub_251B729E0(v48, v47, (uint64_t (*)(void))type metadata accessor for MatterTileMetadata);
  LOBYTE(v54) = 6;
  uint64_t v38 = v52;
  StaticEndpoint.init(id:endpointPath:name:deviceState:deviceTypes:clusters:linkedEndpointIDs:homeId:roomIds:metadata:identifyTime:identifyType:)(v43, &v55, v49, v50, 1, MEMORY[0x263F8EE88], v44, MEMORY[0x263F8EE88], v52, (uint64_t)v31, v35, v36, 0x10000, (unsigned __int8 *)&v54);
  swift_unknownObjectRelease();
  uint64_t v39 = *(void (**)(uint64_t *, uint64_t))(v27 + 8);
  v39(v23, v26);
  v39(v53, v26);
  sub_251B72A48(v37, (uint64_t (*)(void))type metadata accessor for MatterTileMetadata);
  uint64_t v40 = type metadata accessor for StaticEndpoint();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v38, 0, 1, v40);
}

uint64_t StaticEndpoint.init(device:path:homeId:roomId:accessoryName:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v126 = a6;
  uint64_t v122 = type metadata accessor for MatterTileMetadata();
  uint64_t v15 = MEMORY[0x270FA5388](v122);
  uint64_t v121 = (uint64_t)&v115 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  int64_t v128 = (uint64_t *)((char *)&v115 - v17);
  uint64_t isUniquelyReferenced_nonNull_native = *(void *)a3;
  uint64_t v19 = *(unsigned __int16 *)(a3 + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v21 = *(uint64_t (**)(uint64_t))(a2 + 24);
  unsigned int v133 = v19;
  uint64_t v120 = ObjectType;
  unint64_t v135 = a2;
  uint64_t v22 = v21(v19);
  if (v22)
  {
    uint64_t v24 = v22;
    uint64_t v25 = v23;
    unint64_t v117 = a7;
    uint64_t v118 = a5;
    uint64_t v129 = a1;
    uint64_t v123 = a4;
    uint64_t v119 = a8;
    uint64_t v26 = swift_getObjectType();
    uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t))(v25 + 16);
    uint64_t v127 = v24;
    uint64_t v124 = (uint64_t *)v26;
    uint64_t v28 = v27(v26, v25);
    uint64_t v29 = v28;
    unint64_t v134 = v28 & 0xC000000000000001;
    unint64_t v125 = (uint64_t *)v25;
    if ((v28 & 0xC000000000000001) != 0) {
      uint64_t v30 = sub_251F36300();
    }
    else {
      uint64_t v30 = *(void *)(v28 + 16);
    }
    unint64_t v36 = v133;
    uint64_t v132 = isUniquelyReferenced_nonNull_native;
    if (!v30)
    {
      swift_bridgeObjectRelease();
      uint64_t v40 = MEMORY[0x263F8EE78];
      goto LABEL_28;
    }
    v139[0] = MEMORY[0x263F8EE78];
    sub_251A3E200(0, v30 & ~(v30 >> 63), 0);
    if (v134)
    {
      uint64_t v37 = sub_251F362A0();
      unsigned __int8 v39 = 1;
    }
    else
    {
      uint64_t v37 = sub_251B72008(v29);
      unsigned __int8 v39 = v41 & 1;
    }
    uint64_t v140 = v37;
    uint64_t v141 = v38;
    unsigned __int8 v142 = v39;
    if ((v30 & 0x8000000000000000) == 0)
    {
      uint64_t v42 = v29 & 0xFFFFFFFFFFFFFF8;
      if (v29 < 0) {
        uint64_t v42 = v29;
      }
      uint64_t v130 = (uint64_t *)v42;
      uint64_t v131 = (void *)v29;
      do
      {
        while (1)
        {
          uint64_t v48 = v140;
          uint64_t v49 = v141;
          uint64_t v50 = v142;
          sub_251A54044(v140, v141, v142, v29);
          uint64_t v52 = v51;
          unsigned __int16 v53 = (unsigned __int16)objc_msgSend(v51, sel_unsignedShortValue);

          uint64_t v54 = v139[0];
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_251A3E200(0, *(void *)(v54 + 16) + 1, 1);
            uint64_t v54 = v139[0];
          }
          unint64_t v56 = *(void *)(v54 + 16);
          unint64_t v55 = *(void *)(v54 + 24);
          if (v56 >= v55 >> 1)
          {
            sub_251A3E200(v55 > 1, v56 + 1, 1);
            uint64_t v54 = v139[0];
          }
          *(void *)(v54 + 16) = v56 + 1;
          *(_WORD *)(v54 + 2 * v56 + 32) = v53;
          if (v134) {
            break;
          }
          uint64_t v29 = (uint64_t)v131;
          uint64_t v43 = sub_251A53F5C(v48, v49, v50, v131);
          uint64_t v45 = v44;
          char v47 = v46;
          sub_251A4ECE4(v48, v49, v50);
          uint64_t v140 = v43;
          uint64_t v141 = v45;
          unsigned __int8 v142 = v47 & 1;
          uint64_t isUniquelyReferenced_nonNull_native = v132;
          unint64_t v36 = v133;
          if (!--v30) {
            goto LABEL_27;
          }
        }
        uint64_t v29 = (uint64_t)v131;
        if ((v50 & 1) == 0) {
          goto LABEL_81;
        }
        if (sub_251F362C0()) {
          swift_isUniquelyReferenced_nonNull_native();
        }
        uint64_t isUniquelyReferenced_nonNull_native = v132;
        unint64_t v36 = v133;
        __swift_instantiateConcreteTypeFromMangledName(&qword_269B9ECA8);
        char v57 = (void (*)(uint64_t *, void))sub_251F35E80();
        sub_251F36370();
        v57(&v143, 0);
        --v30;
      }
      while (v30);
LABEL_27:
      sub_251A4ECE4(v140, v141, v142);
      swift_bridgeObjectRelease();
      uint64_t v40 = v139[0];
LABEL_28:
      uint64_t v116 = sub_251EE08DC(v40);
      swift_bridgeObjectRelease();
      __int16 v59 = v124;
      uint64_t v58 = (uint64_t)v125;
      uint64_t v115 = MatterDescriptorCluster.deviceTypes.getter((uint64_t)v124, (uint64_t)v125);
      uint64_t v60 = (uint64_t)v128;
      if (qword_269B9C520 == -1) {
        goto LABEL_29;
      }
      while (1)
      {
        swift_once();
LABEL_29:
        uint64_t v61 = __swift_project_value_buffer(v122, (uint64_t)qword_269BA59C0);
        sub_251B729E0(v61, v60, (uint64_t (*)(void))type metadata accessor for MatterTileMetadata);
        uint64_t v62 = MatterDescriptorCluster.availableClusterKinds.getter((uint64_t)v59, v58);
        uint64_t v60 = 0;
        uint64_t v63 = *(void *)(v62 + 56);
        unint64_t v134 = v62 + 56;
        uint64_t v64 = 1 << *(unsigned char *)(v62 + 32);
        uint64_t v65 = -1;
        if (v64 < 64) {
          uint64_t v65 = ~(-1 << v64);
        }
        uint64_t v58 = v65 & v63;
        int64_t v66 = (unint64_t)(v64 + 63) >> 6;
        uint64_t v131 = (void *)MEMORY[0x263F8EE80];
        __int16 v59 = &qword_269B9ECB0;
        if ((v65 & v63) != 0)
        {
LABEL_32:
          unint64_t v67 = __clz(__rbit64(v58));
          v58 &= v58 - 1;
          unint64_t v68 = v67 | (v60 << 6);
          goto LABEL_33;
        }
        while (1)
        {
          int64_t v70 = v60 + 1;
          if (__OFADD__(v60, 1)) {
            break;
          }
          if (v70 >= v66) {
            goto LABEL_62;
          }
          unint64_t v71 = *(void *)(v134 + 8 * v70);
          ++v60;
          if (!v71)
          {
            uint64_t v60 = v70 + 1;
            if (v70 + 1 >= v66) {
              goto LABEL_62;
            }
            unint64_t v71 = *(void *)(v134 + 8 * v60);
            if (!v71)
            {
              uint64_t v60 = v70 + 2;
              if (v70 + 2 >= v66) {
                goto LABEL_62;
              }
              unint64_t v71 = *(void *)(v134 + 8 * v60);
              if (!v71)
              {
                int64_t v72 = v70 + 3;
                if (v72 >= v66)
                {
LABEL_62:
                  swift_release();
                  unint64_t v86 = v128[1];
                  if (v86)
                  {
                    uint64_t v126 = *v128;
                    unint64_t v87 = v86;
                    uint64_t v88 = v135;
                    uint64_t v89 = (uint64_t)v124;
                  }
                  else
                  {
                    uint64_t v88 = v135;
                    uint64_t v90 = (*(uint64_t (**)(unint64_t, uint64_t, unint64_t))(v135 + 32))(v36, v120, v135);
                    unint64_t v92 = v117;
                    uint64_t v89 = (uint64_t)v124;
                    if (v91)
                    {
                      unint64_t v87 = v91;
                      uint64_t v126 = v90;
                    }
                    else
                    {
                      swift_bridgeObjectRetain();
                      unint64_t v87 = v92;
                    }
                  }
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRelease();
                  uint64_t v93 = MatterDescriptorCluster.availableClusterKinds.getter(v89, (uint64_t)v125);
                  BOOL v94 = sub_251DB3B04(9, v93);
                  swift_bridgeObjectRelease();
                  int v95 = sub_251B6F1BC(v94, v129, v88, isUniquelyReferenced_nonNull_native, v36 | 0x90000);
                  unint64_t v135 = v87;
                  LODWORD(v134) = v95;
                  if (v94)
                  {
                    uint64_t v140 = isUniquelyReferenced_nonNull_native;
                    LOWORD(v141) = v36;
                    BYTE2(v141) = 9;
                    (*(void (**)(uint64_t *__return_ptr, uint64_t *, uint64_t, uint64_t, uint64_t))(v88 + 48))(&v143, &v140, 1, v120, v88);
                    if (v145)
                    {
                      if (swift_dynamicCast())
                      {
                        int v96 = v140;
                        if (v140 >= 6u) {
                          int v96 = 6;
                        }
                        goto LABEL_74;
                      }
                    }
                    else
                    {
                      sub_251A9090C((uint64_t)&v143);
                    }
                  }
                  int v96 = 6;
LABEL_74:
                  LODWORD(v124) = v96;
                  uint64_t v97 = sub_251F34DA0();
                  uint64_t v130 = &v115;
                  uint64_t v98 = *(void *)(v97 - 8);
                  uint64_t v99 = *(void *)(v98 + 64);
                  MEMORY[0x270FA5388](v97);
                  uint64_t v100 = (char *)&v115 - ((v99 + 15) & 0xFFFFFFFFFFFFFFF0);
                  uint64_t v101 = v132;
                  __int16 v102 = v133;
                  uint64_t v103 = static UUID.matterObjectIdentifier(deviceID:endpointID:)(v132, v133, (uint64_t)v100);
                  unint64_t v125 = &v115;
                  uint64_t v143 = v101;
                  __int16 v144 = v102;
                  MEMORY[0x270FA5388](v103);
                  uint64_t v104 = *(void (**)(char *, uint64_t, uint64_t))(v98 + 16);
                  v104(v100, v123, v97);
                  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB80);
                  unint64_t v105 = (*(unsigned __int8 *)(v98 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v98 + 80);
                  uint64_t v106 = swift_allocObject();
                  *(_OWORD *)(v106 + 16) = xmmword_251F38650;
                  uint64_t v107 = v118;
                  v104((char *)(v106 + v105), v118, v97);
                  uint64_t v108 = sub_251C08E40(v106);
                  swift_setDeallocating();
                  swift_arrayDestroy();
                  swift_deallocClassInstance();
                  uint64_t v109 = v128;
                  uint64_t v110 = v121;
                  sub_251B729E0((uint64_t)v128, v121, (uint64_t (*)(void))type metadata accessor for MatterTileMetadata);
                  LOBYTE(v140) = (_BYTE)v124;
                  uint64_t v114 = v110;
                  uint64_t v111 = v119;
                  StaticEndpoint.init(id:endpointPath:name:deviceState:deviceTypes:clusters:linkedEndpointIDs:homeId:roomIds:metadata:identifyTime:identifyType:)((uint64_t)v100, &v143, v126, v135, 1, v115, (uint64_t)v131, v116, v119, (uint64_t)v100, v108, v114, v134 & 0x1FFFF, (unsigned __int8 *)&v140);
                  swift_unknownObjectRelease();
                  swift_unknownObjectRelease();
                  uint64_t v112 = *(void (**)(uint64_t, uint64_t))(v98 + 8);
                  v112(v107, v97);
                  v112(v123, v97);
                  sub_251B72A48((uint64_t)v109, (uint64_t (*)(void))type metadata accessor for MatterTileMetadata);
                  uint64_t v113 = type metadata accessor for StaticEndpoint();
                  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v113 - 8) + 56))(v111, 0, 1, v113);
                }
                unint64_t v71 = *(void *)(v134 + 8 * v72);
                if (!v71)
                {
                  while (1)
                  {
                    uint64_t v60 = v72 + 1;
                    if (__OFADD__(v72, 1)) {
                      goto LABEL_76;
                    }
                    if (v60 >= v66) {
                      goto LABEL_62;
                    }
                    unint64_t v71 = *(void *)(v134 + 8 * v60);
                    ++v72;
                    if (v71) {
                      goto LABEL_48;
                    }
                  }
                }
                uint64_t v60 = v72;
              }
            }
          }
LABEL_48:
          uint64_t v58 = (v71 - 1) & v71;
          unint64_t v68 = __clz(__rbit64(v71)) + (v60 << 6);
LABEL_33:
          char v69 = *(unsigned char *)(*(void *)(v62 + 48) + v68);
          LOBYTE(v138) = v69;
          uint64_t v136 = isUniquelyReferenced_nonNull_native;
          __int16 v137 = v36;
          sub_251BE0B50(&v138, v135, (uint64_t)&v136, (uint64_t)v139);
          sub_251A4ECF0((uint64_t)v139, (uint64_t)&v140, &qword_269B9ECB0);
          sub_251A4ECF0((uint64_t)&v140, (uint64_t)&v143, &qword_269B9ECB0);
          if (sub_251B72294((uint64_t)&v143) == 1)
          {
            if (v58) {
              goto LABEL_32;
            }
          }
          else
          {
            uint64_t v73 = (uint64_t)v131;
            uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v138 = v73;
            unint64_t v36 = sub_2519FE614(v69);
            uint64_t v74 = *(void *)(v73 + 16);
            LODWORD(v130) = v75;
            BOOL v76 = (v75 & 1) == 0;
            uint64_t v77 = v74 + v76;
            if (__OFADD__(v74, v76)) {
              goto LABEL_77;
            }
            if (*(void *)(v73 + 24) >= v77)
            {
              if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
                sub_251A12A30();
              }
              uint64_t isUniquelyReferenced_nonNull_native = v132;
              char v80 = (char)v130;
            }
            else
            {
              sub_251A02714(v77, isUniquelyReferenced_nonNull_native);
              unint64_t v78 = sub_2519FE614(v69);
              char v80 = (char)v130;
              if ((v130 & 1) != (v79 & 1)) {
                goto LABEL_82;
              }
              unint64_t v36 = v78;
              uint64_t isUniquelyReferenced_nonNull_native = v132;
            }
            sub_251A4ECF0((uint64_t)&v140, (uint64_t)v139, &qword_269B9ECB0);
            if (v80)
            {
              uint64_t v131 = (void *)v138;
              uint64_t v81 = *(void *)(v138 + 56) + (v36 << 8);
              sub_251A1A930(v81, (uint64_t)&v136);
              sub_251B722C4((uint64_t)&v136);
              sub_251A1A930((uint64_t)v139, v81);
            }
            else
            {
              uint64_t v82 = (void *)v138;
              *(void *)(v138 + 8 * (v36 >> 6) + 64) |= 1 << v36;
              *(unsigned char *)(v82[6] + v36) = v69;
              sub_251A1A930((uint64_t)v139, v82[7] + (v36 << 8));
              uint64_t v83 = v82[2];
              BOOL v84 = __OFADD__(v83, 1);
              uint64_t v85 = v83 + 1;
              if (v84)
              {
                __break(1u);
                goto LABEL_80;
              }
              uint64_t v131 = v82;
              v82[2] = v85;
            }
            swift_bridgeObjectRelease();
            unint64_t v36 = v133;
            if (v58) {
              goto LABEL_32;
            }
          }
        }
        __break(1u);
LABEL_76:
        __break(1u);
LABEL_77:
        __break(1u);
      }
    }
LABEL_80:
    __break(1u);
LABEL_81:
    __break(1u);
LABEL_82:
    uint64_t result = sub_251F36BA0();
    __break(1u);
  }
  else
  {
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v31 = sub_251F34DA0();
    unint64_t v32 = *(void (**)(uint64_t, uint64_t))(*(void *)(v31 - 8) + 8);
    v32(a5, v31);
    v32(a4, v31);
    uint64_t v33 = type metadata accessor for StaticEndpoint();
    uint64_t v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56);
    return v34(a8, 1, 1, v33);
  }
  return result;
}

uint64_t StaticEndpoint.toggleKnownState()()
{
  v1[158] = v0;
  sub_251F35C80();
  v1[159] = sub_251F35C70();
  uint64_t v3 = sub_251F35C00();
  v1[160] = v3;
  v1[161] = v2;
  return MEMORY[0x270FA2498](sub_251B6CE5C, v3, v2);
}

uint64_t sub_251B6CE5C()
{
  uint64_t v1 = *(void *)(v0 + 1264);
  uint64_t v2 = *(void *)(v1 + *(int *)(type metadata accessor for StaticEndpoint() + 36));
  if (*(void *)(v2 + 16)
    && (unint64_t v3 = sub_2519FE614(10), (v4 & 1) != 0)
    && (sub_251A1A930(*(void *)(v2 + 56) + (v3 << 8), v0 + 272),
        sub_251A1A930(v0 + 272, v0 + 16),
        sub_251A4DB2C(v0 + 16) == 1))
  {
    uint64_t v5 = sub_251A4E128(v0 + 16);
    __int16 v6 = *(_WORD *)(v5 + 8);
    char v7 = *(unsigned char *)(v5 + 10);
    char v8 = *(unsigned char *)(v5 + 11);
    *(void *)(v0 + 1248) = *(void *)v5;
    *(_WORD *)(v0 + 1256) = v6;
    *(unsigned char *)(v0 + 1258) = v7;
    *(unsigned char *)(v0 + 1259) = v8;
    uint64_t v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 1296) = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_251B6D014;
    return StaticOnOffCluster.toggleKnownState()();
  }
  else
  {
    StaticEndpoint.rvcClusterGroup.getter(v0 + 1008);
    sub_251A4ECF0(v0 + 1008, v0 + 768, &qword_269B9ECC0);
    sub_251A4ECF0(v0 + 768, v0 + 528, &qword_269B9ECC0);
    if (sub_251B72348(v0 + 528) != 1) {
      sub_251B72360((uint64_t *)(v0 + 768));
    }
    swift_release();
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
    return v11();
  }
}

uint64_t sub_251B6D014()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 1288);
  uint64_t v3 = *(void *)(v1 + 1280);
  return MEMORY[0x270FA2498](sub_251B6D134, v3, v2);
}

uint64_t sub_251B6D134()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t StaticEndpoint.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_251F34DA0();
  char v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t StaticEndpoint.endpointPath.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = type metadata accessor for StaticEndpoint();
  char v4 = (uint64_t *)(v1 + *(int *)(result + 20));
  uint64_t v5 = *v4;
  LOWORD(v4) = *((_WORD *)v4 + 4);
  *(void *)a1 = v5;
  *(_WORD *)(a1 + 8) = (_WORD)v4;
  return result;
}

uint64_t StaticEndpoint.name.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for StaticEndpoint() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticEndpoint.deviceState.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for StaticEndpoint() + 28));
}

uint64_t StaticEndpoint.deviceTypes.getter()
{
  type metadata accessor for StaticEndpoint();
  return swift_bridgeObjectRetain();
}

BOOL StaticEndpoint.isReachable.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for StaticEndpoint() + 28)) == 1;
}

uint64_t StaticEndpoint.clusters.getter()
{
  type metadata accessor for StaticEndpoint();
  return swift_bridgeObjectRetain();
}

uint64_t StaticEndpoint.linkedEndpointIDs.getter()
{
  type metadata accessor for StaticEndpoint();
  return swift_bridgeObjectRetain();
}

uint64_t StaticEndpoint.homeId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for StaticEndpoint() + 44);
  uint64_t v4 = sub_251F34DA0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t StaticEndpoint.roomIds.getter()
{
  type metadata accessor for StaticEndpoint();
  return swift_bridgeObjectRetain();
}

uint64_t StaticEndpoint.metadata.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for StaticEndpoint();
  return sub_251B729E0(v1 + *(int *)(v3 + 52), a1, (uint64_t (*)(void))type metadata accessor for MatterTileMetadata);
}

uint64_t StaticEndpoint.identifyTime.getter()
{
  uint64_t v1 = type metadata accessor for StaticEndpoint();
  return *(unsigned __int16 *)(v0 + *(int *)(v1 + 56)) | (*(unsigned __int8 *)(v0 + *(int *)(v1 + 56) + 2) << 16);
}

uint64_t StaticEndpoint.identifyType.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for StaticEndpoint();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 60));
  return result;
}

uint64_t StaticEndpoint.init(id:endpointPath:name:deviceState:deviceTypes:clusters:linkedEndpointIDs:homeId:roomIds:metadata:identifyTime:identifyType:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, int a13, unsigned __int8 *a14)
{
  uint64_t v74 = a6;
  uint64_t v75 = a8;
  unint64_t v71 = a4;
  uint64_t v72 = a7;
  uint64_t v73 = a3;
  uint64_t v79 = a5;
  uint64_t v80 = a12;
  LODWORD(v76) = a13;
  uint64_t v70 = a11;
  uint64_t v17 = sub_251F350A0();
  uint64_t v77 = *(void *)(v17 - 8);
  uint64_t v78 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v63 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *a2;
  int v21 = *((unsigned __int16 *)a2 + 4);
  int v69 = *a14;
  uint64_t v22 = sub_251F34DA0();
  uint64_t v65 = *(void *)(v22 - 8);
  uint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v65 + 16);
  uint64_t v68 = a1;
  v23(a9, a1, v22);
  uint64_t v24 = (int *)type metadata accessor for StaticEndpoint();
  uint64_t v25 = a9 + v24[5];
  uint64_t v63 = v20;
  *(void *)uint64_t v25 = v20;
  int v64 = v21;
  *(_WORD *)(v25 + 8) = v21;
  uint64_t v26 = a9 + v24[11];
  uint64_t v66 = v22;
  uint64_t v67 = a10;
  unint64_t v27 = v71;
  v23(v26, a10, v22);
  *(void *)(a9 + v24[12]) = v70;
  *(void *)(a9 + v24[9]) = v72;
  uint64_t v28 = v80;
  *(void *)(a9 + v24[7]) = v79;
  uint64_t v29 = v74;
  *(void *)(a9 + v24[10]) = v75;
  *(void *)(a9 + v24[8]) = v29;
  uint64_t v30 = (uint64_t *)(a9 + v24[6]);
  uint64_t v31 = v73;
  *uint64_t v30 = v73;
  v30[1] = v27;
  sub_251B729E0(v28, a9 + v24[13], (uint64_t (*)(void))type metadata accessor for MatterTileMetadata);
  uint64_t v32 = a9 + v24[14];
  char v33 = BYTE2(v76);
  *(_WORD *)uint64_t v32 = (_WORD)v76;
  *(unsigned char *)(v32 + 2) = v33 & 1;
  *(unsigned char *)(a9 + v24[15]) = v69;
  uint64_t v34 = qword_26B21ECD0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v34 != -1) {
    swift_once();
  }
  uint64_t v35 = v78;
  uint64_t v36 = __swift_project_value_buffer(v78, (uint64_t)qword_26B21ECB8);
  uint64_t v37 = v77;
  (*(void (**)(char *, uint64_t, uint64_t))(v77 + 16))(v19, v36, v35);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v38 = sub_251F35080();
  int v39 = sub_251F35FD0();
  if (!os_log_type_enabled(v38, (os_log_type_t)v39))
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

    sub_251B72A48(v80, (uint64_t (*)(void))type metadata accessor for MatterTileMetadata);
    uint64_t v53 = v66;
    uint64_t v54 = *(void (**)(uint64_t, uint64_t))(v65 + 8);
    v54(v67, v66);
    v54(v68, v53);
    return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v19, v35);
  }
  LODWORD(v75) = v39;
  os_log_t v76 = v38;
  uint64_t v40 = swift_slowAlloc();
  uint64_t v41 = swift_slowAlloc();
  uint64_t v72 = v41;
  *(_DWORD *)uint64_t v40 = 136316162;
  unint64_t v83 = 0xE300000000000000;
  v84[0] = v41;
  uint64_t v81 = v63;
  uint64_t v82 = 3829371;
  sub_251F36AB0();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  LOWORD(v81) = v64;
  sub_251F36AB0();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  uint64_t v82 = sub_251A00E84(v82, v83, v84);
  sub_251F361D0();
  swift_bridgeObjectRelease();
  uint64_t v42 = 2080;
  *(_WORD *)(v40 + 12) = 2080;
  swift_bridgeObjectRetain();
  uint64_t v82 = sub_251A00E84(v31, v27, v84);
  sub_251F361D0();
  swift_bridgeObjectRelease_n();
  *(_WORD *)(v40 + 22) = 2080;
  sub_251B72548();
  swift_bridgeObjectRetain();
  uint64_t v43 = sub_251F35E50();
  unint64_t v45 = v44;
  swift_bridgeObjectRelease();
  uint64_t v82 = sub_251A00E84(v43, v45, v84);
  sub_251F361D0();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v40 + 32) = 2080;
  uint64_t v46 = swift_bridgeObjectRetain();
  uint64_t v47 = sub_251AC549C(v46);
  uint64_t v48 = sub_251A53EB8();
  if (v50) {
    goto LABEL_18;
  }
  if (*(_DWORD *)(v47 + 36) != v49)
  {
    __break(1u);
LABEL_18:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_19;
  }
  if (v48 == 1 << *(unsigned char *)(v47 + 32))
  {
    swift_release();
    unint64_t v51 = 0xE600000000000000;
    uint64_t v52 = 0x296C6C756E28;
  }
  else
  {
    sub_251A54058(v48, v49, 0, v47, &v82);
    swift_release();
    uint64_t v52 = sub_251F35770();
    unint64_t v51 = v56;
  }
  uint64_t v82 = sub_251A00E84(v52, v51, v84);
  sub_251F361D0();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v40 + 42) = 2080;
  uint64_t v42 = v79;
  switch(v79)
  {
    case 0:
      unint64_t v57 = 0xE700000000000000;
      uint64_t v58 = 0x6E776F6E6B6E75;
      goto LABEL_16;
    case 2:
      unint64_t v57 = 0xEB00000000656C62;
      uint64_t v58 = 0x6168636165726E75;
LABEL_16:
      uint64_t v82 = sub_251A00E84(v58, v57, v84);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      os_log_t v59 = v76;
      _os_log_impl(&dword_2519F3000, v76, (os_log_type_t)v75, "Creating StaticEndpoint: (%s) name: (%s) deviceTypes:%s primaryDeviceType:(%s) deviceState: (%s)", (uint8_t *)v40, 0x34u);
      uint64_t v60 = v72;
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v60, -1, -1);
      MEMORY[0x2533AC760](v40, -1, -1);

      sub_251B72A48(v80, (uint64_t (*)(void))type metadata accessor for MatterTileMetadata);
      uint64_t v61 = v66;
      uint64_t v62 = *(void (**)(uint64_t, uint64_t))(v65 + 8);
      v62(v67, v66);
      v62(v68, v61);
      return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v19, v78);
    case 1:
      unint64_t v57 = 0xE900000000000065;
      uint64_t v58 = 0x6C62616863616572;
      goto LABEL_16;
  }
LABEL_19:
  type metadata accessor for MTRDeviceState(0);
  uint64_t v82 = v42;
  uint64_t result = sub_251F36B70();
  __break(1u);
  return result;
}

uint64_t StaticEndpoint.hash(into:)(long long *a1)
{
  uint64_t v2 = v1;
  sub_251F34DA0();
  sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
  sub_251F35610();
  uint64_t v4 = (int *)type metadata accessor for StaticEndpoint();
  sub_251F36CF0();
  sub_251F36CD0();
  swift_bridgeObjectRetain();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  sub_251F36CB0();
  uint64_t v5 = *(void *)(v1 + v4[8]);
  swift_bridgeObjectRetain();
  sub_251A54ED8((uint64_t)a1, v5);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(v2 + v4[9]);
  swift_bridgeObjectRetain();
  sub_251A47BAC((uint64_t)a1, v6);
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(v2 + v4[10]);
  swift_bridgeObjectRetain();
  sub_251A559B0((uint64_t)a1, v7);
  swift_bridgeObjectRelease();
  sub_251F35610();
  uint64_t v8 = *(void *)(v2 + v4[12]);
  swift_bridgeObjectRetain();
  sub_251A54708(a1, v8);
  swift_bridgeObjectRelease();
  MatterTileMetadata.hash(into:)();
  if (*(unsigned char *)(v2 + v4[14] + 2) == 1)
  {
    sub_251F36CC0();
  }
  else
  {
    sub_251F36CC0();
    sub_251F36CD0();
  }
  if (*(unsigned char *)(v2 + v4[15]) != 6) {
    sub_251F36CC0();
  }
  return sub_251F36CC0();
}

unint64_t sub_251B6DE70(char a1)
{
  unint64_t result = 25705;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x746E696F70646E65;
      break;
    case 2:
      unint64_t result = 1701667182;
      break;
    case 3:
      unint64_t result = 0x7453656369766564;
      break;
    case 4:
      unint64_t result = 0x7954656369766564;
      break;
    case 5:
      unint64_t result = 0x7372657473756C63;
      break;
    case 6:
      unint64_t result = 0xD000000000000011;
      break;
    case 7:
      unint64_t result = 0x6449656D6F68;
      break;
    case 8:
      unint64_t result = 0x7364496D6F6F72;
      break;
    case 9:
      unint64_t result = 0x617461646174656DLL;
      break;
    case 10:
      unint64_t result = 0x796669746E656469;
      break;
    case 11:
      unint64_t result = 0x796669746E656469;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_251B6DFFC()
{
  return sub_251B6DE70(*v0);
}

uint64_t sub_251B6E004@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251B743CC(a1, a2);
  *a3 = result;
  return result;
}

void sub_251B6E02C(unsigned char *a1@<X8>)
{
  *a1 = 12;
}

uint64_t sub_251B6E038(uint64_t a1)
{
  unint64_t v2 = sub_251B7259C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251B6E074(uint64_t a1)
{
  unint64_t v2 = sub_251B7259C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticEndpoint.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9ECD0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251B7259C();
  sub_251F36DA0();
  LOBYTE(v13) = 0;
  sub_251F34DA0();
  sub_251A1A8EC(&qword_26B21E348);
  sub_251F36A20();
  if (!v2)
  {
    uint64_t v9 = (int *)type metadata accessor for StaticEndpoint();
    unsigned int v10 = (uint64_t *)(v3 + v9[5]);
    uint64_t v11 = *v10;
    LOWORD(v10) = *((_WORD *)v10 + 4);
    uint64_t v13 = v11;
    __int16 v14 = (__int16)v10;
    char v15 = 1;
    sub_251B725F0();
    sub_251F36A20();
    LOBYTE(v13) = 2;
    sub_251F369D0();
    uint64_t v13 = *(void *)(v3 + v9[7]);
    char v15 = 3;
    type metadata accessor for MTRDeviceState(0);
    sub_251B72C7C(&qword_269B9D880, type metadata accessor for MTRDeviceState);
    sub_251F36A20();
    uint64_t v13 = *(void *)(v3 + v9[8]);
    char v15 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D888);
    sub_251AC5B7C(&qword_269B9D890, (void (*)(void))sub_251AC5A7C);
    sub_251F36A20();
    uint64_t v13 = *(void *)(v3 + v9[9]);
    char v15 = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9ECE8);
    sub_251B72794(&qword_269B9ECF0, (void (*)(void))sub_251B72644, (void (*)(void))sub_251B72698);
    sub_251F36A20();
    uint64_t v13 = *(void *)(v3 + v9[10]);
    char v15 = 6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9ED08);
    sub_251B728C4(&qword_269B9ED10);
    sub_251F36A20();
    LOBYTE(v13) = 7;
    sub_251F36A20();
    uint64_t v13 = *(void *)(v3 + v9[12]);
    char v15 = 8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC40);
    sub_251A1E490(&qword_269B9CC88, &qword_26B21E348);
    sub_251F36A20();
    LOBYTE(v13) = 9;
    type metadata accessor for MatterTileMetadata();
    sub_251B72C7C(&qword_269B9D8B0, (void (*)(uint64_t))type metadata accessor for MatterTileMetadata);
    sub_251F36A20();
    LOBYTE(v13) = 10;
    sub_251F369A0();
    LOBYTE(v13) = *(unsigned char *)(v3 + v9[15]);
    char v15 = 11;
    sub_251B726EC();
    sub_251F36970();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t StaticEndpoint.hashValue.getter()
{
  sub_251F36CA0();
  StaticEndpoint.hash(into:)(v1);
  return sub_251F36D00();
}

uint64_t StaticEndpoint.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for MatterTileMetadata();
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9ED20);
  uint64_t v8 = *(void *)(v48 - 8);
  MEMORY[0x270FA5388](v48);
  unsigned int v10 = (char *)v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v51 = (int *)type metadata accessor for StaticEndpoint();
  MEMORY[0x270FA5388](v51);
  int v49 = a1;
  char v50 = (char *)v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251B7259C();
  sub_251F36D90();
  if (v2)
  {
    uint64_t v52 = v2;
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v49);
  }
  uint64_t v45 = v5;
  uint64_t v46 = v7;
  uint64_t v44 = a2;
  uint64_t v47 = v8;
  uint64_t v12 = sub_251F34DA0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x270FA5388](v12);
  char v15 = (char *)v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v53) = 0;
  uint64_t v16 = sub_251A1A8EC(&qword_269B9CC80);
  sub_251F36880();
  void v43[2] = v16;
  uint64_t v52 = v14;
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  uint64_t v24 = v50;
  v23(v50, v15, v12);
  char v55 = 1;
  sub_251B72740();
  sub_251F36880();
  uint64_t v25 = v51;
  __int16 v26 = v54;
  unint64_t v27 = &v24[v51[5]];
  *(void *)unint64_t v27 = v53;
  *((_WORD *)v27 + 4) = v26;
  LOBYTE(v53) = 2;
  uint64_t v28 = sub_251F36830();
  uint64_t v29 = (uint64_t *)&v24[v25[6]];
  *uint64_t v29 = v28;
  v29[1] = v30;
  type metadata accessor for MTRDeviceState(0);
  char v55 = 3;
  sub_251B72C7C(&qword_269B9D8C0, type metadata accessor for MTRDeviceState);
  sub_251F36880();
  *(void *)&v24[v25[7]] = v53;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D888);
  char v55 = 4;
  sub_251AC5B7C(&qword_269B9D8C8, (void (*)(void))sub_251AC5BEC);
  sub_251F36880();
  *(void *)&v24[v25[8]] = v53;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9ECE8);
  char v55 = 5;
  sub_251B72794(&qword_269B9ED30, (void (*)(void))sub_251B7281C, (void (*)(void))sub_251B72870);
  sub_251F36880();
  *(void *)&v24[v25[9]] = v53;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9ED08);
  char v55 = 6;
  sub_251B728C4(&qword_269B9ED48);
  uint64_t v31 = sub_251F36880();
  v43[1] = v43;
  *(void *)&v24[v25[10]] = v53;
  MEMORY[0x270FA5388](v31);
  char v33 = (char *)v43 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v53) = 7;
  sub_251F36880();
  v23(&v24[v25[11]], v33, v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC40);
  char v55 = 8;
  sub_251A1E490(&qword_269B9CC78, &qword_269B9CC80);
  sub_251F36880();
  uint64_t v52 = 0;
  *(void *)&v24[v25[12]] = v53;
  LOBYTE(v53) = 9;
  sub_251B72C7C(&qword_269B9D8E0, (void (*)(uint64_t))type metadata accessor for MatterTileMetadata);
  uint64_t v34 = v52;
  sub_251F36880();
  uint64_t v52 = v34;
  if (v34)
  {
    (*(void (**)(char *, uint64_t))(v47 + 8))(v10, v48);
    char v35 = 0;
  }
  else
  {
    sub_251B72928((uint64_t)v46, (uint64_t)&v50[v51[13]]);
    LOBYTE(v53) = 10;
    uint64_t v36 = v52;
    uint64_t v37 = sub_251F36800();
    uint64_t v52 = v36;
    if (!v36)
    {
      uint64_t v38 = &v50[v51[14]];
      *(_WORD *)uint64_t v38 = v37;
      v38[2] = BYTE2(v37) & 1;
      char v55 = 11;
      sub_251B7298C();
      uint64_t v39 = v52;
      sub_251F367D0();
      uint64_t v52 = v39;
      if (!v39)
      {
        (*(void (**)(char *, uint64_t))(v47 + 8))(v10, v48);
        uint64_t v42 = (uint64_t)v50;
        v50[v51[15]] = v53;
        sub_251B729E0(v42, v44, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v49);
        uint64_t v21 = v42;
        uint64_t v22 = type metadata accessor for StaticEndpoint;
        return sub_251B72A48(v21, (uint64_t (*)(void))v22);
      }
    }
    (*(void (**)(char *, uint64_t))(v47 + 8))(v10, v48);
    char v35 = 1;
  }
  uint64_t v40 = v50;
  uint64_t v41 = v51;
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v49);
  uint64_t v18 = sub_251F34DA0();
  (*(void (**)(char *, uint64_t))(*(void *)(v18 - 8) + 8))(v40, v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v19 = &v40[v41[11]];
  uint64_t v20 = sub_251F34DA0();
  (*(void (**)(char *, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
  uint64_t result = swift_bridgeObjectRelease();
  if (v35)
  {
    uint64_t v21 = (uint64_t)&v40[v41[13]];
    uint64_t v22 = type metadata accessor for MatterTileMetadata;
    return sub_251B72A48(v21, (uint64_t (*)(void))v22);
  }
  return result;
}

uint64_t sub_251B6F10C()
{
  sub_251F36CA0();
  StaticEndpoint.hash(into:)(v1);
  return sub_251F36D00();
}

uint64_t sub_251B6F150()
{
  sub_251F36CA0();
  StaticEndpoint.hash(into:)(v1);
  return sub_251F36D00();
}

uint64_t sub_251B6F18C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticEndpoint.init(from:)(a1, a2);
}

uint64_t sub_251B6F1A4(void *a1)
{
  return StaticEndpoint.encode(to:)(a1);
}

uint64_t sub_251B6F1BC(char a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  if ((a1 & 1) == 0) {
    return 0x10000;
  }
  __int16 v5 = a5;
  unsigned int v8 = HIWORD(a5);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v14 = a4;
  __int16 v15 = v5;
  char v16 = v8;
  (*(void (**)(void *__return_ptr, uint64_t *, void, uint64_t, uint64_t))(a3 + 48))(v17, &v14, 0, ObjectType, a3);
  if (v17[3])
  {
    int v10 = swift_dynamicCast();
    int v11 = (unsigned __int16)v14;
    int v12 = v10 ^ 1;
    if (!v10) {
      int v11 = 0;
    }
  }
  else
  {
    sub_251A9090C((uint64_t)v17);
    int v11 = 0;
    int v12 = 1;
  }
  return v11 | (v12 << 16);
}

HomeDataModel::StaticEndpoint::IdentifyType_optional __swiftcall StaticEndpoint.IdentifyType.init(rawValue:)(HomeDataModel::StaticEndpoint::IdentifyType_optional rawValue)
{
  HomeDataModel::StaticEndpoint::IdentifyType value = rawValue.value;
  if (rawValue.value >= HomeDataModel_StaticEndpoint_IdentifyType_unknownDefault) {
    HomeDataModel::StaticEndpoint::IdentifyType value = HomeDataModel_StaticEndpoint_IdentifyType_unknownDefault;
  }
  *uint64_t v1 = value;
  return rawValue;
}

void StaticEndpoint.tileIcon.getter(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for StaticEndpoint() + 52);
  uint64_t v4 = *(void **)(v3 + 24);
  if (v4)
  {
    uint64_t v5 = *(void *)(v3 + 16);
    swift_bridgeObjectRetain();
    v6._uint64_t countAndFlagsBits = v5;
    v6._object = v4;
    Icon.init(customIconName:)(&v29, v6);
    uint64_t countAndFlagsBits = v29.tileOnStateIconInfo.name._countAndFlagsBits;
    object = v29.tileOnStateIconInfo.name._object;
    HomeDataModel::StaticRenderingMode renderingMode = v29.tileOnStateIconInfo.renderingMode;
    uint64_t v10 = v29.tileOffStateIconInfo.name._countAndFlagsBits;
    int v11 = v29.tileOffStateIconInfo.name._object;
    HomeDataModel::StaticRenderingMode v12 = v29.tileOffStateIconInfo.renderingMode;
    uint64_t v14 = v29.accessoryControlOnStateIconInfo.name._countAndFlagsBits;
    uint64_t v13 = v29.accessoryControlOnStateIconInfo.name._object;
    HomeDataModel::StaticRenderingMode v15 = v29.accessoryControlOnStateIconInfo.renderingMode;
    uint64_t v16 = v29.accessoryControlOffStateIconInfo.name._countAndFlagsBits;
    uint64_t v17 = v29.accessoryControlOffStateIconInfo.name._object;
    HomeDataModel::StaticRenderingMode v18 = v29.accessoryControlOffStateIconInfo.renderingMode;
LABEL_16:
    *(void *)a1 = countAndFlagsBits;
    *(void *)(a1 + 8) = object;
    *(unsigned char *)(a1 + 16) = renderingMode;
    *(void *)(a1 + 24) = v10;
    *(void *)(a1 + 32) = v11;
    *(unsigned char *)(a1 + 40) = v12;
    *(void *)(a1 + 48) = v14;
    *(void *)(a1 + 56) = v13;
    *(unsigned char *)(a1 + 64) = v15;
    *(void *)(a1 + 72) = v16;
    *(void *)(a1 + 80) = v17;
    *(unsigned char *)(a1 + 88) = v18;
    return;
  }
  uint64_t v19 = swift_bridgeObjectRetain();
  uint64_t v20 = sub_251AC549C(v19);
  uint64_t v21 = sub_251A53EB8(v20);
  if ((v23 & 1) == 0)
  {
    if (*(_DWORD *)(v20 + 36) == v22)
    {
      if (v21 != 1 << *(unsigned char *)(v20 + 32))
      {
        sub_251A54058(v21, v22, 0, v20, &v29);
        swift_release();
        if (LOBYTE(v29.tileOnStateIconInfo.name._countAndFlagsBits) - 4 >= 4)
        {
          if (LOBYTE(v29.tileOnStateIconInfo.name._countAndFlagsBits) - 21 >= 2)
          {
            if (LOBYTE(v29.tileOnStateIconInfo.name._countAndFlagsBits) == 23) {
              char v24 = 53;
            }
            else {
              char v24 = 88;
            }
          }
          else
          {
            char v24 = 19;
          }
        }
        else
        {
          char v24 = 31;
        }
        LOBYTE(v29.tileOnStateIconInfo.name._countAndFlagsBits) = v24;
        uint64_t v16 = IconSymbol.rawValue.getter();
        uint64_t v17 = v25;
        swift_bridgeObjectRetain_n();
        HomeDataModel::StaticRenderingMode v18 = HomeDataModel_StaticRenderingMode_monochrome;
        HomeDataModel::StaticRenderingMode v15 = HomeDataModel_StaticRenderingMode_monochrome;
        uint64_t v13 = v17;
        uint64_t v14 = v16;
        HomeDataModel::StaticRenderingMode v12 = HomeDataModel_StaticRenderingMode_monochrome;
        int v11 = v17;
        uint64_t v10 = v16;
        HomeDataModel::StaticRenderingMode renderingMode = HomeDataModel_StaticRenderingMode_monochrome;
        object = v17;
        uint64_t countAndFlagsBits = v16;
        goto LABEL_16;
      }
      swift_release();
      if (qword_269B9C360 == -1) {
        goto LABEL_7;
      }
    }
    else
    {
      __break(1u);
    }
    swift_once();
LABEL_7:
    object = *(void **)algn_269BA00F8;
    uint64_t v28 = qword_269BA00F0;
    char v27 = byte_269BA0100;
    int v11 = (void *)unk_269BA0110;
    uint64_t v26 = qword_269BA0108;
    HomeDataModel::StaticRenderingMode v12 = byte_269BA0118;
    uint64_t v14 = qword_269BA0120;
    uint64_t v13 = (void *)unk_269BA0128;
    HomeDataModel::StaticRenderingMode v15 = byte_269BA0130;
    uint64_t v16 = qword_269BA0138;
    uint64_t v17 = (void *)unk_269BA0140;
    HomeDataModel::StaticRenderingMode v18 = byte_269BA0148;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v10 = v26;
    HomeDataModel::StaticRenderingMode renderingMode = v27;
    uint64_t countAndFlagsBits = v28;
    goto LABEL_16;
  }
  __break(1u);
}

uint64_t StaticEndpoint.customIconSymbol.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for StaticEndpoint() + 52) + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticEndpoint.primaryDeviceType.getter@<X0>(char *a1@<X8>)
{
  type metadata accessor for StaticEndpoint();
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_251AC549C(v2);
  sub_251ABD888(v3, a1);
  return swift_release();
}

uint64_t StaticEndpoint.dateAdded.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_251F34D20();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  return v3(a1, 1, 1, v2);
}

void StaticEndpoint.primaryServiceKind.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t StaticEndpoint.roomName.getter()
{
  return 0;
}

uint64_t StaticEndpoint.foregroundColor.getter()
{
  return sub_251F35300();
}

uint64_t StaticEndpoint.isDoubleHigh.getter()
{
  int v1 = *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticEndpoint() + 52) + 48);
  if (v1 == 2)
  {
    char v2 = 0;
  }
  else
  {
    if (v1) {
      char v2 = 1;
    }
    else {
      char v2 = sub_251F36B10();
    }
    swift_bridgeObjectRelease();
  }
  return v2 & 1;
}

uint64_t StaticEndpoint.tileSize.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for StaticEndpoint();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 52) + 48);
  return result;
}

uint64_t StaticEndpoint.toggle()(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return MEMORY[0x270FA2498](sub_251AC2104, 0, 0);
}

uint64_t sub_251B6F740()
{
  return sub_251F35300();
}

uint64_t StaticEndpoint.isFavorite.getter()
{
  return *(unsigned char *)(v0 + *(int *)(type metadata accessor for StaticEndpoint() + 52) + 49) & 1;
}

uint64_t StaticEndpoint.shouldShowInDashboard.getter()
{
  int v1 = *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticEndpoint() + 52) + 50);
  return (v1 == 2) | v1 & 1u;
}

uint64_t sub_251B6F7C0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_251B6F7CC()
{
  return 0;
}

uint64_t sub_251B6F7D8()
{
  return 0x6E45636974617473;
}

uint64_t StaticEndpoint.identify()()
{
  *(void *)(v1 + 96) = v0;
  return MEMORY[0x270FA2498](sub_251B6F820, 0, 0);
}

uint64_t sub_251B6F820()
{
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v2 = type metadata accessor for StaticEndpoint();
  *(void *)(v0 + 104) = v2;
  uint64_t v3 = *(int *)(v2 + 20);
  *(_DWORD *)(v0 + 84) = v3;
  uint64_t v4 = (uint64_t *)(v1 + v3);
  uint64_t v5 = *v4;
  __int16 v6 = *((_WORD *)v4 + 4);
  sub_251B72AA8();
  *(void *)(v0 + 72) = v5;
  *(_WORD *)(v0 + 80) = v6;
  *(unsigned char *)(v0 + 82) = 9;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_251B6F8FC;
  return sub_251C4E0D4((uint64_t *)(v0 + 72));
}

uint64_t sub_251B6F8FC(uint64_t a1)
{
  *(void *)(*(void *)v1 + 120) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251B6F9FC, 0, 0);
}

uint64_t sub_251B6F9FC()
{
  uint64_t v1 = *(void **)(v0 + 120);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 96);
    if ((*(unsigned char *)(v2 + *(int *)(*(void *)(v0 + 104) + 60)) - 1) > 3u) {
      uint64_t v3 = 5;
    }
    else {
      uint64_t v3 = qword_251F41810[(char)(*(unsigned char *)(v2 + *(int *)(*(void *)(v0 + 104) + 60)) - 1)];
    }
    uint64_t v6 = v2 + *(int *)(v0 + 84);
    id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F10EB8]), sel_init);
    *(void *)(v0 + 128) = v7;
    unsigned int v8 = (void *)sub_251F361C0();
    objc_msgSend(v7, sel_setIdentifyTime_, v8);

    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D1D8);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_251F38650;
    *(_DWORD *)(inited + 32) = 0;
    *(void *)(inited + 40) = v3;
    *(unsigned char *)(inited + 48) = 2;
    unint64_t v10 = sub_251A19C30(inited);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CE50);
    swift_arrayDestroy();
    LOWORD(v8) = *(_WORD *)(v6 + 8);
    sub_251AA4920(v10);
    uint64_t v12 = v11;
    *(void *)(v0 + 136) = v11;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 88) = *(void *)v6;
    id v13 = v1;
    sub_251F36AB0();
    sub_251F35800();
    swift_bridgeObjectRelease();
    sub_251F35800();
    *(_WORD *)(v0 + 160) = (_WORD)v8;
    sub_251F36AB0();
    sub_251F35800();
    swift_bridgeObjectRelease();
    sub_251F35800();
    sub_251F35800();
    swift_bridgeObjectRelease();
    *(void *)(v0 + 144) = 0xEF2D746E696F7064;
    uint64_t v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_269B9D6B8
                                                                                                + dword_269B9D6B8);
    id v14 = v7;
    HomeDataModel::StaticRenderingMode v15 = (void *)swift_task_alloc();
    *(void *)(v0 + 152) = v15;
    *HomeDataModel::StaticRenderingMode v15 = v0;
    v15[1] = sub_251B6FD24;
    uint64_t v16 = *(void *)(v0 + 120);
    return v17(0x796669746E656469, 0xE800000000000000, v16, v12, 0x6E45636974617473, 0xEF2D746E696F7064, (uint64_t)v14);
  }
  else
  {
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
}

uint64_t sub_251B6FD24()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 128);
  uint64_t v2 = *(void **)(*(void *)v0 + 120);
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA2498](sub_251B6FE90, 0, 0);
}

uint64_t sub_251B6FE90()
{
  uint64_t v1 = *(void **)(v0 + 120);

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_251B6FEF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[18] = a4;
  v5[19] = a5;
  v5[16] = a2;
  v5[17] = a3;
  v5[15] = a1;
  return MEMORY[0x270FA2498](sub_251B6FF1C, 0, 0);
}

uint64_t sub_251B6FF1C()
{
  uint64_t v1 = v0[17];
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA5550);
    uint64_t v1 = sub_251F35AA0();
  }
  v0[20] = v1;
  uint64_t v3 = v0[18];
  uint64_t v2 = v0[19];
  uint64_t v4 = (void *)v0[16];
  v0[2] = v0;
  v0[3] = sub_251A8E7D8;
  uint64_t v5 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_251A5B804;
  v0[13] = &block_descriptor_22;
  v0[14] = v5;
  objc_msgSend(v4, sel_identifyWithParams_expectedValues_expectedValueInterval_completion_, v2, v1, v3, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t StaticEndpoint.IdentifyType.rawValue.getter()
{
  return *v0;
}

HomeDataModel::StaticEndpoint::IdentifyType_optional sub_251B70058(Swift::UInt8 *a1)
{
  return StaticEndpoint.IdentifyType.init(rawValue:)(*a1);
}

uint64_t sub_251B70060()
{
  return sub_251F35A60();
}

uint64_t sub_251B700C0()
{
  return sub_251F35A00();
}

uint64_t StaticEndpoint.includedInStatus.getter()
{
  int v1 = *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticEndpoint() + 52) + 51);
  return (v1 == 2) | v1 & 1u;
}

uint64_t StaticEndpoint.set(favorite:)(char a1)
{
  *(void *)(v2 + 64) = v1;
  *(unsigned char *)(v2 + 124) = a1;
  *(void *)(v2 + 72) = sub_251F35C80();
  *(void *)(v2 + 80) = sub_251F35C70();
  *(void *)(v2 + 88) = sub_251F35C70();
  uint64_t v5 = (uint64_t (__cdecl *)())((char *)&dword_269BA1370 + dword_269BA1370);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 96) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_251B70210;
  return v5();
}

uint64_t sub_251B70210(uint64_t a1)
{
  *(void *)(*(void *)v1 + 104) = a1;
  swift_task_dealloc();
  uint64_t v3 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251B70354, v3, v2);
}

uint64_t sub_251B70354()
{
  uint64_t v1 = *(void *)(v0 + 104);
  swift_release();
  if (v1)
  {
    uint64_t v2 = *(void **)(v0 + 104);
    uint64_t v3 = *(void *)(v0 + 64);
    uint64_t v4 = type metadata accessor for StaticEndpoint();
    uint64_t v5 = *(int *)(v4 + 20);
    *(_DWORD *)(v0 + 120) = v5;
    id v6 = HMHomeManager.matterDevice(with:inHomeWithID:)(*(void *)(v3 + v5), v3 + *(int *)(v4 + 44));
    *(void *)(v0 + 48) = v6;
    *(void *)(v0 + 56) = v7;

    *(void *)(v0 + 112) = v6;
    uint64_t v8 = sub_251F35C00();
    uint64_t v10 = v9;
    uint64_t v11 = sub_251B70450;
  }
  else
  {
    uint64_t v8 = sub_251F35C00();
    uint64_t v10 = v12;
    uint64_t v11 = sub_251B7491C;
  }
  return MEMORY[0x270FA2498](v11, v8, v10);
}

uint64_t sub_251B70450()
{
  uint64_t v11 = v0;
  uint64_t v1 = *(void *)(v0 + 112);
  swift_release();
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 56);
    char v3 = *(unsigned char *)(v0 + 124);
    uint64_t v4 = *(void *)(v0 + 64) + *(int *)(v0 + 120);
    uint64_t ObjectType = swift_getObjectType();
    v10[0] = 3;
    uint64_t v6 = *(unsigned __int16 *)(v4 + 8);
    uint64_t v7 = MEMORY[0x263F8D4F8];
    *(unsigned char *)(v0 + 16) = v3;
    *(void *)(v0 + 40) = v7;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 120))(v10, v6, v0 + 16, ObjectType, v2);
    swift_unknownObjectRelease();
    sub_251A9090C(v0 + 16);
  }
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t StaticEndpoint.set(shouldShowInDashboard:)(char a1)
{
  *(void *)(v2 + 64) = v1;
  *(unsigned char *)(v2 + 124) = a1;
  *(void *)(v2 + 72) = sub_251F35C80();
  *(void *)(v2 + 80) = sub_251F35C70();
  *(void *)(v2 + 88) = sub_251F35C70();
  uint64_t v5 = (uint64_t (__cdecl *)())((char *)&dword_269BA1370 + dword_269BA1370);
  char v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 96) = v3;
  *char v3 = v2;
  v3[1] = sub_251B70600;
  return v5();
}

uint64_t sub_251B70600(uint64_t a1)
{
  *(void *)(*(void *)v1 + 104) = a1;
  swift_task_dealloc();
  uint64_t v3 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251B70744, v3, v2);
}

uint64_t sub_251B70744()
{
  uint64_t v1 = *(void *)(v0 + 104);
  swift_release();
  if (v1)
  {
    uint64_t v2 = *(void **)(v0 + 104);
    uint64_t v3 = *(void *)(v0 + 64);
    uint64_t v4 = type metadata accessor for StaticEndpoint();
    uint64_t v5 = *(int *)(v4 + 20);
    *(_DWORD *)(v0 + 120) = v5;
    id v6 = HMHomeManager.matterDevice(with:inHomeWithID:)(*(void *)(v3 + v5), v3 + *(int *)(v4 + 44));
    *(void *)(v0 + 48) = v6;
    *(void *)(v0 + 56) = v7;

    *(void *)(v0 + 112) = v6;
    uint64_t v8 = sub_251F35C00();
    uint64_t v10 = v9;
    uint64_t v11 = sub_251B70840;
  }
  else
  {
    uint64_t v8 = sub_251F35C00();
    uint64_t v10 = v12;
    uint64_t v11 = sub_251B7491C;
  }
  return MEMORY[0x270FA2498](v11, v8, v10);
}

uint64_t sub_251B70840()
{
  uint64_t v11 = v0;
  uint64_t v1 = *(void *)(v0 + 112);
  swift_release();
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 56);
    char v3 = *(unsigned char *)(v0 + 124);
    uint64_t v4 = *(void *)(v0 + 64) + *(int *)(v0 + 120);
    uint64_t ObjectType = swift_getObjectType();
    v10[0] = 4;
    uint64_t v6 = *(unsigned __int16 *)(v4 + 8);
    uint64_t v7 = MEMORY[0x263F8D4F8];
    *(unsigned char *)(v0 + 16) = v3;
    *(void *)(v0 + 40) = v7;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 120))(v10, v6, v0 + 16, ObjectType, v2);
    swift_unknownObjectRelease();
    sub_251A9090C(v0 + 16);
  }
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t StaticEndpoint.set(name:)(uint64_t a1, uint64_t a2)
{
  v3[9] = a2;
  v3[10] = v2;
  v3[8] = a1;
  v3[11] = sub_251F35C80();
  v3[12] = sub_251F35C70();
  v3[13] = sub_251F35C70();
  uint64_t v6 = (uint64_t (__cdecl *)())((char *)&dword_269BA1370 + dword_269BA1370);
  uint64_t v4 = (void *)swift_task_alloc();
  v3[14] = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_251B709F0;
  return v6();
}

uint64_t sub_251B709F0(uint64_t a1)
{
  *(void *)(*(void *)v1 + 120) = a1;
  swift_task_dealloc();
  uint64_t v3 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251B70B34, v3, v2);
}

uint64_t sub_251B70B34()
{
  uint64_t v1 = *(void *)(v0 + 120);
  swift_release();
  if (v1)
  {
    uint64_t v2 = *(void **)(v0 + 120);
    uint64_t v3 = *(void *)(v0 + 80);
    uint64_t v4 = type metadata accessor for StaticEndpoint();
    uint64_t v5 = *(int *)(v4 + 20);
    *(_DWORD *)(v0 + 136) = v5;
    id v6 = HMHomeManager.matterDevice(with:inHomeWithID:)(*(void *)(v3 + v5), v3 + *(int *)(v4 + 44));
    *(void *)(v0 + 48) = v6;
    *(void *)(v0 + 56) = v7;

    *(void *)(v0 + 128) = v6;
    uint64_t v8 = sub_251F35C00();
    uint64_t v10 = v9;
    uint64_t v11 = sub_251B70C30;
  }
  else
  {
    uint64_t v8 = sub_251F35C00();
    uint64_t v10 = v12;
    uint64_t v11 = sub_251B70D38;
  }
  return MEMORY[0x270FA2498](v11, v8, v10);
}

uint64_t sub_251B70C30()
{
  uint64_t v13 = v0;
  uint64_t v1 = *(void *)(v0 + 128);
  swift_release();
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 72);
    uint64_t v3 = *(void *)(v0 + 56);
    uint64_t v4 = *(void *)(v0 + 64);
    uint64_t v5 = *(void *)(v0 + 80) + *(int *)(v0 + 136);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v7 = *(unsigned __int16 *)(v5 + 8);
    uint64_t v8 = MEMORY[0x263F8D310];
    *(void *)(v0 + 16) = v4;
    v12[0] = 0;
    *(void *)(v0 + 40) = v8;
    *(void *)(v0 + 24) = v2;
    uint64_t v9 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 120);
    swift_bridgeObjectRetain();
    v9(v12, v7, v0 + 16, ObjectType, v3);
    swift_unknownObjectRelease();
    sub_251A9090C(v0 + 16);
  }
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_251B70D38()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t StaticEndpoint.set(roomID:)(uint64_t a1)
{
  v2[8] = a1;
  v2[9] = v1;
  v2[10] = sub_251F35C80();
  v2[11] = sub_251F35C70();
  v2[12] = sub_251F35C70();
  uint64_t v5 = (uint64_t (__cdecl *)())((char *)&dword_269BA1370 + dword_269BA1370);
  uint64_t v3 = (void *)swift_task_alloc();
  v2[13] = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_251B70E5C;
  return v5();
}

uint64_t sub_251B70E5C(uint64_t a1)
{
  *(void *)(*(void *)v1 + 112) = a1;
  swift_task_dealloc();
  uint64_t v3 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251B70FA0, v3, v2);
}

uint64_t sub_251B70FA0()
{
  uint64_t v1 = *(void *)(v0 + 112);
  swift_release();
  if (v1)
  {
    uint64_t v2 = *(void **)(v0 + 112);
    uint64_t v3 = *(void *)(v0 + 72);
    uint64_t v4 = type metadata accessor for StaticEndpoint();
    uint64_t v5 = *(int *)(v4 + 20);
    *(_DWORD *)(v0 + 128) = v5;
    id v6 = HMHomeManager.matterDevice(with:inHomeWithID:)(*(void *)(v3 + v5), v3 + *(int *)(v4 + 44));
    *(void *)(v0 + 48) = v6;
    *(void *)(v0 + 56) = v7;

    *(void *)(v0 + 120) = v6;
    uint64_t v8 = sub_251F35C00();
    uint64_t v10 = v9;
    uint64_t v11 = sub_251B7109C;
  }
  else
  {
    uint64_t v8 = sub_251F35C00();
    uint64_t v10 = v12;
    uint64_t v11 = sub_251B711CC;
  }
  return MEMORY[0x270FA2498](v11, v8, v10);
}

uint64_t sub_251B7109C()
{
  uint64_t v12 = v0;
  uint64_t v1 = *(void *)(v0 + 120);
  swift_release();
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 64);
    uint64_t v3 = *(void *)(v0 + 56);
    uint64_t v4 = *(void *)(v0 + 72) + *(int *)(v0 + 128);
    uint64_t ObjectType = swift_getObjectType();
    v11[0] = 1;
    uint64_t v6 = *(unsigned __int16 *)(v4 + 8);
    uint64_t v7 = sub_251F34DA0();
    *(void *)(v0 + 40) = v7;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 16));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(boxed_opaque_existential_1, v2, v7);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 120))(v11, v6, v0 + 16, ObjectType, v3);
    swift_unknownObjectRelease();
    sub_251A9090C(v0 + 16);
  }
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_251B711CC()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t StaticEndpoint.set(customIconSymbol:)(uint64_t a1, uint64_t a2)
{
  v3[9] = a2;
  v3[10] = v2;
  v3[8] = a1;
  v3[11] = sub_251F35C80();
  v3[12] = sub_251F35C70();
  v3[13] = sub_251F35C70();
  uint64_t v6 = (uint64_t (__cdecl *)())((char *)&dword_269BA1370 + dword_269BA1370);
  uint64_t v4 = (void *)swift_task_alloc();
  v3[14] = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_251B712F4;
  return v6();
}

uint64_t sub_251B712F4(uint64_t a1)
{
  *(void *)(*(void *)v1 + 120) = a1;
  swift_task_dealloc();
  uint64_t v3 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251B71438, v3, v2);
}

uint64_t sub_251B71438()
{
  uint64_t v1 = *(void *)(v0 + 120);
  swift_release();
  if (v1)
  {
    uint64_t v2 = *(void **)(v0 + 120);
    uint64_t v3 = *(void *)(v0 + 80);
    uint64_t v4 = type metadata accessor for StaticEndpoint();
    uint64_t v5 = *(int *)(v4 + 20);
    *(_DWORD *)(v0 + 136) = v5;
    id v6 = HMHomeManager.matterDevice(with:inHomeWithID:)(*(void *)(v3 + v5), v3 + *(int *)(v4 + 44));
    *(void *)(v0 + 48) = v6;
    *(void *)(v0 + 56) = v7;

    *(void *)(v0 + 128) = v6;
    uint64_t v8 = sub_251F35C00();
    uint64_t v10 = v9;
    uint64_t v11 = sub_251B71534;
  }
  else
  {
    uint64_t v8 = sub_251F35C00();
    uint64_t v10 = v12;
    uint64_t v11 = sub_251B70D38;
  }
  return MEMORY[0x270FA2498](v11, v8, v10);
}

uint64_t sub_251B71534()
{
  uint64_t v12 = v0;
  uint64_t v1 = *(void *)(v0 + 128);
  swift_release();
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 56);
    uint64_t v3 = *(void *)(v0 + 72);
    uint64_t v4 = *(void *)(v0 + 80) + *(int *)(v0 + 136);
    v11[0] = 2;
    uint64_t v5 = *(unsigned __int16 *)(v4 + 8);
    if (v3)
    {
      uint64_t v6 = *(void *)(v0 + 64);
      *(void *)(v0 + 40) = MEMORY[0x263F8D310];
      *(void *)(v0 + 16) = v6;
      *(void *)(v0 + 24) = v3;
    }
    else
    {
      *(_OWORD *)(v0 + 16) = 0u;
      *(_OWORD *)(v0 + 32) = 0u;
    }
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v8 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 120);
    swift_bridgeObjectRetain();
    v8(v11, v5, v0 + 16, ObjectType, v2);
    swift_unknownObjectRelease();
    sub_251A9090C(v0 + 16);
  }
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t StaticEndpoint.set(includedInStatus:)(char a1)
{
  *(void *)(v2 + 64) = v1;
  *(unsigned char *)(v2 + 124) = a1;
  *(void *)(v2 + 72) = sub_251F35C80();
  *(void *)(v2 + 80) = sub_251F35C70();
  *(void *)(v2 + 88) = sub_251F35C70();
  uint64_t v5 = (uint64_t (__cdecl *)())((char *)&dword_269BA1370 + dword_269BA1370);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 96) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_251B71718;
  return v5();
}

uint64_t sub_251B71718(uint64_t a1)
{
  *(void *)(*(void *)v1 + 104) = a1;
  swift_task_dealloc();
  uint64_t v3 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251B7185C, v3, v2);
}

uint64_t sub_251B7185C()
{
  uint64_t v1 = *(void *)(v0 + 104);
  swift_release();
  if (v1)
  {
    uint64_t v2 = *(void **)(v0 + 104);
    uint64_t v3 = *(void *)(v0 + 64);
    uint64_t v4 = type metadata accessor for StaticEndpoint();
    uint64_t v5 = *(int *)(v4 + 20);
    *(_DWORD *)(v0 + 120) = v5;
    id v6 = HMHomeManager.matterDevice(with:inHomeWithID:)(*(void *)(v3 + v5), v3 + *(int *)(v4 + 44));
    *(void *)(v0 + 48) = v6;
    *(void *)(v0 + 56) = v7;

    *(void *)(v0 + 112) = v6;
    uint64_t v8 = sub_251F35C00();
    uint64_t v10 = v9;
    uint64_t v11 = sub_251B71958;
  }
  else
  {
    uint64_t v8 = sub_251F35C00();
    uint64_t v10 = v12;
    uint64_t v11 = sub_251B71A40;
  }
  return MEMORY[0x270FA2498](v11, v8, v10);
}

uint64_t sub_251B71958()
{
  uint64_t v11 = v0;
  uint64_t v1 = *(void *)(v0 + 112);
  swift_release();
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 56);
    char v3 = *(unsigned char *)(v0 + 124);
    uint64_t v4 = *(void *)(v0 + 64) + *(int *)(v0 + 120);
    uint64_t ObjectType = swift_getObjectType();
    v10[0] = 8;
    uint64_t v6 = *(unsigned __int16 *)(v4 + 8);
    uint64_t v7 = MEMORY[0x263F8D4F8];
    *(unsigned char *)(v0 + 16) = v3;
    *(void *)(v0 + 40) = v7;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 120))(v10, v6, v0 + 16, ObjectType, v2);
    swift_unknownObjectRelease();
    sub_251A9090C(v0 + 16);
  }
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_251B71A40()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t StaticEndpoint.activateCHIPPairingModeAndCreateSetupPayloadString()()
{
  *(void *)(v1 + 136) = v0;
  return MEMORY[0x270FA2498](sub_251B71AC0, 0, 0);
}

uint64_t sub_251B71AC0()
{
  sub_251F35C80();
  *(void *)(v0 + 144) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251B71B54, v2, v1);
}

uint64_t sub_251B71B54()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  type metadata accessor for StaticEndpoint();
  *(void *)(v0 + 152) = DataModel.accessory(with:inHomeWithID:)();
  return MEMORY[0x270FA2498](sub_251B71C1C, 0, 0);
}

uint64_t sub_251B71C1C()
{
  uint64_t v1 = (void *)v0[19];
  if (v1)
  {
    v0[2] = v0;
    v0[7] = v0 + 15;
    v0[3] = sub_251B71D58;
    uint64_t v2 = swift_continuation_init();
    v0[10] = MEMORY[0x263EF8330];
    v0[11] = 0x40000000;
    v0[12] = sub_251B71F48;
    v0[13] = &block_descriptor_3;
    v0[14] = v2;
    objc_msgSend(v1, sel_activateCHIPPairingModeAndCreateSetupPayloadStringWithCompletion_, v0 + 10);
    return MEMORY[0x270FA23F0](v0 + 2);
  }
  else
  {
    uint64_t v3 = (uint64_t (*)(void, void))v0[1];
    return v3(0, 0);
  }
}

uint64_t sub_251B71D58()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 160) = v1;
  if (v1) {
    uint64_t v2 = sub_251B71ED8;
  }
  else {
    uint64_t v2 = sub_251B71E68;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_251B71E68()
{
  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v1 = *(void *)(v0 + 128);

  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v3(v2, v1);
}

uint64_t sub_251B71ED8()
{
  uint64_t v1 = *(void **)(v0 + 152);
  swift_willThrow();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_251B71F48(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D1B0);
    swift_allocError();
    *uint64_t v5 = a3;
    id v6 = a3;
    return swift_continuation_throwingResumeWithError();
  }
  else
  {
    uint64_t v8 = sub_251F356F0();
    uint64_t v9 = *(uint64_t **)(*(void *)(v3 + 64) + 40);
    *uint64_t v9 = v8;
    v9[1] = v10;
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_251B72008(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 72);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t _s13HomeDataModel14StaticEndpointV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((sub_251F34D70() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for StaticEndpoint();
  uint64_t v5 = *(int *)(v4 + 20);
  uint64_t v6 = *(void *)(a1 + v5);
  int v7 = *(unsigned __int16 *)(a1 + v5 + 8);
  unint64_t v8 = (uint64_t *)(a2 + v5);
  uint64_t v9 = *v8;
  int v10 = *((unsigned __int16 *)v8 + 4);
  if (v6 != v9 || v7 != v10) {
    return 0;
  }
  uint64_t v12 = (int *)v4;
  uint64_t v13 = *(int *)(v4 + 24);
  uint64_t v14 = *(void *)(a1 + v13);
  uint64_t v15 = *(void *)(a1 + v13 + 8);
  uint64_t v16 = (void *)(a2 + v13);
  BOOL v17 = v14 == *v16 && v15 == v16[1];
  if (v17 || (v18 = sub_251F36B10(), uint64_t result = 0, (v18 & 1) != 0))
  {
    if (*(void *)(a1 + v12[7]) != *(void *)(a2 + v12[7])
      || (sub_251B05988(*(void *)(a1 + v12[8]), *(void *)(a2 + v12[8])) & 1) == 0
      || (sub_251AFCBF0(*(void *)(a1 + v12[9]), *(void *)(a2 + v12[9])) & 1) == 0
      || (sub_251B05B84(*(void *)(a1 + v12[10]), *(void *)(a2 + v12[10])) & 1) == 0
      || (sub_251F34D70() & 1) == 0
      || (sub_251B04848(*(void *)(a1 + v12[12]), *(void *)(a2 + v12[12])) & 1) == 0
      || (static MatterTileMetadata.== infix(_:_:)(a1 + v12[13], a2 + v12[13]) & 1) == 0)
    {
      return 0;
    }
    uint64_t v20 = v12[14];
    uint64_t v21 = (unsigned __int16 *)(a1 + v20);
    char v22 = *(unsigned char *)(a1 + v20 + 2);
    char v23 = (unsigned __int16 *)(a2 + v20);
    int v24 = *(unsigned __int8 *)(a2 + v20 + 2);
    if (v22)
    {
      if (!v24) {
        return 0;
      }
    }
    else
    {
      if (*v21 != *v23) {
        LOBYTE(v24) = 1;
      }
      if (v24) {
        return 0;
      }
    }
    uint64_t v25 = v12[15];
    int v26 = *(unsigned __int8 *)(a1 + v25);
    int v27 = *(unsigned __int8 *)(a2 + v25);
    if (v26 == 6)
    {
      if (v27 != 6) {
        return 0;
      }
    }
    else if (v27 == 6 || v26 != v27)
    {
      return 0;
    }
    return 1;
  }
  return result;
}

uint64_t type metadata accessor for StaticEndpoint()
{
  uint64_t result = qword_26B21F3A0;
  if (!qword_26B21F3A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_251B72274(uint64_t result)
{
  int v1 = *(_DWORD *)(result + 248) & 0x1FFFFFF | 0x60000000;
  *(void *)(result + 8) &= 0xFFFFFFFFFF1FFFFFLL;
  *(_DWORD *)(result + 248) = v1;
  return result;
}

uint64_t sub_251B72294(uint64_t a1)
{
  HIDWORD(v2) = (*(_DWORD *)(a1 + 248) >> 22) & 0x78 | (*(_DWORD *)(a1 + 8) >> 21) & 7;
  LODWORD(v2) = *(_DWORD *)(a1 + 248);
  int v1 = v2 >> 29;
  unsigned int v3 = v1 ^ 0x3FF;
  unsigned int v4 = 1024 - v1;
  if (v3 >= 0x3F9) {
    return 0;
  }
  else {
    return v4;
  }
}

uint64_t sub_251B722C4(uint64_t a1)
{
  long long v3 = *(_OWORD *)(a1 + 208);
  sub_251A4DC54(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    v3,
    *((uint64_t *)&v3 + 1),
    *(void *)(a1 + 224),
    *(void *)(a1 + 232),
    *(void *)(a1 + 240),
    *(_DWORD *)(a1 + 248));
  return a1;
}

uint64_t sub_251B72348(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 32);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

uint64_t *sub_251B72360(uint64_t *a1)
{
  sub_251B723DC(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21],
    a1[22],
    a1[23],
    a1[24]);
  return a1;
}

void sub_251B723DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  if (a5)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_251A4DE90(a7, a8, a9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_251A4DED4(a16, a17, a18, a19, a20, a21, a22, a23, a24, a25);
  }
}

unint64_t sub_251B72548()
{
  unint64_t result = qword_269B9ECC8;
  if (!qword_269B9ECC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9ECC8);
  }
  return result;
}

unint64_t sub_251B7259C()
{
  unint64_t result = qword_269B9ECD8;
  if (!qword_269B9ECD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9ECD8);
  }
  return result;
}

unint64_t sub_251B725F0()
{
  unint64_t result = qword_269B9ECE0;
  if (!qword_269B9ECE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9ECE0);
  }
  return result;
}

unint64_t sub_251B72644()
{
  unint64_t result = qword_269B9ECF8;
  if (!qword_269B9ECF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9ECF8);
  }
  return result;
}

unint64_t sub_251B72698()
{
  unint64_t result = qword_269B9ED00;
  if (!qword_269B9ED00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9ED00);
  }
  return result;
}

unint64_t sub_251B726EC()
{
  unint64_t result = qword_269B9ED18;
  if (!qword_269B9ED18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9ED18);
  }
  return result;
}

unint64_t sub_251B72740()
{
  unint64_t result = qword_269B9ED28;
  if (!qword_269B9ED28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9ED28);
  }
  return result;
}

uint64_t sub_251B72794(unint64_t *a1, void (*a2)(void), void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B9ECE8);
    a2();
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_251B7281C()
{
  unint64_t result = qword_269B9ED38;
  if (!qword_269B9ED38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9ED38);
  }
  return result;
}

unint64_t sub_251B72870()
{
  unint64_t result = qword_269B9ED40;
  if (!qword_269B9ED40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9ED40);
  }
  return result;
}

uint64_t sub_251B728C4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B9ED08);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_251B72928(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MatterTileMetadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_251B7298C()
{
  unint64_t result = qword_269B9ED50;
  if (!qword_269B9ED50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9ED50);
  }
  return result;
}

uint64_t sub_251B729E0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_251B72A48(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_251B72AA8()
{
  unint64_t result = qword_269B9ED68;
  if (!qword_269B9ED68)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_269B9ED68);
  }
  return result;
}

uint64_t sub_251B72AE8()
{
  return sub_251B72C7C((unint64_t *)&unk_269B9EDA8, (void (*)(uint64_t))type metadata accessor for StaticEndpoint);
}

uint64_t sub_251B72B30()
{
  return sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
}

uint64_t sub_251B72B58(void *a1)
{
  a1[1] = sub_251B72C7C(&qword_269B9EDB8, (void (*)(uint64_t))type metadata accessor for StaticEndpoint);
  a1[2] = sub_251B72C7C(&qword_269B9EDC0, (void (*)(uint64_t))type metadata accessor for StaticEndpoint);
  a1[3] = sub_251B72C7C(&qword_269B9CE40, (void (*)(uint64_t))type metadata accessor for StaticEndpoint);
  a1[4] = sub_251B72C7C(&qword_269B9CE18, (void (*)(uint64_t))type metadata accessor for StaticEndpoint);
  a1[5] = sub_251B72C7C(&qword_269B9EDC8, (void (*)(uint64_t))type metadata accessor for StaticEndpoint);
  uint64_t result = sub_251B72C7C(&qword_269B9EDD0, (void (*)(uint64_t))type metadata accessor for StaticEndpoint);
  a1[6] = result;
  return result;
}

uint64_t sub_251B72C7C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_251B72CC8()
{
  unint64_t result = qword_269B9EDD8;
  if (!qword_269B9EDD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9EDD8);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for StaticEndpoint(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v31 = *a2;
    *a1 = *a2;
    a1 = (void *)(v31 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_251F34DA0();
    __dsta = *(void **)(*(void *)(v7 - 8) + 16);
    ((void (*)(void *, void *, uint64_t))__dsta)(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    int v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    *(void *)int v10 = *(void *)v11;
    *((_WORD *)v10 + 4) = *((_WORD *)v11 + 4);
    uint64_t v12 = (void *)((char *)a1 + v9);
    uint64_t v13 = (void *)((char *)a2 + v9);
    uint64_t v14 = v13[1];
    void *v12 = *v13;
    v12[1] = v14;
    uint64_t v15 = a3[8];
    *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
    *(void *)((char *)a1 + v15) = *(void *)((char *)a2 + v15);
    uint64_t v16 = a3[10];
    *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
    *(void *)((char *)a1 + v16) = *(void *)((char *)a2 + v16);
    uint64_t v17 = a3[11];
    char v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)a2 + v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    ((void (*)(char *, char *, uint64_t))__dsta)(v18, v19, v7);
    uint64_t v20 = a3[13];
    *(void *)((char *)a1 + a3[12]) = *(void *)((char *)a2 + a3[12]);
    uint64_t v21 = (char *)a1 + v20;
    char v22 = (char *)a2 + v20;
    uint64_t v23 = *(void *)((char *)a2 + v20 + 8);
    *(void *)uint64_t v21 = *(void *)((char *)a2 + v20);
    *((void *)v21 + 1) = v23;
    uint64_t v24 = *(void *)((char *)a2 + v20 + 24);
    *((void *)v21 + 2) = *(void *)((char *)a2 + v20 + 16);
    *((void *)v21 + 3) = v24;
    uint64_t v25 = *(void *)((char *)a2 + v20 + 40);
    *((void *)v21 + 4) = *(void *)((char *)a2 + v20 + 32);
    *((void *)v21 + 5) = v25;
    *((_DWORD *)v21 + 12) = *(_DWORD *)((char *)a2 + v20 + 48);
    uint64_t v26 = *(int *)(type metadata accessor for MatterTileMetadata() + 44);
    __dst = &v21[v26];
    int v27 = &v22[v26];
    uint64_t v28 = sub_251F34D20();
    uint64_t v29 = *(void *)(v28 - 8);
    uint64_t v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v37(v27, 1, v28))
    {
      uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
      memcpy(__dst, v27, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(__dst, v27, v28);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(__dst, 0, 1, v28);
    }
    uint64_t v32 = a3[14];
    uint64_t v33 = a3[15];
    uint64_t v34 = (char *)a1 + v32;
    char v35 = (char *)a2 + v32;
    *(_WORD *)uint64_t v34 = *(_WORD *)v35;
    void v34[2] = v35[2];
    *((unsigned char *)a1 + v33) = *((unsigned char *)a2 + v33);
  }
  return a1;
}

uint64_t destroy for StaticEndpoint(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_251F34DA0();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5(a1 + *(int *)(a2 + 44), v4);
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(a2 + 52);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = v6 + *(int *)(type metadata accessor for MatterTileMetadata() + 44);
  uint64_t v8 = sub_251F34D20();
  uint64_t v11 = *(void *)(v8 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v7, 1, v8);
  if (!result)
  {
    int v10 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
    return v10(v7, v8);
  }
  return result;
}

uint64_t initializeWithCopy for StaticEndpoint(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  __dsta = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  __dsta(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(_WORD *)(v9 + 8) = *(_WORD *)(v10 + 8);
  uint64_t v11 = (void *)(a1 + v8);
  uint64_t v12 = (void *)(a2 + v8);
  uint64_t v13 = v12[1];
  *uint64_t v11 = *v12;
  v11[1] = v13;
  uint64_t v14 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v14) = *(void *)(a2 + v14);
  uint64_t v15 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(void *)(a1 + v15) = *(void *)(a2 + v15);
  uint64_t v16 = a3[11];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __dsta(v17, v18, v6);
  uint64_t v19 = a3[13];
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = *(void *)(a2 + v19 + 8);
  *(void *)uint64_t v20 = *(void *)(a2 + v19);
  *(void *)(v20 + 8) = v22;
  uint64_t v23 = *(void *)(a2 + v19 + 24);
  *(void *)(v20 + 16) = *(void *)(a2 + v19 + 16);
  *(void *)(v20 + 24) = v23;
  uint64_t v24 = *(void *)(a2 + v19 + 40);
  *(void *)(v20 + 32) = *(void *)(a2 + v19 + 32);
  *(void *)(v20 + 40) = v24;
  *(_DWORD *)(v20 + 48) = *(_DWORD *)(a2 + v19 + 48);
  uint64_t v25 = *(int *)(type metadata accessor for MatterTileMetadata() + 44);
  __dst = (void *)(v20 + v25);
  uint64_t v26 = (const void *)(v21 + v25);
  uint64_t v27 = sub_251F34D20();
  uint64_t v28 = *(void *)(v27 - 8);
  char v35 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v28 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v35(v26, 1, v27))
  {
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    memcpy(__dst, v26, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v28 + 16))(__dst, v26, v27);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(__dst, 0, 1, v27);
  }
  uint64_t v30 = a3[14];
  uint64_t v31 = a3[15];
  uint64_t v32 = a1 + v30;
  uint64_t v33 = a2 + v30;
  *(_WORD *)uint64_t v32 = *(_WORD *)v33;
  *(unsigned char *)(v32 + 2) = *(unsigned char *)(v33 + 2);
  *(unsigned char *)(a1 + v31) = *(unsigned char *)(a2 + v31);
  return a1;
}

uint64_t assignWithCopy for StaticEndpoint(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(void *)uint64_t v9 = *(void *)v10;
  *(_WORD *)(v9 + 8) = *(_WORD *)(v10 + 8);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  void *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7(a1 + a3[11], a2 + a3[11], v6);
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[13];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(void *)uint64_t v15 = *(void *)(a2 + v14);
  *(void *)(v15 + 8) = *(void *)(a2 + v14 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v15 + 16) = *(void *)(v16 + 16);
  *(void *)(v15 + 24) = *(void *)(v16 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v15 + 32) = *(void *)(v16 + 32);
  *(void *)(v15 + 40) = *(void *)(v16 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v15 + 48) = *(unsigned char *)(v16 + 48);
  *(unsigned char *)(v15 + 49) = *(unsigned char *)(v16 + 49);
  *(unsigned char *)(v15 + 50) = *(unsigned char *)(v16 + 50);
  *(unsigned char *)(v15 + 51) = *(unsigned char *)(v16 + 51);
  uint64_t v17 = *(int *)(type metadata accessor for MatterTileMetadata() + 44);
  uint64_t v18 = (void *)(v15 + v17);
  uint64_t v19 = (void *)(v16 + v17);
  uint64_t v20 = sub_251F34D20();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v21 + 48);
  int v23 = v22(v18, 1, v20);
  int v24 = v22(v19, 1, v20);
  if (!v23)
  {
    if (!v24)
    {
      (*(void (**)(void *, void *, uint64_t))(v21 + 24))(v18, v19, v20);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v21 + 8))(v18, v20);
    goto LABEL_6;
  }
  if (v24)
  {
LABEL_6:
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    memcpy(v18, v19, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v21 + 16))(v18, v19, v20);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
LABEL_7:
  uint64_t v26 = a3[14];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = (__int16 *)(a2 + v26);
  __int16 v29 = *v28;
  *(unsigned char *)(v27 + 2) = *((unsigned char *)v28 + 2);
  *(_WORD *)uint64_t v27 = v29;
  *(unsigned char *)(a1 + a3[15]) = *(unsigned char *)(a2 + a3[15]);
  return a1;
}

uint64_t initializeWithTake for StaticEndpoint(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  uint64_t v10 = a1 + v8;
  uint64_t v11 = a2 + v8;
  *(void *)uint64_t v10 = *(void *)v11;
  *(_WORD *)(v10 + 8) = *(_WORD *)(v11 + 8);
  *(_OWORD *)(a1 + v9) = *(_OWORD *)(a2 + v9);
  uint64_t v12 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  uint64_t v13 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  v7(a1 + a3[11], a2 + a3[11], v6);
  uint64_t v14 = a3[13];
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  long long v17 = *(_OWORD *)(a2 + v14 + 16);
  *(_OWORD *)uint64_t v15 = *(_OWORD *)(a2 + v14);
  *(_OWORD *)(v15 + 16) = v17;
  *(_OWORD *)(v15 + 32) = *(_OWORD *)(a2 + v14 + 32);
  *(_DWORD *)(v15 + 48) = *(_DWORD *)(a2 + v14 + 48);
  uint64_t v18 = *(int *)(type metadata accessor for MatterTileMetadata() + 44);
  uint64_t v19 = (void *)(v15 + v18);
  uint64_t v20 = (const void *)(v16 + v18);
  uint64_t v21 = sub_251F34D20();
  uint64_t v22 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v22 + 32))(v19, v20, v21);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  uint64_t v24 = a3[14];
  uint64_t v25 = a3[15];
  uint64_t v26 = a1 + v24;
  uint64_t v27 = a2 + v24;
  *(_WORD *)uint64_t v26 = *(_WORD *)v27;
  *(unsigned char *)(v26 + 2) = *(unsigned char *)(v27 + 2);
  *(unsigned char *)(a1 + v25) = *(unsigned char *)(a2 + v25);
  return a1;
}

uint64_t assignWithTake for StaticEndpoint(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  uint64_t v10 = a1 + v8;
  uint64_t v11 = a2 + v8;
  *(void *)uint64_t v10 = *(void *)v11;
  *(_WORD *)(v10 + 8) = *(_WORD *)(v11 + 8);
  uint64_t v12 = (void *)(a1 + v9);
  uint64_t v13 = (uint64_t *)(a2 + v9);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  void *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_bridgeObjectRelease();
  v7(a1 + a3[11], a2 + a3[11], v6);
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[13];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = *(void *)(a2 + v17 + 8);
  *(void *)uint64_t v18 = *(void *)(a2 + v17);
  *(void *)(v18 + 8) = v20;
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void *)(v19 + 24);
  *(void *)(v18 + 16) = *(void *)(v19 + 16);
  *(void *)(v18 + 24) = v21;
  swift_bridgeObjectRelease();
  uint64_t v22 = *(void *)(v19 + 40);
  *(void *)(v18 + 32) = *(void *)(v19 + 32);
  *(void *)(v18 + 40) = v22;
  swift_bridgeObjectRelease();
  *(_DWORD *)(v18 + 48) = *(_DWORD *)(v19 + 48);
  uint64_t v23 = *(int *)(type metadata accessor for MatterTileMetadata() + 44);
  uint64_t v24 = (void *)(v18 + v23);
  uint64_t v25 = (void *)(v19 + v23);
  uint64_t v26 = sub_251F34D20();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v27 + 48);
  int v29 = v28(v24, 1, v26);
  int v30 = v28(v25, 1, v26);
  if (!v29)
  {
    if (!v30)
    {
      (*(void (**)(void *, void *, uint64_t))(v27 + 40))(v24, v25, v26);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v27 + 8))(v24, v26);
    goto LABEL_6;
  }
  if (v30)
  {
LABEL_6:
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    memcpy(v24, v25, *(void *)(*(void *)(v31 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v27 + 32))(v24, v25, v26);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
LABEL_7:
  uint64_t v32 = a3[14];
  uint64_t v33 = a3[15];
  uint64_t v34 = a1 + v32;
  uint64_t v35 = a2 + v32;
  *(_WORD *)uint64_t v34 = *(_WORD *)v35;
  *(unsigned char *)(v34 + 2) = *(unsigned char *)(v35 + 2);
  *(unsigned char *)(a1 + v33) = *(unsigned char *)(a2 + v33);
  return a1;
}

uint64_t getEnumTagSinglePayload for StaticEndpoint(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251B73CA4);
}

uint64_t sub_251B73CA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = type metadata accessor for MatterTileMetadata();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 52);
    return v12(v14, a2, v13);
  }
}

uint64_t storeEnumTagSinglePayload for StaticEndpoint(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251B73DE8);
}

uint64_t sub_251B73DE8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_251F34DA0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = type metadata accessor for MatterTileMetadata();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 52);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t sub_251B73F18()
{
  uint64_t result = sub_251F34DA0();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for MatterTileMetadata();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for StaticEndpoint.IdentifyType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251B740F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticEndpoint.IdentifyType()
{
  return &type metadata for StaticEndpoint.IdentifyType;
}

uint64_t getEnumTagSinglePayload for StaticEndpoint.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF5) {
    goto LABEL_17;
  }
  if (a2 + 11 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 11) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 11;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xC;
  int v8 = v6 - 12;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for StaticEndpoint.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *uint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251B7428CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticEndpoint.CodingKeys()
{
  return &type metadata for StaticEndpoint.CodingKeys;
}

unint64_t sub_251B742C8()
{
  unint64_t result = qword_269B9EDE0;
  if (!qword_269B9EDE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9EDE0);
  }
  return result;
}

unint64_t sub_251B74320()
{
  unint64_t result = qword_269B9EDE8;
  if (!qword_269B9EDE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9EDE8);
  }
  return result;
}

unint64_t sub_251B74378()
{
  unint64_t result = qword_269B9EDF0;
  if (!qword_269B9EDF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9EDF0);
  }
  return result;
}

uint64_t sub_251B743CC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E696F70646E65 && a2 == 0xEC00000068746150 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7453656369766564 && a2 == 0xEB00000000657461 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7954656369766564 && a2 == 0xEB00000000736570 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7372657473756C63 && a2 == 0xE800000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000251F6ADC0 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6449656D6F68 && a2 == 0xE600000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x7364496D6F6F72 && a2 == 0xE700000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x617461646174656DLL && a2 == 0xE800000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x796669746E656469 && a2 == 0xEC000000656D6954 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x796669746E656469 && a2 == 0xEC00000065707954)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 11;
    }
    else {
      return 12;
    }
  }
}

unint64_t sub_251B748C4()
{
  unint64_t result = qword_269B9EDF8;
  if (!qword_269B9EDF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_269B9EDF8);
  }
  return result;
}

void *sub_251B74920(unsigned __int16 a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  unint64_t v3 = sub_2519FE5CC(a1);
  if ((v4 & 1) == 0) {
    return 0;
  }
  uint64_t v5 = *(void **)(*(void *)(a2 + 56) + 24 * v3);
  id v6 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t sub_251B7499C(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  unint64_t v3 = sub_2519FE588(a1);
  if ((v4 & 1) == 0) {
    return 0;
  }
  uint64_t v5 = *(void *)(*(void *)(a2 + 56) + 24 * v3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t (*sub_251B74A1C())()
{
  return j__swift_endAccess;
}

void *sub_251B74A78(unsigned __int16 a1)
{
  unint64_t v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC13HomeDataModel16MockMatterDevice_mockEndpoints);
  swift_beginAccess();
  uint64_t v4 = *v3;
  if (!*(void *)(v4 + 16)) {
    return 0;
  }
  unint64_t v5 = sub_2519FE5CC(a1);
  if ((v6 & 1) == 0) {
    return 0;
  }
  BOOL v7 = *(void **)(*(void *)(v4 + 56) + 24 * v5);
  id v8 = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v9 = v8;
  sub_251AF7478(v7);
  return v7;
}

uint64_t sub_251B74B38(uint64_t a1, unsigned __int16 a2)
{
  uint64_t v4 = (uint64_t *)(v2 + OBJC_IVAR____TtC13HomeDataModel16MockMatterDevice_mockEndpoints);
  swift_beginAccess();
  uint64_t v5 = *v4;
  if (*(void *)(v5 + 16))
  {
    unint64_t v6 = sub_2519FE5CC(a2);
    if (v7)
    {
      uint64_t v8 = *(void *)(v5 + 56) + 24 * v6;
      id v10 = *(id *)v8;
      uint64_t v9 = *(void *)(v8 + 8);
      id v11 = *(id *)v8;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      uint64_t result = (uint64_t)sub_251AF7478(v10);
      int64_t v13 = 0;
      uint64_t v14 = v9 + 64;
      uint64_t v15 = 1 << *(unsigned char *)(v9 + 32);
      uint64_t v16 = -1;
      if (v15 < 64) {
        uint64_t v16 = ~(-1 << v15);
      }
      uint64_t v17 = v16 & *(void *)(v9 + 64);
      int64_t v18 = (unint64_t)(v15 + 63) >> 6;
      do
      {
        if (v17)
        {
          v17 &= v17 - 1;
        }
        else
        {
          int64_t v19 = v13 + 1;
          if (__OFADD__(v13, 1))
          {
            __break(1u);
LABEL_33:
            __break(1u);
            return result;
          }
          if (v19 >= v18) {
            goto LABEL_29;
          }
          uint64_t v20 = *(void *)(v14 + 8 * v19);
          ++v13;
          if (!v20)
          {
            int64_t v13 = v19 + 1;
            if (v19 + 1 >= v18) {
              goto LABEL_29;
            }
            uint64_t v20 = *(void *)(v14 + 8 * v13);
            if (!v20)
            {
              int64_t v13 = v19 + 2;
              if (v19 + 2 >= v18) {
                goto LABEL_29;
              }
              uint64_t v20 = *(void *)(v14 + 8 * v13);
              if (!v20)
              {
                int64_t v13 = v19 + 3;
                if (v19 + 3 >= v18) {
                  goto LABEL_29;
                }
                uint64_t v20 = *(void *)(v14 + 8 * v13);
                if (!v20)
                {
                  int64_t v13 = v19 + 4;
                  if (v19 + 4 >= v18) {
                    goto LABEL_29;
                  }
                  uint64_t v20 = *(void *)(v14 + 8 * v13);
                  if (!v20)
                  {
                    int64_t v21 = v19 + 5;
                    if (v21 >= v18)
                    {
LABEL_29:
                      swift_release();
                      return 0;
                    }
                    uint64_t v20 = *(void *)(v14 + 8 * v21);
                    if (!v20)
                    {
                      while (1)
                      {
                        int64_t v13 = v21 + 1;
                        if (__OFADD__(v21, 1)) {
                          goto LABEL_33;
                        }
                        if (v13 >= v18) {
                          goto LABEL_29;
                        }
                        uint64_t v20 = *(void *)(v14 + 8 * v13);
                        ++v21;
                        if (v20) {
                          goto LABEL_26;
                        }
                      }
                    }
                    int64_t v13 = v21;
                  }
                }
              }
            }
          }
LABEL_26:
          uint64_t v17 = (v20 - 1) & v20;
        }
        uint64_t result = swift_dynamicCastUnknownClass();
      }
      while (!result);
      swift_unknownObjectRetain();
      swift_release();
      uint64_t result = swift_dynamicCastUnknownClass();
      if (result) {
        return result;
      }
      swift_unknownObjectRelease();
    }
  }
  return 0;
}

uint64_t sub_251B74D58(uint64_t a1, int a2)
{
  unsigned __int16 v4 = *(_WORD *)(a1 + 8);
  char v5 = *(unsigned char *)(a1 + 10);
  unint64_t v6 = (uint64_t *)(v2 + OBJC_IVAR____TtC13HomeDataModel16MockMatterDevice_mockEndpoints);
  swift_beginAccess();
  uint64_t v7 = *v6;
  if (*(void *)(v7 + 16))
  {
    unint64_t v8 = sub_2519FE5CC(v4);
    if (v9)
    {
      uint64_t v10 = *(void *)(v7 + 56) + 24 * v8;
      uint64_t v11 = *(void *)(v10 + 8);
      if (*(void *)(v11 + 16))
      {
        uint64_t v12 = *(void **)v10;
        unint64_t v13 = sub_2519FE614(v5);
        if (v14)
        {
          uint64_t v15 = *(void *)(*(void *)(v11 + 56) + 16 * v13 + 8);
          uint64_t ObjectType = swift_getObjectType();
          uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 16);
          id v18 = v12;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          uint64_t v19 = v17(ObjectType, v15);
          if (*(void *)(v19 + 16) && (unint64_t v20 = sub_2519FE8E0(a2), (v21 & 1) != 0))
          {
            sub_251A0D51C(*(void *)(v19 + 56) + 32 * v20, (uint64_t)&v24);
          }
          else
          {
            long long v24 = 0u;
            long long v25 = 0u;
          }
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          if (*((void *)&v25 + 1))
          {
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA5550);
            if (swift_dynamicCast()) {
              return v23;
            }
          }
          else
          {
            sub_251A9090C((uint64_t)&v24);
          }
        }
      }
    }
  }
  return 0;
}

unint64_t sub_251B74F0C@<X0>(uint64_t a1@<X0>, int a2@<W1>, _OWORD *a3@<X8>)
{
  unsigned __int16 v6 = *(_WORD *)(a1 + 8);
  char v7 = *(unsigned char *)(a1 + 10);
  unint64_t v8 = (uint64_t *)(v3 + OBJC_IVAR____TtC13HomeDataModel16MockMatterDevice_mockEndpoints);
  unint64_t result = swift_beginAccess();
  uint64_t v10 = *v8;
  if (*(void *)(v10 + 16)
    && (unint64_t result = sub_2519FE5CC(v6), (v11 & 1) != 0)
    && (v12 = *(void *)(v10 + 56) + 24 * result, uint64_t v13 = *(void *)(v12 + 8), *(void *)(v13 + 16))
    && (char v14 = *(void **)v12, result = sub_2519FE614(v7), (v15 & 1) != 0))
  {
    uint64_t v16 = *(void *)(*(void *)(v13 + 56) + 16 * result + 8);
    uint64_t ObjectType = swift_getObjectType();
    id v18 = *(uint64_t (**)(uint64_t, uint64_t))(v16 + 16);
    id v19 = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    uint64_t v20 = v18(ObjectType, v16);
    if (*(void *)(v20 + 16) && (unint64_t v21 = sub_2519FE8E0(a2), (v22 & 1) != 0))
    {
      sub_251A0D51C(*(void *)(v20 + 56) + 32 * v21, (uint64_t)&v29);
    }
    else
    {
      long long v29 = 0u;
      long long v30 = 0u;
    }
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9EE30);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_251F3F270;
    *(_DWORD *)(inited + 32) = 65532;
    *(void *)(inited + 64) = MEMORY[0x263F8E8F8];
    *(_DWORD *)(inited + 40) = 0;
    *(_DWORD *)(inited + 72) = 65531;
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CDD0);
    *(void *)(inited + 104) = v24;
    *(void *)(inited + 80) = &unk_27025FB00;
    *(_DWORD *)(inited + 112) = 65533;
    *(void *)(inited + 144) = MEMORY[0x263F8E888];
    *(_WORD *)(inited + 120) = 0;
    *(_DWORD *)(inited + 152) = 65529;
    *(void *)(inited + 184) = v24;
    *(void *)(inited + 160) = &unk_27025FB28;
    *(_DWORD *)(inited + 192) = 65528;
    *(void *)(inited + 224) = v24;
    *(void *)(inited + 200) = &unk_27025FB50;
    unint64_t v25 = sub_251A19738(inited);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C850);
    swift_arrayDestroy();
    if (!*((void *)&v30 + 1) && *(void *)(v25 + 16) && (sub_2519FE8E0(a2), (v26 & 1) != 0))
    {
      if (*(void *)(v25 + 16) && (unint64_t v27 = sub_2519FE8E0(a2), (v28 & 1) != 0))
      {
        sub_251A0D51C(*(void *)(v25 + 56) + 32 * v27, (uint64_t)a3);
      }
      else
      {
        *a3 = 0u;
        a3[1] = 0u;
      }
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return sub_251A9090C((uint64_t)&v29);
    }
    else
    {
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      return sub_251ABBD00((uint64_t)&v29, (uint64_t)a3);
    }
  }
  else
  {
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_251B751FC(uint64_t a1, int a2, uint64_t a3)
{
  unsigned __int16 v6 = *(_WORD *)(a1 + 8);
  char v7 = *(unsigned char *)(a1 + 10);
  unint64_t v8 = (uint64_t *)(v3 + OBJC_IVAR____TtC13HomeDataModel16MockMatterDevice_mockEndpoints);
  uint64_t result = swift_beginAccess();
  uint64_t v10 = *v8;
  if (*(void *)(v10 + 16))
  {
    uint64_t result = sub_2519FE5CC(v6);
    if (v11)
    {
      uint64_t v12 = *(void *)(v10 + 56) + 24 * result;
      uint64_t v13 = *(void *)(v12 + 8);
      if (*(void *)(v13 + 16))
      {
        char v14 = *(void **)v12;
        uint64_t result = sub_2519FE614(v7);
        if (v15)
        {
          uint64_t v16 = *(void *)(*(void *)(v13 + 56) + 16 * result + 8);
          uint64_t ObjectType = swift_getObjectType();
          sub_251A0D51C(a3, (uint64_t)v22);
          id v18 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v16 + 32);
          id v19 = v14;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          uint64_t v20 = (void (*)(unsigned char *, void))v18(v21, ObjectType, v16);
          sub_2519F8580((uint64_t)v22, a2);
          v20(v21, 0);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          return swift_unknownObjectRelease();
        }
      }
    }
  }
  return result;
}

void *sub_251B75368@<X0>(unsigned __int8 *a1@<X0>, int a2@<W1>, _OWORD *a3@<X8>)
{
  unsigned __int8 v5 = *a1;
  if ((a2 & 0x10000) != 0)
  {
    char v14 = (uint64_t *)(v3 + OBJC_IVAR____TtC13HomeDataModel16MockMatterDevice_metadata);
    uint64_t result = (void *)swift_beginAccess();
    uint64_t v15 = *v14;
    if (*(void *)(*v14 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v16 = sub_2519FEA08(v5);
      if (v17)
      {
        sub_251A0D51C(*(void *)(v15 + 56) + 32 * v16, (uint64_t)a3);
      }
      else
      {
        *a3 = 0u;
        a3[1] = 0u;
      }
      return (void *)swift_bridgeObjectRelease();
    }
LABEL_9:
    *a3 = 0u;
    a3[1] = 0u;
    return result;
  }
  unsigned __int16 v6 = a2;
  char v7 = (uint64_t *)(v3 + OBJC_IVAR____TtC13HomeDataModel16MockMatterDevice_mockEndpoints);
  swift_beginAccess();
  uint64_t result = sub_251B74920(v6, *v7);
  if (!result) {
    goto LABEL_9;
  }
  uint64_t v10 = result;
  uint64_t v11 = v9;
  if (*(void *)(v9 + 16) && (unint64_t v12 = sub_2519FEA08(v5), (v13 & 1) != 0))
  {
    sub_251A0D51C(*(void *)(v11 + 56) + 32 * v12, (uint64_t)a3);
  }
  else
  {
    *a3 = 0u;
    a3[1] = 0u;
  }
  return sub_251AF7478(v10);
}

uint64_t sub_251B754A4(unsigned __int8 *a1, int a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  if ((a2 & 0x10000) != 0)
  {
    sub_251AA82A4(a3, (uint64_t)v12);
    swift_beginAccess();
    sub_2519F848C((uint64_t)v12, v4);
    return swift_endAccess();
  }
  else
  {
    unsigned __int16 v5 = a2;
    unsigned __int16 v6 = sub_251B74A1C();
    char v7 = sub_251AF1CB4(v11, v5);
    if (*v8)
    {
      sub_251AA82A4(a3, (uint64_t)v10);
      sub_2519F848C((uint64_t)v10, v4);
    }
    ((void (*)(void *, void))v7)(v11, 0);
    return ((uint64_t (*)(unsigned char *, void))v6)(v12, 0);
  }
}

id sub_251B755D8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MockMatterDevice();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for MockMatterDevice()
{
  return self;
}

uint64_t destroy for MockMatterDevice.Endpoint(id *a1)
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s13HomeDataModel16MockMatterDeviceC8EndpointVwCP_0(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  a1[2] = *(void *)(a2 + 16);
  id v5 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MockMatterDevice.Endpoint(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for MockMatterDevice.Endpoint(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for MockMatterDevice.Endpoint()
{
  return &type metadata for MockMatterDevice.Endpoint;
}

uint64_t sub_251B757E8()
{
  return *(void *)(v0 + OBJC_IVAR____TtC13HomeDataModel16MockMatterDevice_state);
}

uint64_t sub_251B757F8()
{
  return *(void *)(v0 + OBJC_IVAR____TtC13HomeDataModel16MockMatterDevice_nodeID);
}

void *sub_251B75818@<X0>(unsigned __int8 *a1@<X0>, int a2@<W1>, _OWORD *a3@<X8>)
{
  return sub_251B75368(a1, a2 & 0x1FFFF, a3);
}

uint64_t sub_251B75828(unsigned __int8 *a1, int a2, uint64_t a3)
{
  return sub_251B754A4(a1, a2 & 0x1FFFF, a3);
}

uint64_t sub_251B7583C()
{
  return sub_251B75878(*(uint64_t (**)(uint64_t))(v0 + 8), v0, 0);
}

uint64_t sub_251B75878(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return a1(a3);
}

uint64_t sub_251B7588C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  swift_getKeyPath();
  sub_251AD2C08();
  sub_251F34F10();
  swift_release();
  id v6 = *(void **)(v1 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentHome);
  if (v6)
  {
    id v7 = objc_msgSend(v6, sel_matterControllerID);
    uint64_t v8 = sub_251F356F0();
    uint64_t v10 = v9;

    if (v8 == v2 && v10 == v3)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v12 = sub_251F36B10();
      swift_bridgeObjectRelease();
      if ((v12 & 1) == 0) {
        goto LABEL_10;
      }
    }
    uint64_t KeyPath = swift_getKeyPath();
    MEMORY[0x270FA5388](KeyPath);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_251F34F00();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
  }
LABEL_10:
  char v14 = (uint64_t *)(v1 + OBJC_IVAR____TtC13HomeDataModel9DataModel_controllerToMatterSnapshots);
  swift_beginAccess();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v17 = *v14;
  *char v14 = 0x8000000000000000;
  sub_251A0DF3C(v2, v3, v4, v5, v2, v3, isUniquelyReferenced_nonNull_native);
  *char v14 = v17;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  if (qword_26B21F270 != -1) {
    swift_once();
  }
  return sub_251F350C0();
}

uint64_t (*sub_251B75B2C())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_251B75B88@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  sub_251AD2C08();
  sub_251F34F10();
  swift_release();
  uint64_t v3 = v1 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentStateSnapshot;
  swift_beginAccess();
  return sub_251B75C78(v3, a1);
}

uint64_t type metadata accessor for DataModel()
{
  uint64_t result = qword_26B2200E8;
  if (!qword_26B2200E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_251B75C78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StateSnapshot(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_251B75CDC(uint64_t a1)
{
  return sub_251B81B80(a1, type metadata accessor for StateSnapshot);
}

uint64_t sub_251B75D94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StateSnapshot(0);
  MEMORY[0x270FA5388](v4 - 8);
  id v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251B75C78(a2, (uint64_t)v6);
  uint64_t v7 = a1 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentStateSnapshot;
  swift_beginAccess();
  sub_251B82F28((uint64_t)v6, v7);
  return swift_endAccess();
}

void (*sub_251B75E54(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  long long v3[4] = v1;
  swift_getKeyPath();
  v3[5] = OBJC_IVAR____TtC13HomeDataModel9DataModel___observationRegistrar;
  *uint64_t v3 = v1;
  v3[6] = sub_251AD2C08();
  sub_251F34F10();
  swift_release();
  *uint64_t v3 = v1;
  swift_getKeyPath();
  sub_251F34F30();
  swift_release();
  v3[7] = sub_251B75B2C();
  return sub_251B75F40;
}

void sub_251B75F40(void *a1)
{
}

uint64_t (*sub_251B75F4C())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_251B75FA8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_251B76044()
{
  return swift_release();
}

uint64_t sub_251B760E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)(a1 + OBJC_IVAR____TtC13HomeDataModel9DataModel__homesToStateSnapshots);
  swift_beginAccess();
  *uint64_t v3 = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_251B76158()
{
  return sub_251B760E8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void (*sub_251B76174(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  long long v3[4] = v1;
  swift_getKeyPath();
  v3[5] = OBJC_IVAR____TtC13HomeDataModel9DataModel___observationRegistrar;
  *uint64_t v3 = v1;
  v3[6] = sub_251AD2C08();
  sub_251F34F10();
  swift_release();
  *uint64_t v3 = v1;
  swift_getKeyPath();
  sub_251F34F30();
  swift_release();
  v3[7] = sub_251B75F4C();
  return sub_251B76260;
}

void sub_251B76260(void *a1)
{
}

uint64_t static DataModel.context.getter()
{
  return qword_26B21F258;
}

uint64_t static DataModel.context.setter(uint64_t a1)
{
  uint64_t result = swift_beginAccess();
  qword_26B21F258 = a1;
  return result;
}

uint64_t (*static DataModel.context.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t (*sub_251B763DC())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_251B76438@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  sub_251AD2C08();
  sub_251F34F10();
  swift_release();
  uint64_t v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentMatterSnapshot);
  swift_beginAccess();
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  uint64_t v7 = v3[2];
  uint64_t v6 = v3[3];
  *a1 = v5;
  a1[1] = v4;
  a1[2] = v7;
  a1[3] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_251B764F4()
{
  return swift_release();
}

uint64_t sub_251B765BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = (void *)(a1 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentMatterSnapshot);
  swift_beginAccess();
  *uint64_t v9 = a2;
  v9[1] = a3;
  void v9[2] = a4;
  v9[3] = a5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_251B76670()
{
  return sub_251AC7C1C();
}

void (*sub_251B76688(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  long long v3[4] = v1;
  swift_getKeyPath();
  v3[5] = OBJC_IVAR____TtC13HomeDataModel9DataModel___observationRegistrar;
  *uint64_t v3 = v1;
  v3[6] = sub_251AD2C08();
  sub_251F34F10();
  swift_release();
  *uint64_t v3 = v1;
  swift_getKeyPath();
  sub_251F34F30();
  swift_release();
  v3[7] = sub_251B763DC();
  return sub_251B76774;
}

void sub_251B76774(void *a1)
{
}

uint64_t sub_251B76780(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a2 + OBJC_IVAR____TtC13HomeDataModel9DataModel_controllerToMatterSnapshots);
  swift_beginAccess();
  *uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_251B767EC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_251B76838(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC13HomeDataModel9DataModel_controllerToMatterSnapshots);
  swift_beginAccess();
  *uint64_t v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_251B7688C())()
{
  return j_j__swift_endAccess;
}

uint64_t static DataModel.homeManagerConfiguration.getter()
{
  swift_beginAccess();
  uint64_t v0 = qword_26B21F248;
  id v1 = (id)qword_26B21F248;
  return v0;
}

void static DataModel.homeManagerConfiguration.setter(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v2 = (void *)qword_26B21F248;
  qword_26B21F248 = a1;
}

uint64_t (*static DataModel.homeManagerConfiguration.modify())()
{
  return j_j__swift_endAccess;
}

void *sub_251B76ACC()
{
  id v1 = (void **)(v0 + OBJC_IVAR____TtC13HomeDataModel9DataModel_homeManager);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void sub_251B76B7C(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR____TtC13HomeDataModel9DataModel_homeManager);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *id v3 = a1;
}

void sub_251B76BD0(void **a1, void *a2)
{
  uint64_t v2 = *a1;
  id v3 = (void **)(*a2 + OBJC_IVAR____TtC13HomeDataModel9DataModel_homeManager);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *id v3 = v2;
  id v5 = v2;
}

uint64_t (*sub_251B76C34())()
{
  return j_j__swift_endAccess;
}

uint64_t (*sub_251B76C90())()
{
  return j__swift_endAccess;
}

id sub_251B76CEC@<X0>(uint64_t *a1@<X0>, void **a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_251AD2C08();
  sub_251F34F10();
  swift_release();
  uint64_t v4 = (void **)(v3 + OBJC_IVAR____TtC13HomeDataModel9DataModel__accessorySettingsDataSource);
  swift_beginAccess();
  id v5 = *v4;
  *a2 = *v4;
  return v5;
}

uint64_t sub_251B76D94(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  sub_251AD2C08();
  id v2 = v1;
  sub_251F34F00();

  return swift_release();
}

void *sub_251B76E40()
{
  swift_getKeyPath();
  sub_251AD2C08();
  sub_251F34F10();
  swift_release();
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC13HomeDataModel9DataModel__accessorySettingsDataSource);
  swift_beginAccess();
  id v2 = *v1;
  id v3 = v2;
  return v2;
}

void sub_251B76EE0(void *a1)
{
}

void sub_251B76F80(uint64_t a1, void *a2)
{
  id v3 = (void **)(a1 + OBJC_IVAR____TtC13HomeDataModel9DataModel__accessorySettingsDataSource);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *id v3 = a2;
  id v5 = a2;
}

void sub_251B76FE8()
{
  sub_251B76F80(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

void (*sub_251B77004(void *a1))(void *a1)
{
  id v3 = malloc(0x40uLL);
  *a1 = v3;
  long long v3[4] = v1;
  swift_getKeyPath();
  v3[5] = OBJC_IVAR____TtC13HomeDataModel9DataModel___observationRegistrar;
  *id v3 = v1;
  v3[6] = sub_251AD2C08();
  sub_251F34F10();
  swift_release();
  *id v3 = v1;
  swift_getKeyPath();
  sub_251F34F30();
  swift_release();
  v3[7] = sub_251B76C90();
  return sub_251B770F0;
}

void sub_251B770F0(void *a1)
{
}

void sub_251B771C0(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  v33[0] = v1;
  sub_251AD2C08();
  sub_251F34F10();
  swift_release();
  uint64_t v7 = OBJC_IVAR____TtC13HomeDataModel9DataModel__currentHome;
  uint64_t v8 = *(void **)(v1 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentHome);
  if (v8)
  {
    if (a1)
    {
      sub_251A1A568(0, (unint64_t *)&qword_26B21F2D0);
      id v9 = a1;
      id v10 = v8;
      char v11 = sub_251F36120();

      if (v11) {
        return;
      }
    }
  }
  else if (!a1)
  {
    return;
  }
  swift_getKeyPath();
  v33[0] = v2;
  sub_251F34F10();
  swift_release();
  char v12 = *(void **)(v2 + v7);
  if (v12)
  {
    uint64_t v13 = qword_26B21F2C0;
    id v14 = v12;
    if (v13 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_251F350A0();
    __swift_project_value_buffer(v15, (uint64_t)qword_26B21F290);
    id v16 = v14;
    uint64_t v17 = sub_251F35080();
    os_log_type_t v18 = sub_251F35FD0();
    if (os_log_type_enabled(v17, v18))
    {
      id v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      v33[0] = v20;
      uint64_t v31 = v6;
      *(_DWORD *)id v19 = 136315138;
      id v21 = objc_msgSend(v16, sel_name, v19 + 4);
      uint64_t v22 = sub_251F356F0();
      unint64_t v24 = v23;

      uint64_t v32 = sub_251A00E84(v22, v24, v33);
      uint64_t v6 = v31;
      sub_251F361D0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_2519F3000, v17, v18, "DataModel: previous home is '%s'", v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v20, -1, -1);
      MEMORY[0x2533AC760](v19, -1, -1);
    }
    else
    {
    }
    swift_beginAccess();
    if (qword_26B21F248)
    {
      objc_msgSend(v16, sel_setDelegate_, 0);
      DataModel.unregisterForAllRelevantAccessories(_:)((HMHome)v16);
      uint64_t v25 = sub_251F35CD0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v6, 1, 1, v25);
      sub_251F35C80();
      id v26 = v16;
      uint64_t v27 = sub_251F35C70();
      char v28 = (void *)swift_allocObject();
      uint64_t v29 = MEMORY[0x263F8F500];
      v28[2] = v27;
      uint64_t v28[3] = v29;
      v28[4] = v26;
      sub_251ACBB48((uint64_t)v6, (uint64_t)&unk_269B9EEF8, (uint64_t)v28);
      swift_release();
    }
  }
}

Swift::Void __swiftcall DataModel.unregisterForAllRelevantAccessories(_:)(HMHome a1)
{
  uint64_t v2 = v1;
  swift_beginAccess();
  if (qword_26B21F258 != 3)
  {
    if (qword_26B21F2C0 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_251F350A0();
    __swift_project_value_buffer(v8, (uint64_t)qword_26B21F290);
    id v9 = a1.super.isa;
    id v10 = sub_251F35080();
    os_log_type_t v11 = sub_251F35FD0();
    if (os_log_type_enabled(v10, v11))
    {
      char v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = (void *)swift_slowAlloc();
      *(_DWORD *)char v12 = 138412290;
      id v14 = v9;
      sub_251F361D0();
      *uint64_t v13 = v9;

      _os_log_impl(&dword_2519F3000, v10, v11, "unregisterForAllRelevantAccessories() called on %@", v12, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v13, -1, -1);
      MEMORY[0x2533AC760](v12, -1, -1);
    }
    else
    {

      id v10 = v9;
    }

    uint64_t KeyPath = swift_getKeyPath();
    MEMORY[0x270FA5388](KeyPath);
    sub_251AD2C08();
    sub_251F34F00();
    swift_release();
    swift_getKeyPath();
    sub_251F34F10();
    swift_release();
    id v16 = (id *)(v2 + OBJC_IVAR____TtC13HomeDataModel9DataModel__accessorySettingsDataSource);
    swift_beginAccess();
    if (*v16) {
      objc_msgSend(*v16, sel_setDelegate_, v2);
    }
    id v17 = [(objc_class *)v9 mediaSystems];
    sub_251A1A568(0, (unint64_t *)&qword_26B21EB08);
    unint64_t v18 = sub_251F35AC0();

    if (v18 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v19 = sub_251F366C0();
      if (v19)
      {
LABEL_15:
        uint64_t v20 = 4;
        uint64_t v21 = 0;
        if ((v18 & 0xC000000000000001) == 0) {
          goto LABEL_17;
        }
LABEL_16:
        for (id i = (id)MEMORY[0x2533AB3A0](v21, v18); ; id i = *(id *)(v18 + 8 * v20))
        {
          unint64_t v23 = i;
          uint64_t v24 = v21 + 1;
          if (__OFADD__(v21, 1)) {
            break;
          }
          id v25 = objc_msgSend(i, sel_mediaSession);
          if (v25)
          {
            id v26 = v25;
            objc_msgSend(v25, sel_setDelegate_, 0);
          }
          if (v24 == v19) {
            goto LABEL_27;
          }
          uint64_t v21 = ++v20 - 4;
          if ((v18 & 0xC000000000000001) != 0) {
            goto LABEL_16;
          }
LABEL_17:
          ;
        }
        __break(1u);
        goto LABEL_25;
      }
    }
    else
    {
      uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v19) {
        goto LABEL_15;
      }
    }
LABEL_27:
    swift_bridgeObjectRelease_n();
    id v27 = objc_msgSend(v29, sel_accessories);
    sub_251A1A568(0, (unint64_t *)&qword_26B21EAF8);
    uint64_t v28 = sub_251F35AC0();

    DataModel.changeObservationOnAccessories(_:enable:)((Swift::OpaquePointer)v28, 0);
    swift_bridgeObjectRelease();
    return;
  }
  if (qword_26B21F2C0 != -1) {
LABEL_25:
  }
    swift_once();
  uint64_t v4 = sub_251F350A0();
  __swift_project_value_buffer(v4, (uint64_t)qword_26B21F290);
  uint64_t v5 = sub_251F35080();
  os_log_type_t v6 = sub_251F35FD0();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl(&dword_2519F3000, v5, v6, "unregisterForAllRelevantAccessories() has no effect in widgets context mode", v7, 2u);
    MEMORY[0x2533AC760](v7, -1, -1);
  }
}

uint64_t sub_251B77AAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[19] = a4;
  sub_251F35C80();
  v4[20] = sub_251F35C70();
  uint64_t v6 = sub_251F35C00();
  v4[21] = v6;
  v4[22] = v5;
  return MEMORY[0x270FA2498](sub_251B77B44, v6, v5);
}

uint64_t sub_251B77B44()
{
  swift_beginAccess();
  uint64_t v1 = qword_26B21F258;
  if ((unint64_t)(qword_26B21F258 - 2) >= 3)
  {
    if ((unint64_t)qword_26B21F258 > 1)
    {
      type metadata accessor for DataModelContext(0);
      v0[10] = v1;
      return sub_251F36B70();
    }
    else
    {
      uint64_t v4 = (void *)v0[19];
      v0[2] = v0;
      v0[7] = v0 + 18;
      v0[3] = sub_251B77CF8;
      uint64_t v5 = swift_continuation_init();
      v0[10] = MEMORY[0x263EF8330];
      v0[11] = 0x40000000;
      v0[12] = sub_251B78014;
      v0[13] = &block_descriptor_90;
      v0[14] = v5;
      objc_msgSend(v4, sel_enableNotifications_includeAppleMediaAccessoryNotifications_completionHandler_, 0, 0, v0 + 10);
      return MEMORY[0x270FA23F0](v0 + 2);
    }
  }
  else
  {
    swift_release();
    uint64_t v2 = (uint64_t (*)(void))v0[1];
    return v2();
  }
}

uint64_t sub_251B77CF8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 176);
  uint64_t v2 = *(void *)(*(void *)v0 + 168);
  return MEMORY[0x270FA2498](sub_251B77E00, v2, v1);
}

uint64_t sub_251B77E00()
{
  uint64_t v17 = v0;
  swift_release();

  if (qword_26B21F2C0 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void **)(v0 + 152);
  uint64_t v2 = sub_251F350A0();
  __swift_project_value_buffer(v2, (uint64_t)qword_26B21F290);
  id v3 = v1;
  uint64_t v4 = sub_251F35080();
  os_log_type_t v5 = sub_251F35FD0();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = *(void **)(v0 + 152);
  if (v6)
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v16 = v9;
    *(_DWORD *)uint64_t v8 = 136315138;
    id v10 = objc_msgSend(v7, sel_name);
    uint64_t v11 = sub_251F356F0();
    unint64_t v13 = v12;

    *(void *)(v0 + 80) = sub_251A00E84(v11, v13, &v16);
    sub_251F361D0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_2519F3000, v4, v5, "DataModel: currentHome %s.enableNotifications:includeAppleMediaAccessoryNotifications: is now false, false", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v9, -1, -1);
    MEMORY[0x2533AC760](v8, -1, -1);
  }
  else
  {
  }
  id v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14();
}

uint64_t sub_251B78014(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  **(void **)(*(void *)(v2 + 64) + 40) = a2;
  id v3 = a2;
  return MEMORY[0x270FA2400](v2);
}

void sub_251B78068(void *a1)
{
  uint64_t v2 = (char *)v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  MEMORY[0x270FA5388](v4 - 8);
  BOOL v6 = (char *)v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  unint64_t v51 = (char *)v1;
  sub_251AD2C08();
  sub_251F34F10();
  swift_release();
  uint64_t v7 = OBJC_IVAR____TtC13HomeDataModel9DataModel__currentHome;
  uint64_t v8 = *(void **)(v1 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentHome);
  if (v8)
  {
    if (a1)
    {
      sub_251A1A568(0, (unint64_t *)&qword_26B21F2D0);
      id v9 = a1;
      id v10 = v8;
      char v11 = sub_251F36120();

      if (v11) {
        return;
      }
    }
  }
  else if (!a1)
  {
    return;
  }
  swift_getKeyPath();
  unint64_t v51 = v2;
  sub_251F34F10();
  swift_release();
  unint64_t v12 = *(void **)&v2[v7];
  if (v12)
  {
    uint64_t v13 = qword_26B21F2C0;
    id v14 = v12;
    if (v13 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_251F350A0();
    __swift_project_value_buffer(v15, (uint64_t)qword_26B21F290);
    id v16 = v14;
    uint64_t v17 = sub_251F35080();
    os_log_type_t v18 = sub_251F35FD0();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v48 = swift_slowAlloc();
      unint64_t v51 = (char *)v48;
      int v49 = v6;
      *(_DWORD *)uint64_t v19 = 136315138;
      v46[1] = v19 + 4;
      uint64_t v47 = v19;
      id v20 = objc_msgSend(v16, sel_name);
      uint64_t v21 = v12;
      uint64_t v22 = a1;
      uint64_t v23 = sub_251F356F0();
      unint64_t v25 = v24;

      uint64_t v26 = v23;
      a1 = v22;
      unint64_t v12 = v21;
      uint64_t v50 = sub_251A00E84(v26, v25, (uint64_t *)&v51);
      BOOL v6 = v49;
      sub_251F361D0();
      swift_bridgeObjectRelease();

      id v27 = v47;
      _os_log_impl(&dword_2519F3000, v17, v18, "DataModel: current home is '%s'", v47, 0xCu);
      uint64_t v28 = v48;
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v28, -1, -1);
      MEMORY[0x2533AC760](v27, -1, -1);
    }
    else
    {
    }
    if (qword_26B21E6D8 != -1) {
      swift_once();
    }
    uint64_t v29 = qword_26B21E630;
    uint64_t v30 = (void **)(qword_26B21E630 + OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_currentHome);
    swift_beginAccess();
    uint64_t v31 = *v30;
    *uint64_t v30 = v12;
    id v32 = v16;

    uint64_t v33 = (void *)(v29 + OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_managers);
    swift_beginAccess();
    uint64_t v34 = swift_bridgeObjectRetain();
    sub_251AEA818(v34);
    swift_bridgeObjectRelease();
    *uint64_t v33 = sub_2519FADF4(MEMORY[0x263F8EE78]);
    swift_bridgeObjectRelease();

    swift_beginAccess();
    if (qword_26B21F248)
    {
      objc_msgSend(v32, sel_setDelegate_, v2);
      DataModel.registerForAllRelevantAccessories(_:)((HMHome)v32);
    }
    if (a1)
    {
      id v35 = a1;
      sub_251ECE8D8(v35);
    }
    sub_251ECED84(v32);
    uint64_t v36 = (void **)&v2[OBJC_IVAR____TtC13HomeDataModel9DataModel_homeManager];
    swift_beginAccess();
    uint64_t v37 = *v36;
    if (v37)
    {
      uint64_t v38 = sub_251F35CD0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v6, 1, 1, v38);
      sub_251F35C80();
      id v39 = v37;
      id v40 = v32;
      id v41 = v39;
      uint64_t v42 = v2;
      uint64_t v43 = sub_251F35C70();
      uint64_t v44 = (void *)swift_allocObject();
      uint64_t v45 = MEMORY[0x263F8F500];
      v44[2] = v43;
      v44[3] = v45;
      v44[4] = v40;
      v44[5] = v41;
      v44[6] = v42;
      sub_251ACBB48((uint64_t)v6, (uint64_t)&unk_269B9EEE8, (uint64_t)v44);

      swift_release();
    }
  }
}

Swift::Void __swiftcall DataModel.registerForAllRelevantAccessories(_:)(HMHome a1)
{
  swift_beginAccess();
  if (qword_26B21F258 == 3)
  {
    if (qword_26B21F2C0 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_251F350A0();
    __swift_project_value_buffer(v2, (uint64_t)qword_26B21F290);
    id v3 = sub_251F35080();
    os_log_type_t v4 = sub_251F35FD0();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl(&dword_2519F3000, v3, v4, "registerForAllRelevantAccessories() has no effect in widgets context mode", v5, 2u);
      MEMORY[0x2533AC760](v5, -1, -1);
    }
  }
  else
  {
    if (qword_26B21F2C0 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_251F350A0();
    __swift_project_value_buffer(v6, (uint64_t)qword_26B21F290);
    uint64_t v7 = a1.super.isa;
    uint64_t v8 = sub_251F35080();
    os_log_type_t v9 = sub_251F35FD0();
    if (os_log_type_enabled(v8, v9))
    {
      id v10 = (uint8_t *)swift_slowAlloc();
      char v11 = (void *)swift_slowAlloc();
      *(_DWORD *)id v10 = 138412290;
      unint64_t v12 = v7;
      sub_251F361D0();
      *char v11 = v7;

      _os_log_impl(&dword_2519F3000, v8, v9, "registerForAllRelevantAccessories() called on %@", v10, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v11, -1, -1);
      MEMORY[0x2533AC760](v10, -1, -1);
    }
    else
    {

      uint64_t v8 = v7;
    }

    DataModel.changeObservationOnAllRelevantAccessories(_:enable:)((HMHome)v7, 1);
  }
}

uint64_t sub_251B7884C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[32] = a5;
  v6[33] = a6;
  v6[31] = a4;
  v6[34] = type metadata accessor for StateSnapshot.UpdateType(0);
  v6[35] = swift_task_alloc();
  type metadata accessor for StateSnapshot(0);
  v6[36] = swift_task_alloc();
  sub_251F35C80();
  v6[37] = sub_251F35C70();
  uint64_t v8 = sub_251F35C00();
  v6[38] = v8;
  v6[39] = v7;
  return MEMORY[0x270FA2498](sub_251B78944, v8, v7);
}

uint64_t sub_251B78944()
{
  swift_beginAccess();
  if (qword_26B21F248 && (swift_beginAccess(), uint64_t v1 = qword_26B21F258, (unint64_t)(qword_26B21F258 - 2) >= 3))
  {
    if ((unint64_t)qword_26B21F258 > 1)
    {
      type metadata accessor for DataModelContext(0);
      v0[29] = v1;
      return sub_251F36B70();
    }
    else
    {
      uint64_t v10 = (void *)v0[31];
      v0[2] = v0;
      v0[7] = v0 + 28;
      v0[3] = sub_251B78BAC;
      uint64_t v11 = swift_continuation_init();
      v0[10] = MEMORY[0x263EF8330];
      v0[11] = 0x40000000;
      v0[12] = sub_251B78014;
      v0[13] = &block_descriptor_4;
      v0[14] = v11;
      objc_msgSend(v10, sel_enableNotifications_includeAppleMediaAccessoryNotifications_completionHandler_, 1, 1, v0 + 10);
      return MEMORY[0x270FA23F0](v0 + 2);
    }
  }
  else
  {
    if (qword_26B21E6F8 != -1) {
      swift_once();
    }
    uint64_t v2 = (void *)v0[31];
    *(void *)v0[35] = v2;
    swift_storeEnumTagMultiPayload();
    id v3 = v2;
    os_log_type_t v4 = (void *)swift_task_alloc();
    v0[40] = v4;
    *os_log_type_t v4 = v0;
    v4[1] = sub_251B78F64;
    uint64_t v6 = v0[35];
    uint64_t v5 = v0[36];
    uint64_t v8 = v0[31];
    uint64_t v7 = v0[32];
    return sub_251F2AD24(v5, v6, v7, v8, 0);
  }
}

uint64_t sub_251B78BAC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 312);
  uint64_t v2 = *(void *)(*(void *)v0 + 304);
  return MEMORY[0x270FA2498](sub_251B78CB4, v2, v1);
}

uint64_t sub_251B78CB4()
{
  uint64_t v23 = v0;

  if (qword_26B21F2C0 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void **)(v0 + 248);
  uint64_t v2 = sub_251F350A0();
  __swift_project_value_buffer(v2, (uint64_t)qword_26B21F290);
  id v3 = v1;
  uint64_t v4 = sub_251F35080();
  os_log_type_t v5 = sub_251F35FD0();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = *(void **)(v0 + 248);
  if (v6)
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    uint64_t v22 = v21;
    *(_DWORD *)uint64_t v8 = 136315138;
    id v9 = objc_msgSend(v7, sel_name);
    uint64_t v10 = sub_251F356F0();
    unint64_t v12 = v11;

    *(void *)(v0 + 240) = sub_251A00E84(v10, v12, &v22);
    sub_251F361D0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2519F3000, v4, v5, "DataModel: currentHome %s.enableNotifications:includeAppleMediaAccessoryNotifications: is now true, true", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v21, -1, -1);
    MEMORY[0x2533AC760](v8, -1, -1);
  }
  else
  {
  }
  if (qword_26B21E6F8 != -1) {
    swift_once();
  }
  uint64_t v13 = *(void **)(v0 + 248);
  **(void **)(v0 + 280) = v13;
  swift_storeEnumTagMultiPayload();
  id v14 = v13;
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v0 + 320) = v15;
  *uint64_t v15 = v0;
  v15[1] = sub_251B78F64;
  uint64_t v17 = *(void *)(v0 + 280);
  uint64_t v16 = *(void *)(v0 + 288);
  uint64_t v19 = *(void *)(v0 + 248);
  uint64_t v18 = *(void *)(v0 + 256);
  return sub_251F2AD24(v16, v17, v18, v19, 0);
}

uint64_t sub_251B78F64()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 280);
  swift_task_dealloc();
  sub_251B81B80(v2, type metadata accessor for StateSnapshot.UpdateType);
  uint64_t v3 = *(void *)(v1 + 312);
  uint64_t v4 = *(void *)(v1 + 304);
  return MEMORY[0x270FA2498](sub_251B790BC, v4, v3);
}

uint64_t sub_251B790BC()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0 + 120;
  sub_251B793E4(*(void *)(v1 + 288));
  if (qword_26B21E388 != -1) {
    swift_once();
  }
  uint64_t v3 = *(void **)(v1 + 248);
  *(void *)(v1 + 200) = v3;
  *(void *)(v1 + 208) = 0;
  *(unsigned char *)(v1 + 216) = 0;
  id v4 = v3;
  os_log_type_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 328) = v5;
  *os_log_type_t v5 = v1;
  v5[1] = sub_251B791C8;
  uint64_t v6 = *(void *)(v1 + 248);
  return sub_251B5A374(v2, v1 + 200, v6);
}

uint64_t sub_251B791C8()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 248);
  swift_task_dealloc();

  uint64_t v3 = *(void *)(v1 + 312);
  uint64_t v4 = *(void *)(v1 + 304);
  return MEMORY[0x270FA2498](sub_251B79308, v4, v3);
}

uint64_t sub_251B79308()
{
  uint64_t v8 = v0;
  uint64_t v1 = v0[36];
  swift_release();
  uint64_t v2 = v0[16];
  uint64_t v3 = v0[17];
  uint64_t v4 = v0[18];
  v7[0] = v0[15];
  v7[1] = v2;
  uint64_t v7[2] = v3;
  v7[3] = v4;
  sub_251B7588C(v7);
  sub_251B81B80(v1, type metadata accessor for StateSnapshot);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_251B793E4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2203A0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v57 = (uint64_t)v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for StateSnapshot(0);
  uint64_t v54 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v47 = (uint64_t)v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t v9 = *(void *)(*(void *)(v8 - 8) + 64);
  MEMORY[0x270FA5388](v8 - 8);
  swift_getKeyPath();
  uint64_t v10 = v1 + OBJC_IVAR____TtC13HomeDataModel9DataModel___observationRegistrar;
  uint64_t v61 = v2;
  unint64_t v59 = sub_251AD2C08();
  sub_251F34F10();
  swift_release();
  uint64_t v58 = v2;
  unint64_t v11 = *(void **)(v2 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentHome);
  uint64_t v60 = a1;
  uint64_t v56 = v10;
  if (v11)
  {
    id v12 = objc_msgSend(v11, sel_uniqueIdentifier);
    sub_251F34D80();

    uint64_t v13 = sub_251F34DA0();
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v14 + 56))((char *)v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), 0, 1, v13);
  }
  else
  {
    uint64_t v13 = sub_251F34DA0();
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))((char *)v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v13);
  }
  uint64_t v16 = (char *)v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v49 = v45;
  MEMORY[0x270FA5388](v15);
  unint64_t v17 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v18 = (char *)v45 - v17;
  uint64_t v55 = v6;
  uint64_t v19 = v60 + *(int *)(v6 + 20);
  sub_251F34DA0();
  id v20 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  uint64_t v51 = v14 + 16;
  uint64_t v52 = v19;
  uint64_t v50 = v20;
  v20((char *)v45 - v17, v19, v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))((char *)v45 - v17, 0, 1, v13);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E6B8);
  uint64_t v48 = v45;
  uint64_t v22 = MEMORY[0x270FA5388](v21 - 8);
  uint64_t v24 = (char *)v45 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = (uint64_t)&v24[*(int *)(v22 + 56)];
  sub_251A1B128((uint64_t)v16, (uint64_t)v24, &qword_26B21FF90);
  sub_251A1B128((uint64_t)v45 - v17, v25, &qword_26B21FF90);
  uint64_t v53 = v14;
  uint64_t v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  uint64_t v27 = v26(v24, 1, v13);
  if (v27 != 1)
  {
    uint64_t v46 = (uint64_t)v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    MEMORY[0x270FA5388](v27);
    uint64_t v31 = (char *)v45 - v17;
    sub_251A1B128((uint64_t)v24, (uint64_t)v45 - v17, &qword_26B21FF90);
    uint64_t v32 = v26((char *)v25, 1, v13);
    if (v32 != 1)
    {
      v45[1] = v45;
      uint64_t v34 = v53;
      MEMORY[0x270FA5388](v32);
      uint64_t v36 = (char *)v45 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, uint64_t, uint64_t))(v34 + 32))(v36, v25, v13);
      sub_251A9FE88();
      char v37 = sub_251F35650();
      uint64_t v38 = *(void (**)(char *, uint64_t))(v34 + 8);
      v38(v36, v13);
      sub_251A1B064((uint64_t)v18, &qword_26B21FF90);
      sub_251A1B064(v46, &qword_26B21FF90);
      v38(v31, v13);
      uint64_t v33 = sub_251A1B064((uint64_t)v24, &qword_26B21FF90);
      uint64_t v29 = v60;
      uint64_t v30 = v58;
      if ((v37 & 1) == 0) {
        goto LABEL_12;
      }
      goto LABEL_11;
    }
    sub_251A1B064((uint64_t)v45 - v17, &qword_26B21FF90);
    sub_251A1B064(v46, &qword_26B21FF90);
    (*(void (**)(char *, uint64_t))(v53 + 8))((char *)v45 - v17, v13);
    uint64_t v29 = v60;
LABEL_9:
    uint64_t v33 = sub_251A1B064((uint64_t)v24, &qword_26B21E6B8);
    uint64_t v30 = v58;
    goto LABEL_12;
  }
  sub_251A1B064((uint64_t)v45 - v17, &qword_26B21FF90);
  sub_251A1B064((uint64_t)v16, &qword_26B21FF90);
  int v28 = v26((char *)v25, 1, v13);
  uint64_t v29 = v60;
  if (v28 != 1) {
    goto LABEL_9;
  }
  sub_251A1B064((uint64_t)v24, &qword_26B21FF90);
  uint64_t v30 = v58;
LABEL_11:
  uint64_t v39 = v47;
  sub_251B75C78(v29, v47);
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x270FA5388](KeyPath);
  v45[-2] = v30;
  v45[-1] = v39;
  uint64_t v61 = v30;
  sub_251F34F00();
  swift_release();
  uint64_t v33 = sub_251B81B80(v39, type metadata accessor for StateSnapshot);
LABEL_12:
  MEMORY[0x270FA5388](v33);
  uint64_t v42 = (char *)v45 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50(v42, v52, v13);
  uint64_t v43 = v57;
  sub_251B75C78(v29, v57);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v54 + 56))(v43, 0, 1, v55);
  swift_getKeyPath();
  uint64_t v61 = v30;
  sub_251F34F10();
  swift_release();
  uint64_t v61 = v30;
  swift_getKeyPath();
  sub_251F34F30();
  swift_release();
  swift_beginAccess();
  sub_2519F7C18(v43, (uint64_t)v42);
  swift_endAccess();
  uint64_t v61 = v30;
  swift_getKeyPath();
  sub_251F34F20();
  swift_release();
  if (qword_26B21E380 != -1) {
    swift_once();
  }
  return sub_251F350C0();
}

void (*sub_251B79C3C(void *a1))(uint64_t a1, char a2)
{
  uint64_t v2 = OBJC_IVAR____TtC13HomeDataModel9DataModel__currentHome;
  a1[1] = v1;
  a1[2] = v2;
  uint64_t v3 = *(void **)(v1 + v2);
  *a1 = v3;
  id v4 = v3;
  return sub_251B79C94;
}

void sub_251B79C94(uint64_t a1, char a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  id v4 = *(void **)a1;
  uint64_t v5 = *(void **)(v2 + v3);
  if (a2)
  {
    id v6 = v5;
    id v7 = v4;
    sub_251B771C0(v4);
    uint64_t v8 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v4;
    id v10 = v7;

    sub_251B78068(v5);
  }
  else
  {
    id v6 = v5;
    sub_251B771C0(v4);
    uint64_t v9 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v4;
    id v10 = v4;

    sub_251B78068(v5);
  }
}

void *sub_251B79DF8()
{
  swift_getKeyPath();
  sub_251AD2C08();
  sub_251F34F10();
  swift_release();
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentHome);
  id v2 = v1;
  return v1;
}

void sub_251B79F38(void *a1)
{
}

id sub_251B79FD8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_251AD2C08();
  sub_251F34F10();
  swift_release();
  id v4 = *(void **)(v3 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentHome);
  *a2 = v4;
  return v4;
}

uint64_t sub_251B7A068(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  sub_251AD2C08();
  id v2 = v1;
  sub_251F34F00();

  return swift_release();
}

void sub_251B7A114(uint64_t a1, void *a2)
{
  uint64_t v4 = OBJC_IVAR____TtC13HomeDataModel9DataModel__currentHome;
  uint64_t v5 = *(void **)(a1 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentHome);
  id v6 = v5;
  id v7 = a2;
  sub_251B771C0(a2);
  uint64_t v8 = *(void **)(a1 + v4);
  *(void *)(a1 + v4) = a2;
  id v9 = v7;

  sub_251B78068(v5);
}

void (*sub_251B7A1A0(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  long long v3[4] = v1;
  swift_getKeyPath();
  v3[5] = OBJC_IVAR____TtC13HomeDataModel9DataModel___observationRegistrar;
  *uint64_t v3 = v1;
  v3[6] = sub_251AD2C08();
  sub_251F34F10();
  swift_release();
  *uint64_t v3 = v1;
  swift_getKeyPath();
  sub_251F34F30();
  swift_release();
  v3[7] = sub_251B79C3C(v3);
  return sub_251B7A28C;
}

void sub_251B7A28C(void *a1)
{
}

uint64_t DataModel.initialCharacteristicFetchTask.getter()
{
  return swift_retain();
}

uint64_t sub_251B7A2A8@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  sub_251AD2C08();
  sub_251F34F10();
  swift_release();
  uint64_t v3 = v1 + OBJC_IVAR____TtC13HomeDataModel9DataModel__initialCharacteristicFetchContinuation;
  swift_beginAccess();
  return sub_251A1B128(v3, a1, &qword_26B21F5F0);
}

uint64_t sub_251B7A34C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_251AD2C08();
  sub_251F34F10();
  swift_release();
  uint64_t v4 = v3 + OBJC_IVAR____TtC13HomeDataModel9DataModel__initialCharacteristicFetchContinuation;
  swift_beginAccess();
  return sub_251A1B128(v4, a2, &qword_26B21F5F0);
}

uint64_t sub_251B7A3F0(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F5F0);
  MEMORY[0x270FA5388](v4 - 8);
  id v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_251A1B128(a1, (uint64_t)v6, &qword_26B21F5F0);
  uint64_t v7 = *a2;
  swift_getKeyPath();
  uint64_t v10 = v7;
  unint64_t v11 = v6;
  uint64_t v12 = v7;
  sub_251AD2C08();
  sub_251F34F00();
  swift_release();
  return sub_251A1B064((uint64_t)v6, &qword_26B21F5F0);
}

uint64_t sub_251B7A500(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F5F0);
  MEMORY[0x270FA5388](v4 - 8);
  id v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1B128(a2, (uint64_t)v6, &qword_26B21F5F0);
  uint64_t v7 = a1 + OBJC_IVAR____TtC13HomeDataModel9DataModel__initialCharacteristicFetchContinuation;
  swift_beginAccess();
  sub_251B82EC0((uint64_t)v6, v7);
  return swift_endAccess();
}

id DataModel.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

char *DataModel.init()()
{
  uint64_t v73 = *MEMORY[0x263EF8340];
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  MEMORY[0x270FA5388](v1 - 8);
  int v69 = (char *)&v65 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF08);
  uint64_t v67 = *(void (***)(char *, uint64_t, uint64_t))(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v68 = (char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BE0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for StateSnapshot(0);
  MEMORY[0x270FA5388](v9);
  unint64_t v11 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = qword_26B220320;
  uint64_t v13 = v0;
  if (v12 != -1) {
    swift_once();
  }
  uint64_t v14 = __swift_project_value_buffer(v9, (uint64_t)qword_26B21FF70);
  sub_251B75C78(v14, (uint64_t)v11);
  sub_251ACFFCC((uint64_t)v11, (uint64_t)&v13[OBJC_IVAR____TtC13HomeDataModel9DataModel__currentStateSnapshot]);
  uint64_t v15 = MEMORY[0x263F8EE78];
  *(void *)&v13[OBJC_IVAR____TtC13HomeDataModel9DataModel__homesToStateSnapshots] = sub_2519F95D0(MEMORY[0x263F8EE78]);
  if (qword_26B21F6E0 != -1) {
    swift_once();
  }
  uint64_t v16 = *(void *)algn_26B21F698;
  uint64_t v17 = qword_26B21F6A0;
  uint64_t v18 = unk_26B21F6A8;
  uint64_t v19 = &v13[OBJC_IVAR____TtC13HomeDataModel9DataModel__currentMatterSnapshot];
  *(void *)uint64_t v19 = qword_26B21F690;
  *((void *)v19 + 1) = v16;
  *((void *)v19 + 2) = v17;
  *((void *)v19 + 3) = v18;
  uint64_t v20 = OBJC_IVAR____TtC13HomeDataModel9DataModel_controllerToMatterSnapshots;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  *(void *)&v13[v20] = sub_2519FA57C(v15);
  uint64_t v66 = (void **)&v13[OBJC_IVAR____TtC13HomeDataModel9DataModel_homeManager];
  *(void *)&v13[OBJC_IVAR____TtC13HomeDataModel9DataModel_homeManager] = 0;
  *(void *)&v13[OBJC_IVAR____TtC13HomeDataModel9DataModel__accessorySettingsDataSource] = 0;
  *(void *)&v13[OBJC_IVAR____TtC13HomeDataModel9DataModel__currentHome] = 0;
  uint64_t v21 = &v13[OBJC_IVAR____TtC13HomeDataModel9DataModel__initialCharacteristicFetchContinuation];
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F4F8);
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
  v23(v21, 1, 1, v22);
  v23(v21, 1, 1, v22);
  uint64_t v24 = OBJC_IVAR____TtC13HomeDataModel9DataModel_snapshotMetricsAggregator;
  type metadata accessor for PhoenixMetricsAggregator();
  uint64_t v25 = swift_allocObject();
  swift_defaultActor_initialize();
  sub_251F365C0();
  uint64_t v26 = OBJC_IVAR____TtC13HomeDataModel24PhoenixMetricsAggregator_intervalBuffer;
  *(void *)(v25 + v26) = sub_2519FB070(v15);
  *(void *)(v25 + OBJC_IVAR____TtC13HomeDataModel24PhoenixMetricsAggregator_batchEvents) = v15;
  *(void *)(v25 + OBJC_IVAR____TtC13HomeDataModel24PhoenixMetricsAggregator_timer) = 0;
  *(void *)&v13[v24] = v25;
  uint64_t v27 = OBJC_IVAR____TtC13HomeDataModel9DataModel_snapshotBatchManager;
  if (qword_26B2200D8 != -1) {
    swift_once();
  }
  uint64_t v28 = __swift_project_value_buffer(v5, (uint64_t)qword_26B21FF38);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v28, v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FE68);
  swift_allocObject();
  *(void *)&v13[v27] = sub_251B81680((uint64_t)"SnapshotBatchManager", 20, 2, (uint64_t)v8);
  uint64_t v29 = OBJC_IVAR____TtC13HomeDataModel9DataModel_matterSnapshotBatchManager;
  if (qword_26B21FD70 != -1) {
    swift_once();
  }
  uint64_t v30 = __swift_project_value_buffer(v3, (uint64_t)qword_26B21FD10);
  uint64_t v31 = (uint64_t)v68;
  v67[2](v68, v30, v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FE70);
  swift_allocObject();
  *(void *)&v13[v29] = sub_251B81344((uint64_t)"MatterSnapshotBatchManager", 26, 2, v31);
  uint64_t v32 = OBJC_IVAR____TtC13HomeDataModel9DataModel_incomingHomeKitMessagesQueue;
  id v33 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A50]), sel_init);
  uint64_t v34 = (void *)sub_251F356C0();
  objc_msgSend(v33, sel_setName_, v34);

  objc_msgSend(v33, sel_setMaxConcurrentOperationCount_, 1);
  *(void *)&v13[v32] = v33;
  sub_251F34F40();
  swift_beginAccess();
  if (qword_26B21F248)
  {
    uint64_t v35 = (char *)(id)qword_26B21F248;
    objc_msgSend(v35, sel_mutableCopy);
    sub_251F36240();
    swift_unknownObjectRelease();
    sub_251A1A568(0, (unint64_t *)&unk_269BA04F0);
    swift_dynamicCast();
    uint64_t v36 = v72;
    [v72 setDelegateQueue:*(void *)&v13[v32]];
    id v37 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0E3C0]), sel_initWithConfiguration_, v36);
    uint64_t v38 = v66;
    swift_beginAccess();
    uint64_t v39 = *v38;
    *uint64_t v38 = v37;

    if (qword_26B21F2C0 != -1) {
      swift_once();
    }
    uint64_t v40 = sub_251F350A0();
    __swift_project_value_buffer(v40, (uint64_t)qword_26B21F290);
    uint64_t v41 = v13;
    uint64_t v42 = sub_251F35080();
    os_log_type_t v43 = sub_251F35FD0();
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v67 = (void (**)(char *, uint64_t, uint64_t))v36;
      uint64_t v68 = v35;
      uint64_t v44 = (uint8_t *)swift_slowAlloc();
      uint64_t v45 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v44 = 138412290;
      uint64_t v46 = *v38;
      if (*v38)
      {
        unint64_t v71 = *v38;
        id v47 = v46;
      }
      else
      {
        unint64_t v71 = 0;
      }
      sub_251F361D0();
      *uint64_t v45 = v46;

      _os_log_impl(&dword_2519F3000, v42, v43, "self.homeManager is %@", v44, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v45, -1, -1);
      MEMORY[0x2533AC760](v44, -1, -1);
      uint64_t v48 = v67;
      uint64_t v41 = v68;
    }
    else
    {

      uint64_t v48 = v42;
      uint64_t v42 = v36;
    }
  }
  uint64_t v49 = sub_251F35CD0();
  uint64_t v50 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56);
  uint64_t v51 = (uint64_t)v69;
  v50(v69, 1, 1, v49);
  sub_251F35C80();
  uint64_t v52 = sub_251F35C70();
  uint64_t v53 = swift_allocObject();
  uint64_t v54 = MEMORY[0x263F8F500];
  *(void *)(v53 + 16) = v52;
  *(void *)(v53 + 24) = v54;
  *(void *)&v13[OBJC_IVAR____TtC13HomeDataModel9DataModel_initialCharacteristicFetchTask] = sub_251ACBB48(v51, (uint64_t)&unk_269B9EE48, v53);

  uint64_t v55 = (objc_class *)type metadata accessor for DataModel();
  v70.receiver = v13;
  v70.super_class = v55;
  uint64_t v56 = (char *)objc_msgSendSuper2(&v70, sel_init);
  swift_beginAccess();
  if (qword_26B21F258 != 3)
  {
    if (qword_26B21F248
      && (uint64_t v57 = (void **)&v56[OBJC_IVAR____TtC13HomeDataModel9DataModel_homeManager],
          swift_beginAccess(),
          (uint64_t v58 = *v57) != 0))
    {
      objc_msgSend(v58, sel_setDelegate_, v56);
    }
    else
    {
      unint64_t v59 = v56;
    }
    sub_251C18AAC();
    sub_251C18CB8();
    uint64_t v60 = (uint64_t)v69;
    v50(v69, 1, 1, v49);
    uint64_t v61 = v56;
    uint64_t v62 = sub_251F35C70();
    uint64_t v63 = (void *)swift_allocObject();
    v63[2] = v62;
    v63[3] = v54;
    v63[4] = v61;
    sub_251ACBB48(v60, (uint64_t)&unk_269B9EE50, (uint64_t)v63);
    swift_release();
  }
  return v56;
}

uint64_t sub_251B7B008(uint64_t a1)
{
  v1[2] = a1;
  v1[3] = sub_251F35C80();
  long long v1[4] = sub_251F35C70();
  uint64_t v3 = sub_251F35C00();
  v1[5] = v3;
  v1[6] = v2;
  return MEMORY[0x270FA2498](sub_251B7B0A4, v3, v2);
}

uint64_t sub_251B7B0A4()
{
  uint64_t v1 = sub_251F35C70();
  v0[7] = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[8] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_251B7B18C;
  uint64_t v3 = v0[2];
  uint64_t v4 = MEMORY[0x263F8EE60] + 8;
  uint64_t v5 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA2318](v3, v1, v5, 0x292874696E69, 0xE600000000000000, sub_251B7B330, 0, v4);
}

uint64_t sub_251B7B18C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 48);
  uint64_t v3 = *(void *)(v1 + 40);
  return MEMORY[0x270FA2498](sub_251B7B2D0, v3, v2);
}

uint64_t sub_251B7B2D0()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251B7B330(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F5F0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_26B21FF50;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F4F8);
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v4, a1, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v4, 0, 1, v6);
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x270FA5388](KeyPath);
  v10[-2] = v5;
  v10[-1] = v4;
  v10[1] = v5;
  sub_251AD2C08();
  sub_251F34F00();
  swift_release();
  return sub_251A1B064((uint64_t)v4, &qword_26B21F5F0);
}

id DataModel.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DataModel();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_251B7B6F0()
{
  id result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DataModel()), sel_init);
  qword_26B21FF50 = (uint64_t)result;
  return result;
}

id static DataModel.shared.getter()
{
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_26B21FF50;
  return v0;
}

uint64_t DataModel.loadUpHomeSnapshots(homeManager:coverages:)(uint64_t a1, uint64_t a2)
{
  v3[20] = a2;
  v3[21] = v2;
  v3[19] = a1;
  v3[22] = type metadata accessor for StateSnapshot.UpdateType(0);
  v3[23] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for StateSnapshot(0);
  v3[24] = v4;
  v3[25] = *(void *)(v4 - 8);
  v3[26] = swift_task_alloc();
  v3[27] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC88);
  v3[28] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2203A0);
  v3[29] = swift_task_alloc();
  v3[30] = swift_task_alloc();
  v3[31] = swift_task_alloc();
  v3[32] = swift_task_alloc();
  sub_251F35C80();
  v3[33] = sub_251F35C70();
  uint64_t v6 = sub_251F35C00();
  v3[34] = v6;
  v3[35] = v5;
  return MEMORY[0x270FA2498](sub_251B7B990, v6, v5);
}

void sub_251B7B990()
{
  id v1 = objc_msgSend(*(id *)(v0 + 152), sel_currentHome);
  if (!v1)
  {
    id v3 = objc_msgSend(*(id *)(v0 + 168), sel_sortedHomes);
    sub_251A1A568(0, (unint64_t *)&qword_26B21F2D0);
    unint64_t v4 = sub_251F35AC0();

    if (v4 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_251F366C0();
      if (v5)
      {
LABEL_5:
        uint64_t v6 = 0;
        while (1)
        {
          id v7 = (v4 & 0xC000000000000001) != 0
             ? (id)MEMORY[0x2533AB3A0](v6, v4)
             : *(id *)(v4 + 8 * v6 + 32);
          uint64_t v2 = v7;
          uint64_t v8 = v6 + 1;
          if (__OFADD__(v6, 1)) {
            break;
          }
          if (objc_msgSend(v7, sel_isPrimary))
          {
            swift_bridgeObjectRelease_n();
            goto LABEL_20;
          }

          ++v6;
          if (v8 == v5) {
            goto LABEL_12;
          }
        }
        __break(1u);
        goto LABEL_62;
      }
    }
    else
    {
      uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v5) {
        goto LABEL_5;
      }
    }
LABEL_12:
    uint64_t v9 = *(void **)(v0 + 168);
    swift_bridgeObjectRelease_n();
    id v10 = objc_msgSend(v9, sel_sortedHomes);
    unint64_t v11 = sub_251F35AC0();

    if (v11 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v2 = (void *)sub_251F366C0();
      swift_bridgeObjectRelease();
      if (v2) {
        goto LABEL_14;
      }
    }
    else
    {
      uint64_t v2 = *(void **)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v2)
      {
LABEL_14:
        if ((v11 & 0xC000000000000001) != 0)
        {
          id v12 = (id)MEMORY[0x2533AB3A0](0, v11);
        }
        else
        {
          if (!*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            return;
          }
          id v12 = *(id *)(v11 + 32);
        }
        uint64_t v2 = v12;
      }
    }
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  uint64_t v2 = v1;
LABEL_20:
  uint64_t v13 = *(void *)(v0 + 168);
  swift_getKeyPath();
  uint64_t v14 = swift_task_alloc();
  *(void *)(v14 + 16) = v13;
  *(void *)(v14 + 24) = v2;
  *(void *)(v0 + 288) = OBJC_IVAR____TtC13HomeDataModel9DataModel___observationRegistrar;
  *(void *)(v0 + 120) = v13;
  *(void *)(v0 + 296) = sub_251AD2C08();
  sub_251F34F00();
  swift_release();

  swift_task_dealloc();
  swift_getKeyPath();
  *(void *)(v0 + 136) = v13;
  sub_251F34F10();
  swift_release();
  uint64_t v15 = *(void **)(v13 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentHome);
  if (v15)
  {
    swift_beginAccess();
    if (qword_26B21F258 != 4)
    {
      id v16 = v15;
      DataModel.fetchAllCharacteristics(for:)((HMHome)v16);
    }
  }
  id v17 = objc_msgSend(*(id *)(v0 + 168), sel_sortedHomes);
  sub_251A1A568(0, (unint64_t *)&qword_26B21F2D0);
  unint64_t v18 = sub_251F35AC0();
  *(void *)(v0 + 304) = v18;

  if (!(v18 >> 62))
  {
    uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
    *(void *)(v0 + 312) = v19;
    if (v19) {
      goto LABEL_25;
    }
    goto LABEL_63;
  }
LABEL_62:
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_251F366C0();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 312) = v19;
  if (v19)
  {
LABEL_25:
    *(void *)(v0 + 320) = OBJC_IVAR____TtC13HomeDataModel9DataModel__homesToStateSnapshots;
    if (v19 < 1)
    {
      __break(1u);
      goto LABEL_67;
    }
    swift_beginAccess();
    *(void *)(v0 + 328) = 0;
    uint64_t v20 = *(void *)(v0 + 304);
    if ((v20 & 0xC000000000000001) != 0) {
      id v21 = (id)MEMORY[0x2533AB3A0](0);
    }
    else {
      id v21 = *(id *)(v20 + 32);
    }
    uint64_t v22 = v21;
    *(void *)(v0 + 336) = v21;
    uint64_t v23 = *(void *)(v0 + 320);
    uint64_t v24 = *(void *)(v0 + 168);
    objc_msgSend(v21, sel_setDelegate_, v24);
    DataModel.registerForAllRelevantAccessories(_:)((HMHome)v22);
    sub_251ECED84(v22);
    id v81 = v22;
    id v25 = objc_msgSend(v22, sel_uniqueIdentifier);
    uint64_t v82 = sub_251F34DA0();
    uint64_t v26 = *(void *)(v82 - 8);
    uint64_t v27 = swift_task_alloc();
    sub_251F34D80();

    swift_getKeyPath();
    *(void *)(v0 + 128) = v24;
    sub_251F34F10();
    swift_release();
    uint64_t v28 = *(void *)(v24 + v23);
    if (*(void *)(v28 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v29 = sub_2519FE584(v27);
      uint64_t v30 = *(void *)(v0 + 256);
      uint64_t v32 = *(void *)(v0 + 192);
      uint64_t v31 = *(void *)(v0 + 200);
      if (v33)
      {
        sub_251B75C78(*(void *)(v28 + 56) + *(void *)(v31 + 72) * v29, *(void *)(v0 + 256));
        uint64_t v34 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 56);
        v34(v30, 0, 1, v32);
      }
      else
      {
        uint64_t v34 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 56);
        v34(*(void *)(v0 + 256), 1, 1, v32);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v34 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 200) + 56);
      v34(*(void *)(v0 + 256), 1, 1, *(void *)(v0 + 192));
    }
    uint64_t v35 = *(void *)(v0 + 256);
    uint64_t v36 = *(void *)(v0 + 192);
    uint64_t v37 = *(void *)(v0 + 200);
    uint64_t v38 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
    v38(v27, v82);
    uint64_t v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48);
    LODWORD(v36) = v39(v35, 1, v36);
    sub_251A1B064(v35, &qword_26B2203A0);
    swift_task_dealloc();
    if (v36 == 1)
    {
LABEL_36:
      if (qword_26B21E6F8 == -1)
      {
LABEL_37:
        uint64_t v40 = *(void *)(v0 + 160);
        **(void **)(v0 + 184) = v81;
        swift_storeEnumTagMultiPayload();
        id v41 = v81;
        uint64_t v42 = (void *)swift_task_alloc();
        *(void *)(v0 + 344) = v42;
        *uint64_t v42 = v0;
        v42[1] = sub_251B7C588;
        uint64_t v43 = *(void *)(v0 + 208);
        uint64_t v44 = *(void *)(v0 + 184);
        uint64_t v45 = *(void *)(v0 + 152);
        sub_251F2AD24(v43, v44, v45, (uint64_t)v41, v40);
        return;
      }
LABEL_67:
      swift_once();
      goto LABEL_37;
    }
    uint64_t v78 = v38;
    uint64_t v79 = v34;
    uint64_t v80 = v39;
    uint64_t v46 = *(void *)(v0 + 320);
    uint64_t v47 = *(void *)(v0 + 168);
    id v48 = objc_msgSend(v81, sel_uniqueIdentifier);
    uint64_t v49 = swift_task_alloc();
    sub_251F34D80();

    swift_getKeyPath();
    *(void *)(v0 + 144) = v47;
    sub_251F34F10();
    swift_release();
    uint64_t v50 = *(void *)(v47 + v46);
    if (*(void *)(v50 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v51 = sub_2519FE584(v49);
      uint64_t v52 = *(void *)(v0 + 248);
      uint64_t v53 = *(void *)(v0 + 192);
      uint64_t v54 = v79;
      if (v55)
      {
        sub_251B75C78(*(void *)(v50 + 56) + *(void *)(*(void *)(v0 + 200) + 72) * v51, *(void *)(v0 + 248));
        v79(v52, 0, 1, v53);
      }
      else
      {
        v79(*(void *)(v0 + 248), 1, 1, *(void *)(v0 + 192));
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v54 = v79;
      v79(*(void *)(v0 + 248), 1, 1, *(void *)(v0 + 192));
    }
    v78(v49, v82);
    if (qword_26B220320 != -1) {
      swift_once();
    }
    uint64_t v57 = *(void *)(v0 + 240);
    uint64_t v56 = *(void *)(v0 + 248);
    uint64_t v58 = *(void *)(v0 + 216);
    uint64_t v59 = *(void *)(v0 + 224);
    uint64_t v60 = *(void *)(v0 + 192);
    uint64_t v61 = __swift_project_value_buffer(v60, (uint64_t)qword_26B21FF70);
    sub_251B75C78(v61, v57);
    v54(v57, 0, 1, v60);
    uint64_t v62 = v59 + *(int *)(v58 + 48);
    sub_251A1B128(v56, v59, &qword_26B2203A0);
    sub_251A1B128(v57, v62, &qword_26B2203A0);
    if (v80(v59, 1, v60) == 1)
    {
      uint64_t v63 = *(void *)(v0 + 248);
      uint64_t v64 = *(void *)(v0 + 192);
      sub_251A1B064(*(void *)(v0 + 240), &qword_26B2203A0);
      sub_251A1B064(v63, &qword_26B2203A0);
      if (v80(v62, 1, v64) == 1)
      {
        sub_251A1B064(*(void *)(v0 + 224), &qword_26B2203A0);
        swift_task_dealloc();
        goto LABEL_36;
      }
    }
    else
    {
      uint64_t v65 = *(void *)(v0 + 192);
      sub_251A1B128(*(void *)(v0 + 224), *(void *)(v0 + 232), &qword_26B2203A0);
      unsigned int v66 = v80(v62, 1, v65);
      uint64_t v68 = *(void *)(v0 + 240);
      uint64_t v67 = *(void *)(v0 + 248);
      int v69 = *(uint64_t **)(v0 + 232);
      if (v66 != 1)
      {
        uint64_t v74 = *(void *)(v0 + 224);
        uint64_t v75 = *(uint64_t **)(v0 + 208);
        sub_251ACFFCC(v62, (uint64_t)v75);
        char v76 = _s13HomeDataModel13StateSnapshotV2eeoiySbAC_ACtFZ_0(v69, v75);
        sub_251B81B80((uint64_t)v75, type metadata accessor for StateSnapshot);
        sub_251A1B064(v68, &qword_26B2203A0);
        sub_251A1B064(v67, &qword_26B2203A0);
        sub_251B81B80((uint64_t)v69, type metadata accessor for StateSnapshot);
        sub_251A1B064(v74, &qword_26B2203A0);
        swift_task_dealloc();
        if (v76) {
          goto LABEL_36;
        }
        goto LABEL_54;
      }
      sub_251A1B064(*(void *)(v0 + 240), &qword_26B2203A0);
      sub_251A1B064(v67, &qword_26B2203A0);
      sub_251B81B80((uint64_t)v69, type metadata accessor for StateSnapshot);
    }
    sub_251A1B064(*(void *)(v0 + 224), &qword_26B21EC88);
    swift_task_dealloc();
LABEL_54:
    if (qword_26B21E388 != -1) {
      swift_once();
    }
    objc_super v70 = *(void **)(v0 + 336);
    *(void *)(v0 + 96) = v70;
    *(void *)(v0 + 104) = 0;
    *(unsigned char *)(v0 + 112) = 0;
    id v71 = v70;
    uint64_t v72 = (void *)swift_task_alloc();
    *(void *)(v0 + 352) = v72;
    *uint64_t v72 = v0;
    v72[1] = sub_251B7C80C;
    uint64_t v73 = *(void *)(v0 + 336);
    sub_251B5A374(v0 + 16, v0 + 96, v73);
    return;
  }
LABEL_63:
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v77 = *(void (**)(void))(v0 + 8);
  v77();
}

uint64_t sub_251B7C588()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 208);
  uint64_t v3 = *(void *)(*v0 + 184);
  swift_task_dealloc();
  sub_251B81B80(v3, type metadata accessor for StateSnapshot.UpdateType);
  sub_251B81B80(v2, type metadata accessor for StateSnapshot);
  uint64_t v4 = *(void *)(v1 + 280);
  uint64_t v5 = *(void *)(v1 + 272);
  return MEMORY[0x270FA2498](sub_251B7C710, v5, v4);
}

uint64_t sub_251B7C710()
{
  if (qword_26B21E388 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void **)(v0 + 336);
  *(void *)(v0 + 96) = v1;
  *(void *)(v0 + 104) = 0;
  *(unsigned char *)(v0 + 112) = 0;
  id v2 = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 352) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_251B7C80C;
  uint64_t v4 = *(void *)(v0 + 336);
  return sub_251B5A374(v0 + 16, v0 + 96, v4);
}

uint64_t sub_251B7C80C()
{
  uint64_t v1 = *v0;
  id v2 = *(void **)(*v0 + 336);
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v1 + 280);
  uint64_t v4 = *(void *)(v1 + 272);
  return MEMORY[0x270FA2498](sub_251B7C99C, v4, v3);
}

uint64_t sub_251B7C99C()
{
  uint64_t v1 = *(void *)(v0 + 328);
  uint64_t v2 = *(void *)(v0 + 312);

  if (v1 + 1 == v2)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
  uint64_t v5 = *(void *)(v0 + 328) + 1;
  *(void *)(v0 + 328) = v5;
  uint64_t v6 = *(void *)(v0 + 304);
  if ((v6 & 0xC000000000000001) != 0) {
    id v7 = (id)MEMORY[0x2533AB3A0]();
  }
  else {
    id v7 = *(id *)(v6 + 8 * v5 + 32);
  }
  uint64_t v8 = v7;
  *(void *)(v0 + 336) = v7;
  uint64_t v9 = *(void *)(v0 + 320);
  uint64_t v10 = *(void *)(v0 + 168);
  objc_msgSend(v7, sel_setDelegate_, v10);
  DataModel.registerForAllRelevantAccessories(_:)((HMHome)v8);
  sub_251ECED84(v8);
  id v66 = v8;
  id v11 = objc_msgSend(v8, sel_uniqueIdentifier);
  uint64_t v67 = sub_251F34DA0();
  uint64_t v12 = *(void *)(v67 - 8);
  uint64_t v13 = swift_task_alloc();
  sub_251F34D80();

  swift_getKeyPath();
  *(void *)(v0 + 128) = v10;
  sub_251F34F10();
  swift_release();
  uint64_t v14 = *(void *)(v10 + v9);
  if (*(void *)(v14 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v15 = sub_2519FE584(v13);
    uint64_t v16 = *(void *)(v0 + 256);
    uint64_t v18 = *(void *)(v0 + 192);
    uint64_t v17 = *(void *)(v0 + 200);
    if (v19)
    {
      sub_251B75C78(*(void *)(v14 + 56) + *(void *)(v17 + 72) * v15, *(void *)(v0 + 256));
      uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56);
      v20(v16, 0, 1, v18);
    }
    else
    {
      uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56);
      v20(*(void *)(v0 + 256), 1, 1, v18);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 200) + 56);
    v20(*(void *)(v0 + 256), 1, 1, *(void *)(v0 + 192));
  }
  uint64_t v21 = *(void *)(v0 + 256);
  uint64_t v22 = *(void *)(v0 + 192);
  uint64_t v23 = *(void *)(v0 + 200);
  uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v24(v13, v67);
  id v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
  LODWORD(v22) = v25(v21, 1, v22);
  sub_251A1B064(v21, &qword_26B2203A0);
  swift_task_dealloc();
  if (v22 == 1) {
    goto LABEL_35;
  }
  uint64_t v63 = v24;
  uint64_t v64 = v20;
  uint64_t v65 = v25;
  uint64_t v26 = *(void *)(v0 + 320);
  uint64_t v27 = *(void *)(v0 + 168);
  id v28 = objc_msgSend(v66, sel_uniqueIdentifier);
  uint64_t v29 = swift_task_alloc();
  sub_251F34D80();

  swift_getKeyPath();
  *(void *)(v0 + 144) = v27;
  sub_251F34F10();
  swift_release();
  uint64_t v30 = *(void *)(v27 + v26);
  if (*(void *)(v30 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v31 = sub_2519FE584(v29);
    uint64_t v32 = *(void *)(v0 + 248);
    uint64_t v33 = *(void *)(v0 + 192);
    uint64_t v34 = v64;
    if (v35)
    {
      sub_251B75C78(*(void *)(v30 + 56) + *(void *)(*(void *)(v0 + 200) + 72) * v31, *(void *)(v0 + 248));
      v64(v32, 0, 1, v33);
    }
    else
    {
      v64(*(void *)(v0 + 248), 1, 1, *(void *)(v0 + 192));
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v34 = v64;
    v64(*(void *)(v0 + 248), 1, 1, *(void *)(v0 + 192));
  }
  v63(v29, v67);
  if (qword_26B220320 != -1) {
    swift_once();
  }
  uint64_t v37 = *(void *)(v0 + 240);
  uint64_t v36 = *(void *)(v0 + 248);
  uint64_t v38 = *(void *)(v0 + 216);
  uint64_t v39 = *(void *)(v0 + 224);
  uint64_t v40 = *(void *)(v0 + 192);
  uint64_t v41 = __swift_project_value_buffer(v40, (uint64_t)qword_26B21FF70);
  sub_251B75C78(v41, v37);
  v34(v37, 0, 1, v40);
  uint64_t v42 = v39 + *(int *)(v38 + 48);
  sub_251A1B128(v36, v39, &qword_26B2203A0);
  sub_251A1B128(v37, v42, &qword_26B2203A0);
  if (v65(v39, 1, v40) == 1)
  {
    uint64_t v43 = *(void *)(v0 + 248);
    uint64_t v44 = *(void *)(v0 + 192);
    sub_251A1B064(*(void *)(v0 + 240), &qword_26B2203A0);
    sub_251A1B064(v43, &qword_26B2203A0);
    if (v65(v42, 1, v44) == 1)
    {
      sub_251A1B064(*(void *)(v0 + 224), &qword_26B2203A0);
      swift_task_dealloc();
LABEL_35:
      if (qword_26B21E6F8 != -1) {
        swift_once();
      }
      uint64_t v57 = *(void *)(v0 + 160);
      **(void **)(v0 + 184) = v66;
      swift_storeEnumTagMultiPayload();
      id v58 = v66;
      uint64_t v59 = (void *)swift_task_alloc();
      *(void *)(v0 + 344) = v59;
      *uint64_t v59 = v0;
      v59[1] = sub_251B7C588;
      uint64_t v60 = *(void *)(v0 + 208);
      uint64_t v61 = *(void *)(v0 + 184);
      uint64_t v62 = *(void *)(v0 + 152);
      return sub_251F2AD24(v60, v61, v62, (uint64_t)v58, v57);
    }
    goto LABEL_28;
  }
  uint64_t v45 = *(void *)(v0 + 192);
  sub_251A1B128(*(void *)(v0 + 224), *(void *)(v0 + 232), &qword_26B2203A0);
  unsigned int v46 = v65(v42, 1, v45);
  uint64_t v48 = *(void *)(v0 + 240);
  uint64_t v47 = *(void *)(v0 + 248);
  uint64_t v49 = *(uint64_t **)(v0 + 232);
  if (v46 == 1)
  {
    sub_251A1B064(*(void *)(v0 + 240), &qword_26B2203A0);
    sub_251A1B064(v47, &qword_26B2203A0);
    sub_251B81B80((uint64_t)v49, type metadata accessor for StateSnapshot);
LABEL_28:
    sub_251A1B064(*(void *)(v0 + 224), &qword_26B21EC88);
    swift_task_dealloc();
    goto LABEL_29;
  }
  uint64_t v54 = *(void *)(v0 + 224);
  char v55 = *(uint64_t **)(v0 + 208);
  sub_251ACFFCC(v42, (uint64_t)v55);
  char v56 = _s13HomeDataModel13StateSnapshotV2eeoiySbAC_ACtFZ_0(v49, v55);
  sub_251B81B80((uint64_t)v55, type metadata accessor for StateSnapshot);
  sub_251A1B064(v48, &qword_26B2203A0);
  sub_251A1B064(v47, &qword_26B2203A0);
  sub_251B81B80((uint64_t)v49, type metadata accessor for StateSnapshot);
  sub_251A1B064(v54, &qword_26B2203A0);
  swift_task_dealloc();
  if (v56) {
    goto LABEL_35;
  }
LABEL_29:
  if (qword_26B21E388 != -1) {
    swift_once();
  }
  uint64_t v50 = *(void **)(v0 + 336);
  *(void *)(v0 + 96) = v50;
  *(void *)(v0 + 104) = 0;
  *(unsigned char *)(v0 + 112) = 0;
  id v51 = v50;
  uint64_t v52 = (void *)swift_task_alloc();
  *(void *)(v0 + 352) = v52;
  *uint64_t v52 = v0;
  v52[1] = sub_251B7C80C;
  uint64_t v53 = *(void *)(v0 + 336);
  return sub_251B5A374(v0 + 16, v0 + 96, v53);
}

Swift::Void __swiftcall DataModel.fetchAllCharacteristics(for:)(HMHome a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F4F8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F5F0);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)v24 - v11;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  MEMORY[0x270FA5388](v13 - 8);
  unint64_t v15 = (char *)v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_251F35CD0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  sub_251F35C80();
  id v17 = v1;
  uint64_t v18 = a1.super.isa;
  uint64_t v19 = sub_251F35C70();
  uint64_t v20 = (void *)swift_allocObject();
  uint64_t v21 = MEMORY[0x263F8F500];
  v20[2] = v19;
  void v20[3] = v21;
  v20[4] = v17;
  v20[5] = v18;
  sub_251ACBB48((uint64_t)v15, (uint64_t)&unk_269B9EE68, (uint64_t)v20);
  swift_release();
  swift_getKeyPath();
  v24[3] = v17;
  sub_251AD2C08();
  sub_251F34F10();
  swift_release();
  uint64_t v22 = (uint64_t)v17 + OBJC_IVAR____TtC13HomeDataModel9DataModel__initialCharacteristicFetchContinuation;
  swift_beginAccess();
  sub_251A1B128(v22, (uint64_t)v12, &qword_26B21F5F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v12, 1, v3))
  {
    sub_251A1B064((uint64_t)v12, &qword_26B21F5F0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v12, v3);
    sub_251A1B064((uint64_t)v12, &qword_26B21F5F0);
    sub_251F35C20();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v10, 1, 1, v3);
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x270FA5388](KeyPath);
  v24[-2] = v17;
  v24[-1] = v10;
  void v24[2] = v17;
  sub_251F34F00();
  swift_release();
  sub_251A1B064((uint64_t)v10, &qword_26B21F5F0);
}

uint64_t sub_251B7D5E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2203A0);
  uint64_t v7 = swift_task_alloc();
  v5[6] = v7;
  v5[7] = sub_251F35C80();
  v5[8] = sub_251F35C70();
  uint64_t v8 = (void *)swift_task_alloc();
  v5[9] = v8;
  *uint64_t v8 = v5;
  v8[1] = sub_251B7D6E0;
  return DataModel.fetchAllCharacteristicsValues(for:)(v7, a5);
}

uint64_t sub_251B7D6E0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_251F35C00();
    uint64_t v5 = v4;
    uint64_t v6 = sub_251B7DA50;
  }
  else
  {
    sub_251A1B064(*(void *)(v2 + 48), &qword_26B2203A0);
    uint64_t v3 = sub_251F35C00();
    uint64_t v5 = v7;
    uint64_t v6 = sub_251B7D870;
  }
  return MEMORY[0x270FA2498](v6, v3, v5);
}

uint64_t sub_251B7D870()
{
  swift_release();
  if (qword_26B21F2C0 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[5];
  uint64_t v2 = sub_251F350A0();
  __swift_project_value_buffer(v2, (uint64_t)qword_26B21F290);
  id v3 = v1;
  uint64_t v4 = sub_251F35080();
  os_log_type_t v5 = sub_251F35FD0();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = (void *)v0[5];
  if (v6)
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 138412290;
    v0[4] = v7;
    id v9 = v7;
    sub_251F361D0();
    void *v12 = v7;

    _os_log_impl(&dword_2519F3000, v4, v5, "Fetch all characteristics finished for home %@", v8, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v12, -1, -1);
    MEMORY[0x2533AC760](v8, -1, -1);
  }
  else
  {
  }
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_251B7DA50()
{
  swift_release();
  if (qword_26B21F2C0 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[10];
  uint64_t v2 = (void *)v0[5];
  uint64_t v3 = sub_251F350A0();
  __swift_project_value_buffer(v3, (uint64_t)qword_26B21F290);
  id v4 = v2;
  id v5 = v1;
  id v6 = v4;
  id v7 = v1;
  uint64_t v8 = sub_251F35080();
  os_log_type_t v9 = sub_251F35FB0();
  BOOL v10 = os_log_type_enabled(v8, v9);
  uint64_t v11 = (void *)v0[10];
  uint64_t v12 = (void *)v0[5];
  if (v10)
  {
    log = v8;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v14 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 138412546;
    id v15 = v11;
    uint64_t v16 = _swift_stdlib_bridgeErrorToNSError();
    v0[2] = v16;
    sub_251F361D0();
    *uint64_t v14 = v16;

    *(_WORD *)(v13 + 12) = 2112;
    v0[3] = v12;
    id v17 = v12;
    sub_251F361D0();
    v14[1] = v12;

    _os_log_impl(&dword_2519F3000, log, v9, "Fetch all characteristics finished with %@ for home %@", (uint8_t *)v13, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v14, -1, -1);
    MEMORY[0x2533AC760](v13, -1, -1);
  }
  else
  {
  }
  swift_task_dealloc();
  uint64_t v18 = (uint64_t (*)(void))v0[1];
  return v18();
}

Swift::Void __swiftcall DataModel.fetchAllCharacteristics(for:)(HMAccessory a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  MEMORY[0x270FA5388](v3 - 8);
  id v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_251F35CD0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  sub_251F35C80();
  id v7 = v1;
  uint64_t v8 = a1.super.isa;
  uint64_t v9 = sub_251F35C70();
  BOOL v10 = (void *)swift_allocObject();
  uint64_t v11 = MEMORY[0x263F8F500];
  void v10[2] = v9;
  char v10[3] = v11;
  v10[4] = v7;
  v10[5] = v8;
  sub_251ACBB48((uint64_t)v5, (uint64_t)&unk_269B9EE78, (uint64_t)v10);
  swift_release();
}

uint64_t sub_251B7DDF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2203A0);
  uint64_t v7 = swift_task_alloc();
  v5[6] = v7;
  v5[7] = sub_251F35C80();
  v5[8] = sub_251F35C70();
  uint64_t v8 = (void *)swift_task_alloc();
  v5[9] = v8;
  *uint64_t v8 = v5;
  v8[1] = sub_251B7DEF4;
  return DataModel.fetchAllCharacteristicsValues(for:)(v7, a5);
}

uint64_t sub_251B7DEF4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_251F35C00();
    uint64_t v5 = v4;
    uint64_t v6 = sub_251B7E264;
  }
  else
  {
    sub_251A1B064(*(void *)(v2 + 48), &qword_26B2203A0);
    uint64_t v3 = sub_251F35C00();
    uint64_t v5 = v7;
    uint64_t v6 = sub_251B7E084;
  }
  return MEMORY[0x270FA2498](v6, v3, v5);
}

uint64_t sub_251B7E084()
{
  swift_release();
  if (qword_26B21F2C0 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[5];
  uint64_t v2 = sub_251F350A0();
  __swift_project_value_buffer(v2, (uint64_t)qword_26B21F290);
  id v3 = v1;
  uint64_t v4 = sub_251F35080();
  os_log_type_t v5 = sub_251F35FD0();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = (void *)v0[5];
  if (v6)
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 138412290;
    v0[4] = v7;
    id v9 = v7;
    sub_251F361D0();
    void *v12 = v7;

    _os_log_impl(&dword_2519F3000, v4, v5, "Fetch all characteristics finished for accessory %@", v8, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v12, -1, -1);
    MEMORY[0x2533AC760](v8, -1, -1);
  }
  else
  {
  }
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_251B7E264()
{
  swift_release();
  if (qword_26B21F2C0 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[10];
  uint64_t v2 = (void *)v0[5];
  uint64_t v3 = sub_251F350A0();
  __swift_project_value_buffer(v3, (uint64_t)qword_26B21F290);
  id v4 = v2;
  id v5 = v1;
  id v6 = v4;
  id v7 = v1;
  uint64_t v8 = sub_251F35080();
  os_log_type_t v9 = sub_251F35FB0();
  BOOL v10 = os_log_type_enabled(v8, v9);
  uint64_t v11 = (void *)v0[10];
  uint64_t v12 = (void *)v0[5];
  if (v10)
  {
    log = v8;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v14 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 138412546;
    id v15 = v11;
    uint64_t v16 = _swift_stdlib_bridgeErrorToNSError();
    v0[2] = v16;
    sub_251F361D0();
    *uint64_t v14 = v16;

    *(_WORD *)(v13 + 12) = 2112;
    v0[3] = v12;
    id v17 = v12;
    sub_251F361D0();
    v14[1] = v12;

    _os_log_impl(&dword_2519F3000, log, v9, "Fetch all characteristics finished with %@ for accessory %@", (uint8_t *)v13, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v14, -1, -1);
    MEMORY[0x2533AC760](v13, -1, -1);
  }
  else
  {
  }
  swift_task_dealloc();
  uint64_t v18 = (uint64_t (*)(void))v0[1];
  return v18();
}

void sub_251B7E4DC()
{
  uint64_t v1 = (id *)&v0[OBJC_IVAR____TtC13HomeDataModel9DataModel_homeManager];
  swift_beginAccess();
  if (*v1)
  {
    id v2 = objc_msgSend(*v1, sel_currentHome);
    if (v2)
    {
      uint64_t v3 = v2;
LABEL_25:
      uint64_t KeyPath = swift_getKeyPath();
      MEMORY[0x270FA5388](KeyPath);
      sub_251AD2C08();
      sub_251F34F00();
      swift_release();

      return;
    }
  }
  id v4 = objc_msgSend(v0, sel_sortedHomes);
  sub_251A1A568(0, (unint64_t *)&qword_26B21F2D0);
  unint64_t v5 = sub_251F35AC0();

  if (v5 >> 62) {
    goto LABEL_21;
  }
  uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; uint64_t v6 = sub_251F366C0())
  {
    uint64_t v7 = 4;
    while (1)
    {
      id v8 = (v5 & 0xC000000000000001) != 0 ? (id)MEMORY[0x2533AB3A0](v7 - 4, v5) : *(id *)(v5 + 8 * v7);
      uint64_t v3 = v8;
      uint64_t v9 = v7 - 3;
      if (__OFADD__(v7 - 4, 1)) {
        break;
      }
      if (objc_msgSend(v8, sel_isPrimary))
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_25;
      }

      ++v7;
      if (v9 == v6) {
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_21:
    swift_bridgeObjectRetain();
  }
LABEL_13:
  swift_bridgeObjectRelease_n();
  id v10 = objc_msgSend(v0, sel_sortedHomes);
  unint64_t v11 = sub_251F35AC0();

  if (!(v11 >> 62))
  {
    if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_15;
    }
LABEL_24:
    swift_bridgeObjectRelease();
    uint64_t v3 = 0;
    goto LABEL_25;
  }
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_251F366C0();
  swift_bridgeObjectRelease();
  if (!v13) {
    goto LABEL_24;
  }
LABEL_15:
  if ((v11 & 0xC000000000000001) != 0)
  {
    id v12 = (id)MEMORY[0x2533AB3A0](0, v11);
    goto LABEL_18;
  }
  if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v12 = *(id *)(v11 + 32);
LABEL_18:
    uint64_t v3 = v12;
    swift_bridgeObjectRelease();
    goto LABEL_25;
  }
  __break(1u);
}

uint64_t sub_251B7E7B4()
{
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B220BC0);
  uint64_t v0 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  id v2 = (char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BD0);
  uint64_t v17 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BE0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  id v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_allocate_value_buffer(v8, qword_26B21FF38);
  uint64_t v15 = __swift_project_value_buffer(v6, (uint64_t)qword_26B21FF38);
  __swift_allocate_value_buffer(v3, qword_26B21FF20);
  uint64_t v11 = __swift_project_value_buffer(v3, (uint64_t)qword_26B21FF20);
  type metadata accessor for StateSnapshot.UpdateType(0);
  uint64_t v12 = v16;
  (*(void (**)(char *, void, uint64_t))(v0 + 104))(v2, *MEMORY[0x263F8F580], v16);
  sub_251F35CE0();
  (*(void (**)(char *, uint64_t))(v0 + 8))(v2, v12);
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v15, v10, v6);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v17 + 32))(v11, v5, v3);
}

uint64_t static DataModel.stateSnapshotUpdatesStream.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_251B7ED98(&qword_26B2200D8, &qword_26B220BE0, (uint64_t)qword_26B21FF38, a1);
}

uint64_t static DataModel.updateStateSnapshot.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_251B7ED98(&qword_26B2200D8, &qword_26B220BD0, (uint64_t)qword_26B21FF20, a1);
}

uint64_t sub_251B7EAAC()
{
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FEF8);
  uint64_t v0 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  id v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF00);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF08);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_allocate_value_buffer(v9, qword_26B21FD10);
  uint64_t v15 = __swift_project_value_buffer(v7, (uint64_t)qword_26B21FD10);
  __swift_allocate_value_buffer(v3, qword_26B21FCF8);
  uint64_t v12 = __swift_project_value_buffer(v3, (uint64_t)qword_26B21FCF8);
  uint64_t v13 = v16;
  (*(void (**)(char *, void, uint64_t))(v0 + 104))(v2, *MEMORY[0x263F8F580], v16);
  sub_251F35CE0();
  (*(void (**)(char *, uint64_t))(v0 + 8))(v2, v13);
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v15, v11, v7);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(v12, v6, v3);
}

uint64_t static DataModel.matterSnapshotUpdatesStream.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_251B7ED98(&qword_26B21FD70, &qword_26B21FF08, (uint64_t)qword_26B21FD10, a1);
}

uint64_t static DataModel.updateMatterSnapshot.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_251B7ED98(&qword_26B21FD70, &qword_26B21FF00, (uint64_t)qword_26B21FCF8, a1);
}

uint64_t sub_251B7ED98@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v8 = __swift_project_value_buffer(v7, a3);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);
  return v9(a4, v8, v7);
}

uint64_t DataModel.Errors.hash(into:)()
{
  return sub_251F36CB0();
}

uint64_t static DataModel.Errors.== infix(_:_:)()
{
  return 1;
}

unint64_t sub_251B7EE64()
{
  return 0xD000000000000018;
}

uint64_t sub_251B7EE80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251B82B98(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_251B7EEAC(uint64_t a1)
{
  unint64_t v2 = sub_251B81D8C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251B7EEE8(uint64_t a1)
{
  unint64_t v2 = sub_251B81D8C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251B7EF24(uint64_t a1)
{
  unint64_t v2 = sub_251B81DE0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251B7EF60(uint64_t a1)
{
  unint64_t v2 = sub_251B81DE0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DataModel.Errors.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9EE80);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9EE88);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251B81D8C();
  sub_251F36DA0();
  sub_251B81DE0();
  sub_251F36900();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t DataModel.Errors.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t DataModel.Errors.init(from:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9EEA0);
  uint64_t v16 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9EEA8);
  uint64_t v6 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251B81D8C();
  sub_251F36D90();
  if (!v1)
  {
    uint64_t v9 = v16;
    uint64_t v15 = v6;
    if (*(void *)(sub_251F368E0() + 16) == 1)
    {
      sub_251B81DE0();
      sub_251F36770();
      uint64_t v10 = v15;
      (*(void (**)(char *, uint64_t))(v9 + 8))(v5, v3);
    }
    else
    {
      uint64_t v11 = sub_251F36490();
      swift_allocError();
      uint64_t v13 = v12;
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D440);
      *uint64_t v13 = &type metadata for DataModel.Errors;
      sub_251F36780();
      sub_251F36480();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v11 - 8) + 104))(v13, *MEMORY[0x263F8DCB0], v11);
      swift_willThrow();
      uint64_t v10 = v15;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v17);
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_251B7F498(void *a1)
{
  return DataModel.Errors.init(from:)(a1);
}

uint64_t sub_251B7F4B0(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9EE80);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9EE88);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251B81D8C();
  sub_251F36DA0();
  sub_251B81DE0();
  sub_251F36900();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_251B7F680()
{
  uint64_t v0 = sub_251F350A0();
  __swift_allocate_value_buffer(v0, qword_26B21F290);
  __swift_project_value_buffer(v0, (uint64_t)qword_26B21F290);
  return sub_251F35090();
}

uint64_t static DataModel.modelLogger.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_251B7F8B0(&qword_26B21F2C0, MEMORY[0x263F90268], (uint64_t)qword_26B21F290, a1);
}

uint64_t sub_251B7F73C()
{
  uint64_t v0 = sub_251F350A0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_251F35020();
  __swift_allocate_value_buffer(v4, qword_26B21ED40);
  __swift_project_value_buffer(v4, (uint64_t)qword_26B21ED40);
  if (qword_26B21F2C0 != -1) {
    swift_once();
  }
  uint64_t v5 = __swift_project_value_buffer(v0, (uint64_t)qword_26B21F290);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v5, v0);
  return sub_251F34FF0();
}

uint64_t static DataModel.signposter.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_251B7F8B0(&qword_26B21ED30, MEMORY[0x263F90228], (uint64_t)qword_26B21ED40, a1);
}

uint64_t sub_251B7F8B0@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = a2(0);
  uint64_t v8 = __swift_project_value_buffer(v7, a3);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);
  return v9(a4, v8, v7);
}

uint64_t static DataModel.noDataString.getter()
{
  return 0x9380E29380E2;
}

Swift::Void __swiftcall DataModel.changeObservationOnAllRelevantAccessories(_:enable:)(HMHome _, Swift::Bool enable)
{
  uint64_t v3 = v2;
  id v5 = 0;
  if (enable)
  {
    uint64_t v6 = (id *)&v2[OBJC_IVAR____TtC13HomeDataModel9DataModel_homeManager];
    swift_beginAccess();
    if (*v6) {
      id v5 = objc_msgSend(*v6, sel_createAccessorySettingsDataSource);
    }
    else {
      id v5 = 0;
    }
  }
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x270FA5388](KeyPath);
  sub_251AD2C08();
  sub_251F34F00();
  swift_release();

  swift_getKeyPath();
  sub_251F34F10();
  swift_release();
  uint64_t v8 = (id *)&v3[OBJC_IVAR____TtC13HomeDataModel9DataModel__accessorySettingsDataSource];
  swift_beginAccess();
  if (*v8) {
    objc_msgSend(*v8, sel_setDelegate_, v3);
  }
  id v9 = [(objc_class *)_.super.isa mediaSystems];
  sub_251A1A568(0, (unint64_t *)&qword_26B21EB08);
  unint64_t v10 = sub_251F35AC0();

  Class isa = _.super.isa;
  uint64_t v23 = v3;
  if (v10 >> 62) {
    goto LABEL_22;
  }
  uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v11; uint64_t v11 = sub_251F366C0())
  {
    uint64_t v12 = 4;
    uint64_t v13 = 0;
    if ((v10 & 0xC000000000000001) != 0)
    {
LABEL_10:
      id v14 = (id)MEMORY[0x2533AB3A0](v13, v10);
      goto LABEL_12;
    }
    while (1)
    {
      id v14 = *(id *)(v10 + 8 * v12);
LABEL_12:
      uint64_t v15 = v14;
      uint64_t v16 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        break;
      }
      id v17 = objc_msgSend(v14, sel_mediaSession);
      if (v17)
      {
        uint64_t v18 = v17;
        if (enable) {
          uint64_t v19 = v23;
        }
        else {
          uint64_t v19 = 0;
        }
        objc_msgSend(v18, sel_setDelegate_, v19, isa);
        swift_unknownObjectRelease();
      }
      if (v16 == v11) {
        goto LABEL_23;
      }
      uint64_t v13 = ++v12 - 4;
      if ((v10 & 0xC000000000000001) != 0) {
        goto LABEL_10;
      }
    }
    __break(1u);
LABEL_22:
    swift_bridgeObjectRetain();
  }
LABEL_23:
  swift_bridgeObjectRelease_n();
  id v20 = [(objc_class *)isa accessories];
  sub_251A1A568(0, (unint64_t *)&qword_26B21EAF8);
  uint64_t v21 = sub_251F35AC0();

  DataModel.changeObservationOnAccessories(_:enable:)((Swift::OpaquePointer)v21, enable);
  swift_bridgeObjectRelease();
}

Swift::Void __swiftcall DataModel.registerForAccessories(_:)(Swift::OpaquePointer a1)
{
}

Swift::Void __swiftcall DataModel.changeObservationOnAccessories(_:enable:)(Swift::OpaquePointer _, Swift::Bool enable)
{
  uint64_t v4 = v2;
  if (qword_26B21F2C0 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_251F350A0();
  __swift_project_value_buffer(v7, (uint64_t)qword_26B21F290);
  swift_bridgeObjectRetain_n();
  uint64_t v8 = sub_251F35080();
  os_log_type_t v9 = sub_251F35FD0();
  unint64_t v10 = (unint64_t)_._rawValue >> 62;
  uint64_t v11 = &qword_26B21F258;
  if (!os_log_type_enabled(v8, v9))
  {
    swift_bridgeObjectRelease_n();

    goto LABEL_8;
  }
  uint64_t v3 = swift_slowAlloc();
  *(_DWORD *)uint64_t v3 = 67109888;
  LODWORD(v21) = enable;
  sub_251F361D0();
  *(_WORD *)(v3 + 8) = 2048;
  unint64_t v19 = (unint64_t)_._rawValue >> 62;
  if (v10) {
    goto LABEL_23;
  }
  uint64_t v12 = *(void *)(((unint64_t)_._rawValue & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    swift_bridgeObjectRelease();
    uint64_t v21 = v12;
    sub_251F361D0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v3 + 18) = 2048;
    swift_beginAccess();
    uint64_t v21 = *v11;
    sub_251F361D0();
    *(_WORD *)(v3 + 28) = 1024;
    swift_beginAccess();
    LODWORD(v21) = qword_26B21F248 != 0;
    sub_251F361D0();
    _os_log_impl(&dword_2519F3000, v8, v9, "changeObservationOnAccessories %{BOOL}d for %ld accessories (context: %ld, isTalkingToHomeKitDirectly = %{BOOL}d.", (uint8_t *)v3, 0x22u);
    MEMORY[0x2533AC760](v3, -1, -1);

    unint64_t v10 = v19;
LABEL_8:
    swift_beginAccess();
    if (*v11 == 1)
    {
      uint64_t v13 = sub_251F35080();
      os_log_type_t v14 = sub_251F35FD0();
      uint64_t v11 = (uint64_t *)v14;
      if (os_log_type_enabled(v13, v14))
      {
        uint64_t v8 = swift_slowAlloc();
        LODWORD(v8->isa) = 67109120;
        os_log_type_t v9 = (_BYTE)v8 + 8;
        uint64_t v3 = (uint64_t)&v8->isa + 4;
        swift_beginAccess();
        LODWORD(v20) = qword_26B21F248 != 0;
        sub_251F361D0();
        _os_log_impl(&dword_2519F3000, v13, (os_log_type_t)v11, "changeObservationOnAccessories called but running in Home App. isTalkingToHomeKitDirectly = %{BOOL}d.", (uint8_t *)v8, 8u);
        MEMORY[0x2533AC760](v8, -1, -1);
      }
    }
    if (v10)
    {
      swift_bridgeObjectRetain();
      uint64_t v15 = sub_251F366C0();
      if (!v15) {
        goto LABEL_21;
      }
    }
    else
    {
      uint64_t v15 = *(void *)(((unint64_t)_._rawValue & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v15) {
        goto LABEL_21;
      }
    }
    if (v15 >= 1) {
      break;
    }
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_251F366C0();
    swift_bridgeObjectRelease();
  }
  uint64_t v16 = 0;
  do
  {
    if (((unint64_t)_._rawValue & 0xC000000000000001) != 0) {
      id v17 = (id)MEMORY[0x2533AB3A0](v16, _._rawValue);
    }
    else {
      id v17 = *((id *)_._rawValue + v16 + 4);
    }
    uint64_t v18 = v17;
    ++v16;
    id v20 = v17;
    sub_251B803A0(&v20, enable, v4);
  }
  while (v15 != v16);
LABEL_21:
  swift_bridgeObjectRelease();
}

Swift::Void __swiftcall DataModel.unregisterForAccessories(_:)(Swift::OpaquePointer a1)
{
}

void sub_251B800B4(Swift::OpaquePointer a1, const char *a2, const char *a3, char a4)
{
  swift_beginAccess();
  if (qword_26B21F258 == 3)
  {
    if (qword_26B21F2C0 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_251F350A0();
    __swift_project_value_buffer(v8, (uint64_t)qword_26B21F290);
    os_log_type_t v9 = sub_251F35080();
    os_log_type_t v10 = sub_251F35FD0();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl(&dword_2519F3000, v9, v10, a2, v11, 2u);
      MEMORY[0x2533AC760](v11, -1, -1);
    }
  }
  else
  {
    if (qword_26B21F2C0 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_251F350A0();
    __swift_project_value_buffer(v12, (uint64_t)qword_26B21F290);
    swift_bridgeObjectRetain_n();
    uint64_t v13 = sub_251F35080();
    os_log_type_t v14 = sub_251F35FD0();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      uint64_t v23 = v16;
      *(_DWORD *)uint64_t v15 = 136315138;
      uint64_t v17 = sub_251A1A568(0, (unint64_t *)&qword_26B21EAF8);
      uint64_t v18 = swift_bridgeObjectRetain();
      uint64_t v19 = MEMORY[0x2533AAA10](v18, v17);
      char v20 = a4;
      unint64_t v22 = v21;
      swift_bridgeObjectRelease();
      sub_251A00E84(v19, v22, &v23);
      sub_251F361D0();
      swift_bridgeObjectRelease_n();
      a4 = v20;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2519F3000, v13, v14, a3, v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v16, -1, -1);
      MEMORY[0x2533AC760](v15, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    DataModel.changeObservationOnAccessories(_:enable:)(a1, a4 & 1);
  }
}

void sub_251B803A0(void **a1, char a2, void *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  MEMORY[0x270FA5388](v6 - 8);
  id v28 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *a1;
  if (a2) {
    os_log_type_t v9 = a3;
  }
  else {
    os_log_type_t v9 = 0;
  }
  objc_msgSend(v8, sel_setDelegate_, v9);
  id v10 = objc_msgSend(v8, sel_mediaProfile);
  if (v10)
  {
    uint64_t v11 = v10;
    id v12 = objc_msgSend(v10, sel_mediaSession);

    if (v12)
    {
      objc_msgSend(v12, sel_setDelegate_, v9);
    }
  }
  id v13 = objc_msgSend(v8, sel_lightProfiles);
  sub_251A1A568(0, (unint64_t *)&qword_26B21F150);
  sub_251AA0024();
  uint64_t v14 = sub_251F35E40();

  id v15 = a3;
  sub_251B828B4(v14, a2 & 1, (uint64_t)v15);

  swift_bridgeObjectRelease();
  id v16 = objc_msgSend(v8, sel_mediaProfile);
  if (v16)
  {

    id v17 = objc_msgSend(v8, sel_home);
    if (v17)
    {
      uint64_t v18 = v17;
      swift_beginAccess();
      if (qword_26B21F258 != 4)
      {
        uint64_t v19 = sub_251F35CD0();
        uint64_t v20 = (uint64_t)v28;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v28, 1, 1, v19);
        sub_251F35C80();
        id v21 = v15;
        id v22 = v18;
        id v23 = v8;
        uint64_t v24 = sub_251F35C70();
        id v25 = (void *)swift_allocObject();
        uint64_t v26 = MEMORY[0x263F8F500];
        v25[2] = v24;
        void v25[3] = v26;
        v25[4] = v21;
        v25[5] = v22;
        v25[6] = v23;
        sub_251ACBB48(v20, (uint64_t)&unk_269B9EF08, (uint64_t)v25);
        swift_release();
      }
    }
  }
}

uint64_t sub_251B80660(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[23] = a5;
  v6[24] = a6;
  v6[22] = a4;
  sub_251F35C80();
  v6[25] = sub_251F35C70();
  uint64_t v8 = sub_251F35C00();
  v6[26] = v8;
  v6[27] = v7;
  return MEMORY[0x270FA2498](sub_251B806FC, v8, v7);
}

uint64_t sub_251B806FC()
{
  uint64_t v1 = v0[22];
  swift_getKeyPath();
  v0[18] = v1;
  sub_251AD2C08();
  sub_251F34F10();
  swift_release();
  uint64_t v2 = (void **)(v1 + OBJC_IVAR____TtC13HomeDataModel9DataModel__accessorySettingsDataSource);
  swift_beginAccess();
  uint64_t v3 = *v2;
  v0[28] = *v2;
  if (v3)
  {
    uint64_t v4 = (void *)v0[23];
    id v5 = (void *)v0[24];
    id v19 = v3;
    id v6 = objc_msgSend(v4, sel_uniqueIdentifier);
    uint64_t v7 = sub_251F34DA0();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = swift_task_alloc();
    sub_251F34D80();

    uint64_t v10 = sub_251F34D50();
    v0[29] = v10;
    uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v11(v9, v7);
    swift_task_dealloc();
    id v12 = objc_msgSend(v5, sel_uniqueIdentifier);
    uint64_t v13 = swift_task_alloc();
    sub_251F34D80();

    uint64_t v14 = sub_251F34D50();
    v0[30] = v14;
    v11(v13, v7);
    swift_task_dealloc();
    if (qword_269B9C2D8 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_251F35AA0();
    v0[31] = v15;
    v0[2] = v0;
    v0[3] = sub_251B80A48;
    uint64_t v16 = swift_continuation_init();
    v0[10] = MEMORY[0x263EF8330];
    v0[11] = 0x40000000;
    v0[12] = sub_251A5B804;
    v0[13] = &block_descriptor_96;
    v0[14] = v16;
    objc_msgSend(v19, sel_subscribeToAccessorySettingsWithHomeIdentifier_accessoryIdentifier_keyPaths_options_completionHandler_, v10, v14, v15, 0, v0 + 10);
    return MEMORY[0x270FA23F0](v0 + 2);
  }
  else
  {
    swift_release();
    id v17 = (uint64_t (*)(void))v0[1];
    return v17();
  }
}

uint64_t sub_251B80A48()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 256) = v2;
  uint64_t v3 = *(void *)(v1 + 216);
  uint64_t v4 = *(void *)(v1 + 208);
  if (v2) {
    id v5 = sub_251B80BF8;
  }
  else {
    id v5 = sub_251B80B78;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_251B80B78()
{
  uint64_t v1 = (void *)v0[30];
  uint64_t v2 = (void *)v0[31];
  uint64_t v4 = (void *)v0[28];
  uint64_t v3 = (void *)v0[29];
  swift_release();

  id v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_251B80BF8()
{
  uint64_t v38 = v0;
  uint64_t v1 = (void *)v0[31];
  uint64_t v3 = (void *)v0[29];
  uint64_t v2 = (void *)v0[30];
  uint64_t v4 = (void *)v0[28];
  swift_release();
  swift_willThrow();

  if (qword_26B21F2C0 != -1) {
    swift_once();
  }
  id v5 = (void *)v0[32];
  uint64_t v7 = (void *)v0[23];
  id v6 = (void *)v0[24];
  uint64_t v8 = sub_251F350A0();
  __swift_project_value_buffer(v8, (uint64_t)qword_26B21F290);
  id v9 = v5;
  id v10 = v6;
  id v11 = v7;
  id v12 = v5;
  id v13 = v10;
  id v14 = v11;
  uint64_t v15 = sub_251F35080();
  os_log_type_t v16 = sub_251F35FB0();
  BOOL v17 = os_log_type_enabled(v15, v16);
  uint64_t v18 = (void *)v0[32];
  id v19 = (void *)v0[23];
  uint64_t v20 = (void *)v0[24];
  if (v17)
  {
    os_log_type_t type = v16;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v34 = (void *)swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    v37[0] = v36;
    *(_DWORD *)uint64_t v21 = 136315650;
    id v22 = objc_msgSend(v20, sel_name);
    uint64_t v23 = sub_251F356F0();
    unint64_t v25 = v24;

    v0[19] = sub_251A00E84(v23, v25, v37);
    sub_251F361D0();
    swift_bridgeObjectRelease();

    *(_WORD *)(v21 + 12) = 2080;
    id v26 = objc_msgSend(v19, sel_name);
    uint64_t v27 = sub_251F356F0();
    unint64_t v29 = v28;

    v0[20] = sub_251A00E84(v27, v29, v37);
    sub_251F361D0();
    swift_bridgeObjectRelease();

    *(_WORD *)(v21 + 22) = 2112;
    id v30 = v18;
    uint64_t v31 = _swift_stdlib_bridgeErrorToNSError();
    v0[21] = v31;
    sub_251F361D0();
    *uint64_t v34 = v31;

    _os_log_impl(&dword_2519F3000, v15, type, "Subscribing to accessory settings changes for accessory: %s in home: %s failed due to %@", (uint8_t *)v21, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v34, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v36, -1, -1);
    MEMORY[0x2533AC760](v21, -1, -1);
  }
  else
  {
  }
  uint64_t v32 = (uint64_t (*)(void))v0[1];
  return v32();
}

uint64_t sub_251B80F84()
{
  type metadata accessor for SnapshotModerator();
  uint64_t v0 = (void *)swift_allocObject();
  swift_defaultActor_initialize();
  uint64_t v1 = MEMORY[0x263F8EE78];
  v0[14] = sub_2519F95D0(MEMORY[0x263F8EE78]);
  v0[15] = sub_2519F960C(v1);
  v0[16] = sub_2519F960C(v1);
  uint64_t v2 = (char *)v0 + OBJC_IVAR____TtC13HomeDataModel17SnapshotModerator_lockedToFreezeDriedHome;
  uint64_t v3 = sub_251F34DA0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  qword_26B21E638 = (uint64_t)v0;
  return result;
}

uint64_t static DataModel.snapshotModerator.getter()
{
  return sub_251B8126C(&qword_26B21E6F8);
}

uint64_t sub_251B81060(uint64_t a1)
{
  return sub_251B8114C(a1, (void (*)(void))type metadata accessor for RecommendationsModerator, (uint64_t (*)(void))sub_2519FB470, (uint64_t (*)(uint64_t))sub_2519FB484, &qword_26B21F5D0);
}

uint64_t static DataModel.recommendationsModerator.getter()
{
  return sub_251B8126C(&qword_26B21F500);
}

uint64_t sub_251B810CC(uint64_t a1)
{
  return sub_251B81208(a1, &qword_26B21E448, &qword_26B21E170);
}

uint64_t static DataModel.snapshotPublisher.getter()
{
  return sub_251B8126C(&qword_26B21E380);
}

uint64_t sub_251B81104(uint64_t a1)
{
  return sub_251B8114C(a1, (void (*)(void))type metadata accessor for MatterSnapshotModerator, (uint64_t (*)(void))sub_2519FA57C, (uint64_t (*)(uint64_t))sub_2519FA6D4, &qword_26B21E178);
}

uint64_t sub_251B8114C(uint64_t a1, void (*a2)(void), uint64_t (*a3)(void), uint64_t (*a4)(uint64_t), uint64_t *a5)
{
  a2(0);
  uint64_t v8 = swift_allocObject();
  swift_defaultActor_initialize();
  uint64_t v9 = MEMORY[0x263F8EE78];
  *(void *)(v8 + 112) = a3(MEMORY[0x263F8EE78]);
  uint64_t result = a4(v9);
  *(void *)(v8 + 120) = result;
  *a5 = v8;
  return result;
}

uint64_t static DataModel.matterSnapshotModerator.getter()
{
  return sub_251B8126C(&qword_26B21E388);
}

uint64_t sub_251B811F4(uint64_t a1)
{
  return sub_251B81208(a1, &qword_26B21F288, &qword_26B21F260);
}

uint64_t sub_251B81208(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(a2);
  swift_allocObject();
  uint64_t result = sub_251F350D0();
  *a3 = result;
  return result;
}

uint64_t static DataModel.matterSnapshotPublisher.getter()
{
  return sub_251B8126C(&qword_26B21F270);
}

uint64_t sub_251B8126C(void *a1)
{
  if (*a1 != -1) {
    swift_once();
  }
  return swift_retain();
}

unint64_t static DataModel.AudioAnalysisPath.getter()
{
  return 0xD00000000000001ALL;
}

void sub_251B812D4()
{
  qword_269B9EE38 = (uint64_t)&unk_2702627A0;
}

uint64_t static DataModel.AccessorySettingPaths.getter()
{
  if (qword_269B9C2D8 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_251B81344(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v25 = a4;
  int v24 = a3;
  uint64_t v22 = a1;
  uint64_t v23 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FEF8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (uint64_t *)((char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF00);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  id v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF08);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  os_log_type_t v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_defaultActor_initialize();
  uint64_t v17 = MEMORY[0x263F8EE78];
  *(void *)(v4 + *(void *)(*(void *)v4 + 128)) = MEMORY[0x263F8EE78];
  *(void *)(v4 + *(void *)(*(void *)v4 + 136)) = v17;
  *(unsigned char *)(v4 + *(void *)(*(void *)v4 + 144)) = 0;
  *uint64_t v8 = 1;
  (*(void (**)(void *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F8F570], v5);
  sub_251F35CE0();
  (*(void (**)(void *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v18 = v4 + *(void *)(*(void *)v4 + 104);
  uint64_t v19 = v23;
  *(void *)uint64_t v18 = v22;
  *(void *)(v18 + 8) = v19;
  *(unsigned char *)(v18 + 16) = v24;
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32);
  v20(v4 + *(void *)(*(void *)v4 + 96), v25, v13);
  v20(v4 + *(void *)(*(void *)v4 + 112), (uint64_t)v16, v13);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v4 + *(void *)(*(void *)v4 + 120), v12, v9);
  return v4;
}

uint64_t sub_251B81680(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v25 = a4;
  int v24 = a3;
  uint64_t v22 = a1;
  uint64_t v23 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B220BC0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (uint64_t *)((char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BD0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  id v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BE0);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  os_log_type_t v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_defaultActor_initialize();
  uint64_t v17 = MEMORY[0x263F8EE78];
  *(void *)(v4 + *(void *)(*(void *)v4 + 128)) = MEMORY[0x263F8EE78];
  *(void *)(v4 + *(void *)(*(void *)v4 + 136)) = v17;
  *(unsigned char *)(v4 + *(void *)(*(void *)v4 + 144)) = 0;
  *uint64_t v8 = 1;
  (*(void (**)(void *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F8F570], v5);
  type metadata accessor for StateSnapshot.UpdateType(0);
  sub_251F35CE0();
  (*(void (**)(void *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v18 = v4 + *(void *)(*(void *)v4 + 104);
  uint64_t v19 = v23;
  *(void *)uint64_t v18 = v22;
  *(void *)(v18 + 8) = v19;
  *(unsigned char *)(v18 + 16) = v24;
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32);
  v20(v4 + *(void *)(*(void *)v4 + 96), v25, v13);
  v20(v4 + *(void *)(*(void *)v4 + 112), (uint64_t)v16, v13);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v4 + *(void *)(*(void *)v4 + 120), v12, v9);
  return v4;
}

void sub_251B819C8()
{
  sub_251B7A114(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_251B819E4()
{
  swift_unknownObjectRelease();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_251B81A1C(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_251AB3DD4;
  return sub_251B7B008(a1);
}

uint64_t sub_251B81ACC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_251AB3DD4;
  return sub_251C18EF4(a1, v4, v5, v6);
}

uint64_t sub_251B81B80(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_251B81BE4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_251AB3DD4;
  return sub_251B7D5E0(a1, v4, v5, v7, v6);
}

uint64_t sub_251B81CAC()
{
  return sub_251B7A500(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_251B81CCC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_251AB3DD4;
  return sub_251B7DDF4(a1, v4, v5, v7, v6);
}

unint64_t sub_251B81D8C()
{
  unint64_t result = qword_269B9EE90;
  if (!qword_269B9EE90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9EE90);
  }
  return result;
}

unint64_t sub_251B81DE0()
{
  unint64_t result = qword_269B9EE98;
  if (!qword_269B9EE98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9EE98);
  }
  return result;
}

unint64_t sub_251B81E38()
{
  unint64_t result = qword_269B9EEB0;
  if (!qword_269B9EEB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9EEB0);
  }
  return result;
}

uint64_t sub_251B81EA4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR____TtC13HomeDataModel9DataModel_controllerToMatterSnapshots);
  swift_beginAccess();
  *a2 = *v3;
  return swift_bridgeObjectRetain();
}

id sub_251B81F00@<X0>(void *a1@<X0>, void **a2@<X8>)
{
  uint64_t v3 = (void **)(*a1 + OBJC_IVAR____TtC13HomeDataModel9DataModel_homeManager);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *a2 = *v3;
  return v4;
}

uint64_t sub_251B81F68()
{
  return type metadata accessor for DataModel();
}

void sub_251B81F70()
{
  type metadata accessor for StateSnapshot(319);
  if (v0 <= 0x3F)
  {
    sub_251B825A8();
    if (v1 <= 0x3F)
    {
      sub_251F34F50();
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t method lookup function for DataModel(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for DataModel);
}

uint64_t dispatch thunk of DataModel.currentStateSnapshot.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of DataModel.currentStateSnapshot.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of DataModel.currentStateSnapshot.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of DataModel.homesToStateSnapshots.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x108))();
}

uint64_t dispatch thunk of DataModel.homesToStateSnapshots.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x110))();
}

uint64_t dispatch thunk of DataModel.homesToStateSnapshots.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x118))();
}

uint64_t dispatch thunk of DataModel.currentMatterSnapshot.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x138))();
}

uint64_t dispatch thunk of DataModel.currentMatterSnapshot.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x140))();
}

uint64_t dispatch thunk of DataModel.currentMatterSnapshot.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x148))();
}

uint64_t dispatch thunk of DataModel.controllerToMatterSnapshots.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x150))();
}

uint64_t dispatch thunk of DataModel.controllerToMatterSnapshots.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x158))();
}

uint64_t dispatch thunk of DataModel.controllerToMatterSnapshots.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x160))();
}

uint64_t dispatch thunk of DataModel.homeManager.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x168))();
}

uint64_t dispatch thunk of DataModel.homeManager.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x170))();
}

uint64_t dispatch thunk of DataModel.homeManager.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x178))();
}

uint64_t dispatch thunk of DataModel.accessorySettingsDataSource.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x198))();
}

uint64_t dispatch thunk of DataModel.accessorySettingsDataSource.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x1A0))();
}

uint64_t dispatch thunk of DataModel.accessorySettingsDataSource.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x1A8))();
}

uint64_t dispatch thunk of DataModel.currentHome.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x1C8))();
}

uint64_t dispatch thunk of DataModel.currentHome.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x1D0))();
}

uint64_t dispatch thunk of DataModel.currentHome.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x1D8))();
}

void sub_251B825A8()
{
  if (!qword_26B21F5F8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B21F4F8);
    unint64_t v0 = sub_251F36190();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B21F5F8);
    }
  }
}

ValueMetadata *type metadata accessor for DataModel.Errors()
{
  return &type metadata for DataModel.Errors;
}

unsigned char *_s13HomeDataModel9DataModelC6ErrorsOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x251B826B4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for DataModel.Errors.CodingKeys()
{
  return &type metadata for DataModel.Errors.CodingKeys;
}

ValueMetadata *type metadata accessor for DataModel.Errors.MissingHomeOrHomeManagerCodingKeys()
{
  return &type metadata for DataModel.Errors.MissingHomeOrHomeManagerCodingKeys;
}

unint64_t sub_251B82700()
{
  unint64_t result = qword_269B9EEB8;
  if (!qword_269B9EEB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9EEB8);
  }
  return result;
}

unint64_t sub_251B82758()
{
  unint64_t result = qword_269B9EEC0;
  if (!qword_269B9EEC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9EEC0);
  }
  return result;
}

unint64_t sub_251B827B0()
{
  unint64_t result = qword_269B9EEC8;
  if (!qword_269B9EEC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9EEC8);
  }
  return result;
}

unint64_t sub_251B82808()
{
  unint64_t result = qword_269B9EED0;
  if (!qword_269B9EED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9EED0);
  }
  return result;
}

unint64_t sub_251B82860()
{
  unint64_t result = qword_269B9EED8;
  if (!qword_269B9EED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_269B9EED8);
  }
  return result;
}

void sub_251B828B4(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v5 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_251F362B0();
    sub_251A1A568(0, (unint64_t *)&qword_26B21F150);
    sub_251AA0024();
    sub_251F35E90();
    uint64_t v5 = v22;
    uint64_t v21 = v23;
    uint64_t v6 = v24;
    uint64_t v7 = v25;
    unint64_t v8 = v26;
  }
  else
  {
    uint64_t v9 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v21 = a1 + 56;
    uint64_t v6 = ~v9;
    uint64_t v10 = -v9;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v8 = v11 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v7 = 0;
  }
  int64_t v20 = (unint64_t)(v6 + 64) >> 6;
  if (a2) {
    uint64_t v12 = a3;
  }
  else {
    uint64_t v12 = 0;
  }
  if (v5 < 0) {
    goto LABEL_13;
  }
  while (1)
  {
    if (v8)
    {
      uint64_t v13 = (v8 - 1) & v8;
      unint64_t v14 = __clz(__rbit64(v8)) | (v7 << 6);
      uint64_t v15 = v7;
      goto LABEL_32;
    }
    int64_t v17 = v7 + 1;
    if (__OFADD__(v7, 1)) {
      break;
    }
    if (v17 >= v20) {
      goto LABEL_35;
    }
    unint64_t v18 = *(void *)(v21 + 8 * v17);
    uint64_t v15 = v7 + 1;
    if (!v18)
    {
      uint64_t v15 = v7 + 2;
      if (v7 + 2 >= v20) {
        goto LABEL_35;
      }
      unint64_t v18 = *(void *)(v21 + 8 * v15);
      if (!v18)
      {
        uint64_t v15 = v7 + 3;
        if (v7 + 3 >= v20) {
          goto LABEL_35;
        }
        unint64_t v18 = *(void *)(v21 + 8 * v15);
        if (!v18)
        {
          uint64_t v15 = v7 + 4;
          if (v7 + 4 >= v20) {
            goto LABEL_35;
          }
          unint64_t v18 = *(void *)(v21 + 8 * v15);
          if (!v18)
          {
            uint64_t v15 = v7 + 5;
            if (v7 + 5 >= v20) {
              goto LABEL_35;
            }
            unint64_t v18 = *(void *)(v21 + 8 * v15);
            if (!v18)
            {
              uint64_t v19 = v7 + 6;
              while (v20 != v19)
              {
                unint64_t v18 = *(void *)(v21 + 8 * v19++);
                if (v18)
                {
                  uint64_t v15 = v19 - 1;
                  goto LABEL_31;
                }
              }
LABEL_35:
              sub_251A1E630();
              return;
            }
          }
        }
      }
    }
LABEL_31:
    uint64_t v13 = (v18 - 1) & v18;
    unint64_t v14 = __clz(__rbit64(v18)) + (v15 << 6);
LABEL_32:
    id v16 = *(id *)(*(void *)(v5 + 48) + 8 * v14);
    if (!v16) {
      goto LABEL_35;
    }
    while (1)
    {
      objc_msgSend(v16, sel_setDelegate_, v12);

      uint64_t v7 = v15;
      unint64_t v8 = v13;
      if ((v5 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_13:
      if (sub_251F36340())
      {
        sub_251A1A568(0, (unint64_t *)&qword_26B21F150);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v16 = v27;
        swift_unknownObjectRelease();
        uint64_t v15 = v7;
        uint64_t v13 = v8;
        if (v27) {
          continue;
        }
      }
      goto LABEL_35;
    }
  }
  __break(1u);
}

uint64_t sub_251B82B98(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000018 && a2 == 0x8000000251F6B160)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_251F36B10();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_251B82C24(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_251AB3A34;
  return sub_251B7884C(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_251B82CF0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_251AB3DD4;
  return sub_251B77AAC(a1, v4, v5, v6);
}

uint64_t objectdestroy_79Tm()
{
  swift_unknownObjectRelease();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_251B82DF8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_251AB3DD4;
  return sub_251B80660(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_251B82EC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F5F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_251B82F28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StateSnapshot(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_251B82F8C()
{
}

void sub_251B82FA4()
{
}

uint64_t sub_251B82FBC()
{
  return sub_251A58178();
}

uint64_t sub_251B82FD4()
{
  return sub_251B81CAC();
}

uint64_t sub_251B82FEC(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for StaticService();
  uint64_t v36 = *(void *)(v3 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v35 = (uint64_t)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v34 = (uint64_t)v28 - v6;
  int64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = MEMORY[0x263F8EE78];
  if (!v7) {
    return v8;
  }
  v28[0] = v1;
  uint64_t v37 = MEMORY[0x263F8EE78];
  sub_251A3E084(0, v7, 0);
  uint64_t v9 = sub_251A53EB8(a1);
  uint64_t v11 = v10;
  char v13 = v12 & 1;
  uint64_t v14 = sub_251F34DA0();
  uint64_t v15 = v14;
  uint64_t v16 = *(void *)(v14 - 8);
  uint64_t v33 = *(void *)(v16 + 64);
  uint64_t v31 = v14;
  uint64_t v32 = a1 + 56;
  unint64_t v29 = (void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  uint64_t v30 = v16;
  v28[1] = v16 + 32;
  while (1)
  {
    uint64_t result = MEMORY[0x270FA5388](v14);
    uint64_t v19 = (char *)v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (v13) {
      break;
    }
    if (v9 < 0 || v9 >= 1 << *(unsigned char *)(a1 + 32))
    {
      __break(1u);
LABEL_16:
      __break(1u);
LABEL_17:
      __break(1u);
      break;
    }
    if (((*(void *)(v32 + (((unint64_t)v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
      goto LABEL_16;
    }
    if (*(_DWORD *)(a1 + 36) != v11) {
      goto LABEL_17;
    }
    uint64_t v20 = v34;
    sub_251B8E790(*(void *)(a1 + 48) + *(void *)(v36 + 72) * v9, v34, (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t v21 = v20;
    uint64_t v22 = v35;
    sub_251B8E64C(v21, v35, (uint64_t (*)(void))type metadata accessor for StaticService);
    (*v29)(v19, v22, v15);
    sub_251B8E7F8(v22, (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t v8 = v37;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_251A3E084(0, *(void *)(v8 + 16) + 1, 1);
      uint64_t v8 = v37;
    }
    unint64_t v24 = *(void *)(v8 + 16);
    unint64_t v23 = *(void *)(v8 + 24);
    if (v24 >= v23 >> 1)
    {
      sub_251A3E084(v23 > 1, v24 + 1, 1);
      uint64_t v8 = v37;
    }
    *(void *)(v8 + 16) = v24 + 1;
    unint64_t v25 = v8
        + ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80))
        + *(void *)(v30 + 72) * v24;
    uint64_t v15 = v31;
    (*(void (**)(unint64_t, char *, uint64_t))(v30 + 32))(v25, v19, v31);
    uint64_t v37 = v8;
    uint64_t v14 = sub_251A53F5C(v9, v11, 0, a1);
    uint64_t v9 = v14;
    uint64_t v11 = v26;
    char v13 = v27 & 1;
    if (!--v7)
    {
      sub_251A4ECE4(v14, v26, v27 & 1);
      return v8;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_251B83378(uint64_t a1)
{
  uint64_t v24 = type metadata accessor for StaticServiceGroup();
  uint64_t v2 = *(void *)(v24 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v24);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  int64_t v7 = (char *)&v22 - v6;
  uint64_t v25 = MEMORY[0x263F8EE78];
  uint64_t v8 = *(void *)(a1 + 56);
  uint64_t v22 = a1 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v8;
  int64_t v23 = (unint64_t)(v9 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v13 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v14 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v15 = v14 | (v13 << 6);
      goto LABEL_5;
    }
    if (__OFADD__(v13++, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v13 >= v23) {
      goto LABEL_24;
    }
    unint64_t v20 = *(void *)(v22 + 8 * v13);
    if (!v20) {
      break;
    }
LABEL_19:
    unint64_t v11 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v13 << 6);
LABEL_5:
    sub_251B8E790(*(void *)(a1 + 48) + *(void *)(v2 + 72) * v15, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
    sub_251B8E64C((uint64_t)v7, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
    uint64_t v16 = swift_bridgeObjectRetain();
    uint64_t v17 = sub_251EDC188(v16);
    uint64_t v18 = sub_251B82FEC(v17);
    swift_bridgeObjectRelease();
    sub_251B8E7F8((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
    uint64_t result = sub_251ED7700(v18);
  }
  int64_t v21 = v13 + 1;
  if (v13 + 1 >= v23) {
    goto LABEL_24;
  }
  unint64_t v20 = *(void *)(v22 + 8 * v21);
  if (v20) {
    goto LABEL_18;
  }
  int64_t v21 = v13 + 2;
  if (v13 + 2 >= v23) {
    goto LABEL_24;
  }
  unint64_t v20 = *(void *)(v22 + 8 * v21);
  if (v20) {
    goto LABEL_18;
  }
  int64_t v21 = v13 + 3;
  if (v13 + 3 >= v23) {
    goto LABEL_24;
  }
  unint64_t v20 = *(void *)(v22 + 8 * v21);
  if (v20) {
    goto LABEL_18;
  }
  int64_t v21 = v13 + 4;
  if (v13 + 4 >= v23)
  {
LABEL_24:
    swift_release();
    return v25;
  }
  unint64_t v20 = *(void *)(v22 + 8 * v21);
  if (v20)
  {
LABEL_18:
    int64_t v13 = v21;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v13 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v13 >= v23) {
      goto LABEL_24;
    }
    unint64_t v20 = *(void *)(v22 + 8 * v13);
    ++v21;
    if (v20) {
      goto LABEL_19;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_251B8365C()
{
  uint64_t v1 = type metadata accessor for StaticService();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = &v19[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for StaticAccessory(0);
  uint64_t v6 = v5 - 8;
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_251B8E790(v0, (uint64_t)v8, type metadata accessor for StaticAccessory);
  uint64_t v9 = *(void *)&v8[*(int *)(v6 + 88)];
  unint64_t v20 = v8;
  swift_bridgeObjectRetain();
  unint64_t v10 = sub_251A51E88((void (*)(char *))sub_251AB2CBC, (uint64_t)v19, v9);
  swift_bridgeObjectRelease();
  sub_251B8E7F8((uint64_t)v8, type metadata accessor for StaticAccessory);
  int64_t v11 = *(void *)(v10 + 16);
  if (v11)
  {
    uint64_t v21 = MEMORY[0x263F8EE78];
    sub_251A3E424(0, v11, 0);
    uint64_t v12 = v10 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    uint64_t v13 = *(void *)(v2 + 72);
    uint64_t v14 = v21;
    do
    {
      sub_251B8E790(v12, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticService);
      char v15 = v4[*(int *)(v1 + 88)];
      sub_251B8E7F8((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticService);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_251A3E424(0, *(void *)(v14 + 16) + 1, 1);
        uint64_t v14 = v21;
      }
      unint64_t v17 = *(void *)(v14 + 16);
      unint64_t v16 = *(void *)(v14 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_251A3E424(v16 > 1, v17 + 1, 1);
        uint64_t v14 = v21;
      }
      *(void *)(v14 + 16) = v17 + 1;
      *(unsigned char *)(v14 + v17 + 32) = v15;
      v12 += v13;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  return v14;
}

uint64_t sub_251B838F8()
{
  uint64_t v1 = type metadata accessor for StaticService();
  uint64_t v26 = *(void *)(v1 - 8);
  uint64_t v27 = v1;
  uint64_t v2 = MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v25 - v5;
  uint64_t v7 = type metadata accessor for StaticServiceGroup();
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251B8E790(v0, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
  uint64_t v10 = swift_bridgeObjectRetain();
  uint64_t v11 = sub_251EDC188(v10);
  sub_251B8E7F8((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
  int64_t v12 = *(void *)(v11 + 16);
  if (v12)
  {
    uint64_t v28 = MEMORY[0x263F8EE78];
    sub_251A3E424(0, v12, 0);
    uint64_t result = sub_251A53EB8(v11);
    uint64_t v14 = result;
    uint64_t v16 = v15;
    char v18 = v17 & 1;
    uint64_t v25 = v11 + 56;
    while ((v18 & 1) == 0)
    {
      if (v14 < 0 || v14 >= 1 << *(unsigned char *)(v11 + 32))
      {
        __break(1u);
LABEL_17:
        __break(1u);
LABEL_18:
        __break(1u);
        break;
      }
      if (((*(void *)(v25 + (((unint64_t)v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
        goto LABEL_17;
      }
      if (*(_DWORD *)(v11 + 36) != v16) {
        goto LABEL_18;
      }
      sub_251B8E790(*(void *)(v11 + 48) + *(void *)(v26 + 72) * v14, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticService);
      sub_251B8E64C((uint64_t)v6, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticService);
      char v19 = v4[*(int *)(v27 + 88)];
      sub_251B8E7F8((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v20 = v28;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_251A3E424(0, *(void *)(v20 + 16) + 1, 1);
        uint64_t v20 = v28;
      }
      unint64_t v22 = *(void *)(v20 + 16);
      unint64_t v21 = *(void *)(v20 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_251A3E424(v21 > 1, v22 + 1, 1);
        uint64_t v20 = v28;
      }
      *(void *)(v20 + 16) = v22 + 1;
      *(unsigned char *)(v20 + v22 + 32) = v19;
      uint64_t result = sub_251A53F5C(v14, v16, 0, v11);
      uint64_t v14 = result;
      uint64_t v16 = v23;
      char v18 = v24 & 1;
      if (!--v12)
      {
        sub_251A4ECE4(result, v23, v18);
        swift_bridgeObjectRelease();
        return v20;
      }
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  return result;
}

uint64_t sub_251B83C30(uint64_t a1)
{
  uint64_t v53 = type metadata accessor for StaticService();
  uint64_t v58 = *(void *)(v53 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v53);
  uint64_t v50 = &v49[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  char v55 = &v49[-v5];
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v54 = &v49[-v7];
  uint64_t result = MEMORY[0x270FA5388](v6);
  uint64_t v10 = &v49[-v9];
  int64_t v11 = 0;
  uint64_t v56 = a1;
  uint64_t v14 = *(void *)(a1 + 64);
  uint64_t v13 = a1 + 64;
  uint64_t v12 = v14;
  uint64_t v15 = 1 << *(unsigned char *)(v13 - 32);
  uint64_t v63 = MEMORY[0x263F8EE78];
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v12;
  uint64_t v51 = v13;
  int64_t v52 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      uint64_t v59 = (v17 - 1) & v17;
      int64_t v60 = v11;
      unint64_t v19 = __clz(__rbit64(v17)) | (v11 << 6);
      goto LABEL_25;
    }
    int64_t v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_46;
    }
    if (v20 >= v52) {
      goto LABEL_44;
    }
    unint64_t v21 = *(void *)(v51 + 8 * v20);
    int64_t v22 = v11 + 1;
    if (!v21)
    {
      int64_t v22 = v11 + 2;
      if (v11 + 2 >= v52) {
        goto LABEL_44;
      }
      unint64_t v21 = *(void *)(v51 + 8 * v22);
      if (!v21)
      {
        int64_t v22 = v11 + 3;
        if (v11 + 3 >= v52) {
          goto LABEL_44;
        }
        unint64_t v21 = *(void *)(v51 + 8 * v22);
        if (!v21)
        {
          int64_t v22 = v11 + 4;
          if (v11 + 4 >= v52) {
            goto LABEL_44;
          }
          unint64_t v21 = *(void *)(v51 + 8 * v22);
          if (!v21)
          {
            uint64_t v23 = v11 + 5;
            if (v11 + 5 >= v52)
            {
LABEL_44:
              swift_release();
              return v63;
            }
            unint64_t v21 = *(void *)(v51 + 8 * v23);
            int64_t v22 = v11 + 5;
            if (!v21) {
              break;
            }
          }
        }
      }
    }
LABEL_24:
    uint64_t v59 = (v21 - 1) & v21;
    int64_t v60 = v22;
    unint64_t v19 = __clz(__rbit64(v21)) + (v22 << 6);
LABEL_25:
    uint64_t v24 = *(void *)(v56 + 56);
    uint64_t v57 = *(void *)(v58 + 72);
    uint64_t v25 = v54;
    sub_251B8E790(v24 + v57 * v19, (uint64_t)v54, (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t v26 = (uint64_t)v10;
    sub_251B8E64C((uint64_t)v25, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticService);
    if (qword_269B9C488 != -1) {
      swift_once();
    }
    uint64_t v27 = qword_269BF31F0;
    if (!*(void *)(qword_269BF31F0 + 16)) {
      goto LABEL_5;
    }
    char v28 = v10[*(int *)(v53 + 88)];
    sub_251F36CA0();
    char v61 = v28;
    ServiceKind.rawValue.getter();
    sub_251F357B0();
    swift_bridgeObjectRelease();
    uint64_t v29 = sub_251F36D00();
    uint64_t v30 = -1 << *(unsigned char *)(v27 + 32);
    unint64_t v31 = v29 & ~v30;
    if (((*(void *)(v27 + 56 + ((v31 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v31) & 1) == 0)
    {
LABEL_5:
      uint64_t v10 = (unsigned char *)v26;
      char v18 = v55;
      sub_251B8E790(v26, (uint64_t)v55, (uint64_t (*)(void))type metadata accessor for StaticService);
      sub_251B8E7F8((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for StaticService);
LABEL_6:
      uint64_t result = sub_251B8E7F8((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticService);
      goto LABEL_7;
    }
    uint64_t v32 = ~v30;
    while (1)
    {
      char v62 = *(unsigned char *)(*(void *)(v27 + 48) + v31);
      char v61 = v28;
      unint64_t v33 = ServiceKind.rawValue.getter();
      uint64_t v35 = v34;
      if (v33 == ServiceKind.rawValue.getter() && v35 == v36) {
        break;
      }
      char v38 = sub_251F36B10();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v38) {
        goto LABEL_38;
      }
      unint64_t v31 = (v31 + 1) & v32;
      if (((*(void *)(v27 + 56 + ((v31 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v31) & 1) == 0) {
        goto LABEL_5;
      }
    }
    swift_bridgeObjectRelease_n();
LABEL_38:
    uint64_t v10 = (unsigned char *)v26;
    uint64_t v39 = v55;
    sub_251B8E790(v26, (uint64_t)v55, (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t v40 = (uint64_t)&v39[*(int *)(v53 + 100)];
    uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    MEMORY[0x270FA5388](v41 - 8);
    uint64_t v43 = &v49[-((v42 + 15) & 0xFFFFFFFFFFFFFFF0)];
    sub_251A1E280(v40, (uint64_t)v43);
    sub_251B8E7F8((uint64_t)v39, (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t v44 = sub_251F34DA0();
    LODWORD(v40) = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v44 - 8) + 48))(v43, 1, v44);
    sub_251A1B064((uint64_t)v43, &qword_26B21FF90);
    if (v40 != 1) {
      goto LABEL_6;
    }
    sub_251B8E64C(v26, (uint64_t)v50, (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t v45 = v63;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_251A4EE1C(0, *(void *)(v45 + 16) + 1, 1);
      uint64_t v45 = v63;
    }
    uint64_t v46 = v57;
    unint64_t v48 = *(void *)(v45 + 16);
    unint64_t v47 = *(void *)(v45 + 24);
    if (v48 >= v47 >> 1)
    {
      sub_251A4EE1C(v47 > 1, v48 + 1, 1);
      uint64_t v45 = v63;
    }
    *(void *)(v45 + 16) = v48 + 1;
    uint64_t result = sub_251B8E64C((uint64_t)v50, v45+ ((*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80))+ v48 * v46, (uint64_t (*)(void))type metadata accessor for StaticService);
LABEL_7:
    unint64_t v17 = v59;
    int64_t v11 = v60;
  }
  while (1)
  {
    int64_t v22 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v22 >= v52) {
      goto LABEL_44;
    }
    unint64_t v21 = *(void *)(v51 + 8 * v22);
    ++v23;
    if (v21) {
      goto LABEL_24;
    }
  }
LABEL_46:
  __break(1u);
  return result;
}

uint64_t sub_251B84288(uint64_t a1, uint64_t a2)
{
  uint64_t v44 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9EF10);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v37 - v7;
  uint64_t v9 = type metadata accessor for AnyTileInfoBearer();
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v42 = (uint64_t)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v10);
  uint64_t v41 = (uint64_t)&v37 - v13;
  unint64_t v14 = 0;
  uint64_t v15 = 0;
  unint64_t v16 = 0;
  uint64_t v54 = MEMORY[0x263F8EE78];
  char v18 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
  uint64_t v19 = a1 + 32;
  uint64_t v47 = v17 + 48;
  uint64_t v48 = v17;
  uint64_t v45 = v8;
  uint64_t v46 = a1;
  uint64_t v43 = result;
  uint64_t v40 = a1 + 32;
  while (1)
  {
    if (v15)
    {
      unint64_t v20 = *(void *)(v15 + 16);
      if (v14 != v20) {
        goto LABEL_14;
      }
      (*v18)(v6, 1, 1, v9);
      uint64_t result = sub_251A1B064((uint64_t)v6, &qword_269B9EF10);
    }
    unint64_t v21 = *(void *)(a1 + 16);
    if (v16 == v21)
    {
LABEL_23:
      (*v18)(v8, 1, 1, v9);
      swift_bridgeObjectRelease();
LABEL_24:
      swift_bridgeObjectRelease();
      sub_251A1B064((uint64_t)v8, &qword_269B9EF10);
      return v54;
    }
    if (v16 >= v21) {
      break;
    }
    while (1)
    {
      uint64_t v15 = *(void *)(v19 + 8 * v16);
      swift_bridgeObjectRetain();
      uint64_t result = swift_bridgeObjectRelease();
      if (v15) {
        break;
      }
LABEL_10:
      ++v16;
      unint64_t v22 = *(void *)(a1 + 16);
      if (v16 == v22) {
        goto LABEL_23;
      }
      if (v16 >= v22) {
        goto LABEL_26;
      }
    }
    unint64_t v20 = *(void *)(v15 + 16);
    if (!v20)
    {
      (*v18)(v6, 1, 1, v9);
      uint64_t result = sub_251A1B064((uint64_t)v6, &qword_269B9EF10);
      goto LABEL_10;
    }
    unint64_t v14 = 0;
    ++v16;
LABEL_14:
    if (v14 >= v20) {
      goto LABEL_27;
    }
    uint64_t v23 = v48;
    unint64_t v39 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
    uint64_t v38 = *(void *)(v48 + 72);
    uint64_t v24 = (uint64_t)v8;
    unint64_t v25 = v14;
    sub_251B8E790(v15 + v39 + v38 * v14, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v6, 0, 1, v9);
    sub_251B8E6B4((uint64_t)v6, v24);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v24, 1, v9) == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v8 = (char *)v24;
      goto LABEL_24;
    }
    unint64_t v53 = v25 + 1;
    uint64_t v26 = v24;
    uint64_t v27 = v41;
    sub_251B8E64C(v26, v41, (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer);
    uint64_t v51 = sub_251F34DA0();
    int64_t v52 = &v37;
    uint64_t v50 = *(void *)(v51 - 8);
    uint64_t v28 = MEMORY[0x270FA5388](v51);
    uint64_t v30 = (char *)&v37 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v49 = &v37;
    MEMORY[0x270FA5388](v28);
    uint64_t v32 = (char *)&v37 - v31;
    __swift_project_boxed_opaque_existential_1((void *)(*(void *)v27 + 16), *(void *)(*(void *)v27 + 40));
    sub_251F36420();
    LOBYTE(v32) = sub_251A637B8(v30, v32);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v30, v51);
    if (v32)
    {
      sub_251B8E64C(v27, v42, (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer);
      uint64_t v33 = v54;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v19 = v40;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_251A3E6B0(0, *(void *)(v33 + 16) + 1, 1);
        uint64_t v33 = v54;
      }
      uint64_t v9 = v43;
      unint64_t v36 = *(void *)(v33 + 16);
      unint64_t v35 = *(void *)(v33 + 24);
      if (v36 >= v35 >> 1)
      {
        sub_251A3E6B0(v35 > 1, v36 + 1, 1);
        uint64_t v33 = v54;
      }
      *(void *)(v33 + 16) = v36 + 1;
      uint64_t result = sub_251B8E64C(v42, v33 + v39 + v36 * v38, (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer);
      uint64_t v8 = v45;
      a1 = v46;
      unint64_t v14 = v53;
    }
    else
    {
      uint64_t result = sub_251B8E7F8(v27, (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer);
      uint64_t v8 = v45;
      a1 = v46;
      uint64_t v9 = v43;
      unint64_t v14 = v53;
      uint64_t v19 = v40;
    }
  }
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t StaticAccessory.showAsInteractiveWidget.getter()
{
  uint64_t v1 = type metadata accessor for StaticAccessory(0);
  uint64_t v2 = (int *)MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v5 = *(unsigned __int8 *)(v0 + v2[14]);
  int v6 = *(unsigned __int8 *)(v0 + v2[25]);
  int v7 = *(unsigned __int8 *)(v0 + v2[18]);
  sub_251B8E790(v0, (uint64_t)v4, type metadata accessor for StaticAccessory);
  if (v7 == 1)
  {
    uint64_t v8 = swift_bridgeObjectRetain();
    uint64_t v9 = sub_251B83C30(v8);
    uint64_t v10 = sub_251EE10DC(v9);
    swift_bridgeObjectRelease();
    unint64_t v11 = *(void *)(v10 + 16);
    swift_bridgeObjectRelease();
    BOOL v12 = v11 > 1;
  }
  else
  {
    BOOL v12 = 0;
  }
  sub_251B8E7F8((uint64_t)v4, type metadata accessor for StaticAccessory);
  uint64_t v13 = swift_bridgeObjectRetain();
  uint64_t v14 = sub_251B83C30(v13);
  uint64_t v15 = sub_251EE10DC(v14);
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(sub_251B891DC(v15, (uint64_t (*)(char *, unint64_t, uint64_t))sub_251B897B0) + 16);
  swift_release();
  char v17 = 0;
  if (((v5 | v6) & 1) == 0 && !v12 && !v16)
  {
    if (qword_269B9C490 != -1) {
      swift_once();
    }
    uint64_t v18 = qword_269BF31F8;
    uint64_t v19 = sub_251B8365C();
    LOBYTE(v18) = sub_251A7FE84(v19, v18);
    swift_bridgeObjectRelease();
    char v17 = v18 ^ 1;
  }
  return v17 & 1;
}

uint64_t Set<>.interactiveWidgets.getter()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  return sub_251B891DC(v0, (uint64_t (*)(char *, unint64_t, uint64_t))sub_251B89354);
}

{
  uint64_t v0;

  uint64_t v0 = swift_bridgeObjectRetain();
  return sub_251B891DC(v0, (uint64_t (*)(char *, unint64_t, uint64_t))sub_251B89D4C);
}

{
  uint64_t v0;

  uint64_t v0 = swift_bridgeObjectRetain();
  return sub_251B891DC(v0, (uint64_t (*)(char *, unint64_t, uint64_t))sub_251B8A154);
}

BOOL StaticMatterDevice.showAsInteractiveWidget.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for StaticMatterDevice() + 32));
  if (qword_269B9C3B8 != -1) {
    swift_once();
  }
  return (sub_251B84AB0(qword_269BA1848, v1) & 1) == 0;
}

uint64_t sub_251B84AB0(uint64_t result, uint64_t a2)
{
  unint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 1;
  }
  unint64_t v3 = *(void *)(result + 16);
  if (!v3) {
    return 1;
  }
  int64_t v4 = 0;
  if (v2 >= v3) {
    uint64_t v5 = result;
  }
  else {
    uint64_t v5 = a2;
  }
  if (v2 >= v3) {
    uint64_t v6 = a2;
  }
  else {
    uint64_t v6 = result;
  }
  uint64_t v25 = v5 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v5 + 56);
  int64_t v24 = (unint64_t)(63 - v7) >> 6;
  uint64_t v10 = v6 + 56;
  while (1)
  {
    while (1)
    {
      int64_t v11 = v4;
      if (!v9) {
        break;
      }
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v4 << 6);
      if (*(void *)(v6 + 16))
      {
LABEL_29:
        uint64_t v17 = *(char *)(*(void *)(v5 + 48) + v13);
        sub_251F36CA0();
        int v18 = dword_251F41E1C[v17];
        sub_251F36CE0();
        uint64_t result = sub_251F36D00();
        uint64_t v19 = -1 << *(unsigned char *)(v6 + 32);
        unint64_t v20 = result & ~v19;
        if ((*(void *)(v10 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20))
        {
          uint64_t v21 = *(void *)(v6 + 48);
          if (dword_251F41E1C[*(char *)(v21 + v20)] == v18)
          {
LABEL_34:
            swift_bridgeObjectRetain();
            uint64_t v23 = 0;
LABEL_35:
            sub_251A1E630();
            return v23;
          }
          uint64_t v22 = ~v19;
          while (1)
          {
            unint64_t v20 = (v20 + 1) & v22;
            if (((*(void *)(v10 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
              break;
            }
            if (dword_251F41E1C[*(char *)(v21 + v20)] == v18) {
              goto LABEL_34;
            }
          }
        }
      }
    }
    int64_t v14 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v14 >= v24) {
      goto LABEL_38;
    }
    unint64_t v15 = *(void *)(v25 + 8 * v14);
    ++v4;
    if (!v15)
    {
      int64_t v4 = v11 + 2;
      if (v11 + 2 >= v24) {
        goto LABEL_38;
      }
      unint64_t v15 = *(void *)(v25 + 8 * v4);
      if (!v15)
      {
        int64_t v4 = v11 + 3;
        if (v11 + 3 >= v24) {
          goto LABEL_38;
        }
        unint64_t v15 = *(void *)(v25 + 8 * v4);
        if (!v15)
        {
          int64_t v16 = v11 + 4;
          if (v11 + 4 >= v24)
          {
LABEL_38:
            swift_bridgeObjectRetain();
            uint64_t v23 = 1;
            goto LABEL_35;
          }
          unint64_t v15 = *(void *)(v25 + 8 * v16);
          int64_t v4 = v11 + 4;
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_28:
    unint64_t v9 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v4 << 6);
    if (*(void *)(v6 + 16)) {
      goto LABEL_29;
    }
  }
  while (1)
  {
    int64_t v4 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v4 >= v24) {
      goto LABEL_38;
    }
    unint64_t v15 = *(void *)(v25 + 8 * v4);
    ++v16;
    if (v15) {
      goto LABEL_28;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

BOOL sub_251B84D30(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 32));
  if (qword_269B9C3B8 != -1) {
    swift_once();
  }
  return (sub_251B84AB0(qword_269BA1848, v2) & 1) == 0;
}

BOOL Collection<>.widgetBehavior.getter()
{
  return (sub_251F35900() & 1) == 0;
}

{
  return (sub_251F35900() & 1) == 0;
}

BOOL sub_251B84E78(size_t a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for StaticCharacteristic();
  uint64_t v29 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for StaticService();
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (uint64_t)&v28 - v12;
  uint64_t v14 = *(unsigned __int8 *)(a1 + *(int *)(v11 + 88));
  if (v14 > 0x30 || ((1 << v14) & 0x1964491330008) == 0)
  {
    if (qword_269B9C310 != -1) {
      goto LABEL_22;
    }
    goto LABEL_18;
  }
  sub_251B8E790(a1, (uint64_t)&v28 - v12, (uint64_t (*)(void))type metadata accessor for StaticService);
  while (1)
  {
    int64_t v16 = (uint64_t *)(v13 + *(int *)(v7 + 116));
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_251B8E7F8(v13, (uint64_t (*)(void))type metadata accessor for StaticService);
    if (*(void *)(v18 + 16))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_8:
      sub_251B8E790(a1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticService);
      goto LABEL_10;
    }
    uint64_t v19 = *(void *)(v17 + 16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_251B8E790(a1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticService);
    if (v19) {
      goto LABEL_10;
    }
    uint64_t v22 = swift_bridgeObjectRetain();
    a1 = sub_251A91C20(v22);
    swift_bridgeObjectRelease();
    uint64_t v23 = *(void *)(a1 + 16);
    if (!v23) {
      break;
    }
    unint64_t v28 = v2;
    uint64_t v7 = a1 + ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80));
    uint64_t v13 = *(void *)(v29 + 72);
    swift_retain();
    uint64_t v14 = 0;
    while (1)
    {
      sub_251B8E790(v7, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
      unint64_t v2 = *(void *)&v6[*(int *)(v4 + 36)];
      sub_251B8E7F8((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
      uint64_t v24 = (v2 >> 2) & 1;
      BOOL v25 = __OFADD__(v14, v24);
      v14 += v24;
      if (v25) {
        break;
      }
      v7 += v13;
      if (!--v23)
      {
        swift_release_n();
        BOOL v20 = v14 == 1;
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_22:
    swift_once();
LABEL_18:
    swift_beginAccess();
    uint64_t v26 = off_269B9F948;
    swift_bridgeObjectRetain();
    char v27 = sub_251DB3C0C(v14, (uint64_t)v26);
    swift_bridgeObjectRelease();
    sub_251B8E790(a1, v13, (uint64_t (*)(void))type metadata accessor for StaticService);
    if ((v27 & 1) == 0)
    {
      sub_251B8E7F8(v13, (uint64_t (*)(void))type metadata accessor for StaticService);
      goto LABEL_8;
    }
  }
  swift_release();
LABEL_10:
  BOOL v20 = 0;
LABEL_11:
  sub_251B8E7F8((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticService);
  return v20;
}

uint64_t StaticAccessory.widgetBehavior.getter()
{
  uint64_t v1 = type metadata accessor for StaticAccessory(0);
  MEMORY[0x270FA5388](v1 - 8);
  unint64_t v3 = &v21[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = &v21[-v8];
  StaticAccessory.primaryStaticService.getter((uint64_t)&v21[-v8]);
  uint64_t v10 = type metadata accessor for StaticService();
  uint64_t v11 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
  if (v11(v9, 1, v10) == 1)
  {
    sub_251A1B064((uint64_t)v9, qword_26B21EE20);
    uint64_t v12 = 0;
  }
  else
  {
    uint64_t v12 = v9[*(int *)(v10 + 88)];
    sub_251B8E7F8((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticService);
    if (v12 <= 0x30 && ((1 << v12) & 0x1964491330008) != 0)
    {
      sub_251B8E790(v0, (uint64_t)v3, type metadata accessor for StaticAccessory);
      goto LABEL_17;
    }
  }
  if (qword_269B9C310 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v13 = off_269B9F948;
  swift_bridgeObjectRetain();
  char v14 = sub_251DB3C0C(v12, (uint64_t)v13);
  swift_bridgeObjectRelease();
  sub_251B8E790(v0, (uint64_t)v3, type metadata accessor for StaticAccessory);
  if ((v14 & 1) == 0)
  {
    StaticAccessory.primaryStaticService.getter((uint64_t)v7);
    if (v11(v7, 1, v10) == 1)
    {
      sub_251A1B064((uint64_t)v7, qword_26B21EE20);
      char v15 = 0;
    }
    else
    {
      char v15 = v7[*(int *)(v10 + 88)];
      sub_251B8E7F8((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticService);
    }
    v21[7] = v15;
    if (ServiceKind.rawValue.getter() != 0xD000000000000024 || v17 != 0x8000000251F64EF0)
    {
      char v20 = sub_251F36B10();
      swift_bridgeObjectRelease();
      sub_251B8E7F8((uint64_t)v3, type metadata accessor for StaticAccessory);
      char v18 = v20 ^ 1;
      return v18 & 1;
    }
    swift_bridgeObjectRelease();
  }
LABEL_17:
  sub_251B8E7F8((uint64_t)v3, type metadata accessor for StaticAccessory);
  char v18 = 0;
  return v18 & 1;
}

uint64_t sub_251B85614()
{
  return StaticMatterDevice.canBeToggled.getter() & 1;
}

uint64_t static IntentItemCollection.createWidgetCollection<A>(of:matching:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v149 = a5;
  uint64_t v147 = a4;
  uint64_t v170 = a3;
  uint64_t v171 = a2;
  uint64_t v148 = sub_251F344B0();
  MEMORY[0x270FA5388](v148);
  uint64_t v17 = (char *)v143 - v16;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E708);
  uint64_t v19 = MEMORY[0x270FA5388](v18 - 8);
  uint64_t v159 = (char *)v143 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)v143 - v21;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9EF10);
  MEMORY[0x270FA5388](v23 - 8);
  uint64_t v168 = (char *)v143 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v167 = type metadata accessor for AnyTileInfoBearer();
  uint64_t v162 = *(void (***)(uint64_t, uint64_t, uint64_t, uint64_t))(v167 - 8);
  uint64_t v25 = MEMORY[0x270FA5388](v167);
  uint64_t v157 = (void *)((char *)v143 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v172 = *(void *)(a7 - 8);
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v158 = (char *)v143 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v160 = (char *)v143 - v30;
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  uint64_t v166 = (char *)v143 - v32;
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  unint64_t v35 = (char *)v143 - v34;
  uint64_t v144 = v36;
  MEMORY[0x270FA5388](v33);
  uint64_t v174 = (char *)v143 - v37;
  uint64_t v175 = a1;
  uint64_t v38 = sub_251F35BD0();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v169 = v38;
  uint64_t v150 = WitnessTable;
  if ((sub_251F35F20() & 1) == 0)
  {
    v143[1] = v17;
    v143[2] = a9;
    uint64_t v183 = sub_251F35510();
    uint64_t v146 = a6;
    uint64_t v175 = a6;
    uint64_t v176 = a7;
    uint64_t v145 = a8;
    uint64_t v177 = a8;
    uint64_t v178 = a11;
    uint64_t v46 = _s11RoomSectionVMa();
    swift_getTupleTypeMetadata2();
    sub_251F35B40();
    uint64_t v156 = v46;
    uint64_t v182 = sub_251F35580();
    uint64_t v47 = swift_bridgeObjectRetain();
    uint64_t v48 = MEMORY[0x2533AAAF0](v47, a7);
    uint64_t v161 = a11;
    if (!v48)
    {
LABEL_34:
      swift_bridgeObjectRelease();
      uint64_t v179 = sub_251F35510();
      uint64_t v175 = v182;
      sub_251F35590();
      swift_bridgeObjectRetain();
      swift_getWitnessTable();
      uint64_t v92 = sub_251F35970();
      swift_bridgeObjectRelease();
      uint64_t v175 = v183;
      uint64_t v93 = sub_251F35F20();
      uint64_t v94 = *(void *)(v92 + 16);
      if ((v93 & 1) != 0 && v94 == 1
        || !v94
        && (uint64_t v141 = swift_bridgeObjectRetain(),
            uint64_t v142 = MEMORY[0x2533AAAC0](v141, a7),
            uint64_t v93 = swift_bridgeObjectRelease(),
            v142 >= 1))
      {
        swift_bridgeObjectRelease();
        uint64_t v95 = v145;
        if (qword_269B9C2E0 != -1) {
          swift_once();
        }
        uint64_t v174 = 0;
        uint64_t v96 = sub_251F350A0();
        __swift_project_value_buffer(v96, (uint64_t)qword_269BF30A8);
        uint64_t v97 = sub_251F35080();
        os_log_type_t v98 = sub_251F35FD0();
        if (os_log_type_enabled(v97, v98))
        {
          uint64_t v99 = (uint8_t *)swift_slowAlloc();
          uint64_t v100 = v95;
          uint64_t v101 = swift_slowAlloc();
          uint64_t v175 = v101;
          *(_DWORD *)uint64_t v99 = 136315138;
          uint64_t v181 = sub_251A00E84(0xD000000000000026, 0x8000000251F6B180, &v175);
          sub_251F361D0();
          _os_log_impl(&dword_2519F3000, v97, v98, "%s Only 1 room of accessories built. Returning as flat list.", v99, 0xCu);
          swift_arrayDestroy();
          uint64_t v102 = v101;
          uint64_t v95 = v100;
          MEMORY[0x2533AC760](v102, -1, -1);
          MEMORY[0x2533AC760](v99, -1, -1);
        }

        uint64_t v173 = (void (**)(char *, uint64_t *, uint64_t))v143;
        uint64_t v175 = v182;
        MEMORY[0x270FA5388](v103);
        uint64_t v104 = v146;
        v143[-6] = v146;
        v143[-5] = a7;
        uint64_t v105 = v104;
        v143[-4] = v95;
        v143[-3] = a10;
        v143[-2] = v161;
        sub_251F355A0();
        swift_bridgeObjectRetain();
        swift_getWitnessTable();
        uint64_t v106 = v169;
        swift_getWitnessTable();
        uint64_t v107 = sub_251F35980();
        swift_bridgeObjectRelease();
        uint64_t v175 = v107;
        sub_251F35B90();
        uint64_t v175 = v183;
        MEMORY[0x270FA5388](v183);
        v143[-6] = v105;
        v143[-5] = a7;
        uint64_t v108 = v145;
        v143[-4] = v145;
        v143[-3] = a10;
        uint64_t v109 = v161;
        v143[-2] = v161;
        swift_bridgeObjectRetain();
        uint64_t v110 = sub_251F35970();
        uint64_t v111 = swift_bridgeObjectRelease();
        uint64_t v175 = v110;
        MEMORY[0x270FA5388](v111);
        uint64_t v112 = v146;
        v143[-8] = v146;
        v143[-7] = a7;
        v143[-6] = v108;
        v143[-5] = a10;
        uint64_t v113 = v147;
        v143[-4] = v109;
        v143[-3] = v113;
        v143[-2] = v149;
        sub_251AF11FC((void (*)(char *, char *))sub_251B8D1FC, (uint64_t)&v143[-10], v106, v112, MEMORY[0x263F8E628], v150, MEMORY[0x263F8E658], v114);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9EF18);
        MEMORY[0x270FA5388](v115 - 8);
        unint64_t v117 = (char *)v143 - ((v116 + 15) & 0xFFFFFFFFFFFFFFF0);
        uint64_t v118 = sub_251F34A50();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v118 - 8) + 56))(v117, 1, 1, v118);
        sub_251F344D0();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v174 = (char *)v143;
        uint64_t v175 = v92;
        MEMORY[0x270FA5388](v93);
        uint64_t v172 = a10;
        uint64_t v119 = v146;
        v143[-8] = v146;
        v143[-7] = a7;
        uint64_t v120 = v145;
        v143[-6] = v145;
        v143[-5] = a10;
        v143[-4] = v161;
        v143[-3] = &v182;
        uint64_t v121 = v147;
        uint64_t v122 = v149;
        v143[-2] = v147;
        v143[-1] = v122;
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EAB0);
        swift_getWitnessTable();
        uint64_t v123 = v119;
        uint64_t v124 = sub_251F35910();
        uint64_t v125 = swift_bridgeObjectRelease();
        uint64_t v175 = v183;
        MEMORY[0x270FA5388](v125);
        v143[-8] = v123;
        v143[-7] = a7;
        uint64_t v126 = v172;
        v143[-6] = v120;
        v143[-5] = v126;
        v143[-4] = v161;
        v143[-3] = v121;
        v143[-2] = v149;
        uint64_t v127 = sub_251F34480();
        swift_bridgeObjectRetain();
        uint64_t v129 = sub_251AF11FC((void (*)(char *, char *))sub_251B8D17C, (uint64_t)&v143[-10], v169, v127, MEMORY[0x263F8E628], v150, MEMORY[0x263F8E658], v128);
        swift_bridgeObjectRelease();
        uint64_t v175 = v129;
        sub_251F35BD0();
        swift_getWitnessTable();
        if (sub_251F35F20())
        {
          swift_bridgeObjectRelease();
          uint64_t v130 = v148;
        }
        else
        {
          sub_251F344A0();
          uint64_t v130 = v148;
          sub_251F35BD0();
          sub_251F35BA0();
        }
        uint64_t v175 = v124;
        sub_251F35BD0();
        swift_getWitnessTable();
        sub_251F35B90();
        if (qword_269B9C2E0 != -1) {
          swift_once();
        }
        uint64_t v131 = sub_251F350A0();
        __swift_project_value_buffer(v131, (uint64_t)qword_269BF30A8);
        uint64_t v132 = v179;
        swift_bridgeObjectRetain();
        unsigned int v133 = sub_251F35080();
        os_log_type_t v134 = sub_251F35FD0();
        if (os_log_type_enabled(v133, v134))
        {
          uint64_t v135 = swift_slowAlloc();
          uint64_t v136 = swift_slowAlloc();
          uint64_t v175 = v136;
          *(_DWORD *)uint64_t v135 = 136315394;
          uint64_t v181 = sub_251A00E84(0xD000000000000026, 0x8000000251F6B180, &v175);
          sub_251F361D0();
          *(_WORD *)(v135 + 12) = 2048;
          uint64_t v181 = MEMORY[0x2533AAAC0](v132, v130);
          sub_251F361D0();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_2519F3000, v133, v134, "%s Multiple sections generated: %ld", (uint8_t *)v135, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x2533AC760](v136, -1, -1);
          MEMORY[0x2533AC760](v135, -1, -1);
        }
        else
        {

          swift_bridgeObjectRelease();
        }
        uint64_t v137 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9EF18);
        MEMORY[0x270FA5388](v137 - 8);
        uint64_t v139 = (char *)v143 - ((v138 + 15) & 0xFFFFFFFFFFFFFFF0);
        uint64_t v140 = sub_251F34A50();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v140 - 8) + 56))(v139, 1, 1, v140);
        swift_beginAccess();
        sub_251F344E0();
        swift_bridgeObjectRelease();
      }
      return swift_bridgeObjectRelease();
    }
    uint64_t v49 = 0;
    uint64_t v50 = (void (**)(char *, uint64_t *, uint64_t))(v172 + 16);
    uint64_t v164 = (void (**)(char *, char *, uint64_t))(v172 + 32);
    uint64_t v152 = a11 + 56;
    uint64_t v155 = a11 + 144;
    uint64_t v163 = (void (**)(char *, uint64_t))(v172 + 8);
    v162 += 7;
    uint64_t v51 = MEMORY[0x263F8D320];
    unint64_t v154 = v22;
    uint64_t v165 = a1;
    uint64_t v173 = (void (**)(char *, uint64_t *, uint64_t))(v172 + 16);
    while (1)
    {
      char v54 = sub_251F35B60();
      sub_251F35B00();
      if (v54)
      {
        unint64_t v55 = a1
            + ((*(unsigned __int8 *)(v172 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v172 + 80))
            + *(void *)(v172 + 72) * v49;
        uint64_t v56 = *(void (**)(char *, uint64_t *, uint64_t))(v172 + 16);
        v56(v174, (uint64_t *)v55, a7);
      }
      else
      {
        uint64_t result = sub_251F36450();
        if (v144 != 8)
        {
          __break(1u);
          return result;
        }
        uint64_t v175 = result;
        uint64_t v56 = *v50;
        (*v50)(v174, &v175, a7);
        swift_unknownObjectRelease();
      }
      uint64_t v57 = v49 + 1;
      uint64_t v58 = v170;
      if (__OFADD__(v49, 1))
      {
        __break(1u);
        goto LABEL_55;
      }
      (*v164)(v35, v174, a7);
      if (v58)
      {
        if (sub_251F357C0() >= 3)
        {
          uint64_t v175 = (*(uint64_t (**)(uint64_t))(v161 + 56))(a7);
          uint64_t v176 = v59;
          uint64_t v179 = v171;
          uint64_t v180 = v58;
          sub_251AE13EC();
          char v60 = sub_251F36230();
          swift_bridgeObjectRelease();
          if ((v60 & 1) == 0)
          {
            uint64_t v61 = (*(uint64_t (**)(uint64_t))(v161 + 144))(a7);
            if (v62)
            {
              uint64_t v175 = v61;
              uint64_t v176 = v62;
              uint64_t v179 = v171;
              uint64_t v180 = v58;
              char v63 = sub_251F36230();
              swift_bridgeObjectRelease();
              if ((v63 & 1) == 0)
              {
                (*v163)(v35, a7);
                uint64_t v50 = v173;
                goto LABEL_10;
              }
            }
          }
        }
      }
      uint64_t v50 = v173;
      v56(v166, (uint64_t *)v35, a7);
      uint64_t v64 = (uint64_t)v168;
      uint64_t v65 = v167;
      char v66 = swift_dynamicCast();
      uint64_t v67 = *v162;
      if (v66)
      {
        v67(v64, 0, 1, v65);
        uint64_t v68 = v157;
        sub_251B8E64C(v64, (uint64_t)v157, (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer);
        sub_251A1A4EC(*v68 + 16, (uint64_t)&v175);
        __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF78);
        uint64_t v69 = type metadata accessor for StaticActionSet();
        uint64_t v70 = (uint64_t)v154;
        int v71 = swift_dynamicCast();
        uint64_t v72 = *(void *)(v69 - 8);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v72 + 56))(v70, v71 ^ 1u, 1, v69);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v72 + 48))(v70, 1, v69) != 1)
        {
          sub_251A1B064(v70, &qword_26B21E708);
          int64_t v52 = v173;
          v56(v160, (uint64_t *)v35, a7);
          sub_251F35BA0();
          uint64_t v53 = (uint64_t)v68;
          uint64_t v50 = v52;
          sub_251B8E7F8(v53, (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer);
          goto LABEL_9;
        }
        sub_251B8E7F8((uint64_t)v68, (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer);
        sub_251A1B064(v70, &qword_26B21E708);
        uint64_t v50 = v173;
      }
      else
      {
        v67(v64, 1, 1, v65);
        sub_251A1B064(v64, &qword_269B9EF10);
      }
      v56(v158, (uint64_t *)v35, a7);
      uint64_t v73 = type metadata accessor for StaticActionSet();
      uint64_t v74 = (uint64_t)v159;
      int v75 = swift_dynamicCast();
      char v76 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v73 - 8) + 56);
      if (v75)
      {
        v76(v74, 0, 1, v73);
        sub_251A1B064(v74, &qword_26B21E708);
        uint64_t v77 = v160;
        uint64_t v78 = v35;
        uint64_t v79 = a7;
LABEL_29:
        v56(v77, (uint64_t *)v78, v79);
        sub_251F35BA0();
        goto LABEL_9;
      }
      v76(v74, 1, 1, v73);
      sub_251A1B064(v74, &qword_26B21E708);
      uint64_t v80 = (*(uint64_t (**)(uint64_t))(v161 + 144))(a7);
      uint64_t v82 = MEMORY[0x263F8D310];
      if (!v81)
      {
        uint64_t v77 = v160;
        uint64_t v78 = v35;
        uint64_t v79 = a7;
        uint64_t v50 = v173;
        goto LABEL_29;
      }
      uint64_t v83 = v81;
      uint64_t v84 = v182;
      uint64_t v153 = v80;
      uint64_t v179 = v80;
      uint64_t v180 = v81;
      swift_bridgeObjectRetain();
      MEMORY[0x2533AA520](&v175, &v179, v84, v82, v156, v51);
      swift_bridgeObjectRelease();
      uint64_t v85 = v176;
      if (!v176)
      {
        sub_251B8916C(a7, a7);
        uint64_t v87 = v172;
        swift_allocObject();
        swift_bridgeObjectRetain();
        uint64_t v88 = sub_251F35AF0();
        uint64_t v89 = v173;
        v56(v90, (uint64_t *)v35, a7);
        uint64_t v175 = v153;
        uint64_t v176 = v83;
        uint64_t v177 = v88;
        uint64_t v179 = v153;
        uint64_t v180 = v83;
        uint64_t v50 = v89;
        uint64_t v91 = MEMORY[0x263F8D320];
        sub_251F355D0();
        sub_251F355F0();
        (*(void (**)(char *, uint64_t))(v87 + 8))(v35, a7);
        uint64_t v51 = v91;
        goto LABEL_10;
      }
      uint64_t v151 = v175;
      uint64_t v181 = v177;
      unint64_t v86 = v173;
      v56(v160, (uint64_t *)v35, a7);
      sub_251F35BA0();
      uint64_t v175 = v151;
      uint64_t v176 = v85;
      uint64_t v177 = v181;
      uint64_t v179 = v153;
      uint64_t v180 = v83;
      uint64_t v50 = v86;
      uint64_t v51 = MEMORY[0x263F8D320];
      sub_251F355D0();
      sub_251F355F0();
LABEL_9:
      (*v163)(v35, a7);
LABEL_10:
      a1 = v165;
      ++v49;
      if (v57 == MEMORY[0x2533AAAF0](v165, a7)) {
        goto LABEL_34;
      }
    }
  }
  if (qword_269B9C2E0 != -1) {
LABEL_55:
  }
    swift_once();
  uint64_t v40 = sub_251F350A0();
  __swift_project_value_buffer(v40, (uint64_t)qword_269BF30A8);
  uint64_t v41 = sub_251F35080();
  os_log_type_t v42 = sub_251F35FB0();
  if (os_log_type_enabled(v41, v42))
  {
    uint64_t v43 = (uint8_t *)swift_slowAlloc();
    uint64_t v44 = swift_slowAlloc();
    uint64_t v175 = v44;
    *(_DWORD *)uint64_t v43 = 136315138;
    uint64_t v179 = sub_251A00E84(0xD000000000000026, 0x8000000251F6B180, &v175);
    sub_251F361D0();
    _os_log_impl(&dword_2519F3000, v41, v42, "%s No accessories found, returning empty collection", v43, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v44, -1, -1);
    MEMORY[0x2533AC760](v43, -1, -1);
  }

  return sub_251F344F0();
}

BOOL sub_251B86DD0()
{
  return sub_251F36220() == -1;
}

BOOL sub_251B86E38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(a7 + 56);
  v9(a4, a7);
  v9(a4, a7);
  sub_251AE13EC();
  uint64_t v10 = sub_251F36220();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10 == -1;
}

uint64_t sub_251B86F10@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v36 = a4;
  uint64_t v37 = a8;
  uint64_t v35 = a3;
  uint64_t v14 = a1[1];
  uint64_t v15 = *a2;
  v42[0] = *a1;
  v42[1] = v14;
  swift_bridgeObjectRetain();
  uint64_t v38 = a5;
  uint64_t v39 = a6;
  uint64_t v40 = a7;
  uint64_t v41 = a10;
  uint64_t v16 = _s11RoomSectionVMa();
  MEMORY[0x2533AA520](&v43, v42, v15, MEMORY[0x263F8D310], v16, MEMORY[0x263F8D320]);
  swift_bridgeObjectRelease();
  uint64_t v17 = v44;
  if (v44)
  {
    uint64_t v33 = a9;
    uint64_t v18 = v45;
    uint64_t v32 = v43;
    uint64_t v19 = sub_251F356A0();
    uint64_t v34 = v31;
    MEMORY[0x270FA5388](v19 - 8);
    sub_251F35690();
    sub_251F35680();
    sub_251F35670();
    sub_251F35680();
    uint64_t v20 = sub_251F34A50();
    v31[2] = v31;
    MEMORY[0x270FA5388](v20 - 8);
    uint64_t v21 = sub_251F34A40();
    v31[1] = v31;
    uint64_t v38 = v18;
    MEMORY[0x270FA5388](v21);
    v31[-8] = a5;
    v31[-7] = a6;
    uint64_t v22 = v37;
    v31[-6] = a7;
    v31[-5] = v22;
    uint64_t v23 = v35;
    v31[-4] = a10;
    v31[-3] = v23;
    v31[-2] = v36;
    uint64_t v24 = sub_251F35BD0();
    swift_bridgeObjectRetain();
    uint64_t WitnessTable = swift_getWitnessTable();
    sub_251AF11FC((void (*)(char *, char *))sub_251B8D1FC, (uint64_t)&v31[-10], v24, a5, MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v26);
    sub_251B8E74C(v32, v17);
    swift_bridgeObjectRelease();
    uint64_t v27 = v33;
    sub_251F344C0();
    uint64_t v28 = sub_251F344B0();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v27, 0, 1, v28);
  }
  else
  {
    uint64_t v30 = sub_251F344B0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(a9, 1, 1, v30);
  }
}

uint64_t sub_251B87264(uint64_t a1)
{
  uint64_t v1 = MEMORY[0x270FA5388](a1);
  v2(v1);
  return sub_251F34490();
}

uint64_t StateSnapshot.WidgetTileBehavior.hash(into:)()
{
  return sub_251F36CB0();
}

BOOL static StateSnapshot.WidgetTileBehavior.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t StateSnapshot.WidgetTileBehavior.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t StateSnapshot.allWidgetTileInfos.getter()
{
  uint64_t v161 = type metadata accessor for StaticService();
  uint64_t v160 = *(void *)(v161 - 8);
  uint64_t v1 = MEMORY[0x270FA5388](v161);
  uint64_t v159 = (char *)&v154 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = MEMORY[0x270FA5388](v1);
  uint64_t v158 = (uint64_t)&v154 - v4;
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v157 = (uint64_t)&v154 - v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v156 = (uint64_t)&v154 - v7;
  uint64_t v167 = type metadata accessor for StaticAccessory(0);
  uint64_t v166 = *(void *)(v167 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v167);
  uint64_t v165 = (uint64_t)&v154 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v164 = (uint64_t)&v154 - v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v163 = (char *)&v154 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v162 = (uint64_t)&v154 - v14;
  uint64_t v174 = type metadata accessor for StaticServiceGroup();
  uint64_t v173 = *(void *)(v174 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v174);
  uint64_t v172 = (char *)&v154 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v171 = (uint64_t)&v154 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v170 = (char *)&v154 - v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v169 = (uint64_t)&v154 - v21;
  uint64_t v184 = (uint64_t *)type metadata accessor for StaticActionSet();
  uint64_t v22 = *(v184 - 1);
  uint64_t v23 = MEMORY[0x270FA5388](v184);
  uint64_t v180 = (char *)&v154 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v179 = (void **)((char *)&v154 - v26);
  MEMORY[0x270FA5388](v25);
  uint64_t v178 = (char *)&v154 - v27;
  uint64_t v28 = type metadata accessor for AnyTileInfoBearer();
  uint64_t v188 = *(void *)(v28 - 8);
  uint64_t v189 = v28;
  uint64_t v29 = MEMORY[0x270FA5388](v28);
  uint64_t v182 = (uint64_t)&v154 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  uint64_t v183 = (uint64_t)&v154 - v32;
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  uint64_t v185 = (uint64_t)&v154 - v34;
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  uint64_t v37 = (void **)((char *)&v154 - v36);
  MEMORY[0x270FA5388](v35);
  uint64_t v39 = (char *)&v154 - v38;
  uint64_t v40 = type metadata accessor for StateSnapshot(0);
  uint64_t v41 = swift_bridgeObjectRetain();
  uint64_t v42 = sub_251EDE330(v41);
  uint64_t v181 = (void *)sub_251B891DC(v42, (uint64_t (*)(char *, unint64_t, uint64_t))sub_251B8A154);
  uint64_t v43 = sub_251B83378((uint64_t)v181);
  uint64_t v44 = sub_251EE04F8(v43);
  swift_bridgeObjectRelease();
  uint64_t v45 = swift_bridgeObjectRetain();
  uint64_t v46 = sub_251EDCBC8(v45);
  swift_bridgeObjectRetain();
  uint64_t v47 = sub_251B8E04C(v46, v44, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_251B8D984);
  swift_bridgeObjectRelease();
  uint64_t v48 = sub_251B891DC(v47, (uint64_t (*)(char *, unint64_t, uint64_t))sub_251B89354);
  uint64_t v49 = swift_bridgeObjectRetain();
  uint64_t v50 = sub_251EDC188(v49);
  uint64_t v51 = sub_251B8E04C(v50, v44, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_251B8DC28);
  swift_bridgeObjectRelease();
  uint64_t v194 = v0;
  uint64_t v52 = sub_251B1E2A4((uint64_t)sub_251B8E224, (uint64_t)v193, v51);
  uint64_t v168 = sub_251B891DC(v52, (uint64_t (*)(char *, unint64_t, uint64_t))sub_251B89D4C);
  uint64_t v53 = swift_bridgeObjectRetain();
  uint64_t v54 = sub_251EDDAA8(v53);
  uint64_t v55 = sub_251B891DC(v54, (uint64_t (*)(char *, unint64_t, uint64_t))sub_251B8A478);
  uint64_t v155 = 0;
  uint64_t v56 = v0 + *(int *)(v40 + 20);
  uint64_t v57 = *(void *)(v56 + *(int *)(type metadata accessor for StaticHome() + 52));
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v191 = sub_251B8E294;
  uint64_t v192 = KeyPath;
  swift_retain();
  uint64_t v59 = sub_251B0DB30((void (*)(char *))sub_251B0EC78, 0, (void (*)(void *__return_ptr, char *))sub_251B8E2C0, (uint64_t)v190, v57, v55);
  swift_release();
  swift_release_n();
  int64_t v60 = v59[2];
  uint64_t v61 = MEMORY[0x263F8EE78];
  uint64_t v187 = v37;
  uint64_t v175 = v48;
  if (v60)
  {
    uint64_t v196 = MEMORY[0x263F8EE78];
    sub_251A3E6B0(0, v60, 0);
    unint64_t v62 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
    unint64_t v154 = v59;
    uint64_t v63 = (uint64_t)v59 + v62;
    uint64_t v177 = *(void *)(v22 + 72);
    uint64_t v176 = v37 + 2;
    uint64_t v64 = v196;
    uint64_t v65 = (uint64_t)v178;
    uint64_t v66 = (uint64_t)v180;
    uint64_t v67 = v184;
    do
    {
      uint64_t v186 = v64;
      sub_251B8E790(v63, v65, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
      uint64_t v68 = (uint64_t)v39;
      uint64_t v69 = v179;
      sub_251B8E790(v65, (uint64_t)v179, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
      uint64_t v70 = v176;
      *uint64_t v176 = 0;
      v70[1] = 0;
      int v71 = (char *)v37 + *(int *)(v189 + 32);
      uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 56))(v71, 1, 1, v72);
      sub_251B8E790((uint64_t)v69, v66, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9EF20);
      uint64_t v73 = (uint64_t *)swift_allocObject();
      v73[5] = (uint64_t)v67;
      v73[6] = sub_251B8E2F0(&qword_269B9E280, (void (*)(uint64_t))type metadata accessor for StaticActionSet);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v73 + 2);
      sub_251B8E64C(v66, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
      uint64_t v75 = (uint64_t)v69;
      uint64_t v39 = (char *)v68;
      sub_251B8E7F8(v75, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
      *uint64_t v37 = v73;
      v37[1] = v67;
      uint64_t v64 = v186;
      sub_251B8E64C((uint64_t)v37, v68, (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer);
      sub_251B8E7F8(v65, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_251A3E6B0(0, *(void *)(v64 + 16) + 1, 1);
        uint64_t v64 = v196;
      }
      unint64_t v77 = *(void *)(v64 + 16);
      unint64_t v76 = *(void *)(v64 + 24);
      if (v77 >= v76 >> 1)
      {
        sub_251A3E6B0(v76 > 1, v77 + 1, 1);
        uint64_t v64 = v196;
      }
      *(void *)(v64 + 16) = v77 + 1;
      sub_251B8E64C(v68, v64+ ((*(unsigned __int8 *)(v188 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v188 + 80))+ *(void *)(v188 + 72) * v77, (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer);
      v63 += v177;
      --v60;
      uint64_t v37 = v187;
    }
    while (v60);
    swift_bridgeObjectRelease();
    uint64_t v61 = MEMORY[0x263F8EE78];
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v64 = MEMORY[0x263F8EE78];
  }
  uint64_t v186 = v64;
  uint64_t v196 = MEMORY[0x263F8EE88];
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9EF28);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_251F3DAB0;
  uint64_t v79 = v181;
  int64_t v80 = v181[2];
  uint64_t v178 = (char *)inited;
  if (v80)
  {
    uint64_t v195 = v61;
    sub_251A3E6B0(0, v80, 0);
    uint64_t v82 = sub_251A53EB8(v79);
    char v84 = v83 & 1;
    uint64_t v180 = (char *)(v79 + 7);
    uint64_t v179 = v37 + 2;
    uint64_t v85 = v189;
    uint64_t v86 = (uint64_t)v170;
    uint64_t v87 = (uint64_t)v172;
    while ((v84 & 1) == 0)
    {
      if (v82 < 0 || v82 >= 1 << *((unsigned char *)v79 + 32))
      {
        __break(1u);
LABEL_55:
        __break(1u);
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
LABEL_60:
        __break(1u);
LABEL_61:
        __break(1u);
LABEL_62:
        __break(1u);
        break;
      }
      if (((*(void *)&v180[((unint64_t)v82 >> 3) & 0x1FFFFFFFFFFFFFF8] >> v82) & 1) == 0) {
        goto LABEL_55;
      }
      if (*((_DWORD *)v79 + 9) != v81) {
        goto LABEL_56;
      }
      uint64_t v184 = (uint64_t *)v81;
      uint64_t v88 = v79[6] + *(void *)(v173 + 72) * v82;
      uint64_t v89 = v169;
      sub_251B8E790(v88, v169, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
      sub_251B8E64C(v89, v86, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
      uint64_t v90 = v171;
      sub_251B8E790(v86, v171, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
      uint64_t v91 = v179;
      *uint64_t v179 = 0;
      v91[1] = 0;
      uint64_t v92 = (char *)v37 + *(int *)(v85 + 32);
      uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v93 - 8) + 56))(v92, 1, 1, v93);
      sub_251B8E790(v90, v87, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9EF30);
      uint64_t v94 = (uint64_t *)swift_allocObject();
      uint64_t v95 = v174;
      v94[5] = v174;
      v94[6] = sub_251B8E2F0(&qword_269B9E278, (void (*)(uint64_t))type metadata accessor for StaticServiceGroup);
      uint64_t v96 = __swift_allocate_boxed_opaque_existential_1(v94 + 2);
      sub_251B8E64C(v87, (uint64_t)v96, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
      sub_251B8E7F8(v90, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
      *uint64_t v37 = v94;
      v37[1] = (uint64_t *)v95;
      sub_251B8E64C((uint64_t)v37, v185, (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer);
      sub_251B8E7F8(v86, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
      uint64_t v97 = v195;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_251A3E6B0(0, *(void *)(v97 + 16) + 1, 1);
        uint64_t v97 = v195;
      }
      unint64_t v99 = *(void *)(v97 + 16);
      unint64_t v98 = *(void *)(v97 + 24);
      uint64_t v85 = v189;
      if (v99 >= v98 >> 1)
      {
        sub_251A3E6B0(v98 > 1, v99 + 1, 1);
        uint64_t v97 = v195;
      }
      *(void *)(v97 + 16) = v99 + 1;
      sub_251B8E64C(v185, v97+ ((*(unsigned __int8 *)(v188 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v188 + 80))+ *(void *)(v188 + 72) * v99, (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer);
      uint64_t v79 = v181;
      uint64_t v100 = sub_251A53F5C(v82, v184, 0, v181);
      uint64_t v82 = v100;
      char v84 = v101 & 1;
      if (!--v80)
      {
        sub_251A4ECE4(v100, v81, v84);
        swift_release();
        uint64_t v102 = v178;
        uint64_t v61 = MEMORY[0x263F8EE78];
        goto LABEL_24;
      }
    }
    __break(1u);
    goto LABEL_64;
  }
  uint64_t v102 = (void *)inited;
  swift_release();
  uint64_t v97 = MEMORY[0x263F8EE78];
  uint64_t v85 = v189;
LABEL_24:
  v102[4] = v97;
  uint64_t v103 = v175;
  int64_t v104 = *(void *)(v175 + 16);
  if (v104)
  {
    uint64_t v195 = v61;
    sub_251A3E6B0(0, v104, 0);
    uint64_t v106 = sub_251A53EB8(v103);
    char v108 = v107 & 1;
    uint64_t v184 = (uint64_t *)(v103 + 56);
    uint64_t v181 = v37 + 2;
    uint64_t v109 = (uint64_t)v163;
    uint64_t v110 = v167;
    while ((v108 & 1) == 0)
    {
      if (v106 < 0 || v106 >= 1 << *(unsigned char *)(v103 + 32)) {
        goto LABEL_57;
      }
      if (((*(unint64_t *)((char *)v184 + (((unint64_t)v106 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v106) & 1) == 0) {
        goto LABEL_58;
      }
      if (*(_DWORD *)(v103 + 36) != v105) {
        goto LABEL_59;
      }
      uint64_t v185 = v105;
      uint64_t v111 = v162;
      sub_251B8E790(*(void *)(v103 + 48) + *(void *)(v166 + 72) * v106, v162, type metadata accessor for StaticAccessory);
      sub_251B8E64C(v111, v109, type metadata accessor for StaticAccessory);
      uint64_t v112 = v164;
      sub_251B8E790(v109, v164, type metadata accessor for StaticAccessory);
      uint64_t v113 = v181;
      *uint64_t v181 = 0;
      v113[1] = 0;
      uint64_t v114 = (char *)v37 + *(int *)(v85 + 32);
      uint64_t v115 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v115 - 8) + 56))(v114, 1, 1, v115);
      uint64_t v116 = v165;
      sub_251B8E790(v112, v165, type metadata accessor for StaticAccessory);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9EF38);
      unint64_t v117 = (uint64_t *)swift_allocObject();
      v117[5] = v110;
      v117[6] = sub_251B8E2F0(&qword_269B9E288, (void (*)(uint64_t))type metadata accessor for StaticAccessory);
      uint64_t v118 = __swift_allocate_boxed_opaque_existential_1(v117 + 2);
      sub_251B8E64C(v116, (uint64_t)v118, type metadata accessor for StaticAccessory);
      sub_251B8E7F8(v112, type metadata accessor for StaticAccessory);
      *uint64_t v37 = v117;
      v37[1] = (uint64_t *)v110;
      sub_251B8E64C((uint64_t)v37, v183, (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer);
      sub_251B8E7F8(v109, type metadata accessor for StaticAccessory);
      uint64_t v119 = v195;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_251A3E6B0(0, *(void *)(v119 + 16) + 1, 1);
        uint64_t v119 = v195;
      }
      unint64_t v121 = *(void *)(v119 + 16);
      unint64_t v120 = *(void *)(v119 + 24);
      uint64_t v85 = v189;
      uint64_t v103 = v175;
      if (v121 >= v120 >> 1)
      {
        sub_251A3E6B0(v120 > 1, v121 + 1, 1);
        uint64_t v119 = v195;
      }
      *(void *)(v119 + 16) = v121 + 1;
      sub_251B8E64C(v183, v119+ ((*(unsigned __int8 *)(v188 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v188 + 80))+ *(void *)(v188 + 72) * v121, (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer);
      uint64_t v122 = sub_251A53F5C(v106, v185, 0, v103);
      uint64_t v106 = v122;
      char v108 = v123 & 1;
      if (!--v104)
      {
        sub_251A4ECE4(v122, v105, v108);
        swift_release();
        uint64_t v102 = v178;
        uint64_t v61 = MEMORY[0x263F8EE78];
        goto LABEL_38;
      }
    }
LABEL_64:
    __break(1u);
LABEL_65:
    __break(1u);
    goto LABEL_66;
  }
  swift_release();
  uint64_t v119 = MEMORY[0x263F8EE78];
LABEL_38:
  v102[5] = v119;
  uint64_t v124 = v168;
  int64_t v125 = *(void *)(v168 + 16);
  if (v125)
  {
    uint64_t v195 = v61;
    sub_251A3E6B0(0, v125, 0);
    uint64_t v126 = sub_251A53EB8(v124);
    uint64_t v128 = v127;
    char v130 = v129 & 1;
    uint64_t v185 = v124 + 56;
    uint64_t v184 = (uint64_t *)(v37 + 2);
    uint64_t v131 = (uint64_t)v159;
    while ((v130 & 1) == 0)
    {
      if (v126 < 0 || v126 >= 1 << *(unsigned char *)(v124 + 32)) {
        goto LABEL_60;
      }
      if (((*(void *)(v185 + (((unint64_t)v126 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v126) & 1) == 0) {
        goto LABEL_61;
      }
      if (*(_DWORD *)(v124 + 36) != v128) {
        goto LABEL_62;
      }
      uint64_t v132 = v85;
      uint64_t v133 = v156;
      sub_251B8E790(*(void *)(v124 + 48) + *(void *)(v160 + 72) * v126, v156, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v134 = v133;
      uint64_t v135 = v157;
      sub_251B8E64C(v134, v157, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v136 = v158;
      sub_251B8E790(v135, v158, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v137 = v184;
      *uint64_t v184 = 0;
      v137[1] = 0;
      uint64_t v138 = (char *)v37 + *(int *)(v132 + 32);
      uint64_t v139 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v139 - 8) + 56))(v138, 1, 1, v139);
      sub_251B8E790(v136, v131, (uint64_t (*)(void))type metadata accessor for StaticService);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9EF40);
      uint64_t v140 = (uint64_t *)swift_allocObject();
      uint64_t v141 = v161;
      v140[5] = v161;
      v140[6] = sub_251B8E2F0(&qword_269B9E270, (void (*)(uint64_t))type metadata accessor for StaticService);
      uint64_t v142 = __swift_allocate_boxed_opaque_existential_1(v140 + 2);
      sub_251B8E64C(v131, (uint64_t)v142, (uint64_t (*)(void))type metadata accessor for StaticService);
      sub_251B8E7F8(v136, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t *v187 = v140;
      v187[1] = (uint64_t *)v141;
      uint64_t v37 = v187;
      sub_251B8E64C((uint64_t)v187, v182, (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer);
      sub_251B8E7F8(v135, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v143 = v195;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_251A3E6B0(0, *(void *)(v143 + 16) + 1, 1);
        uint64_t v143 = v195;
      }
      unint64_t v145 = *(void *)(v143 + 16);
      unint64_t v144 = *(void *)(v143 + 24);
      uint64_t v85 = v189;
      uint64_t v124 = v168;
      if (v145 >= v144 >> 1)
      {
        sub_251A3E6B0(v144 > 1, v145 + 1, 1);
        uint64_t v143 = v195;
      }
      *(void *)(v143 + 16) = v145 + 1;
      sub_251B8E64C(v182, v143+ ((*(unsigned __int8 *)(v188 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v188 + 80))+ *(void *)(v188 + 72) * v145, (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer);
      uint64_t v146 = sub_251A53F5C(v126, v128, 0, v124);
      uint64_t v126 = v146;
      uint64_t v128 = v147;
      char v130 = v148 & 1;
      if (!--v125)
      {
        sub_251A4ECE4(v146, v147, v130);
        swift_release();
        uint64_t v102 = v178;
        goto LABEL_52;
      }
    }
    goto LABEL_65;
  }
  swift_release();
  uint64_t v143 = MEMORY[0x263F8EE78];
LABEL_52:
  v102[6] = v143;
  uint64_t v149 = (uint64_t)v102;
  uint64_t v150 = v155;
  uint64_t v195 = sub_251B84288(v149, (uint64_t)&v196);
  swift_bridgeObjectRetain();
  sub_251B8A740(&v195, (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer, (uint64_t (*)(uint64_t))sub_251ECDD28, sub_251B8A804);
  if (!v150)
  {
    swift_bridgeObjectRelease();
    uint64_t v151 = v195;
    uint64_t v195 = v186;
    sub_251ED7920(v151);
    uint64_t v152 = v195;
    swift_bridgeObjectRelease();
    return v152;
  }
LABEL_66:
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_251B88900(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F240);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a2 + *(int *)(type metadata accessor for StateSnapshot(0) + 32));
  if (*(void *)(v7 + 16)
    && (uint64_t v8 = type metadata accessor for StaticService(), v9 = sub_2519FE584(a1 + *(int *)(v8 + 44)), (v10 & 1) != 0))
  {
    unint64_t v11 = v9;
    uint64_t v12 = *(void *)(v7 + 56);
    uint64_t v13 = type metadata accessor for StaticAccessory(0);
    uint64_t v14 = *(void *)(v13 - 8);
    sub_251B8E790(v12 + *(void *)(v14 + 72) * v11, (uint64_t)v6, type metadata accessor for StaticAccessory);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v6, 0, 1, v13);
    uint64_t v15 = 0;
  }
  else
  {
    uint64_t v16 = type metadata accessor for StaticAccessory(0);
    uint64_t v15 = 1;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v6, 1, 1, v16);
  }
  sub_251A1B064((uint64_t)v6, &qword_26B21F240);
  return v15;
}

unint64_t StateSnapshot.allRecommendedWidgetTileInfos.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9EF10);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v55 = (uint64_t **)((char *)v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v54 = type metadata accessor for AnyTileInfoBearer();
  uint64_t v3 = *(void *)(v54 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v54);
  uint64_t v53 = (uint64_t)v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v47 = (uint64_t)v45 - v7;
  MEMORY[0x270FA5388](v6);
  unint64_t v9 = (char *)v45 - v8;
  uint64_t v10 = StateSnapshot.allWidgetTileInfos.getter();
  int64_t v11 = *(void *)(v10 + 16);
  uint64_t v48 = v3;
  if (v11)
  {
    uint64_t v46 = v0;
    v56[0] = MEMORY[0x263F8EE78];
    sub_251A3E084(0, v11, 0);
    unint64_t v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    v45[1] = v10;
    uint64_t v13 = v10 + v12;
    uint64_t v14 = sub_251F34DA0();
    uint64_t v52 = v14;
    uint64_t v15 = *(void *)(v14 - 8);
    uint64_t v51 = *(void *)(v15 + 64);
    uint64_t v16 = *(void *)(v3 + 72);
    uint64_t v49 = v15 + 32;
    uint64_t v50 = v16;
    uint64_t v17 = v56[0];
    do
    {
      MEMORY[0x270FA5388](v14);
      uint64_t v19 = (char *)v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_251B8E790(v13, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer);
      __swift_project_boxed_opaque_existential_1((void *)(*(void *)v9 + 16), *(void *)(*(void *)v9 + 40));
      sub_251F36420();
      sub_251B8E7F8((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_251A3E084(0, *(void *)(v17 + 16) + 1, 1);
        uint64_t v17 = v56[0];
      }
      unint64_t v21 = *(void *)(v17 + 16);
      unint64_t v20 = *(void *)(v17 + 24);
      if (v21 >= v20 >> 1)
      {
        sub_251A3E084(v20 > 1, v21 + 1, 1);
        uint64_t v17 = v56[0];
      }
      *(void *)(v17 + 16) = v21 + 1;
      uint64_t v14 = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v15 + 32))(v17+ ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))+ *(void *)(v15 + 72) * v21, v19, v52);
      v56[0] = v17;
      v13 += v50;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
    uint64_t v0 = v46;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v17 = MEMORY[0x263F8EE78];
  }
  uint64_t v22 = sub_251EE04F8(v17);
  swift_bridgeObjectRelease();
  v56[0] = *(void *)(v0 + *(int *)(type metadata accessor for StateSnapshot(0) + 68));
  swift_bridgeObjectRetain_n();
  sub_251B8A740(v56, (uint64_t (*)(void))type metadata accessor for StaticUserActionPrediction, (uint64_t (*)(uint64_t))sub_251ECDD3C, sub_251B8B4E0);
  uint64_t v23 = swift_bridgeObjectRelease();
  uint64_t v24 = v56[0];
  MEMORY[0x270FA5388](v23);
  v45[-2] = v0;
  uint64_t v25 = sub_251A52774((void (*)(long long *__return_ptr, uint64_t))sub_251B8E338, (uint64_t)&v45[-4], v24);
  swift_release();
  uint64_t v26 = sub_251B8D214((uint64_t)v25, v22);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v52 = v26;
  uint64_t v27 = *(void *)(v26 + 16);
  if (v27)
  {
    uint64_t v28 = v52 + 32;
    uint64_t v29 = (void (**)(uint64_t **, void, uint64_t, uint64_t))(v48 + 56);
    uint64_t v30 = (unsigned int (**)(uint64_t **, uint64_t, uint64_t))(v48 + 48);
    unint64_t v31 = MEMORY[0x263F8EE78];
    do
    {
      sub_251A1A4EC(v28, (uint64_t)v56);
      uint64_t v32 = v57;
      uint64_t v33 = v58;
      uint64_t v34 = __swift_project_boxed_opaque_existential_1(v56, v57);
      MEMORY[0x270FA5388](v34);
      uint64_t v36 = (char *)v45 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v37 + 16))(v36);
      uint64_t v38 = v55;
      AnyTileInfoBearer.init<A>(_:)((uint64_t)v36, v32, v33, v55);
      uint64_t v39 = v54;
      (*v29)(v38, 0, 1, v54);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v56);
      if ((*v30)(v38, 1, v39) == 1)
      {
        sub_251A1B064((uint64_t)v38, &qword_269B9EF10);
      }
      else
      {
        uint64_t v40 = (uint64_t)v38;
        uint64_t v41 = v47;
        sub_251B8E64C(v40, v47, (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer);
        sub_251B8E64C(v41, v53, (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v31 = sub_251F1027C(0, *(void *)(v31 + 16) + 1, 1, v31);
        }
        unint64_t v43 = *(void *)(v31 + 16);
        unint64_t v42 = *(void *)(v31 + 24);
        if (v43 >= v42 >> 1) {
          unint64_t v31 = sub_251F1027C(v42 > 1, v43 + 1, 1, v31);
        }
        *(void *)(v31 + 16) = v43 + 1;
        sub_251B8E64C(v53, v31+ ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80))+ *(void *)(v48 + 72) * v43, (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer);
      }
      v28 += 40;
      --v27;
    }
    while (v27);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  return v31;
}

uint64_t sub_251B8916C(uint64_t a1, uint64_t a2)
{
  if (swift_isClassType()) {
    uint64_t v3 = a2;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v3)
  {
    return __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EBB0);
  }
  else
  {
    return MEMORY[0x270F9F4F8](0, a2);
  }
}

uint64_t sub_251B891DC(uint64_t isStackAllocationSafe, uint64_t (*a2)(char *, unint64_t, uint64_t))
{
  uint64_t v4 = isStackAllocationSafe;
  v11[1] = *MEMORY[0x263EF8340];
  char v5 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v6 = (unint64_t)((1 << v5) + 63) >> 6;
  size_t v7 = 8 * v6;
  if ((v5 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    bzero((char *)v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    uint64_t v8 = a2((char *)v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v6, v4);
    swift_release();
    if (v2) {
      swift_willThrow();
    }
  }
  else
  {
    unint64_t v9 = (void *)swift_slowAlloc();
    bzero(v9, v7);
    uint64_t v8 = a2((char *)v9, v6, v4);
    swift_release();
    MEMORY[0x2533AC760](v9, -1, -1);
  }
  return v8;
}

uint64_t sub_251B89354(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v50 = a2;
  uint64_t v51 = a1;
  unint64_t v6 = (int *)type metadata accessor for StaticAccessory(0);
  uint64_t v56 = *((void *)v6 - 1);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  unint64_t v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v7);
  unint64_t v12 = (char *)&v49 - v11;
  int64_t v13 = 0;
  uint64_t v57 = a3;
  uint64_t v14 = *(void *)(a3 + 56);
  uint64_t v52 = 0;
  uint64_t v53 = a3 + 56;
  uint64_t v15 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  int64_t v54 = (unint64_t)(v15 + 63) >> 6;
  while (v17)
  {
    unint64_t v18 = __clz(__rbit64(v17));
    uint64_t v19 = (v17 - 1) & v17;
    int64_t v59 = v13;
    unint64_t v20 = v18 | (v13 << 6);
LABEL_18:
    uint64_t v25 = *(void *)(v57 + 48);
    uint64_t v26 = *(void *)(v56 + 72);
    unint64_t v55 = v20;
    sub_251B8E790(v25 + v26 * v20, (uint64_t)v12, type metadata accessor for StaticAccessory);
    int v27 = v12[v6[14]];
    int v28 = v12[v6[25]];
    int v29 = v12[v6[18]];
    sub_251B8E790((uint64_t)v12, (uint64_t)v9, type metadata accessor for StaticAccessory);
    unint64_t v58 = v19;
    if (v29 == 1)
    {
      uint64_t v30 = swift_bridgeObjectRetain();
      uint64_t v31 = sub_251B83C30(v30);
      uint64_t v32 = sub_251EE10DC(v31);
      swift_bridgeObjectRelease();
      unint64_t v33 = *(void *)(v32 + 16);
      swift_bridgeObjectRelease();
      BOOL v34 = v33 > 1;
      uint64_t v35 = v6;
      char v36 = v34;
    }
    else
    {
      uint64_t v35 = v6;
      char v36 = 0;
    }
    uint64_t v37 = v9;
    sub_251B8E7F8((uint64_t)v9, type metadata accessor for StaticAccessory);
    uint64_t v38 = v35;
    uint64_t v39 = swift_bridgeObjectRetain();
    uint64_t v40 = sub_251B83C30(v39);
    uint64_t v41 = v4;
    uint64_t v42 = sub_251EE10DC(v40);
    swift_bridgeObjectRelease();
    uint64_t v43 = sub_251B891DC(v42, (uint64_t (*)(char *, unint64_t, uint64_t))sub_251B897B0);
    uint64_t v4 = v41;
    uint64_t v44 = *(void *)(v43 + 16);
    swift_release();
    if (((v27 | v28) & 1) != 0 || (v36 & 1) != 0 || v44)
    {
      uint64_t result = sub_251B8E7F8((uint64_t)v12, type metadata accessor for StaticAccessory);
      unint64_t v6 = v38;
      unint64_t v9 = v37;
      int64_t v13 = v59;
      unint64_t v17 = v58;
    }
    else
    {
      if (qword_269B9C490 != -1) {
        swift_once();
      }
      uint64_t v45 = qword_269BF31F8;
      uint64_t v46 = sub_251B8365C();
      LOBYTE(v45) = sub_251A7FE84(v46, v45);
      swift_bridgeObjectRelease();
      uint64_t result = sub_251B8E7F8((uint64_t)v12, type metadata accessor for StaticAccessory);
      unint64_t v6 = v38;
      unint64_t v9 = v37;
      int64_t v13 = v59;
      unint64_t v17 = v58;
      if ((v45 & 1) == 0)
      {
        *(unint64_t *)((char *)v51 + ((v55 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v55;
        BOOL v21 = __OFADD__(v52++, 1);
        if (v21) {
          goto LABEL_39;
        }
      }
    }
  }
  BOOL v21 = __OFADD__(v13, 1);
  int64_t v22 = v13 + 1;
  if (v21)
  {
    __break(1u);
    goto LABEL_38;
  }
  if (v22 >= v54) {
    goto LABEL_36;
  }
  unint64_t v23 = *(void *)(v53 + 8 * v22);
  if (v23)
  {
LABEL_17:
    uint64_t v19 = (v23 - 1) & v23;
    int64_t v59 = v22;
    unint64_t v20 = __clz(__rbit64(v23)) + (v22 << 6);
    goto LABEL_18;
  }
  int64_t v24 = v22 + 1;
  if (v22 + 1 >= v54) {
    goto LABEL_36;
  }
  unint64_t v23 = *(void *)(v53 + 8 * v24);
  if (v23) {
    goto LABEL_16;
  }
  int64_t v24 = v22 + 2;
  if (v22 + 2 >= v54) {
    goto LABEL_36;
  }
  unint64_t v23 = *(void *)(v53 + 8 * v24);
  if (v23) {
    goto LABEL_16;
  }
  int64_t v24 = v22 + 3;
  if (v22 + 3 >= v54)
  {
LABEL_36:
    uint64_t v47 = v50;
    uint64_t v48 = v57;
    swift_retain();
    return sub_251F1BAE0(v51, v47, v52, v48);
  }
  unint64_t v23 = *(void *)(v53 + 8 * v24);
  if (v23)
  {
LABEL_16:
    int64_t v22 = v24;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v22 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v22 >= v54) {
      goto LABEL_36;
    }
    unint64_t v23 = *(void *)(v53 + 8 * v22);
    ++v24;
    if (v23) {
      goto LABEL_17;
    }
  }
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_251B897B0(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v41 = a2;
  uint64_t v42 = a1;
  uint64_t v4 = type metadata accessor for StaticService();
  uint64_t v52 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v57 = (uint64_t)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  unint64_t v9 = (char *)&v41 - v8;
  uint64_t result = MEMORY[0x270FA5388](v7);
  unint64_t v12 = (char *)&v41 - v11;
  int64_t v13 = 0;
  uint64_t v53 = a3;
  uint64_t v14 = *(void *)(a3 + 56);
  uint64_t v43 = 0;
  uint64_t v44 = a3 + 56;
  uint64_t v15 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  int64_t v45 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v46 = v9;
  uint64_t v51 = "00-8000-0026BB765291";
  uint64_t v48 = (char *)&v41 - v11;
  unint64_t v49 = 0x8000000251F65130;
  unint64_t v18 = &qword_26B21FF90;
  uint64_t v47 = result;
  while (1)
  {
    if (v17)
    {
      unint64_t v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_21;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v21 >= v45) {
      goto LABEL_32;
    }
    unint64_t v22 = *(void *)(v44 + 8 * v21);
    ++v13;
    if (!v22)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v45) {
        goto LABEL_32;
      }
      unint64_t v22 = *(void *)(v44 + 8 * v13);
      if (!v22)
      {
        int64_t v13 = v21 + 2;
        if (v21 + 2 >= v45) {
          goto LABEL_32;
        }
        unint64_t v22 = *(void *)(v44 + 8 * v13);
        if (!v22) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v17 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_21:
    sub_251B8E790(*(void *)(v53 + 48) + *(void *)(v52 + 72) * v20, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticService);
    char v59 = v12[*(int *)(v4 + 88)];
    if (ServiceKind.rawValue.getter() == 0xD000000000000024 && v24 == v49)
    {
      swift_bridgeObjectRelease();
      sub_251B8E790((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticService);
LABEL_25:
      unint64_t v50 = v20;
      unint64_t v54 = v17;
      int64_t v55 = v13;
      uint64_t v26 = (uint64_t)&v9[*(int *)(v4 + 100)];
      uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(v18);
      uint64_t v56 = &v41;
      uint64_t v28 = *(void *)(*(void *)(v27 - 8) + 64);
      MEMORY[0x270FA5388](v27 - 8);
      unint64_t v29 = (v28 + 15) & 0xFFFFFFFFFFFFFFF0;
      sub_251A1E280(v26, (uint64_t)&v41 - v29);
      uint64_t v30 = sub_251F34DA0();
      uint64_t v31 = v18;
      uint64_t v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 48);
      int v58 = v32((char *)&v41 - v29, 1, v30);
      uint64_t v33 = v57;
      BOOL v34 = v31;
      sub_251A1B064((uint64_t)&v41 - v29, v31);
      sub_251B8E64C((uint64_t)v9, v33, (uint64_t (*)(void))type metadata accessor for StaticService);
      if (v58 == 1)
      {
        uint64_t v56 = &v41;
        uint64_t v35 = v47;
        uint64_t v36 = v57;
        uint64_t v37 = MEMORY[0x270FA5388](v57 + *(int *)(v47 + 132));
        sub_251A1E280(v37, (uint64_t)&v41 - v29);
        sub_251B8E7F8(v36, (uint64_t (*)(void))type metadata accessor for StaticService);
        int v38 = v32((char *)&v41 - v29, 1, v30);
        sub_251A1B064((uint64_t)&v41 - v29, v31);
        unint64_t v12 = v48;
        uint64_t result = sub_251B8E7F8((uint64_t)v48, (uint64_t (*)(void))type metadata accessor for StaticService);
        uint64_t v4 = v35;
        unint64_t v9 = v46;
        unint64_t v18 = v34;
        unint64_t v17 = v54;
        int64_t v13 = v55;
        if (v38 != 1) {
          goto LABEL_29;
        }
      }
      else
      {
        sub_251B8E7F8(v57, (uint64_t (*)(void))type metadata accessor for StaticService);
        unint64_t v12 = v48;
        uint64_t result = sub_251B8E7F8((uint64_t)v48, (uint64_t (*)(void))type metadata accessor for StaticService);
        unint64_t v9 = v46;
        uint64_t v4 = v47;
        unint64_t v18 = v34;
        unint64_t v17 = v54;
        int64_t v13 = v55;
LABEL_29:
        *(unint64_t *)((char *)v42 + ((v50 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v50;
        if (__OFADD__(v43++, 1))
        {
          __break(1u);
LABEL_32:
          uint64_t v40 = v53;
          swift_retain();
          return sub_251F1BD94(v42, v41, v43, v40);
        }
      }
    }
    else
    {
      char v25 = sub_251F36B10();
      swift_bridgeObjectRelease();
      sub_251B8E790((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticService);
      if (v25) {
        goto LABEL_25;
      }
      sub_251B8E7F8((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t result = sub_251B8E7F8((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticService);
    }
  }
  int64_t v23 = v21 + 3;
  if (v23 >= v45) {
    goto LABEL_32;
  }
  unint64_t v22 = *(void *)(v44 + 8 * v23);
  if (v22)
  {
    int64_t v13 = v23;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v13 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v13 >= v45) {
      goto LABEL_32;
    }
    unint64_t v22 = *(void *)(v44 + 8 * v13);
    ++v23;
    if (v22) {
      goto LABEL_20;
    }
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_251B89D4C(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v35 = a2;
  uint64_t v36 = a1;
  uint64_t v38 = type metadata accessor for StaticService();
  uint64_t v41 = *(void *)(v38 - 8);
  uint64_t result = MEMORY[0x270FA5388](v38);
  uint64_t v45 = (uint64_t)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = 0;
  int64_t v6 = 0;
  uint64_t v42 = a3;
  uint64_t v9 = *(void *)(a3 + 56);
  uint64_t v8 = a3 + 56;
  uint64_t v7 = v9;
  uint64_t v10 = 1 << *(unsigned char *)(v8 - 24);
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v7;
  uint64_t v39 = v8;
  int64_t v40 = (unint64_t)(v10 + 63) >> 6;
  while (v12)
  {
    unint64_t v13 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    int64_t v44 = v6;
    unint64_t v14 = v13 | (v6 << 6);
LABEL_22:
    uint64_t v19 = *(void *)(v42 + 48);
    uint64_t v20 = *(void *)(v41 + 72);
    unint64_t v43 = v14;
    sub_251B8E790(v19 + v20 * v14, v45, (uint64_t (*)(void))type metadata accessor for StaticService);
    if (qword_269B9C490 != -1) {
      swift_once();
    }
    uint64_t v21 = qword_269BF31F8;
    if (!*(void *)(qword_269BF31F8 + 16)) {
      goto LABEL_5;
    }
    char v22 = *(unsigned char *)(v45 + *(int *)(v38 + 88));
    sub_251F36CA0();
    char v47 = v22;
    ServiceKind.rawValue.getter();
    sub_251F357B0();
    swift_bridgeObjectRelease();
    uint64_t v23 = sub_251F36D00();
    uint64_t v24 = -1 << *(unsigned char *)(v21 + 32);
    unint64_t v25 = v23 & ~v24;
    if ((*(void *)(v21 + 56 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25))
    {
      uint64_t v26 = ~v24;
      while (1)
      {
        char v46 = *(unsigned char *)(*(void *)(v21 + 48) + v25);
        char v47 = v22;
        unint64_t v27 = ServiceKind.rawValue.getter();
        uint64_t v29 = v28;
        if (v27 == ServiceKind.rawValue.getter() && v29 == v30) {
          break;
        }
        char v32 = sub_251F36B10();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v32) {
          goto LABEL_35;
        }
        unint64_t v25 = (v25 + 1) & v26;
        if (((*(void *)(v21 + 56 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25) & 1) == 0) {
          goto LABEL_5;
        }
      }
      swift_bridgeObjectRelease_n();
LABEL_35:
      uint64_t result = sub_251B8E7F8(v45, (uint64_t (*)(void))type metadata accessor for StaticService);
      int64_t v6 = v44;
      *(unint64_t *)((char *)v36 + ((v43 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v43;
      if (__OFADD__(v37++, 1)) {
        goto LABEL_40;
      }
    }
    else
    {
LABEL_5:
      uint64_t result = sub_251B8E7F8(v45, (uint64_t (*)(void))type metadata accessor for StaticService);
      int64_t v6 = v44;
    }
  }
  int64_t v15 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  if (v15 >= v40) {
    goto LABEL_38;
  }
  unint64_t v16 = *(void *)(v39 + 8 * v15);
  int64_t v17 = v6 + 1;
  if (v16) {
    goto LABEL_21;
  }
  int64_t v17 = v6 + 2;
  if (v6 + 2 >= v40) {
    goto LABEL_38;
  }
  unint64_t v16 = *(void *)(v39 + 8 * v17);
  if (v16) {
    goto LABEL_21;
  }
  int64_t v17 = v6 + 3;
  if (v6 + 3 >= v40) {
    goto LABEL_38;
  }
  unint64_t v16 = *(void *)(v39 + 8 * v17);
  if (v16)
  {
LABEL_21:
    unint64_t v12 = (v16 - 1) & v16;
    int64_t v44 = v17;
    unint64_t v14 = __clz(__rbit64(v16)) + (v17 << 6);
    goto LABEL_22;
  }
  uint64_t v18 = v6 + 4;
  if (v6 + 4 >= v40)
  {
LABEL_38:
    uint64_t v34 = v42;
    swift_retain();
    return sub_251F1BD94(v36, v35, v37, v34);
  }
  unint64_t v16 = *(void *)(v39 + 8 * v18);
  if (v16)
  {
    int64_t v17 = v6 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v17 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v17 >= v40) {
      goto LABEL_38;
    }
    unint64_t v16 = *(void *)(v39 + 8 * v17);
    ++v18;
    if (v16) {
      goto LABEL_21;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_251B8A154(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v26 = a2;
  unint64_t v27 = a1;
  uint64_t v29 = type metadata accessor for StaticServiceGroup();
  uint64_t v4 = *(void *)(v29 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v29);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v26 - v9;
  uint64_t v28 = 0;
  int64_t v11 = 0;
  uint64_t v12 = *(void *)(a3 + 56);
  uint64_t v30 = a3 + 56;
  uint64_t v13 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & v12;
  int64_t v31 = (unint64_t)(v13 + 63) >> 6;
  while (v15)
  {
    unint64_t v16 = __clz(__rbit64(v15));
    v15 &= v15 - 1;
    unint64_t v17 = v16 | (v11 << 6);
LABEL_18:
    sub_251B8E790(*(void *)(a3 + 48) + *(void *)(v4 + 72) * v17, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
    char v21 = StaticServiceGroup.canBeToggled.getter();
    sub_251B8E790((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
    if (v21)
    {
      uint64_t v22 = swift_bridgeObjectRetain();
      uint64_t v23 = *(void *)(sub_251EDC188(v22) + 16);
      swift_bridgeObjectRelease();
      sub_251B8E7F8((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
      uint64_t result = sub_251B8E7F8((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
      if (v23)
      {
        *(unint64_t *)((char *)v27 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
        BOOL v18 = __OFADD__(v28++, 1);
        if (v18) {
          goto LABEL_30;
        }
      }
    }
    else
    {
      sub_251B8E7F8((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
      uint64_t result = sub_251B8E7F8((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
    }
  }
  BOOL v18 = __OFADD__(v11++, 1);
  if (v18)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v11 >= v31) {
    goto LABEL_27;
  }
  unint64_t v19 = *(void *)(v30 + 8 * v11);
  if (v19)
  {
LABEL_17:
    unint64_t v15 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v11 << 6);
    goto LABEL_18;
  }
  int64_t v20 = v11 + 1;
  if (v11 + 1 >= v31) {
    goto LABEL_27;
  }
  unint64_t v19 = *(void *)(v30 + 8 * v20);
  if (v19) {
    goto LABEL_16;
  }
  int64_t v20 = v11 + 2;
  if (v11 + 2 >= v31) {
    goto LABEL_27;
  }
  unint64_t v19 = *(void *)(v30 + 8 * v20);
  if (v19) {
    goto LABEL_16;
  }
  int64_t v20 = v11 + 3;
  if (v11 + 3 >= v31)
  {
LABEL_27:
    uint64_t v24 = v26;
    uint64_t v25 = v28;
    swift_retain();
    return sub_251F1C928(v27, v24, v25, a3);
  }
  unint64_t v19 = *(void *)(v30 + 8 * v20);
  if (v19)
  {
LABEL_16:
    int64_t v11 = v20;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v11 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v11 >= v31) {
      goto LABEL_27;
    }
    unint64_t v19 = *(void *)(v30 + 8 * v11);
    ++v20;
    if (v19) {
      goto LABEL_17;
    }
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_251B8A478(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v22 = a2;
  uint64_t v23 = a1;
  uint64_t v4 = type metadata accessor for StaticActionSet();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t result = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = 0;
  int64_t v9 = 0;
  uint64_t v10 = *(void *)(a3 + 56);
  uint64_t v25 = a3 + 56;
  uint64_t v11 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v10;
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v9 << 6);
      goto LABEL_5;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v18 >= v14) {
      goto LABEL_24;
    }
    unint64_t v19 = *(void *)(v25 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v14) {
        goto LABEL_24;
      }
      unint64_t v19 = *(void *)(v25 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v14) {
          goto LABEL_24;
        }
        unint64_t v19 = *(void *)(v25 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v13 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_5:
    sub_251B8E790(*(void *)(a3 + 48) + *(void *)(v5 + 72) * v16, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
    int v17 = v8[*(int *)(v4 + 44)];
    uint64_t result = sub_251B8E7F8((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
    if (v17 == 1)
    {
      *(unint64_t *)((char *)v23 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      if (__OFADD__(v24++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        return sub_251F1CD0C(v23, v22, v24, a3);
      }
    }
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v14) {
    goto LABEL_24;
  }
  unint64_t v19 = *(void *)(v25 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v14) {
      goto LABEL_24;
    }
    unint64_t v19 = *(void *)(v25 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_251B8A6EC(uint64_t *a1)
{
  return sub_251B8A740(a1, (uint64_t (*)(void))type metadata accessor for StaticUserActionPrediction, (uint64_t (*)(uint64_t))sub_251ECDD3C, sub_251B8B4E0);
}

uint64_t sub_251B8A740(uint64_t *a1, uint64_t (*a2)(void), uint64_t (*a3)(uint64_t), uint64_t (*a4)(void *))
{
  uint64_t v7 = *(void *)(a2(0) - 8);
  uint64_t v8 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v8 = a3(v8);
  }
  uint64_t v9 = *(void *)(v8 + 16);
  v11[0] = v8 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  v11[1] = v9;
  uint64_t result = a4(v11);
  *a1 = v8;
  return result;
}

uint64_t sub_251B8A804(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v151 = type metadata accessor for AnyTileInfoBearer();
  uint64_t v4 = *(void *)(v151 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v151);
  uint64_t v145 = (uint64_t)&v140 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v157 = (uint64_t)&v140 - v8;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v155 = (uint64_t)&v140 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v163 = (uint64_t)&v140 - v11;
  uint64_t v12 = a1[1];
  uint64_t result = sub_251F36AA0();
  if (result >= v12)
  {
    if (v12 < 0) {
      goto LABEL_137;
    }
    if (v12) {
      return sub_251B8BFA4(0, v12, 1, a1);
    }
    return result;
  }
  if (v12 >= 0) {
    uint64_t v14 = v12;
  }
  else {
    uint64_t v14 = v12 + 1;
  }
  if (v12 < -1) {
    goto LABEL_145;
  }
  uint64_t v142 = result;
  uint64_t v150 = v4;
  if (v12 < 2)
  {
    int64_t v18 = (char *)MEMORY[0x263F8EE78];
    unint64_t v148 = MEMORY[0x263F8EE78]
         + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v141 = MEMORY[0x263F8EE78];
    if (v12 != 1)
    {
      unint64_t v20 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_103:
      if (v20 >= 2)
      {
        uint64_t v132 = *a1;
        do
        {
          unint64_t v133 = v20 - 2;
          if (v20 < 2) {
            goto LABEL_132;
          }
          if (!v132) {
            goto LABEL_144;
          }
          uint64_t v134 = v18;
          uint64_t v135 = v18 + 32;
          uint64_t v136 = *(void *)&v18[16 * v133 + 32];
          uint64_t v137 = *(void *)&v18[16 * v20 + 24];
          sub_251B8C5CC(v132 + *(void *)(v150 + 72) * v136, v132 + *(void *)(v150 + 72) * *(void *)&v135[16 * v20 - 16], v132 + *(void *)(v150 + 72) * v137, v148);
          if (v2) {
            break;
          }
          if (v137 < v136) {
            goto LABEL_133;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v134 = sub_251ECDC38((uint64_t)v134);
          }
          if (v133 >= *((void *)v134 + 2)) {
            goto LABEL_134;
          }
          uint64_t v138 = &v134[16 * v133 + 32];
          *(void *)uint64_t v138 = v136;
          *((void *)v138 + 1) = v137;
          unint64_t v139 = *((void *)v134 + 2);
          if (v20 > v139) {
            goto LABEL_135;
          }
          int64_t v18 = v134;
          memmove(&v134[16 * v20 + 16], &v134[16 * v20 + 32], 16 * (v139 - v20));
          *((void *)v134 + 2) = v139 - 1;
          unint64_t v20 = v139 - 1;
        }
        while (v139 > 2);
      }
LABEL_114:
      swift_bridgeObjectRelease();
      *(void *)(v141 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v15 = v14 >> 1;
    uint64_t v16 = sub_251F35B50();
    *(void *)(v16 + 16) = v15;
    unint64_t v17 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v141 = v16;
    unint64_t v148 = v16 + v17;
  }
  uint64_t v19 = 0;
  int64_t v18 = (char *)MEMORY[0x263F8EE78];
  uint64_t v149 = a1;
  while (1)
  {
    uint64_t v21 = v19 + 1;
    uint64_t v147 = v19;
    if (v19 + 1 >= v12)
    {
      uint64_t v36 = v19 + 1;
    }
    else
    {
      uint64_t v22 = *(void *)(v150 + 72);
      uint64_t v23 = *a1 + v22 * v21;
      uint64_t v24 = *a1;
      uint64_t v144 = v24;
      uint64_t v25 = v163;
      sub_251B8E790(v23, v163, (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer);
      uint64_t v156 = v12;
      uint64_t v26 = v155;
      sub_251B8E790(v24 + v22 * v147, v155, (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer);
      uint64_t v28 = *(void *)(*(void *)v25 + 40);
      uint64_t v27 = *(void *)(*(void *)v25 + 48);
      __swift_project_boxed_opaque_existential_1((void *)(*(void *)v25 + 16), v28);
      uint64_t v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 56))(v28, v27);
      uint64_t v158 = v30;
      uint64_t v161 = v29;
      uint64_t v162 = v30;
      uint64_t v32 = *(void *)(*(void *)v26 + 40);
      uint64_t v31 = *(void *)(*(void *)v26 + 48);
      __swift_project_boxed_opaque_existential_1((void *)(*(void *)v26 + 16), v32);
      uint64_t v159 = (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 56))(v32, v31);
      uint64_t v160 = v33;
      unint64_t v153 = sub_251AE13EC();
      uint64_t v154 = sub_251F36220();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v34 = v26;
      uint64_t v12 = v156;
      sub_251B8E7F8(v34, (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer);
      uint64_t v35 = v25;
      uint64_t v19 = v147;
      sub_251B8E7F8(v35, (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer);
      uint64_t v36 = v19 + 2;
      uint64_t v158 = v22;
      if (v19 + 2 < v12)
      {
        uint64_t v140 = v2;
        uint64_t v143 = v18;
        uint64_t v152 = v22 * v21;
        uint64_t v37 = v144;
        uint64_t v146 = v22 * v36;
        while (1)
        {
          uint64_t v38 = v36;
          BOOL v39 = v154 == -1;
          uint64_t v40 = v163;
          sub_251B8E790(v37 + v146, v163, (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer);
          uint64_t v41 = v155;
          sub_251B8E790(v37 + v152, v155, (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer);
          uint64_t v42 = *(void *)(*(void *)v40 + 40);
          uint64_t v43 = *(void *)(*(void *)v40 + 48);
          __swift_project_boxed_opaque_existential_1((void *)(*(void *)v40 + 16), v42);
          uint64_t v161 = (*(uint64_t (**)(uint64_t, uint64_t))(v43 + 56))(v42, v43);
          uint64_t v162 = v44;
          uint64_t v45 = *(void *)(*(void *)v41 + 40);
          uint64_t v46 = *(void *)(*(void *)v41 + 48);
          __swift_project_boxed_opaque_existential_1((void *)(*(void *)v41 + 16), v45);
          uint64_t v159 = (*(uint64_t (**)(uint64_t, uint64_t))(v46 + 56))(v45, v46);
          uint64_t v160 = v47;
          uint64_t v48 = sub_251F36220();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_251B8E7F8(v41, (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer);
          sub_251B8E7F8(v40, (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer);
          if (v39 == (v48 != -1)) {
            break;
          }
          uint64_t v36 = v38 + 1;
          uint64_t v22 = v158;
          v37 += v158;
          if (v156 == v38 + 1)
          {
            uint64_t v12 = v156;
            uint64_t v36 = v156;
            int64_t v18 = v143;
            uint64_t v2 = v140;
            uint64_t v19 = v147;
            goto LABEL_23;
          }
        }
        int64_t v18 = v143;
        uint64_t v36 = v38;
        uint64_t v2 = v140;
        uint64_t v19 = v147;
        uint64_t v12 = v156;
        uint64_t v22 = v158;
      }
LABEL_23:
      a1 = v149;
      if (v154 == -1)
      {
        if (v36 < v19) {
          goto LABEL_140;
        }
        if (v19 < v36)
        {
          uint64_t v143 = v18;
          uint64_t v49 = 0;
          uint64_t v50 = v22 * (v36 - 1);
          uint64_t v51 = v36 * v22;
          uint64_t v52 = v19 * v22;
          do
          {
            if (v19 != v36 + v49 - 1)
            {
              uint64_t v54 = v2;
              uint64_t v55 = v36;
              uint64_t v56 = v144;
              if (!v144) {
                goto LABEL_143;
              }
              unint64_t v57 = v144 + v52;
              uint64_t v154 = v144 + v50;
              sub_251B8E64C(v144 + v52, v145, (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer);
              if (v52 < v50 || v57 >= v56 + v51)
              {
                uint64_t v53 = v154;
                swift_arrayInitWithTakeFrontToBack();
              }
              else
              {
                uint64_t v53 = v154;
                if (v52 != v50) {
                  swift_arrayInitWithTakeBackToFront();
                }
              }
              sub_251B8E64C(v145, v53, (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer);
              uint64_t v36 = v55;
              uint64_t v2 = v54;
              uint64_t v22 = v158;
            }
            ++v19;
            --v49;
            v50 -= v22;
            v51 -= v22;
            v52 += v22;
          }
          while (v19 < v36 + v49);
          a1 = v149;
          int64_t v18 = v143;
          uint64_t v19 = v147;
          uint64_t v12 = v156;
        }
      }
    }
    if (v36 < v12)
    {
      if (__OFSUB__(v36, v19)) {
        goto LABEL_136;
      }
      if (v36 - v19 < v142) {
        break;
      }
    }
LABEL_55:
    if (v36 < v19) {
      goto LABEL_131;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v156 = v36;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      int64_t v18 = sub_251ECD5C4(0, *((void *)v18 + 2) + 1, 1, v18);
    }
    unint64_t v82 = *((void *)v18 + 2);
    unint64_t v81 = *((void *)v18 + 3);
    unint64_t v20 = v82 + 1;
    if (v82 >= v81 >> 1) {
      int64_t v18 = sub_251ECD5C4((char *)(v81 > 1), v82 + 1, 1, v18);
    }
    *((void *)v18 + 2) = v20;
    char v83 = v18 + 32;
    char v84 = &v18[16 * v82 + 32];
    uint64_t v85 = v156;
    *(void *)char v84 = v19;
    *((void *)v84 + 1) = v85;
    if (v82)
    {
      while (1)
      {
        unint64_t v86 = v20 - 1;
        if (v20 >= 4)
        {
          uint64_t v91 = &v83[16 * v20];
          uint64_t v92 = *((void *)v91 - 8);
          uint64_t v93 = *((void *)v91 - 7);
          BOOL v97 = __OFSUB__(v93, v92);
          uint64_t v94 = v93 - v92;
          if (v97) {
            goto LABEL_120;
          }
          uint64_t v96 = *((void *)v91 - 6);
          uint64_t v95 = *((void *)v91 - 5);
          BOOL v97 = __OFSUB__(v95, v96);
          uint64_t v89 = v95 - v96;
          char v90 = v97;
          if (v97) {
            goto LABEL_121;
          }
          unint64_t v98 = v20 - 2;
          unint64_t v99 = &v83[16 * v20 - 32];
          uint64_t v101 = *(void *)v99;
          uint64_t v100 = *((void *)v99 + 1);
          BOOL v97 = __OFSUB__(v100, v101);
          uint64_t v102 = v100 - v101;
          if (v97) {
            goto LABEL_123;
          }
          BOOL v97 = __OFADD__(v89, v102);
          uint64_t v103 = v89 + v102;
          if (v97) {
            goto LABEL_126;
          }
          if (v103 >= v94)
          {
            unint64_t v121 = &v83[16 * v86];
            uint64_t v123 = *(void *)v121;
            uint64_t v122 = *((void *)v121 + 1);
            BOOL v97 = __OFSUB__(v122, v123);
            uint64_t v124 = v122 - v123;
            if (v97) {
              goto LABEL_130;
            }
            BOOL v114 = v89 < v124;
            goto LABEL_92;
          }
        }
        else
        {
          if (v20 != 3)
          {
            uint64_t v115 = *((void *)v18 + 4);
            uint64_t v116 = *((void *)v18 + 5);
            BOOL v97 = __OFSUB__(v116, v115);
            uint64_t v108 = v116 - v115;
            char v109 = v97;
            goto LABEL_86;
          }
          uint64_t v88 = *((void *)v18 + 4);
          uint64_t v87 = *((void *)v18 + 5);
          BOOL v97 = __OFSUB__(v87, v88);
          uint64_t v89 = v87 - v88;
          char v90 = v97;
        }
        if (v90) {
          goto LABEL_122;
        }
        unint64_t v98 = v20 - 2;
        int64_t v104 = &v83[16 * v20 - 32];
        uint64_t v106 = *(void *)v104;
        uint64_t v105 = *((void *)v104 + 1);
        BOOL v107 = __OFSUB__(v105, v106);
        uint64_t v108 = v105 - v106;
        char v109 = v107;
        if (v107) {
          goto LABEL_125;
        }
        uint64_t v110 = &v83[16 * v86];
        uint64_t v112 = *(void *)v110;
        uint64_t v111 = *((void *)v110 + 1);
        BOOL v97 = __OFSUB__(v111, v112);
        uint64_t v113 = v111 - v112;
        if (v97) {
          goto LABEL_128;
        }
        if (__OFADD__(v108, v113)) {
          goto LABEL_129;
        }
        if (v108 + v113 >= v89)
        {
          BOOL v114 = v89 < v113;
LABEL_92:
          if (v114) {
            unint64_t v86 = v98;
          }
          goto LABEL_94;
        }
LABEL_86:
        if (v109) {
          goto LABEL_124;
        }
        unint64_t v117 = &v83[16 * v86];
        uint64_t v119 = *(void *)v117;
        uint64_t v118 = *((void *)v117 + 1);
        BOOL v97 = __OFSUB__(v118, v119);
        uint64_t v120 = v118 - v119;
        if (v97) {
          goto LABEL_127;
        }
        if (v120 < v108) {
          goto LABEL_14;
        }
LABEL_94:
        unint64_t v125 = v86 - 1;
        if (v86 - 1 >= v20)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!*v149) {
          goto LABEL_142;
        }
        uint64_t v126 = v18;
        uint64_t v127 = &v83[16 * v125];
        uint64_t v128 = *(void *)v127;
        char v129 = &v83[16 * v86];
        uint64_t v130 = *((void *)v129 + 1);
        sub_251B8C5CC(*v149 + *(void *)(v150 + 72) * *(void *)v127, *v149 + *(void *)(v150 + 72) * *(void *)v129, *v149 + *(void *)(v150 + 72) * v130, v148);
        if (v2) {
          goto LABEL_114;
        }
        if (v130 < v128) {
          goto LABEL_117;
        }
        if (v86 > *((void *)v126 + 2)) {
          goto LABEL_118;
        }
        *(void *)uint64_t v127 = v128;
        *(void *)&v83[16 * v125 + 8] = v130;
        unint64_t v131 = *((void *)v126 + 2);
        if (v86 >= v131) {
          goto LABEL_119;
        }
        int64_t v18 = v126;
        unint64_t v20 = v131 - 1;
        memmove(&v83[16 * v86], v129 + 16, 16 * (v131 - 1 - v86));
        *((void *)v126 + 2) = v131 - 1;
        if (v131 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v20 = 1;
LABEL_14:
    a1 = v149;
    uint64_t v12 = v149[1];
    uint64_t v19 = v156;
    if (v156 >= v12) {
      goto LABEL_103;
    }
  }
  if (__OFADD__(v19, v142)) {
    goto LABEL_138;
  }
  if (v19 + v142 >= v12) {
    uint64_t v58 = v12;
  }
  else {
    uint64_t v58 = v19 + v142;
  }
  if (v58 >= v19)
  {
    if (v36 != v58)
    {
      uint64_t v143 = v18;
      uint64_t v140 = v2;
      uint64_t v59 = *(void *)(v150 + 72);
      uint64_t v60 = v59 * (v36 - 1);
      uint64_t v152 = v59;
      unint64_t v61 = v36 * v59;
      uint64_t v146 = v58;
      do
      {
        uint64_t v63 = 0;
        uint64_t v156 = v36;
        unint64_t v153 = v61;
        uint64_t v154 = v60;
        while (1)
        {
          uint64_t v64 = *a1;
          uint64_t v158 = v61 + v63;
          uint64_t v65 = v61 + v63 + v64;
          uint64_t v66 = a1;
          uint64_t v67 = v163;
          sub_251B8E790(v65, v163, (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer);
          uint64_t v68 = v60 + v63 + v64;
          uint64_t v69 = v155;
          sub_251B8E790(v68, v155, (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer);
          uint64_t v70 = (void *)(*(void *)v67 + 16);
          uint64_t v71 = *(void *)(*(void *)v67 + 40);
          uint64_t v72 = *(void *)(*(void *)v67 + 48);
          __swift_project_boxed_opaque_existential_1(v70, v71);
          uint64_t v161 = (*(uint64_t (**)(uint64_t, uint64_t))(v72 + 56))(v71, v72);
          uint64_t v162 = v73;
          uint64_t v74 = *(void *)(*(void *)v69 + 40);
          uint64_t v75 = *(void *)(*(void *)v69 + 48);
          __swift_project_boxed_opaque_existential_1((void *)(*(void *)v69 + 16), v74);
          uint64_t v159 = (*(uint64_t (**)(uint64_t, uint64_t))(v75 + 56))(v74, v75);
          uint64_t v160 = v76;
          sub_251AE13EC();
          uint64_t v77 = sub_251F36220();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_251B8E7F8(v69, (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer);
          sub_251B8E7F8(v163, (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer);
          if (v77 != -1) {
            break;
          }
          uint64_t v78 = *v66;
          if (!*v66) {
            goto LABEL_141;
          }
          a1 = v66;
          unint64_t v61 = v153;
          uint64_t v60 = v154;
          uint64_t v79 = v78 + v154 + v63;
          sub_251B8E64C(v78 + v153 + v63, v157, (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer);
          swift_arrayInitWithTakeFrontToBack();
          sub_251B8E64C(v157, v79, (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer);
          v63 -= v152;
          ++v19;
          uint64_t v62 = v156;
          if (v156 == v19) {
            goto LABEL_48;
          }
        }
        a1 = v66;
        uint64_t v62 = v156;
        unint64_t v61 = v153;
        uint64_t v60 = v154;
LABEL_48:
        uint64_t v36 = v62 + 1;
        v60 += v152;
        v61 += v152;
        uint64_t v19 = v147;
      }
      while (v36 != v146);
      uint64_t v36 = v146;
      uint64_t v2 = v140;
      int64_t v18 = v143;
    }
    goto LABEL_55;
  }
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  uint64_t result = sub_251F36670();
  __break(1u);
  return result;
}

uint64_t sub_251B8B4E0(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v140 = type metadata accessor for StaticUserActionPrediction();
  uint64_t v134 = *(void *)(v140 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v140);
  uint64_t v131 = (uint64_t)&v126 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v141 = (uint64_t)&v126 - v7;
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v137 = (uint64_t)&v126 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v136 = (uint64_t)&v126 - v10;
  uint64_t v11 = a1[1];
  uint64_t result = sub_251F36AA0();
  if (result >= v11)
  {
    if (v11 < 0) {
      goto LABEL_138;
    }
    if (v11) {
      return sub_251B8C304(0, v11, 1, a1);
    }
    return result;
  }
  if (v11 >= 0) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = v11 + 1;
  }
  if (v11 < -1) {
    goto LABEL_146;
  }
  uint64_t v128 = result;
  if (v11 < 2)
  {
    unint64_t v17 = (char *)MEMORY[0x263F8EE78];
    unint64_t v133 = MEMORY[0x263F8EE78]
         + ((*(unsigned __int8 *)(v134 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v134 + 80));
    uint64_t v127 = MEMORY[0x263F8EE78];
    if (v11 != 1)
    {
      unint64_t v19 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_104:
      uint64_t v119 = v17;
      if (v19 >= 2)
      {
        uint64_t v120 = *a1;
        do
        {
          unint64_t v121 = v19 - 2;
          if (v19 < 2) {
            goto LABEL_133;
          }
          if (!v120) {
            goto LABEL_145;
          }
          uint64_t v122 = *(void *)&v119[16 * v121 + 32];
          uint64_t v123 = *(void *)&v119[16 * v19 + 24];
          sub_251B8CC4C(v120 + *(void *)(v134 + 72) * v122, v120 + *(void *)(v134 + 72) * *(void *)&v119[16 * v19 + 16], v120 + *(void *)(v134 + 72) * v123, v133);
          if (v2) {
            break;
          }
          if (v123 < v122) {
            goto LABEL_134;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v119 = sub_251ECDC38((uint64_t)v119);
          }
          if (v121 >= *((void *)v119 + 2)) {
            goto LABEL_135;
          }
          uint64_t v124 = &v119[16 * v121 + 32];
          *(void *)uint64_t v124 = v122;
          *((void *)v124 + 1) = v123;
          unint64_t v125 = *((void *)v119 + 2);
          if (v19 > v125) {
            goto LABEL_136;
          }
          memmove(&v119[16 * v19 + 16], &v119[16 * v19 + 32], 16 * (v125 - v19));
          *((void *)v119 + 2) = v125 - 1;
          unint64_t v19 = v125 - 1;
        }
        while (v125 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(void *)(v127 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v14 = v13 >> 1;
    uint64_t v15 = sub_251F35B50();
    *(void *)(v15 + 16) = v14;
    uint64_t v16 = *(unsigned __int8 *)(v134 + 80);
    uint64_t v127 = v15;
    unint64_t v133 = v15 + ((v16 + 32) & ~v16);
  }
  uint64_t v18 = 0;
  unint64_t v17 = (char *)MEMORY[0x263F8EE78];
  uint64_t v138 = a1;
  while (1)
  {
    uint64_t v20 = v18;
    uint64_t v21 = v18 + 1;
    uint64_t v132 = v18;
    if (v18 + 1 >= v11)
    {
      uint64_t v31 = v18 + 1;
      goto LABEL_24;
    }
    uint64_t v135 = *a1;
    uint64_t v142 = *(void *)(v134 + 72);
    uint64_t v22 = v142;
    uint64_t v23 = v136;
    sub_251B8E790(v135 + v142 * v21, v136, (uint64_t (*)(void))type metadata accessor for StaticUserActionPrediction);
    uint64_t v24 = v135 + v22 * v20;
    uint64_t v25 = v137;
    sub_251B8E790(v24, v137, (uint64_t (*)(void))type metadata accessor for StaticUserActionPrediction);
    uint64_t v26 = *(int *)(v140 + 20);
    double v27 = *(double *)(v23 + v26);
    double v28 = *(double *)(v25 + v26);
    uint64_t v29 = v25;
    uint64_t v30 = v135;
    sub_251B8E7F8(v29, (uint64_t (*)(void))type metadata accessor for StaticUserActionPrediction);
    sub_251B8E7F8(v23, (uint64_t (*)(void))type metadata accessor for StaticUserActionPrediction);
    uint64_t v31 = v20 + 2;
    if (v20 + 2 >= v11)
    {
LABEL_21:
      if (v28 >= v27) {
        goto LABEL_24;
      }
LABEL_42:
      if (v31 < v20) {
        goto LABEL_139;
      }
      if (v20 < v31)
      {
        char v129 = v17;
        uint64_t v130 = v11;
        uint64_t v55 = 0;
        uint64_t v56 = v20;
        uint64_t v57 = v142;
        uint64_t v58 = v142 * (v31 - 1);
        uint64_t v59 = v31 * v142;
        uint64_t v60 = v56;
        uint64_t v61 = v56 * v142;
        do
        {
          if (v60 != v31 + v55 - 1)
          {
            uint64_t v63 = v31;
            uint64_t v64 = v135;
            if (!v135) {
              goto LABEL_144;
            }
            unint64_t v65 = v135 + v61;
            uint64_t v139 = v135 + v58;
            sub_251B8E64C(v135 + v61, v131, (uint64_t (*)(void))type metadata accessor for StaticUserActionPrediction);
            if (v61 < v58 || v65 >= v64 + v59)
            {
              uint64_t v62 = v139;
              swift_arrayInitWithTakeFrontToBack();
            }
            else
            {
              uint64_t v62 = v139;
              if (v61 != v58) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            sub_251B8E64C(v131, v62, (uint64_t (*)(void))type metadata accessor for StaticUserActionPrediction);
            uint64_t v31 = v63;
            uint64_t v57 = v142;
          }
          ++v60;
          --v55;
          v58 -= v57;
          v59 -= v57;
          v61 += v57;
        }
        while (v60 < v31 + v55);
        a1 = v138;
        unint64_t v17 = v129;
        uint64_t v11 = v130;
        uint64_t v20 = v132;
      }
      goto LABEL_24;
    }
    uint64_t v126 = v2;
    char v129 = v17;
    uint64_t v139 = v142 * v21;
    uint64_t v32 = v142 * v31;
    while (1)
    {
      uint64_t v33 = v11;
      uint64_t v34 = v31;
      uint64_t v35 = v136;
      sub_251B8E790(v30 + v32, v136, (uint64_t (*)(void))type metadata accessor for StaticUserActionPrediction);
      uint64_t v36 = v137;
      sub_251B8E790(v30 + v139, v137, (uint64_t (*)(void))type metadata accessor for StaticUserActionPrediction);
      BOOL v37 = *(double *)(v36 + *(int *)(v140 + 20)) >= *(double *)(v35 + *(int *)(v140 + 20));
      sub_251B8E7F8(v36, (uint64_t (*)(void))type metadata accessor for StaticUserActionPrediction);
      sub_251B8E7F8(v35, (uint64_t (*)(void))type metadata accessor for StaticUserActionPrediction);
      if (v28 < v27 == v37) {
        break;
      }
      ++v31;
      v30 += v142;
      uint64_t v11 = v33;
      if (v33 == v34 + 1)
      {
        uint64_t v31 = v33;
        a1 = v138;
        unint64_t v17 = v129;
        uint64_t v2 = v126;
        uint64_t v20 = v132;
        goto LABEL_21;
      }
    }
    a1 = v138;
    unint64_t v17 = v129;
    uint64_t v2 = v126;
    uint64_t v20 = v132;
    uint64_t v11 = v33;
    if (v28 < v27) {
      goto LABEL_42;
    }
LABEL_24:
    if (v31 >= v11) {
      goto LABEL_56;
    }
    if (__OFSUB__(v31, v20)) {
      goto LABEL_137;
    }
    if (v31 - v20 >= v128) {
      goto LABEL_56;
    }
    if (__OFADD__(v20, v128)) {
      goto LABEL_140;
    }
    uint64_t v38 = v20 + v128 >= v11 ? v11 : v20 + v128;
    if (v38 < v20) {
      break;
    }
    if (v31 != v38)
    {
      char v129 = v17;
      uint64_t v130 = v38;
      uint64_t v126 = v2;
      uint64_t v39 = *(void *)(v134 + 72);
      uint64_t v142 = v39 * (v31 - 1);
      uint64_t v135 = v39;
      uint64_t v40 = v31 * v39;
      do
      {
        uint64_t v42 = 0;
        uint64_t v43 = v20;
        uint64_t v139 = v31;
        while (1)
        {
          uint64_t v44 = *a1;
          uint64_t v45 = v40;
          uint64_t v46 = v40 + v42 + *a1;
          uint64_t v47 = v136;
          sub_251B8E790(v46, v136, (uint64_t (*)(void))type metadata accessor for StaticUserActionPrediction);
          uint64_t v48 = v142 + v42 + v44;
          uint64_t v49 = v137;
          sub_251B8E790(v48, v137, (uint64_t (*)(void))type metadata accessor for StaticUserActionPrediction);
          uint64_t v50 = *(int *)(v140 + 20);
          double v51 = *(double *)(v47 + v50);
          double v52 = *(double *)(v49 + v50);
          sub_251B8E7F8(v49, (uint64_t (*)(void))type metadata accessor for StaticUserActionPrediction);
          sub_251B8E7F8(v47, (uint64_t (*)(void))type metadata accessor for StaticUserActionPrediction);
          if (v52 >= v51) {
            break;
          }
          uint64_t v53 = *a1;
          if (!*a1) {
            goto LABEL_142;
          }
          uint64_t v40 = v45;
          uint64_t v54 = v53 + v142 + v42;
          sub_251B8E64C(v53 + v45 + v42, v141, (uint64_t (*)(void))type metadata accessor for StaticUserActionPrediction);
          swift_arrayInitWithTakeFrontToBack();
          sub_251B8E64C(v141, v54, (uint64_t (*)(void))type metadata accessor for StaticUserActionPrediction);
          v42 -= v135;
          ++v43;
          a1 = v138;
          uint64_t v41 = v139;
          if (v139 == v43) {
            goto LABEL_35;
          }
        }
        uint64_t v41 = v139;
        uint64_t v40 = v45;
LABEL_35:
        uint64_t v31 = v41 + 1;
        v142 += v135;
        v40 += v135;
        uint64_t v20 = v132;
      }
      while (v31 != v130);
      uint64_t v31 = v130;
      uint64_t v2 = v126;
      unint64_t v17 = v129;
    }
LABEL_56:
    if (v31 < v20) {
      goto LABEL_132;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v139 = v31;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      unint64_t v17 = sub_251ECD5C4(0, *((void *)v17 + 2) + 1, 1, v17);
    }
    unint64_t v68 = *((void *)v17 + 2);
    unint64_t v67 = *((void *)v17 + 3);
    unint64_t v19 = v68 + 1;
    if (v68 >= v67 >> 1) {
      unint64_t v17 = sub_251ECD5C4((char *)(v67 > 1), v68 + 1, 1, v17);
    }
    *((void *)v17 + 2) = v19;
    uint64_t v69 = v17 + 32;
    uint64_t v70 = &v17[16 * v68 + 32];
    uint64_t v71 = v139;
    *(void *)uint64_t v70 = v20;
    *((void *)v70 + 1) = v71;
    if (v68)
    {
      while (1)
      {
        unint64_t v72 = v19 - 1;
        if (v19 >= 4)
        {
          uint64_t v77 = &v69[16 * v19];
          uint64_t v78 = *((void *)v77 - 8);
          uint64_t v79 = *((void *)v77 - 7);
          BOOL v83 = __OFSUB__(v79, v78);
          uint64_t v80 = v79 - v78;
          if (v83) {
            goto LABEL_121;
          }
          uint64_t v82 = *((void *)v77 - 6);
          uint64_t v81 = *((void *)v77 - 5);
          BOOL v83 = __OFSUB__(v81, v82);
          uint64_t v75 = v81 - v82;
          char v76 = v83;
          if (v83) {
            goto LABEL_122;
          }
          unint64_t v84 = v19 - 2;
          uint64_t v85 = &v69[16 * v19 - 32];
          uint64_t v87 = *(void *)v85;
          uint64_t v86 = *((void *)v85 + 1);
          BOOL v83 = __OFSUB__(v86, v87);
          uint64_t v88 = v86 - v87;
          if (v83) {
            goto LABEL_124;
          }
          BOOL v83 = __OFADD__(v75, v88);
          uint64_t v89 = v75 + v88;
          if (v83) {
            goto LABEL_127;
          }
          if (v89 >= v80)
          {
            BOOL v107 = &v69[16 * v72];
            uint64_t v109 = *(void *)v107;
            uint64_t v108 = *((void *)v107 + 1);
            BOOL v83 = __OFSUB__(v108, v109);
            uint64_t v110 = v108 - v109;
            if (v83) {
              goto LABEL_131;
            }
            BOOL v100 = v75 < v110;
            goto LABEL_93;
          }
        }
        else
        {
          if (v19 != 3)
          {
            uint64_t v101 = *((void *)v17 + 4);
            uint64_t v102 = *((void *)v17 + 5);
            BOOL v83 = __OFSUB__(v102, v101);
            uint64_t v94 = v102 - v101;
            char v95 = v83;
            goto LABEL_87;
          }
          uint64_t v74 = *((void *)v17 + 4);
          uint64_t v73 = *((void *)v17 + 5);
          BOOL v83 = __OFSUB__(v73, v74);
          uint64_t v75 = v73 - v74;
          char v76 = v83;
        }
        if (v76) {
          goto LABEL_123;
        }
        unint64_t v84 = v19 - 2;
        char v90 = &v69[16 * v19 - 32];
        uint64_t v92 = *(void *)v90;
        uint64_t v91 = *((void *)v90 + 1);
        BOOL v93 = __OFSUB__(v91, v92);
        uint64_t v94 = v91 - v92;
        char v95 = v93;
        if (v93) {
          goto LABEL_126;
        }
        uint64_t v96 = &v69[16 * v72];
        uint64_t v98 = *(void *)v96;
        uint64_t v97 = *((void *)v96 + 1);
        BOOL v83 = __OFSUB__(v97, v98);
        uint64_t v99 = v97 - v98;
        if (v83) {
          goto LABEL_129;
        }
        if (__OFADD__(v94, v99)) {
          goto LABEL_130;
        }
        if (v94 + v99 >= v75)
        {
          BOOL v100 = v75 < v99;
LABEL_93:
          if (v100) {
            unint64_t v72 = v84;
          }
          goto LABEL_95;
        }
LABEL_87:
        if (v95) {
          goto LABEL_125;
        }
        uint64_t v103 = &v69[16 * v72];
        uint64_t v105 = *(void *)v103;
        uint64_t v104 = *((void *)v103 + 1);
        BOOL v83 = __OFSUB__(v104, v105);
        uint64_t v106 = v104 - v105;
        if (v83) {
          goto LABEL_128;
        }
        if (v106 < v94) {
          goto LABEL_14;
        }
LABEL_95:
        unint64_t v111 = v72 - 1;
        if (v72 - 1 >= v19)
        {
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
          goto LABEL_141;
        }
        uint64_t v112 = *a1;
        if (!*a1) {
          goto LABEL_143;
        }
        uint64_t v113 = v17;
        BOOL v114 = &v69[16 * v111];
        uint64_t v115 = *(void *)v114;
        uint64_t v116 = &v69[16 * v72];
        uint64_t v117 = *((void *)v116 + 1);
        sub_251B8CC4C(v112 + *(void *)(v134 + 72) * *(void *)v114, v112 + *(void *)(v134 + 72) * *(void *)v116, v112 + *(void *)(v134 + 72) * v117, v133);
        if (v2) {
          goto LABEL_115;
        }
        if (v117 < v115) {
          goto LABEL_118;
        }
        if (v72 > *((void *)v113 + 2)) {
          goto LABEL_119;
        }
        *(void *)BOOL v114 = v115;
        *(void *)&v69[16 * v111 + 8] = v117;
        unint64_t v118 = *((void *)v113 + 2);
        if (v72 >= v118) {
          goto LABEL_120;
        }
        unint64_t v17 = v113;
        unint64_t v19 = v118 - 1;
        memmove(&v69[16 * v72], v116 + 16, 16 * (v118 - 1 - v72));
        *((void *)v113 + 2) = v118 - 1;
        a1 = v138;
        if (v118 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v19 = 1;
LABEL_14:
    uint64_t v11 = a1[1];
    uint64_t v18 = v139;
    if (v139 >= v11) {
      goto LABEL_104;
    }
  }
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  uint64_t result = sub_251F36670();
  __break(1u);
  return result;
}

uint64_t sub_251B8BFA4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v37 = a1;
  uint64_t v38 = type metadata accessor for AnyTileInfoBearer();
  uint64_t v7 = MEMORY[0x270FA5388](v38);
  uint64_t v46 = (uint64_t)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v41 = (uint64_t)&v35 - v10;
  uint64_t result = MEMORY[0x270FA5388](v9);
  uint64_t v40 = (uint64_t)&v35 - v13;
  uint64_t v45 = a3;
  uint64_t v36 = a2;
  if (a3 != a2)
  {
    uint64_t v14 = *(void *)(v12 + 72);
    uint64_t v15 = v14 * (v45 - 1);
    uint64_t v42 = v14;
    uint64_t v16 = v14 * v45;
    uint64_t v39 = a4;
LABEL_5:
    uint64_t v17 = 0;
    uint64_t v18 = v37;
    uint64_t v43 = v16;
    uint64_t v44 = v15;
    while (1)
    {
      uint64_t v19 = *a4;
      uint64_t v51 = v16 + v17;
      uint64_t v20 = v16 + v17 + v19;
      uint64_t v21 = v40;
      sub_251B8E790(v20, v40, (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer);
      uint64_t v22 = v15 + v17 + v19;
      uint64_t v23 = v41;
      sub_251B8E790(v22, v41, (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer);
      uint64_t v24 = *(void *)(*(void *)v21 + 40);
      uint64_t v25 = *(void *)(*(void *)v21 + 48);
      __swift_project_boxed_opaque_existential_1((void *)(*(void *)v21 + 16), v24);
      uint64_t v49 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 56))(v24, v25);
      uint64_t v50 = v26;
      uint64_t v28 = *(void *)(*(void *)v23 + 40);
      uint64_t v27 = *(void *)(*(void *)v23 + 48);
      __swift_project_boxed_opaque_existential_1((void *)(*(void *)v23 + 16), v28);
      uint64_t v47 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 56))(v28, v27);
      uint64_t v48 = v29;
      sub_251AE13EC();
      uint64_t v30 = sub_251F36220();
      swift_bridgeObjectRelease();
      a4 = v39;
      swift_bridgeObjectRelease();
      uint64_t v31 = v23;
      uint64_t v15 = v44;
      sub_251B8E7F8(v31, (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer);
      uint64_t v32 = v21;
      uint64_t v16 = v43;
      uint64_t result = sub_251B8E7F8(v32, (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer);
      if (v30 != -1)
      {
LABEL_4:
        v15 += v42;
        v16 += v42;
        if (++v45 == v36) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v33 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v34 = v33 + v15 + v17;
      sub_251B8E64C(v33 + v16 + v17, v46, (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = sub_251B8E64C(v46, v34, (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer);
      v17 -= v42;
      if (v45 == ++v18) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_251B8C304(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v28 = a1;
  uint64_t v31 = type metadata accessor for StaticUserActionPrediction();
  uint64_t v7 = MEMORY[0x270FA5388](v31);
  uint64_t v32 = (uint64_t)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v26 - v10;
  uint64_t result = MEMORY[0x270FA5388](v9);
  uint64_t v15 = (char *)&v26 - v14;
  uint64_t v30 = a3;
  uint64_t v27 = a2;
  if (a3 != a2)
  {
    uint64_t v16 = *(void *)(v13 + 72);
    uint64_t v34 = v16 * (v30 - 1);
    uint64_t v29 = v16;
    uint64_t v33 = v16 * v30;
LABEL_5:
    uint64_t v17 = 0;
    uint64_t v18 = v28;
    while (1)
    {
      uint64_t v19 = *a4;
      uint64_t v20 = a4;
      sub_251B8E790(v33 + v17 + *a4, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for StaticUserActionPrediction);
      sub_251B8E790(v34 + v17 + v19, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticUserActionPrediction);
      uint64_t v21 = *(int *)(v31 + 20);
      double v22 = *(double *)&v15[v21];
      double v23 = *(double *)&v11[v21];
      sub_251B8E7F8((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticUserActionPrediction);
      uint64_t result = sub_251B8E7F8((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for StaticUserActionPrediction);
      if (v23 >= v22)
      {
LABEL_4:
        v34 += v29;
        v33 += v29;
        if (++v30 == v27) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v24 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v25 = v24 + v34 + v17;
      sub_251B8E64C(v24 + v33 + v17, v32, (uint64_t (*)(void))type metadata accessor for StaticUserActionPrediction);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = sub_251B8E64C(v32, v25, (uint64_t (*)(void))type metadata accessor for StaticUserActionPrediction);
      v17 -= v29;
      ++v18;
      a4 = v20;
      if (v30 == v18) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_251B8C5CC(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v54 = type metadata accessor for AnyTileInfoBearer();
  uint64_t v8 = MEMORY[0x270FA5388](v54);
  uint64_t v58 = (uint64_t)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v57 = (uint64_t)&v51 - v10;
  uint64_t v12 = *(void *)(v11 + 72);
  if (!v12)
  {
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  if (a2 - a1 == 0x8000000000000000 && v12 == -1) {
    goto LABEL_61;
  }
  int64_t v13 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v12 == -1) {
    goto LABEL_62;
  }
  uint64_t v14 = (uint64_t)(a2 - a1) / v12;
  unint64_t v65 = a1;
  unint64_t v64 = a4;
  uint64_t v15 = v13 / v12;
  if (v14 >= v13 / v12)
  {
    if ((v15 & 0x8000000000000000) == 0)
    {
      uint64_t v17 = v15 * v12;
      if (a4 < a2 || a2 + v17 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v32 = a4 + v17;
      unint64_t v63 = a4 + v17;
      unint64_t v65 = a2;
      if (v17 >= 1 && a1 < a2)
      {
        uint64_t v34 = -v12;
        unint64_t v52 = a1;
        unint64_t v53 = a4;
        do
        {
          unint64_t v55 = a2;
          unint64_t v56 = a3 + v34;
          unint64_t v35 = a3;
          uint64_t v36 = v57;
          sub_251B8E790(v32 + v34, v57, (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer);
          unint64_t v37 = a2 + v34;
          uint64_t v38 = v58;
          sub_251B8E790(a2 + v34, v58, (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer);
          uint64_t v39 = v34;
          uint64_t v41 = *(void *)(*(void *)v36 + 40);
          uint64_t v40 = *(void *)(*(void *)v36 + 48);
          __swift_project_boxed_opaque_existential_1((void *)(*(void *)v36 + 16), v41);
          uint64_t v61 = (*(uint64_t (**)(uint64_t, uint64_t))(v40 + 56))(v41, v40);
          uint64_t v62 = v42;
          uint64_t v44 = *(void *)(*(void *)v38 + 40);
          uint64_t v43 = *(void *)(*(void *)v38 + 48);
          __swift_project_boxed_opaque_existential_1((void *)(*(void *)v38 + 16), v44);
          uint64_t v59 = (*(uint64_t (**)(uint64_t, uint64_t))(v43 + 56))(v44, v43);
          uint64_t v60 = v45;
          sub_251AE13EC();
          uint64_t v46 = sub_251F36220();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_251B8E7F8(v38, (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer);
          sub_251B8E7F8(v36, (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer);
          if (v46 == -1)
          {
            a3 = v56;
            if (v35 < v55 || v56 >= v55)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v48 = v52;
              unint64_t v49 = v53;
              uint64_t v34 = v39;
            }
            else
            {
              unint64_t v48 = v52;
              unint64_t v49 = v53;
              uint64_t v34 = v39;
              if (v35 != v55) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v65 += v34;
          }
          else
          {
            unint64_t v37 = v55;
            a3 = v56;
            unint64_t v47 = v63;
            v63 += v39;
            uint64_t v34 = v39;
            if (v35 < v47 || v56 >= v47)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v48 = v52;
              unint64_t v49 = v53;
            }
            else
            {
              unint64_t v48 = v52;
              unint64_t v49 = v53;
              if (v35 != v47) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
          }
          unint64_t v32 = v63;
          if (v63 <= v49) {
            break;
          }
          a2 = v37;
        }
        while (v37 > v48);
      }
      goto LABEL_59;
    }
  }
  else if ((v14 & 0x8000000000000000) == 0)
  {
    uint64_t v16 = v14 * v12;
    if (a4 < a1 || a1 + v16 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v56 = a4 + v16;
    unint64_t v63 = a4 + v16;
    if (v16 >= 1 && a2 < a3)
    {
      uint64_t v19 = v57;
      do
      {
        unint64_t v20 = a3;
        sub_251B8E790(a2, v19, (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer);
        uint64_t v21 = v58;
        sub_251B8E790(a4, v58, (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer);
        uint64_t v22 = *(void *)(*(void *)v19 + 40);
        uint64_t v23 = *(void *)(*(void *)v19 + 48);
        __swift_project_boxed_opaque_existential_1((void *)(*(void *)v19 + 16), v22);
        uint64_t v61 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 56))(v22, v23);
        uint64_t v62 = v24;
        uint64_t v25 = *(void *)(*(void *)v21 + 40);
        uint64_t v26 = *(void *)(*(void *)v21 + 48);
        __swift_project_boxed_opaque_existential_1((void *)(*(void *)v21 + 16), v25);
        uint64_t v59 = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 56))(v25, v26);
        uint64_t v60 = v27;
        sub_251AE13EC();
        uint64_t v28 = sub_251F36220();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_251B8E7F8(v21, (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer);
        sub_251B8E7F8(v19, (uint64_t (*)(void))type metadata accessor for AnyTileInfoBearer);
        unint64_t v29 = v65;
        if (v28 == -1)
        {
          unint64_t v31 = a2 + v12;
          if (v65 < a2 || v65 >= v31)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v20;
          }
          else
          {
            a3 = v20;
            if (v65 == a2) {
              unint64_t v29 = a2;
            }
            else {
              swift_arrayInitWithTakeBackToFront();
            }
          }
        }
        else
        {
          unint64_t v30 = v64 + v12;
          if (v65 < v64 || v65 >= v30)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v20;
          }
          else
          {
            a3 = v20;
            if (v65 != v64) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          unint64_t v64 = v30;
          unint64_t v31 = a2;
        }
        unint64_t v65 = v29 + v12;
        a4 = v64;
        if (v64 >= v56) {
          break;
        }
        a2 = v31;
      }
      while (v31 < a3);
    }
LABEL_59:
    sub_251ECD844(&v65, &v64, (uint64_t *)&v63);
    return 1;
  }
LABEL_63:
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251B8CC4C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v42 = type metadata accessor for StaticUserActionPrediction();
  uint64_t v8 = MEMORY[0x270FA5388](v42);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v40 - v11;
  uint64_t v14 = *(void *)(v13 + 72);
  if (!v14)
  {
    __break(1u);
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  if (a2 - a1 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_69;
  }
  int64_t v15 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_70;
  }
  uint64_t v16 = (uint64_t)(a2 - a1) / v14;
  unint64_t v45 = a1;
  unint64_t v44 = a4;
  uint64_t v17 = v15 / v14;
  if (v16 >= v15 / v14)
  {
    if ((v17 & 0x8000000000000000) == 0)
    {
      uint64_t v19 = v17 * v14;
      if (a4 < a2 || a2 + v19 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v30 = a4 + v19;
      unint64_t v43 = a4 + v19;
      unint64_t v45 = a2;
      unint64_t v41 = a1;
      if (v19 >= 1 && a1 < a2)
      {
        do
        {
          unint64_t v32 = a3 - v14;
          sub_251B8E790(v30 - v14, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticUserActionPrediction);
          unint64_t v33 = a2 - v14;
          sub_251B8E790(a2 - v14, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticUserActionPrediction);
          uint64_t v34 = *(int *)(v42 + 20);
          double v35 = *(double *)&v12[v34];
          double v36 = *(double *)&v10[v34];
          sub_251B8E7F8((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticUserActionPrediction);
          sub_251B8E7F8((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticUserActionPrediction);
          if (v36 >= v35)
          {
            unint64_t v37 = v43;
            v43 -= v14;
            if (a3 < v37 || v32 >= v37)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != v37)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v33 = a2;
          }
          else
          {
            if (a3 < a2 || v32 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != a2)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v45 -= v14;
          }
          unint64_t v30 = v43;
          if (v43 <= a4) {
            break;
          }
          a2 = v33;
          a3 -= v14;
        }
        while (v33 > v41);
      }
      goto LABEL_67;
    }
  }
  else if ((v16 & 0x8000000000000000) == 0)
  {
    uint64_t v18 = v16 * v14;
    if (a4 < a1 || a1 + v18 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v20 = a4 + v18;
    unint64_t v43 = a4 + v18;
    if (v18 >= 1 && a2 < a3)
    {
      do
      {
        sub_251B8E790(a2, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticUserActionPrediction);
        sub_251B8E790(a4, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticUserActionPrediction);
        uint64_t v22 = *(int *)(v42 + 20);
        double v23 = *(double *)&v12[v22];
        double v24 = *(double *)&v10[v22];
        sub_251B8E7F8((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticUserActionPrediction);
        sub_251B8E7F8((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticUserActionPrediction);
        unint64_t v25 = v45;
        if (v24 >= v23)
        {
          unint64_t v28 = v44 + v14;
          if (v45 < v44 || v45 >= v28)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v45 != v44)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v44 = v28;
          unint64_t v26 = a2;
        }
        else
        {
          unint64_t v26 = a2 + v14;
          if (v45 < a2 || v45 >= v26)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v45 == a2)
          {
            unint64_t v25 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        unint64_t v45 = v25 + v14;
        a4 = v44;
        if (v44 >= v20) {
          break;
        }
        a2 = v26;
      }
      while (v26 < a3);
    }
LABEL_67:
    sub_251ECD85C(&v45, &v44, (uint64_t *)&v43);
    return 1;
  }
LABEL_71:
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t _s11RoomSectionVMa()
{
  return swift_getGenericMetadata();
}

uint64_t sub_251B8D148@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_251B86F10(a1, *(uint64_t **)(v2 + 56), *(void *)(v2 + 64), *(void *)(v2 + 72), *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), a2, *(void *)(v2 + 48));
}

uint64_t sub_251B8D17C(uint64_t a1)
{
  return sub_251B87264(a1);
}

uint64_t sub_251B8D1B4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 16);
  return swift_bridgeObjectRetain();
}

BOOL sub_251B8D1D4(uint64_t a1, uint64_t a2)
{
  return sub_251B86E38(a1, a2, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

uint64_t sub_251B8D1FC()
{
  return sub_251B8E71C();
}

uint64_t sub_251B8D214(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for StaticService();
  MEMORY[0x270FA5388](v7);
  uint64_t v51 = (uint64_t)v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v64 = MEMORY[0x263F8EE78];
  uint64_t v48 = *(void *)(a1 + 16);
  if (v48)
  {
    uint64_t v11 = 0;
    uint64_t v47 = a1 + 32;
    uint64_t v12 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
    uint64_t v57 = a2 + 56;
    uint64_t v58 = a2;
    unint64_t v45 = v6;
    uint64_t v50 = v7;
    uint64_t v46 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
    while (1)
    {
      uint64_t v52 = v11;
      sub_251A1A4EC(v47 + 40 * v11, (uint64_t)&v62);
      sub_251A1A4EC((uint64_t)&v62, (uint64_t)v59);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF78);
      int v13 = swift_dynamicCast();
      uint64_t v14 = *v12;
      if (v13)
      {
        v14(v6, 0, 1, v7);
        sub_251B8E64C((uint64_t)v6, v51, (uint64_t (*)(void))type metadata accessor for StaticService);
        if (*(void *)(a2 + 16))
        {
          int64_t v15 = (char *)(v51 + *(int *)(v50 + 44));
          uint64_t v16 = sub_251F34DA0();
          sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
          unint64_t v56 = v15;
          uint64_t v17 = sub_251F35600();
          a2 = v58;
          uint64_t v18 = -1 << *(unsigned char *)(v58 + 32);
          unint64_t v19 = v17 & ~v18;
          if ((*(void *)(v57 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19))
          {
            uint64_t v54 = ~v18;
            unint64_t v20 = *(void **)(v16 - 8);
            unint64_t v55 = (void (*)(char *, unint64_t, uint64_t))v20[2];
            uint64_t v22 = v20[8];
            uint64_t v21 = v20[9];
            double v23 = (uint64_t (**)(char *, uint64_t))(v20 + 1);
            while (1)
            {
              MEMORY[0x270FA5388](v17);
              v55((char *)v44 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), *(void *)(a2 + 48) + v21 * v19, v16);
              sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
              char v24 = sub_251F35650();
              uint64_t v17 = (*v23)((char *)v44 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), v16);
              if (v24) {
                break;
              }
              unint64_t v19 = (v19 + 1) & v54;
              a2 = v58;
              if (((*(void *)(v57 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
                goto LABEL_12;
              }
            }
            sub_251B8E7F8(v51, (uint64_t (*)(void))type metadata accessor for StaticService);
LABEL_21:
            sub_251A1A444(&v62, (uint64_t)v59);
            uint64_t v34 = v64;
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v7 = v50;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_251A3E6EC(0, *(void *)(v34 + 16) + 1, 1);
              uint64_t v34 = v64;
            }
            unint64_t v37 = *(void *)(v34 + 16);
            unint64_t v36 = *(void *)(v34 + 24);
            if (v37 >= v36 >> 1) {
              sub_251A3E6EC(v36 > 1, v37 + 1, 1);
            }
            uint64_t v38 = v60;
            uint64_t v39 = v61;
            uint64_t v40 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v59, v60);
            MEMORY[0x270FA5388](v40);
            uint64_t v42 = (char *)v44 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
            (*(void (**)(char *))(v43 + 16))(v42);
            sub_251D0655C(v37, (uint64_t)v42, &v64, v38, v39);
            __swift_destroy_boxed_opaque_existential_0((uint64_t)v59);
            a2 = v58;
            uint64_t v6 = v45;
            goto LABEL_5;
          }
        }
LABEL_12:
        sub_251B8E7F8(v51, (uint64_t (*)(void))type metadata accessor for StaticService);
      }
      else
      {
        v14(v6, 1, 1, v7);
        sub_251A1B064((uint64_t)v6, qword_26B21EE20);
        __swift_project_boxed_opaque_existential_1(&v62, v63);
        uint64_t v25 = sub_251F34DA0();
        v44[2] = v44;
        uint64_t v49 = *(void *)(v25 - 8);
        uint64_t v26 = *(void *)(v49 + 64);
        MEMORY[0x270FA5388](v25);
        unint64_t v56 = (char *)v44 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
        sub_251F36420();
        a2 = v58;
        if (*(void *)(v58 + 16))
        {
          sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
          uint64_t v27 = sub_251F35600();
          a2 = v58;
          uint64_t v28 = -1 << *(unsigned char *)(v58 + 32);
          unint64_t v29 = v27 & ~v28;
          if ((*(void *)(v57 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29))
          {
            uint64_t v53 = ~v28;
            unint64_t v30 = *(void (**)(char *, unint64_t, uint64_t))(v49 + 16);
            uint64_t v54 = *(void *)(v49 + 72);
            unint64_t v55 = v30;
            unint64_t v31 = (uint64_t (**)(char *, uint64_t))(v49 + 8);
            while (1)
            {
              MEMORY[0x270FA5388](v27);
              v55((char *)v44 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0), *(void *)(a2 + 48) + v54 * v29, v25);
              sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
              char v32 = sub_251F35650();
              unint64_t v33 = *v31;
              uint64_t v27 = (*v31)((char *)v44 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0), v25);
              if (v32) {
                break;
              }
              unint64_t v29 = (v29 + 1) & v53;
              a2 = v58;
              if (((*(void *)(v57 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29) & 1) == 0) {
                goto LABEL_3;
              }
            }
            v33(v56, v25);
            goto LABEL_21;
          }
        }
LABEL_3:
        (*(void (**)(char *, uint64_t))(v49 + 8))(v56, v25);
      }
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v62);
      uint64_t v6 = v45;
      uint64_t v7 = v50;
LABEL_5:
      uint64_t v11 = v52 + 1;
      uint64_t v12 = v46;
      if (v52 + 1 == v48) {
        return v64;
      }
    }
  }
  return result;
}

uint64_t sub_251B8D984(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v23 = a2;
  uint64_t v28 = a4;
  char v24 = a1;
  uint64_t v5 = type metadata accessor for StaticAccessory(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t result = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = 0;
  uint64_t v11 = *(void *)(a3 + 56);
  uint64_t v25 = 0;
  uint64_t v26 = a3 + 56;
  uint64_t v12 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & v11;
  int64_t v27 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_5;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v19 >= v27) {
      goto LABEL_24;
    }
    unint64_t v20 = *(void *)(v26 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v27) {
        goto LABEL_24;
      }
      unint64_t v20 = *(void *)(v26 + 8 * v10);
      if (!v20)
      {
        int64_t v10 = v19 + 2;
        if (v19 + 2 >= v27) {
          goto LABEL_24;
        }
        unint64_t v20 = *(void *)(v26 + 8 * v10);
        if (!v20) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v14 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_5:
    sub_251B8E790(*(void *)(a3 + 48) + *(void *)(v6 + 72) * v16, (uint64_t)v9, type metadata accessor for StaticAccessory);
    uint64_t v17 = swift_bridgeObjectRetain();
    char v18 = sub_251A8070C(v17, v28);
    swift_bridgeObjectRelease();
    uint64_t result = sub_251B8E7F8((uint64_t)v9, type metadata accessor for StaticAccessory);
    if (v18)
    {
      *(unint64_t *)((char *)v24 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      if (__OFADD__(v25++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        return sub_251F1BAE0(v24, v23, v25, a3);
      }
    }
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v27) {
    goto LABEL_24;
  }
  unint64_t v20 = *(void *)(v26 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v27) {
      goto LABEL_24;
    }
    unint64_t v20 = *(void *)(v26 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_251B8DC28(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v36 = a2;
  unint64_t v37 = a1;
  uint64_t v6 = type metadata accessor for StaticService();
  uint64_t v40 = *(void *)(v6 - 8);
  uint64_t result = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v50 = (uint64_t)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = a3;
  uint64_t v42 = 0;
  int64_t v9 = 0;
  uint64_t v12 = *(void *)(a3 + 56);
  uint64_t v11 = a3 + 56;
  uint64_t v10 = v12;
  uint64_t v13 = 1 << *(unsigned char *)(v11 - 24);
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  else {
    uint64_t v14 = -1;
  }
  unint64_t v15 = v14 & v10;
  uint64_t v38 = v11;
  int64_t v39 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v49 = a4;
  uint64_t v47 = a4 + 56;
  while (1)
  {
    if (v15)
    {
      uint64_t v44 = (v15 - 1) & v15;
      int64_t v45 = v9;
      unint64_t v16 = __clz(__rbit64(v15)) | (v9 << 6);
      goto LABEL_22;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v17 >= v39) {
      goto LABEL_30;
    }
    unint64_t v18 = *(void *)(v38 + 8 * v17);
    int64_t v19 = v9 + 1;
    if (!v18)
    {
      int64_t v19 = v9 + 2;
      if (v9 + 2 >= v39) {
        goto LABEL_30;
      }
      unint64_t v18 = *(void *)(v38 + 8 * v19);
      if (!v18)
      {
        int64_t v19 = v9 + 3;
        if (v9 + 3 >= v39) {
          goto LABEL_30;
        }
        unint64_t v18 = *(void *)(v38 + 8 * v19);
        if (!v18) {
          break;
        }
      }
    }
LABEL_21:
    uint64_t v44 = (v18 - 1) & v18;
    int64_t v45 = v19;
    unint64_t v16 = __clz(__rbit64(v18)) + (v19 << 6);
LABEL_22:
    uint64_t v21 = *(void *)(v41 + 48);
    uint64_t v22 = *(void *)(v40 + 72);
    unint64_t v43 = v16;
    sub_251B8E790(v21 + v22 * v16, v50, (uint64_t (*)(void))type metadata accessor for StaticService);
    if (*(void *)(v49 + 16)
      && (uint64_t v23 = v49,
          uint64_t v24 = sub_251F34DA0(),
          sub_251A1A8EC((unint64_t *)&qword_26B21F2B0),
          uint64_t v25 = sub_251F35600(),
          uint64_t v26 = -1 << *(unsigned char *)(v23 + 32),
          unint64_t v27 = v25 & ~v26,
          ((*(void *)(v47 + ((v27 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v27) & 1) != 0))
    {
      uint64_t v46 = ~v26;
      uint64_t v28 = *(void **)(v24 - 8);
      uint64_t v48 = (void (*)(char *, unint64_t, uint64_t))v28[2];
      uint64_t v29 = v28[8];
      uint64_t v30 = v28[9];
      unint64_t v31 = (uint64_t (**)(char *, uint64_t))(v28 + 1);
      while (1)
      {
        MEMORY[0x270FA5388](v25);
        v48((char *)&v35 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0), *(void *)(v49 + 48) + v30 * v27, v24);
        sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
        char v32 = sub_251F35650();
        uint64_t v25 = (*v31)((char *)&v35 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0), v24);
        if (v32) {
          break;
        }
        unint64_t v27 = (v27 + 1) & v46;
        if (((*(void *)(v47 + ((v27 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v27) & 1) == 0) {
          goto LABEL_27;
        }
      }
      uint64_t result = sub_251B8E7F8(v50, (uint64_t (*)(void))type metadata accessor for StaticService);
      unint64_t v15 = v44;
      int64_t v9 = v45;
    }
    else
    {
LABEL_27:
      uint64_t result = sub_251B8E7F8(v50, (uint64_t (*)(void))type metadata accessor for StaticService);
      *(unint64_t *)((char *)v37 + ((v43 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v43;
      BOOL v33 = __OFADD__(v42++, 1);
      unint64_t v15 = v44;
      int64_t v9 = v45;
      if (v33)
      {
        __break(1u);
LABEL_30:
        uint64_t v34 = v41;
        swift_retain();
        return sub_251F1BD94(v37, v36, v42, v34);
      }
    }
  }
  uint64_t v20 = v9 + 4;
  if (v9 + 4 >= v39) {
    goto LABEL_30;
  }
  unint64_t v18 = *(void *)(v38 + 8 * v20);
  if (v18)
  {
    int64_t v19 = v9 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v19 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v19 >= v39) {
      goto LABEL_30;
    }
    unint64_t v18 = *(void *)(v38 + 8 * v19);
    ++v20;
    if (v18) {
      goto LABEL_21;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_251B8E04C(uint64_t a1, uint64_t a2, uint64_t (*a3)(char *, unint64_t, uint64_t, uint64_t))
{
  v15[1] = *MEMORY[0x263EF8340];
  char v7 = *(unsigned char *)(a1 + 32);
  unsigned int v8 = v7 & 0x3F;
  unint64_t v9 = (unint64_t)((1 << v7) + 63) >> 6;
  size_t v10 = 8 * v9;
  uint64_t isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v8 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    bzero((char *)v15 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0), v10);
    swift_bridgeObjectRetain();
    uint64_t v12 = a3((char *)v15 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0), v9, a1, a2);
    swift_release();
    swift_bridgeObjectRelease();
    if (v3) {
      swift_willThrow();
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v13 = (void *)swift_slowAlloc();
    bzero(v13, v10);
    swift_bridgeObjectRetain();
    uint64_t v12 = a3((char *)v13, v9, a1, a2);
    swift_release();
    swift_bridgeObjectRelease();
    MEMORY[0x2533AC760](v13, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  return v12;
}

uint64_t sub_251B8E224(uint64_t a1)
{
  return sub_251B88900(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_251B8E248@<X0>(uint64_t *a1@<X8>)
{
  sub_251AE13EC();
  uint64_t result = sub_251F36200();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_251B8E294()
{
  swift_getAtKeyPath();
  return v1;
}

uint64_t sub_251B8E2C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_251B8E2F0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

double sub_251B8E338@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_251EFE26C(a1, *(void *)(v2 + 16), a2);
}

unint64_t sub_251B8E358()
{
  unint64_t result = qword_269B9EF48[0];
  if (!qword_269B9EF48[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_269B9EF48);
  }
  return result;
}

uint64_t dispatch thunk of WidgetTileInfoVisibility.showAsInteractiveWidget.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

unsigned char *_s18WidgetTileBehaviorOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251B8E48CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StateSnapshot.WidgetTileBehavior()
{
  return &type metadata for StateSnapshot.WidgetTileBehavior;
}

uint64_t sub_251B8E4C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 40);
}

uint64_t sub_251B8E4D0()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *sub_251B8E50C(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_251B8E54C(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_251B8E5B4(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_251B8E64C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_251B8E6B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9EF10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_251B8E71C()
{
  return (*(uint64_t (**)(void))(v0 + 56))();
}

uint64_t sub_251B8E74C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_251B8E790(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_251B8E7F8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_251B8E858(uint64_t a1)
{
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  unint64_t v4 = v3 & *(void *)(a1 + 64);
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9EFD0);
  MEMORY[0x270FA5388](v43);
  uint64_t v41 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = v5;
  int64_t v40 = (unint64_t)(v2 + 63) >> 6;
  uint64_t v44 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v7 = 0;
  unint64_t v46 = MEMORY[0x263F8EE78];
  while (v4)
  {
    uint64_t v51 = (v4 - 1) & v4;
    int64_t v52 = v7;
    unint64_t v8 = __clz(__rbit64(v4)) | (v7 << 6);
LABEL_23:
    uint64_t v13 = v44;
    uint64_t v14 = *(void *)(v44 + 48);
    uint64_t v15 = sub_251F34DA0();
    uint64_t v49 = *(void *)(v15 - 8);
    uint64_t v16 = v49;
    uint64_t v45 = *(void *)(v49 + 72);
    int64_t v17 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v49 + 16);
    uint64_t v18 = (uint64_t)v41;
    uint64_t v19 = v17(v41, v14 + v45 * v8, v15);
    uint64_t v50 = &v38;
    uint64_t v20 = *(void **)(*(void *)(v13 + 56) + 8 * v8);
    uint64_t v21 = v43;
    *(void *)(v18 + *(int *)(v43 + 48)) = v20;
    MEMORY[0x270FA5388](v19);
    uint64_t v23 = (char *)&v38 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v24 = sub_251B9012C(v18, (uint64_t)v23);
    uint64_t v48 = &v38;
    uint64_t v25 = *(void *)(v16 + 64);
    MEMORY[0x270FA5388](v24);
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    uint64_t v47 = &v38;
    MEMORY[0x270FA5388](v26 - 8);
    uint64_t v28 = (char *)&v38 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v29 = *(void **)&v23[*(int *)(v21 + 48)];
    id v30 = v20;
    if (objc_msgSend(v29, sel_BOOLValue))
    {
      v17(v28, (unint64_t)v23, v15);
      uint64_t v31 = 0;
    }
    else
    {
      uint64_t v31 = 1;
    }
    uint64_t v32 = v49;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v49 + 56))(v28, v31, 1, v15);
    sub_251A1B064((uint64_t)v23, &qword_269B9EFD0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v28, 1, v15) == 1)
    {
      uint64_t result = sub_251A1B064((uint64_t)v28, &qword_26B21FF90);
      int64_t v7 = v52;
      unint64_t v4 = v51;
    }
    else
    {
      BOOL v33 = *(uint64_t (**)(char *, char *, uint64_t))(v32 + 32);
      uint64_t v34 = v33((char *)&v38 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), v28, v15);
      MEMORY[0x270FA5388](v34);
      v33((char *)&v38 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), (char *)&v38 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), v15);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v46 = sub_251F0F4DC(0, *(void *)(v46 + 16) + 1, 1, v46);
      }
      unint64_t v36 = *(void *)(v46 + 16);
      unint64_t v35 = *(void *)(v46 + 24);
      if (v36 >= v35 >> 1) {
        unint64_t v46 = sub_251F0F4DC(v35 > 1, v36 + 1, 1, v46);
      }
      unint64_t v37 = v46;
      *(void *)(v46 + 16) = v36 + 1;
      uint64_t result = v33((char *)(v37+ ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80))+ v36 * v45), (char *)&v38 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), v15);
      int64_t v7 = v52;
      unint64_t v4 = v51;
    }
  }
  int64_t v9 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
    goto LABEL_34;
  }
  if (v9 >= v40) {
    goto LABEL_32;
  }
  unint64_t v10 = *(void *)(v39 + 8 * v9);
  int64_t v11 = v7 + 1;
  if (v10) {
    goto LABEL_22;
  }
  int64_t v11 = v7 + 2;
  if (v7 + 2 >= v40) {
    goto LABEL_32;
  }
  unint64_t v10 = *(void *)(v39 + 8 * v11);
  if (v10) {
    goto LABEL_22;
  }
  int64_t v11 = v7 + 3;
  if (v7 + 3 >= v40) {
    goto LABEL_32;
  }
  unint64_t v10 = *(void *)(v39 + 8 * v11);
  if (v10) {
    goto LABEL_22;
  }
  int64_t v11 = v7 + 4;
  if (v7 + 4 >= v40) {
    goto LABEL_32;
  }
  unint64_t v10 = *(void *)(v39 + 8 * v11);
  if (v10)
  {
LABEL_22:
    uint64_t v51 = (v10 - 1) & v10;
    int64_t v52 = v11;
    unint64_t v8 = __clz(__rbit64(v10)) + (v11 << 6);
    goto LABEL_23;
  }
  uint64_t v12 = v7 + 5;
  if (v7 + 5 >= v40)
  {
LABEL_32:
    swift_release();
    return v46;
  }
  unint64_t v10 = *(void *)(v39 + 8 * v12);
  if (v10)
  {
    int64_t v11 = v7 + 5;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v11 >= v40) {
      goto LABEL_32;
    }
    unint64_t v10 = *(void *)(v39 + 8 * v11);
    ++v12;
    if (v10) {
      goto LABEL_22;
    }
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_251B8EDB0@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  if (qword_269B9C2E0 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_251F350A0();
  uint64_t v7 = __swift_project_value_buffer(v6, (uint64_t)qword_269BF30A8);
  swift_bridgeObjectRetain_n();
  unint64_t v8 = sub_251F35080();
  int v9 = sub_251F35FD0();
  unint64_t v62 = a1;
  if (os_log_type_enabled(v8, (os_log_type_t)v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    v64[0] = v11;
    *(_DWORD *)uint64_t v10 = 136315394;
    uint64_t v63 = sub_251A00E84(0xD000000000000017, 0x8000000251F6B1B0, v64);
    sub_251F361D0();
    *(_WORD *)(v10 + 12) = 2080;
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v12 = sub_251F366C0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v12 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v13 = MEMORY[0x263F8EE78];
    LODWORD(v58) = v9;
    uint64_t v57 = v11;
    if (v12)
    {
      uint64_t v63 = MEMORY[0x263F8EE78];
      uint64_t result = sub_251A3E084(0, v12 & ~(v12 >> 63), 0);
      if (v12 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v53 = v10;
      uint64_t v54 = v8;
      unint64_t v55 = v3;
      uint64_t v56 = a2;
      uint64_t v59 = v7;
      uint64_t v13 = v63;
      unint64_t v60 = a1 & 0xC000000000000001;
      uint64_t v61 = (void *)v12;
      uint64_t v15 = sub_251F34DA0();
      uint64_t v16 = v15;
      int64_t v17 = 0;
      uint64_t v18 = *(void *)(v15 - 8);
      uint64_t v19 = *(void *)(v18 + 64);
      do
      {
        MEMORY[0x270FA5388](v15);
        if (v60) {
          id v20 = (id)MEMORY[0x2533AB3A0](v17, a1);
        }
        else {
          id v20 = *(id *)(a1 + 8 * (void)v17 + 32);
        }
        id v21 = v20;
        id v22 = objc_msgSend(v21, sel_uniqueIdentifier);
        sub_251F34D80();

        uint64_t v63 = v13;
        unint64_t v24 = *(void *)(v13 + 16);
        unint64_t v23 = *(void *)(v13 + 24);
        if (v24 >= v23 >> 1)
        {
          sub_251A3E084(v23 > 1, v24 + 1, 1);
          uint64_t v13 = v63;
        }
        int64_t v17 = (char *)v17 + 1;
        *(void *)(v13 + 16) = v24 + 1;
        uint64_t v15 = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v18 + 32))(v13+ ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80))+ *(void *)(v18 + 72) * v24, (char *)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), v16);
        a1 = v62;
      }
      while (v61 != v17);
      uint64_t v3 = v55;
      a2 = v56;
      uint64_t v7 = v59;
      uint64_t v10 = v53;
      unint64_t v8 = v54;
    }
    uint64_t v25 = sub_251F34DA0();
    uint64_t v26 = MEMORY[0x2533AAA10](v13, v25);
    unint64_t v28 = v27;
    swift_bridgeObjectRelease();
    uint64_t v63 = sub_251A00E84(v26, v28, v64);
    sub_251F361D0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2519F3000, v8, (os_log_type_t)v58, "%s Applying characteristics [%s] to StateSnapshot", (uint8_t *)v10, 0x16u);
    uint64_t v29 = v57;
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v29, -1, -1);
    MEMORY[0x2533AC760](v10, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  id v30 = v3;
  uint64_t v31 = sub_251B90194(MEMORY[0x263F8EE80], a1, v30);

  id v32 = v30;
  BOOL v33 = sub_251F35080();
  os_log_type_t v34 = sub_251F35FD0();
  int v35 = v34;
  BOOL v36 = os_log_type_enabled(v33, v34);
  uint64_t v61 = v31;
  if (v36)
  {
    uint64_t v37 = swift_slowAlloc();
    uint64_t v58 = swift_slowAlloc();
    v64[0] = v58;
    *(_DWORD *)uint64_t v37 = 136315394;
    uint64_t v59 = v7;
    uint64_t v63 = sub_251A00E84(0xD000000000000017, 0x8000000251F6B1B0, v64);
    sub_251F361D0();
    *(_WORD *)(v37 + 12) = 2080;
    uint64_t v57 = v37 + 14;
    id v38 = objc_msgSend(v32, sel_reachabilityByAccessoryUniqueIdentifier);
    sub_251F34DA0();
    sub_251B3F4F4();
    unint64_t v60 = 0;
    sub_251AD2788();
    LODWORD(v56) = v35;
    sub_251F35550();

    a1 = v62;
    uint64_t v39 = sub_251F35560();
    unint64_t v41 = v40;
    swift_bridgeObjectRelease();
    uint64_t v63 = sub_251A00E84(v39, v41, v64);
    sub_251F361D0();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2519F3000, v33, (os_log_type_t)v56, "%s Reachability -> %s", (uint8_t *)v37, 0x16u);
    uint64_t v42 = v58;
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v42, -1, -1);
    MEMORY[0x2533AC760](v37, -1, -1);
  }
  else
  {
  }
  id v43 = v32;
  unint64_t v44 = sub_251B902C8(MEMORY[0x263F8EE80], a1, v43);

  swift_bridgeObjectRetain_n();
  uint64_t v45 = sub_251F35080();
  os_log_type_t v46 = sub_251F35FD0();
  if (os_log_type_enabled(v45, v46))
  {
    uint64_t v47 = swift_slowAlloc();
    uint64_t v48 = swift_slowAlloc();
    v64[0] = v48;
    *(_DWORD *)uint64_t v47 = 136315394;
    uint64_t v63 = sub_251A00E84(0xD000000000000017, 0x8000000251F6B1B0, v64);
    sub_251F361D0();
    *(_WORD *)(v47 + 12) = 2080;
    sub_251F34DA0();
    sub_251AD2788();
    swift_bridgeObjectRetain();
    uint64_t v49 = sub_251F35560();
    unint64_t v51 = v50;
    swift_bridgeObjectRelease();
    uint64_t v63 = sub_251A00E84(v49, v51, v64);
    sub_251F361D0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2519F3000, v45, v46, "%s Mapped result: %s", (uint8_t *)v47, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v48, -1, -1);
    MEMORY[0x2533AC760](v47, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  *(void *)a2 = v61;
  *(void *)(a2 + 8) = v44;
  *(unsigned char *)(a2 + 16) = 4;
  type metadata accessor for StateSnapshot.UpdateType(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_251B8F5DC@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  if (qword_269B9C2E0 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_251F350A0();
  __swift_project_value_buffer(v6, (uint64_t)qword_269BF30A8);
  swift_bridgeObjectRetain_n();
  uint64_t v7 = sub_251F35080();
  int v8 = sub_251F35FD0();
  if (!os_log_type_enabled(v7, (os_log_type_t)v8))
  {

    swift_bridgeObjectRelease_n();
LABEL_18:
    id v29 = v3;
    id v30 = sub_251B90194(MEMORY[0x263F8EE80], a1, v29);

    unint64_t v31 = sub_2519FB498(MEMORY[0x263F8EE78]);
    *(void *)a2 = v30;
    *(void *)(a2 + 8) = v31;
    *(unsigned char *)(a2 + 16) = 4;
    type metadata accessor for StateSnapshot.UpdateType(0);
    return swift_storeEnumTagMultiPayload();
  }
  uint64_t v9 = swift_slowAlloc();
  uint64_t v10 = swift_slowAlloc();
  v42[0] = v10;
  *(_DWORD *)uint64_t v9 = 136315394;
  uint64_t v41 = sub_251A00E84(0xD000000000000017, 0x8000000251F6B1B0, v42);
  sub_251F361D0();
  *(_WORD *)(v9 + 12) = 2080;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_251F366C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v12 = MEMORY[0x263F8EE78];
  uint64_t v37 = v10;
  if (!v11)
  {
LABEL_17:
    uint64_t v24 = sub_251F34DA0();
    uint64_t v25 = MEMORY[0x2533AAA10](v12, v24);
    unint64_t v27 = v26;
    swift_bridgeObjectRelease();
    uint64_t v41 = sub_251A00E84(v25, v27, v42);
    sub_251F361D0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2519F3000, v7, (os_log_type_t)v8, "%s Applying characteristics [%s] to StateSnapshot", (uint8_t *)v9, 0x16u);
    uint64_t v28 = v37;
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v28, -1, -1);
    MEMORY[0x2533AC760](v9, -1, -1);

    goto LABEL_18;
  }
  uint64_t v41 = MEMORY[0x263F8EE78];
  uint64_t result = sub_251A3E084(0, v11 & ~(v11 >> 63), 0);
  if ((v11 & 0x8000000000000000) == 0)
  {
    HIDWORD(v32) = v8;
    uint64_t v33 = v9;
    os_log_type_t v34 = v7;
    int v35 = v3;
    uint64_t v36 = a2;
    uint64_t v12 = v41;
    unint64_t v39 = a1 & 0xC000000000000001;
    unint64_t v40 = a1;
    uint64_t v14 = sub_251F34DA0();
    uint64_t v15 = 0;
    uint64_t v38 = v14;
    uint64_t v16 = *(void *)(v14 - 8);
    uint64_t v17 = *(void *)(v16 + 64);
    uint64_t v18 = v11;
    do
    {
      MEMORY[0x270FA5388](v14);
      if (v39) {
        id v19 = (id)MEMORY[0x2533AB3A0](v15, v40);
      }
      else {
        id v19 = *(id *)(v40 + 8 * v15 + 32);
      }
      id v20 = v19;
      id v21 = objc_msgSend(v20, sel_uniqueIdentifier);
      sub_251F34D80();

      uint64_t v41 = v12;
      unint64_t v23 = *(void *)(v12 + 16);
      unint64_t v22 = *(void *)(v12 + 24);
      if (v23 >= v22 >> 1)
      {
        sub_251A3E084(v22 > 1, v23 + 1, 1);
        uint64_t v12 = v41;
      }
      ++v15;
      *(void *)(v12 + 16) = v23 + 1;
      uint64_t v14 = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v16 + 32))(v12+ ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))+ *(void *)(v16 + 72) * v23, (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), v38);
    }
    while (v18 != v15);
    uint64_t v3 = v35;
    a2 = v36;
    a1 = v40;
    uint64_t v9 = v33;
    uint64_t v7 = v34;
    LOBYTE(v8) = BYTE4(v32);
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

uint64_t sub_251B8FA48(void *a1, id *a2, void *a3)
{
  id v5 = *a2;
  id v6 = objc_msgSend(a3, sel_valueByCharacteristicUniqueIdentifier);
  uint64_t v7 = sub_251F34DA0();
  sub_251AD2788();
  uint64_t v8 = sub_251F35550();

  id v9 = objc_msgSend(v5, sel_uniqueIdentifier);
  uint64_t v10 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34D80();

  if (*(void *)(v8 + 16) && (unint64_t v13 = sub_2519FE584((uint64_t)v12), (v14 & 1) != 0)) {
    sub_251A0D51C(*(void *)(v8 + 56) + 32 * v13, (uint64_t)v20);
  }
  else {
    memset(v20, 0, sizeof(v20));
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v7);
  StateSnapshot.CharacteristicUpdateType.ValueType.init(value:)((uint64_t)v20, (uint64_t)v21);
  uint64_t v15 = v21[0];
  uint64_t v16 = v21[1];
  char v17 = v22;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&v20[0] = *a1;
  *a1 = 0x8000000000000000;
  sub_251A0E390(v15, v16, v17, v5, isUniquelyReferenced_nonNull_native);
  *a1 = *(void *)&v20[0];

  return swift_bridgeObjectRelease();
}

uint64_t sub_251B8FC38@<X0>(unint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3 = v2;
  if (qword_269B9C2E0 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_251F350A0();
  __swift_project_value_buffer(v6, (uint64_t)qword_269BF30A8);
  swift_bridgeObjectRetain_n();
  uint64_t v7 = sub_251F35080();
  int v8 = sub_251F35FD0();
  if (!os_log_type_enabled(v7, (os_log_type_t)v8))
  {

    swift_bridgeObjectRelease_n();
LABEL_18:
    id v29 = objc_msgSend(v3, sel_isOnByActionSetUniqueIdentifier);
    sub_251F34DA0();
    sub_251B3F4F4();
    sub_251AD2788();
    uint64_t v30 = sub_251F35550();

    uint64_t v31 = sub_251B8E858(v30);
    swift_bridgeObjectRelease();
    id v32 = objc_msgSend(v3, sel_didExecutionFailByActionSetUniqueIdentifier);
    uint64_t v33 = sub_251F35550();

    uint64_t v34 = sub_251B8E858(v33);
    swift_bridgeObjectRelease();
    *a2 = a1;
    a2[1] = v31;
    a2[2] = v34;
    type metadata accessor for StateSnapshot.UpdateType(0);
    swift_storeEnumTagMultiPayload();
    return swift_bridgeObjectRetain();
  }
  uint64_t v9 = swift_slowAlloc();
  uint64_t v10 = swift_slowAlloc();
  v45[0] = v10;
  *(_DWORD *)uint64_t v9 = 136315394;
  uint64_t v44 = sub_251A00E84(0xD000000000000017, 0x8000000251F6B1B0, v45);
  sub_251F361D0();
  *(_WORD *)(v9 + 12) = 2080;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_251F366C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v12 = MEMORY[0x263F8EE78];
  uint64_t v40 = v10;
  if (!v11)
  {
LABEL_17:
    uint64_t v24 = sub_251F34DA0();
    uint64_t v25 = MEMORY[0x2533AAA10](v12, v24);
    unint64_t v27 = v26;
    swift_bridgeObjectRelease();
    uint64_t v44 = sub_251A00E84(v25, v27, v45);
    sub_251F361D0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2519F3000, v7, (os_log_type_t)v8, "%s Applying actionsets [%s] to StateSnapshot", (uint8_t *)v9, 0x16u);
    uint64_t v28 = v40;
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v28, -1, -1);
    MEMORY[0x2533AC760](v9, -1, -1);

    goto LABEL_18;
  }
  uint64_t v44 = MEMORY[0x263F8EE78];
  uint64_t result = sub_251A3E084(0, v11 & ~(v11 >> 63), 0);
  if ((v11 & 0x8000000000000000) == 0)
  {
    HIDWORD(v35) = v8;
    uint64_t v36 = v9;
    uint64_t v37 = v7;
    uint64_t v38 = v3;
    unint64_t v39 = a2;
    uint64_t v12 = v44;
    unint64_t v42 = a1 & 0xC000000000000001;
    unint64_t v43 = a1;
    uint64_t v14 = sub_251F34DA0();
    uint64_t v15 = 0;
    uint64_t v41 = v14;
    uint64_t v16 = *(void *)(v14 - 8);
    uint64_t v17 = *(void *)(v16 + 64);
    uint64_t v18 = v11;
    do
    {
      MEMORY[0x270FA5388](v14);
      if (v42) {
        id v19 = (id)MEMORY[0x2533AB3A0](v15, v43);
      }
      else {
        id v19 = *(id *)(v43 + 8 * v15 + 32);
      }
      id v20 = v19;
      id v21 = objc_msgSend(v20, sel_uniqueIdentifier);
      sub_251F34D80();

      uint64_t v44 = v12;
      unint64_t v23 = *(void *)(v12 + 16);
      unint64_t v22 = *(void *)(v12 + 24);
      if (v23 >= v22 >> 1)
      {
        sub_251A3E084(v22 > 1, v23 + 1, 1);
        uint64_t v12 = v44;
      }
      ++v15;
      *(void *)(v12 + 16) = v23 + 1;
      uint64_t v14 = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v16 + 32))(v12+ ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))+ *(void *)(v16 + 72) * v23, (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), v41);
    }
    while (v18 != v15);
    a1 = v43;
    uint64_t v3 = v38;
    a2 = v39;
    uint64_t v9 = v36;
    uint64_t v7 = v37;
    LOBYTE(v8) = BYTE4(v35);
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

uint64_t sub_251B9012C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9EFD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *sub_251B90194(void *a1, unint64_t a2, void *a3)
{
  uint64_t v6 = a1;
  unint64_t v13 = a1;
  if (a2 >> 62) {
    goto LABEL_13;
  }
  uint64_t v7 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v7; uint64_t v7 = sub_251F366C0())
  {
    for (uint64_t i = 4; ; ++i)
    {
      id v9 = (a2 & 0xC000000000000001) != 0 ? (id)MEMORY[0x2533AB3A0](i - 4, a2) : *(id *)(a2 + 8 * i);
      uint64_t v6 = v9;
      uint64_t v10 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      id v12 = v9;
      sub_251B8FA48(&v13, &v12, a3);
      if (v3)
      {
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        return v6;
      }

      if (v10 == v7)
      {
        swift_bridgeObjectRelease();
        return v13;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return v6;
}

unint64_t sub_251B902C8(unint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  id v40 = a3;
  unint64_t v5 = a2;
  if (a2 >> 62)
  {
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_251F366C0();
    if (v7) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v7)
    {
LABEL_3:
      uint64_t v35 = v4;
      unint64_t v36 = a1;
      uint64_t v8 = 0;
      a1 = v5 & 0xC000000000000001;
      id v9 = &off_26536F000;
      uint64_t v38 = v7;
      unint64_t v39 = v5;
      unint64_t v37 = v5 & 0xC000000000000001;
      while (1)
      {
        while (1)
        {
          if (a1) {
            id v10 = (id)MEMORY[0x2533AB3A0](v8, v5);
          }
          else {
            id v10 = *(id *)(v5 + 8 * v8 + 32);
          }
          uint64_t v11 = v10;
          uint64_t v12 = v8 + 1;
          if (__OFADD__(v8, 1))
          {
            __break(1u);
            goto LABEL_18;
          }
          id v13 = [v10 (SEL)v9[326]];
          if (v13)
          {
            uint64_t v4 = v13;
            id v14 = objc_msgSend(v13, sel_accessory);

            if (v14) {
              break;
            }
          }

LABEL_5:
          ++v8;
          if (v12 == v7) {
            goto LABEL_16;
          }
        }
        id v15 = objc_msgSend(v40, sel_reachabilityByAccessoryUniqueIdentifier);
        uint64_t v16 = sub_251F34DA0();
        sub_251B3F4F4();
        sub_251AD2788();
        uint64_t v17 = sub_251F35550();

        id v18 = objc_msgSend(v14, sel_uniqueIdentifier);
        uint64_t v41 = &v33;
        uint64_t v42 = v16;
        uint64_t v19 = *(void *)(v16 - 8);
        uint64_t v20 = *(void *)(v19 + 64);
        MEMORY[0x270FA5388](v18);
        sub_251F34D80();

        if (!*(void *)(v17 + 16)
          || (unint64_t v21 = sub_2519FE584((uint64_t)&v33 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0)), (v22 & 1) == 0))
        {
          swift_bridgeObjectRelease();
          unint64_t v23 = *(void (**)(char *, uint64_t))(v19 + 8);
          uint64_t v4 = (void *)(v19 + 8);
          v23((char *)&v33 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0), v42);

          uint64_t v7 = v38;
          unint64_t v5 = v39;
          a1 = v37;
          id v9 = &off_26536F000;
          goto LABEL_5;
        }
        id v24 = *(id *)(*(void *)(v17 + 56) + 8 * v21);
        swift_bridgeObjectRelease();
        uint64_t v25 = *(void (**)(char *, uint64_t))(v19 + 8);
        uint64_t v4 = (void *)(v19 + 8);
        uint64_t v34 = v25;
        uint64_t v26 = v42;
        v25((char *)&v33 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0), v42);
        id v27 = objc_msgSend(v14, sel_uniqueIdentifier);
        uint64_t v41 = &v33;
        MEMORY[0x270FA5388](v27);
        uint64_t v28 = (char *)&v33 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
        sub_251F34D80();

        char v29 = objc_msgSend(v24, sel_BOOLValue);
        unint64_t v30 = v36;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v43 = v30;
        sub_251A0F45C(v29, (uint64_t)v28, isUniquelyReferenced_nonNull_native);
        unint64_t v36 = v43;
        swift_bridgeObjectRelease();
        v34(v28, v26);

        uint64_t v8 = v12;
        uint64_t v7 = v38;
        unint64_t v5 = v39;
        a1 = v37;
        id v9 = &off_26536F000;
        if (v12 == v38)
        {
LABEL_16:
          swift_bridgeObjectRelease();
          return v36;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return a1;
}

id WidgetManager.wrappedValue.getter()
{
  return *v0;
}

uint64_t WidgetManager.monitorState(for:widgetIdentifier:kind:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[4] = a3;
  v6[5] = a4;
  uint64_t v6[2] = a1;
  v6[3] = a2;
  uint64_t v7 = *v5;
  v6[6] = a5;
  v6[7] = v7;
  v6[8] = sub_251F35C80();
  v6[9] = sub_251F35C70();
  uint64_t v9 = sub_251F35C00();
  v6[10] = v9;
  v6[11] = v8;
  return MEMORY[0x270FA2498](sub_251B9072C, v9, v8);
}

uint64_t sub_251B9072C()
{
  uint64_t v1 = *(void *)(v0 + 48);
  long long v9 = *(_OWORD *)(v0 + 16);
  long long v10 = *(_OWORD *)(v0 + 32);
  id v2 = *(id *)(v0 + 56);
  uint64_t v3 = sub_251F35C70();
  *(void *)(v0 + 96) = v3;
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 104) = v4;
  *(void *)(v4 + 16) = v2;
  *(_OWORD *)(v4 + 24) = v9;
  *(_OWORD *)(v4 + 40) = v10;
  *(void *)(v4 + 56) = v1;
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v5;
  *unint64_t v5 = v0;
  uint64_t v6 = MEMORY[0x263F8EE60];
  v5[1] = sub_251B90864;
  uint64_t v7 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA2360](v5, v3, v7, 0xD000000000000028, 0x8000000251F6B1D0, sub_251B90E18, v4, v6 + 8);
}

uint64_t sub_251B90864()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 120) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 80);
    uint64_t v4 = *(void *)(v2 + 88);
    unint64_t v5 = sub_251B909F8;
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    uint64_t v3 = *(void *)(v2 + 80);
    uint64_t v4 = *(void *)(v2 + 88);
    unint64_t v5 = sub_251B90988;
  }
  return MEMORY[0x270FA2498](v5, v3, v4);
}

uint64_t sub_251B90988()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251B909F8()
{
  uint64_t v1 = *(void **)(v0 + 56);
  swift_release();

  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

void sub_251B90A80(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v40 = a4;
  uint64_t v41 = a5;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9F020);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x270FA5388](a3);
  id v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  aBlock[0] = MEMORY[0x263F8EE78];
  uint64_t v16 = *(void *)(a3 + 16);
  if (v16)
  {
    uint64_t v32 = v14;
    uint64_t v33 = a6;
    uint64_t v34 = a7;
    uint64_t v35 = a1;
    unint64_t v36 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v37 = v13;
    uint64_t v38 = v12;
    unint64_t v39 = a2;
    uint64_t v31 = swift_bridgeObjectRetain();
    uint64_t v17 = v31 + 64;
    do
    {
      self;
      uint64_t v18 = swift_dynamicCastObjCClass();
      if (v18)
      {
        uint64_t v19 = v18;
        id v20 = objc_allocWithZone(MEMORY[0x263F0E498]);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v21 = (void *)sub_251F356C0();
        sub_251A1A568(0, &qword_269BA5560);
        char v22 = (void *)sub_251F35AA0();
        id v23 = objc_msgSend(v20, sel_initWithMTRDevice_controllerID_attributePaths_, v19, v21, v22);
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();

        if (v23)
        {
          MEMORY[0x2533AA9D0]();
          if (*(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8)
                                                                                  + 0x18) >> 1)
            sub_251F35B10();
          sub_251F35B70();
          sub_251F35AE0();
        }
      }
      v17 += 40;
      --v16;
    }
    while (v16);
    swift_bridgeObjectRelease();
    uint64_t v12 = v38;
    a2 = v39;
    id v15 = v36;
    uint64_t v13 = v37;
    a1 = v35;
  }
  sub_251A1A568(0, &qword_269B9F030);
  id v24 = (void *)sub_251F35AA0();
  swift_bridgeObjectRelease();
  uint64_t v25 = (void *)sub_251F356C0();
  uint64_t v26 = (void *)sub_251F356C0();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1, v12);
  unint64_t v27 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v28 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v28 + v27, v15, v12);
  aBlock[4] = sub_251B93A64;
  aBlock[5] = v28;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_251C97A44;
  aBlock[3] = &block_descriptor_45;
  char v29 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(a2, sel_monitorStateForMTRAttributeDescriptors_widgetIdentifier_kind_completion_, v24, v25, v26, v29);
  _Block_release(v29);
}

uint64_t sub_251B90E18(uint64_t a1)
{
  return sub_251B9283C(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_251B90A80);
}

uint64_t WidgetManager.monitorAndFetchState(for:widgetIdentifier:kind:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v7[6] = a5;
  v7[7] = a6;
  uint64_t v7[4] = a3;
  v7[5] = a4;
  uint64_t v7[2] = a1;
  v7[3] = a2;
  v7[8] = *v6;
  v7[9] = sub_251F35C80();
  v7[10] = sub_251F35C70();
  uint64_t v9 = sub_251F35C00();
  v7[11] = v9;
  v7[12] = v8;
  return MEMORY[0x270FA2498](sub_251B90EDC, v9, v8);
}

{
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v7[6] = a5;
  v7[7] = a6;
  uint64_t v7[4] = a3;
  v7[5] = a4;
  uint64_t v7[2] = a1;
  v7[3] = a2;
  v7[8] = *v6;
  v7[9] = sub_251F35C80();
  v7[10] = sub_251F35C70();
  uint64_t v9 = sub_251F35C00();
  v7[11] = v9;
  v7[12] = v8;
  return MEMORY[0x270FA2498](sub_251B92288, v9, v8);
}

uint64_t sub_251B90EDC()
{
  uint64_t v1 = *(void *)(v0 + 56);
  long long v10 = *(_OWORD *)(v0 + 24);
  long long v11 = *(_OWORD *)(v0 + 40);
  id v2 = *(id *)(v0 + 64);
  uint64_t v3 = sub_251F35C70();
  *(void *)(v0 + 104) = v3;
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 112) = v4;
  *(void *)(v4 + 16) = v2;
  *(_OWORD *)(v4 + 24) = v10;
  *(_OWORD *)(v4 + 40) = v11;
  *(void *)(v4 + 56) = v1;
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v5;
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  *unint64_t v5 = v0;
  v5[1] = sub_251B9101C;
  uint64_t v7 = *(void *)(v0 + 16);
  uint64_t v8 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA2360](v7, v3, v8, 0xD000000000000030, 0x8000000251F6B200, sub_251B91380, v4, updated);
}

uint64_t sub_251B9101C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 128) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 88);
    uint64_t v4 = *(void *)(v2 + 96);
    unint64_t v5 = sub_251B93B30;
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    uint64_t v3 = *(void *)(v2 + 88);
    uint64_t v4 = *(void *)(v2 + 96);
    unint64_t v5 = sub_251B93B34;
  }
  return MEMORY[0x270FA2498](v5, v3, v4);
}

void sub_251B91140(uint64_t a1, void *a2, uint64_t a3)
{
  id v17 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9F008);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1A568(0, (unint64_t *)&qword_26B21F170);
  uint64_t v16 = sub_251F35AA0();
  uint64_t v9 = (void *)sub_251F356C0();
  long long v10 = (void *)sub_251F356C0();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  unint64_t v11 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v12 = (v7 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v13 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v13 + v11, v8, v5);
  *(void *)(v13 + v12) = a3;
  aBlock[4] = sub_251B9399C;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_251B91398;
  aBlock[3] = &block_descriptor_39;
  uint64_t v14 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_release();
  id v15 = (void *)v16;
  objc_msgSend(v17, sel_monitorAndFetchStateForCharacteristics_widgetIdentifier_kind_completion_, v16, v9, v10, v14);
  _Block_release(v14);
}

uint64_t sub_251B91380(uint64_t a1)
{
  return sub_251B9283C(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_251B91140);
}

uint64_t WidgetManager.fetchState(for:)(uint64_t a1, uint64_t a2)
{
  v3[2] = a1;
  v3[3] = a2;
  long long v3[4] = *v2;
  v3[5] = sub_251F35C80();
  v3[6] = sub_251F35C70();
  uint64_t v5 = sub_251F35C00();
  v3[7] = v5;
  v3[8] = v4;
  return MEMORY[0x270FA2498](sub_251B91440, v5, v4);
}

{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v3[2] = a1;
  v3[3] = a2;
  long long v3[4] = *v2;
  v3[5] = sub_251F35C80();
  v3[6] = sub_251F35C70();
  uint64_t v5 = sub_251F35C00();
  v3[7] = v5;
  v3[8] = v4;
  return MEMORY[0x270FA2498](sub_251B928F8, v5, v4);
}

uint64_t sub_251B91440()
{
  uint64_t v1 = *(void *)(v0 + 24);
  id v2 = *(id *)(v0 + 32);
  uint64_t v3 = sub_251F35C70();
  *(void *)(v0 + 72) = v3;
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 80) = v4;
  *(void *)(v4 + 16) = v2;
  *(void *)(v4 + 24) = v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v5;
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  *uint64_t v5 = v0;
  v5[1] = sub_251B91558;
  uint64_t v7 = *(void *)(v0 + 16);
  uint64_t v8 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA2360](v7, v3, v8, 0xD000000000000010, 0x8000000251F6B240, sub_251B9187C, v4, updated);
}

uint64_t sub_251B91558()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 56);
    uint64_t v4 = *(void *)(v2 + 64);
    uint64_t v5 = sub_251B93B2C;
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    uint64_t v3 = *(void *)(v2 + 56);
    uint64_t v4 = *(void *)(v2 + 64);
    uint64_t v5 = sub_251B93B00;
  }
  return MEMORY[0x270FA2498](v5, v3, v4);
}

void sub_251B9167C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9F008);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6);
  sub_251A1A568(0, (unint64_t *)&qword_26B21F170);
  uint64_t v9 = (void *)sub_251F35AA0();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v11 + v10, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  *(void *)(v11 + ((v8 + v10 + 7) & 0xFFFFFFFFFFFFFFF8)) = a3;
  aBlock[4] = sub_251B93968;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_251B91398;
  aBlock[3] = &block_descriptor_33;
  unint64_t v12 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_release();
  objc_msgSend(a2, sel_fetchStateForCharacteristics_completion_, v9, v12);
  _Block_release(v12);
}

void sub_251B9187C(uint64_t a1)
{
  sub_251B9167C(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t WidgetManager.perform(_:forKind:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[2] = a1;
  v4[3] = a2;
  uint64_t v5 = *v3;
  v4[4] = a3;
  v4[5] = v5;
  v4[6] = sub_251F35C80();
  v4[7] = sub_251F35C70();
  uint64_t v7 = sub_251F35C00();
  v4[8] = v7;
  v4[9] = v6;
  return MEMORY[0x270FA2498](sub_251B91928, v7, v6);
}

uint64_t sub_251B91928()
{
  unint64_t v1 = *(void *)(v0 + 16);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_251F366C0();
    swift_bridgeObjectRelease();
    if (v9) {
      goto LABEL_3;
    }
  }
  else if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    uint64_t v2 = *(void *)(v0 + 32);
    long long v12 = *(_OWORD *)(v0 + 16);
    id v3 = *(id *)(v0 + 40);
    uint64_t v4 = sub_251F35C70();
    *(void *)(v0 + 80) = v4;
    uint64_t v5 = swift_task_alloc();
    *(void *)(v0 + 88) = v5;
    *(void *)(v5 + 16) = v3;
    *(_OWORD *)(v5 + 24) = v12;
    *(void *)(v5 + 40) = v2;
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 96) = v6;
    *uint64_t v6 = v0;
    uint64_t v7 = MEMORY[0x263F8EE60];
    v6[1] = sub_251B91ADC;
    uint64_t v8 = MEMORY[0x263F8F500];
    return MEMORY[0x270FA2360](v6, v4, v8, 0xD000000000000013, 0x8000000251F6B260, sub_251B91EFC, v5, v7 + 8);
  }
  swift_release();
  unint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_251B91ADC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 64);
    uint64_t v4 = *(void *)(v2 + 72);
    uint64_t v5 = sub_251B91C70;
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    uint64_t v3 = *(void *)(v2 + 64);
    uint64_t v4 = *(void *)(v2 + 72);
    uint64_t v5 = sub_251B91C00;
  }
  return MEMORY[0x270FA2498](v5, v3, v4);
}

uint64_t sub_251B91C00()
{
  swift_release();
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251B91C70()
{
  unint64_t v1 = *(void **)(v0 + 40);
  swift_release();

  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

void sub_251B91CF8(uint64_t a1, void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9F020);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4);
  sub_251A1A568(0, (unint64_t *)&qword_269B9F028);
  uint64_t v7 = (void *)sub_251F35AA0();
  uint64_t v8 = (void *)sub_251F356C0();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v9 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v10 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v10 + v9, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_251B93948;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_251C97A44;
  aBlock[3] = &block_descriptor_27;
  uint64_t v11 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(a2, sel_performRequests_forKind_completion_, v7, v8, v11);
  _Block_release(v11);
}

void sub_251B91EFC(uint64_t a1)
{
  sub_251B91CF8(a1, *(void **)(v1 + 16));
}

uint64_t sub_251B91F08(void *a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (sub_251F35D80())
  {
    sub_251F35C30();
    sub_251B937F4();
    uint64_t v7 = swift_allocError();
    sub_251F35520();
    uint64_t v22 = v7;
  }
  else
  {
    if (!a1)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9F020);
      return sub_251F35C20();
    }
    id v8 = a1;
    if (qword_269B9C3B0 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_251F350A0();
    __swift_project_value_buffer(v9, (uint64_t)qword_269BF3150);
    id v10 = a1;
    id v11 = a1;
    long long v12 = sub_251F35080();
    os_log_type_t v13 = sub_251F35FD0();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = swift_slowAlloc();
      id v15 = (void *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      uint64_t v22 = v16;
      *(_DWORD *)uint64_t v14 = 136315394;
      sub_251A00E84(a3, a4, &v22);
      sub_251F361D0();
      *(_WORD *)(v14 + 12) = 2112;
      id v17 = a1;
      uint64_t v21 = _swift_stdlib_bridgeErrorToNSError();
      sub_251F361D0();
      *id v15 = v21;

      _os_log_impl(&dword_2519F3000, v12, v13, "%s error occured: %@", (uint8_t *)v14, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v15, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v16, -1, -1);
      MEMORY[0x2533AC760](v14, -1, -1);
    }
    else
    {
    }
    sub_251B936E0();
    uint64_t v19 = swift_allocError();
    *id v20 = a1;
    uint64_t v22 = v19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9F020);
  return sub_251F35C10();
}

uint64_t sub_251B92288()
{
  uint64_t v1 = *(void *)(v0 + 56);
  long long v10 = *(_OWORD *)(v0 + 24);
  long long v11 = *(_OWORD *)(v0 + 40);
  id v2 = *(id *)(v0 + 64);
  uint64_t v3 = sub_251F35C70();
  *(void *)(v0 + 104) = v3;
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 112) = v4;
  *(void *)(v4 + 16) = v2;
  *(_OWORD *)(v4 + 24) = v10;
  *(_OWORD *)(v4 + 40) = v11;
  *(void *)(v4 + 56) = v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v5;
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  *uint64_t v5 = v0;
  v5[1] = sub_251B923C8;
  uint64_t v7 = *(void *)(v0 + 16);
  uint64_t v8 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA2360](v7, v3, v8, 0xD000000000000030, 0x8000000251F6B200, sub_251B92824, v4, updated);
}

uint64_t sub_251B923C8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 128) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 88);
    uint64_t v4 = *(void *)(v2 + 96);
    uint64_t v5 = sub_251B9255C;
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    uint64_t v3 = *(void *)(v2 + 88);
    uint64_t v4 = *(void *)(v2 + 96);
    uint64_t v5 = sub_251B924EC;
  }
  return MEMORY[0x270FA2498](v5, v3, v4);
}

uint64_t sub_251B924EC()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251B9255C()
{
  uint64_t v1 = *(void **)(v0 + 64);
  swift_release();

  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

void sub_251B925E4(uint64_t a1, void *a2, uint64_t a3)
{
  id v17 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9F008);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1A568(0, &qword_26B21EB00);
  uint64_t v16 = sub_251F35AA0();
  uint64_t v9 = (void *)sub_251F356C0();
  long long v10 = (void *)sub_251F356C0();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
  unint64_t v11 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v12 = (v7 + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v13 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v13 + v11, v8, v5);
  *(void *)(v13 + v12) = a3;
  aBlock[4] = sub_251B93850;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_251B91398;
  aBlock[3] = &block_descriptor_21_1;
  uint64_t v14 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_release();
  id v15 = (void *)v16;
  objc_msgSend(v17, sel_monitorAndFetchStateForActionSets_widgetIdentifier_kind_completion_, v16, v9, v10, v14);
  _Block_release(v14);
}

uint64_t sub_251B92824(uint64_t a1)
{
  return sub_251B9283C(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_251B925E4);
}

uint64_t sub_251B9283C(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7]);
}

uint64_t sub_251B928F8()
{
  uint64_t v1 = *(void *)(v0 + 24);
  id v2 = *(id *)(v0 + 32);
  uint64_t v3 = sub_251F35C70();
  *(void *)(v0 + 72) = v3;
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 80) = v4;
  *(void *)(v4 + 16) = v2;
  *(void *)(v4 + 24) = v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v5;
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  *uint64_t v5 = v0;
  v5[1] = sub_251B92A10;
  uint64_t v7 = *(void *)(v0 + 16);
  uint64_t v8 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA2360](v7, v3, v8, 0xD000000000000010, 0x8000000251F6B240, sub_251B92E2C, v4, updated);
}

uint64_t sub_251B92A10()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 56);
    uint64_t v4 = *(void *)(v2 + 64);
    uint64_t v5 = sub_251B92BA4;
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    uint64_t v3 = *(void *)(v2 + 56);
    uint64_t v4 = *(void *)(v2 + 64);
    uint64_t v5 = sub_251B92B34;
  }
  return MEMORY[0x270FA2498](v5, v3, v4);
}

uint64_t sub_251B92B34()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251B92BA4()
{
  uint64_t v1 = *(void **)(v0 + 32);
  swift_release();

  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

void sub_251B92C2C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9F008);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6);
  sub_251A1A568(0, &qword_26B21EB00);
  uint64_t v9 = (void *)sub_251F35AA0();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v11 + v10, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  *(void *)(v11 + ((v8 + v10 + 7) & 0xFFFFFFFFFFFFFFF8)) = a3;
  aBlock[4] = sub_251B93624;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_251B91398;
  aBlock[3] = &block_descriptor_26;
  unint64_t v12 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_release();
  objc_msgSend(a2, sel_fetchStateForActionSets_completion_, v9, v12);
  _Block_release(v12);
}

void sub_251B92E2C(uint64_t a1)
{
  sub_251B92C2C(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

void destroy for WidgetManager(id *a1)
{
}

void **assignWithTake for WidgetManager(void **a1, void **a2)
{
  uint64_t v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetManager(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 8)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WidgetManager(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 8) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetManager()
{
  return &type metadata for WidgetManager;
}

ValueMetadata *type metadata accessor for WidgetManager.Error()
{
  return &type metadata for WidgetManager.Error;
}

uint64_t destroy for WidgetManager.AttributeDescriptor()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for WidgetManager.AttributeDescriptor(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for WidgetManager.AttributeDescriptor(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for WidgetManager.AttributeDescriptor(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_unknownObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetManager.AttributeDescriptor(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WidgetManager.AttributeDescriptor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetManager.AttributeDescriptor()
{
  return &type metadata for WidgetManager.AttributeDescriptor;
}

uint64_t sub_251B93138(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, void (*a7)(uint64_t))
{
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  uint64_t v14 = MEMORY[0x270FA5388](updated - 8);
  uint64_t v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v44 - v17;
  if (sub_251F35D80())
  {
    sub_251F35C30();
    sub_251B937F4();
    uint64_t v19 = swift_allocError();
    sub_251F35520();
    uint64_t v49 = v19;
LABEL_17:
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9F008);
    return sub_251F35C10();
  }
  if (a2)
  {
    id v20 = a2;
    if (qword_269B9C3B0 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_251F350A0();
    __swift_project_value_buffer(v21, (uint64_t)qword_269BF3150);
    id v22 = a2;
    id v23 = a2;
    id v24 = sub_251F35080();
    os_log_type_t v25 = sub_251F35FD0();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = swift_slowAlloc();
      unint64_t v27 = (void *)swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      uint64_t v49 = v28;
      *(_DWORD *)uint64_t v26 = 136315394;
      uint64_t v48 = sub_251A00E84(a5, a6, &v49);
      sub_251F361D0();
      *(_WORD *)(v26 + 12) = 2112;
      id v29 = a2;
      uint64_t v30 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v48 = v30;
      sub_251F361D0();
      *unint64_t v27 = v30;

      _os_log_impl(&dword_2519F3000, v24, v25, "%s error occured: %@", (uint8_t *)v26, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v27, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v28, -1, -1);
      MEMORY[0x2533AC760](v26, -1, -1);
    }
    else
    {
    }
    sub_251B936E0();
    uint64_t v41 = swift_allocError();
    *uint64_t v42 = a2;
    goto LABEL_16;
  }
  if (!a1)
  {
    sub_251B936E0();
    uint64_t v41 = swift_allocError();
    *unint64_t v43 = 0;
LABEL_16:
    uint64_t v49 = v41;
    goto LABEL_17;
  }
  uint64_t v31 = qword_269B9C3B0;
  id v47 = a1;
  if (v31 != -1) {
    swift_once();
  }
  uint64_t v32 = sub_251F350A0();
  __swift_project_value_buffer(v32, (uint64_t)qword_269BF3150);
  uint64_t v33 = sub_251F35080();
  os_log_type_t v34 = sub_251F35FD0();
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v35 = (uint8_t *)swift_slowAlloc();
    uint64_t v46 = swift_slowAlloc();
    uint64_t v49 = v46;
    uint64_t v45 = v35;
    *(_DWORD *)uint64_t v35 = 136315138;
    uint64_t v44 = v35 + 4;
    uint64_t v48 = sub_251A00E84(a5, a6, &v49);
    sub_251F361D0();
    os_log_type_t v36 = v34;
    uint64_t v37 = v45;
    _os_log_impl(&dword_2519F3000, v33, v36, "%s successfully delivered a response", v45, 0xCu);
    uint64_t v38 = v46;
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v38, -1, -1);
    MEMORY[0x2533AC760](v37, -1, -1);
  }

  unint64_t v39 = v47;
  a7(a4);
  sub_251B93734((uint64_t)v18, (uint64_t)v16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9F008);
  sub_251F35C20();

  return sub_251B93798((uint64_t)v18);
}

uint64_t sub_251B93624(void *a1, void *a2)
{
  return sub_251B93880(a1, a2, 0xD000000000000010, 0x8000000251F6B240, (void (*)(uint64_t))sub_251B8FC34);
}

void sub_251B93654(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

unint64_t sub_251B936E0()
{
  unint64_t result = qword_269B9F010;
  if (!qword_269B9F010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F010);
  }
  return result;
}

uint64_t sub_251B93734(uint64_t a1, uint64_t a2)
{
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(updated - 8) + 16))(a2, a1, updated);
  return a2;
}

uint64_t sub_251B93798(uint64_t a1)
{
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(updated - 8) + 8))(a1, updated);
  return a1;
}

unint64_t sub_251B937F4()
{
  unint64_t result = qword_269B9F018;
  if (!qword_269B9F018)
  {
    sub_251F35C30();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9F018);
  }
  return result;
}

uint64_t sub_251B93850(void *a1, void *a2)
{
  return sub_251B93880(a1, a2, 0xD000000000000030, 0x8000000251F6B200, (void (*)(uint64_t))sub_251B8FC34);
}

uint64_t sub_251B93880(void *a1, void *a2, uint64_t a3, unint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v11 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269B9F008) - 8);
  unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  return sub_251B93138(a1, a2, v5 + v12, *(void *)(v5 + ((*(void *)(v11 + 64) + v12 + 7) & 0xFFFFFFFFFFFFFFF8)), a3, a4, a5);
}

uint64_t sub_251B93948(void *a1)
{
  return sub_251B93A80(a1, 0xD000000000000013, 0x8000000251F6B260);
}

uint64_t sub_251B93968(void *a1, void *a2)
{
  return sub_251B93880(a1, a2, 0xD000000000000010, 0x8000000251F6B240, (void (*)(uint64_t))sub_251B8F5DC);
}

uint64_t sub_251B9399C(void *a1, void *a2)
{
  return sub_251B93880(a1, a2, 0xD000000000000030, 0x8000000251F6B200, (void (*)(uint64_t))sub_251B8EDB0);
}

uint64_t objectdestroy_23Tm()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9F020);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_251B93A64(void *a1)
{
  return sub_251B93A80(a1, 0xD000000000000028, 0x8000000251F6B1D0);
}

uint64_t sub_251B93A80(void *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v7 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269B9F020) - 8);
  return sub_251B91F08(a1, v3 + ((*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)), a2, a3);
}

uint64_t WidgetDataModel.snapshotModerator.getter()
{
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_269B9F070 + dword_269B9F070);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_251B93BD8;
  return v3();
}

uint64_t sub_251B93BD8()
{
  uint64_t v4 = *v0;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v4 + 8);
  uint64_t v1 = swift_retain();
  return v3(v1);
}

uint64_t WidgetSnapshotModerator.staticMatterDevice(_:)@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 144);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v3 + 24));
  sub_251AC5CEC((uint64_t *)(v3 + 16), a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 24));
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_251B93DB0()
{
  uint64_t v0 = sub_251F350A0();
  __swift_allocate_value_buffer(v0, qword_269BF30A8);
  __swift_project_value_buffer(v0, (uint64_t)qword_269BF30A8);
  return sub_251F35090();
}

uint64_t sub_251B93E34()
{
  type metadata accessor for WidgetActor();
  uint64_t v0 = swift_allocObject();
  uint64_t result = swift_defaultActor_initialize();
  qword_269B9F038 = v0;
  return result;
}

uint64_t static WidgetActor.shared.getter()
{
  if (qword_269B9C2E8 != -1) {
    swift_once();
  }
  return swift_retain();
}

uint64_t WidgetActor.deinit()
{
  swift_defaultActor_destroy();
  return v0;
}

uint64_t WidgetActor.__deallocating_deinit()
{
  swift_defaultActor_destroy();
  return MEMORY[0x270FA2418](v0);
}

uint64_t WidgetActor.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_251B93F28()
{
  if (qword_269B9C2E8 != -1) {
    swift_once();
  }
  return swift_retain();
}

uint64_t sub_251B93F84(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for WidgetActor();
  return MEMORY[0x270FA2150](v3, a2);
}

uint64_t static BasicIdentity.none.getter()
{
  return 0;
}

uint64_t BasicIdentity.uniqueIdentifier.getter(uint64_t a1)
{
  return a1;
}

uint64_t BasicIdentity.widgetKind.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a3;
}

uint64_t WidgetRefreshOptions.rawValue.getter()
{
  return *v0;
}

uint64_t WidgetRefreshOptions.rawValue.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*WidgetRefreshOptions.rawValue.modify())()
{
  return nullsub_1;
}

uint64_t WidgetRefreshOptions.init(rawValue:)@<X0>(uint64_t result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

void static WidgetRefreshOptions.all.getter(_DWORD *a1@<X8>)
{
  *a1 = 1;
}

void static WidgetRefreshOptions.accessories.getter(_DWORD *a1@<X8>)
{
  *a1 = 2;
}

void static WidgetRefreshOptions.climateSensors.getter(_DWORD *a1@<X8>)
{
  *a1 = 4;
}

void static WidgetRefreshOptions.actionSets.getter(_DWORD *a1@<X8>)
{
  *a1 = 16;
}

void static WidgetRefreshOptions.cameras.getter(_DWORD *a1@<X8>)
{
  *a1 = 32;
}

void static WidgetRefreshOptions.mediaControls.getter(_DWORD *a1@<X8>)
{
  *a1 = 64;
}

void static WidgetRefreshOptions.userPredictions.getter(_DWORD *a1@<X8>)
{
  *a1 = 4096;
}

void static WidgetRefreshOptions.nativeMatter.getter(_DWORD *a1@<X8>)
{
  *a1 = 0x1000000;
}

uint64_t WidgetRefreshOptions.coverages.getter()
{
  int v1 = unk_27026282C;
  if ((unk_27026282C & ~dword_270262828) == 0) {
    int v1 = 0;
  }
  int v2 = dword_270262830;
  if ((dword_270262830 & ~(v1 | dword_270262828)) == 0) {
    int v2 = 0;
  }
  if (((v2 | v1 | dword_270262828) & *v0) != 0)
  {
    if (qword_26B21F398 != -1) {
      swift_once();
    }
    return swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v4 = sub_251C08B44((uint64_t)&unk_270262838);
    swift_arrayDestroy();
    return v4;
  }
}

uint64_t WidgetRefresh.homeID.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_251A1B128(v1, a1, &qword_26B21FF90);
}

uint64_t WidgetRefresh.filtered.getter@<X0>(uint64_t result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = *(_DWORD *)(v2 + *(int *)(result + 40));
  return result;
}

uint64_t WidgetRefresh.init(homeID:configuration:filtered:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  int v8 = *a3;
  sub_251A4ECF0(a1, a5, &qword_26B21FF90);
  uint64_t v9 = type metadata accessor for WidgetRefresh();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a5 + *(int *)(v9 + 36), a2, a4);
  *(_DWORD *)(a5 + *(int *)(v9 + 40)) = v8;
  return result;
}

uint64_t WidgetDetailUpdate.homeID.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_251A1B128(v1, a1, &qword_26B21FF90);
}

uint64_t WidgetDetailUpdate.characteristics.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t WidgetDetailUpdate.actionSets.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t WidgetDetailUpdate.configuration.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 44));
}

uint64_t WidgetDetailUpdate.filtered.getter@<X0>(uint64_t result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = *(_DWORD *)(v2 + *(int *)(result + 48));
  return result;
}

uint64_t WidgetDetailUpdate.isMonitoring.getter(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 52));
}

uint64_t WidgetDetailUpdate.init(homeID:characteristics:actionSets:configuration:isMonitoring:filtered:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, int *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  int v14 = *a6;
  sub_251A4ECF0(a1, a8, &qword_26B21FF90);
  uint64_t v15 = (int *)type metadata accessor for WidgetDetailUpdate();
  *(void *)(a8 + v15[9]) = a2;
  *(void *)(a8 + v15[10]) = a3;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a7 - 8) + 32))(a8 + v15[11], a4, a7);
  *(unsigned char *)(a8 + v15[13]) = a5;
  *(_DWORD *)(a8 + v15[12]) = v14;
  return result;
}

uint64_t WidgetWriteRequests.requests.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t _s13HomeDataModel13WidgetRefreshV13configurationxvg_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 36));
}

uint64_t WidgetWriteRequests.init(requests:configuration:filtered:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int *a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  int v8 = *a3;
  *(void *)a5 = a1;
  uint64_t v9 = type metadata accessor for WidgetWriteRequests();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(&a5[*(int *)(v9 + 36)], a2, a4);
  *(_DWORD *)&a5[*(int *)(v9 + 40)] = v8;
  return result;
}

uint64_t sub_251B944C4(void *a1, uint64_t a2)
{
  v3[3] = a2;
  long long v3[4] = v2;
  v3[5] = *a1;
  sub_251F35C80();
  v3[6] = sub_251F35C70();
  uint64_t v5 = sub_251F35C00();
  v3[7] = v5;
  v3[8] = v4;
  return MEMORY[0x270FA2498](sub_251B94564, v5, v4);
}

uint64_t sub_251B94564()
{
  uint64_t v1 = (uint64_t *)v0[4];
  uint64_t v2 = v0[3];
  v0[2] = v0[5];
  uint64_t v3 = *v1;
  uint64_t v4 = (*(uint64_t (**)(void))(*(void *)(v2 + 24) + 16))(*(void *)(v2 + 16));
  uint64_t v6 = v5;
  v0[9] = v5;
  uint64_t v7 = (void *)swift_task_alloc();
  v0[10] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_251B9464C;
  return WidgetManager.perform(_:forKind:)(v3, v4, v6);
}

uint64_t sub_251B9464C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 56);
    uint64_t v4 = *(void *)(v2 + 64);
    uint64_t v5 = sub_251B947CC;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v2 + 56);
    uint64_t v4 = *(void *)(v2 + 64);
    uint64_t v5 = sub_251B94768;
  }
  return MEMORY[0x270FA2498](v5, v3, v4);
}

uint64_t sub_251B94768()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251B947CC()
{
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

double WIDGET_REFRESH_TIMEOUT.getter()
{
  return 20.0;
}

unint64_t sub_251B94844@<X0>(unint64_t result@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v4 = *(void *)result;
  long long v5 = 0uLL;
  if (*(void *)(*(void *)result + 16))
  {
    uint64_t result = sub_2519FE588(a2);
    long long v5 = 0uLL;
    if (v6)
    {
      long long v7 = *(_OWORD *)(*(void *)(v4 + 56) + 16 * result);
      uint64_t result = swift_unknownObjectRetain();
      long long v5 = v7;
    }
  }
  *a3 = v5;
  return result;
}

unint64_t sub_251B948B8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3)
  {
    swift_unknownObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *a1;
    *a1 = 0x8000000000000000;
    sub_251A0F5FC(a3, a4, a2, isUniquelyReferenced_nonNull_native);
    *a1 = v14;
  }
  else
  {
    unint64_t result = sub_2519FE588(a2);
    if ((v10 & 1) == 0) {
      return result;
    }
    unint64_t v11 = result;
    char v12 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = *a1;
    uint64_t v15 = *a1;
    *a1 = 0x8000000000000000;
    if ((v12 & 1) == 0)
    {
      sub_251A15A24();
      uint64_t v13 = v15;
    }
    sub_251E3C240(v11, v13);
    *a1 = v13;
    swift_unknownObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_251B949C0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = *a1;
  if (*(void *)(*a1 + 16) && (unint64_t v5 = sub_2519FE588(a2), (v6 & 1) != 0))
  {
    unint64_t v7 = v5;
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v9 = type metadata accessor for StaticMatterDevice();
    uint64_t v10 = *(void *)(v9 - 8);
    sub_251BAD6EC(v8 + *(void *)(v10 + 72) * v7, a3, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(a3, 0, 1, v9);
  }
  else
  {
    uint64_t v12 = type metadata accessor for StaticMatterDevice();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(a3, 1, 1, v12);
  }
}

uint64_t sub_251B94AEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC90);
  MEMORY[0x270FA5388](v5 - 8);
  unint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1B128(a3, (uint64_t)v7, &qword_26B21EC90);
  return sub_2519F822C((uint64_t)v7, a2);
}

unint64_t sub_251B94B9C@<X0>(unint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = *(void *)result;
  if (*(void *)(*(void *)result + 16) && (unint64_t result = sub_2519FE588(a2), (v5 & 1) != 0))
  {
    *a3 = *(void *)(*(void *)(v4 + 56) + 8 * result);
    return swift_bridgeObjectRetain();
  }
  else
  {
    *a3 = MEMORY[0x263F8EE78];
  }
  return result;
}

uint64_t sub_251B94C04(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = *a1;
  *a1 = 0x8000000000000000;
  sub_251A0F73C(a3, a2, isUniquelyReferenced_nonNull_native);
  *a1 = v8;
  return swift_bridgeObjectRelease();
}

uint64_t sub_251B94C88@<X0>(size_t *a1@<X8>)
{
  uint64_t v2 = swift_bridgeObjectRetain();
  size_t v3 = sub_251A91C68(v2);
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v3;
  return result;
}

uint64_t WidgetSnapshotModerator.Error.hash(into:)()
{
  uint64_t v1 = type metadata accessor for WidgetSnapshotModerator.Error();
  MEMORY[0x270FA5388](v1 - 8);
  size_t v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251BAD6EC(v0, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for WidgetSnapshotModerator.Error);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 3, v4);
  switch((int)v6)
  {
    case 1:
    case 2:
    case 3:
      uint64_t result = sub_251F36CB0();
      break;
    default:
      uint64_t v7 = *(void *)(v5 + 64);
      MEMORY[0x270FA5388](v6);
      uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_251A4ECF0((uint64_t)v3, (uint64_t)v8, &qword_26B21FF90);
      uint64_t v9 = sub_251F36CB0();
      MEMORY[0x270FA5388](v9);
      sub_251A1B128((uint64_t)v8, (uint64_t)v8, &qword_26B21FF90);
      uint64_t v10 = sub_251F34DA0();
      uint64_t v11 = *(void *)(v10 - 8);
      uint64_t v12 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10);
      if (v12 == 1)
      {
        sub_251F36CC0();
      }
      else
      {
        MEMORY[0x270FA5388](v12);
        uint64_t v15 = (char *)&v16 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v15, v8, v10);
        sub_251F36CC0();
        sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
        sub_251F35610();
        (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v10);
      }
      uint64_t result = sub_251A1B064((uint64_t)v8, &qword_26B21FF90);
      break;
  }
  return result;
}

uint64_t sub_251B94FD4()
{
  uint64_t result = 0x73656D6F486F6ELL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x48676E697373696DLL;
      break;
    case 2:
      uint64_t result = 0x5464696C61766E69;
      break;
    case 3:
      uint64_t result = 0x74756F656D6974;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_251B95074@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251BACF84(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251B9509C(uint64_t a1)
{
  unint64_t v2 = sub_251BA78A0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251B950D8(uint64_t a1)
{
  unint64_t v2 = sub_251BA78A0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251B95114(uint64_t a1)
{
  unint64_t v2 = sub_251BA7948();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251B95150(uint64_t a1)
{
  unint64_t v2 = sub_251BA7948();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251B9518C(uint64_t a1)
{
  unint64_t v2 = sub_251BA799C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251B951C8(uint64_t a1)
{
  unint64_t v2 = sub_251BA799C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251B95204(uint64_t a1)
{
  unint64_t v2 = sub_251BA79F0();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251B95240(uint64_t a1)
{
  unint64_t v2 = sub_251BA79F0();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251B9527C(uint64_t a1)
{
  unint64_t v2 = sub_251BA78F4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251B952B8(uint64_t a1)
{
  unint64_t v2 = sub_251BA78F4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t WidgetSnapshotModerator.Error.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9F078);
  uint64_t v36 = *(void *)(v2 - 8);
  uint64_t v37 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v35 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9F080);
  uint64_t v33 = *(void *)(v4 - 8);
  uint64_t v34 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v32 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9F088);
  uint64_t v30 = *(void *)(v6 - 8);
  uint64_t v31 = v6;
  MEMORY[0x270FA5388](v6);
  id v29 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9F090);
  uint64_t v28 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for WidgetSnapshotModerator.Error();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9F098);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251BA78A0();
  sub_251F36DA0();
  sub_251BAD6EC(v38, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for WidgetSnapshotModerator.Error);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v13, 3, v18);
  switch((int)v19)
  {
    case 1:
      char v39 = 0;
      sub_251BA79F0();
      sub_251F36900();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v10, v8);
      goto LABEL_7;
    case 2:
      char v41 = 2;
      sub_251BA7948();
      os_log_type_t v25 = v32;
      sub_251F36900();
      uint64_t v27 = v33;
      uint64_t v26 = v34;
      goto LABEL_5;
    case 3:
      char v42 = 3;
      sub_251BA78F4();
      os_log_type_t v25 = v35;
      sub_251F36900();
      uint64_t v27 = v36;
      uint64_t v26 = v37;
LABEL_5:
      (*(void (**)(char *, uint64_t))(v27 + 8))(v25, v26);
LABEL_7:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
      break;
    default:
      MEMORY[0x270FA5388](v19);
      uint64_t v21 = (char *)&v28 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_251A4ECF0((uint64_t)v13, (uint64_t)v21, &qword_26B21FF90);
      char v40 = 1;
      sub_251BA799C();
      id v22 = v29;
      sub_251F36900();
      sub_251F34DA0();
      sub_251A1A8EC(&qword_26B21E348);
      uint64_t v23 = v31;
      sub_251F36970();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v22, v23);
      sub_251A1B064((uint64_t)v21, &qword_26B21FF90);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
      break;
  }
  return result;
}

uint64_t WidgetSnapshotModerator.Error.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t sub_251B95904()
{
  return sub_251F36D00();
}

uint64_t sub_251B95948()
{
  return sub_251F36D00();
}

uint64_t sub_251B95984(void *a1)
{
  return WidgetSnapshotModerator.Error.encode(to:)(a1);
}

uint64_t sub_251B959A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v6 = *(void *)(a1 + 16);
      uint64_t v7 = *(int *)(type metadata accessor for WidgetDetailUpdate() + 44);
      goto LABEL_7;
    }
    uint64_t v6 = *(void *)(a1 + 16);
    uint64_t v8 = type metadata accessor for WidgetWriteRequests();
  }
  else
  {
    uint64_t v6 = *(void *)(a1 + 16);
    uint64_t v8 = type metadata accessor for WidgetRefresh();
  }
  uint64_t v7 = *(int *)(v8 + 36);
LABEL_7:
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  return v9(a2, v2 + v7, v6);
}

uint64_t WidgetSnapshotModerator.stateSnapshots.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t WidgetSnapshotModerator.monitoredCharacteristics.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t WidgetSnapshotModerator.monitoredActionSets.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t WidgetSnapshotModerator.staticMatterDevices(in:)(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v3 = *(os_unfair_lock_s **)(v1 + 144);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v3 + 6);
  sub_251B94C88((size_t *)&v7);
  os_unfair_lock_unlock(v3 + 6);
  uint64_t v4 = v7;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v6[2] = a1;
  return sub_251EB5D58((uint64_t (*)(char *))sub_251BA7A44, (uint64_t)v6, v4);
}

uint64_t WidgetSnapshotModerator.nativeMatterDevice(_:)()
{
  swift_beginAccess();
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + 136);
  unint64_t v2 = (unint64_t)&v1[4];
  uint64_t v3 = v1 + 6;
  os_unfair_lock_lock(v1 + 6);
  sub_251BA7A94(v2, &v6);
  os_unfair_lock_unlock(v3);
  uint64_t v4 = v6;
  swift_endAccess();
  return v4;
}

uint64_t WidgetSnapshotModerator.homes.getter()
{
  return swift_bridgeObjectRetain();
}

id WidgetSnapshotModerator.homeManager.getter()
{
  return *(id *)(v0 + 184);
}

uint64_t (*WidgetSnapshotModerator.widgetManager.read())()
{
  return nullsub_1;
}

uint64_t sub_251B95CE8(void *a1)
{
  swift_defaultActor_initialize();
  uint64_t v3 = MEMORY[0x263F8EE78];
  unint64_t v4 = sub_2519F95D0(MEMORY[0x263F8EE78]);
  uint64_t v5 = MEMORY[0x263F8EE88];
  *(void *)(v1 + 112) = v4;
  *(void *)(v1 + 120) = v5;
  *(void *)(v1 + 128) = v5;
  *(void *)(v1 + 136) = sub_251BA6BD8();
  *(void *)(v1 + 144) = v6;
  *(void *)(v1 + 152) = v7;
  *(void *)(v1 + 160) = v8;
  *(void *)(v1 + 168) = &unk_27025EFA8;
  unint64_t v9 = sub_2519FA168(v3);
  *(unsigned char *)(v1 + 200) = 0;
  *(void *)(v1 + 176) = v9;
  *(void *)(v1 + 184) = a1;
  *(void *)(v1 + 192) = objc_msgSend(a1, sel_widgetManager);
  return v1;
}

uint64_t WidgetSnapshotModerator.find(home:orRecommended:)(uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v4 + 80) = a2;
  *(void *)(v4 + 88) = v3;
  *(unsigned char *)(v4 + 184) = a3;
  *(void *)(v4 + 72) = a1;
  *(void *)(v4 + 96) = *(void *)(type metadata accessor for StaticHome() - 8);
  *(void *)(v4 + 104) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251B95E44, v3, 0);
}

uint64_t sub_251B95E44()
{
  uint64_t v43 = v0;
  uint64_t v1 = *(void *)(v0 + 88);
  if (*(unsigned char *)(v1 + 200) != 1 || (swift_beginAccess(), !*(void *)(*(void *)(v1 + 176) + 16)))
  {
    if (qword_269B9C2E0 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_251F350A0();
    __swift_project_value_buffer(v11, (uint64_t)qword_269BF30A8);
    uint64_t v12 = sub_251F35080();
    os_log_type_t v13 = sub_251F35FB0();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      uint64_t v42 = v15;
      *(_DWORD *)uint64_t v14 = 136315138;
      *(void *)(v0 + 64) = sub_251A00E84(0xD000000000000019, 0x8000000251F6B3A0, &v42);
      sub_251F361D0();
      _os_log_impl(&dword_2519F3000, v12, v13, "%s Unable to return StaticHome, because snapshot has not been built.", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v15, -1, -1);
      MEMORY[0x2533AC760](v14, -1, -1);
    }

    type metadata accessor for WidgetSnapshotModerator.Error();
    sub_251BAD3DC(&qword_269B9F0D0, 255, (void (*)(uint64_t))type metadata accessor for WidgetSnapshotModerator.Error);
    swift_allocError();
    uint64_t v17 = v16;
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 3, v18);
    goto LABEL_11;
  }
  char v2 = *(unsigned char *)(v0 + 184);
  uint64_t v3 = *(void *)(v0 + 80);
  uint64_t v4 = sub_251F34DA0();
  *(void *)(v0 + 112) = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = v5;
  *(void *)(v0 + 120) = v5;
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v7(v3, 1, v4) == 1 && (v2 & 1) == 0)
  {
    type metadata accessor for WidgetSnapshotModerator.Error();
    sub_251BAD3DC(&qword_269B9F0D0, 255, (void (*)(uint64_t))type metadata accessor for WidgetSnapshotModerator.Error);
    swift_allocError();
    uint64_t v9 = v8;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v8, 1, 1, v4);
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 0, 3, v10);
LABEL_11:
    swift_willThrow();
    goto LABEL_12;
  }
  *(void *)(v0 + 128) = swift_task_alloc();
  uint64_t v21 = swift_task_alloc();
  *(void *)(v0 + 136) = v21;
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  *(void *)(v0 + 144) = v22;
  *(void *)(v0 + 152) = *(void *)(v22 - 8);
  uint64_t v23 = swift_task_alloc();
  sub_251A1B128(v3, v23, &qword_26B21FF90);
  if (v7(v23, 1, v4) != 1)
  {
    os_log_type_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
    v25(v21, v23, v4);
    swift_task_dealloc();
    uint64_t v26 = *(void *)(v0 + 88);
    v25(*(void *)(v0 + 128), *(void *)(v0 + 136), *(void *)(v0 + 112));
    swift_task_dealloc();
    swift_beginAccess();
    uint64_t v27 = *(void *)(v26 + 176);
    if (*(void *)(v27 + 16))
    {
      unint64_t v28 = sub_2519FE584(*(void *)(v0 + 128));
      if (v29)
      {
        uint64_t v31 = *(void *)(v0 + 120);
        uint64_t v30 = *(void *)(v0 + 128);
        uint64_t v33 = *(void *)(v0 + 104);
        uint64_t v32 = *(void *)(v0 + 112);
        uint64_t v34 = *(void *)(v0 + 72);
        sub_251BAD6EC(*(void *)(v27 + 56) + *(void *)(*(void *)(v0 + 96) + 72) * v28, v33, (uint64_t (*)(void))type metadata accessor for StaticHome);
        sub_251BAD624(v33, v34, (uint64_t (*)(void))type metadata accessor for StaticHome);
        swift_endAccess();
        (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v30, v32);
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v19 = *(uint64_t (**)(void))(v0 + 8);
        goto LABEL_13;
      }
    }
    uint64_t v35 = *(void *)(v0 + 144);
    uint64_t v36 = *(void *)(v0 + 152);
    uint64_t v38 = *(void *)(v0 + 120);
    uint64_t v37 = *(void *)(v0 + 128);
    uint64_t v39 = *(void *)(v0 + 112);
    swift_endAccess();
    type metadata accessor for WidgetSnapshotModerator.Error();
    sub_251BAD3DC(&qword_269B9F0D0, 255, (void (*)(uint64_t))type metadata accessor for WidgetSnapshotModerator.Error);
    swift_allocError();
    uint64_t v41 = v40;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 16))(v40, v37, v39);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v38 + 56))(v41, 0, 1, v39);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v36 + 56))(v41, 0, 3, v35);
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v39);
    swift_task_dealloc();
LABEL_12:
    swift_task_dealloc();
    uint64_t v19 = *(uint64_t (**)(void))(v0 + 8);
LABEL_13:
    return v19();
  }
  sub_251A1B064(v23, &qword_26B21FF90);
  swift_task_dealloc();
  id v24 = (void *)swift_task_alloc();
  *(void *)(v0 + 160) = v24;
  *id v24 = v0;
  v24[1] = sub_251B96588;
  return sub_251B969E4();
}

uint64_t sub_251B96588(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  v4[21] = v1;
  swift_task_dealloc();
  uint64_t v5 = v4[11];
  if (v1)
  {
    uint64_t v6 = sub_251B96970;
  }
  else
  {
    v4[22] = a1;
    uint64_t v6 = sub_251B966C4;
  }
  return MEMORY[0x270FA2498](v6, v5, 0);
}

uint64_t sub_251B966C4()
{
  uint64_t v1 = (void *)v0[22];
  uint64_t v2 = v0[15];
  id v3 = objc_msgSend(v1, sel_uniqueIdentifier);

  sub_251F34D80();
  uint64_t v4 = v0[11];
  (*(void (**)(void, void, void))(v2 + 32))(v0[16], v0[17], v0[14]);
  swift_task_dealloc();
  swift_beginAccess();
  uint64_t v5 = *(void *)(v4 + 176);
  if (*(void *)(v5 + 16) && (unint64_t v6 = sub_2519FE584(v0[16]), (v7 & 1) != 0))
  {
    uint64_t v9 = v0[15];
    uint64_t v8 = v0[16];
    uint64_t v11 = v0[13];
    uint64_t v10 = v0[14];
    uint64_t v12 = v0[9];
    sub_251BAD6EC(*(void *)(v5 + 56) + *(void *)(v0[12] + 72) * v6, v11, (uint64_t (*)(void))type metadata accessor for StaticHome);
    sub_251BAD624(v11, v12, (uint64_t (*)(void))type metadata accessor for StaticHome);
    swift_endAccess();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    swift_task_dealloc();
    swift_task_dealloc();
    os_log_type_t v13 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    uint64_t v14 = v0[18];
    uint64_t v15 = v0[19];
    uint64_t v17 = v0[15];
    uint64_t v16 = v0[16];
    uint64_t v18 = v0[14];
    swift_endAccess();
    type metadata accessor for WidgetSnapshotModerator.Error();
    sub_251BAD3DC(&qword_269B9F0D0, 255, (void (*)(uint64_t))type metadata accessor for WidgetSnapshotModerator.Error);
    swift_allocError();
    uint64_t v20 = v19;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v19, v16, v18);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(v20, 0, 1, v18);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56))(v20, 0, 3, v14);
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
    swift_task_dealloc();
    swift_task_dealloc();
    os_log_type_t v13 = (uint64_t (*)(void))v0[1];
  }
  return v13();
}

uint64_t sub_251B96970()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251B969E4()
{
  *(void *)(v1 + 56) = v0;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 64) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_251B96A78;
  return WidgetSnapshotModerator.updateHomes(timeout:)(20.0);
}

uint64_t sub_251B96A78()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  *(void *)(*v1 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = *(void *)(v2 + 56);
    return MEMORY[0x270FA2498](sub_251B96BC0, v6, 0);
  }
}

uint64_t sub_251B96BC0()
{
  uint64_t v17 = v0;
  uint64_t v1 = *(void **)(v0[7] + 184);
  v0[10] = v1;
  id v2 = objc_msgSend(v1, sel_homes);
  v0[11] = sub_251A1A568(0, (unint64_t *)&qword_26B21F2D0);
  unint64_t v3 = sub_251F35AC0();

  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_251F366C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v4 < 1)
  {
    if (qword_269B9C2E0 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_251F350A0();
    __swift_project_value_buffer(v6, (uint64_t)qword_269BF30A8);
    uint64_t v7 = sub_251F35080();
    os_log_type_t v8 = sub_251F35FB0();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v10 = swift_slowAlloc();
      uint64_t v16 = v10;
      *(_DWORD *)uint64_t v9 = 136315138;
      v0[2] = sub_251A00E84(0xD000000000000011, 0x8000000251F6B690, &v16);
      sub_251F361D0();
      _os_log_impl(&dword_2519F3000, v7, v8, "%s HMHomeManager returned 0 homes", v9, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v10, -1, -1);
      MEMORY[0x2533AC760](v9, -1, -1);
    }

    type metadata accessor for WidgetSnapshotModerator.Error();
    sub_251BAD3DC(&qword_269B9F0D0, 255, (void (*)(uint64_t))type metadata accessor for WidgetSnapshotModerator.Error);
    swift_allocError();
    uint64_t v12 = v11;
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 3, v13);
    swift_willThrow();
    uint64_t v14 = (uint64_t (*)(void))v0[1];
    return v14();
  }
  else
  {
    if (qword_269B9C2F0 != -1) {
      swift_once();
    }
    uint64_t v5 = qword_269BF30C0;
    v0[12] = qword_269BF30C0;
    return MEMORY[0x270FA2498](sub_251B96F38, v5, 0);
  }
}

uint64_t sub_251B96F38()
{
  uint64_t v1 = *(void *)(v0 + 56);
  *(unsigned char *)(v0 + 128) = sub_251B99DB4() & 1;
  return MEMORY[0x270FA2498](sub_251B96FAC, v1, 0);
}

uint64_t sub_251B96FAC()
{
  if (*(unsigned char *)(v0 + 128) == 1) {
    id v1 = objc_msgSend(*(id *)(v0 + 80), sel_currentHome);
  }
  else {
    id v1 = 0;
  }
  uint64_t v2 = qword_269BF30C0;
  *(void *)(v0 + 104) = v1;
  *(void *)(v0 + 112) = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  *(void *)(v0 + 120) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251B97074, v2, 0);
}

uint64_t sub_251B97074()
{
  id v1 = *(void **)(v0[14] + 120);
  uint64_t v2 = (void *)sub_251F356C0();
  id v3 = objc_msgSend(v1, sel_stringForKey_, v2);

  uint64_t v4 = v0[15];
  if (v3)
  {
    sub_251F356F0();

    sub_251F34D30();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = sub_251F34DA0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  }
  uint64_t v6 = v0[7];
  return MEMORY[0x270FA2498](sub_251B971A0, v6, 0);
}

void sub_251B971A0()
{
  uint64_t v29 = v0;
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 120);
  swift_retain();
  id v3 = (void *)sub_251BA75F0(v2, v1);
  swift_release();
  sub_251A1B064(v2, &qword_26B21FF90);
  swift_task_dealloc();
  if ((unint64_t)v3 <= 1)
  {
    id v4 = objc_msgSend(*(id *)(v0 + 80), sel_currentHome);
    sub_251BAD7B0(v3);
    id v3 = v4;
  }
  uint64_t v5 = *(void **)(v0 + 104);
  if (!v5)
  {
    if (v3)
    {
      uint64_t v6 = v3;
LABEL_13:
      id v10 = v3;
      uint64_t v5 = 0;
      goto LABEL_14;
    }
    id v7 = objc_msgSend(*(id *)(v0 + 80), sel_homes);
    unint64_t v8 = sub_251F35AC0();

    if (v8 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v23 = sub_251F366C0();
      swift_bridgeObjectRelease();
      if (v23)
      {
LABEL_9:
        if ((v8 & 0xC000000000000001) == 0)
        {
          if (!*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            return;
          }
          id v9 = *(id *)(v8 + 32);
          goto LABEL_12;
        }
LABEL_30:
        id v9 = (id)MEMORY[0x2533AB3A0](0, v8);
LABEL_12:
        uint64_t v6 = v9;
        swift_bridgeObjectRelease();
        goto LABEL_13;
      }
    }
    else if (*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_9;
    }
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v6 = *(void **)(v0 + 104);
LABEL_14:
  uint64_t v11 = qword_269B9C2E0;
  id v12 = v5;
  if (v11 != -1) {
    swift_once();
  }
  uint64_t v13 = sub_251F350A0();
  __swift_project_value_buffer(v13, (uint64_t)qword_269BF30A8);
  id v14 = v6;
  uint64_t v15 = sub_251F35080();
  os_log_type_t v16 = sub_251F35FD0();
  if (os_log_type_enabled(v15, v16))
  {
    int v17 = *(unsigned __int8 *)(v0 + 128);
    uint64_t v27 = v3;
    uint64_t v18 = swift_slowAlloc();
    id v24 = (void *)swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    v28[0] = v25;
    *(_DWORD *)uint64_t v18 = 136315650;
    uint64_t v26 = v12;
    *(void *)(v0 + 32) = sub_251A00E84(0xD000000000000011, 0x8000000251F6B690, v28);
    sub_251F361D0();
    *(_WORD *)(v18 + 12) = 2080;
    if (v17) {
      uint64_t v19 = 0x64656C62616E65;
    }
    else {
      uint64_t v19 = 0x64656C6261736964;
    }
    if (v17) {
      unint64_t v20 = 0xE700000000000000;
    }
    else {
      unint64_t v20 = 0xE800000000000000;
    }
    *(void *)(v0 + 40) = sub_251A00E84(v19, v20, v28);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 22) = 2112;
    *(void *)(v0 + 48) = v14;
    id v21 = v14;
    sub_251F361D0();
    *id v24 = v14;

    _os_log_impl(&dword_2519F3000, v15, v16, "%s HomeSensing:%s, Home:%@", (uint8_t *)v18, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v24, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v25, -1, -1);
    MEMORY[0x2533AC760](v18, -1, -1);
  }
  else
  {
  }
  uint64_t v22 = *(void (**)(id))(v0 + 8);
  v22(v14);
}

uint64_t WidgetSnapshotModerator.queueForNextUpdate<A>(configuration:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[7] = a3;
  v4[8] = v3;
  v4[5] = a1;
  v4[6] = a2;
  type metadata accessor for StateSnapshot.UpdateType(0);
  v4[9] = swift_task_alloc();
  sub_251F35C80();
  v4[10] = sub_251F35C70();
  uint64_t v6 = sub_251F35C00();
  v4[11] = v6;
  void v4[12] = v5;
  return MEMORY[0x270FA2498](sub_251B976BC, v6, v5);
}

uint64_t sub_251B976BC()
{
  id v24 = v0;
  uint64_t v1 = v0[5];
  uint64_t v3 = v0[6];
  uint64_t v2 = v0[7];
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v3, v2);
  uint64_t v6 = v5;
  v0[13] = v5;
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(v3, v2);
  uint64_t v9 = v8;
  v0[14] = v8;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v1, v3);
  if (qword_269B9C2E0 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_251F350A0();
  v0[15] = __swift_project_value_buffer(v10, (uint64_t)qword_269BF30A8);
  uint64_t v11 = sub_251F35080();
  os_log_type_t v12 = sub_251F35FD0();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v21 = v7;
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = v4;
    uint64_t v23 = swift_slowAlloc();
    uint64_t v14 = v23;
    *(_DWORD *)uint64_t v13 = 136315138;
    v0[4] = sub_251A00E84(0xD000000000000022, 0x8000000251F6B3C0, &v23);
    sub_251F361D0();
    _os_log_impl(&dword_2519F3000, v11, v12, "%s Informing HomeKit it should send a timeline refresh", v13, 0xCu);
    swift_arrayDestroy();
    uint64_t v15 = v14;
    uint64_t v4 = v22;
    MEMORY[0x2533AC760](v15, -1, -1);
    os_log_type_t v16 = v13;
    uint64_t v7 = v21;
    MEMORY[0x2533AC760](v16, -1, -1);
  }

  int v17 = (void *)swift_task_alloc();
  v0[16] = v17;
  *int v17 = v0;
  v17[1] = sub_251B97980;
  uint64_t v18 = v0[9];
  uint64_t v19 = MEMORY[0x263F8EE78];
  return WidgetManager.monitorAndFetchState(for:widgetIdentifier:kind:)(v18, v19, v4, v6, v7, v9);
}

uint64_t sub_251B97980()
{
  uint64_t v2 = *v1;
  (*v1)[17] = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v3 = v2[11];
    uint64_t v4 = v2[12];
    uint64_t v5 = sub_251B97B70;
  }
  else
  {
    sub_251BAD68C(v2[9], type metadata accessor for StateSnapshot.UpdateType);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v3 = v2[11];
    uint64_t v4 = v2[12];
    uint64_t v5 = sub_251B97B08;
  }
  return MEMORY[0x270FA2498](v5, v3, v4);
}

uint64_t sub_251B97B08()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251B97B70()
{
  os_log_type_t v16 = v0;
  uint64_t v1 = (void *)v0[17];
  swift_release();
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_251F35080();
  os_log_type_t v5 = sub_251F35FB0();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (void *)v0[17];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v15 = v14;
    *(_DWORD *)uint64_t v7 = 136315394;
    v0[2] = sub_251A00E84(0xD000000000000022, 0x8000000251F6B3C0, &v15);
    sub_251F361D0();
    *(_WORD *)(v7 + 12) = 2112;
    id v9 = v6;
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    v0[3] = v10;
    sub_251F361D0();
    *uint64_t v8 = v10;

    _os_log_impl(&dword_2519F3000, v4, v5, "%s Unable to execute monitorAndFetchState call, will not try again. reason=%@", (uint8_t *)v7, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v8, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v14, -1, -1);
    MEMORY[0x2533AC760](v7, -1, -1);
  }
  else
  {
    uint64_t v11 = (void *)v0[17];
  }
  swift_task_dealloc();
  os_log_type_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_251B97DB8(uint64_t a1)
{
  v2[25] = a1;
  v2[26] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC90);
  v2[27] = swift_task_alloc();
  v2[28] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for StaticMatterDevice();
  v2[29] = v3;
  v2[30] = *(void *)(v3 - 8);
  v2[31] = swift_task_alloc();
  v2[32] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251B97EC8, v1, 0);
}

uint64_t sub_251B97EC8()
{
  *(void *)(v0 + 40) = &type metadata for HomeKitFeatures;
  unint64_t v1 = sub_251A4DA94();
  *(unsigned char *)(v0 + 16) = 4;
  *(void *)(v0 + 48) = v1;
  char v2 = sub_251F34F60();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  if (v2) {
    goto LABEL_5;
  }
  if (qword_269B9C4C0 != -1) {
    swift_once();
  }
  if (byte_269BA38B2 == 1)
  {
LABEL_5:
    return MEMORY[0x270FA2498](sub_251B98000, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
}

uint64_t sub_251B98000()
{
  sub_251F35C80();
  *(void *)(v0 + 264) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251B98094, v2, v1);
}

uint64_t sub_251B98094()
{
  swift_release();
  if (qword_269B9C3B8 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 208);
  *(void *)(v0 + 272) = qword_269BA1848;
  swift_bridgeObjectRetain();
  return MEMORY[0x270FA2498](sub_251B98144, v1, 0);
}

uint64_t sub_251B98144()
{
  uint64_t v104 = v0;
  uint64_t v1 = (uint64_t)(v0 + 25);
  HMHome.matterAccessories.getter();
  uint64_t v3 = v2;
  if (v2 >> 62) {
    goto LABEL_46;
  }
  uint64_t v4 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    BOOL v83 = (void **)v1;
    unint64_t v84 = v0;
    if (v4)
    {
      uint64_t v5 = v0[30];
      uint64_t v85 = v0[29];
      uint64_t v81 = v0[26];
      unint64_t v6 = v3 & 0xC000000000000001;
      swift_beginAccess();
      uint64_t v7 = 0;
      uint64_t v94 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
      uint64_t v80 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56);
      uint64_t v90 = v4;
      uint64_t v92 = v3;
      unint64_t v101 = v3 & 0xC000000000000001;
      while (1)
      {
        id v8 = v6 ? (id)MEMORY[0x2533AB3A0](v7, v3) : *(id *)(v3 + 8 * v7 + 32);
        id v9 = v8;
        uint64_t v10 = v7 + 1;
        if (__OFADD__(v7, 1)) {
          break;
        }
        uint64_t v11 = sub_251F35F60();
        if (v12)
        {
        }
        else
        {
          uint64_t v13 = v11;
          uint64_t v14 = HMAccessory.matterDevice.getter();
          if (v14)
          {
            uint64_t v16 = v14;
            uint64_t v98 = v15;
            uint64_t v17 = v0[28];
            uint64_t v18 = v0[29];
            HMAccessory.staticMatterDevice.getter(v17);
            if ((*v94)(v17, 1, v18) == 1)
            {
              uint64_t v19 = v0[28];
              swift_unknownObjectRelease();

              sub_251A1B064(v19, &qword_26B21EC90);
            }
            else
            {
              uint64_t v20 = v0[34];
              uint64_t v21 = v0[32];
              sub_251BAD624(v0[28], v21, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
              uint64_t v22 = *(void *)(v21 + *(int *)(v85 + 32));
              swift_bridgeObjectRetain();
              LOBYTE(v20) = sub_251B84AB0(v20, v22);
              swift_bridgeObjectRelease();
              uint64_t v23 = v0[32];
              if (v20)
              {
                sub_251BAD68C(v23, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
                swift_unknownObjectRelease();
              }
              else
              {
                uint64_t v24 = v0[29];
                uint64_t v25 = v0[27];
                uint64_t v26 = *(os_unfair_lock_s **)(v81 + 144);
                sub_251BAD6EC(v23, v25, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
                (*v80)(v25, 0, 1, v24);
                uint64_t v27 = swift_task_alloc();
                *(void *)(v27 + 16) = v13;
                *(void *)(v27 + 24) = v25;
                swift_retain();
                swift_retain();
                swift_retain();
                swift_retain();
                os_unfair_lock_lock(v26 + 6);
                sub_251BAD5E8((uint64_t)&v26[4]);
                uint64_t v28 = v0[27];
                os_unfair_lock_unlock(v26 + 6);
                swift_task_dealloc();
                sub_251A1B064(v28, &qword_26B21EC90);
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_beginAccess();
                uint64_t v29 = *(os_unfair_lock_s **)(v81 + 136);
                uint64_t v30 = (void *)swift_task_alloc();
                v30[2] = v13;
                v30[3] = v16;
                v30[4] = v98;
                uint64_t v31 = (uint64_t *)&v29[4];
                v29 += 6;
                swift_unknownObjectRetain();
                os_unfair_lock_lock(v29);
                sub_251BAD604(v31);
                uint64_t v32 = v84[32];
                os_unfair_lock_unlock(v29);
                swift_unknownObjectRelease();
                swift_task_dealloc();
                swift_endAccess();

                swift_unknownObjectRelease();
                sub_251BAD68C(v32, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
                uint64_t v0 = v84;
                uint64_t v1 = (uint64_t)v83;
              }
            }
            uint64_t v4 = v90;
            uint64_t v3 = v92;
            unint64_t v6 = v101;
          }
          else
          {

            unint64_t v6 = v101;
          }
        }
        ++v7;
        if (v10 == v4) {
          goto LABEL_20;
        }
      }
      __break(1u);
      goto LABEL_45;
    }
LABEL_20:
    uint64_t v33 = v0[26];
    swift_bridgeObjectRelease();
    uint64_t v34 = (os_unfair_lock_s **)(v33 + 136);
    swift_beginAccess();
    uint64_t v35 = v1;
    uint64_t v36 = *(os_unfair_lock_s **)(v33 + 144);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    os_unfair_lock_lock(v36 + 6);
    sub_251B94C88(v103);
    os_unfair_lock_unlock(v36 + 6);
    uint64_t v99 = (uint64_t *)(v35 - 8);
    uint64_t v102 = (uint64_t *)(v35 - 24);
    size_t v37 = v103[0];
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v91 = *(void **)(v37 + 16);
    if (!v91) {
      break;
    }
    uint64_t v0 = v84;
    if (qword_269B9C2E0 != -1) {
      swift_once();
    }
    uint64_t v3 = (uint64_t)v83;
    uint64_t v1 = 0xD00000000000001ELL;
    uint64_t v38 = sub_251F350A0();
    __swift_project_value_buffer(v38, (uint64_t)qword_269BF30A8);
    swift_bridgeObjectRetain_n();
    swift_retain();
    uint64_t v39 = sub_251F35080();
    os_log_type_t v40 = sub_251F35FD0();
    uint64_t v82 = v33;
    uint64_t v86 = (os_unfair_lock_s **)(v33 + 136);
    size_t v87 = v37;
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = swift_slowAlloc();
      uint64_t v95 = swift_slowAlloc();
      v103[0] = v95;
      *(_DWORD *)uint64_t v41 = 136315650;
      *uint64_t v99 = sub_251A00E84(0xD00000000000001ELL, 0x8000000251F6B670, (uint64_t *)v103);
      sub_251F361D0();
      *(_WORD *)(v41 + 12) = 2048;
      *(v83 - 5) = v91;
      sub_251F361D0();
      swift_release();
      *(_WORD *)(v41 + 22) = 2080;
      sub_251B72548();
      swift_bridgeObjectRetain();
      uint64_t v42 = sub_251F35E50();
      unint64_t v44 = v43;
      swift_bridgeObjectRelease();
      uint64_t v45 = v42;
      uint64_t v1 = 0xD00000000000001ELL;
      uint64_t v0 = v84;
      *(v83 - 4) = (void *)sub_251A00E84(v45, v44, (uint64_t *)v103);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2519F3000, v39, v40, "%s Found %ld Matter devices of allowed types: %s", (uint8_t *)v41, 0x20u);
      uint64_t v3 = MEMORY[0x263F8EE58];
      swift_arrayDestroy();
      uint64_t v34 = v86;
      MEMORY[0x2533AC760](v95, -1, -1);
      MEMORY[0x2533AC760](v41, -1, -1);
    }
    else
    {
      swift_release();
      swift_bridgeObjectRelease_n();
    }

    unint64_t v56 = 0;
    uint64_t v97 = v0[29];
    uint64_t v89 = v0[30];
    size_t v88 = v37 + ((*(unsigned __int8 *)(v89 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80));
    while (v56 < *(void *)(v37 + 16))
    {
      uint64_t v57 = v0[31];
      unint64_t v100 = v56;
      sub_251BAD6EC(v88 + *(void *)(v89 + 72) * v56, v57, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
      uint64_t v3 = *(int *)(v97 + 20);
      uint64_t v58 = *(void *)(v57 + v3);
      swift_beginAccess();
      uint64_t v59 = *v34;
      *(void *)(swift_task_alloc() + 16) = v58;
      os_unfair_lock_lock(v59 + 6);
      sub_251BAD80C((unint64_t)&v59[4], v103);
      os_unfair_lock_unlock(v59 + 6);
      uint64_t v61 = v103[1];
      uint64_t v60 = v103[0];
      swift_task_dealloc();
      if (v60)
      {
        unint64_t v62 = v0;
        uint64_t v93 = v61;
        uint64_t v63 = v0[34];
        uint64_t v66 = v0 + 25;
        unint64_t v65 = (void *)v0[25];
        uint64_t v64 = v66[1];
        swift_endAccess();
        uint64_t v67 = swift_allocObject();
        *(void *)(v67 + 16) = v63;
        swift_bridgeObjectRetain();
        swift_retain();
        swift_unknownObjectRetain();
        id v68 = v65;
        uint64_t v69 = swift_bridgeObjectRetain();
        uint64_t v70 = sub_251BA7B14(v69, (uint64_t (*)(char *))sub_251BAD588, v67, v64, v60, v93, v68);

        swift_unknownObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t v1 = *(void *)(v82 + 144);
        uint64_t v71 = *(void *)(v82 + 152);
        uint64_t v72 = *(void *)(v57 + v3);
        uint64_t v73 = swift_task_alloc();
        *(void *)(v73 + 16) = v72;
        *(void *)(v73 + 24) = v70;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        os_unfair_lock_lock((os_unfair_lock_t)(v71 + 24));
        sub_251BAD5CC((uint64_t *)(v71 + 16));
        uint64_t v3 = v62[31];
        os_unfair_lock_unlock((os_unfair_lock_t)(v71 + 24));
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_task_dealloc();
        sub_251BAD68C(v3, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
        uint64_t v0 = v62;
        uint64_t v34 = v86;
        size_t v37 = v87;
      }
      else
      {
        swift_endAccess();
        uint64_t v74 = sub_251F35080();
        os_log_type_t v75 = sub_251F35FB0();
        BOOL v76 = os_log_type_enabled(v74, v75);
        uint64_t v1 = v0[31];
        if (v76)
        {
          uint64_t v3 = swift_slowAlloc();
          uint64_t v77 = swift_slowAlloc();
          v103[0] = v77;
          *(_DWORD *)uint64_t v3 = 136315394;
          *(void *)(v3 + 4) = sub_251A00E84(0xD00000000000001ELL, 0x8000000251F6B670, (uint64_t *)v103);
          *(_WORD *)(v3 + 12) = 2080;
          *(void *)(v3 + 14) = sub_251A00E84(0xD000000000000012, 0x8000000251F68FA0, (uint64_t *)v103);
          _os_log_impl(&dword_2519F3000, v74, v75, "%s Failed to find Native Matter device %s", (uint8_t *)v3, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x2533AC760](v77, -1, -1);
          MEMORY[0x2533AC760](v3, -1, -1);
        }

        sub_251BAD68C(v1, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
      }
      unint64_t v56 = v100 + 1;
      if (v91 == (void *)(v100 + 1))
      {
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_41;
      }
    }
LABEL_45:
    __break(1u);
LABEL_46:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_251F366C0();
    swift_bridgeObjectRelease();
  }
  uint64_t v0 = v84;
  swift_bridgeObjectRelease();
  swift_release();
  if (qword_269B9C2E0 != -1) {
    swift_once();
  }
  uint64_t v46 = *v83;
  uint64_t v47 = sub_251F350A0();
  __swift_project_value_buffer(v47, (uint64_t)qword_269BF30A8);
  id v48 = v46;
  uint64_t v49 = sub_251F35080();
  os_log_type_t v50 = sub_251F35FB0();
  BOOL v51 = os_log_type_enabled(v49, v50);
  uint64_t v52 = *v83;
  if (v51)
  {
    uint64_t v53 = swift_slowAlloc();
    uint64_t v54 = (void *)swift_slowAlloc();
    uint64_t v96 = swift_slowAlloc();
    v103[0] = v96;
    *(_DWORD *)uint64_t v53 = 136315394;
    uint64_t *v102 = sub_251A00E84(0xD00000000000001ELL, 0x8000000251F6B670, (uint64_t *)v103);
    sub_251F361D0();
    *(_WORD *)(v53 + 12) = 2112;
    *(v83 - 2) = v52;
    id v55 = v52;
    uint64_t v0 = v84;
    sub_251F361D0();
    *uint64_t v54 = v52;

    _os_log_impl(&dword_2519F3000, v49, v50, "%s No Native Matter devices available on home: %@", (uint8_t *)v53, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v54, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v96, -1, -1);
    MEMORY[0x2533AC760](v53, -1, -1);
  }
  else
  {
  }
LABEL_41:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v78 = (uint64_t (*)(void))v0[1];
  return v78();
}

uint64_t sub_251B98EC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v10 = *(void *)(a2 + 168);
  uint64_t v47 = a1;
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_251D9ED90((void (*)(uint64_t *__return_ptr, char *))sub_251BAD754, (uint64_t)v46, v10);
  swift_bridgeObjectRelease();
  uint64_t v51 = MEMORY[0x263F8EE78];
  uint64_t v40 = *(void *)(v11 + 16);
  if (v40)
  {
    id v34 = a5;
    uint64_t v35 = a6;
    uint64_t v39 = v11 + 32;
    swift_bridgeObjectRetain();
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v13 = 0;
    uint64_t v36 = a3;
    size_t v37 = *(uint64_t (**)(unint64_t *, uint64_t, uint64_t))(a4 + 88);
    uint64_t v38 = ObjectType;
    uint64_t v14 = &off_26536F000;
    do
    {
      uint64_t v16 = v39 + 16 * v13;
      unsigned int v17 = *(unsigned __int16 *)(v16 + 8);
      uint64_t v18 = *(char *)(v16 + 10);
      unint64_t v48 = *(void *)v16;
      __int16 v49 = v17;
      char v50 = v18;
      uint64_t v19 = v37(&v48, v38, a4);
      uint64_t v45 = *(void *)(v19 + 16);
      if (v45)
      {
        uint64_t v41 = v13;
        unint64_t v48 = MEMORY[0x263F8EE78];
        uint64_t v44 = v19;
        sub_251F36520();
        unsigned int v43 = dword_251F42950[v18];
        unsigned int v42 = v17;
        uint64_t v20 = self;
        uint64_t v21 = 0;
        do
        {
          uint64_t v22 = v21 + 1;
          uint64_t v23 = *(unsigned int *)(v44 + 4 * v21 + 32);
          id v24 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A20]), sel_initWithUnsignedShort_, v42);
          id v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A20]), (SEL)v14[448], v43);
          id v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A20]), (SEL)v14[448], v23);
          id v27 = objc_msgSend(v20, sel_attributePathWithEndpointID_clusterID_attributeID_, v24, v25, v26);

          sub_251F364F0();
          sub_251F36530();
          sub_251F36540();
          sub_251F36500();
          uint64_t v21 = v22;
        }
        while (v45 != v22);
        unint64_t v15 = v48;
        swift_bridgeObjectRelease();
        a3 = v36;
        uint64_t v13 = v41;
      }
      else
      {
        swift_bridgeObjectRelease();
        unint64_t v15 = MEMORY[0x263F8EE78];
      }
      ++v13;
      sub_251ED7B0C(v15);
      uint64_t v14 = &off_26536F000;
    }
    while (v13 != v40);
    swift_bridgeObjectRelease_n();
    uint64_t v28 = v51;
    a6 = v35;
    a5 = v34;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v28 = MEMORY[0x263F8EE78];
  }
  id v29 = objc_msgSend(a5, sel_matterControllerID);
  uint64_t v30 = sub_251F356F0();
  uint64_t v32 = v31;

  *a6 = v30;
  a6[1] = v32;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = v28;
  return swift_unknownObjectRetain();
}

uint64_t WidgetSnapshotModerator.updateHomes(timeout:)(double a1)
{
  *(void *)(v2 + 64) = v1;
  *(double *)(v2 + 56) = a1;
  *(void *)(v2 + 72) = *(void *)(type metadata accessor for StaticHome() - 8);
  *(void *)(v2 + 80) = swift_task_alloc();
  *(void *)(v2 + 88) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251B992B0, v1, 0);
}

uint64_t sub_251B992B0()
{
  *(void *)(v0 + 96) = *(void *)(*(void *)(v0 + 64) + 184);
  return MEMORY[0x270FA2498](sub_251B992D8, 0, 0);
}

uint64_t sub_251B992D8()
{
  uint64_t v1 = sub_251F34D20();
  v0[13] = v1;
  v0[14] = *(void *)(v1 - 8);
  uint64_t v2 = swift_task_alloc();
  v0[15] = v2;
  swift_task_alloc();
  sub_251F34CF0();
  sub_251F34C50();
  swift_task_dealloc();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[16] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_251B99408;
  return sub_251C97EC4(v2);
}

uint64_t sub_251B99408()
{
  uint64_t v2 = (void *)*v1;
  v2[17] = v0;
  swift_task_dealloc();
  uint64_t v3 = v2[14];
  uint64_t v4 = v2[13];
  if (v0)
  {
    (*(void (**)(void, uint64_t))(v3 + 8))(v2[15], v4);
    uint64_t v5 = sub_251B99A8C;
    uint64_t v6 = 0;
  }
  else
  {
    uint64_t v7 = v2[8];
    (*(void (**)(void, uint64_t))(v3 + 8))(v2[15], v4);
    swift_task_dealloc();
    uint64_t v5 = sub_251B995A8;
    uint64_t v6 = v7;
  }
  return MEMORY[0x270FA2498](v5, v6, 0);
}

uint64_t sub_251B995A8()
{
  unint64_t v1 = *(void *)(v0 + 64);
  id v2 = objc_msgSend(*(id *)(v0 + 96), sel_homes);
  sub_251A1A568(0, (unint64_t *)&qword_26B21F2D0);
  unint64_t v3 = sub_251F35AC0();

  swift_retain();
  uint64_t v4 = sub_251BA73DC(v3, v1);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = *(void *)(v0 + 72);
    uint64_t v7 = v4 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v8 = *(void *)(v6 + 72);
    swift_bridgeObjectRetain();
    uint64_t v9 = (void *)MEMORY[0x263F8EE80];
    uint64_t v38 = v0;
    uint64_t v36 = v8;
    while (1)
    {
      uint64_t v37 = v5;
      uint64_t v13 = *(void *)(v0 + 80);
      uint64_t v12 = *(void *)(v0 + 88);
      sub_251BAD6EC(v7, v12, (uint64_t (*)(void))type metadata accessor for StaticHome);
      uint64_t v14 = sub_251F34DA0();
      uint64_t v15 = *(void *)(v14 - 8);
      uint64_t v16 = swift_task_alloc();
      unsigned int v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16);
      v17(v16, v12, v14);
      sub_251BAD6EC(v12, v13, (uint64_t (*)(void))type metadata accessor for StaticHome);
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v20 = sub_2519FE584(v16);
      uint64_t v21 = v9[2];
      BOOL v22 = (v19 & 1) == 0;
      uint64_t result = v21 + v22;
      if (__OFADD__(v21, v22))
      {
        __break(1u);
LABEL_26:
        __break(1u);
        return result;
      }
      char v24 = v19;
      if (v9[3] >= result)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_251A129E8();
        }
      }
      else
      {
        sub_251A026CC(result, isUniquelyReferenced_nonNull_native);
        unint64_t v25 = sub_2519FE584(v16);
        if ((v24 & 1) != (v26 & 1))
        {
          return sub_251F36BA0();
        }
        unint64_t v20 = v25;
      }
      uint64_t v27 = *(void *)(v38 + 80);
      if (v24)
      {
        uint64_t v10 = v36;
        sub_251BA7AB0(*(void *)(v38 + 80), v9[7] + v20 * v36);
      }
      else
      {
        v9[(v20 >> 6) + 8] |= 1 << v20;
        v17(v9[6] + *(void *)(v15 + 72) * v20, v16, v14);
        uint64_t v10 = v36;
        uint64_t result = sub_251BAD624(v27, v9[7] + v20 * v36, (uint64_t (*)(void))type metadata accessor for StaticHome);
        uint64_t v28 = v9[2];
        BOOL v29 = __OFADD__(v28, 1);
        uint64_t v30 = v28 + 1;
        if (v29) {
          goto LABEL_26;
        }
        void v9[2] = v30;
      }
      uint64_t v0 = v38;
      uint64_t v11 = *(void *)(v38 + 88);
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v16, v14);
      swift_task_dealloc();
      sub_251BAD68C(v11, (uint64_t (*)(void))type metadata accessor for StaticHome);
      v7 += v10;
      uint64_t v5 = v37 - 1;
      if (v37 == 1)
      {
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
    }
  }
  uint64_t v9 = (void *)MEMORY[0x263F8EE80];
LABEL_16:
  swift_bridgeObjectRelease();
  if (v9[2])
  {
    uint64_t v31 = *(void *)(v0 + 64);
    swift_beginAccess();
    *(void *)(v31 + 176) = v9;
    swift_bridgeObjectRelease();
    *(unsigned char *)(v31 + 200) = 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    type metadata accessor for WidgetSnapshotModerator.Error();
    sub_251BAD3DC(&qword_269B9F0D0, 255, (void (*)(uint64_t))type metadata accessor for WidgetSnapshotModerator.Error);
    swift_allocError();
    uint64_t v34 = v33;
    uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v34, 1, 3, v35);
    swift_willThrow();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v32 = *(uint64_t (**)(void))(v0 + 8);
  return v32();
}

uint64_t sub_251B99A8C()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251B99AF8, v1, 0);
}

uint64_t sub_251B99AF8()
{
  if (qword_269B9C2E0 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[17];
  uint64_t v2 = sub_251F350A0();
  __swift_project_value_buffer(v2, (uint64_t)qword_269BF30A8);
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_251F35080();
  os_log_type_t v6 = sub_251F35FB0();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = (void *)v0[17];
  if (v7)
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 138412290;
    id v11 = v8;
    uint64_t v12 = _swift_stdlib_bridgeErrorToNSError();
    v0[5] = v12;
    sub_251F361D0();
    void *v10 = v12;

    _os_log_impl(&dword_2519F3000, v5, v6, "Failed to refresh data from HomeKit: %@", v9, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v10, -1, -1);
    MEMORY[0x2533AC760](v9, -1, -1);
  }
  else
  {
  }
  uint64_t v13 = (void *)v0[17];
  type metadata accessor for WidgetSnapshotModerator.Error();
  sub_251BAD3DC(&qword_269B9F0D0, 255, (void (*)(uint64_t))type metadata accessor for WidgetSnapshotModerator.Error);
  swift_allocError();
  uint64_t v15 = v14;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 3, 3, v16);
  swift_willThrow();

  swift_task_dealloc();
  swift_task_dealloc();
  unsigned int v17 = (uint64_t (*)(void))v0[1];
  return v17();
}

uint64_t sub_251B99DB4()
{
  uint64_t v1 = *(void **)(v0 + 112);
  uint64_t v2 = (void *)sub_251F356C0();
  id v3 = objc_msgSend(v1, sel_objectForKey_, v2);

  if (v3)
  {
    sub_251F36240();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v7, 0, sizeof(v7));
  }
  sub_251A4ECF0((uint64_t)v7, (uint64_t)v8, &qword_26B21E190);
  if (!v9)
  {
    sub_251A1B064((uint64_t)v8, &qword_26B21E190);
    return 1;
  }
  sub_251A1A568(0, (unint64_t *)&qword_269BA04A0);
  if ((swift_dynamicCast() & 1) == 0) {
    return 1;
  }
  id v4 = objc_msgSend(v6, sel_BOOLValue);

  return (uint64_t)v4;
}

uint64_t sub_251B99ED4(id *a1)
{
  id v1 = objc_msgSend(*a1, sel_uniqueIdentifier);
  uint64_t v2 = sub_251F34DA0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34D80();

  char v6 = sub_251F34D70();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v6 & 1;
}

uint64_t sub_251B99FE0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v7 + 80) = a6;
  *(void *)(v7 + 88) = v6;
  *(unsigned char *)(v7 + 176) = a4;
  *(void *)(v7 + 64) = a3;
  *(void *)(v7 + 72) = a5;
  *(void *)(v7 + 48) = a1;
  *(void *)(v7 + 56) = a2;
  sub_251F35C80();
  *(void *)(v7 + 96) = sub_251F35C70();
  uint64_t v9 = sub_251F35C00();
  *(void *)(v7 + 104) = v9;
  *(void *)(v7 + 112) = v8;
  return MEMORY[0x270FA2498](sub_251B9A084, v9, v8);
}

uint64_t sub_251B9A084()
{
  unint64_t v49 = v0;
  id v1 = objc_msgSend(*(id *)(*(void *)(v0 + 88) + 184), sel_homes);
  sub_251A1A568(0, (unint64_t *)&qword_26B21F2D0);
  unint64_t v2 = sub_251F35AC0();

  v48[0] = MEMORY[0x263F8EE78];
  if (v2 >> 62) {
    goto LABEL_11;
  }
  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  for (uint64_t i = (void *)v0; v3; uint64_t i = (void *)v0)
  {
    uint64_t v4 = 0;
    unint64_t v0 = v2 & 0xC000000000000001;
    while (1)
    {
      id v5 = v0 ? (id)MEMORY[0x2533AB3A0](v4, v2) : *(id *)(v2 + 8 * v4 + 32);
      uint64_t v6 = v5;
      uint64_t v7 = v4 + 1;
      if (__OFADD__(v4, 1)) {
        break;
      }
      uint64_t v8 = i[8];
      id v9 = objc_msgSend(v5, sel_accessories);
      sub_251A1A568(0, (unint64_t *)&qword_26B21EAF8);
      unint64_t v10 = sub_251F35AC0();

      swift_bridgeObjectRetain();
      unint64_t v11 = sub_251DF7750(v10, v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      sub_251ED584C(v11);
      ++v4;
      if (v7 == v3)
      {
        unint64_t v0 = (unint64_t)i;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v12 = v48[0];
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_11:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_251F366C0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v12 = MEMORY[0x263F8EE78];
LABEL_13:
  *(void *)(v0 + 120) = v12;
  char v13 = *(unsigned char *)(v0 + 176);
  swift_bridgeObjectRelease();
  if (v13)
  {
    if (qword_269B9C2E0 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_251F350A0();
    __swift_project_value_buffer(v14, (uint64_t)qword_269BF30A8);
    swift_bridgeObjectRetain_n();
    uint64_t v15 = sub_251F35080();
    os_log_type_t v16 = sub_251F35FD0();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      v48[0] = v18;
      *(_DWORD *)uint64_t v17 = 136315394;
      i[4] = sub_251A00E84(0xD000000000000033, 0x8000000251F6B5E0, v48);
      sub_251F361D0();
      *(_WORD *)(v17 + 12) = 2080;
      uint64_t v19 = sub_251F34DA0();
      uint64_t v20 = swift_bridgeObjectRetain();
      uint64_t v21 = MEMORY[0x2533AAA10](v20, v19);
      unint64_t v23 = v22;
      swift_bridgeObjectRelease();
      i[5] = sub_251A00E84(v21, v23, v48);
      unint64_t v0 = (unint64_t)i;
      sub_251F361D0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2519F3000, v15, v16, "%s Monitoring characteristics: %s", (uint8_t *)v17, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v18, -1, -1);
      MEMORY[0x2533AC760](v17, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v34 = *(void *)(v0 + 80);
    uint64_t v35 = *(void *)(v0 + 72);
    uint64_t v36 = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 8))(v35, v34);
    uint64_t v38 = v37;
    *(void *)(v0 + 128) = v37;
    uint64_t v39 = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 16))(v35, v34);
    uint64_t v41 = v40;
    *(void *)(v0 + 136) = v40;
    unsigned int v42 = (void *)swift_task_alloc();
    *(void *)(v0 + 144) = v42;
    *unsigned int v42 = v0;
    v42[1] = sub_251B9A7D0;
    uint64_t v43 = *(void *)(v0 + 48);
    return WidgetManager.monitorAndFetchState(for:widgetIdentifier:kind:)(v43, v12, v36, v38, v39, v41);
  }
  else
  {
    if (qword_269B9C2E0 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_251F350A0();
    __swift_project_value_buffer(v24, (uint64_t)qword_269BF30A8);
    swift_bridgeObjectRetain_n();
    unint64_t v25 = sub_251F35080();
    os_log_type_t v26 = sub_251F35FD0();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      v48[0] = v28;
      *(_DWORD *)uint64_t v27 = 136315394;
      *(void *)(v0 + 16) = sub_251A00E84(0xD000000000000033, 0x8000000251F6B5E0, v48);
      sub_251F361D0();
      *(_WORD *)(v27 + 12) = 2080;
      uint64_t v29 = sub_251F34DA0();
      uint64_t v30 = swift_bridgeObjectRetain();
      uint64_t v31 = MEMORY[0x2533AAA10](v30, v29);
      unint64_t v33 = v32;
      swift_bridgeObjectRelease();
      i[3] = sub_251A00E84(v31, v33, v48);
      unint64_t v0 = (unint64_t)i;
      sub_251F361D0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2519F3000, v25, v26, "%s Fetching characteristics: %s", (uint8_t *)v27, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v28, -1, -1);
      MEMORY[0x2533AC760](v27, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v45 = (void *)swift_task_alloc();
    *(void *)(v0 + 160) = v45;
    *uint64_t v45 = v0;
    v45[1] = sub_251B9A96C;
    uint64_t v46 = *(void *)(v0 + 48);
    return WidgetManager.fetchState(for:)(v46, v12);
  }
}

uint64_t sub_251B9A7D0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 152) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 104);
    uint64_t v4 = *(void *)(v2 + 112);
    id v5 = sub_251B9AB14;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v2 + 104);
    uint64_t v4 = *(void *)(v2 + 112);
    id v5 = sub_251B9A908;
  }
  return MEMORY[0x270FA2498](v5, v3, v4);
}

uint64_t sub_251B9A908()
{
  swift_release();
  id v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251B9A96C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 168) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 112);
  uint64_t v4 = *(void *)(v2 + 104);
  if (v0) {
    id v5 = sub_251B9AB94;
  }
  else {
    id v5 = sub_251B9AAA8;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_251B9AAA8()
{
  swift_bridgeObjectRelease();
  swift_release();
  id v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251B9AB14()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  id v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251B9AB94()
{
  swift_release();
  swift_bridgeObjectRelease();
  id v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251B9AC04(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v7 + 80) = a6;
  *(void *)(v7 + 88) = v6;
  *(unsigned char *)(v7 + 176) = a4;
  *(void *)(v7 + 64) = a3;
  *(void *)(v7 + 72) = a5;
  *(void *)(v7 + 48) = a1;
  *(void *)(v7 + 56) = a2;
  sub_251F35C80();
  *(void *)(v7 + 96) = sub_251F35C70();
  uint64_t v9 = sub_251F35C00();
  *(void *)(v7 + 104) = v9;
  *(void *)(v7 + 112) = v8;
  return MEMORY[0x270FA2498](sub_251B9ACA8, v9, v8);
}

uint64_t sub_251B9ACA8()
{
  uint64_t v44 = v0;
  int v1 = *(unsigned __int8 *)(v0 + 176);
  uint64_t v2 = *(void *)(v0 + 64);
  id v3 = objc_msgSend(*(id *)(*(void *)(v0 + 88) + 184), sel_homes);
  sub_251A1A568(0, (unint64_t *)&qword_26B21F2D0);
  unint64_t v4 = sub_251F35AC0();

  swift_bridgeObjectRetain();
  uint64_t v5 = sub_251DF7EE0(v4, v2);
  *(void *)(v0 + 120) = v5;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v1 == 1)
  {
    if (qword_269B9C2E0 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_251F350A0();
    __swift_project_value_buffer(v6, (uint64_t)qword_269BF30A8);
    swift_bridgeObjectRetain_n();
    uint64_t v7 = sub_251F35080();
    os_log_type_t v8 = sub_251F35FD0();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = swift_slowAlloc();
      uint64_t v41 = v5;
      v43[0] = swift_slowAlloc();
      uint64_t v10 = v43[0];
      *(_DWORD *)uint64_t v9 = 136315394;
      *(void *)(v0 + 32) = sub_251A00E84(0xD00000000000002ELL, 0x8000000251F6B5B0, v43);
      sub_251F361D0();
      *(_WORD *)(v9 + 12) = 2080;
      uint64_t v11 = sub_251F34DA0();
      uint64_t v12 = swift_bridgeObjectRetain();
      uint64_t v13 = MEMORY[0x2533AAA10](v12, v11);
      unint64_t v15 = v14;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 40) = sub_251A00E84(v13, v15, v43);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2519F3000, v7, v8, "%s Monitoring actionSets: %s", (uint8_t *)v9, 0x16u);
      swift_arrayDestroy();
      uint64_t v16 = v10;
      uint64_t v5 = v41;
      MEMORY[0x2533AC760](v16, -1, -1);
      MEMORY[0x2533AC760](v9, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v28 = *(void *)(v0 + 80);
    uint64_t v29 = *(void *)(v0 + 72);
    uint64_t v30 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 8))(v29, v28);
    uint64_t v32 = v31;
    *(void *)(v0 + 128) = v31;
    uint64_t v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 16))(v29, v28);
    uint64_t v35 = v34;
    *(void *)(v0 + 136) = v34;
    uint64_t v36 = (void *)swift_task_alloc();
    *(void *)(v0 + 144) = v36;
    *uint64_t v36 = v0;
    v36[1] = sub_251B9A7D0;
    uint64_t v37 = *(void *)(v0 + 48);
    return WidgetManager.monitorAndFetchState(for:widgetIdentifier:kind:)(v37, v5, v30, v32, v33, v35);
  }
  else
  {
    if (qword_269B9C2E0 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_251F350A0();
    __swift_project_value_buffer(v17, (uint64_t)qword_269BF30A8);
    swift_bridgeObjectRetain_n();
    uint64_t v18 = sub_251F35080();
    os_log_type_t v19 = sub_251F35FD0();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = swift_slowAlloc();
      uint64_t v42 = v5;
      v43[0] = swift_slowAlloc();
      uint64_t v21 = v43[0];
      *(_DWORD *)uint64_t v20 = 136315394;
      *(void *)(v0 + 16) = sub_251A00E84(0xD00000000000002ELL, 0x8000000251F6B5B0, v43);
      sub_251F361D0();
      *(_WORD *)(v20 + 12) = 2080;
      uint64_t v22 = sub_251F34DA0();
      uint64_t v23 = swift_bridgeObjectRetain();
      uint64_t v24 = MEMORY[0x2533AAA10](v23, v22);
      unint64_t v26 = v25;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 24) = sub_251A00E84(v24, v26, v43);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2519F3000, v18, v19, "%s Fetching actionSets: %s", (uint8_t *)v20, 0x16u);
      swift_arrayDestroy();
      uint64_t v27 = v21;
      uint64_t v5 = v42;
      MEMORY[0x2533AC760](v27, -1, -1);
      MEMORY[0x2533AC760](v20, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v39 = (void *)swift_task_alloc();
    *(void *)(v0 + 160) = v39;
    *uint64_t v39 = v0;
    v39[1] = sub_251B9A96C;
    uint64_t v40 = *(void *)(v0 + 48);
    return WidgetManager.fetchState(for:)(v40, v5);
  }
}

uint64_t WidgetSnapshotModerator.monitorMatterEndpoints<A>(home:configuration:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[23] = a5;
  v6[24] = v5;
  v6[21] = a3;
  v6[22] = a4;
  v6[19] = a1;
  v6[20] = a2;
  v6[25] = *(void *)(a4 - 8);
  v6[26] = swift_task_alloc();
  v6[27] = swift_task_alloc();
  v6[28] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251B9B37C, v5, 0);
}

uint64_t sub_251B9B37C()
{
  *(void *)(v0 + 40) = &type metadata for HomeKitFeatures;
  unint64_t v1 = sub_251A4DA94();
  *(unsigned char *)(v0 + 16) = 4;
  *(void *)(v0 + 48) = v1;
  char v2 = sub_251F34F60();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  if (v2) {
    goto LABEL_5;
  }
  if (qword_269B9C4C0 != -1) {
    swift_once();
  }
  if (byte_269BA38B2 == 1)
  {
LABEL_5:
    id v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 232) = v3;
    *id v3 = v0;
    v3[1] = sub_251B9B4DC;
    uint64_t v4 = *(void *)(v0 + 152);
    return sub_251B97DB8(v4);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
    return v6();
  }
}

uint64_t sub_251B9B4DC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 192);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251B9B5EC, v1, 0);
}

uint64_t sub_251B9B5EC()
{
  size_t v87 = v0;
  uint64_t v1 = v0[24];
  uint64_t v2 = v0[21];
  swift_retain();
  uint64_t v3 = sub_251BA7DF0(v2, v1);
  v0[30] = v3;
  swift_release();
  if (*(void *)(v3 + 16))
  {
    if (qword_269B9C2E0 != -1) {
      swift_once();
    }
    uint64_t v4 = v0[28];
    uint64_t v5 = v0[25];
    uint64_t v6 = v0[22];
    uint64_t v8 = (void *)v0[19];
    uint64_t v7 = v0[20];
    uint64_t v9 = sub_251F350A0();
    v0[31] = __swift_project_value_buffer(v9, (uint64_t)qword_269BF30A8);
    uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    v0[32] = v10;
    v0[33] = (v5 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v10(v4, v7, v6);
    id v11 = v8;
    swift_bridgeObjectRetain_n();
    id v12 = v11;
    uint64_t v13 = sub_251F35080();
    os_log_type_t v14 = sub_251F35FD0();
    BOOL v15 = os_log_type_enabled(v13, v14);
    uint64_t v16 = v0[28];
    uint64_t v17 = v0[25];
    if (v15)
    {
      os_log_type_t type = v14;
      uint64_t v19 = v0[22];
      uint64_t v18 = v0[23];
      id v79 = (id)v0[19];
      log = v13;
      uint64_t v20 = swift_slowAlloc();
      os_log_t v84 = (os_log_t)swift_slowAlloc();
      v86[0] = (uint64_t)v84;
      *(_DWORD *)uint64_t v20 = 136315906;
      v0[11] = sub_251A00E84(0xD00000000000002DLL, 0x8000000251F6B3F0, v86);
      sub_251F361D0();
      *(_WORD *)(v20 + 12) = 2080;
      uint64_t v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8))(v19, v18);
      v0[12] = sub_251A00E84(v21, v22, v86);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      uint64_t v78 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
      v78(v16, v19);
      *(_WORD *)(v20 + 22) = 2080;
      uint64_t v23 = sub_251F34DA0();
      uint64_t v24 = *(void *)(v23 - 8);
      uint64_t v25 = swift_task_alloc();
      id v26 = objc_msgSend(v79, sel_uniqueIdentifier);
      sub_251F34D80();

      sub_251A1A8EC((unint64_t *)&qword_26B21E6B0);
      uint64_t v27 = sub_251F36AB0();
      unint64_t v29 = v28;
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v25, v23);
      swift_task_dealloc();
      v0[13] = sub_251A00E84(v27, v29, v86);
      sub_251F361D0();
      uint64_t v30 = v78;
      swift_bridgeObjectRelease();

      *(_WORD *)(v20 + 32) = 2080;
      uint64_t v31 = swift_bridgeObjectRetain();
      uint64_t v32 = MEMORY[0x2533AAA10](v31, &type metadata for EndpointPath);
      unint64_t v34 = v33;
      swift_bridgeObjectRelease();
      v0[14] = sub_251A00E84(v32, v34, v86);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2519F3000, log, type, "%s W:{%s} HM:{%s} Sending Native Matter Monitor command [%s]", (uint8_t *)v20, 0x2Au);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v84, -1, -1);
      MEMORY[0x2533AC760](v20, -1, -1);
    }
    else
    {
      uint64_t v64 = (void *)v0[19];
      uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
      v30(v0[28], v0[22]);

      swift_bridgeObjectRelease_n();
    }
    v0[34] = v30;
    uint64_t v65 = v0[23];
    uint64_t v66 = v0[22];
    uint64_t v67 = *(uint64_t (**)(uint64_t, uint64_t))(v65 + 8);
    v0[35] = v67;
    v0[36] = (v65 + 8) & 0xFFFFFFFFFFFFLL | 0xC5AC000000000000;
    uint64_t v68 = v67(v66, v65);
    uint64_t v70 = v69;
    v0[37] = v69;
    uint64_t v71 = (*(uint64_t (**)(uint64_t, uint64_t))(v65 + 16))(v66, v65);
    uint64_t v73 = v72;
    v0[38] = v72;
    uint64_t v74 = (void *)swift_task_alloc();
    v0[39] = v74;
    *uint64_t v74 = v0;
    v74[1] = sub_251B9BFC0;
    return WidgetManager.monitorState(for:widgetIdentifier:kind:)(v3, v68, v70, v71, v73);
  }
  else
  {
    swift_bridgeObjectRelease();
    if (qword_269B9C2E0 != -1) {
      swift_once();
    }
    uint64_t v35 = (void *)v0[19];
    uint64_t v37 = v0[25];
    uint64_t v36 = v0[26];
    uint64_t v38 = v0[22];
    uint64_t v39 = v0[20];
    uint64_t v40 = sub_251F350A0();
    __swift_project_value_buffer(v40, (uint64_t)qword_269BF30A8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 16))(v36, v39, v38);
    id v41 = v35;
    swift_bridgeObjectRetain_n();
    id v42 = v41;
    uint64_t v43 = sub_251F35080();
    os_log_type_t v44 = sub_251F35FB0();
    BOOL v45 = os_log_type_enabled(v43, v44);
    uint64_t v47 = v0[25];
    uint64_t v46 = v0[26];
    if (v45)
    {
      uint64_t v49 = v0[22];
      uint64_t v48 = v0[23];
      id v80 = (id)v0[19];
      uint64_t v50 = swift_slowAlloc();
      os_log_t loga = (os_log_t)swift_slowAlloc();
      v86[0] = (uint64_t)loga;
      *(_DWORD *)uint64_t v50 = 136315906;
      os_log_type_t v81 = v44;
      v0[15] = sub_251A00E84(0xD00000000000002DLL, 0x8000000251F6B3F0, v86);
      sub_251F361D0();
      *(_WORD *)(v50 + 12) = 2080;
      uint64_t v51 = (*(uint64_t (**)(uint64_t, uint64_t))(v48 + 8))(v49, v48);
      v0[16] = sub_251A00E84(v51, v52, v86);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v46, v49);
      *(_WORD *)(v50 + 22) = 2080;
      uint64_t v53 = sub_251F34DA0();
      uint64_t v54 = *(void *)(v53 - 8);
      uint64_t v55 = swift_task_alloc();
      id v56 = objc_msgSend(v80, sel_uniqueIdentifier);
      sub_251F34D80();

      sub_251A1A8EC((unint64_t *)&qword_26B21E6B0);
      uint64_t v57 = sub_251F36AB0();
      unint64_t v59 = v58;
      (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v55, v53);
      swift_task_dealloc();
      v0[17] = sub_251A00E84(v57, v59, v86);
      sub_251F361D0();
      swift_bridgeObjectRelease();

      *(_WORD *)(v50 + 32) = 2080;
      uint64_t v60 = swift_bridgeObjectRetain();
      uint64_t v61 = MEMORY[0x2533AAA10](v60, &type metadata for EndpointPath);
      unint64_t v63 = v62;
      swift_bridgeObjectRelease();
      v0[18] = sub_251A00E84(v61, v63, v86);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2519F3000, v43, v81, "%s W:{%s} HM:{%s} 0 endpoints found [%s]", (uint8_t *)v50, 0x2Au);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](loga, -1, -1);
      MEMORY[0x2533AC760](v50, -1, -1);
    }
    else
    {
      BOOL v76 = (void *)v0[19];
      (*(void (**)(void, void))(v47 + 8))(v0[26], v0[22]);

      swift_bridgeObjectRelease_n();
    }
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v77 = (uint64_t (*)(void))v0[1];
    return v77();
  }
}

uint64_t sub_251B9BFC0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 320) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 192);
    uint64_t v4 = sub_251B9C538;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 192);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_251B9C104;
    uint64_t v3 = v5;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_251B9C104()
{
  uint64_t v33 = v0;
  uint64_t v1 = *(void **)(v0 + 152);
  (*(void (**)(void, void, void))(v0 + 256))(*(void *)(v0 + 216), *(void *)(v0 + 160), *(void *)(v0 + 176));
  id v2 = v1;
  swift_bridgeObjectRetain_n();
  id v3 = v2;
  uint64_t v4 = sub_251F35080();
  os_log_type_t v5 = sub_251F35FD0();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 280);
    uint64_t v27 = *(void (**)(uint64_t, uint64_t))(v0 + 272);
    os_log_type_t type = v5;
    uint64_t v7 = *(void *)(v0 + 216);
    log = v4;
    uint64_t v9 = *(void *)(v0 + 176);
    uint64_t v8 = *(void *)(v0 + 184);
    id v28 = *(id *)(v0 + 152);
    uint64_t v10 = swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    uint64_t v32 = v29;
    *(_DWORD *)uint64_t v10 = 136315906;
    *(void *)(v0 + 56) = sub_251A00E84(0xD00000000000002DLL, 0x8000000251F6B3F0, &v32);
    sub_251F361D0();
    *(_WORD *)(v10 + 12) = 2080;
    uint64_t v11 = v6(v9, v8);
    *(void *)(v0 + 64) = sub_251A00E84(v11, v12, &v32);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    v27(v7, v9);
    *(_WORD *)(v10 + 22) = 2080;
    uint64_t v13 = sub_251F34DA0();
    uint64_t v14 = *(void *)(v13 - 8);
    uint64_t v15 = swift_task_alloc();
    id v16 = objc_msgSend(v28, sel_uniqueIdentifier);
    sub_251F34D80();

    sub_251A1A8EC((unint64_t *)&qword_26B21E6B0);
    uint64_t v17 = sub_251F36AB0();
    unint64_t v19 = v18;
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v15, v13);
    swift_task_dealloc();
    *(void *)(v0 + 72) = sub_251A00E84(v17, v19, &v32);
    sub_251F361D0();
    swift_bridgeObjectRelease();

    *(_WORD *)(v10 + 32) = 2080;
    uint64_t v20 = swift_bridgeObjectRetain();
    uint64_t v21 = MEMORY[0x2533AAA10](v20, &type metadata for EndpointPath);
    unint64_t v23 = v22;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 80) = sub_251A00E84(v21, v23, &v32);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2519F3000, log, type, "%s W:{%s} HM:{%s} Native Matter Monitor command succeeded [%s]", (uint8_t *)v10, 0x2Au);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v29, -1, -1);
    MEMORY[0x2533AC760](v10, -1, -1);
  }
  else
  {
    uint64_t v24 = *(void **)(v0 + 152);
    (*(void (**)(void, void))(v0 + 272))(*(void *)(v0 + 216), *(void *)(v0 + 176));

    swift_bridgeObjectRelease_n();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v25 = *(uint64_t (**)(void))(v0 + 8);
  return v25();
}

uint64_t sub_251B9C538()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251B9C5E0(uint64_t a1, uint64_t a2, _DWORD *a3)
{
  *(void *)(v4 + 56) = a2;
  *(void *)(v4 + 64) = v3;
  *(void *)(v4 + 48) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2203A0);
  *(void *)(v4 + 72) = swift_task_alloc();
  *(void *)(v4 + 80) = swift_task_alloc();
  *(void *)(v4 + 88) = type metadata accessor for StateSnapshot.UpdateType(0);
  *(void *)(v4 + 96) = swift_task_alloc();
  *(void *)(v4 + 104) = swift_task_alloc();
  uint64_t v7 = type metadata accessor for StateSnapshot(0);
  *(void *)(v4 + 112) = v7;
  *(void *)(v4 + 120) = *(void *)(v7 - 8);
  *(void *)(v4 + 128) = swift_task_alloc();
  type metadata accessor for StaticHome();
  uint64_t v8 = swift_task_alloc();
  *(void *)(v4 + 136) = v8;
  *(_DWORD *)(v4 + 216) = *a3;
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 144) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_251B9C7A8;
  return WidgetSnapshotModerator.find(home:orRecommended:)(v8, a2, 1);
}

uint64_t sub_251B9C7A8()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 64);
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v3 = sub_251B9D60C;
  }
  else {
    uint64_t v3 = sub_251B9C8D0;
  }
  return MEMORY[0x270FA2498](v3, v2, 0);
}

uint64_t sub_251B9C8D0()
{
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v2 = *(void **)(*(void *)(v0 + 64) + 184);
  *(void *)(v0 + 160) = v2;
  id v3 = objc_msgSend(v2, sel_homes);
  sub_251A1A568(0, (unint64_t *)&qword_26B21F2D0);
  unint64_t v4 = sub_251F35AC0();

  uint64_t v5 = swift_task_alloc();
  *(void *)(v5 + 16) = v1;
  uint64_t v6 = sub_251A95638(sub_251BAD3BC, v5, v4);
  *(void *)(v0 + 168) = v6;
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  sub_251BAD68C(v1, (uint64_t (*)(void))type metadata accessor for StaticHome);
  if (v6)
  {
    uint64_t v7 = *(void *)(v0 + 64);
    **(void **)(v0 + 104) = v6;
    swift_storeEnumTagMultiPayload();
    id v8 = v6;
    id v9 = v2;
    id v10 = objc_msgSend(v8, sel_uniqueIdentifier);
    uint64_t v11 = sub_251F34DA0();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = swift_task_alloc();
    sub_251F34D80();

    swift_beginAccess();
    uint64_t v14 = *(void *)(v7 + 112);
    if (*(void *)(v14 + 16))
    {
      id v15 = v8;
      id v16 = v9;
      unint64_t v17 = sub_2519FE584(v13);
      uint64_t v19 = *(void *)(v0 + 112);
      uint64_t v18 = *(void *)(v0 + 120);
      uint64_t v20 = *(void *)(v0 + 80);
      if (v21)
      {
        sub_251BAD6EC(*(void *)(v14 + 56) + *(void *)(v18 + 72) * v17, *(void *)(v0 + 80), type metadata accessor for StateSnapshot);
        unint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
        v22(v20, 0, 1, v19);
      }
      else
      {
        unint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
        v22(*(void *)(v0 + 80), 1, 1, v19);
      }
      id v9 = v16;
      id v8 = v15;
    }
    else
    {
      unint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 120) + 56);
      v22(*(void *)(v0 + 80), 1, 1, *(void *)(v0 + 112));
    }
    *(void *)(v0 + 176) = v22;
    int v28 = *(_DWORD *)(v0 + 216);
    swift_endAccess();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v13, v11);
    int v29 = unk_27025FBC4;
    if ((unk_27025FBC4 & ~dword_27025FBC0) == 0) {
      int v29 = 0;
    }
    int v30 = dword_27025FBC8;
    if ((dword_27025FBC8 & ~(v29 | dword_27025FBC0)) == 0) {
      int v30 = 0;
    }
    if (((v30 | v29 | dword_27025FBC0) & v28) != 0)
    {
      if (qword_26B21F398 != -1) {
        swift_once();
      }
      uint64_t v31 = qword_26B21F5E0;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v31 = sub_251C08B44((uint64_t)&unk_27025FBD0);
      swift_arrayDestroy();
    }
    int v32 = *(_DWORD *)(v0 + 216);
    StateSnapshot.init(updateType:homeManager:home:previousStateSnapshot:coverages:)(*(void *)(v0 + 104), v9, v8, *(void *)(v0 + 80), v31, *(void **)(v0 + 128));
    swift_task_dealloc();
    if ((v32 & 0x1000001) != 0)
    {
      uint64_t v33 = (void *)swift_task_alloc();
      *(void *)(v0 + 184) = v33;
      *uint64_t v33 = v0;
      v33[1] = sub_251B9CFC0;
      return sub_251B97DB8((uint64_t)v8);
    }
    if ((*(unsigned char *)(v0 + 217) & 0x10) != 0)
    {
      id v35 = objc_msgSend(*(id *)(v0 + 168), sel_userActionPredictionController);
      *(void *)(v0 + 192) = v35;
      if (v35)
      {
        id v37 = v35;
        uint64_t v38 = *(void *)(v0 + 64);
        uint64_t v39 = sub_251BAD3DC(&qword_269B9F410, v36, (void (*)(uint64_t))type metadata accessor for WidgetSnapshotModerator);
        uint64_t v40 = swift_task_alloc();
        *(void *)(v0 + 200) = v40;
        *(void *)(v40 + 16) = v37;
        id v41 = (void *)swift_task_alloc();
        *(void *)(v0 + 208) = v41;
        uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EAC0);
        *id v41 = v0;
        v41[1] = sub_251B9D2EC;
        return MEMORY[0x270FA2318](v0 + 40, v38, v39, 0xD000000000000024, 0x8000000251F6B620, sub_251BAD424, v40, v42);
      }
    }
    uint64_t v43 = *(void *)(v0 + 128);
    uint64_t v44 = *(void *)(v0 + 48);

    sub_251BAD624(v43, v44, type metadata accessor for StateSnapshot);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v27 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    uint64_t v23 = *(void *)(v0 + 56);
    type metadata accessor for WidgetSnapshotModerator.Error();
    sub_251BAD3DC(&qword_269B9F0D0, 255, (void (*)(uint64_t))type metadata accessor for WidgetSnapshotModerator.Error);
    swift_allocError();
    uint64_t v25 = v24;
    sub_251A1B128(v23, v24, &qword_26B21FF90);
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v25, 0, 3, v26);
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v27 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v27();
}

uint64_t sub_251B9CFC0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 64);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251B9D0D0, v1, 0);
}

uint64_t sub_251B9D0D0()
{
  if ((*(_WORD *)(v0 + 216) & 0x1001) != 0
    && (id v1 = objc_msgSend(*(id *)(v0 + 168), sel_userActionPredictionController),
        (*(void *)(v0 + 192) = v1) != 0))
  {
    id v3 = v1;
    uint64_t v4 = *(void *)(v0 + 64);
    uint64_t v5 = sub_251BAD3DC(&qword_269B9F410, v2, (void (*)(uint64_t))type metadata accessor for WidgetSnapshotModerator);
    uint64_t v6 = swift_task_alloc();
    *(void *)(v0 + 200) = v6;
    *(void *)(v6 + 16) = v3;
    uint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v0 + 208) = v7;
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EAC0);
    *uint64_t v7 = v0;
    v7[1] = sub_251B9D2EC;
    return MEMORY[0x270FA2318](v0 + 40, v4, v5, 0xD000000000000024, 0x8000000251F6B620, sub_251BAD424, v6, v8);
  }
  else
  {
    uint64_t v9 = *(void *)(v0 + 128);
    uint64_t v10 = *(void *)(v0 + 48);

    sub_251BAD624(v9, v10, type metadata accessor for StateSnapshot);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
    return v11();
  }
}

uint64_t sub_251B9D2EC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 64);
  swift_task_dealloc();
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251B9D418, v1, 0);
}

uint64_t sub_251B9D418()
{
  uint64_t v1 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 176);
  int v2 = *(_DWORD *)(v0 + 216);
  uint64_t v3 = *(void *)(v0 + 128);
  uint64_t v4 = *(void *)(v0 + 112);
  uint64_t v5 = *(void *)(v0 + 72);
  **(void **)(v0 + 96) = *(void *)(v0 + 40);
  swift_storeEnumTagMultiPayload();
  sub_251BAD6EC(v3, v5, type metadata accessor for StateSnapshot);
  v1(v5, 0, 1, v4);
  int v6 = unk_27025FC24;
  if ((unk_27025FC24 & ~dword_27025FC20) == 0) {
    int v6 = 0;
  }
  int v7 = dword_27025FC28;
  if ((dword_27025FC28 & ~(v6 | dword_27025FC20)) == 0) {
    int v7 = 0;
  }
  int v8 = v7 | v6 | dword_27025FC20;
  uint64_t v9 = *(void **)(v0 + 160);
  if ((v8 & v2) != 0)
  {
    uint64_t v10 = qword_26B21F398;
    id v11 = v9;
    if (v10 != -1) {
      swift_once();
    }
    uint64_t v12 = qword_26B21F5E0;
    swift_bridgeObjectRetain();
  }
  else
  {
    id v13 = v9;
    uint64_t v12 = sub_251C08B44((uint64_t)&unk_27025FC30);
    swift_arrayDestroy();
  }
  uint64_t v14 = *(void **)(v0 + 192);
  uint64_t v15 = *(void *)(v0 + 128);
  StateSnapshot.init(updateType:homeManager:home:previousStateSnapshot:coverages:)(*(void *)(v0 + 96), *(void **)(v0 + 160), *(void **)(v0 + 168), *(void *)(v0 + 72), v12, *(void **)(v0 + 48));

  sub_251BAD68C(v15, type metadata accessor for StateSnapshot);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v16 = *(uint64_t (**)(void))(v0 + 8);
  return v16();
}

uint64_t sub_251B9D60C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_251B9D6B0(uint64_t a1, void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EAD0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v8 + v7, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  aBlock[4] = sub_251BAD4C0;
  aBlock[5] = v8;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_251B9D8A0;
  aBlock[3] = &block_descriptor_27;
  uint64_t v9 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(a2, sel_fetchPredictionsWithCompletion_, v9);
  _Block_release(v9);
}

uint64_t sub_251B9D858()
{
  return sub_251F35C20();
}

uint64_t sub_251B9D8A0(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  sub_251A1A568(0, &qword_26B21EB20);
  uint64_t v2 = sub_251F35AC0();
  swift_retain();
  v1(v2);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_251B9D924(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  long long v5[4] = a3;
  v5[2] = a1;
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  v5[7] = updated;
  v5[8] = *(void *)(updated - 8);
  v5[9] = swift_task_alloc();
  v5[10] = swift_task_alloc();
  sub_251F35C80();
  v5[11] = sub_251F35C70();
  uint64_t v8 = sub_251F35C00();
  v5[12] = v8;
  v5[13] = v7;
  return MEMORY[0x270FA2498](sub_251B9DA30, v8, v7);
}

uint64_t sub_251B9DA30()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = (int *)type metadata accessor for WidgetDetailUpdate();
  *(void *)(v0 + 112) = v2;
  uint64_t v3 = v2[11];
  *(_DWORD *)(v0 + 152) = v3;
  uint64_t v4 = v1 + v3;
  uint64_t v5 = *(void *)(v1 + v2[9]);
  uint64_t v6 = v2[13];
  *(_DWORD *)(v0 + 156) = v6;
  char v7 = *(unsigned char *)(v1 + v6);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_251B9DB14;
  uint64_t v9 = *(void *)(v0 + 80);
  uint64_t v10 = *(void *)(v0 + 40);
  uint64_t v11 = *(void *)(v0 + 32);
  return sub_251B99FE0(v9, v4, v5, v7, v11, v10);
}

uint64_t sub_251B9DB14()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 128) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 104);
  uint64_t v4 = *(void *)(v2 + 96);
  if (v0) {
    uint64_t v5 = sub_251B9DFA8;
  }
  else {
    uint64_t v5 = sub_251B9DC50;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_251B9DC50()
{
  uint64_t v1 = *(int *)(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(v2 + *(int *)(*(void *)(v0 + 112) + 40));
  char v4 = *(unsigned char *)(v2 + *(int *)(v0 + 156));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_251B9DD18;
  uint64_t v6 = *(void *)(v0 + 72);
  uint64_t v7 = *(void *)(v0 + 40);
  uint64_t v8 = *(void *)(v0 + 32);
  return sub_251B9AC04(v6, v2 + v1, v3, v4, v8, v7);
}

uint64_t sub_251B9DD18()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 144) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 104);
  uint64_t v4 = *(void *)(v2 + 96);
  if (v0) {
    uint64_t v5 = sub_251B9E01C;
  }
  else {
    uint64_t v5 = sub_251B9DE54;
  }
  return MEMORY[0x270FA2498](v5, v4, v3);
}

uint64_t sub_251B9DE54()
{
  uint64_t v1 = v0[10];
  uint64_t v3 = v0[8];
  uint64_t v2 = v0[9];
  uint64_t v4 = (void *)v0[2];
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CFB8);
  uint64_t v5 = *(void *)(v3 + 72);
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_251F3DAB0;
  uint64_t v8 = (void *)(v7 + v6);
  *uint64_t v8 = v4;
  swift_storeEnumTagMultiPayload();
  sub_251BAD6EC(v1, (uint64_t)v8 + v5, type metadata accessor for StateSnapshot.UpdateType);
  sub_251BAD624(v2, (uint64_t)v8 + 2 * v5, type metadata accessor for StateSnapshot.UpdateType);
  id v9 = v4;
  sub_251BAD68C(v1, type metadata accessor for StateSnapshot.UpdateType);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(uint64_t))v0[1];
  return v10(v7);
}

uint64_t sub_251B9DFA8()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251B9E01C()
{
  uint64_t v1 = *(void *)(v0 + 80);
  swift_release();
  sub_251BAD68C(v1, type metadata accessor for StateSnapshot.UpdateType);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_251B9E0AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[17] = a4;
  v5[18] = v4;
  v5[15] = a2;
  v5[16] = a3;
  v5[14] = a1;
  uint64_t v7 = type metadata accessor for StateSnapshot(0);
  v5[19] = v7;
  v5[20] = *(void *)(v7 - 8);
  v5[21] = swift_task_alloc();
  v5[22] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2203A0);
  v5[23] = swift_task_alloc();
  unsigned char v5[24] = swift_task_alloc();
  v5[25] = swift_task_alloc();
  type metadata accessor for StaticHome();
  uint64_t v8 = swift_task_alloc();
  v5[26] = v8;
  id v9 = (void *)swift_task_alloc();
  v5[27] = v9;
  *id v9 = v5;
  v9[1] = sub_251B9E248;
  return WidgetSnapshotModerator.find(home:orRecommended:)(v8, a2, 1);
}

uint64_t sub_251B9E248()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 224) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 144);
  if (v0) {
    uint64_t v4 = sub_251B9F014;
  }
  else {
    uint64_t v4 = sub_251B9E374;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_251B9E374()
{
  uint64_t v1 = *(void *)(v0 + 208);
  id v2 = objc_msgSend(*(id *)(*(void *)(v0 + 144) + 184), sel_homes);
  sub_251A1A568(0, (unint64_t *)&qword_26B21F2D0);
  unint64_t v3 = sub_251F35AC0();

  uint64_t v4 = swift_task_alloc();
  *(void *)(v4 + 16) = v1;
  uint64_t v5 = sub_251A95638(sub_251BAD7E4, v4, v3);
  *(void *)(v0 + 232) = v5;
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  sub_251BAD68C(v1, (uint64_t (*)(void))type metadata accessor for StaticHome);
  if (v5)
  {
    uint64_t v6 = *(void *)(v0 + 144);
    id v7 = objc_msgSend(v5, sel_uniqueIdentifier);
    uint64_t v8 = sub_251F34DA0();
    uint64_t v9 = *(void *)(v8 - 8);
    *(void *)(v0 + 240) = *(void *)(v9 + 64);
    uint64_t v10 = swift_task_alloc();
    sub_251F34D80();

    swift_beginAccess();
    uint64_t v11 = *(void *)(v6 + 112);
    if (*(void *)(v11 + 16))
    {
      unint64_t v12 = sub_2519FE584(v10);
      uint64_t v13 = *(void *)(v0 + 200);
      uint64_t v15 = *(void *)(v0 + 152);
      uint64_t v14 = *(void *)(v0 + 160);
      if (v16)
      {
        sub_251BAD6EC(*(void *)(v11 + 56) + *(void *)(v14 + 72) * v12, *(void *)(v0 + 200), type metadata accessor for StateSnapshot);
        unint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
        v17(v13, 0, 1, v15);
      }
      else
      {
        unint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
        v17(*(void *)(v0 + 200), 1, 1, v15);
      }
    }
    else
    {
      unint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 160) + 56);
      v17(*(void *)(v0 + 200), 1, 1, *(void *)(v0 + 152));
    }
    *(void *)(v0 + 248) = v17;
    uint64_t v24 = *(void *)(v0 + 200);
    uint64_t v25 = *(void *)(v0 + 152);
    uint64_t v26 = *(void *)(v0 + 160);
    swift_endAccess();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v10, v8);
    swift_task_dealloc();
    uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
    if (v27(v24, 1, v25) == 1)
    {
      uint64_t v28 = *(void *)(v0 + 120);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
      uint64_t v29 = swift_task_alloc();
      *(void *)(v0 + 256) = v29;
      id v30 = objc_msgSend(v5, sel_uniqueIdentifier);
      uint64_t v31 = swift_task_alloc();
      *(void *)(v0 + 264) = v31;
      sub_251F34D80();

      (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v29, v31, v8);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(v29, 0, 1, v8);
      *(_DWORD *)(v0 + 304) = *(_DWORD *)(v28 + *(int *)(type metadata accessor for WidgetDetailUpdate() + 48));
      int v32 = (void *)swift_task_alloc();
      *(void *)(v0 + 272) = v32;
      *int v32 = v0;
      v32[1] = sub_251B9EA40;
      uint64_t v33 = *(void *)(v0 + 168);
      return sub_251B9C5E0(v33, v29, (_DWORD *)(v0 + 304));
    }
    else
    {
      uint64_t v34 = *(void *)(v0 + 192);
      uint64_t v35 = *(void *)(v0 + 152);
      sub_251A1B128(*(void *)(v0 + 200), v34, &qword_26B2203A0);
      uint64_t result = v27(v34, 1, v35);
      if (result == 1)
      {
        __break(1u);
      }
      else
      {
        sub_251BAD624(*(void *)(v0 + 192), *(void *)(v0 + 168), type metadata accessor for StateSnapshot);
        uint64_t v36 = *(void *)(v0 + 232);
        sub_251BAD624(*(void *)(v0 + 168), *(void *)(v0 + 176), type metadata accessor for StateSnapshot);
        type metadata accessor for WidgetDetailUpdate();
        swift_beginAccess();
        uint64_t v37 = swift_bridgeObjectRetain();
        sub_251AC5D78(v37);
        swift_endAccess();
        swift_bridgeObjectRelease();
        swift_beginAccess();
        uint64_t v38 = swift_bridgeObjectRetain();
        sub_251AC5D78(v38);
        swift_endAccess();
        swift_bridgeObjectRelease();
        uint64_t v39 = (void *)swift_task_alloc();
        *(void *)(v0 + 288) = v39;
        *uint64_t v39 = v0;
        v39[1] = sub_251B9ED18;
        uint64_t v40 = *(void *)(v0 + 176);
        uint64_t v42 = *(void *)(v0 + 136);
        uint64_t v41 = *(void *)(v0 + 144);
        uint64_t v43 = *(void *)(v0 + 120);
        uint64_t v44 = *(void *)(v0 + 128);
        uint64_t v45 = *(void *)(v0 + 112);
        return sub_251B9F26C(v45, v41, v36, v43, v40, v44, v42);
      }
    }
  }
  else
  {
    uint64_t v18 = *(void *)(v0 + 120);
    type metadata accessor for WidgetSnapshotModerator.Error();
    sub_251BAD3DC(&qword_269B9F0D0, 255, (void (*)(uint64_t))type metadata accessor for WidgetSnapshotModerator.Error);
    swift_allocError();
    uint64_t v20 = v19;
    sub_251A1B128(v18, v19, &qword_26B21FF90);
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 0, 3, v21);
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
    return v22();
  }
  return result;
}

uint64_t sub_251B9EA40()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 280) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 144);
    sub_251A1B064(*(void *)(v2 + 256), &qword_26B21FF90);
    uint64_t v4 = sub_251B9F0B8;
    uint64_t v5 = v3;
  }
  else
  {
    uint64_t v6 = *(void *)(v2 + 256);
    uint64_t v7 = *(void *)(v2 + 144);
    sub_251A1B064(v6, &qword_26B21FF90);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = sub_251B9EBA0;
    uint64_t v5 = v7;
  }
  return MEMORY[0x270FA2498](v4, v5, 0);
}

uint64_t sub_251B9EBA0()
{
  uint64_t v1 = v0[29];
  sub_251BAD624(v0[21], v0[22], type metadata accessor for StateSnapshot);
  type metadata accessor for WidgetDetailUpdate();
  swift_beginAccess();
  uint64_t v2 = swift_bridgeObjectRetain();
  sub_251AC5D78(v2);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v3 = swift_bridgeObjectRetain();
  sub_251AC5D78(v3);
  swift_endAccess();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)swift_task_alloc();
  v0[36] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_251B9ED18;
  uint64_t v5 = v0[22];
  uint64_t v7 = v0[17];
  uint64_t v6 = v0[18];
  uint64_t v8 = v0[15];
  uint64_t v9 = v0[16];
  uint64_t v10 = v0[14];
  return sub_251B9F26C(v10, v6, v1, v8, v5, v9, v7);
}

uint64_t sub_251B9ED18()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 296) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 144);
  if (v0) {
    uint64_t v4 = sub_251B9F18C;
  }
  else {
    uint64_t v4 = sub_251B9EE44;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_251B9EE44()
{
  uint64_t v1 = (void *)v0[29];
  uint64_t v11 = v0[25];
  uint64_t v2 = v0[23];
  uint64_t v9 = (void (*)(uint64_t, void, uint64_t, uint64_t))v0[31];
  uint64_t v10 = v0[22];
  uint64_t v3 = v0[19];
  uint64_t v4 = v0[14];
  id v5 = objc_msgSend(v1, sel_uniqueIdentifier);
  uint64_t v6 = swift_task_alloc();
  sub_251F34D80();

  sub_251BAD6EC(v4, v2, type metadata accessor for StateSnapshot);
  v9(v2, 0, 1, v3);
  swift_beginAccess();
  sub_2519F7C18(v2, v6);
  swift_endAccess();

  sub_251BAD68C(v10, type metadata accessor for StateSnapshot);
  sub_251A1B064(v11, &qword_26B2203A0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_251B9F014()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251B9F0B8()
{
  uint64_t v1 = *(void *)(v0 + 200);

  sub_251A1B064(v1, &qword_26B2203A0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_251B9F18C()
{
  uint64_t v1 = *(void *)(v0 + 200);
  uint64_t v2 = *(void *)(v0 + 176);

  sub_251BAD68C(v2, type metadata accessor for StateSnapshot);
  sub_251A1B064(v1, &qword_26B2203A0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_251B9F26C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[7] = a6;
  v7[8] = a7;
  v7[5] = a4;
  v7[6] = a5;
  v7[3] = a2;
  uint64_t v7[4] = a3;
  _OWORD v7[2] = a1;
  type metadata accessor for StateSnapshot(0);
  v7[9] = swift_task_alloc();
  v7[10] = swift_task_alloc();
  v7[11] = sub_251F35C80();
  v7[12] = sub_251F35C70();
  uint64_t v12 = (void *)swift_task_alloc();
  v7[13] = v12;
  void *v12 = v7;
  v12[1] = sub_251B9F394;
  return sub_251B9D924(a3, a4, a6, a7);
}

uint64_t sub_251B9F394(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 112) = a1;
  *(void *)(v3 + 120) = v1;
  swift_task_dealloc();
  uint64_t v5 = sub_251F35C00();
  if (v1) {
    uint64_t v6 = sub_251B9F7B8;
  }
  else {
    uint64_t v6 = sub_251B9F4F4;
  }
  return MEMORY[0x270FA2498](v6, v5, v4);
}

uint64_t sub_251B9F4F4()
{
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v3 = *(void *)(v0 + 48);
  swift_release();
  sub_251BAD6EC(v3, v2, type metadata accessor for StateSnapshot);
  if (*(void *)(v1 + 16))
  {
    uint64_t v24 = *(void *)(v1 + 16);
    uint64_t v4 = *(void *)(v0 + 112);
    uint64_t v5 = *(void *)(type metadata accessor for StateSnapshot.UpdateType(0) - 8);
    unint64_t v23 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v6 = *(void *)(v5 + 72);
    uint64_t v25 = *(void *)(v0 + 120);
    uint64_t v8 = *(void **)(v0 + 72);
    uint64_t v7 = *(void *)(v0 + 80);
    uint64_t v10 = *(void **)(v0 + 32);
    uint64_t v9 = *(void *)(v0 + 40);
    uint64_t v11 = *(void *)(v0 + 24);
    swift_bridgeObjectRetain();
    uint64_t v12 = v8;
    uint64_t v13 = v6;
    sub_251B9F830(v7, v4 + v23, v11, v10, v9, v12);
    if (v25)
    {
      uint64_t v14 = *(void *)(v0 + 80);
      swift_bridgeObjectRelease();
      return sub_251BAD68C(v14, type metadata accessor for StateSnapshot);
    }
    uint64_t v16 = *(void *)(v0 + 72);
    uint64_t v17 = *(void *)(v0 + 80);
    sub_251BAD68C(v17, type metadata accessor for StateSnapshot);
    sub_251BAD624(v16, v17, type metadata accessor for StateSnapshot);
    uint64_t v18 = v24 - 1;
    if (v24 != 1)
    {
      uint64_t v19 = v4 + v13 + v23;
      do
      {
        sub_251B9F830(*(void *)(v0 + 80), v19, *(void *)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40), *(void **)(v0 + 72));
        uint64_t v21 = *(void *)(v0 + 72);
        uint64_t v20 = *(void *)(v0 + 80);
        sub_251BAD68C(v20, type metadata accessor for StateSnapshot);
        sub_251BAD624(v21, v20, type metadata accessor for StateSnapshot);
        v19 += v13;
        --v18;
      }
      while (v18);
    }
    swift_bridgeObjectRelease();
  }
  sub_251BAD624(*(void *)(v0 + 80), *(void *)(v0 + 16), type metadata accessor for StateSnapshot);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
  return v22();
}

uint64_t sub_251B9F7B8()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251B9F830@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  id v30 = a6;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B2203A0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t updated = type metadata accessor for StateSnapshot.UpdateType(0);
  MEMORY[0x270FA5388](updated - 8);
  uint64_t v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251BAD6EC(a2, (uint64_t)v16, type metadata accessor for StateSnapshot.UpdateType);
  uint64_t v17 = *(void **)(a3 + 184);
  sub_251BAD6EC(a1, (uint64_t)v13, type metadata accessor for StateSnapshot);
  uint64_t v18 = type metadata accessor for StateSnapshot(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v13, 0, 1, v18);
  int v19 = *(_DWORD *)(a5 + *(int *)(type metadata accessor for WidgetDetailUpdate() + 48));
  int v20 = unk_2702628B4;
  if ((unk_2702628B4 & ~dword_2702628B0) == 0) {
    int v20 = 0;
  }
  int v21 = dword_2702628B8;
  if ((dword_2702628B8 & ~(v20 | dword_2702628B0)) == 0) {
    int v21 = 0;
  }
  if (((v21 | v20 | dword_2702628B0) & v19) != 0)
  {
    uint64_t v22 = qword_26B21F398;
    id v23 = v17;
    id v24 = a4;
    if (v22 != -1) {
      swift_once();
    }
    uint64_t v25 = qword_26B21F5E0;
    swift_bridgeObjectRetain();
  }
  else
  {
    id v26 = v17;
    id v27 = a4;
    uint64_t v25 = sub_251C08B44((uint64_t)&unk_2702628C0);
    swift_arrayDestroy();
  }
  return StateSnapshot.init(updateType:homeManager:home:previousStateSnapshot:coverages:)((uint64_t)v16, v17, a4, (uint64_t)v13, v25, v30);
}

uint64_t sub_251B9FA8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[6] = a4;
  v5[7] = v4;
  long long v5[4] = a2;
  v5[5] = a3;
  v5[3] = a1;
  v5[8] = *(void *)(a3 - 8);
  v5[9] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for WidgetDetailUpdate();
  v5[10] = v6;
  v5[11] = *(void *)(v6 - 8);
  v5[12] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251B9FBC0, v4, 0);
}

uint64_t sub_251B9FBC0()
{
  uint64_t v108 = v0;
  unint64_t v1 = **(void **)(v0 + 32);
  unint64_t v107 = MEMORY[0x263F8EE78];
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v2 = sub_251F366C0();
    if (v2) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v2)
    {
LABEL_3:
      if (v2 >= 1)
      {
        uint64_t v3 = 0;
        while (1)
        {
          if ((v1 & 0xC000000000000001) != 0) {
            id v4 = (id)MEMORY[0x2533AB3A0](v3, v1);
          }
          else {
            id v4 = *(id *)(v1 + 8 * v3 + 32);
          }
          id v5 = v4;
          self;
          uint64_t v6 = swift_dynamicCastObjCClass();
          if (v6)
          {
            uint64_t v7 = (void *)v6;
            id v8 = v5;
            id v9 = objc_msgSend(v7, sel_actionSet);
            id v10 = objc_msgSend(v9, sel_home);

            if (v10) {
              goto LABEL_16;
            }
          }
          else
          {
            self;
            uint64_t v11 = (void *)swift_dynamicCastObjCClass();
            if (v11)
            {
              id v12 = objc_msgSend(v11, sel_actionSet);
              id v13 = objc_msgSend(v12, sel_home);

              if (v13) {
                goto LABEL_16;
              }
            }
            else
            {
              self;
              uint64_t v14 = swift_dynamicCastObjCClass();
              if (!v14)
              {
                type metadata accessor for MatterExecuteRequest();
                swift_dynamicCastClass();
                goto LABEL_6;
              }
              uint64_t v15 = (void *)v14;
              id v5 = v5;
              id v16 = objc_msgSend(v15, sel_characteristic);
              id v17 = objc_msgSend(v16, sel_service);

              if (!v17
                || (id v18 = objc_msgSend(v17, sel_accessory), v17, !v18))
              {

LABEL_6:
                goto LABEL_7;
              }
              id v19 = objc_msgSend(v18, sel_home);

              if (v19)
              {
LABEL_16:
                MEMORY[0x2533AA9D0]();
                if (*(void *)((v107 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v107 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                  sub_251F35B10();
                }
                sub_251F35B70();
                sub_251F35AE0();
              }
            }
          }
LABEL_7:
          if (v2 == ++v3)
          {
            swift_bridgeObjectRelease();
            unint64_t v20 = v107;
            goto LABEL_28;
          }
        }
      }
      __break(1u);
LABEL_86:
      swift_once();
      goto LABEL_33;
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v20 = MEMORY[0x263F8EE78];
LABEL_28:
  swift_bridgeObjectRelease();
  uint64_t v21 = sub_251EE0AA4(v20);
  *(void *)(v0 + 104) = v21;
  swift_bridgeObjectRelease();
  if ((v21 & 0xC000000000000001) != 0)
  {
    if (sub_251F36300() < 2) {
      goto LABEL_36;
    }
  }
  else if (*(uint64_t *)(v21 + 16) < 2)
  {
    goto LABEL_36;
  }
  if (qword_269B9C2E0 != -1) {
    goto LABEL_86;
  }
LABEL_33:
  uint64_t v22 = sub_251F350A0();
  __swift_project_value_buffer(v22, (uint64_t)qword_269BF30A8);
  id v23 = sub_251F35080();
  os_log_type_t v24 = sub_251F35FB0();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = (uint8_t *)swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    unint64_t v107 = v26;
    *(_DWORD *)uint64_t v25 = 136315138;
    *(void *)(v0 + 16) = sub_251A00E84(0xD000000000000019, 0x8000000251F6B650, (uint64_t *)&v107);
    sub_251F361D0();
    _os_log_impl(&dword_2519F3000, v23, v24, "%s Write requested with accessories from multiple homes. This is undefined behavior.", v25, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v26, -1, -1);
    MEMORY[0x2533AC760](v25, -1, -1);
  }

LABEL_36:
  uint64_t v27 = sub_251F34DA0();
  *(void *)(v0 + 112) = v27;
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = v28;
  *(void *)(v0 + 120) = v28;
  *(void *)(v0 + 128) = *(void *)(v28 + 64);
  uint64_t v30 = swift_task_alloc();
  *(void *)(v0 + 136) = v30;
  *(void *)(v0 + 144) = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90) - 8)
                                    + 64);
  uint64_t v31 = swift_task_alloc();
  uint64_t v32 = swift_bridgeObjectRetain();
  uint64_t v33 = (void *)sub_251ABD904(v32);
  swift_bridgeObjectRelease();
  if (!v33)
  {
    uint64_t v37 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 56);
    v37(v31, 1, 1, v27);
    goto LABEL_40;
  }
  id v34 = objc_msgSend(v33, sel_uniqueIdentifier);

  uint64_t v35 = swift_task_alloc();
  sub_251F34D80();

  uint64_t v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 32);
  v36(v31, v35, v27);
  uint64_t v106 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 56);
  v106(v31, 0, 1, v27);
  swift_task_dealloc();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v31, 1, v27) == 1)
  {
    uint64_t v37 = v106;
LABEL_40:
    *(void *)(v0 + 152) = v37;
    sub_251A1B064(v31, &qword_26B21FF90);
    swift_task_dealloc();
    uint64_t v38 = (void *)swift_task_alloc();
    *(void *)(v0 + 160) = v38;
    *uint64_t v38 = v0;
    v38[1] = sub_251BA0A10;
    return sub_251B969E4();
  }
  uint64_t v40 = *(uint64_t **)(v0 + 32);
  v36(v30, v31, v27);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v41 = *v40;
  if (*v40 < 0 || (v41 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v42 = sub_251F366C0();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v42 = *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain_n();
  }
  *(void *)(v0 + 184) = v106;
  if (v42)
  {
    if (v42 >= 1)
    {
      uint64_t v43 = 0;
      uint64_t v44 = *(void *)(v0 + 120);
      uint64_t v97 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48);
      uint64_t v95 = v44;
      uint64_t v102 = (void (**)(uint64_t, uint64_t, uint64_t))(v44 + 32);
      unint64_t v104 = MEMORY[0x263F8EE78];
      uint64_t v100 = v42;
      while (1)
      {
        if ((v41 & 0xC000000000000001) != 0) {
          id v45 = (id)MEMORY[0x2533AB3A0](v43, v41);
        }
        else {
          id v45 = *(id *)(v41 + 8 * v43 + 32);
        }
        id v46 = v45;
        uint64_t v47 = swift_task_alloc();
        uint64_t v48 = swift_task_alloc();
        uint64_t v49 = swift_task_alloc();
        self;
        uint64_t v50 = swift_dynamicCastObjCClass();
        if (v50)
        {
          uint64_t v51 = (void *)v50;
          uint64_t v52 = *(void *)(v0 + 112);
          id v46 = v46;
          id v53 = objc_msgSend(v51, sel_actionSet);
          id v54 = objc_msgSend(v53, sel_uniqueIdentifier);

          sub_251F34D80();
        }
        else
        {
          self;
          uint64_t v55 = swift_dynamicCastObjCClass();
          uint64_t v52 = *(void *)(v0 + 112);
          if (!v55)
          {
            uint64_t v59 = v49;
            uint64_t v60 = 1;
            goto LABEL_59;
          }
          id v56 = (void *)v55;
          id v46 = v46;
          id v57 = objc_msgSend(v56, sel_actionSet);
          id v58 = objc_msgSend(v57, sel_uniqueIdentifier);

          sub_251F34D80();
        }
        uint64_t v59 = v49;
        uint64_t v60 = 0;
LABEL_59:
        v106(v59, v60, 1, v52);
        sub_251A4ECF0(v49, v48, &qword_26B21FF90);

        swift_task_dealloc();
        if ((*v97)(v48, 1, v52) == 1)
        {
          sub_251A1B064(v48, &qword_26B21FF90);
        }
        else
        {
          uint64_t v61 = *(void *)(v0 + 112);
          unint64_t v62 = *v102;
          (*v102)(v47, v48, v61);
          swift_task_dealloc();
          uint64_t v63 = swift_task_alloc();
          v62(v63, v47, v61);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v104 = sub_251F0F4DC(0, *(void *)(v104 + 16) + 1, 1, v104);
          }
          unint64_t v65 = *(void *)(v104 + 16);
          unint64_t v64 = *(void *)(v104 + 24);
          if (v65 >= v64 >> 1) {
            unint64_t v104 = sub_251F0F4DC(v64 > 1, v65 + 1, 1, v104);
          }
          uint64_t v66 = *(void *)(v0 + 112);
          *(void *)(v104 + 16) = v65 + 1;
          v62(v104+ ((*(unsigned __int8 *)(v95 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v95 + 80))+ *(void *)(v95 + 72) * v65, v63, v66);
        }
        swift_task_dealloc();
        ++v43;
        swift_task_dealloc();
        if (v100 == v43) {
          goto LABEL_67;
        }
      }
    }
    __break(1u);
LABEL_94:
    __break(1u);
    return result;
  }
  unint64_t v104 = MEMORY[0x263F8EE78];
LABEL_67:
  *(void *)(v0 + 192) = v104;
  uint64_t v67 = *(uint64_t **)(v0 + 32);
  swift_bridgeObjectRelease_n();
  uint64_t v68 = *v67;
  if ((unint64_t)*v67 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t result = sub_251F366C0();
    uint64_t v69 = result;
    if (result) {
      goto LABEL_69;
    }
LABEL_89:
    unint64_t v72 = MEMORY[0x263F8EE78];
    uint64_t v73 = (void *)v0;
    goto LABEL_90;
  }
  uint64_t v69 = *(void *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain_n();
  if (!v69) {
    goto LABEL_89;
  }
LABEL_69:
  if (v69 < 1) {
    goto LABEL_94;
  }
  uint64_t v70 = 0;
  uint64_t v71 = *(void *)(v0 + 120);
  unint64_t v101 = v68 & 0xC000000000000001;
  uint64_t v96 = v71;
  uint64_t v98 = (void (**)(uint64_t, uint64_t, uint64_t))(v71 + 32);
  uint64_t v99 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v71 + 48);
  unint64_t v72 = MEMORY[0x263F8EE78];
  uint64_t v103 = v69;
  uint64_t v105 = v68;
  do
  {
    if (v101) {
      id v74 = (id)MEMORY[0x2533AB3A0](v70, v68);
    }
    else {
      id v74 = *(id *)(v68 + 8 * v70 + 32);
    }
    id v75 = v74;
    uint64_t v76 = swift_task_alloc();
    uint64_t v77 = swift_task_alloc();
    uint64_t v78 = swift_task_alloc();
    self;
    uint64_t v79 = swift_dynamicCastObjCClass();
    uint64_t v80 = *(void *)(v0 + 112);
    if (v79)
    {
      os_log_type_t v81 = (void *)v79;
      id v75 = v75;
      id v82 = objc_msgSend(v81, sel_characteristic);
      id v83 = objc_msgSend(v82, sel_uniqueIdentifier);

      sub_251F34D80();
      uint64_t v84 = v78;
      uint64_t v85 = 0;
    }
    else
    {
      uint64_t v84 = v78;
      uint64_t v85 = 1;
    }
    v106(v84, v85, 1, v80);
    sub_251A4ECF0(v78, v77, &qword_26B21FF90);

    swift_task_dealloc();
    if ((*v99)(v77, 1, v80) == 1)
    {
      sub_251A1B064(v77, &qword_26B21FF90);
    }
    else
    {
      uint64_t v86 = *(void *)(v0 + 112);
      size_t v87 = *v98;
      (*v98)(v76, v77, v86);
      swift_task_dealloc();
      uint64_t v88 = swift_task_alloc();
      v87(v88, v76, v86);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v72 = sub_251F0F4DC(0, *(void *)(v72 + 16) + 1, 1, v72);
      }
      unint64_t v90 = *(void *)(v72 + 16);
      unint64_t v89 = *(void *)(v72 + 24);
      if (v90 >= v89 >> 1) {
        unint64_t v72 = sub_251F0F4DC(v89 > 1, v90 + 1, 1, v72);
      }
      uint64_t v91 = *(void *)(v0 + 112);
      *(void *)(v72 + 16) = v90 + 1;
      v87(v72+ ((*(unsigned __int8 *)(v96 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v96 + 80))+ *(void *)(v96 + 72) * v90, v88, v91);
    }
    uint64_t v68 = v105;
    swift_task_dealloc();
    ++v70;
    swift_task_dealloc();
    uint64_t v73 = (void *)v0;
  }
  while (v103 != v70);
LABEL_90:
  v73[25] = v72;
  uint64_t v92 = v73[7];
  swift_bridgeObjectRelease_n();
  uint64_t v93 = (void *)swift_task_alloc();
  v73[26] = v93;
  uint64_t v94 = type metadata accessor for WidgetWriteRequests();
  v73[27] = v94;
  void *v93 = v73;
  v93[1] = sub_251BA13D4;
  return sub_251B944C4((void *)(v92 + 192), v94);
}

uint64_t sub_251BA0A10(uint64_t a1)
{
  id v4 = (void *)*v2;
  v4[21] = v1;
  swift_task_dealloc();
  uint64_t v5 = v4[7];
  if (v1)
  {
    uint64_t v6 = sub_251BA1348;
  }
  else
  {
    v4[22] = a1;
    uint64_t v6 = sub_251BA0B4C;
  }
  return MEMORY[0x270FA2498](v6, v5, 0);
}

uint64_t sub_251BA0B4C()
{
  uint64_t v1 = (void *)v0[22];
  uint64_t v2 = (uint64_t *)v0[4];
  id v3 = objc_msgSend(v1, sel_uniqueIdentifier);

  sub_251F34D80();
  swift_bridgeObjectRelease();
  uint64_t v4 = *v2;
  uint64_t v69 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v0[19];
  if (*v2 < 0 || (v4 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v5 = sub_251F366C0();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain_n();
  }
  v0[23] = v69;
  if (v5)
  {
    if (v5 >= 1)
    {
      uint64_t v7 = 0;
      uint64_t v8 = v0[15];
      uint64_t v60 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
      uint64_t v65 = v5;
      unint64_t v67 = MEMORY[0x263F8EE78];
      uint64_t v58 = v8;
      uint64_t v63 = (void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32);
      while (1)
      {
        if ((v4 & 0xC000000000000001) != 0) {
          id v9 = (id)MEMORY[0x2533AB3A0](v7, v4);
        }
        else {
          id v9 = *(id *)(v4 + 8 * v7 + 32);
        }
        id v10 = v9;
        uint64_t v11 = swift_task_alloc();
        uint64_t v12 = swift_task_alloc();
        uint64_t v13 = swift_task_alloc();
        self;
        uint64_t v14 = swift_dynamicCastObjCClass();
        if (v14)
        {
          uint64_t v15 = (void *)v14;
          uint64_t v16 = v0[14];
          id v10 = v10;
          id v17 = objc_msgSend(v15, sel_actionSet);
          id v18 = objc_msgSend(v17, sel_uniqueIdentifier);

          sub_251F34D80();
        }
        else
        {
          self;
          uint64_t v19 = swift_dynamicCastObjCClass();
          uint64_t v16 = v0[14];
          if (!v19)
          {
            uint64_t v23 = v13;
            uint64_t v24 = 1;
            goto LABEL_17;
          }
          unint64_t v20 = (void *)v19;
          id v10 = v10;
          id v21 = objc_msgSend(v20, sel_actionSet);
          id v22 = objc_msgSend(v21, sel_uniqueIdentifier);

          sub_251F34D80();
        }
        uint64_t v23 = v13;
        uint64_t v24 = 0;
LABEL_17:
        v69(v23, v24, 1, v16);
        sub_251A4ECF0(v13, v12, &qword_26B21FF90);

        swift_task_dealloc();
        if ((*v60)(v12, 1, v16) == 1)
        {
          sub_251A1B064(v12, &qword_26B21FF90);
        }
        else
        {
          uint64_t v25 = v0[14];
          uint64_t v26 = *v63;
          (*v63)(v11, v12, v25);
          swift_task_dealloc();
          uint64_t v27 = swift_task_alloc();
          v26(v27, v11, v25);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v67 = sub_251F0F4DC(0, *(void *)(v67 + 16) + 1, 1, v67);
          }
          unint64_t v29 = *(void *)(v67 + 16);
          unint64_t v28 = *(void *)(v67 + 24);
          if (v29 >= v28 >> 1) {
            unint64_t v67 = sub_251F0F4DC(v28 > 1, v29 + 1, 1, v67);
          }
          uint64_t v30 = v0[14];
          *(void *)(v67 + 16) = v29 + 1;
          v26(v67+ ((*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80))+ *(void *)(v58 + 72) * v29, v27, v30);
        }
        swift_task_dealloc();
        ++v7;
        swift_task_dealloc();
        if (v65 == v7) {
          goto LABEL_25;
        }
      }
    }
    __break(1u);
    goto LABEL_50;
  }
  unint64_t v67 = MEMORY[0x263F8EE78];
LABEL_25:
  v0[24] = v67;
  uint64_t v31 = (uint64_t *)v0[4];
  swift_bridgeObjectRelease_n();
  uint64_t v32 = *v31;
  if ((unint64_t)*v31 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t result = sub_251F366C0();
    uint64_t v33 = result;
    if (result) {
      goto LABEL_27;
    }
LABEL_45:
    unint64_t v36 = MEMORY[0x263F8EE78];
    goto LABEL_46;
  }
  uint64_t v33 = *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain_n();
  if (!v33) {
    goto LABEL_45;
  }
LABEL_27:
  if (v33 < 1)
  {
LABEL_50:
    __break(1u);
    return result;
  }
  uint64_t v34 = 0;
  uint64_t v35 = v0[15];
  unint64_t v64 = v32 & 0xC000000000000001;
  uint64_t v59 = v35;
  uint64_t v61 = (void (**)(uint64_t, uint64_t, uint64_t))(v35 + 32);
  unint64_t v62 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48);
  unint64_t v36 = MEMORY[0x263F8EE78];
  uint64_t v66 = v33;
  uint64_t v68 = v32;
  do
  {
    if (v64) {
      id v37 = (id)MEMORY[0x2533AB3A0](v34, v32);
    }
    else {
      id v37 = *(id *)(v32 + 8 * v34 + 32);
    }
    id v38 = v37;
    uint64_t v39 = swift_task_alloc();
    uint64_t v40 = swift_task_alloc();
    uint64_t v41 = swift_task_alloc();
    self;
    uint64_t v42 = swift_dynamicCastObjCClass();
    uint64_t v43 = v0[14];
    if (v42)
    {
      uint64_t v44 = (void *)v42;
      id v38 = v38;
      id v45 = objc_msgSend(v44, sel_characteristic);
      id v46 = objc_msgSend(v45, sel_uniqueIdentifier);

      sub_251F34D80();
      uint64_t v47 = v41;
      uint64_t v48 = 0;
    }
    else
    {
      uint64_t v47 = v41;
      uint64_t v48 = 1;
    }
    v69(v47, v48, 1, v43);
    sub_251A4ECF0(v41, v40, &qword_26B21FF90);

    swift_task_dealloc();
    if ((*v62)(v40, 1, v43) == 1)
    {
      sub_251A1B064(v40, &qword_26B21FF90);
    }
    else
    {
      uint64_t v49 = v0[14];
      uint64_t v50 = *v61;
      (*v61)(v39, v40, v49);
      swift_task_dealloc();
      uint64_t v51 = swift_task_alloc();
      v50(v51, v39, v49);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v36 = sub_251F0F4DC(0, *(void *)(v36 + 16) + 1, 1, v36);
      }
      unint64_t v53 = *(void *)(v36 + 16);
      unint64_t v52 = *(void *)(v36 + 24);
      if (v53 >= v52 >> 1) {
        unint64_t v36 = sub_251F0F4DC(v52 > 1, v53 + 1, 1, v36);
      }
      uint64_t v54 = v0[14];
      *(void *)(v36 + 16) = v53 + 1;
      v50(v36+ ((*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80))+ *(void *)(v59 + 72) * v53, v51, v54);
    }
    uint64_t v32 = v68;
    swift_task_dealloc();
    ++v34;
    swift_task_dealloc();
  }
  while (v66 != v34);
LABEL_46:
  v0[25] = v36;
  uint64_t v55 = v0[7];
  swift_bridgeObjectRelease_n();
  id v56 = (void *)swift_task_alloc();
  v0[26] = v56;
  uint64_t v57 = type metadata accessor for WidgetWriteRequests();
  v0[27] = v57;
  *id v56 = v0;
  v56[1] = sub_251BA13D4;
  return sub_251B944C4((void *)(v55 + 192), v57);
}

uint64_t sub_251BA1348()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251BA13D4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 224) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 56);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_251BA1870;
    uint64_t v5 = v3;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 56);
    uint64_t v4 = sub_251BA1504;
  }
  return MEMORY[0x270FA2498](v4, v5, 0);
}

uint64_t sub_251BA1504()
{
  id v21 = v0;
  uint64_t v1 = v0[27];
  uint64_t v18 = v0[24];
  uint64_t v19 = v0[25];
  uint64_t v2 = v0[17];
  uint64_t v3 = v0[14];
  uint64_t v4 = v0[15];
  uint64_t v16 = (void (*)(uint64_t, void, uint64_t, uint64_t))v0[23];
  uint64_t v17 = v0[12];
  uint64_t v5 = v0[8];
  uint64_t v6 = v0[9];
  uint64_t v7 = v0[5];
  uint64_t v8 = v0[4];
  uint64_t v9 = swift_task_alloc();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v9, v2, v3);
  v16(v9, 0, 1, v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v6, v8 + *(int *)(v1 + 36), v7);
  int v20 = *(_DWORD *)(v8 + *(int *)(v1 + 40));
  WidgetDetailUpdate.init(homeID:characteristics:actionSets:configuration:isMonitoring:filtered:)(v9, v19, v18, v6, 1, &v20, v7, v17);
  swift_task_dealloc();
  id v10 = (void *)swift_task_alloc();
  v0[29] = v10;
  void *v10 = v0;
  v10[1] = sub_251BA1698;
  uint64_t v11 = v0[12];
  uint64_t v12 = v0[6];
  uint64_t v13 = v0[5];
  uint64_t v14 = v0[3];
  return sub_251B9E0AC(v14, v11, v13, v12);
}

uint64_t sub_251BA1698()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 240) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[7];
    uint64_t v4 = sub_251BA190C;
  }
  else
  {
    uint64_t v5 = v2[7];
    (*(void (**)(void, void))(v2[11] + 8))(v2[12], v2[10]);
    uint64_t v4 = sub_251BA17D0;
    uint64_t v3 = v5;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_251BA17D0()
{
  (*(void (**)(void, void))(v0[15] + 8))(v0[17], v0[14]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_251BA1870()
{
  (*(void (**)(void, void))(v0[15] + 8))(v0[17], v0[14]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_251BA190C()
{
  uint64_t v2 = v0[11];
  uint64_t v1 = v0[12];
  uint64_t v3 = v0[10];
  (*(void (**)(void, void))(v0[15] + 8))(v0[17], v0[14]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t WidgetSnapshotModerator.updateState<A>(updateType:timeout:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  v6[6] = a4;
  v6[7] = v5;
  void v6[4] = a2;
  v6[5] = a3;
  v6[3] = a1;
  v6[8] = swift_task_alloc();
  v6[9] = type metadata accessor for WidgetSnapshotModerator.Error();
  v6[10] = swift_task_alloc();
  type metadata accessor for StateSnapshot(0);
  v6[11] = swift_task_alloc();
  uint64_t v8 = (void *)swift_task_alloc();
  v6[12] = v8;
  *uint64_t v8 = v6;
  v8[1] = sub_251BA1AE8;
  return WidgetSnapshotModerator.updateHomes(timeout:)(a5);
}

uint64_t sub_251BA1AE8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 104) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 56);
  if (v0) {
    uint64_t v4 = sub_251BA22E0;
  }
  else {
    uint64_t v4 = sub_251BA1C14;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_251BA1C14()
{
  uint64_t v1 = *(void *)(v0 + 32);
  *(void *)(v0 + 112) = type metadata accessor for WidgetSnapshotModerator.UpdateType();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v3 = (void *)swift_task_alloc();
      *(void *)(v0 + 144) = v3;
      *uint64_t v3 = v0;
      v3[1] = sub_251BA2088;
      uint64_t v4 = *(void *)(v0 + 88);
      uint64_t v5 = *(void *)(v0 + 48);
      uint64_t v6 = *(void *)(v0 + 32);
      uint64_t v7 = *(void *)(v0 + 40);
      return sub_251B9E0AC(v4, v6, v7, v5);
    }
    else
    {
      uint64_t v12 = (void *)swift_task_alloc();
      *(void *)(v0 + 160) = v12;
      void *v12 = v0;
      v12[1] = sub_251BA21B4;
      uint64_t v13 = *(void *)(v0 + 88);
      uint64_t v14 = *(void *)(v0 + 48);
      uint64_t v15 = *(void *)(v0 + 32);
      uint64_t v16 = *(void *)(v0 + 40);
      return sub_251B9FA8C(v13, v15, v16, v14);
    }
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    uint64_t v9 = swift_task_alloc();
    *(void *)(v0 + 120) = v9;
    sub_251A1B128(v1, v9, &qword_26B21FF90);
    *(_DWORD *)(v0 + 200) = *(_DWORD *)(v1 + *(int *)(type metadata accessor for WidgetRefresh() + 40));
    uint64_t v10 = (void *)swift_task_alloc();
    *(void *)(v0 + 128) = v10;
    void *v10 = v0;
    v10[1] = sub_251BA1E58;
    uint64_t v11 = *(void *)(v0 + 88);
    return sub_251B9C5E0(v11, v9, (_DWORD *)(v0 + 200));
  }
}

uint64_t sub_251BA1E58()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 136) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 56);
    sub_251A1B064(*(void *)(v2 + 120), &qword_26B21FF90);
    uint64_t v4 = sub_251BA278C;
    uint64_t v5 = v3;
  }
  else
  {
    uint64_t v6 = *(void *)(v2 + 120);
    uint64_t v7 = *(void *)(v2 + 56);
    sub_251A1B064(v6, &qword_26B21FF90);
    swift_task_dealloc();
    uint64_t v4 = sub_251BA1FA8;
    uint64_t v5 = v7;
  }
  return MEMORY[0x270FA2498](v4, v5, 0);
}

uint64_t sub_251BA1FA8()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[4];
  sub_251BAD624(v0[11], v0[3], type metadata accessor for StateSnapshot);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v2, v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_251BA2088()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 152) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 56);
  if (v0) {
    uint64_t v4 = sub_251BA2860;
  }
  else {
    uint64_t v4 = sub_251BAD804;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_251BA21B4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 168) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 56);
  if (v0) {
    uint64_t v4 = sub_251BA292C;
  }
  else {
    uint64_t v4 = sub_251BAD804;
  }
  return MEMORY[0x270FA2498](v4, v3, 0);
}

uint64_t sub_251BA22E0()
{
  uint64_t v1 = *(void **)(v0 + 104);
  *(void *)(v0 + 16) = v1;
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D1B0);
  if (swift_dynamicCast())
  {
    uint64_t v3 = *(void *)(v0 + 80);
    uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    *(void *)(v0 + 176) = v4;
    uint64_t v5 = *(void *)(v4 - 8);
    *(void *)(v0 + 184) = v5;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 3, v4) == 3)
    {
      uint64_t v6 = *(void *)(v0 + 64);

      uint64_t updated = type metadata accessor for WidgetSnapshotModerator.UpdateType();
      sub_251B959A0(updated, v6);
      uint64_t v8 = (void *)swift_task_alloc();
      *(void *)(v0 + 192) = v8;
      *uint64_t v8 = v0;
      v8[1] = sub_251BA252C;
      uint64_t v9 = *(void *)(v0 + 64);
      uint64_t v10 = *(void *)(v0 + 40);
      uint64_t v11 = *(void *)(v0 + 48);
      return WidgetSnapshotModerator.queueForNextUpdate<A>(configuration:)(v9, v10, v11);
    }
    sub_251BAD68C(v3, (uint64_t (*)(void))type metadata accessor for WidgetSnapshotModerator.Error);
  }

  uint64_t v13 = *(void *)(v0 + 32);
  uint64_t v14 = type metadata accessor for WidgetSnapshotModerator.UpdateType();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
  return v15();
}

uint64_t sub_251BA252C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 56);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251BA263C, v1, 0);
}

uint64_t sub_251BA263C()
{
  uint64_t v1 = *(void *)(v0 + 176);
  uint64_t v2 = *(void *)(v0 + 184);
  sub_251BAD3DC(&qword_269B9F0D0, 255, (void (*)(uint64_t))type metadata accessor for WidgetSnapshotModerator.Error);
  swift_allocError();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56))(v3, 3, 3, v1);
  swift_willThrow();

  uint64_t v4 = *(void *)(v0 + 32);
  uint64_t updated = type metadata accessor for WidgetSnapshotModerator.UpdateType();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(updated - 8) + 8))(v4, updated);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_251BA278C()
{
  swift_task_dealloc();
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t updated = type metadata accessor for WidgetSnapshotModerator.UpdateType();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(updated - 8) + 8))(v1, updated);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_251BA2860()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t updated = type metadata accessor for WidgetSnapshotModerator.UpdateType();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(updated - 8) + 8))(v1, updated);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_251BA292C()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t updated = type metadata accessor for WidgetSnapshotModerator.UpdateType();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(updated - 8) + 8))(v1, updated);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t WidgetSnapshotModerator.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_defaultActor_destroy();
  return v0;
}

uint64_t WidgetSnapshotModerator.__deallocating_deinit()
{
  WidgetSnapshotModerator.deinit();
  return MEMORY[0x270FA2418](v0);
}

uint64_t sub_251BA2AB0()
{
  type metadata accessor for HomeAppSettings();
  uint64_t v0 = swift_allocObject();
  uint64_t result = sub_251BA2B2C();
  qword_269BF30C0 = v0;
  return result;
}

uint64_t sub_251BA2AEC()
{
  swift_defaultActor_destroy();
  return MEMORY[0x270FA2418](v0);
}

uint64_t sub_251BA2B2C()
{
  swift_defaultActor_initialize();
  id v1 = objc_allocWithZone(MEMORY[0x263EFFA48]);
  uint64_t v2 = (void *)sub_251F356C0();
  id v3 = objc_msgSend(v1, sel_initWithSuiteName_, v2);

  if (!v3) {
    id v3 = objc_msgSend(self, sel_standardUserDefaults);
  }
  *(void *)(v0 + 112) = v3;
  id v4 = objc_allocWithZone(MEMORY[0x263EFFA48]);
  uint64_t v5 = (void *)sub_251F356C0();
  id v6 = objc_msgSend(v4, sel_initWithSuiteName_, v5);

  if (!v6) {
    id v6 = objc_msgSend(self, sel_standardUserDefaults);
  }
  *(void *)(v0 + 120) = v6;
  return v0;
}

double sub_251BA2C48()
{
  qword_269B9F060 = 0;
  double result = 0.0;
  xmmword_269B9F040 = 0u;
  *(_OWORD *)algn_269B9F050 = 0u;
  return result;
}

uint64_t static WidgetDataModel.configuration.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_269B9C2F8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return sub_251A1B128((uint64_t)&xmmword_269B9F040, a1, &qword_269B9F120);
}

uint64_t static WidgetDataModel.configuration.setter(uint64_t a1)
{
  if (qword_269B9C2F8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  sub_251BA80AC(a1, (uint64_t)&xmmword_269B9F040);
  swift_endAccess();
  return sub_251A1B064(a1, &qword_269B9F120);
}

uint64_t (*static WidgetDataModel.configuration.modify())()
{
  if (qword_269B9C2F8 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t static WidgetDataModel.shared.getter()
{
  return swift_initStaticObject();
}

uint64_t WidgetDataModel.homeManager.getter()
{
  if (qword_269B9C2E8 != -1) {
    swift_once();
  }
  *(void *)(v0 + 16) = qword_269B9F038;
  id v3 = (uint64_t (__cdecl *)())((char *)&dword_269B9F070 + dword_269B9F070);
  id v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 24) = v1;
  *id v1 = v0;
  v1[1] = sub_251BA2EF4;
  return v3();
}

uint64_t sub_251BA2EF4(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 16);
  *(void *)(*(void *)v1 + 32) = a1;
  swift_task_dealloc();
  swift_retain();
  return MEMORY[0x270FA2498](sub_251BA3020, v2, 0);
}

uint64_t sub_251BA3020()
{
  id v1 = *(id *)(*(void *)(v0 + 32) + 184);
  swift_release();
  uint64_t v2 = *(uint64_t (**)(id))(v0 + 8);
  return v2(v1);
}

uint64_t WidgetDataModel.snapshotOf<A>(updateType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  if (qword_269B9C2E8 != -1) {
    swift_once();
  }
  uint64_t v7 = (uint64_t (__cdecl *)())((char *)&dword_269B9F070 + dword_269B9F070);
  uint64_t v5 = (void *)swift_task_alloc();
  v4[6] = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_251BA316C;
  return v7();
}

uint64_t sub_251BA316C(uint64_t a1)
{
  uint64_t v2 = (void *)*v1;
  id v3 = (void *)*v1;
  v2[7] = a1;
  swift_task_dealloc();
  swift_retain();
  uint64_t v4 = (void *)swift_task_alloc();
  v2[8] = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_251BA330C;
  uint64_t v5 = v2[5];
  uint64_t v6 = v2[4];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[2];
  return WidgetSnapshotModerator.updateState<A>(updateType:timeout:)(v8, v7, v6, v5, 20.0);
}

uint64_t sub_251BA330C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_release();
  id v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t WidgetDataModel.queueForNextUpdate<A>(configuration:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  long long v3[4] = a3;
  v3[2] = a1;
  if (qword_269B9C2E8 != -1) {
    swift_once();
  }
  uint64_t v6 = (uint64_t (__cdecl *)())((char *)&dword_269B9F070 + dword_269B9F070);
  uint64_t v4 = (void *)swift_task_alloc();
  v3[5] = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_251BA34F4;
  return v6();
}

uint64_t sub_251BA34F4(uint64_t a1)
{
  uint64_t v2 = (void *)*v1;
  uint64_t v3 = (void *)*v1;
  v2[6] = a1;
  swift_task_dealloc();
  swift_retain();
  uint64_t v4 = (void *)swift_task_alloc();
  v2[7] = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_251BA367C;
  uint64_t v5 = v2[4];
  uint64_t v6 = v2[3];
  uint64_t v7 = v2[2];
  return WidgetSnapshotModerator.queueForNextUpdate<A>(configuration:)(v7, v6, v5);
}

uint64_t sub_251BA367C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_release();
  id v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t WidgetDataModel.orderedHomes.getter()
{
  v1[9] = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9F148);
  v1[10] = v2;
  v1[11] = *(void *)(v2 - 8);
  v1[12] = swift_task_alloc();
  v1[13] = *(void *)(type metadata accessor for StaticHome() - 8);
  v1[14] = swift_task_alloc();
  if (qword_269B9C2E8 != -1) {
    swift_once();
  }
  v1[15] = qword_269B9F038;
  uint64_t v5 = (uint64_t (__cdecl *)())((char *)&dword_269B9F070 + dword_269B9F070);
  uint64_t v3 = (void *)swift_task_alloc();
  v1[16] = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_251BA3924;
  return v5();
}

uint64_t sub_251BA3924(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v5 = *v1;
  *(void *)(v2 + 136) = a1;
  swift_task_dealloc();
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 144) = v3;
  *uint64_t v3 = v5;
  v3[1] = sub_251BA3A6C;
  return WidgetSnapshotModerator.updateHomes(timeout:)(20.0);
}

uint64_t sub_251BA3A6C()
{
  uint64_t v2 = (void *)*v1;
  v2[19] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[15];
    return MEMORY[0x270FA2498](sub_251BA43A4, v3, 0);
  }
  else
  {
    swift_release();
    uint64_t v6 = (uint64_t (*)(void))((char *)&dword_269B9F070 + dword_269B9F070);
    uint64_t v4 = (void *)swift_task_alloc();
    v2[20] = v4;
    *uint64_t v4 = v2;
    v4[1] = sub_251BA3BFC;
    return v6();
  }
}

uint64_t sub_251BA3BFC(uint64_t a1)
{
  *(void *)(*(void *)v1 + 168) = a1;
  swift_task_dealloc();
  swift_retain();
  return MEMORY[0x270FA2498](sub_251BA3D0C, a1, 0);
}

uint64_t sub_251BA3D0C()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = v0[15];
  swift_beginAccess();
  v0[22] = *(void *)(v1 + 176);
  swift_bridgeObjectRetain();
  return MEMORY[0x270FA2498](sub_251BA3D98, v2, 0);
}

uint64_t sub_251BA3D98()
{
  uint64_t v18 = v0;
  uint64_t v1 = v0[19];
  swift_release();
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = (void *)sub_251A91CB0(v2);
  swift_bridgeObjectRelease();
  uint64_t v17 = v3;
  sub_251BA4898(&v17);
  if (v1)
  {
    return swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = v17;
    int64_t v6 = v17[2];
    if (v6)
    {
      uint64_t v7 = v0[13];
      uint64_t v17 = (void *)MEMORY[0x263F8EE78];
      sub_251A3E048(0, v6, 0);
      uint64_t v8 = v17;
      unint64_t v9 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      uint64_t v10 = (uint64_t)v5 + v9;
      uint64_t v11 = *(void *)(v7 + 72);
      do
      {
        sub_251BAD6EC(v10, v0[14], (uint64_t (*)(void))type metadata accessor for StaticHome);
        uint64_t v17 = v8;
        unint64_t v13 = v8[2];
        unint64_t v12 = v8[3];
        if (v13 >= v12 >> 1)
        {
          sub_251A3E048(v12 > 1, v13 + 1, 1);
          uint64_t v8 = v17;
        }
        uint64_t v14 = v0[14];
        v8[2] = v13 + 1;
        sub_251BAD624(v14, (uint64_t)v8 + v9 + v13 * v11, (uint64_t (*)(void))type metadata accessor for StaticHome);
        v10 += v11;
        --v6;
      }
      while (v6);
      swift_release();
    }
    else
    {
      swift_release();
      uint64_t v8 = (void *)MEMORY[0x263F8EE78];
    }
    v0[23] = v8;
    v0[7] = v8;
    uint64_t v16 = (uint64_t (__cdecl *)())((char *)&dword_269B9F070 + dword_269B9F070);
    swift_bridgeObjectRetain();
    uint64_t v15 = (void *)swift_task_alloc();
    v0[24] = v15;
    *uint64_t v15 = v0;
    v15[1] = sub_251BA3FD0;
    return v16();
  }
}

uint64_t sub_251BA3FD0(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v5 = *v1;
  *(void *)(v2 + 200) = a1;
  swift_task_dealloc();
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 208) = v3;
  *uint64_t v3 = v5;
  v3[1] = sub_251BA4114;
  return sub_251B969E4();
}

uint64_t sub_251BA4114(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 216) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = *(void *)(v4 + 120);
    swift_release();
    swift_bridgeObjectRelease();

    uint64_t v6 = sub_251BA4420;
    uint64_t v7 = v5;
  }
  else
  {
    uint64_t v8 = *(void *)(v4 + 120);
    swift_release();
    *(void *)(v4 + 224) = a1;
    uint64_t v6 = sub_251BA4284;
    uint64_t v7 = v8;
  }
  return MEMORY[0x270FA2498](v6, v7, 0);
}

uint64_t sub_251BA4284()
{
  uint64_t v1 = *(void *)(v0 + 184);
  uint64_t v3 = *(void *)(v0 + 88);
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v4 = *(void *)(v0 + 80);
  id v5 = *(id *)(v0 + 224);
  sub_251BA4498(v1, v5, v2);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 64) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DFF0);
  sub_251BA8114();
  sub_251F35640();

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v6 = *(void *)(v0 + 56);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v7(v6);
}

uint64_t sub_251BA43A4()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251BA4420()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

void sub_251BA4498(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v33 = a3;
  uint64_t v7 = type metadata accessor for StaticHome();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a1 + 16);
  id v34 = a2;
  if (v11)
  {
    unint64_t v32 = (2 * v11) | 1;
    uint64_t v39 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    id v38 = a2;
    uint64_t v12 = 0;
    unint64_t v13 = (void *)MEMORY[0x263F8EE78];
    uint64_t v36 = a1;
    while (1)
    {
      id v37 = v13;
      uint64_t v35 = v4;
      swift_bridgeObjectRetain();
      while (1)
      {
        if (v12 >= v11)
        {
          __break(1u);
LABEL_22:
          __break(1u);
          return;
        }
        uint64_t v14 = v8;
        sub_251BAD6EC(v39 + *(void *)(v8 + 72) * v12, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticHome);
        id v15 = objc_msgSend(v38, sel_uniqueIdentifier);
        uint64_t v16 = sub_251F34DA0();
        uint64_t v17 = *(void *)(v16 - 8);
        MEMORY[0x270FA5388](v16);
        uint64_t v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
        sub_251F34D80();

        LOBYTE(v15) = sub_251F34D70();
        (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
        sub_251BAD68C((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticHome);
        if (v15) {
          break;
        }
        ++v12;
        uint64_t v8 = v14;
        if (v11 == v12)
        {
          swift_bridgeObjectRelease();
          goto LABEL_19;
        }
      }
      swift_bridgeObjectRelease();
      id v20 = v38;
      uint64_t v21 = swift_bridgeObjectRetain();
      uint64_t v22 = v35;
      sub_251BAD15C(v21, v39, v12, v32, v20);
      uint64_t v4 = v22;
      if (v22)
      {
        swift_bridgeObjectRelease();

        return;
      }
      unint64_t v24 = v23;

      swift_unknownObjectRelease();
      uint64_t v25 = v24 >> 1;
      if (v25 < v12) {
        goto LABEL_22;
      }
      if (swift_isUniquelyReferenced_nonNull_native()) {
        unint64_t v13 = v37;
      }
      else {
        unint64_t v13 = sub_251F10518(0, v37[2] + 1, 1, v37);
      }
      unint64_t v27 = v13[2];
      unint64_t v26 = v13[3];
      if (v27 >= v26 >> 1) {
        unint64_t v13 = sub_251F10518((void *)(v26 > 1), v27 + 1, 1, v13);
      }
      v13[2] = v27 + 1;
      unint64_t v28 = &v13[2 * v27];
      v28[4] = v12;
      v28[5] = v25;
      if (v25 < (unint64_t)v11)
      {
        uint64_t v12 = v25 + 1;
        uint64_t v8 = v14;
        if (v25 + 1 != v11) {
          continue;
        }
      }
      goto LABEL_19;
    }
  }
  id v29 = a2;
LABEL_19:
  sub_251F36E40();
  id v30 = v34;
}

uint64_t WidgetDataModel.deinit()
{
  swift_release();
  return v0;
}

uint64_t WidgetDataModel.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_251BA4898(void **a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for StaticHome() - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_251ECDC60(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  uint64_t result = sub_251BA4940(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_251BA4940(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v159 = type metadata accessor for StaticHome();
  uint64_t v154 = *(void *)(v159 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v159);
  uint64_t v149 = (uint64_t)&v140 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v160 = (uint64_t)&v140 - v7;
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v140 - v9;
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  unint64_t v13 = (char *)&v140 - v12;
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v152 = (uint64_t)&v140 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v151 = (uint64_t)&v140 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v146 = (uint64_t)&v140 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v145 = (uint64_t)&v140 - v20;
  uint64_t v161 = a1;
  uint64_t v21 = a1[1];
  uint64_t result = sub_251F36AA0();
  if (result >= v21)
  {
    if (v21 < 0) {
      goto LABEL_154;
    }
    if (v21) {
      return sub_251BA5504(0, v21, 1, v161);
    }
    return result;
  }
  if (v21 >= 0) {
    uint64_t v23 = v21;
  }
  else {
    uint64_t v23 = v21 + 1;
  }
  if (v21 < -1) {
    goto LABEL_162;
  }
  uint64_t v155 = v10;
  uint64_t v142 = result;
  if (v21 < 2)
  {
    unint64_t v27 = (char *)MEMORY[0x263F8EE78];
    unint64_t v153 = MEMORY[0x263F8EE78]
         + ((*(unsigned __int8 *)(v154 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v154 + 80));
    uint64_t v141 = MEMORY[0x263F8EE78];
    if (v21 != 1)
    {
      unint64_t v29 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_120:
      unint64_t v133 = v27;
      if (v29 >= 2)
      {
        uint64_t v134 = *v161;
        do
        {
          unint64_t v135 = v29 - 2;
          if (v29 < 2) {
            goto LABEL_149;
          }
          if (!v134) {
            goto LABEL_161;
          }
          uint64_t v136 = *(void *)&v133[16 * v135 + 32];
          uint64_t v137 = *(void *)&v133[16 * v29 + 24];
          sub_251BA57F8(v134 + *(void *)(v154 + 72) * v136, v134 + *(void *)(v154 + 72) * *(void *)&v133[16 * v29 + 16], v134 + *(void *)(v154 + 72) * v137, v153);
          if (v2) {
            break;
          }
          if (v137 < v136) {
            goto LABEL_150;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v133 = sub_251ECDC38((uint64_t)v133);
          }
          if (v135 >= *((void *)v133 + 2)) {
            goto LABEL_151;
          }
          uint64_t v138 = &v133[16 * v135 + 32];
          *(void *)uint64_t v138 = v136;
          *((void *)v138 + 1) = v137;
          unint64_t v139 = *((void *)v133 + 2);
          if (v29 > v139) {
            goto LABEL_152;
          }
          memmove(&v133[16 * v29 + 16], &v133[16 * v29 + 32], 16 * (v139 - v29));
          *((void *)v133 + 2) = v139 - 1;
          unint64_t v29 = v139 - 1;
        }
        while (v139 > 2);
      }
LABEL_131:
      swift_bridgeObjectRelease();
      *(void *)(v141 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v24 = v23 >> 1;
    uint64_t v25 = sub_251F35B50();
    *(void *)(v25 + 16) = v24;
    uint64_t v26 = *(unsigned __int8 *)(v154 + 80);
    uint64_t v141 = v25;
    unint64_t v153 = v25 + ((v26 + 32) & ~v26);
  }
  uint64_t v28 = 0;
  unint64_t v27 = (char *)MEMORY[0x263F8EE78];
  uint64_t v144 = v13;
  while (1)
  {
    uint64_t v30 = v28;
    uint64_t v31 = v28 + 1;
    uint64_t v150 = v28;
    if (v28 + 1 >= v21)
    {
      uint64_t v42 = v28;
    }
    else
    {
      uint64_t v32 = *v161;
      uint64_t v33 = *(void *)(v154 + 72);
      uint64_t v156 = v28 + 1;
      uint64_t v34 = v145;
      sub_251BAD6EC(v32 + v33 * v31, v145, (uint64_t (*)(void))type metadata accessor for StaticHome);
      uint64_t v147 = v32;
      uint64_t v158 = v33;
      uint64_t v35 = v32 + v33 * v30;
      uint64_t v36 = v146;
      sub_251BAD6EC(v35, v146, (uint64_t (*)(void))type metadata accessor for StaticHome);
      uint64_t v37 = *(int *)(v159 + 20);
      uint64_t v38 = *(void *)(v34 + v37);
      uint64_t v39 = *(void *)(v34 + v37 + 8);
      uint64_t v40 = (void *)(v36 + v37);
      if (v38 == *v40 && v39 == v40[1]) {
        LODWORD(v157) = 0;
      }
      else {
        LODWORD(v157) = sub_251F36B10();
      }
      sub_251BAD68C(v146, (uint64_t (*)(void))type metadata accessor for StaticHome);
      sub_251BAD68C(v145, (uint64_t (*)(void))type metadata accessor for StaticHome);
      uint64_t v31 = v150 + 2;
      if (v150 + 2 < v21)
      {
        uint64_t v143 = v27;
        v156 *= v158;
        uint64_t v43 = v147;
        uint64_t v44 = v158 * v31;
        while (1)
        {
          uint64_t v45 = v21;
          uint64_t v46 = v31;
          uint64_t v47 = v151;
          sub_251BAD6EC(v43 + v44, v151, (uint64_t (*)(void))type metadata accessor for StaticHome);
          uint64_t v48 = v152;
          sub_251BAD6EC(v43 + v156, v152, (uint64_t (*)(void))type metadata accessor for StaticHome);
          uint64_t v49 = *(int *)(v159 + 20);
          uint64_t v50 = *(void *)(v47 + v49);
          uint64_t v51 = *(void *)(v47 + v49 + 8);
          unint64_t v52 = (void *)(v48 + v49);
          BOOL v53 = v50 == *v52 && v51 == v52[1];
          int v54 = v53 ? 0 : sub_251F36B10();
          sub_251BAD68C(v152, (uint64_t (*)(void))type metadata accessor for StaticHome);
          sub_251BAD68C(v151, (uint64_t (*)(void))type metadata accessor for StaticHome);
          uint64_t v21 = v45;
          if ((v157 ^ v54)) {
            break;
          }
          uint64_t v31 = v46 + 1;
          v43 += v158;
          if (v45 == v46 + 1)
          {
            uint64_t v31 = v45;
            unint64_t v27 = v143;
            goto LABEL_35;
          }
        }
        unint64_t v27 = v143;
        uint64_t v31 = v46;
      }
LABEL_35:
      uint64_t v42 = v150;
      if (v157)
      {
        if (v31 < v150) {
          goto LABEL_155;
        }
        if (v150 < v31)
        {
          uint64_t v157 = v21;
          uint64_t v143 = v27;
          uint64_t v55 = 0;
          uint64_t v56 = v158 * (v31 - 1);
          uint64_t v57 = v31 * v158;
          uint64_t v58 = v150;
          uint64_t v59 = v150 * v158;
          do
          {
            if (v58 != v31 + v55 - 1)
            {
              uint64_t v148 = v2;
              uint64_t v60 = v147;
              if (!v147) {
                goto LABEL_160;
              }
              unint64_t v61 = v147 + v59;
              sub_251BAD624(v147 + v59, v149, (uint64_t (*)(void))type metadata accessor for StaticHome);
              if (v59 < v56 || v61 >= v60 + v57)
              {
                swift_arrayInitWithTakeFrontToBack();
              }
              else if (v59 != v56)
              {
                swift_arrayInitWithTakeBackToFront();
              }
              sub_251BAD624(v149, v60 + v56, (uint64_t (*)(void))type metadata accessor for StaticHome);
              uint64_t v2 = v148;
            }
            ++v58;
            --v55;
            v56 -= v158;
            v57 -= v158;
            v59 += v158;
          }
          while (v58 < v31 + v55);
          unint64_t v27 = v143;
          unint64_t v13 = v144;
          uint64_t v42 = v150;
          uint64_t v21 = v157;
        }
      }
    }
    if (v31 < v21)
    {
      if (__OFSUB__(v31, v42)) {
        goto LABEL_153;
      }
      if (v31 - v42 < v142) {
        break;
      }
    }
LABEL_72:
    if (v31 < v42) {
      goto LABEL_148;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v158 = v31;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      unint64_t v27 = sub_251ECD5C4(0, *((void *)v27 + 2) + 1, 1, v27);
    }
    unint64_t v83 = *((void *)v27 + 2);
    unint64_t v82 = *((void *)v27 + 3);
    unint64_t v29 = v83 + 1;
    if (v83 >= v82 >> 1) {
      unint64_t v27 = sub_251ECD5C4((char *)(v82 > 1), v83 + 1, 1, v27);
    }
    *((void *)v27 + 2) = v29;
    uint64_t v84 = v27 + 32;
    uint64_t v85 = &v27[16 * v83 + 32];
    uint64_t v86 = v158;
    *(void *)uint64_t v85 = v42;
    *((void *)v85 + 1) = v86;
    if (v83)
    {
      while (1)
      {
        unint64_t v87 = v29 - 1;
        if (v29 >= 4)
        {
          uint64_t v92 = &v84[16 * v29];
          uint64_t v93 = *((void *)v92 - 8);
          uint64_t v94 = *((void *)v92 - 7);
          BOOL v98 = __OFSUB__(v94, v93);
          uint64_t v95 = v94 - v93;
          if (v98) {
            goto LABEL_137;
          }
          uint64_t v97 = *((void *)v92 - 6);
          uint64_t v96 = *((void *)v92 - 5);
          BOOL v98 = __OFSUB__(v96, v97);
          uint64_t v90 = v96 - v97;
          char v91 = v98;
          if (v98) {
            goto LABEL_138;
          }
          unint64_t v99 = v29 - 2;
          uint64_t v100 = &v84[16 * v29 - 32];
          uint64_t v102 = *(void *)v100;
          uint64_t v101 = *((void *)v100 + 1);
          BOOL v98 = __OFSUB__(v101, v102);
          uint64_t v103 = v101 - v102;
          if (v98) {
            goto LABEL_140;
          }
          BOOL v98 = __OFADD__(v90, v103);
          uint64_t v104 = v90 + v103;
          if (v98) {
            goto LABEL_143;
          }
          if (v104 >= v95)
          {
            uint64_t v122 = &v84[16 * v87];
            uint64_t v124 = *(void *)v122;
            uint64_t v123 = *((void *)v122 + 1);
            BOOL v98 = __OFSUB__(v123, v124);
            uint64_t v125 = v123 - v124;
            if (v98) {
              goto LABEL_147;
            }
            BOOL v115 = v90 < v125;
            goto LABEL_109;
          }
        }
        else
        {
          if (v29 != 3)
          {
            uint64_t v116 = *((void *)v27 + 4);
            uint64_t v117 = *((void *)v27 + 5);
            BOOL v98 = __OFSUB__(v117, v116);
            uint64_t v109 = v117 - v116;
            char v110 = v98;
            goto LABEL_103;
          }
          uint64_t v89 = *((void *)v27 + 4);
          uint64_t v88 = *((void *)v27 + 5);
          BOOL v98 = __OFSUB__(v88, v89);
          uint64_t v90 = v88 - v89;
          char v91 = v98;
        }
        if (v91) {
          goto LABEL_139;
        }
        unint64_t v99 = v29 - 2;
        uint64_t v105 = &v84[16 * v29 - 32];
        uint64_t v107 = *(void *)v105;
        uint64_t v106 = *((void *)v105 + 1);
        BOOL v108 = __OFSUB__(v106, v107);
        uint64_t v109 = v106 - v107;
        char v110 = v108;
        if (v108) {
          goto LABEL_142;
        }
        unint64_t v111 = &v84[16 * v87];
        uint64_t v113 = *(void *)v111;
        uint64_t v112 = *((void *)v111 + 1);
        BOOL v98 = __OFSUB__(v112, v113);
        uint64_t v114 = v112 - v113;
        if (v98) {
          goto LABEL_145;
        }
        if (__OFADD__(v109, v114)) {
          goto LABEL_146;
        }
        if (v109 + v114 >= v90)
        {
          BOOL v115 = v90 < v114;
LABEL_109:
          if (v115) {
            unint64_t v87 = v99;
          }
          goto LABEL_111;
        }
LABEL_103:
        if (v110) {
          goto LABEL_141;
        }
        unint64_t v118 = &v84[16 * v87];
        uint64_t v120 = *(void *)v118;
        uint64_t v119 = *((void *)v118 + 1);
        BOOL v98 = __OFSUB__(v119, v120);
        uint64_t v121 = v119 - v120;
        if (v98) {
          goto LABEL_144;
        }
        if (v121 < v109) {
          goto LABEL_14;
        }
LABEL_111:
        unint64_t v126 = v87 - 1;
        if (v87 - 1 >= v29)
        {
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
          goto LABEL_157;
        }
        if (!*v161) {
          goto LABEL_159;
        }
        uint64_t v127 = v27;
        uint64_t v128 = &v84[16 * v126];
        uint64_t v129 = *(void *)v128;
        uint64_t v130 = &v84[16 * v87];
        uint64_t v131 = *((void *)v130 + 1);
        sub_251BA57F8(*v161 + *(void *)(v154 + 72) * *(void *)v128, *v161 + *(void *)(v154 + 72) * *(void *)v130, *v161 + *(void *)(v154 + 72) * v131, v153);
        if (v2) {
          goto LABEL_131;
        }
        if (v131 < v129) {
          goto LABEL_134;
        }
        if (v87 > *((void *)v127 + 2)) {
          goto LABEL_135;
        }
        *(void *)uint64_t v128 = v129;
        *(void *)&v84[16 * v126 + 8] = v131;
        unint64_t v132 = *((void *)v127 + 2);
        if (v87 >= v132) {
          goto LABEL_136;
        }
        unint64_t v27 = v127;
        unint64_t v29 = v132 - 1;
        memmove(&v84[16 * v87], v130 + 16, 16 * (v132 - 1 - v87));
        *((void *)v127 + 2) = v132 - 1;
        if (v132 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v29 = 1;
LABEL_14:
    uint64_t v21 = v161[1];
    uint64_t v28 = v158;
    unint64_t v13 = v144;
    if (v158 >= v21) {
      goto LABEL_120;
    }
  }
  if (__OFADD__(v42, v142)) {
    goto LABEL_156;
  }
  if (v42 + v142 >= v21) {
    uint64_t v62 = v21;
  }
  else {
    uint64_t v62 = v42 + v142;
  }
  if (v62 >= v42)
  {
    if (v31 != v62)
    {
      uint64_t v143 = v27;
      uint64_t v147 = v62;
      uint64_t v148 = v2;
      uint64_t v63 = *(void *)(v154 + 72);
      uint64_t v64 = v63 * (v31 - 1);
      uint64_t v156 = v63;
      uint64_t v65 = v31 * v63;
      do
      {
        uint64_t v67 = 0;
        uint64_t v157 = v65;
        uint64_t v158 = v31;
        while (1)
        {
          uint64_t v68 = *v161;
          sub_251BAD6EC(v65 + v67 + *v161, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for StaticHome);
          uint64_t v69 = v64;
          uint64_t v70 = v64 + v67 + v68;
          uint64_t v71 = (uint64_t)v13;
          uint64_t v72 = (uint64_t)v155;
          sub_251BAD6EC(v70, (uint64_t)v155, (uint64_t (*)(void))type metadata accessor for StaticHome);
          uint64_t v73 = *(int *)(v159 + 20);
          uint64_t v74 = *(void *)(v71 + v73);
          uint64_t v75 = *(void *)(v71 + v73 + 8);
          uint64_t v76 = (void *)(v72 + v73);
          if (v74 == *v76 && v75 == v76[1]) {
            break;
          }
          char v78 = sub_251F36B10();
          sub_251BAD68C(v72, (uint64_t (*)(void))type metadata accessor for StaticHome);
          sub_251BAD68C(v71, (uint64_t (*)(void))type metadata accessor for StaticHome);
          unint64_t v13 = (char *)v71;
          if ((v78 & 1) == 0) {
            goto LABEL_60;
          }
          uint64_t v79 = *v161;
          if (!*v161) {
            goto LABEL_158;
          }
          uint64_t v64 = v69;
          uint64_t v65 = v157;
          uint64_t v80 = v79 + v64 + v67;
          sub_251BAD624(v79 + v157 + v67, v160, (uint64_t (*)(void))type metadata accessor for StaticHome);
          swift_arrayInitWithTakeFrontToBack();
          sub_251BAD624(v160, v80, (uint64_t (*)(void))type metadata accessor for StaticHome);
          v67 -= v156;
          ++v42;
          uint64_t v66 = v158;
          if (v158 == v42) {
            goto LABEL_61;
          }
        }
        sub_251BAD68C(v72, (uint64_t (*)(void))type metadata accessor for StaticHome);
        sub_251BAD68C(v71, (uint64_t (*)(void))type metadata accessor for StaticHome);
        unint64_t v13 = (char *)v71;
LABEL_60:
        uint64_t v64 = v69;
        uint64_t v65 = v157;
        uint64_t v66 = v158;
LABEL_61:
        uint64_t v31 = v66 + 1;
        v64 += v156;
        v65 += v156;
        uint64_t v42 = v150;
      }
      while (v31 != v147);
      uint64_t v31 = v147;
      uint64_t v2 = v148;
      unint64_t v27 = v143;
    }
    goto LABEL_72;
  }
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  __break(1u);
LABEL_161:
  __break(1u);
LABEL_162:
  uint64_t result = sub_251F36670();
  __break(1u);
  return result;
}