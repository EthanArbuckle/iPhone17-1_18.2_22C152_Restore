uint64_t sub_251A78E58()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  unsigned int v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D2D0);
  result = sub_251F363D0();
  v4 = result;
  if (!*(void *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v26 = v1;
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    v8 = ~(-1 << v7);
  }
  else {
    v8 = -1;
  }
  v9 = v8 & *(void *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = *(_DWORD *)(*(void *)(v2 + 48) + 4 * v14);
    result = MEMORY[0x2533ABBC0](*(void *)(v4 + 40), v18, 4);
    v19 = -1 << *(unsigned char *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v24 = v21 == v23;
        if (v21 == v23) {
          v21 = 0;
        }
        v22 |= v24;
        v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_DWORD *)(*(void *)(v4 + 48) + 4 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    result = swift_release();
    v1 = v26;
    goto LABEL_35;
  }
  v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_251A790C0()
{
  v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D340);
  uint64_t result = sub_251F363D0();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    char v18 = *(unsigned char *)(*(void *)(v2 + 48) + v14);
    sub_251F36CA0();
    sub_251F36CE0();
    uint64_t result = sub_251F36D00();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_251A79348()
{
  v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA0450);
  uint64_t result = sub_251F363D0();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    char v18 = *(unsigned char *)(*(void *)(v2 + 48) + v14);
    sub_251F36CA0();
    sub_251F36CE0();
    uint64_t result = sub_251F36D00();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

unint64_t sub_251A795D0()
{
  v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D258);
  uint64_t v3 = sub_251F363D0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_24:
    unint64_t result = swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v21 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  unint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v12 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v13 = v12 | (v11 << 6);
      goto LABEL_7;
    }
    int64_t v18 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v18 >= v8) {
      goto LABEL_23;
    }
    unint64_t v19 = *(void *)(v21 + 8 * v18);
    ++v11;
    if (!v19)
    {
      int64_t v11 = v18 + 1;
      if (v18 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v19 = *(void *)(v21 + 8 * v11);
      if (!v19)
      {
        int64_t v11 = v18 + 2;
        if (v18 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v19 = *(void *)(v21 + 8 * v11);
        if (!v19) {
          break;
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v19 - 1) & v19;
    unint64_t v13 = __clz(__rbit64(v19)) + (v11 << 6);
LABEL_7:
    uint64_t v14 = *(void *)(v2 + 48) + 32 * v13;
    uint64_t v15 = *(void *)v14;
    uint64_t v16 = *(void *)(v14 + 8);
    long long v22 = *(_OWORD *)(v14 + 16);
    sub_251F36CA0();
    sub_251F36CB0();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_251F357B0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_251A54AB8((uint64_t)v23, *((uint64_t *)&v22 + 1));
    swift_bridgeObjectRelease();
    sub_251F36D00();
    unint64_t result = sub_251F36290();
    *(void *)(v9 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = *(void *)(v4 + 48) + 32 * result;
    *(void *)uint64_t v17 = v15;
    *(void *)(v17 + 8) = v16;
    *(_OWORD *)(v17 + 16) = v22;
    ++*(void *)(v4 + 16);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v8)
  {
LABEL_23:
    swift_release();
    v1 = v0;
    goto LABEL_24;
  }
  unint64_t v19 = *(void *)(v21 + 8 * v20);
  if (v19)
  {
    int64_t v11 = v20;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v11 >= v8) {
      goto LABEL_23;
    }
    unint64_t v19 = *(void *)(v21 + 8 * v11);
    ++v20;
    if (v19) {
      goto LABEL_22;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_251A79864()
{
  v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D300);
  uint64_t v3 = sub_251F363D0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v9) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    char v19 = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    sub_251F36CA0();
    sub_251F36CD0();
    sub_251F357B0();
    uint64_t result = sub_251F36D00();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(unsigned char *)(*(void *)(v4 + 48) + v13) = v19;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_251A79B58()
{
  v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D250);
  uint64_t v3 = sub_251F363D0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v9) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    char v19 = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    sub_251F36CA0();
    sub_251F36CC0();
    sub_251F357B0();
    uint64_t result = sub_251F36D00();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(unsigned char *)(*(void *)(v4 + 48) + v13) = v19;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_251A79E20()
{
  v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D2F0);
  uint64_t result = sub_251F363D0();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v26 = v1;
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    unsigned __int16 v18 = *(_WORD *)(*(void *)(v2 + 48) + 2 * v14);
    uint64_t result = MEMORY[0x2533ABBC0](*(void *)(v4 + 40), v18, 2);
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_WORD *)(*(void *)(v4 + 48) + 2 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    v1 = v26;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_251A7A088()
{
  v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E188);
  uint64_t v3 = sub_251F363D0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = *(void *)(v2 + 56);
  v35 = v0;
  uint64_t v36 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & v6;
  int64_t v37 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  for (int64_t i = 0; ; int64_t i = v38)
  {
    if (v8)
    {
      unint64_t v13 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      int64_t v38 = i;
      unint64_t v14 = v13 | (i << 6);
      goto LABEL_24;
    }
    int64_t v15 = i + 1;
    if (__OFADD__(i, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v37) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v36 + 8 * v15);
    int64_t v17 = i + 1;
    if (!v16)
    {
      int64_t v17 = i + 2;
      if (i + 2 >= v37) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v36 + 8 * v17);
      if (!v16)
      {
        int64_t v17 = i + 3;
        if (i + 3 >= v37) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v36 + 8 * v17);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v16 - 1) & v16;
    int64_t v38 = v17;
    unint64_t v14 = __clz(__rbit64(v16)) + (v17 << 6);
LABEL_24:
    uint64_t v19 = sub_251F34DA0();
    uint64_t v20 = *(void *)(v19 - 8);
    MEMORY[0x270FA5388](v19);
    char v22 = (char *)&v35 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v24 = v23;
    uint64_t v25 = v2;
    uint64_t v26 = *(void *)(v2 + 48);
    uint64_t v27 = *(void *)(v24 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v20 + 16))(v22, v26 + v27 * v14, v19);
    sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
    uint64_t result = sub_251F35600();
    uint64_t v28 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v9 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v29) & ~*(void *)(v9 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v33 = v30 == v32;
        if (v30 == v32) {
          unint64_t v30 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v9 + 8 * v30);
      }
      while (v34 == -1);
      unint64_t v12 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v20 + 32))(*(void *)(v4 + 48) + v12 * v27, v22, v19);
    ++*(void *)(v4 + 16);
    uint64_t v2 = v25;
  }
  uint64_t v18 = i + 4;
  if (i + 4 >= v37)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    v1 = v35;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v36 + 8 * v18);
  if (v16)
  {
    int64_t v17 = i + 4;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v17 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v17 >= v37) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v36 + 8 * v17);
    ++v18;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_251A7A424()
{
  v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D338);
  uint64_t result = sub_251F363D0();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_37:
    uint64_t *v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v28 = v2 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(v2 + 32);
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v9 = result + 56;
  while (1)
  {
    if (v8)
    {
      unint64_t v12 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v13 = v12 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v14 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v14 >= v29) {
      goto LABEL_35;
    }
    unint64_t v15 = *(void *)(v28 + 8 * v14);
    ++v5;
    if (!v15)
    {
      int64_t v5 = v14 + 1;
      if (v14 + 1 >= v29) {
        goto LABEL_35;
      }
      unint64_t v15 = *(void *)(v28 + 8 * v5);
      if (!v15)
      {
        int64_t v5 = v14 + 2;
        if (v14 + 2 >= v29) {
          goto LABEL_35;
        }
        unint64_t v15 = *(void *)(v28 + 8 * v5);
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v5 << 6);
LABEL_24:
    uint64_t v17 = *(void *)(v2 + 48) + 16 * v13;
    uint64_t v18 = *(void *)v17;
    __int16 v19 = *(_WORD *)(v17 + 8);
    int v20 = *(unsigned __int8 *)(v17 + 10);
    sub_251F36CA0();
    sub_251F36CF0();
    sub_251F36CC0();
    if (v20 != 1) {
      sub_251F36CD0();
    }
    uint64_t result = sub_251F36D00();
    uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v9 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v10 = __clz(__rbit64((-1 << v22) & ~*(void *)(v9 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v9 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v10 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v9 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
    uint64_t v11 = *(void *)(v4 + 48) + 16 * v10;
    *(void *)uint64_t v11 = v18;
    *(_WORD *)(v11 + 8) = v19;
    *(unsigned char *)(v11 + 10) = v20;
    ++*(void *)(v4 + 16);
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_35:
    uint64_t result = swift_release();
    v1 = v0;
    goto LABEL_37;
  }
  unint64_t v15 = *(void *)(v28 + 8 * v16);
  if (v15)
  {
    int64_t v5 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v5 >= v29) {
      goto LABEL_35;
    }
    unint64_t v15 = *(void *)(v28 + 8 * v5);
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_251A7A710()
{
  v1 = v0;
  uint64_t v2 = type metadata accessor for Action();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  int64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D328);
  uint64_t v7 = sub_251F363D0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  unint64_t v30 = v0;
  uint64_t v31 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v32 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = v7 + 56;
  uint64_t result = swift_retain();
  int64_t v15 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v18 = v17 | (v15 << 6);
      goto LABEL_24;
    }
    int64_t v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v19 >= v32) {
      goto LABEL_33;
    }
    unint64_t v20 = *(void *)(v31 + 8 * v19);
    ++v15;
    if (!v20)
    {
      int64_t v15 = v19 + 1;
      if (v19 + 1 >= v32) {
        goto LABEL_33;
      }
      unint64_t v20 = *(void *)(v31 + 8 * v15);
      if (!v20)
      {
        int64_t v15 = v19 + 2;
        if (v19 + 2 >= v32) {
          goto LABEL_33;
        }
        unint64_t v20 = *(void *)(v31 + 8 * v15);
        if (!v20) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v15 << 6);
LABEL_24:
    uint64_t v22 = *(void *)(v3 + 72);
    sub_251A81FF0(*(void *)(v6 + 48) + v22 * v18, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for Action);
    sub_251F36CA0();
    Action.hash(into:)(v33);
    uint64_t result = sub_251F36D00();
    uint64_t v23 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v13 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v24) & ~*(void *)(v13 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v28 = v25 == v27;
        if (v25 == v27) {
          unint64_t v25 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v13 + 8 * v25);
      }
      while (v29 == -1);
      unint64_t v16 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(void *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    uint64_t result = sub_251A82058((uint64_t)v5, *(void *)(v8 + 48) + v16 * v22, (uint64_t (*)(void))type metadata accessor for Action);
    ++*(void *)(v8 + 16);
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v32)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    v1 = v30;
    goto LABEL_35;
  }
  unint64_t v20 = *(void *)(v31 + 8 * v21);
  if (v20)
  {
    int64_t v15 = v21;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v15 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v15 >= v32) {
      goto LABEL_33;
    }
    unint64_t v20 = *(void *)(v31 + 8 * v15);
    ++v21;
    if (v20) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_251A7AA74()
{
  v1 = v0;
  uint64_t v53 = type metadata accessor for Event.CharacteristicEvent();
  MEMORY[0x270FA5388](v53);
  uint64_t v3 = (char *)&v50 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Event.TimeEvent(0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v52 = (uint64_t)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Event();
  uint64_t v58 = *(void *)(v6 - 8);
  uint64_t v59 = v6;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v50 - v10;
  uint64_t v12 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D330);
  uint64_t v13 = sub_251F363D0();
  uint64_t v14 = v13;
  if (!*(void *)(v12 + 16))
  {
    uint64_t result = swift_release();
LABEL_51:
    uint64_t *v1 = v14;
    return result;
  }
  v50 = v0;
  uint64_t v15 = 1 << *(unsigned char *)(v12 + 32);
  uint64_t v16 = *(void *)(v12 + 56);
  uint64_t v55 = v12 + 56;
  if (v15 < 64) {
    uint64_t v17 = ~(-1 << v15);
  }
  else {
    uint64_t v17 = -1;
  }
  unint64_t v18 = v17 & v16;
  int64_t v56 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v19 = v13 + 56;
  uint64_t result = swift_retain();
  int64_t v21 = 0;
  uint64_t v54 = v12;
  v57 = v11;
  v51 = v3;
  while (1)
  {
    if (v18)
    {
      unint64_t v23 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      int64_t v60 = v21;
      unint64_t v24 = v23 | (v21 << 6);
      goto LABEL_24;
    }
    int64_t v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_52:
      __break(1u);
      goto LABEL_53;
    }
    if (v25 >= v56) {
      goto LABEL_49;
    }
    unint64_t v26 = *(void *)(v55 + 8 * v25);
    int64_t v27 = v21 + 1;
    if (!v26)
    {
      int64_t v27 = v21 + 2;
      if (v21 + 2 >= v56) {
        goto LABEL_49;
      }
      unint64_t v26 = *(void *)(v55 + 8 * v27);
      if (!v26)
      {
        int64_t v27 = v21 + 3;
        if (v21 + 3 >= v56) {
          goto LABEL_49;
        }
        unint64_t v26 = *(void *)(v55 + 8 * v27);
        if (!v26) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v18 = (v26 - 1) & v26;
    int64_t v60 = v27;
    unint64_t v24 = __clz(__rbit64(v26)) + (v27 << 6);
LABEL_24:
    uint64_t v29 = *(void *)(v58 + 72);
    sub_251A81FF0(*(void *)(v12 + 48) + v29 * v24, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for Event);
    sub_251F36CA0();
    sub_251A81FF0((uint64_t)v11, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for Event);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (!EnumCaseMultiPayload)
    {
      uint64_t v33 = *(void *)v9;
      uint64_t v32 = *((void *)v9 + 1);
      uint64_t v34 = *((void *)v9 + 2);
      int v35 = v9[24];
      sub_251F36CB0();
      if (v35 == 1)
      {
        sub_251F36CB0();
        sub_251F36CF0();
        sub_251F36CF0();
        sub_251F36CF0();
      }
      else
      {
        sub_251F36CB0();
        sub_251F36CB0();
        if (v32)
        {
          sub_251F36CB0();
          if (v32 == 1)
          {
            uint64_t v41 = v33;
            unint64_t v42 = 1;
          }
          else
          {
            sub_251A54708(v64, v32);
            uint64_t v41 = v33;
            unint64_t v42 = v32;
          }
        }
        else
        {
          sub_251F36CB0();
          uint64_t v41 = v33;
          unint64_t v42 = 0;
        }
        sub_251A580E0(v41, v42, v34, 0);
      }
      uint64_t v3 = v51;
      uint64_t v12 = v54;
      goto LABEL_39;
    }
    if (EnumCaseMultiPayload == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D120);
      uint64_t v31 = v52;
      sub_251A82058((uint64_t)v9, v52, type metadata accessor for Event.TimeEvent);
      sub_251F36CB0();
      Event.TimeEvent.hash(into:)();
      sub_251F36CB0();
      sub_251A820C0(v31, type metadata accessor for Event.TimeEvent);
LABEL_39:
      uint64_t v11 = v57;
      goto LABEL_40;
    }
    sub_251A82058((uint64_t)v9, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for Event.CharacteristicEvent);
    sub_251F36CB0();
    sub_251F34DA0();
    sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
    sub_251F35610();
    uint64_t v36 = v53;
    LOBYTE(v61) = v3[*(int *)(v53 + 20)];
    CharacteristicKind.rawValue.getter();
    sub_251F357B0();
    swift_bridgeObjectRelease();
    int64_t v37 = &v3[*(int *)(v36 + 24)];
    uint64_t v39 = *(void *)v37;
    uint64_t v38 = *((void *)v37 + 1);
    unsigned int v40 = v37[16];
    if (v40 >> 6) {
      LOBYTE(v40) = v40 & 0x3F;
    }
    sub_251F36CB0();
    uint64_t v61 = v39;
    uint64_t v62 = v38;
    char v63 = v40;
    CharacteristicKind.Value.hash(into:)();
    uint64_t v12 = v54;
    uint64_t v11 = v57;
    sub_251A820C0((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for Event.CharacteristicEvent);
LABEL_40:
    uint64_t result = sub_251F36D00();
    uint64_t v43 = -1 << *(unsigned char *)(v14 + 32);
    unint64_t v44 = result & ~v43;
    unint64_t v45 = v44 >> 6;
    if (((-1 << v44) & ~*(void *)(v19 + 8 * (v44 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v44) & ~*(void *)(v19 + 8 * (v44 >> 6)))) | v44 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v46 = 0;
      unint64_t v47 = (unint64_t)(63 - v43) >> 6;
      do
      {
        if (++v45 == v47 && (v46 & 1) != 0)
        {
          __break(1u);
          goto LABEL_52;
        }
        BOOL v48 = v45 == v47;
        if (v45 == v47) {
          unint64_t v45 = 0;
        }
        v46 |= v48;
        uint64_t v49 = *(void *)(v19 + 8 * v45);
      }
      while (v49 == -1);
      unint64_t v22 = __clz(__rbit64(~v49)) + (v45 << 6);
    }
    *(void *)(v19 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    uint64_t result = sub_251A82058((uint64_t)v11, *(void *)(v14 + 48) + v22 * v29, (uint64_t (*)(void))type metadata accessor for Event);
    ++*(void *)(v14 + 16);
    int64_t v21 = v60;
  }
  uint64_t v28 = v21 + 4;
  if (v21 + 4 >= v56)
  {
LABEL_49:
    uint64_t result = swift_release_n();
    v1 = v50;
    goto LABEL_51;
  }
  unint64_t v26 = *(void *)(v55 + 8 * v28);
  if (v26)
  {
    int64_t v27 = v21 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v27 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v27 >= v56) {
      goto LABEL_49;
    }
    unint64_t v26 = *(void *)(v55 + 8 * v27);
    ++v28;
    if (v26) {
      goto LABEL_23;
    }
  }
LABEL_53:
  __break(1u);
  return result;
}

uint64_t sub_251A7B140()
{
  v1 = v0;
  uint64_t v2 = type metadata accessor for StaticService();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D268);
  uint64_t v7 = sub_251F363D0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  unint64_t v30 = v0;
  uint64_t v31 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v32 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = v7 + 56;
  uint64_t result = swift_retain();
  int64_t v15 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v18 = v17 | (v15 << 6);
      goto LABEL_24;
    }
    int64_t v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v19 >= v32) {
      goto LABEL_33;
    }
    unint64_t v20 = *(void *)(v31 + 8 * v19);
    ++v15;
    if (!v20)
    {
      int64_t v15 = v19 + 1;
      if (v19 + 1 >= v32) {
        goto LABEL_33;
      }
      unint64_t v20 = *(void *)(v31 + 8 * v15);
      if (!v20)
      {
        int64_t v15 = v19 + 2;
        if (v19 + 2 >= v32) {
          goto LABEL_33;
        }
        unint64_t v20 = *(void *)(v31 + 8 * v15);
        if (!v20) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v15 << 6);
LABEL_24:
    uint64_t v22 = *(void *)(v3 + 72);
    sub_251A81FF0(*(void *)(v6 + 48) + v22 * v18, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticService);
    sub_251F36CA0();
    StaticService.hash(into:)(v33);
    uint64_t result = sub_251F36D00();
    uint64_t v23 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v13 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v24) & ~*(void *)(v13 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v28 = v25 == v27;
        if (v25 == v27) {
          unint64_t v25 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v13 + 8 * v25);
      }
      while (v29 == -1);
      unint64_t v16 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(void *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    uint64_t result = sub_251A82058((uint64_t)v5, *(void *)(v8 + 48) + v16 * v22, (uint64_t (*)(void))type metadata accessor for StaticService);
    ++*(void *)(v8 + 16);
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v32)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    v1 = v30;
    goto LABEL_35;
  }
  unint64_t v20 = *(void *)(v31 + 8 * v21);
  if (v20)
  {
    int64_t v15 = v21;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v15 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v15 >= v32) {
      goto LABEL_33;
    }
    unint64_t v20 = *(void *)(v31 + 8 * v15);
    ++v21;
    if (v20) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_251A7B4A4()
{
  v1 = v0;
  uint64_t v2 = type metadata accessor for StaticAccessory(0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D2F8);
  uint64_t v7 = sub_251F363D0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  unint64_t v30 = v0;
  uint64_t v31 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v32 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = v7 + 56;
  uint64_t result = swift_retain();
  int64_t v15 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v18 = v17 | (v15 << 6);
      goto LABEL_24;
    }
    int64_t v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v19 >= v32) {
      goto LABEL_33;
    }
    unint64_t v20 = *(void *)(v31 + 8 * v19);
    ++v15;
    if (!v20)
    {
      int64_t v15 = v19 + 1;
      if (v19 + 1 >= v32) {
        goto LABEL_33;
      }
      unint64_t v20 = *(void *)(v31 + 8 * v15);
      if (!v20)
      {
        int64_t v15 = v19 + 2;
        if (v19 + 2 >= v32) {
          goto LABEL_33;
        }
        unint64_t v20 = *(void *)(v31 + 8 * v15);
        if (!v20) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v15 << 6);
LABEL_24:
    uint64_t v22 = *(void *)(v3 + 72);
    sub_251A81FF0(*(void *)(v6 + 48) + v22 * v18, (uint64_t)v5, type metadata accessor for StaticAccessory);
    sub_251F36CA0();
    StaticAccessory.hash(into:)(v33);
    uint64_t result = sub_251F36D00();
    uint64_t v23 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v13 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v24) & ~*(void *)(v13 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v28 = v25 == v27;
        if (v25 == v27) {
          unint64_t v25 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v13 + 8 * v25);
      }
      while (v29 == -1);
      unint64_t v16 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(void *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    uint64_t result = sub_251A82058((uint64_t)v5, *(void *)(v8 + 48) + v16 * v22, type metadata accessor for StaticAccessory);
    ++*(void *)(v8 + 16);
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v32)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    v1 = v30;
    goto LABEL_35;
  }
  unint64_t v20 = *(void *)(v31 + 8 * v21);
  if (v20)
  {
    int64_t v15 = v21;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v15 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v15 >= v32) {
      goto LABEL_33;
    }
    unint64_t v20 = *(void *)(v31 + 8 * v15);
    ++v21;
    if (v20) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_251A7B808()
{
  v1 = v0;
  uint64_t v2 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D210);
  uint64_t v7 = sub_251F363D0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_25:
    uint64_t *v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v23 = v0;
  uint64_t v24 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v25 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = v7 + 56;
  uint64_t result = swift_retain();
  int64_t v15 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v16 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v17 = v16 | (v15 << 6);
      goto LABEL_7;
    }
    int64_t v20 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v20 >= v25) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v24 + 8 * v20);
    ++v15;
    if (!v21)
    {
      int64_t v15 = v20 + 1;
      if (v20 + 1 >= v25) {
        goto LABEL_23;
      }
      unint64_t v21 = *(void *)(v24 + 8 * v15);
      if (!v21)
      {
        int64_t v15 = v20 + 2;
        if (v20 + 2 >= v25) {
          goto LABEL_23;
        }
        unint64_t v21 = *(void *)(v24 + 8 * v15);
        if (!v21) {
          break;
        }
      }
    }
LABEL_22:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v17 = __clz(__rbit64(v21)) + (v15 << 6);
LABEL_7:
    uint64_t v18 = *(void *)(v3 + 72);
    sub_251A81FF0(*(void *)(v6 + 48) + v18 * v17, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
    sub_251F36CA0();
    StaticAccessory.hash(into:)(v26);
    StaticService.hash(into:)(v26);
    StaticCharacteristic.hash(into:)((uint64_t)v26);
    sub_251F36D00();
    unint64_t v19 = sub_251F36290();
    *(void *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    uint64_t result = sub_251A82058((uint64_t)v5, *(void *)(v8 + 48) + v19 * v18, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
    ++*(void *)(v8 + 16);
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v25)
  {
LABEL_23:
    uint64_t result = swift_release_n();
    v1 = v23;
    goto LABEL_25;
  }
  unint64_t v21 = *(void *)(v24 + 8 * v22);
  if (v21)
  {
    int64_t v15 = v22;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v15 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v15 >= v25) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v24 + 8 * v15);
    ++v22;
    if (v21) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_251A7BB24()
{
  uint64_t v50 = type metadata accessor for StaticZone();
  uint64_t v49 = *(void *)(v50 - 8);
  MEMORY[0x270FA5388](v50);
  uint64_t v2 = (char *)&v42 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v42 = v0;
  uint64_t v3 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D280);
  uint64_t v4 = sub_251F363D0();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
    uint64_t result = swift_release();
LABEL_40:
    *unint64_t v42 = v5;
    return result;
  }
  uint64_t v6 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v7 = *(void *)(v3 + 56);
  uint64_t v43 = v3 + 56;
  if (v6 < 64) {
    uint64_t v8 = ~(-1 << v6);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & v7;
  int64_t v44 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v45 = v4 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  uint64_t v48 = v5;
  uint64_t v47 = v3;
  char v46 = v2;
  while (1)
  {
    if (v9)
    {
      uint64_t v54 = (v9 - 1) & v9;
      int64_t v52 = v11;
      unint64_t v13 = __clz(__rbit64(v9)) | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    if (v14 >= v44) {
      goto LABEL_38;
    }
    unint64_t v15 = *(void *)(v43 + 8 * v14);
    int64_t v16 = v11 + 1;
    if (!v15)
    {
      int64_t v16 = v11 + 2;
      if (v11 + 2 >= v44) {
        goto LABEL_38;
      }
      unint64_t v15 = *(void *)(v43 + 8 * v16);
      if (!v15)
      {
        int64_t v16 = v11 + 3;
        if (v11 + 3 >= v44) {
          goto LABEL_38;
        }
        unint64_t v15 = *(void *)(v43 + 8 * v16);
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    uint64_t v54 = (v15 - 1) & v15;
    int64_t v52 = v16;
    unint64_t v13 = __clz(__rbit64(v15)) + (v16 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(v3 + 48);
    uint64_t v51 = *(void *)(v49 + 72);
    sub_251A81FF0(v18 + v51 * v13, (uint64_t)v2, (uint64_t (*)(void))type metadata accessor for StaticZone);
    sub_251F36CA0();
    uint64_t v19 = sub_251F34DA0();
    uint64_t v61 = sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
    sub_251F35610();
    uint64_t v20 = v50;
    sub_251F357B0();
    uint64_t v21 = *(void *)&v2[*(int *)(v20 + 24)];
    uint64_t v22 = *(void *)(v21 + 16);
    sub_251F36CB0();
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    uint64_t v53 = &v42;
    MEMORY[0x270FA5388](v23 - 8);
    int64_t v25 = (char *)&v42 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v55 = *(void *)(v19 - 8);
    uint64_t v56 = v19 - 8;
    if (v22)
    {
      uint64_t v26 = v55;
      uint64_t v27 = v21 + ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80));
      BOOL v28 = *(void (**)(char *, uint64_t, uint64_t))(v55 + 16);
      uint64_t v59 = v55 + 16;
      int64_t v60 = v28;
      uint64_t v29 = (void (**)(char *, void, uint64_t, uint64_t))(v55 + 56);
      unint64_t v30 = (uint64_t (**)(char *, uint64_t, uint64_t))(v55 + 48);
      uint64_t v57 = v55 + 8;
      uint64_t v58 = v55 + 32;
      uint64_t v31 = *(void *)(v55 + 72);
      while (1)
      {
        v60(v25, v27, v19);
        (*v29)(v25, 0, 1, v19);
        uint64_t v32 = (*v30)(v25, 1, v19);
        if (v32 == 1) {
          break;
        }
        MEMORY[0x270FA5388](v32);
        uint64_t v34 = (char *)&v42 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v34, v25, v19);
        sub_251F35610();
        (*(void (**)(char *, uint64_t))(v26 + 8))(v34, v19);
        v27 += v31;
        if (!--v22) {
          goto LABEL_28;
        }
      }
    }
    else
    {
LABEL_28:
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v55 + 56))(v25, 1, 1, v19);
    }
    uint64_t result = sub_251F36D00();
    uint64_t v5 = v48;
    uint64_t v35 = -1 << *(unsigned char *)(v48 + 32);
    unint64_t v36 = result & ~v35;
    unint64_t v37 = v36 >> 6;
    if (((-1 << v36) & ~*(void *)(v45 + 8 * (v36 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v36) & ~*(void *)(v45 + 8 * (v36 >> 6)))) | v36 & 0x7FFFFFFFFFFFFFC0;
      uint64_t v3 = v47;
      uint64_t v2 = v46;
      unint64_t v9 = v54;
    }
    else
    {
      char v38 = 0;
      unint64_t v39 = (unint64_t)(63 - v35) >> 6;
      uint64_t v3 = v47;
      uint64_t v2 = v46;
      unint64_t v9 = v54;
      do
      {
        if (++v37 == v39 && (v38 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v40 = v37 == v39;
        if (v37 == v39) {
          unint64_t v37 = 0;
        }
        v38 |= v40;
        uint64_t v41 = *(void *)(v45 + 8 * v37);
      }
      while (v41 == -1);
      unint64_t v12 = __clz(__rbit64(~v41)) + (v37 << 6);
    }
    *(void *)(v45 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    uint64_t result = sub_251A82058((uint64_t)v2, *(void *)(v5 + 48) + v12 * v51, (uint64_t (*)(void))type metadata accessor for StaticZone);
    ++*(void *)(v5 + 16);
    int64_t v11 = v52;
  }
  uint64_t v17 = v11 + 4;
  if (v11 + 4 >= v44)
  {
LABEL_38:
    uint64_t result = swift_release_n();
    goto LABEL_40;
  }
  unint64_t v15 = *(void *)(v43 + 8 * v17);
  if (v15)
  {
    int64_t v16 = v11 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v16 >= v44) {
      goto LABEL_38;
    }
    unint64_t v15 = *(void *)(v43 + 8 * v16);
    ++v17;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_251A7C1A8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for StaticActionSet();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D2C8);
  uint64_t v7 = sub_251F363D0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  unint64_t v30 = v0;
  uint64_t v31 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v32 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = v7 + 56;
  uint64_t result = swift_retain();
  int64_t v15 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v18 = v17 | (v15 << 6);
      goto LABEL_24;
    }
    int64_t v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v19 >= v32) {
      goto LABEL_33;
    }
    unint64_t v20 = *(void *)(v31 + 8 * v19);
    ++v15;
    if (!v20)
    {
      int64_t v15 = v19 + 1;
      if (v19 + 1 >= v32) {
        goto LABEL_33;
      }
      unint64_t v20 = *(void *)(v31 + 8 * v15);
      if (!v20)
      {
        int64_t v15 = v19 + 2;
        if (v19 + 2 >= v32) {
          goto LABEL_33;
        }
        unint64_t v20 = *(void *)(v31 + 8 * v15);
        if (!v20) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v15 << 6);
LABEL_24:
    uint64_t v22 = *(void *)(v3 + 72);
    sub_251A81FF0(*(void *)(v6 + 48) + v22 * v18, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
    sub_251F36CA0();
    StaticActionSet.hash(into:)(v33);
    uint64_t result = sub_251F36D00();
    uint64_t v23 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v13 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v24) & ~*(void *)(v13 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v28 = v25 == v27;
        if (v25 == v27) {
          unint64_t v25 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v13 + 8 * v25);
      }
      while (v29 == -1);
      unint64_t v16 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(void *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    uint64_t result = sub_251A82058((uint64_t)v5, *(void *)(v8 + 48) + v16 * v22, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
    ++*(void *)(v8 + 16);
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v32)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v30;
    goto LABEL_35;
  }
  unint64_t v20 = *(void *)(v31 + 8 * v21);
  if (v20)
  {
    int64_t v15 = v21;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v15 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v15 >= v32) {
      goto LABEL_33;
    }
    unint64_t v20 = *(void *)(v31 + 8 * v15);
    ++v21;
    if (v20) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_251A7C50C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for StaticCameraProfile();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D2C0);
  uint64_t v7 = sub_251F363D0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  unint64_t v30 = v0;
  uint64_t v31 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v32 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = v7 + 56;
  uint64_t result = swift_retain();
  int64_t v15 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v18 = v17 | (v15 << 6);
      goto LABEL_24;
    }
    int64_t v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v19 >= v32) {
      goto LABEL_33;
    }
    unint64_t v20 = *(void *)(v31 + 8 * v19);
    ++v15;
    if (!v20)
    {
      int64_t v15 = v19 + 1;
      if (v19 + 1 >= v32) {
        goto LABEL_33;
      }
      unint64_t v20 = *(void *)(v31 + 8 * v15);
      if (!v20)
      {
        int64_t v15 = v19 + 2;
        if (v19 + 2 >= v32) {
          goto LABEL_33;
        }
        unint64_t v20 = *(void *)(v31 + 8 * v15);
        if (!v20) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v15 << 6);
LABEL_24:
    uint64_t v22 = *(void *)(v3 + 72);
    sub_251A81FF0(*(void *)(v6 + 48) + v22 * v18, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
    sub_251F36CA0();
    StaticCameraProfile.hash(into:)(v33);
    uint64_t result = sub_251F36D00();
    uint64_t v23 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v13 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v24) & ~*(void *)(v13 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v28 = v25 == v27;
        if (v25 == v27) {
          unint64_t v25 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v13 + 8 * v25);
      }
      while (v29 == -1);
      unint64_t v16 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(void *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    uint64_t result = sub_251A82058((uint64_t)v5, *(void *)(v8 + 48) + v16 * v22, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
    ++*(void *)(v8 + 16);
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v32)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v30;
    goto LABEL_35;
  }
  unint64_t v20 = *(void *)(v31 + 8 * v21);
  if (v20)
  {
    int64_t v15 = v21;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v15 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v15 >= v32) {
      goto LABEL_33;
    }
    unint64_t v20 = *(void *)(v31 + 8 * v15);
    ++v21;
    if (v20) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_251A7C870()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for StaticRoom(0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D290);
  uint64_t v7 = sub_251F363D0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  unint64_t v30 = v0;
  uint64_t v31 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v32 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = v7 + 56;
  uint64_t result = swift_retain();
  int64_t v15 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v18 = v17 | (v15 << 6);
      goto LABEL_24;
    }
    int64_t v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v19 >= v32) {
      goto LABEL_33;
    }
    unint64_t v20 = *(void *)(v31 + 8 * v19);
    ++v15;
    if (!v20)
    {
      int64_t v15 = v19 + 1;
      if (v19 + 1 >= v32) {
        goto LABEL_33;
      }
      unint64_t v20 = *(void *)(v31 + 8 * v15);
      if (!v20)
      {
        int64_t v15 = v19 + 2;
        if (v19 + 2 >= v32) {
          goto LABEL_33;
        }
        unint64_t v20 = *(void *)(v31 + 8 * v15);
        if (!v20) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v15 << 6);
LABEL_24:
    uint64_t v22 = *(void *)(v3 + 72);
    sub_251A81FF0(*(void *)(v6 + 48) + v22 * v18, (uint64_t)v5, type metadata accessor for StaticRoom);
    sub_251F36CA0();
    StaticRoom.hash(into:)(v33);
    uint64_t result = sub_251F36D00();
    uint64_t v23 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v13 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v24) & ~*(void *)(v13 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v28 = v25 == v27;
        if (v25 == v27) {
          unint64_t v25 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v13 + 8 * v25);
      }
      while (v29 == -1);
      unint64_t v16 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(void *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    uint64_t result = sub_251A82058((uint64_t)v5, *(void *)(v8 + 48) + v16 * v22, type metadata accessor for StaticRoom);
    ++*(void *)(v8 + 16);
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v32)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v30;
    goto LABEL_35;
  }
  unint64_t v20 = *(void *)(v31 + 8 * v21);
  if (v20)
  {
    int64_t v15 = v21;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v15 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v15 >= v32) {
      goto LABEL_33;
    }
    unint64_t v20 = *(void *)(v31 + 8 * v15);
    ++v21;
    if (v20) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_251A7CBD4()
{
  uint64_t v1 = v0;
  uint64_t v2 = (int *)type metadata accessor for StaticServiceGroup();
  uint64_t v35 = *((void *)v2 - 1);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D2A8);
  uint64_t v6 = sub_251F363D0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = swift_release();
LABEL_38:
    uint64_t *v1 = v7;
    return result;
  }
  uint64_t v31 = v0;
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v9 = *(void *)(v5 + 56);
  uint64_t v33 = v5 + 56;
  if (v8 < 64) {
    uint64_t v10 = ~(-1 << v8);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & v9;
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 56;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  int64_t v32 = v4;
  while (1)
  {
    if (v11)
    {
      unint64_t v16 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_24;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v18 >= v34) {
      goto LABEL_36;
    }
    unint64_t v19 = *(void *)(v33 + 8 * v18);
    ++v14;
    if (!v19)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v34) {
        goto LABEL_36;
      }
      unint64_t v19 = *(void *)(v33 + 8 * v14);
      if (!v19)
      {
        int64_t v14 = v18 + 2;
        if (v18 + 2 >= v34) {
          goto LABEL_36;
        }
        unint64_t v19 = *(void *)(v33 + 8 * v14);
        if (!v19) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v11 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_24:
    uint64_t v21 = *(void *)(v35 + 72);
    sub_251A81FF0(*(void *)(v5 + 48) + v21 * v17, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
    sub_251F36CA0();
    sub_251F34DA0();
    sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
    sub_251F35610();
    swift_bridgeObjectRetain();
    sub_251F357B0();
    swift_bridgeObjectRelease();
    sub_251F36CC0();
    sub_251F36CB0();
    uint64_t v22 = *(void *)&v4[v2[8]];
    swift_bridgeObjectRetain();
    sub_251A54708(v36, v22);
    swift_bridgeObjectRelease();
    if (*(void *)&v4[v2[9] + 8])
    {
      sub_251F36CC0();
      swift_bridgeObjectRetain();
      uint64_t v4 = v32;
      sub_251F357B0();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_251F36CC0();
    }
    sub_251F36CC0();
    uint64_t v23 = *(void *)&v4[v2[11]];
    swift_bridgeObjectRetain();
    sub_251A454AC((uint64_t)v36, v23);
    swift_bridgeObjectRelease();
    uint64_t result = sub_251F36D00();
    uint64_t v24 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v25 = result & ~v24;
    unint64_t v26 = v25 >> 6;
    if (((-1 << v25) & ~*(void *)(v12 + 8 * (v25 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v25) & ~*(void *)(v12 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v29 = v26 == v28;
        if (v26 == v28) {
          unint64_t v26 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v12 + 8 * v26);
      }
      while (v30 == -1);
      unint64_t v15 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t result = sub_251A82058((uint64_t)v4, *(void *)(v7 + 48) + v15 * v21, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
    ++*(void *)(v7 + 16);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v34)
  {
LABEL_36:
    uint64_t result = swift_release_n();
    uint64_t v1 = v31;
    goto LABEL_38;
  }
  unint64_t v19 = *(void *)(v33 + 8 * v20);
  if (v19)
  {
    int64_t v14 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v14 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v14 >= v34) {
      goto LABEL_36;
    }
    unint64_t v19 = *(void *)(v33 + 8 * v14);
    ++v20;
    if (v19) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_251A7D098()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for StaticUser();
  uint64_t v34 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D2A0);
  uint64_t v6 = sub_251F363D0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v7;
    return result;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v9 = *(void *)(v5 + 56);
  uint64_t v30 = v0;
  uint64_t v31 = v5 + 56;
  if (v8 < 64) {
    uint64_t v10 = ~(-1 << v8);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & v9;
  int64_t v32 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 56;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  for (i = v5; ; uint64_t v5 = i)
  {
    if (v11)
    {
      unint64_t v16 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_24;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v18 >= v32) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v31 + 8 * v18);
    ++v14;
    if (!v19)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v32) {
        goto LABEL_33;
      }
      unint64_t v19 = *(void *)(v31 + 8 * v14);
      if (!v19)
      {
        int64_t v14 = v18 + 2;
        if (v18 + 2 >= v32) {
          goto LABEL_33;
        }
        unint64_t v19 = *(void *)(v31 + 8 * v14);
        if (!v19) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v11 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_24:
    uint64_t v21 = *(void *)(v5 + 48);
    uint64_t v22 = *(void *)(v34 + 72);
    sub_251A81FF0(v21 + v22 * v17, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StaticUser);
    sub_251F36CA0();
    sub_251F34DA0();
    sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
    sub_251F35610();
    sub_251F357B0();
    sub_251F35610();
    sub_251F36CB0();
    sub_251F36CB0();
    uint64_t result = sub_251F36D00();
    uint64_t v23 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v12 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v24) & ~*(void *)(v12 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v28 = v25 == v27;
        if (v25 == v27) {
          unint64_t v25 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v25);
      }
      while (v29 == -1);
      unint64_t v15 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t result = sub_251A82058((uint64_t)v4, *(void *)(v7 + 48) + v15 * v22, (uint64_t (*)(void))type metadata accessor for StaticUser);
    ++*(void *)(v7 + 16);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v32)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v30;
    goto LABEL_35;
  }
  unint64_t v19 = *(void *)(v31 + 8 * v20);
  if (v19)
  {
    int64_t v14 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v14 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v14 >= v32) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v31 + 8 * v14);
    ++v20;
    if (v19) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_251A7D484()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for StaticResident();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D298);
  uint64_t v7 = sub_251F363D0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v30 = v0;
  uint64_t v31 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v32 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = v7 + 56;
  uint64_t result = swift_retain();
  int64_t v15 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v18 = v17 | (v15 << 6);
      goto LABEL_24;
    }
    int64_t v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v19 >= v32) {
      goto LABEL_33;
    }
    unint64_t v20 = *(void *)(v31 + 8 * v19);
    ++v15;
    if (!v20)
    {
      int64_t v15 = v19 + 1;
      if (v19 + 1 >= v32) {
        goto LABEL_33;
      }
      unint64_t v20 = *(void *)(v31 + 8 * v15);
      if (!v20)
      {
        int64_t v15 = v19 + 2;
        if (v19 + 2 >= v32) {
          goto LABEL_33;
        }
        unint64_t v20 = *(void *)(v31 + 8 * v15);
        if (!v20) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v15 << 6);
LABEL_24:
    uint64_t v22 = *(void *)(v3 + 72);
    sub_251A81FF0(*(void *)(v6 + 48) + v22 * v18, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticResident);
    sub_251F36CA0();
    StaticResident.hash(into:)((uint64_t)v33);
    uint64_t result = sub_251F36D00();
    uint64_t v23 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v13 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v24) & ~*(void *)(v13 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v28 = v25 == v27;
        if (v25 == v27) {
          unint64_t v25 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v13 + 8 * v25);
      }
      while (v29 == -1);
      unint64_t v16 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(void *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    uint64_t result = sub_251A82058((uint64_t)v5, *(void *)(v8 + 48) + v16 * v22, (uint64_t (*)(void))type metadata accessor for StaticResident);
    ++*(void *)(v8 + 16);
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v32)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v30;
    goto LABEL_35;
  }
  unint64_t v20 = *(void *)(v31 + 8 * v21);
  if (v20)
  {
    int64_t v15 = v21;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v15 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v15 >= v32) {
      goto LABEL_33;
    }
    unint64_t v20 = *(void *)(v31 + 8 * v15);
    ++v21;
    if (v20) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_251A7D7E8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t result = sub_251F363D0();
  uint64_t v6 = result;
  if (!*(void *)(v4 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v3 = v6;
    return result;
  }
  int64_t v7 = 0;
  uint64_t v8 = v4 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(v4 + 32);
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v4 + 56);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = result + 56;
  while (1)
  {
    if (v11)
    {
      unint64_t v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v16 = v15 | (v7 << 6);
      goto LABEL_24;
    }
    int64_t v17 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v17 >= v12) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v8 + 8 * v17);
    ++v7;
    if (!v18)
    {
      int64_t v7 = v17 + 1;
      if (v17 + 1 >= v12) {
        goto LABEL_33;
      }
      unint64_t v18 = *(void *)(v8 + 8 * v7);
      if (!v18)
      {
        int64_t v7 = v17 + 2;
        if (v17 + 2 >= v12) {
          goto LABEL_33;
        }
        unint64_t v18 = *(void *)(v8 + 8 * v7);
        if (!v18) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v11 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v7 << 6);
LABEL_24:
    char v20 = *(unsigned char *)(*(void *)(v4 + 48) + v16);
    sub_251F36CA0();
    sub_251F36CB0();
    uint64_t result = sub_251F36D00();
    uint64_t v21 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v13 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v14 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(unsigned char *)(*(void *)(v6 + 48) + v14) = v20;
    ++*(void *)(v6 + 16);
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v12)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v3 = v2;
    goto LABEL_35;
  }
  unint64_t v18 = *(void *)(v8 + 8 * v19);
  if (v18)
  {
    int64_t v7 = v19;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v7 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v7 >= v12) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v8 + 8 * v7);
    ++v19;
    if (v18) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_251A7DA60(uint64_t a1, uint64_t (*a2)(void), uint64_t *a3, uint64_t (*a4)(void), uint64_t (*a5)(char *, uint64_t))
{
  uint64_t v9 = v5;
  uint64_t v10 = a2(0);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (char *)&v28 - v12;
  uint64_t v14 = *v5;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v15 = sub_251F363D0();
  if (!*(void *)(v14 + 16))
  {
    uint64_t result = swift_release();
LABEL_24:
    *uint64_t v9 = v15;
    return result;
  }
  uint64_t v29 = v9;
  uint64_t v16 = 1 << *(unsigned char *)(v14 + 32);
  uint64_t v17 = v14 + 56;
  uint64_t v18 = -1;
  if (v16 < 64) {
    uint64_t v18 = ~(-1 << v16);
  }
  unint64_t v19 = v18 & *(void *)(v14 + 56);
  int64_t v20 = (unint64_t)(v16 + 63) >> 6;
  uint64_t result = swift_retain();
  int64_t v22 = 0;
  while (1)
  {
    if (v19)
    {
      unint64_t v23 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      unint64_t v24 = v23 | (v22 << 6);
      goto LABEL_6;
    }
    int64_t v25 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v25 >= v20) {
      goto LABEL_22;
    }
    unint64_t v26 = *(void *)(v17 + 8 * v25);
    ++v22;
    if (!v26)
    {
      int64_t v22 = v25 + 1;
      if (v25 + 1 >= v20) {
        goto LABEL_22;
      }
      unint64_t v26 = *(void *)(v17 + 8 * v22);
      if (!v26)
      {
        int64_t v22 = v25 + 2;
        if (v25 + 2 >= v20) {
          goto LABEL_22;
        }
        unint64_t v26 = *(void *)(v17 + 8 * v22);
        if (!v26) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v19 = (v26 - 1) & v26;
    unint64_t v24 = __clz(__rbit64(v26)) + (v22 << 6);
LABEL_6:
    sub_251A81FF0(*(void *)(v14 + 48) + *(void *)(v11 + 72) * v24, (uint64_t)v13, a4);
    uint64_t result = a5(v13, v15);
  }
  int64_t v27 = v25 + 3;
  if (v27 >= v20)
  {
LABEL_22:
    uint64_t result = swift_release_n();
    uint64_t v9 = v29;
    goto LABEL_24;
  }
  unint64_t v26 = *(void *)(v17 + 8 * v27);
  if (v26)
  {
    int64_t v22 = v27;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v22 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v22 >= v20) {
      goto LABEL_22;
    }
    unint64_t v26 = *(void *)(v17 + 8 * v22);
    ++v27;
    if (v26) {
      goto LABEL_21;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_251A7DCA4(uint64_t a1, uint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t v5 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v7 = sub_251F363D0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v5 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & *(void *)(v6 + 56);
  int64_t v31 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = v7 + 56;
  uint64_t result = swift_retain();
  int64_t v15 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v18 = v17 | (v15 << 6);
      goto LABEL_24;
    }
    int64_t v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v19 >= v31) {
      goto LABEL_33;
    }
    unint64_t v20 = *(void *)(v10 + 8 * v19);
    ++v15;
    if (!v20)
    {
      int64_t v15 = v19 + 1;
      if (v19 + 1 >= v31) {
        goto LABEL_33;
      }
      unint64_t v20 = *(void *)(v10 + 8 * v15);
      if (!v20)
      {
        int64_t v15 = v19 + 2;
        if (v19 + 2 >= v31) {
          goto LABEL_33;
        }
        unint64_t v20 = *(void *)(v10 + 8 * v15);
        if (!v20) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v15 << 6);
LABEL_24:
    char v22 = *(unsigned char *)(*(void *)(v6 + 48) + v18);
    uint64_t v23 = sub_251F36CA0();
    a3(v23);
    sub_251F357B0();
    swift_bridgeObjectRelease();
    uint64_t result = sub_251F36D00();
    uint64_t v24 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v25 = result & ~v24;
    unint64_t v26 = v25 >> 6;
    if (((-1 << v25) & ~*(void *)(v13 + 8 * (v25 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v25) & ~*(void *)(v13 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v29 = v26 == v28;
        if (v26 == v28) {
          unint64_t v26 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v13 + 8 * v26);
      }
      while (v30 == -1);
      unint64_t v16 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(void *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    *(unsigned char *)(*(void *)(v8 + 48) + v16) = v22;
    ++*(void *)(v8 + 16);
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v31)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v5 = v3;
    goto LABEL_35;
  }
  unint64_t v20 = *(void *)(v10 + 8 * v21);
  if (v20)
  {
    int64_t v15 = v21;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v15 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v15 >= v31) {
      goto LABEL_33;
    }
    unint64_t v20 = *(void *)(v10 + 8 * v15);
    ++v21;
    if (v20) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_251A7DF64()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ActionService();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D208);
  uint64_t v7 = sub_251F363D0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v30 = v0;
  uint64_t v31 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v32 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = v7 + 56;
  uint64_t result = swift_retain();
  int64_t v15 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v18 = v17 | (v15 << 6);
      goto LABEL_24;
    }
    int64_t v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v19 >= v32) {
      goto LABEL_33;
    }
    unint64_t v20 = *(void *)(v31 + 8 * v19);
    ++v15;
    if (!v20)
    {
      int64_t v15 = v19 + 1;
      if (v19 + 1 >= v32) {
        goto LABEL_33;
      }
      unint64_t v20 = *(void *)(v31 + 8 * v15);
      if (!v20)
      {
        int64_t v15 = v19 + 2;
        if (v19 + 2 >= v32) {
          goto LABEL_33;
        }
        unint64_t v20 = *(void *)(v31 + 8 * v15);
        if (!v20) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v15 << 6);
LABEL_24:
    uint64_t v22 = *(void *)(v3 + 72);
    sub_251A81FF0(*(void *)(v6 + 48) + v22 * v18, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ActionService);
    sub_251F36CA0();
    ActionService.hash(into:)(v33);
    uint64_t result = sub_251F36D00();
    uint64_t v23 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v13 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v24) & ~*(void *)(v13 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v28 = v25 == v27;
        if (v25 == v27) {
          unint64_t v25 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v13 + 8 * v25);
      }
      while (v29 == -1);
      unint64_t v16 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(void *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    uint64_t result = sub_251A82058((uint64_t)v5, *(void *)(v8 + 48) + v16 * v22, (uint64_t (*)(void))type metadata accessor for ActionService);
    ++*(void *)(v8 + 16);
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v32)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v30;
    goto LABEL_35;
  }
  unint64_t v20 = *(void *)(v31 + 8 * v21);
  if (v20)
  {
    int64_t v15 = v21;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v15 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v15 >= v32) {
      goto LABEL_33;
    }
    unint64_t v20 = *(void *)(v31 + 8 * v15);
    ++v21;
    if (v20) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_251A7E2C8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v5 = sub_251F363D0();
  uint64_t v6 = v5;
  if (!*(void *)(v4 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v3 = v6;
    return result;
  }
  uint64_t v29 = v2;
  uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v8 = v4 + 56;
  if (v7 < 64) {
    uint64_t v9 = ~(-1 << v7);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v4 + 56);
  int64_t v11 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v12 = v5 + 56;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_24;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v18 >= v11) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v8 + 8 * v18);
    ++v14;
    if (!v19)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v19 = *(void *)(v8 + 8 * v14);
      if (!v19)
      {
        int64_t v14 = v18 + 2;
        if (v18 + 2 >= v11) {
          goto LABEL_33;
        }
        unint64_t v19 = *(void *)(v8 + 8 * v14);
        if (!v19) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_24:
    id v21 = *(id *)(*(void *)(v4 + 48) + 8 * v17);
    uint64_t result = sub_251F36110();
    uint64_t v22 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(void *)(*(void *)(v6 + 48) + 8 * v15) = v21;
    ++*(void *)(v6 + 16);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v11)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v3 = v29;
    goto LABEL_35;
  }
  unint64_t v19 = *(void *)(v8 + 8 * v20);
  if (v19)
  {
    int64_t v14 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v14 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v14 >= v11) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v8 + 8 * v14);
    ++v20;
    if (v19) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_251A7E540()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D1F8);
  uint64_t v3 = sub_251F363D0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    unint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_251F36CA0();
    swift_bridgeObjectRetain();
    sub_251F357B0();
    uint64_t result = sub_251F36D00();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    uint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *uint64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_251A7E7F0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D218);
  uint64_t result = sub_251F363D0();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  unint64_t v26 = v1;
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    uint64_t result = sub_251F36C90();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v26;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_251A7EA54()
{
  uint64_t v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D278);
  uint64_t v2 = sub_251F363D0();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_35;
  }
  uint64_t v4 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v5 = v1 + 56;
  if (v4 < 64) {
    uint64_t v6 = ~(-1 << v4);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v1 + 56);
  int64_t v26 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v8 = v2 + 56;
  swift_retain();
  int64_t v9 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v12 = v11 | (v9 << 6);
      goto LABEL_24;
    }
    int64_t v13 = v9 + 1;
    if (__OFADD__(v9, 1)) {
      goto LABEL_36;
    }
    if (v13 >= v26) {
      break;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v13);
    ++v9;
    if (!v14)
    {
      int64_t v9 = v13 + 1;
      if (v13 + 1 >= v26) {
        break;
      }
      unint64_t v14 = *(void *)(v5 + 8 * v9);
      if (!v14)
      {
        int64_t v9 = v13 + 2;
        if (v13 + 2 >= v26) {
          break;
        }
        unint64_t v14 = *(void *)(v5 + 8 * v9);
        if (!v14)
        {
          int64_t v15 = v13 + 3;
          if (v15 >= v26) {
            break;
          }
          unint64_t v14 = *(void *)(v5 + 8 * v15);
          if (!v14)
          {
            while (1)
            {
              int64_t v9 = v15 + 1;
              if (__OFADD__(v15, 1)) {
                goto LABEL_37;
              }
              if (v9 >= v26) {
                goto LABEL_33;
              }
              unint64_t v14 = *(void *)(v5 + 8 * v9);
              ++v15;
              if (v14) {
                goto LABEL_23;
              }
            }
          }
          int64_t v9 = v15;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v9 << 6);
LABEL_24:
    char v16 = *(unsigned char *)(*(void *)(v1 + 48) + v12);
    sub_251F36CA0();
    sub_251F357B0();
    swift_bridgeObjectRelease();
    uint64_t v17 = sub_251F36D00();
    uint64_t v18 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v19 = v17 & ~v18;
    unint64_t v20 = v19 >> 6;
    if (((-1 << v19) & ~*(void *)(v8 + 8 * (v19 >> 6))) != 0)
    {
      unint64_t v10 = __clz(__rbit64((-1 << v19) & ~*(void *)(v8 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_7;
    }
    char v21 = 0;
    unint64_t v22 = (unint64_t)(63 - v18) >> 6;
    do
    {
      if (++v20 == v22 && (v21 & 1) != 0)
      {
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
        JUMPOUT(0x251A7EDD4);
      }
      BOOL v23 = v20 == v22;
      if (v20 == v22) {
        unint64_t v20 = 0;
      }
      v21 |= v23;
      uint64_t v24 = *(void *)(v8 + 8 * v20);
    }
    while (v24 == -1);
    unint64_t v10 = __clz(__rbit64(~v24)) + (v20 << 6);
LABEL_7:
    *(void *)(v8 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
    *(unsigned char *)(*(void *)(v3 + 48) + v10) = v16;
    ++*(void *)(v3 + 16);
  }
LABEL_33:
  uint64_t result = swift_release_n();
LABEL_35:
  uint64_t *v0 = v3;
  return result;
}

uint64_t sub_251A7EDF4()
{
  uint64_t v1 = v0;
  uint64_t v2 = _s7MergeIdVMa();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  unint64_t v42 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D220);
  uint64_t v6 = sub_251F363D0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = swift_release();
LABEL_38:
    uint64_t *v1 = v7;
    return result;
  }
  BOOL v40 = v0;
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v9 = *(void *)(v5 + 56);
  uint64_t v43 = v5 + 56;
  if (v8 < 64) {
    uint64_t v10 = ~(-1 << v8);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & v9;
  int64_t v44 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 56;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  uint64_t v15 = (uint64_t)v42;
  uint64_t v41 = v3;
  while (1)
  {
    if (v11)
    {
      int64_t v46 = v14;
      uint64_t v47 = (v11 - 1) & v11;
      unint64_t v17 = __clz(__rbit64(v11)) | (v14 << 6);
      goto LABEL_24;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v18 >= v44) {
      goto LABEL_36;
    }
    unint64_t v19 = *(void *)(v43 + 8 * v18);
    int64_t v20 = v14 + 1;
    if (!v19)
    {
      int64_t v20 = v14 + 2;
      if (v14 + 2 >= v44) {
        goto LABEL_36;
      }
      unint64_t v19 = *(void *)(v43 + 8 * v20);
      if (!v19)
      {
        int64_t v20 = v14 + 3;
        if (v14 + 3 >= v44) {
          goto LABEL_36;
        }
        unint64_t v19 = *(void *)(v43 + 8 * v20);
        if (!v19) {
          break;
        }
      }
    }
LABEL_23:
    int64_t v46 = v20;
    uint64_t v47 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v20 << 6);
LABEL_24:
    uint64_t v22 = *(void *)(v5 + 48);
    uint64_t v45 = *(void *)(v3 + 72);
    sub_251A81FF0(v22 + v45 * v17, v15, (uint64_t (*)(void))_s7MergeIdVMa);
    sub_251F36CA0();
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    MEMORY[0x270FA5388](v23 - 8);
    uint64_t v25 = (char *)&v39 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_251A1E280(v15, (uint64_t)v25);
    uint64_t v26 = sub_251F34DA0();
    uint64_t v27 = *(void *)(v26 - 8);
    uint64_t v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26);
    if (v28 == 1)
    {
      sub_251F36CC0();
    }
    else
    {
      MEMORY[0x270FA5388](v28);
      uint64_t v30 = (char *)&v39 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v30, v25, v26);
      sub_251F36CC0();
      sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
      sub_251F35610();
      uint64_t v31 = v30;
      uint64_t v15 = (uint64_t)v42;
      (*(void (**)(char *, uint64_t))(v27 + 8))(v31, v26);
      uint64_t v3 = v41;
    }
    unint64_t v11 = v47;
    sub_251F357B0();
    uint64_t result = sub_251F36D00();
    uint64_t v32 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v33 = result & ~v32;
    unint64_t v34 = v33 >> 6;
    if (((-1 << v33) & ~*(void *)(v12 + 8 * (v33 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v33) & ~*(void *)(v12 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v35 = 0;
      unint64_t v36 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (++v34 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v37 = v34 == v36;
        if (v34 == v36) {
          unint64_t v34 = 0;
        }
        v35 |= v37;
        uint64_t v38 = *(void *)(v12 + 8 * v34);
      }
      while (v38 == -1);
      unint64_t v16 = __clz(__rbit64(~v38)) + (v34 << 6);
    }
    *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    uint64_t result = sub_251A82058(v15, *(void *)(v7 + 48) + v16 * v45, (uint64_t (*)(void))_s7MergeIdVMa);
    ++*(void *)(v7 + 16);
    int64_t v14 = v46;
  }
  uint64_t v21 = v14 + 4;
  if (v14 + 4 >= v44)
  {
LABEL_36:
    uint64_t result = swift_release_n();
    uint64_t v1 = v40;
    goto LABEL_38;
  }
  unint64_t v19 = *(void *)(v43 + 8 * v21);
  if (v19)
  {
    int64_t v20 = v14 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v20 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v20 >= v44) {
      goto LABEL_36;
    }
    unint64_t v19 = *(void *)(v43 + 8 * v20);
    ++v21;
    if (v19) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_251A7F320(uint64_t result, uint64_t a2)
{
  if (*(void *)(result + 16) < *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v4 = result;
  int64_t v5 = 0;
  uint64_t v23 = a2 + 56;
  uint64_t v6 = -1 << *(unsigned char *)(a2 + 32);
  if (-v6 < 64) {
    uint64_t v7 = ~(-1 << -(char)v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(a2 + 56);
  int64_t v22 = (unint64_t)(63 - v6) >> 6;
  uint64_t v9 = result + 56;
LABEL_7:
  while (1)
  {
    int64_t v10 = v5;
    if (!v8) {
      break;
    }
    unint64_t v11 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v12 = v11 | (v5 << 6);
    if (!*(void *)(v4 + 16)) {
      goto LABEL_29;
    }
LABEL_23:
    uint64_t v16 = *(char *)(*(void *)(a2 + 48) + v12);
    sub_251F36CA0();
    int v17 = dword_251F3AE18[v16];
    sub_251F36CE0();
    uint64_t result = sub_251F36D00();
    uint64_t v18 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v19 = result & ~v18;
    if (((*(void *)(v9 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
      goto LABEL_29;
    }
    uint64_t v20 = *(void *)(v4 + 48);
    if (dword_251F3AE18[*(char *)(v20 + v19)] != v17)
    {
      uint64_t v21 = ~v18;
      while (1)
      {
        unint64_t v19 = (v19 + 1) & v21;
        if (((*(void *)(v9 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
          break;
        }
        if (dword_251F3AE18[*(char *)(v20 + v19)] == v17) {
          goto LABEL_7;
        }
      }
LABEL_29:
      swift_bridgeObjectRetain();
      uint64_t v2 = 0;
LABEL_30:
      sub_251A1E630();
      return v2;
    }
  }
  int64_t v13 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    goto LABEL_34;
  }
  if (v13 >= v22) {
    goto LABEL_32;
  }
  unint64_t v14 = *(void *)(v23 + 8 * v13);
  ++v5;
  if (v14) {
    goto LABEL_22;
  }
  int64_t v5 = v10 + 2;
  if (v10 + 2 >= v22) {
    goto LABEL_32;
  }
  unint64_t v14 = *(void *)(v23 + 8 * v5);
  if (v14) {
    goto LABEL_22;
  }
  int64_t v5 = v10 + 3;
  if (v10 + 3 >= v22) {
    goto LABEL_32;
  }
  unint64_t v14 = *(void *)(v23 + 8 * v5);
  if (v14) {
    goto LABEL_22;
  }
  int64_t v15 = v10 + 4;
  if (v10 + 4 >= v22)
  {
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v2 = 1;
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v23 + 8 * v15);
  int64_t v5 = v10 + 4;
  if (v14)
  {
LABEL_22:
    unint64_t v8 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v5 << 6);
    if (!*(void *)(v4 + 16)) {
      goto LABEL_29;
    }
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v5 >= v22) {
      goto LABEL_32;
    }
    unint64_t v14 = *(void *)(v23 + 8 * v5);
    ++v15;
    if (v14) {
      goto LABEL_22;
    }
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_251A7F5A0(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16) < *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v30 = a2 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  if (-v5 < 64) {
    uint64_t v6 = ~(-1 << -(char)v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(a2 + 56);
  int64_t v27 = (unint64_t)(63 - v5) >> 6;
  uint64_t v8 = a1 + 56;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  if (!v7) {
    goto LABEL_9;
  }
  while (2)
  {
    uint64_t v11 = (v7 - 1) & v7;
    unint64_t v12 = __clz(__rbit64(v7)) | (v10 << 6);
    int64_t v13 = v10;
    if (!*(void *)(a1 + 16)) {
      goto LABEL_54;
    }
LABEL_23:
    uint64_t v17 = *(void *)(*(void *)(a2 + 48) + 8 * v12);
    sub_251F36CA0();
    int64_t v29 = v13;
    unint64_t v28 = v11;
    if (v17 == 2 || v17 == 1)
    {
      sub_251F36CB0();
    }
    else
    {
      sub_251F36CB0();
      sub_251F36CC0();
      if (v17)
      {
        swift_bridgeObjectRetain_n();
        sub_251A54708(v31, v17);
        sub_251A58144(v17);
      }
    }
    uint64_t v18 = sub_251F36D00();
    uint64_t v19 = -1 << *(unsigned char *)(a1 + 32);
    unint64_t v20 = v18 & ~v19;
    if (((*(void *)(v8 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
    {
LABEL_51:
      sub_251A58144(v17);
      uint64_t v2 = 0;
      goto LABEL_52;
    }
    uint64_t v21 = ~v19;
    while (1)
    {
      uint64_t v22 = *(void *)(a1 + 48);
      uint64_t v23 = *(void *)(v22 + 8 * v20);
      uint64_t v24 = v17;
      if (v23 == 2) {
        break;
      }
      if (v23 == 1)
      {
        if (v17 == 1) {
          goto LABEL_48;
        }
        goto LABEL_37;
      }
      if ((unint64_t)(v17 - 1) < 2) {
        goto LABEL_37;
      }
      if (!v23)
      {
        sub_251A81FDC(v17);
        sub_251A81FDC(0);
        sub_251A81FDC(v17);
        sub_251A81FDC(0);
        sub_251A58144(0);
        sub_251A58144(v17);
        sub_251A58144(0);
        uint64_t v26 = 0;
        uint64_t v24 = 0;
        uint64_t v23 = v17;
        if (!v17) {
          goto LABEL_49;
        }
        goto LABEL_38;
      }
      if (!v17)
      {
        uint64_t v24 = 0;
        goto LABEL_37;
      }
      sub_251A81FDC(*(void *)(v22 + 8 * v20));
      sub_251A81FDC(v23);
      sub_251A81FDC(v17);
      sub_251A81FDC(v23);
      sub_251A81FDC(v17);
      sub_251A81FDC(v23);
      char v25 = sub_251B04848(v23, v17);
      sub_251A58144(v23);
      sub_251A58144(v17);
      sub_251A58144(v17);
      sub_251A58144(v23);
      sub_251A58144(v23);
      swift_bridgeObjectRelease();
      if (v25)
      {
        uint64_t v26 = v17;
        goto LABEL_49;
      }
LABEL_39:
      unint64_t v20 = (v20 + 1) & v21;
      if (((*(void *)(v8 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
        goto LABEL_51;
      }
    }
    if (v17 != 2)
    {
LABEL_37:
      sub_251A81FDC(v24);
      sub_251A81FDC(v23);
LABEL_38:
      sub_251A58144(v23);
      sub_251A58144(v24);
      goto LABEL_39;
    }
LABEL_48:
    sub_251A58144(*(void *)(v22 + 8 * v20));
    uint64_t v26 = v23;
LABEL_49:
    uint64_t result = sub_251A58144(v26);
    unint64_t v7 = v28;
    int64_t v10 = v29;
    if (v28) {
      continue;
    }
    break;
  }
LABEL_9:
  int64_t v14 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
LABEL_57:
    __break(1u);
    return result;
  }
  if (v14 >= v27) {
    goto LABEL_55;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v14);
  int64_t v13 = v10 + 1;
  if (v15) {
    goto LABEL_22;
  }
  int64_t v13 = v10 + 2;
  if (v10 + 2 >= v27) {
    goto LABEL_55;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v13);
  if (v15) {
    goto LABEL_22;
  }
  int64_t v13 = v10 + 3;
  if (v10 + 3 >= v27) {
    goto LABEL_55;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v13);
  if (v15) {
    goto LABEL_22;
  }
  int64_t v16 = v10 + 4;
  if (v10 + 4 >= v27)
  {
LABEL_55:
    uint64_t v2 = 1;
    goto LABEL_52;
  }
  unint64_t v15 = *(void *)(v30 + 8 * v16);
  if (!v15)
  {
    while (1)
    {
      int64_t v13 = v16 + 1;
      if (__OFADD__(v16, 1)) {
        goto LABEL_57;
      }
      if (v13 >= v27) {
        goto LABEL_55;
      }
      unint64_t v15 = *(void *)(v30 + 8 * v13);
      ++v16;
      if (v15) {
        goto LABEL_22;
      }
    }
  }
  int64_t v13 = v10 + 4;
LABEL_22:
  uint64_t v11 = (v15 - 1) & v15;
  unint64_t v12 = __clz(__rbit64(v15)) + (v13 << 6);
  if (*(void *)(a1 + 16)) {
    goto LABEL_23;
  }
LABEL_54:
  uint64_t v2 = 0;
LABEL_52:
  sub_251A1E630();
  return v2;
}

uint64_t sub_251A7F9B8(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16) < *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v5 = a2 + 56;
  uint64_t v6 = -1 << *(unsigned char *)(a2 + 32);
  if (-v6 < 64) {
    uint64_t v7 = ~(-1 << -(char)v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(a2 + 56);
  int64_t v24 = (unint64_t)(63 - v6) >> 6;
  uint64_t v9 = a1 + 56;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v11 = 0;
  if (v8) {
    goto LABEL_7;
  }
LABEL_9:
  int64_t v15 = v11 + 1;
  if (__OFADD__(v11, 1))
  {
    __break(1u);
  }
  else
  {
    if (v15 >= v24) {
      goto LABEL_41;
    }
    unint64_t v16 = *(void *)(v5 + 8 * v15);
    int64_t v14 = v11 + 1;
    if (v16) {
      goto LABEL_22;
    }
    int64_t v14 = v11 + 2;
    if (v11 + 2 >= v24) {
      goto LABEL_41;
    }
    unint64_t v16 = *(void *)(v5 + 8 * v14);
    if (v16) {
      goto LABEL_22;
    }
    int64_t v14 = v11 + 3;
    if (v11 + 3 >= v24) {
      goto LABEL_41;
    }
    unint64_t v16 = *(void *)(v5 + 8 * v14);
    if (v16) {
      goto LABEL_22;
    }
    int64_t v17 = v11 + 4;
    if (v11 + 4 >= v24)
    {
LABEL_41:
      uint64_t v2 = 1;
LABEL_39:
      sub_251A1E630();
      return v2;
    }
    unint64_t v16 = *(void *)(v5 + 8 * v17);
    if (v16)
    {
      int64_t v14 = v11 + 4;
LABEL_22:
      uint64_t v12 = (v16 - 1) & v16;
      unint64_t v13 = __clz(__rbit64(v16)) + (v14 << 6);
      if (!*(void *)(a1 + 16)) {
        goto LABEL_38;
      }
      while (1)
      {
        unint64_t v25 = v12;
        unsigned int v18 = *(unsigned __int8 *)(*(void *)(a2 + 48) + v13);
        sub_251F36CA0();
        unsigned int v19 = v18 >> 6;
        sub_251F36CD0();
        sub_251F357B0();
        uint64_t result = sub_251F36D00();
        uint64_t v20 = -1 << *(unsigned char *)(a1 + 32);
        unint64_t v21 = result & ~v20;
        if (((*(void *)(v9 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
          goto LABEL_38;
        }
        uint64_t v22 = ~v20;
        while (1)
        {
          unsigned int v23 = *(unsigned __int8 *)(*(void *)(a1 + 48) + v21);
          if (!(v23 >> 6)) {
            break;
          }
          if (v23 >> 6 == 1)
          {
            if (v19 != 1) {
              goto LABEL_26;
            }
          }
          else if (v19 != 2)
          {
            goto LABEL_26;
          }
          if (((v23 ^ v18) & 0x3F) == 0) {
            goto LABEL_36;
          }
LABEL_26:
          unint64_t v21 = (v21 + 1) & v22;
          if (((*(void *)(v9 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
            goto LABEL_38;
          }
        }
        if (v18 > 0x3F || v23 != v18) {
          goto LABEL_26;
        }
LABEL_36:
        int64_t v11 = v14;
        unint64_t v8 = v25;
        if (!v25) {
          goto LABEL_9;
        }
LABEL_7:
        uint64_t v12 = (v8 - 1) & v8;
        unint64_t v13 = __clz(__rbit64(v8)) | (v11 << 6);
        int64_t v14 = v11;
        if (!*(void *)(a1 + 16))
        {
LABEL_38:
          uint64_t v2 = 0;
          goto LABEL_39;
        }
      }
    }
    while (1)
    {
      int64_t v14 = v17 + 1;
      if (__OFADD__(v17, 1)) {
        break;
      }
      if (v14 >= v24) {
        goto LABEL_41;
      }
      unint64_t v16 = *(void *)(v5 + 8 * v14);
      ++v17;
      if (v16) {
        goto LABEL_22;
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_251A7FCB4(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 1;
  }
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return 1;
  }
  uint64_t v5 = a2 + 56;
  swift_bridgeObjectRetain();
  for (uint64_t i = 0; i != v3; ++i)
  {
    if (*(void *)(a2 + 16))
    {
      unsigned int v7 = *(unsigned __int8 *)(a1 + 32 + i);
      sub_251F36CA0();
      unsigned int v8 = v7 >> 6;
      sub_251F36CD0();
      sub_251F357B0();
      uint64_t v9 = sub_251F36D00();
      uint64_t v10 = -1 << *(unsigned char *)(a2 + 32);
      unint64_t v11 = v9 & ~v10;
      if ((*(void *)(v5 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11))
      {
        uint64_t v12 = ~v10;
        do
        {
          unsigned int v13 = *(unsigned __int8 *)(*(void *)(a2 + 48) + v11);
          if (v13 >> 6)
          {
            if (v13 >> 6 == 1)
            {
              if (v8 != 1) {
                goto LABEL_9;
              }
            }
            else if (v8 != 2)
            {
              goto LABEL_9;
            }
            if (((v13 ^ v7) & 0x3F) == 0) {
              goto LABEL_20;
            }
          }
          else if (v7 <= 0x3F && v13 == v7)
          {
LABEL_20:
            uint64_t v14 = 0;
            goto LABEL_21;
          }
LABEL_9:
          unint64_t v11 = (v11 + 1) & v12;
        }
        while (((*(void *)(v5 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
      }
    }
  }
  uint64_t v14 = 1;
LABEL_21:
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_251A7FE84(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 1;
  }
  uint64_t v18 = *(void *)(a1 + 16);
  if (!v18) {
    return 1;
  }
  uint64_t v17 = a1 + 32;
  uint64_t v3 = a2 + 56;
  swift_bridgeObjectRetain();
  uint64_t v4 = 0;
  while (1)
  {
    if (*(void *)(a2 + 16))
    {
      uint64_t v5 = *(unsigned __int8 *)(v17 + v4);
      sub_251F36CA0();
      ServiceKind.rawValue.getter();
      sub_251F357B0();
      swift_bridgeObjectRelease();
      uint64_t v6 = sub_251F36D00();
      uint64_t v7 = -1 << *(unsigned char *)(a2 + 32);
      unint64_t v8 = v6 & ~v7;
      if ((*(void *)(v3 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8)) {
        break;
      }
    }
LABEL_4:
    if (++v4 == v18)
    {
      uint64_t v15 = 1;
      goto LABEL_123;
    }
  }
  uint64_t v9 = ~v7;
  while (1)
  {
    unint64_t v10 = 0x8000000251F62670;
    switch(*(unsigned char *)(*(void *)(a2 + 48) + v8))
    {
      case 1:
        unint64_t v11 = "0000003E-0000-1000-8000-0026BB765291";
        goto LABEL_61;
      case 2:
        unint64_t v11 = "00000270-0000-1000-8000-0026BB765291";
        goto LABEL_61;
      case 3:
        unint64_t v11 = "000000BB-0000-1000-8000-0026BB765291";
        goto LABEL_61;
      case 4:
        unint64_t v11 = "0000008D-0000-1000-8000-0026BB765291";
        goto LABEL_61;
      case 5:
        unint64_t v11 = "00000096-0000-1000-8000-0026BB765291";
        goto LABEL_61;
      case 6:
        unint64_t v11 = "00000042-0000-1000-8000-0026BB765291";
        goto LABEL_61;
      case 7:
        unint64_t v11 = "00000110-0000-1000-8000-0026BB765291";
        goto LABEL_61;
      case 8:
        unint64_t v11 = "00000204-0000-1000-8000-0026BB765291";
        goto LABEL_61;
      case 9:
        unint64_t v11 = "00000097-0000-1000-8000-0026BB765291";
        goto LABEL_61;
      case 0xA:
        unint64_t v11 = "0000007F-0000-1000-8000-0026BB765291";
        goto LABEL_61;
      case 0xB:
        unint64_t v11 = "00000080-0000-1000-8000-0026BB765291";
        goto LABEL_61;
      case 0xC:
        unint64_t v11 = "00000129-0000-1000-8000-0026BB765291";
        goto LABEL_61;
      case 0xD:
        unint64_t v11 = "00000237-0000-1000-8000-0026BB765291";
        goto LABEL_61;
      case 0xE:
        unint64_t v11 = "00000081-0000-1000-8000-0026BB765291";
        goto LABEL_61;
      case 0xF:
        unint64_t v11 = "00000121-0000-1000-8000-0026BB765291";
        goto LABEL_61;
      case 0x10:
        unint64_t v11 = "00000040-0000-1000-8000-0026BB765291";
        goto LABEL_61;
      case 0x11:
        unint64_t v11 = "000000D7-0000-1000-8000-0026BB765291";
        goto LABEL_61;
      case 0x12:
        unint64_t v11 = "000000BA-0000-1000-8000-0026BB765291";
        goto LABEL_61;
      case 0x13:
        unint64_t v11 = "00000041-0000-1000-8000-0026BB765291";
        goto LABEL_61;
      case 0x14:
        unint64_t v11 = "000000BC-0000-1000-8000-0026BB765291";
        goto LABEL_61;
      case 0x15:
        unint64_t v11 = "000000BD-0000-1000-8000-0026BB765291";
        goto LABEL_61;
      case 0x16:
        unint64_t v11 = "00000082-0000-1000-8000-0026BB765291";
        goto LABEL_61;
      case 0x17:
        unint64_t v11 = "000000D9-0000-1000-8000-0026BB765291";
        goto LABEL_61;
      case 0x18:
        unint64_t v11 = "000000CF-0000-1000-8000-0026BB765291";
        goto LABEL_61;
      case 0x19:
        unint64_t v11 = "000000CC-0000-1000-8000-0026BB765291";
        goto LABEL_61;
      case 0x1A:
        unint64_t v11 = "00000083-0000-1000-8000-0026BB765291";
        goto LABEL_61;
      case 0x1B:
        unint64_t v11 = "00000084-0000-1000-8000-0026BB765291";
        goto LABEL_61;
      case 0x1C:
        unint64_t v11 = "00000043-0000-1000-8000-0026BB765291";
        goto LABEL_61;
      case 0x1D:
        unint64_t v11 = "00000044-0000-1000-8000-0026BB765291";
        goto LABEL_61;
      case 0x1E:
        unint64_t v11 = "00000045-0000-1000-8000-0026BB765291";
        goto LABEL_61;
      case 0x1F:
        unint64_t v11 = "00000112-0000-1000-8000-0026BB765291";
        goto LABEL_61;
      case 0x20:
        unint64_t v11 = "00000085-0000-1000-8000-0026BB765291";
        goto LABEL_61;
      case 0x21:
        unint64_t v11 = "00000086-0000-1000-8000-0026BB765291";
        goto LABEL_61;
      case 0x22:
        unint64_t v11 = "00000047-0000-1000-8000-0026BB765291";
        goto LABEL_61;
      case 0x23:
        unint64_t v11 = "0000007E-0000-1000-8000-0026BB765291";
        goto LABEL_61;
      case 0x24:
        unint64_t v11 = "000000B9-0000-1000-8000-0026BB765291";
        goto LABEL_61;
      case 0x25:
        unint64_t v11 = "00000087-0000-1000-8000-0026BB765291";
        goto LABEL_61;
      case 0x26:
        unint64_t v11 = "00000113-0000-1000-8000-0026BB765291";
        goto LABEL_61;
      case 0x27:
        unint64_t v11 = "00000088-0000-1000-8000-0026BB765291";
        goto LABEL_61;
      case 0x28:
        unint64_t v11 = "00000089-0000-1000-8000-0026BB765291";
        goto LABEL_61;
      case 0x29:
        unint64_t v11 = "00000049-0000-1000-8000-0026BB765291";
        goto LABEL_61;
      case 0x2A:
        unint64_t v11 = "00000125-0000-1000-8000-0026BB765291";
        goto LABEL_61;
      case 0x2B:
        unint64_t v11 = "00000122-0000-1000-8000-0026BB765291";
        goto LABEL_61;
      case 0x2C:
        unint64_t v11 = "000000D8-0000-1000-8000-0026BB765291";
        goto LABEL_61;
      case 0x2D:
        unint64_t v11 = "0000008A-0000-1000-8000-0026BB765291";
        goto LABEL_61;
      case 0x2E:
        unint64_t v11 = "0000004A-0000-1000-8000-0026BB765291";
        goto LABEL_61;
      case 0x2F:
        unint64_t v11 = "000000D0-0000-1000-8000-0026BB765291";
        goto LABEL_61;
      case 0x30:
        unint64_t v11 = "000000B7-0000-1000-8000-0026BB765291";
        goto LABEL_61;
      case 0x31:
        unint64_t v11 = "0000020A-0000-1000-8000-0026BB765291";
        goto LABEL_61;
      case 0x32:
        unint64_t v11 = "0000020F-0000-1000-8000-0026BB765291";
        goto LABEL_61;
      case 0x33:
        unint64_t v11 = "0000008B-0000-1000-8000-0026BB765291";
        goto LABEL_61;
      case 0x34:
        unint64_t v11 = "0000008C-0000-1000-8000-0026BB765291";
LABEL_61:
        unint64_t v10 = (unint64_t)(v11 - 32) | 0x8000000000000000;
        break;
      default:
        break;
    }
    unint64_t v12 = 0x8000000251F62670;
    switch(v5)
    {
      case 1:
        unsigned int v13 = "0000003E-0000-1000-8000-0026BB765291";
        goto LABEL_115;
      case 2:
        unsigned int v13 = "00000270-0000-1000-8000-0026BB765291";
        goto LABEL_115;
      case 3:
        unsigned int v13 = "000000BB-0000-1000-8000-0026BB765291";
        goto LABEL_115;
      case 4:
        unsigned int v13 = "0000008D-0000-1000-8000-0026BB765291";
        goto LABEL_115;
      case 5:
        unsigned int v13 = "00000096-0000-1000-8000-0026BB765291";
        goto LABEL_115;
      case 6:
        unsigned int v13 = "00000042-0000-1000-8000-0026BB765291";
        goto LABEL_115;
      case 7:
        unsigned int v13 = "00000110-0000-1000-8000-0026BB765291";
        goto LABEL_115;
      case 8:
        unsigned int v13 = "00000204-0000-1000-8000-0026BB765291";
        goto LABEL_115;
      case 9:
        unsigned int v13 = "00000097-0000-1000-8000-0026BB765291";
        goto LABEL_115;
      case 10:
        unsigned int v13 = "0000007F-0000-1000-8000-0026BB765291";
        goto LABEL_115;
      case 11:
        unsigned int v13 = "00000080-0000-1000-8000-0026BB765291";
        goto LABEL_115;
      case 12:
        unsigned int v13 = "00000129-0000-1000-8000-0026BB765291";
        goto LABEL_115;
      case 13:
        unsigned int v13 = "00000237-0000-1000-8000-0026BB765291";
        goto LABEL_115;
      case 14:
        unsigned int v13 = "00000081-0000-1000-8000-0026BB765291";
        goto LABEL_115;
      case 15:
        unsigned int v13 = "00000121-0000-1000-8000-0026BB765291";
        goto LABEL_115;
      case 16:
        unsigned int v13 = "00000040-0000-1000-8000-0026BB765291";
        goto LABEL_115;
      case 17:
        unsigned int v13 = "000000D7-0000-1000-8000-0026BB765291";
        goto LABEL_115;
      case 18:
        unsigned int v13 = "000000BA-0000-1000-8000-0026BB765291";
        goto LABEL_115;
      case 19:
        unsigned int v13 = "00000041-0000-1000-8000-0026BB765291";
        goto LABEL_115;
      case 20:
        unsigned int v13 = "000000BC-0000-1000-8000-0026BB765291";
        goto LABEL_115;
      case 21:
        unsigned int v13 = "000000BD-0000-1000-8000-0026BB765291";
        goto LABEL_115;
      case 22:
        unsigned int v13 = "00000082-0000-1000-8000-0026BB765291";
        goto LABEL_115;
      case 23:
        unsigned int v13 = "000000D9-0000-1000-8000-0026BB765291";
        goto LABEL_115;
      case 24:
        unsigned int v13 = "000000CF-0000-1000-8000-0026BB765291";
        goto LABEL_115;
      case 25:
        unsigned int v13 = "000000CC-0000-1000-8000-0026BB765291";
        goto LABEL_115;
      case 26:
        unsigned int v13 = "00000083-0000-1000-8000-0026BB765291";
        goto LABEL_115;
      case 27:
        unsigned int v13 = "00000084-0000-1000-8000-0026BB765291";
        goto LABEL_115;
      case 28:
        unsigned int v13 = "00000043-0000-1000-8000-0026BB765291";
        goto LABEL_115;
      case 29:
        unsigned int v13 = "00000044-0000-1000-8000-0026BB765291";
        goto LABEL_115;
      case 30:
        unsigned int v13 = "00000045-0000-1000-8000-0026BB765291";
        goto LABEL_115;
      case 31:
        unsigned int v13 = "00000112-0000-1000-8000-0026BB765291";
        goto LABEL_115;
      case 32:
        unsigned int v13 = "00000085-0000-1000-8000-0026BB765291";
        goto LABEL_115;
      case 33:
        unsigned int v13 = "00000086-0000-1000-8000-0026BB765291";
        goto LABEL_115;
      case 34:
        unsigned int v13 = "00000047-0000-1000-8000-0026BB765291";
        goto LABEL_115;
      case 35:
        unsigned int v13 = "0000007E-0000-1000-8000-0026BB765291";
        goto LABEL_115;
      case 36:
        unsigned int v13 = "000000B9-0000-1000-8000-0026BB765291";
        goto LABEL_115;
      case 37:
        unsigned int v13 = "00000087-0000-1000-8000-0026BB765291";
        goto LABEL_115;
      case 38:
        unsigned int v13 = "00000113-0000-1000-8000-0026BB765291";
        goto LABEL_115;
      case 39:
        unsigned int v13 = "00000088-0000-1000-8000-0026BB765291";
        goto LABEL_115;
      case 40:
        unsigned int v13 = "00000089-0000-1000-8000-0026BB765291";
        goto LABEL_115;
      case 41:
        unsigned int v13 = "00000049-0000-1000-8000-0026BB765291";
        goto LABEL_115;
      case 42:
        unsigned int v13 = "00000125-0000-1000-8000-0026BB765291";
        goto LABEL_115;
      case 43:
        unsigned int v13 = "00000122-0000-1000-8000-0026BB765291";
        goto LABEL_115;
      case 44:
        unsigned int v13 = "000000D8-0000-1000-8000-0026BB765291";
        goto LABEL_115;
      case 45:
        unsigned int v13 = "0000008A-0000-1000-8000-0026BB765291";
        goto LABEL_115;
      case 46:
        unsigned int v13 = "0000004A-0000-1000-8000-0026BB765291";
        goto LABEL_115;
      case 47:
        unsigned int v13 = "000000D0-0000-1000-8000-0026BB765291";
        goto LABEL_115;
      case 48:
        unsigned int v13 = "000000B7-0000-1000-8000-0026BB765291";
        goto LABEL_115;
      case 49:
        unsigned int v13 = "0000020A-0000-1000-8000-0026BB765291";
        goto LABEL_115;
      case 50:
        unsigned int v13 = "0000020F-0000-1000-8000-0026BB765291";
        goto LABEL_115;
      case 51:
        unsigned int v13 = "0000008B-0000-1000-8000-0026BB765291";
        goto LABEL_115;
      case 52:
        unsigned int v13 = "0000008C-0000-1000-8000-0026BB765291";
LABEL_115:
        unint64_t v12 = (unint64_t)(v13 - 32) | 0x8000000000000000;
        break;
      default:
        break;
    }
    if (v10 == v12)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v15 = 0;
      goto LABEL_123;
    }
    char v14 = sub_251F36B10();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v14) {
      break;
    }
    unint64_t v8 = (v8 + 1) & v9;
    if (((*(void *)(v3 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
      goto LABEL_4;
    }
  }
  uint64_t v15 = 0;
LABEL_123:
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_251A8070C(uint64_t a1, uint64_t a2)
{
  uint64_t v39 = a2;
  if (!*(void *)(a2 + 16)) {
    return 1;
  }
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  v25[1] = v25;
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = *(void *)(a1 + 16);
  v25[0] = a1;
  if (v27)
  {
    uint64_t v6 = sub_251F34DA0();
    uint64_t v7 = *(void *)(v6 - 8);
    uint64_t v8 = v7;
    uint64_t v32 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v38 = *(void *)(v7 + 72);
    uint64_t v30 = (uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
    uint64_t v31 = (void (**)(char *, void, uint64_t, uint64_t))(v7 + 56);
    uint64_t v10 = v7 + 16;
    uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    uint64_t v36 = v10;
    BOOL v37 = v9;
    uint64_t v28 = v8 + 32;
    uint64_t v29 = v8;
    uint64_t v35 = v39 + 56;
    unint64_t v11 = (void (**)(char *, uint64_t))(v8 + 8);
    swift_bridgeObjectRetain();
    uint64_t v12 = 0;
    uint64_t v26 = v5;
    while (1)
    {
      v37(v5, v32 + v38 * v12, v6);
      (*v31)(v5, 0, 1, v6);
      uint64_t v13 = (*v30)(v5, 1, v6);
      if (v13 == 1) {
        break;
      }
      uint64_t v33 = v12;
      unint64_t v34 = v25;
      uint64_t v14 = *(void *)(v29 + 64);
      MEMORY[0x270FA5388](v13);
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))((char *)v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v5, v6);
      if (*(void *)(v39 + 16))
      {
        uint64_t v16 = v39;
        sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
        uint64_t v17 = sub_251F35600();
        uint64_t v18 = -1 << *(unsigned char *)(v16 + 32);
        unint64_t v19 = v17 & ~v18;
        if ((*(void *)(v35 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19))
        {
          uint64_t v20 = ~v18;
          while (1)
          {
            MEMORY[0x270FA5388](v17);
            v37((char *)v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), *(void *)(v39 + 48) + v19 * v38, v6);
            sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
            char v21 = sub_251F35650();
            uint64_t v22 = (uint64_t (*)(char *, uint64_t))*v11;
            uint64_t v17 = ((uint64_t (*)(char *, uint64_t))*v11)((char *)v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
            if (v21) {
              break;
            }
            unint64_t v19 = (v19 + 1) & v20;
            if (((*(void *)(v35 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
              goto LABEL_4;
            }
          }
          v22((char *)v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
          swift_bridgeObjectRelease();
          return 0;
        }
      }
LABEL_4:
      uint64_t v12 = v33 + 1;
      (*v11)((char *)v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
      uint64_t v5 = v26;
      if (v12 == v27) {
        goto LABEL_15;
      }
    }
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_15:
    uint64_t v24 = sub_251F34DA0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v5, 1, 1, v24);
  }
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_251A80B30(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v4 = isStackAllocationSafe;
  v11[1] = *MEMORY[0x263EF8340];
  char v5 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v6 = (unint64_t)((1 << v5) + 63) >> 6;
  size_t v7 = 8 * v6;
  if ((v5 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    bzero((char *)v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    uint64_t v8 = sub_251A80E0C((uint64_t)v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v6, v4, a2);
    swift_release();
    if (v2) {
      swift_willThrow();
    }
  }
  else
  {
    uint64_t v9 = (void *)swift_slowAlloc();
    bzero(v9, v7);
    uint64_t v8 = sub_251A80E0C((uint64_t)v9, v6, v4, a2);
    swift_release();
    MEMORY[0x2533AC760](v9, -1, -1);
  }
  return v8;
}

uint64_t sub_251A80CA8(uint64_t isStackAllocationSafe)
{
  uint64_t v2 = isStackAllocationSafe;
  v9[1] = *MEMORY[0x263EF8340];
  char v3 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v4 = (unint64_t)((1 << v3) + 63) >> 6;
  size_t v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    bzero((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    uint64_t v6 = sub_251A80FE8((uint64_t)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v4, v2);
    swift_release();
    if (v1) {
      swift_willThrow();
    }
  }
  else
  {
    size_t v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    uint64_t v6 = sub_251A80FE8((uint64_t)v7, v4, v2);
    swift_release();
    MEMORY[0x2533AC760](v7, -1, -1);
  }
  return v6;
}

uint64_t sub_251A80E0C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = (unint64_t *)result;
  uint64_t v7 = 0;
  int64_t v8 = 0;
  uint64_t v9 = a3 + 56;
  uint64_t v10 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(a3 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  do
  {
LABEL_5:
    if (v12)
    {
      unint64_t v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v16 = v15 | (v8 << 6);
    }
    else
    {
      int64_t v17 = v8 + 1;
      if (__OFADD__(v8, 1)) {
        goto LABEL_36;
      }
      if (v17 >= v13)
      {
LABEL_34:
        swift_retain();
        return sub_251F1B808(v6, a2, v7, a3);
      }
      unint64_t v18 = *(void *)(v9 + 8 * v17);
      ++v8;
      if (!v18)
      {
        int64_t v8 = v17 + 1;
        if (v17 + 1 >= v13) {
          goto LABEL_34;
        }
        unint64_t v18 = *(void *)(v9 + 8 * v8);
        if (!v18)
        {
          int64_t v8 = v17 + 2;
          if (v17 + 2 >= v13) {
            goto LABEL_34;
          }
          unint64_t v18 = *(void *)(v9 + 8 * v8);
          if (!v18)
          {
            int64_t v19 = v17 + 3;
            if (v19 >= v13) {
              goto LABEL_34;
            }
            unint64_t v18 = *(void *)(v9 + 8 * v19);
            if (!v18)
            {
              while (1)
              {
                int64_t v8 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_37;
                }
                if (v8 >= v13) {
                  goto LABEL_34;
                }
                unint64_t v18 = *(void *)(v9 + 8 * v8);
                ++v19;
                if (v18) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v8 = v19;
          }
        }
      }
LABEL_20:
      unint64_t v12 = (v18 - 1) & v18;
      unint64_t v16 = __clz(__rbit64(v18)) + (v8 << 6);
    }
    uint64_t v20 = *(void *)(*(void *)a4 + 16);
    if (v20)
    {
      unsigned int v21 = *(unsigned __int8 *)(*(void *)(a3 + 48) + v16);
      uint64_t v22 = (unsigned __int8 *)(*(void *)a4 + 32);
      int v23 = v21 & 0xC0;
      do
      {
        unsigned int v24 = *v22++;
        uint64_t result = v24;
        unsigned int v25 = v24 >> 6;
        if (v24 >> 6)
        {
          if (v25 == 1)
          {
            if (v23 == 64) {
              goto LABEL_23;
            }
          }
          else if (v23 == 128)
          {
LABEL_23:
            uint64_t result = result ^ v21;
            if ((result & 0x3F) == 0) {
              goto LABEL_5;
            }
          }
        }
        else if (v21 <= 0x3F && result == v21)
        {
          goto LABEL_5;
        }
        --v20;
      }
      while (v20);
    }
    *(unint64_t *)((char *)v6 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
  }
  while (!__OFADD__(v7++, 1));
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_251A80FE8(uint64_t result, uint64_t a2, uint64_t a3)
{
  size_t v5 = (unint64_t *)result;
  uint64_t v6 = 0;
  int64_t v7 = 0;
  uint64_t v8 = a3 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(a3 + 56);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (v11)
  {
    unint64_t v14 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    unint64_t v15 = v14 | (v7 << 6);
LABEL_21:
    int v19 = *(char *)(*(void *)(a3 + 48) + v15);
    if ((v19 & 0x80000000) == 0 || (v19 & 0x3Fu) - 1 >= 2)
    {
      *(void *)(result + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      if (__OFADD__(v6++, 1)) {
        goto LABEL_27;
      }
    }
  }
  int64_t v16 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v16 >= v12) {
    goto LABEL_24;
  }
  unint64_t v17 = *(void *)(v8 + 8 * v16);
  ++v7;
  if (v17) {
    goto LABEL_20;
  }
  int64_t v7 = v16 + 1;
  if (v16 + 1 >= v12) {
    goto LABEL_24;
  }
  unint64_t v17 = *(void *)(v8 + 8 * v7);
  if (v17) {
    goto LABEL_20;
  }
  int64_t v7 = v16 + 2;
  if (v16 + 2 >= v12) {
    goto LABEL_24;
  }
  unint64_t v17 = *(void *)(v8 + 8 * v7);
  if (v17)
  {
LABEL_20:
    unint64_t v11 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v7 << 6);
    goto LABEL_21;
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v12)
  {
LABEL_24:
    swift_retain();
    return sub_251F1B808(v5, a2, v6, a3);
  }
  unint64_t v17 = *(void *)(v8 + 8 * v18);
  if (v17)
  {
    int64_t v7 = v18;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v7 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v7 >= v12) {
      goto LABEL_24;
    }
    unint64_t v17 = *(void *)(v8 + 8 * v7);
    ++v18;
    if (v17) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_251A81170(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_251ECDC74(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_251A811DC(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_251A811DC(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_251F36AA0();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_130;
    }
    if (v3) {
      return sub_251A81868(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_138;
  }
  uint64_t v6 = result;
  v95 = a1;
  if (v3 < 2)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    __dst = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v13 = *(void *)(MEMORY[0x263F8EE78] + 16);
      int64_t v12 = (char *)MEMORY[0x263F8EE78];
LABEL_96:
      v87 = v12;
      uint64_t v97 = v9;
      if (v13 >= 2)
      {
        uint64_t v88 = *v95;
        do
        {
          unint64_t v89 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_125;
          }
          if (!v88) {
            goto LABEL_137;
          }
          v90 = v87;
          uint64_t v91 = *(void *)&v87[16 * v89 + 32];
          uint64_t v92 = *(void *)&v87[16 * v13 + 24];
          sub_251A818E8((char *)(v88 + 32 * v91), (char *)(v88 + 32 * *(void *)&v87[16 * v13 + 16]), v88 + 32 * v92, __dst);
          if (v1) {
            break;
          }
          if (v92 < v91) {
            goto LABEL_126;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            v90 = sub_251ECDC38((uint64_t)v90);
          }
          if (v89 >= *((void *)v90 + 2)) {
            goto LABEL_127;
          }
          v93 = &v90[16 * v89 + 32];
          *(void *)v93 = v91;
          *((void *)v93 + 1) = v92;
          unint64_t v94 = *((void *)v90 + 2);
          if (v13 > v94) {
            goto LABEL_128;
          }
          memmove(&v90[16 * v13 + 16], &v90[16 * v13 + 32], 16 * (v94 - v13));
          v87 = v90;
          *((void *)v90 + 2) = v94 - 1;
          unint64_t v13 = v94 - 1;
        }
        while (v94 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(void *)(v97 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v97 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    uint64_t v8 = sub_251F35B50();
    *(void *)(v8 + 16) = v7;
    uint64_t v97 = v8;
    __dst = (char *)(v8 + 32);
  }
  uint64_t v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v96 = *a1 + 88;
  int64_t v12 = (char *)MEMORY[0x263F8EE78];
  uint64_t v98 = v6;
  uint64_t v99 = v3;
  uint64_t v100 = v11;
  while (1)
  {
    uint64_t v14 = v10++;
    if (v10 < v3)
    {
      unint64_t v15 = *(void *)(*(void *)(v11 + 32 * v10 + 24) + 16);
      unint64_t v16 = *(void *)(*(void *)(v11 + 32 * v14 + 24) + 16);
      uint64_t v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        uint64_t v17 = v96 + 32 * v14;
        unint64_t v18 = v15;
        while (1)
        {
          unint64_t v19 = *(void *)(*(void *)v17 + 16);
          if (v15 < v16 == v19 >= v18) {
            break;
          }
          ++v10;
          v17 += 32;
          unint64_t v18 = v19;
          if (v3 == v10)
          {
            uint64_t v10 = v3;
            break;
          }
        }
      }
      if (v15 < v16)
      {
        if (v10 < v14) {
          goto LABEL_131;
        }
        if (v14 < v10)
        {
          uint64_t v20 = 32 * v10;
          uint64_t v21 = 32 * v14;
          uint64_t v22 = v10;
          uint64_t v23 = v14;
          do
          {
            if (v23 != --v22)
            {
              if (!v11) {
                goto LABEL_136;
              }
              unsigned int v24 = (_OWORD *)(v11 + v21);
              uint64_t v25 = v11 + v20;
              long long v27 = *(_OWORD *)(v11 + v21);
              long long v26 = *(_OWORD *)(v11 + v21 + 16);
              long long v28 = *(_OWORD *)(v11 + v20 - 16);
              *unsigned int v24 = *(_OWORD *)(v11 + v20 - 32);
              v24[1] = v28;
              *(_OWORD *)(v25 - 32) = v27;
              *(_OWORD *)(v25 - 16) = v26;
            }
            ++v23;
            v20 -= 32;
            v21 += 32;
          }
          while (v23 < v22);
        }
      }
    }
    if (v10 >= v3) {
      goto LABEL_46;
    }
    if (__OFSUB__(v10, v14)) {
      goto LABEL_129;
    }
    if (v10 - v14 >= v6) {
      goto LABEL_46;
    }
    uint64_t v29 = v14 + v6;
    if (__OFADD__(v14, v6)) {
      goto LABEL_132;
    }
    if (v29 >= v3) {
      uint64_t v29 = v3;
    }
    if (v29 < v14) {
      break;
    }
    if (v10 != v29)
    {
      uint64_t v30 = v11 + 32 * v10;
      do
      {
        uint64_t v31 = *(void *)(v11 + 32 * v10 + 24);
        uint64_t v32 = v30;
        uint64_t v33 = v14;
        do
        {
          if (*(void *)(v31 + 16) >= *(void *)(*(void *)(v32 - 8) + 16)) {
            break;
          }
          if (!v11) {
            goto LABEL_134;
          }
          uint64_t v34 = *(void *)(v32 + 16);
          long long v35 = *(_OWORD *)v32;
          long long v36 = *(_OWORD *)(v32 - 16);
          *(_OWORD *)uint64_t v32 = *(_OWORD *)(v32 - 32);
          *(_OWORD *)(v32 + 16) = v36;
          *(void *)(v32 - 16) = v34;
          *(void *)(v32 - 8) = v31;
          *(_OWORD *)(v32 - 32) = v35;
          v32 -= 32;
          ++v33;
        }
        while (v10 != v33);
        ++v10;
        v30 += 32;
      }
      while (v10 != v29);
      uint64_t v10 = v29;
    }
LABEL_46:
    if (v10 < v14) {
      goto LABEL_124;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      int64_t v12 = sub_251ECD5C4(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v38 = *((void *)v12 + 2);
    unint64_t v37 = *((void *)v12 + 3);
    unint64_t v13 = v38 + 1;
    uint64_t v11 = v100;
    if (v38 >= v37 >> 1)
    {
      v86 = sub_251ECD5C4((char *)(v37 > 1), v38 + 1, 1, v12);
      uint64_t v11 = v100;
      int64_t v12 = v86;
    }
    *((void *)v12 + 2) = v13;
    uint64_t v39 = v12 + 32;
    BOOL v40 = &v12[16 * v38 + 32];
    *(void *)BOOL v40 = v14;
    *((void *)v40 + 1) = v10;
    if (v38)
    {
      while (1)
      {
        unint64_t v41 = v13 - 1;
        if (v13 >= 4)
        {
          int64_t v46 = &v39[16 * v13];
          uint64_t v47 = *((void *)v46 - 8);
          uint64_t v48 = *((void *)v46 - 7);
          BOOL v52 = __OFSUB__(v48, v47);
          uint64_t v49 = v48 - v47;
          if (v52) {
            goto LABEL_113;
          }
          uint64_t v51 = *((void *)v46 - 6);
          uint64_t v50 = *((void *)v46 - 5);
          BOOL v52 = __OFSUB__(v50, v51);
          uint64_t v44 = v50 - v51;
          char v45 = v52;
          if (v52) {
            goto LABEL_114;
          }
          unint64_t v53 = v13 - 2;
          uint64_t v54 = &v39[16 * v13 - 32];
          uint64_t v56 = *(void *)v54;
          uint64_t v55 = *((void *)v54 + 1);
          BOOL v52 = __OFSUB__(v55, v56);
          uint64_t v57 = v55 - v56;
          if (v52) {
            goto LABEL_116;
          }
          BOOL v52 = __OFADD__(v44, v57);
          uint64_t v58 = v44 + v57;
          if (v52) {
            goto LABEL_119;
          }
          if (v58 >= v49)
          {
            v76 = &v39[16 * v41];
            uint64_t v78 = *(void *)v76;
            uint64_t v77 = *((void *)v76 + 1);
            BOOL v52 = __OFSUB__(v77, v78);
            uint64_t v79 = v77 - v78;
            if (v52) {
              goto LABEL_123;
            }
            BOOL v69 = v44 < v79;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v70 = *((void *)v12 + 4);
            uint64_t v71 = *((void *)v12 + 5);
            BOOL v52 = __OFSUB__(v71, v70);
            uint64_t v63 = v71 - v70;
            char v64 = v52;
            goto LABEL_77;
          }
          uint64_t v43 = *((void *)v12 + 4);
          uint64_t v42 = *((void *)v12 + 5);
          BOOL v52 = __OFSUB__(v42, v43);
          uint64_t v44 = v42 - v43;
          char v45 = v52;
        }
        if (v45) {
          goto LABEL_115;
        }
        unint64_t v53 = v13 - 2;
        uint64_t v59 = &v39[16 * v13 - 32];
        uint64_t v61 = *(void *)v59;
        uint64_t v60 = *((void *)v59 + 1);
        BOOL v62 = __OFSUB__(v60, v61);
        uint64_t v63 = v60 - v61;
        char v64 = v62;
        if (v62) {
          goto LABEL_118;
        }
        v65 = &v39[16 * v41];
        uint64_t v67 = *(void *)v65;
        uint64_t v66 = *((void *)v65 + 1);
        BOOL v52 = __OFSUB__(v66, v67);
        uint64_t v68 = v66 - v67;
        if (v52) {
          goto LABEL_121;
        }
        if (__OFADD__(v63, v68)) {
          goto LABEL_122;
        }
        if (v63 + v68 >= v44)
        {
          BOOL v69 = v44 < v68;
LABEL_83:
          if (v69) {
            unint64_t v41 = v53;
          }
          goto LABEL_85;
        }
LABEL_77:
        if (v64) {
          goto LABEL_117;
        }
        v72 = &v39[16 * v41];
        uint64_t v74 = *(void *)v72;
        uint64_t v73 = *((void *)v72 + 1);
        BOOL v52 = __OFSUB__(v73, v74);
        uint64_t v75 = v73 - v74;
        if (v52) {
          goto LABEL_120;
        }
        if (v75 < v63) {
          goto LABEL_15;
        }
LABEL_85:
        unint64_t v80 = v41 - 1;
        if (v41 - 1 >= v13)
        {
          __break(1u);
LABEL_110:
          __break(1u);
LABEL_111:
          __break(1u);
LABEL_112:
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
          goto LABEL_133;
        }
        if (!v11) {
          goto LABEL_135;
        }
        v81 = &v39[16 * v80];
        uint64_t v82 = *(void *)v81;
        v83 = &v39[16 * v41];
        uint64_t v84 = *((void *)v83 + 1);
        sub_251A818E8((char *)(v11 + 32 * *(void *)v81), (char *)(v11 + 32 * *(void *)v83), v11 + 32 * v84, __dst);
        if (v1) {
          goto LABEL_93;
        }
        if (v84 < v82) {
          goto LABEL_110;
        }
        if (v41 > *((void *)v12 + 2)) {
          goto LABEL_111;
        }
        *(void *)v81 = v82;
        *(void *)&v39[16 * v80 + 8] = v84;
        unint64_t v85 = *((void *)v12 + 2);
        if (v41 >= v85) {
          goto LABEL_112;
        }
        unint64_t v13 = v85 - 1;
        memmove(&v39[16 * v41], v83 + 16, 16 * (v85 - 1 - v41));
        *((void *)v12 + 2) = v85 - 1;
        uint64_t v11 = v100;
        if (v85 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_15:
    uint64_t v6 = v98;
    uint64_t v3 = v99;
    if (v10 >= v99)
    {
      uint64_t v9 = v97;
      goto LABEL_96;
    }
  }
LABEL_133:
  __break(1u);
LABEL_134:
  __break(1u);
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  uint64_t result = sub_251F36670();
  __break(1u);
  return result;
}

uint64_t sub_251A81868(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = *a4;
    uint64_t v5 = *a4 + 32 * a3;
LABEL_5:
    uint64_t v6 = *(void *)(v4 + 32 * a3 + 24);
    uint64_t v7 = v5;
    uint64_t v8 = result;
    while (1)
    {
      if (*(void *)(v6 + 16) >= *(void *)(*(void *)(v7 - 8) + 16))
      {
LABEL_4:
        ++a3;
        v5 += 32;
        if (a3 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v4) {
        break;
      }
      uint64_t v9 = *(void *)(v7 + 16);
      long long v10 = *(_OWORD *)v7;
      long long v11 = *(_OWORD *)(v7 - 16);
      *(_OWORD *)uint64_t v7 = *(_OWORD *)(v7 - 32);
      *(_OWORD *)(v7 + 16) = v11;
      *(void *)(v7 - 16) = v9;
      *(void *)(v7 - 8) = v6;
      *(_OWORD *)(v7 - 32) = v10;
      v7 -= 32;
      if (a3 == ++v8) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_251A818E8(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 31;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 5;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 31;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 5;
  long long v28 = __src;
  long long v27 = __dst;
  if (v10 >= v12 >> 5)
  {
    if (v11 >= -31)
    {
      if (__dst != a2 || &a2[32 * v13] <= __dst) {
        memmove(__dst, a2, 32 * v13);
      }
      unint64_t v19 = &v4[32 * v13];
      long long v26 = v19;
      long long v28 = v6;
      if (v7 < v6 && v11 >= 32)
      {
        uint64_t v20 = (char *)(a3 - 32);
        do
        {
          uint64_t v21 = v20 + 32;
          if (*(void *)(*((void *)v19 - 1) + 16) >= *(void *)(*((void *)v6 - 1) + 16))
          {
            long long v26 = v19 - 32;
            if (v21 < v19 || v20 >= v19 || v21 != v19)
            {
              long long v24 = *((_OWORD *)v19 - 1);
              *(_OWORD *)uint64_t v20 = *((_OWORD *)v19 - 2);
              *((_OWORD *)v20 + 1) = v24;
            }
            uint64_t v22 = v6;
            v19 -= 32;
            if (v6 <= v7) {
              break;
            }
          }
          else
          {
            uint64_t v22 = v6 - 32;
            if (v21 != v6 || v20 >= v6)
            {
              long long v23 = *((_OWORD *)v6 - 1);
              *(_OWORD *)uint64_t v20 = *(_OWORD *)v22;
              *((_OWORD *)v20 + 1) = v23;
            }
            long long v28 = v6 - 32;
            if (v22 <= v7) {
              break;
            }
          }
          v20 -= 32;
          uint64_t v6 = v22;
        }
        while (v19 > v4);
      }
LABEL_44:
      sub_251ECD6F0((void **)&v28, &v27, &v26);
      return 1;
    }
  }
  else if (v8 >= -31)
  {
    if (__dst != __src || &__src[32 * v10] <= __dst) {
      memmove(__dst, __src, 32 * v10);
    }
    uint64_t v14 = &v4[32 * v10];
    long long v26 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 32)
    {
      unint64_t v15 = v4;
      while (1)
      {
        if (*(void *)(*((void *)v6 + 3) + 16) >= *(void *)(*((void *)v15 + 3) + 16))
        {
          uint64_t v4 = v15 + 32;
          uint64_t v17 = v15;
          unint64_t v16 = v6;
          if (v7 == v15)
          {
            v15 += 32;
            if (v7 < v4) {
              goto LABEL_22;
            }
          }
          else
          {
            v15 += 32;
          }
        }
        else
        {
          unint64_t v16 = v6 + 32;
          uint64_t v17 = v6;
          if (v7 == v6 && v7 < v16) {
            goto LABEL_22;
          }
        }
        long long v18 = *((_OWORD *)v17 + 1);
        *(_OWORD *)uint64_t v7 = *(_OWORD *)v17;
        *((_OWORD *)v7 + 1) = v18;
LABEL_22:
        v7 += 32;
        if (v15 < v14)
        {
          uint64_t v6 = v16;
          if ((unint64_t)v16 < a3) {
            continue;
          }
        }
        long long v27 = v4;
        long long v28 = v7;
        goto LABEL_44;
      }
    }
    goto LABEL_44;
  }
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251A81B84(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return 1;
  }
  uint64_t v4 = 0;
  uint64_t v5 = a1 + 32;
  uint64_t v6 = a2 + 56;
  do
  {
    if (!*(void *)(a2 + 16)) {
      return 0;
    }
    unsigned int v7 = *(unsigned __int8 *)(v5 + v4);
    sub_251F36CA0();
    unsigned int v8 = v7 >> 6;
    sub_251F36CD0();
    sub_251F357B0();
    uint64_t v9 = sub_251F36D00();
    uint64_t v10 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v11 = v9 & ~v10;
    if (((*(void *)(v6 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
      return 0;
    }
    ++v4;
    uint64_t v12 = ~v10;
    while (1)
    {
      unsigned int v13 = *(unsigned __int8 *)(*(void *)(a2 + 48) + v11);
      if (!(v13 >> 6)) {
        break;
      }
      if (v13 >> 6 == 1)
      {
        if (v8 != 1) {
          goto LABEL_7;
        }
      }
      else if (v8 != 2)
      {
        goto LABEL_7;
      }
      if (((v13 ^ v7) & 0x3F) == 0) {
        goto LABEL_17;
      }
LABEL_7:
      unint64_t v11 = (v11 + 1) & v12;
      if (((*(void *)(v6 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
        return 0;
      }
    }
    if (v7 > 0x3F || v13 != v7) {
      goto LABEL_7;
    }
LABEL_17:
    uint64_t result = 1;
  }
  while (v4 != v2);
  return result;
}

uint64_t sub_251A81D30(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  uint64_t v3 = *(void *)(a1 + 56);
  uint64_t v4 = *(void *)(a1 + 64);
  uint64_t v13 = *(void *)(a1 + 128);
  uint64_t v14 = *(void *)(a1 + 120);
  uint64_t v11 = *(void *)(a1 + 144);
  uint64_t v12 = *(void *)(a1 + 136);
  uint64_t v10 = *(void *)(a1 + 152);
  uint64_t v8 = *(void *)(a1 + 168);
  uint64_t v9 = *(void *)(a1 + 160);
  uint64_t v7 = *(void *)(a1 + 176);
  long long v6 = *(_OWORD *)(a1 + 184);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_251A4DE90(v2, v3, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_251A4DED4(v14, v13, v12, v11, v10, v9, v8, v7, v6, *((uint64_t *)&v6 + 1));
  return a1;
}

uint64_t sub_251A81E48(uint64_t result, uint64_t a2)
{
  unint64_t v2 = *(void *)(result + 16);
  if (!v2) {
    return MEMORY[0x263F8EE78];
  }
  unint64_t v4 = 0;
  uint64_t v5 = result + 48;
  uint64_t v6 = -(uint64_t)v2;
  uint64_t v7 = MEMORY[0x263F8EE78];
  unint64_t v18 = *(void *)(result + 16);
  uint64_t v19 = result + 48;
  do
  {
    uint64_t v20 = v7;
    if (v4 <= v2) {
      unint64_t v8 = v2;
    }
    else {
      unint64_t v8 = v4;
    }
    uint64_t v9 = -(uint64_t)v8;
    for (uint64_t i = (_OWORD *)(v5 + 32 * v4++); ; i += 2)
    {
      if (v9 + v4 == 1)
      {
        __break(1u);
        return result;
      }
      uint64_t v11 = *((void *)i - 2);
      uint64_t v12 = *((void *)i - 1);
      long long v21 = *i;
      swift_bridgeObjectRetain();
      uint64_t v13 = swift_bridgeObjectRetain();
      if (sub_251A7F9B8(v13, a2)) {
        break;
      }
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      ++v4;
      if (v6 + v4 == 1) {
        return v20;
      }
    }
    uint64_t v7 = v20;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = sub_251A3E368(0, *(void *)(v20 + 16) + 1, 1);
      uint64_t v7 = v20;
    }
    unint64_t v2 = v18;
    uint64_t v5 = v19;
    long long v14 = v21;
    unint64_t v16 = *(void *)(v7 + 16);
    unint64_t v15 = *(void *)(v7 + 24);
    if (v16 >= v15 >> 1)
    {
      uint64_t result = sub_251A3E368(v15 > 1, v16 + 1, 1);
      long long v14 = v21;
      uint64_t v5 = v19;
      uint64_t v7 = v20;
    }
    *(void *)(v7 + 16) = v16 + 1;
    uint64_t v17 = v7 + 32 * v16;
    *(void *)(v17 + 32) = v11;
    *(void *)(v17 + 40) = v12;
    *(_OWORD *)(v17 + 48) = v14;
  }
  while (v6 + v4);
  return v7;
}

uint64_t sub_251A81FDC(uint64_t result)
{
  if ((unint64_t)(result - 1) >= 2) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_251A81FF0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_251A82058(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_251A820C0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_251A82124(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (!v1) {
    return v2;
  }
  uint64_t v41 = *(void *)(a1 + 16);
  uint64_t v43 = MEMORY[0x263F8EE78];
  sub_251A3E1E0(0, v1, 0);
  uint64_t v2 = v43;
  uint64_t result = sub_251A8293C(a1);
  uint64_t v4 = result;
  uint64_t v6 = v41;
  uint64_t v5 = a1;
  uint64_t v8 = v7;
  uint64_t v9 = 0;
  char v11 = v10 & 1;
  uint64_t v12 = a1 + 64;
  uint64_t v13 = v7;
  uint64_t v14 = a1 + 88;
  unint64_t v15 = &unk_251F3AEC0;
  while ((v11 & 1) == 0)
  {
    if (v4 < 0 || v4 >= 1 << *(unsigned char *)(v5 + 32))
    {
      __break(1u);
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
      break;
    }
    unint64_t v17 = (unint64_t)v4 >> 6;
    if ((*(void *)(v12 + 8 * ((unint64_t)v4 >> 6)) & (1 << v4)) == 0) {
      goto LABEL_27;
    }
    if (*(_DWORD *)(v5 + 36) != v8) {
      goto LABEL_28;
    }
    uint64_t v18 = *(char *)(*(void *)(v5 + 48) + v4);
    unint64_t v20 = *(void *)(v43 + 16);
    unint64_t v19 = *(void *)(v43 + 24);
    if (v20 >= v19 >> 1)
    {
      uint64_t v39 = v13;
      uint64_t v40 = v12;
      uint64_t v38 = v14;
      uint64_t result = sub_251A3E1E0(v19 > 1, v20 + 1, 1);
      unint64_t v15 = &unk_251F3AEC0;
      uint64_t v14 = v38;
      uint64_t v13 = v39;
      uint64_t v12 = v40;
      uint64_t v6 = v41;
      uint64_t v5 = a1;
    }
    int v21 = v15[v18];
    *(void *)(v43 + 16) = v20 + 1;
    *(_DWORD *)(v43 + 4 * v20 + 32) = v21;
    int64_t v16 = 1 << *(unsigned char *)(v5 + 32);
    if (v4 >= v16) {
      goto LABEL_29;
    }
    uint64_t v22 = *(void *)(v12 + 8 * v17);
    if ((v22 & (1 << v4)) == 0) {
      goto LABEL_30;
    }
    if (*(_DWORD *)(v5 + 36) != v8) {
      goto LABEL_31;
    }
    unint64_t v23 = v22 & (-2 << (v4 & 0x3F));
    if (v23)
    {
      int64_t v16 = __clz(__rbit64(v23)) | v4 & 0xFFFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v24 = v17 + 1;
      unint64_t v25 = (unint64_t)(v16 + 63) >> 6;
      if (v17 + 1 < v25)
      {
        unint64_t v26 = *(void *)(v12 + 8 * v24);
        if (!v26)
        {
          unint64_t v24 = v17 + 2;
          if (v17 + 2 >= v25) {
            goto LABEL_4;
          }
          unint64_t v26 = *(void *)(v12 + 8 * v24);
          if (!v26)
          {
            while (v25 - 3 != v17)
            {
              unint64_t v26 = *(void *)(v14 + 8 * v17++);
              if (v26)
              {
                uint64_t v27 = v4;
                uint64_t v28 = v8;
                uint64_t v29 = v12;
                uint64_t v30 = v13;
                uint64_t v31 = v14;
                uint64_t v32 = v15;
                uint64_t result = sub_251A4ECE4(v27, v28, 0);
                unint64_t v15 = v32;
                uint64_t v14 = v31;
                uint64_t v13 = v30;
                uint64_t v12 = v29;
                uint64_t v6 = v41;
                uint64_t v5 = a1;
                unint64_t v24 = v17 + 2;
                goto LABEL_18;
              }
            }
            uint64_t v33 = v4;
            uint64_t v34 = v12;
            uint64_t v35 = v13;
            uint64_t v36 = v14;
            unint64_t v37 = v15;
            uint64_t result = sub_251A4ECE4(v33, v8, 0);
            unint64_t v15 = v37;
            uint64_t v14 = v36;
            uint64_t v13 = v35;
            uint64_t v12 = v34;
            uint64_t v6 = v41;
            uint64_t v5 = a1;
            goto LABEL_4;
          }
        }
LABEL_18:
        int64_t v16 = __clz(__rbit64(v26)) + (v24 << 6);
      }
    }
LABEL_4:
    char v11 = 0;
    ++v9;
    uint64_t v8 = v13;
    uint64_t v4 = v16;
    if (v9 == v6) {
      return v2;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_251A823E0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v22 = MEMORY[0x263F8EE78];
    uint64_t v4 = v2;
    sub_251F36520();
    uint64_t result = sub_251A8293C(a1);
    uint64_t v5 = result;
    uint64_t v7 = v6;
    uint64_t v8 = 0;
    char v10 = v9 & 1;
    uint64_t v11 = a1 + 64;
    uint64_t v20 = v4;
    uint64_t v21 = v6;
    while (1)
    {
      if (v10)
      {
LABEL_31:
        __break(1u);
        return result;
      }
      if (v5 < 0 || v5 >= 1 << *(unsigned char *)(a1 + 32))
      {
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
        goto LABEL_31;
      }
      unint64_t v14 = (unint64_t)v5 >> 6;
      if ((*(void *)(v11 + 8 * ((unint64_t)v5 >> 6)) & (1 << v5)) == 0) {
        goto LABEL_26;
      }
      if (*(_DWORD *)(a1 + 36) != v7) {
        goto LABEL_27;
      }
      sub_251F36D40();
      sub_251F364F0();
      sub_251F36530();
      sub_251F36540();
      uint64_t result = sub_251F36500();
      int64_t v12 = 1 << *(unsigned char *)(a1 + 32);
      if (v5 >= v12) {
        goto LABEL_28;
      }
      uint64_t v15 = *(void *)(v11 + 8 * v14);
      if ((v15 & (1 << v5)) == 0) {
        goto LABEL_29;
      }
      if (*(_DWORD *)(a1 + 36) != v7) {
        goto LABEL_30;
      }
      unint64_t v16 = v15 & (-2 << (v5 & 0x3F));
      if (v16)
      {
        int64_t v12 = __clz(__rbit64(v16)) | v5 & 0xFFFFFFFFFFFFFFC0;
        uint64_t v13 = v20;
      }
      else
      {
        unint64_t v17 = v14 + 1;
        unint64_t v18 = (unint64_t)(v12 + 63) >> 6;
        uint64_t v13 = v20;
        if (v14 + 1 < v18)
        {
          unint64_t v19 = *(void *)(v11 + 8 * v17);
          if (!v19)
          {
            unint64_t v17 = v14 + 2;
            if (v14 + 2 >= v18) {
              goto LABEL_4;
            }
            unint64_t v19 = *(void *)(v11 + 8 * v17);
            if (!v19)
            {
              while (v18 - 3 != v14)
              {
                unint64_t v19 = *(void *)(a1 + 88 + 8 * v14++);
                if (v19)
                {
                  uint64_t result = sub_251A4ECE4(v5, v7, 0);
                  uint64_t v13 = v20;
                  unint64_t v17 = v14 + 2;
                  goto LABEL_16;
                }
              }
              uint64_t result = sub_251A4ECE4(v5, v7, 0);
              uint64_t v13 = v20;
              goto LABEL_4;
            }
          }
LABEL_16:
          int64_t v12 = __clz(__rbit64(v19)) + (v17 << 6);
        }
      }
LABEL_4:
      char v10 = 0;
      ++v8;
      uint64_t v7 = v21;
      uint64_t v5 = v12;
      if (v8 == v13) {
        return v22;
      }
    }
  }
  return result;
}

void sub_251A82644()
{
  if (*(_WORD *)(v0 + OBJC_IVAR____TtC13HomeDataModel27MockMatterDescriptorCluster_endpointID)
    || (uint64_t v1 = MEMORY[0x2533AC870](v0 + OBJC_IVAR____TtC13HomeDataModel27MockMatterDescriptorCluster_device)) == 0)
  {
    if ((MEMORY[0x263F8EE78] & 0xC000000000000000) != 0 && sub_251F366C0())
    {
      unint64_t v5 = MEMORY[0x263F8EE78];
      sub_251C09B2C(v5);
    }
  }
  else
  {
    uint64_t v2 = (void *)v1;
    swift_beginAccess();
    uint64_t v3 = swift_bridgeObjectRetain();
    unint64_t v4 = sub_251A823E0(v3);
    swift_bridgeObjectRelease();
    sub_251EE0804(v4);

    swift_bridgeObjectRelease();
  }
}

uint64_t sub_251A82754()
{
  uint64_t v1 = MEMORY[0x2533AC870](v0 + OBJC_IVAR____TtC13HomeDataModel27MockMatterDescriptorCluster_device);
  if (!v1) {
    return MEMORY[0x263F8EE88];
  }
  uint64_t v2 = (void *)v1;
  uint64_t v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC13HomeDataModel16MockMatterDevice_mockEndpoints);
  unsigned __int16 v4 = *(_WORD *)(v0 + OBJC_IVAR____TtC13HomeDataModel27MockMatterDescriptorCluster_endpointID);
  swift_beginAccess();
  unint64_t v5 = sub_251B74920(v4, *v3);
  if (!v5)
  {

    return MEMORY[0x263F8EE88];
  }
  uint64_t v6 = v5;
  uint64_t v7 = swift_bridgeObjectRetain();
  uint64_t v8 = sub_251A82124(v7);
  swift_bridgeObjectRelease();
  uint64_t v9 = sub_251EE0834(v8);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return v9;
}

id sub_251A8287C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MockMatterDescriptorCluster();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for MockMatterDescriptorCluster()
{
  return self;
}

uint64_t sub_251A82920()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_251A8293C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 80);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v1 = *(void *)(a1 + 88);
  if (v1)
  {
    uint64_t v2 = 192;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 4) {
    unint64_t v7 = 4;
  }
  unint64_t v8 = v7 - 4;
  uint64_t v9 = (unint64_t *)(a1 + 96);
  uint64_t v2 = 192;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t StaticMediaSystemComponent.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_251F34DA0();
  unsigned __int16 v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t StaticMediaSystemComponent.staticMediaProfile.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for StaticMediaSystemComponent();
  return sub_251A86120(v1 + *(int *)(v3 + 20), a1, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
}

uint64_t type metadata accessor for StaticMediaSystemComponent()
{
  uint64_t result = qword_269B9D470;
  if (!qword_269B9D470) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t StaticMediaSystemComponent.role.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for StaticMediaSystemComponent() + 24));
}

uint64_t StaticMediaSystemComponent.roomIds.getter()
{
  type metadata accessor for StaticMediaSystemComponent();
  return swift_bridgeObjectRetain();
}

uint64_t StaticMediaSystemComponent.accessoryId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for StaticMediaSystemComponent();
  return sub_251A1B128(v1 + *(int *)(v3 + 32), a1, &qword_26B21FF90);
}

uint64_t StaticMediaSystemComponent.hash(into:)(long long *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_251F34DA0();
  sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
  sub_251F35610();
  uint64_t v5 = type metadata accessor for StaticMediaSystemComponent();
  StaticMediaProfile.hash(into:)(a1);
  sub_251F36CB0();
  uint64_t v6 = *(void *)(v1 + *(int *)(v5 + 28));
  swift_bridgeObjectRetain();
  sub_251A54708(a1, v6);
  swift_bridgeObjectRelease();
  uint64_t v7 = v2 + *(int *)(v5 + 32);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v8 - 8);
  unint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1B128(v7, (uint64_t)v10, &qword_26B21FF90);
  uint64_t v11 = *(void *)(v4 - 8);
  uint64_t v12 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, v4);
  if (v12 == 1) {
    return sub_251F36CC0();
  }
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v16 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v15, v10, v4);
  sub_251F36CC0();
  sub_251F35610();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v15, v4);
}

unint64_t sub_251A82DA0()
{
  unint64_t result = 25705;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000012;
      break;
    case 2:
      unint64_t result = 1701605234;
      break;
    case 3:
      unint64_t result = 0x7364496D6F6F72;
      break;
    case 4:
      unint64_t result = 0x726F737365636361;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_251A82E44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251A8BB08(a1, a2);
  *a3 = result;
  return result;
}

void sub_251A82E6C(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_251A82E78(uint64_t a1)
{
  unint64_t v2 = sub_251A860CC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251A82EB4(uint64_t a1)
{
  unint64_t v2 = sub_251A860CC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticMediaSystemComponent.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D360);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251A860CC();
  sub_251F36DA0();
  LOBYTE(v13) = 0;
  sub_251F34DA0();
  sub_251A1A8EC(&qword_26B21E348);
  sub_251F36A20();
  if (!v2)
  {
    uint64_t v11 = type metadata accessor for StaticMediaSystemComponent();
    LOBYTE(v13) = 1;
    type metadata accessor for StaticMediaProfile();
    sub_251A8BFA4(&qword_269B9D370, (void (*)(uint64_t))type metadata accessor for StaticMediaProfile);
    sub_251F36A20();
    uint64_t v9 = v11;
    uint64_t v13 = *(void *)(v3 + *(int *)(v11 + 24));
    char v12 = 2;
    type metadata accessor for HMMediaSystemRoleType(0);
    sub_251A8BFA4(&qword_269B9D378, type metadata accessor for HMMediaSystemRoleType);
    sub_251F36A20();
    uint64_t v13 = *(void *)(v3 + *(int *)(v9 + 28));
    char v12 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC40);
    sub_251A1E490(&qword_269B9CC88, &qword_26B21E348);
    sub_251F36A20();
    LOBYTE(v13) = 4;
    sub_251F36970();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t StaticMediaSystemComponent.hashValue.getter()
{
  sub_251F36CA0();
  uint64_t v1 = sub_251F34DA0();
  sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
  sub_251F35610();
  uint64_t v2 = type metadata accessor for StaticMediaSystemComponent();
  StaticMediaProfile.hash(into:)(v13);
  sub_251F36CB0();
  sub_251A54708(v13, *(void *)(v0 + *(int *)(v2 + 28)));
  uint64_t v3 = v0 + *(int *)(v2 + 32);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1B128(v3, (uint64_t)v6, &qword_26B21FF90);
  uint64_t v7 = *(void *)(v1 - 8);
  uint64_t v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v6, 1, v1);
  if (v8 == 1)
  {
    sub_251F36CC0();
  }
  else
  {
    MEMORY[0x270FA5388](v8);
    unint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v6, v1);
    sub_251F36CC0();
    sub_251F35610();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v1);
  }
  return sub_251F36D00();
}

uint64_t StaticMediaSystemComponent.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v3 = type metadata accessor for StaticMediaProfile();
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D380);
  uint64_t v30 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for StaticMediaSystemComponent();
  MEMORY[0x270FA5388](v8);
  unint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251A860CC();
  uint64_t v31 = v7;
  uint64_t v11 = (uint64_t)v33;
  sub_251F36D90();
  if (v11) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  uint64_t v25 = v3;
  unint64_t v26 = v5;
  uint64_t v33 = a1;
  uint64_t v12 = (int *)v8;
  uint64_t v27 = v10;
  uint64_t v13 = sub_251F34DA0();
  uint64_t v28 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  LOBYTE(v35) = 0;
  uint64_t v14 = sub_251A1A8EC(&qword_269B9CC80);
  uint64_t v15 = v31;
  uint64_t v16 = v32;
  sub_251F36880();
  uint64_t v18 = (uint64_t)v27;
  (*(void (**)(void))(v28 + 32))();
  LOBYTE(v35) = 1;
  sub_251A8BFA4(&qword_269B9D388, (void (*)(uint64_t))type metadata accessor for StaticMediaProfile);
  uint64_t v19 = (uint64_t)v26;
  sub_251F36880();
  uint64_t v25 = v14;
  uint64_t v20 = v12;
  sub_251A8C02C(v19, v18 + v12[5], (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
  type metadata accessor for HMMediaSystemRoleType(0);
  unint64_t v26 = 0;
  char v34 = 2;
  sub_251A8BFA4(&qword_269B9D390, type metadata accessor for HMMediaSystemRoleType);
  uint64_t v21 = v26;
  sub_251F36880();
  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v30 + 8))(v15, v16);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v33);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 8))(v18, v13);
  }
  else
  {
    *(void *)(v18 + v12[6]) = v35;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CC40);
    char v34 = 3;
    sub_251A1E490(&qword_269B9CC78, &qword_269B9CC80);
    sub_251F36880();
    *(void *)(v18 + v12[7]) = v35;
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    MEMORY[0x270FA5388](v22 - 8);
    unint64_t v24 = (char *)&v25 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
    LOBYTE(v35) = 4;
    sub_251F367D0();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v15, v16);
    sub_251A4ECF0((uint64_t)v24, v18 + v20[8], &qword_26B21FF90);
    sub_251A86120(v18, v29, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v33);
    return sub_251A88B58(v18, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent);
  }
}

uint64_t sub_251A83A80(long long *a1, uint64_t a2)
{
  uint64_t v5 = sub_251F34DA0();
  sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
  sub_251F35610();
  StaticMediaProfile.hash(into:)(a1);
  sub_251F36CB0();
  sub_251A54708(a1, *(void *)(v2 + *(int *)(a2 + 28)));
  uint64_t v6 = v2 + *(int *)(a2 + 32);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1B128(v6, (uint64_t)v9, &qword_26B21FF90);
  uint64_t v10 = *(void *)(v5 - 8);
  uint64_t v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, v5);
  if (v11 == 1) {
    return sub_251F36CC0();
  }
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v15 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v14, v9, v5);
  sub_251F36CC0();
  sub_251F35610();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v14, v5);
}

uint64_t sub_251A83C7C(uint64_t a1, uint64_t a2)
{
  sub_251F36CA0();
  uint64_t v4 = sub_251F34DA0();
  sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
  sub_251F35610();
  StaticMediaProfile.hash(into:)(v15);
  sub_251F36CB0();
  sub_251A54708(v15, *(void *)(v2 + *(int *)(a2 + 28)));
  uint64_t v5 = v2 + *(int *)(a2 + 32);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A1B128(v5, (uint64_t)v8, &qword_26B21FF90);
  uint64_t v9 = *(void *)(v4 - 8);
  uint64_t v10 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v4);
  if (v10 == 1)
  {
    sub_251F36CC0();
  }
  else
  {
    MEMORY[0x270FA5388](v10);
    uint64_t v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v12, v8, v4);
    sub_251F36CC0();
    sub_251F35610();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v4);
  }
  return sub_251F36D00();
}

uint64_t _s13HomeDataModel20StaticSoftwareUpdateV2id10Foundation4UUIDVvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_251F34DA0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t sub_251A83EE8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticMediaSystemComponent.init(from:)(a1, a2);
}

uint64_t sub_251A83F00(void *a1)
{
  return StaticMediaSystemComponent.encode(to:)(a1);
}

uint64_t sub_251A83F18@<X0>(void *a1@<X0>, void *a2@<X1>, void *a3@<X2>, unsigned __int8 *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v61 = a6;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E850);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for StaticMediaProfile();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  unint64_t v17 = (char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = (int *)type metadata accessor for StaticMediaSystemComponent();
  uint64_t v60 = *((void *)v18 - 1);
  MEMORY[0x270FA5388](v18);
  uint64_t v59 = (char *)&v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned __int8 v20 = *a4;
  id v21 = objc_msgSend(a1, sel_mediaProfile);
  if (!v21)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    goto LABEL_5;
  }
  unsigned __int8 v62 = v20;
  id v22 = v21;
  id v23 = a3;
  sub_251D3D7D0(v22, a2, v23, &v62, a5, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) != 1)
  {
    uint64_t v28 = (uint64_t)v17;
    sub_251A8C02C((uint64_t)v13, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
    id v29 = objc_msgSend(a1, sel_uniqueIdentifier);
    uint64_t v30 = (uint64_t)v59;
    sub_251F34D80();

    uint64_t v27 = v18;
    sub_251A86120(v28, v30 + v18[5], (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
    id v31 = objc_msgSend(a1, sel_role);
    id v32 = objc_msgSend(v31, sel_type);

    *(void *)(v30 + v18[6]) = v32;
    id v33 = objc_msgSend(v22, sel_accessory);
    if (v33)
    {
      char v34 = v33;
      id v35 = objc_msgSend(v33, sel_room);
      if (v35)
      {
        uint64_t v36 = v35;
        id v55 = v35;
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB80);
        id v56 = v34;
        uint64_t v37 = sub_251F34DA0();
        uint64_t v57 = v28;
        uint64_t v58 = v37;
        uint64_t v38 = *(void *)(v37 - 8);
        unint64_t v39 = (*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
        uint64_t v40 = swift_allocObject();
        *(_OWORD *)(v40 + 16) = xmmword_251F38650;
        unint64_t v54 = v40 + v39;
        id v41 = objc_msgSend(v36, sel_uniqueIdentifier);
        uint64_t v53 = (uint64_t)&v53;
        MEMORY[0x270FA5388](v41);
        uint64_t v43 = (char *)&v53 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
        sub_251F34D80();

        uint64_t v30 = (uint64_t)v59;
        (*(void (**)(unint64_t, char *, uint64_t))(v38 + 32))(v54, v43, v58);
        uint64_t v44 = sub_251C08E40(v40);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        *(void *)(v30 + v27[7]) = v44;
        uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
        MEMORY[0x270FA5388](v45 - 8);
        uint64_t v47 = (char *)&v53 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
        id v48 = v56;
        id v49 = objc_msgSend(v56, sel_uniqueIdentifier);
        sub_251F34D80();

        sub_251A88B58(v57, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v47, 0, 1, v58);
        sub_251A4ECF0((uint64_t)v47, v30 + v27[8], &qword_26B21FF90);
LABEL_11:
        uint64_t v26 = v60;
        uint64_t v25 = v61;
        sub_251A8C02C(v30, v61, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent);
        uint64_t v24 = 0;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v26 + 56))(v25, v24, 1, v27);
      }
    }
    sub_251A88B58(v28, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
    *(void *)(v30 + v18[7]) = MEMORY[0x263F8EE88];
    uint64_t v50 = v30 + v18[8];
    uint64_t v51 = sub_251F34DA0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v50, 1, 1, v51);
    goto LABEL_11;
  }

  sub_251A1B064((uint64_t)v13, &qword_26B21E850);
LABEL_5:
  uint64_t v24 = 1;
  uint64_t v26 = v60;
  uint64_t v25 = v61;
  uint64_t v27 = v18;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v26 + 56))(v25, v24, 1, v27);
}

uint64_t sub_251A8457C()
{
  return sub_251F35A50();
}

uint64_t sub_251A8460C()
{
  return sub_251F359F0();
}

void StaticMediaSystemComponent.PlaybackState.init(from:specialMediaCategory:)(id a1@<X0>, unsigned __int16 *a2@<X1>, unsigned char *a3@<X8>)
{
  unsigned int v5 = *a2;
  if ((~v5 & 0xFEFC) == 0) {
    goto LABEL_2;
  }
  unsigned int v7 = v5 >> 14;
  if (v5 >> 14)
  {
    if (v7 != 1)
    {
      if (v7 != 2) {
        goto LABEL_2;
      }
      if (v5 == 32769) {
        goto LABEL_10;
      }
      if (v5 != 33024) {
        goto LABEL_2;
      }
    }
    if ((objc_msgSend(a1, sel_capability) & 1) == 0)
    {
LABEL_2:

      LOBYTE(v6) = 6;
      goto LABEL_3;
    }
  }
LABEL_10:
  id v8 = objc_msgSend(a1, sel_mediaSession);
  if (!v8) {
    goto LABEL_2;
  }
  uint64_t v9 = v8;
  id v10 = objc_msgSend(v8, sel_playbackState);

  if ((unint64_t)v10 >= 7) {
    LOBYTE(v6) = 0;
  }
  else {
    unint64_t v6 = 0x5000403020100uLL >> (8 * v10);
  }
LABEL_3:
  *a3 = v6;
}

void StaticMediaSystemComponent.PlaybackState.init(from:)(void *a1@<X0>, unsigned char *a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_mediaSession);
  if (v4)
  {
    unsigned int v5 = v4;
    id v6 = objc_msgSend(v4, sel_playbackState);

    if ((unint64_t)v6 >= 7) {
      LOBYTE(v7) = 0;
    }
    else {
      unint64_t v7 = 0x5000403020100uLL >> (8 * v6);
    }
  }
  else
  {

    LOBYTE(v7) = 6;
  }
  *a2 = v7;
}

uint64_t sub_251A84814()
{
  switch(*v0)
  {
    case 1:
      uint64_t v3 = "HFMediaAccessoryStateDescriptionPlaying";
      goto LABEL_10;
    case 2:
      uint64_t v1 = 0xD000000000000026;
      uint64_t v2 = "HFMediaAccessoryStateDescriptionPaused";
      goto LABEL_7;
    case 3:
      uint64_t v3 = "HFMediaAccessoryStateDescriptionStopped";
      goto LABEL_10;
    case 4:
      uint64_t v1 = 0xD00000000000002BLL;
      uint64_t v2 = "HFMediaAccessoryStateDescriptionInterrupted";
      goto LABEL_7;
    case 5:
      uint64_t v3 = "HFMediaAccessoryStateDescriptionLoading";
LABEL_10:
      uint64_t result = static String.hfLocalized(_:)(0xD000000000000027, (unint64_t)(v3 - 32) | 0x8000000000000000);
      break;
    default:
      uint64_t v1 = 0xD000000000000025;
      uint64_t v2 = "HFStatusDescriptionSpeaker_NotPlaying";
LABEL_7:
      uint64_t result = static String.hfLocalized(_:)(v1, (unint64_t)(v2 - 32) | 0x8000000000000000);
      break;
  }
  return result;
}

BOOL static StaticMediaSystemComponent.PlaybackState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t StaticMediaSystemComponent.PlaybackState.hash(into:)()
{
  return sub_251F36CB0();
}

uint64_t sub_251A84914()
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x676E6979616C70;
      break;
    case 2:
      uint64_t result = 0x646573756170;
      break;
    case 3:
      uint64_t result = 0x646570706F7473;
      break;
    case 4:
      uint64_t result = 0x7075727265746E69;
      break;
    case 5:
      uint64_t result = 0x676E6964616F6CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_251A849D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251A8BD10(a1, a2);
  *a3 = result;
  return result;
}

void sub_251A849FC(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_251A84A08(uint64_t a1)
{
  unint64_t v2 = sub_251A86188();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251A84A44(uint64_t a1)
{
  unint64_t v2 = sub_251A86188();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251A84A80()
{
  return 0;
}

void sub_251A84A8C(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_251A84A98(uint64_t a1)
{
  unint64_t v2 = sub_251A86230();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251A84AD4(uint64_t a1)
{
  unint64_t v2 = sub_251A86230();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251A84B10(uint64_t a1)
{
  unint64_t v2 = sub_251A861DC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251A84B4C(uint64_t a1)
{
  unint64_t v2 = sub_251A861DC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251A84B88@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_251A84BB8(uint64_t a1)
{
  unint64_t v2 = sub_251A862D8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251A84BF4(uint64_t a1)
{
  unint64_t v2 = sub_251A862D8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251A84C30(uint64_t a1)
{
  unint64_t v2 = sub_251A8632C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251A84C6C(uint64_t a1)
{
  unint64_t v2 = sub_251A8632C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251A84CA8(uint64_t a1)
{
  unint64_t v2 = sub_251A86284();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251A84CE4(uint64_t a1)
{
  unint64_t v2 = sub_251A86284();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251A84D20(uint64_t a1)
{
  unint64_t v2 = sub_251A86380();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251A84D5C(uint64_t a1)
{
  unint64_t v2 = sub_251A86380();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticMediaSystemComponent.PlaybackState.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D398);
  uint64_t v40 = *(void *)(v3 - 8);
  uint64_t v41 = v3;
  MEMORY[0x270FA5388](v3);
  unint64_t v39 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D3A0);
  uint64_t v37 = *(void *)(v5 - 8);
  uint64_t v38 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v36 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D3A8);
  uint64_t v34 = *(void *)(v7 - 8);
  uint64_t v35 = v7;
  MEMORY[0x270FA5388](v7);
  id v33 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D3B0);
  uint64_t v31 = *(void *)(v9 - 8);
  uint64_t v32 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v30 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D3B8);
  uint64_t v28 = *(void *)(v11 - 8);
  uint64_t v29 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D3C0);
  uint64_t v27 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D3C8);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v42 = v17;
  uint64_t v43 = v18;
  MEMORY[0x270FA5388](v17);
  unsigned __int8 v20 = (char *)&v27 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251A86188();
  sub_251F36DA0();
  switch(v21)
  {
    case 1:
      char v45 = 1;
      sub_251A8632C();
      uint64_t v22 = v42;
      sub_251F36900();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v29);
      return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v20, v22);
    case 2:
      char v46 = 2;
      sub_251A862D8();
      id v23 = v30;
      uint64_t v22 = v42;
      sub_251F36900();
      uint64_t v25 = v31;
      uint64_t v24 = v32;
      goto LABEL_8;
    case 3:
      char v47 = 3;
      sub_251A86284();
      id v23 = v33;
      uint64_t v22 = v42;
      sub_251F36900();
      uint64_t v25 = v34;
      uint64_t v24 = v35;
      goto LABEL_8;
    case 4:
      char v48 = 4;
      sub_251A86230();
      id v23 = v36;
      uint64_t v22 = v42;
      sub_251F36900();
      uint64_t v25 = v37;
      uint64_t v24 = v38;
      goto LABEL_8;
    case 5:
      char v49 = 5;
      sub_251A861DC();
      id v23 = v39;
      uint64_t v22 = v42;
      sub_251F36900();
      uint64_t v25 = v40;
      uint64_t v24 = v41;
LABEL_8:
      (*(void (**)(char *, uint64_t))(v25 + 8))(v23, v24);
      break;
    default:
      char v44 = 0;
      sub_251A86380();
      uint64_t v22 = v42;
      sub_251F36900();
      (*(void (**)(char *, uint64_t))(v27 + 8))(v16, v14);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v20, v22);
}

uint64_t StaticMediaSystemComponent.PlaybackState.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t StaticMediaSystemComponent.PlaybackState.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v63 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D408);
  uint64_t v51 = *(void *)(v3 - 8);
  uint64_t v52 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v66 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D410);
  uint64_t v56 = *(void *)(v61 - 8);
  MEMORY[0x270FA5388](v61);
  v65 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D418);
  uint64_t v59 = *(void *)(v6 - 8);
  uint64_t v60 = v6;
  MEMORY[0x270FA5388](v6);
  char v64 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D420);
  uint64_t v57 = *(void *)(v8 - 8);
  uint64_t v58 = v8;
  MEMORY[0x270FA5388](v8);
  unsigned __int8 v62 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D428);
  uint64_t v54 = *(void *)(v10 - 8);
  uint64_t v55 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D430);
  uint64_t v53 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D438);
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = a1[3];
  uint64_t v67 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v20);
  sub_251A86188();
  uint64_t v21 = v68;
  sub_251F36D90();
  if (v21) {
    goto LABEL_6;
  }
  uint64_t v49 = v13;
  uint64_t v50 = v15;
  uint64_t v22 = v12;
  uint64_t v24 = v64;
  id v23 = v65;
  uint64_t v25 = v66;
  uint64_t v68 = v16;
  uint64_t v26 = v19;
  uint64_t v27 = sub_251F368E0();
  if (*(void *)(v27 + 16) != 1)
  {
    uint64_t v34 = sub_251F36490();
    swift_allocError();
    uint64_t v36 = v35;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D440);
    *uint64_t v36 = &type metadata for StaticMediaSystemComponent.PlaybackState;
    uint64_t v37 = v68;
    sub_251F36780();
    sub_251F36480();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v34 - 8) + 104))(v36, *MEMORY[0x263F8DCB0], v34);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v26, v37);
LABEL_6:
    uint64_t v32 = (uint64_t)v67;
    return __swift_destroy_boxed_opaque_existential_0(v32);
  }
  char v28 = *(unsigned char *)(v27 + 32);
  switch(v28)
  {
    case 1:
      char v70 = 1;
      sub_251A8632C();
      uint64_t v39 = v68;
      sub_251F36770();
      (*(void (**)(char *, uint64_t))(v54 + 8))(v22, v55);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v26, v39);
      uint64_t v32 = (uint64_t)v67;
      id v33 = v63;
      break;
    case 2:
      char v40 = *(unsigned char *)(v27 + 32);
      char v71 = 2;
      sub_251A862D8();
      uint64_t v41 = v62;
      uint64_t v42 = v68;
      sub_251F36770();
      uint64_t v44 = v57;
      uint64_t v43 = v58;
      goto LABEL_11;
    case 3:
      char v40 = *(unsigned char *)(v27 + 32);
      char v72 = 3;
      sub_251A86284();
      uint64_t v41 = v24;
      uint64_t v42 = v68;
      sub_251F36770();
      uint64_t v44 = v59;
      uint64_t v43 = v60;
LABEL_11:
      (*(void (**)(char *, uint64_t))(v44 + 8))(v41, v43);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v26, v42);
      uint64_t v32 = (uint64_t)v67;
      id v33 = v63;
      char v28 = v40;
      break;
    case 4:
      char v45 = *(unsigned char *)(v27 + 32);
      char v73 = 4;
      sub_251A86230();
      uint64_t v46 = v68;
      sub_251F36770();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v23, v61);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v26, v46);
      uint64_t v32 = (uint64_t)v67;
      id v33 = v63;
      char v28 = v45;
      break;
    case 5:
      v65 = (char *)*(unsigned __int8 *)(v27 + 32);
      char v74 = 5;
      sub_251A861DC();
      uint64_t v47 = v68;
      sub_251F36770();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v25, v52);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v26, v47);
      uint64_t v32 = (uint64_t)v67;
      id v33 = v63;
      char v28 = (char)v65;
      break;
    default:
      char v29 = *(unsigned char *)(v27 + 32);
      char v69 = 0;
      sub_251A86380();
      uint64_t v30 = v50;
      uint64_t v31 = v68;
      sub_251F36770();
      (*(void (**)(char *, uint64_t))(v53 + 8))(v30, v49);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v26, v31);
      uint64_t v32 = (uint64_t)v67;
      id v33 = v63;
      char v28 = v29;
      break;
  }
  *id v33 = v28;
  return __swift_destroy_boxed_opaque_existential_0(v32);
}

uint64_t sub_251A85C40@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return StaticMediaSystemComponent.PlaybackState.init(from:)(a1, a2);
}

uint64_t sub_251A85C58(void *a1)
{
  return StaticMediaSystemComponent.PlaybackState.encode(to:)(a1);
}

BOOL _s13HomeDataModel26StaticMediaSystemComponentV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((sub_251F34D70() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = (int *)type metadata accessor for StaticMediaSystemComponent();
  if ((static StaticMediaProfile.== infix(_:_:)(a1 + v4[5], a2 + v4[5]) & 1) == 0
    || *(void *)(a1 + v4[6]) != *(void *)(a2 + v4[6])
    || (sub_251B04848(*(void *)(a1 + v4[7]), *(void *)(a2 + v4[7])) & 1) == 0)
  {
    return 0;
  }
  uint64_t v5 = a1 + v4[8];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  v28[3] = v28;
  uint64_t v7 = *(void *)(*(void *)(v6 - 8) + 64);
  MEMORY[0x270FA5388](v6 - 8);
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v9 = (char *)v28 - v8;
  sub_251A1B128(v5, (uint64_t)v28 - v8, &qword_26B21FF90);
  v28[2] = v28;
  uint64_t v10 = MEMORY[0x270FA5388](a2 + v4[8]);
  uint64_t v11 = (char *)v28 - v8;
  sub_251A1B128(v10, (uint64_t)v28 - v8, &qword_26B21FF90);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E6B8);
  v28[1] = v28;
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v15 = (char *)v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (uint64_t)&v15[*(int *)(v13 + 56)];
  sub_251A1B128((uint64_t)v28 - v8, (uint64_t)v15, &qword_26B21FF90);
  sub_251A1B128((uint64_t)v28 - v8, v16, &qword_26B21FF90);
  uint64_t v17 = sub_251F34DA0();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48);
  uint64_t v20 = v19(v15, 1, v17);
  if (v20 == 1)
  {
    sub_251A1B064((uint64_t)v28 - v8, &qword_26B21FF90);
    sub_251A1B064((uint64_t)v28 - v8, &qword_26B21FF90);
    if (v19((char *)v16, 1, v17) == 1)
    {
      sub_251A1B064((uint64_t)v15, &qword_26B21FF90);
      return 1;
    }
    goto LABEL_10;
  }
  v28[0] = v28;
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)v28 - v8;
  sub_251A1B128((uint64_t)v15, (uint64_t)v28 - v8, &qword_26B21FF90);
  uint64_t v23 = v19((char *)v16, 1, v17);
  if (v23 == 1)
  {
    sub_251A1B064((uint64_t)v28 - v8, &qword_26B21FF90);
    sub_251A1B064((uint64_t)v28 - v8, &qword_26B21FF90);
    (*(void (**)(char *, uint64_t))(v18 + 8))((char *)v28 - v8, v17);
LABEL_10:
    sub_251A1B064((uint64_t)v15, &qword_26B21E6B8);
    return 0;
  }
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = (char *)v28 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 32))(v25, v16, v17);
  sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
  char v26 = sub_251F35650();
  uint64_t v27 = *(void (**)(char *, uint64_t))(v18 + 8);
  v27(v25, v17);
  sub_251A1B064((uint64_t)v11, &qword_26B21FF90);
  sub_251A1B064((uint64_t)v9, &qword_26B21FF90);
  v27(v22, v17);
  sub_251A1B064((uint64_t)v15, &qword_26B21FF90);
  return (v26 & 1) != 0;
}

unint64_t sub_251A860CC()
{
  unint64_t result = qword_269B9D368;
  if (!qword_269B9D368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9D368);
  }
  return result;
}

uint64_t sub_251A86120(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_251A86188()
{
  unint64_t result = qword_269B9D3D0;
  if (!qword_269B9D3D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9D3D0);
  }
  return result;
}

unint64_t sub_251A861DC()
{
  unint64_t result = qword_269B9D3D8;
  if (!qword_269B9D3D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9D3D8);
  }
  return result;
}

unint64_t sub_251A86230()
{
  unint64_t result = qword_269B9D3E0;
  if (!qword_269B9D3E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9D3E0);
  }
  return result;
}

unint64_t sub_251A86284()
{
  unint64_t result = qword_269B9D3E8;
  if (!qword_269B9D3E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9D3E8);
  }
  return result;
}

unint64_t sub_251A862D8()
{
  unint64_t result = qword_269B9D3F0;
  if (!qword_269B9D3F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9D3F0);
  }
  return result;
}

unint64_t sub_251A8632C()
{
  unint64_t result = qword_269B9D3F8;
  if (!qword_269B9D3F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9D3F8);
  }
  return result;
}

unint64_t sub_251A86380()
{
  unint64_t result = qword_269B9D400;
  if (!qword_269B9D400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9D400);
  }
  return result;
}

uint64_t sub_251A863D4()
{
  return sub_251A8BFA4(&qword_269B9D448, (void (*)(uint64_t))type metadata accessor for StaticMediaSystemComponent);
}

uint64_t sub_251A8641C()
{
  return sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
}

uint64_t sub_251A86444()
{
  return sub_251A8BFA4(&qword_269B9D450, type metadata accessor for HMMediaSystemRoleType);
}

uint64_t sub_251A8648C()
{
  return sub_251A8BFA4(&qword_269B9D458, type metadata accessor for HMMediaSystemRoleType);
}

unint64_t sub_251A864D8()
{
  unint64_t result = qword_269B9D460;
  if (!qword_269B9D460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9D460);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for StaticMediaSystemComponent(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v27 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    char v28 = (void *)(v27 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return v28;
  }
  uint64_t v7 = sub_251F34DA0();
  uint64_t v107 = *(void *)(v7 - 8);
  unint64_t v8 = *(void (**)(char *, char *, uint64_t))(v107 + 16);
  v8(a1, a2, v7);
  v101 = a3;
  v102 = a2;
  uint64_t v9 = a3[5];
  v103 = a1;
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  v108 = v8;
  uint64_t v109 = v7;
  v8(&a1[v9], &a2[v9], v7);
  uint64_t v12 = (int *)type metadata accessor for StaticMediaProfile();
  uint64_t v13 = v12[5];
  uint64_t v14 = &v10[v13];
  uint64_t v15 = &v11[v13];
  uint64_t v16 = *((void *)v15 + 1);
  *(void *)uint64_t v14 = *(void *)v15;
  *((void *)v14 + 1) = v16;
  *(void *)&v10[v12[6]] = *(void *)&v11[v12[6]];
  uint64_t v17 = v12[7];
  uint64_t v18 = &v10[v17];
  uint64_t v19 = &v11[v17];
  uint64_t v20 = *((void *)v19 + 1);
  *(void *)uint64_t v18 = *(void *)v19;
  *((void *)v18 + 1) = v20;
  uint64_t v21 = v12[8];
  __dst = &v10[v21];
  v106 = v12;
  uint64_t v22 = &v11[v21];
  uint64_t v23 = sub_251F34D20();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v100 = v23;
  uint64_t v99 = v24;
  if (v25(v22, 1, v23))
  {
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    memcpy(__dst, v22, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v24 + 16))(__dst, v22, v23);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(__dst, 0, 1, v23);
  }
  uint64_t v29 = v106[9];
  uint64_t v30 = &v10[v29];
  uint64_t v31 = &v11[v29];
  uint64_t v32 = *((void *)v31 + 1);
  *(void *)uint64_t v30 = *(void *)v31;
  *((void *)v30 + 1) = v32;
  v10[v106[10]] = v11[v106[10]];
  v10[v106[11]] = v11[v106[11]];
  v10[v106[12]] = v11[v106[12]];
  v10[v106[13]] = v11[v106[13]];
  uint64_t v33 = v106[14];
  uint64_t v34 = &v10[v33];
  uint64_t v35 = &v11[v33];
  swift_bridgeObjectRetain();
  v108(v34, v35, v109);
  v10[v106[15]] = v11[v106[15]];
  v10[v106[16]] = v11[v106[16]];
  *(void *)&v10[v106[17]] = *(void *)&v11[v106[17]];
  uint64_t v36 = v106[18];
  uint64_t v37 = &v10[v36];
  uint64_t v38 = &v11[v36];
  uint64_t v39 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  uint64_t v40 = *(void *)(v39 - 8);
  uint64_t v41 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48);
  swift_bridgeObjectRetain();
  if (v41(v38, 1, v39))
  {
    uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F090);
    memcpy(v37, v38, *(void *)(*(void *)(v42 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v108(v37, v38, v109);
    }
    else
    {
      uint64_t v43 = *((void *)v38 + 1);
      *(void *)uint64_t v37 = *(void *)v38;
      *((void *)v37 + 1) = v43;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
  }
  v10[v106[19]] = v11[v106[19]];
  v10[v106[20]] = v11[v106[20]];
  uint64_t v44 = v106[21];
  char v45 = &v10[v44];
  uint64_t v46 = &v11[v44];
  uint64_t v47 = *((void *)v46 + 1);
  *(void *)char v45 = *(void *)v46;
  *((void *)v45 + 1) = v47;
  *(_WORD *)&v10[v106[22]] = *(_WORD *)&v11[v106[22]];
  *(void *)&v10[v106[23]] = *(void *)&v11[v106[23]];
  uint64_t v48 = v106[24];
  uint64_t v49 = &v10[v48];
  uint64_t v50 = &v11[v48];
  uint64_t v51 = type metadata accessor for StaticSoftwareUpdate(0);
  uint64_t v52 = *(void *)(v51 - 8);
  uint64_t v53 = *(unsigned int (**)(char *, uint64_t, int *))(v52 + 48);
  uint64_t v54 = (int *)v51;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v53(v50, 1, v54))
  {
    uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
    memcpy(v49, v50, *(void *)(*(void *)(v55 - 8) + 64));
    uint64_t v56 = v102;
    char v28 = v103;
    uint64_t v57 = v101;
    goto LABEL_27;
  }
  uint64_t v98 = v52;
  v108(v49, v50, v109);
  uint64_t v58 = v54[5];
  uint64_t v59 = &v49[v58];
  uint64_t v60 = &v50[v58];
  uint64_t v61 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  __dsta = v54;
  if (EnumCaseMultiPayload != 2)
  {
    if (EnumCaseMultiPayload != 1)
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
      }
      else
      {
        v108(v59, v60, v109);
        uint64_t v63 = (int *)type metadata accessor for StaticHH2Update(0);
        v59[v63[5]] = v60[v63[5]];
        uint64_t v64 = v63[6];
        v65 = &v59[v64];
        uint64_t v66 = &v60[v64];
        uint64_t v68 = *(void *)v66;
        uint64_t v67 = *((void *)v66 + 1);
        *(void *)v65 = v68;
        *((void *)v65 + 1) = v67;
        uint64_t v69 = v63[7];
        char v70 = &v59[v69];
        char v71 = &v60[v69];
        v70[8] = v71[8];
        *(void *)char v70 = *(void *)v71;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
      uint64_t v56 = v102;
      char v28 = v103;
      uint64_t v57 = v101;
      unint64_t v80 = v49;
      goto LABEL_26;
    }
    uint64_t v97 = v49;
    uint64_t v77 = *((void *)v60 + 1);
    *(void *)uint64_t v59 = *(void *)v60;
    *((void *)v59 + 1) = v77;
    updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
    uint64_t v78 = updated[5];
    uint64_t v75 = &v59[v78];
    v76 = &v60[v78];
    swift_bridgeObjectRetain();
    if (v25(v76, 1, v100)) {
      goto LABEL_21;
    }
LABEL_24:
    (*(void (**)(char *, char *, uint64_t))(v99 + 16))(v75, v76, v100);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v99 + 56))(v75, 0, 1, v100);
    goto LABEL_25;
  }
  uint64_t v97 = v49;
  uint64_t v72 = *((void *)v60 + 1);
  *(void *)uint64_t v59 = *(void *)v60;
  *((void *)v59 + 1) = v72;
  updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
  uint64_t v74 = updated[5];
  uint64_t v75 = &v59[v74];
  v76 = &v60[v74];
  swift_bridgeObjectRetain();
  if (!v25(v76, 1, v100)) {
    goto LABEL_24;
  }
LABEL_21:
  uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  memcpy(v75, v76, *(void *)(*(void *)(v79 - 8) + 64));
LABEL_25:
  uint64_t v81 = updated[6];
  uint64_t v82 = &v59[v81];
  v83 = &v60[v81];
  uint64_t v84 = *((void *)v83 + 1);
  *(void *)uint64_t v82 = *(void *)v83;
  *((void *)v82 + 1) = v84;
  uint64_t v85 = updated[7];
  v86 = &v59[v85];
  v87 = &v60[v85];
  uint64_t v88 = *((void *)v87 + 1);
  *(void *)v86 = *(void *)v87;
  *((void *)v86 + 1) = v88;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
  v59[*(int *)(v89 + 48)] = v60[*(int *)(v89 + 48)];
  swift_storeEnumTagMultiPayload();
  uint64_t v56 = v102;
  char v28 = v103;
  uint64_t v57 = v101;
  unint64_t v80 = v97;
  uint64_t v52 = v98;
LABEL_26:
  (*(void (**)(char *, void, uint64_t, int *))(v52 + 56))(v80, 0, 1, __dsta);
LABEL_27:
  v10[v106[25]] = v11[v106[25]];
  uint64_t v90 = v57[7];
  *(void *)((char *)v28 + v57[6]) = *(void *)((char *)v56 + v57[6]);
  *(void *)((char *)v28 + v90) = *(void *)((char *)v56 + v90);
  uint64_t v91 = v57[8];
  uint64_t v92 = (char *)v28 + v91;
  v93 = (char *)v56 + v91;
  unint64_t v94 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v107 + 48);
  swift_bridgeObjectRetain();
  if (v94(v93, 1, v109))
  {
    uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(v92, v93, *(void *)(*(void *)(v95 - 8) + 64));
  }
  else
  {
    v108(v92, v93, v109);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v107 + 56))(v92, 0, 1, v109);
  }
  return v28;
}

uint64_t destroy for StaticMediaSystemComponent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_251F34DA0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v21(a1, v4);
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  v21(v6, v4);
  uint64_t v7 = (int *)type metadata accessor for StaticMediaProfile();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = v6 + v7[8];
  uint64_t v9 = sub_251F34D20();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (!v20(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  swift_bridgeObjectRelease();
  v21(v6 + v7[14], v4);
  swift_bridgeObjectRelease();
  uint64_t v11 = v6 + v7[18];
  uint64_t v12 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v11, 1, v12))
  {
    if (swift_getEnumCaseMultiPayload() == 1) {
      v21(v11, v4);
    }
    else {
      swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = v6 + v7[24];
  uint64_t v14 = type metadata accessor for StaticSoftwareUpdate(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v13, 1, v14))
  {
    v21(v13, v4);
    uint64_t v15 = v13 + *(int *)(v14 + 20);
    type metadata accessor for StaticSoftwareUpdate.Kind(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v17 = v15 + *(int *)(type metadata accessor for StaticSoftwareUpdateMetadata(0) + 20);
      if (!v20(v17, 1, v9)) {
        (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v17, v9);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      if (EnumCaseMultiPayload) {
        goto LABEL_16;
      }
      v21(v15, v4);
      type metadata accessor for StaticHH2Update(0);
    }
    swift_bridgeObjectRelease();
  }
LABEL_16:
  swift_bridgeObjectRelease();
  uint64_t v18 = a1 + *(int *)(a2 + 32);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v18, 1, v4);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v21)(v18, v4);
  }
  return result;
}

uint64_t initializeWithCopy for StaticMediaSystemComponent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v104 = *(void *)(v6 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v104 + 16);
  v7(a1, a2, v6);
  v102 = a3;
  uint64_t v103 = a2;
  uint64_t v8 = a3[5];
  uint64_t v105 = a1;
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v110 = v6;
  v108 = v7;
  v7(a1 + v8, a2 + v8, v6);
  uint64_t v11 = (int *)type metadata accessor for StaticMediaProfile();
  uint64_t v12 = v11[5];
  uint64_t v13 = (void *)(v9 + v12);
  uint64_t v14 = (void *)(v10 + v12);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  *(void *)(v9 + v11[6]) = *(void *)(v10 + v11[6]);
  uint64_t v16 = v11[7];
  uint64_t v17 = (void *)(v9 + v16);
  uint64_t v18 = (void *)(v10 + v16);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  uint64_t v109 = v11;
  uint64_t v20 = v11[8];
  __dst = (void *)(v9 + v20);
  uint64_t v21 = (void *)(v10 + v20);
  uint64_t v22 = sub_251F34D20();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v100 = v24;
  uint64_t v101 = v22;
  uint64_t v99 = v23;
  if (v24((char *)v21, 1, v22))
  {
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    memcpy(__dst, v21, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v23 + 16))(__dst, v21, v22);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56))(__dst, 0, 1, v22);
  }
  uint64_t v26 = v109[9];
  uint64_t v27 = (void *)(v9 + v26);
  char v28 = (void *)(v10 + v26);
  uint64_t v29 = v28[1];
  *uint64_t v27 = *v28;
  v27[1] = v29;
  *(unsigned char *)(v9 + v109[10]) = *(unsigned char *)(v10 + v109[10]);
  *(unsigned char *)(v9 + v109[11]) = *(unsigned char *)(v10 + v109[11]);
  *(unsigned char *)(v9 + v109[12]) = *(unsigned char *)(v10 + v109[12]);
  *(unsigned char *)(v9 + v109[13]) = *(unsigned char *)(v10 + v109[13]);
  uint64_t v30 = v109[14];
  uint64_t v31 = v9 + v30;
  uint64_t v32 = v10 + v30;
  swift_bridgeObjectRetain();
  v108(v31, v32, v110);
  *(unsigned char *)(v9 + v109[15]) = *(unsigned char *)(v10 + v109[15]);
  *(unsigned char *)(v9 + v109[16]) = *(unsigned char *)(v10 + v109[16]);
  *(void *)(v9 + v109[17]) = *(void *)(v10 + v109[17]);
  uint64_t v33 = v109[18];
  uint64_t v34 = (void *)(v9 + v33);
  uint64_t v35 = (void *)(v10 + v33);
  uint64_t v36 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  uint64_t v37 = *(void *)(v36 - 8);
  uint64_t v38 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v37 + 48);
  swift_bridgeObjectRetain();
  if (v38(v35, 1, v36))
  {
    uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F090);
    memcpy(v34, v35, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v108((uint64_t)v34, (uint64_t)v35, v110);
    }
    else
    {
      uint64_t v40 = v35[1];
      *uint64_t v34 = *v35;
      v34[1] = v40;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(void *, void, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
  }
  *(unsigned char *)(v9 + v109[19]) = *(unsigned char *)(v10 + v109[19]);
  *(unsigned char *)(v9 + v109[20]) = *(unsigned char *)(v10 + v109[20]);
  uint64_t v41 = v109[21];
  uint64_t v42 = (void *)(v9 + v41);
  uint64_t v43 = (void *)(v10 + v41);
  uint64_t v44 = v43[1];
  *uint64_t v42 = *v43;
  v42[1] = v44;
  *(_WORD *)(v9 + v109[22]) = *(_WORD *)(v10 + v109[22]);
  *(void *)(v9 + v109[23]) = *(void *)(v10 + v109[23]);
  uint64_t v45 = v109[24];
  uint64_t v46 = (char *)(v9 + v45);
  uint64_t v47 = (char *)(v10 + v45);
  uint64_t v48 = type metadata accessor for StaticSoftwareUpdate(0);
  uint64_t v49 = *(void *)(v48 - 8);
  uint64_t v50 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v50(v47, 1, v48))
  {
    uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
    memcpy(v46, v47, *(void *)(*(void *)(v51 - 8) + 64));
    uint64_t v53 = v104;
    uint64_t v52 = v105;
    uint64_t v55 = v102;
    uint64_t v54 = v103;
    uint64_t v56 = v109;
    goto LABEL_26;
  }
  v108((uint64_t)v46, (uint64_t)v47, v110);
  uint64_t v98 = v48;
  uint64_t v57 = *(int *)(v48 + 20);
  __dsta = v46;
  uint64_t v58 = &v46[v57];
  uint64_t v59 = &v47[v57];
  uint64_t v60 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v71 = *((void *)v59 + 1);
    *(void *)uint64_t v58 = *(void *)v59;
    *((void *)v58 + 1) = v71;
    updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
    uint64_t v73 = updated[5];
    uint64_t v74 = &v58[v73];
    uint64_t v75 = &v59[v73];
    swift_bridgeObjectRetain();
    if (v100(v75, 1, v101))
    {
      uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
      memcpy(v74, v75, *(void *)(*(void *)(v76 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v99 + 16))(v74, v75, v101);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v99 + 56))(v74, 0, 1, v101);
    }
  }
  else
  {
    if (EnumCaseMultiPayload != 1)
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64));
      }
      else
      {
        v108((uint64_t)v58, (uint64_t)v59, v110);
        unsigned __int8 v62 = (int *)type metadata accessor for StaticHH2Update(0);
        v58[v62[5]] = v59[v62[5]];
        uint64_t v63 = v62[6];
        uint64_t v64 = &v58[v63];
        v65 = &v59[v63];
        uint64_t v67 = *(void *)v65;
        uint64_t v66 = *((void *)v65 + 1);
        *(void *)uint64_t v64 = v67;
        *((void *)v64 + 1) = v66;
        uint64_t v68 = v62[7];
        uint64_t v69 = &v58[v68];
        char v70 = &v59[v68];
        v69[8] = v70[8];
        *(void *)uint64_t v69 = *(void *)v70;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
      uint64_t v53 = v104;
      uint64_t v52 = v105;
      uint64_t v55 = v102;
      uint64_t v54 = v103;
      goto LABEL_25;
    }
    uint64_t v77 = *((void *)v59 + 1);
    *(void *)uint64_t v58 = *(void *)v59;
    *((void *)v58 + 1) = v77;
    updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
    uint64_t v78 = updated[5];
    uint64_t v79 = &v58[v78];
    unint64_t v80 = &v59[v78];
    swift_bridgeObjectRetain();
    if (v100(v80, 1, v101))
    {
      uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
      memcpy(v79, v80, *(void *)(*(void *)(v81 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v99 + 16))(v79, v80, v101);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v99 + 56))(v79, 0, 1, v101);
    }
  }
  uint64_t v55 = v102;
  uint64_t v82 = updated[6];
  v83 = &v58[v82];
  uint64_t v84 = &v59[v82];
  uint64_t v85 = *((void *)v84 + 1);
  *(void *)v83 = *(void *)v84;
  *((void *)v83 + 1) = v85;
  uint64_t v86 = updated[7];
  v87 = &v58[v86];
  uint64_t v88 = &v59[v86];
  uint64_t v89 = *((void *)v88 + 1);
  *(void *)v87 = *(void *)v88;
  *((void *)v87 + 1) = v89;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
  v58[*(int *)(v90 + 48)] = v59[*(int *)(v90 + 48)];
  swift_storeEnumTagMultiPayload();
  uint64_t v53 = v104;
  uint64_t v52 = v105;
  uint64_t v54 = v103;
LABEL_25:
  uint64_t v56 = v109;
  (*(void (**)(void *, void, uint64_t, uint64_t))(v49 + 56))(__dsta, 0, 1, v98);
LABEL_26:
  *(unsigned char *)(v9 + v56[25]) = *(unsigned char *)(v10 + v56[25]);
  uint64_t v91 = v55[7];
  *(void *)(v52 + v55[6]) = *(void *)(v54 + v55[6]);
  *(void *)(v52 + v91) = *(void *)(v54 + v91);
  uint64_t v92 = v55[8];
  v93 = (void *)(v52 + v92);
  unint64_t v94 = (const void *)(v54 + v92);
  uint64_t v95 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v53 + 48);
  swift_bridgeObjectRetain();
  if (v95(v94, 1, v110))
  {
    uint64_t v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(v93, v94, *(void *)(*(void *)(v96 - 8) + 64));
  }
  else
  {
    v108((uint64_t)v93, (uint64_t)v94, v110);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v53 + 56))(v93, 0, 1, v110);
  }
  return v52;
}

uint64_t assignWithCopy for StaticMediaSystemComponent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v127 = *(void *)(v6 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v127 + 24);
  v7(a1, a2, v6);
  v122 = a3;
  uint64_t v123 = a2;
  uint64_t v8 = a3[5];
  uint64_t v124 = a1;
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  v7(a1 + v8, a2 + v8, v6);
  uint64_t v11 = (int *)type metadata accessor for StaticMediaProfile();
  uint64_t v12 = v11[5];
  uint64_t v13 = (void *)(v9 + v12);
  uint64_t v14 = (void *)(v10 + v12);
  *uint64_t v13 = *v14;
  v13[1] = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v9 + v11[6]) = *(void *)(v10 + v11[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = v11[7];
  uint64_t v16 = (void *)(v9 + v15);
  uint64_t v17 = (void *)(v10 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v125 = v11;
  uint64_t v18 = v11[8];
  uint64_t v19 = (void *)(v9 + v18);
  uint64_t v120 = v10;
  uint64_t v20 = (void *)(v10 + v18);
  uint64_t v21 = sub_251F34D20();
  uint64_t v119 = *(void *)(v21 - 8);
  uint64_t v22 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v119 + 48);
  unsigned int v23 = v22(v19, 1, v21);
  v117 = (unsigned int (*)(char *, uint64_t, uint64_t))v22;
  unsigned int v24 = v22(v20, 1, v21);
  uint64_t v118 = v21;
  if (v23)
  {
    if (!v24)
    {
      (*(void (**)(void *, void *, uint64_t))(v119 + 16))(v19, v20, v21);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v119 + 56))(v19, 0, 1, v21);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v24)
  {
    (*(void (**)(void *, uint64_t))(v119 + 8))(v19, v21);
LABEL_6:
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    memcpy(v19, v20, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v119 + 24))(v19, v20, v21);
LABEL_7:
  uint64_t v26 = v125;
  uint64_t v27 = v120;
  uint64_t v28 = v125[9];
  uint64_t v29 = (void *)(v9 + v28);
  uint64_t v30 = (void *)(v120 + v28);
  *uint64_t v29 = *v30;
  v29[1] = v30[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v9 + v125[10]) = *(unsigned char *)(v120 + v125[10]);
  *(unsigned char *)(v9 + v125[11]) = *(unsigned char *)(v120 + v125[11]);
  *(unsigned char *)(v9 + v125[12]) = *(unsigned char *)(v120 + v125[12]);
  *(unsigned char *)(v9 + v125[13]) = *(unsigned char *)(v120 + v125[13]);
  uint64_t v126 = v6;
  v121 = (void (*)(char *, char *, uint64_t))v7;
  v7(v9 + v26[14], v27 + v26[14], v6);
  *(unsigned char *)(v9 + v26[15]) = *(unsigned char *)(v27 + v26[15]);
  *(unsigned char *)(v9 + v26[16]) = *(unsigned char *)(v27 + v26[16]);
  *(void *)(v9 + v26[17]) = *(void *)(v27 + v26[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v31 = v26[18];
  uint64_t v32 = (void *)(v9 + v31);
  uint64_t v33 = (void *)(v27 + v31);
  uint64_t v34 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  uint64_t v35 = *(void *)(v34 - 8);
  uint64_t v36 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v35 + 48);
  int v37 = v36(v32, 1, v34);
  int v38 = v36(v33, 1, v34);
  if (v37)
  {
    if (!v38)
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        (*(void (**)(void *, void *, uint64_t))(v127 + 16))(v32, v33, v126);
      }
      else
      {
        *uint64_t v32 = *v33;
        v32[1] = v33[1];
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
      goto LABEL_21;
    }
LABEL_13:
    uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F090);
    memcpy(v32, v33, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_21;
  }
  if (v38)
  {
    sub_251A88B58((uint64_t)v32, type metadata accessor for StaticAccessory.DeviceIdentifier);
    goto LABEL_13;
  }
  if (v124 != v123)
  {
    sub_251A88B58((uint64_t)v32, type metadata accessor for StaticAccessory.DeviceIdentifier);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      (*(void (**)(void *, void *, uint64_t))(v127 + 16))(v32, v33, v126);
    }
    else
    {
      *uint64_t v32 = *v33;
      v32[1] = v33[1];
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_21:
  *(unsigned char *)(v9 + v26[19]) = *(unsigned char *)(v27 + v26[19]);
  *(unsigned char *)(v9 + v26[20]) = *(unsigned char *)(v27 + v26[20]);
  uint64_t v40 = v26[21];
  uint64_t v41 = (void *)(v9 + v40);
  uint64_t v42 = (void *)(v27 + v40);
  *uint64_t v41 = *v42;
  v41[1] = v42[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_WORD *)(v9 + v26[22]) = *(_WORD *)(v27 + v26[22]);
  *(void *)(v9 + v26[23]) = *(void *)(v27 + v26[23]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v43 = v26[24];
  uint64_t v44 = (char *)(v9 + v43);
  uint64_t v45 = (char *)(v27 + v43);
  uint64_t v46 = type metadata accessor for StaticSoftwareUpdate(0);
  uint64_t v47 = *(void *)(v46 - 8);
  uint64_t v48 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v47 + 48);
  int v49 = v48(v44, 1, v46);
  int v50 = v48(v45, 1, v46);
  if (v49)
  {
    if (!v50)
    {
      uint64_t v51 = *(void (**)(char *, char *, uint64_t))(v127 + 16);
      v51(v44, v45, v126);
      uint64_t v52 = *(int *)(v46 + 20);
      v116 = &v44[v52];
      uint64_t v53 = &v45[v52];
      uint64_t v54 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        *(void *)v116 = *(void *)v53;
        *((void *)v116 + 1) = *((void *)v53 + 1);
        updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        uint64_t v80 = updated[5];
        uint64_t v81 = &v116[v80];
        uint64_t v82 = &v53[v80];
        swift_bridgeObjectRetain();
        if (v117(v82, 1, v118))
        {
LABEL_38:
          uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
          memcpy(v81, v82, *(void *)(*(void *)(v84 - 8) + 64));
LABEL_47:
          uint64_t v56 = v126;
          uint64_t v91 = updated[6];
          uint64_t v92 = &v116[v91];
          v93 = &v53[v91];
          *(void *)uint64_t v92 = *(void *)v93;
          *((void *)v92 + 1) = *((void *)v93 + 1);
          uint64_t v94 = updated[7];
          uint64_t v95 = &v116[v94];
          uint64_t v96 = &v53[v94];
          *(void *)uint64_t v95 = *(void *)v96;
          *((void *)v95 + 1) = *((void *)v96 + 1);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
          v116[*(int *)(v97 + 48)] = v53[*(int *)(v97 + 48)];
          goto LABEL_48;
        }
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          if (EnumCaseMultiPayload)
          {
            memcpy(v116, v53, *(void *)(*(void *)(v54 - 8) + 64));
            uint64_t v56 = v126;
LABEL_49:
            (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
            goto LABEL_50;
          }
          v51(v116, v53, v126);
          uint64_t v56 = v126;
          uint64_t v57 = (int *)type metadata accessor for StaticHH2Update(0);
          v116[v57[5]] = v53[v57[5]];
          uint64_t v58 = v57[6];
          uint64_t v59 = &v116[v58];
          uint64_t v60 = &v53[v58];
          *(void *)uint64_t v59 = *(void *)v60;
          *((void *)v59 + 1) = *((void *)v60 + 1);
          uint64_t v61 = v57[7];
          unsigned __int8 v62 = &v116[v61];
          uint64_t v63 = &v53[v61];
          char v64 = v63[8];
          *(void *)unsigned __int8 v62 = *(void *)v63;
          v62[8] = v64;
          swift_bridgeObjectRetain();
LABEL_48:
          swift_storeEnumTagMultiPayload();
          goto LABEL_49;
        }
        *(void *)v116 = *(void *)v53;
        *((void *)v116 + 1) = *((void *)v53 + 1);
        updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        uint64_t v83 = updated[5];
        uint64_t v81 = &v116[v83];
        uint64_t v82 = &v53[v83];
        swift_bridgeObjectRetain();
        if (v117(v82, 1, v118)) {
          goto LABEL_38;
        }
      }
      (*(void (**)(char *, char *, uint64_t))(v119 + 16))(v81, v82, v118);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v119 + 56))(v81, 0, 1, v118);
      goto LABEL_47;
    }
LABEL_29:
    uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
    memcpy(v44, v45, *(void *)(*(void *)(v65 - 8) + 64));
    uint64_t v56 = v126;
LABEL_50:
    uint64_t v66 = v123;
    goto LABEL_51;
  }
  if (v50)
  {
    sub_251A88B58((uint64_t)v44, type metadata accessor for StaticSoftwareUpdate);
    goto LABEL_29;
  }
  uint64_t v56 = v126;
  v121(v44, v45, v126);
  uint64_t v66 = v123;
  if (v124 == v123) {
    goto LABEL_51;
  }
  uint64_t v67 = *(int *)(v46 + 20);
  uint64_t v68 = &v44[v67];
  uint64_t v69 = &v45[v67];
  sub_251A88B58((uint64_t)v68, type metadata accessor for StaticSoftwareUpdate.Kind);
  uint64_t v70 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  int v71 = swift_getEnumCaseMultiPayload();
  if (v71 == 2)
  {
    *(void *)uint64_t v68 = *(void *)v69;
    *((void *)v68 + 1) = *((void *)v69 + 1);
    uint64_t v85 = type metadata accessor for StaticSoftwareUpdateMetadata(0);
    uint64_t v86 = *(int *)(v85 + 20);
    uint64_t v114 = v85;
    __dst = &v68[v86];
    v87 = &v69[v86];
    swift_bridgeObjectRetain();
    if (v117(v87, 1, v118))
    {
LABEL_42:
      uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
      memcpy(__dst, v87, *(void *)(*(void *)(v88 - 8) + 64));
LABEL_60:
      uint64_t v106 = *(int *)(v114 + 24);
      uint64_t v107 = &v68[v106];
      v108 = &v69[v106];
      *(void *)uint64_t v107 = *(void *)v108;
      *((void *)v107 + 1) = *((void *)v108 + 1);
      uint64_t v109 = *(int *)(v114 + 28);
      uint64_t v110 = &v68[v109];
      v111 = &v69[v109];
      *(void *)uint64_t v110 = *(void *)v111;
      *((void *)v110 + 1) = *((void *)v111 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
      v68[*(int *)(v112 + 48)] = v69[*(int *)(v112 + 48)];
      swift_storeEnumTagMultiPayload();
      goto LABEL_51;
    }
LABEL_59:
    (*(void (**)(char *, char *, uint64_t))(v119 + 16))(__dst, v87, v118);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v119 + 56))(__dst, 0, 1, v118);
    goto LABEL_60;
  }
  if (v71 == 1)
  {
    *(void *)uint64_t v68 = *(void *)v69;
    *((void *)v68 + 1) = *((void *)v69 + 1);
    uint64_t v89 = type metadata accessor for StaticSoftwareUpdateMetadata(0);
    uint64_t v90 = *(int *)(v89 + 20);
    uint64_t v114 = v89;
    __dst = &v68[v90];
    v87 = &v69[v90];
    swift_bridgeObjectRetain();
    if (v117(v87, 1, v118)) {
      goto LABEL_42;
    }
    goto LABEL_59;
  }
  if (v71)
  {
    memcpy(v68, v69, *(void *)(*(void *)(v70 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v127 + 16))(v68, v69, v126);
    uint64_t v72 = (int *)type metadata accessor for StaticHH2Update(0);
    v68[v72[5]] = v69[v72[5]];
    uint64_t v73 = v72[6];
    uint64_t v74 = &v68[v73];
    uint64_t v75 = &v69[v73];
    *(void *)uint64_t v74 = *(void *)v75;
    *((void *)v74 + 1) = *((void *)v75 + 1);
    uint64_t v76 = v72[7];
    uint64_t v77 = &v68[v76];
    uint64_t v78 = &v69[v76];
    char v79 = v78[8];
    *(void *)uint64_t v77 = *(void *)v78;
    v77[8] = v79;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
LABEL_51:
  *(unsigned char *)(v9 + v26[25]) = *(unsigned char *)(v27 + v26[25]);
  *(void *)(v124 + v122[6]) = *(void *)(v66 + v122[6]);
  *(void *)(v124 + v122[7]) = *(void *)(v66 + v122[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v98 = v122[8];
  uint64_t v99 = (char *)(v124 + v98);
  uint64_t v100 = (char *)(v66 + v98);
  uint64_t v101 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v127 + 48);
  int v102 = v101(v124 + v98, 1, v56);
  int v103 = v101((uint64_t)v100, 1, v56);
  if (!v102)
  {
    if (!v103)
    {
      v121(v99, v100, v56);
      return v124;
    }
    (*(void (**)(char *, uint64_t))(v127 + 8))(v99, v56);
    goto LABEL_56;
  }
  if (v103)
  {
LABEL_56:
    uint64_t v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(v99, v100, *(void *)(*(void *)(v104 - 8) + 64));
    return v124;
  }
  (*(void (**)(char *, char *, uint64_t))(v127 + 16))(v99, v100, v56);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v127 + 56))(v99, 0, 1, v56);
  return v124;
}

uint64_t sub_251A88B58(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t initializeWithTake for StaticMediaSystemComponent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v61 = *(void *)(v6 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v61 + 32);
  v7(a1, a2, v6);
  uint64_t v59 = a3;
  uint64_t v60 = a2;
  uint64_t v8 = a3[5];
  uint64_t v62 = a1;
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v63 = (void (*)(void *, const void *, uint64_t))v7;
  v7(a1 + v8, v10, v6);
  uint64_t v11 = (int *)type metadata accessor for StaticMediaProfile();
  *(_OWORD *)(v9 + v11[5]) = *(_OWORD *)(v10 + v11[5]);
  *(void *)(v9 + v11[6]) = *(void *)(v10 + v11[6]);
  *(_OWORD *)(v9 + v11[7]) = *(_OWORD *)(v10 + v11[7]);
  uint64_t v12 = v11[8];
  uint64_t v13 = (void *)(v9 + v12);
  uint64_t v14 = (const void *)(v10 + v12);
  uint64_t v15 = sub_251F34D20();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v58 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48);
  uint64_t v56 = v16;
  if (v58(v14, 1, v15))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  *(_OWORD *)(v9 + v11[9]) = *(_OWORD *)(v10 + v11[9]);
  *(unsigned char *)(v9 + v11[10]) = *(unsigned char *)(v10 + v11[10]);
  *(unsigned char *)(v9 + v11[11]) = *(unsigned char *)(v10 + v11[11]);
  *(unsigned char *)(v9 + v11[12]) = *(unsigned char *)(v10 + v11[12]);
  *(unsigned char *)(v9 + v11[13]) = *(unsigned char *)(v10 + v11[13]);
  v7(v9 + v11[14], v10 + v11[14], v6);
  *(unsigned char *)(v9 + v11[15]) = *(unsigned char *)(v10 + v11[15]);
  *(unsigned char *)(v9 + v11[16]) = *(unsigned char *)(v10 + v11[16]);
  *(void *)(v9 + v11[17]) = *(void *)(v10 + v11[17]);
  uint64_t v18 = v11[18];
  uint64_t v19 = (void *)(v9 + v18);
  uint64_t v20 = (const void *)(v10 + v18);
  uint64_t v21 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  uint64_t v22 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F090);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7((uint64_t)v19, (uint64_t)v20, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v19, v20, *(void *)(v22 + 64));
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  *(unsigned char *)(v9 + v11[19]) = *(unsigned char *)(v10 + v11[19]);
  *(unsigned char *)(v9 + v11[20]) = *(unsigned char *)(v10 + v11[20]);
  *(_OWORD *)(v9 + v11[21]) = *(_OWORD *)(v10 + v11[21]);
  *(_WORD *)(v9 + v11[22]) = *(_WORD *)(v10 + v11[22]);
  *(void *)(v9 + v11[23]) = *(void *)(v10 + v11[23]);
  uint64_t v24 = v11[24];
  uint64_t v25 = (char *)(v9 + v24);
  uint64_t v26 = (char *)(v10 + v24);
  uint64_t v27 = type metadata accessor for StaticSoftwareUpdate(0);
  uint64_t v28 = *(void *)(v27 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
  {
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
    memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
    uint64_t v31 = v61;
    uint64_t v30 = v62;
    uint64_t v33 = v59;
    uint64_t v32 = v60;
    goto LABEL_25;
  }
  v7((uint64_t)v25, (uint64_t)v26, v6);
  uint64_t v34 = *(int *)(v27 + 20);
  __dst = &v25[v34];
  __src = &v26[v34];
  uint64_t v53 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v54 = v25;
  if (EnumCaseMultiPayload != 2)
  {
    if (EnumCaseMultiPayload != 1)
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(__dst, __src, *(void *)(*(void *)(v53 - 8) + 64));
      }
      else
      {
        v7((uint64_t)__dst, (uint64_t)__src, v6);
        uint64_t v36 = (int *)type metadata accessor for StaticHH2Update(0);
        __dst[v36[5]] = __src[v36[5]];
        *(_OWORD *)&__dst[v36[6]] = *(_OWORD *)&__src[v36[6]];
        uint64_t v37 = v36[7];
        int v38 = &__dst[v37];
        uint64_t v39 = &__src[v37];
        v38[8] = v39[8];
        *(void *)int v38 = *(void *)v39;
        swift_storeEnumTagMultiPayload();
      }
      uint64_t v31 = v61;
      uint64_t v30 = v62;
      uint64_t v32 = v60;
      goto LABEL_24;
    }
    *(_OWORD *)__dst = *(_OWORD *)__src;
    updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
    uint64_t v43 = updated[5];
    uint64_t v41 = &__dst[v43];
    uint64_t v42 = &__src[v43];
    if (v58(&__src[v43], 1, v15)) {
      goto LABEL_19;
    }
LABEL_22:
    (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v41, v42, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v56 + 56))(v41, 0, 1, v15);
    goto LABEL_23;
  }
  *(_OWORD *)__dst = *(_OWORD *)__src;
  updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
  uint64_t v40 = updated[5];
  uint64_t v41 = &__dst[v40];
  uint64_t v42 = &__src[v40];
  if (!v58(&__src[v40], 1, v15)) {
    goto LABEL_22;
  }
LABEL_19:
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  memcpy(v41, v42, *(void *)(*(void *)(v44 - 8) + 64));
LABEL_23:
  uint64_t v31 = v61;
  uint64_t v30 = v62;
  uint64_t v32 = v60;
  *(_OWORD *)&__dst[updated[6]] = *(_OWORD *)&__src[updated[6]];
  *(_OWORD *)&__dst[updated[7]] = *(_OWORD *)&__src[updated[7]];
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
  __dst[*(int *)(v45 + 48)] = __src[*(int *)(v45 + 48)];
  swift_storeEnumTagMultiPayload();
LABEL_24:
  uint64_t v33 = v59;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v54, 0, 1, v27);
LABEL_25:
  *(unsigned char *)(v9 + v11[25]) = *(unsigned char *)(v10 + v11[25]);
  uint64_t v46 = v33[7];
  *(void *)(v30 + v33[6]) = *(void *)(v32 + v33[6]);
  *(void *)(v30 + v46) = *(void *)(v32 + v46);
  uint64_t v47 = v33[8];
  uint64_t v48 = (void *)(v30 + v47);
  int v49 = (const void *)(v32 + v47);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v31 + 48))(v49, 1, v6))
  {
    uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
  }
  else
  {
    v63(v48, v49, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v31 + 56))(v48, 0, 1, v6);
  }
  return v30;
}

uint64_t assignWithTake for StaticMediaSystemComponent(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v116 = *(void *)(v6 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v116 + 40);
  v7(a1, a2, v6);
  v111 = a3;
  uint64_t v8 = a3[5];
  uint64_t v114 = a2;
  uint64_t v115 = a1;
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  v7(a1 + v8, a2 + v8, v6);
  uint64_t v11 = (int *)type metadata accessor for StaticMediaProfile();
  uint64_t v12 = v11[5];
  uint64_t v13 = (void *)(v9 + v12);
  uint64_t v14 = (uint64_t *)(v10 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  *(void *)(v9 + v11[6]) = *(void *)(v10 + v11[6]);
  swift_bridgeObjectRelease();
  uint64_t v17 = v11[7];
  uint64_t v18 = (void *)(v9 + v17);
  uint64_t v19 = (uint64_t *)(v10 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *uint64_t v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  v117 = v11;
  uint64_t v22 = v11[8];
  uint64_t v23 = (void *)(v9 + v22);
  uint64_t v112 = v10;
  uint64_t v24 = (const void *)(v10 + v22);
  uint64_t v25 = sub_251F34D20();
  uint64_t v110 = *(void *)(v25 - 8);
  uint64_t v26 = *(unsigned int (**)(void))(v110 + 48);
  unsigned int v27 = ((uint64_t (*)(void *, uint64_t, uint64_t))v26)(v23, 1, v25);
  v108 = v26;
  unsigned int v28 = ((uint64_t (*)(const void *, uint64_t, uint64_t))v26)(v24, 1, v25);
  uint64_t v109 = v25;
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(void *, const void *, uint64_t))(v110 + 32))(v23, v24, v25);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v110 + 56))(v23, 0, 1, v25);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v28)
  {
    (*(void (**)(void *, uint64_t))(v110 + 8))(v23, v25);
LABEL_6:
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    memcpy(v23, v24, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v110 + 40))(v23, v24, v25);
LABEL_7:
  uint64_t v30 = v117;
  uint64_t v31 = v112;
  uint64_t v32 = v117[9];
  uint64_t v33 = (void *)(v9 + v32);
  uint64_t v34 = (uint64_t *)(v112 + v32);
  uint64_t v36 = *v34;
  uint64_t v35 = v34[1];
  *uint64_t v33 = v36;
  v33[1] = v35;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v9 + v117[10]) = *(unsigned char *)(v112 + v117[10]);
  *(unsigned char *)(v9 + v117[11]) = *(unsigned char *)(v112 + v117[11]);
  *(unsigned char *)(v9 + v117[12]) = *(unsigned char *)(v112 + v117[12]);
  *(unsigned char *)(v9 + v117[13]) = *(unsigned char *)(v112 + v117[13]);
  uint64_t v118 = v6;
  v113 = (void (*)(char *, char *, uint64_t))v7;
  v7(v9 + v30[14], v31 + v30[14], v6);
  *(unsigned char *)(v9 + v30[15]) = *(unsigned char *)(v31 + v30[15]);
  *(unsigned char *)(v9 + v30[16]) = *(unsigned char *)(v31 + v30[16]);
  *(void *)(v9 + v30[17]) = *(void *)(v31 + v30[17]);
  swift_bridgeObjectRelease();
  uint64_t v37 = v30[18];
  int v38 = (void *)(v9 + v37);
  uint64_t v39 = (void *)(v31 + v37);
  uint64_t v40 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  uint64_t v41 = *(void *)(v40 - 8);
  uint64_t v42 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v41 + 48);
  int v43 = v42(v38, 1, v40);
  int v44 = v42(v39, 1, v40);
  if (!v43)
  {
    if (!v44)
    {
      if (v115 == v114) {
        goto LABEL_21;
      }
      sub_251A88B58((uint64_t)v38, type metadata accessor for StaticAccessory.DeviceIdentifier);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        (*(void (**)(void *, void *, uint64_t))(v116 + 32))(v38, v39, v118);
        swift_storeEnumTagMultiPayload();
        goto LABEL_21;
      }
      size_t v45 = *(void *)(v41 + 64);
LABEL_14:
      memcpy(v38, v39, v45);
      goto LABEL_21;
    }
    sub_251A88B58((uint64_t)v38, type metadata accessor for StaticAccessory.DeviceIdentifier);
LABEL_13:
    size_t v45 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B21F090) - 8) + 64);
    goto LABEL_14;
  }
  if (v44) {
    goto LABEL_13;
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(void *, void *, uint64_t))(v116 + 32))(v38, v39, v118);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v38, v39, *(void *)(v41 + 64));
  }
  (*(void (**)(void *, void, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
LABEL_21:
  *(unsigned char *)(v9 + v30[19]) = *(unsigned char *)(v31 + v30[19]);
  *(unsigned char *)(v9 + v30[20]) = *(unsigned char *)(v31 + v30[20]);
  uint64_t v46 = v30[21];
  uint64_t v47 = (void *)(v9 + v46);
  uint64_t v48 = (uint64_t *)(v31 + v46);
  uint64_t v50 = *v48;
  uint64_t v49 = v48[1];
  *uint64_t v47 = v50;
  v47[1] = v49;
  swift_bridgeObjectRelease();
  *(_WORD *)(v9 + v30[22]) = *(_WORD *)(v31 + v30[22]);
  *(void *)(v9 + v30[23]) = *(void *)(v31 + v30[23]);
  swift_bridgeObjectRelease();
  uint64_t v51 = v30[24];
  uint64_t v52 = (char *)(v9 + v51);
  uint64_t v53 = (char *)(v31 + v51);
  uint64_t v54 = type metadata accessor for StaticSoftwareUpdate(0);
  uint64_t v55 = *(void *)(v54 - 8);
  uint64_t v56 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v55 + 48);
  int v57 = v56(v52, 1, v54);
  int v58 = v56(v53, 1, v54);
  if (v57)
  {
    if (!v58)
    {
      uint64_t v59 = *(void (**)(char *, char *, uint64_t))(v116 + 32);
      v59(v52, v53, v118);
      uint64_t v60 = *(int *)(v54 + 20);
      uint64_t v104 = &v52[v60];
      uint64_t v61 = &v53[v60];
      uint64_t v62 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
      __dst = v61;
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        *(_OWORD *)uint64_t v104 = *(_OWORD *)v61;
        updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        uint64_t v81 = updated[5];
        uint64_t v82 = &v104[v81];
        uint64_t v83 = &v61[v81];
        if (((unsigned int (*)(char *, uint64_t, uint64_t))v108)(&v61[v81], 1, v109))
        {
LABEL_38:
          uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
          memcpy(v82, v83, *(void *)(*(void *)(v85 - 8) + 64));
LABEL_48:
          uint64_t v64 = v118;
          uint64_t v70 = v114;
          int v71 = v111;
          *(_OWORD *)&v104[updated[6]] = *(_OWORD *)&__dst[updated[6]];
          *(_OWORD *)&v104[updated[7]] = *(_OWORD *)&__dst[updated[7]];
          uint64_t v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
          v104[*(int *)(v91 + 48)] = __dst[*(int *)(v91 + 48)];
          swift_storeEnumTagMultiPayload();
LABEL_49:
          (*(void (**)(char *, void, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
          goto LABEL_50;
        }
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          if (EnumCaseMultiPayload)
          {
            memcpy(v104, v61, *(void *)(*(void *)(v62 - 8) + 64));
            uint64_t v64 = v118;
          }
          else
          {
            v59(v104, v61, v118);
            uint64_t v64 = v118;
            uint64_t v65 = (int *)type metadata accessor for StaticHH2Update(0);
            v104[v65[5]] = v61[v65[5]];
            *(_OWORD *)&v104[v65[6]] = *(_OWORD *)&v61[v65[6]];
            uint64_t v66 = v65[7];
            uint64_t v67 = &v104[v66];
            uint64_t v68 = &v61[v66];
            v67[8] = v68[8];
            *(void *)uint64_t v67 = *(void *)v68;
            swift_storeEnumTagMultiPayload();
          }
          uint64_t v70 = v114;
          int v71 = v111;
          goto LABEL_49;
        }
        *(_OWORD *)uint64_t v104 = *(_OWORD *)v61;
        updated = (int *)type metadata accessor for StaticSoftwareUpdateMetadata(0);
        uint64_t v84 = updated[5];
        uint64_t v82 = &v104[v84];
        uint64_t v83 = &v61[v84];
        if (((unsigned int (*)(char *, uint64_t, uint64_t))v108)(&v61[v84], 1, v109)) {
          goto LABEL_38;
        }
      }
      (*(void (**)(char *, char *, uint64_t))(v110 + 32))(v82, v83, v109);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v110 + 56))(v82, 0, 1, v109);
      goto LABEL_48;
    }
LABEL_29:
    uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F120);
    memcpy(v52, v53, *(void *)(*(void *)(v69 - 8) + 64));
    uint64_t v64 = v118;
    uint64_t v70 = v114;
    int v71 = v111;
    goto LABEL_50;
  }
  if (v58)
  {
    sub_251A88B58((uint64_t)v52, type metadata accessor for StaticSoftwareUpdate);
    goto LABEL_29;
  }
  uint64_t v64 = v118;
  v113(v52, v53, v118);
  uint64_t v70 = v114;
  int v71 = v111;
  if (v115 == v114) {
    goto LABEL_50;
  }
  uint64_t v72 = *(int *)(v54 + 20);
  uint64_t v73 = &v52[v72];
  uint64_t v74 = &v53[v72];
  sub_251A88B58((uint64_t)v73, type metadata accessor for StaticSoftwareUpdate.Kind);
  uint64_t v75 = type metadata accessor for StaticSoftwareUpdate.Kind(0);
  int v76 = swift_getEnumCaseMultiPayload();
  if (v76 == 2)
  {
    *(_OWORD *)uint64_t v73 = *(_OWORD *)v74;
    uint64_t v86 = type metadata accessor for StaticSoftwareUpdateMetadata(0);
    uint64_t v87 = *(int *)(v86 + 20);
    uint64_t v105 = v86;
    __dsta = &v73[v87];
    __src = &v74[v87];
    if (v108())
    {
LABEL_43:
      uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
      memcpy(__dsta, __src, *(void *)(*(void *)(v88 - 8) + 64));
LABEL_59:
      *(_OWORD *)&v73[*(int *)(v105 + 24)] = *(_OWORD *)&v74[*(int *)(v105 + 24)];
      *(_OWORD *)&v73[*(int *)(v105 + 28)] = *(_OWORD *)&v74[*(int *)(v105 + 28)];
      uint64_t v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D468);
      v73[*(int *)(v101 + 48)] = v74[*(int *)(v101 + 48)];
      swift_storeEnumTagMultiPayload();
      goto LABEL_50;
    }
LABEL_58:
    (*(void (**)(char *, char *, uint64_t))(v110 + 32))(__dsta, __src, v109);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v110 + 56))(__dsta, 0, 1, v109);
    goto LABEL_59;
  }
  if (v76 == 1)
  {
    *(_OWORD *)uint64_t v73 = *(_OWORD *)v74;
    uint64_t v89 = type metadata accessor for StaticSoftwareUpdateMetadata(0);
    uint64_t v90 = *(int *)(v89 + 20);
    uint64_t v105 = v89;
    __dsta = &v73[v90];
    __src = &v74[v90];
    if (v108()) {
      goto LABEL_43;
    }
    goto LABEL_58;
  }
  if (v76)
  {
    memcpy(v73, v74, *(void *)(*(void *)(v75 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v116 + 32))(v73, v74, v118);
    uint64_t v77 = (int *)type metadata accessor for StaticHH2Update(0);
    v73[v77[5]] = v74[v77[5]];
    *(_OWORD *)&v73[v77[6]] = *(_OWORD *)&v74[v77[6]];
    uint64_t v78 = v77[7];
    char v79 = &v73[v78];
    uint64_t v80 = &v74[v78];
    v79[8] = v80[8];
    *(void *)char v79 = *(void *)v80;
    swift_storeEnumTagMultiPayload();
  }
LABEL_50:
  *(unsigned char *)(v9 + v30[25]) = *(unsigned char *)(v31 + v30[25]);
  uint64_t v92 = v71[7];
  *(void *)(v115 + v71[6]) = *(void *)(v70 + v71[6]);
  *(void *)(v115 + v92) = *(void *)(v70 + v92);
  swift_bridgeObjectRelease();
  uint64_t v93 = v71[8];
  uint64_t v94 = (char *)(v115 + v93);
  uint64_t v95 = (char *)(v70 + v93);
  uint64_t v96 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v116 + 48);
  int v97 = v96(v115 + v93, 1, v64);
  int v98 = v96((uint64_t)v95, 1, v64);
  if (!v97)
  {
    if (!v98)
    {
      v113(v94, v95, v64);
      return v115;
    }
    (*(void (**)(char *, uint64_t))(v116 + 8))(v94, v64);
    goto LABEL_55;
  }
  if (v98)
  {
LABEL_55:
    uint64_t v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    memcpy(v94, v95, *(void *)(*(void *)(v99 - 8) + 64));
    return v115;
  }
  (*(void (**)(char *, char *, uint64_t))(v116 + 32))(v94, v95, v64);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v116 + 56))(v94, 0, 1, v64);
  return v115;
}

uint64_t getEnumTagSinglePayload for StaticMediaSystemComponent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251A8A234);
}

uint64_t sub_251A8A234(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for StaticMediaProfile();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + a3[5];
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v14 = *(void *)(a1 + a3[7]);
    if (v14 >= 0xFFFFFFFF) {
      LODWORD(v14) = -1;
    }
    return (v14 + 1);
  }
  else
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a3[8];
    return v16(v18, a2, v17);
  }
}

uint64_t storeEnumTagSinglePayload for StaticMediaSystemComponent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251A8A3CC);
}

uint64_t sub_251A8A3CC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_251F34DA0();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t result = type metadata accessor for StaticMediaProfile();
  uint64_t v14 = *(void *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v12 = a1 + a4[5];
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[7]) = (a2 - 1);
  }
  else
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
    uint64_t v17 = v15;
    uint64_t v18 = a1 + a4[8];
    return v16(v18, a2, a2, v17);
  }
  return result;
}

void sub_251A8A550()
{
  sub_251F34DA0();
  if (v0 <= 0x3F)
  {
    type metadata accessor for StaticMediaProfile();
    if (v1 <= 0x3F)
    {
      sub_251A24BB4();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

ValueMetadata *type metadata accessor for StaticMediaSystemComponent.PlaybackState()
{
  return &type metadata for StaticMediaSystemComponent.PlaybackState;
}

uint64_t getEnumTagSinglePayload for SignificantEvent.Reason(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s13HomeDataModel26StaticMediaSystemComponentV13PlaybackStateOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251A8A7E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticMediaSystemComponent.PlaybackState.CodingKeys()
{
  return &type metadata for StaticMediaSystemComponent.PlaybackState.CodingKeys;
}

ValueMetadata *type metadata accessor for StaticMediaSystemComponent.PlaybackState.UnknownCodingKeys()
{
  return &type metadata for StaticMediaSystemComponent.PlaybackState.UnknownCodingKeys;
}

ValueMetadata *type metadata accessor for StaticMediaSystemComponent.PlaybackState.PlayingCodingKeys()
{
  return &type metadata for StaticMediaSystemComponent.PlaybackState.PlayingCodingKeys;
}

ValueMetadata *type metadata accessor for StaticMediaSystemComponent.PlaybackState.PausedCodingKeys()
{
  return &type metadata for StaticMediaSystemComponent.PlaybackState.PausedCodingKeys;
}

ValueMetadata *type metadata accessor for StaticMediaSystemComponent.PlaybackState.StoppedCodingKeys()
{
  return &type metadata for StaticMediaSystemComponent.PlaybackState.StoppedCodingKeys;
}

ValueMetadata *type metadata accessor for StaticMediaSystemComponent.PlaybackState.InterruptedCodingKeys()
{
  return &type metadata for StaticMediaSystemComponent.PlaybackState.InterruptedCodingKeys;
}

ValueMetadata *type metadata accessor for StaticMediaSystemComponent.PlaybackState.LoadingCodingKeys()
{
  return &type metadata for StaticMediaSystemComponent.PlaybackState.LoadingCodingKeys;
}

uint64_t getEnumTagSinglePayload for StaticMediaSystemComponent.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for StaticMediaSystemComponent.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251A8A9D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticMediaSystemComponent.CodingKeys()
{
  return &type metadata for StaticMediaSystemComponent.CodingKeys;
}

unint64_t sub_251A8AA14()
{
  unint64_t result = qword_269B9D480;
  if (!qword_269B9D480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9D480);
  }
  return result;
}

unint64_t sub_251A8AA6C()
{
  unint64_t result = qword_269B9D488;
  if (!qword_269B9D488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9D488);
  }
  return result;
}

unint64_t sub_251A8AAC4()
{
  unint64_t result = qword_269B9D490;
  if (!qword_269B9D490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9D490);
  }
  return result;
}

unint64_t sub_251A8AB1C()
{
  unint64_t result = qword_269B9D498;
  if (!qword_269B9D498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9D498);
  }
  return result;
}

unint64_t sub_251A8AB74()
{
  unint64_t result = qword_269B9D4A0;
  if (!qword_269B9D4A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9D4A0);
  }
  return result;
}

unint64_t sub_251A8ABCC()
{
  unint64_t result = qword_269B9D4A8;
  if (!qword_269B9D4A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9D4A8);
  }
  return result;
}

unint64_t sub_251A8AC24()
{
  unint64_t result = qword_269B9D4B0;
  if (!qword_269B9D4B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9D4B0);
  }
  return result;
}

unint64_t sub_251A8AC7C()
{
  unint64_t result = qword_269B9D4B8;
  if (!qword_269B9D4B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9D4B8);
  }
  return result;
}

unint64_t sub_251A8ACD4()
{
  unint64_t result = qword_269B9D4C0;
  if (!qword_269B9D4C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9D4C0);
  }
  return result;
}

unint64_t sub_251A8AD2C()
{
  unint64_t result = qword_269B9D4C8;
  if (!qword_269B9D4C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9D4C8);
  }
  return result;
}

unint64_t sub_251A8AD84()
{
  unint64_t result = qword_269B9D4D0;
  if (!qword_269B9D4D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9D4D0);
  }
  return result;
}

unint64_t sub_251A8ADDC()
{
  unint64_t result = qword_269B9D4D8;
  if (!qword_269B9D4D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9D4D8);
  }
  return result;
}

unint64_t sub_251A8AE34()
{
  unint64_t result = qword_269B9D4E0;
  if (!qword_269B9D4E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9D4E0);
  }
  return result;
}

unint64_t sub_251A8AE8C()
{
  unint64_t result = qword_269B9D4E8;
  if (!qword_269B9D4E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9D4E8);
  }
  return result;
}

unint64_t sub_251A8AEE4()
{
  unint64_t result = qword_269B9D4F0;
  if (!qword_269B9D4F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9D4F0);
  }
  return result;
}

unint64_t sub_251A8AF3C()
{
  unint64_t result = qword_269B9D4F8;
  if (!qword_269B9D4F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9D4F8);
  }
  return result;
}

unint64_t sub_251A8AF94()
{
  unint64_t result = qword_269B9D500;
  if (!qword_269B9D500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9D500);
  }
  return result;
}

unint64_t sub_251A8AFEC()
{
  unint64_t result = qword_269B9D508;
  if (!qword_269B9D508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9D508);
  }
  return result;
}

unint64_t sub_251A8B040(unint64_t a1, void *a2, void *a3, char a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v31 = a5;
  LOBYTE(v7) = a4;
  id v34 = a3;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D520);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = type metadata accessor for StaticMediaSystemComponent();
  uint64_t v28 = *(void *)(v33 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v33);
  uint64_t v32 = (uint64_t)v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v27 = (uint64_t)v26 - v15;
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v16 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v16; uint64_t v16 = sub_251F366C0())
  {
    v26[1] = v6;
    int v35 = v7 & 1;
    unint64_t v30 = a1 & 0xC000000000000001;
    uint64_t v17 = (unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
    unint64_t v7 = MEMORY[0x263F8EE78];
    uint64_t v18 = 4;
    uint64_t v29 = (id *)a1;
    while (1)
    {
      uint64_t v19 = v30 ? (id *)MEMORY[0x2533AB3A0](v18 - 4, a1) : (id *)*(id *)(a1 + 8 * v18);
      a1 = (unint64_t)v19;
      uint64_t v6 = v18 - 3;
      if (__OFADD__(v18 - 4, 1)) {
        break;
      }
      unsigned __int8 v36 = v35;
      swift_bridgeObjectRetain();
      id v20 = v34;
      uint64_t v21 = v31;
      swift_bridgeObjectRetain();
      sub_251A83F18((void *)a1, a2, v20, &v36, v21, (uint64_t)v12);
      if ((*v17)(v12, 1, v33) == 1)
      {
        sub_251A1B064((uint64_t)v12, &qword_269B9D520);
      }
      else
      {
        uint64_t v22 = v27;
        sub_251A8C02C((uint64_t)v12, v27, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent);
        sub_251A8C02C(v22, v32, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v7 = sub_251F0FBC4(0, *(void *)(v7 + 16) + 1, 1, v7);
        }
        unint64_t v24 = *(void *)(v7 + 16);
        unint64_t v23 = *(void *)(v7 + 24);
        if (v24 >= v23 >> 1) {
          unint64_t v7 = sub_251F0FBC4(v23 > 1, v24 + 1, 1, v7);
        }
        *(void *)(v7 + 16) = v24 + 1;
        sub_251A8C02C(v32, v7+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(void *)(v28 + 72) * v24, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent);
      }
      a1 = (unint64_t)v29;
      ++v18;
      if (v6 == v16)
      {
        swift_bridgeObjectRelease();
        return v7;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x263F8EE78];
}

uint64_t sub_251A8B3AC(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v48 = a3;
  uint64_t v7 = type metadata accessor for StaticMediaSystemComponent();
  uint64_t v44 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v39 = (uint64_t)v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v38 - v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D020);
  uint64_t result = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)(a1 + 16);
  if (!v17) {
    return result;
  }
  v38[1] = a1;
  v38[2] = v4;
  int v43 = &v16[*(int *)(result + 48)];
  uint64_t v18 = a1 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  uint64_t v40 = *(void *)(v14 + 72);
  swift_bridgeObjectRetain();
  uint64_t v41 = v16;
  uint64_t v42 = v11;
  while (1)
  {
    uint64_t v46 = v18;
    uint64_t v47 = v17;
    sub_251A1B128(v18, (uint64_t)v16, &qword_269B9D020);
    uint64_t v20 = sub_251F34DA0();
    size_t v45 = v38;
    uint64_t v21 = *(void *)(v20 - 8);
    MEMORY[0x270FA5388](v20);
    unint64_t v23 = (char *)v38 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
    unint64_t v24 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
    v24(v23, v16, v20);
    sub_251A8C02C((uint64_t)v43, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent);
    uint64_t v25 = *v48;
    unint64_t v27 = sub_2519FE584((uint64_t)v23);
    uint64_t v28 = *(void *)(v25 + 16);
    BOOL v29 = (v26 & 1) == 0;
    uint64_t v30 = v28 + v29;
    if (__OFADD__(v28, v29)) {
      break;
    }
    char v31 = v26;
    if (*(void *)(v25 + 24) >= v30)
    {
      if (a2)
      {
        if (v26) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_251A13A08();
        if (v31) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_251A04A64(v30, a2 & 1);
      unint64_t v32 = sub_2519FE584((uint64_t)v23);
      if ((v31 & 1) != (v33 & 1)) {
        goto LABEL_20;
      }
      unint64_t v27 = v32;
      if (v31)
      {
LABEL_3:
        uint64_t v11 = v42;
        uint64_t v19 = v39;
        sub_251A8C02C((uint64_t)v42, v39, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent);
        (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
        sub_251A8C094(v19, *(void *)(*v48 + 56) + *(void *)(v44 + 72) * v27);
        goto LABEL_4;
      }
    }
    id v34 = (void *)*v48;
    *(void *)(*v48 + 8 * (v27 >> 6) + 64) |= 1 << v27;
    v24((char *)(v34[6] + *(void *)(v21 + 72) * v27), v23, v20);
    uint64_t v11 = v42;
    sub_251A8C02C((uint64_t)v42, v34[7] + *(void *)(v44 + 72) * v27, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent);
    uint64_t v35 = v34[2];
    BOOL v36 = __OFADD__(v35, 1);
    uint64_t v37 = v35 + 1;
    if (v36) {
      goto LABEL_19;
    }
    v34[2] = v37;
LABEL_4:
    uint64_t v16 = v41;
    uint64_t v18 = v46 + v40;
    a2 = 1;
    uint64_t v17 = v47 - 1;
    if (v47 == 1) {
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  uint64_t result = sub_251F36BA0();
  __break(1u);
  return result;
}

uint64_t sub_251A8B7D4(void *a1, void *a2, void *a3, char *a4, uint64_t a5)
{
  char v8 = *a4;
  id v9 = objc_msgSend(a1, sel_components);
  sub_251A8BFEC();
  unint64_t v10 = sub_251F35AC0();

  swift_bridgeObjectRetain();
  id v11 = a3;
  swift_bridgeObjectRetain();
  uint64_t v12 = 0;
  unint64_t v13 = sub_251A8B040(v10, a2, v11, v8, a5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  int64_t v14 = *(void *)(v13 + 16);
  if (v14)
  {
    uint64_t v31 = 0;
    uint64_t v34 = MEMORY[0x263F8EE78];
    sub_251A3E388(0, v14, 0);
    uint64_t v15 = v34;
    uint64_t v16 = 0;
    uint64_t v17 = *(void *)(type metadata accessor for StaticMediaSystemComponent() - 8);
    uint64_t v18 = *(unsigned __int8 *)(v17 + 80);
    unint64_t v30 = v13;
    unint64_t v32 = v13 + ((v18 + 32) & ~v18);
    uint64_t v33 = v17;
    do
    {
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D020);
      uint64_t v20 = *(void *)(v19 - 8);
      uint64_t v21 = MEMORY[0x270FA5388](v19 - 8);
      unint64_t v23 = (char *)&v30 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v24 = (uint64_t)&v23[*(int *)(v21 + 56)];
      sub_251A86120(v32 + *(void *)(v33 + 72) * v16, v24, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent);
      uint64_t v25 = sub_251F34DA0();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
      uint64_t v34 = v15;
      unint64_t v27 = *(void *)(v15 + 16);
      unint64_t v26 = *(void *)(v15 + 24);
      if (v27 >= v26 >> 1)
      {
        sub_251A3E388(v26 > 1, v27 + 1, 1);
        uint64_t v15 = v34;
      }
      ++v16;
      *(void *)(v15 + 16) = v27 + 1;
      sub_251A4ECF0((uint64_t)v23, v15+ ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80))+ *(void *)(v20 + 72) * v27, &qword_269B9D020);
    }
    while (v14 != v16);
    swift_bridgeObjectRelease();
    uint64_t v12 = v31;
    if (*(void *)(v15 + 16)) {
      goto LABEL_7;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v15 = MEMORY[0x263F8EE78];
    if (*(void *)(MEMORY[0x263F8EE78] + 16))
    {
LABEL_7:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CAD0);
      uint64_t v28 = sub_251F36700();
      goto LABEL_10;
    }
  }
  uint64_t v28 = MEMORY[0x263F8EE80];
LABEL_10:
  uint64_t v34 = v28;
  sub_251A8B3AC(v15, 1, &v34);
  swift_bridgeObjectRelease();
  if (!v12) {
    return v34;
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_251A8BB08(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000251F68980 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701605234 && a2 == 0xE400000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7364496D6F6F72 && a2 == 0xE700000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x726F737365636361 && a2 == 0xEB00000000644979)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_251A8BD10(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x676E6979616C70 && a2 == 0xE700000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x646573756170 && a2 == 0xE600000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x646570706F7473 && a2 == 0xE700000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7075727265746E69 && a2 == 0xEB00000000646574 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x676E6964616F6CLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_251A8BFA4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_251A8BFEC()
{
  unint64_t result = qword_269B9D518;
  if (!qword_269B9D518)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_269B9D518);
  }
  return result;
}

uint64_t sub_251A8C02C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_251A8C094(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticMediaSystemComponent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void StaticLevelControlCluster.id.getter(uint64_t a1@<X8>)
{
  __int16 v2 = *(_WORD *)(v1 + 8);
  char v3 = *(unsigned char *)(v1 + 10);
  *(void *)a1 = *(void *)v1;
  *(_WORD *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 10) = v3;
}

uint64_t StaticLevelControlCluster.currentLevel.getter()
{
  return *(unsigned __int8 *)(v0 + 11);
}

uint64_t StaticLevelControlCluster.minLevel.getter()
{
  return *(unsigned __int8 *)(v0 + 12) | (*(unsigned __int8 *)(v0 + 13) << 8);
}

uint64_t StaticLevelControlCluster.maxLevel.getter()
{
  return *(unsigned __int8 *)(v0 + 14) | (*(unsigned __int8 *)(v0 + 15) << 8);
}

uint64_t StaticLevelControlCluster.onOffTransitionTime.getter()
{
  return *(unsigned __int16 *)(v0 + 16) | (*(unsigned __int8 *)(v0 + 18) << 16);
}

uint64_t StaticLevelControlCluster.onLevel.getter()
{
  return *(unsigned __int8 *)(v0 + 19) | (*(unsigned __int8 *)(v0 + 20) << 8);
}

uint64_t StaticLevelControlCluster.onTransitionTime.getter()
{
  return *(unsigned __int16 *)(v0 + 22) | (*(unsigned __int8 *)(v0 + 24) << 16);
}

uint64_t StaticLevelControlCluster.offTransitionTime.getter()
{
  return *(unsigned __int16 *)(v0 + 26) | (*(unsigned __int8 *)(v0 + 28) << 16);
}

uint64_t StaticLevelControlCluster.defaultMoveRate.getter()
{
  return *(unsigned __int8 *)(v0 + 29) | (*(unsigned __int8 *)(v0 + 30) << 8);
}

uint64_t StaticLevelControlCluster.startUpCurrentLevel.getter()
{
  return *(unsigned __int8 *)(v0 + 31) | (*(unsigned __int8 *)(v0 + 32) << 8);
}

uint64_t StaticLevelControlCluster.init(id:currentLevel:minLevel:maxLevel:onOffTransitionTime:onLevel:onTransitionTime:offTransitionTime:defaultMoveRate:startUpCurrentLevel:)@<X0>(uint64_t result@<X0>, char a2@<W1>, __int16 a3@<W2>, __int16 a4@<W3>, int a5@<W4>, __int16 a6@<W5>, int a7@<W6>, int a8@<W7>, uint64_t a9@<X8>, char a10, char a11, char a12, char a13)
{
  __int16 v13 = *(_WORD *)(result + 8);
  char v14 = *(unsigned char *)(result + 10);
  *(void *)a9 = *(void *)result;
  *(_WORD *)(a9 + 8) = v13;
  *(unsigned char *)(a9 + 10) = v14;
  *(unsigned char *)(a9 + 11) = a2;
  *(unsigned char *)(a9 + 12) = a3;
  *(unsigned char *)(a9 + 13) = HIBYTE(a3) & 1;
  *(unsigned char *)(a9 + 14) = a4;
  *(unsigned char *)(a9 + 15) = HIBYTE(a4) & 1;
  *(_WORD *)(a9 + 16) = a5;
  *(unsigned char *)(a9 + 18) = BYTE2(a5) & 1;
  *(unsigned char *)(a9 + 19) = a6;
  *(unsigned char *)(a9 + 20) = HIBYTE(a6) & 1;
  *(_WORD *)(a9 + 22) = a7;
  *(unsigned char *)(a9 + 24) = BYTE2(a7) & 1;
  *(_WORD *)(a9 + 26) = a8;
  *(unsigned char *)(a9 + 28) = BYTE2(a8) & 1;
  *(unsigned char *)(a9 + 29) = a10;
  *(unsigned char *)(a9 + 30) = a11 & 1;
  *(unsigned char *)(a9 + 31) = a12;
  *(unsigned char *)(a9 + 32) = a13 & 1;
  return result;
}

uint64_t StaticLevelControlCluster.hash(into:)()
{
  char v1 = v0[13];
  char v2 = v0[15];
  int v3 = v0[18];
  char v5 = v0[20];
  int v6 = v0[24];
  int v7 = v0[28];
  char v8 = v0[30];
  char v9 = v0[32];
  sub_251F36CF0();
  sub_251F36CD0();
  sub_251F36CE0();
  sub_251F36CC0();
  if ((v1 & 1) == 0) {
    sub_251F36CC0();
  }
  sub_251F36CC0();
  if ((v2 & 1) == 0) {
    sub_251F36CC0();
  }
  sub_251F36CC0();
  if (v3)
  {
    sub_251F36CC0();
    if (v5) {
      goto LABEL_9;
    }
    goto LABEL_7;
  }
  sub_251F36CC0();
  sub_251F36CD0();
  if ((v5 & 1) == 0) {
LABEL_7:
  }
    sub_251F36CC0();
LABEL_9:
  sub_251F36CC0();
  if (v6)
  {
    sub_251F36CC0();
    if (!v7) {
      goto LABEL_11;
    }
  }
  else
  {
    sub_251F36CC0();
    sub_251F36CD0();
    if (!v7)
    {
LABEL_11:
      sub_251F36CC0();
      sub_251F36CD0();
      if (v8) {
        goto LABEL_15;
      }
      goto LABEL_12;
    }
  }
  sub_251F36CC0();
  if ((v8 & 1) == 0) {
LABEL_12:
  }
    sub_251F36CC0();
LABEL_15:
  sub_251F36CC0();
  if ((v9 & 1) == 0) {
    sub_251F36CC0();
  }
  return sub_251F36CC0();
}

uint64_t sub_251A8C454(char a1)
{
  uint64_t result = 25705;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x4C746E6572727563;
      break;
    case 2:
      unsigned int v3 = 1282304365;
      goto LABEL_5;
    case 3:
      unsigned int v3 = 1282957677;
LABEL_5:
      uint64_t result = v3 | 0x6C65766500000000;
      break;
    case 4:
    case 9:
      uint64_t result = 0xD000000000000013;
      break;
    case 5:
      uint64_t result = 0x6C6576654C6E6FLL;
      break;
    case 6:
      uint64_t result = 0xD000000000000010;
      break;
    case 7:
      uint64_t result = 0xD000000000000011;
      break;
    case 8:
      uint64_t result = 0x4D746C7561666564;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_251A8C590()
{
  return sub_251A8C454(*v0);
}

uint64_t sub_251A8C598@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251A901A0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251A8C5C0(uint64_t a1)
{
  unint64_t v2 = sub_251A900A4();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251A8C5FC(uint64_t a1)
{
  unint64_t v2 = sub_251A900A4();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticLevelControlCluster.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D528);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  int v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  __int16 v8 = *((_WORD *)v1 + 4);
  char v9 = *((unsigned char *)v1 + 10);
  int v10 = *((unsigned __int8 *)v1 + 11);
  v24[18] = *((unsigned __int8 *)v1 + 12);
  v24[19] = v10;
  int v11 = *((unsigned __int8 *)v1 + 13);
  v24[16] = *((unsigned __int8 *)v1 + 14);
  v24[17] = v11;
  int v12 = *((unsigned __int8 *)v1 + 15);
  int v13 = *((unsigned __int16 *)v1 + 8);
  v24[14] = *((unsigned __int8 *)v1 + 18);
  v24[15] = v12;
  v24[12] = *((unsigned __int8 *)v1 + 19);
  v24[13] = v13;
  int v14 = *((unsigned __int8 *)v1 + 20);
  v24[10] = *((unsigned __int16 *)v1 + 11);
  v24[11] = v14;
  int v15 = *((unsigned __int8 *)v1 + 24);
  v24[8] = *((unsigned __int16 *)v1 + 13);
  v24[9] = v15;
  int v16 = *((unsigned __int8 *)v1 + 28);
  v24[6] = *((unsigned __int8 *)v1 + 29);
  v24[7] = v16;
  int v17 = *((unsigned __int8 *)v1 + 30);
  v24[4] = *((unsigned __int8 *)v1 + 31);
  v24[5] = v17;
  v24[3] = *((unsigned __int8 *)v1 + 32);
  uint64_t v18 = a1[3];
  uint64_t v19 = a1;
  uint64_t v21 = v20;
  __swift_project_boxed_opaque_existential_1(v19, v18);
  sub_251A900A4();
  sub_251F36DA0();
  uint64_t v26 = v7;
  __int16 v27 = v8;
  char v28 = v9;
  char v29 = 0;
  sub_251A900F8();
  uint64_t v22 = v25;
  sub_251F36A20();
  if (!v22)
  {
    LOBYTE(v26) = 1;
    sub_251F36A40();
    LOBYTE(v26) = 2;
    sub_251F36990();
    LOBYTE(v26) = 3;
    sub_251F36990();
    LOBYTE(v26) = 4;
    sub_251F369A0();
    LOBYTE(v26) = 5;
    sub_251F36990();
    LOBYTE(v26) = 6;
    sub_251F369A0();
    LOBYTE(v26) = 7;
    sub_251F369A0();
    LOBYTE(v26) = 8;
    sub_251F36990();
    LOBYTE(v26) = 9;
    sub_251F36990();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v21);
}

uint64_t StaticLevelControlCluster.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t StaticLevelControlCluster.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D540);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  __int16 v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251A900A4();
  sub_251F36D90();
  if (!v2)
  {
    char v33 = 0;
    sub_251A9014C();
    sub_251F36880();
    char v28 = a2;
    uint64_t v9 = v29;
    int v10 = v30;
    int v11 = v31;
    LOBYTE(v29) = 1;
    int v25 = sub_251F368A0();
    int v26 = v11;
    uint64_t v27 = v9;
    int v32 = v10;
    LOBYTE(v29) = 2;
    LOWORD(v11) = sub_251F367F0();
    LOBYTE(v29) = 3;
    LOWORD(v9) = sub_251F367F0();
    LOBYTE(v29) = 4;
    int v12 = sub_251F36800();
    LOBYTE(v29) = 5;
    int v24 = sub_251F367F0();
    LOBYTE(v29) = 6;
    int v23 = sub_251F36800();
    LOBYTE(v29) = 7;
    int v22 = sub_251F36800();
    LOBYTE(v29) = 8;
    int v21 = sub_251F367F0();
    LOBYTE(v29) = 9;
    __int16 v14 = sub_251F367F0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    int v15 = v28;
    *char v28 = v27;
    *((_WORD *)v15 + 4) = v32;
    *((unsigned char *)v15 + 10) = v26;
    *((unsigned char *)v15 + 11) = v25;
    *((unsigned char *)v15 + 12) = v11;
    *((unsigned char *)v15 + 13) = BYTE1(v11) & 1;
    *((unsigned char *)v15 + 14) = v9;
    *((unsigned char *)v15 + 15) = BYTE1(v9) & 1;
    *((_WORD *)v15 + 8) = v12;
    *((unsigned char *)v15 + 18) = BYTE2(v12) & 1;
    char v16 = BYTE1(v24);
    *((unsigned char *)v15 + 19) = v24;
    *((unsigned char *)v15 + 20) = v16 & 1;
    char v17 = BYTE2(v23);
    *((_WORD *)v15 + 11) = v23;
    *((unsigned char *)v15 + 24) = v17 & 1;
    char v18 = BYTE2(v22);
    *((_WORD *)v15 + 13) = v22;
    *((unsigned char *)v15 + 28) = v18 & 1;
    char v19 = BYTE1(v21);
    *((unsigned char *)v15 + 29) = v21;
    *((unsigned char *)v15 + 30) = v19 & 1;
    *((unsigned char *)v15 + 31) = v14;
    *((unsigned char *)v15 + 32) = HIBYTE(v14) & 1;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

uint64_t sub_251A8CDE0()
{
  return sub_251F36D00();
}

uint64_t sub_251A8CEB8()
{
  return sub_251F36D00();
}

void sub_251A8CF88(uint64_t a1@<X8>)
{
  __int16 v2 = *(_WORD *)(v1 + 8);
  char v3 = *(unsigned char *)(v1 + 10);
  *(void *)a1 = *(void *)v1;
  *(_WORD *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 10) = v3;
}

uint64_t sub_251A8CFA4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return StaticLevelControlCluster.init(from:)(a1, a2);
}

uint64_t sub_251A8CFBC(void *a1)
{
  return StaticLevelControlCluster.encode(to:)(a1);
}

uint64_t sub_251A8CFD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  void (*v9)(uint64_t *__return_ptr, uint64_t *, uint64_t, uint64_t, uint64_t);
  int v10;
  unint64_t v11;
  uint64_t v12;
  char v13;
  __int16 v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t result;
  int v23;
  unint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  unint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  unint64_t v34;
  int v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  unint64_t v40;
  uint64_t v41;
  int v42;
  char v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int16 v60;
  char v61;
  uint64_t v62;
  __int16 v63;
  char v64;
  uint64_t v65;

  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *(unsigned __int16 *)(a1 + 8);
  uint64_t v7 = *(unsigned __int8 *)(a1 + 10);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v59 = v5;
  uint64_t v60 = v6;
  uint64_t v61 = v7;
  uint64_t v9 = *(void (**)(uint64_t *__return_ptr, uint64_t *, uint64_t, uint64_t, uint64_t))(a2 + 48);
  v9(&v62, &v59, 0, ObjectType, a2);
  if (v65)
  {
    if (swift_dynamicCast())
    {
      int v57 = v59;
      uint64_t v59 = v5;
      uint64_t v60 = v6;
      uint64_t v61 = v7;
      v9(&v62, &v59, 2, ObjectType, a2);
      if (v65)
      {
        int v10 = swift_dynamicCast();
        int v11 = (unint64_t)v59 << 32;
        if (!v10) {
          int v11 = 0;
        }
        uint64_t v56 = v11;
        int v12 = 0x10000000000;
        if (v10) {
          int v12 = 0;
        }
      }
      else
      {
        sub_251A9090C((uint64_t)&v62);
        uint64_t v56 = 0;
        int v12 = 0x10000000000;
      }
      uint64_t v55 = v12;
      uint64_t v59 = v5;
      uint64_t v60 = v6;
      uint64_t v61 = v7;
      v9(&v62, &v59, 3, ObjectType, a2);
      if (v65)
      {
        int v23 = swift_dynamicCast();
        int v24 = (unint64_t)v59 << 48;
        if (!v23) {
          int v24 = 0;
        }
        uint64_t v54 = v24;
        int v25 = 0x100000000000000;
        if (v23) {
          int v25 = 0;
        }
      }
      else
      {
        sub_251A9090C((uint64_t)&v62);
        uint64_t v54 = 0;
        int v25 = 0x100000000000000;
      }
      uint64_t v53 = v25;
      uint64_t v59 = v5;
      uint64_t v60 = v6;
      uint64_t v61 = v7;
      v9(&v62, &v59, 16, ObjectType, a2);
      if (v65)
      {
        int v26 = swift_dynamicCast();
        uint64_t v27 = (unsigned __int16)v59;
        if (!v26) {
          uint64_t v27 = 0;
        }
        uint64_t v52 = v27;
        char v28 = 0x10000;
        if (v26) {
          char v28 = 0;
        }
      }
      else
      {
        sub_251A9090C((uint64_t)&v62);
        uint64_t v52 = 0;
        char v28 = 0x10000;
      }
      uint64_t v51 = v28;
      uint64_t v59 = v5;
      uint64_t v60 = v6;
      uint64_t v61 = v7;
      v9(&v62, &v59, 17, ObjectType, a2);
      if (v65)
      {
        uint64_t v29 = swift_dynamicCast();
        unsigned __int16 v30 = (unint64_t)v59 << 24;
        if (!v29) {
          unsigned __int16 v30 = 0;
        }
        uint64_t v50 = v30;
        unsigned __int8 v31 = 0x100000000;
        if (v29) {
          unsigned __int8 v31 = 0;
        }
      }
      else
      {
        sub_251A9090C((uint64_t)&v62);
        uint64_t v50 = 0;
        unsigned __int8 v31 = 0x100000000;
      }
      uint64_t v49 = v31;
      uint64_t v59 = v5;
      uint64_t v60 = v6;
      uint64_t v61 = v7;
      v9(&v62, &v59, 18, ObjectType, a2);
      if (v65)
      {
        int v32 = swift_dynamicCast();
        char v33 = v32 ^ 1u;
        uint64_t v34 = (unint64_t)(unsigned __int16)v59 << 48;
        if (!v32) {
          uint64_t v34 = 0;
        }
        uint64_t v48 = v34;
      }
      else
      {
        sub_251A9090C((uint64_t)&v62);
        uint64_t v48 = 0;
        char v33 = 1;
      }
      uint64_t v59 = v5;
      uint64_t v60 = v6;
      uint64_t v61 = v7;
      v9(&v62, &v59, 19, ObjectType, a2);
      if (v65)
      {
        uint64_t v35 = swift_dynamicCast();
        BOOL v36 = (unint64_t)(unsigned __int16)v59 << 16;
        if (!v35) {
          BOOL v36 = 0;
        }
        uint64_t v47 = v36;
        uint64_t v37 = 0x100000000;
        if (v35) {
          uint64_t v37 = 0;
        }
      }
      else
      {
        sub_251A9090C((uint64_t)&v62);
        uint64_t v47 = 0;
        uint64_t v37 = 0x100000000;
      }
      uint64_t v46 = v37;
      int v58 = a3;
      uint64_t v59 = v5;
      int v38 = v6;
      uint64_t v60 = v6;
      uint64_t v61 = v7;
      v9(&v62, &v59, 20, ObjectType, a2);
      if (v65)
      {
        uint64_t v39 = swift_dynamicCast();
        if (v39) {
          uint64_t v40 = (unint64_t)v59 << 40;
        }
        else {
          uint64_t v40 = 0;
        }
        uint64_t v41 = 0x1000000000000;
        if (v39) {
          uint64_t v41 = 0;
        }
      }
      else
      {
        sub_251A9090C((uint64_t)&v62);
        uint64_t v40 = 0;
        uint64_t v41 = 0x1000000000000;
      }
      size_t v45 = v41;
      uint64_t v59 = v5;
      uint64_t v60 = v38;
      uint64_t v61 = v7;
      v9(&v62, &v59, 0x4000, ObjectType, a2);
      swift_unknownObjectRelease();
      if (v65)
      {
        uint64_t v42 = swift_dynamicCast();
        int v43 = v42 ^ 1;
        uint64_t v44 = (unint64_t)v59 << 56;
        if (!v42) {
          uint64_t v44 = 0;
        }
      }
      else
      {
        sub_251A9090C((uint64_t)&v62);
        uint64_t v44 = 0;
        int v43 = 1;
      }
      uint64_t result = v50;
      *(void *)int v58 = v5;
      *(void *)(v58 + 8) = v38 | (v7 << 16) | (v57 << 24) | v54 | v56 | v55 | v53;
      *(void *)(v58 + 16) = v51 | v52 | v50 | v49 | v48;
      *(void *)(v58 + 24) = v47 | v33 | v46 | v40 | v45 | v44;
      *(unsigned char *)(v58 + 32) = v43;
      return result;
    }
    int v13 = v7;
  }
  else
  {
    int v13 = v7;
    sub_251A9090C((uint64_t)&v62);
  }
  __int16 v14 = v6;
  if (qword_26B21ECD0 != -1) {
    swift_once();
  }
  int v15 = sub_251F350A0();
  __swift_project_value_buffer(v15, (uint64_t)qword_26B21ECB8);
  char v16 = sub_251F35080();
  char v17 = sub_251F35FB0();
  if (os_log_type_enabled(v16, v17))
  {
    char v18 = (uint8_t *)swift_slowAlloc();
    char v19 = swift_slowAlloc();
    *(_DWORD *)char v18 = 136315138;
    uint64_t v59 = v19;
    uint64_t v62 = v5;
    uint64_t v63 = v14;
    uint64_t v64 = v13;
    uint64_t v20 = ClusterPath.description.getter();
    uint64_t v62 = sub_251A00E84(v20, v21, &v59);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2519F3000, v16, v17, "Couldn't get value for current level attribute '%s'", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v19, -1, -1);
    MEMORY[0x2533AC760](v18, -1, -1);
  }

  uint64_t result = swift_unknownObjectRelease();
  *(_OWORD *)a3 = xmmword_251F3B8F0;
  *(void *)(a3 + 16) = 0;
  *(void *)(a3 + 24) = 0;
  *(unsigned char *)(a3 + 32) = 0;
  return result;
}

uint64_t StaticLevelControlCluster.setOnLevel(_:)(char a1)
{
  *(unsigned char *)(v2 + 179) = a1;
  uint64_t v3 = *v1;
  __int16 v4 = *((_WORD *)v1 + 4);
  char v5 = *((unsigned char *)v1 + 10);
  sub_251A1A568(0, &qword_269B9D558);
  *(void *)(v2 + 168) = v3;
  *(_WORD *)(v2 + 176) = v4;
  *(unsigned char *)(v2 + 178) = v5;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 184) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_251A8D7D0;
  return sub_251C4E0D4((uint64_t *)(v2 + 168));
}

uint64_t sub_251A8D7D0(uint64_t a1)
{
  *(void *)(*(void *)v1 + 192) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251A8D8D0, 0, 0);
}

uint64_t sub_251A8D8D0()
{
  uint64_t v1 = *(void **)(v0 + 192);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D560);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_251F3A500;
    *(void *)(inited + 32) = sub_251F356F0();
    *(void *)(inited + 40) = v3;
    uint64_t v4 = sub_251F356F0();
    *(void *)(inited + 72) = MEMORY[0x263F8D310];
    *(void *)(inited + 48) = v4;
    *(void *)(inited + 56) = v5;
    *(void *)(inited + 80) = sub_251F356F0();
    *(void *)(inited + 88) = v6;
    uint64_t v7 = sub_251F36C50();
    *(void *)(inited + 120) = sub_251A1A568(0, (unint64_t *)&qword_269BA04A0);
    *(void *)(inited + 96) = v7;
    sub_2519FA1A4(inited);
    uint64_t v8 = (void *)sub_251F35540();
    swift_bridgeObjectRelease();
    if (qword_269B9C330 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v9 = (void *)qword_269B9FC18;
    if (qword_269B9FC18)
    {
      int v10 = (void *)qword_269B9FC18;
    }
    else
    {
      int v10 = (void *)sub_251F36100();
      uint64_t v9 = 0;
    }
    id v11 = v9;
    objc_msgSend(v1, sel_writeAttributeOnLevelWithValue_expectedValueInterval_, v8, v10);
  }
  int v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t StaticLevelControlCluster.setOnOffTransitionTime(_:)(__int16 a1)
{
  *(_WORD *)(v2 + 180) = a1;
  uint64_t v3 = *v1;
  __int16 v4 = *((_WORD *)v1 + 4);
  char v5 = *((unsigned char *)v1 + 10);
  sub_251A1A568(0, &qword_269B9D558);
  *(void *)(v2 + 168) = v3;
  *(_WORD *)(v2 + 176) = v4;
  *(unsigned char *)(v2 + 178) = v5;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 184) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_251A8DB90;
  return sub_251C4E0D4((uint64_t *)(v2 + 168));
}

uint64_t sub_251A8DB90(uint64_t a1)
{
  *(void *)(*(void *)v1 + 192) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251A8DC90, 0, 0);
}

uint64_t sub_251A8DC90()
{
  uint64_t v1 = *(void **)(v0 + 192);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D560);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_251F3A500;
    *(void *)(inited + 32) = sub_251F356F0();
    *(void *)(inited + 40) = v3;
    uint64_t v4 = sub_251F356F0();
    *(void *)(inited + 72) = MEMORY[0x263F8D310];
    *(void *)(inited + 48) = v4;
    *(void *)(inited + 56) = v5;
    *(void *)(inited + 80) = sub_251F356F0();
    *(void *)(inited + 88) = v6;
    uint64_t v7 = sub_251F36D40();
    *(void *)(inited + 120) = sub_251A1A568(0, (unint64_t *)&qword_269BA04A0);
    *(void *)(inited + 96) = v7;
    sub_2519FA1A4(inited);
    uint64_t v8 = (void *)sub_251F35540();
    swift_bridgeObjectRelease();
    if (qword_269B9C330 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v9 = (void *)qword_269B9FC18;
    if (qword_269B9FC18)
    {
      int v10 = (void *)qword_269B9FC18;
    }
    else
    {
      int v10 = (void *)sub_251F36100();
      uint64_t v9 = 0;
    }
    id v11 = v9;
    objc_msgSend(v1, sel_writeAttributeOnOffTransitionTimeWithValue_expectedValueInterval_, v8, v10);
  }
  int v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t StaticLevelControlCluster.cluster.getter()
{
  uint64_t v2 = *v0;
  __int16 v3 = *((_WORD *)v0 + 4);
  char v4 = *((unsigned char *)v0 + 10);
  sub_251A1A568(0, &qword_269B9D558);
  *(void *)(v1 + 16) = v2;
  *(_WORD *)(v1 + 24) = v3;
  *(unsigned char *)(v1 + 26) = v4;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 32) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_251A8DF4C;
  return sub_251C4E0D4((uint64_t *)(v1 + 16));
}

uint64_t sub_251A8DF4C(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  __int16 v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t StaticLevelControlCluster.moveToLevel(level:)(char a1)
{
  *(unsigned char *)(v2 + 83) = a1;
  *(void *)(v2 + 88) = *(void *)v1;
  *(_WORD *)(v2 + 84) = *(_WORD *)(v1 + 8);
  *(unsigned char *)(v2 + 86) = *(unsigned char *)(v1 + 10);
  return MEMORY[0x270FA2498](sub_251A8E080, 0, 0);
}

uint64_t sub_251A8E080()
{
  char v1 = *(unsigned char *)(v0 + 86);
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v3 = *(unsigned __int8 *)(v0 + 83);
  __int16 v4 = *(_WORD *)(v0 + 84);
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F10EC0]), sel_init);
  *(void *)(v0 + 96) = v5;
  uint64_t v6 = (void *)sub_251F36C50();
  objc_msgSend(v5, sel_setLevel_, v6);

  sub_251A1A568(0, (unint64_t *)&qword_269BA04A0);
  uint64_t v7 = (void *)sub_251F36100();
  objc_msgSend(v5, sel_setTransitionTime_, v7);

  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D1D8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_251F38650;
  *(_DWORD *)(inited + 32) = 0;
  *(void *)(inited + 40) = v3;
  *(unsigned char *)(inited + 48) = 1;
  unint64_t v9 = sub_251A19C30(inited);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CE50);
  swift_arrayDestroy();
  sub_251AA4920(v9);
  *(void *)(v0 + 104) = v10;
  swift_bridgeObjectRelease();
  sub_251A1A568(0, &qword_269B9D558);
  *(void *)(v0 + 72) = v2;
  *(_WORD *)(v0 + 80) = v4;
  *(unsigned char *)(v0 + 82) = v1;
  id v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v11;
  *id v11 = v0;
  v11[1] = sub_251A8E270;
  return sub_251C4E0D4((uint64_t *)(v0 + 72));
}

uint64_t sub_251A8E270(uint64_t a1)
{
  *(void *)(*(void *)v1 + 120) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251A8E370, 0, 0);
}

uint64_t sub_251A8E370()
{
  uint64_t v1 = *(void *)(v0 + 104);
  id v2 = *(id *)(v0 + 96);
  ClusterPath.description.getter();
  sub_251F35800();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 128) = 0x8000000251F68AE0;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_269B9D6D8
                                                                                             + dword_269B9D6D8);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_251A8E4B0;
  uint64_t v4 = *(void *)(v0 + 120);
  uint64_t v5 = *(void *)(v0 + 96);
  return v7(0xD000000000000014, 0x8000000251F68AC0, v4, v1, 0xD00000000000001ALL, 0x8000000251F68AE0, v5);
}

uint64_t sub_251A8E4B0()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 120);
  id v2 = *(void **)(*(void *)v0 + 96);
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA2498](sub_251A8E61C, 0, 0);
}

uint64_t sub_251A8E61C()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251A8E67C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[18] = a4;
  v5[19] = a5;
  v5[16] = a2;
  v5[17] = a3;
  v5[15] = a1;
  return MEMORY[0x270FA2498](sub_251A8E6A4, 0, 0);
}

uint64_t sub_251A8E6A4()
{
  uint64_t v1 = v0[17];
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA5550);
    uint64_t v1 = sub_251F35AA0();
  }
  v0[20] = v1;
  uint64_t v3 = v0[18];
  uint64_t v2 = v0[19];
  uint64_t v4 = (void *)v0[16];
  v0[2] = v0;
  v0[3] = sub_251A8E7D8;
  uint64_t v5 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_251A5B804;
  v0[13] = &block_descriptor_25;
  v0[14] = v5;
  objc_msgSend(v4, sel_moveToLevelWithOnOffWithParams_expectedValues_expectedValueInterval_completion_, v2, v1, v3, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_251A8E7D8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 168) = v1;
  if (v1) {
    uint64_t v2 = sub_251A8E960;
  }
  else {
    uint64_t v2 = sub_251A8E8E8;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_251A8E8E8()
{
  uint64_t v1 = (void *)v0[20];
  *(void *)(v0[15] + 24) = MEMORY[0x263F8EE60] + 8;

  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_251A8E960()
{
  uint64_t v1 = *(void **)(v0 + 160);
  swift_willThrow();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t StaticLevelControlCluster.move(direction:)(char a1)
{
  *(unsigned char *)(v2 + 27) = a1;
  *(void *)(v2 + 32) = *(void *)v1;
  *(_WORD *)(v2 + 28) = *(_WORD *)(v1 + 8);
  *(unsigned char *)(v2 + 30) = *(unsigned char *)(v1 + 10);
  return MEMORY[0x270FA2498](sub_251A8EA08, 0, 0);
}

uint64_t sub_251A8EA08()
{
  char v1 = *(unsigned char *)(v0 + 30);
  uint64_t v2 = *(void *)(v0 + 32);
  __int16 v3 = *(_WORD *)(v0 + 28);
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F10EC8]), sel_init);
  *(void *)(v0 + 40) = v4;
  uint64_t v5 = (void *)sub_251F36C50();
  objc_msgSend(v4, sel_setMoveMode_, v5);

  sub_251A1A568(0, (unint64_t *)&qword_269BA04A0);
  uint64_t v6 = (void *)sub_251F36100();
  objc_msgSend(v4, sel_setRate_, v6);

  unint64_t v7 = sub_251A19C30(MEMORY[0x263F8EE78]);
  sub_251AA4920(v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_251A1A568(0, &qword_269B9D558);
  *(void *)(v0 + 16) = v2;
  *(_WORD *)(v0 + 24) = v3;
  *(unsigned char *)(v0 + 26) = v1;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_251A8EB94;
  return sub_251C4E0D4((uint64_t *)(v0 + 16));
}

uint64_t sub_251A8EB94(uint64_t a1)
{
  *(void *)(*(void *)v1 + 56) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251A8EC94, 0, 0);
}

uint64_t sub_251A8EC94()
{
  id v1 = *(id *)(v0 + 40);
  ClusterPath.description.getter();
  sub_251F35800();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 64) = 0x8000000251F68AE0;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_269B9D6D0
                                                                                             + dword_269B9D6D0);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_251A8EDCC;
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v4 = *(void *)(v0 + 40);
  return v6(0x6874695765766F6DLL, 0xED000066664F6E4FLL, v3, 0, 0xD00000000000001ALL, 0x8000000251F68AE0, v4);
}

uint64_t sub_251A8EDCC()
{
  id v1 = *(void **)(*(void *)v0 + 56);
  uint64_t v2 = *(void **)(*(void *)v0 + 40);
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_251A8EF1C, 0, 0);
}

uint64_t sub_251A8EF1C()
{
  id v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251A8EF7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[16] = a2;
  v5[17] = a5;
  v5[15] = a1;
  return MEMORY[0x270FA2498](sub_251A8EFA0, 0, 0);
}

uint64_t sub_251A8EFA0()
{
  uint64_t v2 = (void *)v0[16];
  uint64_t v1 = v0[17];
  v0[2] = v0;
  v0[3] = sub_251A8F0A0;
  uint64_t v3 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_251A5B804;
  v0[13] = &block_descriptor_23;
  v0[14] = v3;
  objc_msgSend(v2, sel_moveWithOnOffWithParams_expectedValues_expectedValueInterval_completion_, v1, 0, 0, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_251A8F0A0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 144) = v1;
  if (v1) {
    uint64_t v2 = sub_251A8F1DC;
  }
  else {
    uint64_t v2 = sub_251A8F1B0;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_251A8F1B0()
{
  *(void *)(*(void *)(v0 + 120) + 24) = MEMORY[0x263F8EE60] + 8;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_251A8F1DC()
{
  swift_willThrow();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t StaticLevelControlCluster.step(mode:)(char a1)
{
  *(unsigned char *)(v2 + 83) = a1;
  *(void *)(v2 + 88) = *(void *)v1;
  *(_DWORD *)(v2 + 84) = *(_DWORD *)(v1 + 8);
  return MEMORY[0x270FA2498](sub_251A8F278, 0, 0);
}

uint64_t sub_251A8F278()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 87);
  char v2 = *(unsigned char *)(v0 + 86);
  uint64_t v3 = *(void *)(v0 + 88);
  int v4 = *(unsigned __int8 *)(v0 + 83);
  __int16 v5 = *(_WORD *)(v0 + 84);
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F10ED0]), sel_init);
  *(void *)(v0 + 96) = v6;
  uint64_t v7 = (void *)sub_251F36C50();
  objc_msgSend(v6, sel_setStepMode_, v7);

  uint64_t v8 = (void *)sub_251F35EB0();
  objc_msgSend(v6, sel_setStepSize_, v8);

  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D1D8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_251F38650;
  *(_DWORD *)(inited + 32) = 0;
  uint64_t v10 = -5;
  if (v4 != 1) {
    uint64_t v10 = 5;
  }
  *(void *)(inited + 40) = v10 + v1;
  *(unsigned char *)(inited + 48) = 1;
  unint64_t v11 = sub_251A19C30(inited);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CE50);
  swift_arrayDestroy();
  sub_251AA4920(v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_251A1A568(0, &qword_269B9D558);
  *(void *)(v0 + 72) = v3;
  *(_WORD *)(v0 + 80) = v5;
  *(unsigned char *)(v0 + 82) = v2;
  int v12 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v12;
  *int v12 = v0;
  v12[1] = sub_251A8F46C;
  return sub_251C4E0D4((uint64_t *)(v0 + 72));
}

uint64_t sub_251A8F46C(uint64_t a1)
{
  *(void *)(*(void *)v1 + 112) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251A8F56C, 0, 0);
}

uint64_t sub_251A8F56C()
{
  id v1 = *(id *)(v0 + 96);
  ClusterPath.description.getter();
  sub_251F35800();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 120) = 0x8000000251F68AE0;
  id v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_269B9D6C8
                                                                                             + dword_269B9D6C8);
  char v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v2;
  *char v2 = v0;
  v2[1] = sub_251A8F6A4;
  uint64_t v3 = *(void *)(v0 + 112);
  uint64_t v4 = *(void *)(v0 + 96);
  return v6(0x6874695770657473, 0xED000066664F6E4FLL, v3, 0, 0xD00000000000001ALL, 0x8000000251F68AE0, v4);
}

uint64_t sub_251A8F6A4()
{
  id v1 = *(void **)(*(void *)v0 + 112);
  char v2 = *(void **)(*(void *)v0 + 96);
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_251A90974, 0, 0);
}

uint64_t sub_251A8F7F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[16] = a2;
  v5[17] = a5;
  v5[15] = a1;
  return MEMORY[0x270FA2498](sub_251A8F818, 0, 0);
}

uint64_t sub_251A8F818()
{
  char v2 = (void *)v0[16];
  uint64_t v1 = v0[17];
  v0[2] = v0;
  v0[3] = sub_251A8F918;
  uint64_t v3 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_251A5B804;
  v0[13] = &block_descriptor_21;
  v0[14] = v3;
  objc_msgSend(v2, sel_stepWithOnOffWithParams_expectedValues_expectedValueInterval_completion_, v1, 0, 0, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t sub_251A8F918()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 144) = v1;
  if (v1) {
    char v2 = sub_251A90970;
  }
  else {
    char v2 = sub_251A9096C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t StaticLevelControlCluster.stop()()
{
  *(void *)(v1 + 32) = *(void *)v0;
  *(_WORD *)(v1 + 28) = *(_WORD *)(v0 + 8);
  *(unsigned char *)(v1 + 27) = *(unsigned char *)(v0 + 10);
  return MEMORY[0x270FA2498](sub_251A8FA5C, 0, 0);
}

uint64_t sub_251A8FA5C()
{
  char v1 = *(unsigned char *)(v0 + 27);
  __int16 v2 = *(_WORD *)(v0 + 28);
  uint64_t v3 = *(void *)(v0 + 32);
  *(void *)(v0 + 40) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F10ED8]), sel_init);
  sub_251A1A568(0, &qword_269B9D558);
  *(void *)(v0 + 16) = v3;
  *(_WORD *)(v0 + 24) = v2;
  *(unsigned char *)(v0 + 26) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_251A8FB50;
  return sub_251C4E0D4((uint64_t *)(v0 + 16));
}

uint64_t sub_251A8FB50(uint64_t a1)
{
  *(void *)(*(void *)v1 + 56) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251A8FC50, 0, 0);
}

uint64_t sub_251A8FC50()
{
  id v1 = *(id *)(v0 + 40);
  ClusterPath.description.getter();
  sub_251F35800();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 64) = 0x8000000251F68AE0;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_269B9D6C0
                                                                                             + dword_269B9D6C0);
  __int16 v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v2;
  *__int16 v2 = v0;
  v2[1] = sub_251A8EDCC;
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v4 = *(void *)(v0 + 40);
  return v6(0x68746957706F7473, 0xED000066664F6E4FLL, v3, 0, 0xD00000000000001ALL, 0x8000000251F68AE0, v4);
}

uint64_t sub_251A8FD88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[16] = a2;
  v5[17] = a5;
  v5[15] = a1;
  return MEMORY[0x270FA2498](sub_251A8FDAC, 0, 0);
}

uint64_t sub_251A8FDAC()
{
  __int16 v2 = (void *)v0[16];
  uint64_t v1 = v0[17];
  v0[2] = v0;
  v0[3] = sub_251A8F918;
  uint64_t v3 = swift_continuation_init();
  v0[10] = MEMORY[0x263EF8330];
  v0[11] = 0x40000000;
  v0[12] = sub_251A5B804;
  v0[13] = &block_descriptor_1;
  v0[14] = v3;
  objc_msgSend(v2, sel_stopWithOnOffWithParams_expectedValues_expectedValueInterval_completion_, v1, 0, 0, v0 + 10);
  return MEMORY[0x270FA23F0](v0 + 2);
}

uint64_t _s13HomeDataModel25StaticLevelControlClusterV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t result = 0;
  if (*(void *)a1 == *(void *)a2 && *(unsigned __int16 *)(a1 + 8) == *(unsigned __int16 *)(a2 + 8))
  {
    uint64_t result = 0;
    if (dword_251F3BB64[*(char *)(a1 + 10)] == dword_251F3BB64[*(char *)(a2 + 10)]
      && *(unsigned __int8 *)(a1 + 11) == *(unsigned __int8 *)(a2 + 11))
    {
      int v4 = *(unsigned __int8 *)(a1 + 14);
      char v5 = *(unsigned char *)(a1 + 15);
      int v6 = *(unsigned __int16 *)(a1 + 16);
      char v7 = *(unsigned char *)(a1 + 18);
      int v8 = *(unsigned __int8 *)(a1 + 19);
      char v9 = *(unsigned char *)(a1 + 20);
      int v10 = *(unsigned __int16 *)(a1 + 22);
      char v11 = *(unsigned char *)(a1 + 24);
      int v12 = *(unsigned __int16 *)(a1 + 26);
      char v13 = *(unsigned char *)(a1 + 28);
      char v14 = *(unsigned char *)(a1 + 30);
      int v23 = *(unsigned __int8 *)(a1 + 31);
      int v24 = *(unsigned __int8 *)(a1 + 29);
      char v25 = *(unsigned char *)(a1 + 32);
      if (*(unsigned char *)(a1 + 13))
      {
        if (!*(unsigned char *)(a2 + 13)) {
          return 0;
        }
      }
      else
      {
        if (*(unsigned __int8 *)(a1 + 12) == *(unsigned __int8 *)(a2 + 12)) {
          char v15 = *(unsigned char *)(a2 + 13);
        }
        else {
          char v15 = 1;
        }
        if (v15) {
          return 0;
        }
      }
      if (v5)
      {
        if (!*(unsigned char *)(a2 + 15)) {
          return 0;
        }
      }
      else
      {
        if (v4 == *(unsigned __int8 *)(a2 + 14)) {
          char v16 = *(unsigned char *)(a2 + 15);
        }
        else {
          char v16 = 1;
        }
        if (v16) {
          return 0;
        }
      }
      if (v7)
      {
        if (!*(unsigned char *)(a2 + 18)) {
          return 0;
        }
      }
      else
      {
        if (v6 == *(unsigned __int16 *)(a2 + 16)) {
          char v17 = *(unsigned char *)(a2 + 18);
        }
        else {
          char v17 = 1;
        }
        if (v17) {
          return 0;
        }
      }
      if (v9)
      {
        if (!*(unsigned char *)(a2 + 20)) {
          return 0;
        }
      }
      else
      {
        if (v8 == *(unsigned __int8 *)(a2 + 19)) {
          char v18 = *(unsigned char *)(a2 + 20);
        }
        else {
          char v18 = 1;
        }
        if (v18) {
          return 0;
        }
      }
      if (v11)
      {
        if (!*(unsigned char *)(a2 + 24)) {
          return 0;
        }
      }
      else
      {
        if (v10 == *(unsigned __int16 *)(a2 + 22)) {
          char v19 = *(unsigned char *)(a2 + 24);
        }
        else {
          char v19 = 1;
        }
        if (v19) {
          return 0;
        }
      }
      if (v13)
      {
        if (!*(unsigned char *)(a2 + 28)) {
          return 0;
        }
      }
      else
      {
        if (v12 == *(unsigned __int16 *)(a2 + 26)) {
          char v20 = *(unsigned char *)(a2 + 28);
        }
        else {
          char v20 = 1;
        }
        if (v20) {
          return 0;
        }
      }
      if (v14)
      {
        if (!*(unsigned char *)(a2 + 30)) {
          return 0;
        }
      }
      else
      {
        if (v24 == *(unsigned __int8 *)(a2 + 29)) {
          char v21 = *(unsigned char *)(a2 + 30);
        }
        else {
          char v21 = 1;
        }
        if (v21) {
          return 0;
        }
      }
      if (v25)
      {
        if ((*(unsigned char *)(a2 + 32) & 1) == 0) {
          return 0;
        }
      }
      else
      {
        if (v23 == *(unsigned __int8 *)(a2 + 31)) {
          char v22 = *(unsigned char *)(a2 + 32);
        }
        else {
          char v22 = 1;
        }
        if (v22) {
          return 0;
        }
      }
      return 1;
    }
  }
  return result;
}

unint64_t sub_251A900A4()
{
  unint64_t result = qword_269B9D530;
  if (!qword_269B9D530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9D530);
  }
  return result;
}

unint64_t sub_251A900F8()
{
  unint64_t result = qword_269B9D538;
  if (!qword_269B9D538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9D538);
  }
  return result;
}

unint64_t sub_251A9014C()
{
  unint64_t result = qword_269B9D548;
  if (!qword_269B9D548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9D548);
  }
  return result;
}

uint64_t sub_251A901A0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4C746E6572727563 && a2 == 0xEC0000006C657665 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C6576654C6E696DLL && a2 == 0xE800000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6C6576654C78616DLL && a2 == 0xE800000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000251F68B00 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6C6576654C6E6FLL && a2 == 0xE700000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000251F68B20 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000251F68B40 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x4D746C7561666564 && a2 == 0xEF6574615265766FLL || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000251F68B60)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 9;
    }
    else {
      return 10;
    }
  }
}

unint64_t sub_251A905B8()
{
  unint64_t result = qword_269B9D598;
  if (!qword_269B9D598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9D598);
  }
  return result;
}

unint64_t sub_251A90610()
{
  unint64_t result = qword_269B9D5A0;
  if (!qword_269B9D5A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9D5A0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for StaticLevelControlCluster(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xE5 && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 229);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 10);
  BOOL v4 = v3 >= 0x1C;
  int v5 = v3 - 28;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for StaticLevelControlCluster(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xE4)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)unint64_t result = a2 - 229;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xE5) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xE5) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 10) = a2 + 27;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticLevelControlCluster()
{
  return &type metadata for StaticLevelControlCluster;
}

unsigned char *storeEnumTagSinglePayload for StaticLevelControlCluster.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *unint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251A907CCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticLevelControlCluster.CodingKeys()
{
  return &type metadata for StaticLevelControlCluster.CodingKeys;
}

unint64_t sub_251A90808()
{
  unint64_t result = qword_269B9D5A8;
  if (!qword_269B9D5A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9D5A8);
  }
  return result;
}

unint64_t sub_251A90860()
{
  unint64_t result = qword_269B9D5B0;
  if (!qword_269B9D5B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9D5B0);
  }
  return result;
}

unint64_t sub_251A908B8()
{
  unint64_t result = qword_269B9D5B8;
  if (!qword_269B9D5B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_269B9D5B8);
  }
  return result;
}

uint64_t sub_251A9090C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E190);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t static TileLayoutHelper.tileWidthAndColumnCount(for:screenEdgeMargin:spacingBetweenTiles:normalTileWidth:scaleRelativeToBody:roomType:)(double a1, double a2, double a3, double a4, double a5, double a6)
{
  double v6 = a1 - (a3 + a3);
  if (v6 > 0.0)
  {
    uint64_t v7 = 0;
    double v8 = a5 * a6 + a4;
    double v9 = 0.0;
    do
    {
      uint64_t result = v7 + 1;
      if (__OFADD__(v7, 1))
      {
        __break(1u);
        return result;
      }
      double v9 = v8 + v9;
      ++v7;
    }
    while (v9 < v6);
    if (result >= 2) {
      return result;
    }
  }
  return 1;
}

uint64_t static TileLayoutHelper.placeTilesInGrid(orderedTileInfos:columnCount:roomType:)(uint64_t a1, uint64_t a2)
{
  uint64_t v49 = (void *)MEMORY[0x263F8EE78];
  unint64_t v2 = *(void *)(a1 + 16);
  if (!v2)
  {
LABEL_55:
    swift_beginAccess();
    return (uint64_t)v49;
  }
  uint64_t v38 = a1 + 32;
  swift_beginAccess();
  unint64_t v4 = 0;
  unint64_t v5 = 0;
  unint64_t v6 = 0;
  unint64_t v37 = v2;
  while (1)
  {
    double v8 = v49;
    if (v6 < v49[2]) {
      goto LABEL_28;
    }
    uint64_t v48 = 0;
    long long v46 = 0u;
    long long v47 = 0u;
    if (a2 < 0) {
      goto LABEL_62;
    }
    uint64_t v45 = a2;
    if (a2) {
      break;
    }
    int v10 = (void *)MEMORY[0x263F8EE78];
LABEL_23:
    sub_251A1B064((uint64_t)&v45, &qword_269B9D5E0);
    swift_beginAccess();
    double v8 = v49;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      double v8 = sub_251F0FBF8(0, v8[2] + 1, 1, v8);
    }
    unint64_t v16 = v8[2];
    unint64_t v15 = v8[3];
    if (v16 >= v15 >> 1) {
      double v8 = sub_251F0FBF8((void *)(v15 > 1), v16 + 1, 1, v8);
    }
    v8[2] = v16 + 1;
    v8[v16 + 4] = v10;
    uint64_t v49 = v8;
    swift_endAccess();
LABEL_28:
    if (v4 >= v2) {
      goto LABEL_58;
    }
    sub_251A1A4EC(v38 + 40 * v4, (uint64_t)&v45);
    if (v6 >= v8[2]) {
      goto LABEL_59;
    }
    if ((v5 & 0x8000000000000000) != 0) {
      goto LABEL_60;
    }
    uint64_t v17 = v8[v6 + 4];
    if (v5 >= *(void *)(v17 + 16)) {
      goto LABEL_61;
    }
    sub_251A92A0C((long long *)(v17 + 40 * v5 + 32), (uint64_t)v39);
    if (v39[3])
    {
      sub_251A92A8C((uint64_t)v39);
    }
    else
    {
      sub_251A1A4EC((uint64_t)&v45, (uint64_t)&v40);
      swift_beginAccess();
      char v18 = v49;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v49 = v18;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        char v18 = sub_251A925E0(v18);
        uint64_t v49 = v18;
      }
      if (v6 >= v18[2]) {
        goto LABEL_63;
      }
      char v20 = v18 + 4;
      char v21 = (void *)v18[v6 + 4];
      char v22 = swift_isUniquelyReferenced_nonNull_native();
      v20[v6] = v21;
      if ((v22 & 1) == 0)
      {
        char v21 = sub_251A925CC(v21);
        v20[v6] = v21;
      }
      unint64_t v2 = v37;
      if (v5 >= v21[2]) {
        goto LABEL_64;
      }
      sub_251A92AC8((long long *)&v40, (uint64_t)&v21[5 * v5 + 4]);
      int v23 = v49;
      swift_endAccess();
      unint64_t v36 = v4 + 1;
      long long v24 = v47;
      __swift_project_boxed_opaque_existential_1(&v45, v47);
      if ((*(uint64_t (**)(void, void))(*((void *)&v24 + 1) + 88))(v24, *((void *)&v24 + 1)))
      {
        unint64_t v25 = v6 + 1;
        if (v6 + 1 >= v23[2])
        {
          uint64_t v43 = 0;
          long long v41 = 0u;
          long long v42 = 0u;
          if (a2 < 0) {
            goto LABEL_67;
          }
          uint64_t v40 = a2;
          uint64_t v26 = sub_251A914C4(&v40);
          sub_251A1B064((uint64_t)&v40, &qword_269B9D5E0);
          swift_beginAccess();
          uint64_t v27 = v49;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v27 = sub_251F0FBF8(0, v27[2] + 1, 1, v27);
          }
          unint64_t v29 = v27[2];
          unint64_t v28 = v27[3];
          if (v29 >= v28 >> 1) {
            uint64_t v27 = sub_251F0FBF8((void *)(v28 > 1), v29 + 1, 1, v27);
          }
          v27[2] = v29 + 1;
          v27[v29 + 4] = v26;
          uint64_t v49 = v27;
          swift_endAccess();
        }
        uint64_t v40 = 0;
        long long v41 = 0uLL;
        long long v42 = xmmword_251F3BBE0;
        swift_beginAccess();
        unsigned __int16 v30 = v49;
        char v31 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v49 = v30;
        if ((v31 & 1) == 0)
        {
          unsigned __int16 v30 = sub_251A925E0(v30);
          uint64_t v49 = v30;
        }
        if (v25 >= v30[2]) {
          goto LABEL_65;
        }
        int v32 = v30 + 4;
        char v33 = (void *)v30[v25 + 4];
        char v34 = swift_isUniquelyReferenced_nonNull_native();
        v32[v25] = v33;
        if ((v34 & 1) == 0)
        {
          char v33 = sub_251A925CC(v33);
          v32[v25] = v33;
        }
        unint64_t v4 = v36;
        unint64_t v2 = v37;
        if (v5 >= v33[2]) {
          goto LABEL_66;
        }
        sub_251A92AC8((long long *)&v40, (uint64_t)&v33[5 * v5 + 4]);
        swift_endAccess();
      }
      else
      {
        ++v4;
      }
    }
    BOOL v7 = v5 + 1 == a2;
    if (v5 + 1 == a2) {
      unint64_t v5 = 0;
    }
    else {
      ++v5;
    }
    if (v7) {
      ++v6;
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v45);
    if ((uint64_t)v4 >= (uint64_t)v2) {
      goto LABEL_55;
    }
  }
  unint64_t v9 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D5F0);
  int v10 = (void *)swift_allocObject();
  size_t v11 = _swift_stdlib_malloc_size(v10);
  v10[2] = a2;
  v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  sub_251A929A4((uint64_t)&v45, (uint64_t)&v40);
  uint64_t v44 = 0;
  if (!v40) {
    goto LABEL_68;
  }
  uint64_t v12 = (uint64_t)(v10 + 4);
  uint64_t v13 = 1;
  while (1)
  {
    sub_251A929A4((uint64_t)&v40, (uint64_t)v39);
    uint64_t v14 = v39[0];
    sub_251A1B064((uint64_t)v39, &qword_269B9D5E0);
    if (v13 - 1 >= v14) {
      break;
    }
    if (v13 - 1 >= v40) {
      goto LABEL_57;
    }
    uint64_t v44 = v13;
    sub_251A92A0C(&v41, v12);
    if (a2 == v13)
    {
      sub_251A1B064((uint64_t)&v40, &qword_269B9D5E8);
      unint64_t v2 = v37;
      unint64_t v4 = v9;
      goto LABEL_23;
    }
    v12 += 40;
    BOOL v7 = v13++ == v40;
    if (v7) {
      goto LABEL_68;
    }
  }
  __break(1u);
LABEL_57:
  __break(1u);
LABEL_58:
  __break(1u);
LABEL_59:
  __break(1u);
LABEL_60:
  __break(1u);
LABEL_61:
  __break(1u);
LABEL_62:
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  uint64_t result = sub_251A1B064((uint64_t)&v40, &qword_269B9D5E8);
  __break(1u);
  return result;
}

uint64_t static TileLayoutHelper.asciiArtGridForDebugging(grid:orderedTileInfos:columnCount:)(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v28 = a2;
  uint64_t v38 = 0;
  unint64_t v39 = 0xE000000000000000;
  uint64_t v20 = *(void *)(result + 16);
  if (!v20) {
    return 0;
  }
  uint64_t v3 = a3;
  if (a3 < 0) {
    goto LABEL_26;
  }
  uint64_t v22 = 0;
  uint64_t v19 = result + 32;
  uint64_t v23 = v28 + 32;
  unint64_t v27 = 0x8000000251F68B80;
  unint64_t v26 = 0x8000000251F68BA0;
  long long v21 = xmmword_251F38650;
  uint64_t v25 = a3;
  uint64_t v24 = a3 - 1;
  while (!v3)
  {
LABEL_4:
    if (++v22 == v20) {
      return v38;
    }
  }
  unint64_t v4 = 0;
  uint64_t v31 = *(void *)(v19 + 8 * v22);
  uint64_t v30 = v31 + 32;
  while (v4 != v3)
  {
    if (v4 >= *(void *)(v31 + 16)) {
      goto LABEL_25;
    }
    sub_251A92A0C((long long *)(v30 + 40 * v4), (uint64_t)&v36);
    if (v37)
    {
      if (v37 != 1)
      {
        unint64_t v29 = v4;
        sub_251A1A444(&v36, (uint64_t)v35);
        uint64_t v32 = *(void *)(v28 + 16);
        if (v32)
        {
          uint64_t v6 = 0;
          uint64_t v7 = v23;
          while (1)
          {
            sub_251A1A4EC(v7, (uint64_t)v34);
            __swift_project_boxed_opaque_existential_1(v35, v35[3]);
            uint64_t v8 = sub_251F34DA0();
            char v33 = &v19;
            uint64_t v9 = *(void *)(v8 - 8);
            uint64_t v10 = *(void *)(v9 + 64);
            MEMORY[0x270FA5388](v8);
            sub_251F36420();
            size_t v11 = __swift_project_boxed_opaque_existential_1(v34, v34[3]);
            MEMORY[0x270FA5388](v11);
            uint64_t v12 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
            sub_251F36420();
            char v13 = sub_251F34D70();
            uint64_t v14 = *(void (**)(char *, uint64_t))(v9 + 8);
            v14(v12, v8);
            v14(v12, v8);
            __swift_destroy_boxed_opaque_existential_0((uint64_t)v34);
            if (v13) {
              break;
            }
            ++v6;
            v7 += 40;
            if (v32 == v6) {
              goto LABEL_19;
            }
          }
          __swift_instantiateConcreteTypeFromMangledName(&qword_26B21ED28);
          uint64_t v15 = swift_allocObject();
          *(_OWORD *)(v15 + 16) = v21;
          *(void *)(v15 + 56) = MEMORY[0x263F8D6C8];
          *(void *)(v15 + 64) = MEMORY[0x263F8D750];
          *(void *)(v15 + 32) = v6;
          uint64_t v16 = sub_251F35720();
          unint64_t v17 = v29;
          v34[0] = v16;
          v34[1] = v18;
          swift_bridgeObjectRetain();
          sub_251F35800();
          swift_bridgeObjectRelease();
          unint64_t v4 = v17;
          swift_bridgeObjectRelease();
          sub_251F35800();
          swift_bridgeObjectRelease();
          uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v35);
          uint64_t v3 = v25;
        }
        else
        {
LABEL_19:
          uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)v35);
          uint64_t v3 = v25;
          unint64_t v4 = v29;
        }
        goto LABEL_9;
      }
      v35[0] = 0x1000000000000012;
      unint64_t v5 = &v40;
    }
    else
    {
      v35[0] = 0x1000000000000012;
      unint64_t v5 = &v41;
    }
    v35[1] = *(v5 - 32);
    sub_251F35800();
    swift_bridgeObjectRelease();
    sub_251F35800();
    uint64_t result = swift_bridgeObjectRelease();
LABEL_9:
    if (++v4 == v3) {
      goto LABEL_4;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

size_t sub_251A9147C(uint64_t a1)
{
  return sub_251A91F4C(a1, &qword_26B21F208, (uint64_t (*)(void))type metadata accessor for StaticService, (uint64_t (*)(void))type metadata accessor for StaticService, (uint64_t (*)(void))type metadata accessor for StaticService);
}

uint64_t sub_251A914C4(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if (!*a1) {
    return MEMORY[0x263F8EE78];
  }
  if (v1 <= 0)
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE78];
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D5F0);
    uint64_t v3 = (void *)swift_allocObject();
    size_t v4 = _swift_stdlib_malloc_size(v3);
    v3[2] = v1;
    v3[3] = 2 * ((uint64_t)(v4 - 32) / 40);
  }
  sub_251A929A4((uint64_t)a1, (uint64_t)v7);
  uint64_t v5 = sub_251A92888((uint64_t)v8, (uint64_t)(v3 + 4), v1);
  uint64_t result = sub_251A1B064((uint64_t)v8, &qword_269B9D5E8);
  if (v5 == v1) {
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

void *sub_251A915AC(unint64_t a1)
{
  return sub_251A91A88(a1, (void (*)(void *, uint64_t, unint64_t))sub_251A94674);
}

uint64_t sub_251A915C4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF60);
  uint64_t v3 = swift_allocObject();
  size_t v4 = _swift_stdlib_malloc_size((const void *)v3);
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = 2 * v4 - 64;
  uint64_t v5 = sub_251A926F4(&v7, (unsigned char *)(v3 + 32), v1, a1);
  swift_bridgeObjectRetain();
  sub_251A1E630();
  if (v5 != (void *)v1)
  {
    __break(1u);
    return MEMORY[0x263F8EE78];
  }
  return v3;
}

uint64_t sub_251A9169C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3)) {
    goto LABEL_21;
  }
  if (!v5) {
    return MEMORY[0x263F8EE78];
  }
  if (v5 <= 0)
  {
    size_t v11 = (void *)MEMORY[0x263F8EE78];
    if (v4 != a3)
    {
LABEL_10:
      if (v5 < 0) {
        goto LABEL_24;
      }
      uint64_t v14 = *(void *)(type metadata accessor for ScrubberElement(0) - 8);
      uint64_t v15 = (char *)v11 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
      uint64_t v16 = *(void *)(v14 + 72);
      unint64_t v17 = a2 + v16 * a3;
      uint64_t v18 = v16 * v5;
      uint64_t v19 = &v15[v18];
      unint64_t v20 = v17 + v18;
      if (v17 < (unint64_t)v19 && (unint64_t)v15 < v20) {
        goto LABEL_24;
      }
      swift_arrayInitWithCopy();
      return (uint64_t)v11;
    }
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D090);
  uint64_t v8 = *(void *)(type metadata accessor for ScrubberElement(0) - 8);
  uint64_t v9 = *(void *)(v8 + 72);
  unint64_t v10 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  size_t v11 = (void *)swift_allocObject();
  size_t v12 = _swift_stdlib_malloc_size(v11);
  if (v9)
  {
    if (v12 - v10 == 0x8000000000000000 && v9 == -1) {
      goto LABEL_23;
    }
    void v11[2] = v5;
    v11[3] = 2 * ((uint64_t)(v12 - v10) / v9);
    if (v4 != a3) {
      goto LABEL_10;
    }
    goto LABEL_20;
  }
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251A918DC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return MEMORY[0x263F8EE78];
    }
    uint64_t v8 = v5;
    if (v5 <= 0)
    {
      uint64_t v9 = (void *)MEMORY[0x263F8EE78];
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0) {
          goto LABEL_19;
        }
        unint64_t v12 = a2 + 8 * a3;
        if (v12 < (unint64_t)&v9[v8 + 4] && (unint64_t)(v9 + 4) < v12 + v8 * 8) {
          goto LABEL_19;
        }
        sub_251A1A568(0, (unint64_t *)&qword_26B21EAF8);
        swift_arrayInitWithCopy();
        return (uint64_t)v9;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EBB0);
      uint64_t v9 = (void *)swift_allocObject();
      int64_t v10 = _swift_stdlib_malloc_size(v9);
      uint64_t v11 = v10 - 32;
      if (v10 < 32) {
        uint64_t v11 = v10 - 25;
      }
      void v9[2] = v5;
      v9[3] = (2 * (v11 >> 3)) | 1;
      if (v4 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

void *sub_251A91A70(unint64_t a1)
{
  return sub_251A91A88(a1, (void (*)(void *, uint64_t, unint64_t))sub_251A94894);
}

void *sub_251A91A88(unint64_t a1, void (*a2)(void *, uint64_t, unint64_t))
{
  if (a1 >> 62) {
    goto LABEL_10;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v4) {
    return (void *)MEMORY[0x263F8EE78];
  }
  while (1)
  {
    if (v4 <= 0)
    {
      uint64_t v5 = (void *)MEMORY[0x263F8EE78];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EBB0);
      uint64_t v5 = (void *)swift_allocObject();
      int64_t v6 = _swift_stdlib_malloc_size(v5);
      uint64_t v7 = v6 - 32;
      if (v6 < 32) {
        uint64_t v7 = v6 - 25;
      }
      uint64_t v5[2] = v4;
      v5[3] = (2 * (v7 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    a2(v5 + 4, v4, a1);
    a2 = v8;
    swift_bridgeObjectRelease();
    if (a2 == (void (*)(void *, uint64_t, unint64_t))v4) {
      break;
    }
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_251F366C0();
    swift_bridgeObjectRelease();
    if (!v4) {
      return (void *)MEMORY[0x263F8EE78];
    }
  }
  return v5;
}

size_t sub_251A91B90(uint64_t a1)
{
  return sub_251A91F4C(a1, &qword_26B21E600, (uint64_t (*)(void))type metadata accessor for StaticActionSet, (uint64_t (*)(void))type metadata accessor for StaticActionSet, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
}

size_t sub_251A91BD8(uint64_t a1)
{
  return sub_251A91F4C(a1, &qword_26B21EB98, type metadata accessor for StaticRoom, type metadata accessor for StaticRoom, type metadata accessor for StaticRoom);
}

size_t sub_251A91C20(uint64_t a1)
{
  return sub_251A92118(a1, &qword_269B9D668, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
}

size_t sub_251A91C68(uint64_t a1)
{
  return sub_251A92118(a1, &qword_269B9CFA0, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
}

size_t sub_251A91CB0(uint64_t a1)
{
  return sub_251A92118(a1, &qword_26B21EB90, (uint64_t (*)(void))type metadata accessor for StaticHome, (uint64_t (*)(void))type metadata accessor for StaticHome, (uint64_t (*)(void))type metadata accessor for StaticHome);
}

size_t sub_251A91CF8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB80);
  uint64_t v3 = *(void *)(sub_251F34DA0() - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  int64_t v6 = (void *)swift_allocObject();
  size_t result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_251A9367C(&v10, (char *)v6 + v5, v1, a1);
      sub_251A1E630();
      if (v9 == (void *)v1) {
        return (size_t)v6;
      }
      __break(1u);
      return MEMORY[0x263F8EE78];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_251A91E2C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CFA8);
  uint64_t v3 = swift_allocObject();
  size_t v4 = _swift_stdlib_malloc_size((const void *)v3);
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = 2 * v4 - 64;
  unint64_t v5 = sub_251A93AB4(&v7, (unsigned char *)(v3 + 32), v1, a1);
  swift_bridgeObjectRetain();
  sub_251A1E630();
  if (v5 != (void *)v1)
  {
    __break(1u);
    return MEMORY[0x263F8EE78];
  }
  return v3;
}

size_t sub_251A91F04(uint64_t a1)
{
  return sub_251A91F4C(a1, &qword_269B9CF88, (uint64_t (*)(void))type metadata accessor for ActionService, (uint64_t (*)(void))type metadata accessor for ActionService, (uint64_t (*)(void))type metadata accessor for ActionService);
}

size_t sub_251A91F4C(uint64_t a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5) {
    return MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v10 = *(void *)(a3(0) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  char v13 = (void *)swift_allocObject();
  size_t result = _swift_stdlib_malloc_size(v13);
  if (v11)
  {
    if (result - v12 != 0x8000000000000000 || v11 != -1)
    {
      v13[2] = v5;
      v13[3] = 2 * ((uint64_t)(result - v12) / v11);
      uint64_t v16 = sub_251A93040(&v17, (uint64_t)v13 + v12, v5, a1, a4, a5);
      swift_bridgeObjectRetain();
      sub_251A1E630();
      if (v16 == v5) {
        return (size_t)v13;
      }
      __break(1u);
      return MEMORY[0x263F8EE78];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_251A920B4(uint64_t a1)
{
  return sub_251A9229C(a1, (unint64_t *)&qword_26B21F170, 0x263F0E248, (unint64_t *)&qword_269B9D158);
}

size_t sub_251A920D0(uint64_t a1)
{
  return sub_251A92118(a1, &qword_26B21EB98, type metadata accessor for StaticRoom, type metadata accessor for StaticRoom, type metadata accessor for StaticRoom);
}

size_t sub_251A92118(uint64_t a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5) {
    return MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v10 = *(void *)(a3(0) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  char v13 = (void *)swift_allocObject();
  size_t result = _swift_stdlib_malloc_size(v13);
  if (v11)
  {
    if (result - v12 != 0x8000000000000000 || v11 != -1)
    {
      v13[2] = v5;
      v13[3] = 2 * ((uint64_t)(result - v12) / v11);
      uint64_t v16 = sub_251A93374(&v17, (uint64_t)v13 + v12, v5, a1, a4, a5);
      swift_bridgeObjectRetain();
      sub_251A1E630();
      if (v16 == v5) {
        return (size_t)v13;
      }
      __break(1u);
      return MEMORY[0x263F8EE78];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_251A92280(uint64_t a1)
{
  return sub_251A9229C(a1, (unint64_t *)&qword_269B9D608, 0x263F0E4A8, &qword_269B9D610);
}

uint64_t sub_251A9229C(uint64_t a1, unint64_t *a2, uint64_t a3, unint64_t *a4)
{
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v8 = sub_251F36300();
    if (v8) {
      goto LABEL_3;
    }
    return MEMORY[0x263F8EE78];
  }
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    return MEMORY[0x263F8EE78];
  }
LABEL_3:
  if (v8 <= 0)
  {
    uint64_t v9 = (void *)MEMORY[0x263F8EE78];
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EBB0);
    uint64_t v9 = (void *)swift_allocObject();
    int64_t v10 = _swift_stdlib_malloc_size(v9);
    uint64_t v11 = v10 - 32;
    if (v10 < 32) {
      uint64_t v11 = v10 - 25;
    }
    void v9[2] = v8;
    v9[3] = (2 * (v11 >> 3)) | 1;
  }
  swift_bridgeObjectRetain();
  unint64_t v12 = sub_251A93CA0(&v14, v9 + 4, v8, a1, a2, a3, a4);
  uint64_t result = sub_251A1E630();
  if (v12 == (void *)v8) {
    return (uint64_t)v9;
  }
  __break(1u);
  return result;
}

size_t sub_251A923C0(uint64_t a1)
{
  return sub_251A92408(a1, &qword_269B9D060, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
}

size_t sub_251A92408(uint64_t a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  uint64_t v5 = *(void *)(a1 + 16);
  if (!v5) {
    return MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v10 = *(void *)(a3(0) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  char v13 = (void *)swift_allocObject();
  size_t result = _swift_stdlib_malloc_size(v13);
  if (v11)
  {
    if (result - v12 != 0x8000000000000000 || v11 != -1)
    {
      v13[2] = v5;
      v13[3] = 2 * ((uint64_t)(result - v12) / v11);
      uint64_t v16 = sub_251A93F9C(&v17, (uint64_t)v13 + v12, v5, a1, a4, a5);
      swift_bridgeObjectRetain();
      sub_251A1E630();
      if (v16 == v5) {
        return (size_t)v13;
      }
      __break(1u);
      return MEMORY[0x263F8EE78];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

size_t sub_251A92570(uint64_t a1)
{
  return sub_251A92408(a1, &qword_26B21F210, (uint64_t (*)(void))type metadata accessor for StaticResident, (uint64_t (*)(void))type metadata accessor for StaticResident, (uint64_t (*)(void))type metadata accessor for StaticResident);
}

uint64_t sub_251A925B8(unint64_t a1)
{
  return sub_251F0F4F8(0, *(void *)(a1 + 16), 0, a1);
}

void *sub_251A925CC(void *a1)
{
  return sub_251F0FC0C(0, a1[2], 0, a1);
}

void *sub_251A925E0(void *a1)
{
  return sub_251F0FBF8(0, a1[2], 0, a1);
}

uint64_t sub_251A925F8(unint64_t a1)
{
  return sub_251F0F18C(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_251A9260C(unint64_t a1)
{
  return sub_251F1005C(0, *(void *)(a1 + 16), 0, a1);
}

void sub_251A92620(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_251F366C0();
    swift_bridgeObjectRelease();
  }
  JUMPOUT(0x2533AB3B0);
}

uint64_t sub_251A9269C(unint64_t a1)
{
  return sub_251F0FFF4(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_251A926B0(unint64_t a1)
{
  return sub_251F0F1C0(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_251A926C4(unint64_t a1)
{
  return sub_251F0F5FC(0, *(void *)(a1 + 16), 0, a1);
}

void *sub_251A926D8(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_251A93CA0(a1, a2, a3, a4, (unint64_t *)&qword_26B21EB40, 0x263F0E0B0, (unint64_t *)&qword_26B21EB48);
}

void *sub_251A926F4(void *result, unsigned char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 + 56;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v8 = 0;
    a3 = 0;
LABEL_35:
    *size_t result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (void *)a3;
  }
  if (!a3)
  {
    int64_t v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  int64_t v8 = 0;
  uint64_t v9 = 0;
  int64_t v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(unsigned char *)(*(void *)(a4 + 48) + v12);
    if (v9 == a3) {
      goto LABEL_35;
    }
  }
  int64_t v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v13);
  if (v14) {
    goto LABEL_19;
  }
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    int64_t v13 = v8;
LABEL_19:
    unint64_t v16 = __clz(__rbit64(v14));
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = v16 + (v13 << 6);
    int64_t v8 = v13;
    goto LABEL_8;
  }
  int64_t v15 = v13 + 2;
  if (v13 + 2 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    int64_t v13 = v15;
    goto LABEL_19;
  }
  int64_t v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13 + 2;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14) {
    goto LABEL_15;
  }
  int64_t v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    unint64_t v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v13 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v13 >= v10)
    {
      unint64_t v7 = 0;
      int64_t v8 = v10 - 1;
      goto LABEL_34;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++v15;
    if (v14) {
      goto LABEL_19;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_251A92888(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = result;
  long long v5 = v3[1];
  long long v14 = *v3;
  long long v15 = v5;
  long long v16 = v3[2];
  uint64_t v17 = 0;
  if (!a2)
  {
LABEL_12:
    uint64_t v6 = 0;
    goto LABEL_13;
  }
  uint64_t v6 = a3;
  if (!a3)
  {
LABEL_13:
    long long v12 = v15;
    *(_OWORD *)uint64_t v4 = v14;
    *(_OWORD *)(v4 + 16) = v12;
    *(_OWORD *)(v4 + 32) = v16;
    *(void *)(v4 + 48) = v17;
    return v6;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    if ((void)v14)
    {
      uint64_t v7 = a2;
      uint64_t v8 = 1;
      while (1)
      {
        sub_251A929A4((uint64_t)&v14, (uint64_t)v13);
        uint64_t v9 = v13[0];
        size_t result = sub_251A1B064((uint64_t)v13, &qword_269B9D5E0);
        if (v8 - 1 >= v9) {
          break;
        }
        if (v8 - 1 >= (uint64_t)v14) {
          goto LABEL_15;
        }
        uint64_t v17 = v8;
        sub_251A92A0C((long long *)((char *)&v14 + 8), v7);
        if (v6 == v8) {
          goto LABEL_13;
        }
        v7 += 40;
        uint64_t v10 = v8 + 1;
        if (v8++ == (void)v14)
        {
          uint64_t v6 = v10 - 1;
          goto LABEL_13;
        }
      }
      __break(1u);
LABEL_15:
      __break(1u);
      goto LABEL_16;
    }
    goto LABEL_12;
  }
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_251A929A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D5E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_251A92A0C(long long *a1, uint64_t a2)
{
  unint64_t v3 = *((void *)a1 + 3);
  if (v3 < 0xFFFFFFFF)
  {
    long long v5 = *a1;
    long long v6 = a1[1];
    *(void *)(a2 + 32) = *((void *)a1 + 4);
    *(_OWORD *)a2 = v5;
    *(_OWORD *)(a2 + 16) = v6;
  }
  else
  {
    uint64_t v4 = *((void *)a1 + 4);
    *(void *)(a2 + 24) = v3;
    *(void *)(a2 + 32) = v4;
    (**(void (***)(uint64_t))(v3 - 8))(a2);
  }
  return a2;
}

uint64_t sub_251A92A8C(uint64_t a1)
{
  if (*(void *)(a1 + 24) >= 0xFFFFFFFFuLL) {
    __swift_destroy_boxed_opaque_existential_0(a1);
  }
  return a1;
}

uint64_t sub_251A92AC8(long long *a1, uint64_t a2)
{
  if (*(void *)(a2 + 24) >= 0xFFFFFFFFuLL) {
    __swift_destroy_boxed_opaque_existential_0(a2);
  }
  long long v4 = *a1;
  long long v5 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v4;
  *(_OWORD *)(a2 + 16) = v5;
  return a2;
}

ValueMetadata *type metadata accessor for TileLayoutHelper()
{
  return &type metadata for TileLayoutHelper;
}

uint64_t destroy for TileLayoutHelper.GridCellContents(uint64_t a1)
{
  if (*(void *)(a1 + 24) >= 0xFFFFFFFFuLL) {
    return __swift_destroy_boxed_opaque_existential_0(a1);
  }
  return a1;
}

uint64_t initializeWithCopy for TileLayoutHelper.GridCellContents(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 24);
  if (v3 < 0xFFFFFFFF)
  {
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
  }
  else
  {
    uint64_t v4 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = v3;
    *(void *)(a1 + 32) = v4;
    (**(void (***)(uint64_t))(v3 - 8))(a1);
  }
  return a1;
}

uint64_t assignWithCopy for TileLayoutHelper.GridCellContents(uint64_t a1, long long *a2)
{
  unint64_t v4 = *((void *)a2 + 3);
  if (*(void *)(a1 + 24) < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *(void *)(a1 + 24) = v4;
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      (**(void (***)(uint64_t, long long *))(v4 - 8))(a1, a2);
      return a1;
    }
LABEL_7:
    long long v5 = *a2;
    long long v6 = a2[1];
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    *(_OWORD *)a1 = v5;
    *(_OWORD *)(a1 + 16) = v6;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    __swift_destroy_boxed_opaque_existential_0(a1);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    unint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        size_t result = (uint64_t *)swift_release();
        *unint64_t v3 = v12;
      }
      else
      {
        unint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *size_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *unint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for TileLayoutHelper.GridCellContents(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24) >= 0xFFFFFFFFuLL) {
    __swift_destroy_boxed_opaque_existential_0(a1);
  }
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for TileLayoutHelper.GridCellContents(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for TileLayoutHelper.GridCellContents(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)(result + 32) = 0;
    *(_OWORD *)__n128 result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)__n128 result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_251A92FC0(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 24);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

double sub_251A92FD8(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    double result = 0.0;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(void *)(a1 + 24) = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for TileLayoutHelper.GridCellContents()
{
  return &type metadata for TileLayoutHelper.GridCellContents;
}

uint64_t sub_251A93014(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_251A93040(a1, a2, a3, a4, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
}

uint64_t sub_251A93040(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  uint64_t v11 = a5(0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11 - 8);
  long long v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v32 - v17;
  uint64_t v37 = a4;
  uint64_t v20 = a4 + 56;
  uint64_t v19 = *(void *)(a4 + 56);
  uint64_t v34 = -1 << *(unsigned char *)(a4 + 32);
  if (-v34 < 64) {
    uint64_t v21 = ~(-1 << -(char)v34);
  }
  else {
    uint64_t v21 = -1;
  }
  unint64_t v22 = v21 & v19;
  if (!a2)
  {
    int64_t v23 = 0;
    a3 = 0;
LABEL_34:
    uint64_t v31 = ~v34;
    *a1 = v37;
    a1[1] = v20;
    a1[2] = v31;
    a1[3] = v23;
    a1[4] = v22;
    return a3;
  }
  if (!a3)
  {
    int64_t v23 = 0;
    goto LABEL_34;
  }
  if (a3 < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  char v33 = a1;
  int64_t v23 = 0;
  uint64_t v24 = 0;
  uint64_t v35 = v20;
  int64_t v36 = (unint64_t)(63 - v34) >> 6;
  int64_t v32 = v36 - 1;
  if (!v22) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v25 = __clz(__rbit64(v22));
  v22 &= v22 - 1;
  unint64_t v26 = v25 | (v23 << 6);
  while (1)
  {
    ++v24;
    uint64_t v30 = *(void *)(v12 + 72);
    sub_251A95158(*(void *)(v37 + 48) + v30 * v26, (uint64_t)v15, a6);
    sub_251A951C0((uint64_t)v15, (uint64_t)v18, a6);
    uint64_t result = sub_251A951C0((uint64_t)v18, a2, a6);
    if (v24 == a3) {
      goto LABEL_33;
    }
    a2 += v30;
    if (v22) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v27 = v23 + 1;
    if (__OFADD__(v23, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    if (v27 >= v36)
    {
      unint64_t v22 = 0;
      a3 = v24;
LABEL_33:
      a1 = v33;
      uint64_t v20 = v35;
      goto LABEL_34;
    }
    uint64_t v20 = v35;
    unint64_t v28 = *(void *)(v35 + 8 * v27);
    if (!v28) {
      break;
    }
LABEL_18:
    unint64_t v22 = (v28 - 1) & v28;
    unint64_t v26 = __clz(__rbit64(v28)) + (v27 << 6);
    int64_t v23 = v27;
  }
  v23 += 2;
  if (v27 + 1 >= v36)
  {
    unint64_t v22 = 0;
    int64_t v23 = v27;
LABEL_39:
    a3 = v24;
    a1 = v33;
    goto LABEL_34;
  }
  unint64_t v28 = *(void *)(v35 + 8 * v23);
  if (v28) {
    goto LABEL_14;
  }
  int64_t v29 = v27 + 2;
  if (v27 + 2 >= v36) {
    goto LABEL_36;
  }
  unint64_t v28 = *(void *)(v35 + 8 * v29);
  if (v28) {
    goto LABEL_17;
  }
  int64_t v23 = v27 + 3;
  if (v27 + 3 >= v36)
  {
    unint64_t v22 = 0;
    int64_t v23 = v27 + 2;
    goto LABEL_39;
  }
  unint64_t v28 = *(void *)(v35 + 8 * v23);
  if (v28)
  {
LABEL_14:
    int64_t v27 = v23;
    goto LABEL_18;
  }
  int64_t v29 = v27 + 4;
  if (v27 + 4 >= v36)
  {
LABEL_36:
    unint64_t v22 = 0;
    goto LABEL_39;
  }
  unint64_t v28 = *(void *)(v35 + 8 * v29);
  if (v28)
  {
LABEL_17:
    int64_t v27 = v29;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v27 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v27 >= v36)
    {
      unint64_t v22 = 0;
      int64_t v23 = v32;
      goto LABEL_39;
    }
    unint64_t v28 = *(void *)(v35 + 8 * v27);
    ++v29;
    if (v28) {
      goto LABEL_18;
    }
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_251A93348(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_251A93374(a1, a2, a3, a4, (uint64_t (*)(void))type metadata accessor for StaticLightProfile, (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
}

uint64_t sub_251A93374(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  uint64_t v11 = a5(0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11 - 8);
  long long v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v32 - v17;
  uint64_t v37 = a4;
  uint64_t v20 = a4 + 64;
  uint64_t v19 = *(void *)(a4 + 64);
  uint64_t v34 = -1 << *(unsigned char *)(a4 + 32);
  if (-v34 < 64) {
    uint64_t v21 = ~(-1 << -(char)v34);
  }
  else {
    uint64_t v21 = -1;
  }
  unint64_t v22 = v21 & v19;
  if (!a2)
  {
    int64_t v23 = 0;
    a3 = 0;
LABEL_34:
    uint64_t v31 = ~v34;
    *a1 = v37;
    a1[1] = v20;
    a1[2] = v31;
    a1[3] = v23;
    a1[4] = v22;
    return a3;
  }
  if (!a3)
  {
    int64_t v23 = 0;
    goto LABEL_34;
  }
  if (a3 < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  char v33 = a1;
  int64_t v23 = 0;
  uint64_t v24 = 0;
  uint64_t v35 = v20;
  int64_t v36 = (unint64_t)(63 - v34) >> 6;
  int64_t v32 = v36 - 1;
  if (!v22) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v25 = __clz(__rbit64(v22));
  v22 &= v22 - 1;
  unint64_t v26 = v25 | (v23 << 6);
  while (1)
  {
    ++v24;
    uint64_t v30 = *(void *)(v12 + 72);
    sub_251A95158(*(void *)(v37 + 56) + v30 * v26, (uint64_t)v15, a6);
    sub_251A951C0((uint64_t)v15, (uint64_t)v18, a6);
    uint64_t result = sub_251A951C0((uint64_t)v18, a2, a6);
    if (v24 == a3) {
      goto LABEL_33;
    }
    a2 += v30;
    if (v22) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v27 = v23 + 1;
    if (__OFADD__(v23, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    if (v27 >= v36)
    {
      unint64_t v22 = 0;
      a3 = v24;
LABEL_33:
      a1 = v33;
      uint64_t v20 = v35;
      goto LABEL_34;
    }
    uint64_t v20 = v35;
    unint64_t v28 = *(void *)(v35 + 8 * v27);
    if (!v28) {
      break;
    }
LABEL_18:
    unint64_t v22 = (v28 - 1) & v28;
    unint64_t v26 = __clz(__rbit64(v28)) + (v27 << 6);
    int64_t v23 = v27;
  }
  v23 += 2;
  if (v27 + 1 >= v36)
  {
    unint64_t v22 = 0;
    int64_t v23 = v27;
LABEL_39:
    a3 = v24;
    a1 = v33;
    goto LABEL_34;
  }
  unint64_t v28 = *(void *)(v35 + 8 * v23);
  if (v28) {
    goto LABEL_14;
  }
  int64_t v29 = v27 + 2;
  if (v27 + 2 >= v36) {
    goto LABEL_36;
  }
  unint64_t v28 = *(void *)(v35 + 8 * v29);
  if (v28) {
    goto LABEL_17;
  }
  int64_t v23 = v27 + 3;
  if (v27 + 3 >= v36)
  {
    unint64_t v22 = 0;
    int64_t v23 = v27 + 2;
    goto LABEL_39;
  }
  unint64_t v28 = *(void *)(v35 + 8 * v23);
  if (v28)
  {
LABEL_14:
    int64_t v27 = v23;
    goto LABEL_18;
  }
  int64_t v29 = v27 + 4;
  if (v27 + 4 >= v36)
  {
LABEL_36:
    unint64_t v22 = 0;
    goto LABEL_39;
  }
  unint64_t v28 = *(void *)(v35 + 8 * v29);
  if (v28)
  {
LABEL_17:
    int64_t v27 = v29;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v27 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v27 >= v36)
    {
      unint64_t v22 = 0;
      int64_t v23 = v32;
      goto LABEL_39;
    }
    unint64_t v28 = *(void *)(v35 + 8 * v27);
    ++v29;
    if (v28) {
      goto LABEL_18;
    }
  }
LABEL_42:
  __break(1u);
  return result;
}

void *sub_251A9367C(void *result, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v41 = a4;
  uint64_t v4 = a4 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(a4 + 32);
  if (-v5 < 64) {
    uint64_t v6 = ~(-1 << -(char)v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v11 = 0;
    uint64_t v8 = 0;
LABEL_39:
    *uint64_t result = v41;
    result[1] = v4;
    result[2] = ~v5;
    result[3] = v11;
    result[4] = v7;
    return (void *)v8;
  }
  uint64_t v8 = a3;
  if (!a3)
  {
    int64_t v11 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  long long v42 = a2;
  int64_t v32 = result;
  uint64_t v33 = a4 + 56;
  uint64_t v9 = sub_251F34DA0();
  uint64_t v10 = v9;
  int64_t v11 = 0;
  uint64_t v12 = 0;
  uint64_t v13 = *(void *)(v9 - 8);
  uint64_t v40 = *(void *)(v13 + 64);
  uint64_t v38 = v13 + 16;
  unint64_t v39 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  uint64_t v36 = v13;
  uint64_t v37 = v13 + 48;
  int64_t v34 = (unint64_t)(63 - v5) >> 6;
  uint64_t v35 = (uint64_t (**)(char *, char *, uint64_t))(v13 + 32);
  int64_t v30 = v34 - 1;
  uint64_t v31 = v5;
  while (1)
  {
    uint64_t v43 = &v30;
    MEMORY[0x270FA5388](v9);
    long long v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    uint64_t result = (void *)MEMORY[0x270FA5388](v16 - 8);
    uint64_t v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (v7)
    {
      unint64_t v19 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v20 = v19 | (v11 << 6);
      goto LABEL_23;
    }
    int64_t v21 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    uint64_t v4 = v33;
    if (v21 >= v34) {
      goto LABEL_37;
    }
    unint64_t v22 = *(void *)(v33 + 8 * v21);
    if (v22) {
      goto LABEL_22;
    }
    int64_t v23 = v11 + 2;
    ++v11;
    if (v21 + 1 >= v34) {
      goto LABEL_37;
    }
    unint64_t v22 = *(void *)(v33 + 8 * v23);
    if (!v22)
    {
      int64_t v11 = v21 + 1;
      if (v21 + 2 >= v34) {
        goto LABEL_37;
      }
      unint64_t v22 = *(void *)(v33 + 8 * (v21 + 2));
      if (v22)
      {
        v21 += 2;
        goto LABEL_22;
      }
      int64_t v11 = v21 + 2;
      if (v21 + 3 >= v34) {
        goto LABEL_37;
      }
      unint64_t v22 = *(void *)(v33 + 8 * (v21 + 3));
      if (v22)
      {
        v21 += 3;
        goto LABEL_22;
      }
      int64_t v23 = v21 + 4;
      int64_t v11 = v21 + 3;
      if (v21 + 4 >= v34)
      {
LABEL_37:
        (*v39)(v18, 1, 1, v10);
        unint64_t v7 = 0;
        goto LABEL_38;
      }
      unint64_t v22 = *(void *)(v33 + 8 * v23);
      if (!v22) {
        break;
      }
    }
    int64_t v21 = v23;
LABEL_22:
    unint64_t v7 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v21 << 6);
    int64_t v11 = v21;
LABEL_23:
    uint64_t v24 = v36;
    uint64_t v25 = *(void *)(v36 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v36 + 16))(v18, *(void *)(v41 + 48) + v25 * v20, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v18, 0, 1, v10);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v18, 1, v10) == 1)
    {
      uint64_t v4 = v33;
LABEL_38:
      sub_251A1B064((uint64_t)v18, &qword_26B21FF90);
      uint64_t v5 = v31;
      uint64_t result = v32;
      uint64_t v8 = v12;
      goto LABEL_39;
    }
    uint64_t v26 = v12 + 1;
    uint64_t v27 = v8;
    unint64_t v28 = *v35;
    (*v35)(v15, v18, v10);
    int64_t v29 = v42;
    uint64_t v9 = v28(v42, v15, v10);
    uint64_t v8 = v27;
    if (v26 == v27)
    {
      uint64_t result = v32;
      uint64_t v4 = v33;
      uint64_t v5 = v31;
      goto LABEL_39;
    }
    uint64_t v12 = v26;
    long long v42 = &v29[v25];
  }
  while (1)
  {
    int64_t v21 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v21 >= v34)
    {
      int64_t v11 = v30;
      goto LABEL_37;
    }
    unint64_t v22 = *(void *)(v33 + 8 * v21);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_42:
  __break(1u);
  return result;
}

void *sub_251A93AB4(void *result, unsigned char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 + 64;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v8 = 0;
    a3 = 0;
LABEL_35:
    *uint64_t result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (void *)a3;
  }
  if (!a3)
  {
    int64_t v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  int64_t v8 = 0;
  uint64_t v9 = 0;
  int64_t v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(unsigned char *)(*(void *)(a4 + 48) + v12);
    if (v9 == a3) {
      goto LABEL_35;
    }
  }
  int64_t v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v13);
  if (v14) {
    goto LABEL_19;
  }
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    int64_t v13 = v8;
LABEL_19:
    unint64_t v16 = __clz(__rbit64(v14));
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = v16 + (v13 << 6);
    int64_t v8 = v13;
    goto LABEL_8;
  }
  int64_t v15 = v13 + 2;
  if (v13 + 2 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    int64_t v13 = v15;
    goto LABEL_19;
  }
  int64_t v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13 + 2;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14) {
    goto LABEL_15;
  }
  int64_t v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    unint64_t v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v13 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v13 >= v10)
    {
      unint64_t v7 = 0;
      int64_t v8 = v10 - 1;
      goto LABEL_34;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++v15;
    if (v14) {
      goto LABEL_19;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_251A93C48(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_251A93040(a1, a2, a3, a4, type metadata accessor for StaticAccessory.DeviceIdentifier, type metadata accessor for StaticAccessory.DeviceIdentifier);
}

uint64_t sub_251A93C74(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_251A93040(a1, a2, a3, a4, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent);
}

void *sub_251A93CA0(void *result, void *a2, uint64_t a3, uint64_t a4, unint64_t *a5, uint64_t a6, unint64_t *a7)
{
  uint64_t v7 = a4;
  uint64_t v9 = a2;
  int64_t v29 = result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    sub_251F362B0();
    sub_251A1A568(0, a5);
    sub_251A94AB4(a7, a5);
    uint64_t result = (void *)sub_251F35E90();
    uint64_t v7 = v33;
    uint64_t v12 = v34;
    uint64_t v13 = v35;
    int64_t v14 = v36;
    unint64_t v15 = v37;
    if (v9) {
      goto LABEL_3;
    }
LABEL_36:
    uint64_t v16 = 0;
    goto LABEL_38;
  }
  int64_t v14 = 0;
  uint64_t v24 = -1 << *(unsigned char *)(a4 + 32);
  uint64_t v12 = a4 + 56;
  uint64_t v13 = ~v24;
  uint64_t v25 = -v24;
  if (v25 < 64) {
    uint64_t v26 = ~(-1 << v25);
  }
  else {
    uint64_t v26 = -1;
  }
  unint64_t v15 = v26 & *(void *)(a4 + 56);
  if (!a2) {
    goto LABEL_36;
  }
LABEL_3:
  if (!a3)
  {
    uint64_t v16 = 0;
LABEL_38:
    uint64_t v27 = v29;
LABEL_41:
    *uint64_t v27 = v7;
    v27[1] = v12;
    v27[2] = v13;
    v27[3] = v14;
    v27[4] = v15;
    return (void *)v16;
  }
  if (a3 < 0) {
    goto LABEL_48;
  }
  uint64_t v16 = 0;
  int64_t v30 = (unint64_t)(v13 + 64) >> 6;
  uint64_t v28 = v13;
  while (1)
  {
    if (v7 < 0)
    {
      if (!sub_251F36340()) {
        goto LABEL_40;
      }
      sub_251A1A568(0, a5);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v19 = v32;
      uint64_t result = (void *)swift_unknownObjectRelease();
      if (!v32) {
        goto LABEL_40;
      }
      goto LABEL_8;
    }
    if (v15)
    {
      unint64_t v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v18 = v17 | (v14 << 6);
      goto LABEL_7;
    }
    int64_t v20 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v20 >= v30)
    {
      unint64_t v15 = 0;
      goto LABEL_40;
    }
    unint64_t v21 = *(void *)(v12 + 8 * v20);
    if (v21) {
      goto LABEL_23;
    }
    int64_t v22 = v14 + 2;
    if (v14 + 2 >= v30)
    {
      unint64_t v15 = 0;
      ++v14;
      goto LABEL_40;
    }
    unint64_t v21 = *(void *)(v12 + 8 * v22);
    if (!v21)
    {
      if (v14 + 3 >= v30) {
        goto LABEL_44;
      }
      unint64_t v21 = *(void *)(v12 + 8 * (v14 + 3));
      if (v21)
      {
        int64_t v20 = v14 + 3;
        goto LABEL_23;
      }
      int64_t v22 = v14 + 4;
      if (v14 + 4 >= v30)
      {
        unint64_t v15 = 0;
        v14 += 3;
        goto LABEL_40;
      }
      unint64_t v21 = *(void *)(v12 + 8 * v22);
      if (!v21)
      {
        int64_t v20 = v14 + 5;
        if (v14 + 5 >= v30)
        {
LABEL_44:
          unint64_t v15 = 0;
          int64_t v14 = v22;
          goto LABEL_40;
        }
        unint64_t v21 = *(void *)(v12 + 8 * v20);
        if (!v21)
        {
          int64_t v23 = v14 + 6;
          while (v30 != v23)
          {
            unint64_t v21 = *(void *)(v12 + 8 * v23++);
            if (v21)
            {
              int64_t v20 = v23 - 1;
              goto LABEL_23;
            }
          }
          unint64_t v15 = 0;
          int64_t v14 = v30 - 1;
          goto LABEL_40;
        }
        goto LABEL_23;
      }
    }
    int64_t v20 = v22;
LABEL_23:
    unint64_t v15 = (v21 - 1) & v21;
    unint64_t v18 = __clz(__rbit64(v21)) + (v20 << 6);
    int64_t v14 = v20;
LABEL_7:
    uint64_t result = *(id *)(*(void *)(v7 + 48) + 8 * v18);
    id v19 = result;
    if (!result) {
      goto LABEL_40;
    }
LABEL_8:
    ++v16;
    *v9++ = v19;
    if (v16 == a3)
    {
      uint64_t v16 = a3;
LABEL_40:
      uint64_t v13 = v28;
      uint64_t v27 = v29;
      goto LABEL_41;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_251A93F9C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  uint64_t v11 = a5(0);
  uint64_t v36 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  int64_t v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v12);
  unint64_t v17 = (char *)&v32 - v16;
  uint64_t v37 = a4;
  uint64_t v20 = *(void *)(a4 + 56);
  uint64_t v19 = a4 + 56;
  uint64_t v18 = v20;
  uint64_t v21 = -1 << *(unsigned char *)(v19 - 24);
  if (-v21 < 64) {
    uint64_t v22 = ~(-1 << -(char)v21);
  }
  else {
    uint64_t v22 = -1;
  }
  unint64_t v23 = v22 & v18;
  if (!a2)
  {
    int64_t v24 = 0;
    a3 = 0;
LABEL_32:
    *a1 = v37;
    a1[1] = v19;
    a1[2] = ~v21;
    a1[3] = v24;
    a1[4] = v23;
    return a3;
  }
  if (!a3)
  {
    int64_t v24 = 0;
    goto LABEL_32;
  }
  if (a3 < 0) {
    goto LABEL_35;
  }
  uint64_t v33 = -1 << *(unsigned char *)(v19 - 24);
  uint64_t v34 = a1;
  int64_t v24 = 0;
  uint64_t v25 = 0;
  int64_t v35 = (unint64_t)(63 - v21) >> 6;
  int64_t v32 = v35 - 1;
  if (!v23) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v26 = __clz(__rbit64(v23));
  v23 &= v23 - 1;
  unint64_t v27 = v26 | (v24 << 6);
  while (1)
  {
    ++v25;
    uint64_t v31 = *(void *)(v36 + 72);
    sub_251A95158(*(void *)(v37 + 48) + v31 * v27, (uint64_t)v14, a6);
    sub_251A951C0((uint64_t)v14, (uint64_t)v17, a6);
    uint64_t result = sub_251A951C0((uint64_t)v17, a2, a6);
    if (v25 == a3) {
      goto LABEL_31;
    }
    a2 += v31;
    if (v23) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v28 = v24 + 1;
    if (__OFADD__(v24, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v28 >= v35) {
      goto LABEL_27;
    }
    unint64_t v29 = *(void *)(v19 + 8 * v28);
    if (!v29) {
      break;
    }
LABEL_21:
    unint64_t v23 = (v29 - 1) & v29;
    unint64_t v27 = __clz(__rbit64(v29)) + (v28 << 6);
    int64_t v24 = v28;
  }
  v24 += 2;
  if (v28 + 1 >= v35)
  {
    unint64_t v23 = 0;
    int64_t v24 = v28;
    goto LABEL_30;
  }
  unint64_t v29 = *(void *)(v19 + 8 * v24);
  if (v29)
  {
    ++v28;
    goto LABEL_21;
  }
  int64_t v30 = v28 + 2;
  if (v28 + 2 >= v35)
  {
LABEL_27:
    unint64_t v23 = 0;
LABEL_30:
    a3 = v25;
LABEL_31:
    uint64_t v21 = v33;
    a1 = v34;
    goto LABEL_32;
  }
  unint64_t v29 = *(void *)(v19 + 8 * v30);
  if (v29)
  {
    v28 += 2;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v28 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v28 >= v35)
    {
      unint64_t v23 = 0;
      int64_t v24 = v32;
      goto LABEL_30;
    }
    unint64_t v29 = *(void *)(v19 + 8 * v28);
    ++v30;
    if (v29) {
      goto LABEL_21;
    }
  }
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_251A94234(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_251F366C0();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_251F366C0();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_251A95228(&qword_269B9D650, &qword_269B9D648);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D648);
          uint64_t v12 = sub_251D90FC8(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_251A1A568(0, (unint64_t *)&qword_26B21F170);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251A94454(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_251F366C0();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_251F366C0();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_251A95228(&qword_269B9D630, &qword_269B9D628);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D628);
          uint64_t v12 = sub_251D90FC8(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_251A1A568(0, &qword_26B21EB00);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251A94674(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_251F366C0();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_251F366C0();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_251A95228(&qword_26B21E5B8, &qword_26B21E5B0);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E5B0);
          uint64_t v12 = sub_251D90FC8(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_251A1A568(0, (unint64_t *)&qword_26B21F2D0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251A94894(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_251F366C0();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_251F366C0();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_251A95228(&qword_269B9D600, &qword_269B9D5F8);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D5F8);
          uint64_t v12 = sub_251D91034(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_251A1A568(0, (unint64_t *)&qword_26B21EAF8);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251A94AB4(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_251A1A568(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_251A94AF8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_251F366C0();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_251F366C0();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_251A95228(&qword_269B9D620, &qword_269B9D618);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D618);
          uint64_t v12 = sub_251D90FC8(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_251A1A568(0, (unint64_t *)&qword_26B21F150);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251A94D18(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_251F366C0();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_251F366C0();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_251A95228(&qword_269B9D660, &qword_269B9D658);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D658);
          uint64_t v12 = sub_251D90FC8(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_251A1A568(0, (unint64_t *)&qword_269B9D238);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251A94F38(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_251F366C0();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_251F366C0();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_251A95228(&qword_269B9D640, &qword_269B9D638);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D638);
          uint64_t v12 = sub_251D90FC8(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_251A1A568(0, &qword_269BA5560);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251A95158(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_251A951C0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_251A95228(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_251A95278@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_251A952F8(a1, a2, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile, a3);
}

uint64_t sub_251A952B8@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_251A952F8(a1, a2, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem, a3);
}

uint64_t sub_251A952F8@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X2>, uint64_t (*a3)(void)@<X3>, uint64_t (*a4)(void)@<X4>, uint64_t a5@<X8>)
{
  uint64_t v30 = a5;
  uint64_t v29 = a3(0);
  uint64_t v33 = *(void *)(v29 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v29);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v29 - v12;
  uint64_t v14 = *(void *)(a2 + 56);
  uint64_t v31 = a2 + 56;
  uint64_t v15 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  int64_t v32 = (unint64_t)(v15 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v19 = 0;
  if (!v17) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v20 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  for (unint64_t i = v20 | (v19 << 6); ; unint64_t i = __clz(__rbit64(v23)) + (v19 << 6))
  {
    sub_251A9FEF4(*(void *)(a2 + 48) + *(void *)(v33 + 72) * i, (uint64_t)v13, a4);
    sub_251A9FF5C((uint64_t)v13, (uint64_t)v11, a4);
    char v25 = a1(v11);
    if (v5)
    {
      sub_251A9FFC4((uint64_t)v11, a4);
      return swift_release();
    }
    if (v25)
    {
      swift_release();
      uint64_t v26 = v30;
      sub_251A9FF5C((uint64_t)v11, v30, a4);
      uint64_t v27 = 0;
      uint64_t v28 = v29;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 56))(v26, v27, 1, v28);
    }
    uint64_t result = sub_251A9FFC4((uint64_t)v11, a4);
    if (v17) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v19++, 1)) {
      break;
    }
    if (v19 >= v32) {
      goto LABEL_28;
    }
    unint64_t v23 = *(void *)(v31 + 8 * v19);
    if (!v23)
    {
      int64_t v24 = v19 + 1;
      if (v19 + 1 >= v32) {
        goto LABEL_28;
      }
      unint64_t v23 = *(void *)(v31 + 8 * v24);
      if (v23) {
        goto LABEL_16;
      }
      int64_t v24 = v19 + 2;
      if (v19 + 2 >= v32) {
        goto LABEL_28;
      }
      unint64_t v23 = *(void *)(v31 + 8 * v24);
      if (v23) {
        goto LABEL_16;
      }
      int64_t v24 = v19 + 3;
      if (v19 + 3 >= v32) {
        goto LABEL_28;
      }
      unint64_t v23 = *(void *)(v31 + 8 * v24);
      if (v23)
      {
LABEL_16:
        int64_t v19 = v24;
        goto LABEL_17;
      }
      int64_t v24 = v19 + 4;
      if (v19 + 4 < v32)
      {
        unint64_t v23 = *(void *)(v31 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v19 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_31;
            }
            if (v19 >= v32) {
              goto LABEL_28;
            }
            unint64_t v23 = *(void *)(v31 + 8 * v19);
            ++v24;
            if (v23) {
              goto LABEL_17;
            }
          }
        }
        goto LABEL_16;
      }
LABEL_28:
      uint64_t v28 = v29;
      uint64_t v26 = v30;
      swift_release();
      uint64_t v27 = 1;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 56))(v26, v27, 1, v28);
    }
LABEL_17:
    unint64_t v17 = (v23 - 1) & v23;
  }
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_251A955F8@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_251A952F8(a1, a2, (uint64_t (*)(void))type metadata accessor for StaticService, (uint64_t (*)(void))type metadata accessor for StaticService, a3);
}

void *sub_251A95638(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  return sub_251A95D30(a1, a2, a3);
}

void sub_251A95650(uint64_t (*a1)(id *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v5 = a3;
  if ((a3 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_251F362B0();
    sub_251A1A568(0, (unint64_t *)&qword_26B21F150);
    sub_251AA0024();
    sub_251F35E90();
    uint64_t v5 = v24;
    uint64_t v23 = v25;
    uint64_t v7 = v26;
    int64_t v8 = v27;
    unint64_t v9 = v28;
  }
  else
  {
    uint64_t v10 = -1 << *(unsigned char *)(a3 + 32);
    uint64_t v23 = a3 + 56;
    uint64_t v11 = ~v10;
    uint64_t v12 = -v10;
    if (v12 < 64) {
      uint64_t v13 = ~(-1 << v12);
    }
    else {
      uint64_t v13 = -1;
    }
    unint64_t v9 = v13 & *(void *)(a3 + 56);
    swift_bridgeObjectRetain();
    uint64_t v7 = v11;
    int64_t v8 = 0;
  }
  int64_t v22 = (unint64_t)(v7 + 64) >> 6;
  if ((v5 & 0x8000000000000000) == 0) {
    goto LABEL_11;
  }
LABEL_8:
  if (!sub_251F36340()) {
    goto LABEL_36;
  }
  sub_251A1A568(0, (unint64_t *)&qword_26B21F150);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  id v14 = v29;
  swift_unknownObjectRelease();
  int64_t v15 = v8;
  uint64_t v16 = v9;
  if (!v14) {
    goto LABEL_36;
  }
  while (1)
  {
    id v29 = v14;
    char v20 = a1(&v29);
    if (v4)
    {

      goto LABEL_36;
    }
    if (v20) {
      goto LABEL_36;
    }

    int64_t v8 = v15;
    unint64_t v9 = v16;
    if (v5 < 0) {
      goto LABEL_8;
    }
LABEL_11:
    if (!v9) {
      break;
    }
    uint64_t v16 = (v9 - 1) & v9;
    unint64_t v17 = __clz(__rbit64(v9)) | (v8 << 6);
    int64_t v15 = v8;
LABEL_24:
    id v14 = *(id *)(*(void *)(v5 + 48) + 8 * v17);
    if (!v14) {
      goto LABEL_36;
    }
  }
  int64_t v15 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    return;
  }
  if (v15 >= v22) {
    goto LABEL_36;
  }
  unint64_t v18 = *(void *)(v23 + 8 * v15);
  if (v18)
  {
LABEL_23:
    uint64_t v16 = (v18 - 1) & v18;
    unint64_t v17 = __clz(__rbit64(v18)) + (v15 << 6);
    goto LABEL_24;
  }
  int64_t v19 = v8 + 2;
  if (v8 + 2 >= v22) {
    goto LABEL_36;
  }
  unint64_t v18 = *(void *)(v23 + 8 * v19);
  if (v18) {
    goto LABEL_22;
  }
  int64_t v19 = v8 + 3;
  if (v8 + 3 >= v22) {
    goto LABEL_36;
  }
  unint64_t v18 = *(void *)(v23 + 8 * v19);
  if (v18) {
    goto LABEL_22;
  }
  int64_t v19 = v8 + 4;
  if (v8 + 4 >= v22) {
    goto LABEL_36;
  }
  unint64_t v18 = *(void *)(v23 + 8 * v19);
  if (v18)
  {
LABEL_22:
    int64_t v15 = v19;
    goto LABEL_23;
  }
  int64_t v15 = v8 + 5;
  if (v8 + 5 >= v22) {
    goto LABEL_36;
  }
  unint64_t v18 = *(void *)(v23 + 8 * v15);
  if (v18) {
    goto LABEL_23;
  }
  int64_t v21 = v8 + 6;
  while (v22 != v21)
  {
    unint64_t v18 = *(void *)(v23 + 8 * v21++);
    if (v18)
    {
      int64_t v15 = v21 - 1;
      goto LABEL_23;
    }
  }
LABEL_36:
  sub_251A1E630();
}

uint64_t sub_251A95970@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_251A959F0(a1, a2, (uint64_t (*)(void))type metadata accessor for StaticEndpoint, (uint64_t (*)(void))type metadata accessor for StaticEndpoint, a3);
}

uint64_t sub_251A959B0@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_251A959F0(a1, a2, (uint64_t (*)(void))type metadata accessor for ActionEndpoint, (uint64_t (*)(void))type metadata accessor for ActionEndpoint, a3);
}

uint64_t sub_251A959F0@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X2>, uint64_t (*a3)(void)@<X3>, uint64_t (*a4)(void)@<X4>, uint64_t a5@<X8>)
{
  uint64_t v30 = a5;
  uint64_t v29 = a3(0);
  uint64_t v33 = *(void *)(v29 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v29);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v29 - v12;
  uint64_t v14 = *(void *)(a2 + 64);
  uint64_t v31 = a2 + 64;
  uint64_t v15 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  int64_t v32 = (unint64_t)(v15 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v19 = 0;
  if (!v17) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v20 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  for (unint64_t i = v20 | (v19 << 6); ; unint64_t i = __clz(__rbit64(v23)) + (v19 << 6))
  {
    sub_251A9FEF4(*(void *)(a2 + 56) + *(void *)(v33 + 72) * i, (uint64_t)v13, a4);
    sub_251A9FF5C((uint64_t)v13, (uint64_t)v11, a4);
    char v25 = a1(v11);
    if (v5)
    {
      sub_251A9FFC4((uint64_t)v11, a4);
      return swift_release();
    }
    if (v25)
    {
      swift_release();
      uint64_t v26 = v30;
      sub_251A9FF5C((uint64_t)v11, v30, a4);
      uint64_t v27 = 0;
      uint64_t v28 = v29;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 56))(v26, v27, 1, v28);
    }
    uint64_t result = sub_251A9FFC4((uint64_t)v11, a4);
    if (v17) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v19++, 1)) {
      break;
    }
    if (v19 >= v32) {
      goto LABEL_28;
    }
    unint64_t v23 = *(void *)(v31 + 8 * v19);
    if (!v23)
    {
      int64_t v24 = v19 + 1;
      if (v19 + 1 >= v32) {
        goto LABEL_28;
      }
      unint64_t v23 = *(void *)(v31 + 8 * v24);
      if (v23) {
        goto LABEL_16;
      }
      int64_t v24 = v19 + 2;
      if (v19 + 2 >= v32) {
        goto LABEL_28;
      }
      unint64_t v23 = *(void *)(v31 + 8 * v24);
      if (v23) {
        goto LABEL_16;
      }
      int64_t v24 = v19 + 3;
      if (v19 + 3 >= v32) {
        goto LABEL_28;
      }
      unint64_t v23 = *(void *)(v31 + 8 * v24);
      if (v23)
      {
LABEL_16:
        int64_t v19 = v24;
        goto LABEL_17;
      }
      int64_t v24 = v19 + 4;
      if (v19 + 4 < v32)
      {
        unint64_t v23 = *(void *)(v31 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v19 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_31;
            }
            if (v19 >= v32) {
              goto LABEL_28;
            }
            unint64_t v23 = *(void *)(v31 + 8 * v19);
            ++v24;
            if (v23) {
              goto LABEL_17;
            }
          }
        }
        goto LABEL_16;
      }
LABEL_28:
      uint64_t v28 = v29;
      uint64_t v26 = v30;
      swift_release();
      uint64_t v27 = 1;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 56))(v26, v27, 1, v28);
    }
LABEL_17:
    unint64_t v17 = (v23 - 1) & v23;
  }
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_251A95CF0@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_251A959F0(a1, a2, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic, a3);
}

void *sub_251A95D30(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62) {
    goto LABEL_16;
  }
  uint64_t v6 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; uint64_t v6 = sub_251F366C0())
  {
    uint64_t v7 = 4;
    while (1)
    {
      id v8 = (a3 & 0xC000000000000001) != 0 ? (id)MEMORY[0x2533AB3A0](v7 - 4, a3) : *(id *)(a3 + 8 * v7);
      uint64_t v9 = v8;
      uint64_t v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1)) {
        break;
      }
      id v13 = v8;
      char v11 = a1(&v13);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return v9;
      }
      if (v11)
      {
        swift_bridgeObjectRelease();
        return v9;
      }

      ++v7;
      if (v10 == v6) {
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
LABEL_11:
  swift_bridgeObjectRelease();
  return 0;
}

void *DataModel.primaryHome.getter()
{
  unint64_t v1 = (id *)(v0 + OBJC_IVAR____TtC13HomeDataModel9DataModel_homeManager);
  swift_beginAccess();
  if (*v1)
  {
    id v2 = objc_msgSend(*v1, sel_homes);
    sub_251A1A568(0, (unint64_t *)&qword_26B21F2D0);
    unint64_t v3 = sub_251F35AC0();

    if (v3 >> 62) {
      goto LABEL_16;
    }
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v4; uint64_t v4 = sub_251F366C0())
    {
      uint64_t v5 = 4;
      while (1)
      {
        id v6 = (v3 & 0xC000000000000001) != 0 ? (id)MEMORY[0x2533AB3A0](v5 - 4, v3) : *(id *)(v3 + 8 * v5);
        uint64_t v7 = v6;
        uint64_t v8 = v5 - 3;
        if (__OFADD__(v5 - 4, 1)) {
          break;
        }
        if (objc_msgSend(v6, sel_isPrimary))
        {
          swift_bridgeObjectRelease_n();
          return v7;
        }

        ++v5;
        if (v8 == v4) {
          goto LABEL_11;
        }
      }
      __break(1u);
LABEL_16:
      swift_bridgeObjectRetain();
    }
LABEL_11:
    swift_bridgeObjectRelease_n();
  }
  return 0;
}

uint64_t DataModel.sortedHomes.getter()
{
  return sub_251A960E8(sub_251A9DA90);
}

id sub_251A96054(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();

  sub_251A1A568(0, (unint64_t *)&qword_26B21F2D0);
  uint64_t v5 = (void *)sub_251F35AA0();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t DataModel.alphabeticalHomes.getter()
{
  return sub_251A960E8((void (*)(void *))sub_251A9E4AC);
}

uint64_t sub_251A960E8(void (*a1)(void *))
{
  unint64_t v3 = (id *)(v1 + OBJC_IVAR____TtC13HomeDataModel9DataModel_homeManager);
  swift_beginAccess();
  if (!*v3) {
    return MEMORY[0x263F8EE78];
  }
  id v4 = objc_msgSend(*v3, sel_homes);
  sub_251A1A568(0, (unint64_t *)&qword_26B21F2D0);
  uint64_t v5 = sub_251F35AC0();

  if (v5 < 0 || (v5 & 0x4000000000000000) != 0)
  {
    unint64_t v8 = swift_bridgeObjectRetain();
    uint64_t v6 = (uint64_t)sub_251A915AC(v8);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = v5 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  uint64_t v9 = v6;
  sub_251A9DA0C(&v9, a1);
  swift_bridgeObjectRelease();
  return v9;
}

void *DataModel.accessory(for:in:)(uint64_t a1, id a2)
{
  id v3 = objc_msgSend(a2, sel_accessories);
  sub_251A1A568(0, (unint64_t *)&qword_26B21EAF8);
  unint64_t v4 = sub_251F35AC0();

  v7[2] = a1;
  uint64_t v5 = sub_251A95D30(sub_251A9F9CC, (uint64_t)v7, v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_251A962A8(void **a1, uint64_t a2)
{
  id v3 = *a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t v5 = *(void *)(*(void *)(v4 - 8) + 64);
  MEMORY[0x270FA5388](v4 - 8);
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v7 = (char *)v27 - v6;
  id v8 = objc_msgSend(v3, sel_uniqueIdentifier);
  sub_251F34D80();

  uint64_t v9 = sub_251F34DA0();
  uint64_t v10 = *(void *)(v9 - 8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))((char *)v27 - v6, 0, 1, v9);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E6B8);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_251A1E280((uint64_t)v27 - v6, (uint64_t)v14);
  sub_251A1E280(a2, v15);
  uint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  uint64_t v17 = v16(v14, 1, v9);
  if (v17 == 1)
  {
    sub_251A1B064((uint64_t)v27 - v6, &qword_26B21FF90);
    int v18 = v16((char *)v15, 1, v9);
    if (v18 == 1) {
      int64_t v19 = &qword_26B21FF90;
    }
    else {
      int64_t v19 = &qword_26B21E6B8;
    }
    if (v18 == 1) {
      char v20 = -1;
    }
    else {
      char v20 = 0;
    }
  }
  else
  {
    v27[1] = v27;
    MEMORY[0x270FA5388](v17);
    int64_t v21 = (char *)v27 - v6;
    sub_251A1E280((uint64_t)v14, (uint64_t)v21);
    uint64_t v22 = v16((char *)v15, 1, v9);
    if (v22 == 1)
    {
      sub_251A1B064((uint64_t)v7, &qword_26B21FF90);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v21, v9);
      int64_t v19 = &qword_26B21E6B8;
      char v20 = 0;
    }
    else
    {
      MEMORY[0x270FA5388](v22);
      int64_t v24 = (char *)v27 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v24, v15, v9);
      sub_251A9FE88();
      char v20 = sub_251F35650();
      char v25 = *(void (**)(char *, uint64_t))(v10 + 8);
      v25(v24, v9);
      int64_t v19 = &qword_26B21FF90;
      sub_251A1B064((uint64_t)v7, &qword_26B21FF90);
      v25(v21, v9);
    }
  }
  sub_251A1B064((uint64_t)v14, v19);
  return v20 & 1;
}

void DataModel.accessoryFromAnyHome(for:)(uint64_t a1)
{
  id v2 = v1;
  id v4 = objc_msgSend(v2, sel_sortedHomes);
  sub_251A1A568(0, (unint64_t *)&qword_26B21F2D0);
  unint64_t v5 = sub_251F35AC0();

  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t v7 = *(void *)(*(void *)(v6 - 8) + 64);
  MEMORY[0x270FA5388](v6 - 8);
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v31 = (uint64_t)&v31 - v8;
  uint64_t v9 = sub_251A1E280(a1, (uint64_t)&v31 - v8);
  uint64_t v34 = v7;
  MEMORY[0x270FA5388](v9);
  uint64_t v35 = (uint64_t)&v31 - v8;
  sub_251A1E280(a1, (uint64_t)&v31 - v8);
  if (v5 >> 62)
  {
LABEL_27:
    id v30 = v2;
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_251F366C0();
    swift_bridgeObjectRelease();
    if (v10) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v10 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v11 = v2;
    if (v10)
    {
LABEL_3:
      unint64_t v12 = 0;
      id v32 = v2;
      unint64_t v33 = v5 & 0xC000000000000001;
      unint64_t v36 = v5;
      while (1)
      {
        if (v33)
        {
          swift_bridgeObjectRetain();
          id v13 = (id)MEMORY[0x2533AB3A0](v12, v5);
        }
        else
        {
          uint64_t v14 = *(void **)(v5 + 8 * v12 + 32);
          swift_bridgeObjectRetain();
          id v13 = v14;
        }
        unint64_t v5 = (unint64_t)v13;
        MEMORY[0x270FA5388](v13);
        uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
        sub_251A1E280(v35, (uint64_t)v16);
        uint64_t v17 = sub_251F34DA0();
        uint64_t v18 = *(void *)(v17 - 8);
        int64_t v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
        char v20 = 0;
        if (v19(v16, 1, v17) != 1)
        {
          char v20 = (void *)sub_251F34D50();
          (*(void (**)(char *, uint64_t))(v18 + 8))(v16, v17);
        }
        id v2 = v32;
        id v21 = objc_msgSend(v32, sel_accessoryFor_in_, v20, v5);

        swift_bridgeObjectRelease();
        if (v21) {
          break;
        }
        unint64_t v22 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
          __break(1u);
          goto LABEL_27;
        }
        ++v12;
        unint64_t v5 = v36;
        if (v22 == v10) {
          goto LABEL_14;
        }
      }
      if (v10 == v12) {
        goto LABEL_14;
      }
      if (v33)
      {
        id v23 = (id)MEMORY[0x2533AB3A0](v12, v36);
        goto LABEL_21;
      }
      if ((v12 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v12 < *(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        id v23 = *(id *)(v36 + 8 * v12 + 32);
LABEL_21:
        int64_t v24 = v23;
        MEMORY[0x270FA5388](v23);
        uint64_t v26 = (char *)&v31 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
        sub_251A1E280(v31, (uint64_t)v26);
        if (v19(v26, 1, v17) == 1)
        {
          uint64_t v27 = 0;
        }
        else
        {
          uint64_t v27 = (void *)sub_251F34D50();
          (*(void (**)(char *, uint64_t))(v18 + 8))(v26, v17);
        }
        id v28 = v32;
        id v29 = objc_msgSend(v32, sel_accessoryFor_in_, v27, v24);

        sub_251A1B064(v31, &qword_26B21FF90);
        if (v29)
        {

          swift_bridgeObjectRelease();
          goto LABEL_15;
        }
        goto LABEL_31;
      }
      __break(1u);
LABEL_31:
      __break(1u);
      return;
    }
  }
LABEL_14:
  sub_251A1B064(v31, &qword_26B21FF90);

  swift_bridgeObjectRelease();
LABEL_15:
  sub_251A1B064(v35, &qword_26B21FF90);
}

Swift::Bool __swiftcall DataModel.accessoryExists(for:in:)(HomeDataModel::ServiceKind a1, HMHome in)
{
  id v2 = [(objc_class *)in.super.isa accessories];
  sub_251A1A568(0, (unint64_t *)&qword_26B21EAF8);
  unint64_t v3 = sub_251F35AC0();

  if (v3 >> 62)
  {
LABEL_34:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_251F366C0();
    swift_bridgeObjectRelease();
    if (v4) {
      goto LABEL_3;
    }
LABEL_28:
    swift_bridgeObjectRelease();
    return v4;
  }
  uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v4) {
    goto LABEL_28;
  }
LABEL_3:
  unint64_t v5 = 0;
  unint64_t v6 = v3 & 0xC000000000000001;
  unint64_t v26 = v3 + 32;
  unint64_t v27 = v3 & 0xC000000000000001;
  uint64_t v28 = v4;
  unint64_t v29 = v3;
  while (1)
  {
    unint64_t v31 = v5;
    if (v6)
    {
      swift_bridgeObjectRetain();
      id v7 = (id)MEMORY[0x2533AB3A0](v5, v3);
      swift_bridgeObjectRelease();
    }
    else
    {
      id v7 = *(id *)(v26 + 8 * v5);
    }
    id v8 = objc_msgSend(v7, sel_services);
    sub_251A1A568(0, (unint64_t *)&qword_26B21F180);
    unint64_t v9 = sub_251F35AC0();

    id v30 = v7;
    if (v9 >> 62) {
      break;
    }
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v10) {
      goto LABEL_9;
    }
LABEL_18:
    swift_bridgeObjectRelease_n();

    unint64_t v5 = v31 + 1;
    if (__OFADD__(v31, 1))
    {
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v3 = v29;
    unint64_t v6 = v27;
    if (v5 == v28)
    {
      LOBYTE(v4) = 0;
      goto LABEL_28;
    }
  }
  swift_bridgeObjectRetain_n();
  uint64_t v10 = sub_251F366C0();
  swift_bridgeObjectRelease();
  if (!v10) {
    goto LABEL_18;
  }
LABEL_9:
  uint64_t v11 = 4;
  while (1)
  {
    if ((v9 & 0xC000000000000001) != 0) {
      id v12 = (id)MEMORY[0x2533AB3A0](v11 - 4, v9);
    }
    else {
      id v12 = *(id *)(v9 + 8 * v11);
    }
    id v13 = v12;
    unint64_t v3 = v11 - 3;
    if (__OFADD__(v11 - 4, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    id v14 = objc_msgSend(v12, sel_serviceType);
    uint64_t v15 = sub_251F356F0();
    uint64_t v17 = v16;

    v18._countAndFlagsBits = v15;
    v18._object = v17;
    ServiceKind.init(rawValue:)(v18);
    unint64_t v19 = ServiceKind.rawValue.getter();
    uint64_t v21 = v20;
    if (v19 == ServiceKind.rawValue.getter() && v21 == v22) {
      break;
    }
    char v23 = sub_251F36B10();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v23) {
      goto LABEL_24;
    }

    ++v11;
    if (v3 == v10) {
      goto LABEL_18;
    }
  }
  swift_bridgeObjectRelease_n();
LABEL_24:

  Swift::Bool result = swift_bridgeObjectRelease_n();
  if (v31 == v28)
  {
    LOBYTE(v4) = 0;
    goto LABEL_28;
  }
  if (v27)
  {
    MEMORY[0x2533AB3A0](v31, v29);
    swift_unknownObjectRelease();
    LOBYTE(v4) = 1;
    goto LABEL_28;
  }
  if ((v31 & 0x8000000000000000) == 0)
  {
    unint64_t v25 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
    Swift::Bool result = swift_bridgeObjectRelease();
    if (v31 >= v25) {
      goto LABEL_38;
    }
    LOBYTE(v4) = 1;
    return v4;
  }
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

uint64_t DataModel.accessoriesFromAnyHome(for:)(char *a1)
{
  char v2 = *a1;
  id v3 = objc_msgSend(v1, sel_sortedHomes);
  sub_251A1A568(0, (unint64_t *)&qword_26B21F2D0);
  unint64_t v4 = sub_251F35AC0();

  id v5 = v1;
  uint64_t v6 = sub_251A9FD58(v4, v2);
  swift_bridgeObjectRelease();

  return v6;
}

void *DataModel.home(for:)(uint64_t a1)
{
  id v3 = objc_msgSend(v1, sel_sortedHomes);
  sub_251A1A568(0, (unint64_t *)&qword_26B21F2D0);
  unint64_t v4 = sub_251F35AC0();

  v7[2] = a1;
  id v5 = sub_251A95D30(sub_251AA0080, (uint64_t)v7, v4);
  swift_bridgeObjectRelease();
  return v5;
}

void DataModel.accessory(for:)(uint64_t a1)
{
}

void DataModel.actionSet(for:)(uint64_t a1)
{
}

void sub_251A97420(uint64_t a1, SEL *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(id *))
{
  uint64_t v41 = a5;
  uint64_t v49 = a3;
  uint64_t v50 = a4;
  uint64_t v51 = a2;
  id v6 = objc_msgSend(v5, sel_sortedHomes);
  sub_251A1A568(0, (unint64_t *)&qword_26B21F2D0);
  unint64_t v7 = sub_251F35AC0();

  uint64_t v8 = sub_251F34DA0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x270FA5388](v8);
  unint64_t v11 = (v10 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v45 = v9;
  id v12 = *(uint64_t (**)(void))(v9 + 16);
  uint64_t v43 = (char *)&v40 - v11;
  uint64_t v13 = v12();
  uint64_t v55 = v10;
  MEMORY[0x270FA5388](v13);
  id v14 = (char *)&v40 - v11;
  uint64_t v15 = v8;
  int v57 = v14;
  v12();
  if (v7 >> 62)
  {
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_251F366C0();
    swift_bridgeObjectRelease();
    if (v16) {
      goto LABEL_3;
    }
LABEL_22:
    id v30 = *(void (**)(char *, uint64_t))(v45 + 8);
    v30(v43, v15);
LABEL_29:
    swift_bridgeObjectRelease();
    v30(v57, v15);
    return;
  }
  uint64_t v16 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v16) {
    goto LABEL_22;
  }
LABEL_3:
  unint64_t v17 = 0;
  unint64_t v47 = v7;
  unint64_t v48 = v7 & 0xC000000000000001;
  unint64_t v42 = v7 + 32;
  uint64_t v54 = (void (**)(char *, uint64_t))(v45 + 8);
  uint64_t v40 = (v45 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t v56 = v15;
  uint64_t v46 = v16;
  while (1)
  {
    if (v48)
    {
      swift_bridgeObjectRetain();
      id v18 = (id)MEMORY[0x2533AB3A0](v17, v7);
    }
    else
    {
      unint64_t v19 = *(void **)(v42 + 8 * v17);
      swift_bridgeObjectRetain();
      id v18 = v19;
      uint64_t v15 = v56;
    }
    uint64_t v20 = *v51;
    id v52 = v18;
    id v21 = objc_msgSend(v18, v20, v40);
    uint64_t v44 = sub_251A1A568(0, v49);
    unint64_t v22 = sub_251F35AC0();

    unint64_t v53 = v17;
    if (v22 >> 62) {
      break;
    }
    unint64_t v7 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v7) {
      goto LABEL_9;
    }
LABEL_16:
    swift_bridgeObjectRelease_n();
    unint64_t v7 = v47;
    swift_bridgeObjectRelease();

    unint64_t v17 = v53 + 1;
    if (__OFADD__(v53, 1))
    {
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
    if (v17 == v46) {
      goto LABEL_22;
    }
  }
  swift_bridgeObjectRetain_n();
  unint64_t v7 = sub_251F366C0();
  swift_bridgeObjectRelease();
  if (!v7) {
    goto LABEL_16;
  }
LABEL_9:
  uint64_t v23 = 4;
  while (1)
  {
    if ((v22 & 0xC000000000000001) != 0) {
      id v24 = (id)MEMORY[0x2533AB3A0](v23 - 4, v22);
    }
    else {
      id v24 = *(id *)(v22 + 8 * v23);
    }
    unint64_t v25 = v24;
    uint64_t v26 = v23 - 3;
    if (__OFADD__(v23 - 4, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    id v27 = objc_msgSend(v24, sel_uniqueIdentifier);
    MEMORY[0x270FA5388](v27);
    unint64_t v29 = (char *)&v40 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_251F34D80();

    LOBYTE(v27) = sub_251F34D70();
    id v30 = *v54;
    unint64_t v31 = v29;
    uint64_t v15 = v56;
    (*v54)(v31, v56);

    if (v27) {
      break;
    }
    ++v23;
    if (v26 == v7) {
      goto LABEL_16;
    }
  }
  unint64_t v32 = v47;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease_n();
  if (v53 == v46) {
    goto LABEL_22;
  }
  if (v48)
  {
    id v33 = (id)MEMORY[0x2533AB3A0]();
LABEL_28:
    uint64_t v34 = v33;
    id v35 = [v33 *v51];
    unint64_t v36 = sub_251F35AC0();

    MEMORY[0x270FA5388](v37);
    uint64_t v38 = v43;
    *(&v40 - 2) = (uint64_t)v43;
    unint64_t v39 = sub_251A95D30(v41, (uint64_t)(&v40 - 4), v36);
    swift_bridgeObjectRelease();
    uint64_t v15 = v56;
    v30(v38, v56);

    if (v39) {
      goto LABEL_29;
    }
  }
  else
  {
    if ((v53 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v53 < *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v33 = *(id *)(v42 + 8 * v53);
      goto LABEL_28;
    }
    __break(1u);
  }
  __break(1u);
}

void DataModel.cameraProfile(for:)()
{
  id v1 = objc_msgSend(v0, sel_sortedHomes);
  sub_251A1A568(0, (unint64_t *)&qword_26B21F2D0);
  unint64_t v2 = sub_251F35AC0();

  uint64_t v3 = sub_251F34DA0();
  uint64_t v4 = *(void *)(*(void *)(v3 - 8) + 64);
  MEMORY[0x270FA5388](v3);
  unint64_t v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF0;
  int v76 = (uint64_t **)v6;
  uint64_t v7 = v6 + 16;
  uint64_t v8 = *(uint64_t (**)(void))(v6 + 16);
  uint64_t v54 = (uint64_t)&v54 - v5;
  uint64_t v9 = v8();
  uint64_t v75 = v4;
  MEMORY[0x270FA5388](v9);
  uint64_t v61 = (char *)&v54 - v5;
  uint64_t v59 = v7;
  int v58 = v8;
  v8();
  unint64_t v60 = v2;
  if (v2 >> 62) {
    goto LABEL_53;
  }
  uint64_t v10 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v10)
  {
LABEL_54:
    uint64_t v23 = v76[1];
LABEL_55:
    ((void (*)(uint64_t, uint64_t))v23)(v54, v3);
LABEL_56:
    swift_bridgeObjectRelease();
    ((void (*)(char *, uint64_t))v23)(v61, v3);
    return;
  }
LABEL_3:
  unint64_t v11 = 0;
  unint64_t v57 = v2 & 0xC000000000000001;
  unint64_t v55 = v2 + 32;
  ++v76;
  uint64_t v56 = v10;
  while (1)
  {
    unint64_t v68 = v11;
    if (v57)
    {
      unint64_t v12 = v11;
      swift_bridgeObjectRetain();
      id v13 = (id)MEMORY[0x2533AB3A0](v12, v2);
    }
    else
    {
      id v14 = *(void **)(v55 + 8 * v11);
      swift_bridgeObjectRetain();
      id v13 = v14;
    }
    uint64_t v15 = v13;
    id v16 = objc_msgSend(v13, sel_accessories);
    sub_251A1A568(0, (unint64_t *)&qword_26B21EAF8);
    unint64_t v17 = sub_251F35AC0();

    uint64_t v18 = v75;
    MEMORY[0x270FA5388](v19);
    unint64_t v20 = (v18 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v64 = (char *)&v54 - v20;
    id v21 = (void (*)(void))v58;
    uint64_t v22 = v58();
    uint64_t v23 = &v54;
    MEMORY[0x270FA5388](v22);
    uint64_t v77 = (char *)&v54 - v20;
    v21();
    uint64_t v66 = &v54;
    id v67 = v15;
    uint64_t v65 = &v54;
    if (!(v17 >> 62))
    {
      uint64_t v24 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v24) {
        break;
      }
      goto LABEL_30;
    }
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_251F366C0();
    swift_bridgeObjectRelease();
    if (v24) {
      break;
    }
LABEL_30:
    uint64_t v23 = *v76;
    ((void (*)(char *, uint64_t))*v76)(v64, v3);
    swift_bridgeObjectRelease();
    ((void (*)(char *, uint64_t))v23)(v77, v3);
    unint64_t v2 = v60;
    swift_bridgeObjectRelease();

    unint64_t v11 = v68 + 1;
    if (__OFADD__(v68, 1)) {
      goto LABEL_52;
    }
    if (v11 == v56) {
      goto LABEL_55;
    }
  }
  unint64_t v25 = 0;
  unint64_t v70 = v17;
  unint64_t v71 = v17 & 0xC000000000000001;
  unint64_t v62 = v17 + 32;
  uint64_t v69 = v24;
  while (1)
  {
    if (v71)
    {
      swift_bridgeObjectRetain();
      id v26 = (id)MEMORY[0x2533AB3A0](v25, v17);
    }
    else
    {
      id v27 = *(void **)(v62 + 8 * v25);
      swift_bridgeObjectRetain();
      id v26 = v27;
    }
    id v28 = v26;
    id v29 = objc_msgSend(v26, sel_cameraProfiles);
    if (v29) {
      break;
    }
LABEL_24:
    swift_bridgeObjectRelease();

    if (__OFADD__(v25++, 1))
    {
      __break(1u);
LABEL_52:
      __break(1u);
LABEL_53:
      swift_bridgeObjectRetain();
      unint64_t v2 = v60;
      uint64_t v10 = sub_251F366C0();
      swift_bridgeObjectRelease();
      if (!v10) {
        goto LABEL_54;
      }
      goto LABEL_3;
    }
    if (v25 == v24) {
      goto LABEL_30;
    }
  }
  id v30 = v29;
  uint64_t v31 = sub_251A1A568(0, (unint64_t *)&unk_26B21F160);
  unint64_t v32 = sub_251F35AC0();

  id v72 = v28;
  unint64_t v73 = v25;
  uint64_t v63 = v31;
  if (!(v32 >> 62))
  {
    uint64_t v33 = *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v33) {
      goto LABEL_16;
    }
    goto LABEL_23;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v33 = sub_251F366C0();
  swift_bridgeObjectRelease();
  if (!v33)
  {
LABEL_23:
    swift_bridgeObjectRelease_n();
    uint64_t v24 = v69;
    unint64_t v17 = v70;
    id v28 = v72;
    unint64_t v25 = v73;
    goto LABEL_24;
  }
LABEL_16:
  unint64_t v74 = v32 & 0xC000000000000001;
  uint64_t v34 = 4;
  while (1)
  {
    if (v74) {
      unint64_t v35 = MEMORY[0x2533AB3A0](v34 - 4, v32);
    }
    else {
      unint64_t v35 = (unint64_t)*(id *)(v32 + 8 * v34);
    }
    unint64_t v36 = (void *)v35;
    uint64_t v37 = (void *)(v34 - 3);
    if (__OFADD__(v34 - 4, 1))
    {
      __break(1u);
      goto LABEL_38;
    }
    id v38 = objc_msgSend((id)v35, sel_uniqueIdentifier);
    unint64_t v17 = (unint64_t)&v54;
    MEMORY[0x270FA5388](v38);
    uint64_t v40 = v3;
    uint64_t v41 = (char *)&v54 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_251F34D80();

    LOBYTE(v38) = sub_251F34D70();
    uint64_t v23 = *v76;
    unint64_t v42 = v41;
    uint64_t v3 = v40;
    ((void (*)(char *, uint64_t))*v76)(v42, v40);

    if (v38) {
      break;
    }
    ++v34;
    if (v37 == (void *)v33) {
      goto LABEL_23;
    }
  }
  unint64_t v17 = v70;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease_n();
  unint64_t v35 = v73;
  if (v73 == v69) {
    goto LABEL_30;
  }
  if (v71)
  {
    id v44 = (id)MEMORY[0x2533AB3A0]();
    goto LABEL_41;
  }
LABEL_38:
  if ((v35 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_58;
  }
  if (v35 >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
  id v44 = *(id *)(v62 + 8 * v35);
LABEL_41:
  uint64_t v37 = v44;
  id v45 = objc_msgSend(v44, sel_cameraProfiles);
  if (!v45) {
    goto LABEL_61;
  }
  uint64_t v46 = v45;
  unint64_t v47 = sub_251F35AC0();

  MEMORY[0x270FA5388](v48);
  uint64_t v49 = v64;
  *(&v54 - 2) = (uint64_t)v64;
  uint64_t v50 = sub_251A95D30(sub_251AA0080, (uint64_t)(&v54 - 4), v47);
  swift_bridgeObjectRelease();
  ((void (*)(char *, uint64_t))v23)(v49, v3);

  if (!v50)
  {
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  swift_bridgeObjectRelease();
  ((void (*)(char *, uint64_t))v23)(v77, v3);
  swift_bridgeObjectRelease();

  if (v68 == v56) {
    goto LABEL_55;
  }
  if (v57)
  {
    id v51 = (id)MEMORY[0x2533AB3A0]();
    goto LABEL_49;
  }
  if ((v68 & 0x8000000000000000) != 0) {
    goto LABEL_59;
  }
  if (v68 >= *(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_60:
    __break(1u);
LABEL_61:
    ((void (*)(char *, uint64_t))v23)(v64, v3);

    goto LABEL_62;
  }
  id v51 = *(id *)(v55 + 8 * v68);
LABEL_49:
  id v52 = v51;
  id v78 = v51;
  uint64_t v53 = v54;
  sub_251A981C4(&v78, v54, v79);
  ((void (*)(uint64_t, uint64_t))v23)(v53, v3);

  if (v79[0]) {
    goto LABEL_56;
  }
LABEL_63:
  __break(1u);
}

void sub_251A981C4(id *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  id v44 = a3;
  id v4 = objc_msgSend(*a1, sel_accessories);
  sub_251A1A568(0, (unint64_t *)&qword_26B21EAF8);
  unint64_t v5 = sub_251F35AC0();

  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6);
  uint64_t v47 = v7;
  uint64_t v9 = *(void (**)(void))(v7 + 16);
  uint64_t v10 = ((uint64_t (*)(char *, uint64_t, uint64_t))v9)((char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v6);
  uint64_t v54 = v8;
  MEMORY[0x270FA5388](v10);
  uint64_t v11 = v6;
  uint64_t v56 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9();
  id v45 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v5 >> 62)
  {
LABEL_35:
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_251F366C0();
    swift_bridgeObjectRelease();
    if (v12) {
      goto LABEL_3;
    }
LABEL_24:
    uint64_t v31 = *(void (**)(char *, uint64_t))(v47 + 8);
    v31(v45, v11);
    unint64_t v35 = 0;
LABEL_32:
    swift_bridgeObjectRelease();
    *id v44 = v35;
    v31(v56, v11);
    return;
  }
  uint64_t v12 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v12) {
    goto LABEL_24;
  }
LABEL_3:
  unint64_t v13 = 0;
  unint64_t v14 = v5 & 0xC000000000000001;
  uint64_t v15 = &off_26536F000;
  uint64_t v53 = (void (**)(char *, uint64_t))(v47 + 8);
  uint64_t v42 = (v47 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  unint64_t v43 = v5 + 32;
  uint64_t v49 = v12;
  unint64_t v50 = v5;
  unint64_t v48 = v5 & 0xC000000000000001;
  while (1)
  {
    if (v14)
    {
      swift_bridgeObjectRetain();
      id v16 = (id)MEMORY[0x2533AB3A0](v13, v5);
    }
    else
    {
      unint64_t v17 = *(void **)(v43 + 8 * v13);
      swift_bridgeObjectRetain();
      id v16 = v17;
    }
    id v18 = v16;
    id v19 = objc_msgSend(v16, (SEL)v15[297], v42);
    if (v19) {
      break;
    }
LABEL_18:
    swift_bridgeObjectRelease();

    if (__OFADD__(v13++, 1))
    {
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    if (v13 == v12) {
      goto LABEL_24;
    }
  }
  unint64_t v20 = v19;
  uint64_t v46 = sub_251A1A568(0, (unint64_t *)&unk_26B21F160);
  unint64_t v21 = sub_251F35AC0();

  id v51 = v18;
  unint64_t v52 = v13;
  if (!(v21 >> 62))
  {
    uint64_t v22 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v22) {
      goto LABEL_10;
    }
    goto LABEL_17;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v22 = sub_251F366C0();
  swift_bridgeObjectRelease();
  if (!v22)
  {
LABEL_17:
    swift_bridgeObjectRelease_n();
    uint64_t v12 = v49;
    unint64_t v5 = v50;
    uint64_t v15 = &off_26536F000;
    id v18 = v51;
    unint64_t v13 = v52;
    unint64_t v14 = v48;
    goto LABEL_18;
  }
LABEL_10:
  unint64_t v55 = v21 & 0xC000000000000001;
  uint64_t v23 = 4;
  while (1)
  {
    unint64_t v5 = v23 - 4;
    if (v55) {
      id v24 = (id)MEMORY[0x2533AB3A0](v23 - 4, v21);
    }
    else {
      id v24 = *(id *)(v21 + 8 * v23);
    }
    unint64_t v25 = v24;
    uint64_t v26 = v23 - 3;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    id v27 = objc_msgSend(v24, sel_uniqueIdentifier);
    MEMORY[0x270FA5388](v27);
    uint64_t v29 = v11;
    id v30 = (char *)&v42 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_251F34D80();

    LOBYTE(v27) = sub_251F34D70();
    uint64_t v31 = *v53;
    unint64_t v32 = v30;
    uint64_t v11 = v29;
    (*v53)(v32, v29);

    if (v27) {
      break;
    }
    ++v23;
    if (v26 == v22) {
      goto LABEL_17;
    }
  }
  unint64_t v34 = v50;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease_n();
  if (v52 == v49) {
    goto LABEL_24;
  }
  if (v48)
  {
    id v36 = (id)MEMORY[0x2533AB3A0]();
    goto LABEL_30;
  }
  if ((v52 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_38;
  }
  if (v52 >= *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_38:
    __break(1u);
LABEL_39:
    v31(v45, v29);

    goto LABEL_40;
  }
  id v36 = *(id *)(v43 + 8 * v52);
LABEL_30:
  uint64_t v23 = (uint64_t)v36;
  id v37 = objc_msgSend(v36, sel_cameraProfiles);
  if (!v37) {
    goto LABEL_39;
  }
  id v38 = v37;
  unint64_t v39 = sub_251F35AC0();

  MEMORY[0x270FA5388](v40);
  uint64_t v41 = v45;
  *(&v42 - 2) = (uint64_t)v45;
  unint64_t v35 = sub_251A95D30(sub_251AA0080, (uint64_t)(&v42 - 4), v39);
  swift_bridgeObjectRelease();
  uint64_t v11 = v29;
  v31(v41, v29);

  if (v35) {
    goto LABEL_32;
  }
LABEL_40:
  __break(1u);
}

void DataModel.mediaProfile(for:)()
{
  id v1 = objc_msgSend(v0, sel_sortedHomes);
  sub_251A1A568(0, (unint64_t *)&qword_26B21F2D0);
  unint64_t v2 = sub_251F35AC0();

  uint64_t v3 = (void *)sub_251F34DA0();
  id v4 = (void *)*(v3 - 1);
  uint64_t v5 = v4[8];
  MEMORY[0x270FA5388](v3);
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v7 = (uint64_t (*)(void))v4[2];
  uint64_t v65 = (uint64_t)&v65 - v6;
  uint64_t v8 = v7();
  uint64_t v78 = v5;
  MEMORY[0x270FA5388](v8);
  unint64_t v70 = (char *)&v65 - v6;
  uint64_t v87 = (void (*)(void))v7;
  uint64_t v88 = v4 + 2;
  v7();
  if (v2 >> 62) {
    goto LABEL_54;
  }
  uint64_t v9 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  unint64_t v71 = v3;
  if (!v9)
  {
    uint64_t v3 = (void *)v4[1];
    goto LABEL_36;
  }
  unint64_t v10 = 0;
  unint64_t v69 = v2 & 0xC000000000000001;
  unint64_t v66 = v2 + 32;
  uint64_t v86 = v4 + 7;
  uint64_t v82 = (uint64_t (**)(char *, uint64_t, void *))(v4 + 6);
  uint64_t v77 = (void (**)(char *, uint64_t, void *))(v4 + 4);
  unint64_t v68 = v2;
  uint64_t v80 = v4 + 1;
  uint64_t v67 = v9;
  while (1)
  {
    if (v69)
    {
      swift_bridgeObjectRetain();
      id v11 = (id)MEMORY[0x2533AB3A0](v10, v2);
    }
    else
    {
      uint64_t v12 = *(void **)(v66 + 8 * v10);
      swift_bridgeObjectRetain();
      id v11 = v12;
    }
    unint64_t v13 = v71;
    id v75 = v11;
    id v14 = objc_msgSend(v11, sel_accessories);
    sub_251A1A568(0, (unint64_t *)&qword_26B21EAF8);
    unint64_t v15 = sub_251F35AC0();

    unint64_t v74 = &v65;
    uint64_t v16 = v78;
    MEMORY[0x270FA5388](v17);
    unint64_t v18 = (v16 + 15) & 0xFFFFFFFFFFFFFFF0;
    id v19 = v87;
    uint64_t v20 = ((uint64_t (*)(char *, char *, void *))v87)((char *)&v65 - v18, v70, v13);
    unint64_t v73 = &v65;
    MEMORY[0x270FA5388](v20);
    uint64_t v89 = (char *)&v65 - v18;
    v19();
    unint64_t v76 = v10;
    uint64_t v72 = (uint64_t)&v65 - v18;
    if (v15 >> 62) {
      break;
    }
    uint64_t v21 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v22 = (uint64_t (**)(char *, uint64_t, uint64_t, void *))v86;
    if (v21) {
      goto LABEL_10;
    }
LABEL_30:
    id v4 = v80;
    uint64_t v3 = (void *)*v80;
    ((void (*)(uint64_t, void *))*v80)(v72, v13);
    swift_bridgeObjectRelease();
    ((void (*)(char *, void *))v3)(v89, v13);
    unint64_t v2 = v68;
    swift_bridgeObjectRelease();

    unint64_t v10 = v76 + 1;
    if (__OFADD__(v76, 1))
    {
      __break(1u);
LABEL_54:
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_251F366C0();
      swift_bridgeObjectRelease();
      goto LABEL_3;
    }
    if (v10 == v67) {
      goto LABEL_36;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_251F366C0();
  swift_bridgeObjectRelease();
  uint64_t v22 = (uint64_t (**)(char *, uint64_t, uint64_t, void *))v86;
  if (!v21) {
    goto LABEL_30;
  }
LABEL_10:
  unint64_t v23 = 0;
  unint64_t v84 = v15;
  unint64_t v85 = v15 & 0xC000000000000001;
  uint64_t v83 = v21;
  while (1)
  {
    if (v85)
    {
      swift_bridgeObjectRetain();
      id v24 = (id)MEMORY[0x2533AB3A0](v23, v15);
    }
    else
    {
      unint64_t v25 = *(void **)(v15 + 8 * v23 + 32);
      swift_bridgeObjectRetain();
      id v24 = v25;
    }
    uint64_t v26 = v24;
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    uint64_t v92 = &v65;
    uint64_t v28 = *(void *)(*(void *)(v27 - 8) + 64);
    MEMORY[0x270FA5388](v27 - 8);
    uint64_t v29 = (char *)&v65 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
    id v30 = objc_msgSend(v26, sel_mediaProfile);
    uint64_t v93 = v26;
    if (v30)
    {
      uint64_t v31 = v30;
      id v32 = objc_msgSend(v30, sel_uniqueIdentifier);

      sub_251F34D80();
      uint64_t v33 = *v22;
      uint64_t v34 = (*v22)((char *)&v65 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0), 0, 1, v13);
    }
    else
    {
      uint64_t v33 = *v22;
      uint64_t v34 = (*v22)((char *)&v65 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v13);
    }
    uint64_t v91 = &v65;
    MEMORY[0x270FA5388](v34);
    unint64_t v35 = (v28 + 15) & 0xFFFFFFFFFFFFFFF0;
    id v36 = (char *)&v65 - v35;
    ((void (*)(char *, char *, void *))v87)((char *)&v65 - v35, v89, v13);
    v33((char *)&v65 - v35, 0, 1, v13);
    uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E6B8);
    uint64_t v90 = &v65;
    uint64_t v38 = MEMORY[0x270FA5388](v37 - 8);
    uint64_t v40 = (char *)&v65 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v41 = (uint64_t)&v40[*(int *)(v38 + 56)];
    sub_251A1E280((uint64_t)&v65 - v35, (uint64_t)v40);
    sub_251A1E280((uint64_t)&v65 - v35, v41);
    uint64_t v42 = (uint64_t (*)(uint64_t, uint64_t, void *))*v82;
    uint64_t v43 = (*v82)(v40, 1, v13);
    if (v43 == 1)
    {
      int v44 = v42(v41, 1, v13);
      id v45 = v93;
      if (v44 != 1) {
        goto LABEL_22;
      }
      sub_251A1B064((uint64_t)v40, &qword_26B21FF90);
      sub_251A1B064((uint64_t)&v65 - v35, &qword_26B21FF90);
      sub_251A1B064((uint64_t)v29, &qword_26B21FF90);
      unint64_t v15 = v84;
      uint64_t v22 = (uint64_t (**)(char *, uint64_t, uint64_t, void *))v86;
    }
    else
    {
      uint64_t v81 = &v65;
      MEMORY[0x270FA5388](v43);
      uint64_t v46 = (char *)&v65 - v35;
      sub_251A1E280((uint64_t)v40, (uint64_t)&v65 - v35);
      uint64_t v47 = v42(v41, 1, v13);
      if (v47 == 1)
      {
        ((void (*)(char *, void *))*v80)((char *)&v65 - v35, v13);
        id v45 = v93;
LABEL_22:
        sub_251A1B064((uint64_t)v40, &qword_26B21E6B8);
        sub_251A1B064((uint64_t)&v65 - v35, &qword_26B21FF90);
        sub_251A1B064((uint64_t)v29, &qword_26B21FF90);
        unint64_t v15 = v84;
        uint64_t v22 = (uint64_t (**)(char *, uint64_t, uint64_t, void *))v86;
LABEL_23:
        swift_bridgeObjectRelease();

        goto LABEL_26;
      }
      MEMORY[0x270FA5388](v47);
      uint64_t v49 = (char *)&v65 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*v77)(v49, v41, v13);
      sub_251A9FE88();
      int v79 = sub_251F35650();
      unint64_t v50 = (void (*)(char *, void *))*v80;
      ((void (*)(char *, void *))*v80)(v46, v13);
      v50(v49, v13);
      sub_251A1B064((uint64_t)v40, &qword_26B21FF90);
      sub_251A1B064((uint64_t)v36, &qword_26B21FF90);
      sub_251A1B064((uint64_t)v29, &qword_26B21FF90);
      id v45 = v93;
      uint64_t v22 = (uint64_t (**)(char *, uint64_t, uint64_t, void *))v86;
      unint64_t v15 = v84;
      if ((v79 & 1) == 0) {
        goto LABEL_23;
      }
    }
    id v51 = objc_msgSend(v45, sel_mediaProfile);

    swift_bridgeObjectRelease();
    if (v51) {
      break;
    }
LABEL_26:
    unint64_t v52 = v23 + 1;
    if (__OFADD__(v23, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    ++v23;
    if (v52 == v83) {
      goto LABEL_30;
    }
  }
  if (v83 == v23) {
    goto LABEL_30;
  }
LABEL_39:
  if (v85)
  {
    id v54 = (id)MEMORY[0x2533AB3A0](v23, v15);
    goto LABEL_44;
  }
  if ((v23 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_56;
  }
  if (v23 >= *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  id v54 = *(id *)(v15 + 8 * v23 + 32);
LABEL_44:
  unint64_t v55 = v54;
  uint64_t v94 = v54;
  uint64_t v56 = v72;
  sub_251A9997C(&v94, v72, v95);
  uint64_t v3 = (void *)*v80;
  uint64_t v57 = v56;
  int v58 = v71;
  ((void (*)(uint64_t, void *))*v80)(v57, v71);

  uint64_t v59 = (void *)v95[0];
  unint64_t v60 = v68;
  unint64_t v61 = v76;
  if (!v95[0]) {
    goto LABEL_59;
  }
  swift_bridgeObjectRelease();
  ((void (*)(char *, void *))v3)(v89, v58);
  swift_bridgeObjectRelease();

  if (v61 == v67)
  {
LABEL_36:
    uint64_t v53 = v71;
    ((void (*)(uint64_t, void *))v3)(v65, v71);
    goto LABEL_37;
  }
  if (v69)
  {
    id v62 = (id)MEMORY[0x2533AB3A0](v61, v60);
    goto LABEL_51;
  }
  if ((v61 & 0x8000000000000000) != 0) {
    goto LABEL_57;
  }
  if (v61 >= *(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
    return;
  }
  id v62 = *(id *)(v66 + 8 * v61);
LABEL_51:
  uint64_t v63 = v62;
  uint64_t v94 = v62;
  uint64_t v64 = v65;
  sub_251A991FC(&v94, v65, v95);
  ((void (*)(uint64_t, void *))v3)(v64, v71);

  if (!v95[0]) {
    goto LABEL_60;
  }
  uint64_t v53 = v71;
LABEL_37:
  swift_bridgeObjectRelease();
  ((void (*)(char *, void *))v3)(v70, v53);
}

void sub_251A991FC(id *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  unint64_t v50 = a3;
  id v4 = objc_msgSend(*a1, sel_accessories);
  sub_251A1A568(0, (unint64_t *)&qword_26B21EAF8);
  unint64_t v5 = sub_251F35AC0();

  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(*(void *)(v6 - 8) + 64);
  MEMORY[0x270FA5388](v6);
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v51 = v9;
  uint64_t v10 = v9 + 16;
  id v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 16);
  uint64_t v12 = v11((char *)&v49 - v8, a2, v6);
  uint64_t v53 = v7;
  MEMORY[0x270FA5388](v12);
  uint64_t v64 = v10;
  uint64_t v65 = (char *)&v49 - v8;
  uint64_t v63 = (void (*)(char *, char *, uint64_t))v11;
  ((void (*)(void))v11)();
  uint64_t v49 = (char *)&v49 - v8;
  if (v5 >> 62)
  {
LABEL_33:
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_251F366C0();
    swift_bridgeObjectRelease();
    if (v13) {
      goto LABEL_3;
    }
LABEL_22:
    int v44 = *(void (**)(char *, uint64_t))(v51 + 8);
    v44(v49, v6);
    uint64_t v45 = 0;
LABEL_23:
    swift_bridgeObjectRelease();
    void *v50 = v45;
    v44(v65, v6);
    return;
  }
  uint64_t v13 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v13) {
    goto LABEL_22;
  }
LABEL_3:
  unint64_t v14 = 0;
  uint64_t v59 = (uint64_t (**)(char *, uint64_t, uint64_t))(v51 + 48);
  unint64_t v60 = v5;
  unint64_t v52 = (void (**)(char *, uint64_t, uint64_t))(v51 + 32);
  unint64_t v55 = (void (**)(char *, uint64_t))(v51 + 8);
  unint64_t v61 = (uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v51 + 56);
  unint64_t v62 = v5 & 0xC000000000000001;
  uint64_t v57 = v13;
  unint64_t v58 = (v51 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  while (1)
  {
    if (v62)
    {
      swift_bridgeObjectRetain();
      id v15 = (id)MEMORY[0x2533AB3A0](v14, v5);
    }
    else
    {
      uint64_t v16 = *(void **)(v5 + 8 * v14 + 32);
      swift_bridgeObjectRetain();
      id v15 = v16;
    }
    uint64_t v17 = v15;
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    unint64_t v68 = (uint64_t *)&v49;
    uint64_t v19 = *(void *)(*(void *)(v18 - 8) + 64);
    MEMORY[0x270FA5388](v18 - 8);
    uint64_t v20 = (char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
    id v21 = objc_msgSend(v17, sel_mediaProfile);
    unint64_t v69 = v17;
    if (v21)
    {
      uint64_t v22 = v21;
      id v23 = objc_msgSend(v21, sel_uniqueIdentifier);

      sub_251F34D80();
      id v24 = *v61;
      uint64_t v25 = (*v61)((char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), 0, 1, v6);
    }
    else
    {
      id v24 = *v61;
      uint64_t v25 = (*v61)((char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v6);
    }
    uint64_t v67 = (uint64_t *)&v49;
    MEMORY[0x270FA5388](v25);
    unint64_t v26 = (v19 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v27 = (char *)&v49 - v26;
    v63((char *)&v49 - v26, v65, v6);
    v24((char *)&v49 - v26, 0, 1, v6);
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E6B8);
    unint64_t v66 = (uint64_t *)&v49;
    uint64_t v29 = MEMORY[0x270FA5388](v28 - 8);
    uint64_t v31 = (char *)&v49 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v32 = (uint64_t)&v31[*(int *)(v29 + 56)];
    sub_251A1E280((uint64_t)&v49 - v26, (uint64_t)v31);
    sub_251A1E280((uint64_t)&v49 - v26, v32);
    uint64_t v33 = *v59;
    uint64_t v34 = (*v59)(v31, 1, v6);
    if (v34 == 1) {
      break;
    }
    uint64_t v56 = (uint64_t *)&v49;
    MEMORY[0x270FA5388](v34);
    uint64_t v37 = (char *)&v49 - v26;
    sub_251A1E280((uint64_t)v31, (uint64_t)&v49 - v26);
    uint64_t v38 = v33((char *)v32, 1, v6);
    if (v38 == 1)
    {
      sub_251A1B064((uint64_t)&v49 - v26, &qword_26B21FF90);
      sub_251A1B064((uint64_t)v20, &qword_26B21FF90);
      (*v55)(v37, v6);
      id v36 = v69;
      goto LABEL_15;
    }
    MEMORY[0x270FA5388](v38);
    uint64_t v40 = (char *)&v49 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*v52)(v40, v32, v6);
    sub_251A9FE88();
    int v54 = sub_251F35650();
    uint64_t v41 = *v55;
    (*v55)(v40, v6);
    sub_251A1B064((uint64_t)v27, &qword_26B21FF90);
    sub_251A1B064((uint64_t)v20, &qword_26B21FF90);
    v41(v37, v6);
    sub_251A1B064((uint64_t)v31, &qword_26B21FF90);
    id v36 = v69;
    unint64_t v5 = v60;
    if (v54) {
      goto LABEL_17;
    }
LABEL_19:
    swift_bridgeObjectRelease();

LABEL_20:
    unint64_t v43 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    ++v14;
    if (v43 == v57) {
      goto LABEL_22;
    }
  }
  sub_251A1B064((uint64_t)&v49 - v26, &qword_26B21FF90);
  sub_251A1B064((uint64_t)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_26B21FF90);
  int v35 = v33((char *)v32, 1, v6);
  id v36 = v69;
  if (v35 != 1)
  {
LABEL_15:
    sub_251A1B064((uint64_t)v31, &qword_26B21E6B8);
    unint64_t v5 = v60;
    goto LABEL_19;
  }
  sub_251A1B064((uint64_t)v31, &qword_26B21FF90);
  unint64_t v5 = v60;
LABEL_17:
  id v42 = objc_msgSend(v36, sel_mediaProfile, v49);

  swift_bridgeObjectRelease();
  if (!v42) {
    goto LABEL_20;
  }
  if (v57 == v14) {
    goto LABEL_22;
  }
  if (v62)
  {
    id v46 = (id)MEMORY[0x2533AB3A0](v14, v5);
LABEL_30:
    uint64_t v47 = v46;
    unint64_t v70 = v46;
    uint64_t v48 = (uint64_t)v49;
    sub_251A9997C(&v70, (uint64_t)v49, &v71);
    int v44 = *v55;
    (*v55)((char *)v48, v6);

    uint64_t v45 = v71;
    if (v71) {
      goto LABEL_23;
    }
  }
  else
  {
    if ((v14 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v14 < *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v46 = *(id *)(v5 + 8 * v14 + 32);
      goto LABEL_30;
    }
    __break(1u);
  }
  __break(1u);
}

id sub_251A9997C@<X0>(void **a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v34 = a3;
  id v4 = *a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t v6 = *(void *)(*(void *)(v5 - 8) + 64);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v31 = v4;
  id v8 = objc_msgSend(v4, sel_mediaProfile);
  if (v8)
  {
    uint64_t v9 = v8;
    id v10 = objc_msgSend(v8, sel_uniqueIdentifier);

    sub_251F34D80();
    uint64_t v11 = sub_251F34DA0();
    uint64_t v12 = (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))((char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), 0, 1, v11);
  }
  else
  {
    uint64_t v11 = sub_251F34DA0();
    uint64_t v12 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))((char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v11);
  }
  uint64_t v33 = v30;
  MEMORY[0x270FA5388](v12);
  unint64_t v13 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  unint64_t v14 = (char *)v30 - v13;
  sub_251F34DA0();
  uint64_t v15 = *(void *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))((char *)v30 - v13, a2, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))((char *)v30 - v13, 0, 1, v11);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E6B8);
  uint64_t v32 = v30;
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  uint64_t v19 = (char *)v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = (uint64_t)&v19[*(int *)(v17 + 56)];
  sub_251A1E280((uint64_t)v30 - v13, (uint64_t)v19);
  sub_251A1E280((uint64_t)v30 - v13, v20);
  id v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  uint64_t v22 = v21(v19, 1, v11);
  if (v22 != 1)
  {
    v30[1] = v30;
    MEMORY[0x270FA5388](v22);
    id v23 = (char *)v30 - v13;
    sub_251A1E280((uint64_t)v19, (uint64_t)v30 - v13);
    uint64_t v24 = v21((char *)v20, 1, v11);
    if (v24 != 1)
    {
      MEMORY[0x270FA5388](v24);
      unint64_t v26 = (char *)v30 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, uint64_t, uint64_t))(v15 + 32))(v26, v20, v11);
      sub_251A9FE88();
      char v27 = sub_251F35650();
      uint64_t v28 = *(void (**)(char *, uint64_t))(v15 + 8);
      v28(v26, v11);
      sub_251A1B064((uint64_t)v14, &qword_26B21FF90);
      sub_251A1B064((uint64_t)v7, &qword_26B21FF90);
      v28(v23, v11);
      sub_251A1B064((uint64_t)v19, &qword_26B21FF90);
      if (v27) {
        goto LABEL_11;
      }
LABEL_12:
      id result = 0;
      goto LABEL_13;
    }
    sub_251A1B064((uint64_t)v30 - v13, &qword_26B21FF90);
    sub_251A1B064((uint64_t)v7, &qword_26B21FF90);
    (*(void (**)(char *, uint64_t))(v15 + 8))((char *)v30 - v13, v11);
LABEL_9:
    sub_251A1B064((uint64_t)v19, &qword_26B21E6B8);
    goto LABEL_12;
  }
  sub_251A1B064((uint64_t)v30 - v13, &qword_26B21FF90);
  sub_251A1B064((uint64_t)v7, &qword_26B21FF90);
  if (v21((char *)v20, 1, v11) != 1) {
    goto LABEL_9;
  }
  sub_251A1B064((uint64_t)v19, &qword_26B21FF90);
LABEL_11:
  id result = objc_msgSend(v31, sel_mediaProfile);
LABEL_13:
  *uint64_t v34 = result;
  return result;
}

void DataModel.characteristic(for:)()
{
  id v1 = objc_msgSend(v0, sel_sortedHomes);
  sub_251A1A568(0, (unint64_t *)&qword_26B21F2D0);
  unint64_t v2 = sub_251F35AC0();

  uint64_t v3 = sub_251F34DA0();
  unint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](v3);
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  unint64_t v7 = v4;
  id v8 = *(uint64_t (**)(void))(v4 + 16);
  uint64_t v71 = (char *)&v70 - v6;
  uint64_t v9 = v8();
  uint64_t v102 = v5;
  MEMORY[0x270FA5388](v9);
  unint64_t v76 = (char *)&v70 - v6;
  unint64_t v87 = v4 + 16;
  uint64_t v86 = v8;
  v8();
  if (v2 >> 62) {
    goto LABEL_75;
  }
  uint64_t v10 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  unint64_t v82 = v2;
  unint64_t v11 = v7;
  if (!v10)
  {
LABEL_55:
    unint64_t v2 = *(void *)(v11 + 8);
    goto LABEL_56;
  }
  unint64_t v12 = 0;
  uint64_t v73 = 0;
  unint64_t v75 = v2 & 0xC000000000000001;
  unint64_t v72 = v2 + 32;
  unint64_t v13 = (unint64_t *)(v7 + 8);
  uint64_t v104 = (unint64_t *)(v7 + 8);
  uint64_t v74 = v10;
  while (1)
  {
    unint64_t v81 = v12;
    unint64_t v7 = (unint64_t)v13;
    if (v75)
    {
      unint64_t v14 = v82;
      swift_bridgeObjectRetain();
      id v15 = (id)MEMORY[0x2533AB3A0](v12, v14);
    }
    else
    {
      uint64_t v16 = *(void **)(v72 + 8 * v12);
      swift_bridgeObjectRetain();
      id v15 = v16;
    }
    id v80 = v15;
    id v17 = objc_msgSend(v15, sel_accessories);
    sub_251A1A568(0, (unint64_t *)&qword_26B21EAF8);
    unint64_t v18 = sub_251F35AC0();

    int v79 = &v70;
    uint64_t v19 = v102;
    MEMORY[0x270FA5388](v20);
    unint64_t v21 = (v19 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v77 = (uint64_t)&v70 - v21;
    uint64_t v22 = (void (*)(void))v86;
    uint64_t v23 = v86();
    uint64_t v78 = &v70;
    MEMORY[0x270FA5388](v23);
    uint64_t v89 = (char *)&v70 - v21;
    v22();
    uint64_t v24 = v18;
    if (v18 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v25 = sub_251F366C0();
      swift_bridgeObjectRelease();
      unint64_t v13 = (unint64_t *)v7;
      if (!v25)
      {
LABEL_50:
        unint64_t v2 = *v13;
        goto LABEL_51;
      }
    }
    else
    {
      uint64_t v25 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
      unint64_t v13 = (unint64_t *)v7;
      if (!v25) {
        goto LABEL_50;
      }
    }
    unint64_t v26 = 0;
    unint64_t v85 = v24 & 0xC000000000000001;
    uint64_t v83 = v24 + 32;
    uint64_t v91 = v24;
    uint64_t v84 = v25;
    while (1)
    {
      unint64_t v96 = v26;
      if (v85)
      {
        unint64_t v27 = v26;
        swift_bridgeObjectRetain();
        id v28 = (id)MEMORY[0x2533AB3A0](v27, v24);
      }
      else
      {
        uint64_t v29 = *(void **)(v83 + 8 * v26);
        swift_bridgeObjectRetain();
        id v28 = v29;
      }
      id v95 = v28;
      id v30 = objc_msgSend(v28, sel_services);
      sub_251A1A568(0, (unint64_t *)&qword_26B21F180);
      unint64_t v7 = sub_251F35AC0();

      uint64_t v94 = &v70;
      uint64_t v31 = v102;
      MEMORY[0x270FA5388](v32);
      unint64_t v33 = (v31 + 15) & 0xFFFFFFFFFFFFFFF0;
      uint64_t v92 = (char *)&v70 - v33;
      uint64_t v34 = (void (*)(void))v86;
      uint64_t v35 = v86();
      uint64_t v93 = &v70;
      MEMORY[0x270FA5388](v35);
      uint64_t v105 = (char *)&v70 - v33;
      v34();
      if (v7 >> 62) {
        break;
      }
      uint64_t v36 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v36) {
        goto LABEL_16;
      }
LABEL_36:
      unint64_t v2 = *v13;
      ((void (*)(char *, uint64_t))*v13)(v92, v3);
      swift_bridgeObjectRelease();
      ((void (*)(char *, uint64_t))v2)(v105, v3);
      swift_bridgeObjectRelease();

      unint64_t v26 = v96 + 1;
      if (__OFADD__(v96, 1))
      {
        __break(1u);
LABEL_62:
        if ((v52 & 0x8000000000000000) != 0)
        {
LABEL_78:
          __break(1u);
        }
        else if (v52 < *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          id v63 = *(id *)(v83 + 8 * v52);
          goto LABEL_65;
        }
        __break(1u);
LABEL_80:
        __break(1u);
LABEL_81:
        __break(1u);
LABEL_82:
        __break(1u);
LABEL_83:
        __break(1u);
        goto LABEL_84;
      }
      if (v26 == v84) {
        goto LABEL_51;
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v36 = sub_251F366C0();
    swift_bridgeObjectRelease();
    if (!v36) {
      goto LABEL_36;
    }
LABEL_16:
    unint64_t v2 = 0;
    unint64_t v98 = v7;
    unint64_t v99 = v7 & 0xC000000000000001;
    unint64_t v90 = v7 + 32;
    uint64_t v97 = v36;
    while (1)
    {
      unint64_t v101 = v2;
      if (v99)
      {
        swift_bridgeObjectRetain();
        id v37 = (id)MEMORY[0x2533AB3A0](v2, v7);
      }
      else
      {
        uint64_t v38 = *(void **)(v90 + 8 * v2);
        swift_bridgeObjectRetain();
        id v37 = v38;
      }
      id v100 = v37;
      id v39 = objc_msgSend(v37, sel_characteristics);
      uint64_t v40 = sub_251A1A568(0, (unint64_t *)&qword_26B21F170);
      unint64_t v41 = sub_251F35AC0();

      if (v41 >> 62) {
        break;
      }
      uint64_t v42 = *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v42) {
        goto LABEL_22;
      }
LABEL_29:
      swift_bridgeObjectRelease_n();
      unint64_t v7 = v98;
      swift_bridgeObjectRelease();

      unint64_t v2 = v101 + 1;
      if (__OFADD__(v101, 1))
      {
        __break(1u);
        goto LABEL_59;
      }
      unint64_t v13 = v104;
      uint64_t v24 = v91;
      if (v2 == v97) {
        goto LABEL_36;
      }
    }
    swift_bridgeObjectRetain_n();
    uint64_t v42 = sub_251F366C0();
    swift_bridgeObjectRelease();
    if (!v42) {
      goto LABEL_29;
    }
LABEL_22:
    uint64_t v88 = v40;
    unint64_t v103 = v41 & 0xC000000000000001;
    uint64_t v43 = 4;
    while (1)
    {
      if (v103) {
        id v44 = (id)MEMORY[0x2533AB3A0](v43 - 4, v41);
      }
      else {
        id v44 = *(id *)(v41 + 8 * v43);
      }
      uint64_t v45 = v44;
      unint64_t v11 = v43 - 3;
      if (__OFADD__(v43 - 4, 1))
      {
        __break(1u);
        goto LABEL_55;
      }
      id v46 = objc_msgSend(v44, sel_uniqueIdentifier);
      MEMORY[0x270FA5388](v46);
      uint64_t v48 = v3;
      uint64_t v49 = (char *)&v70 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_251F34D80();

      uint64_t v24 = sub_251F34D70();
      unint64_t v50 = (void (*)(char *, uint64_t))*v104;
      uint64_t v51 = v49;
      uint64_t v3 = v48;
      ((void (*)(char *, uint64_t))*v104)(v51, v48);

      if (v24) {
        break;
      }
      ++v43;
      if (v11 == v42) {
        goto LABEL_29;
      }
    }
    unint64_t v7 = v98;
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease_n();
    if (v101 == v97)
    {
      unint64_t v13 = v104;
      uint64_t v24 = v91;
      goto LABEL_36;
    }
    uint64_t v53 = v104;
    uint64_t v24 = v91;
    if (v99)
    {
      id v54 = (id)MEMORY[0x2533AB3A0]();
      goto LABEL_46;
    }
    if ((v101 & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_77:
      __break(1u);
      goto LABEL_78;
    }
    if (v101 >= *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_77;
    }
    id v54 = *(id *)(v90 + 8 * v101);
LABEL_46:
    unint64_t v55 = v54;
    id v56 = objc_msgSend(v54, sel_characteristics);
    unint64_t v57 = sub_251F35AC0();

    unint64_t v7 = (unint64_t)&v70;
    MEMORY[0x270FA5388](v58);
    uint64_t v59 = v92;
    *(&v70 - 2) = (uint64_t)v92;
    uint64_t v60 = v73;
    unint64_t v61 = sub_251A95D30(sub_251AA0080, (uint64_t)(&v70 - 4), v57);
    uint64_t v73 = v60;
    swift_bridgeObjectRelease();
    unint64_t v62 = v59;
    uint64_t v3 = v48;
    unint64_t v13 = v53;
    unint64_t v2 = (unint64_t)v50;
    v50(v62, v48);

    if (!v61) {
      goto LABEL_82;
    }
    swift_bridgeObjectRelease();
    v50(v105, v48);
    swift_bridgeObjectRelease();

    unint64_t v52 = v96;
    if (v96 != v84) {
      break;
    }
LABEL_51:
    ((void (*)(uint64_t, uint64_t))v2)(v77, v3);
    swift_bridgeObjectRelease();
    ((void (*)(char *, uint64_t))v2)(v89, v3);
    swift_bridgeObjectRelease();

    unint64_t v12 = v81 + 1;
    if (__OFADD__(v81, 1))
    {
      __break(1u);
LABEL_75:
      swift_bridgeObjectRetain();
      uint64_t v10 = sub_251F366C0();
      swift_bridgeObjectRelease();
      goto LABEL_3;
    }
    if (v12 == v74) {
      goto LABEL_56;
    }
  }
LABEL_59:
  if (!v85) {
    goto LABEL_62;
  }
  id v63 = (id)MEMORY[0x2533AB3A0]();
LABEL_65:
  uint64_t v64 = v63;
  id v106 = v63;
  uint64_t v65 = v77;
  sub_251A9B27C(&v106, v77, &v107);
  ((void (*)(uint64_t, uint64_t))v2)(v65, v3);

  unint64_t v66 = v107;
  if (!v107) {
    goto LABEL_83;
  }
  swift_bridgeObjectRelease();
  ((void (*)(char *, uint64_t))v2)(v89, v3);
  swift_bridgeObjectRelease();

  if (v81 == v74)
  {
LABEL_56:
    ((void (*)(char *, uint64_t))v2)(v71, v3);
    goto LABEL_57;
  }
  if (v75)
  {
    id v67 = (id)MEMORY[0x2533AB3A0]();
    goto LABEL_72;
  }
  if ((v81 & 0x8000000000000000) != 0) {
    goto LABEL_80;
  }
  if (v81 >= *(void *)((v82 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_81;
  }
  id v67 = *(id *)(v72 + 8 * v81);
LABEL_72:
  unint64_t v68 = v67;
  id v106 = v67;
  unint64_t v69 = v71;
  sub_251A9AA20(&v106, &v107);
  ((void (*)(char *, uint64_t))v2)(v69, v3);

  if (v107)
  {
LABEL_57:
    swift_bridgeObjectRelease();
    ((void (*)(char *, uint64_t))v2)(v76, v3);
    return;
  }
LABEL_84:
  __break(1u);
}

void sub_251A9AA20(id *a1@<X0>, void *a2@<X8>)
{
  uint64_t v53 = a2;
  id v2 = objc_msgSend(*a1, sel_accessories);
  sub_251A1A568(0, (unint64_t *)&qword_26B21EAF8);
  unint64_t v3 = sub_251F35AC0();

  uint64_t v4 = sub_251F34DA0();
  uint64_t v5 = *(void *)(*(void *)(v4 - 8) + 64);
  MEMORY[0x270FA5388](v4);
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  unint64_t v76 = (void (**)(char *, uint64_t))v7;
  id v8 = (void (*)(char *, uint64_t))(v7 + 16);
  uint64_t v9 = *(uint64_t (**)(void))(v7 + 16);
  id v54 = (char *)&v52 - v6;
  uint64_t v10 = v9();
  uint64_t v74 = v5;
  MEMORY[0x270FA5388](v10);
  unint64_t v61 = (char *)&v52 - v6;
  uint64_t v59 = v8;
  uint64_t v58 = v9;
  v9();
  unint64_t v60 = v3;
  if (v3 >> 62) {
    goto LABEL_50;
  }
  uint64_t v11 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v11)
  {
LABEL_51:
    unint64_t v21 = v76[1];
LABEL_52:
    v21(v54, v4);
    uint64_t v51 = 0;
LABEL_53:
    swift_bridgeObjectRelease();
    *uint64_t v53 = v51;
    v21(v61, v4);
    return;
  }
LABEL_3:
  unint64_t v12 = 0;
  unint64_t v57 = v3 & 0xC000000000000001;
  unint64_t v55 = v3 + 32;
  ++v76;
  uint64_t v56 = v11;
  while (1)
  {
    unint64_t v68 = v12;
    if (v57)
    {
      unint64_t v13 = v12;
      swift_bridgeObjectRetain();
      id v14 = (id)MEMORY[0x2533AB3A0](v13, v3);
    }
    else
    {
      id v15 = *(void **)(v55 + 8 * v12);
      swift_bridgeObjectRetain();
      id v14 = v15;
    }
    id v67 = v14;
    id v16 = objc_msgSend(v14, sel_services);
    sub_251A1A568(0, (unint64_t *)&qword_26B21F180);
    unint64_t v17 = sub_251F35AC0();

    unint64_t v66 = &v52;
    uint64_t v18 = v74;
    MEMORY[0x270FA5388](v19);
    unint64_t v20 = (v18 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v64 = (char *)&v52 - v20;
    unint64_t v21 = v59;
    uint64_t v22 = (void (*)(void))v58;
    uint64_t v23 = v58();
    uint64_t v65 = &v52;
    MEMORY[0x270FA5388](v23);
    uint64_t v77 = (char *)&v52 - v20;
    v22();
    if (!(v17 >> 62))
    {
      uint64_t v24 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v24) {
        break;
      }
      goto LABEL_28;
    }
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_251F366C0();
    swift_bridgeObjectRelease();
    if (v24) {
      break;
    }
LABEL_28:
    unint64_t v21 = *v76;
    (*v76)(v64, v4);
    swift_bridgeObjectRelease();
    v21(v77, v4);
    unint64_t v3 = v60;
    swift_bridgeObjectRelease();

    unint64_t v12 = v68 + 1;
    if (__OFADD__(v68, 1)) {
      goto LABEL_49;
    }
    if (v12 == v56) {
      goto LABEL_52;
    }
  }
  unint64_t v25 = 0;
  unint64_t v70 = v17;
  unint64_t v71 = v17 & 0xC000000000000001;
  unint64_t v62 = v17 + 32;
  uint64_t v69 = v24;
  while (1)
  {
    unint64_t v73 = v25;
    if (v71)
    {
      swift_bridgeObjectRetain();
      id v26 = (id)MEMORY[0x2533AB3A0](v25, v17);
    }
    else
    {
      unint64_t v27 = *(void **)(v62 + 8 * v25);
      swift_bridgeObjectRetain();
      id v26 = v27;
    }
    id v72 = v26;
    id v28 = objc_msgSend(v26, sel_characteristics);
    uint64_t v63 = sub_251A1A568(0, (unint64_t *)&qword_26B21F170);
    unint64_t v29 = sub_251F35AC0();

    if (v29 >> 62) {
      break;
    }
    uint64_t v30 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v30) {
      goto LABEL_15;
    }
LABEL_22:
    swift_bridgeObjectRelease_n();
    unint64_t v17 = v70;
    swift_bridgeObjectRelease();

    unint64_t v25 = v73 + 1;
    if (__OFADD__(v73, 1))
    {
      __break(1u);
LABEL_49:
      __break(1u);
LABEL_50:
      swift_bridgeObjectRetain();
      unint64_t v3 = v60;
      uint64_t v11 = sub_251F366C0();
      swift_bridgeObjectRelease();
      if (!v11) {
        goto LABEL_51;
      }
      goto LABEL_3;
    }
    if (v25 == v69) {
      goto LABEL_28;
    }
  }
  swift_bridgeObjectRetain_n();
  uint64_t v30 = sub_251F366C0();
  swift_bridgeObjectRelease();
  if (!v30) {
    goto LABEL_22;
  }
LABEL_15:
  unint64_t v75 = v29 & 0xC000000000000001;
  uint64_t v31 = 4;
  while (1)
  {
    if (v75) {
      unint64_t v32 = MEMORY[0x2533AB3A0](v31 - 4, v29);
    }
    else {
      unint64_t v32 = (unint64_t)*(id *)(v29 + 8 * v31);
    }
    unint64_t v33 = (void *)v32;
    uint64_t v34 = v31 - 3;
    if (__OFADD__(v31 - 4, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    id v35 = objc_msgSend((id)v32, sel_uniqueIdentifier);
    MEMORY[0x270FA5388](v35);
    uint64_t v37 = v4;
    uint64_t v38 = (char *)&v52 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_251F34D80();

    LOBYTE(v35) = sub_251F34D70();
    unint64_t v21 = *v76;
    id v39 = v38;
    uint64_t v4 = v37;
    (*v76)(v39, v37);

    if (v35) {
      break;
    }
    ++v31;
    if (v34 == v30) {
      goto LABEL_22;
    }
  }
  uint64_t v31 = v70;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease_n();
  unint64_t v32 = v73;
  if (v73 == v69) {
    goto LABEL_28;
  }
  if (v71)
  {
    id v40 = (id)MEMORY[0x2533AB3A0]();
    goto LABEL_39;
  }
LABEL_36:
  if ((v32 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_55;
  }
  if (v32 >= *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  id v40 = *(id *)(v62 + 8 * v32);
LABEL_39:
  unint64_t v41 = v40;
  id v42 = objc_msgSend(v40, sel_characteristics);
  unint64_t v43 = sub_251F35AC0();

  MEMORY[0x270FA5388](v44);
  uint64_t v45 = v64;
  *(&v52 - 2) = (uint64_t)v64;
  id v46 = sub_251A95D30(sub_251AA0080, (uint64_t)(&v52 - 4), v43);
  swift_bridgeObjectRelease();
  v21(v45, v4);

  if (!v46)
  {
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  swift_bridgeObjectRelease();
  v21(v77, v4);
  unint64_t v47 = v60;
  swift_bridgeObjectRelease();

  if (v68 == v56) {
    goto LABEL_52;
  }
  if (v57)
  {
    id v48 = (id)MEMORY[0x2533AB3A0]();
    goto LABEL_46;
  }
  if ((v68 & 0x8000000000000000) != 0) {
    goto LABEL_56;
  }
  if (v68 >= *(void *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  id v48 = *(id *)(v55 + 8 * v68);
LABEL_46:
  uint64_t v49 = v48;
  id v78 = v48;
  uint64_t v50 = (uint64_t)v54;
  sub_251A9B27C(&v78, (uint64_t)v54, v79);
  v21((char *)v50, v4);

  uint64_t v51 = v79[0];
  if (v79[0]) {
    goto LABEL_53;
  }
LABEL_59:
  __break(1u);
}

void sub_251A9B27C(id *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  id v5 = objc_msgSend(*a1, sel_services);
  sub_251A1A568(0, (unint64_t *)&qword_26B21F180);
  unint64_t v6 = sub_251F35AC0();

  uint64_t v7 = sub_251F34DA0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x270FA5388](v7);
  uint64_t v43 = v8;
  uint64_t v10 = *(void (**)(void))(v8 + 16);
  uint64_t v11 = ((uint64_t (*)(char *, uint64_t, uint64_t))v10)((char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v7);
  uint64_t v50 = v9;
  MEMORY[0x270FA5388](v11);
  uint64_t v12 = v7;
  uint64_t v52 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10();
  id v40 = a3;
  unint64_t v41 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v6 >> 62)
  {
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_251F366C0();
    swift_bridgeObjectRelease();
    if (v13) {
      goto LABEL_3;
    }
LABEL_22:
    id v28 = *(void (**)(char *, uint64_t))(v43 + 8);
    v28(v41, v12);
    uint64_t v31 = 0;
LABEL_29:
    swift_bridgeObjectRelease();
    *id v40 = v31;
    v28(v52, v12);
    return;
  }
  uint64_t v13 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v13) {
    goto LABEL_22;
  }
LABEL_3:
  unint64_t v14 = 0;
  unint64_t v45 = v6;
  unint64_t v46 = v6 & 0xC000000000000001;
  uint64_t v49 = (void (**)(char *, uint64_t))(v43 + 8);
  uint64_t v38 = (v43 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  unint64_t v39 = v6 + 32;
  uint64_t v44 = v13;
  while (1)
  {
    if (v46)
    {
      swift_bridgeObjectRetain();
      id v15 = (id)MEMORY[0x2533AB3A0](v14, v6);
    }
    else
    {
      id v16 = *(void **)(v39 + 8 * v14);
      swift_bridgeObjectRetain();
      id v15 = v16;
    }
    id v47 = v15;
    id v17 = objc_msgSend(v15, sel_characteristics, v38);
    uint64_t v42 = sub_251A1A568(0, (unint64_t *)&qword_26B21F170);
    unint64_t v18 = sub_251F35AC0();

    unint64_t v48 = v14;
    if (v18 >> 62) {
      break;
    }
    uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v19) {
      goto LABEL_9;
    }
LABEL_16:
    swift_bridgeObjectRelease_n();
    unint64_t v6 = v45;
    swift_bridgeObjectRelease();

    unint64_t v14 = v48 + 1;
    if (__OFADD__(v48, 1))
    {
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
    if (v14 == v44) {
      goto LABEL_22;
    }
  }
  swift_bridgeObjectRetain_n();
  uint64_t v19 = sub_251F366C0();
  swift_bridgeObjectRelease();
  if (!v19) {
    goto LABEL_16;
  }
LABEL_9:
  unint64_t v51 = v18 & 0xC000000000000001;
  uint64_t v20 = 4;
  while (1)
  {
    if (v51) {
      id v21 = (id)MEMORY[0x2533AB3A0](v20 - 4, v18);
    }
    else {
      id v21 = *(id *)(v18 + 8 * v20);
    }
    uint64_t v22 = v21;
    uint64_t v23 = v20 - 3;
    if (__OFADD__(v20 - 4, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    id v24 = objc_msgSend(v21, sel_uniqueIdentifier);
    unint64_t v6 = (unint64_t)&v38;
    MEMORY[0x270FA5388](v24);
    uint64_t v26 = v12;
    unint64_t v27 = (char *)&v38 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_251F34D80();

    LOBYTE(v24) = sub_251F34D70();
    id v28 = *v49;
    unint64_t v29 = v27;
    uint64_t v12 = v26;
    (*v49)(v29, v26);

    if (v24) {
      break;
    }
    ++v20;
    if (v23 == v19) {
      goto LABEL_16;
    }
  }
  unint64_t v30 = v45;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease_n();
  if (v48 == v44) {
    goto LABEL_22;
  }
  if (v46)
  {
    id v32 = (id)MEMORY[0x2533AB3A0]();
LABEL_28:
    unint64_t v33 = v32;
    id v34 = objc_msgSend(v32, sel_characteristics);
    unint64_t v35 = sub_251F35AC0();

    MEMORY[0x270FA5388](v36);
    uint64_t v37 = v41;
    *(&v38 - 2) = (uint64_t)v41;
    uint64_t v31 = sub_251A95D30(sub_251AA0080, (uint64_t)(&v38 - 4), v35);
    swift_bridgeObjectRelease();
    uint64_t v12 = v26;
    v28(v37, v26);

    if (v31) {
      goto LABEL_29;
    }
  }
  else
  {
    if ((v48 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v48 < *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v32 = *(id *)(v39 + 8 * v48);
      goto LABEL_28;
    }
    __break(1u);
  }
  __break(1u);
}

void DataModel.room(for:)(uint64_t a1)
{
  id v4 = objc_msgSend(v1, sel_sortedHomes);
  sub_251A1A568(0, (unint64_t *)&qword_26B21F2D0);
  unint64_t v5 = sub_251F35AC0();

  unint64_t v6 = (uint64_t *)sub_251F34DA0();
  unint64_t v7 = *(v6 - 1);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void (**)(void))(v7 + 16);
  uint64_t v11 = ((uint64_t (*)(char *, uint64_t, uint64_t *))v10)(v9, a1, v6);
  uint64_t v54 = v8;
  MEMORY[0x270FA5388](v11);
  unint64_t v57 = v9;
  v10();
  if (v5 >> 62)
  {
LABEL_39:
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_251F366C0();
    swift_bridgeObjectRelease();
    id v47 = (__objc2_class **)v9;
    if (v12) {
      goto LABEL_3;
    }
LABEL_40:
    unint64_t v27 = *(void (**)(char *, uint64_t *))(v7 + 8);
LABEL_41:
    v27((char *)v47, v6);
    swift_bridgeObjectRelease();
LABEL_42:
    v27(v57, v6);
    return;
  }
  uint64_t v12 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  id v47 = (__objc2_class **)((char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!v12) {
    goto LABEL_40;
  }
LABEL_3:
  unint64_t v13 = 0;
  unint64_t v14 = v5 & 0xC000000000000001;
  unint64_t v46 = v5 + 32;
  unint64_t v55 = (void (**)(char *, uint64_t *))(v7 + 8);
  uint64_t v56 = v6;
  uint64_t v50 = v12;
  unint64_t v51 = v5;
  unint64_t v49 = v5 & 0xC000000000000001;
  while (1)
  {
    unint64_t v52 = v13;
    if (v14)
    {
      swift_bridgeObjectRetain();
      id v15 = (char *)MEMORY[0x2533AB3A0](v13, v5);
    }
    else
    {
      id v16 = *(void **)(v46 + 8 * v13);
      swift_bridgeObjectRetain();
      id v15 = v16;
    }
    id v17 = v15;
    id v18 = objc_msgSend(v15, sel_rooms);
    uint64_t v19 = sub_251A1A568(0, &qword_26B21EB28);
    unint64_t v7 = sub_251F35AC0();

    uint64_t v48 = v19;
    uint64_t v53 = v17;
    if (v7 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v9 = (char *)sub_251F366C0();
      swift_bridgeObjectRelease();
      if (v9)
      {
LABEL_9:
        uint64_t v20 = (__objc2_class **)(v7 & 0xC000000000000001);
        uint64_t v21 = 4;
        while (1)
        {
          uint64_t v2 = v21 - 4;
          id v22 = v20 ? (id)MEMORY[0x2533AB3A0](v21 - 4, v7) : *(id *)(v7 + 8 * v21);
          uint64_t v23 = v22;
          unint64_t v5 = v21 - 3;
          if (__OFADD__(v2, 1)) {
            break;
          }
          id v24 = objc_msgSend(v22, sel_uniqueIdentifier);
          unint64_t v6 = &v45;
          MEMORY[0x270FA5388](v24);
          uint64_t v26 = (char *)&v45 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
          sub_251F34D80();

          uint64_t v2 = sub_251F34D70();
          unint64_t v27 = *v55;
          (*v55)(v26, v56);

          if (v2)
          {
            unint64_t v5 = v51;
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease_n();
            unint64_t v6 = v56;
            goto LABEL_26;
          }
          ++v21;
          if ((char *)v5 == v9) {
            goto LABEL_16;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }
    }
    else
    {
      uint64_t v9 = *(char **)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v9) {
        goto LABEL_9;
      }
    }
LABEL_16:
    swift_bridgeObjectRelease_n();
    uint64_t v20 = &off_26536F000;
    uint64_t v9 = v53;
    id v28 = objc_msgSend(v53, sel_roomForEntireHome);
    id v29 = objc_msgSend(v28, sel_uniqueIdentifier);

    MEMORY[0x270FA5388](v30);
    id v32 = (char *)&v45 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_251F34D80();

    LOBYTE(v29) = sub_251F34D70();
    unint64_t v7 = (unint64_t)v55;
    unint64_t v6 = v56;
    unint64_t v27 = *v55;
    (*v55)(v32, v56);
    if (v29) {
      break;
    }
    unint64_t v5 = v51;
    swift_bridgeObjectRelease();

LABEL_20:
    unint64_t v13 = v52 + 1;
    if (__OFADD__(v52, 1)) {
      goto LABEL_38;
    }
    unint64_t v14 = v49;
    if (v13 == v50) {
      goto LABEL_41;
    }
  }
  id v33 = objc_msgSend(v9, sel_roomForEntireHome);

  unint64_t v5 = v51;
  swift_bridgeObjectRelease();

  if (!v33) {
    goto LABEL_20;
  }
LABEL_26:
  if (v52 == v50) {
    goto LABEL_41;
  }
  if (v49)
  {
    id v34 = (id)MEMORY[0x2533AB3A0]();
    goto LABEL_32;
  }
  if ((v52 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_44;
  }
  if (v52 >= *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_44:
    __break(1u);
LABEL_45:
    v27((char *)v20, v6);

    goto LABEL_46;
  }
  id v34 = *(id *)(v46 + 8 * v52);
LABEL_32:
  uint64_t v2 = (uint64_t)v34;
  id v35 = objc_msgSend(v34, sel_rooms);
  unint64_t v36 = sub_251F35AC0();

  MEMORY[0x270FA5388](v37);
  uint64_t v20 = v47;
  *(&v45 - 2) = (uint64_t)v47;
  uint64_t v38 = sub_251A95D30(sub_251AA0080, (uint64_t)(&v45 - 4), v36);
  swift_bridgeObjectRelease();
  if (v38)
  {
    v27((char *)v20, v6);
    swift_bridgeObjectRelease();

    goto LABEL_42;
  }
  id v39 = objc_msgSend((id)v2, sel_roomForEntireHome);
  id v40 = objc_msgSend(v39, sel_uniqueIdentifier);

  MEMORY[0x270FA5388](v41);
  uint64_t v43 = (char *)&v45 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34D80();

  LOBYTE(v40) = sub_251F34D70();
  v27(v43, v6);
  if ((v40 & 1) == 0) {
    goto LABEL_45;
  }
  id v44 = objc_msgSend((id)v2, sel_roomForEntireHome);
  v27((char *)v20, v6);

  if (v44)
  {
    swift_bridgeObjectRelease();
    goto LABEL_42;
  }
LABEL_46:
  __break(1u);
}

void DataModel.service(for:)()
{
  id v2 = objc_msgSend(v0, sel_sortedHomes);
  sub_251A1A568(0, (unint64_t *)&qword_26B21F2D0);
  unint64_t v3 = sub_251F35AC0();

  uint64_t v4 = sub_251F34DA0();
  uint64_t v5 = *(void *)(*(void *)(v4 - 8) + 64);
  MEMORY[0x270FA5388](v4);
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  id v72 = (void (**)(char *, uint64_t))v7;
  uint64_t v8 = v7 + 16;
  uint64_t v9 = *(uint64_t (**)(void))(v7 + 16);
  uint64_t v50 = (char *)&v50 - v6;
  uint64_t v10 = v9();
  uint64_t v70 = v5;
  MEMORY[0x270FA5388](v10);
  unint64_t v57 = (char *)&v50 - v6;
  uint64_t v55 = v8;
  uint64_t v54 = v9;
  v9();
  unint64_t v56 = v3;
  if (v3 >> 62) {
    goto LABEL_50;
  }
  uint64_t v11 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v11)
  {
LABEL_51:
    id v1 = v72[1];
LABEL_52:
    v1(v50, v4);
LABEL_53:
    swift_bridgeObjectRelease();
    v1(v57, v4);
    return;
  }
LABEL_3:
  unint64_t v12 = 0;
  unint64_t v53 = v3 & 0xC000000000000001;
  unint64_t v51 = v3 + 32;
  ++v72;
  uint64_t v52 = v11;
  while (1)
  {
    unint64_t v64 = v12;
    if (v53)
    {
      unint64_t v13 = v12;
      swift_bridgeObjectRetain();
      id v14 = (id)MEMORY[0x2533AB3A0](v13, v3);
    }
    else
    {
      id v15 = *(void **)(v51 + 8 * v12);
      swift_bridgeObjectRetain();
      id v14 = v15;
    }
    id v63 = v14;
    id v16 = objc_msgSend(v14, sel_accessories);
    sub_251A1A568(0, (unint64_t *)&qword_26B21EAF8);
    unint64_t v17 = sub_251F35AC0();

    unint64_t v62 = (uint64_t *)&v50;
    uint64_t v18 = v70;
    MEMORY[0x270FA5388](v19);
    unint64_t v20 = (v18 + 15) & 0xFFFFFFFFFFFFFFF0;
    unint64_t v60 = (char *)&v50 - v20;
    uint64_t v21 = (void (*)(void))v54;
    uint64_t v22 = v54();
    unint64_t v61 = (uint64_t *)&v50;
    MEMORY[0x270FA5388](v22);
    unint64_t v73 = (char *)&v50 - v20;
    v21();
    if (!(v17 >> 62))
    {
      uint64_t v23 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v23) {
        break;
      }
      goto LABEL_28;
    }
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_251F366C0();
    swift_bridgeObjectRelease();
    if (v23) {
      break;
    }
LABEL_28:
    id v1 = *v72;
    (*v72)(v60, v4);
    swift_bridgeObjectRelease();
    v1(v73, v4);
    unint64_t v3 = v56;
    swift_bridgeObjectRelease();

    unint64_t v12 = v64 + 1;
    if (__OFADD__(v64, 1)) {
      goto LABEL_49;
    }
    if (v12 == v52) {
      goto LABEL_52;
    }
  }
  unint64_t v24 = 0;
  unint64_t v66 = v17;
  unint64_t v67 = v17 & 0xC000000000000001;
  unint64_t v58 = v17 + 32;
  uint64_t v65 = v23;
  while (1)
  {
    if (v67)
    {
      swift_bridgeObjectRetain();
      id v25 = (id)MEMORY[0x2533AB3A0](v24, v17);
    }
    else
    {
      uint64_t v26 = *(void **)(v58 + 8 * v24);
      swift_bridgeObjectRetain();
      id v25 = v26;
    }
    id v68 = v25;
    id v27 = objc_msgSend(v25, sel_services);
    uint64_t v28 = sub_251A1A568(0, (unint64_t *)&qword_26B21F180);
    unint64_t v29 = sub_251F35AC0();

    unint64_t v69 = v24;
    uint64_t v59 = v28;
    if (v29 >> 62) {
      break;
    }
    uint64_t v30 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v30) {
      goto LABEL_15;
    }
LABEL_22:
    swift_bridgeObjectRelease_n();
    unint64_t v17 = v66;
    swift_bridgeObjectRelease();

    unint64_t v24 = v69 + 1;
    if (__OFADD__(v69, 1))
    {
      __break(1u);
LABEL_49:
      __break(1u);
LABEL_50:
      swift_bridgeObjectRetain();
      unint64_t v3 = v56;
      uint64_t v11 = sub_251F366C0();
      swift_bridgeObjectRelease();
      if (!v11) {
        goto LABEL_51;
      }
      goto LABEL_3;
    }
    if (v24 == v65) {
      goto LABEL_28;
    }
  }
  swift_bridgeObjectRetain_n();
  uint64_t v30 = sub_251F366C0();
  swift_bridgeObjectRelease();
  if (!v30) {
    goto LABEL_22;
  }
LABEL_15:
  unint64_t v71 = v29 & 0xC000000000000001;
  uint64_t v31 = 4;
  while (1)
  {
    if (v71) {
      unint64_t v32 = MEMORY[0x2533AB3A0](v31 - 4, v29);
    }
    else {
      unint64_t v32 = (unint64_t)*(id *)(v29 + 8 * v31);
    }
    id v33 = (void *)v32;
    uint64_t v34 = v31 - 3;
    if (__OFADD__(v31 - 4, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    id v35 = objc_msgSend((id)v32, sel_uniqueIdentifier);
    MEMORY[0x270FA5388](v35);
    uint64_t v37 = v4;
    uint64_t v38 = (char *)&v50 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_251F34D80();

    LOBYTE(v35) = sub_251F34D70();
    id v1 = *v72;
    id v39 = v38;
    uint64_t v4 = v37;
    (*v72)(v39, v37);

    if (v35) {
      break;
    }
    ++v31;
    if (v34 == v30) {
      goto LABEL_22;
    }
  }
  uint64_t v31 = v66;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease_n();
  unint64_t v32 = v69;
  if (v69 == v65) {
    goto LABEL_28;
  }
  if (v67)
  {
    id v40 = (id)MEMORY[0x2533AB3A0]();
    goto LABEL_39;
  }
LABEL_36:
  if ((v32 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_55;
  }
  if (v32 >= *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
    goto LABEL_57;
  }
  id v40 = *(id *)(v58 + 8 * v32);
LABEL_39:
  uint64_t v41 = v40;
  id v42 = objc_msgSend(v40, sel_services);
  unint64_t v43 = sub_251F35AC0();

  MEMORY[0x270FA5388](v44);
  uint64_t v45 = v60;
  *(&v50 - 2) = v60;
  unint64_t v46 = sub_251A95D30(sub_251AA0080, (uint64_t)(&v50 - 4), v43);
  swift_bridgeObjectRelease();
  v1(v45, v4);

  if (!v46)
  {
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  swift_bridgeObjectRelease();
  v1(v73, v4);
  swift_bridgeObjectRelease();

  if (v64 == v52) {
    goto LABEL_52;
  }
  if (v53)
  {
    id v47 = (id)MEMORY[0x2533AB3A0]();
    goto LABEL_46;
  }
  if ((v64 & 0x8000000000000000) != 0) {
    goto LABEL_56;
  }
  if (v64 >= *(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  id v47 = *(id *)(v51 + 8 * v64);
LABEL_46:
  uint64_t v48 = v47;
  id v74 = v47;
  uint64_t v49 = (uint64_t)v50;
  sub_251A9C738(&v74, (uint64_t)v50, v75);
  v1((char *)v49, v4);

  if (v75[0]) {
    goto LABEL_53;
  }
LABEL_59:
  __break(1u);
}

void sub_251A9C738(id *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  id v5 = objc_msgSend(*a1, sel_accessories);
  sub_251A1A568(0, (unint64_t *)&qword_26B21EAF8);
  unint64_t v6 = sub_251F35AC0();

  uint64_t v7 = sub_251F34DA0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x270FA5388](v7);
  uint64_t v43 = v8;
  uint64_t v10 = *(void (**)(void))(v8 + 16);
  uint64_t v11 = ((uint64_t (*)(char *, uint64_t, uint64_t))v10)((char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v7);
  uint64_t v50 = v9;
  MEMORY[0x270FA5388](v11);
  uint64_t v12 = v7;
  uint64_t v52 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10();
  id v40 = a3;
  uint64_t v41 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v6 >> 62)
  {
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_251F366C0();
    swift_bridgeObjectRelease();
    if (v13) {
      goto LABEL_3;
    }
LABEL_22:
    uint64_t v28 = *(void (**)(char *, uint64_t))(v43 + 8);
    v28(v41, v12);
    uint64_t v31 = 0;
LABEL_29:
    swift_bridgeObjectRelease();
    *id v40 = v31;
    v28(v52, v12);
    return;
  }
  uint64_t v13 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v13) {
    goto LABEL_22;
  }
LABEL_3:
  unint64_t v14 = 0;
  unint64_t v45 = v6;
  unint64_t v46 = v6 & 0xC000000000000001;
  uint64_t v49 = (void (**)(char *, uint64_t))(v43 + 8);
  uint64_t v38 = (v43 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  unint64_t v39 = v6 + 32;
  uint64_t v44 = v13;
  while (1)
  {
    if (v46)
    {
      swift_bridgeObjectRetain();
      id v15 = (id)MEMORY[0x2533AB3A0](v14, v6);
    }
    else
    {
      id v16 = *(void **)(v39 + 8 * v14);
      swift_bridgeObjectRetain();
      id v15 = v16;
    }
    id v47 = v15;
    id v17 = objc_msgSend(v15, sel_services, v38);
    uint64_t v42 = sub_251A1A568(0, (unint64_t *)&qword_26B21F180);
    unint64_t v18 = sub_251F35AC0();

    unint64_t v48 = v14;
    if (v18 >> 62) {
      break;
    }
    uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v19) {
      goto LABEL_9;
    }
LABEL_16:
    swift_bridgeObjectRelease_n();
    unint64_t v6 = v45;
    swift_bridgeObjectRelease();

    unint64_t v14 = v48 + 1;
    if (__OFADD__(v48, 1))
    {
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
    if (v14 == v44) {
      goto LABEL_22;
    }
  }
  swift_bridgeObjectRetain_n();
  uint64_t v19 = sub_251F366C0();
  swift_bridgeObjectRelease();
  if (!v19) {
    goto LABEL_16;
  }
LABEL_9:
  unint64_t v51 = v18 & 0xC000000000000001;
  uint64_t v20 = 4;
  while (1)
  {
    if (v51) {
      id v21 = (id)MEMORY[0x2533AB3A0](v20 - 4, v18);
    }
    else {
      id v21 = *(id *)(v18 + 8 * v20);
    }
    uint64_t v22 = v21;
    uint64_t v23 = v20 - 3;
    if (__OFADD__(v20 - 4, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    id v24 = objc_msgSend(v21, sel_uniqueIdentifier);
    unint64_t v6 = (unint64_t)&v38;
    MEMORY[0x270FA5388](v24);
    uint64_t v26 = v12;
    id v27 = (char *)&v38 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_251F34D80();

    LOBYTE(v24) = sub_251F34D70();
    uint64_t v28 = *v49;
    unint64_t v29 = v27;
    uint64_t v12 = v26;
    (*v49)(v29, v26);

    if (v24) {
      break;
    }
    ++v20;
    if (v23 == v19) {
      goto LABEL_16;
    }
  }
  unint64_t v30 = v45;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease_n();
  if (v48 == v44) {
    goto LABEL_22;
  }
  if (v46)
  {
    id v32 = (id)MEMORY[0x2533AB3A0]();
LABEL_28:
    id v33 = v32;
    id v34 = objc_msgSend(v32, sel_services);
    unint64_t v35 = sub_251F35AC0();

    MEMORY[0x270FA5388](v36);
    uint64_t v37 = v41;
    *(&v38 - 2) = (uint64_t)v41;
    uint64_t v31 = sub_251A95D30(sub_251AA0080, (uint64_t)(&v38 - 4), v35);
    swift_bridgeObjectRelease();
    uint64_t v12 = v26;
    v28(v37, v26);

    if (v31) {
      goto LABEL_29;
    }
  }
  else
  {
    if ((v48 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v48 < *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v32 = *(id *)(v39 + 8 * v48);
      goto LABEL_28;
    }
    __break(1u);
  }
  __break(1u);
}

void DataModel.serviceGroup(for:)(uint64_t a1)
{
}

void DataModel.mediaSystem(for:)(uint64_t a1)
{
}

void DataModel.user(for:)(uint64_t a1)
{
  id v2 = v1;
  id v4 = objc_msgSend(v2, sel_sortedHomes);
  sub_251A1A568(0, (unint64_t *)&qword_26B21F2D0);
  unint64_t v5 = sub_251F35AC0();

  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6);
  uint64_t v37 = v7;
  uint64_t v9 = *(void (**)(void))(v7 + 16);
  uint64_t v10 = ((uint64_t (*)(char *, uint64_t, uint64_t))v9)((char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  uint64_t v43 = v8;
  MEMORY[0x270FA5388](v10);
  uint64_t v11 = v6;
  unint64_t v46 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9();
  uint64_t v36 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v5 >> 62)
  {
LABEL_34:
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_251F366C0();
    swift_bridgeObjectRelease();
    if (v12) {
      goto LABEL_3;
    }
LABEL_24:
    unint64_t v29 = *(void (**)(char *, uint64_t))(v37 + 8);
    v29(v36, v11);
LABEL_31:
    swift_bridgeObjectRelease();
    v29(v46, v11);
    return;
  }
  uint64_t v12 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v12) {
    goto LABEL_24;
  }
LABEL_3:
  unint64_t v13 = 0;
  unint64_t v39 = v5;
  unint64_t v40 = v5 & 0xC000000000000001;
  unint64_t v35 = v5 + 32;
  uint64_t v44 = (void (**)(char *, uint64_t))(v37 + 8);
  uint64_t v45 = v11;
  uint64_t v38 = v12;
  while (1)
  {
    unint64_t v42 = v13;
    if (v40)
    {
      swift_bridgeObjectRetain();
      id v14 = (id)MEMORY[0x2533AB3A0](v13, v5);
    }
    else
    {
      id v15 = *(void **)(v35 + 8 * v13);
      swift_bridgeObjectRetain();
      id v14 = v15;
      uint64_t v11 = v45;
    }
    id v16 = v14;
    id v17 = objc_msgSend(v14, sel_users, v35);
    sub_251A1A568(0, (unint64_t *)&qword_26B21EB30);
    uint64_t v18 = sub_251F35AC0();

    id v19 = objc_msgSend(v16, sel_currentUser);
    uint64_t v48 = v18;
    swift_bridgeObjectRetain();
    id v20 = v19;
    MEMORY[0x2533AA9D0]();
    if (*(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_251F35B10();
    }
    sub_251F35B70();
    sub_251F35AE0();
    unint64_t v21 = v48;
    swift_bridgeObjectRelease();

    id v41 = v16;
    if (v21 >> 62) {
      break;
    }
    uint64_t v22 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v22) {
      goto LABEL_11;
    }
LABEL_18:
    swift_bridgeObjectRelease_n();
    unint64_t v5 = v39;
    swift_bridgeObjectRelease();

    unint64_t v13 = v42 + 1;
    if (__OFADD__(v42, 1))
    {
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    if (v13 == v38) {
      goto LABEL_24;
    }
  }
  swift_bridgeObjectRetain_n();
  uint64_t v22 = sub_251F366C0();
  swift_bridgeObjectRelease();
  if (!v22) {
    goto LABEL_18;
  }
LABEL_11:
  uint64_t v23 = 4;
  while (1)
  {
    if ((v21 & 0xC000000000000001) != 0) {
      id v24 = (id)MEMORY[0x2533AB3A0](v23 - 4, v21);
    }
    else {
      id v24 = *(id *)(v21 + 8 * v23);
    }
    unint64_t v5 = (unint64_t)v24;
    uint64_t v25 = v23 - 3;
    if (__OFADD__(v23 - 4, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    id v26 = objc_msgSend(v24, sel_uniqueIdentifier);
    MEMORY[0x270FA5388](v26);
    uint64_t v28 = (char *)&v35 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_251F34D80();

    LOBYTE(v26) = sub_251F34D70();
    unint64_t v29 = *v44;
    unint64_t v30 = v28;
    uint64_t v11 = v45;
    (*v44)(v30, v45);

    if (v26) {
      break;
    }
    ++v23;
    if (v25 == v22) {
      goto LABEL_18;
    }
  }
  unint64_t v31 = v39;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease_n();
  if (v42 == v38) {
    goto LABEL_24;
  }
  if (v40)
  {
    id v32 = (id)MEMORY[0x2533AB3A0]();
LABEL_30:
    id v33 = v32;
    id v47 = v32;
    uint64_t v34 = (uint64_t)v36;
    sub_251A9D25C(&v47, (uint64_t)v36, &v48);
    v29((char *)v34, v11);

    if (v48) {
      goto LABEL_31;
    }
  }
  else
  {
    if ((v42 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v42 < *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v32 = *(id *)(v35 + 8 * v42);
      goto LABEL_30;
    }
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_251A9D25C@<X0>(id *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  id v5 = *a1;
  id v6 = objc_msgSend(*a1, sel_users);
  sub_251A1A568(0, (unint64_t *)&qword_26B21EB30);
  uint64_t v7 = sub_251F35AC0();

  id v8 = objc_msgSend(v5, sel_currentUser);
  unint64_t v14 = v7;
  swift_bridgeObjectRetain();
  id v9 = v8;
  MEMORY[0x2533AA9D0]();
  if (*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_251F35B10();
  }
  sub_251F35B70();
  sub_251F35AE0();
  swift_bridgeObjectRelease();

  MEMORY[0x270FA5388](v10);
  v13[2] = a2;
  uint64_t v11 = sub_251A95D30(sub_251AA0080, (uint64_t)v13, v14);
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v11;
  return result;
}

void DataModel.resident(for:)(uint64_t a1)
{
}

uint64_t sub_251A9D404(id *a1)
{
  id v1 = objc_msgSend(*a1, sel_uniqueIdentifier);
  uint64_t v2 = sub_251F34DA0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  id v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34D80();

  char v6 = sub_251F34D70();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v6 & 1;
}

id sub_251A9D528(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *))
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  id v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34D80();
  id v10 = a1;
  uint64_t v11 = (void *)a4(v9);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v11;
}

uint64_t DataModel.accessory(with:inHomeWithID:)()
{
  id v1 = (void *)sub_251F34D50();
  id v2 = objc_msgSend(v0, sel_homeFor_, v1);

  if (v2)
  {
    id v3 = objc_msgSend(v2, sel_accessories);
    sub_251A1A568(0, (unint64_t *)&qword_26B21EAF8);
    unint64_t v4 = sub_251F35AC0();

    if (v4 >> 62) {
      goto LABEL_15;
    }
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v5; uint64_t v5 = sub_251F366C0())
    {
      uint64_t v12 = v2;
      uint64_t v6 = 4;
      while (1)
      {
        id v7 = (v4 & 0xC000000000000001) != 0 ? (id)MEMORY[0x2533AB3A0](v6 - 4, v4) : *(id *)(v4 + 8 * v6);
        uint64_t v8 = v7;
        id v2 = (id)(v6 - 3);
        if (__OFADD__(v6 - 4, 1)) {
          break;
        }
        id v9 = objc_msgSend(v7, sel_hdm_matterNodeID);
        if (v9)
        {
          id v10 = v9;
          sub_251F36D80();
        }
        ++v6;
        if (v2 == (id)v5)
        {

          goto LABEL_17;
        }
      }
      __break(1u);
LABEL_15:
      swift_bridgeObjectRetain();
    }

LABEL_17:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t DataModel.matterDevice(with:inHomeWithID:)()
{
  id v1 = (void *)sub_251F34D50();
  id v2 = objc_msgSend(v0, sel_homeFor_, v1);

  if (v2)
  {
    uint64_t v13 = v2;
    id v3 = objc_msgSend(v2, sel_accessories);
    sub_251A1A568(0, (unint64_t *)&qword_26B21EAF8);
    unint64_t v4 = sub_251F35AC0();

    if (v4 >> 62) {
      goto LABEL_13;
    }
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v5; uint64_t v5 = sub_251F366C0())
    {
      uint64_t v6 = 4;
      while (1)
      {
        id v7 = (v4 & 0xC000000000000001) != 0 ? (id)MEMORY[0x2533AB3A0](v6 - 4, v4) : *(id *)(v4 + 8 * v6);
        uint64_t v8 = v7;
        uint64_t v9 = v6 - 3;
        if (__OFADD__(v6 - 4, 1)) {
          break;
        }
        id v10 = objc_msgSend(v7, sel_hdm_matterNodeID);
        if (v10)
        {
          uint64_t v11 = v10;
          sub_251F36D80();
        }
        ++v6;
        if (v9 == v5) {
          goto LABEL_14;
        }
      }
      __break(1u);
LABEL_13:
      swift_bridgeObjectRetain();
    }
LABEL_14:
    swift_bridgeObjectRelease_n();
  }
  return 0;
}

uint64_t sub_251A9DA0C(uint64_t *a1, void (*a2)(void *))
{
  uint64_t v4 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v4;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    sub_251ECE8D4();
  }
  uint64_t v6 = *(void *)(v4 + 16);
  v8[0] = v4 + 32;
  v8[1] = v6;
  a2(v8);
  return sub_251F36500();
}

void sub_251A9DA90(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t v4 = sub_251F36AA0();
  if (v4 >= v3)
  {
    if (v3 < 0) {
      goto LABEL_157;
    }
    if (v3) {
      sub_251A9ED78(0, v3, 1, a1);
    }
    return;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_165;
  }
  uint64_t v138 = v4;
  uint64_t v143 = v3;
  v136 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = (char *)MEMORY[0x263F8EE78];
    uint64_t v152 = MEMORY[0x263F8EE78];
    v146 = (void **)((MEMORY[0x263F8EE78] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 != 1)
    {
      unint64_t v13 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_123:
      if (v13 >= 2)
      {
        uint64_t v126 = *v136;
        do
        {
          unint64_t v127 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_152;
          }
          if (!v126) {
            goto LABEL_164;
          }
          v128 = v8;
          v129 = v8 + 32;
          uint64_t v130 = *(void *)&v8[16 * v127 + 32];
          uint64_t v131 = *(void *)&v8[16 * v13 + 24];
          sub_251A9F0D4((void **)(v126 + 8 * v130), (id *)(v126 + 8 * *(void *)&v129[16 * v13 - 16]), v126 + 8 * v131, v146);
          if (v1) {
            break;
          }
          if (v131 < v130) {
            goto LABEL_153;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            v128 = sub_251ECDC38((uint64_t)v128);
          }
          if (v127 >= *((void *)v128 + 2)) {
            goto LABEL_154;
          }
          v132 = v128;
          v133 = v128 + 32;
          v134 = &v128[16 * v127 + 32];
          *(void *)v134 = v130;
          *((void *)v134 + 1) = v131;
          unint64_t v135 = *((void *)v128 + 2);
          if (v13 > v135) {
            goto LABEL_155;
          }
          uint64_t v8 = v132;
          memmove(&v133[16 * v13 - 16], &v133[16 * v13], 16 * (v135 - v13));
          *((void *)v8 + 2) = v135 - 1;
          unint64_t v13 = v135 - 1;
        }
        while (v135 > 2);
      }
LABEL_134:
      swift_bridgeObjectRelease();
      *(void *)((v152 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_251F35AE0();
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    sub_251A1A568(0, (unint64_t *)&qword_26B21F2D0);
    uint64_t v7 = sub_251F35B50();
    *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) = v6;
    v146 = (void **)((v7 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v152 = v7;
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v137 = *a1 - 8;
  uint64_t v8 = (char *)MEMORY[0x263F8EE78];
  uint64_t v11 = &off_26536F000;
  uint64_t v12 = v143;
  uint64_t v147 = *a1;
  while (1)
  {
    uint64_t v14 = v9++;
    if (v9 >= v12) {
      goto LABEL_50;
    }
    v139 = v8;
    id v15 = *(void **)(v10 + 8 * v14);
    id v16 = *(id *)(v10 + 8 * v9);
    id v17 = v15;
    unsigned int v18 = [v16 (SEL)v11[293]];
    if (v18 == [v17 (SEL)v11[293]])
    {
      uint64_t v148 = v9;
      id v21 = objc_msgSend(v16, sel_name);
      uint64_t v22 = sub_251F356F0();
      uint64_t v24 = v23;

      id v25 = objc_msgSend(v17, sel_name);
      uint64_t v26 = sub_251F356F0();
      uint64_t v28 = v27;

      if (v22 == v26 && v24 == v28) {
        unsigned int v19 = 0;
      }
      else {
        unsigned int v19 = sub_251F36B10();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      uint64_t v20 = v14 + 2;
      uint64_t v11 = &off_26536F000;
      uint64_t v9 = v148;
      if (v14 + 2 < v143)
      {
LABEL_27:
        uint64_t v30 = v20;
        uint64_t v10 = v147;
        unsigned int v144 = v19;
        do
        {
          uint64_t v20 = v30;
          id v32 = *(void **)(v10 + 8 * v9);
          id v33 = *(id *)(v10 + 8 * v30);
          id v34 = v32;
          unsigned int v35 = [v33 (SEL)v11[293]];
          if (v35 == [v34 (SEL)v11[293]])
          {
            uint64_t v149 = v20;
            id v36 = objc_msgSend(v33, sel_name);
            uint64_t v37 = sub_251F356F0();
            uint64_t v39 = v38;

            id v40 = objc_msgSend(v34, sel_name);
            uint64_t v41 = sub_251F356F0();
            uint64_t v43 = v42;

            if (v37 == v41 && v39 == v43)
            {

              swift_bridgeObjectRelease_n();
              uint64_t v11 = &off_26536F000;
              uint64_t v20 = v149;
              unsigned int v19 = v144;
              if (v144)
              {
                uint64_t v8 = v139;
                uint64_t v10 = v147;
                goto LABEL_41;
              }
            }
            else
            {
              char v45 = sub_251F36B10();

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              char v46 = v144 ^ v45;
              unsigned int v19 = v144;
              uint64_t v11 = &off_26536F000;
              uint64_t v20 = v149;
              if (v46) {
                goto LABEL_19;
              }
            }
          }
          else
          {
            unsigned int v31 = [v33 (SEL)v11[293]];

            if ((v19 ^ v31)) {
              goto LABEL_19;
            }
          }
          uint64_t v30 = v20 + 1;
          uint64_t v9 = v20;
          uint64_t v10 = v147;
        }
        while (v20 + 1 < v143);
        ++v20;
        goto LABEL_40;
      }
    }
    else
    {
      unsigned int v19 = [v16 (SEL)v11[293]];

      uint64_t v20 = v14 + 2;
      if (v14 + 2 < v143) {
        goto LABEL_27;
      }
    }
    LOBYTE(v144) = v19;
LABEL_19:
    uint64_t v10 = v147;
LABEL_40:
    uint64_t v9 = v20;
    uint64_t v8 = v139;
    if (v144)
    {
LABEL_41:
      if (v20 < v14) {
        goto LABEL_158;
      }
      if (v14 < v20)
      {
        id v47 = (uint64_t *)(v137 + 8 * v20);
        uint64_t v48 = v20;
        uint64_t v49 = v14;
        uint64_t v50 = (uint64_t *)(v10 + 8 * v14);
        do
        {
          if (v49 != --v48)
          {
            if (!v10) {
              goto LABEL_163;
            }
            uint64_t v51 = *v50;
            uint64_t *v50 = *v47;
            *id v47 = v51;
          }
          ++v49;
          --v47;
          ++v50;
        }
        while (v49 < v48);
      }
      uint64_t v9 = v20;
    }
LABEL_50:
    if (v9 >= v143) {
      goto LABEL_74;
    }
    if (__OFSUB__(v9, v14)) {
      goto LABEL_156;
    }
    if (v9 - v14 >= v138) {
      goto LABEL_74;
    }
    if (__OFADD__(v14, v138)) {
      goto LABEL_159;
    }
    uint64_t v52 = v143;
    if (v14 + v138 < v143) {
      uint64_t v52 = v14 + v138;
    }
    if (v52 < v14) {
      break;
    }
    if (v9 == v52) {
      goto LABEL_74;
    }
    v140 = v8;
    uint64_t v141 = v52;
    uint64_t v53 = v137 + 8 * v9;
    uint64_t v142 = v14;
    while (2)
    {
      uint64_t v54 = *(void **)(v10 + 8 * v9);
      uint64_t v55 = v14;
      uint64_t v145 = v53;
      uint64_t v56 = v53;
      uint64_t v150 = v9;
      while (1)
      {
        unint64_t v57 = *(void **)v56;
        id v58 = v54;
        id v59 = v57;
        LODWORD(v57) = [v58 (SEL)v11[293]];
        if (v57 == [v59 (SEL)v11[293]]) {
          break;
        }
        unsigned __int8 v60 = [v58 (SEL)v11[293]];

        if ((v60 & 1) == 0) {
          goto LABEL_60;
        }
LABEL_70:
        if (!v10) {
          goto LABEL_161;
        }
        unint64_t v71 = *(void **)v56;
        uint64_t v54 = *(void **)(v56 + 8);
        *(void *)uint64_t v56 = v54;
        *(void *)(v56 + 8) = v71;
        v56 -= 8;
        if (v9 == ++v55) {
          goto LABEL_60;
        }
      }
      id v61 = objc_msgSend(v58, sel_name);
      uint64_t v62 = sub_251F356F0();
      uint64_t v64 = v63;

      id v65 = objc_msgSend(v59, sel_name);
      uint64_t v66 = sub_251F356F0();
      uint64_t v68 = v67;

      if (v62 != v66 || v64 != v68)
      {
        char v70 = sub_251F36B10();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v10 = v147;
        uint64_t v9 = v150;
        uint64_t v11 = &off_26536F000;
        if ((v70 & 1) == 0) {
          goto LABEL_60;
        }
        goto LABEL_70;
      }

      swift_bridgeObjectRelease_n();
      uint64_t v10 = v147;
      uint64_t v9 = v150;
      uint64_t v11 = &off_26536F000;
LABEL_60:
      ++v9;
      uint64_t v53 = v145 + 8;
      uint64_t v14 = v142;
      if (v9 != v141) {
        continue;
      }
      break;
    }
    uint64_t v9 = v141;
    uint64_t v8 = v140;
LABEL_74:
    if (v9 < v14) {
      goto LABEL_151;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v8 = sub_251ECD5C4(0, *((void *)v8 + 2) + 1, 1, v8);
    }
    unint64_t v73 = *((void *)v8 + 2);
    unint64_t v72 = *((void *)v8 + 3);
    unint64_t v13 = v73 + 1;
    if (v73 >= v72 >> 1) {
      uint64_t v8 = sub_251ECD5C4((char *)(v72 > 1), v73 + 1, 1, v8);
    }
    *((void *)v8 + 2) = v13;
    id v74 = v8 + 32;
    unint64_t v75 = &v8[16 * v73 + 32];
    *(void *)unint64_t v75 = v14;
    *((void *)v75 + 1) = v9;
    if (v73)
    {
      uint64_t v151 = v9;
      while (1)
      {
        unint64_t v76 = v13 - 1;
        if (v13 >= 4)
        {
          unint64_t v81 = &v74[16 * v13];
          uint64_t v82 = *((void *)v81 - 8);
          uint64_t v83 = *((void *)v81 - 7);
          BOOL v87 = __OFSUB__(v83, v82);
          uint64_t v84 = v83 - v82;
          if (v87) {
            goto LABEL_140;
          }
          uint64_t v86 = *((void *)v81 - 6);
          uint64_t v85 = *((void *)v81 - 5);
          BOOL v87 = __OFSUB__(v85, v86);
          uint64_t v79 = v85 - v86;
          char v80 = v87;
          if (v87) {
            goto LABEL_141;
          }
          unint64_t v88 = v13 - 2;
          uint64_t v89 = &v74[16 * v13 - 32];
          uint64_t v91 = *(void *)v89;
          uint64_t v90 = *((void *)v89 + 1);
          BOOL v87 = __OFSUB__(v90, v91);
          uint64_t v92 = v90 - v91;
          if (v87) {
            goto LABEL_143;
          }
          BOOL v87 = __OFADD__(v79, v92);
          uint64_t v93 = v79 + v92;
          if (v87) {
            goto LABEL_146;
          }
          if (v93 >= v84)
          {
            v111 = &v74[16 * v76];
            uint64_t v113 = *(void *)v111;
            uint64_t v112 = *((void *)v111 + 1);
            BOOL v87 = __OFSUB__(v112, v113);
            uint64_t v114 = v112 - v113;
            if (v87) {
              goto LABEL_150;
            }
            BOOL v104 = v79 < v114;
            goto LABEL_112;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v105 = *((void *)v8 + 4);
            uint64_t v106 = *((void *)v8 + 5);
            BOOL v87 = __OFSUB__(v106, v105);
            uint64_t v98 = v106 - v105;
            char v99 = v87;
            goto LABEL_106;
          }
          uint64_t v78 = *((void *)v8 + 4);
          uint64_t v77 = *((void *)v8 + 5);
          BOOL v87 = __OFSUB__(v77, v78);
          uint64_t v79 = v77 - v78;
          char v80 = v87;
        }
        if (v80) {
          goto LABEL_142;
        }
        unint64_t v88 = v13 - 2;
        uint64_t v94 = &v74[16 * v13 - 32];
        uint64_t v96 = *(void *)v94;
        uint64_t v95 = *((void *)v94 + 1);
        BOOL v97 = __OFSUB__(v95, v96);
        uint64_t v98 = v95 - v96;
        char v99 = v97;
        if (v97) {
          goto LABEL_145;
        }
        id v100 = &v74[16 * v76];
        uint64_t v102 = *(void *)v100;
        uint64_t v101 = *((void *)v100 + 1);
        BOOL v87 = __OFSUB__(v101, v102);
        uint64_t v103 = v101 - v102;
        if (v87) {
          goto LABEL_148;
        }
        if (__OFADD__(v98, v103)) {
          goto LABEL_149;
        }
        if (v98 + v103 >= v79)
        {
          BOOL v104 = v79 < v103;
LABEL_112:
          if (v104) {
            unint64_t v76 = v88;
          }
          goto LABEL_114;
        }
LABEL_106:
        if (v99) {
          goto LABEL_144;
        }
        uint64_t v107 = &v74[16 * v76];
        uint64_t v109 = *(void *)v107;
        uint64_t v108 = *((void *)v107 + 1);
        BOOL v87 = __OFSUB__(v108, v109);
        uint64_t v110 = v108 - v109;
        if (v87) {
          goto LABEL_147;
        }
        if (v110 < v98) {
          goto LABEL_14;
        }
LABEL_114:
        unint64_t v115 = v76 - 1;
        if (v76 - 1 >= v13)
        {
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
          goto LABEL_160;
        }
        if (!v10) {
          goto LABEL_162;
        }
        uint64_t v116 = v8;
        uint64_t v117 = v10;
        uint64_t v118 = &v74[16 * v115];
        uint64_t v119 = *(void *)v118;
        uint64_t v120 = v74;
        unint64_t v121 = v76;
        v122 = &v74[16 * v76];
        uint64_t v123 = *((void *)v122 + 1);
        uint64_t v124 = v117;
        sub_251A9F0D4((void **)(v117 + 8 * *(void *)v118), (id *)(v117 + 8 * *(void *)v122), v117 + 8 * v123, v146);
        if (v1) {
          goto LABEL_134;
        }
        if (v123 < v119) {
          goto LABEL_137;
        }
        if (v121 > *((void *)v116 + 2)) {
          goto LABEL_138;
        }
        *(void *)uint64_t v118 = v119;
        *(void *)&v120[16 * v115 + 8] = v123;
        unint64_t v125 = *((void *)v116 + 2);
        if (v121 >= v125) {
          goto LABEL_139;
        }
        uint64_t v8 = v116;
        unint64_t v13 = v125 - 1;
        memmove(v122, v122 + 16, 16 * (v125 - 1 - v121));
        id v74 = v120;
        *((void *)v116 + 2) = v125 - 1;
        uint64_t v11 = &off_26536F000;
        uint64_t v9 = v151;
        uint64_t v10 = v124;
        if (v125 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_14:
    uint64_t v12 = v143;
    if (v9 >= v143) {
      goto LABEL_123;
    }
  }
LABEL_160:
  __break(1u);
LABEL_161:
  __break(1u);
LABEL_162:
  __break(1u);
LABEL_163:
  __break(1u);
LABEL_164:
  __break(1u);
LABEL_165:
  sub_251F36670();
  __break(1u);
}

uint64_t sub_251A9E4AC(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_251F36AA0();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_150;
    }
    if (v3) {
      return sub_251A9EF50(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_158;
  }
  uint64_t v120 = result;
  uint64_t v117 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = (char *)MEMORY[0x263F8EE78];
    uint64_t v133 = MEMORY[0x263F8EE78];
    v128 = (void **)((MEMORY[0x263F8EE78] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 != 1)
    {
      unint64_t v11 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_116:
      if (v11 >= 2)
      {
        uint64_t v111 = *v117;
        do
        {
          unint64_t v112 = v11 - 2;
          if (v11 < 2) {
            goto LABEL_145;
          }
          if (!v111) {
            goto LABEL_157;
          }
          uint64_t v113 = *(void *)&v8[16 * v112 + 32];
          uint64_t v114 = *(void *)&v8[16 * v11 + 24];
          sub_251A9F5B4((void **)(v111 + 8 * v113), (id *)(v111 + 8 * *(void *)&v8[16 * v11 + 16]), (id *)(v111 + 8 * v114), v128);
          if (v1) {
            break;
          }
          if (v114 < v113) {
            goto LABEL_146;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v8 = sub_251ECDC38((uint64_t)v8);
          }
          if (v112 >= *((void *)v8 + 2)) {
            goto LABEL_147;
          }
          unint64_t v115 = &v8[16 * v112 + 32];
          *(void *)unint64_t v115 = v113;
          *((void *)v115 + 1) = v114;
          unint64_t v116 = *((void *)v8 + 2);
          if (v11 > v116) {
            goto LABEL_148;
          }
          memmove(&v8[16 * v11 + 16], &v8[16 * v11 + 32], 16 * (v116 - v11));
          *((void *)v8 + 2) = v116 - 1;
          unint64_t v11 = v116 - 1;
        }
        while (v116 > 2);
      }
LABEL_127:
      swift_bridgeObjectRelease();
      *(void *)((v133 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_251F35AE0();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    sub_251A1A568(0, (unint64_t *)&qword_26B21F2D0);
    uint64_t v7 = sub_251F35B50();
    *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) = v6;
    v128 = (void **)((v7 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v133 = v7;
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v118 = *a1 + 16;
  uint64_t v119 = *a1 - 8;
  uint64_t v8 = (char *)MEMORY[0x263F8EE78];
  uint64_t v125 = v3;
  uint64_t v129 = *a1;
  while (2)
  {
    uint64_t v12 = v9 + 1;
    uint64_t v124 = v9;
    if (v9 + 1 >= v3) {
      goto LABEL_45;
    }
    unint64_t v121 = v8;
    unint64_t v13 = *(void **)(v10 + 8 * v9);
    id v14 = *(id *)(v10 + 8 * v12);
    id v15 = v13;
    id v16 = objc_msgSend(v14, sel_name);
    uint64_t v17 = sub_251F356F0();
    uint64_t v19 = v18;

    id v20 = objc_msgSend(v15, sel_name);
    uint64_t v21 = sub_251F356F0();
    uint64_t v23 = v22;

    if (v17 == v21 && v19 == v23) {
      int v126 = 0;
    }
    else {
      int v126 = sub_251F36B10();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    uint64_t v12 = v9 + 2;
    uint64_t v3 = v125;
    if (v9 + 2 >= v125) {
      goto LABEL_36;
    }
    id v25 = (id *)(v118 + 8 * v9);
    while (1)
    {
      uint64_t v130 = v12;
      uint64_t v27 = *(v25 - 1);
      id v28 = *v25;
      id v29 = v27;
      id v30 = objc_msgSend(v28, sel_name);
      uint64_t v31 = sub_251F356F0();
      uint64_t v33 = v32;

      id v34 = objc_msgSend(v29, sel_name);
      uint64_t v35 = sub_251F356F0();
      uint64_t v37 = v36;

      if (v31 == v35 && v33 == v37)
      {

        swift_bridgeObjectRelease_n();
        if (v126)
        {
          uint64_t v8 = v121;
          uint64_t v9 = v124;
          uint64_t v3 = v125;
          uint64_t v10 = v129;
          uint64_t v12 = v130;
          goto LABEL_37;
        }
        goto LABEL_25;
      }
      int v26 = sub_251F36B10();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v126 ^ v26)) {
        break;
      }
LABEL_25:
      uint64_t v12 = v130 + 1;
      ++v25;
      uint64_t v3 = v125;
      if (v125 == v130 + 1)
      {
        uint64_t v12 = v125;
        goto LABEL_35;
      }
    }
    uint64_t v3 = v125;
    uint64_t v12 = v130;
LABEL_35:
    uint64_t v9 = v124;
LABEL_36:
    uint64_t v8 = v121;
    uint64_t v10 = v129;
    if (v126)
    {
LABEL_37:
      if (v12 < v9) {
        goto LABEL_151;
      }
      if (v9 < v12)
      {
        uint64_t v39 = (uint64_t *)(v119 + 8 * v12);
        uint64_t v40 = v12;
        uint64_t v41 = v9;
        uint64_t v42 = (uint64_t *)(v10 + 8 * v9);
        do
        {
          if (v41 != --v40)
          {
            if (!v10) {
              goto LABEL_156;
            }
            uint64_t v43 = *v42;
            *uint64_t v42 = *v39;
            *uint64_t v39 = v43;
          }
          ++v41;
          --v39;
          ++v42;
        }
        while (v41 < v40);
      }
    }
LABEL_45:
    if (v12 >= v3) {
      goto LABEL_68;
    }
    if (__OFSUB__(v12, v9)) {
      goto LABEL_149;
    }
    if (v12 - v9 >= v120)
    {
LABEL_68:
      if (v12 < v9) {
        goto LABEL_144;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v8 = sub_251ECD5C4(0, *((void *)v8 + 2) + 1, 1, v8);
      }
      unint64_t v63 = *((void *)v8 + 2);
      unint64_t v62 = *((void *)v8 + 3);
      unint64_t v11 = v63 + 1;
      if (v63 >= v62 >> 1) {
        uint64_t v8 = sub_251ECD5C4((char *)(v62 > 1), v63 + 1, 1, v8);
      }
      *((void *)v8 + 2) = v11;
      uint64_t v64 = v8 + 32;
      id v65 = &v8[16 * v63 + 32];
      *(void *)id v65 = v9;
      *((void *)v65 + 1) = v12;
      uint64_t v132 = v12;
      if (!v63)
      {
        unint64_t v11 = 1;
LABEL_14:
        uint64_t v3 = v125;
        uint64_t v9 = v132;
        if (v132 >= v125) {
          goto LABEL_116;
        }
        continue;
      }
      while (1)
      {
        unint64_t v66 = v11 - 1;
        if (v11 >= 4)
        {
          unint64_t v71 = &v64[16 * v11];
          uint64_t v72 = *((void *)v71 - 8);
          uint64_t v73 = *((void *)v71 - 7);
          BOOL v77 = __OFSUB__(v73, v72);
          uint64_t v74 = v73 - v72;
          if (v77) {
            goto LABEL_133;
          }
          uint64_t v76 = *((void *)v71 - 6);
          uint64_t v75 = *((void *)v71 - 5);
          BOOL v77 = __OFSUB__(v75, v76);
          uint64_t v69 = v75 - v76;
          char v70 = v77;
          if (v77) {
            goto LABEL_134;
          }
          unint64_t v78 = v11 - 2;
          uint64_t v79 = &v64[16 * v11 - 32];
          uint64_t v81 = *(void *)v79;
          uint64_t v80 = *((void *)v79 + 1);
          BOOL v77 = __OFSUB__(v80, v81);
          uint64_t v82 = v80 - v81;
          if (v77) {
            goto LABEL_136;
          }
          BOOL v77 = __OFADD__(v69, v82);
          uint64_t v83 = v69 + v82;
          if (v77) {
            goto LABEL_139;
          }
          if (v83 >= v74)
          {
            uint64_t v101 = &v64[16 * v66];
            uint64_t v103 = *(void *)v101;
            uint64_t v102 = *((void *)v101 + 1);
            BOOL v77 = __OFSUB__(v102, v103);
            uint64_t v104 = v102 - v103;
            if (v77) {
              goto LABEL_143;
            }
            BOOL v94 = v69 < v104;
            goto LABEL_105;
          }
        }
        else
        {
          if (v11 != 3)
          {
            uint64_t v95 = *((void *)v8 + 4);
            uint64_t v96 = *((void *)v8 + 5);
            BOOL v77 = __OFSUB__(v96, v95);
            uint64_t v88 = v96 - v95;
            char v89 = v77;
            goto LABEL_99;
          }
          uint64_t v68 = *((void *)v8 + 4);
          uint64_t v67 = *((void *)v8 + 5);
          BOOL v77 = __OFSUB__(v67, v68);
          uint64_t v69 = v67 - v68;
          char v70 = v77;
        }
        if (v70) {
          goto LABEL_135;
        }
        unint64_t v78 = v11 - 2;
        uint64_t v84 = &v64[16 * v11 - 32];
        uint64_t v86 = *(void *)v84;
        uint64_t v85 = *((void *)v84 + 1);
        BOOL v87 = __OFSUB__(v85, v86);
        uint64_t v88 = v85 - v86;
        char v89 = v87;
        if (v87) {
          goto LABEL_138;
        }
        uint64_t v90 = &v64[16 * v66];
        uint64_t v92 = *(void *)v90;
        uint64_t v91 = *((void *)v90 + 1);
        BOOL v77 = __OFSUB__(v91, v92);
        uint64_t v93 = v91 - v92;
        if (v77) {
          goto LABEL_141;
        }
        if (__OFADD__(v88, v93)) {
          goto LABEL_142;
        }
        if (v88 + v93 >= v69)
        {
          BOOL v94 = v69 < v93;
LABEL_105:
          if (v94) {
            unint64_t v66 = v78;
          }
          goto LABEL_107;
        }
LABEL_99:
        if (v89) {
          goto LABEL_137;
        }
        BOOL v97 = &v64[16 * v66];
        uint64_t v99 = *(void *)v97;
        uint64_t v98 = *((void *)v97 + 1);
        BOOL v77 = __OFSUB__(v98, v99);
        uint64_t v100 = v98 - v99;
        if (v77) {
          goto LABEL_140;
        }
        if (v100 < v88) {
          goto LABEL_14;
        }
LABEL_107:
        unint64_t v105 = v66 - 1;
        if (v66 - 1 >= v11)
        {
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
          goto LABEL_153;
        }
        if (!v10) {
          goto LABEL_155;
        }
        uint64_t v106 = &v64[16 * v105];
        uint64_t v107 = *(void *)v106;
        uint64_t v108 = &v64[16 * v66];
        uint64_t v109 = *((void *)v108 + 1);
        sub_251A9F5B4((void **)(v10 + 8 * *(void *)v106), (id *)(v10 + 8 * *(void *)v108), (id *)(v10 + 8 * v109), v128);
        if (v1) {
          goto LABEL_127;
        }
        if (v109 < v107) {
          goto LABEL_130;
        }
        if (v66 > *((void *)v8 + 2)) {
          goto LABEL_131;
        }
        *(void *)uint64_t v106 = v107;
        *(void *)&v64[16 * v105 + 8] = v109;
        unint64_t v110 = *((void *)v8 + 2);
        if (v66 >= v110) {
          goto LABEL_132;
        }
        unint64_t v11 = v110 - 1;
        memmove(&v64[16 * v66], v108 + 16, 16 * (v110 - 1 - v66));
        *((void *)v8 + 2) = v110 - 1;
        if (v110 <= 2) {
          goto LABEL_14;
        }
      }
    }
    break;
  }
  if (__OFADD__(v9, v120)) {
    goto LABEL_152;
  }
  if (v9 + v120 >= v3) {
    uint64_t v44 = v3;
  }
  else {
    uint64_t v44 = v9 + v120;
  }
  if (v44 >= v9)
  {
    if (v12 != v44)
    {
      v122 = v8;
      uint64_t v123 = v44;
      uint64_t v45 = v119 + 8 * v12;
      do
      {
        id v47 = *(void **)(v10 + 8 * v12);
        uint64_t v127 = v45;
        uint64_t v131 = v12;
        while (1)
        {
          uint64_t v48 = *(void **)v45;
          id v49 = v47;
          id v50 = v48;
          id v51 = objc_msgSend(v49, sel_name);
          uint64_t v52 = sub_251F356F0();
          uint64_t v54 = v53;

          id v55 = objc_msgSend(v50, sel_name);
          uint64_t v56 = sub_251F356F0();
          uint64_t v58 = v57;

          if (v52 == v56 && v54 == v58)
          {

            swift_bridgeObjectRelease_n();
            uint64_t v10 = v129;
            uint64_t v46 = v131;
            goto LABEL_56;
          }
          char v60 = sub_251F36B10();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v10 = v129;
          if ((v60 & 1) == 0) {
            break;
          }
          if (!v129) {
            goto LABEL_154;
          }
          id v61 = *(void **)v45;
          id v47 = *(void **)(v45 + 8);
          *(void *)uint64_t v45 = v47;
          *(void *)(v45 + 8) = v61;
          v45 -= 8;
          ++v9;
          uint64_t v46 = v131;
          if (v131 == v9) {
            goto LABEL_56;
          }
        }
        uint64_t v46 = v131;
LABEL_56:
        uint64_t v12 = v46 + 1;
        uint64_t v45 = v127 + 8;
        uint64_t v9 = v124;
      }
      while (v12 != v123);
      uint64_t v12 = v123;
      uint64_t v8 = v122;
    }
    goto LABEL_68;
  }
LABEL_153:
  __break(1u);
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  uint64_t result = sub_251F36670();
  __break(1u);
  return result;
}

void sub_251A9ED78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v5 = *a4;
    uint64_t v6 = *a4 + 8 * a3 - 8;
    uint64_t v7 = &off_26536F000;
    uint64_t v28 = *a4;
LABEL_6:
    uint64_t v8 = *(void **)(v5 + 8 * v4);
    uint64_t v9 = a1;
    uint64_t v27 = v6;
    uint64_t v29 = v4;
    while (1)
    {
      uint64_t v10 = *(void **)v6;
      id v11 = v8;
      id v12 = v10;
      LODWORD(v10) = [v11 (SEL)v7[293]];
      if (v10 == [v12 (SEL)v7[293]])
      {
        id v14 = objc_msgSend(v11, sel_name);
        uint64_t v15 = sub_251F356F0();
        uint64_t v17 = v16;

        id v18 = objc_msgSend(v12, sel_name);
        uint64_t v19 = sub_251F356F0();
        uint64_t v21 = v20;

        if (v15 == v19 && v17 == v21)
        {

          swift_bridgeObjectRelease_n();
          uint64_t v4 = v29;
          uint64_t v5 = v28;
          uint64_t v7 = &off_26536F000;
LABEL_5:
          ++v4;
          uint64_t v6 = v27 + 8;
          if (v4 == a2) {
            return;
          }
          goto LABEL_6;
        }
        char v23 = sub_251F36B10();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v4 = v29;
        uint64_t v5 = v28;
        uint64_t v7 = &off_26536F000;
        if ((v23 & 1) == 0) {
          goto LABEL_5;
        }
      }
      else
      {
        unsigned __int8 v13 = [v11 (SEL)v7[293]];

        if ((v13 & 1) == 0) {
          goto LABEL_5;
        }
      }
      if (!v5) {
        break;
      }
      uint64_t v24 = *(void **)v6;
      uint64_t v8 = *(void **)(v6 + 8);
      *(void *)uint64_t v6 = v8;
      *(void *)(v6 + 8) = v24;
      v6 -= 8;
      if (v4 == ++v9) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
}

uint64_t sub_251A9EF50(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v23 = result;
  if (a3 != a2)
  {
    uint64_t v25 = *a4;
    uint64_t v4 = *a4 + 8 * a3 - 8;
LABEL_6:
    uint64_t v6 = *(void **)(v25 + 8 * a3);
    uint64_t v7 = v23;
    uint64_t v24 = v4;
    uint64_t v26 = a3;
    while (1)
    {
      uint64_t v8 = *(void **)v4;
      id v9 = v6;
      id v10 = v8;
      id v11 = objc_msgSend(v9, sel_name);
      uint64_t v12 = sub_251F356F0();
      uint64_t v14 = v13;

      id v15 = objc_msgSend(v10, sel_name);
      uint64_t v16 = sub_251F356F0();
      uint64_t v18 = v17;

      if (v12 == v16 && v14 == v18)
      {

        uint64_t result = swift_bridgeObjectRelease_n();
        uint64_t v5 = v26;
LABEL_5:
        a3 = v5 + 1;
        uint64_t v4 = v24 + 8;
        if (a3 == a2) {
          return result;
        }
        goto LABEL_6;
      }
      char v20 = sub_251F36B10();

      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v5 = v26;
      if ((v20 & 1) == 0) {
        goto LABEL_5;
      }
      if (!v25) {
        break;
      }
      uint64_t v21 = *(void **)v4;
      uint64_t v6 = *(void **)(v4 + 8);
      *(void *)uint64_t v4 = v6;
      *(void *)(v4 + 8) = v21;
      v4 -= 8;
      if (v26 == ++v7) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_251A9F0D4(void **__src, id *a2, unint64_t a3, void **__dst)
{
  uint64_t v4 = __dst;
  uint64_t v5 = a2;
  uint64_t v6 = __src;
  int64_t v7 = (char *)a2 - (char *)__src;
  int64_t v8 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v8 = (char *)a2 - (char *)__src;
  }
  uint64_t v9 = v8 >> 3;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v11 = a3 - (void)a2;
  }
  uint64_t v12 = v11 >> 3;
  uint64_t v64 = __src;
  unint64_t v63 = __dst;
  if (v9 >= v11 >> 3)
  {
    if (v10 < -7) {
      goto LABEL_61;
    }
    if (__dst != a2 || &a2[v12] <= __dst) {
      memmove(__dst, a2, 8 * v12);
    }
    uint64_t v32 = &v4[v12];
    unint64_t v62 = v32;
    uint64_t v64 = v5;
    if (v6 >= v5 || v10 < 8)
    {
LABEL_60:
      sub_251ECD7AC(&v64, &v63, &v62);
      return 1;
    }
    uint64_t v33 = (void **)(a3 - 8);
    id v34 = &off_26536F000;
    uint64_t v35 = v5;
    uint64_t v53 = v6;
    uint64_t v54 = v4;
    while (1)
    {
      id v59 = v32;
      id v61 = v5;
      uint64_t v57 = v33 + 1;
      uint64_t v37 = *--v32;
      uint64_t v36 = v37;
      uint64_t v38 = *--v35;
      id v39 = v36;
      id v40 = v38;
      unsigned int v41 = [v39 (SEL)v34[293]];
      if (v41 == [v40 (SEL)v34[293]])
      {
        id v43 = objc_msgSend(v39, sel_name);
        uint64_t v44 = sub_251F356F0();
        uint64_t v55 = v45;

        id v46 = objc_msgSend(v40, sel_name);
        uint64_t v47 = sub_251F356F0();
        uint64_t v49 = v48;

        if (v44 == v47 && v55 == v49)
        {

          swift_bridgeObjectRelease_n();
          uint64_t v6 = v53;
          uint64_t v4 = v54;
          id v34 = &off_26536F000;
        }
        else
        {
          char v51 = sub_251F36B10();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v6 = v53;
          uint64_t v4 = v54;
          id v34 = &off_26536F000;
          if (v51)
          {
LABEL_47:
            uint64_t v32 = v59;
            if (v57 != v61 || v33 >= v61) {
              *uint64_t v33 = *v35;
            }
            uint64_t v64 = v35;
            goto LABEL_56;
          }
        }
      }
      else
      {
        unsigned __int8 v42 = [v39 (SEL)v34[293]];

        if (v42) {
          goto LABEL_47;
        }
      }
      unint64_t v62 = v32;
      uint64_t v35 = v61;
      if (v57 < v59 || v33 >= v59 || v57 != v59) {
        *uint64_t v33 = *v32;
      }
LABEL_56:
      if (v35 > v6)
      {
        --v33;
        uint64_t v5 = v35;
        if (v32 > v4) {
          continue;
        }
      }
      goto LABEL_60;
    }
  }
  if (v7 >= -7)
  {
    if (__dst != __src || &__src[v9] <= __dst) {
      memmove(__dst, __src, 8 * v9);
    }
    uint64_t v13 = &v4[v9];
    unint64_t v62 = v13;
    if ((unint64_t)v5 < a3 && v7 >= 8)
    {
      uint64_t v14 = &off_26536F000;
      uint64_t v56 = v13;
      while (1)
      {
        id v15 = *v4;
        id v16 = *v5;
        id v17 = v15;
        LODWORD(v15) = [v16 (SEL)v14[293]];
        if (v15 == [v17 (SEL)v14[293]])
        {
          char v60 = v5;
          char v20 = v6;
          uint64_t v21 = v4;
          id v22 = objc_msgSend(v16, sel_name);
          uint64_t v23 = sub_251F356F0();
          uint64_t v25 = v24;

          id v26 = objc_msgSend(v17, sel_name);
          uint64_t v27 = sub_251F356F0();
          uint64_t v29 = v28;

          if (v23 == v27 && v25 == v29)
          {

            swift_bridgeObjectRelease_n();
            uint64_t v4 = v21;
            uint64_t v6 = v20;
            uint64_t v5 = v60;
            uint64_t v13 = v56;
            uint64_t v14 = &off_26536F000;
            if (v6 == v4) {
              goto LABEL_17;
            }
LABEL_16:
            *uint64_t v6 = *v4;
            goto LABEL_17;
          }
          char v31 = sub_251F36B10();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v4 = v21;
          uint64_t v6 = v20;
          uint64_t v5 = v60;
          uint64_t v13 = v56;
          uint64_t v14 = &off_26536F000;
          if (v31)
          {
LABEL_23:
            uint64_t v19 = v5 + 1;
            if (v6 < v5 || v6 >= v19 || v6 != v5) {
              *uint64_t v6 = *v5;
            }
            goto LABEL_27;
          }
        }
        else
        {
          unsigned __int8 v18 = [v16 (SEL)v14[293]];

          if (v18) {
            goto LABEL_23;
          }
        }
        if (v6 != v4) {
          goto LABEL_16;
        }
LABEL_17:
        unint64_t v63 = ++v4;
        uint64_t v19 = v5;
LABEL_27:
        ++v6;
        if (v4 < v13)
        {
          uint64_t v5 = v19;
          if ((unint64_t)v19 < a3) {
            continue;
          }
        }
        uint64_t v64 = v6;
        goto LABEL_60;
      }
    }
    goto LABEL_60;
  }
LABEL_61:
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251A9F5B4(void **__src, id *a2, id *a3, void **__dst)
{
  uint64_t v4 = __dst;
  uint64_t v5 = a3;
  uint64_t v6 = a2;
  int64_t v7 = __src;
  int64_t v8 = (char *)a2 - (char *)__src;
  int64_t v9 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v9 = (char *)a2 - (char *)__src;
  }
  uint64_t v10 = v9 >> 3;
  uint64_t v11 = (char *)a3 - (char *)a2;
  uint64_t v12 = (char *)a3 - (char *)a2 + 7;
  if ((char *)a3 - (char *)a2 >= 0) {
    uint64_t v12 = (char *)a3 - (char *)a2;
  }
  uint64_t v13 = v12 >> 3;
  id v61 = __src;
  char v60 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 < -7) {
      goto LABEL_53;
    }
    if (__dst != a2 || &a2[v13] <= __dst) {
      memmove(__dst, a2, 8 * v13);
    }
    char v51 = v4;
    char v31 = &v4[v13];
    id v59 = v31;
    id v61 = v6;
    if (v7 >= v6 || v11 < 8)
    {
LABEL_52:
      sub_251ECD7AC(&v61, &v60, &v59);
      return 1;
    }
    uint64_t v32 = v6;
    uint64_t v56 = v7;
    while (1)
    {
      uint64_t v52 = v31;
      uint64_t v54 = v6;
      uint64_t v58 = v5;
      id v34 = *--v31;
      uint64_t v33 = v34;
      uint64_t v35 = *--v32;
      id v36 = v33;
      id v37 = v35;
      id v38 = objc_msgSend(v36, sel_name);
      uint64_t v39 = sub_251F356F0();
      uint64_t v41 = v40;

      id v42 = objc_msgSend(v37, sel_name);
      uint64_t v43 = sub_251F356F0();
      uint64_t v45 = v44;

      if (v39 == v43 && v41 == v45) {
        break;
      }
      char v47 = sub_251F36B10();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v48 = v58;
      uint64_t v5 = v58 - 1;
      if ((v47 & 1) == 0) {
        goto LABEL_46;
      }
      unint64_t v49 = (unint64_t)v56;
      char v31 = v52;
      if (v58 != v54 || v5 >= v54) {
        *uint64_t v5 = *v32;
      }
      id v61 = v32;
LABEL_50:
      if ((unint64_t)v32 > v49)
      {
        uint64_t v6 = v32;
        if (v31 > v51) {
          continue;
        }
      }
      goto LABEL_52;
    }

    swift_bridgeObjectRelease_n();
    uint64_t v48 = v58;
    uint64_t v5 = v58 - 1;
LABEL_46:
    uint64_t v32 = v54;
    unint64_t v49 = (unint64_t)v56;
    id v59 = v31;
    if (v48 < v52 || v5 >= v52 || v48 != v52) {
      *uint64_t v5 = *v31;
    }
    goto LABEL_50;
  }
  if (v8 >= -7)
  {
    if (__dst != __src || &__src[v10] <= __dst) {
      memmove(__dst, __src, 8 * v10);
    }
    uint64_t v53 = &v4[v10];
    id v59 = v53;
    if (v6 < v5 && v8 >= 8)
    {
      uint64_t v57 = v5;
      while (1)
      {
        uint64_t v55 = v7;
        uint64_t v14 = v6;
        id v15 = *v4;
        id v16 = *v6;
        id v17 = v15;
        id v18 = objc_msgSend(v16, sel_name);
        uint64_t v19 = sub_251F356F0();
        uint64_t v21 = v20;

        id v22 = objc_msgSend(v17, sel_name);
        uint64_t v23 = sub_251F356F0();
        uint64_t v25 = v24;

        if (v19 == v23 && v21 == v25) {
          break;
        }
        char v27 = sub_251F36B10();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v27 & 1) == 0) {
          goto LABEL_23;
        }
        uint64_t v28 = v14 + 1;
        uint64_t v29 = v55;
        id v30 = v57;
        if (v55 < v14 || v55 >= v28 || v55 != v14) {
          *uint64_t v55 = *v14;
        }
LABEL_26:
        int64_t v7 = v29 + 1;
        if (v4 < v53)
        {
          uint64_t v6 = v28;
          if (v28 < v30) {
            continue;
          }
        }
        id v61 = v7;
        goto LABEL_52;
      }

      swift_bridgeObjectRelease_n();
LABEL_23:
      uint64_t v29 = v55;
      id v30 = v57;
      if (v55 != v4) {
        *uint64_t v55 = *v4;
      }
      char v60 = ++v4;
      uint64_t v28 = v14;
      goto LABEL_26;
    }
    goto LABEL_52;
  }
LABEL_53:
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251A9F9CC(void **a1)
{
  return sub_251A962A8(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t _s13HomeDataModel0bC0C11accessories3for2inSaySo11HMAccessoryCGAA11ServiceKindO_So6HMHomeCtF_0(int a1, id a2)
{
  id v2 = objc_msgSend(a2, sel_accessories);
  sub_251A1A568(0, (unint64_t *)&qword_26B21EAF8);
  unint64_t v3 = sub_251F35AC0();

  uint64_t v31 = MEMORY[0x263F8EE78];
  if (v3 >> 62) {
    goto LABEL_31;
  }
  uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v4)
  {
    unint64_t v5 = 0;
    uint64_t v28 = v4;
    unint64_t v29 = v3 & 0xC000000000000001;
    uint64_t v26 = v3 & 0xFFFFFFFFFFFFFF8;
    unint64_t v27 = v3;
    unint64_t v25 = v3 + 32;
    while (1)
    {
      if (v29)
      {
        id v6 = (id)MEMORY[0x2533AB3A0](v5, v27);
      }
      else
      {
        if (v5 >= *(void *)(v26 + 16)) {
          goto LABEL_30;
        }
        id v6 = *(id *)(v25 + 8 * v5);
      }
      unint64_t v3 = (unint64_t)v6;
      if (__OFADD__(v5++, 1)) {
        break;
      }
      id v8 = objc_msgSend(v6, sel_services);
      sub_251A1A568(0, (unint64_t *)&qword_26B21F180);
      unint64_t v9 = sub_251F35AC0();

      id v30 = (void *)v3;
      if (v9 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v10 = sub_251F366C0();
        if (v10)
        {
LABEL_13:
          uint64_t v11 = 4;
          while (1)
          {
            id v12 = (v9 & 0xC000000000000001) != 0
                ? (id)MEMORY[0x2533AB3A0](v11 - 4, v9)
                : *(id *)(v9 + 8 * v11);
            uint64_t v13 = v12;
            unint64_t v3 = v11 - 3;
            if (__OFADD__(v11 - 4, 1)) {
              break;
            }
            id v14 = objc_msgSend(v12, sel_serviceType);
            uint64_t v15 = sub_251F356F0();
            id v17 = v16;

            v18._countAndFlagsBits = v15;
            v18._object = v17;
            ServiceKind.init(rawValue:)(v18);
            unint64_t v19 = ServiceKind.rawValue.getter();
            uint64_t v21 = v20;
            if (v19 == ServiceKind.rawValue.getter() && v21 == v22)
            {
              swift_bridgeObjectRelease_n();
LABEL_24:

              swift_bridgeObjectRelease_n();
              sub_251F364F0();
              sub_251F36530();
              sub_251F36540();
              sub_251F36500();
              goto LABEL_5;
            }
            char v23 = sub_251F36B10();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v23) {
              goto LABEL_24;
            }

            ++v11;
            if (v3 == v10) {
              goto LABEL_4;
            }
          }
          __break(1u);
          break;
        }
      }
      else
      {
        uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v10) {
          goto LABEL_13;
        }
      }
LABEL_4:
      swift_bridgeObjectRelease_n();

LABEL_5:
      if (v5 == v28)
      {
        swift_bridgeObjectRelease();
        return v31;
      }
    }
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_251F366C0();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x263F8EE78];
}

uint64_t sub_251A9FD58(unint64_t a1, char a2)
{
  uint64_t v12 = MEMORY[0x263F8EE78];
  if (a1 >> 62) {
    goto LABEL_11;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; uint64_t v4 = sub_251F366C0())
  {
    for (uint64_t i = 4; ; ++i)
    {
      id v6 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x2533AB3A0](i - 4, a1) : *(id *)(a1 + 8 * i);
      int64_t v7 = v6;
      uint64_t v8 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      char v11 = a2;
      unint64_t v9 = _s13HomeDataModel0bC0C11accessories3for2inSaySo11HMAccessoryCGAA11ServiceKindO_So6HMHomeCtF_0((int)&v11, v6);

      sub_251ED6248(v9);
      if (v8 == v4)
      {
        swift_bridgeObjectRelease();
        return v12;
      }
    }
    __break(1u);
LABEL_11:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x263F8EE78];
}

unint64_t sub_251A9FE88()
{
  unint64_t result = qword_26B21F2B8;
  if (!qword_26B21F2B8)
  {
    sub_251F34DA0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B21F2B8);
  }
  return result;
}

uint64_t sub_251A9FED4(id *a1)
{
  return sub_251A9D404(a1) & 1;
}

uint64_t sub_251A9FEF4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_251A9FF5C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_251A9FFC4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_251AA0024()
{
  unint64_t result = qword_26B21F158;
  if (!qword_26B21F158)
  {
    sub_251A1A568(255, (unint64_t *)&qword_26B21F150);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B21F158);
  }
  return result;
}

uint64_t sub_251AA0080(id *a1)
{
  return sub_251A9FED4(a1) & 1;
}

uint64_t sub_251AA009C(void **a1)
{
  return sub_251A9F9CC(a1) & 1;
}

uint64_t CameraController.Mode.hash(into:)()
{
  int v1 = *v0;
  if (v1 != 3 && v1 != 4)
  {
    unint64_t v2 = (unint64_t)(unsigned __int16)*v0 >> 8;
    sub_251F36CB0();
    sub_251F357B0();
    swift_bridgeObjectRelease();
    if (v2 == 5) {
      return sub_251F36CC0();
    }
    sub_251F36CC0();
  }
  return sub_251F36CB0();
}

uint64_t CameraController.Mode.hashValue.getter()
{
  unint64_t v1 = *v0;
  sub_251F36CA0();
  if (v1 == 3 || v1 == 4) {
    goto LABEL_8;
  }
  sub_251F36CB0();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  if ((v1 >> 8) != 5)
  {
    sub_251F36CC0();
LABEL_8:
    sub_251F36CB0();
    return sub_251F36D00();
  }
  sub_251F36CC0();
  return sub_251F36D00();
}

uint64_t sub_251AA02D8()
{
  unint64_t v1 = *v0;
  sub_251F36CA0();
  if (v1 == 3 || v1 == 4) {
    goto LABEL_8;
  }
  sub_251F36CB0();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  if ((v1 >> 8) != 5)
  {
    sub_251F36CC0();
LABEL_8:
    sub_251F36CB0();
    return sub_251F36D00();
  }
  sub_251F36CC0();
  return sub_251F36D00();
}

uint64_t sub_251AA03F0()
{
  unint64_t v1 = *(void **)v0;
  int v2 = *(char *)(v0 + 24);
  if (v2 < 0)
  {
    uint64_t v4 = *(void **)(v0 + 8);
    uint64_t v5 = *(void **)(v0 + 16);
    sub_251AA104C(v1, v4, v5, v2);
    sub_251AA04E4();
    sub_251F35800();
    swift_bridgeObjectRelease();
    sub_251AA10CC(v1, v4, v5, v2);
    return 0x3A746E65746E6F63;
  }
  else
  {
    CameraController.Mode.description.getter();
    sub_251F35800();
    swift_bridgeObjectRelease();
    return 0x203A65646F6DLL;
  }
}

uint64_t sub_251AA04E4()
{
  unint64_t v1 = *(void **)(v0 + 8);
  if (*(unsigned char *)(v0 + 24))
  {
    if (*(unsigned char *)(v0 + 24) != 1) {
      return 0x6968747972657665;
    }
    id v2 = *(id *)v0;
    id v3 = v1;
    sub_251F36400();
    swift_bridgeObjectRelease();
    v13[0] = 0xD000000000000013;
    v13[1] = 0x8000000251F68C80;
    id v4 = v2;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269B9E7F0);
    sub_251F35770();
    sub_251F35800();
    swift_bridgeObjectRelease();
    sub_251F35800();
    id v5 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D678);
    sub_251F35770();
    sub_251F35800();

    swift_bridgeObjectRelease();
    id v6 = v1;
  }
  else
  {
    int64_t v7 = *(void **)(v0 + 16);
    id v8 = v1;
    id v9 = v7;
    sub_251F36400();
    swift_bridgeObjectRelease();
    strcpy((char *)v13, "stream(state: ");
    HIBYTE(v13[1]) = -18;
    sub_251F35800();
    swift_bridgeObjectRelease();
    sub_251F35800();
    id v11 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D680);
    sub_251F35770();
    sub_251F35800();
    swift_bridgeObjectRelease();
    sub_251F35800();
    id v12 = v7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D678);
    sub_251F35770();
    sub_251F35800();

    swift_bridgeObjectRelease();
    id v6 = v7;
  }

  return v13[0];
}

uint64_t CameraController.Mode.description.getter()
{
  int v1 = *v0;
  if (v1 == 3) {
    return 0x746F687370616E73;
  }
  if (v1 == 4) {
    return 1701736302;
  }
  if (HIBYTE(*v0) != 5) {
    sub_251F36640();
  }
  sub_251F36400();
  sub_251F35800();
  sub_251F36640();
  sub_251F35800();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  return 0;
}

BOOL sub_251AA0988(__int16 *a1, __int16 *a2)
{
  __int16 v2 = *a2;
  __int16 v5 = *a1;
  __int16 v4 = v2;
  return !_s13HomeDataModel16CameraControllerC4ModeO1loiySbAE_AEtFZ_0(&v4, &v5);
}

BOOL sub_251AA09C8(__int16 *a1, __int16 *a2)
{
  __int16 v2 = *a2;
  __int16 v5 = *a1;
  __int16 v4 = v2;
  return !_s13HomeDataModel16CameraControllerC4ModeO1loiySbAE_AEtFZ_0(&v5, &v4);
}

BOOL sub_251AA0A08(__int16 *a1, __int16 *a2)
{
  __int16 v2 = *a2;
  __int16 v5 = *a1;
  __int16 v4 = v2;
  return _s13HomeDataModel16CameraControllerC4ModeO1loiySbAE_AEtFZ_0(&v4, &v5);
}

void CameraController.Mode.audioMode.getter(unsigned char *a1@<X8>)
{
  int v2 = *v1;
  if ((v2 - 3) < 2) {
    LOBYTE(v2) = 3;
  }
  *a1 = v2;
}

void CameraController.Mode.resolution.getter(unsigned char *a1@<X8>)
{
  int v2 = HIBYTE(*v1);
  if (*v1 - 3 < 2) {
    LOBYTE(v2) = 5;
  }
  *a1 = v2;
}

BOOL _s13HomeDataModel16CameraControllerC4ModeO2eeoiySbAE_AEtFZ_0(_WORD *a1, _WORD *a2)
{
  unsigned int v2 = (unsigned __int16)*a1;
  int v3 = *a1;
  if (v3 == 3) {
    return *a2 == 3;
  }
  if (v3 == 4) {
    return *a2 == 4;
  }
  if (*a2 - 3 < 2) {
    return 0;
  }
  int v5 = *a1;
  if (*a1)
  {
    if (v5 == 1) {
      uint64_t v6 = 0x676E696D6F636E69;
    }
    else {
      uint64_t v6 = 0x7463657269646962;
    }
    if (v5 == 1) {
      unint64_t v7 = 0xE800000000000000;
    }
    else {
      unint64_t v7 = 0xED00006C616E6F69;
    }
  }
  else
  {
    unint64_t v7 = 0xE500000000000000;
    uint64_t v6 = 0x646574756DLL;
  }
  unsigned int v8 = v2 >> 8;
  int v9 = HIBYTE(*a2);
  unint64_t v10 = 0xE800000000000000;
  uint64_t v11 = 0x676E696D6F636E69;
  if (*a2 != 1)
  {
    uint64_t v11 = 0x7463657269646962;
    unint64_t v10 = 0xED00006C616E6F69;
  }
  if (*a2) {
    uint64_t v12 = v11;
  }
  else {
    uint64_t v12 = 0x646574756DLL;
  }
  if (*a2) {
    unint64_t v13 = v10;
  }
  else {
    unint64_t v13 = 0xE500000000000000;
  }
  if (v6 == v12 && v7 == v13)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_30;
  }
  char v14 = sub_251F36B10();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  BOOL result = 0;
  if (v14)
  {
LABEL_30:
    if (v8 == 5)
    {
      if (v9 == 5) {
        return 1;
      }
    }
    else if (v8 == v9 && v9 != 5)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

BOOL _s13HomeDataModel16CameraControllerC4ModeO1loiySbAE_AEtFZ_0(_WORD *a1, _WORD *a2)
{
  int v2 = *a1;
  if ((v2 - 3) < 2)
  {
    BOOL v3 = *a2 - 5 >= 0xFFFFFFFE && v2 == 3;
    return !v3;
  }
  int v5 = *a2;
  if ((v5 - 3) < 2) {
    return 0;
  }
  unsigned int v6 = HIBYTE(*a1);
  unsigned int v7 = HIBYTE(*a2);
  unint64_t v8 = 0xE800000000000000;
  uint64_t v9 = 0x676E696D6F636E69;
  if (v2 != 1)
  {
    uint64_t v9 = 0x7463657269646962;
    unint64_t v8 = 0xED00006C616E6F69;
  }
  if (*a1) {
    uint64_t v10 = v9;
  }
  else {
    uint64_t v10 = 0x646574756DLL;
  }
  if (v2) {
    unint64_t v11 = v8;
  }
  else {
    unint64_t v11 = 0xE500000000000000;
  }
  unint64_t v12 = 0xE800000000000000;
  uint64_t v13 = 0x676E696D6F636E69;
  if (v5 != 1)
  {
    uint64_t v13 = 0x7463657269646962;
    unint64_t v12 = 0xED00006C616E6F69;
  }
  if (*a2) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0x646574756DLL;
  }
  if (*a2) {
    unint64_t v15 = v12;
  }
  else {
    unint64_t v15 = 0xE500000000000000;
  }
  if (v10 == v14 && v11 == v15)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_31;
  }
  char v16 = sub_251F36B10();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v16)
  {
LABEL_31:
    if (v6 != 5)
    {
      BOOL v3 = v6 >= v7 || v7 == 5;
      return !v3;
    }
    BOOL result = 1;
    if (v5 == 2 || v7 != 5) {
      return result;
    }
    goto LABEL_40;
  }
  if (v5 == 2) {
    return 1;
  }
LABEL_40:
  if (v2 == 2) {
    return 0;
  }
  return v2 != 1 || v5 == 1;
}

unint64_t sub_251AA0DE0()
{
  unint64_t result = qword_269B9D670;
  if (!qword_269B9D670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9D670);
  }
  return result;
}

_WORD *__swift_memcpy2_1(_WORD *result, _WORD *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t _s4ModeOwet(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC)
  {
    unsigned int v2 = a2 + 65284;
    if (a2 + 65284 <= 0xFFFEFFFF) {
      unsigned int v3 = 2;
    }
    else {
      unsigned int v3 = 4;
    }
    if (v2 < 0xFF0000) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x10000) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = *((unsigned __int8 *)a1 + 2);
        if (!*((unsigned char *)a1 + 2)) {
          break;
        }
        return (*a1 | (v5 << 16)) - 65284;
      case 2:
        int v5 = a1[1];
        if (a1[1]) {
          return (*a1 | (v5 << 16)) - 65284;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x251AA0EF4);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 16)) - 65284;
      default:
        break;
    }
  }
  unsigned int v7 = *(unsigned __int8 *)a1;
  if (v7 >= 3) {
    unsigned int v8 = v7 - 2;
  }
  else {
    unsigned int v8 = 0;
  }
  if (v8 >= 3) {
    return v8 - 2;
  }
  else {
    return 0;
  }
}

uint64_t _s4ModeOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 65284;
  if (a3 + 65284 <= 0xFFFEFFFF) {
    int v4 = 2;
  }
  else {
    int v4 = 4;
  }
  if (v3 < 0xFF0000) {
    int v4 = 1;
  }
  if (v3 >= 0x10000) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFC) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v7 = ((a2 - 252) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 252;
    switch(v6)
    {
      case 1:
        *(unsigned char *)(result + 2) = v7;
        break;
      case 2:
        *(_WORD *)(result + 2) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x251AA0FDCLL);
      case 4:
        *(_DWORD *)(result + 2) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *(unsigned char *)unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

uint64_t sub_251AA1004(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 >= 3) {
    return v1 - 2;
  }
  else {
    return 0;
  }
}

_WORD *sub_251AA1018(_WORD *result, unsigned int a2)
{
  if (a2 > 0xFD)
  {
    *unint64_t result = a2 - 254;
  }
  else if (a2)
  {
    *(unsigned char *)unint64_t result = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for CameraController.Mode()
{
  return &type metadata for CameraController.Mode;
}

id sub_251AA104C(id result, void *a2, void *a3, char a4)
{
  if (a4 < 0) {
    return sub_251AA105C(result, a2, a3, a4 & 0x7F);
  }
  return result;
}

id sub_251AA105C(id result, id a2, void *a3, char a4)
{
  id v4 = a2;
  if (a4)
  {
    if (a4 != 1) {
      return result;
    }
  }
  else
  {
    unint64_t result = a2;
    id v4 = a3;
  }
  id v5 = result;
  return v4;
}

void _s10UpdateTypeOwxx(uint64_t a1)
{
}

void sub_251AA10CC(void *a1, void *a2, void *a3, char a4)
{
  if (a4 < 0) {
    sub_251AA10DC(a1, a2, a3, a4 & 0x7F);
  }
}

void sub_251AA10DC(id a1, id a2, void *a3, char a4)
{
  id v4 = a2;
  if (a4)
  {
    if (a4 != 1) {
      return;
    }
  }
  else
  {
    a1 = a2;
    id v4 = a3;
  }
}

uint64_t _s10UpdateTypeOwcp(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_251AA12C4(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t))sub_251AA104C);
}

uint64_t *_s10UpdateTypeOwca(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_251AA1358(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t))sub_251AA104C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_251AA10CC);
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t *_s10UpdateTypeOwta(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_251AA13F0(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_251AA10CC);
}

uint64_t _s10UpdateTypeOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x3F && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 63);
  }
  unsigned int v3 = ((*(unsigned __int8 *)(a1 + 24) >> 1) & 0x3E | (*(unsigned __int8 *)(a1 + 24) >> 7)) ^ 0x3F;
  if (v3 >= 0x3E) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t _s10UpdateTypeOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3E)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 63;
    if (a3 >= 0x3F) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0x3F) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2)
    {
      *(void *)__n128 result = 0;
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = 0;
      *(unsigned char *)(result + 24) = 4 * (((-a2 >> 1) & 0x1F) - 32 * a2);
    }
  }
  return result;
}

uint64_t sub_251AA1258(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24) >> 7;
}

uint64_t sub_251AA1264(uint64_t result)
{
  *(unsigned char *)(result + 24) &= ~0x80u;
  return result;
}

uint64_t sub_251AA1274(uint64_t result, char a2)
{
  *(unsigned char *)(result + 24) = *(unsigned char *)(result + 24) & 3 | (a2 << 7);
  return result;
}

ValueMetadata *_s10UpdateTypeOMa()
{
  return &_s10UpdateTypeON;
}

void _s7ContentOwxx(uint64_t a1)
{
}

uint64_t _s7ContentOwcp(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_251AA12C4(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t))sub_251AA105C);
}

uint64_t sub_251AA12C4(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = a2[2];
  uint64_t v8 = *((unsigned __int8 *)a2 + 24);
  a4(*a2, v6, v7, v8);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v7;
  *(unsigned char *)(a1 + 24) = v8;
  return a1;
}

uint64_t *_s7ContentOwca(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_251AA1358(a1, a2, a3, (void (*)(void, uint64_t, uint64_t, uint64_t))sub_251AA105C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_251AA10DC);
}

uint64_t *sub_251AA1358(uint64_t *a1, uint64_t *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  uint64_t v9 = a2[2];
  uint64_t v10 = *((unsigned __int8 *)a2 + 24);
  a4(*a2, v8, v9, v10);
  uint64_t v11 = *a1;
  uint64_t v12 = a1[1];
  uint64_t v13 = a1[2];
  *a1 = v7;
  a1[1] = v8;
  a1[2] = v9;
  uint64_t v14 = *((unsigned __int8 *)a1 + 24);
  *((unsigned char *)a1 + 24) = v10;
  a5(v11, v12, v13, v14);
  return a1;
}

uint64_t *_s7ContentOwta(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_251AA13F0(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_251AA10DC);
}

uint64_t *sub_251AA13F0(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = *(void *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 24);
  uint64_t v8 = *a1;
  uint64_t v10 = a1[1];
  uint64_t v9 = a1[2];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a1[2] = v6;
  uint64_t v11 = *((unsigned __int8 *)a1 + 24);
  *((unsigned char *)a1 + 24) = v7;
  a4(v8, v10, v9, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for IconTextValueStringDataHolder.AttachedData(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for IconTextValueStringDataHolder.AttachedData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_251AA14D8(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 24) <= 1u) {
    return *(unsigned __int8 *)(a1 + 24);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_251AA14F0(uint64_t result, unsigned int a2)
{
  uint64_t v2 = a2 - 2;
  if (a2 >= 2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    LOBYTE(a2) = 2;
    *(void *)__n128 result = v2;
  }
  *(unsigned char *)(result + 24) = a2;
  return result;
}

ValueMetadata *_s7ContentOMa()
{
  return &_s7ContentON;
}

uint64_t sub_251AA151C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[33] = a5;
  v6[34] = a6;
  v6[31] = a3;
  v6[32] = a4;
  v6[29] = a1;
  v6[30] = a2;
  return MEMORY[0x270FA2498](sub_251AA1544, 0, 0);
}

uint64_t sub_251AA1544()
{
  uint64_t v33 = v0;
  if (qword_26B21ECD0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_251F350A0();
  v0[35] = __swift_project_value_buffer(v1, (uint64_t)qword_26B21ECB8);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_251F35080();
  os_log_type_t v3 = sub_251F35FD0();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = v0[34];
  if (v4)
  {
    uint64_t v28 = v0[29];
    uint64_t v6 = v0[33];
    uint64_t v29 = v0[32];
    unint64_t v7 = v0[30];
    uint64_t v8 = swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315650;
    uint64_t v32 = v30;
    swift_bridgeObjectRetain();
    v0[25] = sub_251A00E84(v6, v5, &v32);
    sub_251F361D0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 12) = 2080;
    swift_bridgeObjectRetain();
    v0[26] = sub_251A00E84(v28, v7, &v32);
    sub_251F361D0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 22) = 2080;
    v0[27] = v29;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D698);
    uint64_t v9 = sub_251F35790();
    v0[28] = sub_251A00E84(v9, v10, &v32);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v30, -1, -1);
    MEMORY[0x2533AC760](v8, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  uint64_t v11 = (void *)v0[31];
  if (v11)
  {
    uint64_t v12 = qword_269B9C330;
    id v13 = v11;
    if (v12 != -1) {
      swift_once();
    }
    uint64_t v14 = v0[32];
    swift_beginAccess();
    unint64_t v15 = (void *)qword_269B9FC18;
    v0[36] = qword_269B9FC18;
    if (!v15) {
      uint64_t v14 = 0;
    }
    id v16 = v15;
    id v17 = (void *)swift_task_alloc();
    v0[37] = v17;
    *id v17 = v0;
    v17[1] = sub_251AA1AD8;
    return sub_251EB9EE4((uint64_t)(v0 + 10), (uint64_t)v13, v14, (uint64_t)v15);
  }
  else
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    unint64_t v19 = sub_251F35080();
    os_log_type_t v20 = sub_251F35FB0();
    BOOL v21 = os_log_type_enabled(v19, v20);
    unint64_t v22 = v0[34];
    if (v21)
    {
      uint64_t v23 = v0[33];
      unint64_t v24 = v0[30];
      uint64_t v31 = v0[29];
      uint64_t v25 = swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      uint64_t v32 = v26;
      *(_DWORD *)uint64_t v25 = 136315394;
      swift_bridgeObjectRetain();
      v0[23] = sub_251A00E84(v23, v22, &v32);
      sub_251F361D0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v25 + 12) = 2080;
      swift_bridgeObjectRetain();
      v0[20] = sub_251A00E84(v31, v24, &v32);
      sub_251F361D0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2519F3000, v19, v20, "%s: tried running command %s but cluster was nil", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v26, -1, -1);
      MEMORY[0x2533AC760](v25, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }

    unint64_t v27 = (uint64_t (*)(void))v0[1];
    return v27();
  }
}

uint64_t sub_251AA1AD8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 304) = v0;
  swift_task_dealloc();
  if (v0)
  {
    os_log_type_t v3 = sub_251AA891C;
  }
  else
  {

    os_log_type_t v3 = sub_251AA8914;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_251AA1BF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[33] = a5;
  v6[34] = a6;
  v6[31] = a3;
  v6[32] = a4;
  v6[29] = a1;
  v6[30] = a2;
  return MEMORY[0x270FA2498](sub_251AA1C1C, 0, 0);
}

uint64_t sub_251AA1C1C()
{
  uint64_t v33 = v0;
  if (qword_26B21ECD0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_251F350A0();
  v0[35] = __swift_project_value_buffer(v1, (uint64_t)qword_26B21ECB8);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_251F35080();
  os_log_type_t v3 = sub_251F35FD0();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = v0[34];
  if (v4)
  {
    uint64_t v28 = v0[29];
    uint64_t v6 = v0[33];
    uint64_t v29 = v0[32];
    unint64_t v7 = v0[30];
    uint64_t v8 = swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315650;
    uint64_t v32 = v30;
    swift_bridgeObjectRetain();
    v0[25] = sub_251A00E84(v6, v5, &v32);
    sub_251F361D0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 12) = 2080;
    swift_bridgeObjectRetain();
    v0[26] = sub_251A00E84(v28, v7, &v32);
    sub_251F361D0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 22) = 2080;
    v0[27] = v29;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D698);
    uint64_t v9 = sub_251F35790();
    v0[28] = sub_251A00E84(v9, v10, &v32);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v30, -1, -1);
    MEMORY[0x2533AC760](v8, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  uint64_t v11 = (void *)v0[31];
  if (v11)
  {
    uint64_t v12 = qword_269B9C330;
    id v13 = v11;
    if (v12 != -1) {
      swift_once();
    }
    uint64_t v14 = v0[32];
    swift_beginAccess();
    unint64_t v15 = (void *)qword_269B9FC18;
    v0[36] = qword_269B9FC18;
    if (!v15) {
      uint64_t v14 = 0;
    }
    id v16 = v15;
    id v17 = (void *)swift_task_alloc();
    v0[37] = v17;
    *id v17 = v0;
    v17[1] = sub_251AA1AD8;
    return sub_251EBA1C4((uint64_t)(v0 + 10), (uint64_t)v13, v14, (uint64_t)v15);
  }
  else
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    unint64_t v19 = sub_251F35080();
    os_log_type_t v20 = sub_251F35FB0();
    BOOL v21 = os_log_type_enabled(v19, v20);
    unint64_t v22 = v0[34];
    if (v21)
    {
      uint64_t v23 = v0[33];
      unint64_t v24 = v0[30];
      uint64_t v31 = v0[29];
      uint64_t v25 = swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      uint64_t v32 = v26;
      *(_DWORD *)uint64_t v25 = 136315394;
      swift_bridgeObjectRetain();
      v0[23] = sub_251A00E84(v23, v22, &v32);
      sub_251F361D0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v25 + 12) = 2080;
      swift_bridgeObjectRetain();
      v0[20] = sub_251A00E84(v31, v24, &v32);
      sub_251F361D0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2519F3000, v19, v20, "%s: tried running command %s but cluster was nil", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v26, -1, -1);
      MEMORY[0x2533AC760](v25, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }

    unint64_t v27 = (uint64_t (*)(void))v0[1];
    return v27();
  }
}

uint64_t sub_251AA21B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[33] = a5;
  v6[34] = a6;
  v6[31] = a3;
  v6[32] = a4;
  v6[29] = a1;
  v6[30] = a2;
  return MEMORY[0x270FA2498](sub_251AA21D8, 0, 0);
}

uint64_t sub_251AA21D8()
{
  uint64_t v33 = v0;
  if (qword_26B21ECD0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_251F350A0();
  v0[35] = __swift_project_value_buffer(v1, (uint64_t)qword_26B21ECB8);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_251F35080();
  os_log_type_t v3 = sub_251F35FD0();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = v0[34];
  if (v4)
  {
    uint64_t v28 = v0[29];
    uint64_t v6 = v0[33];
    uint64_t v29 = v0[32];
    unint64_t v7 = v0[30];
    uint64_t v8 = swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315650;
    uint64_t v32 = v30;
    swift_bridgeObjectRetain();
    v0[25] = sub_251A00E84(v6, v5, &v32);
    sub_251F361D0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 12) = 2080;
    swift_bridgeObjectRetain();
    v0[26] = sub_251A00E84(v28, v7, &v32);
    sub_251F361D0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 22) = 2080;
    v0[27] = v29;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D698);
    uint64_t v9 = sub_251F35790();
    v0[28] = sub_251A00E84(v9, v10, &v32);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v30, -1, -1);
    MEMORY[0x2533AC760](v8, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  uint64_t v11 = (void *)v0[31];
  if (v11)
  {
    uint64_t v12 = qword_269B9C330;
    id v13 = v11;
    if (v12 != -1) {
      swift_once();
    }
    uint64_t v14 = v0[32];
    swift_beginAccess();
    unint64_t v15 = (void *)qword_269B9FC18;
    v0[36] = qword_269B9FC18;
    if (!v15) {
      uint64_t v14 = 0;
    }
    id v16 = v15;
    id v17 = (void *)swift_task_alloc();
    v0[37] = v17;
    *id v17 = v0;
    v17[1] = sub_251AA1AD8;
    return sub_251EBA938((uint64_t)(v0 + 10), (uint64_t)v13, v14, (uint64_t)v15);
  }
  else
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    unint64_t v19 = sub_251F35080();
    os_log_type_t v20 = sub_251F35FB0();
    BOOL v21 = os_log_type_enabled(v19, v20);
    unint64_t v22 = v0[34];
    if (v21)
    {
      uint64_t v23 = v0[33];
      unint64_t v24 = v0[30];
      uint64_t v31 = v0[29];
      uint64_t v25 = swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      uint64_t v32 = v26;
      *(_DWORD *)uint64_t v25 = 136315394;
      swift_bridgeObjectRetain();
      v0[23] = sub_251A00E84(v23, v22, &v32);
      sub_251F361D0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v25 + 12) = 2080;
      swift_bridgeObjectRetain();
      v0[20] = sub_251A00E84(v31, v24, &v32);
      sub_251F361D0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2519F3000, v19, v20, "%s: tried running command %s but cluster was nil", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v26, -1, -1);
      MEMORY[0x2533AC760](v25, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }

    unint64_t v27 = (uint64_t (*)(void))v0[1];
    return v27();
  }
}

uint64_t sub_251AA276C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[33] = a5;
  v6[34] = a6;
  v6[31] = a3;
  v6[32] = a4;
  v6[29] = a1;
  v6[30] = a2;
  return MEMORY[0x270FA2498](sub_251AA2794, 0, 0);
}

uint64_t sub_251AA2794()
{
  uint64_t v33 = v0;
  if (qword_26B21ECD0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_251F350A0();
  v0[35] = __swift_project_value_buffer(v1, (uint64_t)qword_26B21ECB8);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_251F35080();
  os_log_type_t v3 = sub_251F35FD0();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = v0[34];
  if (v4)
  {
    uint64_t v28 = v0[29];
    uint64_t v6 = v0[33];
    uint64_t v29 = v0[32];
    unint64_t v7 = v0[30];
    uint64_t v8 = swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315650;
    uint64_t v32 = v30;
    swift_bridgeObjectRetain();
    v0[25] = sub_251A00E84(v6, v5, &v32);
    sub_251F361D0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 12) = 2080;
    swift_bridgeObjectRetain();
    v0[26] = sub_251A00E84(v28, v7, &v32);
    sub_251F361D0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 22) = 2080;
    v0[27] = v29;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D698);
    uint64_t v9 = sub_251F35790();
    v0[28] = sub_251A00E84(v9, v10, &v32);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v30, -1, -1);
    MEMORY[0x2533AC760](v8, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  uint64_t v11 = (void *)v0[31];
  if (v11)
  {
    uint64_t v12 = qword_269B9C330;
    id v13 = v11;
    if (v12 != -1) {
      swift_once();
    }
    uint64_t v14 = v0[32];
    swift_beginAccess();
    unint64_t v15 = (void *)qword_269B9FC18;
    v0[36] = qword_269B9FC18;
    if (!v15) {
      uint64_t v14 = 0;
    }
    id v16 = v15;
    id v17 = (void *)swift_task_alloc();
    v0[37] = v17;
    *id v17 = v0;
    v17[1] = sub_251AA1AD8;
    return sub_251E5F3C0((uint64_t)(v0 + 10), (uint64_t)v13, v14, (uint64_t)v15);
  }
  else
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    unint64_t v19 = sub_251F35080();
    os_log_type_t v20 = sub_251F35FB0();
    BOOL v21 = os_log_type_enabled(v19, v20);
    unint64_t v22 = v0[34];
    if (v21)
    {
      uint64_t v23 = v0[33];
      unint64_t v24 = v0[30];
      uint64_t v31 = v0[29];
      uint64_t v25 = swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      uint64_t v32 = v26;
      *(_DWORD *)uint64_t v25 = 136315394;
      swift_bridgeObjectRetain();
      v0[23] = sub_251A00E84(v23, v22, &v32);
      sub_251F361D0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v25 + 12) = 2080;
      swift_bridgeObjectRetain();
      v0[20] = sub_251A00E84(v31, v24, &v32);
      sub_251F361D0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2519F3000, v19, v20, "%s: tried running command %s but cluster was nil", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v26, -1, -1);
      MEMORY[0x2533AC760](v25, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }

    unint64_t v27 = (uint64_t (*)(void))v0[1];
    return v27();
  }
}

uint64_t sub_251AA2D28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[33] = a5;
  v6[34] = a6;
  v6[31] = a3;
  v6[32] = a4;
  v6[29] = a1;
  v6[30] = a2;
  return MEMORY[0x270FA2498](sub_251AA2D50, 0, 0);
}

uint64_t sub_251AA2D50()
{
  uint64_t v33 = v0;
  if (qword_26B21ECD0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_251F350A0();
  v0[35] = __swift_project_value_buffer(v1, (uint64_t)qword_26B21ECB8);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_251F35080();
  os_log_type_t v3 = sub_251F35FD0();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = v0[34];
  if (v4)
  {
    uint64_t v28 = v0[29];
    uint64_t v6 = v0[33];
    uint64_t v29 = v0[32];
    unint64_t v7 = v0[30];
    uint64_t v8 = swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315650;
    uint64_t v32 = v30;
    swift_bridgeObjectRetain();
    v0[25] = sub_251A00E84(v6, v5, &v32);
    sub_251F361D0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 12) = 2080;
    swift_bridgeObjectRetain();
    v0[26] = sub_251A00E84(v28, v7, &v32);
    sub_251F361D0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 22) = 2080;
    v0[27] = v29;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D698);
    uint64_t v9 = sub_251F35790();
    v0[28] = sub_251A00E84(v9, v10, &v32);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v30, -1, -1);
    MEMORY[0x2533AC760](v8, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  uint64_t v11 = (void *)v0[31];
  if (v11)
  {
    uint64_t v12 = qword_269B9C330;
    id v13 = v11;
    if (v12 != -1) {
      swift_once();
    }
    uint64_t v14 = v0[32];
    swift_beginAccess();
    unint64_t v15 = (void *)qword_269B9FC18;
    v0[36] = qword_269B9FC18;
    if (!v15) {
      uint64_t v14 = 0;
    }
    id v16 = v15;
    id v17 = (void *)swift_task_alloc();
    v0[37] = v17;
    *id v17 = v0;
    v17[1] = sub_251AA32E4;
    return sub_251E5F78C((uint64_t)(v0 + 10), (uint64_t)v13, v14, (uint64_t)v15);
  }
  else
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    unint64_t v19 = sub_251F35080();
    os_log_type_t v20 = sub_251F35FB0();
    BOOL v21 = os_log_type_enabled(v19, v20);
    unint64_t v22 = v0[34];
    if (v21)
    {
      uint64_t v23 = v0[33];
      unint64_t v24 = v0[30];
      uint64_t v31 = v0[29];
      uint64_t v25 = swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      uint64_t v32 = v26;
      *(_DWORD *)uint64_t v25 = 136315394;
      swift_bridgeObjectRetain();
      v0[23] = sub_251A00E84(v23, v22, &v32);
      sub_251F361D0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v25 + 12) = 2080;
      swift_bridgeObjectRetain();
      v0[20] = sub_251A00E84(v31, v24, &v32);
      sub_251F361D0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2519F3000, v19, v20, "%s: tried running command %s but cluster was nil", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v26, -1, -1);
      MEMORY[0x2533AC760](v25, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }

    unint64_t v27 = (uint64_t (*)(void))v0[1];
    return v27();
  }
}

uint64_t sub_251AA32E4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 304) = v0;
  swift_task_dealloc();
  if (v0)
  {
    os_log_type_t v3 = sub_251AA36BC;
  }
  else
  {

    os_log_type_t v3 = sub_251AA3400;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_251AA3400()
{
  id v16 = v0;
  sub_251AA82A4((uint64_t)(v0 + 10), (uint64_t)(v0 + 6));
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v1 = sub_251F35080();
  os_log_type_t v2 = sub_251F35FD0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v4 = v0[33];
    unint64_t v3 = v0[34];
    unint64_t v5 = v0[30];
    uint64_t v14 = (void *)v0[31];
    uint64_t v12 = v0[29];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    uint64_t v15 = v13;
    *(_DWORD *)uint64_t v6 = 136315650;
    swift_bridgeObjectRetain();
    v0[21] = sub_251A00E84(v4, v3, &v15);
    sub_251F361D0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v6 + 12) = 2080;
    swift_bridgeObjectRetain();
    v0[22] = sub_251A00E84(v12, v5, &v15);
    sub_251F361D0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v6 + 22) = 2080;
    sub_251AA82A4((uint64_t)(v0 + 6), (uint64_t)(v0 + 2));
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E190);
    uint64_t v7 = sub_251F35790();
    v0[24] = sub_251A00E84(v7, v8, &v15);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    sub_251A9090C((uint64_t)(v0 + 6));
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v13, -1, -1);
    MEMORY[0x2533AC760](v6, -1, -1);
  }
  else
  {
    uint64_t v9 = (void *)v0[31];

    sub_251A9090C((uint64_t)(v0 + 6));
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  sub_251A9090C((uint64_t)(v0 + 10));
  unint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_251AA36BC()
{
  uint64_t v22 = v0;
  uint64_t v1 = v0;
  os_log_type_t v2 = *(void **)(v0 + 304);

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v3 = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v4 = v2;
  unint64_t v5 = sub_251F35080();
  os_log_type_t v6 = sub_251F35FB0();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = *(void **)(v1 + 304);
    uint64_t v8 = *(void *)(v1 + 264);
    unint64_t v9 = *(void *)(v1 + 272);
    unint64_t v10 = *(void *)(v1 + 240);
    os_log_type_t v20 = *(void **)(v1 + 248);
    uint64_t v17 = *(void *)(v1 + 232);
    uint64_t v11 = swift_slowAlloc();
    Swift::String v18 = (void *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    uint64_t v21 = v19;
    *(_DWORD *)uint64_t v11 = 136315650;
    swift_bridgeObjectRetain();
    *(void *)(v1 + 136) = sub_251A00E84(v8, v9, &v21);
    sub_251F361D0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v11 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(void *)(v1 + 144) = sub_251A00E84(v17, v10, &v21);
    sub_251F361D0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v11 + 22) = 2112;
    id v12 = v7;
    uint64_t v13 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v1 + 152) = v13;
    sub_251F361D0();
    *Swift::String v18 = v13;

    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v18, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v19, -1, -1);
    MEMORY[0x2533AC760](v11, -1, -1);
  }
  else
  {
    uint64_t v14 = *(void **)(v1 + 304);

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v15 = *(uint64_t (**)(void))(v1 + 8);
  return v15();
}

uint64_t sub_251AA39C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[33] = a5;
  v6[34] = a6;
  v6[31] = a3;
  v6[32] = a4;
  v6[29] = a1;
  v6[30] = a2;
  return MEMORY[0x270FA2498](sub_251AA39E8, 0, 0);
}

uint64_t sub_251AA39E8()
{
  uint64_t v33 = v0;
  if (qword_26B21ECD0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_251F350A0();
  v0[35] = __swift_project_value_buffer(v1, (uint64_t)qword_26B21ECB8);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  os_log_type_t v2 = sub_251F35080();
  os_log_type_t v3 = sub_251F35FD0();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = v0[34];
  if (v4)
  {
    uint64_t v28 = v0[29];
    uint64_t v6 = v0[33];
    uint64_t v29 = v0[32];
    unint64_t v7 = v0[30];
    uint64_t v8 = swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315650;
    uint64_t v32 = v30;
    swift_bridgeObjectRetain();
    v0[25] = sub_251A00E84(v6, v5, &v32);
    sub_251F361D0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 12) = 2080;
    swift_bridgeObjectRetain();
    v0[26] = sub_251A00E84(v28, v7, &v32);
    sub_251F361D0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 22) = 2080;
    v0[27] = v29;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D698);
    uint64_t v9 = sub_251F35790();
    v0[28] = sub_251A00E84(v9, v10, &v32);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v30, -1, -1);
    MEMORY[0x2533AC760](v8, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  uint64_t v11 = (void *)v0[31];
  if (v11)
  {
    uint64_t v12 = qword_269B9C330;
    id v13 = v11;
    if (v12 != -1) {
      swift_once();
    }
    uint64_t v14 = v0[32];
    swift_beginAccess();
    uint64_t v15 = (void *)qword_269B9FC18;
    v0[36] = qword_269B9FC18;
    if (!v15) {
      uint64_t v14 = 0;
    }
    id v16 = v15;
    uint64_t v17 = (void *)swift_task_alloc();
    v0[37] = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_251AA1AD8;
    return sub_251E5F630((uint64_t)(v0 + 10), (uint64_t)v13, v14, (uint64_t)v15);
  }
  else
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v19 = sub_251F35080();
    os_log_type_t v20 = sub_251F35FB0();
    BOOL v21 = os_log_type_enabled(v19, v20);
    unint64_t v22 = v0[34];
    if (v21)
    {
      uint64_t v23 = v0[33];
      unint64_t v24 = v0[30];
      uint64_t v31 = v0[29];
      uint64_t v25 = swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      uint64_t v32 = v26;
      *(_DWORD *)uint64_t v25 = 136315394;
      swift_bridgeObjectRetain();
      v0[23] = sub_251A00E84(v23, v22, &v32);
      sub_251F361D0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v25 + 12) = 2080;
      swift_bridgeObjectRetain();
      v0[20] = sub_251A00E84(v31, v24, &v32);
      sub_251F361D0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2519F3000, v19, v20, "%s: tried running command %s but cluster was nil", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v26, -1, -1);
      MEMORY[0x2533AC760](v25, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }

    unint64_t v27 = (uint64_t (*)(void))v0[1];
    return v27();
  }
}

unint64_t sub_251AA3F7C()
{
  uint64_t v1 = *(void *)v0;
  switch(*(unsigned char *)(v0 + 8))
  {
    case 1:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D6B0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_251F3A500;
      uint64_t v26 = sub_251F356F0();
      unint64_t v27 = (void **)MEMORY[0x263F10C08];
      *(void *)(inited + 32) = v26;
      *(void *)(inited + 40) = v28;
      uint64_t v29 = *v27;
      *(void *)(inited + 48) = *v27;
      *(void *)(inited + 56) = sub_251F356F0();
      *(void *)(inited + 64) = v30;
      id v31 = v29;
      uint64_t v9 = sub_251F35EB0();
      goto LABEL_6;
    case 2:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D6B0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_251F3A500;
      uint64_t v10 = sub_251F356F0();
      uint64_t v11 = (void **)MEMORY[0x263F10C28];
      *(void *)(inited + 32) = v10;
      *(void *)(inited + 40) = v12;
      id v13 = *v11;
      *(void *)(inited + 48) = *v11;
      *(void *)(inited + 56) = sub_251F356F0();
      *(void *)(inited + 64) = v14;
      id v15 = v13;
      uint64_t v9 = sub_251F361C0();
      goto LABEL_6;
    case 3:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D6B0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_251F3A500;
      uint64_t v16 = sub_251F356F0();
      uint64_t v17 = (void **)MEMORY[0x263F10B68];
      *(void *)(inited + 32) = v16;
      *(void *)(inited + 40) = v18;
      uint64_t v19 = *v17;
      *(void *)(inited + 48) = *v17;
      *(void *)(inited + 56) = sub_251F356F0();
      *(void *)(inited + 64) = v20;
      id v21 = v19;
      uint64_t v22 = sub_251EEC4D8(v1);
      uint64_t v23 = sub_251F356F0();
      sub_251AA420C(v22, v23, v24);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA5550);
      uint64_t v25 = sub_251F35AA0();
      swift_bridgeObjectRelease();
      *(void *)(inited + 72) = v25;
      return sub_2519FA460(inited);
    default:
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D6B0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_251F3A500;
      uint64_t v3 = sub_251F356F0();
      BOOL v4 = (void **)MEMORY[0x263F10B78];
      *(void *)(inited + 32) = v3;
      *(void *)(inited + 40) = v5;
      uint64_t v6 = *v4;
      *(void *)(inited + 48) = *v4;
      *(void *)(inited + 56) = sub_251F356F0();
      *(void *)(inited + 64) = v7;
      id v8 = v6;
      uint64_t v9 = sub_251F35BF0();
LABEL_6:
      *(void *)(inited + 72) = v9;
      return sub_2519FA460(inited);
  }
}

void *sub_251AA420C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v5 = a1 + 32;
  swift_bridgeObjectRetain();
  uint64_t v6 = (void *)MEMORY[0x263F8EE78];
  do
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D560);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_251F3A500;
    *(void *)(inited + 32) = sub_251F356F0();
    *(void *)(inited + 40) = v8;
    *(void *)(inited + 72) = MEMORY[0x263F8D310];
    *(void *)(inited + 48) = a2;
    *(void *)(inited + 56) = a3;
    *(void *)(inited + 80) = sub_251F356F0();
    *(void *)(inited + 88) = v9;
    sub_251A0D51C(v5, inited + 96);
    swift_bridgeObjectRetain();
    unint64_t v10 = sub_2519FA1A4(inited);
    uint64_t v11 = swift_initStackObject();
    *(_OWORD *)(v11 + 16) = xmmword_251F38650;
    *(void *)(v11 + 32) = sub_251F356F0();
    *(void *)(v11 + 40) = v12;
    *(void *)(v11 + 72) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA5550);
    *(void *)(v11 + 48) = v10;
    unint64_t v13 = sub_2519FA1A4(v11);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v6 = sub_251F0F8B4(0, v6[2] + 1, 1, v6);
    }
    unint64_t v15 = v6[2];
    unint64_t v14 = v6[3];
    if (v15 >= v14 >> 1) {
      uint64_t v6 = sub_251F0F8B4((void *)(v14 > 1), v15 + 1, 1, v6);
    }
    v6[2] = v15 + 1;
    v6[v15 + 4] = v13;
    v5 += 32;
    --v3;
  }
  while (v3);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t MatterAttributeDataBuilder.hash(into:)()
{
  uint64_t v1 = *v0;
  switch(*((unsigned char *)v0 + 8))
  {
    case 1:
    case 2:
      sub_251F36CB0();
      uint64_t result = sub_251F36CB0();
      break;
    case 3:
      sub_251F36CB0();
      uint64_t result = sub_251F36CB0();
      uint64_t v3 = *(void *)(v1 + 16);
      if (v3)
      {
        uint64_t v4 = v1 + 32;
        do
        {
          v4 += 4;
          uint64_t result = sub_251F36CE0();
          --v3;
        }
        while (v3);
      }
      break;
    default:
      sub_251F36CB0();
      uint64_t result = sub_251F36CC0();
      break;
  }
  return result;
}

uint64_t MatterAttributeDataBuilder.hashValue.getter()
{
  return sub_251F36D00();
}

uint64_t sub_251AA4510()
{
  return sub_251F36D00();
}

uint64_t sub_251AA4568()
{
  return sub_251F36D00();
}

BOOL _s13HomeDataModel015MatterAttributeB7BuilderO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = *(void *)a2;
  int v5 = *(unsigned __int8 *)(a2 + 8);
  switch(v3)
  {
    case 1:
      if (v5 != 1) {
        goto LABEL_12;
      }
      sub_251A4EBDC(*(void *)a1, 1);
      uint64_t v7 = v4;
      char v8 = 1;
      goto LABEL_8;
    case 2:
      if (v5 != 2) {
        goto LABEL_12;
      }
      sub_251A4EBDC(*(void *)a1, 2);
      uint64_t v7 = v4;
      char v8 = 2;
LABEL_8:
      sub_251A4EBDC(v7, v8);
      char v6 = v2 == v4;
      return v6 & 1;
    case 3:
      uint64_t v9 = *(void *)a1;
      if (v5 == 3)
      {
        BOOL v10 = sub_251AB62F0(v9, *(void *)a2);
        sub_251A1A4B8(v4, 3);
        sub_251A1A4B8(v2, 3);
        sub_251A4EBDC(v2, 3);
        sub_251A4EBDC(v4, 3);
        return v10;
      }
      else
      {
        swift_bridgeObjectRetain();
LABEL_12:
        sub_251A1A4B8(v4, v5);
        sub_251A4EBDC(v2, v3);
        sub_251A4EBDC(v4, v5);
        char v6 = 0;
        return v6 & 1;
      }
    default:
      if (*(unsigned char *)(a2 + 8)) {
        goto LABEL_12;
      }
      sub_251A4EBDC(*(void *)a1, 0);
      sub_251A4EBDC(v4, 0);
      char v6 = ((v2 & 1) == 0) ^ v4;
      return v6 & 1;
  }
}

unint64_t sub_251AA4720()
{
  unint64_t result = qword_269B9D688;
  if (!qword_269B9D688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9D688);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for MatterAttributeDataBuilder(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_251A1A4B8(*(void *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

uint64_t destroy for MatterAttributeDataBuilder(uint64_t a1)
{
  return sub_251A4EBDC(*(void *)a1, *(unsigned char *)(a1 + 8));
}

uint64_t assignWithCopy for MatterAttributeDataBuilder(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_251A1A4B8(*(void *)a2, v4);
  uint64_t v5 = *(void *)a1;
  *(void *)a1 = v3;
  char v6 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v4;
  sub_251A4EBDC(v5, v6);
  return a1;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)unint64_t result = v2;
  return result;
}

uint64_t assignWithTake for MatterAttributeDataBuilder(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)a1;
  *(void *)a1 = *(void *)a2;
  char v5 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  sub_251A4EBDC(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for MatterAttributeDataBuilder(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MatterAttributeDataBuilder(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_251AA4900(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_251AA4908(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for MatterAttributeDataBuilder()
{
  return &type metadata for MatterAttributeDataBuilder;
}

void sub_251AA4920(uint64_t a1)
{
  uint64_t v27 = a1 + 64;
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  unint64_t v4 = v3 & *(void *)(a1 + 64);
  int64_t v28 = (unint64_t)(v2 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v5 = 0;
  char v6 = (void *)MEMORY[0x263F8EE78];
  if (!v4) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v7 = __clz(__rbit64(v4));
  v4 &= v4 - 1;
  for (unint64_t i = v7 | (v5 << 6); ; unint64_t i = __clz(__rbit64(v10)) + (v5 << 6))
  {
    uint64_t v12 = *(void *)(a1 + 56) + 16 * i;
    uint64_t v13 = *(void *)v12;
    char v14 = *(unsigned char *)(v12 + 8);
    sub_251A1A4B8(*(void *)v12, v14);
    unint64_t v15 = (void *)sub_251F36D40();
    uint64_t v16 = (void *)sub_251F36D60();
    uint64_t v17 = (void *)sub_251F36D60();
    id v18 = objc_msgSend(self, sel_attributePathWithEndpointID_clusterID_attributeID_, v15, v16, v17);

    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D6B0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_251F3A500;
    *(void *)(inited + 32) = sub_251F356F0();
    *(void *)(inited + 40) = v20;
    *(void *)(inited + 48) = v18;
    *(void *)(inited + 56) = sub_251F356F0();
    *(void *)(inited + 64) = v21;
    id v22 = v18;
    sub_251AA3F7C();
    sub_251A4EBDC(v13, v14);
    sub_251AA88D0();
    uint64_t v23 = sub_251F35540();
    swift_bridgeObjectRelease();
    *(void *)(inited + 72) = v23;
    unint64_t v24 = sub_2519FA460(inited);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      char v6 = sub_251F0F8C8(0, v6[2] + 1, 1, v6);
    }
    unint64_t v26 = v6[2];
    unint64_t v25 = v6[3];
    if (v26 >= v25 >> 1) {
      char v6 = sub_251F0F8C8((void *)(v25 > 1), v26 + 1, 1, v6);
    }
    v6[2] = v26 + 1;
    v6[v26 + 4] = v24;

    if (v4) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v9 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v9 >= v28) {
      goto LABEL_25;
    }
    unint64_t v10 = *(void *)(v27 + 8 * v9);
    ++v5;
    if (!v10)
    {
      int64_t v5 = v9 + 1;
      if (v9 + 1 >= v28) {
        goto LABEL_25;
      }
      unint64_t v10 = *(void *)(v27 + 8 * v5);
      if (!v10)
      {
        int64_t v5 = v9 + 2;
        if (v9 + 2 >= v28) {
          goto LABEL_25;
        }
        unint64_t v10 = *(void *)(v27 + 8 * v5);
        if (!v10) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v4 = (v10 - 1) & v10;
  }
  int64_t v11 = v9 + 3;
  if (v11 >= v28)
  {
LABEL_25:
    swift_release();
    sub_251EEC5F8((uint64_t)v6);
    swift_bridgeObjectRelease();
    return;
  }
  unint64_t v10 = *(void *)(v27 + 8 * v11);
  if (v10)
  {
    int64_t v5 = v11;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v5 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v5 >= v28) {
      goto LABEL_25;
    }
    unint64_t v10 = *(void *)(v27 + 8 * v5);
    ++v11;
    if (v10) {
      goto LABEL_18;
    }
  }
LABEL_27:
  __break(1u);
}

uint64_t sub_251AA4C88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[34] = a6;
  v7[35] = a7;
  v7[32] = a4;
  v7[33] = a5;
  v7[30] = a2;
  v7[31] = a3;
  v7[29] = a1;
  return MEMORY[0x270FA2498](sub_251AA4CB4, 0, 0);
}

uint64_t sub_251AA4CB4()
{
  uint64_t v34 = v0;
  if (qword_26B21ECD0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_251F350A0();
  v0[36] = __swift_project_value_buffer(v1, (uint64_t)qword_26B21ECB8);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_251F35080();
  os_log_type_t v3 = sub_251F35FD0();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = v0[34];
  if (v4)
  {
    uint64_t v29 = v0[29];
    uint64_t v6 = v0[33];
    uint64_t v30 = v0[32];
    unint64_t v7 = v0[30];
    uint64_t v8 = swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315650;
    uint64_t v33 = v31;
    swift_bridgeObjectRetain();
    v0[25] = sub_251A00E84(v6, v5, &v33);
    sub_251F361D0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 12) = 2080;
    swift_bridgeObjectRetain();
    v0[26] = sub_251A00E84(v29, v7, &v33);
    sub_251F361D0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 22) = 2080;
    v0[27] = v30;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D698);
    uint64_t v9 = sub_251F35790();
    v0[28] = sub_251A00E84(v9, v10, &v33);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v31, -1, -1);
    MEMORY[0x2533AC760](v8, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  int64_t v11 = (void *)v0[31];
  if (v11)
  {
    uint64_t v12 = qword_269B9C330;
    id v13 = v11;
    if (v12 != -1) {
      swift_once();
    }
    uint64_t v14 = v0[32];
    swift_beginAccess();
    unint64_t v15 = (void *)qword_269B9FC18;
    v0[37] = qword_269B9FC18;
    if (!v15) {
      uint64_t v14 = 0;
    }
    id v16 = v15;
    uint64_t v17 = (void *)swift_task_alloc();
    v0[38] = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_251AA524C;
    uint64_t v18 = v0[35];
    return sub_251EF2768((uint64_t)(v0 + 10), (uint64_t)v13, v14, (uint64_t)v15, v18);
  }
  else
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v20 = sub_251F35080();
    os_log_type_t v21 = sub_251F35FB0();
    BOOL v22 = os_log_type_enabled(v20, v21);
    unint64_t v23 = v0[34];
    if (v22)
    {
      uint64_t v24 = v0[33];
      unint64_t v25 = v0[30];
      uint64_t v32 = v0[29];
      uint64_t v26 = swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      uint64_t v33 = v27;
      *(_DWORD *)uint64_t v26 = 136315394;
      swift_bridgeObjectRetain();
      v0[23] = sub_251A00E84(v24, v23, &v33);
      sub_251F361D0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v26 + 12) = 2080;
      swift_bridgeObjectRetain();
      v0[20] = sub_251A00E84(v32, v25, &v33);
      sub_251F361D0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2519F3000, v20, v21, "%s: tried running command %s but cluster was nil", (uint8_t *)v26, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v27, -1, -1);
      MEMORY[0x2533AC760](v26, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }

    int64_t v28 = (uint64_t (*)(void))v0[1];
    return v28();
  }
}

uint64_t sub_251AA524C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 312) = v0;
  swift_task_dealloc();
  if (v0)
  {
    os_log_type_t v3 = sub_251AA8920;
  }
  else
  {

    os_log_type_t v3 = sub_251AA8918;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_251AA5368(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[34] = a6;
  v7[35] = a7;
  v7[32] = a4;
  v7[33] = a5;
  v7[30] = a2;
  v7[31] = a3;
  v7[29] = a1;
  return MEMORY[0x270FA2498](sub_251AA5394, 0, 0);
}

uint64_t sub_251AA5394()
{
  uint64_t v34 = v0;
  if (qword_26B21ECD0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_251F350A0();
  v0[36] = __swift_project_value_buffer(v1, (uint64_t)qword_26B21ECB8);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_251F35080();
  os_log_type_t v3 = sub_251F35FD0();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = v0[34];
  if (v4)
  {
    uint64_t v29 = v0[29];
    uint64_t v6 = v0[33];
    uint64_t v30 = v0[32];
    unint64_t v7 = v0[30];
    uint64_t v8 = swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315650;
    uint64_t v33 = v31;
    swift_bridgeObjectRetain();
    v0[25] = sub_251A00E84(v6, v5, &v33);
    sub_251F361D0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 12) = 2080;
    swift_bridgeObjectRetain();
    v0[26] = sub_251A00E84(v29, v7, &v33);
    sub_251F361D0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 22) = 2080;
    v0[27] = v30;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D698);
    uint64_t v9 = sub_251F35790();
    v0[28] = sub_251A00E84(v9, v10, &v33);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v31, -1, -1);
    MEMORY[0x2533AC760](v8, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  int64_t v11 = (void *)v0[31];
  if (v11)
  {
    uint64_t v12 = qword_269B9C330;
    id v13 = v11;
    if (v12 != -1) {
      swift_once();
    }
    uint64_t v14 = v0[32];
    swift_beginAccess();
    unint64_t v15 = (void *)qword_269B9FC18;
    v0[37] = qword_269B9FC18;
    if (!v15) {
      uint64_t v14 = 0;
    }
    id v16 = v15;
    uint64_t v17 = (void *)swift_task_alloc();
    v0[38] = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_251AA524C;
    uint64_t v18 = v0[35];
    return sub_251A5F3B8((uint64_t)(v0 + 10), (uint64_t)v13, v14, (uint64_t)v15, v18);
  }
  else
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v20 = sub_251F35080();
    os_log_type_t v21 = sub_251F35FB0();
    BOOL v22 = os_log_type_enabled(v20, v21);
    unint64_t v23 = v0[34];
    if (v22)
    {
      uint64_t v24 = v0[33];
      unint64_t v25 = v0[30];
      uint64_t v32 = v0[29];
      uint64_t v26 = swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      uint64_t v33 = v27;
      *(_DWORD *)uint64_t v26 = 136315394;
      swift_bridgeObjectRetain();
      v0[23] = sub_251A00E84(v24, v23, &v33);
      sub_251F361D0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v26 + 12) = 2080;
      swift_bridgeObjectRetain();
      v0[20] = sub_251A00E84(v32, v25, &v33);
      sub_251F361D0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2519F3000, v20, v21, "%s: tried running command %s but cluster was nil", (uint8_t *)v26, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v27, -1, -1);
      MEMORY[0x2533AC760](v26, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }

    int64_t v28 = (uint64_t (*)(void))v0[1];
    return v28();
  }
}

uint64_t sub_251AA592C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[34] = a6;
  v7[35] = a7;
  v7[32] = a4;
  v7[33] = a5;
  v7[30] = a2;
  v7[31] = a3;
  v7[29] = a1;
  return MEMORY[0x270FA2498](sub_251AA5958, 0, 0);
}

uint64_t sub_251AA5958()
{
  uint64_t v34 = v0;
  if (qword_26B21ECD0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_251F350A0();
  v0[36] = __swift_project_value_buffer(v1, (uint64_t)qword_26B21ECB8);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_251F35080();
  os_log_type_t v3 = sub_251F35FD0();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = v0[34];
  if (v4)
  {
    uint64_t v29 = v0[29];
    uint64_t v6 = v0[33];
    uint64_t v30 = v0[32];
    unint64_t v7 = v0[30];
    uint64_t v8 = swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315650;
    uint64_t v33 = v31;
    swift_bridgeObjectRetain();
    v0[25] = sub_251A00E84(v6, v5, &v33);
    sub_251F361D0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 12) = 2080;
    swift_bridgeObjectRetain();
    v0[26] = sub_251A00E84(v29, v7, &v33);
    sub_251F361D0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 22) = 2080;
    v0[27] = v30;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D698);
    uint64_t v9 = sub_251F35790();
    v0[28] = sub_251A00E84(v9, v10, &v33);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v31, -1, -1);
    MEMORY[0x2533AC760](v8, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  int64_t v11 = (void *)v0[31];
  if (v11)
  {
    uint64_t v12 = qword_269B9C330;
    id v13 = v11;
    if (v12 != -1) {
      swift_once();
    }
    uint64_t v14 = v0[32];
    swift_beginAccess();
    unint64_t v15 = (void *)qword_269B9FC18;
    v0[37] = qword_269B9FC18;
    if (!v15) {
      uint64_t v14 = 0;
    }
    id v16 = v15;
    uint64_t v17 = (void *)swift_task_alloc();
    v0[38] = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_251AA5EF0;
    uint64_t v18 = v0[35];
    return sub_251E605C8((uint64_t)(v0 + 10), (uint64_t)v13, v14, (uint64_t)v15, v18);
  }
  else
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v20 = sub_251F35080();
    os_log_type_t v21 = sub_251F35FB0();
    BOOL v22 = os_log_type_enabled(v20, v21);
    unint64_t v23 = v0[34];
    if (v22)
    {
      uint64_t v24 = v0[33];
      unint64_t v25 = v0[30];
      uint64_t v32 = v0[29];
      uint64_t v26 = swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      uint64_t v33 = v27;
      *(_DWORD *)uint64_t v26 = 136315394;
      swift_bridgeObjectRetain();
      v0[23] = sub_251A00E84(v24, v23, &v33);
      sub_251F361D0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v26 + 12) = 2080;
      swift_bridgeObjectRetain();
      v0[20] = sub_251A00E84(v32, v25, &v33);
      sub_251F361D0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2519F3000, v20, v21, "%s: tried running command %s but cluster was nil", (uint8_t *)v26, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v27, -1, -1);
      MEMORY[0x2533AC760](v26, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }

    int64_t v28 = (uint64_t (*)(void))v0[1];
    return v28();
  }
}

uint64_t sub_251AA5EF0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 312) = v0;
  swift_task_dealloc();
  if (v0)
  {
    os_log_type_t v3 = sub_251AA62CC;
  }
  else
  {

    os_log_type_t v3 = sub_251AA600C;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_251AA600C()
{
  id v16 = v0;
  sub_251AA82A4((uint64_t)(v0 + 10), (uint64_t)(v0 + 6));
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v1 = sub_251F35080();
  os_log_type_t v2 = sub_251F35FD0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v4 = v0[33];
    unint64_t v3 = v0[34];
    unint64_t v5 = v0[30];
    uint64_t v14 = (void *)v0[31];
    uint64_t v12 = v0[29];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    uint64_t v15 = v13;
    *(_DWORD *)uint64_t v6 = 136315650;
    swift_bridgeObjectRetain();
    v0[21] = sub_251A00E84(v4, v3, &v15);
    sub_251F361D0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v6 + 12) = 2080;
    swift_bridgeObjectRetain();
    v0[22] = sub_251A00E84(v12, v5, &v15);
    sub_251F361D0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v6 + 22) = 2080;
    sub_251AA82A4((uint64_t)(v0 + 6), (uint64_t)(v0 + 2));
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E190);
    uint64_t v7 = sub_251F35790();
    v0[24] = sub_251A00E84(v7, v8, &v15);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    sub_251A9090C((uint64_t)(v0 + 6));
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v13, -1, -1);
    MEMORY[0x2533AC760](v6, -1, -1);
  }
  else
  {
    uint64_t v9 = (void *)v0[31];

    sub_251A9090C((uint64_t)(v0 + 6));
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  sub_251A9090C((uint64_t)(v0 + 10));
  unint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_251AA62CC()
{
  uint64_t v22 = v0;
  uint64_t v1 = v0;
  os_log_type_t v2 = *(void **)(v0 + 312);

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v3 = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v4 = v2;
  unint64_t v5 = sub_251F35080();
  os_log_type_t v6 = sub_251F35FB0();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = *(void **)(v1 + 312);
    uint64_t v8 = *(void *)(v1 + 264);
    unint64_t v9 = *(void *)(v1 + 272);
    unint64_t v10 = *(void *)(v1 + 240);
    uint64_t v20 = *(void **)(v1 + 248);
    uint64_t v17 = *(void *)(v1 + 232);
    uint64_t v11 = swift_slowAlloc();
    uint64_t v18 = (void *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    uint64_t v21 = v19;
    *(_DWORD *)uint64_t v11 = 136315650;
    swift_bridgeObjectRetain();
    *(void *)(v1 + 136) = sub_251A00E84(v8, v9, &v21);
    sub_251F361D0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v11 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(void *)(v1 + 144) = sub_251A00E84(v17, v10, &v21);
    sub_251F361D0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v11 + 22) = 2112;
    id v12 = v7;
    uint64_t v13 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v1 + 152) = v13;
    sub_251F361D0();
    *uint64_t v18 = v13;

    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v18, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v19, -1, -1);
    MEMORY[0x2533AC760](v11, -1, -1);
  }
  else
  {
    uint64_t v14 = *(void **)(v1 + 312);

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v15 = *(uint64_t (**)(void))(v1 + 8);
  return v15();
}

uint64_t sub_251AA65D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[34] = a6;
  v7[35] = a7;
  v7[32] = a4;
  v7[33] = a5;
  v7[30] = a2;
  v7[31] = a3;
  v7[29] = a1;
  return MEMORY[0x270FA2498](sub_251AA65FC, 0, 0);
}

uint64_t sub_251AA65FC()
{
  uint64_t v34 = v0;
  if (qword_26B21ECD0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_251F350A0();
  v0[36] = __swift_project_value_buffer(v1, (uint64_t)qword_26B21ECB8);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  os_log_type_t v2 = sub_251F35080();
  os_log_type_t v3 = sub_251F35FD0();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = v0[34];
  if (v4)
  {
    uint64_t v29 = v0[29];
    uint64_t v6 = v0[33];
    uint64_t v30 = v0[32];
    unint64_t v7 = v0[30];
    uint64_t v8 = swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315650;
    uint64_t v33 = v31;
    swift_bridgeObjectRetain();
    v0[25] = sub_251A00E84(v6, v5, &v33);
    sub_251F361D0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 12) = 2080;
    swift_bridgeObjectRetain();
    v0[26] = sub_251A00E84(v29, v7, &v33);
    sub_251F361D0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 22) = 2080;
    v0[27] = v30;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D698);
    uint64_t v9 = sub_251F35790();
    v0[28] = sub_251A00E84(v9, v10, &v33);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v31, -1, -1);
    MEMORY[0x2533AC760](v8, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  uint64_t v11 = (void *)v0[31];
  if (v11)
  {
    uint64_t v12 = qword_269B9C330;
    id v13 = v11;
    if (v12 != -1) {
      swift_once();
    }
    uint64_t v14 = v0[32];
    swift_beginAccess();
    uint64_t v15 = (void *)qword_269B9FC18;
    v0[37] = qword_269B9FC18;
    if (!v15) {
      uint64_t v14 = 0;
    }
    id v16 = v15;
    uint64_t v17 = (void *)swift_task_alloc();
    v0[38] = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_251AA524C;
    uint64_t v18 = v0[35];
    return sub_251A8E67C((uint64_t)(v0 + 10), (uint64_t)v13, v14, (uint64_t)v15, v18);
  }
  else
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v20 = sub_251F35080();
    os_log_type_t v21 = sub_251F35FB0();
    BOOL v22 = os_log_type_enabled(v20, v21);
    unint64_t v23 = v0[34];
    if (v22)
    {
      uint64_t v24 = v0[33];
      unint64_t v25 = v0[30];
      uint64_t v32 = v0[29];
      uint64_t v26 = swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      uint64_t v33 = v27;
      *(_DWORD *)uint64_t v26 = 136315394;
      swift_bridgeObjectRetain();
      v0[23] = sub_251A00E84(v24, v23, &v33);
      sub_251F361D0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v26 + 12) = 2080;
      swift_bridgeObjectRetain();
      v0[20] = sub_251A00E84(v32, v25, &v33);
      sub_251F361D0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2519F3000, v20, v21, "%s: tried running command %s but cluster was nil", (uint8_t *)v26, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v27, -1, -1);
      MEMORY[0x2533AC760](v26, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }

    int64_t v28 = (uint64_t (*)(void))v0[1];
    return v28();
  }
}

uint64_t sub_251AA6B94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[34] = a6;
  v7[35] = a7;
  v7[32] = a4;
  v7[33] = a5;
  v7[30] = a2;
  v7[31] = a3;
  v7[29] = a1;
  return MEMORY[0x270FA2498](sub_251AA6BC0, 0, 0);
}

uint64_t sub_251AA6BC0()
{
  uint64_t v34 = v0;
  if (qword_26B21ECD0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_251F350A0();
  v0[36] = __swift_project_value_buffer(v1, (uint64_t)qword_26B21ECB8);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  os_log_type_t v2 = sub_251F35080();
  os_log_type_t v3 = sub_251F35FD0();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = v0[34];
  if (v4)
  {
    uint64_t v29 = v0[29];
    uint64_t v6 = v0[33];
    uint64_t v30 = v0[32];
    unint64_t v7 = v0[30];
    uint64_t v8 = swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315650;
    uint64_t v33 = v31;
    swift_bridgeObjectRetain();
    v0[25] = sub_251A00E84(v6, v5, &v33);
    sub_251F361D0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 12) = 2080;
    swift_bridgeObjectRetain();
    v0[26] = sub_251A00E84(v29, v7, &v33);
    sub_251F361D0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 22) = 2080;
    v0[27] = v30;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D698);
    uint64_t v9 = sub_251F35790();
    v0[28] = sub_251A00E84(v9, v10, &v33);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v31, -1, -1);
    MEMORY[0x2533AC760](v8, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  uint64_t v11 = (void *)v0[31];
  if (v11)
  {
    uint64_t v12 = qword_269B9C330;
    id v13 = v11;
    if (v12 != -1) {
      swift_once();
    }
    uint64_t v14 = v0[32];
    swift_beginAccess();
    uint64_t v15 = (void *)qword_269B9FC18;
    v0[37] = qword_269B9FC18;
    if (!v15) {
      uint64_t v14 = 0;
    }
    id v16 = v15;
    uint64_t v17 = (void *)swift_task_alloc();
    v0[38] = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_251AA524C;
    uint64_t v18 = v0[35];
    return sub_251A8EF7C((uint64_t)(v0 + 10), (uint64_t)v13, v14, (uint64_t)v15, v18);
  }
  else
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v20 = sub_251F35080();
    os_log_type_t v21 = sub_251F35FB0();
    BOOL v22 = os_log_type_enabled(v20, v21);
    unint64_t v23 = v0[34];
    if (v22)
    {
      uint64_t v24 = v0[33];
      unint64_t v25 = v0[30];
      uint64_t v32 = v0[29];
      uint64_t v26 = swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      uint64_t v33 = v27;
      *(_DWORD *)uint64_t v26 = 136315394;
      swift_bridgeObjectRetain();
      v0[23] = sub_251A00E84(v24, v23, &v33);
      sub_251F361D0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v26 + 12) = 2080;
      swift_bridgeObjectRetain();
      v0[20] = sub_251A00E84(v32, v25, &v33);
      sub_251F361D0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2519F3000, v20, v21, "%s: tried running command %s but cluster was nil", (uint8_t *)v26, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v27, -1, -1);
      MEMORY[0x2533AC760](v26, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }

    int64_t v28 = (uint64_t (*)(void))v0[1];
    return v28();
  }
}

uint64_t sub_251AA7158(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[34] = a6;
  v7[35] = a7;
  v7[32] = a4;
  v7[33] = a5;
  v7[30] = a2;
  v7[31] = a3;
  v7[29] = a1;
  return MEMORY[0x270FA2498](sub_251AA7184, 0, 0);
}

uint64_t sub_251AA7184()
{
  uint64_t v34 = v0;
  if (qword_26B21ECD0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_251F350A0();
  v0[36] = __swift_project_value_buffer(v1, (uint64_t)qword_26B21ECB8);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  os_log_type_t v2 = sub_251F35080();
  os_log_type_t v3 = sub_251F35FD0();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = v0[34];
  if (v4)
  {
    uint64_t v29 = v0[29];
    uint64_t v6 = v0[33];
    uint64_t v30 = v0[32];
    unint64_t v7 = v0[30];
    uint64_t v8 = swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315650;
    uint64_t v33 = v31;
    swift_bridgeObjectRetain();
    v0[25] = sub_251A00E84(v6, v5, &v33);
    sub_251F361D0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 12) = 2080;
    swift_bridgeObjectRetain();
    v0[26] = sub_251A00E84(v29, v7, &v33);
    sub_251F361D0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 22) = 2080;
    v0[27] = v30;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D698);
    uint64_t v9 = sub_251F35790();
    v0[28] = sub_251A00E84(v9, v10, &v33);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v31, -1, -1);
    MEMORY[0x2533AC760](v8, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  uint64_t v11 = (void *)v0[31];
  if (v11)
  {
    uint64_t v12 = qword_269B9C330;
    id v13 = v11;
    if (v12 != -1) {
      swift_once();
    }
    uint64_t v14 = v0[32];
    swift_beginAccess();
    uint64_t v15 = (void *)qword_269B9FC18;
    v0[37] = qword_269B9FC18;
    if (!v15) {
      uint64_t v14 = 0;
    }
    id v16 = v15;
    uint64_t v17 = (void *)swift_task_alloc();
    v0[38] = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_251AA524C;
    uint64_t v18 = v0[35];
    return sub_251A8F7F4((uint64_t)(v0 + 10), (uint64_t)v13, v14, (uint64_t)v15, v18);
  }
  else
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v20 = sub_251F35080();
    os_log_type_t v21 = sub_251F35FB0();
    BOOL v22 = os_log_type_enabled(v20, v21);
    unint64_t v23 = v0[34];
    if (v22)
    {
      uint64_t v24 = v0[33];
      unint64_t v25 = v0[30];
      uint64_t v32 = v0[29];
      uint64_t v26 = swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      uint64_t v33 = v27;
      *(_DWORD *)uint64_t v26 = 136315394;
      swift_bridgeObjectRetain();
      v0[23] = sub_251A00E84(v24, v23, &v33);
      sub_251F361D0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v26 + 12) = 2080;
      swift_bridgeObjectRetain();
      v0[20] = sub_251A00E84(v32, v25, &v33);
      sub_251F361D0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2519F3000, v20, v21, "%s: tried running command %s but cluster was nil", (uint8_t *)v26, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v27, -1, -1);
      MEMORY[0x2533AC760](v26, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }

    int64_t v28 = (uint64_t (*)(void))v0[1];
    return v28();
  }
}

uint64_t sub_251AA771C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[34] = a6;
  v7[35] = a7;
  v7[32] = a4;
  v7[33] = a5;
  v7[30] = a2;
  v7[31] = a3;
  v7[29] = a1;
  return MEMORY[0x270FA2498](sub_251AA7748, 0, 0);
}

uint64_t sub_251AA7748()
{
  uint64_t v34 = v0;
  if (qword_26B21ECD0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_251F350A0();
  v0[36] = __swift_project_value_buffer(v1, (uint64_t)qword_26B21ECB8);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  os_log_type_t v2 = sub_251F35080();
  os_log_type_t v3 = sub_251F35FD0();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = v0[34];
  if (v4)
  {
    uint64_t v29 = v0[29];
    uint64_t v6 = v0[33];
    uint64_t v30 = v0[32];
    unint64_t v7 = v0[30];
    uint64_t v8 = swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315650;
    uint64_t v33 = v31;
    swift_bridgeObjectRetain();
    v0[25] = sub_251A00E84(v6, v5, &v33);
    sub_251F361D0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 12) = 2080;
    swift_bridgeObjectRetain();
    v0[26] = sub_251A00E84(v29, v7, &v33);
    sub_251F361D0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 22) = 2080;
    v0[27] = v30;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D698);
    uint64_t v9 = sub_251F35790();
    v0[28] = sub_251A00E84(v9, v10, &v33);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v31, -1, -1);
    MEMORY[0x2533AC760](v8, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  uint64_t v11 = (void *)v0[31];
  if (v11)
  {
    uint64_t v12 = qword_269B9C330;
    id v13 = v11;
    if (v12 != -1) {
      swift_once();
    }
    uint64_t v14 = v0[32];
    swift_beginAccess();
    uint64_t v15 = (void *)qword_269B9FC18;
    v0[37] = qword_269B9FC18;
    if (!v15) {
      uint64_t v14 = 0;
    }
    id v16 = v15;
    uint64_t v17 = (void *)swift_task_alloc();
    v0[38] = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_251AA524C;
    uint64_t v18 = v0[35];
    return sub_251A8FD88((uint64_t)(v0 + 10), (uint64_t)v13, v14, (uint64_t)v15, v18);
  }
  else
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v20 = sub_251F35080();
    os_log_type_t v21 = sub_251F35FB0();
    BOOL v22 = os_log_type_enabled(v20, v21);
    unint64_t v23 = v0[34];
    if (v22)
    {
      uint64_t v24 = v0[33];
      unint64_t v25 = v0[30];
      uint64_t v32 = v0[29];
      uint64_t v26 = swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      uint64_t v33 = v27;
      *(_DWORD *)uint64_t v26 = 136315394;
      swift_bridgeObjectRetain();
      v0[23] = sub_251A00E84(v24, v23, &v33);
      sub_251F361D0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v26 + 12) = 2080;
      swift_bridgeObjectRetain();
      v0[20] = sub_251A00E84(v32, v25, &v33);
      sub_251F361D0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2519F3000, v20, v21, "%s: tried running command %s but cluster was nil", (uint8_t *)v26, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v27, -1, -1);
      MEMORY[0x2533AC760](v26, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }

    int64_t v28 = (uint64_t (*)(void))v0[1];
    return v28();
  }
}

uint64_t sub_251AA7CE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[34] = a6;
  v7[35] = a7;
  v7[32] = a4;
  v7[33] = a5;
  v7[30] = a2;
  v7[31] = a3;
  v7[29] = a1;
  return MEMORY[0x270FA2498](sub_251AA7D0C, 0, 0);
}

uint64_t sub_251AA7D0C()
{
  uint64_t v34 = v0;
  if (qword_26B21ECD0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_251F350A0();
  v0[36] = __swift_project_value_buffer(v1, (uint64_t)qword_26B21ECB8);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  os_log_type_t v2 = sub_251F35080();
  os_log_type_t v3 = sub_251F35FD0();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = v0[34];
  if (v4)
  {
    uint64_t v29 = v0[29];
    uint64_t v6 = v0[33];
    uint64_t v30 = v0[32];
    unint64_t v7 = v0[30];
    uint64_t v8 = swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315650;
    uint64_t v33 = v31;
    swift_bridgeObjectRetain();
    v0[25] = sub_251A00E84(v6, v5, &v33);
    sub_251F361D0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 12) = 2080;
    swift_bridgeObjectRetain();
    v0[26] = sub_251A00E84(v29, v7, &v33);
    sub_251F361D0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 22) = 2080;
    v0[27] = v30;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D698);
    uint64_t v9 = sub_251F35790();
    v0[28] = sub_251A00E84(v9, v10, &v33);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v31, -1, -1);
    MEMORY[0x2533AC760](v8, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  uint64_t v11 = (void *)v0[31];
  if (v11)
  {
    uint64_t v12 = qword_269B9C330;
    id v13 = v11;
    if (v12 != -1) {
      swift_once();
    }
    uint64_t v14 = v0[32];
    swift_beginAccess();
    uint64_t v15 = (void *)qword_269B9FC18;
    v0[37] = qword_269B9FC18;
    if (!v15) {
      uint64_t v14 = 0;
    }
    id v16 = v15;
    uint64_t v17 = (void *)swift_task_alloc();
    v0[38] = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_251AA524C;
    uint64_t v18 = v0[35];
    return sub_251EF347C((uint64_t)(v0 + 10), (uint64_t)v13, v14, (uint64_t)v15, v18);
  }
  else
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v20 = sub_251F35080();
    os_log_type_t v21 = sub_251F35FB0();
    BOOL v22 = os_log_type_enabled(v20, v21);
    unint64_t v23 = v0[34];
    if (v22)
    {
      uint64_t v24 = v0[33];
      unint64_t v25 = v0[30];
      uint64_t v32 = v0[29];
      uint64_t v26 = swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      uint64_t v33 = v27;
      *(_DWORD *)uint64_t v26 = 136315394;
      swift_bridgeObjectRetain();
      v0[23] = sub_251A00E84(v24, v23, &v33);
      sub_251F361D0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v26 + 12) = 2080;
      swift_bridgeObjectRetain();
      v0[20] = sub_251A00E84(v32, v25, &v33);
      sub_251F361D0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2519F3000, v20, v21, "%s: tried running command %s but cluster was nil", (uint8_t *)v26, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v27, -1, -1);
      MEMORY[0x2533AC760](v26, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }

    int64_t v28 = (uint64_t (*)(void))v0[1];
    return v28();
  }
}

uint64_t sub_251AA82A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E190);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_251AA830C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[34] = a6;
  v7[35] = a7;
  v7[32] = a4;
  v7[33] = a5;
  v7[30] = a2;
  v7[31] = a3;
  v7[29] = a1;
  return MEMORY[0x270FA2498](sub_251AA8338, 0, 0);
}

uint64_t sub_251AA8338()
{
  uint64_t v34 = v0;
  if (qword_26B21ECD0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_251F350A0();
  v0[36] = __swift_project_value_buffer(v1, (uint64_t)qword_26B21ECB8);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  os_log_type_t v2 = sub_251F35080();
  os_log_type_t v3 = sub_251F35FD0();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = v0[34];
  if (v4)
  {
    uint64_t v29 = v0[29];
    uint64_t v6 = v0[33];
    uint64_t v30 = v0[32];
    unint64_t v7 = v0[30];
    uint64_t v8 = swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315650;
    uint64_t v33 = v31;
    swift_bridgeObjectRetain();
    v0[25] = sub_251A00E84(v6, v5, &v33);
    sub_251F361D0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 12) = 2080;
    swift_bridgeObjectRetain();
    v0[26] = sub_251A00E84(v29, v7, &v33);
    sub_251F361D0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 22) = 2080;
    v0[27] = v30;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D698);
    uint64_t v9 = sub_251F35790();
    v0[28] = sub_251A00E84(v9, v10, &v33);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v31, -1, -1);
    MEMORY[0x2533AC760](v8, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  uint64_t v11 = (void *)v0[31];
  if (v11)
  {
    uint64_t v12 = qword_269B9C330;
    id v13 = v11;
    if (v12 != -1) {
      swift_once();
    }
    uint64_t v14 = v0[32];
    swift_beginAccess();
    uint64_t v15 = (void *)qword_269B9FC18;
    v0[37] = qword_269B9FC18;
    if (!v15) {
      uint64_t v14 = 0;
    }
    id v16 = v15;
    uint64_t v17 = (void *)swift_task_alloc();
    v0[38] = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_251AA524C;
    uint64_t v18 = v0[35];
    return sub_251B6FEF4((uint64_t)(v0 + 10), (uint64_t)v13, v14, (uint64_t)v15, v18);
  }
  else
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v20 = sub_251F35080();
    os_log_type_t v21 = sub_251F35FB0();
    BOOL v22 = os_log_type_enabled(v20, v21);
    unint64_t v23 = v0[34];
    if (v22)
    {
      uint64_t v24 = v0[33];
      unint64_t v25 = v0[30];
      uint64_t v32 = v0[29];
      uint64_t v26 = swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      uint64_t v33 = v27;
      *(_DWORD *)uint64_t v26 = 136315394;
      swift_bridgeObjectRetain();
      v0[23] = sub_251A00E84(v24, v23, &v33);
      sub_251F361D0();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v26 + 12) = 2080;
      swift_bridgeObjectRetain();
      v0[20] = sub_251A00E84(v32, v25, &v33);
      sub_251F361D0();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2519F3000, v20, v21, "%s: tried running command %s but cluster was nil", (uint8_t *)v26, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v27, -1, -1);
      MEMORY[0x2533AC760](v26, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }

    int64_t v28 = (uint64_t (*)(void))v0[1];
    return v28();
  }
}

unint64_t sub_251AA88D0()
{
  unint64_t result = qword_26B21ECF8;
  if (!qword_26B21ECF8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B21ECF8);
  }
  return result;
}

void *sub_251AA8924(void *a1, void (*a2)(void **, id *), uint64_t a3, unint64_t a4)
{
  uint64_t v14 = a1;
  unint64_t v7 = a1;
  if (a4 >> 62) {
    goto LABEL_13;
  }
  uint64_t v8 = *(void *)((a4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v8; uint64_t v8 = sub_251F366C0())
  {
    for (uint64_t i = 4; ; ++i)
    {
      id v10 = (a4 & 0xC000000000000001) != 0 ? (id)MEMORY[0x2533AB3A0](i - 4, a4) : *(id *)(a4 + 8 * i);
      unint64_t v7 = v10;
      uint64_t v11 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      id v13 = v10;
      a2(&v14, &v13);
      if (v4)
      {
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        return v7;
      }

      if (v11 == v8)
      {
        swift_bridgeObjectRelease();
        return v14;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_251AA8A60(uint64_t a1, void (*a2)(uint64_t *, char *), uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for StaticAccessory(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v26 - v13;
  uint64_t v28 = a1;
  uint64_t v15 = *(void *)(a4 + 56);
  uint64_t v26 = a4 + 56;
  uint64_t v16 = 1 << *(unsigned char *)(a4 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & v15;
  int64_t v27 = (unint64_t)(v16 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v20 = 0;
  while (v18)
  {
    unint64_t v21 = __clz(__rbit64(v18));
    v18 &= v18 - 1;
    unint64_t v22 = v21 | (v20 << 6);
LABEL_5:
    sub_251AB3C1C(*(void *)(a4 + 48) + *(void *)(v9 + 72) * v22, (uint64_t)v14, type metadata accessor for StaticAccessory);
    sub_251AB3CE4((uint64_t)v14, (uint64_t)v12, type metadata accessor for StaticAccessory);
    a2(&v28, v12);
    uint64_t result = sub_251AB3C84((uint64_t)v12, type metadata accessor for StaticAccessory);
    if (v4) {
      return swift_release();
    }
  }
  if (__OFADD__(v20++, 1))
  {
    __break(1u);
    goto LABEL_27;
  }
  if (v20 >= v27) {
    goto LABEL_25;
  }
  unint64_t v24 = *(void *)(v26 + 8 * v20);
  if (v24)
  {
LABEL_19:
    unint64_t v18 = (v24 - 1) & v24;
    unint64_t v22 = __clz(__rbit64(v24)) + (v20 << 6);
    goto LABEL_5;
  }
  int64_t v25 = v20 + 1;
  if (v20 + 1 >= v27) {
    goto LABEL_25;
  }
  unint64_t v24 = *(void *)(v26 + 8 * v25);
  if (v24) {
    goto LABEL_18;
  }
  int64_t v25 = v20 + 2;
  if (v20 + 2 >= v27) {
    goto LABEL_25;
  }
  unint64_t v24 = *(void *)(v26 + 8 * v25);
  if (v24) {
    goto LABEL_18;
  }
  int64_t v25 = v20 + 3;
  if (v20 + 3 >= v27) {
    goto LABEL_25;
  }
  unint64_t v24 = *(void *)(v26 + 8 * v25);
  if (v24) {
    goto LABEL_18;
  }
  int64_t v25 = v20 + 4;
  if (v20 + 4 >= v27)
  {
LABEL_25:
    swift_release();
    return v28;
  }
  unint64_t v24 = *(void *)(v26 + 8 * v25);
  if (v24)
  {
LABEL_18:
    int64_t v20 = v25;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v20 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v20 >= v27) {
      goto LABEL_25;
    }
    unint64_t v24 = *(void *)(v26 + 8 * v20);
    ++v25;
    if (v24) {
      goto LABEL_19;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_251AA8D24(uint64_t a1, void (*a2)(uint64_t *, char *), uint64_t a3, uint64_t a4)
{
  uint64_t v22 = a1;
  uint64_t v7 = a4 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(a4 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(a4 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v13 = 0;
  if (!v10) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v14 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (unint64_t i = v14 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v17)) + (v13 << 6))
  {
    uint64_t v19 = *(void *)(*(void *)(a4 + 56) + 8 * i);
    v20[0] = *(unsigned char *)(*(void *)(a4 + 48) + i);
    uint64_t v21 = v19;
    swift_bridgeObjectRetain();
    a2(&v22, v20);
    if (v4)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    uint64_t result = swift_bridgeObjectRelease();
    if (v10) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v13++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v13 >= v11) {
      goto LABEL_26;
    }
    unint64_t v17 = *(void *)(v7 + 8 * v13);
    if (!v17) {
      break;
    }
LABEL_17:
    unint64_t v10 = (v17 - 1) & v17;
  }
  int64_t v18 = v13 + 1;
  if (v13 + 1 >= v11) {
    goto LABEL_26;
  }
  unint64_t v17 = *(void *)(v7 + 8 * v18);
  if (v17) {
    goto LABEL_16;
  }
  int64_t v18 = v13 + 2;
  if (v13 + 2 >= v11) {
    goto LABEL_26;
  }
  unint64_t v17 = *(void *)(v7 + 8 * v18);
  if (v17) {
    goto LABEL_16;
  }
  int64_t v18 = v13 + 3;
  if (v13 + 3 >= v11) {
    goto LABEL_26;
  }
  unint64_t v17 = *(void *)(v7 + 8 * v18);
  if (v17) {
    goto LABEL_16;
  }
  int64_t v18 = v13 + 4;
  if (v13 + 4 >= v11)
  {
LABEL_26:
    swift_release();
    return v22;
  }
  unint64_t v17 = *(void *)(v7 + 8 * v18);
  if (v17)
  {
LABEL_16:
    int64_t v13 = v18;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v13 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v13 >= v11) {
      goto LABEL_26;
    }
    unint64_t v17 = *(void *)(v7 + 8 * v13);
    ++v18;
    if (v17) {
      goto LABEL_17;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_251AA8EF0(uint64_t a1, void (*a2)(uint64_t *, _OWORD *), uint64_t a3, uint64_t a4)
{
  uint64_t v25 = a1;
  uint64_t v7 = a4 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(a4 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(a4 + 64);
  int64_t v20 = (unint64_t)(v8 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v12 = 0;
  if (!v10) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v13 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (unint64_t i = v13 | (v12 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v12 << 6))
  {
    int64_t v18 = *(void **)(*(void *)(a4 + 48) + 8 * i);
    sub_251A0D51C(*(void *)(a4 + 56) + 32 * i, (uint64_t)v23 + 8);
    *(void *)&v23[0] = v18;
    v21[0] = v23[0];
    v21[1] = v23[1];
    uint64_t v22 = v24;
    id v19 = v18;
    a2(&v25, v21);
    if (v4)
    {
      swift_bridgeObjectRelease();
      sub_251A1B064((uint64_t)v21, &qword_269B9D760);
      return swift_release();
    }
    uint64_t result = sub_251A1B064((uint64_t)v21, &qword_269B9D760);
    if (v10) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v12++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v12 >= v20) {
      goto LABEL_26;
    }
    unint64_t v16 = *(void *)(v7 + 8 * v12);
    if (!v16) {
      break;
    }
LABEL_17:
    unint64_t v10 = (v16 - 1) & v16;
  }
  int64_t v17 = v12 + 1;
  if (v12 + 1 >= v20) {
    goto LABEL_26;
  }
  unint64_t v16 = *(void *)(v7 + 8 * v17);
  if (v16) {
    goto LABEL_16;
  }
  int64_t v17 = v12 + 2;
  if (v12 + 2 >= v20) {
    goto LABEL_26;
  }
  unint64_t v16 = *(void *)(v7 + 8 * v17);
  if (v16) {
    goto LABEL_16;
  }
  int64_t v17 = v12 + 3;
  if (v12 + 3 >= v20) {
    goto LABEL_26;
  }
  unint64_t v16 = *(void *)(v7 + 8 * v17);
  if (v16) {
    goto LABEL_16;
  }
  int64_t v17 = v12 + 4;
  if (v12 + 4 >= v20)
  {
LABEL_26:
    swift_release();
    return v25;
  }
  unint64_t v16 = *(void *)(v7 + 8 * v17);
  if (v16)
  {
LABEL_16:
    int64_t v12 = v17;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v12 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v12 >= v20) {
      goto LABEL_26;
    }
    unint64_t v16 = *(void *)(v7 + 8 * v12);
    ++v17;
    if (v16) {
      goto LABEL_17;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_251AA9104(uint64_t a1, void (*a2)(uint64_t *, void *), uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v6 = a4;
  uint64_t v25 = a1;
  if ((a4 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_251F362B0();
    sub_251AB2D40();
    sub_251AB3D80((unint64_t *)&qword_26B21F158, (void (*)(uint64_t))sub_251AB2D40);
    sub_251F35E90();
    uint64_t v6 = v24[1];
    uint64_t v23 = v24[2];
    uint64_t v8 = v24[3];
    int64_t v9 = v24[4];
    unint64_t v10 = v24[5];
  }
  else
  {
    uint64_t v11 = -1 << *(unsigned char *)(a4 + 32);
    uint64_t v23 = a4 + 56;
    uint64_t v12 = ~v11;
    uint64_t v13 = -v11;
    if (v13 < 64) {
      uint64_t v14 = ~(-1 << v13);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v10 = v14 & *(void *)(a4 + 56);
    swift_bridgeObjectRetain();
    uint64_t v8 = v12;
    int64_t v9 = 0;
  }
  int64_t v22 = (unint64_t)(v8 + 64) >> 6;
  if ((v6 & 0x8000000000000000) == 0) {
    goto LABEL_11;
  }
LABEL_8:
  if (!sub_251F36340()) {
    goto LABEL_35;
  }
  sub_251AB2D40();
  swift_unknownObjectRetain();
  swift_dynamicCast();
  id v15 = (id)v24[0];
  swift_unknownObjectRelease();
  int64_t v16 = v9;
  uint64_t v17 = v10;
  if (!v15) {
    goto LABEL_35;
  }
  while (1)
  {
    v24[0] = v15;
    a2(&v25, v24);
    if (v5)
    {

      swift_bridgeObjectRelease();
      sub_251A1E630();
      return;
    }

    int64_t v9 = v16;
    unint64_t v10 = v17;
    if (v6 < 0) {
      goto LABEL_8;
    }
LABEL_11:
    if (!v10) {
      break;
    }
    uint64_t v17 = (v10 - 1) & v10;
    unint64_t v18 = __clz(__rbit64(v10)) | (v9 << 6);
    int64_t v16 = v9;
LABEL_24:
    id v15 = *(id *)(*(void *)(v6 + 48) + 8 * v18);
    if (!v15) {
      goto LABEL_35;
    }
  }
  int64_t v16 = v9 + 1;
  if (__OFADD__(v9, 1))
  {
    __break(1u);
    return;
  }
  if (v16 >= v22) {
    goto LABEL_35;
  }
  unint64_t v19 = *(void *)(v23 + 8 * v16);
  if (v19)
  {
LABEL_23:
    uint64_t v17 = (v19 - 1) & v19;
    unint64_t v18 = __clz(__rbit64(v19)) + (v16 << 6);
    goto LABEL_24;
  }
  int64_t v20 = v9 + 2;
  if (v9 + 2 >= v22) {
    goto LABEL_35;
  }
  unint64_t v19 = *(void *)(v23 + 8 * v20);
  if (v19) {
    goto LABEL_22;
  }
  int64_t v20 = v9 + 3;
  if (v9 + 3 >= v22) {
    goto LABEL_35;
  }
  unint64_t v19 = *(void *)(v23 + 8 * v20);
  if (v19) {
    goto LABEL_22;
  }
  int64_t v20 = v9 + 4;
  if (v9 + 4 >= v22) {
    goto LABEL_35;
  }
  unint64_t v19 = *(void *)(v23 + 8 * v20);
  if (v19)
  {
LABEL_22:
    int64_t v16 = v20;
    goto LABEL_23;
  }
  int64_t v16 = v9 + 5;
  if (v9 + 5 >= v22) {
    goto LABEL_35;
  }
  unint64_t v19 = *(void *)(v23 + 8 * v16);
  if (v19) {
    goto LABEL_23;
  }
  int64_t v21 = v9 + 6;
  while (v22 != v21)
  {
    unint64_t v19 = *(void *)(v23 + 8 * v21++);
    if (v19)
    {
      int64_t v16 = v21 - 1;
      goto LABEL_23;
    }
  }
LABEL_35:
  sub_251A1E630();
}

uint64_t sub_251AA9434(uint64_t a1, uint64_t (*a2)(uint64_t *, char *), uint64_t a3, uint64_t a4)
{
  uint64_t v20 = a1;
  uint64_t v7 = a4 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(a4 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(a4 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v13 = 0;
  while (v10)
  {
    unint64_t v14 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v15 = v14 | (v13 << 6);
LABEL_5:
    char v19 = *(unsigned char *)(*(void *)(a4 + 48) + v15);
    uint64_t result = a2(&v20, &v19);
    if (v4)
    {
      swift_release();
      return swift_bridgeObjectRelease();
    }
  }
  if (__OFADD__(v13++, 1))
  {
    __break(1u);
    goto LABEL_27;
  }
  if (v13 >= v11) {
    goto LABEL_25;
  }
  unint64_t v17 = *(void *)(v7 + 8 * v13);
  if (v17)
  {
LABEL_19:
    unint64_t v10 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v13 << 6);
    goto LABEL_5;
  }
  int64_t v18 = v13 + 1;
  if (v13 + 1 >= v11) {
    goto LABEL_25;
  }
  unint64_t v17 = *(void *)(v7 + 8 * v18);
  if (v17) {
    goto LABEL_18;
  }
  int64_t v18 = v13 + 2;
  if (v13 + 2 >= v11) {
    goto LABEL_25;
  }
  unint64_t v17 = *(void *)(v7 + 8 * v18);
  if (v17) {
    goto LABEL_18;
  }
  int64_t v18 = v13 + 3;
  if (v13 + 3 >= v11) {
    goto LABEL_25;
  }
  unint64_t v17 = *(void *)(v7 + 8 * v18);
  if (v17) {
    goto LABEL_18;
  }
  int64_t v18 = v13 + 4;
  if (v13 + 4 >= v11)
  {
LABEL_25:
    swift_release();
    return v20;
  }
  unint64_t v17 = *(void *)(v7 + 8 * v18);
  if (v17)
  {
LABEL_18:
    int64_t v13 = v18;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v13 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v13 >= v11) {
      goto LABEL_25;
    }
    unint64_t v17 = *(void *)(v7 + 8 * v13);
    ++v18;
    if (v17) {
      goto LABEL_19;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_251AA95D8()
{
  sub_251F357B0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_251AA96CC()
{
  sub_251F357B0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_251AA97B8()
{
  sub_251F357B0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_251AA98FC()
{
  sub_251F357B0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_251AA99E0()
{
  sub_251F357B0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_251AA9B28()
{
  sub_251F357B0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_251AA9CD4()
{
  sub_251F357B0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_251AA9DFC()
{
  sub_251F357B0();
  return swift_bridgeObjectRelease();
}

uint64_t LightsCategoryInformation.stateSnapshot.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_251AB3C1C(v1, a1, type metadata accessor for StateSnapshot);
}

uint64_t LightsCategoryInformation.id.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for LightsCategoryInformation();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for LightsCategoryInformation()
{
  uint64_t result = qword_269B9D750;
  if (!qword_269B9D750) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t LightsCategoryInformation.summary.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for LightsCategoryInformation() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LightsCategoryInformation.categoryStaticAccessories.getter()
{
  type metadata accessor for LightsCategoryInformation();
  return swift_bridgeObjectRetain();
}

uint64_t LightsCategoryInformation.activeStaticServices.getter()
{
  type metadata accessor for LightsCategoryInformation();
  return swift_bridgeObjectRetain();
}

uint64_t LightsCategoryInformation.nonResponsiveStaticServices.getter()
{
  type metadata accessor for LightsCategoryInformation();
  return swift_bridgeObjectRetain();
}

uint64_t LightsCategoryInformation.allRelevantStaticServices.getter()
{
  type metadata accessor for LightsCategoryInformation();
  return swift_bridgeObjectRetain();
}

uint64_t LightsCategoryInformation.hash(into:)(long long *a1)
{
  uint64_t v2 = v1;
  StateSnapshot.hash(into:)(a1);
  uint64_t v4 = (int *)type metadata accessor for LightsCategoryInformation();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  if (*(void *)(v1 + v4[6] + 8))
  {
    sub_251F36CC0();
    swift_bridgeObjectRetain();
    sub_251F357B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_251F36CC0();
  }
  uint64_t v5 = *(void *)(v1 + v4[7]);
  swift_bridgeObjectRetain();
  sub_251A54A64(a1, v5);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(v2 + v4[8]);
  swift_bridgeObjectRetain();
  sub_251A54CA0(a1, v6);
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(v2 + v4[9]);
  swift_bridgeObjectRetain();
  sub_251A54CA0(a1, v7);
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(v2 + v4[10]);
  swift_bridgeObjectRetain();
  sub_251A54CA0(a1, v8);
  return swift_bridgeObjectRelease();
}

uint64_t LightsCategoryInformation.hashValue.getter()
{
  sub_251F36CA0();
  LightsCategoryInformation.hash(into:)(v1);
  return sub_251F36D00();
}

uint64_t sub_251AAA2BC@<X0>(uint64_t a1@<X8>)
{
  return sub_251AB3C1C(v1, a1, type metadata accessor for StateSnapshot);
}

uint64_t sub_251AAA2F0(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 24));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t LightsCategoryInformation.shortSummary.getter()
{
  type metadata accessor for LightsCategoryInformation();
  uint64_t v1 = swift_bridgeObjectRetain();
  uint64_t v2 = sub_251AAD138(v1);
  uint64_t v10 = v0;
  uint64_t v3 = sub_251AA8A60(0, (void (*)(uint64_t *, char *))sub_251AAFC2C, (uint64_t)v9, v2);
  swift_release();
  if (!v3) {
    return 0;
  }
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_251AAD138(v4);
  MEMORY[0x270FA5388](v5);
  void v8[2] = v0;
  uint64_t v6 = sub_251AA8A60(0, (void (*)(uint64_t *, char *))sub_251AB3DD8, (uint64_t)v8, v5);
  swift_release();
  uint64_t v11 = v6;
  return sub_251F36AB0();
}

uint64_t sub_251AAA448()
{
  return swift_bridgeObjectRetain();
}

void *LightsCategoryInformation.statusItems.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D718);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_251AAC5F8();
  long long v14 = xmmword_251F38650;
  sub_251F01FA4(v3, (uint64_t)v2);
  uint64_t v4 = type metadata accessor for LightsStatusItem();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v2, 1, v4) == 1)
  {
    sub_251A1B064((uint64_t)v2, &qword_269B9D718);
    long long v15 = 0u;
    long long v16 = 0u;
    unint64_t v17 = 0;
  }
  else
  {
    *((void *)&v16 + 1) = v4;
    unint64_t v17 = &off_270278A48;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v15);
    sub_251AB3CE4((uint64_t)v2, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(void))type metadata accessor for LightsStatusItem);
  }
  sub_251A1B128((uint64_t)&v15, (uint64_t)v13, &qword_269B9D720);
  sub_251AAFC70((uint64_t)v13, (uint64_t)&v10);
  if (v11)
  {
    sub_251A1A444(&v10, (uint64_t)v12);
    sub_251A1A444(v12, (uint64_t)&v10);
    uint64_t v6 = (void *)MEMORY[0x263F8EE78];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v6 = sub_251F0FD30(0, v6[2] + 1, 1, v6);
    }
    unint64_t v8 = v6[2];
    unint64_t v7 = v6[3];
    if (v8 >= v7 >> 1) {
      uint64_t v6 = sub_251F0FD30((void *)(v7 > 1), v8 + 1, 1, v6);
    }
    v6[2] = v8 + 1;
    sub_251A1A444(&v10, (uint64_t)&v6[5 * v8 + 4]);
  }
  else
  {
    sub_251A1B064((uint64_t)&v10, &qword_269B9D720);
    uint64_t v6 = (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D720);
  swift_arrayDestroy();
  return v6;
}

uint64_t sub_251AAA684@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  unsigned __int8 v5 = *a2;
  return LightsCategoryInformation.init(stateSnapshot:umbrellaCategory:room:)(a1, &v5, a3, a4);
}

uint64_t LightsCategoryInformation.init(stateSnapshot:umbrellaCategory:room:)@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v34 = a4;
  uint64_t v7 = type metadata accessor for StateSnapshot(0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D138);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v13 = (int *)type metadata accessor for LightsCategoryInformation();
  uint64_t v14 = *((void *)v13 - 1);
  MEMORY[0x270FA5388](v13);
  long long v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned __int8 v17 = *a2;
  sub_251AB3C1C(a1, (uint64_t)v16, type metadata accessor for StateSnapshot);
  v16[v13[5]] = 2;
  uint64_t v35 = a3;
  sub_251A1B128(a3, (uint64_t)v12, &qword_269B9D138);
  uint64_t v18 = type metadata accessor for StaticRoom(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v12, 1, v18) == 1)
  {
    sub_251A1B064((uint64_t)v12, &qword_269B9D138);
    sub_251AB3C1C(a1, (uint64_t)v9, type metadata accessor for StateSnapshot);
  }
  else
  {
    uint64_t v19 = swift_bridgeObjectRetain();
    uint64_t v20 = sub_251EDCBC8(v19);
    sub_251AB3C84((uint64_t)v12, type metadata accessor for StaticRoom);
    sub_251AB3C1C(a1, (uint64_t)v9, type metadata accessor for StateSnapshot);
    if (v20) {
      goto LABEL_5;
    }
  }
  uint64_t v21 = swift_bridgeObjectRetain();
  uint64_t v20 = sub_251EDCBC8(v21);
LABEL_5:
  sub_251AB3C84((uint64_t)v9, type metadata accessor for StateSnapshot);
  uint64_t v22 = swift_bridgeObjectRetain();
  uint64_t v23 = sub_251AAD29C(v22, v17);
  *(void *)&v16[v13[7]] = v23;
  if (*(void *)(v23 + 16))
  {
    sub_251C043B0(v20, v36);
    uint64_t v24 = v36[0];
    uint64_t v25 = v36[1];
    uint64_t v26 = v36[2];
    uint64_t v27 = v36[3];
    uint64_t v28 = v34;
    uint64_t v33 = v36[4];
    swift_bridgeObjectRelease();
    sub_251A1B064(v35, &qword_269B9D138);
    sub_251AB3C84(a1, type metadata accessor for StateSnapshot);
    *(void *)&v16[v13[8]] = v24;
    *(void *)&v16[v13[9]] = v25;
    *(void *)&v16[v13[10]] = v26;
    uint64_t v29 = (uint64_t *)&v16[v13[6]];
    uint64_t v30 = v33;
    *uint64_t v29 = v27;
    v29[1] = v30;
    sub_251AB3C1C((uint64_t)v16, v28, (uint64_t (*)(void))type metadata accessor for LightsCategoryInformation);
    (*(void (**)(uint64_t, void, uint64_t, int *))(v14 + 56))(v28, 0, 1, v13);
    return sub_251AB3C84((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for LightsCategoryInformation);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_251A1B064(v35, &qword_269B9D138);
    sub_251AB3C84(a1, type metadata accessor for StateSnapshot);
    sub_251AB3C84((uint64_t)v16, type metadata accessor for StateSnapshot);
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v14 + 56))(v34, 1, 1, v13);
  }
}

uint64_t LightsCategoryInformation.contextMenuLabelsAndActions()()
{
  uint64_t v1 = v0;
  uint64_t v35 = *MEMORY[0x263EF8340];
  uint64_t v2 = type metadata accessor for LightsCategoryInformation();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  uint64_t v5 = MEMORY[0x270FA5388](v2);
  uint64_t v34 = MEMORY[0x263F8EE78];
  uint64_t v6 = *(int *)(v5 + 32);
  uint64_t v7 = *(void *)(*(void *)(v0 + v6) + 16);
  uint64_t v8 = &off_251F38000;
  if (!v7)
  {
    uint64_t v12 = *(void *)(v0 + *(int *)(v2 + 40));
    goto LABEL_10;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D728);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_251F38650;
  uint64_t v32 = 0x66664F206E727554;
  unint64_t v33 = 0xE900000000000020;
  uint64_t v31 = v7;
  sub_251F36AB0();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  if (v7 == 1)
  {
    uint64_t v10 = 0x8000000251F68CA0;
    uint64_t v11 = 0xD000000000000020;
  }
  else
  {
    uint64_t v11 = 0xD000000000000026;
    uint64_t v10 = 0x8000000251F68CD0;
  }
  static String.hfLocalized(_:)(v11, v10);
  sub_251F35800();
  swift_bridgeObjectRelease();
  uint64_t v13 = v32;
  unint64_t v14 = v33;
  sub_251AB3C1C(v0, (uint64_t)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for LightsCategoryInformation);
  unint64_t v15 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v16 = swift_allocObject();
  sub_251AB3CE4((uint64_t)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v16 + v15, (uint64_t (*)(void))type metadata accessor for LightsCategoryInformation);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_251AB01A0;
  *(void *)(v17 + 24) = v16;
  *(void *)(inited + 32) = v13;
  *(void *)(inited + 40) = v14;
  *(void *)(inited + 48) = sub_251AB3DD0;
  *(void *)(inited + 56) = v17;
  sub_251ED6BC0(inited);
  unint64_t v18 = *(void *)(*(void *)(v1 + v6) + 16);
  uint64_t v12 = *(void *)(v1 + *(int *)(v2 + 40));
  if (v18 <= *(void *)(v12 + 16) >> 3)
  {
    uint64_t v8 = &off_251F38000;
LABEL_10:
    uint64_t v32 = v12;
    swift_bridgeObjectRetain();
    uint64_t v22 = swift_bridgeObjectRetain();
    sub_251AADD00(v22);
    swift_bridgeObjectRelease();
    uint64_t v20 = v32;
    uint64_t v21 = *(void *)(v32 + 16);
    if (!v21) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  uint64_t v19 = swift_bridgeObjectRetain();
  uint64_t v20 = sub_251AAE990(v19, v12);
  swift_bridgeObjectRelease();
  uint64_t v8 = &off_251F38000;
  uint64_t v21 = *(void *)(v20 + 16);
  if (!v21)
  {
LABEL_8:
    swift_bridgeObjectRelease();
    return v34;
  }
LABEL_11:
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D728);
  uint64_t v23 = swift_initStackObject();
  *(_OWORD *)(v23 + 16) = *((_OWORD *)v8 + 101);
  uint64_t v32 = 0x206E4F206E727554;
  unint64_t v33 = 0xE800000000000000;
  uint64_t v31 = v21;
  sub_251F36AB0();
  sub_251F35800();
  swift_bridgeObjectRelease();
  sub_251F35800();
  if (v21 == 1)
  {
    uint64_t v24 = 0x8000000251F68CA0;
    uint64_t v25 = 0xD000000000000020;
  }
  else
  {
    uint64_t v25 = 0xD000000000000026;
    uint64_t v24 = 0x8000000251F68CD0;
  }
  static String.hfLocalized(_:)(v25, v24);
  sub_251F35800();
  swift_bridgeObjectRelease();
  uint64_t v26 = v32;
  unint64_t v27 = v33;
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = v20;
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = sub_251AAFD10;
  *(void *)(v29 + 24) = v28;
  *(void *)(v23 + 32) = v26;
  *(void *)(v23 + 40) = v27;
  *(void *)(v23 + 48) = sub_251AAFD18;
  *(void *)(v23 + 56) = v29;
  sub_251ED6BC0(v23);
  return v34;
}

uint64_t sub_251AAAF28()
{
  sub_251F36CA0();
  LightsCategoryInformation.hash(into:)(v1);
  return sub_251F36D00();
}

uint64_t sub_251AAAF6C()
{
  sub_251F36CA0();
  LightsCategoryInformation.hash(into:)(v1);
  return sub_251F36D00();
}

uint64_t sub_251AAAFA8@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(v2 + *(int *)(result + 20));
  return result;
}

uint64_t sub_251AAAFB8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LightsCategoryInformation();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_251F35CD0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  sub_251AB3C1C(a1, (uint64_t)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for LightsCategoryInformation);
  unint64_t v9 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = 0;
  *(void *)(v10 + 24) = 0;
  sub_251AB3CE4((uint64_t)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v10 + v9, (uint64_t (*)(void))type metadata accessor for LightsCategoryInformation);
  sub_251ACBB48((uint64_t)v7, (uint64_t)&unk_269B9D770, v10);
  return swift_release();
}

uint64_t sub_251AAB170(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a4;
  return MEMORY[0x270FA2498](sub_251AAB190, 0, 0);
}

uint64_t sub_251AAB190()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = *(void *)(v1 + *(int *)(type metadata accessor for LightsCategoryInformation() + 32));
  uint64_t v3 = swift_task_alloc();
  v0[4] = v3;
  *(void *)(v3 + 16) = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[5] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_251AAB28C;
  uint64_t v5 = v0[2];
  uint64_t v6 = MEMORY[0x263F8EE60] + 8;
  uint64_t v7 = MEMORY[0x263F8EE60] + 8;
  uint64_t v8 = MEMORY[0x263F8EE60] + 8;
  return MEMORY[0x270FA2158](v5, v6, v7, 0, 0, &unk_269B9D780, v3, v8);
}

uint64_t sub_251AAB28C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_251AAB39C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[9] = a2;
  v3[10] = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  v3[11] = swift_task_alloc();
  v3[12] = swift_task_alloc();
  uint64_t v4 = *(void *)(type metadata accessor for StaticService() - 8);
  v3[13] = v4;
  v3[14] = *(void *)(v4 + 64);
  v3[15] = swift_task_alloc();
  v3[16] = swift_task_alloc();
  v3[17] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251AAB4BC, 0, 0);
}

uint64_t sub_251AAB4BC()
{
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v1 + 56);
  uint64_t v32 = v1 + 56;
  uint64_t v34 = *(void *)(v0 + 104);
  uint64_t v35 = v1;
  uint64_t v3 = -1;
  uint64_t v4 = -1 << *(unsigned char *)(v1 + 32);
  if (-v4 < 64) {
    uint64_t v3 = ~(-1 << -(char)v4);
  }
  unint64_t v5 = v3 & v2;
  int64_t v33 = (unint64_t)(63 - v4) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v7 = 0;
  while (1)
  {
    if (v5)
    {
      uint64_t v36 = (v5 - 1) & v5;
      int64_t v37 = v7;
      unint64_t v10 = __clz(__rbit64(v5)) | (v7 << 6);
      goto LABEL_21;
    }
    int64_t v11 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
LABEL_33:
      __break(1u);
      return result;
    }
    if (v11 >= v33) {
      goto LABEL_29;
    }
    unint64_t v12 = *(void *)(v32 + 8 * v11);
    int64_t v13 = v7 + 1;
    if (!v12)
    {
      int64_t v13 = v7 + 2;
      if (v7 + 2 >= v33) {
        goto LABEL_29;
      }
      unint64_t v12 = *(void *)(v32 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = v7 + 3;
        if (v7 + 3 >= v33) {
          goto LABEL_29;
        }
        unint64_t v12 = *(void *)(v32 + 8 * v13);
        if (!v12) {
          break;
        }
      }
    }
LABEL_20:
    uint64_t v36 = (v12 - 1) & v12;
    int64_t v37 = v13;
    unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
LABEL_21:
    uint64_t v15 = *(void *)(v0 + 128);
    uint64_t v16 = *(void *)(v0 + 136);
    uint64_t v17 = *(void *)(v0 + 120);
    uint64_t v18 = *(void *)(v0 + 96);
    uint64_t v38 = *(void *)(v0 + 88);
    sub_251AB3C1C(*(void *)(v35 + 48) + *(void *)(v34 + 72) * v10, v16, (uint64_t (*)(void))type metadata accessor for StaticService);
    sub_251AB3CE4(v16, v15, (uint64_t (*)(void))type metadata accessor for StaticService);
    sub_251F35C90();
    uint64_t v19 = sub_251F35CD0();
    uint64_t v20 = *(void *)(v19 - 8);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v20 + 56))(v18, 0, 1, v19);
    sub_251AB3C1C(v15, v17, (uint64_t (*)(void))type metadata accessor for StaticService);
    unint64_t v21 = (*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = 0;
    *(void *)(v22 + 24) = 0;
    sub_251AB3CE4(v17, v22 + v21, (uint64_t (*)(void))type metadata accessor for StaticService);
    sub_251A1B128(v18, v38, &qword_26B220BB0);
    int v23 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v38, 1, v19);
    uint64_t v24 = *(void *)(v0 + 88);
    if (v23 == 1)
    {
      sub_251A1B064(*(void *)(v0 + 88), &qword_26B220BB0);
    }
    else
    {
      sub_251F35CC0();
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v24, v19);
    }
    unint64_t v5 = v36;
    int64_t v7 = v37;
    if (*(void *)(v22 + 16))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v25 = sub_251F35C00();
      uint64_t v27 = v26;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v25 = 0;
      uint64_t v27 = 0;
    }
    uint64_t v28 = **(void **)(v0 + 72);
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = &unk_269B9D790;
    *(void *)(v29 + 24) = v22;
    uint64_t v30 = v27 | v25;
    if (v27 | v25)
    {
      uint64_t v30 = v0 + 16;
      *(void *)(v0 + 16) = 0;
      *(void *)(v0 + 24) = 0;
      *(void *)(v0 + 32) = v25;
      *(void *)(v0 + 40) = v27;
    }
    uint64_t v8 = *(void *)(v0 + 128);
    uint64_t v9 = *(void *)(v0 + 96);
    *(void *)(v0 + 48) = 1;
    *(void *)(v0 + 56) = v30;
    *(void *)(v0 + 64) = v28;
    swift_task_create();
    swift_release();
    sub_251A1B064(v9, &qword_26B220BB0);
    uint64_t result = sub_251AB3C84(v8, (uint64_t (*)(void))type metadata accessor for StaticService);
  }
  uint64_t v14 = v7 + 4;
  if (v7 + 4 < v33)
  {
    unint64_t v12 = *(void *)(v32 + 8 * v14);
    if (!v12)
    {
      while (1)
      {
        int64_t v13 = v14 + 1;
        if (__OFADD__(v14, 1)) {
          goto LABEL_33;
        }
        if (v13 >= v33) {
          goto LABEL_29;
        }
        unint64_t v12 = *(void *)(v32 + 8 * v13);
        ++v14;
        if (v12) {
          goto LABEL_20;
        }
      }
    }
    int64_t v13 = v7 + 4;
    goto LABEL_20;
  }
LABEL_29:
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v31 = *(uint64_t (**)(void))(v0 + 8);
  return v31();
}

uint64_t sub_251AAB968(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 160) = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2203A0);
  *(void *)(v4 + 168) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251AAB9FC, 0, 0);
}

uint64_t sub_251AAB9FC()
{
  *(void *)(v0 + 112) = MEMORY[0x263F8D6C8];
  *(void *)(v0 + 88) = 0;
  uint64_t v1 = qword_270261D90;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C600);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_251F38650;
  *(unsigned char *)(inited + 32) = 105;
  sub_251A0D51C(v0 + 88, inited + 40);
  unint64_t v3 = sub_2519FA2DC(inited);
  *(void *)(v0 + 152) = v1;
  *(_OWORD *)(v0 + 120) = xmmword_251F3BEC0;
  *(void *)(v0 + 176) = v3;
  *(void *)(v0 + 136) = 0;
  *(void *)(v0 + 144) = 0;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 184) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_251AABB2C;
  uint64_t v5 = *(void *)(v0 + 168);
  return StaticService.set(for:options:context:)(v5, v3, (uint64_t *)(v0 + 152), (_OWORD *)(v0 + 120));
}

uint64_t sub_251AABB2C()
{
  uint64_t v1 = *(void *)v0 + 88;
  uint64_t v2 = *(void *)(*(void *)v0 + 168);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_251A1B064(v2, &qword_26B2203A0);
  __swift_destroy_boxed_opaque_existential_0(v1);
  return MEMORY[0x270FA2498](sub_251AABC7C, 0, 0);
}

uint64_t sub_251AABC7C()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251AABCDC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F35C90();
  uint64_t v5 = sub_251F35CD0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 0, 1, v5);
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = 0;
  v6[3] = 0;
  v6[4] = a1;
  swift_bridgeObjectRetain();
  sub_251B40114((uint64_t)v4, (uint64_t)&unk_269B9D7A8, (uint64_t)v6);
  swift_release();
  return sub_251A1B064((uint64_t)v4, &qword_26B220BB0);
}

uint64_t sub_251AABDF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[20] = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2203A0);
  v4[21] = swift_task_alloc();
  v4[22] = *(void *)(type metadata accessor for StaticService() - 8);
  v4[23] = swift_task_alloc();
  v4[24] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251AABEF0, 0, 0);
}

uint64_t sub_251AABEF0()
{
  uint64_t v1 = *(void *)(v0 + 176);
  uint64_t v2 = *(void *)(v0 + 160);
  char v3 = *(unsigned char *)(v2 + 32);
  *(unsigned char *)(v0 + 232) = v3;
  uint64_t v4 = -1;
  uint64_t v5 = -1 << v3;
  if (-(-1 << v3) < 64) {
    uint64_t v4 = ~(-1 << -(char)v5);
  }
  unint64_t v6 = v4 & *(void *)(v2 + 56);
  uint64_t v7 = (void *)swift_bridgeObjectRetain();
  if (v6)
  {
    uint64_t v8 = 0;
    unint64_t v9 = __clz(__rbit64(v6));
    uint64_t v10 = (v6 - 1) & v6;
LABEL_5:
    *(void *)(v0 + 200) = v8;
    *(void *)(v0 + 208) = v10;
    uint64_t v12 = *(void *)(v0 + 184);
    uint64_t v11 = *(void *)(v0 + 192);
    sub_251AB3C1C(v7[6] + *(void *)(v1 + 72) * v9, v11, (uint64_t (*)(void))type metadata accessor for StaticService);
    sub_251AB3CE4(v11, v12, (uint64_t (*)(void))type metadata accessor for StaticService);
    *(void *)(v0 + 112) = MEMORY[0x263F8D6C8];
    *(void *)(v0 + 88) = 1;
    uint64_t v13 = qword_270261DB8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C600);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_251F38650;
    *(unsigned char *)(inited + 32) = 105;
    sub_251A0D51C(v0 + 88, inited + 40);
    unint64_t v15 = sub_2519FA2DC(inited);
    *(void *)(v0 + 152) = v13;
    *(_OWORD *)(v0 + 120) = xmmword_251F3BEC0;
    *(void *)(v0 + 216) = v15;
    *(void *)(v0 + 136) = 0;
    *(void *)(v0 + 144) = 0;
    uint64_t v16 = (void *)swift_task_alloc();
    *(void *)(v0 + 224) = v16;
    *uint64_t v16 = v0;
    v16[1] = sub_251AAC1D0;
    uint64_t v17 = *(void *)(v0 + 168);
    return StaticService.set(for:options:context:)(v17, v15, (uint64_t *)(v0 + 152), (_OWORD *)(v0 + 120));
  }
  unint64_t v19 = 63 - v5;
  if ((unint64_t)(63 - v5) > 0x7F)
  {
    unint64_t v20 = v7[8];
    if (v20)
    {
      uint64_t v8 = 1;
LABEL_11:
      uint64_t v10 = (v20 - 1) & v20;
      unint64_t v9 = __clz(__rbit64(v20)) + (v8 << 6);
      goto LABEL_5;
    }
    if (v19 >= 0xC0)
    {
      unint64_t v20 = v7[9];
      if (v20)
      {
        uint64_t v8 = 2;
        goto LABEL_11;
      }
      if (v19 >= 0x100)
      {
        unint64_t v20 = v7[10];
        if (v20)
        {
          uint64_t v8 = 3;
          goto LABEL_11;
        }
        if (v19 >= 0x140)
        {
          unint64_t v20 = v7[11];
          if (v20)
          {
            uint64_t v8 = 4;
            goto LABEL_11;
          }
          uint64_t v21 = 0;
          uint64_t v22 = v19 >> 6;
          if (v22 <= 5) {
            uint64_t v22 = 5;
          }
          uint64_t v23 = v22 - 5;
          while (v23 != v21)
          {
            unint64_t v20 = v7[v21++ + 12];
            if (v20)
            {
              uint64_t v8 = v21 + 4;
              goto LABEL_11;
            }
          }
        }
      }
    }
  }
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v24 = *(uint64_t (**)(void))(v0 + 8);
  return v24();
}

uint64_t sub_251AAC1D0()
{
  uint64_t v1 = *(void *)v0 + 88;
  uint64_t v2 = *(void *)(*(void *)v0 + 168);
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_251A1B064(v2, &qword_26B2203A0);
  __swift_destroy_boxed_opaque_existential_0(v1);
  return MEMORY[0x270FA2498](sub_251AAC320, 0, 0);
}

uint64_t sub_251AAC320()
{
  uint64_t result = sub_251AB3C84(*(void *)(v0 + 184), (uint64_t (*)(void))type metadata accessor for StaticService);
  int64_t v2 = *(void *)(v0 + 200);
  unint64_t v3 = *(void *)(v0 + 208);
  if (v3)
  {
    uint64_t v4 = (v3 - 1) & v3;
    unint64_t v5 = __clz(__rbit64(v3)) | (v2 << 6);
    uint64_t result = *(void *)(v0 + 160);
LABEL_3:
    *(void *)(v0 + 200) = v2;
    *(void *)(v0 + 208) = v4;
    uint64_t v7 = *(void *)(v0 + 184);
    uint64_t v6 = *(void *)(v0 + 192);
    sub_251AB3C1C(*(void *)(result + 48) + *(void *)(*(void *)(v0 + 176) + 72) * v5, v6, (uint64_t (*)(void))type metadata accessor for StaticService);
    sub_251AB3CE4(v6, v7, (uint64_t (*)(void))type metadata accessor for StaticService);
    *(void *)(v0 + 112) = MEMORY[0x263F8D6C8];
    *(void *)(v0 + 88) = 1;
    uint64_t v8 = qword_270261DB8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C600);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_251F38650;
    *(unsigned char *)(inited + 32) = 105;
    sub_251A0D51C(v0 + 88, inited + 40);
    unint64_t v10 = sub_2519FA2DC(inited);
    *(void *)(v0 + 152) = v8;
    *(_OWORD *)(v0 + 120) = xmmword_251F3BEC0;
    *(void *)(v0 + 216) = v10;
    *(void *)(v0 + 136) = 0;
    *(void *)(v0 + 144) = 0;
    uint64_t v11 = (void *)swift_task_alloc();
    *(void *)(v0 + 224) = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_251AAC1D0;
    uint64_t v12 = *(void *)(v0 + 168);
    return StaticService.set(for:options:context:)(v12, v10, (uint64_t *)(v0 + 152), (_OWORD *)(v0 + 120));
  }
  int64_t v13 = v2 + 1;
  if (__OFADD__(v2, 1))
  {
    __break(1u);
    goto LABEL_24;
  }
  int64_t v14 = (unint64_t)((1 << *(unsigned char *)(v0 + 232)) + 63) >> 6;
  uint64_t result = *(void *)(v0 + 160);
  if (v13 < v14)
  {
    uint64_t v15 = result + 56;
    unint64_t v16 = *(void *)(result + 56 + 8 * v13);
    ++v2;
    if (v16)
    {
LABEL_9:
      uint64_t v4 = (v16 - 1) & v16;
      unint64_t v5 = __clz(__rbit64(v16)) + (v2 << 6);
      goto LABEL_3;
    }
    int64_t v2 = v13 + 1;
    if (v13 + 1 < v14)
    {
      unint64_t v16 = *(void *)(v15 + 8 * v2);
      if (v16) {
        goto LABEL_9;
      }
      int64_t v2 = v13 + 2;
      if (v13 + 2 < v14)
      {
        unint64_t v16 = *(void *)(v15 + 8 * v2);
        if (v16) {
          goto LABEL_9;
        }
        int64_t v17 = v13 + 3;
        if (v17 < v14)
        {
          unint64_t v16 = *(void *)(v15 + 8 * v17);
          if (v16)
          {
            int64_t v2 = v17;
            goto LABEL_9;
          }
          while (1)
          {
            int64_t v2 = v17 + 1;
            if (__OFADD__(v17, 1)) {
              break;
            }
            if (v2 >= v14) {
              goto LABEL_20;
            }
            unint64_t v16 = *(void *)(v15 + 8 * v2);
            ++v17;
            if (v16) {
              goto LABEL_9;
            }
          }
LABEL_24:
          __break(1u);
          return result;
        }
      }
    }
  }
LABEL_20:
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
  return v18();
}

uint64_t sub_251AAC5F8()
{
  uint64_t v33 = type metadata accessor for StaticService();
  uint64_t v0 = *(void *)(v33 - 8);
  uint64_t v1 = MEMORY[0x270FA5388](v33);
  uint64_t v32 = (uint64_t)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = MEMORY[0x270FA5388](v1);
  unint64_t v5 = (char *)&v28 - v4;
  uint64_t v6 = MEMORY[0x270FA5388](v3);
  uint64_t v8 = (char *)&v28 - v7;
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v11 = (char *)&v28 - v10;
  MEMORY[0x270FA5388](v9);
  int64_t v13 = (char *)&v28 - v12;
  type metadata accessor for LightsCategoryInformation();
  uint64_t v14 = swift_bridgeObjectRetain();
  uint64_t v15 = sub_251AAD138(v14);
  uint64_t v16 = sub_251EB6038(v15);
  uint64_t result = swift_release();
  uint64_t v18 = MEMORY[0x263F8EE78];
  uint64_t v34 = MEMORY[0x263F8EE78];
  uint64_t v31 = *(void *)(v16 + 16);
  if (v31)
  {
    uint64_t v29 = v8;
    uint64_t v30 = v5;
    unint64_t v19 = 0;
    uint64_t v20 = MEMORY[0x263F8EE78];
    while (v19 < *(void *)(v16 + 16))
    {
      unint64_t v21 = (*(unsigned __int8 *)(v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80);
      uint64_t v22 = *(void *)(v0 + 72);
      sub_251AB3C1C(v16 + v21 + v22 * v19, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for StaticService);
      if (v13[*(int *)(v33 + 80)])
      {
        sub_251AB3CE4((uint64_t)v13, v32, (uint64_t (*)(void))type metadata accessor for StaticService);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_251A3E3E8(0, *(void *)(v20 + 16) + 1, 1);
        }
        uint64_t v20 = v34;
        unint64_t v24 = *(void *)(v34 + 16);
        unint64_t v23 = *(void *)(v34 + 24);
        if (v24 >= v23 >> 1)
        {
          sub_251A3E3E8(v23 > 1, v24 + 1, 1);
          uint64_t v20 = v34;
        }
        *(void *)(v20 + 16) = v24 + 1;
        uint64_t result = sub_251AB3CE4(v32, v20 + v21 + v24 * v22, (uint64_t (*)(void))type metadata accessor for StaticService);
      }
      else
      {
        uint64_t result = sub_251AB3C84((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for StaticService);
      }
      if (v31 == ++v19)
      {
        uint64_t v18 = v34;
        uint64_t v8 = v29;
        unint64_t v5 = v30;
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease();
    uint64_t v34 = MEMORY[0x263F8EE88];
    uint64_t v25 = *(void *)(v18 + 16);
    if (v25)
    {
      uint64_t v26 = v18 + ((*(unsigned __int8 *)(v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80));
      uint64_t v27 = *(void *)(v0 + 72);
      swift_retain();
      do
      {
        sub_251AB3C1C(v26, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticService);
        sub_251AB3C1C((uint64_t)v11, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticService);
        sub_251A641C8((uint64_t)v8, (uint64_t)v5);
        sub_251AB3C84((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticService);
        sub_251AB3C84((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticService);
        v26 += v27;
        --v25;
      }
      while (v25);
      swift_release_n();
      return v34;
    }
    else
    {
      swift_release();
      return MEMORY[0x263F8EE88];
    }
  }
  return result;
}

uint64_t sub_251AAC998()
{
  return sub_251AAC9C8((void (*)(void))type metadata accessor for ClimateCategoryInformation);
}

uint64_t sub_251AAC9B0()
{
  return sub_251AAC9C8((void (*)(void))type metadata accessor for SecurityAndAccessCategoryInformation);
}

uint64_t sub_251AAC9C8(void (*a1)(void))
{
  uint64_t v35 = type metadata accessor for StaticService();
  uint64_t v2 = *(void *)(v35 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v35);
  uint64_t v34 = (uint64_t)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v30 - v6;
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v30 - v9;
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  int64_t v13 = (char *)&v30 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v30 - v14;
  a1(0);
  uint64_t v16 = swift_bridgeObjectRetain();
  uint64_t v17 = sub_251AAD138(v16);
  uint64_t v18 = sub_251EB6038(v17);
  uint64_t result = swift_release();
  uint64_t v20 = MEMORY[0x263F8EE78];
  uint64_t v36 = MEMORY[0x263F8EE78];
  uint64_t v33 = *(void *)(v18 + 16);
  if (v33)
  {
    uint64_t v31 = v10;
    uint64_t v32 = v7;
    unint64_t v21 = 0;
    uint64_t v22 = MEMORY[0x263F8EE78];
    while (v21 < *(void *)(v18 + 16))
    {
      unint64_t v23 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
      uint64_t v24 = *(void *)(v2 + 72);
      sub_251AB3C1C(v18 + v23 + v24 * v21, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for StaticService);
      if (v15[*(int *)(v35 + 80)])
      {
        sub_251AB3CE4((uint64_t)v15, v34, (uint64_t (*)(void))type metadata accessor for StaticService);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_251A3E3E8(0, *(void *)(v22 + 16) + 1, 1);
        }
        uint64_t v22 = v36;
        unint64_t v26 = *(void *)(v36 + 16);
        unint64_t v25 = *(void *)(v36 + 24);
        if (v26 >= v25 >> 1)
        {
          sub_251A3E3E8(v25 > 1, v26 + 1, 1);
          uint64_t v22 = v36;
        }
        *(void *)(v22 + 16) = v26 + 1;
        uint64_t result = sub_251AB3CE4(v34, v22 + v23 + v26 * v24, (uint64_t (*)(void))type metadata accessor for StaticService);
      }
      else
      {
        uint64_t result = sub_251AB3C84((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for StaticService);
      }
      if (v33 == ++v21)
      {
        uint64_t v20 = v36;
        uint64_t v10 = v31;
        uint64_t v7 = v32;
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease();
    uint64_t v36 = MEMORY[0x263F8EE88];
    uint64_t v27 = *(void *)(v20 + 16);
    if (v27)
    {
      uint64_t v28 = v20 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
      uint64_t v29 = *(void *)(v2 + 72);
      swift_retain();
      do
      {
        sub_251AB3C1C(v28, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for StaticService);
        sub_251AB3C1C((uint64_t)v13, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticService);
        sub_251A641C8((uint64_t)v10, (uint64_t)v7);
        sub_251AB3C84((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticService);
        sub_251AB3C84((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for StaticService);
        v28 += v29;
        --v27;
      }
      while (v27);
      swift_release_n();
      return v36;
    }
    else
    {
      swift_release();
      return MEMORY[0x263F8EE88];
    }
  }
  return result;
}

uint64_t sub_251AACD70()
{
  return sub_251AAC9C8((void (*)(void))type metadata accessor for SpeakersAndTelevisionsCategoryInformation);
}

uint64_t sub_251AACD88()
{
  return sub_251AAC9C8((void (*)(void))type metadata accessor for WaterCategoryInformation);
}

uint64_t sub_251AACDA0(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_251AACE20(a1, a2, a3, (void (*)(char *))sub_251AB3DF0, (uint64_t (*)(char *))sub_251AB2D0C);
}

uint64_t sub_251AACDE0(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_251AACE20(a1, a2, a3, (void (*)(char *))sub_251AB2CBC, (uint64_t (*)(char *))sub_251AB2CD8);
}

uint64_t sub_251AACE20(void *a1, uint64_t a2, uint64_t a3, void (*a4)(char *), uint64_t (*a5)(char *))
{
  uint64_t v10 = *(void *)(a2 + *(int *)(type metadata accessor for StaticAccessory(0) + 80));
  uint64_t v16 = a2;
  swift_bridgeObjectRetain();
  unint64_t v11 = sub_251A51E88(a4, (uint64_t)v15, v10);
  swift_bridgeObjectRelease();
  v14[2] = a3;
  uint64_t v12 = *(void *)(sub_251EB5CF0(a5, (uint64_t)v14, v11) + 16);
  uint64_t result = swift_bridgeObjectRelease();
  if (__OFADD__(*a1, v12)) {
    __break(1u);
  }
  else {
    *a1 += v12;
  }
  return result;
}

BOOL sub_251AACEF0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v6 = type metadata accessor for StaticService();
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)&v23 - v11;
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v23 - v14;
  int v16 = *(unsigned __int8 *)(a1 + *(int *)(v13 + 96));
  sub_251AB3C1C(a1, (uint64_t)&v23 - v14, (uint64_t (*)(void))type metadata accessor for StaticService);
  if (v16 == 53) {
    LOBYTE(v16) = v15[*(int *)(v6 + 88)];
  }
  sub_251AB3C84((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for StaticService);
  char v24 = v16;
  ServiceKind.umbrellaCategory.getter(&v25);
  char v17 = v25;
  uint64_t v18 = a3(0);
  char v19 = sub_251DB1CC8(v17, *(unsigned char *)(a2 + *(int *)(v18 + 20)));
  sub_251AB3C1C(a1, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticService);
  if ((v19 & 1) == 0)
  {
    sub_251AB3C84((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticService);
    sub_251AB3C1C(a1, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticService);
    goto LABEL_7;
  }
  int v20 = v12[*(int *)(v6 + 80)];
  sub_251AB3C84((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticService);
  sub_251AB3C1C(a1, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticService);
  if (v20 != 1)
  {
LABEL_7:
    BOOL v21 = 0;
    goto LABEL_8;
  }
  BOOL v21 = StaticService.isActivated.getter();
LABEL_8:
  sub_251AB3C84((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticService);
  return v21;
}

uint64_t sub_251AAD138(uint64_t isStackAllocationSafe)
{
  uint64_t v2 = isStackAllocationSafe;
  v9[1] = *MEMORY[0x263EF8340];
  char v3 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v4 = (unint64_t)((1 << v3) + 63) >> 6;
  size_t v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    bzero((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    uint64_t v6 = sub_251AAD414((void *)((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0)), v4, v2);
    swift_release();
    if (v1) {
      swift_willThrow();
    }
  }
  else
  {
    uint64_t v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    uint64_t v6 = sub_251AAD414((unint64_t *)v7, v4, v2);
    swift_release();
    MEMORY[0x2533AC760](v7, -1, -1);
  }
  return v6;
}

uint64_t sub_251AAD29C(uint64_t isStackAllocationSafe, unsigned __int8 a2)
{
  uint64_t v4 = isStackAllocationSafe;
  v11[1] = *MEMORY[0x263EF8340];
  char v5 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v6 = (unint64_t)((1 << v5) + 63) >> 6;
  size_t v7 = 8 * v6;
  if ((v5 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    bzero((char *)v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    uint64_t v8 = sub_251AAD688((void *)((char *)v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0)), v6, v4, a2);
    swift_release();
    if (v2) {
      swift_willThrow();
    }
  }
  else
  {
    uint64_t v9 = (void *)swift_slowAlloc();
    bzero(v9, v7);
    uint64_t v8 = sub_251AAD688((unint64_t *)v9, v6, v4, a2);
    swift_release();
    MEMORY[0x2533AC760](v9, -1, -1);
  }
  return v8;
}

uint64_t sub_251AAD414(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v22 = a2;
  uint64_t v23 = a1;
  uint64_t v4 = type metadata accessor for StaticAccessory(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t result = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = 0;
  int64_t v9 = 0;
  uint64_t v10 = *(void *)(a3 + 56);
  uint64_t v25 = a3 + 56;
  uint64_t v11 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v10;
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v9 << 6);
      goto LABEL_5;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v18 >= v14) {
      goto LABEL_24;
    }
    unint64_t v19 = *(void *)(v25 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v14) {
        goto LABEL_24;
      }
      unint64_t v19 = *(void *)(v25 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v14) {
          goto LABEL_24;
        }
        unint64_t v19 = *(void *)(v25 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v13 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_5:
    sub_251AB3C1C(*(void *)(a3 + 48) + *(void *)(v5 + 72) * v16, (uint64_t)v8, type metadata accessor for StaticAccessory);
    int v17 = v8[*(int *)(v4 + 68)];
    uint64_t result = sub_251AB3C84((uint64_t)v8, type metadata accessor for StaticAccessory);
    if (v17 == 1)
    {
      *(unint64_t *)((char *)v23 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      if (__OFADD__(v24++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        return sub_251F1BAE0(v23, v22, v24, a3);
      }
    }
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v14) {
    goto LABEL_24;
  }
  unint64_t v19 = *(void *)(v25 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v14) {
      goto LABEL_24;
    }
    unint64_t v19 = *(void *)(v25 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_251AAD688(unint64_t *a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  uint64_t v25 = a2;
  unint64_t v26 = a1;
  uint64_t v7 = type metadata accessor for StaticAccessory(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t result = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v12 = 0;
  uint64_t v13 = *(void *)(a3 + 56);
  uint64_t v27 = 0;
  uint64_t v28 = a3 + 56;
  uint64_t v14 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v13;
  int64_t v29 = (unint64_t)(v14 + 63) >> 6;
  while (v16)
  {
    unint64_t v17 = __clz(__rbit64(v16));
    v16 &= v16 - 1;
    unint64_t v18 = v17 | (v12 << 6);
LABEL_17:
    sub_251AB3C1C(*(void *)(a3 + 48) + *(void *)(v8 + 72) * v18, (uint64_t)v11, type metadata accessor for StaticAccessory);
    BOOL v22 = sub_251EB6D9C((uint64_t)v11, a4);
    uint64_t result = sub_251AB3C84((uint64_t)v11, type metadata accessor for StaticAccessory);
    if (v4) {
      return result;
    }
    if (v22)
    {
      *(unint64_t *)((char *)v26 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      BOOL v19 = __OFADD__(v27++, 1);
      if (v19) {
        goto LABEL_30;
      }
    }
  }
  BOOL v19 = __OFADD__(v12++, 1);
  if (v19)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v12 >= v29) {
    goto LABEL_27;
  }
  unint64_t v20 = *(void *)(v28 + 8 * v12);
  if (v20)
  {
LABEL_16:
    unint64_t v16 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v12 << 6);
    goto LABEL_17;
  }
  int64_t v21 = v12 + 1;
  if (v12 + 1 >= v29) {
    goto LABEL_27;
  }
  unint64_t v20 = *(void *)(v28 + 8 * v21);
  if (v20) {
    goto LABEL_15;
  }
  int64_t v21 = v12 + 2;
  if (v12 + 2 >= v29) {
    goto LABEL_27;
  }
  unint64_t v20 = *(void *)(v28 + 8 * v21);
  if (v20) {
    goto LABEL_15;
  }
  int64_t v21 = v12 + 3;
  if (v12 + 3 >= v29)
  {
LABEL_27:
    uint64_t v23 = v25;
    uint64_t v24 = v27;
    swift_retain();
    return sub_251F1BAE0(v26, v23, v24, a3);
  }
  unint64_t v20 = *(void *)(v28 + 8 * v21);
  if (v20)
  {
LABEL_15:
    int64_t v12 = v21;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v12 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v12 >= v29) {
      goto LABEL_27;
    }
    unint64_t v20 = *(void *)(v28 + 8 * v12);
    ++v21;
    if (v20) {
      goto LABEL_16;
    }
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_251AAD928(uint64_t result)
{
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v2 = result;
  uint64_t v3 = *(void *)(result + 56);
  uint64_t v27 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & v3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  v26[1] = v26;
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v29 = v8;
  uint64_t v30 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v28 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  if (!v6) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v10 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  unint64_t v11 = v10 | (v9 << 6);
  int64_t v12 = v30;
  while (1)
  {
    uint64_t v16 = *(void *)(v2 + 48);
    uint64_t v17 = sub_251F34DA0();
    uint64_t v18 = *(void *)(v17 - 8);
    (*(void (**)(char *, unint64_t, uint64_t))(v18 + 16))(v12, v16 + *(void *)(v18 + 72) * v11, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v12, 0, 1, v17);
    uint64_t v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48))(v12, 1, v17);
    if (v19 == 1) {
      return swift_release();
    }
    MEMORY[0x270FA5388](v19);
    int64_t v21 = (char *)v26 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v22 = (*(uint64_t (**)(char *, char *, uint64_t))(v18 + 32))(v21, v12, v17);
    MEMORY[0x270FA5388](v22);
    uint64_t v24 = (char *)v26 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_251B22560((uint64_t)v21, (uint64_t)v24);
    sub_251A1B064((uint64_t)v24, &qword_26B21FF90);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v21, v17);
    if (v6) {
      goto LABEL_5;
    }
LABEL_6:
    int64_t v13 = v9 + 1;
    int64_t v12 = v30;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v13 >= v28) {
      goto LABEL_25;
    }
    unint64_t v14 = *(void *)(v27 + 8 * v13);
    ++v9;
    if (!v14)
    {
      int64_t v9 = v13 + 1;
      if (v13 + 1 >= v28) {
        goto LABEL_25;
      }
      unint64_t v14 = *(void *)(v27 + 8 * v9);
      if (!v14)
      {
        int64_t v9 = v13 + 2;
        if (v13 + 2 >= v28) {
          goto LABEL_25;
        }
        unint64_t v14 = *(void *)(v27 + 8 * v9);
        if (!v14)
        {
          int64_t v9 = v13 + 3;
          if (v13 + 3 >= v28) {
            goto LABEL_25;
          }
          unint64_t v14 = *(void *)(v27 + 8 * v9);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_21:
    unint64_t v6 = (v14 - 1) & v14;
    unint64_t v11 = __clz(__rbit64(v14)) + (v9 << 6);
  }
  int64_t v15 = v13 + 4;
  if (v15 >= v28)
  {
LABEL_25:
    uint64_t v25 = sub_251F34DA0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v12, 1, 1, v25);
    return swift_release();
  }
  unint64_t v14 = *(void *)(v27 + 8 * v15);
  if (v14)
  {
    int64_t v9 = v15;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v9 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v9 >= v28) {
      goto LABEL_25;
    }
    unint64_t v14 = *(void *)(v27 + 8 * v9);
    ++v15;
    if (v14) {
      goto LABEL_21;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_251AADD00(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for StaticService();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6 - 8);
  unint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v8);
  int64_t v13 = (char *)&v25 - v12;
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v14 = a1 + 56;
  uint64_t v15 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & *(void *)(a1 + 56);
  int64_t v18 = (unint64_t)(v15 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v19 = 0;
  while (1)
  {
    if (v17)
    {
      unint64_t v20 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v21 = v20 | (v19 << 6);
      goto LABEL_6;
    }
    int64_t v22 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v22 >= v18) {
      return swift_release();
    }
    unint64_t v23 = *(void *)(v14 + 8 * v22);
    ++v19;
    if (!v23)
    {
      int64_t v19 = v22 + 1;
      if (v22 + 1 >= v18) {
        return swift_release();
      }
      unint64_t v23 = *(void *)(v14 + 8 * v19);
      if (!v23)
      {
        int64_t v19 = v22 + 2;
        if (v22 + 2 >= v18) {
          return swift_release();
        }
        unint64_t v23 = *(void *)(v14 + 8 * v19);
        if (!v23)
        {
          int64_t v19 = v22 + 3;
          if (v22 + 3 >= v18) {
            return swift_release();
          }
          unint64_t v23 = *(void *)(v14 + 8 * v19);
          if (!v23) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v17 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v19 << 6);
LABEL_6:
    sub_251AB3C1C(*(void *)(a1 + 48) + *(void *)(v7 + 72) * v21, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for StaticService);
    sub_251AB3CE4((uint64_t)v13, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticService);
    sub_251B22880((uint64_t)v10, (uint64_t)v5);
    sub_251A1B064((uint64_t)v5, qword_26B21EE20);
    uint64_t result = sub_251AB3C84((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticService);
  }
  int64_t v24 = v22 + 4;
  if (v24 >= v18) {
    return swift_release();
  }
  unint64_t v23 = *(void *)(v14 + 8 * v24);
  if (v23)
  {
    int64_t v19 = v24;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v19 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v19 >= v18) {
      return swift_release();
    }
    unint64_t v23 = *(void *)(v14 + 8 * v19);
    ++v24;
    if (v23) {
      goto LABEL_23;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_251AADFB8(uint64_t result)
{
  if (*(void *)(*(void *)v1 + 16))
  {
    uint64_t v2 = result;
    uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    v20[0] = v20;
    MEMORY[0x270FA5388](v3 - 8);
    uint64_t v26 = v4;
    uint64_t v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v6 = *(void *)(v2 + 16);
    v20[1] = v2;
    if (v6)
    {
      uint64_t v7 = sub_251F34DA0();
      uint64_t v8 = *(void *)(v7 - 8);
      uint64_t v9 = v8;
      unint64_t v10 = v2 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
      uint64_t v21 = *(void *)(v8 + 72);
      uint64_t v25 = (void (**)(char *, void, uint64_t, uint64_t))(v8 + 56);
      uint64_t v12 = v8 + 16;
      unint64_t v11 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
      uint64_t v23 = v12;
      int64_t v24 = v11;
      int64_t v22 = (uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      v20[2] = v9 + 8;
      v20[3] = v9 + 32;
      swift_bridgeObjectRetain();
      while (1)
      {
        v24(v5, v10, v7);
        (*v25)(v5, 0, 1, v7);
        uint64_t v13 = (*v22)(v5, 1, v7);
        if (v13 == 1) {
          break;
        }
        MEMORY[0x270FA5388](v13);
        uint64_t v15 = (char *)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
        uint64_t v16 = (*(uint64_t (**)(char *, char *, uint64_t))(v9 + 32))(v15, v5, v7);
        MEMORY[0x270FA5388](v16);
        int64_t v18 = (char *)v20 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
        sub_251B22560((uint64_t)v15, (uint64_t)v18);
        sub_251A1B064((uint64_t)v18, &qword_26B21FF90);
        (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v7);
        v10 += v21;
        if (!--v6) {
          goto LABEL_8;
        }
      }
    }
    else
    {
      swift_bridgeObjectRetain();
LABEL_8:
      uint64_t v19 = sub_251F34DA0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v5, 1, 1, v19);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_251AAE2A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v64 = *MEMORY[0x263EF8340];
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x263F8EE88];
  }
  uint64_t v3 = a1;
  uint64_t v4 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = ~v4;
  uint64_t v7 = a1 + 56;
  uint64_t v6 = *(void *)(a1 + 56);
  uint64_t v8 = -v4;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  uint64_t v59 = a1;
  uint64_t v60 = a1 + 56;
  unint64_t v10 = v9 & v6;
  uint64_t v61 = v5;
  int64_t v62 = 0;
  unint64_t v63 = v9 & v6;
  uint64_t v11 = sub_251F34DA0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = v12;
  id v50 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  uint64_t v55 = v12 + 16;
  uint64_t v14 = *(void *)(v12 + 64);
  uint64_t v48 = (void (**)(char *, char *, uint64_t))(v12 + 32);
  unint64_t v49 = (unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  uint64_t v56 = (char *)(v2 + 56);
  uint64_t v57 = (uint64_t (**)(char *, uint64_t))(v12 + 8);
  swift_bridgeObjectRetain();
  uint64_t v53 = 0;
  uint64_t v54 = v2;
  uint64_t v46 = v13;
  uint64_t v47 = v14;
  while (1)
  {
    uint64_t v15 = (uint64_t *)MEMORY[0x270FA5388](&qword_26B21FF90);
    uint64_t v58 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(v15);
    MEMORY[0x270FA5388](v16 - 8);
    int64_t v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
    char v51 = (uint64_t *)v10;
    uint64_t v52 = v19;
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      uint64_t v21 = (v10 - 1) & v10;
      int64_t v22 = v53;
      unint64_t v23 = v20 | (v53 << 6);
LABEL_8:
      (*(void (**)(char *, unint64_t, uint64_t))(v13 + 16))(v18, *(void *)(v3 + 48) + *(void *)(v13 + 72) * v23, v11);
      uint64_t v24 = 0;
      goto LABEL_9;
    }
    int64_t v22 = v53 + 1;
    if (__OFADD__(v53, 1)) {
      __break(1u);
    }
    int64_t v33 = (unint64_t)(v5 + 64) >> 6;
    if (v22 >= v33)
    {
      uint64_t v21 = 0;
      uint64_t v24 = 1;
      int64_t v22 = v53;
      goto LABEL_9;
    }
    unint64_t v34 = *(void *)(v7 + 8 * v22);
    if (v34) {
      goto LABEL_18;
    }
    int64_t v35 = v53 + 2;
    if (v53 + 2 >= v33) {
      goto LABEL_36;
    }
    unint64_t v34 = *(void *)(v7 + 8 * v35);
    if (v34) {
      goto LABEL_24;
    }
    if (v53 + 3 >= v33) {
      goto LABEL_37;
    }
    unint64_t v34 = *(void *)(v7 + 8 * (v53 + 3));
    if (v34)
    {
      int64_t v22 = v53 + 3;
      goto LABEL_18;
    }
    int64_t v35 = v53 + 4;
    if (v53 + 4 < v33)
    {
      unint64_t v34 = *(void *)(v7 + 8 * v35);
      if (v34)
      {
LABEL_24:
        int64_t v22 = v35;
LABEL_18:
        uint64_t v21 = (v34 - 1) & v34;
        unint64_t v23 = __clz(__rbit64(v34)) + (v22 << 6);
        goto LABEL_8;
      }
      int64_t v22 = v53 + 5;
      if (v53 + 5 < v33)
      {
        unint64_t v34 = *(void *)(v7 + 8 * v22);
        if (v34) {
          goto LABEL_18;
        }
        int64_t v22 = v33 - 1;
        uint64_t v36 = v53 + 6;
        while (v33 != v36)
        {
          unint64_t v34 = *(void *)(v7 + 8 * v36++);
          if (v34)
          {
            int64_t v22 = v36 - 1;
            goto LABEL_18;
          }
        }
LABEL_36:
        uint64_t v21 = 0;
        uint64_t v24 = 1;
        goto LABEL_9;
      }
LABEL_37:
      uint64_t v21 = 0;
      uint64_t v24 = 1;
      int64_t v22 = v35;
      goto LABEL_9;
    }
    uint64_t v21 = 0;
    uint64_t v24 = 1;
    int64_t v22 = v53 + 3;
LABEL_9:
    (*v50)(v18, v24, 1, v11);
    uint64_t v59 = v3;
    uint64_t v60 = v7;
    uint64_t v61 = v5;
    int64_t v62 = v22;
    unint64_t v63 = v21;
    if ((*v49)(v18, 1, v11) == 1)
    {
      sub_251A1E630();
      sub_251A1B064((uint64_t)v18, &qword_26B21FF90);
      return v2;
    }
    char v51 = &v45;
    (*v48)(v58, v18, v11);
    sub_251AB3D80((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA9630]);
    uint64_t v25 = sub_251F35600();
    uint64_t v26 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v27 = v25 & ~v26;
    if ((*(void *)&v56[(v27 >> 3) & 0xFFFFFFFFFFFFFF8] >> v27)) {
      break;
    }
    uint64_t v32 = *v57;
    uint64_t v14 = v47;
LABEL_20:
    v32(v58, v11);
    uint64_t v3 = v59;
    uint64_t v7 = v60;
    uint64_t v5 = v61;
    uint64_t v53 = v62;
    unint64_t v10 = v63;
  }
  uint64_t v28 = v47;
  uint64_t v52 = (unint64_t)v57 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t v53 = ~v26;
  uint64_t v29 = *(void *)(v13 + 72);
  uint64_t v30 = *(void (**)(char *, unint64_t, uint64_t))(v13 + 16);
  while (1)
  {
    MEMORY[0x270FA5388](v25);
    v30((char *)&v45 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0), *(void *)(v54 + 48) + v29 * v27, v11);
    sub_251AB3D80((unint64_t *)&qword_26B21F2B8, MEMORY[0x270FA9630]);
    char v31 = sub_251F35650();
    uint64_t v32 = *v57;
    uint64_t v25 = (*v57)((char *)&v45 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
    if (v31) {
      break;
    }
    unint64_t v27 = (v27 + 1) & v53;
    if (((*(void *)&v56[(v27 >> 3) & 0xFFFFFFFFFFFFFF8] >> v27) & 1) == 0)
    {
      uint64_t v2 = v54;
      uint64_t v13 = v46;
      uint64_t v14 = v28;
      goto LABEL_20;
    }
  }
  uint64_t isStackAllocationSafe = v32(v58, v11);
  uint64_t v38 = v54;
  char v39 = *(unsigned char *)(v54 + 32);
  unint64_t v40 = (unint64_t)((1 << v39) + 63) >> 6;
  size_t v41 = 8 * v40;
  if ((v39 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    memcpy((char *)&v45 - ((v41 + 15) & 0x3FFFFFFFFFFFFFF0), v56, v41);
    uint64_t v42 = sub_251AAF090((unint64_t *)((char *)&v45 - ((v41 + 15) & 0x3FFFFFFFFFFFFFF0)), v40, v38, v27, &v59);
    swift_release();
    sub_251A1E630();
    return v42;
  }
  else
  {
    uint64_t v43 = (void *)swift_slowAlloc();
    memcpy(v43, v56, v41);
    uint64_t v2 = sub_251AAF090((unint64_t *)v43, v40, v38, v27, &v59);
    swift_release();
    sub_251A1E630();
    MEMORY[0x2533AC760](v43, -1, -1);
  }
  return v2;
}

uint64_t sub_251AAE990(uint64_t a1, uint64_t a2)
{
  uint64_t v62 = *MEMORY[0x263EF8340];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = type metadata accessor for StaticService();
  uint64_t v7 = *(void *)(v52 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v52);
  unint64_t v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v43 - v11;
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x263F8EE88];
  }
  id v50 = v6;
  uint64_t v13 = *(void *)(a1 + 56);
  uint64_t v14 = -1 << *(unsigned char *)(a1 + 32);
  if (-v14 < 64) {
    uint64_t v15 = ~(-1 << -(char)v14);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v13;
  uint64_t v57 = a1;
  uint64_t v58 = a1 + 56;
  uint64_t v53 = a1 + 56;
  uint64_t v51 = ~v14;
  uint64_t v59 = ~v14;
  int64_t v60 = 0;
  uint64_t v61 = v15 & v13;
  unint64_t v49 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
  uint64_t v48 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  uint64_t v17 = a2 + 56;
  unint64_t v18 = (unint64_t)(63 - v14) >> 6;
  unint64_t v44 = v18 - 1;
  swift_bridgeObjectRetain();
  int64_t v19 = 0;
  int64_t v47 = v18;
  unint64_t v46 = v18 - 6;
  uint64_t v45 = a1 + 104;
  uint64_t v54 = v7;
  while (1)
  {
    if (v16)
    {
      uint64_t v55 = (v16 - 1) & v16;
      unint64_t v20 = __clz(__rbit64(v16)) | (v19 << 6);
      int64_t v21 = v19;
      uint64_t v22 = (uint64_t)v50;
LABEL_9:
      sub_251AB3C1C(*(void *)(a1 + 48) + *(void *)(v7 + 72) * v20, v22, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v23 = 0;
      goto LABEL_10;
    }
    int64_t v21 = v19 + 1;
    uint64_t v22 = (uint64_t)v50;
    if (__OFADD__(v19, 1)) {
      __break(1u);
    }
    if (v21 >= v47)
    {
      uint64_t v55 = 0;
      uint64_t v23 = 1;
      int64_t v21 = v19;
      goto LABEL_10;
    }
    unint64_t v32 = *(void *)(v53 + 8 * v21);
    if (v32) {
      goto LABEL_19;
    }
    int64_t v33 = v19 + 2;
    if (v19 + 2 >= v47)
    {
      uint64_t v55 = 0;
      uint64_t v23 = 1;
      goto LABEL_10;
    }
    unint64_t v32 = *(void *)(v53 + 8 * v33);
    if (v32) {
      goto LABEL_23;
    }
    if (v19 + 3 >= v47)
    {
LABEL_36:
      uint64_t v55 = 0;
      uint64_t v23 = 1;
      int64_t v21 = v33;
      goto LABEL_10;
    }
    unint64_t v32 = *(void *)(v53 + 8 * (v19 + 3));
    if (v32)
    {
      int64_t v21 = v19 + 3;
      uint64_t v7 = v54;
      goto LABEL_19;
    }
    int64_t v33 = v19 + 4;
    if (v19 + 4 >= v47)
    {
      uint64_t v55 = 0;
      uint64_t v23 = 1;
      int64_t v21 = v19 + 3;
    }
    else
    {
      unint64_t v32 = *(void *)(v53 + 8 * v33);
      if (v32)
      {
LABEL_23:
        int64_t v21 = v33;
        uint64_t v7 = v54;
LABEL_19:
        uint64_t v55 = (v32 - 1) & v32;
        unint64_t v20 = __clz(__rbit64(v32)) + (v21 << 6);
        goto LABEL_9;
      }
      int64_t v21 = v19 + 5;
      if (v19 + 5 >= v47) {
        goto LABEL_36;
      }
      uint64_t v7 = v54;
      unint64_t v32 = *(void *)(v53 + 8 * v21);
      if (v32) {
        goto LABEL_19;
      }
      uint64_t v34 = v19;
      while (v46 != v34)
      {
        unint64_t v32 = *(void *)(v45 + 8 * v34++);
        if (v32)
        {
          int64_t v21 = v34 + 5;
          goto LABEL_19;
        }
      }
      uint64_t v55 = 0;
      uint64_t v23 = 1;
      int64_t v21 = v44;
    }
LABEL_10:
    uint64_t v24 = v52;
    (*v49)(v22, v23, 1, v52);
    uint64_t v57 = a1;
    uint64_t v58 = v53;
    uint64_t v59 = v51;
    int64_t v60 = v21;
    uint64_t v61 = v55;
    if ((*v48)(v22, 1, v24) == 1)
    {
      sub_251A1E630();
      sub_251A1B064(v22, qword_26B21EE20);
      return a2;
    }
    uint64_t v25 = a1;
    sub_251AB3CE4(v22, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticService);
    sub_251F36CA0();
    StaticService.hash(into:)(v56);
    uint64_t v26 = sub_251F36D00();
    uint64_t v27 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v28 = v26 & ~v27;
    if ((*(void *)(v17 + ((v28 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v28)) {
      break;
    }
LABEL_6:
    sub_251AB3C84((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticService);
    int64_t v19 = v21;
    a1 = v25;
    uint64_t v7 = v54;
    unint64_t v16 = v55;
  }
  uint64_t v29 = ~v27;
  uint64_t v30 = *(void *)(v54 + 72);
  while (1)
  {
    sub_251AB3C1C(*(void *)(a2 + 48) + v30 * v28, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticService);
    char v31 = _s13HomeDataModel13StaticServiceV2eeoiySbAC_ACtFZ_0((uint64_t)v10, (uint64_t)v12);
    sub_251AB3C84((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticService);
    if (v31) {
      break;
    }
    unint64_t v28 = (v28 + 1) & v29;
    if (((*(void *)(v17 + ((v28 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v28) & 1) == 0) {
      goto LABEL_6;
    }
  }
  uint64_t isStackAllocationSafe = sub_251AB3C84((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticService);
  char v36 = *(unsigned char *)(a2 + 32);
  unint64_t v37 = (unint64_t)((1 << v36) + 63) >> 6;
  size_t v38 = 8 * v37;
  if ((v36 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    memcpy((char *)&v43 - ((v38 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(a2 + 56), v38);
    uint64_t v39 = sub_251AAF638((unint64_t *)((char *)&v43 - ((v38 + 15) & 0x3FFFFFFFFFFFFFF0)), v37, a2, v28, &v57);
    swift_release();
    sub_251A1E630();
    return v39;
  }
  else
  {
    unint64_t v40 = (void *)swift_slowAlloc();
    memcpy(v40, (const void *)(a2 + 56), v38);
    uint64_t v41 = sub_251AAF638((unint64_t *)v40, v37, a2, v28, &v57);
    swift_release();
    sub_251A1E630();
    MEMORY[0x2533AC760](v40, -1, -1);
    return v41;
  }
}

uint64_t sub_251AAF090(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v45 = a2;
  uint64_t v7 = *(void *)(a3 + 16);
  *(unint64_t *)((char *)a1 + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  unint64_t v46 = a1;
  uint64_t v47 = v7 - 1;
  uint64_t result = sub_251F34DA0();
  uint64_t v9 = result;
  uint64_t v10 = *(void *)(result - 8);
  uint64_t v11 = v10;
  uint64_t v57 = v10 + 16;
  uint64_t v52 = (unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  uint64_t v53 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  uint64_t v12 = *(void *)(v10 + 64);
  uint64_t v58 = a3;
  uint64_t v59 = v12;
  uint64_t v51 = (void (**)(char *, char *, uint64_t))(v11 + 32);
  uint64_t v56 = a3 + 56;
  int64_t v60 = (uint64_t (**)(char *, uint64_t))(v11 + 8);
  uint64_t v48 = v11;
  unint64_t v49 = a5;
  while (1)
  {
    uint64_t v54 = &v44;
    MEMORY[0x270FA5388](result);
    uint64_t v61 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    uint64_t result = MEMORY[0x270FA5388](v15 - 8);
    uint64_t v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v19 = *a5;
    uint64_t v18 = a5[1];
    uint64_t v21 = a5[2];
    int64_t v20 = a5[3];
    unint64_t v22 = a5[4];
    if (!v22) {
      break;
    }
    uint64_t v55 = (v22 - 1) & v22;
    unint64_t v23 = __clz(__rbit64(v22)) | (v20 << 6);
LABEL_6:
    (*(void (**)(char *, unint64_t, uint64_t))(v11 + 16))(v17, *(void *)(v19 + 48) + *(void *)(v11 + 72) * v23, v9);
    uint64_t v24 = 0;
LABEL_7:
    (*v53)(v17, v24, 1, v9);
    *a5 = v19;
    a5[1] = v18;
    a5[2] = v21;
    a5[3] = v20;
    a5[4] = v55;
    if ((*v52)(v17, 1, v9) == 1)
    {
      sub_251A1B064((uint64_t)v17, &qword_26B21FF90);
      uint64_t v43 = v58;
      swift_retain();
      return sub_251F1B4B0(v46, v45, v47, v43);
    }
    (*v51)(v61, v17, v9);
    uint64_t v25 = v58;
    sub_251AB3D80((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA9630]);
    uint64_t v26 = sub_251F35600();
    uint64_t v27 = -1 << *(unsigned char *)(v25 + 32);
    unint64_t v28 = v26 & ~v27;
    if ((*(void *)(v56 + ((v28 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v28))
    {
      uint64_t v50 = (unint64_t)v60 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      uint64_t v29 = v9;
      uint64_t v55 = ~v27;
      uint64_t v30 = *(void *)(v11 + 72);
      char v31 = *(void (**)(char *, unint64_t, uint64_t))(v11 + 16);
      while (1)
      {
        MEMORY[0x270FA5388](v26);
        int64_t v33 = (char *)&v44 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
        v31(v33, *(void *)(v58 + 48) + v30 * v28, v29);
        sub_251AB3D80((unint64_t *)&qword_26B21F2B8, MEMORY[0x270FA9630]);
        char v34 = sub_251F35650();
        uint64_t v13 = *v60;
        uint64_t v26 = (*v60)(v33, v29);
        if (v34) {
          break;
        }
        unint64_t v28 = (v28 + 1) & v55;
        if (((*(void *)(v56 + ((v28 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v28) & 1) == 0)
        {
          uint64_t v11 = v48;
          a5 = v49;
          uint64_t v9 = v29;
          goto LABEL_3;
        }
      }
      uint64_t v9 = v29;
      uint64_t result = v13(v61, v29);
      uint64_t v38 = (v28 >> 3) & 0x1FFFFFFFFFFFFFF8;
      uint64_t v39 = *(unint64_t *)((char *)v46 + v38);
      *(unint64_t *)((char *)v46 + v38) = v39 & ~(1 << v28);
      if ((v39 & (1 << v28)) != 0)
      {
        uint64_t v40 = v47 - 1;
        if (__OFSUB__(v47, 1)) {
          goto LABEL_43;
        }
        --v47;
        uint64_t v11 = v48;
        a5 = v49;
        if (!v40) {
          return MEMORY[0x263F8EE88];
        }
      }
      else
      {
        uint64_t v11 = v48;
        a5 = v49;
      }
    }
    else
    {
      uint64_t v13 = *v60;
LABEL_3:
      uint64_t result = v13(v61, v9);
    }
  }
  int64_t v35 = v20 + 1;
  if (!__OFADD__(v20, 1))
  {
    int64_t v36 = (unint64_t)(v21 + 64) >> 6;
    if (v35 >= v36)
    {
      uint64_t v55 = 0;
      uint64_t v24 = 1;
      goto LABEL_7;
    }
    unint64_t v37 = *(void *)(v18 + 8 * v35);
    if (v37) {
      goto LABEL_16;
    }
    int64_t v41 = v20 + 2;
    if (v20 + 2 >= v36) {
      goto LABEL_37;
    }
    unint64_t v37 = *(void *)(v18 + 8 * v41);
    if (!v37)
    {
      if (v20 + 3 >= v36) {
        goto LABEL_38;
      }
      unint64_t v37 = *(void *)(v18 + 8 * (v20 + 3));
      if (v37)
      {
        int64_t v35 = v20 + 3;
        goto LABEL_16;
      }
      int64_t v41 = v20 + 4;
      if (v20 + 4 >= v36)
      {
        uint64_t v55 = 0;
        uint64_t v24 = 1;
        v20 += 3;
        goto LABEL_7;
      }
      unint64_t v37 = *(void *)(v18 + 8 * v41);
      if (!v37)
      {
        int64_t v35 = v20 + 5;
        if (v20 + 5 >= v36)
        {
LABEL_38:
          uint64_t v55 = 0;
          uint64_t v24 = 1;
          int64_t v20 = v41;
          goto LABEL_7;
        }
        unint64_t v37 = *(void *)(v18 + 8 * v35);
        if (!v37)
        {
          int64_t v35 = v36 - 1;
          int64_t v42 = v20 + 6;
          while (v36 != v42)
          {
            unint64_t v37 = *(void *)(v18 + 8 * v42++);
            if (v37)
            {
              int64_t v35 = v42 - 1;
              goto LABEL_16;
            }
          }
LABEL_37:
          uint64_t v55 = 0;
          uint64_t v24 = 1;
          int64_t v20 = v35;
          goto LABEL_7;
        }
        goto LABEL_16;
      }
    }
    int64_t v35 = v41;
LABEL_16:
    uint64_t v55 = (v37 - 1) & v37;
    unint64_t v23 = __clz(__rbit64(v37)) + (v35 << 6);
    int64_t v20 = v35;
    goto LABEL_6;
  }
  __break(1u);
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_251AAF638(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t *a5)
{
  uint64_t v47 = a2;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v50 = (uint64_t)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = type metadata accessor for StaticService();
  uint64_t v11 = MEMORY[0x270FA5388](v53);
  uint64_t v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)&v46 - v15;
  uint64_t v17 = *(void *)(a3 + 16);
  uint64_t v18 = (a4 >> 3) & 0x1FFFFFFFFFFFFFF8;
  uint64_t v19 = *(unint64_t *)((char *)a1 + v18) & ((-1 << a4) - 1);
  unint64_t v49 = a1;
  *(unint64_t *)((char *)a1 + v18) = v19;
  uint64_t v20 = v17 - 1;
  uint64_t v54 = v21;
  uint64_t v51 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48);
  uint64_t v52 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 56);
  uint64_t v22 = a3 + 56;
  while (2)
  {
    uint64_t v48 = v20;
    do
    {
      while (1)
      {
        uint64_t v24 = *a5;
        uint64_t v23 = a5[1];
        uint64_t v25 = a5[2];
        int64_t v26 = a5[3];
        unint64_t v27 = a5[4];
        uint64_t v58 = v23;
        uint64_t v56 = v25;
        if (v27)
        {
          uint64_t v55 = (v27 - 1) & v27;
          unint64_t v28 = __clz(__rbit64(v27)) | (v26 << 6);
LABEL_6:
          uint64_t v29 = v50;
          sub_251AB3C1C(*(void *)(v24 + 48) + *(void *)(v54 + 72) * v28, v50, (uint64_t (*)(void))type metadata accessor for StaticService);
          uint64_t v30 = 0;
          goto LABEL_7;
        }
        int64_t v39 = v26 + 1;
        if (__OFADD__(v26, 1))
        {
          __break(1u);
          goto LABEL_43;
        }
        int64_t v40 = (unint64_t)(v25 + 64) >> 6;
        if (v39 >= v40)
        {
          uint64_t v55 = 0;
          uint64_t v30 = 1;
          uint64_t v29 = v50;
          goto LABEL_7;
        }
        unint64_t v41 = *(void *)(v23 + 8 * v39);
        if (v41) {
          goto LABEL_16;
        }
        int64_t v44 = v26 + 2;
        if (v26 + 2 >= v40) {
          goto LABEL_34;
        }
        unint64_t v41 = *(void *)(v23 + 8 * v44);
        if (v41) {
          goto LABEL_22;
        }
        if (v26 + 3 >= v40) {
          goto LABEL_35;
        }
        unint64_t v41 = *(void *)(v23 + 8 * (v26 + 3));
        if (v41)
        {
          int64_t v39 = v26 + 3;
          goto LABEL_16;
        }
        int64_t v44 = v26 + 4;
        if (v26 + 4 < v40)
        {
          unint64_t v41 = *(void *)(v23 + 8 * v44);
          if (v41)
          {
LABEL_22:
            int64_t v39 = v44;
LABEL_16:
            uint64_t v55 = (v41 - 1) & v41;
            unint64_t v28 = __clz(__rbit64(v41)) + (v39 << 6);
            int64_t v26 = v39;
            goto LABEL_6;
          }
          int64_t v39 = v26 + 5;
          if (v26 + 5 < v40)
          {
            unint64_t v41 = *(void *)(v23 + 8 * v39);
            if (v41) {
              goto LABEL_16;
            }
            int64_t v39 = v40 - 1;
            int64_t v45 = v26 + 6;
            while (v40 != v45)
            {
              unint64_t v41 = *(void *)(v23 + 8 * v45++);
              if (v41)
              {
                int64_t v39 = v45 - 1;
                goto LABEL_16;
              }
            }
LABEL_34:
            uint64_t v55 = 0;
            uint64_t v30 = 1;
            int64_t v26 = v39;
            uint64_t v29 = v50;
            goto LABEL_7;
          }
LABEL_35:
          uint64_t v55 = 0;
          uint64_t v30 = 1;
          int64_t v26 = v44;
          uint64_t v29 = v50;
          goto LABEL_7;
        }
        uint64_t v55 = 0;
        uint64_t v30 = 1;
        v26 += 3;
        uint64_t v29 = v50;
LABEL_7:
        uint64_t v31 = v53;
        (*v52)(v29, v30, 1, v53);
        uint64_t v32 = v58;
        *a5 = v24;
        a5[1] = v32;
        a5[2] = v56;
        a5[3] = v26;
        a5[4] = v55;
        if ((*v51)(v29, 1, v31) == 1)
        {
          sub_251A1B064(v29, qword_26B21EE20);
          swift_retain();
          return sub_251F1BD94(v49, v47, v48, a3);
        }
        sub_251AB3CE4(v29, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for StaticService);
        sub_251F36CA0();
        StaticService.hash(into:)(v57);
        uint64_t v33 = sub_251F36D00();
        uint64_t v34 = -1 << *(unsigned char *)(a3 + 32);
        unint64_t v35 = v33 & ~v34;
        if ((*(void *)(v22 + ((v35 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v35)) {
          break;
        }
LABEL_3:
        uint64_t result = sub_251AB3C84((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for StaticService);
      }
      uint64_t v36 = ~v34;
      uint64_t v37 = *(void *)(v54 + 72);
      while (1)
      {
        sub_251AB3C1C(*(void *)(a3 + 48) + v37 * v35, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for StaticService);
        char v38 = _s13HomeDataModel13StaticServiceV2eeoiySbAC_ACtFZ_0((uint64_t)v13, (uint64_t)v16);
        sub_251AB3C84((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for StaticService);
        if (v38) {
          break;
        }
        unint64_t v35 = (v35 + 1) & v36;
        if (((*(void *)(v22 + ((v35 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v35) & 1) == 0) {
          goto LABEL_3;
        }
      }
      uint64_t result = sub_251AB3C84((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for StaticService);
      uint64_t v42 = (v35 >> 3) & 0x1FFFFFFFFFFFFFF8;
      uint64_t v43 = *(unint64_t *)((char *)v49 + v42);
      *(unint64_t *)((char *)v49 + v42) = v43 & ~(1 << v35);
    }
    while ((v43 & (1 << v35)) == 0);
    uint64_t v20 = v48 - 1;
    if (__OFSUB__(v48, 1))
    {
LABEL_43:
      __break(1u);
      return result;
    }
    if (v48 != 1) {
      continue;
    }
    return MEMORY[0x263F8EE88];
  }
}

uint64_t _s13HomeDataModel25LightsCategoryInformationV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  if ((static StateSnapshot.== infix(_:_:)(a1, a2) & 1) == 0) {
    return 0;
  }
  uint64_t v4 = (int *)type metadata accessor for LightsCategoryInformation();
  if ((sub_251DB1CC8(*((unsigned char *)a1 + v4[5]), *((unsigned char *)a2 + v4[5])) & 1) == 0) {
    return 0;
  }
  uint64_t v5 = v4[6];
  uint64_t v6 = (uint64_t *)((char *)a1 + v5);
  uint64_t v7 = *(uint64_t *)((char *)a1 + v5 + 8);
  uint64_t v8 = (uint64_t *)((char *)a2 + v5);
  uint64_t v9 = v8[1];
  if (v7)
  {
    if (!v9) {
      return 0;
    }
    BOOL v10 = *v6 == *v8 && v7 == v9;
    if (!v10 && (sub_251F36B10() & 1) == 0) {
      return 0;
    }
  }
  else if (v9)
  {
    return 0;
  }
  if ((sub_251B04FB8(*(uint64_t *)((char *)a1 + v4[7]), *(uint64_t *)((char *)a2 + v4[7])) & 1) == 0
    || (sub_251B05350(*(uint64_t *)((char *)a1 + v4[8]), *(uint64_t *)((char *)a2 + v4[8])) & 1) == 0
    || (sub_251B05350(*(uint64_t *)((char *)a1 + v4[9]), *(uint64_t *)((char *)a2 + v4[9])) & 1) == 0)
  {
    return 0;
  }
  uint64_t v11 = v4[10];
  uint64_t v12 = *(uint64_t *)((char *)a1 + v11);
  uint64_t v13 = *(uint64_t *)((char *)a2 + v11);
  return sub_251B05350(v12, v13);
}

uint64_t sub_251AAFC2C(void *a1, uint64_t a2)
{
  return sub_251AACE20(a1, a2, *(void *)(v2 + 16), (void (*)(char *))sub_251AB3DF0, (uint64_t (*)(char *))sub_251AB3D4C);
}

uint64_t sub_251AAFC70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D720);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_251AAFCD8()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_251AAFD10()
{
  return sub_251AABCDC(*(void *)(v0 + 16));
}

uint64_t sub_251AAFD18()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_251AAFD40()
{
  uint64_t v1 = *(void *)(type metadata accessor for LightsCategoryInformation() - 8);
  uint64_t v15 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v13 = *(void *)(v1 + 64);
  uint64_t v14 = (v15 + 16) & ~v15;
  uint64_t v16 = v0;
  swift_bridgeObjectRelease();
  uint64_t v2 = v0 + v14 + *(int *)(type metadata accessor for StateSnapshot(0) + 20);
  uint64_t v3 = sub_251F34DA0();
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  v4(v2, v3);
  uint64_t v5 = (int *)type metadata accessor for StaticHome();
  swift_bridgeObjectRelease();
  uint64_t v6 = v2 + v5[6];
  v4(v6, v3);
  uint64_t v7 = type metadata accessor for StaticRoom(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4(v6 + *(int *)(v7 + 32), v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = v2 + v5[7];
  v4(v8, v3);
  uint64_t v9 = type metadata accessor for StaticUser();
  swift_bridgeObjectRelease();
  v4(v8 + *(int *)(v9 + 24), v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = v2 + v5[20];
  uint64_t v11 = type metadata accessor for StaticResident();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11))
  {
    v4(v10, v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v4(v10 + *(int *)(v11 + 40), v3);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v16, v14 + v13, v15 | 7);
}

uint64_t sub_251AB01A0()
{
  uint64_t v1 = *(void *)(type metadata accessor for LightsCategoryInformation() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  return sub_251AAAFB8(v2);
}

uint64_t sub_251AB0200(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_251AB029C(&qword_269B9D730);
  uint64_t result = sub_251AB029C(&qword_269B9D738);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_251AB0268()
{
  return sub_251AB029C(&qword_269B9D740);
}

uint64_t sub_251AB029C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for LightsCategoryInformation();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_251AB02E4()
{
  unint64_t result = qword_269B9D748;
  if (!qword_269B9D748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9D748);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for LightsCategoryInformation(void *a1, void *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v43 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    id v65 = (int *)type metadata accessor for StateSnapshot(0);
    uint64_t v6 = v65[5];
    uint64_t v67 = a1;
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_251F34DA0();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
    uint64_t v68 = v10;
    uint64_t v11 = (int *)type metadata accessor for StaticHome();
    uint64_t v12 = v11[5];
    uint64_t v13 = &v7[v12];
    uint64_t v14 = &v8[v12];
    uint64_t v15 = *((void *)v14 + 1);
    *(void *)uint64_t v13 = *(void *)v14;
    *((void *)v13 + 1) = v15;
    uint64_t v16 = v11[6];
    uint64_t v17 = &v7[v16];
    uint64_t v18 = &v8[v16];
    swift_bridgeObjectRetain();
    uint64_t v69 = v9;
    v10(v17, v18, v9);
    uint64_t v19 = (int *)type metadata accessor for StaticRoom(0);
    uint64_t v20 = v19[5];
    uint64_t v21 = &v17[v20];
    uint64_t v22 = &v18[v20];
    uint64_t v23 = *((void *)v22 + 1);
    *(void *)uint64_t v21 = *(void *)v22;
    *((void *)v21 + 1) = v23;
    v17[v19[6]] = v18[v19[6]];
    *(void *)&v17[v19[7]] = *(void *)&v18[v19[7]];
    uint64_t v24 = v19[8];
    uint64_t v25 = &v17[v24];
    int64_t v26 = &v18[v24];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10(v25, v26, v9);
    *(void *)&v17[v19[9]] = *(void *)&v18[v19[9]];
    *(void *)&v17[v19[10]] = *(void *)&v18[v19[10]];
    *(void *)&v17[v19[11]] = *(void *)&v18[v19[11]];
    *(void *)&v17[v19[12]] = *(void *)&v18[v19[12]];
    *(void *)&v17[v19[13]] = *(void *)&v18[v19[13]];
    *(void *)&v17[v19[14]] = *(void *)&v18[v19[14]];
    *(void *)&v17[v19[15]] = *(void *)&v18[v19[15]];
    *(void *)&v17[v19[16]] = *(void *)&v18[v19[16]];
    *(void *)&v17[v19[17]] = *(void *)&v18[v19[17]];
    *(void *)&v17[v19[18]] = *(void *)&v18[v19[18]];
    uint64_t v27 = v11[7];
    unint64_t v28 = &v7[v27];
    uint64_t v29 = &v8[v27];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10(v28, v29, v9);
    uint64_t v30 = (int *)type metadata accessor for StaticUser();
    uint64_t v31 = v30[5];
    uint64_t v32 = &v28[v31];
    uint64_t v33 = &v29[v31];
    uint64_t v34 = *((void *)v33 + 1);
    *(void *)uint64_t v32 = *(void *)v33;
    *((void *)v32 + 1) = v34;
    uint64_t v35 = v30[6];
    uint64_t v36 = &v28[v35];
    uint64_t v37 = &v29[v35];
    swift_bridgeObjectRetain();
    v10(v36, v37, v9);
    v28[v30[7]] = v29[v30[7]];
    v28[v30[8]] = v29[v30[8]];
    v7[v11[8]] = v8[v11[8]];
    v7[v11[9]] = v8[v11[9]];
    v7[v11[10]] = v8[v11[10]];
    *(void *)&v7[v11[11]] = *(void *)&v8[v11[11]];
    *(void *)&v7[v11[12]] = *(void *)&v8[v11[12]];
    *(void *)&v7[v11[13]] = *(void *)&v8[v11[13]];
    *(void *)&v7[v11[14]] = *(void *)&v8[v11[14]];
    *(void *)&v7[v11[15]] = *(void *)&v8[v11[15]];
    *(void *)&v7[v11[16]] = *(void *)&v8[v11[16]];
    v7[v11[17]] = v8[v11[17]];
    *(void *)&v7[v11[18]] = *(void *)&v8[v11[18]];
    v7[v11[19]] = v8[v11[19]];
    uint64_t v38 = v11[20];
    int64_t v39 = &v7[v38];
    int64_t v40 = &v8[v38];
    unint64_t v41 = (int *)type metadata accessor for StaticResident();
    uint64_t v62 = *((void *)v41 - 1);
    unint64_t v63 = *(unsigned int (**)(char *, uint64_t, int *))(v62 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v63(v40, 1, v41))
    {
      uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FDA0);
      memcpy(v39, v40, *(void *)(*(void *)(v42 - 8) + 64));
    }
    else
    {
      v10(v39, v40, v69);
      uint64_t v44 = v41[5];
      int64_t v45 = &v39[v44];
      uint64_t v46 = &v40[v44];
      uint64_t v47 = *((void *)v46 + 1);
      *(void *)int64_t v45 = *(void *)v46;
      *((void *)v45 + 1) = v47;
      uint64_t v48 = v41[6];
      unint64_t v49 = &v39[v48];
      uint64_t v50 = &v40[v48];
      uint64_t v51 = *((void *)v50 + 1);
      *(void *)unint64_t v49 = *(void *)v50;
      *((void *)v49 + 1) = v51;
      *(void *)&v39[v41[7]] = *(void *)&v40[v41[7]];
      *(void *)&v39[v41[8]] = *(void *)&v40[v41[8]];
      *(_WORD *)&v39[v41[9]] = *(_WORD *)&v40[v41[9]];
      uint64_t v52 = v41[10];
      uint64_t v53 = &v39[v52];
      uint64_t v54 = &v40[v52];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v68(v53, v54, v69);
      (*(void (**)(char *, void, uint64_t, int *))(v62 + 56))(v39, 0, 1, v41);
    }
    uint64_t v43 = v67;
    *(void *)((char *)v67 + v65[6]) = *(void *)((char *)a2 + v65[6]);
    *(void *)((char *)v67 + v65[7]) = *(void *)((char *)a2 + v65[7]);
    *(void *)((char *)v67 + v65[8]) = *(void *)((char *)a2 + v65[8]);
    *(void *)((char *)v67 + v65[9]) = *(void *)((char *)a2 + v65[9]);
    *(void *)((char *)v67 + v65[10]) = *(void *)((char *)a2 + v65[10]);
    *(void *)((char *)v67 + v65[11]) = *(void *)((char *)a2 + v65[11]);
    *(void *)((char *)v67 + v65[12]) = *(void *)((char *)a2 + v65[12]);
    *(void *)((char *)v67 + v65[13]) = *(void *)((char *)a2 + v65[13]);
    *(void *)((char *)v67 + v65[14]) = *(void *)((char *)a2 + v65[14]);
    *(void *)((char *)v67 + v65[15]) = *(void *)((char *)a2 + v65[15]);
    *(void *)((char *)v67 + v65[16]) = *(void *)((char *)a2 + v65[16]);
    *(void *)((char *)v67 + v65[17]) = *(void *)((char *)a2 + v65[17]);
    *(void *)((char *)v67 + v65[18]) = *(void *)((char *)a2 + v65[18]);
    *(void *)((char *)v67 + v65[19]) = *(void *)((char *)a2 + v65[19]);
    uint64_t v55 = a3[6];
    *((unsigned char *)v67 + a3[5]) = *((unsigned char *)a2 + a3[5]);
    uint64_t v56 = (void *)((char *)v67 + v55);
    uint64_t v57 = (void *)((char *)a2 + v55);
    uint64_t v58 = v57[1];
    *uint64_t v56 = *v57;
    v56[1] = v58;
    uint64_t v59 = a3[8];
    *(void *)((char *)v67 + a3[7]) = *(void *)((char *)a2 + a3[7]);
    *(void *)((char *)v67 + v59) = *(void *)((char *)a2 + v59);
    uint64_t v60 = a3[10];
    *(void *)((char *)v67 + a3[9]) = *(void *)((char *)a2 + a3[9]);
    *(void *)((char *)v67 + v60) = *(void *)((char *)a2 + v60);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v43;
}

uint64_t destroy for LightsCategoryInformation(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = a1 + *(int *)(type metadata accessor for StateSnapshot(0) + 20);
  uint64_t v3 = sub_251F34DA0();
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  v4(v2, v3);
  uint64_t v5 = (int *)type metadata accessor for StaticHome();
  swift_bridgeObjectRelease();
  uint64_t v6 = v2 + v5[6];
  v4(v6, v3);
  uint64_t v7 = type metadata accessor for StaticRoom(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4(v6 + *(int *)(v7 + 32), v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = v2 + v5[7];
  v4(v8, v3);
  uint64_t v9 = type metadata accessor for StaticUser();
  swift_bridgeObjectRelease();
  v4(v8 + *(int *)(v9 + 24), v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = v2 + v5[20];
  uint64_t v11 = type metadata accessor for StaticResident();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11))
  {
    v4(v10, v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v4(v10 + *(int *)(v11 + 40), v3);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for LightsCategoryInformation(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v62 = (int *)type metadata accessor for StateSnapshot(0);
  uint64_t v4 = v62[5];
  uint64_t v64 = a1;
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_251F34DA0();
  uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  id v65 = v8;
  uint64_t v9 = (int *)type metadata accessor for StaticHome();
  uint64_t v10 = v9[5];
  uint64_t v11 = &v5[v10];
  uint64_t v12 = &v6[v10];
  uint64_t v13 = *((void *)v12 + 1);
  *(void *)uint64_t v11 = *(void *)v12;
  *((void *)v11 + 1) = v13;
  uint64_t v14 = v9[6];
  uint64_t v15 = &v5[v14];
  uint64_t v16 = &v6[v14];
  swift_bridgeObjectRetain();
  uint64_t v66 = v7;
  v8(v15, v16, v7);
  uint64_t v17 = (int *)type metadata accessor for StaticRoom(0);
  uint64_t v18 = v17[5];
  uint64_t v19 = &v15[v18];
  uint64_t v20 = &v16[v18];
  uint64_t v21 = *((void *)v20 + 1);
  *(void *)uint64_t v19 = *(void *)v20;
  *((void *)v19 + 1) = v21;
  v15[v17[6]] = v16[v17[6]];
  *(void *)&v15[v17[7]] = *(void *)&v16[v17[7]];
  uint64_t v22 = v17[8];
  uint64_t v23 = &v15[v22];
  uint64_t v24 = &v16[v22];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8(v23, v24, v7);
  *(void *)&v15[v17[9]] = *(void *)&v16[v17[9]];
  *(void *)&v15[v17[10]] = *(void *)&v16[v17[10]];
  *(void *)&v15[v17[11]] = *(void *)&v16[v17[11]];
  *(void *)&v15[v17[12]] = *(void *)&v16[v17[12]];
  *(void *)&v15[v17[13]] = *(void *)&v16[v17[13]];
  *(void *)&v15[v17[14]] = *(void *)&v16[v17[14]];
  *(void *)&v15[v17[15]] = *(void *)&v16[v17[15]];
  *(void *)&v15[v17[16]] = *(void *)&v16[v17[16]];
  *(void *)&v15[v17[17]] = *(void *)&v16[v17[17]];
  *(void *)&v15[v17[18]] = *(void *)&v16[v17[18]];
  uint64_t v25 = v9[7];
  int64_t v26 = &v5[v25];
  uint64_t v27 = &v6[v25];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8(v26, v27, v7);
  unint64_t v28 = (int *)type metadata accessor for StaticUser();
  uint64_t v29 = v28[5];
  uint64_t v30 = &v26[v29];
  uint64_t v31 = &v27[v29];
  uint64_t v32 = *((void *)v31 + 1);
  *(void *)uint64_t v30 = *(void *)v31;
  *((void *)v30 + 1) = v32;
  uint64_t v33 = v28[6];
  uint64_t v34 = &v26[v33];
  uint64_t v35 = &v27[v33];
  swift_bridgeObjectRetain();
  v8(v34, v35, v7);
  v26[v28[7]] = v27[v28[7]];
  v26[v28[8]] = v27[v28[8]];
  v5[v9[8]] = v6[v9[8]];
  v5[v9[9]] = v6[v9[9]];
  v5[v9[10]] = v6[v9[10]];
  *(void *)&v5[v9[11]] = *(void *)&v6[v9[11]];
  *(void *)&v5[v9[12]] = *(void *)&v6[v9[12]];
  *(void *)&v5[v9[13]] = *(void *)&v6[v9[13]];
  *(void *)&v5[v9[14]] = *(void *)&v6[v9[14]];
  *(void *)&v5[v9[15]] = *(void *)&v6[v9[15]];
  *(void *)&v5[v9[16]] = *(void *)&v6[v9[16]];
  v5[v9[17]] = v6[v9[17]];
  *(void *)&v5[v9[18]] = *(void *)&v6[v9[18]];
  v5[v9[19]] = v6[v9[19]];
  uint64_t v36 = v9[20];
  uint64_t v37 = &v5[v36];
  uint64_t v38 = &v6[v36];
  int64_t v39 = (int *)type metadata accessor for StaticResident();
  uint64_t v59 = *((void *)v39 - 1);
  uint64_t v60 = *(unsigned int (**)(char *, uint64_t, int *))(v59 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v60(v38, 1, v39))
  {
    uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FDA0);
    memcpy(v37, v38, *(void *)(*(void *)(v40 - 8) + 64));
  }
  else
  {
    v8(v37, v38, v66);
    uint64_t v41 = v39[5];
    uint64_t v42 = &v37[v41];
    uint64_t v43 = &v38[v41];
    uint64_t v44 = *((void *)v43 + 1);
    *(void *)uint64_t v42 = *(void *)v43;
    *((void *)v42 + 1) = v44;
    uint64_t v45 = v39[6];
    uint64_t v46 = &v37[v45];
    uint64_t v47 = &v38[v45];
    uint64_t v48 = *((void *)v47 + 1);
    *(void *)uint64_t v46 = *(void *)v47;
    *((void *)v46 + 1) = v48;
    *(void *)&v37[v39[7]] = *(void *)&v38[v39[7]];
    *(void *)&v37[v39[8]] = *(void *)&v38[v39[8]];
    *(_WORD *)&v37[v39[9]] = *(_WORD *)&v38[v39[9]];
    uint64_t v49 = v39[10];
    uint64_t v50 = &v37[v49];
    uint64_t v51 = &v38[v49];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v65(v50, v51, v66);
    (*(void (**)(char *, void, uint64_t, int *))(v59 + 56))(v37, 0, 1, v39);
  }
  *(void *)((char *)v64 + v62[6]) = *(void *)((char *)a2 + v62[6]);
  *(void *)((char *)v64 + v62[7]) = *(void *)((char *)a2 + v62[7]);
  *(void *)((char *)v64 + v62[8]) = *(void *)((char *)a2 + v62[8]);
  *(void *)((char *)v64 + v62[9]) = *(void *)((char *)a2 + v62[9]);
  *(void *)((char *)v64 + v62[10]) = *(void *)((char *)a2 + v62[10]);
  *(void *)((char *)v64 + v62[11]) = *(void *)((char *)a2 + v62[11]);
  *(void *)((char *)v64 + v62[12]) = *(void *)((char *)a2 + v62[12]);
  *(void *)((char *)v64 + v62[13]) = *(void *)((char *)a2 + v62[13]);
  *(void *)((char *)v64 + v62[14]) = *(void *)((char *)a2 + v62[14]);
  *(void *)((char *)v64 + v62[15]) = *(void *)((char *)a2 + v62[15]);
  *(void *)((char *)v64 + v62[16]) = *(void *)((char *)a2 + v62[16]);
  *(void *)((char *)v64 + v62[17]) = *(void *)((char *)a2 + v62[17]);
  *(void *)((char *)v64 + v62[18]) = *(void *)((char *)a2 + v62[18]);
  *(void *)((char *)v64 + v62[19]) = *(void *)((char *)a2 + v62[19]);
  uint64_t v52 = a3[6];
  *((unsigned char *)v64 + a3[5]) = *((unsigned char *)a2 + a3[5]);
  uint64_t v53 = (void *)((char *)v64 + v52);
  uint64_t v54 = (void *)((char *)a2 + v52);
  uint64_t v55 = v54[1];
  *uint64_t v53 = *v54;
  v53[1] = v55;
  uint64_t v56 = a3[8];
  *(void *)((char *)v64 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  *(void *)((char *)v64 + v56) = *(void *)((char *)a2 + v56);
  uint64_t v57 = a3[10];
  *(void *)((char *)v64 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  *(void *)((char *)v64 + v57) = *(void *)((char *)a2 + v57);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v64;
}

void *assignWithCopy for LightsCategoryInformation(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v58 = (int *)type metadata accessor for StateSnapshot(0);
  uint64_t v5 = v58[5];
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_251F34DA0();
  uint64_t v54 = *(void *)(v8 - 8);
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(v54 + 24);
  v9(v6, v7, v8);
  uint64_t v55 = v9;
  uint64_t v10 = (int *)type metadata accessor for StaticHome();
  uint64_t v11 = v10[5];
  uint64_t v12 = &v6[v11];
  uint64_t v13 = &v7[v11];
  *(void *)uint64_t v12 = *(void *)v13;
  *((void *)v12 + 1) = *((void *)v13 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = v10[6];
  uint64_t v15 = &v6[v14];
  uint64_t v16 = &v7[v14];
  v9(&v6[v14], &v7[v14], v8);
  uint64_t v17 = (int *)type metadata accessor for StaticRoom(0);
  uint64_t v18 = v17[5];
  uint64_t v19 = &v15[v18];
  uint64_t v20 = &v16[v18];
  *(void *)uint64_t v19 = *(void *)v20;
  *((void *)v19 + 1) = *((void *)v20 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[v17[6]] = v16[v17[6]];
  *(void *)&v15[v17[7]] = *(void *)&v16[v17[7]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v55(&v15[v17[8]], &v16[v17[8]], v8);
  *(void *)&v15[v17[9]] = *(void *)&v16[v17[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v15[v17[10]] = *(void *)&v16[v17[10]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v15[v17[11]] = *(void *)&v16[v17[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v15[v17[12]] = *(void *)&v16[v17[12]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v15[v17[13]] = *(void *)&v16[v17[13]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v15[v17[14]] = *(void *)&v16[v17[14]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v15[v17[15]] = *(void *)&v16[v17[15]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v15[v17[16]] = *(void *)&v16[v17[16]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v15[v17[17]] = *(void *)&v16[v17[17]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v15[v17[18]] = *(void *)&v16[v17[18]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v21 = v10[7];
  uint64_t v22 = &v6[v21];
  uint64_t v23 = &v7[v21];
  v55(&v6[v21], &v7[v21], v8);
  uint64_t v24 = (int *)type metadata accessor for StaticUser();
  uint64_t v25 = v24[5];
  int64_t v26 = &v22[v25];
  uint64_t v27 = &v23[v25];
  *(void *)int64_t v26 = *(void *)v27;
  *((void *)v26 + 1) = *((void *)v27 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v55(&v22[v24[6]], &v23[v24[6]], v8);
  v22[v24[7]] = v23[v24[7]];
  v22[v24[8]] = v23[v24[8]];
  v6[v10[8]] = v7[v10[8]];
  v6[v10[9]] = v7[v10[9]];
  v6[v10[10]] = v7[v10[10]];
  *(void *)&v6[v10[11]] = *(void *)&v7[v10[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v6[v10[12]] = *(void *)&v7[v10[12]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v6[v10[13]] = *(void *)&v7[v10[13]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v6[v10[14]] = *(void *)&v7[v10[14]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v6[v10[15]] = *(void *)&v7[v10[15]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v6[v10[16]] = *(void *)&v7[v10[16]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6[v10[17]] = v7[v10[17]];
  *(void *)&v6[v10[18]] = *(void *)&v7[v10[18]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6[v10[19]] = v7[v10[19]];
  uint64_t v28 = v10[20];
  uint64_t v29 = &v6[v28];
  uint64_t v30 = &v7[v28];
  uint64_t v31 = (int *)type metadata accessor for StaticResident();
  uint64_t v32 = *((void *)v31 - 1);
  uint64_t v33 = *(uint64_t (**)(char *, uint64_t, int *))(v32 + 48);
  LODWORD(v22) = v33(v29, 1, v31);
  int v34 = v33(v30, 1, v31);
  if (!v22)
  {
    if (!v34)
    {
      v55(v29, v30, v8);
      uint64_t v48 = v31[5];
      uint64_t v49 = &v29[v48];
      uint64_t v50 = &v30[v48];
      *(void *)uint64_t v49 = *(void *)v50;
      *((void *)v49 + 1) = *((void *)v50 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v51 = v31[6];
      uint64_t v52 = &v29[v51];
      uint64_t v53 = &v30[v51];
      *(void *)uint64_t v52 = *(void *)v53;
      *((void *)v52 + 1) = *((void *)v53 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)&v29[v31[7]] = *(void *)&v30[v31[7]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)&v29[v31[8]] = *(void *)&v30[v31[8]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_WORD *)&v29[v31[9]] = *(_WORD *)&v30[v31[9]];
      v55(&v29[v31[10]], &v30[v31[10]], v8);
      goto LABEL_7;
    }
    sub_251AB3C84((uint64_t)v29, (uint64_t (*)(void))type metadata accessor for StaticResident);
    goto LABEL_6;
  }
  if (v34)
  {
LABEL_6:
    uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FDA0);
    memcpy(v29, v30, *(void *)(*(void *)(v43 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v57 = *(void (**)(char *, char *, uint64_t))(v54 + 16);
  v57(v29, v30, v8);
  uint64_t v35 = v31[5];
  uint64_t v36 = &v29[v35];
  uint64_t v37 = &v30[v35];
  *(void *)uint64_t v36 = *(void *)v37;
  *((void *)v36 + 1) = *((void *)v37 + 1);
  uint64_t v38 = v31[6];
  int64_t v39 = &v29[v38];
  uint64_t v40 = &v30[v38];
  *(void *)int64_t v39 = *(void *)v40;
  *((void *)v39 + 1) = *((void *)v40 + 1);
  *(void *)&v29[v31[7]] = *(void *)&v30[v31[7]];
  *(void *)&v29[v31[8]] = *(void *)&v30[v31[8]];
  *(_WORD *)&v29[v31[9]] = *(_WORD *)&v30[v31[9]];
  uint64_t v41 = v31[10];
  uint64_t v56 = &v29[v41];
  uint64_t v42 = &v30[v41];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v57(v56, v42, v8);
  (*(void (**)(char *, void, uint64_t, int *))(v32 + 56))(v29, 0, 1, v31);
LABEL_7:
  *(void *)((char *)a1 + v58[6]) = *(void *)((char *)a2 + v58[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[7]) = *(void *)((char *)a2 + v58[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[8]) = *(void *)((char *)a2 + v58[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[9]) = *(void *)((char *)a2 + v58[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[10]) = *(void *)((char *)a2 + v58[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[11]) = *(void *)((char *)a2 + v58[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[12]) = *(void *)((char *)a2 + v58[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[13]) = *(void *)((char *)a2 + v58[13]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[14]) = *(void *)((char *)a2 + v58[14]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[15]) = *(void *)((char *)a2 + v58[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[16]) = *(void *)((char *)a2 + v58[16]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[17]) = *(void *)((char *)a2 + v58[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[18]) = *(void *)((char *)a2 + v58[18]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v58[19]) = *(void *)((char *)a2 + v58[19]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
  uint64_t v44 = a3[6];
  uint64_t v45 = (void *)((char *)a1 + v44);
  uint64_t v46 = (void *)((char *)a2 + v44);
  *uint64_t v45 = *v46;
  v45[1] = v46[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *initializeWithTake for LightsCategoryInformation(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v29 = (int *)type metadata accessor for StateSnapshot(0);
  uint64_t v5 = v29[5];
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_251F34DA0();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32);
  v9(v6, v7, v8);
  uint64_t v31 = v9;
  uint64_t v10 = (int *)type metadata accessor for StaticHome();
  *(_OWORD *)&v6[v10[5]] = *(_OWORD *)&v7[v10[5]];
  uint64_t v11 = v10[6];
  uint64_t v12 = &v6[v11];
  uint64_t v13 = &v7[v11];
  v9(&v6[v11], &v7[v11], v8);
  uint64_t v14 = (int *)type metadata accessor for StaticRoom(0);
  *(_OWORD *)&v12[v14[5]] = *(_OWORD *)&v13[v14[5]];
  v12[v14[6]] = v13[v14[6]];
  *(void *)&v12[v14[7]] = *(void *)&v13[v14[7]];
  v31(&v12[v14[8]], &v13[v14[8]], v8);
  *(void *)&v12[v14[9]] = *(void *)&v13[v14[9]];
  *(void *)&v12[v14[10]] = *(void *)&v13[v14[10]];
  *(void *)&v12[v14[11]] = *(void *)&v13[v14[11]];
  *(void *)&v12[v14[12]] = *(void *)&v13[v14[12]];
  *(void *)&v12[v14[13]] = *(void *)&v13[v14[13]];
  *(void *)&v12[v14[14]] = *(void *)&v13[v14[14]];
  *(void *)&v12[v14[15]] = *(void *)&v13[v14[15]];
  *(void *)&v12[v14[16]] = *(void *)&v13[v14[16]];
  *(void *)&v12[v14[17]] = *(void *)&v13[v14[17]];
  *(void *)&v12[v14[18]] = *(void *)&v13[v14[18]];
  uint64_t v15 = v10[7];
  uint64_t v16 = &v6[v15];
  uint64_t v17 = &v7[v15];
  v31(&v6[v15], &v7[v15], v8);
  uint64_t v18 = (int *)type metadata accessor for StaticUser();
  *(_OWORD *)&v16[v18[5]] = *(_OWORD *)&v17[v18[5]];
  v31(&v16[v18[6]], &v17[v18[6]], v8);
  v16[v18[7]] = v17[v18[7]];
  v16[v18[8]] = v17[v18[8]];
  v6[v10[8]] = v7[v10[8]];
  v6[v10[9]] = v7[v10[9]];
  v6[v10[10]] = v7[v10[10]];
  *(void *)&v6[v10[11]] = *(void *)&v7[v10[11]];
  *(void *)&v6[v10[12]] = *(void *)&v7[v10[12]];
  *(void *)&v6[v10[13]] = *(void *)&v7[v10[13]];
  *(void *)&v6[v10[14]] = *(void *)&v7[v10[14]];
  *(void *)&v6[v10[15]] = *(void *)&v7[v10[15]];
  *(void *)&v6[v10[16]] = *(void *)&v7[v10[16]];
  v6[v10[17]] = v7[v10[17]];
  *(void *)&v6[v10[18]] = *(void *)&v7[v10[18]];
  v6[v10[19]] = v7[v10[19]];
  uint64_t v19 = v10[20];
  uint64_t v20 = &v6[v19];
  uint64_t v21 = &v7[v19];
  uint64_t v22 = (int *)type metadata accessor for StaticResident();
  uint64_t v23 = *((void *)v22 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v23 + 48))(v21, 1, v22))
  {
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FDA0);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    v31(v20, v21, v8);
    *(_OWORD *)&v20[v22[5]] = *(_OWORD *)&v21[v22[5]];
    *(_OWORD *)&v20[v22[6]] = *(_OWORD *)&v21[v22[6]];
    *(void *)&v20[v22[7]] = *(void *)&v21[v22[7]];
    *(void *)&v20[v22[8]] = *(void *)&v21[v22[8]];
    *(_WORD *)&v20[v22[9]] = *(_WORD *)&v21[v22[9]];
    v31(&v20[v22[10]], &v21[v22[10]], v8);
    (*(void (**)(char *, void, uint64_t, int *))(v23 + 56))(v20, 0, 1, v22);
  }
  *(void *)((char *)a1 + v29[6]) = *(void *)((char *)a2 + v29[6]);
  *(void *)((char *)a1 + v29[7]) = *(void *)((char *)a2 + v29[7]);
  *(void *)((char *)a1 + v29[8]) = *(void *)((char *)a2 + v29[8]);
  *(void *)((char *)a1 + v29[9]) = *(void *)((char *)a2 + v29[9]);
  *(void *)((char *)a1 + v29[10]) = *(void *)((char *)a2 + v29[10]);
  *(void *)((char *)a1 + v29[11]) = *(void *)((char *)a2 + v29[11]);
  *(void *)((char *)a1 + v29[12]) = *(void *)((char *)a2 + v29[12]);
  *(void *)((char *)a1 + v29[13]) = *(void *)((char *)a2 + v29[13]);
  *(void *)((char *)a1 + v29[14]) = *(void *)((char *)a2 + v29[14]);
  *(void *)((char *)a1 + v29[15]) = *(void *)((char *)a2 + v29[15]);
  *(void *)((char *)a1 + v29[16]) = *(void *)((char *)a2 + v29[16]);
  *(void *)((char *)a1 + v29[17]) = *(void *)((char *)a2 + v29[17]);
  *(void *)((char *)a1 + v29[18]) = *(void *)((char *)a2 + v29[18]);
  *(void *)((char *)a1 + v29[19]) = *(void *)((char *)a2 + v29[19]);
  uint64_t v25 = a3[6];
  *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
  *(_OWORD *)((char *)a1 + v25) = *(_OWORD *)((char *)a2 + v25);
  uint64_t v26 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  *(void *)((char *)a1 + v26) = *(void *)((char *)a2 + v26);
  uint64_t v27 = a3[10];
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  *(void *)((char *)a1 + v27) = *(void *)((char *)a2 + v27);
  return a1;
}

void *assignWithTake for LightsCategoryInformation(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v61 = (int *)type metadata accessor for StateSnapshot(0);
  uint64_t v5 = v61[5];
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_251F34DA0();
  uint64_t v59 = *(void *)(v8 - 8);
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(v59 + 40);
  v9(v6, v7, v8);
  uint64_t v10 = (int *)type metadata accessor for StaticHome();
  uint64_t v11 = v10[5];
  uint64_t v12 = &v6[v11];
  uint64_t v13 = &v7[v11];
  uint64_t v15 = *(void *)v13;
  uint64_t v14 = *((void *)v13 + 1);
  *(void *)uint64_t v12 = v15;
  *((void *)v12 + 1) = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = v10[6];
  uint64_t v17 = &v6[v16];
  uint64_t v18 = &v7[v16];
  v9(&v6[v16], &v7[v16], v8);
  uint64_t v19 = (int *)type metadata accessor for StaticRoom(0);
  uint64_t v20 = v19[5];
  uint64_t v21 = &v17[v20];
  uint64_t v22 = &v18[v20];
  uint64_t v24 = *(void *)v22;
  uint64_t v23 = *((void *)v22 + 1);
  *(void *)uint64_t v21 = v24;
  *((void *)v21 + 1) = v23;
  swift_bridgeObjectRelease();
  v17[v19[6]] = v18[v19[6]];
  *(void *)&v17[v19[7]] = *(void *)&v18[v19[7]];
  swift_bridgeObjectRelease();
  v9(&v17[v19[8]], &v18[v19[8]], v8);
  *(void *)&v17[v19[9]] = *(void *)&v18[v19[9]];
  swift_bridgeObjectRelease();
  *(void *)&v17[v19[10]] = *(void *)&v18[v19[10]];
  swift_bridgeObjectRelease();
  *(void *)&v17[v19[11]] = *(void *)&v18[v19[11]];
  swift_bridgeObjectRelease();
  *(void *)&v17[v19[12]] = *(void *)&v18[v19[12]];
  swift_bridgeObjectRelease();
  *(void *)&v17[v19[13]] = *(void *)&v18[v19[13]];
  swift_bridgeObjectRelease();
  *(void *)&v17[v19[14]] = *(void *)&v18[v19[14]];
  swift_bridgeObjectRelease();
  *(void *)&v17[v19[15]] = *(void *)&v18[v19[15]];
  swift_bridgeObjectRelease();
  *(void *)&v17[v19[16]] = *(void *)&v18[v19[16]];
  swift_bridgeObjectRelease();
  *(void *)&v17[v19[17]] = *(void *)&v18[v19[17]];
  swift_bridgeObjectRelease();
  *(void *)&v17[v19[18]] = *(void *)&v18[v19[18]];
  swift_bridgeObjectRelease();
  uint64_t v25 = v10[7];
  uint64_t v26 = &v6[v25];
  uint64_t v27 = &v7[v25];
  v9(&v6[v25], &v7[v25], v8);
  uint64_t v28 = (int *)type metadata accessor for StaticUser();
  uint64_t v29 = v28[5];
  uint64_t v30 = &v26[v29];
  uint64_t v31 = &v27[v29];
  uint64_t v33 = *(void *)v31;
  uint64_t v32 = *((void *)v31 + 1);
  *(void *)uint64_t v30 = v33;
  *((void *)v30 + 1) = v32;
  swift_bridgeObjectRelease();
  uint64_t v60 = v8;
  v9(&v26[v28[6]], &v27[v28[6]], v8);
  v26[v28[7]] = v27[v28[7]];
  v26[v28[8]] = v27[v28[8]];
  v6[v10[8]] = v7[v10[8]];
  v6[v10[9]] = v7[v10[9]];
  v6[v10[10]] = v7[v10[10]];
  *(void *)&v6[v10[11]] = *(void *)&v7[v10[11]];
  swift_bridgeObjectRelease();
  *(void *)&v6[v10[12]] = *(void *)&v7[v10[12]];
  swift_bridgeObjectRelease();
  *(void *)&v6[v10[13]] = *(void *)&v7[v10[13]];
  swift_bridgeObjectRelease();
  *(void *)&v6[v10[14]] = *(void *)&v7[v10[14]];
  swift_bridgeObjectRelease();
  *(void *)&v6[v10[15]] = *(void *)&v7[v10[15]];
  swift_bridgeObjectRelease();
  *(void *)&v6[v10[16]] = *(void *)&v7[v10[16]];
  swift_bridgeObjectRelease();
  v6[v10[17]] = v7[v10[17]];
  *(void *)&v6[v10[18]] = *(void *)&v7[v10[18]];
  swift_bridgeObjectRelease();
  v6[v10[19]] = v7[v10[19]];
  uint64_t v34 = v10[20];
  uint64_t v35 = &v6[v34];
  uint64_t v36 = &v7[v34];
  uint64_t v37 = (int *)type metadata accessor for StaticResident();
  uint64_t v38 = *((void *)v37 - 1);
  int64_t v39 = *(uint64_t (**)(char *, uint64_t, int *))(v38 + 48);
  LODWORD(v26) = v39(v35, 1, v37);
  int v40 = v39(v36, 1, v37);
  if (!v26)
  {
    if (!v40)
    {
      v9(v35, v36, v60);
      uint64_t v49 = v37[5];
      uint64_t v50 = &v35[v49];
      uint64_t v51 = &v36[v49];
      uint64_t v53 = *(void *)v51;
      uint64_t v52 = *((void *)v51 + 1);
      *(void *)uint64_t v50 = v53;
      *((void *)v50 + 1) = v52;
      swift_bridgeObjectRelease();
      uint64_t v54 = v37[6];
      uint64_t v55 = &v35[v54];
      uint64_t v56 = &v36[v54];
      uint64_t v58 = *(void *)v56;
      uint64_t v57 = *((void *)v56 + 1);
      *(void *)uint64_t v55 = v58;
      *((void *)v55 + 1) = v57;
      swift_bridgeObjectRelease();
      *(void *)&v35[v37[7]] = *(void *)&v36[v37[7]];
      swift_bridgeObjectRelease();
      *(void *)&v35[v37[8]] = *(void *)&v36[v37[8]];
      swift_bridgeObjectRelease();
      *(_WORD *)&v35[v37[9]] = *(_WORD *)&v36[v37[9]];
      v9(&v35[v37[10]], &v36[v37[10]], v60);
      goto LABEL_7;
    }
    sub_251AB3C84((uint64_t)v35, (uint64_t (*)(void))type metadata accessor for StaticResident);
    goto LABEL_6;
  }
  if (v40)
  {
LABEL_6:
    uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FDA0);
    memcpy(v35, v36, *(void *)(*(void *)(v42 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v59 + 32);
  v41(v35, v36, v60);
  *(_OWORD *)&v35[v37[5]] = *(_OWORD *)&v36[v37[5]];
  *(_OWORD *)&v35[v37[6]] = *(_OWORD *)&v36[v37[6]];
  *(void *)&v35[v37[7]] = *(void *)&v36[v37[7]];
  *(void *)&v35[v37[8]] = *(void *)&v36[v37[8]];
  *(_WORD *)&v35[v37[9]] = *(_WORD *)&v36[v37[9]];
  v41(&v35[v37[10]], &v36[v37[10]], v60);
  (*(void (**)(char *, void, uint64_t, int *))(v38 + 56))(v35, 0, 1, v37);
LABEL_7:
  *(void *)((char *)a1 + v61[6]) = *(void *)((char *)a2 + v61[6]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v61[7]) = *(void *)((char *)a2 + v61[7]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v61[8]) = *(void *)((char *)a2 + v61[8]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v61[9]) = *(void *)((char *)a2 + v61[9]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v61[10]) = *(void *)((char *)a2 + v61[10]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v61[11]) = *(void *)((char *)a2 + v61[11]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v61[12]) = *(void *)((char *)a2 + v61[12]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v61[13]) = *(void *)((char *)a2 + v61[13]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v61[14]) = *(void *)((char *)a2 + v61[14]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v61[15]) = *(void *)((char *)a2 + v61[15]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v61[16]) = *(void *)((char *)a2 + v61[16]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v61[17]) = *(void *)((char *)a2 + v61[17]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v61[18]) = *(void *)((char *)a2 + v61[18]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + v61[19]) = *(void *)((char *)a2 + v61[19]);
  swift_bridgeObjectRelease();
  uint64_t v43 = a3[6];
  *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
  uint64_t v44 = (void *)((char *)a1 + v43);
  uint64_t v45 = (void *)((char *)a2 + v43);
  uint64_t v47 = *v45;
  uint64_t v46 = v45[1];
  *uint64_t v44 = v47;
  v44[1] = v46;
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LightsCategoryInformation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251AB2A78);
}

uint64_t sub_251AB2A78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for StateSnapshot(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 28));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for LightsCategoryInformation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251AB2B4C);
}

uint64_t sub_251AB2B4C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for StateSnapshot(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_251AB2C08()
{
  uint64_t result = type metadata accessor for StateSnapshot(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_251AB2CBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_251E068A4(a1, *(void *)(v2 + 16), a2);
}

BOOL sub_251AB2CD8(uint64_t a1)
{
  return sub_251AACEF0(a1, *(void *)(v1 + 16), (uint64_t (*)(void))type metadata accessor for WaterCategoryInformation);
}

BOOL sub_251AB2D0C(uint64_t a1)
{
  return sub_251AACEF0(a1, *(void *)(v1 + 16), (uint64_t (*)(void))type metadata accessor for SecurityAndAccessCategoryInformation);
}

unint64_t sub_251AB2D40()
{
  unint64_t result = qword_26B21F150;
  if (!qword_26B21F150)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B21F150);
  }
  return result;
}

uint64_t sub_251AB2D80()
{
  uint64_t v1 = *(void *)(type metadata accessor for LightsCategoryInformation() - 8);
  uint64_t v15 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v13 = *(void *)(v1 + 64);
  swift_unknownObjectRelease();
  uint64_t v16 = v0;
  uint64_t v14 = (v15 + 32) & ~v15;
  swift_bridgeObjectRelease();
  uint64_t v2 = v0 + v14 + *(int *)(type metadata accessor for StateSnapshot(0) + 20);
  uint64_t v3 = sub_251F34DA0();
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  v4(v2, v3);
  uint64_t v5 = (int *)type metadata accessor for StaticHome();
  swift_bridgeObjectRelease();
  uint64_t v6 = v2 + v5[6];
  v4(v6, v3);
  uint64_t v7 = type metadata accessor for StaticRoom(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4(v6 + *(int *)(v7 + 32), v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = v2 + v5[7];
  v4(v8, v3);
  uint64_t v9 = type metadata accessor for StaticUser();
  swift_bridgeObjectRelease();
  v4(v8 + *(int *)(v9 + 24), v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = v2 + v5[20];
  uint64_t v11 = type metadata accessor for StaticResident();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11))
  {
    v4(v10, v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v4(v10 + *(int *)(v11 + 40), v3);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v16, v14 + v13, v15 | 7);
}

uint64_t sub_251AB31EC(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for LightsCategoryInformation() - 8);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[2] = a1;
  v6[3] = v5;
  v6[1] = sub_251AB3DD4;
  return MEMORY[0x270FA2498](sub_251AAB190, 0, 0);
}

uint64_t sub_251AB32D4(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_251AB3DD4;
  return sub_251AAB39C(a1, a2, v6);
}

uint64_t sub_251AB3384()
{
  uint64_t v1 = (int *)type metadata accessor for StaticService();
  uint64_t v25 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v23 = *(void *)(*((void *)v1 - 1) + 64);
  swift_unknownObjectRelease();
  uint64_t v24 = (v25 + 32) & ~v25;
  uint64_t v2 = v0 + v24;
  uint64_t v3 = sub_251F34DA0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v5(v0 + v24, v3);
  swift_bridgeObjectRelease();
  v5(v0 + v24 + v1[11], v3);
  uint64_t v6 = v0 + v24 + v1[13];
  uint64_t v7 = type metadata accessor for StaticDeviceMetadata();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
  {
    v5(v6, v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v8 = v2 + v1[14];
  uint64_t v9 = sub_251F34D20();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v22 = *(unsigned int (**)(void))(v10 + 48);
  if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v22)(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = v2 + v1[25];
  uint64_t v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (!v12(v11, 1, v3)) {
    v5(v11, v3);
  }
  uint64_t v21 = v10;
  uint64_t v13 = v2 + v1[26];
  if (!v12(v13, 1, v3)) {
    v5(v13, v3);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v14 = v2 + v1[30];
  uint64_t v15 = type metadata accessor for StaticSoftwareUpdate(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15))
  {
    v5(v14, v3);
    uint64_t v16 = v14 + *(int *)(v15 + 20);
    type metadata accessor for StaticSoftwareUpdate.Kind(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v20 = v16 + *(int *)(type metadata accessor for StaticSoftwareUpdateMetadata(0) + 20);
      if (!v22()) {
        (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v9);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      if (EnumCaseMultiPayload) {
        goto LABEL_18;
      }
      v5(v16, v3);
      type metadata accessor for StaticHH2Update(0);
    }
    swift_bridgeObjectRelease();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  uint64_t v18 = v2 + v1[33];
  if (!v12(v18, 1, v3)) {
    v5(v18, v3);
  }
  return MEMORY[0x270FA0238](v0, v24 + v23, v25 | 7);
}

uint64_t sub_251AB3858(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for StaticService() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_251AB3DD4;
  return sub_251AAB968(a1, v5, v6, v7);
}

uint64_t sub_251AB3944()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_251AB397C(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_251AB3A34;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_269BA2508 + dword_269BA2508);
  return v6(a1, v4);
}

uint64_t sub_251AB3A34()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_251AB3B28()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_251AB3B68(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_251AB3A34;
  return sub_251AABDF4(a1, v4, v5, v6);
}

uint64_t sub_251AB3C1C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_251AB3C84(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_251AB3CE4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

BOOL sub_251AB3D4C(uint64_t a1)
{
  return sub_251AACEF0(a1, *(void *)(v1 + 16), (uint64_t (*)(void))type metadata accessor for LightsCategoryInformation);
}

uint64_t sub_251AB3D80(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_251AB3DD8(void *a1, uint64_t a2)
{
  return sub_251AAFC2C(a1, a2);
}

uint64_t sub_251AB3DF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_251AB2CBC(a1, a2);
}

uint64_t StaticCoordinationData.staticAlarms.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t StaticCoordinationData.staticTimers.getter()
{
  return swift_bridgeObjectRetain();
}

id StaticCoordinationData.alarmError.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void **)(v1 + 16);
  *a1 = v2;
  return sub_251A1A4CC(v2);
}

id StaticCoordinationData.timerError.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void **)(v1 + 24);
  *a1 = v2;
  return sub_251A1A4CC(v2);
}

uint64_t sub_251AB3E30()
{
  uint64_t v1 = *(void *)(v0 + 16);
  if (v1 == 2)
  {
    uint64_t v2 = 1;
    uint64_t v3 = 2;
  }
  else
  {
    uint64_t v4 = *(void **)(v0 + 24);
    sub_251A1A4CC(*(id *)(v0 + 16));
    sub_251A1A4CC((id)v1);
    sub_251A1A4DC((id)v1);
    sub_251A1A4DC((id)2);
    uint64_t v2 = 1;
    uint64_t v5 = 3;
    uint64_t v3 = v1;
    uint64_t v6 = v1;
    switch(v1)
    {
      case 0:
        sub_251A1A4DC(0);
        sub_251A1A4DC((id)3);
        uint64_t v7 = 0;
        goto LABEL_7;
      case 1:
        uint64_t v7 = 1;
        sub_251A1A4DC((id)1);
        sub_251A1A4DC((id)3);
        goto LABEL_7;
      case 3:
        break;
      case 4:
        goto LABEL_16;
      case 5:
        uint64_t v1 = 5;
LABEL_15:
        sub_251A1A4DC((id)5);
        sub_251A1A4DC((id)3);
        uint64_t v5 = 4;
        uint64_t v3 = 5;
        uint64_t v6 = 5;
LABEL_16:
        sub_251A1A4DC((id)v1);
        sub_251A1A4DC((id)v5);
        uint64_t v1 = v3;
        uint64_t v3 = v6;
        break;
      default:
        id v8 = (id)v1;
        sub_251A1A4DC((id)v1);
        sub_251A1A4DC((id)3);
        id v9 = v8;
        uint64_t v7 = v1;
LABEL_7:
        uint64_t v3 = (uint64_t)v4;
        sub_251A1A4DC((id)v7);
        sub_251A1A4DC((id)4);
        sub_251A1A4DC((id)v1);
        sub_251A1A4DC((id)5);
        uint64_t v2 = 1;
        uint64_t v5 = 2;
        uint64_t v1 = (uint64_t)v4;
        uint64_t v6 = (uint64_t)v4;
        switch((unint64_t)v4)
        {
          case 0uLL:
            sub_251A1A4DC(0);
            sub_251A1A4DC((id)2);
            sub_251A1A4DC(0);
            sub_251A1A4DC((id)3);
            uint64_t v1 = 0;
            goto LABEL_12;
          case 1uLL:
            uint64_t v1 = 1;
            sub_251A1A4DC((id)1);
            sub_251A1A4DC((id)2);
            sub_251A1A4DC((id)1);
            sub_251A1A4DC((id)3);
LABEL_12:
            uint64_t v2 = 0;
            uint64_t v6 = 5;
            uint64_t v5 = 4;
            goto LABEL_16;
          case 2uLL:
            goto LABEL_17;
          case 3uLL:
            goto LABEL_16;
          case 4uLL:
            uint64_t v1 = 4;
            sub_251A1A4DC((id)4);
            sub_251A1A4DC((id)2);
            uint64_t v5 = 3;
            uint64_t v3 = 4;
            uint64_t v6 = 4;
            goto LABEL_16;
          case 5uLL:
            uint64_t v1 = 5;
            sub_251A1A4DC((id)5);
            sub_251A1A4DC((id)2);
            goto LABEL_15;
          default:
            id v10 = v4;
            sub_251A1A4DC(v4);
            sub_251A1A4DC((id)2);
            id v11 = v10;
            sub_251A1A4DC(v4);
            sub_251A1A4DC((id)3);
            id v12 = v11;
            uint64_t v2 = 0;
            uint64_t v6 = 5;
            uint64_t v5 = 4;
            uint64_t v1 = (uint64_t)v4;
            goto LABEL_16;
        }
    }
  }
LABEL_17:
  sub_251A1A4DC((id)v1);
  sub_251A1A4DC((id)v3);
  return v2;
}

void StaticCoordinationData.hash(into:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = (void *)v1[2];
  uint64_t v5 = (void *)v1[3];
  swift_bridgeObjectRetain();
  sub_251A4184C(a1, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_251A415E0(a1, v4);
  swift_bridgeObjectRelease();
  switch((unint64_t)v6)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
      sub_251F36CB0();
      goto LABEL_7;
    default:
      sub_251F36CB0();
      id v7 = v6;
      sub_251F36130();
      sub_251A1A4DC(v6);
      if ((unint64_t)v5 <= 5)
      {
LABEL_7:
        switch((unint64_t)v5)
        {
          case 0uLL:
          case 1uLL:
          case 2uLL:
          case 3uLL:
          case 4uLL:
          case 5uLL:
            sub_251F36CB0();
            break;
          default:
            goto LABEL_3;
        }
      }
      else
      {
LABEL_3:
        sub_251F36CB0();
        id v8 = v5;
        sub_251F36130();
        sub_251A1A4DC(v5);
      }
      return;
  }
}

uint64_t StaticCoordinationData.hashValue.getter()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v4 = (void *)v0[2];
  uint64_t v3 = (void *)v0[3];
  sub_251F36CA0();
  swift_bridgeObjectRetain();
  sub_251A4184C((uint64_t)v8, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_251A415E0((uint64_t)v8, v2);
  swift_bridgeObjectRelease();
  switch((unint64_t)v4)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
      sub_251F36CB0();
      goto LABEL_5;
    default:
      sub_251F36CB0();
      id v5 = v4;
      sub_251F36130();
      sub_251A1A4DC(v4);
      if ((unint64_t)v3 <= 5)
      {
LABEL_5:
        switch((unint64_t)v3)
        {
          case 0uLL:
          case 1uLL:
          case 2uLL:
          case 3uLL:
          case 4uLL:
          case 5uLL:
            sub_251F36CB0();
            break;
          default:
            goto LABEL_3;
        }
      }
      else
      {
LABEL_3:
        sub_251F36CB0();
        id v6 = v3;
        sub_251F36130();
        sub_251A1A4DC(v3);
      }
      return sub_251F36D00();
  }
}

uint64_t sub_251AB44B8()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v4 = (void *)v0[2];
  uint64_t v3 = (void *)v0[3];
  sub_251F36CA0();
  swift_bridgeObjectRetain();
  sub_251A4184C((uint64_t)v8, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_251A415E0((uint64_t)v8, v2);
  swift_bridgeObjectRelease();
  switch((unint64_t)v4)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
      sub_251F36CB0();
      goto LABEL_5;
    default:
      sub_251F36CB0();
      id v5 = v4;
      sub_251F36130();
      sub_251A1A4DC(v4);
      if ((unint64_t)v3 <= 5)
      {
LABEL_5:
        switch((unint64_t)v3)
        {
          case 0uLL:
          case 1uLL:
          case 2uLL:
          case 3uLL:
          case 4uLL:
          case 5uLL:
            sub_251F36CB0();
            break;
          default:
            goto LABEL_3;
        }
      }
      else
      {
LABEL_3:
        sub_251F36CB0();
        id v6 = v3;
        sub_251F36130();
        sub_251A1A4DC(v3);
      }
      return sub_251F36D00();
  }
}

uint64_t _s13HomeDataModel018StaticCoordinationB0V2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v5 = a2[1];
  id v7 = (void *)a2[2];
  id v6 = (void *)a2[3];
  if ((sub_251AB5D40(*a1, *a2) & 1) != 0
    && (sub_251AB5FF4(v2, v5) & 1) != 0
    && (id v10 = v7, v11 = v4, (_s13HomeDataModel012CoordinationbC0C6ErrorsO2eeoiySbAE_AEtFZ_0(&v11, &v10) & 1) != 0))
  {
    id v10 = v6;
    uint64_t v11 = v3;
    char v8 = _s13HomeDataModel012CoordinationbC0C6ErrorsO2eeoiySbAE_AEtFZ_0(&v11, &v10);
  }
  else
  {
    char v8 = 0;
  }
  return v8 & 1;
}

unint64_t sub_251AB4740()
{
  unint64_t result = qword_269B9D7B0;
  if (!qword_269B9D7B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9D7B0);
  }
  return result;
}

void destroy for StaticCoordinationData(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 16);
  if ((unint64_t)v2 >= 6) {

  }
  uint64_t v3 = *(void **)(a1 + 24);
  if ((unint64_t)v3 >= 6)
  {
  }
}

void *initializeWithCopy for StaticCoordinationData(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = (void *)a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((unint64_t)v5 >= 6) {
    id v6 = v5;
  }
  a1[2] = v5;
  id v7 = (void *)a2[3];
  if ((unint64_t)v7 >= 6) {
    id v8 = v7;
  }
  a1[3] = v7;
  return a1;
}

void *assignWithCopy for StaticCoordinationData(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a1[2];
  uint64_t v5 = (void *)a2[2];
  if ((unint64_t)v4 < 6)
  {
    if ((unint64_t)v5 >= 6)
    {
      a1[2] = v5;
      id v6 = v5;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if ((unint64_t)v5 < 6)
  {

    uint64_t v5 = (void *)a2[2];
LABEL_6:
    a1[2] = v5;
    goto LABEL_8;
  }
  a1[2] = v5;
  id v7 = v5;

LABEL_8:
  id v8 = (void *)a1[3];
  id v9 = (void *)a2[3];
  if ((unint64_t)v8 >= 6)
  {
    if ((unint64_t)v9 >= 6)
    {
      a1[3] = v9;
      id v11 = v9;

      return a1;
    }

    id v9 = (void *)a2[3];
    goto LABEL_13;
  }
  if ((unint64_t)v9 < 6)
  {
LABEL_13:
    a1[3] = v9;
    return a1;
  }
  a1[3] = v9;
  id v10 = v9;
  return a1;
}

uint64_t assignWithTake for StaticCoordinationData(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 16);
  unint64_t v5 = *(void *)(a2 + 16);
  if ((unint64_t)v4 < 6) {
    goto LABEL_4;
  }
  if (v5 < 6)
  {

LABEL_4:
    *(void *)(a1 + 16) = v5;
    goto LABEL_6;
  }
  *(void *)(a1 + 16) = v5;

LABEL_6:
  id v6 = *(void **)(a1 + 24);
  unint64_t v7 = *(void *)(a2 + 24);
  if ((unint64_t)v6 >= 6)
  {
    if (v7 >= 6)
    {
      *(void *)(a1 + 24) = v7;

      return a1;
    }
  }
  *(void *)(a1 + 24) = v7;
  return a1;
}

uint64_t getEnumTagSinglePayload for StaticCoordinationData(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StaticCoordinationData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticCoordinationData()
{
  return &type metadata for StaticCoordinationData;
}

uint64_t FeatureFlagsKey.isEnabled.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1;
  v6[3] = a1;
  v6[4] = a2;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v6);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16))(boxed_opaque_existential_1, v2, v3);
  LOBYTE(v3) = sub_251F34F60();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v6);
  return v3 & 1;
}

uint64_t static HomeKitFeatures.rvcEffectivelyEnabled.getter()
{
  uint64_t v3 = &type metadata for HomeKitFeatures;
  unint64_t v4 = sub_251A4DA94();
  v2[0] = 4;
  char v0 = sub_251F34F60();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v2);
  if (v0) {
    return 1;
  }
  if (qword_269B9C4C0 != -1) {
    swift_once();
  }
  return byte_269BA38B2;
}

const char *HomeAppFeatures.domain.getter()
{
  return "HomeApp";
}

const char *HomeAppFeatures.feature.getter()
{
  unint64_t result = "redesign_media";
  switch(*v0)
  {
    case 1:
      unint64_t result = "nativeMatter";
      break;
    case 2:
      unint64_t result = "fullMatterSnapshots";
      break;
    case 3:
      unint64_t result = "phoenix";
      break;
    case 4:
      unint64_t result = "wallet_key_uwb";
      break;
    case 5:
      unint64_t result = "QFAV2";
      break;
    case 6:
      unint64_t result = "adaptive_navigation";
      break;
    default:
      return result;
  }
  return result;
}

BOOL static HomeAppFeatures.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t HomeAppFeatures.hash(into:)()
{
  return sub_251F36CB0();
}

const char *sub_251AB4CC8()
{
  return "HomeApp";
}

const char *sub_251AB4CDC()
{
  unint64_t result = "redesign_media";
  switch(*v0)
  {
    case 1:
      unint64_t result = "nativeMatter";
      break;
    case 2:
      unint64_t result = "fullMatterSnapshots";
      break;
    case 3:
      unint64_t result = "phoenix";
      break;
    case 4:
      unint64_t result = "wallet_key_uwb";
      break;
    case 5:
      unint64_t result = "QFAV2";
      break;
    case 6:
      unint64_t result = "adaptive_navigation";
      break;
    default:
      return result;
  }
  return result;
}

const char *UIKitFeatures.feature.getter()
{
  return "uip_floating_tab_bar";
}

const char *UIKitFeatures.domain.getter()
{
  return "UIKit";
}

uint64_t static UIKitFeatures.== infix(_:_:)()
{
  return 1;
}

uint64_t UIKitFeatures.hash(into:)()
{
  return sub_251F36CB0();
}

const char *sub_251AB4DFC()
{
  return "UIKit";
}

const char *sub_251AB4E10()
{
  return "uip_floating_tab_bar";
}

const char *HomeKitFeatures.domain.getter()
{
  return "Home";
}

const char *HomeKitFeatures.feature.getter()
{
  unint64_t result = "d0d2700c4dee4686a15d55";
  switch(*v0)
  {
    case 1:
      unint64_t result = "RestrictedGuest";
      break;
    case 2:
      unint64_t result = "ResidentSelection";
      break;
    case 3:
      unint64_t result = "Tamis";
      break;
    case 4:
      unint64_t result = "RVC";
      break;
    default:
      return result;
  }
  return result;
}

const char *sub_251AB4ED0()
{
  return "Home";
}

const char *sub_251AB4EE4()
{
  unint64_t result = "d0d2700c4dee4686a15d55";
  switch(*v0)
  {
    case 1:
      unint64_t result = "RestrictedGuest";
      break;
    case 2:
      unint64_t result = "ResidentSelection";
      break;
    case 3:
      unint64_t result = "Tamis";
      break;
    case 4:
      unint64_t result = "RVC";
      break;
    default:
      return result;
  }
  return result;
}

const char *ControlCenterFeatures.domain.getter()
{
  return "ControlCenter";
}

const char *ControlCenterFeatures.feature.getter()
{
  return "NewControls";
}

uint64_t static ControlCenterFeatures.== infix(_:_:)()
{
  return 1;
}

const char *sub_251AB4FAC()
{
  return "ControlCenter";
}

const char *sub_251AB4FC0()
{
  return "NewControls";
}

unint64_t sub_251AB4FD8()
{
  unint64_t result = qword_269B9D7B8;
  if (!qword_269B9D7B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9D7B8);
  }
  return result;
}

unint64_t sub_251AB5030()
{
  unint64_t result = qword_269B9D7C0;
  if (!qword_269B9D7C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9D7C0);
  }
  return result;
}

unint64_t sub_251AB5088()
{
  unint64_t result = qword_269B9D7C8;
  if (!qword_269B9D7C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9D7C8);
  }
  return result;
}

unint64_t sub_251AB50E0()
{
  unint64_t result = qword_269B9D7D0;
  if (!qword_269B9D7D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9D7D0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for HomeAppFeatures(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for HomeAppFeatures(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251AB5290);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HomeAppFeatures()
{
  return &type metadata for HomeAppFeatures;
}

ValueMetadata *type metadata accessor for UIKitFeatures()
{
  return &type metadata for UIKitFeatures;
}

unsigned char *storeEnumTagSinglePayload for HomeKitFeatures(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251AB53ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HomeKitFeatures()
{
  return &type metadata for HomeKitFeatures;
}

unsigned char *_s13HomeDataModel13UIKitFeaturesOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x251AB5480);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ControlCenterFeatures()
{
  return &type metadata for ControlCenterFeatures;
}

BOOL sub_251AB54C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ActionCommand(0);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v57 = (uint64_t)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v56 = (uint64_t)&v48 - v8;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  id v11 = (char *)&v48 - v10;
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v48 - v14;
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v48 - v17;
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  uint64_t v21 = (char *)&v48 - v20;
  uint64_t v22 = MEMORY[0x270FA5388](v19);
  uint64_t v26 = (char *)&v48 - v25;
  uint64_t v27 = *(void *)(a1 + 16);
  if (v27 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v27)
  {
    uint64_t v28 = a2;
    if (a1 != a2)
    {
      uint64_t v52 = v22;
      uint64_t v53 = v24;
      unint64_t v29 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
      uint64_t v48 = *(void *)(v23 + 72);
      uint64_t v49 = v18;
      uint64_t v30 = v27 - 1;
      uint64_t v50 = v15;
      uint64_t v51 = a1;
      while (1)
      {
        uint64_t v54 = v30;
        sub_251ABA63C(a1 + v29, (uint64_t)v26, type metadata accessor for ActionCommand);
        sub_251ABA63C(v28 + v29, (uint64_t)v21, type metadata accessor for ActionCommand);
        char v31 = sub_251F34D70();
        sub_251ABA63C((uint64_t)v26, (uint64_t)v18, type metadata accessor for ActionCommand);
        sub_251ABA63C((uint64_t)v21, (uint64_t)v15, type metadata accessor for ActionCommand);
        if ((v31 & 1) == 0) {
          break;
        }
        uint64_t v32 = (uint64_t)v18;
        uint64_t v33 = v52;
        uint64_t v34 = *(int *)(v52 + 20);
        uint64_t v55 = *(void *)(v32 + v34);
        uint64_t v35 = *(void *)&v15[v34];
        sub_251ABA6A4(v32, type metadata accessor for ActionCommand);
        sub_251ABA6A4((uint64_t)v15, type metadata accessor for ActionCommand);
        uint64_t v36 = v53;
        sub_251ABA63C((uint64_t)v26, v53, type metadata accessor for ActionCommand);
        sub_251ABA63C((uint64_t)v21, (uint64_t)v11, type metadata accessor for ActionCommand);
        if (v55 != v35) {
          goto LABEL_13;
        }
        uint64_t v37 = *(int *)(v33 + 24);
        int v38 = *(unsigned __int16 *)(v36 + v37);
        int v39 = *(unsigned __int16 *)&v11[v37];
        sub_251ABA6A4(v36, type metadata accessor for ActionCommand);
        sub_251ABA6A4((uint64_t)v11, type metadata accessor for ActionCommand);
        sub_251ABA63C((uint64_t)v26, v56, type metadata accessor for ActionCommand);
        sub_251ABA63C((uint64_t)v21, v57, type metadata accessor for ActionCommand);
        if (v38 != v39) {
          goto LABEL_14;
        }
        uint64_t v40 = v56;
        uint64_t v41 = (void *)(v56 + *(int *)(v33 + 28));
        uint64_t v42 = v41[3];
        uint64_t v43 = v41[4];
        __swift_project_boxed_opaque_existential_1(v41, v42);
        uint64_t v44 = *(int *)(v33 + 28);
        uint64_t v45 = v57;
        BOOL v46 = MatterCommand.isEqual(_:)((void *)(v57 + v44), v42, v43);
        sub_251ABA6A4(v40, type metadata accessor for ActionCommand);
        sub_251ABA6A4(v45, type metadata accessor for ActionCommand);
        sub_251ABA6A4((uint64_t)v21, type metadata accessor for ActionCommand);
        sub_251ABA6A4((uint64_t)v26, type metadata accessor for ActionCommand);
        uint64_t v30 = v54 - 1;
        if (v46)
        {
          uint64_t v18 = v49;
          v29 += v48;
          uint64_t v15 = v50;
          a1 = v51;
          if (v54) {
            continue;
          }
        }
        return v46;
      }
      sub_251ABA6A4((uint64_t)v18, type metadata accessor for ActionCommand);
      sub_251ABA6A4((uint64_t)v15, type metadata accessor for ActionCommand);
      uint64_t v36 = v53;
      sub_251ABA63C((uint64_t)v26, v53, type metadata accessor for ActionCommand);
      sub_251ABA63C((uint64_t)v21, (uint64_t)v11, type metadata accessor for ActionCommand);
LABEL_13:
      sub_251ABA6A4(v36, type metadata accessor for ActionCommand);
      sub_251ABA6A4((uint64_t)v11, type metadata accessor for ActionCommand);
      sub_251ABA63C((uint64_t)v26, v56, type metadata accessor for ActionCommand);
      sub_251ABA63C((uint64_t)v21, v57, type metadata accessor for ActionCommand);
LABEL_14:
      sub_251ABA6A4(v56, type metadata accessor for ActionCommand);
      sub_251ABA6A4(v57, type metadata accessor for ActionCommand);
      sub_251ABA6A4((uint64_t)v21, type metadata accessor for ActionCommand);
      sub_251ABA6A4((uint64_t)v26, type metadata accessor for ActionCommand);
      return 0;
    }
  }
  return 1;
}

uint64_t sub_251AB5988(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (int *)type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata.SignificantEvent(0);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v31 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2) {
      return 1;
    }
    unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v13 = *(void *)(v8 + 72);
    while (1)
    {
      sub_251ABA63C(a1 + v12, (uint64_t)v10, type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata.SignificantEvent);
      sub_251ABA63C(a2 + v12, (uint64_t)v7, type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata.SignificantEvent);
      if ((sub_251F34CD0() & 1) == 0 || *(double *)&v10[v4[5]] != *(double *)&v7[v4[5]]) {
        break;
      }
      uint64_t v14 = v4[6];
      uint64_t v15 = *(void *)&v10[v14];
      uint64_t v16 = *(void *)&v10[v14 + 8];
      uint64_t v17 = &v7[v14];
      BOOL v18 = v15 == *(void *)v17 && v16 == *((void *)v17 + 1);
      if (!v18 && (sub_251F36B10() & 1) == 0) {
        break;
      }
      uint64_t v19 = v4[7];
      uint64_t v20 = *(void *)&v10[v19];
      uint64_t v21 = *(void *)&v10[v19 + 8];
      uint64_t v22 = &v7[v19];
      BOOL v23 = v20 == *(void *)v22 && v21 == *((void *)v22 + 1);
      if (!v23 && (sub_251F36B10() & 1) == 0) {
        break;
      }
      uint64_t v24 = v4[8];
      uint64_t v25 = *(void *)&v10[v24];
      uint64_t v26 = *(void *)&v10[v24 + 8];
      uint64_t v27 = &v7[v24];
      if (v25 == *(void *)v27 && v26 == *((void *)v27 + 1))
      {
        sub_251ABA6A4((uint64_t)v7, type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata.SignificantEvent);
        sub_251ABA6A4((uint64_t)v10, type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata.SignificantEvent);
      }
      else
      {
        char v29 = sub_251F36B10();
        sub_251ABA6A4((uint64_t)v7, type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata.SignificantEvent);
        sub_251ABA6A4((uint64_t)v10, type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata.SignificantEvent);
        if ((v29 & 1) == 0) {
          return 0;
        }
      }
      v12 += v13;
      if (!--v11) {
        return 1;
      }
    }
    sub_251ABA6A4((uint64_t)v7, type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata.SignificantEvent);
    sub_251ABA6A4((uint64_t)v10, type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata.SignificantEvent);
  }
  return 0;
}

uint64_t sub_251AB5C18(uint64_t a1, uint64_t a2)
{
  return sub_251AB5C48(a1, a2, (uint64_t (*)(void))ServiceKind.rawValue.getter);
}

uint64_t sub_251AB5C30(uint64_t a1, uint64_t a2)
{
  return sub_251AB5C48(a1, a2, (uint64_t (*)(void))CharacteristicKind.rawValue.getter);
}

uint64_t sub_251AB5C48(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v3 && a1 != a2)
  {
    uint64_t v5 = a1 + 32;
    uint64_t v6 = a2 + 32;
    do
    {
      ++v5;
      ++v6;
      uint64_t v7 = a3();
      uint64_t v9 = v8;
      if (v7 == a3() && v9 == v10)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v12 = sub_251F36B10();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v12 & 1) == 0) {
          return 0;
        }
      }
      --v3;
    }
    while (v3);
  }
  return 1;
}

uint64_t sub_251AB5D40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticAlarm();
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v29 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 != *(void *)(a2 + 16))
  {
LABEL_28:
    char v27 = 0;
    return v27 & 1;
  }
  if (v11 && a1 != a2)
  {
    uint64_t v12 = 0;
    unint64_t v13 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v14 = a1 + v13;
    uint64_t v15 = a2 + v13;
    uint64_t v16 = *(void *)(v8 + 72);
    while (1)
    {
      sub_251ABA63C(v14 + v16 * v12, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
      sub_251ABA63C(v15 + v16 * v12, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
      if (*(void *)v10 != *(void *)v7 || *((void *)v10 + 1) != *((void *)v7 + 1)) {
        break;
      }
      uint64_t v17 = *((void *)v10 + 3);
      uint64_t v18 = *((void *)v7 + 3);
      if (v17)
      {
        if (!v18 || (*((void *)v10 + 2) != *((void *)v7 + 2) || v17 != v18) && (sub_251F36B10() & 1) == 0) {
          break;
        }
      }
      else if (v18)
      {
        break;
      }
      uint64_t v19 = *((void *)v10 + 4);
      uint64_t v20 = *((void *)v7 + 4);
      uint64_t v21 = *(void *)(v19 + 16);
      if (v21 != *(void *)(v20 + 16)) {
        break;
      }
      if (v21 && v19 != v20)
      {
        uint64_t v22 = (unsigned __int8 *)(v19 + 32);
        BOOL v23 = (unsigned __int8 *)(v20 + 32);
        do
        {
          int v25 = *v22++;
          int v24 = v25;
          int v26 = *v23++;
          if (v24 != v26) {
            goto LABEL_27;
          }
        }
        while (--v21);
      }
      if (*((_DWORD *)v10 + 10) != *((_DWORD *)v7 + 10) || v10[44] != v7[44] || (sub_251F34D70() & 1) == 0) {
        break;
      }
      char v27 = sub_251F34D70();
      sub_251ABA6A4((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
      sub_251ABA6A4((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
      if ((v27 & 1) != 0 && ++v12 != v11) {
        continue;
      }
      return v27 & 1;
    }
LABEL_27:
    sub_251ABA6A4((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
    sub_251ABA6A4((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
    goto LABEL_28;
  }
  char v27 = 1;
  return v27 & 1;
}

uint64_t sub_251AB5FF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (int *)type metadata accessor for StaticTimer();
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (double *)((char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v5);
  uint64_t v10 = (double *)((char *)&v25 - v9);
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 != *(void *)(a2 + 16))
  {
LABEL_28:
    char v21 = 0;
    return v21 & 1;
  }
  if (v11 && a1 != a2)
  {
    unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v13 = *(void *)(v8 + 72);
    uint64_t v14 = v11 - 1;
    while (1)
    {
      sub_251ABA63C(a1 + v12, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticTimer);
      sub_251ABA63C(a2 + v12, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticTimer);
      if (*v10 != *v7
        || (sub_251F34CD0() & 1) == 0
        || *(double *)((char *)v10 + v4[6]) != *(double *)((char *)v7 + v4[6]))
      {
        break;
      }
      uint64_t v15 = v4[7];
      uint64_t v16 = (void *)((char *)v10 + v15);
      uint64_t v17 = *(void *)((char *)v10 + v15 + 8);
      uint64_t v18 = (void *)((char *)v7 + v15);
      uint64_t v19 = v18[1];
      if (v17)
      {
        if (!v19) {
          break;
        }
        BOOL v20 = *v16 == *v18 && v17 == v19;
        if (!v20 && (sub_251F36B10() & 1) == 0) {
          break;
        }
      }
      else if (v19)
      {
        break;
      }
      if (*((unsigned __int8 *)v10 + v4[8]) != *((unsigned __int8 *)v7 + v4[8])
        || *((unsigned __int8 *)v10 + v4[9]) != *((unsigned __int8 *)v7 + v4[9])
        || (sub_251F34D70() & 1) == 0)
      {
        break;
      }
      char v21 = sub_251F34D70();
      sub_251ABA6A4((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticTimer);
      sub_251ABA6A4((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticTimer);
      BOOL v23 = v14-- != 0;
      if (v21)
      {
        v12 += v13;
        if (v23) {
          continue;
        }
      }
      return v21 & 1;
    }
    sub_251ABA6A4((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticTimer);
    sub_251ABA6A4((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticTimer);
    goto LABEL_28;
  }
  char v21 = 1;
  return v21 & 1;
}

BOOL sub_251AB6284(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (a1[4] != a2[4]) {
    return 0;
  }
  uint64_t v3 = a1 + 5;
  uint64_t v4 = a2 + 5;
  uint64_t v5 = v2 - 1;
  do
  {
    BOOL result = v5 == 0;
    if (!v5) {
      break;
    }
    uint64_t v8 = *v3++;
    uint64_t v7 = v8;
    uint64_t v9 = *v4++;
    --v5;
  }
  while (v7 == v9);
  return result;
}

BOOL sub_251AB62F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (*(_DWORD *)(a1 + 32) != *(_DWORD *)(a2 + 32)) {
    return 0;
  }
  uint64_t v3 = (int *)(a1 + 36);
  uint64_t v4 = (int *)(a2 + 36);
  uint64_t v5 = v2 - 1;
  do
  {
    BOOL result = v5 == 0;
    if (!v5) {
      break;
    }
    int v8 = *v3++;
    int v7 = v8;
    int v9 = *v4++;
    --v5;
  }
  while (v7 == v9);
  return result;
}

BOOL sub_251AB635C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (*(double *)(a1 + 32) != *(double *)(a2 + 32)) {
    return 0;
  }
  uint64_t v3 = (double *)(a1 + 40);
  uint64_t v4 = (double *)(a2 + 40);
  uint64_t v5 = v2 - 1;
  do
  {
    BOOL result = v5 == 0;
    if (!v5) {
      break;
    }
    double v7 = *v3++;
    double v8 = v7;
    double v9 = *v4++;
    --v5;
  }
  while (v8 == v9);
  return result;
}

BOOL sub_251AB63C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t v3 = (unsigned __int8 *)(a1 + 32);
  uint64_t v4 = (unsigned __int8 *)(a2 + 32);
  uint64_t v5 = v2 - 1;
  do
  {
    int v7 = *v3++;
    int v6 = v7;
    int v9 = *v4++;
    int v8 = v9;
    BOOL v11 = v5-- != 0;
    BOOL result = v6 == v8;
  }
  while (v6 == v8 && v11);
  return result;
}

uint64_t sub_251AB6424(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || (v3 = a2, uint64_t v4 = a1, v5 = sub_251F34DA0(), v6 = *(void *)(v5 - 8), v4 == v3))
    {
      char v16 = 1;
    }
    else
    {
      uint64_t v7 = v5;
      unint64_t v8 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      int v9 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
      uint64_t v24 = *(void *)(v6 + 64);
      uint64_t v25 = v9;
      uint64_t v21 = *(void *)(v6 + 72);
      uint64_t v22 = v4;
      uint64_t v26 = v6 + 16;
      BOOL v23 = (uint64_t (**)(char *, uint64_t))(v6 + 8);
      uint64_t v10 = v2 - 1;
      do
      {
        uint64_t v28 = &v21;
        uint64_t v11 = v24;
        MEMORY[0x270FA5388](v5);
        unint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
        uint64_t v13 = v25;
        uint64_t v14 = ((uint64_t (*)(char *, unint64_t, uint64_t))v25)(v12, v4 + v8, v7);
        char v27 = &v21;
        MEMORY[0x270FA5388](v14);
        uint64_t v15 = v3;
        v13(v12, v3 + v8, v7);
        sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
        char v16 = sub_251F35650();
        uint64_t v17 = *v23;
        (*v23)(v12, v7);
        uint64_t v5 = v17(v12, v7);
        BOOL v19 = v10-- != 0;
        if ((v16 & 1) == 0) {
          break;
        }
        v8 += v21;
        uint64_t v3 = v15;
        uint64_t v4 = v22;
      }
      while (v19);
    }
  }
  else
  {
    char v16 = 0;
  }
  return v16 & 1;
}

uint64_t sub_251AB662C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (unsigned __int8 *)(a1 + 32);
    uint64_t v4 = (unsigned __int8 *)(a2 + 32);
    do
    {
      unsigned int v7 = *v3++;
      unsigned int v6 = v7;
      unsigned int v9 = *v4++;
      unsigned int v8 = v9;
      if (v6 >> 6)
      {
        if (v6 >> 6 == 1)
        {
          if ((v8 & 0xC0) != 0x40) {
            return 0;
          }
        }
        else if ((v8 & 0xC0) != 0x80)
        {
          return 0;
        }
        if (((v8 ^ v6) & 0x3F) != 0) {
          return 0;
        }
      }
      else if (v8 > 0x3F || v6 != v8)
      {
        return 0;
      }
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_251AB66B8(uint64_t a1, uint64_t a2)
{
  return sub_251AB6840(a1, a2, (uint64_t (*)(void))type metadata accessor for StaticService, (uint64_t (*)(void))type metadata accessor for StaticService, (uint64_t (*)(char *, char *))static StaticService.== infix(_:_:));
}

uint64_t sub_251AB66F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2) {
      return 1;
    }
    uint64_t v3 = (uint64_t *)(a2 + 56);
    for (unint64_t i = (uint64_t *)(a1 + 56); *(i - 3) == *(v3 - 3); i += 4)
    {
      uint64_t v5 = *i;
      uint64_t v6 = *v3;
      BOOL v7 = *(i - 2) == *(v3 - 2) && *(i - 1) == *(v3 - 1);
      if (!v7 && (sub_251F36B10() & 1) == 0) {
        break;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v8 = sub_251B056E8(v5, v6);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v8 & 1) == 0) {
        break;
      }
      v3 += 4;
      if (!--v2) {
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_251AB6800(uint64_t a1, uint64_t a2)
{
  return sub_251AB6840(a1, a2, (uint64_t (*)(void))type metadata accessor for StaticHome, (uint64_t (*)(void))type metadata accessor for StaticHome, (uint64_t (*)(char *, char *))static StaticHome.== infix(_:_:));
}

uint64_t sub_251AB6840(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void), uint64_t (*a5)(char *, char *))
{
  uint64_t v9 = a3(0) - 8;
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  unint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v24 - v14;
  uint64_t v16 = *(void *)(a1 + 16);
  if (v16 == *(void *)(a2 + 16))
  {
    if (!v16 || a1 == a2)
    {
      char v20 = 1;
    }
    else
    {
      unint64_t v17 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
      uint64_t v18 = *(void *)(v13 + 72);
      uint64_t v19 = v16 - 1;
      do
      {
        sub_251ABA63C(a1 + v17, (uint64_t)v15, a4);
        sub_251ABA63C(a2 + v17, (uint64_t)v12, a4);
        char v20 = a5(v15, v12);
        sub_251ABA6A4((uint64_t)v12, a4);
        sub_251ABA6A4((uint64_t)v15, a4);
        BOOL v22 = v19-- != 0;
        if ((v20 & 1) == 0) {
          break;
        }
        v17 += v18;
      }
      while (v22);
    }
  }
  else
  {
    char v20 = 0;
  }
  return v20 & 1;
}

BOOL sub_251AB69C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (int *)type metadata accessor for StaticUserActionPrediction();
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  BOOL v7 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)v37 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2) {
      return 1;
    }
    unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v38 = *(void *)(v8 + 72);
    int v39 = v4;
    uint64_t v13 = v11 - 1;
    uint64_t v40 = a1;
    uint64_t v41 = a2;
    while (1)
    {
      uint64_t v43 = v13;
      sub_251ABA63C(a1 + v12, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticUserActionPrediction);
      sub_251ABA63C(a2 + v12, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticUserActionPrediction);
      if ((sub_251F34D70() & 1) == 0 || *(double *)&v10[v4[5]] != *(double *)&v7[v4[5]]) {
        break;
      }
      uint64_t v14 = v4[6];
      uint64_t v15 = (uint64_t)&v10[v14];
      uint64_t v16 = (uint64_t)&v7[v14];
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E6B8);
      uint64_t v42 = v37;
      uint64_t v18 = MEMORY[0x270FA5388](v17 - 8);
      char v20 = (char *)v37 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v21 = (uint64_t)&v20[*(int *)(v18 + 56)];
      sub_251A1B128(v15, (uint64_t)v20, &qword_26B21FF90);
      sub_251A1B128(v16, v21, &qword_26B21FF90);
      uint64_t v22 = sub_251F34DA0();
      uint64_t v23 = *(void *)(v22 - 8);
      uint64_t v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
      if (v24((uint64_t)v20, 1, v22) == 1)
      {
        if (v24(v21, 1, v22) != 1) {
          goto LABEL_17;
        }
        sub_251A1B064((uint64_t)v20, &qword_26B21FF90);
        a2 = v41;
        uint64_t v4 = v39;
        a1 = v40;
      }
      else
      {
        uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
        v37[1] = v37;
        MEMORY[0x270FA5388](v25 - 8);
        char v27 = (char *)v37 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
        sub_251A1B128((uint64_t)v20, (uint64_t)v27, &qword_26B21FF90);
        uint64_t v28 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v24)(v21, 1, v22);
        if (v28 == 1)
        {
          (*(void (**)(char *, uint64_t))(v23 + 8))(v27, v22);
LABEL_17:
          sub_251A1B064((uint64_t)v20, &qword_26B21E6B8);
          break;
        }
        v37[0] = v37;
        MEMORY[0x270FA5388](v28);
        uint64_t v30 = (char *)v37 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, uint64_t, uint64_t))(v23 + 32))(v30, v21, v22);
        sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
        char v31 = sub_251F35650();
        uint64_t v32 = *(void (**)(char *, uint64_t))(v23 + 8);
        v32(v30, v22);
        v32(v27, v22);
        sub_251A1B064((uint64_t)v20, &qword_26B21FF90);
        a2 = v41;
        uint64_t v4 = v39;
        a1 = v40;
        if ((v31 & 1) == 0) {
          break;
        }
      }
      uint64_t v33 = v4[7];
      int v34 = v10[v33];
      int v35 = v7[v33];
      sub_251ABA6A4((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticUserActionPrediction);
      sub_251ABA6A4((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticUserActionPrediction);
      uint64_t v13 = v43 - 1;
      BOOL result = v34 == v35;
      if (v34 == v35)
      {
        v12 += v38;
        if (v43) {
          continue;
        }
      }
      return result;
    }
    sub_251ABA6A4((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticUserActionPrediction);
    sub_251ABA6A4((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticUserActionPrediction);
  }
  return 0;
}

uint64_t sub_251AB6E94(uint64_t a1, uint64_t a2)
{
  return sub_251AB6EBC(a1, a2, (uint64_t)&qword_26B21EB00);
}

uint64_t sub_251AB6EA8(uint64_t a1, uint64_t a2)
{
  return sub_251AB6EBC(a1, a2, (uint64_t)&qword_26B21EB20);
}

uint64_t sub_251AB6EBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = (unint64_t)a1 >> 62;
  if ((unint64_t)a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_251F366C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v8 = (unint64_t)a2 >> 62;
  if ((unint64_t)a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = (void *)sub_251F366C0();
    swift_bridgeObjectRelease();
    if ((void *)v7 == v9) {
      goto LABEL_5;
    }
    return 0;
  }
  uint64_t v9 = *(void **)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if ((void *)v7 != v9) {
    return 0;
  }
LABEL_5:
  if (!v7) {
    return 1;
  }
  uint64_t v10 = a1 & 0xFFFFFFFFFFFFFF8;
  uint64_t v11 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a1 < 0) {
    uint64_t v10 = a1;
  }
  if (v6) {
    uint64_t v11 = v10;
  }
  uint64_t v12 = a2 & 0xFFFFFFFFFFFFFF8;
  uint64_t v13 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a2 < 0) {
    uint64_t v12 = a2;
  }
  if (v8) {
    uint64_t v13 = v12;
  }
  if (v11 == v13) {
    return 1;
  }
  if (v7 < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  unint64_t v23 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
LABEL_42:
    uint64_t result = MEMORY[0x2533AB3A0](0, a1);
    goto LABEL_19;
  }
  if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_44;
  }
  uint64_t result = (uint64_t)*(id *)(a1 + 32);
LABEL_19:
  uint64_t v9 = (void *)result;
  unint64_t v8 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0)
  {
LABEL_44:
    id v15 = (id)MEMORY[0x2533AB3A0](0, a2);
LABEL_22:
    uint64_t v16 = v15;
    sub_251A1A568(0, (unint64_t *)a3);
    a3 = sub_251F36120();

    if (a3)
    {
      uint64_t v17 = 1 - v7;
      for (uint64_t i = 5; ; ++i)
      {
        uint64_t v7 = v17 + i == 5;
        if (v17 + i == 5) {
          return v7;
        }
        unint64_t v22 = i - 4;
        if (v23)
        {
          a3 = MEMORY[0x2533AB3A0](i - 4, a1);
          if (v8) {
            goto LABEL_24;
          }
        }
        else
        {
          if (v22 >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_40:
            __break(1u);
            goto LABEL_41;
          }
          a3 = (uint64_t)*(id *)(a1 + 8 * i);
          if (v8)
          {
LABEL_24:
            id v19 = (id)MEMORY[0x2533AB3A0](i - 4, a2);
            goto LABEL_25;
          }
        }
        if (v22 >= *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_40;
        }
        id v19 = *(id *)(a2 + 8 * i);
LABEL_25:
        char v20 = v19;
        char v21 = sub_251F36120();

        if ((v21 & 1) == 0) {
          return v7;
        }
      }
    }
    return 0;
  }
  if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v15 = *(id *)(a2 + 32);
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

uint64_t sub_251AB713C(uint64_t a1, uint64_t a2)
{
  return sub_251AB6840(a1, a2, (uint64_t (*)(void))type metadata accessor for ActionService, (uint64_t (*)(void))type metadata accessor for ActionService, (uint64_t (*)(char *, char *))static ActionService.== infix(_:_:));
}

uint64_t sub_251AB717C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    for (uint64_t i = 0; ; i += 48)
    {
      uint64_t v8 = a1 + i;
      uint64_t v9 = a2 + i;
      if (*(_DWORD *)(a1 + i + 32) != *(_DWORD *)(a2 + i + 32)) {
        break;
      }
      uint64_t v10 = *(void *)(v8 + 48);
      uint64_t v11 = *(void *)(v8 + 56);
      int v12 = *(unsigned __int16 *)(v8 + 64);
      char v13 = *(unsigned char *)(v8 + 66);
      int v14 = *(unsigned __int8 *)(v8 + 67);
      char v15 = *(unsigned char *)(v8 + 68);
      int v16 = *(unsigned __int8 *)(v8 + 69);
      char v17 = *(unsigned char *)(v8 + 70);
      int v18 = *(unsigned __int8 *)(v8 + 71);
      char v19 = *(unsigned char *)(v8 + 72);
      uint64_t v20 = *(void *)(v9 + 56);
      int v21 = *(unsigned __int16 *)(v9 + 64);
      int v22 = *(unsigned __int8 *)(v9 + 66);
      int v23 = *(unsigned __int8 *)(v9 + 67);
      int v24 = *(unsigned __int8 *)(v9 + 68);
      int v25 = *(unsigned __int8 *)(v9 + 69);
      int v26 = *(unsigned __int8 *)(v9 + 70);
      int v27 = *(unsigned __int8 *)(v9 + 71);
      char v28 = *(unsigned char *)(v9 + 72);
      if (*(unsigned char *)(v8 + 40))
      {
        if (!*(unsigned char *)(v9 + 40)) {
          return 0;
        }
      }
      else
      {
        if (*(_DWORD *)(v8 + 36) == *(_DWORD *)(v9 + 36)) {
          char v29 = *(unsigned char *)(v9 + 40);
        }
        else {
          char v29 = 1;
        }
        if (v29) {
          return 0;
        }
      }
      if (v11)
      {
        if (!v20) {
          return 0;
        }
        if (v10 != *(void *)(v9 + 48) || v11 != v20)
        {
          int v47 = v14;
          int v48 = v16;
          int v39 = *(unsigned __int16 *)(v9 + 64);
          int v40 = *(unsigned __int8 *)(v9 + 67);
          int v30 = v18;
          char v41 = v13;
          int v42 = *(unsigned __int8 *)(v9 + 68);
          char v31 = v19;
          char v32 = *(unsigned char *)(v9 + 72);
          int v45 = *(unsigned __int8 *)(v9 + 71);
          int v46 = *(unsigned __int8 *)(v9 + 70);
          int v43 = v12;
          char v44 = v15;
          char v33 = v17;
          int v34 = *(unsigned __int8 *)(v9 + 69);
          char v35 = sub_251F36B10();
          int v25 = v34;
          int v26 = v46;
          int v14 = v47;
          char v17 = v33;
          int v12 = v43;
          char v15 = v44;
          int v27 = v45;
          char v28 = v32;
          int v16 = v48;
          char v19 = v31;
          char v13 = v41;
          int v24 = v42;
          int v18 = v30;
          int v21 = v39;
          int v23 = v40;
          if ((v35 & 1) == 0) {
            return 0;
          }
        }
      }
      else if (v20)
      {
        return 0;
      }
      if (v13)
      {
        if (!v22) {
          return 0;
        }
      }
      else
      {
        if (v12 == v21) {
          char v36 = v22;
        }
        else {
          char v36 = 1;
        }
        if (v36) {
          return 0;
        }
      }
      if (v15)
      {
        if (!v24) {
          return 0;
        }
      }
      else
      {
        if (v14 == v23) {
          char v37 = v24;
        }
        else {
          char v37 = 1;
        }
        if (v37) {
          return 0;
        }
      }
      if (v17)
      {
        if (!v26) {
          return 0;
        }
      }
      else
      {
        if (v16 == v25) {
          char v38 = v26;
        }
        else {
          char v38 = 1;
        }
        if (v38) {
          return 0;
        }
      }
      if (v19)
      {
        if ((v28 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        if (v18 == v27) {
          char v6 = v28;
        }
        else {
          char v6 = 1;
        }
        if (v6) {
          return 0;
        }
      }
      uint64_t result = 1;
      if (!--v2) {
        return result;
      }
    }
    return 0;
  }
  return 1;
}

uint64_t sub_251AB736C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (void *)(a2 + 48);
    for (uint64_t i = (void *)(a1 + 48); *((_DWORD *)i - 4) == *((_DWORD *)v3 - 4); i += 3)
    {
      BOOL v5 = *(i - 1) == *(v3 - 1) && *i == *v3;
      if (!v5 && (sub_251F36B10() & 1) == 0) {
        break;
      }
      v3 += 3;
      if (!--v2) {
        return 1;
      }
    }
    return 0;
  }
  return 1;
}

uint64_t sub_251AB7404(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t v3 = (unsigned char *)(a2 + 52);
  for (uint64_t i = (unsigned char *)(a1 + 52); ; i += 24)
  {
    uint64_t result = 0;
    if (*((_DWORD *)i - 5) != *((_DWORD *)v3 - 5) || *(i - 16) != *(v3 - 16)) {
      break;
    }
    char v7 = *(v3 - 8);
    if (*(i - 8))
    {
      if (!*(v3 - 8)) {
        return 0;
      }
    }
    else
    {
      if (*((_DWORD *)i - 3) != *((_DWORD *)v3 - 3)) {
        char v7 = 1;
      }
      if (v7) {
        return 0;
      }
    }
    if (*i)
    {
      if (!*v3) {
        return 0;
      }
    }
    else
    {
      if (*((_DWORD *)i - 1) == *((_DWORD *)v3 - 1)) {
        char v5 = *v3;
      }
      else {
        char v5 = 1;
      }
      if (v5) {
        return 0;
      }
    }
    v3 += 24;
    if (!--v2) {
      return 1;
    }
  }
  return result;
}

uint64_t sub_251AB74BC(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  BOOL v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_251F36B10(), uint64_t result = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = v2 - 1;
    if (!v8) {
      return 1;
    }
    uint64_t v9 = a2 + 7;
    for (uint64_t i = a1 + 7; ; i += 2)
    {
      BOOL v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_251F36B10() & 1) == 0) {
        break;
      }
      v9 += 2;
      if (!--v8) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_251AB7584(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ColorPickerFavorite();
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  char v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v23 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 != *(void *)(a2 + 16))
  {
LABEL_15:
    char v19 = 0;
    return v19 & 1;
  }
  if (v11 && a1 != a2)
  {
    unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v13 = *(void *)(v8 + 72);
    uint64_t v14 = v11 - 1;
    while (1)
    {
      sub_251ABA63C(a1 + v12, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ColorPickerFavorite);
      sub_251ABA63C(a2 + v12, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ColorPickerFavorite);
      uint64_t v15 = *((void *)v10 + 2);
      char v16 = v10[24];
      long long v26 = *(_OWORD *)v10;
      uint64_t v27 = v15;
      char v28 = v16;
      uint64_t v17 = *((void *)v7 + 2);
      char v18 = v7[24];
      long long v23 = *(_OWORD *)v7;
      uint64_t v24 = v17;
      char v25 = v18;
      if ((static LightbulbColor.== infix(_:_:)((uint64_t)&v26, (uint64_t)&v23) & 1) == 0
        || *((double *)v10 + 4) != *((double *)v7 + 4))
      {
        break;
      }
      char v19 = sub_251F34D70();
      sub_251ABA6A4((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ColorPickerFavorite);
      sub_251ABA6A4((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ColorPickerFavorite);
      BOOL v21 = v14-- != 0;
      if (v19)
      {
        v12 += v13;
        if (v21) {
          continue;
        }
      }
      return v19 & 1;
    }
    sub_251ABA6A4((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ColorPickerFavorite);
    sub_251ABA6A4((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ColorPickerFavorite);
    goto LABEL_15;
  }
  char v19 = 1;
  return v19 & 1;
}

uint64_t sub_251AB77B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SignificantEvent();
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  char v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v19 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v11 && a1 != a2)
  {
    unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v13 = *(void *)(v8 + 72);
    while (1)
    {
      sub_251ABA63C(a1 + v12, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for SignificantEvent);
      sub_251ABA63C(a2 + v12, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for SignificantEvent);
      if ((sub_251F34D70() & 1) == 0 || v10[*(int *)(v4 + 20)] != v7[*(int *)(v4 + 20)] || (sub_251F34CD0() & 1) == 0) {
        break;
      }
      uint64_t v14 = *(int *)(v4 + 28);
      int v15 = v10[v14];
      int v16 = v7[v14];
      if (v15 == 4)
      {
        if (v16 != 4) {
          break;
        }
      }
      else if (v16 == 4 || v15 != v16)
      {
        break;
      }
      sub_251ABA6A4((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for SignificantEvent);
      sub_251ABA6A4((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for SignificantEvent);
      v12 += v13;
      if (!--v11) {
        return 1;
      }
    }
    sub_251ABA6A4((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for SignificantEvent);
    sub_251ABA6A4((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for SignificantEvent);
    return 0;
  }
  return 1;
}

uint64_t sub_251AB79C4(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    goto LABEL_7;
  }
  if (!v2 || a1 == a2) {
    goto LABEL_6;
  }
  uint64_t v5 = a1[4];
  uint64_t v6 = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v7 = sub_251B04694(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v7 & 1) == 0)
  {
LABEL_7:
    char v8 = 0;
    return v8 & 1;
  }
  if (v2 == 1)
  {
LABEL_6:
    char v8 = 1;
    return v8 & 1;
  }
  uint64_t v10 = v2 - 2;
  uint64_t v11 = a1 + 5;
  unint64_t v12 = a2 + 5;
  do
  {
    uint64_t v14 = *v11++;
    uint64_t v13 = v14;
    uint64_t v15 = *v12++;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v8 = sub_251B04694(v13, v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    BOOL v17 = v10-- != 0;
  }
  while ((v8 & 1) != 0 && v17);
  return v8 & 1;
}

uint64_t StaticZone.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_251F34DA0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t StaticZone.name.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for StaticZone() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for StaticZone()
{
  uint64_t result = qword_26B21F300;
  if (!qword_26B21F300) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t StaticZone.roomIDs.getter()
{
  type metadata accessor for StaticZone();
  return swift_bridgeObjectRetain();
}

uint64_t static StaticZone.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((sub_251F34D70() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for StaticZone();
  uint64_t v5 = *(int *)(v4 + 20);
  uint64_t v6 = *(void *)(a1 + v5);
  uint64_t v7 = *(void *)(a1 + v5 + 8);
  char v8 = (void *)(a2 + v5);
  BOOL v9 = v6 == *v8 && v7 == v8[1];
  if (!v9 && (sub_251F36B10() & 1) == 0) {
    return 0;
  }
  uint64_t v10 = *(int *)(v4 + 24);
  uint64_t v11 = *(void *)(a1 + v10);
  uint64_t v12 = *(void *)(a2 + v10);
  return sub_251AB6424(v11, v12);
}

uint64_t StaticZone.hash(into:)(uint64_t a1)
{
  sub_251F34DA0();
  sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
  sub_251F35610();
  uint64_t v3 = type metadata accessor for StaticZone();
  swift_bridgeObjectRetain();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(v1 + *(int *)(v3 + 24));
  swift_bridgeObjectRetain();
  sub_251A41A94(a1, v4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_251AB7D4C()
{
  uint64_t v1 = 1701667182;
  if (*v0 != 1) {
    uint64_t v1 = 0x7344496D6F6F72;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 25705;
  }
}

uint64_t sub_251AB7D94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251ABA3DC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251AB7DBC(uint64_t a1)
{
  unint64_t v2 = sub_251AB8C3C();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251AB7DF8(uint64_t a1)
{
  unint64_t v2 = sub_251AB8C3C();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticZone.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D7D8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251AB8C3C();
  sub_251F36DA0();
  char v14 = 0;
  sub_251F34DA0();
  sub_251A1A8EC(&qword_26B21E348);
  sub_251F36A20();
  if (!v2)
  {
    uint64_t v9 = type metadata accessor for StaticZone();
    char v13 = 1;
    sub_251F369D0();
    uint64_t v12 = *(void *)(v3 + *(int *)(v9 + 24));
    v11[15] = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2C8);
    sub_251AB8C90(&qword_269B9D7E8, &qword_26B21E348);
    sub_251F36A20();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t StaticZone.hashValue.getter()
{
  sub_251F36CA0();
  sub_251F34DA0();
  sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
  sub_251F35610();
  uint64_t v1 = type metadata accessor for StaticZone();
  sub_251F357B0();
  sub_251A41A94((uint64_t)v3, *(void *)(v0 + *(int *)(v1 + 24)));
  return sub_251F36D00();
}

uint64_t StaticZone.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D7F0);
  uint64_t v4 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for StaticZone();
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251AB8C3C();
  sub_251F36D90();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  int v22 = v9;
  uint64_t v24 = v4;
  uint64_t v10 = sub_251F34DA0();
  long long v23 = v21;
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  char v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v30 = 0;
  sub_251A1A8EC(&qword_269B9CC80);
  uint64_t v14 = v26;
  sub_251F36880();
  v21[1] = v11;
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  uint64_t v16 = (uint64_t)v22;
  v15(v22, v13, v10);
  char v29 = 1;
  uint64_t v17 = sub_251F36830();
  char v18 = (uint64_t *)(v16 + *(int *)(v7 + 20));
  *char v18 = v17;
  v18[1] = v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2C8);
  char v28 = 2;
  sub_251AB8C90(&qword_269B9D7F8, &qword_269B9CC80);
  sub_251F36880();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v6, v14);
  *(void *)(v16 + *(int *)(v7 + 24)) = v27;
  sub_251ABA63C(v16, v25, (uint64_t (*)(void))type metadata accessor for StaticZone);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return sub_251ABA6A4(v16, (uint64_t (*)(void))type metadata accessor for StaticZone);
}

uint64_t sub_251AB84F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((sub_251F34D70() & 1) == 0) {
    return 0;
  }
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = *(void *)(a1 + v6);
  uint64_t v8 = *(void *)(a1 + v6 + 8);
  uint64_t v9 = (void *)(a2 + v6);
  BOOL v10 = v7 == *v9 && v8 == v9[1];
  if (!v10 && (sub_251F36B10() & 1) == 0) {
    return 0;
  }
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = *(void *)(a1 + v11);
  uint64_t v13 = *(void *)(a2 + v11);
  return sub_251AB6424(v12, v13);
}

uint64_t sub_251AB8588(uint64_t a1)
{
  sub_251F36CA0();
  sub_251F34DA0();
  sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
  sub_251F35610();
  sub_251F357B0();
  sub_251A41A94((uint64_t)v4, *(void *)(v1 + *(int *)(a1 + 24)));
  return sub_251F36D00();
}

uint64_t sub_251AB8620(uint64_t a1, uint64_t a2)
{
  sub_251F34DA0();
  sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
  sub_251F35610();
  sub_251F357B0();
  uint64_t v5 = *(void *)(v2 + *(int *)(a2 + 24));
  return sub_251A41A94(a1, v5);
}

uint64_t sub_251AB86AC(uint64_t a1, uint64_t a2)
{
  sub_251F36CA0();
  sub_251F34DA0();
  sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
  sub_251F35610();
  sub_251F357B0();
  sub_251A41A94((uint64_t)v5, *(void *)(v2 + *(int *)(a2 + 24)));
  return sub_251F36D00();
}

uint64_t sub_251AB8740@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticZone.init(from:)(a1, a2);
}

uint64_t sub_251AB8758(void *a1)
{
  return StaticZone.encode(to:)(a1);
}

uint64_t sub_251AB8770@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_uniqueIdentifier);
  sub_251F34D80();

  id v5 = objc_msgSend(a1, sel_name);
  uint64_t v6 = sub_251F356F0();
  uint64_t v8 = v7;

  uint64_t v9 = type metadata accessor for StaticZone();
  BOOL v10 = (uint64_t *)(a2 + *(int *)(v9 + 20));
  *BOOL v10 = v6;
  v10[1] = v8;
  id v11 = objc_msgSend(a1, sel_rooms);
  sub_251A1A568(0, &qword_26B21EB28);
  unint64_t v12 = sub_251F35AC0();

  if (!(v12 >> 62))
  {
    uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v13) {
      goto LABEL_3;
    }
LABEL_18:

    swift_bridgeObjectRelease();
    unint64_t v36 = MEMORY[0x263F8EE78];
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)(a2 + *(int *)(v9 + 24)) = v36;
    return result;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_251F366C0();
  uint64_t v13 = result;
  if (!result) {
    goto LABEL_18;
  }
LABEL_3:
  if (v13 >= 1)
  {
    uint64_t v37 = v9;
    id v38 = a1;
    uint64_t v15 = 0;
    uint64_t v39 = a2;
    unint64_t v40 = v12 & 0xC000000000000001;
    unint64_t v45 = MEMORY[0x263F8EE78];
    uint64_t v41 = v13;
    unint64_t v42 = v12;
    do
    {
      uint64_t v46 = v15;
      if (v40) {
        id v17 = (id)MEMORY[0x2533AB3A0](v15, v12);
      }
      else {
        id v17 = *(id *)(v12 + 8 * v15 + 32);
      }
      char v18 = v17;
      uint64_t v19 = sub_251F34DA0();
      int v47 = &v37;
      uint64_t v20 = *(void *)(v19 - 8);
      uint64_t v21 = *(void *)(v20 + 64);
      MEMORY[0x270FA5388](v19);
      unint64_t v22 = (v21 + 15) & 0xFFFFFFFFFFFFFFF0;
      char v44 = (char *)&v37 - v22;
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
      int v48 = &v37;
      MEMORY[0x270FA5388](v23 - 8);
      uint64_t v25 = (char *)&v37 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
      id v26 = objc_msgSend(v18, sel_uniqueIdentifier);
      MEMORY[0x270FA5388](v26);
      unint64_t v43 = v22;
      sub_251F34D80();

      uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
      v27(v25, (char *)&v37 - v22, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v25, 0, 1, v19);

      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v25, 1, v19) == 1)
      {
        sub_251A1B064((uint64_t)v25, &qword_26B21FF90);
        unint64_t v12 = v42;
        uint64_t v16 = v46;
      }
      else
      {
        char v28 = v44;
        uint64_t v29 = ((uint64_t (*)(char *, char *, uint64_t))v27)(v44, v25, v19);
        MEMORY[0x270FA5388](v29);
        char v30 = (char *)&v37 - v43;
        int v48 = v31;
        ((void (*)(char *, char *, uint64_t))v31)((char *)&v37 - v43, v28, v19);
        unint64_t v32 = v45;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v32 = sub_251F0F4DC(0, *(void *)(v32 + 16) + 1, 1, v32);
        }
        uint64_t v16 = v46;
        unint64_t v34 = *(void *)(v32 + 16);
        unint64_t v33 = *(void *)(v32 + 24);
        unint64_t v45 = v32;
        if (v34 >= v33 >> 1) {
          unint64_t v45 = sub_251F0F4DC(v33 > 1, v34 + 1, 1, v45);
        }
        unint64_t v35 = v45;
        *(void *)(v45 + 16) = v34 + 1;
        ((void (*)(unint64_t, char *, uint64_t))v48)(v35+ ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80))+ *(void *)(v20 + 72) * v34, v30, v19);
        unint64_t v12 = v42;
      }
      uint64_t v15 = v16 + 1;
    }
    while (v41 != v15);

    swift_bridgeObjectRelease();
    a2 = v39;
    uint64_t v9 = v37;
    unint64_t v36 = v45;
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

unint64_t sub_251AB8C3C()
{
  unint64_t result = qword_269B9D7E0;
  if (!qword_269B9D7E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9D7E0);
  }
  return result;
}

uint64_t sub_251AB8C90(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B21F2C8);
    sub_251A1A8EC(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_251AB8D14()
{
  unint64_t result = qword_26B21ED60;
  if (!qword_26B21ED60)
  {
    type metadata accessor for StaticZone();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B21ED60);
  }
  return result;
}

uint64_t sub_251AB8D6C()
{
  return sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
}

uint64_t *initializeBufferWithCopyOfBuffer for StaticZone(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_251F34DA0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(int *)(a3 + 24);
    BOOL v10 = (uint64_t *)((char *)a1 + v8);
    id v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *BOOL v10 = *v11;
    v10[1] = v12;
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for StaticZone(uint64_t a1)
{
  uint64_t v2 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StaticZone(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (void *)(a1 + v7);
  BOOL v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for StaticZone(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for StaticZone(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for StaticZone(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StaticZone(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251AB9188);
}

uint64_t sub_251AB9188(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for StaticZone(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251AB9260);
}

uint64_t sub_251AB9260(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_251F34DA0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_251AB9320()
{
  uint64_t result = sub_251F34DA0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for StaticZone.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251AB9490);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticZone.CodingKeys()
{
  return &type metadata for StaticZone.CodingKeys;
}

unint64_t sub_251AB94CC()
{
  unint64_t result = qword_269B9D800;
  if (!qword_269B9D800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9D800);
  }
  return result;
}

unint64_t sub_251AB9524()
{
  unint64_t result = qword_269B9D808;
  if (!qword_269B9D808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9D808);
  }
  return result;
}

unint64_t sub_251AB957C()
{
  unint64_t result = qword_269B9D810;
  if (!qword_269B9D810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9D810);
  }
  return result;
}

uint64_t sub_251AB95D0(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  int v48 = a3;
  uint64_t v7 = type metadata accessor for StaticZone();
  uint64_t v44 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v39 = (uint64_t)v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v38 - v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2F0);
  uint64_t result = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)(a1 + 16);
  if (!v17) {
    return result;
  }
  v38[1] = a1;
  v38[2] = v4;
  unint64_t v43 = &v16[*(int *)(result + 48)];
  uint64_t v18 = a1 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  uint64_t v40 = *(void *)(v14 + 72);
  swift_bridgeObjectRetain();
  uint64_t v41 = v16;
  unint64_t v42 = v11;
  while (1)
  {
    uint64_t v46 = v18;
    uint64_t v47 = v17;
    sub_251A1B128(v18, (uint64_t)v16, &qword_26B21F2F0);
    uint64_t v20 = sub_251F34DA0();
    unint64_t v45 = v38;
    uint64_t v21 = *(void *)(v20 - 8);
    MEMORY[0x270FA5388](v20);
    uint64_t v23 = (char *)v38 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
    v24(v23, v16, v20);
    sub_251ABA50C((uint64_t)v43, (uint64_t)v11);
    uint64_t v25 = *v48;
    unint64_t v27 = sub_2519FE584((uint64_t)v23);
    uint64_t v28 = *(void *)(v25 + 16);
    BOOL v29 = (v26 & 1) == 0;
    uint64_t v30 = v28 + v29;
    if (__OFADD__(v28, v29)) {
      break;
    }
    char v31 = v26;
    if (*(void *)(v25 + 24) >= v30)
    {
      if (a2)
      {
        if (v26) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_251A1246C();
        if (v31) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_251A01F38(v30, a2 & 1);
      unint64_t v32 = sub_2519FE584((uint64_t)v23);
      if ((v31 & 1) != (v33 & 1)) {
        goto LABEL_20;
      }
      unint64_t v27 = v32;
      if (v31)
      {
LABEL_3:
        uint64_t v11 = v42;
        uint64_t v19 = v39;
        sub_251ABA50C((uint64_t)v42, v39);
        (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
        sub_251ABA5D8(v19, *(void *)(*v48 + 56) + *(void *)(v44 + 72) * v27);
        goto LABEL_4;
      }
    }
    unint64_t v34 = (void *)*v48;
    *(void *)(*v48 + 8 * (v27 >> 6) + 64) |= 1 << v27;
    v24((char *)(v34[6] + *(void *)(v21 + 72) * v27), v23, v20);
    uint64_t v11 = v42;
    sub_251ABA50C((uint64_t)v42, v34[7] + *(void *)(v44 + 72) * v27);
    uint64_t v35 = v34[2];
    BOOL v36 = __OFADD__(v35, 1);
    uint64_t v37 = v35 + 1;
    if (v36) {
      goto LABEL_19;
    }
    v34[2] = v37;
LABEL_4:
    uint64_t v16 = v41;
    uint64_t v18 = v46 + v40;
    a2 = 1;
    uint64_t v17 = v47 - 1;
    if (v47 == 1) {
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  uint64_t result = sub_251F36BA0();
  __break(1u);
  return result;
}

uint64_t sub_251AB99BC(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B21EC70);
  MEMORY[0x270FA5388](v2 - 8);
  unint64_t v4 = (unint64_t)&v69 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = type metadata accessor for StaticZone();
  uint64_t v78 = *(void *)(v82 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v82);
  uint64_t v77 = (uint64_t)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v81 = (char *)&v69 - v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v70 = (uint64_t)&v69 - v9;
  id v10 = objc_msgSend(a1, sel_zones);
  sub_251A1A568(0, &qword_26B21ECF0);
  unint64_t v11 = sub_251F35AC0();

  if (v11 >> 62) {
    goto LABEL_47;
  }
  uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
LABEL_3:
  unint64_t v13 = MEMORY[0x263F8EE78];
  unint64_t v71 = v11;
  if (v12)
  {
    unint64_t v75 = v4;
    unint64_t v14 = 0;
    unint64_t v76 = v11 & 0xC000000000000001;
    unint64_t v69 = v11 + 32;
    uint64_t v73 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v78 + 56);
    uint64_t v72 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v78 + 48);
    uint64_t v74 = v12;
    do
    {
      if (v76)
      {
        id v15 = (id)MEMORY[0x2533AB3A0](v14, v71);
        BOOL v16 = __OFADD__(v14, 1);
        unint64_t v4 = v14 + 1;
        if (v16) {
          goto LABEL_45;
        }
      }
      else
      {
        id v15 = *(id *)(v69 + 8 * v14);
        BOOL v16 = __OFADD__(v14, 1);
        unint64_t v4 = v14 + 1;
        if (v16)
        {
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
LABEL_47:
          swift_bridgeObjectRetain();
          uint64_t v12 = sub_251F366C0();
          goto LABEL_3;
        }
      }
      unint64_t v80 = v4;
      unint64_t v83 = v13;
      id v17 = v15;
      id v18 = objc_msgSend(v17, sel_uniqueIdentifier);
      uint64_t v19 = v81;
      sub_251F34D80();

      id v20 = objc_msgSend(v17, sel_name);
      uint64_t v21 = sub_251F356F0();
      unint64_t v11 = v22;

      uint64_t v23 = (uint64_t *)&v19[*(int *)(v82 + 20)];
      *uint64_t v23 = v21;
      v23[1] = v11;
      id v79 = v17;
      id v24 = objc_msgSend(v17, sel_rooms);
      sub_251A1A568(0, &qword_26B21EB28);
      unint64_t v4 = sub_251F35AC0();

      if (v4 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v25 = sub_251F366C0();
        if (!v25)
        {
LABEL_28:
          unint64_t v89 = MEMORY[0x263F8EE78];
          goto LABEL_29;
        }
      }
      else
      {
        uint64_t v25 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v25) {
          goto LABEL_28;
        }
      }
      if (v25 < 1) {
        goto LABEL_46;
      }
      uint64_t v26 = 0;
      unint64_t v84 = v4 & 0xC000000000000001;
      unint64_t v89 = MEMORY[0x263F8EE78];
      uint64_t v85 = v25;
      unint64_t v86 = v4;
      do
      {
        if (v84) {
          id v27 = (id)MEMORY[0x2533AB3A0](v26, v4);
        }
        else {
          id v27 = *(id *)(v4 + 8 * v26 + 32);
        }
        uint64_t v28 = v27;
        uint64_t v29 = sub_251F34DA0();
        uint64_t v91 = &v69;
        uint64_t v30 = *(void *)(v29 - 8);
        uint64_t v31 = *(void *)(v30 + 64);
        MEMORY[0x270FA5388](v29);
        unint64_t v32 = (v31 + 15) & 0xFFFFFFFFFFFFFFF0;
        uint64_t v88 = (char *)&v69 - v32;
        uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
        uint64_t v90 = &v69;
        MEMORY[0x270FA5388](v33 - 8);
        uint64_t v35 = (char *)&v69 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
        id v36 = objc_msgSend(v28, sel_uniqueIdentifier);
        MEMORY[0x270FA5388](v36);
        unint64_t v87 = v32;
        sub_251F34D80();

        uint64_t v37 = (char *)&v69 - v32;
        id v38 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
        v38(v35, v37, v29);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v35, 0, 1, v29);

        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v35, 1, v29) == 1)
        {
          sub_251A1B064((uint64_t)v35, &qword_26B21FF90);
        }
        else
        {
          uint64_t v39 = v88;
          uint64_t v40 = ((uint64_t (*)(char *, char *, uint64_t))v38)(v88, v35, v29);
          MEMORY[0x270FA5388](v40);
          uint64_t v41 = (char *)&v69 - v87;
          v38((char *)&v69 - v87, v39, v29);
          unint64_t v42 = (void (*)(unint64_t, char *, uint64_t))v38;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v89 = sub_251F0F4DC(0, *(void *)(v89 + 16) + 1, 1, v89);
          }
          unint64_t v44 = *(void *)(v89 + 16);
          unint64_t v43 = *(void *)(v89 + 24);
          if (v44 >= v43 >> 1) {
            unint64_t v89 = sub_251F0F4DC(v43 > 1, v44 + 1, 1, v89);
          }
          unint64_t v45 = v89;
          *(void *)(v89 + 16) = v44 + 1;
          v42(v45+ ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80))+ *(void *)(v30 + 72) * v44, v41, v29);
        }
        ++v26;
        unint64_t v4 = v86;
      }
      while (v85 != v26);
LABEL_29:
      swift_bridgeObjectRelease_n();
      unint64_t v11 = (unint64_t)v79;

      uint64_t v46 = (uint64_t)v81;
      uint64_t v47 = v82;
      *(void *)&v81[*(int *)(v82 + 24)] = v89;
      uint64_t v48 = v75;
      sub_251ABA50C(v46, v75);
      (*v73)(v48, 0, 1, v47);

      if ((*v72)(v48, 1, v47) == 1)
      {
        sub_251A1B064(v48, (uint64_t *)&unk_26B21EC70);
        unint64_t v13 = v83;
      }
      else
      {
        uint64_t v49 = v48;
        uint64_t v50 = v70;
        sub_251ABA50C(v49, v70);
        sub_251ABA50C(v50, v77);
        unint64_t v13 = v83;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v13 = sub_251F0F52C(0, *(void *)(v13 + 16) + 1, 1, v13);
        }
        unint64_t v52 = *(void *)(v13 + 16);
        unint64_t v51 = *(void *)(v13 + 24);
        if (v52 >= v51 >> 1) {
          unint64_t v13 = sub_251F0F52C(v51 > 1, v52 + 1, 1, v13);
        }
        *(void *)(v13 + 16) = v52 + 1;
        sub_251ABA50C(v77, v13+ ((*(unsigned __int8 *)(v78 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80))+ *(void *)(v78 + 72) * v52);
      }
      unint64_t v14 = v80;
    }
    while (v80 != v74);
  }
  swift_bridgeObjectRelease_n();
  int64_t v53 = *(void *)(v13 + 16);
  if (v53)
  {
    uint64_t v92 = MEMORY[0x263F8EE78];
    sub_251A3E0B4(0, v53, 0);
    uint64_t v54 = 0;
    uint64_t v55 = v92;
    uint64_t v56 = *(unsigned __int8 *)(v78 + 80);
    unint64_t v83 = v13;
    unint64_t v57 = v13 + ((v56 + 32) & ~v56);
    do
    {
      uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2F0);
      uint64_t v59 = *(void *)(v58 - 8);
      uint64_t v60 = MEMORY[0x270FA5388](v58 - 8);
      uint64_t v62 = (char *)&v69 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v63 = (uint64_t)&v62[*(int *)(v60 + 56)];
      sub_251ABA63C(v57 + *(void *)(v78 + 72) * v54, v63, (uint64_t (*)(void))type metadata accessor for StaticZone);
      uint64_t v64 = sub_251F34DA0();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v64 - 8) + 16))(v62, v63, v64);
      uint64_t v92 = v55;
      unint64_t v66 = *(void *)(v55 + 16);
      unint64_t v65 = *(void *)(v55 + 24);
      if (v66 >= v65 >> 1)
      {
        sub_251A3E0B4(v65 > 1, v66 + 1, 1);
        uint64_t v55 = v92;
      }
      ++v54;
      *(void *)(v55 + 16) = v66 + 1;
      sub_251ABA570((uint64_t)v62, v55+ ((*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80))+ *(void *)(v59 + 72) * v66);
    }
    while (v53 != v54);
    swift_bridgeObjectRelease();
    if (*(void *)(v55 + 16)) {
      goto LABEL_41;
    }
LABEL_43:
    uint64_t v67 = MEMORY[0x263F8EE80];
    goto LABEL_44;
  }
  swift_bridgeObjectRelease();
  uint64_t v55 = MEMORY[0x263F8EE78];
  if (!*(void *)(MEMORY[0x263F8EE78] + 16)) {
    goto LABEL_43;
  }
LABEL_41:
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CAB8);
  uint64_t v67 = sub_251F36700();
LABEL_44:
  uint64_t v92 = v67;
  sub_251AB95D0(v55, 1, &v92);
  swift_bridgeObjectRelease();
  return v92;
}

uint64_t sub_251ABA3DC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7344496D6F6F72 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_251ABA50C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticZone();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_251ABA570(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_251ABA5D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticZone();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_251ABA63C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_251ABA6A4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t WidgetContext.uniqueIdentifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WidgetContext.widgetKind.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

HomeDataModel::WidgetContext __swiftcall WidgetContext.init(uniqueIdentifier:widgetKind:)(Swift::String_optional uniqueIdentifier, Swift::String_optional widgetKind)
{
  *BOOL v2 = uniqueIdentifier;
  v2[1] = widgetKind;
  result.widgetKind = widgetKind;
  result.uniqueIdentifier = uniqueIdentifier;
  return result;
}

uint64_t destroy for WidgetContext()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for WidgetContext(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for WidgetContext(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for WidgetContext(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetContext(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for WidgetContext(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)HomeDataModel::WidgetContext result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetContext()
{
  return &type metadata for WidgetContext;
}

uint64_t sub_251ABA964()
{
  *(void *)(v0 + 48) = 0;
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0;
  *(unsigned char *)(v0 + 32) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v0 + 96) = 0;
  *(_OWORD *)(v0 + 64) = 0u;
  *(_OWORD *)(v0 + 80) = 0u;
  uint64_t v1 = v0 + OBJC_IVAR____TtC13HomeDataModel30CameraClipAssetPlaybackManager_currentElement;
  uint64_t v2 = type metadata accessor for ScrubberElement(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  unint64_t v3 = (void *)(v0 + OBJC_IVAR____TtC13HomeDataModel30CameraClipAssetPlaybackManager_chaseTime);
  uint64_t v4 = MEMORY[0x263F010E0];
  uint64_t v5 = *(void *)(MEMORY[0x263F010E0] + 16);
  *unint64_t v3 = *MEMORY[0x263F010E0];
  v3[1] = *(void *)(v4 + 8);
  v3[2] = v5;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC13HomeDataModel30CameraClipAssetPlaybackManager_isSeekInProgress) = 0;
  *(void *)(v0 + 56) = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFA7F0]), sel_init);
  return v0;
}

uint64_t sub_251ABAA48()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  CMTimeValue v5 = sub_251F360B0();
  CMTimeScale v7 = v6;
  CMTimeEpoch v9 = v8;
  unint64_t v10 = HIDWORD(v6);
  id v11 = objc_msgSend(*(id *)(v0 + 56), sel_currentItem);
  if (v11)
  {
    uint64_t v12 = v11;
    objc_msgSend(v11, sel_duration);

    sub_251F360C0();
    double v14 = v13;
    if ((~*(void *)&v13 & 0x7FF0000000000000) != 0 || (*(void *)&v13 & 0xFFFFFFFFFFFFFLL) == 0)
    {
      sub_251F360C0();
      if (v15 < 0.0 || (sub_251F360C0(), v14 < v16))
      {
        if (qword_269B9C518 != -1) {
          swift_once();
        }
        uint64_t v17 = sub_251F350A0();
        __swift_project_value_buffer(v17, (uint64_t)qword_269BA53D0);
        id v18 = sub_251F35080();
        os_log_type_t v19 = sub_251F35FB0();
        if (os_log_type_enabled(v18, v19))
        {
          uint64_t v20 = swift_slowAlloc();
          *(_DWORD *)uint64_t v20 = 134218240;
          sub_251F360C0();
          time1.value = v21;
          uint64_t v28 = v4;
          sub_251F361D0();
          *(_WORD *)(v20 + 12) = 2048;
          *(double *)&time1.value = v14;
          uint64_t v4 = v28;
          sub_251F361D0();
          _os_log_impl(&dword_2519F3000, v18, v19, "Invalid seek time: %f for clip of duration %f", (uint8_t *)v20, 0x16u);
          MEMORY[0x2533AC760](v20, -1, -1);
        }
      }
    }
  }
  uint64_t v22 = v1 + OBJC_IVAR____TtC13HomeDataModel30CameraClipAssetPlaybackManager_chaseTime;
  CMTimeValue v23 = *(void *)(v1 + OBJC_IVAR____TtC13HomeDataModel30CameraClipAssetPlaybackManager_chaseTime);
  time2.epoch = *(void *)(v1 + OBJC_IVAR____TtC13HomeDataModel30CameraClipAssetPlaybackManager_chaseTime + 16);
  time1.value = v5;
  time1.timescale = v7;
  time1.flags = v10;
  time1.epoch = v9;
  time2.value = v23;
  *(void *)&time2.timescale = *(void *)(v1
                                          + OBJC_IVAR____TtC13HomeDataModel30CameraClipAssetPlaybackManager_chaseTime
                                          + 8);
  uint64_t result = CMTimeCompare(&time1, &time2);
  if (result)
  {
    *(void *)uint64_t v22 = v5;
    *(_DWORD *)(v22 + 8) = v7;
    *(_DWORD *)(v22 + 12) = v10;
    *(void *)(v22 + 16) = v9;
    if (*(unsigned char *)(v1 + OBJC_IVAR____TtC13HomeDataModel30CameraClipAssetPlaybackManager_isSeekInProgress) != 1)
    {
      uint64_t v25 = sub_251F35CD0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v4, 1, 1, v25);
      uint64_t v26 = (void *)swift_allocObject();
      void v26[2] = 0;
      v26[3] = 0;
      long long v26[4] = v1;
      swift_retain();
      sub_251ACBB48((uint64_t)v4, (uint64_t)&unk_269B9D868, (uint64_t)v26);
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_251ABAD98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return MEMORY[0x270FA2498](sub_251ABADB8, 0, 0);
}

uint64_t sub_251ABADB8()
{
  if (objc_msgSend(*(id *)(v0[2] + 56), sel_status) == (id)1)
  {
    uint64_t v1 = (void *)swift_task_alloc();
    v0[3] = v1;
    void *v1 = v0;
    v1[1] = sub_251ABAEB0;
    v1[30] = v0[2];
    return MEMORY[0x270FA2498](sub_251ABAFC4, 0, 0);
  }
  else
  {
    uint64_t v2 = (uint64_t (*)(void))v0[1];
    return v2();
  }
}

uint64_t sub_251ABAEB0()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_251ABAFA4()
{
  *(void *)(v1 + 240) = v0;
  return MEMORY[0x270FA2498](sub_251ABAFC4, 0, 0);
}

uint64_t sub_251ABAFC4()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0;
  uint64_t v3 = v0 + 16;
  uint64_t v4 = v0 + 80;
  uint64_t v5 = v0 + 304;
  uint64_t v6 = *(void *)(v0 + 240);
  uint64_t v7 = OBJC_IVAR____TtC13HomeDataModel30CameraClipAssetPlaybackManager_isSeekInProgress;
  *(void *)(v0 + 248) = OBJC_IVAR____TtC13HomeDataModel30CameraClipAssetPlaybackManager_isSeekInProgress;
  *(unsigned char *)(v6 + v7) = 1;
  uint64_t v8 = OBJC_IVAR____TtC13HomeDataModel30CameraClipAssetPlaybackManager_chaseTime;
  *(void *)(v0 + 256) = OBJC_IVAR____TtC13HomeDataModel30CameraClipAssetPlaybackManager_chaseTime;
  CMTimeEpoch v9 = (uint64_t *)(v6 + v8);
  uint64_t v22 = *v9;
  *(void *)(v0 + 264) = *v9;
  int v10 = *((_DWORD *)v9 + 2);
  *(_DWORD *)(v0 + 296) = v10;
  int v11 = *((_DWORD *)v9 + 3);
  *(_DWORD *)(v0 + 300) = v11;
  uint64_t v12 = v9[2];
  *(void *)(v0 + 272) = v12;
  double v13 = *(void **)(v6 + 56);
  *(void *)(v0 + 280) = v13;
  uint64_t v14 = *MEMORY[0x263F010E0];
  int v16 = *(_DWORD *)(MEMORY[0x263F010E0] + 8);
  int v15 = *(_DWORD *)(MEMORY[0x263F010E0] + 12);
  uint64_t v17 = *(void *)(MEMORY[0x263F010E0] + 16);
  uint64_t v21 = v3;
  *(void *)(v1 + 16) = v2;
  *(void *)(v1 + 56) = v5;
  *(void *)(v1 + 24) = sub_251ABB174;
  uint64_t v18 = swift_continuation_init();
  *(void *)(v1 + 80) = MEMORY[0x263EF8330];
  *(void *)(v1 + 88) = 0x40000000;
  *(void *)(v1 + 96) = sub_251ABB4A0;
  *(void *)(v1 + 104) = &block_descriptor_43;
  *(void *)(v1 + 112) = v18;
  id v19 = v13;
  *(void *)(v1 + 120) = v14;
  v1 += 120;
  *(void *)(v1 + 24) = v22;
  *(_DWORD *)(v1 + 32) = v10;
  *(_DWORD *)(v1 + 36) = v11;
  *(void *)(v1 + 40) = v12;
  *(_DWORD *)(v1 + 8) = v16;
  *(_DWORD *)(v1 + 12) = v15;
  *(void *)(v1 + 16) = v17;
  *(void *)(v1 + 72) = v14;
  *(_DWORD *)(v1 + 80) = v16;
  *(_DWORD *)(v1 + 84) = v15;
  *(void *)(v1 + 88) = v17;
  objc_msgSend(v19, sel_seekToTime_toleranceBefore_toleranceAfter_completionHandler_, v1 + 24, v1, v1 + 72, v4);
  return MEMORY[0x270FA23F0](v21);
}

uint64_t sub_251ABB174()
{
  return MEMORY[0x270FA2498](sub_251ABB254, 0, 0);
}

uint64_t sub_251ABB254()
{
  uint64_t v1 = *(void *)(v0 + 272);
  uint64_t v2 = *(void *)(v0 + 264);
  uint64_t v3 = (uint64_t *)(*(void *)(v0 + 240) + *(void *)(v0 + 256));
  uint64_t v4 = *(void *)(v0 + 296);

  uint64_t v5 = *v3;
  uint64_t v6 = v3[2];
  uint64_t v7 = v3[1];
  *(void *)(v0 + 216) = v2;
  *(void *)(v0 + 224) = v4;
  *(void *)(v0 + 232) = v1;
  *(void *)(v0 + 168) = v5;
  *(void *)(v0 + 176) = v7;
  *(void *)(v0 + 184) = v6;
  if (CMTimeCompare((CMTime *)(v0 + 216), (CMTime *)(v0 + 168)))
  {
    if (objc_msgSend(*(id *)(*(void *)(v0 + 240) + 56), sel_status) == (id)1)
    {
      uint64_t v8 = (void *)swift_task_alloc();
      *(void *)(v0 + 288) = v8;
      *uint64_t v8 = v0;
      v8[1] = sub_251ABB3AC;
      v8[30] = *(void *)(v0 + 240);
      return MEMORY[0x270FA2498](sub_251ABAFC4, 0, 0);
    }
  }
  else
  {
    *(unsigned char *)(*(void *)(v0 + 240) + *(void *)(v0 + 248)) = 0;
  }
  CMTimeEpoch v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_251ABB3AC()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_251ABB4A0(uint64_t a1, char a2)
{
  **(unsigned char **)(*(void *)(*(void *)(a1 + 32) + 64) + 40) = a2;
  return MEMORY[0x270FA2400]();
}

uint64_t sub_251ABB4C4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_251F360A0();
  unsigned int v4 = v3;
  uint64_t v6 = v5;
  unint64_t v7 = HIDWORD(v3);
  uint64_t v8 = *(void **)(v0 + 56);
  sub_251ABBC80();
  id v9 = v8;
  int v10 = (void *)sub_251F36030();
  uint64_t v11 = swift_allocObject();
  swift_weakInit();
  uint64_t v20 = sub_251ABBCF8;
  uint64_t v21 = v11;
  uint64_t aBlock = MEMORY[0x263EF8330];
  unint64_t v17 = 1107296256;
  uint64_t v18 = sub_251ABB88C;
  id v19 = &block_descriptor_22;
  uint64_t v12 = _Block_copy(&aBlock);
  swift_release();
  uint64_t aBlock = v2;
  unint64_t v17 = __PAIR64__(v7, v4);
  uint64_t v18 = v6;
  id v13 = objc_msgSend(v9, sel_addPeriodicTimeObserverForInterval_queue_usingBlock_, &aBlock, v10, v12);
  _Block_release(v12);

  sub_251F36240();
  swift_unknownObjectRelease();
  sub_251ABBD00((uint64_t)&aBlock, (uint64_t)v15);
  swift_beginAccess();
  sub_251ABBC18((uint64_t)v15, v1 + 64);
  return swift_endAccess();
}

uint64_t sub_251ABB65C()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v4 = result;
    id v5 = objc_msgSend(*(id *)(result + 56), sel_currentItem);
    if (v5)
    {
      uint64_t v6 = v5;
      objc_msgSend(v5, sel_duration);

      sub_251F360C0();
      if (((~*(void *)&v7 & 0x7FF0000000000000) != 0 || (*(void *)&v7 & 0xFFFFFFFFFFFFFLL) == 0) && v7 > 0.0)
      {
        *(double *)(v4 + 16) = v7;
        sub_251F360C0();
        uint64_t v9 = v8;
        *(void *)(v4 + 24) = v8;
        uint64_t v10 = MEMORY[0x2533AC870](v4 + 40);
        if (v10)
        {
          uint64_t v11 = v10;
          uint64_t v12 = *(void *)(v4 + 16);
          uint64_t v13 = sub_251F35CD0();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v2, 1, 1, v13);
          sub_251F35C80();
          swift_retain();
          uint64_t v14 = sub_251F35C70();
          int v15 = (void *)swift_allocObject();
          uint64_t v16 = MEMORY[0x263F8F500];
          v15[2] = v14;
          v15[3] = v16;
          long long v15[4] = v11;
          v15[5] = v9;
          v15[6] = v12;
          sub_251ACBB48((uint64_t)v2, (uint64_t)&unk_269B9D858, (uint64_t)v15);
          swift_release();
          swift_release();
        }
      }
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_251ABB88C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  uint64_t v3 = a2[1];
  uint64_t v4 = a2[2];
  id v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  v5(v2, v3, v4);
  return swift_release();
}

uint64_t sub_251ABB8F8()
{
  swift_beginAccess();
  sub_251AA82A4(v0 + 64, (uint64_t)&v4);
  if (!*((void *)&v5 + 1)) {
    return sub_251A1B064((uint64_t)&v4, &qword_26B21E190);
  }
  sub_251A0D578(&v4, &v6);
  uint64_t v1 = *(void **)(v0 + 56);
  __swift_project_boxed_opaque_existential_1(&v6, v7);
  id v2 = v1;
  objc_msgSend(v2, sel_removeTimeObserver_, sub_251F36B00());

  swift_unknownObjectRelease();
  long long v4 = 0u;
  long long v5 = 0u;
  swift_beginAccess();
  sub_251ABBC18((uint64_t)&v4, v0 + 64);
  swift_endAccess();
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)&v6);
}

uint64_t sub_251ABB9F8()
{
  sub_251ABBF3C(v0 + 40);

  sub_251A1B064(v0 + 64, &qword_26B21E190);
  sub_251A1B064(v0 + OBJC_IVAR____TtC13HomeDataModel30CameraClipAssetPlaybackManager_currentElement, &qword_269B9C908);
  return swift_deallocClassInstance();
}

uint64_t sub_251ABBA8C()
{
  return type metadata accessor for CameraClipAssetPlaybackManager();
}

uint64_t type metadata accessor for CameraClipAssetPlaybackManager()
{
  uint64_t result = qword_269B9D830;
  if (!qword_269B9D830) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_251ABBAE0()
{
  sub_251ABBBC0();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_251ABBBC0()
{
  if (!qword_269B9D848)
  {
    type metadata accessor for ScrubberElement(255);
    unint64_t v0 = sub_251F36190();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269B9D848);
    }
  }
}

uint64_t sub_251ABBC18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E190);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_251ABBC80()
{
  unint64_t result = qword_269B9D850;
  if (!qword_269B9D850)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_269B9D850);
  }
  return result;
}

uint64_t sub_251ABBCC0()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_251ABBCF8()
{
  return sub_251ABB65C();
}

uint64_t sub_251ABBD00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E190);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_251ABBD68()
{
  return objectdestroy_40Tm(56);
}

uint64_t sub_251ABBD70(uint64_t a1)
{
  uint64_t v4 = *((void *)v1 + 2);
  uint64_t v5 = *((void *)v1 + 3);
  uint64_t v6 = *((void *)v1 + 4);
  double v7 = v1[5];
  double v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_251AB3A34;
  return sub_251EC72C4(v7, v8, a1, v4, v5, v6);
}

uint64_t sub_251ABBE40()
{
  return objectdestroy_40Tm(40);
}

uint64_t objectdestroy_40Tm(uint64_t a1)
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v1, a1, 7);
}

uint64_t sub_251ABBE94()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_251AB3DD4;
  v3[2] = v2;
  return MEMORY[0x270FA2498](sub_251ABADB8, 0, 0);
}

uint64_t sub_251ABBF3C(uint64_t a1)
{
  return a1;
}

uint64_t StaticMatterDevice.init(device:accessory:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CB38);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v126 = (uint64_t)&v100 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = type metadata accessor for StaticEndpoint();
  uint64_t v109 = *(void *)(v121 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v121);
  uint64_t v12 = (char *)&v100 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v107 = (char *)&v100 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v116 = (uint64_t)&v100 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v115 = (uint64_t)&v100 - v17;
  uint64_t v18 = type metadata accessor for MatterTileMetadata();
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v100 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v124 = objc_msgSend(a3, sel_home);
  if (v124)
  {
    unint64_t v127 = a2;
    uint64_t v104 = a4;
    id v21 = objc_msgSend(a3, sel_room);
    if (!v21) {
      id v21 = objc_msgSend(v124, sel_roomForEntireHome);
    }
    uint64_t v22 = sub_251F34DA0();
    uint64_t v102 = &v100;
    uint64_t v123 = v22;
    uint64_t v108 = *(void *)(v22 - 8);
    MEMORY[0x270FA5388](v22);
    uint64_t v114 = v23;
    id v24 = (char *)&v100 - ((unint64_t)(v23 + 15) & 0xFFFFFFFFFFFFFFF0);
    id v101 = v21;
    id v25 = objc_msgSend(v21, sel_uniqueIdentifier);
    v122 = v24;
    sub_251F34D80();

    id v26 = a3;
    char v27 = sub_251AC52DC();
    if (v27 == 2) {
      char v28 = 2;
    }
    else {
      char v28 = v27 & 1;
    }
    char v29 = HMAccessory.isFavorite.getter() & 1;
    char v30 = HMAccessory.shouldShowInDashboard.getter() & 1;
    char v31 = HMAccessory.contributesToHomeStatus.getter() & 1;
    HMAccessory.dateAdded.getter((uint64_t)&v20[*(int *)(v18 + 44)]);

    *((_OWORD *)v20 + 1) = 0u;
    *((_OWORD *)v20 + 2) = 0u;
    *(_OWORD *)uint64_t v20 = 0u;
    v20[48] = v28;
    v20[49] = v29;
    v20[50] = v30;
    v20[51] = v31;
    id v106 = v26;
    id v32 = objc_msgSend(v26, sel_configuredName);
    uint64_t v103 = v20;
    if (v32)
    {
      uint64_t v33 = v32;
      uint64_t v34 = sub_251F356F0();
      unint64_t v119 = v35;
      uint64_t v120 = v34;

      uint64_t v36 = v127;
    }
    else
    {
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v36 = v127;
      uint64_t v41 = (*(uint64_t (**)(void, uint64_t, unint64_t))(v127 + 32))(0, ObjectType, v127);
      unint64_t v119 = v42;
      uint64_t v120 = v41;
      if (!v42)
      {
        id v43 = objc_msgSend(v106, sel_name);
        uint64_t v44 = sub_251F356F0();
        unint64_t v119 = v45;
        uint64_t v120 = v44;
      }
    }
    uint64_t v117 = swift_getObjectType();
    uint64_t v118 = a1;
    uint64_t v46 = MatterDevice.allEndpointIDs.getter(v117, v36);
    uint64_t v47 = *(void *)(v46 + 16);
    uint64_t v105 = v46;
    if (!v47)
    {
      uint64_t v49 = (char *)MEMORY[0x263F8EE80];
LABEL_34:
      swift_bridgeObjectRelease();
      uint64_t v130 = &type metadata for HomeKitFeatures;
      unint64_t v131 = sub_251A4DA94();
      LOBYTE(v128) = 4;
      char v74 = sub_251F34F60();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v128);
      uint64_t isUniquelyReferenced_nonNull_native = v109;
      uint64_t v47 = (uint64_t)v107;
      if ((v74 & 1) == 0)
      {
        if (qword_269B9C4C0 != -1) {
          goto LABEL_68;
        }
        goto LABEL_36;
      }
LABEL_39:
      uint64_t v128 = MEMORY[0x263F8EE88];
      unint64_t v75 = v49 + 64;
      uint64_t v76 = 1 << v49[32];
      uint64_t v77 = -1;
      if (v76 < 64) {
        uint64_t v77 = ~(-1 << v76);
      }
      unint64_t v78 = v77 & *((void *)v49 + 8);
      int64_t v79 = (unint64_t)(v76 + 63) >> 6;
      swift_bridgeObjectRetain_n();
      uint64_t v36 = 0;
      while (1)
      {
        if (v78)
        {
          unint64_t v80 = __clz(__rbit64(v78));
          v78 &= v78 - 1;
          unint64_t v81 = v80 | (v36 << 6);
        }
        else
        {
          int64_t v83 = v36 + 1;
          if (__OFADD__(v36, 1))
          {
            __break(1u);
            goto LABEL_65;
          }
          if (v83 >= v79) {
            goto LABEL_63;
          }
          unint64_t v84 = *(void *)&v75[8 * v83];
          ++v36;
          if (!v84)
          {
            uint64_t v36 = v83 + 1;
            if (v83 + 1 >= v79) {
              goto LABEL_63;
            }
            unint64_t v84 = *(void *)&v75[8 * v36];
            if (!v84)
            {
              uint64_t v36 = v83 + 2;
              if (v83 + 2 >= v79) {
                goto LABEL_63;
              }
              unint64_t v84 = *(void *)&v75[8 * v36];
              if (!v84)
              {
                uint64_t v36 = v83 + 3;
                if (v83 + 3 >= v79) {
                  goto LABEL_63;
                }
                unint64_t v84 = *(void *)&v75[8 * v36];
                if (!v84)
                {
                  uint64_t v36 = v83 + 4;
                  if (v83 + 4 >= v79) {
                    goto LABEL_63;
                  }
                  unint64_t v84 = *(void *)&v75[8 * v36];
                  if (!v84)
                  {
                    int64_t v85 = v83 + 5;
                    if (v85 >= v79)
                    {
LABEL_63:
                      swift_release();
                      swift_bridgeObjectRelease();
                      uint64_t v126 = v128;
                      uint64_t v86 = (*(uint64_t (**)(uint64_t))(v127 + 16))(v117);
                      id v87 = objc_msgSend(v124, sel_uniqueIdentifier);
                      uint64_t v88 = (int *)type metadata accessor for StaticMatterDevice();
                      uint64_t v89 = v104;
                      sub_251F34D80();

                      uint64_t v90 = v108;
                      (*(void (**)(uint64_t, char *, uint64_t))(v108 + 16))(v89 + v88[10], v122, v123);
                      id v91 = v101;
                      id v92 = objc_msgSend(v101, sel_name);
                      uint64_t v93 = sub_251F356F0();
                      uint64_t v95 = v94;

                      uint64_t v96 = (uint64_t)v103;
                      sub_251AC7BB4((uint64_t)v103, v89 + v88[13], (uint64_t (*)(void))type metadata accessor for MatterTileMetadata);
                      swift_bridgeObjectRetain();
                      static UUID.matterObjectIdentifier(deviceID:endpointID:)(v86, 0, v89);
                      swift_unknownObjectRelease();

                      *(void *)(v89 + v88[5]) = v86;
                      *(void *)(v89 + v88[7]) = 1;
                      *(void *)(v89 + v88[8]) = v126;
                      BOOL v97 = (uint64_t *)(v89 + v88[11]);
                      *BOOL v97 = v93;
                      v97[1] = v95;
                      *(void *)(v89 + v88[12]) = v49;
                      uint64_t v98 = (void *)(v89 + v88[6]);
                      unint64_t v99 = v119;
                      *uint64_t v98 = v120;
                      v98[1] = v99;
                      sub_251AC7ACC(v96, (uint64_t (*)(void))type metadata accessor for MatterTileMetadata);
                      (*(void (**)(char *, uint64_t))(v90 + 8))(v122, v123);
                      swift_bridgeObjectRelease();
                      return (*(uint64_t (**)(uint64_t, void, uint64_t, int *))(*((void *)v88 - 1) + 56))(v89, 0, 1, v88);
                    }
                    unint64_t v84 = *(void *)&v75[8 * v85];
                    if (!v84)
                    {
                      while (1)
                      {
                        uint64_t v36 = v85 + 1;
                        if (__OFADD__(v85, 1)) {
                          goto LABEL_67;
                        }
                        if (v36 >= v79) {
                          goto LABEL_63;
                        }
                        unint64_t v84 = *(void *)&v75[8 * v36];
                        ++v85;
                        if (v84) {
                          goto LABEL_62;
                        }
                      }
                    }
                    uint64_t v36 = v85;
                  }
                }
              }
            }
          }
LABEL_62:
          unint64_t v78 = (v84 - 1) & v84;
          unint64_t v81 = __clz(__rbit64(v84)) + (v36 << 6);
        }
        sub_251AC7BB4(*((void *)v49 + 7) + *(void *)(isUniquelyReferenced_nonNull_native + 72) * v81, v47, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
        sub_251AC7A64(v47, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
        uint64_t v82 = swift_bridgeObjectRetain();
        sub_251AC105C(v82, sub_251A62F8C);
        sub_251AC7ACC((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
      }
    }
    uint64_t v48 = (unsigned __int16 *)(v46 + 32);
    uint64_t v113 = v36 + 16;
    unint64_t v112 = (void (**)(char *, char *, uint64_t))(v108 + 16);
    uint64_t v111 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v109 + 48);
    uint64_t v49 = (char *)MEMORY[0x263F8EE80];
    unint64_t v110 = v12;
    while (1)
    {
      int v51 = *v48++;
      unsigned __int16 v50 = v51;
      if (!v51) {
        goto LABEL_18;
      }
      uint64_t v125 = v48;
      uint64_t v12 = v49;
      unint64_t v52 = *(uint64_t (**)(uint64_t, unint64_t))(v36 + 16);
      uint64_t v53 = v118;
      uint64_t v128 = v52(v117, v127);
      unsigned __int16 v129 = v50;
      swift_unknownObjectRetain();
      id v54 = objc_msgSend(v124, sel_uniqueIdentifier);
      uint64_t v49 = v114;
      MEMORY[0x270FA5388](v54);
      sub_251F34D80();

      MEMORY[0x270FA5388](v55);
      uint64_t v56 = (char *)&v100 - ((unint64_t)(v49 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*v112)(v56, v122, v123);
      unint64_t v57 = v119;
      swift_bridgeObjectRetain();
      uint64_t v58 = v53;
      uint64_t v36 = v127;
      StaticEndpoint.init(device:path:homeId:roomId:accessoryName:)(v58, v127, (uint64_t)&v128, (uint64_t)v56, (uint64_t)v56, v120, v57, v126);
      uint64_t v59 = v126;
      if ((*v111)(v126, 1, v121) != 1) {
        break;
      }
      sub_251A1B064(v59, &qword_269B9CB38);
      uint64_t v49 = v12;
      uint64_t v12 = v110;
LABEL_17:
      uint64_t v48 = v125;
LABEL_18:
      if (!--v47) {
        goto LABEL_34;
      }
    }
    uint64_t v60 = v59;
    uint64_t v61 = v115;
    sub_251AC7A64(v60, v115, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
    sub_251AC7BB4(v61, v116, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v128 = (uint64_t)v12;
    unint64_t v64 = sub_2519FE5CC(v50);
    uint64_t v65 = *((void *)v12 + 2);
    BOOL v66 = (v63 & 1) == 0;
    uint64_t v67 = v65 + v66;
    if (__OFADD__(v65, v66))
    {
LABEL_65:
      __break(1u);
LABEL_66:
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      swift_once();
LABEL_36:
      if ((byte_269BA38B2 & 1) == 0 && !*((void *)v49 + 2))
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 24))(1, v117, v36);
        swift_unknownObjectRelease();
      }
      goto LABEL_39;
    }
    char v68 = v63;
    if (*((void *)v12 + 3) < v67)
    {
      sub_251A02A24(v67, isUniquelyReferenced_nonNull_native);
      unint64_t v69 = sub_2519FE5CC(v50);
      uint64_t v12 = v110;
      if ((v68 & 1) != (v70 & 1))
      {
        uint64_t result = sub_251F36BA0();
        __break(1u);
        return result;
      }
      unint64_t v64 = v69;
      uint64_t v49 = (char *)v128;
      if ((v68 & 1) == 0) {
        goto LABEL_30;
      }
LABEL_28:
      sub_251A4EB28(v116, *((void *)v49 + 7) + *(void *)(v109 + 72) * v64);
LABEL_32:
      swift_bridgeObjectRelease();
      sub_251AC7ACC(v115, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
      goto LABEL_17;
    }
    uint64_t v12 = v110;
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v49 = (char *)v128;
      if (v63) {
        goto LABEL_28;
      }
    }
    else
    {
      sub_251A12BF8();
      uint64_t v49 = (char *)v128;
      if (v68) {
        goto LABEL_28;
      }
    }
LABEL_30:
    *(void *)&v49[8 * (v64 >> 6) + 64] |= 1 << v64;
    *(_WORD *)(*((void *)v49 + 6) + 2 * v64) = v50;
    sub_251AC7A64(v116, *((void *)v49 + 7) + *(void *)(v109 + 72) * v64, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
    uint64_t v71 = *((void *)v49 + 2);
    BOOL v72 = __OFADD__(v71, 1);
    uint64_t v73 = v71 + 1;
    if (v72) {
      goto LABEL_66;
    }
    *((void *)v49 + 2) = v73;
    goto LABEL_32;
  }
  swift_unknownObjectRelease();

  uint64_t v37 = type metadata accessor for StaticMatterDevice();
  id v38 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56);
  return v38(a4, 1, 1, v37);
}

uint64_t StaticMatterDevice.init(device:accessory:limitedSnapshotController:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v110 = a4;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CB38);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v94 = (uint64_t)&v86 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v102 = (uint64_t)&v86 - v12;
  uint64_t v13 = type metadata accessor for StaticEndpoint();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v86 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v113 = (uint64_t)&v86 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v93 = (uint64_t)&v86 - v20;
  uint64_t v21 = type metadata accessor for MatterTileMetadata();
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v86 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v111 = objc_msgSend(a3, sel_home);
  if (!v111)
  {
    swift_unknownObjectRelease();

    uint64_t v54 = type metadata accessor for StaticMatterDevice();
    uint64_t v55 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56);
    return v55(a5, 1, 1, v54);
  }
  uint64_t v109 = v17;
  id v24 = objc_msgSend(a3, sel_room);
  if (!v24) {
    id v24 = objc_msgSend(v111, sel_roomForEntireHome);
  }
  uint64_t v25 = sub_251F34DA0();
  uint64_t v88 = &v86;
  uint64_t v106 = v25;
  uint64_t v91 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v101 = v26;
  char v27 = (char *)&v86 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v87 = v24;
  id v28 = objc_msgSend(v24, sel_uniqueIdentifier);
  uint64_t v105 = v27;
  sub_251F34D80();

  char v29 = &v23[*(int *)(v21 + 44)];
  uint64_t v30 = sub_251F34D20();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v29, 1, 1, v30);
  *((_OWORD *)v23 + 1) = 0u;
  *((_OWORD *)v23 + 2) = 0u;
  *(_OWORD *)uint64_t v23 = 0u;
  *((_DWORD *)v23 + 12) = 33686018;
  id v31 = objc_msgSend(a3, sel_configuredName);
  if (!v31) {
    id v31 = objc_msgSend(a3, sel_name);
  }
  uint64_t v89 = v23;
  uint64_t v103 = sub_251F356F0();
  unint64_t v104 = v32;

  uint64_t v116 = MEMORY[0x263F8EE80];
  uint64_t v108 = a1;
  uint64_t v33 = sub_251A2B884(a1, a2);
  uint64_t v34 = *(void *)(v33 + 16);
  uint64_t v107 = a2;
  uint64_t v35 = (uint64_t)v109;
  uint64_t v112 = v34;
  id v90 = a3;
  if (v34)
  {
    uint64_t v36 = a2;
    uint64_t v86 = a5;
    uint64_t v37 = 0;
    uint64_t v97 = v36 + 16;
    uint64_t v96 = (void (**)(uint64_t *, char *, uint64_t))(v91 + 16);
    uint64_t v95 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    id v92 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56);
    uint64_t v99 = v13;
    uint64_t v100 = v14;
    uint64_t v98 = v33;
    do
    {
      __int16 v38 = *(_WORD *)(v33 + 2 * v37 + 32);
      if (v38)
      {
        uint64_t v39 = v108;
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v41 = v107;
        uint64_t v114 = (*(uint64_t (**)(uint64_t, uint64_t))(v107 + 16))(ObjectType, v107);
        __int16 v115 = v38;
        swift_unknownObjectRetain();
        id v42 = objc_msgSend(v111, sel_uniqueIdentifier);
        uint64_t v43 = v101;
        MEMORY[0x270FA5388](v42);
        sub_251F34D80();

        MEMORY[0x270FA5388](v44);
        unint64_t v45 = (uint64_t *)((char *)&v86 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0));
        (*v96)(v45, v105, v106);
        unint64_t v46 = v104;
        swift_bridgeObjectRetain();
        uint64_t v47 = v39;
        uint64_t v48 = v99;
        uint64_t v49 = v41;
        uint64_t v50 = v102;
        StaticEndpoint.init(device:path:homeId:roomId:accessoryName:limitedSnapshotController:)(v47, v49, (uint64_t)&v114, v45, v45, v103, v46, v102);
        if ((*v95)(v50, 1, v48) == 1)
        {
          sub_251A1B064(v50, &qword_269B9CB38);
        }
        else
        {
          uint64_t v51 = v93;
          sub_251AC7A64(v50, v93, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
          uint64_t v52 = v94;
          sub_251AC7BB4(v51, v94, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
          (*v92)(v52, 0, 1, v48);
          sub_2519F7E38(v52, v38);
          sub_251AC7ACC(v51, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
        }
        uint64_t v14 = v100;
        uint64_t v35 = (uint64_t)v109;
        uint64_t v33 = v98;
      }
      ++v37;
    }
    while (v112 != v37);
    swift_bridgeObjectRelease();
    uint64_t v53 = v116;
    a5 = v86;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v53 = MEMORY[0x263F8EE80];
  }
  uint64_t v114 = MEMORY[0x263F8EE88];
  uint64_t v57 = v53 + 64;
  uint64_t v58 = 1 << *(unsigned char *)(v53 + 32);
  uint64_t v59 = -1;
  if (v58 < 64) {
    uint64_t v59 = ~(-1 << v58);
  }
  unint64_t v60 = v59 & *(void *)(v53 + 64);
  int64_t v61 = (unint64_t)(v58 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain_n();
  int64_t v62 = 0;
  while (1)
  {
    if (v60)
    {
      unint64_t v63 = __clz(__rbit64(v60));
      v60 &= v60 - 1;
      unint64_t v64 = v63 | (v62 << 6);
      goto LABEL_23;
    }
    int64_t v67 = v62 + 1;
    if (__OFADD__(v62, 1))
    {
      __break(1u);
      goto LABEL_45;
    }
    if (v67 >= v61) {
      goto LABEL_43;
    }
    unint64_t v68 = *(void *)(v57 + 8 * v67);
    ++v62;
    if (!v68)
    {
      int64_t v62 = v67 + 1;
      if (v67 + 1 >= v61) {
        goto LABEL_43;
      }
      unint64_t v68 = *(void *)(v57 + 8 * v62);
      if (!v68)
      {
        int64_t v62 = v67 + 2;
        if (v67 + 2 >= v61) {
          goto LABEL_43;
        }
        unint64_t v68 = *(void *)(v57 + 8 * v62);
        if (!v68)
        {
          int64_t v62 = v67 + 3;
          if (v67 + 3 >= v61) {
            goto LABEL_43;
          }
          unint64_t v68 = *(void *)(v57 + 8 * v62);
          if (!v68)
          {
            int64_t v62 = v67 + 4;
            if (v67 + 4 >= v61) {
              goto LABEL_43;
            }
            unint64_t v68 = *(void *)(v57 + 8 * v62);
            if (!v68) {
              break;
            }
          }
        }
      }
    }
LABEL_42:
    unint64_t v60 = (v68 - 1) & v68;
    unint64_t v64 = __clz(__rbit64(v68)) + (v62 << 6);
LABEL_23:
    uint64_t v65 = v113;
    sub_251AC7BB4(*(void *)(v53 + 56) + *(void *)(v14 + 72) * v64, v113, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
    sub_251AC7A64(v65, v35, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
    uint64_t v66 = swift_bridgeObjectRetain();
    sub_251AC105C(v66, sub_251A62F8C);
    uint64_t result = sub_251AC7ACC(v35, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
  }
  int64_t v69 = v67 + 5;
  if (v69 >= v61)
  {
LABEL_43:
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v113 = v114;
    uint64_t v70 = swift_getObjectType();
    uint64_t v71 = (*(uint64_t (**)(uint64_t))(v107 + 16))(v70);
    id v72 = objc_msgSend(v111, sel_uniqueIdentifier);
    uint64_t v73 = (int *)type metadata accessor for StaticMatterDevice();
    sub_251F34D80();

    uint64_t v74 = v91;
    uint64_t v76 = v105;
    uint64_t v75 = v106;
    (*(void (**)(uint64_t, char *, uint64_t))(v91 + 16))(a5 + v73[10], v105, v106);
    id v77 = v87;
    id v78 = objc_msgSend(v87, sel_name);
    uint64_t v112 = sub_251F356F0();
    uint64_t v110 = v79;

    uint64_t v80 = v116;
    uint64_t v81 = (uint64_t)v89;
    sub_251AC7BB4((uint64_t)v89, a5 + v73[13], (uint64_t (*)(void))type metadata accessor for MatterTileMetadata);
    swift_bridgeObjectRetain();
    static UUID.matterObjectIdentifier(deviceID:endpointID:)(v71, 0, a5);
    swift_unknownObjectRelease();

    *(void *)(a5 + v73[5]) = v71;
    *(void *)(a5 + v73[7]) = 1;
    *(void *)(a5 + v73[8]) = v113;
    uint64_t v82 = (uint64_t *)(a5 + v73[11]);
    uint64_t v83 = v110;
    *uint64_t v82 = v112;
    v82[1] = v83;
    *(void *)(a5 + v73[12]) = v80;
    unint64_t v84 = (void *)(a5 + v73[6]);
    unint64_t v85 = v104;
    *unint64_t v84 = v103;
    v84[1] = v85;
    sub_251AC7ACC(v81, (uint64_t (*)(void))type metadata accessor for MatterTileMetadata);
    (*(void (**)(char *, uint64_t))(v74 + 8))(v76, v75);
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, int *))(*((void *)v73 - 1) + 56))(a5, 0, 1, v73);
  }
  unint64_t v68 = *(void *)(v57 + 8 * v69);
  if (v68)
  {
    int64_t v62 = v69;
    goto LABEL_42;
  }
  while (1)
  {
    int64_t v62 = v69 + 1;
    if (__OFADD__(v69, 1)) {
      break;
    }
    if (v62 >= v61) {
      goto LABEL_43;
    }
    unint64_t v68 = *(void *)(v57 + 8 * v62);
    ++v69;
    if (v68) {
      goto LABEL_42;
    }
  }
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_251ABD6AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_251AC5764(a1);
  if (v6) {
    goto LABEL_9;
  }
  int v7 = v5;
  if (*(_DWORD *)(a1 + 36) != v5)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    return result;
  }
  uint64_t v8 = result;
  uint64_t v9 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D990);
  uint64_t v11 = v10;
  if (v8 == v9)
  {
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    return v12(a2, 1, 1, v10);
  }
  else
  {
    MEMORY[0x270FA5388](v10);
    uint64_t v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v15 = *(int *)(v11 + 48);
    uint64_t v20 = v16;
    uint64_t v17 = sub_251AF6CDC((uint64_t)v14, v8, v7, 0, a1);
    *(void *)&v14[v15] = v17;
    uint64_t v18 = sub_251F34DA0();
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 16))(a2, v14, v18);
    *(void *)(a2 + *(int *)(v11 + 48)) = v17;
    swift_bridgeObjectRetain();
    sub_251A1B064((uint64_t)v14, &qword_269B9D990);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v20 + 56))(a2, 0, 1, v11);
  }
}

uint64_t sub_251ABD888@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t result = sub_251A53EB8(a1);
  if (v6) {
    goto LABEL_8;
  }
  if (*(_DWORD *)(a1 + 36) != v5)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == 1 << *(unsigned char *)(a1 + 32))
  {
    char v7 = 27;
  }
  else
  {
    uint64_t result = sub_251A54058(result, v5, 0, a1, &v8);
    char v7 = v8;
  }
  *a2 = v7;
  return result;
}

uint64_t sub_251ABD904(uint64_t a1)
{
  return sub_251ABE168(a1, sub_251B72004, (uint64_t (*)(uint64_t, uint64_t, BOOL, uint64_t))sub_251A540B4);
}

uint64_t sub_251ABD930@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_251ABE02C(a1, (uint64_t (*)(void))type metadata accessor for StaticEndpoint, (uint64_t (*)(void))type metadata accessor for StaticEndpoint, (uint64_t (*)(void))type metadata accessor for StaticEndpoint, a2);
}

uint64_t sub_251ABD970@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_251ABD9B0(a1, (uint64_t (*)(void))sub_251A53EB8, (uint64_t (*)(void))type metadata accessor for StaticService, (void (*)(void))sub_251A5442C, a2);
}

uint64_t sub_251ABD9B0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t (*a3)(void)@<X2>, void (*a4)(void)@<X3>, uint64_t a5@<X8>)
{
  uint64_t result = a2();
  if (v11) {
    goto LABEL_10;
  }
  if (*(_DWORD *)(a1 + 36) != v10)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    return result;
  }
  if (result == 1 << *(unsigned char *)(a1 + 32))
  {
    uint64_t v12 = a3(0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a5;
    uint64_t v16 = 1;
  }
  else
  {
    a4();
    uint64_t v17 = a3(0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
    uint64_t v14 = v17;
    uint64_t v15 = a5;
    uint64_t v16 = 0;
  }
  return v13(v15, v16, 1, v14);
}

uint64_t sub_251ABDAB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_251ABE02C(a1, (uint64_t (*)(void))type metadata accessor for ActionEndpoint, (uint64_t (*)(void))type metadata accessor for ActionEndpoint, (uint64_t (*)(void))type metadata accessor for ActionEndpoint, a2);
}

uint64_t sub_251ABDAF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_251ABD9B0(a1, (uint64_t (*)(void))sub_251A53EB8, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent, (void (*)(void))sub_251A54458, a2);
}

uint64_t sub_251ABDB34(uint64_t a1)
{
  return sub_251ABE168(a1, sub_251B72004, (uint64_t (*)(uint64_t, uint64_t, BOOL, uint64_t))sub_251A54534);
}

uint64_t sub_251ABDB60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_251AC5764(a1);
  if (v6) {
    goto LABEL_9;
  }
  if (*(_DWORD *)(a1 + 36) != v5)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    return result;
  }
  if (result == 1 << *(unsigned char *)(a1 + 32))
  {
    *(unsigned char *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  else
  {
    char v7 = sub_251AF6EE0(v13, result, v5, 0, a1);
    uint64_t v8 = v13[0];
    uint64_t v9 = v13[1];
    uint64_t v10 = v13[2];
    *(void *)a2 = v7;
    *(void *)(a2 + 8) = v8;
    *(void *)(a2 + 16) = v9;
    *(void *)(a2 + 24) = v10;
    char v11 = v14;
    *(unsigned char *)(a2 + 32) = v14;
    uint64_t v12 = v7;
    sub_251A1A550(v8, v9, v10, v11);

    return sub_251A1A5A4(v8, v9, v10, v11);
  }
  return result;
}

uint64_t sub_251ABDC6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_251AC5764(a1);
  if (v6) {
    goto LABEL_9;
  }
  if (*(_DWORD *)(a1 + 36) != v5)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    return result;
  }
  if (result == 1 << *(unsigned char *)(a1 + 32))
  {
    *(void *)a2 = 0;
    *(void *)(a2 + 8) = 0;
    *(unsigned char *)(a2 + 24) = 0;
    *(void *)(a2 + 16) = 0;
  }
  else
  {
    char v7 = sub_251AF6E3C(v12, result, v5, 0, a1);
    uint64_t v8 = v12[0];
    unint64_t v9 = v12[1];
    *(void *)a2 = v7;
    *(void *)(a2 + 8) = v8;
    *(void *)(a2 + 16) = v9;
    char v10 = v13;
    *(unsigned char *)(a2 + 24) = v13;
    char v11 = v7;
    sub_251A1A870(v8, v9, v10);

    return sub_251A1AD70(v8, v9, v10);
  }
  return result;
}

uint64_t sub_251ABDD60(uint64_t a1)
{
  uint64_t result = sub_251A82938(a1);
  if (v4) {
    goto LABEL_8;
  }
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == 1 << *(unsigned char *)(a1 + 32)) {
    return 0;
  }
  int v5 = (void *)sub_251AC6004(result, v3, 0, a1);
  id v6 = v5;
  return (uint64_t)v5;
}

uint64_t sub_251ABDDD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_251AC5764(a1);
  if (v6) {
    goto LABEL_9;
  }
  int v7 = v5;
  if (*(_DWORD *)(a1 + 36) != v5)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    return result;
  }
  uint64_t v8 = result;
  uint64_t v9 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D988);
  uint64_t v11 = v10;
  if (v8 == v9)
  {
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    return v12(a2, 1, 1, v10);
  }
  else
  {
    MEMORY[0x270FA5388](v10);
    char v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v15 = (uint64_t *)&v14[*(int *)(v11 + 48)];
    uint64_t v23 = v16;
    uint64_t v17 = sub_251AF6F94((uint64_t)v14, v8, v7, 0, a1);
    uint64_t v19 = v18;
    *uint64_t v15 = v17;
    v15[1] = v18;
    uint64_t v20 = sub_251F34DA0();
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v20 - 8) + 16))(a2, v14, v20);
    uint64_t v21 = (uint64_t *)(a2 + *(int *)(v11 + 48));
    *uint64_t v21 = v17;
    v21[1] = v19;
    swift_bridgeObjectRetain();
    sub_251A1B064((uint64_t)v14, &qword_269B9D988);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v23 + 56))(a2, 0, 1, v11);
  }
}

uint64_t sub_251ABDFB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_251ABD9B0(a1, (uint64_t (*)(void))sub_251A53EB8, MEMORY[0x270FA9640], (void (*)(void))sub_251A54338, a2);
}

uint64_t sub_251ABDFEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_251ABE02C(a1, (uint64_t (*)(void))type metadata accessor for StaticService, (uint64_t (*)(void))type metadata accessor for StaticService, (uint64_t (*)(void))type metadata accessor for StaticService, a2);
}

uint64_t sub_251ABE02C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t (*a4)(void)@<X3>, uint64_t a5@<X8>)
{
  uint64_t result = sub_251AC5768(a1);
  if (v12) {
    goto LABEL_10;
  }
  if (*(_DWORD *)(a1 + 36) != v11)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    return result;
  }
  if (result == 1 << *(unsigned char *)(a1 + 32))
  {
    uint64_t v13 = a2(0);
    char v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
    uint64_t v15 = v13;
    uint64_t v16 = a5;
    uint64_t v17 = 1;
  }
  else
  {
    sub_251AC581C(result, v11, 0, a1, a3, a4, a5);
    uint64_t v18 = a2(0);
    char v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v15 = v18;
    uint64_t v16 = a5;
    uint64_t v17 = 0;
  }
  return v14(v16, v17, 1, v15);
}

uint64_t sub_251ABE13C(uint64_t a1)
{
  return sub_251ABE168(a1, (uint64_t (*)(uint64_t))sub_251B72004, (uint64_t (*)(uint64_t, uint64_t, BOOL, uint64_t))sub_251A54548);
}

uint64_t sub_251ABE168(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(uint64_t, uint64_t, BOOL, uint64_t))
{
  unint64_t v5 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v6 = sub_251F362A0();
    uint64_t v8 = v7;
    uint64_t v9 = sub_251F36360();
    char v11 = MEMORY[0x2533AB210](v6, v8, v9, v10);
    swift_bridgeObjectRelease();
    if (v11)
    {
LABEL_3:
      sub_251A4ECE4(v6, v8, v5 != 0);
      return 0;
    }
LABEL_7:
    uint64_t v12 = a3(v6, v8, v5 != 0, a1);
    sub_251A4ECE4(v6, v8, v5 != 0);
    return v12;
  }
  uint64_t result = a2(a1);
  if ((v15 & 1) == 0)
  {
    uint64_t v8 = v14;
    if (*(_DWORD *)(a1 + 36) == v14)
    {
      uint64_t v6 = result;
      if (result == 1 << *(unsigned char *)(a1 + 32)) {
        goto LABEL_3;
      }
      goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t StaticMatterDevice.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_251F34DA0();
  char v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t StaticMatterDevice.nodeId.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for StaticMatterDevice() + 20));
}

uint64_t StaticMatterDevice.name.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for StaticMatterDevice() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticMatterDevice.state.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for StaticMatterDevice() + 28));
}

uint64_t StaticMatterDevice.deviceTypes.getter()
{
  type metadata accessor for StaticMatterDevice();
  return swift_bridgeObjectRetain();
}

uint64_t StaticMatterDevice.homeId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for StaticMatterDevice() + 36);
  uint64_t v4 = sub_251F34DA0();
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t StaticMatterDevice.roomId.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for StaticMatterDevice() + 40);
  uint64_t v4 = sub_251F34DA0();
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);
  return v5(a1, v3, v4);
}

uint64_t StaticMatterDevice.roomName.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for StaticMatterDevice() + 44));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticMatterDevice.endpoints.getter()
{
  type metadata accessor for StaticMatterDevice();
  return swift_bridgeObjectRetain();
}

BOOL StaticMatterDevice.isReachable.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for StaticMatterDevice() + 28)) == 1;
}

uint64_t StaticMatterDevice.metadata.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for StaticMatterDevice();
  return sub_251AC7BB4(v1 + *(int *)(v3 + 52), a1, (uint64_t (*)(void))type metadata accessor for MatterTileMetadata);
}

uint64_t StaticMatterDevice.hash(into:)(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_251F34DA0();
  sub_251AC7B6C((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA9648]);
  sub_251F35610();
  uint64_t v4 = (int *)type metadata accessor for StaticMatterDevice();
  sub_251F36CF0();
  swift_bridgeObjectRetain();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  sub_251F36CB0();
  uint64_t v5 = *(void *)(v1 + v4[8]);
  swift_bridgeObjectRetain();
  sub_251A54ED8(a1, v5);
  swift_bridgeObjectRelease();
  sub_251F35610();
  sub_251F35610();
  if (*(void *)(v2 + v4[11] + 8))
  {
    sub_251F36CC0();
    swift_bridgeObjectRetain();
    sub_251F357B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_251F36CC0();
  }
  uint64_t v6 = *(void *)(v2 + v4[12]);
  swift_bridgeObjectRetain();
  sub_251A46A94(a1, v6);
  swift_bridgeObjectRelease();
  return MatterTileMetadata.hash(into:)();
}

uint64_t sub_251ABE738(char a1)
{
  uint64_t result = 25705;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x644965646F6ELL;
      break;
    case 2:
      uint64_t result = 1701667182;
      break;
    case 3:
      uint64_t result = 0x6574617473;
      break;
    case 4:
      uint64_t result = 0x7954656369766564;
      break;
    case 5:
      uint64_t result = 0x6449656D6F68;
      break;
    case 6:
      uint64_t result = 0x64496D6F6F72;
      break;
    case 7:
      uint64_t result = 0x656D614E6D6F6F72;
      break;
    case 8:
      uint64_t result = 0x746E696F70646E65;
      break;
    case 9:
      uint64_t result = 0x617461646174656DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_251ABE85C()
{
  return sub_251ABE738(*v0);
}

uint64_t sub_251ABE864@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251AC605C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251ABE88C(uint64_t a1)
{
  unint64_t v2 = sub_251AC5A28();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251ABE8C8(uint64_t a1)
{
  unint64_t v2 = sub_251AC5A28();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StaticMatterDevice.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D870);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251AC5A28();
  sub_251F36DA0();
  LOBYTE(v13) = 0;
  sub_251F34DA0();
  sub_251AC7B6C(&qword_26B21E348, MEMORY[0x270FA9648]);
  sub_251F36A20();
  if (!v2)
  {
    uint64_t v9 = (int *)type metadata accessor for StaticMatterDevice();
    LOBYTE(v13) = 1;
    sub_251F36A70();
    LOBYTE(v13) = 2;
    sub_251F369D0();
    uint64_t v13 = *(void *)(v3 + v9[7]);
    char v12 = 3;
    type metadata accessor for MTRDeviceState(0);
    sub_251AC65E8(&qword_269B9D880, type metadata accessor for MTRDeviceState);
    sub_251F36A20();
    uint64_t v13 = *(void *)(v3 + v9[8]);
    char v12 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D888);
    sub_251AC5B7C(&qword_269B9D890, (void (*)(void))sub_251AC5A7C);
    sub_251F36A20();
    LOBYTE(v13) = 5;
    sub_251F36A20();
    LOBYTE(v13) = 6;
    sub_251F36A20();
    LOBYTE(v13) = 7;
    sub_251F36910();
    uint64_t v13 = *(void *)(v3 + v9[12]);
    char v12 = 8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D8A0);
    sub_251AC5AD0();
    sub_251F36A20();
    LOBYTE(v13) = 9;
    type metadata accessor for MatterTileMetadata();
    sub_251AC65E8(&qword_269B9D8B0, (void (*)(uint64_t))type metadata accessor for MatterTileMetadata);
    sub_251F36A20();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t StaticMatterDevice.hashValue.getter()
{
  sub_251F36CA0();
  StaticMatterDevice.hash(into:)((uint64_t)v1);
  return sub_251F36D00();
}

uint64_t StaticMatterDevice.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for MatterTileMetadata();
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D8B8);
  uint64_t v8 = *(void *)(v43 - 8);
  MEMORY[0x270FA5388](v43);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = type metadata accessor for StaticMatterDevice();
  MEMORY[0x270FA5388](v46);
  uint64_t v44 = a1;
  unint64_t v45 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251AC5A28();
  sub_251F36D90();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)v44);
  }
  uint64_t v39 = v5;
  uint64_t v40 = v7;
  uint64_t v38 = a2;
  uint64_t v42 = v8;
  uint64_t v12 = sub_251F34DA0();
  uint64_t v41 = &v34;
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x270FA5388](v12);
  LOBYTE(v48) = 0;
  uint64_t v15 = sub_251AC7B6C(&qword_269B9CC80, MEMORY[0x270FA9648]);
  sub_251F36880();
  uint64_t v37 = v15;
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  uint64_t v17 = v45;
  v16(v45, (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
  LOBYTE(v48) = 1;
  uint64_t v18 = sub_251F368D0();
  uint64_t v19 = v12;
  uint64_t v20 = (int *)v46;
  uint64_t v36 = (uint64_t (*)(char *, char *, uint64_t))v16;
  uint64_t v41 = (unint64_t *)(v13 + 32);
  uint64_t v21 = v19;
  *(void *)&v17[*(int *)(v46 + 20)] = v18;
  LOBYTE(v48) = 2;
  uint64_t v22 = sub_251F36830();
  uint64_t v23 = (uint64_t *)&v17[v20[6]];
  *uint64_t v23 = v22;
  v23[1] = v24;
  type metadata accessor for MTRDeviceState(0);
  char v47 = 3;
  sub_251AC65E8(&qword_269B9D8C0, type metadata accessor for MTRDeviceState);
  sub_251F36880();
  *(void *)&v17[v20[7]] = v48;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D888);
  char v47 = 4;
  sub_251AC5B7C(&qword_269B9D8C8, (void (*)(void))sub_251AC5BEC);
  uint64_t v25 = sub_251F36880();
  uint64_t v35 = &v34;
  *(void *)&v17[v20[8]] = v48;
  MEMORY[0x270FA5388](v25);
  unint64_t v34 = (v14 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v26 = (char *)&v34 - v34;
  LOBYTE(v48) = 5;
  sub_251F36880();
  uint64_t v27 = v36(&v17[v20[9]], v26, v21);
  uint64_t v35 = &v34;
  MEMORY[0x270FA5388](v27);
  id v28 = (char *)&v34 - v34;
  LOBYTE(v48) = 6;
  sub_251F36880();
  v36(&v17[v20[10]], v28, v21);
  LOBYTE(v48) = 7;
  uint64_t v29 = sub_251F36790();
  uint64_t v30 = (uint64_t *)&v17[v20[11]];
  *uint64_t v30 = v29;
  v30[1] = v31;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D8A0);
  char v47 = 8;
  sub_251AC5C40();
  sub_251F36880();
  *(void *)&v17[v20[12]] = v48;
  LOBYTE(v48) = 9;
  sub_251AC65E8(&qword_269B9D8E0, (void (*)(uint64_t))type metadata accessor for MatterTileMetadata);
  sub_251F36880();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v10, v43);
  uint64_t v32 = (uint64_t)v45;
  sub_251AC7A64((uint64_t)v40, (uint64_t)&v45[*(int *)(v46 + 52)], (uint64_t (*)(void))type metadata accessor for MatterTileMetadata);
  sub_251AC7BB4(v32, v38, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v44);
  return sub_251AC7ACC(v32, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
}

uint64_t sub_251ABF70C()
{
  sub_251F36CA0();
  StaticMatterDevice.hash(into:)((uint64_t)v1);
  return sub_251F36D00();
}

uint64_t sub_251ABF750()
{
  sub_251F36CA0();
  StaticMatterDevice.hash(into:)((uint64_t)v1);
  return sub_251F36D00();
}

uint64_t sub_251ABF790@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return StaticMatterDevice.init(from:)(a1, a2);
}

uint64_t sub_251ABF7A8(void *a1)
{
  return StaticMatterDevice.encode(to:)(a1);
}

uint64_t static StaticMatterDevice.find(nodeId:)(uint64_t a1, uint64_t a2)
{
  v2[21] = a1;
  v2[22] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC90);
  v2[23] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251ABF854, 0, 0);
}

uint64_t sub_251ABF854()
{
  *(void *)(v0 + 40) = &type metadata for HomeKitFeatures;
  unint64_t v1 = sub_251A4DA94();
  *(unsigned char *)(v0 + 16) = 4;
  *(void *)(v0 + 48) = v1;
  char v2 = sub_251F34F60();
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  if (v2) {
    goto LABEL_5;
  }
  if (qword_269B9C4C0 != -1) {
    swift_once();
  }
  if (byte_269BA38B2 == 1)
  {
LABEL_5:
    *(void *)(v0 + 192) = sub_251F35C80();
    *(void *)(v0 + 200) = sub_251F35C70();
    uint64_t v4 = sub_251F35C00();
    return MEMORY[0x270FA2498](sub_251ABF9E0, v4, v3);
  }
  else
  {
    uint64_t v5 = *(void *)(v0 + 168);
    uint64_t v6 = type metadata accessor for StaticMatterDevice();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
    swift_task_dealloc();
    uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
    return v7();
  }
}

uint64_t sub_251ABF9E0()
{
  swift_release();
  return MEMORY[0x270FA2498](sub_251ABFA48, 0, 0);
}

uint64_t sub_251ABFA48()
{
  *(void *)(v0 + 208) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251ABFAD4, v2, v1);
}

uint64_t sub_251ABFAD4()
{
  swift_release();
  swift_beginAccess();
  *(void *)(v0 + 216) = qword_26B21F258;
  return MEMORY[0x270FA2498](sub_251ABFB64, 0, 0);
}

uint64_t sub_251ABFB64()
{
  unint64_t v1 = v0[27];
  if (v1 < 3)
  {
    v0[34] = sub_251F35C70();
    uint64_t v2 = sub_251F35C00();
    uint64_t v4 = v3;
    uint64_t v5 = sub_251AC0194;
    uint64_t v6 = v2;
    uint64_t v7 = v4;
LABEL_11:
    return MEMORY[0x270FA2498](v5, v6, v7);
  }
  if (v1 == 3)
  {
    if (qword_269B9C2E8 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_251AC068C;
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    goto LABEL_11;
  }
  if (v1 != 4) {
    return sub_251F36680();
  }
  type metadata accessor for DataModel();
  uint64_t v8 = (void *)swift_task_alloc();
  v0[28] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_251ABFD34;
  return static DataModel.sharedAsync(coverages:)(0);
}

uint64_t sub_251ABFD34(uint64_t a1)
{
  *(void *)(*(void *)v1 + 232) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251ABFE34, 0, 0);
}

uint64_t sub_251ABFE34()
{
  *(void *)(v0 + 240) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251ABFEC0, v2, v1);
}

uint64_t sub_251ABFEC0()
{
  uint64_t v1 = (char *)v0[29];
  swift_release();
  swift_getKeyPath();
  v0[19] = v1;
  sub_251AC65E8((unint64_t *)&qword_26B21F280, (void (*)(uint64_t))type metadata accessor for DataModel);
  sub_251F34F10();
  swift_release();
  uint64_t v2 = &v1[OBJC_IVAR____TtC13HomeDataModel9DataModel__currentMatterSnapshot];
  swift_beginAccess();
  v0[31] = *((void *)v2 + 1);
  v0[32] = *((void *)v2 + 2);
  v0[33] = *((void *)v2 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return MEMORY[0x270FA2498](sub_251ABFFFC, 0, 0);
}

uint64_t sub_251ABFFFC()
{
  uint64_t v1 = v0[32];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v1 + 16))
  {
    unint64_t v2 = sub_2519FE588(v0[22]);
    uint64_t v3 = v0[23];
    if (v4)
    {
      unint64_t v5 = v2;
      uint64_t v6 = *(void *)(v0[32] + 56);
      uint64_t v7 = type metadata accessor for StaticMatterDevice();
      uint64_t v8 = *(void *)(v7 - 8);
      sub_251AC7BB4(v6 + *(void *)(v8 + 72) * v5, v3, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(v3, 0, 1, v7);
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v3 = v0[23];
  }
  uint64_t v9 = type metadata accessor for StaticMatterDevice();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v3, 1, 1, v9);
LABEL_6:
  swift_bridgeObjectRelease();
  sub_251AC5D08(v0[23], v0[21]);
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_251AC0194()
{
  swift_release();
  if (qword_26B2200E0 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251AC022C, 0, 0);
}

uint64_t sub_251AC022C()
{
  *(void *)(v0 + 280) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251AC02B8, v2, v1);
}

uint64_t sub_251AC02B8()
{
  swift_release();
  *(void *)(v0 + 288) = qword_26B21FF50;
  return MEMORY[0x270FA2498](sub_251AC032C, 0, 0);
}

uint64_t sub_251AC032C()
{
  *(void *)(v0 + 296) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251AC03B8, v2, v1);
}

uint64_t sub_251AC03B8()
{
  uint64_t v1 = v0[36];
  swift_release();
  swift_getKeyPath();
  v0[20] = v1;
  sub_251AC65E8((unint64_t *)&qword_26B21F280, (void (*)(uint64_t))type metadata accessor for DataModel);
  sub_251F34F10();
  swift_release();
  uint64_t v2 = (void *)(v1 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentMatterSnapshot);
  swift_beginAccess();
  v0[38] = v2[1];
  v0[39] = v2[2];
  v0[40] = v2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return MEMORY[0x270FA2498](sub_251AC04F4, 0, 0);
}

uint64_t sub_251AC04F4()
{
  uint64_t v1 = v0[39];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v1 + 16))
  {
    unint64_t v2 = sub_2519FE588(v0[22]);
    uint64_t v3 = v0[23];
    if (v4)
    {
      unint64_t v5 = v2;
      uint64_t v6 = *(void *)(v0[39] + 56);
      uint64_t v7 = type metadata accessor for StaticMatterDevice();
      uint64_t v8 = *(void *)(v7 - 8);
      sub_251AC7BB4(v6 + *(void *)(v8 + 72) * v5, v3, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(v3, 0, 1, v7);
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v3 = v0[23];
  }
  uint64_t v9 = type metadata accessor for StaticMatterDevice();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v3, 1, 1, v9);
LABEL_6:
  swift_bridgeObjectRelease();
  sub_251AC5D08(v0[23], v0[21]);
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_251AC068C()
{
  type metadata accessor for WidgetDataModel();
  swift_initStaticObject();
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_269B9F070 + dword_269B9F070);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 328) = v1;
  void *v1 = v0;
  v1[1] = sub_251AC0744;
  return v3();
}

uint64_t sub_251AC0744(uint64_t a1)
{
  *(void *)(*(void *)v1 + 336) = a1;
  swift_task_dealloc();
  swift_retain();
  return MEMORY[0x270FA2498](sub_251AC0854, a1, 0);
}

uint64_t sub_251AC0854()
{
  uint64_t v1 = v0[42];
  uint64_t v3 = v0[22];
  uint64_t v2 = v0[23];
  swift_beginAccess();
  uint64_t v4 = *(void *)(v1 + 144);
  *(void *)(swift_task_alloc() + 16) = v3;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v4 + 24));
  sub_251AC5CEC((uint64_t *)(v4 + 16), v2);
  os_unfair_lock_unlock((os_unfair_lock_t)(v4 + 24));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251AC09B0, 0, 0);
}

uint64_t sub_251AC09B0()
{
  sub_251AC5D08(v0[23], v0[21]);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t StaticMatterDevice.init(nodeId:name:state:deviceTypes:homeId:roomId:roomName:endpoints:metadata:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  static UUID.matterObjectIdentifier(deviceID:endpointID:)(a1, 0, a9);
  uint64_t v18 = (int *)type metadata accessor for StaticMatterDevice();
  *(void *)(a9 + v18[5]) = a1;
  *(void *)(a9 + v18[7]) = a4;
  *(void *)(a9 + v18[8]) = a5;
  uint64_t v19 = a9 + v18[9];
  uint64_t v20 = sub_251F34DA0();
  uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32);
  v21(v19, a6, v20);
  v21(a9 + v18[10], a7, v20);
  uint64_t v22 = (void *)(a9 + v18[11]);
  *uint64_t v22 = a8;
  v22[1] = a10;
  *(void *)(a9 + v18[12]) = a11;
  uint64_t v23 = (void *)(a9 + v18[6]);
  *uint64_t v23 = a2;
  v23[1] = a3;
  return sub_251AC7A64(a12, a9 + v18[13], (uint64_t (*)(void))type metadata accessor for MatterTileMetadata);
}

uint64_t sub_251AC0B6C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  uint64_t v9 = (char *)&v24 - v8;
  uint64_t result = MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)&v24 - v11;
  int64_t v13 = 0;
  uint64_t v14 = a1 + 56;
  uint64_t v15 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & *(void *)(a1 + 56);
  int64_t v18 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      unint64_t v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_5;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v21 >= v18) {
      return swift_release();
    }
    unint64_t v22 = *(void *)(v14 + 8 * v21);
    ++v13;
    if (!v22)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v18) {
        return swift_release();
      }
      unint64_t v22 = *(void *)(v14 + 8 * v13);
      if (!v22)
      {
        int64_t v13 = v21 + 2;
        if (v21 + 2 >= v18) {
          return swift_release();
        }
        unint64_t v22 = *(void *)(v14 + 8 * v13);
        if (!v22)
        {
          int64_t v13 = v21 + 3;
          if (v21 + 3 >= v18) {
            return swift_release();
          }
          unint64_t v22 = *(void *)(v14 + 8 * v13);
          if (!v22) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v17 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_5:
    sub_251AC7BB4(*(void *)(a1 + 48) + *(void *)(v3 + 72) * v20, (uint64_t)v12, type metadata accessor for StaticAccessory.DeviceIdentifier);
    sub_251AC7A64((uint64_t)v12, (uint64_t)v6, type metadata accessor for StaticAccessory.DeviceIdentifier);
    sub_251A66F00((uint64_t)v9, (uint64_t)v6);
    uint64_t result = sub_251AC7ACC((uint64_t)v9, type metadata accessor for StaticAccessory.DeviceIdentifier);
  }
  int64_t v23 = v21 + 4;
  if (v23 >= v18) {
    return swift_release();
  }
  unint64_t v22 = *(void *)(v14 + 8 * v23);
  if (v22)
  {
    int64_t v13 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v13 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v13 >= v18) {
      return swift_release();
    }
    unint64_t v22 = *(void *)(v14 + 8 * v13);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_251AC0DD8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StaticService();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  uint64_t v9 = (char *)&v24 - v8;
  uint64_t result = MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)&v24 - v11;
  int64_t v13 = 0;
  uint64_t v14 = a1 + 56;
  uint64_t v15 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & *(void *)(a1 + 56);
  int64_t v18 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      unint64_t v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_5;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v21 >= v18) {
      return swift_release();
    }
    unint64_t v22 = *(void *)(v14 + 8 * v21);
    ++v13;
    if (!v22)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v18) {
        return swift_release();
      }
      unint64_t v22 = *(void *)(v14 + 8 * v13);
      if (!v22)
      {
        int64_t v13 = v21 + 2;
        if (v21 + 2 >= v18) {
          return swift_release();
        }
        unint64_t v22 = *(void *)(v14 + 8 * v13);
        if (!v22)
        {
          int64_t v13 = v21 + 3;
          if (v21 + 3 >= v18) {
            return swift_release();
          }
          unint64_t v22 = *(void *)(v14 + 8 * v13);
          if (!v22) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v17 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_5:
    sub_251AC7BB4(*(void *)(a1 + 48) + *(void *)(v3 + 72) * v20, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticService);
    sub_251AC7A64((uint64_t)v12, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticService);
    sub_251A641C8((uint64_t)v9, (uint64_t)v6);
    uint64_t result = sub_251AC7ACC((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticService);
  }
  int64_t v23 = v21 + 4;
  if (v23 >= v18) {
    return swift_release();
  }
  unint64_t v22 = *(void *)(v14 + 8 * v23);
  if (v22)
  {
    int64_t v13 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v13 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v13 >= v18) {
      return swift_release();
    }
    unint64_t v22 = *(void *)(v14 + 8 * v13);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_251AC1044(uint64_t a1)
{
  return sub_251AC105C(a1, sub_251A66D88);
}

uint64_t sub_251AC105C(uint64_t result, uint64_t (*a2)(char *, void))
{
  uint64_t v3 = result;
  int64_t v4 = 0;
  uint64_t v5 = result + 56;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_5;
    }
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      return result;
    }
    if (v12 >= v9) {
      goto LABEL_23;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v9) {
        goto LABEL_23;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v4);
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v9) {
          goto LABEL_23;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v4);
        if (!v13)
        {
          int64_t v4 = v12 + 3;
          if (v12 + 3 >= v9) {
            goto LABEL_23;
          }
          unint64_t v13 = *(void *)(v5 + 8 * v4);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_5:
    uint64_t result = a2(&v15, *(unsigned __int8 *)(*(void *)(v3 + 48) + v11));
  }
  int64_t v14 = v12 + 4;
  if (v14 < v9)
  {
    unint64_t v13 = *(void *)(v5 + 8 * v14);
    if (!v13)
    {
      while (1)
      {
        int64_t v4 = v14 + 1;
        if (__OFADD__(v14, 1)) {
          goto LABEL_27;
        }
        if (v4 >= v9) {
          goto LABEL_23;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v4);
        ++v14;
        if (v13) {
          goto LABEL_22;
        }
      }
    }
    int64_t v4 = v14;
    goto LABEL_22;
  }
LABEL_23:
  return swift_release();
}

uint64_t sub_251AC11C8(uint64_t a1)
{
  uint64_t v28 = a1;
  uint64_t v1 = *(void *)(a1 + 64);
  uint64_t v26 = a1 + 64;
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  unint64_t v4 = v3 & v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t result = MEMORY[0x270FA5388](v5 - 8);
  unint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v9 = 0;
  int64_t v27 = (unint64_t)(v2 + 63) >> 6;
  if (!v4) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v10 = __clz(__rbit64(v4));
  v4 &= v4 - 1;
  for (unint64_t i = v10 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v9 << 6))
  {
    uint64_t v15 = *(void *)(v28 + 48);
    uint64_t v16 = sub_251F34DA0();
    uint64_t v17 = *(void *)(v16 - 8);
    (*(void (**)(char *, unint64_t, uint64_t))(v17 + 16))(v8, v15 + *(void *)(v17 + 72) * i, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v8, 0, 1, v16);
    uint64_t v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v8, 1, v16);
    if (v18 == 1) {
      return swift_release();
    }
    uint64_t v19 = MEMORY[0x270FA5388](v18);
    int64_t v21 = (char *)&v25 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
    MEMORY[0x270FA5388](v19);
    int64_t v23 = (char *)&v25 - v22;
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))((char *)&v25 - v22, v8, v16);
    sub_251A637B8(v21, v23);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v21, v16);
    if (v4) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v12 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v12 >= v27) {
      goto LABEL_24;
    }
    unint64_t v13 = *(void *)(v26 + 8 * v12);
    ++v9;
    if (!v13)
    {
      int64_t v9 = v12 + 1;
      if (v12 + 1 >= v27) {
        goto LABEL_24;
      }
      unint64_t v13 = *(void *)(v26 + 8 * v9);
      if (!v13)
      {
        int64_t v9 = v12 + 2;
        if (v12 + 2 >= v27) {
          goto LABEL_24;
        }
        unint64_t v13 = *(void *)(v26 + 8 * v9);
        if (!v13)
        {
          int64_t v9 = v12 + 3;
          if (v12 + 3 >= v27) {
            goto LABEL_24;
          }
          unint64_t v13 = *(void *)(v26 + 8 * v9);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_20:
    unint64_t v4 = (v13 - 1) & v13;
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v27)
  {
LABEL_24:
    uint64_t v24 = sub_251F34DA0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v8, 1, 1, v24);
    return swift_release();
  }
  unint64_t v13 = *(void *)(v26 + 8 * v14);
  if (v13)
  {
    int64_t v9 = v14;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v9 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v9 >= v27) {
      goto LABEL_24;
    }
    unint64_t v13 = *(void *)(v26 + 8 * v9);
    ++v14;
    if (v13) {
      goto LABEL_20;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void sub_251AC154C(unint64_t a1)
{
  unint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    sub_251F362B0();
    sub_251AC7B2C();
    sub_251AC7B6C((unint64_t *)&qword_269B9D158, (void (*)(uint64_t))sub_251AC7B2C);
    sub_251F35E90();
    unint64_t v1 = (unint64_t)v17[1];
    uint64_t v16 = v17[2];
    uint64_t v2 = (uint64_t)v17[3];
    id v3 = v17[4];
    unint64_t v4 = (unint64_t)v17[5];
  }
  else
  {
    id v3 = 0;
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v16 = (void *)(a1 + 56);
    uint64_t v2 = ~v5;
    uint64_t v6 = -v5;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v4 = v7 & *(void *)(a1 + 56);
  }
  int64_t v8 = (unint64_t)(v2 + 64) >> 6;
  if ((v1 & 0x8000000000000000) != 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v4)
    {
      uint64_t v9 = (v4 - 1) & v4;
      unint64_t v10 = __clz(__rbit64(v4)) | ((void)v3 << 6);
      unint64_t v11 = (char *)v3;
      goto LABEL_29;
    }
    uint64_t v13 = (uint64_t)v3 + 1;
    if (__OFADD__(v3, 1)) {
      break;
    }
    if (v13 >= v8) {
      goto LABEL_32;
    }
    unint64_t v14 = v16[v13];
    unint64_t v11 = (char *)v3 + 1;
    if (!v14)
    {
      unint64_t v11 = (char *)v3 + 2;
      if ((uint64_t)v3 + 2 >= v8) {
        goto LABEL_32;
      }
      unint64_t v14 = v16[(void)v11];
      if (!v14)
      {
        unint64_t v11 = (char *)v3 + 3;
        if ((uint64_t)v3 + 3 >= v8) {
          goto LABEL_32;
        }
        unint64_t v14 = v16[(void)v11];
        if (!v14)
        {
          unint64_t v11 = (char *)v3 + 4;
          if ((uint64_t)v3 + 4 >= v8) {
            goto LABEL_32;
          }
          unint64_t v14 = v16[(void)v11];
          if (!v14)
          {
            unint64_t v11 = (char *)v3 + 5;
            if ((uint64_t)v3 + 5 >= v8) {
              goto LABEL_32;
            }
            unint64_t v14 = v16[(void)v11];
            if (!v14)
            {
              uint64_t v15 = (char *)v3 + 6;
              while ((char *)v8 != v15)
              {
                unint64_t v14 = v16[(void)v15++];
                if (v14)
                {
                  unint64_t v11 = v15 - 1;
                  goto LABEL_28;
                }
              }
LABEL_32:
              sub_251A1E630();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    uint64_t v9 = (v14 - 1) & v14;
    unint64_t v10 = __clz(__rbit64(v14)) + ((void)v11 << 6);
LABEL_29:
    id v12 = *(id *)(*(void *)(v1 + 48) + 8 * v10);
    if (!v12) {
      goto LABEL_32;
    }
    while (1)
    {
      sub_251A62CF4(v17, v12);

      id v3 = v11;
      unint64_t v4 = v9;
      if ((v1 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (sub_251F36340())
      {
        sub_251AC7B2C();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v12 = v17[0];
        swift_unknownObjectRelease();
        unint64_t v11 = (char *)v3;
        uint64_t v9 = v4;
        if (v12) {
          continue;
        }
      }
      goto LABEL_32;
    }
  }
  __break(1u);
}

uint64_t sub_251AC17F4(uint64_t a1)
{
  uint64_t v28 = a1;
  uint64_t v1 = *(void *)(a1 + 56);
  uint64_t v26 = a1 + 56;
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  unint64_t v4 = v3 & v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t result = MEMORY[0x270FA5388](v5 - 8);
  int64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v9 = 0;
  int64_t v27 = (unint64_t)(v2 + 63) >> 6;
  if (!v4) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v10 = __clz(__rbit64(v4));
  v4 &= v4 - 1;
  for (unint64_t i = v10 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v9 << 6))
  {
    uint64_t v15 = *(void *)(v28 + 48);
    uint64_t v16 = sub_251F34DA0();
    uint64_t v17 = *(void *)(v16 - 8);
    (*(void (**)(char *, unint64_t, uint64_t))(v17 + 16))(v8, v15 + *(void *)(v17 + 72) * i, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v8, 0, 1, v16);
    uint64_t v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v8, 1, v16);
    if (v18 == 1) {
      return swift_release();
    }
    uint64_t v19 = MEMORY[0x270FA5388](v18);
    int64_t v21 = (char *)&v25 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
    MEMORY[0x270FA5388](v19);
    int64_t v23 = (char *)&v25 - v22;
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))((char *)&v25 - v22, v8, v16);
    sub_251A637B8(v21, v23);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v21, v16);
    if (v4) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v12 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v12 >= v27) {
      goto LABEL_24;
    }
    unint64_t v13 = *(void *)(v26 + 8 * v12);
    ++v9;
    if (!v13)
    {
      int64_t v9 = v12 + 1;
      if (v12 + 1 >= v27) {
        goto LABEL_24;
      }
      unint64_t v13 = *(void *)(v26 + 8 * v9);
      if (!v13)
      {
        int64_t v9 = v12 + 2;
        if (v12 + 2 >= v27) {
          goto LABEL_24;
        }
        unint64_t v13 = *(void *)(v26 + 8 * v9);
        if (!v13)
        {
          int64_t v9 = v12 + 3;
          if (v12 + 3 >= v27) {
            goto LABEL_24;
          }
          unint64_t v13 = *(void *)(v26 + 8 * v9);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_20:
    unint64_t v4 = (v13 - 1) & v13;
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v27)
  {
LABEL_24:
    uint64_t v24 = sub_251F34DA0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v8, 1, 1, v24);
    return swift_release();
  }
  unint64_t v13 = *(void *)(v26 + 8 * v14);
  if (v13)
  {
    int64_t v9 = v14;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v9 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v9 >= v27) {
      goto LABEL_24;
    }
    unint64_t v13 = *(void *)(v26 + 8 * v9);
    ++v14;
    if (v13) {
      goto LABEL_20;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void StaticMatterDevice.tileIcon.getter(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for StaticMatterDevice() + 52);
  unint64_t v4 = *(void **)(v3 + 24);
  if (v4)
  {
    uint64_t v5 = *(void *)(v3 + 16);
    swift_bridgeObjectRetain();
    v6._uint64_t countAndFlagsBits = v5;
    v6._object = v4;
    Icon.init(customIconName:)(&v29, v6);
    uint64_t countAndFlagsBits = v29.tileOnStateIconInfo.name._countAndFlagsBits;
    object = v29.tileOnStateIconInfo.name._object;
    HomeDataModel::StaticRenderingMode renderingMode = v29.tileOnStateIconInfo.renderingMode;
    uint64_t v10 = v29.tileOffStateIconInfo.name._countAndFlagsBits;
    unint64_t v11 = v29.tileOffStateIconInfo.name._object;
    HomeDataModel::StaticRenderingMode v12 = v29.tileOffStateIconInfo.renderingMode;
    uint64_t v14 = v29.accessoryControlOnStateIconInfo.name._countAndFlagsBits;
    unint64_t v13 = v29.accessoryControlOnStateIconInfo.name._object;
    HomeDataModel::StaticRenderingMode v15 = v29.accessoryControlOnStateIconInfo.renderingMode;
    uint64_t v16 = v29.accessoryControlOffStateIconInfo.name._countAndFlagsBits;
    uint64_t v17 = v29.accessoryControlOffStateIconInfo.name._object;
    HomeDataModel::StaticRenderingMode v18 = v29.accessoryControlOffStateIconInfo.renderingMode;
LABEL_16:
    *(void *)a1 = countAndFlagsBits;
    *(void *)(a1 + 8) = object;
    *(unsigned char *)(a1 + 16) = renderingMode;
    *(void *)(a1 + 24) = v10;
    *(void *)(a1 + 32) = v11;
    *(unsigned char *)(a1 + 40) = v12;
    *(void *)(a1 + 48) = v14;
    *(void *)(a1 + 56) = v13;
    *(unsigned char *)(a1 + 64) = v15;
    *(void *)(a1 + 72) = v16;
    *(void *)(a1 + 80) = v17;
    *(unsigned char *)(a1 + 88) = v18;
    return;
  }
  uint64_t v19 = swift_bridgeObjectRetain();
  uint64_t v20 = sub_251AC549C(v19);
  uint64_t v21 = sub_251A53EB8(v20);
  if ((v23 & 1) == 0)
  {
    if (*(_DWORD *)(v20 + 36) == v22)
    {
      if (v21 != 1 << *(unsigned char *)(v20 + 32))
      {
        sub_251A54058(v21, v22, 0, v20, &v29);
        swift_release();
        if (LOBYTE(v29.tileOnStateIconInfo.name._countAndFlagsBits) - 4 >= 4)
        {
          if (LOBYTE(v29.tileOnStateIconInfo.name._countAndFlagsBits) - 21 >= 2)
          {
            if (LOBYTE(v29.tileOnStateIconInfo.name._countAndFlagsBits) == 23) {
              char v24 = 53;
            }
            else {
              char v24 = 88;
            }
          }
          else
          {
            char v24 = 19;
          }
        }
        else
        {
          char v24 = 31;
        }
        LOBYTE(v29.tileOnStateIconInfo.name._countAndFlagsBits) = v24;
        uint64_t v16 = IconSymbol.rawValue.getter();
        uint64_t v17 = v25;
        swift_bridgeObjectRetain_n();
        HomeDataModel::StaticRenderingMode v18 = HomeDataModel_StaticRenderingMode_monochrome;
        HomeDataModel::StaticRenderingMode v15 = HomeDataModel_StaticRenderingMode_monochrome;
        unint64_t v13 = v17;
        uint64_t v14 = v16;
        HomeDataModel::StaticRenderingMode v12 = HomeDataModel_StaticRenderingMode_monochrome;
        unint64_t v11 = v17;
        uint64_t v10 = v16;
        HomeDataModel::StaticRenderingMode renderingMode = HomeDataModel_StaticRenderingMode_monochrome;
        object = v17;
        uint64_t countAndFlagsBits = v16;
        goto LABEL_16;
      }
      swift_release();
      if (qword_269B9C360 == -1) {
        goto LABEL_7;
      }
    }
    else
    {
      __break(1u);
    }
    swift_once();
LABEL_7:
    object = *(void **)algn_269BA00F8;
    uint64_t v28 = qword_269BA00F0;
    char v27 = byte_269BA0100;
    unint64_t v11 = (void *)unk_269BA0110;
    uint64_t v26 = qword_269BA0108;
    HomeDataModel::StaticRenderingMode v12 = byte_269BA0118;
    uint64_t v14 = qword_269BA0120;
    unint64_t v13 = (void *)unk_269BA0128;
    HomeDataModel::StaticRenderingMode v15 = byte_269BA0130;
    uint64_t v16 = qword_269BA0138;
    uint64_t v17 = (void *)unk_269BA0140;
    HomeDataModel::StaticRenderingMode v18 = byte_269BA0148;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v10 = v26;
    HomeDataModel::StaticRenderingMode renderingMode = v27;
    uint64_t countAndFlagsBits = v28;
    goto LABEL_16;
  }
  __break(1u);
}

uint64_t StaticMatterDevice.customIconSymbol.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for StaticMatterDevice() + 52) + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StaticMatterDevice.primaryDeviceType.getter@<X0>(char *a1@<X8>)
{
  type metadata accessor for StaticMatterDevice();
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_251AC549C(v2);
  sub_251ABD888(v3, a1);
  return swift_release();
}

uint64_t StaticMatterDevice.dateAdded.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_251F34D20();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  return v3(a1, 1, 1, v2);
}

void StaticMatterDevice.primaryServiceKind.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t StaticMatterDevice.roomIds.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB80);
  uint64_t v1 = sub_251F34DA0();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_251F38650;
  uint64_t v5 = type metadata accessor for StaticMatterDevice();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v2 + 16))(v4 + v3, v0 + *(int *)(v5 + 40), v1);
  uint64_t v6 = sub_251C08E40(v4);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return v6;
}

uint64_t StaticMatterDevice.foregroundColor.getter()
{
  return sub_251F352F0();
}

uint64_t StaticMatterDevice.isDoubleHigh.getter()
{
  int v1 = *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticMatterDevice() + 52) + 48);
  if (v1 == 2)
  {
    char v2 = 0;
  }
  else
  {
    if (v1) {
      char v2 = 1;
    }
    else {
      char v2 = sub_251F36B10();
    }
    swift_bridgeObjectRelease();
  }
  return v2 & 1;
}

uint64_t StaticMatterDevice.tileSize.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for StaticMatterDevice();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 52) + 48);
  return result;
}

uint64_t StaticMatterDevice.toggle()(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return MEMORY[0x270FA2498](sub_251AC2104, 0, 0);
}

uint64_t sub_251AC2104()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = type metadata accessor for StateSnapshot(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  unint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_251AC21A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_251F34D20();
  unint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  return v3(a1, 1, 1, v2);
}

uint64_t sub_251AC2214()
{
  return sub_251F352F0();
}

void sub_251AC2230(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_251AC2238(uint64_t a1)
{
  return *(unsigned char *)(v1 + *(int *)(a1 + 52) + 49) & 1;
}

uint64_t StaticMatterDevice.isFavorite.getter()
{
  return *(unsigned char *)(v0 + *(int *)(type metadata accessor for StaticMatterDevice() + 52) + 49) & 1;
}

uint64_t sub_251AC2278(uint64_t a1)
{
  int v2 = *(unsigned __int8 *)(v1 + *(int *)(a1 + 52) + 50);
  return (v2 == 2) | v2 & 1u;
}

uint64_t StaticMatterDevice.shouldShowInDashboard.getter()
{
  int v1 = *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticMatterDevice() + 52) + 50);
  return (v1 == 2) | v1 & 1u;
}

uint64_t sub_251AC22D0(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB80);
  uint64_t v3 = sub_251F34DA0();
  uint64_t v4 = *(void *)(v3 - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_251F38650;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 16))(v6 + v5, v1 + *(int *)(a1 + 40), v3);
  uint64_t v7 = sub_251C08E40(v6);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return v7;
}

uint64_t sub_251AC23E8(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 44));
  swift_bridgeObjectRetain();
  return v2;
}

BOOL sub_251AC2420(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 28)) == 1;
}

uint64_t sub_251AC2434(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return MEMORY[0x270FA2498](sub_251AC7C44, 0, 0);
}

unint64_t sub_251AC2454()
{
  return 0xD000000000000012;
}

uint64_t StaticMatterDevice.includeInStatus.getter()
{
  int v1 = *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for StaticMatterDevice() + 52) + 51);
  return (v1 == 2) | v1 & 1u;
}

id StaticMatterDevice.device(in:)(id result)
{
  if (result)
  {
    uint64_t v2 = type metadata accessor for StaticMatterDevice();
    return HMHomeManager.matterDevice(with:inHomeWithID:)(*(void *)(v1 + *(int *)(v2 + 20)), v1 + *(int *)(v2 + 36));
  }
  return result;
}

uint64_t StaticMatterDevice.device.getter()
{
  *(void *)(v1 + 16) = v0;
  uint64_t v4 = (uint64_t (__cdecl *)())((char *)&dword_269BA1370 + dword_269BA1370);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_251AC25A0;
  return v4();
}

uint64_t sub_251AC25A0(uint64_t a1)
{
  *(void *)(*(void *)v1 + 32) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251AC26A0, 0, 0);
}

uint64_t sub_251AC26A0()
{
  uint64_t v1 = (void *)v0[4];
  if (v1)
  {
    uint64_t v2 = v0[2];
    uint64_t v3 = type metadata accessor for StaticMatterDevice();
    uint64_t v4 = *(void *)(v2 + *(int *)(v3 + 20));
    uint64_t v5 = v2 + *(int *)(v3 + 36);
    id v6 = v1;
    id v7 = HMHomeManager.matterDevice(with:inHomeWithID:)(v4, v5);
    uint64_t v9 = v8;
  }
  else
  {
    id v7 = 0;
    uint64_t v9 = 0;
  }
  uint64_t v10 = (uint64_t (*)(id, uint64_t))v0[1];
  return v10(v7, v9);
}

uint64_t StaticMatterDevice.accessory.getter()
{
  *(void *)(v1 + 16) = v0;
  uint64_t v4 = (uint64_t (__cdecl *)())((char *)&dword_269BA1370 + dword_269BA1370);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_251AC2804;
  return v4();
}

uint64_t sub_251AC2804(uint64_t a1)
{
  *(void *)(*(void *)v1 + 32) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251AC2904, 0, 0);
}

uint64_t sub_251AC2904()
{
  uint64_t v1 = (void *)v0[4];
  if (v1)
  {
    uint64_t v2 = v0[2];
    uint64_t v3 = type metadata accessor for StaticMatterDevice();
    uint64_t v4 = HMHomeManager.accessory(with:inHomeWithID:)(*(void *)(v2 + *(int *)(v3 + 20)), v2 + *(int *)(v3 + 36));
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t v5 = (uint64_t (*)(void *))v0[1];
  return v5(v4);
}

uint64_t StaticMatterDevice.toggleKnownState()()
{
  v1[2] = v0;
  v1[3] = *(void *)(type metadata accessor for StaticEndpoint() - 8);
  long long v1[4] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251AC2A58, 0, 0);
}

uint64_t sub_251AC2A58()
{
  if (StaticMatterDevice.canBeToggled.getter())
  {
    type metadata accessor for StaticMatterDevice();
    uint64_t v1 = swift_bridgeObjectRetain();
    uint64_t v2 = sub_251AC2D44(v1);
    uint64_t v3 = *(void *)(v2 + 16);
    if (v3)
    {
      uint64_t v4 = *(unsigned __int8 *)(v0[3] + 80);
      sub_251AC7BB4(v2 + ((v4 + 32) & ~v4), v0[4], (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
      swift_bridgeObjectRelease();
      if (v3 == 1)
      {
        uint64_t v5 = (void *)swift_task_alloc();
        v0[5] = v5;
        *uint64_t v5 = v0;
        v5[1] = sub_251AC2BCC;
        return StaticEndpoint.toggleKnownState()();
      }
      sub_251AC7ACC(v0[4], (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_251AC2BCC()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251AC2CC8, 0, 0);
}

uint64_t sub_251AC2CC8()
{
  sub_251AC7ACC(*(void *)(v0 + 32), (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251AC2D44(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StaticEndpoint();
  uint64_t v37 = *(void *)(v2 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v32 = (uint64_t)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v32 - v6;
  uint64_t result = MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v32 - v9;
  int64_t v11 = 0;
  uint64_t v12 = *(void *)(a1 + 64);
  uint64_t v34 = a1 + 64;
  uint64_t v13 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v33 = MEMORY[0x263F8EE78];
  unint64_t v38 = MEMORY[0x263F8EE78];
  unint64_t v15 = v14 & v12;
  int64_t v35 = (unint64_t)(v13 + 63) >> 6;
  if ((v14 & v12) != 0) {
    goto LABEL_7;
  }
LABEL_8:
  if (!__OFADD__(v11++, 1))
  {
    if (v11 >= v35) {
      goto LABEL_34;
    }
    unint64_t v22 = *(void *)(v34 + 8 * v11);
    if (v22)
    {
LABEL_20:
      unint64_t v15 = (v22 - 1) & v22;
      for (unint64_t i = __clz(__rbit64(v22)) + (v11 << 6); ; unint64_t i = v19 | (v11 << 6))
      {
        uint64_t v24 = *(void *)(v37 + 72);
        sub_251AC7BB4(*(void *)(a1 + 56) + v24 * i, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
        sub_251AC7A64((uint64_t)v7, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
        if (*(void *)&v10[*(int *)(v2 + 28)] != 2
          && (*(void *)(*(void *)&v10[*(int *)(v2 + 36)] + 16) && (sub_2519FE614(10), (v25 & 1) != 0)
           || (uint64_t v16 = swift_bridgeObjectRetain(),
               uint64_t v17 = v36,
               char v18 = sub_251D74360(v16),
               uint64_t v36 = v17,
               swift_bridgeObjectRelease(),
               (v18 & 1) != 0)))
        {
          sub_251AC7A64((uint64_t)v10, v32, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
          unint64_t v26 = v33;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_251A3E46C(0, *(void *)(v26 + 16) + 1, 1);
          }
          unint64_t v27 = v38;
          unint64_t v29 = *(void *)(v38 + 16);
          unint64_t v28 = *(void *)(v38 + 24);
          unint64_t v30 = v29 + 1;
          if (v29 >= v28 >> 1)
          {
            unint64_t v33 = v29 + 1;
            sub_251A3E46C(v28 > 1, v29 + 1, 1);
            unint64_t v30 = v33;
            unint64_t v27 = v38;
          }
          *(void *)(v27 + 16) = v30;
          uint64_t v31 = *(unsigned __int8 *)(v37 + 80);
          unint64_t v33 = v27;
          uint64_t result = sub_251AC7A64(v32, v27 + ((v31 + 32) & ~v31) + v29 * v24, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
          if (!v15) {
            goto LABEL_8;
          }
        }
        else
        {
          uint64_t result = sub_251AC7ACC((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
          if (!v15) {
            goto LABEL_8;
          }
        }
LABEL_7:
        unint64_t v19 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
      }
    }
    int64_t v23 = v11 + 1;
    if (v11 + 1 >= v35) {
      goto LABEL_34;
    }
    unint64_t v22 = *(void *)(v34 + 8 * v23);
    if (!v22)
    {
      int64_t v23 = v11 + 2;
      if (v11 + 2 >= v35) {
        goto LABEL_34;
      }
      unint64_t v22 = *(void *)(v34 + 8 * v23);
      if (!v22)
      {
        int64_t v23 = v11 + 3;
        if (v11 + 3 >= v35) {
          goto LABEL_34;
        }
        unint64_t v22 = *(void *)(v34 + 8 * v23);
        if (!v22)
        {
          int64_t v23 = v11 + 4;
          if (v11 + 4 < v35)
          {
            unint64_t v22 = *(void *)(v34 + 8 * v23);
            if (v22) {
              goto LABEL_19;
            }
            while (1)
            {
              int64_t v11 = v23 + 1;
              if (__OFADD__(v23, 1)) {
                goto LABEL_36;
              }
              if (v11 >= v35) {
                break;
              }
              unint64_t v22 = *(void *)(v34 + 8 * v11);
              ++v23;
              if (v22) {
                goto LABEL_20;
              }
            }
          }
LABEL_34:
          swift_release();
          return v33;
        }
      }
    }
LABEL_19:
    int64_t v11 = v23;
    goto LABEL_20;
  }
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t StaticMatterDevice.set(displayName:)(uint64_t a1, uint64_t a2)
{
  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  uint64_t v6 = (uint64_t (__cdecl *)())((char *)&dword_269BA1370 + dword_269BA1370);
  uint64_t v4 = (void *)swift_task_alloc();
  v3[18] = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_251AC31EC;
  return v6();
}

uint64_t sub_251AC31EC(uint64_t a1)
{
  *(void *)(*(void *)v1 + 152) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251AC32EC, 0, 0);
}

uint64_t sub_251AC32EC()
{
  uint64_t v1 = (void *)v0[19];
  if (v1)
  {
    uint64_t v2 = v0[17];
    uint64_t v3 = type metadata accessor for StaticMatterDevice();
    uint64_t v4 = HMHomeManager.accessory(with:inHomeWithID:)(*(void *)(v2 + *(int *)(v3 + 20)), v2 + *(int *)(v3 + 36));
  }
  else
  {
    uint64_t v4 = 0;
  }
  v0[20] = v4;
  uint64_t v7 = (uint64_t (*)(void))((char *)&dword_269BA1370 + dword_269BA1370);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[21] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_251AC33D0;
  return v7();
}

uint64_t sub_251AC33D0(uint64_t a1)
{
  *(void *)(*(void *)v1 + 176) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251AC34D0, 0, 0);
}

uint64_t sub_251AC34D0()
{
  uint64_t v1 = (void *)v0[22];
  if (v1)
  {
    uint64_t v2 = v0[17];
    uint64_t v3 = type metadata accessor for StaticMatterDevice();
    uint64_t v4 = *(void *)(v2 + *(int *)(v3 + 20));
    uint64_t v5 = v2 + *(int *)(v3 + 36);
    id v6 = v1;
    HMHomeManager.matterDevice(with:inHomeWithID:)(v4, v5);

    swift_unknownObjectRelease();
  }
  uint64_t v7 = (void *)v0[20];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = sub_251F356C0();
    v0[23] = v9;
    v0[2] = v0;
    v0[3] = sub_251AC3680;
    uint64_t v10 = swift_continuation_init();
    v0[10] = MEMORY[0x263EF8330];
    v0[11] = 0x40000000;
    v0[12] = sub_251A5B804;
    v0[13] = &block_descriptor_2;
    v0[14] = v10;
    objc_msgSend(v8, sel_updateName_completionHandler_, v9, v0 + 10);
    return MEMORY[0x270FA23F0](v0 + 2);
  }
  else
  {
    int64_t v11 = (uint64_t (*)(void))v0[1];
    return v11();
  }
}

uint64_t sub_251AC3680()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 192) = v1;
  if (v1) {
    uint64_t v2 = sub_251AC3800;
  }
  else {
    uint64_t v2 = sub_251AC3790;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_251AC3790()
{
  uint64_t v1 = *(void **)(v0 + 160);

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_251AC3800()
{
  uint64_t v1 = (void *)v0[23];
  uint64_t v2 = (void *)v0[20];
  swift_willThrow();

  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t StaticMatterDevice.set(favorite:)(char a1)
{
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 64) = a1;
  uint64_t v5 = (uint64_t (__cdecl *)())((char *)&dword_269BA1370 + dword_269BA1370);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_251AC3924;
  return v5();
}

uint64_t sub_251AC3924(uint64_t a1)
{
  *(void *)(*(void *)v1 + 32) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251AC3A24, 0, 0);
}

uint64_t sub_251AC3A24()
{
  uint64_t v1 = (void *)v0[4];
  if (v1)
  {
    uint64_t v2 = v0[2];
    uint64_t v3 = type metadata accessor for StaticMatterDevice();
    uint64_t v4 = HMHomeManager.accessory(with:inHomeWithID:)(*(void *)(v2 + *(int *)(v3 + 20)), v2 + *(int *)(v3 + 36));
  }
  else
  {
    uint64_t v4 = 0;
  }
  v0[5] = v4;
  uint64_t v7 = (uint64_t (*)(void))((char *)&dword_269BA1370 + dword_269BA1370);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[6] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_251AC3B08;
  return v7();
}

uint64_t sub_251AC3B08(uint64_t a1)
{
  *(void *)(*(void *)v1 + 56) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251AC3C08, 0, 0);
}

uint64_t sub_251AC3C08()
{
  uint64_t v1 = *(void **)(v0 + 56);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 16);
    uint64_t v3 = type metadata accessor for StaticMatterDevice();
    uint64_t v4 = *(void *)(v2 + *(int *)(v3 + 20));
    uint64_t v5 = v2 + *(int *)(v3 + 36);
    id v6 = v1;
    HMHomeManager.matterDevice(with:inHomeWithID:)(v4, v5);

    swift_unknownObjectRelease();
  }
  uint64_t v7 = *(void **)(v0 + 40);
  if (v7)
  {
    char v8 = *(unsigned char *)(v0 + 64);
    id v9 = v7;
    HMAccessory.isFavorite.setter(v8);
  }
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t StaticMatterDevice.set(showInDashboard:)(char a1)
{
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 64) = a1;
  uint64_t v5 = (uint64_t (__cdecl *)())((char *)&dword_269BA1370 + dword_269BA1370);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_251AC3D88;
  return v5();
}

uint64_t sub_251AC3D88(uint64_t a1)
{
  *(void *)(*(void *)v1 + 32) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251AC3E88, 0, 0);
}

uint64_t sub_251AC3E88()
{
  uint64_t v1 = (void *)v0[4];
  if (v1)
  {
    uint64_t v2 = v0[2];
    uint64_t v3 = type metadata accessor for StaticMatterDevice();
    uint64_t v4 = HMHomeManager.accessory(with:inHomeWithID:)(*(void *)(v2 + *(int *)(v3 + 20)), v2 + *(int *)(v3 + 36));
  }
  else
  {
    uint64_t v4 = 0;
  }
  v0[5] = v4;
  uint64_t v7 = (uint64_t (*)(void))((char *)&dword_269BA1370 + dword_269BA1370);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[6] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_251AC3F6C;
  return v7();
}

uint64_t sub_251AC3F6C(uint64_t a1)
{
  *(void *)(*(void *)v1 + 56) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251AC406C, 0, 0);
}

uint64_t sub_251AC406C()
{
  uint64_t v1 = *(void **)(v0 + 56);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 16);
    uint64_t v3 = type metadata accessor for StaticMatterDevice();
    uint64_t v4 = *(void *)(v2 + *(int *)(v3 + 20));
    uint64_t v5 = v2 + *(int *)(v3 + 36);
    id v6 = v1;
    HMHomeManager.matterDevice(with:inHomeWithID:)(v4, v5);

    swift_unknownObjectRelease();
  }
  uint64_t v7 = *(void **)(v0 + 40);
  if (v7)
  {
    char v8 = *(unsigned char *)(v0 + 64);
    id v9 = v7;
    HMAccessory.shouldShowInDashboard.setter(v8);
  }
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t StaticMatterDevice.set(customIconSymbol:)(uint64_t a1, uint64_t a2)
{
  v3[7] = a2;
  v3[8] = v2;
  v3[6] = a1;
  id v6 = (uint64_t (__cdecl *)())((char *)&dword_269BA1370 + dword_269BA1370);
  uint64_t v4 = (void *)swift_task_alloc();
  v3[9] = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_251AC41EC;
  return v6();
}

uint64_t sub_251AC41EC(uint64_t a1)
{
  *(void *)(*(void *)v1 + 80) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251AC42EC, 0, 0);
}

uint64_t sub_251AC42EC()
{
  uint64_t v1 = (void *)v0[10];
  if (v1)
  {
    uint64_t v2 = v0[8];
    uint64_t v3 = type metadata accessor for StaticMatterDevice();
    uint64_t v4 = HMHomeManager.accessory(with:inHomeWithID:)(*(void *)(v2 + *(int *)(v3 + 20)), v2 + *(int *)(v3 + 36));
  }
  uint64_t v7 = (uint64_t (*)(void))((char *)&dword_269BA1370 + dword_269BA1370);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[11] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_251AC43C8;
  return v7();
}

uint64_t sub_251AC43C8(uint64_t a1)
{
  *(void *)(*(void *)v1 + 96) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251AC44C8, 0, 0);
}

uint64_t sub_251AC44C8()
{
  uint64_t v16 = v0;
  uint64_t v1 = *(void **)(v0 + 96);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 64);
    uint64_t v3 = type metadata accessor for StaticMatterDevice();
    uint64_t v4 = *(void *)(v2 + *(int *)(v3 + 20));
    uint64_t v5 = v2 + *(int *)(v3 + 36);
    id v6 = v1;
    id v7 = HMHomeManager.matterDevice(with:inHomeWithID:)(v4, v5);
    uint64_t v9 = v8;

    if (v7)
    {
      uint64_t v10 = *(void *)(v0 + 56);
      char v15 = 2;
      if (v10)
      {
        uint64_t v11 = *(void *)(v0 + 48);
        *(void *)(v0 + 40) = MEMORY[0x263F8D310];
        *(void *)(v0 + 16) = v11;
        *(void *)(v0 + 24) = v10;
      }
      else
      {
        *(_OWORD *)(v0 + 16) = 0u;
        *(_OWORD *)(v0 + 32) = 0u;
      }
      uint64_t ObjectType = swift_getObjectType();
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      MatterDevice.setClientData(key:value:)(&v15, v0 + 16, ObjectType, v9);
      swift_unknownObjectRelease_n();
      sub_251A1B064(v0 + 16, &qword_26B21E190);
    }
  }
  uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

uint64_t StaticMatterDevice.set(includedInStatus:)(char a1)
{
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 64) = a1;
  uint64_t v5 = (uint64_t (__cdecl *)())((char *)&dword_269BA1370 + dword_269BA1370);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_251AC46A8;
  return v5();
}

uint64_t sub_251AC46A8(uint64_t a1)
{
  *(void *)(*(void *)v1 + 32) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251AC47A8, 0, 0);
}

uint64_t sub_251AC47A8()
{
  uint64_t v1 = (void *)v0[4];
  if (v1)
  {
    uint64_t v2 = v0[2];
    uint64_t v3 = type metadata accessor for StaticMatterDevice();
    uint64_t v4 = HMHomeManager.accessory(with:inHomeWithID:)(*(void *)(v2 + *(int *)(v3 + 20)), v2 + *(int *)(v3 + 36));
  }
  else
  {
    uint64_t v4 = 0;
  }
  v0[5] = v4;
  id v7 = (uint64_t (*)(void))((char *)&dword_269BA1370 + dword_269BA1370);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[6] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_251AC488C;
  return v7();
}

uint64_t sub_251AC488C(uint64_t a1)
{
  *(void *)(*(void *)v1 + 56) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251AC498C, 0, 0);
}

uint64_t sub_251AC498C()
{
  uint64_t v1 = *(void **)(v0 + 56);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 16);
    uint64_t v3 = type metadata accessor for StaticMatterDevice();
    uint64_t v4 = *(void *)(v2 + *(int *)(v3 + 20));
    uint64_t v5 = v2 + *(int *)(v3 + 36);
    id v6 = v1;
    HMHomeManager.matterDevice(with:inHomeWithID:)(v4, v5);

    swift_unknownObjectRelease();
  }
  id v7 = *(void **)(v0 + 40);
  if (v7)
  {
    char v8 = *(unsigned char *)(v0 + 64);
    id v9 = v7;
    HMAccessory.contributesToHomeStatus.setter(v8);
  }
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t StaticMatterDevice.set(tileSize:)(unsigned char *a1)
{
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 64) = *a1;
  uint64_t v5 = (uint64_t (__cdecl *)())((char *)&dword_269BA1370 + dword_269BA1370);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_251AC4B10;
  return v5();
}

uint64_t sub_251AC4B10(uint64_t a1)
{
  *(void *)(*(void *)v1 + 32) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251AC4C10, 0, 0);
}

uint64_t sub_251AC4C10()
{
  uint64_t v1 = (void *)v0[4];
  if (v1)
  {
    uint64_t v2 = v0[2];
    uint64_t v3 = type metadata accessor for StaticMatterDevice();
    uint64_t v4 = HMHomeManager.accessory(with:inHomeWithID:)(*(void *)(v2 + *(int *)(v3 + 20)), v2 + *(int *)(v3 + 36));
  }
  else
  {
    uint64_t v4 = 0;
  }
  v0[5] = v4;
  id v7 = (uint64_t (*)(void))((char *)&dword_269BA1370 + dword_269BA1370);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[6] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_251AC4CF4;
  return v7();
}

uint64_t sub_251AC4CF4(uint64_t a1)
{
  *(void *)(*(void *)v1 + 56) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251AC4DF4, 0, 0);
}

uint64_t sub_251AC4DF4()
{
  uint64_t v1 = *(void **)(v0 + 56);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 16);
    uint64_t v3 = type metadata accessor for StaticMatterDevice();
    uint64_t v4 = *(void *)(v2 + *(int *)(v3 + 20));
    uint64_t v5 = v2 + *(int *)(v3 + 36);
    id v6 = v1;
    HMHomeManager.matterDevice(with:inHomeWithID:)(v4, v5);

    swift_unknownObjectRelease();
  }
  id v7 = *(void **)(v0 + 40);
  if (v7)
  {
    int v8 = *(unsigned __int8 *)(v0 + 64);
    if (v8 == 2)
    {
      id v9 = v7;
      char v10 = 0;
    }
    else
    {
      if (v8) {
        char v10 = 1;
      }
      else {
        char v10 = sub_251F36B10();
      }
      id v11 = v7;
      swift_bridgeObjectRelease();
    }
    sub_251AC4F34(v10 & 1);
  }
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

void sub_251AC4F34(char a1)
{
  if (a1 != 2)
  {
    id v2 = objc_msgSend(v1, sel_applicationData);
    uint64_t v3 = (void *)sub_251F356C0();
    uint64_t v4 = (void *)sub_251F356C0();
    objc_msgSend(v2, sel_setObject_forKeyedSubscript_, v3, v4);

    swift_bridgeObjectRelease();
    id v5 = objc_msgSend(v1, sel_applicationData);
    void v7[4] = sub_251EAED08;
    v7[5] = 0;
    v7[0] = MEMORY[0x263EF8330];
    v7[1] = 1107296256;
    v7[2] = sub_251C97A44;
    v7[3] = &block_descriptor_25_0;
    id v6 = _Block_copy(v7);
    objc_msgSend(v1, sel_updateApplicationData_completionHandler_, v5, v6);
    _Block_release(v6);
  }
}

uint64_t sub_251AC50C0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_251AC65E8((unint64_t *)&qword_26B21F280, (void (*)(uint64_t))type metadata accessor for DataModel);
  sub_251F34F10();
  swift_release();
  uint64_t v4 = (uint64_t *)(v3 + OBJC_IVAR____TtC13HomeDataModel9DataModel__currentMatterSnapshot);
  swift_beginAccess();
  uint64_t v6 = *v4;
  uint64_t v5 = v4[1];
  uint64_t v8 = v4[2];
  uint64_t v7 = v4[3];
  *a2 = v6;
  a2[1] = v5;
  a2[2] = v8;
  a2[3] = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_251AC51A4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_251AC52B8()
{
  return sub_251AC52DC();
}

uint64_t sub_251AC52C4()
{
  return sub_251AC52DC();
}

uint64_t sub_251AC52D0()
{
  return sub_251AC52DC();
}

uint64_t sub_251AC52DC()
{
  id v1 = objc_msgSend(v0, sel_applicationData);
  id v2 = (void *)sub_251F356C0();
  id v3 = objc_msgSend(v1, sel_objectForKeyedSubscript_, v2);

  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EB50);
    swift_dynamicCast();
  }
  uint64_t v4 = sub_251F36750();
  swift_bridgeObjectRelease();
  if (v4 == 1) {
    unsigned int v5 = 1;
  }
  else {
    unsigned int v5 = 2;
  }
  if (v4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t sub_251AC53E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 40);
  uint64_t v5 = sub_251F34DA0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t type metadata accessor for StaticMatterDevice()
{
  uint64_t result = qword_26B21F6D0;
  if (!qword_26B21F6D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_251AC549C(uint64_t isStackAllocationSafe)
{
  uint64_t v2 = isStackAllocationSafe;
  v9[1] = *MEMORY[0x263EF8340];
  char v3 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v4 = (unint64_t)((1 << v3) + 63) >> 6;
  size_t v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    bzero((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    uint64_t v6 = sub_251AC5600((uint64_t)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v4, v2);
    swift_release();
    if (v1) {
      swift_willThrow();
    }
  }
  else
  {
    uint64_t v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    uint64_t v6 = sub_251AC5600((uint64_t)v7, v4, v2);
    swift_release();
    MEMORY[0x2533AC760](v7, -1, -1);
  }
  return v6;
}

uint64_t sub_251AC5600(uint64_t result, uint64_t a2, uint64_t a3)
{
  size_t v5 = (unint64_t *)result;
  uint64_t v6 = 0;
  int64_t v7 = 0;
  uint64_t v8 = a3 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(a3 + 56);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v7 << 6);
      goto LABEL_5;
    }
    int64_t v15 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_24;
    }
    if (v15 >= v12) {
      goto LABEL_22;
    }
    unint64_t v16 = *(void *)(v8 + 8 * v15);
    ++v7;
    if (!v16)
    {
      int64_t v7 = v15 + 1;
      if (v15 + 1 >= v12) {
        goto LABEL_22;
      }
      unint64_t v16 = *(void *)(v8 + 8 * v7);
      if (!v16) {
        break;
      }
    }
LABEL_18:
    unint64_t v18 = __clz(__rbit64(v16));
    unint64_t v11 = (v16 - 1) & v16;
    unint64_t v14 = v18 + (v7 << 6);
LABEL_5:
    if (*(unsigned __int8 *)(*(void *)(a3 + 48) + v14) >= 3u)
    {
      *(void *)(result + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      if (__OFADD__(v6++, 1))
      {
        __break(1u);
LABEL_22:
        swift_retain();
        return sub_251F1B24C(v5, a2, v6, a3);
      }
    }
  }
  int64_t v17 = v15 + 2;
  if (v17 >= v12) {
    goto LABEL_22;
  }
  unint64_t v16 = *(void *)(v8 + 8 * v17);
  if (v16)
  {
    int64_t v7 = v17;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v7 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v7 >= v12) {
      goto LABEL_22;
    }
    unint64_t v16 = *(void *)(v8 + 8 * v7);
    ++v17;
    if (v16) {
      goto LABEL_18;
    }
  }
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_251AC5768(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_251AC57F0@<X0>(uint64_t a1@<X0>, int a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return sub_251AC581C(a1, a2, a3, a4, (uint64_t (*)(void))type metadata accessor for StaticEndpoint, (uint64_t (*)(void))type metadata accessor for StaticEndpoint, a5);
}

uint64_t sub_251AC581C@<X0>(uint64_t result@<X0>, int a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t (*a5)(void)@<X4>, uint64_t (*a6)(void)@<X5>, uint64_t a7@<X8>)
{
  if (a3) {
    goto LABEL_10;
  }
  uint64_t v7 = result;
  if (result < 0 || 1 << *(unsigned char *)(a4 + 32) <= result)
  {
    __break(1u);
  }
  else if ((*(void *)(a4 + 8 * ((unint64_t)result >> 6) + 64) >> result))
  {
    if (*(_DWORD *)(a4 + 36) == a2)
    {
      uint64_t v10 = *(void *)(a4 + 56);
      uint64_t v11 = a5(0);
      return sub_251AC7BB4(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v7, a7, a6);
    }
    goto LABEL_9;
  }
  __break(1u);
LABEL_9:
  __break(1u);
LABEL_10:
  __break(1u);
  return result;
}

uint64_t _s13HomeDataModel18StaticMatterDeviceV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((sub_251F34D70() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for StaticMatterDevice();
  if (*(void *)(a1 + *(int *)(v4 + 20)) != *(void *)(a2 + *(int *)(v4 + 20))) {
    return 0;
  }
  char v5 = (int *)v4;
  uint64_t v6 = *(int *)(v4 + 24);
  uint64_t v7 = *(void *)(a1 + v6);
  uint64_t v8 = *(void *)(a1 + v6 + 8);
  uint64_t v9 = (void *)(a2 + v6);
  BOOL v10 = v7 == *v9 && v8 == v9[1];
  if (!v10 && (sub_251F36B10() & 1) == 0
    || *(void *)(a1 + v5[7]) != *(void *)(a2 + v5[7])
    || (sub_251B05988(*(void *)(a1 + v5[8]), *(void *)(a2 + v5[8])) & 1) == 0
    || (sub_251F34D70() & 1) == 0
    || (sub_251F34D70() & 1) == 0)
  {
    return 0;
  }
  uint64_t v11 = v5[11];
  int64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = *(void *)(a1 + v11 + 8);
  unint64_t v14 = (void *)(a2 + v11);
  uint64_t v15 = v14[1];
  if (v13)
  {
    if (!v15 || (*v12 != *v14 || v13 != v15) && (sub_251F36B10() & 1) == 0) {
      return 0;
    }
  }
  else if (v15)
  {
    return 0;
  }
  if ((sub_251AFB9D8(*(void *)(a1 + v5[12]), *(void *)(a2 + v5[12])) & 1) == 0) {
    return 0;
  }
  uint64_t v16 = v5[13];
  return static MatterTileMetadata.== infix(_:_:)(a1 + v16, a2 + v16);
}

unint64_t sub_251AC5A28()
{
  unint64_t result = qword_269B9D878;
  if (!qword_269B9D878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9D878);
  }
  return result;
}

unint64_t sub_251AC5A7C()
{
  unint64_t result = qword_269B9D898;
  if (!qword_269B9D898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9D898);
  }
  return result;
}

unint64_t sub_251AC5AD0()
{
  unint64_t result = qword_269B9D8A8;
  if (!qword_269B9D8A8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B9D8A0);
    sub_251AC65E8(&qword_269B9CE18, (void (*)(uint64_t))type metadata accessor for StaticEndpoint);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9D8A8);
  }
  return result;
}

uint64_t sub_251AC5B7C(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B9D888);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_251AC5BEC()
{
  unint64_t result = qword_269B9D8D0;
  if (!qword_269B9D8D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9D8D0);
  }
  return result;
}

unint64_t sub_251AC5C40()
{
  unint64_t result = qword_269B9D8D8;
  if (!qword_269B9D8D8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B9D8A0);
    sub_251AC65E8(&qword_269B9CE40, (void (*)(uint64_t))type metadata accessor for StaticEndpoint);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9D8D8);
  }
  return result;
}

uint64_t sub_251AC5CEC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_251B949C0(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_251AC5D08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_251AC5D78(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    uint64_t v6 = sub_251F34DA0();
    uint64_t v7 = *(void *)(v6 - 8);
    uint64_t v8 = v7;
    uint64_t v9 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v20 = *(void *)(v7 + 72);
    uint64_t v24 = (void (**)(char *, void, uint64_t, uint64_t))(v7 + 56);
    uint64_t v11 = v7 + 16;
    BOOL v10 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    uint64_t v22 = v11;
    int64_t v23 = v10;
    uint64_t v21 = (uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
    v19[1] = v8 + 8;
    v19[2] = v8 + 32;
    while (1)
    {
      v23(v4, v9, v6);
      (*v24)(v4, 0, 1, v6);
      uint64_t result = (*v21)(v4, 1, v6);
      if (result == 1) {
        break;
      }
      uint64_t v13 = MEMORY[0x270FA5388](result);
      uint64_t v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
      MEMORY[0x270FA5388](v13);
      int64_t v17 = (char *)v19 - v16;
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))((char *)v19 - v16, v4, v6);
      sub_251A637B8(v15, v17);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v15, v6);
      v9 += v20;
      if (!--v5) {
        goto LABEL_5;
      }
    }
  }
  else
  {
LABEL_5:
    uint64_t v18 = sub_251F34DA0();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v4, 1, 1, v18);
  }
  return result;
}

uint64_t sub_251AC6004(uint64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_10;
  }
  if (result < 0 || 1 << *(unsigned char *)(a4 + 32) <= result)
  {
    __break(1u);
  }
  else if ((*(void *)(a4 + 8 * ((unint64_t)result >> 6) + 64) >> result))
  {
    if (*(_DWORD *)(a4 + 36) == a2) {
      return *(void *)(*(void *)(a4 + 48) + 8 * result);
    }
    goto LABEL_9;
  }
  __break(1u);
LABEL_9:
  __break(1u);
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_251AC605C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x644965646F6ELL && a2 == 0xE600000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6574617473 && a2 == 0xE500000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7954656369766564 && a2 == 0xEB00000000736570 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6449656D6F68 && a2 == 0xE600000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x64496D6F6F72 && a2 == 0xE600000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x656D614E6D6F6F72 && a2 == 0xE800000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x746E696F70646E65 && a2 == 0xE900000000000073 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x617461646174656DLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 9;
    }
    else {
      return 10;
    }
  }
}

uint64_t sub_251AC644C()
{
  return sub_251AC7B6C((unint64_t *)&qword_26B21F2B0, MEMORY[0x270FA9648]);
}

uint64_t sub_251AC647C()
{
  return sub_251AC65E8(&qword_269B9D940, (void (*)(uint64_t))type metadata accessor for StaticMatterDevice);
}

uint64_t sub_251AC64C4(void *a1)
{
  a1[1] = sub_251AC65E8(&qword_269B9D950, (void (*)(uint64_t))type metadata accessor for StaticMatterDevice);
  a1[2] = sub_251AC65E8(&qword_269B9D958, (void (*)(uint64_t))type metadata accessor for StaticMatterDevice);
  a1[3] = sub_251AC65E8(&qword_269B9CE30, (void (*)(uint64_t))type metadata accessor for StaticMatterDevice);
  a1[4] = sub_251AC65E8(&qword_269B9CE00, (void (*)(uint64_t))type metadata accessor for StaticMatterDevice);
  a1[5] = sub_251AC65E8(&qword_269B9D960, (void (*)(uint64_t))type metadata accessor for StaticMatterDevice);
  uint64_t result = sub_251AC65E8(&qword_269B9D968, (void (*)(uint64_t))type metadata accessor for StaticMatterDevice);
  a1[6] = result;
  return result;
}

uint64_t sub_251AC65E8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for StaticMatterDevice(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v34 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v34 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_251F34DA0();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    BOOL v10 = (uint64_t *)((char *)a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    uint64_t v12 = v11[1];
    *BOOL v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = a3[8];
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    *(uint64_t *)((char *)a1 + v13) = *(uint64_t *)((char *)a2 + v13);
    uint64_t v14 = a3[9];
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v8((uint64_t *)v15, (uint64_t *)v16, v7);
    v8((uint64_t *)((char *)a1 + a3[10]), (uint64_t *)((char *)a2 + a3[10]), v7);
    uint64_t v17 = a3[11];
    uint64_t v18 = a3[12];
    unint64_t v19 = (uint64_t *)((char *)a1 + v17);
    uint64_t v20 = (uint64_t *)((char *)a2 + v17);
    uint64_t v21 = v20[1];
    *unint64_t v19 = *v20;
    v19[1] = v21;
    *(uint64_t *)((char *)a1 + v18) = *(uint64_t *)((char *)a2 + v18);
    uint64_t v22 = a3[13];
    int64_t v23 = (char *)a1 + v22;
    uint64_t v24 = (char *)a2 + v22;
    uint64_t v25 = *(uint64_t *)((char *)a2 + v22 + 8);
    *(void *)int64_t v23 = *(uint64_t *)((char *)a2 + v22);
    *((void *)v23 + 1) = v25;
    uint64_t v26 = *(uint64_t *)((char *)a2 + v22 + 24);
    *((void *)v23 + 2) = *(uint64_t *)((char *)a2 + v22 + 16);
    *((void *)v23 + 3) = v26;
    uint64_t v27 = *(uint64_t *)((char *)a2 + v22 + 40);
    *((void *)v23 + 4) = *(uint64_t *)((char *)a2 + v22 + 32);
    *((void *)v23 + 5) = v27;
    *((_DWORD *)v23 + 12) = *(_DWORD *)((char *)a2 + v22 + 48);
    uint64_t v28 = *(int *)(type metadata accessor for MatterTileMetadata() + 44);
    __dst = &v23[v28];
    unint64_t v29 = &v24[v28];
    uint64_t v30 = sub_251F34D20();
    uint64_t v31 = *(void *)(v30 - 8);
    uint64_t v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v32(v29, 1, v30))
    {
      uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
      memcpy(__dst, v29, *(void *)(*(void *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 16))(__dst, v29, v30);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(__dst, 0, 1, v30);
    }
  }
  return a1;
}

uint64_t destroy for StaticMatterDevice(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_251F34DA0();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5(a1 + a2[9], v4);
  v5(a1 + a2[10], v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + a2[13];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = v6 + *(int *)(type metadata accessor for MatterTileMetadata() + 44);
  uint64_t v8 = sub_251F34D20();
  uint64_t v11 = *(void *)(v8 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v7, 1, v8);
  if (!result)
  {
    BOOL v10 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
    return v10(v7, v8);
  }
  return result;
}

uint64_t initializeWithCopy for StaticMatterDevice(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v9 = (void *)(a1 + v8);
  BOOL v10 = (void *)(a2 + v8);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  uint64_t v13 = a3[9];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7(v14, v15, v6);
  v7(a1 + a3[10], a2 + a3[10], v6);
  uint64_t v16 = a3[11];
  uint64_t v17 = a3[12];
  uint64_t v18 = (void *)(a1 + v16);
  unint64_t v19 = (void *)(a2 + v16);
  uint64_t v20 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v20;
  *(void *)(a1 + v17) = *(void *)(a2 + v17);
  uint64_t v21 = a3[13];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = *(void *)(a2 + v21 + 8);
  *(void *)uint64_t v22 = *(void *)(a2 + v21);
  *(void *)(v22 + 8) = v24;
  uint64_t v25 = *(void *)(a2 + v21 + 24);
  *(void *)(v22 + 16) = *(void *)(a2 + v21 + 16);
  *(void *)(v22 + 24) = v25;
  uint64_t v26 = *(void *)(a2 + v21 + 40);
  *(void *)(v22 + 32) = *(void *)(a2 + v21 + 32);
  *(void *)(v22 + 40) = v26;
  *(_DWORD *)(v22 + 48) = *(_DWORD *)(a2 + v21 + 48);
  uint64_t v27 = *(int *)(type metadata accessor for MatterTileMetadata() + 44);
  __dst = (void *)(v22 + v27);
  uint64_t v28 = (const void *)(v23 + v27);
  uint64_t v29 = sub_251F34D20();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v30 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v31(v28, 1, v29))
  {
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    memcpy(__dst, v28, *(void *)(*(void *)(v32 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v30 + 16))(__dst, v28, v29);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v30 + 56))(__dst, 0, 1, v29);
  }
  return a1;
}

uint64_t assignWithCopy for StaticMatterDevice(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v8);
  BOOL v10 = (void *)(a2 + v8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7(a1 + a3[9], a2 + a3[9], v6);
  v7(a1 + a3[10], a2 + a3[10], v6);
  uint64_t v11 = a3[11];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[13];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(void *)uint64_t v15 = *(void *)(a2 + v14);
  *(void *)(v15 + 8) = *(void *)(a2 + v14 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v15 + 16) = *(void *)(v16 + 16);
  *(void *)(v15 + 24) = *(void *)(v16 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v15 + 32) = *(void *)(v16 + 32);
  *(void *)(v15 + 40) = *(void *)(v16 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v15 + 48) = *(unsigned char *)(v16 + 48);
  *(unsigned char *)(v15 + 49) = *(unsigned char *)(v16 + 49);
  *(unsigned char *)(v15 + 50) = *(unsigned char *)(v16 + 50);
  *(unsigned char *)(v15 + 51) = *(unsigned char *)(v16 + 51);
  uint64_t v17 = *(int *)(type metadata accessor for MatterTileMetadata() + 44);
  uint64_t v18 = (void *)(v15 + v17);
  unint64_t v19 = (void *)(v16 + v17);
  uint64_t v20 = sub_251F34D20();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v21 + 48);
  int v23 = v22(v18, 1, v20);
  int v24 = v22(v19, 1, v20);
  if (!v23)
  {
    if (!v24)
    {
      (*(void (**)(void *, void *, uint64_t))(v21 + 24))(v18, v19, v20);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v21 + 8))(v18, v20);
    goto LABEL_6;
  }
  if (v24)
  {
LABEL_6:
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    memcpy(v18, v19, *(void *)(*(void *)(v25 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v21 + 16))(v18, v19, v20);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
  return a1;
}

uint64_t initializeWithTake for StaticMatterDevice(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  uint64_t v9 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v9) = *(void *)(a2 + v9);
  v7(a1 + a3[9], a2 + a3[9], v6);
  v7(a1 + a3[10], a2 + a3[10], v6);
  uint64_t v10 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  *(void *)(a1 + v10) = *(void *)(a2 + v10);
  uint64_t v11 = a3[13];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  long long v14 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v14;
  *(_OWORD *)(v12 + 32) = *(_OWORD *)(v13 + 32);
  *(_DWORD *)(v12 + 48) = *(_DWORD *)(v13 + 48);
  uint64_t v15 = *(int *)(type metadata accessor for MatterTileMetadata() + 44);
  uint64_t v16 = (void *)(v12 + v15);
  uint64_t v17 = (const void *)(v13 + v15);
  uint64_t v18 = sub_251F34D20();
  uint64_t v19 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v19 + 32))(v16, v17, v18);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  return a1;
}

uint64_t assignWithTake for StaticMatterDevice(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  swift_bridgeObjectRelease();
  v7(a1 + a3[9], a2 + a3[9], v6);
  v7(a1 + a3[10], a2 + a3[10], v6);
  uint64_t v14 = a3[11];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (uint64_t *)(a2 + v14);
  uint64_t v18 = *v16;
  uint64_t v17 = v16[1];
  *uint64_t v15 = v18;
  v15[1] = v17;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[13];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = *(void *)(a2 + v19 + 8);
  *(void *)uint64_t v20 = *(void *)(a2 + v19);
  *(void *)(v20 + 8) = v22;
  swift_bridgeObjectRelease();
  uint64_t v23 = *(void *)(v21 + 24);
  *(void *)(v20 + 16) = *(void *)(v21 + 16);
  *(void *)(v20 + 24) = v23;
  swift_bridgeObjectRelease();
  uint64_t v24 = *(void *)(v21 + 40);
  *(void *)(v20 + 32) = *(void *)(v21 + 32);
  *(void *)(v20 + 40) = v24;
  swift_bridgeObjectRelease();
  *(_DWORD *)(v20 + 48) = *(_DWORD *)(v21 + 48);
  uint64_t v25 = *(int *)(type metadata accessor for MatterTileMetadata() + 44);
  uint64_t v26 = (void *)(v20 + v25);
  uint64_t v27 = (void *)(v21 + v25);
  uint64_t v28 = sub_251F34D20();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v29 + 48);
  LODWORD(v7) = v30(v26, 1, v28);
  int v31 = v30(v27, 1, v28);
  if (!v7)
  {
    if (!v31)
    {
      (*(void (**)(void *, void *, uint64_t))(v29 + 40))(v26, v27, v28);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v29 + 8))(v26, v28);
    goto LABEL_6;
  }
  if (v31)
  {
LABEL_6:
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
    memcpy(v26, v27, *(void *)(*(void *)(v32 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v29 + 32))(v26, v27, v28);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
  return a1;
}

uint64_t getEnumTagSinglePayload for StaticMatterDevice(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251AC74E4);
}

uint64_t sub_251AC74E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = type metadata accessor for MatterTileMetadata();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 52);
    return v12(v14, a2, v13);
  }
}

uint64_t storeEnumTagSinglePayload for StaticMatterDevice(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251AC7628);
}

uint64_t sub_251AC7628(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_251F34DA0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = type metadata accessor for MatterTileMetadata();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 52);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t sub_251AC7758()
{
  uint64_t result = sub_251F34DA0();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for MatterTileMetadata();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for StaticMatterDevice.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *uint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251AC7924);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StaticMatterDevice.CodingKeys()
{
  return &type metadata for StaticMatterDevice.CodingKeys;
}

unint64_t sub_251AC7960()
{
  unint64_t result = qword_269B9D970;
  if (!qword_269B9D970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9D970);
  }
  return result;
}

unint64_t sub_251AC79B8()
{
  unint64_t result = qword_269B9D978;
  if (!qword_269B9D978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9D978);
  }
  return result;
}

unint64_t sub_251AC7A10()
{
  unint64_t result = qword_269B9D980;
  if (!qword_269B9D980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9D980);
  }
  return result;
}

uint64_t sub_251AC7A64(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_251AC7ACC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_251AC7B2C()
{
  unint64_t result = qword_26B21F170;
  if (!qword_26B21F170)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B21F170);
  }
  return result;
}

uint64_t sub_251AC7B6C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_251AC7BB4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_251AC7C1C()
{
  return sub_251B765BC(v0[2], v0[3], v0[4], v0[5], v0[6]);
}

HMHome_optional __swiftcall StaticHome.get(from:)(HMHomeManager from)
{
  id v2 = [(objc_class *)from.super.isa homes];
  sub_251A1A568(0, (unint64_t *)&qword_26B21F2D0);
  unint64_t v3 = sub_251F35AC0();

  uint64_t v8 = v1;
  unsigned int v4 = (objc_class *)sub_251A95638(sub_251AC7D1C, (uint64_t)&v7, v3);
  swift_bridgeObjectRelease();
  unsigned int v6 = v4;
  result.value.super.isa = v6;
  result.is_nil = v5;
  return result;
}

uint64_t sub_251AC7D00(id *a1)
{
  return sub_251AC9A8C(a1) & 1;
}

uint64_t sub_251AC7D1C(id *a1)
{
  return sub_251AC9A8C(a1) & 1;
}

void *sub_251AC7D3C(void *a1)
{
  id v2 = objc_msgSend(a1, sel_homes);
  sub_251A1A568(0, (unint64_t *)&qword_26B21F2D0);
  unint64_t v3 = sub_251F35AC0();

  uint64_t v7 = v1;
  unsigned int v4 = sub_251A95638(sub_251ACBB2C, (uint64_t)&v6, v3);
  swift_bridgeObjectRelease();
  return v4;
}

HMAccessory_optional __swiftcall StaticAccessory.get(from:)(HMHomeManager from)
{
  id v2 = [(objc_class *)from.super.isa homes];
  sub_251A1A568(0, (unint64_t *)&qword_26B21F2D0);
  unint64_t v3 = sub_251F35AC0();

  uint64_t v14 = v1;
  unsigned int v4 = sub_251A95638(sub_251AC7F48, (uint64_t)v13, v3);
  swift_bridgeObjectRelease();
  if (v4)
  {
    id v6 = v4;
    id v7 = objc_msgSend(v6, sel_accessories);
    sub_251A1A568(0, (unint64_t *)&qword_26B21EAF8);
    unint64_t v8 = sub_251F35AC0();

    MEMORY[0x270FA5388](v9);
    void v12[2] = v1;
    unint64_t v10 = (objc_class *)sub_251A95638(sub_251ACBB2C, (uint64_t)v12, v8);

    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v10 = 0;
  }
  uint64_t v11 = v10;
  result.value.super.isa = v11;
  result.is_nil = v5;
  return result;
}

uint64_t sub_251AC7F48(id *a1)
{
  return sub_251AC8BA8(a1, *(void *)(v1 + 16), (void (*)(void))type metadata accessor for StaticAccessory) & 1;
}

HMAccessory_optional __swiftcall StaticAccessory.get(from:)(HMHome from)
{
  id v2 = [(objc_class *)from.super.isa accessories];
  sub_251A1A568(0, (unint64_t *)&qword_26B21EAF8);
  unint64_t v3 = sub_251F35AC0();

  uint64_t v8 = v1;
  unsigned int v4 = (objc_class *)sub_251A95638(sub_251ACBB2C, (uint64_t)&v7, v3);
  swift_bridgeObjectRelease();
  id v6 = v4;
  result.value.super.isa = v6;
  result.is_nil = v5;
  return result;
}

void *sub_251AC8028(void *a1)
{
  id v2 = objc_msgSend(a1, sel_accessories);
  sub_251A1A568(0, (unint64_t *)&qword_26B21EAF8);
  unint64_t v3 = sub_251F35AC0();

  uint64_t v7 = v1;
  unsigned int v4 = sub_251A95638(sub_251ACBB2C, (uint64_t)&v6, v3);
  swift_bridgeObjectRelease();
  return v4;
}

HMActionSet_optional __swiftcall StaticActionSet.get(from:)(HMHomeManager from)
{
  id v2 = [(objc_class *)from.super.isa homes];
  sub_251A1A568(0, (unint64_t *)&qword_26B21F2D0);
  unint64_t v3 = sub_251F35AC0();

  uint64_t v14 = v1;
  unsigned int v4 = sub_251A95638(sub_251AC834C, (uint64_t)v13, v3);
  swift_bridgeObjectRelease();
  if (v4)
  {
    id v6 = v4;
    id v7 = objc_msgSend(v6, sel_actionSets);
    sub_251A1A568(0, &qword_26B21EB00);
    unint64_t v8 = sub_251F35AC0();

    MEMORY[0x270FA5388](v9);
    void v12[2] = v1;
    unint64_t v10 = (objc_class *)sub_251A95638(sub_251ACBB2C, (uint64_t)v12, v8);

    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v10 = 0;
  }
  uint64_t v11 = v10;
  result.value.super.isa = v11;
  result.is_nil = v5;
  return result;
}

uint64_t sub_251AC8234(id *a1)
{
  id v1 = objc_msgSend(*a1, sel_uniqueIdentifier);
  uint64_t v2 = sub_251F34DA0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  Swift::Bool v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34D80();

  type metadata accessor for StaticActionSet();
  char v6 = sub_251F34D70();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v6 & 1;
}

uint64_t sub_251AC834C(id *a1)
{
  return sub_251AC8234(a1) & 1;
}

HMActionSet_optional __swiftcall StaticActionSet.get(from:)(HMHome from)
{
  id v2 = [(objc_class *)from.super.isa actionSets];
  sub_251A1A568(0, &qword_26B21EB00);
  unint64_t v3 = sub_251F35AC0();

  uint64_t v8 = v1;
  uint64_t v4 = (objc_class *)sub_251A95638(sub_251ACBB2C, (uint64_t)&v7, v3);
  swift_bridgeObjectRelease();
  char v6 = v4;
  result.value.super.isa = v6;
  result.is_nil = v5;
  return result;
}

void *sub_251AC8418(void *a1)
{
  id v2 = objc_msgSend(a1, sel_actionSets);
  sub_251A1A568(0, &qword_26B21EB00);
  unint64_t v3 = sub_251F35AC0();

  uint64_t v7 = v1;
  uint64_t v4 = sub_251A95638(sub_251ACBB2C, (uint64_t)&v6, v3);
  swift_bridgeObjectRelease();
  return v4;
}

HMService_optional __swiftcall StaticService.get(from:)(HMHomeManager from)
{
  uint64_t v40 = type metadata accessor for StaticService();
  uint64_t v3 = MEMORY[0x270FA5388](v40);
  Swift::Bool v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v36 - v6;
  id v8 = [(objc_class *)from.super.isa homes];
  sub_251A1A568(0, (unint64_t *)&qword_26B21F2D0);
  unint64_t v9 = sub_251F35AC0();

  uint64_t v37 = v7;
  sub_251ACB9A8(v1, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticService);
  uint64_t v44 = v5;
  sub_251ACB9A8(v1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticService);
  if (v9 >> 62)
  {
LABEL_35:
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_251F366C0();
    swift_bridgeObjectRelease();
    if (!v10) {
      goto LABEL_24;
    }
  }
  else
  {
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v10) {
      goto LABEL_24;
    }
  }
  unint64_t v11 = 0;
  unint64_t v42 = v9;
  unint64_t v43 = v9 & 0xC000000000000001;
  unint64_t v38 = v9 + 32;
  uint64_t v39 = 0;
  uint64_t v41 = v10;
  while (1)
  {
    unint64_t v45 = v11;
    if (v43)
    {
      swift_bridgeObjectRetain();
      id v12 = (id)MEMORY[0x2533AB3A0](v11, v9);
    }
    else
    {
      uint64_t v13 = *(void **)(v38 + 8 * v11);
      swift_bridgeObjectRetain();
      id v12 = v13;
    }
    id v46 = v12;
    id v14 = objc_msgSend(v12, sel_accessories);
    sub_251A1A568(0, (unint64_t *)&qword_26B21EAF8);
    unint64_t v15 = sub_251F35AC0();

    if (v15 >> 62) {
      break;
    }
    uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v16) {
      goto LABEL_9;
    }
LABEL_16:
    swift_bridgeObjectRelease_n();
    unint64_t v9 = v42;
    swift_bridgeObjectRelease();

LABEL_18:
    unint64_t v11 = v45 + 1;
    if (__OFADD__(v45, 1)) {
      goto LABEL_34;
    }
    if (v11 == v41) {
      goto LABEL_24;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_251F366C0();
  if (!v16) {
    goto LABEL_16;
  }
LABEL_9:
  char v47 = &v44[*(int *)(v40 + 44)];
  unint64_t v48 = v15 & 0xC000000000000001;
  unint64_t v9 = 4;
  while (1)
  {
    if (v48) {
      unint64_t v17 = MEMORY[0x2533AB3A0](v9 - 4, v15);
    }
    else {
      unint64_t v17 = (unint64_t)*(id *)(v15 + 8 * v9);
    }
    uint64_t v19 = (void *)v17;
    unint64_t v20 = v9 - 3;
    if (__OFADD__(v9 - 4, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    id v21 = objc_msgSend((id)v17, sel_uniqueIdentifier);
    uint64_t v22 = sub_251F34DA0();
    uint64_t v23 = *(void *)(v22 - 8);
    MEMORY[0x270FA5388](v22);
    uint64_t v25 = (char *)&v36 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_251F34D80();

    LOBYTE(v21) = sub_251F34D70();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v25, v22);
    if (v21) {
      break;
    }

    ++v9;
    if (v20 == v16) {
      goto LABEL_16;
    }
  }
  swift_bridgeObjectRelease_n();
  id v26 = v19;
  id v27 = objc_msgSend(v26, sel_services);
  sub_251A1A568(0, (unint64_t *)&qword_26B21F180);
  unint64_t v28 = sub_251F35AC0();

  MEMORY[0x270FA5388](v29);
  *(&v36 - 2) = (uint64_t)v44;
  uint64_t v30 = v39;
  int v31 = sub_251A95638(sub_251ACBB2C, (uint64_t)(&v36 - 4), v28);
  uint64_t v39 = v30;
  unint64_t v9 = v42;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  if (!v31) {
    goto LABEL_18;
  }
  unint64_t v17 = v45;
  if (v45 != v41)
  {
LABEL_27:
    if (v43)
    {
      id v33 = (id)MEMORY[0x2533AB3A0](v17, v9);
LABEL_32:
      uint64_t v34 = v33;
      uint64_t v35 = (uint64_t)v37;
      unint64_t v32 = (unint64_t)StaticService.get(from:)((HMHome)v33);
      sub_251ACBA10(v35, (uint64_t (*)(void))type metadata accessor for StaticService);

      if (v32) {
        goto LABEL_25;
      }
      __break(1u);
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    if ((v17 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v17 < *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v33 = *(id *)(v38 + 8 * v17);
      goto LABEL_32;
    }
    __break(1u);
    goto LABEL_39;
  }
LABEL_24:
  sub_251ACBA10((uint64_t)v37, (uint64_t (*)(void))type metadata accessor for StaticService);
  unint64_t v32 = 0;
LABEL_25:
  swift_bridgeObjectRelease();
  sub_251ACBA10((uint64_t)v44, (uint64_t (*)(void))type metadata accessor for StaticService);
  unint64_t v17 = v32;
LABEL_39:
  result.value.super.isa = (Class)v17;
  result.is_nil = v18;
  return result;
}

HMService_optional __swiftcall StaticService.get(from:)(HMHome from)
{
  id v2 = [(objc_class *)from.super.isa accessories];
  sub_251A1A568(0, (unint64_t *)&qword_26B21EAF8);
  unint64_t v3 = sub_251F35AC0();

  uint64_t v14 = v1;
  uint64_t v4 = sub_251A95638(sub_251ACB974, (uint64_t)v13, v3);
  swift_bridgeObjectRelease();
  if (v4)
  {
    id v6 = v4;
    id v7 = objc_msgSend(v6, sel_services);
    sub_251A1A568(0, (unint64_t *)&qword_26B21F180);
    unint64_t v8 = sub_251F35AC0();

    MEMORY[0x270FA5388](v9);
    void v12[2] = v1;
    uint64_t v10 = (objc_class *)sub_251A95638(sub_251ACBB2C, (uint64_t)v12, v8);

    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = 0;
  }
  unint64_t v11 = v10;
  result.value.super.isa = v11;
  result.is_nil = v5;
  return result;
}

uint64_t sub_251AC8BA8(id *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = objc_msgSend(*a1, sel_uniqueIdentifier);
  uint64_t v5 = sub_251F34DA0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  unint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34D80();

  a3(0);
  LOBYTE(a3) = sub_251F34D70();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return a3 & 1;
}

HMService_optional __swiftcall StaticService.get(from:)(HMAccessory from)
{
  id v2 = [(objc_class *)from.super.isa services];
  sub_251A1A568(0, (unint64_t *)&qword_26B21F180);
  unint64_t v3 = sub_251F35AC0();

  uint64_t v8 = v1;
  id v4 = (objc_class *)sub_251A95638(sub_251ACBB2C, (uint64_t)&v7, v3);
  swift_bridgeObjectRelease();
  uint64_t v6 = v4;
  result.value.super.isa = v6;
  result.is_nil = v5;
  return result;
}

void *sub_251AC8D80(void *a1)
{
  id v2 = objc_msgSend(a1, sel_services);
  sub_251A1A568(0, (unint64_t *)&qword_26B21F180);
  unint64_t v3 = sub_251F35AC0();

  uint64_t v7 = v1;
  id v4 = sub_251A95638(sub_251ACBB2C, (uint64_t)&v6, v3);
  swift_bridgeObjectRelease();
  return v4;
}

HMServiceGroup_optional __swiftcall StaticServiceGroup.get(from:)(HMHomeManager from)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for StaticServiceGroup();
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v37 - v8;
  id v10 = [(objc_class *)from.super.isa homes];
  sub_251A1A568(0, (unint64_t *)&qword_26B21F2D0);
  unint64_t v11 = sub_251F35AC0();

  uint64_t v39 = v9;
  sub_251ACB9A8(v2, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
  char v47 = v7;
  sub_251ACB9A8(v2, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
  if (v11 >> 62)
  {
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_251F366C0();
    swift_bridgeObjectRelease();
    if (v12) {
      goto LABEL_3;
    }
LABEL_22:
    sub_251ACBA10((uint64_t)v39, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
    uint64_t v30 = 0;
LABEL_29:
    swift_bridgeObjectRelease();
    sub_251ACBA10((uint64_t)v47, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
    uint64_t v29 = v30;
    goto LABEL_37;
  }
  uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v12) {
    goto LABEL_22;
  }
LABEL_3:
  uint64_t v13 = 0;
  unint64_t v42 = v11;
  unint64_t v43 = v11 & 0xC000000000000001;
  unint64_t v38 = v11 + 32;
  uint64_t v41 = v12;
  while (1)
  {
    unint64_t v45 = v13;
    if (v43)
    {
      swift_bridgeObjectRetain();
      id v14 = (id)MEMORY[0x2533AB3A0](v13, v11);
    }
    else
    {
      unint64_t v15 = *(void **)(v38 + 8 * (void)v13);
      swift_bridgeObjectRetain();
      id v14 = v15;
    }
    id v44 = v14;
    id v16 = objc_msgSend(v14, sel_serviceGroups);
    uint64_t v40 = sub_251A1A568(0, &qword_26B21EB10);
    unint64_t v17 = sub_251F35AC0();

    if (v17 >> 62) {
      break;
    }
    uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v18) {
      goto LABEL_9;
    }
LABEL_16:
    swift_bridgeObjectRelease_n();
    unint64_t v11 = v42;
    swift_bridgeObjectRelease();

    uint64_t v13 = (objc_class *)((char *)v45 + 1);
    if (__OFADD__(v45, 1))
    {
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
    if (v13 == (objc_class *)v41) {
      goto LABEL_22;
    }
  }
  swift_bridgeObjectRetain_n();
  uint64_t v18 = sub_251F366C0();
  swift_bridgeObjectRelease();
  if (!v18) {
    goto LABEL_16;
  }
LABEL_9:
  unint64_t v46 = v17 & 0xC000000000000001;
  uint64_t v19 = 4;
  while (1)
  {
    if (v46) {
      id v20 = (id)MEMORY[0x2533AB3A0](v19 - 4, v17);
    }
    else {
      id v20 = *(id *)(v17 + 8 * v19);
    }
    unint64_t v11 = (unint64_t)v20;
    uint64_t v21 = v19 - 3;
    if (__OFADD__(v19 - 4, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    id v22 = objc_msgSend(v20, sel_uniqueIdentifier);
    uint64_t v23 = sub_251F34DA0();
    uint64_t v24 = *(void *)(v23 - 8);
    MEMORY[0x270FA5388](v23);
    id v26 = (char *)&v37 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_251F34D80();

    LOBYTE(v22) = sub_251F34D70();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);

    if (v22) {
      break;
    }
    ++v19;
    if (v21 == v18) {
      goto LABEL_16;
    }
  }
  unint64_t v27 = v42;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease_n();
  uint64_t v29 = v45;
  if (v45 == (objc_class *)v41) {
    goto LABEL_22;
  }
  if (v43)
  {
    id v31 = (id)MEMORY[0x2533AB3A0]();
LABEL_28:
    unint64_t v32 = v31;
    id v33 = objc_msgSend(v31, sel_serviceGroups);
    unint64_t v34 = sub_251F35AC0();

    MEMORY[0x270FA5388](v35);
    uint64_t v36 = (uint64_t)v39;
    *(&v37 - 2) = (uint64_t)v39;
    uint64_t v30 = (objc_class *)sub_251A95638(sub_251ACBB2C, (uint64_t)(&v37 - 4), v34);
    swift_bridgeObjectRelease();
    sub_251ACBA10(v36, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);

    if (v30) {
      goto LABEL_29;
    }
  }
  else
  {
    if (((unint64_t)v45 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if ((unint64_t)v45 < *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v31 = *(id *)(v38 + 8 * (void)v45);
      goto LABEL_28;
    }
    __break(1u);
  }
  __break(1u);
LABEL_37:
  result.value.super.isa = v29;
  result.is_nil = v28;
  return result;
}

HMServiceGroup_optional __swiftcall StaticServiceGroup.get(from:)(HMHome from)
{
  id v2 = [(objc_class *)from.super.isa serviceGroups];
  sub_251A1A568(0, &qword_26B21EB10);
  unint64_t v3 = sub_251F35AC0();

  uint64_t v8 = v1;
  uint64_t v4 = (objc_class *)sub_251A95638(sub_251ACBB2C, (uint64_t)&v7, v3);
  swift_bridgeObjectRelease();
  uint64_t v6 = v4;
  result.value.super.isa = v6;
  result.is_nil = v5;
  return result;
}

void *sub_251AC9408(void *a1)
{
  id v2 = objc_msgSend(a1, sel_serviceGroups);
  sub_251A1A568(0, &qword_26B21EB10);
  unint64_t v3 = sub_251F35AC0();

  uint64_t v7 = v1;
  uint64_t v4 = sub_251A95638(sub_251ACBB2C, (uint64_t)&v6, v3);
  swift_bridgeObjectRelease();
  return v4;
}

void StaticMediaSystem.get(from:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for StaticMediaSystem();
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v35 - v8;
  id v10 = objc_msgSend(a1, sel_homes);
  sub_251A1A568(0, (unint64_t *)&qword_26B21F2D0);
  unint64_t v11 = sub_251F35AC0();

  uint64_t v37 = v9;
  sub_251ACB9A8(v2, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
  unint64_t v45 = v7;
  sub_251ACB9A8(v2, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
  if (v11 >> 62)
  {
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_251F366C0();
    swift_bridgeObjectRelease();
    if (v12) {
      goto LABEL_3;
    }
LABEL_22:
    sub_251ACBA10((uint64_t)v37, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
LABEL_29:
    swift_bridgeObjectRelease();
    sub_251ACBA10((uint64_t)v45, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
    return;
  }
  uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v12) {
    goto LABEL_22;
  }
LABEL_3:
  unint64_t v13 = 0;
  unint64_t v40 = v11;
  unint64_t v41 = v11 & 0xC000000000000001;
  unint64_t v36 = v11 + 32;
  uint64_t v39 = v12;
  while (1)
  {
    unint64_t v43 = v13;
    if (v41)
    {
      swift_bridgeObjectRetain();
      id v14 = (id)MEMORY[0x2533AB3A0](v13, v11);
    }
    else
    {
      unint64_t v15 = *(void **)(v36 + 8 * v13);
      swift_bridgeObjectRetain();
      id v14 = v15;
    }
    id v42 = v14;
    id v16 = objc_msgSend(v14, sel_mediaSystems);
    uint64_t v38 = sub_251A1A568(0, (unint64_t *)&qword_26B21EB08);
    unint64_t v17 = sub_251F35AC0();

    if (v17 >> 62) {
      break;
    }
    uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v18) {
      goto LABEL_9;
    }
LABEL_16:
    swift_bridgeObjectRelease_n();
    unint64_t v11 = v40;
    swift_bridgeObjectRelease();

    unint64_t v13 = v43 + 1;
    if (__OFADD__(v43, 1))
    {
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
    if (v13 == v39) {
      goto LABEL_22;
    }
  }
  swift_bridgeObjectRetain_n();
  uint64_t v18 = sub_251F366C0();
  swift_bridgeObjectRelease();
  if (!v18) {
    goto LABEL_16;
  }
LABEL_9:
  unint64_t v44 = v17 & 0xC000000000000001;
  uint64_t v19 = 4;
  while (1)
  {
    if (v44) {
      id v20 = (id)MEMORY[0x2533AB3A0](v19 - 4, v17);
    }
    else {
      id v20 = *(id *)(v17 + 8 * v19);
    }
    unint64_t v11 = (unint64_t)v20;
    uint64_t v21 = v19 - 3;
    if (__OFADD__(v19 - 4, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    id v22 = objc_msgSend(v20, sel_uniqueIdentifier);
    uint64_t v23 = sub_251F34DA0();
    uint64_t v24 = *(void *)(v23 - 8);
    MEMORY[0x270FA5388](v23);
    id v26 = (char *)&v35 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_251F34D80();

    LOBYTE(v22) = sub_251F34D70();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);

    if (v22) {
      break;
    }
    ++v19;
    if (v21 == v18) {
      goto LABEL_16;
    }
  }
  unint64_t v27 = v40;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease_n();
  if (v43 == v39) {
    goto LABEL_22;
  }
  if (v41)
  {
    id v28 = (id)MEMORY[0x2533AB3A0]();
LABEL_28:
    uint64_t v29 = v28;
    id v30 = objc_msgSend(v28, sel_mediaSystems);
    unint64_t v31 = sub_251F35AC0();

    MEMORY[0x270FA5388](v32);
    uint64_t v33 = (uint64_t)v37;
    *(&v35 - 2) = (uint64_t)v37;
    unint64_t v34 = sub_251A95638(sub_251ACBB2C, (uint64_t)(&v35 - 4), v31);
    swift_bridgeObjectRelease();
    sub_251ACBA10(v33, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);

    if (v34) {
      goto LABEL_29;
    }
  }
  else
  {
    if ((v43 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v43 < *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v28 = *(id *)(v36 + 8 * v43);
      goto LABEL_28;
    }
    __break(1u);
  }
  __break(1u);
}

void *StaticMediaSystem.get(from:)(void *a1)
{
  id v2 = objc_msgSend(a1, sel_mediaSystems);
  sub_251A1A568(0, (unint64_t *)&qword_26B21EB08);
  unint64_t v3 = sub_251F35AC0();

  uint64_t v7 = v1;
  uint64_t v4 = sub_251A95638(sub_251ACBB2C, (uint64_t)&v6, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_251AC9A8C(id *a1)
{
  id v1 = objc_msgSend(*a1, sel_uniqueIdentifier);
  uint64_t v2 = sub_251F34DA0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34D80();

  char v6 = sub_251F34D70();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v6 & 1;
}

void *sub_251AC9B9C(void *a1)
{
  id v2 = objc_msgSend(a1, sel_mediaSystems);
  sub_251A1A568(0, (unint64_t *)&qword_26B21EB08);
  unint64_t v3 = sub_251F35AC0();

  uint64_t v7 = v1;
  uint64_t v4 = sub_251A95638(sub_251ACBB2C, (uint64_t)&v6, v3);
  swift_bridgeObjectRelease();
  return v4;
}

void StaticMediaProfile.get(from:)(void *a1)
{
  uint64_t v3 = type metadata accessor for StaticMediaProfile();
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v79 = (uint64_t)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v74 = (uint64_t)&v66 - v7;
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  id v10 = (char *)&v66 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v66 - v11;
  id v13 = objc_msgSend(a1, sel_homes);
  sub_251A1A568(0, (unint64_t *)&qword_26B21F2D0);
  unint64_t v14 = sub_251F35AC0();

  uint64_t v66 = v12;
  sub_251ACB9A8(v1, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
  uint64_t v71 = v10;
  sub_251ACB9A8(v1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
  unint64_t v70 = v14;
  if (v14 >> 62) {
    goto LABEL_52;
  }
  uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v15) {
    goto LABEL_42;
  }
  while (2)
  {
    unint64_t v16 = 0;
    uint64_t v68 = v15;
    unint64_t v69 = v14 & 0xC000000000000001;
    unint64_t v67 = v14 + 32;
    while (1)
    {
      unint64_t v73 = v16;
      if (v69)
      {
        swift_bridgeObjectRetain();
        id v17 = (id)MEMORY[0x2533AB3A0](v16, v14);
      }
      else
      {
        uint64_t v18 = *(void **)(v67 + 8 * v16);
        swift_bridgeObjectRetain();
        id v17 = v18;
      }
      id v72 = v17;
      id v19 = objc_msgSend(v17, sel_accessories);
      sub_251A1A568(0, (unint64_t *)&qword_26B21EAF8);
      unint64_t v20 = sub_251F35AC0();

      uint64_t v21 = (uint64_t)v71;
      sub_251ACB9A8((uint64_t)v71, v74, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
      sub_251ACB9A8(v21, v79, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
      if (v20 >> 62) {
        break;
      }
      uint64_t v22 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v22) {
        goto LABEL_9;
      }
LABEL_29:
      sub_251ACBA10(v74, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
      swift_bridgeObjectRelease();
      sub_251ACBA10(v79, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
      unint64_t v14 = v70;
      swift_bridgeObjectRelease();

      unint64_t v16 = v73 + 1;
      if (__OFADD__(v73, 1)) {
        goto LABEL_51;
      }
      if (v16 == v68) {
        goto LABEL_42;
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_251F366C0();
    swift_bridgeObjectRelease();
    if (!v22) {
      goto LABEL_29;
    }
LABEL_9:
    unint64_t v23 = 0;
    unint64_t v77 = v20;
    unint64_t v78 = v20 & 0xC000000000000001;
    uint64_t v76 = v22;
    while (1)
    {
      unint64_t v84 = v23;
      if (v78)
      {
        swift_bridgeObjectRetain();
        id v24 = (id)MEMORY[0x2533AB3A0](v23, v20);
      }
      else
      {
        uint64_t v25 = *(void **)(v20 + 8 * v23 + 32);
        swift_bridgeObjectRetain();
        id v24 = v25;
      }
      id v26 = v24;
      uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
      uint64_t v82 = (uint64_t *)&v66;
      uint64_t v28 = *(void *)(*(void *)(v27 - 8) + 64);
      MEMORY[0x270FA5388](v27 - 8);
      uint64_t v29 = (char *)&v66 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
      id v30 = objc_msgSend(v26, sel_mediaProfile);
      uint64_t v83 = v26;
      if (v30)
      {
        unint64_t v31 = v30;
        id v32 = objc_msgSend(v30, sel_uniqueIdentifier);

        sub_251F34D80();
        uint64_t v33 = sub_251F34DA0();
        uint64_t v34 = (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))((char *)&v66 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0), 0, 1, v33);
      }
      else
      {
        uint64_t v33 = sub_251F34DA0();
        uint64_t v34 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))((char *)&v66 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v33);
      }
      uint64_t v81 = (uint64_t *)&v66;
      MEMORY[0x270FA5388](v34);
      unint64_t v35 = (v28 + 15) & 0xFFFFFFFFFFFFFFF0;
      unint64_t v36 = (char *)&v66 - v35;
      sub_251F34DA0();
      uint64_t v37 = *(void *)(v33 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))((char *)&v66 - v35, v79, v33);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))((char *)&v66 - v35, 0, 1, v33);
      uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E6B8);
      uint64_t v80 = (uint64_t *)&v66;
      uint64_t v39 = MEMORY[0x270FA5388](v38 - 8);
      unint64_t v41 = (char *)&v66 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v42 = (uint64_t)&v41[*(int *)(v39 + 56)];
      sub_251A1E280((uint64_t)&v66 - v35, (uint64_t)v41);
      sub_251A1E280((uint64_t)&v66 - v35, v42);
      unint64_t v43 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v37 + 48);
      uint64_t v44 = v43(v41, 1, v33);
      if (v44 == 1)
      {
        if (v43((char *)v42, 1, v33) != 1) {
          goto LABEL_21;
        }
        sub_251A1B064((uint64_t)v41, &qword_26B21FF90);
        sub_251A1B064((uint64_t)&v66 - v35, &qword_26B21FF90);
        sub_251A1B064((uint64_t)&v66 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_26B21FF90);
        unint64_t v45 = v83;
        unint64_t v20 = v77;
        unint64_t v46 = v84;
      }
      else
      {
        uint64_t v75 = (uint64_t *)&v66;
        MEMORY[0x270FA5388](v44);
        char v47 = (char *)&v66 - v35;
        sub_251A1E280((uint64_t)v41, (uint64_t)&v66 - v35);
        uint64_t v48 = v43((char *)v42, 1, v33);
        if (v48 == 1)
        {
          (*(void (**)(char *, uint64_t))(v37 + 8))((char *)&v66 - v35, v33);
LABEL_21:
          sub_251A1B064((uint64_t)v41, &qword_26B21E6B8);
          sub_251A1B064((uint64_t)&v66 - v35, &qword_26B21FF90);
          sub_251A1B064((uint64_t)v29, &qword_26B21FF90);
          unint64_t v45 = v83;
          unint64_t v20 = v77;
          unint64_t v46 = v84;
LABEL_22:
          swift_bridgeObjectRelease();

          goto LABEL_25;
        }
        MEMORY[0x270FA5388](v48);
        uint64_t v50 = (char *)&v66 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, uint64_t, uint64_t))(v37 + 32))(v50, v42, v33);
        sub_251A9FE88();
        char v51 = sub_251F35650();
        uint64_t v52 = *(void (**)(char *, uint64_t))(v37 + 8);
        v52(v47, v33);
        v52(v50, v33);
        sub_251A1B064((uint64_t)v41, &qword_26B21FF90);
        sub_251A1B064((uint64_t)v36, &qword_26B21FF90);
        sub_251A1B064((uint64_t)v29, &qword_26B21FF90);
        unint64_t v45 = v83;
        unint64_t v20 = v77;
        unint64_t v46 = v84;
        if ((v51 & 1) == 0) {
          goto LABEL_22;
        }
      }
      id v53 = objc_msgSend(v45, sel_mediaProfile);

      swift_bridgeObjectRelease();
      if (v53) {
        break;
      }
LABEL_25:
      unint64_t v54 = v46 + 1;
      if (__OFADD__(v46, 1))
      {
        __break(1u);
        goto LABEL_35;
      }
      unint64_t v23 = v46 + 1;
      if (v54 == v76) {
        goto LABEL_29;
      }
    }
    if (v76 == v46) {
      goto LABEL_29;
    }
LABEL_35:
    if (v78)
    {
      id v55 = (id)MEMORY[0x2533AB3A0](v46, v20);
      goto LABEL_40;
    }
    if ((v46 & 0x8000000000000000) != 0)
    {
      __break(1u);
      goto LABEL_55;
    }
    if (v46 >= *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
      goto LABEL_57;
    }
    id v55 = *(id *)(v20 + 8 * v46 + 32);
LABEL_40:
    uint64_t v56 = v55;
    unint64_t v85 = v55;
    uint64_t v57 = v74;
    sub_251ACADC4(&v85, v74, &v86);
    sub_251ACBA10(v57, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);

    uint64_t v58 = v86;
    if (!v86) {
      goto LABEL_58;
    }
    swift_bridgeObjectRelease();
    sub_251ACBA10(v79, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
    unint64_t v59 = v70;
    swift_bridgeObjectRelease();

    if (v73 == v68) {
      goto LABEL_42;
    }
    if (v69)
    {
      id v60 = (id)MEMORY[0x2533AB3A0]();
      goto LABEL_49;
    }
    if ((v73 & 0x8000000000000000) != 0) {
      goto LABEL_56;
    }
    if (v73 >= *(void *)((v59 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
      return;
    }
    id v60 = *(id *)(v67 + 8 * v73);
LABEL_49:
    int64_t v61 = v60;
    uint64_t v62 = (uint64_t)v66;
    StaticMediaProfile.get(from:)(v60);
    uint64_t v64 = v63;
    sub_251ACBA10(v62, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);

    if (!v64)
    {
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      swift_bridgeObjectRetain();
      unint64_t v14 = v70;
      uint64_t v65 = sub_251F366C0();
      swift_bridgeObjectRelease();
      uint64_t v15 = v65;
      if (!v65)
      {
LABEL_42:
        sub_251ACBA10((uint64_t)v66, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
        break;
      }
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease();
  sub_251ACBA10((uint64_t)v71, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
}

{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  id v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  int v34;
  void *v35;
  unint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char v41;
  void (*v42)(char *, uint64_t);
  id v43;
  unint64_t v44;
  id v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t *v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  char *v54;
  uint64_t *v55;
  uint64_t *v56;
  uint64_t *v57;
  void *v58;
  unint64_t v59;
  void *v60;
  uint64_t v61;

  uint64_t v3 = type metadata accessor for StaticMediaProfile();
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v48 - v7;
  uint64_t v9 = objc_msgSend(a1, sel_accessories);
  sub_251A1A568(0, (unint64_t *)&qword_26B21EAF8);
  id v10 = sub_251F35AC0();

  uint64_t v49 = v8;
  sub_251ACB9A8(v1, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
  unint64_t v54 = v6;
  sub_251ACB9A8(v1, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
  if (v10 >> 62)
  {
LABEL_33:
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_251F366C0();
    swift_bridgeObjectRelease();
    if (v11) {
      goto LABEL_3;
    }
LABEL_22:
    sub_251ACBA10((uint64_t)v49, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
LABEL_23:
    swift_bridgeObjectRelease();
    sub_251ACBA10((uint64_t)v54, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
    return;
  }
  uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v11) {
    goto LABEL_22;
  }
LABEL_3:
  uint64_t v12 = 0;
  uint64_t v52 = v10;
  id v53 = v10 & 0xC000000000000001;
  char v51 = v11;
  while (1)
  {
    if (v53)
    {
      swift_bridgeObjectRetain();
      id v13 = (id)MEMORY[0x2533AB3A0](v12, v10);
    }
    else
    {
      unint64_t v14 = *(void **)(v10 + 8 * v12 + 32);
      swift_bridgeObjectRetain();
      id v13 = v14;
    }
    uint64_t v15 = v13;
    unint64_t v59 = v12;
    unint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    uint64_t v57 = &v48;
    id v17 = *(void *)(*(void *)(v16 - 8) + 64);
    MEMORY[0x270FA5388](v16 - 8);
    uint64_t v18 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v58 = v15;
    id v19 = objc_msgSend(v15, sel_mediaProfile);
    if (v19)
    {
      unint64_t v20 = v19;
      uint64_t v21 = objc_msgSend(v19, sel_uniqueIdentifier);

      sub_251F34D80();
      uint64_t v22 = sub_251F34DA0();
      unint64_t v23 = (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))((char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), 0, 1, v22);
    }
    else
    {
      uint64_t v22 = sub_251F34DA0();
      unint64_t v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))((char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v22);
    }
    uint64_t v56 = &v48;
    MEMORY[0x270FA5388](v23);
    id v24 = (v17 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v25 = (char *)&v48 - v24;
    sub_251F34DA0();
    id v26 = *(void *)(v22 - 8);
    (*(void (**)(char *, char *, uint64_t))(v26 + 16))((char *)&v48 - v24, v54, v22);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))((char *)&v48 - v24, 0, 1, v22);
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E6B8);
    id v55 = &v48;
    uint64_t v28 = MEMORY[0x270FA5388](v27 - 8);
    id v30 = (char *)&v48 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
    unint64_t v31 = (uint64_t)&v30[*(int *)(v28 + 56)];
    sub_251A1E280((uint64_t)&v48 - v24, (uint64_t)v30);
    sub_251A1E280((uint64_t)&v48 - v24, v31);
    id v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
    uint64_t v33 = v32(v30, 1, v22);
    if (v33 == 1) {
      break;
    }
    uint64_t v50 = &v48;
    MEMORY[0x270FA5388](v33);
    uint64_t v37 = (char *)&v48 - v24;
    sub_251A1E280((uint64_t)v30, (uint64_t)&v48 - v24);
    uint64_t v38 = v32((char *)v31, 1, v22);
    if (v38 == 1)
    {
      sub_251A1B064((uint64_t)&v48 - v24, &qword_26B21FF90);
      sub_251A1B064((uint64_t)v18, &qword_26B21FF90);
      (*(void (**)(char *, uint64_t))(v26 + 8))(v37, v22);
      id v10 = v52;
      goto LABEL_15;
    }
    MEMORY[0x270FA5388](v38);
    uint64_t v40 = (char *)&v48 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, uint64_t, uint64_t))(v26 + 32))(v40, v31, v22);
    sub_251A9FE88();
    unint64_t v41 = sub_251F35650();
    uint64_t v42 = *(void (**)(char *, uint64_t))(v26 + 8);
    v42(v40, v22);
    sub_251A1B064((uint64_t)v25, &qword_26B21FF90);
    sub_251A1B064((uint64_t)v18, &qword_26B21FF90);
    v42(v37, v22);
    sub_251A1B064((uint64_t)v30, &qword_26B21FF90);
    unint64_t v35 = v58;
    id v10 = v52;
    unint64_t v36 = v59;
    if (v41) {
      goto LABEL_17;
    }
LABEL_19:
    swift_bridgeObjectRelease();

LABEL_20:
    uint64_t v44 = v36 + 1;
    if (__OFADD__(v36, 1)) {
      goto LABEL_32;
    }
    uint64_t v12 = v36 + 1;
    if (v44 == v51) {
      goto LABEL_22;
    }
  }
  sub_251A1B064((uint64_t)&v48 - v24, &qword_26B21FF90);
  sub_251A1B064((uint64_t)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_26B21FF90);
  uint64_t v34 = v32((char *)v31, 1, v22);
  id v10 = v52;
  if (v34 != 1)
  {
LABEL_15:
    sub_251A1B064((uint64_t)v30, &qword_26B21E6B8);
    unint64_t v35 = v58;
    unint64_t v36 = v59;
    goto LABEL_19;
  }
  sub_251A1B064((uint64_t)v30, &qword_26B21FF90);
  unint64_t v35 = v58;
  unint64_t v36 = v59;
LABEL_17:
  unint64_t v43 = objc_msgSend(v35, sel_mediaProfile);

  swift_bridgeObjectRelease();
  if (!v43) {
    goto LABEL_20;
  }
  if (v51 == v36) {
    goto LABEL_22;
  }
  if (v53)
  {
    unint64_t v45 = (id)MEMORY[0x2533AB3A0](v36, v10);
LABEL_30:
    unint64_t v46 = v45;
    id v60 = v45;
    char v47 = (uint64_t)v49;
    sub_251ACADC4(&v60, (uint64_t)v49, &v61);
    sub_251ACBA10(v47, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);

    if (v61) {
      goto LABEL_23;
    }
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  if ((v36 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v36 < *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    unint64_t v45 = *(id *)(v10 + 8 * v36 + 32);
    goto LABEL_30;
  }
  __break(1u);
}

id sub_251ACADC4@<X0>(void **a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v34 = a3;
  uint64_t v4 = *a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t v6 = *(void *)(*(void *)(v5 - 8) + 64);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v31 = v4;
  id v8 = objc_msgSend(v4, sel_mediaProfile);
  if (v8)
  {
    uint64_t v9 = v8;
    id v10 = objc_msgSend(v8, sel_uniqueIdentifier);

    sub_251F34D80();
    uint64_t v11 = sub_251F34DA0();
    uint64_t v12 = (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))((char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), 0, 1, v11);
  }
  else
  {
    uint64_t v11 = sub_251F34DA0();
    uint64_t v12 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))((char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v11);
  }
  uint64_t v33 = v30;
  MEMORY[0x270FA5388](v12);
  unint64_t v13 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  unint64_t v14 = (char *)v30 - v13;
  sub_251F34DA0();
  uint64_t v15 = *(void *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))((char *)v30 - v13, a2, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))((char *)v30 - v13, 0, 1, v11);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E6B8);
  id v32 = v30;
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  id v19 = (char *)v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = (uint64_t)&v19[*(int *)(v17 + 56)];
  sub_251A1E280((uint64_t)v30 - v13, (uint64_t)v19);
  sub_251A1E280((uint64_t)v30 - v13, v20);
  uint64_t v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  uint64_t v22 = v21(v19, 1, v11);
  if (v22 != 1)
  {
    v30[1] = v30;
    MEMORY[0x270FA5388](v22);
    unint64_t v23 = (char *)v30 - v13;
    sub_251A1E280((uint64_t)v19, (uint64_t)v30 - v13);
    uint64_t v24 = v21((char *)v20, 1, v11);
    if (v24 != 1)
    {
      MEMORY[0x270FA5388](v24);
      id v26 = (char *)v30 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, uint64_t, uint64_t))(v15 + 32))(v26, v20, v11);
      sub_251A9FE88();
      char v27 = sub_251F35650();
      uint64_t v28 = *(void (**)(char *, uint64_t))(v15 + 8);
      v28(v26, v11);
      sub_251A1B064((uint64_t)v14, &qword_26B21FF90);
      sub_251A1B064((uint64_t)v7, &qword_26B21FF90);
      v28(v23, v11);
      sub_251A1B064((uint64_t)v19, &qword_26B21FF90);
      if (v27) {
        goto LABEL_11;
      }
LABEL_12:
      id result = 0;
      goto LABEL_13;
    }
    sub_251A1B064((uint64_t)v30 - v13, &qword_26B21FF90);
    sub_251A1B064((uint64_t)v7, &qword_26B21FF90);
    (*(void (**)(char *, uint64_t))(v15 + 8))((char *)v30 - v13, v11);
LABEL_9:
    sub_251A1B064((uint64_t)v19, &qword_26B21E6B8);
    goto LABEL_12;
  }
  sub_251A1B064((uint64_t)v30 - v13, &qword_26B21FF90);
  sub_251A1B064((uint64_t)v7, &qword_26B21FF90);
  if (v21((char *)v20, 1, v11) != 1) {
    goto LABEL_9;
  }
  sub_251A1B064((uint64_t)v19, &qword_26B21FF90);
LABEL_11:
  id result = objc_msgSend(v31, sel_mediaProfile);
LABEL_13:
  *uint64_t v34 = result;
  return result;
}

MTRDevice_optional __swiftcall StaticMatterDevice.get(from:)(HMHomeManager from)
{
  uint64_t v36 = type metadata accessor for StaticMatterDevice();
  uint64_t v3 = MEMORY[0x270FA5388](v36);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v30 - v6;
  id v8 = [(objc_class *)from.super.isa homes];
  sub_251A1A568(0, (unint64_t *)&qword_26B21F2D0);
  unint64_t v9 = sub_251F35AC0();

  id v30 = v7;
  sub_251ACB9A8(v1, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
  uint64_t v37 = v5;
  sub_251ACB9A8(v1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
  if (v9 >> 62)
  {
LABEL_38:
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_251F366C0();
    swift_bridgeObjectRelease();
    if (!v10) {
      goto LABEL_26;
    }
  }
  else
  {
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v10) {
      goto LABEL_26;
    }
  }
  unint64_t v11 = 0;
  unint64_t v33 = v9;
  unint64_t v34 = v9 & 0xC000000000000001;
  unint64_t v31 = v9 + 32;
  uint64_t v32 = v10;
  while (1)
  {
    if (v34)
    {
      swift_bridgeObjectRetain();
      id v12 = (id)MEMORY[0x2533AB3A0](v11, v9);
    }
    else
    {
      unint64_t v13 = *(void **)(v31 + 8 * v11);
      swift_bridgeObjectRetain();
      id v12 = v13;
    }
    id v35 = v12;
    id v14 = objc_msgSend(v12, sel_accessories);
    sub_251A1A568(0, (unint64_t *)&qword_26B21EAF8);
    unint64_t v15 = sub_251F35AC0();

    if (v15 >> 62) {
      break;
    }
    uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v16) {
      goto LABEL_9;
    }
LABEL_23:
    swift_bridgeObjectRelease_n();
    unint64_t v9 = v33;
    swift_bridgeObjectRelease();

LABEL_24:
    if (__OFADD__(v11++, 1)) {
      goto LABEL_37;
    }
    if (v11 == v32) {
      goto LABEL_26;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_251F366C0();
  if (!v16) {
    goto LABEL_23;
  }
LABEL_9:
  unint64_t v9 = 4;
  while (1)
  {
    if ((v15 & 0xC000000000000001) != 0) {
      id v17 = (id)MEMORY[0x2533AB3A0](v9 - 4, v15);
    }
    else {
      id v17 = *(id *)(v15 + 8 * v9);
    }
    uint64_t v18 = v17;
    unint64_t v19 = v9 - 3;
    if (__OFADD__(v9 - 4, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    id v20 = objc_msgSend(v17, sel_hdm_matterNodeID);
    if (v20)
    {
      uint64_t v21 = v20;
      uint64_t v38 = 0;
      char v39 = 1;
      sub_251F36D80();

      if ((v39 & 1) == 0 && v38 == *(void *)&v37[*(int *)(v36 + 20)]) {
        break;
      }
    }

    ++v9;
    if (v19 == v16) {
      goto LABEL_23;
    }
  }
  swift_bridgeObjectRelease_n();
  unint64_t v15 = v18;
  if (!HMAccessory.matterDevice.getter())
  {
    unint64_t v9 = v33;
    swift_bridgeObjectRelease();

    goto LABEL_24;
  }
  self;
  uint64_t v22 = swift_dynamicCastObjCClass();
  unint64_t v9 = v33;
  if (!v22)
  {
    swift_bridgeObjectRelease();

    swift_unknownObjectRelease();
    goto LABEL_24;
  }
LABEL_29:
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  if (v11 == v32)
  {
LABEL_26:
    sub_251ACBA10((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
    unint64_t v24 = 0;
LABEL_27:
    swift_bridgeObjectRelease();
    sub_251ACBA10((uint64_t)v37, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
    id v26 = (objc_class *)v24;
    goto LABEL_42;
  }
  if (v34)
  {
    id v27 = (id)MEMORY[0x2533AB3A0](v11, v9);
LABEL_35:
    uint64_t v28 = v27;
    uint64_t v29 = (uint64_t)v30;
    unint64_t v24 = (unint64_t)StaticMatterDevice.get(from:)((HMHome)v27);
    sub_251ACBA10(v29, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);

    if (v24) {
      goto LABEL_27;
    }
    __break(1u);
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  if ((v11 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v11 < *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v27 = *(id *)(v31 + 8 * v11);
    goto LABEL_35;
  }
  __break(1u);
LABEL_42:
  result.value.super.isa = v26;
  result.is_nil = v25;
  return result;
}

MTRDevice_optional __swiftcall StaticMatterDevice.get(from:)(HMHome from)
{
  id v2 = [(objc_class *)from.super.isa accessories];
  sub_251A1A568(0, (unint64_t *)&qword_26B21EAF8);
  unint64_t v3 = sub_251F35AC0();

  uint64_t v10 = v1;
  uint64_t v4 = sub_251A95638((uint64_t (*)(id *))sub_251ACBA70, (uint64_t)&v9, v3);
  swift_bridgeObjectRelease();
  if (!v4) {
    goto LABEL_6;
  }
  id v6 = v4;
  if (!HMAccessory.matterDevice.getter())
  {

LABEL_6:
    uint64_t v7 = 0;
    goto LABEL_7;
  }
  self;
  uint64_t v7 = swift_dynamicCastObjCClass();

  if (!v7) {
    swift_unknownObjectRelease();
  }
LABEL_7:
  id v8 = (objc_class *)v7;
  result.value.super.isa = v8;
  result.is_nil = v5;
  return result;
}

id sub_251ACB828(id *a1)
{
  id result = objc_msgSend(*a1, sel_hdm_matterNodeID);
  if (result)
  {
    id v2 = result;
    sub_251F36D80();

    return 0;
  }
  return result;
}

MTRDevice_optional __swiftcall StaticMatterDevice.get(from:)(HMAccessory from)
{
  uint64_t v1 = (objc_class *)HMAccessory.matterDevice.getter();
  if (v1)
  {
    self;
    uint64_t v1 = (objc_class *)swift_dynamicCastObjCClass();
    if (!v1)
    {
      swift_unknownObjectRelease();
      uint64_t v1 = 0;
    }
  }
  result.value.super.isa = v1;
  result.is_nil = v2;
  return result;
}

uint64_t sub_251ACB920()
{
  uint64_t result = HMAccessory.matterDevice.getter();
  if (result)
  {
    self;
    uint64_t result = swift_dynamicCastObjCClass();
    if (!result)
    {
      swift_unknownObjectRelease();
      return 0;
    }
  }
  return result;
}

uint64_t sub_251ACB974(id *a1)
{
  return sub_251AC8BA8(a1, *(void *)(v1 + 16), (void (*)(void))type metadata accessor for StaticService) & 1;
}

uint64_t sub_251ACB9A8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_251ACBA10(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_251ACBA70(id *a1)
{
  return (unint64_t)sub_251ACB828(a1) & 1;
}

_UNKNOWN **sub_251ACBA90()
{
  return &protocol witness table for HMHome;
}

_UNKNOWN **sub_251ACBA9C()
{
  return &protocol witness table for HMAccessory;
}

_UNKNOWN **sub_251ACBAA8()
{
  return &protocol witness table for HMActionSet;
}

_UNKNOWN **sub_251ACBAB4()
{
  return &protocol witness table for HMService;
}

_UNKNOWN **sub_251ACBAC0()
{
  return &protocol witness table for HMServiceGroup;
}

_UNKNOWN **sub_251ACBACC()
{
  return &protocol witness table for HMMediaSystem;
}

_UNKNOWN **sub_251ACBAD8()
{
  return &protocol witness table for HMMediaProfile;
}

_UNKNOWN **sub_251ACBAE4()
{
  return &protocol witness table for MTRDevice;
}

uint64_t dispatch thunk of ExpressibleByHomeManager.get(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of ExpressibleByHome.get(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of ExpressibleByAccessory.get(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_251ACBB2C(id *a1)
{
  return sub_251AC7D1C(a1) & 1;
}

uint64_t sub_251ACBB48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F35CD0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_251F35CC0();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_251A1B064(a1, &qword_26B220BB0);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_251F35C00();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_251ACBCF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_251ACBD44(a1, a2, a3, (uint64_t)&unk_270266FA0, &qword_26B21E628);
}

uint64_t sub_251ACBD1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_251ACBD44(a1, a2, a3, (uint64_t)&unk_270266F78, &qword_269B9DA08);
}

uint64_t sub_251ACBD44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v9 = sub_251F35CD0();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) != 1)
  {
    sub_251F35CC0();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a1, v9);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_251A1B064(a1, &qword_26B220BB0);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_251F35C00();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  *(void *)(v11 + 24) = a3;
  __swift_instantiateConcreteTypeFromMangledName(a5);
  return swift_task_create();
}

uint64_t sub_251ACBEF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_251ACBD44(a1, a2, a3, (uint64_t)&unk_270266F50, &qword_269B9D9F8);
}

uint64_t DataModel.write(characteristicValueSet:home:)(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  *(void *)(v4 + 48) = a3;
  *(void *)(v4 + 56) = v3;
  *(void *)(v4 + 40) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B2203A0);
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = *a2;
  *(void *)(v4 + 64) = v6;
  *(void *)(v4 + 72) = v7;
  *(unsigned char *)(v4 + 104) = *((unsigned char *)a2 + 8);
  *(void *)(v4 + 80) = a2[2];
  return MEMORY[0x270FA2498](sub_251ACBFCC, 0, 0);
}

uint64_t sub_251ACBFCC()
{
  uint64_t v1 = *(void *)(v0 + 72);
  if (*(void *)(v1 + 16))
  {
    uint64_t v2 = *(void *)(v0 + 80);
    char v3 = *(unsigned char *)(v0 + 104);
    *(void *)(v0 + 16) = v1;
    *(unsigned char *)(v0 + 24) = v3;
    *(void *)(v0 + 32) = v2;
    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 88) = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_251ACC114;
    uint64_t v5 = *(void *)(v0 + 64);
    uint64_t v6 = *(void *)(v0 + 48);
    return DataModel.write(characteristicValueSet:home:waitForWriteRequestCompletion:timeout:)(v5, (uint64_t *)(v0 + 16), v6, 0, 0, 1);
  }
  else
  {
    uint64_t v8 = *(void *)(v0 + 40);
    uint64_t v9 = type metadata accessor for StateSnapshot(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
    swift_task_dealloc();
    uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
    return v10();
  }
}

uint64_t sub_251ACC114()
{
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_251ACC29C;
  }
  else {
    uint64_t v2 = sub_251ACC228;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_251ACC228()
{
  sub_251A4ECF0(v0[8], v0[5], &qword_26B2203A0);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_251ACC29C()
{
  uint64_t v1 = *(void *)(v0 + 40);

  uint64_t v2 = type metadata accessor for StateSnapshot(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t DataModel.write(characteristicValueSet:home:waitForWriteRequestCompletion:timeout:)(uint64_t a1, uint64_t *a2, uint64_t a3, char a4, uint64_t a5, char a6)
{
  *(unsigned char *)(v7 + 313) = a6;
  *(void *)(v7 + 104) = a5;
  *(void *)(v7 + 112) = v6;
  *(unsigned char *)(v7 + 312) = a4;
  *(void *)(v7 + 88) = a1;
  *(void *)(v7 + 96) = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  *(void *)(v7 + 120) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D9A8);
  *(void *)(v7 + 128) = swift_task_alloc();
  uint64_t v9 = type metadata accessor for StateSnapshot(0);
  *(void *)(v7 + 136) = v9;
  *(void *)(v7 + 144) = *(void *)(v9 - 8);
  uint64_t v10 = swift_task_alloc();
  uint64_t v11 = *a2;
  *(void *)(v7 + 152) = v10;
  *(void *)(v7 + 160) = v11;
  *(unsigned char *)(v7 + 314) = *((unsigned char *)a2 + 8);
  *(void *)(v7 + 168) = a2[2];
  return MEMORY[0x270FA2498](sub_251ACC48C, 0, 0);
}

uint64_t sub_251ACC48C()
{
  *(void *)(v0 + 176) = sub_251F35C80();
  *(void *)(v0 + 184) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251ACC524, v2, v1);
}

uint64_t sub_251ACC524()
{
  uint64_t v1 = *(void *)(v0 + 112);
  swift_release();
  uint64_t v2 = (void **)(v1 + OBJC_IVAR____TtC13HomeDataModel9DataModel_homeManager);
  swift_beginAccess();
  uint64_t v3 = *v2;
  *(void *)(v0 + 192) = *v2;
  id v4 = v3;
  return MEMORY[0x270FA2498](sub_251ACC5C8, 0, 0);
}

uint64_t sub_251ACC5C8()
{
  if (*(void *)(v0 + 192))
  {
    uint64_t v1 = *(void *)(v0 + 168);
    char v2 = *(unsigned char *)(v0 + 314);
    *(void *)(v0 + 40) = *(void *)(v0 + 160);
    *(unsigned char *)(v0 + 48) = v2;
    *(void *)(v0 + 56) = v1;
    *(void *)(v0 + 200) = sub_251F35C70();
    uint64_t v4 = sub_251F35C00();
    return MEMORY[0x270FA2498](sub_251ACC6E0, v4, v3);
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 144) + 56))(*(void *)(v0 + 88), 1, 1, *(void *)(v0 + 136));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
}

uint64_t sub_251ACC6E0()
{
  uint64_t v1 = *(void **)(v0 + 96);
  swift_release();
  *(void *)(v0 + 208) = sub_251ACD734(v0 + 40, v1);
  return MEMORY[0x270FA2498](sub_251ACC76C, 0, 0);
}

uint64_t sub_251ACC76C()
{
  uint64_t v1 = *(void *)(v0 + 208);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 192);
    char v3 = *(unsigned char *)(v0 + 314);
    uint64_t v4 = *(void *)(v0 + 168);
    *(void *)(v0 + 64) = *(void *)(v0 + 160);
    *(unsigned char *)(v0 + 72) = v3;
    *(void *)(v0 + 80) = v4;
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 216) = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_251ACC8B8;
    uint64_t v6 = *(void *)(v0 + 128);
    return sub_251ACDB28(v6, (uint64_t *)(v0 + 64), v1, v2);
  }
  else
  {

    (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 144) + 56))(*(void *)(v0 + 88), 1, 1, *(void *)(v0 + 136));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
    return v8();
  }
}

uint64_t sub_251ACC8B8()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251ACC9B4, 0, 0);
}

uint64_t sub_251ACC9B4()
{
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E390);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v1, 1, v2) == 1)
  {
    char v3 = *(void **)(v0 + 192);
    uint64_t v4 = *(void *)(v0 + 136);
    uint64_t v5 = *(void *)(v0 + 144);
    uint64_t v6 = *(void *)(v0 + 88);

    sub_251A1B064(v1, &qword_269B9D9A8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(v6, 1, 1, v4);
LABEL_5:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
    return v15();
  }
  int v7 = *(unsigned __int8 *)(v0 + 314);
  uint64_t v8 = *(void *)(v0 + 152);
  uint64_t v9 = *(void *)(v1 + *(int *)(v2 + 48));
  *(void *)(v0 + 224) = v9;
  sub_251ACFFCC(v1, v8);
  if (v7 == 1)
  {
    uint64_t v10 = *(void **)(v0 + 192);
    uint64_t v12 = *(void *)(v0 + 144);
    uint64_t v11 = *(void *)(v0 + 152);
    uint64_t v13 = *(void *)(v0 + 136);
    uint64_t v14 = *(void *)(v0 + 88);

    sub_251ACFFCC(v11, v14);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(v14, 0, 1, v13);
    goto LABEL_5;
  }
  if (*(unsigned char *)(v0 + 312) == 1)
  {
    swift_bridgeObjectRetain();
    *(void *)(v0 + 232) = sub_251F35C70();
    uint64_t v17 = sub_251F35C00();
    uint64_t v19 = v18;
    id v20 = sub_251ACCCA8;
    uint64_t v21 = v17;
    uint64_t v22 = v19;
  }
  else
  {
    unint64_t v23 = *(void **)(v0 + 208);
    unint64_t v24 = *(void **)(v0 + 192);
    uint64_t v25 = *(void *)(v0 + 168);
    char v26 = *(unsigned char *)(v0 + 314);
    uint64_t v27 = *(void *)(v0 + 160);
    uint64_t v28 = swift_allocObject();
    *(void *)(v0 + 264) = v28;
    swift_unknownObjectWeakInit();
    uint64_t v29 = swift_allocObject();
    *(void *)(v0 + 272) = v29;
    *(void *)(v29 + 16) = v28;
    *(void *)(v29 + 24) = v27;
    *(unsigned char *)(v29 + 32) = v26;
    *(void *)(v29 + 40) = v25;
    *(void *)(v29 + 48) = v23;
    *(void *)(v29 + 56) = v24;
    *(void *)(v29 + 64) = v9;
    id v30 = v24;
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    id v31 = v23;
    id v32 = v30;
    id v33 = v31;
    *(void *)(v0 + 280) = sub_251F35C70();
    uint64_t v34 = sub_251F35C00();
    uint64_t v22 = v35;
    *(void *)(v0 + 288) = v34;
    *(void *)(v0 + 296) = v35;
    id v20 = sub_251ACD214;
    uint64_t v21 = v34;
  }
  return MEMORY[0x270FA2498](v20, v21, v22);
}

uint64_t sub_251ACCCA8()
{
  uint64_t v29 = v0;
  uint64_t v1 = *(void *)(v0 + 160);
  swift_release();
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t v27 = v1 + 64;
  uint64_t v28 = MEMORY[0x263F8EE80];
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D990);
  uint64_t v7 = swift_task_alloc();
  int64_t v8 = (unint64_t)(63 - v3) >> 6;
  uint64_t result = swift_bridgeObjectRetain_n();
  int64_t v10 = 0;
  if (!v5) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v11 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  for (unint64_t i = v11 | (v10 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v10 << 6))
  {
    uint64_t v16 = *(void *)(v1 + 48);
    uint64_t v17 = sub_251F34DA0();
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v7, v16 + *(void *)(*(void *)(v17 - 8) + 72) * i, v17);
    *(void *)(v7 + *(int *)(v6 + 48)) = *(void *)(*(void *)(v1 + 56) + 8 * i);
    uint64_t v18 = swift_task_alloc();
    sub_251A4ECF0(v7, v18, &qword_269B9D990);
    swift_bridgeObjectRetain();
    sub_251AF3CF4(&v28, v18);
    sub_251A1B064(v18, &qword_269B9D990);
    uint64_t result = swift_task_dealloc();
    if (v5) {
      goto LABEL_5;
    }
LABEL_6:
    int64_t v13 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
LABEL_28:
      __break(1u);
      return result;
    }
    if (v13 >= v8) {
      goto LABEL_24;
    }
    unint64_t v14 = *(void *)(v27 + 8 * v13);
    ++v10;
    if (!v14)
    {
      int64_t v10 = v13 + 1;
      if (v13 + 1 >= v8) {
        goto LABEL_24;
      }
      unint64_t v14 = *(void *)(v27 + 8 * v10);
      if (!v14)
      {
        int64_t v10 = v13 + 2;
        if (v13 + 2 >= v8) {
          goto LABEL_24;
        }
        unint64_t v14 = *(void *)(v27 + 8 * v10);
        if (!v14)
        {
          int64_t v10 = v13 + 3;
          if (v13 + 3 >= v8) {
            goto LABEL_24;
          }
          unint64_t v14 = *(void *)(v27 + 8 * v10);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_21:
    unint64_t v5 = (v14 - 1) & v14;
  }
  int64_t v15 = v13 + 4;
  if (v15 < v8)
  {
    unint64_t v14 = *(void *)(v27 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t v10 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_28;
        }
        if (v10 >= v8) {
          goto LABEL_24;
        }
        unint64_t v14 = *(void *)(v27 + 8 * v10);
        ++v15;
        if (v14) {
          goto LABEL_21;
        }
      }
    }
    int64_t v10 = v15;
    goto LABEL_21;
  }
LABEL_24:
  uint64_t v19 = *(void *)(v26 + 208);
  uint64_t v20 = *(void *)(v26 + 192);
  char v21 = *(unsigned char *)(v26 + 313);
  swift_release();
  swift_bridgeObjectRelease_n();
  swift_task_dealloc();
  uint64_t v22 = v28;
  *(void *)(v26 + 240) = v28;
  unint64_t v23 = (void *)swift_task_alloc();
  *(void *)(v26 + 248) = v23;
  *unint64_t v23 = v26;
  v23[1] = sub_251ACD030;
  uint64_t v24 = *(void *)(v26 + 224);
  uint64_t v25 = *(void *)(v26 + 104);
  return sub_251AD1108(v22, v19, v20, v24, v25, v21 & 1);
}

uint64_t sub_251ACD030()
{
  *(void *)(*(void *)v1 + 256) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0) {
    uint64_t v2 = sub_251ACD164;
  }
  else {
    uint64_t v2 = sub_251AD2C60;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_251ACD164()
{
  uint64_t v1 = *(void **)(v0 + 192);
  uint64_t v2 = *(void *)(v0 + 152);

  sub_251AD2BA0(v2, type metadata accessor for StateSnapshot);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_251ACD214()
{
  id v1 = objc_msgSend(self, sel_processInfo);
  id v2 = objc_msgSend(v1, sel_environment);

  uint64_t v3 = sub_251F35550();
  if (*(void *)(v3 + 16) && (sub_2519FE798(0xD00000000000001BLL, 0x8000000251F68FC0), (v4 & 1) != 0))
  {
    uint64_t v5 = v0[26];
    uint64_t v6 = v0[24];
    swift_bridgeObjectRelease();
    uint64_t v7 = (void *)swift_task_alloc();
    v0[38] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_251ACD568;
    uint64_t v8 = v0[33];
    uint64_t v9 = v0[28];
    uint64_t v10 = v0[20];
    v7[8] = v6;
    v7[9] = v9;
    void v7[6] = v10;
    v7[7] = v5;
    v7[5] = v8;
    unint64_t v11 = sub_251ACEF38;
  }
  else
  {
    uint64_t v12 = v0[34];
    int64_t v13 = (void *)v0[26];
    unint64_t v14 = (void *)v0[24];
    uint64_t v15 = v0[15];
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v16 = sub_251F35CD0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
    swift_retain();
    uint64_t v17 = sub_251F35C70();
    uint64_t v18 = (void *)swift_allocObject();
    uint64_t v19 = MEMORY[0x263F8F500];
    v18[2] = v17;
    v18[3] = v19;
    v18[4] = &unk_269B9D9C0;
    v18[5] = v12;
    sub_251ACBB48(v15, (uint64_t)&unk_269B9D9C8, (uint64_t)v18);
    swift_release();
    swift_release();
    swift_release_n();
    swift_bridgeObjectRelease();

    unint64_t v11 = sub_251ACD498;
  }
  return MEMORY[0x270FA2498](v11, 0, 0);
}

uint64_t sub_251ACD498()
{
  id v1 = *(void **)(v0 + 192);
  uint64_t v3 = *(void *)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t v4 = *(void *)(v0 + 136);
  uint64_t v5 = *(void *)(v0 + 88);

  sub_251ACFFCC(v2, v5);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v3 + 56))(v5, 0, 1, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_251ACD568()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 296);
  uint64_t v3 = *(void *)(v1 + 288);
  return MEMORY[0x270FA2498](sub_251ACD688, v3, v2);
}

uint64_t sub_251ACD688()
{
  uint64_t v1 = *(void **)(v0 + 208);
  uint64_t v2 = *(void **)(v0 + 192);
  swift_bridgeObjectRelease();
  swift_release_n();
  swift_release();
  swift_release();

  return MEMORY[0x270FA2498](sub_251ACD498, 0, 0);
}

id sub_251ACD734(uint64_t a1, void *a2)
{
  id v4 = a2;
  if (!a2)
  {
    uint64_t v5 = v2;
    uint64_t v6 = sub_251F34DA0();
    v26[1] = v26;
    uint64_t v7 = *(void *)(v6 - 8);
    MEMORY[0x270FA5388](v6);
    uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    void v26[2] = v26;
    MEMORY[0x270FA5388](v10 - 8);
    uint64_t v12 = (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DA40);
    MEMORY[0x270FA5388](v13 - 8);
    uint64_t v15 = (char *)v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v16 = swift_bridgeObjectRetain();
    sub_251ABD6AC(v16, (uint64_t)v15);
    swift_bridgeObjectRelease();
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D990);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v15, 1, v17) == 1)
    {
      sub_251A1B064((uint64_t)v15, &qword_269B9DA40);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v12, 1, 1, v6);
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
      v18(v12, v15, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v12, 0, 1, v6);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6) != 1)
      {
        v18(v9, v12, v6);
        uint64_t v22 = (void *)sub_251F34D50();
        id v23 = objc_msgSend(v5, sel_serviceFor_, v22);

        if (v23)
        {
          id v24 = objc_msgSend(v23, sel_accessory);
          if (v24)
          {
            uint64_t v25 = v24;
            id v4 = objc_msgSend(v24, sel_home);

            (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
            if (v4) {
              goto LABEL_7;
            }
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
          }
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        }
        goto LABEL_6;
      }
    }
    sub_251A1B064((uint64_t)v12, &qword_26B21FF90);
LABEL_6:
    swift_getKeyPath();
    v26[3] = v5;
    sub_251AD2C08();
    sub_251F34F10();
    swift_release();
    id v4 = *(id *)&v5[OBJC_IVAR____TtC13HomeDataModel9DataModel__currentHome];
    id v19 = v4;
  }
LABEL_7:
  id v20 = a2;
  return v4;
}

uint64_t sub_251ACDB28(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 256) = a3;
  *(void *)(v4 + 264) = a4;
  *(void *)(v4 + 248) = a1;
  *(void *)(v4 + 272) = type metadata accessor for StateSnapshot.UpdateType(0);
  *(void *)(v4 + 280) = swift_task_alloc();
  type metadata accessor for StateSnapshot(0);
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = *a2;
  *(void *)(v4 + 288) = v6;
  *(void *)(v4 + 296) = v7;
  *(unsigned char *)(v4 + 400) = *((unsigned char *)a2 + 8);
  return MEMORY[0x270FA2498](sub_251ACDBFC, 0, 0);
}

uint64_t sub_251ACDBFC()
{
  *(void *)(v0 + 304) = sub_251F35C80();
  swift_bridgeObjectRetain();
  *(void *)(v0 + 312) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251ACDCA0, v2, v1);
}

uint64_t sub_251ACDCA0()
{
  uint64_t v25 = v0;
  uint64_t v1 = *(void *)(v0 + 296);
  swift_release();
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t v23 = v1 + 64;
  uint64_t v24 = MEMORY[0x263F8EE80];
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D990);
  uint64_t v7 = swift_task_alloc();
  int64_t v8 = (unint64_t)(63 - v3) >> 6;
  uint64_t v9 = swift_bridgeObjectRetain_n();
  int64_t v12 = 0;
  if (!v5) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v13 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  for (unint64_t i = v13 | (v12 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v12 << 6))
  {
    uint64_t v18 = *(void *)(v1 + 48);
    uint64_t v19 = sub_251F34DA0();
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v7, v18 + *(void *)(*(void *)(v19 - 8) + 72) * i, v19);
    *(void *)(v7 + *(int *)(v6 + 48)) = *(void *)(*(void *)(v1 + 56) + 8 * i);
    uint64_t v20 = swift_task_alloc();
    sub_251A4ECF0(v7, v20, &qword_269B9D990);
    swift_bridgeObjectRetain();
    sub_251AF3CF4(&v24, v20);
    sub_251A1B064(v20, &qword_269B9D990);
    uint64_t v9 = swift_task_dealloc();
    if (v5) {
      goto LABEL_5;
    }
LABEL_6:
    int64_t v15 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
LABEL_28:
      __break(1u);
      return MEMORY[0x270FA2498](v9, v10, v11);
    }
    if (v15 >= v8) {
      goto LABEL_24;
    }
    unint64_t v16 = *(void *)(v23 + 8 * v15);
    ++v12;
    if (!v16)
    {
      int64_t v12 = v15 + 1;
      if (v15 + 1 >= v8) {
        goto LABEL_24;
      }
      unint64_t v16 = *(void *)(v23 + 8 * v12);
      if (!v16)
      {
        int64_t v12 = v15 + 2;
        if (v15 + 2 >= v8) {
          goto LABEL_24;
        }
        unint64_t v16 = *(void *)(v23 + 8 * v12);
        if (!v16)
        {
          int64_t v12 = v15 + 3;
          if (v15 + 3 >= v8) {
            goto LABEL_24;
          }
          unint64_t v16 = *(void *)(v23 + 8 * v12);
          if (!v16) {
            break;
          }
        }
      }
    }
LABEL_21:
    unint64_t v5 = (v16 - 1) & v16;
  }
  int64_t v17 = v15 + 4;
  if (v17 < v8)
  {
    unint64_t v16 = *(void *)(v23 + 8 * v17);
    if (!v16)
    {
      while (1)
      {
        int64_t v12 = v17 + 1;
        if (__OFADD__(v17, 1)) {
          goto LABEL_28;
        }
        if (v12 >= v8) {
          goto LABEL_24;
        }
        unint64_t v16 = *(void *)(v23 + 8 * v12);
        ++v17;
        if (v16) {
          goto LABEL_21;
        }
      }
    }
    int64_t v12 = v17;
    goto LABEL_21;
  }
LABEL_24:
  swift_release();
  swift_bridgeObjectRelease_n();
  swift_task_dealloc();
  *(void *)(v22 + 320) = v24;
  uint64_t v9 = (uint64_t)sub_251ACDFD8;
  uint64_t v10 = 0;
  uint64_t v11 = 0;
  return MEMORY[0x270FA2498](v9, v10, v11);
}

uint64_t sub_251ACDFD8()
{
  unint64_t v68 = v0;
  uint64_t v1 = v0 + 56;
  int64_t v61 = (void *)(v0 + 96);
  unint64_t v62 = v0 + 16;
  id v60 = (_OWORD *)(v0 + 176);
  uint64_t v2 = *(void *)(v0 + 320);
  uint64_t v3 = (void *)sub_2519F9CFC(MEMORY[0x263F8EE78]);
  uint64_t v52 = v2 + 64;
  uint64_t v4 = -1;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  if (-v5 < 64) {
    uint64_t v4 = ~(-1 << -(char)v5);
  }
  unint64_t v6 = v4 & *(void *)(v2 + 64);
  int64_t v53 = (unint64_t)(63 - v5) >> 6;
  uint64_t v7 = v0 + 104;
  uint64_t v57 = v0 + 64;
  uint64_t v58 = v0 + 24;
  uint64_t v56 = (_OWORD *)(v0 + 144);
  uint64_t v59 = v2;
  swift_bridgeObjectRetain();
  int64_t v8 = 0;
  uint64_t v54 = v0 + 56;
  unint64_t v55 = v0;
  while (1)
  {
    *(void *)(v0 + 328) = v3;
    if (v6)
    {
      uint64_t v63 = (v6 - 1) & v6;
      int64_t v64 = v8;
      unint64_t v10 = __clz(__rbit64(v6)) | (v8 << 6);
    }
    else
    {
      int64_t v11 = v8 + 1;
      if (__OFADD__(v8, 1)) {
        goto LABEL_50;
      }
      if (v11 >= v53)
      {
LABEL_35:
        int v37 = *(unsigned __int8 *)(v0 + 400);
        swift_release();
        swift_bridgeObjectRelease();
        if (v37 == 1)
        {
          if (qword_26B21F2C0 == -1) {
            goto LABEL_37;
          }
          goto LABEL_52;
        }
        *(void *)(v0 + 368) = sub_251F35C70();
        uint64_t v47 = sub_251F35C00();
        uint64_t v49 = v48;
        uint64_t v50 = sub_251ACEAAC;
LABEL_45:
        return MEMORY[0x270FA2498](v50, v47, v49);
      }
      unint64_t v12 = *(void *)(v52 + 8 * v11);
      int64_t v13 = v8 + 1;
      if (!v12)
      {
        int64_t v13 = v8 + 2;
        if (v8 + 2 >= v53) {
          goto LABEL_35;
        }
        unint64_t v12 = *(void *)(v52 + 8 * v13);
        if (!v12)
        {
          int64_t v13 = v8 + 3;
          if (v8 + 3 >= v53) {
            goto LABEL_35;
          }
          unint64_t v12 = *(void *)(v52 + 8 * v13);
          if (!v12)
          {
            int64_t v13 = v8 + 4;
            if (v8 + 4 >= v53) {
              goto LABEL_35;
            }
            unint64_t v12 = *(void *)(v52 + 8 * v13);
            if (!v12)
            {
              uint64_t v14 = v8 + 5;
              if (v8 + 5 >= v53) {
                goto LABEL_35;
              }
              unint64_t v12 = *(void *)(v52 + 8 * v14);
              if (!v12)
              {
                while (1)
                {
                  int64_t v13 = v14 + 1;
                  if (__OFADD__(v14, 1)) {
                    goto LABEL_51;
                  }
                  if (v13 >= v53) {
                    goto LABEL_35;
                  }
                  unint64_t v12 = *(void *)(v52 + 8 * v13);
                  ++v14;
                  if (v12) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v13 = v8 + 5;
            }
          }
        }
      }
LABEL_23:
      uint64_t v63 = (v12 - 1) & v12;
      int64_t v64 = v13;
      unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
    }
    int64_t v15 = *(void **)(*(void *)(v59 + 48) + 8 * v10);
    sub_251A0D51C(*(void *)(v59 + 56) + 32 * v10, v58);
    *(void *)unint64_t v62 = v15;
    long long v16 = *(_OWORD *)(v62 + 16);
    *(_OWORD *)uint64_t v1 = *(_OWORD *)v62;
    *(_OWORD *)(v1 + 16) = v16;
    *(void *)(v1 + 32) = *(void *)(v62 + 32);
    int64_t v17 = *(void **)v1;
    *int64_t v61 = *(void *)v1;
    uint64_t v18 = v7;
    sub_251A0D51C(v57, v7);
    sub_251A0D51C(v57, (uint64_t)v56);
    sub_251A0D578(v56, v60);
    id v19 = v15;
    id v20 = v17;
    StateSnapshot.CharacteristicUpdateType.ValueType.init(value:)((uint64_t)v60, (uint64_t)v65);
    uint64_t v21 = v65[0];
    uint64_t v22 = v65[1];
    char v23 = v66;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v67 = v3;
    unint64_t v0 = sub_2519FE68C((uint64_t)v20);
    uint64_t v26 = v3[2];
    BOOL v27 = (v25 & 1) == 0;
    uint64_t v28 = v26 + v27;
    if (__OFADD__(v26, v27))
    {
      __break(1u);
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
LABEL_51:
      __break(1u);
LABEL_52:
      swift_once();
LABEL_37:
      uint64_t v38 = sub_251F350A0();
      __swift_project_value_buffer(v38, (uint64_t)qword_26B21F290);
      swift_bridgeObjectRetain_n();
      char v39 = sub_251F35080();
      os_log_type_t v40 = sub_251F35FD0();
      if (os_log_type_enabled(v39, v40))
      {
        unint64_t v41 = (uint8_t *)swift_slowAlloc();
        uint64_t v42 = swift_slowAlloc();
        v65[0] = v42;
        *(_DWORD *)unint64_t v41 = 136446210;
        sub_251A1A568(0, (unint64_t *)&qword_26B21F170);
        sub_251AD2B44();
        swift_bridgeObjectRetain();
        uint64_t v43 = sub_251F35560();
        unint64_t v45 = v44;
        swift_bridgeObjectRelease();
        *(void *)(v0 + 240) = sub_251A00E84(v43, v45, v65);
        sub_251F361D0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_2519F3000, v39, v40, "Starting local override writing: %{public}s", v41, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x2533AC760](v42, -1, -1);
        MEMORY[0x2533AC760](v41, -1, -1);
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      *(void *)(v0 + 336) = sub_251F35C70();
      uint64_t v47 = sub_251F35C00();
      uint64_t v49 = v51;
      uint64_t v50 = sub_251ACE648;
      goto LABEL_45;
    }
    char v29 = v25;
    if (v3[3] < v28) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      if (v25) {
        goto LABEL_4;
      }
    }
    else
    {
      sub_251A1417C();
      uint64_t v3 = v67;
      if (v29)
      {
LABEL_4:
        uint64_t v9 = v3[7] + 24 * v0;
        sub_251A1AD70(*(void *)v9, *(void *)(v9 + 8), *(unsigned char *)(v9 + 16));
        *(void *)uint64_t v9 = v21;
        *(void *)(v9 + 8) = v22;
        *(unsigned char *)(v9 + 16) = v23;
        goto LABEL_5;
      }
    }
LABEL_31:
    v3[(v0 >> 6) + 8] |= 1 << v0;
    *(void *)(v3[6] + 8 * v0) = v20;
    uint64_t v32 = v3[7] + 24 * v0;
    *(void *)uint64_t v32 = v21;
    *(void *)(v32 + 8) = v22;
    *(unsigned char *)(v32 + 16) = v23;
    uint64_t v33 = v3[2];
    BOOL v34 = __OFADD__(v33, 1);
    uint64_t v35 = v33 + 1;
    if (v34) {
      goto LABEL_49;
    }
    v3[2] = v35;
    id v36 = v20;
LABEL_5:
    swift_bridgeObjectRelease();

    uint64_t v7 = v18;
    __swift_destroy_boxed_opaque_existential_0(v18);
    uint64_t v1 = v54;
    sub_251A1B064(v54, &qword_269B9D760);
    unint64_t v0 = v55;
    unint64_t v6 = v63;
    int64_t v8 = v64;
  }
  sub_251A057BC(v28, isUniquelyReferenced_nonNull_native);
  uint64_t v3 = v67;
  unint64_t v30 = sub_2519FE68C((uint64_t)v20);
  if ((v29 & 1) == (v31 & 1))
  {
    unint64_t v0 = v30;
    if (v29) {
      goto LABEL_4;
    }
    goto LABEL_31;
  }
  sub_251A1A568(0, (unint64_t *)&qword_26B21F170);
  return sub_251F36BA0();
}

uint64_t sub_251ACE648()
{
  swift_release();
  if (qword_26B21E6F8 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251ACE6E0, 0, 0);
}

uint64_t sub_251ACE6E0()
{
  *(void *)(v0 + 344) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251ACE76C, v2, v1);
}

uint64_t sub_251ACE76C()
{
  swift_release();
  *(void *)(v0 + 352) = qword_26B21E638;
  return MEMORY[0x270FA2498](sub_251ACE7E0, 0, 0);
}

uint64_t sub_251ACE7E0()
{
  uint64_t v1 = v0[35];
  *(void *)uint64_t v1 = v0[41];
  *(void *)(v1 + 8) = 0;
  *(unsigned char *)(v1 + 16) = 3;
  swift_storeEnumTagMultiPayload();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[45] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_251ACE89C;
  uint64_t v4 = v0[35];
  uint64_t v3 = v0[36];
  uint64_t v6 = v0[32];
  uint64_t v5 = v0[33];
  return sub_251F2AD24(v3, v4, v5, v6, 0);
}

uint64_t sub_251ACE89C(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  *(void *)(v3 + 208) = v1;
  *(void *)(v3 + 216) = a1;
  uint64_t v4 = *(void *)(v2 + 280);
  swift_task_dealloc();
  sub_251AD2BA0(v4, type metadata accessor for StateSnapshot.UpdateType);
  return MEMORY[0x270FA2498](sub_251ACE9CC, 0, 0);
}

uint64_t sub_251ACE9CC()
{
  uint64_t v1 = v0[27];
  uint64_t v2 = v0[36];
  uint64_t v3 = v0[31];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E390);
  uint64_t v5 = *(int *)(v4 + 48);
  sub_251ACFFCC(v2, v3);
  *(void *)(v3 + v5) = v1;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 0, 1, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_251ACEAAC()
{
  swift_release();
  if (qword_26B21E6F8 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251ACEB44, 0, 0);
}

uint64_t sub_251ACEB44()
{
  *(void *)(v0 + 376) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251ACEBD0, v2, v1);
}

uint64_t sub_251ACEBD0()
{
  swift_release();
  *(void *)(v0 + 384) = qword_26B21E638;
  return MEMORY[0x270FA2498](sub_251ACEC44, 0, 0);
}

uint64_t sub_251ACEC44()
{
  uint64_t v1 = v0[35];
  *(void *)uint64_t v1 = v0[41];
  *(void *)(v1 + 8) = 0;
  *(unsigned char *)(v1 + 16) = 2;
  swift_storeEnumTagMultiPayload();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[49] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_251ACED00;
  uint64_t v4 = v0[35];
  uint64_t v3 = v0[36];
  uint64_t v6 = v0[32];
  uint64_t v5 = v0[33];
  return sub_251F2AD24(v3, v4, v5, v6, 0);
}

uint64_t sub_251ACED00(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  *(void *)(v3 + 224) = v1;
  *(void *)(v3 + 232) = a1;
  uint64_t v4 = *(void *)(v2 + 280);
  swift_task_dealloc();
  sub_251AD2BA0(v4, type metadata accessor for StateSnapshot.UpdateType);
  return MEMORY[0x270FA2498](sub_251ACEE30, 0, 0);
}

uint64_t sub_251ACEE30()
{
  uint64_t v1 = v0[29];
  uint64_t v2 = v0[36];
  uint64_t v3 = v0[31];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E390);
  uint64_t v5 = *(int *)(v4 + 48);
  sub_251ACFFCC(v2, v3);
  *(void *)(v3 + v5) = v1;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 0, 1, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_251ACEF10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[8] = a6;
  v7[9] = a7;
  void v7[6] = a2;
  v7[7] = a5;
  v7[5] = a1;
  return MEMORY[0x270FA2498](sub_251ACEF38, 0, 0);
}

uint64_t sub_251ACEF38()
{
  uint64_t v1 = v0[5] + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x2533AC870](v1);
  v0[10] = v2;
  if (v2)
  {
    sub_251F35C80();
    swift_bridgeObjectRetain();
    v0[11] = sub_251F35C70();
    uint64_t v4 = sub_251F35C00();
    return MEMORY[0x270FA2498](sub_251ACF034, v4, v3);
  }
  else
  {
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
}

uint64_t sub_251ACF034()
{
  uint64_t v27 = v0;
  uint64_t v1 = *(void *)(v0 + 48);
  swift_release();
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t v25 = v1 + 64;
  uint64_t v26 = MEMORY[0x263F8EE80];
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D990);
  uint64_t v7 = swift_task_alloc();
  int64_t v8 = (unint64_t)(63 - v3) >> 6;
  uint64_t result = swift_bridgeObjectRetain_n();
  int64_t v10 = 0;
  if (!v5) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v11 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  for (unint64_t i = v11 | (v10 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v10 << 6))
  {
    uint64_t v16 = *(void *)(v1 + 48);
    uint64_t v17 = sub_251F34DA0();
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v7, v16 + *(void *)(*(void *)(v17 - 8) + 72) * i, v17);
    *(void *)(v7 + *(int *)(v6 + 48)) = *(void *)(*(void *)(v1 + 56) + 8 * i);
    uint64_t v18 = swift_task_alloc();
    sub_251A4ECF0(v7, v18, &qword_269B9D990);
    swift_bridgeObjectRetain();
    sub_251AF3CF4(&v26, v18);
    sub_251A1B064(v18, &qword_269B9D990);
    uint64_t result = swift_task_dealloc();
    if (v5) {
      goto LABEL_5;
    }
LABEL_6:
    int64_t v13 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
LABEL_28:
      __break(1u);
      return result;
    }
    if (v13 >= v8) {
      goto LABEL_24;
    }
    unint64_t v14 = *(void *)(v25 + 8 * v13);
    ++v10;
    if (!v14)
    {
      int64_t v10 = v13 + 1;
      if (v13 + 1 >= v8) {
        goto LABEL_24;
      }
      unint64_t v14 = *(void *)(v25 + 8 * v10);
      if (!v14)
      {
        int64_t v10 = v13 + 2;
        if (v13 + 2 >= v8) {
          goto LABEL_24;
        }
        unint64_t v14 = *(void *)(v25 + 8 * v10);
        if (!v14)
        {
          int64_t v10 = v13 + 3;
          if (v13 + 3 >= v8) {
            goto LABEL_24;
          }
          unint64_t v14 = *(void *)(v25 + 8 * v10);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_21:
    unint64_t v5 = (v14 - 1) & v14;
  }
  int64_t v15 = v13 + 4;
  if (v15 < v8)
  {
    unint64_t v14 = *(void *)(v25 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t v10 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_28;
        }
        if (v10 >= v8) {
          goto LABEL_24;
        }
        unint64_t v14 = *(void *)(v25 + 8 * v10);
        ++v15;
        if (v14) {
          goto LABEL_21;
        }
      }
    }
    int64_t v10 = v15;
    goto LABEL_21;
  }
LABEL_24:
  swift_release();
  swift_bridgeObjectRelease_n();
  swift_task_dealloc();
  uint64_t v19 = v26;
  v24[12] = v26;
  id v20 = (void *)swift_task_alloc();
  v24[13] = v20;
  *id v20 = v24;
  v20[1] = sub_251ACF3AC;
  uint64_t v21 = v24[8];
  uint64_t v22 = v24[9];
  uint64_t v23 = v24[7];
  return sub_251AD1108(v19, v23, v21, v22, 0, 1);
}

uint64_t sub_251ACF3AC()
{
  uint64_t v2 = (void *)*v1;
  v2[14] = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_251ACF4F0, 0, 0);
  }
  else
  {
    uint64_t v3 = (void *)v2[10];
    swift_bridgeObjectRelease();

    uint64_t v4 = (uint64_t (*)(void))v2[1];
    return v4();
  }
}

uint64_t sub_251ACF4F0()
{
  uint64_t v1 = (void *)v0[14];
  uint64_t v2 = (void *)v0[10];
  swift_bridgeObjectRelease();

  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t DataModel.write(valueUpdate:deviceIDs:snapshot:waitForWriteRequestCompletion:)(uint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4, char a5)
{
  *(unsigned char *)(v5 + 128) = a5;
  *(void *)(v5 + 88) = a3;
  *(void *)(v5 + 96) = a4;
  *(void *)(v5 + 80) = a1;
  *(unsigned char *)(v5 + 129) = *a2;
  return MEMORY[0x270FA2498](sub_251ACF594, 0, 0);
}

uint64_t sub_251ACF594()
{
  char v1 = *(unsigned char *)(v0 + 129);
  if (v1 < 0)
  {
    int64_t v10 = (void *)swift_task_alloc();
    *(void *)(v0 + 104) = v10;
    *int64_t v10 = v0;
    v10[1] = sub_251ACF818;
    uint64_t v11 = *(void *)(v0 + 88);
    uint64_t v12 = *(void *)(v0 + 96);
    uint64_t v13 = *(void *)(v0 + 80);
    return sub_251D3EA38(v13, v1 & 1, v11, v12);
  }
  else
  {
    uint64_t v3 = *(void *)(v0 + 88);
    uint64_t v2 = *(void *)(v0 + 96);
    uint64_t v4 = swift_task_alloc();
    *(void *)(v4 + 16) = v2;
    uint64_t v5 = sub_251A52394((void (*)(long long *__return_ptr, char *))sub_251AD2768, v4, v3);
    swift_task_dealloc();
    swift_getKeyPath();
    uint64_t v18 = MEMORY[0x263F8EE78];
    uint64_t v6 = v5[2];
    if (v6)
    {
      uint64_t v7 = 0;
      do
      {
        int64_t v8 = &v5[2 * v7++];
        *(_OWORD *)(v0 + 56) = *((_OWORD *)v8 + 2);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_getAtKeyPath();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_251ED6D48(*(void *)(v0 + 72));
      }
      while (v6 != v7);
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v9 = v18;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v9 = MEMORY[0x263F8EE78];
    }
    *(void *)(v0 + 40) = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D9E0);
    *(void *)(v0 + 48) = sub_251AD2824();
    *(void *)(v0 + 16) = v9;
    int64_t v15 = (void *)swift_task_alloc();
    *(void *)(v0 + 112) = v15;
    *int64_t v15 = v0;
    v15[1] = sub_251ACF90C;
    char v16 = *(unsigned char *)(v0 + 128);
    uint64_t v17 = *(void *)(v0 + 80);
    return static StaticLightProfile.setNaturalLight(_:lightProfiles:waitForWriteRequestCompletion:)(v17, v1 & 1, v0 + 16, v16);
  }
}

uint64_t sub_251ACF818()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  char v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_251ACF90C()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 120) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_251ACFA48, 0, 0);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0(v2 + 16);
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_251ACFA48()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  char v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

unint64_t sub_251ACFAAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for StaticService();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t result = type metadata accessor for StateSnapshot(0);
  uint64_t v11 = *(void *)(a2 + *(int *)(result + 60));
  if (*(void *)(v11 + 16) && (unint64_t result = sub_2519FE584(a1), (v12 & 1) != 0))
  {
    sub_251AD2AE0(*(void *)(v11 + 56) + *(void *)(v7 + 72) * result, (uint64_t)v9);
    uint64_t v13 = &v9[*(int *)(v6 + 116)];
    uint64_t v14 = *(void *)v13;
    uint64_t v15 = *((void *)v13 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_251AD2BA0((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticService);
    *a3 = v14;
    a3[1] = v15;
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
  }
  return result;
}

uint64_t sub_251ACFBEC(void *a1, uint64_t a2)
{
  if (a1)
  {
    id v4 = a1;
    id v5 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D1B0);
    if (swift_dynamicCast())
    {
      uint64_t v6 = swift_bridgeObjectRetain();
      sub_251EDCA10(v6);
      unint64_t v8 = v7;
      swift_bridgeObjectRetain();
      id v9 = v42;

      unint64_t v10 = sub_2519FA028(MEMORY[0x263F8EE78]);
      swift_bridgeObjectRetain();
      sub_251CC7C6C(v10, v8, v41);
      char v12 = v11;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v12 = (void *)sub_2519FA028(MEMORY[0x263F8EE78]);
    }

    return (uint64_t)v12;
  }
  swift_bridgeObjectRetain();
  char v12 = (void *)sub_2519FA028(MEMORY[0x263F8EE78]);
  uint64_t v40 = a2 + 64;
  uint64_t v13 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(a2 + 64);
  int64_t v16 = (unint64_t)(v13 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v17 = 0;
  while (1)
  {
    if (v15)
    {
      unint64_t v19 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v20 = v19 | (v17 << 6);
    }
    else
    {
      int64_t v21 = v17 + 1;
      if (__OFADD__(v17, 1)) {
        goto LABEL_46;
      }
      if (v21 >= v16)
      {
LABEL_40:
        swift_release();
        swift_bridgeObjectRelease();
        return (uint64_t)v12;
      }
      unint64_t v22 = *(void *)(v40 + 8 * v21);
      ++v17;
      if (!v22)
      {
        int64_t v17 = v21 + 1;
        if (v21 + 1 >= v16) {
          goto LABEL_40;
        }
        unint64_t v22 = *(void *)(v40 + 8 * v17);
        if (!v22)
        {
          int64_t v17 = v21 + 2;
          if (v21 + 2 >= v16) {
            goto LABEL_40;
          }
          unint64_t v22 = *(void *)(v40 + 8 * v17);
          if (!v22)
          {
            int64_t v17 = v21 + 3;
            if (v21 + 3 >= v16) {
              goto LABEL_40;
            }
            unint64_t v22 = *(void *)(v40 + 8 * v17);
            if (!v22)
            {
              int64_t v17 = v21 + 4;
              if (v21 + 4 >= v16) {
                goto LABEL_40;
              }
              unint64_t v22 = *(void *)(v40 + 8 * v17);
              if (!v22)
              {
                int64_t v23 = v21 + 5;
                if (v23 >= v16) {
                  goto LABEL_40;
                }
                unint64_t v22 = *(void *)(v40 + 8 * v23);
                if (!v22)
                {
                  while (1)
                  {
                    int64_t v17 = v23 + 1;
                    if (__OFADD__(v23, 1)) {
                      goto LABEL_47;
                    }
                    if (v17 >= v16) {
                      goto LABEL_40;
                    }
                    unint64_t v22 = *(void *)(v40 + 8 * v17);
                    ++v23;
                    if (v22) {
                      goto LABEL_28;
                    }
                  }
                }
                int64_t v17 = v23;
              }
            }
          }
        }
      }
LABEL_28:
      unint64_t v15 = (v22 - 1) & v22;
      unint64_t v20 = __clz(__rbit64(v22)) + (v17 << 6);
    }
    id v24 = *(id *)(*(void *)(a2 + 48) + 8 * v20);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v27 = sub_2519FE68C((uint64_t)v24);
    uint64_t v28 = v12[2];
    BOOL v29 = (v26 & 1) == 0;
    uint64_t v30 = v28 + v29;
    if (__OFADD__(v28, v29)) {
      break;
    }
    char v31 = v26;
    if (v12[3] >= v30)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v26) {
          goto LABEL_7;
        }
      }
      else
      {
        sub_251A127FC();
        if (v31) {
          goto LABEL_7;
        }
      }
    }
    else
    {
      sub_251A023CC(v30, isUniquelyReferenced_nonNull_native);
      unint64_t v32 = sub_2519FE68C((uint64_t)v24);
      if ((v31 & 1) != (v33 & 1)) {
        goto LABEL_48;
      }
      unint64_t v27 = v32;
      if (v31)
      {
LABEL_7:
        uint64_t v18 = v12[7] + 32 * v27;
        sub_251A1A5A4(*(void *)v18, *(void *)(v18 + 8), *(void *)(v18 + 16), *(unsigned char *)(v18 + 24));
        *(void *)(v18 + 8) = 0;
        *(void *)(v18 + 16) = 0;
        *(void *)uint64_t v18 = 1;
        *(unsigned char *)(v18 + 24) = 3;
        goto LABEL_8;
      }
    }
    v12[(v27 >> 6) + 8] |= 1 << v27;
    *(void *)(v12[6] + 8 * v27) = v24;
    uint64_t v34 = v12[7] + 32 * v27;
    *(void *)(v34 + 8) = 0;
    *(void *)(v34 + 16) = 0;
    *(void *)uint64_t v34 = 1;
    *(unsigned char *)(v34 + 24) = 3;
    uint64_t v35 = v12[2];
    BOOL v36 = __OFADD__(v35, 1);
    uint64_t v37 = v35 + 1;
    if (v36) {
      goto LABEL_45;
    }
    void v12[2] = v37;
    id v38 = v24;
LABEL_8:

    swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  sub_251A1A568(0, (unint64_t *)&qword_26B21F170);
  uint64_t result = sub_251F36BA0();
  __break(1u);
  return result;
}

uint64_t sub_251ACFFCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StateSnapshot(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_251AD0030()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_251AD0068()
{
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 72, 7);
}

uint64_t sub_251AD00B8()
{
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v3 = swift_task_alloc();
  long long v4 = *(_OWORD *)(v0 + 16);
  long long v5 = *(_OWORD *)(v0 + 48);
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_251AB3DD4;
  *(void *)(v3 + 72) = v2;
  *(_OWORD *)(v3 + 56) = v5;
  *(_OWORD *)(v3 + 40) = v4;
  return MEMORY[0x270FA2498](sub_251ACEF38, 0, 0);
}

uint64_t sub_251AD0174()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_251AD01B4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_251AB3A34;
  return sub_251AEA548(a1, v4, v5, v6);
}

uint64_t sub_251AD0274(uint64_t a1, int *a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_251AD0354;
  return v5(v2 + 32);
}

uint64_t sub_251AD0354()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(unsigned char **)(*v0 + 16);
  uint64_t v5 = *v0;
  swift_task_dealloc();
  *uint64_t v2 = *(unsigned char *)(v1 + 32);
  uint64_t v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

uint64_t sub_251AD0468(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[21] = a4;
  v5[22] = a5;
  v5[19] = a2;
  v5[20] = a3;
  v5[18] = a1;
  v5[23] = type metadata accessor for StateSnapshot.UpdateType(0);
  v5[24] = swift_task_alloc();
  type metadata accessor for StateSnapshot(0);
  v5[25] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251AD0530, 0, 0);
}

uint64_t sub_251AD0530()
{
  *(void *)(v0 + 208) = sub_251F35C80();
  *(void *)(v0 + 216) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251AD05C8, v2, v1);
}

uint64_t sub_251AD05C8()
{
  swift_release();
  if (qword_26B21E6F8 != -1) {
    swift_once();
  }
  return MEMORY[0x270FA2498](sub_251AD0660, 0, 0);
}

uint64_t sub_251AD0660()
{
  *(void *)(v0 + 224) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251AD06EC, v2, v1);
}

uint64_t sub_251AD06EC()
{
  swift_release();
  *(void *)(v0 + 232) = qword_26B21E638;
  return MEMORY[0x270FA2498](sub_251AD0760, 0, 0);
}

uint64_t sub_251AD0760()
{
  uint64_t v1 = *(void *)(v0 + 232);
  id v2 = objc_msgSend(*(id *)(v0 + 152), sel_uniqueIdentifier);
  uint64_t v3 = sub_251F34DA0();
  *(void *)(v0 + 240) = v3;
  *(void *)(v0 + 248) = *(void *)(v3 - 8);
  *(void *)(v0 + 256) = swift_task_alloc();
  sub_251F34D80();

  return MEMORY[0x270FA2498](sub_251AD084C, v1, 0);
}

uint64_t sub_251AD084C()
{
  uint64_t v1 = v0[29];
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 128);
  if (*(void *)(v2 + 16))
  {
    uint64_t v3 = v0[32];
    swift_bridgeObjectRetain();
    unint64_t v4 = sub_2519FE584(v3);
    if (v5) {
      uint64_t v6 = *(void *)(*(void *)(v2 + 56) + 8 * v4);
    }
    else {
      uint64_t v6 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = 0;
  }
  v0[33] = v6;
  (*(void (**)(void, void))(v0[31] + 8))(v0[32], v0[30]);
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251AD0930, 0, 0);
}

uint64_t sub_251AD0930()
{
  uint64_t v15 = v0;
  if (*(void *)(v0 + 264) == *(void *)(v0 + 168))
  {
    if (qword_26B21F2C0 != -1) {
      swift_once();
    }
    uint64_t v1 = sub_251F350A0();
    __swift_project_value_buffer(v1, (uint64_t)qword_26B21F290);
    swift_bridgeObjectRetain_n();
    uint64_t v2 = sub_251F35080();
    os_log_type_t v3 = sub_251F35FD0();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = *(void *)(v0 + 168);
      uint64_t v5 = swift_slowAlloc();
      uint64_t v6 = swift_slowAlloc();
      uint64_t v14 = v6;
      *(_DWORD *)uint64_t v5 = 134218242;
      *(void *)(v0 + 128) = v4;
      sub_251F361D0();
      *(_WORD *)(v5 + 12) = 2080;
      sub_251A1A568(0, (unint64_t *)&qword_26B21F170);
      sub_251AD2B44();
      swift_bridgeObjectRetain();
      uint64_t v7 = sub_251F35560();
      unint64_t v9 = v8;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 136) = sub_251A00E84(v7, v9, &v14);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_2519F3000, v2, v3, "iteration: %ld, override updates finishes: %s", (uint8_t *)v5, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v6, -1, -1);
      MEMORY[0x2533AC760](v5, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    *(void *)(v0 + 272) = sub_251ACFBEC(*(void **)(v0 + 176), *(void *)(v0 + 144));
    *(void *)(v0 + 280) = sub_251F35C70();
    uint64_t v13 = sub_251F35C00();
    return MEMORY[0x270FA2498](sub_251AD0C34, v13, v12);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
    return v10();
  }
}

uint64_t sub_251AD0C34()
{
  swift_release();
  return MEMORY[0x270FA2498](sub_251AD0C9C, 0, 0);
}

uint64_t sub_251AD0C9C()
{
  *(void *)(v0 + 288) = sub_251F35C70();
  uint64_t v2 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251AD0D28, v2, v1);
}

uint64_t sub_251AD0D28()
{
  swift_release();
  *(void *)(v0 + 296) = qword_26B21E638;
  return MEMORY[0x270FA2498](sub_251AD0D9C, 0, 0);
}

uint64_t sub_251AD0D9C()
{
  uint64_t v1 = v0[24];
  *(void *)uint64_t v1 = v0[34];
  *(void *)(v1 + 8) = 0;
  *(unsigned char *)(v1 + 16) = 1;
  swift_storeEnumTagMultiPayload();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[38] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_251AD0E58;
  uint64_t v4 = v0[24];
  uint64_t v3 = v0[25];
  uint64_t v6 = v0[19];
  uint64_t v5 = v0[20];
  return sub_251F2AD24(v3, v4, v5, v6, 0);
}

uint64_t sub_251AD0E58()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 200);
  uint64_t v2 = *(void *)(*(void *)v0 + 192);
  swift_task_dealloc();
  sub_251AD2BA0(v2, type metadata accessor for StateSnapshot.UpdateType);
  sub_251AD2BA0(v1, type metadata accessor for StateSnapshot);
  return MEMORY[0x270FA2498](sub_251AD0FB4, 0, 0);
}

uint64_t sub_251AD0FB4()
{
  uint64_t v1 = *(void **)(v0 + 152);
  *(void *)(v0 + 120) = v1;
  sub_251A1A568(0, (unint64_t *)&qword_26B21F2D0);
  id v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DA30);
  if (swift_dynamicCast())
  {
    sub_251A1A444((long long *)(v0 + 56), v0 + 16);
    uint64_t v3 = *(void *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
    uint64_t v4 = swift_bridgeObjectRetain();
    sub_251EDCA10(v4);
    (*(void (**)(void))(v3 + 8))();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  }
  else
  {
    *(void *)(v0 + 88) = 0;
    *(_OWORD *)(v0 + 56) = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
    sub_251A1B064(v0 + 56, &qword_269B9DA38);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_251AD1108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  *(unsigned char *)(v6 + 480) = a6;
  *(void *)(v6 + 280) = a4;
  *(void *)(v6 + 288) = a5;
  *(void *)(v6 + 264) = a2;
  *(void *)(v6 + 272) = a3;
  *(void *)(v6 + 256) = a1;
  uint64_t v7 = sub_251F35030();
  *(void *)(v6 + 296) = v7;
  *(void *)(v6 + 304) = *(void *)(v7 - 8);
  *(void *)(v6 + 312) = swift_task_alloc();
  *(void *)(v6 + 320) = swift_task_alloc();
  uint64_t v8 = sub_251F34FE0();
  *(void *)(v6 + 328) = v8;
  *(void *)(v6 + 336) = *(void *)(v8 - 8);
  *(void *)(v6 + 344) = swift_task_alloc();
  *(void *)(v6 + 352) = swift_task_alloc();
  *(void *)(v6 + 360) = swift_task_alloc();
  *(void *)(v6 + 368) = swift_task_alloc();
  *(void *)(v6 + 376) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251AD1274, 0, 0);
}

uint64_t sub_251AD1274()
{
  id v90 = v0;
  uint64_t v1 = *((void *)v0 + 32);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v81 = v0 + 56;
    uint64_t v83 = (uint64_t)(v0 + 16);
    uint64_t v3 = (uint64_t)(v0 + 96);
    unint64_t v89 = MEMORY[0x263F8EE78];
    sub_251F36520();
    uint64_t v4 = sub_251AC5764(v1);
    int v6 = v5;
    char v8 = v7 & 1;
    unint64_t v78 = v0 + 24;
    id v80 = self;
    uint64_t v76 = (uint64_t)(v0 + 64);
    uint64_t v71 = v1;
    os_log_t log = (os_log_t)(v0 + 104);
    unint64_t v9 = v0 + 184;
    uint64_t v69 = v1 + 64;
    uint64_t v86 = v2 - 1;
    uint64_t v10 = (uint64_t)(v0 + 144);
    while (1)
    {
      int v11 = v6;
      id v12 = sub_251AF6DAC(v78, v4, v6, v8 & 1, *((void *)v85 + 32));
      *((void *)v85 + 2) = v12;
      *((void *)v85 + 7) = v12;
      sub_251A0D51C((uint64_t)v78, v76);
      long long v13 = *((_OWORD *)v81 + 1);
      *(_OWORD *)uint64_t v3 = *(_OWORD *)v81;
      *(_OWORD *)(v3 + 16) = v13;
      *(void *)(v3 + 32) = *((void *)v81 + 4);
      id v14 = v12;
      sub_251A1B064(v83, &qword_269B9D760);
      uint64_t v15 = (void *)*((void *)v85 + 12);
      *((void *)v85 + 17) = v15;
      sub_251A0D51C((uint64_t)log, v10);
      *((void *)v85 + 22) = v15;
      sub_251A0D51C((uint64_t)log, (uint64_t)v9);
      __swift_project_boxed_opaque_existential_1(v9, *((void *)v85 + 26));
      id v16 = v15;
      uint64_t v0 = (char *)objc_msgSend(v80, sel_writeRequestWithCharacteristic_value_, v16, sub_251F36B00());

      swift_unknownObjectRelease();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v9);
      __swift_destroy_boxed_opaque_existential_0(v10);
      sub_251A1B064(v3, &qword_269B9D760);
      sub_251F364F0();
      sub_251F36530();
      sub_251F36540();
      uint64_t result = sub_251F36500();
      if (v8)
      {
        __break(1u);
        return result;
      }
      if (v4 < 0 || v4 >= -(-1 << *(unsigned char *)(v71 + 32)))
      {
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }
      if (((*(void *)(v69 + (((unint64_t)v4 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
        goto LABEL_37;
      }
      if (*(_DWORD *)(v71 + 36) != v11) {
        goto LABEL_38;
      }
      uint64_t v18 = sub_251F36280();
      if (!v86) {
        break;
      }
      uint64_t v4 = v18;
      char v8 = 0;
      int v6 = *(_DWORD *)(v71 + 36);
      --v86;
    }
    unint64_t v19 = v89;
    uint64_t v0 = v85;
    if (v89 >> 62) {
      goto LABEL_16;
    }
  }
  else
  {
    unint64_t v19 = MEMORY[0x263F8EE78];
    if (MEMORY[0x263F8EE78] >> 62)
    {
LABEL_16:
      swift_bridgeObjectRetain();
      unint64_t v9 = (void *)sub_251F366C0();
      uint64_t v10 = v19;
      swift_bridgeObjectRelease();
      if ((uint64_t)v9 > 0) {
        goto LABEL_12;
      }
LABEL_17:
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      BOOL v29 = (uint64_t (*)(void))*((void *)v0 + 1);
      return v29();
    }
  }
  uint64_t v10 = v19;
  unint64_t v9 = *(void **)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if ((uint64_t)v9 <= 0) {
    goto LABEL_17;
  }
LABEL_12:
  if (qword_26B21F2C0 != -1) {
LABEL_39:
  }
    swift_once();
  uint64_t v20 = sub_251F350A0();
  *((void *)v0 + 48) = __swift_project_value_buffer(v20, (uint64_t)qword_26B21F290);
  swift_bridgeObjectRetain_n();
  int64_t v21 = sub_251F35080();
  os_log_type_t v22 = sub_251F35FD0();
  id v87 = v9;
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = *((void *)v0 + 35);
    uint64_t v24 = swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    unint64_t v89 = v25;
    *(_DWORD *)uint64_t v24 = 134218242;
    *((void *)v85 + 30) = v23;
    sub_251F361D0();
    *(_WORD *)(v24 + 12) = 2080;
    sub_251A1A568(0, (unint64_t *)&qword_26B21F170);
    sub_251AD2B44();
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_251F35560();
    unint64_t v28 = v27;
    swift_bridgeObjectRelease();
    *((void *)v85 + 31) = sub_251A00E84(v26, v28, (uint64_t *)&v89);
    sub_251F361D0();
    unint64_t v9 = v87;
    swift_bridgeObjectRelease();
    uint64_t v0 = v85;
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2519F3000, v21, v22, "Starting iteration %ld writing: %s", (uint8_t *)v24, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v25, -1, -1);
    MEMORY[0x2533AC760](v24, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  sub_251A1A568(0, &qword_269B9DA20);
  uint64_t v30 = v10;
  swift_bridgeObjectRetain();
  char v31 = (void *)sub_251F35AA0();
  swift_bridgeObjectRelease();
  id v32 = objc_msgSend(self, sel_characteristicBatchRequestWithWriteRequests_, v31);
  *((void *)v0 + 49) = v32;

  if (qword_26B21ED30 != -1) {
    swift_once();
  }
  uint64_t v33 = sub_251F35020();
  *((void *)v0 + 50) = __swift_project_value_buffer(v33, (uint64_t)qword_26B21ED40);
  sub_251F34FD0();
  swift_bridgeObjectRetain_n();
  uint64_t v34 = sub_251F35000();
  os_signpost_type_t v35 = sub_251F36060();
  if (sub_251F36170())
  {
    os_signpost_type_t v72 = v35;
    loga = v34;
    uint64_t v36 = *((void *)v0 + 42);
    unint64_t v77 = (v36 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    id v79 = v32;
    uint64_t v75 = *(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16);
    v75(*((void *)v0 + 46), *((void *)v0 + 47), *((void *)v0 + 41));
    uint64_t v37 = swift_slowAlloc();
    uint64_t v68 = swift_slowAlloc();
    uint64_t v88 = v68;
    *(_DWORD *)uint64_t v37 = 134218242;
    *((void *)v0 + 28) = v9;
    unint64_t v67 = v0 + 232;
    sub_251F361D0();
    swift_bridgeObjectRelease();
    unint64_t v70 = (uint8_t *)v37;
    *(_WORD *)(v37 + 12) = 2080;
    unint64_t v89 = MEMORY[0x263F8EE78];
    sub_251A3E084(0, (int64_t)v9, 0);
    uint64_t v38 = v89;
    unint64_t v82 = v30 & 0xC000000000000001;
    char v39 = 0;
    uint64_t v84 = sub_251F34DA0();
    uint64_t v40 = *(void *)(v84 - 8);
    uint64_t v41 = v30;
    do
    {
      uint64_t v42 = swift_task_alloc();
      if (v82) {
        id v43 = (id)MEMORY[0x2533AB3A0](v39, v41);
      }
      else {
        id v43 = *(id *)(v41 + 8 * (void)v39 + 32);
      }
      unint64_t v44 = v43;
      id v45 = objc_msgSend(v43, sel_characteristic, v67);
      id v46 = objc_msgSend(v45, sel_uniqueIdentifier);

      sub_251F34D80();
      unint64_t v89 = v38;
      unint64_t v48 = *(void *)(v38 + 16);
      unint64_t v47 = *(void *)(v38 + 24);
      if (v48 >= v47 >> 1)
      {
        sub_251A3E084(v47 > 1, v48 + 1, 1);
        uint64_t v38 = v89;
      }
      char v39 = (void *)((char *)v39 + 1);
      *(void *)(v38 + 16) = v48 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v40 + 32))(v38+ ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80))+ *(void *)(v40 + 72) * v48, v42, v84);
      swift_task_dealloc();
    }
    while (v87 != v39);
    uint64_t v0 = v85;
    uint64_t v50 = *((void *)v85 + 46);
    uint64_t v52 = *((void *)v85 + 41);
    uint64_t v51 = *((void *)v85 + 42);
    uint64_t v53 = MEMORY[0x2533AAA10](v38, v84);
    unint64_t v55 = v54;
    swift_bridgeObjectRelease();
    *((void *)v85 + 29) = sub_251A00E84(v53, v55, &v88);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    os_signpost_id_t v56 = sub_251F34FC0();
    _os_signpost_emit_with_name_impl(&dword_2519F3000, loga, v72, v56, "BatchWriteRequest", "count: %ld %s", v70, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v68, -1, -1);
    MEMORY[0x2533AC760](v70, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v50, v52);
    unint64_t v57 = v77;
    id v32 = v79;
    uint64_t v58 = v75;
  }
  else
  {
    uint64_t v49 = *((void *)v0 + 42);

    swift_bridgeObjectRelease_n();
    uint64_t v58 = *(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 16);
    unint64_t v57 = (v49 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  }
  uint64_t v59 = *((void *)v0 + 47);
  uint64_t v60 = *((void *)v0 + 45);
  uint64_t v61 = *((void *)v0 + 41);
  uint64_t v62 = *((void *)v0 + 42);
  char v63 = v0[480];
  *((void *)v0 + 51) = v58;
  *((void *)v0 + 52) = v57;
  v58(v60, v59, v61);
  sub_251F35060();
  swift_allocObject();
  *((void *)v0 + 53) = sub_251F35050();
  int64_t v64 = *(void (**)(uint64_t, uint64_t))(v62 + 8);
  *((void *)v0 + 54) = v64;
  *((void *)v0 + 55) = (v62 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v64(v59, v61);
  uint64_t v65 = (void *)swift_task_alloc();
  *((void *)v0 + 56) = v65;
  void *v65 = v0;
  v65[1] = sub_251AD1D20;
  uint64_t v66 = *((void *)v0 + 36);
  return sub_251AD3C38((uint64_t)v32, v66, v63 & 1);
}

uint64_t sub_251AD1D20()
{
  *(void *)(*(void *)v1 + 456) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_251AD2214;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_251AD1E40;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_251AD1E40()
{
  uint64_t v1 = sub_251F35000();
  sub_251F35040();
  os_signpost_type_t v2 = sub_251F36050();
  if (sub_251F36170())
  {
    uint64_t v3 = *(void *)(v0 + 320);
    uint64_t v4 = *(void *)(v0 + 296);
    uint64_t v5 = *(void *)(v0 + 304);
    swift_retain();
    sub_251F35070();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v5 + 88))(v3, v4) == *MEMORY[0x263F90238])
    {
      int v6 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 304) + 8))(*(void *)(v0 + 320), *(void *)(v0 + 296));
      int v6 = "";
    }
    char v8 = *(void (**)(uint64_t, uint64_t))(v0 + 432);
    char v7 = (void *)(v0 + 360);
    uint64_t v9 = *(void *)(v0 + 352);
    uint64_t v10 = *(void *)(v0 + 328);
    (*(void (**)(void, uint64_t, uint64_t))(v0 + 408))(*(void *)(v0 + 360), v9, v10);
    int v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int v11 = 0;
    os_signpost_id_t v12 = sub_251F34FC0();
    _os_signpost_emit_with_name_impl(&dword_2519F3000, v1, v2, v12, "BatchWriteRequest", v6, v11, 2u);
    MEMORY[0x2533AC760](v11, -1, -1);

    v8(v9, v10);
  }
  else
  {
    char v7 = (void *)(v0 + 352);
  }
  (*(void (**)(void, void))(v0 + 432))(*v7, *(void *)(v0 + 328));
  long long v13 = (void *)swift_task_alloc();
  *(void *)(v0 + 464) = v13;
  *long long v13 = v0;
  v13[1] = sub_251AD2058;
  uint64_t v14 = *(void *)(v0 + 272);
  uint64_t v15 = *(void *)(v0 + 280);
  uint64_t v17 = *(void *)(v0 + 256);
  uint64_t v16 = *(void *)(v0 + 264);
  return sub_251AD0468(v17, v16, v14, v15, 0);
}

uint64_t sub_251AD2058()
{
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251AD2154, 0, 0);
}

uint64_t sub_251AD2154()
{
  uint64_t v1 = *(void **)(v0 + 392);
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_signpost_type_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_251AD2214()
{
  uint64_t v1 = sub_251F35000();
  sub_251F35040();
  os_signpost_type_t v2 = sub_251F36050();
  if (sub_251F36170())
  {
    uint64_t v4 = *(void *)(v0 + 304);
    uint64_t v3 = *(void *)(v0 + 312);
    uint64_t v5 = *(void *)(v0 + 296);
    swift_retain();
    sub_251F35070();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v4 + 88))(v3, v5) == *MEMORY[0x263F90238])
    {
      int v6 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 304) + 8))(*(void *)(v0 + 312), *(void *)(v0 + 296));
      int v6 = "";
    }
    char v8 = *(void (**)(uint64_t, uint64_t))(v0 + 432);
    char v7 = (void *)(v0 + 360);
    uint64_t v9 = *(void *)(v0 + 344);
    uint64_t v10 = *(void *)(v0 + 328);
    (*(void (**)(void, uint64_t, uint64_t))(v0 + 408))(*(void *)(v0 + 360), v9, v10);
    int v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int v11 = 0;
    os_signpost_id_t v12 = sub_251F34FC0();
    _os_signpost_emit_with_name_impl(&dword_2519F3000, v1, v2, v12, "BatchWriteRequest", v6, v11, 2u);
    MEMORY[0x2533AC760](v11, -1, -1);

    v8(v9, v10);
  }
  else
  {
    char v7 = (void *)(v0 + 344);
  }
  long long v13 = *(void **)(v0 + 456);
  (*(void (**)(void, void))(v0 + 432))(*v7, *(void *)(v0 + 328));
  id v14 = v13;
  id v15 = v13;
  uint64_t v16 = sub_251F35080();
  os_log_type_t v17 = sub_251F35FB0();
  BOOL v18 = os_log_type_enabled(v16, v17);
  uint64_t v19 = *(void **)(v0 + 456);
  if (v18)
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    int64_t v21 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v20 = 138412290;
    id v22 = v19;
    uint64_t v23 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 216) = v23;
    sub_251F361D0();
    *int64_t v21 = v23;

    _os_log_impl(&dword_2519F3000, v16, v17, "HMCharacteristicBatchRequest threw error %@", v20, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v21, -1, -1);
    MEMORY[0x2533AC760](v20, -1, -1);
  }
  else
  {
  }
  uint64_t v24 = *(void **)(v0 + 456);

  id v25 = v24;
  uint64_t v26 = (void *)swift_task_alloc();
  *(void *)(v0 + 472) = v26;
  *uint64_t v26 = v0;
  v26[1] = sub_251AD256C;
  uint64_t v27 = *(void *)(v0 + 272);
  uint64_t v28 = *(void *)(v0 + 280);
  uint64_t v30 = *(void *)(v0 + 256);
  uint64_t v29 = *(void *)(v0 + 264);
  return sub_251AD0468(v30, v29, v27, v28, (uint64_t)v24);
}

uint64_t sub_251AD256C()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 456);
  swift_task_dealloc();

  return MEMORY[0x270FA2498](sub_251AD2684, 0, 0);
}

uint64_t sub_251AD2684()
{
  uint64_t v1 = *(void **)(v0 + 392);
  swift_willThrow();
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_signpost_type_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

unint64_t sub_251AD2768@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_251ACFAAC(a1, *(void *)(v2 + 16), a2);
}

unint64_t sub_251AD2788()
{
  unint64_t result = qword_26B21F2B0;
  if (!qword_26B21F2B0)
  {
    sub_251F34DA0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B21F2B0);
  }
  return result;
}

uint64_t sub_251AD27D4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_251AD27E0(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

unint64_t sub_251AD2824()
{
  unint64_t result = qword_269B9D9E8;
  if (!qword_269B9D9E8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B9D9E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9D9E8);
  }
  return result;
}

uint64_t sub_251AD2880()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_251AD28B8(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_251AB3DD4;
  int v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_269B9E5A8 + dword_269B9E5A8);
  return v6(a1, v4);
}

uint64_t sub_251AD2970(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_251AB3A34;
  int v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_269B9E5B0 + dword_269B9E5B0);
  return v6(a1, v4);
}

uint64_t sub_251AD2A28(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_251AB3DD4;
  int v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_269B9DA10 + dword_269B9DA10);
  return v6(a1, v4);
}

uint64_t sub_251AD2AE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticService();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_251AD2B44()
{
  unint64_t result = qword_269B9D158;
  if (!qword_269B9D158)
  {
    sub_251A1A568(255, (unint64_t *)&qword_26B21F170);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9D158);
  }
  return result;
}

uint64_t sub_251AD2BA0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_251AD2C08()
{
  unint64_t result = qword_26B21F280;
  if (!qword_26B21F280)
  {
    type metadata accessor for DataModel();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B21F280);
  }
  return result;
}

void MTRClusterDescriptor.deviceTypeValues.getter()
{
  MTRClusterDescriptor.endpointPath.getter((uint64_t)v22);
  if ((BYTE10(v22[0]) & 1) == 0)
  {
    uint64_t v1 = *(void *)&v22[0];
    __int16 v2 = WORD4(v22[0]);
    id v3 = objc_msgSend(v0, sel_device);
    uint64_t v18 = v1;
    __int16 v19 = v2;
    char v20 = 0;
    MTRDevice.decodedAttribute(path:attributeID:)(&v18, 0, v22);
    sub_251AA82A4((uint64_t)v22, (uint64_t)&v18);
    if (v21)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DA48);
      if (swift_dynamicCast())
      {
        sub_251EE0950(v15[0]);

        swift_bridgeObjectRelease();
LABEL_15:
        sub_251A9090C((uint64_t)v22);
        return;
      }
    }
    else
    {
      sub_251A9090C((uint64_t)&v18);
    }
    if (qword_26B21ECD0 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_251F350A0();
    __swift_project_value_buffer(v4, (uint64_t)qword_26B21ECB8);
    sub_251AA82A4((uint64_t)v22, (uint64_t)&v18);
    id v5 = v0;
    int v6 = sub_251F35080();
    os_log_type_t v7 = sub_251F35FB0();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = swift_slowAlloc();
      uint64_t v9 = (void *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      uint64_t v16 = v1;
      uint64_t v17 = v14;
      *(_DWORD *)uint64_t v8 = 136315650;
      v15[1] = 0xE300000000000000;
      sub_251F36AB0();
      sub_251F35800();
      swift_bridgeObjectRelease();
      sub_251F35800();
      LOWORD(v16) = v2;
      sub_251F36AB0();
      sub_251F35800();
      swift_bridgeObjectRelease();
      sub_251F35800();
      v15[0] = sub_251A00E84(3829371, 0xE300000000000000, &v17);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v8 + 12) = 2080;
      sub_251AA82A4((uint64_t)&v18, (uint64_t)v15);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E190);
      uint64_t v10 = sub_251F35790();
      v15[0] = sub_251A00E84(v10, v11, &v17);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      sub_251A9090C((uint64_t)&v18);
      *(_WORD *)(v8 + 22) = 2112;
      v15[0] = (unint64_t)v5;
      id v12 = v5;
      sub_251F361D0();
      *uint64_t v9 = v5;

      _os_log_impl(&dword_2519F3000, v6, v7, "Failed to get device types for descriptor cluster at path (%s) rawDeviceTypes: (%s) cluster: %@", (uint8_t *)v8, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v9, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v14, -1, -1);
      MEMORY[0x2533AC760](v8, -1, -1);
    }
    else
    {
      sub_251A9090C((uint64_t)&v18);
    }
    if ((MEMORY[0x263F8EE78] & 0xC000000000000000) != 0 && sub_251F366C0()) {
      sub_251C09B48(MEMORY[0x263F8EE78]);
    }

    goto LABEL_15;
  }
  if ((MEMORY[0x263F8EE78] & 0xC000000000000000) != 0 && sub_251F366C0())
  {
    unint64_t v13 = MEMORY[0x263F8EE78];
    sub_251C09B48(v13);
  }
}

void MTRClusterDescriptor.endpointIDs.getter()
{
  MTRClusterDescriptor.endpointPath.getter((uint64_t)v22);
  if ((BYTE10(v22[0]) & 1) == 0)
  {
    uint64_t v1 = *(void *)&v22[0];
    __int16 v2 = WORD4(v22[0]);
    id v3 = objc_msgSend(v0, sel_device);
    uint64_t v18 = v1;
    __int16 v19 = v2;
    char v20 = 0;
    MTRDevice.decodedAttribute(path:attributeID:)(&v18, 3, v22);
    sub_251AA82A4((uint64_t)v22, (uint64_t)&v18);
    if (v21)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DA50);
      if (swift_dynamicCast())
      {
        sub_251EE0804(v15[0]);

        swift_bridgeObjectRelease();
LABEL_15:
        sub_251A9090C((uint64_t)v22);
        return;
      }
    }
    else
    {
      sub_251A9090C((uint64_t)&v18);
    }
    if (qword_26B21ECD0 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_251F350A0();
    __swift_project_value_buffer(v4, (uint64_t)qword_26B21ECB8);
    sub_251AA82A4((uint64_t)v22, (uint64_t)&v18);
    id v5 = v0;
    int v6 = sub_251F35080();
    os_log_type_t v7 = sub_251F35FB0();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = swift_slowAlloc();
      uint64_t v9 = (void *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      uint64_t v16 = v1;
      uint64_t v17 = v14;
      *(_DWORD *)uint64_t v8 = 136315650;
      v15[1] = 0xE300000000000000;
      sub_251F36AB0();
      sub_251F35800();
      swift_bridgeObjectRelease();
      sub_251F35800();
      LOWORD(v16) = v2;
      sub_251F36AB0();
      sub_251F35800();
      swift_bridgeObjectRelease();
      sub_251F35800();
      v15[0] = sub_251A00E84(3829371, 0xE300000000000000, &v17);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v8 + 12) = 2080;
      sub_251AA82A4((uint64_t)&v18, (uint64_t)v15);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E190);
      uint64_t v10 = sub_251F35790();
      v15[0] = sub_251A00E84(v10, v11, &v17);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      sub_251A9090C((uint64_t)&v18);
      *(_WORD *)(v8 + 22) = 2112;
      v15[0] = (unint64_t)v5;
      id v12 = v5;
      sub_251F361D0();
      *uint64_t v9 = v5;

      _os_log_impl(&dword_2519F3000, v6, v7, "Failed to get endpointIDs for descriptor cluster at path (%s) rawEndpointIDs: (%s) cluster: %@", (uint8_t *)v8, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v9, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v14, -1, -1);
      MEMORY[0x2533AC760](v8, -1, -1);
    }
    else
    {
      sub_251A9090C((uint64_t)&v18);
    }
    if ((MEMORY[0x263F8EE78] & 0xC000000000000000) != 0 && sub_251F366C0()) {
      sub_251C09B2C(MEMORY[0x263F8EE78]);
    }

    goto LABEL_15;
  }
  if ((MEMORY[0x263F8EE78] & 0xC000000000000000) != 0 && sub_251F366C0())
  {
    unint64_t v13 = MEMORY[0x263F8EE78];
    sub_251C09B2C(v13);
  }
}

uint64_t MTRClusterDescriptor.availableClusterIDs.getter()
{
  MTRClusterDescriptor.endpointPath.getter((uint64_t)v34);
  if (BYTE10(v34[0])) {
    return MEMORY[0x263F8EE88];
  }
  uint64_t v1 = *(void *)&v34[0];
  __int16 v2 = WORD4(v34[0]);
  id v3 = objc_msgSend(v0, sel_device);
  uint64_t v30 = v1;
  __int16 v31 = v2;
  char v32 = 0;
  MTRDevice.decodedAttribute(path:attributeID:)(&v30, 1, v34);
  sub_251AA82A4((uint64_t)v34, (uint64_t)&v30);
  if (!v33)
  {
    sub_251A9090C((uint64_t)&v30);
    goto LABEL_16;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DA50);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_16:
    if (qword_26B21ECD0 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_251F350A0();
    __swift_project_value_buffer(v14, (uint64_t)qword_26B21ECB8);
    sub_251AA82A4((uint64_t)v34, (uint64_t)&v30);
    id v15 = v0;
    uint64_t v16 = sub_251F35080();
    os_log_type_t v17 = sub_251F35FB0();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = swift_slowAlloc();
      id v26 = v3;
      __int16 v19 = (void *)swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      uint64_t v28 = v1;
      uint64_t v29 = v20;
      *(_DWORD *)uint64_t v18 = 136315650;
      v27[1] = 0xE300000000000000;
      sub_251F36AB0();
      sub_251F35800();
      swift_bridgeObjectRelease();
      sub_251F35800();
      LOWORD(v28) = v2;
      sub_251F36AB0();
      sub_251F35800();
      swift_bridgeObjectRelease();
      sub_251F35800();
      v27[0] = sub_251A00E84(3829371, 0xE300000000000000, &v29);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 12) = 2080;
      sub_251AA82A4((uint64_t)&v30, (uint64_t)v27);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E190);
      uint64_t v21 = sub_251F35790();
      v27[0] = sub_251A00E84(v21, v22, &v29);
      sub_251F361D0();
      swift_bridgeObjectRelease();
      sub_251A9090C((uint64_t)&v30);
      *(_WORD *)(v18 + 22) = 2112;
      v27[0] = v15;
      id v23 = v15;
      sub_251F361D0();
      *__int16 v19 = v15;

      _os_log_impl(&dword_2519F3000, v16, v17, "Failed to get cluster IDs for descriptor cluster at path (%s) rawClusterIDs: (%s) cluster: %@", (uint8_t *)v18, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
      swift_arrayDestroy();
      uint64_t v24 = v19;
      id v3 = v26;
      MEMORY[0x2533AC760](v24, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v20, -1, -1);
      MEMORY[0x2533AC760](v18, -1, -1);
    }
    else
    {
      sub_251A9090C((uint64_t)&v30);
    }
    sub_251A9090C((uint64_t)v34);
    return MEMORY[0x263F8EE88];
  }
  uint64_t v4 = v27[0];
  if (!(v27[0] >> 62))
  {
    uint64_t v5 = *(void *)((v27[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v5) {
      goto LABEL_6;
    }
LABEL_25:
    swift_bridgeObjectRelease();
    uint64_t v8 = MEMORY[0x263F8EE78];
LABEL_26:
    uint64_t v25 = sub_251EE0834(v8);

    swift_bridgeObjectRelease();
    sub_251A9090C((uint64_t)v34);
    return v25;
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_251F366C0();
  swift_bridgeObjectRelease();
  if (!v5) {
    goto LABEL_25;
  }
LABEL_6:
  uint64_t v30 = MEMORY[0x263F8EE78];
  uint64_t result = sub_251A3E1E0(0, v5 & ~(v5 >> 63), 0);
  if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v7 = 0;
    uint64_t v8 = v30;
    do
    {
      if ((v4 & 0xC000000000000001) != 0) {
        id v9 = (id)MEMORY[0x2533AB3A0](v7, v4);
      }
      else {
        id v9 = *(id *)(v4 + 8 * v7 + 32);
      }
      uint64_t v10 = v9;
      unsigned int v11 = objc_msgSend(v9, sel_unsignedIntValue);

      uint64_t v30 = v8;
      unint64_t v13 = *(void *)(v8 + 16);
      unint64_t v12 = *(void *)(v8 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_251A3E1E0(v12 > 1, v13 + 1, 1);
        uint64_t v8 = v30;
      }
      ++v7;
      *(void *)(v8 + 16) = v13 + 1;
      *(_DWORD *)(v8 + 4 * v13 + 32) = v11;
    }
    while (v5 != v7);
    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  __break(1u);
  return result;
}

uint64_t dispatch thunk of MatterDescriptorCluster.deviceTypeValues.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of MatterDescriptorCluster.endpointIDs.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of MatterDescriptorCluster.availableClusterIDs.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

void destroy for BatchRequestError(uint64_t a1)
{
  swift_bridgeObjectRelease();
  __int16 v2 = *(void **)(a1 + 8);
}

void *_s13HomeDataModel17BatchRequestErrorOwCP_0(void *a1, void *a2)
{
  id v3 = (void *)a2[1];
  *a1 = *a2;
  swift_bridgeObjectRetain();
  id v4 = v3;
  a1[1] = v3;
  return a1;
}

void *assignWithCopy for BatchRequestError(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v4 = (void *)a1[1];
  uint64_t v5 = (void *)a2[1];
  id v6 = v5;
  a1[1] = v5;

  return a1;
}

uint64_t assignWithTake for BatchRequestError(uint64_t a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  id v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for BatchRequestError()
{
  return &type metadata for BatchRequestError;
}

uint64_t sub_251AD3C38(uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v4 + 32) = a2;
  *(void *)(v4 + 40) = v3;
  *(unsigned char *)(v4 + 88) = a3;
  *(void *)(v4 + 24) = a1;
  return MEMORY[0x270FA2498](sub_251AD3C60, 0, 0);
}

uint64_t sub_251AD3C60()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v1 = *(void *)(v0 + 40);
  char v3 = *(unsigned char *)(v0 + 88);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t v5 = swift_allocObject();
  *(void *)(v0 + 48) = v5;
  uint64_t v6 = MEMORY[0x263F8EE78];
  *(void *)(v5 + 16) = sub_2519F9E38(MEMORY[0x263F8EE78]);
  uint64_t v7 = swift_allocObject();
  *(void *)(v0 + 56) = v7;
  *(void *)(v7 + 16) = v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DA60);
  uint64_t v9 = swift_task_alloc();
  *(void *)(v0 + 64) = v9;
  *(void *)(v9 + 16) = v4;
  *(void *)(v9 + 24) = v7;
  *(void *)(v9 + 32) = v5;
  *(void *)(v9 + 40) = v1;
  *(void *)(v9 + 48) = v2;
  *(unsigned char *)(v9 + 56) = v3 & 1;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_251AD3DE0;
  return MEMORY[0x270FA22B8](v0 + 16, v8, v8, 0, 0, &unk_269B9DA70, v9, v8);
}

uint64_t sub_251AD3DE0()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_251AD3F6C;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_251AD3EFC;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_251AD3EFC()
{
  swift_release();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_251AD3F6C()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251AD3FE8()
{
  return sub_251F36D00();
}

uint64_t sub_251AD4080()
{
  sub_251F34DA0();
  sub_251AD2788();
  sub_251F35610();
  CharacteristicKind.rawValue.getter();
  sub_251F357B0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_251AD4114()
{
  return sub_251F36D00();
}

uint64_t sub_251AD41A8(uint64_t *a1, void **a2, uint64_t a3)
{
  uint64_t v58 = a3;
  uint64_t v56 = type metadata accessor for BatchRequestError.ID();
  ((void (*)(void))MEMORY[0x270FA5388])();
  unint64_t v57 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *a2;
  uint64_t v7 = sub_251F34DA0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  ((void (*)(void))MEMORY[0x270FA5388])();
  unint64_t v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  ((void (*)(void))MEMORY[0x270FA5388])();
  uint64_t v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v60 = v6;
  id v13 = objc_msgSend(v6, sel_service);
  if (!v13)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v12, 1, 1, v7);
    return sub_251A1B064((uint64_t)v12, &qword_26B21FF90);
  }
  uint64_t v14 = v13;
  unint64_t v54 = a1;
  unint64_t v55 = (char *)&v53 - v10;
  id v15 = objc_msgSend(v13, sel_uniqueIdentifier);
  uint64_t v59 = v8;
  id v16 = v15;

  ((void (*)(void))MEMORY[0x270FA5388])();
  sub_251F34D80();

  uint64_t v17 = v59;
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v59 + 32);
  v18(v12, (char *)&v53 - v10, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v12, 0, 1, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v12, 1, v7) == 1) {
    return sub_251A1B064((uint64_t)v12, &qword_26B21FF90);
  }
  __int16 v19 = v55;
  uint64_t v20 = ((uint64_t (*)(char *, char *, uint64_t))v18)(v55, v12, v7);
  uint64_t v53 = (uint64_t)&v53;
  MEMORY[0x270FA5388](v20);
  uint64_t v21 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v21, v19, v7);
  id v22 = objc_msgSend(v60, sel_characteristicType);
  uint64_t v23 = sub_251F356F0();
  uint64_t v25 = v24;

  v26._uint64_t countAndFlagsBits = v23;
  v26._object = v25;
  CharacteristicKind.init(rawValue:)(v26);
  if (v61 == 174) {
    char v27 = 0;
  }
  else {
    char v27 = v61;
  }
  uint64_t v28 = (uint64_t)v57;
  v18(v57, v21, v7);
  *(unsigned char *)(v28 + *(int *)(v56 + 20)) = v27;
  uint64_t v29 = v58;
  if (!*(void *)(v58 + 16) || (unint64_t v30 = sub_2519FE810(v28), (v31 & 1) == 0))
  {
    sub_251AD610C(v28);
    uint64_t v44 = sub_251F356F0();
    uint64_t v46 = v45;
    id v47 = v60;
    unint64_t v48 = v54;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v61 = *v48;
    *unint64_t v48 = 0x8000000000000000;
    sub_251A0CEF0(8, v44, v46, 2, v47, isUniquelyReferenced_nonNull_native);
    *unint64_t v48 = v61;

LABEL_13:
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v19, v7);
  }
  char v32 = *(void **)(*(void *)(v29 + 56) + 8 * v30);
  id v33 = v32;
  sub_251AD610C(v28);
  if (!v32)
  {
    id v50 = v60;
    uint64_t v51 = v54;
    char v52 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v61 = *v51;
    uint64_t *v51 = 0x8000000000000000;
    sub_251A0CEF0(1, 0, 0, 3, v50, v52);
    uint64_t *v51 = v61;

    goto LABEL_13;
  }
  id v34 = v32;
  os_signpost_type_t v35 = (void *)sub_251F34A20();
  id v36 = v60;
  id v60 = objc_msgSend(v35, sel_code);
  id v37 = objc_msgSend(v35, sel_domain);
  uint64_t v38 = sub_251F356F0();
  uint64_t v40 = v39;

  uint64_t v41 = v54;
  char v42 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v61 = *v41;
  *uint64_t v41 = 0x8000000000000000;
  sub_251A0CEF0((uint64_t)v60, v38, v40, 2, v36, v42);
  *uint64_t v41 = v61;

  swift_bridgeObjectRelease();
  __int16 v19 = v55;

  return (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v19, v7);
}

uint64_t type metadata accessor for BatchRequestError.ID()
{
  uint64_t result = qword_269B9DAB8;
  if (!qword_269B9DAB8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_251AD4770(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  *(unsigned char *)(v8 + 120) = a8;
  *(void *)(v8 + 80) = a6;
  *(void *)(v8 + 88) = a7;
  *(void *)(v8 + 64) = a4;
  *(void *)(v8 + 72) = a5;
  *(void *)(v8 + 48) = a2;
  *(void *)(v8 + 56) = a3;
  *(void *)(v8 + 40) = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  *(void *)(v8 + 96) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251AD4814, 0, 0);
}

uint64_t sub_251AD4814()
{
  uint64_t v1 = *(void *)(v0 + 96);
  char v2 = *(unsigned char *)(v0 + 120);
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v4 = *(void **)(v0 + 80);
  uint64_t v6 = *(void **)(v0 + 56);
  uint64_t v5 = *(void *)(v0 + 64);
  uint64_t v7 = sub_251F35CD0();
  uint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
  v23(v1, 1, 1, v7);
  uint64_t v8 = (void *)swift_allocObject();
  void v8[2] = 0;
  v8[3] = 0;
  void v8[4] = v6;
  v8[5] = v5;
  v8[6] = v3;
  v8[7] = v4;
  id v9 = v6;
  swift_retain();
  swift_retain();
  id v10 = v4;
  sub_251D26204(v1, (uint64_t)&unk_269B9DA80, (uint64_t)v8);
  sub_251A1B064(v1, &qword_26B220BB0);
  if ((v2 & 1) == 0)
  {
    if (qword_26B21F2C0 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_251F350A0();
    __swift_project_value_buffer(v11, (uint64_t)qword_26B21F290);
    uint64_t v12 = sub_251F35080();
    os_log_type_t v13 = sub_251F35FD0();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = *(void *)(v0 + 88);
      id v15 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)id v15 = 134217984;
      *(void *)(v0 + 32) = v14;
      sub_251F361D0();
      _os_log_impl(&dword_2519F3000, v12, v13, "performing batch request with timeout: %f", v15, 0xCu);
      MEMORY[0x2533AC760](v15, -1, -1);
    }

    uint64_t v17 = *(void *)(v0 + 88);
    uint64_t v16 = *(void *)(v0 + 96);
    uint64_t v18 = *(void *)(v0 + 72);
    v23(v16, 1, 1, v7);
    __int16 v19 = (void *)swift_allocObject();
    v19[2] = 0;
    void v19[3] = 0;
    v19[4] = v17;
    v19[5] = v18;
    swift_retain();
    sub_251D26204(v16, (uint64_t)&unk_269B9DAA0, (uint64_t)v19);
    sub_251A1B064(v16, &qword_26B220BB0);
  }
  uint64_t v20 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v20;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DA88);
  *uint64_t v20 = v0;
  v20[1] = sub_251AD4B1C;
  return MEMORY[0x270FA2048](v0 + 16, 0, 0, v21);
}

uint64_t sub_251AD4B1C()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0) {
    char v2 = sub_251AD4E84;
  }
  else {
    char v2 = sub_251AD4C30;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_251AD4C30()
{
  uint64_t v15 = v0;
  uint64_t v1 = *(void *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DA60);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D1B0);
  sub_251F35DB0();
  if (qword_26B21F2C0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_251F350A0();
  __swift_project_value_buffer(v2, (uint64_t)qword_26B21F290);
  swift_bridgeObjectRetain_n();
  uint64_t v3 = sub_251F35080();
  os_log_type_t v4 = sub_251F35FD0();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v14 = v6;
    *(_DWORD *)uint64_t v5 = 136315138;
    uint64_t v7 = 0;
    if (v1)
    {
      unint64_t v8 = sub_251AD6458();
      uint64_t v7 = MEMORY[0x2533AAA10](v1, v8);
      unint64_t v10 = v9;
    }
    else
    {
      unint64_t v10 = 0xE000000000000000;
    }
    *(void *)(v0 + 24) = sub_251A00E84(v7, v10, &v14);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_2519F3000, v3, v4, "batch request has completed with result: %s, cancelling timeout", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v6, -1, -1);
    MEMORY[0x2533AC760](v5, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v11 = MEMORY[0x263F8EE78];
  if (v1) {
    uint64_t v11 = v1;
  }
  **(void **)(v0 + 40) = v11;
  swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_251AD4E84()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251AD4EE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[5] = a6;
  void v7[6] = a7;
  v7[3] = a4;
  void v7[4] = a5;
  v7[2] = a1;
  return MEMORY[0x270FA2498](sub_251AD4F10, 0, 0);
}

uint64_t sub_251AD4F10()
{
  uint64_t v1 = swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  long long v2 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v1 + 32) = v2;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DA60);
  *uint64_t v3 = v0;
  v3[1] = sub_251AD500C;
  uint64_t v5 = *(void *)(v0 + 16);
  return MEMORY[0x270FA2360](v5, 0, 0, 0xD00000000000002CLL, 0x8000000251F69020, sub_251AD65F0, v1, v4);
}

uint64_t sub_251AD500C()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x270FA2498](sub_251AD5148, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_251AD5148()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

id sub_251AD51AC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v22 = a1;
  id v23 = a5;
  id v21 = a2;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DAB0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a3;
  *(void *)(v12 + 24) = a4;
  uint64_t v28 = sub_251AD663C;
  uint64_t v29 = v12;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v25 = 1107296256;
  Swift::String v26 = sub_251CBDA5C;
  char v27 = &block_descriptor_23;
  os_log_type_t v13 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(a2, sel_setProgressHandler_, v13);
  _Block_release(v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v22, v8);
  unint64_t v14 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v15 = (v10 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v16 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v16 + v14, v11, v8);
  *(void *)(v16 + v15) = a4;
  *(void *)(v16 + ((v15 + 15) & 0xFFFFFFFFFFFFFFF8)) = a3;
  uint64_t v28 = sub_251AD6704;
  uint64_t v29 = v16;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v25 = 1107296256;
  Swift::String v26 = sub_251C97A44;
  char v27 = &block_descriptor_28_0;
  uint64_t v17 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id v18 = v21;
  objc_msgSend(v21, sel_setCompletionHandler_, v17);
  _Block_release(v17);
  return objc_msgSend(v23, sel_performBatchCharacteristicRequest_, v18);
}

uint64_t sub_251AD5460(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_251F366C0();
    uint64_t v6 = result;
    if (!result) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v6) {
      goto LABEL_10;
    }
  }
  if (v6 < 1)
  {
    __break(1u);
    return result;
  }
  uint64_t v8 = 0;
  uint64_t v9 = (unint64_t *)(a2 + 16);
  uint64_t v10 = (uint64_t *)(a3 + 16);
  do
  {
    if ((a1 & 0xC000000000000001) != 0) {
      id v11 = (id)MEMORY[0x2533AB3A0](v8, a1);
    }
    else {
      id v11 = *(id *)(a1 + 8 * v8 + 32);
    }
    uint64_t v12 = v11;
    ++v8;
    os_log_type_t v13 = v11;
    sub_251AD5568(&v13, v9, v10);
  }
  while (v6 != v8);
LABEL_10:
  return swift_bridgeObjectRelease();
}

uint64_t sub_251AD5568(void **a1, unint64_t *a2, uint64_t *a3)
{
  uint64_t v7 = type metadata accessor for BatchRequestError.ID();
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *a1;
  swift_beginAccess();
  unint64_t v11 = *a2;
  swift_bridgeObjectRetain();
  char v12 = sub_251D81FA4((uint64_t)v10, v11);
  uint64_t result = swift_bridgeObjectRelease();
  if (v12) {
    return result;
  }
  uint64_t v50 = v7;
  uint64_t v51 = v9;
  char v52 = a3;
  uint64_t v56 = v3;
  uint64_t v14 = sub_251F34DA0();
  unint64_t v55 = &v49;
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  MEMORY[0x270FA5388](v14);
  unint64_t v17 = (v16 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v53 = (char *)&v49 - v17;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  unint64_t v54 = &v49;
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v20 = (char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v21 = objc_msgSend(v10, sel_request);
  id v22 = objc_msgSend(v21, sel_characteristic);

  id v23 = objc_msgSend(v22, sel_service);
  if (!v23)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v20, 1, 1, v14);
    return sub_251A1B064((uint64_t)v20, &qword_26B21FF90);
  }
  id v24 = objc_msgSend(v23, sel_uniqueIdentifier);

  MEMORY[0x270FA5388](v25);
  Swift::String v26 = (char *)&v49 - v17;
  sub_251F34D80();

  char v27 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  v27(v20, v26, v14);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v20, 0, 1, v14);
  uint64_t v49 = v15;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v20, 1, v14) == 1) {
    return sub_251A1B064((uint64_t)v20, &qword_26B21FF90);
  }
  uint64_t v28 = v53;
  v27(v53, v20, v14);
  id v29 = objc_msgSend(v10, sel_request);
  id v30 = objc_msgSend(v29, sel_characteristic);

  id v31 = objc_msgSend(v30, sel_characteristicType);
  uint64_t v32 = sub_251F356F0();
  id v34 = v33;

  v35._uint64_t countAndFlagsBits = v32;
  v35._object = v34;
  CharacteristicKind.init(rawValue:)(v35);
  unsigned __int8 v36 = v57;
  if (v57 == 174) {
    return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v28, v14);
  }
  uint64_t v37 = v14;
  id v38 = objc_msgSend(v10, sel_error);
  uint64_t v39 = v49;
  if (v38)
  {
    uint64_t v40 = v38;
    uint64_t v41 = (uint64_t)v51;
    (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v51, v28, v14);
    *(unsigned char *)(v41 + *(int *)(v50 + 20)) = v36;
    char v42 = v52;
    swift_beginAccess();
    id v43 = v40;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v58 = *v42;
    *char v42 = 0x8000000000000000;
    sub_251A0E52C((uint64_t)v40, v41, isUniquelyReferenced_nonNull_native);
    *char v42 = v58;
    swift_bridgeObjectRelease();
    sub_251AD610C(v41);
    swift_endAccess();
  }
  else
  {
    uint64_t v45 = (uint64_t)v51;
    (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v51, v28, v14);
    *(unsigned char *)(v45 + *(int *)(v50 + 20)) = v36;
    uint64_t v46 = v52;
    swift_beginAccess();
    char v47 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v58 = *v46;
    *uint64_t v46 = 0x8000000000000000;
    sub_251A0E52C(0, v45, v47);
    *uint64_t v46 = v58;
    swift_bridgeObjectRelease();
    sub_251AD610C(v45);
    swift_endAccess();
  }
  swift_beginAccess();
  id v48 = v10;
  MEMORY[0x2533AA9D0]();
  if (*(void *)((*a2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_251F35B10();
  }
  sub_251F35B70();
  sub_251F35AE0();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v53, v37);
}

uint64_t sub_251AD5B4C(void *a1, uint64_t a2, uint64_t a3)
{
  if (a1)
  {
    swift_beginAccess();
    uint64_t v5 = *(void *)(a3 + 16);
    sub_251AD659C();
    swift_allocError();
    *uint64_t v6 = v5;
    v6[1] = a1;
    id v7 = a1;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DAB0);
    return sub_251F35C10();
  }
  else
  {
    swift_beginAccess();
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DAB0);
    return sub_251F35C20();
  }
}

uint64_t sub_251AD5C2C(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 48) = a5;
  *(double *)(v5 + 40) = a1;
  uint64_t v6 = sub_251F365D0();
  *(void *)(v5 + 56) = v6;
  *(void *)(v5 + 64) = *(void *)(v6 - 8);
  *(void *)(v5 + 72) = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251AD5CF0, 0, 0);
}

uint64_t sub_251AD5CF0()
{
  uint64_t v1 = sub_251F36E30();
  uint64_t v3 = v2;
  sub_251F365C0();
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_269BA29D8 + dword_269BA29D8);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_251AD5DCC;
  return v6(v1, v3, 0, 0, 1);
}

uint64_t sub_251AD5DCC()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[8] + 8))(v2[9], v2[7]);
  if (v0) {
    uint64_t v3 = sub_251AD60A8;
  }
  else {
    uint64_t v3 = sub_251AD5F34;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_251AD5F34()
{
  if (qword_26B21F2C0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_251F350A0();
  __swift_project_value_buffer(v1, (uint64_t)qword_26B21F290);
  uint64_t v2 = sub_251F35080();
  os_log_type_t v3 = sub_251F35FD0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_2519F3000, v2, v3, "batch request timeout has been hit", v4, 2u);
    MEMORY[0x2533AC760](v4, -1, -1);
  }
  uint64_t v5 = *(void *)(v0 + 48);

  swift_beginAccess();
  uint64_t v6 = *(void *)(v5 + 16);
  sub_251AD659C();
  swift_allocError();
  *uint64_t v7 = v6;
  v7[1] = 0;
  swift_bridgeObjectRetain();
  swift_willThrow();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_251AD60A8()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251AD610C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for BatchRequestError.ID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_251AD6168()
{
  if (sub_251F34D70())
  {
    type metadata accessor for BatchRequestError.ID();
    unint64_t v0 = CharacteristicKind.rawValue.getter();
    uint64_t v2 = v1;
    if (v0 == CharacteristicKind.rawValue.getter() && v2 == v3) {
      char v4 = 1;
    }
    else {
      char v4 = sub_251F36B10();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v4 = 0;
  }
  return v4 & 1;
}

uint64_t sub_251AD6230()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_251AD6268(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = *(void *)(v2 + 24);
  uint64_t v8 = *(void *)(v2 + 32);
  uint64_t v9 = *(void *)(v2 + 40);
  uint64_t v10 = *(void *)(v2 + 48);
  char v11 = *(unsigned char *)(v2 + 56);
  char v12 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v12;
  *char v12 = v3;
  v12[1] = sub_251AB3DD4;
  return sub_251AD4770(a1, a2, v6, v7, v8, v9, v10, v11);
}

uint64_t sub_251AD6348()
{
  swift_unknownObjectRelease();

  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_251AD63A0(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v1 + 32);
  long long v6 = *(_OWORD *)(v1 + 48);
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_251AB3DD4;
  *(_OWORD *)(v4 + 40) = v6;
  *(_OWORD *)(v4 + 24) = v5;
  *(void *)(v4 + 16) = a1;
  return MEMORY[0x270FA2498](sub_251AD4F10, 0, 0);
}

unint64_t sub_251AD6458()
{
  unint64_t result = qword_269B9DA90;
  if (!qword_269B9DA90)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, &qword_269B9DA90);
  }
  return result;
}

uint64_t sub_251AD6498()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_251AD64D8(uint64_t a1)
{
  uint64_t v4 = *((void *)v1 + 2);
  uint64_t v5 = *((void *)v1 + 3);
  double v6 = v1[4];
  uint64_t v7 = *((void *)v1 + 5);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_251AB3A34;
  return sub_251AD5C2C(v6, a1, v4, v5, v7);
}

unint64_t sub_251AD659C()
{
  unint64_t result = qword_269B9DAA8;
  if (!qword_269B9DAA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9DAA8);
  }
  return result;
}

id sub_251AD65F0(uint64_t a1)
{
  return sub_251AD51AC(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_251AD65FC()
{
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_251AD663C(unint64_t a1)
{
  return sub_251AD5460(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_251AD6644()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DAB0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, v6 + 8, v5);
}

uint64_t sub_251AD6704(void *a1)
{
  uint64_t v3 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269B9DAB0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_251AD5B4C(a1, v1 + v4, v5);
}

void *initializeBufferWithCopyOfBuffer for BatchRequestError.ResultType(void *a1, id *a2)
{
  id v3 = *a2;
  id v4 = *a2;
  *a1 = v3;
  return a1;
}

void destroy for BatchRequestError.ResultType(id *a1)
{
}

void **assignWithCopy for BatchRequestError.ResultType(void **a1, id *a2)
{
  id v3 = *a2;
  id v4 = *a2;
  uint64_t v5 = *a1;
  *a1 = v3;

  return a1;
}

void *__swift_memcpy8_8(void *result, void *a2)
{
  *unint64_t result = *a2;
  return result;
}

void **assignWithTake for BatchRequestError.ResultType(void **a1, void **a2)
{
  id v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for BatchRequestError.ResultType(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for BatchRequestError.ResultType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

uint64_t sub_251AD690C(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_251AD6924(void *result, int a2)
{
  if (a2 < 0)
  {
    unsigned int v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2) {
      return result;
    }
    unsigned int v2 = a2 - 1;
  }
  *unint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for BatchRequestError.ResultType()
{
  return &type metadata for BatchRequestError.ResultType;
}

void *initializeBufferWithCopyOfBuffer for StaticCameraStreamControl(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_251F34DA0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t destroy for StaticCameraStreamControl(uint64_t a1)
{
  uint64_t v2 = sub_251F34DA0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t initializeWithCopy for StaticCameraStreamControl(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithCopy for StaticCameraStreamControl(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t initializeWithTake for StaticCameraStreamControl(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for StaticCameraStreamControl(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_251AD6C74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251AD6C88);
}

uint64_t sub_251AD6C88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34DA0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xAE) {
      return v10 - 173;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_251AD6D44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251AD6D58);
}

uint64_t sub_251AD6D58(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_251F34DA0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 - 83;
  }
  return result;
}

uint64_t sub_251AD6E14()
{
  uint64_t result = sub_251F34DA0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_251AD6EAC()
{
  unint64_t result = qword_269B9DAC8;
  if (!qword_269B9DAC8)
  {
    type metadata accessor for BatchRequestError.ID();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9DAC8);
  }
  return result;
}

uint64_t CameraClipScrubberDemoContentProvider.initialEventFetchLimit.getter()
{
  return 30;
}

uint64_t CameraClipScrubberDemoContentProvider.defaultEventFetchLimit.getter()
{
  return 100;
}

uint64_t CameraClipScrubberDemoContentProvider.fetchTimelineEvents(dateInterval:limit:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[3] = a3;
  v4[4] = v3;
  v4[2] = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DAF0);
  v4[5] = v5;
  v4[6] = *(void *)(v5 - 8);
  v4[7] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251AD6FF4, 0, 0);
}

uint64_t sub_251AD6FF4()
{
  uint64_t v2 = v0[6];
  uint64_t v1 = v0[7];
  uint64_t v4 = v0[4];
  uint64_t v3 = v0[5];
  uint64_t v5 = v0[3];
  uint64_t v6 = swift_task_alloc();
  *(void *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v5;
  type metadata accessor for ScrubberElement(0);
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v1, *MEMORY[0x263F8F580], v3);
  sub_251F35D50();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_251AD70EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = type metadata accessor for ScrubberElement(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB90);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  char v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_251AD72EC(a3, 0, 0, 0);
  uint64_t v13 = *(void *)(v12 + 16);
  if (v13)
  {
    unint64_t v14 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v20[1] = v12;
    uint64_t v15 = v9;
    uint64_t v16 = v12 + v14;
    uint64_t v17 = *(void *)(v5 + 72);
    uint64_t v18 = (void (**)(char *, uint64_t))(v15 + 8);
    do
    {
      sub_251AE1200(v16, (uint64_t)v7, type metadata accessor for ScrubberElement);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB98);
      sub_251F35CF0();
      (*v18)(v11, v8);
      v16 += v17;
      --v13;
    }
    while (v13);
  }
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB98);
  return sub_251F35D00();
}

uint64_t sub_251AD72EC(uint64_t a1, int a2, int a3, int a4)
{
  uint64_t v5 = v4;
  int v43 = a4;
  int v46 = a3;
  int v47 = a2;
  uint64_t v7 = type metadata accessor for ScrubberElement(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7 - 8);
  char v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v45 = (char *)&v38 - v12;
  swift_getKeyPath();
  uint64_t v13 = v4 + OBJC_IVAR____TtC13HomeDataModel37CameraClipScrubberDemoContentProvider___observationRegistrar;
  uint64_t v49 = v5;
  uint64_t v14 = sub_251AE1514(&qword_269B9DBA0, (void (*)(uint64_t))type metadata accessor for CameraClipScrubberDemoContentProvider);
  sub_251F34F10();
  swift_release();
  uint64_t v15 = v5 + OBJC_IVAR____TtC13HomeDataModel37CameraClipScrubberDemoContentProvider__lastFetchedIndex;
  int v16 = *(unsigned __int8 *)(v5
                           + OBJC_IVAR____TtC13HomeDataModel37CameraClipScrubberDemoContentProvider__lastFetchedIndex
                           + 8);
  uint64_t v44 = a1;
  if (v16 == 1)
  {
    uint64_t v17 = v14;
    uint64_t v18 = *(void *)(*(void *)(v5
                                + OBJC_IVAR____TtC13HomeDataModel37CameraClipScrubberDemoContentProvider_allScrubberElements)
                    + 16);
    uint64_t KeyPath = swift_getKeyPath();
    MEMORY[0x270FA5388](KeyPath);
    *(&v38 - 4) = v5;
    *(&v38 - 3) = v18;
    uint64_t v14 = v17;
    *((unsigned char *)&v38 - 16) = 0;
    uint64_t v49 = v5;
    sub_251F34F00();
    swift_release();
    a1 = v44;
  }
  swift_getKeyPath();
  uint64_t v49 = v5;
  sub_251F34F10();
  swift_release();
  uint64_t v20 = MEMORY[0x263F8EE78];
  if (*(unsigned char *)(v15 + 8)) {
    return v20;
  }
  uint64_t v21 = *(void *)v15;
  if (*(uint64_t *)v15 < 1) {
    return v20;
  }
  uint64_t v40 = v14;
  uint64_t v41 = v13;
  uint64_t v39 = v21;
  uint64_t v42 = v5;
  uint64_t v22 = sub_251ADAE54(a1, v21);
  int64_t v23 = *(void *)(v22 + 16);
  if (v23)
  {
    uint64_t v49 = v20;
    sub_251A3E4A8(0, v23, 0);
    unint64_t v24 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v38 = v22;
    unint64_t v48 = v24;
    uint64_t v25 = v22 + v24;
    uint64_t v26 = *(void *)(v8 + 72);
    v46 &= 1u;
    v47 &= 1u;
    int v27 = v43 & 1;
    uint64_t v28 = (uint64_t)v45;
    do
    {
      sub_251AE1200(v25, (uint64_t)v11, type metadata accessor for ScrubberElement);
      sub_251ADAFCC((uint64_t)v11, v47, v46, v27, v28);
      sub_251ADBFA8((uint64_t)v11, type metadata accessor for ScrubberElement);
      uint64_t v20 = v49;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_251A3E4A8(0, *(void *)(v20 + 16) + 1, 1);
        uint64_t v28 = (uint64_t)v45;
        uint64_t v20 = v49;
      }
      unint64_t v30 = *(void *)(v20 + 16);
      unint64_t v29 = *(void *)(v20 + 24);
      if (v30 >= v29 >> 1)
      {
        sub_251A3E4A8(v29 > 1, v30 + 1, 1);
        uint64_t v28 = (uint64_t)v45;
        uint64_t v20 = v49;
      }
      *(void *)(v20 + 16) = v30 + 1;
      sub_251ADBF40(v28, v20 + v48 + v30 * v26, type metadata accessor for ScrubberElement);
      v25 += v26;
      --v23;
    }
    while (v23);
  }
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  uint64_t v31 = v42;
  uint64_t v49 = v42;
  sub_251F34F10();
  swift_release();
  uint64_t v32 = *(void *)(v31 + OBJC_IVAR____TtC13HomeDataModel37CameraClipScrubberDemoContentProvider__scrubberElements);
  uint64_t v49 = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_251ED7650(v32);
  uint64_t v33 = v49;
  uint64_t v34 = swift_getKeyPath();
  MEMORY[0x270FA5388](v34);
  *(&v38 - 2) = v31;
  *(&v38 - 1) = v33;
  uint64_t v49 = v31;
  sub_251F34F00();
  swift_release();
  swift_bridgeObjectRelease();
  if (!__OFSUB__(v39, v44))
  {
    uint64_t v35 = (v39 - v44) & ~((v39 - v44) >> 63);
    uint64_t v36 = swift_getKeyPath();
    MEMORY[0x270FA5388](v36);
    *(&v38 - 4) = v31;
    *(&v38 - 3) = v35;
    *((unsigned char *)&v38 - 16) = 0;
    uint64_t v49 = v31;
    sub_251F34F00();
    swift_release();
    return v20;
  }
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t CameraClipScrubberDemoContentProvider.fetchSignificantEvents(for:)(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  type metadata accessor for ReachabilityEvent();
  v2[4] = swift_task_alloc();
  v2[5] = type metadata accessor for CameraClip();
  v2[6] = swift_task_alloc();
  type metadata accessor for ScrubberElement.ID(0);
  v2[7] = swift_task_alloc();
  v2[8] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for ScrubberElement(0);
  v2[9] = v3;
  v2[10] = *(void *)(v3 - 8);
  v2[11] = swift_task_alloc();
  v2[12] = swift_task_alloc();
  v2[13] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_251AD79CC, 0, 0);
}

uint64_t sub_251AD79CC()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = (void *)sub_2519FA9F8(MEMORY[0x263F8EE78]);
  uint64_t v3 = sub_251AD7FD8(v1, 1u, 0, 0);
  uint64_t v4 = *(void *)(v3 + 16);
  if (!v4)
  {
LABEL_22:
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v41 = (uint64_t (*)(void *))v0[1];
    return v41(v2);
  }
  uint64_t v5 = v0[10];
  uint64_t v42 = v0[5];
  uint64_t v6 = v3 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  uint64_t v43 = *(void *)(v5 + 72);
  while (1)
  {
    uint64_t v45 = v4;
    uint64_t v10 = v0[12];
    uint64_t v9 = v0[13];
    uint64_t v44 = v6;
    sub_251AE1200(v6, v9, type metadata accessor for ScrubberElement);
    sub_251AE1200(v9, v10, type metadata accessor for ScrubberElement);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v12 = v0[12];
    uint64_t v13 = v0[7];
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v14 = v0[4];
      sub_251ADBF40(v12, v14, (uint64_t (*)(void))type metadata accessor for ReachabilityEvent);
      uint64_t v15 = sub_251F34DA0();
      uint64_t v16 = *(void *)(v15 - 8);
      uint64_t v17 = swift_task_alloc();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v17, v14, v15);
      uint64_t v18 = type metadata accessor for ReachabilityEvent;
    }
    else
    {
      uint64_t v14 = v0[6];
      sub_251ADBF40(v12, v14, (uint64_t (*)(void))type metadata accessor for CameraClip);
      uint64_t v15 = sub_251F34DA0();
      uint64_t v16 = *(void *)(v15 - 8);
      uint64_t v17 = swift_task_alloc();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v17, v14, v15);
      uint64_t v18 = type metadata accessor for CameraClip;
    }
    sub_251ADBFA8(v14, (uint64_t (*)(void))v18);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32))(v13, v17, v15);
    uint64_t v19 = v0[13];
    uint64_t v20 = v0[11];
    uint64_t v21 = v0[8];
    uint64_t v22 = v0[7];
    swift_task_dealloc();
    sub_251ADBF40(v22, v21, type metadata accessor for ScrubberElement.ID);
    sub_251F34DA0();
    uint64_t v23 = *(void *)(v15 - 8);
    uint64_t v24 = swift_task_alloc();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 32))(v24, v21, v15);
    sub_251AE1200(v19, v20, type metadata accessor for ScrubberElement);
    int v25 = swift_getEnumCaseMultiPayload();
    uint64_t v26 = v0[11];
    if (v25 == 1)
    {
      sub_251ADBFA8(v26, type metadata accessor for ScrubberElement);
      uint64_t v27 = MEMORY[0x263F8EE78];
    }
    else
    {
      uint64_t v28 = v0[6];
      sub_251ADBF40(v26, v28, (uint64_t (*)(void))type metadata accessor for CameraClip);
      uint64_t v27 = *(void *)(v28 + *(int *)(v42 + 40));
      swift_bridgeObjectRetain();
      sub_251ADBFA8(v28, (uint64_t (*)(void))type metadata accessor for CameraClip);
    }
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v31 = sub_2519FE584(v24);
    uint64_t v32 = v2[2];
    BOOL v33 = (v30 & 1) == 0;
    uint64_t result = v32 + v33;
    if (__OFADD__(v32, v33))
    {
      __break(1u);
LABEL_29:
      __break(1u);
      return result;
    }
    char v35 = v30;
    if (v2[3] < result) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      if (v30) {
        goto LABEL_3;
      }
    }
    else
    {
      sub_251A145D8();
      if (v35)
      {
LABEL_3:
        uint64_t v7 = v2[7];
        swift_bridgeObjectRelease();
        *(void *)(v7 + 8 * v31) = v27;
        goto LABEL_4;
      }
    }
LABEL_18:
    v2[(v31 >> 6) + 8] |= 1 << v31;
    uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v23 + 16))(v2[6] + *(void *)(v23 + 72) * v31, v24, v15);
    *(void *)(v2[7] + 8 * v31) = v27;
    uint64_t v38 = v2[2];
    BOOL v39 = __OFADD__(v38, 1);
    uint64_t v40 = v38 + 1;
    if (v39) {
      goto LABEL_29;
    }
    v2[2] = v40;
LABEL_4:
    uint64_t v8 = v0[13];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v24, v15);
    sub_251ADBFA8(v8, type metadata accessor for ScrubberElement);
    swift_task_dealloc();
    uint64_t v6 = v44 + v43;
    uint64_t v4 = v45 - 1;
    if (v45 == 1) {
      goto LABEL_22;
    }
  }
  sub_251A05EF4(result, isUniquelyReferenced_nonNull_native);
  unint64_t v36 = sub_2519FE584(v24);
  if ((v35 & 1) == (v37 & 1))
  {
    unint64_t v31 = v36;
    if (v35) {
      goto LABEL_3;
    }
    goto LABEL_18;
  }
  return sub_251F36BA0();
}

uint64_t sub_251AD7FD8(uint64_t a1, unsigned __int8 a2, char a3, char a4)
{
  uint64_t v8 = type metadata accessor for ScrubberElement(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v12 = (char *)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)v28 - v13;
  swift_bridgeObjectRetain();
  uint64_t v15 = swift_bridgeObjectRetain();
  uint64_t v16 = sub_251ADEB44(v15, a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int64_t v17 = *(void *)(v16 + 16);
  if (v17)
  {
    uint64_t v32 = MEMORY[0x263F8EE78];
    sub_251A3E4A8(0, v17, 0);
    char v18 = a3 ^ 1;
    char v19 = a4 ^ 1;
    uint64_t v20 = *(unsigned __int8 *)(v9 + 80);
    v28[1] = v16;
    uint64_t v31 = (v20 + 32) & ~v20;
    uint64_t v21 = v16 + v31;
    uint64_t v22 = *(void *)(v9 + 72);
    uint64_t v23 = v32;
    int v29 = v18 & 1;
    int v30 = (a2 ^ 1) & 1;
    int v24 = v19 & 1;
    do
    {
      sub_251AE1200(v21, (uint64_t)v12, type metadata accessor for ScrubberElement);
      sub_251AD8378(v30, v29, v24, (uint64_t)v14);
      sub_251ADBFA8((uint64_t)v12, type metadata accessor for ScrubberElement);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_251A3E4A8(0, *(void *)(v23 + 16) + 1, 1);
        uint64_t v23 = v32;
      }
      unint64_t v26 = *(void *)(v23 + 16);
      unint64_t v25 = *(void *)(v23 + 24);
      if (v26 >= v25 >> 1)
      {
        sub_251A3E4A8(v25 > 1, v26 + 1, 1);
        uint64_t v23 = v32;
      }
      *(void *)(v23 + 16) = v26 + 1;
      sub_251ADBF40((uint64_t)v14, v23 + v31 + v26 * v22, type metadata accessor for ScrubberElement);
      v21 += v22;
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  return v23;
}

uint64_t CameraClipScrubberDemoContentProvider.generateInitialPosterFrames(for:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_251AD8280, 0, 0);
}

uint64_t sub_251AD8280()
{
  uint64_t v1 = sub_251AD7FD8(*(void *)(v0 + 16), 1u, 1, 0);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t CameraClipScrubberDemoContentProvider.downloadAndUpdateFullAsset(for:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_251AD830C, 0, 0);
}

uint64_t sub_251AD830C()
{
  uint64_t v1 = sub_251AD7FD8(*(void *)(v0 + 16), 1u, 1, 1);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_251AD8378@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X8>)
{
  LODWORD(v85) = a1;
  uint64_t v8 = type metadata accessor for ScrubberElement(0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (int *)type metadata accessor for CameraClip();
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  int64_t v17 = (char *)v58 - v16;
  MEMORY[0x270FA5388](v15);
  char v19 = (char *)v58 - v18;
  sub_251AE1200(v4, (uint64_t)v10, type metadata accessor for ScrubberElement);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_251ADBFA8((uint64_t)v10, type metadata accessor for ScrubberElement);
    return sub_251AE1200(v4, a4, type metadata accessor for ScrubberElement);
  }
  else
  {
    LODWORD(v66) = a2;
    int v79 = a3;
    unint64_t v82 = v17;
    uint64_t v83 = v8;
    uint64_t v84 = a4;
    sub_251ADBF40((uint64_t)v10, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for CameraClip);
    uint64_t v21 = sub_251F34DA0();
    uint64_t v81 = v58;
    MEMORY[0x270FA5388](v21);
    uint64_t v76 = v24;
    uint64_t v77 = v23;
    unint64_t v25 = *(void (**)(void))(v24 + 16);
    uint64_t v74 = (char *)v58 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
    v25();
    uint64_t v26 = (uint64_t)&v19[v11[5]];
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB88);
    id v80 = v58;
    uint64_t v28 = *(void *)(*(void *)(v27 - 8) + 64);
    MEMORY[0x270FA5388](v27 - 8);
    uint64_t v71 = (uint64_t)v58 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_251A1B128(v26, v71, &qword_269B9DB88);
    uint64_t v29 = sub_251F34D20();
    unint64_t v78 = v58;
    uint64_t v30 = *(void *)(v29 - 8);
    uint64_t v31 = *(void *)(v30 + 64);
    MEMORY[0x270FA5388](v29);
    unint64_t v32 = (v31 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v72 = v30;
    BOOL v33 = *(uint64_t (**)(void))(v30 + 16);
    unint64_t v70 = (char *)v58 - v32;
    uint64_t v34 = v33();
    uint64_t v75 = v58;
    MEMORY[0x270FA5388](v34);
    uint64_t v69 = (char *)v58 - v32;
    uint64_t v73 = v29;
    v33();
    uint64_t v35 = v11[9];
    int v68 = v19[v11[8]];
    uint64_t v36 = *(void *)&v19[v35];
    if (v85)
    {
      uint64_t v67 = MEMORY[0x263F8EE78];
    }
    else
    {
      uint64_t v67 = *(void *)&v19[v11[10]];
      swift_bridgeObjectRetain();
    }
    char v37 = v66;
    uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB68);
    unint64_t v85 = v58;
    uint64_t v39 = *(void *)(*(void *)(v38 - 8) + 64);
    MEMORY[0x270FA5388](v38 - 8);
    uint64_t v66 = (uint64_t)v58 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (v37)
    {
      uint64_t v40 = sub_251F34B70();
      uint64_t v41 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))((char *)v58 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v40);
    }
    else
    {
      uint64_t v41 = sub_251A1B128((uint64_t)&v19[v11[11]], (uint64_t)v58 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_269B9DB68);
    }
    uint64_t v65 = v58;
    MEMORY[0x270FA5388](v41);
    uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    uint64_t v43 = *(void *)(v42 - 8);
    uint64_t v44 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 56);
    uint64_t v63 = (uint64_t)v58 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v59 = v44;
    v58[1] = v43 + 56;
    uint64_t v45 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v44)(v63, 1, 1, v42);
    int64_t v64 = v58;
    MEMORY[0x270FA5388](v45);
    unint64_t v46 = (v39 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v47 = sub_251F34B70();
    unint64_t v48 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56);
    uint64_t v62 = (uint64_t)v58 - v46;
    uint64_t v49 = v48((char *)v58 - v46, 1, 1, v47);
    uint64_t v61 = v58;
    MEMORY[0x270FA5388](v49);
    uint64_t v50 = (char *)v58 - v46;
    id v60 = v19;
    if (v79) {
      v48((char *)v58 - v46, 1, 1, v47);
    }
    else {
      sub_251A1B128((uint64_t)&v19[v11[15]], (uint64_t)v58 - v46, &qword_269B9DB68);
    }
    uint64_t v51 = (uint64_t)&v14[v11[11]];
    v48((char *)v51, 1, 1, v47);
    uint64_t v52 = (uint64_t)&v14[v11[12]];
    v59(v52, 1, 1, v42);
    uint64_t v53 = (uint64_t)&v14[v11[14]];
    v48((char *)v53, 1, 1, v47);
    uint64_t v54 = (uint64_t)&v14[v11[15]];
    v48((char *)v54, 1, 1, v47);
    (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v14, v74, v77);
    sub_251AE1440(v71, (uint64_t)&v14[v11[5]]);
    uint64_t v55 = v73;
    uint64_t v56 = *(void (**)(char *, char *, uint64_t))(v72 + 32);
    v56(&v14[v11[6]], v70, v73);
    v56(&v14[v11[7]], v69, v55);
    v14[v11[8]] = v68;
    *(void *)&v14[v11[9]] = v36;
    *(void *)&v14[v11[10]] = v67;
    sub_251AE14A8(v66, v51, &qword_269B9DB68);
    sub_251AE14A8(v63, v52, &qword_269B9DB88);
    *(void *)&v14[v11[13]] = 0;
    sub_251AE14A8(v62, v53, &qword_269B9DB68);
    sub_251AE14A8((uint64_t)v50, v54, &qword_269B9DB68);
    uint64_t v57 = (uint64_t)v82;
    sub_251ADBF40((uint64_t)v14, (uint64_t)v82, (uint64_t (*)(void))type metadata accessor for CameraClip);
    sub_251ADBFA8((uint64_t)v60, (uint64_t (*)(void))type metadata accessor for CameraClip);
    sub_251ADBF40(v57, v84, (uint64_t (*)(void))type metadata accessor for CameraClip);
    return swift_storeEnumTagMultiPayload();
  }
}

uint64_t _s13HomeDataModel37CameraClipScrubberDemoContentProviderC07minimumE4Date10Foundation0K0Vvg_0@<X0>(uint64_t a1@<X8>)
{
  if (qword_269B9C2A8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_251F34D20();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_269B9DAD0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t sub_251AD8CB8()
{
  return 30;
}

uint64_t sub_251AD8CC0()
{
  return 100;
}

uint64_t sub_251AD8CC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[2] = a1;
  v4[3] = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DAF0);
  v4[4] = v5;
  v4[5] = *(void *)(v5 - 8);
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = *v3;
  v4[6] = v6;
  v4[7] = v7;
  return MEMORY[0x270FA2498](sub_251AD8D90, 0, 0);
}

uint64_t sub_251AD8D90()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = v0[7];
  uint64_t v3 = v0[4];
  uint64_t v4 = v0[5];
  uint64_t v5 = v0[3];
  uint64_t v6 = swift_task_alloc();
  *(void *)(v6 + 16) = v2;
  *(void *)(v6 + 24) = v5;
  type metadata accessor for ScrubberElement(0);
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v1, *MEMORY[0x263F8F580], v3);
  sub_251F35D50();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_251AD8E88(uint64_t a1)
{
  uint64_t v3 = *v1;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x270FA2498](sub_251AD8280, 0, 0);
}

uint64_t sub_251AD8EAC(uint64_t a1)
{
  uint64_t v3 = *v1;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return MEMORY[0x270FA2498](sub_251AD830C, 0, 0);
}

uint64_t sub_251AD8ED0(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_251AD8F68;
  return CameraClipScrubberDemoContentProvider.fetchSignificantEvents(for:)(a1);
}

uint64_t sub_251AD8F68(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t CameraClipScrubberDemoContentProvider.__allocating_init(baseURL:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  CameraClipScrubberDemoContentProvider.init(baseURL:)(a1);
  return v2;
}

uint64_t sub_251AD90A4()
{
  sub_251F34D20();
  sub_251AE2590(&qword_269B9CF80, MEMORY[0x270FA9280]);
  sub_251F35610();
  type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata.SignificantEvent(0);
  sub_251F36CF0();
  swift_bridgeObjectRetain();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_251F357B0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_251F357B0();
  return swift_bridgeObjectRelease();
}

unint64_t sub_251AD91C4(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000014;
      break;
    case 2:
      unint64_t result = 0x6E6F73616572;
      break;
    case 4:
      unint64_t result = 0x6E656469666E6F63;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_251AD9274@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v36 = a2;
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DC08);
  uint64_t v4 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  uint64_t v6 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata.SignificantEvent(0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251AE25D8();
  sub_251F36D90();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  BOOL v33 = v9;
  uint64_t v34 = a1;
  uint64_t v35 = v4;
  unint64_t v32 = (int *)v7;
  uint64_t v10 = sub_251F34D20();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v42 = 0;
  sub_251AE2590(&qword_269B9DBE8, MEMORY[0x270FA9280]);
  uint64_t v14 = v37;
  sub_251F36880();
  v31[1] = v11;
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  uint64_t v16 = (uint64_t)v33;
  v15(v33, v13, v10);
  char v41 = 1;
  sub_251F36850();
  uint64_t v17 = v35;
  uint64_t v18 = v32;
  *(void *)(v16 + v32[5]) = v19;
  char v40 = 2;
  uint64_t v20 = sub_251F36830();
  uint64_t v21 = (uint64_t *)(v16 + v18[6]);
  *uint64_t v21 = v20;
  v21[1] = v22;
  char v39 = 3;
  uint64_t v23 = sub_251F36830();
  uint64_t v24 = (uint64_t *)(v16 + v18[7]);
  *uint64_t v24 = v23;
  v24[1] = v25;
  char v38 = 4;
  uint64_t v26 = sub_251F36830();
  uint64_t v28 = v27;
  (*(void (**)(char *, uint64_t))(v17 + 8))(v6, v14);
  uint64_t v29 = (uint64_t *)(v16 + v18[8]);
  *uint64_t v29 = v26;
  v29[1] = v28;
  sub_251AE1200(v16, v36, type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata.SignificantEvent);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v34);
  return sub_251ADBFA8(v16, type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata.SignificantEvent);
}

uint64_t sub_251AD9710()
{
  sub_251F36CA0();
  sub_251F36CF0();
  uint64_t v1 = type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata(0);
  sub_251F34D20();
  sub_251AE2590(&qword_269B9CF80, MEMORY[0x270FA9280]);
  sub_251F35610();
  sub_251A4137C((uint64_t)v3, *(void *)(v0 + *(int *)(v1 + 24)));
  sub_251F357B0();
  return sub_251F36D00();
}

uint64_t sub_251AD97D8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DBD8);
  uint64_t v4 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (int *)type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata(0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (uint64_t *)((char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_251AE2498();
  sub_251F36D90();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  uint64_t v10 = v4;
  char v32 = 0;
  sub_251F36850();
  uint64_t v24 = v9;
  *uint64_t v9 = v11;
  uint64_t v12 = sub_251F34D20();
  uint64_t v25 = &v23;
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v31 = 1;
  sub_251AE2590(&qword_269B9DBE8, MEMORY[0x270FA9280]);
  sub_251F36880();
  uint64_t v16 = (char *)v24 + v7[5];
  uint64_t v23 = v13;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v16, v15, v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DBF0);
  char v30 = 2;
  sub_251AE24EC();
  sub_251F36880();
  uint64_t v17 = (uint64_t)v24;
  *(void *)((char *)v24 + v7[6]) = v28;
  char v29 = 3;
  uint64_t v25 = 0;
  uint64_t v18 = sub_251F36830();
  uint64_t v20 = v19;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v6, v27);
  uint64_t v21 = (uint64_t *)(v17 + v7[7]);
  *uint64_t v21 = v18;
  v21[1] = v20;
  sub_251AE1200(v17, v26, type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  return sub_251ADBFA8(v17, type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata);
}

unint64_t sub_251AD9C14()
{
  return sub_251AD91C4(*v0);
}

uint64_t sub_251AD9C1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251AE2AD4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_251AD9C44(uint64_t a1)
{
  unint64_t v2 = sub_251AE25D8();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251AD9C80(uint64_t a1)
{
  unint64_t v2 = sub_251AE25D8();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251AD9CBC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(v2 + *(int *)(a1 + 28));
  uint64_t v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_251AD9CD0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_251AD9274(a1, a2);
}

uint64_t sub_251AD9CE8()
{
  return sub_251F36D00();
}

uint64_t sub_251AD9D2C()
{
  return sub_251F36D00();
}

unint64_t sub_251AD9D6C()
{
  unint64_t result = 0x6E6F697461727564;
  switch(*v0)
  {
    case 1:
      unint64_t result = 1702125924;
      break;
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_251AD9E00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_251AE2CF8(a1, a2);
  *a3 = result;
  return result;
}

void sub_251AD9E28(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_251AD9E34(uint64_t a1)
{
  unint64_t v2 = sub_251AE2498();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_251AD9E70(uint64_t a1)
{
  unint64_t v2 = sub_251AE2498();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_251AD9EAC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_251AD97D8(a1, a2);
}

uint64_t sub_251AD9EC8(uint64_t a1, uint64_t a2)
{
  sub_251F36CF0();
  sub_251F34D20();
  sub_251AE2590(&qword_269B9CF80, MEMORY[0x270FA9280]);
  sub_251F35610();
  sub_251A4137C(a1, *(void *)(v2 + *(int *)(a2 + 24)));
  return sub_251F357B0();
}

uint64_t sub_251AD9F84(uint64_t a1, uint64_t a2)
{
  sub_251F36CA0();
  sub_251F36CF0();
  sub_251F34D20();
  sub_251AE2590(&qword_269B9CF80, MEMORY[0x270FA9280]);
  sub_251F35610();
  sub_251A4137C((uint64_t)v5, *(void *)(v2 + *(int *)(a2 + 24)));
  sub_251F357B0();
  return sub_251F36D00();
}

uint64_t sub_251ADA044()
{
  uint64_t v0 = sub_251F34D20();
  __swift_allocate_value_buffer(v0, qword_269B9DAD0);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_269B9DAD0);
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34CF0();
  sub_251F34C60();
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v0);
}

uint64_t sub_251ADA13C(uint64_t a1)
{
  return sub_251AD70EC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t static CameraClipScrubberDemoContentProvider.initialEventFetchLimit.getter()
{
  return 30;
}

uint64_t static CameraClipScrubberDemoContentProvider.defaultEventFetchLimit.getter()
{
  return 100;
}

uint64_t static CameraClipScrubberDemoContentProvider.demoContentBaseURL.getter()
{
  return sub_251F34AF0();
}

uint64_t sub_251ADA188()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_251ADA234@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_251AE1514(&qword_269B9DBA0, (void (*)(uint64_t))type metadata accessor for CameraClipScrubberDemoContentProvider);
  sub_251F34F10();
  swift_release();
  *a2 = *(void *)(v3 + OBJC_IVAR____TtC13HomeDataModel37CameraClipScrubberDemoContentProvider__scrubberElements);
  return swift_bridgeObjectRetain();
}

uint64_t sub_251ADA2E8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_251ADA3C8()
{
  swift_getKeyPath();
  sub_251AE1514(&qword_269B9DBA0, (void (*)(uint64_t))type metadata accessor for CameraClipScrubberDemoContentProvider);
  sub_251F34F10();
  swift_release();
  return *(void *)(v0 + OBJC_IVAR____TtC13HomeDataModel37CameraClipScrubberDemoContentProvider__lastFetchedIndex);
}

uint64_t sub_251ADA478@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_251AE1514(&qword_269B9DBA0, (void (*)(uint64_t))type metadata accessor for CameraClipScrubberDemoContentProvider);
  sub_251F34F10();
  uint64_t result = swift_release();
  char v5 = *(unsigned char *)(v3 + OBJC_IVAR____TtC13HomeDataModel37CameraClipScrubberDemoContentProvider__lastFetchedIndex + 8);
  *(void *)a2 = *(void *)(v3
                            + OBJC_IVAR____TtC13HomeDataModel37CameraClipScrubberDemoContentProvider__lastFetchedIndex);
  *(unsigned char *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_251ADA534()
{
  return swift_release();
}

uint64_t CameraClipScrubberDemoContentProvider.init(baseURL:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v58 = type metadata accessor for ReachabilityEvent();
  uint64_t v4 = MEMORY[0x270FA5388](v58);
  uint64_t v56 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v55 = (uint64_t)&v51 - v6;
  uint64_t v53 = type metadata accessor for CameraClip();
  MEMORY[0x270FA5388](v53);
  uint64_t v54 = (uint64_t)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = type metadata accessor for ScrubberElement(0);
  uint64_t v57 = *(void *)(v61 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v61);
  uint64_t v59 = (uint64_t)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v60 = (uint64_t)&v51 - v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v51 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v51 - v15;
  *(void *)(v1 + OBJC_IVAR____TtC13HomeDataModel37CameraClipScrubberDemoContentProvider__scrubberElements) = MEMORY[0x263F8EE78];
  uint64_t v17 = v1 + OBJC_IVAR____TtC13HomeDataModel37CameraClipScrubberDemoContentProvider__lastFetchedIndex;
  *(void *)uint64_t v17 = 0;
  *(unsigned char *)(v17 + 8) = 1;
  sub_251F34F40();
  uint64_t v18 = v1 + OBJC_IVAR____TtC13HomeDataModel37CameraClipScrubberDemoContentProvider_baseURL;
  uint64_t v19 = sub_251F34B70();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v20 + 16);
  uint64_t v64 = v19;
  v21(v18, a1);
  if (qword_269B9C528 != -1) {
    swift_once();
  }
  if (qword_269BA5BF0)
  {
    id v22 = (id)qword_269BA5BF0;
    uint64_t v23 = (void *)sub_251F356C0();
    id v24 = objc_msgSend(v22, sel_stringForKey_, v23);

    if (v24)
    {
      uint64_t v25 = sub_251F356F0();
      unint64_t v27 = v26;

      goto LABEL_8;
    }
  }
  uint64_t v25 = 0;
  unint64_t v27 = 0xE000000000000000;
LABEL_8:
  uint64_t v28 = (uint64_t *)(v2 + OBJC_IVAR____TtC13HomeDataModel37CameraClipScrubberDemoContentProvider_cameraName);
  *uint64_t v28 = v25;
  v28[1] = v27;
  swift_bridgeObjectRetain();
  char v29 = (void *)sub_251ADEFE0();
  swift_bridgeObjectRelease();
  uint64_t v65 = v29;
  swift_bridgeObjectRetain();
  sub_251ADC008(&v65);
  swift_bridgeObjectRelease();
  char v30 = v65;
  uint64_t v31 = sub_251F34D20();
  uint64_t v63 = &v51;
  uint64_t v32 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v34 = (char *)&v51 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC20);
  uint64_t v62 = &v51;
  MEMORY[0x270FA5388](v35 - 8);
  uint64_t v37 = (char *)&v51 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = v30[2];
  if (!v38)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56))(v37, 1, 1, v31);
LABEL_14:
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(a1, v64);
    sub_251A1B064((uint64_t)v37, &qword_26B21EC20);
    goto LABEL_20;
  }
  unint64_t v51 = (*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
  uint64_t v52 = a1;
  uint64_t v57 = *(void *)(v57 + 72);
  sub_251AE1200((uint64_t)v30 + v51 + v57 * (v38 - 1), (uint64_t)v16, type metadata accessor for ScrubberElement);
  sub_251AE1200((uint64_t)v16, (uint64_t)v14, type metadata accessor for ScrubberElement);
  char v39 = (void (**)(char *, uint64_t, uint64_t))(v32 + 16);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v40 = (uint64_t)v14;
    uint64_t v41 = v55;
    sub_251ADBF40(v40, v55, (uint64_t (*)(void))type metadata accessor for ReachabilityEvent);
    (*v39)(v37, v41 + *(int *)(v58 + 24), v31);
    char v42 = type metadata accessor for ReachabilityEvent;
  }
  else
  {
    uint64_t v43 = (uint64_t)v14;
    uint64_t v41 = v54;
    sub_251ADBF40(v43, v54, (uint64_t (*)(void))type metadata accessor for CameraClip);
    (*v39)(v37, v41 + *(int *)(v53 + 24), v31);
    char v42 = type metadata accessor for CameraClip;
  }
  sub_251ADBFA8(v41, (uint64_t (*)(void))v42);
  sub_251ADBFA8((uint64_t)v16, type metadata accessor for ScrubberElement);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v37, 0, 1, v31);
  int v44 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v32 + 48))(v37, 1, v31);
  a1 = v52;
  if (v44 == 1) {
    goto LABEL_14;
  }
  (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v34, v37, v31);
  uint64_t v45 = (uint64_t)v56;
  sub_251F34D90();
  uint64_t v46 = v58;
  sub_251F34C60();
  sub_251F34C60();
  *(unsigned char *)(v45 + *(int *)(v46 + 20)) = 0;
  uint64_t v47 = v60;
  sub_251AE1200(v45, v60, (uint64_t (*)(void))type metadata accessor for ReachabilityEvent);
  swift_storeEnumTagMultiPayload();
  sub_251AE1200(v47, v59, type metadata accessor for ScrubberElement);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    char v30 = (void *)sub_251F0FFF4(0, v30[2] + 1, 1, (unint64_t)v30);
  }
  unint64_t v49 = v30[2];
  unint64_t v48 = v30[3];
  if (v49 >= v48 >> 1) {
    char v30 = (void *)sub_251F0FFF4(v48 > 1, v49 + 1, 1, (unint64_t)v30);
  }
  void v30[2] = v49 + 1;
  sub_251ADBF40(v59, (uint64_t)v30 + v51 + v49 * v57, type metadata accessor for ScrubberElement);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(a1, v64);
  sub_251ADBFA8(v60, type metadata accessor for ScrubberElement);
  sub_251ADBFA8(v45, (uint64_t (*)(void))type metadata accessor for ReachabilityEvent);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v31);
LABEL_20:
  *(void *)(v2 + OBJC_IVAR____TtC13HomeDataModel37CameraClipScrubberDemoContentProvider_allScrubberElements) = v30;
  return v2;
}

uint64_t sub_251ADAE54(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = -a1;
  if (__OFSUB__(0, a1))
  {
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v5 = a2;
  if (__OFSUB__(0, a2))
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (-a2 > v6) {
    uint64_t v6 = -a2;
  }
  uint64_t v4 = a2 + v6;
  if (__OFADD__(a2, v6)) {
    goto LABEL_20;
  }
  uint64_t v7 = -v6;
  if (a2 < v4)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v4 < 0)
  {
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    swift_bridgeObjectRelease();
    uint64_t v12 = sub_251A9169C(v2, v2 + ((v3 + 32) & ~v3), v4, (2 * v5) | 1);
    goto LABEL_17;
  }
  uint64_t v2 = *(void *)(v3 + OBJC_IVAR____TtC13HomeDataModel37CameraClipScrubberDemoContentProvider_allScrubberElements);
  unint64_t v8 = *(void *)(v2 + 16);
  if (v8 < v4 || (uint64_t)v8 < a2) {
    goto LABEL_23;
  }
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(type metadata accessor for ScrubberElement(0) - 8) + 80);
  sub_251F36B40();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain_n();
  uint64_t v10 = swift_dynamicCastClass();
  if (!v10)
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = MEMORY[0x263F8EE78];
  }
  uint64_t v11 = *(void *)(v10 + 16);
  swift_release();
  if (v11 != v7) {
    goto LABEL_24;
  }
  uint64_t v12 = swift_dynamicCastClass();
  if (!v12)
  {
    swift_bridgeObjectRelease();
    uint64_t v12 = MEMORY[0x263F8EE78];
  }
LABEL_17:
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_251ADAFCC@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, uint64_t a5@<X8>)
{
  int v82 = a4;
  LODWORD(v81) = a2;
  uint64_t v9 = (int *)type metadata accessor for CameraClip();
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v55 - v13;
  uint64_t v15 = type metadata accessor for ScrubberElement(0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251AE1200(a1, (uint64_t)v17, type metadata accessor for ScrubberElement);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_251AE1200(a1, a5, type metadata accessor for ScrubberElement);
    return sub_251ADBFA8((uint64_t)v17, type metadata accessor for ScrubberElement);
  }
  else
  {
    LODWORD(v63) = a3;
    uint64_t v78 = v15;
    uint64_t v79 = a5;
    uint64_t v80 = v5;
    sub_251ADBF40((uint64_t)v17, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for CameraClip);
    uint64_t v19 = sub_251F34DA0();
    uint64_t v77 = &v55;
    MEMORY[0x270FA5388](v19);
    uint64_t v71 = (char *)&v55 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v72 = v21;
    id v22 = *(void (**)(void))(v21 + 16);
    uint64_t v74 = v23;
    v22();
    uint64_t v24 = (uint64_t)&v14[v9[5]];
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB88);
    uint64_t v76 = &v55;
    uint64_t v26 = *(void *)(*(void *)(v25 - 8) + 64);
    MEMORY[0x270FA5388](v25 - 8);
    uint64_t v68 = (uint64_t)&v55 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_251A1B128(v24, v68, &qword_269B9DB88);
    uint64_t v27 = sub_251F34D20();
    uint64_t v75 = &v55;
    uint64_t v28 = *(void *)(v27 - 8);
    uint64_t v29 = *(void *)(v28 + 64);
    MEMORY[0x270FA5388](v27);
    unint64_t v30 = (v29 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v69 = v28;
    uint64_t v83 = v14;
    uint64_t v31 = *(uint64_t (**)(void))(v28 + 16);
    uint64_t v67 = (char *)&v55 - v30;
    uint64_t v32 = v31();
    uint64_t v73 = &v55;
    MEMORY[0x270FA5388](v32);
    uint64_t v66 = (char *)&v55 - v30;
    uint64_t v70 = v27;
    v31();
    uint64_t v33 = v9[9];
    int v65 = v83[v9[8]];
    uint64_t v34 = *(void *)&v83[v33];
    if (v81)
    {
      uint64_t v64 = *(void *)&v83[v9[10]];
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v64 = MEMORY[0x263F8EE78];
    }
    char v35 = (char)v63;
    uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB68);
    uint64_t v81 = &v55;
    uint64_t v37 = *(void *)(*(void *)(v36 - 8) + 64);
    MEMORY[0x270FA5388](v36 - 8);
    uint64_t v63 = (char *)&v55 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (v35)
    {
      uint64_t v38 = sub_251A1B128((uint64_t)&v83[v9[11]], (uint64_t)&v55 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_269B9DB68);
    }
    else
    {
      uint64_t v39 = sub_251F34B70();
      uint64_t v38 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))((char *)&v55 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v39);
    }
    uint64_t v62 = &v55;
    MEMORY[0x270FA5388](v38);
    uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    uint64_t v41 = *(void *)(v40 - 8);
    char v42 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 56);
    uint64_t v60 = (uint64_t)&v55 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v56 = v42;
    uint64_t v55 = v41 + 56;
    uint64_t v43 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v42)(v60, 1, 1, v40);
    uint64_t v61 = &v55;
    MEMORY[0x270FA5388](v43);
    unint64_t v44 = (v37 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v45 = sub_251F34B70();
    uint64_t v46 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56);
    uint64_t v59 = (uint64_t)&v55 - v44;
    uint64_t v47 = v46((char *)&v55 - v44, 1, 1, v45);
    uint64_t v58 = &v55;
    MEMORY[0x270FA5388](v47);
    uint64_t v57 = (uint64_t)&v55 - v44;
    if (v82) {
      sub_251A1B128((uint64_t)&v83[v9[15]], (uint64_t)&v55 - v44, &qword_269B9DB68);
    }
    else {
      v46((char *)&v55 - v44, 1, 1, v45);
    }
    uint64_t v48 = (uint64_t)&v12[v9[11]];
    v46((char *)v48, 1, 1, v45);
    uint64_t v49 = (uint64_t)&v12[v9[12]];
    v56(v49, 1, 1, v40);
    uint64_t v50 = (uint64_t)&v12[v9[14]];
    v46((char *)v50, 1, 1, v45);
    uint64_t v51 = (uint64_t)&v12[v9[15]];
    v46((char *)v51, 1, 1, v45);
    (*(void (**)(char *, char *, uint64_t))(v72 + 32))(v12, v71, v74);
    sub_251AE1440(v68, (uint64_t)&v12[v9[5]]);
    uint64_t v52 = v70;
    uint64_t v53 = *(void (**)(char *, char *, uint64_t))(v69 + 32);
    v53(&v12[v9[6]], v67, v70);
    v53(&v12[v9[7]], v66, v52);
    v12[v9[8]] = v65;
    *(void *)&v12[v9[9]] = v34;
    uint64_t v54 = (uint64_t)v63;
    *(void *)&v12[v9[10]] = v64;
    sub_251AE14A8(v54, v48, &qword_269B9DB68);
    sub_251AE14A8(v60, v49, &qword_269B9DB88);
    *(void *)&v12[v9[13]] = 0;
    sub_251AE14A8(v59, v50, &qword_269B9DB68);
    sub_251AE14A8(v57, v51, &qword_269B9DB68);
    sub_251ADBF40((uint64_t)v12, v79, (uint64_t (*)(void))type metadata accessor for CameraClip);
    sub_251ADBFA8((uint64_t)v83, (uint64_t (*)(void))type metadata accessor for CameraClip);
    return swift_storeEnumTagMultiPayload();
  }
}

uint64_t sub_251ADB838@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata.SignificantEvent(0);
  uint64_t v5 = (uint64_t *)(a1 + *(int *)(v4 + 24));
  uint64_t v6 = *v5;
  uint64_t v7 = v5[1];
  if (*v5 == 0x6F69746F4D796E41 && v7 == 0xE90000000000006ELL)
  {
    char v9 = 0;
  }
  else
  {
    char v9 = 0;
    if ((sub_251F36B10() & 1) == 0)
    {
      BOOL v10 = v6 == 0x6E6F73726550 && v7 == 0xE600000000000000;
      if (v10 || (sub_251F36B10() & 1) != 0)
      {
        char v9 = 1;
      }
      else
      {
        BOOL v29 = v6 == 0x6C616D696E41 && v7 == 0xE600000000000000;
        if (v29 || (sub_251F36B10() & 1) != 0)
        {
          char v9 = 2;
        }
        else
        {
          BOOL v31 = v6 == 0x656C6369686556 && v7 == 0xE700000000000000;
          if (v31 || (sub_251F36B10() & 1) != 0)
          {
            char v9 = 3;
          }
          else if (v6 == 0x6567616B636150 && v7 == 0xE700000000000000 || (sub_251F36B10() & 1) != 0)
          {
            char v9 = 4;
          }
          else
          {
            char v9 = 5;
            if (v6 != 0xD000000000000014 || v7 != 0x8000000251F691F0)
            {
              if (sub_251F36B10()) {
                char v9 = 5;
              }
              else {
                char v9 = 0;
              }
            }
          }
        }
      }
    }
  }
  uint64_t v11 = (uint64_t *)(a1 + *(int *)(v4 + 32));
  uint64_t v12 = *v11;
  uint64_t v13 = v11[1];
  BOOL v14 = *v11 == 7827276 && v13 == 0xE300000000000000;
  uint64_t v33 = a2;
  if (v14 || (sub_251F36B10() & 1) != 0)
  {
    char v15 = 1;
  }
  else
  {
    BOOL v28 = v12 == 0x6D756964654DLL && v13 == 0xE600000000000000;
    if (v28 || (sub_251F36B10() & 1) != 0)
    {
      char v15 = 2;
    }
    else
    {
      char v15 = 3;
      if (v12 != 1751607624 || v13 != 0xE400000000000000)
      {
        if (sub_251F36B10()) {
          char v15 = 3;
        }
        else {
          char v15 = 0;
        }
      }
    }
  }
  uint64_t v16 = sub_251F34DA0();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v20 - 8);
  id v22 = (char *)&v32 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_251F34D30();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v22, 1, v16) == 1)
  {
    sub_251F34D90();
    sub_251A1B064((uint64_t)v22, &qword_26B21FF90);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v22, v16);
  }
  uint64_t v23 = (int *)type metadata accessor for SignificantEvent();
  uint64_t v24 = v33;
  uint64_t v25 = v33 + v23[6];
  uint64_t v26 = sub_251F34D20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v25, a1, v26);
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v24, v19, v16);
  *(unsigned char *)(v24 + v23[5]) = v9;
  *(unsigned char *)(v24 + v23[7]) = v15;
  return sub_251ADBFA8(a1, type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata.SignificantEvent);
}

uint64_t CameraClipScrubberDemoContentProvider.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC13HomeDataModel37CameraClipScrubberDemoContentProvider_baseURL;
  uint64_t v2 = sub_251F34B70();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v3 = v0 + OBJC_IVAR____TtC13HomeDataModel37CameraClipScrubberDemoContentProvider___observationRegistrar;
  uint64_t v4 = sub_251F34F50();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t CameraClipScrubberDemoContentProvider.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC13HomeDataModel37CameraClipScrubberDemoContentProvider_baseURL;
  uint64_t v2 = sub_251F34B70();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v3 = v0 + OBJC_IVAR____TtC13HomeDataModel37CameraClipScrubberDemoContentProvider___observationRegistrar;
  uint64_t v4 = sub_251F34F50();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  return swift_deallocClassInstance();
}

uint64_t sub_251ADBF40(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_251ADBFA8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_251ADC008(void **a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for ScrubberElement(0) - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_251ECDCC4(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  uint64_t result = sub_251ADC0B0(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_251ADC0B0(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v225 = type metadata accessor for ReachabilityEvent();
  MEMORY[0x270FA5388](v225);
  uint64_t v224 = (uint64_t)&v196 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v223 = type metadata accessor for CameraClip();
  MEMORY[0x270FA5388](v223);
  uint64_t v222 = (uint64_t)&v196 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v234 = type metadata accessor for ScrubberElement(0);
  uint64_t v6 = *(void *)(v234 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v234);
  uint64_t v211 = (uint64_t)&v196 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v227 = (uint64_t)&v196 - v10;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v218 = (uint64_t)&v196 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v217 = (uint64_t)&v196 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v235 = (uint64_t)&v196 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v232 = (uint64_t)&v196 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v196 - v20;
  uint64_t v22 = MEMORY[0x270FA5388](v19);
  uint64_t v24 = (char *)&v196 - v23;
  uint64_t v25 = MEMORY[0x270FA5388](v22);
  uint64_t v216 = (uint64_t)&v196 - v26;
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v213 = (uint64_t)&v196 - v28;
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v202 = (uint64_t)&v196 - v30;
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  uint64_t v201 = (uint64_t)&v196 - v32;
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  uint64_t v204 = (uint64_t)&v196 - v34;
  MEMORY[0x270FA5388](v33);
  uint64_t v203 = (uint64_t)&v196 - v35;
  v233 = a1;
  uint64_t v36 = a1[1];
  uint64_t result = sub_251F36AA0();
  if (result >= v36)
  {
    if (v36 < 0) {
      goto LABEL_157;
    }
    if (v36) {
      return sub_251ADD6B0(0, v36, 1, v233);
    }
    return result;
  }
  if (v36 >= 0) {
    uint64_t v38 = v36;
  }
  else {
    uint64_t v38 = v36 + 1;
  }
  if (v36 < -1) {
    goto LABEL_165;
  }
  v210 = v21;
  v208 = v24;
  uint64_t v198 = result;
  uint64_t v215 = v6;
  if (v36 < 2)
  {
    char v42 = (char *)MEMORY[0x263F8EE78];
    unint64_t v214 = MEMORY[0x263F8EE78]
         + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v197 = MEMORY[0x263F8EE78];
    if (v36 != 1)
    {
      unint64_t v44 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_123:
      if (v44 >= 2)
      {
        uint64_t v190 = *v233;
        do
        {
          unint64_t v191 = v44 - 2;
          if (v44 < 2) {
            goto LABEL_152;
          }
          if (!v190) {
            goto LABEL_164;
          }
          uint64_t v192 = *(void *)&v42[16 * v191 + 32];
          uint64_t v193 = *(void *)&v42[16 * v44 + 24];
          sub_251ADDD28(v190 + *(void *)(v215 + 72) * v192, v190 + *(void *)(v215 + 72) * *(void *)&v42[16 * v44 + 16], v190 + *(void *)(v215 + 72) * v193, v214);
          if (v2) {
            break;
          }
          if (v193 < v192) {
            goto LABEL_153;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            char v42 = sub_251ECDC38((uint64_t)v42);
          }
          if (v191 >= *((void *)v42 + 2)) {
            goto LABEL_154;
          }
          v194 = &v42[16 * v191 + 32];
          *(void *)v194 = v192;
          *((void *)v194 + 1) = v193;
          unint64_t v195 = *((void *)v42 + 2);
          if (v44 > v195) {
            goto LABEL_155;
          }
          memmove(&v42[16 * v44 + 16], &v42[16 * v44 + 32], 16 * (v195 - v44));
          *((void *)v42 + 2) = v195 - 1;
          unint64_t v44 = v195 - 1;
        }
        while (v195 > 2);
      }
LABEL_134:
      swift_bridgeObjectRelease();
      *(void *)(v197 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v39 = v38 >> 1;
    uint64_t v40 = sub_251F35B50();
    *(void *)(v40 + 16) = v39;
    unint64_t v41 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v197 = v40;
    unint64_t v214 = v40 + v41;
  }
  uint64_t v43 = 0;
  char v42 = (char *)MEMORY[0x263F8EE78];
  while (1)
  {
    uint64_t v45 = (uint64_t)v43;
    uint64_t v46 = (char *)v43 + 1;
    if ((uint64_t)v43 + 1 >= v36)
    {
      uint64_t v63 = (uint64_t)v43 + 1;
      goto LABEL_50;
    }
    uint64_t v47 = *v233;
    uint64_t v48 = *(void *)(v215 + 72);
    uint64_t v49 = v203;
    sub_251AE1200(*v233 + v48 * (void)v46, v203, type metadata accessor for ScrubberElement);
    v212 = (uint64_t *)v45;
    uint64_t v205 = v47;
    uint64_t v228 = v48;
    sub_251AE1200(v47 + v48 * v45, v204, type metadata accessor for ScrubberElement);
    uint64_t v50 = sub_251F34D20();
    v226 = &v196;
    uint64_t v51 = *(void *)(v50 - 8);
    MEMORY[0x270FA5388](v50);
    v231 = v52;
    uint64_t v53 = (char *)&v196 - (((unint64_t)v52 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v54 = v49;
    uint64_t v55 = v201;
    sub_251AE1200(v54, v201, type metadata accessor for ScrubberElement);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v221 = v51;
    uint64_t v57 = (void (**)(char *, uint64_t, uint64_t))(v51 + 16);
    v230 = (uint64_t *)(v51 + 16);
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v58 = v55;
      uint64_t v59 = v224;
      sub_251ADBF40(v58, v224, (uint64_t (*)(void))type metadata accessor for ReachabilityEvent);
      uint64_t v60 = v59 + *(int *)(v225 + 24);
      uint64_t v61 = v53;
      v229 = *v57;
      v229(v53, v60, v50);
      uint64_t v62 = type metadata accessor for ReachabilityEvent;
    }
    else
    {
      uint64_t v64 = v55;
      uint64_t v59 = v222;
      sub_251ADBF40(v64, v222, (uint64_t (*)(void))type metadata accessor for CameraClip);
      uint64_t v65 = v59 + *(int *)(v223 + 24);
      uint64_t v61 = v53;
      v229 = *v57;
      v229(v53, v65, v50);
      uint64_t v62 = type metadata accessor for CameraClip;
    }
    uint64_t v66 = sub_251ADBFA8(v59, (uint64_t (*)(void))v62);
    uint64_t v207 = (uint64_t)&v196;
    MEMORY[0x270FA5388](v66);
    uint64_t v68 = (char *)&v196 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v69 = v202;
    sub_251AE1200(v204, v202, type metadata accessor for ScrubberElement);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v70 = v69;
      uint64_t v71 = v224;
      sub_251ADBF40(v70, v224, (uint64_t (*)(void))type metadata accessor for ReachabilityEvent);
      v229(v68, v71 + *(int *)(v225 + 24), v50);
      uint64_t v72 = type metadata accessor for ReachabilityEvent;
    }
    else
    {
      uint64_t v73 = v69;
      uint64_t v71 = v222;
      sub_251ADBF40(v73, v222, (uint64_t (*)(void))type metadata accessor for CameraClip);
      v229(v68, v71 + *(int *)(v223 + 24), v50);
      uint64_t v72 = type metadata accessor for CameraClip;
    }
    sub_251ADBFA8(v71, (uint64_t (*)(void))v72);
    LODWORD(v220) = sub_251F34C90();
    uint64_t v75 = v221 + 8;
    uint64_t v74 = *(void (**)(char *, uint64_t))(v221 + 8);
    v74(v68, v50);
    uint64_t v221 = v75;
    uint64_t v219 = (uint64_t)v74;
    v74(v61, v50);
    sub_251ADBFA8(v204, type metadata accessor for ScrubberElement);
    sub_251ADBFA8(v203, type metadata accessor for ScrubberElement);
    uint64_t v45 = (uint64_t)v212;
    uint64_t v63 = (uint64_t)v212 + 2;
    if ((uint64_t)v212 + 2 >= v36)
    {
LABEL_34:
      if ((v220 & 1) == 0) {
        goto LABEL_50;
      }
LABEL_37:
      if (v63 < v45) {
        goto LABEL_158;
      }
      if (v45 < v63)
      {
        uint64_t v209 = v36;
        v199 = v42;
        uint64_t v200 = v2;
        uint64_t v99 = 0;
        uint64_t v100 = v228 * (v63 - 1);
        uint64_t v101 = v45;
        uint64_t v102 = v63 * v228;
        uint64_t v103 = v101;
        uint64_t v104 = v101 * v228;
        do
        {
          if (v103 != v63 + v99 - 1)
          {
            uint64_t v105 = v205;
            if (!v205) {
              goto LABEL_163;
            }
            unint64_t v106 = v205 + v104;
            sub_251ADBF40(v205 + v104, v211, type metadata accessor for ScrubberElement);
            if (v104 < v100 || v106 >= v105 + v102)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v104 != v100)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            sub_251ADBF40(v211, v105 + v100, type metadata accessor for ScrubberElement);
          }
          ++v103;
          --v99;
          v100 -= v228;
          v102 -= v228;
          v104 += v228;
        }
        while (v103 < v63 + v99);
        uint64_t v2 = v200;
        char v42 = v199;
        uint64_t v45 = (uint64_t)v212;
        uint64_t v36 = v209;
      }
      goto LABEL_50;
    }
    v226 = (uint64_t *)v50;
    v199 = v42;
    uint64_t v200 = v2;
    uint64_t v207 = v228 * (void)v46;
    uint64_t v76 = v205;
    uint64_t v77 = (uint64_t)v212 + 2;
    uint64_t v206 = v228 * v63;
    uint64_t v78 = (uint64_t)v210;
    uint64_t v209 = v36;
    while (1)
    {
      uint64_t v79 = v213;
      sub_251AE1200(v76 + v206, v213, type metadata accessor for ScrubberElement);
      uint64_t v80 = sub_251AE1200(v76 + v207, v216, type metadata accessor for ScrubberElement);
      MEMORY[0x270FA5388](v80);
      int v82 = (char *)&v196 - ((v81 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v83 = v79;
      uint64_t v84 = (uint64_t)v208;
      sub_251AE1200(v83, (uint64_t)v208, type metadata accessor for ScrubberElement);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v85 = v84;
        uint64_t v86 = v224;
        sub_251ADBF40(v85, v224, (uint64_t (*)(void))type metadata accessor for ReachabilityEvent);
        v229(v82, v86 + *(int *)(v225 + 24), (uint64_t)v226);
        id v87 = type metadata accessor for ReachabilityEvent;
      }
      else
      {
        uint64_t v88 = v84;
        uint64_t v86 = v222;
        sub_251ADBF40(v88, v222, (uint64_t (*)(void))type metadata accessor for CameraClip);
        v229(v82, v86 + *(int *)(v223 + 24), (uint64_t)v226);
        id v87 = type metadata accessor for CameraClip;
      }
      uint64_t v89 = sub_251ADBFA8(v86, (uint64_t (*)(void))v87);
      MEMORY[0x270FA5388](v89);
      uint64_t v91 = (char *)&v196 - ((v90 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_251AE1200(v216, v78, type metadata accessor for ScrubberElement);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v92 = v78;
        uint64_t v93 = v224;
        sub_251ADBF40(v92, v224, (uint64_t (*)(void))type metadata accessor for ReachabilityEvent);
        uint64_t v94 = v226;
        v229(v91, v93 + *(int *)(v225 + 24), (uint64_t)v226);
        uint64_t v95 = type metadata accessor for ReachabilityEvent;
      }
      else
      {
        uint64_t v96 = v78;
        uint64_t v93 = v222;
        sub_251ADBF40(v96, v222, (uint64_t (*)(void))type metadata accessor for CameraClip);
        uint64_t v94 = v226;
        v229(v91, v93 + *(int *)(v223 + 24), (uint64_t)v226);
        uint64_t v95 = type metadata accessor for CameraClip;
      }
      sub_251ADBFA8(v93, (uint64_t (*)(void))v95);
      int v97 = sub_251F34C90();
      uint64_t v98 = (void (*)(char *, uint64_t *))v219;
      ((void (*)(char *, uint64_t *))v219)(v91, v94);
      v98(v82, v94);
      sub_251ADBFA8(v216, type metadata accessor for ScrubberElement);
      sub_251ADBFA8(v213, type metadata accessor for ScrubberElement);
      if ((v220 ^ v97)) {
        break;
      }
      v76 += v228;
      ++v77;
      uint64_t v36 = v209;
      uint64_t v78 = (uint64_t)v210;
      if (v209 == v77)
      {
        uint64_t v63 = v209;
        uint64_t v2 = v200;
        char v42 = v199;
        uint64_t v45 = (uint64_t)v212;
        goto LABEL_34;
      }
    }
    uint64_t v2 = v200;
    char v42 = v199;
    uint64_t v63 = v77;
    uint64_t v45 = (uint64_t)v212;
    uint64_t v36 = v209;
    if (v220) {
      goto LABEL_37;
    }
LABEL_50:
    if (v63 >= v36) {
      goto LABEL_74;
    }
    if (__OFSUB__(v63, v45)) {
      goto LABEL_156;
    }
    if (v63 - v45 >= v198) {
      goto LABEL_74;
    }
    if (__OFADD__(v45, v198)) {
      goto LABEL_159;
    }
    uint64_t v107 = v45 + v198 >= v36 ? v36 : v45 + v198;
    if (v107 < v45) {
      break;
    }
    if (v63 != v107)
    {
      v212 = (uint64_t *)v45;
      v199 = v42;
      uint64_t v200 = v2;
      uint64_t v108 = *(void *)(v215 + 72);
      uint64_t v109 = v108 * (v63 - 1);
      uint64_t v219 = v108;
      uint64_t v110 = v63 * v108;
      uint64_t v209 = v107;
      do
      {
        uint64_t v112 = 0;
        uint64_t v113 = v212;
        v226 = (uint64_t *)v63;
        uint64_t v220 = v110;
        uint64_t v221 = v109;
        while (1)
        {
          uint64_t v114 = v232;
          uint64_t v115 = *v233;
          v229 = (void (*)(char *, uint64_t, uint64_t))(v110 + v112);
          sub_251AE1200(v110 + v112 + v115, v232, type metadata accessor for ScrubberElement);
          uint64_t v228 = v109 + v112;
          sub_251AE1200(v109 + v112 + v115, v235, type metadata accessor for ScrubberElement);
          uint64_t v116 = sub_251F34D20();
          v231 = &v196;
          uint64_t v117 = *(void *)(v116 - 8);
          uint64_t v118 = *(void *)(v117 + 64);
          MEMORY[0x270FA5388](v116);
          unint64_t v119 = (char *)&v196 - ((v118 + 15) & 0xFFFFFFFFFFFFFFF0);
          uint64_t v120 = v217;
          sub_251AE1200(v114, v217, type metadata accessor for ScrubberElement);
          uint64_t v121 = (void (**)(char *, uint64_t, uint64_t))(v117 + 16);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v122 = v120;
            uint64_t v123 = v224;
            sub_251ADBF40(v122, v224, (uint64_t (*)(void))type metadata accessor for ReachabilityEvent);
            id v124 = *v121;
            (*v121)((char *)&v196 - ((v118 + 15) & 0xFFFFFFFFFFFFFFF0), v123 + *(int *)(v225 + 24), v116);
            uint64_t v125 = type metadata accessor for ReachabilityEvent;
          }
          else
          {
            uint64_t v126 = v120;
            uint64_t v123 = v222;
            sub_251ADBF40(v126, v222, (uint64_t (*)(void))type metadata accessor for CameraClip);
            id v124 = *v121;
            (*v121)((char *)&v196 - ((v118 + 15) & 0xFFFFFFFFFFFFFFF0), v123 + *(int *)(v223 + 24), v116);
            uint64_t v125 = type metadata accessor for CameraClip;
          }
          uint64_t v127 = sub_251ADBFA8(v123, (uint64_t (*)(void))v125);
          v230 = &v196;
          MEMORY[0x270FA5388](v127);
          uint64_t v128 = (char *)&v196 - ((v118 + 15) & 0xFFFFFFFFFFFFFFF0);
          uint64_t v129 = v218;
          sub_251AE1200(v235, v218, type metadata accessor for ScrubberElement);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v130 = v129;
            uint64_t v131 = v224;
            sub_251ADBF40(v130, v224, (uint64_t (*)(void))type metadata accessor for ReachabilityEvent);
            v124(v128, v131 + *(int *)(v225 + 24), v116);
            uint64_t v132 = type metadata accessor for ReachabilityEvent;
          }
          else
          {
            uint64_t v133 = v129;
            uint64_t v131 = v222;
            sub_251ADBF40(v133, v222, (uint64_t (*)(void))type metadata accessor for CameraClip);
            v124(v128, v131 + *(int *)(v223 + 24), v116);
            uint64_t v132 = type metadata accessor for CameraClip;
          }
          sub_251ADBFA8(v131, (uint64_t (*)(void))v132);
          char v134 = sub_251F34C90();
          unint64_t v135 = *(void (**)(char *, uint64_t))(v117 + 8);
          v135(v128, v116);
          v135(v119, v116);
          sub_251ADBFA8(v235, type metadata accessor for ScrubberElement);
          sub_251ADBFA8(v232, type metadata accessor for ScrubberElement);
          if ((v134 & 1) == 0) {
            break;
          }
          uint64_t v136 = *v233;
          uint64_t v109 = v221;
          if (!*v233) {
            goto LABEL_161;
          }
          uint64_t v110 = v220;
          uint64_t v137 = v136 + v221 + v112;
          sub_251ADBF40(v136 + v220 + v112, v227, type metadata accessor for ScrubberElement);
          swift_arrayInitWithTakeFrontToBack();
          sub_251ADBF40(v227, v137, type metadata accessor for ScrubberElement);
          v112 -= v219;
          uint64_t v113 = (uint64_t *)((char *)v113 + 1);
          id v111 = v226;
          if (v226 == v113) {
            goto LABEL_61;
          }
        }
        id v111 = v226;
        uint64_t v110 = v220;
        uint64_t v109 = v221;
LABEL_61:
        uint64_t v63 = (uint64_t)v111 + 1;
        v109 += v219;
        v110 += v219;
      }
      while (v63 != v209);
      uint64_t v63 = v209;
      uint64_t v2 = v200;
      char v42 = v199;
      uint64_t v45 = (uint64_t)v212;
    }
LABEL_74:
    if (v63 < v45) {
      goto LABEL_151;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v226 = (uint64_t *)v63;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      char v42 = sub_251ECD5C4(0, *((void *)v42 + 2) + 1, 1, v42);
    }
    unint64_t v140 = *((void *)v42 + 2);
    unint64_t v139 = *((void *)v42 + 3);
    unint64_t v44 = v140 + 1;
    if (v140 >= v139 >> 1) {
      char v42 = sub_251ECD5C4((char *)(v139 > 1), v140 + 1, 1, v42);
    }
    *((void *)v42 + 2) = v44;
    uint64_t v141 = v42 + 32;
    uint64_t v142 = &v42[16 * v140 + 32];
    uint64_t v143 = v226;
    *(void *)uint64_t v142 = v45;
    *((void *)v142 + 1) = v143;
    if (v140)
    {
      while (1)
      {
        unint64_t v144 = v44 - 1;
        if (v44 >= 4)
        {
          uint64_t v149 = &v141[16 * v44];
          uint64_t v150 = *((void *)v149 - 8);
          uint64_t v151 = *((void *)v149 - 7);
          BOOL v155 = __OFSUB__(v151, v150);
          uint64_t v152 = v151 - v150;
          if (v155) {
            goto LABEL_140;
          }
          uint64_t v154 = *((void *)v149 - 6);
          uint64_t v153 = *((void *)v149 - 5);
          BOOL v155 = __OFSUB__(v153, v154);
          uint64_t v147 = v153 - v154;
          char v148 = v155;
          if (v155) {
            goto LABEL_141;
          }
          unint64_t v156 = v44 - 2;
          v157 = &v141[16 * v44 - 32];
          uint64_t v159 = *(void *)v157;
          uint64_t v158 = *((void *)v157 + 1);
          BOOL v155 = __OFSUB__(v158, v159);
          uint64_t v160 = v158 - v159;
          if (v155) {
            goto LABEL_143;
          }
          BOOL v155 = __OFADD__(v147, v160);
          uint64_t v161 = v147 + v160;
          if (v155) {
            goto LABEL_146;
          }
          if (v161 >= v152)
          {
            v179 = &v141[16 * v144];
            uint64_t v181 = *(void *)v179;
            uint64_t v180 = *((void *)v179 + 1);
            BOOL v155 = __OFSUB__(v180, v181);
            uint64_t v182 = v180 - v181;
            if (v155) {
              goto LABEL_150;
            }
            BOOL v172 = v147 < v182;
            goto LABEL_111;
          }
        }
        else
        {
          if (v44 != 3)
          {
            uint64_t v173 = *((void *)v42 + 4);
            uint64_t v174 = *((void *)v42 + 5);
            BOOL v155 = __OFSUB__(v174, v173);
            uint64_t v166 = v174 - v173;
            char v167 = v155;
            goto LABEL_105;
          }
          uint64_t v146 = *((void *)v42 + 4);
          uint64_t v145 = *((void *)v42 + 5);
          BOOL v155 = __OFSUB__(v145, v146);
          uint64_t v147 = v145 - v146;
          char v148 = v155;
        }
        if (v148) {
          goto LABEL_142;
        }
        unint64_t v156 = v44 - 2;
        v162 = &v141[16 * v44 - 32];
        uint64_t v164 = *(void *)v162;
        uint64_t v163 = *((void *)v162 + 1);
        BOOL v165 = __OFSUB__(v163, v164);
        uint64_t v166 = v163 - v164;
        char v167 = v165;
        if (v165) {
          goto LABEL_145;
        }
        v168 = &v141[16 * v144];
        uint64_t v170 = *(void *)v168;
        uint64_t v169 = *((void *)v168 + 1);
        BOOL v155 = __OFSUB__(v169, v170);
        uint64_t v171 = v169 - v170;
        if (v155) {
          goto LABEL_148;
        }
        if (__OFADD__(v166, v171)) {
          goto LABEL_149;
        }
        if (v166 + v171 >= v147)
        {
          BOOL v172 = v147 < v171;
LABEL_111:
          if (v172) {
            unint64_t v144 = v156;
          }
          goto LABEL_113;
        }
LABEL_105:
        if (v167) {
          goto LABEL_144;
        }
        v175 = &v141[16 * v144];
        uint64_t v177 = *(void *)v175;
        uint64_t v176 = *((void *)v175 + 1);
        BOOL v155 = __OFSUB__(v176, v177);
        uint64_t v178 = v176 - v177;
        if (v155) {
          goto LABEL_147;
        }
        if (v178 < v166) {
          goto LABEL_14;
        }
LABEL_113:
        unint64_t v183 = v144 - 1;
        if (v144 - 1 >= v44)
        {
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
          goto LABEL_160;
        }
        if (!*v233) {
          goto LABEL_162;
        }
        v184 = v42;
        v185 = &v141[16 * v183];
        uint64_t v186 = *(void *)v185;
        v187 = &v141[16 * v144];
        uint64_t v188 = *((void *)v187 + 1);
        sub_251ADDD28(*v233 + *(void *)(v215 + 72) * *(void *)v185, *v233 + *(void *)(v215 + 72) * *(void *)v187, *v233 + *(void *)(v215 + 72) * v188, v214);
        if (v2) {
          goto LABEL_134;
        }
        if (v188 < v186) {
          goto LABEL_137;
        }
        if (v144 > *((void *)v184 + 2)) {
          goto LABEL_138;
        }
        *(void *)v185 = v186;
        *(void *)&v141[16 * v183 + 8] = v188;
        unint64_t v189 = *((void *)v184 + 2);
        if (v144 >= v189) {
          goto LABEL_139;
        }
        char v42 = v184;
        unint64_t v44 = v189 - 1;
        memmove(&v141[16 * v144], v187 + 16, 16 * (v189 - 1 - v144));
        *((void *)v184 + 2) = v189 - 1;
        if (v189 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v44 = 1;
LABEL_14:
    uint64_t v36 = v233[1];
    uint64_t v43 = v226;
    if ((uint64_t)v226 >= v36) {
      goto LABEL_123;
    }
  }
LABEL_160:
  __break(1u);
LABEL_161:
  __break(1u);
LABEL_162:
  __break(1u);
LABEL_163:
  __break(1u);
LABEL_164:
  __break(1u);
LABEL_165:
  uint64_t result = sub_251F36670();
  __break(1u);
  return result;
}

uint64_t sub_251ADD6B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v64 = a4;
  uint64_t v50 = a1;
  uint64_t v57 = type metadata accessor for ReachabilityEvent();
  MEMORY[0x270FA5388](v57);
  uint64_t v56 = (uint64_t)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = type metadata accessor for CameraClip();
  MEMORY[0x270FA5388](v55);
  uint64_t v54 = (uint64_t)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = type metadata accessor for ScrubberElement(0);
  uint64_t v8 = MEMORY[0x270FA5388](v68);
  uint64_t v61 = (uint64_t)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v48 - v11;
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v48 - v14;
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v69 = (uint64_t)&v48 - v17;
  uint64_t result = MEMORY[0x270FA5388](v16);
  uint64_t v21 = (char *)&v48 - v20;
  uint64_t v60 = a3;
  uint64_t v49 = a2;
  if (a3 != a2)
  {
    uint64_t v22 = *(void *)(v19 + 72);
    uint64_t v23 = v22 * (v60 - 1);
    uint64_t v58 = v22;
    uint64_t v67 = v22 * v60;
    uint64_t v52 = v15;
    uint64_t v53 = v12;
    uint64_t v51 = (char *)&v48 - v20;
LABEL_5:
    uint64_t v24 = 0;
    uint64_t v25 = v50;
    uint64_t v59 = v23;
    while (1)
    {
      uint64_t v26 = *v64;
      uint64_t v63 = v67 + v24;
      sub_251AE1200(v67 + v24 + v26, (uint64_t)v21, type metadata accessor for ScrubberElement);
      uint64_t v62 = v23 + v24;
      sub_251AE1200(v23 + v24 + v26, v69, type metadata accessor for ScrubberElement);
      uint64_t v27 = sub_251F34D20();
      uint64_t v66 = &v48;
      uint64_t v28 = *(void *)(v27 - 8);
      uint64_t v29 = *(void *)(v28 + 64);
      MEMORY[0x270FA5388](v27);
      uint64_t v30 = (char *)&v48 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_251AE1200((uint64_t)v21, (uint64_t)v15, type metadata accessor for ScrubberElement);
      uint64_t v31 = (void (**)(char *, uint64_t, uint64_t))(v28 + 16);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v32 = (uint64_t)v15;
        uint64_t v33 = v56;
        sub_251ADBF40(v32, v56, (uint64_t (*)(void))type metadata accessor for ReachabilityEvent);
        uint64_t v34 = *v31;
        (*v31)((char *)&v48 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0), v33 + *(int *)(v57 + 24), v27);
        uint64_t v35 = type metadata accessor for ReachabilityEvent;
      }
      else
      {
        uint64_t v36 = (uint64_t)v15;
        uint64_t v33 = v54;
        sub_251ADBF40(v36, v54, (uint64_t (*)(void))type metadata accessor for CameraClip);
        uint64_t v34 = *v31;
        (*v31)((char *)&v48 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0), v33 + *(int *)(v55 + 24), v27);
        uint64_t v35 = type metadata accessor for CameraClip;
      }
      uint64_t v37 = sub_251ADBFA8(v33, (uint64_t (*)(void))v35);
      uint64_t v65 = &v48;
      MEMORY[0x270FA5388](v37);
      uint64_t v38 = (char *)&v48 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v39 = (uint64_t)v53;
      sub_251AE1200(v69, (uint64_t)v53, type metadata accessor for ScrubberElement);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v40 = v39;
        uint64_t v41 = v56;
        sub_251ADBF40(v40, v56, (uint64_t (*)(void))type metadata accessor for ReachabilityEvent);
        v34(v38, v41 + *(int *)(v57 + 24), v27);
        char v42 = type metadata accessor for ReachabilityEvent;
      }
      else
      {
        uint64_t v43 = v39;
        uint64_t v41 = v54;
        sub_251ADBF40(v43, v54, (uint64_t (*)(void))type metadata accessor for CameraClip);
        v34(v38, v41 + *(int *)(v55 + 24), v27);
        char v42 = type metadata accessor for CameraClip;
      }
      sub_251ADBFA8(v41, (uint64_t (*)(void))v42);
      char v44 = sub_251F34C90();
      uint64_t v45 = *(void (**)(char *, uint64_t))(v28 + 8);
      v45(v38, v27);
      v45(v30, v27);
      sub_251ADBFA8(v69, type metadata accessor for ScrubberElement);
      uint64_t v21 = v51;
      uint64_t result = sub_251ADBFA8((uint64_t)v51, type metadata accessor for ScrubberElement);
      uint64_t v15 = v52;
      uint64_t v23 = v59;
      if ((v44 & 1) == 0)
      {
LABEL_4:
        v23 += v58;
        v67 += v58;
        if (++v60 == v49) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v46 = *v64;
      if (!*v64) {
        break;
      }
      uint64_t v47 = v46 + v59 + v24;
      sub_251ADBF40(v46 + v67 + v24, v61, type metadata accessor for ScrubberElement);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = sub_251ADBF40(v61, v47, type metadata accessor for ScrubberElement);
      v24 -= v58;
      if (v60 == ++v25) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_251ADDD28(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v102 = type metadata accessor for ReachabilityEvent();
  MEMORY[0x270FA5388](v102);
  uint64_t v101 = (uint64_t)&v90 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = type metadata accessor for CameraClip();
  MEMORY[0x270FA5388](v100);
  uint64_t v99 = (uint64_t)&v90 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = type metadata accessor for ScrubberElement(0);
  uint64_t v10 = MEMORY[0x270FA5388](v107);
  uint64_t v12 = (char *)&v90 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v90 - v14;
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  unint64_t v105 = (unint64_t)&v90 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v98 = (uint64_t)&v90 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v96 = (uint64_t)&v90 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  unint64_t v95 = (unint64_t)&v90 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v104 = (uint64_t *)((char *)&v90 - v25);
  MEMORY[0x270FA5388](v24);
  int v97 = (uint64_t *)((char *)&v90 - v26);
  uint64_t v28 = *(void *)(v27 + 72);
  if (!v28)
  {
    __break(1u);
LABEL_74:
    __break(1u);
LABEL_75:
    __break(1u);
    goto LABEL_76;
  }
  if (a2 - a1 == 0x8000000000000000 && v28 == -1) {
    goto LABEL_74;
  }
  int64_t v29 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v28 == -1) {
    goto LABEL_75;
  }
  uint64_t v30 = (uint64_t)(a2 - a1) / v28;
  uint64_t v110 = (char *)a1;
  unint64_t v109 = a4;
  uint64_t v31 = v29 / v28;
  if (v30 >= v29 / v28)
  {
    if ((v31 & 0x8000000000000000) == 0)
    {
      uint64_t v34 = v31 * v28;
      if (a4 < a2 || a2 + v34 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v63 = a4 + v34;
      unint64_t v108 = a4 + v34;
      uint64_t v110 = (char *)a2;
      if (v34 >= 1 && a1 < a2)
      {
        uint64_t v65 = -v28;
        unint64_t v92 = a1;
        unint64_t v93 = a4;
        uint64_t v91 = v12;
        uint64_t v94 = v15;
        uint64_t v96 = -v28;
        do
        {
          unint64_t v103 = a3;
          uint64_t v66 = v98;
          sub_251AE1200(v63 + v65, v98, type metadata accessor for ScrubberElement);
          unint64_t v106 = a2;
          unint64_t v95 = a2 + v65;
          sub_251AE1200(a2 + v65, v105, type metadata accessor for ScrubberElement);
          uint64_t v67 = sub_251F34D20();
          uint64_t v68 = *(void *)(v67 - 8);
          uint64_t v69 = *(void *)(v68 + 64);
          MEMORY[0x270FA5388](v67);
          uint64_t v70 = (char *)&v90 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
          sub_251AE1200(v66, (uint64_t)v15, type metadata accessor for ScrubberElement);
          uint64_t v71 = (void (**)(char *, uint64_t, uint64_t))(v68 + 16);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v72 = v101;
            sub_251ADBF40((uint64_t)v15, v101, (uint64_t (*)(void))type metadata accessor for ReachabilityEvent);
            uint64_t v73 = *v71;
            (*v71)((char *)&v90 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0), v72 + *(int *)(v102 + 24), v67);
            uint64_t v74 = type metadata accessor for ReachabilityEvent;
          }
          else
          {
            uint64_t v72 = v99;
            sub_251ADBF40((uint64_t)v15, v99, (uint64_t (*)(void))type metadata accessor for CameraClip);
            uint64_t v73 = *v71;
            (*v71)((char *)&v90 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0), v72 + *(int *)(v100 + 24), v67);
            uint64_t v74 = type metadata accessor for CameraClip;
          }
          uint64_t v75 = sub_251ADBFA8(v72, (uint64_t (*)(void))v74);
          int v97 = &v90;
          MEMORY[0x270FA5388](v75);
          uint64_t v76 = (char *)&v90 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
          sub_251AE1200(v105, (uint64_t)v12, type metadata accessor for ScrubberElement);
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          uint64_t v104 = &v90;
          if (EnumCaseMultiPayload == 1)
          {
            uint64_t v78 = v101;
            sub_251ADBF40((uint64_t)v12, v101, (uint64_t (*)(void))type metadata accessor for ReachabilityEvent);
            v73(v76, v78 + *(int *)(v102 + 24), v67);
            uint64_t v79 = type metadata accessor for ReachabilityEvent;
          }
          else
          {
            uint64_t v78 = v99;
            sub_251ADBF40((uint64_t)v12, v99, (uint64_t (*)(void))type metadata accessor for CameraClip);
            v73(v76, v78 + *(int *)(v100 + 24), v67);
            uint64_t v79 = type metadata accessor for CameraClip;
          }
          sub_251ADBFA8(v78, (uint64_t (*)(void))v79);
          unint64_t v80 = v103;
          uint64_t v65 = v96;
          uint64_t v81 = (char *)(v103 + v96);
          char v82 = sub_251F34C90();
          uint64_t v83 = *(void (**)(char *, uint64_t))(v68 + 8);
          v83(v76, v67);
          v83(v70, v67);
          sub_251ADBFA8(v105, type metadata accessor for ScrubberElement);
          sub_251ADBFA8(v98, type metadata accessor for ScrubberElement);
          if (v82)
          {
            uint64_t v15 = v94;
            if (v80 < v106 || (unint64_t)v81 >= v106)
            {
              unint64_t v87 = v95;
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v86 = v92;
              unint64_t v85 = v93;
              uint64_t v12 = v91;
              uint64_t v65 = v96;
            }
            else
            {
              BOOL v84 = v80 == v106;
              unint64_t v86 = v92;
              unint64_t v85 = v93;
              uint64_t v12 = v91;
              unint64_t v87 = v95;
              uint64_t v65 = v96;
              if (!v84) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v110 += v65;
          }
          else
          {
            unint64_t v88 = v108;
            v108 += v65;
            unint64_t v87 = v106;
            uint64_t v15 = v94;
            if (v80 < v88 || (unint64_t)v81 >= v88)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v80 != v88)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v86 = v92;
            unint64_t v85 = v93;
            uint64_t v12 = v91;
          }
          unint64_t v63 = v108;
          if (v108 <= v85) {
            break;
          }
          a2 = v87;
          a3 = (unint64_t)v81;
        }
        while (v87 > v86);
      }
      goto LABEL_72;
    }
  }
  else if ((v30 & 0x8000000000000000) == 0)
  {
    uint64_t v32 = v30 * v28;
    uint64_t v33 = v96;
    if (a4 < a1 || a1 + v32 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v105 = a4 + v32;
    unint64_t v108 = a4 + v32;
    if (v32 >= 1 && a2 < a3)
    {
      unint64_t v103 = a3;
      uint64_t v94 = (char *)v28;
      do
      {
        unint64_t v106 = a2;
        uint64_t v36 = (uint64_t)v97;
        sub_251AE1200(a2, (uint64_t)v97, type metadata accessor for ScrubberElement);
        sub_251AE1200(a4, (uint64_t)v104, type metadata accessor for ScrubberElement);
        uint64_t v37 = sub_251F34D20();
        uint64_t v38 = *(void *)(v37 - 8);
        uint64_t v39 = *(void *)(v38 + 64);
        MEMORY[0x270FA5388](v37);
        uint64_t v40 = (char *)&v90 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
        uint64_t v41 = v36;
        uint64_t v42 = v95;
        sub_251AE1200(v41, v95, type metadata accessor for ScrubberElement);
        uint64_t v43 = (void (**)(char *, uint64_t, uint64_t))(v38 + 16);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v44 = v42;
          uint64_t v45 = v101;
          sub_251ADBF40(v44, v101, (uint64_t (*)(void))type metadata accessor for ReachabilityEvent);
          uint64_t v46 = *v43;
          (*v43)((char *)&v90 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0), v45 + *(int *)(v102 + 24), v37);
          uint64_t v47 = type metadata accessor for ReachabilityEvent;
        }
        else
        {
          uint64_t v48 = v42;
          uint64_t v45 = v99;
          sub_251ADBF40(v48, v99, (uint64_t (*)(void))type metadata accessor for CameraClip);
          uint64_t v46 = *v43;
          (*v43)((char *)&v90 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0), v45 + *(int *)(v100 + 24), v37);
          uint64_t v47 = type metadata accessor for CameraClip;
        }
        uint64_t v49 = sub_251ADBFA8(v45, (uint64_t (*)(void))v47);
        MEMORY[0x270FA5388](v49);
        uint64_t v50 = (char *)&v90 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
        sub_251AE1200((uint64_t)v104, v33, type metadata accessor for ScrubberElement);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v51 = v33;
          uint64_t v52 = v101;
          sub_251ADBF40(v51, v101, (uint64_t (*)(void))type metadata accessor for ReachabilityEvent);
          v46(v50, v52 + *(int *)(v102 + 24), v37);
          uint64_t v53 = type metadata accessor for ReachabilityEvent;
        }
        else
        {
          uint64_t v54 = v33;
          uint64_t v52 = v99;
          sub_251ADBF40(v54, v99, (uint64_t (*)(void))type metadata accessor for CameraClip);
          v46(v50, v52 + *(int *)(v100 + 24), v37);
          uint64_t v53 = type metadata accessor for CameraClip;
        }
        sub_251ADBFA8(v52, (uint64_t (*)(void))v53);
        char v55 = sub_251F34C90();
        uint64_t v56 = *(void (**)(char *, uint64_t))(v38 + 8);
        v56(v50, v37);
        v56(v40, v37);
        sub_251ADBFA8((uint64_t)v104, type metadata accessor for ScrubberElement);
        sub_251ADBFA8((uint64_t)v97, type metadata accessor for ScrubberElement);
        unint64_t v57 = (unint64_t)v110;
        if (v55)
        {
          uint64_t v58 = v94;
          unint64_t v59 = (unint64_t)&v94[v106];
          uint64_t v33 = v96;
          if ((unint64_t)v110 < v106 || (unint64_t)v110 >= v59)
          {
            swift_arrayInitWithTakeFrontToBack();
            unint64_t v60 = v103;
          }
          else
          {
            unint64_t v60 = v103;
            if (v110 == (char *)v106) {
              unint64_t v57 = v106;
            }
            else {
              swift_arrayInitWithTakeBackToFront();
            }
          }
        }
        else
        {
          uint64_t v58 = v94;
          unint64_t v61 = (unint64_t)&v94[v109];
          unint64_t v62 = v106;
          uint64_t v33 = v96;
          if ((unint64_t)v110 < v109 || (unint64_t)v110 >= v61)
          {
            swift_arrayInitWithTakeFrontToBack();
            unint64_t v60 = v103;
          }
          else
          {
            unint64_t v60 = v103;
            if (v110 != (char *)v109) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          unint64_t v109 = v61;
          unint64_t v59 = v62;
        }
        uint64_t v110 = &v58[v57];
        a4 = v109;
        if (v109 >= v105) {
          break;
        }
        a2 = v59;
      }
      while (v59 < v60);
    }
LABEL_72:
    sub_251ECD7E4((unint64_t *)&v110, &v109, (uint64_t *)&v108);
    return 1;
  }
LABEL_76:
  uint64_t result = sub_251F36710();
  __break(1u);
  return result;
}

uint64_t sub_251ADE978(uint64_t a1, uint64_t a2)
{
  if ((sub_251F34CD0() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata.SignificantEvent(0);
  if (*(double *)(a1 + *(int *)(v4 + 20)) != *(double *)(a2 + *(int *)(v4 + 20))) {
    return 0;
  }
  uint64_t v5 = v4;
  uint64_t v6 = *(int *)(v4 + 24);
  uint64_t v7 = *(void *)(a1 + v6);
  uint64_t v8 = *(void *)(a1 + v6 + 8);
  uint64_t v9 = (void *)(a2 + v6);
  BOOL v10 = v7 == *v9 && v8 == v9[1];
  if (v10 || (v11 = sub_251F36B10(), uint64_t result = 0, (v11 & 1) != 0))
  {
    uint64_t v13 = *(int *)(v5 + 28);
    uint64_t v14 = *(void *)(a1 + v13);
    uint64_t v15 = *(void *)(a1 + v13 + 8);
    uint64_t v16 = (void *)(a2 + v13);
    BOOL v17 = v14 == *v16 && v15 == v16[1];
    if (v17 || (v18 = sub_251F36B10(), uint64_t result = 0, (v18 & 1) != 0))
    {
      uint64_t v19 = *(int *)(v5 + 32);
      uint64_t v20 = *(void *)(a1 + v19);
      uint64_t v21 = *(void *)(a1 + v19 + 8);
      uint64_t v22 = (void *)(a2 + v19);
      if (v20 == *v22 && v21 == v22[1])
      {
        return 1;
      }
      else
      {
        return sub_251F36B10();
      }
    }
  }
  return result;
}

uint64_t sub_251ADEA84(double *a1, double *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata(0);
  if ((sub_251F34CD0() & 1) == 0
    || (sub_251AB5988(*(void *)((char *)a1 + *(int *)(v4 + 24)), *(void *)((char *)a2 + *(int *)(v4 + 24))) & 1) == 0)
  {
    return 0;
  }
  uint64_t v5 = *(int *)(v4 + 28);
  uint64_t v6 = *(void *)((char *)a1 + v5);
  uint64_t v7 = *(void *)((char *)a1 + v5 + 8);
  uint64_t v8 = (void *)((char *)a2 + v5);
  if (v6 == *v8 && v7 == v8[1]) {
    return 1;
  }
  return sub_251F36B10();
}

uint64_t sub_251ADEB44(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for CameraClip();
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v53 = (uint64_t)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v43 - v8;
  uint64_t v10 = type metadata accessor for ScrubberElement(0);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v46 = (uint64_t)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v43 - v14;
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  char v18 = (char *)&v43 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v21 = (char *)&v43 - v20;
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v55 = MEMORY[0x263F8EE78];
  uint64_t v50 = *(void *)(a1 + 16);
  if (v50)
  {
    uint64_t v43 = v2;
    uint64_t v23 = 0;
    unint64_t v24 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
    uint64_t v25 = *(void *)(v19 + 72);
    uint64_t v49 = a1 + v24;
    unint64_t v44 = v24;
    uint64_t v47 = a2 + v24;
    uint64_t v45 = MEMORY[0x263F8EE78];
    uint64_t v48 = a2;
    uint64_t v52 = v18;
    uint64_t v54 = v25;
    while (1)
    {
      uint64_t v51 = v23;
      sub_251AE1200(v49 + v25 * v23, (uint64_t)v21, type metadata accessor for ScrubberElement);
      uint64_t v26 = *(void *)(a2 + 16);
      if (!v26)
      {
LABEL_4:
        sub_251ADBFA8((uint64_t)v21, type metadata accessor for ScrubberElement);
        goto LABEL_5;
      }
      swift_bridgeObjectRetain();
      uint64_t v27 = v47;
      while (1)
      {
        sub_251AE1200((uint64_t)v21, (uint64_t)v18, type metadata accessor for ScrubberElement);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        uint64_t v28 = (uint64_t)v18;
        if (EnumCaseMultiPayload == 1) {
          goto LABEL_9;
        }
        sub_251ADBF40((uint64_t)v18, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for CameraClip);
        sub_251AE1200(v27, (uint64_t)v15, type metadata accessor for ScrubberElement);
        if (swift_getEnumCaseMultiPayload() != 1) {
          break;
        }
        sub_251ADBFA8((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for CameraClip);
        uint64_t v28 = (uint64_t)v15;
LABEL_9:
        sub_251ADBFA8(v28, type metadata accessor for ScrubberElement);
LABEL_10:
        v27 += v25;
        if (!--v26)
        {
          a2 = v48;
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
      }
      uint64_t v30 = (uint64_t)v15;
      uint64_t v31 = v15;
      uint64_t v32 = v10;
      uint64_t v33 = v21;
      uint64_t v34 = v9;
      uint64_t v35 = v53;
      sub_251ADBF40(v30, v53, (uint64_t (*)(void))type metadata accessor for CameraClip);
      char v36 = sub_251F34D70();
      uint64_t v37 = v35;
      uint64_t v9 = v34;
      uint64_t v21 = v33;
      uint64_t v10 = v32;
      uint64_t v15 = v31;
      char v18 = v52;
      sub_251ADBFA8(v37, (uint64_t (*)(void))type metadata accessor for CameraClip);
      uint64_t v25 = v54;
      sub_251ADBFA8((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for CameraClip);
      if ((v36 & 1) == 0) {
        goto LABEL_10;
      }
      swift_bridgeObjectRelease();
      sub_251ADBF40((uint64_t)v21, v46, type metadata accessor for ScrubberElement);
      uint64_t v38 = v45;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_251A3E4A8(0, *(void *)(v38 + 16) + 1, 1);
      }
      uint64_t v39 = v55;
      unint64_t v41 = *(void *)(v55 + 16);
      unint64_t v40 = *(void *)(v55 + 24);
      if (v41 >= v40 >> 1)
      {
        sub_251A3E4A8(v40 > 1, v41 + 1, 1);
        uint64_t v39 = v55;
      }
      *(void *)(v39 + 16) = v41 + 1;
      uint64_t v45 = v39;
      uint64_t v42 = v39 + v44 + v41 * v54;
      uint64_t v25 = v54;
      sub_251ADBF40(v46, v42, type metadata accessor for ScrubberElement);
      a2 = v48;
LABEL_5:
      uint64_t v23 = v51 + 1;
      if (v51 + 1 == v50) {
        return v55;
      }
    }
  }
  return result;
}

unint64_t sub_251ADEFE0()
{
  uint64_t v0 = type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata.SignificantEvent(0);
  uint64_t v200 = *(void *)(v0 - 8);
  uint64_t v1 = MEMORY[0x270FA5388](v0 - 8);
  uint64_t v221 = (uint64_t)&v160 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v1);
  uint64_t v220 = (uint64_t)&v160 - v3;
  uint64_t v4 = type metadata accessor for SignificantEvent();
  uint64_t v219 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v222 = (uint64_t)&v160 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v199 = type metadata accessor for ScrubberElement(0);
  uint64_t v198 = *(void *)(v199 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v199);
  uint64_t v204 = (uint64_t)&v160 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v203 = (uint64_t)&v160 - v8;
  uint64_t v197 = type metadata accessor for CameraClip();
  uint64_t v9 = MEMORY[0x270FA5388](v197);
  uint64_t v196 = (char *)&v160 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v202 = (uint64_t)&v160 - v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB58);
  MEMORY[0x270FA5388](v12 - 8);
  v212 = (char *)&v160 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v215 = type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata(0);
  uint64_t v14 = *(void *)(v215 - 8);
  MEMORY[0x270FA5388](v215);
  uint64_t v217 = (uint64_t *)((char *)&v160 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v237 = MEMORY[0x263F8EE78];
  uint64_t v16 = sub_251F34B70();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void *)(v17 + 64);
  MEMORY[0x270FA5388](v16);
  sub_251F34B20();
  uint64_t v19 = self;
  id v20 = objc_msgSend(v19, sel_defaultManager);
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB60);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_251F38650;
  uint64_t v22 = (void *)*MEMORY[0x263EFF6A0];
  *(void *)(v21 + 32) = *MEMORY[0x263EFF6A0];
  id v23 = v22;
  unint64_t v214 = (char *)&v160 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v24 = (void *)sub_251F35F80();

  swift_bridgeObjectRelease();
  unint64_t v25 = 0x269B9C000;
  if (v24)
  {
    uint64_t v211 = v17;
    sub_251F34540();
    swift_allocObject();
    uint64_t v26 = sub_251F34530();
    uint64_t v27 = sub_251F34500();
    id v201 = v19;
    MEMORY[0x270FA5388](v27);
    (*(void (**)(char *, void))(v29 + 104))((char *)&v160 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x263F060E8]);
    uint64_t v216 = v26;
    sub_251F34510();
    uint64_t v30 = sub_251F34AA0();
    uint64_t v207 = &v160;
    uint64_t v206 = v30;
    uint64_t v205 = *(void *)(v30 - 8);
    MEMORY[0x270FA5388](v30);
    uint64_t v32 = (char *)&v160 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
    id v208 = v24;
    sub_251F35F70();
    uint64_t v33 = sub_251F34A90();
    if (v236)
    {
      uint64_t v227 = 0;
      uint64_t v35 = (void (**)(char *, void, uint64_t, uint64_t))(v211 + 56);
      uint64_t v228 = (unsigned int (**)(char *, uint64_t, uint64_t))(v211 + 48);
      uint64_t v224 = (void (**)(char *, char *, uint64_t))(v211 + 32);
      v226 = (void (**)(char *, uint64_t))(v211 + 8);
      uint64_t v209 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56);
      uint64_t v192 = (void (**)(char *, char *, uint64_t))(v211 + 16);
      unint64_t v183 = (id *)&v233;
      uint64_t v229 = MEMORY[0x263F8EE58] + 8;
      *(void *)&long long v34 = 136315138;
      long long v186 = v34;
      unint64_t v184 = 0x8000000251F691A0;
      unint64_t v182 = 0x8000000251F691C0;
      uint64_t v210 = v16;
      uint64_t v213 = v18;
      uint64_t v223 = v32;
      uint64_t v225 = (void (**)(char *, void, uint64_t, uint64_t))(v211 + 56);
      do
      {
        v231 = &v160;
        MEMORY[0x270FA5388](v33);
        char v36 = (char *)&v160 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
        uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB68);
        v230 = &v160;
        uint64_t v38 = *(void *)(*(void *)(v37 - 8) + 64);
        MEMORY[0x270FA5388](v37 - 8);
        int v39 = swift_dynamicCast();
        unint64_t v40 = *v35;
        if (v39)
        {
          v40((char *)&v160 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0), 0, 1, v16);
          unint64_t v41 = *v228;
          if ((*v228)((char *)&v160 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0), 1, v16) != 1)
          {
            uint64_t v42 = *v224;
            (*v224)((char *)&v160 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), (char *)&v160 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0), v16);
            if (sub_251F34AE0() == 1852797802 && v43 == 0xE400000000000000)
            {
              swift_bridgeObjectRelease();
              goto LABEL_12;
            }
            char v44 = sub_251F36B10();
            swift_bridgeObjectRelease();
            if (v44)
            {
LABEL_12:
              uint64_t v218 = (uint64_t)v42;
              uint64_t v45 = v227;
              uint64_t v46 = sub_251F34B90();
              if (!v45)
              {
                uint64_t v48 = v46;
                unint64_t v49 = v47;
                sub_251AE1514(&qword_269B9DB70, (void (*)(uint64_t))type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata);
                uint64_t v50 = (uint64_t)v212;
                uint64_t v51 = v215;
                sub_251F34520();
                uint64_t v187 = v48;
                unint64_t v188 = v49;
                uint64_t v227 = 0;
                (*v209)(v50, 0, 1, v51);
                uint64_t v52 = sub_251ADBF40(v50, (uint64_t)v217, type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata);
                uint64_t v190 = &v160;
                uint64_t v53 = v213;
                uint64_t v54 = MEMORY[0x270FA5388](v52);
                unint64_t v55 = (v53 + 15) & 0xFFFFFFFFFFFFFFF0;
                unint64_t v195 = (char *)&v160;
                MEMORY[0x270FA5388](v54);
                sub_251F34B10();
                sub_251F34B30();
                v194 = *v226;
                uint64_t v16 = v210;
                uint64_t v56 = ((uint64_t (*)(char *, uint64_t))v194)((char *)&v160 - v55, v210);
                unint64_t v189 = &v160;
                uint64_t v57 = MEMORY[0x270FA5388](v56);
                unint64_t v191 = (char *)&v160;
                MEMORY[0x270FA5388](v57);
                sub_251F34B10();
                uint64_t v193 = (char *)&v160 - v55;
                sub_251F34B30();
                v194((char *)&v160 - v55, v16);
                uint64_t v58 = *v217;
                unint64_t v191 = (char *)objc_msgSend(v201, sel_defaultManager);
                uint64_t v233 = sub_251F34B50();
                uint64_t v234 = v59;
                v185 = (uint64_t *)sub_251AE13EC();
                sub_251F36210();
                swift_bridgeObjectRelease();
                unint64_t v60 = (void *)sub_251F356C0();
                swift_bridgeObjectRelease();
                id v61 = v191;
                unsigned __int8 v62 = objc_msgSend(v191, sel_fileExistsAtPath_, v60);

                if (v62)
                {
LABEL_20:
                  id v63 = objc_msgSend(v201, sel_defaultManager);
                  uint64_t v64 = v193;
                  uint64_t v233 = sub_251F34B50();
                  uint64_t v234 = v65;
                  sub_251F36210();
                  swift_bridgeObjectRelease();
                  uint64_t v66 = (void *)sub_251F356C0();
                  swift_bridgeObjectRelease();
                  unsigned __int8 v67 = objc_msgSend(v63, sel_fileExistsAtPath_, v66);

                  if (v67)
                  {
                    uint64_t v68 = v215;
                    uint64_t v69 = *(char **)((char *)v217 + *(int *)(v215 + 24));
                    int64_t v70 = *((void *)v69 + 2);
                    uint64_t v71 = v200;
                    if (v70)
                    {
                      uint64_t v233 = MEMORY[0x263F8EE78];
                      swift_bridgeObjectRetain();
                      sub_251A3E4E4(0, v70, 0);
                      unint64_t v72 = (*(unsigned __int8 *)(v71 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80);
                      unint64_t v191 = v69;
                      uint64_t v73 = (uint64_t)&v69[v72];
                      uint64_t v218 = *(void *)(v71 + 72);
                      uint64_t v74 = v233;
                      uint64_t v75 = v222;
                      do
                      {
                        uint64_t v76 = v220;
                        sub_251AE1200(v73, v220, type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata.SignificantEvent);
                        uint64_t v77 = v221;
                        sub_251AE1200(v76, v221, type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata.SignificantEvent);
                        sub_251ADB838(v77, v75);
                        sub_251ADBFA8(v76, type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata.SignificantEvent);
                        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                        {
                          sub_251A3E4E4(0, *(void *)(v74 + 16) + 1, 1);
                          uint64_t v74 = v233;
                        }
                        unint64_t v79 = *(void *)(v74 + 16);
                        unint64_t v78 = *(void *)(v74 + 24);
                        if (v79 >= v78 >> 1)
                        {
                          sub_251A3E4E4(v78 > 1, v79 + 1, 1);
                          uint64_t v74 = v233;
                        }
                        *(void *)(v74 + 16) = v79 + 1;
                        uint64_t v75 = v222;
                        sub_251ADBF40(v222, v74+ ((*(unsigned __int8 *)(v219 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v219 + 80))+ *(void *)(v219 + 72) * v79, (uint64_t (*)(void))type metadata accessor for SignificantEvent);
                        v73 += v218;
                        --v70;
                      }
                      while (v70);
                      swift_bridgeObjectRelease();
                      uint64_t v16 = v210;
                      uint64_t v68 = v215;
                    }
                    else
                    {
                      uint64_t v74 = MEMORY[0x263F8EE78];
                    }
                    uint64_t v179 = sub_251F34DA0();
                    v185 = &v160;
                    uint64_t v178 = *(void *)(v179 - 8);
                    MEMORY[0x270FA5388](v179);
                    uint64_t v176 = (char *)&v160 - ((v103 + 15) & 0xFFFFFFFFFFFFFFF0);
                    sub_251F34D90();
                    uint64_t v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB88);
                    uint64_t v181 = &v160;
                    uint64_t v166 = *(uint64_t **)(*(void *)(v104 - 8) + 64);
                    MEMORY[0x270FA5388](v104 - 8);
                    uint64_t v170 = (char *)((v105 + 15) & 0xFFFFFFFFFFFFFFF0);
                    unint64_t v106 = (char *)((char *)&v160 - v170);
                    uint64_t v174 = (char *)&v160 - v170;
                    uint64_t v218 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
                    uint64_t v107 = *(void *)(v218 - 8);
                    unint64_t v191 = *(char **)(v107 + 56);
                    uint64_t v163 = v107 + 56;
                    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v191)(v106, 1, 1, v218);
                    v175 = (uint64_t *)((char *)v217 + *(int *)(v68 + 20));
                    uint64_t v108 = sub_251F34D20();
                    uint64_t v180 = &v160;
                    uint64_t v171 = *(void *)(v108 - 8);
                    uint64_t v109 = v171;
                    uint64_t v110 = *(void *)(v171 + 64);
                    MEMORY[0x270FA5388](v108);
                    unint64_t v111 = (v110 + 15) & 0xFFFFFFFFFFFFFFF0;
                    BOOL v172 = (char *)&v160 - v111;
                    uint64_t v112 = *(uint64_t (**)(void))(v109 + 16);
                    uint64_t v168 = v113;
                    uint64_t v114 = v112();
                    uint64_t v177 = &v160;
                    MEMORY[0x270FA5388](v114);
                    uint64_t v169 = (char *)&v160 - v111;
                    uint64_t v115 = v112();
                    v175 = &v160;
                    MEMORY[0x270FA5388](v115);
                    unint64_t v116 = (v38 + 15) & 0xFFFFFFFFFFFFFFF0;
                    uint64_t v117 = *v192;
                    uint64_t v167 = (uint64_t)&v160 - v116;
                    v117((char *)&v160 - v116, v193, v16);
                    uint64_t v118 = ((uint64_t (*)(char *, void, uint64_t, uint64_t))v40)((char *)&v160 - v116, 0, 1, v16);
                    uint64_t v173 = &v160;
                    MEMORY[0x270FA5388](v118);
                    uint64_t v165 = (char *)&v160 - v170;
                    uint64_t v119 = ((uint64_t (*)(void))v191)();
                    uint64_t v170 = (char *)&v160;
                    MEMORY[0x270FA5388](v119);
                    uint64_t v164 = (uint64_t)&v160 - v116;
                    uint64_t v120 = ((uint64_t (*)(void))v40)();
                    uint64_t v166 = &v160;
                    MEMORY[0x270FA5388](v120);
                    uint64_t v121 = (char *)&v160 - v116;
                    v117((char *)&v160 - v116, v195, v16);
                    v40((char *)&v160 - v116, 0, 1, v16);
                    uint64_t v122 = (int *)v197;
                    uint64_t v123 = (uint64_t)v196;
                    v162 = &v196[*(int *)(v197 + 44)];
                    ((void (*)(void))v40)();
                    uint64_t v161 = v123 + v122[12];
                    ((void (*)(void))v191)();
                    uint64_t v218 = v123 + v122[14];
                    ((void (*)(void))v40)();
                    uint64_t v124 = v123 + v122[15];
                    v40((char *)v124, 1, 1, v16);
                    (*(void (**)(uint64_t, char *, uint64_t))(v178 + 32))(v123, v176, v179);
                    sub_251AE1440(v174, v123 + v122[5]);
                    uint64_t v125 = *(void (**)(uint64_t, char *, uint64_t))(v171 + 32);
                    uint64_t v126 = v168;
                    v125(v123 + v122[6], v172, v168);
                    v125(v123 + v122[7], v169, v126);
                    *(unsigned char *)(v123 + v122[8]) = 1;
                    *(void *)(v123 + v122[9]) = v58;
                    *(void *)(v123 + v122[10]) = v74;
                    sub_251AE14A8(v167, (uint64_t)v162, &qword_269B9DB68);
                    sub_251AE14A8(v165, v161, &qword_269B9DB88);
                    *(void *)(v123 + v122[13]) = 0;
                    sub_251AE14A8(v164, v218, &qword_269B9DB68);
                    sub_251AE14A8((uint64_t)v121, v124, &qword_269B9DB68);
                    uint64_t v127 = v202;
                    sub_251ADBF40(v123, v202, (uint64_t (*)(void))type metadata accessor for CameraClip);
                    uint64_t v128 = v127;
                    uint64_t v129 = v203;
                    sub_251AE1200(v128, v203, (uint64_t (*)(void))type metadata accessor for CameraClip);
                    swift_storeEnumTagMultiPayload();
                    sub_251AE1200(v129, v204, type metadata accessor for ScrubberElement);
                    unint64_t v130 = v237;
                    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                      unint64_t v130 = sub_251F0FFF4(0, *(void *)(v130 + 16) + 1, 1, v130);
                    }
                    uint64_t v18 = v213;
                    uint64_t v32 = v223;
                    unint64_t v132 = *(void *)(v130 + 16);
                    unint64_t v131 = *(void *)(v130 + 24);
                    if (v132 >= v131 >> 1) {
                      unint64_t v130 = sub_251F0FFF4(v131 > 1, v132 + 1, 1, v130);
                    }
                    *(void *)(v130 + 16) = v132 + 1;
                    sub_251ADBF40(v204, v130+ ((*(unsigned __int8 *)(v198 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v198 + 80))+ *(void *)(v198 + 72) * v132, type metadata accessor for ScrubberElement);
                    sub_251A1AD94(v187, v188);
                    unint64_t v237 = v130;
                    sub_251ADBFA8(v203, type metadata accessor for ScrubberElement);
                    sub_251ADBFA8(v202, (uint64_t (*)(void))type metadata accessor for CameraClip);
                    uint64_t v133 = v194;
                    v194(v193, v16);
                    v133(v195, v16);
                    sub_251ADBFA8((uint64_t)v217, type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata);
                    v133(v36, v16);
                    uint64_t v35 = v225;
                    goto LABEL_17;
                  }
                  if (qword_269B9C518 != -1) {
                    swift_once();
                  }
                  uint64_t v88 = sub_251F350A0();
                  uint64_t v89 = __swift_project_value_buffer(v88, (uint64_t)qword_269BA53D0);
                  MEMORY[0x270FA5388](v89);
                  uint64_t v91 = (char *)&v160 - ((v90 + 15) & 0xFFFFFFFFFFFFFFF0);
                  (*v192)(v91, v36, v16);
                  unint64_t v92 = sub_251F35080();
                  os_log_type_t v93 = sub_251F35FB0();
                  BOOL v94 = os_log_type_enabled(v92, v93);
                  uint64_t v32 = v223;
                  if (v94)
                  {
                    uint64_t v95 = swift_slowAlloc();
                    uint64_t v218 = (uint64_t)&v160;
                    uint64_t v96 = (uint8_t *)v95;
                    unint64_t v191 = (char *)swift_slowAlloc();
                    uint64_t v233 = (uint64_t)v191;
                    *(_DWORD *)uint64_t v96 = v186;
                    v185 = (uint64_t *)(v96 + 4);
                    sub_251AE2590(&qword_269B9DB80, MEMORY[0x270FA8DF8]);
                    uint64_t v97 = sub_251F36AB0();
                    uint64_t v232 = sub_251A00E84(v97, v98, &v233);
                    sub_251F361D0();
                    swift_bridgeObjectRelease();
                    uint64_t v99 = v91;
                    uint64_t v100 = v194;
                    v194(v99, v16);
                    _os_log_impl(&dword_2519F3000, v92, v93, "Clip posterImageURL is missing for %s", v96, 0xCu);
                    id v101 = v191;
                    swift_arrayDestroy();
                    MEMORY[0x2533AC760](v101, -1, -1);
                    MEMORY[0x2533AC760](v96, -1, -1);
                    sub_251A1AD94(v187, v188);

                    v100(v64, v16);
                    v100(v195, v16);
                    sub_251ADBFA8((uint64_t)v217, type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata);
                    v100(v36, v16);
                  }
                  else
                  {
                    sub_251A1AD94(v187, v188);

                    uint64_t v102 = v194;
                    v194(v91, v16);
                    v102(v64, v16);
                    v102(v195, v16);
                    sub_251ADBFA8((uint64_t)v217, type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata);
                    v102(v36, v16);
                  }
                }
                else
                {
                  sub_251F34B00();
                  char v80 = sub_251F35870();
                  swift_bridgeObjectRelease();
                  uint64_t v81 = v213;
                  if (v80)
                  {
                    if (qword_269B9C528 != -1) {
                      swift_once();
                    }
                    if (qword_269BA5BF0)
                    {
                      id v82 = (id)qword_269BA5BF0;
                      uint64_t v83 = (void *)sub_251F356C0();
                      id v84 = objc_msgSend(v82, sel_stringForKey_, v83);

                      if (v84)
                      {
                        sub_251F356F0();

                        uint64_t v86 = MEMORY[0x270FA5388](v85);
                        unint64_t v191 = (char *)&v160 - ((v87 + 15) & 0xFFFFFFFFFFFFFFF0);
                        MEMORY[0x270FA5388](v86);
                        sub_251F34B60();
                        swift_bridgeObjectRelease();
                        if (v41((char *)&v160 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0), 1, v16) == 1)
                        {
                          sub_251A1B064((uint64_t)&v160 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_269B9DB68);
                        }
                        else
                        {
                          char v134 = (void (*)(char *, char *, uint64_t))v218;
                          ((void (*)(char *, char *, uint64_t))v218)(v191, (char *)&v160 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0), v16);
                          if (qword_269BA5BF0)
                          {
                            id v135 = (id)qword_269BA5BF0;
                            uint64_t v136 = (void *)sub_251F356C0();
                            objc_msgSend(v135, sel_doubleForKey_, v136);
                            uint64_t v58 = v137;

                            uint64_t v138 = v195;
                            v194(v195, v16);
                            v134(v138, v191, v16);
                            goto LABEL_20;
                          }
                          v194(v191, v16);
                        }
                      }
                      else
                      {
                      }
                      uint64_t v81 = v213;
                    }
                  }
                  if (qword_269B9C518 != -1) {
                    swift_once();
                  }
                  uint64_t v139 = sub_251F350A0();
                  uint64_t v140 = __swift_project_value_buffer(v139, (uint64_t)qword_269BA53D0);
                  MEMORY[0x270FA5388](v140);
                  (*v192)((char *)&v160 - ((v81 + 15) & 0xFFFFFFFFFFFFFFF0), v36, v16);
                  uint64_t v141 = sub_251F35080();
                  os_log_type_t v142 = sub_251F35FB0();
                  BOOL v143 = os_log_type_enabled(v141, v142);
                  unint64_t v144 = v193;
                  if (v143)
                  {
                    uint64_t v145 = swift_slowAlloc();
                    uint64_t v218 = (uint64_t)&v160;
                    uint64_t v146 = v145;
                    uint64_t v147 = swift_slowAlloc();
                    uint64_t v233 = v147;
                    *(_DWORD *)uint64_t v146 = v186;
                    sub_251AE2590(&qword_269B9DB80, MEMORY[0x270FA8DF8]);
                    uint64_t v148 = sub_251F36AB0();
                    *(void *)(v146 + 4) = sub_251A00E84(v148, v149, &v233);
                    swift_bridgeObjectRelease();
                    uint64_t v150 = (char *)&v160 - ((v81 + 15) & 0xFFFFFFFFFFFFFFF0);
                    uint64_t v151 = v194;
                    v194(v150, v16);
                    _os_log_impl(&dword_2519F3000, v141, v142, "Clip assetURL is missing for %s", (uint8_t *)v146, 0xCu);
                    swift_arrayDestroy();
                    MEMORY[0x2533AC760](v147, -1, -1);
                    MEMORY[0x2533AC760](v146, -1, -1);
                    sub_251A1AD94(v187, v188);
                  }
                  else
                  {
                    sub_251A1AD94(v187, v188);

                    uint64_t v152 = (char *)&v160 - ((v81 + 15) & 0xFFFFFFFFFFFFFFF0);
                    uint64_t v151 = v194;
                    v194(v152, v16);
                  }
                  v151(v144, v16);
                  v151(v195, v16);
                  sub_251ADBFA8((uint64_t)v217, type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata);
                  v151(v36, v16);
                  uint64_t v32 = v223;
                }
                uint64_t v35 = v225;
                uint64_t v18 = v213;
                goto LABEL_17;
              }

              (*v226)((char *)&v160 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), v16);
              uint64_t v227 = 0;
            }
            else
            {
              (*v226)((char *)&v160 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), v16);
            }
            uint64_t v32 = v223;
            uint64_t v35 = v225;
            goto LABEL_17;
          }
        }
        else
        {
          v40((char *)&v160 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v16);
        }
        sub_251A1B064((uint64_t)&v160 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_269B9DB68);
LABEL_17:
        uint64_t v33 = sub_251F34A90();
      }
      while (v236);
    }
    (*(void (**)(char *, uint64_t))(v205 + 8))(v32, v206);

    swift_release();
    unint64_t v25 = 0x269B9C000uLL;
    uint64_t v17 = v211;
  }
  if (*(void *)(v25 + 1304) != -1) {
    swift_once();
  }
  uint64_t v153 = sub_251F350A0();
  __swift_project_value_buffer(v153, (uint64_t)qword_269BA53D0);
  unint64_t v154 = v237;
  swift_bridgeObjectRetain();
  BOOL v155 = sub_251F35080();
  os_log_type_t v156 = sub_251F35FA0();
  if (os_log_type_enabled(v155, v156))
  {
    v157 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v157 = 134217984;
    uint64_t v235 = *(void *)(v154 + 16);
    sub_251F361D0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_2519F3000, v155, v156, "Returning %ld clips from disk", v157, 0xCu);
    MEMORY[0x2533AC760](v157, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v158 = v214;

  (*(void (**)(char *, uint64_t))(v17 + 8))(v158, v16);
  swift_beginAccess();
  return v237;
}

uint64_t sub_251AE1200(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_251AE1268()
{
  return type metadata accessor for CameraClipScrubberDemoContentProvider(0);
}

uint64_t type metadata accessor for CameraClipScrubberDemoContentProvider(uint64_t a1)
{
  return sub_251A1C6FC(a1, (uint64_t *)&unk_269B9DB48);
}

uint64_t sub_251AE1290()
{
  uint64_t result = sub_251F34B70();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_251F34F50();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t method lookup function for CameraClipScrubberDemoContentProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for CameraClipScrubberDemoContentProvider);
}

uint64_t dispatch thunk of CameraClipScrubberDemoContentProvider.__allocating_init(baseURL:)()
{
  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata.SignificantEvent(uint64_t a1)
{
  return sub_251A1C6FC(a1, (uint64_t *)&unk_269B9DBB8);
}

uint64_t type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata(uint64_t a1)
{
  return sub_251A1C6FC(a1, (uint64_t *)&unk_269B9DBA8);
}

unint64_t sub_251AE13EC()
{
  unint64_t result = qword_269B9DB78;
  if (!qword_269B9DB78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9DB78);
  }
  return result;
}

uint64_t sub_251AE1440(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DB88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_251AE14A8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_251AE1514(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_251AE155C()
{
}

uint64_t sub_251AE157C()
{
  return sub_251AE1594();
}

uint64_t sub_251AE1594()
{
  *(void *)(*(void *)(v0 + 16)
            + OBJC_IVAR____TtC13HomeDataModel37CameraClipScrubberDemoContentProvider__scrubberElements) = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

void sub_251AE15D8()
{
  char v1 = *(unsigned char *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 16) + OBJC_IVAR____TtC13HomeDataModel37CameraClipScrubberDemoContentProvider__lastFetchedIndex;
  *(void *)uint64_t v2 = *(void *)(v0 + 24);
  *(unsigned char *)(v2 + 8) = v1;
}

uint64_t *sub_251AE15F8(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_251F34D20();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = a3[7];
    *(uint64_t *)((char *)v4 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    uint64_t v12 = (uint64_t *)((char *)v4 + v11);
    uint64_t v13 = (uint64_t *)((char *)a2 + v11);
    uint64_t v14 = v13[1];
    *uint64_t v12 = *v13;
    v12[1] = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_251AE16FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = sub_251F34D20();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *sub_251AE1790(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_251F34D20();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  uint64_t v13 = v12[1];
  *uint64_t v11 = *v12;
  v11[1] = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_251AE1844(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_251F34D20();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[7];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_251AE1918(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_251F34D20();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v10) = *(_OWORD *)((char *)a2 + v10);
  return a1;
}

void *sub_251AE19B8(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_251F34D20();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[7];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  *uint64_t v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_251AE1A74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251AE1A88);
}

uint64_t sub_251AE1A88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34D20();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_251AE1B4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251AE1B60);
}

uint64_t sub_251AE1B60(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_251F34D20();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_251AE1C20()
{
  uint64_t result = sub_251F34D20();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_251AE1CD4(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_251F34D20();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
    uint64_t v12 = a3[7];
    uint64_t v13 = a3[8];
    uint64_t v14 = (uint64_t *)((char *)a1 + v12);
    uint64_t v15 = (uint64_t *)((char *)a2 + v12);
    uint64_t v16 = v15[1];
    *uint64_t v14 = *v15;
    v14[1] = v16;
    uint64_t v17 = (uint64_t *)((char *)a1 + v13);
    uint64_t v18 = (uint64_t *)((char *)a2 + v13);
    uint64_t v19 = v18[1];
    *uint64_t v17 = *v18;
    v17[1] = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_251AE1DE8(uint64_t a1)
{
  uint64_t v2 = sub_251F34D20();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_251AE1E80(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34D20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  uint64_t v11 = a3[7];
  uint64_t v12 = a3[8];
  uint64_t v13 = (void *)(a1 + v11);
  uint64_t v14 = (void *)(a2 + v11);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  uint64_t v16 = (void *)(a1 + v12);
  uint64_t v17 = (void *)(a2 + v12);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_251AE1F44(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34D20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[7];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[8];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_251AE2044(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34D20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  return a1;
}

uint64_t sub_251AE20DC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_251F34D20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[7];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[8];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (uint64_t *)(a2 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *uint64_t v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_251AE21A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_251AE21BC);
}

uint64_t sub_251AE21BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F34D20();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_251AE2280(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_251AE2294);
}

uint64_t sub_251AE2294(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_251F34D20();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_251AE2354()
{
  uint64_t result = sub_251F34D20();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_251AE23FC()
{
  return sub_251AE1514(&qword_269B9DBC8, (void (*)(uint64_t))type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata.SignificantEvent);
}

uint64_t sub_251AE2444()
{
  return MEMORY[0x263F8D320];
}

uint64_t sub_251AE2450()
{
  return sub_251AE1514(&qword_269B9DBD0, (void (*)(uint64_t))type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata);
}

unint64_t sub_251AE2498()
{
  unint64_t result = qword_269B9DBE0;
  if (!qword_269B9DBE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9DBE0);
  }
  return result;
}

unint64_t sub_251AE24EC()
{
  unint64_t result = qword_269B9DBF8;
  if (!qword_269B9DBF8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B9DBF0);
    sub_251AE1514(&qword_269B9DC00, (void (*)(uint64_t))type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata.SignificantEvent);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9DBF8);
  }
  return result;
}

uint64_t sub_251AE2590(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_251AE25D8()
{
  unint64_t result = qword_269B9DC10;
  if (!qword_269B9DC10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9DC10);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CameraClipScrubberDemoContentProvider.ClipMetadata.SignificantEvent.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251AE26F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata.SignificantEvent.CodingKeys()
{
  return &type metadata for CameraClipScrubberDemoContentProvider.ClipMetadata.SignificantEvent.CodingKeys;
}

uint64_t getEnumTagSinglePayload for StaticAccessory.HomePodTypes(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CameraClipScrubberDemoContentProvider.ClipMetadata.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251AE288CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CameraClipScrubberDemoContentProvider.ClipMetadata.CodingKeys()
{
  return &type metadata for CameraClipScrubberDemoContentProvider.ClipMetadata.CodingKeys;
}

unint64_t sub_251AE28C8()
{
  unint64_t result = qword_269B9DC18;
  if (!qword_269B9DC18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9DC18);
  }
  return result;
}

unint64_t sub_251AE2920()
{
  unint64_t result = qword_269B9DC20;
  if (!qword_269B9DC20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9DC20);
  }
  return result;
}

unint64_t sub_251AE2978()
{
  unint64_t result = qword_269B9DC28;
  if (!qword_269B9DC28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9DC28);
  }
  return result;
}

unint64_t sub_251AE29D0()
{
  unint64_t result = qword_269B9DC30;
  if (!qword_269B9DC30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9DC30);
  }
  return result;
}

unint64_t sub_251AE2A28()
{
  unint64_t result = qword_269B9DC38;
  if (!qword_269B9DC38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9DC38);
  }
  return result;
}

unint64_t sub_251AE2A80()
{
  unint64_t result = qword_269B9DC40;
  if (!qword_269B9DC40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9DC40);
  }
  return result;
}

uint64_t sub_251AE2AD4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x8000000251F69250 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000251F69270 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F73616572 && a2 == 0xE600000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000251F69230 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E656469666E6F63 && a2 == 0xEF6C6576654C6563)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v5 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v5) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_251AE2CF8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000;
  if (v2 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1702125924 && a2 == 0xE400000000000000 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000251F69210 || (sub_251F36B10() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000251F69230)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_251F36B10();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

void sub_251AE2E9C(uint64_t a1, void *a2)
{
  if (a1)
  {
    uint64_t v4 = *(void *)(a1 + 16);
    if (v4)
    {
      char v5 = (uint64_t *)(v2 + *a2);
      swift_bridgeObjectRetain();
      uint64_t v6 = 0;
      while (1)
      {
        uint64_t v7 = *(void *)(a1 + 8 * v6 + 32);
        uint64_t v8 = sub_251F356F0();
        uint64_t v10 = v9;
        if (*(void *)(v7 + 16))
        {
          uint64_t v11 = v8;
          swift_bridgeObjectRetain();
          unint64_t v12 = sub_2519FE798(v11, v10);
          if (v13)
          {
            sub_251A0D51C(*(void *)(v7 + 56) + 32 * v12, (uint64_t)&v30);
          }
          else
          {
            long long v30 = 0u;
            long long v31 = 0u;
          }
        }
        else
        {
          long long v30 = 0u;
          long long v31 = 0u;
          swift_bridgeObjectRetain();
        }
        swift_bridgeObjectRelease();
        if (!*((void *)&v31 + 1)) {
          break;
        }
        sub_251A1A568(0, &qword_269BA5560);
        if ((swift_dynamicCast() & 1) == 0) {
          goto LABEL_25;
        }
        uint64_t v14 = (void *)v28;
        uint64_t v15 = sub_251F356F0();
        if (*(void *)(v7 + 16) && (unint64_t v17 = sub_2519FE798(v15, v16), (v18 & 1) != 0))
        {
          sub_251A0D51C(*(void *)(v7 + 56) + 32 * v17, (uint64_t)&v30);
        }
        else
        {
          long long v30 = 0u;
          long long v31 = 0u;
        }
        swift_bridgeObjectRelease();
        if (!*((void *)&v31 + 1))
        {
          sub_251A1B064((uint64_t)&v30, &qword_26B21E190);
LABEL_27:
          swift_bridgeObjectRelease();

LABEL_28:
          swift_bridgeObjectRelease();
          return;
        }
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA5550);
        if ((swift_dynamicCast() & 1) == 0) {
          goto LABEL_27;
        }
        uint64_t v19 = v28;
        uint64_t v20 = sub_251F356F0();
        if (*(void *)(v19 + 16) && (unint64_t v22 = sub_2519FE798(v20, v21), (v23 & 1) != 0))
        {
          sub_251A0D51C(*(void *)(v19 + 56) + 32 * v22, (uint64_t)&v28);
        }
        else
        {
          long long v28 = 0u;
          long long v29 = 0u;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (!*((void *)&v29 + 1))
        {
          swift_bridgeObjectRelease();
          sub_251A1B064((uint64_t)&v28, &qword_26B21E190);
          swift_bridgeObjectRelease();

          return;
        }
        ++v6;
        sub_251A0D578(&v28, &v30);
        id v24 = objc_msgSend(v14, sel_attribute);
        int v25 = objc_msgSend(v24, sel_unsignedIntValue);
        swift_bridgeObjectRelease();
        swift_beginAccess();
        sub_251A0D51C((uint64_t)&v30, (uint64_t)&v28);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v27 = *v5;
        *char v5 = 0x8000000000000000;
        sub_251A0E6AC(&v28, v25, isUniquelyReferenced_nonNull_native);
        *char v5 = v27;
        swift_bridgeObjectRelease();
        swift_endAccess();

        __swift_destroy_boxed_opaque_existential_0((uint64_t)&v30);
        if (v4 == v6) {
          goto LABEL_28;
        }
      }
      sub_251A1B064((uint64_t)&v30, &qword_26B21E190);
LABEL_25:
      swift_bridgeObjectRelease();
      goto LABEL_28;
    }
  }
}

uint64_t sub_251AE31FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v38 = a3;
  uint64_t v39 = a7;
  uint64_t v37 = a1;
  sub_251A1A568(0, (unint64_t *)&qword_269B9D850);
  uint64_t v11 = sub_251F354B0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x263F8F078], v11);
  uint64_t v43 = sub_251F36040();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  uint64_t v15 = sub_251F354F0();
  uint64_t v41 = v15;
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v37 - v20;
  sub_251F354E0();
  MEMORY[0x2533AA440](v21, 0.2);
  unint64_t v22 = *(void (**)(char *, uint64_t))(v16 + 8);
  uint64_t v40 = v16 + 8;
  uint64_t v42 = v22;
  v22(v21, v15);
  uint64_t v23 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v24 = (void *)swift_allocObject();
  uint64_t v25 = v37;
  v24[2] = v23;
  v24[3] = v25;
  uint64_t v26 = v38;
  v24[4] = a2;
  v24[5] = v26;
  void v24[6] = a4;
  aBlock[4] = v39;
  aBlock[5] = v24;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_251AE3BE0;
  aBlock[3] = a8;
  uint64_t v27 = _Block_copy(aBlock);
  uint64_t v39 = sub_251F354D0();
  uint64_t v28 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  long long v30 = (char *)&v37 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_251F354C0();
  uint64_t v31 = sub_251F354A0();
  uint64_t v32 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  long long v34 = (char *)&v37 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = MEMORY[0x263F8EE78];
  sub_251AE8D3C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DD70);
  sub_251AE8D88();
  sub_251F36260();
  uint64_t v35 = (void *)v43;
  MEMORY[0x2533AAF50](v19, v30, v34, v27);
  _Block_release(v27);

  (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v31);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v39);
  v42(v19, v41);
  swift_release();
  return swift_release();
}

uint64_t sub_251AE3684(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v38 = a3;
  uint64_t v39 = a7;
  uint64_t v37 = a1;
  sub_251A1A568(0, (unint64_t *)&qword_269B9D850);
  uint64_t v11 = sub_251F354B0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x263F8F078], v11);
  uint64_t v43 = sub_251F36040();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  uint64_t v15 = sub_251F354F0();
  uint64_t v41 = v15;
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v37 - v20;
  sub_251F354E0();
  MEMORY[0x2533AA440](v21, 0.2);
  unint64_t v22 = *(void (**)(char *, uint64_t))(v16 + 8);
  uint64_t v40 = v16 + 8;
  uint64_t v42 = v22;
  v22(v21, v15);
  uint64_t v23 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v24 = (void *)swift_allocObject();
  uint64_t v25 = v37;
  v24[2] = v23;
  v24[3] = v25;
  uint64_t v26 = v38;
  v24[4] = a2;
  v24[5] = v26;
  void v24[6] = a4;
  aBlock[4] = v39;
  aBlock[5] = v24;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_251AE3BE0;
  aBlock[3] = a8;
  uint64_t v27 = _Block_copy(aBlock);
  uint64_t v39 = sub_251F354D0();
  uint64_t v28 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  long long v30 = (char *)&v37 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_251F354C0();
  uint64_t v31 = sub_251F354A0();
  uint64_t v32 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  long long v34 = (char *)&v37 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = MEMORY[0x263F8EE78];
  sub_251AE8D3C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DD70);
  sub_251AE8D88();
  sub_251F36260();
  uint64_t v35 = (void *)v43;
  MEMORY[0x2533AAF50](v19, v30, v34, v27);
  _Block_release(v27);

  (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v31);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v39);
  v42(v19, v41);
  swift_release();
  return swift_release();
}

void sub_251AE3B08(uint64_t a1, void (*a2)(void), uint64_t a3, void (*a4)(uint64_t *), uint64_t a5, void *a6)
{
  uint64_t v9 = a1 + 16;
  swift_beginAccess();
  uint64_t v10 = MEMORY[0x2533AC870](v9);
  if (v10)
  {
    uint64_t v11 = (void *)v10;
    uint64_t v12 = (uint64_t *)(v10 + *a6);
    swift_beginAccess();
    uint64_t v13 = *v12;
    swift_bridgeObjectRetain();
    a4(&v13);
    *uint64_t v12 = v13;
    swift_bridgeObjectRelease();
    ((void (*)(void))a2)(0);
  }
  else
  {
    a2();
  }
}

uint64_t sub_251AE3BE0(uint64_t a1)
{
  unint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);
  return swift_release();
}

id sub_251AE3C44()
{
  return sub_251AE6C8C(type metadata accessor for MockDiagnosticLogsCluster);
}

uint64_t type metadata accessor for MockDiagnosticLogsCluster()
{
  return self;
}

uint64_t sub_251AE3CA8()
{
  return sub_251AE6D7C();
}

uint64_t (*sub_251AE3CB4())()
{
  return j_j__swift_endAccess;
}

void sub_251AE3F4C(uint64_t a1, uint64_t a2)
{
  if (a1) {
    uint64_t v3 = sub_251F34A20();
  }
  else {
    uint64_t v3 = 0;
  }
  id v4 = (id)v3;
  (*(void (**)(uint64_t))(a2 + 16))(a2);
}

id sub_251AE4260()
{
  return sub_251AE6C8C(type metadata accessor for MockOnOffCluster);
}

uint64_t type metadata accessor for MockOnOffCluster()
{
  return self;
}

uint64_t sub_251AE42C4()
{
  return sub_251AE6D7C();
}

uint64_t (*sub_251AE42D0())()
{
  return j__swift_endAccess;
}

id sub_251AE433C()
{
  return sub_251AE6C8C(type metadata accessor for MockBasicInfoCluster);
}

uint64_t type metadata accessor for MockBasicInfoCluster()
{
  return self;
}

uint64_t sub_251AE43A0()
{
  return sub_251AE6D7C();
}

uint64_t (*sub_251AE43AC())()
{
  return j_j__swift_endAccess;
}

id sub_251AE4510()
{
  return sub_251AE6C8C(type metadata accessor for MockLevelControlCluster);
}

uint64_t type metadata accessor for MockLevelControlCluster()
{
  return self;
}

uint64_t sub_251AE4574()
{
  return sub_251AE6D7C();
}

uint64_t (*sub_251AE4580())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_251AE45DC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DE80);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](v5);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
  unint64_t v8 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v9 + v8, (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = a3;
  sub_251AE3684((uint64_t)sub_251AE9508, v9, (uint64_t)sub_251AE9338, v10, (uint64_t)&unk_270267A18, (uint64_t)&unk_270267A40, (uint64_t)sub_251AE9530, (uint64_t)&block_descriptor_362);
  swift_release();
  return swift_release();
}

uint64_t sub_251AE4920(void *a1, uint64_t a2, void *a3, void *aBlock, void *a5)
{
  v5[3] = a3;
  v5[4] = a5;
  uint64_t v5[2] = a1;
  v5[5] = _Block_copy(aBlock);
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA5550);
    a2 = sub_251F35AC0();
  }
  v5[6] = a2;
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_269B9DE70 + dword_269B9DE70);
  id v10 = a1;
  id v11 = a3;
  a5;
  uint64_t v12 = (void *)swift_task_alloc();
  v5[7] = v12;
  *uint64_t v12 = v5;
  v12[1] = sub_251AE4A38;
  return v14((uint64_t)v10, a2);
}

uint64_t sub_251AE4A38(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = *v2;
  uint64_t v6 = *(void **)(*v2 + 32);
  uint64_t v7 = *(void **)(*v2 + 24);
  unint64_t v8 = *(void **)(*v2 + 16);
  uint64_t v9 = *v2;
  swift_task_dealloc();

  id v10 = *(void (***)(void, void, void))(v5 + 40);
  swift_bridgeObjectRelease();
  if (v3)
  {
    id v11 = (void *)sub_251F34A20();

    ((void (**)(void, void, void *))v10)[2](v10, 0, v11);
    _Block_release(v10);
  }
  else
  {
    ((void (**)(void, void *, void))v10)[2](v10, a1, 0);
    _Block_release(v10);
  }
  uint64_t v12 = *(uint64_t (**)(void))(v9 + 8);
  return v12();
}

id sub_251AE4C38()
{
  return sub_251AE6C8C(type metadata accessor for MockRVCRunModeCluster);
}

uint64_t type metadata accessor for MockRVCRunModeCluster()
{
  return self;
}

uint64_t sub_251AE4CD8()
{
  return sub_251AE6D7C();
}

uint64_t (*sub_251AE4CE4())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_251AE4D40(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DE48);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](v5);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
  unint64_t v8 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v9 + v8, (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = a3;
  sub_251AE3684((uint64_t)sub_251AE9314, v9, (uint64_t)sub_251AE9338, v10, (uint64_t)&unk_2702678D8, (uint64_t)&unk_270267900, (uint64_t)sub_251AE9344, (uint64_t)&block_descriptor_331);
  swift_release();
  return swift_release();
}

uint64_t sub_251AE5084(void *a1, uint64_t a2, void *a3, void *aBlock, void *a5)
{
  v5[3] = a3;
  v5[4] = a5;
  uint64_t v5[2] = a1;
  v5[5] = _Block_copy(aBlock);
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA5550);
    a2 = sub_251F35AC0();
  }
  v5[6] = a2;
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_269B9DE40 + dword_269B9DE40);
  id v10 = a1;
  id v11 = a3;
  a5;
  uint64_t v12 = (void *)swift_task_alloc();
  v5[7] = v12;
  *uint64_t v12 = v5;
  v12[1] = sub_251AE9704;
  return v14((uint64_t)v10, a2);
}

id sub_251AE51AC()
{
  return sub_251AE6C8C(type metadata accessor for MockRVCCleanModeCluster);
}

uint64_t type metadata accessor for MockRVCCleanModeCluster()
{
  return self;
}

uint64_t sub_251AE5210()
{
  return sub_251AE6D7C();
}

uint64_t (*sub_251AE521C())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_251AE5278(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DDF0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](v5);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
  unint64_t v8 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v9 + v8, (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = a3;
  sub_251AE3684((uint64_t)sub_251AE9080, v9, (uint64_t)sub_251AE90A4, v10, (uint64_t)&unk_2702676D0, (uint64_t)&unk_2702676F8, (uint64_t)sub_251AE90B0, (uint64_t)&block_descriptor_278);
  swift_release();
  return swift_release();
}

uint64_t sub_251AE55A8(uint64_t a1, void *a2, void *aBlock, void *a4)
{
  v4[2] = a2;
  v4[3] = a4;
  v4[4] = _Block_copy(aBlock);
  if (a1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA5550);
    a1 = sub_251F35AC0();
  }
  v4[5] = a1;
  id v11 = (uint64_t (*)(uint64_t))((char *)&dword_269B9DE18 + dword_269B9DE18);
  id v8 = a2;
  a4;
  uint64_t v9 = (void *)swift_task_alloc();
  v4[6] = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_251AE9730;
  return v11(a1);
}

uint64_t sub_251AE56A8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DDF0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](v5);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
  unint64_t v8 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v9 + v8, (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = a3;
  sub_251AE3684((uint64_t)sub_251AE9080, v9, (uint64_t)sub_251AE90A4, v10, (uint64_t)&unk_2702676D0, (uint64_t)&unk_2702676F8, (uint64_t)sub_251AE90B0, (uint64_t)&block_descriptor_278);
  swift_release();
  return swift_release();
}

uint64_t sub_251AE59D8(uint64_t a1, void *a2, void *aBlock, void *a4)
{
  v4[2] = a2;
  v4[3] = a4;
  v4[4] = _Block_copy(aBlock);
  if (a1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA5550);
    a1 = sub_251F35AC0();
  }
  v4[5] = a1;
  id v11 = (uint64_t (*)(uint64_t))((char *)&dword_269B9DDE0 + dword_269B9DDE0);
  id v8 = a2;
  a4;
  uint64_t v9 = (void *)swift_task_alloc();
  v4[6] = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_251AE5AD8;
  return v11(a1);
}

uint64_t sub_251AE5AD8(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = *v2;
  uint64_t v6 = *(void **)(*v2 + 24);
  uint64_t v7 = *(void **)(*v2 + 16);
  uint64_t v8 = *v2;
  swift_task_dealloc();

  uint64_t v9 = *(void (***)(void, void, void))(v5 + 32);
  swift_bridgeObjectRelease();
  if (v3)
  {
    uint64_t v10 = (void *)sub_251F34A20();

    ((void (**)(void, void, void *))v9)[2](v9, 0, v10);
    _Block_release(v9);
  }
  else
  {
    ((void (**)(void, void *, void))v9)[2](v9, a1, 0);
    _Block_release(v9);
  }
  id v11 = *(uint64_t (**)(void))(v8 + 8);
  return v11();
}

id sub_251AE5CB8()
{
  return sub_251AE6C8C(type metadata accessor for MockRVCOperationalStateCluster);
}

uint64_t type metadata accessor for MockRVCOperationalStateCluster()
{
  return self;
}

uint64_t sub_251AE5D1C()
{
  return sub_251AE6D7C();
}

uint64_t (*sub_251AE5D28())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_251AE5D84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DDB8);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](v5);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
  unint64_t v8 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v9 + v8, (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a3;
  swift_bridgeObjectRetain();
  sub_251AE3684((uint64_t)sub_251AE8ECC, v9, (uint64_t)sub_251AE8F94, v10, (uint64_t)&unk_2702674C8, (uint64_t)&unk_2702674F0, (uint64_t)sub_251AE8D30, (uint64_t)&block_descriptor_24);
  swift_release();
  return swift_release();
}

uint64_t sub_251AE5F38(uint64_t a1, uint64_t a2)
{
  v4[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DDA8);
  v4[0] = a2;
  swift_bridgeObjectRetain();
  return sub_2519F8580((uint64_t)v4, 2);
}

uint64_t sub_251AE6124(void *a1, uint64_t a2, void *a3, void *aBlock, void *a5)
{
  v5[3] = a3;
  v5[4] = a5;
  uint64_t v5[2] = a1;
  v5[5] = _Block_copy(aBlock);
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA5550);
    a2 = sub_251F35AC0();
  }
  v5[6] = a2;
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_269B9DDA0 + dword_269B9DDA0);
  id v10 = a1;
  id v11 = a3;
  a5;
  uint64_t v12 = (void *)swift_task_alloc();
  v5[7] = v12;
  *uint64_t v12 = v5;
  v12[1] = sub_251AE9704;
  return v14((uint64_t)v10, a2);
}

uint64_t sub_251AE623C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DD60);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](v5);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
  unint64_t v8 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v9 + v8, (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a3;
  id v11 = a3;
  sub_251AE3684((uint64_t)sub_251AE8CA0, v9, (uint64_t)sub_251AE8CEC, v10, (uint64_t)&unk_2702674C8, (uint64_t)&unk_2702674F0, (uint64_t)sub_251AE8D30, (uint64_t)&block_descriptor_24);
  swift_release();
  return swift_release();
}

uint64_t sub_251AE63EC(uint64_t a1, uint64_t a2, Class *a3, uint64_t *a4)
{
  return sub_251F35C20();
}

uint64_t sub_251AE6444(uint64_t a1, void *a2)
{
  v5[3] = sub_251A1A568(0, (unint64_t *)&qword_269BA04A0);
  v5[0] = a2;
  id v3 = a2;
  return sub_2519F8580((uint64_t)v5, 3);
}

uint64_t sub_251AE6638(void *a1, uint64_t a2, void *a3, void *aBlock, void *a5)
{
  v5[3] = a3;
  void v5[4] = a5;
  uint64_t v5[2] = a1;
  v5[5] = _Block_copy(aBlock);
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_269BA5550);
    a2 = sub_251F35AC0();
  }
  v5[6] = a2;
  uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_269B9DD50 + dword_269B9DD50);
  id v10 = a1;
  id v11 = a3;
  a5;
  uint64_t v12 = (void *)swift_task_alloc();
  v5[7] = v12;
  *uint64_t v12 = v5;
  v12[1] = sub_251AE9704;
  return v14((uint64_t)v10, a2);
}

id sub_251AE6760()
{
  return sub_251AE6C8C(type metadata accessor for MockServiceAreaCluster);
}

uint64_t type metadata accessor for MockServiceAreaCluster()
{
  return self;
}

uint64_t sub_251AE67C4()
{
  return sub_251AE6D7C();
}

uint64_t (*sub_251AE67D0())()
{
  return j_j__swift_endAccess;
}

id sub_251AE684C()
{
  return sub_251AE6C8C(type metadata accessor for MockColorControlCluster);
}

uint64_t type metadata accessor for MockColorControlCluster()
{
  return self;
}

uint64_t sub_251AE68B0()
{
  return sub_251AE6D7C();
}

uint64_t (*sub_251AE68BC())()
{
  return j_j__swift_endAccess;
}

id sub_251AE6938()
{
  return sub_251AE6C8C(type metadata accessor for MockPowerSourceCluster);
}

uint64_t type metadata accessor for MockPowerSourceCluster()
{
  return self;
}

uint64_t sub_251AE699C()
{
  return sub_251AE6D7C();
}

uint64_t (*sub_251AE69A8())()
{
  return j_j__swift_endAccess;
}

void sub_251AE6B00(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  id v6 = a3;
  id v7 = a5;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id sub_251AE6B48()
{
  return sub_251AE6C8C(type metadata accessor for MockDoorLockCluster);
}

uint64_t type metadata accessor for MockDoorLockCluster()
{
  return self;
}

uint64_t sub_251AE6BAC()
{
  return sub_251AE6D7C();
}

uint64_t (*sub_251AE6BB8())()
{
  return j_j__swift_endAccess;
}

void sub_251AE6C24(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5)
{
  id v7 = a3;
  id v8 = a4;
  id v9 = a5;
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id sub_251AE6C74()
{
  return sub_251AE6C8C(type metadata accessor for MockAppleDoorLockCluster);
}

id sub_251AE6C8C(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_251AE6CEC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  swift_bridgeObjectRelease();
  id v7 = (uint64_t *)(a1 + *a4);
  uint64_t v8 = *v7;
  uint64_t v9 = v7[1];
  return a5(v8, v9);
}

uint64_t type metadata accessor for MockAppleDoorLockCluster()
{
  return self;
}

uint64_t sub_251AE6D70()
{
  return sub_251AE6D7C();
}

uint64_t sub_251AE6D7C()
{
  return swift_bridgeObjectRetain();
}

uint64_t (*sub_251AE6DC4())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_251AE6E24()
{
  uint64_t v2 = (void *)v0[2];
  uint64_t v3 = v0[3];
  id v4 = (void *)v0[4];
  uint64_t v5 = (void *)v0[5];
  id v6 = (void *)v0[6];
  id v7 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  *id v7 = v1;
  v7[1] = sub_251AB3DD4;
  uint64_t v8 = (uint64_t (*)(void *, uint64_t, void *, void *, void *))((char *)&dword_269B9DD10 + dword_269B9DD10);
  return v8(v2, v3, v4, v5, v6);
}

uint64_t sub_251AE6EEC(uint64_t a1, uint64_t a2, int *a3)
{
  id v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  id v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v4;
  *id v4 = v3;
  v4[1] = sub_251AB3DD4;
  return v6();
}

uint64_t sub_251AE6FBC()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  id v4 = (int *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_251AB3DD4;
  id v6 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_269B9DD20 + dword_269B9DD20);
  return v6(v2, v3, v4);
}

uint64_t sub_251AE707C(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_251AB3DD4;
  return v7();
}

uint64_t sub_251AE714C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  id v6 = (int *)v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_251AB3DD4;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_269B9DD30 + dword_269B9DD30);
  return v8(a1, v4, v5, v6);
}

uint64_t sub_251AE7218(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_251F35CD0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_251F35CC0();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_251A1B064(a1, &qword_26B220BB0);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_251F35C00();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_251AE73C4(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_251AE74A0;
  return v6(a1);
}

uint64_t sub_251AE74A0()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_251AE7598()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_251AE75D0(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_251AB3A34;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_269B9DD40 + dword_269B9DD40);
  return v6(a1, v4);
}

unint64_t sub_251AE7688()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D560);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_251F38650;
  *(void *)(inited + 32) = sub_251F356F0();
  *(void *)(inited + 40) = v2;
  uint64_t v3 = (uint64_t *)(v0 + OBJC_IVAR____TtC13HomeDataModel16MockOnOffCluster_attributes);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = *(void *)(v4 + 16);
  uint64_t v6 = MEMORY[0x263F8D4F8];
  if (v5)
  {
    unint64_t v7 = sub_2519FE8E0(0);
    LOBYTE(v5) = 0;
    if (v8)
    {
      sub_251A0D51C(*(void *)(v4 + 56) + 32 * v7, (uint64_t)v11);
      if (swift_dynamicCast()) {
        LOBYTE(v5) = v10;
      }
      else {
        LOBYTE(v5) = 0;
      }
    }
  }
  *(void *)(inited + 72) = v6;
  *(unsigned char *)(inited + 48) = v5;
  return sub_2519FA1A4(inited);
}

uint64_t sub_251AE7784(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  char v8 = (uint64_t *)(v3 + OBJC_IVAR____TtC13HomeDataModel16MockOnOffCluster_attributes);
  swift_beginAccess();
  uint64_t v9 = *v8;
  if (*(void *)(v9 + 16)
    && (unint64_t v10 = sub_2519FE8E0(0), (v11 & 1) != 0)
    && (sub_251A0D51C(*(void *)(v9 + 56) + 32 * v10, (uint64_t)v17), swift_dynamicCast()))
  {
    char v12 = v16 ^ 1;
  }
  else
  {
    char v12 = 1;
  }
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, void))(v4
                                                        + OBJC_IVAR____TtC13HomeDataModel16MockOnOffCluster_commandObserver);
  if (v13)
  {
    swift_retain();
    v13(2, a1, v12 & 1);
    sub_251A27C7C((uint64_t)v13);
  }
  sub_251AE2E9C(a1, &OBJC_IVAR____TtC13HomeDataModel16MockOnOffCluster_attributes);
  uint64_t v14 = swift_allocObject();
  *(unsigned char *)(v14 + 16) = v12 & 1;
  sub_251AE31FC(a2, a3, (uint64_t)sub_251AE95FC, v14, (uint64_t)&unk_270267BA8, (uint64_t)&unk_270267BD0, (uint64_t)sub_251AE964C, (uint64_t)&block_descriptor_393);
  return swift_release();
}

uint64_t sub_251AE791C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  id v9 = objc_msgSend(a1, sel_level);
  id v10 = objc_msgSend(v9, sel_unsignedCharValue);

  char v11 = *(void (**)(void, uint64_t, id))(v5
                                                   + OBJC_IVAR____TtC13HomeDataModel23MockLevelControlCluster_commandObserver);
  if (v11)
  {
    swift_retain();
    v11(0, a2, v10);
    sub_251A27C7C((uint64_t)v11);
  }
  sub_251AE2E9C(a2, &OBJC_IVAR____TtC13HomeDataModel23MockLevelControlCluster_attributes);
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = (_BYTE)v10;
  sub_251AE31FC(a3, a4, (uint64_t)sub_251AE958C, v12, (uint64_t)&unk_270267AE0, (uint64_t)&unk_270267B08, (uint64_t)sub_251AE95E0, (uint64_t)&block_descriptor_377);
  return swift_release();
}

uint64_t sub_251AE7A60(uint64_t a1, uint64_t a2)
{
  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  return MEMORY[0x270FA2498](sub_251AE7A84, 0, 0);
}

uint64_t sub_251AE7A84()
{
  uint64_t v1 = *(void *)(v0 + 40);
  id v2 = objc_msgSend(*(id *)(v0 + 24), sel_getNewMode);
  id v3 = objc_msgSend(v2, sel_unsignedCharValue);

  uint64_t v4 = *(void (**)(void, uint64_t, id))(v1
                                                  + OBJC_IVAR____TtC13HomeDataModel21MockRVCRunModeCluster_commandObserver);
  if (v4)
  {
    uint64_t v5 = *(void *)(v0 + 32);
    swift_retain();
    v4(0, v5, v3);
    sub_251A27C7C((uint64_t)v4);
  }
  uint64_t v6 = *(void *)(v0 + 40);
  sub_251AE2E9C(*(void *)(v0 + 32), &OBJC_IVAR____TtC13HomeDataModel21MockRVCRunModeCluster_attributes);
  (*(void (**)(id))(v6 + OBJC_IVAR____TtC13HomeDataModel21MockRVCRunModeCluster_changeToModeBlock))(v3);
  uint64_t v7 = swift_task_alloc();
  *(void *)(v0 + 48) = v7;
  *(void *)(v7 + 16) = v6;
  *(unsigned char *)(v7 + 24) = (_BYTE)v3;
  char v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v8;
  uint64_t v9 = sub_251A1A568(0, &qword_269B9DE78);
  *char v8 = v0;
  v8[1] = sub_251AE7C40;
  return MEMORY[0x270FA2318](v0 + 16, 0, 0, 0xD000000000000038, 0x8000000251F69AF0, sub_251AE9464, v7, v9);
}

uint64_t sub_251AE7C40()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251AE7D58, 0, 0);
}

uint64_t sub_251AE7D58()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 16));
}

uint64_t sub_251AE7D74(uint64_t a1, uint64_t a2)
{
  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  return MEMORY[0x270FA2498](sub_251AE7D98, 0, 0);
}

uint64_t sub_251AE7D98()
{
  uint64_t v1 = *(void *)(v0 + 40);
  id v2 = objc_msgSend(*(id *)(v0 + 24), sel_getNewMode);
  id v3 = objc_msgSend(v2, sel_unsignedCharValue);

  uint64_t v4 = *(void (**)(void, uint64_t, id))(v1
                                                  + OBJC_IVAR____TtC13HomeDataModel23MockRVCCleanModeCluster_commandObserver);
  if (v4)
  {
    uint64_t v5 = *(void *)(v0 + 32);
    swift_retain();
    v4(0, v5, v3);
    sub_251A27C7C((uint64_t)v4);
  }
  uint64_t v6 = *(void *)(v0 + 40);
  sub_251AE2E9C(*(void *)(v0 + 32), &OBJC_IVAR____TtC13HomeDataModel23MockRVCCleanModeCluster_attributes);
  uint64_t v7 = swift_task_alloc();
  *(void *)(v0 + 48) = v7;
  *(void *)(v7 + 16) = v6;
  *(unsigned char *)(v7 + 24) = (_BYTE)v3;
  char v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v8;
  uint64_t v9 = sub_251A1A568(0, &qword_269B9D310);
  *char v8 = v0;
  v8[1] = sub_251AE7F34;
  return MEMORY[0x270FA2318](v0 + 16, 0, 0, 0xD000000000000038, 0x8000000251F69AF0, sub_251AE92FC, v7, v9);
}

uint64_t sub_251AE7F34()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251AE96D4, 0, 0);
}

uint64_t sub_251AE804C(uint64_t a1)
{
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = v1;
  return MEMORY[0x270FA2498](sub_251AE806C, 0, 0);
}

uint64_t sub_251AE806C()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1
                                                        + OBJC_IVAR____TtC13HomeDataModel30MockRVCOperationalStateCluster_commandObserver);
  if (v2)
  {
    *(unsigned char *)(v0 + 16) = 1;
    uint64_t v3 = *(void *)(v0 + 56);
    *(void *)(v0 + 40) = MEMORY[0x263F8E778];
    swift_retain();
    v2(3, v3, v0 + 16);
    sub_251A27C7C((uint64_t)v2);
    __swift_destroy_boxed_opaque_existential_0(v0 + 16);
    uint64_t v1 = *(void *)(v0 + 64);
  }
  sub_251AE2E9C(*(void *)(v0 + 56), &OBJC_IVAR____TtC13HomeDataModel30MockRVCOperationalStateCluster_attributes);
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 72) = v4;
  *(void *)(v4 + 16) = v1;
  *(unsigned char *)(v4 + 24) = 1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v5;
  uint64_t v6 = sub_251A1A568(0, &qword_269B9DDE8);
  *uint64_t v5 = v0;
  v5[1] = sub_251AE81FC;
  return MEMORY[0x270FA2318](v0 + 48, 0, 0, 0xD000000000000031, 0x8000000251F69A80, sub_251AE9200, v4, v6);
}

uint64_t sub_251AE81FC()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251AE96EC, 0, 0);
}

uint64_t sub_251AE8314(uint64_t a1)
{
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = v1;
  return MEMORY[0x270FA2498](sub_251AE8334, 0, 0);
}

uint64_t sub_251AE8334()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = *(void (**)(void, uint64_t, uint64_t))(v1
                                                       + OBJC_IVAR____TtC13HomeDataModel30MockRVCOperationalStateCluster_commandObserver);
  if (v2)
  {
    *(unsigned char *)(v0 + 16) = 2;
    uint64_t v3 = *(void *)(v0 + 56);
    *(void *)(v0 + 40) = MEMORY[0x263F8E778];
    swift_retain();
    v2(0, v3, v0 + 16);
    sub_251A27C7C((uint64_t)v2);
    __swift_destroy_boxed_opaque_existential_0(v0 + 16);
    uint64_t v1 = *(void *)(v0 + 64);
  }
  sub_251AE2E9C(*(void *)(v0 + 56), &OBJC_IVAR____TtC13HomeDataModel30MockRVCOperationalStateCluster_attributes);
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 72) = v4;
  *(void *)(v4 + 16) = v1;
  *(unsigned char *)(v4 + 24) = 2;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v5;
  uint64_t v6 = sub_251A1A568(0, &qword_269B9DDE8);
  *uint64_t v5 = v0;
  v5[1] = sub_251AE84C4;
  return MEMORY[0x270FA2318](v0 + 48, 0, 0, 0xD000000000000030, 0x8000000251F69A40, sub_251AE9068, v4, v6);
}

uint64_t sub_251AE84C4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251AE85DC, 0, 0);
}

uint64_t sub_251AE85DC()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 48));
}

uint64_t sub_251AE85F8(uint64_t a1, uint64_t a2)
{
  v3[8] = a2;
  v3[9] = v2;
  v3[7] = a1;
  return MEMORY[0x270FA2498](sub_251AE861C, 0, 0);
}

uint64_t sub_251AE861C()
{
  uint64_t v1 = *(void *)(v0 + 72);
  id v2 = objc_msgSend(*(id *)(v0 + 56), sel_getNewAreas);
  uint64_t v3 = sub_251F35AC0();
  *(void *)(v0 + 80) = v3;

  uint64_t v4 = *(void (**)(void, uint64_t, uint64_t))(v1
                                                       + OBJC_IVAR____TtC13HomeDataModel22MockServiceAreaCluster_commandObserver);
  if (v4)
  {
    uint64_t v5 = *(void *)(v0 + 64);
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DDA8);
    *(void *)(v0 + 16) = v3;
    *(void *)(v0 + 40) = v6;
    sub_251AE9658((uint64_t)v4);
    swift_bridgeObjectRetain();
    v4(0, v5, v0 + 16);
    sub_251A27C7C((uint64_t)v4);
    __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  }
  uint64_t v7 = *(void *)(v0 + 72);
  sub_251AE2E9C(*(void *)(v0 + 64), &OBJC_IVAR____TtC13HomeDataModel22MockServiceAreaCluster_attributes);
  uint64_t v8 = swift_task_alloc();
  *(void *)(v0 + 88) = v8;
  *(void *)(v8 + 16) = v7;
  *(void *)(v8 + 24) = v3;
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v9;
  uint64_t v10 = sub_251A1A568(0, &qword_269B9DDB0);
  *uint64_t v9 = v0;
  v9[1] = sub_251AE87F0;
  return MEMORY[0x270FA2318](v0 + 48, 0, 0, 0xD000000000000037, 0x8000000251F699D0, sub_251AE8EB8, v8, v10);
}

uint64_t sub_251AE87F0()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251AE85DC, 0, 0);
}

uint64_t sub_251AE8924(uint64_t a1, uint64_t a2)
{
  v3[8] = a2;
  v3[9] = v2;
  v3[7] = a1;
  return MEMORY[0x270FA2498](sub_251AE8948, 0, 0);
}

uint64_t sub_251AE8948()
{
  uint64_t v1 = *(void *)(v0 + 72);
  id v2 = objc_msgSend(*(id *)(v0 + 56), sel_skippedArea);
  *(void *)(v0 + 80) = v2;
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1
                                                        + OBJC_IVAR____TtC13HomeDataModel22MockServiceAreaCluster_commandObserver);
  if (v3)
  {
    uint64_t v4 = *(void *)(v0 + 64);
    uint64_t v5 = sub_251A1A568(0, (unint64_t *)&qword_269BA04A0);
    *(void *)(v0 + 16) = v2;
    *(void *)(v0 + 40) = v5;
    sub_251AE9658((uint64_t)v3);
    id v6 = v2;
    v3(2, v4, v0 + 16);
    sub_251A27C7C((uint64_t)v3);
    __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  }
  uint64_t v7 = *(void *)(v0 + 72);
  sub_251AE2E9C(*(void *)(v0 + 64), &OBJC_IVAR____TtC13HomeDataModel22MockServiceAreaCluster_attributes);
  uint64_t v8 = swift_task_alloc();
  *(void *)(v0 + 88) = v8;
  *(void *)(v8 + 16) = v7;
  *(void *)(v8 + 24) = v2;
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v9;
  uint64_t v10 = sub_251A1A568(0, &qword_269B9DD58);
  *uint64_t v9 = v0;
  v9[1] = sub_251AE8B0C;
  return MEMORY[0x270FA2318](v0 + 48, 0, 0, 0xD000000000000030, 0x8000000251F69990, sub_251AE8C8C, v8, v10);
}

uint64_t sub_251AE8B0C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_251AE8C24, 0, 0);
}

uint64_t sub_251AE8C24()
{
  uint64_t v1 = *(void *)(v0 + 48);
  id v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_251AE8C8C(uint64_t a1)
{
  return sub_251AE623C(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_251AE8C94()
{
  return objectdestroy_215Tm(&qword_269B9DD60);
}

uint64_t sub_251AE8CA0(uint64_t a1)
{
  return sub_251AE8EE0(a1, &qword_269B9DD60, (Class *)0x263F10FD8);
}

uint64_t sub_251AE8CB4()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_251AE8CEC(uint64_t a1)
{
  return sub_251AE6444(a1, *(void **)(v1 + 16));
}

uint64_t sub_251AE8CF4()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_251AE8D30()
{
}

unint64_t sub_251AE8D3C()
{
  unint64_t result = qword_269B9DD68;
  if (!qword_269B9DD68)
  {
    sub_251F354A0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9DD68);
  }
  return result;
}

unint64_t sub_251AE8D88()
{
  unint64_t result = qword_269B9DD78;
  if (!qword_269B9DD78)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B9DD70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9DD78);
  }
  return result;
}

uint64_t sub_251AE8DE8()
{
  id v2 = (void *)v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = (void *)v0[4];
  uint64_t v5 = (void *)v0[5];
  id v6 = (void *)v0[6];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  *uint64_t v7 = v1;
  v7[1] = sub_251AB3DD4;
  uint64_t v8 = (uint64_t (*)(void *, uint64_t, void *, void *, void *))((char *)&dword_269B9DD80 + dword_269B9DD80);
  return v8(v2, v3, v4, v5, v6);
}

uint64_t sub_251AE8EB8(uint64_t a1)
{
  return sub_251AE5D84(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_251AE8EC0()
{
  return objectdestroy_215Tm(&qword_269B9DDB8);
}

uint64_t sub_251AE8ECC(uint64_t a1)
{
  return sub_251AE8EE0(a1, &qword_269B9DDB8, (Class *)0x263F10FC8);
}

uint64_t sub_251AE8EE0(uint64_t a1, uint64_t *a2, Class *a3)
{
  uint64_t v7 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a2) - 8);
  return sub_251AE63EC(a1, v3 + ((*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)), a3, a2);
}

uint64_t sub_251AE8F5C()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_251AE8F94(uint64_t a1)
{
  return sub_251AE5F38(a1, *(void *)(v1 + 16));
}

uint64_t sub_251AE8FA0()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v5 = (void *)v0[4];
  uint64_t v4 = (void *)v0[5];
  id v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *id v6 = v1;
  v6[1] = sub_251AB3DD4;
  uint64_t v7 = (uint64_t (*)(uint64_t, void *, void *, void *))((char *)&dword_269B9DDC0 + dword_269B9DDC0);
  return v7(v2, v3, v5, v4);
}

uint64_t sub_251AE9068(uint64_t a1)
{
  return sub_251AE56A8(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
}

uint64_t sub_251AE9074()
{
  return objectdestroy_215Tm(&qword_269B9DDF0);
}

uint64_t sub_251AE9080(uint64_t a1)
{
  return sub_251AE8EE0(a1, &qword_269B9DDF0, (Class *)0x263F10F70);
}

uint64_t sub_251AE9094()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_251AE90A4(uint64_t a1)
{
  return sub_251AE9594(a1, 4);
}

void sub_251AE90B0()
{
}

void sub_251AE90BC(void *a1)
{
  sub_251AE3B08(*(void *)(v1 + 16), *(void (**)(void))(v1 + 24), *(void *)(v1 + 32), *(void (**)(uint64_t *))(v1 + 40), *(void *)(v1 + 48), a1);
}

uint64_t objectdestroy_249Tm()
{
  _Block_release(*(const void **)(v0 + 32));
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_251AE9138()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v5 = (void *)v0[4];
  uint64_t v4 = (void *)v0[5];
  id v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *id v6 = v1;
  v6[1] = sub_251AB3DD4;
  uint64_t v7 = (uint64_t (*)(uint64_t, void *, void *, void *))((char *)&dword_269B9DDF8 + dword_269B9DDF8);
  return v7(v2, v3, v5, v4);
}

uint64_t sub_251AE9200(uint64_t a1)
{
  return sub_251AE5278(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
}

uint64_t sub_251AE920C()
{
  return objectdestroy_215Tm(&qword_269B9DDF0);
}

uint64_t sub_251AE9218()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_251AE922C()
{
  uint64_t v2 = (void *)v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = (void *)v0[4];
  uint64_t v5 = (void *)v0[5];
  id v6 = (void *)v0[6];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  *uint64_t v7 = v1;
  v7[1] = sub_251AB3DD4;
  uint64_t v8 = (uint64_t (*)(void *, uint64_t, void *, void *, void *))((char *)&dword_269B9DE20 + dword_269B9DE20);
  return v8(v2, v3, v4, v5, v6);
}

uint64_t sub_251AE92FC(uint64_t a1)
{
  return sub_251AE4D40(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
}

uint64_t sub_251AE9308()
{
  return objectdestroy_215Tm(&qword_269B9DE48);
}

uint64_t sub_251AE9314(uint64_t a1)
{
  return sub_251AE8EE0(a1, &qword_269B9DE48, (Class *)0x263F10F50);
}

uint64_t sub_251AE9328()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_251AE9338(uint64_t a1)
{
  return sub_251AE9594(a1, 1);
}

void sub_251AE9344()
{
}

uint64_t sub_251AE9354()
{
  uint64_t v2 = (void *)v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = (void *)v0[4];
  uint64_t v5 = (void *)v0[5];
  id v6 = (void *)v0[6];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  *uint64_t v7 = v1;
  v7[1] = sub_251AB3A34;
  uint64_t v8 = (uint64_t (*)(void *, uint64_t, void *, void *, void *))((char *)&dword_269B9DE50 + dword_269B9DE50);
  return v8(v2, v3, v4, v5, v6);
}

uint64_t objectdestroy_198Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_251AE9464(uint64_t a1)
{
  return sub_251AE45DC(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
}

uint64_t sub_251AE9470()
{
  return objectdestroy_215Tm(&qword_269B9DE80);
}

uint64_t objectdestroy_215Tm(uint64_t *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v6 = v5 + *(void *)(v3 + 64);
  uint64_t v7 = v4 | 7;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);
  return MEMORY[0x270FA0238](v1, v6, v7);
}

uint64_t sub_251AE9508(uint64_t a1)
{
  return sub_251AE8EE0(a1, &qword_269B9DE80, (Class *)0x263F10F90);
}

uint64_t sub_251AE951C()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

void sub_251AE9530()
{
}

uint64_t sub_251AE953C()
{
  _Block_release(*(const void **)(v0 + 16));
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_251AE9574(uint64_t a1)
{
  sub_251AE3F4C(a1, *(void *)(v1 + 16));
}

uint64_t sub_251AE957C()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_251AE958C(uint64_t a1)
{
  return sub_251AE9594(a1, 0);
}

uint64_t sub_251AE9594(uint64_t a1, int a2)
{
  char v3 = *(unsigned char *)(v2 + 16);
  uint64_t v6 = MEMORY[0x263F8E778];
  v5[0] = v3;
  return sub_2519F8580((uint64_t)v5, a2);
}

void sub_251AE95E0()
{
}

uint64_t sub_251AE95EC()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t objectdestroy_224Tm()
{
  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 56, 7);
}

void sub_251AE964C()
{
}

uint64_t sub_251AE9658(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_251AE9668()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_251AE9678()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_251AE9688()
{
  char v1 = *(unsigned char *)(v0 + 16);
  uint64_t v4 = MEMORY[0x263F8D4F8];
  v3[0] = v1;
  return sub_2519F8580((uint64_t)v3, 0);
}

uint64_t static UUID.matterObjectIdentifier(deviceID:endpointID:)@<X0>(uint64_t a1@<X0>, __int16 a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v11 = a1;
  sub_251AE9AC8();
  sub_251F358A0();
  uint64_t result = sub_251F357C0();
  if (__OFSUB__(16, result))
  {
    __break(1u);
    goto LABEL_6;
  }
  MEMORY[0x2533AA7D0](48, 0xE100000000000000, 16 - result);
  swift_bridgeObjectRetain();
  sub_251F35800();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = 0x4445454446464544;
  unint64_t v12 = 0xE800000000000000;
  sub_251F35800();
  swift_bridgeObjectRelease();
  LOWORD(v11) = a2;
  sub_251AE9B1C();
  sub_251F358A0();
  uint64_t result = sub_251F357C0();
  if (__OFSUB__(8, result))
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  MEMORY[0x2533AA7D0](48, 0xE100000000000000, 8 - result);
  swift_bridgeObjectRetain();
  sub_251F35800();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = 0x4445454446464544;
  unint64_t v12 = 0xE800000000000000;
  swift_bridgeObjectRetain();
  sub_251F35800();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_251F357F0();
  swift_bridgeObjectRelease();
  sub_251F35810();
  swift_bridgeObjectRetain();
  sub_251F357F0();
  swift_bridgeObjectRelease();
  sub_251F35810();
  swift_bridgeObjectRetain();
  sub_251F357F0();
  swift_bridgeObjectRelease();
  sub_251F35810();
  swift_bridgeObjectRetain();
  sub_251F357F0();
  swift_bridgeObjectRelease();
  sub_251F35810();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_251F34D30();
  swift_bridgeObjectRelease();
  uint64_t v9 = sub_251F34DA0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9);
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a3, v8, v9);
  }
LABEL_7:
  __break(1u);
  return result;
}

unint64_t sub_251AE9AC8()
{
  unint64_t result = qword_269B9DE88;
  if (!qword_269B9DE88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9DE88);
  }
  return result;
}

unint64_t sub_251AE9B1C()
{
  unint64_t result = qword_269B9DE90;
  if (!qword_269B9DE90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9DE90);
  }
  return result;
}

uint64_t static UUID.matterUUIDHeader.getter()
{
  return 0x4445454446464544;
}

uint64_t UUID.isMatterDevice.getter()
{
  sub_251F34D40();
  char v0 = sub_251F35870();
  swift_bridgeObjectRelease();
  return v0 & 1;
}

uint64_t static UUID.transferRepresentation.getter()
{
  uint64_t v0 = sub_251F34FA0();
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34F90();
  uint64_t v3 = sub_251F34DA0();
  unint64_t v4 = sub_251AE9EF4();
  return MEMORY[0x2533A9EB0](v2, &unk_269B9DE98, 0, &unk_269B9DEA0, 0, v3, v4);
}

uint64_t sub_251AE9CA8(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return MEMORY[0x270FA2498](sub_251AE9CC8, 0, 0);
}

uint64_t sub_251AE9CC8()
{
  sub_251F345B0();
  swift_allocObject();
  sub_251F345A0();
  sub_251F34DA0();
  sub_251A1A8EC(&qword_26B21E348);
  uint64_t v1 = sub_251F34590();
  uint64_t v3 = v2;
  swift_release();
  unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v4(v1, v3);
}

uint64_t sub_251AE9DE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return MEMORY[0x270FA2498](sub_251AE9E0C, 0, 0);
}

uint64_t sub_251AE9E0C()
{
  sub_251F34540();
  swift_allocObject();
  sub_251F34530();
  sub_251F34DA0();
  sub_251A1A8EC(&qword_269B9CC80);
  sub_251F34520();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

unint64_t sub_251AE9EF4()
{
  unint64_t result = qword_269B9DEA8;
  if (!qword_269B9DEA8)
  {
    sub_251F34DA0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9DEA8);
  }
  return result;
}

uint64_t sub_251AE9F4C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_251AE9F68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_251F34FA0();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34F90();
  return MEMORY[0x2533A9EB0](v6, &unk_269B9DE98, 0, &unk_269B9DEA0, 0, a1, a2);
}

unint64_t sub_251AEA030()
{
  unint64_t result = qword_269B9DEB0;
  if (!qword_269B9DEB0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B9DEB8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9DEB0);
  }
  return result;
}

uint64_t static DataModel.fireAndForget(_:)(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  v2[4] = swift_task_alloc();
  v2[5] = sub_251F35C80();
  v2[6] = sub_251F35C70();
  uint64_t v4 = sub_251F35C00();
  v2[7] = v4;
  v2[8] = v3;
  return MEMORY[0x270FA2498](sub_251AEA14C, v4, v3);
}

uint64_t sub_251AEA14C()
{
  id v1 = objc_msgSend(self, sel_processInfo);
  id v2 = objc_msgSend(v1, sel_environment);

  uint64_t v3 = sub_251F35550();
  if (*(void *)(v3 + 16) && (sub_2519FE798(0xD00000000000001BLL, 0x8000000251F68FC0), (v4 & 1) != 0))
  {
    uint64_t v5 = (int *)v0[2];
    swift_bridgeObjectRelease();
    char v16 = (uint64_t (*)(void))((char *)v5 + *v5);
    uint64_t v6 = (void *)swift_task_alloc();
    v0[9] = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_251AEA3C0;
    return v16();
  }
  else
  {
    uint64_t v9 = v0[3];
    uint64_t v8 = v0[4];
    uint64_t v10 = v0[2];
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v11 = sub_251F35CD0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v8, 1, 1, v11);
    swift_retain();
    uint64_t v12 = sub_251F35C70();
    uint64_t v13 = (void *)swift_allocObject();
    uint64_t v14 = MEMORY[0x263F8F500];
    void v13[2] = v12;
    void v13[3] = v14;
    long long v13[4] = v10;
    void v13[5] = v9;
    sub_251ACBB48(v8, (uint64_t)&unk_269B9D9C8, (uint64_t)v13);
    swift_release();
    swift_task_dealloc();
    uint64_t v15 = (uint64_t (*)(void))v0[1];
    return v15();
  }
}

uint64_t sub_251AEA3C0()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t v3 = *(void *)(v1 + 56);
  return MEMORY[0x270FA2498](sub_251AEA4E0, v3, v2);
}

uint64_t sub_251AEA4E0()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251AEA548(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  v4[2] = sub_251F35C80();
  v4[3] = sub_251F35C70();
  uint64_t v8 = (uint64_t (*)(void))((char *)a4 + *a4);
  uint64_t v6 = (void *)swift_task_alloc();
  void v4[4] = v6;
  *uint64_t v6 = v4;
  v6[1] = sub_251AEA63C;
  return v8();
}

uint64_t sub_251AEA63C()
{
  swift_task_dealloc();
  uint64_t v1 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251AEA778, v1, v0);
}

uint64_t sub_251AEA778()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_251AEA7D8()
{
  swift_unknownObjectRelease();
  swift_release();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_251AEA818(uint64_t a1)
{
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  unint64_t v4 = v3 & *(void *)(a1 + 64);
  v66[1] = v66;
  uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC38);
  MEMORY[0x270FA5388](v71);
  uint64_t v69 = (char *)v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = v5;
  int64_t v68 = (unint64_t)(v2 + 63) >> 6;
  uint64_t v72 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  for (int64_t i = 0; ; int64_t i = v88)
  {
    if (v4)
    {
      uint64_t v77 = (v4 - 1) & v4;
      int64_t v88 = i;
      unint64_t v10 = __clz(__rbit64(v4)) | (i << 6);
      goto LABEL_25;
    }
    int64_t v11 = i + 1;
    if (__OFADD__(i, 1))
    {
      __break(1u);
      goto LABEL_55;
    }
    if (v11 >= v68) {
      return swift_release();
    }
    unint64_t v12 = *(void *)(v67 + 8 * v11);
    int64_t v13 = i + 1;
    if (!v12)
    {
      int64_t v13 = i + 2;
      if (i + 2 >= v68) {
        return swift_release();
      }
      unint64_t v12 = *(void *)(v67 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = i + 3;
        if (i + 3 >= v68) {
          return swift_release();
        }
        unint64_t v12 = *(void *)(v67 + 8 * v13);
        if (!v12)
        {
          int64_t v13 = i + 4;
          if (i + 4 >= v68) {
            return swift_release();
          }
          unint64_t v12 = *(void *)(v67 + 8 * v13);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_24:
    uint64_t v77 = (v12 - 1) & v12;
    int64_t v88 = v13;
    unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
LABEL_25:
    uint64_t v15 = v72;
    uint64_t v16 = *(void *)(v72 + 48);
    uint64_t v17 = sub_251F34DA0();
    uint64_t v18 = *(void *)(v17 - 8);
    uint64_t v19 = v16 + *(void *)(v18 + 72) * v10;
    uint64_t v20 = (uint64_t)v69;
    (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v69, v19, v17);
    uint64_t v21 = (long long *)(*(void *)(v15 + 56) + (v10 << 7));
    long long v23 = *v21;
    long long v22 = v21[1];
    long long v24 = v21[2];
    v86[3] = v21[3];
    long long v25 = v21[7];
    long long v27 = v21[4];
    long long v26 = v21[5];
    v86[6] = v21[6];
    v86[7] = v25;
    v86[4] = v27;
    v86[5] = v26;
    v86[1] = v22;
    v86[2] = v24;
    v86[0] = v23;
    uint64_t v28 = v71;
    uint64_t v29 = memmove((void *)(v20 + *(int *)(v71 + 48)), v21, 0x80uLL);
    uint64_t v76 = v66;
    MEMORY[0x270FA5388](v29);
    uint64_t v31 = (char *)v66 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_251AF06E4(v20, (uint64_t)v31);
    uint64_t v32 = *(int *)(v28 + 48);
    uint64_t v75 = v31;
    uint64_t v33 = &v31[v32];
    long long v34 = *((_OWORD *)v33 + 1);
    v86[8] = *(_OWORD *)v33;
    v86[9] = v34;
    v86[10] = *((_OWORD *)v33 + 2);
    uint64_t v35 = *((void *)v33 + 7);
    uint64_t v87 = *((void *)v33 + 6);
    uint64_t v37 = *((void *)v33 + 8);
    uint64_t v36 = *((void *)v33 + 9);
    uint64_t v38 = *((void *)v33 + 10);
    uint64_t v39 = *((void *)v33 + 12);
    uint64_t v40 = *((void *)v33 + 13);
    uint64_t v73 = *((void *)v33 + 11);
    uint64_t v74 = v39;
    sub_251A1A678((uint64_t)v86);
    sub_251C7ADB0();
    uint64_t v41 = v40 + 16;
    if (v35)
    {
      sub_251A1A4EC(v40 + 16, (uint64_t)v81);
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DF58);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DF60);
      if (swift_dynamicCast())
      {
        sub_251A1A444(&v78, (uint64_t)v83);
        uint64_t v42 = v84;
        uint64_t v43 = v85;
        __swift_project_boxed_opaque_existential_1(v83, v84);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 72))(v35, v42, v43);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v83);
      }
      else
      {
        uint64_t v80 = 0;
        long long v78 = 0u;
        long long v79 = 0u;
        sub_251A1B064((uint64_t)&v78, &qword_269B9DF68);
      }
      sub_251A1A4EC(v41, (uint64_t)v83);
      uint64_t v44 = v84;
      uint64_t v45 = v85;
      __swift_project_boxed_opaque_existential_1(v83, v84);
      uint64_t ObjectType = swift_getObjectType();
      v81[0] = v35;
      (*(void (**)(void *, uint64_t, uint64_t))(v45 + 56))(v81, v44, v45);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v81);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v83);
    }
    if (v37)
    {
      sub_251A1A4EC(v41, (uint64_t)v81);
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DF58);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DF60);
      if (swift_dynamicCast())
      {
        sub_251A1A444(&v78, (uint64_t)v83);
        uint64_t v46 = v84;
        uint64_t v47 = v85;
        __swift_project_boxed_opaque_existential_1(v83, v84);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 72))(v37, v46, v47);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v83);
      }
      else
      {
        uint64_t v80 = 0;
        long long v78 = 0u;
        long long v79 = 0u;
        sub_251A1B064((uint64_t)&v78, &qword_269B9DF68);
      }
      sub_251A1A4EC(v41, (uint64_t)v83);
      uint64_t v48 = v84;
      uint64_t v49 = v85;
      __swift_project_boxed_opaque_existential_1(v83, v84);
      uint64_t ObjectType = swift_getObjectType();
      v81[0] = v37;
      (*(void (**)(void *, uint64_t, uint64_t))(v49 + 56))(v81, v48, v49);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v81);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v83);
    }
    uint64_t v50 = v74;
    if (v36)
    {
      sub_251A1A4EC(v41, (uint64_t)v81);
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DF58);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DF60);
      if (swift_dynamicCast())
      {
        sub_251A1A444(&v78, (uint64_t)v83);
        uint64_t v51 = v84;
        uint64_t v52 = v85;
        __swift_project_boxed_opaque_existential_1(v83, v84);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 72))(v36, v51, v52);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v83);
      }
      else
      {
        uint64_t v80 = 0;
        long long v78 = 0u;
        long long v79 = 0u;
        sub_251A1B064((uint64_t)&v78, &qword_269B9DF68);
      }
      sub_251A1A4EC(v41, (uint64_t)v83);
      uint64_t v53 = v84;
      uint64_t v54 = v85;
      __swift_project_boxed_opaque_existential_1(v83, v84);
      uint64_t ObjectType = swift_getObjectType();
      v81[0] = v36;
      (*(void (**)(void *, uint64_t, uint64_t))(v54 + 56))(v81, v53, v54);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v81);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v83);
    }
    unint64_t v4 = v77;
    if (v38)
    {
      sub_251A1A4EC(v41, (uint64_t)v81);
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DF58);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DF60);
      if (swift_dynamicCast())
      {
        sub_251A1A444(&v78, (uint64_t)v83);
        uint64_t v55 = v84;
        uint64_t v56 = v85;
        __swift_project_boxed_opaque_existential_1(v83, v84);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 72))(v38, v55, v56);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v83);
      }
      else
      {
        uint64_t v80 = 0;
        long long v78 = 0u;
        long long v79 = 0u;
        sub_251A1B064((uint64_t)&v78, &qword_269B9DF68);
      }
      sub_251A1A4EC(v41, (uint64_t)v83);
      uint64_t v57 = v84;
      uint64_t v58 = v85;
      __swift_project_boxed_opaque_existential_1(v83, v84);
      uint64_t ObjectType = swift_getObjectType();
      v81[0] = v38;
      (*(void (**)(void *, uint64_t, uint64_t))(v58 + 56))(v81, v57, v58);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v81);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v83);
    }
    uint64_t v59 = v73;
    if (v73)
    {
      sub_251A1A4EC(v41, (uint64_t)v81);
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DF58);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DF60);
      if (swift_dynamicCast())
      {
        sub_251A1A444(&v78, (uint64_t)v83);
        uint64_t v60 = v84;
        uint64_t v61 = v85;
        __swift_project_boxed_opaque_existential_1(v83, v84);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v61 + 72))(v59, v60, v61);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v83);
      }
      else
      {
        uint64_t v80 = 0;
        long long v78 = 0u;
        long long v79 = 0u;
        sub_251A1B064((uint64_t)&v78, &qword_269B9DF68);
      }
      sub_251A1A4EC(v41, (uint64_t)v83);
      uint64_t v62 = v84;
      uint64_t v63 = v85;
      __swift_project_boxed_opaque_existential_1(v83, v84);
      uint64_t ObjectType = swift_getObjectType();
      v81[0] = v59;
      (*(void (**)(void *, uint64_t, uint64_t))(v63 + 56))(v81, v62, v63);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v81);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v83);
    }
    if (v50)
    {
      sub_251A1A4EC(v41, (uint64_t)v81);
      swift_unknownObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DF58);
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DF60);
      if (swift_dynamicCast())
      {
        sub_251A1A444(&v78, (uint64_t)v83);
        uint64_t v64 = v84;
        uint64_t v65 = v85;
        __swift_project_boxed_opaque_existential_1(v83, v84);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v65 + 72))(v50, v64, v65);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v83);
      }
      else
      {
        uint64_t v80 = 0;
        long long v78 = 0u;
        long long v79 = 0u;
        sub_251A1B064((uint64_t)&v78, &qword_269B9DF68);
      }
      sub_251A1A4EC(v41, (uint64_t)v83);
      uint64_t v8 = v84;
      uint64_t v9 = v85;
      __swift_project_boxed_opaque_existential_1(v83, v84);
      uint64_t ObjectType = swift_getObjectType();
      v81[0] = v50;
      (*(void (**)(void *, uint64_t, uint64_t))(v9 + 56))(v81, v8, v9);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v81);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v83);
    }
    sub_251C6E818();
    uint64_t result = sub_251A1B064((uint64_t)v75, &qword_26B21EC38);
  }
  uint64_t v14 = i + 5;
  if (i + 5 >= v68) {
    return swift_release();
  }
  unint64_t v12 = *(void *)(v67 + 8 * v14);
  if (v12)
  {
    int64_t v13 = i + 5;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v13 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v13 >= v68) {
      return swift_release();
    }
    unint64_t v12 = *(void *)(v67 + 8 * v13);
    ++v14;
    if (v12) {
      goto LABEL_24;
    }
  }
LABEL_55:
  __break(1u);
  return result;
}

uint64_t sub_251AEB1EC@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_251F35120();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_251AEB26C(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  id v3 = v2;
  return sub_251F35130();
}

uint64_t sub_251AEB2E4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_251F35120();
  swift_release();
  return swift_release();
}

uint64_t sub_251AEB35C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  id v1 = v0;
  return sub_251F35130();
}

void (*sub_251AEB3C8(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_251F35110();
  return sub_251AEB454;
}

void sub_251AEB454(void *a1)
{
  id v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 48))(*a1, 0);
  swift_release();
  swift_release();
  free(v1);
}

uint64_t sub_251AEB4BC()
{
  return swift_endAccess();
}

uint64_t sub_251AEB524(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DEF8);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v11 - v7;
  uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v9((char *)&v11 - v7, a1, v2);
  v9(v6, (uint64_t)v8, v2);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EAA0);
  sub_251F35100();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
}

uint64_t sub_251AEB698()
{
  return swift_endAccess();
}

uint64_t sub_251AEB6FC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DEF8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EAA0);
  sub_251F35100();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

void (*sub_251AEB828(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DEF8);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel__currentStateSnapshot;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EAA0);
  sub_251F350F0();
  swift_endAccess();
  return sub_251AEB938;
}

void sub_251AEB938(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  uint64_t v4 = *(void (**)(void, void, void))(*(void *)(*(void *)a1 + 88) + 16);
  v4(*(void *)(*(void *)a1 + 104), v3[14], v3[10]);
  uint64_t v5 = (void *)v3[14];
  size_t v6 = (void *)v3[12];
  uint64_t v7 = (void *)v3[13];
  uint64_t v8 = v3[10];
  uint64_t v9 = v3[11];
  if (a2)
  {
    v4(v3[12], v3[13], v3[10]);
    swift_beginAccess();
    sub_251F35100();
    swift_endAccess();
    unint64_t v10 = *(void (**)(void *, uint64_t))(v9 + 8);
    v10(v7, v8);
    v10(v5, v8);
  }
  else
  {
    swift_beginAccess();
    sub_251F35100();
    swift_endAccess();
    (*(void (**)(void *, uint64_t))(v9 + 8))(v5, v8);
  }
  free(v5);
  free(v7);
  free(v6);
  free(v3);
}

uint64_t sub_251AEBAA8(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a2 + OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_managers);
  swift_beginAccess();
  *uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_251AEBB14()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_251AEBB60(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_managers);
  swift_beginAccess();
  *uint64_t v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_251AEBBB4())()
{
  return j_j__swift_endAccess;
}

uint64_t (*sub_251AEBC10())()
{
  return j__swift_endAccess;
}

uint64_t (*sub_251AEBC6C())()
{
  return j_j__swift_endAccess;
}

void *sub_251AEBCC8()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_currentHome);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void sub_251AEBD18(void *a1)
{
  sub_251AEFC9C(a1);
}

uint64_t (*sub_251AEBD50(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_251AEBDB0;
}

uint64_t sub_251AEBDB0(uint64_t a1, char a2)
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v5 = (void *)(*(void *)(a1 + 24) + OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_managers);
    swift_beginAccess();
    uint64_t v6 = swift_bridgeObjectRetain();
    sub_251AEA818(v6);
    swift_bridgeObjectRelease();
    *uint64_t v5 = sub_2519FADF4(MEMORY[0x263F8EE78]);
    return swift_bridgeObjectRelease();
  }
  return result;
}

id sub_251AEBE68()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B220BB0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EAA0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel__currentStateSnapshot;
  uint64_t v10 = qword_26B21E9A8;
  uint64_t v11 = v0;
  if (v10 != -1) {
    swift_once();
  }
  uint64_t v29 = qword_26B220CA8;
  swift_bridgeObjectRetain();
  sub_251F350E0();
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v11[v9], v8, v5);
  uint64_t v12 = OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_managers;
  uint64_t v13 = MEMORY[0x263F8EE78];
  *(void *)&v11[v12] = sub_2519FADF4(MEMORY[0x263F8EE78]);
  uint64_t v14 = OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_homeAlarms;
  *(void *)&v11[v14] = sub_2519FB03C(v13);
  uint64_t v15 = OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_homeTimers;
  *(void *)&v11[v15] = sub_2519FB050(v13);
  *(void *)&v11[OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_currentHome] = 0;
  uint64_t v16 = OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_incomingCoordinationMessagesQueue;
  id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A50]), sel_init);
  uint64_t v18 = (void *)sub_251F356C0();
  objc_msgSend(v17, sel_setName_, v18);

  objc_msgSend(v17, sel_setMaxConcurrentOperationCount_, 1);
  *(void *)&v11[v16] = v17;

  uint64_t v19 = (objc_class *)type metadata accessor for CoordinationDataModel();
  v28.receiver = v11;
  v28.super_class = v19;
  id v20 = objc_msgSendSuper2(&v28, sel_init);
  uint64_t v21 = sub_251F35CD0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v4, 1, 1, v21);
  sub_251F35C80();
  id v22 = v20;
  uint64_t v23 = sub_251F35C70();
  long long v24 = (void *)swift_allocObject();
  uint64_t v25 = MEMORY[0x263F8F500];
  v24[2] = v23;
  v24[3] = v25;
  v24[4] = v22;
  v24[5] = ObjectType;
  sub_251ACBB48((uint64_t)v4, (uint64_t)&unk_269B9DF20, (uint64_t)v24);

  swift_release();
  return v22;
}

uint64_t sub_251AEC1A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  uint64_t updated = type metadata accessor for CoordinationSnapshot.UpdateType();
  v4[3] = updated;
  void v4[4] = *(void *)(updated - 8);
  v4[5] = swift_task_alloc();
  v4[6] = swift_task_alloc();
  v4[7] = swift_task_alloc();
  v4[8] = swift_task_alloc();
  v4[9] = swift_task_alloc();
  v4[10] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E930);
  v4[11] = swift_task_alloc();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EAE8);
  v4[12] = v6;
  v4[13] = *(void *)(v6 - 8);
  v4[14] = swift_task_alloc();
  v4[15] = sub_251F35C80();
  v4[16] = sub_251F35C70();
  uint64_t v8 = sub_251F35C00();
  v4[17] = v8;
  v4[18] = v7;
  return MEMORY[0x270FA2498](sub_251AEC368, v8, v7);
}

uint64_t sub_251AEC368()
{
  if (qword_26B21E180 != -1) {
    swift_once();
  }
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EAF0);
  __swift_project_value_buffer(v1, (uint64_t)qword_26B21E368);
  sub_251F35D20();
  uint64_t v2 = sub_251F35C70();
  v0[19] = v2;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[20] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_251AEC484;
  uint64_t v4 = v0[11];
  uint64_t v5 = v0[12];
  uint64_t v6 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1F68](v4, v2, v6, v5);
}

uint64_t sub_251AEC484()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 144);
  uint64_t v3 = *(void *)(v1 + 136);
  return MEMORY[0x270FA2498](sub_251AEC5C8, v3, v2);
}

uint64_t sub_251AEC5C8()
{
  uint64_t v44 = v0;
  uint64_t v1 = v0[11];
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(v0[4] + 48))(v1, 1, v0[3]) == 1)
  {
    (*(void (**)(void, void))(v0[13] + 8))(v0[14], v0[12]);
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = (uint64_t (*)(void))v0[1];
    return v2();
  }
  uint64_t v5 = v0[9];
  uint64_t v4 = v0[10];
  sub_251AF05C0(v1, v4);
  sub_251AF0624(v4, v5);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v7 = (unsigned __int8 *)v0[9];
  if (EnumCaseMultiPayload == 6)
  {
    int v8 = *v7;
    if (qword_26B21F2C0 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_251F350A0();
    __swift_project_value_buffer(v9, (uint64_t)qword_26B21F290);
    uint64_t v10 = sub_251F35080();
    os_log_type_t v11 = sub_251F35FA0();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 67109120;
      *(_DWORD *)(v12 + 4) = v8;
      _os_log_impl(&dword_2519F3000, v10, v11, "CoordinationDataModel received a snapshotStream update to disable: %{BOOL}d", (uint8_t *)v12, 8u);
      MEMORY[0x2533AC760](v12, -1, -1);
    }

LABEL_22:
    uint64_t v36 = (void *)swift_task_alloc();
    v0[21] = v36;
    *uint64_t v36 = v0;
    v36[1] = sub_251AECB9C;
    uint64_t v37 = v0[10];
    return sub_251C60A00(v37);
  }
  sub_251AF0688((uint64_t)v7);
  if (byte_269B9DED0)
  {
    if (qword_26B21F2C0 != -1) {
      swift_once();
    }
    uint64_t v13 = v0[10];
    uint64_t v14 = v0[7];
    uint64_t v15 = sub_251F350A0();
    __swift_project_value_buffer(v15, (uint64_t)qword_26B21F290);
    sub_251AF0624(v13, v14);
    uint64_t v16 = sub_251F35080();
    os_log_type_t v17 = sub_251F35FA0();
    BOOL v18 = os_log_type_enabled(v16, v17);
    uint64_t v19 = v0[7];
    if (v18)
    {
      uint64_t v20 = swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      uint64_t v43 = v21;
      *(_DWORD *)uint64_t v20 = 136315138;
      uint64_t updated = CoordinationSnapshot.UpdateType.description.getter();
      *(void *)(v20 + 4) = sub_251A00E84(updated, v23, &v43);
      swift_bridgeObjectRelease();
      sub_251AF0688(v19);
      _os_log_impl(&dword_2519F3000, v16, v17, "CoordinationDataModel processing update %s", (uint8_t *)v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v21, -1, -1);
      MEMORY[0x2533AC760](v20, -1, -1);
    }
    else
    {
      sub_251AF0688(v0[7]);
    }

    goto LABEL_22;
  }
  if (qword_26B21F2C0 != -1) {
    swift_once();
  }
  uint64_t v24 = v0[10];
  uint64_t v25 = v0[8];
  uint64_t v26 = sub_251F350A0();
  __swift_project_value_buffer(v26, (uint64_t)qword_26B21F290);
  sub_251AF0624(v24, v25);
  uint64_t v27 = sub_251F35080();
  os_log_type_t v28 = sub_251F35FA0();
  BOOL v29 = os_log_type_enabled(v27, v28);
  uint64_t v30 = v0[10];
  uint64_t v31 = v0[8];
  if (v29)
  {
    uint64_t v32 = swift_slowAlloc();
    uint64_t v33 = swift_slowAlloc();
    uint64_t v43 = v33;
    *(_DWORD *)uint64_t v32 = 136315138;
    uint64_t v34 = CoordinationSnapshot.UpdateType.description.getter();
    *(void *)(v32 + 4) = sub_251A00E84(v34, v35, &v43);
    swift_bridgeObjectRelease();
    sub_251AF0688(v31);
    _os_log_impl(&dword_2519F3000, v27, v28, "CoordinationDataModel updates on streamTask are halted, skipping update: %s", (uint8_t *)v32, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v33, -1, -1);
    MEMORY[0x2533AC760](v32, -1, -1);
  }
  else
  {

    sub_251AF0688(v31);
  }
  sub_251AF0688(v30);
  uint64_t v38 = sub_251F35C70();
  v0[19] = v38;
  uint64_t v39 = (void *)swift_task_alloc();
  v0[20] = v39;
  *uint64_t v39 = v0;
  v39[1] = sub_251AEC484;
  uint64_t v40 = v0[11];
  uint64_t v41 = v0[12];
  uint64_t v42 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1F68](v40, v38, v42, v41);
}

uint64_t sub_251AECB9C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 144);
  uint64_t v3 = *(void *)(v1 + 136);
  return MEMORY[0x270FA2498](sub_251AECCBC, v3, v2);
}

uint64_t sub_251AECCBC()
{
  uint64_t v31 = v0;
  if ((byte_269B9DED0 & 1) == 0)
  {
    if (qword_26B21F2C0 != -1) {
      swift_once();
    }
    uint64_t v1 = v0[10];
    uint64_t v2 = v0[6];
    uint64_t v3 = sub_251F350A0();
    __swift_project_value_buffer(v3, (uint64_t)qword_26B21F290);
    sub_251AF0624(v1, v2);
    uint64_t v4 = sub_251F35080();
    os_log_type_t v5 = sub_251F35FA0();
    BOOL v6 = os_log_type_enabled(v4, v5);
    uint64_t v7 = v0[6];
    if (v6)
    {
      uint64_t v8 = swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      uint64_t v30 = v9;
      *(_DWORD *)uint64_t v8 = 136315138;
      uint64_t updated = CoordinationSnapshot.UpdateType.description.getter();
      *(void *)(v8 + 4) = sub_251A00E84(updated, v11, &v30);
      swift_bridgeObjectRelease();
      sub_251AF0688(v7);
      _os_log_impl(&dword_2519F3000, v4, v5, "CoordinationDataModel Calling streamUpdateCompleted for update: %s", (uint8_t *)v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v9, -1, -1);
      MEMORY[0x2533AC760](v8, -1, -1);
    }
    else
    {
      sub_251AF0688(v0[6]);
    }
  }
  if (qword_26B21F2C0 != -1) {
    swift_once();
  }
  uint64_t v12 = v0[10];
  uint64_t v13 = v0[5];
  uint64_t v14 = sub_251F350A0();
  __swift_project_value_buffer(v14, (uint64_t)qword_26B21F290);
  sub_251AF0624(v12, v13);
  uint64_t v15 = sub_251F35080();
  os_log_type_t v16 = sub_251F35FA0();
  BOOL v17 = os_log_type_enabled(v15, v16);
  uint64_t v18 = v0[10];
  uint64_t v19 = v0[5];
  if (v17)
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    uint64_t v30 = v21;
    *(_DWORD *)uint64_t v20 = 136315138;
    uint64_t v22 = CoordinationSnapshot.UpdateType.description.getter();
    *(void *)(v20 + 4) = sub_251A00E84(v22, v23, &v30);
    swift_bridgeObjectRelease();
    sub_251AF0688(v19);
    _os_log_impl(&dword_2519F3000, v15, v16, "CoordinationDataModel asyncStream update handling completed for update: %s", (uint8_t *)v20, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x2533AC760](v21, -1, -1);
    MEMORY[0x2533AC760](v20, -1, -1);
  }
  else
  {

    sub_251AF0688(v19);
  }
  sub_251AF0688(v18);
  uint64_t v24 = sub_251F35C70();
  v0[19] = v24;
  uint64_t v25 = (void *)swift_task_alloc();
  v0[20] = v25;
  *uint64_t v25 = v0;
  v25[1] = sub_251AEC484;
  uint64_t v26 = v0[11];
  uint64_t v27 = v0[12];
  uint64_t v28 = MEMORY[0x263F8F500];
  return MEMORY[0x270FA1F68](v26, v24, v28, v27);
}

id CoordinationDataModel.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CoordinationDataModel();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_251AED14C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for CoordinationDataModel();
  uint64_t result = sub_251F350B0();
  *a1 = result;
  return result;
}

uint64_t sub_251AED18C()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EAF0);
  __swift_allocate_value_buffer(v0, qword_26B21E368);
  __swift_project_value_buffer(v0, (uint64_t)qword_26B21E368);
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EAE0);
  __swift_allocate_value_buffer(v1, qword_26B21E350);
  __swift_project_value_buffer(v1, (uint64_t)qword_26B21E350);
  return sub_251AED224();
}

uint64_t sub_251AED224()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EAD8);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CoordinationSnapshot.UpdateType();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F8F580], v0);
  sub_251F35CE0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EBB8);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_251F38650;
  uint64_t v8 = 0;
  unint64_t v9 = 0xE000000000000000;
  sub_251F36400();
  sub_251F35800();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EAF0);
  sub_251F36640();
  sub_251F35800();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EAE0);
  sub_251F36640();
  uint64_t v5 = v8;
  unint64_t v6 = v9;
  *(void *)(v4 + 56) = MEMORY[0x263F8D310];
  *(void *)(v4 + 32) = v5;
  *(void *)(v4 + 40) = v6;
  sub_251F36C70();
  return swift_bridgeObjectRelease();
}

uint64_t static CoordinationDataModel.stateSnapshotUpdatesStream.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_251AED46C(&qword_26B21EAF0, (uint64_t)qword_26B21E368, a1);
}

uint64_t static CoordinationDataModel.updateStateSnapshot.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_251AED46C(&qword_26B21EAE0, (uint64_t)qword_26B21E350, a1);
}

uint64_t sub_251AED46C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (qword_26B21E180 != -1) {
    swift_once();
  }
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v7 = __swift_project_value_buffer(v6, a2);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  return v8(a3, v7, v6);
}

uint64_t sub_251AED520(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[20] = a6;
  v7[21] = a7;
  v7[18] = a4;
  v7[19] = a5;
  sub_251F35C80();
  v7[22] = sub_251F35C70();
  uint64_t v9 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251AED5BC, v9, v8);
}

uint64_t sub_251AED5BC()
{
  uint64_t v52 = v0;
  uint64_t v2 = v0[19];
  uint64_t v1 = v0[20];
  swift_release();
  uint64_t v3 = sub_251F34DA0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v45 = swift_task_alloc();
  uint64_t v47 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  uint64_t v49 = v3;
  v47(v45, v2, v3);
  unint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = MEMORY[0x263F8EE78];
  uint64_t v50 = v0;
  if (v5)
  {
    uint64_t v7 = v0 + 2;
    uint64_t v8 = v0[20];
    v51[0] = MEMORY[0x263F8EE78];
    sub_251A3E084(0, v5, 0);
    uint64_t v9 = v8 + 32;
    uint64_t v6 = v51[0];
    unint64_t v43 = v5;
    do
    {
      uint64_t v10 = swift_task_alloc();
      sub_251A1A4EC(v9, (uint64_t)v7);
      uint64_t v12 = v50[5];
      uint64_t v11 = v50[6];
      __swift_project_boxed_opaque_existential_1(v7, v12);
      (*(void (**)(uint64_t, uint64_t))(v11 + 56))(v12, v11);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v7);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_251A3E084(0, *(void *)(v6 + 16) + 1, 1);
        uint64_t v6 = v51[0];
      }
      unint64_t v14 = *(void *)(v6 + 16);
      unint64_t v13 = *(void *)(v6 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_251A3E084(v13 > 1, v14 + 1, 1);
        uint64_t v6 = v51[0];
      }
      *(void *)(v6 + 16) = v14 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v6+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v14, v10, v49);
      v51[0] = v6;
      swift_task_dealloc();
      v9 += 40;
      --v5;
    }
    while (v5);
    uint64_t v0 = v50;
    unint64_t v5 = v43;
  }
  if (v5 >= *(void *)(v6 + 16)) {
    unint64_t v15 = *(void *)(v6 + 16);
  }
  else {
    unint64_t v15 = v5;
  }
  if (v15)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C880);
    uint64_t v16 = sub_251F36700();
  }
  else
  {
    uint64_t v16 = MEMORY[0x263F8EE80];
  }
  uint64_t v17 = v0[20];
  v51[0] = v16;
  swift_bridgeObjectRetain();
  sub_251AEF4C8(v6, v17, 1, v51, &qword_269B9DF38, (void (*)(uint64_t, unsigned char *))sub_251A1A444, (void (*)(void))sub_251A06A6C, (void (*)(void))sub_251A14AF0);
  uint64_t v18 = v51[0];
  uint64_t v19 = v0[21];
  uint64_t v20 = v0[19];
  uint64_t v21 = (uint64_t *)(v0[18] + OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_homeAlarms);
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v51[0] = *v21;
  *uint64_t v21 = 0x8000000000000000;
  sub_251A0EB90(v18, v45, isUniquelyReferenced_nonNull_native);
  *uint64_t v21 = v51[0];
  swift_bridgeObjectRelease();
  unint64_t v23 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v23(v45, v49);
  swift_endAccess();
  swift_task_dealloc();
  uint64_t v46 = swift_task_alloc();
  v47(v46, v20, v49);
  unint64_t v24 = *(void *)(v19 + 16);
  uint64_t v25 = MEMORY[0x263F8EE78];
  if (v24)
  {
    uint64_t v48 = v23;
    uint64_t v26 = v0 + 7;
    uint64_t v27 = v0[21];
    v51[0] = MEMORY[0x263F8EE78];
    sub_251A3E084(0, v24, 0);
    uint64_t v28 = v27 + 32;
    uint64_t v25 = v51[0];
    unint64_t v44 = v24;
    unint64_t v29 = v24;
    do
    {
      uint64_t v30 = swift_task_alloc();
      sub_251A1A4EC(v28, (uint64_t)v26);
      uint64_t v31 = v50[10];
      uint64_t v32 = v50[11];
      __swift_project_boxed_opaque_existential_1(v26, v31);
      (*(void (**)(uint64_t, uint64_t))(v32 + 64))(v31, v32);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v26);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_251A3E084(0, *(void *)(v25 + 16) + 1, 1);
        uint64_t v25 = v51[0];
      }
      unint64_t v34 = *(void *)(v25 + 16);
      unint64_t v33 = *(void *)(v25 + 24);
      if (v34 >= v33 >> 1)
      {
        sub_251A3E084(v33 > 1, v34 + 1, 1);
        uint64_t v25 = v51[0];
      }
      *(void *)(v25 + 16) = v34 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v25+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v34, v30, v49);
      v51[0] = v25;
      swift_task_dealloc();
      v28 += 40;
      --v29;
    }
    while (v29);
    uint64_t v0 = v50;
    unint64_t v23 = v48;
    unint64_t v24 = v44;
  }
  if (v24 >= *(void *)(v25 + 16)) {
    unint64_t v35 = *(void *)(v25 + 16);
  }
  else {
    unint64_t v35 = v24;
  }
  if (v35)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C870);
    uint64_t v36 = sub_251F36700();
  }
  else
  {
    uint64_t v36 = MEMORY[0x263F8EE80];
  }
  uint64_t v37 = v0[21];
  v51[0] = v36;
  swift_bridgeObjectRetain();
  sub_251AEF4C8(v25, v37, 1, v51, &qword_269B9DF30, (void (*)(uint64_t, unsigned char *))sub_251A1A444, (void (*)(void))sub_251A06A40, (void (*)(void))sub_251A14AC4);
  uint64_t v38 = v51[0];
  uint64_t v39 = (uint64_t *)(v0[18] + OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_homeTimers);
  swift_beginAccess();
  char v40 = swift_isUniquelyReferenced_nonNull_native();
  v51[0] = *v39;
  *uint64_t v39 = 0x8000000000000000;
  sub_251A0E9D0(v38, v46, v40);
  *uint64_t v39 = v51[0];
  swift_bridgeObjectRelease();
  v23(v46, v49);
  swift_endAccess();
  swift_task_dealloc();
  uint64_t v41 = (uint64_t (*)(void))v0[1];
  return v41();
}

uint64_t sub_251AEDC3C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + 232) = a6;
  *(void *)(v7 + 240) = a7;
  *(void *)(v7 + 224) = a5;
  *(unsigned char *)(v7 + 256) = a4;
  sub_251F35C80();
  *(void *)(v7 + 248) = sub_251F35C70();
  uint64_t v9 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251AEDCDC, v9, v8);
}

uint64_t sub_251AEDCDC()
{
  uint64_t v1 = *(void *)(v0 + 224);
  int v2 = *(unsigned __int8 *)(v0 + 256);
  swift_release();
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v67 = v0;
  if (v2 == 1)
  {
    if (v3)
    {
      uint64_t v4 = v0 + 160;
      uint64_t v72 = (void *)(v0 + 192);
      unint64_t v5 = (void *)(*(void *)(v0 + 224) + 32);
      uint64_t v6 = sub_251F34DA0();
      uint64_t v7 = *(void *)(v6 - 8);
      uint64_t v64 = (void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
      uint64_t v57 = v7;
      uint64_t v8 = (void (**)(uint64_t, uint64_t))(v7 + 8);
      swift_bridgeObjectRetain();
      uint64_t v60 = v0 + 56;
      uint64_t v62 = v8;
      uint64_t v59 = v0 + 160;
      do
      {
        uint64_t v74 = v3;
        uint64_t v9 = *(void *)(v0 + 240);
        uint64_t v10 = swift_task_alloc();
        (*v64)(v10, v9, v6);
        uint64_t v11 = sub_251AEBC10();
        uint64_t v12 = sub_251AF1D60(v72);
        if (*v13)
        {
          unint64_t v14 = v13;
          int64_t v68 = (void (*)(void))v12;
          uint64_t v70 = v11;
          uint64_t v15 = v5[3];
          uint64_t v16 = v5[4];
          __swift_project_boxed_opaque_existential_1(v5, v15);
          uint64_t v17 = swift_task_alloc();
          (*(void (**)(uint64_t, uint64_t))(v16 + 56))(v15, v16);
          swift_bridgeObjectRetain();
          unint64_t v18 = sub_2519FE584(v17);
          LOBYTE(v16) = v19;
          swift_bridgeObjectRelease();
          if (v16)
          {
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v76 = *v14;
            *unint64_t v14 = 0x8000000000000000;
            uint64_t v21 = v70;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
              sub_251A14AF0();
            }
            uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v57 + 8);
            v22(*(void *)(v76 + 48) + *(void *)(v57 + 72) * v18, v6);
            sub_251A1A444((long long *)(*(void *)(v76 + 56) + 40 * v18), v60);
            unint64_t v23 = v18;
            uint64_t v24 = v60;
            sub_251E3BA6C(v23, v76);
            *unint64_t v14 = v76;
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v24 = v60;
            *(void *)(v60 + 32) = 0;
            *(_OWORD *)uint64_t v60 = 0u;
            *(_OWORD *)(v60 + 16) = 0u;
            uint64_t v22 = *v62;
            uint64_t v21 = v70;
          }
          v22(v17, v6);
          sub_251A1B064(v24, &qword_269B9DF00);
          v68();
          v22(v10, v6);
          uint64_t v4 = v59;
          ((void (*)(uint64_t, void))v21)(v59, 0);
          swift_task_dealloc();
          swift_task_dealloc();
          uint64_t v0 = v67;
        }
        else
        {
          ((void (*)(void *, void))v12)(v72, 0);
          (*v62)(v10, v6);
          ((void (*)(uint64_t, void))v11)(v4, 0);
          swift_task_dealloc();
          *(void *)(v60 + 32) = 0;
          *(_OWORD *)uint64_t v60 = 0u;
          *(_OWORD *)(v60 + 16) = 0u;
          sub_251A1B064(v60, &qword_269B9DF00);
        }
        v5 += 5;
        uint64_t v3 = v74 - 1;
      }
      while (v74 != 1);
LABEL_30:
      swift_bridgeObjectRelease();
    }
    goto LABEL_31;
  }
  if (!v3)
  {
LABEL_31:
    uint64_t v56 = *(uint64_t (**)(void))(v0 + 8);
    return v56();
  }
  uint64_t v71 = (long long *)(v0 + 16);
  uint64_t v25 = v0 + 96;
  uint64_t v26 = (void *)(v0 + 128);
  uint64_t v27 = (void *)(*(void *)(v0 + 224) + 32);
  uint64_t v28 = sub_251F34DA0();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v73 = (void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16);
  uint64_t v58 = v29;
  uint64_t v65 = (void (**)(uint64_t, uint64_t))(v29 + 8);
  swift_bridgeObjectRetain();
  uint64_t v61 = (void *)(v0 + 128);
  uint64_t v63 = v0 + 96;
  while (1)
  {
    uint64_t v75 = v3;
    uint64_t v30 = *(void *)(v0 + 240);
    uint64_t v31 = swift_task_alloc();
    uint64_t v32 = *v73;
    (*v73)(v31, v30, v28);
    unint64_t v33 = sub_251AEBC10();
    unint64_t v34 = sub_251AF1D60(v26);
    if (*v35) {
      break;
    }
    ((void (*)(void *, void))v34)(v26, 0);
    (*v65)(v31, v28);
    ((void (*)(uint64_t, void))v33)(v25, 0);
LABEL_16:
    swift_task_dealloc();
    v27 += 5;
    uint64_t v3 = v75 - 1;
    if (v75 == 1) {
      goto LABEL_30;
    }
  }
  uint64_t v36 = v35;
  uint64_t v66 = v34;
  uint64_t v69 = v33;
  uint64_t v38 = v27[3];
  uint64_t v37 = v27[4];
  __swift_project_boxed_opaque_existential_1(v27, v38);
  uint64_t v39 = swift_task_alloc();
  (*(void (**)(uint64_t, uint64_t))(v37 + 56))(v38, v37);
  sub_251A1A4EC((uint64_t)v27, (uint64_t)v71);
  int v40 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v77 = (void *)*v36;
  uint64_t v41 = (void *)*v36;
  *uint64_t v36 = 0x8000000000000000;
  unint64_t v43 = sub_2519FE584(v39);
  uint64_t v44 = v41[2];
  BOOL v45 = (v42 & 1) == 0;
  uint64_t result = v44 + v45;
  if (__OFADD__(v44, v45))
  {
    __break(1u);
LABEL_38:
    __break(1u);
    return result;
  }
  char v47 = v42;
  if (v41[3] >= result)
  {
    if (v40)
    {
      uint64_t v50 = v77;
      if (v42) {
        goto LABEL_25;
      }
    }
    else
    {
      sub_251A14AF0();
      uint64_t v50 = v77;
      if (v47) {
        goto LABEL_25;
      }
    }
LABEL_27:
    v50[(v43 >> 6) + 8] |= 1 << v43;
    v32(v50[6] + *(void *)(v58 + 72) * v43, v39, v28);
    uint64_t result = sub_251A1A444(v71, v50[7] + 40 * v43);
    uint64_t v52 = v50[2];
    BOOL v53 = __OFADD__(v52, 1);
    uint64_t v54 = v52 + 1;
    if (v53) {
      goto LABEL_38;
    }
    v50[2] = v54;
    goto LABEL_29;
  }
  sub_251A06A6C(result, v40);
  unint64_t v48 = sub_2519FE584(v39);
  if ((v47 & 1) == (v49 & 1))
  {
    unint64_t v43 = v48;
    uint64_t v50 = v77;
    if ((v47 & 1) == 0) {
      goto LABEL_27;
    }
LABEL_25:
    uint64_t v51 = v50[7] + 40 * v43;
    __swift_destroy_boxed_opaque_existential_0(v51);
    sub_251A1A444(v71, v51);
LABEL_29:
    *uint64_t v36 = v50;
    swift_bridgeObjectRelease();
    uint64_t v55 = *v65;
    (*v65)(v39, v28);
    uint64_t v26 = v61;
    ((void (*)(void *, void))v66)(v61, 0);
    v55(v31, v28);
    uint64_t v25 = v63;
    ((void (*)(uint64_t, void))v69)(v63, 0);
    swift_task_dealloc();
    uint64_t v0 = v67;
    goto LABEL_16;
  }
  return sub_251F36BA0();
}

uint64_t sub_251AEE424(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + 232) = a6;
  *(void *)(v7 + 240) = a7;
  *(void *)(v7 + 224) = a5;
  *(unsigned char *)(v7 + 256) = a4;
  sub_251F35C80();
  *(void *)(v7 + 248) = sub_251F35C70();
  uint64_t v9 = sub_251F35C00();
  return MEMORY[0x270FA2498](sub_251AEE4C4, v9, v8);
}

uint64_t sub_251AEE4C4()
{
  uint64_t v1 = *(void *)(v0 + 224);
  int v2 = *(unsigned __int8 *)(v0 + 256);
  swift_release();
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v67 = v0;
  if (v2 == 1)
  {
    if (v3)
    {
      uint64_t v4 = v0 + 160;
      uint64_t v72 = (void *)(v0 + 192);
      unint64_t v5 = (void *)(*(void *)(v0 + 224) + 32);
      uint64_t v6 = sub_251F34DA0();
      uint64_t v7 = *(void *)(v6 - 8);
      uint64_t v64 = (void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
      uint64_t v57 = v7;
      uint64_t v8 = (void (**)(uint64_t, uint64_t))(v7 + 8);
      swift_bridgeObjectRetain();
      uint64_t v60 = v0 + 56;
      uint64_t v62 = v8;
      uint64_t v59 = v0 + 160;
      do
      {
        uint64_t v74 = v3;
        uint64_t v9 = *(void *)(v0 + 240);
        uint64_t v10 = swift_task_alloc();
        (*v64)(v10, v9, v6);
        uint64_t v11 = sub_251AEBC6C();
        uint64_t v12 = sub_251AF1E54(v72);
        if (*v13)
        {
          unint64_t v14 = v13;
          int64_t v68 = (void (*)(void))v12;
          uint64_t v70 = v11;
          uint64_t v15 = v5[3];
          uint64_t v16 = v5[4];
          __swift_project_boxed_opaque_existential_1(v5, v15);
          uint64_t v17 = swift_task_alloc();
          (*(void (**)(uint64_t, uint64_t))(v16 + 64))(v15, v16);
          swift_bridgeObjectRetain();
          unint64_t v18 = sub_2519FE584(v17);
          LOBYTE(v16) = v19;
          swift_bridgeObjectRelease();
          if (v16)
          {
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v76 = *v14;
            *unint64_t v14 = 0x8000000000000000;
            uint64_t v21 = v70;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
              sub_251A14AC4();
            }
            uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v57 + 8);
            v22(*(void *)(v76 + 48) + *(void *)(v57 + 72) * v18, v6);
            sub_251A1A444((long long *)(*(void *)(v76 + 56) + 40 * v18), v60);
            unint64_t v23 = v18;
            uint64_t v24 = v60;
            sub_251E3BA6C(v23, v76);
            *unint64_t v14 = v76;
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v24 = v60;
            *(void *)(v60 + 32) = 0;
            *(_OWORD *)uint64_t v60 = 0u;
            *(_OWORD *)(v60 + 16) = 0u;
            uint64_t v22 = *v62;
            uint64_t v21 = v70;
          }
          v22(v17, v6);
          sub_251A1B064(v24, &qword_269B9DF08);
          v68();
          v22(v10, v6);
          uint64_t v4 = v59;
          ((void (*)(uint64_t, void))v21)(v59, 0);
          swift_task_dealloc();
          swift_task_dealloc();
          uint64_t v0 = v67;
        }
        else
        {
          ((void (*)(void *, void))v12)(v72, 0);
          (*v62)(v10, v6);
          ((void (*)(uint64_t, void))v11)(v4, 0);
          swift_task_dealloc();
          *(void *)(v60 + 32) = 0;
          *(_OWORD *)uint64_t v60 = 0u;
          *(_OWORD *)(v60 + 16) = 0u;
          sub_251A1B064(v60, &qword_269B9DF08);
        }
        v5 += 5;
        uint64_t v3 = v74 - 1;
      }
      while (v74 != 1);
LABEL_30:
      swift_bridgeObjectRelease();
    }
    goto LABEL_31;
  }
  if (!v3)
  {
LABEL_31:
    uint64_t v56 = *(uint64_t (**)(void))(v0 + 8);
    return v56();
  }
  uint64_t v71 = (long long *)(v0 + 16);
  uint64_t v25 = v0 + 96;
  uint64_t v26 = (void *)(v0 + 128);
  uint64_t v27 = (void *)(*(void *)(v0 + 224) + 32);
  uint64_t v28 = sub_251F34DA0();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v73 = (void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16);
  uint64_t v58 = v29;
  uint64_t v65 = (void (**)(uint64_t, uint64_t))(v29 + 8);
  swift_bridgeObjectRetain();
  uint64_t v61 = (void *)(v0 + 128);
  uint64_t v63 = v0 + 96;
  while (1)
  {
    uint64_t v75 = v3;
    uint64_t v30 = *(void *)(v0 + 240);
    uint64_t v31 = swift_task_alloc();
    uint64_t v32 = *v73;
    (*v73)(v31, v30, v28);
    unint64_t v33 = sub_251AEBC6C();
    unint64_t v34 = sub_251AF1E54(v26);
    if (*v35) {
      break;
    }
    ((void (*)(void *, void))v34)(v26, 0);
    (*v65)(v31, v28);
    ((void (*)(uint64_t, void))v33)(v25, 0);
LABEL_16:
    swift_task_dealloc();
    v27 += 5;
    uint64_t v3 = v75 - 1;
    if (v75 == 1) {
      goto LABEL_30;
    }
  }
  uint64_t v36 = v35;
  uint64_t v66 = v34;
  uint64_t v69 = v33;
  uint64_t v38 = v27[3];
  uint64_t v37 = v27[4];
  __swift_project_boxed_opaque_existential_1(v27, v38);
  uint64_t v39 = swift_task_alloc();
  (*(void (**)(uint64_t, uint64_t))(v37 + 64))(v38, v37);
  sub_251A1A4EC((uint64_t)v27, (uint64_t)v71);
  int v40 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v77 = (void *)*v36;
  uint64_t v41 = (void *)*v36;
  *uint64_t v36 = 0x8000000000000000;
  unint64_t v43 = sub_2519FE584(v39);
  uint64_t v44 = v41[2];
  BOOL v45 = (v42 & 1) == 0;
  uint64_t result = v44 + v45;
  if (__OFADD__(v44, v45))
  {
    __break(1u);
LABEL_38:
    __break(1u);
    return result;
  }
  char v47 = v42;
  if (v41[3] >= result)
  {
    if (v40)
    {
      uint64_t v50 = v77;
      if (v42) {
        goto LABEL_25;
      }
    }
    else
    {
      sub_251A14AC4();
      uint64_t v50 = v77;
      if (v47) {
        goto LABEL_25;
      }
    }
LABEL_27:
    v50[(v43 >> 6) + 8] |= 1 << v43;
    v32(v50[6] + *(void *)(v58 + 72) * v43, v39, v28);
    uint64_t result = sub_251A1A444(v71, v50[7] + 40 * v43);
    uint64_t v52 = v50[2];
    BOOL v53 = __OFADD__(v52, 1);
    uint64_t v54 = v52 + 1;
    if (v53) {
      goto LABEL_38;
    }
    v50[2] = v54;
    goto LABEL_29;
  }
  sub_251A06A40(result, v40);
  unint64_t v48 = sub_2519FE584(v39);
  if ((v47 & 1) == (v49 & 1))
  {
    unint64_t v43 = v48;
    uint64_t v50 = v77;
    if ((v47 & 1) == 0) {
      goto LABEL_27;
    }
LABEL_25:
    uint64_t v51 = v50[7] + 40 * v43;
    __swift_destroy_boxed_opaque_existential_0(v51);
    sub_251A1A444(v71, v51);
LABEL_29:
    *uint64_t v36 = v50;
    swift_bridgeObjectRelease();
    uint64_t v55 = *v65;
    (*v65)(v39, v28);
    uint64_t v26 = v61;
    ((void (*)(void *, void))v66)(v61, 0);
    v55(v31, v28);
    uint64_t v25 = v63;
    ((void (*)(uint64_t, void))v69)(v63, 0);
    swift_task_dealloc();
    uint64_t v0 = v67;
    goto LABEL_16;
  }
  return sub_251F36BA0();
}

uint64_t sub_251AEEC0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_251AEEC24(a1, a2, &OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_homeAlarms, a3);
}

uint64_t sub_251AEEC18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_251AEEC24(a1, a2, &OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_homeTimers, a3);
}

uint64_t sub_251AEEC24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = (uint64_t *)(v4 + *a3);
  uint64_t result = swift_beginAccess();
  uint64_t v10 = *v8;
  if (!*(void *)(*v8 + 16)) {
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  unint64_t v11 = sub_2519FE584(a2);
  if ((v12 & 1) == 0)
  {
    uint64_t result = swift_bridgeObjectRelease();
LABEL_7:
    *(void *)(a4 + 32) = 0;
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
    return result;
  }
  uint64_t v13 = *(void *)(*(void *)(v10 + 56) + 8 * v11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (*(void *)(v13 + 16) && (unint64_t v14 = sub_2519FE584(a1), (v15 & 1) != 0))
  {
    sub_251A1A4EC(*(void *)(v13 + 56) + 40 * v14, a4);
  }
  else
  {
    *(void *)(a4 + 32) = 0;
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
  }
  return swift_bridgeObjectRelease();
}

uint64_t CoordinationDataModel.homeAlarmObject(with:parentUUID:)(uint64_t a1, uint64_t a2)
{
  return sub_251AEED4C(a1, a2, &OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_homeAlarms, &qword_269B9CEB8, &qword_269B9DF00);
}

uint64_t CoordinationDataModel.homeTimerObject(with:parentUUID:)(uint64_t a1, uint64_t a2)
{
  return sub_251AEED4C(a1, a2, &OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_homeTimers, &qword_269B9CEC8, &qword_269B9DF08);
}

uint64_t sub_251AEED4C(uint64_t a1, uint64_t a2, void *a3, uint64_t *a4, uint64_t *a5)
{
  uint64_t v10 = (uint64_t *)(v5 + *a3);
  swift_beginAccess();
  uint64_t v11 = *v10;
  if (!*(void *)(*v10 + 16)) {
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  unint64_t v12 = sub_2519FE584(a2);
  if ((v13 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    uint64_t v21 = 0;
    long long v19 = 0u;
    long long v20 = 0u;
LABEL_8:
    sub_251A1B064((uint64_t)&v19, a5);
    return 0;
  }
  uint64_t v14 = *(void *)(*(void *)(v11 + 56) + 8 * v12);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (*(void *)(v14 + 16) && (unint64_t v15 = sub_2519FE584(a1), (v16 & 1) != 0))
  {
    sub_251A1A4EC(*(void *)(v14 + 56) + 40 * v15, (uint64_t)&v19);
  }
  else
  {
    uint64_t v21 = 0;
    long long v19 = 0u;
    long long v20 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v20 + 1)) {
    goto LABEL_8;
  }
  __swift_instantiateConcreteTypeFromMangledName(a4);
  sub_251AA88D0();
  if (swift_dynamicCast()) {
    return v18;
  }
  else {
    return 0;
  }
}

BOOL CoordinationDataModel.Errors.isPendingOnboarding.getter()
{
  return *v0 > 5uLL;
}

void CoordinationDataModel.Errors.hash(into:)()
{
  uint64_t v1 = *v0;
  switch((unint64_t)*v0)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
      sub_251F36CB0();
      break;
    default:
      sub_251F36CB0();
      id v2 = v1;
      sub_251F36130();
      sub_251A1A4DC(v1);
      break;
  }
}

uint64_t CoordinationDataModel.Errors.hashValue.getter()
{
  uint64_t v1 = *v0;
  sub_251F36CA0();
  switch((unint64_t)v1)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
      sub_251F36CB0();
      break;
    default:
      sub_251F36CB0();
      id v2 = v1;
      sub_251F36130();
      sub_251A1A4DC(v1);
      break;
  }
  return sub_251F36D00();
}

uint64_t sub_251AEF07C()
{
  uint64_t v1 = *v0;
  sub_251F36CA0();
  switch((unint64_t)v1)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
      sub_251F36CB0();
      break;
    default:
      sub_251F36CB0();
      id v2 = v1;
      sub_251F36130();
      sub_251A1A4DC(v1);
      break;
  }
  return sub_251F36D00();
}

id sub_251AEF16C()
{
  id result = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for CoordinationDataModel()), sel_init);
  qword_26B21E630 = (uint64_t)result;
  return result;
}

id static CoordinationDataModel.shared.getter()
{
  if (qword_26B21E6D8 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_26B21E630;
  return v0;
}

uint64_t sub_251AEF258()
{
  type metadata accessor for CoordinationSnapshotModerator();
  uint64_t v0 = swift_allocObject();
  swift_defaultActor_initialize();
  if (qword_26B21E9A8 != -1) {
    swift_once();
  }
  *(void *)(v0 + 112) = qword_26B220CA8;
  *(void *)(v0 + 120) = 0;
  qword_269BF3098 = v0;
  return swift_bridgeObjectRetain();
}

uint64_t sub_251AEF2E4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DF50);
  swift_allocObject();
  uint64_t result = sub_251F350D0();
  qword_269B9DED8 = result;
  return result;
}

uint64_t static CoordinationDataModel.snapshotPublisher.getter()
{
  if (qword_269B9C2B8 != -1) {
    swift_once();
  }
  return swift_retain();
}

uint64_t sub_251AEF384()
{
  uint64_t v0 = sub_251F350A0();
  __swift_allocate_value_buffer(v0, qword_269B9DEE0);
  __swift_project_value_buffer(v0, (uint64_t)qword_269B9DEE0);
  return sub_251F35090();
}

uint64_t static CoordinationDataModel.modelLogger.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_269B9C2C0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_251F350A0();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_269B9DEE0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t static CoordinationDataModel.noDataString.getter()
{
  return 0x9380E29380E2;
}

uint64_t sub_251AEF4C8(uint64_t a1, uint64_t a2, int a3, uint64_t *a4, uint64_t *a5, void (*a6)(uint64_t, unsigned char *), void (*a7)(void), void (*a8)(void))
{
  uint64_t v57 = a7;
  uint64_t v70 = a6;
  uint64_t v10 = v8;
  uint64_t v76 = a4;
  int v68 = a3;
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(a5);
  MEMORY[0x270FA5388](v62);
  uint64_t v61 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v72 = sub_251F34DA0();
  uint64_t v15 = *(void *)(v72 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  swift_bridgeObjectRetain();
  uint64_t v17 = swift_bridgeObjectRetain();
  uint64_t v71 = &v53;
  MEMORY[0x270FA5388](v17);
  uint64_t v69 = v16;
  uint64_t v18 = (char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v21 = (char *)&v53 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = v14;
  if (!v14)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v21, 1, 1, v72);
LABEL_24:
    sub_251A1B064((uint64_t)v21, &qword_26B21FF90);
    swift_bridgeObjectRelease_n();
    return swift_bridgeObjectRelease_n();
  }
  uint64_t v54 = a8;
  uint64_t v55 = v10;
  uint64_t v22 = v15;
  unint64_t v23 = 0;
  uint64_t v66 = v22 + 56;
  uint64_t v67 = a2;
  uint64_t v63 = v22 + 48;
  uint64_t v64 = v22 + 16;
  uint64_t v73 = (void (**)(char *, char *, uint64_t))(v22 + 32);
  uint64_t v24 = a2 + 32;
  uint64_t v65 = v22;
  uint64_t v56 = (void (**)(char *, uint64_t))(v22 + 8);
  uint64_t v59 = a1;
  while (v23 < *(void *)(a1 + 16))
  {
    uint64_t v30 = v65;
    uint64_t v31 = *(void *)(v65 + 72);
    uint64_t v32 = v72;
    (*(void (**)(char *, unint64_t, uint64_t))(v65 + 16))(v21, a1 + ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80)) + v31 * v23, v72);
    uint64_t v58 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v30 + 56);
    v58(v21, 0, 1, v32);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v21, 1, v32) == 1) {
      goto LABEL_24;
    }
    unint64_t v33 = *v73;
    (*v73)(v18, v21, v32);
    unint64_t v34 = *(void *)(v67 + 16);
    if (v23 == v34)
    {
      (*v56)(v18, v32);
      swift_bridgeObjectRelease_n();
      return swift_bridgeObjectRelease_n();
    }
    if (v23 >= v34) {
      goto LABEL_26;
    }
    unint64_t v35 = v61;
    uint64_t v36 = (uint64_t)&v61[*(int *)(v62 + 48)];
    v33(v61, v18, v32);
    uint64_t v37 = sub_251A1A4EC(v24, v36);
    MEMORY[0x270FA5388](v37);
    uint64_t v39 = (char *)&v53 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
    ((void (*)(char *, char *))v33)(v39, v35);
    v70(v36, v75);
    uint64_t v40 = *v76;
    unint64_t v42 = sub_2519FE584((uint64_t)v39);
    uint64_t v43 = *(void *)(v40 + 16);
    BOOL v44 = (v41 & 1) == 0;
    if (__OFADD__(v43, v44)) {
      goto LABEL_27;
    }
    char v45 = v41;
    if (*(void *)(v40 + 24) >= v43 + v44)
    {
      if (v68)
      {
        if (v41) {
          goto LABEL_3;
        }
      }
      else
      {
        v54();
        if (v45) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      v57();
      unint64_t v46 = sub_2519FE584((uint64_t)v39);
      if ((v45 & 1) != (v47 & 1)) {
        goto LABEL_29;
      }
      unint64_t v42 = v46;
      if (v45)
      {
LABEL_3:
        sub_251A1A4EC((uint64_t)v75, (uint64_t)v74);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v75);
        (*v56)(v39, v72);
        uint64_t v25 = *(void *)(*v76 + 56) + 40 * v42;
        __swift_destroy_boxed_opaque_existential_0(v25);
        uint64_t v26 = ((uint64_t (*)(unsigned char *, uint64_t))v70)(v74, v25);
        goto LABEL_4;
      }
    }
    unint64_t v48 = (void *)*v76;
    *(void *)(*v76 + 8 * (v42 >> 6) + 64) |= 1 << v42;
    v33((char *)(v48[6] + v42 * v31), v39, v72);
    uint64_t v26 = ((uint64_t (*)(unsigned char *, unint64_t))v70)(v75, v48[7] + 40 * v42);
    uint64_t v49 = v48[2];
    BOOL v50 = __OFADD__(v49, 1);
    uint64_t v51 = v49 + 1;
    if (v50) {
      goto LABEL_28;
    }
    v48[2] = v51;
LABEL_4:
    ++v23;
    uint64_t v71 = &v53;
    MEMORY[0x270FA5388](v26);
    uint64_t v18 = (char *)&v53 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
    MEMORY[0x270FA5388](v28 - 8);
    uint64_t v21 = (char *)&v53 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
    v24 += 40;
    int v68 = 1;
    a1 = v59;
    if (v60 == v23)
    {
      v58(v21, 1, 1, v72);
      goto LABEL_24;
    }
  }
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  uint64_t result = sub_251F36BA0();
  __break(1u);
  return result;
}

uint64_t _s13HomeDataModel012CoordinationbC0C6ErrorsO2eeoiySbAE_AEtFZ_0(uint64_t *a1, id *a2)
{
  uint64_t v2 = *a1;
  id v3 = *a2;
  switch(*a1)
  {
    case 0:
      if (v3) {
        goto LABEL_16;
      }
      uint64_t v2 = 0;
      char v4 = 1;
      break;
    case 1:
      if (v3 != (id)1) {
        goto LABEL_16;
      }
      uint64_t v2 = 1;
      char v4 = 1;
      break;
    case 2:
      if (v3 != (id)2) {
        goto LABEL_16;
      }
      char v4 = 1;
      uint64_t v2 = 2;
      break;
    case 3:
      if (v3 != (id)3) {
        goto LABEL_16;
      }
      char v4 = 1;
      uint64_t v2 = 3;
      break;
    case 4:
      if (v3 != (id)4) {
        goto LABEL_16;
      }
      char v4 = 1;
      uint64_t v2 = 4;
      break;
    case 5:
      if (v3 != (id)5) {
        goto LABEL_16;
      }
      char v4 = 1;
      uint64_t v2 = 5;
      break;
    default:
      if ((unint64_t)v3 < 6)
      {
LABEL_16:
        sub_251A1A4CC(*a2);
        sub_251A1A4CC((id)v2);
        char v4 = 0;
      }
      else
      {
        sub_251AA88D0();
        sub_251A1A4CC(v3);
        sub_251A1A4CC((id)v2);
        char v4 = sub_251F36120();
      }
      break;
  }
  sub_251A1A4DC((id)v2);
  sub_251A1A4DC(v3);
  return v4 & 1;
}

uint64_t sub_251AEFC9C(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_currentHome);
  swift_beginAccess();
  char v4 = *v3;
  *id v3 = a1;
  id v5 = a1;

  uint64_t v6 = (void *)(v1 + OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_managers);
  swift_beginAccess();
  uint64_t v7 = swift_bridgeObjectRetain();
  sub_251AEA818(v7);
  swift_bridgeObjectRelease();
  *uint64_t v6 = sub_2519FADF4(MEMORY[0x263F8EE78]);
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for CoordinationDataModel()
{
  uint64_t result = qword_26B21E6E0;
  if (!qword_26B21E6E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_251AEFDA0()
{
  return MEMORY[0x263EFDDD8];
}

unint64_t sub_251AEFDB0()
{
  unint64_t result = qword_269B9DF10;
  if (!qword_269B9DF10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_269B9DF10);
  }
  return result;
}

uint64_t sub_251AEFE0C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id v3 = (void *)(*a1 + OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_managers);
  swift_beginAccess();
  *a2 = *v3;
  return swift_bridgeObjectRetain();
}

id sub_251AEFE68@<X0>(void *a1@<X0>, void **a2@<X8>)
{
  id v3 = (void **)(*a1 + OBJC_IVAR____TtC13HomeDataModel21CoordinationDataModel_currentHome);
  swift_beginAccess();
  char v4 = *v3;
  *a2 = *v3;
  return v4;
}

void sub_251AEFECC(id *a1)
{
  id v1 = *a1;
  id v2 = *a1;
  sub_251AEFC9C(v1);
}

uint64_t sub_251AEFF1C()
{
  return type metadata accessor for CoordinationDataModel();
}

void sub_251AEFF24()
{
  sub_251AF0274();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for CoordinationDataModel(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for CoordinationDataModel);
}

uint64_t dispatch thunk of CoordinationDataModel.currentStateSnapshot.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of CoordinationDataModel.currentStateSnapshot.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x88))();
}

uint64_t dispatch thunk of CoordinationDataModel.currentStateSnapshot.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of CoordinationDataModel.$currentStateSnapshot.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of CoordinationDataModel.$currentStateSnapshot.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of CoordinationDataModel.$currentStateSnapshot.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of CoordinationDataModel.managers.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of CoordinationDataModel.managers.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of CoordinationDataModel.managers.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of CoordinationDataModel.currentHome.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of CoordinationDataModel.currentHome.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x100))();
}

uint64_t dispatch thunk of CoordinationDataModel.currentHome.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x108))();
}

void sub_251AF0274()
{
  if (!qword_26B21EAA8)
  {
    unint64_t v0 = sub_251F35140();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B21EAA8);
    }
  }
}

void *initializeBufferWithCopyOfBuffer for CoordinationDataModel.Errors(void *a1, void **a2)
{
  id v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF) {
    id v4 = v3;
  }
  *a1 = v3;
  return a1;
}

void destroy for CoordinationDataModel.Errors(void **a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)v1 >= 0xFFFFFFFF) {
}
  }

void **assignWithCopy for CoordinationDataModel.Errors(void **a1, void **a2)
{
  id v3 = *a1;
  id v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
  {
    if ((unint64_t)v4 >= 0xFFFFFFFF)
    {
      *a1 = v4;
      id v6 = v4;
      return a1;
    }
LABEL_7:
    *a1 = v4;
    return a1;
  }
  if ((unint64_t)v4 < 0xFFFFFFFF)
  {

    id v4 = *a2;
    goto LABEL_7;
  }
  *a1 = v4;
  id v5 = v4;

  return a1;
}

void **assignWithTake for CoordinationDataModel.Errors(void **a1, unint64_t *a2)
{
  id v3 = *a1;
  unint64_t v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF) {
    goto LABEL_6;
  }
  if (v4 < 0xFFFFFFFF)
  {

LABEL_6:
    *a1 = (void *)v4;
    return a1;
  }
  *a1 = (void *)v4;

  return a1;
}

uint64_t getEnumTagSinglePayload for CoordinationDataModel.Errors(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFF9 && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483642);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 5;
  if (v4 >= 7) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for CoordinationDataModel.Errors(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFA)
  {
    *(void *)unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483642;
    if (a3 >= 0x7FFFFFFA) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFA) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2 + 5;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CoordinationDataModel.Errors()
{
  return &type metadata for CoordinationDataModel.Errors;
}

uint64_t sub_251AF04C0()
{
  swift_unknownObjectRelease();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_251AF0500(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_251AB3A34;
  return sub_251AEC1A0(a1, v4, v5, v6);
}

uint64_t sub_251AF05C0(uint64_t a1, uint64_t a2)
{
  uint64_t updated = type metadata accessor for CoordinationSnapshot.UpdateType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(updated - 8) + 32))(a2, a1, updated);
  return a2;
}

uint64_t sub_251AF0624(uint64_t a1, uint64_t a2)
{
  uint64_t updated = type metadata accessor for CoordinationSnapshot.UpdateType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(updated - 8) + 16))(a2, a1, updated);
  return a2;
}

uint64_t sub_251AF0688(uint64_t a1)
{
  uint64_t updated = type metadata accessor for CoordinationSnapshot.UpdateType();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(updated - 8) + 8))(a1, updated);
  return a1;
}

uint64_t sub_251AF06E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id HMAccessory.hdm_matterNodeID.getter()
{
  id result = objc_msgSend(v0, sel_hdm_matterNodeID);
  if (result)
  {
    uint64_t v2 = result;
    sub_251F36D80();

    return 0;
  }
  return result;
}

uint64_t HMAccessory.matterDevice.getter()
{
  if (_s13HomeDataModel19MatterStateSnapshotV17allowSnapshotting9accessorySbSo11HMAccessoryC_tFZ_0(v0))
  {
    if (objc_msgSend(v0, sel_hdm_matterDevice))
    {
      sub_251F36240();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v13, 0, sizeof(v13));
    }
    sub_251ABBD00((uint64_t)v13, (uint64_t)&v14);
    if (*((void *)&v15 + 1))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DF70);
      if (swift_dynamicCast()) {
        return v12;
      }
    }
    else
    {
      sub_251A9090C((uint64_t)&v14);
    }
    if (qword_26B21ECD0 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_251F350A0();
    __swift_project_value_buffer(v2, (uint64_t)qword_26B21ECB8);
    id v3 = v0;
    uint64_t v4 = sub_251F35080();
    os_log_type_t v5 = sub_251F35FB0();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = swift_slowAlloc();
      uint64_t v7 = (void *)swift_slowAlloc();
      uint64_t v8 = swift_slowAlloc();
      *(void *)&v13[0] = v8;
      *(_DWORD *)uint64_t v6 = 136315650;
      *(void *)&long long v14 = sub_251A00E84(0xD00000000000002BLL, 0x8000000251F69D30, (uint64_t *)v13);
      sub_251F361D0();
      *(_WORD *)(v6 + 12) = 2112;
      *(void *)&long long v14 = v3;
      id v9 = v3;
      sub_251F361D0();
      *uint64_t v7 = v3;

      *(_WORD *)(v6 + 22) = 2080;
      if (objc_msgSend(v9, sel_hdm_matterDevice))
      {
        sub_251F36240();
        swift_unknownObjectRelease();
      }
      else
      {
        long long v14 = 0u;
        long long v15 = 0u;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E190);
      uint64_t v10 = sub_251F35790();
      *(void *)&long long v14 = sub_251A00E84(v10, v11, (uint64_t *)v13);
      sub_251F361D0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_2519F3000, v4, v5, "%s Failed to create device from HMAccessory (%@). device: %s", (uint8_t *)v6, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F2E0);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v7, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x2533AC760](v8, -1, -1);
      MEMORY[0x2533AC760](v6, -1, -1);
    }
    else
    {
    }
  }
  return 0;
}

void MTRClusterDescriptor.endpointPath.getter(uint64_t a1@<X8>)
{
  id v3 = objc_msgSend(v1, sel_device);
  id v4 = objc_msgSend(v3, sel_hdm_nodeID);

  sub_251F36D80();
  *(void *)a1 = 0;
  *(_WORD *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 10) = 1;
}

id MTRDeviceController.controllerXPCID.getter()
{
  id result = objc_msgSend(v0, sel_hdm_controllerXPCID);
  if (result)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DF78);
    swift_dynamicCast();
    return (id)v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t HMActionSet.ActionSetKind.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2 = sub_251F36750();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 7;
  if (v2 < 7) {
    char v4 = v2;
  }
  *a1 = v4;
  return result;
}

void *static HMActionSet.ActionSetKind.allCases.getter()
{
  return &unk_270262478;
}

unint64_t HMActionSet.ActionSetKind.rawValue.getter()
{
  unint64_t result = 0xD00000000000001ALL;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    case 5:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 6:
      unint64_t result = 0xD000000000000021;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_251AF0DA0(unsigned __int8 *a1, char *a2)
{
  return sub_251DB3434(*a1, *a2);
}

uint64_t sub_251AF0DAC()
{
  return sub_251EADFF4();
}

uint64_t sub_251AF0DB8()
{
  return sub_251AA95D8();
}

uint64_t sub_251AF0DC0()
{
  return sub_251EADFF4();
}

uint64_t sub_251AF0DC8@<X0>(char *a1@<X8>)
{
  return HMActionSet.ActionSetKind.init(rawValue:)(a1);
}

unint64_t sub_251AF0DD4@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = HMActionSet.ActionSetKind.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_251AF0DFC(void *a1@<X8>)
{
  *a1 = &unk_270262478;
}

uint64_t sub_251AF0E0C()
{
  return sub_251F35A30();
}

uint64_t sub_251AF0E6C()
{
  return sub_251F359D0();
}

uint64_t HMActionSet.actionSetKind.getter@<X0>(char *a1@<X8>)
{
  id v3 = objc_msgSend(v1, sel_actionSetType);
  sub_251F356F0();

  return HMActionSet.ActionSetKind.init(rawValue:)(a1);
}

uint64_t HMActionSet.defaultTint.getter()
{
  id v1 = objc_msgSend(v0, sel_actionSetType);
  sub_251F356F0();

  HMActionSet.ActionSetKind.init(rawValue:)(&v3);
  switch(v3)
  {
    case 0:
    case 1:
      uint64_t result = sub_251F35390();
      break;
    case 2:
      uint64_t result = sub_251F353A0();
      break;
    case 3:
      uint64_t result = sub_251F35380();
      break;
    default:
      uint64_t result = 0;
      break;
  }
  return result;
}

unint64_t sub_251AF0FF0()
{
  unint64_t result = qword_269B9DF80;
  if (!qword_269B9DF80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9DF80);
  }
  return result;
}

unint64_t sub_251AF1048()
{
  unint64_t result = qword_269B9DF88;
  if (!qword_269B9DF88)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_269B9DF90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9DF88);
  }
  return result;
}

unsigned char *_s13ActionSetKindOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x251AF1170);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HMActionSet.ActionSetKind()
{
  return &type metadata for HMActionSet.ActionSetKind;
}

unint64_t sub_251AF11A8()
{
  unint64_t result = qword_269B9DF98;
  if (!qword_269B9DF98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9DF98);
  }
  return result;
}

uint64_t sub_251AF11FC(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v29 = a5;
  uint64_t v30 = a8;
  uint64_t v10 = v9;
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  uint64_t v28 = *(void *)(a5 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v40 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v36 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  uint64_t v13 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  long long v15 = (char *)&v26 - v14;
  MEMORY[0x270FA5388](v13);
  unint64_t v33 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v31 = *(void *)(v17 - 8);
  uint64_t v32 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v26 - v18;
  uint64_t v34 = v8;
  uint64_t v20 = sub_251F35EE0();
  if (!v20) {
    return sub_251F35B40();
  }
  uint64_t v21 = v20;
  uint64_t v27 = v15;
  uint64_t v43 = sub_251F35510();
  uint64_t v35 = sub_251F36570();
  sub_251F36510();
  char v41 = v19;
  uint64_t result = sub_251F35ED0();
  if (v21 < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v23 = (void (**)(char *))(v36 + 2);
    ++v36;
    uint64_t v37 = v23;
    uint64_t v24 = v27;
    while (1)
    {
      uint64_t v25 = (void (*)(char *, void))sub_251F35F30();
      (*v37)(v24);
      v25(v42, 0);
      v38(v24, v40);
      if (v10) {
        break;
      }
      uint64_t v10 = 0;
      (*v36)(v24, AssociatedTypeWitness);
      sub_251F36550();
      sub_251F35F00();
      if (!--v21)
      {
        (*(void (**)(char *, uint64_t))(v31 + 8))(v41, v32);
        return v43;
      }
    }
    (*v36)(v24, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v41, v32);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v28 + 32))(v30, v40, v29);
  }
  return result;
}

uint64_t sub_251AF15F8(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a3 + 64);
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D990);
  MEMORY[0x270FA5388](v33);
  uint64_t v31 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = v9;
  int64_t v29 = (unint64_t)(v6 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v34 = a3;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v11 = 0;
  uint64_t v30 = MEMORY[0x263F8EE58] + 8;
  uint64_t v12 = (uint64_t)v31;
  uint64_t v13 = v33;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      int64_t v38 = v11;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_5;
    }
    int64_t v23 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v23 >= v29) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v23);
    int64_t v25 = v11 + 1;
    if (!v24)
    {
      int64_t v25 = v11 + 2;
      if (v11 + 2 >= v29) {
        goto LABEL_23;
      }
      unint64_t v24 = *(void *)(v28 + 8 * v25);
      if (!v24)
      {
        int64_t v25 = v11 + 3;
        if (v11 + 3 >= v29) {
          goto LABEL_23;
        }
        unint64_t v24 = *(void *)(v28 + 8 * v25);
        if (!v24)
        {
          int64_t v25 = v11 + 4;
          if (v11 + 4 >= v29) {
            goto LABEL_23;
          }
          unint64_t v24 = *(void *)(v28 + 8 * v25);
          if (!v24) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v8 = (v24 - 1) & v24;
    int64_t v38 = v25;
    unint64_t v15 = __clz(__rbit64(v24)) + (v25 << 6);
LABEL_5:
    uint64_t v16 = v34;
    uint64_t v17 = *(void *)(v34 + 48);
    uint64_t v18 = sub_251F34DA0();
    uint64_t v19 = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v12, v17 + *(void *)(*(void *)(v18 - 8) + 72) * v15, v18);
    uint64_t v35 = &v27;
    *(void *)(v12 + *(int *)(v13 + 48)) = *(void *)(*(void *)(v16 + 56) + 8 * v15);
    MEMORY[0x270FA5388](v19);
    uint64_t v21 = (char *)&v27 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_251A4ECF0(v12, (uint64_t)v21, &qword_269B9D990);
    uint64_t v36 = 0;
    unint64_t v37 = 0xE000000000000000;
    swift_bridgeObjectRetain();
    sub_251F36400();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v36 = a1;
    unint64_t v37 = a2;
    sub_251F35800();
    sub_251AF752C();
    sub_251F36AB0();
    sub_251F35800();
    swift_bridgeObjectRelease();
    sub_251F35800();
    sub_251AF7578();
    sub_251F35560();
    sub_251F35800();
    swift_bridgeObjectRelease();
    a1 = v36;
    unint64_t v22 = v37;
    sub_251A1B064((uint64_t)v21, &qword_269B9D990);
    uint64_t result = swift_bridgeObjectRelease();
    a2 = v22;
    int64_t v11 = v38;
  }
  uint64_t v26 = v11 + 5;
  if (v11 + 5 >= v29)
  {
LABEL_23:
    swift_release();
    return a1;
  }
  unint64_t v24 = *(void *)(v28 + 8 * v26);
  if (v24)
  {
    int64_t v25 = v11 + 5;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v25 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v25 >= v29) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v28 + 8 * v25);
    ++v26;
    if (v24) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

BOOL CharacteristicValueSet.isEmpty.getter()
{
  return *(void *)(*(void *)v0 + 16) == 0;
}

uint64_t CharacteristicValueSet.characteristicsAndValues.getter()
{
  uint64_t v2 = *v0;
  uint64_t v22 = MEMORY[0x263F8EE80];
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v19 = v2 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & v3;
  uint64_t v18 = (uint64_t)&v18;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D990);
  uint64_t v7 = *(void *)(*(void *)(v21 - 8) + 64);
  MEMORY[0x270FA5388](v21);
  int64_t v20 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain_n();
  int64_t v8 = 0;
  if (!v6) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v9 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (unint64_t i = v9 | (v8 << 6); ; unint64_t i = __clz(__rbit64(v12)) + (v8 << 6))
  {
    uint64_t v14 = *(void *)(v2 + 48);
    uint64_t v15 = sub_251F34DA0();
    uint64_t v16 = (*(uint64_t (**)(char *, unint64_t, uint64_t))(*(void *)(v15 - 8) + 16))((char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v14 + *(void *)(*(void *)(v15 - 8) + 72) * i, v15);
    *(uint64_t *)((char *)&v18 + *(int *)(v21 + 48) - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0)) = *(void *)(*(void *)(v2 + 56) + 8 * i);
    MEMORY[0x270FA5388](v16);
    id v1 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_251A4ECF0((uint64_t)v1, (uint64_t)v1, &qword_269B9D990);
    swift_bridgeObjectRetain();
    sub_251AF3CF4(&v22, (uint64_t)v1);
    sub_251A1B064((uint64_t)v1, &qword_269B9D990);
    if (v6) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v8++, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v8 >= v20) {
      goto LABEL_24;
    }
    unint64_t v12 = *(void *)(v19 + 8 * v8);
    if (!v12) {
      break;
    }
LABEL_17:
    unint64_t v6 = (v12 - 1) & v12;
  }
  int64_t v13 = v8 + 1;
  if (v8 + 1 >= v20) {
    goto LABEL_24;
  }
  unint64_t v12 = *(void *)(v19 + 8 * v13);
  if (v12) {
    goto LABEL_16;
  }
  int64_t v13 = v8 + 2;
  if (v8 + 2 >= v20) {
    goto LABEL_24;
  }
  unint64_t v12 = *(void *)(v19 + 8 * v13);
  if (v12) {
    goto LABEL_16;
  }
  int64_t v13 = v8 + 3;
  if (v8 + 3 >= v20) {
    goto LABEL_24;
  }
  unint64_t v12 = *(void *)(v19 + 8 * v13);
  if (v12) {
    goto LABEL_16;
  }
  int64_t v13 = v8 + 4;
  if (v8 + 4 >= v20)
  {
LABEL_24:
    swift_release();
    swift_bridgeObjectRelease();
    return v22;
  }
  unint64_t v12 = *(void *)(v19 + 8 * v13);
  if (v12)
  {
LABEL_16:
    int64_t v8 = v13;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v8 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v8 >= v20) {
      goto LABEL_24;
    }
    unint64_t v12 = *(void *)(v19 + 8 * v8);
    ++v13;
    if (v12) {
      goto LABEL_17;
    }
  }
LABEL_26:
  __break(1u);
  swift_bridgeObjectRelease();
  sub_251A1B064((uint64_t)v1, &qword_269B9D990);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

void (*sub_251AF1CB4(void *a1, unsigned __int16 a2))(void *a1)
{
  uint64_t v4 = malloc(0x28uLL);
  *a1 = v4;
  void v4[4] = sub_251AF4F4C(v4, a2);
  return sub_251AF1D14;
}

void sub_251AF1D14(void *a1)
{
  id v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 32))(*a1, 0);
  free(v1);
}

uint64_t (*sub_251AF1D60(void *a1))()
{
  uint64_t v2 = malloc(0x40uLL);
  *a1 = v2;
  uint64_t v3 = sub_251F34DA0();
  v2[4] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = v4;
  v2[5] = v4;
  v2[6] = malloc(*(void *)(v4 + 64));
  (*(void (**)(void))(v5 + 16))();
  v2[7] = sub_251AF503C(v2);
  return sub_251AF1E50;
}

uint64_t (*sub_251AF1E54(void *a1))()
{
  uint64_t v2 = malloc(0x40uLL);
  *a1 = v2;
  uint64_t v3 = sub_251F34DA0();
  v2[4] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = v4;
  v2[5] = v4;
  v2[6] = malloc(*(void *)(v4 + 64));
  (*(void (**)(void))(v5 + 16))();
  v2[7] = sub_251AF515C(v2);
  return sub_251AF1E50;
}

uint64_t (*sub_251AF1F44(void *a1))()
{
  uint64_t v2 = malloc(0x40uLL);
  *a1 = v2;
  uint64_t v3 = sub_251F34DA0();
  v2[4] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = v4;
  v2[5] = v4;
  v2[6] = malloc(*(void *)(v4 + 64));
  (*(void (**)(void))(v5 + 16))();
  v2[7] = sub_251AF5278(v2);
  return sub_251AF1E50;
}

uint64_t (*sub_251AF2034(void *a1))()
{
  uint64_t v2 = malloc(0x40uLL);
  *a1 = v2;
  uint64_t v3 = sub_251F34DA0();
  v2[4] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = v4;
  v2[5] = v4;
  v2[6] = malloc(*(void *)(v4 + 64));
  (*(void (**)(void))(v5 + 16))();
  v2[7] = sub_251AF5394(v2);
  return sub_251AF1E50;
}

void sub_251AF2124(void *a1)
{
  id v1 = (void *)*a1;
  uint64_t v2 = *(void **)(*a1 + 48);
  uint64_t v3 = *(void *)(*a1 + 32);
  uint64_t v4 = *(void *)(*a1 + 40);
  (*(void (**)(void, void))(*a1 + 56))(*a1, 0);
  (*(void (**)(void *, uint64_t))(v4 + 8))(v2, v3);
  free(v2);
  free(v1);
}

uint64_t CharacteristicValueSet.valueSet.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CharacteristicValueSet.valueSet.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v1 = a1;
  return result;
}

uint64_t (*CharacteristicValueSet.valueSet.modify())()
{
  return nullsub_1;
}

uint64_t CharacteristicValueSet.isLocalOnlyWrite.getter()
{
  return *(unsigned __int8 *)(v0 + 8);
}

void CharacteristicValueSet.options.getter(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 16);
}

unint64_t CharacteristicValueSet.init(valueSet:options:)@<X0>(unint64_t result@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = *a2;
  if (!result) {
    uint64_t result = sub_2519F95BC(MEMORY[0x263F8EE78]);
  }
  *(void *)a3 = result;
  *(unsigned char *)(a3 + 8) = v4 & 1;
  *(void *)(a3 + 16) = v4;
  return result;
}

uint64_t CharacteristicValueSet.add(value:for:on:)(uint64_t a1, unsigned __int8 *a2, id a3)
{
  unsigned __int8 v11 = *a2;
  id v4 = objc_msgSend(a3, sel_uniqueIdentifier);
  uint64_t v5 = sub_251F34DA0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  int64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34D80();

  CharacteristicValueSet.add(value:for:on:)(a1, &v11, (uint64_t)v8);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t CharacteristicValueSet.add(value:for:on:)(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  if (!*(void *)(*(void *)v3 + 16) || (sub_2519FE584(a3), (v7 & 1) == 0))
  {
    uint64_t v8 = sub_251F34DA0();
    uint64_t v9 = *(void *)(v8 - 8);
    MEMORY[0x270FA5388](v8);
    unsigned __int8 v11 = &v21[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v9 + 16))(v11, a3, v8);
    unint64_t v12 = sub_2519FA2DC(MEMORY[0x263F8EE78]);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v22[0] = *(void *)v3;
    *(void *)uint64_t v3 = 0x8000000000000000;
    sub_251A0BCE8(v12, (uint64_t)v11, isUniquelyReferenced_nonNull_native);
    *(void *)uint64_t v3 = v22[0];
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
  }
  uint64_t v14 = sub_251F34DA0();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = &v21[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v15 + 16))(v17, a3, v14);
  uint64_t v18 = sub_251AF1F44(v22);
  if (*v19)
  {
    sub_251A0D51C(a1, (uint64_t)v21);
    sub_2519F80DC((uint64_t)v21, v6);
  }
  ((void (*)(void *, void))v18)(v22, 0);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v15 + 8))(v17, v14);
}

{
  unsigned __int8 v4;

  id v4 = *a2;
  return CharacteristicValueSet.add(value:for:on:)(a1, &v4, a3);
}

uint64_t CharacteristicValueSet.add(value:for:on:)(uint64_t a1, unsigned __int8 *a2, void *a3)
{
  return sub_251AF26A4(a1, a2, a3, (void (*)(char *, char *))sub_251AF2608);
}

{
  return sub_251AF26A4(a1, a2, a3, (void (*)(char *, char *))sub_251AF2D8C);
}

uint64_t sub_251AF2608@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_251AF3164(a1, a2);
}

uint64_t CharacteristicValueSet.add(value:for:on:)(uint64_t a1, char *a2, void *a3)
{
  uint64_t v6 = a3[3];
  char v7 = __swift_project_boxed_opaque_existential_1(a3, v6);
  return sub_251AF7068(a1, a2, (uint64_t)v7, v3, v6);
}

uint64_t sub_251AF26A4(uint64_t a1, unsigned __int8 *a2, void *a3, void (*a4)(char *, char *))
{
  uint64_t v6 = v4;
  uint64_t v67 = a1;
  unsigned int v72 = *a2;
  uint64_t v7 = a3[3];
  uint64_t v8 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v7);
  uint64_t v9 = sub_251F34DA0();
  uint64_t v11 = sub_251AF11FC(a4, 0, v7, v9, MEMORY[0x263F8E628], v8, MEMORY[0x263F8E658], v10);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(v11 + 16);
  uint64_t v16 = *(void *)(v9 - 8);
  uint64_t v66 = v11;
  uint64_t v65 = v9 - 8;
  uint64_t v64 = v16;
  if (v15)
  {
    unint64_t v17 = v11 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
    uint64_t v75 = *(void *)(v16 + 72);
    uint64_t v71 = (void (**)(char *, void, uint64_t, uint64_t))(v16 + 56);
    uint64_t v18 = *(void (**)(char *, unint64_t, uint64_t))(v16 + 16);
    uint64_t v80 = v16 + 16;
    uint64_t v81 = v18;
    uint64_t v70 = (uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
    uint64_t v68 = v16 + 32;
    uint64_t v69 = v16;
    uint64_t v76 = (void (**)(char *, uint64_t))(v16 + 8);
    swift_bridgeObjectRetain();
    uint64_t v74 = v6;
    while (1)
    {
      v81(v14, v17, v9);
      (*v71)(v14, 0, 1, v9);
      uint64_t v20 = (*v70)(v14, 1, v9);
      if (v20 == 1) {
        return swift_bridgeObjectRelease_n();
      }
      unint64_t v78 = v17;
      uint64_t v79 = v15;
      uint64_t v77 = &v63;
      uint64_t v21 = *(void *)(v69 + 64);
      MEMORY[0x270FA5388](v20);
      unint64_t v22 = (v21 + 15) & 0xFFFFFFFFFFFFFFF0;
      int64_t v23 = (char *)&v63 - v22;
      unint64_t v25 = (*(uint64_t (**)(char *, char *, uint64_t))(v24 + 32))((char *)&v63 - v22, v14, v9);
      if (!*(void *)(*v6 + 16)) {
        break;
      }
      unint64_t v25 = sub_2519FE584((uint64_t)&v63 - v22);
      if ((v26 & 1) == 0) {
        break;
      }
LABEL_20:
      MEMORY[0x270FA5388](v25);
      BOOL v44 = (char *)&v63 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
      v81(v44, (unint64_t)v23, v9);
      char v45 = sub_251AF1F44(v84);
      if (*v46)
      {
        char v47 = v46;
        uint64_t v73 = v45;
        sub_251A0D51C(v67, (uint64_t)v83);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        id v82 = (void *)*v47;
        uint64_t v49 = v82;
        *char v47 = 0x8000000000000000;
        unint64_t v51 = sub_2519FE568(v72);
        uint64_t v52 = v49[2];
        BOOL v53 = (v50 & 1) == 0;
        uint64_t v54 = v52 + v53;
        if (__OFADD__(v52, v53)) {
          goto LABEL_37;
        }
        char v55 = v50;
        if (v49[3] >= v54)
        {
          if (isUniquelyReferenced_nonNull_native)
          {
            uint64_t v58 = v82;
            if ((v50 & 1) == 0) {
              goto LABEL_30;
            }
          }
          else
          {
            sub_251A11E30();
            uint64_t v58 = v82;
            if ((v55 & 1) == 0) {
              goto LABEL_30;
            }
          }
        }
        else
        {
          sub_251A014E8(v54, isUniquelyReferenced_nonNull_native);
          unint64_t v56 = sub_2519FE568(v72);
          if ((v55 & 1) != (v57 & 1)) {
            goto LABEL_40;
          }
          unint64_t v51 = v56;
          uint64_t v58 = v82;
          if ((v55 & 1) == 0)
          {
LABEL_30:
            v58[(v51 >> 6) + 8] |= 1 << v51;
            *(unsigned char *)(v58[6] + v51) = v72;
            sub_251A0D578(v83, (_OWORD *)(v58[7] + 32 * v51));
            uint64_t v60 = v58[2];
            BOOL v42 = __OFADD__(v60, 1);
            uint64_t v61 = v60 + 1;
            if (v42) {
              goto LABEL_39;
            }
            void v58[2] = v61;
            goto LABEL_32;
          }
        }
        uint64_t v59 = (_OWORD *)(v58[7] + 32 * v51);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v59);
        sub_251A0D578(v83, v59);
LABEL_32:
        *char v47 = v58;
        swift_bridgeObjectRelease();
        ((void (*)(void *, void))v73)(v84, 0);
        uint64_t v6 = v74;
        goto LABEL_4;
      }
      ((void (*)(void *, void))v45)(v84, 0);
LABEL_4:
      uint64_t v19 = (uint64_t (*)(char *, uint64_t))*v76;
      (*v76)(v44, v9);
      v19(v23, v9);
      unint64_t v17 = v78 + v75;
      uint64_t v15 = v79 - 1;
      if (v79 == 1) {
        goto LABEL_34;
      }
    }
    uint64_t v73 = (uint64_t (*)())&v63;
    MEMORY[0x270FA5388](v25);
    uint64_t v27 = (char *)&v63 - v22;
    v81((char *)&v63 - v22, (unint64_t)&v63 - v22, v9);
    unint64_t v28 = sub_2519FA2DC(MEMORY[0x263F8EE78]);
    int v29 = swift_isUniquelyReferenced_nonNull_native();
    v84[0] = *v6;
    uint64_t v30 = v84[0];
    *uint64_t v6 = 0x8000000000000000;
    unint64_t v32 = sub_2519FE584((uint64_t)v27);
    uint64_t v33 = *(void *)(v30 + 16);
    BOOL v34 = (v31 & 1) == 0;
    uint64_t v35 = v33 + v34;
    if (__OFADD__(v33, v34))
    {
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      sub_251F36BA0();
      __break(1u);
LABEL_41:
      uint64_t result = sub_251F36BA0();
      __break(1u);
      return result;
    }
    char v36 = v31;
    if (*(void *)(v30 + 24) < v35)
    {
      sub_251A014DC(v35, v29);
      unint64_t v37 = sub_2519FE584((uint64_t)v27);
      if ((v36 & 1) != (v38 & 1)) {
        goto LABEL_41;
      }
      unint64_t v32 = v37;
      uint64_t v39 = (void *)v84[0];
      if ((v36 & 1) == 0) {
        goto LABEL_17;
      }
LABEL_15:
      uint64_t v40 = v39[7];
      swift_bridgeObjectRelease();
      *(void *)(v40 + 8 * v32) = v28;
LABEL_19:
      uint64_t v6 = v74;
      *uint64_t v74 = v39;
      swift_bridgeObjectRelease();
      unint64_t v25 = ((uint64_t (*)(char *, uint64_t))*v76)(v27, v9);
      goto LABEL_20;
    }
    if (v29)
    {
      uint64_t v39 = (void *)v84[0];
      if (v31) {
        goto LABEL_15;
      }
    }
    else
    {
      sub_251A11E24();
      uint64_t v39 = (void *)v84[0];
      if (v36) {
        goto LABEL_15;
      }
    }
LABEL_17:
    v39[(v32 >> 6) + 8] |= 1 << v32;
    v81((char *)(v39[6] + v32 * v75), (unint64_t)v27, v9);
    *(void *)(v39[7] + 8 * v32) = v28;
    uint64_t v41 = v39[2];
    BOOL v42 = __OFADD__(v41, 1);
    uint64_t v43 = v41 + 1;
    if (v42) {
      goto LABEL_38;
    }
    v39[2] = v43;
    goto LABEL_19;
  }
  swift_bridgeObjectRetain();
LABEL_34:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v64 + 56))(v14, 1, 1, v9);
  return swift_bridgeObjectRelease_n();
}

void sub_251AF2D8C(id *a1)
{
}

uint64_t CharacteristicValueSet.add(values:on:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if (*(void *)(v6 + 16) && (unint64_t v7 = sub_2519FE584(a2), (v8 & 1) != 0))
  {
    uint64_t v9 = *(void *)(*(void *)(v6 + 56) + 8 * v7);
    uint64_t v10 = sub_251F34DA0();
    uint64_t v11 = *(void *)(v10 - 8);
    MEMORY[0x270FA5388](v10);
    uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a2, v10);
    swift_bridgeObjectRetain();
    uint64_t v14 = swift_bridgeObjectRetain();
    a1 = sub_251AF30C0(v14, v9);
  }
  else
  {
    uint64_t v10 = sub_251F34DA0();
    uint64_t v11 = *(void *)(v10 - 8);
    MEMORY[0x270FA5388](v10);
    uint64_t v13 = (char *)&v18 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a2, v10);
    swift_bridgeObjectRetain();
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v19 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  sub_251A0BCE8(a1, (uint64_t)v13, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v19;
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

Swift::Void __swiftcall CharacteristicValueSet.add(values:on:)(Swift::OpaquePointer values, HMService on)
{
  id v3 = [(objc_class *)on.super.isa uniqueIdentifier];
  uint64_t v4 = sub_251F34DA0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v7 = (char *)&v8 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251F34D80();

  CharacteristicValueSet.add(values:on:)((uint64_t)values._rawValue, (uint64_t)v7);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_251AF30C0(uint64_t a1, uint64_t a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = a2;
  sub_251AF4C20(a1, (uint64_t)sub_251AF5E80, 0, isUniquelyReferenced_nonNull_native, (uint64_t)&v8);
  uint64_t v6 = v8;
  swift_bridgeObjectRelease();
  if (v2) {
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t CharacteristicValueSet.add(values:on:)(uint64_t a1, void *a2)
{
  return sub_251AF3248(a1, a2, (void (*)(char *, char *))sub_251AF2608);
}

{
  uint64_t v2;
  uint64_t v4;
  void *v5;
  uint64_t vars8;

  uint64_t v4 = a2[3];
  uint64_t v5 = __swift_project_boxed_opaque_existential_1(a2, v4);
  return sub_251AF7194(a1, (uint64_t)v5, v2, v4);
}

{
  return sub_251AF3248(a1, a2, (void (*)(char *, char *))sub_251AF2D8C);
}

uint64_t sub_251AF3164@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_251F34DA0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
}

uint64_t sub_251AF3248(uint64_t a1, void *a2, void (*a3)(char *, char *))
{
  uint64_t v5 = a2[3];
  uint64_t v6 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v5);
  uint64_t v7 = sub_251F34DA0();
  uint64_t v9 = sub_251AF11FC(a3, 0, v5, v7, MEMORY[0x263F8E628], v6, MEMORY[0x263F8E658], v8);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)v89 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(v7 - 8);
  uint64_t v100 = *(void *)(v9 + 16);
  v89[2] = v9;
  v89[1] = v7 - 8;
  v89[0] = v13;
  if (v100)
  {
    unint64_t v99 = v9 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    uint64_t v102 = *(void *)(v13 + 72);
    uint64_t v105 = *(void (**)(void))(v13 + 16);
    uint64_t v104 = v13 + 16;
    unint64_t v98 = (void (**)(char *, void, uint64_t, uint64_t))(v13 + 56);
    uint64_t v97 = (uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
    uint64_t v94 = v13 + 32;
    uint64_t v91 = a1 + 64;
    uint64_t v107 = &v111;
    uint64_t v95 = v13;
    os_log_type_t v93 = (void (**)(char *, uint64_t))(v13 + 8);
    swift_bridgeObjectRetain();
    uint64_t v14 = 0;
    uint64_t v101 = a1;
    uint64_t v90 = v12;
    while (1)
    {
      ((void (*)(char *, unint64_t, uint64_t))v105)(v12, v99 + v102 * v14, v7);
      (*v98)(v12, 0, 1, v7);
      uint64_t v17 = (*v97)(v12, 1, v7);
      if (v17 == 1) {
        return swift_bridgeObjectRelease_n();
      }
      uint64_t v18 = *(void *)(v95 + 64);
      MEMORY[0x270FA5388](v17);
      unint64_t v19 = (v18 + 15) & 0xFFFFFFFFFFFFFFF0;
      uint64_t v20 = (char *)v89 - v19;
      unint64_t v22 = (*(uint64_t (**)(char *, char *, uint64_t))(v21 + 32))((char *)v89 - v19, v12, v7);
      uint64_t v23 = *v106;
      uint64_t v24 = *(void *)(*v106 + 16);
      uint64_t v103 = v89;
      if (v24)
      {
        unint64_t v22 = sub_2519FE584((uint64_t)v89 - v19);
        if (v25) {
          break;
        }
      }
      MEMORY[0x270FA5388](v22);
      BOOL v44 = (char *)v89 - v19;
      ((void (*)(char *, char *, uint64_t))v105)(v44, v20, v7);
      swift_bridgeObjectRetain();
      char v45 = v106;
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v113 = (void *)*v45;
      char v47 = v113;
      *char v45 = 0x8000000000000000;
      unint64_t v49 = sub_2519FE584((uint64_t)v44);
      uint64_t v50 = v47[2];
      BOOL v51 = (v48 & 1) == 0;
      uint64_t v52 = v50 + v51;
      if (__OFADD__(v50, v51)) {
        goto LABEL_59;
      }
      char v53 = v48;
      if (v47[3] >= v52)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_251A11E24();
        }
      }
      else
      {
        sub_251A014DC(v52, isUniquelyReferenced_nonNull_native);
        unint64_t v54 = sub_2519FE584((uint64_t)v44);
        if ((v53 & 1) != (v55 & 1)) {
          goto LABEL_63;
        }
        unint64_t v49 = v54;
      }
      a1 = v101;
      unint64_t v56 = v113;
      if (v53)
      {
        uint64_t v15 = v113[7];
        swift_bridgeObjectRelease();
        *(void *)(v15 + 8 * v49) = a1;
      }
      else
      {
        v113[(v49 >> 6) + 8] |= 1 << v49;
        ((void (*)(unint64_t, char *, uint64_t))v105)(v56[6] + v49 * v102, v44, v7);
        *(void *)(v56[7] + 8 * v49) = a1;
        uint64_t v57 = v56[2];
        BOOL v58 = __OFADD__(v57, 1);
        uint64_t v59 = v57 + 1;
        if (v58) {
          goto LABEL_60;
        }
        v56[2] = v59;
      }
      void *v106 = v56;
      swift_bridgeObjectRelease();
      uint64_t v16 = *v93;
      (*v93)(v44, v7);
LABEL_5:
      ++v14;
      v16(v20, v7);
      if (v14 == v100) {
        goto LABEL_55;
      }
    }
    unint64_t v92 = v89;
    uint64_t v26 = *(void *)(v23 + 56);
    uint64_t v27 = a1;
    unint64_t v28 = *(void **)(v26 + 8 * v22);
    MEMORY[0x270FA5388](v22);
    uint64_t v96 = (uint64_t)v89 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
    v105();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v29 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v119 = 0;
    uint64_t v120 = v28;
    uint64_t v30 = -1 << *(unsigned char *)(v27 + 32);
    uint64_t v31 = ~v30;
    uint64_t v32 = -v30;
    if (v32 < 64) {
      uint64_t v33 = ~(-1 << v32);
    }
    else {
      uint64_t v33 = -1;
    }
    uint64_t v34 = v33 & *(void *)(v27 + 64);
    uint64_t v113 = (void *)v27;
    uint64_t v114 = v91;
    uint64_t v115 = v31;
    uint64_t v116 = 0;
    uint64_t v117 = v34;
    uint64_t v118 = sub_251AF5E80;
    swift_bridgeObjectRetain();
    sub_251AF5E90((uint64_t)v110);
    if (v112)
    {
      uint64_t v35 = v110[0];
      sub_251A0D578(v107, v109);
      unint64_t v37 = sub_2519FE568(v35);
      uint64_t v38 = v28[2];
      BOOL v39 = (v36 & 1) == 0;
      uint64_t v40 = v38 + v39;
      if (__OFADD__(v38, v39))
      {
LABEL_57:
        __break(1u);
        goto LABEL_58;
      }
      char v41 = v36;
      if (v28[3] >= v40)
      {
        if (v29)
        {
          if ((v36 & 1) == 0) {
            goto LABEL_31;
          }
        }
        else
        {
          sub_251A11E30();
          if ((v41 & 1) == 0) {
            goto LABEL_31;
          }
        }
      }
      else
      {
        sub_251A014E8(v40, v29);
        unint64_t v42 = sub_2519FE568(v35);
        if ((v41 & 1) != (v43 & 1)) {
          goto LABEL_62;
        }
        unint64_t v37 = v42;
        if ((v41 & 1) == 0)
        {
LABEL_31:
          unint64_t v28 = v120;
          v120[(v37 >> 6) + 8] |= 1 << v37;
          *(unsigned char *)(v28[6] + v37) = v35;
          sub_251A0D578(v109, (_OWORD *)(v28[7] + 32 * v37));
          uint64_t v61 = v28[2];
          BOOL v58 = __OFADD__(v61, 1);
          uint64_t v62 = v61 + 1;
          if (!v58)
          {
            void v28[2] = v62;
            goto LABEL_36;
          }
LABEL_58:
          __break(1u);
LABEL_59:
          __break(1u);
LABEL_60:
          __break(1u);
LABEL_61:
          __break(1u);
LABEL_62:
          sub_251F36BA0();
          __break(1u);
LABEL_63:
          uint64_t result = sub_251F36BA0();
          __break(1u);
          return result;
        }
      }
      unint64_t v28 = v120;
      sub_251A0D578(v109, v108);
      uint64_t v60 = (_OWORD *)(v28[7] + 32 * v37);
LABEL_33:
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v60);
      sub_251A0D578(v108, v60);
LABEL_36:
      while (1)
      {
        sub_251AF5E90((uint64_t)v110);
        if (!v112) {
          break;
        }
        uint64_t v65 = v110[0];
        sub_251A0D578(v107, v109);
        unint64_t v67 = sub_2519FE568(v65);
        uint64_t v68 = v28[2];
        BOOL v69 = (v66 & 1) == 0;
        uint64_t v70 = v68 + v69;
        if (__OFADD__(v68, v69)) {
          goto LABEL_57;
        }
        char v71 = v66;
        if (v28[3] < v70)
        {
          sub_251A014E8(v70, 1);
          unint64_t v72 = sub_2519FE568(v65);
          if ((v71 & 1) != (v73 & 1)) {
            goto LABEL_62;
          }
          unint64_t v67 = v72;
        }
        if (v71)
        {
          unint64_t v28 = v120;
          sub_251A0D578(v109, v108);
          uint64_t v60 = (_OWORD *)(v28[7] + 32 * v67);
          goto LABEL_33;
        }
        unint64_t v28 = v120;
        v120[(v67 >> 6) + 8] |= 1 << v67;
        *(unsigned char *)(v28[6] + v67) = v65;
        sub_251A0D578(v109, (_OWORD *)(v28[7] + 32 * v67));
        uint64_t v63 = v28[2];
        BOOL v58 = __OFADD__(v63, 1);
        uint64_t v64 = v63 + 1;
        if (v58) {
          goto LABEL_58;
        }
        void v28[2] = v64;
      }
    }
    swift_bridgeObjectRelease();
    sub_251A1E630();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v74 = v106;
    int v75 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v113 = (void *)*v74;
    uint64_t v76 = v113;
    *uint64_t v74 = 0x8000000000000000;
    unint64_t v78 = sub_2519FE584(v96);
    uint64_t v79 = v76[2];
    BOOL v80 = (v77 & 1) == 0;
    uint64_t v81 = v79 + v80;
    if (__OFADD__(v79, v80)) {
      goto LABEL_61;
    }
    char v82 = v77;
    if (v76[3] < v81)
    {
      sub_251A014DC(v81, v75);
      uint64_t v81 = sub_2519FE584(v96);
      if ((v82 & 1) != (v83 & 1)) {
        goto LABEL_63;
      }
      unint64_t v78 = v81;
      uint64_t v84 = v113;
      if ((v82 & 1) == 0) {
        goto LABEL_52;
      }
LABEL_50:
      uint64_t v85 = v84[7];
      swift_bridgeObjectRelease();
      *(void *)(v85 + 8 * v78) = v28;
      uint64_t v12 = v90;
      uint64_t v86 = v96;
LABEL_53:
      void *v106 = v84;
      swift_bridgeObjectRelease();
      uint64_t v16 = *v93;
      (*v93)((char *)v86, v7);
      a1 = v101;
      goto LABEL_5;
    }
    if (v75)
    {
      uint64_t v84 = v113;
      if (v77) {
        goto LABEL_50;
      }
    }
    else
    {
      uint64_t v81 = (uint64_t)sub_251A11E24();
      uint64_t v84 = v113;
      if (v82) {
        goto LABEL_50;
      }
    }
LABEL_52:
    MEMORY[0x270FA5388](v81);
    uint64_t v87 = v96;
    ((void (*)(char *, uint64_t, uint64_t))v105)((char *)v89 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), v96, v7);
    sub_251A111B4(v78, (uint64_t)v89 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v28, v84);
    uint64_t v12 = v90;
    uint64_t v86 = v87;
    goto LABEL_53;
  }
  swift_bridgeObjectRetain();
LABEL_55:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v89[0] + 56))(v12, 1, 1, v7);
  return swift_bridgeObjectRelease_n();
}

void sub_251AF3C9C(id *a1)
{
  id v1 = objc_msgSend(*a1, sel_uniqueIdentifier);
  sub_251F34D80();
}

void sub_251AF3CF4(void *a1, uint64_t a2)
{
  char v66 = a1;
  if (qword_26B2200E0 == -1) {
    goto LABEL_2;
  }
  while (1)
  {
    swift_once();
LABEL_2:
    id v81 = (id)qword_26B21FF50;
    uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D990);
    char v71 = &v59;
    uint64_t v4 = *(void *)(*(void *)(v3 - 8) + 64);
    uint64_t v5 = MEMORY[0x270FA5388](v3);
    uint64_t v68 = (char *)((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
    int64_t v6 = (char *)&v59 - v68;
    uint64_t v7 = *(int *)(v5 + 48);
    uint64_t v8 = sub_251F34DA0();
    uint64_t v9 = *(void *)(v8 - 8);
    unint64_t v67 = *(void (**)(int64_t, uint64_t, uint64_t))(v9 + 16);
    v67(v6, a2, v8);
    *(void *)(v6 + v7) = *(void *)(a2 + v7);
    uint64_t v10 = (void *)sub_251F34D50();
    uint64_t v70 = *(void (**)(int64_t, uint64_t))(v9 + 8);
    v70(v6, v8);
    id v11 = objc_msgSend(v81, sel_serviceFor_, v10);

    id v69 = v11;
    if (!v11) {
      return;
    }
    MEMORY[0x270FA5388](v12);
    int64_t v13 = (char *)&v59 - v68;
    uint64_t v14 = *(int *)(v3 + 48);
    v67((char *)&v59 - v68, a2, v8);
    uint64_t v15 = *(void *)(a2 + v7);
    *(void *)(v13 + v14) = v15;
    uint64_t v16 = *(void *)(v15 + 64);
    uint64_t v62 = v15 + 64;
    a2 = 1 << *(unsigned char *)(v15 + 32);
    uint64_t v17 = -1;
    if (a2 < 64) {
      uint64_t v17 = ~(-1 << a2);
    }
    unint64_t v18 = v17 & v16;
    swift_bridgeObjectRetain();
    v70(v13, v8);
    int64_t v19 = 0;
    unint64_t v20 = (unint64_t)(a2 + 63) >> 6;
    uint64_t v64 = (uint64_t)v76 + 8;
    uint64_t v68 = &v79;
    unint64_t v59 = v20 - 1;
    int64_t v63 = v20;
    unint64_t v60 = v20 - 5;
    uint64_t v65 = v15;
    uint64_t v61 = v15 + 104;
    if (v18) {
      break;
    }
LABEL_10:
    int64_t v25 = v19 + 1;
    if (!__OFADD__(v19, 1))
    {
      if (v25 >= v63)
      {
        uint64_t v27 = (char *)v19;
      }
      else
      {
        unint64_t v26 = *(void *)(v62 + 8 * v25);
        if (v26)
        {
LABEL_13:
          uint64_t v22 = (v26 - 1) & v26;
          unint64_t v23 = __clz(__rbit64(v26)) + (v25 << 6);
          int64_t v19 = v25;
          goto LABEL_9;
        }
        uint64_t v27 = (char *)(v19 + 1);
        if (v19 + 2 < v63)
        {
          unint64_t v26 = *(void *)(v62 + 8 * (v19 + 2));
          if (v26)
          {
            int64_t v25 = v19 + 2;
            goto LABEL_13;
          }
          uint64_t v27 = (char *)(v19 + 2);
          if (v19 + 3 < v63)
          {
            unint64_t v26 = *(void *)(v62 + 8 * (v19 + 3));
            if (v26)
            {
              int64_t v25 = v19 + 3;
              goto LABEL_13;
            }
            int64_t v25 = v19 + 4;
            uint64_t v27 = (char *)(v19 + 3);
            if (v19 + 4 < v63)
            {
              unint64_t v26 = *(void *)(v62 + 8 * v25);
              if (v26) {
                goto LABEL_13;
              }
              while (v60 != v19)
              {
                unint64_t v26 = *(void *)(v61 + 8 * v19++);
                if (v26)
                {
                  int64_t v25 = v19 + 4;
                  goto LABEL_13;
                }
              }
              uint64_t v27 = (char *)v59;
            }
          }
        }
      }
      uint64_t v22 = 0;
      uint64_t v77 = 0;
      int64_t v19 = (int64_t)v27;
      memset(v76, 0, sizeof(v76));
      goto LABEL_16;
    }
LABEL_64:
    __break(1u);
  }
  while (1)
  {
    while (1)
    {
      unint64_t v21 = __clz(__rbit64(v18));
      uint64_t v22 = (v18 - 1) & v18;
      unint64_t v23 = v21 | (v19 << 6);
LABEL_9:
      uint64_t v24 = *(void *)(v65 + 56);
      LOBYTE(v76[0]) = *(unsigned char *)(*(void *)(v65 + 48) + v23);
      sub_251A0D51C(v24 + 32 * v23, v64);
LABEL_16:
      sub_251A4ECF0((uint64_t)v76, (uint64_t)v78, &qword_269B9DFB8);
      if (!v80)
      {

        swift_release();
        return;
      }
      uint64_t v70 = (void (*)(int64_t, uint64_t))v19;
      LODWORD(v81) = v78[0];
      sub_251A0D578(v68, v76);
      id v28 = objc_msgSend(v69, sel_characteristics);
      unint64_t v67 = (void (*)(int64_t, uint64_t, uint64_t))sub_251A1A568(0, (unint64_t *)&qword_26B21F170);
      a2 = sub_251F35AC0();

      char v71 = (void *)v22;
      if (!((unint64_t)a2 >> 62)) {
        break;
      }
      swift_bridgeObjectRetain();
      uint64_t v29 = sub_251F366C0();
      if (v29) {
        goto LABEL_19;
      }
LABEL_7:
      swift_bridgeObjectRelease_n();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v76);
      int64_t v19 = (int64_t)v70;
      unint64_t v18 = (unint64_t)v71;
      if (!v71) {
        goto LABEL_10;
      }
    }
    uint64_t v29 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v29) {
      goto LABEL_7;
    }
LABEL_19:
    uint64_t v30 = 4;
    while (1)
    {
      if ((a2 & 0xC000000000000001) != 0) {
        id v31 = (id)MEMORY[0x2533AB3A0](v30 - 4, a2);
      }
      else {
        id v31 = *(id *)(a2 + 8 * v30);
      }
      uint64_t v32 = v31;
      uint64_t v33 = v30 - 3;
      if (__OFADD__(v30 - 4, 1))
      {
        __break(1u);
LABEL_63:
        __break(1u);
        goto LABEL_64;
      }
      id v34 = objc_msgSend(v31, sel_characteristicType);
      uint64_t v35 = sub_251F356F0();
      unint64_t v37 = v36;

      v38._uint64_t countAndFlagsBits = v35;
      v38._object = v37;
      CharacteristicKind.init(rawValue:)(v38);
      char v39 = v75[0];
      if (LOBYTE(v75[0]) == 174) {
        char v39 = 0;
      }
      LOBYTE(v75[0]) = v39;
      LOBYTE(v73) = (_BYTE)v81;
      unint64_t v40 = CharacteristicKind.rawValue.getter();
      uint64_t v42 = v41;
      if (v40 == CharacteristicKind.rawValue.getter() && v42 == v43) {
        break;
      }
      char v44 = sub_251F36B10();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v44) {
        goto LABEL_32;
      }

      ++v30;
      if (v33 == v29) {
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease_n();
LABEL_32:
    swift_bridgeObjectRelease_n();
    sub_251A1A568(0, (unint64_t *)&qword_26B21F180);
    sub_251A0D51C((uint64_t)v76, (uint64_t)v75);
    LOBYTE(v72[0]) = (_BYTE)v81;
    static HMService.convert(_:characteristicKind:)((uint64_t)v75, (unsigned __int8 *)v72, (uint64_t)&v73);
    sub_251A1B064((uint64_t)v75, &qword_26B21E190);
    sub_251A0D51C((uint64_t)v76, (uint64_t)v72);
    if (v74)
    {
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v72);
      sub_251A0D578(&v73, v75);
    }
    else
    {
      sub_251A0D578(v72, v75);
      sub_251A1B064((uint64_t)&v73, &qword_26B21E190);
    }
    unint64_t v18 = (unint64_t)v71;
    sub_251A0D578(v75, &v73);
    a2 = v32;
    char v45 = v66;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&v72[0] = *v45;
    uint64_t v47 = *(void *)&v72[0];
    *char v45 = 0x8000000000000000;
    unint64_t v49 = sub_2519FE68C(a2);
    uint64_t v50 = *(void *)(v47 + 16);
    BOOL v51 = (v48 & 1) == 0;
    uint64_t v52 = v50 + v51;
    if (__OFADD__(v50, v51)) {
      goto LABEL_63;
    }
    char v53 = v48;
    if (*(void *)(v47 + 24) < v52) {
      break;
    }
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      sub_251A1509C();
    }
LABEL_41:
    uint64_t v56 = *(void *)&v72[0];
    if (v53)
    {
      uint64_t v57 = (_OWORD *)(*(void *)(*(void *)&v72[0] + 56) + 32 * v49);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v57);
      sub_251A0D578(&v73, v57);
    }
    else
    {
      sub_251A11960(v49, a2, &v73, *(void **)&v72[0]);
      id v58 = (id)a2;
    }
    *char v66 = v56;

    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v76);
    int64_t v19 = (int64_t)v70;
    if (!v18) {
      goto LABEL_10;
    }
  }
  sub_251A074D8(v52, isUniquelyReferenced_nonNull_native);
  unint64_t v54 = sub_2519FE68C(a2);
  if ((v53 & 1) == (v55 & 1))
  {
    unint64_t v49 = v54;
    goto LABEL_41;
  }
  sub_251F36BA0();
  __break(1u);
}

uint64_t CharacteristicValueSet.batchWrites.getter()
{
  uint64_t v2 = *v0;
  BOOL v51 = (void *)MEMORY[0x263F8EE80];
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v41 = (void *)(v2 + 64);
  uint64_t v4 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & v3;
  unint64_t v40 = &v34;
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D990);
  uint64_t v7 = *(void *)(*(void *)(v43 - 8) + 64);
  MEMORY[0x270FA5388](v43);
  int64_t v42 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain_n();
  int64_t v8 = 0;
  if (!v6) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v9 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (unint64_t i = v9 | (v8 << 6); ; unint64_t i = __clz(__rbit64(v12)) + (v8 << 6))
  {
    uint64_t v14 = *(void *)(v2 + 48);
    uint64_t v15 = sub_251F34DA0();
    uint64_t v16 = (*(uint64_t (**)(char *, unint64_t, uint64_t))(*(void *)(v15 - 8) + 16))((char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v14 + *(void *)(*(void *)(v15 - 8) + 72) * i, v15);
    *(uint64_t *)((char *)&v34 + *(int *)(v43 + 48) - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0)) = *(void *)(*(void *)(v2 + 56) + 8 * i);
    MEMORY[0x270FA5388](v16);
    id v1 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_251A4ECF0((uint64_t)v1, (uint64_t)v1, &qword_269B9D990);
    swift_bridgeObjectRetain();
    sub_251AF3CF4(&v51, (uint64_t)v1);
    sub_251A1B064((uint64_t)v1, &qword_269B9D990);
    if (v6) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v8++, 1))
    {
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v8 >= v42) {
      goto LABEL_24;
    }
    unint64_t v12 = v41[v8];
    if (!v12) {
      break;
    }
LABEL_17:
    unint64_t v6 = (v12 - 1) & v12;
  }
  int64_t v13 = v8 + 1;
  if (v8 + 1 >= v42) {
    goto LABEL_24;
  }
  unint64_t v12 = v41[v13];
  if (v12) {
    goto LABEL_16;
  }
  int64_t v13 = v8 + 2;
  if (v8 + 2 >= v42) {
    goto LABEL_24;
  }
  unint64_t v12 = v41[v13];
  if (v12) {
    goto LABEL_16;
  }
  int64_t v13 = v8 + 3;
  if (v8 + 3 >= v42) {
    goto LABEL_24;
  }
  unint64_t v12 = v41[v13];
  if (v12)
  {
LABEL_16:
    int64_t v8 = v13;
    goto LABEL_17;
  }
  int64_t v13 = v8 + 4;
  if (v8 + 4 < v42)
  {
    unint64_t v12 = v41[v13];
    if (!v12)
    {
      while (1)
      {
        int64_t v8 = v13 + 1;
        if (__OFADD__(v13, 1)) {
          break;
        }
        if (v8 >= v42) {
          goto LABEL_24;
        }
        unint64_t v12 = v41[v8];
        ++v13;
        if (v12) {
          goto LABEL_17;
        }
      }
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
      swift_bridgeObjectRelease();
      sub_251A1B064((uint64_t)v1, &qword_269B9D990);
      uint64_t result = swift_release();
      __break(1u);
      return result;
    }
    goto LABEL_16;
  }
LABEL_24:
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v17 = (uint64_t)v51;
  uint64_t v18 = v51[2];
  if (v18)
  {
    uint64_t v53 = MEMORY[0x263F8EE78];
    sub_251F36520();
    uint64_t v19 = sub_251AC5768(v17);
    uint64_t v21 = v20;
    char v23 = v22 & 1;
    uint64_t v41 = self;
    unint64_t v40 = &v52;
    uint64_t v39 = (uint64_t)v49 + 8;
    Swift::String v38 = v46;
    uint64_t v37 = (uint64_t)v47 + 8;
    char v36 = v45;
    uint64_t v35 = v17 + 64;
    int64_t v42 = v18 - 1;
    id v1 = (char *)v45;
    while (1)
    {
      uint64_t v24 = (uint64_t)v40;
      uint64_t v43 = v21;
      int64_t v25 = sub_251AF6DAC(v40, v19, v21, v23 & 1, v17);
      BOOL v51 = v25;
      *(void *)&v49[0] = v25;
      sub_251A0D51C(v24, v39);
      v47[0] = v49[0];
      v47[1] = v49[1];
      uint64_t v48 = v50;
      unint64_t v26 = v25;
      sub_251A1B064((uint64_t)&v51, &qword_269B9D760);
      uint64_t v27 = *(void **)&v47[0];
      v45[4] = *(void *)&v47[0];
      uint64_t v28 = v37;
      sub_251A0D51C(v37, (uint64_t)v46);
      char v44 = v27;
      sub_251A0D51C(v28, (uint64_t)v45);
      __swift_project_boxed_opaque_existential_1(v45, v45[3]);
      id v29 = v27;
      id v30 = objc_msgSend(v41, sel_writeRequestWithCharacteristic_value_, v29, sub_251F36B00());
      swift_unknownObjectRelease();

      __swift_destroy_boxed_opaque_existential_0((uint64_t)v45);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v46);
      sub_251A1B064((uint64_t)v47, &qword_269B9D760);
      sub_251F364F0();
      sub_251F36530();
      sub_251F36540();
      sub_251F36500();
      if (v23) {
        goto LABEL_41;
      }
      if (v19 < 0 || v19 >= -(-1 << *(unsigned char *)(v17 + 32))) {
        goto LABEL_37;
      }
      if (((*(void *)(v35 + (((unint64_t)v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
        goto LABEL_38;
      }
      if (*(_DWORD *)(v17 + 36) != v43) {
        goto LABEL_39;
      }
      uint64_t v31 = sub_251F36280();
      if (!v42)
      {
        uint64_t v32 = v53;
        swift_bridgeObjectRelease();
        return v32;
      }
      uint64_t v19 = v31;
      char v23 = 0;
      uint64_t v21 = *(unsigned int *)(v17 + 36);
      --v42;
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x263F8EE78];
}

uint64_t CharacteristicValueSet.description.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_251AF15F8(0, 0xE000000000000000, v1);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_251AF4BBC()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_251AF15F8(0, 0xE000000000000000, v1);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_251AF4C20(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = ~v7;
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v10 = -v7;
  uint64_t v47 = a1;
  uint64_t v48 = a1 + 64;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  uint64_t v49 = v8;
  uint64_t v50 = 0;
  uint64_t v51 = v11 & v9;
  uint64_t v52 = a2;
  uint64_t v53 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_251AF5E90((uint64_t)v44);
  if (!v46) {
    goto LABEL_27;
  }
  uint64_t v12 = v44[0];
  sub_251A0D578(&v45, v43);
  int64_t v13 = *(void **)a5;
  unint64_t v15 = sub_2519FE568(v12);
  uint64_t v16 = v13[2];
  BOOL v17 = (v14 & 1) == 0;
  uint64_t v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  char v19 = v14;
  if (v13[3] >= v18)
  {
    if (a4)
    {
      if (v14) {
        goto LABEL_12;
      }
    }
    else
    {
      sub_251A11E30();
      if (v19) {
        goto LABEL_12;
      }
    }
LABEL_14:
    char v23 = *(void **)a5;
    *(void *)(*(void *)a5 + 8 * (v15 >> 6) + 64) |= 1 << v15;
    *(unsigned char *)(v23[6] + v15) = v12;
    sub_251A0D578(v43, (_OWORD *)(v23[7] + 32 * v15));
    uint64_t v24 = v23[2];
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (v25)
    {
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    _OWORD v23[2] = v26;
LABEL_16:
    sub_251AF5E90((uint64_t)v44);
    while (v46)
    {
      uint64_t v28 = v44[0];
      sub_251A0D578(&v45, v43);
      id v29 = *(void **)a5;
      unint64_t v31 = sub_2519FE568(v28);
      uint64_t v32 = v29[2];
      BOOL v33 = (v30 & 1) == 0;
      uint64_t v34 = v32 + v33;
      if (__OFADD__(v32, v33)) {
        goto LABEL_28;
      }
      char v35 = v30;
      if (v29[3] < v34)
      {
        sub_251A014E8(v34, 1);
        unint64_t v36 = sub_2519FE568(v28);
        if ((v35 & 1) != (v37 & 1)) {
          goto LABEL_30;
        }
        unint64_t v31 = v36;
      }
      if (v35)
      {
        sub_251A0D51C((uint64_t)v43, (uint64_t)v42);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v43);
        uint64_t v27 = (_OWORD *)(*(void *)(*(void *)a5 + 56) + 32 * v31);
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v27);
        sub_251A0D578(v42, v27);
      }
      else
      {
        Swift::String v38 = *(void **)a5;
        *(void *)(*(void *)a5 + 8 * (v31 >> 6) + 64) |= 1 << v31;
        *(unsigned char *)(v38[6] + v31) = v28;
        sub_251A0D578(v43, (_OWORD *)(v38[7] + 32 * v31));
        uint64_t v39 = v38[2];
        BOOL v25 = __OFADD__(v39, 1);
        uint64_t v40 = v39 + 1;
        if (v25) {
          goto LABEL_29;
        }
        v38[2] = v40;
      }
      sub_251AF5E90((uint64_t)v44);
    }
LABEL_27:
    swift_release();
    swift_bridgeObjectRelease();
    sub_251A1E630();
    return swift_release();
  }
  sub_251A014E8(v18, a4 & 1);
  unint64_t v20 = sub_2519FE568(v12);
  if ((v19 & 1) == (v21 & 1))
  {
    unint64_t v15 = v20;
    if ((v19 & 1) == 0) {
      goto LABEL_14;
    }
LABEL_12:
    sub_251A0D51C((uint64_t)v43, (uint64_t)v42);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v43);
    char v22 = (_OWORD *)(*(void *)(*(void *)a5 + 56) + 32 * v15);
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v22);
    sub_251A0D578(v42, v22);
    goto LABEL_16;
  }
LABEL_30:
  uint64_t result = sub_251F36BA0();
  __break(1u);
  return result;
}

void (*sub_251AF4F4C(void *a1, unsigned __int16 a2))(uint64_t a1)
{
  uint64_t v4 = malloc(0x50uLL);
  *a1 = v4;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v4[8] = sub_251AF5CA4(v4);
  v4[9] = sub_251AF5548(v4 + 4, a2, isUniquelyReferenced_nonNull_native);
  return sub_251AF4FDC;
}

void sub_251AF4FDC(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void (**)(void *, void))(*(void *)a1 + 64);
  (*(void (**)(void))(*(void *)a1 + 72))();
  v2(v1, 0);
  free(v1);
}

uint64_t (*sub_251AF503C(void *a1))()
{
  uint64_t v2 = malloc(0x68uLL);
  *a1 = v2;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v4 = sub_251F34DA0();
  v2[8] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = v5;
  v2[9] = v5;
  uint64_t v7 = malloc(*(void *)(v5 + 64));
  v2[10] = v7;
  (*(void (**)(void))(v6 + 16))();
  v2[11] = sub_251AF5CA4(v2);
  v2[12] = sub_251AF5760(v2 + 4, (uint64_t)v7, isUniquelyReferenced_nonNull_native);
  return sub_251AF5158;
}

uint64_t (*sub_251AF515C(void *a1))()
{
  uint64_t v2 = malloc(0x68uLL);
  *a1 = v2;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v4 = sub_251F34DA0();
  v2[8] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = v5;
  v2[9] = v5;
  uint64_t v7 = malloc(*(void *)(v5 + 64));
  v2[10] = v7;
  (*(void (**)(void))(v6 + 16))();
  v2[11] = sub_251AF5CA4(v2);
  v2[12] = sub_251AF58BC(v2 + 4, (uint64_t)v7, isUniquelyReferenced_nonNull_native);
  return sub_251AF5158;
}

uint64_t (*sub_251AF5278(void *a1))()
{
  uint64_t v2 = malloc(0x68uLL);
  *a1 = v2;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v4 = sub_251F34DA0();
  v2[8] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = v5;
  v2[9] = v5;
  uint64_t v7 = malloc(*(void *)(v5 + 64));
  v2[10] = v7;
  (*(void (**)(void))(v6 + 16))();
  v2[11] = sub_251AF5CD4(v2);
  v2[12] = sub_251AF5A44(v2 + 4, (uint64_t)v7, isUniquelyReferenced_nonNull_native);
  return sub_251AF5158;
}

uint64_t (*sub_251AF5394(void *a1))()
{
  uint64_t v2 = malloc(0x68uLL);
  *a1 = v2;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v4 = sub_251F34DA0();
  v2[8] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = v5;
  v2[9] = v5;
  uint64_t v7 = malloc(*(void *)(v5 + 64));
  v2[10] = v7;
  (*(void (**)(void))(v6 + 16))();
  v2[11] = sub_251AF5CA4(v2);
  v2[12] = sub_251AF5B74(v2 + 4, (uint64_t)v7, isUniquelyReferenced_nonNull_native);
  return sub_251AF5158;
}

void sub_251AF54B0(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void (**)(void *, void))(*(void *)a1 + 88);
  uint64_t v4 = *(void *)(*(void *)a1 + 72);
  uint64_t v3 = *(void **)(*(void *)a1 + 80);
  uint64_t v5 = *(void *)(*(void *)a1 + 64);
  (*(void (**)(void))(*(void *)a1 + 96))();
  (*(void (**)(void *, uint64_t))(v4 + 8))(v3, v5);
  v2(v1, 0);
  free(v3);
  free(v1);
}

void (*sub_251AF5548(void *a1, unsigned __int16 a2, char a3))(void ***a1)
{
  uint64_t v4 = v3;
  uint64_t v8 = malloc(0x30uLL);
  *a1 = v8;
  v8[3] = v3;
  *((_WORD *)v8 + 20) = a2;
  uint64_t v9 = *v3;
  unint64_t v11 = sub_2519FE5CC(a2);
  *((unsigned char *)v8 + 42) = v10 & 1;
  uint64_t v12 = *(void *)(v9 + 16);
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
  }
  else
  {
    char v15 = v10;
    uint64_t v16 = *(void *)(v9 + 24);
    if (v16 >= v14 && (a3 & 1) != 0)
    {
LABEL_7:
      void v8[4] = v11;
      if (v15)
      {
LABEL_8:
        uint64_t v17 = *(void *)(*v4 + 56) + 24 * v11;
        long long v18 = *(_OWORD *)v17;
        uint64_t v19 = *(void *)(v17 + 16);
LABEL_12:
        *(_OWORD *)uint64_t v8 = v18;
        void v8[2] = v19;
        return sub_251AF5690;
      }
LABEL_11:
      uint64_t v19 = 0;
      long long v18 = 0uLL;
      goto LABEL_12;
    }
    if (v16 >= v14 && (a3 & 1) == 0)
    {
      sub_251A13C14();
      goto LABEL_7;
    }
    sub_251A04F24(v14, a3 & 1);
    unint64_t v20 = sub_2519FE5CC(a2);
    if ((v15 & 1) == (v21 & 1))
    {
      unint64_t v11 = v20;
      void v8[4] = v20;
      if (v15) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  uint64_t result = (void (*)(void ***))sub_251F36BA0();
  __break(1u);
  return result;
}

void sub_251AF5690(void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = **a1;
  uint64_t v3 = (uint64_t)(*a1)[1];
  uint64_t v4 = (uint64_t)(*a1)[2];
  char v5 = *((unsigned char *)*a1 + 42);
  if (v2)
  {
    unint64_t v6 = (unint64_t)v1[4];
    uint64_t v7 = *(void **)v1[3];
    if (v5)
    {
      uint64_t v8 = (void *)(v7[7] + 24 * v6);
      *uint64_t v8 = v2;
      v8[1] = v3;
      void v8[2] = v4;
    }
    else
    {
      sub_251A11598(v6, *((_WORD *)v1 + 20), (uint64_t)v2, v3, v4, v7);
    }
  }
  else if (*((unsigned char *)*a1 + 42))
  {
    sub_251E3B168((unint64_t)v1[4], *(void *)v1[3]);
  }
  uint64_t v9 = *v1;
  sub_251AF742C(v2);
  sub_251AF7478(v9);
  free(v1);
}

void (*sub_251AF5760(void *a1, uint64_t a2, char a3))(uint64_t **a1, uint64_t a2)
{
  uint64_t v4 = v3;
  uint64_t v8 = malloc(0x28uLL);
  *a1 = v8;
  v8[1] = a2;
  void v8[2] = v3;
  uint64_t v9 = *v3;
  unint64_t v11 = sub_2519FE584(a2);
  *((unsigned char *)v8 + 32) = v10 & 1;
  uint64_t v12 = *(void *)(v9 + 16);
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
  }
  else
  {
    char v15 = v10;
    uint64_t v16 = *(void *)(v9 + 24);
    if (v16 >= v14 && (a3 & 1) != 0)
    {
LABEL_7:
      v8[3] = v11;
      if (v15)
      {
LABEL_8:
        uint64_t v17 = *(void *)(*(void *)(*v4 + 56) + 8 * v11);
LABEL_12:
        *uint64_t v8 = v17;
        return sub_251AF5890;
      }
LABEL_11:
      uint64_t v17 = 0;
      goto LABEL_12;
    }
    if (v16 >= v14 && (a3 & 1) == 0)
    {
      sub_251A14AE4();
      goto LABEL_7;
    }
    sub_251A06A60(v14, a3 & 1);
    unint64_t v18 = sub_2519FE584(a2);
    if ((v15 & 1) == (v19 & 1))
    {
      unint64_t v11 = v18;
      v8[3] = v18;
      if (v15) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  sub_251F34DA0();
  uint64_t result = (void (*)(uint64_t **, uint64_t))sub_251F36BA0();
  __break(1u);
  return result;
}

void sub_251AF5890(uint64_t **a1, uint64_t a2)
{
}

void (*sub_251AF58BC(void *a1, uint64_t a2, char a3))(uint64_t **a1, uint64_t a2)
{
  uint64_t v4 = v3;
  uint64_t v8 = malloc(0x28uLL);
  *a1 = v8;
  v8[1] = a2;
  void v8[2] = v3;
  uint64_t v9 = *v3;
  unint64_t v11 = sub_2519FE584(a2);
  *((unsigned char *)v8 + 32) = v10 & 1;
  uint64_t v12 = *(void *)(v9 + 16);
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
  }
  else
  {
    char v15 = v10;
    uint64_t v16 = *(void *)(v9 + 24);
    if (v16 >= v14 && (a3 & 1) != 0)
    {
LABEL_7:
      v8[3] = v11;
      if (v15)
      {
LABEL_8:
        uint64_t v17 = *(void *)(*(void *)(*v4 + 56) + 8 * v11);
LABEL_12:
        *uint64_t v8 = v17;
        return sub_251AF5890;
      }
LABEL_11:
      uint64_t v17 = 0;
      goto LABEL_12;
    }
    if (v16 >= v14 && (a3 & 1) == 0)
    {
      sub_251A14AB8();
      goto LABEL_7;
    }
    sub_251A06A34(v14, a3 & 1);
    unint64_t v18 = sub_2519FE584(a2);
    if ((v15 & 1) == (v19 & 1))
    {
      unint64_t v11 = v18;
      v8[3] = v18;
      if (v15) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  sub_251F34DA0();
  uint64_t result = (void (*)(uint64_t **, uint64_t))sub_251F36BA0();
  __break(1u);
  return result;
}

void sub_251AF59EC(uint64_t **a1, uint64_t a2, void (*a3)(uint64_t, char *, uint64_t, uint64_t), void (*a4)(uint64_t, void))
{
  uint64_t v4 = *a1;
  sub_251AF5D10(*a1, *((unsigned char *)*a1 + 32), (void *)(*a1)[2], (*a1)[3], (*a1)[1], a3, a4);
  swift_bridgeObjectRelease();
  free(v4);
}

void (*sub_251AF5A44(void *a1, uint64_t a2, char a3))(uint64_t **a1, uint64_t a2)
{
  uint64_t v4 = v3;
  uint64_t v8 = malloc(0x28uLL);
  *a1 = v8;
  v8[1] = a2;
  void v8[2] = v3;
  uint64_t v9 = *v3;
  unint64_t v11 = sub_2519FE584(a2);
  *((unsigned char *)v8 + 32) = v10 & 1;
  uint64_t v12 = *(void *)(v9 + 16);
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
  }
  else
  {
    char v15 = v10;
    uint64_t v16 = *(void *)(v9 + 24);
    if (v16 >= v14 && (a3 & 1) != 0)
    {
LABEL_7:
      v8[3] = v11;
      if (v15)
      {
LABEL_8:
        uint64_t v17 = *(void *)(*(void *)(*v4 + 56) + 8 * v11);
LABEL_12:
        *uint64_t v8 = v17;
        return sub_251AF5890;
      }
LABEL_11:
      uint64_t v17 = 0;
      goto LABEL_12;
    }
    if (v16 >= v14 && (a3 & 1) == 0)
    {
      sub_251A11E24();
      goto LABEL_7;
    }
    sub_251A014DC(v14, a3 & 1);
    unint64_t v18 = sub_2519FE584(a2);
    if ((v15 & 1) == (v19 & 1))
    {
      unint64_t v11 = v18;
      v8[3] = v18;
      if (v15) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  sub_251F34DA0();
  uint64_t result = (void (*)(uint64_t **, uint64_t))sub_251F36BA0();
  __break(1u);
  return result;
}

void (*sub_251AF5B74(void *a1, uint64_t a2, char a3))(uint64_t **a1, uint64_t a2)
{
  uint64_t v4 = v3;
  uint64_t v8 = malloc(0x28uLL);
  *a1 = v8;
  v8[1] = a2;
  void v8[2] = v3;
  uint64_t v9 = *v3;
  unint64_t v11 = sub_2519FE584(a2);
  *((unsigned char *)v8 + 32) = v10 & 1;
  uint64_t v12 = *(void *)(v9 + 16);
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
  }
  else
  {
    char v15 = v10;
    uint64_t v16 = *(void *)(v9 + 24);
    if (v16 >= v14 && (a3 & 1) != 0)
    {
LABEL_7:
      v8[3] = v11;
      if (v15)
      {
LABEL_8:
        uint64_t v17 = *(void *)(*(void *)(*v4 + 56) + 8 * v11);
LABEL_12:
        *uint64_t v8 = v17;
        return sub_251AF5890;
      }
LABEL_11:
      uint64_t v17 = 0;
      goto LABEL_12;
    }
    if (v16 >= v14 && (a3 & 1) == 0)
    {
      sub_251A16550();
      goto LABEL_7;
    }
    sub_251A09730(v14, a3 & 1);
    unint64_t v18 = sub_2519FE584(a2);
    if ((v15 & 1) == (v19 & 1))
    {
      unint64_t v11 = v18;
      v8[3] = v18;
      if (v15) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  sub_251F34DA0();
  uint64_t result = (void (*)(uint64_t **, uint64_t))sub_251F36BA0();
  __break(1u);
  return result;
}

uint64_t (*sub_251AF5CA4(void *a1))()
{
  *a1 = *v1;
  a1[1] = v1;
  void *v1 = 0x8000000000000000;
  return sub_251AF7648;
}

uint64_t (*sub_251AF5CD4(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  void *v1 = 0x8000000000000000;
  return sub_251AF5D04;
}

uint64_t sub_251AF5D04(uint64_t result)
{
  **(void **)(result + 8) = *(void *)result;
  return result;
}

uint64_t sub_251AF5D10(uint64_t *a1, char a2, void *a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, char *, uint64_t, uint64_t), void (*a7)(uint64_t, void))
{
  uint64_t v9 = *a1;
  if (*a1)
  {
    uint64_t v10 = *a3;
    if (a2)
    {
      *(void *)(*(void *)(v10 + 56) + 8 * a4) = v9;
    }
    else
    {
      uint64_t v14 = sub_251F34DA0();
      MEMORY[0x270FA5388](v14);
      uint64_t v16 = (char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, uint64_t))(v17 + 16))(v16, a5);
      a6(a4, v16, v9, v10);
    }
  }
  else if (a2)
  {
    sub_251F34DA0();
    swift_arrayDestroy();
    a7(a4, *a3);
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_251AF5E80@<X0>(unsigned char *a1@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *a1;
  return sub_251A0D51C((uint64_t)(a1 + 8), (uint64_t)(a2 + 8));
}

uint64_t sub_251AF5E90@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = v1[2];
  int64_t v5 = v1[3];
  int64_t v7 = v5;
  unint64_t v8 = v1[4];
  if (v8)
  {
    uint64_t v9 = (v8 - 1) & v8;
    unint64_t v10 = __clz(__rbit64(v8)) | (v5 << 6);
LABEL_3:
    char v11 = *(unsigned char *)(*(void *)(v3 + 48) + v10);
    sub_251A0D51C(*(void *)(v3 + 56) + 32 * v10, (uint64_t)v23 + 8);
    LOBYTE(v23[0]) = v11;
    goto LABEL_23;
  }
  int64_t v12 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    return result;
  }
  int64_t v13 = (unint64_t)(v6 + 64) >> 6;
  if (v12 < v13)
  {
    unint64_t v14 = *(void *)(v4 + 8 * v12);
    if (v14)
    {
LABEL_7:
      uint64_t v9 = (v14 - 1) & v14;
      unint64_t v10 = __clz(__rbit64(v14)) + (v12 << 6);
      int64_t v7 = v12;
      goto LABEL_3;
    }
    int64_t v15 = v5 + 2;
    int64_t v7 = v5 + 1;
    if (v5 + 2 < v13)
    {
      unint64_t v14 = *(void *)(v4 + 8 * v15);
      if (v14)
      {
LABEL_10:
        int64_t v12 = v15;
        goto LABEL_7;
      }
      int64_t v7 = v5 + 2;
      if (v5 + 3 < v13)
      {
        unint64_t v14 = *(void *)(v4 + 8 * (v5 + 3));
        if (v14)
        {
          int64_t v12 = v5 + 3;
          goto LABEL_7;
        }
        int64_t v15 = v5 + 4;
        int64_t v7 = v5 + 3;
        if (v5 + 4 < v13)
        {
          unint64_t v14 = *(void *)(v4 + 8 * v15);
          if (v14) {
            goto LABEL_10;
          }
          int64_t v12 = v5 + 5;
          int64_t v7 = v5 + 4;
          if (v5 + 5 < v13)
          {
            unint64_t v14 = *(void *)(v4 + 8 * v12);
            if (v14) {
              goto LABEL_7;
            }
            int64_t v7 = v13 - 1;
            int64_t v16 = v5 + 6;
            while (v13 != v16)
            {
              unint64_t v14 = *(void *)(v4 + 8 * v16++);
              if (v14)
              {
                int64_t v12 = v16 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  uint64_t v9 = 0;
  uint64_t v24 = 0;
  memset(v23, 0, sizeof(v23));
LABEL_23:
  uint64_t *v1 = v3;
  v1[1] = v4;
  v1[2] = v6;
  v1[3] = v7;
  long long v1[4] = v9;
  uint64_t v17 = (void (*)(_OWORD *))v1[5];
  uint64_t result = sub_251A4ECF0((uint64_t)v23, (uint64_t)v21, &qword_269B9DFB8);
  if (v22)
  {
    v19[0] = v21[0];
    v19[1] = v21[1];
    uint64_t v20 = v22;
    v17(v19);
    return sub_251A1B064((uint64_t)v19, &qword_269B9C5F0);
  }
  else
  {
    *(void *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

uint64_t sub_251AF606C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E660);
  uint64_t v4 = *(void *)(*(void *)(v3 - 8) + 64);
  uint64_t result = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  uint64_t v8 = v1[1];
  uint64_t v10 = v1[2];
  int64_t v9 = v1[3];
  int64_t v11 = v9;
  unint64_t v12 = v1[4];
  uint64_t v37 = a1;
  if (v12)
  {
    uint64_t v13 = (v12 - 1) & v12;
    unint64_t v14 = __clz(__rbit64(v12)) | (v9 << 6);
LABEL_3:
    uint64_t v15 = *(void *)(v7 + 48);
    uint64_t v16 = sub_251F34DA0();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v16 - 8) + 16))((char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v15 + *(void *)(*(void *)(v16 - 8) + 72) * v14, v16);
    uint64_t v17 = *(void *)(v7 + 56);
    uint64_t v18 = v17 + *(void *)(*(void *)(type metadata accessor for StaticService() - 8) + 72) * v14;
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E658);
    sub_251AF74C4(v18, (uint64_t)&v6[*(int *)(v19 + 48)], (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t v20 = (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))((char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), 0, 1, v19);
    goto LABEL_23;
  }
  int64_t v21 = v9 + 1;
  if (__OFADD__(v9, 1))
  {
    __break(1u);
    return result;
  }
  int64_t v22 = (unint64_t)(v10 + 64) >> 6;
  if (v21 < v22)
  {
    unint64_t v23 = *(void *)(v8 + 8 * v21);
    if (v23)
    {
LABEL_7:
      uint64_t v13 = (v23 - 1) & v23;
      unint64_t v14 = __clz(__rbit64(v23)) + (v21 << 6);
      int64_t v11 = v21;
      goto LABEL_3;
    }
    int64_t v24 = v9 + 2;
    int64_t v11 = v9 + 1;
    if (v9 + 2 < v22)
    {
      unint64_t v23 = *(void *)(v8 + 8 * v24);
      if (v23)
      {
LABEL_10:
        int64_t v21 = v24;
        goto LABEL_7;
      }
      int64_t v11 = v9 + 2;
      if (v9 + 3 < v22)
      {
        unint64_t v23 = *(void *)(v8 + 8 * (v9 + 3));
        if (v23)
        {
          int64_t v21 = v9 + 3;
          goto LABEL_7;
        }
        int64_t v24 = v9 + 4;
        int64_t v11 = v9 + 3;
        if (v9 + 4 < v22)
        {
          unint64_t v23 = *(void *)(v8 + 8 * v24);
          if (v23) {
            goto LABEL_10;
          }
          int64_t v21 = v9 + 5;
          int64_t v11 = v9 + 4;
          if (v9 + 5 < v22)
          {
            unint64_t v23 = *(void *)(v8 + 8 * v21);
            if (v23) {
              goto LABEL_7;
            }
            int64_t v11 = v22 - 1;
            int64_t v25 = v9 + 6;
            while (v22 != v25)
            {
              unint64_t v23 = *(void *)(v8 + 8 * v25++);
              if (v23)
              {
                int64_t v21 = v25 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E658);
  uint64_t v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))((char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v26);
  uint64_t v13 = 0;
LABEL_23:
  uint64_t *v1 = v7;
  v1[1] = v8;
  v1[2] = v10;
  v1[3] = v11;
  long long v1[4] = v13;
  uint64_t v27 = (void (*)(char *))v1[5];
  MEMORY[0x270FA5388](v20);
  uint64_t v28 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_251A4ECF0((uint64_t)v6, (uint64_t)v28, &qword_26B21E660);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E658);
  uint64_t v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 48))(v28, 1, v29);
  if (v30 == 1)
  {
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FFB8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v37, 1, 1, v31);
  }
  else
  {
    MEMORY[0x270FA5388](v30);
    BOOL v33 = (char *)&v36 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_251A4ECF0((uint64_t)v28, (uint64_t)v33, &qword_26B21E658);
    uint64_t v34 = v37;
    v27(v33);
    sub_251A1B064((uint64_t)v33, &qword_26B21E658);
    uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FFB8);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v34, 0, 1, v35);
  }
}

uint64_t sub_251AF64C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DFA0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9DFA8);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)&v37 - v12;
  uint64_t v14 = *v1;
  uint64_t v15 = v1[1];
  uint64_t v17 = v1[2];
  int64_t v16 = v1[3];
  int64_t v18 = v16;
  unint64_t v19 = v1[4];
  uint64_t v37 = v6;
  uint64_t v40 = v17;
  if (v19)
  {
    uint64_t v38 = a1;
    uint64_t v39 = v15;
    uint64_t v20 = (v19 - 1) & v19;
    unint64_t v21 = __clz(__rbit64(v19)) | (v16 << 6);
LABEL_3:
    uint64_t v22 = *(void *)(v14 + 48);
    uint64_t v23 = v14;
    uint64_t v24 = type metadata accessor for StaticAccessoryServiceCharacteristicTriplet();
    sub_251AF74C4(v22 + *(void *)(*(void *)(v24 - 8) + 72) * v21, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for StaticAccessoryServiceCharacteristicTriplet);
    uint64_t v25 = *(void *)(v23 + 56);
    uint64_t v26 = type metadata accessor for IconTextValueStringDataHolder();
    sub_251AF74C4(v25 + *(void *)(*(void *)(v26 - 8) + 72) * v21, (uint64_t)&v13[*(int *)(v3 + 48)], (uint64_t (*)(void))type metadata accessor for IconTextValueStringDataHolder);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v13, 0, 1, v3);
    a1 = v38;
    uint64_t v15 = v39;
    goto LABEL_23;
  }
  int64_t v27 = v16 + 1;
  if (__OFADD__(v16, 1))
  {
    __break(1u);
    return result;
  }
  int64_t v28 = (unint64_t)(v17 + 64) >> 6;
  if (v27 < v28)
  {
    unint64_t v29 = *(void *)(v15 + 8 * v27);
    if (v29)
    {
LABEL_7:
      uint64_t v38 = a1;
      uint64_t v39 = v15;
      uint64_t v20 = (v29 - 1) & v29;
      unint64_t v21 = __clz(__rbit64(v29)) + (v27 << 6);
      int64_t v18 = v27;
      goto LABEL_3;
    }
    int64_t v30 = v16 + 2;
    int64_t v18 = v16 + 1;
    if (v16 + 2 < v28)
    {
      unint64_t v29 = *(void *)(v15 + 8 * v30);
      if (v29)
      {
LABEL_10:
        int64_t v27 = v30;
        goto LABEL_7;
      }
      int64_t v18 = v16 + 2;
      if (v16 + 3 < v28)
      {
        unint64_t v29 = *(void *)(v15 + 8 * (v16 + 3));
        if (v29)
        {
          int64_t v27 = v16 + 3;
          goto LABEL_7;
        }
        int64_t v30 = v16 + 4;
        int64_t v18 = v16 + 3;
        if (v16 + 4 < v28)
        {
          unint64_t v29 = *(void *)(v15 + 8 * v30);
          if (v29) {
            goto LABEL_10;
          }
          int64_t v27 = v16 + 5;
          int64_t v18 = v16 + 4;
          if (v16 + 5 < v28)
          {
            unint64_t v29 = *(void *)(v15 + 8 * v27);
            if (v29) {
              goto LABEL_7;
            }
            int64_t v18 = v28 - 1;
            int64_t v31 = v16 + 6;
            while (v28 != v31)
            {
              unint64_t v29 = *(void *)(v15 + 8 * v31++);
              if (v29)
              {
                int64_t v27 = v31 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  uint64_t v23 = v14;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v13, 1, 1, v3);
  uint64_t v20 = 0;
LABEL_23:
  uint64_t *v1 = v23;
  v1[1] = v15;
  v1[2] = v40;
  v1[3] = v18;
  long long v1[4] = v20;
  uint64_t v32 = (void (*)(uint64_t))v1[5];
  sub_251A4ECF0((uint64_t)v13, (uint64_t)v10, &qword_269B9DFA8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v10, 1, v3) == 1)
  {
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C9E8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(a1, 1, 1, v33);
  }
  else
  {
    uint64_t v34 = (uint64_t)v10;
    uint64_t v35 = (uint64_t)v37;
    sub_251A4ECF0(v34, (uint64_t)v37, &qword_269B9DFA0);
    v32(v35);
    sub_251A1B064(v35, &qword_269B9DFA0);
    uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9C9E8);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(a1, 0, 1, v36);
  }
}

uint64_t sub_251AF68E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v42 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F0B0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F0B8);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)&v37 - v11;
  uint64_t v13 = *v1;
  uint64_t v14 = v1[1];
  uint64_t v16 = v1[2];
  int64_t v15 = v1[3];
  int64_t v17 = v15;
  unint64_t v18 = v1[4];
  uint64_t v37 = v5;
  uint64_t v41 = v16;
  if (v18)
  {
    int64_t v38 = v15;
    uint64_t v39 = v14;
    uint64_t v19 = v3;
    uint64_t v40 = v9;
    uint64_t v20 = v2;
    uint64_t v21 = (v18 - 1) & v18;
    unint64_t v22 = __clz(__rbit64(v18)) | (v15 << 6);
LABEL_3:
    uint64_t v23 = *(void *)(v13 + 56);
    char v24 = *(unsigned char *)(*(void *)(v13 + 48) + v22);
    uint64_t v25 = v23 + *(void *)(*(void *)(type metadata accessor for StaticCharacteristic() - 8) + 72) * v22;
    uint64_t v2 = v20;
    sub_251AF74C4(v25, (uint64_t)&v12[*(int *)(v20 + 48)], (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
    *uint64_t v12 = v24;
    uint64_t v3 = v19;
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v19 + 56))(v12, 0, 1, v20);
    uint64_t v14 = v39;
    uint64_t v9 = v40;
    int64_t v17 = v38;
    goto LABEL_23;
  }
  int64_t v26 = v15 + 1;
  if (__OFADD__(v15, 1))
  {
    __break(1u);
    return result;
  }
  int64_t v27 = (unint64_t)(v16 + 64) >> 6;
  if (v26 < v27)
  {
    unint64_t v28 = *(void *)(v14 + 8 * v26);
    if (v28)
    {
LABEL_7:
      uint64_t v19 = v3;
      uint64_t v39 = v14;
      uint64_t v40 = v9;
      uint64_t v20 = v2;
      uint64_t v21 = (v28 - 1) & v28;
      unint64_t v22 = __clz(__rbit64(v28)) + (v26 << 6);
      int64_t v38 = v26;
      goto LABEL_3;
    }
    int64_t v29 = v15 + 2;
    int64_t v17 = v15 + 1;
    if (v15 + 2 < v27)
    {
      unint64_t v28 = *(void *)(v14 + 8 * v29);
      if (v28)
      {
LABEL_10:
        int64_t v26 = v29;
        goto LABEL_7;
      }
      int64_t v17 = v15 + 2;
      if (v15 + 3 < v27)
      {
        unint64_t v28 = *(void *)(v14 + 8 * (v15 + 3));
        if (v28)
        {
          int64_t v26 = v15 + 3;
          goto LABEL_7;
        }
        int64_t v29 = v15 + 4;
        int64_t v17 = v15 + 3;
        if (v15 + 4 < v27)
        {
          unint64_t v28 = *(void *)(v14 + 8 * v29);
          if (v28) {
            goto LABEL_10;
          }
          int64_t v26 = v15 + 5;
          int64_t v17 = v15 + 4;
          if (v15 + 5 < v27)
          {
            unint64_t v28 = *(void *)(v14 + 8 * v26);
            if (v28) {
              goto LABEL_7;
            }
            int64_t v17 = v27 - 1;
            int64_t v30 = v15 + 6;
            while (v27 != v30)
            {
              unint64_t v28 = *(void *)(v14 + 8 * v30++);
              if (v28)
              {
                int64_t v26 = v30 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v12, 1, 1, v2);
  uint64_t v21 = 0;
LABEL_23:
  uint64_t *v1 = v13;
  v1[1] = v14;
  v1[2] = v41;
  v1[3] = v17;
  long long v1[4] = v21;
  int64_t v31 = (void (*)(uint64_t))v1[5];
  sub_251A4ECF0((uint64_t)v12, (uint64_t)v9, &qword_26B21F0B8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v9, 1, v2) == 1)
  {
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F0D8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v42, 1, 1, v32);
  }
  else
  {
    uint64_t v33 = (uint64_t)v9;
    uint64_t v34 = (uint64_t)v37;
    sub_251A4ECF0(v33, (uint64_t)v37, &qword_26B21F0B0);
    uint64_t v35 = v42;
    v31(v34);
    sub_251A1B064(v34, &qword_26B21F0B0);
    uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F0D8);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v35, 0, 1, v36);
  }
}

uint64_t sub_251AF6CDC(uint64_t result, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  if (a2 < 0 || 1 << *(unsigned char *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (((*(void *)(a5 + 8 * ((unint64_t)a2 >> 6) + 64) >> a2) & 1) == 0)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (*(_DWORD *)(a5 + 36) != a3)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  uint64_t v6 = result;
  uint64_t v7 = *(void *)(a5 + 48);
  uint64_t v8 = sub_251F34DA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7 + *(void *)(*(void *)(v8 - 8) + 72) * a2, v8);
  return swift_bridgeObjectRetain();
}

id sub_251AF6DAC(id result, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  if (a2 < 0 || 1 << *(unsigned char *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (((*(void *)(a5 + 8 * ((unint64_t)a2 >> 6) + 64) >> a2) & 1) == 0)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (*(_DWORD *)(a5 + 36) != a3)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  id v5 = *(id *)(*(void *)(a5 + 48) + 8 * a2);
  sub_251A0D51C(*(void *)(a5 + 56) + 32 * a2, (uint64_t)result);
  return v5;
}

void *sub_251AF6E3C(void *result, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  if (a2 < 0 || 1 << *(unsigned char *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a5 + 8 * ((unint64_t)a2 >> 6) + 64) >> a2) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a5 + 36) == a3)
  {
    id v5 = *(void **)(*(void *)(a5 + 48) + 8 * a2);
    uint64_t v6 = *(void *)(a5 + 56) + 24 * a2;
    uint64_t v7 = *(void *)v6;
    unint64_t v8 = *(void *)(v6 + 8);
    *uint64_t result = *(void *)v6;
    result[1] = v8;
    char v9 = *(unsigned char *)(v6 + 16);
    *((unsigned char *)result + 16) = v9;
    id v10 = v5;
    sub_251A1A870(v7, v8, v9);
    return v10;
  }
LABEL_8:
  __break(1u);
  return result;
}

void *sub_251AF6EE0(void *result, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  if (a2 < 0 || 1 << *(unsigned char *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a5 + 8 * ((unint64_t)a2 >> 6) + 64) >> a2) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a5 + 36) == a3)
  {
    id v5 = *(void **)(*(void *)(a5 + 48) + 8 * a2);
    uint64_t v6 = *(void *)(a5 + 56) + 32 * a2;
    uint64_t v7 = *(void *)v6;
    uint64_t v8 = *(void *)(v6 + 8);
    uint64_t v9 = *(void *)(v6 + 16);
    *uint64_t result = *(void *)v6;
    result[1] = v8;
    result[2] = v9;
    char v10 = *(unsigned char *)(v6 + 24);
    *((unsigned char *)result + 24) = v10;
    id v11 = v5;
    sub_251A1A550(v7, v8, v9, v10);
    return v11;
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_251AF6F94(uint64_t result, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  if (a2 < 0 || 1 << *(unsigned char *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a5 + 8 * ((unint64_t)a2 >> 6) + 64) >> a2) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a5 + 36) == a3)
  {
    uint64_t v7 = result;
    uint64_t v8 = *(void *)(a5 + 48);
    uint64_t v9 = sub_251F34DA0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8 + *(void *)(*(void *)(v9 - 8) + 72) * a2, v9);
    uint64_t v10 = *(void *)(*(void *)(a5 + 56) + 16 * a2);
    swift_bridgeObjectRetain();
    return v10;
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_251AF7068(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = *(void *)(a5 - 8);
  MEMORY[0x270FA5388](a1);
  id v11 = &v16[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v9 + 16))(v11, v12, v13);
  char v14 = *a2;
  uint64_t v17 = a4;
  uint64_t v18 = a1;
  char v19 = v14;
  sub_251F35990();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8))(v11, a5);
}

uint64_t sub_251AF7194(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v9 = &v11[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *))(v7 + 16))(v9);
  uint64_t v12 = a3;
  uint64_t v13 = a1;
  sub_251F35990();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, a4);
}

uint64_t destroy for StaticAlarm.RepeatSchedule()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s13HomeDataModel22CharacteristicValueSetVwCP_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CharacteristicValueSet(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for CharacteristicValueSet(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for CharacteristicValueSet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CharacteristicValueSet(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CharacteristicValueSet()
{
  return &type metadata for CharacteristicValueSet;
}

void *sub_251AF742C(void *result)
{
  if (result)
  {
    id v1 = result;
    swift_bridgeObjectRetain();
    return (void *)swift_bridgeObjectRetain();
  }
  return result;
}

void *sub_251AF7478(void *result)
{
  if (result)
  {

    swift_bridgeObjectRelease();
    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_251AF74C4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_251AF752C()
{
  unint64_t result = qword_26B21E6B0;
  if (!qword_26B21E6B0)
  {
    sub_251F34DA0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B21E6B0);
  }
  return result;
}

unint64_t sub_251AF7578()
{
  unint64_t result = qword_269B9DFB0;
  if (!qword_269B9DFB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B9DFB0);
  }
  return result;
}

uint64_t sub_251AF75CC(uint64_t a1)
{
  return CharacteristicValueSet.add(values:on:)(*(void *)(v1 + 24), a1);
}

uint64_t sub_251AF7600(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 24);
  unsigned __int8 v5 = *(unsigned char *)(v1 + 32);
  return CharacteristicValueSet.add(value:for:on:)(v3, &v5, a1);
}

uint64_t sub_251AF764C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v28 = a3;
  uint64_t v27 = type metadata accessor for StaticServiceGroup();
  uint64_t v6 = *(void *)(v27 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v27);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  id v11 = (char *)&v27 - v10;
  uint64_t v12 = a1 + 56;
  uint64_t v13 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(a1 + 56);
  int64_t v29 = (unint64_t)(v13 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v17 = 0;
  if (!v15) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v18 = __clz(__rbit64(v15));
  v15 &= v15 - 1;
  for (unint64_t i = v18 | (v17 << 6); ; unint64_t i = __clz(__rbit64(v21)) + (v17 << 6))
  {
    sub_251B25B74(*(void *)(a1 + 48) + *(void *)(v6 + 72) * i, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
    sub_251B25C90((uint64_t)v11, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
    char v23 = sub_251B1271C((uint64_t)v9, a2);
    if (v3)
    {
      sub_251B25BDC((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
      swift_bridgeObjectRelease();
      return swift_release();
    }
    if (v23)
    {
      swift_release();
      uint64_t v24 = v28;
      sub_251B25C90((uint64_t)v9, v28, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
      uint64_t v25 = 0;
      uint64_t v26 = v27;
      goto LABEL_29;
    }
    uint64_t result = sub_251B25BDC((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
    if (v15) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v17++, 1)) {
      break;
    }
    if (v17 >= v29) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v12 + 8 * v17);
    if (!v21)
    {
      int64_t v22 = v17 + 1;
      if (v17 + 1 >= v29) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v12 + 8 * v22);
      if (v21) {
        goto LABEL_16;
      }
      int64_t v22 = v17 + 2;
      if (v17 + 2 >= v29) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v12 + 8 * v22);
      if (v21) {
        goto LABEL_16;
      }
      int64_t v22 = v17 + 3;
      if (v17 + 3 >= v29) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v12 + 8 * v22);
      if (v21)
      {
LABEL_16:
        int64_t v17 = v22;
        goto LABEL_17;
      }
      int64_t v22 = v17 + 4;
      if (v17 + 4 < v29)
      {
        unint64_t v21 = *(void *)(v12 + 8 * v22);
        if (!v21)
        {
          while (1)
          {
            int64_t v17 = v22 + 1;
            if (__OFADD__(v22, 1)) {
              goto LABEL_31;
            }
            if (v17 >= v29) {
              goto LABEL_28;
            }
            unint64_t v21 = *(void *)(v12 + 8 * v17);
            ++v22;
            if (v21) {
              goto LABEL_17;
            }
          }
        }
        goto LABEL_16;
      }
LABEL_28:
      uint64_t v26 = v27;
      uint64_t v24 = v28;
      swift_release();
      uint64_t v25 = 1;
LABEL_29:
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v24, v25, 1, v26);
      return swift_bridgeObjectRelease();
    }
LABEL_17:
    unint64_t v15 = (v21 - 1) & v21;
  }
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_251AF797C(uint64_t a1, void (*a2)(uint64_t *__return_ptr, uint64_t *, id *), uint64_t a3, unint64_t a4)
{
  uint64_t v16 = a1;
  uint64_t v6 = a1;
  if (a4 >> 62) {
    goto LABEL_14;
  }
  uint64_t v7 = *(void *)((a4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  for (; v7; uint64_t v7 = sub_251F366C0())
  {
    uint64_t v8 = 4;
    while (1)
    {
      id v9 = (a4 & 0xC000000000000001) != 0 ? (id)MEMORY[0x2533AB3A0](v8 - 4, a4) : *(id *)(a4 + 8 * v8);
      uint64_t v10 = v9;
      uint64_t v11 = v8 - 3;
      if (__OFADD__(v8 - 4, 1)) {
        break;
      }
      id v15 = v9;
      a2(&v14, &v16, &v15);
      swift_bridgeObjectRelease();
      if (v4)
      {
        swift_bridgeObjectRelease();

        return v6;
      }

      uint64_t v6 = v14;
      uint64_t v16 = v14;
      ++v8;
      if (v11 == v7) {
        goto LABEL_10;
      }
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
LABEL_10:
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_251AF7AC8(char a1, void (*a2)(uint64_t *__return_ptr, char *, void *), uint64_t a3, uint64_t a4)
{
  char v5 = a1;
  BYTE1(v26) = a1;
  uint64_t v21 = a4 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(a4 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a4 + 56);
  int64_t v22 = (unint64_t)(v6 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  if (!v8) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v11 | (v10 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v10 << 6))
  {
    uint64_t v16 = (void *)(*(void *)(a4 + 48) + 40 * i);
    uint64_t v17 = v16[1];
    uint64_t v18 = v16[2];
    uint64_t v19 = v16[3];
    uint64_t v20 = v16[4];
    v25[0] = *v16;
    v25[1] = v17;
    void v25[2] = v18;
    v25[3] = v19;
    v25[4] = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a2(&v26, (char *)&v26 + 1, v25);
    if (v4)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v5 & 1;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    char v5 = v26;
    BYTE1(v26) = v26;
    if (v8) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v10++, 1)) {
      break;
    }
    if (v10 >= v22) {
      goto LABEL_26;
    }
    unint64_t v14 = *(void *)(v21 + 8 * v10);
    if (!v14)
    {
      int64_t v15 = v10 + 1;
      if (v10 + 1 >= v22) {
        goto LABEL_26;
      }
      unint64_t v14 = *(void *)(v21 + 8 * v15);
      if (v14) {
        goto LABEL_16;
      }
      int64_t v15 = v10 + 2;
      if (v10 + 2 >= v22) {
        goto LABEL_26;
      }
      unint64_t v14 = *(void *)(v21 + 8 * v15);
      if (v14) {
        goto LABEL_16;
      }
      int64_t v15 = v10 + 3;
      if (v10 + 3 >= v22) {
        goto LABEL_26;
      }
      unint64_t v14 = *(void *)(v21 + 8 * v15);
      if (v14)
      {
LABEL_16:
        int64_t v10 = v15;
        goto LABEL_17;
      }
      int64_t v15 = v10 + 4;
      if (v10 + 4 < v22)
      {
        unint64_t v14 = *(void *)(v21 + 8 * v15);
        if (!v14)
        {
          while (1)
          {
            int64_t v10 = v15 + 1;
            if (__OFADD__(v15, 1)) {
              goto LABEL_29;
            }
            if (v10 >= v22) {
              goto LABEL_26;
            }
            unint64_t v14 = *(void *)(v21 + 8 * v10);
            ++v15;
            if (v14) {
              goto LABEL_17;
            }
          }
        }
        goto LABEL_16;
      }
LABEL_26:
      swift_release();
      return v5 & 1;
    }
LABEL_17:
    unint64_t v8 = (v14 - 1) & v14;
  }
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_251AF7D30(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v26 = a1;
  uint64_t v5 = *(void *)(a3 + 64);
  uint64_t v23 = a3 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & v5;
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E658);
  uint64_t v9 = *(void *)(*(void *)(v25 - 8) + 64);
  MEMORY[0x270FA5388](v25);
  int64_t v24 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v27 = a3;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v11 = 0;
  if (!v8) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v12 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    uint64_t v17 = v27;
    uint64_t v18 = *(void *)(v27 + 48);
    uint64_t v19 = sub_251F34DA0();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v19 - 8) + 16))((char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v18 + *(void *)(*(void *)(v19 - 8) + 72) * i, v19);
    uint64_t v20 = *(void *)(v17 + 56);
    uint64_t v21 = type metadata accessor for StaticService();
    uint64_t v22 = sub_251B25B74(v20 + *(void *)(*(void *)(v21 - 8) + 72) * i, (uint64_t)&v23 + *(int *)(v25 + 48) - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for StaticService);
    MEMORY[0x270FA5388](v22);
    sub_251A4ECF0((uint64_t)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_26B21E658);
    v26((char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
    uint64_t result = sub_251A1B064((uint64_t)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_26B21E658);
    if (v3) {
      return swift_release();
    }
    if (v8) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v11++, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v11 >= v24) {
      return swift_release();
    }
    unint64_t v15 = *(void *)(v23 + 8 * v11);
    if (!v15) {
      break;
    }
LABEL_17:
    unint64_t v8 = (v15 - 1) & v15;
  }
  int64_t v16 = v11 + 1;
  if (v11 + 1 >= v24) {
    return swift_release();
  }
  unint64_t v15 = *(void *)(v23 + 8 * v16);
  if (v15) {
    goto LABEL_16;
  }
  int64_t v16 = v11 + 2;
  if (v11 + 2 >= v24) {
    return swift_release();
  }
  unint64_t v15 = *(void *)(v23 + 8 * v16);
  if (v15) {
    goto LABEL_16;
  }
  int64_t v16 = v11 + 3;
  if (v11 + 3 >= v24) {
    return swift_release();
  }
  unint64_t v15 = *(void *)(v23 + 8 * v16);
  if (v15) {
    goto LABEL_16;
  }
  int64_t v16 = v11 + 4;
  if (v11 + 4 >= v24) {
    return swift_release();
  }
  unint64_t v15 = *(void *)(v23 + 8 * v16);
  if (v15)
  {
LABEL_16:
    int64_t v11 = v16;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v24) {
      return swift_release();
    }
    unint64_t v15 = *(void *)(v23 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_17;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_251AF8034(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_26B21EE20);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v46 = (uint64_t)v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t v43 = a1 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & v6;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  v41[1] = v41;
  MEMORY[0x270FA5388](v10 - 8);
  unint64_t v12 = (char *)v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v44 = (unint64_t)(v7 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v14 = 0;
  uint64_t v47 = a2;
  uint64_t v42 = a1;
  long long v45 = v12;
  while (1)
  {
    if (v9)
    {
      uint64_t v50 = (v9 - 1) & v9;
      unint64_t v17 = __clz(__rbit64(v9)) | (v14 << 6);
      goto LABEL_24;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v18 >= v44) {
      goto LABEL_29;
    }
    unint64_t v19 = *(void *)(v43 + 8 * v18);
    ++v14;
    if (!v19)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v44) {
        goto LABEL_29;
      }
      unint64_t v19 = *(void *)(v43 + 8 * v14);
      if (!v19)
      {
        int64_t v14 = v18 + 2;
        if (v18 + 2 >= v44) {
          goto LABEL_29;
        }
        unint64_t v19 = *(void *)(v43 + 8 * v14);
        if (!v19)
        {
          int64_t v14 = v18 + 3;
          if (v18 + 3 >= v44) {
            goto LABEL_29;
          }
          unint64_t v19 = *(void *)(v43 + 8 * v14);
          if (!v19) {
            break;
          }
        }
      }
    }
LABEL_23:
    uint64_t v50 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_24:
    uint64_t v21 = *(void *)(a1 + 48);
    uint64_t v22 = sub_251F34DA0();
    uint64_t v23 = *(void *)(v22 - 8);
    uint64_t v24 = v23;
    uint64_t v25 = *(void *)(v23 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v23 + 16))(v12, v21 + v25 * v17, v22);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v12, 0, 1, v22);
    uint64_t v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48))(v12, 1, v22);
    if (v26 == 1) {
      return swift_release();
    }
    uint64_t v48 = v41;
    int64_t v49 = v14;
    MEMORY[0x270FA5388](v26);
    uint64_t v28 = (char *)v41 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v28, v12, v22);
    swift_bridgeObjectRetain();
    unint64_t v29 = sub_2519FE584((uint64_t)v28);
    int64_t v30 = a2;
    char v32 = v31;
    swift_bridgeObjectRelease();
    if (v32)
    {
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v34 = *v30;
      uint64_t v51 = *v30;
      *int64_t v30 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_251A12304();
        uint64_t v34 = v51;
      }
      (*(void (**)(unint64_t, uint64_t))(v24 + 8))(*(void *)(v34 + 48) + v29 * v25, v22);
      uint64_t v35 = v51;
      uint64_t v36 = *(void *)(v51 + 56);
      uint64_t v37 = type metadata accessor for StaticService();
      uint64_t v38 = *(void *)(v37 - 8);
      uint64_t v39 = v36 + *(void *)(v38 + 72) * v29;
      uint64_t v16 = v46;
      sub_251B25C90(v39, v46, (uint64_t (*)(void))type metadata accessor for StaticService);
      sub_251E39FD4(v29, v35);
      *int64_t v30 = v35;
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v38 + 56))(v16, 0, 1, v37);
      a1 = v42;
    }
    else
    {
      uint64_t v15 = type metadata accessor for StaticService();
      uint64_t v16 = v46;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v46, 1, 1, v15);
    }
    sub_251A1B064(v16, qword_26B21EE20);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v28, v22);
    a2 = v47;
    unint64_t v12 = v45;
    int64_t v14 = v49;
    unint64_t v9 = v50;
  }
  int64_t v20 = v18 + 4;
  if (v20 >= v44)
  {
LABEL_29:
    uint64_t v40 = sub_251F34DA0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v12, 1, 1, v40);
    return swift_release();
  }
  unint64_t v19 = *(void *)(v43 + 8 * v20);
  if (v19)
  {
    int64_t v14 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v14 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v14 >= v44) {
      goto LABEL_29;
    }
    unint64_t v19 = *(void *)(v43 + 8 * v14);
    ++v20;
    if (v19) {
      goto LABEL_23;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_251AF8598(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticCharacteristic();
  uint64_t v43 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  unint64_t v9 = (char *)&v38 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F0B8);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (unsigned __int8 *)&v38 - v15;
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v17 = *(void *)(a1 + 64);
  uint64_t v40 = a1 + 64;
  uint64_t v18 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v19 = -1;
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  unint64_t v20 = v19 & v17;
  int64_t v41 = (unint64_t)(v18 + 63) >> 6;
  int64_t v42 = 0;
  int64_t v39 = v41 - 1;
  while (1)
  {
    if (v20)
    {
      unint64_t v21 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      unint64_t v22 = v21 | (v42 << 6);
LABEL_8:
      char v23 = *(unsigned char *)(*(void *)(a1 + 48) + v22);
      uint64_t v24 = *(void *)(a1 + 56) + *(void *)(v43 + 72) * v22;
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F0B0);
      sub_251B25B74(v24, (uint64_t)&v13[*(int *)(v25 + 48)], (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
      *uint64_t v13 = v23;
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v13, 0, 1, v25);
      goto LABEL_27;
    }
    int64_t v26 = v42 + 1;
    if (__OFADD__(v42, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v26 < v41)
    {
      unint64_t v27 = *(void *)(v40 + 8 * v26);
      if (v27) {
        goto LABEL_12;
      }
      int64_t v28 = v42 + 2;
      ++v42;
      if (v26 + 1 < v41)
      {
        unint64_t v27 = *(void *)(v40 + 8 * v28);
        if (v27) {
          goto LABEL_15;
        }
        int64_t v42 = v26 + 1;
        if (v26 + 2 < v41)
        {
          unint64_t v27 = *(void *)(v40 + 8 * (v26 + 2));
          if (v27)
          {
            v26 += 2;
            goto LABEL_12;
          }
          int64_t v28 = v26 + 3;
          int64_t v42 = v26 + 2;
          if (v26 + 3 < v41) {
            break;
          }
        }
      }
    }
LABEL_26:
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F0B0);
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v13, 1, 1, v29);
    unint64_t v20 = 0;
LABEL_27:
    sub_251A4ECF0((uint64_t)v13, (uint64_t)v16, &qword_26B21F0B8);
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F0B0);
    int v31 = (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 48))(v16, 1, v30);
    BOOL v32 = v31 == 1;
    if (v31 == 1) {
      return v32;
    }
    uint64_t v33 = (uint64_t)&v16[*(int *)(v30 + 48)];
    uint64_t v34 = *v16;
    sub_251B25C90(v33, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
    unint64_t v35 = sub_2519FE568(v34);
    if ((v36 & 1) == 0)
    {
      sub_251B25BDC((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
      return 0;
    }
    sub_251B25B74(*(void *)(a2 + 56) + *(void *)(v43 + 72) * v35, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
    BOOL v37 = _s13HomeDataModel20StaticCharacteristicV2eeoiySbAC_ACtFZ_0((uint64_t)v7, (uint64_t)v9);
    sub_251B25BDC((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
    uint64_t result = sub_251B25BDC((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticCharacteristic);
    if (!v37) {
      return v32;
    }
  }
  unint64_t v27 = *(void *)(v40 + 8 * v28);
  if (v27)
  {
LABEL_15:
    int64_t v26 = v28;
LABEL_12:
    unint64_t v20 = (v27 - 1) & v27;
    unint64_t v22 = __clz(__rbit64(v27)) + (v26 << 6);
    int64_t v42 = v26;
    goto LABEL_8;
  }
  while (1)
  {
    int64_t v26 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v26 >= v41)
    {
      int64_t v42 = v39;
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v40 + 8 * v26);
    ++v28;
    if (v27) {
      goto LABEL_12;
    }
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_251AF8A48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticTimer();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v133 = (double *)((char *)&v107 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v6);
  unint64_t v9 = (double *)((char *)&v107 - v8);
  uint64_t v10 = type metadata accessor for StaticAlarm();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v134 = (uint64_t)&v107 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v135 = (uint64_t)&v107 - v15;
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v123 = v14;
  uint64_t v124 = v9;
  uint64_t v119 = (int *)v4;
  uint64_t v16 = *(void *)(a1 + 64);
  uint64_t v110 = a1 + 64;
  uint64_t v17 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & v16;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CEF0);
  uint64_t v118 = &v107;
  uint64_t v21 = MEMORY[0x270FA5388](v20 - 8);
  char v23 = (char *)&v107 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v115 = (unint64_t)(v17 + 63) >> 6;
  int64_t v108 = v115 - 1;
  uint64_t v122 = a2;
  uint64_t v109 = v5;
  uint64_t v113 = v11;
  uint64_t v121 = v23;
  uint64_t v114 = a1;
  uint64_t v112 = v22;
  unint64_t v111 = (v22 + 15) & 0xFFFFFFFFFFFFFFF0;
  while (1)
  {
    MEMORY[0x270FA5388](v21);
    int64_t v26 = (char *)&v107 - v25;
    if (v19)
    {
      unint64_t v132 = &v107;
      uint64_t v116 = (v19 - 1) & v19;
      int64_t v117 = v24;
      unint64_t v27 = __clz(__rbit64(v19)) | (v24 << 6);
LABEL_8:
      uint64_t v28 = *(void *)(a1 + 48);
      uint64_t v29 = sub_251F34DA0();
      (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v29 - 8) + 16))(v26, v28 + *(void *)(*(void *)(v29 - 8) + 72) * v27, v29);
      uint64_t v30 = (uint64_t *)(*(void *)(a1 + 56) + 32 * v27);
      uint64_t v31 = *v30;
      uint64_t v32 = v30[1];
      uint64_t v34 = (void *)v30[2];
      uint64_t v33 = (void *)v30[3];
      uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CEF8);
      char v36 = &v26[*(int *)(v35 + 48)];
      *(void *)char v36 = v31;
      *((void *)v36 + 1) = v32;
      *((void *)v36 + 2) = v34;
      *((void *)v36 + 3) = v33;
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v26, 0, 1, v35);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_251A1A4CC(v34);
      sub_251A1A4CC(v33);
      char v23 = v121;
      a2 = v122;
      goto LABEL_27;
    }
    int64_t v37 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      goto LABEL_129;
    }
    if (v37 < v115)
    {
      unint64_t v38 = *(void *)(v110 + 8 * v37);
      if (v38) {
        goto LABEL_12;
      }
      int64_t v39 = v24 + 2;
      ++v24;
      if (v37 + 1 < v115)
      {
        unint64_t v38 = *(void *)(v110 + 8 * v39);
        if (v38) {
          goto LABEL_15;
        }
        int64_t v24 = v37 + 1;
        if (v37 + 2 < v115)
        {
          unint64_t v38 = *(void *)(v110 + 8 * (v37 + 2));
          if (v38)
          {
            v37 += 2;
            goto LABEL_12;
          }
          int64_t v39 = v37 + 3;
          int64_t v24 = v37 + 2;
          if (v37 + 3 < v115)
          {
            unint64_t v38 = *(void *)(v110 + 8 * v39);
            if (v38)
            {
LABEL_15:
              int64_t v37 = v39;
LABEL_12:
              unint64_t v132 = &v107;
              uint64_t v116 = (v38 - 1) & v38;
              int64_t v117 = v37;
              unint64_t v27 = __clz(__rbit64(v38)) + (v37 << 6);
              goto LABEL_8;
            }
            while (1)
            {
              int64_t v37 = v39 + 1;
              if (__OFADD__(v39, 1)) {
                goto LABEL_130;
              }
              if (v37 >= v115) {
                break;
              }
              unint64_t v38 = *(void *)(v110 + 8 * v37);
              ++v39;
              if (v38) {
                goto LABEL_12;
              }
            }
            int64_t v24 = v108;
          }
        }
      }
    }
    int64_t v117 = v24;
    uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CEF8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v26, 1, 1, v40);
    uint64_t v116 = 0;
LABEL_27:
    sub_251A4ECF0((uint64_t)v26, (uint64_t)v23, &qword_269B9CEF0);
    uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CEF8);
    int v42 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v41 - 8) + 48))(v23, 1, v41);
    BOOL v43 = v42 == 1;
    if (v42 == 1) {
      return v43;
    }
    uint64_t v44 = sub_251F34DA0();
    uint64_t v127 = &v107;
    uint64_t v45 = *(void *)(v44 - 8);
    MEMORY[0x270FA5388](v44);
    uint64_t v47 = v23;
    uint64_t v48 = (char *)&v107 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
    int64_t v49 = &v47[*(int *)(v41 + 48)];
    (*(void (**)(char *))(v45 + 32))(v48);
    uint64_t v50 = *(void *)v49;
    unint64_t v130 = (void **)*((void *)v49 + 1);
    unint64_t v51 = *((void *)v49 + 2);
    unint64_t v125 = *((void *)v49 + 3);
    unint64_t v126 = v51;
    unint64_t v52 = sub_2519FE584((uint64_t)v48);
    LOBYTE(v49) = v53;
    (*(void (**)(char *, uint64_t))(v45 + 8))(v48, v44);
    BOOL v120 = v43;
    if ((v49 & 1) == 0) {
      goto LABEL_115;
    }
    unint64_t v54 = (uint64_t *)(*(void *)(a2 + 56) + 32 * v52);
    uint64_t v131 = *v54;
    uint64_t v55 = *(void *)(v131 + 16);
    if (v55 != *(void *)(v50 + 16)) {
      goto LABEL_115;
    }
    uint64_t v56 = (void *)v54[2];
    unint64_t v132 = (void **)v54[1];
    uint64_t v57 = (void *)v54[3];
    uint64_t v128 = v50;
    id v129 = v56;
    if (v55 && v131 != v50)
    {
      uint64_t v58 = v113;
      unint64_t v59 = (*(unsigned __int8 *)(v113 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v113 + 80);
      uint64_t v60 = v131 + v59;
      uint64_t v61 = v50 + v59;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_251A1A4CC(v56);
      sub_251A1A4CC(v57);
      unint64_t v62 = 0;
      uint64_t v63 = *(void *)(v58 + 72);
      while (1)
      {
        sub_251B25B74(v60 + v63 * v62, v135, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
        if (v62 >= *(void *)(v50 + 16)) {
          break;
        }
        uint64_t v64 = (void *)v134;
        sub_251B25B74(v61 + v63 * v62, v134, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
        if (*(void *)v135 != *v64 || *(void *)(v135 + 8) != *(void *)(v134 + 8)) {
          goto LABEL_113;
        }
        uint64_t v65 = *(void *)(v135 + 24);
        uint64_t v66 = *(void *)(v134 + 24);
        if (v65)
        {
          if (!v66 || (*(void *)(v135 + 16) != *(void *)(v134 + 16) || v65 != v66) && (sub_251F36B10() & 1) == 0) {
            goto LABEL_113;
          }
        }
        else if (v66)
        {
          goto LABEL_113;
        }
        uint64_t v67 = *(void *)(v135 + 32);
        uint64_t v68 = *(void *)(v134 + 32);
        uint64_t v69 = *(void *)(v67 + 16);
        if (v69 != *(void *)(v68 + 16)) {
          goto LABEL_113;
        }
        if (v69 && v67 != v68)
        {
          uint64_t v70 = (unsigned __int8 *)(v67 + 32);
          char v71 = (unsigned __int8 *)(v68 + 32);
          while (1)
          {
            int v73 = *v70++;
            int v72 = v73;
            int v74 = *v71++;
            if (v72 != v74) {
              break;
            }
            if (!--v69) {
              goto LABEL_49;
            }
          }
LABEL_113:
          sub_251B25BDC(v134, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
          sub_251B25BDC(v135, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
          goto LABEL_114;
        }
LABEL_49:
        if (*(_DWORD *)(v135 + 40) != *(_DWORD *)(v134 + 40)
          || *(unsigned __int8 *)(v135 + 44) != *(unsigned __int8 *)(v134 + 44)
          || (sub_251F34D70() & 1) == 0)
        {
          goto LABEL_113;
        }
        uint64_t v76 = v134;
        uint64_t v75 = v135;
        char v77 = sub_251F34D70();
        sub_251B25BDC(v76, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
        uint64_t v78 = v75;
        uint64_t v50 = v128;
        sub_251B25BDC(v78, (uint64_t (*)(void))type metadata accessor for StaticAlarm);
        if ((v77 & 1) == 0) {
          goto LABEL_114;
        }
        if (++v62 == v55) {
          goto LABEL_56;
        }
      }
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
      JUMPOUT(0x251AF9978);
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_251A1A4CC(v56);
    sub_251A1A4CC(v57);
LABEL_56:
    char v79 = v132[2];
    uint64_t v80 = v130;
    id v81 = v124;
    if (v79 != v130[2])
    {
LABEL_114:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_251A1A4DC(v129);
      sub_251A1A4DC(v57);
LABEL_115:
      swift_bridgeObjectRelease();
      goto LABEL_118;
    }
    if (v79 && v132 != v130) {
      break;
    }
LABEL_78:
    a2 = v122;
    a1 = v114;
    uint64_t v95 = (void *)v126;
    switch((unint64_t)v129)
    {
      case 0uLL:
        if (v126) {
          goto LABEL_124;
        }
        goto LABEL_93;
      case 1uLL:
        if (v126 != 1) {
          goto LABEL_124;
        }
        goto LABEL_93;
      case 2uLL:
        if (v126 != 2) {
          goto LABEL_124;
        }
        goto LABEL_93;
      case 3uLL:
        if (v126 != 3) {
          goto LABEL_124;
        }
        goto LABEL_93;
      case 4uLL:
        if (v126 != 4) {
          goto LABEL_124;
        }
        goto LABEL_93;
      case 5uLL:
        if (v126 != 5) {
          goto LABEL_124;
        }
LABEL_93:
        id v99 = v129;
        sub_251A1A4DC(v129);
        sub_251A1A4DC(v99);
        goto LABEL_94;
      default:
        uint64_t v95 = (void *)v126;
        a2 = v122;
        a1 = v114;
        if (v126 < 6)
        {
LABEL_124:
          id v105 = v129;
          sub_251A1A4CC(v129);
          sub_251A1A4CC(v95);
          sub_251A1A4DC(v105);
          sub_251A1A4DC(v95);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          id v106 = v105;
          goto LABEL_125;
        }
        sub_251A1A568(0, (unint64_t *)&qword_26B21ECF8);
        uint64_t v107 = v57;
        id v96 = v129;
        sub_251A1A4CC(v129);
        sub_251A1A4CC(v95);
        sub_251A1A4CC(v96);
        sub_251A1A4CC(v95);
        char v97 = sub_251F36120();
        uint64_t v57 = v107;
        char v98 = v97;
        sub_251A1A4DC(v96);
        sub_251A1A4DC(v95);
        sub_251A1A4DC(v95);
        sub_251A1A4DC(v96);
        if ((v98 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          id v106 = v129;
LABEL_125:
          sub_251A1A4DC(v106);
          sub_251A1A4DC(v57);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_119;
        }
LABEL_94:
        uint64_t v100 = (void *)v125;
        switch((unint64_t)v57)
        {
          case 0uLL:
            if (v125) {
              goto LABEL_126;
            }
            goto LABEL_109;
          case 1uLL:
            if (v125 != 1) {
              goto LABEL_126;
            }
            goto LABEL_109;
          case 2uLL:
            if (v125 != 2) {
              goto LABEL_126;
            }
            goto LABEL_109;
          case 3uLL:
            if (v125 != 3) {
              goto LABEL_126;
            }
            goto LABEL_109;
          case 4uLL:
            if (v125 != 4) {
              goto LABEL_126;
            }
            goto LABEL_109;
          case 5uLL:
            if (v125 != 5) {
              goto LABEL_126;
            }
LABEL_109:
            sub_251A1A4DC(v57);
            sub_251A1A4DC(v57);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_251A1A4DC(v129);
            sub_251A1A4DC(v57);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_251A1A4DC(v95);
            sub_251A1A4DC(v57);
            goto LABEL_110;
          default:
            uint64_t v100 = (void *)v125;
            if (v125 < 6)
            {
LABEL_126:
              sub_251A1A4CC(v57);
              sub_251A1A4CC(v100);
              sub_251A1A4DC(v57);
              sub_251A1A4DC(v100);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_251A1A4DC(v129);
              sub_251A1A4DC(v57);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              goto LABEL_120;
            }
            sub_251A1A568(0, (unint64_t *)&qword_26B21ECF8);
            uint64_t v101 = v57;
            sub_251A1A4CC(v57);
            sub_251A1A4CC(v100);
            sub_251A1A4CC(v57);
            sub_251A1A4CC(v100);
            uint64_t v102 = v100;
            char v103 = sub_251F36120();
            sub_251A1A4DC(v101);
            sub_251A1A4DC(v102);
            sub_251A1A4DC(v102);
            sub_251A1A4DC(v101);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_251A1A4DC(v129);
            sub_251A1A4DC(v101);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_251A1A4DC(v95);
            sub_251A1A4DC(v102);
            if ((v103 & 1) == 0) {
              return v120;
            }
LABEL_110:
            char v23 = v121;
            unint64_t v19 = v116;
            break;
        }
        break;
    }
  }
  unint64_t v82 = 0;
  unint64_t v83 = (*(unsigned __int8 *)(v109 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v109 + 80);
  uint64_t v84 = *(void *)(v109 + 72);
  while (1)
  {
    sub_251B25B74((uint64_t)v132 + v83, (uint64_t)v81, (uint64_t (*)(void))type metadata accessor for StaticTimer);
    uint64_t v85 = v119;
    if (v82 >= (unint64_t)v80[2]) {
      goto LABEL_128;
    }
    uint64_t v86 = v133;
    sub_251B25B74((uint64_t)v80 + v83, (uint64_t)v133, (uint64_t (*)(void))type metadata accessor for StaticTimer);
    if (*v81 != *v86
      || (sub_251F34CD0() & 1) == 0
      || *(double *)((char *)v81 + v85[6]) != *(double *)((char *)v133 + v85[6]))
    {
      break;
    }
    uint64_t v87 = v85[7];
    int64_t v88 = (void *)((char *)v81 + v87);
    uint64_t v89 = *(void *)((char *)v81 + v87 + 8);
    uint64_t v90 = (void *)((char *)v133 + v87);
    uint64_t v91 = v90[1];
    if (!v89)
    {
      if (v91) {
        break;
      }
      goto LABEL_73;
    }
    if (!v91) {
      break;
    }
    BOOL v92 = *v88 == *v90 && v89 == v91;
    if (!v92 && (sub_251F36B10() & 1) == 0) {
      break;
    }
LABEL_73:
    if (*((unsigned __int8 *)v81 + v85[8]) != *((unsigned __int8 *)v133 + v85[8])
      || *((unsigned __int8 *)v81 + v85[9]) != *((unsigned __int8 *)v133 + v85[9])
      || (sub_251F34D70() & 1) == 0)
    {
      break;
    }
    uint64_t v93 = (uint64_t)v133;
    char v94 = sub_251F34D70();
    sub_251B25BDC(v93, (uint64_t (*)(void))type metadata accessor for StaticTimer);
    uint64_t v80 = v130;
    sub_251B25BDC((uint64_t)v81, (uint64_t (*)(void))type metadata accessor for StaticTimer);
    if ((v94 & 1) == 0) {
      goto LABEL_117;
    }
    ++v82;
    v83 += v84;
    id v81 = v124;
    if (v79 == (void *)v82) {
      goto LABEL_78;
    }
  }
  sub_251B25BDC((uint64_t)v133, (uint64_t (*)(void))type metadata accessor for StaticTimer);
  sub_251B25BDC((uint64_t)v81, (uint64_t (*)(void))type metadata accessor for StaticTimer);
LABEL_117:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_251A1A4DC(v129);
  sub_251A1A4DC(v57);
  swift_bridgeObjectRelease();
LABEL_118:
  swift_bridgeObjectRelease();
  uint64_t v95 = (void *)v126;
LABEL_119:
  uint64_t v100 = (void *)v125;
LABEL_120:
  sub_251A1A4DC(v95);
  sub_251A1A4DC(v100);
  return v120;
}

uint64_t sub_251AF99A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticService();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v55 = (uint64_t)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  unint64_t v9 = (char *)&v46 - v8;
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v51 = a1;
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v49 = a1 + 64;
  uint64_t v11 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v10;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E660);
  uint64_t v48 = &v46;
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  unint64_t v53 = (v16 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v54 = v16;
  uint64_t v52 = (uint64_t)&v46 - v53;
  int64_t v56 = 0;
  int64_t v50 = (unint64_t)(v11 + 63) >> 6;
  int64_t v47 = v50 - 1;
  while (1)
  {
    uint64_t result = MEMORY[0x270FA5388](v15);
    uint64_t v18 = (char *)&v46 - v53;
    if (v13)
    {
      uint64_t v57 = (v13 - 1) & v13;
      unint64_t v19 = __clz(__rbit64(v13)) | (v56 << 6);
LABEL_8:
      uint64_t v20 = v51;
      uint64_t v21 = *(void *)(v51 + 48);
      uint64_t v22 = sub_251F34DA0();
      (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v18, v21 + *(void *)(*(void *)(v22 - 8) + 72) * v19, v22);
      uint64_t v23 = *(void *)(v20 + 56) + *(void *)(v5 + 72) * v19;
      uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E658);
      sub_251B25B74(v23, (uint64_t)&v18[*(int *)(v24 + 48)], (uint64_t (*)(void))type metadata accessor for StaticService);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v18, 0, 1, v24);
      goto LABEL_27;
    }
    int64_t v25 = v56 + 1;
    if (__OFADD__(v56, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v25 < v50)
    {
      unint64_t v26 = *(void *)(v49 + 8 * v25);
      if (v26) {
        goto LABEL_12;
      }
      int64_t v27 = v56 + 2;
      ++v56;
      if (v25 + 1 < v50)
      {
        unint64_t v26 = *(void *)(v49 + 8 * v27);
        if (v26) {
          goto LABEL_15;
        }
        int64_t v56 = v25 + 1;
        if (v25 + 2 < v50)
        {
          unint64_t v26 = *(void *)(v49 + 8 * (v25 + 2));
          if (v26)
          {
            v25 += 2;
            goto LABEL_12;
          }
          int64_t v27 = v25 + 3;
          int64_t v56 = v25 + 2;
          if (v25 + 3 < v50) {
            break;
          }
        }
      }
    }
LABEL_26:
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E658);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v18, 1, 1, v28);
    uint64_t v57 = 0;
LABEL_27:
    uint64_t v29 = v52;
    sub_251A4ECF0((uint64_t)v18, v52, &qword_26B21E660);
    uint64_t v30 = v29;
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E658);
    int v32 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 48))(v29, 1, v31);
    BOOL v33 = v32 == 1;
    if (v32 == 1) {
      return v33;
    }
    uint64_t v34 = (uint64_t)v9;
    uint64_t v35 = v5;
    uint64_t v36 = sub_251F34DA0();
    uint64_t v37 = *(void *)(v36 - 8);
    MEMORY[0x270FA5388](v36);
    int64_t v39 = (char *)&v46 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v40 = v30 + *(int *)(v31 + 48);
    (*(void (**)(char *, uint64_t, uint64_t))(v37 + 32))(v39, v30, v36);
    sub_251B25C90(v40, v34, (uint64_t (*)(void))type metadata accessor for StaticService);
    unint64_t v41 = sub_2519FE584((uint64_t)v39);
    char v43 = v42;
    (*(void (**)(char *, uint64_t))(v37 + 8))(v39, v36);
    if ((v43 & 1) == 0)
    {
      sub_251B25BDC(v34, (uint64_t (*)(void))type metadata accessor for StaticService);
      return v33;
    }
    uint64_t v5 = v35;
    uint64_t v44 = v55;
    sub_251B25B74(*(void *)(a2 + 56) + *(void *)(v35 + 72) * v41, v55, (uint64_t (*)(void))type metadata accessor for StaticService);
    char v45 = static StaticService.== infix(_:_:)(v44, v34);
    sub_251B25BDC(v44, (uint64_t (*)(void))type metadata accessor for StaticService);
    uint64_t v15 = sub_251B25BDC(v34, (uint64_t (*)(void))type metadata accessor for StaticService);
    if ((v45 & 1) == 0) {
      return v33;
    }
    unint64_t v9 = (char *)v34;
    unint64_t v13 = v57;
  }
  unint64_t v26 = *(void *)(v49 + 8 * v27);
  if (v26)
  {
LABEL_15:
    int64_t v25 = v27;
LABEL_12:
    int64_t v56 = v25;
    uint64_t v57 = (v26 - 1) & v26;
    unint64_t v19 = __clz(__rbit64(v26)) + (v25 << 6);
    goto LABEL_8;
  }
  while (1)
  {
    int64_t v25 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v25 >= v50)
    {
      int64_t v56 = v47;
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v49 + 8 * v25);
    ++v27;
    if (v26) {
      goto LABEL_12;
    }
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_251AF9FA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticAccessory(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v55 = (uint64_t)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  unint64_t v9 = (char *)&v46 - v8;
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v51 = a1;
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v49 = a1 + 64;
  uint64_t v11 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v10;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E668);
  uint64_t v48 = &v46;
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  unint64_t v53 = (v16 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v54 = v16;
  uint64_t v52 = (uint64_t)&v46 - v53;
  int64_t v56 = 0;
  int64_t v50 = (unint64_t)(v11 + 63) >> 6;
  int64_t v47 = v50 - 1;
  while (1)
  {
    uint64_t result = MEMORY[0x270FA5388](v15);
    uint64_t v18 = (char *)&v46 - v53;
    if (v13)
    {
      uint64_t v57 = (v13 - 1) & v13;
      unint64_t v19 = __clz(__rbit64(v13)) | (v56 << 6);
LABEL_8:
      uint64_t v20 = v51;
      uint64_t v21 = *(void *)(v51 + 48);
      uint64_t v22 = sub_251F34DA0();
      (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v18, v21 + *(void *)(*(void *)(v22 - 8) + 72) * v19, v22);
      uint64_t v23 = *(void *)(v20 + 56) + *(void *)(v5 + 72) * v19;
      uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F008);
      sub_251B25B74(v23, (uint64_t)&v18[*(int *)(v24 + 48)], type metadata accessor for StaticAccessory);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v18, 0, 1, v24);
      goto LABEL_27;
    }
    int64_t v25 = v56 + 1;
    if (__OFADD__(v56, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v25 < v50)
    {
      unint64_t v26 = *(void *)(v49 + 8 * v25);
      if (v26) {
        goto LABEL_12;
      }
      int64_t v27 = v56 + 2;
      ++v56;
      if (v25 + 1 < v50)
      {
        unint64_t v26 = *(void *)(v49 + 8 * v27);
        if (v26) {
          goto LABEL_15;
        }
        int64_t v56 = v25 + 1;
        if (v25 + 2 < v50)
        {
          unint64_t v26 = *(void *)(v49 + 8 * (v25 + 2));
          if (v26)
          {
            v25 += 2;
            goto LABEL_12;
          }
          int64_t v27 = v25 + 3;
          int64_t v56 = v25 + 2;
          if (v25 + 3 < v50) {
            break;
          }
        }
      }
    }
LABEL_26:
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F008);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v18, 1, 1, v28);
    uint64_t v57 = 0;
LABEL_27:
    uint64_t v29 = v52;
    sub_251A4ECF0((uint64_t)v18, v52, &qword_26B21E668);
    uint64_t v30 = v29;
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F008);
    int v32 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 48))(v29, 1, v31);
    BOOL v33 = v32 == 1;
    if (v32 == 1) {
      return v33;
    }
    uint64_t v34 = (uint64_t)v9;
    uint64_t v35 = v5;
    uint64_t v36 = sub_251F34DA0();
    uint64_t v37 = *(void *)(v36 - 8);
    MEMORY[0x270FA5388](v36);
    int64_t v39 = (char *)&v46 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v40 = v30 + *(int *)(v31 + 48);
    (*(void (**)(char *, uint64_t, uint64_t))(v37 + 32))(v39, v30, v36);
    sub_251B25C90(v40, v34, type metadata accessor for StaticAccessory);
    unint64_t v41 = sub_2519FE584((uint64_t)v39);
    char v43 = v42;
    (*(void (**)(char *, uint64_t))(v37 + 8))(v39, v36);
    if ((v43 & 1) == 0)
    {
      sub_251B25BDC(v34, type metadata accessor for StaticAccessory);
      return v33;
    }
    uint64_t v5 = v35;
    uint64_t v44 = v55;
    sub_251B25B74(*(void *)(a2 + 56) + *(void *)(v35 + 72) * v41, v55, type metadata accessor for StaticAccessory);
    char v45 = static StaticAccessory.== infix(_:_:)(v44, v34);
    sub_251B25BDC(v44, type metadata accessor for StaticAccessory);
    uint64_t v15 = sub_251B25BDC(v34, type metadata accessor for StaticAccessory);
    if ((v45 & 1) == 0) {
      return v33;
    }
    unint64_t v9 = (char *)v34;
    unint64_t v13 = v57;
  }
  unint64_t v26 = *(void *)(v49 + 8 * v27);
  if (v26)
  {
LABEL_15:
    int64_t v25 = v27;
LABEL_12:
    int64_t v56 = v25;
    uint64_t v57 = (v26 - 1) & v26;
    unint64_t v19 = __clz(__rbit64(v26)) + (v25 << 6);
    goto LABEL_8;
  }
  while (1)
  {
    int64_t v25 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v25 >= v50)
    {
      int64_t v56 = v47;
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v49 + 8 * v25);
    ++v27;
    if (v26) {
      goto LABEL_12;
    }
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_251AFA5A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticServiceGroup();
  uint64_t v64 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  unint64_t v9 = (char *)&v53 - v8;
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v54 = a1 + 64;
  uint64_t v11 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v10;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B21E6A0);
  uint64_t v55 = &v53;
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  unint64_t v60 = (v16 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v61 = v16;
  uint64_t v58 = (int *)v4;
  uint64_t v59 = (uint64_t)&v53 - v60;
  int64_t v62 = 0;
  int64_t v56 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v57 = a1;
  int64_t v53 = v56 - 1;
  while (1)
  {
    uint64_t result = MEMORY[0x270FA5388](v15);
    uint64_t v18 = (char *)&v53 - v60;
    if (v13)
    {
      uint64_t v63 = (v13 - 1) & v13;
      unint64_t v19 = __clz(__rbit64(v13)) | (v62 << 6);
LABEL_8:
      uint64_t v20 = *(void *)(a1 + 48);
      uint64_t v21 = sub_251F34DA0();
      (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v18, v20 + *(void *)(*(void *)(v21 - 8) + 72) * v19, v21);
      uint64_t v22 = *(void *)(a1 + 56) + *(void *)(v64 + 72) * v19;
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E698);
      sub_251B25B74(v22, (uint64_t)&v18[*(int *)(v23 + 48)], (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v18, 0, 1, v23);
      goto LABEL_27;
    }
    int64_t v24 = v62 + 1;
    if (__OFADD__(v62, 1))
    {
      __break(1u);
      goto LABEL_52;
    }
    if (v24 < v56)
    {
      unint64_t v25 = *(void *)(v54 + 8 * v24);
      if (v25) {
        goto LABEL_12;
      }
      int64_t v26 = v62 + 2;
      ++v62;
      if (v24 + 1 < v56)
      {
        unint64_t v25 = *(void *)(v54 + 8 * v26);
        if (v25) {
          goto LABEL_15;
        }
        int64_t v62 = v24 + 1;
        if (v24 + 2 < v56)
        {
          unint64_t v25 = *(void *)(v54 + 8 * (v24 + 2));
          if (v25)
          {
            v24 += 2;
            goto LABEL_12;
          }
          int64_t v26 = v24 + 3;
          int64_t v62 = v24 + 2;
          if (v24 + 3 < v56) {
            break;
          }
        }
      }
    }
LABEL_26:
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E698);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v18, 1, 1, v27);
    uint64_t v63 = 0;
LABEL_27:
    uint64_t v28 = v59;
    sub_251A4ECF0((uint64_t)v18, v59, (uint64_t *)&unk_26B21E6A0);
    uint64_t v29 = v28;
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E698);
    int v31 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 48))(v28, 1, v30);
    BOOL v32 = v31 == 1;
    if (v31 == 1) {
      return v32;
    }
    uint64_t v33 = sub_251F34DA0();
    uint64_t v34 = *(void *)(v33 - 8);
    MEMORY[0x270FA5388](v33);
    uint64_t v36 = (char *)&v53 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v37 = v29 + *(int *)(v30 + 48);
    (*(void (**)(char *, uint64_t, uint64_t))(v34 + 32))(v36, v29, v33);
    sub_251B25C90(v37, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
    unint64_t v38 = sub_2519FE584((uint64_t)v36);
    char v40 = v39;
    (*(void (**)(char *, uint64_t))(v34 + 8))(v36, v33);
    if ((v40 & 1) == 0) {
      goto LABEL_49;
    }
    sub_251B25B74(*(void *)(a2 + 56) + *(void *)(v64 + 72) * v38, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
    char v41 = sub_251F34D70();
    char v42 = v58;
    unint64_t v13 = v63;
    if ((v41 & 1) == 0
      || ((uint64_t v43 = v58[5], v44 = *(void *)&v7[v43], v45 = *(void *)&v7[v43 + 8], v46 = &v9[v43], v44 != *(void *)v46)
       || v45 != *((void *)v46 + 1))
      && (sub_251F36B10() & 1) == 0
      || v7[v42[6]] != v9[v42[6]]
      || v7[v42[7]] != v9[v42[7]]
      || (sub_251B04848(*(void *)&v7[v42[8]], *(void *)&v9[v42[8]]) & 1) == 0)
    {
LABEL_48:
      sub_251B25BDC((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
LABEL_49:
      sub_251B25BDC((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
      return v32;
    }
    uint64_t v47 = v42[9];
    uint64_t v48 = &v7[v47];
    uint64_t v49 = *(void *)&v7[v47 + 8];
    int64_t v50 = &v9[v47];
    uint64_t v51 = *((void *)v50 + 1);
    if (v49)
    {
      if (!v51 || (*(void *)v48 != *(void *)v50 || v49 != v51) && (sub_251F36B10() & 1) == 0) {
        goto LABEL_48;
      }
    }
    else if (v51)
    {
      goto LABEL_48;
    }
    if (v7[v42[10]] != v9[v42[10]]) {
      goto LABEL_48;
    }
    char v52 = sub_251AF99A8(*(void *)&v7[v42[11]], *(void *)&v9[v42[11]]);
    sub_251B25BDC((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
    uint64_t v15 = sub_251B25BDC((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticServiceGroup);
    if ((v52 & 1) == 0) {
      return v32;
    }
    a1 = v57;
  }
  unint64_t v25 = *(void *)(v54 + 8 * v26);
  if (v25)
  {
LABEL_15:
    int64_t v24 = v26;
LABEL_12:
    int64_t v62 = v24;
    uint64_t v63 = (v25 - 1) & v25;
    unint64_t v19 = __clz(__rbit64(v25)) + (v24 << 6);
    goto LABEL_8;
  }
  while (1)
  {
    int64_t v24 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v24 >= v56)
    {
      int64_t v62 = v53;
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v54 + 8 * v24);
    ++v26;
    if (v25) {
      goto LABEL_12;
    }
  }
LABEL_52:
  __break(1u);
  return result;
}

uint64_t sub_251AFAC94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (int *)type metadata accessor for StaticMatterDevice();
  uint64_t v56 = *((void *)v4 - 1);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  unint64_t v9 = (char *)&v49 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D0E0);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  unint64_t v13 = (uint64_t *)((char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (uint64_t *)((char *)&v49 - v15);
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v54 = a2;
  int64_t v55 = 0;
  uint64_t v17 = *(void *)(a1 + 64);
  uint64_t v51 = a1 + 64;
  uint64_t v18 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v19 = -1;
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  unint64_t v20 = v19 & v17;
  int64_t v52 = (unint64_t)(v18 + 63) >> 6;
  uint64_t v53 = a1;
  int64_t v50 = v52 - 1;
  while (1)
  {
    if (v20)
    {
      unint64_t v21 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      unint64_t v22 = v21 | (v55 << 6);
LABEL_8:
      uint64_t v23 = *(void *)(a1 + 56);
      uint64_t v24 = *(void *)(*(void *)(a1 + 48) + 8 * v22);
      uint64_t v25 = v23 + *(void *)(v56 + 72) * v22;
      uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D0E8);
      sub_251B25B74(v25, (uint64_t)v13 + *(int *)(v26 + 48), (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
      *unint64_t v13 = v24;
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v13, 0, 1, v26);
      goto LABEL_27;
    }
    int64_t v27 = v55 + 1;
    if (__OFADD__(v55, 1))
    {
      __break(1u);
      goto LABEL_54;
    }
    if (v27 < v52)
    {
      unint64_t v28 = *(void *)(v51 + 8 * v27);
      if (v28) {
        goto LABEL_12;
      }
      int64_t v29 = v55 + 2;
      ++v55;
      if (v27 + 1 < v52)
      {
        unint64_t v28 = *(void *)(v51 + 8 * v29);
        if (v28) {
          goto LABEL_15;
        }
        int64_t v55 = v27 + 1;
        if (v27 + 2 < v52)
        {
          unint64_t v28 = *(void *)(v51 + 8 * (v27 + 2));
          if (v28)
          {
            v27 += 2;
            goto LABEL_12;
          }
          int64_t v29 = v27 + 3;
          int64_t v55 = v27 + 2;
          if (v27 + 3 < v52) {
            break;
          }
        }
      }
    }
LABEL_26:
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D0E8);
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v13, 1, 1, v30);
    unint64_t v20 = 0;
LABEL_27:
    sub_251A4ECF0((uint64_t)v13, (uint64_t)v16, &qword_269B9D0E0);
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D0E8);
    int v32 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 48))(v16, 1, v31);
    BOOL v33 = v32 == 1;
    if (v32 == 1) {
      return v33;
    }
    uint64_t v34 = (uint64_t)v16 + *(int *)(v31 + 48);
    uint64_t v35 = *v16;
    sub_251B25C90(v34, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
    uint64_t v36 = v54;
    unint64_t v37 = sub_2519FE588(v35);
    if ((v38 & 1) == 0) {
      goto LABEL_50;
    }
    sub_251B25B74(*(void *)(v36 + 56) + *(void *)(v56 + 72) * v37, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
    if ((sub_251F34D70() & 1) == 0
      || *(void *)&v7[v4[5]] != *(void *)&v9[v4[5]]
      || ((uint64_t v39 = v4[6], v40 = *(void *)&v7[v39], v41 = *(void *)&v7[v39 + 8], v42 = &v9[v39], v40 != *(void *)v42)
       || v41 != *((void *)v42 + 1))
      && (sub_251F36B10() & 1) == 0
      || *(void *)&v7[v4[7]] != *(void *)&v9[v4[7]]
      || (sub_251B05988(*(void *)&v7[v4[8]], *(void *)&v9[v4[8]]) & 1) == 0
      || (sub_251F34D70() & 1) == 0
      || (sub_251F34D70() & 1) == 0)
    {
LABEL_49:
      sub_251B25BDC((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
LABEL_50:
      sub_251B25BDC((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
      return 0;
    }
    uint64_t v43 = v4[11];
    uint64_t v44 = &v7[v43];
    uint64_t v45 = *(void *)&v7[v43 + 8];
    uint64_t v46 = &v9[v43];
    uint64_t v47 = *((void *)v46 + 1);
    if (v45)
    {
      if (!v47 || (*(void *)v44 != *(void *)v46 || v45 != v47) && (sub_251F36B10() & 1) == 0) {
        goto LABEL_49;
      }
    }
    else if (v47)
    {
      goto LABEL_49;
    }
    if ((sub_251AFB9D8(*(void *)&v7[v4[12]], *(void *)&v9[v4[12]]) & 1) == 0) {
      goto LABEL_49;
    }
    char v48 = static MatterTileMetadata.== infix(_:_:)(&v7[v4[13]], &v9[v4[13]]);
    sub_251B25BDC((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
    uint64_t result = sub_251B25BDC((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticMatterDevice);
    a1 = v53;
    if ((v48 & 1) == 0) {
      return v33;
    }
  }
  unint64_t v28 = *(void *)(v51 + 8 * v29);
  if (v28)
  {
LABEL_15:
    int64_t v27 = v29;
LABEL_12:
    unint64_t v20 = (v28 - 1) & v28;
    unint64_t v22 = __clz(__rbit64(v28)) + (v27 << 6);
    int64_t v55 = v27;
    goto LABEL_8;
  }
  while (1)
  {
    int64_t v27 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v27 >= v52)
    {
      int64_t v55 = v50;
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v51 + 8 * v27);
    ++v29;
    if (v28) {
      goto LABEL_12;
    }
  }
LABEL_54:
  __break(1u);
  return result;
}

uint64_t sub_251AFB270(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (int *)type metadata accessor for StaticEndpoint();
  uint64_t v71 = *((void *)v4 - 1);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  unint64_t v9 = (char *)&v60 - v8;
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v66 = a1;
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v61 = a1 + 64;
  uint64_t v11 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v10;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D0D0);
  int64_t v62 = &v60;
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  uint64_t v67 = (uint64_t)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v68 = 0;
  int64_t v63 = (unint64_t)(v11 + 63) >> 6;
  unint64_t v64 = (v16 + 15) & 0xFFFFFFFFFFFFFFF0;
  int64_t v60 = v63 - 1;
  uint64_t v65 = v16;
  while (1)
  {
    uint64_t result = MEMORY[0x270FA5388](v15);
    uint64_t v19 = (char *)&v60 - v18;
    if (v13)
    {
      uint64_t v70 = (v13 - 1) & v13;
      unint64_t v20 = __clz(__rbit64(v13)) | (v68 << 6);
LABEL_8:
      uint64_t v21 = v66;
      uint64_t v22 = *(void *)(v66 + 48);
      uint64_t v23 = sub_251F34DA0();
      (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v19, v22 + *(void *)(*(void *)(v23 - 8) + 72) * v20, v23);
      uint64_t v24 = *(void *)(v21 + 56) + *(void *)(v71 + 72) * v20;
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D0D8);
      sub_251B25B74(v24, (uint64_t)&v19[*(int *)(v25 + 48)], (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v19, 0, 1, v25);
      goto LABEL_27;
    }
    int64_t v26 = v68 + 1;
    if (__OFADD__(v68, 1))
    {
      __break(1u);
      goto LABEL_60;
    }
    if (v26 < v63)
    {
      unint64_t v27 = *(void *)(v61 + 8 * v26);
      if (v27) {
        goto LABEL_12;
      }
      int64_t v28 = v68 + 2;
      ++v68;
      if (v26 + 1 < v63)
      {
        unint64_t v27 = *(void *)(v61 + 8 * v28);
        if (v27) {
          goto LABEL_15;
        }
        int64_t v68 = v26 + 1;
        if (v26 + 2 < v63)
        {
          unint64_t v27 = *(void *)(v61 + 8 * (v26 + 2));
          if (v27)
          {
            v26 += 2;
            goto LABEL_12;
          }
          int64_t v28 = v26 + 3;
          int64_t v68 = v26 + 2;
          if (v26 + 3 < v63) {
            break;
          }
        }
      }
    }
LABEL_26:
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D0D8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v19, 1, 1, v29);
    uint64_t v70 = 0;
LABEL_27:
    uint64_t v30 = v67;
    sub_251A4ECF0((uint64_t)v19, v67, &qword_269B9D0D0);
    uint64_t v31 = v30;
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D0D8);
    int v33 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 48))(v30, 1, v32);
    BOOL v34 = v33 == 1;
    if (v33 == 1) {
      return v34;
    }
    uint64_t v35 = sub_251F34DA0();
    uint64_t v69 = &v60;
    uint64_t v36 = *(void *)(v35 - 8);
    MEMORY[0x270FA5388](v35);
    char v38 = (char *)&v60 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v39 = v31 + *(int *)(v32 + 48);
    (*(void (**)(char *, uint64_t, uint64_t))(v36 + 32))(v38, v31, v35);
    sub_251B25C90(v39, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
    unint64_t v40 = sub_2519FE584((uint64_t)v38);
    char v42 = v41;
    (*(void (**)(char *, uint64_t))(v36 + 8))(v38, v35);
    if ((v42 & 1) == 0) {
      goto LABEL_57;
    }
    sub_251B25B74(*(void *)(a2 + 56) + *(void *)(v71 + 72) * v40, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
    char v43 = sub_251F34D70();
    unint64_t v13 = v70;
    if ((v43 & 1) == 0) {
      goto LABEL_56;
    }
    uint64_t v44 = v4[5];
    uint64_t v45 = &v7[v44];
    uint64_t v46 = *(void *)&v7[v44];
    uint64_t v47 = &v9[v44];
    if (v46 != *(void *)v47 || *((unsigned __int16 *)v45 + 4) != *((unsigned __int16 *)v47 + 4)) {
      goto LABEL_56;
    }
    uint64_t v48 = v4[6];
    uint64_t v49 = *(void *)&v7[v48];
    uint64_t v50 = *(void *)&v7[v48 + 8];
    uint64_t v51 = &v9[v48];
    if ((v49 != *(void *)v51 || v50 != *((void *)v51 + 1)) && (sub_251F36B10() & 1) == 0) {
      goto LABEL_56;
    }
    if (*(void *)&v7[v4[7]] != *(void *)&v9[v4[7]]
      || (sub_251B05988(*(void *)&v7[v4[8]], *(void *)&v9[v4[8]]) & 1) == 0
      || (sub_251AFCBF0(*(void *)&v7[v4[9]], *(void *)&v9[v4[9]]) & 1) == 0
      || (sub_251B05B84(*(void *)&v7[v4[10]], *(void *)&v9[v4[10]]) & 1) == 0
      || (sub_251F34D70() & 1) == 0
      || (sub_251B04848(*(void *)&v7[v4[12]], *(void *)&v9[v4[12]]) & 1) == 0
      || (static MatterTileMetadata.== infix(_:_:)(&v7[v4[13]], &v9[v4[13]]) & 1) == 0)
    {
LABEL_56:
      sub_251B25BDC((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
LABEL_57:
      sub_251B25BDC((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
      return v34;
    }
    uint64_t v52 = v4[14];
    uint64_t v53 = &v7[v52];
    char v54 = v7[v52 + 2];
    int64_t v55 = &v9[v52];
    int v56 = v9[v52 + 2];
    if (v54)
    {
      if (!v56) {
        goto LABEL_56;
      }
    }
    else
    {
      if (*(unsigned __int16 *)v53 != *(unsigned __int16 *)v55) {
        LOBYTE(v56) = 1;
      }
      if (v56) {
        goto LABEL_56;
      }
    }
    uint64_t v57 = v4[15];
    int v58 = v7[v57];
    int v59 = v9[v57];
    if (v58 == 6)
    {
      if (v59 != 6) {
        goto LABEL_56;
      }
    }
    else if (v59 == 6 || v58 != v59)
    {
      goto LABEL_56;
    }
    sub_251B25BDC((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
    uint64_t v15 = sub_251B25BDC((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
  }
  unint64_t v27 = *(void *)(v61 + 8 * v28);
  if (v27)
  {
LABEL_15:
    int64_t v26 = v28;
LABEL_12:
    uint64_t v70 = (v27 - 1) & v27;
    unint64_t v20 = __clz(__rbit64(v27)) + (v26 << 6);
    int64_t v68 = v26;
    goto LABEL_8;
  }
  while (1)
  {
    int64_t v26 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v26 >= v63)
    {
      int64_t v68 = v60;
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v61 + 8 * v26);
    ++v28;
    if (v27) {
      goto LABEL_12;
    }
  }
LABEL_60:
  __break(1u);
  return result;
}

uint64_t sub_251AFB9D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (int *)type metadata accessor for StaticEndpoint();
  uint64_t v5 = *((void *)v4 - 1);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v55 - v9;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CE68);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  int64_t v63 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v12);
  unint64_t v64 = (unsigned __int16 *)((char *)&v55 - v15);
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v60 = a2;
  int64_t v61 = 0;
  uint64_t v16 = *(void *)(a1 + 64);
  uint64_t v57 = a1 + 64;
  uint64_t v17 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & v16;
  int64_t v58 = (unint64_t)(v17 + 63) >> 6;
  uint64_t v59 = a1;
  int64_t v56 = v58 - 1;
  if (!v19) {
    goto LABEL_8;
  }
LABEL_6:
  uint64_t v62 = (v19 - 1) & v19;
  unint64_t v20 = __clz(__rbit64(v19)) | (v61 << 6);
  while (2)
  {
    __int16 v21 = *(_WORD *)(*(void *)(a1 + 48) + 2 * v20);
    uint64_t v22 = v5;
    uint64_t v23 = *(void *)(a1 + 56) + *(void *)(v5 + 72) * v20;
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F4C8);
    uint64_t v25 = v63;
    sub_251B25B74(v23, (uint64_t)&v63[*(int *)(v24 + 48)], (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
    *(_WORD *)uint64_t v25 = v21;
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v25, 0, 1, v24);
    while (1)
    {
      uint64_t v30 = (uint64_t)v25;
      uint64_t v31 = v64;
      sub_251A4ECF0(v30, (uint64_t)v64, &qword_269B9CE68);
      uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F4C8);
      uint64_t v33 = 1;
      if ((*(unsigned int (**)(unsigned __int16 *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 48))(v31, 1, v32) == 1)return v33; {
      uint64_t v34 = (uint64_t)v31 + *(int *)(v32 + 48);
      }
      unsigned __int16 v35 = *v31;
      sub_251B25C90(v34, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
      uint64_t v36 = v60;
      unint64_t v37 = sub_2519FE5CC(v35);
      if ((v38 & 1) == 0) {
        goto LABEL_56;
      }
      uint64_t v5 = v22;
      sub_251B25B74(*(void *)(v36 + 56) + *(void *)(v22 + 72) * v37, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
      if ((sub_251F34D70() & 1) == 0) {
        goto LABEL_55;
      }
      uint64_t v39 = v4[5];
      unint64_t v40 = &v8[v39];
      uint64_t v41 = *(void *)&v8[v39];
      char v42 = &v10[v39];
      if (v41 != *(void *)v42 || *((unsigned __int16 *)v40 + 4) != *((unsigned __int16 *)v42 + 4)) {
        goto LABEL_55;
      }
      uint64_t v43 = v4[6];
      uint64_t v44 = *(void *)&v8[v43];
      uint64_t v45 = *(void *)&v8[v43 + 8];
      uint64_t v46 = &v10[v43];
      if ((v44 != *(void *)v46 || v45 != *((void *)v46 + 1)) && (sub_251F36B10() & 1) == 0) {
        goto LABEL_55;
      }
      if (*(void *)&v8[v4[7]] != *(void *)&v10[v4[7]]
        || (sub_251B05988(*(void *)&v8[v4[8]], *(void *)&v10[v4[8]]) & 1) == 0
        || (sub_251AFCBF0(*(void *)&v8[v4[9]], *(void *)&v10[v4[9]]) & 1) == 0
        || (sub_251B05B84(*(void *)&v8[v4[10]], *(void *)&v10[v4[10]]) & 1) == 0
        || (sub_251F34D70() & 1) == 0
        || (sub_251B04848(*(void *)&v8[v4[12]], *(void *)&v10[v4[12]]) & 1) == 0
        || (static MatterTileMetadata.== infix(_:_:)(&v8[v4[13]], &v10[v4[13]]) & 1) == 0)
      {
LABEL_55:
        sub_251B25BDC((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
LABEL_56:
        sub_251B25BDC((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
        return 0;
      }
      uint64_t v47 = v4[14];
      uint64_t v48 = &v8[v47];
      char v49 = v8[v47 + 2];
      uint64_t v50 = &v10[v47];
      int v51 = v10[v47 + 2];
      if (v49)
      {
        if (!v51) {
          goto LABEL_55;
        }
      }
      else
      {
        if (*(unsigned __int16 *)v48 != *(unsigned __int16 *)v50) {
          LOBYTE(v51) = 1;
        }
        if (v51) {
          goto LABEL_55;
        }
      }
      uint64_t v52 = v4[15];
      int v53 = v8[v52];
      int v54 = v10[v52];
      if (v53 == 6)
      {
        if (v54 != 6) {
          goto LABEL_55;
        }
      }
      else if (v54 == 6 || v53 != v54)
      {
        goto LABEL_55;
      }
      sub_251B25BDC((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
      uint64_t result = sub_251B25BDC((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticEndpoint);
      a1 = v59;
      unint64_t v19 = v62;
      if (v62) {
        goto LABEL_6;
      }
LABEL_8:
      int64_t v26 = v61 + 1;
      if (__OFADD__(v61, 1))
      {
        __break(1u);
        goto LABEL_60;
      }
      if (v26 < v58)
      {
        unint64_t v27 = *(void *)(v57 + 8 * v26);
        if (v27) {
          goto LABEL_11;
        }
        int64_t v28 = v61 + 2;
        ++v61;
        if (v26 + 1 < v58)
        {
          unint64_t v27 = *(void *)(v57 + 8 * v28);
          if (v27) {
            goto LABEL_14;
          }
          int64_t v61 = v26 + 1;
          if (v26 + 2 < v58)
          {
            unint64_t v27 = *(void *)(v57 + 8 * (v26 + 2));
            if (v27)
            {
              v26 += 2;
              goto LABEL_11;
            }
            int64_t v28 = v26 + 3;
            int64_t v61 = v26 + 2;
            if (v26 + 3 < v58) {
              break;
            }
          }
        }
      }
LABEL_25:
      uint64_t v22 = v5;
      uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F4C8);
      uint64_t v25 = v63;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v63, 1, 1, v29);
      uint64_t v62 = 0;
    }
    unint64_t v27 = *(void *)(v57 + 8 * v28);
    if (v27)
    {
LABEL_14:
      int64_t v26 = v28;
LABEL_11:
      int64_t v61 = v26;
      uint64_t v62 = (v27 - 1) & v27;
      unint64_t v20 = __clz(__rbit64(v27)) + (v26 << 6);
      continue;
    }
    break;
  }
  while (1)
  {
    int64_t v26 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v26 >= v58)
    {
      int64_t v61 = v56;
      goto LABEL_25;
    }
    unint64_t v27 = *(void *)(v57 + 8 * v26);
    ++v28;
    if (v27) {
      goto LABEL_11;
    }
  }
LABEL_60:
  __break(1u);
  return result;
}

uint64_t sub_251AFC01C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ActionService();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v55 = (uint64_t)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v46 - v8;
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v51 = a1;
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v49 = a1 + 64;
  uint64_t v11 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v10;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF90);
  uint64_t v48 = &v46;
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  unint64_t v53 = (v16 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v54 = v16;
  uint64_t v52 = (uint64_t)&v46 - v53;
  int64_t v56 = 0;
  int64_t v50 = (unint64_t)(v11 + 63) >> 6;
  int64_t v47 = v50 - 1;
  while (1)
  {
    uint64_t result = MEMORY[0x270FA5388](v15);
    uint64_t v18 = (char *)&v46 - v53;
    if (v13)
    {
      uint64_t v57 = (v13 - 1) & v13;
      unint64_t v19 = __clz(__rbit64(v13)) | (v56 << 6);
LABEL_8:
      uint64_t v20 = v51;
      uint64_t v21 = *(void *)(v51 + 48);
      uint64_t v22 = sub_251F34DA0();
      (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v18, v21 + *(void *)(*(void *)(v22 - 8) + 72) * v19, v22);
      uint64_t v23 = *(void *)(v20 + 56) + *(void *)(v5 + 72) * v19;
      uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF98);
      sub_251B25B74(v23, (uint64_t)&v18[*(int *)(v24 + 48)], (uint64_t (*)(void))type metadata accessor for ActionService);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v18, 0, 1, v24);
      goto LABEL_27;
    }
    int64_t v25 = v56 + 1;
    if (__OFADD__(v56, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v25 < v50)
    {
      unint64_t v26 = *(void *)(v49 + 8 * v25);
      if (v26) {
        goto LABEL_12;
      }
      int64_t v27 = v56 + 2;
      ++v56;
      if (v25 + 1 < v50)
      {
        unint64_t v26 = *(void *)(v49 + 8 * v27);
        if (v26) {
          goto LABEL_15;
        }
        int64_t v56 = v25 + 1;
        if (v25 + 2 < v50)
        {
          unint64_t v26 = *(void *)(v49 + 8 * (v25 + 2));
          if (v26)
          {
            v25 += 2;
            goto LABEL_12;
          }
          int64_t v27 = v25 + 3;
          int64_t v56 = v25 + 2;
          if (v25 + 3 < v50) {
            break;
          }
        }
      }
    }
LABEL_26:
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF98);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v18, 1, 1, v28);
    uint64_t v57 = 0;
LABEL_27:
    uint64_t v29 = v52;
    sub_251A4ECF0((uint64_t)v18, v52, &qword_269B9CF90);
    uint64_t v30 = v29;
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF98);
    int v32 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 48))(v29, 1, v31);
    BOOL v33 = v32 == 1;
    if (v32 == 1) {
      return v33;
    }
    uint64_t v34 = (uint64_t)v9;
    uint64_t v35 = v5;
    uint64_t v36 = sub_251F34DA0();
    uint64_t v37 = *(void *)(v36 - 8);
    MEMORY[0x270FA5388](v36);
    uint64_t v39 = (char *)&v46 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v40 = v30 + *(int *)(v31 + 48);
    (*(void (**)(char *, uint64_t, uint64_t))(v37 + 32))(v39, v30, v36);
    sub_251B25C90(v40, v34, (uint64_t (*)(void))type metadata accessor for ActionService);
    unint64_t v41 = sub_2519FE584((uint64_t)v39);
    char v43 = v42;
    (*(void (**)(char *, uint64_t))(v37 + 8))(v39, v36);
    if ((v43 & 1) == 0)
    {
      sub_251B25BDC(v34, (uint64_t (*)(void))type metadata accessor for ActionService);
      return v33;
    }
    uint64_t v5 = v35;
    uint64_t v44 = v55;
    sub_251B25B74(*(void *)(a2 + 56) + *(void *)(v35 + 72) * v41, v55, (uint64_t (*)(void))type metadata accessor for ActionService);
    char v45 = static ActionService.== infix(_:_:)(v44, v34);
    sub_251B25BDC(v44, (uint64_t (*)(void))type metadata accessor for ActionService);
    uint64_t v15 = sub_251B25BDC(v34, (uint64_t (*)(void))type metadata accessor for ActionService);
    if ((v45 & 1) == 0) {
      return v33;
    }
    uint64_t v9 = (char *)v34;
    unint64_t v13 = v57;
  }
  unint64_t v26 = *(void *)(v49 + 8 * v27);
  if (v26)
  {
LABEL_15:
    int64_t v25 = v27;
LABEL_12:
    int64_t v56 = v25;
    uint64_t v57 = (v26 - 1) & v26;
    unint64_t v19 = __clz(__rbit64(v26)) + (v25 << 6);
    goto LABEL_8;
  }
  while (1)
  {
    int64_t v25 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v25 >= v50)
    {
      int64_t v56 = v47;
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v49 + 8 * v25);
    ++v27;
    if (v26) {
      goto LABEL_12;
    }
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_251AFC61C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (int *)type metadata accessor for ActionEndpoint();
  uint64_t v55 = *((void *)v4 - 1);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v48 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CFD0);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  unint64_t v13 = (_WORD *)((char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (unsigned __int16 *)((char *)&v48 - v15);
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v53 = a2;
  int64_t v54 = 0;
  uint64_t v17 = *(void *)(a1 + 64);
  uint64_t v50 = a1 + 64;
  uint64_t v18 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v19 = -1;
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  unint64_t v20 = v19 & v17;
  int64_t v51 = (unint64_t)(v18 + 63) >> 6;
  uint64_t v52 = a1;
  int64_t v49 = v51 - 1;
  while (1)
  {
    if (v20)
    {
      unint64_t v21 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      unint64_t v22 = v21 | (v54 << 6);
LABEL_8:
      uint64_t v23 = *(void *)(a1 + 56);
      __int16 v24 = *(_WORD *)(*(void *)(a1 + 48) + 2 * v22);
      uint64_t v25 = v23 + *(void *)(v55 + 72) * v22;
      uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CFD8);
      sub_251B25B74(v25, (uint64_t)v13 + *(int *)(v26 + 48), (uint64_t (*)(void))type metadata accessor for ActionEndpoint);
      *unint64_t v13 = v24;
      (*(void (**)(_WORD *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v13, 0, 1, v26);
      goto LABEL_27;
    }
    int64_t v27 = v54 + 1;
    if (__OFADD__(v54, 1))
    {
      __break(1u);
      goto LABEL_50;
    }
    if (v27 < v51)
    {
      unint64_t v28 = *(void *)(v50 + 8 * v27);
      if (v28) {
        goto LABEL_12;
      }
      int64_t v29 = v54 + 2;
      ++v54;
      if (v27 + 1 < v51)
      {
        unint64_t v28 = *(void *)(v50 + 8 * v29);
        if (v28) {
          goto LABEL_15;
        }
        int64_t v54 = v27 + 1;
        if (v27 + 2 < v51)
        {
          unint64_t v28 = *(void *)(v50 + 8 * (v27 + 2));
          if (v28)
          {
            v27 += 2;
            goto LABEL_12;
          }
          int64_t v29 = v27 + 3;
          int64_t v54 = v27 + 2;
          if (v27 + 3 < v51) {
            break;
          }
        }
      }
    }
LABEL_26:
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CFD8);
    (*(void (**)(_WORD *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v13, 1, 1, v30);
    unint64_t v20 = 0;
LABEL_27:
    sub_251A4ECF0((uint64_t)v13, (uint64_t)v16, &qword_269B9CFD0);
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CFD8);
    int v32 = (*(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 48))(v16, 1, v31);
    BOOL v33 = v32 == 1;
    if (v32 == 1) {
      return v33;
    }
    uint64_t v34 = (uint64_t)v16 + *(int *)(v31 + 48);
    unsigned __int16 v35 = *v16;
    sub_251B25C90(v34, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ActionEndpoint);
    uint64_t v36 = v53;
    unint64_t v37 = sub_2519FE5CC(v35);
    if ((v38 & 1) == 0) {
      goto LABEL_46;
    }
    sub_251B25B74(*(void *)(v36 + 56) + *(void *)(v55 + 72) * v37, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ActionEndpoint);
    if ((sub_251F34D70() & 1) == 0
      || (sub_251F34D70() & 1) == 0
      || (sub_251B04848(*(void *)&v7[v4[6]], *(void *)&v9[v4[6]]) & 1) == 0)
    {
      goto LABEL_45;
    }
    uint64_t v39 = v4[7];
    uint64_t v40 = *(void *)&v7[v39];
    uint64_t v41 = *(void *)&v7[v39 + 8];
    char v42 = &v9[v39];
    if ((v40 != *(void *)v42 || v41 != *((void *)v42 + 1)) && (sub_251F36B10() & 1) == 0) {
      goto LABEL_45;
    }
    if (v7[v4[8]] != v9[v4[8]]
      || (uint64_t v43 = v4[9], v44 = &v7[v43], v45 = *(void *)&v7[v43], v46 = &v9[v43], v45 != *(void *)v46)
      || *((unsigned __int16 *)v44 + 4) != *((unsigned __int16 *)v46 + 4)
      || (static MatterTileMetadata.== infix(_:_:)(&v7[v4[10]], &v9[v4[10]]) & 1) == 0
      || *(void *)&v7[v4[11]] != *(void *)&v9[v4[11]]
      || (sub_251B05988(*(void *)&v7[v4[12]], *(void *)&v9[v4[12]]) & 1) == 0
      || (sub_251AFCBF0(*(void *)&v7[v4[13]], *(void *)&v9[v4[13]]) & 1) == 0)
    {
LABEL_45:
      sub_251B25BDC((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ActionEndpoint);
LABEL_46:
      sub_251B25BDC((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ActionEndpoint);
      return 0;
    }
    char v47 = sub_251B05B84(*(void *)&v7[v4[14]], *(void *)&v9[v4[14]]);
    sub_251B25BDC((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ActionEndpoint);
    uint64_t result = sub_251B25BDC((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ActionEndpoint);
    a1 = v52;
    if ((v47 & 1) == 0) {
      return v33;
    }
  }
  unint64_t v28 = *(void *)(v50 + 8 * v29);
  if (v28)
  {
LABEL_15:
    int64_t v27 = v29;
LABEL_12:
    unint64_t v20 = (v28 - 1) & v28;
    unint64_t v22 = __clz(__rbit64(v28)) + (v27 << 6);
    int64_t v54 = v27;
    goto LABEL_8;
  }
  while (1)
  {
    int64_t v27 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v27 >= v51)
    {
      int64_t v54 = v49;
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v50 + 8 * v27);
    ++v29;
    if (v28) {
      goto LABEL_12;
    }
  }
LABEL_50:
  __break(1u);
  return result;
}

uint64_t sub_251AFCBF0(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_22;
    }
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v12 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v9) {
        return 1;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v4);
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v9) {
          return 1;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v4);
        if (!v13) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_22:
    char v15 = *(unsigned char *)(*(void *)(v3 + 48) + v11);
    sub_251A1A930(*(void *)(v3 + 56) + (v11 << 8), (uint64_t)v23);
    __src[0] = v15;
    sub_251A1A930((uint64_t)v23, (uint64_t)&__src[8]);
    memcpy(__dst, __src, 0x104uLL);
    nullsub_1(__dst);
    sub_251A4ECF0((uint64_t)__dst, (uint64_t)v27, &qword_269B9D000);
    char v16 = v27[0];
    sub_251A1A930((uint64_t)&v28, (uint64_t)v26);
    sub_251A1A930((uint64_t)v26, (uint64_t)v22);
    unint64_t v17 = sub_2519FE614(v16);
    if ((v18 & 1) == 0)
    {
      sub_251B2EDC8((uint64_t)v23, sub_251A1AA24);
      sub_251B2EDC8((uint64_t)v26, sub_251A4DC54);
      return 0;
    }
    sub_251A1A930(*(void *)(a2 + 56) + (v17 << 8), (uint64_t)v21);
    sub_251A1A930((uint64_t)v21, (uint64_t)v20);
    sub_251B2EDC8((uint64_t)v23, sub_251A1AA24);
    char v19 = _s13HomeDataModel13StaticClusterO2eeoiySbAC_ACtFZ_0((uint64_t)v20, (uint64_t)v22);
    uint64_t result = sub_251B2EDC8((uint64_t)v26, sub_251A4DC54);
    if ((v19 & 1) == 0) {
      return 0;
    }
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v9) {
    return 1;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_21;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_251AFCE78(uint64_t a1, uint64_t a2)
{
  uint64_t v71 = type metadata accessor for StaticMediaSystemComponent();
  uint64_t v77 = *(void *)(v71 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v71);
  uint64_t v6 = (char *)v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v76 = (uint64_t)v58 - v7;
  uint64_t v62 = a1;
  uint64_t v8 = *(void *)(a1 + 64);
  uint64_t v59 = a1 + 64;
  uint64_t v9 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v8;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF08);
  v58[1] = v58;
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  unint64_t v66 = (v14 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v67 = v14;
  char v15 = (char *)v58 - v66;
  int64_t v70 = 0;
  int64_t v60 = (unint64_t)(v9 + 63) >> 6;
  v58[0] = v60 - 1;
  uint64_t v75 = v6;
  int64_t v63 = (char *)v58 - v66;
  for (uint64_t i = a2; ; a2 = i)
  {
    uint64_t result = MEMORY[0x270FA5388](v13);
    unint64_t v17 = (char *)v58 - v66;
    if (v11)
    {
      unint64_t v18 = __clz(__rbit64(v11));
      uint64_t v19 = (v11 - 1) & v11;
      unint64_t v20 = v18 | (v70 << 6);
LABEL_9:
      uint64_t v21 = v62;
      uint64_t v22 = *(void *)(v62 + 48);
      uint64_t v23 = sub_251F34DA0();
      (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v17, v22 + *(void *)(*(void *)(v23 - 8) + 72) * v20, v23);
      uint64_t v24 = *(void *)(v21 + 56) + *(void *)(v77 + 72) * v20;
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF10);
      sub_251B25B74(v24, (uint64_t)&v17[*(int *)(v25 + 48)], (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v17, 0, 1, v25);
      goto LABEL_28;
    }
    int64_t v26 = v70 + 1;
    if (__OFADD__(v70, 1))
    {
      __break(1u);
      goto LABEL_48;
    }
    if (v26 < v60)
    {
      unint64_t v27 = *(void *)(v59 + 8 * v26);
      if (v27) {
        goto LABEL_13;
      }
      int64_t v28 = v70 + 2;
      ++v70;
      if (v26 + 1 < v60)
      {
        unint64_t v27 = *(void *)(v59 + 8 * v28);
        if (v27) {
          goto LABEL_16;
        }
        int64_t v70 = v26 + 1;
        if (v26 + 2 < v60)
        {
          unint64_t v27 = *(void *)(v59 + 8 * (v26 + 2));
          if (v27)
          {
            v26 += 2;
            goto LABEL_13;
          }
          int64_t v28 = v26 + 3;
          int64_t v70 = v26 + 2;
          if (v26 + 3 < v60) {
            break;
          }
        }
      }
    }
LABEL_27:
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF10);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v17, 1, 1, v29);
    uint64_t v19 = 0;
LABEL_28:
    sub_251A4ECF0((uint64_t)v17, (uint64_t)v15, &qword_269B9CF08);
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF10);
    BOOL v31 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 48))(v15, 1, v30) == 1;
    uint64_t result = v31;
    if (v31) {
      return result;
    }
    BOOL v65 = v31;
    unint64_t v73 = v19;
    uint64_t v32 = sub_251F34DA0();
    int v74 = v58;
    BOOL v33 = *(void **)(v32 - 8);
    uint64_t v34 = v33[8];
    MEMORY[0x270FA5388](v32);
    uint64_t v35 = (uint64_t)&v15[*(int *)(v30 + 48)];
    int64_t v68 = (void (*)(char *, char *, uint64_t))v33[4];
    v68((char *)v58 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0), v15, v32);
    uint64_t v36 = v76;
    sub_251B25C90(v35, v76, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent);
    unint64_t v37 = sub_2519FE584((uint64_t)v58 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
    char v39 = v38;
    uint64_t v69 = (void (*)(char *, uint64_t))v33[1];
    v69((char *)v58 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0), v32);
    if ((v39 & 1) == 0) {
      goto LABEL_45;
    }
    uint64_t v40 = (uint64_t)v75;
    sub_251B25B74(*(void *)(a2 + 56) + *(void *)(v77 + 72) * v37, (uint64_t)v75, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent);
    char v41 = sub_251F34D70();
    char v42 = (int *)v71;
    if ((v41 & 1) == 0
      || (static StaticMediaProfile.== infix(_:_:)(v40 + *(int *)(v71 + 20), v36 + *(int *)(v71 + 20)) & 1) == 0
      || *(void *)(v40 + v42[6]) != *(void *)(v36 + v42[6])
      || (sub_251B04848(*(void *)(v40 + v42[7]), *(void *)(v36 + v42[7])) & 1) == 0)
    {
      goto LABEL_44;
    }
    uint64_t v43 = v42[8];
    uint64_t v44 = v40 + v43;
    uint64_t v45 = v36 + v43;
    uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E6B8);
    int v72 = v58;
    uint64_t v47 = MEMORY[0x270FA5388](v46 - 8);
    int64_t v49 = (char *)v58 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v50 = (uint64_t)&v49[*(int *)(v47 + 56)];
    sub_251A1B128(v44, (uint64_t)v49, &qword_26B21FF90);
    sub_251A1B128(v45, v50, &qword_26B21FF90);
    int64_t v51 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v33[6];
    if (v51((uint64_t)v49, 1, v32) == 1)
    {
      if (v51(v50, 1, v32) != 1) {
        goto LABEL_43;
      }
      sub_251A1B064((uint64_t)v49, &qword_26B21FF90);
      uint64_t v40 = (uint64_t)v75;
      uint64_t v36 = v76;
    }
    else
    {
      uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
      int64_t v61 = v58;
      MEMORY[0x270FA5388](v52 - 8);
      int64_t v54 = (char *)v58 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_251A1B128((uint64_t)v49, (uint64_t)v54, &qword_26B21FF90);
      uint64_t v55 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v51)(v50, 1, v32);
      if (v55 == 1)
      {
        v69(v54, v32);
LABEL_43:
        sub_251A1B064((uint64_t)v49, &qword_26B21E6B8);
        uint64_t v40 = (uint64_t)v75;
        uint64_t v36 = v76;
LABEL_44:
        sub_251B25BDC(v40, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent);
LABEL_45:
        sub_251B25BDC(v36, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent);
        return v65;
      }
      MEMORY[0x270FA5388](v55);
      v68((char *)v58 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0), (char *)v50, v32);
      sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
      char v56 = sub_251F35650();
      uint64_t v57 = v69;
      v69((char *)v58 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0), v32);
      v57(v54, v32);
      sub_251A1B064((uint64_t)v49, &qword_26B21FF90);
      uint64_t v40 = (uint64_t)v75;
      uint64_t v36 = v76;
      if ((v56 & 1) == 0) {
        goto LABEL_44;
      }
    }
    sub_251B25BDC(v40, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent);
    uint64_t v13 = sub_251B25BDC(v36, (uint64_t (*)(void))type metadata accessor for StaticMediaSystemComponent);
    unint64_t v11 = v73;
    char v15 = v63;
  }
  unint64_t v27 = *(void *)(v59 + 8 * v28);
  if (v27)
  {
LABEL_16:
    int64_t v26 = v28;
LABEL_13:
    uint64_t v19 = (v27 - 1) & v27;
    unint64_t v20 = __clz(__rbit64(v27)) + (v26 << 6);
    int64_t v70 = v26;
    goto LABEL_9;
  }
  while (1)
  {
    int64_t v26 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v26 >= v60)
    {
      int64_t v70 = v58[0];
      goto LABEL_27;
    }
    unint64_t v27 = *(void *)(v59 + 8 * v26);
    ++v28;
    if (v27) {
      goto LABEL_13;
    }
  }
LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_251AFD758(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticLightProfile();
  uint64_t v61 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v49 - v8;
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v52 = a1;
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v50 = a1 + 64;
  uint64_t v11 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v10;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F010);
  v49[1] = v49;
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  unint64_t v58 = (v16 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v59 = v16;
  char v56 = v9;
  uint64_t v57 = (uint64_t)v49 - v58;
  int64_t v60 = 0;
  int64_t v51 = (unint64_t)(v11 + 63) >> 6;
  v49[0] = v51 - 1;
  int64_t v54 = v7;
  uint64_t v55 = v4;
  while (1)
  {
    uint64_t result = MEMORY[0x270FA5388](v15);
    unint64_t v18 = (char *)v49 - v58;
    if (v13)
    {
      unint64_t v19 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v20 = v19 | (v60 << 6);
LABEL_8:
      uint64_t v21 = v52;
      uint64_t v22 = *(void *)(v52 + 48);
      uint64_t v23 = sub_251F34DA0();
      (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v18, v22 + *(void *)(*(void *)(v23 - 8) + 72) * v20, v23);
      uint64_t v24 = *(void *)(v21 + 56) + *(void *)(v61 + 72) * v20;
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF50);
      sub_251B25B74(v24, (uint64_t)&v18[*(int *)(v25 + 48)], (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v18, 0, 1, v25);
      goto LABEL_27;
    }
    int64_t v26 = v60 + 1;
    if (__OFADD__(v60, 1))
    {
      __break(1u);
      goto LABEL_46;
    }
    if (v26 < v51)
    {
      unint64_t v27 = *(void *)(v50 + 8 * v26);
      if (v27) {
        goto LABEL_12;
      }
      int64_t v28 = v60 + 2;
      ++v60;
      if (v26 + 1 < v51)
      {
        unint64_t v27 = *(void *)(v50 + 8 * v28);
        if (v27) {
          goto LABEL_15;
        }
        int64_t v60 = v26 + 1;
        if (v26 + 2 < v51)
        {
          unint64_t v27 = *(void *)(v50 + 8 * (v26 + 2));
          if (v27)
          {
            v26 += 2;
            goto LABEL_12;
          }
          int64_t v28 = v26 + 3;
          int64_t v60 = v26 + 2;
          if (v26 + 3 < v51) {
            break;
          }
        }
      }
    }
LABEL_26:
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF50);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v18, 1, 1, v29);
    unint64_t v13 = 0;
LABEL_27:
    uint64_t v30 = v57;
    sub_251A4ECF0((uint64_t)v18, v57, &qword_26B21F010);
    uint64_t v31 = v30;
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF50);
    BOOL v33 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 48))(v30, 1, v32) == 1;
    uint64_t result = v33;
    if (v33) {
      return result;
    }
    BOOL v53 = v33;
    uint64_t v34 = sub_251F34DA0();
    uint64_t v35 = *(void *)(v34 - 8);
    MEMORY[0x270FA5388](v34);
    unint64_t v37 = (char *)v49 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v38 = v31 + *(int *)(v32 + 48);
    (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(v37, v31, v34);
    uint64_t v39 = (uint64_t)v56;
    sub_251B25C90(v38, (uint64_t)v56, (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
    unint64_t v40 = sub_2519FE584((uint64_t)v37);
    char v42 = v41;
    (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v34);
    if ((v42 & 1) == 0) {
      goto LABEL_42;
    }
    uint64_t v43 = (uint64_t)v54;
    sub_251B25B74(*(void *)(a2 + 56) + *(void *)(v61 + 72) * v40, (uint64_t)v54, (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
    if ((sub_251F34D70() & 1) == 0
      || *(unsigned __int8 *)(v43 + *(int *)(v55 + 20)) != *(unsigned __int8 *)(v39 + *(int *)(v55 + 20))
      || (uint64_t v44 = *(int *)(v55 + 24), v45 = v39 + v44, *(unsigned __int8 *)(v43 + v44) != *(unsigned __int8 *)(v39 + v44)))
    {
LABEL_41:
      sub_251B25BDC(v43, (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
LABEL_42:
      sub_251B25BDC(v39, (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
      return v53;
    }
    int v46 = *(unsigned __int8 *)(v43 + v44 + 1);
    int v47 = *(unsigned __int8 *)(v45 + 1);
    if (v46 == 2)
    {
      if (v47 != 2) {
        goto LABEL_41;
      }
    }
    else if (v47 == 2 || ((v47 & 1) == 0) == (v46 & 1))
    {
      goto LABEL_41;
    }
    char v48 = sub_251F34D70();
    sub_251B25BDC(v43, (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
    uint64_t v15 = sub_251B25BDC(v39, (uint64_t (*)(void))type metadata accessor for StaticLightProfile);
    if ((v48 & 1) == 0) {
      return v53;
    }
  }
  unint64_t v27 = *(void *)(v50 + 8 * v28);
  if (v27)
  {
LABEL_15:
    int64_t v26 = v28;
LABEL_12:
    unint64_t v13 = (v27 - 1) & v27;
    unint64_t v20 = __clz(__rbit64(v27)) + (v26 << 6);
    int64_t v60 = v26;
    goto LABEL_8;
  }
  while (1)
  {
    int64_t v26 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v26 >= v51)
    {
      int64_t v60 = v49[0];
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v50 + 8 * v26);
    ++v28;
    if (v27) {
      goto LABEL_12;
    }
  }
LABEL_46:
  __break(1u);
  return result;
}

uint64_t sub_251AFDDE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticTelevisionProfile();
  uint64_t v70 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v57 - v8;
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v59 = a1 + 64;
  uint64_t v11 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v10;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F020);
  int64_t v60 = &v57;
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  unint64_t v66 = (v16 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v67 = v16;
  unint64_t v64 = v9;
  uint64_t v65 = (uint64_t)&v57 - v66;
  int64_t v68 = 0;
  int64_t v61 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v62 = v7;
  int64_t v58 = v61 - 1;
  uint64_t v63 = v4;
  while (1)
  {
    uint64_t result = MEMORY[0x270FA5388](v15);
    unint64_t v18 = (char *)&v57 - v66;
    if (v13)
    {
      unint64_t v19 = __clz(__rbit64(v13));
      uint64_t v20 = (v13 - 1) & v13;
      unint64_t v21 = v19 | (v68 << 6);
LABEL_8:
      uint64_t v22 = *(void *)(a1 + 48);
      uint64_t v23 = sub_251F34DA0();
      (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v18, v22 + *(void *)(*(void *)(v23 - 8) + 72) * v21, v23);
      uint64_t v24 = *(void *)(a1 + 56) + *(void *)(v70 + 72) * v21;
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF48);
      sub_251B25B74(v24, (uint64_t)&v18[*(int *)(v25 + 48)], (uint64_t (*)(void))type metadata accessor for StaticTelevisionProfile);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v18, 0, 1, v25);
      goto LABEL_27;
    }
    int64_t v26 = v68 + 1;
    if (__OFADD__(v68, 1))
    {
      __break(1u);
      goto LABEL_48;
    }
    if (v26 < v61)
    {
      unint64_t v27 = *(void *)(v59 + 8 * v26);
      if (v27) {
        goto LABEL_12;
      }
      int64_t v28 = v68 + 2;
      ++v68;
      if (v26 + 1 < v61)
      {
        unint64_t v27 = *(void *)(v59 + 8 * v28);
        if (v27) {
          goto LABEL_15;
        }
        int64_t v68 = v26 + 1;
        if (v26 + 2 < v61)
        {
          unint64_t v27 = *(void *)(v59 + 8 * (v26 + 2));
          if (v27)
          {
            v26 += 2;
            goto LABEL_12;
          }
          int64_t v28 = v26 + 3;
          int64_t v68 = v26 + 2;
          if (v26 + 3 < v61) {
            break;
          }
        }
      }
    }
LABEL_26:
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF48);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v18, 1, 1, v29);
    uint64_t v20 = 0;
LABEL_27:
    uint64_t v30 = v65;
    sub_251A4ECF0((uint64_t)v18, v65, &qword_26B21F020);
    uint64_t v31 = v30;
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9CF48);
    int v33 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 48))(v30, 1, v32);
    BOOL v34 = v33 == 1;
    if (v33 == 1) {
      return v34;
    }
    unint64_t v69 = v20;
    uint64_t v35 = a1;
    uint64_t v36 = sub_251F34DA0();
    uint64_t v37 = *(void *)(v36 - 8);
    MEMORY[0x270FA5388](v36);
    uint64_t v39 = (char *)&v57 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v40 = v31 + *(int *)(v32 + 48);
    (*(void (**)(char *, uint64_t, uint64_t))(v37 + 32))(v39, v31, v36);
    uint64_t v41 = (uint64_t)v64;
    sub_251B25C90(v40, (uint64_t)v64, (uint64_t (*)(void))type metadata accessor for StaticTelevisionProfile);
    unint64_t v42 = sub_2519FE584((uint64_t)v39);
    char v44 = v43;
    (*(void (**)(char *, uint64_t))(v37 + 8))(v39, v36);
    if ((v44 & 1) == 0) {
      goto LABEL_42;
    }
    uint64_t v45 = (uint64_t)v62;
    sub_251B25B74(*(void *)(a2 + 56) + *(void *)(v70 + 72) * v42, (uint64_t)v62, (uint64_t (*)(void))type metadata accessor for StaticTelevisionProfile);
    if ((sub_251F34D70() & 1) == 0
      || (uint64_t v46 = *(int *)(v63 + 20),
          int v47 = *(void **)(v45 + v46),
          char v48 = *(void **)(v41 + v46),
          uint64_t v49 = v47[2],
          v49 != v48[2]))
    {
LABEL_41:
      sub_251B25BDC(v45, (uint64_t (*)(void))type metadata accessor for StaticTelevisionProfile);
LABEL_42:
      sub_251B25BDC(v41, (uint64_t (*)(void))type metadata accessor for StaticTelevisionProfile);
      return v34;
    }
    if (v49 && v47 != v48)
    {
      if (v47[4] != v48[4]) {
        goto LABEL_41;
      }
      if (v49 != 1)
      {
        if (v47[5] != v48[5]) {
          goto LABEL_41;
        }
        int64_t v51 = v47 + 6;
        uint64_t v52 = v48 + 6;
        uint64_t v53 = v49 - 2;
        while (v53)
        {
          uint64_t v55 = *v51++;
          uint64_t v54 = v55;
          uint64_t v56 = *v52++;
          --v53;
          if (v54 != v56) {
            goto LABEL_41;
          }
        }
      }
    }
    char v50 = sub_251F34D70();
    sub_251B25BDC(v45, (uint64_t (*)(void))type metadata accessor for StaticTelevisionProfile);
    uint64_t v15 = sub_251B25BDC(v41, (uint64_t (*)(void))type metadata accessor for StaticTelevisionProfile);
    if ((v50 & 1) == 0) {
      return v34;
    }
    a1 = v35;
    unint64_t v13 = v69;
  }
  unint64_t v27 = *(void *)(v59 + 8 * v28);
  if (v27)
  {
LABEL_15:
    int64_t v26 = v28;
LABEL_12:
    uint64_t v20 = (v27 - 1) & v27;
    unint64_t v21 = __clz(__rbit64(v27)) + (v26 << 6);
    int64_t v68 = v26;
    goto LABEL_8;
  }
  while (1)
  {
    int64_t v26 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v26 >= v61)
    {
      int64_t v68 = v58;
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v59 + 8 * v26);
    ++v28;
    if (v27) {
      goto LABEL_12;
    }
  }
LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_251AFE48C(uint64_t a1, uint64_t a2)
{
  uint64_t v77 = type metadata accessor for StaticZone();
  uint64_t v4 = *(void *)(v77 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v77);
  uint64_t v79 = (uint64_t)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v62 - v7;
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v64 = a1 + 64;
  uint64_t v10 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v76 = v11 & v9;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC28);
  uint64_t v65 = &v62;
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  unint64_t v72 = (v14 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v73 = v14;
  uint64_t v15 = (char *)&v62 - v72;
  int64_t v74 = 0;
  int64_t v66 = (unint64_t)(v10 + 63) >> 6;
  int64_t v63 = v66 - 1;
  uint64_t v69 = a1;
  uint64_t v70 = a2;
  uint64_t v68 = v4;
  uint64_t v78 = v8;
  for (i = (char *)&v62 - v72; ; uint64_t v15 = i)
  {
    uint64_t result = MEMORY[0x270FA5388](v13);
    unint64_t v17 = (char *)&v62 - v72;
    if (v76)
    {
      unint64_t v18 = __clz(__rbit64(v76));
      v76 &= v76 - 1;
      unint64_t v19 = v18 | (v74 << 6);
LABEL_9:
      uint64_t v20 = *(void *)(a1 + 48);
      uint64_t v21 = sub_251F34DA0();
      (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(v17, v20 + *(void *)(*(void *)(v21 - 8) + 72) * v19, v21);
      uint64_t v22 = *(void *)(a1 + 56) + *(void *)(v4 + 72) * v19;
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D088);
      sub_251B25B74(v22, (uint64_t)&v17[*(int *)(v23 + 48)], (uint64_t (*)(void))type metadata accessor for StaticZone);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v17, 0, 1, v23);
      goto LABEL_28;
    }
    int64_t v24 = v74 + 1;
    if (__OFADD__(v74, 1)) {
      goto LABEL_48;
    }
    if (v24 < v66)
    {
      unint64_t v25 = *(void *)(v64 + 8 * v24);
      if (v25) {
        goto LABEL_13;
      }
      int64_t v26 = v74 + 2;
      ++v74;
      if (v24 + 1 < v66)
      {
        unint64_t v25 = *(void *)(v64 + 8 * v26);
        if (v25) {
          goto LABEL_16;
        }
        int64_t v74 = v24 + 1;
        if (v24 + 2 < v66)
        {
          unint64_t v25 = *(void *)(v64 + 8 * (v24 + 2));
          if (v25)
          {
            v24 += 2;
LABEL_13:
            unint64_t v76 = (v25 - 1) & v25;
            unint64_t v19 = __clz(__rbit64(v25)) + (v24 << 6);
            int64_t v74 = v24;
            goto LABEL_9;
          }
          int64_t v26 = v24 + 3;
          int64_t v74 = v24 + 2;
          if (v24 + 3 < v66)
          {
            unint64_t v25 = *(void *)(v64 + 8 * v26);
            if (!v25)
            {
              while (1)
              {
                int64_t v24 = v26 + 1;
                if (__OFADD__(v26, 1)) {
                  goto LABEL_49;
                }
                if (v24 >= v66)
                {
                  int64_t v74 = v63;
                  goto LABEL_27;
                }
                unint64_t v25 = *(void *)(v64 + 8 * v24);
                ++v26;
                if (v25) {
                  goto LABEL_13;
                }
              }
            }
LABEL_16:
            int64_t v24 = v26;
            goto LABEL_13;
          }
        }
      }
    }
LABEL_27:
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D088);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v17, 1, 1, v27);
    unint64_t v76 = 0;
LABEL_28:
    sub_251A4ECF0((uint64_t)v17, (uint64_t)v15, &qword_26B21EC28);
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D088);
    BOOL v29 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 48))(v15, 1, v28) == 1;
    uint64_t result = v29;
    if (v29) {
      return result;
    }
    BOOL v71 = v29;
    uint64_t v30 = sub_251F34DA0();
    uint64_t v75 = &v62;
    uint64_t v31 = *(void *)(v30 - 8);
    MEMORY[0x270FA5388](v30);
    uint64_t v84 = v32;
    int v33 = (char *)&v62 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v34 = (uint64_t)&v15[*(int *)(v28 + 48)];
    (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v33, v15, v30);
    sub_251B25C90(v34, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticZone);
    unint64_t v35 = sub_2519FE584((uint64_t)v33);
    char v37 = v36;
    uint64_t v88 = v31;
    unint64_t v82 = *(void (**)(char *, uint64_t))(v31 + 8);
    uint64_t v83 = v31 + 8;
    v82(v33, v30);
    if ((v37 & 1) == 0) {
      goto LABEL_45;
    }
    uint64_t v81 = v30;
    sub_251B25B74(*(void *)(a2 + 56) + *(void *)(v4 + 72) * v35, v79, (uint64_t (*)(void))type metadata accessor for StaticZone);
    if ((sub_251F34D70() & 1) == 0) {
      goto LABEL_44;
    }
    uint64_t v38 = *(int *)(v77 + 20);
    uint64_t v39 = (void *)(v79 + v38);
    uint64_t v40 = *(void *)(v79 + v38);
    uint64_t v41 = *(void *)(v79 + v38 + 8);
    unint64_t v42 = &v78[v38];
    if (*v39 != *(void *)v42 || v41 != *((void *)v42 + 1))
    {
      uint64_t v40 = sub_251F36B10();
      if ((v40 & 1) == 0) {
        goto LABEL_44;
      }
    }
    uint64_t v43 = *(int *)(v77 + 24);
    uint64_t v44 = *(void *)(v79 + v43);
    uint64_t v85 = *(void *)&v78[v43];
    uint64_t v86 = v44;
    uint64_t v45 = *(void *)(v85 + 16);
    uint64_t v87 = *(void *)(v44 + 16);
    if (v87 != v45)
    {
LABEL_44:
      sub_251B25BDC(v79, (uint64_t (*)(void))type metadata accessor for StaticZone);
      uint64_t v8 = v78;
LABEL_45:
      sub_251B25BDC((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for StaticZone);
      return v71;
    }
    if (v87 && v86 != v85) {
      break;
    }
LABEL_6:
    sub_251B25BDC(v79, (uint64_t (*)(void))type metadata accessor for StaticZone);
    uint64_t v8 = v78;
    uint64_t v13 = sub_251B25BDC((uint64_t)v78, (uint64_t (*)(void))type metadata accessor for StaticZone);
    a1 = v69;
    a2 = v70;
    uint64_t v4 = v68;
  }
  unint64_t v46 = 0;
  unint64_t v47 = (*(unsigned __int8 *)(v88 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80);
  char v48 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v88 + 16);
  v88 += 16;
  uint64_t v80 = *(void *)(v88 + 56);
  while (1)
  {
    uint64_t v49 = v84;
    MEMORY[0x270FA5388](v40);
    unint64_t v50 = (v49 + 15) & 0xFFFFFFFFFFFFFFF0;
    int64_t v51 = (char *)&v62 - v50;
    uint64_t v52 = v81;
    uint64_t v53 = v48((char *)&v62 - v50, v86 + v47, v81);
    uint64_t result = MEMORY[0x270FA5388](v53);
    uint64_t v54 = (char *)&v62 - v50;
    if (v46 >= *(void *)(v85 + 16)) {
      break;
    }
    uint64_t v55 = (char *)&v62 - v50;
    uint64_t v56 = v52;
    uint64_t v57 = v52;
    int64_t v58 = v48;
    v48(v55, v85 + v47, v56);
    sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
    char v59 = sub_251F35650();
    int64_t v60 = v54;
    int64_t v61 = (uint64_t (*)(char *, uint64_t))v82;
    v82(v60, v57);
    uint64_t v40 = v61(v51, v57);
    if ((v59 & 1) == 0) {
      goto LABEL_44;
    }
    ++v46;
    v47 += v80;
    char v48 = v58;
    if (v87 == v46) {
      goto LABEL_6;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
  return result;
}

uint64_t sub_251AFECF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (int *)type metadata accessor for StaticActionSet();
  uint64_t v89 = *((void *)v4 - 1);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v77 - v8;
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v84 = a1;
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v79 = a1 + 64;
  uint64_t v11 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v10;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E678);
  uint64_t v80 = &v77;
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  uint64_t v85 = (uint64_t)&v77 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v86 = 0;
  int64_t v81 = (unint64_t)(v11 + 63) >> 6;
  int64_t v78 = v81 - 1;
  uint64_t v83 = v16;
  unint64_t v82 = (v16 + 15) & 0xFFFFFFFFFFFFFFF0;
  while (1)
  {
    uint64_t result = MEMORY[0x270FA5388](v15);
    unint64_t v19 = (char *)&v77 - v18;
    if (v13)
    {
      uint64_t v87 = (v13 - 1) & v13;
      unint64_t v20 = __clz(__rbit64(v13)) | (v86 << 6);
LABEL_8:
      uint64_t v21 = v84;
      uint64_t v22 = *(void *)(v84 + 48);
      uint64_t v23 = sub_251F34DA0();
      (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v19, v22 + *(void *)(*(void *)(v23 - 8) + 72) * v20, v23);
      uint64_t v24 = *(void *)(v21 + 56) + *(void *)(v89 + 72) * v20;
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E670);
      sub_251B25B74(v24, (uint64_t)&v19[*(int *)(v25 + 48)], (uint64_t (*)(void))type metadata accessor for StaticActionSet);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v19, 0, 1, v25);
      goto LABEL_27;
    }
    int64_t v26 = v86 + 1;
    if (__OFADD__(v86, 1))
    {
      __break(1u);
      goto LABEL_53;
    }
    if (v26 < v81)
    {
      unint64_t v27 = *(void *)(v79 + 8 * v26);
      if (v27) {
        goto LABEL_12;
      }
      int64_t v28 = v86 + 2;
      ++v86;
      if (v26 + 1 < v81)
      {
        unint64_t v27 = *(void *)(v79 + 8 * v28);
        if (v27) {
          goto LABEL_15;
        }
        int64_t v86 = v26 + 1;
        if (v26 + 2 < v81)
        {
          unint64_t v27 = *(void *)(v79 + 8 * (v26 + 2));
          if (v27)
          {
            v26 += 2;
            goto LABEL_12;
          }
          int64_t v28 = v26 + 3;
          int64_t v86 = v26 + 2;
          if (v26 + 3 < v81) {
            break;
          }
        }
      }
    }
LABEL_26:
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E670);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v19, 1, 1, v29);
    uint64_t v87 = 0;
LABEL_27:
    uint64_t v30 = v85;
    sub_251A4ECF0((uint64_t)v19, v85, &qword_26B21E678);
    uint64_t v31 = v30;
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E670);
    int v33 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 48))(v30, 1, v32);
    BOOL v34 = v33 == 1;
    if (v33 == 1) {
      return v34;
    }
    uint64_t v35 = sub_251F34DA0();
    uint64_t v88 = &v77;
    uint64_t v36 = *(void *)(v35 - 8);
    MEMORY[0x270FA5388](v35);
    uint64_t v38 = (char *)&v77 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v39 = v31 + *(int *)(v32 + 48);
    (*(void (**)(char *, uint64_t, uint64_t))(v36 + 32))(v38, v31, v35);
    sub_251B25C90(v39, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
    unint64_t v40 = sub_2519FE584((uint64_t)v38);
    char v42 = v41;
    (*(void (**)(char *, uint64_t))(v36 + 8))(v38, v35);
    if ((v42 & 1) == 0) {
      goto LABEL_50;
    }
    sub_251B25B74(*(void *)(a2 + 56) + *(void *)(v89 + 72) * v40, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
    if ((sub_251F34D70() & 1) == 0
      || ((uint64_t v43 = v4[5], v44 = *(void *)&v7[v43], v45 = *(void *)&v7[v43 + 8], v46 = &v9[v43], v44 != *(void *)v46)
       || v45 != *((void *)v46 + 1))
      && (sub_251F36B10() & 1) == 0)
    {
LABEL_49:
      sub_251B25BDC((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
LABEL_50:
      sub_251B25BDC((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
      return v34;
    }
    uint64_t v47 = v4[6];
    int v48 = v7[v47];
    int v49 = v9[v47];
    if (v48 == 7)
    {
      if (v49 != 7) {
        goto LABEL_49;
      }
    }
    else if (v49 == 7 || (sub_251DB3434(v48, v49) & 1) == 0)
    {
      goto LABEL_49;
    }
    if ((sub_251F34D70() & 1) == 0) {
      goto LABEL_49;
    }
    unint64_t v50 = &v7[v4[8]];
    uint64_t v51 = *(void *)v50;
    uint64_t v52 = *((void *)v50 + 1);
    char v53 = v50[16];
    uint64_t v54 = *((void *)v50 + 3);
    uint64_t v55 = *((void *)v50 + 4);
    char v56 = v50[40];
    uint64_t v57 = *((void *)v50 + 6);
    uint64_t v58 = *((void *)v50 + 7);
    char v59 = v50[64];
    uint64_t v60 = *((void *)v50 + 9);
    uint64_t v61 = *((void *)v50 + 10);
    LOBYTE(v50) = v50[88];
    v101[0] = v51;
    v101[1] = v52;
    char v102 = v53;
    uint64_t v103 = v54;
    uint64_t v104 = v55;
    char v105 = v56;
    uint64_t v106 = v57;
    uint64_t v107 = v58;
    char v108 = v59;
    uint64_t v109 = v60;
    uint64_t v110 = v61;
    char v111 = (char)v50;
    uint64_t v62 = &v9[v4[8]];
    uint64_t v63 = *(void *)v62;
    uint64_t v64 = *((void *)v62 + 1);
    char v65 = v62[16];
    uint64_t v66 = *((void *)v62 + 3);
    uint64_t v67 = *((void *)v62 + 4);
    char v68 = v62[40];
    uint64_t v69 = *((void *)v62 + 6);
    uint64_t v70 = *((void *)v62 + 7);
    char v71 = v62[64];
    uint64_t v72 = *((void *)v62 + 9);
    uint64_t v73 = *((void *)v62 + 10);
    LOBYTE(v62) = v62[88];
    v90[0] = v63;
    v90[1] = v64;
    char v91 = v65;
    uint64_t v92 = v66;
    uint64_t v93 = v67;
    char v94 = v68;
    uint64_t v95 = v69;
    uint64_t v96 = v70;
    char v97 = v71;
    uint64_t v98 = v72;
    uint64_t v99 = v73;
    char v100 = (char)v62;
    if (!_s13HomeDataModel4IconV2eeoiySbAC_ACtFZ_0((uint64_t)v101, (uint64_t)v90)
      || (sub_251F352E0() & 1) == 0
      || (sub_251B04848(*(void *)&v7[v4[10]], *(void *)&v9[v4[10]]) & 1) == 0
      || v7[v4[11]] != v9[v4[11]]
      || (sub_251B0657C(*(void *)&v7[v4[12]], *(void *)&v9[v4[12]]) & 1) == 0
      || v7[v4[13]] != v9[v4[13]])
    {
      goto LABEL_49;
    }
    uint64_t v74 = v4[14];
    int v75 = v7[v74];
    int v76 = v9[v74];
    sub_251B25BDC((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
    uint64_t v15 = sub_251B25BDC((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticActionSet);
    if (v75 != v76) {
      return v34;
    }
    unint64_t v13 = v87;
  }
  unint64_t v27 = *(void *)(v79 + 8 * v28);
  if (v27)
  {
LABEL_15:
    int64_t v26 = v28;
LABEL_12:
    uint64_t v87 = (v27 - 1) & v27;
    unint64_t v20 = __clz(__rbit64(v27)) + (v26 << 6);
    int64_t v86 = v26;
    goto LABEL_8;
  }
  while (1)
  {
    int64_t v26 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v26 >= v81)
    {
      int64_t v86 = v78;
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v79 + 8 * v26);
    ++v28;
    if (v27) {
      goto LABEL_12;
    }
  }
LABEL_53:
  __break(1u);
  return result;
}

uint64_t sub_251AFF55C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticCameraProfile();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v55 = (uint64_t)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v46 - v8;
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v51 = a1;
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v49 = a1 + 64;
  uint64_t v11 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v10;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E340);
  int v48 = &v46;
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  unint64_t v53 = (v16 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v54 = v16;
  uint64_t v52 = (uint64_t)&v46 - v53;
  int64_t v56 = 0;
  int64_t v50 = (unint64_t)(v11 + 63) >> 6;
  int64_t v47 = v50 - 1;
  while (1)
  {
    uint64_t result = MEMORY[0x270FA5388](v15);
    uint64_t v18 = (char *)&v46 - v53;
    if (v13)
    {
      uint64_t v57 = (v13 - 1) & v13;
      unint64_t v19 = __clz(__rbit64(v13)) | (v56 << 6);
LABEL_8:
      uint64_t v20 = v51;
      uint64_t v21 = *(void *)(v51 + 48);
      uint64_t v22 = sub_251F34DA0();
      (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v18, v21 + *(void *)(*(void *)(v22 - 8) + 72) * v19, v22);
      uint64_t v23 = *(void *)(v20 + 56) + *(void *)(v5 + 72) * v19;
      uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC30);
      sub_251B25B74(v23, (uint64_t)&v18[*(int *)(v24 + 48)], (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v18, 0, 1, v24);
      goto LABEL_27;
    }
    int64_t v25 = v56 + 1;
    if (__OFADD__(v56, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v25 < v50)
    {
      unint64_t v26 = *(void *)(v49 + 8 * v25);
      if (v26) {
        goto LABEL_12;
      }
      int64_t v27 = v56 + 2;
      ++v56;
      if (v25 + 1 < v50)
      {
        unint64_t v26 = *(void *)(v49 + 8 * v27);
        if (v26) {
          goto LABEL_15;
        }
        int64_t v56 = v25 + 1;
        if (v25 + 2 < v50)
        {
          unint64_t v26 = *(void *)(v49 + 8 * (v25 + 2));
          if (v26)
          {
            v25 += 2;
            goto LABEL_12;
          }
          int64_t v27 = v25 + 3;
          int64_t v56 = v25 + 2;
          if (v25 + 3 < v50) {
            break;
          }
        }
      }
    }
LABEL_26:
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC30);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v18, 1, 1, v28);
    uint64_t v57 = 0;
LABEL_27:
    uint64_t v29 = v52;
    sub_251A4ECF0((uint64_t)v18, v52, &qword_26B21E340);
    uint64_t v30 = v29;
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21EC30);
    int v32 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 48))(v29, 1, v31);
    BOOL v33 = v32 == 1;
    if (v32 == 1) {
      return v33;
    }
    uint64_t v34 = (uint64_t)v9;
    uint64_t v35 = v5;
    uint64_t v36 = sub_251F34DA0();
    uint64_t v37 = *(void *)(v36 - 8);
    MEMORY[0x270FA5388](v36);
    uint64_t v39 = (char *)&v46 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v40 = v30 + *(int *)(v31 + 48);
    (*(void (**)(char *, uint64_t, uint64_t))(v37 + 32))(v39, v30, v36);
    sub_251B25C90(v40, v34, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
    unint64_t v41 = sub_2519FE584((uint64_t)v39);
    char v43 = v42;
    (*(void (**)(char *, uint64_t))(v37 + 8))(v39, v36);
    if ((v43 & 1) == 0)
    {
      sub_251B25BDC(v34, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
      return v33;
    }
    uint64_t v5 = v35;
    uint64_t v44 = v55;
    sub_251B25B74(*(void *)(a2 + 56) + *(void *)(v35 + 72) * v41, v55, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
    char v45 = static StaticCameraProfile.== infix(_:_:)(v44, v34);
    sub_251B25BDC(v44, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
    uint64_t v15 = sub_251B25BDC(v34, (uint64_t (*)(void))type metadata accessor for StaticCameraProfile);
    if ((v45 & 1) == 0) {
      return v33;
    }
    uint64_t v9 = (char *)v34;
    unint64_t v13 = v57;
  }
  unint64_t v26 = *(void *)(v49 + 8 * v27);
  if (v26)
  {
LABEL_15:
    int64_t v25 = v27;
LABEL_12:
    int64_t v56 = v25;
    uint64_t v57 = (v26 - 1) & v26;
    unint64_t v19 = __clz(__rbit64(v26)) + (v25 << 6);
    goto LABEL_8;
  }
  while (1)
  {
    int64_t v25 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v25 >= v50)
    {
      int64_t v56 = v47;
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v49 + 8 * v25);
    ++v27;
    if (v26) {
      goto LABEL_12;
    }
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_251AFFB5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticMediaSystem();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v55 = (uint64_t)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v46 - v8;
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v51 = a1;
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v49 = a1 + 64;
  uint64_t v11 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v10;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E688);
  int v48 = &v46;
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  unint64_t v53 = (v16 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v54 = v16;
  uint64_t v52 = (uint64_t)&v46 - v53;
  int64_t v56 = 0;
  int64_t v50 = (unint64_t)(v11 + 63) >> 6;
  int64_t v47 = v50 - 1;
  while (1)
  {
    uint64_t result = MEMORY[0x270FA5388](v15);
    uint64_t v18 = (char *)&v46 - v53;
    if (v13)
    {
      uint64_t v57 = (v13 - 1) & v13;
      unint64_t v19 = __clz(__rbit64(v13)) | (v56 << 6);
LABEL_8:
      uint64_t v20 = v51;
      uint64_t v21 = *(void *)(v51 + 48);
      uint64_t v22 = sub_251F34DA0();
      (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v18, v21 + *(void *)(*(void *)(v22 - 8) + 72) * v19, v22);
      uint64_t v23 = *(void *)(v20 + 56) + *(void *)(v5 + 72) * v19;
      uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D080);
      sub_251B25B74(v23, (uint64_t)&v18[*(int *)(v24 + 48)], (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v18, 0, 1, v24);
      goto LABEL_27;
    }
    int64_t v25 = v56 + 1;
    if (__OFADD__(v56, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v25 < v50)
    {
      unint64_t v26 = *(void *)(v49 + 8 * v25);
      if (v26) {
        goto LABEL_12;
      }
      int64_t v27 = v56 + 2;
      ++v56;
      if (v25 + 1 < v50)
      {
        unint64_t v26 = *(void *)(v49 + 8 * v27);
        if (v26) {
          goto LABEL_15;
        }
        int64_t v56 = v25 + 1;
        if (v25 + 2 < v50)
        {
          unint64_t v26 = *(void *)(v49 + 8 * (v25 + 2));
          if (v26)
          {
            v25 += 2;
            goto LABEL_12;
          }
          int64_t v27 = v25 + 3;
          int64_t v56 = v25 + 2;
          if (v25 + 3 < v50) {
            break;
          }
        }
      }
    }
LABEL_26:
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D080);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v18, 1, 1, v28);
    uint64_t v57 = 0;
LABEL_27:
    uint64_t v29 = v52;
    sub_251A4ECF0((uint64_t)v18, v52, &qword_26B21E688);
    uint64_t v30 = v29;
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D080);
    int v32 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 48))(v29, 1, v31);
    BOOL v33 = v32 == 1;
    if (v32 == 1) {
      return v33;
    }
    uint64_t v34 = (uint64_t)v9;
    uint64_t v35 = v5;
    uint64_t v36 = sub_251F34DA0();
    uint64_t v37 = *(void *)(v36 - 8);
    MEMORY[0x270FA5388](v36);
    uint64_t v39 = (char *)&v46 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v40 = v30 + *(int *)(v31 + 48);
    (*(void (**)(char *, uint64_t, uint64_t))(v37 + 32))(v39, v30, v36);
    sub_251B25C90(v40, v34, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
    unint64_t v41 = sub_2519FE584((uint64_t)v39);
    char v43 = v42;
    (*(void (**)(char *, uint64_t))(v37 + 8))(v39, v36);
    if ((v43 & 1) == 0)
    {
      sub_251B25BDC(v34, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
      return v33;
    }
    uint64_t v5 = v35;
    uint64_t v44 = v55;
    sub_251B25B74(*(void *)(a2 + 56) + *(void *)(v35 + 72) * v41, v55, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
    char v45 = static StaticMediaSystem.== infix(_:_:)(v44, v34);
    sub_251B25BDC(v44, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
    uint64_t v15 = sub_251B25BDC(v34, (uint64_t (*)(void))type metadata accessor for StaticMediaSystem);
    if ((v45 & 1) == 0) {
      return v33;
    }
    uint64_t v9 = (char *)v34;
    unint64_t v13 = v57;
  }
  unint64_t v26 = *(void *)(v49 + 8 * v27);
  if (v26)
  {
LABEL_15:
    int64_t v25 = v27;
LABEL_12:
    int64_t v56 = v25;
    uint64_t v57 = (v26 - 1) & v26;
    unint64_t v19 = __clz(__rbit64(v26)) + (v25 << 6);
    goto LABEL_8;
  }
  while (1)
  {
    int64_t v25 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v25 >= v50)
    {
      int64_t v56 = v47;
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v49 + 8 * v25);
    ++v27;
    if (v26) {
      goto LABEL_12;
    }
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_251B0015C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticMediaProfile();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v55 = (uint64_t)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v46 - v8;
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v51 = a1;
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v49 = a1 + 64;
  uint64_t v11 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v10;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E690);
  int v48 = &v46;
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  unint64_t v53 = (v16 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v54 = v16;
  uint64_t v52 = (uint64_t)&v46 - v53;
  int64_t v56 = 0;
  int64_t v50 = (unint64_t)(v11 + 63) >> 6;
  int64_t v47 = v50 - 1;
  while (1)
  {
    uint64_t result = MEMORY[0x270FA5388](v15);
    uint64_t v18 = (char *)&v46 - v53;
    if (v13)
    {
      uint64_t v57 = (v13 - 1) & v13;
      unint64_t v19 = __clz(__rbit64(v13)) | (v56 << 6);
LABEL_8:
      uint64_t v20 = v51;
      uint64_t v21 = *(void *)(v51 + 48);
      uint64_t v22 = sub_251F34DA0();
      (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v18, v21 + *(void *)(*(void *)(v22 - 8) + 72) * v19, v22);
      uint64_t v23 = *(void *)(v20 + 56) + *(void *)(v5 + 72) * v19;
      uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F018);
      sub_251B25B74(v23, (uint64_t)&v18[*(int *)(v24 + 48)], (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v18, 0, 1, v24);
      goto LABEL_27;
    }
    int64_t v25 = v56 + 1;
    if (__OFADD__(v56, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v25 < v50)
    {
      unint64_t v26 = *(void *)(v49 + 8 * v25);
      if (v26) {
        goto LABEL_12;
      }
      int64_t v27 = v56 + 2;
      ++v56;
      if (v25 + 1 < v50)
      {
        unint64_t v26 = *(void *)(v49 + 8 * v27);
        if (v26) {
          goto LABEL_15;
        }
        int64_t v56 = v25 + 1;
        if (v25 + 2 < v50)
        {
          unint64_t v26 = *(void *)(v49 + 8 * (v25 + 2));
          if (v26)
          {
            v25 += 2;
            goto LABEL_12;
          }
          int64_t v27 = v25 + 3;
          int64_t v56 = v25 + 2;
          if (v25 + 3 < v50) {
            break;
          }
        }
      }
    }
LABEL_26:
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F018);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v18, 1, 1, v28);
    uint64_t v57 = 0;
LABEL_27:
    uint64_t v29 = v52;
    sub_251A4ECF0((uint64_t)v18, v52, &qword_26B21E690);
    uint64_t v30 = v29;
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F018);
    int v32 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 48))(v29, 1, v31);
    BOOL v33 = v32 == 1;
    if (v32 == 1) {
      return v33;
    }
    uint64_t v34 = (uint64_t)v9;
    uint64_t v35 = v5;
    uint64_t v36 = sub_251F34DA0();
    uint64_t v37 = *(void *)(v36 - 8);
    MEMORY[0x270FA5388](v36);
    uint64_t v39 = (char *)&v46 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v40 = v30 + *(int *)(v31 + 48);
    (*(void (**)(char *, uint64_t, uint64_t))(v37 + 32))(v39, v30, v36);
    sub_251B25C90(v40, v34, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
    unint64_t v41 = sub_2519FE584((uint64_t)v39);
    char v43 = v42;
    (*(void (**)(char *, uint64_t))(v37 + 8))(v39, v36);
    if ((v43 & 1) == 0)
    {
      sub_251B25BDC(v34, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
      return v33;
    }
    uint64_t v5 = v35;
    uint64_t v44 = v55;
    sub_251B25B74(*(void *)(a2 + 56) + *(void *)(v35 + 72) * v41, v55, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
    char v45 = static StaticMediaProfile.== infix(_:_:)(v44, v34);
    sub_251B25BDC(v44, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
    uint64_t v15 = sub_251B25BDC(v34, (uint64_t (*)(void))type metadata accessor for StaticMediaProfile);
    if ((v45 & 1) == 0) {
      return v33;
    }
    uint64_t v9 = (char *)v34;
    unint64_t v13 = v57;
  }
  unint64_t v26 = *(void *)(v49 + 8 * v27);
  if (v26)
  {
LABEL_15:
    int64_t v25 = v27;
LABEL_12:
    int64_t v56 = v25;
    uint64_t v57 = (v26 - 1) & v26;
    unint64_t v19 = __clz(__rbit64(v26)) + (v25 << 6);
    goto LABEL_8;
  }
  while (1)
  {
    int64_t v25 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v25 >= v50)
    {
      int64_t v56 = v47;
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v49 + 8 * v25);
    ++v27;
    if (v26) {
      goto LABEL_12;
    }
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_251B0075C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticRoom(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v55 = (uint64_t)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v46 - v8;
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v51 = a1;
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v49 = a1 + 64;
  uint64_t v11 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v10;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E648);
  int v48 = &v46;
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  unint64_t v53 = (v16 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v54 = v16;
  uint64_t v52 = (uint64_t)&v46 - v53;
  int64_t v56 = 0;
  int64_t v50 = (unint64_t)(v11 + 63) >> 6;
  int64_t v47 = v50 - 1;
  while (1)
  {
    uint64_t result = MEMORY[0x270FA5388](v15);
    uint64_t v18 = (char *)&v46 - v53;
    if (v13)
    {
      uint64_t v57 = (v13 - 1) & v13;
      unint64_t v19 = __clz(__rbit64(v13)) | (v56 << 6);
LABEL_8:
      uint64_t v20 = v51;
      uint64_t v21 = *(void *)(v51 + 48);
      uint64_t v22 = sub_251F34DA0();
      (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v18, v21 + *(void *)(*(void *)(v22 - 8) + 72) * v19, v22);
      uint64_t v23 = *(void *)(v20 + 56) + *(void *)(v5 + 72) * v19;
      uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E640);
      sub_251B25B74(v23, (uint64_t)&v18[*(int *)(v24 + 48)], type metadata accessor for StaticRoom);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v18, 0, 1, v24);
      goto LABEL_27;
    }
    int64_t v25 = v56 + 1;
    if (__OFADD__(v56, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v25 < v50)
    {
      unint64_t v26 = *(void *)(v49 + 8 * v25);
      if (v26) {
        goto LABEL_12;
      }
      int64_t v27 = v56 + 2;
      ++v56;
      if (v25 + 1 < v50)
      {
        unint64_t v26 = *(void *)(v49 + 8 * v27);
        if (v26) {
          goto LABEL_15;
        }
        int64_t v56 = v25 + 1;
        if (v25 + 2 < v50)
        {
          unint64_t v26 = *(void *)(v49 + 8 * (v25 + 2));
          if (v26)
          {
            v25 += 2;
            goto LABEL_12;
          }
          int64_t v27 = v25 + 3;
          int64_t v56 = v25 + 2;
          if (v25 + 3 < v50) {
            break;
          }
        }
      }
    }
LABEL_26:
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E640);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v18, 1, 1, v28);
    uint64_t v57 = 0;
LABEL_27:
    uint64_t v29 = v52;
    sub_251A4ECF0((uint64_t)v18, v52, &qword_26B21E648);
    uint64_t v30 = v29;
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E640);
    int v32 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 48))(v29, 1, v31);
    BOOL v33 = v32 == 1;
    if (v32 == 1) {
      return v33;
    }
    uint64_t v34 = (uint64_t)v9;
    uint64_t v35 = v5;
    uint64_t v36 = sub_251F34DA0();
    uint64_t v37 = *(void *)(v36 - 8);
    MEMORY[0x270FA5388](v36);
    uint64_t v39 = (char *)&v46 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v40 = v30 + *(int *)(v31 + 48);
    (*(void (**)(char *, uint64_t, uint64_t))(v37 + 32))(v39, v30, v36);
    sub_251B25C90(v40, v34, type metadata accessor for StaticRoom);
    unint64_t v41 = sub_2519FE584((uint64_t)v39);
    char v43 = v42;
    (*(void (**)(char *, uint64_t))(v37 + 8))(v39, v36);
    if ((v43 & 1) == 0)
    {
      sub_251B25BDC(v34, type metadata accessor for StaticRoom);
      return v33;
    }
    uint64_t v5 = v35;
    uint64_t v44 = v55;
    sub_251B25B74(*(void *)(a2 + 56) + *(void *)(v35 + 72) * v41, v55, type metadata accessor for StaticRoom);
    char v45 = static StaticRoom.== infix(_:_:)(v44, v34);
    sub_251B25BDC(v44, type metadata accessor for StaticRoom);
    uint64_t v15 = sub_251B25BDC(v34, type metadata accessor for StaticRoom);
    if ((v45 & 1) == 0) {
      return v33;
    }
    uint64_t v9 = (char *)v34;
    unint64_t v13 = v57;
  }
  unint64_t v26 = *(void *)(v49 + 8 * v27);
  if (v26)
  {
LABEL_15:
    int64_t v25 = v27;
LABEL_12:
    int64_t v56 = v25;
    uint64_t v57 = (v26 - 1) & v26;
    unint64_t v19 = __clz(__rbit64(v26)) + (v25 << 6);
    goto LABEL_8;
  }
  while (1)
  {
    int64_t v25 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v25 >= v50)
    {
      int64_t v56 = v47;
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v49 + 8 * v25);
    ++v27;
    if (v26) {
      goto LABEL_12;
    }
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_251B00D5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticUser();
  uint64_t v65 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v53 - v8;
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v56 = a1;
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v54 = a1 + 64;
  uint64_t v11 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v10;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E650);
  v53[1] = v53;
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  unint64_t v62 = (v16 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v63 = v16;
  uint64_t v60 = v9;
  uint64_t v61 = (uint64_t)v53 - v62;
  int64_t v64 = 0;
  int64_t v55 = (unint64_t)(v11 + 63) >> 6;
  v53[0] = v55 - 1;
  uint64_t v58 = v7;
  uint64_t v59 = v4;
  while (1)
  {
    uint64_t result = MEMORY[0x270FA5388](v15);
    uint64_t v18 = (char *)v53 - v62;
    if (v13)
    {
      unint64_t v19 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v20 = v19 | (v64 << 6);
LABEL_8:
      uint64_t v21 = v56;
      uint64_t v22 = *(void *)(v56 + 48);
      uint64_t v23 = sub_251F34DA0();
      (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v18, v22 + *(void *)(*(void *)(v23 - 8) + 72) * v20, v23);
      uint64_t v24 = *(void *)(v21 + 56) + *(void *)(v65 + 72) * v20;
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D078);
      sub_251B25B74(v24, (uint64_t)&v18[*(int *)(v25 + 48)], (uint64_t (*)(void))type metadata accessor for StaticUser);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v18, 0, 1, v25);
      goto LABEL_27;
    }
    int64_t v26 = v64 + 1;
    if (__OFADD__(v64, 1))
    {
      __break(1u);
      goto LABEL_44;
    }
    if (v26 < v55)
    {
      unint64_t v27 = *(void *)(v54 + 8 * v26);
      if (v27) {
        goto LABEL_12;
      }
      int64_t v28 = v64 + 2;
      ++v64;
      if (v26 + 1 < v55)
      {
        unint64_t v27 = *(void *)(v54 + 8 * v28);
        if (v27) {
          goto LABEL_15;
        }
        int64_t v64 = v26 + 1;
        if (v26 + 2 < v55)
        {
          unint64_t v27 = *(void *)(v54 + 8 * (v26 + 2));
          if (v27)
          {
            v26 += 2;
            goto LABEL_12;
          }
          int64_t v28 = v26 + 3;
          int64_t v64 = v26 + 2;
          if (v26 + 3 < v55) {
            break;
          }
        }
      }
    }
LABEL_26:
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D078);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v18, 1, 1, v29);
    unint64_t v13 = 0;
LABEL_27:
    uint64_t v30 = v61;
    sub_251A4ECF0((uint64_t)v18, v61, &qword_26B21E650);
    uint64_t v31 = v30;
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D078);
    BOOL v33 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 48))(v30, 1, v32) == 1;
    uint64_t result = v33;
    if (v33) {
      return result;
    }
    BOOL v57 = v33;
    uint64_t v34 = sub_251F34DA0();
    uint64_t v35 = *(void *)(v34 - 8);
    MEMORY[0x270FA5388](v34);
    uint64_t v37 = (char *)v53 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v38 = v31 + *(int *)(v32 + 48);
    (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(v37, v31, v34);
    uint64_t v39 = (uint64_t)v60;
    sub_251B25C90(v38, (uint64_t)v60, (uint64_t (*)(void))type metadata accessor for StaticUser);
    unint64_t v40 = sub_2519FE584((uint64_t)v37);
    char v42 = v41;
    (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v34);
    if ((v42 & 1) == 0) {
      goto LABEL_40;
    }
    uint64_t v43 = (uint64_t)v58;
    sub_251B25B74(*(void *)(a2 + 56) + *(void *)(v65 + 72) * v40, (uint64_t)v58, (uint64_t (*)(void))type metadata accessor for StaticUser);
    char v44 = sub_251F34D70();
    uint64_t v45 = v59;
    if ((v44 & 1) == 0
      || ((uint64_t v46 = *(int *)(v59 + 20),
           uint64_t v47 = *(void *)(v43 + v46),
           uint64_t v48 = *(void *)(v43 + v46 + 8),
           uint64_t v49 = (void *)(v39 + v46),
           v47 != *v49)
       || v48 != v49[1])
      && (sub_251F36B10() & 1) == 0
      || (sub_251F34D70() & 1) == 0
      || *(unsigned __int8 *)(v43 + *(int *)(v45 + 28)) != *(unsigned __int8 *)(v39 + *(int *)(v45 + 28)))
    {
      sub_251B25BDC(v43, (uint64_t (*)(void))type metadata accessor for StaticUser);
LABEL_40:
      sub_251B25BDC(v39, (uint64_t (*)(void))type metadata accessor for StaticUser);
      return v57;
    }
    uint64_t v50 = *(int *)(v45 + 32);
    int v51 = *(unsigned __int8 *)(v43 + v50);
    int v52 = *(unsigned __int8 *)(v39 + v50);
    sub_251B25BDC(v43, (uint64_t (*)(void))type metadata accessor for StaticUser);
    uint64_t v15 = sub_251B25BDC(v39, (uint64_t (*)(void))type metadata accessor for StaticUser);
    if (v51 != v52) {
      return v57;
    }
  }
  unint64_t v27 = *(void *)(v54 + 8 * v28);
  if (v27)
  {
LABEL_15:
    int64_t v26 = v28;
LABEL_12:
    unint64_t v13 = (v27 - 1) & v27;
    unint64_t v20 = __clz(__rbit64(v27)) + (v26 << 6);
    int64_t v64 = v26;
    goto LABEL_8;
  }
  while (1)
  {
    int64_t v26 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v26 >= v55)
    {
      int64_t v64 = v53[0];
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v54 + 8 * v26);
    ++v28;
    if (v27) {
      goto LABEL_12;
    }
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_251B013D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticHH2Update(0);
  uint64_t v72 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v60 - v8;
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v63 = a1;
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v61 = a1 + 64;
  uint64_t v11 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v10;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E680);
  v60[1] = v60;
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  unint64_t v68 = (v16 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v69 = v16;
  uint64_t v66 = v9;
  uint64_t v67 = (uint64_t)v60 - v68;
  int64_t v70 = 0;
  int64_t v62 = (unint64_t)(v11 + 63) >> 6;
  v60[0] = v62 - 1;
  int64_t v64 = v7;
  uint64_t v65 = v4;
  while (2)
  {
    MEMORY[0x270FA5388](v15);
    unint64_t v17 = (char *)v60 - v68;
    if (v13)
    {
      unint64_t v18 = __clz(__rbit64(v13));
      uint64_t v19 = (v13 - 1) & v13;
      unint64_t v20 = v18 | (v70 << 6);
LABEL_10:
      uint64_t v21 = v63;
      uint64_t v22 = *(void *)(v63 + 48);
      uint64_t v23 = sub_251F34DA0();
      (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v17, v22 + *(void *)(*(void *)(v23 - 8) + 72) * v20, v23);
      uint64_t v24 = *(void *)(v21 + 56) + *(void *)(v72 + 72) * v20;
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D070);
      sub_251B25B74(v24, (uint64_t)&v17[*(int *)(v25 + 48)], type metadata accessor for StaticHH2Update);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v17, 0, 1, v25);
      goto LABEL_29;
    }
    int64_t v26 = v70 + 1;
    if (__OFADD__(v70, 1))
    {
      __break(1u);
LABEL_66:
      __break(1u);
      JUMPOUT(0x251B01B00);
    }
    if (v26 < v62)
    {
      unint64_t v27 = *(void *)(v61 + 8 * v26);
      if (v27) {
        goto LABEL_14;
      }
      int64_t v28 = v70 + 2;
      ++v70;
      if (v26 + 1 < v62)
      {
        unint64_t v27 = *(void *)(v61 + 8 * v28);
        if (v27) {
          goto LABEL_17;
        }
        int64_t v70 = v26 + 1;
        if (v26 + 2 < v62)
        {
          unint64_t v27 = *(void *)(v61 + 8 * (v26 + 2));
          if (v27)
          {
            v26 += 2;
            goto LABEL_14;
          }
          int64_t v28 = v26 + 3;
          int64_t v70 = v26 + 2;
          if (v26 + 3 < v62)
          {
            unint64_t v27 = *(void *)(v61 + 8 * v28);
            if (v27)
            {
LABEL_17:
              int64_t v26 = v28;
LABEL_14:
              uint64_t v19 = (v27 - 1) & v27;
              unint64_t v20 = __clz(__rbit64(v27)) + (v26 << 6);
              int64_t v70 = v26;
              goto LABEL_10;
            }
            while (1)
            {
              int64_t v26 = v28 + 1;
              if (__OFADD__(v28, 1)) {
                goto LABEL_66;
              }
              if (v26 >= v62) {
                break;
              }
              unint64_t v27 = *(void *)(v61 + 8 * v26);
              ++v28;
              if (v27) {
                goto LABEL_14;
              }
            }
            int64_t v70 = v60[0];
          }
        }
      }
    }
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D070);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v17, 1, 1, v29);
    uint64_t v19 = 0;
LABEL_29:
    uint64_t v30 = v67;
    sub_251A4ECF0((uint64_t)v17, v67, &qword_26B21E680);
    uint64_t v31 = v30;
    uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D070);
    int v33 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 48))(v30, 1, v32);
    BOOL v34 = v33 == 1;
    if (v33 == 1) {
      return v34;
    }
    unint64_t v71 = v19;
    uint64_t v35 = sub_251F34DA0();
    uint64_t v36 = *(void *)(v35 - 8);
    MEMORY[0x270FA5388](v35);
    uint64_t v38 = (char *)v60 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v39 = v31 + *(int *)(v32 + 48);
    (*(void (**)(char *, uint64_t, uint64_t))(v36 + 32))(v38, v31, v35);
    sub_251B25C90(v39, (uint64_t)v9, type metadata accessor for StaticHH2Update);
    unint64_t v40 = sub_2519FE584((uint64_t)v38);
    char v42 = v41;
    (*(void (**)(char *, uint64_t))(v36 + 8))(v38, v35);
    if ((v42 & 1) == 0) {
      goto LABEL_60;
    }
    uint64_t v43 = (uint64_t)v64;
    sub_251B25B74(*(void *)(a2 + 56) + *(void *)(v72 + 72) * v40, (uint64_t)v64, type metadata accessor for StaticHH2Update);
    char v44 = sub_251F34D70();
    uint64_t v45 = v65;
    if ((v44 & 1) == 0) {
      goto LABEL_59;
    }
    uint64_t v46 = *(int *)(v65 + 20);
    int v47 = *(unsigned __int8 *)(v43 + v46);
    int v48 = v9[v46];
    switch(v47)
    {
      case 2:
        if (v48 != 2) {
          goto LABEL_59;
        }
        goto LABEL_47;
      case 3:
        if (v48 != 3) {
          goto LABEL_59;
        }
        goto LABEL_47;
      case 4:
        if (v48 != 4) {
          goto LABEL_59;
        }
        goto LABEL_47;
      case 5:
        if (v48 != 5) {
          goto LABEL_59;
        }
        goto LABEL_47;
      case 6:
        if (v48 != 6) {
          goto LABEL_59;
        }
        goto LABEL_47;
      case 7:
        if (v48 == 7) {
          goto LABEL_47;
        }
        goto LABEL_59;
      default:
        if (v48 - 2) < 6 || ((v48 ^ v47)) {
          goto LABEL_59;
        }
LABEL_47:
        uint64_t v49 = *(int *)(v65 + 24);
        uint64_t v50 = (void *)(v43 + v49);
        uint64_t v51 = *(void *)(v43 + v49 + 8);
        int v52 = &v9[v49];
        uint64_t v53 = *((void *)v52 + 1);
        if (v51)
        {
          if (!v53 || (*v50 != *(void *)v52 || v51 != v53) && (sub_251F36B10() & 1) == 0) {
            goto LABEL_59;
          }
        }
        else
        {
          if (v53) {
            goto LABEL_59;
          }
          swift_bridgeObjectRelease_n();
        }
        uint64_t v54 = *(int *)(v45 + 28);
        int64_t v55 = (double *)(v43 + v54);
        char v56 = *(unsigned char *)(v43 + v54 + 8);
        BOOL v57 = (double *)&v9[v54];
        int v58 = v9[v54 + 8];
        if (v56)
        {
          if (!v58) {
            goto LABEL_59;
          }
LABEL_7:
          sub_251B25BDC(v43, type metadata accessor for StaticHH2Update);
          uint64_t v15 = sub_251B25BDC((uint64_t)v9, type metadata accessor for StaticHH2Update);
          unint64_t v13 = v71;
          continue;
        }
        if (*v55 != *v57) {
          LOBYTE(v58) = 1;
        }
        if ((v58 & 1) == 0) {
          goto LABEL_7;
        }
LABEL_59:
        sub_251B25BDC(v43, type metadata accessor for StaticHH2Update);
LABEL_60:
        sub_251B25BDC((uint64_t)v9, type metadata accessor for StaticHH2Update);
        return v34;
    }
  }
}

uint64_t sub_251B01B18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticResident();
  uint64_t v68 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v57 - v8;
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v58 = a1 + 64;
  uint64_t v11 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v10;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E338);
  uint64_t v59 = &v57;
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  unint64_t v64 = (v16 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v65 = v16;
  int64_t v62 = (int *)v4;
  uint64_t v63 = (uint64_t)&v57 - v64;
  int64_t v66 = 0;
  int64_t v60 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v61 = a1;
  int64_t v57 = v60 - 1;
  while (1)
  {
    MEMORY[0x270FA5388](v15);
    unint64_t v17 = (char *)&v57 - v64;
    if (v13)
    {
      uint64_t v67 = (v13 - 1) & v13;
      unint64_t v18 = __clz(__rbit64(v13)) | (v66 << 6);
LABEL_8:
      uint64_t v19 = *(void *)(a1 + 48);
      uint64_t v20 = sub_251F34DA0();
      (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v17, v19 + *(void *)(*(void *)(v20 - 8) + 72) * v18, v20);
      uint64_t v21 = *(void *)(a1 + 56) + *(void *)(v68 + 72) * v18;
      uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F000);
      sub_251B25B74(v21, (uint64_t)&v17[*(int *)(v22 + 48)], (uint64_t (*)(void))type metadata accessor for StaticResident);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v17, 0, 1, v22);
      goto LABEL_27;
    }
    int64_t v23 = v66 + 1;
    if (__OFADD__(v66, 1))
    {
      __break(1u);
LABEL_67:
      __break(1u);
      JUMPOUT(0x251B022A4);
    }
    if (v23 < v60)
    {
      unint64_t v24 = *(void *)(v58 + 8 * v23);
      if (v24) {
        goto LABEL_12;
      }
      int64_t v25 = v66 + 2;
      ++v66;
      if (v23 + 1 < v60)
      {
        unint64_t v24 = *(void *)(v58 + 8 * v25);
        if (v24) {
          goto LABEL_15;
        }
        int64_t v66 = v23 + 1;
        if (v23 + 2 < v60)
        {
          unint64_t v24 = *(void *)(v58 + 8 * (v23 + 2));
          if (v24)
          {
            v23 += 2;
            goto LABEL_12;
          }
          int64_t v25 = v23 + 3;
          int64_t v66 = v23 + 2;
          if (v23 + 3 < v60)
          {
            unint64_t v24 = *(void *)(v58 + 8 * v25);
            if (v24)
            {
LABEL_15:
              int64_t v23 = v25;
LABEL_12:
              int64_t v66 = v23;
              uint64_t v67 = (v24 - 1) & v24;
              unint64_t v18 = __clz(__rbit64(v24)) + (v23 << 6);
              goto LABEL_8;
            }
            while (1)
            {
              int64_t v23 = v25 + 1;
              if (__OFADD__(v25, 1)) {
                goto LABEL_67;
              }
              if (v23 >= v60) {
                break;
              }
              unint64_t v24 = *(void *)(v58 + 8 * v23);
              ++v25;
              if (v24) {
                goto LABEL_12;
              }
            }
            int64_t v66 = v57;
          }
        }
      }
    }
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F000);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v17, 1, 1, v26);
    uint64_t v67 = 0;
LABEL_27:
    uint64_t v27 = v63;
    sub_251A4ECF0((uint64_t)v17, v63, &qword_26B21E338);
    uint64_t v28 = v27;
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F000);
    int v30 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 48))(v27, 1, v29);
    BOOL v31 = v30 == 1;
    if (v30 == 1) {
      return v31;
    }
    uint64_t v32 = sub_251F34DA0();
    uint64_t v33 = *(void *)(v32 - 8);
    MEMORY[0x270FA5388](v32);
    uint64_t v35 = (char *)&v57 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v36 = v28 + *(int *)(v29 + 48);
    (*(void (**)(char *, uint64_t, uint64_t))(v33 + 32))(v35, v28, v32);
    sub_251B25C90(v36, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticResident);
    unint64_t v37 = sub_2519FE584((uint64_t)v35);
    char v39 = v38;
    (*(void (**)(char *, uint64_t))(v33 + 8))(v35, v32);
    if ((v39 & 1) == 0) {
      goto LABEL_64;
    }
    sub_251B25B74(*(void *)(a2 + 56) + *(void *)(v68 + 72) * v37, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticResident);
    char v40 = sub_251F34D70();
    char v41 = v62;
    unint64_t v13 = v67;
    if ((v40 & 1) == 0) {
      break;
    }
    uint64_t v42 = v62[5];
    uint64_t v43 = *(void *)&v7[v42];
    uint64_t v44 = *(void *)&v7[v42 + 8];
    uint64_t v45 = &v9[v42];
    if ((v43 != *(void *)v45 || v44 != *((void *)v45 + 1)) && (sub_251F36B10() & 1) == 0) {
      break;
    }
    uint64_t v46 = v41[6];
    int v47 = &v7[v46];
    uint64_t v48 = *(void *)&v7[v46 + 8];
    uint64_t v49 = &v9[v46];
    uint64_t v50 = *((void *)v49 + 1);
    if (v48)
    {
      if (!v50 || (*(void *)v47 != *(void *)v49 || v48 != v50) && (sub_251F36B10() & 1) == 0) {
        break;
      }
    }
    else if (v50)
    {
      break;
    }
    if ((sub_251B0693C(*(void *)&v7[v41[7]], *(void *)&v9[v41[7]]) & 1) == 0
      || (sub_251B06B20(*(void *)&v7[v41[8]], *(void *)&v9[v41[8]]) & 1) == 0)
    {
      break;
    }
    uint64_t v51 = v41[9];
    unsigned int v52 = *(unsigned __int16 *)&v7[v51];
    unsigned int v53 = *(unsigned __int16 *)&v9[v51];
    if (v52 >> 14)
    {
      if (v52 >> 14 != 1)
      {
        switch(v52)
        {
          case 0x8000u:
            if (v53 != 0x8000) {
              goto LABEL_63;
            }
            goto LABEL_59;
          case 0x8001u:
            int v54 = 32769;
            goto LABEL_58;
          case 0x8002u:
            int v54 = 32770;
            goto LABEL_58;
          case 0x8003u:
            int v54 = 32771;
            goto LABEL_58;
          default:
            int v54 = 33024;
LABEL_58:
            if (v53 == v54) {
              goto LABEL_59;
            }
            goto LABEL_63;
        }
      }
      if ((v53 & 0xC000) != 0x4000
        || ((v52 & 1) == 0) == (v53 & 1)
        || ((((v52 & 0x100) == 0) ^ ((unsigned __int16)(v53 & 0x100) >> 8)) & 1) == 0)
      {
        break;
      }
    }
    else if (v53 >> 14 || v53 != v52)
    {
      break;
    }
LABEL_59:
    char v55 = sub_251F34D70();
    sub_251B25BDC((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticResident);
    uint64_t v15 = sub_251B25BDC((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticResident);
    if ((v55 & 1) == 0) {
      return v31;
    }
    a1 = v61;
  }
LABEL_63:
  sub_251B25BDC((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticResident);
LABEL_64:
  sub_251B25BDC((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for StaticResident);
  return v31;
}

uint64_t sub_251B022B4(uint64_t a1, uint64_t a2)
{
  if (a1 == a2) {
    return 1;
  }
  uint64_t v2 = a2;
  uint64_t v3 = a1;
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v48 = a1 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & v5;
  int64_t v49 = (unint64_t)(v6 + 63) >> 6;
  if ((v7 & v5) != 0) {
    goto LABEL_9;
  }
  while (2)
  {
    int64_t v11 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_75;
    }
    if (v11 >= v49) {
      return 1;
    }
    unint64_t v12 = *(void *)(v48 + 8 * v11);
    int64_t v13 = v4 + 1;
    if (v12) {
      goto LABEL_23;
    }
    int64_t v13 = v4 + 2;
    if (v4 + 2 >= v49) {
      return 1;
    }
    unint64_t v12 = *(void *)(v48 + 8 * v13);
    if (v12) {
      goto LABEL_23;
    }
    int64_t v13 = v4 + 3;
    if (v4 + 3 >= v49) {
      return 1;
    }
    unint64_t v12 = *(void *)(v48 + 8 * v13);
    if (v12) {
      goto LABEL_23;
    }
    uint64_t v14 = v4 + 4;
    if (v4 + 4 >= v49) {
      return 1;
    }
    unint64_t v12 = *(void *)(v48 + 8 * v14);
    if (!v12)
    {
      while (1)
      {
        int64_t v13 = v14 + 1;
        if (__OFADD__(v14, 1)) {
          break;
        }
        if (v13 >= v49) {
          return 1;
        }
        unint64_t v12 = *(void *)(v48 + 8 * v13);
        ++v14;
        if (v12) {
          goto LABEL_23;
        }
      }
LABEL_75:
      __break(1u);
      JUMPOUT(0x251B02770);
    }
    int64_t v13 = v4 + 4;
LABEL_23:
    unint64_t v8 = (v12 - 1) & v12;
    int64_t v52 = v13;
    unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
LABEL_24:
    uint64_t v15 = *(void **)(*(void *)(v3 + 48) + 8 * v10);
    uint64_t v16 = *(void *)(v3 + 56) + 32 * v10;
    uint64_t v17 = *(void *)v16;
    uint64_t v18 = *(void *)(v16 + 8);
    uint64_t v19 = *(void *)(v16 + 16);
    int v20 = *(unsigned __int8 *)(v16 + 24);
    id v21 = v15;
    sub_251A1A550(v17, v18, v19, v20);
    unint64_t v22 = sub_2519FE68C((uint64_t)v21);
    char v24 = v23;

    if ((v24 & 1) == 0) {
      goto LABEL_72;
    }
    uint64_t v25 = *(void *)(v2 + 56) + 32 * v22;
    uint64_t v27 = *(void *)v25;
    uint64_t v26 = *(void *)(v25 + 8);
    uint64_t v28 = *(void *)(v25 + 16);
    char v29 = *(unsigned char *)(v25 + 24);
    switch(v29)
    {
      case 1:
        if (v20 != 1) {
          goto LABEL_70;
        }
        sub_251A1A5A4(*(void *)v25, *(void *)(v25 + 8), *(void *)(v25 + 16), 1);
        uint64_t v30 = v17;
        uint64_t v31 = v18;
        uint64_t v32 = v19;
        char v33 = 1;
        goto LABEL_7;
      case 2:
        if (v20 != 2)
        {
          swift_bridgeObjectRetain_n();
          goto LABEL_70;
        }
        if (v27 == v17)
        {
          if (v26 != v18 || v28 != v19)
          {
            char v35 = sub_251F36B10();
            swift_bridgeObjectRetain();
            sub_251A1A5A4(v17, v26, v28, 2);
            sub_251A1A5A4(v17, v18, v19, 2);
            uint64_t v2 = a2;
            uint64_t v3 = a1;
            int64_t v4 = v52;
            if ((v35 & 1) == 0) {
              return 0;
            }
LABEL_8:
            if (!v8) {
              continue;
            }
            goto LABEL_9;
          }
          swift_bridgeObjectRetain();
          sub_251A1A5A4(v17, v18, v19, 2);
          uint64_t v38 = v17;
          uint64_t v39 = v18;
          uint64_t v40 = v19;
          char v41 = 2;
LABEL_62:
          sub_251A1A5A4(v38, v39, v40, v41);
          uint64_t v2 = a2;
          uint64_t v3 = a1;
          int64_t v4 = v52;
          if (!v8) {
            continue;
          }
LABEL_9:
          unint64_t v9 = __clz(__rbit64(v8));
          v8 &= v8 - 1;
          int64_t v52 = v4;
          unint64_t v10 = v9 | (v4 << 6);
          goto LABEL_24;
        }
        swift_bridgeObjectRetain();
        LOBYTE(v20) = 2;
        uint64_t v44 = v27;
        uint64_t v45 = v26;
        uint64_t v46 = v28;
        char v47 = 2;
LABEL_71:
        sub_251A1A5A4(v44, v45, v46, v47);
LABEL_72:
        sub_251A1A5A4(v17, v18, v19, v20);
        return 0;
      case 3:
        if (v28 | v26 | v27)
        {
          if (v27 != 1 || (v28 | v26) != 0)
          {
            if (v20 == 3)
            {
              if (v17 != 2 || (v19 | v18) != 0)
              {
                LOBYTE(v20) = 3;
                uint64_t v27 = 2;
                goto LABEL_70;
              }
              sub_251A1A5A4(2, 0, 0, 3);
              uint64_t v38 = 2;
              goto LABEL_61;
            }
            uint64_t v27 = 2;
LABEL_70:
            sub_251A1A550(v17, v18, v19, v20);
            sub_251A1A5A4(v27, v26, v28, v29);
            sub_251A1A5A4(v17, v18, v19, v20);
            uint64_t v44 = v27;
            uint64_t v45 = v26;
            uint64_t v46 = v28;
            char v47 = v29;
            goto LABEL_71;
          }
          if (v20 != 3) {
            goto LABEL_69;
          }
          if (v17 != 1 || (v19 | v18) != 0)
          {
            LOBYTE(v20) = 3;
LABEL_69:
            uint64_t v27 = 1;
            goto LABEL_70;
          }
          sub_251A1A5A4(1, 0, 0, 3);
          uint64_t v38 = 1;
        }
        else
        {
          if (v20 != 3) {
            goto LABEL_70;
          }
          if (v19 | v18 | v17)
          {
            LOBYTE(v20) = 3;
            goto LABEL_70;
          }
          sub_251A1A5A4(0, 0, 0, 3);
          uint64_t v38 = 0;
        }
LABEL_61:
        uint64_t v39 = 0;
        uint64_t v40 = 0;
        char v41 = 3;
        goto LABEL_62;
      default:
        if (v20) {
          goto LABEL_70;
        }
        sub_251A1A5A4(*(void *)v25, *(void *)(v25 + 8), *(void *)(v25 + 16), 0);
        uint64_t v30 = v17;
        uint64_t v31 = v18;
        uint64_t v32 = v19;
        char v33 = 0;
LABEL_7:
        sub_251A1A5A4(v30, v31, v32, v33);
        uint64_t v2 = a2;
        uint64_t v3 = a1;
        int64_t v4 = v52;
        if (((v27 ^ v17) & 1) == 0) {
          goto LABEL_8;
        }
        return 0;
    }
  }
}

uint64_t sub_251B02780(uint64_t a1, uint64_t a2)
{
  __s2[2] = *MEMORY[0x263EF8340];
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v2 = 0;
  uint64_t v102 = a1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v103 = (unint64_t)(v3 + 63) >> 6;
  while (2)
  {
    if (v5)
    {
      unint64_t v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      int64_t v105 = v2;
      unint64_t v10 = v9 | (v2 << 6);
      uint64_t v11 = a2;
    }
    else
    {
      int64_t v12 = v2 + 1;
      uint64_t v11 = a2;
      if (__OFADD__(v2, 1))
      {
        __break(1u);
        goto LABEL_170;
      }
      if (v12 >= v103) {
        return 1;
      }
      unint64_t v13 = *(void *)(v102 + 8 * v12);
      int64_t v14 = v2 + 1;
      if (!v13)
      {
        int64_t v14 = v12 + 1;
        if (v12 + 1 >= v103) {
          return 1;
        }
        unint64_t v13 = *(void *)(v102 + 8 * v14);
        if (!v13)
        {
          int64_t v14 = v12 + 2;
          if (v12 + 2 >= v103) {
            return 1;
          }
          unint64_t v13 = *(void *)(v102 + 8 * v14);
          if (!v13)
          {
            int64_t v15 = v12 + 3;
            if (v15 >= v103) {
              return 1;
            }
            unint64_t v13 = *(void *)(v102 + 8 * v15);
            if (!v13)
            {
              while (1)
              {
                int64_t v14 = v15 + 1;
                if (__OFADD__(v15, 1)) {
                  break;
                }
                if (v14 >= v103) {
                  return 1;
                }
                unint64_t v13 = *(void *)(v102 + 8 * v14);
                ++v15;
                if (v13) {
                  goto LABEL_24;
                }
              }
LABEL_170:
              __break(1u);
LABEL_171:
              __break(1u);
LABEL_172:
              __break(1u);
LABEL_173:
              __break(1u);
LABEL_174:
              __break(1u);
LABEL_175:
              __break(1u);
LABEL_176:
              __break(1u);
LABEL_177:
              __break(1u);
LABEL_178:
              __break(1u);
LABEL_179:
              __break(1u);
LABEL_180:
              __break(1u);
LABEL_181:
              __break(1u);
LABEL_182:
              __break(1u);
LABEL_183:
              __break(1u);
LABEL_184:
              __break(1u);
LABEL_185:
              __break(1u);
LABEL_186:
              __break(1u);
LABEL_187:
              __break(1u);
LABEL_188:
              __break(1u);
LABEL_189:
              __break(1u);
LABEL_190:
              __break(1u);
LABEL_191:
              __break(1u);
LABEL_192:
              __break(1u);
LABEL_193:
              __break(1u);
            }
            int64_t v14 = v15;
          }
        }
      }
LABEL_24:
      unint64_t v5 = (v13 - 1) & v13;
      int64_t v105 = v14;
      unint64_t v10 = __clz(__rbit64(v13)) + (v14 << 6);
    }
    uint64_t v16 = a1;
    uint64_t v17 = *(void **)(*(void *)(a1 + 48) + 8 * v10);
    uint64_t v18 = *(void *)(a1 + 56) + 24 * v10;
    uint64_t v20 = *(uint64_t *)v18;
    unint64_t v19 = *(void *)(v18 + 8);
    int v21 = *(unsigned __int8 *)(v18 + 16);
    id v22 = v17;
    sub_251A1A870(v20, v19, v21);
    unint64_t v23 = sub_2519FE68C((uint64_t)v22);
    char v25 = v24;

    if ((v25 & 1) == 0) {
      goto LABEL_166;
    }
    uint64_t v26 = *(void *)(v11 + 56) + 24 * v23;
    uint64_t v28 = *(uint64_t *)v26;
    unint64_t v27 = *(void *)(v26 + 8);
    char v29 = *(unsigned char *)(v26 + 16);
    switch(v29)
    {
      case 1:
        if (v21 != 1) {
          goto LABEL_164;
        }
        sub_251A1AD70(*(void *)v26, *(void *)(v26 + 8), 1);
        sub_251A1AD70(v20, v19, 1);
        BOOL v30 = *(double *)&v28 == *(double *)&v20;
        goto LABEL_37;
      case 2:
        if (v21 != 2) {
          goto LABEL_164;
        }
        sub_251A1AD70(*(void *)v26, *(void *)(v26 + 8), 2);
        sub_251A1AD70(v20, v19, 2);
        BOOL v30 = v28 == v20;
LABEL_37:
        a1 = v16;
        int64_t v2 = v105;
        if (!v30) {
          return 0;
        }
        continue;
      case 3:
        if (v21 != 3)
        {
          swift_bridgeObjectRetain_n();
          goto LABEL_164;
        }
        if (v28 == v20 && v27 == v19)
        {
          swift_bridgeObjectRetain();
          sub_251A1AD70(v20, v19, 3);
          uint64_t v6 = v20;
          unint64_t v7 = v19;
          char v8 = 3;
LABEL_8:
          sub_251A1AD70(v6, v7, v8);
          a1 = v16;
          int64_t v2 = v105;
        }
        else
        {
          char v33 = sub_251F36B10();
          swift_bridgeObjectRetain();
          sub_251A1AD70(v28, v27, 3);
          sub_251A1AD70(v20, v19, 3);
          a1 = v16;
          int64_t v2 = v105;
          if ((v33 & 1) == 0) {
            return 0;
          }
        }
        continue;
      case 4:
        if (v21 == 4)
        {
          uint64_t v31 = 0;
          switch(v27 >> 62)
          {
            case 1uLL:
              if (__OFSUB__(HIDWORD(v28), v28)) {
                goto LABEL_171;
              }
              uint64_t v31 = HIDWORD(v28) - (int)v28;
LABEL_56:
              sub_251A1A894(v28, v27);
              break;
            case 2uLL:
              uint64_t v36 = *(void *)(v28 + 16);
              uint64_t v35 = *(void *)(v28 + 24);
              uint64_t v31 = v35 - v36;
              if (!__OFSUB__(v35, v36)) {
                goto LABEL_56;
              }
              goto LABEL_172;
            case 3uLL:
              break;
            default:
              uint64_t v31 = BYTE6(v27);
              break;
          }
          unint64_t v37 = v19 >> 62;
          switch(v19 >> 62)
          {
            case 1uLL:
              LODWORD(v38) = HIDWORD(v20) - v20;
              if (__OFSUB__(HIDWORD(v20), v20)) {
                goto LABEL_173;
              }
              uint64_t v38 = (int)v38;
LABEL_62:
              if (v31 != v38)
              {
LABEL_168:
                char v29 = 4;
                LOBYTE(v21) = 4;
                goto LABEL_165;
              }
              if (v31 < 1)
              {
LABEL_7:
                sub_251A1AD70(v28, v27, 4);
                uint64_t v6 = v20;
                unint64_t v7 = v19;
                char v8 = 4;
                goto LABEL_8;
              }
              switch(v27 >> 62)
              {
                case 1uLL:
                  if ((int)v28 > v28 >> 32) {
                    goto LABEL_175;
                  }
                  sub_251A1A870(v20, v19, 4);
                  sub_251A1A870(v28, v27, 4);
                  char v47 = (char *)sub_251F34770();
                  if (!v47) {
                    goto LABEL_76;
                  }
                  uint64_t v48 = sub_251F347A0();
                  if (__OFSUB__((int)v28, v48)) {
                    goto LABEL_177;
                  }
                  v47 += (int)v28 - v48;
LABEL_76:
                  sub_251F34790();
                  if (!v37)
                  {
                    __s2[0] = v20;
                    LOWORD(__s2[1]) = v19;
                    BYTE2(__s2[1]) = BYTE2(v19);
                    BYTE3(__s2[1]) = BYTE3(v19);
                    BYTE4(__s2[1]) = BYTE4(v19);
                    BYTE5(__s2[1]) = BYTE5(v19);
                    if (!v47) {
                      goto LABEL_200;
                    }
                    size_t v63 = BYTE6(v19);
                    int64_t v62 = __s2;
                    unint64_t v64 = v47;
LABEL_131:
                    int v77 = memcmp(v64, v62, v63);
                    goto LABEL_159;
                  }
                  if (v37 == 1)
                  {
                    if (v20 >> 32 < (int)v20) {
                      goto LABEL_185;
                    }
                    swift_retain();
                    uint64_t v49 = sub_251F34770();
                    if (v49)
                    {
                      __s1 = v47;
                      uint64_t v50 = v49;
                      uint64_t v51 = sub_251F347A0();
                      if (__OFSUB__((int)v20, v51)) {
                        goto LABEL_193;
                      }
                      int64_t v52 = (const void *)(v50 + (int)v20 - v51);
                      char v47 = __s1;
                    }
                    else
                    {
                      int64_t v52 = 0;
                    }
                    uint64_t v94 = sub_251F34790();
                    if (v94 >= (v20 >> 32) - (int)v20) {
                      size_t v95 = (v20 >> 32) - (int)v20;
                    }
                    else {
                      size_t v95 = v94;
                    }
                    if (!v47) {
                      goto LABEL_205;
                    }
                    if (!v52) {
                      goto LABEL_206;
                    }
                    int v77 = memcmp(v47, v52, v95);
                    sub_251A1AD70(v20, v19, 4);
                    goto LABEL_159;
                  }
                  uint64_t v85 = *(void *)(v20 + 16);
                  __s1c = *(char **)(v20 + 24);
                  swift_retain();
                  swift_retain();
                  uint64_t v86 = sub_251F34770();
                  if (v86)
                  {
                    uint64_t v87 = sub_251F347A0();
                    if (__OFSUB__(v85, v87)) {
                      goto LABEL_192;
                    }
                    v86 += v85 - v87;
                  }
                  BOOL v41 = __OFSUB__(__s1c, v85);
                  uint64_t v88 = &__s1c[-v85];
                  if (v41) {
                    goto LABEL_187;
                  }
                  uint64_t v89 = sub_251F34790();
                  if (v89 >= (uint64_t)v88) {
                    size_t v90 = (size_t)v88;
                  }
                  else {
                    size_t v90 = v89;
                  }
                  if (!v47) {
                    goto LABEL_201;
                  }
                  if (!v86) {
                    goto LABEL_202;
                  }
                  size_t v74 = v90;
                  int v75 = v47;
                  int v76 = (const void *)v86;
LABEL_142:
                  int v91 = memcmp(v75, v76, v74);
                  swift_release();
                  swift_release();
                  sub_251A1AD70(v28, v27, 4);
                  sub_251A1AD70(v20, v19, 4);
                  sub_251A1AD70(v28, v27, 4);
                  sub_251A1AD70(v20, v19, 4);
                  a1 = v16;
                  int64_t v2 = v105;
                  if (v91) {
                    return 0;
                  }
                  continue;
                case 2uLL:
                  __s1a = *(char **)(v28 + 16);
                  sub_251A1A870(v20, v19, 4);
                  sub_251A1A870(v28, v27, 4);
                  swift_retain();
                  swift_retain();
                  unsigned int v53 = (char *)sub_251F34770();
                  if (!v53) {
                    goto LABEL_85;
                  }
                  uint64_t v54 = sub_251F347A0();
                  if (__OFSUB__(__s1a, v54)) {
                    goto LABEL_176;
                  }
                  unsigned int v53 = &__s1a[(void)v53 - v54];
LABEL_85:
                  sub_251F34790();
                  if (!v37)
                  {
                    __s2[0] = v20;
                    LOWORD(__s2[1]) = v19;
                    BYTE2(__s2[1]) = BYTE2(v19);
                    BYTE3(__s2[1]) = BYTE3(v19);
                    BYTE4(__s2[1]) = BYTE4(v19);
                    BYTE5(__s2[1]) = BYTE5(v19);
                    if (!v53) {
                      goto LABEL_197;
                    }
                    int v77 = memcmp(v53, __s2, BYTE6(v19));
                    goto LABEL_151;
                  }
                  __s1b = v53;
                  if (v37 == 1)
                  {
                    if (v20 >> 32 < (int)v20) {
                      goto LABEL_180;
                    }
                    swift_retain();
                    uint64_t v55 = sub_251F34770();
                    if (v55)
                    {
                      uint64_t v56 = v55;
                      uint64_t v57 = sub_251F347A0();
                      if (__OFSUB__((int)v20, v57)) {
                        goto LABEL_191;
                      }
                      uint64_t v58 = (const void *)(v56 + (int)v20 - v57);
                    }
                    else
                    {
                      uint64_t v58 = 0;
                    }
                    uint64_t v92 = sub_251F34790();
                    if (v92 >= (v20 >> 32) - (int)v20) {
                      size_t v93 = (v20 >> 32) - (int)v20;
                    }
                    else {
                      size_t v93 = v92;
                    }
                    if (!v53) {
                      goto LABEL_203;
                    }
                    if (!v58) {
                      goto LABEL_204;
                    }
                    int v77 = memcmp(v53, v58, v93);
                    sub_251A1AD70(v20, v19, 4);
LABEL_151:
                    swift_release();
                    swift_release();
LABEL_159:
                    sub_251A1AD70(v28, v27, 4);
                    sub_251A1AD70(v20, v19, 4);
                    sub_251A1AD70(v28, v27, 4);
                    sub_251A1AD70(v20, v19, 4);
                    a1 = v16;
                    int64_t v2 = v105;
                    if (v77) {
                      return 0;
                    }
                    continue;
                  }
                  uint64_t v78 = *(void *)(v20 + 16);
                  uint64_t v97 = *(void *)(v20 + 24);
                  swift_retain();
                  swift_retain();
                  uint64_t v79 = (char *)sub_251F34770();
                  if (v79)
                  {
                    uint64_t v80 = sub_251F347A0();
                    if (__OFSUB__(v78, v80)) {
                      goto LABEL_190;
                    }
                    v79 += v78 - v80;
                  }
                  BOOL v41 = __OFSUB__(v97, v78);
                  int64_t v81 = v97 - v78;
                  if (v41) {
                    goto LABEL_186;
                  }
                  uint64_t v82 = sub_251F34790();
                  if (v82 >= v81) {
                    size_t v83 = v81;
                  }
                  else {
                    size_t v83 = v82;
                  }
                  if (!__s1b) {
                    goto LABEL_198;
                  }
                  if (!v79) {
                    goto LABEL_199;
                  }
                  int v84 = memcmp(__s1b, v79, v83);
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_release();
                  sub_251A1AD70(v28, v27, 4);
                  sub_251A1AD70(v20, v19, 4);
                  sub_251A1AD70(v28, v27, 4);
                  sub_251A1AD70(v20, v19, 4);
                  a1 = v16;
                  int64_t v2 = v105;
                  if (v84) {
                    return 0;
                  }
                  break;
                case 3uLL:
                  memset(__s2, 0, 14);
                  if (!v37) {
                    goto LABEL_100;
                  }
                  if (v37 == 1)
                  {
                    uint64_t v42 = (v20 >> 32) - (int)v20;
                    if (v20 >> 32 < (int)v20) {
                      goto LABEL_179;
                    }
                    sub_251A1A870(v20, v19, 4);
                    sub_251A1A870(v28, v27, 4);
                    uint64_t v59 = sub_251F34770();
                    if (!v59) {
                      goto LABEL_207;
                    }
                    uint64_t v44 = v59;
                    uint64_t v60 = sub_251F347A0();
                    uint64_t v46 = (int)v20 - v60;
                    if (__OFSUB__((int)v20, v60)) {
                      goto LABEL_184;
                    }
LABEL_96:
                    uint64_t v61 = sub_251F34790();
                    int64_t v62 = (uint64_t *)(v44 + v46);
                    if (v61 >= v42) {
                      size_t v63 = v42;
                    }
                    else {
                      size_t v63 = v61;
                    }
                    unint64_t v64 = __s2;
                    goto LABEL_131;
                  }
                  uint64_t v72 = *(void *)(v20 + 16);
                  uint64_t v71 = *(void *)(v20 + 24);
                  sub_251A1A870(v20, v19, 4);
                  sub_251A1A870(v28, v27, 4);
                  swift_retain();
                  swift_retain();
                  uint64_t v67 = sub_251F34770();
                  if (v67)
                  {
                    uint64_t v73 = sub_251F347A0();
                    if (__OFSUB__(v72, v73)) {
                      goto LABEL_189;
                    }
                    v67 += v72 - v73;
                  }
                  BOOL v41 = __OFSUB__(v71, v72);
                  int64_t v69 = v71 - v72;
                  if (v41) {
                    goto LABEL_182;
                  }
                  uint64_t v70 = sub_251F34790();
                  if (!v67) {
                    goto LABEL_196;
                  }
LABEL_112:
                  if (v70 >= v69) {
                    size_t v74 = v69;
                  }
                  else {
                    size_t v74 = v70;
                  }
                  int v75 = __s2;
                  int v76 = (const void *)v67;
                  goto LABEL_142;
                default:
                  __s2[0] = v28;
                  LOWORD(__s2[1]) = v27;
                  BYTE2(__s2[1]) = BYTE2(v27);
                  BYTE3(__s2[1]) = BYTE3(v27);
                  BYTE4(__s2[1]) = BYTE4(v27);
                  BYTE5(__s2[1]) = BYTE5(v27);
                  if (!v37)
                  {
LABEL_100:
                    uint64_t v106 = v20;
                    __int16 v107 = v19;
                    char v108 = BYTE2(v19);
                    char v109 = BYTE3(v19);
                    char v110 = BYTE4(v19);
                    char v111 = BYTE5(v19);
                    sub_251A1A870(v20, v19, 4);
                    sub_251A1A870(v28, v27, 4);
                    unint64_t v64 = __s2;
                    int64_t v62 = &v106;
                    size_t v63 = BYTE6(v19);
                    goto LABEL_131;
                  }
                  if (v37 == 1)
                  {
                    uint64_t v42 = (v20 >> 32) - (int)v20;
                    if (v20 >> 32 < (int)v20) {
                      goto LABEL_178;
                    }
                    sub_251A1A870(v20, v19, 4);
                    sub_251A1A870(v28, v27, 4);
                    uint64_t v43 = sub_251F34770();
                    if (!v43)
                    {
                      sub_251F34790();
                      __break(1u);
LABEL_195:
                      __break(1u);
LABEL_196:
                      __break(1u);
LABEL_197:
                      __break(1u);
LABEL_198:
                      __break(1u);
LABEL_199:
                      __break(1u);
LABEL_200:
                      __break(1u);
LABEL_201:
                      __break(1u);
LABEL_202:
                      __break(1u);
LABEL_203:
                      __break(1u);
LABEL_204:
                      __break(1u);
LABEL_205:
                      __break(1u);
LABEL_206:
                      __break(1u);
LABEL_207:
                      sub_251F34790();
                      __break(1u);
                      JUMPOUT(0x251B03548);
                    }
                    uint64_t v44 = v43;
                    uint64_t v45 = sub_251F347A0();
                    uint64_t v46 = (int)v20 - v45;
                    if (__OFSUB__((int)v20, v45)) {
                      goto LABEL_183;
                    }
                    goto LABEL_96;
                  }
                  uint64_t v66 = *(void *)(v20 + 16);
                  uint64_t v65 = *(void *)(v20 + 24);
                  sub_251A1A870(v20, v19, 4);
                  sub_251A1A870(v28, v27, 4);
                  swift_retain();
                  swift_retain();
                  uint64_t v67 = sub_251F34770();
                  if (v67)
                  {
                    uint64_t v68 = sub_251F347A0();
                    if (__OFSUB__(v66, v68)) {
                      goto LABEL_188;
                    }
                    v67 += v66 - v68;
                  }
                  BOOL v41 = __OFSUB__(v65, v66);
                  int64_t v69 = v65 - v66;
                  if (v41) {
                    goto LABEL_181;
                  }
                  uint64_t v70 = sub_251F34790();
                  if (!v67) {
                    goto LABEL_195;
                  }
                  goto LABEL_112;
              }
              break;
            case 2uLL:
              uint64_t v40 = *(void *)(v20 + 16);
              uint64_t v39 = *(void *)(v20 + 24);
              BOOL v41 = __OFSUB__(v39, v40);
              uint64_t v38 = v39 - v40;
              if (!v41) {
                goto LABEL_62;
              }
              goto LABEL_174;
            case 3uLL:
              if (!v31) {
                goto LABEL_7;
              }
              goto LABEL_168;
            default:
              uint64_t v38 = BYTE6(v19);
              goto LABEL_62;
          }
          continue;
        }
        sub_251A1A894(*(void *)v26, *(void *)(v26 + 8));
        sub_251A1A894(v28, v27);
LABEL_164:
        sub_251A1A870(v20, v19, v21);
        sub_251A1AD70(v28, v27, v29);
        sub_251A1AD70(v20, v19, v21);
LABEL_165:
        sub_251A1AD70(v28, v27, v29);
LABEL_166:
        sub_251A1AD70(v20, v19, v21);
        return 0;
      case 5:
        if (v21 != 5 || (v19 | v20) != 0) {
          goto LABEL_164;
        }
        sub_251A1AD70(v28, v27, 5);
        uint64_t v6 = 0;
        unint64_t v7 = 0;
        char v8 = 5;
        goto LABEL_8;
      default:
        if (v21) {
          goto LABEL_164;
        }
        sub_251A1AD70(*(void *)v26, *(void *)(v26 + 8), 0);
        sub_251A1AD70(v20, v19, 0);
        a1 = v16;
        int64_t v2 = v105;
        if (((v20 ^ ((v28 & 1) == 0)) & 1) == 0) {
          return 0;
        }
        continue;
    }
  }
}

uint64_t sub_251B03590(uint64_t a1, uint64_t a2)
{
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v42 = a1;
  uint64_t v3 = *(void *)(a1 + 64);
  uint64_t v40 = a1 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & v3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D050);
  v39[1] = v39;
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  unint64_t v45 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v46 = v9;
  uint64_t v44 = (uint64_t)v39 - v45;
  int64_t v47 = 0;
  int64_t v41 = (unint64_t)(v4 + 63) >> 6;
  v39[0] = v41 - 1;
  unint64_t v10 = (uint64_t *)&unk_269B9D058;
  while (1)
  {
    uint64_t result = MEMORY[0x270FA5388](v8);
    int64_t v12 = (char *)v39 - v45;
    if (v6)
    {
      unint64_t v13 = __clz(__rbit64(v6));
      uint64_t v14 = (v6 - 1) & v6;
      unint64_t v15 = v13 | (v47 << 6);
LABEL_8:
      uint64_t v16 = v42;
      uint64_t v17 = *(void *)(v42 + 48);
      uint64_t v18 = sub_251F34DA0();
      (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v12, v17 + *(void *)(*(void *)(v18 - 8) + 72) * v15, v18);
      LOBYTE(v17) = *(unsigned char *)(*(void *)(v16 + 56) + v15);
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(v10);
      v12[*(int *)(v19 + 48)] = v17;
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v12, 0, 1, v19);
      goto LABEL_27;
    }
    int64_t v20 = v47 + 1;
    if (__OFADD__(v47, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v20 < v41)
    {
      unint64_t v21 = *(void *)(v40 + 8 * v20);
      if (v21) {
        goto LABEL_12;
      }
      int64_t v22 = v47 + 2;
      ++v47;
      if (v20 + 1 < v41)
      {
        unint64_t v21 = *(void *)(v40 + 8 * v22);
        if (v21) {
          goto LABEL_15;
        }
        int64_t v47 = v20 + 1;
        if (v20 + 2 < v41)
        {
          unint64_t v21 = *(void *)(v40 + 8 * (v20 + 2));
          if (v21)
          {
            v20 += 2;
            goto LABEL_12;
          }
          int64_t v22 = v20 + 3;
          int64_t v47 = v20 + 2;
          if (v20 + 3 < v41) {
            break;
          }
        }
      }
    }
LABEL_26:
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(v10);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v12, 1, 1, v23);
    uint64_t v14 = 0;
LABEL_27:
    uint64_t v24 = v44;
    sub_251A4ECF0((uint64_t)v12, v44, &qword_269B9D050);
    uint64_t v25 = v24;
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(v10);
    BOOL v27 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 48))(v24, 1, v26) == 1;
    uint64_t result = v27;
    if (v27) {
      return result;
    }
    BOOL v43 = v27;
    unint64_t v28 = v14;
    char v29 = v10;
    uint64_t v30 = sub_251F34DA0();
    uint64_t v31 = *(void *)(v30 - 8);
    MEMORY[0x270FA5388](v30);
    char v33 = (char *)v39 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v34 = *(int *)(v26 + 48);
    (*(void (**)(char *, uint64_t, uint64_t))(v31 + 32))(v33, v25, v30);
    int v35 = *(unsigned __int8 *)(v25 + v34);
    unint64_t v36 = sub_2519FE584((uint64_t)v33);
    char v38 = v37;
    uint64_t v8 = (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v33, v30);
    if ((v38 & 1) == 0 || v35 != *(unsigned __int8 *)(*(void *)(a2 + 56) + v36)) {
      return v43;
    }
    unint64_t v10 = v29;
    unint64_t v6 = v28;
  }
  unint64_t v21 = *(void *)(v40 + 8 * v22);
  if (v21)
  {
LABEL_15:
    int64_t v20 = v22;
LABEL_12:
    uint64_t v14 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v20 << 6);
    int64_t v47 = v20;
    goto LABEL_8;
  }
  while (1)
  {
    int64_t v20 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v20 >= v41)
    {
      int64_t v47 = v39[0];
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v40 + 8 * v20);
    ++v22;
    if (v21) {
      goto LABEL_12;
    }
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_251B03A28(uint64_t a1, uint64_t a2)
{
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v44 = a1;
  uint64_t v3 = *(void *)(a1 + 64);
  uint64_t v42 = a1 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & v3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9D040);
  v41[1] = v41;
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  unint64_t v47 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v48 = v9;
  uint64_t v46 = (uint64_t)v41 - v47;
  int64_t v49 = 0;
  int64_t v43 = (unint64_t)(v4 + 63) >> 6;
  v41[0] = v43 - 1;
  unint64_t v10 = (uint64_t *)&unk_269B9D048;
  while (1)
  {
    uint64_t result = MEMORY[0x270FA5388](v8);
    int64_t v12 = (char *)v41 - v47;
    if (v6)
    {
      unint64_t v13 = __clz(__rbit64(v6));
      uint64_t v14 = (v6 - 1) & v6;
      unint64_t v15 = v13 | (v49 << 6);
LABEL_9:
      uint64_t v16 = v44;
      uint64_t v17 = *(void *)(v44 + 48);
      uint64_t v18 = sub_251F34DA0();
      (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v12, v17 + *(void *)(*(void *)(v18 - 8) + 72) * v15, v18);
      char v19 = *(unsigned char *)(*(void *)(v16 + 56) + v15);
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(v10);
      v12[*(int *)(v20 + 48)] = v19;
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v12, 0, 1, v20);
      goto LABEL_28;
    }
    int64_t v21 = v49 + 1;
    if (__OFADD__(v49, 1))
    {
      __break(1u);
      goto LABEL_42;
    }
    if (v21 < v43)
    {
      unint64_t v22 = *(void *)(v42 + 8 * v21);
      if (v22) {
        goto LABEL_13;
      }
      int64_t v23 = v49 + 2;
      ++v49;
      if (v21 + 1 < v43)
      {
        unint64_t v22 = *(void *)(v42 + 8 * v23);
        if (v22) {
          goto LABEL_16;
        }
        int64_t v49 = v21 + 1;
        if (v21 + 2 < v43)
        {
          unint64_t v22 = *(void *)(v42 + 8 * (v21 + 2));
          if (v22)
          {
            v21 += 2;
            goto LABEL_13;
          }
          int64_t v23 = v21 + 3;
          int64_t v49 = v21 + 2;
          if (v21 + 3 < v43) {
            break;
          }
        }
      }
    }
LABEL_27:
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(v10);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v12, 1, 1, v24);
    uint64_t v14 = 0;
LABEL_28:
    uint64_t v25 = v46;
    sub_251A4ECF0((uint64_t)v12, v46, &qword_269B9D040);
    uint64_t v26 = v25;
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(v10);
    BOOL v28 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 48))(v25, 1, v27) == 1;
    uint64_t result = v28;
    if (v28) {
      return result;
    }
    BOOL v45 = v28;
    unint64_t v29 = v14;
    uint64_t v30 = v10;
    uint64_t v31 = sub_251F34DA0();
    uint64_t v32 = *(void *)(v31 - 8);
    MEMORY[0x270FA5388](v31);
    uint64_t v34 = (char *)v41 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v35 = *(int *)(v27 + 48);
    (*(void (**)(char *, uint64_t, uint64_t))(v32 + 32))(v34, v26, v31);
    int v36 = *(unsigned __int8 *)(v26 + v35);
    unint64_t v37 = sub_2519FE584((uint64_t)v34);
    char v39 = v38;
    uint64_t v8 = (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v34, v31);
    if ((v39 & 1) == 0) {
      return v45;
    }
    char v40 = *(unsigned char *)(*(void *)(a2 + 56) + v37);
    if (v40 < 0)
    {
      if ((v36 & 0x80) == 0 || (v36 & 1) == ((v40 & 1) == 0)) {
        return v45;
      }
    }
    else if ((v36 & 0x80) != 0 || ((v36 ^ ((v40 & 1) == 0)) & 1) == 0)
    {
      return v45;
    }
    unint64_t v10 = v30;
    unint64_t v6 = v29;
  }
  unint64_t v22 = *(void *)(v42 + 8 * v23);
  if (v22)
  {
LABEL_16:
    int64_t v21 = v23;
LABEL_13:
    uint64_t v14 = (v22 - 1) & v22;
    unint64_t v15 = __clz(__rbit64(v22)) + (v21 << 6);
    int64_t v49 = v21;
    goto LABEL_9;
  }
  while (1)
  {
    int64_t v21 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v21 >= v43)
    {
      int64_t v49 = v41[0];
      goto LABEL_27;
    }
    unint64_t v22 = *(void *)(v42 + 8 * v21);
    ++v23;
    if (v22) {
      goto LABEL_13;
    }
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_251B03EF0(uint64_t a1, uint64_t a2)
{
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = a1 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a1 + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  if (v8) {
    goto LABEL_9;
  }
  while (2)
  {
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_58;
    }
    if (v12 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v4;
    if (v13) {
      goto LABEL_25;
    }
    int64_t v4 = v12 + 1;
    if (v12 + 1 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    if (v13) {
      goto LABEL_25;
    }
    int64_t v4 = v12 + 2;
    if (v12 + 2 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    if (v13) {
      goto LABEL_25;
    }
    int64_t v4 = v12 + 3;
    if (v12 + 3 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    if (v13) {
      goto LABEL_25;
    }
    int64_t v14 = v12 + 4;
    if (v14 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v14);
    if (!v13)
    {
      while (1)
      {
        int64_t v4 = v14 + 1;
        if (__OFADD__(v14, 1)) {
          break;
        }
        if (v4 >= v9) {
          return 1;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v4);
        ++v14;
        if (v13) {
          goto LABEL_25;
        }
      }
LABEL_58:
      __break(1u);
      JUMPOUT(0x251B04294);
    }
    int64_t v4 = v14;
LABEL_25:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_26:
    unint64_t v15 = (unsigned int *)(*(void *)(a1 + 48) + 8 * v11);
    uint64_t v16 = *(void *)(a1 + 56) + 16 * v11;
    uint64_t v17 = *(void *)v16;
    int v18 = *(unsigned __int8 *)(v16 + 8);
    unint64_t v19 = sub_2519FE6D0(*v15 | ((unint64_t)*((unsigned __int8 *)v15 + 4) << 32));
    if ((v20 & 1) == 0)
    {
      sub_251A1A4B8(v17, v18);
      goto LABEL_55;
    }
    uint64_t v21 = *(void *)(a2 + 56) + 16 * v19;
    uint64_t v22 = *(void *)v21;
    char v23 = *(unsigned char *)(v21 + 8);
    switch(v23)
    {
      case 1:
        if (v18 != 1) {
          goto LABEL_53;
        }
        sub_251A1A4B8(v17, 1);
        sub_251A4EBDC(v22, 1);
        uint64_t v24 = v17;
        char v25 = 1;
        goto LABEL_7;
      case 2:
        if (v18 != 2) {
          goto LABEL_53;
        }
        sub_251A1A4B8(v17, 2);
        sub_251A4EBDC(v22, 2);
        uint64_t v24 = v17;
        char v25 = 2;
LABEL_7:
        sub_251A4EBDC(v24, v25);
        if (v22 == v17) {
          goto LABEL_8;
        }
        return 0;
      case 3:
        if (v18 == 3)
        {
          uint64_t v26 = *(void *)(v22 + 16);
          if (v26 != *(void *)(v17 + 16)) {
            goto LABEL_49;
          }
          if (v26) {
            BOOL v27 = v22 == v17;
          }
          else {
            BOOL v27 = 1;
          }
          if (!v27)
          {
            if (*(_DWORD *)(v22 + 32) != *(_DWORD *)(v17 + 32)) {
              goto LABEL_49;
            }
            if (v26 != 1)
            {
              if (*(_DWORD *)(v22 + 36) != *(_DWORD *)(v17 + 36))
              {
LABEL_49:
                LOBYTE(v18) = 3;
                sub_251A1A4B8(v17, 3);
                sub_251A1A4B8(v22, 3);
                uint64_t v34 = v22;
                char v35 = 3;
                goto LABEL_54;
              }
              BOOL v28 = (int *)(v22 + 40);
              unint64_t v29 = (int *)(v17 + 40);
              uint64_t v30 = v26 - 2;
              while (v30)
              {
                int v32 = *v28++;
                int v31 = v32;
                int v33 = *v29++;
                --v30;
                if (v31 != v33) {
                  goto LABEL_49;
                }
              }
            }
          }
          sub_251A1A4B8(v17, 3);
          sub_251A1A4B8(v22, 3);
          sub_251A4EBDC(v22, 3);
          sub_251A4EBDC(v17, 3);
          if (!v8) {
            continue;
          }
LABEL_9:
          unint64_t v10 = __clz(__rbit64(v8));
          v8 &= v8 - 1;
          unint64_t v11 = v10 | (v4 << 6);
          goto LABEL_26;
        }
        sub_251A1A4B8(*(void *)v21, 3);
        swift_bridgeObjectRetain();
LABEL_53:
        sub_251A1A4B8(v17, v18);
        sub_251A1A4B8(v17, v18);
        sub_251A4EBDC(v22, v23);
        sub_251A4EBDC(v17, v18);
        uint64_t v34 = v22;
        char v35 = v23;
LABEL_54:
        sub_251A4EBDC(v34, v35);
LABEL_55:
        sub_251A4EBDC(v17, v18);
        return 0;
      default:
        if (v18) {
          goto LABEL_53;
        }
        sub_251A1A4B8(v17, 0);
        sub_251A4EBDC(v22, 0);
        sub_251A4EBDC(v17, 0);
        if (((v17 ^ ((v22 & 1) == 0)) & 1) == 0) {
          return 0;
        }
LABEL_8:
        if (v8) {
          goto LABEL_9;
        }
        continue;
    }
  }
}

uint64_t sub_251B042A4(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v2 = a2;
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v44 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v40 = result;
  uint64_t v41 = a2;
  uint64_t v39 = result + 64;
  if (!v8) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v9 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v9 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v12)) + (v4 << 6))
  {
    uint64_t v14 = *(void *)(*(void *)(v3 + 56) + 8 * i);
    unsigned __int8 v15 = *(unsigned char *)(*(void *)(v3 + 48) + i);
    swift_bridgeObjectRetain();
    unint64_t v16 = sub_2519FE754(v15);
    if ((v17 & 1) == 0
      || (uint64_t v18 = *(void *)(*(void *)(*(void *)(v2 + 56) + 8 * v16) + 16), v19 = v14, v18 != *(void *)(v14 + 16)))
    {
LABEL_37:
      swift_bridgeObjectRelease();
      return 0;
    }
    if (!v18
      || (uint64_t v20 = *(void *)(*(void *)(v2 + 56) + 8 * v16),
          uint64_t v51 = sub_251F34DA0(),
          uint64_t v21 = *(void *)(v51 - 8),
          v20 == v19))
    {
      uint64_t result = swift_bridgeObjectRelease();
      if (v8) {
        goto LABEL_6;
      }
    }
    else
    {
      unint64_t v42 = v8;
      int64_t v43 = v4;
      unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
      uint64_t v23 = v21 + 16;
      uint64_t v24 = *(void (**)(char *, unint64_t, uint64_t))(v21 + 16);
      uint64_t v25 = *(void *)(v21 + 64);
      uint64_t v45 = *(void *)(v21 + 72);
      int64_t v49 = (void (**)(char *, uint64_t))(v21 + 8);
      uint64_t v50 = v25;
      uint64_t v26 = swift_bridgeObjectRetain();
      uint64_t v27 = v20;
      unint64_t v28 = 0;
      uint64_t v29 = v23;
      uint64_t v46 = v18;
      uint64_t v47 = v19;
      uint64_t v48 = v27;
      do
      {
        unsigned int v53 = &v38;
        uint64_t v30 = v50;
        MEMORY[0x270FA5388](v26);
        int v31 = (char *)&v38 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
        uint64_t v32 = v51;
        v24(v31, v27 + v22, v51);
        uint64_t result = MEMORY[0x270FA5388](&v38);
        if (v28 >= *(void *)(v19 + 16))
        {
          __break(1u);
          goto LABEL_42;
        }
        unint64_t v33 = v19 + v22;
        uint64_t v34 = v32;
        uint64_t v35 = v32;
        uint64_t v36 = v29;
        v24(v31, v33, v34);
        sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
        int v52 = sub_251F35650();
        unint64_t v37 = *v49;
        (*v49)(v31, v35);
        uint64_t v26 = ((uint64_t (*)(char *, uint64_t))v37)(v31, v35);
        if ((v52 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          goto LABEL_37;
        }
        ++v28;
        v22 += v45;
        uint64_t v19 = v47;
        uint64_t v27 = v48;
        uint64_t v29 = v36;
      }
      while (v46 != v28);
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v3 = v40;
      uint64_t v2 = v41;
      uint64_t v5 = v39;
      unint64_t v8 = v42;
      int64_t v4 = v43;
      if (v42) {
        goto LABEL_6;
      }
    }
LABEL_7:
    int64_t v11 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    if (v11 >= v44) {
      return 1;
    }
    unint64_t v12 = *(void *)(v5 + 8 * v11);
    ++v4;
    if (!v12)
    {
      int64_t v4 = v11 + 1;
      if (v11 + 1 >= v44) {
        return 1;
      }
      unint64_t v12 = *(void *)(v5 + 8 * v4);
      if (!v12)
      {
        int64_t v4 = v11 + 2;
        if (v11 + 2 >= v44) {
          return 1;
        }
        unint64_t v12 = *(void *)(v5 + 8 * v4);
        if (!v12)
        {
          int64_t v4 = v11 + 3;
          if (v11 + 3 >= v44) {
            return 1;
          }
          unint64_t v12 = *(void *)(v5 + 8 * v4);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v8 = (v12 - 1) & v12;
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v44) {
    return 1;
  }
  unint64_t v12 = *(void *)(v5 + 8 * v13);
  if (v12)
  {
    int64_t v4 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v4 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v4 >= v44) {
      return 1;
    }
    unint64_t v12 = *(void *)(v5 + 8 * v4);
    ++v13;
    if (v12) {
      goto LABEL_22;
    }
  }
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_251B04694(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_24;
    }
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v12 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v9) {
        return 1;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v4);
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v9) {
          return 1;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v4);
        if (!v13)
        {
          int64_t v4 = v12 + 3;
          if (v12 + 3 >= v9) {
            return 1;
          }
          unint64_t v13 = *(void *)(v5 + 8 * v4);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_24:
    unsigned __int8 v15 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v11);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    double v18 = *(double *)(*(void *)(v3 + 56) + 8 * v11);
    swift_bridgeObjectRetain();
    unint64_t v19 = sub_2519FE798(v16, v17);
    char v21 = v20;
    uint64_t result = swift_bridgeObjectRelease();
    if ((v21 & 1) == 0 || *(double *)(*(void *)(a2 + 56) + 8 * v19) != v18) {
      return 0;
    }
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v9) {
    return 1;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_23;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_251B04848(uint64_t a1, uint64_t a2)
{
  if (a1 == a2) {
    return 1;
  }
  uint64_t v2 = a2;
  uint64_t v3 = a1;
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v4 = *(void *)(a1 + 56);
  uint64_t v41 = a1 + 56;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & v4;
  uint64_t v8 = sub_251F34DA0();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
  uint64_t v40 = &v37;
  uint64_t result = MEMORY[0x270FA5388](v9 - 8);
  int64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v13 = 0;
  int64_t v42 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v52 = v2 + 56;
  uint64_t v38 = v12;
  uint64_t v39 = v3;
  uint64_t v37 = v8 - 8;
  if (!v7) {
    goto LABEL_9;
  }
LABEL_7:
  unint64_t v14 = __clz(__rbit64(v7));
  uint64_t v15 = (v7 - 1) & v7;
  for (unint64_t i = v14 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v13 << 6))
  {
    uint64_t v20 = *(void *)(v3 + 48);
    uint64_t v21 = *(void *)(v8 - 8);
    uint64_t v22 = v21;
    uint64_t v51 = *(void *)(v21 + 72);
    uint64_t v24 = v21 + 16;
    uint64_t v23 = *(void (**)(char *, unint64_t, uint64_t))(v21 + 16);
    uint64_t v49 = v24;
    uint64_t v50 = v23;
    v23(v12, v20 + v51 * i, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v12, 0, 1, v8);
    uint64_t v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48))(v12, 1, v8);
    if (v25 == 1) {
      return 1;
    }
    unint64_t v44 = v15;
    int64_t v45 = v13;
    uint64_t v46 = &v37;
    MEMORY[0x270FA5388](v25);
    unint64_t v47 = (v26 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v48 = v26;
    uint64_t v27 = (char *)&v37 - v47;
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))((char *)&v37 - v47, v12, v8);
    sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
    uint64_t v28 = sub_251F35600();
    uint64_t v29 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v30 = v28 & ~v29;
    int v31 = (void (**)(char *, uint64_t))(v22 + 8);
    if (((*(void *)(v52 + ((v30 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v30) & 1) == 0) {
      break;
    }
    uint64_t v43 = (unint64_t)v31 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    uint64_t v32 = v2;
    uint64_t v33 = ~v29;
    while (1)
    {
      MEMORY[0x270FA5388](v28);
      uint64_t v34 = (char *)&v37 - v47;
      v50((char *)&v37 - v47, *(void *)(v32 + 48) + v30 * v51, v8);
      sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
      char v35 = sub_251F35650();
      uint64_t v36 = *v31;
      uint64_t v28 = ((uint64_t (*)(char *, uint64_t))*v31)(v34, v8);
      if (v35) {
        break;
      }
      unint64_t v30 = (v30 + 1) & v33;
      if (((*(void *)(v52 + ((v30 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v30) & 1) == 0)
      {
        v36(v27, v8);
        return 0;
      }
    }
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v36)(v27, v8);
    int64_t v13 = v45;
    uint64_t v2 = v32;
    int64_t v12 = v38;
    uint64_t v3 = v39;
    unint64_t v7 = v44;
    if (v44) {
      goto LABEL_7;
    }
LABEL_9:
    int64_t v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
LABEL_38:
      __break(1u);
      return result;
    }
    if (v17 >= v42) {
      goto LABEL_35;
    }
    unint64_t v18 = *(void *)(v41 + 8 * v17);
    ++v13;
    if (!v18)
    {
      int64_t v13 = v17 + 1;
      if (v17 + 1 >= v42) {
        goto LABEL_35;
      }
      unint64_t v18 = *(void *)(v41 + 8 * v13);
      if (!v18)
      {
        int64_t v13 = v17 + 2;
        if (v17 + 2 >= v42) {
          goto LABEL_35;
        }
        unint64_t v18 = *(void *)(v41 + 8 * v13);
        if (!v18)
        {
          int64_t v19 = v17 + 3;
          if (v19 >= v42)
          {
LABEL_35:
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v12, 1, 1, v8);
            return 1;
          }
          unint64_t v18 = *(void *)(v41 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              int64_t v13 = v19 + 1;
              if (__OFADD__(v19, 1)) {
                goto LABEL_38;
              }
              if (v13 >= v42) {
                goto LABEL_35;
              }
              unint64_t v18 = *(void *)(v41 + 8 * v13);
              ++v19;
              if (v18) {
                goto LABEL_22;
              }
            }
          }
          int64_t v13 = v19;
        }
      }
    }
LABEL_22:
    uint64_t v15 = (v18 - 1) & v18;
  }
  (*v31)(v27, v8);
  return 0;
}

uint64_t sub_251B04D30(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v29 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v30 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v7 = a2 + 56;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      int64_t v31 = v3;
      unint64_t v9 = v8 | (v3 << 6);
      goto LABEL_24;
    }
    int64_t v10 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_43;
    }
    if (v10 >= v30) {
      return 1;
    }
    unint64_t v11 = *(void *)(v29 + 8 * v10);
    int64_t v12 = v3 + 1;
    if (!v11)
    {
      int64_t v12 = v3 + 2;
      if (v3 + 2 >= v30) {
        return 1;
      }
      unint64_t v11 = *(void *)(v29 + 8 * v12);
      if (!v11)
      {
        int64_t v12 = v3 + 3;
        if (v3 + 3 >= v30) {
          return 1;
        }
        unint64_t v11 = *(void *)(v29 + 8 * v12);
        if (!v11) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v11 - 1) & v11;
    int64_t v31 = v12;
    unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_24:
    uint64_t v14 = result;
    uint64_t v15 = (uint64_t *)(*(void *)(result + 48) + 16 * v9);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    sub_251F36CA0();
    swift_bridgeObjectRetain();
    sub_251F357B0();
    uint64_t v18 = sub_251F36D00();
    uint64_t v19 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v20 = v18 & ~v19;
    if (((*(void *)(v7 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
      goto LABEL_39;
    }
    uint64_t v21 = *(void *)(a2 + 48);
    uint64_t v22 = (void *)(v21 + 16 * v20);
    BOOL v23 = *v22 == v17 && v22[1] == v16;
    if (!v23 && (sub_251F36B10() & 1) == 0)
    {
      uint64_t v24 = ~v19;
      for (unint64_t i = v20 + 1; ; unint64_t i = v26 + 1)
      {
        uint64_t v26 = i & v24;
        if (((*(void *)(v7 + (((i & v24) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v24)) & 1) == 0) {
          break;
        }
        uint64_t v27 = (void *)(v21 + 16 * v26);
        BOOL v28 = *v27 == v17 && v27[1] == v16;
        if (v28 || (sub_251F36B10() & 1) != 0) {
          goto LABEL_7;
        }
      }
LABEL_39:
      swift_bridgeObjectRelease();
      return 0;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    uint64_t result = v14;
    int64_t v3 = v31;
  }
  uint64_t v13 = v3 + 4;
  if (v3 + 4 >= v30) {
    return 1;
  }
  unint64_t v11 = *(void *)(v29 + 8 * v13);
  if (v11)
  {
    int64_t v12 = v3 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v12 >= v30) {
      return 1;
    }
    unint64_t v11 = *(void *)(v29 + 8 * v12);
    ++v13;
    if (v11) {
      goto LABEL_23;
    }
  }
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_251B04FB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticAccessory(0) - 8;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  int64_t v10 = (char *)&v34 - v9;
  uint64_t result = MEMORY[0x270FA5388](v8);
  uint64_t v14 = (char *)&v34 - v13;
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v15 = 0;
  uint64_t v16 = *(void *)(a1 + 56);
  uint64_t v34 = a1;
  uint64_t v35 = a1 + 56;
  uint64_t v17 = 1 << *(unsigned char *)(a1 + 32);
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  else {
    uint64_t v18 = -1;
  }
  unint64_t v19 = v18 & v16;
  int64_t v36 = (unint64_t)(v17 + 63) >> 6;
  uint64_t v20 = a2 + 56;
  if (!v19) {
    goto LABEL_9;
  }
LABEL_7:
  uint64_t v37 = (v19 - 1) & v19;
  int64_t v38 = v15;
  for (unint64_t i = __clz(__rbit64(v19)) | (v15 << 6); ; unint64_t i = __clz(__rbit64(v23)) + (v24 << 6))
  {
    uint64_t v26 = v12;
    uint64_t v27 = *(void *)(v12 + 72);
    sub_251B25B74(*(void *)(a1 + 48) + v27 * i, (uint64_t)v14, type metadata accessor for StaticAccessory);
    BOOL v28 = v14;
    sub_251B25C90((uint64_t)v14, (uint64_t)v10, type metadata accessor for StaticAccessory);
    sub_251F36CA0();
    StaticAccessory.hash(into:)(v39);
    uint64_t v29 = sub_251F36D00();
    uint64_t v30 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v31 = v29 & ~v30;
    if (((*(void *)(v20 + ((v31 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v31) & 1) == 0)
    {
LABEL_27:
      sub_251B25BDC((uint64_t)v10, type metadata accessor for StaticAccessory);
      return 0;
    }
    uint64_t v32 = ~v30;
    while (1)
    {
      sub_251B25B74(*(void *)(a2 + 48) + v31 * v27, (uint64_t)v7, type metadata accessor for StaticAccessory);
      char v33 = static StaticAccessory.== infix(_:_:)(v7, v10);
      sub_251B25BDC((uint64_t)v7, type metadata accessor for StaticAccessory);
      if (v33) {
        break;
      }
      unint64_t v31 = (v31 + 1) & v32;
      if (((*(void *)(v20 + ((v31 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v31) & 1) == 0) {
        goto LABEL_27;
      }
    }
    uint64_t result = sub_251B25BDC((uint64_t)v10, type metadata accessor for StaticAccessory);
    a1 = v34;
    uint64_t v12 = v26;
    uint64_t v14 = v28;
    unint64_t v19 = v37;
    int64_t v15 = v38;
    if (v37) {
      goto LABEL_7;
    }
LABEL_9:
    int64_t v22 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v22 >= v36) {
      return 1;
    }
    unint64_t v23 = *(void *)(v35 + 8 * v22);
    int64_t v24 = v15 + 1;
    if (!v23)
    {
      int64_t v24 = v22 + 1;
      if (v22 + 1 >= v36) {
        return 1;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v24);
      if (!v23)
      {
        int64_t v24 = v22 + 2;
        if (v22 + 2 >= v36) {
          return 1;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23) {
          break;
        }
      }
    }
LABEL_22:
    uint64_t v37 = (v23 - 1) & v23;
    int64_t v38 = v24;
  }
  int64_t v25 = v22 + 3;
  if (v25 >= v36) {
    return 1;
  }
  unint64_t v23 = *(void *)(v35 + 8 * v25);
  if (v23)
  {
    int64_t v24 = v25;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v24 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v24 >= v36) {
      return 1;
    }
    unint64_t v23 = *(void *)(v35 + 8 * v24);
    ++v25;
    if (v23) {
      goto LABEL_22;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_251B05350(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticService() - 8;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  int64_t v10 = (char *)&v34 - v9;
  uint64_t result = MEMORY[0x270FA5388](v8);
  uint64_t v14 = (char *)&v34 - v13;
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v15 = 0;
  uint64_t v16 = *(void *)(a1 + 56);
  uint64_t v34 = a1;
  uint64_t v35 = a1 + 56;
  uint64_t v17 = 1 << *(unsigned char *)(a1 + 32);
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  else {
    uint64_t v18 = -1;
  }
  unint64_t v19 = v18 & v16;
  int64_t v36 = (unint64_t)(v17 + 63) >> 6;
  uint64_t v20 = a2 + 56;
  if (!v19) {
    goto LABEL_9;
  }
LABEL_7:
  uint64_t v37 = (v19 - 1) & v19;
  int64_t v38 = v15;
  for (unint64_t i = __clz(__rbit64(v19)) | (v15 << 6); ; unint64_t i = __clz(__rbit64(v23)) + (v24 << 6))
  {
    uint64_t v26 = v12;
    uint64_t v27 = *(void *)(v12 + 72);
    sub_251B25B74(*(void *)(a1 + 48) + v27 * i, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for StaticService);
    BOOL v28 = v14;
    sub_251B25C90((uint64_t)v14, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticService);
    sub_251F36CA0();
    StaticService.hash(into:)(v39);
    uint64_t v29 = sub_251F36D00();
    uint64_t v30 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v31 = v29 & ~v30;
    if (((*(void *)(v20 + ((v31 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v31) & 1) == 0)
    {
LABEL_27:
      sub_251B25BDC((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticService);
      return 0;
    }
    uint64_t v32 = ~v30;
    while (1)
    {
      sub_251B25B74(*(void *)(a2 + 48) + v31 * v27, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticService);
      char v33 = static StaticService.== infix(_:_:)(v7, v10);
      sub_251B25BDC((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for StaticService);
      if (v33) {
        break;
      }
      unint64_t v31 = (v31 + 1) & v32;
      if (((*(void *)(v20 + ((v31 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v31) & 1) == 0) {
        goto LABEL_27;
      }
    }
    uint64_t result = sub_251B25BDC((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for StaticService);
    a1 = v34;
    uint64_t v12 = v26;
    uint64_t v14 = v28;
    unint64_t v19 = v37;
    int64_t v15 = v38;
    if (v37) {
      goto LABEL_7;
    }
LABEL_9:
    int64_t v22 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v22 >= v36) {
      return 1;
    }
    unint64_t v23 = *(void *)(v35 + 8 * v22);
    int64_t v24 = v15 + 1;
    if (!v23)
    {
      int64_t v24 = v22 + 1;
      if (v22 + 1 >= v36) {
        return 1;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v24);
      if (!v23)
      {
        int64_t v24 = v22 + 2;
        if (v22 + 2 >= v36) {
          return 1;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23) {
          break;
        }
      }
    }
LABEL_22:
    uint64_t v37 = (v23 - 1) & v23;
    int64_t v38 = v24;
  }
  int64_t v25 = v22 + 3;
  if (v25 >= v36) {
    return 1;
  }
  unint64_t v23 = *(void *)(v35 + 8 * v25);
  if (v23)
  {
    int64_t v24 = v25;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v24 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v24 >= v36) {
      return 1;
    }
    unint64_t v23 = *(void *)(v35 + 8 * v24);
    ++v25;
    if (v23) {
      goto LABEL_22;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_251B056E8(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 56;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(result + 56);
  int64_t v21 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v9 = a2 + 56;
LABEL_7:
  if (v8)
  {
    unint64_t v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v11 = v10 | (v4 << 6);
    goto LABEL_23;
  }
  int64_t v12 = v4 + 1;
  if (!__OFADD__(v4, 1))
  {
    if (v12 < v21)
    {
      unint64_t v13 = *(void *)(v5 + 8 * v12);
      ++v4;
      if (v13) {
        goto LABEL_22;
      }
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v21) {
        return 1;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v4);
      if (v13) {
        goto LABEL_22;
      }
      int64_t v4 = v12 + 2;
      if (v12 + 2 >= v21) {
        return 1;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v4);
      if (v13)
      {
LABEL_22:
        unint64_t v8 = (v13 - 1) & v13;
        unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_23:
        unsigned int v15 = *(unsigned __int8 *)(*(void *)(v3 + 48) + v11);
        sub_251F36CA0();
        unsigned int v16 = v15 >> 6;
        sub_251F36CD0();
        sub_251F357B0();
        uint64_t result = sub_251F36D00();
        uint64_t v17 = -1 << *(unsigned char *)(a2 + 32);
        unint64_t v18 = result & ~v17;
        if ((*(void *)(v9 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18))
        {
          uint64_t v19 = ~v17;
          while (1)
          {
            unsigned int v20 = *(unsigned __int8 *)(*(void *)(a2 + 48) + v18);
            if (v20 >> 6)
            {
              if (v20 >> 6 == 1)
              {
                if (v16 == 1) {
                  goto LABEL_25;
                }
              }
              else if (v16 == 2)
              {
LABEL_25:
                if (((v20 ^ v15) & 0x3F) == 0) {
                  goto LABEL_7;
                }
              }
            }
            else if (v15 <= 0x3F && v20 == v15)
            {
              goto LABEL_7;
            }
            unint64_t v18 = (v18 + 1) & v19;
            if (((*(void *)(v9 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
              return 0;
            }
          }
        }
        return 0;
      }
      int64_t v14 = v12 + 3;
      if (v14 < v21)
      {
        unint64_t v13 = *(void *)(v5 + 8 * v14);
        if (v13)
        {
          int64_t v4 = v14;
          goto LABEL_22;
        }
        while (1)
        {
          int64_t v4 = v14 + 1;
          if (__OFADD__(v14, 1)) {
            goto LABEL_39;
          }
          if (v4 >= v21) {
            return 1;
          }
          unint64_t v13 = *(void *)(v5 + 8 * v4);
          ++v14;
          if (v13) {
            goto LABEL_22;
          }
        }
      }
    }
    return 1;
  }
  __break(1u);
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_251B05988(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 56;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(result + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v10 = a2 + 56;
  do
  {
LABEL_7:
    if (v8)
    {
      unint64_t v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v12 = v11 | (v4 << 6);
      goto LABEL_23;
    }
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
LABEL_33:
      __break(1u);
      return result;
    }
    if (v13 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v13);
    ++v4;
    if (v14) {
      goto LABEL_22;
    }
    int64_t v4 = v13 + 1;
    if (v13 + 1 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    if (v14) {
      goto LABEL_22;
    }
    int64_t v4 = v13 + 2;
    if (v13 + 2 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    if (v14) {
      goto LABEL_22;
    }
    int64_t v15 = v13 + 3;
    if (v15 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t v4 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_33;
        }
        if (v4 >= v9) {
          return 1;
        }
        unint64_t v14 = *(void *)(v5 + 8 * v4);
        ++v15;
        if (v14) {
          goto LABEL_22;
        }
      }
    }
    int64_t v4 = v15;
LABEL_22:
    unint64_t v8 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v4 << 6);
LABEL_23:
    uint64_t v16 = *(char *)(*(void *)(v3 + 48) + v12);
    sub_251F36CA0();
    int v17 = dword_251F3E0D4[v16];
    sub_251F36CE0();
    uint64_t result = sub_251F36D00();
    uint64_t v18 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v19 = result & ~v18;
    if (((*(void *)(v10 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
      return 0;
    }
    uint64_t v20 = *(void *)(a2 + 48);
  }
  while (dword_251F3E0D4[*(char *)(v20 + v19)] == v17);
  uint64_t v21 = ~v18;
  while (1)
  {
    unint64_t v19 = (v19 + 1) & v21;
    if (((*(void *)(v10 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
      return 0;
    }
    if (dword_251F3E0D4[*(char *)(v20 + v19)] == v17) {
      goto LABEL_7;
    }
  }
}

uint64_t sub_251B05B84(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 56;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(result + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v10 = a2 + 56;
  do
  {
LABEL_7:
    if (v8)
    {
      unint64_t v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v12 = v11 | (v4 << 6);
      goto LABEL_23;
    }
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
LABEL_32:
      __break(1u);
      return result;
    }
    if (v13 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v13);
    ++v4;
    if (v14) {
      goto LABEL_22;
    }
    int64_t v4 = v13 + 1;
    if (v13 + 1 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    if (v14) {
      goto LABEL_22;
    }
    int64_t v4 = v13 + 2;
    if (v13 + 2 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    if (v14) {
      goto LABEL_22;
    }
    int64_t v15 = v13 + 3;
    if (v15 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t v4 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_32;
        }
        if (v4 >= v9) {
          return 1;
        }
        unint64_t v14 = *(void *)(v5 + 8 * v4);
        ++v15;
        if (v14) {
          goto LABEL_22;
        }
      }
    }
    int64_t v4 = v15;
LABEL_22:
    unint64_t v8 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v4 << 6);
LABEL_23:
    int v16 = *(unsigned __int16 *)(*(void *)(v3 + 48) + 2 * v12);
    uint64_t result = MEMORY[0x2533ABBC0](*(void *)(a2 + 40), *(unsigned __int16 *)(*(void *)(v3 + 48) + 2 * v12), 2);
    uint64_t v17 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v18 = result & ~v17;
    if (((*(void *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
      return 0;
    }
    uint64_t v19 = *(void *)(a2 + 48);
  }
  while (*(unsigned __int16 *)(v19 + 2 * v18) == v16);
  uint64_t v20 = ~v17;
  while (1)
  {
    unint64_t v18 = (v18 + 1) & v20;
    if (((*(void *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
      return 0;
    }
    if (*(unsigned __int16 *)(v19 + 2 * v18) == v16) {
      goto LABEL_7;
    }
  }
}

uint64_t sub_251B05D50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21F0A0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for StaticAccessory.DeviceIdentifier(0);
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v72 = (uint64_t *)((char *)&v62 - v12);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  int64_t v15 = (char *)&v62 - v14;
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  unint64_t v18 = (char *)&v62 - v17;
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  uint64_t v77 = (uint64_t)&v62 - v20;
  uint64_t result = MEMORY[0x270FA5388](v19);
  int64_t v24 = (char *)&v62 - v23;
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v25 = 0;
  uint64_t v26 = *(void *)(a1 + 56);
  uint64_t v66 = a1 + 56;
  uint64_t v27 = 1 << *(unsigned char *)(a1 + 32);
  if (v27 < 64) {
    uint64_t v28 = ~(-1 << v27);
  }
  else {
    uint64_t v28 = -1;
  }
  unint64_t v29 = v28 & v26;
  int64_t v67 = (unint64_t)(v27 + 63) >> 6;
  uint64_t v75 = a2 + 56;
  uint64_t v65 = a1;
  uint64_t v70 = v7;
  uint64_t v64 = v22;
  int v76 = v15;
  size_t v63 = v18;
  int64_t v62 = v24;
  if (!v29) {
    goto LABEL_8;
  }
  while (2)
  {
    uint64_t v68 = (v29 - 1) & v29;
    int64_t v69 = v25;
    unint64_t v30 = __clz(__rbit64(v29)) | (v25 << 6);
LABEL_22:
    uint64_t v35 = *(void *)(a1 + 48);
    uint64_t v74 = *(void *)(v22 + 72);
    sub_251B25B74(v35 + v74 * v30, (uint64_t)v24, type metadata accessor for StaticAccessory.DeviceIdentifier);
    uint64_t v36 = v77;
    sub_251B25C90((uint64_t)v24, v77, type metadata accessor for StaticAccessory.DeviceIdentifier);
    sub_251F36CA0();
    sub_251B25B74(v36, (uint64_t)v18, type metadata accessor for StaticAccessory.DeviceIdentifier);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v37 = sub_251F34DA0();
      uint64_t v38 = *(void *)(v37 - 8);
      MEMORY[0x270FA5388](v37);
      uint64_t v40 = v18;
      uint64_t v41 = (char *)&v62 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v41, v40, v37);
      sub_251F36CB0();
      sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
      sub_251F35610();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v41, v37);
    }
    else
    {
      sub_251F36CB0();
      sub_251F357B0();
      swift_bridgeObjectRelease();
    }
    uint64_t v42 = sub_251F36D00();
    uint64_t v43 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v44 = v42 & ~v43;
    uint64_t v45 = (uint64_t)v76;
    if (((*(void *)(v75 + ((v44 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v44) & 1) == 0)
    {
LABEL_46:
      sub_251B25BDC(v77, type metadata accessor for StaticAccessory.DeviceIdentifier);
      return 0;
    }
    uint64_t v73 = ~v43;
    while (1)
    {
      sub_251B25B74(*(void *)(a2 + 48) + v44 * v74, v45, type metadata accessor for StaticAccessory.DeviceIdentifier);
      uint64_t v46 = &v6[*(int *)(v4 + 48)];
      sub_251B25B74(v45, (uint64_t)v6, type metadata accessor for StaticAccessory.DeviceIdentifier);
      sub_251B25B74(v77, (uint64_t)v46, type metadata accessor for StaticAccessory.DeviceIdentifier);
      if (swift_getEnumCaseMultiPayload() != 1) {
        break;
      }
      sub_251B25B74((uint64_t)v6, (uint64_t)v10, type metadata accessor for StaticAccessory.DeviceIdentifier);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v48 = sub_251F34DA0();
      uint64_t v49 = v48;
      uint64_t v50 = *(void *)(v48 - 8);
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v71 = &v62;
        MEMORY[0x270FA5388](v48);
        uint64_t v52 = (char *)&v62 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v52, v46, v49);
        char v53 = sub_251F34D70();
        uint64_t v54 = *(void (**)(char *, uint64_t))(v50 + 8);
        v54(v52, v49);
        v54(v10, v49);
        if (v53) {
          goto LABEL_43;
        }
LABEL_40:
        sub_251B25BDC((uint64_t)v6, type metadata accessor for StaticAccessory.DeviceIdentifier);
        goto LABEL_29;
      }
      (*(void (**)(char *, uint64_t))(*(void *)(v48 - 8) + 8))(v10, v48);
LABEL_28:
      sub_251A1B064((uint64_t)v6, &qword_26B21F0A0);
LABEL_29:
      uint64_t v45 = (uint64_t)v76;
      sub_251B25BDC((uint64_t)v76, type metadata accessor for StaticAccessory.DeviceIdentifier);
      unint64_t v44 = (v44 + 1) & v73;
      if (((*(void *)(v75 + ((v44 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v44) & 1) == 0) {
        goto LABEL_46;
      }
    }
    uint64_t v55 = v72;
    sub_251B25B74((uint64_t)v6, (uint64_t)v72, type metadata accessor for StaticAccessory.DeviceIdentifier);
    uint64_t v56 = *v55;
    uint64_t v57 = v55[1];
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      swift_bridgeObjectRelease();
      goto LABEL_28;
    }
    uint64_t v58 = *(void *)v46;
    uint64_t v59 = *((void *)v46 + 1);
    if (v56 != v58 || v57 != v59)
    {
      char v61 = sub_251F36B10();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v61) {
        goto LABEL_43;
      }
      goto LABEL_40;
    }
    swift_bridgeObjectRelease_n();
LABEL_43:
    sub_251B25BDC((uint64_t)v6, type metadata accessor for StaticAccessory.DeviceIdentifier);
    sub_251B25BDC((uint64_t)v76, type metadata accessor for StaticAccessory.DeviceIdentifier);
    uint64_t result = sub_251B25BDC(v77, type metadata accessor for StaticAccessory.DeviceIdentifier);
    a1 = v65;
    uint64_t v22 = v64;
    unint64_t v18 = v63;
    int64_t v24 = v62;
    unint64_t v29 = v68;
    int64_t v25 = v69;
    if (v68) {
      continue;
    }
    break;
  }
LABEL_8:
  int64_t v31 = v25 + 1;
  if (__OFADD__(v25, 1))
  {
    __break(1u);
    goto LABEL_49;
  }
  if (v31 >= v67) {
    return 1;
  }
  unint64_t v32 = *(void *)(v66 + 8 * v31);
  int64_t v33 = v25 + 1;
  if (v32) {
    goto LABEL_21;
  }
  int64_t v33 = v25 + 2;
  if (v25 + 2 >= v67) {
    return 1;
  }
  unint64_t v32 = *(void *)(v66 + 8 * v33);
  if (v32) {
    goto LABEL_21;
  }
  int64_t v33 = v25 + 3;
  if (v25 + 3 >= v67) {
    return 1;
  }
  unint64_t v32 = *(void *)(v66 + 8 * v33);
  if (v32) {
    goto LABEL_21;
  }
  uint64_t v34 = v25 + 4;
  if (v25 + 4 >= v67) {
    return 1;
  }
  unint64_t v32 = *(void *)(v66 + 8 * v34);
  if (v32)
  {
    int64_t v33 = v25 + 4;
LABEL_21:
    uint64_t v68 = (v32 - 1) & v32;
    int64_t v69 = v33;
    unint64_t v30 = __clz(__rbit64(v32)) + (v33 << 6);
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v33 = v34 + 1;
    if (__OFADD__(v34, 1)) {
      break;
    }
    if (v33 >= v67) {
      return 1;
    }
    unint64_t v32 = *(void *)(v66 + 8 * v33);
    ++v34;
    if (v32) {
      goto LABEL_21;
    }
  }
LABEL_49:
  __break(1u);
  return result;
}

uint64_t sub_251B0657C(uint64_t a1, uint64_t a2)
{
  if (a1 == a2) {
    return 1;
  }
  uint64_t v3 = a1;
  if (*(void *)(a1 + 16) == *(void *)(a2 + 16))
  {
    int64_t v4 = 0;
    uint64_t v5 = *(void *)(a1 + 56);
    uint64_t v27 = a1 + 56;
    uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & v5;
    int64_t v28 = (unint64_t)(v6 + 63) >> 6;
    uint64_t v9 = a2 + 56;
    if ((v7 & v5) == 0) {
      goto LABEL_8;
    }
LABEL_7:
    unint64_t v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    for (unint64_t i = v10 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v4 << 6))
    {
      uint64_t v15 = *(unsigned __int8 *)(*(void *)(v3 + 48) + i);
      uint64_t v16 = sub_251EAE504();
      uint64_t v17 = -1 << *(unsigned char *)(a2 + 32);
      unint64_t v18 = v16 & ~v17;
      if (((*(void *)(v9 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
        return 0;
      }
      int64_t v29 = v4;
      uint64_t v19 = ~v17;
      while (1)
      {
        unint64_t v20 = 0x8000000251F64710;
        switch(*(unsigned char *)(*(void *)(a2 + 48) + v18))
        {
          case 1:
            uint64_t v21 = "13-AA62-01754F256DD5";
            goto LABEL_32;
          case 2:
            uint64_t v21 = "73-A058-C5E64BC487B2";
            goto LABEL_32;
          case 3:
            uint64_t v21 = "CE-986D-63B28F62C9E3";
            goto LABEL_32;
          case 4:
            uint64_t v21 = "60-AD68-D91053B75F44";
            goto LABEL_32;
          case 5:
            uint64_t v21 = "7E-BE63-1D00B1500545";
            goto LABEL_32;
          case 6:
            uint64_t v21 = "17-A590-755E1AAC02AE";
            goto LABEL_32;
          case 7:
            uint64_t v21 = "73-8FBD-0E8978A33403";
LABEL_32:
            unint64_t v20 = (unint64_t)v21 | 0x8000000000000000;
            break;
          default:
            break;
        }
        unint64_t v22 = 0x8000000251F64710;
        switch(v15)
        {
          case 1:
            uint64_t v23 = "13-AA62-01754F256DD5";
            goto LABEL_41;
          case 2:
            uint64_t v23 = "73-A058-C5E64BC487B2";
            goto LABEL_41;
          case 3:
            uint64_t v23 = "CE-986D-63B28F62C9E3";
            goto LABEL_41;
          case 4:
            uint64_t v23 = "60-AD68-D91053B75F44";
            goto LABEL_41;
          case 5:
            uint64_t v23 = "7E-BE63-1D00B1500545";
            goto LABEL_41;
          case 6:
            uint64_t v23 = "17-A590-755E1AAC02AE";
            goto LABEL_41;
          case 7:
            uint64_t v23 = "73-8FBD-0E8978A33403";
LABEL_41:
            unint64_t v22 = (unint64_t)v23 | 0x8000000000000000;
            break;
          default:
            break;
        }
        if (v20 == v22) {
          break;
        }
        char v24 = sub_251F36B10();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v24) {
          goto LABEL_47;
        }
        unint64_t v18 = (v18 + 1) & v19;
        if (((*(void *)(v9 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
          return 0;
        }
      }
      swift_bridgeObjectRelease_n();
LABEL_47:
      uint64_t v3 = a1;
      int64_t v4 = v29;
      if (v8) {
        goto LABEL_7;
      }
LABEL_8:
      int64_t v12 = v4 + 1;
      if (__OFADD__(v4, 1)) {
        break;
      }
      if (v12 >= v28) {
        return 1;
      }
      unint64_t v13 = *(void *)(v27 + 8 * v12);
      ++v4;
      if (!v13)
      {
        int64_t v4 = v12 + 1;
        if (v12 + 1 >= v28) {
          return 1;
        }
        unint64_t v13 = *(void *)(v27 + 8 * v4);
        if (!v13)
        {
          int64_t v4 = v12 + 2;
          if (v12 + 2 >= v28) {
            return 1;
          }
          unint64_t v13 = *(void *)(v27 + 8 * v4);
          if (!v13)
          {
            int64_t v14 = v12 + 3;
            if (v14 >= v28) {
              return 1;
            }
            unint64_t v13 = *(void *)(v27 + 8 * v14);
            if (!v13)
            {
              while (1)
              {
                int64_t v4 = v14 + 1;
                if (__OFADD__(v14, 1)) {
                  break;
                }
                if (v4 >= v28) {
                  return 1;
                }
                unint64_t v13 = *(void *)(v27 + 8 * v4);
                ++v14;
                if (v13) {
                  goto LABEL_21;
                }
              }
LABEL_52:
              __break(1u);
              JUMPOUT(0x251B068FCLL);
            }
            int64_t v4 = v14;
          }
        }
      }
LABEL_21:
      unint64_t v8 = (v13 - 1) & v13;
    }
    __break(1u);
    goto LABEL_52;
  }
  return 0;
}

uint64_t sub_251B0693C(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 56;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(result + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v10 = a2 + 56;
  do
  {
LABEL_7:
    if (v8)
    {
      unint64_t v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v12 = v11 | (v4 << 6);
      goto LABEL_23;
    }
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
LABEL_33:
      __break(1u);
      return result;
    }
    if (v13 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v13);
    ++v4;
    if (v14) {
      goto LABEL_22;
    }
    int64_t v4 = v13 + 1;
    if (v13 + 1 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    if (v14) {
      goto LABEL_22;
    }
    int64_t v4 = v13 + 2;
    if (v13 + 2 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    if (v14) {
      goto LABEL_22;
    }
    int64_t v15 = v13 + 3;
    if (v15 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t v4 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_33;
        }
        if (v4 >= v9) {
          return 1;
        }
        unint64_t v14 = *(void *)(v5 + 8 * v4);
        ++v15;
        if (v14) {
          goto LABEL_22;
        }
      }
    }
    int64_t v4 = v15;
LABEL_22:
    unint64_t v8 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v4 << 6);
LABEL_23:
    int v16 = *(unsigned __int8 *)(*(void *)(v3 + 48) + v12);
    sub_251F36CA0();
    sub_251F36CB0();
    uint64_t result = sub_251F36D00();
    uint64_t v17 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v18 = result & ~v17;
    if (((*(void *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
      return 0;
    }
    uint64_t v19 = *(void *)(a2 + 48);
  }
  while (v16 == *(unsigned __int8 *)(v19 + v18));
  uint64_t v20 = ~v17;
  while (1)
  {
    unint64_t v18 = (v18 + 1) & v20;
    if (((*(void *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
      return 0;
    }
    if (v16 == *(unsigned __int8 *)(v19 + v18)) {
      goto LABEL_7;
    }
  }
}

uint64_t sub_251B06B20(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v4 = result + 56;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  uint64_t v7 = v6 & *(void *)(result + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (!v7)
    {
      int64_t v10 = v3 + 1;
      if (__OFADD__(v3, 1))
      {
        __break(1u);
        goto LABEL_27;
      }
      if (v10 >= v8) {
        return 1;
      }
      uint64_t v7 = *(void *)(v4 + 8 * v10);
      ++v3;
      if (!v7)
      {
        int64_t v3 = v10 + 1;
        if (v10 + 1 >= v8) {
          return 1;
        }
        uint64_t v7 = *(void *)(v4 + 8 * v3);
        if (!v7)
        {
          int64_t v3 = v10 + 2;
          if (v10 + 2 >= v8) {
            return 1;
          }
          uint64_t v7 = *(void *)(v4 + 8 * v3);
          if (!v7) {
            break;
          }
        }
      }
    }
LABEL_8:
    v7 &= v7 - 1;
    sub_251F36CA0();
    sub_251F36CB0();
    uint64_t result = sub_251F36D00();
    unint64_t v9 = result & ~(-1 << *(unsigned char *)(a2 + 32));
    if (((*(void *)(a2 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
      return 0;
    }
  }
  int64_t v11 = v10 + 3;
  if (v11 >= v8) {
    return 1;
  }
  uint64_t v7 = *(void *)(v4 + 8 * v11);
  if (v7)
  {
    int64_t v3 = v11;
    goto LABEL_8;
  }
  while (1)
  {
    int64_t v3 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v3 >= v8) {
      return 1;
    }
    uint64_t v7 = *(void *)(v4 + 8 * v3);
    ++v11;
    if (v7) {
      goto LABEL_8;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_251B06C90(uint64_t a1, uint64_t a2)
{
  uint64_t v109 = type metadata accessor for Event.CharacteristicEvent();
  MEMORY[0x270FA5388](v109);
  uint64_t v5 = (char *)&v100 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Event.TimeEvent(0);
  MEMORY[0x270FA5388](v6 - 8);
  int64_t v8 = (char *)&v100 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E2F8);
  MEMORY[0x270FA5388](v9);
  int64_t v11 = (char *)&v100 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Event();
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v115 = (uint64_t)&v100 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v114 = (uint64_t)&v100 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v100 - v19;
  uint64_t v21 = MEMORY[0x270FA5388](v18);
  uint64_t v120 = (uint64_t)&v100 - v22;
  uint64_t result = MEMORY[0x270FA5388](v21);
  uint64_t v27 = (char *)&v100 - v26;
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v28 = 0;
  uint64_t v29 = a1 + 56;
  uint64_t v30 = 1 << *(unsigned char *)(a1 + 32);
  if (v30 < 64) {
    uint64_t v31 = ~(-1 << v30);
  }
  else {
    uint64_t v31 = -1;
  }
  unint64_t v32 = v31 & *(void *)(a1 + 56);
  int64_t v33 = (unint64_t)(v30 + 63) >> 6;
  uint64_t v119 = a2 + 56;
  uint64_t v111 = a2;
  uint64_t v113 = v5;
  char v108 = v8;
  uint64_t v116 = v9;
  uint64_t v110 = v25;
  uint64_t v105 = a1;
  uint64_t v104 = v24;
  int64_t v103 = v27;
  uint64_t v102 = a1 + 56;
  int64_t v101 = v33;
  if (!v32) {
    goto LABEL_8;
  }
  while (2)
  {
    uint64_t v106 = (v32 - 1) & v32;
    int64_t v107 = v28;
    unint64_t v34 = __clz(__rbit64(v32)) | (v28 << 6);
LABEL_22:
    uint64_t v39 = *(void *)(a1 + 48);
    uint64_t v118 = *(void *)(v24 + 72);
    sub_251B25B74(v39 + v118 * v34, (uint64_t)v27, (uint64_t (*)(void))type metadata accessor for Event);
    sub_251B25C90((uint64_t)v27, v120, (uint64_t (*)(void))type metadata accessor for Event);
    sub_251F36CA0();
    Event.hash(into:)(&v124);
    uint64_t v40 = sub_251F36D00();
    uint64_t v41 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v42 = v40 & ~v41;
    if (((*(void *)(v119 + ((v42 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v42) & 1) == 0)
    {
LABEL_90:
      sub_251B25BDC(v120, (uint64_t (*)(void))type metadata accessor for Event);
      return 0;
    }
    uint64_t v117 = ~v41;
    while (1)
    {
      sub_251B25B74(*(void *)(a2 + 48) + v42 * v118, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for Event);
      uint64_t v44 = (uint64_t)&v11[*(int *)(v9 + 48)];
      sub_251B25B74((uint64_t)v20, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for Event);
      sub_251B25B74(v120, v44, (uint64_t (*)(void))type metadata accessor for Event);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (!EnumCaseMultiPayload) {
        break;
      }
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v46 = v5;
        unint64_t v47 = v20;
        uint64_t v48 = v110;
        sub_251B25B74((uint64_t)v11, v110, (uint64_t (*)(void))type metadata accessor for Event);
        uint64_t v49 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_269B9D120) + 48);
        uint64_t v112 = *(void *)(v48 + v49);
        uint64_t v50 = v12;
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v51 = *(void *)(v44 + v49);
          uint64_t v52 = v44;
          uint64_t v53 = (uint64_t)v108;
          sub_251B25C90(v52, (uint64_t)v108, type metadata accessor for Event.TimeEvent);
          char v54 = _s13HomeDataModel5EventO04TimeD0O2eeoiySbAE_AEtFZ_0(v48, v53);
          sub_251B25BDC(v48, type metadata accessor for Event.TimeEvent);
          if ((v54 & 1) == 0)
          {
            sub_251B25BDC(v53, type metadata accessor for Event.TimeEvent);
            sub_251B25BDC((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for Event);
            a2 = v111;
            uint64_t v12 = v50;
            uint64_t v20 = v47;
            uint64_t v5 = v46;
            uint64_t v9 = v116;
            goto LABEL_27;
          }
          sub_251B25BDC(v53, type metadata accessor for Event.TimeEvent);
          BOOL v55 = v112 == v51;
          a2 = v111;
          uint64_t v12 = v50;
          uint64_t v20 = v47;
          uint64_t v5 = v46;
          goto LABEL_53;
        }
        sub_251B25BDC(v48, type metadata accessor for Event.TimeEvent);
        uint64_t v20 = v47;
        uint64_t v5 = v46;
        goto LABEL_41;
      }
      uint64_t v43 = v115;
      sub_251B25B74((uint64_t)v11, v115, (uint64_t (*)(void))type metadata accessor for Event);
      if (swift_getEnumCaseMultiPayload() != 2)
      {
        sub_251B25BDC(v43, (uint64_t (*)(void))type metadata accessor for Event.CharacteristicEvent);
        goto LABEL_43;
      }
      sub_251B25C90(v44, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for Event.CharacteristicEvent);
      if ((sub_251F34D70() & 1) == 0) {
        goto LABEL_25;
      }
      uint64_t v61 = *(int *)(v109 + 20);
      char v62 = *(unsigned char *)(v43 + v61);
      LOBYTE(v61) = v5[v61];
      LOBYTE(v124) = v62;
      LOBYTE(v121) = v61;
      unint64_t v63 = CharacteristicKind.rawValue.getter();
      uint64_t v65 = v64;
      if (v63 == CharacteristicKind.rawValue.getter() && v65 == v66)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v43 = v115;
      }
      else
      {
        char v79 = sub_251F36B10();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v43 = v115;
        if ((v79 & 1) == 0) {
          goto LABEL_25;
        }
      }
      uint64_t v80 = *(int *)(v109 + 24);
      uint64_t v81 = v43 + v80;
      uint64_t v83 = *(void *)(v43 + v80);
      unint64_t v82 = *(void *)(v43 + v80 + 8);
      unsigned int v84 = *(unsigned __int8 *)(v81 + 16);
      uint64_t v85 = &v5[v80];
      uint64_t v86 = *(void *)v85;
      unint64_t v87 = *((void *)v85 + 1);
      unsigned int v88 = v85[16];
      if (v84 >> 6)
      {
        if (v84 >> 6 == 1)
        {
          if ((v88 & 0xC0) == 0x40) {
            goto LABEL_73;
          }
        }
        else if ((v88 & 0xC0) == 0x80)
        {
LABEL_73:
          *(void *)&long long v124 = v83;
          *((void *)&v124 + 1) = v82;
          char v125 = v84 & 0x3F;
          uint64_t v121 = v86;
          unint64_t v122 = v87;
          char v123 = v88 & 0x3F;
LABEL_74:
          sub_251B2ED58(v86, v87, v88);
          sub_251B2ED58(v83, v82, v84);
          sub_251B2ED58(v83, v82, v84);
          sub_251B2ED58(v86, v87, v88);
          LODWORD(v112) = _s13HomeDataModel18CharacteristicKindO5ValueO2eeoiySbAE_AEtFZ_0((uint64_t)&v124, (uint64_t)&v121);
          sub_251A58090(v83, v82, v84);
          sub_251A58090(v86, v87, v88);
          sub_251A58090(v86, v87, v88);
          sub_251A58090(v83, v82, v84);
          a2 = v111;
          uint64_t v5 = v113;
          uint64_t v9 = v116;
          uint64_t v43 = v115;
          if (v112)
          {
            sub_251B25BDC((uint64_t)v113, (uint64_t (*)(void))type metadata accessor for Event.CharacteristicEvent);
            sub_251B25BDC(v43, (uint64_t (*)(void))type metadata accessor for Event.CharacteristicEvent);
            goto LABEL_87;
          }
          goto LABEL_25;
        }
      }
      else if (v88 < 0x40)
      {
        *(void *)&long long v124 = v83;
        *((void *)&v124 + 1) = v82;
        char v125 = v84;
        uint64_t v121 = v86;
        unint64_t v122 = v87;
        char v123 = v88;
        goto LABEL_74;
      }
      sub_251B2ED58(v83, v82, *(unsigned char *)(v81 + 16));
      sub_251B2ED58(v86, v87, v88);
      sub_251A58090(v83, v82, v84);
      sub_251A58090(v86, v87, v88);
      a2 = v111;
      uint64_t v5 = v113;
      uint64_t v9 = v116;
      uint64_t v43 = v115;
LABEL_25:
      sub_251B25BDC((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for Event.CharacteristicEvent);
      sub_251B25BDC(v43, (uint64_t (*)(void))type metadata accessor for Event.CharacteristicEvent);
LABEL_26:
      sub_251B25BDC((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for Event);
LABEL_27:
      sub_251B25BDC((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for Event);
      unint64_t v42 = (v42 + 1) & v117;
      if (((*(void *)(v119 + ((v42 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v42) & 1) == 0) {
        goto LABEL_90;
      }
    }
    uint64_t v56 = v114;
    sub_251B25B74((uint64_t)v11, v114, (uint64_t (*)(void))type metadata accessor for Event);
    uint64_t v57 = *(uint64_t *)v56;
    unint64_t v58 = *(unint64_t *)(v56 + 8);
    uint64_t v59 = *(uint64_t *)(v56 + 16);
    int v60 = *(unsigned __int8 *)(v56 + 24);
    if (swift_getEnumCaseMultiPayload())
    {
      sub_251A580E0(v57, v58, v59, v60);
      uint64_t v5 = v113;
LABEL_41:
      uint64_t v9 = v116;
LABEL_43:
      sub_251A1B064((uint64_t)v11, &qword_269B9E2F8);
      goto LABEL_27;
    }
    uint64_t v68 = *(uint64_t *)v44;
    unint64_t v67 = *(void *)(v44 + 8);
    uint64_t v69 = *(void *)(v44 + 16);
    if (v60)
    {
      if (*(unsigned char *)(v44 + 24))
      {
        double v70 = *(double *)(v44 + 8);
        uint64_t v71 = *(uint64_t *)(v44 + 16);
        sub_251A580E0(v57, v58, v59, 1);
        sub_251A580E0(v68, *(unint64_t *)&v70, v71, 1);
        BOOL v55 = *(double *)&v57 == *(double *)&v68 && *(double *)&v58 == v70 && *(double *)&v59 == *(double *)&v71;
        a2 = v111;
        uint64_t v5 = v113;
LABEL_53:
        uint64_t v9 = v116;
        if (v55) {
          goto LABEL_87;
        }
        goto LABEL_26;
      }
      uint64_t v89 = v57;
      unint64_t v90 = *(void *)(v44 + 8);
      unint64_t v91 = v58;
      uint64_t v92 = v69;
      uint64_t v93 = v59;
      char v94 = 1;
LABEL_77:
      sub_251A580E0(v89, v91, v93, v94);
      uint64_t v75 = v68;
      unint64_t v76 = v90;
      uint64_t v77 = v92;
      char v78 = 0;
LABEL_78:
      sub_251A580E0(v75, v76, v77, v78);
      a2 = v111;
LABEL_79:
      uint64_t v5 = v113;
      uint64_t v9 = v116;
      goto LABEL_26;
    }
    if (*(unsigned char *)(v44 + 24))
    {
      unint64_t v73 = *(void *)(v44 + 8);
      uint64_t v74 = v69;
      sub_251A580E0(v57, v58, v59, 0);
      uint64_t v75 = v68;
      unint64_t v76 = v73;
      uint64_t v77 = v74;
      char v78 = 1;
      goto LABEL_78;
    }
    if (v57 != v68)
    {
      uint64_t v89 = v57;
      unint64_t v90 = *(void *)(v44 + 8);
      unint64_t v91 = v58;
      uint64_t v92 = v69;
      uint64_t v93 = v59;
      char v94 = 0;
      goto LABEL_77;
    }
    if (*(double *)&v58 != 0.0)
    {
      a2 = v111;
      uint64_t v95 = *(void *)(v44 + 16);
      if (v58 == 1)
      {
        if (v67 == 1)
        {
          sub_251B2EDB8(1uLL);
          sub_251B2EDB8(1uLL);
          sub_251A580F0(1uLL);
          sub_251A580F0(1uLL);
          sub_251A580E0(v57, 1uLL, v59, 0);
          sub_251A580E0(v57, 1uLL, v95, 0);
          sub_251A580E0(v57, 1uLL, v95, 0);
          sub_251A580E0(v57, 1uLL, v59, 0);
          sub_251A580E0(v57, 1uLL, v95, 0);
          uint64_t v98 = v57;
          unint64_t v99 = 1;
          goto LABEL_86;
        }
      }
      else if (v67 >= 2)
      {
        unint64_t v97 = *(void *)(v44 + 8);
        sub_251B2EDA8(v57, v58, v59, 0);
        sub_251B2EDA8(v57, v97, v95, 0);
        sub_251B2EDA8(v57, v58, v59, 0);
        sub_251B2EDA8(v57, v97, v95, 0);
        sub_251B2EDA8(v57, v58, v59, 0);
        sub_251B2EDA8(v57, v97, v95, 0);
        LODWORD(v112) = sub_251B04848(v58, v97);
        sub_251A580F0(v58);
        sub_251A580F0(v97);
        sub_251A580E0(v57, v58, v59, 0);
        sub_251A580E0(v57, v97, v95, 0);
        sub_251A580E0(v57, v97, v95, 0);
        sub_251A580E0(v57, v58, v59, 0);
        sub_251A580E0(v57, v97, v95, 0);
        sub_251A580E0(v57, v58, v59, 0);
        uint64_t v5 = v113;
        uint64_t v9 = v116;
        if (v112) {
          goto LABEL_87;
        }
        goto LABEL_26;
      }
      goto LABEL_83;
    }
    uint64_t v95 = *(void *)(v44 + 16);
    a2 = v111;
    if (v67)
    {
LABEL_83:
      unint64_t v96 = *(void *)(v44 + 8);
      sub_251B2EDA8(v57, v58, v59, 0);
      sub_251B2EDA8(v57, v96, v95, 0);
      sub_251B2EDA8(v57, v58, v59, 0);
      sub_251B2EDA8(v57, v96, v95, 0);
      sub_251B2EDA8(v57, v58, v59, 0);
      sub_251B2EDA8(v57, v96, v95, 0);
      sub_251A580F0(v58);
      sub_251A580F0(v96);
      sub_251A580E0(v57, v58, v59, 0);
      sub_251A580E0(v57, v96, v95, 0);
      sub_251A580E0(v57, v96, v95, 0);
      sub_251A580E0(v57, v58, v59, 0);
      sub_251A580E0(v57, v96, v95, 0);
      sub_251A580E0(v57, v58, v59, 0);
      goto LABEL_79;
    }
    sub_251B2EDB8(0);
    sub_251B2EDB8(0);
    sub_251A580F0(0);
    sub_251A580F0(0);
    sub_251A580E0(v57, 0, v59, 0);
    sub_251A580E0(v57, 0, v95, 0);
    sub_251A580E0(v57, 0, v95, 0);
    sub_251A580E0(v57, 0, v59, 0);
    sub_251A580E0(v57, 0, v95, 0);
    uint64_t v98 = v57;
    unint64_t v99 = 0;
LABEL_86:
    sub_251A580E0(v98, v99, v59, 0);
    uint64_t v5 = v113;
    uint64_t v9 = v116;
LABEL_87:
    sub_251B25BDC((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for Event);
    sub_251B25BDC((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for Event);
    uint64_t result = sub_251B25BDC(v120, (uint64_t (*)(void))type metadata accessor for Event);
    a1 = v105;
    uint64_t v24 = v104;
    uint64_t v27 = v103;
    uint64_t v29 = v102;
    int64_t v28 = v107;
    int64_t v33 = v101;
    unint64_t v32 = v106;
    if (v106) {
      continue;
    }
    break;
  }
LABEL_8:
  int64_t v35 = v28 + 1;
  if (__OFADD__(v28, 1))
  {
    __break(1u);
    goto LABEL_93;
  }
  if (v35 >= v33) {
    return 1;
  }
  unint64_t v36 = *(void *)(v29 + 8 * v35);
  int64_t v37 = v28 + 1;
  if (v36) {
    goto LABEL_21;
  }
  int64_t v37 = v35 + 1;
  if (v35 + 1 >= v33) {
    return 1;
  }
  unint64_t v36 = *(void *)(v29 + 8 * v37);
  if (v36) {
    goto LABEL_21;
  }
  int64_t v37 = v35 + 2;
  if (v35 + 2 >= v33) {
    return 1;
  }
  unint64_t v36 = *(void *)(v29 + 8 * v37);
  if (v36) {
    goto LABEL_21;
  }
  int64_t v38 = v35 + 3;
  if (v38 >= v33) {
    return 1;
  }
  unint64_t v36 = *(void *)(v29 + 8 * v38);
  if (v36)
  {
    int64_t v37 = v38;
LABEL_21:
    uint64_t v106 = (v36 - 1) & v36;
    int64_t v107 = v37;
    unint64_t v34 = __clz(__rbit64(v36)) + (v37 << 6);
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v37 = v38 + 1;
    if (__OFADD__(v38, 1)) {
      break;
    }
    if (v37 >= v33) {
      return 1;
    }
    unint64_t v36 = *(void *)(v29 + 8 * v37);
    ++v38;
    if (v36) {
      goto LABEL_21;
    }
  }
LABEL_93:
  __break(1u);
  return result;
}

uint64_t sub_251B07C98(uint64_t a1, uint64_t a2)
{
  uint64_t v185 = type metadata accessor for ActionCommand(0);
  uint64_t v4 = *(void *)(v185 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v185);
  uint64_t v7 = (char *)&v153 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v153 - v9;
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v177 = (char *)&v153 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v175 = (uint64_t)&v153 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v153 - v16;
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v20 = (char *)&v153 - v19;
  uint64_t v21 = MEMORY[0x270FA5388](v18);
  v162 = (char *)&v153 - v22;
  MEMORY[0x270FA5388](v21);
  uint64_t v176 = (uint64_t)&v153 - v23;
  uint64_t v167 = (int *)type metadata accessor for Action.NaturalLightAction(0);
  MEMORY[0x270FA5388](v167);
  uint64_t v25 = (char *)&v153 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v166 = (int *)type metadata accessor for Action.CharacteristicAction(0);
  MEMORY[0x270FA5388](v166);
  uint64_t v173 = (uint64_t)&v153 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v179 = __swift_instantiateConcreteTypeFromMangledName(&qword_269B9E2F0);
  MEMORY[0x270FA5388](v179);
  int64_t v28 = (char *)&v153 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v186 = type metadata accessor for Action();
  uint64_t v29 = MEMORY[0x270FA5388](v186);
  uint64_t v30 = MEMORY[0x270FA5388](v29);
  uint64_t v181 = (uint64_t)&v153 - v31;
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  uint64_t v180 = (uint64_t)&v153 - v33;
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  uint64_t v182 = (uint64_t)&v153 - v35;
  uint64_t v36 = MEMORY[0x270FA5388](v34);
  uint64_t v187 = (char *)&v153 - v37;
  uint64_t v38 = MEMORY[0x270FA5388](v36);
  uint64_t v191 = (uint64_t)&v153 - v39;
  MEMORY[0x270FA5388](v38);
  uint64_t v43 = (char *)&v153 - v42;
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v44 = 0;
  uint64_t v45 = a1 + 56;
  uint64_t v46 = 1 << *(unsigned char *)(a1 + 32);
  if (v46 < 64) {
    uint64_t v47 = ~(-1 << v46);
  }
  else {
    uint64_t v47 = -1;
  }
  unint64_t v48 = v47 & *(void *)(a1 + 56);
  int64_t v49 = (unint64_t)(v46 + 63) >> 6;
  uint64_t v190 = a2 + 56;
  uint64_t v183 = a2;
  uint64_t v161 = v4;
  BOOL v172 = v7;
  uint64_t v171 = v10;
  uint64_t v170 = v17;
  uint64_t v169 = v20;
  uint64_t v165 = v25;
  uint64_t v50 = v179;
  uint64_t v178 = v28;
  uint64_t v174 = (unsigned __int8 *)v41;
  uint64_t v51 = (uint64_t)v187;
  uint64_t v158 = a1;
  uint64_t v157 = v40;
  os_log_type_t v156 = v43;
  uint64_t v155 = a1 + 56;
  int64_t v154 = v49;
  if (!v48) {
    goto LABEL_8;
  }
LABEL_7:
  uint64_t v159 = (v48 - 1) & v48;
  int64_t v160 = v44;
  unint64_t v52 = __clz(__rbit64(v48)) | (v44 << 6);
LABEL_22:
  uint64_t v57 = *(void *)(a1 + 48);
  uint64_t v189 = *(void *)(v40 + 72);
  uint64_t v58 = (uint64_t)v43;
  sub_251B25B74(v57 + v189 * v52, (uint64_t)v43, (uint64_t (*)(void))type metadata accessor for Action);
  sub_251B25C90(v58, v191, (uint64_t (*)(void))type metadata accessor for Action);
  sub_251F36CA0();
  Action.hash(into:)(&v195);
  uint64_t v59 = sub_251F36D00();
  uint64_t v60 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v61 = v59 & ~v60;
  if (((*(void *)(v190 + ((v61 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v61) & 1) == 0)
  {
LABEL_117:
    sub_251B25BDC(v191, (uint64_t (*)(void))type metadata accessor for Action);
    return 0;
  }
  uint64_t v188 = ~v60;
  while (2)
  {
    uint64_t v64 = *(void *)(a2 + 48);
    unint64_t v192 = v61;
    sub_251B25B74(v64 + v61 * v189, v51, (uint64_t (*)(void))type metadata accessor for Action);
    uint64_t v65 = &v28[*(int *)(v50 + 48)];
    sub_251B25B74(v51, (uint64_t)v28, (uint64_t (*)(void))type metadata accessor for Action);
    sub_251B25B74(v191, (uint64_t)v65, (uint64_t (*)(void))type metadata accessor for Action);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v67 = v180;
        sub_251B25B74((uint64_t)v28, v180, (uint64_t (*)(void))type metadata accessor for Action);
        uint64_t v68 = *(void *)v67;
        int v69 = *(unsigned __int8 *)(v67 + 8);
        double v70 = *(double *)(v67 + 16);
        char v71 = *(unsigned char *)(v67 + 24);
        uint64_t v72 = *(void *)(v67 + 32);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v73 = *(void *)v65;
          int v74 = v65[8];
          double v75 = *((double *)v65 + 2);
          unsigned __int8 v76 = v65[24];
          uint64_t v77 = *((void *)v65 + 4);
          if ((sub_251B04848(v68, v73) & 1) == 0 || v69 != v74)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            a2 = v183;
            uint64_t v25 = v165;
            int64_t v28 = v178;
LABEL_59:
            uint64_t v51 = (uint64_t)v187;
LABEL_106:
            sub_251B25BDC((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for Action);
            goto LABEL_27;
          }
          if (v71)
          {
            int64_t v28 = v178;
            if ((v76 & 1) == 0)
            {
LABEL_85:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              a2 = v183;
              uint64_t v25 = v165;
              goto LABEL_59;
            }
          }
          else
          {
            int64_t v28 = v178;
            if ((v76 & 1) != 0 || v70 != v75) {
              goto LABEL_85;
            }
          }
          if (v72)
          {
            a2 = v183;
            uint64_t v25 = v165;
            if (v77)
            {
              swift_bridgeObjectRetain();
              uint64_t v138 = swift_bridgeObjectRetain();
              LODWORD(v184) = sub_251B04D30(v138, v77);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease_n();
              uint64_t v51 = (uint64_t)v187;
              if (v184) {
                goto LABEL_111;
              }
              goto LABEL_106;
            }
          }
          else
          {
            a2 = v183;
            uint64_t v25 = v165;
            if (!v77)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease();
              uint64_t v51 = (uint64_t)v187;
              goto LABEL_111;
            }
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_59;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        int64_t v28 = v178;
        uint64_t v51 = (uint64_t)v187;
        goto LABEL_26;
      case 2u:
        uint64_t v66 = v181;
        sub_251B25B74((uint64_t)v28, v181, (uint64_t (*)(void))type metadata accessor for Action);
        if (swift_getEnumCaseMultiPayload() == 2)
        {
          sub_251B25C90((uint64_t)v65, (uint64_t)v25, type metadata accessor for Action.NaturalLightAction);
          if ((sub_251F34D70() & 1) != 0
            && (sub_251F34D70() & 1) != 0
            && (sub_251B04848(*(void *)(v66 + v167[6]), *(void *)&v25[v167[6]]) & 1) != 0
            && *(unsigned __int8 *)(v66 + v167[7]) == v25[v167[7]])
          {
            uint64_t v78 = v167[8];
            char v79 = (void *)(v66 + v78);
            uint64_t v80 = *(void *)(v66 + v78 + 8);
            uint64_t v81 = &v25[v78];
            uint64_t v82 = *((void *)v81 + 1);
            if (v80)
            {
              if (v82 && (*v79 == *(void *)v81 && v80 == v82 || (sub_251F36B10() & 1) != 0)) {
                goto LABEL_113;
              }
            }
            else if (!v82)
            {
LABEL_113:
              sub_251B25BDC((uint64_t)v25, type metadata accessor for Action.NaturalLightAction);
              sub_251B25BDC(v66, type metadata accessor for Action.NaturalLightAction);
              goto LABEL_111;
            }
          }
          sub_251B25BDC((uint64_t)v25, type metadata accessor for Action.NaturalLightAction);
          sub_251B25BDC(v66, type metadata accessor for Action.NaturalLightAction);
          goto LABEL_106;
        }
        char v62 = type metadata accessor for Action.NaturalLightAction;
        goto LABEL_25;
      case 3u:
        uint64_t v83 = v25;
        unsigned int v84 = v174;
        sub_251B25B74((uint64_t)v28, (uint64_t)v174, (uint64_t (*)(void))type metadata accessor for Action);
        uint64_t v85 = (uint64_t *)*((void *)v84 + 1);
        if (swift_getEnumCaseMultiPayload() != 3)
        {
          swift_bridgeObjectRelease();
          uint64_t v25 = v83;
          a2 = v183;
          goto LABEL_26;
        }
        unint64_t v184 = v85;
        int v86 = *v65;
        unint64_t v87 = (uint64_t *)*((void *)v65 + 1);
        if (*v84 != v86)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v63 = v192;
          uint64_t v25 = v83;
LABEL_73:
          a2 = v183;
          goto LABEL_93;
        }
        unint64_t v96 = v184;
        uint64_t v97 = v184[2];
        uint64_t v25 = v83;
        if (v97 != v87[2])
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v63 = v192;
          goto LABEL_73;
        }
        uint64_t v98 = (uint64_t)v177;
        if (v97 && v184 != v87)
        {
          unint64_t v99 = 0;
          unint64_t v100 = (*(unsigned __int8 *)(v161 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v161 + 80);
          uint64_t v163 = *(void *)(v161 + 72);
          uint64_t v101 = v185;
          uint64_t v102 = (uint64_t)v162;
          uint64_t v168 = v87;
          uint64_t v164 = v97;
          while (1)
          {
            uint64_t v103 = v176;
            sub_251B25B74((uint64_t)v96 + v100, v176, type metadata accessor for ActionCommand);
            if (v99 >= v87[2])
            {
              __break(1u);
LABEL_120:
              __break(1u);
              goto LABEL_121;
            }
            sub_251B25B74((uint64_t)v87 + v100, v102, type metadata accessor for ActionCommand);
            char v104 = sub_251F34D70();
            uint64_t v105 = (uint64_t)v169;
            sub_251B25B74(v103, (uint64_t)v169, type metadata accessor for ActionCommand);
            uint64_t v106 = (uint64_t)v170;
            sub_251B25B74(v102, (uint64_t)v170, type metadata accessor for ActionCommand);
            if ((v104 & 1) == 0) {
              break;
            }
            uint64_t v107 = *(int *)(v101 + 20);
            uint64_t v108 = *(void *)(v105 + v107);
            uint64_t v109 = *(void *)(v106 + v107);
            sub_251B25BDC(v105, type metadata accessor for ActionCommand);
            sub_251B25BDC(v106, type metadata accessor for ActionCommand);
            uint64_t v110 = v175;
            sub_251B25B74(v103, v175, type metadata accessor for ActionCommand);
            sub_251B25B74(v102, v98, type metadata accessor for ActionCommand);
            if (v108 != v109) {
              goto LABEL_90;
            }
            uint64_t v111 = *(int *)(v185 + 24);
            int v112 = *(unsigned __int16 *)(v110 + v111);
            int v113 = *(unsigned __int16 *)(v98 + v111);
            sub_251B25BDC(v110, type metadata accessor for ActionCommand);
            sub_251B25BDC(v98, type metadata accessor for ActionCommand);
            uint64_t v114 = (uint64_t)v171;
            sub_251B25B74(v103, (uint64_t)v171, type metadata accessor for ActionCommand);
            uint64_t v115 = (uint64_t)v172;
            sub_251B25B74(v102, (uint64_t)v172, type metadata accessor for ActionCommand);
            BOOL v116 = v112 == v113;
            uint64_t v101 = v185;
            if (!v116) {
              goto LABEL_91;
            }
            uint64_t v117 = (void *)(v114 + *(int *)(v185 + 28));
            uint64_t v118 = v117[3];
            uint64_t v119 = v117[4];
            __swift_project_boxed_opaque_existential_1(v117, v118);
            LOBYTE(v118) = MatterCommand.isEqual(_:)((void *)(v115 + *(int *)(v101 + 28)), v118, v119);
            sub_251B25BDC(v114, type metadata accessor for ActionCommand);
            sub_251B25BDC(v115, type metadata accessor for ActionCommand);
            sub_251B25BDC(v102, type metadata accessor for ActionCommand);
            sub_251B25BDC(v103, type metadata accessor for ActionCommand);
            uint64_t v50 = v179;
            if ((v118 & 1) == 0) {
              goto LABEL_92;
            }
            ++v99;
            v100 += v163;
            uint64_t v98 = (uint64_t)v177;
            uint64_t v51 = (uint64_t)v187;
            unint64_t v87 = v168;
            unint64_t v96 = v184;
            if (v164 == v99)
            {
              swift_bridgeObjectRelease();
              a2 = v183;
              uint64_t v25 = v165;
              int64_t v28 = v178;
              goto LABEL_110;
            }
          }
          sub_251B25BDC(v105, type metadata accessor for ActionCommand);
          sub_251B25BDC(v106, type metadata accessor for ActionCommand);
          uint64_t v110 = v175;
          sub_251B25B74(v103, v175, type metadata accessor for ActionCommand);
          sub_251B25B74(v102, v98, type metadata accessor for ActionCommand);
LABEL_90:
          sub_251B25BDC(v110, type metadata accessor for ActionCommand);
          sub_251B25BDC(v98, type metadata accessor for ActionCommand);
          uint64_t v114 = (uint64_t)v171;
          sub_251B25B74(v103, (uint64_t)v171, type metadata accessor for ActionCommand);
          uint64_t v115 = (uint64_t)v172;
          sub_251B25B74(v102, (uint64_t)v172, type metadata accessor for ActionCommand);
LABEL_91:
          sub_251B25BDC(v114, type metadata accessor for ActionCommand);
          sub_251B25BDC(v115, type metadata accessor for ActionCommand);
          sub_251B25BDC(v102, type metadata accessor for ActionCommand);
          sub_251B25BDC(v103, type metadata accessor for ActionCommand);
          uint64_t v50 = v179;
LABEL_92:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          a2 = v183;
          uint64_t v25 = v165;
          int64_t v28 = v178;
          uint64_t v51 = (uint64_t)v187;
          unint64_t v63 = v192;
LABEL_93:
          sub_251B25BDC((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for Action);
LABEL_28:
          sub_251B25BDC(v51, (uint64_t (*)(void))type metadata accessor for Action);
          unint64_t v61 = (v63 + 1) & v188;
          if (((*(void *)(v190 + ((v61 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v61) & 1) == 0) {
            goto LABEL_117;
          }
          continue;
        }
        swift_bridgeObjectRelease();
        a2 = v183;
LABEL_110:
        swift_bridgeObjectRelease();
LABEL_111:
        sub_251B25BDC((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for Action);
        sub_251B25BDC(v51, (uint64_t (*)(void))type metadata accessor for Action);
        sub_251B25BDC(v191, (uint64_t (*)(void))type metadata accessor for Action);
        a1 = v158;
        uint64_t v40 = v157;
        uint64_t v43 = v156;
        uint64_t v45 = v155;
        int64_t v44 = v160;
        int64_t v49 = v154;
        unint64_t v48 = v159;
        if (v159) {
          goto LABEL_7;
        }
LABEL_8:
        int64_t v53 = v44 + 1;
        if (__OFADD__(v44, 1)) {
          goto LABEL_120;
        }
        if (v53 < v49)
        {
          unint64_t v54 = *(void *)(v45 + 8 * v53);
          int64_t v55 = v44 + 1;
          if (v54) {
            goto LABEL_21;
          }
          int64_t v55 = v44 + 2;
          if (v44 + 2 < v49)
          {
            unint64_t v54 = *(void *)(v45 + 8 * v55);
            if (v54) {
              goto LABEL_21;
            }
            int64_t v55 = v44 + 3;
            if (v44 + 3 < v49)
            {
              unint64_t v54 = *(void *)(v45 + 8 * v55);
              if (v54) {
                goto LABEL_21;
              }
              uint64_t v56 = v44 + 4;
              if (v44 + 4 < v49)
              {
                unint64_t v54 = *(void *)(v45 + 8 * v56);
                if (v54)
                {
                  int64_t v55 = v44 + 4;
LABEL_21:
                  uint64_t v159 = (v54 - 1) & v54;
                  int64_t v160 = v55;
                  unint64_t v52 = __clz(__rbit64(v54)) + (v55 << 6);
                  goto LABEL_22;
                }
                while (1)
                {
                  int64_t v55 = v56 + 1;
                  if (__OFADD__(v56, 1)) {
                    break;
                  }
                  if (v55 >= v49) {
                    return 1;
                  }
                  unint64_t v54 = *(void *)(v45 + 8 * v55);
                  ++v56;
                  if (v54) {
                    goto LABEL_21;
                  }
                }
LABEL_121:
                __break(1u);
                JUMPOUT(0x251B0939CLL);
              }
            }
          }
        }
        return 1;
      default:
        uint64_t v66 = v182;
        sub_251B25B74((uint64_t)v28, v182, (uint64_t (*)(void))type metadata accessor for Action);
        if (swift_getEnumCaseMultiPayload())
        {
          char v62 = type metadata accessor for Action.CharacteristicAction;
LABEL_25:
          sub_251B25BDC(v66, v62);
LABEL_26:
          sub_251A1B064((uint64_t)v28, &qword_269B9E2F0);
LABEL_27:
          unint64_t v63 = v192;
          goto LABEL_28;
        }
        uint64_t v88 = (uint64_t)v65;
        uint64_t v89 = v173;
        sub_251B25C90(v88, v173, type metadata accessor for Action.CharacteristicAction);
        if ((sub_251F34D70() & 1) == 0) {
          goto LABEL_108;
        }
        uint64_t v90 = v166[5];
        char v91 = *(unsigned char *)(v66 + v90);
        LOBYTE(v90) = *(unsigned char *)(v89 + v90);
        LOBYTE(v195) = v91;
        LOBYTE(v193) = v90;
        unint64_t v92 = CharacteristicKind.rawValue.getter();
        uint64_t v94 = v93;
        if (v92 == CharacteristicKind.rawValue.getter() && v94 == v95)
        {
          swift_bridgeObjectRelease_n();
          uint64_t v89 = v173;
          uint64_t v66 = v182;
        }
        else
        {
          char v120 = sub_251F36B10();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v89 = v173;
          uint64_t v66 = v182;
          if ((v120 & 1) == 0) {
            goto LABEL_108;
          }
        }
        uint64_t v121 = v166[6];
        char v122 = *(unsigned char *)(v66 + v121 + 16);
        long long v195 = *(_OWORD *)(v66 + v121);
        char v196 = v122;
        char v123 = (long long *)(v89 + v121);
        char v124 = *((unsigned char *)v123 + 16);
        long long v193 = *v123;
        char v194 = v124;
        if ((_s13HomeDataModel18CharacteristicKindO5ValueO2eeoiySbAE_AEtFZ_0((uint64_t)&v195, (uint64_t)&v193) & 1) == 0) {
          goto LABEL_108;
        }
        uint64_t v125 = v166[7];
        uint64_t v126 = v89;
        uint64_t v127 = v66 + v125;
        uint64_t v128 = v126 + v125;
        uint64_t v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21E6B8);
        uint64_t v130 = MEMORY[0x270FA5388](v129 - 8);
        unint64_t v132 = (char *)&v153 - ((v131 + 15) & 0xFFFFFFFFFFFFFFF0);
        uint64_t v133 = (uint64_t)&v132[*(int *)(v130 + 56)];
        sub_251A1B128(v127, (uint64_t)v132, &qword_26B21FF90);
        sub_251A1B128(v128, v133, &qword_26B21FF90);
        uint64_t v134 = sub_251F34DA0();
        uint64_t v135 = *(void *)(v134 - 8);
        uint64_t v136 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v135 + 48);
        if (v136((uint64_t)v132, 1, v134) == 1)
        {
          int v137 = v136(v133, 1, v134);
          int64_t v28 = v178;
          if (v137 == 1)
          {
            sub_251A1B064((uint64_t)v132, &qword_26B21FF90);
            a2 = v183;
            uint64_t v25 = v165;
            uint64_t v89 = v173;
            uint64_t v66 = v182;
LABEL_97:
            uint64_t v147 = v166[8];
            uint64_t v148 = (void *)(v66 + v147);
            uint64_t v149 = *(void *)(v66 + v147 + 8);
            uint64_t v150 = (void *)(v89 + v147);
            uint64_t v151 = v150[1];
            if (v149)
            {
              if (v151 && (*v148 == *v150 && v149 == v151 || (sub_251F36B10() & 1) != 0)) {
                goto LABEL_114;
              }
            }
            else if (!v151)
            {
LABEL_114:
              sub_251B25BDC(v89, type metadata accessor for Action.CharacteristicAction);
              sub_251B25BDC(v66, type metadata accessor for Action.CharacteristicAction);
              uint64_t v51 = (uint64_t)v187;
              goto LABEL_111;
            }
LABEL_108:
            sub_251B25BDC(v89, type metadata accessor for Action.CharacteristicAction);
            sub_251B25BDC(v66, type metadata accessor for Action.CharacteristicAction);
            sub_251B25BDC((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for Action);
            uint64_t v51 = (uint64_t)v187;
            goto LABEL_27;
          }
        }
        else
        {
          uint64_t v139 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B21FF90);
          unint64_t v184 = &v153;
          MEMORY[0x270FA5388](v139 - 8);
          uint64_t v141 = (char *)&v153 - ((v140 + 15) & 0xFFFFFFFFFFFFFFF0);
          sub_251A1B128((uint64_t)v132, (uint64_t)v141, &qword_26B21FF90);
          uint64_t v142 = v136(v133, 1, v134);
          if (v142 != 1)
          {
            MEMORY[0x270FA5388](v142);
            unint64_t v144 = (char *)&v153 - ((v143 + 15) & 0xFFFFFFFFFFFFFFF0);
            (*(void (**)(char *, uint64_t, uint64_t))(v135 + 32))(v144, v133, v134);
            sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
            char v145 = sub_251F35650();
            uint64_t v146 = *(void (**)(char *, uint64_t))(v135 + 8);
            v146(v144, v134);
            v146(v141, v134);
            sub_251A1B064((uint64_t)v132, &qword_26B21FF90);
            a2 = v183;
            uint64_t v25 = v165;
            uint64_t v89 = v173;
            int64_t v28 = v178;
            uint64_t v66 = v182;
            if ((v145 & 1) == 0) {
              goto LABEL_108;
            }
            goto LABEL_97;
          }
          (*(void (**)(char *, uint64_t))(v135 + 8))(v141, v134);
          int64_t v28 = v178;
        }
        sub_251A1B064((uint64_t)v132, &qword_26B21E6B8);
        a2 = v183;
        uint64_t v25 = v165;
        uint64_t v89 = v173;
        uint64_t v66 = v182;
        goto LABEL_108;
    }
  }
}

uint64_t sub_251B093AC(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 56;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(result + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v10 = a2 + 56;
  do
  {
LABEL_7:
    if (v8)
    {
      unint64_t v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v12 = v11 | (v4 << 6);
      goto LABEL_23;
    }
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
LABEL_33:
      __break(1u);
      return result;
    }
    if (v13 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v13);
    ++v4;
    if (v14) {
      goto LABEL_22;
    }
    int64_t v4 = v13 + 1;
    if (v13 + 1 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    if (v14) {
      goto LABEL_22;
    }
    int64_t v4 = v13 + 2;
    if (v13 + 2 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    if (v14) {
      goto LABEL_22;
    }
    int64_t v15 = v13 + 3;
    if (v15 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t v4 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_33;
        }
        if (v4 >= v9) {
          return 1;
        }
        unint64_t v14 = *(void *)(v5 + 8 * v4);
        ++v15;
        if (v14) {
          goto LABEL_22;
        }
      }
    }
    int64_t v4 = v15;
LABEL_22:
    unint64_t v8 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v4 << 6);
LABEL_23:
    int v16 = *(unsigned __int8 *)(*(void *)(v3 + 48) + v12);
    sub_251F36CA0();
    sub_251F36CB0();
    uint64_t result = sub_251F36D00();
    uint64_t v17 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v18 = result & ~v17;
    if (((*(void *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
      return 0;
    }
    uint64_t v19 = *(void *)(a2 + 48);
  }
  while (*(unsigned __int8 *)(v19 + v18) == v16);
  uint64_t v20 = ~v17;
  while (1)
  {
    unint64_t v18 = (v18 + 1) & v20;
    if (((*(void *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
      return 0;
    }
    if (*(unsigned __int8 *)(v19 + v18) == v16) {
      goto LABEL_7;
    }
  }
}

uint64_t sub_251B09590(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v4 = result + 56;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(result + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v32 = a2 + 56;
  uint64_t v28 = result + 56;
  uint64_t v29 = result;
  int64_t v27 = v8;
  if (!v7) {
    goto LABEL_9;
  }
LABEL_7:
  uint64_t v30 = (v7 - 1) & v7;
  int64_t v31 = v3;
  for (unint64_t i = __clz(__rbit64(v7)) | (v3 << 6); ; unint64_t i = __clz(__rbit64(v11)) + (v12 << 6))
  {
    unint64_t v14 = (uint64_t *)(*(void *)(result + 48) + 32 * i);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    uint64_t v17 = v14[2];
    uint64_t v18 = v14[3];
    sub_251F36CA0();
    sub_251F36CB0();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_251F357B0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_251A54AB8((uint64_t)v33, v18);
    swift_bridgeObjectRelease();
    uint64_t v19 = sub_251F36D00();
    uint64_t v20 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v21 = v19 & ~v20;
    if (((*(void *)(v32 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
    {
LABEL_35:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
    uint64_t v22 = ~v20;
    while (1)
    {
      uint64_t v25 = (void *)(*(void *)(a2 + 48) + 32 * v21);
      if (*v25 == v15)
      {
        BOOL v26 = v25[1] == v16 && v25[2] == v17;
        if (v26 || (sub_251F36B10() & 1) != 0)
        {
          swift_bridgeObjectRetain();
          uint64_t v23 = swift_bridgeObjectRetain();
          char v24 = sub_251B056E8(v23, v18);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v24) {
            break;
          }
        }
      }
      unint64_t v21 = (v21 + 1) & v22;
      if (((*(void *)(v32 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
        goto LABEL_35;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = v28;
    uint64_t result = v29;
    int64_t v8 = v27;
    unint64_t v7 = v30;
    int64_t v3 = v31;
    if (v30) {
      goto LABEL_7;
    }
LABEL_9:
    int64_t v10 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v10 >= v8) {
      return 1;
    }
    unint64_t v11 = *(void *)(v4 + 8 * v10);
    int64_t v12 = v3 + 1;
    if (!v11)
    {
      int64_t v12 = v10 + 1;
      if (v10 + 1 >= v8) {
        return 1;
      }
      unint64_t v11 = *(void *)(v4 + 8 * v12);
      if (!v11)
      {
        int64_t v12 = v10 + 2;
        if (v10 + 2 >= v8) {
          return 1;
        }
        unint64_t v11 = *(void *)(v4 + 8 * v12);
        if (!v11) {
          break;
        }
      }
    }
LABEL_22:
    uint64_t v30 = (v11 - 1) & v11;
    int64_t v31 = v12;
  }
  int64_t v13 = v10 + 3;
  if (v13 >= v8) {
    return 1;
  }
  unint64_t v11 = *(void *)(v4 + 8 * v13);
  if (v11)
  {
    int64_t v12 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v12 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v12 >= v8) {
      return 1;
    }
    unint64_t v11 = *(void *)(v4 + 8 * v12);
    ++v13;
    if (v11) {
      goto LABEL_22;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_251B09868(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = *(void *)(result + 56);
  uint64_t v25 = result + 56;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & v5;
  int64_t v26 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v9 = a2 + 56;
  if ((v7 & v5) == 0) {
    goto LABEL_8;
  }
  while (2)
  {
    unint64_t v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v11 = v10 | (v4 << 6);
LABEL_22:
    uint64_t v15 = *(void *)(*(void *)(v3 + 48) + 8 * v11);
    sub_251F36CA0();
    int64_t v27 = v4;
    if (v15 == 2 || v15 == 1)
    {
      sub_251F36CB0();
    }
    else
    {
      sub_251F36CB0();
      sub_251F36CC0();
      if (v15)
      {
        swift_bridgeObjectRetain_n();
        sub_251A54708(v28, v15);
        sub_251A58144(v15);
      }
    }
    uint64_t v16 = sub_251F36D00();
    uint64_t v17 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v18 = v16 & ~v17;
    if (((*(void *)(v9 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
    {
LABEL_53:
      sub_251A58144(v15);
      return 0;
    }
    uint64_t v19 = ~v17;
    while (1)
    {
      uint64_t v20 = *(void *)(a2 + 48);
      uint64_t v21 = *(void *)(v20 + 8 * v18);
      if (v21 == 2)
      {
        if (v15 == 2)
        {
LABEL_48:
          sub_251A58144(*(void *)(v20 + 8 * v18));
          goto LABEL_49;
        }
        goto LABEL_36;
      }
      if (v21 == 1)
      {
        if (v15 == 1) {
          goto LABEL_48;
        }
LABEL_36:
        sub_251A81FDC(v15);
        sub_251A81FDC(v21);
        uint64_t v22 = v15;
        goto LABEL_37;
      }
      if ((unint64_t)(v15 - 1) < 2) {
        goto LABEL_36;
      }
      if (!v21) {
        break;
      }
      if (!v15)
      {
        sub_251A81FDC(0);
        sub_251A81FDC(v21);
LABEL_47:
        uint64_t v22 = 0;
LABEL_37:
        sub_251A58144(v21);
        sub_251A58144(v22);
        goto LABEL_38;
      }
      sub_251A81FDC(*(void *)(v20 + 8 * v18));
      sub_251A81FDC(v21);
      sub_251A81FDC(v15);
      sub_251A81FDC(v21);
      sub_251A81FDC(v15);
      sub_251A81FDC(v21);
      sub_251A81FDC(v15);
      sub_251A81FDC(v21);
      char v23 = sub_251B04848(v21, v15);
      sub_251A58144(v21);
      sub_251A58144(v15);
      sub_251A58144(v15);
      sub_251A58144(v21);
      sub_251A58144(v21);
      sub_251A58144(v15);
      sub_251A58144(v21);
      sub_251A58144(v21);
      if (v23)
      {
        uint64_t v21 = v15;
        goto LABEL_49;
      }
LABEL_38:
      unint64_t v18 = (v18 + 1) & v19;
      if (((*(void *)(v9 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
        goto LABEL_53;
      }
    }
    uint64_t v24 = swift_bridgeObjectRetain();
    sub_251A81FDC(v24);
    sub_251A81FDC(0);
    sub_251A81FDC(v15);
    sub_251A81FDC(0);
    sub_251A58144(0);
    sub_251A58144(v15);
    sub_251A58144(0);
    if (v15)
    {
      sub_251A58144(v15);
      sub_251A58144(v15);
      uint64_t v21 = 0;
      goto LABEL_47;
    }
    uint64_t v21 = 0;
LABEL_49:
    uint64_t result = sub_251A58144(v21);
    int64_t v4 = v27;
    if (v8) {
      continue;
    }
    break;
  }
LABEL_8:
  int64_t v12 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_56;
  }
  if (v12 >= v26) {
    return 1;
  }
  unint64_t v13 = *(void *)(v25 + 8 * v12);
  ++v4;
  if (v13) {
    goto LABEL_21;
  }
  int64_t v4 = v12 + 1;
  if (v12 + 1 >= v26) {
    return 1;
  }
  unint64_t v13 = *(void *)(v25 + 8 * v4);
  if (v13) {
    goto LABEL_21;
  }
  int64_t v4 = v12 + 2;
  if (v12 + 2 >= v26) {
    return 1;
  }
  unint64_t v13 = *(void *)(v25 + 8 * v4);
  if (v13) {
    goto LABEL_21;
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v26) {
    return 1;
  }
  unint64_t v13 = *(void *)(v25 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
LABEL_21:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v26) {
      return 1;
    }
    unint64_t v13 = *(void *)(v25 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_21;
    }
  }
LABEL_56:
  __break(1u);
  return result;
}

void sub_251B09C6C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = a2 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0) {
      uint64_t v5 = a1;
    }
    else {
      uint64_t v5 = a1 & 0xFFFFFFFFFFFFFF8;
    }
    if (v4)
    {
      if (a2 < 0) {
        uint64_t v6 = a2;
      }
      else {
        uint64_t v6 = a2 & 0xFFFFFFFFFFFFFF8;
      }
      goto LABEL_55;
    }
    uint64_t v7 = v5;
    uint64_t v8 = a2;
    goto LABEL_18;
  }
  if (v4)
  {
    if (a2 < 0) {
      uint64_t v7 = a2;
    }
    else {
      uint64_t v7 = a2 & 0xFFFFFFFFFFFFFF8;
    }
    uint64_t v8 = a1;
LABEL_18:
    sub_251B1DFEC(v7, v8);
    return;
  }
  if (a1 == a2 || *(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return;
  }
  uint64_t v28 = a1 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(a1 + 32);
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(a1 + 56);
  uint64_t v6 = sub_251A1A568(0, (unint64_t *)&qword_26B21F170);
  int64_t v12 = 0;
  int64_t v29 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = a2 + 56;
  while (1)
  {
    if (v11)
    {
      unint64_t v14 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_44;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_54;
    }
    if (v16 >= v29) {
      return;
    }
    unint64_t v17 = *(void *)(v28 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v29) {
        return;
      }
      unint64_t v17 = *(void *)(v28 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v29) {
          return;
        }
        unint64_t v17 = *(void *)(v28 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_43:
    unint64_t v11 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_44:
    id v19 = *(id *)(*(void *)(a1 + 48) + 8 * v15);
    uint64_t v20 = sub_251F36110();
    uint64_t v21 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v22 = v20 & ~v21;
    if (((*(void *)(v13 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) == 0) {
      goto LABEL_51;
    }
    int64_t v30 = v12;
    id v23 = *(id *)(*(void *)(a2 + 48) + 8 * v22);
    char v24 = sub_251F36120();

    if ((v24 & 1) == 0)
    {
      uint64_t v25 = ~v21;
      while (1)
      {
        unint64_t v22 = (v22 + 1) & v25;
        if (((*(void *)(v13 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) == 0) {
          break;
        }
        id v26 = *(id *)(*(void *)(a2 + 48) + 8 * v22);
        char v27 = sub_251F36120();

        if (v27) {
          goto LABEL_27;
        }
      }
LABEL_51:

      return;
    }
LABEL_27:

    int64_t v12 = v30;
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29) {
    return;
  }
  unint64_t v17 = *(void *)(v28 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_43;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v29) {
      return;
    }
    unint64_t v17 = *(void *)(v28 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_43;
    }
  }
LABEL_54:
  __break(1u);
LABEL_55:
  MEMORY[0x270F9E868](v6, v5);
}

uint64_t sub_251B09F88(uint64_t a1, uint64_t a2)
{
  uint64_t v64 = type metadata accessor for StaticZone();
  uint64_t v4 = MEMORY[0x270FA5388](v64);
  uint64_t v6 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  uint64_t v66 = (uint64_t)&v51 - v8;
  uint64_t result = MEMORY[0x270FA5388](v7);
  int64_t v12 = (char *)&v51 - v11;
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v13 = 0;
  uint64_t v14 = *(void *)(a1 + 56);
  uint64_t v51 = a1 + 56;
  uint64_t v15 = 1 << *(unsigned char *)(a1 + 32);
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v14;
  int64_t v52 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v63 = a2 + 56;
  uint64_t v62 = a2;
  uint64_t v55 = a1;
  uint64_t v54 = v10;
  uint64_t v68 = v6;
  int64_t v53 = v12;
  if (!v17) {
    goto LABEL_8;
  }
LABEL_7:
  uint64_t v56 = (v17 - 1) & v17;
  int64_t v57 = v13;
  for (unint64_t i = __clz(__rbit64(v17)) | (v13 << 6); ; unint64_t i = __clz(__rbit64(v20)) + (v21 << 6))
  {
    uint64_t v23 = *(void *)(a1 + 48);
    uint64_t v65 = *(void *)(v10 + 72);
    sub_251B25B74(v23 + v65 * i, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for StaticZone);
    uint64_t v24 = (uint64_t)v12;
    uint64_t v25 = v66;
    sub_251B25C90(v24, v66, (uint64_t (*)(void))type metadata accessor for StaticZone);
    sub_251F36CA0();
    uint64_t v26 = sub_251F34DA0();
    sub_251A1A8EC((unint64_t *)&qword_26B21F2B0);
    sub_251F35610();
    uint64_t v27 = v64;
    uint64_t v60 = (void *)(v25 + *(int *)(v64 + 20));
    sub_251F357B0();
    uint64_t v59 = *(int *)(v27 + 24);
    sub_251A41A94((uint64_t)v77, *(void *)(v25 + v59));
    uint64_t v28 = sub_251F36D00();
    uint64_t v29 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v30 = v28 & ~v29;
    if (((*(void *)(v63 + ((v30 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v30) & 1) == 0)
    {
LABEL_43:
      sub_251B25BDC(v66, (uint64_t (*)(void))type metadata accessor for StaticZone);
      return 0;
    }
    uint64_t v61 = ~v29;
    uint64_t v58 = (uint64_t *)(v26 - 8);
    while (1)
    {
      uint64_t v31 = *(void *)(a2 + 48);
      unint64_t v67 = v30;
      sub_251B25B74(v31 + v30 * v65, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for StaticZone);
      if (sub_251F34D70())
      {
        uint64_t v32 = (uint64_t *)&v68[*(int *)(v64 + 20)];
        uint64_t v33 = *v32;
        BOOL v34 = *v32 == *v60 && v32[1] == v60[1];
        if (v34 || (uint64_t v33 = sub_251F36B10(), (v33 & 1) != 0))
        {
          uint64_t v35 = *(void *)&v68[*(int *)(v64 + 24)];
          uint64_t v36 = *(void *)(v66 + v59);
          uint64_t v37 = *(void *)(v36 + 16);
          uint64_t v72 = *(void *)(v35 + 16);
          uint64_t v73 = v35;
          if (v72 == v37) {
            break;
          }
        }
      }
LABEL_26:
      uint64_t v6 = v68;
      sub_251B25BDC((uint64_t)v68, (uint64_t (*)(void))type metadata accessor for StaticZone);
      unint64_t v30 = (v67 + 1) & v61;
      a2 = v62;
      if (((*(void *)(v63 + ((v30 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v30) & 1) == 0) {
        goto LABEL_43;
      }
    }
    if (v72)
    {
      uint64_t v38 = *v58;
      if (v73 != v36)
      {
        unint64_t v39 = 0;
        unint64_t v40 = (*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
        uint64_t v41 = v38 + 16;
        uint64_t v42 = *(void (**)(char *, unint64_t, uint64_t))(v38 + 16);
        uint64_t v43 = *(void *)(v38 + 64);
        uint64_t v69 = *(void *)(v38 + 72);
        double v70 = (void (**)(char *, uint64_t))(v38 + 8);
        uint64_t v71 = v43;
        while (1)
        {
          unsigned __int8 v76 = &v51;
          uint64_t v44 = v71;
          MEMORY[0x270FA5388](v33);
          unint64_t v45 = (v44 + 15) & 0xFFFFFFFFFFFFFFF0;
          v42((char *)&v51 - v45, v73 + v40, v26);
          uint64_t result = MEMORY[0x270FA5388](&v51);
          if (v39 >= *(void *)(v36 + 16)) {
            break;
          }
          uint64_t v75 = result;
          uint64_t v46 = v42;
          uint64_t v47 = v41;
          unint64_t v48 = v46;
          v46((char *)&v51 - v45, v36 + v40, v26);
          sub_251A1A8EC((unint64_t *)&qword_26B21F2B8);
          int v74 = sub_251F35650();
          uint64_t v49 = v36;
          uint64_t v50 = *v70;
          (*v70)((char *)&v51 - v45, v26);
          uint64_t v33 = ((uint64_t (*)(char *, uint64_t))v50)((char *)&v51 - v45, v26);
          if ((v74 & 1) == 0) {
            goto LABEL_26;
          }
          uint64_t v36 = v49;
          ++v39;
          v40 += v69;
          uint64_t v41 = v47;
          uint64_t v42 = v48;
          if (v72 == v39) {
            goto LABEL_40;
          }
        }
        __break(1u);
LABEL_46:
        __break(1u);
        goto LABEL_47;
      }
    }
LABEL_40:
    uint64_t v6 = v68;
    sub_251B25BDC((uint64_t)v68, (uint64_t (*)(void))type metadata accessor for StaticZone);
    uint64_t result = sub_251B25BDC(v66, (uint64_t (*)(void))type metadata accessor for StaticZone);
    a2 = v62;
    a1 = v55;
    uint64_t v10 = v54;
    int64_t v12 = v53;
    int64_t v13 = v57;
    unint64_t v17 = v56;
    if (v56) {
      goto LABEL_7;
    }
LABEL_8:
    int64_t v19 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      goto LABEL_46;
    }
    if (v19 >= v52) {
      return 1;
    }
    unint64_t v20 = *(void *)(v51 + 8 * v19);
    int64_t v21 = v13 + 1;
    if (!v20)
    {
      int64_t v21 = v13 + 2;
      if (v13 + 2 >= v52) {
        return 1;
      }
      unint64_t v20 = *(void *)(v51 + 8 * v21);
      if (!v20)
      {
        int64_t v21 = v13 + 3;
        if (v13 + 3 >= v52) {
          return 1;
        }
        unint64_t v20 = *(void *)(v51 + 8 * v21);
        if (!v20)
        {
          int64_t v21 = v13 + 4;
          if (v13 + 4 >= v52) {
            return 1;
          }
          unint64_t v20 = *(void *)(v51 + 8 * v21);
          if (!v20) {
            break;
          }
        }
      }
    }
LABEL_23:
    uint64_t v56 = (v20 - 1) & v20;
    int64_t v57 = v21;
  }
  uint64_t v22 = v13 + 5;
  if (v13 + 5 >= v52) {
    return 1;
  }
  unint64_t v20 = *(void *)(v51 + 8 * v22);
  if (v20)
  {
    int64_t v21 = v13 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v21 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v21 >= v52) {
      return 1;
    }
    unint64_t v20 = *(void *)(v51 + 8 * v21);
    ++v22;
    if (v20) {
      goto LABEL_23;
    }
  }
LABEL_47:
  __break(1u);
  return result;
}

uint64_t sub_251B0A6D4(void (*a1)(uint64_t *__return_ptr, char *), uint64_t a2, uint64_t a3)
{
  uint64_t v26 = a2;
  uint64_t v6 = type metadata accessor for StaticAccessory(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  int64_t v12 = (char *)&v24 - v11;
  uint64_t v28 = MEMORY[0x263F8EE78];
  uint64_t v13 = *(void *)(a3 + 56);
  uint64_t v24 = a3 + 56;
  uint64_t v14 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v13;
  int64_t v25 = (unint64_t)(v14 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v18 = 0;
  if (!v16) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v19 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  for (unint64_t i = v19 | (v18 << 6); ; unint64_t i = __clz(__rbit64(v22)) + (v18 << 6))
  {
    sub_251B25B74(*(void *)(a3 + 48) + *(void *)(v7 + 72) * i, (uint64_t)v12, type metadata accessor for StaticAccessory);
    sub_251B25C90((uint64_t)v12, (uint64_t)v10, type metadata accessor for StaticAccessory);
    a1(&v27, v10);
    sub_251B25BDC((uint64_t)v10, type metadata accessor for StaticAccessory);
    if (v3)
    {
      swift_release();
      return swift_bridgeObjectRelease();
    }
    uint64_t result = sub_251ED628C(v27);
    if (v16) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v18++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v25) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v24 + 8 * v18);
    if (!v22) {
      break;
    }
LABEL_17:
    unint64_t v16 = (v22 - 1) & v22;
  }
  int64_t v23 = v18 + 1;
  if (v18 + 1 >= v25) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v24 + 8 * v23);
  if (v22) {
    goto LABEL_16;
  }
  int64_t v23 = v18 + 2;
  if (v18 + 2 >= v25) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v24 + 8 * v23);
  if (v22) {
    goto LABEL_16;
  }
  int64_t v23 = v18 + 3;
  if (v18 + 3 >= v25) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v24 + 8 * v23);
  if (v22) {
    goto LABEL_16;
  }
  int64_t v23 = v18 + 4;
  if (v18 + 4 >= v25)
  {
LABEL_26:
    swift_release();
    return v28;
  }
  unint64_t v22 = *(void *)(v24 + 8 * v23);
  if (v22)
  {
LABEL_16:
    int64_t v18 = v23;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v18 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v18 >= v25) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v24 + 8 * v18);
    ++v23;
    if (v22) {
      goto LABEL_17;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}